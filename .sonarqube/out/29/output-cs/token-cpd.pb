ï«
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_PackageUtilities.cs
	namespace 	
TMPro
 
{ 
[ 
System 
. 
Serializable 
] 
struct 
!
AssetConversionRecord  
{ 
public 
string 
referencedResource (
;( )
public 
string 
target 
; 
public 
string 
replacement !
;! "
} 
[!! 
System!! 
.!! 
Serializable!! 
]!! 
class"" 	
AssetConversionData""
 
{## 
public$$ 
List$$ 
<$$ !
AssetConversionRecord$$ )
>$$) *
assetRecords$$+ 7
;$$7 8
}%% 
public(( 

class(( (
TMP_ProjectConversionUtility(( -
:((. /
EditorWindow((0 <
{)) 
[++ 	
MenuItem++	 
(++ 
$str++ H
,++H I
false++J O
,++O P
$num++Q U
)++U V
]++V W
static,, 
void,, 
ShowConverterWindow,, '
(,,' (
),,( )
{-- 	
var.. 
window.. 
=.. 
	GetWindow.. "
<.." #(
TMP_ProjectConversionUtility..# ?
>..? @
(..@ A
)..A B
;..B C
window// 
.// 
titleContent// 
=//  !
new//" %

GUIContent//& 0
(//0 1
$str//1 B
)//B C
;//C D
window00 
.00 
Focus00 
(00 
)00 
;00 
}11 	
private33 
static33 
HashSet33 
<33 
Type33 #
>33# $
m_IgnoreAssetTypes33% 7
=338 9
new33: =
HashSet33> E
<33E F
Type33F J
>33J K
(33K L
)33L M
{44 	
typeof55 
(55 &
AnimatorOverrideController55 -
)55- .
,55. /
typeof66 
(66 
	AudioClip66 
)66 
,66 
typeof77 
(77 

AvatarMask77 
)77 
,77 
typeof88 
(88 
ComputeShader88  
)88  !
,88! "
typeof99 
(99 
Cubemap99 
)99 
,99 
typeof:: 
(:: 
DefaultAsset:: 
)::  
,::  !
typeof;; 
(;; 
Flare;; 
);; 
,;; 
typeof<< 
(<< 
Font<< 
)<< 
,<< 
typeof== 
(== 
GUISkin== 
)== 
,== 
typeof>> 
(>> 
HumanTemplate>>  
)>>  !
,>>! "
typeof?? 
(?? 
LightingDataAsset?? $
)??$ %
,??% &
typeof@@ 
(@@ 
Mesh@@ 
)@@ 
,@@ 
typeofAA 
(AA 

MonoScriptAA 
)AA 
,AA 
typeofBB 
(BB 
PhysicMaterialBB !
)BB! "
,BB" #
typeofCC 
(CC 
PhysicsMaterial2DCC $
)CC$ %
,CC% &
typeofDD 
(DD 
RenderTextureDD  
)DD  !
,DD! "
typeofEE 
(EE 
ShaderEE 
)EE 
,EE 
typeofFF 
(FF 
TerrainDataFF 
)FF 
,FF  
typeofGG 
(GG 
	TextAssetGG 
)GG 
,GG 
typeofHH 
(HH 
	Texture2DHH 
)HH 
,HH 
typeofII 
(II 
Texture2DArrayII !
)II! "
,II" #
typeofJJ 
(JJ 
	Texture3DJJ 
)JJ 
,JJ 
typeofKK 
(KK 
UnityEditorInternalKK &
.KK& '#
AssemblyDefinitionAssetKK' >
)KK> ?
,KK? @
typeofLL 
(LL 
UnityEngineLL 
.LL 
AILL !
.LL! "
NavMeshDataLL" -
)LL- .
,LL. /
typeofMM 
(MM 
UnityEngineMM 
.MM 
TilemapsMM '
.MM' (
TileMM( ,
)MM, -
,MM- .
typeofNN 
(NN 
UnityEngineNN 
.NN 
U2DNN "
.NN" #
SpriteAtlasNN# .
)NN. /
,NN/ 0
typeofOO 
(OO 
UnityEngineOO 
.OO 
VideoOO $
.OO$ %
	VideoClipOO% .
)OO. /
,OO/ 0
}PP 	
;PP	 

structUU #
AssetModificationRecordUU &
{VV 	
publicWW 
stringWW 
assetFilePathWW '
;WW' (
publicXX 
stringXX 
assetDataFileXX '
;XX' (
}YY 	
struct[[ 
AssetFileRecord[[ 
{\\ 	
public]] 
string]] 
assetFilePath]] '
;]]' (
public^^ 
string^^ 
assetMetaFilePath^^ +
;^^+ ,
public`` 
AssetFileRecord`` "
(``" #
string``# )
filePath``* 2
,``2 3
string``4 :
metaFilePath``; G
)``G H
{aa 
thisbb 
.bb 
assetFilePathbb "
=bb# $
filePathbb% -
;bb- .
thiscc 
.cc 
assetMetaFilePathcc &
=cc' (
metaFilePathcc) 5
;cc5 6
}dd 
}ee 	
privategg 
staticgg 
stringgg 
m_ProjectPathgg +
;gg+ ,
privatehh 
statichh 
stringhh !
m_ProjectFolderToScanhh 3
;hh3 4
privateii 
staticii 
boolii &
m_IsAlreadyScanningProjectii 6
;ii6 7
privatejj 
staticjj 
booljj 
m_CancelScanProcessjj /
;jj/ 0
privatekk 
statickk 
stringkk *
k_ProjectScanReportDefaultTextkk <
=kk= >
$strkk? u
;kku v
privatell 
staticll 
stringll $
k_ProjectScanLabelPrefixll 6
=ll7 8
$strll9 E
;llE F
privatemm 
staticmm 
stringmm  
m_ProjectScanResultsmm 2
=mm3 4
stringmm5 ;
.mm; <
Emptymm< A
;mmA B
privatenn 
staticnn 
Vector2nn -
!m_ProjectScanResultScrollPositionnn @
;nn@ A
privateoo 
staticoo 
floatoo  
m_ProgressPercentageoo 1
=oo2 3
$numoo4 5
;oo5 6
privateqq 
staticqq 
intqq  
m_ScanningTotalFilesqq /
;qq/ 0
privaterr 
staticrr 
intrr "
m_RemainingFilesToScanrr 1
;rr1 2
privatess 
staticss 
intss &
m_ScanningCurrentFileIndexss 5
;ss5 6
privatett 
statictt 
stringtt %
m_ScanningCurrentFileNamett 7
;tt7 8
privatevv 
staticvv 
AssetConversionDatavv *
m_ConversionDatavv+ ;
;vv; <
privatexx 
staticxx 
Listxx 
<xx #
AssetModificationRecordxx 3
>xx3 4
m_ModifiedAssetListxx5 H
=xxI J
newxxK N
ListxxO S
<xxS T#
AssetModificationRecordxxT k
>xxk l
(xxl m
)xxm n
;xxn o
void{{ 
OnEnable{{ 
({{ 
){{ 
{|| 	
SetEditorWindowSize~~ 
(~~  
)~~  !
;~~! ""
m_ProjectScanResults
ÄÄ  
=
ÄÄ! ",
k_ProjectScanReportDefaultText
ÄÄ# A
;
ÄÄA B
}
ÅÅ 	
void
ÑÑ 
OnGUI
ÑÑ 
(
ÑÑ 
)
ÑÑ 
{
ÖÖ 	
	GUILayout
ÜÜ 
.
ÜÜ 
BeginVertical
ÜÜ #
(
ÜÜ# $
)
ÜÜ$ %
;
ÜÜ% &
{
áá 
	GUILayout
ââ 
.
ââ 
BeginVertical
ââ '
(
ââ' (
EditorStyles
ââ( 4
.
ââ4 5
helpBox
ââ5 <
)
ââ< =
;
ââ= >
{
ää 
	GUILayout
ãã 
.
ãã 
Label
ãã #
(
ãã# $
$str
ãã$ 8
,
ãã8 9
EditorStyles
ãã: F
.
ããF G
	boldLabel
ããG P
)
ããP Q
;
ããQ R
	GUILayout
åå 
.
åå 
Label
åå #
(
åå# $
$stråå$ ¿
,åå¿ ¡"
TMP_UIStyleManageråå¬ ‘
.åå‘ ’
labelåå’ ⁄
)åå⁄ €
;åå€ ‹
	GUILayout
çç 
.
çç 
Space
çç #
(
çç# $
$num
çç$ '
)
çç' (
;
çç( )
	GUILayout
éé 
.
éé 
Label
éé #
(
éé# $
$str
éé$ c
)
ééc d
;
ééd e#
m_ProjectFolderToScan
èè )
=
èè* +
EditorGUILayout
èè, ;
.
èè; <
	TextField
èè< E
(
èèE F
$str
èèF a
,
èèa b#
m_ProjectFolderToScan
èèc x
)
èèx y
;
èèy z
	GUILayout
êê 
.
êê 
Space
êê #
(
êê# $
$num
êê$ &
)
êê& '
;
êê' (
GUI
íí 
.
íí 
enabled
íí 
=
íí  !(
m_IsAlreadyScanningProject
íí" <
==
íí= ?
false
íí@ E
?
ííF G
true
ííH L
:
ííM N
false
ííO T
;
ííT U
if
ìì 
(
ìì 
	GUILayout
ìì !
.
ìì! "
Button
ìì" (
(
ìì( )
$str
ìì) =
)
ìì= >
)
ìì> ?
{
îî !
m_CancelScanProcess
ïï +
=
ïï, -
false
ïï. 3
;
ïï3 4
if
òò 
(
òò <
.CheckProjectSerializationAndSourceControlModes
òò J
(
òòJ K
)
òòK L
==
òòM O
true
òòP T
)
òòT U
{
ôô 
m_ProjectPath
öö )
=
öö* +
Path
öö, 0
.
öö0 1
GetFullPath
öö1 <
(
öö< =
$str
öö= H
)
ööH I
;
ööI J!
TMP_EditorCoroutine
õõ /
.
õõ/ 0
StartCoroutine
õõ0 >
(
õõ> ?
ScanProjectFiles
õõ? O
(
õõO P
)
õõP Q
)
õõQ R
;
õõR S
}
úú 
else
ùù 
{
ûû 
EditorUtility
üü )
.
üü) *
DisplayDialog
üü* 7
(
üü7 8
$str
üü8 Z
,
üüZ [
$strüü\ ˆ
,üüˆ ˜
$strüü¯ ¸
,üü¸ ˝
stringüü˛ Ñ
.üüÑ Ö
EmptyüüÖ ä
)üüä ã
;üüã å
}
†† 
}
°° 
GUI
¢¢ 
.
¢¢ 
enabled
¢¢ 
=
¢¢  !
true
¢¢" &
;
¢¢& '
Rect
•• 
rect
•• 
=
•• 
GUILayoutUtility
••  0
.
••0 1
GetRect
••1 8
(
••8 9
$num
••9 ;
,
••; <
$num
••= @
,
••@ A
	GUILayout
••B K
.
••K L
ExpandWidth
••L W
(
••W X
true
••X \
)
••\ ]
)
••] ^
;
••^ _
	EditorGUI
¶¶ 
.
¶¶ 
ProgressBar
¶¶ )
(
¶¶) *
rect
¶¶* .
,
¶¶. /"
m_ProgressPercentage
¶¶0 D
,
¶¶D E
$str
¶¶F W
+
¶¶X Y(
m_ScanningCurrentFileIndex
¶¶Z t
+
¶¶u v
$str
¶¶w z
+
¶¶{ |#
m_ScanningTotalFiles¶¶} ë
+¶¶í ì
$str¶¶î ó
)¶¶ó ò
;¶¶ò ô
if
©© 
(
©© (
m_IsAlreadyScanningProject
©© 2
)
©©2 3
{
™™ 
Rect
´´ 

cancelRect
´´ '
=
´´( )
new
´´* -
Rect
´´. 2
(
´´2 3
rect
´´3 7
.
´´7 8
width
´´8 =
-
´´> ?
$num
´´@ B
,
´´B C
rect
´´D H
.
´´H I
y
´´I J
+
´´K L
$num
´´M N
,
´´N O
$num
´´P R
,
´´R S
$num
´´T V
)
´´V W
;
´´W X
if
¨¨ 
(
¨¨ 
GUI
¨¨ 
.
¨¨  
Button
¨¨  &
(
¨¨& '

cancelRect
¨¨' 1
,
¨¨1 2
$str
¨¨3 6
)
¨¨6 7
)
¨¨7 8
{
≠≠ !
m_CancelScanProcess
ÆÆ /
=
ÆÆ0 1
true
ÆÆ2 6
;
ÆÆ6 7
}
ØØ 
	GUILayout
∞∞ !
.
∞∞! "
Label
∞∞" '
(
∞∞' (&
k_ProjectScanLabelPrefix
∞∞( @
+
∞∞A B'
m_ScanningCurrentFileName
∞∞C \
,
∞∞\ ] 
TMP_UIStyleManager
∞∞^ p
.
∞∞p q
label
∞∞q v
)
∞∞v w
;
∞∞w x
}
±± 
else
≤≤ 
	GUILayout
≥≥ !
.
≥≥! "
Label
≥≥" '
(
≥≥' (
string
≥≥( .
.
≥≥. /
Empty
≥≥/ 4
)
≥≥4 5
;
≥≥5 6
	GUILayout
µµ 
.
µµ 
Space
µµ #
(
µµ# $
$num
µµ$ %
)
µµ% &
;
µµ& '
	GUILayout
∏∏ 
.
∏∏ 
BeginVertical
∏∏ +
(
∏∏+ , 
TMP_UIStyleManager
∏∏, >
.
∏∏> ?
textAreaBoxWindow
∏∏? P
,
∏∏P Q
	GUILayout
∏∏R [
.
∏∏[ \
ExpandHeight
∏∏\ h
(
∏∏h i
true
∏∏i m
)
∏∏m n
)
∏∏n o
;
∏∏o p
{
ππ /
!m_ProjectScanResultScrollPosition
∫∫ 9
=
∫∫: ;
EditorGUILayout
∫∫< K
.
∫∫K L
BeginScrollView
∫∫L [
(
∫∫[ \/
!m_ProjectScanResultScrollPosition
∫∫\ }
,
∫∫} ~
	GUILayout∫∫ à
.∫∫à â
ExpandHeight∫∫â ï
(∫∫ï ñ
true∫∫ñ ö
)∫∫ö õ
)∫∫õ ú
;∫∫ú ù
EditorGUILayout
ªª '
.
ªª' (

LabelField
ªª( 2
(
ªª2 3"
m_ProjectScanResults
ªª3 G
,
ªªG H 
TMP_UIStyleManager
ªªI [
.
ªª[ \
label
ªª\ a
)
ªªa b
;
ªªb c
EditorGUILayout
ºº '
.
ºº' (
EndScrollView
ºº( 5
(
ºº5 6
)
ºº6 7
;
ºº7 8
}
ΩΩ 
	GUILayout
ææ 
.
ææ 
EndVertical
ææ )
(
ææ) *
)
ææ* +
;
ææ+ ,
	GUILayout
øø 
.
øø 
Space
øø #
(
øø# $
$num
øø$ &
)
øø& '
;
øø' (
}
¿¿ 
	GUILayout
¡¡ 
.
¡¡ 
EndVertical
¡¡ %
(
¡¡% &
)
¡¡& '
;
¡¡' (
	GUILayout
ƒƒ 
.
ƒƒ 
BeginVertical
ƒƒ '
(
ƒƒ' (
EditorStyles
ƒƒ( 4
.
ƒƒ4 5
helpBox
ƒƒ5 <
)
ƒƒ< =
;
ƒƒ= >
{
≈≈ 
	GUILayout
∆∆ 
.
∆∆ 
Label
∆∆ #
(
∆∆# $
$str
∆∆$ A
,
∆∆A B
EditorStyles
∆∆C O
.
∆∆O P
	boldLabel
∆∆P Y
)
∆∆Y Z
;
∆∆Z [
	GUILayout
«« 
.
«« 
Label
«« #
(
««# $
$str««$ ¿
,««¿ ¡"
TMP_UIStyleManager««¬ ‘
.««‘ ’
label««’ ⁄
)««⁄ €
;««€ ‹
	GUILayout
»» 
.
»» 
Space
»» #
(
»»# $
$num
»»$ &
)
»»& '
;
»»' (
GUI
   
.
   
enabled
   
=
    !(
m_IsAlreadyScanningProject
  " <
==
  = ?
false
  @ E
&&
  F H!
m_ModifiedAssetList
  I \
.
  \ ]
Count
  ] b
>
  c d
$num
  e f
?
  g h
true
  i m
:
  n o
false
  p u
;
  u v
if
ÀÀ 
(
ÀÀ 
	GUILayout
ÀÀ !
.
ÀÀ! "
Button
ÀÀ" (
(
ÀÀ( )
$str
ÀÀ) F
)
ÀÀF G
)
ÀÀG H
{
ÃÃ  
UpdateProjectFiles
ÕÕ *
(
ÕÕ* +
)
ÕÕ+ ,
;
ÕÕ, -
}
ŒŒ 
	GUILayout
œœ 
.
œœ 
Space
œœ #
(
œœ# $
$num
œœ$ '
)
œœ' (
;
œœ( )
}
–– 
	GUILayout
—— 
.
—— 
EndVertical
—— %
(
——% &
)
——& '
;
——' (
}
”” 
	GUILayout
‘‘ 
.
‘‘ 
EndVertical
‘‘ !
(
‘‘! "
)
‘‘" #
;
‘‘# $
	GUILayout
’’ 
.
’’ 
Space
’’ 
(
’’ 
$num
’’ 
)
’’ 
;
’’  
}
÷÷ 	
void
ÿÿ 
OnInspectorUpdate
ÿÿ 
(
ÿÿ 
)
ÿÿ  
{
ŸŸ 	
Repaint
⁄⁄ 
(
⁄⁄ 
)
⁄⁄ 
;
⁄⁄ 
}
€€ 	
void
·· !
SetEditorWindowSize
··  
(
··  !
)
··! "
{
‚‚ 	
EditorWindow
„„ 
editorWindow
„„ %
=
„„& '
this
„„( ,
;
„„, -
Vector2
ÂÂ 
currentWindowSize
ÂÂ %
=
ÂÂ& '
editorWindow
ÂÂ( 4
.
ÂÂ4 5
minSize
ÂÂ5 <
;
ÂÂ< =
editorWindow
ÁÁ 
.
ÁÁ 
minSize
ÁÁ  
=
ÁÁ! "
new
ÁÁ# &
Vector2
ÁÁ' .
(
ÁÁ. /
Mathf
ÁÁ/ 4
.
ÁÁ4 5
Max
ÁÁ5 8
(
ÁÁ8 9
$num
ÁÁ9 <
,
ÁÁ< =
currentWindowSize
ÁÁ> O
.
ÁÁO P
x
ÁÁP Q
)
ÁÁQ R
,
ÁÁR S
Mathf
ÁÁT Y
.
ÁÁY Z
Max
ÁÁZ ]
(
ÁÁ] ^
$num
ÁÁ^ a
,
ÁÁa b
currentWindowSize
ÁÁc t
.
ÁÁt u
y
ÁÁu v
)
ÁÁv w
)
ÁÁw x
;
ÁÁx y
}
ËË 	
private
 
static
 
bool
 
ShouldIgnoreFile
 ,
(
, -
string
- 3
filePath
4 <
)
< =
{
ÒÒ 	
string
ÚÚ 
fileExtension
ÚÚ  
=
ÚÚ! "
Path
ÚÚ# '
.
ÚÚ' (
GetExtension
ÚÚ( 4
(
ÚÚ4 5
filePath
ÚÚ5 =
)
ÚÚ= >
;
ÚÚ> ?
Type
ÛÛ 
fileType
ÛÛ 
=
ÛÛ 
AssetDatabase
ÛÛ )
.
ÛÛ) *$
GetMainAssetTypeAtPath
ÛÛ* @
(
ÛÛ@ A
filePath
ÛÛA I
)
ÛÛI J
;
ÛÛJ K
if
ıı 
(
ıı  
m_IgnoreAssetTypes
ıı "
.
ıı" #
Contains
ıı# +
(
ıı+ ,
fileType
ıı, 4
)
ıı4 5
)
ıı5 6
return
ˆˆ 
true
ˆˆ 
;
ˆˆ 
if
˘˘ 
(
˘˘ 
fileType
˘˘ 
==
˘˘ 
typeof
˘˘ "
(
˘˘" #

GameObject
˘˘# -
)
˘˘- .
&&
˘˘/ 1
(
˘˘2 3
fileExtension
˘˘3 @
.
˘˘@ A
ToLower
˘˘A H
(
˘˘H I
)
˘˘I J
==
˘˘K M
$str
˘˘N T
||
˘˘U W
fileExtension
˘˘X e
.
˘˘e f
ToLower
˘˘f m
(
˘˘m n
)
˘˘n o
==
˘˘p r
$str
˘˘s {
)
˘˘{ |
)
˘˘| }
return
˙˙ 
true
˙˙ 
;
˙˙ 
return
¸¸ 
false
¸¸ 
;
¸¸ 
}
˝˝ 	
private
ÄÄ 
IEnumerator
ÄÄ 
ScanProjectFiles
ÄÄ ,
(
ÄÄ, -
)
ÄÄ- .
{
ÅÅ 	(
m_IsAlreadyScanningProject
ÇÇ &
=
ÇÇ' (
true
ÇÇ) -
;
ÇÇ- .
string
ÉÉ 
packageFullPath
ÉÉ "
=
ÉÉ# $
EditorUtilities
ÉÉ% 4
.
ÉÉ4 5
TMP_EditorUtility
ÉÉ5 F
.
ÉÉF G
packageFullPath
ÉÉG V
;
ÉÉV W"
m_ProjectScanResults
ÜÜ  
=
ÜÜ! ",
k_ProjectScanReportDefaultText
ÜÜ# A
;
ÜÜA B!
m_ModifiedAssetList
áá 
.
áá  
Clear
áá  %
(
áá% &
)
áá& '
;
áá' ("
m_ProgressPercentage
àà  
=
àà! "
$num
àà# $
;
àà$ %
if
ãã 
(
ãã 
m_ConversionData
ãã  
==
ãã! #
null
ãã$ (
)
ãã( )
m_ConversionData
åå  
=
åå! "
JsonUtility
åå# .
.
åå. /
FromJson
åå/ 7
<
åå7 8!
AssetConversionData
åå8 K
>
ååK L
(
ååL M
File
ååM Q
.
ååQ R
ReadAllText
ååR ]
(
åå] ^
packageFullPath
åå^ m
+
åån o
$strååp ç
)ååç é
)ååé è
;ååè ê
string
èè 
searchFolder
èè 
=
èè  !
string
èè" (
.
èè( )
IsNullOrEmpty
èè) 6
(
èè6 7#
m_ProjectFolderToScan
èè7 L
)
èèL M
?
èèN O
$str
èèP X
:
èèY Z
(
èè[ \
$str
èè\ e
+
èèf g#
m_ProjectFolderToScan
èèh }
)
èè} ~
;
èè~ 
string
êê 
[
êê 
]
êê 
guids
êê 
=
êê 
AssetDatabase
êê *
.
êê* +

FindAssets
êê+ 5
(
êê5 6
$str
êê6 @
,
êê@ A
new
êêB E
string
êêF L
[
êêL M
]
êêM N
{
êêO P
searchFolder
êêQ ]
}
êê^ _
)
êê_ `
.
êê` a
Distinct
êêa i
(
êêi j
)
êêj k
.
êêk l
ToArray
êêl s
(
êês t
)
êêt u
;
êêu v&
k_ProjectScanLabelPrefix
íí $
=
íí% &
$str
íí' E
;
ííE F"
m_ScanningTotalFiles
ìì  
=
ìì! "
guids
ìì# (
.
ìì( )
Length
ìì) /
;
ìì/ 0(
m_ScanningCurrentFileIndex
îî &
=
îî' (
$num
îî) *
;
îî* +
List
ññ 
<
ññ 
AssetFileRecord
ññ  
>
ññ  ! 
projectFilesToScan
ññ" 4
=
ññ5 6
new
ññ7 :
List
ññ; ?
<
ññ? @
AssetFileRecord
ññ@ O
>
ññO P
(
ññP Q
)
ññQ R
;
ññR S
foreach
òò 
(
òò 
var
òò 
guid
òò 
in
òò  
guids
òò! &
)
òò& '
{
ôô 
if
öö 
(
öö !
m_CancelScanProcess
öö '
)
öö' (
break
õõ 
;
õõ 
string
ùù 
assetFilePath
ùù $
=
ùù% &
AssetDatabase
ùù' 4
.
ùù4 5
GUIDToAssetPath
ùù5 D
(
ùùD E
guid
ùùE I
)
ùùI J
;
ùùJ K(
m_ScanningCurrentFileIndex
üü *
+=
üü+ -
$num
üü. /
;
üü/ 0'
m_ScanningCurrentFileName
†† )
=
††* +
assetFilePath
††, 9
;
††9 :"
m_ProgressPercentage
°° $
=
°°% &
(
°°' (
float
°°( -
)
°°- .(
m_ScanningCurrentFileIndex
°°. H
/
°°I J"
m_ScanningTotalFiles
°°K _
;
°°_ `
if
§§ 
(
§§ 
ShouldIgnoreFile
§§ $
(
§§$ %
assetFilePath
§§% 2
)
§§2 3
)
§§3 4
continue
•• 
;
•• 
string
ßß 
assetMetaFilePath
ßß (
=
ßß) *
AssetDatabase
ßß+ 8
.
ßß8 9.
 GetTextMetaFilePathFromAssetPath
ßß9 Y
(
ßßY Z
assetFilePath
ßßZ g
)
ßßg h
;
ßßh i 
projectFilesToScan
©© "
.
©©" #
Add
©©# &
(
©©& '
new
©©' *
AssetFileRecord
©©+ :
(
©©: ;
assetFilePath
©©; H
,
©©H I
assetMetaFilePath
©©J [
)
©©[ \
)
©©\ ]
;
©©] ^
yield
´´ 
return
´´ 
null
´´ !
;
´´! "
}
¨¨ $
m_RemainingFilesToScan
ÆÆ "
=
ÆÆ# $"
m_ScanningTotalFiles
ÆÆ% 9
=
ÆÆ: ; 
projectFilesToScan
ÆÆ< N
.
ÆÆN O
Count
ÆÆO T
;
ÆÆT U&
k_ProjectScanLabelPrefix
∞∞ $
=
∞∞% &
$str
∞∞' D
;
∞∞D E
for
≤≤ 
(
≤≤ 
int
≤≤ 
i
≤≤ 
=
≤≤ 
$num
≤≤ 
;
≤≤ 
i
≤≤ 
<
≤≤ "
m_ScanningTotalFiles
≤≤  4
;
≤≤4 5
i
≤≤6 7
++
≤≤7 9
)
≤≤9 :
{
≥≥ 
if
¥¥ 
(
¥¥ !
m_CancelScanProcess
¥¥ '
)
¥¥' (
break
µµ 
;
µµ 
AssetFileRecord
∑∑ 

fileRecord
∑∑  *
=
∑∑+ , 
projectFilesToScan
∑∑- ?
[
∑∑? @
i
∑∑@ A
]
∑∑A B
;
∑∑B C

ThreadPool
ππ 
.
ππ 
QueueUserWorkItem
ππ ,
(
ππ, -
Task
ππ- 1
=>
ππ2 4
{
∫∫ "
ScanProjectFileAsync
ªª (
(
ªª( )

fileRecord
ªª) 3
)
ªª3 4
;
ªª4 5'
m_ScanningCurrentFileName
ΩΩ -
=
ΩΩ. /

fileRecord
ΩΩ0 :
.
ΩΩ: ;
assetFilePath
ΩΩ; H
;
ΩΩH I
int
øø 
completedScans
øø &
=
øø' ("
m_ScanningTotalFiles
øø) =
-
øø> ?
Interlocked
øø@ K
.
øøK L
	Decrement
øøL U
(
øøU V
ref
øøV Y$
m_RemainingFilesToScan
øøZ p
)
øøp q
;
øøq r(
m_ScanningCurrentFileIndex
¡¡ .
=
¡¡/ 0
completedScans
¡¡1 ?
;
¡¡? @"
m_ProgressPercentage
¬¬ (
=
¬¬) *
(
¬¬+ ,
float
¬¬, 1
)
¬¬1 2
completedScans
¬¬2 @
/
¬¬A B"
m_ScanningTotalFiles
¬¬C W
;
¬¬W X
}
√√ 
)
√√ 
;
√√ 
if
≈≈ 
(
≈≈ 
i
≈≈ 
%
≈≈ 
$num
≈≈ 
==
≈≈ 
$num
≈≈ 
)
≈≈  
yield
∆∆ 
return
∆∆  
new
∆∆! $
WaitForSeconds
∆∆% 3
(
∆∆3 4
$num
∆∆4 8
)
∆∆8 9
;
∆∆9 :
}
»» 
while
   
(
   $
m_RemainingFilesToScan
   )
>
  * +
$num
  , -
&&
  . 0
!
  1 2!
m_CancelScanProcess
  2 E
)
  E F
yield
ÀÀ 
return
ÀÀ 
null
ÀÀ !
;
ÀÀ! "(
m_IsAlreadyScanningProject
ÕÕ &
=
ÕÕ' (
false
ÕÕ) .
;
ÕÕ. /'
m_ScanningCurrentFileName
ŒŒ %
=
ŒŒ& '
string
ŒŒ( .
.
ŒŒ. /
Empty
ŒŒ/ 4
;
ŒŒ4 5
}
œœ 	
static
““ 
void
““ "
ScanProjectFileAsync
““ (
(
““( )
AssetFileRecord
““) 8

fileRecord
““9 C
)
““C D
{
”” 	
if
‘‘ 
(
‘‘ !
m_CancelScanProcess
‘‘ #
)
‘‘# $
return
’’ 
;
’’ 
string
ÿÿ 
assetDataFile
ÿÿ  
=
ÿÿ! "
string
ÿÿ# )
.
ÿÿ) *
Empty
ÿÿ* /
;
ÿÿ/ 0
bool
ŸŸ 
hasFileChanged
ŸŸ 
=
ŸŸ  !
false
ŸŸ" '
;
ŸŸ' (
try
€€ 
{
‹‹ 
assetDataFile
›› 
=
›› 
File
››  $
.
››$ %
ReadAllText
››% 0
(
››0 1
m_ProjectPath
››1 >
+
››? @
$str
››A D
+
››E F

fileRecord
››G Q
.
››Q R
assetFilePath
››R _
)
››_ `
;
››` a
}
ﬁﬁ 
catch
ﬂﬂ 
{
‡‡ 
return
‚‚ 
;
‚‚ 
}
„„ 
string
ÊÊ 
assetMetaFile
ÊÊ  
=
ÊÊ! "
File
ÊÊ# '
.
ÊÊ' (
ReadAllText
ÊÊ( 3
(
ÊÊ3 4
m_ProjectPath
ÊÊ4 A
+
ÊÊB C
$str
ÊÊD G
+
ÊÊH I

fileRecord
ÊÊJ T
.
ÊÊT U
assetMetaFilePath
ÊÊU f
)
ÊÊf g
;
ÊÊg h
bool
ÁÁ  
hasMetaFileChanges
ÁÁ #
=
ÁÁ$ %
false
ÁÁ& +
;
ÁÁ+ ,
foreach
ÈÈ 
(
ÈÈ #
AssetConversionRecord
ÈÈ *
record
ÈÈ+ 1
in
ÈÈ2 4
m_ConversionData
ÈÈ5 E
.
ÈÈE F
assetRecords
ÈÈF R
)
ÈÈR S
{
ÍÍ 
if
ÎÎ 
(
ÎÎ 
assetDataFile
ÎÎ !
.
ÎÎ! "
Contains
ÎÎ" *
(
ÎÎ* +
record
ÎÎ+ 1
.
ÎÎ1 2
target
ÎÎ2 8
)
ÎÎ8 9
)
ÎÎ9 :
{
ÏÏ 
hasFileChanged
ÌÌ "
=
ÌÌ# $
true
ÌÌ% )
;
ÌÌ) *
assetDataFile
ÔÔ !
=
ÔÔ" #
assetDataFile
ÔÔ$ 1
.
ÔÔ1 2
Replace
ÔÔ2 9
(
ÔÔ9 :
record
ÔÔ: @
.
ÔÔ@ A
target
ÔÔA G
,
ÔÔG H
record
ÔÔI O
.
ÔÔO P
replacement
ÔÔP [
)
ÔÔ[ \
;
ÔÔ\ ]
}
 
if
ÛÛ 
(
ÛÛ 
assetMetaFile
ÛÛ !
.
ÛÛ! "
Contains
ÛÛ" *
(
ÛÛ* +
record
ÛÛ+ 1
.
ÛÛ1 2
target
ÛÛ2 8
)
ÛÛ8 9
)
ÛÛ9 :
{
ÙÙ  
hasMetaFileChanges
ıı &
=
ıı' (
true
ıı) -
;
ıı- .
assetMetaFile
˜˜ !
=
˜˜" #
assetMetaFile
˜˜$ 1
.
˜˜1 2
Replace
˜˜2 9
(
˜˜9 :
record
˜˜: @
.
˜˜@ A
target
˜˜A G
,
˜˜G H
record
˜˜I O
.
˜˜O P
replacement
˜˜P [
)
˜˜[ \
;
˜˜\ ]
}
¯¯ 
}
˘˘ 
if
˚˚ 
(
˚˚ 
hasFileChanged
˚˚ 
)
˚˚ 
{
¸¸ %
AssetModificationRecord
˝˝ '
modifiedAsset
˝˝( 5
;
˝˝5 6
modifiedAsset
˛˛ 
.
˛˛ 
assetFilePath
˛˛ +
=
˛˛, -

fileRecord
˛˛. 8
.
˛˛8 9
assetFilePath
˛˛9 F
;
˛˛F G
modifiedAsset
ˇˇ 
.
ˇˇ 
assetDataFile
ˇˇ +
=
ˇˇ, -
assetDataFile
ˇˇ. ;
;
ˇˇ; <!
m_ModifiedAssetList
ÅÅ #
.
ÅÅ# $
Add
ÅÅ$ '
(
ÅÅ' (
modifiedAsset
ÅÅ( 5
)
ÅÅ5 6
;
ÅÅ6 7"
m_ProjectScanResults
ÉÉ $
+=
ÉÉ% '

fileRecord
ÉÉ( 2
.
ÉÉ2 3
assetFilePath
ÉÉ3 @
+
ÉÉA B
$str
ÉÉC G
;
ÉÉG H
}
ÑÑ 
if
ÜÜ 
(
ÜÜ  
hasMetaFileChanges
ÜÜ "
)
ÜÜ" #
{
áá %
AssetModificationRecord
àà '
modifiedAsset
àà( 5
;
àà5 6
modifiedAsset
ââ 
.
ââ 
assetFilePath
ââ +
=
ââ, -

fileRecord
ââ. 8
.
ââ8 9
assetMetaFilePath
ââ9 J
;
ââJ K
modifiedAsset
ää 
.
ää 
assetDataFile
ää +
=
ää, -
assetMetaFile
ää. ;
;
ää; <!
m_ModifiedAssetList
åå #
.
åå# $
Add
åå$ '
(
åå' (
modifiedAsset
åå( 5
)
åå5 6
;
åå6 7"
m_ProjectScanResults
éé $
+=
éé% '

fileRecord
éé( 2
.
éé2 3
assetMetaFilePath
éé3 D
+
ééE F
$str
ééG K
;
ééK L
}
èè 
}
êê 	
private
ññ 
static
ññ 
void
ññ 
ResetScanProcess
ññ ,
(
ññ, -
)
ññ- .
{
óó 	(
m_IsAlreadyScanningProject
òò &
=
òò' (
false
òò) .
;
òò. /'
m_ScanningCurrentFileName
ôô %
=
ôô& '
string
ôô( .
.
ôô. /
Empty
ôô/ 4
;
ôô4 5"
m_ProgressPercentage
öö  
=
öö! "
$num
öö# $
;
öö$ %(
m_ScanningCurrentFileIndex
õõ &
=
õõ' (
$num
õõ) *
;
õõ* +"
m_ScanningTotalFiles
úú  
=
úú! "
$num
úú# $
;
úú$ %
}
ùù 	
private
££ 
static
££ 
void
££  
UpdateProjectFiles
££ .
(
££. /
)
££/ 0
{
§§ 	<
.CheckProjectSerializationAndSourceControlModes
¶¶ :
(
¶¶: ;
)
¶¶; <
;
¶¶< =
string
®® 
projectPath
®® 
=
®®  
Path
®®! %
.
®®% &
GetFullPath
®®& 1
(
®®1 2
$str
®®2 =
)
®®= >
;
®®> ?
if
´´ 
(
´´ 
EditorUtility
´´ 
.
´´ 
DisplayDialog
´´ +
(
´´+ ,
$str
´´, E
,
´´E F
$str
´´G {
,
´´{ |
$str´´} Ç
,´´Ç É
$str´´Ñ à
)´´à â
)´´â ä
{
¨¨ 
for
≠≠ 
(
≠≠ 
int
≠≠ 
i
≠≠ 
=
≠≠ 
$num
≠≠ 
;
≠≠ 
i
≠≠  !
<
≠≠" #!
m_ModifiedAssetList
≠≠$ 7
.
≠≠7 8
Count
≠≠8 =
;
≠≠= >
i
≠≠? @
++
≠≠@ B
)
≠≠B C
{
ÆÆ 
File
¥¥ 
.
¥¥ 
WriteAllText
¥¥ %
(
¥¥% &
projectPath
¥¥& 1
+
¥¥2 3
$str
¥¥4 7
+
¥¥8 9!
m_ModifiedAssetList
¥¥: M
[
¥¥M N
i
¥¥N O
]
¥¥O P
.
¥¥P Q
assetFilePath
¥¥Q ^
,
¥¥^ _!
m_ModifiedAssetList
¥¥` s
[
¥¥s t
i
¥¥t u
]
¥¥u v
.
¥¥v w
assetDataFile¥¥w Ñ
)¥¥Ñ Ö
;¥¥Ö Ü
}
µµ 
}
∂∂ 
AssetDatabase
∏∏ 
.
∏∏ 
Refresh
∏∏ !
(
∏∏! "
)
∏∏" #
;
∏∏# $"
m_ProgressPercentage
∫∫  
=
∫∫! "
$num
∫∫# $
;
∫∫$ %"
m_ProjectScanResults
ªª  
=
ªª! ",
k_ProjectScanReportDefaultText
ªª# A
;
ªªA B
}
ºº 	
private
¬¬ 
static
¬¬ 
bool
¬¬ <
.CheckProjectSerializationAndSourceControlModes
¬¬ J
(
¬¬J K
)
¬¬K L
{
√√ 	
if
≈≈ 
(
≈≈ 
EditorSettings
≈≈ 
.
≈≈ 
serializationMode
≈≈ 0
!=
≈≈1 3
SerializationMode
≈≈4 E
.
≈≈E F
	ForceText
≈≈F O
||
≈≈P R$
VersionControlSettings
≈≈S i
.
≈≈i j
mode
≈≈j n
!=
≈≈o q
$str≈≈r Ü
)≈≈Ü á
{
∆∆ 
return
«« 
false
«« 
;
«« 
}
»» 
return
   
true
   
;
   
}
ÀÀ 	
}
ÃÃ 
public
–– 

class
–– "
TMP_PackageUtilities
–– %
:
––& '
Editor
––( .
{
—— 
enum
”” &
SaveAssetDialogueOptions
”” %
{
””& '
Unset
””( -
=
””. /
$num
””0 1
,
””1 2
Save
””3 7
=
””8 9
$num
””: ;
,
””; <
SaveAll
””= D
=
””E F
$num
””G H
,
””H I
	DoNotSave
””J S
=
””T U
$num
””V W
}
””X Y
;
””Y Z
private
’’ 
static
’’ 
SerializationMode
’’ (-
m_ProjectAssetSerializationMode
’’) H
;
’’H I
private
÷÷ 
static
÷÷ 
string
÷÷ -
m_ProjectExternalVersionControl
÷÷ =
;
÷÷= >
struct
ÿÿ "
AssetRemappingRecord
ÿÿ #
{
ŸŸ 	
public
⁄⁄ 
string
⁄⁄ 
oldGuid
⁄⁄ !
;
⁄⁄! "
public
€€ 
string
€€ 
newGuid
€€ !
;
€€! "
public
‹‹ 
string
‹‹ 
	assetPath
‹‹ #
;
‹‹# $
}
›› 	
struct
ﬂﬂ %
AssetModificationRecord
ﬂﬂ &
{
‡‡ 	
public
·· 
string
·· 
assetFilePath
·· '
;
··' (
public
‚‚ 
string
‚‚ 
assetDataFile
‚‚ '
;
‚‚' (
}
„„ 	
[
ËË 	
MenuItem
ËË	 
(
ËË 
$str
ËË E
,
ËËE F
false
ËËG L
,
ËËL M
$num
ËËN R
)
ËËR S
]
ËËS T
public
ÈÈ 
static
ÈÈ 
void
ÈÈ (
ImportProjectResourcesMenu
ÈÈ 5
(
ÈÈ5 6
)
ÈÈ6 7
{
ÍÍ 	&
ImportEssentialResources
ÎÎ $
(
ÎÎ$ %
)
ÎÎ% &
;
ÎÎ& '
}
ÏÏ 	
[
ÚÚ 	
MenuItem
ÚÚ	 
(
ÚÚ 
$str
ÚÚ E
,
ÚÚE F
false
ÚÚG L
,
ÚÚL M
$num
ÚÚN R
)
ÚÚR S
]
ÚÚS T
public
ÛÛ 
static
ÛÛ 
void
ÛÛ '
ImportExamplesContentMenu
ÛÛ 4
(
ÛÛ4 5
)
ÛÛ5 6
{
ÙÙ 	%
ImportExamplesAndExtras
ıı #
(
ıı# $
)
ıı$ %
;
ıı% &
}
ˆˆ 	
private
˘˘ 
static
˘˘ 
void
˘˘ 
GetVersionInfo
˘˘ *
(
˘˘* +
)
˘˘+ ,
{
˙˙ 	
string
˚˚ 
version
˚˚ 
=
˚˚ 
TMP_Settings
˚˚ )
.
˚˚) *
version
˚˚* 1
;
˚˚1 2
Debug
¸¸ 
.
¸¸ 
Log
¸¸ 
(
¸¸ 
$str
¸¸ I
+
¸¸J K
version
¸¸L S
+
¸¸T U
$str
¸¸V Z
)
¸¸Z [
;
¸¸[ \
}
˝˝ 	
private
ÉÉ 
static
ÉÉ 
void
ÉÉ %
ImportExamplesAndExtras
ÉÉ 3
(
ÉÉ3 4
)
ÉÉ4 5
{
ÑÑ 	
string
ÖÖ 
packageFullPath
ÖÖ "
=
ÖÖ# $
TMP_EditorUtility
ÖÖ% 6
.
ÖÖ6 7
packageFullPath
ÖÖ7 F
;
ÖÖF G
AssetDatabase
áá 
.
áá 
ImportPackage
áá '
(
áá' (
packageFullPath
áá( 7
+
áá8 9
$str
áá: q
,
ááq r
true
áás w
)
ááw x
;
ááx y
}
àà 	
private
ää 
static
ää 
string
ää  
k_SettingsFilePath
ää 0
;
ää0 1
private
ãã 
static
ãã 
byte
ãã 
[
ãã 
]
ãã 
k_SettingsBackup
ãã .
;
ãã. /
private
êê 
static
êê 
void
êê &
ImportEssentialResources
êê 4
(
êê4 5
)
êê5 6
{
ëë 	
string
ìì 
[
ìì 
]
ìì 
settings
ìì 
=
ìì 
AssetDatabase
ìì  -
.
ìì- .

FindAssets
ìì. 8
(
ìì8 9
$str
ìì9 I
)
ììI J
;
ììJ K
if
ïï 
(
ïï 
settings
ïï 
.
ïï 
Length
ïï 
>
ïï  !
$num
ïï" #
)
ïï# $
{
ññ 
AssetDatabase
òò 
.
òò 

SaveAssets
òò (
(
òò( )
)
òò) *
;
òò* + 
k_SettingsFilePath
õõ "
=
õõ# $
AssetDatabase
õõ% 2
.
õõ2 3
GUIDToAssetPath
õõ3 B
(
õõB C
settings
õõC K
[
õõK L
$num
õõL M
]
õõM N
)
õõN O
;
õõO P
k_SettingsBackup
úú  
=
úú! "
File
úú# '
.
úú' (
ReadAllBytes
úú( 4
(
úú4 5 
k_SettingsFilePath
úú5 G
)
úúG H
;
úúH I,
RegisterResourceImportCallback
ûû .
(
ûû. /
)
ûû/ 0
;
ûû0 1
}
üü 
string
°° 
packageFullPath
°° "
=
°°# $
TMP_EditorUtility
°°% 6
.
°°6 7
packageFullPath
°°7 F
;
°°F G
AssetDatabase
££ 
.
££ 
ImportPackage
££ '
(
££' (
packageFullPath
££( 7
+
££8 9
$str
££: s
,
££s t
true
££u y
)
££y z
;
££z {
}
§§ 	
private
¶¶ 
static
¶¶ 
void
¶¶ ,
RegisterResourceImportCallback
¶¶ :
(
¶¶: ;
)
¶¶; <
{
ßß 	
AssetDatabase
®® 
.
®® $
importPackageCompleted
®® 0
+=
®®1 3
ImportCallback
®®4 B
;
®®B C
}
©© 	
private
´´ 
static
´´ 
void
´´ 
ImportCallback
´´ *
(
´´* +
string
´´+ 1
packageName
´´2 =
)
´´= >
{
¨¨ 	
File
ÆÆ 
.
ÆÆ 
WriteAllBytes
ÆÆ 
(
ÆÆ  
k_SettingsFilePath
ÆÆ 1
,
ÆÆ1 2
k_SettingsBackup
ÆÆ3 C
)
ÆÆC D
;
ÆÆD E
AssetDatabase
∞∞ 
.
∞∞ 
Refresh
∞∞ !
(
∞∞! "
)
∞∞" #
;
∞∞# $
AssetDatabase
≤≤ 
.
≤≤ $
importPackageCompleted
≤≤ 0
-=
≤≤1 3
ImportCallback
≤≤4 B
;
≤≤B C
}
≥≥ 	
}
¥¥ 
}µµ Ùv
ìD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_EditorPanel.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
[ 
CustomEditor 
( 
typeof 
( 
TextMeshPro $
)$ %
,% &
true' +
)+ ,
,, -"
CanEditMultipleObjects. D
]D E
public		 

class		 
TMP_EditorPanel		  
:		! "
TMP_BaseEditorPanel		# 6
{

 
static 
readonly 

GUIContent "
k_SortingLayerLabel# 6
=7 8
new9 <

GUIContent= G
(G H
$strH W
,W X
$str	Y Ä
)
Ä Å
;
Å Ç
static 
readonly 

GUIContent "
k_OrderInLayerLabel# 6
=7 8
new9 <

GUIContent= G
(G H
$strH X
,X Y
$str	Z Ñ
)
Ñ Ö
;
Ö Ü
static 
readonly 

GUIContent "
k_OrthographicLabel# 6
=7 8
new9 <

GUIContent= G
(G H
$strH [
,[ \
$str	] ”
)
” ‘
;
‘ ’
static 
readonly 

GUIContent "
k_VolumetricLabel# 4
=5 6
new7 :

GUIContent; E
(E F
$strF X
,X Y
$str	Z ”
)
” ‘
;
‘ ’
private 
static 
string 
[ 
] 
k_SortingLayerNames  3
;3 4
bool 
IsPreset 
; 
SerializedProperty "
m_IsVolumetricTextProp 1
;1 2
SerializedProperty  
m_IsOrthographicProp /
;/ 0
Renderer 

m_Renderer 
; 
	protected 
override 
void 
OnEnable  (
(( )
)) *
{ 	
base 
. 
OnEnable 
( 
) 
; 
IsPreset 
= 
( 
int 
) 
( 
target #
as$ &
	Component' 0
)0 1
.1 2

gameObject2 <
.< =
	hideFlags= F
==G I
$numJ L
;L M 
m_IsOrthographicProp  
=! "
serializedObject# 3
.3 4
FindProperty4 @
(@ A
$strA S
)S T
;T U"
m_IsVolumetricTextProp   "
=  # $
serializedObject  % 5
.  5 6
FindProperty  6 B
(  B C
$str  C W
)  W X
;  X Y

m_Renderer"" 
="" 
m_TextComponent"" (
.""( )
GetComponent"") 5
<""5 6
Renderer""6 >
>""> ?
(""? @
)""@ A
;""A B
k_SortingLayerNames%% 
=%%  !
SortingLayerHelper%%" 4
.%%4 5
sortingLayerNames%%5 F
;%%F G
}&& 	
	protected(( 
override(( 
void(( 
DrawExtraSettings((  1
(((1 2
)((2 3
{)) 	
Rect** 
rect** 
=** 
EditorGUILayout** '
.**' (
GetControlRect**( 6
(**6 7
false**7 <
,**< =
$num**> @
)**@ A
;**A B
if,, 
(,, 
GUI,, 
.,, 
Button,, 
(,, 
rect,, 
,,,  
new,,! $

GUIContent,,% /
(,,/ 0
$str,,0 G
),,G H
,,,H I
TMP_UIStyleManager,,J \
.,,\ ]
sectionHeader,,] j
),,j k
),,k l
Foldout-- 
.-- 
extraSettings-- %
=--& '
!--( )
Foldout--) 0
.--0 1
extraSettings--1 >
;--> ?
GUI// 
.// 
Label// 
(// 
rect// 
,// 
(// 
Foldout// $
.//$ %
extraSettings//% 2
?//3 4
$str//5 7
://8 9
k_UiStateLabel//: H
[//H I
$num//I J
]//J K
)//K L
,//L M
TMP_UIStyleManager//N `
.//` a

rightLabel//a k
)//k l
;//l m
if11 
(11 
Foldout11 
.11 
extraSettings11 %
)11% &
{22 
DrawMargins55 
(55 
)55 
;55 
DrawSortingLayer77  
(77  !
)77! "
;77" #
DrawGeometrySorting99 #
(99# $
)99$ %
;99% &'
DrawIsTextObjectScaleStatic;; +
(;;+ ,
);;, -
;;;- . 
DrawOrthographicMode== $
(==$ %
)==% &
;==& '
DrawRichText?? 
(?? 
)?? 
;?? 
DrawParsingAA 
(AA 
)AA 
;AA 
DrawSpriteAssetCC 
(CC  
)CC  !
;CC! "
DrawStyleSheetEE 
(EE 
)EE  
;EE  !
DrawKerningII 
(II 
)II 
;II 
DrawPaddingKK 
(KK 
)KK 
;KK 
}NN 
}OO 	
	protectedQQ 
voidQQ 
DrawSortingLayerQQ '
(QQ' (
)QQ( )
{RR 	
UndoSS 
.SS 
RecordObjectSS 
(SS 

m_RendererSS (
,SS( )
$strSS* @
)SS@ A
;SSA B
	EditorGUIUU 
.UU 
BeginChangeCheckUU &
(UU& '
)UU' (
;UU( )
TextMeshProWW 
textComponentWW %
=WW& '
(WW( )
TextMeshProWW) 4
)WW4 5
m_TextComponentWW5 D
;WWD E
stringZZ 
oldNameZZ 
=ZZ 
IsPresetZZ %
?ZZ& '
SortingLayerZZ( 4
.ZZ4 5
IDToNameZZ5 =
(ZZ= >
textComponentZZ> K
.ZZK L
_SortingLayerIDZZL [
)ZZ[ \
:ZZ] ^
SortingLayerZZ_ k
.ZZk l
IDToNameZZl t
(ZZt u
textComponent	ZZu Ç
.
ZZÇ É
sortingLayerID
ZZÉ ë
)
ZZë í
;
ZZí ì
int]] 
oldLayerIndex]] 
=]] 
System]]  &
.]]& '
Array]]' ,
.]], -
IndexOf]]- 4
(]]4 5
k_SortingLayerNames]]5 H
,]]H I
oldName]]J Q
)]]Q R
;]]R S
EditorGUIUtility`` 
.`` 

fieldWidth`` '
=``( )
$num``* ,
;``, -
intaa 
newLayerIndexaa 
=aa 
EditorGUILayoutaa  /
.aa/ 0
Popupaa0 5
(aa5 6
k_SortingLayerLabelaa6 I
,aaI J
oldLayerIndexaaK X
,aaX Y
k_SortingLayerNamesaaZ m
)aam n
;aan o
ifdd 
(dd 
newLayerIndexdd 
!=dd  
oldLayerIndexdd! .
)dd. /'
UpdateTargetsSortingLayerIDee +
(ee+ ,
SortingLayeree, 8
.ee8 9
NameToIDee9 A
(eeA B
k_SortingLayerNameseeB U
[eeU V
newLayerIndexeeV c
]eec d
)eed e
)eee f
;eef g
inthh 
oldSortingOrderhh 
=hh  !
IsPresethh" *
?hh+ ,
textComponenthh- :
.hh: ;
_SortingOrderhh; H
:hhI J
textComponenthhK X
.hhX Y
sortingOrderhhY e
;hhe f
intjj  
newSortingLayerOrderjj $
=jj% &
EditorGUILayoutjj' 6
.jj6 7
IntFieldjj7 ?
(jj? @
k_OrderInLayerLabeljj@ S
,jjS T
oldSortingOrderjjU d
)jjd e
;jje f
ifll 
(ll  
newSortingLayerOrderll $
!=ll% '
textComponentll( 5
.ll5 6
sortingOrderll6 B
)llB C%
UpdateTargetsSortingOrdermm )
(mm) * 
newSortingLayerOrdermm* >
)mm> ?
;mm? @
ifoo 
(oo 
	EditorGUIoo 
.oo 
EndChangeCheckoo (
(oo( )
)oo) *
)oo* +#
m_HavePropertiesChangedpp '
=pp( )
truepp* .
;pp. /
EditorGUILayoutrr 
.rr 
Spacerr !
(rr! "
)rr" #
;rr# $
}ss 	
	protecteduu 
voiduu  
DrawOrthographicModeuu +
(uu+ ,
)uu, -
{vv 	
	EditorGUIww 
.ww 
BeginChangeCheckww &
(ww& '
)ww' (
;ww( )
EditorGUILayoutxx 
.xx 
PropertyFieldxx )
(xx) * 
m_IsOrthographicPropxx* >
,xx> ?
k_OrthographicLabelxx@ S
)xxS T
;xxT U
ifyy 
(yy 
	EditorGUIyy 
.yy 
EndChangeCheckyy (
(yy( )
)yy) *
)yy* +#
m_HavePropertiesChangedzz '
=zz( )
truezz* .
;zz. /
}{{ 	
	protected}} 
void}} 
DrawVolumetricSetup}} *
(}}* +
)}}+ ,
{~~ 	
	EditorGUI 
. 
BeginChangeCheck &
(& '
)' (
;( )
EditorGUILayout
ÄÄ 
.
ÄÄ 
PropertyField
ÄÄ )
(
ÄÄ) *$
m_IsVolumetricTextProp
ÄÄ* @
,
ÄÄ@ A
k_VolumetricLabel
ÄÄB S
)
ÄÄS T
;
ÄÄT U
if
ÅÅ 
(
ÅÅ 
	EditorGUI
ÅÅ 
.
ÅÅ 
EndChangeCheck
ÅÅ (
(
ÅÅ( )
)
ÅÅ) *
)
ÅÅ* +
{
ÇÇ %
m_HavePropertiesChanged
ÉÉ '
=
ÉÉ( )
true
ÉÉ* .
;
ÉÉ. /
m_TextComponent
ÑÑ 
.
ÑÑ  
textInfo
ÑÑ  (
.
ÑÑ( )
ResetVertexLayout
ÑÑ) :
(
ÑÑ: ;$
m_IsVolumetricTextProp
ÑÑ; Q
.
ÑÑQ R
	boolValue
ÑÑR [
)
ÑÑ[ \
;
ÑÑ\ ]
}
ÖÖ 
EditorGUILayout
áá 
.
áá 
Space
áá !
(
áá! "
)
áá" #
;
áá# $
}
àà 	
	protected
ãã 
override
ãã 
bool
ãã !
IsMixSelectionTypes
ãã  3
(
ãã3 4
)
ãã4 5
{
åå 	

GameObject
çç 
[
çç 
]
çç 
objects
çç  
=
çç! "
	Selection
çç# ,
.
çç, -
gameObjects
çç- 8
;
çç8 9
if
éé 
(
éé 
objects
éé 
.
éé 
Length
éé 
>
éé  
$num
éé! "
)
éé" #
{
èè 
for
êê 
(
êê 
int
êê 
i
êê 
=
êê 
$num
êê 
;
êê 
i
êê  !
<
êê" #
objects
êê$ +
.
êê+ ,
Length
êê, 2
;
êê2 3
i
êê4 5
++
êê5 7
)
êê7 8
{
ëë 
if
íí 
(
íí 
objects
íí 
[
íí  
i
íí  !
]
íí! "
.
íí" #
GetComponent
íí# /
<
íí/ 0
TextMeshPro
íí0 ;
>
íí; <
(
íí< =
)
íí= >
==
íí? A
null
ííB F
)
ííF G
return
ìì 
true
ìì #
;
ìì# $
}
îî 
}
ïï 
return
ññ 
false
ññ 
;
ññ 
}
óó 	
	protected
ôô 
override
ôô 
void
ôô 

OnUndoRedo
ôô  *
(
ôô* +
)
ôô+ ,
{
öö 	
int
õõ 
undoEventId
õõ 
=
õõ 
Undo
õõ "
.
õõ" #
GetCurrentGroup
õõ# 2
(
õõ2 3
)
õõ3 4
;
õõ4 5
int
úú 
lastUndoEventId
úú 
=
úú  !
	s_EventId
úú" +
;
úú+ ,
if
ûû 
(
ûû 
undoEventId
ûû 
!=
ûû 
lastUndoEventId
ûû .
)
ûû. /
{
üü 
for
†† 
(
†† 
int
†† 
i
†† 
=
†† 
$num
†† 
;
†† 
i
††  !
<
††" #
targets
††$ +
.
††+ ,
Length
††, 2
;
††2 3
i
††4 5
++
††5 7
)
††7 8
{
°°  
TMPro_EventManager
££ &
.
££& '-
ON_TEXTMESHPRO_PROPERTY_CHANGED
££' F
(
££F G
true
££G K
,
££K L
targets
££M T
[
££T U
i
££U V
]
££V W
as
££X Z
TextMeshPro
££[ f
)
££f g
;
££g h
	s_EventId
§§ 
=
§§ 
undoEventId
§§  +
;
§§+ ,
}
•• 
}
¶¶ 
}
ßß 	
void
©© )
UpdateTargetsSortingLayerID
©© (
(
©©( )
int
©©) ,
sortingLayerID
©©- ;
)
©©; <
{
™™ 	
for
´´ 
(
´´ 
int
´´ 
i
´´ 
=
´´ 
$num
´´ 
;
´´ 
i
´´ 
<
´´ 
targets
´´  '
.
´´' (
Length
´´( .
;
´´. /
i
´´0 1
++
´´1 3
)
´´3 4
{
¨¨ 
var
≠≠ 
textComponent
≠≠ !
=
≠≠" #
(
≠≠$ %
TextMeshPro
≠≠% 0
)
≠≠0 1
targets
≠≠1 8
[
≠≠8 9
i
≠≠9 :
]
≠≠: ;
;
≠≠; <
if
ØØ 
(
ØØ 
textComponent
ØØ !
!=
ØØ" $
null
ØØ% )
)
ØØ) *
textComponent
∞∞ !
.
∞∞! "
sortingLayerID
∞∞" 0
=
∞∞1 2
sortingLayerID
∞∞3 A
;
∞∞A B
}
±± 
}
≤≤ 	
void
¥¥ '
UpdateTargetsSortingOrder
¥¥ &
(
¥¥& '
int
¥¥' *
sortingOrder
¥¥+ 7
)
¥¥7 8
{
µµ 	
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂ 
$num
∂∂ 
;
∂∂ 
i
∂∂ 
<
∂∂ 
targets
∂∂  '
.
∂∂' (
Length
∂∂( .
;
∂∂. /
i
∂∂0 1
++
∂∂1 3
)
∂∂3 4
{
∑∑ 
var
∏∏ 
textComponent
∏∏ !
=
∏∏" #
(
∏∏$ %
TextMeshPro
∏∏% 0
)
∏∏0 1
targets
∏∏1 8
[
∏∏8 9
i
∏∏9 :
]
∏∏: ;
;
∏∏; <
if
∫∫ 
(
∫∫ 
textComponent
∫∫ !
!=
∫∫" $
null
∫∫% )
)
∫∫) *
textComponent
ªª !
.
ªª! "
sortingOrder
ªª" .
=
ªª/ 0
sortingOrder
ªª1 =
;
ªª= >
}
ºº 
}
ΩΩ 	
}
ææ 
}øø ≠*
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\DropdownOptionListDrawer.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
[  
CustomPropertyDrawer 
( 
typeof  
(  !
TMP_Dropdown! -
.- .
OptionDataList. <
)< =
,= >
true? C
)C D
]D E
class		 	$
DropdownOptionListDrawer		
 "
:		# $
PropertyDrawer		% 3
{

 
private 
ReorderableList 
m_ReorderableList  1
;1 2
private 
void 
Init 
( 
SerializedProperty ,
property- 5
)5 6
{ 	
if 
( 
m_ReorderableList !
!=" $
null% )
)) *
return 
; 
SerializedProperty 
array $
=% &
property' /
./ 0 
FindPropertyRelative0 D
(D E
$strE P
)P Q
;Q R
m_ReorderableList 
= 
new  #
ReorderableList$ 3
(3 4
property4 <
.< =
serializedObject= M
,M N
arrayO T
)T U
;U V
m_ReorderableList 
. 
drawElementCallback 1
=2 3
DrawOptionData4 B
;B C
m_ReorderableList 
. 
drawHeaderCallback 0
=1 2

DrawHeader3 =
;= >
m_ReorderableList 
. 
elementHeight +
+=, .
$num/ 1
;1 2
} 	
public 
override 
void 
OnGUI "
(" #
Rect# '
position( 0
,0 1
SerializedProperty2 D
propertyE M
,M N

GUIContentO Y
labelZ _
)_ `
{ 	
Init 
( 
property 
) 
; 
m_ReorderableList 
. 
DoList $
($ %
position% -
)- .
;. /
} 	
private!! 
void!! 

DrawHeader!! 
(!!  
Rect!!  $
rect!!% )
)!!) *
{"" 	
GUI## 
.## 
Label## 
(## 
rect## 
,## 
$str## %
)##% &
;##& '
}$$ 	
private&& 
void&& 
DrawOptionData&& #
(&&# $
Rect&&$ (
rect&&) -
,&&- .
int&&/ 2
index&&3 8
,&&8 9
bool&&: >
isActive&&? G
,&&G H
bool&&I M
	isFocused&&N W
)&&W X
{'' 	
SerializedProperty(( 
itemData(( '
=((( )
m_ReorderableList((* ;
.((; <
serializedProperty((< N
.((N O"
GetArrayElementAtIndex((O e
(((e f
index((f k
)((k l
;((l m
SerializedProperty)) 
itemText)) '
=))( )
itemData))* 2
.))2 3 
FindPropertyRelative))3 G
())G H
$str))H P
)))P Q
;))Q R
SerializedProperty** 
	itemImage** (
=**) *
itemData**+ 3
.**3 4 
FindPropertyRelative**4 H
(**H I
$str**I R
)**R S
;**S T

RectOffset,, 
offset,, 
=,, 
new,,  #

RectOffset,,$ .
(,,. /
$num,,/ 0
,,,0 1
$num,,2 3
,,,3 4
-,,5 6
$num,,6 7
,,,7 8
-,,9 :
$num,,: ;
),,; <
;,,< =
rect-- 
=-- 
offset-- 
.-- 
Add-- 
(-- 
rect-- "
)--" #
;--# $
rect.. 
... 
height.. 
=.. 
EditorGUIUtility.. *
...* +
singleLineHeight..+ ;
;..; <
	EditorGUI00 
.00 
PropertyField00 #
(00# $
rect00$ (
,00( )
itemText00* 2
,002 3

GUIContent004 >
.00> ?
none00? C
)00C D
;00D E
rect11 
.11 
y11 
+=11 
EditorGUIUtility11 &
.11& '
singleLineHeight11' 7
;117 8
	EditorGUI22 
.22 
PropertyField22 #
(22# $
rect22$ (
,22( )
	itemImage22* 3
,223 4

GUIContent225 ?
.22? @
none22@ D
)22D E
;22E F
}33 	
public55 
override55 
float55 
GetPropertyHeight55 /
(55/ 0
SerializedProperty550 B
property55C K
,55K L

GUIContent55M W
label55X ]
)55] ^
{66 	
Init77 
(77 
property77 
)77 
;77 
return99 
m_ReorderableList99 $
.99$ %
	GetHeight99% .
(99. /
)99/ 0
;990 1
}:: 	
};; 
}<< ù¶
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_UIStyleManager.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
public		 

static		 
class		 
TMP_UIStyleManager		 *
{

 
public 
static 
GUIStyle 
label $
;$ %
public 
static 
GUIStyle 
textAreaBoxWindow 0
;0 1
public 
static 
GUIStyle 
boldFoldout *
;* +
public 
static 
GUIStyle 

panelTitle )
;) *
public 
static 
GUIStyle 
sectionHeader ,
;, -
public 
static 
GUIStyle 
centeredLabel ,
;, -
public 
static 
GUIStyle 

rightLabel )
;) *
public 
static 
GUIStyle 
wrappingTextArea /
;/ 0
public 
static 
GUIStyle 
alignmentButtonLeft 2
;2 3
public 
static 
GUIStyle 
alignmentButtonMid 1
;1 2
public 
static 
GUIStyle  
alignmentButtonRight 3
;3 4
public 
static 
	Texture2D 
	alignLeft  )
;) *
public 
static 
	Texture2D 
alignCenter  +
;+ ,
public 
static 
	Texture2D 

alignRight  *
;* +
public 
static 
	Texture2D 
alignJustified  .
;. /
public 
static 
	Texture2D 

alignFlush  *
;* +
public 
static 
	Texture2D 
alignGeoCenter  .
;. /
public 
static 
	Texture2D 
alignTop  (
;( )
public   
static   
	Texture2D   
alignMiddle    +
;  + ,
public!! 
static!! 
	Texture2D!! 
alignBottom!!  +
;!!+ ,
public"" 
static"" 
	Texture2D"" 
alignBaseline""  -
;""- .
public## 
static## 
	Texture2D## 
alignMidline##  ,
;##, -
public$$ 
static$$ 
	Texture2D$$ 
alignCapline$$  ,
;$$, -
public%% 
static%% 
	Texture2D%%  
sectionHeaderTexture%%  4
;%%4 5
public'' 
static'' 

GUIContent''  
[''  !
]''! "
alignContentA''# 0
;''0 1
public(( 
static(( 

GUIContent((  
[((  !
]((! "
alignContentB((# 0
;((0 1
static** 
TMP_UIStyleManager** !
(**! "
)**" #
{++ 	
var--  
tmproAssetFolderPath-- $
=--% &
TMP_EditorUtility--' 8
.--8 9
packageRelativePath--9 L
;--L M
if// 
(// 
EditorGUIUtility//  
.//  !
	isProSkin//! *
)//* +
{00 
	alignLeft11 
=11 
AssetDatabase11 )
.11) *
LoadAssetAtPath11* 9
(119 : 
tmproAssetFolderPath11: N
+11O P
$str11Q 
,	11 Ä
typeof
11Å á
(
11á à
	Texture2D
11à ë
)
11ë í
)
11í ì
as
11î ñ
	Texture2D
11ó †
;
11† °
alignCenter22 
=22 
AssetDatabase22 +
.22+ ,
LoadAssetAtPath22, ;
(22; < 
tmproAssetFolderPath22< P
+22Q R
$str	22S É
,
22É Ñ
typeof
22Ö ã
(
22ã å
	Texture2D
22å ï
)
22ï ñ
)
22ñ ó
as
22ò ö
	Texture2D
22õ §
;
22§ •

alignRight33 
=33 
AssetDatabase33 *
.33* +
LoadAssetAtPath33+ :
(33: ; 
tmproAssetFolderPath33; O
+33P Q
$str	33R Å
,
33Å Ç
typeof
33É â
(
33â ä
	Texture2D
33ä ì
)
33ì î
)
33î ï
as
33ñ ò
	Texture2D
33ô ¢
;
33¢ £
alignJustified44 
=44  
AssetDatabase44! .
.44. /
LoadAssetAtPath44/ >
(44> ? 
tmproAssetFolderPath44? S
+44T U
$str	44V â
,
44â ä
typeof
44ã ë
(
44ë í
	Texture2D
44í õ
)
44õ ú
)
44ú ù
as
44û †
	Texture2D
44° ™
;
44™ ´

alignFlush55 
=55 
AssetDatabase55 *
.55* +
LoadAssetAtPath55+ :
(55: ; 
tmproAssetFolderPath55; O
+55P Q
$str	55R Å
,
55Å Ç
typeof
55É â
(
55â ä
	Texture2D
55ä ì
)
55ì î
)
55î ï
as
55ñ ò
	Texture2D
55ô ¢
;
55¢ £
alignGeoCenter66 
=66  
AssetDatabase66! .
.66. /
LoadAssetAtPath66/ >
(66> ? 
tmproAssetFolderPath66? S
+66T U
$str	66V â
,
66â ä
typeof
66ã ë
(
66ë í
	Texture2D
66í õ
)
66õ ú
)
66ú ù
as
66û †
	Texture2D
66° ™
;
66™ ´
alignTop77 
=77 
AssetDatabase77 (
.77( )
LoadAssetAtPath77) 8
(778 9 
tmproAssetFolderPath779 M
+77N O
$str77P }
,77} ~
typeof	77 Ö
(
77Ö Ü
	Texture2D
77Ü è
)
77è ê
)
77ê ë
as
77í î
	Texture2D
77ï û
;
77û ü
alignMiddle88 
=88 
AssetDatabase88 +
.88+ ,
LoadAssetAtPath88, ;
(88; < 
tmproAssetFolderPath88< P
+88Q R
$str	88S É
,
88É Ñ
typeof
88Ö ã
(
88ã å
	Texture2D
88å ï
)
88ï ñ
)
88ñ ó
as
88ò ö
	Texture2D
88õ §
;
88§ •
alignBottom99 
=99 
AssetDatabase99 +
.99+ ,
LoadAssetAtPath99, ;
(99; < 
tmproAssetFolderPath99< P
+99Q R
$str	99S É
,
99É Ñ
typeof
99Ö ã
(
99ã å
	Texture2D
99å ï
)
99ï ñ
)
99ñ ó
as
99ò ö
	Texture2D
99õ §
;
99§ •
alignBaseline:: 
=:: 
AssetDatabase::  -
.::- .
LoadAssetAtPath::. =
(::= > 
tmproAssetFolderPath::> R
+::S T
$str	::U á
,
::á à
typeof
::â è
(
::è ê
	Texture2D
::ê ô
)
::ô ö
)
::ö õ
as
::ú û
	Texture2D
::ü ®
;
::® ©
alignMidline;; 
=;; 
AssetDatabase;; ,
.;;, -
LoadAssetAtPath;;- <
(;;< = 
tmproAssetFolderPath;;= Q
+;;R S
$str	;;T Ö
,
;;Ö Ü
typeof
;;á ç
(
;;ç é
	Texture2D
;;é ó
)
;;ó ò
)
;;ò ô
as
;;ö ú
	Texture2D
;;ù ¶
;
;;¶ ß
alignCapline<< 
=<< 
AssetDatabase<< ,
.<<, -
LoadAssetAtPath<<- <
(<<< = 
tmproAssetFolderPath<<= Q
+<<R S
$str	<<T Ö
,
<<Ö Ü
typeof
<<á ç
(
<<ç é
	Texture2D
<<é ó
)
<<ó ò
)
<<ò ô
as
<<ö ú
	Texture2D
<<ù ¶
;
<<¶ ß 
sectionHeaderTexture== $
===% &
AssetDatabase==' 4
.==4 5
LoadAssetAtPath==5 D
(==D E 
tmproAssetFolderPath==E Y
+==Z [
$str	==\ è
,
==è ê
typeof
==ë ó
(
==ó ò
	Texture2D
==ò °
)
==° ¢
)
==¢ £
as
==§ ¶
	Texture2D
==ß ∞
;
==∞ ±
}>> 
else?? 
{@@ 
	alignLeftAA 
=AA 
AssetDatabaseAA )
.AA) *
LoadAssetAtPathAA* 9
(AA9 : 
tmproAssetFolderPathAA: N
+AAO P
$str	AAQ Ö
,
AAÖ Ü
typeof
AAá ç
(
AAç é
	Texture2D
AAé ó
)
AAó ò
)
AAò ô
as
AAö ú
	Texture2D
AAù ¶
;
AA¶ ß
alignCenterBB 
=BB 
AssetDatabaseBB +
.BB+ ,
LoadAssetAtPathBB, ;
(BB; < 
tmproAssetFolderPathBB< P
+BBQ R
$str	BBS â
,
BBâ ä
typeof
BBã ë
(
BBë í
	Texture2D
BBí õ
)
BBõ ú
)
BBú ù
as
BBû †
	Texture2D
BB° ™
;
BB™ ´

alignRightCC 
=CC 
AssetDatabaseCC *
.CC* +
LoadAssetAtPathCC+ :
(CC: ; 
tmproAssetFolderPathCC; O
+CCP Q
$str	CCR á
,
CCá à
typeof
CCâ è
(
CCè ê
	Texture2D
CCê ô
)
CCô ö
)
CCö õ
as
CCú û
	Texture2D
CCü ®
;
CC® ©
alignJustifiedDD 
=DD  
AssetDatabaseDD! .
.DD. /
LoadAssetAtPathDD/ >
(DD> ? 
tmproAssetFolderPathDD? S
+DDT U
$str	DDV è
,
DDè ê
typeof
DDë ó
(
DDó ò
	Texture2D
DDò °
)
DD° ¢
)
DD¢ £
as
DD§ ¶
	Texture2D
DDß ∞
;
DD∞ ±

alignFlushEE 
=EE 
AssetDatabaseEE *
.EE* +
LoadAssetAtPathEE+ :
(EE: ; 
tmproAssetFolderPathEE; O
+EEP Q
$str	EER á
,
EEá à
typeof
EEâ è
(
EEè ê
	Texture2D
EEê ô
)
EEô ö
)
EEö õ
as
EEú û
	Texture2D
EEü ®
;
EE® ©
alignGeoCenterFF 
=FF  
AssetDatabaseFF! .
.FF. /
LoadAssetAtPathFF/ >
(FF> ? 
tmproAssetFolderPathFF? S
+FFT U
$str	FFV è
,
FFè ê
typeof
FFë ó
(
FFó ò
	Texture2D
FFò °
)
FF° ¢
)
FF¢ £
as
FF§ ¶
	Texture2D
FFß ∞
;
FF∞ ±
alignTopGG 
=GG 
AssetDatabaseGG (
.GG( )
LoadAssetAtPathGG) 8
(GG8 9 
tmproAssetFolderPathGG9 M
+GGN O
$str	GGP É
,
GGÉ Ñ
typeof
GGÖ ã
(
GGã å
	Texture2D
GGå ï
)
GGï ñ
)
GGñ ó
as
GGò ö
	Texture2D
GGõ §
;
GG§ •
alignMiddleHH 
=HH 
AssetDatabaseHH +
.HH+ ,
LoadAssetAtPathHH, ;
(HH; < 
tmproAssetFolderPathHH< P
+HHQ R
$str	HHS â
,
HHâ ä
typeof
HHã ë
(
HHë í
	Texture2D
HHí õ
)
HHõ ú
)
HHú ù
as
HHû †
	Texture2D
HH° ™
;
HH™ ´
alignBottomII 
=II 
AssetDatabaseII +
.II+ ,
LoadAssetAtPathII, ;
(II; < 
tmproAssetFolderPathII< P
+IIQ R
$str	IIS â
,
IIâ ä
typeof
IIã ë
(
IIë í
	Texture2D
IIí õ
)
IIõ ú
)
IIú ù
as
IIû †
	Texture2D
II° ™
;
II™ ´
alignBaselineJJ 
=JJ 
AssetDatabaseJJ  -
.JJ- .
LoadAssetAtPathJJ. =
(JJ= > 
tmproAssetFolderPathJJ> R
+JJS T
$str	JJU ç
,
JJç é
typeof
JJè ï
(
JJï ñ
	Texture2D
JJñ ü
)
JJü †
)
JJ† °
as
JJ¢ §
	Texture2D
JJ• Æ
;
JJÆ Ø
alignMidlineKK 
=KK 
AssetDatabaseKK ,
.KK, -
LoadAssetAtPathKK- <
(KK< = 
tmproAssetFolderPathKK= Q
+KKR S
$str	KKT ã
,
KKã å
typeof
KKç ì
(
KKì î
	Texture2D
KKî ù
)
KKù û
)
KKû ü
as
KK† ¢
	Texture2D
KK£ ¨
;
KK¨ ≠
alignCaplineLL 
=LL 
AssetDatabaseLL ,
.LL, -
LoadAssetAtPathLL- <
(LL< = 
tmproAssetFolderPathLL= Q
+LLR S
$str	LLT ã
,
LLã å
typeof
LLç ì
(
LLì î
	Texture2D
LLî ù
)
LLù û
)
LLû ü
as
LL† ¢
	Texture2D
LL£ ¨
;
LL¨ ≠ 
sectionHeaderTextureMM $
=MM% &
AssetDatabaseMM' 4
.MM4 5
LoadAssetAtPathMM5 D
(MMD E 
tmproAssetFolderPathMME Y
+MMZ [
$str	MM\ ê
,
MMê ë
typeof
MMí ò
(
MMò ô
	Texture2D
MMô ¢
)
MM¢ £
)
MM£ §
as
MM• ß
	Texture2D
MM® ±
;
MM± ≤
}NN 
labelPP 
=PP 
newPP 
GUIStylePP  
(PP  !
EditorStylesPP! -
.PP- .
labelPP. 3
)PP3 4
{PP5 6
richTextPP7 ?
=PP@ A
truePPB F
,PPF G
wordWrapPPH P
=PPQ R
truePPS W
,PPW X
stretchWidthPPY e
=PPf g
truePPh l
}PPm n
;PPn o
textAreaBoxWindowQQ 
=QQ 
newQQ  #
GUIStyleQQ$ ,
(QQ, -
EditorStylesQQ- 9
.QQ9 :
textAreaQQ: B
)QQB C
{QQD E
richTextQQF N
=QQO P
trueQQQ U
}QQV W
;QQW X
boldFoldoutRR 
=RR 
newRR 
GUIStyleRR &
(RR& '
EditorStylesRR' 3
.RR3 4
foldoutRR4 ;
)RR; <
{RR= >
	fontStyleRR? H
=RRI J
	FontStyleRRK T
.RRT U
BoldRRU Y
}RRZ [
;RR[ \

panelTitleSS 
=SS 
newSS 
GUIStyleSS %
(SS% &
EditorStylesSS& 2
.SS2 3
labelSS3 8
)SS8 9
{SS: ;
	fontStyleSS< E
=SSF G
	FontStyleSSH Q
.SSQ R
BoldSSR V
}SSW X
;SSX Y
sectionHeaderUU 
=UU 
newUU 
GUIStyleUU  (
(UU( )
EditorStylesUU) 5
.UU5 6
labelUU6 ;
)UU; <
{UU= >
fixedHeightUU? J
=UUK L
$numUUM O
,UUO P
richTextUUQ Y
=UUZ [
trueUU\ `
,UU` a
borderUUb h
=UUi j
newUUk n

RectOffsetUUo y
(UUy z
$numUUz {
,UU{ |
$numUU} ~
,UU~ 
$num
UUÄ Å
,
UUÅ Ç
$num
UUÉ Ñ
)
UUÑ Ö
,
UUÖ Ü
overflow
UUá è
=
UUê ë
new
UUí ï

RectOffset
UUñ †
(
UU† °
$num
UU° ¢
,
UU¢ £
$num
UU§ •
,
UU• ¶
$num
UUß ®
,
UU® ©
$num
UU™ ´
)
UU´ ¨
,
UU¨ ≠
padding
UUÆ µ
=
UU∂ ∑
new
UU∏ ª

RectOffset
UUº ∆
(
UU∆ «
$num
UU« »
,
UU» …
$num
UU  À
,
UUÀ Ã
$num
UUÕ Œ
,
UUŒ œ
$num
UU– —
)
UU— “
}
UU” ‘
;
UU‘ ’
sectionHeaderVV 
.VV 
normalVV  
.VV  !

backgroundVV! +
=VV, - 
sectionHeaderTextureVV. B
;VVB C
centeredLabelXX 
=XX 
newXX 
GUIStyleXX  (
(XX( )
EditorStylesXX) 5
.XX5 6
labelXX6 ;
)XX; <
{XX= >
	alignmentXX? H
=XXI J

TextAnchorXXK U
.XXU V
MiddleCenterXXV b
}XXb c
;XXc d

rightLabelYY 
=YY 
newYY 
GUIStyleYY %
(YY% &
EditorStylesYY& 2
.YY2 3
labelYY3 8
)YY8 9
{YY: ;
	alignmentYY< E
=YYF G

TextAnchorYYH R
.YYR S
MiddleRightYYS ^
,YY^ _
richTextYY` h
=YYi j
trueYYk o
}YYp q
;YYq r
alignmentButtonLeft\\ 
=\\  !
new\\" %
GUIStyle\\& .
(\\. /
EditorStyles\\/ ;
.\\; <
miniButtonLeft\\< J
)\\J K
;\\K L
alignmentButtonLeft]] 
.]]  
padding]]  '
.]]' (
left]]( ,
=]]- .
$num]]/ 0
;]]0 1
alignmentButtonLeft^^ 
.^^  
padding^^  '
.^^' (
right^^( -
=^^. /
$num^^0 1
;^^1 2
alignmentButtonLeft__ 
.__  
padding__  '
.__' (
top__( +
=__, -
$num__. /
;__/ 0
alignmentButtonLeft`` 
.``  
padding``  '
.``' (
bottom``( .
=``/ 0
$num``1 2
;``2 3
alignmentButtonMidbb 
=bb  
newbb! $
GUIStylebb% -
(bb- .
EditorStylesbb. :
.bb: ;
miniButtonMidbb; H
)bbH I
;bbI J
alignmentButtonMidcc 
.cc 
paddingcc &
.cc& '
leftcc' +
=cc, -
$numcc. /
;cc/ 0
alignmentButtonMiddd 
.dd 
paddingdd &
.dd& '
rightdd' ,
=dd- .
$numdd/ 0
;dd0 1
alignmentButtonLeftee 
.ee  
paddingee  '
.ee' (
topee( +
=ee, -
$numee. /
;ee/ 0
alignmentButtonLeftff 
.ff  
paddingff  '
.ff' (
bottomff( .
=ff/ 0
$numff1 2
;ff2 3 
alignmentButtonRighthh  
=hh! "
newhh# &
GUIStylehh' /
(hh/ 0
EditorStyleshh0 <
.hh< =
miniButtonRighthh= L
)hhL M
;hhM N 
alignmentButtonRightii  
.ii  !
paddingii! (
.ii( )
leftii) -
=ii. /
$numii0 1
;ii1 2 
alignmentButtonRightjj  
.jj  !
paddingjj! (
.jj( )
rightjj) .
=jj/ 0
$numjj1 2
;jj2 3
alignmentButtonLeftkk 
.kk  
paddingkk  '
.kk' (
topkk( +
=kk, -
$numkk. /
;kk/ 0
alignmentButtonLeftll 
.ll  
paddingll  '
.ll' (
bottomll( .
=ll/ 0
$numll1 2
;ll2 3
wrappingTextAreann 
=nn 
newnn "
GUIStylenn# +
(nn+ ,
EditorStylesnn, 8
.nn8 9
textAreann9 A
)nnA B
;nnB C
wrappingTextAreaoo 
.oo 
wordWrapoo %
=oo& '
trueoo( ,
;oo, -
alignContentAqq 
=qq 
newqq 
[qq  !
]qq! "
{rr 
newss 

GUIContentss 
(ss 
	alignLeftss (
,ss( )
$strss* 0
)ss0 1
,ss1 2
newtt 

GUIContenttt 
(tt 
alignCentertt *
,tt* +
$strtt, 4
)tt4 5
,tt5 6
newuu 

GUIContentuu 
(uu 

alignRightuu )
,uu) *
$struu+ 2
)uu2 3
,uu3 4
newvv 

GUIContentvv 
(vv 
alignJustifiedvv -
,vv- .
$strvv/ :
)vv: ;
,vv; <
newww 

GUIContentww 
(ww 

alignFlushww )
,ww) *
$strww+ 2
)ww2 3
,ww3 4
newxx 

GUIContentxx 
(xx 
alignGeoCenterxx -
,xx- .
$strxx/ @
)xx@ A
}yy 
;yy 
alignContentB{{ 
={{ 
new{{ 
[{{  !
]{{! "
{|| 
new}} 

GUIContent}} 
(}} 
alignTop}} '
,}}' (
$str}}) .
)}}. /
,}}/ 0
new~~ 

GUIContent~~ 
(~~ 
alignMiddle~~ *
,~~* +
$str~~, 4
)~~4 5
,~~5 6
new 

GUIContent 
( 
alignBottom *
,* +
$str, 4
)4 5
,5 6
new
ÄÄ 

GUIContent
ÄÄ 
(
ÄÄ 
alignBaseline
ÄÄ ,
,
ÄÄ, -
$str
ÄÄ. 8
)
ÄÄ8 9
,
ÄÄ9 :
new
ÅÅ 

GUIContent
ÅÅ 
(
ÅÅ 
alignMidline
ÅÅ +
,
ÅÅ+ ,
$str
ÅÅ- 6
)
ÅÅ6 7
,
ÅÅ7 8
new
ÇÇ 

GUIContent
ÇÇ 
(
ÇÇ 
alignCapline
ÇÇ +
,
ÇÇ+ ,
$str
ÇÇ- 6
)
ÇÇ6 7
}
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
}
ÖÖ 
}ÜÜ ê
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_StyleAssetMenu.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
public

 

static

 
class

 
TMP_StyleAssetMenu

 *
{ 
[ 	
MenuItem	 
( 
$str 9
,9 :
false; @
,@ A
$numB E
)E F
]F G
public 
static 
void *
CreateTextMeshProObjectPerform 9
(9 :
): ;
{ 	
string 
filePath 
; 
if 
( 
	Selection 
. 

assetGUIDs $
.$ %
Length% +
==, .
$num/ 0
)0 1
{ 
filePath 
= 
$str #
;# $
} 
else 
{ 
filePath 
= 
AssetDatabase (
.( )
GUIDToAssetPath) 8
(8 9
	Selection9 B
.B C

assetGUIDsC M
[M N
$numN O
]O P
)P Q
;Q R
string 
fileExtension $
=% &
Path' +
.+ ,
GetExtension, 8
(8 9
filePath9 A
)A B
;B C
if 
( 
fileExtension !
!=" $
$str% '
)' (
{ 
filePath 
= 
Path #
.# $
GetDirectoryName$ 4
(4 5
filePath5 =
)= >
;> ?
}   
}!! 
string$$ 
filePathWithName$$ #
=$$$ %
AssetDatabase$$& 3
.$$3 4#
GenerateUniqueAssetPath$$4 K
($$K L
filePath$$L T
+$$U V
$str$$W o
)$$o p
;$$p q
TMP_StyleSheet'' 

styleSheet'' %
=''& '
ScriptableObject''( 8
.''8 9
CreateInstance''9 G
<''G H
TMP_StyleSheet''H V
>''V W
(''W X
)''X Y
;''Y Z
	TMP_Style** 
style** 
=** 
new** !
	TMP_Style**" +
(**+ ,
$str**, 4
,**4 5
string**6 <
.**< =
Empty**= B
,**B C
string**D J
.**J K
Empty**K P
)**P Q
;**Q R

styleSheet++ 
.++ 
styles++ 
.++ 
Add++ !
(++! "
style++" '
)++' (
;++( )
AssetDatabase-- 
.-- 
CreateAsset-- %
(--% &

styleSheet--& 0
,--0 1
filePathWithName--2 B
)--B C
;--C D
EditorUtility// 
.// 
SetDirty// "
(//" #

styleSheet//# -
)//- .
;//. /
AssetDatabase11 
.11 

SaveAssets11 $
(11$ %
)11% &
;11& '
EditorUtility33 
.33 
FocusProjectWindow33 ,
(33, -
)33- .
;33. /
EditorGUIUtility44 
.44 

PingObject44 '
(44' (

styleSheet44( 2
)442 3
;443 4
}55 	
}66 
}88 û
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_ProjectTextSettings.csı0
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_BitmapShaderGUI.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
public 

class 
TMP_BitmapShaderGUI $
:% &
TMP_BaseShaderGUI' 8
{ 
static 
bool 
s_Face 
= 
true !
;! "
	protected

 
override

 
void

 
DoGUI

  %
(

% &
)

& '
{ 	
s_Face 
= 

BeginPanel 
(  
$str  &
,& '
s_Face( .
). /
;/ 0
if 
( 
s_Face 
) 
{ 
DoFacePanel 
( 
) 
; 
} 
EndPanel 
( 
) 
; 
s_DebugExtended 
= 

BeginPanel (
(( )
$str) 9
,9 :
s_DebugExtended; J
)J K
;K L
if 
( 
s_DebugExtended 
)  
{ 
DoDebugPanel 
( 
) 
; 
} 
EndPanel 
( 
) 
; 
} 	
void 
DoFacePanel 
( 
) 
{ 	
	EditorGUI 
. 
indentLevel !
+=" $
$num% &
;& '
if   
(   

m_Material   
.   
HasProperty   &
(  & '
ShaderUtilities  ' 6
.  6 7

ID_FaceTex  7 A
)  A B
)  B C
{!! 
DoColor"" 
("" 
$str"" $
,""$ %
$str""& -
)""- .
;"". /
DoTexture2D## 
(## 
$str## &
,##& '
$str##( 1
,##1 2
true##3 7
)##7 8
;##8 9
}$$ 
else%% 
{&& 
DoColor'' 
('' 
$str''  
,''  !
$str''" )
)'') *
;''* +
DoSlider(( 
((( 
$str(( (
,((( )
$str((* 9
)((9 :
;((: ;
})) 
	EditorGUI++ 
.++ 
indentLevel++ !
-=++" $
$num++% &
;++& '
EditorGUILayout-- 
.-- 
Space-- !
(--! "
)--" #
;--# $
}.. 	
void00 
DoDebugPanel00 
(00 
)00 
{11 	
	EditorGUI22 
.22 
indentLevel22 !
+=22" $
$num22% &
;22& '
DoTexture2D33 
(33 
$str33 "
,33" #
$str33$ 0
)330 1
;331 2
if44 
(44 

m_Material44 
.44 
HasProperty44 &
(44& '
ShaderUtilities44' 6
.446 7
ID_VertexOffsetX447 G
)44G H
)44H I
{55 
if66 
(66 

m_Material66 
.66 
HasProperty66 *
(66* +
ShaderUtilities66+ :
.66: ;

ID_Padding66; E
)66E F
)66F G
{77 
EditorGUILayout88 #
.88# $
Space88$ )
(88) *
)88* +
;88+ ,
DoFloat99 
(99 
$str99 &
,99& '
$str99( 1
)991 2
;992 3
}:: 
EditorGUILayout<< 
.<<  
Space<<  %
(<<% &
)<<& '
;<<' (
DoFloat== 
(== 
$str== (
,==( )
$str==* 4
)==4 5
;==5 6
DoFloat>> 
(>> 
$str>> (
,>>( )
$str>>* 4
)>>4 5
;>>5 6
}?? 
ifAA 
(AA 

m_MaterialAA 
.AA 
HasPropertyAA &
(AA& '
ShaderUtilitiesAA' 6
.AA6 7
ID_MaskSoftnessXAA7 G
)AAG H
)AAH I
{BB 
EditorGUILayoutCC 
.CC  
SpaceCC  %
(CC% &
)CC& '
;CC' (
DoFloatDD 
(DD 
$strDD (
,DD( )
$strDD* 6
)DD6 7
;DD7 8
DoFloatEE 
(EE 
$strEE (
,EE( )
$strEE* 6
)EE6 7
;EE7 8
DoVectorFF 
(FF 
$strFF $
,FF$ %
$strFF& 1
,FF1 2
s_LbrtVectorLabelsFF3 E
)FFE F
;FFF G
}GG 
ifII 
(II 

m_MaterialII 
.II 
HasPropertyII &
(II& '
ShaderUtilitiesII' 6
.II6 7
ID_StencilIDII7 C
)IIC D
)IID E
{JJ 
EditorGUILayoutKK 
.KK  
SpaceKK  %
(KK% &
)KK& '
;KK' (
DoFloatLL 
(LL 
$strLL "
,LL" #
$strLL$ 0
)LL0 1
;LL1 2
DoFloatMM 
(MM 
$strMM &
,MM& '
$strMM( 6
)MM6 7
;MM7 8
}NN 
ifPP 
(PP 

m_MaterialPP 
.PP 
HasPropertyPP &
(PP& '
ShaderUtilitiesPP' 6
.PP6 7
ShaderTag_CullModePP7 I
)PPI J
)PPJ K
{QQ 
EditorGUILayoutRR 
.RR  
SpaceRR  %
(RR% &
)RR& '
;RR' (
DoPopupSS 
(SS 
$strSS #
,SS# $
$strSS% 0
,SS0 1
s_CullingTypeLabelsSS2 E
)SSE F
;SSF G
}TT 
EditorGUILayoutVV 
.VV 
SpaceVV !
(VV! "
)VV" #
;VV# $
	EditorGUIXX 
.XX 
indentLevelXX !
-=XX" $
$numXX% &
;XX& '
EditorGUILayoutZZ 
.ZZ 
SpaceZZ !
(ZZ! "
)ZZ" #
;ZZ# $
}[[ 	
}\\ 
}]] ˝
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_SubMeshUI_Editor.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
[ 
CustomEditor 
( 
typeof 
( 
TMP_SubMeshUI &
)& '
)' (
,( )"
CanEditMultipleObjects* @
]@ A
public 

class  
TMP_SubMeshUI_Editor %
:& '
Editor( .
{		 
private

 
struct

 
	m_foldout

  
{ 	
public 
static 
bool 
fontSettings +
=, -
true. 2
;2 3
} 	
private 
SerializedProperty "
fontAsset_prop# 1
;1 2
private 
SerializedProperty "
spriteAsset_prop# 3
;3 4
private 
Editor 
m_materialEditor '
;' (
private 
Material 
m_targetMaterial )
;) *
public 
void 
OnEnable 
( 
) 
{ 	
fontAsset_prop 
= 
serializedObject -
.- .
FindProperty. :
(: ;
$str; H
)H I
;I J
spriteAsset_prop   
=   
serializedObject   /
.  / 0
FindProperty  0 <
(  < =
$str  = L
)  L M
;  M N
}// 	
public22 
void22 
	OnDisable22 
(22 
)22 
{33 	
}<< 	
public@@ 
override@@ 
void@@ 
OnInspectorGUI@@ +
(@@+ ,
)@@, -
{AA 	
GUIBB 
.BB 
enabledBB 
=BB 
falseBB 
;BB  
EditorGUILayoutCC 
.CC 
PropertyFieldCC )
(CC) *
fontAsset_propCC* 8
)CC8 9
;CC9 :
EditorGUILayoutDD 
.DD 
PropertyFieldDD )
(DD) *
spriteAsset_propDD* :
)DD: ;
;DD; <
GUIEE 
.EE 
enabledEE 
=EE 
trueEE 
;EE 
EditorGUILayoutGG 
.GG 
SpaceGG !
(GG! "
)GG" #
;GG# $
}ee 	
}gg 
}hh èÆ
ôD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_SpriteAssetEditor.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{		 
[ 
CustomEditor 
( 
typeof 
( 
TMP_SpriteAsset (
)( )
)) *
]* +
public 

class !
TMP_SpriteAssetEditor &
:' (
Editor) /
{ 
struct 
UI_PanelState 
{ 	
public 
static 
bool $
spriteAssetFaceInfoPanel 7
=8 9
true: >
;> ?
public 
static 
bool  
spriteAtlasInfoPanel 3
=4 5
true6 :
;: ;
public 
static 
bool $
fallbackSpriteAssetPanel 7
=8 9
true: >
;> ?
public 
static 
bool %
spriteCharacterTablePanel 8
;8 9
public 
static 
bool !
spriteGlyphTablePanel 4
;4 5
} 	
private 
static 
string 
[ 
] 
s_UiStateLabel  .
=/ 0
new1 4
string5 ;
[; <
]< =
{> ?
$str@ ]
,] ^
$str_ z
}{ |
;| }
int 
m_moveToIndex 
; 
int 
m_selectedElement 
= 
-  !
$num! "
;" #
int "
m_CurrentCharacterPage "
;" #
int 
m_CurrentGlyphPage 
; 
const 
string 

k_UndoRedo 
=  !
$str" 5
;5 6
string   $
m_CharacterSearchPattern   '
;  ' (
List!! 
<!! 
int!! 
>!! !
m_CharacterSearchList!! '
;!!' (
bool"" $
m_IsCharacterSearchDirty"" %
;""% &
string$$  
m_GlyphSearchPattern$$ #
;$$# $
List%% 
<%% 
int%% 
>%% 
m_GlyphSearchList%% #
;%%# $
bool&&  
m_IsGlyphSearchDirty&& !
;&&! "
SerializedProperty(( 
m_FaceInfoProperty(( -
;((- .
SerializedProperty)) 
m_PointSizeProperty)) .
;)). /
SerializedProperty** 
m_ScaleProperty** *
;*** +
SerializedProperty++  
m_LineHeightProperty++ /
;++/ 0
SerializedProperty,,  
m_AscentLineProperty,, /
;,,/ 0
SerializedProperty-- 
m_BaselineProperty-- -
;--- .
SerializedProperty.. !
m_DescentLineProperty.. 0
;..0 1
SerializedProperty00 
m_spriteAtlas_prop00 -
;00- .
SerializedProperty11 
m_material_prop11 *
;11* +
SerializedProperty22 *
m_SpriteCharacterTableProperty22 9
;229 :
SerializedProperty33 &
m_SpriteGlyphTableProperty33 5
;335 6
ReorderableList44 %
m_fallbackSpriteAssetList44 1
;441 2
TMP_SpriteAsset66 
m_SpriteAsset66 %
;66% &
bool88 
isAssetDirty88 
;88 
float:: 
	m_xOffset:: 
;:: 
float;; 
	m_yOffset;; 
;;; 
float<< 

m_xAdvance<< 
;<< 
float== 
m_scale== 
;== 
public?? 
void?? 
OnEnable?? 
(?? 
)?? 
{@@ 	
m_SpriteAssetAA 
=AA 
targetAA "
asAA# %
TMP_SpriteAssetAA& 5
;AA5 6
m_FaceInfoPropertyCC 
=CC  
serializedObjectCC! 1
.CC1 2
FindPropertyCC2 >
(CC> ?
$strCC? K
)CCK L
;CCL M
m_PointSizePropertyDD 
=DD  !
m_FaceInfoPropertyDD" 4
.DD4 5 
FindPropertyRelativeDD5 I
(DDI J
$strDDJ W
)DDW X
;DDX Y
m_ScalePropertyEE 
=EE 
m_FaceInfoPropertyEE 0
.EE0 1 
FindPropertyRelativeEE1 E
(EEE F
$strEEF O
)EEO P
;EEP Q 
m_LineHeightPropertyFF  
=FF! "
m_FaceInfoPropertyFF# 5
.FF5 6 
FindPropertyRelativeFF6 J
(FFJ K
$strFFK Y
)FFY Z
;FFZ [ 
m_AscentLinePropertyGG  
=GG! "
m_FaceInfoPropertyGG# 5
.GG5 6 
FindPropertyRelativeGG6 J
(GGJ K
$strGGK Y
)GGY Z
;GGZ [
m_BaselinePropertyHH 
=HH  
m_FaceInfoPropertyHH! 3
.HH3 4 
FindPropertyRelativeHH4 H
(HHH I
$strHHI U
)HHU V
;HHV W!
m_DescentLinePropertyII !
=II" #
m_FaceInfoPropertyII$ 6
.II6 7 
FindPropertyRelativeII7 K
(IIK L
$strIIL [
)II[ \
;II\ ]
m_spriteAtlas_propKK 
=KK  
serializedObjectKK! 1
.KK1 2
FindPropertyKK2 >
(KK> ?
$strKK? L
)KKL M
;KKM N
m_material_propLL 
=LL 
serializedObjectLL .
.LL. /
FindPropertyLL/ ;
(LL; <
$strLL< F
)LLF G
;LLG H*
m_SpriteCharacterTablePropertyMM *
=MM+ ,
serializedObjectMM- =
.MM= >
FindPropertyMM> J
(MMJ K
$strMMK c
)MMc d
;MMd e&
m_SpriteGlyphTablePropertyNN &
=NN' (
serializedObjectNN) 9
.NN9 :
FindPropertyNN: F
(NNF G
$strNNG [
)NN[ \
;NN\ ]%
m_fallbackSpriteAssetListQQ %
=QQ& '
newQQ( +
ReorderableListQQ, ;
(QQ; <
serializedObjectQQ< L
,QQL M
serializedObjectQQN ^
.QQ^ _
FindPropertyQQ_ k
(QQk l
$str	QQl Ç
)
QQÇ É
,
QQÉ Ñ
true
QQÖ â
,
QQâ ä
true
QQã è
,
QQè ê
true
QQë ï
,
QQï ñ
true
QQó õ
)
QQõ ú
;
QQú ù%
m_fallbackSpriteAssetListSS %
.SS% &
drawElementCallbackSS& 9
=SS: ;
(SS< =
RectSS= A
rectSSB F
,SSF G
intSSH K
indexSSL Q
,SSQ R
boolSSS W
isActiveSSX `
,SS` a
boolSSb f
	isFocusedSSg p
)SSp q
=>SSr t
{TT 
varUU 
elementUU 
=UU %
m_fallbackSpriteAssetListUU 7
.UU7 8
serializedPropertyUU8 J
.UUJ K"
GetArrayElementAtIndexUUK a
(UUa b
indexUUb g
)UUg h
;UUh i
rectVV 
.VV 
yVV 
+=VV 
$numVV 
;VV 
	EditorGUIWW 
.WW 
PropertyFieldWW '
(WW' (
newWW( +
RectWW, 0
(WW0 1
rectWW1 5
.WW5 6
xWW6 7
,WW7 8
rectWW9 =
.WW= >
yWW> ?
,WW? @
rectWWA E
.WWE F
widthWWF K
,WWK L
EditorGUIUtilityWWM ]
.WW] ^
singleLineHeightWW^ n
)WWn o
,WWo p
elementWWq x
,WWx y

GUIContent	WWz Ñ
.
WWÑ Ö
none
WWÖ â
)
WWâ ä
;
WWä ã
}XX 
;XX %
m_fallbackSpriteAssetListZZ %
.ZZ% &
drawHeaderCallbackZZ& 8
=ZZ9 :
rectZZ; ?
=>ZZ@ B
{[[ 
	EditorGUI\\ 
.\\ 

LabelField\\ $
(\\$ %
rect\\% )
,\\) *
new\\+ .

GUIContent\\/ 9
(\\9 :
$str\\: V
,\\V W
$str	\\X ‘
)
\\‘ ’
)
\\’ ÷
;
\\÷ ◊
}]] 
;]] 
}^^ 	
publicaa 
overrideaa 
voidaa 
OnInspectorGUIaa +
(aa+ ,
)aa, -
{bb 	
Eventee 
currentEventee 
=ee  
Eventee! &
.ee& '
currentee' .
;ee. /
stringff 
evt_cmdff 
=ff 
currentEventff )
.ff) *
commandNameff* 5
;ff5 6
serializedObjecthh 
.hh 
Updatehh #
(hh# $
)hh$ %
;hh% &
Rectmm 
rectmm 
=mm 
EditorGUILayoutmm '
.mm' (
GetControlRectmm( 6
(mm6 7
falsemm7 <
,mm< =
$nummm> @
)mm@ A
;mmA B
GUIoo 
.oo 
Labeloo 
(oo 
rectoo 
,oo 
newoo 

GUIContentoo  *
(oo* +
$stroo+ A
+ooB C
m_SpriteAssetooD Q
.ooQ R
versionooR Y
)ooY Z
,ooZ [
TMP_UIStyleManageroo\ n
.oon o
sectionHeaderooo |
)oo| }
;oo} ~
rectqq 
.qq 
xqq 
+=qq 
rectqq 
.qq 
widthqq  
-qq! "
$numqq# '
;qq' (
rectrr 
.rr 
yrr 
+=rr 
$numrr 
;rr 
rectss 
.ss 
widthss 
=ss 
$numss 
;ss 
recttt 
.tt 
heighttt 
=tt 
$numtt 
;tt 
ifuu 
(uu 
GUIuu 
.uu 
Buttonuu 
(uu 
rectuu 
,uu  
newuu! $

GUIContentuu% /
(uu/ 0
$struu0 E
)uuE F
)uuF G
)uuG H
{vv 
TMP_SpriteAssetMenuww #
.ww# $
UpdateSpriteAssetww$ 5
(ww5 6
m_SpriteAssetww6 C
)wwC D
;wwD E
}xx 
	EditorGUIyy 
.yy 
indentLevelyy !
=yy" #
$numyy$ %
;yy% &
EditorGUILayout{{ 
.{{ 
PropertyField{{ )
({{) *
m_PointSizeProperty{{* =
){{= >
;{{> ?
EditorGUILayout|| 
.|| 
PropertyField|| )
(||) *
m_ScaleProperty||* 9
)||9 :
;||: ;
EditorGUILayout~~ 
.~~ 
PropertyField~~ )
(~~) * 
m_AscentLineProperty~~* >
)~~> ?
;~~? @
EditorGUILayout 
. 
PropertyField )
() *
m_BaselineProperty* <
)< =
;= >
EditorGUILayout
ÄÄ 
.
ÄÄ 
PropertyField
ÄÄ )
(
ÄÄ) *#
m_DescentLineProperty
ÄÄ* ?
)
ÄÄ? @
;
ÄÄ@ A
EditorGUILayout
ÅÅ 
.
ÅÅ 
Space
ÅÅ !
(
ÅÅ! "
)
ÅÅ" #
;
ÅÅ# $
rect
áá 
=
áá 
EditorGUILayout
áá "
.
áá" #
GetControlRect
áá# 1
(
áá1 2
false
áá2 7
,
áá7 8
$num
áá9 ;
)
áá; <
;
áá< =
if
ââ 
(
ââ 
GUI
ââ 
.
ââ 
Button
ââ 
(
ââ 
rect
ââ 
,
ââ  
new
ââ! $

GUIContent
ââ% /
(
ââ/ 0
$str
ââ0 I
)
ââI J
,
ââJ K 
TMP_UIStyleManager
ââL ^
.
ââ^ _
sectionHeader
ââ_ l
)
ââl m
)
ââm n
UI_PanelState
ää 
.
ää "
spriteAtlasInfoPanel
ää 2
=
ää3 4
!
ää5 6
UI_PanelState
ää6 C
.
ääC D"
spriteAtlasInfoPanel
ääD X
;
ääX Y
GUI
åå 
.
åå 
Label
åå 
(
åå 
rect
åå 
,
åå 
(
åå 
UI_PanelState
åå *
.
åå* +"
spriteAtlasInfoPanel
åå+ ?
?
åå@ A
$str
ååB D
:
ååE F
s_UiStateLabel
ååG U
[
ååU V
$num
ååV W
]
ååW X
)
ååX Y
,
ååY Z 
TMP_UIStyleManager
åå[ m
.
ååm n

rightLabel
åån x
)
ååx y
;
ååy z
if
éé 
(
éé 
UI_PanelState
éé 
.
éé "
spriteAtlasInfoPanel
éé 2
)
éé2 3
{
èè 
	EditorGUI
êê 
.
êê 
BeginChangeCheck
êê *
(
êê* +
)
êê+ ,
;
êê, -
EditorGUILayout
ëë 
.
ëë  
PropertyField
ëë  -
(
ëë- . 
m_spriteAtlas_prop
ëë. @
,
ëë@ A
new
ëëB E

GUIContent
ëëF P
(
ëëP Q
$str
ëëQ _
)
ëë_ `
)
ëë` a
;
ëëa b
if
íí 
(
íí 
	EditorGUI
íí 
.
íí 
EndChangeCheck
íí ,
(
íí, -
)
íí- .
)
íí. /
{
ìì 
	Texture2D
ïï 
tex
ïï !
=
ïï" # 
m_spriteAtlas_prop
ïï$ 6
.
ïï6 7"
objectReferenceValue
ïï7 K
as
ïïL N
	Texture2D
ïïO X
;
ïïX Y
if
ññ 
(
ññ 
tex
ññ 
!=
ññ 
null
ññ #
)
ññ# $
{
óó 
Material
òò  
mat
òò! $
=
òò% &
m_material_prop
òò' 6
.
òò6 7"
objectReferenceValue
òò7 K
as
òòL N
Material
òòO W
;
òòW X
if
ôô 
(
ôô 
mat
ôô 
!=
ôô  "
null
ôô# '
)
ôô' (
mat
öö 
.
öö  
mainTexture
öö  +
=
öö, -
tex
öö. 1
;
öö1 2
}
õõ 
}
úú 
EditorGUILayout
ûû 
.
ûû  
PropertyField
ûû  -
(
ûû- .
m_material_prop
ûû. =
,
ûû= >
new
ûû? B

GUIContent
ûûC M
(
ûûM N
$str
ûûN `
)
ûû` a
)
ûûa b
;
ûûb c
EditorGUILayout
üü 
.
üü  
Space
üü  %
(
üü% &
)
üü& '
;
üü' (
}
†† 
rect
¶¶ 
=
¶¶ 
EditorGUILayout
¶¶ "
.
¶¶" #
GetControlRect
¶¶# 1
(
¶¶1 2
false
¶¶2 7
,
¶¶7 8
$num
¶¶9 ;
)
¶¶; <
;
¶¶< =
	EditorGUI
ßß 
.
ßß 
indentLevel
ßß !
=
ßß" #
$num
ßß$ %
;
ßß% &
if
®® 
(
®® 
GUI
®® 
.
®® 
Button
®® 
(
®® 
rect
®® 
,
®®  
new
®®! $

GUIContent
®®% /
(
®®/ 0
$str
®®0 O
,
®®O P
$str®®Q Õ
)®®Õ Œ
,®®Œ œ"
TMP_UIStyleManager®®– ‚
.®®‚ „
sectionHeader®®„ 
)®® Ò
)®®Ò Ú
UI_PanelState
©© 
.
©© &
fallbackSpriteAssetPanel
©© 6
=
©©7 8
!
©©9 :
UI_PanelState
©©: G
.
©©G H&
fallbackSpriteAssetPanel
©©H `
;
©©` a
GUI
´´ 
.
´´ 
Label
´´ 
(
´´ 
rect
´´ 
,
´´ 
(
´´ 
UI_PanelState
´´ *
.
´´* +&
fallbackSpriteAssetPanel
´´+ C
?
´´D E
$str
´´F H
:
´´I J
s_UiStateLabel
´´K Y
[
´´Y Z
$num
´´Z [
]
´´[ \
)
´´\ ]
,
´´] ^ 
TMP_UIStyleManager
´´_ q
.
´´q r

rightLabel
´´r |
)
´´| }
;
´´} ~
if
≠≠ 
(
≠≠ 
UI_PanelState
≠≠ 
.
≠≠ &
fallbackSpriteAssetPanel
≠≠ 6
)
≠≠6 7
{
ÆÆ '
m_fallbackSpriteAssetList
ØØ )
.
ØØ) *
DoLayoutList
ØØ* 6
(
ØØ6 7
)
ØØ7 8
;
ØØ8 9
EditorGUILayout
∞∞ 
.
∞∞  
Space
∞∞  %
(
∞∞% &
)
∞∞& '
;
∞∞' (
}
±± 
	EditorGUI
∑∑ 
.
∑∑ 
indentLevel
∑∑ !
=
∑∑" #
$num
∑∑$ %
;
∑∑% &
rect
∏∏ 
=
∏∏ 
EditorGUILayout
∏∏ "
.
∏∏" #
GetControlRect
∏∏# 1
(
∏∏1 2
false
∏∏2 7
,
∏∏7 8
$num
∏∏9 ;
)
∏∏; <
;
∏∏< =
if
∫∫ 
(
∫∫ 
GUI
∫∫ 
.
∫∫ 
Button
∫∫ 
(
∫∫ 
rect
∫∫ 
,
∫∫  
new
∫∫! $

GUIContent
∫∫% /
(
∫∫/ 0
$str
∫∫0 O
,
∫∫O P
$str∫∫Q å
)∫∫å ç
,∫∫ç é"
TMP_UIStyleManager∫∫è °
.∫∫° ¢
sectionHeader∫∫¢ Ø
)∫∫Ø ∞
)∫∫∞ ±
UI_PanelState
ªª 
.
ªª '
spriteCharacterTablePanel
ªª 7
=
ªª8 9
!
ªª: ;
UI_PanelState
ªª; H
.
ªªH I'
spriteCharacterTablePanel
ªªI b
;
ªªb c
GUI
ΩΩ 
.
ΩΩ 
Label
ΩΩ 
(
ΩΩ 
rect
ΩΩ 
,
ΩΩ 
(
ΩΩ 
UI_PanelState
ΩΩ *
.
ΩΩ* +'
spriteCharacterTablePanel
ΩΩ+ D
?
ΩΩE F
$str
ΩΩG I
:
ΩΩJ K
s_UiStateLabel
ΩΩL Z
[
ΩΩZ [
$num
ΩΩ[ \
]
ΩΩ\ ]
)
ΩΩ] ^
,
ΩΩ^ _ 
TMP_UIStyleManager
ΩΩ` r
.
ΩΩr s

rightLabel
ΩΩs }
)
ΩΩ} ~
;
ΩΩ~ 
if
øø 
(
øø 
UI_PanelState
øø 
.
øø '
spriteCharacterTablePanel
øø 7
)
øø7 8
{
¿¿ 
int
¡¡ 
	arraySize
¡¡ 
=
¡¡ ,
m_SpriteCharacterTableProperty
¡¡  >
.
¡¡> ?
	arraySize
¡¡? H
;
¡¡H I
int
¬¬ 
itemsPerPage
¬¬  
=
¬¬! "
$num
¬¬# %
;
¬¬% &
EditorGUILayout
≈≈ 
.
≈≈  
BeginVertical
≈≈  -
(
≈≈- .
EditorStyles
≈≈. :
.
≈≈: ;
helpBox
≈≈; B
,
≈≈B C
	GUILayout
≈≈D M
.
≈≈M N
ExpandWidth
≈≈N Y
(
≈≈Y Z
true
≈≈Z ^
)
≈≈^ _
)
≈≈_ `
;
≈≈` a
{
∆∆ 
EditorGUILayout
…… #
.
……# $
BeginHorizontal
……$ 3
(
……3 4
)
……4 5
;
……5 6
{
   
EditorGUIUtility
ÀÀ (
.
ÀÀ( )

labelWidth
ÀÀ) 3
=
ÀÀ4 5
$num
ÀÀ6 :
;
ÀÀ: ;
	EditorGUI
ÃÃ !
.
ÃÃ! "
BeginChangeCheck
ÃÃ" 2
(
ÃÃ2 3
)
ÃÃ3 4
;
ÃÃ4 5
string
ÕÕ 
searchPattern
ÕÕ ,
=
ÕÕ- .
EditorGUILayout
ÕÕ/ >
.
ÕÕ> ?
	TextField
ÕÕ? H
(
ÕÕH I
$str
ÕÕI X
,
ÕÕX Y&
m_CharacterSearchPattern
ÕÕZ r
,
ÕÕr s
$strÕÕt Ö
)ÕÕÖ Ü
;ÕÕÜ á
if
ŒŒ 
(
ŒŒ 
	EditorGUI
ŒŒ %
.
ŒŒ% &
EndChangeCheck
ŒŒ& 4
(
ŒŒ4 5
)
ŒŒ5 6
||
ŒŒ7 9&
m_IsCharacterSearchDirty
ŒŒ: R
)
ŒŒR S
{
œœ 
if
–– 
(
––  
string
––  &
.
––& '
IsNullOrEmpty
––' 4
(
––4 5
searchPattern
––5 B
)
––B C
==
––D F
false
––G L
)
––L M
{
—— &
m_CharacterSearchPattern
””  8
=
””9 :
searchPattern
””; H
.
””H I
ToLower
””I P
(
””P Q
System
””Q W
.
””W X
Globalization
””X e
.
””e f
CultureInfo
””f q
.
””q r
InvariantCulture””r Ç
)””Ç É
.””É Ñ
Trim””Ñ à
(””à â
)””â ä
;””ä ã"
SearchCharacterTable
÷÷  4
(
÷÷4 5&
m_CharacterSearchPattern
÷÷5 M
,
÷÷M N
ref
÷÷O R#
m_CharacterSearchList
÷÷S h
)
÷÷h i
;
÷÷i j
}
◊◊ 
else
ÿÿ  &
m_CharacterSearchPattern
ŸŸ  8
=
ŸŸ9 :
null
ŸŸ; ?
;
ŸŸ? @&
m_IsCharacterSearchDirty
€€ 4
=
€€5 6
false
€€7 <
;
€€< =
}
‹‹ 
string
ﬁﬁ 
	styleName
ﬁﬁ (
=
ﬁﬁ) *
string
ﬁﬁ+ 1
.
ﬁﬁ1 2
IsNullOrEmpty
ﬁﬁ2 ?
(
ﬁﬁ? @&
m_CharacterSearchPattern
ﬁﬁ@ X
)
ﬁﬁX Y
?
ﬁﬁZ [
$str
ﬁﬁ\ u
:
ﬁﬁv w
$strﬁﬁx å
;ﬁﬁå ç
if
ﬂﬂ 
(
ﬂﬂ 
	GUILayout
ﬂﬂ %
.
ﬂﬂ% &
Button
ﬂﬂ& ,
(
ﬂﬂ, -

GUIContent
ﬂﬂ- 7
.
ﬂﬂ7 8
none
ﬂﬂ8 <
,
ﬂﬂ< =
	styleName
ﬂﬂ> G
)
ﬂﬂG H
)
ﬂﬂH I
{
‡‡ 

GUIUtility
·· &
.
··& '
keyboardControl
··' 6
=
··7 8
$num
··9 :
;
··: ;&
m_CharacterSearchPattern
‚‚ 4
=
‚‚5 6
string
‚‚7 =
.
‚‚= >
Empty
‚‚> C
;
‚‚C D
}
„„ 
}
‰‰ 
EditorGUILayout
ÂÂ #
.
ÂÂ# $
EndHorizontal
ÂÂ$ 1
(
ÂÂ1 2
)
ÂÂ2 3
;
ÂÂ3 4
if
ÈÈ 
(
ÈÈ 
!
ÈÈ 
string
ÈÈ 
.
ÈÈ  
IsNullOrEmpty
ÈÈ  -
(
ÈÈ- .&
m_CharacterSearchPattern
ÈÈ. F
)
ÈÈF G
)
ÈÈG H
	arraySize
ÍÍ !
=
ÍÍ" ##
m_CharacterSearchList
ÍÍ$ 9
.
ÍÍ9 :
Count
ÍÍ: ?
;
ÍÍ? @#
DisplayPageNavigation
ÌÌ )
(
ÌÌ) *
ref
ÌÌ* -$
m_CurrentCharacterPage
ÌÌ. D
,
ÌÌD E
	arraySize
ÌÌF O
,
ÌÌO P
itemsPerPage
ÌÌQ ]
)
ÌÌ] ^
;
ÌÌ^ _
}
ÓÓ 
EditorGUILayout
ÔÔ 
.
ÔÔ  
EndVertical
ÔÔ  +
(
ÔÔ+ ,
)
ÔÔ, -
;
ÔÔ- .
if
ÒÒ 
(
ÒÒ 
	arraySize
ÒÒ 
>
ÒÒ 
$num
ÒÒ  !
)
ÒÒ! "
{
ÚÚ 
for
ÙÙ 
(
ÙÙ 
int
ÙÙ 
i
ÙÙ 
=
ÙÙ  
itemsPerPage
ÙÙ! -
*
ÙÙ. /$
m_CurrentCharacterPage
ÙÙ0 F
;
ÙÙF G
i
ÙÙH I
<
ÙÙJ K
	arraySize
ÙÙL U
&&
ÙÙV X
i
ÙÙY Z
<
ÙÙ[ \
itemsPerPage
ÙÙ] i
*
ÙÙj k
(
ÙÙl m%
m_CurrentCharacterPageÙÙm É
+ÙÙÑ Ö
$numÙÙÜ á
)ÙÙá à
;ÙÙà â
iÙÙä ã
++ÙÙã ç
)ÙÙç é
{
ıı 
Rect
˜˜  
elementStartRegion
˜˜ /
=
˜˜0 1
GUILayoutUtility
˜˜2 B
.
˜˜B C
GetRect
˜˜C J
(
˜˜J K
$num
˜˜K M
,
˜˜M N
$num
˜˜O Q
,
˜˜Q R
	GUILayout
˜˜S \
.
˜˜\ ]
ExpandWidth
˜˜] h
(
˜˜h i
true
˜˜i m
)
˜˜m n
)
˜˜n o
;
˜˜o p
int
˘˘ 
elementIndex
˘˘ (
=
˘˘) *
i
˘˘+ ,
;
˘˘, -
if
˙˙ 
(
˙˙ 
!
˙˙ 
string
˙˙ #
.
˙˙# $
IsNullOrEmpty
˙˙$ 1
(
˙˙1 2&
m_CharacterSearchPattern
˙˙2 J
)
˙˙J K
)
˙˙K L
elementIndex
˚˚ (
=
˚˚) *#
m_CharacterSearchList
˚˚+ @
[
˚˚@ A
i
˚˚A B
]
˚˚B C
;
˚˚C D 
SerializedProperty
˝˝ *%
spriteCharacterProperty
˝˝+ B
=
˝˝C D,
m_SpriteCharacterTableProperty
˝˝E c
.
˝˝c d$
GetArrayElementAtIndex
˝˝d z
(
˝˝z {
elementIndex˝˝{ á
)˝˝á à
;˝˝à â
EditorGUILayout
ˇˇ '
.
ˇˇ' (
BeginVertical
ˇˇ( 5
(
ˇˇ5 6
EditorStyles
ˇˇ6 B
.
ˇˇB C
helpBox
ˇˇC J
)
ˇˇJ K
;
ˇˇK L
{
ÄÄ 
	EditorGUI
ÅÅ %
.
ÅÅ% & 
BeginDisabledGroup
ÅÅ& 8
(
ÅÅ8 9
i
ÅÅ9 :
!=
ÅÅ; =
m_selectedElement
ÅÅ> O
)
ÅÅO P
;
ÅÅP Q
{
ÇÇ 
EditorGUILayout
ÉÉ  /
.
ÉÉ/ 0
PropertyField
ÉÉ0 =
(
ÉÉ= >%
spriteCharacterProperty
ÉÉ> U
)
ÉÉU V
;
ÉÉV W
}
ÑÑ 
	EditorGUI
ÖÖ %
.
ÖÖ% &
EndDisabledGroup
ÖÖ& 6
(
ÖÖ6 7
)
ÖÖ7 8
;
ÖÖ8 9
}
ÜÜ 
EditorGUILayout
áá '
.
áá' (
EndVertical
áá( 3
(
áá3 4
)
áá4 5
;
áá5 6
Rect
ää 
elementEndRegion
ää -
=
ää. /
GUILayoutUtility
ää0 @
.
ää@ A
GetRect
ääA H
(
ääH I
$num
ääI K
,
ääK L
$num
ääM O
,
ääO P
	GUILayout
ääQ Z
.
ääZ [
ExpandWidth
ää[ f
(
ääf g
true
ääg k
)
ääk l
)
ääl m
;
ääm n
Rect
çç 
selectionArea
çç *
=
çç+ ,
new
çç- 0
Rect
çç1 5
(
çç5 6 
elementStartRegion
çç6 H
.
ççH I
x
ççI J
,
ççJ K 
elementStartRegion
ççL ^
.
çç^ _
y
çç_ `
,
çç` a
elementEndRegion
ççb r
.
ççr s
width
ççs x
,
ççx y
elementEndRegionççz ä
.ççä ã
yççã å
-ççç é"
elementStartRegionççè °
.çç° ¢
yçç¢ £
)çç£ §
;çç§ •
if
éé 
(
éé 
DoSelectionCheck
éé ,
(
éé, -
selectionArea
éé- :
)
éé: ;
)
éé; <
{
èè 
if
êê 
(
êê  
m_selectedElement
êê  1
==
êê2 4
i
êê5 6
)
êê6 7
{
ëë 
m_selectedElement
íí  1
=
íí2 3
-
íí4 5
$num
íí5 6
;
íí6 7
}
ìì 
else
îî  
{
ïï 
m_selectedElement
ññ  1
=
ññ2 3
i
ññ4 5
;
ññ5 6

GUIUtility
óó  *
.
óó* +
keyboardControl
óó+ :
=
óó; <
$num
óó= >
;
óó> ?
}
òò 
}
ôô 
if
úú 
(
úú 
m_selectedElement
úú -
==
úú. 0
i
úú1 2
)
úú2 3
{
ùù 
TMP_EditorUtility
üü -
.
üü- .
DrawBox
üü. 5
(
üü5 6
selectionArea
üü6 C
,
üüC D
$num
üüE G
,
üüG H
new
üüI L
Color32
üüM T
(
üüT U
$num
üüU W
,
üüW X
$num
üüY \
,
üü\ ]
$num
üü^ a
,
üüa b
$num
üüc f
)
üüf g
)
üüg h
;
üüh i
Rect
¢¢  
controlRect
¢¢! ,
=
¢¢- .
EditorGUILayout
¢¢/ >
.
¢¢> ?
GetControlRect
¢¢? M
(
¢¢M N
true
¢¢N R
,
¢¢R S
EditorGUIUtility
¢¢T d
.
¢¢d e
singleLineHeight
¢¢e u
*
¢¢v w
$num
¢¢x z
)
¢¢z {
;
¢¢{ |
controlRect
££ '
.
££' (
width
££( -
/=
££. 0
$num
££1 2
;
££2 3
bool
¶¶  

guiEnabled
¶¶! +
=
¶¶, -
GUI
¶¶. 1
.
¶¶1 2
enabled
¶¶2 9
;
¶¶9 :
if
ßß 
(
ßß  
i
ßß  !
==
ßß" $
$num
ßß% &
)
ßß& '
{
ßß( )
GUI
ßß* -
.
ßß- .
enabled
ßß. 5
=
ßß6 7
false
ßß8 =
;
ßß= >
}
ßß? @
if
®® 
(
®®  
GUI
®®  #
.
®®# $
Button
®®$ *
(
®®* +
controlRect
®®+ 6
,
®®6 7
$str
®®8 <
)
®®< =
)
®®= >
{
©© #
SwapCharacterElements
™™  5
(
™™5 6
i
™™6 7
,
™™7 8
i
™™9 :
-
™™; <
$num
™™= >
)
™™> ?
;
™™? @
}
´´ 
GUI
¨¨ 
.
¨¨  
enabled
¨¨  '
=
¨¨( )

guiEnabled
¨¨* 4
;
¨¨4 5
controlRect
ØØ '
.
ØØ' (
x
ØØ( )
+=
ØØ* ,
controlRect
ØØ- 8
.
ØØ8 9
width
ØØ9 >
;
ØØ> ?
if
∞∞ 
(
∞∞  
i
∞∞  !
==
∞∞" $
	arraySize
∞∞% .
-
∞∞/ 0
$num
∞∞1 2
)
∞∞2 3
{
∞∞4 5
GUI
∞∞6 9
.
∞∞9 :
enabled
∞∞: A
=
∞∞B C
false
∞∞D I
;
∞∞I J
}
∞∞K L
if
±± 
(
±±  
GUI
±±  #
.
±±# $
Button
±±$ *
(
±±* +
controlRect
±±+ 6
,
±±6 7
$str
±±8 >
)
±±> ?
)
±±? @
{
≤≤ #
SwapCharacterElements
≥≥  5
(
≥≥5 6
i
≥≥6 7
,
≥≥7 8
i
≥≥9 :
+
≥≥; <
$num
≥≥= >
)
≥≥> ?
;
≥≥? @
}
¥¥ 
GUI
µµ 
.
µµ  
enabled
µµ  '
=
µµ( )

guiEnabled
µµ* 4
;
µµ4 5
controlRect
∏∏ '
.
∏∏' (
x
∏∏( )
+=
∏∏* ,
controlRect
∏∏- 8
.
∏∏8 9
width
∏∏9 >
*
∏∏? @
$num
∏∏A B
;
∏∏B C
m_moveToIndex
∫∫ )
=
∫∫* +
	EditorGUI
∫∫, 5
.
∫∫5 6
IntField
∫∫6 >
(
∫∫> ?
controlRect
∫∫? J
,
∫∫J K
m_moveToIndex
∫∫L Y
)
∫∫Y Z
;
∫∫Z [
controlRect
ªª '
.
ªª' (
x
ªª( )
-=
ªª* ,
controlRect
ªª- 8
.
ªª8 9
width
ªª9 >
;
ªª> ?
if
ºº 
(
ºº  
GUI
ºº  #
.
ºº# $
Button
ºº$ *
(
ºº* +
controlRect
ºº+ 6
,
ºº6 7
$str
ºº8 >
)
ºº> ?
)
ºº? @
{
ΩΩ "
MoveCharacterToIndex
ææ  4
(
ææ4 5
i
ææ5 6
,
ææ6 7
m_moveToIndex
ææ8 E
)
ææE F
;
ææF G
}
øø 
GUI
¡¡ 
.
¡¡  
enabled
¡¡  '
=
¡¡( )

guiEnabled
¡¡* 4
;
¡¡4 5
controlRect
ƒƒ '
.
ƒƒ' (
x
ƒƒ( )
+=
ƒƒ* ,
controlRect
ƒƒ- 8
.
ƒƒ8 9
width
ƒƒ9 >
*
ƒƒ? @
$num
ƒƒA B
;
ƒƒB C
if
≈≈ 
(
≈≈  
GUI
≈≈  #
.
≈≈# $
Button
≈≈$ *
(
≈≈* +
controlRect
≈≈+ 6
,
≈≈6 7
$str
≈≈8 ;
)
≈≈; <
)
≈≈< =
{
∆∆ ,
m_SpriteCharacterTableProperty
««  >
.
««> ?
	arraySize
««? H
+=
««I K
$num
««L M
;
««M N
int
……  #
index
……$ )
=
……* +,
m_SpriteCharacterTableProperty
……, J
.
……J K
	arraySize
……K T
-
……U V
$num
……W X
;
……X Y 
SerializedProperty
ÀÀ  2
spriteInfo_prop
ÀÀ3 B
=
ÀÀC D,
m_SpriteCharacterTableProperty
ÀÀE c
.
ÀÀc d$
GetArrayElementAtIndex
ÀÀd z
(
ÀÀz {
indexÀÀ{ Ä
)ÀÀÄ Å
;ÀÀÅ Ç-
CopyCharacterSerializedProperty
ŒŒ  ?
(
ŒŒ? @,
m_SpriteCharacterTableProperty
ŒŒ@ ^
.
ŒŒ^ _$
GetArrayElementAtIndex
ŒŒ_ u
(
ŒŒu v
elementIndexŒŒv Ç
)ŒŒÇ É
,ŒŒÉ Ñ
refŒŒÖ à
spriteInfo_propŒŒâ ò
)ŒŒò ô
;ŒŒô ö
serializedObject
——  0
.
——0 1%
ApplyModifiedProperties
——1 H
(
——H I
)
——I J
;
——J K&
m_IsCharacterSearchDirty
””  8
=
””9 :
true
””; ?
;
””? @
}
‘‘ 
controlRect
◊◊ '
.
◊◊' (
x
◊◊( )
+=
◊◊* ,
controlRect
◊◊- 8
.
◊◊8 9
width
◊◊9 >
;
◊◊> ?
if
ÿÿ 
(
ÿÿ  
m_selectedElement
ÿÿ  1
==
ÿÿ2 4
-
ÿÿ5 6
$num
ÿÿ6 7
)
ÿÿ7 8
GUI
ÿÿ9 <
.
ÿÿ< =
enabled
ÿÿ= D
=
ÿÿE F
false
ÿÿG L
;
ÿÿL M
if
ŸŸ 
(
ŸŸ  
GUI
ŸŸ  #
.
ŸŸ# $
Button
ŸŸ$ *
(
ŸŸ* +
controlRect
ŸŸ+ 6
,
ŸŸ6 7
$str
ŸŸ8 ;
)
ŸŸ; <
)
ŸŸ< =
{
⁄⁄ ,
m_SpriteCharacterTableProperty
€€  >
.
€€> ?'
DeleteArrayElementAtIndex
€€? X
(
€€X Y
elementIndex
€€Y e
)
€€e f
;
€€f g
m_selectedElement
››  1
=
››2 3
-
››4 5
$num
››5 6
;
››6 7
serializedObject
ﬁﬁ  0
.
ﬁﬁ0 1%
ApplyModifiedProperties
ﬁﬁ1 H
(
ﬁﬁH I
)
ﬁﬁI J
;
ﬁﬁJ K&
m_IsCharacterSearchDirty
‡‡  8
=
‡‡9 :
true
‡‡; ?
;
‡‡? @
return
‚‚  &
;
‚‚& '
}
„„ 
}
ÊÊ 
}
ÁÁ 
}
ËË #
DisplayPageNavigation
ÍÍ %
(
ÍÍ% &
ref
ÍÍ& )$
m_CurrentCharacterPage
ÍÍ* @
,
ÍÍ@ A
	arraySize
ÍÍB K
,
ÍÍK L
itemsPerPage
ÍÍM Y
)
ÍÍY Z
;
ÍÍZ [
EditorGUIUtility
ÏÏ  
.
ÏÏ  !

labelWidth
ÏÏ! +
=
ÏÏ, -
$num
ÏÏ. 1
;
ÏÏ1 2
EditorGUIUtility
ÌÌ  
.
ÌÌ  !

fieldWidth
ÌÌ! +
=
ÌÌ, -
$num
ÌÌ. 1
;
ÌÌ1 2
	GUILayout
ÔÔ 
.
ÔÔ 
Space
ÔÔ 
(
ÔÔ  
$num
ÔÔ  "
)
ÔÔ" #
;
ÔÔ# $
}
íí 
	EditorGUI
òò 
.
òò 
indentLevel
òò !
=
òò" #
$num
òò$ %
;
òò% &
rect
ôô 
=
ôô 
EditorGUILayout
ôô "
.
ôô" #
GetControlRect
ôô# 1
(
ôô1 2
false
ôô2 7
,
ôô7 8
$num
ôô9 ;
)
ôô; <
;
ôô< =
if
õõ 
(
õõ 
GUI
õõ 
.
õõ 
Button
õõ 
(
õõ 
rect
õõ 
,
õõ  
new
õõ! $

GUIContent
õõ% /
(
õõ/ 0
$str
õõ0 K
,
õõK L
$strõõM â
)õõâ ä
,õõä ã"
TMP_UIStyleManagerõõå û
.õõû ü
sectionHeaderõõü ¨
)õõ¨ ≠
)õõ≠ Æ
UI_PanelState
úú 
.
úú #
spriteGlyphTablePanel
úú 3
=
úú4 5
!
úú6 7
UI_PanelState
úú7 D
.
úúD E#
spriteGlyphTablePanel
úúE Z
;
úúZ [
GUI
ûû 
.
ûû 
Label
ûû 
(
ûû 
rect
ûû 
,
ûû 
(
ûû 
UI_PanelState
ûû *
.
ûû* +#
spriteGlyphTablePanel
ûû+ @
?
ûûA B
$str
ûûC E
:
ûûF G
s_UiStateLabel
ûûH V
[
ûûV W
$num
ûûW X
]
ûûX Y
)
ûûY Z
,
ûûZ [ 
TMP_UIStyleManager
ûû\ n
.
ûûn o

rightLabel
ûûo y
)
ûûy z
;
ûûz {
if
†† 
(
†† 
UI_PanelState
†† 
.
†† #
spriteGlyphTablePanel
†† 3
)
††3 4
{
°° 
int
¢¢ 
	arraySize
¢¢ 
=
¢¢ (
m_SpriteGlyphTableProperty
¢¢  :
.
¢¢: ;
	arraySize
¢¢; D
;
¢¢D E
int
££ 
itemsPerPage
££  
=
££! "
$num
££# %
;
££% &
EditorGUILayout
¶¶ 
.
¶¶  
BeginVertical
¶¶  -
(
¶¶- .
EditorStyles
¶¶. :
.
¶¶: ;
helpBox
¶¶; B
,
¶¶B C
	GUILayout
¶¶D M
.
¶¶M N
ExpandWidth
¶¶N Y
(
¶¶Y Z
true
¶¶Z ^
)
¶¶^ _
)
¶¶_ `
;
¶¶` a
{
ßß 
EditorGUILayout
™™ #
.
™™# $
BeginHorizontal
™™$ 3
(
™™3 4
)
™™4 5
;
™™5 6
{
´´ 
EditorGUIUtility
¨¨ (
.
¨¨( )

labelWidth
¨¨) 3
=
¨¨4 5
$num
¨¨6 :
;
¨¨: ;
	EditorGUI
≠≠ !
.
≠≠! "
BeginChangeCheck
≠≠" 2
(
≠≠2 3
)
≠≠3 4
;
≠≠4 5
string
ÆÆ 
searchPattern
ÆÆ ,
=
ÆÆ- .
EditorGUILayout
ÆÆ/ >
.
ÆÆ> ?
	TextField
ÆÆ? H
(
ÆÆH I
$str
ÆÆI X
,
ÆÆX Y"
m_GlyphSearchPattern
ÆÆZ n
,
ÆÆn o
$strÆÆp Å
)ÆÆÅ Ç
;ÆÆÇ É
if
ØØ 
(
ØØ 
	EditorGUI
ØØ %
.
ØØ% &
EndChangeCheck
ØØ& 4
(
ØØ4 5
)
ØØ5 6
||
ØØ7 9"
m_IsGlyphSearchDirty
ØØ: N
)
ØØN O
{
∞∞ 
if
±± 
(
±±  
string
±±  &
.
±±& '
IsNullOrEmpty
±±' 4
(
±±4 5
searchPattern
±±5 B
)
±±B C
==
±±D F
false
±±G L
)
±±L M
{
≤≤ "
m_GlyphSearchPattern
¥¥  4
=
¥¥5 6
searchPattern
¥¥7 D
.
¥¥D E
ToLower
¥¥E L
(
¥¥L M
System
¥¥M S
.
¥¥S T
Globalization
¥¥T a
.
¥¥a b
CultureInfo
¥¥b m
.
¥¥m n
InvariantCulture
¥¥n ~
)
¥¥~ 
.¥¥ Ä
Trim¥¥Ä Ñ
(¥¥Ñ Ö
)¥¥Ö Ü
;¥¥Ü á"
SearchCharacterTable
∑∑  4
(
∑∑4 5"
m_GlyphSearchPattern
∑∑5 I
,
∑∑I J
ref
∑∑K N
m_GlyphSearchList
∑∑O `
)
∑∑` a
;
∑∑a b
}
∏∏ 
else
ππ  "
m_GlyphSearchPattern
∫∫  4
=
∫∫5 6
null
∫∫7 ;
;
∫∫; <"
m_IsGlyphSearchDirty
ºº 0
=
ºº1 2
false
ºº3 8
;
ºº8 9
}
ΩΩ 
string
øø 
	styleName
øø (
=
øø) *
string
øø+ 1
.
øø1 2
IsNullOrEmpty
øø2 ?
(
øø? @"
m_GlyphSearchPattern
øø@ T
)
øøT U
?
øøV W
$str
øøX q
:
øør s
$strøøt à
;øøà â
if
¿¿ 
(
¿¿ 
	GUILayout
¿¿ %
.
¿¿% &
Button
¿¿& ,
(
¿¿, -

GUIContent
¿¿- 7
.
¿¿7 8
none
¿¿8 <
,
¿¿< =
	styleName
¿¿> G
)
¿¿G H
)
¿¿H I
{
¡¡ 

GUIUtility
¬¬ &
.
¬¬& '
keyboardControl
¬¬' 6
=
¬¬7 8
$num
¬¬9 :
;
¬¬: ;"
m_GlyphSearchPattern
√√ 0
=
√√1 2
string
√√3 9
.
√√9 :
Empty
√√: ?
;
√√? @
}
ƒƒ 
}
≈≈ 
EditorGUILayout
∆∆ #
.
∆∆# $
EndHorizontal
∆∆$ 1
(
∆∆1 2
)
∆∆2 3
;
∆∆3 4
if
   
(
   
!
   
string
   
.
    
IsNullOrEmpty
    -
(
  - ."
m_GlyphSearchPattern
  . B
)
  B C
)
  C D
	arraySize
ÀÀ !
=
ÀÀ" #
m_GlyphSearchList
ÀÀ$ 5
.
ÀÀ5 6
Count
ÀÀ6 ;
;
ÀÀ; <#
DisplayPageNavigation
ŒŒ )
(
ŒŒ) *
ref
ŒŒ* - 
m_CurrentGlyphPage
ŒŒ. @
,
ŒŒ@ A
	arraySize
ŒŒB K
,
ŒŒK L
itemsPerPage
ŒŒM Y
)
ŒŒY Z
;
ŒŒZ [
}
œœ 
EditorGUILayout
–– 
.
––  
EndVertical
––  +
(
––+ ,
)
––, -
;
––- .
if
““ 
(
““ 
	arraySize
““ 
>
““ 
$num
““  !
)
““! "
{
”” 
for
’’ 
(
’’ 
int
’’ 
i
’’ 
=
’’  
itemsPerPage
’’! -
*
’’. / 
m_CurrentGlyphPage
’’0 B
;
’’B C
i
’’D E
<
’’F G
	arraySize
’’H Q
&&
’’R T
i
’’U V
<
’’W X
itemsPerPage
’’Y e
*
’’f g
(
’’h i 
m_CurrentGlyphPage
’’i {
+
’’| }
$num
’’~ 
)’’ Ä
;’’Ä Å
i’’Ç É
++’’É Ö
)’’Ö Ü
{
÷÷ 
Rect
ÿÿ  
elementStartRegion
ÿÿ /
=
ÿÿ0 1
GUILayoutUtility
ÿÿ2 B
.
ÿÿB C
GetRect
ÿÿC J
(
ÿÿJ K
$num
ÿÿK M
,
ÿÿM N
$num
ÿÿO Q
,
ÿÿQ R
	GUILayout
ÿÿS \
.
ÿÿ\ ]
ExpandWidth
ÿÿ] h
(
ÿÿh i
true
ÿÿi m
)
ÿÿm n
)
ÿÿn o
;
ÿÿo p
int
⁄⁄ 
elementIndex
⁄⁄ (
=
⁄⁄) *
i
⁄⁄+ ,
;
⁄⁄, -
if
€€ 
(
€€ 
!
€€ 
string
€€ #
.
€€# $
IsNullOrEmpty
€€$ 1
(
€€1 2"
m_GlyphSearchPattern
€€2 F
)
€€F G
)
€€G H
elementIndex
‹‹ (
=
‹‹) *
m_GlyphSearchList
‹‹+ <
[
‹‹< =
i
‹‹= >
]
‹‹> ?
;
‹‹? @ 
SerializedProperty
ﬁﬁ *!
spriteGlyphProperty
ﬁﬁ+ >
=
ﬁﬁ? @(
m_SpriteGlyphTableProperty
ﬁﬁA [
.
ﬁﬁ[ \$
GetArrayElementAtIndex
ﬁﬁ\ r
(
ﬁﬁr s
elementIndex
ﬁﬁs 
)ﬁﬁ Ä
;ﬁﬁÄ Å
EditorGUILayout
‡‡ '
.
‡‡' (
BeginVertical
‡‡( 5
(
‡‡5 6
EditorStyles
‡‡6 B
.
‡‡B C
helpBox
‡‡C J
)
‡‡J K
;
‡‡K L
{
·· 
	EditorGUI
‚‚ %
.
‚‚% & 
BeginDisabledGroup
‚‚& 8
(
‚‚8 9
i
‚‚9 :
!=
‚‚; =
m_selectedElement
‚‚> O
)
‚‚O P
;
‚‚P Q
{
„„ 
EditorGUILayout
‰‰  /
.
‰‰/ 0
PropertyField
‰‰0 =
(
‰‰= >!
spriteGlyphProperty
‰‰> Q
)
‰‰Q R
;
‰‰R S
}
ÂÂ 
	EditorGUI
ÊÊ %
.
ÊÊ% &
EndDisabledGroup
ÊÊ& 6
(
ÊÊ6 7
)
ÊÊ7 8
;
ÊÊ8 9
}
ÁÁ 
EditorGUILayout
ËË '
.
ËË' (
EndVertical
ËË( 3
(
ËË3 4
)
ËË4 5
;
ËË5 6
Rect
ÎÎ 
elementEndRegion
ÎÎ -
=
ÎÎ. /
GUILayoutUtility
ÎÎ0 @
.
ÎÎ@ A
GetRect
ÎÎA H
(
ÎÎH I
$num
ÎÎI K
,
ÎÎK L
$num
ÎÎM O
,
ÎÎO P
	GUILayout
ÎÎQ Z
.
ÎÎZ [
ExpandWidth
ÎÎ[ f
(
ÎÎf g
true
ÎÎg k
)
ÎÎk l
)
ÎÎl m
;
ÎÎm n
Rect
ÓÓ 
selectionArea
ÓÓ *
=
ÓÓ+ ,
new
ÓÓ- 0
Rect
ÓÓ1 5
(
ÓÓ5 6 
elementStartRegion
ÓÓ6 H
.
ÓÓH I
x
ÓÓI J
,
ÓÓJ K 
elementStartRegion
ÓÓL ^
.
ÓÓ^ _
y
ÓÓ_ `
,
ÓÓ` a
elementEndRegion
ÓÓb r
.
ÓÓr s
width
ÓÓs x
,
ÓÓx y
elementEndRegionÓÓz ä
.ÓÓä ã
yÓÓã å
-ÓÓç é"
elementStartRegionÓÓè °
.ÓÓ° ¢
yÓÓ¢ £
)ÓÓ£ §
;ÓÓ§ •
if
ÔÔ 
(
ÔÔ 
DoSelectionCheck
ÔÔ ,
(
ÔÔ, -
selectionArea
ÔÔ- :
)
ÔÔ: ;
)
ÔÔ; <
{
 
if
ÒÒ 
(
ÒÒ  
m_selectedElement
ÒÒ  1
==
ÒÒ2 4
i
ÒÒ5 6
)
ÒÒ6 7
{
ÚÚ 
m_selectedElement
ÛÛ  1
=
ÛÛ2 3
-
ÛÛ4 5
$num
ÛÛ5 6
;
ÛÛ6 7
}
ÙÙ 
else
ıı  
{
ˆˆ 
m_selectedElement
˜˜  1
=
˜˜2 3
i
˜˜4 5
;
˜˜5 6

GUIUtility
¯¯  *
.
¯¯* +
keyboardControl
¯¯+ :
=
¯¯; <
$num
¯¯= >
;
¯¯> ?
}
˘˘ 
}
˙˙ 
if
˝˝ 
(
˝˝ 
m_selectedElement
˝˝ -
==
˝˝. 0
i
˝˝1 2
)
˝˝2 3
{
˛˛ 
TMP_EditorUtility
ÄÄ -
.
ÄÄ- .
DrawBox
ÄÄ. 5
(
ÄÄ5 6
selectionArea
ÄÄ6 C
,
ÄÄC D
$num
ÄÄE G
,
ÄÄG H
new
ÄÄI L
Color32
ÄÄM T
(
ÄÄT U
$num
ÄÄU W
,
ÄÄW X
$num
ÄÄY \
,
ÄÄ\ ]
$num
ÄÄ^ a
,
ÄÄa b
$num
ÄÄc f
)
ÄÄf g
)
ÄÄg h
;
ÄÄh i
Rect
ÉÉ  
controlRect
ÉÉ! ,
=
ÉÉ- .
EditorGUILayout
ÉÉ/ >
.
ÉÉ> ?
GetControlRect
ÉÉ? M
(
ÉÉM N
true
ÉÉN R
,
ÉÉR S
EditorGUIUtility
ÉÉT d
.
ÉÉd e
singleLineHeight
ÉÉe u
*
ÉÉv w
$num
ÉÉx z
)
ÉÉz {
;
ÉÉ{ |
controlRect
ÑÑ '
.
ÑÑ' (
width
ÑÑ( -
/=
ÑÑ. 0
$num
ÑÑ1 2
;
ÑÑ2 3
bool
áá  

guiEnabled
áá! +
=
áá, -
GUI
áá. 1
.
áá1 2
enabled
áá2 9
;
áá9 :
if
àà 
(
àà  
i
àà  !
==
àà" $
$num
àà% &
)
àà& '
{
àà( )
GUI
àà* -
.
àà- .
enabled
àà. 5
=
àà6 7
false
àà8 =
;
àà= >
}
àà? @
if
ââ 
(
ââ  
GUI
ââ  #
.
ââ# $
Button
ââ$ *
(
ââ* +
controlRect
ââ+ 6
,
ââ6 7
$str
ââ8 <
)
ââ< =
)
ââ= >
{
ää 
SwapGlyphElements
ãã  1
(
ãã1 2
i
ãã2 3
,
ãã3 4
i
ãã5 6
-
ãã7 8
$num
ãã9 :
)
ãã: ;
;
ãã; <
}
åå 
GUI
çç 
.
çç  
enabled
çç  '
=
çç( )

guiEnabled
çç* 4
;
çç4 5
controlRect
êê '
.
êê' (
x
êê( )
+=
êê* ,
controlRect
êê- 8
.
êê8 9
width
êê9 >
;
êê> ?
if
ëë 
(
ëë  
i
ëë  !
==
ëë" $
	arraySize
ëë% .
-
ëë/ 0
$num
ëë1 2
)
ëë2 3
{
ëë4 5
GUI
ëë6 9
.
ëë9 :
enabled
ëë: A
=
ëëB C
false
ëëD I
;
ëëI J
}
ëëK L
if
íí 
(
íí  
GUI
íí  #
.
íí# $
Button
íí$ *
(
íí* +
controlRect
íí+ 6
,
íí6 7
$str
íí8 >
)
íí> ?
)
íí? @
{
ìì 
SwapGlyphElements
îî  1
(
îî1 2
i
îî2 3
,
îî3 4
i
îî5 6
+
îî7 8
$num
îî9 :
)
îî: ;
;
îî; <
}
ïï 
GUI
ññ 
.
ññ  
enabled
ññ  '
=
ññ( )

guiEnabled
ññ* 4
;
ññ4 5
controlRect
ôô '
.
ôô' (
x
ôô( )
+=
ôô* ,
controlRect
ôô- 8
.
ôô8 9
width
ôô9 >
*
ôô? @
$num
ôôA B
;
ôôB C
m_moveToIndex
õõ )
=
õõ* +
	EditorGUI
õõ, 5
.
õõ5 6
IntField
õõ6 >
(
õõ> ?
controlRect
õõ? J
,
õõJ K
m_moveToIndex
õõL Y
)
õõY Z
;
õõZ [
controlRect
úú '
.
úú' (
x
úú( )
-=
úú* ,
controlRect
úú- 8
.
úú8 9
width
úú9 >
;
úú> ?
if
ùù 
(
ùù  
GUI
ùù  #
.
ùù# $
Button
ùù$ *
(
ùù* +
controlRect
ùù+ 6
,
ùù6 7
$str
ùù8 >
)
ùù> ?
)
ùù? @
{
ûû 
MoveGlyphToIndex
üü  0
(
üü0 1
i
üü1 2
,
üü2 3
m_moveToIndex
üü4 A
)
üüA B
;
üüB C
}
†† 
GUI
¢¢ 
.
¢¢  
enabled
¢¢  '
=
¢¢( )

guiEnabled
¢¢* 4
;
¢¢4 5
controlRect
•• '
.
••' (
x
••( )
+=
••* ,
controlRect
••- 8
.
••8 9
width
••9 >
*
••? @
$num
••A B
;
••B C
if
¶¶ 
(
¶¶  
GUI
¶¶  #
.
¶¶# $
Button
¶¶$ *
(
¶¶* +
controlRect
¶¶+ 6
,
¶¶6 7
$str
¶¶8 ;
)
¶¶; <
)
¶¶< =
{
ßß (
m_SpriteGlyphTableProperty
®®  :
.
®®: ;
	arraySize
®®; D
+=
®®E G
$num
®®H I
;
®®I J
int
™™  #
index
™™$ )
=
™™* +(
m_SpriteGlyphTableProperty
™™, F
.
™™F G
	arraySize
™™G P
-
™™Q R
$num
™™S T
;
™™T U 
SerializedProperty
¨¨  2$
newSpriteGlyphProperty
¨¨3 I
=
¨¨J K(
m_SpriteGlyphTableProperty
¨¨L f
.
¨¨f g$
GetArrayElementAtIndex
¨¨g }
(
¨¨} ~
index¨¨~ É
)¨¨É Ñ
;¨¨Ñ Ö)
CopyGlyphSerializedProperty
ØØ  ;
(
ØØ; <(
m_SpriteGlyphTableProperty
ØØ< V
.
ØØV W$
GetArrayElementAtIndex
ØØW m
(
ØØm n
elementIndex
ØØn z
)
ØØz {
,
ØØ{ |
refØØ} Ä&
newSpriteGlyphPropertyØØÅ ó
)ØØó ò
;ØØò ô$
newSpriteGlyphProperty
±±  6
.
±±6 7"
FindPropertyRelative
±±7 K
(
±±K L
$str
±±L U
)
±±U V
.
±±V W
intValue
±±W _
=
±±` a
index
±±b g
;
±±g h
serializedObject
≥≥  0
.
≥≥0 1%
ApplyModifiedProperties
≥≥1 H
(
≥≥H I
)
≥≥I J
;
≥≥J K"
m_IsGlyphSearchDirty
µµ  4
=
µµ5 6
true
µµ7 ;
;
µµ; <
}
∏∏ 
controlRect
ªª '
.
ªª' (
x
ªª( )
+=
ªª* ,
controlRect
ªª- 8
.
ªª8 9
width
ªª9 >
;
ªª> ?
if
ºº 
(
ºº  
m_selectedElement
ºº  1
==
ºº2 4
-
ºº5 6
$num
ºº6 7
)
ºº7 8
GUI
ºº9 <
.
ºº< =
enabled
ºº= D
=
ººE F
false
ººG L
;
ººL M
if
ΩΩ 
(
ΩΩ  
GUI
ΩΩ  #
.
ΩΩ# $
Button
ΩΩ$ *
(
ΩΩ* +
controlRect
ΩΩ+ 6
,
ΩΩ6 7
$str
ΩΩ8 ;
)
ΩΩ; <
)
ΩΩ< =
{
ææ  
SerializedProperty
øø  2)
selectedSpriteGlyphProperty
øø3 N
=
øøO P(
m_SpriteGlyphTableProperty
øøQ k
.
øøk l%
GetArrayElementAtIndexøøl Ç
(øøÇ É
elementIndexøøÉ è
)øøè ê
;øøê ë
int
¡¡  # 
selectedGlyphIndex
¡¡$ 6
=
¡¡7 8)
selectedSpriteGlyphProperty
¡¡9 T
.
¡¡T U"
FindPropertyRelative
¡¡U i
(
¡¡i j
$str
¡¡j s
)
¡¡s t
.
¡¡t u
intValue
¡¡u }
;
¡¡} ~(
m_SpriteGlyphTableProperty
√√  :
.
√√: ;'
DeleteArrayElementAtIndex
√√; T
(
√√T U
elementIndex
√√U a
)
√√a b
;
√√b c
for
∆∆  #
(
∆∆$ %
int
∆∆% (
j
∆∆) *
=
∆∆+ ,
$num
∆∆- .
;
∆∆. /
j
∆∆0 1
<
∆∆2 3,
m_SpriteCharacterTableProperty
∆∆4 R
.
∆∆R S
	arraySize
∆∆S \
;
∆∆\ ]
j
∆∆^ _
++
∆∆_ a
)
∆∆a b
{
««  !
int
»»$ '

glyphIndex
»»( 2
=
»»3 4,
m_SpriteCharacterTableProperty
»»5 S
.
»»S T$
GetArrayElementAtIndex
»»T j
(
»»j k
j
»»k l
)
»»l m
.
»»m n#
FindPropertyRelative»»n Ç
(»»Ç É
$str»»É ë
)»»ë í
.»»í ì
intValue»»ì õ
;»»õ ú
if
  $ &
(
  ' (

glyphIndex
  ( 2
==
  3 5 
selectedGlyphIndex
  6 H
)
  H I
{
ÀÀ$ %,
m_SpriteCharacterTableProperty
ÕÕ( F
.
ÕÕF G'
DeleteArrayElementAtIndex
ÕÕG `
(
ÕÕ` a
j
ÕÕa b
)
ÕÕb c
;
ÕÕc d
}
ŒŒ$ %
}
œœ  !
m_selectedElement
——  1
=
——2 3
-
——4 5
$num
——5 6
;
——6 7
serializedObject
““  0
.
““0 1%
ApplyModifiedProperties
““1 H
(
““H I
)
““I J
;
““J K"
m_IsGlyphSearchDirty
‘‘  4
=
‘‘5 6
true
‘‘7 ;
;
‘‘; <
return
ÿÿ  &
;
ÿÿ& '
}
ŸŸ 
}
‹‹ 
}
›› 
}
ﬁﬁ #
DisplayPageNavigation
‡‡ %
(
‡‡% &
ref
‡‡& ) 
m_CurrentGlyphPage
‡‡* <
,
‡‡< =
	arraySize
‡‡> G
,
‡‡G H
itemsPerPage
‡‡I U
)
‡‡U V
;
‡‡V W
EditorGUIUtility
‚‚  
.
‚‚  !

labelWidth
‚‚! +
=
‚‚, -
$num
‚‚. 1
;
‚‚1 2
EditorGUIUtility
„„  
.
„„  !

fieldWidth
„„! +
=
„„, -
$num
„„. 1
;
„„1 2
	GUILayout
ÂÂ 
.
ÂÂ 
Space
ÂÂ 
(
ÂÂ  
$num
ÂÂ  "
)
ÂÂ" #
;
ÂÂ# $
GUI
ÈÈ 
.
ÈÈ 
enabled
ÈÈ 
=
ÈÈ 
true
ÈÈ "
;
ÈÈ" #
EditorGUILayout
ÍÍ 
.
ÍÍ  
BeginVertical
ÍÍ  -
(
ÍÍ- .
EditorStyles
ÍÍ. :
.
ÍÍ: ;
helpBox
ÍÍ; B
)
ÍÍB C
;
ÍÍC D
rect
ÎÎ 
=
ÎÎ 
EditorGUILayout
ÎÎ &
.
ÎÎ& '
GetControlRect
ÎÎ' 5
(
ÎÎ5 6
false
ÎÎ6 ;
,
ÎÎ; <
$num
ÎÎ= ?
)
ÎÎ? @
;
ÎÎ@ A
float
ÌÌ 
width
ÌÌ 
=
ÌÌ 
(
ÌÌ 
rect
ÌÌ #
.
ÌÌ# $
width
ÌÌ$ )
-
ÌÌ* +
$num
ÌÌ, /
)
ÌÌ/ 0
/
ÌÌ1 2
$num
ÌÌ3 4
;
ÌÌ4 5
	EditorGUI
ÓÓ 
.
ÓÓ 

LabelField
ÓÓ $
(
ÓÓ$ %
rect
ÓÓ% )
,
ÓÓ) *
$str
ÓÓ+ C
,
ÓÓC D
EditorStyles
ÓÓE Q
.
ÓÓQ R
	boldLabel
ÓÓR [
)
ÓÓ[ \
;
ÓÓ\ ]
rect
ÒÒ 
.
ÒÒ 
x
ÒÒ 
+=
ÒÒ 
$num
ÒÒ 
;
ÒÒ 
bool
ÚÚ 
old_ChangedState
ÚÚ %
=
ÚÚ& '
GUI
ÚÚ( +
.
ÚÚ+ ,
changed
ÚÚ, 3
;
ÚÚ3 4
GUI
ÙÙ 
.
ÙÙ 
changed
ÙÙ 
=
ÙÙ 
false
ÙÙ #
;
ÙÙ# $
	m_xOffset
ıı 
=
ıı 
	EditorGUI
ıı %
.
ıı% &

FloatField
ıı& 0
(
ıı0 1
new
ıı1 4
Rect
ıı5 9
(
ıı9 :
rect
ıı: >
.
ıı> ?
x
ıı? @
+
ııA B
$num
ııC E
+
ııF G
width
ııH M
*
ııN O
$num
ııP Q
,
ııQ R
rect
ııS W
.
ııW X
y
ııX Y
+
ııZ [
$num
ıı\ ^
,
ıı^ _
width
ıı` e
-
ııf g
$num
ııh j
,
ııj k
$num
ııl n
)
ıın o
,
ııo p
new
ııq t

GUIContent
ııu 
(ıı Ä
$strııÄ Ö
)ııÖ Ü
,ııÜ á
	m_xOffsetııà ë
)ııë í
;ııí ì
if
ˆˆ 
(
ˆˆ 
GUI
ˆˆ 
.
ˆˆ 
changed
ˆˆ 
)
ˆˆ  "
UpdateGlobalProperty
ˆˆ! 5
(
ˆˆ5 6
$str
ˆˆ6 L
,
ˆˆL M
	m_xOffset
ˆˆN W
)
ˆˆW X
;
ˆˆX Y
	m_yOffset
¯¯ 
=
¯¯ 
	EditorGUI
¯¯ %
.
¯¯% &

FloatField
¯¯& 0
(
¯¯0 1
new
¯¯1 4
Rect
¯¯5 9
(
¯¯9 :
rect
¯¯: >
.
¯¯> ?
x
¯¯? @
+
¯¯A B
$num
¯¯C E
+
¯¯F G
width
¯¯H M
*
¯¯N O
$num
¯¯P Q
,
¯¯Q R
rect
¯¯S W
.
¯¯W X
y
¯¯X Y
+
¯¯Z [
$num
¯¯\ ^
,
¯¯^ _
width
¯¯` e
-
¯¯f g
$num
¯¯h j
,
¯¯j k
$num
¯¯l n
)
¯¯n o
,
¯¯o p
new
¯¯q t

GUIContent
¯¯u 
(¯¯ Ä
$str¯¯Ä Ö
)¯¯Ö Ü
,¯¯Ü á
	m_yOffset¯¯à ë
)¯¯ë í
;¯¯í ì
if
˘˘ 
(
˘˘ 
GUI
˘˘ 
.
˘˘ 
changed
˘˘ 
)
˘˘  "
UpdateGlobalProperty
˘˘! 5
(
˘˘5 6
$str
˘˘6 L
,
˘˘L M
	m_yOffset
˘˘N W
)
˘˘W X
;
˘˘X Y

m_xAdvance
˚˚ 
=
˚˚ 
	EditorGUI
˚˚ &
.
˚˚& '

FloatField
˚˚' 1
(
˚˚1 2
new
˚˚2 5
Rect
˚˚6 :
(
˚˚: ;
rect
˚˚; ?
.
˚˚? @
x
˚˚@ A
+
˚˚B C
$num
˚˚D F
+
˚˚G H
width
˚˚I N
*
˚˚O P
$num
˚˚Q R
,
˚˚R S
rect
˚˚T X
.
˚˚X Y
y
˚˚Y Z
+
˚˚[ \
$num
˚˚] _
,
˚˚_ `
width
˚˚a f
-
˚˚g h
$num
˚˚i k
,
˚˚k l
$num
˚˚m o
)
˚˚o p
,
˚˚p q
new
˚˚r u

GUIContent˚˚v Ä
(˚˚Ä Å
$str˚˚Å á
)˚˚á à
,˚˚à â

m_xAdvance˚˚ä î
)˚˚î ï
;˚˚ï ñ
if
¸¸ 
(
¸¸ 
GUI
¸¸ 
.
¸¸ 
changed
¸¸ 
)
¸¸  "
UpdateGlobalProperty
¸¸! 5
(
¸¸5 6
$str
¸¸6 K
,
¸¸K L

m_xAdvance
¸¸M W
)
¸¸W X
;
¸¸X Y
m_scale
˛˛ 
=
˛˛ 
	EditorGUI
˛˛ #
.
˛˛# $

FloatField
˛˛$ .
(
˛˛. /
new
˛˛/ 2
Rect
˛˛3 7
(
˛˛7 8
rect
˛˛8 <
.
˛˛< =
x
˛˛= >
+
˛˛? @
$num
˛˛A C
+
˛˛D E
width
˛˛F K
*
˛˛L M
$num
˛˛N O
,
˛˛O P
rect
˛˛Q U
.
˛˛U V
y
˛˛V W
+
˛˛X Y
$num
˛˛Z \
,
˛˛\ ]
width
˛˛^ c
-
˛˛d e
$num
˛˛f h
,
˛˛h i
$num
˛˛j l
)
˛˛l m
,
˛˛m n
new
˛˛o r

GUIContent
˛˛s }
(
˛˛} ~
$str˛˛~ É
)˛˛É Ñ
,˛˛Ñ Ö
m_scale˛˛Ü ç
)˛˛ç é
;˛˛é è
if
ˇˇ 
(
ˇˇ 
GUI
ˇˇ 
.
ˇˇ 
changed
ˇˇ 
)
ˇˇ  "
UpdateGlobalProperty
ˇˇ! 5
(
ˇˇ5 6
$str
ˇˇ6 ?
,
ˇˇ? @
m_scale
ˇˇA H
)
ˇˇH I
;
ˇˇI J
EditorGUILayout
ÅÅ 
.
ÅÅ  
EndVertical
ÅÅ  +
(
ÅÅ+ ,
)
ÅÅ, -
;
ÅÅ- .
GUI
ÑÑ 
.
ÑÑ 
changed
ÑÑ 
=
ÑÑ 
old_ChangedState
ÑÑ .
;
ÑÑ. /
}
ÜÜ 
if
ää 
(
ää 
serializedObject
ää  
.
ää  !%
ApplyModifiedProperties
ää! 8
(
ää8 9
)
ää9 :
||
ää; =
evt_cmd
ää> E
==
ääF H

k_UndoRedo
ääI S
||
ääT V
isAssetDirty
ääW c
)
ääc d
{
ãã 
if
åå 
(
åå 
m_SpriteAsset
åå !
.
åå! ".
 m_IsSpriteAssetLookupTablesDirty
åå" B
||
ååC E
evt_cmd
ååF M
==
ååN P

k_UndoRedo
ååQ [
)
åå[ \
m_SpriteAsset
çç !
.
çç! " 
UpdateLookupTables
çç" 4
(
çç4 5
)
çç5 6
;
çç6 7 
TMPro_EventManager
èè "
.
èè" #.
 ON_SPRITE_ASSET_PROPERTY_CHANGED
èè# C
(
èèC D
true
èèD H
,
èèH I
m_SpriteAsset
èèJ W
)
èèW X
;
èèX Y
isAssetDirty
ëë 
=
ëë 
false
ëë $
;
ëë$ %
EditorUtility
íí 
.
íí 
SetDirty
íí &
(
íí& '
target
íí' -
)
íí- .
;
íí. /
}
ìì 
GUI
ññ 
.
ññ 
enabled
ññ 
=
ññ 
true
ññ 
;
ññ 
if
óó 
(
óó 
currentEvent
óó 
.
óó 
type
óó !
==
óó" $
	EventType
óó% .
.
óó. /
	MouseDown
óó/ 8
&&
óó9 ;
currentEvent
óó< H
.
óóH I
button
óóI O
==
óóP R
$num
óóS T
)
óóT U
m_selectedElement
òò !
=
òò" #
-
òò$ %
$num
òò% &
;
òò& '
}
öö 	
void
¢¢ #
DisplayPageNavigation
¢¢ "
(
¢¢" #
ref
¢¢# &
int
¢¢' *
currentPage
¢¢+ 6
,
¢¢6 7
int
¢¢8 ;
	arraySize
¢¢< E
,
¢¢E F
int
¢¢G J
itemsPerPage
¢¢K W
)
¢¢W X
{
££ 	
Rect
§§ 
pagePos
§§ 
=
§§ 
EditorGUILayout
§§ *
.
§§* +
GetControlRect
§§+ 9
(
§§9 :
false
§§: ?
,
§§? @
$num
§§A C
)
§§C D
;
§§D E
pagePos
•• 
.
•• 
width
•• 
/=
•• 
$num
•• 
;
•• 
int
ßß 
shiftMultiplier
ßß 
=
ßß  !
Event
ßß" '
.
ßß' (
current
ßß( /
.
ßß/ 0
shift
ßß0 5
?
ßß6 7
$num
ßß8 :
:
ßß; <
$num
ßß= >
;
ßß> ?
GUI
™™ 
.
™™ 
enabled
™™ 
=
™™ 
currentPage
™™ %
>
™™& '
$num
™™( )
;
™™) *
if
¨¨ 
(
¨¨ 
GUI
¨¨ 
.
¨¨ 
Button
¨¨ 
(
¨¨ 
pagePos
¨¨ "
,
¨¨" #
$str
¨¨$ 3
)
¨¨3 4
)
¨¨4 5
{
≠≠ 
currentPage
ÆÆ 
-=
ÆÆ 
$num
ÆÆ  
*
ÆÆ! "
shiftMultiplier
ÆÆ# 2
;
ÆÆ2 3
}
∞∞ 
GUI
≥≥ 
.
≥≥ 
enabled
≥≥ 
=
≥≥ 
true
≥≥ 
;
≥≥ 
pagePos
¥¥ 
.
¥¥ 
x
¥¥ 
+=
¥¥ 
pagePos
¥¥  
.
¥¥  !
width
¥¥! &
;
¥¥& '
int
µµ 

totalPages
µµ 
=
µµ 
(
µµ 
int
µµ !
)
µµ! "
(
µµ" #
	arraySize
µµ# ,
/
µµ- .
(
µµ/ 0
float
µµ0 5
)
µµ5 6
itemsPerPage
µµ6 B
+
µµC D
$num
µµE K
)
µµK L
;
µµL M
GUI
∂∂ 
.
∂∂ 
Label
∂∂ 
(
∂∂ 
pagePos
∂∂ 
,
∂∂ 
$str
∂∂ &
+
∂∂' (
(
∂∂) *
currentPage
∂∂* 5
+
∂∂6 7
$num
∂∂8 9
)
∂∂9 :
+
∂∂; <
$str
∂∂= B
+
∂∂C D

totalPages
∂∂E O
,
∂∂O P 
TMP_UIStyleManager
∂∂Q c
.
∂∂c d
centeredLabel
∂∂d q
)
∂∂q r
;
∂∂r s
pagePos
ππ 
.
ππ 
x
ππ 
+=
ππ 
pagePos
ππ  
.
ππ  !
width
ππ! &
;
ππ& '
GUI
∫∫ 
.
∫∫ 
enabled
∫∫ 
=
∫∫ 
itemsPerPage
∫∫ &
*
∫∫' (
(
∫∫) *
currentPage
∫∫* 5
+
∫∫6 7
$num
∫∫8 9
)
∫∫9 :
<
∫∫; <
	arraySize
∫∫= F
;
∫∫F G
if
ºº 
(
ºº 
GUI
ºº 
.
ºº 
Button
ºº 
(
ºº 
pagePos
ºº "
,
ºº" #
$str
ºº$ /
)
ºº/ 0
)
ºº0 1
{
ΩΩ 
currentPage
ææ 
+=
ææ 
$num
ææ  
*
ææ! "
shiftMultiplier
ææ# 2
;
ææ2 3
}
¿¿ 
currentPage
√√ 
=
√√ 
Mathf
√√ 
.
√√  
Clamp
√√  %
(
√√% &
currentPage
√√& 1
,
√√1 2
$num
√√3 4
,
√√4 5
	arraySize
√√6 ?
/
√√@ A
itemsPerPage
√√B N
)
√√N O
;
√√O P
GUI
≈≈ 
.
≈≈ 
enabled
≈≈ 
=
≈≈ 
true
≈≈ 
;
≈≈ 
}
∆∆ 	
void
ŒŒ "
UpdateGlobalProperty
ŒŒ !
(
ŒŒ! "
string
ŒŒ" (
property
ŒŒ) 1
,
ŒŒ1 2
float
ŒŒ3 8
value
ŒŒ9 >
)
ŒŒ> ?
{
œœ 	
int
–– 
	arraySize
–– 
=
–– (
m_SpriteGlyphTableProperty
–– 6
.
––6 7
	arraySize
––7 @
;
––@ A
for
““ 
(
““ 
int
““ 
i
““ 
=
““ 
$num
““ 
;
““ 
i
““ 
<
““ 
	arraySize
““  )
;
““) *
i
““+ ,
++
““, .
)
““. /
{
””  
SerializedProperty
’’ "!
spriteGlyphProperty
’’# 6
=
’’7 8(
m_SpriteGlyphTableProperty
’’9 S
.
’’S T$
GetArrayElementAtIndex
’’T j
(
’’j k
i
’’k l
)
’’l m
;
’’m n
if
◊◊ 
(
◊◊ 
property
◊◊ 
==
◊◊ 
$str
◊◊  )
)
◊◊) *
{
ÿÿ !
spriteGlyphProperty
ŸŸ '
.
ŸŸ' ("
FindPropertyRelative
ŸŸ( <
(
ŸŸ< =
property
ŸŸ= E
)
ŸŸE F
.
ŸŸF G

floatValue
ŸŸG Q
=
ŸŸR S
value
ŸŸT Y
;
ŸŸY Z
}
⁄⁄ 
else
€€ 
{
‹‹  
SerializedProperty
›› &"
glyphMetricsProperty
››' ;
=
››< =!
spriteGlyphProperty
››> Q
.
››Q R"
FindPropertyRelative
››R f
(
››f g
$str
››g r
)
››r s
;
››s t"
glyphMetricsProperty
ﬁﬁ (
.
ﬁﬁ( )"
FindPropertyRelative
ﬁﬁ) =
(
ﬁﬁ= >
property
ﬁﬁ> F
)
ﬁﬁF G
.
ﬁﬁG H

floatValue
ﬁﬁH R
=
ﬁﬁS T
value
ﬁﬁU Z
;
ﬁﬁZ [
}
ﬂﬂ 
}
‡‡ 
GUI
‚‚ 
.
‚‚ 
changed
‚‚ 
=
‚‚ 
false
‚‚ 
;
‚‚  
}
„„ 	
private
ÊÊ 
bool
ÊÊ 
DoSelectionCheck
ÊÊ %
(
ÊÊ% &
Rect
ÊÊ& *
selectionArea
ÊÊ+ 8
)
ÊÊ8 9
{
ÁÁ 	
Event
ËË 
currentEvent
ËË 
=
ËË  
Event
ËË! &
.
ËË& '
current
ËË' .
;
ËË. /
switch
ÍÍ 
(
ÍÍ 
currentEvent
ÍÍ  
.
ÍÍ  !
type
ÍÍ! %
)
ÍÍ% &
{
ÎÎ 
case
ÏÏ 
	EventType
ÏÏ 
.
ÏÏ 
	MouseDown
ÏÏ (
:
ÏÏ( )
if
ÌÌ 
(
ÌÌ 
selectionArea
ÌÌ %
.
ÌÌ% &
Contains
ÌÌ& .
(
ÌÌ. /
currentEvent
ÌÌ/ ;
.
ÌÌ; <
mousePosition
ÌÌ< I
)
ÌÌI J
&&
ÌÌK M
currentEvent
ÌÌN Z
.
ÌÌZ [
button
ÌÌ[ a
==
ÌÌb d
$num
ÌÌe f
)
ÌÌf g
{
ÓÓ 
currentEvent
ÔÔ $
.
ÔÔ$ %
Use
ÔÔ% (
(
ÔÔ( )
)
ÔÔ) *
;
ÔÔ* +
return
 
true
 #
;
# $
}
ÒÒ 
break
ÚÚ 
;
ÚÚ 
}
ÛÛ 
return
ıı 
false
ıı 
;
ıı 
}
ˆˆ 	
void
˛˛ #
SwapCharacterElements
˛˛ "
(
˛˛" #
int
˛˛# &
selectedIndex
˛˛' 4
,
˛˛4 5
int
˛˛6 9
newIndex
˛˛: B
)
˛˛B C
{
ˇˇ 	,
m_SpriteCharacterTableProperty
ÄÄ *
.
ÄÄ* +
MoveArrayElement
ÄÄ+ ;
(
ÄÄ; <
selectedIndex
ÄÄ< I
,
ÄÄI J
newIndex
ÄÄK S
)
ÄÄS T
;
ÄÄT U
m_selectedElement
ÅÅ 
=
ÅÅ 
newIndex
ÅÅ  (
;
ÅÅ( )&
m_IsCharacterSearchDirty
ÇÇ $
=
ÇÇ% &
true
ÇÇ' +
;
ÇÇ+ ,
m_SpriteAsset
ÉÉ 
.
ÉÉ .
 m_IsSpriteAssetLookupTablesDirty
ÉÉ :
=
ÉÉ; <
true
ÉÉ= A
;
ÉÉA B
}
ÑÑ 	
void
ãã "
MoveCharacterToIndex
ãã !
(
ãã! "
int
ãã" %
selectedIndex
ãã& 3
,
ãã3 4
int
ãã5 8
newIndex
ãã9 A
)
ããA B
{
åå 	
int
çç 
	arraySize
çç 
=
çç ,
m_SpriteCharacterTableProperty
çç :
.
çç: ;
	arraySize
çç; D
;
ççD E
if
èè 
(
èè 
newIndex
èè 
>=
èè 
	arraySize
èè %
)
èè% &
newIndex
êê 
=
êê 
	arraySize
êê $
-
êê% &
$num
êê' (
;
êê( ),
m_SpriteCharacterTableProperty
íí *
.
íí* +
MoveArrayElement
íí+ ;
(
íí; <
selectedIndex
íí< I
,
ííI J
newIndex
ííK S
)
ííS T
;
ííT U
m_selectedElement
îî 
=
îî 
newIndex
îî  (
;
îî( )&
m_IsCharacterSearchDirty
ïï $
=
ïï% &
true
ïï' +
;
ïï+ ,
m_SpriteAsset
ññ 
.
ññ .
 m_IsSpriteAssetLookupTablesDirty
ññ :
=
ññ; <
true
ññ= A
;
ññA B
}
ôô 	
void
†† 
SwapGlyphElements
†† 
(
†† 
int
†† "
selectedIndex
††# 0
,
††0 1
int
††2 5
newIndex
††6 >
)
††> ?
{
°° 	(
m_SpriteGlyphTableProperty
¢¢ &
.
¢¢& '
MoveArrayElement
¢¢' 7
(
¢¢7 8
selectedIndex
¢¢8 E
,
¢¢E F
newIndex
¢¢G O
)
¢¢O P
;
¢¢P Q
m_selectedElement
££ 
=
££ 
newIndex
££  (
;
££( )"
m_IsGlyphSearchDirty
§§  
=
§§! "
true
§§# '
;
§§' (
m_SpriteAsset
•• 
.
•• .
 m_IsSpriteAssetLookupTablesDirty
•• :
=
••; <
true
••= A
;
••A B
}
¶¶ 	
void
≠≠ 
MoveGlyphToIndex
≠≠ 
(
≠≠ 
int
≠≠ !
selectedIndex
≠≠" /
,
≠≠/ 0
int
≠≠1 4
newIndex
≠≠5 =
)
≠≠= >
{
ÆÆ 	
int
ØØ 
	arraySize
ØØ 
=
ØØ (
m_SpriteGlyphTableProperty
ØØ 6
.
ØØ6 7
	arraySize
ØØ7 @
;
ØØ@ A
if
±± 
(
±± 
newIndex
±± 
>=
±± 
	arraySize
±± %
)
±±% &
newIndex
≤≤ 
=
≤≤ 
	arraySize
≤≤ $
-
≤≤% &
$num
≤≤' (
;
≤≤( )(
m_SpriteGlyphTableProperty
¥¥ &
.
¥¥& '
MoveArrayElement
¥¥' 7
(
¥¥7 8
selectedIndex
¥¥8 E
,
¥¥E F
newIndex
¥¥G O
)
¥¥O P
;
¥¥P Q
m_selectedElement
∂∂ 
=
∂∂ 
newIndex
∂∂  (
;
∂∂( )"
m_IsGlyphSearchDirty
∑∑  
=
∑∑! "
true
∑∑# '
;
∑∑' (
m_SpriteAsset
∏∏ 
.
∏∏ .
 m_IsSpriteAssetLookupTablesDirty
∏∏ :
=
∏∏; <
true
∏∏= A
;
∏∏A B
}
ªª 	
void
√√ -
CopyCharacterSerializedProperty
√√ ,
(
√√, - 
SerializedProperty
√√- ?
source
√√@ F
,
√√F G
ref
√√H K 
SerializedProperty
√√L ^
target
√√_ e
)
√√e f
{
ƒƒ 	
target
≈≈ 
.
≈≈ "
FindPropertyRelative
≈≈ '
(
≈≈' (
$str
≈≈( 0
)
≈≈0 1
.
≈≈1 2
stringValue
≈≈2 =
=
≈≈> ?
source
≈≈@ F
.
≈≈F G"
FindPropertyRelative
≈≈G [
(
≈≈[ \
$str
≈≈\ d
)
≈≈d e
.
≈≈e f
stringValue
≈≈f q
;
≈≈q r
target
∆∆ 
.
∆∆ "
FindPropertyRelative
∆∆ '
(
∆∆' (
$str
∆∆( 4
)
∆∆4 5
.
∆∆5 6
intValue
∆∆6 >
=
∆∆? @
source
∆∆A G
.
∆∆G H"
FindPropertyRelative
∆∆H \
(
∆∆\ ]
$str
∆∆] i
)
∆∆i j
.
∆∆j k
intValue
∆∆k s
;
∆∆s t
target
«« 
.
«« "
FindPropertyRelative
«« '
(
««' (
$str
««( 3
)
««3 4
.
««4 5
intValue
««5 =
=
««> ?
source
««@ F
.
««F G"
FindPropertyRelative
««G [
(
««[ \
$str
««\ g
)
««g h
.
««h i
intValue
««i q
;
««q r
target
»» 
.
»» "
FindPropertyRelative
»» '
(
»»' (
$str
»»( 6
)
»»6 7
.
»»7 8
intValue
»»8 @
=
»»A B
source
»»C I
.
»»I J"
FindPropertyRelative
»»J ^
(
»»^ _
$str
»»_ m
)
»»m n
.
»»n o
intValue
»»o w
;
»»w x
target
…… 
.
…… "
FindPropertyRelative
…… '
(
……' (
$str
……( 1
)
……1 2
.
……2 3

floatValue
……3 =
=
……> ?
source
……@ F
.
……F G"
FindPropertyRelative
……G [
(
……[ \
$str
……\ e
)
……e f
.
……f g

floatValue
……g q
;
……q r
}
   	
void
ÃÃ )
CopyGlyphSerializedProperty
ÃÃ (
(
ÃÃ( ) 
SerializedProperty
ÃÃ) ;
srcGlyph
ÃÃ< D
,
ÃÃD E
ref
ÃÃF I 
SerializedProperty
ÃÃJ \
dstGlyph
ÃÃ] e
)
ÃÃe f
{
ÕÕ 	
dstGlyph
—— 
.
—— "
FindPropertyRelative
—— )
(
——) *
$str
——* 3
)
——3 4
.
——4 5
intValue
——5 =
=
——> ?
srcGlyph
——@ H
.
——H I"
FindPropertyRelative
——I ]
(
——] ^
$str
——^ g
)
——g h
.
——h i
intValue
——i q
;
——q r 
SerializedProperty
‘‘ 
srcGlyphMetrics
‘‘ .
=
‘‘/ 0
srcGlyph
‘‘1 9
.
‘‘9 :"
FindPropertyRelative
‘‘: N
(
‘‘N O
$str
‘‘O Z
)
‘‘Z [
;
‘‘[ \ 
SerializedProperty
’’ 
dstGlyphMetrics
’’ .
=
’’/ 0
dstGlyph
’’1 9
.
’’9 :"
FindPropertyRelative
’’: N
(
’’N O
$str
’’O Z
)
’’Z [
;
’’[ \
dstGlyphMetrics
◊◊ 
.
◊◊ "
FindPropertyRelative
◊◊ 0
(
◊◊0 1
$str
◊◊1 :
)
◊◊: ;
.
◊◊; <

floatValue
◊◊< F
=
◊◊G H
srcGlyphMetrics
◊◊I X
.
◊◊X Y"
FindPropertyRelative
◊◊Y m
(
◊◊m n
$str
◊◊n w
)
◊◊w x
.
◊◊x y

floatValue◊◊y É
;◊◊É Ñ
dstGlyphMetrics
ÿÿ 
.
ÿÿ "
FindPropertyRelative
ÿÿ 0
(
ÿÿ0 1
$str
ÿÿ1 ;
)
ÿÿ; <
.
ÿÿ< =

floatValue
ÿÿ= G
=
ÿÿH I
srcGlyphMetrics
ÿÿJ Y
.
ÿÿY Z"
FindPropertyRelative
ÿÿZ n
(
ÿÿn o
$str
ÿÿo y
)
ÿÿy z
.
ÿÿz {

floatValueÿÿ{ Ö
;ÿÿÖ Ü
dstGlyphMetrics
ŸŸ 
.
ŸŸ "
FindPropertyRelative
ŸŸ 0
(
ŸŸ0 1
$str
ŸŸ1 G
)
ŸŸG H
.
ŸŸH I

floatValue
ŸŸI S
=
ŸŸT U
srcGlyphMetrics
ŸŸV e
.
ŸŸe f"
FindPropertyRelative
ŸŸf z
(
ŸŸz {
$strŸŸ{ ë
)ŸŸë í
.ŸŸí ì

floatValueŸŸì ù
;ŸŸù û
dstGlyphMetrics
⁄⁄ 
.
⁄⁄ "
FindPropertyRelative
⁄⁄ 0
(
⁄⁄0 1
$str
⁄⁄1 G
)
⁄⁄G H
.
⁄⁄H I

floatValue
⁄⁄I S
=
⁄⁄T U
srcGlyphMetrics
⁄⁄V e
.
⁄⁄e f"
FindPropertyRelative
⁄⁄f z
(
⁄⁄z {
$str⁄⁄{ ë
)⁄⁄ë í
.⁄⁄í ì

floatValue⁄⁄ì ù
;⁄⁄ù û
dstGlyphMetrics
€€ 
.
€€ "
FindPropertyRelative
€€ 0
(
€€0 1
$str
€€1 F
)
€€F G
.
€€G H

floatValue
€€H R
=
€€S T
srcGlyphMetrics
€€U d
.
€€d e"
FindPropertyRelative
€€e y
(
€€y z
$str€€z è
)€€è ê
.€€ê ë

floatValue€€ë õ
;€€õ ú 
SerializedProperty
ﬁﬁ 
srcGlyphRect
ﬁﬁ +
=
ﬁﬁ, -
srcGlyph
ﬁﬁ. 6
.
ﬁﬁ6 7"
FindPropertyRelative
ﬁﬁ7 K
(
ﬁﬁK L
$str
ﬁﬁL Y
)
ﬁﬁY Z
;
ﬁﬁZ [ 
SerializedProperty
ﬂﬂ 
dstGlyphRect
ﬂﬂ +
=
ﬂﬂ, -
dstGlyph
ﬂﬂ. 6
.
ﬂﬂ6 7"
FindPropertyRelative
ﬂﬂ7 K
(
ﬂﬂK L
$str
ﬂﬂL Y
)
ﬂﬂY Z
;
ﬂﬂZ [
dstGlyphRect
·· 
.
·· "
FindPropertyRelative
·· -
(
··- .
$str
··. 3
)
··3 4
.
··4 5
intValue
··5 =
=
··> ?
srcGlyphRect
··@ L
.
··L M"
FindPropertyRelative
··M a
(
··a b
$str
··b g
)
··g h
.
··h i
intValue
··i q
;
··q r
dstGlyphRect
‚‚ 
.
‚‚ "
FindPropertyRelative
‚‚ -
(
‚‚- .
$str
‚‚. 3
)
‚‚3 4
.
‚‚4 5
intValue
‚‚5 =
=
‚‚> ?
srcGlyphRect
‚‚@ L
.
‚‚L M"
FindPropertyRelative
‚‚M a
(
‚‚a b
$str
‚‚b g
)
‚‚g h
.
‚‚h i
intValue
‚‚i q
;
‚‚q r
dstGlyphRect
„„ 
.
„„ "
FindPropertyRelative
„„ -
(
„„- .
$str
„„. 7
)
„„7 8
.
„„8 9
intValue
„„9 A
=
„„B C
srcGlyphRect
„„D P
.
„„P Q"
FindPropertyRelative
„„Q e
(
„„e f
$str
„„f o
)
„„o p
.
„„p q
intValue
„„q y
;
„„y z
dstGlyphRect
‰‰ 
.
‰‰ "
FindPropertyRelative
‰‰ -
(
‰‰- .
$str
‰‰. 8
)
‰‰8 9
.
‰‰9 :
intValue
‰‰: B
=
‰‰C D
srcGlyphRect
‰‰E Q
.
‰‰Q R"
FindPropertyRelative
‰‰R f
(
‰‰f g
$str
‰‰g q
)
‰‰q r
.
‰‰r s
intValue
‰‰s {
;
‰‰{ |
dstGlyph
ÊÊ 
.
ÊÊ "
FindPropertyRelative
ÊÊ )
(
ÊÊ) *
$str
ÊÊ* 3
)
ÊÊ3 4
.
ÊÊ4 5

floatValue
ÊÊ5 ?
=
ÊÊ@ A
srcGlyph
ÊÊB J
.
ÊÊJ K"
FindPropertyRelative
ÊÊK _
(
ÊÊ_ `
$str
ÊÊ` i
)
ÊÊi j
.
ÊÊj k

floatValue
ÊÊk u
;
ÊÊu v
dstGlyph
ÁÁ 
.
ÁÁ "
FindPropertyRelative
ÁÁ )
(
ÁÁ) *
$str
ÁÁ* 8
)
ÁÁ8 9
.
ÁÁ9 :
intValue
ÁÁ: B
=
ÁÁC D
srcGlyph
ÁÁE M
.
ÁÁM N"
FindPropertyRelative
ÁÁN b
(
ÁÁb c
$str
ÁÁc q
)
ÁÁq r
.
ÁÁr s
intValue
ÁÁs {
;
ÁÁ{ |
}
ËË 	
void
 "
SearchCharacterTable
 !
(
! "
string
" (
searchPattern
) 6
,
6 7
ref
8 ;
List
< @
<
@ A
int
A D
>
D E
searchResults
F S
)
S T
{
ÒÒ 	
if
ÚÚ 
(
ÚÚ 
searchResults
ÚÚ 
==
ÚÚ  
null
ÚÚ! %
)
ÚÚ% &
searchResults
ÚÚ' 4
=
ÚÚ5 6
new
ÚÚ7 :
List
ÚÚ; ?
<
ÚÚ? @
int
ÚÚ@ C
>
ÚÚC D
(
ÚÚD E
)
ÚÚE F
;
ÚÚF G
searchResults
ÛÛ 
.
ÛÛ 
Clear
ÛÛ 
(
ÛÛ  
)
ÛÛ  !
;
ÛÛ! "
int
ıı 
	arraySize
ıı 
=
ıı ,
m_SpriteCharacterTableProperty
ıı :
.
ıı: ;
	arraySize
ıı; D
;
ııD E
for
˜˜ 
(
˜˜ 
int
˜˜ 
i
˜˜ 
=
˜˜ 
$num
˜˜ 
;
˜˜ 
i
˜˜ 
<
˜˜ 
	arraySize
˜˜  )
;
˜˜) *
i
˜˜+ ,
++
˜˜, .
)
˜˜. /
{
¯¯  
SerializedProperty
˘˘ "
sourceSprite
˘˘# /
=
˘˘0 1,
m_SpriteCharacterTableProperty
˘˘2 P
.
˘˘P Q$
GetArrayElementAtIndex
˘˘Q g
(
˘˘g h
i
˘˘h i
)
˘˘i j
;
˘˘j k
if
¸¸ 
(
¸¸ 
i
¸¸ 
.
¸¸ 
ToString
¸¸ 
(
¸¸ 
)
¸¸  
.
¸¸  !
Contains
¸¸! )
(
¸¸) *
searchPattern
¸¸* 7
)
¸¸7 8
)
¸¸8 9
{
˝˝ 
searchResults
˛˛ !
.
˛˛! "
Add
˛˛" %
(
˛˛% &
i
˛˛& '
)
˛˛' (
;
˛˛( )
continue
ˇˇ 
;
ˇˇ 
}
ÄÄ 
int
ÉÉ 
id
ÉÉ 
=
ÉÉ 
sourceSprite
ÉÉ %
.
ÉÉ% &"
FindPropertyRelative
ÉÉ& :
(
ÉÉ: ;
$str
ÉÉ; I
)
ÉÉI J
.
ÉÉJ K
intValue
ÉÉK S
;
ÉÉS T
if
ÑÑ 
(
ÑÑ 
id
ÑÑ 
.
ÑÑ 
ToString
ÑÑ 
(
ÑÑ  
)
ÑÑ  !
.
ÑÑ! "
Contains
ÑÑ" *
(
ÑÑ* +
searchPattern
ÑÑ+ 8
)
ÑÑ8 9
)
ÑÑ9 :
{
ÖÖ 
searchResults
ÜÜ !
.
ÜÜ! "
Add
ÜÜ" %
(
ÜÜ% &
i
ÜÜ& '
)
ÜÜ' (
;
ÜÜ( )
continue
áá 
;
áá 
}
àà 
string
ãã 
name
ãã 
=
ãã 
sourceSprite
ãã *
.
ãã* +"
FindPropertyRelative
ãã+ ?
(
ãã? @
$str
ãã@ H
)
ããH I
.
ããI J
stringValue
ããJ U
.
ããU V
ToLower
ããV ]
(
ãã] ^
System
ãã^ d
.
ããd e
Globalization
ããe r
.
ããr s
CultureInfo
ããs ~
.
ãã~ 
InvariantCultureãã è
)ããè ê
.ããê ë
Trimããë ï
(ããï ñ
)ããñ ó
;ããó ò
if
åå 
(
åå 
name
åå 
.
åå 
Contains
åå !
(
åå! "
searchPattern
åå" /
)
åå/ 0
)
åå0 1
{
çç 
searchResults
éé !
.
éé! "
Add
éé" %
(
éé% &
i
éé& '
)
éé' (
;
éé( )
continue
èè 
;
èè 
}
êê 
}
ëë 
}
íí 	
void
îî 
SearchGlyphTable
îî 
(
îî 
string
îî $
searchPattern
îî% 2
,
îî2 3
ref
îî4 7
List
îî8 <
<
îî< =
int
îî= @
>
îî@ A
searchResults
îîB O
)
îîO P
{
ïï 	
if
ññ 
(
ññ 
searchResults
ññ 
==
ññ  
null
ññ! %
)
ññ% &
searchResults
ññ' 4
=
ññ5 6
new
ññ7 :
List
ññ; ?
<
ññ? @
int
ññ@ C
>
ññC D
(
ññD E
)
ññE F
;
ññF G
searchResults
óó 
.
óó 
Clear
óó 
(
óó  
)
óó  !
;
óó! "
int
ôô 
	arraySize
ôô 
=
ôô (
m_SpriteGlyphTableProperty
ôô 6
.
ôô6 7
	arraySize
ôô7 @
;
ôô@ A
for
õõ 
(
õõ 
int
õõ 
i
õõ 
=
õõ 
$num
õõ 
;
õõ 
i
õõ 
<
õõ 
	arraySize
õõ  )
;
õõ) *
i
õõ+ ,
++
õõ, .
)
õõ. /
{
úú  
SerializedProperty
ùù "
sourceSprite
ùù# /
=
ùù0 1(
m_SpriteGlyphTableProperty
ùù2 L
.
ùùL M$
GetArrayElementAtIndex
ùùM c
(
ùùc d
i
ùùd e
)
ùùe f
;
ùùf g
if
†† 
(
†† 
i
†† 
.
†† 
ToString
†† 
(
†† 
)
††  
.
††  !
Contains
††! )
(
††) *
searchPattern
††* 7
)
††7 8
)
††8 9
{
°° 
searchResults
¢¢ !
.
¢¢! "
Add
¢¢" %
(
¢¢% &
i
¢¢& '
)
¢¢' (
;
¢¢( )
continue
££ 
;
££ 
}
§§ 
int
ßß 
id
ßß 
=
ßß 
sourceSprite
ßß %
.
ßß% &"
FindPropertyRelative
ßß& :
(
ßß: ;
$str
ßß; I
)
ßßI J
.
ßßJ K
intValue
ßßK S
;
ßßS T
if
®® 
(
®® 
id
®® 
.
®® 
ToString
®® 
(
®®  
)
®®  !
.
®®! "
Contains
®®" *
(
®®* +
searchPattern
®®+ 8
)
®®8 9
)
®®9 :
{
©© 
searchResults
™™ !
.
™™! "
Add
™™" %
(
™™% &
i
™™& '
)
™™' (
;
™™( )
continue
´´ 
;
´´ 
}
¨¨ 
string
ØØ 
name
ØØ 
=
ØØ 
sourceSprite
ØØ *
.
ØØ* +"
FindPropertyRelative
ØØ+ ?
(
ØØ? @
$str
ØØ@ H
)
ØØH I
.
ØØI J
stringValue
ØØJ U
.
ØØU V
ToLower
ØØV ]
(
ØØ] ^
System
ØØ^ d
.
ØØd e
Globalization
ØØe r
.
ØØr s
CultureInfo
ØØs ~
.
ØØ~ 
InvariantCultureØØ è
)ØØè ê
.ØØê ë
TrimØØë ï
(ØØï ñ
)ØØñ ó
;ØØó ò
if
∞∞ 
(
∞∞ 
name
∞∞ 
.
∞∞ 
Contains
∞∞ !
(
∞∞! "
searchPattern
∞∞" /
)
∞∞/ 0
)
∞∞0 1
{
±± 
searchResults
≤≤ !
.
≤≤! "
Add
≤≤" %
(
≤≤% &
i
≤≤& '
)
≤≤' (
;
≤≤( )
continue
≥≥ 
;
≥≥ 
}
¥¥ 
}
µµ 
}
∂∂ 	
}
∏∏ 
}ππ ª
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_EditorCoroutine.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{		 
public 

class 
TMP_EditorCoroutine $
{ 
readonly 
IEnumerator 
	coroutine &
;& '
TMP_EditorCoroutine 
( 
IEnumerator '
routine( /
)/ 0
{ 	
this 
. 
	coroutine 
= 
routine $
;$ %
} 	
public"" 
static"" 
TMP_EditorCoroutine"" )
StartCoroutine""* 8
(""8 9
IEnumerator""9 D
routine""E L
)""L M
{## 	
TMP_EditorCoroutine$$ 
	coroutine$$  )
=$$* +
new$$, /
TMP_EditorCoroutine$$0 C
($$C D
routine$$D K
)$$K L
;$$L M
	coroutine%% 
.%% 
Start%% 
(%% 
)%% 
;%% 
return.. 
	coroutine.. 
;.. 
}// 	
void>> 
Start>> 
(>> 
)>> 
{?? 	
EditorApplication@@ 
.@@ 
update@@ $
+=@@% '
EditorUpdate@@( 4
;@@4 5
}AA 	
publicGG 
voidGG 
StopGG 
(GG 
)GG 
{HH 	
ifII 
(II 
EditorApplicationII !
.II! "
updateII" (
!=II) +
nullII, 0
)II0 1
EditorApplicationJJ !
.JJ! "
updateJJ" (
-=JJ) +
EditorUpdateJJ, 8
;JJ8 9
}MM 	
voidSS 
EditorUpdateSS 
(SS 
)SS 
{TT 	
ifVV 
(VV 
	coroutineVV 
.VV 
MoveNextVV "
(VV" #
)VV# $
==VV% '
falseVV( -
)VV- .
StopWW 
(WW 
)WW 
;WW 
ifZZ 
(ZZ 
	coroutineZZ 
.ZZ 
CurrentZZ !
!=ZZ" $
nullZZ% )
)ZZ) *
{[[ 
}]] 
}^^ 	
}__ 
}`` ∞‡
•D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_SpriteCharacterPropertyDrawer.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
[

  
CustomPropertyDrawer

 
(

 
typeof

  
(

  !
TMP_SpriteCharacter

! 4
)

4 5
)

5 6
]

6 7
public 

class -
!TMP_SpriteCharacterPropertyDrawer 2
:3 4
PropertyDrawer5 C
{ 
int %
m_GlyphSelectedForEditing %
=& '
-( )
$num) *
;* +
public 
override 
void 
OnGUI "
(" #
Rect# '
position( 0
,0 1
SerializedProperty2 D
propertyE M
,M N

GUIContentO Y
labelZ _
)_ `
{ 	
SerializedProperty 
prop_SpriteName .
=/ 0
property1 9
.9 : 
FindPropertyRelative: N
(N O
$strO W
)W X
;X Y
SerializedProperty #
prop_SpriteNameHashCode 6
=7 8
property9 A
.A B 
FindPropertyRelativeB V
(V W
$strW c
)c d
;d e
SerializedProperty 
prop_SpriteUnicode 1
=2 3
property4 <
.< = 
FindPropertyRelative= Q
(Q R
$strR ]
)] ^
;^ _
SerializedProperty !
prop_SpriteGlyphIndex 4
=5 6
property7 ?
.? @ 
FindPropertyRelative@ T
(T U
$strU c
)c d
;d e
SerializedProperty 
prop_SpriteScale /
=0 1
property2 :
.: ; 
FindPropertyRelative; O
(O P
$strP Y
)Y Z
;Z [
GUIStyle 
style 
= 
new  
GUIStyle! )
() *
EditorStyles* 6
.6 7
label7 <
)< =
;= >
style 
. 
richText 
= 
true !
;! "
EditorGUIUtility 
. 

labelWidth '
=( )
$num* -
;- .
EditorGUIUtility 
. 

fieldWidth '
=( )
$num* ,
;, -
Rect 
rect 
= 
new 
Rect  
(  !
position! )
.) *
x* +
+, -
$num. 0
,0 1
position2 :
.: ;
y; <
,< =
position> F
.F G
widthG L
,L M
$numN P
)P Q
;Q R
if!! 
(!! 
GUI!! 
.!! 
enabled!! 
==!! 
false!! $
)!!$ %
{"" 
int$$  
spriteCharacterIndex$$ (
;$$( )
int%% 
.%% 
TryParse%% 
(%% 
property%% %
.%%% &
displayName%%& 1
.%%1 2
Split%%2 7
(%%7 8
$char%%8 ;
)%%; <
[%%< =
$num%%= >
]%%> ?
,%%? @
out%%A D 
spriteCharacterIndex%%E Y
)%%Y Z
;%%Z [
	EditorGUI&& 
.&& 

LabelField&& $
(&&$ %
new&&% (
Rect&&) -
(&&- .
rect&&. 2
.&&2 3
x&&3 4
,&&4 5
rect&&6 :
.&&: ;
y&&; <
,&&< =
$num&&> A
,&&A B
$num&&C E
)&&E F
,&&F G
new&&H K

GUIContent&&L V
(&&V W
$str&&W o
+&&p q!
spriteCharacterIndex	&&r Ü
+
&&á à
$str
&&â ì
)
&&ì î
,
&&î ï
style
&&ñ õ
)
&&õ ú
;
&&ú ù
	EditorGUI(( 
.(( 

LabelField(( $
((($ %
new((% (
Rect(() -
(((- .
rect((. 2
.((2 3
x((3 4
+((5 6
$num((7 :
,((: ;
rect((< @
.((@ A
y((A B
,((B C
$num((D H
,((H I
$num((J L
)((L M
,((M N
new((O R

GUIContent((S ]
(((] ^
$str((^ z
+(({ |
prop_SpriteUnicode	((} è
.
((è ê
intValue
((ê ò
.
((ò ô
ToString
((ô °
(
((° ¢
$str
((¢ •
)
((• ¶
+
((ß ®
$str
((© ≥
)
((≥ ¥
,
((¥ µ
style
((∂ ª
)
((ª º
;
((º Ω
	EditorGUI)) 
.)) 

LabelField)) $
())$ %
new))% (
Rect))) -
())- .
rect)). 2
.))2 3
x))3 4
+))5 6
$num))7 ;
,)); <
rect))= A
.))A B
y))B C
,))C D
rect))E I
.))I J
width))J O
-))P Q
$num))R U
,))U V
$num))W Y
)))Y Z
,))Z [
new))\ _

GUIContent))` j
())j k
$str	))k Ç
+
))É Ñ
prop_SpriteName
))Ö î
.
))î ï
stringValue
))ï †
+
))° ¢
$str
))£ ≠
)
))≠ Æ
,
))Æ Ø
style
))∞ µ
)
))µ ∂
;
))∂ ∑
	EditorGUI++ 
.++ 

LabelField++ $
(++$ %
new++% (
Rect++) -
(++- .
rect++. 2
.++2 3
x++3 4
,++4 5
rect++6 :
.++: ;
y++; <
+++= >
$num++? A
,++A B
$num++C F
,++F G
$num++H J
)++J K
,++K L
new++M P

GUIContent++Q [
(++[ \
$str++\ w
+++x y"
prop_SpriteGlyphIndex	++z è
.
++è ê
intValue
++ê ò
+
++ô ö
$str
++õ •
)
++• ¶
,
++¶ ß
style
++® ≠
)
++≠ Æ
;
++Æ Ø
DrawSpriteGlyph.. 
(..  
position..  (
,..( )
property..* 2
)..2 3
;..3 4
	EditorGUI00 
.00 

LabelField00 $
(00$ %
new00% (
Rect00) -
(00- .
rect00. 2
.002 3
x003 4
,004 5
rect006 :
.00: ;
y00; <
+00= >
$num00? A
,00A B
$num00C E
,00E F
$num00G I
)00I J
,00J K
new00L O

GUIContent00P Z
(00Z [
$str00[ s
+00t u
prop_SpriteScale	00v Ü
.
00Ü á

floatValue
00á ë
+
00í ì
$str
00î û
)
00û ü
,
00ü †
style
00° ¶
)
00¶ ß
;
00ß ®
}11 
else22 
{33 
TMP_SpriteAsset55 
spriteAsset55  +
=55, -
property55. 6
.556 7
serializedObject557 G
.55G H
targetObject55H T
as55U W
TMP_SpriteAsset55X g
;55g h
int88  
spriteCharacterIndex88 (
;88( )
int99 
.99 
TryParse99 
(99 
property99 %
.99% &
displayName99& 1
.991 2
Split992 7
(997 8
$char998 ;
)99; <
[99< =
$num99= >
]99> ?
,99? @
out99A D 
spriteCharacterIndex99E Y
)99Y Z
;99Z [
	EditorGUI;; 
.;; 

LabelField;; $
(;;$ %
new;;% (
Rect;;) -
(;;- .
rect;;. 2
.;;2 3
x;;3 4
,;;4 5
rect;;6 :
.;;: ;
y;;; <
,;;< =
$num;;> A
,;;A B
$num;;C E
);;E F
,;;F G
new;;H K

GUIContent;;L V
(;;V W
$str;;W o
+;;p q!
spriteCharacterIndex	;;r Ü
+
;;á à
$str
;;â ì
)
;;ì î
,
;;î ï
style
;;ñ õ
)
;;õ ú
;
;;ú ù
EditorGUIUtility==  
.==  !

labelWidth==! +
===, -
$num==. 1
;==1 2
GUI>> 
.>> 
SetNextControlName>> &
(>>& '
$str>>' 6
)>>6 7
;>>7 8
	EditorGUI?? 
.?? 
BeginChangeCheck?? *
(??* +
)??+ ,
;??, -
string@@ 
unicode@@ 
=@@  
	EditorGUI@@! *
.@@* +
DelayedTextField@@+ ;
(@@; <
new@@< ?
Rect@@@ D
(@@D E
rect@@E I
.@@I J
x@@J K
+@@L M
$num@@N Q
,@@Q R
rect@@S W
.@@W X
y@@X Y
,@@Y Z
$num@@[ ^
,@@^ _
$num@@` b
)@@b c
,@@c d
$str@@e o
,@@o p
prop_SpriteUnicode	@@q É
.
@@É Ñ
intValue
@@Ñ å
.
@@å ç
ToString
@@ç ï
(
@@ï ñ
$str
@@ñ ô
)
@@ô ö
)
@@ö õ
;
@@õ ú
ifBB 
(BB 
GUIBB 
.BB #
GetNameOfFocusedControlBB /
(BB/ 0
)BB0 1
==BB2 4
$strBB5 D
)BBD E
{CC 
charEE 
chrEE 
=EE 
EventEE $
.EE$ %
currentEE% ,
.EE, -
	characterEE- 6
;EE6 7
ifFF 
(FF 
(FF 
chrFF 
<FF 
$charFF "
||FF# %
chrFF& )
>FF* +
$charFF, /
)FF/ 0
&&FF1 3
(FF4 5
chrFF5 8
<FF9 :
$charFF; >
||FF? A
chrFFB E
>FFF G
$charFFH K
)FFK L
&&FFM O
(FFP Q
chrFFQ T
<FFU V
$charFFW Z
||FF[ ]
chrFF^ a
>FFb c
$charFFd g
)FFg h
)FFh i
{GG 
EventHH 
.HH 
currentHH %
.HH% &
	characterHH& /
=HH0 1
$charHH2 6
;HH6 7
}II 
}JJ 
ifLL 
(LL 
	EditorGUILL 
.LL 
EndChangeCheckLL ,
(LL, -
)LL- .
)LL. /
{MM 
prop_SpriteUnicodeOO &
.OO& '
intValueOO' /
=OO0 1
TMP_TextUtilitiesOO2 C
.OOC D
StringHexToIntOOD R
(OOR S
unicodeOOS Z
)OOZ [
;OO[ \
spriteAssetPP 
.PP  ,
 m_IsSpriteAssetLookupTablesDirtyPP  @
=PPA B
truePPC G
;PPG H
}QQ 
EditorGUIUtilitySS  
.SS  !

labelWidthSS! +
=SS, -
$numSS. 1
;SS1 2
	EditorGUITT 
.TT 
BeginChangeCheckTT *
(TT* +
)TT+ ,
;TT, -
	EditorGUIUU 
.UU 
DelayedTextFieldUU *
(UU* +
newUU+ .
RectUU/ 3
(UU3 4
rectUU4 8
.UU8 9
xUU9 :
+UU; <
$numUU= A
,UUA B
rectUUC G
.UUG H
yUUH I
,UUI J
rectUUK O
.UUO P
widthUUP U
-UUV W
$numUUX [
,UU[ \
$numUU] _
)UU_ `
,UU` a
prop_SpriteNameUUb q
,UUq r
newUUs v

GUIContent	UUw Å
(
UUÅ Ç
$str
UUÇ â
)
UUâ ä
)
UUä ã
;
UUã å
ifVV 
(VV 
	EditorGUIVV 
.VV 
EndChangeCheckVV ,
(VV, -
)VV- .
)VV. /
{WW #
prop_SpriteNameHashCodeYY +
.YY+ ,
intValueYY, 4
=YY5 6
TMP_TextUtilitiesYY7 H
.YYH I
GetSimpleHashCodeYYI Z
(YYZ [
prop_SpriteNameYY[ j
.YYj k
stringValueYYk v
)YYv w
;YYw x
spriteAssetZZ 
.ZZ  ,
 m_IsSpriteAssetLookupTablesDirtyZZ  @
=ZZA B
trueZZC G
;ZZG H
}[[ 
EditorGUIUtility]]  
.]]  !

labelWidth]]! +
=]], -
$num]]. 1
;]]1 2
	EditorGUI^^ 
.^^ 
BeginChangeCheck^^ *
(^^* +
)^^+ ,
;^^, -
	EditorGUI__ 
.__ 
DelayedIntField__ )
(__) *
new__* -
Rect__. 2
(__2 3
rect__3 7
.__7 8
x__8 9
,__9 :
rect__; ?
.__? @
y__@ A
+__B C
$num__D F
,__F G
$num__H K
,__K L
$num__M O
)__O P
,__P Q!
prop_SpriteGlyphIndex__R g
,__g h
new__i l

GUIContent__m w
(__w x
$str	__x É
)
__É Ñ
)
__Ñ Ö
;
__Ö Ü
if`` 
(`` 
	EditorGUI`` 
.`` 
EndChangeCheck`` ,
(``, -
)``- .
)``. /
{aa 
spriteAssetbb 
.bb  ,
 m_IsSpriteAssetLookupTablesDirtybb  @
=bbA B
truebbC G
;bbG H
}cc 
DrawSpriteGlyphff 
(ff  
positionff  (
,ff( )
propertyff* 2
)ff2 3
;ff3 4
inthh 

glyphIndexhh 
=hh  !
prop_SpriteGlyphIndexhh! 6
.hh6 7
intValuehh7 ?
;hh? @
ifkk 
(kk 
GUIkk 
.kk 
enabledkk 
&&kk  "%
m_GlyphSelectedForEditingkk# <
!=kk= ?

glyphIndexkk@ J
)kkJ K%
m_GlyphSelectedForEditingll -
=ll. /
-ll0 1
$numll1 2
;ll2 3
ifoo 
(oo 
GUIoo 
.oo 
Buttonoo 
(oo 
newoo "
Rectoo# '
(oo' (
rectoo( ,
.oo, -
xoo- .
+oo/ 0
$numoo1 4
,oo4 5
rectoo6 :
.oo: ;
yoo; <
+oo= >
$numoo? A
,ooA B
$numooC E
,ooE F
$numooG I
)ooI J
,ooJ K
newooL O

GUIContentooP Z
(ooZ [
$stroo[ g
)oog h
)ooh i
)ooi j
{pp 
ifqq 
(qq %
m_GlyphSelectedForEditingqq 1
==qq2 4
-qq5 6
$numqq6 7
)qq7 8%
m_GlyphSelectedForEditingrr 1
=rr2 3

glyphIndexrr4 >
;rr> ?
elsess %
m_GlyphSelectedForEditingtt 1
=tt2 3
-tt4 5
$numtt5 6
;tt6 7
GUIww 
.ww 
changedww 
=ww  !
falseww" '
;ww' (
}xx 
if{{ 
({{ 

glyphIndex{{ 
=={{ !%
m_GlyphSelectedForEditing{{" ;
&&{{< >
GUI{{? B
.{{B C
enabled{{C J
){{J K
{|| 
if}} 
(}} 
spriteAsset}} #
!=}}$ &
null}}' +
)}}+ ,
{~~ 
int
ÄÄ 
elementIndex
ÄÄ (
=
ÄÄ) *
spriteAsset
ÄÄ+ 6
.
ÄÄ6 7
spriteGlyphTable
ÄÄ7 G
.
ÄÄG H
	FindIndex
ÄÄH Q
(
ÄÄQ R
item
ÄÄR V
=>
ÄÄW Y
item
ÄÄZ ^
.
ÄÄ^ _
index
ÄÄ_ d
==
ÄÄe g

glyphIndex
ÄÄh r
)
ÄÄr s
;
ÄÄs t
if
ÇÇ 
(
ÇÇ 
elementIndex
ÇÇ (
!=
ÇÇ) +
-
ÇÇ, -
$num
ÇÇ- .
)
ÇÇ. /
{
ÉÉ  
SerializedProperty
ÖÖ .#
prop_SpriteGlyphTable
ÖÖ/ D
=
ÖÖE F
property
ÖÖG O
.
ÖÖO P
serializedObject
ÖÖP `
.
ÖÖ` a
FindProperty
ÖÖa m
(
ÖÖm n
$strÖÖn Ç
)ÖÖÇ É
;ÖÖÉ Ñ 
SerializedProperty
áá .
prop_SpriteGlyph
áá/ ?
=
áá@ A#
prop_SpriteGlyphTable
ááB W
.
ááW X$
GetArrayElementAtIndex
ááX n
(
áán o
elementIndex
ááo {
)
áá{ |
;
áá| } 
SerializedProperty
àà .
prop_GlyphMetrics
àà/ @
=
ààA B
prop_SpriteGlyph
ààC S
.
ààS T"
FindPropertyRelative
ààT h
(
ààh i
$str
àài t
)
ààt u
;
ààu v 
SerializedProperty
ââ .
prop_GlyphRect
ââ/ =
=
ââ> ?
prop_SpriteGlyph
ââ@ P
.
ââP Q"
FindPropertyRelative
ââQ e
(
ââe f
$str
ââf s
)
ââs t
;
âât u
Rect
ãã  
newRect
ãã! (
=
ãã) *
EditorGUILayout
ãã+ :
.
ãã: ;
GetControlRect
ãã; I
(
ããI J
false
ããJ O
,
ããO P
$num
ããQ T
)
ããT U
;
ããU V
	EditorGUI
åå %
.
åå% &
DrawRect
åå& .
(
åå. /
new
åå/ 2
Rect
åå3 7
(
åå7 8
newRect
åå8 ?
.
åå? @
x
åå@ A
+
ååB C
$num
ååD F
,
ååF G
newRect
ååH O
.
ååO P
y
ååP Q
-
ååR S
$num
ååT V
,
ååV W
newRect
ååX _
.
åå_ `
width
åå` e
-
ååf g
$num
ååh j
,
ååj k
newRect
åål s
.
åås t
height
ååt z
-
åå{ |
$num
åå} ~
)
åå~ 
,åå Ä
newååÅ Ñ
ColorååÖ ä
(ååä ã
$numååã è
,ååè ê
$numååë ï
,ååï ñ
$numååó õ
,ååõ ú
$numååù ¢
)åå¢ £
)åå£ §
;åå§ •
	EditorGUI
çç %
.
çç% &
DrawRect
çç& .
(
çç. /
new
çç/ 2
Rect
çç3 7
(
çç7 8
newRect
çç8 ?
.
çç? @
x
çç@ A
+
ççB C
$num
ççD F
,
ççF G
newRect
ççH O
.
ççO P
y
ççP Q
-
ççR S
$num
ççT V
,
ççV W
newRect
ççX _
.
çç_ `
width
çç` e
-
ççf g
$num
ççh j
,
ççj k
newRect
ççl s
.
ççs t
height
ççt z
-
çç{ |
$num
çç} ~
)
çç~ 
,çç Ä
newççÅ Ñ
ColorççÖ ä
(ççä ã
$numççã è
,ççè ê
$numççë ï
,ççï ñ
$numççó õ
,ççõ ú
$numççù °
)çç° ¢
)çç¢ £
;çç£ §
newRect
êê #
.
êê# $
x
êê$ %
+=
êê& (
$num
êê) +
;
êê+ ,
newRect
ëë #
.
ëë# $
y
ëë$ %
-=
ëë& (
$num
ëë) +
;
ëë+ ,
newRect
íí #
.
íí# $
width
íí$ )
+=
íí* ,
$num
íí- .
;
íí. /
	EditorGUI
ìì %
.
ìì% &
PropertyField
ìì& 3
(
ìì3 4
newRect
ìì4 ;
,
ìì; <
prop_GlyphRect
ìì= K
)
ììK L
;
ììL M
newRect
ññ #
.
ññ# $
y
ññ$ %
+=
ññ& (
$num
ññ) +
;
ññ+ ,
	EditorGUI
óó %
.
óó% &
PropertyField
óó& 3
(
óó3 4
newRect
óó4 ;
,
óó; <
prop_GlyphMetrics
óó= N
)
óóN O
;
óóO P
rect
ôô  
.
ôô  !
y
ôô! "
+=
ôô# %
$num
ôô& )
;
ôô) *
}
öö 
}
õõ 
}
úú 
EditorGUIUtility
ûû  
.
ûû  !

labelWidth
ûû! +
=
ûû, -
$num
ûû. 1
;
ûû1 2
	EditorGUI
üü 
.
üü 
PropertyField
üü '
(
üü' (
new
üü( +
Rect
üü, 0
(
üü0 1
rect
üü1 5
.
üü5 6
x
üü6 7
,
üü7 8
rect
üü9 =
.
üü= >
y
üü> ?
+
üü@ A
$num
üüB D
,
üüD E
$num
üüF H
,
üüH I
$num
üüJ L
)
üüL M
,
üüM N
prop_SpriteScale
üüO _
,
üü_ `
new
üüa d

GUIContent
üüe o
(
üüo p
$str
üüp x
)
üüx y
)
üüy z
;
üüz {
}
†† 
}
°° 	
public
§§ 
override
§§ 
float
§§ 
GetPropertyHeight
§§ /
(
§§/ 0 
SerializedProperty
§§0 B
property
§§C K
,
§§K L

GUIContent
§§M W
label
§§X ]
)
§§] ^
{
•• 	
return
¶¶ 
$num
¶¶ 
;
¶¶ 
}
ßß 	
void
™™ 
DrawSpriteGlyph
™™ 
(
™™ 
Rect
™™ !
position
™™" *
,
™™* + 
SerializedProperty
™™, >
property
™™? G
)
™™G H
{
´´ 	
TMP_SpriteAsset
≠≠ 
spriteAsset
≠≠ '
=
≠≠( )
property
≠≠* 2
.
≠≠2 3
serializedObject
≠≠3 C
.
≠≠C D
targetObject
≠≠D P
as
≠≠Q S
TMP_SpriteAsset
≠≠T c
;
≠≠c d
if
ØØ 
(
ØØ 
spriteAsset
ØØ 
==
ØØ 
null
ØØ #
)
ØØ# $
return
∞∞ 
;
∞∞ 
int
≤≤ 

glyphIndex
≤≤ 
=
≤≤ 
property
≤≤ %
.
≤≤% &"
FindPropertyRelative
≤≤& :
(
≤≤: ;
$str
≤≤; I
)
≤≤I J
.
≤≤J K
intValue
≤≤K S
;
≤≤S T
int
µµ 
elementIndex
µµ 
=
µµ 
spriteAsset
µµ *
.
µµ* +
spriteGlyphTable
µµ+ ;
.
µµ; <
	FindIndex
µµ< E
(
µµE F
item
µµF J
=>
µµK M
item
µµN R
.
µµR S
index
µµS X
==
µµY [

glyphIndex
µµ\ f
)
µµf g
;
µµg h
if
∑∑ 
(
∑∑ 
elementIndex
∑∑ 
!=
∑∑ 
-
∑∑  !
$num
∑∑! "
)
∑∑" #
{
∏∏  
SerializedProperty
∫∫ "#
prop_SpriteGlyphTable
∫∫# 8
=
∫∫9 :
property
∫∫; C
.
∫∫C D
serializedObject
∫∫D T
.
∫∫T U
FindProperty
∫∫U a
(
∫∫a b
$str
∫∫b v
)
∫∫v w
;
∫∫w x 
SerializedProperty
ªª "
prop_SpriteGlyph
ªª# 3
=
ªª4 5#
prop_SpriteGlyphTable
ªª6 K
.
ªªK L$
GetArrayElementAtIndex
ªªL b
(
ªªb c
elementIndex
ªªc o
)
ªªo p
;
ªªp q 
SerializedProperty
ºº "
prop_GlyphRect
ºº# 1
=
ºº2 3
prop_SpriteGlyph
ºº4 D
.
ººD E"
FindPropertyRelative
ººE Y
(
ººY Z
$str
ººZ g
)
ººg h
;
ººh i
Texture
øø 
tex
øø 
=
øø 
spriteAsset
øø )
.
øø) *
spriteSheet
øø* 5
;
øø5 6
if
¬¬ 
(
¬¬ 
tex
¬¬ 
==
¬¬ 
null
¬¬ 
)
¬¬  
{
√√ 
Debug
ƒƒ 
.
ƒƒ 

LogWarning
ƒƒ $
(
ƒƒ$ %
$str
ƒƒ% Z
+
ƒƒ[ \
spriteAsset
ƒƒ] h
.
ƒƒh i
name
ƒƒi m
+
ƒƒn o
$strƒƒp Å
,ƒƒÅ Ç
spriteAssetƒƒÉ é
)ƒƒé è
;ƒƒè ê
return
≈≈ 
;
≈≈ 
}
∆∆ 
Vector2
»» 
spriteTexPosition
»» )
=
»»* +
new
»», /
Vector2
»»0 7
(
»»7 8
position
»»8 @
.
»»@ A
x
»»A B
,
»»B C
position
»»D L
.
»»L M
y
»»M N
)
»»N O
;
»»O P
Vector2
…… 

spriteSize
…… "
=
……# $
new
……% (
Vector2
……) 0
(
……0 1
$num
……1 3
,
……3 4
$num
……5 7
)
……7 8
;
……8 9
Vector2
   
alignmentOffset
   '
=
  ( )
new
  * -
Vector2
  . 5
(
  5 6
(
  6 7
$num
  7 9
-
  : ;

spriteSize
  < F
.
  F G
x
  G H
)
  H I
/
  J K
$num
  L M
,
  M N
(
  O P
$num
  P R
-
  S T

spriteSize
  U _
.
  _ `
y
  ` a
)
  a b
/
  c d
$num
  e f
)
  f g
;
  g h
float
ÃÃ 
x
ÃÃ 
=
ÃÃ 
prop_GlyphRect
ÃÃ (
.
ÃÃ( )"
FindPropertyRelative
ÃÃ) =
(
ÃÃ= >
$str
ÃÃ> C
)
ÃÃC D
.
ÃÃD E
intValue
ÃÃE M
;
ÃÃM N
float
ÕÕ 
y
ÕÕ 
=
ÕÕ 
prop_GlyphRect
ÕÕ (
.
ÕÕ( )"
FindPropertyRelative
ÕÕ) =
(
ÕÕ= >
$str
ÕÕ> C
)
ÕÕC D
.
ÕÕD E
intValue
ÕÕE M
;
ÕÕM N
float
ŒŒ 
spriteWidth
ŒŒ !
=
ŒŒ" #
prop_GlyphRect
ŒŒ$ 2
.
ŒŒ2 3"
FindPropertyRelative
ŒŒ3 G
(
ŒŒG H
$str
ŒŒH Q
)
ŒŒQ R
.
ŒŒR S
intValue
ŒŒS [
;
ŒŒ[ \
float
œœ 
spriteHeight
œœ "
=
œœ# $
prop_GlyphRect
œœ% 3
.
œœ3 4"
FindPropertyRelative
œœ4 H
(
œœH I
$str
œœI S
)
œœS T
.
œœT U
intValue
œœU ]
;
œœ] ^
if
—— 
(
—— 
spriteWidth
—— 
>=
——  "
spriteHeight
——# /
)
——/ 0
{
““ 

spriteSize
”” 
.
”” 
y
””  
=
””! "
spriteHeight
””# /
*
””0 1

spriteSize
””2 <
.
””< =
x
””= >
/
””? @
spriteWidth
””A L
;
””L M
spriteTexPosition
‘‘ %
.
‘‘% &
y
‘‘& '
+=
‘‘( *
(
‘‘+ ,

spriteSize
‘‘, 6
.
‘‘6 7
x
‘‘7 8
-
‘‘9 :

spriteSize
‘‘; E
.
‘‘E F
y
‘‘F G
)
‘‘G H
/
‘‘I J
$num
‘‘K L
;
‘‘L M
}
’’ 
else
÷÷ 
{
◊◊ 

spriteSize
ÿÿ 
.
ÿÿ 
x
ÿÿ  
=
ÿÿ! "
spriteWidth
ÿÿ# .
*
ÿÿ/ 0

spriteSize
ÿÿ1 ;
.
ÿÿ; <
y
ÿÿ< =
/
ÿÿ> ?
spriteHeight
ÿÿ@ L
;
ÿÿL M
spriteTexPosition
ŸŸ %
.
ŸŸ% &
x
ŸŸ& '
+=
ŸŸ( *
(
ŸŸ+ ,

spriteSize
ŸŸ, 6
.
ŸŸ6 7
y
ŸŸ7 8
-
ŸŸ9 :

spriteSize
ŸŸ; E
.
ŸŸE F
x
ŸŸF G
)
ŸŸG H
/
ŸŸI J
$num
ŸŸK L
;
ŸŸL M
}
⁄⁄ 
Rect
›› 
	texCoords
›› 
=
››  
new
››! $
Rect
››% )
(
››) *
x
››* +
/
››, -
tex
››. 1
.
››1 2
width
››2 7
,
››7 8
y
››9 :
/
››; <
tex
››= @
.
››@ A
height
››A G
,
››G H
spriteWidth
››I T
/
››U V
tex
››W Z
.
››Z [
width
››[ `
,
››` a
spriteHeight
››b n
/
››o p
tex
››q t
.
››t u
height
››u {
)
››{ |
;
››| }
GUI
ﬁﬁ 
.
ﬁﬁ &
DrawTextureWithTexCoords
ﬁﬁ ,
(
ﬁﬁ, -
new
ﬁﬁ- 0
Rect
ﬁﬁ1 5
(
ﬁﬁ5 6
spriteTexPosition
ﬁﬁ6 G
.
ﬁﬁG H
x
ﬁﬁH I
+
ﬁﬁJ K
alignmentOffset
ﬁﬁL [
.
ﬁﬁ[ \
x
ﬁﬁ\ ]
,
ﬁﬁ] ^
spriteTexPosition
ﬁﬁ_ p
.
ﬁﬁp q
y
ﬁﬁq r
+
ﬁﬁs t
alignmentOffsetﬁﬁu Ñ
.ﬁﬁÑ Ö
yﬁﬁÖ Ü
,ﬁﬁÜ á

spriteSizeﬁﬁà í
.ﬁﬁí ì
xﬁﬁì î
,ﬁﬁî ï

spriteSizeﬁﬁñ †
.ﬁﬁ† °
yﬁﬁ° ¢
)ﬁﬁ¢ £
,ﬁﬁ£ §
texﬁﬁ• ®
,ﬁﬁ® ©
	texCoordsﬁﬁ™ ≥
,ﬁﬁ≥ ¥
trueﬁﬁµ π
)ﬁﬁπ ∫
;ﬁﬁ∫ ª
}
ﬂﬂ 
}
‡‡ 	
}
‚‚ 
}„„ Åt
ûD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_FontAsset_CreationMenu.cs
	namespace 	
TMPro
 
{ 
public 

static 
class &
TMP_FontAsset_CreationMenu 2
{ 
[ 	
MenuItem	 
( 
$str @
,@ A
falseB G
,G H
$numI L
)L M
]M N
public 
static 
void "
CreateFontAssetVariant 1
(1 2
)2 3
{ 	
Object 
target 
= 
	Selection %
.% &
activeObject& 2
;2 3
if 
( 
target 
== 
null 
|| !
target" (
.( )
GetType) 0
(0 1
)1 2
!=3 5
typeof6 <
(< =
TMP_FontAsset= J
)J K
)K L
{ 
Debug 
. 

LogWarning  
(  !
$str! f
)f g
;g h
return 
; 
} 
TMP_FontAsset 
sourceFontAsset )
=* +
(, -
TMP_FontAsset- :
): ;
target; A
;A B
string 
sourceFontFilePath %
=& '
AssetDatabase( 5
.5 6
GetAssetPath6 B
(B C
targetC I
)I J
;J K
string   

folderPath   
=   
Path    $
.  $ %
GetDirectoryName  % 5
(  5 6
sourceFontFilePath  6 H
)  H I
;  I J
string!! 
	assetName!! 
=!! 
Path!! #
.!!# $'
GetFileNameWithoutExtension!!$ ?
(!!? @
sourceFontFilePath!!@ R
)!!R S
;!!S T
string## $
newAssetFilePathWithName## +
=##, -
AssetDatabase##. ;
.##; <#
GenerateUniqueAssetPath##< S
(##S T

folderPath##T ^
+##_ `
$str##a d
+##e f
	assetName##g p
+##q r
$str	##s Ö
)
##Ö Ü
;
##Ü á
TMP_FontAsset&& 
	fontAsset&& #
=&&$ %
ScriptableObject&&& 6
.&&6 7
Instantiate&&7 B
<&&B C
TMP_FontAsset&&C P
>&&P Q
(&&Q R
sourceFontAsset&&R a
)&&a b
;&&b c
AssetDatabase'' 
.'' 
CreateAsset'' %
(''% &
	fontAsset''& /
,''/ 0$
newAssetFilePathWithName''1 I
)''I J
;''J K
	fontAsset)) 
.)) 
atlasPopulationMode)) )
=))* +
AtlasPopulationMode)), ?
.))? @
Static))@ F
;))F G
	fontAsset,, 
.,, 
atlasTextures,, #
=,,$ %
sourceFontAsset,,& 5
.,,5 6
atlasTextures,,6 C
;,,C D
	fontAsset-- 
.-- 
material-- 
=--  
sourceFontAsset--! 0
.--0 1
material--1 9
;--9 :
EditorUtility00 
.00 
SetDirty00 "
(00" #
	fontAsset00# ,
)00, -
;00- .
AssetDatabase22 
.22 

SaveAssets22 $
(22$ %
)22% &
;22& '
}33 	
[
èè 	
MenuItem
èè	 
(
èè 
$str
èè >
,
èè> ?
false
èè@ E
,
èèE F
$num
èèG J
)
èèJ K
]
èèK L
public
êê 
static
êê 
void
êê 
CreateFontAsset
êê *
(
êê* +
)
êê+ ,
{
ëë 	
Object
íí 
target
íí 
=
íí 
	Selection
íí %
.
íí% &
activeObject
íí& 2
;
íí2 3
if
ïï 
(
ïï 
target
ïï 
==
ïï 
null
ïï 
||
ïï !
target
ïï" (
.
ïï( )
GetType
ïï) 0
(
ïï0 1
)
ïï1 2
!=
ïï3 5
typeof
ïï6 <
(
ïï< =
Font
ïï= A
)
ïïA B
)
ïïB C
{
ññ 
Debug
óó 
.
óó 

LogWarning
óó  
(
óó  !
$str
óó! f
)
óóf g
;
óóg h
return
òò 
;
òò 
}
ôô 
Font
õõ 

sourceFont
õõ 
=
õõ 
(
õõ 
Font
õõ #
)
õõ# $
target
õõ$ *
;
õõ* +
string
ùù  
sourceFontFilePath
ùù %
=
ùù& '
AssetDatabase
ùù( 5
.
ùù5 6
GetAssetPath
ùù6 B
(
ùùB C
target
ùùC I
)
ùùI J
;
ùùJ K
string
üü 

folderPath
üü 
=
üü 
Path
üü  $
.
üü$ %
GetDirectoryName
üü% 5
(
üü5 6 
sourceFontFilePath
üü6 H
)
üüH I
;
üüI J
string
†† 
	assetName
†† 
=
†† 
Path
†† #
.
††# $)
GetFileNameWithoutExtension
††$ ?
(
††? @ 
sourceFontFilePath
††@ R
)
††R S
;
††S T
string
¢¢ &
newAssetFilePathWithName
¢¢ +
=
¢¢, -
AssetDatabase
¢¢. ;
.
¢¢; <%
GenerateUniqueAssetPath
¢¢< S
(
¢¢S T

folderPath
¢¢T ^
+
¢¢_ `
$str
¢¢a d
+
¢¢e f
	assetName
¢¢g p
+
¢¢q r
$str
¢¢s 
)¢¢ Ä
;¢¢Ä Å

FontEngine
•• 
.
•• "
InitializeFontEngine
•• +
(
••+ ,
)
••, -
;
••- .
if
®® 
(
®® 

FontEngine
®® 
.
®® 
LoadFontFace
®® '
(
®®' (

sourceFont
®®( 2
,
®®2 3
$num
®®4 6
)
®®6 7
!=
®®8 :
FontEngineError
®®; J
.
®®J K
Success
®®K R
)
®®R S
{
©© 
Debug
™™ 
.
™™ 

LogWarning
™™  
(
™™  !
$str
™™! A
+
™™B C

sourceFont
™™D N
.
™™N O
name
™™O S
+
™™T U
$str™™V ¢
,™™¢ £

sourceFont™™§ Æ
)™™Æ Ø
;™™Ø ∞
return
´´ 
;
´´ 
}
¨¨ 
TMP_FontAsset
ØØ 
	fontAsset
ØØ #
=
ØØ$ %
ScriptableObject
ØØ& 6
.
ØØ6 7
CreateInstance
ØØ7 E
<
ØØE F
TMP_FontAsset
ØØF S
>
ØØS T
(
ØØT U
)
ØØU V
;
ØØV W
AssetDatabase
∞∞ 
.
∞∞ 
CreateAsset
∞∞ %
(
∞∞% &
	fontAsset
∞∞& /
,
∞∞/ 0&
newAssetFilePathWithName
∞∞1 I
)
∞∞I J
;
∞∞J K
	fontAsset
≤≤ 
.
≤≤ 
version
≤≤ 
=
≤≤ 
$str
≤≤  '
;
≤≤' (
	fontAsset
¥¥ 
.
¥¥ 
faceInfo
¥¥ 
=
¥¥  

FontEngine
¥¥! +
.
¥¥+ ,
GetFaceInfo
¥¥, 7
(
¥¥7 8
)
¥¥8 9
;
¥¥9 :
	fontAsset
∑∑ 
.
∑∑ "
m_SourceFontFileGUID
∑∑ *
=
∑∑+ ,
AssetDatabase
∑∑- :
.
∑∑: ;
AssetPathToGUID
∑∑; J
(
∑∑J K 
sourceFontFilePath
∑∑K ]
)
∑∑] ^
;
∑∑^ _
	fontAsset
∏∏ 
.
∏∏ (
m_SourceFontFile_EditorRef
∏∏ 0
=
∏∏1 2

sourceFont
∏∏3 =
;
∏∏= >
	fontAsset
ππ 
.
ππ !
atlasPopulationMode
ππ )
=
ππ* +!
AtlasPopulationMode
ππ, ?
.
ππ? @
Dynamic
ππ@ G
;
ππG H
int
ºº 

atlasWidth
ºº 
=
ºº 
	fontAsset
ºº &
.
ºº& '

atlasWidth
ºº' 1
=
ºº2 3
$num
ºº4 8
;
ºº8 9
int
ΩΩ 
atlasHeight
ΩΩ 
=
ΩΩ 
	fontAsset
ΩΩ '
.
ΩΩ' (
atlasHeight
ΩΩ( 3
=
ΩΩ4 5
$num
ΩΩ6 :
;
ΩΩ: ;
int
ææ 
atlasPadding
ææ 
=
ææ 
	fontAsset
ææ (
.
ææ( )
atlasPadding
ææ) 5
=
ææ6 7
$num
ææ8 9
;
ææ9 :
	fontAsset
øø 
.
øø 
atlasRenderMode
øø %
=
øø& '
GlyphRenderMode
øø( 7
.
øø7 8
SDFAA
øø8 =
;
øø= >
	fontAsset
¬¬ 
.
¬¬ 
atlasTextures
¬¬ #
=
¬¬$ %
new
¬¬& )
	Texture2D
¬¬* 3
[
¬¬3 4
$num
¬¬4 5
]
¬¬5 6
;
¬¬6 7
	Texture2D
≈≈ 
texture
≈≈ 
=
≈≈ 
new
≈≈  #
	Texture2D
≈≈$ -
(
≈≈- .
$num
≈≈. /
,
≈≈/ 0
$num
≈≈1 2
,
≈≈2 3
TextureFormat
≈≈4 A
.
≈≈A B
Alpha8
≈≈B H
,
≈≈H I
false
≈≈J O
)
≈≈O P
;
≈≈P Q
texture
«« 
.
«« 
name
«« 
=
«« 
	assetName
«« $
+
««% &
$str
««' /
;
««/ 0
	fontAsset
»» 
.
»» 
atlasTextures
»» #
[
»»# $
$num
»»$ %
]
»»% &
=
»»' (
texture
»») 0
;
»»0 1
AssetDatabase
…… 
.
…… 
AddObjectToAsset
…… *
(
……* +
texture
……+ 2
,
……2 3
	fontAsset
……4 =
)
……= >
;
……> ?
int
ÃÃ 
packingModifier
ÃÃ 
=
ÃÃ  !
(
ÃÃ" #
(
ÃÃ# $
GlyphRasterModes
ÃÃ$ 4
)
ÃÃ4 5
	fontAsset
ÃÃ5 >
.
ÃÃ> ?
atlasRenderMode
ÃÃ? N
&
ÃÃO P
GlyphRasterModes
ÃÃQ a
.
ÃÃa b 
RASTER_MODE_BITMAP
ÃÃb t
)
ÃÃt u
==
ÃÃv x
GlyphRasterModesÃÃy â
.ÃÃâ ä"
RASTER_MODE_BITMAPÃÃä ú
?ÃÃù û
$numÃÃü †
:ÃÃ° ¢
$numÃÃ£ §
;ÃÃ§ •
	fontAsset
ÕÕ 
.
ÕÕ 
freeGlyphRects
ÕÕ $
=
ÕÕ% &
new
ÕÕ' *
List
ÕÕ+ /
<
ÕÕ/ 0
	GlyphRect
ÕÕ0 9
>
ÕÕ9 :
(
ÕÕ: ;
)
ÕÕ; <
{
ÕÕ= >
new
ÕÕ? B
	GlyphRect
ÕÕC L
(
ÕÕL M
$num
ÕÕM N
,
ÕÕN O
$num
ÕÕP Q
,
ÕÕQ R

atlasWidth
ÕÕS ]
-
ÕÕ^ _
packingModifier
ÕÕ` o
,
ÕÕo p
atlasHeight
ÕÕq |
-
ÕÕ} ~
packingModifierÕÕ é
)ÕÕé è
}ÕÕê ë
;ÕÕë í
	fontAsset
ŒŒ 
.
ŒŒ 
usedGlyphRects
ŒŒ $
=
ŒŒ% &
new
ŒŒ' *
List
ŒŒ+ /
<
ŒŒ/ 0
	GlyphRect
ŒŒ0 9
>
ŒŒ9 :
(
ŒŒ: ;
)
ŒŒ; <
;
ŒŒ< =
Shader
—— 
default_Shader
—— !
=
——" #
Shader
——$ *
.
——* +
Find
——+ /
(
——/ 0
$str
——0 L
)
——L M
;
——M N
Material
““ 
tmp_material
““ !
=
““" #
new
““$ '
Material
““( 0
(
““0 1
default_Shader
““1 ?
)
““? @
;
““@ A
tmp_material
‘‘ 
.
‘‘ 
name
‘‘ 
=
‘‘ 
texture
‘‘  '
.
‘‘' (
name
‘‘( ,
+
‘‘- .
$str
‘‘/ :
;
‘‘: ;
tmp_material
’’ 
.
’’ 

SetTexture
’’ #
(
’’# $
ShaderUtilities
’’$ 3
.
’’3 4

ID_MainTex
’’4 >
,
’’> ?
texture
’’@ G
)
’’G H
;
’’H I
tmp_material
÷÷ 
.
÷÷ 
SetFloat
÷÷ !
(
÷÷! "
ShaderUtilities
÷÷" 1
.
÷÷1 2
ID_TextureWidth
÷÷2 A
,
÷÷A B

atlasWidth
÷÷C M
)
÷÷M N
;
÷÷N O
tmp_material
◊◊ 
.
◊◊ 
SetFloat
◊◊ !
(
◊◊! "
ShaderUtilities
◊◊" 1
.
◊◊1 2
ID_TextureHeight
◊◊2 B
,
◊◊B C
atlasHeight
◊◊D O
)
◊◊O P
;
◊◊P Q
tmp_material
ŸŸ 
.
ŸŸ 
SetFloat
ŸŸ !
(
ŸŸ! "
ShaderUtilities
ŸŸ" 1
.
ŸŸ1 2
ID_GradientScale
ŸŸ2 B
,
ŸŸB C
atlasPadding
ŸŸD P
+
ŸŸQ R
packingModifier
ŸŸS b
)
ŸŸb c
;
ŸŸc d
tmp_material
€€ 
.
€€ 
SetFloat
€€ !
(
€€! "
ShaderUtilities
€€" 1
.
€€1 2
ID_WeightNormal
€€2 A
,
€€A B
	fontAsset
€€C L
.
€€L M
normalStyle
€€M X
)
€€X Y
;
€€Y Z
tmp_material
‹‹ 
.
‹‹ 
SetFloat
‹‹ !
(
‹‹! "
ShaderUtilities
‹‹" 1
.
‹‹1 2
ID_WeightBold
‹‹2 ?
,
‹‹? @
	fontAsset
‹‹A J
.
‹‹J K
	boldStyle
‹‹K T
)
‹‹T U
;
‹‹U V
	fontAsset
ﬁﬁ 
.
ﬁﬁ 
material
ﬁﬁ 
=
ﬁﬁ  
tmp_material
ﬁﬁ! -
;
ﬁﬁ- .
AssetDatabase
‡‡ 
.
‡‡ 
AddObjectToAsset
‡‡ *
(
‡‡* +
tmp_material
‡‡+ 7
,
‡‡7 8
	fontAsset
‡‡9 B
)
‡‡B C
;
‡‡C D
	fontAsset
„„ 
.
„„ 
creationSettings
„„ &
=
„„' (
new
„„) ,'
FontAssetCreationSettings
„„- F
(
„„F G
	fontAsset
„„G P
.
„„P Q"
m_SourceFontFileGUID
„„Q e
,
„„e f
	fontAsset
„„g p
.
„„p q
faceInfo
„„q y
.
„„y z
	pointSize„„z É
,„„É Ñ
$num„„Ö Ü
,„„Ü á
atlasPadding„„à î
,„„î ï
$num„„ñ ó
,„„ó ò
$num„„ô ù
,„„ù û
$num„„ü £
,„„£ §
$num„„• ¶
,„„¶ ß
string„„® Æ
.„„Æ Ø
Empty„„Ø ¥
,„„¥ µ
(„„∂ ∑
int„„∑ ∫
)„„∫ ª
GlyphRenderMode„„ª  
.„„  À
SDFAA„„À –
)„„– —
;„„— “
EditorUtility
ÊÊ 
.
ÊÊ 
SetDirty
ÊÊ "
(
ÊÊ" #
	fontAsset
ÊÊ# ,
)
ÊÊ, -
;
ÊÊ- .
AssetDatabase
ËË 
.
ËË 

SaveAssets
ËË $
(
ËË$ %
)
ËË% &
;
ËË& '
}
ÈÈ 	
}
ÍÍ 
}ÎÎ ‹ê
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_ColorGradientEditor.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
[ 
CustomEditor 
( 
typeof 
( 
TMP_ColorGradient *
)* +
)+ ,
], -
public		 

class		 #
TMP_ColorGradientEditor		 (
:		) *
Editor		+ 1
{

 
SerializedProperty 
m_ColorMode &
;& '
SerializedProperty 
m_TopLeftColor )
;) *
SerializedProperty 
m_TopRightColor *
;* +
SerializedProperty 
m_BottomLeftColor ,
;, -
SerializedProperty 
m_BottomRightColor -
;- .
void 
OnEnable 
( 
) 
{ 	
m_ColorMode 
= 
serializedObject *
.* +
FindProperty+ 7
(7 8
$str8 C
)C D
;D E
m_TopLeftColor 
= 
serializedObject -
.- .
FindProperty. :
(: ;
$str; D
)D E
;E F
m_TopRightColor 
= 
serializedObject .
.. /
FindProperty/ ;
(; <
$str< F
)F G
;G H
m_BottomLeftColor 
= 
serializedObject  0
.0 1
FindProperty1 =
(= >
$str> J
)J K
;K L
m_BottomRightColor 
=  
serializedObject! 1
.1 2
FindProperty2 >
(> ?
$str? L
)L M
;M N
} 	
public 
override 
void 
OnInspectorGUI +
(+ ,
), -
{ 	
serializedObject 
. 
Update #
(# $
)$ %
;% &
	EditorGUI 
. 
BeginChangeCheck &
(& '
)' (
;( )
EditorGUILayout 
. 
PropertyField )
() *
m_ColorMode* 5
,5 6
new7 :

GUIContent; E
(E F
$strF R
)R S
)S T
;T U
if   
(   
	EditorGUI   
.   
EndChangeCheck   (
(  ( )
)  ) *
)  * +
{!! 
switch"" 
("" 
("" 
	ColorMode"" "
)""" #
m_ColorMode""# .
."". /
enumValueIndex""/ =
)""= >
{## 
case$$ 
	ColorMode$$ "
.$$" #
Single$$# )
:$$) *
m_TopRightColor%% '
.%%' (

colorValue%%( 2
=%%3 4
m_TopLeftColor%%5 C
.%%C D

colorValue%%D N
;%%N O
m_BottomLeftColor&& )
.&&) *

colorValue&&* 4
=&&5 6
m_TopLeftColor&&7 E
.&&E F

colorValue&&F P
;&&P Q
m_BottomRightColor'' *
.''* +

colorValue''+ 5
=''6 7
m_TopLeftColor''8 F
.''F G

colorValue''G Q
;''Q R
break(( 
;(( 
case)) 
	ColorMode)) "
.))" #
HorizontalGradient))# 5
:))5 6
m_BottomLeftColor** )
.**) *

colorValue*** 4
=**5 6
m_TopLeftColor**7 E
.**E F

colorValue**F P
;**P Q
m_BottomRightColor++ *
.++* +

colorValue+++ 5
=++6 7
m_TopRightColor++8 G
.++G H

colorValue++H R
;++R S
break,, 
;,, 
case-- 
	ColorMode-- "
.--" #
VerticalGradient--# 3
:--3 4
m_TopRightColor.. '
...' (

colorValue..( 2
=..3 4
m_TopLeftColor..5 C
...C D

colorValue..D N
;..N O
m_BottomRightColor// *
.//* +

colorValue//+ 5
=//6 7
m_BottomLeftColor//8 I
.//I J

colorValue//J T
;//T U
break00 
;00 
}11 
}22 
Rect33 
rect33 
;33 
switch44 
(44 
(44 
	ColorMode44 
)44 
m_ColorMode44 *
.44* +
enumValueIndex44+ 9
)449 :
{55 
case66 
	ColorMode66 
.66 
Single66 %
:66% &
	EditorGUI77 
.77 
BeginChangeCheck77 .
(77. /
)77/ 0
;770 1
rect88 
=88 
EditorGUILayout88 *
.88* +
GetControlRect88+ 9
(889 :
true88: >
,88> ?
EditorGUIUtility88@ P
.88P Q
singleLineHeight88Q a
*88b c
(88d e
EditorGUIUtility88e u
.88u v
wideMode88v ~
?	88 Ä
$num
88Å Ç
:
88É Ñ
$num
88Ö Ü
)
88Ü á
)
88á à
;
88à â
	EditorGUI99 
.99 
PrefixLabel99 )
(99) *
rect99* .
,99. /
new990 3

GUIContent994 >
(99> ?
$str99? G
)99G H
)99H I
;99I J
rect:: 
.:: 
x:: 
+=:: 
EditorGUIUtility:: .
.::. /

labelWidth::/ 9
;::9 :
rect;; 
.;; 
width;; 
=;;  
(;;! "
rect;;" &
.;;& '
width;;' ,
-;;- .
EditorGUIUtility;;/ ?
.;;? @

labelWidth;;@ J
);;J K
/;;L M
(;;N O
EditorGUIUtility;;O _
.;;_ `
wideMode;;` h
?;;i j
$num;;k m
:;;n o
$num;;p r
);;r s
;;;s t
TMP_EditorUtility<< %
.<<% &
DrawColorProperty<<& 7
(<<7 8
rect<<8 <
,<<< =
m_TopLeftColor<<> L
)<<L M
;<<M N
if== 
(== 
	EditorGUI== !
.==! "
EndChangeCheck==" 0
(==0 1
)==1 2
)==2 3
{>> 
m_TopRightColor?? '
.??' (

colorValue??( 2
=??3 4
m_TopLeftColor??5 C
.??C D

colorValue??D N
;??N O
m_BottomLeftColor@@ )
.@@) *

colorValue@@* 4
=@@5 6
m_TopLeftColor@@7 E
.@@E F

colorValue@@F P
;@@P Q
m_BottomRightColorAA *
.AA* +

colorValueAA+ 5
=AA6 7
m_TopLeftColorAA8 F
.AAF G

colorValueAAG Q
;AAQ R
}BB 
breakCC 
;CC 
caseEE 
	ColorModeEE 
.EE 
HorizontalGradientEE 1
:EE1 2
rectFF 
=FF 
EditorGUILayoutFF *
.FF* +
GetControlRectFF+ 9
(FF9 :
trueFF: >
,FF> ?
EditorGUIUtilityFF@ P
.FFP Q
singleLineHeightFFQ a
*FFb c
(FFd e
EditorGUIUtilityFFe u
.FFu v
wideModeFFv ~
?	FF Ä
$num
FFÅ Ç
:
FFÉ Ñ
$num
FFÖ Ü
)
FFÜ á
)
FFá à
;
FFà â
	EditorGUIGG 
.GG 
PrefixLabelGG )
(GG) *
rectGG* .
,GG. /
newGG0 3

GUIContentGG4 >
(GG> ?
$strGG? G
)GGG H
)GGH I
;GGI J
rectHH 
.HH 
xHH 
+=HH 
EditorGUIUtilityHH .
.HH. /

labelWidthHH/ 9
;HH9 :
rectII 
.II 
widthII 
=II  
(II! "
rectII" &
.II& '
widthII' ,
-II- .
EditorGUIUtilityII/ ?
.II? @

labelWidthII@ J
)IIJ K
/IIL M
$numIIN P
;IIP Q
	EditorGUIKK 
.KK 
BeginChangeCheckKK .
(KK. /
)KK/ 0
;KK0 1
TMP_EditorUtilityLL %
.LL% &
DrawColorPropertyLL& 7
(LL7 8
rectLL8 <
,LL< =
m_TopLeftColorLL> L
)LLL M
;LLM N
ifMM 
(MM 
	EditorGUIMM !
.MM! "
EndChangeCheckMM" 0
(MM0 1
)MM1 2
)MM2 3
{NN 
m_BottomLeftColorOO )
.OO) *

colorValueOO* 4
=OO5 6
m_TopLeftColorOO7 E
.OOE F

colorValueOOF P
;OOP Q
}PP 
rectRR 
.RR 
xRR 
+=RR 
rectRR "
.RR" #
widthRR# (
;RR( )
	EditorGUITT 
.TT 
BeginChangeCheckTT .
(TT. /
)TT/ 0
;TT0 1
TMP_EditorUtilityUU %
.UU% &
DrawColorPropertyUU& 7
(UU7 8
rectUU8 <
,UU< =
m_TopRightColorUU> M
)UUM N
;UUN O
ifVV 
(VV 
	EditorGUIVV !
.VV! "
EndChangeCheckVV" 0
(VV0 1
)VV1 2
)VV2 3
{WW 
m_BottomRightColorXX *
.XX* +

colorValueXX+ 5
=XX6 7
m_TopRightColorXX8 G
.XXG H

colorValueXXH R
;XXR S
}YY 
breakZZ 
;ZZ 
case\\ 
	ColorMode\\ 
.\\ 
VerticalGradient\\ /
:\\/ 0
rect]] 
=]] 
EditorGUILayout]] *
.]]* +
GetControlRect]]+ 9
(]]9 :
false]]: ?
,]]? @
EditorGUIUtility]]A Q
.]]Q R
singleLineHeight]]R b
*]]c d
(]]e f
EditorGUIUtility]]f v
.]]v w
wideMode]]w 
?
]]Ä Å
$num
]]Ç É
:
]]Ñ Ö
$num
]]Ü á
)
]]á à
)
]]à â
;
]]â ä
	EditorGUI^^ 
.^^ 
PrefixLabel^^ )
(^^) *
rect^^* .
,^^. /
new^^0 3

GUIContent^^4 >
(^^> ?
$str^^? G
)^^G H
)^^H I
;^^I J
rect__ 
.__ 
x__ 
+=__ 
EditorGUIUtility__ .
.__. /

labelWidth__/ 9
;__9 :
rect`` 
.`` 
width`` 
=``  
(``! "
rect``" &
.``& '
width``' ,
-``- .
EditorGUIUtility``/ ?
.``? @

labelWidth``@ J
)``J K
/``L M
(``N O
EditorGUIUtility``O _
.``_ `
wideMode``` h
?``i j
$num``k m
:``n o
$num``p r
)``r s
;``s t
rectaa 
.aa 
heightaa 
=aa  !
EditorGUIUtilityaa" 2
.aa2 3
singleLineHeightaa3 C
*aaD E
(aaF G
EditorGUIUtilityaaG W
.aaW X
wideModeaaX `
?aaa b
$numaac d
:aae f
$numaag h
)aah i
;aai j
	EditorGUIcc 
.cc 
BeginChangeCheckcc .
(cc. /
)cc/ 0
;cc0 1
TMP_EditorUtilitydd %
.dd% &
DrawColorPropertydd& 7
(dd7 8
rectdd8 <
,dd< =
m_TopLeftColordd> L
)ddL M
;ddM N
ifee 
(ee 
	EditorGUIee !
.ee! "
EndChangeCheckee" 0
(ee0 1
)ee1 2
)ee2 3
{ff 
m_TopRightColorgg '
.gg' (

colorValuegg( 2
=gg3 4
m_TopLeftColorgg5 C
.ggC D

colorValueggD N
;ggN O
}hh 
rectjj 
=jj 
EditorGUILayoutjj *
.jj* +
GetControlRectjj+ 9
(jj9 :
falsejj: ?
,jj? @
EditorGUIUtilityjjA Q
.jjQ R
singleLineHeightjjR b
*jjc d
(jje f
EditorGUIUtilityjjf v
.jjv w
wideModejjw 
?
jjÄ Å
$num
jjÇ É
:
jjÑ Ö
$num
jjÜ á
)
jjá à
)
jjà â
;
jjâ ä
rectkk 
.kk 
xkk 
+=kk 
EditorGUIUtilitykk .
.kk. /

labelWidthkk/ 9
;kk9 :
rectll 
.ll 
widthll 
=ll  
(ll! "
rectll" &
.ll& '
widthll' ,
-ll- .
EditorGUIUtilityll/ ?
.ll? @

labelWidthll@ J
)llJ K
/llL M
(llN O
EditorGUIUtilityllO _
.ll_ `
wideModell` h
?lli j
$numllk m
:lln o
$numllp r
)llr s
;lls t
rectmm 
.mm 
heightmm 
=mm  !
EditorGUIUtilitymm" 2
.mm2 3
singleLineHeightmm3 C
*mmD E
(mmF G
EditorGUIUtilitymmG W
.mmW X
wideModemmX `
?mma b
$nummmc d
:mme f
$nummmg h
)mmh i
;mmi j
	EditorGUIoo 
.oo 
BeginChangeCheckoo .
(oo. /
)oo/ 0
;oo0 1
TMP_EditorUtilitypp %
.pp% &
DrawColorPropertypp& 7
(pp7 8
rectpp8 <
,pp< =
m_BottomLeftColorpp> O
)ppO P
;ppP Q
ifqq 
(qq 
	EditorGUIqq !
.qq! "
EndChangeCheckqq" 0
(qq0 1
)qq1 2
)qq2 3
{rr 
m_BottomRightColorss *
.ss* +

colorValuess+ 5
=ss6 7
m_BottomLeftColorss8 I
.ssI J

colorValuessJ T
;ssT U
}tt 
breakuu 
;uu 
caseww 
	ColorModeww 
.ww 
FourCornersGradientww 2
:ww2 3
rectxx 
=xx 
EditorGUILayoutxx *
.xx* +
GetControlRectxx+ 9
(xx9 :
truexx: >
,xx> ?
EditorGUIUtilityxx@ P
.xxP Q
singleLineHeightxxQ a
*xxb c
(xxd e
EditorGUIUtilityxxe u
.xxu v
wideModexxv ~
?	xx Ä
$num
xxÅ Ç
:
xxÉ Ñ
$num
xxÖ Ü
)
xxÜ á
)
xxá à
;
xxà â
	EditorGUIyy 
.yy 
PrefixLabelyy )
(yy) *
rectyy* .
,yy. /
newyy0 3

GUIContentyy4 >
(yy> ?
$stryy? G
)yyG H
)yyH I
;yyI J
rectzz 
.zz 
xzz 
+=zz 
EditorGUIUtilityzz .
.zz. /

labelWidthzz/ 9
;zz9 :
rect{{ 
.{{ 
width{{ 
={{  
({{! "
rect{{" &
.{{& '
width{{' ,
-{{- .
EditorGUIUtility{{/ ?
.{{? @

labelWidth{{@ J
){{J K
/{{M N
$num{{O Q
;{{Q R
rect|| 
.|| 
height|| 
=||  !
EditorGUIUtility||" 2
.||2 3
singleLineHeight||3 C
*||D E
(||F G
EditorGUIUtility||G W
.||W X
wideMode||X `
?||a b
$num||c d
:||e f
$num||g h
)||h i
;||i j
TMP_EditorUtility~~ %
.~~% &
DrawColorProperty~~& 7
(~~7 8
rect~~8 <
,~~< =
m_TopLeftColor~~> L
)~~L M
;~~M N
rect 
. 
x 
+= 
rect "
." #
width# (
;( )
TMP_EditorUtility
ÄÄ %
.
ÄÄ% &
DrawColorProperty
ÄÄ& 7
(
ÄÄ7 8
rect
ÄÄ8 <
,
ÄÄ< =
m_TopRightColor
ÄÄ> M
)
ÄÄM N
;
ÄÄN O
rect
ÇÇ 
=
ÇÇ 
EditorGUILayout
ÇÇ *
.
ÇÇ* +
GetControlRect
ÇÇ+ 9
(
ÇÇ9 :
false
ÇÇ: ?
,
ÇÇ? @
EditorGUIUtility
ÇÇA Q
.
ÇÇQ R
singleLineHeight
ÇÇR b
*
ÇÇc d
(
ÇÇe f
EditorGUIUtility
ÇÇf v
.
ÇÇv w
wideMode
ÇÇw 
?ÇÇÄ Å
$numÇÇÇ É
:ÇÇÑ Ö
$numÇÇÜ á
)ÇÇá à
)ÇÇà â
;ÇÇâ ä
rect
ÉÉ 
.
ÉÉ 
x
ÉÉ 
+=
ÉÉ 
EditorGUIUtility
ÉÉ .
.
ÉÉ. /

labelWidth
ÉÉ/ 9
;
ÉÉ9 :
rect
ÑÑ 
.
ÑÑ 
width
ÑÑ 
=
ÑÑ  
(
ÑÑ! "
rect
ÑÑ" &
.
ÑÑ& '
width
ÑÑ' ,
-
ÑÑ- .
EditorGUIUtility
ÑÑ/ ?
.
ÑÑ? @

labelWidth
ÑÑ@ J
)
ÑÑJ K
/
ÑÑL M
$num
ÑÑN P
;
ÑÑP Q
rect
ÖÖ 
.
ÖÖ 
height
ÖÖ 
=
ÖÖ  !
EditorGUIUtility
ÖÖ" 2
.
ÖÖ2 3
singleLineHeight
ÖÖ3 C
*
ÖÖD E
(
ÖÖF G
EditorGUIUtility
ÖÖG W
.
ÖÖW X
wideMode
ÖÖX `
?
ÖÖa b
$num
ÖÖc d
:
ÖÖe f
$num
ÖÖg h
)
ÖÖh i
;
ÖÖi j
TMP_EditorUtility
áá %
.
áá% &
DrawColorProperty
áá& 7
(
áá7 8
rect
áá8 <
,
áá< =
m_BottomLeftColor
áá> O
)
ááO P
;
ááP Q
rect
àà 
.
àà 
x
àà 
+=
àà 
rect
àà "
.
àà" #
width
àà# (
;
àà( )
TMP_EditorUtility
ââ %
.
ââ% &
DrawColorProperty
ââ& 7
(
ââ7 8
rect
ââ8 <
,
ââ< = 
m_BottomRightColor
ââ> P
)
ââP Q
;
ââQ R
break
ää 
;
ää 
}
ãã 
if
çç 
(
çç 
serializedObject
çç  
.
çç  !%
ApplyModifiedProperties
çç! 8
(
çç8 9
)
çç9 :
)
çç: ; 
TMPro_EventManager
éé "
.
éé" #0
"ON_COLOR_GRADIENT_PROPERTY_CHANGED
éé# E
(
ééE F
target
ééF L
as
ééM O
TMP_ColorGradient
ééP a
)
ééa b
;
ééb c
}
êê 	
}
ëë 
}íí ë
†D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_SerializedPropertyHolder.cs
	namespace 	
TMPro
 
{ 
class 	(
TMP_SerializedPropertyHolder
 &
:' (
ScriptableObject) 9
{ 
public 
TMP_FontAsset 
	fontAsset &
;& '
public		 
uint		 
firstCharacter		 "
;		" #
public

 
uint

 
secondCharacter

 #
;

# $
public )
TMP_GlyphPairAdjustmentRecord ,%
glyphPairAdjustmentRecord- F
=G H
newI L)
TMP_GlyphPairAdjustmentRecordM j
(j k
newk n&
TMP_GlyphAdjustmentRecord	o à
(
à â
)
â ä
,
ä ã
new
å è'
TMP_GlyphAdjustmentRecord
ê ©
(
© ™
)
™ ´
)
´ ¨
;
¨ ≠
} 
} ¿Ô
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_TextAlignmentDrawer.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
[  
CustomPropertyDrawer 
( 
typeof  
(  ! 
TextAlignmentOptions! 5
)5 6
)6 7
]7 8
public 

class #
TMP_TextAlignmentDrawer (
:) *
PropertyDrawer+ 9
{		 
const

 
int

 "
k_AlignmentButtonWidth

 (
=

) *
$num

+ -
;

- .
const 
int #
k_AlignmentButtonHeight )
=* +
$num, .
;. /
const 
int 
k_WideViewWidth !
=" #
$num$ '
;' (
const 
int 
k_ControlsSpacing #
=$ %
$num& '
;' (
const 
int 
k_GroupWidth 
=  "
k_AlignmentButtonWidth! 7
*8 9
$num: ;
;; <
static 
readonly 
int 
k_TextAlignmentHash /
=0 1
$str2 I
.I J
GetHashCodeJ U
(U V
)V W
;W X
public 
override 
float 
GetPropertyHeight /
(/ 0
SerializedProperty0 B
propertyC K
,K L

GUIContentM W
labelX ]
)] ^
{ 	
return 
EditorGUIUtility #
.# $
currentViewWidth$ 4
>5 6
k_WideViewWidth7 F
?G H#
k_AlignmentButtonHeightI `
:a b#
k_AlignmentButtonHeightc z
*{ |
$num} ~
+	 Ä
$num
Å Ç
;
Ç É
} 	
public 
override 
void 
OnGUI "
(" #
Rect# '
position( 0
,0 1
SerializedProperty2 D
propertyE M
,M N

GUIContentO Y
labelZ _
)_ `
{ 	
var 
id 
= 

GUIUtility 
.  
GetControlID  ,
(, -
k_TextAlignmentHash- @
,@ A
	FocusTypeB K
.K L
KeyboardL T
,T U
positionV ^
)^ _
;_ `
	EditorGUI 
. 
BeginProperty #
(# $
position$ ,
,, -
label. 3
,3 4
property5 =
)= >
;> ?
{ 
var 
controlArea 
=  !
	EditorGUI" +
.+ ,
PrefixLabel, 7
(7 8
position8 @
,@ A
idB D
,D E
labelF K
)K L
;L M
var 
horizontalAligment &
=' (
new) ,
Rect- 1
(1 2
controlArea2 =
.= >
x> ?
,? @
controlAreaA L
.L M
yM N
,N O
k_GroupWidthP \
,\ ]#
k_AlignmentButtonHeight^ u
)u v
;v w
var 
verticalAligment $
=% &
new' *
Rect+ /
(/ 0
!0 1
(1 2
EditorGUIUtility2 B
.B C
currentViewWidthC S
>T U
k_WideViewWidthV e
)e f
?g h
controlAreai t
.t u
xu v
:w x
horizontalAligment	y ã
.
ã å
xMax
å ê
+
ë í
k_ControlsSpacing
ì §
,
§ •
!
¶ ß
(
ß ®
EditorGUIUtility
® ∏
.
∏ π
currentViewWidth
π …
>
  À
k_WideViewWidth
Ã €
)
€ ‹
?
› ﬁ
controlArea
ﬂ Í
.
Í Î
y
Î Ï
+
Ì Ó%
k_AlignmentButtonHeight
Ô Ü
+
á à
$num
â ä
:
ã å
controlArea
ç ò
.
ò ô
y
ô ö
,
ö õ
k_GroupWidth
ú ®
,
® ©%
k_AlignmentButtonHeight
™ ¡
)
¡ ¬
;
¬ √
	EditorGUI!! 
.!! 
BeginChangeCheck!! *
(!!* +
)!!+ ,
;!!, -
var## 
selectedHorizontal## &
=##' ('
DoHorizontalAligmentControl##) D
(##D E
horizontalAligment##E W
,##W X
property##Y a
)##a b
;##b c
var$$ 
selectedVertical$$ $
=$$% &%
DoVerticalAligmentControl$$' @
($$@ A
verticalAligment$$A Q
,$$Q R
property$$S [
)$$[ \
;$$\ ]
if&& 
(&& 
	EditorGUI&& 
.&& 
EndChangeCheck&& ,
(&&, -
)&&- .
)&&. /
{'' 
var(( 
value(( 
=(( 
(((  !
$num((! $
<<((% '
selectedHorizontal((( :
)((: ;
|((< =
(((> ?
$num((? D
<<((E G
selectedVertical((H X
)((X Y
;((Y Z
property)) 
.)) 
intValue)) %
=))& '
value))( -
;))- .
}** 
}++ 
	EditorGUI,, 
.,, 
EndProperty,, !
(,,! "
),," #
;,,# $
}-- 	
static// 
int// '
DoHorizontalAligmentControl// .
(//. /
Rect/// 3
position//4 <
,//< =
SerializedProperty//> P
	alignment//Q Z
)//Z [
{00 	
var11 
selected11 
=11 
TMP_EditorUtility11 ,
.11, -+
GetHorizontalAlignmentGridValue11- L
(11L M
	alignment11M V
.11V W
intValue11W _
)11_ `
;11` a
var33 
values33 
=33 
new33 
bool33 !
[33! "
$num33" #
]33# $
;33$ %
values55 
[55 
selected55 
]55 
=55 
true55 #
;55# $
if77 
(77 
	alignment77 
.77 &
hasMultipleDifferentValues77 4
)774 5
{88 
foreach99 
(99 
var99 
obj99  
in99! #
	alignment99$ -
.99- .
serializedObject99. >
.99> ?
targetObjects99? L
)99L M
{:: 
var;; 
text;; 
=;; 
obj;; "
as;;# %
TMP_Text;;& .
;;;. /
if<< 
(<< 
text<< 
!=<< 
null<<  $
)<<$ %
{== 
values>> 
[>> 
TMP_EditorUtility>> 0
.>>0 1+
GetHorizontalAlignmentGridValue>>1 P
(>>P Q
(>>Q R
int>>R U
)>>U V
text>>V Z
.>>Z [
	alignment>>[ d
)>>d e
]>>e f
=>>g h
true>>i m
;>>m n
}?? 
}@@ 
}AA 
positionCC 
.CC 
widthCC 
=CC "
k_AlignmentButtonWidthCC 3
;CC3 4
forEE 
(EE 
varEE 
iEE 
=EE 
$numEE 
;EE 
iEE 
<EE 
valuesEE  &
.EE& '
LengthEE' -
;EE- .
iEE/ 0
++EE0 2
)EE2 3
{FF 
varGG 
oldValueGG 
=GG 
valuesGG %
[GG% &
iGG& '
]GG' (
;GG( )
varHH 
newValueHH 
=HH 
TMP_EditorUtilityHH 0
.HH0 1
EditorToggleHH1 =
(HH= >
positionHH> F
,HHF G
oldValueHHH P
,HHP Q
TMP_UIStyleManagerHHR d
.HHd e
alignContentAHHe r
[HHr s
iHHs t
]HHt u
,HHu v
iHHw x
==HHy {
$numHH| }
?HH~  
TMP_UIStyleManager
HHÄ í
.
HHí ì!
alignmentButtonLeft
HHì ¶
:
HHß ®
(
HH© ™
i
HH™ ´
==
HH¨ Æ
$num
HHØ ∞
?
HH± ≤ 
TMP_UIStyleManager
HH≥ ≈
.
HH≈ ∆"
alignmentButtonRight
HH∆ ⁄
:
HH€ ‹ 
TMP_UIStyleManager
HH› Ô
.
HHÔ  
alignmentButtonMid
HH Ç
)
HHÇ É
)
HHÉ Ñ
;
HHÑ Ö
ifII 
(II 
newValueII 
!=II 
oldValueII  (
)II( )
{JJ 
selectedKK 
=KK 
iKK  
;KK  !
}LL 
positionMM 
.MM 
xMM 
+=MM 
positionMM &
.MM& '
widthMM' ,
;MM, -
}NN 
returnPP 
selectedPP 
;PP 
}QQ 	
staticSS 
intSS %
DoVerticalAligmentControlSS ,
(SS, -
RectSS- 1
positionSS2 :
,SS: ;
SerializedPropertySS< N
	alignmentSSO X
)SSX Y
{TT 	
varUU 
selectedUU 
=UU 
TMP_EditorUtilityUU ,
.UU, -)
GetVerticalAlignmentGridValueUU- J
(UUJ K
	alignmentUUK T
.UUT U
intValueUUU ]
)UU] ^
;UU^ _
varWW 
valuesWW 
=WW 
newWW 
boolWW !
[WW! "
$numWW" #
]WW# $
;WW$ %
valuesYY 
[YY 
selectedYY 
]YY 
=YY 
trueYY #
;YY# $
if[[ 
([[ 
	alignment[[ 
.[[ &
hasMultipleDifferentValues[[ 4
)[[4 5
{\\ 
foreach]] 
(]] 
var]] 
obj]]  
in]]! #
	alignment]]$ -
.]]- .
serializedObject]]. >
.]]> ?
targetObjects]]? L
)]]L M
{^^ 
var__ 
text__ 
=__ 
obj__ "
as__# %
TMP_Text__& .
;__. /
if`` 
(`` 
text`` 
!=`` 
null``  $
)``$ %
{aa 
valuesbb 
[bb 
TMP_EditorUtilitybb 0
.bb0 1)
GetVerticalAlignmentGridValuebb1 N
(bbN O
(bbO P
intbbP S
)bbS T
textbbT X
.bbX Y
	alignmentbbY b
)bbb c
]bbc d
=bbe f
truebbg k
;bbk l
}cc 
}dd 
}ee 
positiongg 
.gg 
widthgg 
=gg "
k_AlignmentButtonWidthgg 3
;gg3 4
forii 
(ii 
varii 
iii 
=ii 
$numii 
;ii 
iii 
<ii 
valuesii  &
.ii& '
Lengthii' -
;ii- .
iii/ 0
++ii0 2
)ii2 3
{jj 
varkk 
oldValuekk 
=kk 
valueskk %
[kk% &
ikk& '
]kk' (
;kk( )
varll 
newValuell 
=ll 
TMP_EditorUtilityll 0
.ll0 1
EditorTogglell1 =
(ll= >
positionll> F
,llF G
oldValuellH P
,llP Q
TMP_UIStyleManagerllR d
.lld e
alignContentBlle r
[llr s
ills t
]llt u
,llu v
illw x
==lly {
$numll| }
?ll~  
TMP_UIStyleManager
llÄ í
.
llí ì!
alignmentButtonLeft
llì ¶
:
llß ®
(
ll© ™
i
ll™ ´
==
ll¨ Æ
$num
llØ ∞
?
ll± ≤ 
TMP_UIStyleManager
ll≥ ≈
.
ll≈ ∆"
alignmentButtonRight
ll∆ ⁄
:
ll€ ‹ 
TMP_UIStyleManager
ll› Ô
.
llÔ  
alignmentButtonMid
ll Ç
)
llÇ É
)
llÉ Ñ
;
llÑ Ö
ifmm 
(mm 
newValuemm 
!=mm 
oldValuemm  (
)mm( )
{nn 
selectedoo 
=oo 
ioo  
;oo  !
}pp 
positionqq 
.qq 
xqq 
+=qq 
positionqq &
.qq& '
widthqq' ,
;qq, -
}rr 
returntt 
selectedtt 
;tt 
}uu 	
}vv 
[xx  
CustomPropertyDrawerxx 
(xx 
typeofxx  
(xx  !&
HorizontalAlignmentOptionsxx! ;
)xx; <
)xx< =
]xx= >
publicyy 

classyy )
TMP_HorizontalAlignmentDraweryy .
:yy/ 0
PropertyDraweryy1 ?
{zz 
const{{ 
int{{ "
k_AlignmentButtonWidth{{ (
={{) *
$num{{+ -
;{{- .
const|| 
int|| #
k_AlignmentButtonHeight|| )
=||* +
$num||, .
;||. /
const}} 
int}} 
k_WideViewWidth}} !
=}}" #
$num}}$ '
;}}' (
const~~ 
int~~ 
k_ControlsSpacing~~ #
=~~$ %
$num~~& '
;~~' (
const 
int 
k_GroupWidth 
=  "
k_AlignmentButtonWidth! 7
*8 9
$num: ;
;; <
static
ÄÄ 
readonly
ÄÄ 
int
ÄÄ !
k_TextAlignmentHash
ÄÄ /
=
ÄÄ0 1
$str
ÄÄ2 I
.
ÄÄI J
GetHashCode
ÄÄJ U
(
ÄÄU V
)
ÄÄV W
;
ÄÄW X
public
ÇÇ 
override
ÇÇ 
float
ÇÇ 
GetPropertyHeight
ÇÇ /
(
ÇÇ/ 0 
SerializedProperty
ÇÇ0 B
property
ÇÇC K
,
ÇÇK L

GUIContent
ÇÇM W
label
ÇÇX ]
)
ÇÇ] ^
{
ÉÉ 	
return
ÑÑ 
EditorGUIUtility
ÑÑ #
.
ÑÑ# $
currentViewWidth
ÑÑ$ 4
>
ÑÑ5 6
k_WideViewWidth
ÑÑ7 F
?
ÑÑG H%
k_AlignmentButtonHeight
ÑÑI `
:
ÑÑa b%
k_AlignmentButtonHeight
ÑÑc z
*
ÑÑ{ |
$num
ÑÑ} ~
+ÑÑ Ä
$numÑÑÅ Ç
;ÑÑÇ É
}
ÖÖ 	
public
áá 
override
áá 
void
áá 
OnGUI
áá "
(
áá" #
Rect
áá# '
position
áá( 0
,
áá0 1 
SerializedProperty
áá2 D
property
ááE M
,
ááM N

GUIContent
ááO Y
label
ááZ _
)
áá_ `
{
àà 	
var
ââ 
id
ââ 
=
ââ 

GUIUtility
ââ 
.
ââ  
GetControlID
ââ  ,
(
ââ, -!
k_TextAlignmentHash
ââ- @
,
ââ@ A
	FocusType
ââB K
.
ââK L
Keyboard
ââL T
,
ââT U
position
ââV ^
)
ââ^ _
;
ââ_ `
	EditorGUI
ãã 
.
ãã 
BeginProperty
ãã #
(
ãã# $
position
ãã$ ,
,
ãã, -
label
ãã. 3
,
ãã3 4
property
ãã5 =
)
ãã= >
;
ãã> ?
{
åå 
var
çç 
controlArea
çç 
=
çç  !
	EditorGUI
çç" +
.
çç+ ,
PrefixLabel
çç, 7
(
çç7 8
position
çç8 @
,
çç@ A
id
ççB D
,
ççD E
label
ççF K
)
ççK L
;
ççL M
var
èè  
horizontalAligment
èè &
=
èè' (
new
èè) ,
Rect
èè- 1
(
èè1 2
controlArea
èè2 =
.
èè= >
x
èè> ?
,
èè? @
controlArea
èèA L
.
èèL M
y
èèM N
,
èèN O
k_GroupWidth
èèP \
,
èè\ ]%
k_AlignmentButtonHeight
èè^ u
)
èèu v
;
èèv w
	EditorGUI
íí 
.
íí 
BeginChangeCheck
íí *
(
íí* +
)
íí+ ,
;
íí, -
var
îî  
selectedHorizontal
îî &
=
îî' ()
DoHorizontalAligmentControl
îî) D
(
îîD E 
horizontalAligment
îîE W
,
îîW X
property
îîY a
)
îîa b
;
îîb c
if
ññ 
(
ññ 
	EditorGUI
ññ 
.
ññ 
EndChangeCheck
ññ ,
(
ññ, -
)
ññ- .
)
ññ. /
{
óó 
var
òò 
value
òò 
=
òò 
$num
òò  #
<<
òò$ & 
selectedHorizontal
òò' 9
;
òò9 :
property
ôô 
.
ôô 
intValue
ôô %
=
ôô& '
value
ôô( -
;
ôô- .
}
öö 
}
õõ 
	EditorGUI
úú 
.
úú 
EndProperty
úú !
(
úú! "
)
úú" #
;
úú# $
}
ùù 	
static
üü 
int
üü )
DoHorizontalAligmentControl
üü .
(
üü. /
Rect
üü/ 3
position
üü4 <
,
üü< = 
SerializedProperty
üü> P
	alignment
üüQ Z
)
üüZ [
{
†† 	
var
°° 
selected
°° 
=
°° 
TMP_EditorUtility
°° ,
.
°°, --
GetHorizontalAlignmentGridValue
°°- L
(
°°L M
	alignment
°°M V
.
°°V W
intValue
°°W _
)
°°_ `
;
°°` a
var
££ 
values
££ 
=
££ 
new
££ 
bool
££ !
[
££! "
$num
££" #
]
££# $
;
££$ %
values
•• 
[
•• 
selected
•• 
]
•• 
=
•• 
true
•• #
;
••# $
if
ßß 
(
ßß 
	alignment
ßß 
.
ßß (
hasMultipleDifferentValues
ßß 4
)
ßß4 5
{
®® 
foreach
©© 
(
©© 
var
©© 
obj
©©  
in
©©! #
	alignment
©©$ -
.
©©- .
serializedObject
©©. >
.
©©> ?
targetObjects
©©? L
)
©©L M
{
™™ 
var
´´ 
text
´´ 
=
´´ 
obj
´´ "
as
´´# %
TMP_Text
´´& .
;
´´. /
if
¨¨ 
(
¨¨ 
text
¨¨ 
!=
¨¨ 
null
¨¨  $
)
¨¨$ %
{
≠≠ 
values
ÆÆ 
[
ÆÆ 
TMP_EditorUtility
ÆÆ 0
.
ÆÆ0 1-
GetHorizontalAlignmentGridValue
ÆÆ1 P
(
ÆÆP Q
(
ÆÆQ R
int
ÆÆR U
)
ÆÆU V
text
ÆÆV Z
.
ÆÆZ [!
horizontalAlignment
ÆÆ[ n
)
ÆÆn o
]
ÆÆo p
=
ÆÆq r
true
ÆÆs w
;
ÆÆw x
}
ØØ 
}
∞∞ 
}
±± 
position
≥≥ 
.
≥≥ 
width
≥≥ 
=
≥≥ $
k_AlignmentButtonWidth
≥≥ 3
;
≥≥3 4
for
µµ 
(
µµ 
var
µµ 
i
µµ 
=
µµ 
$num
µµ 
;
µµ 
i
µµ 
<
µµ 
values
µµ  &
.
µµ& '
Length
µµ' -
;
µµ- .
i
µµ/ 0
++
µµ0 2
)
µµ2 3
{
∂∂ 
var
∑∑ 
oldValue
∑∑ 
=
∑∑ 
values
∑∑ %
[
∑∑% &
i
∑∑& '
]
∑∑' (
;
∑∑( )
var
∏∏ 
newValue
∏∏ 
=
∏∏ 
TMP_EditorUtility
∏∏ 0
.
∏∏0 1
EditorToggle
∏∏1 =
(
∏∏= >
position
∏∏> F
,
∏∏F G
oldValue
∏∏H P
,
∏∏P Q 
TMP_UIStyleManager
∏∏R d
.
∏∏d e
alignContentA
∏∏e r
[
∏∏r s
i
∏∏s t
]
∏∏t u
,
∏∏u v
i
∏∏w x
==
∏∏y {
$num
∏∏| }
?
∏∏~ "
TMP_UIStyleManager∏∏Ä í
.∏∏í ì#
alignmentButtonLeft∏∏ì ¶
:∏∏ß ®
(∏∏© ™
i∏∏™ ´
==∏∏¨ Æ
$num∏∏Ø ∞
?∏∏± ≤"
TMP_UIStyleManager∏∏≥ ≈
.∏∏≈ ∆$
alignmentButtonRight∏∏∆ ⁄
:∏∏€ ‹"
TMP_UIStyleManager∏∏› Ô
.∏∏Ô "
alignmentButtonMid∏∏ Ç
)∏∏Ç É
)∏∏É Ñ
;∏∏Ñ Ö
if
ππ 
(
ππ 
newValue
ππ 
!=
ππ 
oldValue
ππ  (
)
ππ( )
{
∫∫ 
selected
ªª 
=
ªª 
i
ªª  
;
ªª  !
}
ºº 
position
ΩΩ 
.
ΩΩ 
x
ΩΩ 
+=
ΩΩ 
position
ΩΩ &
.
ΩΩ& '
width
ΩΩ' ,
;
ΩΩ, -
}
ææ 
return
¿¿ 
selected
¿¿ 
;
¿¿ 
}
¡¡ 	
}
¬¬ 
[
≈≈ "
CustomPropertyDrawer
≈≈ 
(
≈≈ 
typeof
≈≈  
(
≈≈  !&
VerticalAlignmentOptions
≈≈! 9
)
≈≈9 :
)
≈≈: ;
]
≈≈; <
public
∆∆ 

class
∆∆ )
TMP_VerticalAlignmentDrawer
∆∆ ,
:
∆∆- .
PropertyDrawer
∆∆/ =
{
«« 
const
»» 
int
»» $
k_AlignmentButtonWidth
»» (
=
»») *
$num
»»+ -
;
»»- .
const
…… 
int
…… %
k_AlignmentButtonHeight
…… )
=
……* +
$num
……, .
;
……. /
const
   
int
   
k_WideViewWidth
   !
=
  " #
$num
  $ '
;
  ' (
const
ÀÀ 
int
ÀÀ 
k_ControlsSpacing
ÀÀ #
=
ÀÀ$ %
$num
ÀÀ& '
;
ÀÀ' (
const
ÃÃ 
int
ÃÃ 
k_GroupWidth
ÃÃ 
=
ÃÃ  $
k_AlignmentButtonWidth
ÃÃ! 7
*
ÃÃ8 9
$num
ÃÃ: ;
;
ÃÃ; <
static
ÕÕ 
readonly
ÕÕ 
int
ÕÕ !
k_TextAlignmentHash
ÕÕ /
=
ÕÕ0 1
$str
ÕÕ2 I
.
ÕÕI J
GetHashCode
ÕÕJ U
(
ÕÕU V
)
ÕÕV W
;
ÕÕW X
public
œœ 
override
œœ 
float
œœ 
GetPropertyHeight
œœ /
(
œœ/ 0 
SerializedProperty
œœ0 B
property
œœC K
,
œœK L

GUIContent
œœM W
label
œœX ]
)
œœ] ^
{
–– 	
return
—— 
EditorGUIUtility
—— #
.
——# $
currentViewWidth
——$ 4
>
——5 6
k_WideViewWidth
——7 F
?
——G H%
k_AlignmentButtonHeight
——I `
:
——a b%
k_AlignmentButtonHeight
——c z
*
——{ |
$num
——} ~
+—— Ä
$num——Å Ç
;——Ç É
}
““ 	
public
‘‘ 
override
‘‘ 
void
‘‘ 
OnGUI
‘‘ "
(
‘‘" #
Rect
‘‘# '
position
‘‘( 0
,
‘‘0 1 
SerializedProperty
‘‘2 D
property
‘‘E M
,
‘‘M N

GUIContent
‘‘O Y
label
‘‘Z _
)
‘‘_ `
{
’’ 	
var
÷÷ 
id
÷÷ 
=
÷÷ 

GUIUtility
÷÷ 
.
÷÷  
GetControlID
÷÷  ,
(
÷÷, -!
k_TextAlignmentHash
÷÷- @
,
÷÷@ A
	FocusType
÷÷B K
.
÷÷K L
Keyboard
÷÷L T
,
÷÷T U
position
÷÷V ^
)
÷÷^ _
;
÷÷_ `
	EditorGUI
ÿÿ 
.
ÿÿ 
BeginProperty
ÿÿ #
(
ÿÿ# $
position
ÿÿ$ ,
,
ÿÿ, -
label
ÿÿ. 3
,
ÿÿ3 4
property
ÿÿ5 =
)
ÿÿ= >
;
ÿÿ> ?
{
ŸŸ 
var
⁄⁄ 
controlArea
⁄⁄ 
=
⁄⁄  !
	EditorGUI
⁄⁄" +
.
⁄⁄+ ,
PrefixLabel
⁄⁄, 7
(
⁄⁄7 8
position
⁄⁄8 @
,
⁄⁄@ A
id
⁄⁄B D
,
⁄⁄D E
label
⁄⁄F K
)
⁄⁄K L
;
⁄⁄L M
var
‹‹  
horizontalAligment
‹‹ &
=
‹‹' (
new
‹‹) ,
Rect
‹‹- 1
(
‹‹1 2
controlArea
‹‹2 =
.
‹‹= >
x
‹‹> ?
,
‹‹? @
controlArea
‹‹A L
.
‹‹L M
y
‹‹M N
,
‹‹N O
k_GroupWidth
‹‹P \
,
‹‹\ ]%
k_AlignmentButtonHeight
‹‹^ u
)
‹‹u v
;
‹‹v w
var
›› 
verticalAligment
›› $
=
››% &
new
››' *
Rect
››+ /
(
››/ 0
!
››0 1
(
››1 2
EditorGUIUtility
››2 B
.
››B C
currentViewWidth
››C S
>
››T U
k_WideViewWidth
››V e
)
››e f
?
››g h
controlArea
››i t
.
››t u
x
››u v
:
››w x!
horizontalAligment››y ã
.››ã å
xMax››å ê
+››ë í!
k_ControlsSpacing››ì §
,››§ •
!››¶ ß
(››ß ® 
EditorGUIUtility››® ∏
.››∏ π 
currentViewWidth››π …
>››  À
k_WideViewWidth››Ã €
)››€ ‹
?››› ﬁ
controlArea››ﬂ Í
.››Í Î
y››Î Ï
+››Ì Ó'
k_AlignmentButtonHeight››Ô Ü
+››á à
$num››â ä
:››ã å
controlArea››ç ò
.››ò ô
y››ô ö
,››ö õ
k_GroupWidth››ú ®
,››® ©'
k_AlignmentButtonHeight››™ ¡
)››¡ ¬
;››¬ √
	EditorGUI
ﬂﬂ 
.
ﬂﬂ 
BeginChangeCheck
ﬂﬂ *
(
ﬂﬂ* +
)
ﬂﬂ+ ,
;
ﬂﬂ, -
var
‚‚ 
selectedVertical
‚‚ $
=
‚‚% &'
DoVerticalAligmentControl
‚‚' @
(
‚‚@ A
verticalAligment
‚‚A Q
,
‚‚Q R
property
‚‚S [
)
‚‚[ \
;
‚‚\ ]
if
‰‰ 
(
‰‰ 
	EditorGUI
‰‰ 
.
‰‰ 
EndChangeCheck
‰‰ ,
(
‰‰, -
)
‰‰- .
)
‰‰. /
{
ÂÂ 
var
ÊÊ 
value
ÊÊ 
=
ÊÊ 
$num
ÊÊ  %
<<
ÊÊ& (
selectedVertical
ÊÊ) 9
;
ÊÊ9 :
property
ÁÁ 
.
ÁÁ 
intValue
ÁÁ %
=
ÁÁ& '
value
ÁÁ( -
;
ÁÁ- .
}
ËË 
}
ÈÈ 
	EditorGUI
ÍÍ 
.
ÍÍ 
EndProperty
ÍÍ !
(
ÍÍ! "
)
ÍÍ" #
;
ÍÍ# $
}
ÎÎ 	
static
ÌÌ 
int
ÌÌ '
DoVerticalAligmentControl
ÌÌ ,
(
ÌÌ, -
Rect
ÌÌ- 1
position
ÌÌ2 :
,
ÌÌ: ; 
SerializedProperty
ÌÌ< N
	alignment
ÌÌO X
)
ÌÌX Y
{
ÓÓ 	
var
ÔÔ 
selected
ÔÔ 
=
ÔÔ 
TMP_EditorUtility
ÔÔ ,
.
ÔÔ, -+
GetVerticalAlignmentGridValue
ÔÔ- J
(
ÔÔJ K
	alignment
ÔÔK T
.
ÔÔT U
intValue
ÔÔU ]
)
ÔÔ] ^
;
ÔÔ^ _
var
ÒÒ 
values
ÒÒ 
=
ÒÒ 
new
ÒÒ 
bool
ÒÒ !
[
ÒÒ! "
$num
ÒÒ" #
]
ÒÒ# $
;
ÒÒ$ %
values
ÛÛ 
[
ÛÛ 
selected
ÛÛ 
]
ÛÛ 
=
ÛÛ 
true
ÛÛ #
;
ÛÛ# $
if
ıı 
(
ıı 
	alignment
ıı 
.
ıı (
hasMultipleDifferentValues
ıı 4
)
ıı4 5
{
ˆˆ 
foreach
˜˜ 
(
˜˜ 
var
˜˜ 
obj
˜˜  
in
˜˜! #
	alignment
˜˜$ -
.
˜˜- .
serializedObject
˜˜. >
.
˜˜> ?
targetObjects
˜˜? L
)
˜˜L M
{
¯¯ 
var
˘˘ 
text
˘˘ 
=
˘˘ 
obj
˘˘ "
as
˘˘# %
TMP_Text
˘˘& .
;
˘˘. /
if
˙˙ 
(
˙˙ 
text
˙˙ 
!=
˙˙ 
null
˙˙  $
)
˙˙$ %
{
˚˚ 
values
¸¸ 
[
¸¸ 
TMP_EditorUtility
¸¸ 0
.
¸¸0 1+
GetVerticalAlignmentGridValue
¸¸1 N
(
¸¸N O
(
¸¸O P
int
¸¸P S
)
¸¸S T
text
¸¸T X
.
¸¸X Y
verticalAlignment
¸¸Y j
)
¸¸j k
]
¸¸k l
=
¸¸m n
true
¸¸o s
;
¸¸s t
}
˝˝ 
}
˛˛ 
}
ˇˇ 
position
ÅÅ 
.
ÅÅ 
width
ÅÅ 
=
ÅÅ $
k_AlignmentButtonWidth
ÅÅ 3
;
ÅÅ3 4
for
ÉÉ 
(
ÉÉ 
var
ÉÉ 
i
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
i
ÉÉ 
<
ÉÉ 
values
ÉÉ  &
.
ÉÉ& '
Length
ÉÉ' -
;
ÉÉ- .
i
ÉÉ/ 0
++
ÉÉ0 2
)
ÉÉ2 3
{
ÑÑ 
var
ÖÖ 
oldValue
ÖÖ 
=
ÖÖ 
values
ÖÖ %
[
ÖÖ% &
i
ÖÖ& '
]
ÖÖ' (
;
ÖÖ( )
var
ÜÜ 
newValue
ÜÜ 
=
ÜÜ 
TMP_EditorUtility
ÜÜ 0
.
ÜÜ0 1
EditorToggle
ÜÜ1 =
(
ÜÜ= >
position
ÜÜ> F
,
ÜÜF G
oldValue
ÜÜH P
,
ÜÜP Q 
TMP_UIStyleManager
ÜÜR d
.
ÜÜd e
alignContentB
ÜÜe r
[
ÜÜr s
i
ÜÜs t
]
ÜÜt u
,
ÜÜu v
i
ÜÜw x
==
ÜÜy {
$num
ÜÜ| }
?
ÜÜ~ "
TMP_UIStyleManagerÜÜÄ í
.ÜÜí ì#
alignmentButtonLeftÜÜì ¶
:ÜÜß ®
(ÜÜ© ™
iÜÜ™ ´
==ÜÜ¨ Æ
$numÜÜØ ∞
?ÜÜ± ≤"
TMP_UIStyleManagerÜÜ≥ ≈
.ÜÜ≈ ∆$
alignmentButtonRightÜÜ∆ ⁄
:ÜÜ€ ‹"
TMP_UIStyleManagerÜÜ› Ô
.ÜÜÔ "
alignmentButtonMidÜÜ Ç
)ÜÜÇ É
)ÜÜÉ Ñ
;ÜÜÑ Ö
if
áá 
(
áá 
newValue
áá 
!=
áá 
oldValue
áá  (
)
áá( )
{
àà 
selected
ââ 
=
ââ 
i
ââ  
;
ââ  !
}
ää 
position
ãã 
.
ãã 
x
ãã 
+=
ãã 
position
ãã &
.
ãã& '
width
ãã' ,
;
ãã, -
}
åå 
return
éé 
selected
éé 
;
éé 
}
èè 	
}
êê 
}ëë õ&
üD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_PostBuildProcessHandler.cs
	namespace 	
TMPro
 
{ 
public		 

class		 '
TMP_PostBuildProcessHandler		 ,
{

 
[ 	%
PostProcessBuildAttribute	 "
(" #
$num# (
)( )
]) *
public 
static 
void 
OnPostprocessBuild -
(- .
BuildTarget. 9
target: @
,@ A
stringB H
pathToBuiltProjectI [
)[ \
{ 	
if 
( 
target 
== 
BuildTarget %
.% &
iOS& )
&&* ,
File- 1
.1 2
Exists2 8
(8 9,
 GetEssentialProjectResourcesPath9 Y
(Y Z
)Z [
+\ ]
$str^ }
)} ~
&&	 Å
TMP_Settings
Ç é
.
é è 
enableEmojiSupport
è °
)
° ¢
{ 
string 
file 
= 
Path "
." #
Combine# *
(* +
pathToBuiltProject+ =
,= >
$str? W
)W X
;X Y
string 
content 
=  
File! %
.% &
ReadAllText& 1
(1 2
file2 6
)6 7
;7 8
content 
= 
content !
.! "
Replace" )
() *
$str* H
,H I
$strJ h
)h i
;i j
File 
. 
WriteAllText !
(! "
file" &
,& '
content( /
)/ 0
;0 1
} 
} 	
private 
static 
string ,
 GetEssentialProjectResourcesPath >
(> ?
)? @
{ 	
string 
projectPath 
=  
Path! %
.% &
GetFullPath& 1
(1 2
$str2 =
)= >
;> ?
if 
( 
	Directory 
. 
Exists  
(  !
projectPath! ,
), -
)- .
{ 
if   
(   
	Directory   
.   
Exists   $
(  $ %
projectPath  % 0
+  1 2
$str  3 S
)  S T
)  T U
{!! 
return"" 
$str"" 0
;""0 1
}## 
string&& 
[&& 
]&& 
matchingPaths&& &
=&&' (
	Directory&&) 2
.&&2 3
GetDirectories&&3 A
(&&A B
projectPath&&B M
,&&M N
$str&&O ]
,&&] ^
SearchOption&&_ k
.&&k l
AllDirectories&&l z
)&&z {
;&&{ |
projectPath'' 
='' 
ValidateLocation'' .
(''. /
matchingPaths''/ <
,''< =
projectPath''> I
)''I J
;''J K
if(( 
((( 
projectPath(( 
!=((  "
null((# '
)((' (
return(() /
projectPath((0 ;
;((; <
})) 
return++ 
null++ 
;++ 
},, 	
private// 
static// 
string// 
ValidateLocation// .
(//. /
string/// 5
[//5 6
]//6 7
paths//8 =
,//= >
string//? E
projectPath//F Q
)//Q R
{00 	
for11 
(11 
int11 
i11 
=11 
$num11 
;11 
i11 
<11 
paths11  %
.11% &
Length11& ,
;11, -
i11. /
++11/ 1
)111 2
{22 
if44 
(44 
	Directory44 
.44 
Exists44 $
(44$ %
paths44% *
[44* +
i44+ ,
]44, -
+44. /
$str440 <
)44< =
)44= >
{55 
string66 

folderPath66 %
=66& '
paths66( -
[66- .
i66. /
]66/ 0
.660 1
Replace661 8
(668 9
projectPath669 D
,66D E
$str66F H
)66H I
;66I J

folderPath77 
=77  

folderPath77! +
.77+ ,
	TrimStart77, 5
(775 6
$char776 :
,77: ;
$char77< ?
)77? @
;77@ A
return88 

folderPath88 %
;88% &
}99 
}:: 
return<< 
null<< 
;<< 
}== 	
}>> 
}?? ª
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMPro_SortingLayerHelper.cs
	namespace 	
TMPro
 
{ 
public 

static 
class 
SortingLayerHelper *
{ 
public

 
static

 
string

 
[

 
]

 
sortingLayerNames

 0
{ 	
get 
{ 
return  
GetSortingLayerNames +
(+ ,
), -
;- .
} 
} 	
static 
string 
[ 
]  
GetSortingLayerNames ,
(, -
)- .
{ 	
int 

layerCount 
= 
SortingLayer )
.) *
layers* 0
.0 1
Length1 7
;7 8
string 
[ 
] 

layerNames 
=  !
new" %
string& ,
[, -

layerCount- 7
]7 8
;8 9
for 
( 
int 
i 
= 
$num 
; 
i 
< 

layerCount  *
;* +
i, -
++- /
)/ 0
{ 

layerNames 
[ 
i 
] 
= 
SortingLayer  ,
., -
layers- 3
[3 4
i4 5
]5 6
.6 7
name7 ;
;; <
} 
return 

layerNames 
; 
} 	
} 
}   îÁ
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_StyleSheetEditor.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
[		  
CustomPropertyDrawer		 
(		 
typeof		  
(		  !
	TMP_Style		! *
)		* +
)		+ ,
]		, -
public

 

class

 
StyleDrawer

 
:

 
PropertyDrawer

 -
{ 
public 
static 
readonly 
float $
height% +
=, -
$num. 1
;1 2
public 
override 
float 
GetPropertyHeight /
(/ 0
SerializedProperty0 B
propertyC K
,K L

GUIContentM W
labelX ]
)] ^
{ 	
return 
height 
; 
} 	
public 
override 
void 
OnGUI "
(" #
Rect# '
position( 0
,0 1
SerializedProperty2 D
propertyE M
,M N

GUIContentO Y
labelZ _
)_ `
{ 	
SerializedProperty 
nameProperty +
=, -
property. 6
.6 7 
FindPropertyRelative7 K
(K L
$strL T
)T U
;U V
SerializedProperty 
hashCodeProperty /
=0 1
property2 :
.: ; 
FindPropertyRelative; O
(O P
$strP \
)\ ]
;] ^
SerializedProperty %
openingDefinitionProperty 8
=9 :
property; C
.C D 
FindPropertyRelativeD X
(X Y
$strY n
)n o
;o p
SerializedProperty %
closingDefinitionProperty 8
=9 :
property; C
.C D 
FindPropertyRelativeD X
(X Y
$strY n
)n o
;o p
SerializedProperty "
openingDefinitionArray 5
=6 7
property8 @
.@ A 
FindPropertyRelativeA U
(U V
$strV i
)i j
;j k
SerializedProperty "
closingDefinitionArray 5
=6 7
property8 @
.@ A 
FindPropertyRelativeA U
(U V
$strV i
)i j
;j k
EditorGUIUtility 
. 

labelWidth '
=( )
$num* ,
;, -
position 
. 
height 
= 
EditorGUIUtility .
.. /
singleLineHeight/ ?
+@ A
EditorGUIUtilityB R
.R S#
standardVerticalSpacingS j
;j k
float 
labelHeight 
= 
position  (
.( )
height) /
+0 1
$num2 4
;4 5
	EditorGUI!! 
.!! 
BeginChangeCheck!! &
(!!& '
)!!' (
;!!( )
Rect"" 
rect0"" 
="" 
new"" 
Rect"" !
(""! "
position""" *
.""* +
x""+ ,
,"", -
position"". 6
.""6 7
y""7 8
,""8 9
("": ;
position""; C
.""C D
width""D I
)""I J
/""K L
$num""M N
+""O P
$num""Q R
,""R S
position""T \
.""\ ]
height""] c
)""c d
;""d e
	EditorGUI## 
.## 
PropertyField## #
(### $
rect0##$ )
,##) *
nameProperty##+ 7
)##7 8
;##8 9
if$$ 
($$ 
	EditorGUI$$ 
.$$ 
EndChangeCheck$$ (
($$( )
)$$) *
)$$* +
{%% 
hashCodeProperty''  
.''  !
intValue''! )
=''* +
TMP_TextUtilities'', =
.''= >
GetSimpleHashCode''> O
(''O P
nameProperty''P \
.''\ ]
stringValue''] h
)''h i
;''i j
property)) 
.)) 
serializedObject)) )
.))) *#
ApplyModifiedProperties))* A
())A B
)))B C
;))C D
TMP_StyleSheet,, 

styleSheet,, )
=,,* +
property,,, 4
.,,4 5
serializedObject,,5 E
.,,E F
targetObject,,F R
as,,S U
TMP_StyleSheet,,V d
;,,d e

styleSheet-- 
.-- 
RefreshStyles-- (
(--( )
)--) *
;--* +
}.. 
Rect11 
rect111 
=11 
new11 
Rect11 !
(11! "
rect011" '
.11' (
x11( )
+11* +
rect011, 1
.111 2
width112 7
+118 9
$num11: ;
,11; <
position11= E
.11E F
y11F G
,11G H
$num11I K
,11K L
position11M U
.11U V
height11V \
)11\ ]
;11] ^
GUI22 
.22 
Label22 
(22 
rect122 
,22 
$str22 '
)22' (
;22( )
GUI33 
.33 
enabled33 
=33 
false33 
;33  
rect144 
.44 
x44 
+=44 
$num44 
;44 
rect155 
.55 
width55 
=55 
position55 "
.55" #
width55# (
/55) *
$num55+ ,
-55- .
$num55/ 1
;551 2
	EditorGUI66 
.66 
PropertyField66 #
(66# $
rect166$ )
,66) *
hashCodeProperty66+ ;
,66; <

GUIContent66= G
.66G H
none66H L
)66L M
;66M N
GUI88 
.88 
enabled88 
=88 
true88 
;88 
	EditorGUI;; 
.;; 
BeginChangeCheck;; &
(;;& '
);;' (
;;;( )
position>> 
.>> 
y>> 
+=>> 
labelHeight>> %
;>>% &
GUI?? 
.?? 
Label?? 
(?? 
position?? 
,?? 
$str??  .
)??. /
;??/ 0
Rect@@ 
	textRect1@@ 
=@@ 
new@@  
Rect@@! %
(@@% &
$num@@& )
,@@) *
position@@+ 3
.@@3 4
y@@4 5
,@@5 6
position@@7 ?
.@@? @
width@@@ E
-@@F G
$num@@H J
,@@J K
$num@@L N
)@@N O
;@@O P%
openingDefinitionPropertyAA %
.AA% &
stringValueAA& 1
=AA2 3
	EditorGUIAA4 =
.AA= >
TextAreaAA> F
(AAF G
	textRect1AAG P
,AAP Q%
openingDefinitionPropertyAAR k
.AAk l
stringValueAAl w
)AAw x
;AAx y
ifBB 
(BB 
	EditorGUIBB 
.BB 
EndChangeCheckBB (
(BB( )
)BB) *
)BB* +
{CC 
intEE 
sizeEE 
=EE %
openingDefinitionPropertyEE 4
.EE4 5
stringValueEE5 @
.EE@ A
LengthEEA G
;EEG H
ifHH 
(HH "
openingDefinitionArrayHH *
.HH* +
	arraySizeHH+ 4
!=HH5 7
sizeHH8 <
)HH< ="
openingDefinitionArrayHH> T
.HHT U
	arraySizeHHU ^
=HH_ `
sizeHHa e
;HHe f
forJJ 
(JJ 
intJJ 
iJJ 
=JJ 
$numJJ 
;JJ 
iJJ  !
<JJ" #
sizeJJ$ (
;JJ( )
iJJ* +
++JJ+ -
)JJ- .
{KK 
SerializedPropertyLL &
elementLL' .
=LL/ 0"
openingDefinitionArrayLL1 G
.LLG H"
GetArrayElementAtIndexLLH ^
(LL^ _
iLL_ `
)LL` a
;LLa b
elementMM 
.MM 
intValueMM $
=MM% &%
openingDefinitionPropertyMM' @
.MM@ A
stringValueMMA L
[MML M
iMMM N
]MMN O
;MMO P
}NN 
}OO 
	EditorGUIQQ 
.QQ 
BeginChangeCheckQQ &
(QQ& '
)QQ' (
;QQ( )
positionTT 
.TT 
yTT 
+=TT 
$numTT 
;TT 
GUIUU 
.UU 
LabelUU 
(UU 
positionUU 
,UU 
$strUU  .
)UU. /
;UU/ 0
RectVV 
	textRect2VV 
=VV 
newVV  
RectVV! %
(VV% &
$numVV& )
,VV) *
positionVV+ 3
.VV3 4
yVV4 5
,VV5 6
positionVV7 ?
.VV? @
widthVV@ E
-VVF G
$numVVH J
,VVJ K
$numVVL N
)VVN O
;VVO P%
closingDefinitionPropertyWW %
.WW% &
stringValueWW& 1
=WW2 3
	EditorGUIWW4 =
.WW= >
TextAreaWW> F
(WWF G
	textRect2WWG P
,WWP Q%
closingDefinitionPropertyWWR k
.WWk l
stringValueWWl w
)WWw x
;WWx y
ifYY 
(YY 
	EditorGUIYY 
.YY 
EndChangeCheckYY (
(YY( )
)YY) *
)YY* +
{ZZ 
int\\ 
size\\ 
=\\ %
closingDefinitionProperty\\ 4
.\\4 5
stringValue\\5 @
.\\@ A
Length\\A G
;\\G H
if__ 
(__ "
closingDefinitionArray__ *
.__* +
	arraySize__+ 4
!=__5 7
size__8 <
)__< ="
closingDefinitionArray__> T
.__T U
	arraySize__U ^
=___ `
size__a e
;__e f
foraa 
(aa 
intaa 
iaa 
=aa 
$numaa 
;aa 
iaa  !
<aa" #
sizeaa$ (
;aa( )
iaa* +
++aa+ -
)aa- .
{bb 
SerializedPropertycc &
elementcc' .
=cc/ 0"
closingDefinitionArraycc1 G
.ccG H"
GetArrayElementAtIndexccH ^
(cc^ _
icc_ `
)cc` a
;cca b
elementdd 
.dd 
intValuedd $
=dd% &%
closingDefinitionPropertydd' @
.dd@ A
stringValueddA L
[ddL M
iddM N
]ddN O
;ddO P
}ee 
}ff 
}hh 	
}ii 
[mm 
CustomEditormm 
(mm 
typeofmm 
(mm 
TMP_StyleSheetmm '
)mm' (
)mm( )
,mm) *"
CanEditMultipleObjectsmm+ A
]mmA B
publicnn 

classnn 
TMP_StyleEditornn  
:nn! "
Editornn# )
{oo 
TMP_StyleSheetqq 
m_StyleSheetqq #
;qq# $
SerializedPropertyrr 
m_StyleListProprr *
;rr* +
inttt 
m_SelectedElementtt 
=tt 
-tt  !
$numtt! "
;tt" #
intuu 
m_Pageuu 
;uu 
boolww 
m_IsStyleSheetDirtyww  
;ww  !
voidzz 
OnEnablezz 
(zz 
)zz 
{{{ 	
m_StyleSheet|| 
=|| 
target|| !
as||" $
TMP_StyleSheet||% 3
;||3 4
m_StyleListProp}} 
=}} 
serializedObject}} .
.}}. /
FindProperty}}/ ;
(}}; <
$str}}< I
)}}I J
;}}J K
}~~ 	
public
ÅÅ 
override
ÅÅ 
void
ÅÅ 
OnInspectorGUI
ÅÅ +
(
ÅÅ+ ,
)
ÅÅ, -
{
ÇÇ 	
Event
ÉÉ 
currentEvent
ÉÉ 
=
ÉÉ  
Event
ÉÉ! &
.
ÉÉ& '
current
ÉÉ' .
;
ÉÉ. /
serializedObject
ÖÖ 
.
ÖÖ 
Update
ÖÖ #
(
ÖÖ# $
)
ÖÖ$ %
;
ÖÖ% &!
m_IsStyleSheetDirty
áá 
=
áá  !
false
áá" '
;
áá' (
int
àà 
elementCount
àà 
=
àà 
m_StyleListProp
àà .
.
àà. /
	arraySize
àà/ 8
;
àà8 9
int
ââ 
itemsPerPage
ââ 
=
ââ 
(
ââ  
Screen
ââ  &
.
ââ& '
height
ââ' -
-
ââ. /
$num
ââ0 3
)
ââ3 4
/
ââ5 6
$num
ââ7 :
;
ââ: ;
if
ãã 
(
ãã 
elementCount
ãã 
>
ãã 
$num
ãã  
)
ãã  !
{
åå 
for
éé 
(
éé 
int
éé 
i
éé 
=
éé 
itemsPerPage
éé )
*
éé* +
m_Page
éé, 2
;
éé2 3
i
éé4 5
<
éé6 7
elementCount
éé8 D
&&
ééE G
i
ééH I
<
ééJ K
itemsPerPage
ééL X
*
ééY Z
(
éé[ \
m_Page
éé\ b
+
ééc d
$num
éée f
)
ééf g
;
éég h
i
ééi j
++
ééj l
)
éél m
{
èè 
Rect
ëë  
elementStartRegion
ëë +
=
ëë, -
GUILayoutUtility
ëë. >
.
ëë> ?
GetRect
ëë? F
(
ëëF G
$num
ëëG I
,
ëëI J
$num
ëëK M
,
ëëM N
	GUILayout
ëëO X
.
ëëX Y
ExpandWidth
ëëY d
(
ëëd e
true
ëëe i
)
ëëi j
)
ëëj k
;
ëëk l
EditorGUILayout
ìì #
.
ìì# $
BeginVertical
ìì$ 1
(
ìì1 2
EditorStyles
ìì2 >
.
ìì> ?
helpBox
ìì? F
)
ììF G
;
ììG H 
SerializedProperty
ïï &
styleProperty
ïï' 4
=
ïï5 6
m_StyleListProp
ïï7 F
.
ïïF G$
GetArrayElementAtIndex
ïïG ]
(
ïï] ^
i
ïï^ _
)
ïï_ `
;
ïï` a
	EditorGUI
ññ 
.
ññ 
BeginChangeCheck
ññ .
(
ññ. /
)
ññ/ 0
;
ññ0 1
EditorGUILayout
óó #
.
óó# $
PropertyField
óó$ 1
(
óó1 2
styleProperty
óó2 ?
)
óó? @
;
óó@ A
EditorGUILayout
òò #
.
òò# $
EndVertical
òò$ /
(
òò/ 0
)
òò0 1
;
òò1 2
if
ôô 
(
ôô 
	EditorGUI
ôô !
.
ôô! "
EndChangeCheck
ôô" 0
(
ôô0 1
)
ôô1 2
)
ôô2 3
{
öö 
}
úú 
Rect
üü 
elementEndRegion
üü )
=
üü* +
GUILayoutUtility
üü, <
.
üü< =
GetRect
üü= D
(
üüD E
$num
üüE G
,
üüG H
$num
üüI K
,
üüK L
	GUILayout
üüM V
.
üüV W
ExpandWidth
üüW b
(
üüb c
true
üüc g
)
üüg h
)
üüh i
;
üüi j
Rect
¢¢ 
selectionArea
¢¢ &
=
¢¢' (
new
¢¢) ,
Rect
¢¢- 1
(
¢¢1 2 
elementStartRegion
¢¢2 D
.
¢¢D E
x
¢¢E F
,
¢¢F G 
elementStartRegion
¢¢H Z
.
¢¢Z [
y
¢¢[ \
,
¢¢\ ]
elementEndRegion
¢¢^ n
.
¢¢n o
width
¢¢o t
,
¢¢t u
elementEndRegion¢¢v Ü
.¢¢Ü á
y¢¢á à
-¢¢â ä"
elementStartRegion¢¢ã ù
.¢¢ù û
y¢¢û ü
)¢¢ü †
;¢¢† °
if
££ 
(
££ 
DoSelectionCheck
££ (
(
££( )
selectionArea
££) 6
)
££6 7
)
££7 8
{
§§ 
if
•• 
(
•• 
m_SelectedElement
•• -
==
••. 0
i
••1 2
)
••2 3
{
¶¶ 
m_SelectedElement
ßß -
=
ßß. /
-
ßß0 1
$num
ßß1 2
;
ßß2 3
}
®® 
else
©© 
{
™™ 
m_SelectedElement
´´ -
=
´´. /
i
´´0 1
;
´´1 2

GUIUtility
¨¨ &
.
¨¨& '
keyboardControl
¨¨' 6
=
¨¨7 8
$num
¨¨9 :
;
¨¨: ;
}
≠≠ 
}
ÆÆ 
if
±± 
(
±± 
m_SelectedElement
±± )
==
±±* ,
i
±±- .
)
±±. /
TMP_EditorUtility
≤≤ )
.
≤≤) *
DrawBox
≤≤* 1
(
≤≤1 2
selectionArea
≤≤2 ?
,
≤≤? @
$num
≤≤A C
,
≤≤C D
new
≤≤E H
Color32
≤≤I P
(
≤≤P Q
$num
≤≤Q S
,
≤≤S T
$num
≤≤U X
,
≤≤X Y
$num
≤≤Z ]
,
≤≤] ^
$num
≤≤_ b
)
≤≤b c
)
≤≤c d
;
≤≤d e
}
≥≥ 
}
¥¥ 
Rect
∑∑ 
rect
∑∑ 
=
∑∑ 
EditorGUILayout
∑∑ '
.
∑∑' (
GetControlRect
∑∑( 6
(
∑∑6 7
false
∑∑7 <
,
∑∑< =
$num
∑∑> @
)
∑∑@ A
;
∑∑A B
rect
∏∏ 
.
∏∏ 
width
∏∏ 
/=
∏∏ 
$num
∏∏ 
;
∏∏ 
bool
ªª 

guiEnabled
ªª 
=
ªª 
GUI
ªª !
.
ªª! "
enabled
ªª" )
;
ªª) *
if
ºº 
(
ºº 
m_SelectedElement
ºº !
==
ºº" $
-
ºº% &
$num
ºº& '
||
ºº( *
m_SelectedElement
ºº+ <
==
ºº= ?
$num
ºº@ A
)
ººA B
{
ººC D
GUI
ººE H
.
ººH I
enabled
ººI P
=
ººQ R
false
ººS X
;
ººX Y
}
ººZ [
if
ΩΩ 
(
ΩΩ 
GUI
ΩΩ 
.
ΩΩ 
Button
ΩΩ 
(
ΩΩ 
rect
ΩΩ 
,
ΩΩ  
$str
ΩΩ! %
)
ΩΩ% &
)
ΩΩ& '
{
ææ 
SwapStyleElements
øø !
(
øø! "
m_SelectedElement
øø" 3
,
øø3 4
m_SelectedElement
øø5 F
-
øøG H
$num
øøI J
)
øøJ K
;
øøK L
}
¿¿ 
GUI
¡¡ 
.
¡¡ 
enabled
¡¡ 
=
¡¡ 

guiEnabled
¡¡ $
;
¡¡$ %
rect
ƒƒ 
.
ƒƒ 
x
ƒƒ 
+=
ƒƒ 
rect
ƒƒ 
.
ƒƒ 
width
ƒƒ  
;
ƒƒ  !
if
≈≈ 
(
≈≈ 
m_SelectedElement
≈≈ !
==
≈≈" $
elementCount
≈≈% 1
-
≈≈2 3
$num
≈≈4 5
)
≈≈5 6
{
≈≈7 8
GUI
≈≈9 <
.
≈≈< =
enabled
≈≈= D
=
≈≈E F
false
≈≈G L
;
≈≈L M
}
≈≈N O
if
∆∆ 
(
∆∆ 
GUI
∆∆ 
.
∆∆ 
Button
∆∆ 
(
∆∆ 
rect
∆∆ 
,
∆∆  
$str
∆∆! '
)
∆∆' (
)
∆∆( )
{
«« 
SwapStyleElements
»» !
(
»»! "
m_SelectedElement
»»" 3
,
»»3 4
m_SelectedElement
»»5 F
+
»»G H
$num
»»I J
)
»»J K
;
»»K L
}
…… 
GUI
   
.
   
enabled
   
=
   

guiEnabled
   $
;
  $ %
rect
ÕÕ 
.
ÕÕ 
x
ÕÕ 
+=
ÕÕ 
rect
ÕÕ 
.
ÕÕ 
width
ÕÕ  
*
ÕÕ! "
$num
ÕÕ# $
;
ÕÕ$ %
if
ŒŒ 
(
ŒŒ 
GUI
ŒŒ 
.
ŒŒ 
Button
ŒŒ 
(
ŒŒ 
rect
ŒŒ 
,
ŒŒ  
$str
ŒŒ! $
)
ŒŒ$ %
)
ŒŒ% &
{
œœ 
int
–– 
index
–– 
=
–– 
m_SelectedElement
–– -
==
––. 0
-
––1 2
$num
––2 3
?
––4 5
$num
––6 7
:
––8 9
m_SelectedElement
––: K
;
––K L
if
““ 
(
““ 
index
““ 
>
““ 
elementCount
““ (
)
““( )
index
”” 
=
”” 
elementCount
”” (
;
””( )
m_StyleListProp
÷÷ 
.
÷÷  '
InsertArrayElementAtIndex
÷÷  9
(
÷÷9 :
index
÷÷: ?
)
÷÷? @
;
÷÷@ A
m_SelectedElement
ŸŸ !
=
ŸŸ" #
index
ŸŸ$ )
+
ŸŸ* +
$num
ŸŸ, -
;
ŸŸ- .
serializedObject
€€  
.
€€  !%
ApplyModifiedProperties
€€! 8
(
€€8 9
)
€€9 :
;
€€: ;
m_StyleSheet
‹‹ 
.
‹‹ 
RefreshStyles
‹‹ *
(
‹‹* +
)
‹‹+ ,
;
‹‹, -
}
›› 
rect
‡‡ 
.
‡‡ 
x
‡‡ 
+=
‡‡ 
rect
‡‡ 
.
‡‡ 
width
‡‡  
;
‡‡  !
if
·· 
(
·· 
m_SelectedElement
·· !
==
··" $
-
··% &
$num
··& '
||
··( *
m_SelectedElement
··+ <
>=
··= ?
elementCount
··@ L
)
··L M
GUI
··N Q
.
··Q R
enabled
··R Y
=
··Z [
false
··\ a
;
··a b
if
‚‚ 
(
‚‚ 
GUI
‚‚ 
.
‚‚ 
Button
‚‚ 
(
‚‚ 
rect
‚‚ 
,
‚‚  
$str
‚‚! $
)
‚‚$ %
)
‚‚% &
{
„„ 
int
‰‰ 
index
‰‰ 
=
‰‰ 
m_SelectedElement
‰‰ -
==
‰‰. 0
-
‰‰1 2
$num
‰‰2 3
?
‰‰4 5
$num
‰‰6 7
:
‰‰8 9
m_SelectedElement
‰‰: K
;
‰‰K L
m_StyleListProp
ÊÊ 
.
ÊÊ  '
DeleteArrayElementAtIndex
ÊÊ  9
(
ÊÊ9 :
index
ÊÊ: ?
)
ÊÊ? @
;
ÊÊ@ A
m_SelectedElement
ËË !
=
ËË" #
-
ËË$ %
$num
ËË% &
;
ËË& '
serializedObject
ÈÈ  
.
ÈÈ  !%
ApplyModifiedProperties
ÈÈ! 8
(
ÈÈ8 9
)
ÈÈ9 :
;
ÈÈ: ;
m_StyleSheet
ÍÍ 
.
ÍÍ 
RefreshStyles
ÍÍ *
(
ÍÍ* +
)
ÍÍ+ ,
;
ÍÍ, -
return
ÎÎ 
;
ÎÎ 
}
ÏÏ 
if
ÔÔ 
(
ÔÔ 
itemsPerPage
ÔÔ 
==
ÔÔ 
$num
ÔÔ  !
)
ÔÔ! "
return
ÔÔ# )
;
ÔÔ) *
int
ÚÚ 
shiftMultiplier
ÚÚ 
=
ÚÚ  !
currentEvent
ÚÚ" .
.
ÚÚ. /
shift
ÚÚ/ 4
?
ÚÚ5 6
$num
ÚÚ7 9
:
ÚÚ: ;
$num
ÚÚ< =
;
ÚÚ= >
Rect
ÙÙ 
pagePos
ÙÙ 
=
ÙÙ 
EditorGUILayout
ÙÙ *
.
ÙÙ* +
GetControlRect
ÙÙ+ 9
(
ÙÙ9 :
false
ÙÙ: ?
,
ÙÙ? @
$num
ÙÙA C
)
ÙÙC D
;
ÙÙD E
pagePos
ıı 
.
ıı 
width
ıı 
/=
ıı 
$num
ıı 
;
ıı 
if
¯¯ 
(
¯¯ 
m_Page
¯¯ 
>
¯¯ 
$num
¯¯ 
)
¯¯ 
GUI
¯¯ 
.
¯¯  
enabled
¯¯  '
=
¯¯( )
true
¯¯* .
;
¯¯. /
else
˘˘ 
GUI
˘˘ 
.
˘˘ 
enabled
˘˘ 
=
˘˘ 
false
˘˘ $
;
˘˘$ %
if
˚˚ 
(
˚˚ 
GUI
˚˚ 
.
˚˚ 
Button
˚˚ 
(
˚˚ 
pagePos
˚˚ "
,
˚˚" #
$str
˚˚$ .
)
˚˚. /
)
˚˚/ 0
m_Page
¸¸ 
-=
¸¸ 
$num
¸¸ 
*
¸¸ 
shiftMultiplier
¸¸ -
;
¸¸- .
GUI
ˇˇ 
.
ˇˇ 
enabled
ˇˇ 
=
ˇˇ 
true
ˇˇ 
;
ˇˇ 
pagePos
ÄÄ 
.
ÄÄ 
x
ÄÄ 
+=
ÄÄ 
pagePos
ÄÄ  
.
ÄÄ  !
width
ÄÄ! &
;
ÄÄ& '
int
ÅÅ 

totalPages
ÅÅ 
=
ÅÅ 
(
ÅÅ 
int
ÅÅ !
)
ÅÅ! "
(
ÅÅ" #
elementCount
ÅÅ# /
/
ÅÅ0 1
(
ÅÅ2 3
float
ÅÅ3 8
)
ÅÅ8 9
itemsPerPage
ÅÅ9 E
+
ÅÅF G
$num
ÅÅH N
)
ÅÅN O
;
ÅÅO P
GUI
ÇÇ 
.
ÇÇ 
Label
ÇÇ 
(
ÇÇ 
pagePos
ÇÇ 
,
ÇÇ 
$str
ÇÇ &
+
ÇÇ' (
(
ÇÇ) *
m_Page
ÇÇ* 0
+
ÇÇ1 2
$num
ÇÇ3 4
)
ÇÇ4 5
+
ÇÇ6 7
$str
ÇÇ8 =
+
ÇÇ> ?

totalPages
ÇÇ@ J
,
ÇÇJ K 
TMP_UIStyleManager
ÇÇL ^
.
ÇÇ^ _
centeredLabel
ÇÇ_ l
)
ÇÇl m
;
ÇÇm n
pagePos
ÖÖ 
.
ÖÖ 
x
ÖÖ 
+=
ÖÖ 
pagePos
ÖÖ  
.
ÖÖ  !
width
ÖÖ! &
;
ÖÖ& '
if
ÜÜ 
(
ÜÜ 
itemsPerPage
ÜÜ 
*
ÜÜ 
(
ÜÜ  
m_Page
ÜÜ  &
+
ÜÜ' (
$num
ÜÜ) *
)
ÜÜ* +
<
ÜÜ, -
elementCount
ÜÜ. :
)
ÜÜ: ;
GUI
ÜÜ< ?
.
ÜÜ? @
enabled
ÜÜ@ G
=
ÜÜH I
true
ÜÜJ N
;
ÜÜN O
else
áá 
GUI
áá 
.
áá 
enabled
áá 
=
áá 
false
áá $
;
áá$ %
if
ââ 
(
ââ 
GUI
ââ 
.
ââ 
Button
ââ 
(
ââ 
pagePos
ââ "
,
ââ" #
$str
ââ$ *
)
ââ* +
)
ââ+ ,
m_Page
ää 
+=
ää 
$num
ää 
*
ää 
shiftMultiplier
ää -
;
ää- .
m_Page
çç 
=
çç 
Mathf
çç 
.
çç 
Clamp
çç  
(
çç  !
m_Page
çç! '
,
çç' (
$num
çç) *
,
çç* +
elementCount
çç, 8
/
çç9 :
itemsPerPage
çç; G
)
ççG H
;
ççH I
if
êê 
(
êê 
serializedObject
êê  
.
êê  !%
ApplyModifiedProperties
êê! 8
(
êê8 9
)
êê9 :
)
êê: ;
{
ëë  
TMPro_EventManager
íí "
.
íí" #,
ON_TEXT_STYLE_PROPERTY_CHANGED
íí# A
(
ííA B
true
ííB F
)
ííF G
;
ííG H
if
îî 
(
îî !
m_IsStyleSheetDirty
îî '
)
îî' (
{
ïï !
m_IsStyleSheetDirty
ññ '
=
ññ( )
false
ññ* /
;
ññ/ 0
m_StyleSheet
óó  
.
óó  !
RefreshStyles
óó! .
(
óó. /
)
óó/ 0
;
óó0 1
}
òò 
}
ôô 
GUI
úú 
.
úú 
enabled
úú 
=
úú 
true
úú 
;
úú 
if
ùù 
(
ùù 
currentEvent
ùù 
.
ùù 
type
ùù !
==
ùù" $
	EventType
ùù% .
.
ùù. /
	MouseDown
ùù/ 8
&&
ùù9 ;
currentEvent
ùù< H
.
ùùH I
button
ùùI O
==
ùùP R
$num
ùùS T
)
ùùT U
m_SelectedElement
ûû !
=
ûû" #
-
ûû$ %
$num
ûû% &
;
ûû& '
}
†† 	
static
§§ 
bool
§§ 
DoSelectionCheck
§§ $
(
§§$ %
Rect
§§% )
selectionArea
§§* 7
)
§§7 8
{
•• 	
Event
¶¶ 
currentEvent
¶¶ 
=
¶¶  
Event
¶¶! &
.
¶¶& '
current
¶¶' .
;
¶¶. /
switch
®® 
(
®® 
currentEvent
®®  
.
®®  !
type
®®! %
)
®®% &
{
©© 
case
™™ 
	EventType
™™ 
.
™™ 
	MouseDown
™™ (
:
™™( )
if
´´ 
(
´´ 
selectionArea
´´ %
.
´´% &
Contains
´´& .
(
´´. /
currentEvent
´´/ ;
.
´´; <
mousePosition
´´< I
)
´´I J
&&
´´K M
currentEvent
´´N Z
.
´´Z [
button
´´[ a
==
´´b d
$num
´´e f
)
´´f g
{
¨¨ 
currentEvent
≠≠ $
.
≠≠$ %
Use
≠≠% (
(
≠≠( )
)
≠≠) *
;
≠≠* +
return
ÆÆ 
true
ÆÆ #
;
ÆÆ# $
}
ØØ 
break
∞∞ 
;
∞∞ 
}
±± 
return
≥≥ 
false
≥≥ 
;
≥≥ 
}
¥¥ 	
void
∂∂ 
SwapStyleElements
∂∂ 
(
∂∂ 
int
∂∂ "
selectedIndex
∂∂# 0
,
∂∂0 1
int
∂∂2 5
newIndex
∂∂6 >
)
∂∂> ?
{
∑∑ 	
m_StyleListProp
∏∏ 
.
∏∏ 
MoveArrayElement
∏∏ ,
(
∏∏, -
selectedIndex
∏∏- :
,
∏∏: ;
newIndex
∏∏< D
)
∏∏D E
;
∏∏E F
m_SelectedElement
ππ 
=
ππ 
newIndex
ππ  (
;
ππ( )!
m_IsStyleSheetDirty
∫∫ 
=
∫∫  !
true
∫∫" &
;
∫∫& '
}
ªª 	
}
ΩΩ 
}ææ ˆ“
ØD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_GlyphPairAdjustmentRecordPropertyDrawer.cs
	namespace		 	
TMPro		
 
.		 
EditorUtilities		 
{

 
[  
CustomPropertyDrawer 
( 
typeof  
(  !)
TMP_GlyphPairAdjustmentRecord! >
)> ?
)? @
]@ A
public 

class 7
+TMP_GlyphPairAdjustmentRecordPropertyDrawer <
:= >
PropertyDrawer? M
{ 
private 
bool 
isEditingEnabled %
=& '
false( -
;- .
private 
bool 
isSelectable !
=" #
false$ )
;) *
private 
string 
m_FirstCharacter '
=( )
string* 0
.0 1
Empty1 6
;6 7
private 
string 
m_SecondCharacter (
=) *
string+ 1
.1 2
Empty2 7
;7 8
private 
string 
m_PreviousInput &
;& '
static 

GUIContent %
s_CharacterTextFieldLabel 3
=4 5
new6 9

GUIContent: D
(D E
$strE L
,L M
$str	N Ë
)
Ë È
;
È Í
public 
override 
void 
OnGUI "
(" #
Rect# '
position( 0
,0 1
SerializedProperty2 D
propertyE M
,M N

GUIContentO Y
labelZ _
)_ `
{ 	
SerializedProperty &
prop_FirstAdjustmentRecord 9
=: ;
property< D
.D E 
FindPropertyRelativeE Y
(Y Z
$strZ s
)s t
;t u
SerializedProperty '
prop_SecondAdjustmentRecord :
=; <
property= E
.E F 
FindPropertyRelativeF Z
(Z [
$str[ u
)u v
;v w
SerializedProperty  
prop_FirstGlyphIndex 3
=4 5&
prop_FirstAdjustmentRecord6 P
.P Q 
FindPropertyRelativeQ e
(e f
$strf t
)t u
;u v
SerializedProperty &
prop_FirstGlyphValueRecord 9
=: ;&
prop_FirstAdjustmentRecord< V
.V W 
FindPropertyRelativeW k
(k l
$str	l Ä
)
Ä Å
;
Å Ç
SerializedProperty   !
prop_SecondGlyphIndex   4
=  5 6'
prop_SecondAdjustmentRecord  7 R
.  R S 
FindPropertyRelative  S g
(  g h
$str  h v
)  v w
;  w x
SerializedProperty!! '
prop_SecondGlyphValueRecord!! :
=!!; <'
prop_SecondAdjustmentRecord!!= X
.!!X Y 
FindPropertyRelative!!Y m
(!!m n
$str	!!n Ç
)
!!Ç É
;
!!É Ñ
SerializedProperty## '
prop_FontFeatureLookupFlags## :
=##; <
property##= E
.##E F 
FindPropertyRelative##F Z
(##Z [
$str##[ q
)##q r
;##r s
position%% 
.%% 
yMin%% 
+=%% 
$num%% 
;%% 
float'' 
width'' 
='' 
position'' "
.''" #
width''# (
/'') *
$num''+ ,
;'', -
float(( 
padding(( 
=(( 
$num((  
;((  !
Rect** 
rect** 
;** 
isEditingEnabled,, 
=,, 
GUI,, "
.,," #
enabled,,# *
;,,* +
isSelectable-- 
=-- 
label--  
.--  !
text--! %
==--& (
$str--) 5
?--6 7
true--8 <
:--= >
false--? D
;--D E
if// 
(// 
isSelectable// 
)// 
GUILayoutUtility00  
.00  !
GetRect00! (
(00( )
position00) 1
.001 2
width002 7
,007 8
$num009 ;
)00; <
;00< =
else11 
GUILayoutUtility22  
.22  !
GetRect22! (
(22( )
position22) 1
.221 2
width222 7
,227 8
$num229 ;
)22; <
;22< =
GUIStyle44 
style44 
=44 
new44  
GUIStyle44! )
(44) *
EditorStyles44* 6
.446 7
label447 <
)44< =
;44= >
style55 
.55 
richText55 
=55 
true55 !
;55! "
GUI88 
.88 
enabled88 
=88 
isEditingEnabled88 *
;88* +
if99 
(99 
isSelectable99 
)99 
{:: 
rect;; 
=;; 
new;; 
Rect;; 
(;;  
position;;  (
.;;( )
x;;) *
+;;+ ,
$num;;- /
,;;/ 0
position;;1 9
.;;9 :
y;;: ;
,;;; <
position;;= E
.;;E F
width;;F K
,;;K L
$num;;M O
);;O P
;;;P Q
float== 

labelWidth==  
===! "
GUI==# &
.==& '
skin==' +
.==+ ,
label==, 1
.==1 2
CalcSize==2 :
(==: ;
new==; >

GUIContent==? I
(==I J
$str==J P
+==Q R 
prop_FirstGlyphIndex==S g
.==g h
intValue==h p
)==p q
)==q r
.==r s
x==s t
;==t u
	EditorGUI>> 
.>> 

LabelField>> $
(>>$ %
new>>% (
Rect>>) -
(>>- .
position>>. 6
.>>6 7
x>>7 8
+>>9 :
(>>; <
$num>>< >
->>? @

labelWidth>>A K
)>>K L
/>>M N
$num>>O P
,>>P Q
position>>R Z
.>>Z [
y>>[ \
+>>] ^
$num>>_ a
,>>a b
$num>>c f
,>>f g
$num>>h k
)>>k l
,>>l m
new>>n q

GUIContent>>r |
(>>| }
$str	>>} í
+
>>ì î"
prop_FirstGlyphIndex
>>ï ©
.
>>© ™
intValue
>>™ ≤
+
>>≥ ¥
$str
>>µ ø
)
>>ø ¿
,
>>¿ ¡
style
>>¬ «
)
>>« »
;
>>» …
GUI@@ 
.@@ 
enabled@@ 
=@@ 
isEditingEnabled@@ .
;@@. /
EditorGUIUtilityAA  
.AA  !

labelWidthAA! +
=AA, -
$numAA. 1
;AA1 2
rectCC 
=CC 
newCC 
RectCC 
(CC  
positionCC  (
.CC( )
xCC) *
+CC+ ,
$numCC- /
,CC/ 0
positionCC1 9
.CC9 :
yCC: ;
+CC< =
$numCC> @
,CC@ A
(CCB C
widthCCC H
-CCI J
$numCCK M
)CCM N
-CCO P
paddingCCQ X
,CCX Y
$numCCZ \
)CC\ ]
;CC] ^
	EditorGUIDD 
.DD 
PropertyFieldDD '
(DD' (
rectDD( ,
,DD, -&
prop_FirstGlyphValueRecordDD. H
.DDH I 
FindPropertyRelativeDDI ]
(DD] ^
$strDD^ l
)DDl m
,DDm n
newDDo r

GUIContentDDs }
(DD} ~
$str	DD~ É
)
DDÉ Ñ
)
DDÑ Ö
;
DDÖ Ü
rectFF 
.FF 
yFF 
+=FF 
$numFF 
;FF 
	EditorGUIGG 
.GG 
PropertyFieldGG '
(GG' (
rectGG( ,
,GG, -&
prop_FirstGlyphValueRecordGG. H
.GGH I 
FindPropertyRelativeGGI ]
(GG] ^
$strGG^ l
)GGl m
,GGm n
newGGo r

GUIContentGGs }
(GG} ~
$str	GG~ É
)
GGÉ Ñ
)
GGÑ Ö
;
GGÖ Ü
rectII 
.II 
yII 
+=II 
$numII 
;II 
	EditorGUIJJ 
.JJ 
PropertyFieldJJ '
(JJ' (
rectJJ( ,
,JJ, -&
prop_FirstGlyphValueRecordJJ. H
.JJH I 
FindPropertyRelativeJJI ]
(JJ] ^
$strJJ^ j
)JJj k
,JJk l
newJJm p

GUIContentJJq {
(JJ{ |
$str	JJ| Å
)
JJÅ Ç
)
JJÇ É
;
JJÉ Ñ
	DrawGlyphOO 
(OO 
(OO 
uintOO 
)OO   
prop_FirstGlyphIndexOO  4
.OO4 5
intValueOO5 =
,OO= >
newOO? B
RectOOC G
(OOG H
positionOOH P
.OOP Q
xOOQ R
,OOR S
positionOOT \
.OO\ ]
yOO] ^
,OO^ _
positionOO` h
.OOh i
widthOOi n
,OOn o
positionOOp x
.OOx y
heightOOy 
)	OO Ä
,
OOÄ Å
property
OOÇ ä
)
OOä ã
;
OOã å
}PP 
elseQQ 
{RR 
rectSS 
=SS 
newSS 
RectSS 
(SS  
positionSS  (
.SS( )
xSS) *
,SS* +
positionSS, 4
.SS4 5
ySS5 6
,SS6 7
widthSS8 =
/SS> ?
$numSS@ A
*SSB C
$numSSD H
-SSI J
paddingSSK R
,SSR S
$numSST V
)SSV W
;SSW X
EditorGUIUtilityTT  
.TT  !

labelWidthTT! +
=TT, -
$numTT. 1
;TT1 2
GUIWW 
.WW 
SetNextControlNameWW &
(WW& '
$strWW' <
)WW< =
;WW= >
	EditorGUIXX 
.XX 
BeginChangeCheckXX *
(XX* +
)XX+ ,
;XX, -
stringYY 
firstCharacterYY %
=YY& '
	EditorGUIYY( 1
.YY1 2
	TextFieldYY2 ;
(YY; <
rectYY< @
,YY@ A%
s_CharacterTextFieldLabelYYB [
,YY[ \
m_FirstCharacterYY] m
)YYm n
;YYn o
if[[ 
([[ 
GUI[[ 
.[[ #
GetNameOfFocusedControl[[ /
([[/ 0
)[[0 1
==[[2 4
$str[[5 J
)[[J K
{\\ 
if]] 
(]] 
ValidateInput]] %
(]]% &
firstCharacter]]& 4
)]]4 5
)]]5 6
{^^ 
uintaa 
unicodeaa $
=aa% &
GetUnicodeCharacteraa' :
(aa: ;
firstCharacteraa; I
)aaI J
;aaJ K(
TMP_SerializedPropertyHolderdd 4
propertyHolderdd5 C
=ddD E
propertyddF N
.ddN O
serializedObjectddO _
.dd_ `
targetObjectdd` l
asddm o)
TMP_SerializedPropertyHolder	ddp å
;
ddå ç
TMP_FontAssetee %
	fontAssetee& /
=ee0 1
propertyHolderee2 @
.ee@ A
	fontAsseteeA J
;eeJ K
ifff 
(ff 
	fontAssetff %
!=ff& (
nullff) -
)ff- .
{gg  
prop_FirstGlyphIndexhh 0
.hh0 1
intValuehh1 9
=hh: ;
(hh< =
inthh= @
)hh@ A
	fontAssethhA J
.hhJ K
GetGlyphIndexhhK X
(hhX Y
unicodehhY `
)hh` a
;hha b
propertyHolderii *
.ii* +
firstCharacterii+ 9
=ii: ;
unicodeii< C
;iiC D
}jj 
}kk 
}ll 
ifnn 
(nn 
	EditorGUInn 
.nn 
EndChangeChecknn ,
(nn, -
)nn- .
)nn. /
m_FirstCharacteroo $
=oo% &
firstCharacteroo' 5
;oo5 6
rectrr 
.rr 
xrr 
+=rr 
widthrr 
/rr  !
$numrr" #
*rr$ %
$numrr& *
;rr* +
EditorGUIUtilitytt  
.tt  !

labelWidthtt! +
=tt, -
$numtt. 1
;tt1 2
	EditorGUIuu 
.uu 
BeginChangeCheckuu *
(uu* +
)uu+ ,
;uu, -
	EditorGUIvv 
.vv 
PropertyFieldvv '
(vv' (
rectvv( ,
,vv, - 
prop_FirstGlyphIndexvv. B
,vvB C
newvvD G

GUIContentvvH R
(vvR S
$strvvS X
)vvX Y
)vvY Z
;vvZ [
ifww 
(ww 
	EditorGUIww 
.ww 
EndChangeCheckww ,
(ww, -
)ww- .
)ww. /
{xx 
}zz 
GUI|| 
.|| 
enabled|| 
=|| 
isEditingEnabled|| .
;||. /
EditorGUIUtility}}  
.}}  !

labelWidth}}! +
=}}, -
$num}}. 1
;}}1 2
rect 
= 
new 
Rect 
(  
position  (
.( )
x) *
,* +
position, 4
.4 5
y5 6
+7 8
$num9 ;
,; <
width= B
*C D
$numE I
-J K
paddingL S
,S T
$numU W
)W X
;X Y
	EditorGUI
ÄÄ 
.
ÄÄ 
PropertyField
ÄÄ '
(
ÄÄ' (
rect
ÄÄ( ,
,
ÄÄ, -(
prop_FirstGlyphValueRecord
ÄÄ. H
.
ÄÄH I"
FindPropertyRelative
ÄÄI ]
(
ÄÄ] ^
$str
ÄÄ^ l
)
ÄÄl m
,
ÄÄm n
new
ÄÄo r

GUIContent
ÄÄs }
(
ÄÄ} ~
$strÄÄ~ Ç
)ÄÄÇ É
)ÄÄÉ Ñ
;ÄÄÑ Ö
rect
ÇÇ 
.
ÇÇ 
x
ÇÇ 
+=
ÇÇ 
width
ÇÇ 
*
ÇÇ  !
$num
ÇÇ" &
;
ÇÇ& '
	EditorGUI
ÉÉ 
.
ÉÉ 
PropertyField
ÉÉ '
(
ÉÉ' (
rect
ÉÉ( ,
,
ÉÉ, -(
prop_FirstGlyphValueRecord
ÉÉ. H
.
ÉÉH I"
FindPropertyRelative
ÉÉI ]
(
ÉÉ] ^
$str
ÉÉ^ l
)
ÉÉl m
,
ÉÉm n
new
ÉÉo r

GUIContent
ÉÉs }
(
ÉÉ} ~
$strÉÉ~ Ç
)ÉÉÇ É
)ÉÉÉ Ñ
;ÉÉÑ Ö
rect
ÖÖ 
.
ÖÖ 
x
ÖÖ 
=
ÖÖ 
position
ÖÖ !
.
ÖÖ! "
x
ÖÖ" #
;
ÖÖ# $
rect
ÜÜ 
.
ÜÜ 
y
ÜÜ 
+=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
	EditorGUI
áá 
.
áá 
PropertyField
áá '
(
áá' (
rect
áá( ,
,
áá, -(
prop_FirstGlyphValueRecord
áá. H
.
ááH I"
FindPropertyRelative
ááI ]
(
áá] ^
$str
áá^ j
)
ááj k
,
áák l
new
áám p

GUIContent
ááq {
(
áá{ |
$stráá| Ä
)ááÄ Å
)ááÅ Ç
;ááÇ É
}
åå 
GUI
êê 
.
êê 
enabled
êê 
=
êê 
isEditingEnabled
êê *
;
êê* +
if
ëë 
(
ëë 
isSelectable
ëë 
)
ëë 
{
íí 
float
ìì 

labelWidth
ìì  
=
ìì! "
GUI
ìì# &
.
ìì& '
skin
ìì' +
.
ìì+ ,
label
ìì, 1
.
ìì1 2
CalcSize
ìì2 :
(
ìì: ;
new
ìì; >

GUIContent
ìì? I
(
ììI J
$str
ììJ P
+
ììQ R#
prop_SecondGlyphIndex
ììS h
.
ììh i
intValue
ììi q
)
ììq r
)
ììr s
.
ììs t
x
ììt u
;
ììu v
	EditorGUI
îî 
.
îî 

LabelField
îî $
(
îî$ %
new
îî% (
Rect
îî) -
(
îî- .
position
îî. 6
.
îî6 7
width
îî7 <
/
îî= >
$num
îî? @
+
îîA B
$num
îîC E
+
îîF G
(
îîH I
$num
îîI K
-
îîL M

labelWidth
îîN X
)
îîX Y
/
îîZ [
$num
îî\ ]
,
îî] ^
position
îî_ g
.
îîg h
y
îîh i
+
îîj k
$num
îîl n
,
îîn o
$num
îîp s
,
îîs t
$num
îîu x
)
îîx y
,
îîy z
new
îî{ ~

GUIContentîî â
(îîâ ä
$strîîä ü
+îî† °%
prop_SecondGlyphIndexîî¢ ∑
.îî∑ ∏
intValueîî∏ ¿
+îî¡ ¬
$strîî√ Õ
)îîÕ Œ
,îîŒ œ
styleîî– ’
)îî’ ÷
;îî÷ ◊
GUI
ññ 
.
ññ 
enabled
ññ 
=
ññ 
isEditingEnabled
ññ .
;
ññ. /
EditorGUIUtility
óó  
.
óó  !

labelWidth
óó! +
=
óó, -
$num
óó. 1
;
óó1 2
rect
ôô 
=
ôô 
new
ôô 
Rect
ôô 
(
ôô  
position
ôô  (
.
ôô( )
width
ôô) .
/
ôô/ 0
$num
ôô1 2
+
ôô3 4
$num
ôô5 7
+
ôô8 9
$num
ôô: <
,
ôô< =
position
ôô> F
.
ôôF G
y
ôôG H
+
ôôI J
$num
ôôK M
,
ôôM N
(
ôôO P
width
ôôP U
-
ôôV W
$num
ôôX Z
)
ôôZ [
-
ôô\ ]
padding
ôô^ e
,
ôôe f
$num
ôôg i
)
ôôi j
;
ôôj k
	EditorGUI
öö 
.
öö 
PropertyField
öö '
(
öö' (
rect
öö( ,
,
öö, -)
prop_SecondGlyphValueRecord
öö. I
.
ööI J"
FindPropertyRelative
ööJ ^
(
öö^ _
$str
öö_ m
)
ööm n
,
öön o
new
ööp s

GUIContent
ööt ~
(
öö~ 
$ströö Ñ
)ööÑ Ö
)ööÖ Ü
;ööÜ á
rect
úú 
.
úú 
y
úú 
+=
úú 
$num
úú 
;
úú 
	EditorGUI
ùù 
.
ùù 
PropertyField
ùù '
(
ùù' (
rect
ùù( ,
,
ùù, -)
prop_SecondGlyphValueRecord
ùù. I
.
ùùI J"
FindPropertyRelative
ùùJ ^
(
ùù^ _
$str
ùù_ m
)
ùùm n
,
ùùn o
new
ùùp s

GUIContent
ùùt ~
(
ùù~ 
$strùù Ñ
)ùùÑ Ö
)ùùÖ Ü
;ùùÜ á
rect
üü 
.
üü 
y
üü 
+=
üü 
$num
üü 
;
üü 
	EditorGUI
†† 
.
†† 
PropertyField
†† '
(
††' (
rect
††( ,
,
††, -)
prop_SecondGlyphValueRecord
††. I
.
††I J"
FindPropertyRelative
††J ^
(
††^ _
$str
††_ k
)
††k l
,
††l m
new
††n q

GUIContent
††r |
(
††| }
$str††} Ç
)††Ç É
)††É Ñ
;††Ñ Ö
	DrawGlyph
•• 
(
•• 
(
•• 
uint
•• 
)
••  #
prop_SecondGlyphIndex
••  5
.
••5 6
intValue
••6 >
,
••> ?
new
••@ C
Rect
••D H
(
••H I
position
••I Q
.
••Q R
width
••R W
/
••X Y
$num
••Z [
+
••\ ]
$num
••^ `
,
••` a
position
••b j
.
••j k
y
••k l
,
••l m
position
••n v
.
••v w
width
••w |
,
••| }
position••~ Ü
.••Ü á
height••á ç
)••ç é
,••é è
property••ê ò
)••ò ô
;••ô ö
}
¶¶ 
else
ßß 
{
®® 
rect
©© 
=
©© 
new
©© 
Rect
©© 
(
©©  
position
©©  (
.
©©( )
width
©©) .
/
©©/ 0
$num
©©1 2
+
©©3 4
$num
©©5 7
,
©©7 8
position
©©9 A
.
©©A B
y
©©B C
,
©©C D
width
©©E J
/
©©K L
$num
©©M N
*
©©O P
$num
©©Q U
-
©©V W
padding
©©X _
,
©©_ `
$num
©©a c
)
©©c d
;
©©d e
EditorGUIUtility
™™  
.
™™  !

labelWidth
™™! +
=
™™, -
$num
™™. 1
;
™™1 2
GUI
≠≠ 
.
≠≠  
SetNextControlName
≠≠ &
(
≠≠& '
$str
≠≠' =
)
≠≠= >
;
≠≠> ?
	EditorGUI
ÆÆ 
.
ÆÆ 
BeginChangeCheck
ÆÆ *
(
ÆÆ* +
)
ÆÆ+ ,
;
ÆÆ, -
string
ØØ 
secondCharacter
ØØ &
=
ØØ' (
	EditorGUI
ØØ) 2
.
ØØ2 3
	TextField
ØØ3 <
(
ØØ< =
rect
ØØ= A
,
ØØA B'
s_CharacterTextFieldLabel
ØØC \
,
ØØ\ ]
m_SecondCharacter
ØØ^ o
)
ØØo p
;
ØØp q
if
±± 
(
±± 
GUI
±± 
.
±± %
GetNameOfFocusedControl
±± /
(
±±/ 0
)
±±0 1
==
±±2 4
$str
±±5 K
)
±±K L
{
≤≤ 
if
≥≥ 
(
≥≥ 
ValidateInput
≥≥ %
(
≥≥% &
secondCharacter
≥≥& 5
)
≥≥5 6
)
≥≥6 7
{
¥¥ 
uint
∑∑ 
unicode
∑∑ $
=
∑∑% &!
GetUnicodeCharacter
∑∑' :
(
∑∑: ;
secondCharacter
∑∑; J
)
∑∑J K
;
∑∑K L*
TMP_SerializedPropertyHolder
∫∫ 4
propertyHolder
∫∫5 C
=
∫∫D E
property
∫∫F N
.
∫∫N O
serializedObject
∫∫O _
.
∫∫_ `
targetObject
∫∫` l
as
∫∫m o+
TMP_SerializedPropertyHolder∫∫p å
;∫∫å ç
TMP_FontAsset
ªª %
	fontAsset
ªª& /
=
ªª0 1
propertyHolder
ªª2 @
.
ªª@ A
	fontAsset
ªªA J
;
ªªJ K
if
ºº 
(
ºº 
	fontAsset
ºº %
!=
ºº& (
null
ºº) -
)
ºº- .
{
ΩΩ #
prop_SecondGlyphIndex
ææ 1
.
ææ1 2
intValue
ææ2 :
=
ææ; <
(
ææ= >
int
ææ> A
)
ææA B
	fontAsset
ææB K
.
ææK L
GetGlyphIndex
ææL Y
(
ææY Z
unicode
ææZ a
)
ææa b
;
ææb c
propertyHolder
øø *
.
øø* +
secondCharacter
øø+ :
=
øø; <
unicode
øø= D
;
øøD E
}
¿¿ 
}
¡¡ 
}
¬¬ 
if
ƒƒ 
(
ƒƒ 
	EditorGUI
ƒƒ 
.
ƒƒ 
EndChangeCheck
ƒƒ ,
(
ƒƒ, -
)
ƒƒ- .
)
ƒƒ. /
m_SecondCharacter
≈≈ %
=
≈≈& '
secondCharacter
≈≈( 7
;
≈≈7 8
rect
»» 
.
»» 
x
»» 
+=
»» 
width
»» 
/
»»  !
$num
»»" #
*
»»$ %
$num
»»& *
;
»»* +
EditorGUIUtility
    
.
    !

labelWidth
  ! +
=
  , -
$num
  . 1
;
  1 2
	EditorGUI
ÀÀ 
.
ÀÀ 
BeginChangeCheck
ÀÀ *
(
ÀÀ* +
)
ÀÀ+ ,
;
ÀÀ, -
	EditorGUI
ÃÃ 
.
ÃÃ 
PropertyField
ÃÃ '
(
ÃÃ' (
rect
ÃÃ( ,
,
ÃÃ, -#
prop_SecondGlyphIndex
ÃÃ. C
,
ÃÃC D
new
ÃÃE H

GUIContent
ÃÃI S
(
ÃÃS T
$str
ÃÃT Y
)
ÃÃY Z
)
ÃÃZ [
;
ÃÃ[ \
if
ÕÕ 
(
ÕÕ 
	EditorGUI
ÕÕ 
.
ÕÕ 
EndChangeCheck
ÕÕ ,
(
ÕÕ, -
)
ÕÕ- .
)
ÕÕ. /
{
ŒŒ 
}
–– 
GUI
““ 
.
““ 
enabled
““ 
=
““ 
isEditingEnabled
““ .
;
““. /
EditorGUIUtility
””  
.
””  !

labelWidth
””! +
=
””, -
$num
””. 1
;
””1 2
rect
’’ 
=
’’ 
new
’’ 
Rect
’’ 
(
’’  
position
’’  (
.
’’( )
width
’’) .
/
’’/ 0
$num
’’1 2
+
’’3 4
$num
’’5 7
,
’’7 8
position
’’9 A
.
’’A B
y
’’B C
+
’’D E
$num
’’F H
,
’’H I
width
’’J O
*
’’P Q
$num
’’R V
-
’’W X
padding
’’Y `
,
’’` a
$num
’’b d
)
’’d e
;
’’e f
	EditorGUI
÷÷ 
.
÷÷ 
PropertyField
÷÷ '
(
÷÷' (
rect
÷÷( ,
,
÷÷, -)
prop_SecondGlyphValueRecord
÷÷. I
.
÷÷I J"
FindPropertyRelative
÷÷J ^
(
÷÷^ _
$str
÷÷_ m
)
÷÷m n
,
÷÷n o
new
÷÷p s

GUIContent
÷÷t ~
(
÷÷~ 
$str÷÷ É
)÷÷É Ñ
)÷÷Ñ Ö
;÷÷Ö Ü
rect
ÿÿ 
.
ÿÿ 
x
ÿÿ 
+=
ÿÿ 
width
ÿÿ 
*
ÿÿ  !
$num
ÿÿ" &
;
ÿÿ& '
	EditorGUI
ŸŸ 
.
ŸŸ 
PropertyField
ŸŸ '
(
ŸŸ' (
rect
ŸŸ( ,
,
ŸŸ, -)
prop_SecondGlyphValueRecord
ŸŸ. I
.
ŸŸI J"
FindPropertyRelative
ŸŸJ ^
(
ŸŸ^ _
$str
ŸŸ_ m
)
ŸŸm n
,
ŸŸn o
new
ŸŸp s

GUIContent
ŸŸt ~
(
ŸŸ~ 
$strŸŸ É
)ŸŸÉ Ñ
)ŸŸÑ Ö
;ŸŸÖ Ü
rect
€€ 
.
€€ 
x
€€ 
=
€€ 
position
€€ !
.
€€! "
width
€€" '
/
€€( )
$num
€€* +
+
€€, -
$num
€€. 0
;
€€0 1
rect
‹‹ 
.
‹‹ 
y
‹‹ 
+=
‹‹ 
$num
‹‹ 
;
‹‹ 
	EditorGUI
›› 
.
›› 
PropertyField
›› '
(
››' (
rect
››( ,
,
››, -)
prop_SecondGlyphValueRecord
››. I
.
››I J"
FindPropertyRelative
››J ^
(
››^ _
$str
››_ k
)
››k l
,
››l m
new
››n q

GUIContent
››r |
(
››| }
$str››} Å
)››Å Ç
)››Ç É
;››É Ñ
}
·· 
if
‰‰ 
(
‰‰ 
isSelectable
‰‰ 
)
‰‰ 
{
ÂÂ 
EditorGUIUtility
ÊÊ  
.
ÊÊ  !

labelWidth
ÊÊ! +
=
ÊÊ, -
$num
ÊÊ. 1
;
ÊÊ1 2
rect
ËË 
.
ËË 
x
ËË 
=
ËË 
position
ËË !
.
ËË! "
width
ËË" '
-
ËË( )
$num
ËË* -
;
ËË- .
rect
ÈÈ 
.
ÈÈ 
y
ÈÈ 
+=
ÈÈ 
$num
ÈÈ 
;
ÈÈ 
rect
ÍÍ 
.
ÍÍ 
width
ÍÍ 
=
ÍÍ 
$num
ÍÍ  
;
ÍÍ  !$
FontFeatureLookupFlags
ÏÏ &
flags
ÏÏ' ,
=
ÏÏ- .
(
ÏÏ/ 0$
FontFeatureLookupFlags
ÏÏ0 F
)
ÏÏF G)
prop_FontFeatureLookupFlags
ÏÏG b
.
ÏÏb c
intValue
ÏÏc k
;
ÏÏk l
	EditorGUI
ÓÓ 
.
ÓÓ 
BeginChangeCheck
ÓÓ *
(
ÓÓ* +
)
ÓÓ+ ,
;
ÓÓ, -
flags
ÔÔ 
=
ÔÔ 
(
ÔÔ $
FontFeatureLookupFlags
ÔÔ /
)
ÔÔ/ 0
	EditorGUI
ÔÔ0 9
.
ÔÔ9 :
EnumFlagsField
ÔÔ: H
(
ÔÔH I
rect
ÔÔI M
,
ÔÔM N
new
ÔÔO R

GUIContent
ÔÔS ]
(
ÔÔ] ^
$str
ÔÔ^ h
)
ÔÔh i
,
ÔÔi j
flags
ÔÔk p
)
ÔÔp q
;
ÔÔq r
if
 
(
 
	EditorGUI
 
.
 
EndChangeCheck
 ,
(
, -
)
- .
)
. /
{
ÒÒ )
prop_FontFeatureLookupFlags
ÚÚ /
.
ÚÚ/ 0
intValue
ÚÚ0 8
=
ÚÚ9 :
(
ÚÚ; <
int
ÚÚ< ?
)
ÚÚ? @
flags
ÚÚ@ E
;
ÚÚE F
}
ÛÛ 
}
ÙÙ 
}
ˆˆ 	
bool
¯¯ 
ValidateInput
¯¯ 
(
¯¯ 
string
¯¯ !
source
¯¯" (
)
¯¯( )
{
˘˘ 	
int
˙˙ 
length
˙˙ 
=
˙˙ 
string
˙˙ 
.
˙˙  
IsNullOrEmpty
˙˙  -
(
˙˙- .
source
˙˙. 4
)
˙˙4 5
?
˙˙6 7
$num
˙˙8 9
:
˙˙: ;
source
˙˙< B
.
˙˙B C
Length
˙˙C I
;
˙˙I J
Event
˝˝ 
evt
˝˝ 
=
˝˝ 
Event
˝˝ 
.
˝˝ 
current
˝˝ %
;
˝˝% &
char
ˇˇ 
c
ˇˇ 
=
ˇˇ 
evt
ˇˇ 
.
ˇˇ 
	character
ˇˇ "
;
ˇˇ" #
if
ÅÅ 
(
ÅÅ 
c
ÅÅ 
!=
ÅÅ 
$char
ÅÅ 
)
ÅÅ 
{
ÇÇ 
switch
ÉÉ 
(
ÉÉ 
length
ÉÉ 
)
ÉÉ 
{
ÑÑ 
case
ÖÖ 
$num
ÖÖ 
:
ÖÖ 
break
ÜÜ 
;
ÜÜ 
case
áá 
$num
áá 
:
áá 
if
àà 
(
àà 
source
àà "
!=
àà# %
m_PreviousInput
àà& 5
)
àà5 6
return
ââ "
true
ââ# '
;
ââ' (
if
ãã 
(
ãã 
(
ãã 
source
ãã #
[
ãã# $
$num
ãã$ %
]
ãã% &
==
ãã' )
$char
ãã* .
&&
ãã/ 1
(
ãã2 3
c
ãã3 4
==
ãã5 7
$char
ãã8 ;
||
ãã< >
c
ãã? @
==
ããA C
$char
ããD G
)
ããG H
)
ããH I
==
ããJ L
false
ããM R
)
ããR S
evt
åå 
.
åå  
	character
åå  )
=
åå* +
$char
åå, 0
;
åå0 1
break
éé 
;
éé 
case
èè 
$num
èè 
:
èè 
case
êê 
$num
êê 
:
êê 
case
ëë 
$num
ëë 
:
ëë 
case
íí 
$num
íí 
:
íí 
if
ìì 
(
ìì 
(
ìì 
c
ìì 
<
ìì  
$char
ìì! $
||
ìì% '
c
ìì( )
>
ìì* +
$char
ìì, /
)
ìì/ 0
&&
ìì1 3
(
ìì4 5
c
ìì5 6
<
ìì7 8
$char
ìì9 <
||
ìì= ?
c
ìì@ A
>
ììB C
$char
ììD G
)
ììG H
&&
ììI K
(
ììL M
c
ììM N
<
ììO P
$char
ììQ T
||
ììU W
c
ììX Y
>
ììZ [
$char
ìì\ _
)
ìì_ `
)
ìì` a
evt
îî 
.
îî  
	character
îî  )
=
îî* +
$char
îî, 0
;
îî0 1
break
ïï 
;
ïï 
case
ññ 
$num
ññ 
:
ññ 
case
óó 
$num
óó 
:
óó 
case
òò 
$num
òò 
:
òò 
case
ôô 
$num
ôô 
:
ôô 
if
öö 
(
öö 
source
öö "
[
öö" #
$num
öö# $
]
öö$ %
==
öö& (
$char
öö) ,
||
öö- /
(
öö0 1
c
öö1 2
<
öö3 4
$char
öö5 8
||
öö9 ;
c
öö< =
>
öö> ?
$char
öö@ C
)
ööC D
&&
ööE G
(
ööH I
c
ööI J
<
ööK L
$char
ööM P
||
ööQ S
c
ööT U
>
ööV W
$char
ööX [
)
öö[ \
&&
öö] _
(
öö` a
c
ööa b
<
ööc d
$char
ööe h
||
ööi k
c
ööl m
>
öön o
$char
ööp s
)
öös t
)
ööt u
evt
õõ 
.
õõ  
	character
õõ  )
=
õõ* +
$char
õõ, 0
;
õõ0 1
if
ûû 
(
ûû 
length
ûû "
==
ûû# %
$num
ûû& '
&&
ûû( *
source
ûû+ 1
[
ûû1 2
$num
ûû2 3
]
ûû3 4
==
ûû5 7
$char
ûû8 ;
&&
ûû< >
source
ûû? E
!=
ûûF H
m_PreviousInput
ûûI X
)
ûûX Y
return
üü "
true
üü# '
;
üü' (
break
†† 
;
†† 
case
°° 
$num
°° 
:
°° 
if
¢¢ 
(
¢¢ 
source
¢¢ "
!=
¢¢# %
m_PreviousInput
¢¢& 5
)
¢¢5 6
return
££ "
true
££# '
;
££' (
evt
•• 
.
•• 
	character
•• %
=
••& '
$char
••( ,
;
••, -
break
¶¶ 
;
¶¶ 
}
ßß 
}
®® 
m_PreviousInput
™™ 
=
™™ 
source
™™ $
;
™™$ %
return
¨¨ 
false
¨¨ 
;
¨¨ 
}
≠≠ 	
uint
ØØ !
GetUnicodeCharacter
ØØ  
(
ØØ! "
string
ØØ" (
source
ØØ) /
)
ØØ/ 0
{
∞∞ 	
uint
±± 
unicode
±± 
;
±± 
if
≥≥ 
(
≥≥ 
source
≥≥ 
.
≥≥ 
Length
≥≥ 
==
≥≥  
$num
≥≥! "
)
≥≥" #
unicode
¥¥ 
=
¥¥ 
source
¥¥  
[
¥¥  !
$num
¥¥! "
]
¥¥" #
;
¥¥# $
else
µµ 
if
µµ 
(
µµ 
source
µµ 
.
µµ 
Length
µµ "
==
µµ# %
$num
µµ& '
)
µµ' (
unicode
∂∂ 
=
∂∂ 
(
∂∂ 
uint
∂∂ 
)
∂∂  
TMP_TextUtilities
∂∂  1
.
∂∂1 2
StringHexToInt
∂∂2 @
(
∂∂@ A
source
∂∂A G
.
∂∂G H
Replace
∂∂H O
(
∂∂O P
$str
∂∂P U
,
∂∂U V
$str
∂∂W Y
)
∂∂Y Z
)
∂∂Z [
;
∂∂[ \
else
∑∑ 
unicode
∏∏ 
=
∏∏ 
(
∏∏ 
uint
∏∏ 
)
∏∏  
TMP_TextUtilities
∏∏  1
.
∏∏1 2
StringHexToInt
∏∏2 @
(
∏∏@ A
source
∏∏A G
.
∏∏G H
Replace
∏∏H O
(
∏∏O P
$str
∏∏P U
,
∏∏U V
$str
∏∏W Y
)
∏∏Y Z
)
∏∏Z [
;
∏∏[ \
return
∫∫ 
unicode
∫∫ 
;
∫∫ 
}
ªª 	
void
ΩΩ 
	DrawGlyph
ΩΩ 
(
ΩΩ 
uint
ΩΩ 

glyphIndex
ΩΩ &
,
ΩΩ& '
Rect
ΩΩ( ,
position
ΩΩ- 5
,
ΩΩ5 6 
SerializedProperty
ΩΩ7 I
property
ΩΩJ R
)
ΩΩR S
{
ææ 	
TMP_FontAsset
¿¿ 
	fontAsset
¿¿ #
=
¿¿$ %
property
¿¿& .
.
¿¿. /
serializedObject
¿¿/ ?
.
¿¿? @
targetObject
¿¿@ L
as
¿¿M O
TMP_FontAsset
¿¿P ]
;
¿¿] ^
if
¬¬ 
(
¬¬ 
	fontAsset
¬¬ 
==
¬¬ 
null
¬¬ !
)
¬¬! "
return
√√ 
;
√√ 
Glyph
≈≈ 
glyph
≈≈ 
;
≈≈ 
if
»» 
(
»» 
!
»» 
	fontAsset
»» 
.
»» 
glyphLookupTable
»» +
.
»»+ ,
TryGetValue
»», 7
(
»»7 8

glyphIndex
»»8 B
,
»»B C
out
»»D G
glyph
»»H M
)
»»M N
)
»»N O
return
…… 
;
…… 
int
ÃÃ 

atlasIndex
ÃÃ 
=
ÃÃ 
glyph
ÃÃ "
.
ÃÃ" #

atlasIndex
ÃÃ# -
;
ÃÃ- .
	Texture2D
ÕÕ 
atlasTexture
ÕÕ "
=
ÕÕ# $
	fontAsset
ÕÕ% .
.
ÕÕ. /
atlasTextures
ÕÕ/ <
.
ÕÕ< =
Length
ÕÕ= C
>
ÕÕD E

atlasIndex
ÕÕF P
?
ÕÕQ R
	fontAsset
ÕÕS \
.
ÕÕ\ ]
atlasTextures
ÕÕ] j
[
ÕÕj k

atlasIndex
ÕÕk u
]
ÕÕu v
:
ÕÕw x
null
ÕÕy }
;
ÕÕ} ~
if
œœ 
(
œœ 
atlasTexture
œœ 
==
œœ 
null
œœ  $
)
œœ$ %
return
–– 
;
–– 
Material
““ 
mat
““ 
;
““ 
if
”” 
(
”” 
(
”” 
(
”” 
GlyphRasterModes
”” "
)
””" #
	fontAsset
””# ,
.
””, -
atlasRenderMode
””- <
&
””= >
GlyphRasterModes
””? O
.
””O P 
RASTER_MODE_BITMAP
””P b
)
””b c
==
””d f
GlyphRasterModes
””g w
.
””w x!
RASTER_MODE_BITMAP””x ä
)””ä ã
{
‘‘ 
mat
’’ 
=
’’ !
TMP_FontAssetEditor
’’ )
.
’’) *$
internalBitmapMaterial
’’* @
;
’’@ A
if
◊◊ 
(
◊◊ 
mat
◊◊ 
==
◊◊ 
null
◊◊ 
)
◊◊  
return
ÿÿ 
;
ÿÿ 
mat
⁄⁄ 
.
⁄⁄ 
mainTexture
⁄⁄ 
=
⁄⁄  !
atlasTexture
⁄⁄" .
;
⁄⁄. /
}
€€ 
else
‹‹ 
{
›› 
mat
ﬁﬁ 
=
ﬁﬁ !
TMP_FontAssetEditor
ﬁﬁ )
.
ﬁﬁ) *!
internalSDFMaterial
ﬁﬁ* =
;
ﬁﬁ= >
if
‡‡ 
(
‡‡ 
mat
‡‡ 
==
‡‡ 
null
‡‡ 
)
‡‡  
return
·· 
;
·· 
mat
„„ 
.
„„ 
mainTexture
„„ 
=
„„  !
atlasTexture
„„" .
;
„„. /
mat
‰‰ 
.
‰‰ 
SetFloat
‰‰ 
(
‰‰ 
ShaderUtilities
‰‰ ,
.
‰‰, -
ID_GradientScale
‰‰- =
,
‰‰= >
	fontAsset
‰‰? H
.
‰‰H I
atlasPadding
‰‰I U
+
‰‰V W
$num
‰‰X Y
)
‰‰Y Z
;
‰‰Z [
}
ÂÂ 
Rect
ËË 
glyphDrawPosition
ËË "
=
ËË# $
new
ËË% (
Rect
ËË) -
(
ËË- .
position
ËË. 6
.
ËË6 7
x
ËË7 8
,
ËË8 9
position
ËË: B
.
ËËB C
y
ËËC D
+
ËËE F
$num
ËËG H
,
ËËH I
$num
ËËJ L
,
ËËL M
$num
ËËN P
)
ËËP Q
;
ËËQ R
	GlyphRect
ÍÍ 
	glyphRect
ÍÍ 
=
ÍÍ  !
glyph
ÍÍ" '
.
ÍÍ' (
	glyphRect
ÍÍ( 1
;
ÍÍ1 2
int
ÏÏ 
padding
ÏÏ 
=
ÏÏ 
	fontAsset
ÏÏ #
.
ÏÏ# $
atlasPadding
ÏÏ$ 0
;
ÏÏ0 1
int
ÓÓ 
glyphOriginX
ÓÓ 
=
ÓÓ 
	glyphRect
ÓÓ (
.
ÓÓ( )
x
ÓÓ) *
-
ÓÓ+ ,
padding
ÓÓ- 4
;
ÓÓ4 5
int
ÔÔ 
glyphOriginY
ÔÔ 
=
ÔÔ 
	glyphRect
ÔÔ (
.
ÔÔ( )
y
ÔÔ) *
-
ÔÔ+ ,
padding
ÔÔ- 4
;
ÔÔ4 5
int
 

glyphWidth
 
=
 
	glyphRect
 &
.
& '
width
' ,
+
- .
padding
/ 6
*
7 8
$num
9 :
;
: ;
int
ÒÒ 
glyphHeight
ÒÒ 
=
ÒÒ 
	glyphRect
ÒÒ '
.
ÒÒ' (
height
ÒÒ( .
+
ÒÒ/ 0
padding
ÒÒ1 8
*
ÒÒ9 :
$num
ÒÒ; <
;
ÒÒ< =
float
ÛÛ 
normalizedHeight
ÛÛ "
=
ÛÛ# $
	fontAsset
ÛÛ% .
.
ÛÛ. /
faceInfo
ÛÛ/ 7
.
ÛÛ7 8

ascentLine
ÛÛ8 B
-
ÛÛC D
	fontAsset
ÛÛE N
.
ÛÛN O
faceInfo
ÛÛO W
.
ÛÛW X
descentLine
ÛÛX c
;
ÛÛc d
float
ÙÙ 
scale
ÙÙ 
=
ÙÙ 
glyphDrawPosition
ÙÙ +
.
ÙÙ+ ,
width
ÙÙ, 1
/
ÙÙ2 3
normalizedHeight
ÙÙ4 D
;
ÙÙD E
Rect
˜˜ 
	texCoords
˜˜ 
=
˜˜ 
new
˜˜  
Rect
˜˜! %
(
˜˜% &
(
˜˜& '
float
˜˜' ,
)
˜˜, -
glyphOriginX
˜˜- 9
/
˜˜: ;
atlasTexture
˜˜< H
.
˜˜H I
width
˜˜I N
,
˜˜N O
(
˜˜P Q
float
˜˜Q V
)
˜˜V W
glyphOriginY
˜˜W c
/
˜˜d e
atlasTexture
˜˜f r
.
˜˜r s
height
˜˜s y
,
˜˜y z
(
˜˜{ |
float˜˜| Å
)˜˜Å Ç

glyphWidth˜˜Ç å
/˜˜ç é
atlasTexture˜˜è õ
.˜˜õ ú
width˜˜ú °
,˜˜° ¢
(˜˜£ §
float˜˜§ ©
)˜˜© ™
glyphHeight˜˜™ µ
/˜˜∂ ∑
atlasTexture˜˜∏ ƒ
.˜˜ƒ ≈
height˜˜≈ À
)˜˜À Ã
;˜˜Ã Õ
if
˘˘ 
(
˘˘ 
Event
˘˘ 
.
˘˘ 
current
˘˘ 
.
˘˘ 
type
˘˘ "
==
˘˘# %
	EventType
˘˘& /
.
˘˘/ 0
Repaint
˘˘0 7
)
˘˘7 8
{
˙˙ 
glyphDrawPosition
˚˚ !
.
˚˚! "
x
˚˚" #
+=
˚˚$ &
(
˚˚' (
glyphDrawPosition
˚˚( 9
.
˚˚9 :
width
˚˚: ?
-
˚˚@ A

glyphWidth
˚˚B L
*
˚˚M N
scale
˚˚O T
)
˚˚T U
/
˚˚V W
$num
˚˚X Y
;
˚˚Y Z
glyphDrawPosition
¸¸ !
.
¸¸! "
y
¸¸" #
+=
¸¸$ &
(
¸¸' (
glyphDrawPosition
¸¸( 9
.
¸¸9 :
height
¸¸: @
-
¸¸A B
glyphHeight
¸¸C N
*
¸¸O P
scale
¸¸Q V
)
¸¸V W
/
¸¸X Y
$num
¸¸Z [
;
¸¸[ \
glyphDrawPosition
˝˝ !
.
˝˝! "
width
˝˝" '
=
˝˝( )

glyphWidth
˝˝* 4
*
˝˝5 6
scale
˝˝7 <
;
˝˝< =
glyphDrawPosition
˛˛ !
.
˛˛! "
height
˛˛" (
=
˛˛) *
glyphHeight
˛˛+ 6
*
˛˛7 8
scale
˛˛9 >
;
˛˛> ?
Graphics
ÅÅ 
.
ÅÅ 
DrawTexture
ÅÅ $
(
ÅÅ$ %
glyphDrawPosition
ÅÅ% 6
,
ÅÅ6 7
atlasTexture
ÅÅ8 D
,
ÅÅD E
	texCoords
ÅÅF O
,
ÅÅO P
$num
ÅÅQ R
,
ÅÅR S
$num
ÅÅT U
,
ÅÅU V
$num
ÅÅW X
,
ÅÅX Y
$num
ÅÅZ [
,
ÅÅ[ \
new
ÅÅ] `
Color
ÅÅa f
(
ÅÅf g
$num
ÅÅg i
,
ÅÅi j
$num
ÅÅk m
,
ÅÅm n
$num
ÅÅo q
)
ÅÅq r
,
ÅÅr s
mat
ÅÅt w
)
ÅÅw x
;
ÅÅx y
}
ÇÇ 
}
ÉÉ 	
}
ÜÜ 
}áá €’
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_InputFieldEditor.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{		 
[

 "
CanEditMultipleObjects

 
]

 
[ 
CustomEditor 
( 
typeof 
( 
TMP_InputField '
)' (
,( )
true* .
). /
]/ 0
public 

class  
TMP_InputFieldEditor %
:& '
SelectableEditor( 8
{ 
private 
struct 
	m_foldout  
{ 	
public 
static 
bool 
	textInput (
=) *
true+ /
;/ 0
public 
static 
bool 
fontSettings +
=, -
true. 2
;2 3
public 
static 
bool 
extraSettings ,
=- .
true/ 3
;3 4
} 	
SerializedProperty 
m_TextViewport )
;) *
SerializedProperty 
m_TextComponent *
;* +
SerializedProperty 
m_Text !
;! "
SerializedProperty 
m_ContentType (
;( )
SerializedProperty 

m_LineType %
;% &
SerializedProperty 
m_LineLimit &
;& '
SerializedProperty 
m_InputType &
;& '
SerializedProperty !
m_CharacterValidation 0
;0 1
SerializedProperty 
m_InputValidator +
;+ ,
SerializedProperty   
m_RegexValue   '
;  ' (
SerializedProperty!! 
m_KeyboardType!! )
;!!) *
SerializedProperty"" 
m_CharacterLimit"" +
;""+ ,
SerializedProperty## 
m_CaretBlinkRate## +
;##+ ,
SerializedProperty$$ 
m_CaretWidth$$ '
;$$' (
SerializedProperty%% 
m_CaretColor%% '
;%%' (
SerializedProperty&& 
m_CustomCaretColor&& -
;&&- .
SerializedProperty'' 
m_SelectionColor'' +
;''+ ,
SerializedProperty((  
m_HideMobileKeyboard(( /
;((/ 0
SerializedProperty)) 
m_HideMobileInput)) ,
;)), -
SerializedProperty** 
m_Placeholder** (
;**( )
SerializedProperty++ 
m_VerticalScrollbar++ .
;++. /
SerializedProperty,, (
m_ScrollbarScrollSensitivity,, 7
;,,7 8
SerializedProperty-- 
m_OnValueChanged-- +
;--+ ,
SerializedProperty.. 
m_OnEndEdit.. &
;..& '
SerializedProperty// 

m_OnSelect// %
;//% &
SerializedProperty00 
m_OnDeselect00 '
;00' (
SerializedProperty11 

m_ReadOnly11 %
;11% &
SerializedProperty22 

m_RichText22 %
;22% &
SerializedProperty33 $
m_RichTextEditingAllowed33 3
;333 4
SerializedProperty44 !
m_ResetOnDeActivation44 0
;440 1
SerializedProperty55 )
m_RestoreOriginalTextOnEscape55 8
;558 9
SerializedProperty77 
m_OnFocusSelectAll77 -
;77- .
SerializedProperty88 
m_GlobalPointSize88 ,
;88, -
SerializedProperty99 
m_GlobalFontAsset99 ,
;99, -
AnimBool;; 
m_CustomColor;; 
;;; 
	protected?? 
override?? 
void?? 
OnEnable??  (
(??( )
)??) *
{@@ 	
baseAA 
.AA 
OnEnableAA 
(AA 
)AA 
;AA 
m_TextViewportCC 
=CC 
serializedObjectCC -
.CC- .
FindPropertyCC. :
(CC: ;
$strCC; K
)CCK L
;CCL M
m_TextComponentDD 
=DD 
serializedObjectDD .
.DD. /
FindPropertyDD/ ;
(DD; <
$strDD< M
)DDM N
;DDN O
m_TextEE 
=EE 
serializedObjectEE %
.EE% &
FindPropertyEE& 2
(EE2 3
$strEE3 ;
)EE; <
;EE< =
m_ContentTypeFF 
=FF 
serializedObjectFF ,
.FF, -
FindPropertyFF- 9
(FF9 :
$strFF: I
)FFI J
;FFJ K

m_LineTypeGG 
=GG 
serializedObjectGG )
.GG) *
FindPropertyGG* 6
(GG6 7
$strGG7 C
)GGC D
;GGD E
m_LineLimitHH 
=HH 
serializedObjectHH *
.HH* +
FindPropertyHH+ 7
(HH7 8
$strHH8 E
)HHE F
;HHF G
m_InputTypeII 
=II 
serializedObjectII *
.II* +
FindPropertyII+ 7
(II7 8
$strII8 E
)IIE F
;IIF G!
m_CharacterValidationJJ !
=JJ" #
serializedObjectJJ$ 4
.JJ4 5
FindPropertyJJ5 A
(JJA B
$strJJB Y
)JJY Z
;JJZ [
m_InputValidatorKK 
=KK 
serializedObjectKK /
.KK/ 0
FindPropertyKK0 <
(KK< =
$strKK= O
)KKO P
;KKP Q
m_RegexValueLL 
=LL 
serializedObjectLL +
.LL+ ,
FindPropertyLL, 8
(LL8 9
$strLL9 G
)LLG H
;LLH I
m_KeyboardTypeMM 
=MM 
serializedObjectMM -
.MM- .
FindPropertyMM. :
(MM: ;
$strMM; K
)MMK L
;MML M
m_CharacterLimitNN 
=NN 
serializedObjectNN /
.NN/ 0
FindPropertyNN0 <
(NN< =
$strNN= O
)NNO P
;NNP Q
m_CaretBlinkRateOO 
=OO 
serializedObjectOO /
.OO/ 0
FindPropertyOO0 <
(OO< =
$strOO= O
)OOO P
;OOP Q
m_CaretWidthPP 
=PP 
serializedObjectPP +
.PP+ ,
FindPropertyPP, 8
(PP8 9
$strPP9 G
)PPG H
;PPH I
m_CaretColorQQ 
=QQ 
serializedObjectQQ +
.QQ+ ,
FindPropertyQQ, 8
(QQ8 9
$strQQ9 G
)QQG H
;QQH I
m_CustomCaretColorRR 
=RR  
serializedObjectRR! 1
.RR1 2
FindPropertyRR2 >
(RR> ?
$strRR? S
)RRS T
;RRT U
m_SelectionColorSS 
=SS 
serializedObjectSS /
.SS/ 0
FindPropertySS0 <
(SS< =
$strSS= O
)SSO P
;SSP Q 
m_HideMobileKeyboardUU  
=UU! "
serializedObjectUU# 3
.UU3 4
FindPropertyUU4 @
(UU@ A
$strUUA U
)UUU V
;UUV W
m_HideMobileInputVV 
=VV 
serializedObjectVV  0
.VV0 1
FindPropertyVV1 =
(VV= >
$strVV> Q
)VVQ R
;VVR S
m_PlaceholderXX 
=XX 
serializedObjectXX ,
.XX, -
FindPropertyXX- 9
(XX9 :
$strXX: I
)XXI J
;XXJ K
m_VerticalScrollbarYY 
=YY  !
serializedObjectYY" 2
.YY2 3
FindPropertyYY3 ?
(YY? @
$strYY@ U
)YYU V
;YYV W(
m_ScrollbarScrollSensitivityZZ (
=ZZ) *
serializedObjectZZ+ ;
.ZZ; <
FindPropertyZZ< H
(ZZH I
$strZZI ^
)ZZ^ _
;ZZ_ `
m_OnValueChanged\\ 
=\\ 
serializedObject\\ /
.\\/ 0
FindProperty\\0 <
(\\< =
$str\\= O
)\\O P
;\\P Q
m_OnEndEdit]] 
=]] 
serializedObject]] *
.]]* +
FindProperty]]+ 7
(]]7 8
$str]]8 E
)]]E F
;]]F G

m_OnSelect^^ 
=^^ 
serializedObject^^ )
.^^) *
FindProperty^^* 6
(^^6 7
$str^^7 C
)^^C D
;^^D E
m_OnDeselect__ 
=__ 
serializedObject__ +
.__+ ,
FindProperty__, 8
(__8 9
$str__9 G
)__G H
;__H I

m_ReadOnly`` 
=`` 
serializedObject`` )
.``) *
FindProperty``* 6
(``6 7
$str``7 C
)``C D
;``D E

m_RichTextaa 
=aa 
serializedObjectaa )
.aa) *
FindPropertyaa* 6
(aa6 7
$straa7 C
)aaC D
;aaD E$
m_RichTextEditingAllowedbb $
=bb% &
serializedObjectbb' 7
.bb7 8
FindPropertybb8 D
(bbD E
$strbbE a
)bba b
;bbb c!
m_ResetOnDeActivationcc !
=cc" #
serializedObjectcc$ 4
.cc4 5
FindPropertycc5 A
(ccA B
$strccB Y
)ccY Z
;ccZ [)
m_RestoreOriginalTextOnEscapedd )
=dd* +
serializedObjectdd, <
.dd< =
FindPropertydd= I
(ddI J
$strddJ i
)ddi j
;ddj k
m_OnFocusSelectAllff 
=ff  
serializedObjectff! 1
.ff1 2
FindPropertyff2 >
(ff> ?
$strff? S
)ffS T
;ffT U
m_GlobalPointSizegg 
=gg 
serializedObjectgg  0
.gg0 1
FindPropertygg1 =
(gg= >
$strgg> Q
)ggQ R
;ggR S
m_GlobalFontAssethh 
=hh 
serializedObjecthh  0
.hh0 1
FindPropertyhh1 =
(hh= >
$strhh> Q
)hhQ R
;hhR S
m_CustomColorjj 
=jj 
newjj 
AnimBooljj  (
(jj( )
m_CustomCaretColorjj) ;
.jj; <
	boolValuejj< E
)jjE F
;jjF G
m_CustomColorkk 
.kk 
valueChangedkk &
.kk& '
AddListenerkk' 2
(kk2 3
Repaintkk3 :
)kk: ;
;kk; <
}ll 	
	protectednn 
overridenn 
voidnn 
	OnDisablenn  )
(nn) *
)nn* +
{oo 	
basepp 
.pp 
	OnDisablepp 
(pp 
)pp 
;pp 
m_CustomColorqq 
.qq 
valueChangedqq &
.qq& '
RemoveListenerqq' 5
(qq5 6
Repaintqq6 =
)qq= >
;qq> ?
}rr 	
publictt 
overridett 
voidtt 
OnInspectorGUItt +
(tt+ ,
)tt, -
{uu 	
serializedObjectvv 
.vv 
Updatevv #
(vv# $
)vv$ %
;vv% &
basexx 
.xx 
OnInspectorGUIxx 
(xx  
)xx  !
;xx! "
EditorGUILayoutzz 
.zz 
Spacezz !
(zz! "
)zz" #
;zz# $
EditorGUILayout|| 
.|| 
PropertyField|| )
(||) *
m_TextViewport||* 8
)||8 9
;||9 :
EditorGUILayout~~ 
.~~ 
PropertyField~~ )
(~~) *
m_TextComponent~~* 9
)~~9 :
;~~: ;
TextMeshProUGUI
ÄÄ 
text
ÄÄ  
=
ÄÄ! "
null
ÄÄ# '
;
ÄÄ' (
if
ÅÅ 
(
ÅÅ 
m_TextComponent
ÅÅ 
!=
ÅÅ  "
null
ÅÅ# '
&&
ÅÅ( *
m_TextComponent
ÅÅ+ :
.
ÅÅ: ;"
objectReferenceValue
ÅÅ; O
!=
ÅÅP R
null
ÅÅS W
)
ÅÅW X
{
ÇÇ 
text
ÉÉ 
=
ÉÉ 
m_TextComponent
ÉÉ &
.
ÉÉ& '"
objectReferenceValue
ÉÉ' ;
as
ÉÉ< >
TextMeshProUGUI
ÉÉ? N
;
ÉÉN O
}
àà 
	EditorGUI
ää 
.
ää  
BeginDisabledGroup
ää (
(
ää( )
m_TextComponent
ää) 8
==
ää9 ;
null
ää< @
||
ääA C
m_TextComponent
ääD S
.
ääS T"
objectReferenceValue
ääT h
==
ääi k
null
ääl p
)
ääp q
;
ääq r
EditorGUILayout
çç 
.
çç 
PropertyField
çç )
(
çç) *
m_Text
çç* 0
)
çç0 1
;
çç1 2
	m_foldout
íí 
.
íí 
fontSettings
íí "
=
íí# $
EditorGUILayout
íí% 4
.
íí4 5
Foldout
íí5 <
(
íí< =
	m_foldout
íí= F
.
ííF G
fontSettings
ííG S
,
ííS T
$str
ííU k
,
íík l
true
íím q
,
ííq r!
TMP_UIStyleManageríís Ö
.ííÖ Ü
boldFoldoutííÜ ë
)ííë í
;ííí ì
if
îî 
(
îî 
	m_foldout
îî 
.
îî 
fontSettings
îî &
)
îî& '
{
ïï 
	EditorGUI
ññ 
.
ññ 
indentLevel
ññ %
++
ññ% '
;
ññ' (
	EditorGUI
óó 
.
óó 
BeginChangeCheck
óó *
(
óó* +
)
óó+ ,
;
óó, -
EditorGUILayout
òò 
.
òò  
PropertyField
òò  -
(
òò- .
m_GlobalFontAsset
òò. ?
,
òò? @
new
òòA D

GUIContent
òòE O
(
òòO P
$str
òòP \
,
òò\ ]
$stròò^ §
)òò§ •
)òò• ¶
;òò¶ ß
if
ôô 
(
ôô 
	EditorGUI
ôô 
.
ôô 
EndChangeCheck
ôô ,
(
ôô, -
)
ôô- .
)
ôô. /
{
öö 
TMP_InputField
õõ "

inputField
õõ# -
=
õõ. /
target
õõ0 6
as
õõ7 9
TMP_InputField
õõ: H
;
õõH I

inputField
úú 
.
úú  
SetGlobalFontAsset
úú 1
(
úú1 2
m_GlobalFontAsset
úú2 C
.
úúC D"
objectReferenceValue
úúD X
as
úúY [
TMP_FontAsset
úú\ i
)
úúi j
;
úúj k
}
ùù 
	EditorGUI
†† 
.
†† 
BeginChangeCheck
†† *
(
††* +
)
††+ ,
;
††, -
EditorGUILayout
°° 
.
°°  
PropertyField
°°  -
(
°°- .
m_GlobalPointSize
°°. ?
,
°°? @
new
°°A D

GUIContent
°°E O
(
°°O P
$str
°°P \
,
°°\ ]
$str°°^ £
)°°£ §
)°°§ •
;°°• ¶
if
¢¢ 
(
¢¢ 
	EditorGUI
¢¢ 
.
¢¢ 
EndChangeCheck
¢¢ ,
(
¢¢, -
)
¢¢- .
)
¢¢. /
{
££ 
TMP_InputField
§§ "

inputField
§§# -
=
§§. /
target
§§0 6
as
§§7 9
TMP_InputField
§§: H
;
§§H I

inputField
•• 
.
••  
SetGlobalPointSize
•• 1
(
••1 2
m_GlobalPointSize
••2 C
.
••C D

floatValue
••D N
)
••N O
;
••O P
}
¶¶ 
	EditorGUI
®® 
.
®® 
BeginChangeCheck
®® *
(
®®* +
)
®®+ ,
;
®®, -
EditorGUILayout
©© 
.
©©  
PropertyField
©©  -
(
©©- .
m_CharacterLimit
©©. >
)
©©> ?
;
©©? @
EditorGUILayout
´´ 
.
´´  
Space
´´  %
(
´´% &
)
´´& '
;
´´' (
EditorGUILayout
≠≠ 
.
≠≠  
PropertyField
≠≠  -
(
≠≠- .
m_ContentType
≠≠. ;
)
≠≠; <
;
≠≠< =
if
ÆÆ 
(
ÆÆ 
!
ÆÆ 
m_ContentType
ÆÆ "
.
ÆÆ" #(
hasMultipleDifferentValues
ÆÆ# =
)
ÆÆ= >
{
ØØ 
	EditorGUI
∞∞ 
.
∞∞ 
indentLevel
∞∞ )
++
∞∞) +
;
∞∞+ ,
if
≤≤ 
(
≤≤ 
m_ContentType
≤≤ %
.
≤≤% &
enumValueIndex
≤≤& 4
==
≤≤5 7
(
≤≤8 9
int
≤≤9 <
)
≤≤< =
TMP_InputField
≤≤= K
.
≤≤K L
ContentType
≤≤L W
.
≤≤W X
Standard
≤≤X `
||
≤≤a c
m_ContentType
≥≥ %
.
≥≥% &
enumValueIndex
≥≥& 4
==
≥≥5 7
(
≥≥8 9
int
≥≥9 <
)
≥≥< =
TMP_InputField
≥≥= K
.
≥≥K L
ContentType
≥≥L W
.
≥≥W X
Autocorrected
≥≥X e
||
≥≥f h
m_ContentType
¥¥ %
.
¥¥% &
enumValueIndex
¥¥& 4
==
¥¥5 7
(
¥¥8 9
int
¥¥9 <
)
¥¥< =
TMP_InputField
¥¥= K
.
¥¥K L
ContentType
¥¥L W
.
¥¥W X
Custom
¥¥X ^
)
¥¥^ _
{
µµ 
	EditorGUI
∂∂ !
.
∂∂! "
BeginChangeCheck
∂∂" 2
(
∂∂2 3
)
∂∂3 4
;
∂∂4 5
EditorGUILayout
∑∑ '
.
∑∑' (
PropertyField
∑∑( 5
(
∑∑5 6

m_LineType
∑∑6 @
)
∑∑@ A
;
∑∑A B
if
∏∏ 
(
∏∏ 
	EditorGUI
∏∏ %
.
∏∏% &
EndChangeCheck
∏∏& 4
(
∏∏4 5
)
∏∏5 6
)
∏∏6 7
{
ππ 
if
∫∫ 
(
∫∫  
text
∫∫  $
!=
∫∫% '
null
∫∫( ,
)
∫∫, -
{
ªª 
if
ºº  "
(
ºº# $

m_LineType
ºº$ .
.
ºº. /
enumValueIndex
ºº/ =
==
ºº> @
(
ººA B
int
ººB E
)
ººE F
TMP_InputField
ººF T
.
ººT U
LineType
ººU ]
.
ºº] ^

SingleLine
ºº^ h
)
ººh i
text
ΩΩ$ (
.
ΩΩ( ) 
enableWordWrapping
ΩΩ) ;
=
ΩΩ< =
false
ΩΩ> C
;
ΩΩC D
else
ææ  $
{
øø  !
text
¿¿$ (
.
¿¿( ) 
enableWordWrapping
¿¿) ;
=
¿¿< =
true
¿¿> B
;
¿¿B C
}
¡¡  !
}
¬¬ 
}
√√ 
if
≈≈ 
(
≈≈ 

m_LineType
≈≈ &
.
≈≈& '
enumValueIndex
≈≈' 5
!=
≈≈6 8
(
≈≈9 :
int
≈≈: =
)
≈≈= >
TMP_InputField
≈≈> L
.
≈≈L M
LineType
≈≈M U
.
≈≈U V

SingleLine
≈≈V `
)
≈≈` a
{
∆∆ 
EditorGUILayout
«« +
.
««+ ,
PropertyField
««, 9
(
««9 :
m_LineLimit
««: E
)
««E F
;
««F G
}
»» 
}
…… 
if
ÀÀ 
(
ÀÀ 
m_ContentType
ÀÀ %
.
ÀÀ% &
enumValueIndex
ÀÀ& 4
==
ÀÀ5 7
(
ÀÀ8 9
int
ÀÀ9 <
)
ÀÀ< =
TMP_InputField
ÀÀ= K
.
ÀÀK L
ContentType
ÀÀL W
.
ÀÀW X
Custom
ÀÀX ^
)
ÀÀ^ _
{
ÃÃ 
EditorGUILayout
ÕÕ '
.
ÕÕ' (
PropertyField
ÕÕ( 5
(
ÕÕ5 6
m_InputType
ÕÕ6 A
)
ÕÕA B
;
ÕÕB C
EditorGUILayout
ŒŒ '
.
ŒŒ' (
PropertyField
ŒŒ( 5
(
ŒŒ5 6
m_KeyboardType
ŒŒ6 D
)
ŒŒD E
;
ŒŒE F
EditorGUILayout
œœ '
.
œœ' (
PropertyField
œœ( 5
(
œœ5 6#
m_CharacterValidation
œœ6 K
)
œœK L
;
œœL M
if
–– 
(
–– #
m_CharacterValidation
–– 1
.
––1 2
enumValueIndex
––2 @
==
––A C
(
––D E
int
––E H
)
––H I
TMP_InputField
––I W
.
––W X!
CharacterValidation
––X k
.
––k l
Regex
––l q
)
––q r
{
—— 
EditorGUILayout
““ +
.
““+ ,
PropertyField
““, 9
(
““9 :
m_RegexValue
““: F
)
““F G
;
““G H
}
”” 
else
‘‘ 
if
‘‘ 
(
‘‘  !#
m_CharacterValidation
‘‘! 6
.
‘‘6 7
enumValueIndex
‘‘7 E
==
‘‘F H
(
‘‘I J
int
‘‘J M
)
‘‘M N
TMP_InputField
‘‘N \
.
‘‘\ ]!
CharacterValidation
‘‘] p
.
‘‘p q
CustomValidator‘‘q Ä
)‘‘Ä Å
{
’’ 
EditorGUILayout
÷÷ +
.
÷÷+ ,
PropertyField
÷÷, 9
(
÷÷9 :
m_InputValidator
÷÷: J
)
÷÷J K
;
÷÷K L
}
◊◊ 
}
ÿÿ 
	EditorGUI
⁄⁄ 
.
⁄⁄ 
indentLevel
⁄⁄ )
--
⁄⁄) +
;
⁄⁄+ ,
}
€€ 
EditorGUILayout
›› 
.
››  
Space
››  %
(
››% &
)
››& '
;
››' (
EditorGUILayout
ﬂﬂ 
.
ﬂﬂ  
PropertyField
ﬂﬂ  -
(
ﬂﬂ- .
m_Placeholder
ﬂﬂ. ;
)
ﬂﬂ; <
;
ﬂﬂ< =
EditorGUILayout
‡‡ 
.
‡‡  
PropertyField
‡‡  -
(
‡‡- .!
m_VerticalScrollbar
‡‡. A
)
‡‡A B
;
‡‡B C
if
‚‚ 
(
‚‚ !
m_VerticalScrollbar
‚‚ '
.
‚‚' ("
objectReferenceValue
‚‚( <
!=
‚‚= ?
null
‚‚@ D
)
‚‚D E
EditorGUILayout
„„ #
.
„„# $
PropertyField
„„$ 1
(
„„1 2*
m_ScrollbarScrollSensitivity
„„2 N
)
„„N O
;
„„O P
EditorGUILayout
ÂÂ 
.
ÂÂ  
PropertyField
ÂÂ  -
(
ÂÂ- .
m_CaretBlinkRate
ÂÂ. >
)
ÂÂ> ?
;
ÂÂ? @
EditorGUILayout
ÊÊ 
.
ÊÊ  
PropertyField
ÊÊ  -
(
ÊÊ- .
m_CaretWidth
ÊÊ. :
)
ÊÊ: ;
;
ÊÊ; <
EditorGUILayout
ËË 
.
ËË  
PropertyField
ËË  -
(
ËË- . 
m_CustomCaretColor
ËË. @
)
ËË@ A
;
ËËA B
m_CustomColor
ÍÍ 
.
ÍÍ 
target
ÍÍ $
=
ÍÍ% & 
m_CustomCaretColor
ÍÍ' 9
.
ÍÍ9 :
	boolValue
ÍÍ: C
;
ÍÍC D
if
ÏÏ 
(
ÏÏ 
EditorGUILayout
ÏÏ #
.
ÏÏ# $
BeginFadeGroup
ÏÏ$ 2
(
ÏÏ2 3
m_CustomColor
ÏÏ3 @
.
ÏÏ@ A
faded
ÏÏA F
)
ÏÏF G
)
ÏÏG H
{
ÌÌ 
EditorGUILayout
ÓÓ #
.
ÓÓ# $
PropertyField
ÓÓ$ 1
(
ÓÓ1 2
m_CaretColor
ÓÓ2 >
)
ÓÓ> ?
;
ÓÓ? @
}
ÔÔ 
EditorGUILayout
 
.
  
EndFadeGroup
  ,
(
, -
)
- .
;
. /
EditorGUILayout
ÚÚ 
.
ÚÚ  
PropertyField
ÚÚ  -
(
ÚÚ- .
m_SelectionColor
ÚÚ. >
)
ÚÚ> ?
;
ÚÚ? @
	EditorGUI
ÙÙ 
.
ÙÙ 
indentLevel
ÙÙ %
--
ÙÙ% '
;
ÙÙ' (
}
ıı 
	m_foldout
˚˚ 
.
˚˚ 
extraSettings
˚˚ #
=
˚˚$ %
EditorGUILayout
˚˚& 5
.
˚˚5 6
Foldout
˚˚6 =
(
˚˚= >
	m_foldout
˚˚> G
.
˚˚G H
extraSettings
˚˚H U
,
˚˚U V
$str
˚˚W i
,
˚˚i j
true
˚˚k o
,
˚˚o p!
TMP_UIStyleManager˚˚q É
.˚˚É Ñ
boldFoldout˚˚Ñ è
)˚˚è ê
;˚˚ê ë
if
˝˝ 
(
˝˝ 
	m_foldout
˝˝ 
.
˝˝ 
extraSettings
˝˝ '
)
˝˝' (
{
˛˛ 
	EditorGUI
ˇˇ 
.
ˇˇ 
indentLevel
ˇˇ %
++
ˇˇ% '
;
ˇˇ' (
EditorGUILayout
ÅÅ 
.
ÅÅ  
PropertyField
ÅÅ  -
(
ÅÅ- . 
m_OnFocusSelectAll
ÅÅ. @
,
ÅÅ@ A
new
ÅÅB E

GUIContent
ÅÅF P
(
ÅÅP Q
$str
ÅÅQ g
,
ÅÅg h
$strÅÅi ¨
)ÅÅ¨ ≠
)ÅÅ≠ Æ
;ÅÅÆ Ø
EditorGUILayout
ÇÇ 
.
ÇÇ  
PropertyField
ÇÇ  -
(
ÇÇ- .#
m_ResetOnDeActivation
ÇÇ. C
,
ÇÇC D
new
ÇÇE H

GUIContent
ÇÇI S
(
ÇÇS T
$str
ÇÇT k
,
ÇÇk l
$strÇÇm ª
)ÇÇª º
)ÇÇº Ω
;ÇÇΩ æ
EditorGUILayout
ÉÉ 
.
ÉÉ  
PropertyField
ÉÉ  -
(
ÉÉ- .+
m_RestoreOriginalTextOnEscape
ÉÉ. K
,
ÉÉK L
new
ÉÉM P

GUIContent
ÉÉQ [
(
ÉÉ[ \
$str
ÉÉ\ p
,
ÉÉp q
$strÉÉr ´
)ÉÉ´ ¨
)ÉÉ¨ ≠
;ÉÉ≠ Æ
EditorGUILayout
ÑÑ 
.
ÑÑ  
PropertyField
ÑÑ  -
(
ÑÑ- ."
m_HideMobileKeyboard
ÑÑ. B
,
ÑÑB C
new
ÑÑD G

GUIContent
ÑÑH R
(
ÑÑR S
$str
ÑÑS g
,
ÑÑg h
$strÑÑi ¢
)ÑÑ¢ £
)ÑÑ£ §
;ÑÑ§ •
EditorGUILayout
ÖÖ 
.
ÖÖ  
PropertyField
ÖÖ  -
(
ÖÖ- .
m_HideMobileInput
ÖÖ. ?
,
ÖÖ? @
new
ÖÖA D

GUIContent
ÖÖE O
(
ÖÖO P
$str
ÖÖP c
,
ÖÖc d
$strÖÖe º
)ÖÖº Ω
)ÖÖΩ æ
;ÖÖæ ø
EditorGUILayout
ÜÜ 
.
ÜÜ  
PropertyField
ÜÜ  -
(
ÜÜ- .

m_ReadOnly
ÜÜ. 8
)
ÜÜ8 9
;
ÜÜ9 :
EditorGUILayout
áá 
.
áá  
PropertyField
áá  -
(
áá- .

m_RichText
áá. 8
)
áá8 9
;
áá9 :
EditorGUILayout
àà 
.
àà  
PropertyField
àà  -
(
àà- .&
m_RichTextEditingAllowed
àà. F
,
ààF G
new
ààH K

GUIContent
ààL V
(
ààV W
$str
ààW p
)
ààp q
)
ààq r
;
ààr s
	EditorGUI
ää 
.
ää 
indentLevel
ää %
--
ää% '
;
ää' (
}
ãã 
EditorGUILayout
èè 
.
èè 
Space
èè !
(
èè! "
)
èè" #
;
èè# $
EditorGUILayout
ëë 
.
ëë 
PropertyField
ëë )
(
ëë) *
m_OnValueChanged
ëë* :
)
ëë: ;
;
ëë; <
EditorGUILayout
íí 
.
íí 
PropertyField
íí )
(
íí) *
m_OnEndEdit
íí* 5
)
íí5 6
;
íí6 7
EditorGUILayout
ìì 
.
ìì 
PropertyField
ìì )
(
ìì) *

m_OnSelect
ìì* 4
)
ìì4 5
;
ìì5 6
EditorGUILayout
îî 
.
îî 
PropertyField
îî )
(
îî) *
m_OnDeselect
îî* 6
)
îî6 7
;
îî7 8
	EditorGUI
ññ 
.
ññ 
EndDisabledGroup
ññ &
(
ññ& '
)
ññ' (
;
ññ( )
serializedObject
òò 
.
òò %
ApplyModifiedProperties
òò 4
(
òò4 5
)
òò5 6
;
òò6 7
}
ôô 	
}
öö 
}õõ ñå	
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_BaseEditorPanel.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
public		 

abstract		 
class		 
TMP_BaseEditorPanel		 -
:		. /
Editor		0 6
{

 
static 
readonly 

GUIContent "
k_RtlToggleLabel# 3
=4 5
new6 9

GUIContent: D
(D E
$strE X
,X Y
$str	Z ï
)
ï ñ
;
ñ ó
static 
readonly 

GUIContent "
k_FontAssetLabel# 3
=4 5
new6 9

GUIContent: D
(D E
$strE Q
,Q R
$str	S ù
)
ù û
;
û ü
static 
readonly 

GUIContent "!
k_MaterialPresetLabel# 8
=9 :
new; >

GUIContent? I
(I J
$strJ [
,[ \
$str	] ∑
)
∑ ∏
;
∏ π
static 
readonly 

GUIContent "
k_StyleLabel# /
=0 1
new2 5

GUIContent6 @
(@ A
$strA M
,M N
$str	O à
)
à â
;
â ä
static 
readonly 

GUIContent "
k_AutoSizeLabel# 2
=3 4
new5 8

GUIContent9 C
(C D
$strD O
,O P
$str	Q Ç
)
Ç É
;
É Ñ
static 
readonly 

GUIContent "
k_FontSizeLabel# 2
=3 4
new5 8

GUIContent9 C
(C D
$strD O
,O P
$str	Q É
)
É Ñ
;
Ñ Ö
static 
readonly 

GUIContent ""
k_AutoSizeOptionsLabel# 9
=: ;
new< ?

GUIContent@ J
(J K
$strK ^
)^ _
;_ `
static 
readonly 

GUIContent "

k_MinLabel# -
=. /
new0 3

GUIContent4 >
(> ?
$str? D
,D E
$strF ^
)^ _
;_ `
static 
readonly 

GUIContent "

k_MaxLabel# -
=. /
new0 3

GUIContent4 >
(> ?
$str? D
,D E
$strF ^
)^ _
;_ `
static 
readonly 

GUIContent "
	k_WdLabel# ,
=- .
new/ 2

GUIContent3 =
(= >
$str> C
,C D
$str	E ç
)
ç é
;
é è
static 
readonly 

GUIContent "
k_LineLabel# .
=/ 0
new1 4

GUIContent5 ?
(? @
$str@ F
,F G
$str	H £
)
£ §
;
§ •
static 
readonly 

GUIContent "
k_FontStyleLabel# 3
=4 5
new6 9

GUIContent: D
(D E
$strE Q
,Q R
$str	S à
)
à â
;
â ä
static 
readonly 

GUIContent "
k_BoldLabel# .
=/ 0
new1 4

GUIContent5 ?
(? @
$str@ C
,C D
$strE K
)K L
;L M
static 
readonly 

GUIContent "
k_ItalicLabel# 0
=1 2
new3 6

GUIContent7 A
(A B
$strB E
,E F
$strG O
)O P
;P Q
static 
readonly 

GUIContent "
k_UnderlineLabel# 3
=4 5
new6 9

GUIContent: D
(D E
$strE H
,H I
$strJ U
)U V
;V W
static 
readonly 

GUIContent " 
k_StrikethroughLabel# 7
=8 9
new: =

GUIContent> H
(H I
$strI L
,L M
$strN ]
)] ^
;^ _
static 
readonly 

GUIContent "
k_LowercaseLabel# 3
=4 5
new6 9

GUIContent: D
(D E
$strE I
,I J
$strK V
)V W
;W X
static 
readonly 

GUIContent "
k_UppercaseLabel# 3
=4 5
new6 9

GUIContent: D
(D E
$strE I
,I J
$strK V
)V W
;W X
static   
readonly   

GUIContent   "
k_SmallcapsLabel  # 3
=  4 5
new  6 9

GUIContent  : D
(  D E
$str  E I
,  I J
$str  K V
)  V W
;  W X
static"" 
readonly"" 

GUIContent"" "
k_ColorModeLabel""# 3
=""4 5
new""6 9

GUIContent"": D
(""D E
$str""E Q
,""Q R
$str""S q
)""q r
;""r s
static## 
readonly## 

GUIContent## "
k_BaseColorLabel### 3
=##4 5
new##6 9

GUIContent##: D
(##D E
$str##E S
,##S T
$str##U {
)##{ |
;##| }
static$$ 
readonly$$ 

GUIContent$$ "
k_ColorPresetLabel$$# 5
=$$6 7
new$$8 ;

GUIContent$$< F
($$F G
$str$$G U
,$$U V
$str	$$W ê
)
$$ê ë
;
$$ë í
static%% 
readonly%% 

GUIContent%% " 
k_ColorGradientLabel%%# 7
=%%8 9
new%%: =

GUIContent%%> H
(%%H I
$str%%I Y
,%%Y Z
$str	%%[ ¿
)
%%¿ ¡
;
%%¡ ¬
static&& 
readonly&& 

GUIContent&& " 
k_CorenerColorsLabel&&# 7
=&&8 9
new&&: =

GUIContent&&> H
(&&H I
$str&&I Q
,&&Q R
$str&&S {
)&&{ |
;&&| }
static'' 
readonly'' 

GUIContent'' "
k_OverrideTagsLabel''# 6
=''7 8
new''9 <

GUIContent''= G
(''G H
$str''H W
,''W X
$str	''Y è
)
''è ê
;
''ê ë
static)) 
readonly)) 

GUIContent)) "!
k_SpacingOptionsLabel))# 8
=))9 :
new)); >

GUIContent))? I
())I J
$str))J `
,))` a
$str	))b €
)
))€ ‹
;
))‹ ›
static** 
readonly** 

GUIContent** "#
k_CharacterSpacingLabel**# :
=**; <
new**= @

GUIContent**A K
(**K L
$str**L W
)**W X
;**X Y
static++ 
readonly++ 

GUIContent++ "
k_WordSpacingLabel++# 5
=++6 7
new++8 ;

GUIContent++< F
(++F G
$str++G M
)++M N
;++N O
static,, 
readonly,, 

GUIContent,, "
k_LineSpacingLabel,,# 5
=,,6 7
new,,8 ;

GUIContent,,< F
(,,F G
$str,,G M
),,M N
;,,N O
static-- 
readonly-- 

GUIContent-- "#
k_ParagraphSpacingLabel--# :
=--; <
new--= @

GUIContent--A K
(--K L
$str--L W
)--W X
;--X Y
static// 
readonly// 

GUIContent// "
k_AlignmentLabel//# 3
=//4 5
new//6 9

GUIContent//: D
(//D E
$str//E P
,//P Q
$str	//R ñ
)
//ñ ó
;
//ó ò
static00 
readonly00 

GUIContent00 "
k_WrapMixLabel00# 1
=002 3
new004 7

GUIContent008 B
(00B C
$str00C W
,00W X
$str	00Y †
)
00† °
;
00° ¢
static22 
readonly22 

GUIContent22 "
k_WrappingLabel22# 2
=223 4
new225 8

GUIContent229 C
(22C D
$str22D N
,22N O
$str	22P ñ
)
22ñ ó
;
22ó ò
static33 
readonly33 

GUIContent33 "
[33" #
]33# $
k_WrappingOptions33% 6
=337 8
{339 :
new33; >

GUIContent33? I
(33I J
$str33J T
)33T U
,33U V
new33W Z

GUIContent33[ e
(33e f
$str33f o
)33o p
}33q r
;33r s
static44 
readonly44 

GUIContent44 "
k_OverflowLabel44# 2
=443 4
new445 8

GUIContent449 C
(44C D
$str44D N
,44N O
$str	44P ê
)
44ê ë
;
44ë í
static66 
readonly66 

GUIContent66 "
k_MarginsLabel66# 1
=662 3
new664 7

GUIContent668 B
(66B C
$str66C L
,66L M
$str	66N â
)
66â ä
;
66ä ã
static77 
readonly77 

GUIContent77 ""
k_GeometrySortingLabel77# 9
=77: ;
new77< ?

GUIContent77@ J
(77J K
$str77K ]
,77] ^
$str	77_ …
)
77…  
;
77  À
static88 
readonly88 

GUIContent88 "%
k_IsTextObjectScaleStatic88# <
=88= >
new88? B

GUIContent88C M
(88M N
$str88N _
,88_ `
$str	88a Ô
)
88Ô 
;
88 Ò
static99 
readonly99 

GUIContent99 "
k_RichTextLabel99# 2
=993 4
new995 8

GUIContent999 C
(99C D
$str99D O
,99O P
$str	99Q ê
)
99ê ë
;
99ë í
static:: 
readonly:: 

GUIContent:: "#
k_EscapeCharactersLabel::# :
=::; <
new::= @

GUIContent::A K
(::K L
$str::L e
,::e f
$str	::g  
)
::  À
;
::À Ã
static;; 
readonly;; 

GUIContent;; "#
k_VisibleDescenderLabel;;# :
=;;; <
new;;= @

GUIContent;;A K
(;;K L
$str;;L _
,;;_ `
$str	;;a Í
)
;;Í Î
;
;;Î Ï
static<< 
readonly<< 

GUIContent<< "
k_SpriteAssetLabel<<# 5
=<<6 7
new<<8 ;

GUIContent<<< F
(<<F G
$str<<G U
,<<U V
$str	<<W ∫
)
<<∫ ª
;
<<ª º
static== 
readonly== 

GUIContent== ""
k_StyleSheetAssetLabel==# 9
===: ;
new==< ?

GUIContent==@ J
(==J K
$str==K ^
,==^ _
$str	==` ë
)
==ë í
;
==í ì
static?? 
readonly?? 

GUIContent?? "$
k_HorizontalMappingLabel??# ;
=??< =
new??> A

GUIContent??B L
(??L M
$str??M a
,??a b
$str	??c ™
)
??™ ´
;
??´ ¨
static@@ 
readonly@@ 

GUIContent@@ ""
k_VerticalMappingLabel@@# 9
=@@: ;
new@@< ?

GUIContent@@@ J
(@@J K
$str@@K ]
,@@] ^
$str	@@_ §
)
@@§ •
;
@@• ¶
staticAA 
readonlyAA 

GUIContentAA "
k_LineOffsetLabelAA# 4
=AA5 6
newAA7 :

GUIContentAA; E
(AAE F
$strAAF S
,AAS T
$str	AAU •
)
AA• ¶
;
AA¶ ß
staticCC 
readonlyCC 

GUIContentCC "
k_KerningLabelCC# 1
=CC2 3
newCC4 7

GUIContentCC8 B
(CCB C
$strCCC L
,CCL M
$str	CCN è
)
CCè ê
;
CCê ë
staticDD 
readonlyDD 

GUIContentDD "
k_PaddingLabelDD# 1
=DD2 3
newDD4 7

GUIContentDD8 B
(DDB C
$strDDC R
,DDR S
$str	DDT ’
)
DD’ ÷
;
DD÷ ◊
staticFF 
readonlyFF 

GUIContentFF "
k_LeftLabelFF# .
=FF/ 0
newFF1 4

GUIContentFF5 ?
(FF? @
$strFF@ F
)FFF G
;FFG H
staticGG 
readonlyGG 

GUIContentGG "

k_TopLabelGG# -
=GG. /
newGG0 3

GUIContentGG4 >
(GG> ?
$strGG? D
)GGD E
;GGE F
staticHH 
readonlyHH 

GUIContentHH "
k_RightLabelHH# /
=HH0 1
newHH2 5

GUIContentHH6 @
(HH@ A
$strHHA H
)HHH I
;HHI J
staticII 
readonlyII 

GUIContentII "
k_BottomLabelII# 0
=II1 2
newII3 6

GUIContentII7 A
(IIA B
$strIIB J
)IIJ K
;IIK L
	protectedKK 
staticKK 
readonlyKK !

GUIContentKK" , 
k_ExtraSettingsLabelKK- A
=KKB C
newKKD G

GUIContentKKH R
(KKR S
$strKKS c
)KKc d
;KKd e
	protectedLL 
staticLL 
stringLL 
[LL  
]LL  !
k_UiStateLabelLL" 0
=LL1 2
newLL3 6
stringLL7 =
[LL= >
]LL> ?
{LL@ A
$strLLB _
,LL_ `
$strLLa |
}LL} ~
;LL~ 
staticNN 

DictionaryNN 
<NN 
intNN 
,NN 
	TMP_StyleNN (
>NN( )
k_AvailableStylesNN* ;
=NN< =
newNN> A

DictionaryNNB L
<NNL M
intNNM P
,NNP Q
	TMP_StyleNNR [
>NN[ \
(NN\ ]
)NN] ^
;NN^ _
	protectedOO 

DictionaryOO 
<OO 
intOO  
,OO  !
intOO" %
>OO% &"
m_TextStyleIndexLookupOO' =
=OO> ?
newOO@ C

DictionaryOOD N
<OON O
intOOO R
,OOR S
intOOT W
>OOW X
(OOX Y
)OOY Z
;OOZ [
	protectedQQ 
structQQ 
FoldoutQQ  
{RR 	
publicTT 
staticTT 
boolTT 
extraSettingsTT ,
=TT- .
falseTT/ 4
;TT4 5
publicUU 
staticUU 
boolUU 
materialInspectorUU 0
=UU1 2
trueUU3 7
;UU7 8
}VV 	
	protectedXX 
staticXX 
intXX 
	s_EventIdXX &
;XX& '
publicZZ 
intZZ 
selAlignGridAZZ  
;ZZ  !
public[[ 
int[[ 
selAlignGridB[[  
;[[  !
	protected]] 
SerializedProperty]] $

m_TextProp]]% /
;]]/ 0
	protected__ 
SerializedProperty__ $
m_IsRightToLeftProp__% 8
;__8 9
	protected`` 
string`` 
	m_RtlText`` "
;``" #
	protectedbb 
SerializedPropertybb $
m_FontAssetPropbb% 4
;bb4 5
	protecteddd 
SerializedPropertydd $$
m_FontSharedMaterialPropdd% =
;dd= >
	protectedee 
Materialee 
[ee 
]ee 
m_MaterialPresetsee .
;ee. /
	protectedff 

GUIContentff 
[ff 
]ff !
m_MaterialPresetNamesff 4
;ff4 5
	protectedgg 

Dictionarygg 
<gg 
intgg  
,gg  !
intgg" %
>gg% &'
m_MaterialPresetIndexLookupgg' B
=ggC D
newggE H

DictionaryggI S
<ggS T
intggT W
,ggW X
intggY \
>gg\ ]
(gg] ^
)gg^ _
;gg_ `
	protectedhh 
inthh *
m_MaterialPresetSelectionIndexhh 4
;hh4 5
	protectedii 
boolii 
m_IsPresetListDirtyii *
;ii* +
	protectedkk 
Listkk 
<kk 
	TMP_Stylekk  
>kk  !
m_Styleskk" *
=kk+ ,
newkk- 0
Listkk1 5
<kk5 6
	TMP_Stylekk6 ?
>kk? @
(kk@ A
)kkA B
;kkB C
	protectedll 

GUIContentll 
[ll 
]ll 
m_StyleNamesll +
;ll+ ,
	protectedmm 
intmm !
m_StyleSelectionIndexmm +
;mm+ ,
	protectedoo 
SerializedPropertyoo $
m_FontStylePropoo% 4
;oo4 5
	protectedqq 
SerializedPropertyqq $
m_FontColorPropqq% 4
;qq4 5
	protectedrr 
SerializedPropertyrr $&
m_EnableVertexGradientProprr% ?
;rr? @
	protectedss 
SerializedPropertyss $#
m_FontColorGradientPropss% <
;ss< =
	protectedtt 
SerializedPropertytt $)
m_FontColorGradientPresetProptt% B
;ttB C
	protecteduu 
SerializedPropertyuu $#
m_OverrideHtmlColorPropuu% <
;uu< =
	protectedww 
SerializedPropertyww $
m_FontSizePropww% 3
;ww3 4
	protectedxx 
SerializedPropertyxx $
m_FontSizeBasePropxx% 7
;xx7 8
	protectedzz 
SerializedPropertyzz $
m_AutoSizingPropzz% 5
;zz5 6
	protected{{ 
SerializedProperty{{ $
m_FontSizeMinProp{{% 6
;{{6 7
	protected|| 
SerializedProperty|| $
m_FontSizeMaxProp||% 6
;||6 7
	protected~~ 
SerializedProperty~~ $ 
m_LineSpacingMaxProp~~% 9
;~~9 :
	protected 
SerializedProperty $!
m_CharWidthMaxAdjProp% :
;: ;
	protected
ÅÅ  
SerializedProperty
ÅÅ $$
m_CharacterSpacingProp
ÅÅ% ;
;
ÅÅ; <
	protected
ÇÇ  
SerializedProperty
ÇÇ $
m_WordSpacingProp
ÇÇ% 6
;
ÇÇ6 7
	protected
ÉÉ  
SerializedProperty
ÉÉ $
m_LineSpacingProp
ÉÉ% 6
;
ÉÉ6 7
	protected
ÑÑ  
SerializedProperty
ÑÑ $$
m_ParagraphSpacingProp
ÑÑ% ;
;
ÑÑ; <
	protected
ÜÜ  
SerializedProperty
ÜÜ $!
m_TextAlignmentProp
ÜÜ% 8
;
ÜÜ8 9
	protected
àà  
SerializedProperty
àà $'
m_HorizontalAlignmentProp
àà% >
;
àà> ?
	protected
ââ  
SerializedProperty
ââ $%
m_VerticalAlignmentProp
ââ% <
;
ââ< =
	protected
ãã  
SerializedProperty
ãã $%
m_HorizontalMappingProp
ãã% <
;
ãã< =
	protected
åå  
SerializedProperty
åå $#
m_VerticalMappingProp
åå% :
;
åå: ;
	protected
çç  
SerializedProperty
çç $ 
m_UvLineOffsetProp
çç% 7
;
çç7 8
	protected
èè  
SerializedProperty
èè $&
m_EnableWordWrappingProp
èè% =
;
èè= >
	protected
êê  
SerializedProperty
êê $&
m_WordWrappingRatiosProp
êê% =
;
êê= >
	protected
ëë  
SerializedProperty
ëë $$
m_TextOverflowModeProp
ëë% ;
;
ëë; <
	protected
íí  
SerializedProperty
íí $!
m_PageToDisplayProp
íí% 8
;
íí8 9
	protected
ìì  
SerializedProperty
ìì $'
m_LinkedTextComponentProp
ìì% >
;
ìì> ?
	protected
îî  
SerializedProperty
îî $-
m_ParentLinkedTextComponentProp
îî% D
;
îîD E
	protected
ññ  
SerializedProperty
ññ $!
m_EnableKerningProp
ññ% 8
;
ññ8 9
	protected
òò  
SerializedProperty
òò $
m_IsRichTextProp
òò% 5
;
òò5 6
	protected
öö  
SerializedProperty
öö $'
m_HasFontAssetChangedProp
öö% >
;
öö> ?
	protected
úú  
SerializedProperty
úú $&
m_EnableExtraPaddingProp
úú% =
;
úú= >
	protected
ùù  
SerializedProperty
ùù $(
m_CheckPaddingRequiredProp
ùù% ?
;
ùù? @
	protected
ûû  
SerializedProperty
ûû $0
"m_EnableEscapeCharacterParsingProp
ûû% G
;
ûûG H
	protected
üü  
SerializedProperty
üü $*
m_UseMaxVisibleDescenderProp
üü% A
;
üüA B
	protected
††  
SerializedProperty
†† $(
m_GeometrySortingOrderProp
††% ?
;
††? @
	protected
°°  
SerializedProperty
°° $+
m_IsTextObjectScaleStaticProp
°°% B
;
°°B C
	protected
££  
SerializedProperty
££ $
m_SpriteAssetProp
££% 6
;
££6 7
	protected
••  
SerializedProperty
•• $#
m_StyleSheetAssetProp
••% :
;
••: ;
	protected
¶¶  
SerializedProperty
¶¶ $%
m_TextStyleHashCodeProp
¶¶% <
;
¶¶< =
	protected
®®  
SerializedProperty
®® $
m_MarginProp
®®% 1
;
®®1 2
	protected
™™  
SerializedProperty
™™ $
m_ColorModeProp
™™% 4
;
™™4 5
	protected
¨¨ 
bool
¨¨ %
m_HavePropertiesChanged
¨¨ .
;
¨¨. /
	protected
ÆÆ 
TMP_Text
ÆÆ 
m_TextComponent
ÆÆ *
;
ÆÆ* +
	protected
ØØ 
TMP_Text
ØØ +
m_PreviousLinkedTextComponent
ØØ 8
;
ØØ8 9
	protected
∞∞ 
RectTransform
∞∞ 
m_RectTransform
∞∞  /
;
∞∞/ 0
	protected
≤≤ 
Material
≤≤ 
m_TargetMaterial
≤≤ +
;
≤≤+ ,
	protected
¥¥ 
Vector3
¥¥ 
[
¥¥ 
]
¥¥ 
m_RectCorners
¥¥ )
=
¥¥* +
new
¥¥, /
Vector3
¥¥0 7
[
¥¥7 8
$num
¥¥8 9
]
¥¥9 :
;
¥¥: ;
	protected
µµ 
Vector3
µµ 
[
µµ 
]
µµ 
m_HandlePoints
µµ *
=
µµ+ ,
new
µµ- 0
Vector3
µµ1 8
[
µµ8 9
$num
µµ9 :
]
µµ: ;
;
µµ; <
	protected
∑∑ 
virtual
∑∑ 
void
∑∑ 
OnEnable
∑∑ '
(
∑∑' (
)
∑∑( )
{
∏∏ 	

m_TextProp
ππ 
=
ππ 
serializedObject
ππ )
.
ππ) *
FindProperty
ππ* 6
(
ππ6 7
$str
ππ7 ?
)
ππ? @
;
ππ@ A!
m_IsRightToLeftProp
∫∫ 
=
∫∫  !
serializedObject
∫∫" 2
.
∫∫2 3
FindProperty
∫∫3 ?
(
∫∫? @
$str
∫∫@ Q
)
∫∫Q R
;
∫∫R S
m_FontAssetProp
ªª 
=
ªª 
serializedObject
ªª .
.
ªª. /
FindProperty
ªª/ ;
(
ªª; <
$str
ªª< I
)
ªªI J
;
ªªJ K&
m_FontSharedMaterialProp
ºº $
=
ºº% &
serializedObject
ºº' 7
.
ºº7 8
FindProperty
ºº8 D
(
ººD E
$str
ººE W
)
ººW X
;
ººX Y
m_FontStyleProp
ææ 
=
ææ 
serializedObject
ææ .
.
ææ. /
FindProperty
ææ/ ;
(
ææ; <
$str
ææ< I
)
ææI J
;
ææJ K
m_FontSizeProp
¿¿ 
=
¿¿ 
serializedObject
¿¿ -
.
¿¿- .
FindProperty
¿¿. :
(
¿¿: ;
$str
¿¿; G
)
¿¿G H
;
¿¿H I 
m_FontSizeBaseProp
¡¡ 
=
¡¡  
serializedObject
¡¡! 1
.
¡¡1 2
FindProperty
¡¡2 >
(
¡¡> ?
$str
¡¡? O
)
¡¡O P
;
¡¡P Q
m_AutoSizingProp
√√ 
=
√√ 
serializedObject
√√ /
.
√√/ 0
FindProperty
√√0 <
(
√√< =
$str
√√= Q
)
√√Q R
;
√√R S
m_FontSizeMinProp
ƒƒ 
=
ƒƒ 
serializedObject
ƒƒ  0
.
ƒƒ0 1
FindProperty
ƒƒ1 =
(
ƒƒ= >
$str
ƒƒ> M
)
ƒƒM N
;
ƒƒN O
m_FontSizeMaxProp
≈≈ 
=
≈≈ 
serializedObject
≈≈  0
.
≈≈0 1
FindProperty
≈≈1 =
(
≈≈= >
$str
≈≈> M
)
≈≈M N
;
≈≈N O"
m_LineSpacingMaxProp
««  
=
««! "
serializedObject
««# 3
.
««3 4
FindProperty
««4 @
(
««@ A
$str
««A S
)
««S T
;
««T U#
m_CharWidthMaxAdjProp
»» !
=
»»" #
serializedObject
»»$ 4
.
»»4 5
FindProperty
»»5 A
(
»»A B
$str
»»B U
)
»»U V
;
»»V W
m_FontColorProp
ÀÀ 
=
ÀÀ 
serializedObject
ÀÀ .
.
ÀÀ. /
FindProperty
ÀÀ/ ;
(
ÀÀ; <
$str
ÀÀ< I
)
ÀÀI J
;
ÀÀJ K(
m_EnableVertexGradientProp
ÃÃ &
=
ÃÃ' (
serializedObject
ÃÃ) 9
.
ÃÃ9 :
FindProperty
ÃÃ: F
(
ÃÃF G
$str
ÃÃG _
)
ÃÃ_ `
;
ÃÃ` a%
m_FontColorGradientProp
ÕÕ #
=
ÕÕ$ %
serializedObject
ÕÕ& 6
.
ÕÕ6 7
FindProperty
ÕÕ7 C
(
ÕÕC D
$str
ÕÕD Y
)
ÕÕY Z
;
ÕÕZ [+
m_FontColorGradientPresetProp
ŒŒ )
=
ŒŒ* +
serializedObject
ŒŒ, <
.
ŒŒ< =
FindProperty
ŒŒ= I
(
ŒŒI J
$str
ŒŒJ e
)
ŒŒe f
;
ŒŒf g%
m_OverrideHtmlColorProp
œœ #
=
œœ$ %
serializedObject
œœ& 6
.
œœ6 7
FindProperty
œœ7 C
(
œœC D
$str
œœD Z
)
œœZ [
;
œœ[ \$
m_CharacterSpacingProp
—— "
=
——# $
serializedObject
——% 5
.
——5 6
FindProperty
——6 B
(
——B C
$str
——C W
)
——W X
;
——X Y
m_WordSpacingProp
““ 
=
““ 
serializedObject
““  0
.
““0 1
FindProperty
““1 =
(
““= >
$str
““> M
)
““M N
;
““N O
m_LineSpacingProp
”” 
=
”” 
serializedObject
””  0
.
””0 1
FindProperty
””1 =
(
””= >
$str
””> M
)
””M N
;
””N O$
m_ParagraphSpacingProp
‘‘ "
=
‘‘# $
serializedObject
‘‘% 5
.
‘‘5 6
FindProperty
‘‘6 B
(
‘‘B C
$str
‘‘C W
)
‘‘W X
;
‘‘X Y!
m_TextAlignmentProp
÷÷ 
=
÷÷  !
serializedObject
÷÷" 2
.
÷÷2 3
FindProperty
÷÷3 ?
(
÷÷? @
$str
÷÷@ Q
)
÷÷Q R
;
÷÷R S'
m_HorizontalAlignmentProp
◊◊ %
=
◊◊& '
serializedObject
◊◊( 8
.
◊◊8 9
FindProperty
◊◊9 E
(
◊◊E F
$str
◊◊F ]
)
◊◊] ^
;
◊◊^ _%
m_VerticalAlignmentProp
ÿÿ #
=
ÿÿ$ %
serializedObject
ÿÿ& 6
.
ÿÿ6 7
FindProperty
ÿÿ7 C
(
ÿÿC D
$str
ÿÿD Y
)
ÿÿY Z
;
ÿÿZ [%
m_HorizontalMappingProp
⁄⁄ #
=
⁄⁄$ %
serializedObject
⁄⁄& 6
.
⁄⁄6 7
FindProperty
⁄⁄7 C
(
⁄⁄C D
$str
⁄⁄D Y
)
⁄⁄Y Z
;
⁄⁄Z [#
m_VerticalMappingProp
€€ !
=
€€" #
serializedObject
€€$ 4
.
€€4 5
FindProperty
€€5 A
(
€€A B
$str
€€B U
)
€€U V
;
€€V W 
m_UvLineOffsetProp
‹‹ 
=
‹‹  
serializedObject
‹‹! 1
.
‹‹1 2
FindProperty
‹‹2 >
(
‹‹> ?
$str
‹‹? O
)
‹‹O P
;
‹‹P Q&
m_EnableWordWrappingProp
ﬁﬁ $
=
ﬁﬁ% &
serializedObject
ﬁﬁ' 7
.
ﬁﬁ7 8
FindProperty
ﬁﬁ8 D
(
ﬁﬁD E
$str
ﬁﬁE [
)
ﬁﬁ[ \
;
ﬁﬁ\ ]&
m_WordWrappingRatiosProp
ﬂﬂ $
=
ﬂﬂ% &
serializedObject
ﬂﬂ' 7
.
ﬂﬂ7 8
FindProperty
ﬂﬂ8 D
(
ﬂﬂD E
$str
ﬂﬂE [
)
ﬂﬂ[ \
;
ﬂﬂ\ ]$
m_TextOverflowModeProp
‡‡ "
=
‡‡# $
serializedObject
‡‡% 5
.
‡‡5 6
FindProperty
‡‡6 B
(
‡‡B C
$str
‡‡C S
)
‡‡S T
;
‡‡T U!
m_PageToDisplayProp
·· 
=
··  !
serializedObject
··" 2
.
··2 3
FindProperty
··3 ?
(
··? @
$str
··@ Q
)
··Q R
;
··R S'
m_LinkedTextComponentProp
‚‚ %
=
‚‚& '
serializedObject
‚‚( 8
.
‚‚8 9
FindProperty
‚‚9 E
(
‚‚E F
$str
‚‚F ]
)
‚‚] ^
;
‚‚^ _-
m_ParentLinkedTextComponentProp
„„ +
=
„„, -
serializedObject
„„. >
.
„„> ?
FindProperty
„„? K
(
„„K L
$str
„„L c
)
„„c d
;
„„d e!
m_EnableKerningProp
ÂÂ 
=
ÂÂ  !
serializedObject
ÂÂ" 2
.
ÂÂ2 3
FindProperty
ÂÂ3 ?
(
ÂÂ? @
$str
ÂÂ@ Q
)
ÂÂQ R
;
ÂÂR S&
m_EnableExtraPaddingProp
ÁÁ $
=
ÁÁ% &
serializedObject
ÁÁ' 7
.
ÁÁ7 8
FindProperty
ÁÁ8 D
(
ÁÁD E
$str
ÁÁE [
)
ÁÁ[ \
;
ÁÁ\ ]
m_IsRichTextProp
ËË 
=
ËË 
serializedObject
ËË /
.
ËË/ 0
FindProperty
ËË0 <
(
ËË< =
$str
ËË= K
)
ËËK L
;
ËËL M(
m_CheckPaddingRequiredProp
ÈÈ &
=
ÈÈ' (
serializedObject
ÈÈ) 9
.
ÈÈ9 :
FindProperty
ÈÈ: F
(
ÈÈF G
$str
ÈÈG ]
)
ÈÈ] ^
;
ÈÈ^ _0
"m_EnableEscapeCharacterParsingProp
ÍÍ .
=
ÍÍ/ 0
serializedObject
ÍÍ1 A
.
ÍÍA B
FindProperty
ÍÍB N
(
ÍÍN O
$str
ÍÍO f
)
ÍÍf g
;
ÍÍg h*
m_UseMaxVisibleDescenderProp
ÎÎ (
=
ÎÎ) *
serializedObject
ÎÎ+ ;
.
ÎÎ; <
FindProperty
ÎÎ< H
(
ÎÎH I
$str
ÎÎI c
)
ÎÎc d
;
ÎÎd e(
m_GeometrySortingOrderProp
ÌÌ &
=
ÌÌ' (
serializedObject
ÌÌ) 9
.
ÌÌ9 :
FindProperty
ÌÌ: F
(
ÌÌF G
$str
ÌÌG _
)
ÌÌ_ `
;
ÌÌ` a+
m_IsTextObjectScaleStaticProp
ÓÓ )
=
ÓÓ* +
serializedObject
ÓÓ, <
.
ÓÓ< =
FindProperty
ÓÓ= I
(
ÓÓI J
$str
ÓÓJ e
)
ÓÓe f
;
ÓÓf g
m_SpriteAssetProp
 
=
 
serializedObject
  0
.
0 1
FindProperty
1 =
(
= >
$str
> M
)
M N
;
N O#
m_StyleSheetAssetProp
ÚÚ !
=
ÚÚ" #
serializedObject
ÚÚ$ 4
.
ÚÚ4 5
FindProperty
ÚÚ5 A
(
ÚÚA B
$str
ÚÚB P
)
ÚÚP Q
;
ÚÚQ R%
m_TextStyleHashCodeProp
ÛÛ #
=
ÛÛ$ %
serializedObject
ÛÛ& 6
.
ÛÛ6 7
FindProperty
ÛÛ7 C
(
ÛÛC D
$str
ÛÛD Y
)
ÛÛY Z
;
ÛÛZ [
m_MarginProp
ıı 
=
ıı 
serializedObject
ıı +
.
ıı+ ,
FindProperty
ıı, 8
(
ıı8 9
$str
ıı9 C
)
ııC D
;
ııD E'
m_HasFontAssetChangedProp
˜˜ %
=
˜˜& '
serializedObject
˜˜( 8
.
˜˜8 9
FindProperty
˜˜9 E
(
˜˜E F
$str
˜˜F ]
)
˜˜] ^
;
˜˜^ _
m_ColorModeProp
˘˘ 
=
˘˘ 
serializedObject
˘˘ .
.
˘˘. /
FindProperty
˘˘/ ;
(
˘˘; <
$str
˘˘< I
)
˘˘I J
;
˘˘J K
m_TextComponent
˚˚ 
=
˚˚ 
(
˚˚ 
TMP_Text
˚˚ '
)
˚˚' (
target
˚˚( .
;
˚˚. /
m_RectTransform
¸¸ 
=
¸¸ 
m_TextComponent
¸¸ -
.
¸¸- .
rectTransform
¸¸. ;
;
¸¸; <+
m_PreviousLinkedTextComponent
ˇˇ )
=
ˇˇ* +
m_TextComponent
ˇˇ, ;
.
ˇˇ; <!
linkedTextComponent
ˇˇ< O
;
ˇˇO P
m_TargetMaterial
ÇÇ 
=
ÇÇ 
m_TextComponent
ÇÇ .
.
ÇÇ. / 
fontSharedMaterial
ÇÇ/ A
;
ÇÇA B
if
ÖÖ 
(
ÖÖ 
m_TargetMaterial
ÖÖ  
!=
ÖÖ! #
null
ÖÖ$ (
)
ÖÖ( )!
UnityEditorInternal
ÜÜ #
.
ÜÜ# $#
InternalEditorUtility
ÜÜ$ 9
.
ÜÜ9 :$
SetIsInspectorExpanded
ÜÜ: P
(
ÜÜP Q
m_TargetMaterial
ÜÜQ a
,
ÜÜa b
Foldout
ÜÜc j
.
ÜÜj k
materialInspector
ÜÜk |
)
ÜÜ| }
;
ÜÜ} ~#
m_MaterialPresetNames
ââ !
=
ââ" # 
GetMaterialPresets
ââ$ 6
(
ââ6 7
)
ââ7 8
;
ââ8 9
if
åå 
(
åå 
!
åå 
m_TextComponent
åå  
.
åå  !'
m_isWaitingOnResourceLoad
åå! :
)
åå: ;
m_StyleNames
çç 
=
çç 
GetStyleNames
çç ,
(
çç, -
)
çç- .
;
çç. / 
TMPro_EventManager
êê 
.
êê '
TEXT_STYLE_PROPERTY_EVENT
êê 8
.
êê8 9
Add
êê9 <
(
êê< =#
ON_TEXT_STYLE_CHANGED
êê= R
)
êêR S
;
êêS T
Undo
ìì 
.
ìì 
undoRedoPerformed
ìì "
+=
ìì# %

OnUndoRedo
ìì& 0
;
ìì0 1
}
îî 	
	protected
ññ 
virtual
ññ 
void
ññ 
	OnDisable
ññ (
(
ññ( )
)
ññ) *
{
óó 	
if
ôô 
(
ôô 
m_TargetMaterial
ôô  
!=
ôô! #
null
ôô$ (
)
ôô( )
Foldout
öö 
.
öö 
materialInspector
öö )
=
öö* +!
UnityEditorInternal
öö, ?
.
öö? @#
InternalEditorUtility
öö@ U
.
ööU V$
GetIsInspectorExpanded
ööV l
(
ööl m
m_TargetMaterial
ööm }
)
öö} ~
;
öö~ 
if
úú 
(
úú 
Undo
úú 
.
úú 
undoRedoPerformed
úú &
!=
úú' )
null
úú* .
)
úú. /
Undo
ùù 
.
ùù 
undoRedoPerformed
ùù &
-=
ùù' )

OnUndoRedo
ùù* 4
;
ùù4 5 
TMPro_EventManager
†† 
.
†† '
TEXT_STYLE_PROPERTY_EVENT
†† 8
.
††8 9
Remove
††9 ?
(
††? @#
ON_TEXT_STYLE_CHANGED
††@ U
)
††U V
;
††V W
}
°° 	
void
§§ #
ON_TEXT_STYLE_CHANGED
§§ "
(
§§" #
bool
§§# '
	isChanged
§§( 1
)
§§1 2
{
•• 	
m_StyleNames
¶¶ 
=
¶¶ 
GetStyleNames
¶¶ (
(
¶¶( )
)
¶¶) *
;
¶¶* +
}
ßß 	
public
©© 
override
©© 
void
©© 
OnInspectorGUI
©© +
(
©©+ ,
)
©©, -
{
™™ 	
if
¨¨ 
(
¨¨ !
IsMixSelectionTypes
¨¨ #
(
¨¨# $
)
¨¨$ %
)
¨¨% &
return
¨¨' -
;
¨¨- .
serializedObject
ÆÆ 
.
ÆÆ 
Update
ÆÆ #
(
ÆÆ# $
)
ÆÆ$ %
;
ÆÆ% &
DrawTextInput
∞∞ 
(
∞∞ 
)
∞∞ 
;
∞∞ 
DrawMainSettings
≤≤ 
(
≤≤ 
)
≤≤ 
;
≤≤ 
DrawExtraSettings
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥  
EditorGUILayout
∂∂ 
.
∂∂ 
Space
∂∂ !
(
∂∂! "
)
∂∂" #
;
∂∂# $
if
∏∏ 
(
∏∏ 
serializedObject
∏∏  
.
∏∏  !%
ApplyModifiedProperties
∏∏! 8
(
∏∏8 9
)
∏∏9 :
||
∏∏; =%
m_HavePropertiesChanged
∏∏> U
)
∏∏U V
{
ππ 
m_TextComponent
∫∫ 
.
∫∫  #
havePropertiesChanged
∫∫  5
=
∫∫6 7
true
∫∫8 <
;
∫∫< =%
m_HavePropertiesChanged
ªª '
=
ªª( )
false
ªª* /
;
ªª/ 0
EditorUtility
ºº 
.
ºº 
SetDirty
ºº &
(
ºº& '
target
ºº' -
)
ºº- .
;
ºº. /
}
ΩΩ 
}
ææ 	
public
¿¿ 
void
¿¿ 

OnSceneGUI
¿¿ 
(
¿¿ 
)
¿¿  
{
¡¡ 	
if
¬¬ 
(
¬¬ !
IsMixSelectionTypes
¬¬ #
(
¬¬# $
)
¬¬$ %
)
¬¬% &
return
¬¬' -
;
¬¬- .
m_RectTransform
≈≈ 
.
≈≈ 
GetWorldCorners
≈≈ +
(
≈≈+ ,
m_RectCorners
≈≈, 9
)
≈≈9 :
;
≈≈: ;
Vector4
∆∆ 
marginOffset
∆∆  
=
∆∆! "
m_TextComponent
∆∆# 2
.
∆∆2 3
margin
∆∆3 9
;
∆∆9 :
Vector3
«« 

lossyScale
«« 
=
««  
m_RectTransform
««! 0
.
««0 1

lossyScale
««1 ;
;
««; <
m_HandlePoints
…… 
[
…… 
$num
…… 
]
…… 
=
…… 
m_RectCorners
……  -
[
……- .
$num
……. /
]
……/ 0
+
……1 2
m_RectTransform
……3 B
.
……B C 
TransformDirection
……C U
(
……U V
new
……V Y
Vector3
……Z a
(
……a b
marginOffset
……b n
.
……n o
x
……o p
*
……q r

lossyScale
……s }
.
……} ~
x
……~ 
,…… Ä
marginOffset……Å ç
.……ç é
w……é è
*……ê ë

lossyScale……í ú
.……ú ù
y……ù û
,……û ü
$num……† °
)……° ¢
)……¢ £
;……£ §
m_HandlePoints
   
[
   
$num
   
]
   
=
   
m_RectCorners
    -
[
  - .
$num
  . /
]
  / 0
+
  1 2
m_RectTransform
  3 B
.
  B C 
TransformDirection
  C U
(
  U V
new
  V Y
Vector3
  Z a
(
  a b
marginOffset
  b n
.
  n o
x
  o p
*
  q r

lossyScale
  s }
.
  } ~
x
  ~ 
,   Ä
-  Å Ç
marginOffset  Ç é
.  é è
y  è ê
*  ë í

lossyScale  ì ù
.  ù û
y  û ü
,  ü †
$num  ° ¢
)  ¢ £
)  £ §
;  § •
m_HandlePoints
ÀÀ 
[
ÀÀ 
$num
ÀÀ 
]
ÀÀ 
=
ÀÀ 
m_RectCorners
ÀÀ  -
[
ÀÀ- .
$num
ÀÀ. /
]
ÀÀ/ 0
+
ÀÀ1 2
m_RectTransform
ÀÀ3 B
.
ÀÀB C 
TransformDirection
ÀÀC U
(
ÀÀU V
new
ÀÀV Y
Vector3
ÀÀZ a
(
ÀÀa b
-
ÀÀb c
marginOffset
ÀÀc o
.
ÀÀo p
z
ÀÀp q
*
ÀÀr s

lossyScale
ÀÀt ~
.
ÀÀ~ 
xÀÀ Ä
,ÀÀÄ Å
-ÀÀÇ É
marginOffsetÀÀÉ è
.ÀÀè ê
yÀÀê ë
*ÀÀí ì

lossyScaleÀÀî û
.ÀÀû ü
yÀÀü †
,ÀÀ† °
$numÀÀ¢ £
)ÀÀ£ §
)ÀÀ§ •
;ÀÀ• ¶
m_HandlePoints
ÃÃ 
[
ÃÃ 
$num
ÃÃ 
]
ÃÃ 
=
ÃÃ 
m_RectCorners
ÃÃ  -
[
ÃÃ- .
$num
ÃÃ. /
]
ÃÃ/ 0
+
ÃÃ1 2
m_RectTransform
ÃÃ3 B
.
ÃÃB C 
TransformDirection
ÃÃC U
(
ÃÃU V
new
ÃÃV Y
Vector3
ÃÃZ a
(
ÃÃa b
-
ÃÃb c
marginOffset
ÃÃc o
.
ÃÃo p
z
ÃÃp q
*
ÃÃr s

lossyScale
ÃÃt ~
.
ÃÃ~ 
xÃÃ Ä
,ÃÃÄ Å
marginOffsetÃÃÇ é
.ÃÃé è
wÃÃè ê
*ÃÃë í

lossyScaleÃÃì ù
.ÃÃù û
yÃÃû ü
,ÃÃü †
$numÃÃ° ¢
)ÃÃ¢ £
)ÃÃ£ §
;ÃÃ§ •
Handles
ŒŒ 
.
ŒŒ +
DrawSolidRectangleWithOutline
ŒŒ 1
(
ŒŒ1 2
m_HandlePoints
ŒŒ2 @
,
ŒŒ@ A
new
ŒŒB E
Color32
ŒŒF M
(
ŒŒM N
$num
ŒŒN Q
,
ŒŒQ R
$num
ŒŒS V
,
ŒŒV W
$num
ŒŒX [
,
ŒŒ[ \
$num
ŒŒ] ^
)
ŒŒ^ _
,
ŒŒ_ `
new
ŒŒa d
Color32
ŒŒe l
(
ŒŒl m
$num
ŒŒm p
,
ŒŒp q
$num
ŒŒr u
,
ŒŒu v
$num
ŒŒw x
,
ŒŒx y
$num
ŒŒz }
)
ŒŒ} ~
)
ŒŒ~ 
;ŒŒ Ä
Vector3
”” 
oldLeft
”” 
=
”” 
(
”” 
m_HandlePoints
”” -
[
””- .
$num
””. /
]
””/ 0
+
””1 2
m_HandlePoints
””3 A
[
””A B
$num
””B C
]
””C D
)
””D E
*
””F G
$num
””H L
;
””L M
Vector3
‘‘ 
newLeft
‘‘ 
=
‘‘ 
Handles
‘‘ %
.
‘‘% &
FreeMoveHandle
‘‘& 4
(
‘‘4 5
oldLeft
‘‘5 <
,
‘‘< =

Quaternion
‘‘> H
.
‘‘H I
identity
‘‘I Q
,
‘‘Q R
HandleUtility
‘‘S `
.
‘‘` a
GetHandleSize
‘‘a n
(
‘‘n o
m_RectTransform
‘‘o ~
.
‘‘~ 
position‘‘ á
)‘‘á à
*‘‘â ä
$num‘‘ã ê
,‘‘ê ë
Vector3‘‘í ô
.‘‘ô ö
zero‘‘ö û
,‘‘û ü
Handles‘‘† ß
.‘‘ß ®
DotHandleCap‘‘® ¥
)‘‘¥ µ
;‘‘µ ∂
bool
’’ 

hasChanged
’’ 
=
’’ 
false
’’ #
;
’’# $
if
÷÷ 
(
÷÷ 
oldLeft
÷÷ 
!=
÷÷ 
newLeft
÷÷ "
)
÷÷" #
{
◊◊ 
float
ÿÿ 
delta
ÿÿ 
=
ÿÿ 
oldLeft
ÿÿ %
.
ÿÿ% &
x
ÿÿ& '
-
ÿÿ( )
newLeft
ÿÿ* 1
.
ÿÿ1 2
x
ÿÿ2 3
;
ÿÿ3 4
marginOffset
ŸŸ 
.
ŸŸ 
x
ŸŸ 
+=
ŸŸ !
-
ŸŸ" #
delta
ŸŸ# (
/
ŸŸ) *

lossyScale
ŸŸ+ 5
.
ŸŸ5 6
x
ŸŸ6 7
;
ŸŸ7 8

hasChanged
€€ 
=
€€ 
true
€€ !
;
€€! "
}
‹‹ 
Vector3
ﬂﬂ 
oldTop
ﬂﬂ 
=
ﬂﬂ 
(
ﬂﬂ 
m_HandlePoints
ﬂﬂ ,
[
ﬂﬂ, -
$num
ﬂﬂ- .
]
ﬂﬂ. /
+
ﬂﬂ0 1
m_HandlePoints
ﬂﬂ2 @
[
ﬂﬂ@ A
$num
ﬂﬂA B
]
ﬂﬂB C
)
ﬂﬂC D
*
ﬂﬂE F
$num
ﬂﬂG K
;
ﬂﬂK L
Vector3
‡‡ 
newTop
‡‡ 
=
‡‡ 
Handles
‡‡ $
.
‡‡$ %
FreeMoveHandle
‡‡% 3
(
‡‡3 4
oldTop
‡‡4 :
,
‡‡: ;

Quaternion
‡‡< F
.
‡‡F G
identity
‡‡G O
,
‡‡O P
HandleUtility
‡‡Q ^
.
‡‡^ _
GetHandleSize
‡‡_ l
(
‡‡l m
m_RectTransform
‡‡m |
.
‡‡| }
position‡‡} Ö
)‡‡Ö Ü
*‡‡á à
$num‡‡â é
,‡‡é è
Vector3‡‡ê ó
.‡‡ó ò
zero‡‡ò ú
,‡‡ú ù
Handles‡‡û •
.‡‡• ¶
DotHandleCap‡‡¶ ≤
)‡‡≤ ≥
;‡‡≥ ¥
if
·· 
(
·· 
oldTop
·· 
!=
·· 
newTop
··  
)
··  !
{
‚‚ 
float
„„ 
delta
„„ 
=
„„ 
oldTop
„„ $
.
„„$ %
y
„„% &
-
„„' (
newTop
„„) /
.
„„/ 0
y
„„0 1
;
„„1 2
marginOffset
‰‰ 
.
‰‰ 
y
‰‰ 
+=
‰‰ !
delta
‰‰" '
/
‰‰( )

lossyScale
‰‰* 4
.
‰‰4 5
y
‰‰5 6
;
‰‰6 7

hasChanged
ÊÊ 
=
ÊÊ 
true
ÊÊ !
;
ÊÊ! "
}
ÁÁ 
Vector3
ÍÍ 
oldRight
ÍÍ 
=
ÍÍ 
(
ÍÍ  
m_HandlePoints
ÍÍ  .
[
ÍÍ. /
$num
ÍÍ/ 0
]
ÍÍ0 1
+
ÍÍ2 3
m_HandlePoints
ÍÍ4 B
[
ÍÍB C
$num
ÍÍC D
]
ÍÍD E
)
ÍÍE F
*
ÍÍG H
$num
ÍÍI M
;
ÍÍM N
Vector3
ÎÎ 
newRight
ÎÎ 
=
ÎÎ 
Handles
ÎÎ &
.
ÎÎ& '
FreeMoveHandle
ÎÎ' 5
(
ÎÎ5 6
oldRight
ÎÎ6 >
,
ÎÎ> ?

Quaternion
ÎÎ@ J
.
ÎÎJ K
identity
ÎÎK S
,
ÎÎS T
HandleUtility
ÎÎU b
.
ÎÎb c
GetHandleSize
ÎÎc p
(
ÎÎp q
m_RectTransformÎÎq Ä
.ÎÎÄ Å
positionÎÎÅ â
)ÎÎâ ä
*ÎÎã å
$numÎÎç í
,ÎÎí ì
Vector3ÎÎî õ
.ÎÎõ ú
zeroÎÎú †
,ÎÎ† °
HandlesÎÎ¢ ©
.ÎÎ© ™
DotHandleCapÎÎ™ ∂
)ÎÎ∂ ∑
;ÎÎ∑ ∏
if
ÏÏ 
(
ÏÏ 
oldRight
ÏÏ 
!=
ÏÏ 
newRight
ÏÏ $
)
ÏÏ$ %
{
ÌÌ 
float
ÓÓ 
delta
ÓÓ 
=
ÓÓ 
oldRight
ÓÓ &
.
ÓÓ& '
x
ÓÓ' (
-
ÓÓ) *
newRight
ÓÓ+ 3
.
ÓÓ3 4
x
ÓÓ4 5
;
ÓÓ5 6
marginOffset
ÔÔ 
.
ÔÔ 
z
ÔÔ 
+=
ÔÔ !
delta
ÔÔ" '
/
ÔÔ( )

lossyScale
ÔÔ* 4
.
ÔÔ4 5
x
ÔÔ5 6
;
ÔÔ6 7

hasChanged
 
=
 
true
 !
;
! "
}
ÚÚ 
Vector3
ıı 
	oldBottom
ıı 
=
ıı 
(
ıı  !
m_HandlePoints
ıı! /
[
ıı/ 0
$num
ıı0 1
]
ıı1 2
+
ıı3 4
m_HandlePoints
ıı5 C
[
ııC D
$num
ııD E
]
ııE F
)
ııF G
*
ııH I
$num
ııJ N
;
ııN O
Vector3
ˆˆ 
	newBottom
ˆˆ 
=
ˆˆ 
Handles
ˆˆ  '
.
ˆˆ' (
FreeMoveHandle
ˆˆ( 6
(
ˆˆ6 7
	oldBottom
ˆˆ7 @
,
ˆˆ@ A

Quaternion
ˆˆB L
.
ˆˆL M
identity
ˆˆM U
,
ˆˆU V
HandleUtility
ˆˆW d
.
ˆˆd e
GetHandleSize
ˆˆe r
(
ˆˆr s
m_RectTransformˆˆs Ç
.ˆˆÇ É
positionˆˆÉ ã
)ˆˆã å
*ˆˆç é
$numˆˆè î
,ˆˆî ï
Vector3ˆˆñ ù
.ˆˆù û
zeroˆˆû ¢
,ˆˆ¢ £
Handlesˆˆ§ ´
.ˆˆ´ ¨
DotHandleCapˆˆ¨ ∏
)ˆˆ∏ π
;ˆˆπ ∫
if
˜˜ 
(
˜˜ 
	oldBottom
˜˜ 
!=
˜˜ 
	newBottom
˜˜ &
)
˜˜& '
{
¯¯ 
float
˘˘ 
delta
˘˘ 
=
˘˘ 
	oldBottom
˘˘ '
.
˘˘' (
y
˘˘( )
-
˘˘* +
	newBottom
˘˘, 5
.
˘˘5 6
y
˘˘6 7
;
˘˘7 8
marginOffset
˙˙ 
.
˙˙ 
w
˙˙ 
+=
˙˙ !
-
˙˙" #
delta
˙˙# (
/
˙˙) *

lossyScale
˙˙+ 5
.
˙˙5 6
y
˙˙6 7
;
˙˙7 8

hasChanged
˚˚ 
=
˚˚ 
true
˚˚ !
;
˚˚! "
}
˝˝ 
if
ˇˇ 
(
ˇˇ 

hasChanged
ˇˇ 
)
ˇˇ 
{
ÄÄ 
Undo
ÅÅ 
.
ÅÅ 
RecordObjects
ÅÅ "
(
ÅÅ" #
new
ÅÅ# &
Object
ÅÅ' -
[
ÅÅ- .
]
ÅÅ. /
{
ÅÅ0 1
m_RectTransform
ÅÅ1 @
,
ÅÅ@ A
m_TextComponent
ÅÅB Q
}
ÅÅR S
,
ÅÅS T
$str
ÅÅU e
)
ÅÅe f
;
ÅÅf g
m_TextComponent
ÇÇ 
.
ÇÇ  
margin
ÇÇ  &
=
ÇÇ' (
marginOffset
ÇÇ) 5
;
ÇÇ5 6
EditorUtility
ÉÉ 
.
ÉÉ 
SetDirty
ÉÉ &
(
ÉÉ& '
target
ÉÉ' -
)
ÉÉ- .
;
ÉÉ. /
}
ÑÑ 
}
ÖÖ 	
	protected
áá 
void
áá 
DrawTextInput
áá $
(
áá$ %
)
áá% &
{
àà 	
EditorGUILayout
ââ 
.
ââ 
Space
ââ !
(
ââ! "
)
ââ" #
;
ââ# $
Rect
ãã 
rect
ãã 
=
ãã 
EditorGUILayout
ãã '
.
ãã' (
GetControlRect
ãã( 6
(
ãã6 7
false
ãã7 <
,
ãã< =
$num
ãã> @
)
ãã@ A
;
ããA B
GUI
åå 
.
åå 
Label
åå 
(
åå 
rect
åå 
,
åå 
new
åå 

GUIContent
åå  *
(
åå* +
$str
åå+ >
)
åå> ?
,
åå? @ 
TMP_UIStyleManager
ååA S
.
ååS T
sectionHeader
ååT a
)
ååa b
;
ååb c
	EditorGUI
éé 
.
éé 
indentLevel
éé !
=
éé" #
$num
éé$ %
;
éé% &
if
ëë 
(
ëë -
m_ParentLinkedTextComponentProp
ëë /
.
ëë/ 0"
objectReferenceValue
ëë0 D
!=
ëëE G
null
ëëH L
)
ëëL M
{
íí 
EditorGUILayout
ìì 
.
ìì  
HelpBox
ìì  '
(
ìì' (
$str
ìì( |
,
ìì| }
MessageTypeìì~ â
.ììâ ä
Infoììä é
)ììé è
;ììè ê
}
îî 
else
ïï 
{
ññ 
float
òò 

labelWidth
òò  
=
òò! "
EditorGUIUtility
òò# 3
.
òò3 4

labelWidth
òò4 >
;
òò> ?
EditorGUIUtility
ôô  
.
ôô  !

labelWidth
ôô! +
=
ôô, -
$num
ôô. 2
;
ôô2 3!
m_IsRightToLeftProp
õõ #
.
õõ# $
	boolValue
õõ$ -
=
õõ. /
	EditorGUI
õõ0 9
.
õõ9 :
Toggle
õõ: @
(
õõ@ A
new
õõA D
Rect
õõE I
(
õõI J
rect
õõJ N
.
õõN O
width
õõO T
-
õõU V
$num
õõW Z
,
õõZ [
rect
õõ\ `
.
õõ` a
y
õõa b
+
õõc d
$num
õõe f
,
õõf g
$num
õõh k
,
õõk l
$num
õõm o
)
õõo p
,
õõp q
k_RtlToggleLabelõõr Ç
,õõÇ É#
m_IsRightToLeftPropõõÑ ó
.õõó ò
	boolValueõõò °
)õõ° ¢
;õõ¢ £
EditorGUIUtility
ùù  
.
ùù  !

labelWidth
ùù! +
=
ùù, -

labelWidth
ùù. 8
;
ùù8 9
	EditorGUI
üü 
.
üü 
BeginChangeCheck
üü *
(
üü* +
)
üü+ ,
;
üü, -
EditorGUILayout
†† 
.
††  
PropertyField
††  -
(
††- .

m_TextProp
††. 8
,
††8 9

GUIContent
††: D
.
††D E
none
††E I
)
††I J
;
††J K
if
¢¢ 
(
¢¢ 
	EditorGUI
¢¢ 
.
¢¢ 
EndChangeCheck
¢¢ ,
(
¢¢, -
)
¢¢- .
)
¢¢. /
{
££ 
m_TextComponent
§§ #
.
§§# $
m_inputSource
§§$ 1
=
§§2 3
TMP_Text
§§4 <
.
§§< =
TextInputSources
§§= M
.
§§M N
Text
§§N R
;
§§R S
m_TextComponent
•• #
.
••# $&
m_isInputParsingRequired
••$ <
=
••= >
true
••? C
;
••C D%
m_HavePropertiesChanged
¶¶ +
=
¶¶, -
true
¶¶. 2
;
¶¶2 3
}
ßß 
if
©© 
(
©© !
m_IsRightToLeftProp
©© '
.
©©' (
	boolValue
©©( 1
)
©©1 2
{
™™ 
	m_RtlText
¨¨ 
=
¨¨ 
string
¨¨  &
.
¨¨& '
Empty
¨¨' ,
;
¨¨, -
string
≠≠ 

sourceText
≠≠ %
=
≠≠& '

m_TextProp
≠≠( 2
.
≠≠2 3
stringValue
≠≠3 >
;
≠≠> ?
for
∞∞ 
(
∞∞ 
int
∞∞ 
i
∞∞ 
=
∞∞  
$num
∞∞! "
;
∞∞" #
i
∞∞$ %
<
∞∞& '

sourceText
∞∞( 2
.
∞∞2 3
Length
∞∞3 9
;
∞∞9 :
i
∞∞; <
++
∞∞< >
)
∞∞> ?
	m_RtlText
±± !
+=
±±" $

sourceText
±±% /
[
±±/ 0

sourceText
±±0 :
.
±±: ;
Length
±±; A
-
±±B C
i
±±D E
-
±±F G
$num
±±H I
]
±±I J
;
±±J K
	GUILayout
≥≥ 
.
≥≥ 
Label
≥≥ #
(
≥≥# $
$str
≥≥$ 4
)
≥≥4 5
;
≥≥5 6
	EditorGUI
µµ 
.
µµ 
BeginChangeCheck
µµ .
(
µµ. /
)
µµ/ 0
;
µµ0 1
	m_RtlText
∂∂ 
=
∂∂ 
EditorGUILayout
∂∂  /
.
∂∂/ 0
TextArea
∂∂0 8
(
∂∂8 9
	m_RtlText
∂∂9 B
,
∂∂B C 
TMP_UIStyleManager
∂∂D V
.
∂∂V W
wrappingTextArea
∂∂W g
,
∂∂g h
	GUILayout
∂∂i r
.
∂∂r s
Height
∂∂s y
(
∂∂y z
	EditorGUI∂∂z É
.∂∂É Ñ!
GetPropertyHeight∂∂Ñ ï
(∂∂ï ñ

m_TextProp∂∂ñ †
)∂∂† °
-∂∂¢ £ 
EditorGUIUtility∂∂§ ¥
.∂∂¥ µ 
singleLineHeight∂∂µ ≈
)∂∂≈ ∆
,∂∂∆ «
	GUILayout∂∂» —
.∂∂— “
ExpandWidth∂∂“ ›
(∂∂› ﬁ
true∂∂ﬁ ‚
)∂∂‚ „
)∂∂„ ‰
;∂∂‰ Â
if
∏∏ 
(
∏∏ 
	EditorGUI
∏∏ !
.
∏∏! "
EndChangeCheck
∏∏" 0
(
∏∏0 1
)
∏∏1 2
)
∏∏2 3
{
ππ 

sourceText
ªª "
=
ªª# $
string
ªª% +
.
ªª+ ,
Empty
ªª, 1
;
ªª1 2
for
ææ 
(
ææ 
int
ææ  
i
ææ! "
=
ææ# $
$num
ææ% &
;
ææ& '
i
ææ( )
<
ææ* +
	m_RtlText
ææ, 5
.
ææ5 6
Length
ææ6 <
;
ææ< =
i
ææ> ?
++
ææ? A
)
ææA B

sourceText
øø &
+=
øø' )
	m_RtlText
øø* 3
[
øø3 4
	m_RtlText
øø4 =
.
øø= >
Length
øø> D
-
øøE F
i
øøG H
-
øøI J
$num
øøK L
]
øøL M
;
øøM N

m_TextProp
¡¡ "
.
¡¡" #
stringValue
¡¡# .
=
¡¡/ 0

sourceText
¡¡1 ;
;
¡¡; <
}
¬¬ 
}
√√ 
if
∆∆ 
(
∆∆ 
m_StyleNames
∆∆  
!=
∆∆! #
null
∆∆$ (
)
∆∆( )
{
«« 
rect
»» 
=
»» 
EditorGUILayout
»» *
.
»»* +
GetControlRect
»»+ 9
(
»»9 :
false
»»: ?
,
»»? @
$num
»»A C
)
»»C D
;
»»D E$
m_TextStyleIndexLookup
   *
.
  * +
TryGetValue
  + 6
(
  6 7%
m_TextStyleHashCodeProp
  7 N
.
  N O
intValue
  O W
,
  W X
out
  Y \#
m_StyleSelectionIndex
  ] r
)
  r s
;
  s t
	EditorGUI
ÃÃ 
.
ÃÃ 
BeginChangeCheck
ÃÃ .
(
ÃÃ. /
)
ÃÃ/ 0
;
ÃÃ0 1#
m_StyleSelectionIndex
ÕÕ )
=
ÕÕ* +
	EditorGUI
ÕÕ, 5
.
ÕÕ5 6
Popup
ÕÕ6 ;
(
ÕÕ; <
rect
ÕÕ< @
,
ÕÕ@ A
k_StyleLabel
ÕÕB N
,
ÕÕN O#
m_StyleSelectionIndex
ÕÕP e
,
ÕÕe f
m_StyleNames
ÕÕg s
)
ÕÕs t
;
ÕÕt u
if
ŒŒ 
(
ŒŒ 
	EditorGUI
ŒŒ !
.
ŒŒ! "
EndChangeCheck
ŒŒ" 0
(
ŒŒ0 1
)
ŒŒ1 2
)
ŒŒ2 3
{
œœ %
m_TextStyleHashCodeProp
–– /
.
––/ 0
intValue
––0 8
=
––9 :
m_Styles
––; C
[
––C D#
m_StyleSelectionIndex
––D Y
]
––Y Z
.
––Z [
hashCode
––[ c
;
––c d
m_TextComponent
—— '
.
——' (
m_TextStyle
——( 3
=
——4 5
m_Styles
——6 >
[
——> ?#
m_StyleSelectionIndex
——? T
]
——T U
;
——U V%
m_HavePropertiesChanged
““ /
=
““0 1
true
““2 6
;
““6 7
}
”” 
}
‘‘ 
}
’’ 
}
÷÷ 	
	protected
ÿÿ 
void
ÿÿ 
DrawMainSettings
ÿÿ '
(
ÿÿ' (
)
ÿÿ( )
{
ŸŸ 	
	GUILayout
€€ 
.
€€ 
Label
€€ 
(
€€ 
new
€€ 

GUIContent
€€  *
(
€€* +
$str
€€+ A
)
€€A B
,
€€B C 
TMP_UIStyleManager
€€D V
.
€€V W
sectionHeader
€€W d
)
€€d e
;
€€e f
DrawFont
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ 
	DrawColor
·· 
(
·· 
)
·· 
;
·· 
DrawSpacing
„„ 
(
„„ 
)
„„ 
;
„„ 
DrawAlignment
ÂÂ 
(
ÂÂ 
)
ÂÂ 
;
ÂÂ "
DrawWrappingOverflow
ÁÁ  
(
ÁÁ  !
)
ÁÁ! "
;
ÁÁ" # 
DrawTextureMapping
ÈÈ 
(
ÈÈ 
)
ÈÈ  
;
ÈÈ  !
}
ÏÏ 	
void
ÓÓ 
DrawFont
ÓÓ 
(
ÓÓ 
)
ÓÓ 
{
ÔÔ 	
bool
 
isFontAssetDirty
 !
=
" #
false
$ )
;
) *
	EditorGUI
ÛÛ 
.
ÛÛ 
BeginChangeCheck
ÛÛ &
(
ÛÛ& '
)
ÛÛ' (
;
ÛÛ( )
EditorGUILayout
ÙÙ 
.
ÙÙ 
PropertyField
ÙÙ )
(
ÙÙ) *
m_FontAssetProp
ÙÙ* 9
,
ÙÙ9 :
k_FontAssetLabel
ÙÙ; K
)
ÙÙK L
;
ÙÙL M
if
ıı 
(
ıı 
	EditorGUI
ıı 
.
ıı 
EndChangeCheck
ıı (
(
ıı( )
)
ıı) *
)
ıı* +
{
ˆˆ %
m_HavePropertiesChanged
˜˜ '
=
˜˜( )
true
˜˜* .
;
˜˜. /'
m_HasFontAssetChangedProp
¯¯ )
.
¯¯) *
	boolValue
¯¯* 3
=
¯¯4 5
true
¯¯6 :
;
¯¯: ;#
m_MaterialPresetNames
˚˚ %
=
˚˚& ' 
GetMaterialPresets
˚˚( :
(
˚˚: ;
)
˚˚; <
;
˚˚< =,
m_MaterialPresetSelectionIndex
¸¸ .
=
¸¸/ 0
$num
¸¸1 2
;
¸¸2 3
isFontAssetDirty
˛˛  
=
˛˛! "
true
˛˛# '
;
˛˛' (
}
ˇˇ 
Rect
ÅÅ 
rect
ÅÅ 
;
ÅÅ 
if
ÑÑ 
(
ÑÑ #
m_MaterialPresetNames
ÑÑ %
!=
ÑÑ& (
null
ÑÑ) -
&&
ÑÑ. 0
!
ÑÑ1 2
isFontAssetDirty
ÑÑ2 B
)
ÑÑC D
{
ÖÖ 
	EditorGUI
ÜÜ 
.
ÜÜ 
BeginChangeCheck
ÜÜ *
(
ÜÜ* +
)
ÜÜ+ ,
;
ÜÜ, -
rect
áá 
=
áá 
EditorGUILayout
áá &
.
áá& '
GetControlRect
áá' 5
(
áá5 6
false
áá6 ;
,
áá; <
$num
áá= ?
)
áá? @
;
áá@ A
float
ââ 
	oldHeight
ââ 
=
ââ  !
EditorStyles
ââ" .
.
ââ. /
popup
ââ/ 4
.
ââ4 5
fixedHeight
ââ5 @
;
ââ@ A
EditorStyles
ää 
.
ää 
popup
ää "
.
ää" #
fixedHeight
ää# .
=
ää/ 0
rect
ää1 5
.
ää5 6
height
ää6 <
;
ää< =
int
åå 
oldSize
åå 
=
åå 
EditorStyles
åå *
.
åå* +
popup
åå+ 0
.
åå0 1
fontSize
åå1 9
;
åå9 :
EditorStyles
çç 
.
çç 
popup
çç "
.
çç" #
fontSize
çç# +
=
çç, -
$num
çç. 0
;
çç0 1
if
èè 
(
èè &
m_FontSharedMaterialProp
èè ,
.
èè, -"
objectReferenceValue
èè- A
!=
èèB D
null
èèE I
)
èèI J)
m_MaterialPresetIndexLookup
êê /
.
êê/ 0
TryGetValue
êê0 ;
(
êê; <&
m_FontSharedMaterialProp
êê< T
.
êêT U"
objectReferenceValue
êêU i
.
êêi j
GetInstanceID
êêj w
(
êêw x
)
êêx y
,
êêy z
out
êê{ ~-
m_MaterialPresetSelectionIndexêê ù
)êêù û
;êêû ü,
m_MaterialPresetSelectionIndex
íí .
=
íí/ 0
	EditorGUI
íí1 :
.
íí: ;
Popup
íí; @
(
íí@ A
rect
ííA E
,
ííE F#
k_MaterialPresetLabel
ííG \
,
íí\ ],
m_MaterialPresetSelectionIndex
íí^ |
,
íí| }$
m_MaterialPresetNamesíí~ ì
)ííì î
;ííî ï
if
ìì 
(
ìì 
	EditorGUI
ìì 
.
ìì 
EndChangeCheck
ìì ,
(
ìì, -
)
ìì- .
)
ìì. /
{
îî &
m_FontSharedMaterialProp
ïï ,
.
ïï, -"
objectReferenceValue
ïï- A
=
ïïB C
m_MaterialPresets
ïïD U
[
ïïU V,
m_MaterialPresetSelectionIndex
ïïV t
]
ïït u
;
ïïu v%
m_HavePropertiesChanged
ññ +
=
ññ, -
true
ññ. 2
;
ññ2 3
}
óó 
EditorStyles
ôô 
.
ôô 
popup
ôô "
.
ôô" #
fixedHeight
ôô# .
=
ôô/ 0
	oldHeight
ôô1 :
;
ôô: ;
EditorStyles
öö 
.
öö 
popup
öö "
.
öö" #
fontSize
öö# +
=
öö, -
oldSize
öö. 5
;
öö5 6
}
õõ 
	EditorGUI
ûû 
.
ûû 
BeginChangeCheck
ûû &
(
ûû& '
)
ûû' (
;
ûû( )
int
†† 
v1
†† 
,
†† 
v2
†† 
,
†† 
v3
†† 
,
†† 
v4
†† 
,
†† 
v5
††  "
,
††" #
v6
††$ &
,
††& '
v7
††( *
;
††* +
if
¢¢ 
(
¢¢ 
EditorGUIUtility
¢¢  
.
¢¢  !
wideMode
¢¢! )
)
¢¢) *
{
££ 
rect
§§ 
=
§§ 
EditorGUILayout
§§ &
.
§§& '
GetControlRect
§§' 5
(
§§5 6
true
§§6 :
,
§§: ;
EditorGUIUtility
§§< L
.
§§L M
singleLineHeight
§§M ]
+
§§^ _
$num
§§` b
)
§§b c
;
§§c d
	EditorGUI
¶¶ 
.
¶¶ 
PrefixLabel
¶¶ %
(
¶¶% &
rect
¶¶& *
,
¶¶* +
k_FontStyleLabel
¶¶, <
)
¶¶< =
;
¶¶= >
int
®® 

styleValue
®® 
=
®®  
m_FontStyleProp
®®! 0
.
®®0 1
intValue
®®1 9
;
®®9 :
rect
™™ 
.
™™ 
x
™™ 
+=
™™ 
EditorGUIUtility
™™ *
.
™™* +

labelWidth
™™+ 5
;
™™5 6
rect
´´ 
.
´´ 
width
´´ 
-=
´´ 
EditorGUIUtility
´´ .
.
´´. /

labelWidth
´´/ 9
;
´´9 :
rect
≠≠ 
.
≠≠ 
width
≠≠ 
=
≠≠ 
Mathf
≠≠ "
.
≠≠" #
Max
≠≠# &
(
≠≠& '
$num
≠≠' *
,
≠≠* +
rect
≠≠, 0
.
≠≠0 1
width
≠≠1 6
/
≠≠7 8
$num
≠≠9 ;
)
≠≠; <
;
≠≠< =
v1
ØØ 
=
ØØ 
TMP_EditorUtility
ØØ &
.
ØØ& '
EditorToggle
ØØ' 3
(
ØØ3 4
rect
ØØ4 8
,
ØØ8 9
(
ØØ: ;

styleValue
ØØ; E
&
ØØF G
$num
ØØH I
)
ØØI J
==
ØØK M
$num
ØØN O
,
ØØO P
k_BoldLabel
ØØQ \
,
ØØ\ ] 
TMP_UIStyleManager
ØØ^ p
.
ØØp q"
alignmentButtonLeftØØq Ñ
)ØØÑ Ö
?ØØÜ á
$numØØà â
:ØØä ã
$numØØå ç
;ØØç é
rect
∞∞ 
.
∞∞ 
x
∞∞ 
+=
∞∞ 
rect
∞∞ 
.
∞∞ 
width
∞∞ $
;
∞∞$ %
v2
±± 
=
±± 
TMP_EditorUtility
±± &
.
±±& '
EditorToggle
±±' 3
(
±±3 4
rect
±±4 8
,
±±8 9
(
±±: ;

styleValue
±±; E
&
±±F G
$num
±±H I
)
±±I J
==
±±K M
$num
±±N O
,
±±O P
k_ItalicLabel
±±Q ^
,
±±^ _ 
TMP_UIStyleManager
±±` r
.
±±r s!
alignmentButtonMid±±s Ö
)±±Ö Ü
?±±á à
$num±±â ä
:±±ã å
$num±±ç é
;±±é è
rect
≤≤ 
.
≤≤ 
x
≤≤ 
+=
≤≤ 
rect
≤≤ 
.
≤≤ 
width
≤≤ $
;
≤≤$ %
v3
≥≥ 
=
≥≥ 
TMP_EditorUtility
≥≥ &
.
≥≥& '
EditorToggle
≥≥' 3
(
≥≥3 4
rect
≥≥4 8
,
≥≥8 9
(
≥≥: ;

styleValue
≥≥; E
&
≥≥F G
$num
≥≥H I
)
≥≥I J
==
≥≥K M
$num
≥≥N O
,
≥≥O P
k_UnderlineLabel
≥≥Q a
,
≥≥a b 
TMP_UIStyleManager
≥≥c u
.
≥≥u v!
alignmentButtonMid≥≥v à
)≥≥à â
?≥≥ä ã
$num≥≥å ç
:≥≥é è
$num≥≥ê ë
;≥≥ë í
rect
¥¥ 
.
¥¥ 
x
¥¥ 
+=
¥¥ 
rect
¥¥ 
.
¥¥ 
width
¥¥ $
;
¥¥$ %
v7
µµ 
=
µµ 
TMP_EditorUtility
µµ &
.
µµ& '
EditorToggle
µµ' 3
(
µµ3 4
rect
µµ4 8
,
µµ8 9
(
µµ: ;

styleValue
µµ; E
&
µµF G
$num
µµH J
)
µµJ K
==
µµL N
$num
µµO Q
,
µµQ R"
k_StrikethroughLabel
µµS g
,
µµg h 
TMP_UIStyleManager
µµi {
.
µµ{ |#
alignmentButtonRightµµ| ê
)µµê ë
?µµí ì
$numµµî ñ
:µµó ò
$numµµô ö
;µµö õ
rect
∂∂ 
.
∂∂ 
x
∂∂ 
+=
∂∂ 
rect
∂∂ 
.
∂∂ 
width
∂∂ $
;
∂∂$ %
int
∏∏ 
selected
∏∏ 
=
∏∏ 
$num
∏∏  
;
∏∏  !
	EditorGUI
∫∫ 
.
∫∫ 
BeginChangeCheck
∫∫ *
(
∫∫* +
)
∫∫+ ,
;
∫∫, -
v4
ªª 
=
ªª 
TMP_EditorUtility
ªª &
.
ªª& '
EditorToggle
ªª' 3
(
ªª3 4
rect
ªª4 8
,
ªª8 9
(
ªª: ;

styleValue
ªª; E
&
ªªF G
$num
ªªH I
)
ªªI J
==
ªªK M
$num
ªªN O
,
ªªO P
k_LowercaseLabel
ªªQ a
,
ªªa b 
TMP_UIStyleManager
ªªc u
.
ªªu v"
alignmentButtonLeftªªv â
)ªªâ ä
?ªªã å
$numªªç é
:ªªè ê
$numªªë í
;ªªí ì
if
ºº 
(
ºº 
	EditorGUI
ºº 
.
ºº 
EndChangeCheck
ºº ,
(
ºº, -
)
ºº- .
&&
ºº/ 1
v4
ºº2 4
>
ºº5 6
$num
ºº7 8
)
ºº8 9
{
ΩΩ 
selected
ææ 
=
ææ 
v4
ææ !
;
ææ! "
}
øø 
rect
¿¿ 
.
¿¿ 
x
¿¿ 
+=
¿¿ 
rect
¿¿ 
.
¿¿ 
width
¿¿ $
;
¿¿$ %
	EditorGUI
¡¡ 
.
¡¡ 
BeginChangeCheck
¡¡ *
(
¡¡* +
)
¡¡+ ,
;
¡¡, -
v5
¬¬ 
=
¬¬ 
TMP_EditorUtility
¬¬ &
.
¬¬& '
EditorToggle
¬¬' 3
(
¬¬3 4
rect
¬¬4 8
,
¬¬8 9
(
¬¬: ;

styleValue
¬¬; E
&
¬¬F G
$num
¬¬H J
)
¬¬J K
==
¬¬L N
$num
¬¬O Q
,
¬¬Q R
k_UppercaseLabel
¬¬S c
,
¬¬c d 
TMP_UIStyleManager
¬¬e w
.
¬¬w x!
alignmentButtonMid¬¬x ä
)¬¬ä ã
?¬¬å ç
$num¬¬é ê
:¬¬ë í
$num¬¬ì î
;¬¬î ï
if
√√ 
(
√√ 
	EditorGUI
√√ 
.
√√ 
EndChangeCheck
√√ ,
(
√√, -
)
√√- .
&&
√√/ 1
v5
√√2 4
>
√√5 6
$num
√√7 8
)
√√8 9
{
ƒƒ 
selected
≈≈ 
=
≈≈ 
v5
≈≈ !
;
≈≈! "
}
∆∆ 
rect
«« 
.
«« 
x
«« 
+=
«« 
rect
«« 
.
«« 
width
«« $
;
««$ %
	EditorGUI
»» 
.
»» 
BeginChangeCheck
»» *
(
»»* +
)
»»+ ,
;
»», -
v6
…… 
=
…… 
TMP_EditorUtility
…… &
.
……& '
EditorToggle
……' 3
(
……3 4
rect
……4 8
,
……8 9
(
……: ;

styleValue
……; E
&
……F G
$num
……H J
)
……J K
==
……L N
$num
……O Q
,
……Q R
k_SmallcapsLabel
……S c
,
……c d 
TMP_UIStyleManager
……e w
.
……w x#
alignmentButtonRight……x å
)……å ç
?……é è
$num……ê í
:……ì î
$num……ï ñ
;……ñ ó
if
   
(
   
	EditorGUI
   
.
   
EndChangeCheck
   ,
(
  , -
)
  - .
&&
  / 1
v6
  2 4
>
  5 6
$num
  7 8
)
  8 9
{
ÀÀ 
selected
ÃÃ 
=
ÃÃ 
v6
ÃÃ !
;
ÃÃ! "
}
ÕÕ 
if
œœ 
(
œœ 
selected
œœ 
>
œœ 
$num
œœ  
)
œœ  !
{
–– 
v4
—— 
=
—— 
selected
—— !
==
——" $
$num
——% &
?
——' (
$num
——) *
:
——+ ,
$num
——- .
;
——. /
v5
““ 
=
““ 
selected
““ !
==
““" $
$num
““% '
?
““( )
$num
““* ,
:
““- .
$num
““/ 0
;
““0 1
v6
”” 
=
”” 
selected
”” !
==
””" $
$num
””% '
?
””( )
$num
””* ,
:
””- .
$num
””/ 0
;
””0 1
}
‘‘ 
}
’’ 
else
÷÷ 
{
◊◊ 
rect
ÿÿ 
=
ÿÿ 
EditorGUILayout
ÿÿ &
.
ÿÿ& '
GetControlRect
ÿÿ' 5
(
ÿÿ5 6
true
ÿÿ6 :
,
ÿÿ: ;
EditorGUIUtility
ÿÿ< L
.
ÿÿL M
singleLineHeight
ÿÿM ]
+
ÿÿ^ _
$num
ÿÿ` b
)
ÿÿb c
;
ÿÿc d
	EditorGUI
⁄⁄ 
.
⁄⁄ 
PrefixLabel
⁄⁄ %
(
⁄⁄% &
rect
⁄⁄& *
,
⁄⁄* +
k_FontStyleLabel
⁄⁄, <
)
⁄⁄< =
;
⁄⁄= >
int
‹‹ 

styleValue
‹‹ 
=
‹‹  
m_FontStyleProp
‹‹! 0
.
‹‹0 1
intValue
‹‹1 9
;
‹‹9 :
rect
ﬁﬁ 
.
ﬁﬁ 
x
ﬁﬁ 
+=
ﬁﬁ 
EditorGUIUtility
ﬁﬁ *
.
ﬁﬁ* +

labelWidth
ﬁﬁ+ 5
;
ﬁﬁ5 6
rect
ﬂﬂ 
.
ﬂﬂ 
width
ﬂﬂ 
-=
ﬂﬂ 
EditorGUIUtility
ﬂﬂ .
.
ﬂﬂ. /

labelWidth
ﬂﬂ/ 9
;
ﬂﬂ9 :
rect
‡‡ 
.
‡‡ 
width
‡‡ 
=
‡‡ 
Mathf
‡‡ "
.
‡‡" #
Max
‡‡# &
(
‡‡& '
$num
‡‡' *
,
‡‡* +
rect
‡‡, 0
.
‡‡0 1
width
‡‡1 6
/
‡‡7 8
$num
‡‡9 ;
)
‡‡; <
;
‡‡< =
v1
‚‚ 
=
‚‚ 
TMP_EditorUtility
‚‚ &
.
‚‚& '
EditorToggle
‚‚' 3
(
‚‚3 4
rect
‚‚4 8
,
‚‚8 9
(
‚‚: ;

styleValue
‚‚; E
&
‚‚F G
$num
‚‚H I
)
‚‚I J
==
‚‚K M
$num
‚‚N O
,
‚‚O P
k_BoldLabel
‚‚Q \
,
‚‚\ ] 
TMP_UIStyleManager
‚‚^ p
.
‚‚p q"
alignmentButtonLeft‚‚q Ñ
)‚‚Ñ Ö
?‚‚Ü á
$num‚‚à â
:‚‚ä ã
$num‚‚å ç
;‚‚ç é
rect
„„ 
.
„„ 
x
„„ 
+=
„„ 
rect
„„ 
.
„„ 
width
„„ $
;
„„$ %
v2
‰‰ 
=
‰‰ 
TMP_EditorUtility
‰‰ &
.
‰‰& '
EditorToggle
‰‰' 3
(
‰‰3 4
rect
‰‰4 8
,
‰‰8 9
(
‰‰: ;

styleValue
‰‰; E
&
‰‰F G
$num
‰‰H I
)
‰‰I J
==
‰‰K M
$num
‰‰N O
,
‰‰O P
k_ItalicLabel
‰‰Q ^
,
‰‰^ _ 
TMP_UIStyleManager
‰‰` r
.
‰‰r s!
alignmentButtonMid‰‰s Ö
)‰‰Ö Ü
?‰‰á à
$num‰‰â ä
:‰‰ã å
$num‰‰ç é
;‰‰é è
rect
ÂÂ 
.
ÂÂ 
x
ÂÂ 
+=
ÂÂ 
rect
ÂÂ 
.
ÂÂ 
width
ÂÂ $
;
ÂÂ$ %
v3
ÊÊ 
=
ÊÊ 
TMP_EditorUtility
ÊÊ &
.
ÊÊ& '
EditorToggle
ÊÊ' 3
(
ÊÊ3 4
rect
ÊÊ4 8
,
ÊÊ8 9
(
ÊÊ: ;

styleValue
ÊÊ; E
&
ÊÊF G
$num
ÊÊH I
)
ÊÊI J
==
ÊÊK M
$num
ÊÊN O
,
ÊÊO P
k_UnderlineLabel
ÊÊQ a
,
ÊÊa b 
TMP_UIStyleManager
ÊÊc u
.
ÊÊu v!
alignmentButtonMidÊÊv à
)ÊÊà â
?ÊÊä ã
$numÊÊå ç
:ÊÊé è
$numÊÊê ë
;ÊÊë í
rect
ÁÁ 
.
ÁÁ 
x
ÁÁ 
+=
ÁÁ 
rect
ÁÁ 
.
ÁÁ 
width
ÁÁ $
;
ÁÁ$ %
v7
ËË 
=
ËË 
TMP_EditorUtility
ËË &
.
ËË& '
EditorToggle
ËË' 3
(
ËË3 4
rect
ËË4 8
,
ËË8 9
(
ËË: ;

styleValue
ËË; E
&
ËËF G
$num
ËËH J
)
ËËJ K
==
ËËL N
$num
ËËO Q
,
ËËQ R"
k_StrikethroughLabel
ËËS g
,
ËËg h 
TMP_UIStyleManager
ËËi {
.
ËË{ |#
alignmentButtonRightËË| ê
)ËËê ë
?ËËí ì
$numËËî ñ
:ËËó ò
$numËËô ö
;ËËö õ
rect
ÍÍ 
=
ÍÍ 
EditorGUILayout
ÍÍ &
.
ÍÍ& '
GetControlRect
ÍÍ' 5
(
ÍÍ5 6
true
ÍÍ6 :
,
ÍÍ: ;
EditorGUIUtility
ÍÍ< L
.
ÍÍL M
singleLineHeight
ÍÍM ]
+
ÍÍ^ _
$num
ÍÍ` b
)
ÍÍb c
;
ÍÍc d
rect
ÏÏ 
.
ÏÏ 
x
ÏÏ 
+=
ÏÏ 
EditorGUIUtility
ÏÏ *
.
ÏÏ* +

labelWidth
ÏÏ+ 5
;
ÏÏ5 6
rect
ÌÌ 
.
ÌÌ 
width
ÌÌ 
-=
ÌÌ 
EditorGUIUtility
ÌÌ .
.
ÌÌ. /

labelWidth
ÌÌ/ 9
;
ÌÌ9 :
rect
ÔÔ 
.
ÔÔ 
width
ÔÔ 
=
ÔÔ 
Mathf
ÔÔ "
.
ÔÔ" #
Max
ÔÔ# &
(
ÔÔ& '
$num
ÔÔ' *
,
ÔÔ* +
rect
ÔÔ, 0
.
ÔÔ0 1
width
ÔÔ1 6
/
ÔÔ7 8
$num
ÔÔ9 ;
)
ÔÔ; <
;
ÔÔ< =
int
ÒÒ 
selected
ÒÒ 
=
ÒÒ 
$num
ÒÒ  
;
ÒÒ  !
	EditorGUI
ÛÛ 
.
ÛÛ 
BeginChangeCheck
ÛÛ *
(
ÛÛ* +
)
ÛÛ+ ,
;
ÛÛ, -
v4
ÙÙ 
=
ÙÙ 
TMP_EditorUtility
ÙÙ &
.
ÙÙ& '
EditorToggle
ÙÙ' 3
(
ÙÙ3 4
rect
ÙÙ4 8
,
ÙÙ8 9
(
ÙÙ: ;

styleValue
ÙÙ; E
&
ÙÙF G
$num
ÙÙH I
)
ÙÙI J
==
ÙÙK M
$num
ÙÙN O
,
ÙÙO P
k_LowercaseLabel
ÙÙQ a
,
ÙÙa b 
TMP_UIStyleManager
ÙÙc u
.
ÙÙu v"
alignmentButtonLeftÙÙv â
)ÙÙâ ä
?ÙÙã å
$numÙÙç é
:ÙÙè ê
$numÙÙë í
;ÙÙí ì
if
ıı 
(
ıı 
	EditorGUI
ıı 
.
ıı 
EndChangeCheck
ıı ,
(
ıı, -
)
ıı- .
&&
ıı/ 1
v4
ıı2 4
>
ıı5 6
$num
ıı7 8
)
ıı8 9
{
ˆˆ 
selected
˜˜ 
=
˜˜ 
v4
˜˜ !
;
˜˜! "
}
¯¯ 
rect
˘˘ 
.
˘˘ 
x
˘˘ 
+=
˘˘ 
rect
˘˘ 
.
˘˘ 
width
˘˘ $
;
˘˘$ %
	EditorGUI
˙˙ 
.
˙˙ 
BeginChangeCheck
˙˙ *
(
˙˙* +
)
˙˙+ ,
;
˙˙, -
v5
˚˚ 
=
˚˚ 
TMP_EditorUtility
˚˚ &
.
˚˚& '
EditorToggle
˚˚' 3
(
˚˚3 4
rect
˚˚4 8
,
˚˚8 9
(
˚˚: ;

styleValue
˚˚; E
&
˚˚F G
$num
˚˚H J
)
˚˚J K
==
˚˚L N
$num
˚˚O Q
,
˚˚Q R
k_UppercaseLabel
˚˚S c
,
˚˚c d 
TMP_UIStyleManager
˚˚e w
.
˚˚w x!
alignmentButtonMid˚˚x ä
)˚˚ä ã
?˚˚å ç
$num˚˚é ê
:˚˚ë í
$num˚˚ì î
;˚˚î ï
if
¸¸ 
(
¸¸ 
	EditorGUI
¸¸ 
.
¸¸ 
EndChangeCheck
¸¸ ,
(
¸¸, -
)
¸¸- .
&&
¸¸/ 1
v5
¸¸2 4
>
¸¸5 6
$num
¸¸7 8
)
¸¸8 9
{
˝˝ 
selected
˛˛ 
=
˛˛ 
v5
˛˛ !
;
˛˛! "
}
ˇˇ 
rect
ÄÄ 
.
ÄÄ 
x
ÄÄ 
+=
ÄÄ 
rect
ÄÄ 
.
ÄÄ 
width
ÄÄ $
;
ÄÄ$ %
	EditorGUI
ÅÅ 
.
ÅÅ 
BeginChangeCheck
ÅÅ *
(
ÅÅ* +
)
ÅÅ+ ,
;
ÅÅ, -
v6
ÇÇ 
=
ÇÇ 
TMP_EditorUtility
ÇÇ &
.
ÇÇ& '
EditorToggle
ÇÇ' 3
(
ÇÇ3 4
rect
ÇÇ4 8
,
ÇÇ8 9
(
ÇÇ: ;

styleValue
ÇÇ; E
&
ÇÇF G
$num
ÇÇH J
)
ÇÇJ K
==
ÇÇL N
$num
ÇÇO Q
,
ÇÇQ R
k_SmallcapsLabel
ÇÇS c
,
ÇÇc d 
TMP_UIStyleManager
ÇÇe w
.
ÇÇw x#
alignmentButtonRightÇÇx å
)ÇÇå ç
?ÇÇé è
$numÇÇê í
:ÇÇì î
$numÇÇï ñ
;ÇÇñ ó
if
ÉÉ 
(
ÉÉ 
	EditorGUI
ÉÉ 
.
ÉÉ 
EndChangeCheck
ÉÉ ,
(
ÉÉ, -
)
ÉÉ- .
&&
ÉÉ/ 1
v6
ÉÉ2 4
>
ÉÉ5 6
$num
ÉÉ7 8
)
ÉÉ8 9
{
ÑÑ 
selected
ÖÖ 
=
ÖÖ 
v6
ÖÖ !
;
ÖÖ! "
}
ÜÜ 
if
àà 
(
àà 
selected
àà 
>
àà 
$num
àà  
)
àà  !
{
ââ 
v4
ää 
=
ää 
selected
ää !
==
ää" $
$num
ää% &
?
ää' (
$num
ää) *
:
ää+ ,
$num
ää- .
;
ää. /
v5
ãã 
=
ãã 
selected
ãã !
==
ãã" $
$num
ãã% '
?
ãã( )
$num
ãã* ,
:
ãã- .
$num
ãã/ 0
;
ãã0 1
v6
åå 
=
åå 
selected
åå !
==
åå" $
$num
åå% '
?
åå( )
$num
åå* ,
:
åå- .
$num
åå/ 0
;
åå0 1
}
çç 
}
éé 
if
êê 
(
êê 
	EditorGUI
êê 
.
êê 
EndChangeCheck
êê (
(
êê( )
)
êê) *
)
êê* +
{
ëë 
m_FontStyleProp
íí 
.
íí  
intValue
íí  (
=
íí) *
v1
íí+ -
+
íí. /
v2
íí0 2
+
íí3 4
v3
íí5 7
+
íí8 9
v4
íí: <
+
íí= >
v5
íí? A
+
ííB C
v6
ííD F
+
ííG H
v7
ííI K
;
ííK L%
m_HavePropertiesChanged
ìì '
=
ìì( )
true
ìì* .
;
ìì. /
}
îî 
	EditorGUI
óó 
.
óó 
BeginChangeCheck
óó &
(
óó& '
)
óó' (
;
óó( )
	EditorGUI
ôô 
.
ôô  
BeginDisabledGroup
ôô (
(
ôô( )
m_AutoSizingProp
ôô) 9
.
ôô9 :
	boolValue
ôô: C
)
ôôC D
;
ôôD E
EditorGUILayout
öö 
.
öö 
PropertyField
öö )
(
öö) *
m_FontSizeProp
öö* 8
,
öö8 9
k_FontSizeLabel
öö: I
,
ööI J
	GUILayout
ööK T
.
ööT U
MaxWidth
ööU ]
(
öö] ^
EditorGUIUtility
öö^ n
.
öön o

labelWidth
ööo y
+
ööz {
$num
öö| 
)öö Ä
)ööÄ Å
;ööÅ Ç
	EditorGUI
õõ 
.
õõ 
EndDisabledGroup
õõ &
(
õõ& '
)
õõ' (
;
õõ( )
if
ùù 
(
ùù 
	EditorGUI
ùù 
.
ùù 
EndChangeCheck
ùù (
(
ùù( )
)
ùù) *
)
ùù* +
{
ûû 
float
üü 
fontSize
üü 
=
üü  
Mathf
üü! &
.
üü& '
Clamp
üü' ,
(
üü, -
m_FontSizeProp
üü- ;
.
üü; <

floatValue
üü< F
,
üüF G
$num
üüH I
,
üüI J
$num
üüK P
)
üüP Q
;
üüQ R
m_FontSizeProp
°° 
.
°° 

floatValue
°° )
=
°°* +
fontSize
°°, 4
;
°°4 5 
m_FontSizeBaseProp
¢¢ "
.
¢¢" #

floatValue
¢¢# -
=
¢¢. /
fontSize
¢¢0 8
;
¢¢8 9%
m_HavePropertiesChanged
££ '
=
££( )
true
££* .
;
££. /
}
§§ 
	EditorGUI
¶¶ 
.
¶¶ 
indentLevel
¶¶ !
+=
¶¶" $
$num
¶¶% &
;
¶¶& '
	EditorGUI
®® 
.
®® 
BeginChangeCheck
®® &
(
®®& '
)
®®' (
;
®®( )
EditorGUILayout
©© 
.
©© 
PropertyField
©© )
(
©©) *
m_AutoSizingProp
©©* :
,
©©: ;
k_AutoSizeLabel
©©< K
)
©©K L
;
©©L M
if
™™ 
(
™™ 
	EditorGUI
™™ 
.
™™ 
EndChangeCheck
™™ (
(
™™( )
)
™™) *
)
™™* +
{
´´ 
if
¨¨ 
(
¨¨ 
m_AutoSizingProp
¨¨ $
.
¨¨$ %
	boolValue
¨¨% .
==
¨¨/ 1
false
¨¨2 7
)
¨¨7 8
m_FontSizeProp
≠≠ "
.
≠≠" #

floatValue
≠≠# -
=
≠≠. / 
m_FontSizeBaseProp
≠≠0 B
.
≠≠B C

floatValue
≠≠C M
;
≠≠M N%
m_HavePropertiesChanged
ØØ '
=
ØØ( )
true
ØØ* .
;
ØØ. /
}
∞∞ 
if
≥≥ 
(
≥≥ 
m_AutoSizingProp
≥≥  
.
≥≥  !
	boolValue
≥≥! *
)
≥≥* +
{
¥¥ 
rect
µµ 
=
µµ 
EditorGUILayout
µµ &
.
µµ& '
GetControlRect
µµ' 5
(
µµ5 6
true
µµ6 :
,
µµ: ;
EditorGUIUtility
µµ< L
.
µµL M
singleLineHeight
µµM ]
)
µµ] ^
;
µµ^ _
	EditorGUI
∑∑ 
.
∑∑ 
PrefixLabel
∑∑ %
(
∑∑% &
rect
∑∑& *
,
∑∑* +$
k_AutoSizeOptionsLabel
∑∑, B
)
∑∑B C
;
∑∑C D
int
ππ 
previousIndent
ππ "
=
ππ# $
	EditorGUI
ππ% .
.
ππ. /
indentLevel
ππ/ :
;
ππ: ;
	EditorGUI
ªª 
.
ªª 
indentLevel
ªª %
=
ªª& '
$num
ªª( )
;
ªª) *
rect
ΩΩ 
.
ΩΩ 
width
ΩΩ 
=
ΩΩ 
(
ΩΩ 
rect
ΩΩ "
.
ΩΩ" #
width
ΩΩ# (
-
ΩΩ) *
EditorGUIUtility
ΩΩ+ ;
.
ΩΩ; <

labelWidth
ΩΩ< F
)
ΩΩF G
/
ΩΩH I
$num
ΩΩJ L
;
ΩΩL M
rect
ææ 
.
ææ 
x
ææ 
+=
ææ 
EditorGUIUtility
ææ *
.
ææ* +

labelWidth
ææ+ 5
;
ææ5 6
EditorGUIUtility
¿¿  
.
¿¿  !

labelWidth
¿¿! +
=
¿¿, -
$num
¿¿. 0
;
¿¿0 1
	EditorGUI
¡¡ 
.
¡¡ 
BeginChangeCheck
¡¡ *
(
¡¡* +
)
¡¡+ ,
;
¡¡, -
	EditorGUI
¬¬ 
.
¬¬ 
PropertyField
¬¬ '
(
¬¬' (
rect
¬¬( ,
,
¬¬, -
m_FontSizeMinProp
¬¬. ?
,
¬¬? @

k_MinLabel
¬¬A K
)
¬¬K L
;
¬¬L M
if
√√ 
(
√√ 
	EditorGUI
√√ 
.
√√ 
EndChangeCheck
√√ ,
(
√√, -
)
√√- .
)
√√. /
{
ƒƒ 
float
≈≈ 
minSize
≈≈ !
=
≈≈" #
m_FontSizeMinProp
≈≈$ 5
.
≈≈5 6

floatValue
≈≈6 @
;
≈≈@ A
minSize
«« 
=
«« 
Mathf
«« #
.
««# $
Max
««$ '
(
««' (
$num
««( )
,
««) *
minSize
««+ 2
)
««2 3
;
««3 4
m_FontSizeMinProp
…… %
.
……% &

floatValue
……& 0
=
……1 2
Mathf
……3 8
.
……8 9
Min
……9 <
(
……< =
minSize
……= D
,
……D E
m_FontSizeMaxProp
……F W
.
……W X

floatValue
……X b
)
……b c
;
……c d%
m_HavePropertiesChanged
   +
=
  , -
true
  . 2
;
  2 3
}
ÀÀ 
rect
ÃÃ 
.
ÃÃ 
x
ÃÃ 
+=
ÃÃ 
rect
ÃÃ 
.
ÃÃ 
width
ÃÃ $
;
ÃÃ$ %
EditorGUIUtility
ŒŒ  
.
ŒŒ  !

labelWidth
ŒŒ! +
=
ŒŒ, -
$num
ŒŒ. 0
;
ŒŒ0 1
	EditorGUI
œœ 
.
œœ 
BeginChangeCheck
œœ *
(
œœ* +
)
œœ+ ,
;
œœ, -
	EditorGUI
–– 
.
–– 
PropertyField
–– '
(
––' (
rect
––( ,
,
––, -
m_FontSizeMaxProp
––. ?
,
––? @

k_MaxLabel
––A K
)
––K L
;
––L M
if
—— 
(
—— 
	EditorGUI
—— 
.
—— 
EndChangeCheck
—— ,
(
——, -
)
——- .
)
——. /
{
““ 
float
”” 
maxSize
”” !
=
””" #
Mathf
””$ )
.
””) *
Clamp
””* /
(
””/ 0
m_FontSizeMaxProp
””0 A
.
””A B

floatValue
””B L
,
””L M
$num
””N O
,
””O P
$num
””Q V
)
””V W
;
””W X
m_FontSizeMaxProp
’’ %
.
’’% &

floatValue
’’& 0
=
’’1 2
Mathf
’’3 8
.
’’8 9
Max
’’9 <
(
’’< =
m_FontSizeMinProp
’’= N
.
’’N O

floatValue
’’O Y
,
’’Y Z
maxSize
’’[ b
)
’’b c
;
’’c d%
m_HavePropertiesChanged
÷÷ +
=
÷÷, -
true
÷÷. 2
;
÷÷2 3
}
◊◊ 
rect
ÿÿ 
.
ÿÿ 
x
ÿÿ 
+=
ÿÿ 
rect
ÿÿ 
.
ÿÿ 
width
ÿÿ $
;
ÿÿ$ %
	EditorGUI
⁄⁄ 
.
⁄⁄ 
BeginChangeCheck
⁄⁄ *
(
⁄⁄* +
)
⁄⁄+ ,
;
⁄⁄, -
EditorGUIUtility
€€  
.
€€  !

labelWidth
€€! +
=
€€, -
$num
€€. 0
;
€€0 1
	EditorGUI
‹‹ 
.
‹‹ 
PropertyField
‹‹ '
(
‹‹' (
rect
‹‹( ,
,
‹‹, -#
m_CharWidthMaxAdjProp
‹‹. C
,
‹‹C D
	k_WdLabel
‹‹E N
)
‹‹N O
;
‹‹O P
rect
›› 
.
›› 
x
›› 
+=
›› 
rect
›› 
.
›› 
width
›› $
;
››$ %
EditorGUIUtility
ﬁﬁ  
.
ﬁﬁ  !

labelWidth
ﬁﬁ! +
=
ﬁﬁ, -
$num
ﬁﬁ. 0
;
ﬁﬁ0 1
	EditorGUI
ﬂﬂ 
.
ﬂﬂ 
PropertyField
ﬂﬂ '
(
ﬂﬂ' (
rect
ﬂﬂ( ,
,
ﬂﬂ, -"
m_LineSpacingMaxProp
ﬂﬂ. B
,
ﬂﬂB C
k_LineLabel
ﬂﬂD O
)
ﬂﬂO P
;
ﬂﬂP Q
EditorGUIUtility
··  
.
··  !

labelWidth
··! +
=
··, -
$num
··. /
;
··/ 0
if
„„ 
(
„„ 
	EditorGUI
„„ 
.
„„ 
EndChangeCheck
„„ ,
(
„„, -
)
„„- .
)
„„. /
{
‰‰ #
m_CharWidthMaxAdjProp
ÂÂ )
.
ÂÂ) *

floatValue
ÂÂ* 4
=
ÂÂ5 6
Mathf
ÂÂ7 <
.
ÂÂ< =
Clamp
ÂÂ= B
(
ÂÂB C#
m_CharWidthMaxAdjProp
ÂÂC X
.
ÂÂX Y

floatValue
ÂÂY c
,
ÂÂc d
$num
ÂÂe f
,
ÂÂf g
$num
ÂÂh j
)
ÂÂj k
;
ÂÂk l"
m_LineSpacingMaxProp
ÊÊ (
.
ÊÊ( )

floatValue
ÊÊ) 3
=
ÊÊ4 5
Mathf
ÊÊ6 ;
.
ÊÊ; <
Min
ÊÊ< ?
(
ÊÊ? @
$num
ÊÊ@ A
,
ÊÊA B"
m_LineSpacingMaxProp
ÊÊC W
.
ÊÊW X

floatValue
ÊÊX b
)
ÊÊb c
;
ÊÊc d%
m_HavePropertiesChanged
ÁÁ +
=
ÁÁ, -
true
ÁÁ. 2
;
ÁÁ2 3
}
ËË 
	EditorGUI
ÍÍ 
.
ÍÍ 
indentLevel
ÍÍ %
=
ÍÍ& '
previousIndent
ÍÍ( 6
;
ÍÍ6 7
}
ÎÎ 
	EditorGUI
ÌÌ 
.
ÌÌ 
indentLevel
ÌÌ !
-=
ÌÌ" $
$num
ÌÌ% &
;
ÌÌ& '
EditorGUILayout
ÒÒ 
.
ÒÒ 
Space
ÒÒ !
(
ÒÒ! "
)
ÒÒ" #
;
ÒÒ# $
}
ÚÚ 	
void
ÙÙ 
	DrawColor
ÙÙ 
(
ÙÙ 
)
ÙÙ 
{
ıı 	
	EditorGUI
˜˜ 
.
˜˜ 
BeginChangeCheck
˜˜ &
(
˜˜& '
)
˜˜' (
;
˜˜( )
Color
¯¯ 
vertexColor
¯¯ 
=
¯¯ 
EditorGUILayout
¯¯  /
.
¯¯/ 0

ColorField
¯¯0 :
(
¯¯: ;
k_BaseColorLabel
¯¯; K
,
¯¯K L
m_FontColorProp
¯¯M \
.
¯¯\ ]

colorValue
¯¯] g
,
¯¯g h
false
¯¯i n
,
¯¯n o
true
¯¯p t
,
¯¯t u
false
¯¯v {
)
¯¯{ |
;
¯¯| }
if
˘˘ 
(
˘˘ 
	EditorGUI
˘˘ 
.
˘˘ 
EndChangeCheck
˘˘ (
(
˘˘( )
)
˘˘) *
)
˘˘* +
{
˙˙ 
m_FontColorProp
˚˚ 
.
˚˚  

colorValue
˚˚  *
=
˚˚+ ,
vertexColor
˚˚- 8
;
˚˚8 9%
m_HavePropertiesChanged
¸¸ '
=
¸¸( )
true
¸¸* .
;
¸¸. /
}
˝˝ 
	EditorGUI
ˇˇ 
.
ˇˇ 
BeginChangeCheck
ˇˇ &
(
ˇˇ& '
)
ˇˇ' (
;
ˇˇ( )
EditorGUILayout
ÄÄ 
.
ÄÄ 
PropertyField
ÄÄ )
(
ÄÄ) *(
m_EnableVertexGradientProp
ÄÄ* D
,
ÄÄD E"
k_ColorGradientLabel
ÄÄF Z
)
ÄÄZ [
;
ÄÄ[ \
if
ÅÅ 
(
ÅÅ 
	EditorGUI
ÅÅ 
.
ÅÅ 
EndChangeCheck
ÅÅ (
(
ÅÅ( )
)
ÅÅ) *
)
ÅÅ* +
{
ÇÇ %
m_HavePropertiesChanged
ÉÉ '
=
ÉÉ( )
true
ÉÉ* .
;
ÉÉ. /
}
ÑÑ 
EditorGUIUtility
ÜÜ 
.
ÜÜ 

fieldWidth
ÜÜ '
=
ÜÜ( )
$num
ÜÜ* +
;
ÜÜ+ ,
if
àà 
(
àà (
m_EnableVertexGradientProp
àà *
.
àà* +
	boolValue
àà+ 4
)
àà4 5
{
ââ 
	EditorGUI
ää 
.
ää 
indentLevel
ää %
+=
ää& (
$num
ää) *
;
ää* +
	EditorGUI
åå 
.
åå 
BeginChangeCheck
åå *
(
åå* +
)
åå+ ,
;
åå, -
EditorGUILayout
éé 
.
éé  
PropertyField
éé  -
(
éé- .+
m_FontColorGradientPresetProp
éé. K
,
ééK L 
k_ColorPresetLabel
ééM _
)
éé_ `
;
éé` a
SerializedObject
êê  
obj
êê! $
=
êê% &
null
êê' +
;
êê+ , 
SerializedProperty
íí "
	colorMode
íí# ,
;
íí, - 
SerializedProperty
îî "
topLeft
îî# *
;
îî* + 
SerializedProperty
ïï "
topRight
ïï# +
;
ïï+ , 
SerializedProperty
ññ "

bottomLeft
ññ# -
;
ññ- . 
SerializedProperty
óó "
bottomRight
óó# .
;
óó. /
if
ôô 
(
ôô +
m_FontColorGradientPresetProp
ôô 1
.
ôô1 2"
objectReferenceValue
ôô2 F
==
ôôG I
null
ôôJ N
)
ôôN O
{
öö 
	colorMode
õõ 
=
õõ 
m_ColorModeProp
õõ  /
;
õõ/ 0
topLeft
úú 
=
úú %
m_FontColorGradientProp
úú 5
.
úú5 6"
FindPropertyRelative
úú6 J
(
úúJ K
$str
úúK T
)
úúT U
;
úúU V
topRight
ùù 
=
ùù %
m_FontColorGradientProp
ùù 6
.
ùù6 7"
FindPropertyRelative
ùù7 K
(
ùùK L
$str
ùùL V
)
ùùV W
;
ùùW X

bottomLeft
ûû 
=
ûû  %
m_FontColorGradientProp
ûû! 8
.
ûû8 9"
FindPropertyRelative
ûû9 M
(
ûûM N
$str
ûûN Z
)
ûûZ [
;
ûû[ \
bottomRight
üü 
=
üü  !%
m_FontColorGradientProp
üü" 9
.
üü9 :"
FindPropertyRelative
üü: N
(
üüN O
$str
üüO \
)
üü\ ]
;
üü] ^
}
†† 
else
°° 
{
¢¢ 
obj
££ 
=
££ 
new
££ 
SerializedObject
££ .
(
££. /+
m_FontColorGradientPresetProp
££/ L
.
££L M"
objectReferenceValue
££M a
)
££a b
;
££b c
	colorMode
§§ 
=
§§ 
obj
§§  #
.
§§# $
FindProperty
§§$ 0
(
§§0 1
$str
§§1 <
)
§§< =
;
§§= >
topLeft
•• 
=
•• 
obj
•• !
.
••! "
FindProperty
••" .
(
••. /
$str
••/ 8
)
••8 9
;
••9 :
topRight
¶¶ 
=
¶¶ 
obj
¶¶ "
.
¶¶" #
FindProperty
¶¶# /
(
¶¶/ 0
$str
¶¶0 :
)
¶¶: ;
;
¶¶; <

bottomLeft
ßß 
=
ßß  
obj
ßß! $
.
ßß$ %
FindProperty
ßß% 1
(
ßß1 2
$str
ßß2 >
)
ßß> ?
;
ßß? @
bottomRight
®® 
=
®®  !
obj
®®" %
.
®®% &
FindProperty
®®& 2
(
®®2 3
$str
®®3 @
)
®®@ A
;
®®A B
}
©© 
EditorGUILayout
´´ 
.
´´  
PropertyField
´´  -
(
´´- .
	colorMode
´´. 7
,
´´7 8
k_ColorModeLabel
´´9 I
)
´´I J
;
´´J K
var
≠≠ 
rect
≠≠ 
=
≠≠ 
EditorGUILayout
≠≠ *
.
≠≠* +
GetControlRect
≠≠+ 9
(
≠≠9 :
true
≠≠: >
,
≠≠> ?
EditorGUIUtility
≠≠@ P
.
≠≠P Q
singleLineHeight
≠≠Q a
*
≠≠b c
(
≠≠d e
EditorGUIUtility
≠≠e u
.
≠≠u v
wideMode
≠≠v ~
?≠≠ Ä
$num≠≠Å Ç
:≠≠É Ñ
$num≠≠Ö Ü
)≠≠Ü á
)≠≠á à
;≠≠à â
	EditorGUI
ØØ 
.
ØØ 
PrefixLabel
ØØ %
(
ØØ% &
rect
ØØ& *
,
ØØ* +"
k_CorenerColorsLabel
ØØ, @
)
ØØ@ A
;
ØØA B
rect
±± 
.
±± 
x
±± 
+=
±± 
EditorGUIUtility
±± *
.
±±* +

labelWidth
±±+ 5
;
±±5 6
rect
≤≤ 
.
≤≤ 
width
≤≤ 
=
≤≤ 
rect
≤≤ !
.
≤≤! "
width
≤≤" '
-
≤≤( )
EditorGUIUtility
≤≤* :
.
≤≤: ;

labelWidth
≤≤; E
;
≤≤E F
switch
¥¥ 
(
¥¥ 
(
¥¥ 
	ColorMode
¥¥ "
)
¥¥" #
	colorMode
¥¥# ,
.
¥¥, -
enumValueIndex
¥¥- ;
)
¥¥; <
{
µµ 
case
∂∂ 
	ColorMode
∂∂ "
.
∂∂" #
Single
∂∂# )
:
∂∂) *
TMP_EditorUtility
∑∑ )
.
∑∑) *
DrawColorProperty
∑∑* ;
(
∑∑; <
rect
∑∑< @
,
∑∑@ A
topLeft
∑∑B I
)
∑∑I J
;
∑∑J K
topRight
ππ  
.
ππ  !

colorValue
ππ! +
=
ππ, -
topLeft
ππ. 5
.
ππ5 6

colorValue
ππ6 @
;
ππ@ A

bottomLeft
∫∫ "
.
∫∫" #

colorValue
∫∫# -
=
∫∫. /
topLeft
∫∫0 7
.
∫∫7 8

colorValue
∫∫8 B
;
∫∫B C
bottomRight
ªª #
.
ªª# $

colorValue
ªª$ .
=
ªª/ 0
topLeft
ªª1 8
.
ªª8 9

colorValue
ªª9 C
;
ªªC D
break
ºº 
;
ºº 
case
ΩΩ 
	ColorMode
ΩΩ "
.
ΩΩ" # 
HorizontalGradient
ΩΩ# 5
:
ΩΩ5 6
rect
ææ 
.
ææ 
width
ææ "
/=
ææ# %
$num
ææ& (
;
ææ( )
TMP_EditorUtility
¿¿ )
.
¿¿) *
DrawColorProperty
¿¿* ;
(
¿¿; <
rect
¿¿< @
,
¿¿@ A
topLeft
¿¿B I
)
¿¿I J
;
¿¿J K
rect
¬¬ 
.
¬¬ 
x
¬¬ 
+=
¬¬ !
rect
¬¬" &
.
¬¬& '
width
¬¬' ,
;
¬¬, -
TMP_EditorUtility
ƒƒ )
.
ƒƒ) *
DrawColorProperty
ƒƒ* ;
(
ƒƒ; <
rect
ƒƒ< @
,
ƒƒ@ A
topRight
ƒƒB J
)
ƒƒJ K
;
ƒƒK L

bottomLeft
∆∆ "
.
∆∆" #

colorValue
∆∆# -
=
∆∆. /
topLeft
∆∆0 7
.
∆∆7 8

colorValue
∆∆8 B
;
∆∆B C
bottomRight
«« #
.
««# $

colorValue
««$ .
=
««/ 0
topRight
««1 9
.
««9 :

colorValue
««: D
;
««D E
break
»» 
;
»» 
case
…… 
	ColorMode
…… "
.
……" #
VerticalGradient
……# 3
:
……3 4
TMP_EditorUtility
   )
.
  ) *
DrawColorProperty
  * ;
(
  ; <
rect
  < @
,
  @ A
topLeft
  B I
)
  I J
;
  J K
rect
ÃÃ 
=
ÃÃ 
EditorGUILayout
ÃÃ .
.
ÃÃ. /
GetControlRect
ÃÃ/ =
(
ÃÃ= >
false
ÃÃ> C
,
ÃÃC D
EditorGUIUtility
ÃÃE U
.
ÃÃU V
singleLineHeight
ÃÃV f
*
ÃÃg h
(
ÃÃi j
EditorGUIUtility
ÃÃj z
.
ÃÃz {
wideModeÃÃ{ É
?ÃÃÑ Ö
$numÃÃÜ á
:ÃÃà â
$numÃÃä ã
)ÃÃã å
)ÃÃå ç
;ÃÃç é
rect
ÕÕ 
.
ÕÕ 
x
ÕÕ 
+=
ÕÕ !
EditorGUIUtility
ÕÕ" 2
.
ÕÕ2 3

labelWidth
ÕÕ3 =
;
ÕÕ= >
TMP_EditorUtility
œœ )
.
œœ) *
DrawColorProperty
œœ* ;
(
œœ; <
rect
œœ< @
,
œœ@ A

bottomLeft
œœB L
)
œœL M
;
œœM N
topRight
——  
.
——  !

colorValue
——! +
=
——, -
topLeft
——. 5
.
——5 6

colorValue
——6 @
;
——@ A
bottomRight
““ #
.
““# $

colorValue
““$ .
=
““/ 0

bottomLeft
““1 ;
.
““; <

colorValue
““< F
;
““F G
break
”” 
;
”” 
case
‘‘ 
	ColorMode
‘‘ "
.
‘‘" #!
FourCornersGradient
‘‘# 6
:
‘‘6 7
rect
’’ 
.
’’ 
width
’’ "
/=
’’# %
$num
’’& (
;
’’( )
TMP_EditorUtility
◊◊ )
.
◊◊) *
DrawColorProperty
◊◊* ;
(
◊◊; <
rect
◊◊< @
,
◊◊@ A
topLeft
◊◊B I
)
◊◊I J
;
◊◊J K
rect
ŸŸ 
.
ŸŸ 
x
ŸŸ 
+=
ŸŸ !
rect
ŸŸ" &
.
ŸŸ& '
width
ŸŸ' ,
;
ŸŸ, -
TMP_EditorUtility
€€ )
.
€€) *
DrawColorProperty
€€* ;
(
€€; <
rect
€€< @
,
€€@ A
topRight
€€B J
)
€€J K
;
€€K L
rect
›› 
=
›› 
EditorGUILayout
›› .
.
››. /
GetControlRect
››/ =
(
››= >
false
››> C
,
››C D
EditorGUIUtility
››E U
.
››U V
singleLineHeight
››V f
*
››g h
(
››i j
EditorGUIUtility
››j z
.
››z {
wideMode››{ É
?››Ñ Ö
$num››Ü á
:››à â
$num››ä ã
)››ã å
)››å ç
;››ç é
rect
ﬁﬁ 
.
ﬁﬁ 
x
ﬁﬁ 
+=
ﬁﬁ !
EditorGUIUtility
ﬁﬁ" 2
.
ﬁﬁ2 3

labelWidth
ﬁﬁ3 =
;
ﬁﬁ= >
rect
ﬂﬂ 
.
ﬂﬂ 
width
ﬂﬂ "
=
ﬂﬂ# $
(
ﬂﬂ% &
rect
ﬂﬂ& *
.
ﬂﬂ* +
width
ﬂﬂ+ 0
-
ﬂﬂ1 2
EditorGUIUtility
ﬂﬂ3 C
.
ﬂﬂC D

labelWidth
ﬂﬂD N
)
ﬂﬂN O
/
ﬂﬂP Q
$num
ﬂﬂR T
;
ﬂﬂT U
TMP_EditorUtility
·· )
.
··) *
DrawColorProperty
··* ;
(
··; <
rect
··< @
,
··@ A

bottomLeft
··B L
)
··L M
;
··M N
rect
„„ 
.
„„ 
x
„„ 
+=
„„ !
rect
„„" &
.
„„& '
width
„„' ,
;
„„, -
TMP_EditorUtility
ÂÂ )
.
ÂÂ) *
DrawColorProperty
ÂÂ* ;
(
ÂÂ; <
rect
ÂÂ< @
,
ÂÂ@ A
bottomRight
ÂÂB M
)
ÂÂM N
;
ÂÂN O
break
ÊÊ 
;
ÊÊ 
}
ÁÁ 
if
ÈÈ 
(
ÈÈ 
	EditorGUI
ÈÈ 
.
ÈÈ 
EndChangeCheck
ÈÈ ,
(
ÈÈ, -
)
ÈÈ- .
)
ÈÈ. /
{
ÍÍ %
m_HavePropertiesChanged
ÎÎ +
=
ÎÎ, -
true
ÎÎ. 2
;
ÎÎ2 3
if
ÏÏ 
(
ÏÏ 
obj
ÏÏ 
!=
ÏÏ 
null
ÏÏ #
)
ÏÏ# $
{
ÌÌ 
obj
ÓÓ 
.
ÓÓ %
ApplyModifiedProperties
ÓÓ 3
(
ÓÓ3 4
)
ÓÓ4 5
;
ÓÓ5 6 
TMPro_EventManager
ÔÔ *
.
ÔÔ* +0
"ON_COLOR_GRADIENT_PROPERTY_CHANGED
ÔÔ+ M
(
ÔÔM N+
m_FontColorGradientPresetProp
ÔÔN k
.
ÔÔk l#
objectReferenceValueÔÔl Ä
asÔÔÅ É!
TMP_ColorGradientÔÔÑ ï
)ÔÔï ñ
;ÔÔñ ó
}
 
}
ÒÒ 
	EditorGUI
ÛÛ 
.
ÛÛ 
indentLevel
ÛÛ %
-=
ÛÛ& (
$num
ÛÛ) *
;
ÛÛ* +
}
ÙÙ 
EditorGUILayout
ˆˆ 
.
ˆˆ 
PropertyField
ˆˆ )
(
ˆˆ) *%
m_OverrideHtmlColorProp
ˆˆ* A
,
ˆˆA B!
k_OverrideTagsLabel
ˆˆC V
)
ˆˆV W
;
ˆˆW X
EditorGUILayout
¯¯ 
.
¯¯ 
Space
¯¯ !
(
¯¯! "
)
¯¯" #
;
¯¯# $
}
˘˘ 	
void
˚˚ 
DrawSpacing
˚˚ 
(
˚˚ 
)
˚˚ 
{
¸¸ 	
	EditorGUI
˛˛ 
.
˛˛ 
BeginChangeCheck
˛˛ &
(
˛˛& '
)
˛˛' (
;
˛˛( )
Rect
ÄÄ 
rect
ÄÄ 
=
ÄÄ 
EditorGUILayout
ÄÄ '
.
ÄÄ' (
GetControlRect
ÄÄ( 6
(
ÄÄ6 7
true
ÄÄ7 ;
,
ÄÄ; <
EditorGUIUtility
ÄÄ= M
.
ÄÄM N
singleLineHeight
ÄÄN ^
)
ÄÄ^ _
;
ÄÄ_ `
	EditorGUI
ÇÇ 
.
ÇÇ 
PrefixLabel
ÇÇ !
(
ÇÇ! "
rect
ÇÇ" &
,
ÇÇ& '#
k_SpacingOptionsLabel
ÇÇ( =
)
ÇÇ= >
;
ÇÇ> ?
int
ÑÑ 
	oldIndent
ÑÑ 
=
ÑÑ 
	EditorGUI
ÑÑ %
.
ÑÑ% &
indentLevel
ÑÑ& 1
;
ÑÑ1 2
	EditorGUI
ÖÖ 
.
ÖÖ 
indentLevel
ÖÖ !
=
ÖÖ" #
$num
ÖÖ$ %
;
ÖÖ% &
rect
áá 
.
áá 
x
áá 
+=
áá 
EditorGUIUtility
áá &
.
áá& '

labelWidth
áá' 1
;
áá1 2
rect
àà 
.
àà 
width
àà 
=
àà 
(
àà 
rect
àà 
.
àà 
width
àà $
-
àà% &
EditorGUIUtility
àà' 7
.
àà7 8

labelWidth
àà8 B
-
ààC D
$num
ààE G
)
ààG H
/
ààI J
$num
ààK M
;
ààM N
EditorGUIUtility
ää 
.
ää 

labelWidth
ää '
=
ää( )
Mathf
ää* /
.
ää/ 0
Min
ää0 3
(
ää3 4
rect
ää4 8
.
ää8 9
width
ää9 >
*
ää? @
$num
ääA F
,
ääF G
$num
ääH K
)
ääK L
;
ääL M
	EditorGUI
åå 
.
åå 
PropertyField
åå #
(
åå# $
rect
åå$ (
,
åå( )$
m_CharacterSpacingProp
åå* @
,
åå@ A%
k_CharacterSpacingLabel
ååB Y
)
ååY Z
;
ååZ [
rect
çç 
.
çç 
x
çç 
+=
çç 
rect
çç 
.
çç 
width
çç  
+
çç! "
$num
çç# %
;
çç% &
	EditorGUI
éé 
.
éé 
PropertyField
éé #
(
éé# $
rect
éé$ (
,
éé( )
m_WordSpacingProp
éé* ;
,
éé; < 
k_WordSpacingLabel
éé= O
)
ééO P
;
ééP Q
rect
êê 
=
êê 
EditorGUILayout
êê "
.
êê" #
GetControlRect
êê# 1
(
êê1 2
false
êê2 7
,
êê7 8
EditorGUIUtility
êê9 I
.
êêI J
singleLineHeight
êêJ Z
)
êêZ [
;
êê[ \
EditorGUIUtility
ëë 
.
ëë 

labelWidth
ëë '
=
ëë( )
$num
ëë* +
;
ëë+ ,
rect
íí 
.
íí 
x
íí 
+=
íí 
EditorGUIUtility
íí &
.
íí& '

labelWidth
íí' 1
;
íí1 2
rect
ìì 
.
ìì 
width
ìì 
=
ìì 
(
ìì 
rect
ìì 
.
ìì 
width
ìì $
-
ìì% &
EditorGUIUtility
ìì' 7
.
ìì7 8

labelWidth
ìì8 B
-
ììC D
$num
ììD F
)
ììF G
/
ììH I
$num
ììJ L
;
ììL M
EditorGUIUtility
îî 
.
îî 

labelWidth
îî '
=
îî( )
Mathf
îî* /
.
îî/ 0
Min
îî0 3
(
îî3 4
rect
îî4 8
.
îî8 9
width
îî9 >
*
îî? @
$num
îîA F
,
îîF G
$num
îîH K
)
îîK L
;
îîL M
	EditorGUI
ññ 
.
ññ 
PropertyField
ññ #
(
ññ# $
rect
ññ$ (
,
ññ( )
m_LineSpacingProp
ññ* ;
,
ññ; < 
k_LineSpacingLabel
ññ= O
)
ññO P
;
ññP Q
rect
óó 
.
óó 
x
óó 
+=
óó 
rect
óó 
.
óó 
width
óó  
+
óó! "
$num
óó# %
;
óó% &
	EditorGUI
òò 
.
òò 
PropertyField
òò #
(
òò# $
rect
òò$ (
,
òò( )$
m_ParagraphSpacingProp
òò* @
,
òò@ A%
k_ParagraphSpacingLabel
òòB Y
)
òòY Z
;
òòZ [
EditorGUIUtility
öö 
.
öö 

labelWidth
öö '
=
öö( )
$num
öö* +
;
öö+ ,
	EditorGUI
õõ 
.
õõ 
indentLevel
õõ !
=
õõ" #
	oldIndent
õõ$ -
;
õõ- .
if
ùù 
(
ùù 
	EditorGUI
ùù 
.
ùù 
EndChangeCheck
ùù (
(
ùù( )
)
ùù) *
)
ùù* +
{
ûû %
m_HavePropertiesChanged
üü '
=
üü( )
true
üü* .
;
üü. /
}
†† 
EditorGUILayout
¢¢ 
.
¢¢ 
Space
¢¢ !
(
¢¢! "
)
¢¢" #
;
¢¢# $
}
££ 	
void
•• 
DrawAlignment
•• 
(
•• 
)
•• 
{
¶¶ 	
	EditorGUI
®® 
.
®® 
BeginChangeCheck
®® &
(
®®& '
)
®®' (
;
®®( )
Rect
™™ 
rect
™™ 
=
™™ 
EditorGUILayout
™™ '
.
™™' (
GetControlRect
™™( 6
(
™™6 7
true
™™7 ;
,
™™; <
EditorGUIUtility
™™= M
.
™™M N
currentViewWidth
™™N ^
>
™™_ `
$num
™™a d
?
™™e f
$num
™™g i
:
™™j k
$num
™™l n
+
™™o p
$num
™™q r
)
™™r s
;
™™s t
	EditorGUI
¨¨ 
.
¨¨ 
PrefixLabel
¨¨ !
(
¨¨! "
rect
¨¨" &
,
¨¨& '
k_AlignmentLabel
¨¨( 8
)
¨¨8 9
;
¨¨9 :
rect
≠≠ 
.
≠≠ 
x
≠≠ 
+=
≠≠ 
EditorGUIUtility
≠≠ &
.
≠≠& '

labelWidth
≠≠' 1
;
≠≠1 2
	EditorGUI
ØØ 
.
ØØ 
PropertyField
ØØ #
(
ØØ# $
rect
ØØ$ (
,
ØØ( )'
m_HorizontalAlignmentProp
ØØ* C
,
ØØC D

GUIContent
ØØE O
.
ØØO P
none
ØØP T
)
ØØT U
;
ØØU V
	EditorGUI
∞∞ 
.
∞∞ 
PropertyField
∞∞ #
(
∞∞# $
rect
∞∞$ (
,
∞∞( )%
m_VerticalAlignmentProp
∞∞* A
,
∞∞A B

GUIContent
∞∞C M
.
∞∞M N
none
∞∞N R
)
∞∞R S
;
∞∞S T
if
≥≥ 
(
≥≥ 
(
≥≥ 
(
≥≥ (
HorizontalAlignmentOptions
≥≥ ,
)
≥≥, -'
m_HorizontalAlignmentProp
≥≥- F
.
≥≥F G
intValue
≥≥G O
&
≥≥P Q(
HorizontalAlignmentOptions
≥≥R l
.
≥≥l m
	Justified
≥≥m v
)
≥≥v w
==
≥≥x z)
HorizontalAlignmentOptions≥≥{ ï
.≥≥ï ñ
	Justified≥≥ñ ü
||≥≥† ¢
(≥≥£ §
(≥≥§ •*
HorizontalAlignmentOptions≥≥• ø
)≥≥ø ¿)
m_HorizontalAlignmentProp≥≥¿ Ÿ
.≥≥Ÿ ⁄
intValue≥≥⁄ ‚
&≥≥„ ‰*
HorizontalAlignmentOptions≥≥Â ˇ
.≥≥ˇ Ä
Flush≥≥Ä Ö
)≥≥Ö Ü
==≥≥á â*
HorizontalAlignmentOptions≥≥ä §
.≥≥§ •
Flush≥≥• ™
)≥≥™ ´ 
DrawPropertySlider
¥¥ "
(
¥¥" #
k_WrapMixLabel
¥¥# 1
,
¥¥1 2&
m_WordWrappingRatiosProp
¥¥3 K
)
¥¥K L
;
¥¥L M
if
∂∂ 
(
∂∂ 
	EditorGUI
∂∂ 
.
∂∂ 
EndChangeCheck
∂∂ (
(
∂∂( )
)
∂∂) *
)
∂∂* +%
m_HavePropertiesChanged
∑∑ '
=
∑∑( )
true
∑∑* .
;
∑∑. /
EditorGUILayout
ππ 
.
ππ 
Space
ππ !
(
ππ! "
)
ππ" #
;
ππ# $
}
∫∫ 	
void
ºº "
DrawWrappingOverflow
ºº !
(
ºº! "
)
ºº" #
{
ΩΩ 	
	EditorGUI
øø 
.
øø 
BeginChangeCheck
øø &
(
øø& '
)
øø' (
;
øø( )
int
¿¿ 
wrapSelection
¿¿ 
=
¿¿ 
EditorGUILayout
¿¿  /
.
¿¿/ 0
Popup
¿¿0 5
(
¿¿5 6
k_WrappingLabel
¿¿6 E
,
¿¿E F&
m_EnableWordWrappingProp
¿¿G _
.
¿¿_ `
	boolValue
¿¿` i
?
¿¿j k
$num
¿¿l m
:
¿¿n o
$num
¿¿p q
,
¿¿q r 
k_WrappingOptions¿¿s Ñ
)¿¿Ñ Ö
;¿¿Ö Ü
if
¡¡ 
(
¡¡ 
	EditorGUI
¡¡ 
.
¡¡ 
EndChangeCheck
¡¡ (
(
¡¡( )
)
¡¡) *
)
¡¡* +
{
¬¬ &
m_EnableWordWrappingProp
√√ (
.
√√( )
	boolValue
√√) 2
=
√√3 4
wrapSelection
√√5 B
==
√√C E
$num
√√F G
;
√√G H%
m_HavePropertiesChanged
ƒƒ '
=
ƒƒ( )
true
ƒƒ* .
;
ƒƒ. /
m_TextComponent
≈≈ 
.
≈≈  &
m_isInputParsingRequired
≈≈  8
=
≈≈9 :
true
≈≈; ?
;
≈≈? @
}
∆∆ 
	EditorGUI
…… 
.
…… 
BeginChangeCheck
…… &
(
……& '
)
……' (
;
……( )
if
ÀÀ 
(
ÀÀ 
(
ÀÀ 
TextOverflowModes
ÀÀ "
)
ÀÀ" #$
m_TextOverflowModeProp
ÀÀ# 9
.
ÀÀ9 :
enumValueIndex
ÀÀ: H
==
ÀÀI K
TextOverflowModes
ÀÀL ]
.
ÀÀ] ^
Linked
ÀÀ^ d
)
ÀÀd e
{
ÃÃ 
EditorGUILayout
ÕÕ 
.
ÕÕ  
BeginHorizontal
ÕÕ  /
(
ÕÕ/ 0
)
ÕÕ0 1
;
ÕÕ1 2
float
œœ 

fieldWidth
œœ  
=
œœ! "
EditorGUIUtility
œœ# 3
.
œœ3 4

fieldWidth
œœ4 >
;
œœ> ?
EditorGUIUtility
––  
.
––  !

fieldWidth
––! +
=
––, -
$num
––. 0
;
––0 1
EditorGUILayout
—— 
.
——  
PropertyField
——  -
(
——- .$
m_TextOverflowModeProp
——. D
,
——D E
k_OverflowLabel
——F U
)
——U V
;
——V W
EditorGUIUtility
““  
.
““  !

fieldWidth
““! +
=
““, -

fieldWidth
““. 8
;
““8 9
EditorGUILayout
‘‘ 
.
‘‘  
PropertyField
‘‘  -
(
‘‘- .'
m_LinkedTextComponentProp
‘‘. G
,
‘‘G H

GUIContent
‘‘I S
.
‘‘S T
none
‘‘T X
)
‘‘X Y
;
‘‘Y Z
EditorGUILayout
÷÷ 
.
÷÷  
EndHorizontal
÷÷  -
(
÷÷- .
)
÷÷. /
;
÷÷/ 0
if
ÿÿ 
(
ÿÿ 
GUI
ÿÿ 
.
ÿÿ 
changed
ÿÿ 
)
ÿÿ  
{
ŸŸ 
TMP_Text
⁄⁄ 
linkedComponent
⁄⁄ ,
=
⁄⁄- .'
m_LinkedTextComponentProp
⁄⁄/ H
.
⁄⁄H I"
objectReferenceValue
⁄⁄I ]
as
⁄⁄^ `
TMP_Text
⁄⁄a i
;
⁄⁄i j
if
‹‹ 
(
‹‹ 
linkedComponent
‹‹ '
==
‹‹( *
null
‹‹+ /
)
‹‹/ 0
{
›› '
m_LinkedTextComponentProp
ﬁﬁ 1
.
ﬁﬁ1 2"
objectReferenceValue
ﬁﬁ2 F
=
ﬁﬁG H
null
ﬁﬁI M
;
ﬁﬁM N
if
‡‡ 
(
‡‡ +
m_PreviousLinkedTextComponent
‡‡ 9
!=
‡‡: <
null
‡‡= A
)
‡‡A B
m_TextComponent
·· +
.
··+ ,(
ReleaseLinkedTextComponent
··, F
(
··F G+
m_PreviousLinkedTextComponent
··G d
)
··d e
;
··e f
}
‚‚ 
else
„„ 
if
„„ 
(
„„ 
m_TextComponent
„„ ,
.
„„, -$
IsSelfOrLinkedAncestor
„„- C
(
„„C D
linkedComponent
„„D S
)
„„S T
)
„„T U
{
‰‰ '
m_LinkedTextComponentProp
ÂÂ 1
.
ÂÂ1 2"
objectReferenceValue
ÂÂ2 F
=
ÂÂG H+
m_PreviousLinkedTextComponent
ÂÂI f
;
ÂÂf g
}
ÊÊ 
else
ÁÁ 
{
ËË 
if
ÈÈ 
(
ÈÈ +
m_PreviousLinkedTextComponent
ÈÈ 9
!=
ÈÈ: <
null
ÈÈ= A
)
ÈÈA B
m_TextComponent
ÍÍ +
.
ÍÍ+ ,(
ReleaseLinkedTextComponent
ÍÍ, F
(
ÍÍF G+
m_PreviousLinkedTextComponent
ÍÍG d
)
ÍÍd e
;
ÍÍe f'
m_LinkedTextComponentProp
ÏÏ 1
.
ÏÏ1 2"
objectReferenceValue
ÏÏ2 F
=
ÏÏG H
linkedComponent
ÏÏI X
;
ÏÏX Y
linkedComponent
ÌÌ '
.
ÌÌ' (#
parentLinkedComponent
ÌÌ( =
=
ÌÌ> ?
m_TextComponent
ÌÌ@ O
;
ÌÌO P+
m_PreviousLinkedTextComponent
ÓÓ 5
=
ÓÓ6 7
linkedComponent
ÓÓ8 G
;
ÓÓG H
}
ÔÔ 
}
 
}
ÒÒ 
else
ÚÚ 
if
ÚÚ 
(
ÚÚ 
(
ÚÚ 
TextOverflowModes
ÚÚ '
)
ÚÚ' ($
m_TextOverflowModeProp
ÚÚ( >
.
ÚÚ> ?
enumValueIndex
ÚÚ? M
==
ÚÚN P
TextOverflowModes
ÚÚQ b
.
ÚÚb c
Page
ÚÚc g
)
ÚÚg h
{
ÛÛ 
EditorGUILayout
ÙÙ 
.
ÙÙ  
BeginHorizontal
ÙÙ  /
(
ÙÙ/ 0
)
ÙÙ0 1
;
ÙÙ1 2
EditorGUILayout
ıı 
.
ıı  
PropertyField
ıı  -
(
ıı- .$
m_TextOverflowModeProp
ıı. D
,
ııD E
k_OverflowLabel
ııF U
)
ııU V
;
ııV W
EditorGUILayout
ˆˆ 
.
ˆˆ  
PropertyField
ˆˆ  -
(
ˆˆ- .!
m_PageToDisplayProp
ˆˆ. A
,
ˆˆA B

GUIContent
ˆˆC M
.
ˆˆM N
none
ˆˆN R
)
ˆˆR S
;
ˆˆS T
EditorGUILayout
˜˜ 
.
˜˜  
EndHorizontal
˜˜  -
(
˜˜- .
)
˜˜. /
;
˜˜/ 0
if
˘˘ 
(
˘˘ +
m_PreviousLinkedTextComponent
˘˘ 1
)
˘˘1 2
{
˙˙ 
m_TextComponent
˚˚ #
.
˚˚# $(
ReleaseLinkedTextComponent
˚˚$ >
(
˚˚> ?+
m_PreviousLinkedTextComponent
˚˚? \
)
˚˚\ ]
;
˚˚] ^
m_TextComponent
˝˝ #
.
˝˝# $!
linkedTextComponent
˝˝$ 7
=
˝˝8 9
null
˝˝: >
;
˝˝> ?
}
˛˛ 
}
ˇˇ 
else
ÄÄ 
{
ÅÅ 
EditorGUILayout
ÇÇ 
.
ÇÇ  
PropertyField
ÇÇ  -
(
ÇÇ- .$
m_TextOverflowModeProp
ÇÇ. D
,
ÇÇD E
k_OverflowLabel
ÇÇF U
)
ÇÇU V
;
ÇÇV W
if
ÑÑ 
(
ÑÑ +
m_PreviousLinkedTextComponent
ÑÑ 1
)
ÑÑ1 2
{
ÖÖ 
m_TextComponent
ÜÜ #
.
ÜÜ# $(
ReleaseLinkedTextComponent
ÜÜ$ >
(
ÜÜ> ?+
m_PreviousLinkedTextComponent
ÜÜ? \
)
ÜÜ\ ]
;
ÜÜ] ^
m_TextComponent
àà #
.
àà# $!
linkedTextComponent
àà$ 7
=
àà8 9
null
àà: >
;
àà> ?
}
ââ 
}
ää 
if
åå 
(
åå 
	EditorGUI
åå 
.
åå 
EndChangeCheck
åå (
(
åå( )
)
åå) *
)
åå* +
{
çç %
m_HavePropertiesChanged
éé '
=
éé( )
true
éé* .
;
éé. /
m_TextComponent
èè 
.
èè  &
m_isInputParsingRequired
èè  8
=
èè9 :
true
èè; ?
;
èè? @
}
êê 
EditorGUILayout
íí 
.
íí 
Space
íí !
(
íí! "
)
íí" #
;
íí# $
}
ìì 	
	protected
ïï 
abstract
ïï 
void
ïï 
DrawExtraSettings
ïï  1
(
ïï1 2
)
ïï2 3
;
ïï3 4
	protected
óó 
void
óó 
DrawMargins
óó "
(
óó" #
)
óó# $
{
òò 	
	EditorGUI
ôô 
.
ôô 
BeginChangeCheck
ôô &
(
ôô& '
)
ôô' (
;
ôô( ) 
DrawMarginProperty
öö 
(
öö 
m_MarginProp
öö +
,
öö+ ,
k_MarginsLabel
öö- ;
)
öö; <
;
öö< =
if
õõ 
(
õõ 
	EditorGUI
õõ 
.
õõ 
EndChangeCheck
õõ (
(
õõ( )
)
õõ) *
)
õõ* +
{
úú %
m_HavePropertiesChanged
ùù '
=
ùù( )
true
ùù* .
;
ùù. /
}
ûû 
EditorGUILayout
†† 
.
†† 
Space
†† !
(
††! "
)
††" #
;
††# $
}
°° 	
	protected
££ 
void
££ !
DrawGeometrySorting
££ *
(
££* +
)
££+ ,
{
§§ 	
	EditorGUI
•• 
.
•• 
BeginChangeCheck
•• &
(
••& '
)
••' (
;
••( )
EditorGUILayout
ßß 
.
ßß 
PropertyField
ßß )
(
ßß) *(
m_GeometrySortingOrderProp
ßß* D
,
ßßD E$
k_GeometrySortingLabel
ßßF \
)
ßß\ ]
;
ßß] ^
if
©© 
(
©© 
	EditorGUI
©© 
.
©© 
EndChangeCheck
©© (
(
©©( )
)
©©) *
)
©©* +%
m_HavePropertiesChanged
™™ '
=
™™( )
true
™™* .
;
™™. /
EditorGUILayout
¨¨ 
.
¨¨ 
Space
¨¨ !
(
¨¨! "
)
¨¨" #
;
¨¨# $
}
≠≠ 	
	protected
ØØ 
void
ØØ )
DrawIsTextObjectScaleStatic
ØØ 2
(
ØØ2 3
)
ØØ3 4
{
∞∞ 	
	EditorGUI
±± 
.
±± 
BeginChangeCheck
±± &
(
±±& '
)
±±' (
;
±±( )
EditorGUILayout
≥≥ 
.
≥≥ 
PropertyField
≥≥ )
(
≥≥) *+
m_IsTextObjectScaleStaticProp
≥≥* G
,
≥≥G H'
k_IsTextObjectScaleStatic
≥≥I b
)
≥≥b c
;
≥≥c d
if
µµ 
(
µµ 
	EditorGUI
µµ 
.
µµ 
EndChangeCheck
µµ (
(
µµ( )
)
µµ) *
)
µµ* +
{
∂∂ 
m_TextComponent
∑∑ 
.
∑∑  %
isTextObjectScaleStatic
∑∑  7
=
∑∑8 9+
m_IsTextObjectScaleStaticProp
∑∑: W
.
∑∑W X
	boolValue
∑∑X a
;
∑∑a b%
m_HavePropertiesChanged
∏∏ '
=
∏∏( )
true
∏∏* .
;
∏∏. /
}
ππ 
EditorGUILayout
ªª 
.
ªª 
Space
ªª !
(
ªª! "
)
ªª" #
;
ªª# $
}
ºº 	
	protected
øø 
void
øø 
DrawRichText
øø #
(
øø# $
)
øø$ %
{
¿¿ 	
	EditorGUI
¡¡ 
.
¡¡ 
BeginChangeCheck
¡¡ &
(
¡¡& '
)
¡¡' (
;
¡¡( )
EditorGUILayout
√√ 
.
√√ 
PropertyField
√√ )
(
√√) *
m_IsRichTextProp
√√* :
,
√√: ;
k_RichTextLabel
√√< K
)
√√K L
;
√√L M
if
ƒƒ 
(
ƒƒ 
	EditorGUI
ƒƒ 
.
ƒƒ 
EndChangeCheck
ƒƒ (
(
ƒƒ( )
)
ƒƒ) *
)
ƒƒ* +%
m_HavePropertiesChanged
≈≈ '
=
≈≈( )
true
≈≈* .
;
≈≈. /
}
∆∆ 	
	protected
»» 
void
»» 
DrawParsing
»» "
(
»»" #
)
»»# $
{
…… 	
	EditorGUI
   
.
   
BeginChangeCheck
   &
(
  & '
)
  ' (
;
  ( )
EditorGUILayout
ÀÀ 
.
ÀÀ 
PropertyField
ÀÀ )
(
ÀÀ) *0
"m_EnableEscapeCharacterParsingProp
ÀÀ* L
,
ÀÀL M%
k_EscapeCharactersLabel
ÀÀN e
)
ÀÀe f
;
ÀÀf g
EditorGUILayout
ÃÃ 
.
ÃÃ 
PropertyField
ÃÃ )
(
ÃÃ) **
m_UseMaxVisibleDescenderProp
ÃÃ* F
,
ÃÃF G%
k_VisibleDescenderLabel
ÃÃH _
)
ÃÃ_ `
;
ÃÃ` a
if
ŒŒ 
(
ŒŒ 
	EditorGUI
ŒŒ 
.
ŒŒ 
EndChangeCheck
ŒŒ (
(
ŒŒ( )
)
ŒŒ) *
)
ŒŒ* +%
m_HavePropertiesChanged
œœ '
=
œœ( )
true
œœ* .
;
œœ. /
EditorGUILayout
—— 
.
—— 
Space
—— !
(
——! "
)
——" #
;
——# $
}
““ 	
	protected
‘‘ 
void
‘‘ 
DrawSpriteAsset
‘‘ &
(
‘‘& '
)
‘‘' (
{
’’ 	
	EditorGUI
÷÷ 
.
÷÷ 
BeginChangeCheck
÷÷ &
(
÷÷& '
)
÷÷' (
;
÷÷( )
EditorGUILayout
ÿÿ 
.
ÿÿ 
PropertyField
ÿÿ )
(
ÿÿ) *
m_SpriteAssetProp
ÿÿ* ;
,
ÿÿ; < 
k_SpriteAssetLabel
ÿÿ= O
,
ÿÿO P
true
ÿÿQ U
)
ÿÿU V
;
ÿÿV W
if
⁄⁄ 
(
⁄⁄ 
	EditorGUI
⁄⁄ 
.
⁄⁄ 
EndChangeCheck
⁄⁄ (
(
⁄⁄( )
)
⁄⁄) *
)
⁄⁄* +%
m_HavePropertiesChanged
€€ '
=
€€( )
true
€€* .
;
€€. /
EditorGUILayout
›› 
.
›› 
Space
›› !
(
››! "
)
››" #
;
››# $
}
ﬁﬁ 	
	protected
‡‡ 
void
‡‡ 
DrawStyleSheet
‡‡ %
(
‡‡% &
)
‡‡& '
{
·· 	
	EditorGUI
‚‚ 
.
‚‚ 
BeginChangeCheck
‚‚ &
(
‚‚& '
)
‚‚' (
;
‚‚( )
EditorGUILayout
‰‰ 
.
‰‰ 
PropertyField
‰‰ )
(
‰‰) *#
m_StyleSheetAssetProp
‰‰* ?
,
‰‰? @$
k_StyleSheetAssetLabel
‰‰A W
,
‰‰W X
true
‰‰Y ]
)
‰‰] ^
;
‰‰^ _
if
ÊÊ 
(
ÊÊ 
	EditorGUI
ÊÊ 
.
ÊÊ 
EndChangeCheck
ÊÊ (
(
ÊÊ( )
)
ÊÊ) *
)
ÊÊ* +
{
ÁÁ 
m_StyleNames
ËË 
=
ËË 
GetStyleNames
ËË ,
(
ËË, -
)
ËË- .
;
ËË. /%
m_HavePropertiesChanged
ÈÈ '
=
ÈÈ( )
true
ÈÈ* .
;
ÈÈ. /
}
ÍÍ 
EditorGUILayout
ÏÏ 
.
ÏÏ 
Space
ÏÏ !
(
ÏÏ! "
)
ÏÏ" #
;
ÏÏ# $
}
ÌÌ 	
	protected
ÔÔ 
void
ÔÔ  
DrawTextureMapping
ÔÔ )
(
ÔÔ) *
)
ÔÔ* +
{
 	
	EditorGUI
ÚÚ 
.
ÚÚ 
BeginChangeCheck
ÚÚ &
(
ÚÚ& '
)
ÚÚ' (
;
ÚÚ( )
EditorGUILayout
ÛÛ 
.
ÛÛ 
PropertyField
ÛÛ )
(
ÛÛ) *%
m_HorizontalMappingProp
ÛÛ* A
,
ÛÛA B&
k_HorizontalMappingLabel
ÛÛC [
)
ÛÛ[ \
;
ÛÛ\ ]
EditorGUILayout
ÙÙ 
.
ÙÙ 
PropertyField
ÙÙ )
(
ÙÙ) *#
m_VerticalMappingProp
ÙÙ* ?
,
ÙÙ? @$
k_VerticalMappingLabel
ÙÙA W
)
ÙÙW X
;
ÙÙX Y
if
ıı 
(
ıı 
	EditorGUI
ıı 
.
ıı 
EndChangeCheck
ıı (
(
ıı( )
)
ıı) *
)
ıı* +
{
ˆˆ %
m_HavePropertiesChanged
˜˜ '
=
˜˜( )
true
˜˜* .
;
˜˜. /
}
¯¯ 
if
˚˚ 
(
˚˚ %
m_HorizontalMappingProp
˚˚ '
.
˚˚' (
enumValueIndex
˚˚( 6
>
˚˚7 8
$num
˚˚9 :
)
˚˚: ;
{
¸¸ 
	EditorGUI
˝˝ 
.
˝˝ 
BeginChangeCheck
˝˝ *
(
˝˝* +
)
˝˝+ ,
;
˝˝, -
EditorGUILayout
˛˛ 
.
˛˛  
PropertyField
˛˛  -
(
˛˛- . 
m_UvLineOffsetProp
˛˛. @
,
˛˛@ A
k_LineOffsetLabel
˛˛B S
,
˛˛S T
	GUILayout
˛˛U ^
.
˛˛^ _
MinWidth
˛˛_ g
(
˛˛g h
$num
˛˛h k
)
˛˛k l
)
˛˛l m
;
˛˛m n
if
ˇˇ 
(
ˇˇ 
	EditorGUI
ˇˇ 
.
ˇˇ 
EndChangeCheck
ˇˇ ,
(
ˇˇ, -
)
ˇˇ- .
)
ˇˇ. /
{
Ä	Ä	 %
m_HavePropertiesChanged
Å	Å	 +
=
Å	Å	, -
true
Å	Å	. 2
;
Å	Å	2 3
}
Ç	Ç	 
}
É	É	 
EditorGUILayout
Ö	Ö	 
.
Ö	Ö	 
Space
Ö	Ö	 !
(
Ö	Ö	! "
)
Ö	Ö	" #
;
Ö	Ö	# $
}
Ü	Ü	 	
	protected
à	à	 
void
à	à	 
DrawKerning
à	à	 "
(
à	à	" #
)
à	à	# $
{
â	â	 	
	EditorGUI
ã	ã	 
.
ã	ã	 
BeginChangeCheck
ã	ã	 &
(
ã	ã	& '
)
ã	ã	' (
;
ã	ã	( )
EditorGUILayout
å	å	 
.
å	å	 
PropertyField
å	å	 )
(
å	å	) *!
m_EnableKerningProp
å	å	* =
,
å	å	= >
k_KerningLabel
å	å	? M
)
å	å	M N
;
å	å	N O
if
ç	ç	 
(
ç	ç	 
	EditorGUI
ç	ç	 
.
ç	ç	 
EndChangeCheck
ç	ç	 (
(
ç	ç	( )
)
ç	ç	) *
)
ç	ç	* +
{
é	é	 %
m_HavePropertiesChanged
è	è	 '
=
è	è	( )
true
è	è	* .
;
è	è	. /
}
ê	ê	 
}
ë	ë	 	
	protected
ì	ì	 
void
ì	ì	 
DrawPadding
ì	ì	 "
(
ì	ì	" #
)
ì	ì	# $
{
î	î	 	
	EditorGUI
ñ	ñ	 
.
ñ	ñ	 
BeginChangeCheck
ñ	ñ	 &
(
ñ	ñ	& '
)
ñ	ñ	' (
;
ñ	ñ	( )
EditorGUILayout
ó	ó	 
.
ó	ó	 
PropertyField
ó	ó	 )
(
ó	ó	) *&
m_EnableExtraPaddingProp
ó	ó	* B
,
ó	ó	B C
k_PaddingLabel
ó	ó	D R
)
ó	ó	R S
;
ó	ó	S T
if
ò	ò	 
(
ò	ò	 
	EditorGUI
ò	ò	 
.
ò	ò	 
EndChangeCheck
ò	ò	 (
(
ò	ò	( )
)
ò	ò	) *
)
ò	ò	* +
{
ô	ô	 %
m_HavePropertiesChanged
ö	ö	 '
=
ö	ö	( )
true
ö	ö	* .
;
ö	ö	. /(
m_CheckPaddingRequiredProp
õ	õ	 *
.
õ	õ	* +
	boolValue
õ	õ	+ 4
=
õ	õ	5 6
true
õ	õ	7 ;
;
õ	õ	; <
}
ú	ú	 
}
ù	ù	 	
	protected
¢	¢	 

GUIContent
¢	¢	 
[
¢	¢	 
]
¢	¢	  
GetMaterialPresets
¢	¢	 1
(
¢	¢	1 2
)
¢	¢	2 3
{
£	£	 	
TMP_FontAsset
§	§	 
	fontAsset
§	§	 #
=
§	§	$ %
m_FontAssetProp
§	§	& 5
.
§	§	5 6"
objectReferenceValue
§	§	6 J
as
§	§	K M
TMP_FontAsset
§	§	N [
;
§	§	[ \
if
•	•	 
(
•	•	 
	fontAsset
•	•	 
==
•	•	 
null
•	•	 !
)
•	•	! "
return
•	•	# )
null
•	•	* .
;
•	•	. /
m_MaterialPresets
ß	ß	 
=
ß	ß	 
TMP_EditorUtility
ß	ß	  1
.
ß	ß	1 2$
FindMaterialReferences
ß	ß	2 H
(
ß	ß	H I
	fontAsset
ß	ß	I R
)
ß	ß	R S
;
ß	ß	S T#
m_MaterialPresetNames
®	®	 !
=
®	®	" #
new
®	®	$ '

GUIContent
®	®	( 2
[
®	®	2 3
m_MaterialPresets
®	®	3 D
.
®	®	D E
Length
®	®	E K
]
®	®	K L
;
®	®	L M)
m_MaterialPresetIndexLookup
™	™	 '
.
™	™	' (
Clear
™	™	( -
(
™	™	- .
)
™	™	. /
;
™	™	/ 0
for
¨	¨	 
(
¨	¨	 
int
¨	¨	 
i
¨	¨	 
=
¨	¨	 
$num
¨	¨	 
;
¨	¨	 
i
¨	¨	 
<
¨	¨	 #
m_MaterialPresetNames
¨	¨	  5
.
¨	¨	5 6
Length
¨	¨	6 <
;
¨	¨	< =
i
¨	¨	> ?
++
¨	¨	? A
)
¨	¨	A B
{
≠	≠	 #
m_MaterialPresetNames
Æ	Æ	 %
[
Æ	Æ	% &
i
Æ	Æ	& '
]
Æ	Æ	' (
=
Æ	Æ	) *
new
Æ	Æ	+ .

GUIContent
Æ	Æ	/ 9
(
Æ	Æ	9 :
m_MaterialPresets
Æ	Æ	: K
[
Æ	Æ	K L
i
Æ	Æ	L M
]
Æ	Æ	M N
.
Æ	Æ	N O
name
Æ	Æ	O S
)
Æ	Æ	S T
;
Æ	Æ	T U)
m_MaterialPresetIndexLookup
∞	∞	 +
.
∞	∞	+ ,
Add
∞	∞	, /
(
∞	∞	/ 0
m_MaterialPresets
∞	∞	0 A
[
∞	∞	A B
i
∞	∞	B C
]
∞	∞	C D
.
∞	∞	D E
GetInstanceID
∞	∞	E R
(
∞	∞	R S
)
∞	∞	S T
,
∞	∞	T U
i
∞	∞	V W
)
∞	∞	W X
;
∞	∞	X Y
}
¥	¥	 !
m_IsPresetListDirty
∂	∂	 
=
∂	∂	  !
false
∂	∂	" '
;
∂	∂	' (
return
∏	∏	 #
m_MaterialPresetNames
∏	∏	 (
;
∏	∏	( )
}
π	π	 	
	protected
ª	ª	 

GUIContent
ª	ª	 
[
ª	ª	 
]
ª	ª	 
GetStyleNames
ª	ª	 ,
(
ª	ª	, -
)
ª	ª	- .
{
º	º	 	
k_AvailableStyles
Ω	Ω	 
.
Ω	Ω	 
Clear
Ω	Ω	 #
(
Ω	Ω	# $
)
Ω	Ω	$ %
;
Ω	Ω	% &$
m_TextStyleIndexLookup
æ	æ	 "
.
æ	æ	" #
Clear
æ	æ	# (
(
æ	æ	( )
)
æ	æ	) *
;
æ	æ	* +
m_Styles
ø	ø	 
.
ø	ø	 
Clear
ø	ø	 
(
ø	ø	 
)
ø	ø	 
;
ø	ø	 
	TMP_Style
¬	¬	 
styleNormal
¬	¬	 !
=
¬	¬	" #
	TMP_Style
¬	¬	$ -
.
¬	¬	- .
NormalStyle
¬	¬	. 9
;
¬	¬	9 :
m_Styles
ƒ	ƒ	 
.
ƒ	ƒ	 
Add
ƒ	ƒ	 
(
ƒ	ƒ	 
styleNormal
ƒ	ƒ	 $
)
ƒ	ƒ	$ %
;
ƒ	ƒ	% &$
m_TextStyleIndexLookup
≈	≈	 "
.
≈	≈	" #
Add
≈	≈	# &
(
≈	≈	& '
styleNormal
≈	≈	' 2
.
≈	≈	2 3
hashCode
≈	≈	3 ;
,
≈	≈	; <
$num
≈	≈	= >
)
≈	≈	> ?
;
≈	≈	? @
k_AvailableStyles
«	«	 
.
«	«	 
Add
«	«	 !
(
«	«	! "
styleNormal
«	«	" -
.
«	«	- .
hashCode
«	«	. 6
,
«	«	6 7
styleNormal
«	«	8 C
)
«	«	C D
;
«	«	D E
TMP_StyleSheet
 	 	 
localStyleSheet
 	 	 *
=
 	 	+ ,
(
 	 	- .
TMP_StyleSheet
 	 	. <
)
 	 	< =#
m_StyleSheetAssetProp
 	 	= R
.
 	 	R S"
objectReferenceValue
 	 	S g
;
 	 	g h
if
Ã	Ã	 
(
Ã	Ã	 
localStyleSheet
Ã	Ã	 
!=
Ã	Ã	  "
null
Ã	Ã	# '
)
Ã	Ã	' (
{
Õ	Õ	 
int
Œ	Œ	 

styleCount
Œ	Œ	 
=
Œ	Œ	  
localStyleSheet
Œ	Œ	! 0
.
Œ	Œ	0 1
styles
Œ	Œ	1 7
.
Œ	Œ	7 8
Count
Œ	Œ	8 =
;
Œ	Œ	= >
for
–	–	 
(
–	–	 
int
–	–	 
i
–	–	 
=
–	–	 
$num
–	–	 
;
–	–	 
i
–	–	  !
<
–	–	" #

styleCount
–	–	$ .
;
–	–	. /
i
–	–	0 1
++
–	–	1 3
)
–	–	3 4
{
—	—	 
	TMP_Style
“	“	 
style
“	“	 #
=
“	“	$ %
localStyleSheet
“	“	& 5
.
“	“	5 6
styles
“	“	6 <
[
“	“	< =
i
“	“	= >
]
“	“	> ?
;
“	“	? @
if
‘	‘	 
(
‘	‘	 
k_AvailableStyles
‘	‘	 )
.
‘	‘	) *
ContainsKey
‘	‘	* 5
(
‘	‘	5 6
style
‘	‘	6 ;
.
‘	‘	; <
hashCode
‘	‘	< D
)
‘	‘	D E
==
‘	‘	F H
false
‘	‘	I N
)
‘	‘	N O
{
’	’	 
k_AvailableStyles
÷	÷	 )
.
÷	÷	) *
Add
÷	÷	* -
(
÷	÷	- .
style
÷	÷	. 3
.
÷	÷	3 4
hashCode
÷	÷	4 <
,
÷	÷	< =
style
÷	÷	> C
)
÷	÷	C D
;
÷	÷	D E
m_Styles
◊	◊	  
.
◊	◊	  !
Add
◊	◊	! $
(
◊	◊	$ %
style
◊	◊	% *
)
◊	◊	* +
;
◊	◊	+ ,$
m_TextStyleIndexLookup
ÿ	ÿ	 .
.
ÿ	ÿ	. /
Add
ÿ	ÿ	/ 2
(
ÿ	ÿ	2 3
style
ÿ	ÿ	3 8
.
ÿ	ÿ	8 9
hashCode
ÿ	ÿ	9 A
,
ÿ	ÿ	A B$
m_TextStyleIndexLookup
ÿ	ÿ	C Y
.
ÿ	ÿ	Y Z
Count
ÿ	ÿ	Z _
)
ÿ	ÿ	_ `
;
ÿ	ÿ	` a
}
Ÿ	Ÿ	 
}
⁄	⁄	 
}
€	€	 
TMP_StyleSheet
ﬁ	ﬁ	 
globalStyleSheet
ﬁ	ﬁ	 +
=
ﬁ	ﬁ	, -
TMP_Settings
ﬁ	ﬁ	. :
.
ﬁ	ﬁ	: ;
defaultStyleSheet
ﬁ	ﬁ	; L
;
ﬁ	ﬁ	L M
if
‡	‡	 
(
‡	‡	 
globalStyleSheet
‡	‡	  
!=
‡	‡	! #
null
‡	‡	$ (
)
‡	‡	( )
{
·	·	 
int
‚	‚	 

styleCount
‚	‚	 
=
‚	‚	  
globalStyleSheet
‚	‚	! 1
.
‚	‚	1 2
styles
‚	‚	2 8
.
‚	‚	8 9
Count
‚	‚	9 >
;
‚	‚	> ?
for
‰	‰	 
(
‰	‰	 
int
‰	‰	 
i
‰	‰	 
=
‰	‰	 
$num
‰	‰	 
;
‰	‰	 
i
‰	‰	  !
<
‰	‰	" #

styleCount
‰	‰	$ .
;
‰	‰	. /
i
‰	‰	0 1
++
‰	‰	1 3
)
‰	‰	3 4
{
Â	Â	 
	TMP_Style
Ê	Ê	 
style
Ê	Ê	 #
=
Ê	Ê	$ %
globalStyleSheet
Ê	Ê	& 6
.
Ê	Ê	6 7
styles
Ê	Ê	7 =
[
Ê	Ê	= >
i
Ê	Ê	> ?
]
Ê	Ê	? @
;
Ê	Ê	@ A
if
Ë	Ë	 
(
Ë	Ë	 
k_AvailableStyles
Ë	Ë	 )
.
Ë	Ë	) *
ContainsKey
Ë	Ë	* 5
(
Ë	Ë	5 6
style
Ë	Ë	6 ;
.
Ë	Ë	; <
hashCode
Ë	Ë	< D
)
Ë	Ë	D E
==
Ë	Ë	F H
false
Ë	Ë	I N
)
Ë	Ë	N O
{
È	È	 
k_AvailableStyles
Í	Í	 )
.
Í	Í	) *
Add
Í	Í	* -
(
Í	Í	- .
style
Í	Í	. 3
.
Í	Í	3 4
hashCode
Í	Í	4 <
,
Í	Í	< =
style
Í	Í	> C
)
Í	Í	C D
;
Í	Í	D E
m_Styles
Î	Î	  
.
Î	Î	  !
Add
Î	Î	! $
(
Î	Î	$ %
style
Î	Î	% *
)
Î	Î	* +
;
Î	Î	+ ,$
m_TextStyleIndexLookup
Ï	Ï	 .
.
Ï	Ï	. /
Add
Ï	Ï	/ 2
(
Ï	Ï	2 3
style
Ï	Ï	3 8
.
Ï	Ï	8 9
hashCode
Ï	Ï	9 A
,
Ï	Ï	A B$
m_TextStyleIndexLookup
Ï	Ï	C Y
.
Ï	Ï	Y Z
Count
Ï	Ï	Z _
)
Ï	Ï	_ `
;
Ï	Ï	` a
}
Ì	Ì	 
}
Ó	Ó	 
}
Ô	Ô	 

GUIContent
Ú	Ú	 
[
Ú	Ú	 
]
Ú	Ú	 

styleNames
Ú	Ú	 #
=
Ú	Ú	$ %
k_AvailableStyles
Ú	Ú	& 7
.
Ú	Ú	7 8
Values
Ú	Ú	8 >
.
Ú	Ú	> ?
Select
Ú	Ú	? E
(
Ú	Ú	E F
item
Ú	Ú	F J
=>
Ú	Ú	K M
new
Ú	Ú	N Q

GUIContent
Ú	Ú	R \
(
Ú	Ú	\ ]
item
Ú	Ú	] a
.
Ú	Ú	a b
name
Ú	Ú	b f
)
Ú	Ú	f g
)
Ú	Ú	g h
.
Ú	Ú	h i
ToArray
Ú	Ú	i p
(
Ú	Ú	p q
)
Ú	Ú	q r
;
Ú	Ú	r s$
m_TextStyleIndexLookup
ı	ı	 "
.
ı	ı	" #
TryGetValue
ı	ı	# .
(
ı	ı	. /%
m_TextStyleHashCodeProp
ı	ı	/ F
.
ı	ı	F G
intValue
ı	ı	G O
,
ı	ı	O P
out
ı	ı	Q T#
m_StyleSelectionIndex
ı	ı	U j
)
ı	ı	j k
;
ı	ı	k l
return
˜	˜	 

styleNames
˜	˜	 
;
˜	˜	 
}
¯	¯	 	
	protected
˚	˚	 
void
˚	˚	  
DrawMarginProperty
˚	˚	 )
(
˚	˚	) * 
SerializedProperty
˚	˚	* <
property
˚	˚	= E
,
˚	˚	E F

GUIContent
˚	˚	G Q
label
˚	˚	R W
)
˚	˚	W X
{
¸	¸	 	
Rect
˝	˝	 
rect
˝	˝	 
=
˝	˝	 
EditorGUILayout
˝	˝	 '
.
˝	˝	' (
GetControlRect
˝	˝	( 6
(
˝	˝	6 7
false
˝	˝	7 <
,
˝	˝	< =
$num
˝	˝	> ?
*
˝	˝	@ A
$num
˝	˝	B D
)
˝	˝	D E
;
˝	˝	E F
	EditorGUI
ˇ	ˇ	 
.
ˇ	ˇ	 
BeginProperty
ˇ	ˇ	 #
(
ˇ	ˇ	# $
rect
ˇ	ˇ	$ (
,
ˇ	ˇ	( )
label
ˇ	ˇ	* /
,
ˇ	ˇ	/ 0
property
ˇ	ˇ	1 9
)
ˇ	ˇ	9 :
;
ˇ	ˇ	: ;
Rect
Å
Å
 
pos0
Å
Å
 
=
Å
Å
 
new
Å
Å
 
Rect
Å
Å
  
(
Å
Å
  !
rect
Å
Å
! %
.
Å
Å
% &
x
Å
Å
& '
,
Å
Å
' (
rect
Å
Å
) -
.
Å
Å
- .
y
Å
Å
. /
+
Å
Å
0 1
$num
Å
Å
2 3
,
Å
Å
3 4
rect
Å
Å
5 9
.
Å
Å
9 :
width
Å
Å
: ?
-
Å
Å
@ A
$num
Å
Å
B D
,
Å
Å
D E
$num
Å
Å
F H
)
Å
Å
H I
;
Å
Å
I J
float
É
É
 
width
É
É
 
=
É
É
 
rect
É
É
 
.
É
É
 
width
É
É
 $
+
É
É
% &
$num
É
É
' (
;
É
É
( )
pos0
Ñ
Ñ
 
.
Ñ
Ñ
 
width
Ñ
Ñ
 
=
Ñ
Ñ
 
EditorGUIUtility
Ñ
Ñ
 )
.
Ñ
Ñ
) *

labelWidth
Ñ
Ñ
* 4
;
Ñ
Ñ
4 5
	EditorGUI
Ö
Ö
 
.
Ö
Ö
 
PrefixLabel
Ö
Ö
 !
(
Ö
Ö
! "
pos0
Ö
Ö
" &
,
Ö
Ö
& '
label
Ö
Ö
( -
)
Ö
Ö
- .
;
Ö
Ö
. /
Vector4
á
á
 
margins
á
á
 
=
á
á
 
property
á
á
 &
.
á
á
& '
vector4Value
á
á
' 3
;
á
á
3 4
float
â
â
 
widthB
â
â
 
=
â
â
 
width
â
â
  
-
â
â
! "
EditorGUIUtility
â
â
# 3
.
â
â
3 4

labelWidth
â
â
4 >
;
â
â
> ?
float
ä
ä
 

fieldWidth
ä
ä
 
=
ä
ä
 
widthB
ä
ä
 %
/
ä
ä
& '
$num
ä
ä
( )
;
ä
ä
) *
pos0
ã
ã
 
.
ã
ã
 
width
ã
ã
 
=
ã
ã
 
Mathf
ã
ã
 
.
ã
ã
 
Max
ã
ã
 "
(
ã
ã
" #

fieldWidth
ã
ã
# -
-
ã
ã
. /
$num
ã
ã
0 1
,
ã
ã
1 2
$num
ã
ã
3 6
)
ã
ã
6 7
;
ã
ã
7 8
pos0
é
é
 
.
é
é
 
x
é
é
 
=
é
é
 
EditorGUIUtility
é
é
 %
.
é
é
% &

labelWidth
é
é
& 0
+
é
é
1 2
$num
é
é
3 5
;
é
é
5 6
margins
è
è
 
.
è
è
 
x
è
è
 
=
è
è
 
DrawMarginField
è
è
 '
(
è
è
' (
pos0
è
è
( ,
,
è
è
, -
$str
è
è
. 4
,
è
è
4 5
margins
è
è
6 =
.
è
è
= >
x
è
è
> ?
)
è
è
? @
;
è
è
@ A
pos0
ë
ë
 
.
ë
ë
 
x
ë
ë
 
+=
ë
ë
 

fieldWidth
ë
ë
  
;
ë
ë
  !
margins
í
í
 
.
í
í
 
y
í
í
 
=
í
í
 
DrawMarginField
í
í
 '
(
í
í
' (
pos0
í
í
( ,
,
í
í
, -
$str
í
í
. 3
,
í
í
3 4
margins
í
í
5 <
.
í
í
< =
y
í
í
= >
)
í
í
> ?
;
í
í
? @
pos0
î
î
 
.
î
î
 
x
î
î
 
+=
î
î
 

fieldWidth
î
î
  
;
î
î
  !
margins
ï
ï
 
.
ï
ï
 
z
ï
ï
 
=
ï
ï
 
DrawMarginField
ï
ï
 '
(
ï
ï
' (
pos0
ï
ï
( ,
,
ï
ï
, -
$str
ï
ï
. 5
,
ï
ï
5 6
margins
ï
ï
7 >
.
ï
ï
> ?
z
ï
ï
? @
)
ï
ï
@ A
;
ï
ï
A B
pos0
ó
ó
 
.
ó
ó
 
x
ó
ó
 
+=
ó
ó
 

fieldWidth
ó
ó
  
;
ó
ó
  !
margins
ò
ò
 
.
ò
ò
 
w
ò
ò
 
=
ò
ò
 
DrawMarginField
ò
ò
 '
(
ò
ò
' (
pos0
ò
ò
( ,
,
ò
ò
, -
$str
ò
ò
. 6
,
ò
ò
6 7
margins
ò
ò
8 ?
.
ò
ò
? @
w
ò
ò
@ A
)
ò
ò
A B
;
ò
ò
B C
property
ö
ö
 
.
ö
ö
 
vector4Value
ö
ö
 !
=
ö
ö
" #
margins
ö
ö
$ +
;
ö
ö
+ ,
	EditorGUI
ú
ú
 
.
ú
ú
 
EndProperty
ú
ú
 !
(
ú
ú
! "
)
ú
ú
" #
;
ú
ú
# $
}
ù
ù
 	
float
ü
ü
 
DrawMarginField
ü
ü
 
(
ü
ü
 
Rect
ü
ü
 "
position
ü
ü
# +
,
ü
ü
+ ,
string
ü
ü
- 3
label
ü
ü
4 9
,
ü
ü
9 :
float
ü
ü
; @
value
ü
ü
A F
)
ü
ü
F G
{
†
†
 	
int
°
°
 
	controlId
°
°
 
=
°
°
 

GUIUtility
°
°
 &
.
°
°
& '
GetControlID
°
°
' 3
(
°
°
3 4
	FocusType
°
°
4 =
.
°
°
= >
Keyboard
°
°
> F
,
°
°
F G
position
°
°
H P
)
°
°
P Q
;
°
°
Q R
	EditorGUI
¢
¢
 
.
¢
¢
 
PrefixLabel
¢
¢
 !
(
¢
¢
! "
position
¢
¢
" *
,
¢
¢
* +
	controlId
¢
¢
, 5
,
¢
¢
5 6
new
¢
¢
7 :

GUIContent
¢
¢
; E
(
¢
¢
E F
label
¢
¢
F K
)
¢
¢
K L
)
¢
¢
L M
;
¢
¢
M N
Rect
§
§
 
dragZone
§
§
 
=
§
§
 
new
§
§
 
Rect
§
§
  $
(
§
§
$ %
position
§
§
% -
.
§
§
- .
x
§
§
. /
,
§
§
/ 0
position
§
§
1 9
.
§
§
9 :
y
§
§
: ;
,
§
§
; <
position
§
§
= E
.
§
§
E F
width
§
§
F K
,
§
§
K L
position
§
§
M U
.
§
§
U V
height
§
§
V \
)
§
§
\ ]
;
§
§
] ^
position
•
•
 
.
•
•
 
y
•
•
 
+=
•
•
 
EditorGUIUtility
•
•
 *
.
•
•
* +
singleLineHeight
•
•
+ ;
;
•
•
; <
return
ß
ß
 
	EditorGUI
ß
ß
 
.
ß
ß
 
DoFloatField
ß
ß
 )
(
ß
ß
) *
	EditorGUI
ß
ß
* 3
.
ß
ß
3 4
s_RecycledEditor
ß
ß
4 D
,
ß
ß
D E
position
ß
ß
F N
,
ß
ß
N O
dragZone
ß
ß
P X
,
ß
ß
X Y
	controlId
ß
ß
Z c
,
ß
ß
c d
value
ß
ß
e j
,
ß
ß
j k
	EditorGUI
ß
ß
l u
.
ß
ß
u v&
kFloatFieldFormatStringß
ß
v ç
,ß
ß
ç é
EditorStylesß
ß
è õ
.ß
ß
õ ú
numberFieldß
ß
ú ß
,ß
ß
ß ®
trueß
ß
© ≠
)ß
ß
≠ Æ
;ß
ß
Æ Ø
}
®
®
 	
	protected
™
™
 
void
™
™
  
DrawPropertySlider
™
™
 )
(
™
™
) *

GUIContent
™
™
* 4
label
™
™
5 :
,
™
™
: ; 
SerializedProperty
™
™
< N
property
™
™
O W
)
™
™
W X
{
´
´
 	
Rect
¨
¨
 
rect
¨
¨
 
=
¨
¨
 
EditorGUILayout
¨
¨
 '
.
¨
¨
' (
GetControlRect
¨
¨
( 6
(
¨
¨
6 7
false
¨
¨
7 <
,
¨
¨
< =
$num
¨
¨
> @
)
¨
¨
@ A
;
¨
¨
A B

GUIContent
Æ
Æ
 
content
Æ
Æ
 
=
Æ
Æ
  
label
Æ
Æ
! &
??
Æ
Æ
' )

GUIContent
Æ
Æ
* 4
.
Æ
Æ
4 5
none
Æ
Æ
5 9
;
Æ
Æ
9 :
	EditorGUI
Ø
Ø
 
.
Ø
Ø
 
Slider
Ø
Ø
 
(
Ø
Ø
 
new
Ø
Ø
  
Rect
Ø
Ø
! %
(
Ø
Ø
% &
rect
Ø
Ø
& *
.
Ø
Ø
* +
x
Ø
Ø
+ ,
,
Ø
Ø
, -
rect
Ø
Ø
. 2
.
Ø
Ø
2 3
y
Ø
Ø
3 4
,
Ø
Ø
4 5
rect
Ø
Ø
6 :
.
Ø
Ø
: ;
width
Ø
Ø
; @
,
Ø
Ø
@ A
rect
Ø
Ø
B F
.
Ø
Ø
F G
height
Ø
Ø
G M
)
Ø
Ø
M N
,
Ø
Ø
N O
property
Ø
Ø
P X
,
Ø
Ø
X Y
$num
Ø
Ø
Z ^
,
Ø
Ø
^ _
$num
Ø
Ø
` d
,
Ø
Ø
d e
content
Ø
Ø
f m
)
Ø
Ø
m n
;
Ø
Ø
n o
}
∞
∞
 	
	protected
≤
≤
 
abstract
≤
≤
 
bool
≤
≤
 !
IsMixSelectionTypes
≤
≤
  3
(
≤
≤
3 4
)
≤
≤
4 5
;
≤
≤
5 6
	protected
µ
µ
 
abstract
µ
µ
 
void
µ
µ
 

OnUndoRedo
µ
µ
  *
(
µ
µ
* +
)
µ
µ
+ ,
;
µ
µ
, -
}
∑
∑
 
}∏
∏
 Å
ûD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_ColorGradientAssetMenu.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{		 
public 

static 
class &
TMP_ColorGradientAssetMenu 2
{ 
[ 	
MenuItem	 
( 
$str <
,< =
false> C
,C D
$numE H
)H I
]I J
public 
static 
void 
CreateColorGradient .
(. /
MenuCommand/ :
context; B
)B C
{ 	
string 
filePath 
; 
if 
( 
	Selection 
. 

assetGUIDs $
.$ %
Length% +
==, .
$num/ 0
)0 1
filePath 
= 
$str @
;@ A
else 
filePath 
= 
AssetDatabase (
.( )
GUIDToAssetPath) 8
(8 9
	Selection9 B
.B C

assetGUIDsC M
[M N
$numN O
]O P
)P Q
;Q R
if 
( 
	Directory 
. 
Exists  
(  !
filePath! )
)) *
)* +
{ 
filePath 
+= 
$str ;
;; <
} 
else 
{ 
filePath 
= 
Path 
.  
GetDirectoryName  0
(0 1
filePath1 9
)9 :
+; <
$str= \
;\ ]
} 
filePath   
=   
AssetDatabase   $
.  $ %#
GenerateUniqueAssetPath  % <
(  < =
filePath  = E
)  E F
;  F G
TMP_ColorGradient## 
colorGradient## +
=##, -
ScriptableObject##. >
.##> ?
CreateInstance##? M
<##M N
TMP_ColorGradient##N _
>##_ `
(##` a
)##a b
;##b c
AssetDatabase&& 
.&& 
CreateAsset&& %
(&&% &
colorGradient&&& 3
,&&3 4
filePath&&5 =
)&&= >
;&&> ?
AssetDatabase** 
.** 

SaveAssets** $
(**$ %
)**% &
;**& '
AssetDatabase,, 
.,, 
ImportAsset,, %
(,,% &
AssetDatabase,,& 3
.,,3 4
GetAssetPath,,4 @
(,,@ A
colorGradient,,A N
),,N O
),,O P
;,,P Q
EditorUtility.. 
... 
FocusProjectWindow.. ,
(.., -
)..- .
;... /
EditorGUIUtility// 
.// 

PingObject// '
(//' (
colorGradient//( 5
)//5 6
;//6 7
}00 	
}11 
}22 Ö
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMPro_FontPlugin.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{		 
}ss È¶
öD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMPro_CreateObjectMenu.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
public 

static 
class "
TMPro_CreateObjectMenu .
{ 
[ 	
MenuItem	 
( 
$str ;
,; <
false= B
,B C
$numD F
)F G
]G H
static 
void *
CreateTextMeshProObjectPerform 2
(2 3
MenuCommand3 >
command? F
)F G
{ 	

GameObject 
go 
= 
ObjectFactory )
.) *
CreateGameObject* :
(: ;
$str; G
)G H
;H I
StageUtility 
. )
PlaceGameObjectInCurrentStage 6
(6 7
go7 9
)9 :
;: ;
TextMeshPro 
textComponent %
=& '
ObjectFactory( 5
.5 6
AddComponent6 B
<B C
TextMeshProC N
>N O
(O P
goP R
)R S
;S T
if 
( 
textComponent 
. %
m_isWaitingOnResourceLoad 7
==8 :
false; @
)@ A
{ 
Preset!! 
[!! 
]!! 
presets!!  
=!!! "
Preset!!# )
.!!) *&
GetDefaultPresetsForObject!!* D
(!!D E
textComponent!!E R
)!!R S
;!!S T
if## 
(## 
presets## 
==## 
null## #
||##$ &
presets##' .
.##. /
Length##/ 5
==##6 8
$num##9 :
)##: ;
{$$ 
textComponent%% !
.%%! "
text%%" &
=%%' (
$str%%) 6
;%%6 7
textComponent&& !
.&&! "
	alignment&&" +
=&&, - 
TextAlignmentOptions&&. B
.&&B C
TopLeft&&C J
;&&J K
}'' 
else(( 
{)) 
textComponent** !
.**! "
renderer**" *
.*** +
sortingLayerID**+ 9
=**: ;
textComponent**< I
.**I J
_SortingLayerID**J Y
;**Y Z
textComponent++ !
.++! "
renderer++" *
.++* +
sortingOrder+++ 7
=++8 9
textComponent++: G
.++G H
_SortingOrder++H U
;++U V
},, 
if.. 
(.. 
TMP_Settings..  
...  !!
autoSizeTextContainer..! 6
)..6 7
{// 
Vector200 
size00  
=00! "
textComponent00# 0
.000 1
GetPreferredValues001 C
(00C D
TMP_Math00D L
.00L M
	FLOAT_MAX00M V
,00V W
TMP_Math00X `
.00` a
	FLOAT_MAX00a j
)00j k
;00k l
textComponent11 !
.11! "
rectTransform11" /
.11/ 0
	sizeDelta110 9
=11: ;
size11< @
;11@ A
}22 
else33 
{44 
textComponent55 !
.55! "
rectTransform55" /
.55/ 0
	sizeDelta550 9
=55: ;
TMP_Settings55< H
.55H I/
#defaultTextMeshProTextContainerSize55I l
;55l m
}66 
}77 
else88 
{99 
textComponent:: 
.:: 
text:: "
=::# $
$str::% 2
;::2 3
textComponent;; 
.;; 
	alignment;; '
=;;( ) 
TextAlignmentOptions;;* >
.;;> ?
TopLeft;;? F
;;;F G
}<< 
Undo>> 
.>> %
RegisterCreatedObjectUndo>> *
(>>* +
go>>+ -
,>>- .
$str>>/ 8
+>>9 :
go>>; =
.>>= >
name>>> B
)>>B C
;>>C D

GameObject@@ 
contextObject@@ $
=@@% &
command@@' .
.@@. /
context@@/ 6
as@@7 9

GameObject@@: D
;@@D E
ifAA 
(AA 
contextObjectAA 
!=AA  
nullAA! %
)AA% &
{BB 
GameObjectUtilityCC !
.CC! "
SetParentAndAlignCC" 3
(CC3 4
goCC4 6
,CC6 7
contextObjectCC8 E
)CCE F
;CCF G
UndoDD 
.DD 
SetTransformParentDD '
(DD' (
goDD( *
.DD* +
	transformDD+ 4
,DD4 5
contextObjectDD6 C
.DDC D
	transformDDD M
,DDM N
$strDDO X
+DDY Z
goDD[ ]
.DD] ^
nameDD^ b
)DDb c
;DDc d
}EE 
	SelectionGG 
.GG 
activeGameObjectGG &
=GG' (
goGG) +
;GG+ ,
}HH 	
[OO 	
MenuItemOO	 
(OO 
$strOO 4
,OO4 5
falseOO6 ;
,OO; <
$numOO= A
)OOA B
]OOB C
staticPP 
voidPP -
!CreateTextMeshProGuiObjectPerformPP 5
(PP5 6
MenuCommandPP6 A
menuCommandPPB M
)PPM N
{QQ 	

GameObjectRR 
goRR 
=RR 
TMP_DefaultControlsRR /
.RR/ 0

CreateTextRR0 :
(RR: ; 
GetStandardResourcesRR; O
(RRO P
)RRP Q
)RRQ R
;RRR S
TextMeshProUGUIUU 
textComponentUU )
=UU* +
goUU, .
.UU. /
GetComponentUU/ ;
<UU; <
TextMeshProUGUIUU< K
>UUK L
(UUL M
)UUM N
;UUN O
ifWW 
(WW 
textComponentWW 
.WW %
m_isWaitingOnResourceLoadWW 7
==WW8 :
falseWW; @
)WW@ A
{XX 
PresetZZ 
[ZZ 
]ZZ 
presetsZZ  
=ZZ! "
PresetZZ# )
.ZZ) *&
GetDefaultPresetsForObjectZZ* D
(ZZD E
textComponentZZE R
)ZZR S
;ZZS T
if\\ 
(\\ 
presets\\ 
==\\ 
null\\ #
||\\$ &
presets\\' .
.\\. /
Length\\/ 5
==\\6 8
$num\\9 :
)\\: ;
{]] 
textComponent^^ !
.^^! "
fontSize^^" *
=^^+ ,
TMP_Settings^^- 9
.^^9 :
defaultFontSize^^: I
;^^I J
textComponent__ !
.__! "
color__" '
=__( )
Color__* /
.__/ 0
white__0 5
;__5 6
textComponent`` !
.``! "
text``" &
=``' (
$str``) 3
;``3 4
}aa 
ifcc 
(cc 
TMP_Settingscc  
.cc  !!
autoSizeTextContainercc! 6
)cc6 7
{dd 
Vector2ee 
sizeee  
=ee! "
textComponentee# 0
.ee0 1
GetPreferredValuesee1 C
(eeC D
TMP_MatheeD L
.eeL M
	FLOAT_MAXeeM V
,eeV W
TMP_MatheeX `
.ee` a
	FLOAT_MAXeea j
)eej k
;eek l
textComponentff !
.ff! "
rectTransformff" /
.ff/ 0
	sizeDeltaff0 9
=ff: ;
sizeff< @
;ff@ A
}gg 
elsehh 
{ii 
textComponentjj !
.jj! "
rectTransformjj" /
.jj/ 0
	sizeDeltajj0 9
=jj: ;
TMP_Settingsjj< H
.jjH I1
%defaultTextMeshProUITextContainerSizejjI n
;jjn o
}kk 
}ll 
elsemm 
{nn 
textComponentoo 
.oo 
fontSizeoo &
=oo' (
$numoo) +
;oo+ ,
textComponentpp 
.pp 
colorpp #
=pp$ %
Colorpp& +
.pp+ ,
whitepp, 1
;pp1 2
textComponentqq 
.qq 
textqq "
=qq# $
$strqq% /
;qq/ 0
}rr 
PlaceUIElementRoottt 
(tt 
gott !
,tt! "
menuCommandtt# .
)tt. /
;tt/ 0
}uu 	
[ww 	
MenuItemww	 
(ww 
$strww 6
,ww6 7
falseww8 =
,ww= >
$numww? C
)wwC D
]wwD E
publicxx 
staticxx 
voidxx 
	AddButtonxx $
(xx$ %
MenuCommandxx% 0
menuCommandxx1 <
)xx< =
{yy 	

GameObjectzz 
gozz 
=zz 
TMP_DefaultControlszz /
.zz/ 0
CreateButtonzz0 <
(zz< = 
GetStandardResourceszz= Q
(zzQ R
)zzR S
)zzS T
;zzT U
TMP_Text}} 
textComponent}} "
=}}# $
go}}% '
.}}' ("
GetComponentInChildren}}( >
<}}> ?
TMP_Text}}? G
>}}G H
(}}H I
)}}I J
;}}J K
textComponent~~ 
.~~ 
fontSize~~ "
=~~# $
$num~~% '
;~~' ( 
PlaceUIElementRoot
ÄÄ 
(
ÄÄ 
go
ÄÄ !
,
ÄÄ! "
menuCommand
ÄÄ# .
)
ÄÄ. /
;
ÄÄ/ 0
}
ÅÅ 	
[
ÖÖ 	
MenuItem
ÖÖ	 
(
ÖÖ 
$str
ÖÖ ;
,
ÖÖ; <
false
ÖÖ= B
,
ÖÖB C
$num
ÖÖD H
)
ÖÖH I
]
ÖÖI J
static
ÜÜ 
void
ÜÜ &
AddTextMeshProInputField
ÜÜ ,
(
ÜÜ, -
MenuCommand
ÜÜ- 8
menuCommand
ÜÜ9 D
)
ÜÜD E
{
áá 	

GameObject
àà 
go
àà 
=
àà !
TMP_DefaultControls
àà /
.
àà/ 0
CreateInputField
àà0 @
(
àà@ A"
GetStandardResources
ààA U
(
ààU V
)
ààV W
)
ààW X
;
ààX Y 
PlaceUIElementRoot
ââ 
(
ââ 
go
ââ !
,
ââ! "
menuCommand
ââ# .
)
ââ. /
;
ââ/ 0
}
ää 	
[
çç 	
MenuItem
çç	 
(
çç 
$str
çç 8
,
çç8 9
false
çç: ?
,
çç? @
$num
ççA E
)
ççE F
]
ççF G
public
éé 
static
éé 
void
éé 
AddDropdown
éé &
(
éé& '
MenuCommand
éé' 2
menuCommand
éé3 >
)
éé> ?
{
èè 	

GameObject
êê 
go
êê 
=
êê !
TMP_DefaultControls
êê /
.
êê/ 0
CreateDropdown
êê0 >
(
êê> ?"
GetStandardResources
êê? S
(
êêS T
)
êêT U
)
êêU V
;
êêV W 
PlaceUIElementRoot
ëë 
(
ëë 
go
ëë !
,
ëë! "
menuCommand
ëë# .
)
ëë. /
;
ëë/ 0
}
íí 	
private
ïï 
const
ïï 
string
ïï 
kUILayerName
ïï )
=
ïï* +
$str
ïï, 0
;
ïï0 1
private
óó 
const
óó 
string
óó !
kStandardSpritePath
óó 0
=
óó1 2
$str
óó3 I
;
óóI J
private
òò 
const
òò 
string
òò #
kBackgroundSpritePath
òò 2
=
òò3 4
$str
òò5 M
;
òòM N
private
ôô 
const
ôô 
string
ôô '
kInputFieldBackgroundPath
ôô 6
=
ôô7 8
$str
ôô9 [
;
ôô[ \
private
öö 
const
öö 
string
öö 
	kKnobPath
öö &
=
öö' (
$str
öö) ;
;
öö; <
private
õõ 
const
õõ 
string
õõ 
kCheckmarkPath
õõ +
=
õõ, -
$str
õõ. E
;
õõE F
private
úú 
const
úú 
string
úú  
kDropdownArrowPath
úú /
=
úú0 1
$str
úú2 M
;
úúM N
private
ùù 
const
ùù 
string
ùù 
	kMaskPath
ùù &
=
ùù' (
$str
ùù) =
;
ùù= >
private
üü 
static
üü !
TMP_DefaultControls
üü *
.
üü* +
	Resources
üü+ 4!
s_StandardResources
üü5 H
;
üüH I
private
¢¢ 
static
¢¢ !
TMP_DefaultControls
¢¢ *
.
¢¢* +
	Resources
¢¢+ 4"
GetStandardResources
¢¢5 I
(
¢¢I J
)
¢¢J K
{
££ 	
if
§§ 
(
§§ !
s_StandardResources
§§ #
.
§§# $
standard
§§$ ,
==
§§- /
null
§§0 4
)
§§4 5
{
•• !
s_StandardResources
¶¶ #
.
¶¶# $
standard
¶¶$ ,
=
¶¶- .
AssetDatabase
¶¶/ <
.
¶¶< =%
GetBuiltinExtraResource
¶¶= T
<
¶¶T U
Sprite
¶¶U [
>
¶¶[ \
(
¶¶\ ]!
kStandardSpritePath
¶¶] p
)
¶¶p q
;
¶¶q r!
s_StandardResources
ßß #
.
ßß# $

background
ßß$ .
=
ßß/ 0
AssetDatabase
ßß1 >
.
ßß> ?%
GetBuiltinExtraResource
ßß? V
<
ßßV W
Sprite
ßßW ]
>
ßß] ^
(
ßß^ _#
kBackgroundSpritePath
ßß_ t
)
ßßt u
;
ßßu v!
s_StandardResources
®® #
.
®®# $

inputField
®®$ .
=
®®/ 0
AssetDatabase
®®1 >
.
®®> ?%
GetBuiltinExtraResource
®®? V
<
®®V W
Sprite
®®W ]
>
®®] ^
(
®®^ _'
kInputFieldBackgroundPath
®®_ x
)
®®x y
;
®®y z!
s_StandardResources
©© #
.
©©# $
knob
©©$ (
=
©©) *
AssetDatabase
©©+ 8
.
©©8 9%
GetBuiltinExtraResource
©©9 P
<
©©P Q
Sprite
©©Q W
>
©©W X
(
©©X Y
	kKnobPath
©©Y b
)
©©b c
;
©©c d!
s_StandardResources
™™ #
.
™™# $
	checkmark
™™$ -
=
™™. /
AssetDatabase
™™0 =
.
™™= >%
GetBuiltinExtraResource
™™> U
<
™™U V
Sprite
™™V \
>
™™\ ]
(
™™] ^
kCheckmarkPath
™™^ l
)
™™l m
;
™™m n!
s_StandardResources
´´ #
.
´´# $
dropdown
´´$ ,
=
´´- .
AssetDatabase
´´/ <
.
´´< =%
GetBuiltinExtraResource
´´= T
<
´´T U
Sprite
´´U [
>
´´[ \
(
´´\ ] 
kDropdownArrowPath
´´] o
)
´´o p
;
´´p q!
s_StandardResources
¨¨ #
.
¨¨# $
mask
¨¨$ (
=
¨¨) *
AssetDatabase
¨¨+ 8
.
¨¨8 9%
GetBuiltinExtraResource
¨¨9 P
<
¨¨P Q
Sprite
¨¨Q W
>
¨¨W X
(
¨¨X Y
	kMaskPath
¨¨Y b
)
¨¨b c
;
¨¨c d
}
≠≠ 
return
ÆÆ !
s_StandardResources
ÆÆ &
;
ÆÆ& '
}
ØØ 	
private
≤≤ 
static
≤≤ 
void
≤≤ +
SetPositionVisibleinSceneView
≤≤ 9
(
≤≤9 :
RectTransform
≤≤: G
canvasRTransform
≤≤H X
,
≤≤X Y
RectTransform
≤≤Z g
itemTransform
≤≤h u
)
≤≤u v
{
≥≥ 	
	SceneView
µµ 
	sceneView
µµ 
=
µµ  !
	SceneView
µµ" +
.
µµ+ ,!
lastActiveSceneView
µµ, ?
;
µµ? @
if
∂∂ 
(
∂∂ 
	sceneView
∂∂ 
==
∂∂ 
null
∂∂ !
&&
∂∂" $
	SceneView
∂∂% .
.
∂∂. /

sceneViews
∂∂/ 9
.
∂∂9 :
Count
∂∂: ?
>
∂∂@ A
$num
∂∂B C
)
∂∂C D
	sceneView
∑∑ 
=
∑∑ 
	SceneView
∑∑ %
.
∑∑% &

sceneViews
∑∑& 0
[
∑∑0 1
$num
∑∑1 2
]
∑∑2 3
as
∑∑4 6
	SceneView
∑∑7 @
;
∑∑@ A
if
∫∫ 
(
∫∫ 
	sceneView
∫∫ 
==
∫∫ 
null
∫∫ !
||
∫∫" $
	sceneView
∫∫% .
.
∫∫. /
camera
∫∫/ 5
==
∫∫6 8
null
∫∫9 =
)
∫∫= >
return
ªª 
;
ªª 
Camera
ææ 
camera
ææ 
=
ææ 
	sceneView
ææ %
.
ææ% &
camera
ææ& ,
;
ææ, -
Vector3
øø 
position
øø 
=
øø 
Vector3
øø &
.
øø& '
zero
øø' +
;
øø+ ,
Vector2
¿¿  
localPlanePosition
¿¿ &
;
¿¿& '
if
¬¬ 
(
¬¬ "
RectTransformUtility
¬¬ $
.
¬¬$ %0
"ScreenPointToLocalPointInRectangle
¬¬% G
(
¬¬G H
canvasRTransform
¬¬H X
,
¬¬X Y
new
¬¬Z ]
Vector2
¬¬^ e
(
¬¬e f
camera
¬¬f l
.
¬¬l m

pixelWidth
¬¬m w
/
¬¬x y
$num
¬¬z {
,
¬¬{ |
camera¬¬} É
.¬¬É Ñ
pixelHeight¬¬Ñ è
/¬¬ê ë
$num¬¬í ì
)¬¬ì î
,¬¬î ï
camera¬¬ñ ú
,¬¬ú ù
out¬¬û °"
localPlanePosition¬¬¢ ¥
)¬¬¥ µ
)¬¬µ ∂
{
√√  
localPlanePosition
≈≈ "
.
≈≈" #
x
≈≈# $
=
≈≈% & 
localPlanePosition
≈≈' 9
.
≈≈9 :
x
≈≈: ;
+
≈≈< =
canvasRTransform
≈≈> N
.
≈≈N O
	sizeDelta
≈≈O X
.
≈≈X Y
x
≈≈Y Z
*
≈≈[ \
canvasRTransform
≈≈] m
.
≈≈m n
pivot
≈≈n s
.
≈≈s t
x
≈≈t u
;
≈≈u v 
localPlanePosition
∆∆ "
.
∆∆" #
y
∆∆# $
=
∆∆% & 
localPlanePosition
∆∆' 9
.
∆∆9 :
y
∆∆: ;
+
∆∆< =
canvasRTransform
∆∆> N
.
∆∆N O
	sizeDelta
∆∆O X
.
∆∆X Y
y
∆∆Y Z
*
∆∆[ \
canvasRTransform
∆∆] m
.
∆∆m n
pivot
∆∆n s
.
∆∆s t
y
∆∆t u
;
∆∆u v 
localPlanePosition
»» "
.
»»" #
x
»»# $
=
»»% &
Mathf
»»' ,
.
»», -
Clamp
»»- 2
(
»»2 3 
localPlanePosition
»»3 E
.
»»E F
x
»»F G
,
»»G H
$num
»»I J
,
»»J K
canvasRTransform
»»L \
.
»»\ ]
	sizeDelta
»»] f
.
»»f g
x
»»g h
)
»»h i
;
»»i j 
localPlanePosition
…… "
.
……" #
y
……# $
=
……% &
Mathf
……' ,
.
……, -
Clamp
……- 2
(
……2 3 
localPlanePosition
……3 E
.
……E F
y
……F G
,
……G H
$num
……I J
,
……J K
canvasRTransform
……L \
.
……\ ]
	sizeDelta
……] f
.
……f g
y
……g h
)
……h i
;
……i j
position
ÃÃ 
.
ÃÃ 
x
ÃÃ 
=
ÃÃ  
localPlanePosition
ÃÃ /
.
ÃÃ/ 0
x
ÃÃ0 1
-
ÃÃ2 3
canvasRTransform
ÃÃ4 D
.
ÃÃD E
	sizeDelta
ÃÃE N
.
ÃÃN O
x
ÃÃO P
*
ÃÃQ R
itemTransform
ÃÃS `
.
ÃÃ` a
	anchorMin
ÃÃa j
.
ÃÃj k
x
ÃÃk l
;
ÃÃl m
position
ÕÕ 
.
ÕÕ 
y
ÕÕ 
=
ÕÕ  
localPlanePosition
ÕÕ /
.
ÕÕ/ 0
y
ÕÕ0 1
-
ÕÕ2 3
canvasRTransform
ÕÕ4 D
.
ÕÕD E
	sizeDelta
ÕÕE N
.
ÕÕN O
y
ÕÕO P
*
ÕÕQ R
itemTransform
ÕÕS `
.
ÕÕ` a
	anchorMin
ÕÕa j
.
ÕÕj k
y
ÕÕk l
;
ÕÕl m
Vector3
œœ 
minLocalPosition
œœ (
;
œœ( )
minLocalPosition
––  
.
––  !
x
––! "
=
––# $
canvasRTransform
––% 5
.
––5 6
	sizeDelta
––6 ?
.
––? @
x
––@ A
*
––B C
(
––D E
$num
––E F
-
––G H
canvasRTransform
––I Y
.
––Y Z
pivot
––Z _
.
––_ `
x
––` a
)
––a b
+
––c d
itemTransform
––e r
.
––r s
	sizeDelta
––s |
.
––| }
x
––} ~
*–– Ä
itemTransform––Å é
.––é è
pivot––è î
.––î ï
x––ï ñ
;––ñ ó
minLocalPosition
——  
.
——  !
y
——! "
=
——# $
canvasRTransform
——% 5
.
——5 6
	sizeDelta
——6 ?
.
——? @
y
——@ A
*
——B C
(
——D E
$num
——E F
-
——G H
canvasRTransform
——I Y
.
——Y Z
pivot
——Z _
.
——_ `
y
——` a
)
——a b
+
——c d
itemTransform
——e r
.
——r s
	sizeDelta
——s |
.
——| }
y
——} ~
*—— Ä
itemTransform——Å é
.——é è
pivot——è î
.——î ï
y——ï ñ
;——ñ ó
Vector3
”” 
maxLocalPosition
”” (
;
””( )
maxLocalPosition
‘‘  
.
‘‘  !
x
‘‘! "
=
‘‘# $
canvasRTransform
‘‘% 5
.
‘‘5 6
	sizeDelta
‘‘6 ?
.
‘‘? @
x
‘‘@ A
*
‘‘B C
(
‘‘D E
$num
‘‘E F
-
‘‘G H
canvasRTransform
‘‘I Y
.
‘‘Y Z
pivot
‘‘Z _
.
‘‘_ `
x
‘‘` a
)
‘‘a b
-
‘‘c d
itemTransform
‘‘e r
.
‘‘r s
	sizeDelta
‘‘s |
.
‘‘| }
x
‘‘} ~
*‘‘ Ä
itemTransform‘‘Å é
.‘‘é è
pivot‘‘è î
.‘‘î ï
x‘‘ï ñ
;‘‘ñ ó
maxLocalPosition
’’  
.
’’  !
y
’’! "
=
’’# $
canvasRTransform
’’% 5
.
’’5 6
	sizeDelta
’’6 ?
.
’’? @
y
’’@ A
*
’’B C
(
’’D E
$num
’’E F
-
’’G H
canvasRTransform
’’I Y
.
’’Y Z
pivot
’’Z _
.
’’_ `
y
’’` a
)
’’a b
-
’’c d
itemTransform
’’e r
.
’’r s
	sizeDelta
’’s |
.
’’| }
y
’’} ~
*’’ Ä
itemTransform’’Å é
.’’é è
pivot’’è î
.’’î ï
y’’ï ñ
;’’ñ ó
position
◊◊ 
.
◊◊ 
x
◊◊ 
=
◊◊ 
Mathf
◊◊ "
.
◊◊" #
Clamp
◊◊# (
(
◊◊( )
position
◊◊) 1
.
◊◊1 2
x
◊◊2 3
,
◊◊3 4
minLocalPosition
◊◊5 E
.
◊◊E F
x
◊◊F G
,
◊◊G H
maxLocalPosition
◊◊I Y
.
◊◊Y Z
x
◊◊Z [
)
◊◊[ \
;
◊◊\ ]
position
ÿÿ 
.
ÿÿ 
y
ÿÿ 
=
ÿÿ 
Mathf
ÿÿ "
.
ÿÿ" #
Clamp
ÿÿ# (
(
ÿÿ( )
position
ÿÿ) 1
.
ÿÿ1 2
y
ÿÿ2 3
,
ÿÿ3 4
minLocalPosition
ÿÿ5 E
.
ÿÿE F
y
ÿÿF G
,
ÿÿG H
maxLocalPosition
ÿÿI Y
.
ÿÿY Z
y
ÿÿZ [
)
ÿÿ[ \
;
ÿÿ\ ]
}
ŸŸ 
itemTransform
€€ 
.
€€ 
anchoredPosition
€€ *
=
€€+ ,
position
€€- 5
;
€€5 6
itemTransform
‹‹ 
.
‹‹ 
localRotation
‹‹ '
=
‹‹( )

Quaternion
‹‹* 4
.
‹‹4 5
identity
‹‹5 =
;
‹‹= >
itemTransform
›› 
.
›› 

localScale
›› $
=
››% &
Vector3
››' .
.
››. /
one
››/ 2
;
››2 3
}
ﬁﬁ 	
private
·· 
static
·· 
void
··  
PlaceUIElementRoot
·· .
(
··. /

GameObject
··/ 9
element
··: A
,
··A B
MenuCommand
··C N
menuCommand
··O Z
)
··Z [
{
‚‚ 	

GameObject
„„ 
parent
„„ 
=
„„ 
menuCommand
„„  +
.
„„+ ,
context
„„, 3
as
„„4 6

GameObject
„„7 A
;
„„A B
bool
‰‰ "
explicitParentChoice
‰‰ %
=
‰‰& '
true
‰‰( ,
;
‰‰, -
if
ÂÂ 
(
ÂÂ 
parent
ÂÂ 
==
ÂÂ 
null
ÂÂ 
)
ÂÂ 
{
ÊÊ 
parent
ÁÁ 
=
ÁÁ )
GetOrCreateCanvasGameObject
ÁÁ 4
(
ÁÁ4 5
)
ÁÁ5 6
;
ÁÁ6 7"
explicitParentChoice
ËË $
=
ËË% &
false
ËË' ,
;
ËË, -
PrefabStage
ÏÏ 
prefabStage
ÏÏ '
=
ÏÏ( ) 
PrefabStageUtility
ÏÏ* <
.
ÏÏ< =#
GetCurrentPrefabStage
ÏÏ= R
(
ÏÏR S
)
ÏÏS T
;
ÏÏT U
if
ÌÌ 
(
ÌÌ 
prefabStage
ÌÌ 
!=
ÌÌ  "
null
ÌÌ# '
&&
ÌÌ( *
!
ÌÌ+ ,
prefabStage
ÌÌ, 7
.
ÌÌ7 8$
IsPartOfPrefabContents
ÌÌ8 N
(
ÌÌN O
parent
ÌÌO U
)
ÌÌU V
)
ÌÌV W
parent
ÓÓ 
=
ÓÓ 
prefabStage
ÓÓ (
.
ÓÓ( ) 
prefabContentsRoot
ÓÓ) ;
;
ÓÓ; <
}
ÔÔ 
if
 
(
 
parent
 
.
 "
GetComponentInParent
 +
<
+ ,
Canvas
, 2
>
2 3
(
3 4
)
4 5
==
6 8
null
9 =
)
= >
{
ÒÒ 

GameObject
ÙÙ 
canvas
ÙÙ !
=
ÙÙ" #
CreateNewUI
ÙÙ$ /
(
ÙÙ/ 0
)
ÙÙ0 1
;
ÙÙ1 2
canvas
ıı 
.
ıı 
	transform
ıı  
.
ıı  !
	SetParent
ıı! *
(
ıı* +
parent
ıı+ 1
.
ıı1 2
	transform
ıı2 ;
,
ıı; <
false
ıı= B
)
ııB C
;
ııC D
parent
ˆˆ 
=
ˆˆ 
canvas
ˆˆ 
;
ˆˆ  
}
˜˜ 
SceneManager
˝˝ 
.
˝˝ #
MoveGameObjectToScene
˝˝ .
(
˝˝. /
element
˝˝/ 6
,
˝˝6 7
parent
˝˝8 >
.
˝˝> ?
scene
˝˝? D
)
˝˝D E
;
˝˝E F
if
ˇˇ 
(
ˇˇ 
element
ˇˇ 
.
ˇˇ 
	transform
ˇˇ !
.
ˇˇ! "
parent
ˇˇ" (
==
ˇˇ) +
null
ˇˇ, 0
)
ˇˇ0 1
{
ÄÄ 
Undo
ÅÅ 
.
ÅÅ  
SetTransformParent
ÅÅ '
(
ÅÅ' (
element
ÅÅ( /
.
ÅÅ/ 0
	transform
ÅÅ0 9
,
ÅÅ9 :
parent
ÅÅ; A
.
ÅÅA B
	transform
ÅÅB K
,
ÅÅK L
$str
ÅÅM V
+
ÅÅW X
element
ÅÅY `
.
ÅÅ` a
name
ÅÅa e
)
ÅÅe f
;
ÅÅf g
}
ÇÇ 
GameObjectUtility
ÑÑ 
.
ÑÑ (
EnsureUniqueNameForSibling
ÑÑ 8
(
ÑÑ8 9
element
ÑÑ9 @
)
ÑÑ@ A
;
ÑÑA B
Undo
áá 
.
áá !
SetCurrentGroupName
áá $
(
áá$ %
$str
áá% .
+
áá/ 0
element
áá1 8
.
áá8 9
name
áá9 =
)
áá= >
;
áá> ?
GameObjectUtility
ââ 
.
ââ 
SetParentAndAlign
ââ /
(
ââ/ 0
element
ââ0 7
,
ââ7 8
parent
ââ9 ?
)
ââ? @
;
ââ@ A
if
ää 
(
ää 
!
ää "
explicitParentChoice
ää %
)
ää% &+
SetPositionVisibleinSceneView
ãã -
(
ãã- .
parent
ãã. 4
.
ãã4 5
GetComponent
ãã5 A
<
ããA B
RectTransform
ããB O
>
ããO P
(
ããP Q
)
ããQ R
,
ããR S
element
ããT [
.
ãã[ \
GetComponent
ãã\ h
<
ããh i
RectTransform
ããi v
>
ããv w
(
ããw x
)
ããx y
)
ããy z
;
ããz {
Undo
çç 
.
çç '
RegisterCreatedObjectUndo
çç *
(
çç* +
element
çç+ 2
,
çç2 3
$str
çç4 =
+
çç> ?
element
çç@ G
.
ççG H
name
ççH L
)
ççL M
;
ççM N
	Selection
èè 
.
èè 
activeGameObject
èè &
=
èè' (
element
èè) 0
;
èè0 1
}
êê 	
public
ìì 
static
ìì 

GameObject
ìì  
CreateNewUI
ìì! ,
(
ìì, -
)
ìì- .
{
îî 	
var
ññ 
root
ññ 
=
ññ 
new
ññ 

GameObject
ññ %
(
ññ% &
$str
ññ& .
)
ññ. /
;
ññ/ 0
root
óó 
.
óó 
layer
óó 
=
óó 
	LayerMask
óó "
.
óó" #
NameToLayer
óó# .
(
óó. /
kUILayerName
óó/ ;
)
óó; <
;
óó< =
Canvas
òò 
canvas
òò 
=
òò 
root
òò  
.
òò  !
AddComponent
òò! -
<
òò- .
Canvas
òò. 4
>
òò4 5
(
òò5 6
)
òò6 7
;
òò7 8
canvas
ôô 
.
ôô 

renderMode
ôô 
=
ôô 

RenderMode
ôô  *
.
ôô* + 
ScreenSpaceOverlay
ôô+ =
;
ôô= >
root
öö 
.
öö 
AddComponent
öö 
<
öö 
CanvasScaler
öö *
>
öö* +
(
öö+ ,
)
öö, -
;
öö- .
root
õõ 
.
õõ 
AddComponent
õõ 
<
õõ 
GraphicRaycaster
õõ .
>
õõ. /
(
õõ/ 0
)
õõ0 1
;
õõ1 2
StageUtility
ûû 
.
ûû +
PlaceGameObjectInCurrentStage
ûû 6
(
ûû6 7
root
ûû7 ;
)
ûû; <
;
ûû< =
bool
üü 
customScene
üü 
=
üü 
false
üü $
;
üü$ %
PrefabStage
†† 
prefabStage
†† #
=
††$ % 
PrefabStageUtility
††& 8
.
††8 9#
GetCurrentPrefabStage
††9 N
(
††N O
)
††O P
;
††P Q
if
°° 
(
°° 
prefabStage
°° 
!=
°° 
null
°° #
)
°°# $
{
¢¢ 
root
££ 
.
££ 
	transform
££ 
.
££ 
	SetParent
££ (
(
££( )
prefabStage
££) 4
.
££4 5 
prefabContentsRoot
££5 G
.
££G H
	transform
££H Q
,
££Q R
false
££S X
)
££X Y
;
££Y Z
customScene
§§ 
=
§§ 
true
§§ "
;
§§" #
}
•• 
Undo
ßß 
.
ßß '
RegisterCreatedObjectUndo
ßß *
(
ßß* +
root
ßß+ /
,
ßß/ 0
$str
ßß1 :
+
ßß; <
root
ßß= A
.
ßßA B
name
ßßB F
)
ßßF G
;
ßßG H
if
≠≠ 
(
≠≠ 
!
≠≠ 
customScene
≠≠ 
)
≠≠ 
CreateEventSystem
ÆÆ !
(
ÆÆ! "
false
ÆÆ" '
)
ÆÆ' (
;
ÆÆ( )
return
ØØ 
root
ØØ 
;
ØØ 
}
∞∞ 	
private
≥≥ 
static
≥≥ 
void
≥≥ 
CreateEventSystem
≥≥ -
(
≥≥- .
bool
≥≥. 2
select
≥≥3 9
)
≥≥9 :
{
¥¥ 	
CreateEventSystem
µµ 
(
µµ 
select
µµ $
,
µµ$ %
null
µµ& *
)
µµ* +
;
µµ+ ,
}
∂∂ 	
private
ππ 
static
ππ 
void
ππ 
CreateEventSystem
ππ -
(
ππ- .
bool
ππ. 2
select
ππ3 9
,
ππ9 :

GameObject
ππ; E
parent
ππF L
)
ππL M
{
∫∫ 	
var
ªª 
esys
ªª 
=
ªª 
Object
ªª 
.
ªª 
FindObjectOfType
ªª .
<
ªª. /
EventSystem
ªª/ :
>
ªª: ;
(
ªª; <
)
ªª< =
;
ªª= >
if
ºº 
(
ºº 
esys
ºº 
==
ºº 
null
ºº 
)
ºº 
{
ΩΩ 
var
ææ 
eventSystem
ææ 
=
ææ  !
new
ææ" %

GameObject
ææ& 0
(
ææ0 1
$str
ææ1 >
)
ææ> ?
;
ææ? @
GameObjectUtility
øø !
.
øø! "
SetParentAndAlign
øø" 3
(
øø3 4
eventSystem
øø4 ?
,
øø? @
parent
øøA G
)
øøG H
;
øøH I
esys
¿¿ 
=
¿¿ 
eventSystem
¿¿ "
.
¿¿" #
AddComponent
¿¿# /
<
¿¿/ 0
EventSystem
¿¿0 ;
>
¿¿; <
(
¿¿< =
)
¿¿= >
;
¿¿> ?
eventSystem
¡¡ 
.
¡¡ 
AddComponent
¡¡ (
<
¡¡( )#
StandaloneInputModule
¡¡) >
>
¡¡> ?
(
¡¡? @
)
¡¡@ A
;
¡¡A B
Undo
√√ 
.
√√ '
RegisterCreatedObjectUndo
√√ .
(
√√. /
eventSystem
√√/ :
,
√√: ;
$str
√√< E
+
√√F G
eventSystem
√√H S
.
√√S T
name
√√T X
)
√√X Y
;
√√Y Z
}
ƒƒ 
if
∆∆ 
(
∆∆ 
select
∆∆ 
&&
∆∆ 
esys
∆∆ 
!=
∆∆ !
null
∆∆" &
)
∆∆& '
{
«« 
	Selection
»» 
.
»» 
activeGameObject
»» *
=
»»+ ,
esys
»»- 1
.
»»1 2

gameObject
»»2 <
;
»»< =
}
…… 
}
   	
public
ŒŒ 
static
ŒŒ 

GameObject
ŒŒ  )
GetOrCreateCanvasGameObject
ŒŒ! <
(
ŒŒ< =
)
ŒŒ= >
{
œœ 	

GameObject
–– 

selectedGo
–– !
=
––" #
	Selection
––$ -
.
––- .
activeGameObject
––. >
;
––> ?
Canvas
”” 
canvas
”” 
=
”” 
(
”” 

selectedGo
”” '
!=
””( *
null
””+ /
)
””/ 0
?
””1 2

selectedGo
””3 =
.
””= >"
GetComponentInParent
””> R
<
””R S
Canvas
””S Y
>
””Y Z
(
””Z [
)
””[ \
:
””] ^
null
””_ c
;
””c d
if
‘‘ 
(
‘‘ 
IsValidCanvas
‘‘ 
(
‘‘ 
canvas
‘‘ $
)
‘‘$ %
)
‘‘% &
return
’’ 
canvas
’’ 
.
’’ 

gameObject
’’ (
;
’’( )
Canvas
ŸŸ 
[
ŸŸ 
]
ŸŸ 
canvasArray
ŸŸ  
=
ŸŸ! "
StageUtility
ŸŸ# /
.
ŸŸ/ 0#
GetCurrentStageHandle
ŸŸ0 E
(
ŸŸE F
)
ŸŸF G
.
ŸŸG H"
FindComponentsOfType
ŸŸH \
<
ŸŸ\ ]
Canvas
ŸŸ] c
>
ŸŸc d
(
ŸŸd e
)
ŸŸe f
;
ŸŸf g
for
⁄⁄ 
(
⁄⁄ 
int
⁄⁄ 
i
⁄⁄ 
=
⁄⁄ 
$num
⁄⁄ 
;
⁄⁄ 
i
⁄⁄ 
<
⁄⁄ 
canvasArray
⁄⁄  +
.
⁄⁄+ ,
Length
⁄⁄, 2
;
⁄⁄2 3
i
⁄⁄4 5
++
⁄⁄5 7
)
⁄⁄7 8
if
€€ 
(
€€ 
IsValidCanvas
€€ !
(
€€! "
canvasArray
€€" -
[
€€- .
i
€€. /
]
€€/ 0
)
€€0 1
)
€€1 2
return
‹‹ 
canvasArray
‹‹ &
[
‹‹& '
i
‹‹' (
]
‹‹( )
.
‹‹) *

gameObject
‹‹* 4
;
‹‹4 5
return
ﬂﬂ 
CreateNewUI
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ  
;
ﬂﬂ  !
}
‡‡ 	
static
‚‚ 
bool
‚‚ 
IsValidCanvas
‚‚ !
(
‚‚! "
Canvas
‚‚" (
canvas
‚‚) /
)
‚‚/ 0
{
„„ 	
if
‰‰ 
(
‰‰ 
canvas
‰‰ 
==
‰‰ 
null
‰‰ 
||
‰‰ !
!
‰‰" #
canvas
‰‰# )
.
‰‰) *

gameObject
‰‰* 4
.
‰‰4 5
activeInHierarchy
‰‰5 F
)
‰‰F G
return
ÂÂ 
false
ÂÂ 
;
ÂÂ 
if
ÈÈ 
(
ÈÈ 
EditorUtility
ÈÈ 
.
ÈÈ 
IsPersistent
ÈÈ *
(
ÈÈ* +
canvas
ÈÈ+ 1
)
ÈÈ1 2
||
ÈÈ3 5
(
ÈÈ6 7
canvas
ÈÈ7 =
.
ÈÈ= >
	hideFlags
ÈÈ> G
&
ÈÈH I
	HideFlags
ÈÈJ S
.
ÈÈS T
HideInHierarchy
ÈÈT c
)
ÈÈc d
!=
ÈÈe g
$num
ÈÈh i
)
ÈÈi j
return
ÍÍ 
false
ÍÍ 
;
ÍÍ 
if
ÏÏ 
(
ÏÏ 
StageUtility
ÏÏ 
.
ÏÏ 
GetStageHandle
ÏÏ +
(
ÏÏ+ ,
canvas
ÏÏ, 2
.
ÏÏ2 3

gameObject
ÏÏ3 =
)
ÏÏ= >
!=
ÏÏ? A
StageUtility
ÏÏB N
.
ÏÏN O#
GetCurrentStageHandle
ÏÏO d
(
ÏÏd e
)
ÏÏe f
)
ÏÏf g
return
ÌÌ 
false
ÌÌ 
;
ÌÌ 
return
ÔÔ 
true
ÔÔ 
;
ÔÔ 
}
 	
}
ÒÒ 
}ÚÚ Ÿ≠
ïD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_EditorUtility.cs
	namespace		 	
TMPro		
 
.		 
EditorUtilities		 
{

 
public 

static 
class 
TMP_EditorUtility )
{ 
public 
static 
string 
packageRelativePath 0
{ 	
get 
{ 
if 
( 
string 
. 
IsNullOrEmpty (
(( )
m_PackagePath) 6
)6 7
)7 8
m_PackagePath !
=" #"
GetPackageRelativePath$ :
(: ;
); <
;< =
return 
m_PackagePath $
;$ %
} 
} 	
[ 	
SerializeField	 
] 
private 
static 
string 
m_PackagePath +
;+ ,
public!! 
static!! 
string!! 
packageFullPath!! ,
{"" 	
get## 
{$$ 
if%% 
(%% 
string%% 
.%% 
IsNullOrEmpty%% (
(%%( )
m_PackageFullPath%%) :
)%%: ;
)%%; <
m_PackageFullPath&& %
=&&& '
GetPackageFullPath&&( :
(&&: ;
)&&; <
;&&< =
return(( 
m_PackageFullPath(( (
;((( )
})) 
}** 	
[++ 	
SerializeField++	 
]++ 
private,, 
static,, 
string,, 
m_PackageFullPath,, /
;,,/ 0
private00 
static00 
string00 

folderPath00 (
=00) *
$str00+ 6
;006 7
private22 
static22 
EditorWindow22 #
Gameview22$ ,
;22, -
private33 
static33 
bool33 
isInitialized33 )
=33* +
false33, 1
;331 2
private55 
static55 
void55 
GetGameview55 '
(55' (
)55( )
{66 	
System77 
.77 

Reflection77 
.77 
Assembly77 &
assembly77' /
=770 1
typeof772 8
(778 9
UnityEditor779 D
.77D E
EditorWindow77E Q
)77Q R
.77R S
Assembly77S [
;77[ \
System88 
.88 
Type88 
type88 
=88 
assembly88 '
.88' (
GetType88( /
(88/ 0
$str880 F
)88F G
;88G H
Gameview99 
=99 
EditorWindow99 #
.99# $
	GetWindow99$ -
(99- .
type99. 2
)992 3
;993 4
}:: 	
public== 
static== 
void== 

RepaintAll== %
(==% &
)==& '
{>> 	
if?? 
(?? 
isInitialized?? 
==??  
false??! &
)??& '
{@@ 
GetGameviewAA 
(AA 
)AA 
;AA 
isInitializedBB 
=BB 
trueBB  $
;BB$ %
}CC 
	SceneViewEE 
.EE 

RepaintAllEE  
(EE  !
)EE! "
;EE" #
GameviewFF 
.FF 
RepaintFF 
(FF 
)FF 
;FF 
}GG 	
publicSS 
staticSS 
TSS 
CreateAssetSS #
<SS# $
TSS$ %
>SS% &
(SS& '
stringSS' -
nameSS. 2
)SS2 3
whereSS4 9
TSS: ;
:SS< =
ScriptableObjectSS> N
{TT 	
stringUU 
pathUU 
=UU 
AssetDatabaseUU '
.UU' (
GetAssetPathUU( 4
(UU4 5
	SelectionUU5 >
.UU> ?
activeObjectUU? K
)UUK L
;UUL M
ifVV 
(VV 
pathVV 
.VV 
LengthVV 
==VV 
$numVV  
)VV  !
{WW 
pathYY 
=YY 
$strYY  
+YY! "
nameYY# '
+YY( )
$strYY* 2
;YY2 3
}ZZ 
else[[ 
if[[ 
([[ 
	Directory[[ 
.[[ 
Exists[[ %
([[% &
path[[& *
)[[* +
)[[+ ,
{\\ 
path^^ 
+=^^ 
$str^^ 
+^^ 
name^^ "
+^^# $
$str^^% -
;^^- .
}__ 
else`` 
{`` 
pathbb 
=bb 
Pathbb 
.bb 
GetDirectoryNamebb ,
(bb, -
pathbb- 1
)bb1 2
+bb3 4
$strbb5 8
+bb9 :
namebb; ?
+bb@ A
$strbbB J
;bbJ K
}cc 
Tdd 
assetdd 
=dd 
ScriptableObjectdd &
.dd& '
CreateInstancedd' 5
<dd5 6
Tdd6 7
>dd7 8
(dd8 9
)dd9 :
;dd: ;
AssetDatabaseee 
.ee 
CreateAssetee %
(ee% &
assetee& +
,ee+ ,
AssetDatabaseee- :
.ee: ;#
GenerateUniqueAssetPathee; R
(eeR S
patheeS W
)eeW X
)eeX Y
;eeY Z
EditorUtilityff 
.ff 
FocusProjectWindowff ,
(ff, -
)ff- .
;ff. /
	Selectiongg 
.gg 
activeObjectgg "
=gg# $
assetgg% *
;gg* +
returnhh 
assethh 
;hh 
}ii 	
publicnn 
staticnn 
Materialnn 
[nn 
]nn  "
FindMaterialReferencesnn! 7
(nn7 8
TMP_FontAssetnn8 E
	fontAssetnnF O
)nnO P
{oo 	
Listpp 
<pp 
Materialpp 
>pp 
refspp 
=pp  !
newpp" %
Listpp& *
<pp* +
Materialpp+ 3
>pp3 4
(pp4 5
)pp5 6
;pp6 7
Materialqq 
matqq 
=qq 
	fontAssetqq $
.qq$ %
materialqq% -
;qq- .
refsrr 
.rr 
Addrr 
(rr 
matrr 
)rr 
;rr 
stringuu 
searchPatternuu  
=uu! "
$struu# /
+uu0 1
$struu2 5
+uu6 7
	fontAssetuu8 A
.uuA B
nameuuB F
.uuF G
SplituuG L
(uuL M
newuuM P
charuuQ U
[uuU V
]uuV W
{uuX Y
$charuuZ ]
}uu^ _
)uu_ `
[uu` a
$numuua b
]uub c
;uuc d
stringvv 
[vv 
]vv 
materialAssetGUIDsvv '
=vv( )
AssetDatabasevv* 7
.vv7 8

FindAssetsvv8 B
(vvB C
searchPatternvvC P
)vvP Q
;vvQ R
forxx 
(xx 
intxx 
ixx 
=xx 
$numxx 
;xx 
ixx 
<xx 
materialAssetGUIDsxx  2
.xx2 3
Lengthxx3 9
;xx9 :
ixx; <
++xx< >
)xx> ?
{yy 
stringzz 
materialPathzz #
=zz$ %
AssetDatabasezz& 3
.zz3 4
GUIDToAssetPathzz4 C
(zzC D
materialAssetGUIDszzD V
[zzV W
izzW X
]zzX Y
)zzY Z
;zzZ [
Material{{ 
targetMaterial{{ '
={{( )
AssetDatabase{{* 7
.{{7 8
LoadAssetAtPath{{8 G
<{{G H
Material{{H P
>{{P Q
({{Q R
materialPath{{R ^
){{^ _
;{{_ `
if}} 
(}} 
targetMaterial}} "
.}}" #
HasProperty}}# .
(}}. /
ShaderUtilities}}/ >
.}}> ?

ID_MainTex}}? I
)}}I J
&&}}K M
targetMaterial}}N \
.}}\ ]

GetTexture}}] g
(}}g h
ShaderUtilities}}h w
.}}w x

ID_MainTex	}}x Ç
)
}}Ç É
!=
}}Ñ Ü
null
}}á ã
&&
}}å é
mat
}}è í
.
}}í ì

GetTexture
}}ì ù
(
}}ù û
ShaderUtilities
}}û ≠
.
}}≠ Æ

ID_MainTex
}}Æ ∏
)
}}∏ π
!=
}}∫ º
null
}}Ω ¡
&&
}}¬ ƒ
targetMaterial
}}≈ ”
.
}}” ‘

GetTexture
}}‘ ﬁ
(
}}ﬁ ﬂ
ShaderUtilities
}}ﬂ Ó
.
}}Ó Ô

ID_MainTex
}}Ô ˘
)
}}˘ ˙
.
}}˙ ˚
GetInstanceID
}}˚ à
(
}}à â
)
}}â ä
==
}}ã ç
mat
}}é ë
.
}}ë í

GetTexture
}}í ú
(
}}ú ù
ShaderUtilities
}}ù ¨
.
}}¨ ≠

ID_MainTex
}}≠ ∑
)
}}∑ ∏
.
}}∏ π
GetInstanceID
}}π ∆
(
}}∆ «
)
}}« »
)
}}» …
{~~ 
if 
( 
! 
refs 
. 
Contains &
(& '
targetMaterial' 5
)5 6
)6 7
refs
ÄÄ 
.
ÄÄ 
Add
ÄÄ  
(
ÄÄ  !
targetMaterial
ÄÄ! /
)
ÄÄ/ 0
;
ÄÄ0 1
}
ÅÅ 
else
ÇÇ 
{
ÉÉ 
}
ÜÜ 
}
áá 
return
ââ 
refs
ââ 
.
ââ 
ToArray
ââ 
(
ââ  
)
ââ  !
;
ââ! "
}
ää 	
public
éé 
static
éé 
TMP_FontAsset
éé ##
FindMatchingFontAsset
éé$ 9
(
éé9 :
Material
éé: B
mat
ééC F
)
ééF G
{
èè 	
if
êê 
(
êê 
mat
êê 
.
êê 

GetTexture
êê 
(
êê 
ShaderUtilities
êê .
.
êê. /

ID_MainTex
êê/ 9
)
êê9 :
==
êê; =
null
êê> B
)
êêB C
return
êêD J
null
êêK O
;
êêO P
string
ìì 
[
ìì 
]
ìì 
dependentAssets
ìì $
=
ìì% &
AssetDatabase
ìì' 4
.
ìì4 5
GetDependencies
ìì5 D
(
ììD E
AssetDatabase
ììE R
.
ììR S
GetAssetPath
ììS _
(
ìì_ `
mat
ìì` c
)
ììc d
,
ììd e
false
ììf k
)
ììk l
;
ììl m
for
ïï 
(
ïï 
int
ïï 
i
ïï 
=
ïï 
$num
ïï 
;
ïï 
i
ïï 
<
ïï 
dependentAssets
ïï  /
.
ïï/ 0
Length
ïï0 6
;
ïï6 7
i
ïï8 9
++
ïï9 ;
)
ïï; <
{
ññ 
TMP_FontAsset
óó 
	fontAsset
óó '
=
óó( )
AssetDatabase
óó* 7
.
óó7 8
LoadAssetAtPath
óó8 G
<
óóG H
TMP_FontAsset
óóH U
>
óóU V
(
óóV W
dependentAssets
óóW f
[
óóf g
i
óóg h
]
óóh i
)
óói j
;
óój k
if
òò 
(
òò 
	fontAsset
òò 
!=
òò  
null
òò! %
)
òò% &
return
ôô 
	fontAsset
ôô $
;
ôô$ %
}
öö 
return
úú 
null
úú 
;
úú 
}
ùù 	
private
†† 
static
†† 
string
†† $
GetPackageRelativePath
†† 4
(
††4 5
)
††5 6
{
°° 	
string
££ 
packagePath
££ 
=
££  
Path
££! %
.
££% &
GetFullPath
££& 1
(
££1 2
$str
££2 R
)
££R S
;
££S T
if
§§ 
(
§§ 
	Directory
§§ 
.
§§ 
Exists
§§  
(
§§  !
packagePath
§§! ,
)
§§, -
)
§§- .
{
•• 
return
¶¶ 
$str
¶¶ 7
;
¶¶7 8
}
ßß 
packagePath
©© 
=
©© 
Path
©© 
.
©© 
GetFullPath
©© *
(
©©* +
$str
©©+ 6
)
©©6 7
;
©©7 8
if
™™ 
(
™™ 
	Directory
™™ 
.
™™ 
Exists
™™  
(
™™  !
packagePath
™™! ,
)
™™, -
)
™™- .
{
´´ 
if
≠≠ 
(
≠≠ 
	Directory
≠≠ 
.
≠≠ 
Exists
≠≠ $
(
≠≠$ %
packagePath
≠≠% 0
+
≠≠1 2
$str
≠≠3 l
)
≠≠l m
)
≠≠m n
{
ÆÆ 
return
ØØ 
$str
ØØ B
;
ØØB C
}
∞∞ 
if
≥≥ 
(
≥≥ 
	Directory
≥≥ 
.
≥≥ 
Exists
≥≥ $
(
≥≥$ %
packagePath
≥≥% 0
+
≥≥1 2
$str
≥≥3 Z
)
≥≥Z [
)
≥≥[ \
{
¥¥ 
return
µµ 
$str
µµ 0
;
µµ0 1
}
∂∂ 
string
ππ 
[
ππ 
]
ππ 
matchingPaths
ππ &
=
ππ' (
	Directory
ππ) 2
.
ππ2 3
GetDirectories
ππ3 A
(
ππA B
packagePath
ππB M
,
ππM N
$str
ππO ]
,
ππ] ^
SearchOption
ππ_ k
.
ππk l
AllDirectories
ππl z
)
ππz {
;
ππ{ |
packagePath
∫∫ 
=
∫∫ 
ValidateLocation
∫∫ .
(
∫∫. /
matchingPaths
∫∫/ <
,
∫∫< =
packagePath
∫∫> I
)
∫∫I J
;
∫∫J K
if
ªª 
(
ªª 
packagePath
ªª 
!=
ªª  "
null
ªª# '
)
ªª' (
return
ªª) /
packagePath
ªª0 ;
;
ªª; <
}
ºº 
return
ææ 
null
ææ 
;
ææ 
}
øø 	
private
¡¡ 
static
¡¡ 
string
¡¡  
GetPackageFullPath
¡¡ 0
(
¡¡0 1
)
¡¡1 2
{
¬¬ 	
string
ƒƒ 
packagePath
ƒƒ 
=
ƒƒ  
Path
ƒƒ! %
.
ƒƒ% &
GetFullPath
ƒƒ& 1
(
ƒƒ1 2
$str
ƒƒ2 R
)
ƒƒR S
;
ƒƒS T
if
≈≈ 
(
≈≈ 
	Directory
≈≈ 
.
≈≈ 
Exists
≈≈  
(
≈≈  !
packagePath
≈≈! ,
)
≈≈, -
)
≈≈- .
{
∆∆ 
return
«« 
packagePath
«« "
;
««" #
}
»» 
packagePath
   
=
   
Path
   
.
   
GetFullPath
   *
(
  * +
$str
  + 6
)
  6 7
;
  7 8
if
ÀÀ 
(
ÀÀ 
	Directory
ÀÀ 
.
ÀÀ 
Exists
ÀÀ  
(
ÀÀ  !
packagePath
ÀÀ! ,
)
ÀÀ, -
)
ÀÀ- .
{
ÃÃ 
if
ŒŒ 
(
ŒŒ 
	Directory
ŒŒ 
.
ŒŒ 
Exists
ŒŒ $
(
ŒŒ$ %
packagePath
ŒŒ% 0
+
ŒŒ1 2
$str
ŒŒ3 l
)
ŒŒl m
)
ŒŒm n
{
œœ 
return
–– 
packagePath
–– &
+
––' (
$str
––) Q
;
––Q R
}
—— 
if
‘‘ 
(
‘‘ 
	Directory
‘‘ 
.
‘‘ 
Exists
‘‘ $
(
‘‘$ %
packagePath
‘‘% 0
+
‘‘1 2
$str
‘‘3 Z
)
‘‘Z [
)
‘‘[ \
{
’’ 
return
÷÷ 
packagePath
÷÷ &
+
÷÷' (
$str
÷÷) ?
;
÷÷? @
}
◊◊ 
string
⁄⁄ 
[
⁄⁄ 
]
⁄⁄ 
matchingPaths
⁄⁄ &
=
⁄⁄' (
	Directory
⁄⁄) 2
.
⁄⁄2 3
GetDirectories
⁄⁄3 A
(
⁄⁄A B
packagePath
⁄⁄B M
,
⁄⁄M N
$str
⁄⁄O ]
,
⁄⁄] ^
SearchOption
⁄⁄_ k
.
⁄⁄k l
AllDirectories
⁄⁄l z
)
⁄⁄z {
;
⁄⁄{ |
string
€€ 
path
€€ 
=
€€ 
ValidateLocation
€€ .
(
€€. /
matchingPaths
€€/ <
,
€€< =
packagePath
€€> I
)
€€I J
;
€€J K
if
‹‹ 
(
‹‹ 
path
‹‹ 
!=
‹‹ 
null
‹‹  
)
‹‹  !
return
‹‹" (
packagePath
‹‹) 4
+
‹‹5 6
path
‹‹7 ;
;
‹‹; <
}
›› 
return
ﬂﬂ 
null
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
private
ËË 
static
ËË 
string
ËË 
ValidateLocation
ËË .
(
ËË. /
string
ËË/ 5
[
ËË5 6
]
ËË6 7
paths
ËË8 =
,
ËË= >
string
ËË? E
projectPath
ËËF Q
)
ËËQ R
{
ÈÈ 	
for
ÍÍ 
(
ÍÍ 
int
ÍÍ 
i
ÍÍ 
=
ÍÍ 
$num
ÍÍ 
;
ÍÍ 
i
ÍÍ 
<
ÍÍ 
paths
ÍÍ  %
.
ÍÍ% &
Length
ÍÍ& ,
;
ÍÍ, -
i
ÍÍ. /
++
ÍÍ/ 1
)
ÍÍ1 2
{
ÎÎ 
if
ÌÌ 
(
ÌÌ 
	Directory
ÌÌ 
.
ÌÌ 
Exists
ÌÌ $
(
ÌÌ$ %
paths
ÌÌ% *
[
ÌÌ* +
i
ÌÌ+ ,
]
ÌÌ, -
+
ÌÌ. /
$str
ÌÌ0 C
)
ÌÌC D
)
ÌÌD E
{
ÓÓ 

folderPath
ÔÔ 
=
ÔÔ  
paths
ÔÔ! &
[
ÔÔ& '
i
ÔÔ' (
]
ÔÔ( )
.
ÔÔ) *
Replace
ÔÔ* 1
(
ÔÔ1 2
projectPath
ÔÔ2 =
,
ÔÔ= >
$str
ÔÔ? A
)
ÔÔA B
;
ÔÔB C

folderPath
 
=
  

folderPath
! +
.
+ ,
	TrimStart
, 5
(
5 6
$char
6 :
,
: ;
$char
< ?
)
? @
;
@ A
return
ÒÒ 

folderPath
ÒÒ %
;
ÒÒ% &
}
ÚÚ 
}
ÛÛ 
return
ıı 
null
ıı 
;
ıı 
}
ˆˆ 	
public
˛˛ 
static
˛˛ 
string
˛˛ )
GetDecimalCharacterSequence
˛˛ 8
(
˛˛8 9
int
˛˛9 <
[
˛˛< =
]
˛˛= >
characterSet
˛˛? K
)
˛˛K L
{
ˇˇ 	
if
ÄÄ 
(
ÄÄ 
characterSet
ÄÄ 
==
ÄÄ 
null
ÄÄ  $
||
ÄÄ% '
characterSet
ÄÄ( 4
.
ÄÄ4 5
Length
ÄÄ5 ;
==
ÄÄ< >
$num
ÄÄ? @
)
ÄÄ@ A
return
ÅÅ 
string
ÅÅ 
.
ÅÅ 
Empty
ÅÅ #
;
ÅÅ# $
string
ÉÉ 
characterSequence
ÉÉ $
=
ÉÉ% &
string
ÉÉ' -
.
ÉÉ- .
Empty
ÉÉ. 3
;
ÉÉ3 4
int
ÑÑ 
count
ÑÑ 
=
ÑÑ 
characterSet
ÑÑ $
.
ÑÑ$ %
Length
ÑÑ% +
;
ÑÑ+ ,
int
ÖÖ 
first
ÖÖ 
=
ÖÖ 
characterSet
ÖÖ $
[
ÖÖ$ %
$num
ÖÖ% &
]
ÖÖ& '
;
ÖÖ' (
int
ÜÜ 
last
ÜÜ 
=
ÜÜ 
first
ÜÜ 
;
ÜÜ 
for
àà 
(
àà 
int
àà 
i
àà 
=
àà 
$num
àà 
;
àà 
i
àà 
<
àà 
count
àà  %
;
àà% &
i
àà' (
++
àà( *
)
àà* +
{
ââ 
if
ää 
(
ää 
characterSet
ää  
[
ää  !
i
ää! "
-
ää# $
$num
ää% &
]
ää& '
+
ää( )
$num
ää* +
==
ää, .
characterSet
ää/ ;
[
ää; <
i
ää< =
]
ää= >
)
ää> ?
{
ãã 
last
åå 
=
åå 
characterSet
åå '
[
åå' (
i
åå( )
]
åå) *
;
åå* +
}
çç 
else
éé 
{
èè 
if
êê 
(
êê 
first
êê 
==
êê  
last
êê! %
)
êê% &
characterSequence
ëë )
+=
ëë* ,
first
ëë- 2
+
ëë3 4
$str
ëë5 8
;
ëë8 9
else
íí 
characterSequence
ìì )
+=
ìì* ,
first
ìì- 2
+
ìì3 4
$str
ìì5 8
+
ìì9 :
last
ìì; ?
+
ìì@ A
$str
ììB E
;
ììE F
first
ïï 
=
ïï 
last
ïï  
=
ïï! "
characterSet
ïï# /
[
ïï/ 0
i
ïï0 1
]
ïï1 2
;
ïï2 3
}
ññ 
}
òò 
if
õõ 
(
õõ 
first
õõ 
==
õõ 
last
õõ 
)
õõ 
characterSequence
úú !
+=
úú" $
first
úú% *
;
úú* +
else
ùù 
characterSequence
ûû !
+=
ûû" $
first
ûû% *
+
ûû+ ,
$str
ûû- 0
+
ûû1 2
last
ûû3 7
;
ûû7 8
return
†† 
characterSequence
†† $
;
††$ %
}
°° 	
public
©© 
static
©© 
string
©© )
GetUnicodeCharacterSequence
©© 8
(
©©8 9
int
©©9 <
[
©©< =
]
©©= >
characterSet
©©? K
)
©©K L
{
™™ 	
if
´´ 
(
´´ 
characterSet
´´ 
==
´´ 
null
´´  $
||
´´% '
characterSet
´´( 4
.
´´4 5
Length
´´5 ;
==
´´< >
$num
´´? @
)
´´@ A
return
¨¨ 
string
¨¨ 
.
¨¨ 
Empty
¨¨ #
;
¨¨# $
string
ÆÆ 
characterSequence
ÆÆ $
=
ÆÆ% &
string
ÆÆ' -
.
ÆÆ- .
Empty
ÆÆ. 3
;
ÆÆ3 4
int
ØØ 
count
ØØ 
=
ØØ 
characterSet
ØØ $
.
ØØ$ %
Length
ØØ% +
;
ØØ+ ,
int
∞∞ 
first
∞∞ 
=
∞∞ 
characterSet
∞∞ $
[
∞∞$ %
$num
∞∞% &
]
∞∞& '
;
∞∞' (
int
±± 
last
±± 
=
±± 
first
±± 
;
±± 
for
≥≥ 
(
≥≥ 
int
≥≥ 
i
≥≥ 
=
≥≥ 
$num
≥≥ 
;
≥≥ 
i
≥≥ 
<
≥≥ 
count
≥≥  %
;
≥≥% &
i
≥≥' (
++
≥≥( *
)
≥≥* +
{
¥¥ 
if
µµ 
(
µµ 
characterSet
µµ  
[
µµ  !
i
µµ! "
-
µµ# $
$num
µµ% &
]
µµ& '
+
µµ( )
$num
µµ* +
==
µµ, .
characterSet
µµ/ ;
[
µµ; <
i
µµ< =
]
µµ= >
)
µµ> ?
{
∂∂ 
last
∑∑ 
=
∑∑ 
characterSet
∑∑ '
[
∑∑' (
i
∑∑( )
]
∑∑) *
;
∑∑* +
}
∏∏ 
else
ππ 
{
∫∫ 
if
ªª 
(
ªª 
first
ªª 
==
ªª  
last
ªª! %
)
ªª% &
characterSequence
ºº )
+=
ºº* ,
first
ºº- 2
.
ºº2 3
ToString
ºº3 ;
(
ºº; <
$str
ºº< @
)
ºº@ A
+
ººB C
$str
ººD G
;
ººG H
else
ΩΩ 
characterSequence
ææ )
+=
ææ* ,
first
ææ- 2
.
ææ2 3
ToString
ææ3 ;
(
ææ; <
$str
ææ< @
)
ææ@ A
+
ææB C
$str
ææD G
+
ææH I
last
ææJ N
.
ææN O
ToString
ææO W
(
ææW X
$str
ææX \
)
ææ\ ]
+
ææ^ _
$str
ææ` c
;
ææc d
first
¿¿ 
=
¿¿ 
last
¿¿  
=
¿¿! "
characterSet
¿¿# /
[
¿¿/ 0
i
¿¿0 1
]
¿¿1 2
;
¿¿2 3
}
¡¡ 
}
√√ 
if
∆∆ 
(
∆∆ 
first
∆∆ 
==
∆∆ 
last
∆∆ 
)
∆∆ 
characterSequence
«« !
+=
««" $
first
««% *
.
««* +
ToString
««+ 3
(
««3 4
$str
««4 8
)
««8 9
;
««9 :
else
»» 
characterSequence
…… !
+=
……" $
first
……% *
.
……* +
ToString
……+ 3
(
……3 4
$str
……4 8
)
……8 9
+
……: ;
$str
……< ?
+
……@ A
last
……B F
.
……F G
ToString
……G O
(
……O P
$str
……P T
)
……T U
;
……U V
return
ÀÀ 
characterSequence
ÀÀ $
;
ÀÀ$ %
}
ÃÃ 	
public
’’ 
static
’’ 
void
’’ 
DrawBox
’’ "
(
’’" #
Rect
’’# '
rect
’’( ,
,
’’, -
float
’’. 3
	thickness
’’4 =
,
’’= >
Color
’’? D
color
’’E J
)
’’J K
{
÷÷ 	
	EditorGUI
◊◊ 
.
◊◊ 
DrawRect
◊◊ 
(
◊◊ 
new
◊◊ "
Rect
◊◊# '
(
◊◊' (
rect
◊◊( ,
.
◊◊, -
x
◊◊- .
-
◊◊/ 0
	thickness
◊◊1 :
,
◊◊: ;
rect
◊◊< @
.
◊◊@ A
y
◊◊A B
+
◊◊C D
	thickness
◊◊E N
,
◊◊N O
rect
◊◊P T
.
◊◊T U
width
◊◊U Z
+
◊◊[ \
	thickness
◊◊] f
*
◊◊g h
$num
◊◊i j
,
◊◊j k
	thickness
◊◊l u
)
◊◊u v
,
◊◊v w
color
◊◊x }
)
◊◊} ~
;
◊◊~ 
	EditorGUI
ÿÿ 
.
ÿÿ 
DrawRect
ÿÿ 
(
ÿÿ 
new
ÿÿ "
Rect
ÿÿ# '
(
ÿÿ' (
rect
ÿÿ( ,
.
ÿÿ, -
x
ÿÿ- .
-
ÿÿ/ 0
	thickness
ÿÿ1 :
,
ÿÿ: ;
rect
ÿÿ< @
.
ÿÿ@ A
y
ÿÿA B
+
ÿÿC D
	thickness
ÿÿE N
,
ÿÿN O
	thickness
ÿÿP Y
,
ÿÿY Z
rect
ÿÿ[ _
.
ÿÿ_ `
height
ÿÿ` f
-
ÿÿg h
	thickness
ÿÿi r
*
ÿÿs t
$num
ÿÿu v
)
ÿÿv w
,
ÿÿw x
color
ÿÿy ~
)
ÿÿ~ 
;ÿÿ Ä
	EditorGUI
ŸŸ 
.
ŸŸ 
DrawRect
ŸŸ 
(
ŸŸ 
new
ŸŸ "
Rect
ŸŸ# '
(
ŸŸ' (
rect
ŸŸ( ,
.
ŸŸ, -
x
ŸŸ- .
-
ŸŸ/ 0
	thickness
ŸŸ1 :
,
ŸŸ: ;
rect
ŸŸ< @
.
ŸŸ@ A
y
ŸŸA B
+
ŸŸC D
rect
ŸŸE I
.
ŸŸI J
height
ŸŸJ P
-
ŸŸQ R
	thickness
ŸŸS \
*
ŸŸ] ^
$num
ŸŸ_ `
,
ŸŸ` a
rect
ŸŸb f
.
ŸŸf g
width
ŸŸg l
+
ŸŸm n
	thickness
ŸŸo x
*
ŸŸy z
$num
ŸŸ{ |
,
ŸŸ| }
	thicknessŸŸ~ á
)ŸŸá à
,ŸŸà â
colorŸŸä è
)ŸŸè ê
;ŸŸê ë
	EditorGUI
⁄⁄ 
.
⁄⁄ 
DrawRect
⁄⁄ 
(
⁄⁄ 
new
⁄⁄ "
Rect
⁄⁄# '
(
⁄⁄' (
rect
⁄⁄( ,
.
⁄⁄, -
x
⁄⁄- .
+
⁄⁄/ 0
rect
⁄⁄1 5
.
⁄⁄5 6
width
⁄⁄6 ;
,
⁄⁄; <
rect
⁄⁄= A
.
⁄⁄A B
y
⁄⁄B C
+
⁄⁄D E
	thickness
⁄⁄F O
,
⁄⁄O P
	thickness
⁄⁄Q Z
,
⁄⁄Z [
rect
⁄⁄\ `
.
⁄⁄` a
height
⁄⁄a g
-
⁄⁄h i
	thickness
⁄⁄j s
*
⁄⁄t u
$num
⁄⁄v w
)
⁄⁄w x
,
⁄⁄x y
color
⁄⁄z 
)⁄⁄ Ä
;⁄⁄Ä Å
}
€€ 	
public
„„ 
static
„„ 
int
„„ -
GetHorizontalAlignmentGridValue
„„ 9
(
„„9 :
int
„„: =
value
„„> C
)
„„C D
{
‰‰ 	
if
ÂÂ 
(
ÂÂ 
(
ÂÂ 
value
ÂÂ 
&
ÂÂ 
$num
ÂÂ 
)
ÂÂ 
==
ÂÂ  
$num
ÂÂ! $
)
ÂÂ$ %
return
ÊÊ 
$num
ÊÊ 
;
ÊÊ 
else
ÁÁ 
if
ÁÁ 
(
ÁÁ 
(
ÁÁ 
value
ÁÁ 
&
ÁÁ 
$num
ÁÁ !
)
ÁÁ! "
==
ÁÁ# %
$num
ÁÁ& )
)
ÁÁ) *
return
ËË 
$num
ËË 
;
ËË 
else
ÈÈ 
if
ÈÈ 
(
ÈÈ 
(
ÈÈ 
value
ÈÈ 
&
ÈÈ 
$num
ÈÈ !
)
ÈÈ! "
==
ÈÈ# %
$num
ÈÈ& )
)
ÈÈ) *
return
ÍÍ 
$num
ÍÍ 
;
ÍÍ 
else
ÎÎ 
if
ÎÎ 
(
ÎÎ 
(
ÎÎ 
value
ÎÎ 
&
ÎÎ 
$num
ÎÎ !
)
ÎÎ! "
==
ÎÎ# %
$num
ÎÎ& )
)
ÎÎ) *
return
ÏÏ 
$num
ÏÏ 
;
ÏÏ 
else
ÌÌ 
if
ÌÌ 
(
ÌÌ 
(
ÌÌ 
value
ÌÌ 
&
ÌÌ 
$num
ÌÌ "
)
ÌÌ" #
==
ÌÌ$ &
$num
ÌÌ' +
)
ÌÌ+ ,
return
ÓÓ 
$num
ÓÓ 
;
ÓÓ 
else
ÔÔ 
if
ÔÔ 
(
ÔÔ 
(
ÔÔ 
value
ÔÔ 
&
ÔÔ 
$num
ÔÔ "
)
ÔÔ" #
==
ÔÔ$ &
$num
ÔÔ' +
)
ÔÔ+ ,
return
 
$num
 
;
 
return
ÚÚ 
$num
ÚÚ 
;
ÚÚ 
}
ÛÛ 	
public
˙˙ 
static
˙˙ 
int
˙˙ +
GetVerticalAlignmentGridValue
˙˙ 7
(
˙˙7 8
int
˙˙8 ;
value
˙˙< A
)
˙˙A B
{
˚˚ 	
if
¸¸ 
(
¸¸ 
(
¸¸ 
value
¸¸ 
&
¸¸ 
$num
¸¸ 
)
¸¸ 
==
¸¸  "
$num
¸¸# (
)
¸¸( )
return
˝˝ 
$num
˝˝ 
;
˝˝ 
if
˛˛ 
(
˛˛ 
(
˛˛ 
value
˛˛ 
&
˛˛ 
$num
˛˛ 
)
˛˛ 
==
˛˛  "
$num
˛˛# (
)
˛˛( )
return
ˇˇ 
$num
ˇˇ 
;
ˇˇ 
if
ÄÄ 
(
ÄÄ 
(
ÄÄ 
value
ÄÄ 
&
ÄÄ 
$num
ÄÄ 
)
ÄÄ 
==
ÄÄ  "
$num
ÄÄ# (
)
ÄÄ( )
return
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
if
ÇÇ 
(
ÇÇ 
(
ÇÇ 
value
ÇÇ 
&
ÇÇ 
$num
ÇÇ 
)
ÇÇ 
==
ÇÇ  "
$num
ÇÇ# (
)
ÇÇ( )
return
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
if
ÑÑ 
(
ÑÑ 
(
ÑÑ 
value
ÑÑ 
&
ÑÑ 
$num
ÑÑ 
)
ÑÑ  
==
ÑÑ! #
$num
ÑÑ$ *
)
ÑÑ* +
return
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
if
ÜÜ 
(
ÜÜ 
(
ÜÜ 
value
ÜÜ 
&
ÜÜ 
$num
ÜÜ 
)
ÜÜ  
==
ÜÜ! #
$num
ÜÜ$ *
)
ÜÜ* +
return
áá 
$num
áá 
;
áá 
return
ââ 
$num
ââ 
;
ââ 
}
ää 	
public
åå 
static
åå 
void
åå 
DrawColorProperty
åå ,
(
åå, -
Rect
åå- 1
rect
åå2 6
,
åå6 7 
SerializedProperty
åå8 J
property
ååK S
)
ååS T
{
çç 	
int
éé 
	oldIndent
éé 
=
éé 
	EditorGUI
éé %
.
éé% &
indentLevel
éé& 1
;
éé1 2
	EditorGUI
èè 
.
èè 
indentLevel
èè !
=
èè" #
$num
èè$ %
;
èè% &
if
êê 
(
êê 
EditorGUIUtility
êê  
.
êê  !
wideMode
êê! )
)
êê) *
{
ëë 
	EditorGUI
íí 
.
íí 
PropertyField
íí '
(
íí' (
new
íí( +
Rect
íí, 0
(
íí0 1
rect
íí1 5
.
íí5 6
x
íí6 7
,
íí7 8
rect
íí9 =
.
íí= >
y
íí> ?
,
íí? @
$num
ííA D
,
ííD E
rect
ííF J
.
ííJ K
height
ííK Q
)
ííQ R
,
ííR S
property
ííT \
,
íí\ ]

GUIContent
íí^ h
.
ííh i
none
ííi m
)
íím n
;
íín o
rect
ìì 
.
ìì 
x
ìì 
+=
ìì 
$num
ìì 
;
ìì 
rect
îî 
.
îî 
width
îî 
=
îî 
Mathf
îî "
.
îî" #
Min
îî# &
(
îî& '
$num
îî' +
,
îî+ ,
rect
îî- 1
.
îî1 2
width
îî2 7
-
îî8 9
$num
îî: =
)
îî= >
;
îî> ?
}
ïï 
else
ññ 
{
óó 
rect
òò 
.
òò 
height
òò 
/=
òò 
$num
òò !
;
òò! "
rect
ôô 
.
ôô 
width
ôô 
=
ôô 
Mathf
ôô "
.
ôô" #
Min
ôô# &
(
ôô& '
$num
ôô' +
,
ôô+ ,
rect
ôô- 1
.
ôô1 2
width
ôô2 7
-
ôô8 9
$num
ôô: <
)
ôô< =
;
ôô= >
	EditorGUI
öö 
.
öö 
PropertyField
öö '
(
öö' (
rect
öö( ,
,
öö, -
property
öö. 6
,
öö6 7

GUIContent
öö8 B
.
ööB C
none
ööC G
)
ööG H
;
ööH I
rect
õõ 
.
õõ 
y
õõ 
+=
õõ 
rect
õõ 
.
õõ 
height
õõ %
;
õõ% &
}
úú 
	EditorGUI
ûû 
.
ûû 
BeginChangeCheck
ûû &
(
ûû& '
)
ûû' (
;
ûû( )
string
üü 
colorString
üü 
=
üü  
	EditorGUI
üü! *
.
üü* +
	TextField
üü+ 4
(
üü4 5
rect
üü5 9
,
üü9 :
string
üü; A
.
üüA B
Format
üüB H
(
üüH I
$str
üüI O
,
üüO P
ColorUtility
üüQ ]
.
üü] ^
ToHtmlStringRGBA
üü^ n
(
üün o
property
üüo w
.
üüw x

colorValueüüx Ç
)üüÇ É
)üüÉ Ñ
)üüÑ Ö
;üüÖ Ü
if
†† 
(
†† 
	EditorGUI
†† 
.
†† 
EndChangeCheck
†† (
(
††( )
)
††) *
)
††* +
{
°° 
Color
¢¢ 
color
¢¢ 
;
¢¢ 
if
££ 
(
££ 
ColorUtility
££  
.
££  ! 
TryParseHtmlString
££! 3
(
££3 4
colorString
££4 ?
,
££? @
out
££A D
color
££E J
)
££J K
)
££K L
{
§§ 
property
•• 
.
•• 

colorValue
•• '
=
••( )
color
••* /
;
••/ 0
}
¶¶ 
}
ßß 
	EditorGUI
®® 
.
®® 
indentLevel
®® !
=
®®" #
	oldIndent
®®$ -
;
®®- .
}
©© 	
public
´´ 
static
´´ 
bool
´´ 
EditorToggle
´´ '
(
´´' (
Rect
´´( ,
position
´´- 5
,
´´5 6
bool
´´7 ;
value
´´< A
,
´´A B

GUIContent
´´C M
content
´´N U
,
´´U V
GUIStyle
´´W _
style
´´` e
)
´´e f
{
¨¨ 	
var
≠≠ 
id
≠≠ 
=
≠≠ 

GUIUtility
≠≠ 
.
≠≠  
GetControlID
≠≠  ,
(
≠≠, -
content
≠≠- 4
,
≠≠4 5
	FocusType
≠≠6 ?
.
≠≠? @
Keyboard
≠≠@ H
,
≠≠H I
position
≠≠J R
)
≠≠R S
;
≠≠S T
var
ÆÆ 
evt
ÆÆ 
=
ÆÆ 
Event
ÆÆ 
.
ÆÆ 
current
ÆÆ #
;
ÆÆ# $
if
±± 
(
±± 

GUIUtility
±± 
.
±± 
keyboardControl
±± *
==
±±+ -
id
±±. 0
&&
±±1 3
evt
±±4 7
.
±±7 8
type
±±8 <
==
±±= ?
	EventType
±±@ I
.
±±I J
KeyDown
±±J Q
&&
±±R T
(
±±U V
evt
±±V Y
.
±±Y Z
keyCode
±±Z a
==
±±b d
KeyCode
±±e l
.
±±l m
Space
±±m r
||
±±s u
evt
±±v y
.
±±y z
keyCode±±z Å
==±±Ç Ñ
KeyCode±±Ö å
.±±å ç
Return±±ç ì
||±±î ñ
evt±±ó ö
.±±ö õ
keyCode±±õ ¢
==±±£ •
KeyCode±±¶ ≠
.±±≠ Æ
KeypadEnter±±Æ π
)±±π ∫
)±±∫ ª
{
≤≤ 
value
≥≥ 
=
≥≥ 
!
≥≥ 
value
≥≥ 
;
≥≥ 
evt
¥¥ 
.
¥¥ 
Use
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥ 
GUI
µµ 
.
µµ 
changed
µµ 
=
µµ 
true
µµ "
;
µµ" #
}
∂∂ 
if
∏∏ 
(
∏∏ 
evt
∏∏ 
.
∏∏ 
type
∏∏ 
==
∏∏ 
	EventType
∏∏ %
.
∏∏% &
	MouseDown
∏∏& /
&&
∏∏0 2
position
∏∏3 ;
.
∏∏; <
Contains
∏∏< D
(
∏∏D E
Event
∏∏E J
.
∏∏J K
current
∏∏K R
.
∏∏R S
mousePosition
∏∏S `
)
∏∏` a
)
∏∏a b
{
ππ 

GUIUtility
∫∫ 
.
∫∫ 
keyboardControl
∫∫ *
=
∫∫+ ,
id
∫∫- /
;
∫∫/ 0
EditorGUIUtility
ªª  
.
ªª  !
editingTextField
ªª! 1
=
ªª2 3
false
ªª4 9
;
ªª9 :
HandleUtility
ºº 
.
ºº 
Repaint
ºº %
(
ºº% &
)
ºº& '
;
ºº' (
}
ΩΩ 
return
øø 
GUI
øø 
.
øø 
Toggle
øø 
(
øø 
position
øø &
,
øø& '
id
øø( *
,
øø* +
value
øø, 1
,
øø1 2
content
øø3 :
,
øø: ;
style
øø< A
)
øøA B
;
øøB C
}
¿¿ 	
}
¬¬ 
}√√ Ø%
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_SubMesh_Editor.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
[ 
CustomEditor 
( 
typeof 
( 
TMP_SubMesh $
)$ %
)% &
,& '"
CanEditMultipleObjects( >
]> ?
public 

class 
TMP_SubMesh_Editor #
:$ %
Editor& ,
{		 
private

 
struct

 
	m_foldout

  
{ 	
public 
static 
bool 
fontSettings +
=, -
true. 2
;2 3
} 	
private 
SerializedProperty "
fontAsset_prop# 1
;1 2
private 
SerializedProperty "
spriteAsset_prop# 3
;3 4
private 
TMP_SubMesh 
m_SubMeshComponent .
;. /
private 
Renderer 

m_Renderer #
;# $
private 
string 
[ 
] 
m_SortingLayerNames ,
;, -
public 
void 
OnEnable 
( 
) 
{ 	
fontAsset_prop 
= 
serializedObject -
.- .
FindProperty. :
(: ;
$str; H
)H I
;I J
spriteAsset_prop 
= 
serializedObject /
./ 0
FindProperty0 <
(< =
$str= L
)L M
;M N
m_SubMeshComponent   
=    
target  ! '
as  ( *
TMP_SubMesh  + 6
;  6 7

m_Renderer"" 
="" 
m_SubMeshComponent"" +
.""+ ,
renderer"", 4
;""4 5
m_SortingLayerNames$$ 
=$$  !
SortingLayerHelper$$" 4
.$$4 5
sortingLayerNames$$5 F
;$$F G
}%% 	
public(( 
override(( 
void(( 
OnInspectorGUI(( +
(((+ ,
)((, -
{)) 	
	EditorGUI** 
.** 
indentLevel** !
=**" #
$num**$ %
;**% &
GUI,, 
.,, 
enabled,, 
=,, 
false,, 
;,,  
EditorGUILayout-- 
.-- 
PropertyField-- )
(--) *
fontAsset_prop--* 8
)--8 9
;--9 :
EditorGUILayout.. 
... 
PropertyField.. )
(..) *
spriteAsset_prop..* :
)..: ;
;..; <
GUI// 
.// 
enabled// 
=// 
true// 
;// 
	EditorGUI11 
.11 
BeginChangeCheck11 &
(11& '
)11' (
;11( )
string44 
oldName44 
=44 
SortingLayer44 )
.44) *
IDToName44* 2
(442 3

m_Renderer443 =
.44= >
sortingLayerID44> L
)44L M
;44M N
int77 
oldLayerIndex77 
=77 
System77  &
.77& '
Array77' ,
.77, -
IndexOf77- 4
(774 5
m_SortingLayerNames775 H
,77H I
oldName77J Q
)77Q R
;77R S
int:: 
newLayerIndex:: 
=:: 
EditorGUILayout::  /
.::/ 0
Popup::0 5
(::5 6
$str::6 E
,::E F
oldLayerIndex::G T
,::T U
m_SortingLayerNames::V i
)::i j
;::j k
if== 
(== 
newLayerIndex== 
!===  
oldLayerIndex==! .
)==. /

m_Renderer>> 
.>> 
sortingLayerID>> )
=>>* +
SortingLayer>>, 8
.>>8 9
NameToID>>9 A
(>>A B
m_SortingLayerNames>>B U
[>>U V
newLayerIndex>>V c
]>>c d
)>>d e
;>>e f
intAA  
newSortingLayerOrderAA $
=AA% &
EditorGUILayoutAA' 6
.AA6 7
IntFieldAA7 ?
(AA? @
$strAA@ P
,AAP Q

m_RendererAAR \
.AA\ ]
sortingOrderAA] i
)AAi j
;AAj k
ifBB 
(BB  
newSortingLayerOrderBB $
!=BB% '

m_RendererBB( 2
.BB2 3
sortingOrderBB3 ?
)BB? @

m_RendererCC 
.CC 
sortingOrderCC '
=CC( ) 
newSortingLayerOrderCC* >
;CC> ?
}EE 	
}FF 
}GG È8
ûD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\GlyphMetricsPropertyDrawer.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
[

  
CustomPropertyDrawer

 
(

 
typeof

  
(

  !
GlyphMetrics

! -
)

- .
)

. /
]

/ 0
public 

class &
GlyphMetricsPropertyDrawer +
:, -
PropertyDrawer. <
{ 
public 
override 
void 
OnGUI "
(" #
Rect# '
position( 0
,0 1
SerializedProperty2 D
propertyE M
,M N

GUIContentO Y
labelZ _
)_ `
{ 	
SerializedProperty 

prop_Width )
=* +
property, 4
.4 5 
FindPropertyRelative5 I
(I J
$strJ S
)S T
;T U
SerializedProperty 
prop_Height *
=+ ,
property- 5
.5 6 
FindPropertyRelative6 J
(J K
$strK U
)U V
;V W
SerializedProperty 
prop_HoriBearingX 0
=1 2
property3 ;
.; < 
FindPropertyRelative< P
(P Q
$strQ g
)g h
;h i
SerializedProperty 
prop_HoriBearingY 0
=1 2
property3 ;
.; < 
FindPropertyRelative< P
(P Q
$strQ g
)g h
;h i
SerializedProperty 
prop_HoriAdvance /
=0 1
property2 :
.: ; 
FindPropertyRelative; O
(O P
$strP e
)e f
;f g
Rect 
rect 
= 
new 
Rect  
(  !
position! )
.) *
x* +
,+ ,
position- 5
.5 6
y6 7
,7 8
position9 A
.A B
widthB G
,G H
$numI K
)K L
;L M
	EditorGUI 
. 

LabelField  
(  !
new! $
Rect% )
() *
rect* .
.. /
x/ 0
,0 1
rect2 6
.6 7
y7 8
-9 :
$num; ?
,? @
rectA E
.E F
widthF K
,K L
$numM O
)O P
,P Q
newR U

GUIContentV `
(` a
$stra p
)p q
)q r
;r s
EditorGUIUtility 
. 

labelWidth '
=( )
$num* -
;- .
EditorGUIUtility 
. 

fieldWidth '
=( )
$num* -
;- .
float 
width 
= 
( 
rect 
.  
width  %
-& '
$num( +
)+ ,
/- .
$num/ 0
;0 1
	EditorGUI 
. 
PropertyField #
(# $
new$ '
Rect( ,
(, -
rect- 1
.1 2
x2 3
+4 5
width6 ;
*< =
$num> ?
,? @
rectA E
.E F
yF G
+H I
$numJ L
,L M
widthN S
-T U
$numV X
,X Y
$numZ \
)\ ]
,] ^

prop_Width_ i
,i j
newk n

GUIContento y
(y z
$strz ~
)~ 
)	 Ä
;
Ä Å
	EditorGUI   
.   
PropertyField   #
(  # $
new  $ '
Rect  ( ,
(  , -
rect  - 1
.  1 2
x  2 3
+  4 5
width  6 ;
*  < =
$num  > ?
,  ? @
rect  A E
.  E F
y  F G
+  H I
$num  J L
,  L M
width  N S
-  T U
$num  V X
,  X Y
$num  Z \
)  \ ]
,  ] ^
prop_Height  _ j
,  j k
new  l o

GUIContent  p z
(  z {
$str  { 
)	   Ä
)
  Ä Å
;
  Å Ç
width$$ 
=$$ 
($$ 
rect$$ 
.$$ 
width$$ 
-$$  !
$num$$" %
)$$% &
/$$' (
$num$$) *
;$$* +
	EditorGUI%% 
.%% 
BeginChangeCheck%% &
(%%& '
)%%' (
;%%( )
	EditorGUI&& 
.&& 
PropertyField&& #
(&&# $
new&&$ '
Rect&&( ,
(&&, -
rect&&- 1
.&&1 2
x&&2 3
+&&4 5
width&&6 ;
*&&< =
$num&&> ?
,&&? @
rect&&A E
.&&E F
y&&F G
+&&H I
$num&&J L
,&&L M
width&&N S
-&&T U
$num&&V X
,&&X Y
$num&&Z \
)&&\ ]
,&&] ^
prop_HoriBearingX&&_ p
,&&p q
new&&r u

GUIContent	&&v Ä
(
&&Ä Å
$str
&&Å Ü
)
&&Ü á
)
&&á à
;
&&à â
	EditorGUI'' 
.'' 
PropertyField'' #
(''# $
new''$ '
Rect''( ,
('', -
rect''- 1
.''1 2
x''2 3
+''4 5
width''6 ;
*''< =
$num''> ?
,''? @
rect''A E
.''E F
y''F G
+''H I
$num''J L
,''L M
width''N S
-''T U
$num''V X
,''X Y
$num''Z \
)''\ ]
,''] ^
prop_HoriBearingY''_ p
,''p q
new''r u

GUIContent	''v Ä
(
''Ä Å
$str
''Å Ü
)
''Ü á
)
''á à
;
''à â
	EditorGUI(( 
.(( 
PropertyField(( #
(((# $
new(($ '
Rect((( ,
(((, -
rect((- 1
.((1 2
x((2 3
+((4 5
width((6 ;
*((< =
$num((> ?
,((? @
rect((A E
.((E F
y((F G
+((H I
$num((J L
,((L M
width((N S
-((T U
$num((V X
,((X Y
$num((Z \
)((\ ]
,((] ^
prop_HoriAdvance((_ o
,((o p
new((q t

GUIContent((u 
(	(( Ä
$str
((Ä Ö
)
((Ö Ü
)
((Ü á
;
((á à
if)) 
()) 
	EditorGUI)) 
.)) 
EndChangeCheck)) (
())( )
)))) *
)))* +
{** 
},, 
}-- 	
public// 
override// 
float// 
GetPropertyHeight// /
(/// 0
SerializedProperty//0 B
property//C K
,//K L

GUIContent//M W
label//X ]
)//] ^
{00 	
return11 
$num11 
;11 
}22 	
}44 
}55 ÚK
ïD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_EditorPanelUI.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
[ 
CustomEditor 
( 
typeof 
( 
TextMeshProUGUI (
)( )
,) *
true+ /
)/ 0
,0 1"
CanEditMultipleObjects2 H
]H I
public		 

class		 
TMP_EditorPanelUI		 "
:		# $
TMP_BaseEditorPanel		% 8
{

 
static 
readonly 

GUIContent " 
k_RaycastTargetLabel# 7
=8 9
new: =

GUIContent> H
(H I
$strI Y
,Y Z
$str	[ ô
)
ô ö
;
ö õ
static 
readonly 

GUIContent "
k_MaskableLabel# 2
=3 4
new5 8

GUIContent9 C
(C D
$strD N
,N O
$str	P å
)
å ç
;
ç é
SerializedProperty 
m_RaycastTargetProp .
;. /
private 
SerializedProperty "
m_MaskableProp# 1
;1 2
	protected 
override 
void 
OnEnable  (
(( )
)) *
{ 	
base 
. 
OnEnable 
( 
) 
; 
m_RaycastTargetProp 
=  !
serializedObject" 2
.2 3
FindProperty3 ?
(? @
$str@ Q
)Q R
;R S
m_MaskableProp 
= 
serializedObject -
.- .
FindProperty. :
(: ;
$str; G
)G H
;H I
} 	
	protected 
override 
void 
DrawExtraSettings  1
(1 2
)2 3
{ 	
Rect 
rect 
= 
EditorGUILayout '
.' (
GetControlRect( 6
(6 7
false7 <
,< =
$num> @
)@ A
;A B
if 
( 
GUI 
. 
Button 
( 
rect 
,  
new! $

GUIContent% /
(/ 0
$str0 G
)G H
,H I
TMP_UIStyleManagerJ \
.\ ]
sectionHeader] j
)j k
)k l
Foldout 
. 
extraSettings %
=& '
!( )
Foldout) 0
.0 1
extraSettings1 >
;> ?
GUI 
. 
Label 
( 
rect 
, 
( 
Foldout $
.$ %
extraSettings% 2
?3 4
k_UiStateLabel5 C
[C D
$numD E
]E F
:G H
k_UiStateLabelI W
[W X
$numX Y
]Y Z
)Z [
,[ \
TMP_UIStyleManager] o
.o p

rightLabelp z
)z {
;{ |
if   
(   
Foldout   
.   
extraSettings   %
)  % &
{!! 
DrawMargins$$ 
($$ 
)$$ 
;$$ 
DrawGeometrySorting&& #
(&&# $
)&&$ %
;&&% &'
DrawIsTextObjectScaleStatic(( +
(((+ ,
)((, -
;((- .
DrawRichText** 
(** 
)** 
;** 
DrawRaycastTarget,, !
(,,! "
),," #
;,,# $
DrawMaskable.. 
(.. 
).. 
;.. 
DrawParsing00 
(00 
)00 
;00 
DrawSpriteAsset22 
(22  
)22  !
;22! "
DrawStyleSheet44 
(44 
)44  
;44  !
DrawKerning66 
(66 
)66 
;66 
DrawPadding88 
(88 
)88 
;88 
};; 
}<< 	
	protected>> 
void>> 
DrawRaycastTarget>> (
(>>( )
)>>) *
{?? 	
	EditorGUI@@ 
.@@ 
BeginChangeCheck@@ &
(@@& '
)@@' (
;@@( )
EditorGUILayoutAA 
.AA 
PropertyFieldAA )
(AA) *
m_RaycastTargetPropAA* =
,AA= > 
k_RaycastTargetLabelAA? S
)AAS T
;AAT U
ifBB 
(BB 
	EditorGUIBB 
.BB 
EndChangeCheckBB (
(BB( )
)BB) *
)BB* +
{CC 
GraphicEE 
[EE 
]EE 
graphicComponentsEE +
=EE, -
m_TextComponentEE. =
.EE= >#
GetComponentsInChildrenEE> U
<EEU V
GraphicEEV ]
>EE] ^
(EE^ _
)EE_ `
;EE` a
forFF 
(FF 
intFF 
iFF 
=FF 
$numFF 
;FF 
iFF  !
<FF" #
graphicComponentsFF$ 5
.FF5 6
LengthFF6 <
;FF< =
iFF> ?
++FF? A
)FFA B
graphicComponentsGG %
[GG% &
iGG& '
]GG' (
.GG( )
raycastTargetGG) 6
=GG7 8
m_RaycastTargetPropGG9 L
.GGL M
	boolValueGGM V
;GGV W#
m_HavePropertiesChangedII '
=II( )
trueII* .
;II. /
}JJ 
}KK 	
	protectedMM 
voidMM 
DrawMaskableMM #
(MM# $
)MM$ %
{NN 	
	EditorGUIOO 
.OO 
BeginChangeCheckOO &
(OO& '
)OO' (
;OO( )
EditorGUILayoutPP 
.PP 
PropertyFieldPP )
(PP) *
m_MaskablePropPP* 8
,PP8 9
k_MaskableLabelPP: I
)PPI J
;PPJ K
ifQQ 
(QQ 
	EditorGUIQQ 
.QQ 
EndChangeCheckQQ (
(QQ( )
)QQ) *
)QQ* +
{RR 
m_TextComponentSS 
.SS  
maskableSS  (
=SS) *
m_MaskablePropSS+ 9
.SS9 :
	boolValueSS: C
;SSC D
MaskableGraphicVV 
[VV  
]VV  !
maskableGraphicsVV" 2
=VV3 4
m_TextComponentVV5 D
.VVD E#
GetComponentsInChildrenVVE \
<VV\ ]
MaskableGraphicVV] l
>VVl m
(VVm n
)VVn o
;VVo p
forWW 
(WW 
intWW 
iWW 
=WW 
$numWW 
;WW 
iWW  !
<WW" #
maskableGraphicsWW$ 4
.WW4 5
LengthWW5 ;
;WW; <
iWW= >
++WW> @
)WW@ A
maskableGraphicsXX $
[XX$ %
iXX% &
]XX& '
.XX' (
maskableXX( 0
=XX1 2
m_MaskablePropXX3 A
.XXA B
	boolValueXXB K
;XXK L#
m_HavePropertiesChangedZZ '
=ZZ( )
trueZZ* .
;ZZ. /
}[[ 
}\\ 	
	protected__ 
override__ 
bool__ 
IsMixSelectionTypes__  3
(__3 4
)__4 5
{`` 	

GameObjectaa 
[aa 
]aa 
objectsaa  
=aa! "
	Selectionaa# ,
.aa, -
gameObjectsaa- 8
;aa8 9
ifbb 
(bb 
objectsbb 
.bb 
Lengthbb 
>bb  
$numbb! "
)bb" #
{cc 
fordd 
(dd 
intdd 
idd 
=dd 
$numdd 
;dd 
idd  !
<dd" #
objectsdd$ +
.dd+ ,
Lengthdd, 2
;dd2 3
idd4 5
++dd5 7
)dd7 8
{ee 
ifff 
(ff 	
objectsff	 
[ff 
iff 
]ff 
.ff 
GetComponentff  
<ff  !
TextMeshProUGUIff! 0
>ff0 1
(ff1 2
)ff2 3
==ff4 6
nullff7 ;
)ff; <
returngg 
truegg #
;gg# $
}hh 
}ii 
returnjj 
falsejj 
;jj 
}kk 	
	protectedll 
overridell 
voidll 

OnUndoRedoll  *
(ll* +
)ll+ ,
{mm 	
intnn 
undoEventIdnn 
=nn 
Undonn "
.nn" #
GetCurrentGroupnn# 2
(nn2 3
)nn3 4
;nn4 5
intoo 
lastUndoEventIdoo 
=oo  !
	s_EventIdoo" +
;oo+ ,
ifqq 
(qq 
undoEventIdqq 
!=qq 
lastUndoEventIdqq .
)qq. /
{rr 
forss 
(ss 
intss 
iss 
=ss 
$numss 
;ss 
iss  !
<ss" #
targetsss$ +
.ss+ ,
Lengthss, 2
;ss2 3
iss4 5
++ss5 7
)ss7 8
{tt 
TMPro_EventManagervv &
.vv& '0
$ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGEDvv' K
(vvK L
truevvL P
,vvP Q
targetsvvR Y
[vvY Z
ivvZ [
]vv[ \
asvv] _
TextMeshProUGUIvv` o
)vvo p
;vvp q
	s_EventIdww 
=ww 
undoEventIdww  +
;ww+ ,
}xx 
}yy 
}zz 	
}{{ 
}|| ‰ù
ïD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_BaseShaderGUI.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
public 

abstract 
class 
TMP_BaseShaderGUI +
:, -
	ShaderGUI. 7
{ 
	protected 
class 
ShaderFeature %
{ 	
public 
string 
	undoLabel #
;# $
public 

GUIContent 
label #
;# $
public 

GUIContent 
[ 
] 
keywordLabels  -
;- .
public 
string 
[ 
] 
keywords $
;$ %
int 
m_State 
; 
public 
bool 
Active 
{ 
get 
{ 
return 
m_State $
>=% '
$num( )
;) *
}+ ,
} 
public 
int 
State 
{ 
get   
{   
return   
m_State   $
;  $ %
}  & '
}!! 
public## 
void## 
	ReadState## !
(##! "
Material##" *
material##+ 3
)##3 4
{$$ 
for%% 
(%% 
int%% 
i%% 
=%% 
$num%% 
;%% 
i%%  !
<%%" #
keywords%%$ ,
.%%, -
Length%%- 3
;%%3 4
i%%5 6
++%%6 8
)%%8 9
{&& 
if'' 
('' 
material''  
.''  !
IsKeywordEnabled''! 1
(''1 2
keywords''2 :
['': ;
i''; <
]''< =
)''= >
)''> ?
{(( 
m_State)) 
=))  !
i))" #
;))# $
return** 
;** 
}++ 
},, 
m_State.. 
=.. 
-.. 
$num.. 
;.. 
}// 
public11 
void11 
	SetActive11 !
(11! "
bool11" &
active11' -
,11- .
Material11/ 7
material118 @
)11@ A
{22 
m_State33 
=33 
active33  
?33! "
$num33# $
:33% &
-33' (
$num33( )
;33) *
SetStateKeywords44  
(44  !
material44! )
)44) *
;44* +
}55 
public77 
void77 
DoPopup77 
(77  
MaterialEditor77  .
editor77/ 5
,775 6
Material777 ?
material77@ H
)77H I
{88 
	EditorGUI99 
.99 
BeginChangeCheck99 *
(99* +
)99+ ,
;99, -
int:: 
	selection:: 
=:: 
EditorGUILayout::  /
.::/ 0
Popup::0 5
(::5 6
label::6 ;
,::; <
m_State::= D
+::E F
$num::G H
,::H I
keywordLabels::J W
)::W X
;::X Y
if;; 
(;; 
	EditorGUI;; 
.;; 
EndChangeCheck;; ,
(;;, -
);;- .
);;. /
{<< 
m_State== 
=== 
	selection== '
-==( )
$num==* +
;==+ ,
editor>> 
.>> &
RegisterPropertyChangeUndo>> 5
(>>5 6
	undoLabel>>6 ?
)>>? @
;>>@ A
SetStateKeywords?? $
(??$ %
material??% -
)??- .
;??. /
}@@ 
}AA 
voidCC 
SetStateKeywordsCC !
(CC! "
MaterialCC" *
materialCC+ 3
)CC3 4
{DD 
forEE 
(EE 
intEE 
iEE 
=EE 
$numEE 
;EE 
iEE  !
<EE" #
keywordsEE$ ,
.EE, -
LengthEE- 3
;EE3 4
iEE5 6
++EE6 8
)EE8 9
{FF 
ifGG 
(GG 
iGG 
==GG 
m_StateGG $
)GG$ %
{HH 
materialII  
.II  !
EnableKeywordII! .
(II. /
keywordsII/ 7
[II7 8
iII8 9
]II9 :
)II: ;
;II; <
}JJ 
elseKK 
{LL 
materialMM  
.MM  !
DisableKeywordMM! /
(MM/ 0
keywordsMM0 8
[MM8 9
iMM9 :
]MM: ;
)MM; <
;MM< =
}NN 
}OO 
}PP 
}QQ 	
staticSS 

GUIContentSS 
s_TempLabelSS %
=SS& '
newSS( +

GUIContentSS, 6
(SS6 7
)SS7 8
;SS8 9
	protectedUU 
staticUU 
boolUU 
s_DebugExtendedUU -
;UU- .
staticWW 
intWW 
s_UndoRedoCountWW "
,WW" ##
s_LastSeenUndoRedoCountWW$ ;
;WW; <
staticYY 
floatYY 
[YY 
]YY 
[YY 
]YY 
s_TempFloatsYY %
=YY& '
{ZZ 	
null[[ 
,[[ 
new[[ 
float[[ 
[[[ 
$num[[ 
][[ 
,[[ 
new[[  #
float[[$ )
[[[) *
$num[[* +
][[+ ,
,[[, -
new[[. 1
float[[2 7
[[[7 8
$num[[8 9
][[9 :
,[[: ;
new[[< ?
float[[@ E
[[[E F
$num[[F G
][[G H
}\\ 	
;\\	 

	protected^^ 
static^^ 

GUIContent^^ #
[^^# $
]^^$ %
s_XywhVectorLabels^^& 8
=^^9 :
{__ 	
new`` 

GUIContent`` 
(`` 
$str`` 
)`` 
,``  
newaa 

GUIContentaa 
(aa 
$straa 
)aa 
,aa  
newbb 

GUIContentbb 
(bb 
$strbb 
,bb 
$strbb  '
)bb' (
,bb( )
newcc 

GUIContentcc 
(cc 
$strcc 
,cc 
$strcc  (
)cc( )
}dd 	
;dd	 

	protectedff 
staticff 

GUIContentff #
[ff# $
]ff$ %
s_LbrtVectorLabelsff& 8
=ff9 :
{gg 	
newhh 

GUIContenthh 
(hh 
$strhh 
,hh 
$strhh  &
)hh& '
,hh' (
newii 

GUIContentii 
(ii 
$strii 
,ii 
$strii  (
)ii( )
,ii) *
newjj 

GUIContentjj 
(jj 
$strjj 
,jj 
$strjj  '
)jj' (
,jj( )
newkk 

GUIContentkk 
(kk 
$strkk 
,kk 
$strkk  %
)kk% &
}ll 	
;ll	 

	protectednn 
staticnn 

GUIContentnn #
[nn# $
]nn$ %
s_CullingTypeLabelsnn& 9
=nn: ;
{oo 	
newpp 

GUIContentpp 
(pp 
$strpp  
)pp  !
,pp! "
newqq 

GUIContentqq 
(qq 
$strqq "
)qq" #
,qq# $
newrr 

GUIContentrr 
(rr 
$strrr !
)rr! "
}ss 	
;ss	 

staticuu 
TMP_BaseShaderGUIuu  
(uu  !
)uu! "
{vv 	
Undoxx 
.xx 
undoRedoPerformedxx "
+=xx# %
(xx& '
)xx' (
=>xx) +
s_UndoRedoCountxx, ;
+=xx< >
$numxx? @
;xx@ A
}yy 	
bool{{ 

m_IsNewGUI{{ 
={{ 
true{{ 
;{{ 
float}} 
m_DragAndDropMinY}} 
;}}  
	protected 
MaterialEditor  
m_Editor! )
;) *
	protected
ÅÅ 
Material
ÅÅ 

m_Material
ÅÅ %
;
ÅÅ% &
	protected
ÉÉ 
MaterialProperty
ÉÉ "
[
ÉÉ" #
]
ÉÉ# $
m_Properties
ÉÉ% 1
;
ÉÉ1 2
void
ÖÖ 

PrepareGUI
ÖÖ 
(
ÖÖ 
)
ÖÖ 
{
ÜÜ 	

m_IsNewGUI
áá 
=
áá 
false
áá 
;
áá 
ShaderUtilities
àà 
.
àà "
GetShaderPropertyIDs
àà 0
(
àà0 1
)
àà1 2
;
àà2 3
if
åå 
(
åå %
s_LastSeenUndoRedoCount
åå '
!=
åå( *
s_UndoRedoCount
åå+ :
)
åå: ;
{
çç  
TMPro_EventManager
êê "
.
êê" #*
ON_MATERIAL_PROPERTY_CHANGED
êê# ?
(
êê? @
true
êê@ D
,
êêD E

m_Material
êêF P
as
êêQ S
Material
êêT \
)
êê\ ]
;
êê] ^
}
ëë %
s_LastSeenUndoRedoCount
ìì #
=
ìì$ %
s_UndoRedoCount
ìì& 5
;
ìì5 6
}
îî 	
public
ññ 
override
ññ 
void
ññ 
OnGUI
ññ "
(
ññ" #
MaterialEditor
ññ# 1
materialEditor
ññ2 @
,
ññ@ A
MaterialProperty
ññB R
[
ññR S
]
ññS T

properties
ññU _
)
ññ_ `
{
óó 	
m_Editor
òò 
=
òò 
materialEditor
òò %
;
òò% &

m_Material
ôô 
=
ôô 
materialEditor
ôô '
.
ôô' (
target
ôô( .
as
ôô/ 1
Material
ôô2 :
;
ôô: ;
this
öö 
.
öö 
m_Properties
öö 
=
öö 

properties
öö  *
;
öö* +
if
úú 
(
úú 

m_IsNewGUI
úú 
)
úú 
{
ùù 

PrepareGUI
ûû 
(
ûû 
)
ûû 
;
ûû 
}
üü  
DoDragAndDropBegin
°° 
(
°° 
)
°°  
;
°°  !
	EditorGUI
¢¢ 
.
¢¢ 
BeginChangeCheck
¢¢ &
(
¢¢& '
)
¢¢' (
;
¢¢( )
DoGUI
££ 
(
££ 
)
££ 
;
££ 
if
§§ 
(
§§ 
	EditorGUI
§§ 
.
§§ 
EndChangeCheck
§§ (
(
§§( )
)
§§) *
)
§§* +
{
••  
TMPro_EventManager
¶¶ "
.
¶¶" #*
ON_MATERIAL_PROPERTY_CHANGED
¶¶# ?
(
¶¶? @
true
¶¶@ D
,
¶¶D E

m_Material
¶¶F P
)
¶¶P Q
;
¶¶Q R
}
ßß 
DoDragAndDropEnd
©© 
(
©© 
)
©© 
;
©© 
}
™™ 	
	protected
≠≠ 
abstract
≠≠ 
void
≠≠ 
DoGUI
≠≠  %
(
≠≠% &
)
≠≠& '
;
≠≠' (
static
ØØ 
string
ØØ 
[
ØØ 
]
ØØ 
s_PanelStateLabel
ØØ )
=
ØØ* +
new
ØØ, /
string
ØØ0 6
[
ØØ6 7
]
ØØ7 8
{
ØØ9 :
$str
ØØ; [
,
ØØ[ \
$str
ØØ] |
}
ØØ} ~
;
ØØ~ 
	protected
±± 
bool
±± 

BeginPanel
±± !
(
±±! "
string
±±" (
panel
±±) .
,
±±. /
bool
±±0 4
expanded
±±5 =
)
±±= >
{
≤≤ 	
	EditorGUI
≥≥ 
.
≥≥ 
indentLevel
≥≥ !
=
≥≥" #
$num
≥≥$ %
;
≥≥% &
EditorGUILayout
µµ 
.
µµ 
BeginVertical
µµ )
(
µµ) *
EditorStyles
µµ* 6
.
µµ6 7
helpBox
µµ7 >
)
µµ> ?
;
µµ? @
Rect
∂∂ 
r
∂∂ 
=
∂∂ 
	EditorGUI
∂∂ 
.
∂∂ 
IndentedRect
∂∂ +
(
∂∂+ ,
GUILayoutUtility
∂∂, <
.
∂∂< =
GetRect
∂∂= D
(
∂∂D E
$num
∂∂E G
,
∂∂G H
$num
∂∂I K
)
∂∂K L
)
∂∂L M
;
∂∂M N
r
∑∑ 
.
∑∑ 
x
∑∑ 
+=
∑∑ 
$num
∑∑ 
;
∑∑ 
r
∏∏ 
.
∏∏ 
width
∏∏ 
+=
∏∏ 
$num
∏∏ 
;
∏∏ 
bool
∫∫ 
enabled
∫∫ 
=
∫∫ 
GUI
∫∫ 
.
∫∫ 
enabled
∫∫ &
;
∫∫& '
GUI
ªª 
.
ªª 
enabled
ªª 
=
ªª 
true
ªª 
;
ªª 
expanded
ºº 
=
ºº 
TMP_EditorUtility
ºº (
.
ºº( )
EditorToggle
ºº) 5
(
ºº5 6
r
ºº6 7
,
ºº7 8
expanded
ºº9 A
,
ººA B
new
ººC F

GUIContent
ººG Q
(
ººQ R
panel
ººR W
)
ººW X
,
ººX Y 
TMP_UIStyleManager
ººZ l
.
ººl m

panelTitle
ººm w
)
ººw x
;
ººx y
r
ΩΩ 
.
ΩΩ 
width
ΩΩ 
-=
ΩΩ 
$num
ΩΩ 
;
ΩΩ 
	EditorGUI
ææ 
.
ææ 

LabelField
ææ  
(
ææ  !
r
ææ! "
,
ææ" #
new
ææ$ '

GUIContent
ææ( 2
(
ææ2 3
expanded
ææ3 ;
?
ææ< =
s_PanelStateLabel
ææ> O
[
ææO P
$num
ææP Q
]
ææQ R
:
ææS T
s_PanelStateLabel
ææU f
[
ææf g
$num
ææg h
]
ææh i
)
ææi j
,
ææj k 
TMP_UIStyleManager
ææl ~
.
ææ~ 

rightLabelææ â
)ææâ ä
;ææä ã
GUI
øø 
.
øø 
enabled
øø 
=
øø 
enabled
øø !
;
øø! "
	EditorGUI
¡¡ 
.
¡¡ 
indentLevel
¡¡ !
+=
¡¡" $
$num
¡¡% &
;
¡¡& '
	EditorGUI
¬¬ 
.
¬¬  
BeginDisabledGroup
¬¬ (
(
¬¬( )
false
¬¬) .
)
¬¬. /
;
¬¬/ 0
return
ƒƒ 
expanded
ƒƒ 
;
ƒƒ 
}
≈≈ 	
	protected
«« 
bool
«« 

BeginPanel
«« !
(
««! "
string
««" (
panel
««) .
,
««. /
ShaderFeature
««0 =
feature
««> E
,
««E F
bool
««G K
expanded
««L T
,
««T U
bool
««V Z
	readState
««[ d
=
««e f
true
««g k
)
««k l
{
»» 	
	EditorGUI
…… 
.
…… 
indentLevel
…… !
=
……" #
$num
……$ %
;
……% &
if
ÀÀ 
(
ÀÀ 
	readState
ÀÀ 
)
ÀÀ 
{
ÃÃ 
feature
ÕÕ 
.
ÕÕ 
	ReadState
ÕÕ !
(
ÕÕ! "

m_Material
ÕÕ" ,
)
ÕÕ, -
;
ÕÕ- .
}
ŒŒ 
	EditorGUI
–– 
.
–– 
BeginChangeCheck
–– &
(
––& '
)
––' (
;
––( )
EditorGUILayout
““ 
.
““ 
BeginVertical
““ )
(
““) *
EditorStyles
““* 6
.
““6 7
helpBox
““7 >
)
““> ?
;
““? @
	GUILayout
”” 
.
”” 
BeginHorizontal
”” %
(
””% &
)
””& '
;
””' (
Rect
’’ 
r
’’ 
=
’’ 
	EditorGUI
’’ 
.
’’ 
IndentedRect
’’ +
(
’’+ ,
GUILayoutUtility
’’, <
.
’’< =
GetRect
’’= D
(
’’D E
$num
’’E G
,
’’G H
$num
’’I K
,
’’K L
	GUILayout
’’M V
.
’’V W
Width
’’W \
(
’’\ ]
$num
’’] `
)
’’` a
)
’’a b
)
’’b c
;
’’c d
bool
÷÷ 
active
÷÷ 
=
÷÷ 
	EditorGUI
÷÷ #
.
÷÷# $
Toggle
÷÷$ *
(
÷÷* +
r
÷÷+ ,
,
÷÷, -
feature
÷÷. 5
.
÷÷5 6
Active
÷÷6 <
)
÷÷< =
;
÷÷= >
if
ÿÿ 
(
ÿÿ 
	EditorGUI
ÿÿ 
.
ÿÿ 
EndChangeCheck
ÿÿ (
(
ÿÿ( )
)
ÿÿ) *
)
ÿÿ* +
{
ŸŸ 
m_Editor
⁄⁄ 
.
⁄⁄ (
RegisterPropertyChangeUndo
⁄⁄ 3
(
⁄⁄3 4
feature
⁄⁄4 ;
.
⁄⁄; <
	undoLabel
⁄⁄< E
)
⁄⁄E F
;
⁄⁄F G
feature
€€ 
.
€€ 
	SetActive
€€ !
(
€€! "
active
€€" (
,
€€( )

m_Material
€€* 4
)
€€4 5
;
€€5 6
}
‹‹ 
r
ﬁﬁ 
=
ﬁﬁ 
	EditorGUI
ﬁﬁ 
.
ﬁﬁ 
IndentedRect
ﬁﬁ &
(
ﬁﬁ& '
GUILayoutUtility
ﬁﬁ' 7
.
ﬁﬁ7 8
GetRect
ﬁﬁ8 ?
(
ﬁﬁ? @
$num
ﬁﬁ@ B
,
ﬁﬁB C
$num
ﬁﬁD F
)
ﬁﬁF G
)
ﬁﬁG H
;
ﬁﬁH I
r
ﬂﬂ 
.
ﬂﬂ 
width
ﬂﬂ 
+=
ﬂﬂ 
$num
ﬂﬂ 
;
ﬂﬂ 
bool
·· 
enabled
·· 
=
·· 
GUI
·· 
.
·· 
enabled
·· &
;
··& '
GUI
‚‚ 
.
‚‚ 
enabled
‚‚ 
=
‚‚ 
true
‚‚ 
;
‚‚ 
expanded
„„ 
=
„„ 
TMP_EditorUtility
„„ (
.
„„( )
EditorToggle
„„) 5
(
„„5 6
r
„„6 7
,
„„7 8
expanded
„„9 A
,
„„A B
new
„„C F

GUIContent
„„G Q
(
„„Q R
panel
„„R W
)
„„W X
,
„„X Y 
TMP_UIStyleManager
„„Z l
.
„„l m

panelTitle
„„m w
)
„„w x
;
„„x y
r
‰‰ 
.
‰‰ 
width
‰‰ 
-=
‰‰ 
$num
‰‰ 
;
‰‰ 
	EditorGUI
ÂÂ 
.
ÂÂ 

LabelField
ÂÂ  
(
ÂÂ  !
r
ÂÂ! "
,
ÂÂ" #
new
ÂÂ$ '

GUIContent
ÂÂ( 2
(
ÂÂ2 3
expanded
ÂÂ3 ;
?
ÂÂ< =
s_PanelStateLabel
ÂÂ> O
[
ÂÂO P
$num
ÂÂP Q
]
ÂÂQ R
:
ÂÂS T
s_PanelStateLabel
ÂÂU f
[
ÂÂf g
$num
ÂÂg h
]
ÂÂh i
)
ÂÂi j
,
ÂÂj k 
TMP_UIStyleManager
ÂÂl ~
.
ÂÂ~ 

rightLabelÂÂ â
)ÂÂâ ä
;ÂÂä ã
GUI
ÊÊ 
.
ÊÊ 
enabled
ÊÊ 
=
ÊÊ 
enabled
ÊÊ !
;
ÊÊ! "
	GUILayout
ËË 
.
ËË 
EndHorizontal
ËË #
(
ËË# $
)
ËË$ %
;
ËË% &
	EditorGUI
ÍÍ 
.
ÍÍ 
indentLevel
ÍÍ !
+=
ÍÍ" $
$num
ÍÍ% &
;
ÍÍ& '
	EditorGUI
ÎÎ 
.
ÎÎ  
BeginDisabledGroup
ÎÎ (
(
ÎÎ( )
!
ÎÎ) *
active
ÎÎ* 0
)
ÎÎ0 1
;
ÎÎ1 2
return
ÌÌ 
expanded
ÌÌ 
;
ÌÌ 
}
ÓÓ 	
public
 
void
 
EndPanel
 
(
 
)
 
{
ÒÒ 	
	EditorGUI
ÚÚ 
.
ÚÚ 
EndDisabledGroup
ÚÚ &
(
ÚÚ& '
)
ÚÚ' (
;
ÚÚ( )
	EditorGUI
ÛÛ 
.
ÛÛ 
indentLevel
ÛÛ !
-=
ÛÛ" $
$num
ÛÛ% &
;
ÛÛ& '
EditorGUILayout
ÙÙ 
.
ÙÙ 
EndVertical
ÙÙ '
(
ÙÙ' (
)
ÙÙ( )
;
ÙÙ) *
}
ıı 	
MaterialProperty
˜˜ 
BeginProperty
˜˜ &
(
˜˜& '
string
˜˜' -
name
˜˜. 2
)
˜˜2 3
{
¯¯ 	
MaterialProperty
˘˘ 
property
˘˘ %
=
˘˘& '
FindProperty
˘˘( 4
(
˘˘4 5
name
˘˘5 9
,
˘˘9 :
m_Properties
˘˘; G
)
˘˘G H
;
˘˘H I
	EditorGUI
˙˙ 
.
˙˙ 
BeginChangeCheck
˙˙ &
(
˙˙& '
)
˙˙' (
;
˙˙( )
	EditorGUI
˚˚ 
.
˚˚ 
showMixedValue
˚˚ $
=
˚˚% &
property
˚˚' /
.
˚˚/ 0
hasMixedValue
˚˚0 =
;
˚˚= >
m_Editor
¸¸ 
.
¸¸  
BeginAnimatedCheck
¸¸ '
(
¸¸' (
Rect
¸¸( ,
.
¸¸, -
zero
¸¸- 1
,
¸¸1 2
property
¸¸3 ;
)
¸¸; <
;
¸¸< =
return
˛˛ 
property
˛˛ 
;
˛˛ 
}
ˇˇ 	
bool
ÅÅ 
EndProperty
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
m_Editor
ÉÉ 
.
ÉÉ 
EndAnimatedCheck
ÉÉ %
(
ÉÉ% &
)
ÉÉ& '
;
ÉÉ' (
	EditorGUI
ÑÑ 
.
ÑÑ 
showMixedValue
ÑÑ $
=
ÑÑ% &
false
ÑÑ' ,
;
ÑÑ, -
return
ÖÖ 
	EditorGUI
ÖÖ 
.
ÖÖ 
EndChangeCheck
ÖÖ +
(
ÖÖ+ ,
)
ÖÖ, -
;
ÖÖ- .
}
ÜÜ 	
	protected
àà 
void
àà 
DoPopup
àà 
(
àà 
string
àà %
name
àà& *
,
àà* +
string
àà, 2
label
àà3 8
,
àà8 9

GUIContent
àà: D
[
ààD E
]
ààE F
options
ààG N
)
ààN O
{
ââ 	
MaterialProperty
ää 
property
ää %
=
ää& '
BeginProperty
ää( 5
(
ää5 6
name
ää6 :
)
ää: ;
;
ää; <
s_TempLabel
ãã 
.
ãã 
text
ãã 
=
ãã 
label
ãã $
;
ãã$ %
int
åå 
index
åå 
=
åå 
EditorGUILayout
åå '
.
åå' (
Popup
åå( -
(
åå- .
s_TempLabel
åå. 9
,
åå9 :
(
åå; <
int
åå< ?
)
åå? @
property
åå@ H
.
ååH I

floatValue
ååI S
,
ååS T
options
ååU \
)
åå\ ]
;
åå] ^
if
çç 
(
çç 
EndProperty
çç 
(
çç 
)
çç 
)
çç 
{
éé 
property
èè 
.
èè 

floatValue
èè #
=
èè$ %
index
èè& +
;
èè+ ,
}
êê 
}
ëë 	
	protected
ìì 
void
ìì 
	DoCubeMap
ìì  
(
ìì  !
string
ìì! '
name
ìì( ,
,
ìì, -
string
ìì. 4
label
ìì5 :
)
ìì: ;
{
îî 	
	DoTexture
ïï 
(
ïï 
name
ïï 
,
ïï 
label
ïï !
,
ïï! "
typeof
ïï# )
(
ïï) *
Cubemap
ïï* 1
)
ïï1 2
)
ïï2 3
;
ïï3 4
}
ññ 	
	protected
òò 
void
òò 
DoTexture2D
òò "
(
òò" #
string
òò# )
name
òò* .
,
òò. /
string
òò0 6
label
òò7 <
,
òò< =
bool
òò> B
withTilingOffset
òòC S
=
òòT U
false
òòV [
,
òò[ \
string
òò] c
[
òòc d
]
òòd e

speedNames
òòf p
=
òòq r
null
òòs w
)
òòw x
{
ôô 	
	DoTexture
öö 
(
öö 
name
öö 
,
öö 
label
öö !
,
öö! "
typeof
öö# )
(
öö) *
	Texture2D
öö* 3
)
öö3 4
,
öö4 5
withTilingOffset
öö6 F
,
ööF G

speedNames
ööH R
)
ööR S
;
ööS T
}
õõ 	
void
ùù 
	DoTexture
ùù 
(
ùù 
string
ùù 
name
ùù "
,
ùù" #
string
ùù$ *
label
ùù+ 0
,
ùù0 1
System
ùù2 8
.
ùù8 9
Type
ùù9 =
type
ùù> B
,
ùùB C
bool
ùùD H
withTilingOffset
ùùI Y
=
ùùZ [
false
ùù\ a
,
ùùa b
string
ùùc i
[
ùùi j
]
ùùj k

speedNames
ùùl v
=
ùùw x
null
ùùy }
)
ùù} ~
{
ûû 	
MaterialProperty
üü 
property
üü %
=
üü& '
FindProperty
üü( 4
(
üü4 5
name
üü5 9
,
üü9 :
m_Properties
üü; G
)
üüG H
;
üüH I
m_Editor
†† 
.
††  
BeginAnimatedCheck
†† '
(
††' (
Rect
††( ,
.
††, -
zero
††- 1
,
††1 2
property
††3 ;
)
††; <
;
††< =
Rect
¢¢ 
rect
¢¢ 
=
¢¢ 
EditorGUILayout
¢¢ '
.
¢¢' (
GetControlRect
¢¢( 6
(
¢¢6 7
true
¢¢7 ;
,
¢¢; <
$num
¢¢= @
)
¢¢@ A
;
¢¢A B
float
££ 

totalWidth
££ 
=
££ 
rect
££ #
.
££# $
width
££$ )
;
££) *
rect
§§ 
.
§§ 
width
§§ 
=
§§ 
EditorGUIUtility
§§ )
.
§§) *

labelWidth
§§* 4
+
§§5 6
$num
§§7 :
;
§§: ;
s_TempLabel
•• 
.
•• 
text
•• 
=
•• 
label
•• $
;
••$ %
	EditorGUI
ßß 
.
ßß 
BeginChangeCheck
ßß &
(
ßß& '
)
ßß' (
;
ßß( )
Object
®® 
tex
®® 
=
®® 
	EditorGUI
®® "
.
®®" #
ObjectField
®®# .
(
®®. /
rect
®®/ 3
,
®®3 4
s_TempLabel
®®5 @
,
®®@ A
property
®®B J
.
®®J K
textureValue
®®K W
,
®®W X
type
®®Y ]
,
®®] ^
false
®®_ d
)
®®d e
;
®®e f
if
©© 
(
©© 
	EditorGUI
©© 
.
©© 
EndChangeCheck
©© (
(
©©( )
)
©©) *
)
©©* +
{
™™ 
property
´´ 
.
´´ 
textureValue
´´ %
=
´´& '
tex
´´( +
as
´´, .
Texture
´´/ 6
;
´´6 7
}
¨¨ 
rect
ÆÆ 
.
ÆÆ 
x
ÆÆ 
+=
ÆÆ 
rect
ÆÆ 
.
ÆÆ 
width
ÆÆ  
+
ÆÆ! "
$num
ÆÆ# %
;
ÆÆ% &
rect
ØØ 
.
ØØ 
width
ØØ 
=
ØØ 

totalWidth
ØØ #
-
ØØ$ %
rect
ØØ& *
.
ØØ* +
width
ØØ+ 0
-
ØØ1 2
$num
ØØ3 5
;
ØØ5 6
rect
∞∞ 
.
∞∞ 
height
∞∞ 
=
∞∞ 
EditorGUIUtility
∞∞ *
.
∞∞* +
singleLineHeight
∞∞+ ;
;
∞∞; <
if
≤≤ 
(
≤≤ 
withTilingOffset
≤≤  
)
≤≤  !
{
≥≥ 
DoTilingOffset
¥¥ 
(
¥¥ 
rect
¥¥ #
,
¥¥# $
property
¥¥% -
)
¥¥- .
;
¥¥. /
rect
µµ 
.
µµ 
y
µµ 
+=
µµ 
(
µµ 
rect
µµ 
.
µµ  
height
µµ  &
+
µµ' (
$num
µµ) +
)
µµ+ ,
*
µµ- .
$num
µµ/ 1
;
µµ1 2
}
∂∂ 
m_Editor
∏∏ 
.
∏∏ 
EndAnimatedCheck
∏∏ %
(
∏∏% &
)
∏∏& '
;
∏∏' (
if
∫∫ 
(
∫∫ 

speedNames
∫∫ 
!=
∫∫ 
null
∫∫ "
)
∫∫" #
{
ªª 
	DoUVSpeed
ºº 
(
ºº 
rect
ºº 
,
ºº 

speedNames
ºº  *
)
ºº* +
;
ºº+ ,
}
ΩΩ 
}
ææ 	
void
¿¿ 
DoTilingOffset
¿¿ 
(
¿¿ 
Rect
¿¿  
rect
¿¿! %
,
¿¿% &
MaterialProperty
¿¿' 7
property
¿¿8 @
)
¿¿@ A
{
¡¡ 	
float
¬¬ 

labelWidth
¬¬ 
=
¬¬ 
EditorGUIUtility
¬¬ /
.
¬¬/ 0

labelWidth
¬¬0 :
;
¬¬: ;
int
√√ 
indentLevel
√√ 
=
√√ 
	EditorGUI
√√ '
.
√√' (
indentLevel
√√( 3
;
√√3 4
	EditorGUI
ƒƒ 
.
ƒƒ 
indentLevel
ƒƒ !
=
ƒƒ" #
$num
ƒƒ$ %
;
ƒƒ% &
EditorGUIUtility
≈≈ 
.
≈≈ 

labelWidth
≈≈ '
=
≈≈( )
Mathf
≈≈* /
.
≈≈/ 0
Min
≈≈0 3
(
≈≈3 4
$num
≈≈4 7
,
≈≈7 8
rect
≈≈9 =
.
≈≈= >
width
≈≈> C
*
≈≈D E
$num
≈≈F K
)
≈≈K L
;
≈≈L M
Vector4
«« 
vector
«« 
=
«« 
property
«« %
.
««% &#
textureScaleAndOffset
««& ;
;
««; <
bool
…… 
changed
…… 
=
…… 
false
……  
;
……  !
float
   
[
   
]
   
values
   
=
   
s_TempFloats
   )
[
  ) *
$num
  * +
]
  + ,
;
  , -
s_TempLabel
ÃÃ 
.
ÃÃ 
text
ÃÃ 
=
ÃÃ 
$str
ÃÃ '
;
ÃÃ' (
Rect
ÕÕ 

vectorRect
ÕÕ 
=
ÕÕ 
	EditorGUI
ÕÕ '
.
ÕÕ' (
PrefixLabel
ÕÕ( 3
(
ÕÕ3 4
rect
ÕÕ4 8
,
ÕÕ8 9
s_TempLabel
ÕÕ: E
)
ÕÕE F
;
ÕÕF G
values
ŒŒ 
[
ŒŒ 
$num
ŒŒ 
]
ŒŒ 
=
ŒŒ 
vector
ŒŒ 
.
ŒŒ 
x
ŒŒ  
;
ŒŒ  !
values
œœ 
[
œœ 
$num
œœ 
]
œœ 
=
œœ 
vector
œœ 
.
œœ 
y
œœ  
;
œœ  !
	EditorGUI
—— 
.
—— 
BeginChangeCheck
—— &
(
——& '
)
——' (
;
——( )
	EditorGUI
““ 
.
““ 
MultiFloatField
““ %
(
““% &

vectorRect
““& 0
,
““0 1 
s_XywhVectorLabels
““2 D
,
““D E
values
““F L
)
““L M
;
““M N
if
”” 
(
”” 
	EditorGUI
”” 
.
”” 
EndChangeCheck
”” (
(
””( )
)
””) *
)
””* +
{
‘‘ 
vector
’’ 
.
’’ 
x
’’ 
=
’’ 
values
’’ !
[
’’! "
$num
’’" #
]
’’# $
;
’’$ %
vector
÷÷ 
.
÷÷ 
y
÷÷ 
=
÷÷ 
values
÷÷ !
[
÷÷! "
$num
÷÷" #
]
÷÷# $
;
÷÷$ %
changed
◊◊ 
=
◊◊ 
true
◊◊ 
;
◊◊ 
}
ÿÿ 
rect
⁄⁄ 
.
⁄⁄ 
y
⁄⁄ 
+=
⁄⁄ 
rect
⁄⁄ 
.
⁄⁄ 
height
⁄⁄ !
+
⁄⁄" #
$num
⁄⁄$ &
;
⁄⁄& '
s_TempLabel
€€ 
.
€€ 
text
€€ 
=
€€ 
$str
€€ '
;
€€' (

vectorRect
‹‹ 
=
‹‹ 
	EditorGUI
‹‹ "
.
‹‹" #
PrefixLabel
‹‹# .
(
‹‹. /
rect
‹‹/ 3
,
‹‹3 4
s_TempLabel
‹‹5 @
)
‹‹@ A
;
‹‹A B
values
›› 
[
›› 
$num
›› 
]
›› 
=
›› 
vector
›› 
.
›› 
z
››  
;
››  !
values
ﬁﬁ 
[
ﬁﬁ 
$num
ﬁﬁ 
]
ﬁﬁ 
=
ﬁﬁ 
vector
ﬁﬁ 
.
ﬁﬁ 
w
ﬁﬁ  
;
ﬁﬁ  !
	EditorGUI
‡‡ 
.
‡‡ 
BeginChangeCheck
‡‡ &
(
‡‡& '
)
‡‡' (
;
‡‡( )
	EditorGUI
·· 
.
·· 
MultiFloatField
·· %
(
··% &

vectorRect
··& 0
,
··0 1 
s_XywhVectorLabels
··2 D
,
··D E
values
··F L
)
··L M
;
··M N
if
‚‚ 
(
‚‚ 
	EditorGUI
‚‚ 
.
‚‚ 
EndChangeCheck
‚‚ (
(
‚‚( )
)
‚‚) *
)
‚‚* +
{
„„ 
vector
‰‰ 
.
‰‰ 
z
‰‰ 
=
‰‰ 
values
‰‰ !
[
‰‰! "
$num
‰‰" #
]
‰‰# $
;
‰‰$ %
vector
ÂÂ 
.
ÂÂ 
w
ÂÂ 
=
ÂÂ 
values
ÂÂ !
[
ÂÂ! "
$num
ÂÂ" #
]
ÂÂ# $
;
ÂÂ$ %
changed
ÊÊ 
=
ÊÊ 
true
ÊÊ 
;
ÊÊ 
}
ÁÁ 
if
ÈÈ 
(
ÈÈ 
changed
ÈÈ 
)
ÈÈ 
{
ÍÍ 
property
ÎÎ 
.
ÎÎ #
textureScaleAndOffset
ÎÎ .
=
ÎÎ/ 0
vector
ÎÎ1 7
;
ÎÎ7 8
}
ÏÏ 
EditorGUIUtility
ÓÓ 
.
ÓÓ 

labelWidth
ÓÓ '
=
ÓÓ( )

labelWidth
ÓÓ* 4
;
ÓÓ4 5
	EditorGUI
ÔÔ 
.
ÔÔ 
indentLevel
ÔÔ !
=
ÔÔ" #
indentLevel
ÔÔ$ /
;
ÔÔ/ 0
}
 	
	protected
ÚÚ 
void
ÚÚ 
	DoUVSpeed
ÚÚ  
(
ÚÚ  !
Rect
ÚÚ! %
rect
ÚÚ& *
,
ÚÚ* +
string
ÚÚ, 2
[
ÚÚ2 3
]
ÚÚ3 4
names
ÚÚ5 :
)
ÚÚ: ;
{
ÛÛ 	
float
ÙÙ 

labelWidth
ÙÙ 
=
ÙÙ 
EditorGUIUtility
ÙÙ /
.
ÙÙ/ 0

labelWidth
ÙÙ0 :
;
ÙÙ: ;
int
ıı 
indentLevel
ıı 
=
ıı 
	EditorGUI
ıı '
.
ıı' (
indentLevel
ıı( 3
;
ıı3 4
	EditorGUI
ˆˆ 
.
ˆˆ 
indentLevel
ˆˆ !
=
ˆˆ" #
$num
ˆˆ$ %
;
ˆˆ% &
EditorGUIUtility
˜˜ 
.
˜˜ 

labelWidth
˜˜ '
=
˜˜( )
Mathf
˜˜* /
.
˜˜/ 0
Min
˜˜0 3
(
˜˜3 4
$num
˜˜4 7
,
˜˜7 8
rect
˜˜9 =
.
˜˜= >
width
˜˜> C
*
˜˜D E
$num
˜˜F K
)
˜˜K L
;
˜˜L M
s_TempLabel
˘˘ 
.
˘˘ 
text
˘˘ 
=
˘˘ 
$str
˘˘ &
;
˘˘& '
rect
˙˙ 
=
˙˙ 
	EditorGUI
˙˙ 
.
˙˙ 
PrefixLabel
˙˙ (
(
˙˙( )
rect
˙˙) -
,
˙˙- .
s_TempLabel
˙˙/ :
)
˙˙: ;
;
˙˙; <
EditorGUIUtility
¸¸ 
.
¸¸ 

labelWidth
¸¸ '
=
¸¸( )
$num
¸¸* -
;
¸¸- .
rect
˝˝ 
.
˝˝ 
width
˝˝ 
=
˝˝ 
rect
˝˝ 
.
˝˝ 
width
˝˝ #
*
˝˝$ %
$num
˝˝& *
-
˝˝+ ,
$num
˝˝- /
;
˝˝/ 0
DoFloat
˛˛ 
(
˛˛ 
rect
˛˛ 
,
˛˛ 
names
˛˛ 
[
˛˛  
$num
˛˛  !
]
˛˛! "
,
˛˛" #
$str
˛˛$ '
)
˛˛' (
;
˛˛( )
rect
ˇˇ 
.
ˇˇ 
x
ˇˇ 
+=
ˇˇ 
rect
ˇˇ 
.
ˇˇ 
width
ˇˇ  
+
ˇˇ! "
$num
ˇˇ# %
;
ˇˇ% &
DoFloat
ÄÄ 
(
ÄÄ 
rect
ÄÄ 
,
ÄÄ 
names
ÄÄ 
[
ÄÄ  
$num
ÄÄ  !
]
ÄÄ! "
,
ÄÄ" #
$str
ÄÄ$ '
)
ÄÄ' (
;
ÄÄ( )
EditorGUIUtility
ÅÅ 
.
ÅÅ 

labelWidth
ÅÅ '
=
ÅÅ( )

labelWidth
ÅÅ* 4
;
ÅÅ4 5
	EditorGUI
ÇÇ 
.
ÇÇ 
indentLevel
ÇÇ !
=
ÇÇ" #
indentLevel
ÇÇ$ /
;
ÇÇ/ 0
}
ÉÉ 	
	protected
ÖÖ 
void
ÖÖ 
DoToggle
ÖÖ 
(
ÖÖ  
string
ÖÖ  &
name
ÖÖ' +
,
ÖÖ+ ,
string
ÖÖ- 3
label
ÖÖ4 9
)
ÖÖ9 :
{
ÜÜ 	
MaterialProperty
áá 
property
áá %
=
áá& '
BeginProperty
áá( 5
(
áá5 6
name
áá6 :
)
áá: ;
;
áá; <
s_TempLabel
àà 
.
àà 
text
àà 
=
àà 
label
àà $
;
àà$ %
bool
ââ 
value
ââ 
=
ââ 
EditorGUILayout
ââ (
.
ââ( )
Toggle
ââ) /
(
ââ/ 0
s_TempLabel
ââ0 ;
,
ââ; <
property
ââ= E
.
ââE F

floatValue
ââF P
==
ââQ S
$num
ââT V
)
ââV W
;
ââW X
if
ää 
(
ää 
EndProperty
ää 
(
ää 
)
ää 
)
ää 
{
ãã 
property
åå 
.
åå 

floatValue
åå #
=
åå$ %
value
åå& +
?
åå, -
$num
åå. 0
:
åå1 2
$num
åå3 5
;
åå5 6
}
çç 
}
éé 	
	protected
êê 
void
êê 
DoFloat
êê 
(
êê 
string
êê %
name
êê& *
,
êê* +
string
êê, 2
label
êê3 8
)
êê8 9
{
ëë 	
MaterialProperty
íí 
property
íí %
=
íí& '
BeginProperty
íí( 5
(
íí5 6
name
íí6 :
)
íí: ;
;
íí; <
Rect
ìì 
rect
ìì 
=
ìì 
EditorGUILayout
ìì '
.
ìì' (
GetControlRect
ìì( 6
(
ìì6 7
)
ìì7 8
;
ìì8 9
rect
îî 
.
îî 
width
îî 
=
îî 
EditorGUIUtility
îî )
.
îî) *

labelWidth
îî* 4
+
îî5 6
$num
îî7 :
;
îî: ;
s_TempLabel
ïï 
.
ïï 
text
ïï 
=
ïï 
label
ïï $
;
ïï$ %
float
ññ 
value
ññ 
=
ññ 
	EditorGUI
ññ #
.
ññ# $

FloatField
ññ$ .
(
ññ. /
rect
ññ/ 3
,
ññ3 4
s_TempLabel
ññ5 @
,
ññ@ A
property
ññB J
.
ññJ K

floatValue
ññK U
)
ññU V
;
ññV W
if
óó 
(
óó 
EndProperty
óó 
(
óó 
)
óó 
)
óó 
{
òò 
property
ôô 
.
ôô 

floatValue
ôô #
=
ôô$ %
value
ôô& +
;
ôô+ ,
}
öö 
}
õõ 	
	protected
ùù 
void
ùù 
DoColor
ùù 
(
ùù 
string
ùù %
name
ùù& *
,
ùù* +
string
ùù, 2
label
ùù3 8
)
ùù8 9
{
ûû 	
MaterialProperty
üü 
property
üü %
=
üü& '
BeginProperty
üü( 5
(
üü5 6
name
üü6 :
)
üü: ;
;
üü; <
s_TempLabel
†† 
.
†† 
text
†† 
=
†† 
label
†† $
;
††$ %
Color
°° 
value
°° 
=
°° 
	EditorGUI
°° #
.
°°# $

ColorField
°°$ .
(
°°. /
EditorGUILayout
°°/ >
.
°°> ?
GetControlRect
°°? M
(
°°M N
)
°°N O
,
°°O P
s_TempLabel
°°Q \
,
°°\ ]
property
°°^ f
.
°°f g

colorValue
°°g q
,
°°q r
false
°°s x
,
°°x y
true
°°z ~
,
°°~ 
true°°Ä Ñ
)°°Ñ Ö
;°°Ö Ü
if
¢¢ 
(
¢¢ 
EndProperty
¢¢ 
(
¢¢ 
)
¢¢ 
)
¢¢ 
{
££ 
property
§§ 
.
§§ 

colorValue
§§ #
=
§§$ %
value
§§& +
;
§§+ ,
}
•• 
}
¶¶ 	
void
®® 
DoFloat
®® 
(
®® 
Rect
®® 
rect
®® 
,
®® 
string
®®  &
name
®®' +
,
®®+ ,
string
®®- 3
label
®®4 9
)
®®9 :
{
©© 	
MaterialProperty
™™ 
property
™™ %
=
™™& '
BeginProperty
™™( 5
(
™™5 6
name
™™6 :
)
™™: ;
;
™™; <
s_TempLabel
´´ 
.
´´ 
text
´´ 
=
´´ 
label
´´ $
;
´´$ %
float
¨¨ 
value
¨¨ 
=
¨¨ 
	EditorGUI
¨¨ #
.
¨¨# $

FloatField
¨¨$ .
(
¨¨. /
rect
¨¨/ 3
,
¨¨3 4
s_TempLabel
¨¨5 @
,
¨¨@ A
property
¨¨B J
.
¨¨J K

floatValue
¨¨K U
)
¨¨U V
;
¨¨V W
if
≠≠ 
(
≠≠ 
EndProperty
≠≠ 
(
≠≠ 
)
≠≠ 
)
≠≠ 
{
ÆÆ 
property
ØØ 
.
ØØ 

floatValue
ØØ #
=
ØØ$ %
value
ØØ& +
;
ØØ+ ,
}
∞∞ 
}
±± 	
	protected
≥≥ 
void
≥≥ 
DoSlider
≥≥ 
(
≥≥  
string
≥≥  &
name
≥≥' +
,
≥≥+ ,
string
≥≥- 3
label
≥≥4 9
)
≥≥9 :
{
¥¥ 	
MaterialProperty
µµ 
property
µµ %
=
µµ& '
BeginProperty
µµ( 5
(
µµ5 6
name
µµ6 :
)
µµ: ;
;
µµ; <
Vector2
∂∂ 
range
∂∂ 
=
∂∂ 
property
∂∂ $
.
∂∂$ %
rangeLimits
∂∂% 0
;
∂∂0 1
s_TempLabel
∑∑ 
.
∑∑ 
text
∑∑ 
=
∑∑ 
label
∑∑ $
;
∑∑$ %
float
∏∏ 
value
∏∏ 
=
∏∏ 
	EditorGUI
∏∏ #
.
∏∏# $
Slider
∏∏$ *
(
∏∏* +
EditorGUILayout
ππ 
.
ππ  
GetControlRect
ππ  .
(
ππ. /
)
ππ/ 0
,
ππ0 1
s_TempLabel
ππ2 =
,
ππ= >
property
ππ? G
.
ππG H

floatValue
ππH R
,
ππR S
range
ππT Y
.
ππY Z
x
ππZ [
,
ππ[ \
range
ππ] b
.
ππb c
y
ππc d
)
∫∫ 
;
∫∫ 
if
ªª 
(
ªª 
EndProperty
ªª 
(
ªª 
)
ªª 
)
ªª 
{
ºº 
property
ΩΩ 
.
ΩΩ 

floatValue
ΩΩ #
=
ΩΩ$ %
value
ΩΩ& +
;
ΩΩ+ ,
}
ææ 
}
øø 	
	protected
¡¡ 
void
¡¡ 
	DoVector3
¡¡  
(
¡¡  !
string
¡¡! '
name
¡¡( ,
,
¡¡, -
string
¡¡. 4
label
¡¡5 :
)
¡¡: ;
{
¬¬ 	
MaterialProperty
√√ 
property
√√ %
=
√√& '
BeginProperty
√√( 5
(
√√5 6
name
√√6 :
)
√√: ;
;
√√; <
s_TempLabel
ƒƒ 
.
ƒƒ 
text
ƒƒ 
=
ƒƒ 
label
ƒƒ $
;
ƒƒ$ %
Vector4
≈≈ 
value
≈≈ 
=
≈≈ 
EditorGUILayout
≈≈ +
.
≈≈+ ,
Vector3Field
≈≈, 8
(
≈≈8 9
s_TempLabel
≈≈9 D
,
≈≈D E
property
≈≈F N
.
≈≈N O
vectorValue
≈≈O Z
)
≈≈Z [
;
≈≈[ \
if
∆∆ 
(
∆∆ 
EndProperty
∆∆ 
(
∆∆ 
)
∆∆ 
)
∆∆ 
{
«« 
property
»» 
.
»» 
vectorValue
»» $
=
»»% &
value
»»' ,
;
»», -
}
…… 
}
   	
	protected
ÃÃ 
void
ÃÃ 
DoVector
ÃÃ 
(
ÃÃ  
string
ÃÃ  &
name
ÃÃ' +
,
ÃÃ+ ,
string
ÃÃ- 3
label
ÃÃ4 9
,
ÃÃ9 :

GUIContent
ÃÃ; E
[
ÃÃE F
]
ÃÃF G
	subLabels
ÃÃH Q
)
ÃÃQ R
{
ÕÕ 	
MaterialProperty
ŒŒ 
property
ŒŒ %
=
ŒŒ& '
BeginProperty
ŒŒ( 5
(
ŒŒ5 6
name
ŒŒ6 :
)
ŒŒ: ;
;
ŒŒ; <
Rect
œœ 
rect
œœ 
=
œœ 
EditorGUILayout
œœ '
.
œœ' (
GetControlRect
œœ( 6
(
œœ6 7
)
œœ7 8
;
œœ8 9
s_TempLabel
–– 
.
–– 
text
–– 
=
–– 
label
–– $
;
––$ %
rect
—— 
=
—— 
	EditorGUI
—— 
.
—— 
PrefixLabel
—— (
(
——( )
rect
——) -
,
——- .
s_TempLabel
——/ :
)
——: ;
;
——; <
Vector4
““ 
vector
““ 
=
““ 
property
““ %
.
““% &
vectorValue
““& 1
;
““1 2
float
‘‘ 
[
‘‘ 
]
‘‘ 
values
‘‘ 
=
‘‘ 
s_TempFloats
‘‘ )
[
‘‘) *
	subLabels
‘‘* 3
.
‘‘3 4
Length
‘‘4 :
]
‘‘: ;
;
‘‘; <
for
’’ 
(
’’ 
int
’’ 
i
’’ 
=
’’ 
$num
’’ 
;
’’ 
i
’’ 
<
’’ 
	subLabels
’’  )
.
’’) *
Length
’’* 0
;
’’0 1
i
’’2 3
++
’’3 5
)
’’5 6
{
÷÷ 
values
◊◊ 
[
◊◊ 
i
◊◊ 
]
◊◊ 
=
◊◊ 
vector
◊◊ "
[
◊◊" #
i
◊◊# $
]
◊◊$ %
;
◊◊% &
}
ÿÿ 
	EditorGUI
⁄⁄ 
.
⁄⁄ 
MultiFloatField
⁄⁄ %
(
⁄⁄% &
rect
⁄⁄& *
,
⁄⁄* +
	subLabels
⁄⁄, 5
,
⁄⁄5 6
values
⁄⁄7 =
)
⁄⁄= >
;
⁄⁄> ?
if
€€ 
(
€€ 
EndProperty
€€ 
(
€€ 
)
€€ 
)
€€ 
{
‹‹ 
for
›› 
(
›› 
int
›› 
i
›› 
=
›› 
$num
›› 
;
›› 
i
››  !
<
››" #
	subLabels
››$ -
.
››- .
Length
››. 4
;
››4 5
i
››6 7
++
››7 9
)
››9 :
{
ﬁﬁ 
vector
ﬂﬂ 
[
ﬂﬂ 
i
ﬂﬂ 
]
ﬂﬂ 
=
ﬂﬂ 
values
ﬂﬂ  &
[
ﬂﬂ& '
i
ﬂﬂ' (
]
ﬂﬂ( )
;
ﬂﬂ) *
}
‡‡ 
property
‚‚ 
.
‚‚ 
vectorValue
‚‚ $
=
‚‚% &
vector
‚‚' -
;
‚‚- .
}
„„ 
}
‰‰ 	
void
ÊÊ  
DoDragAndDropBegin
ÊÊ 
(
ÊÊ  
)
ÊÊ  !
{
ÁÁ 	
m_DragAndDropMinY
ËË 
=
ËË 
GUILayoutUtility
ËË  0
.
ËË0 1
GetRect
ËË1 8
(
ËË8 9
$num
ËË9 ;
,
ËË; <
$num
ËË= ?
,
ËË? @
	GUILayout
ËËA J
.
ËËJ K
ExpandWidth
ËËK V
(
ËËV W
true
ËËW [
)
ËË[ \
)
ËË\ ]
.
ËË] ^
y
ËË^ _
;
ËË_ `
}
ÈÈ 	
void
ÎÎ 
DoDragAndDropEnd
ÎÎ 
(
ÎÎ 
)
ÎÎ 
{
ÏÏ 	
Rect
ÌÌ 
rect
ÌÌ 
=
ÌÌ 
GUILayoutUtility
ÌÌ (
.
ÌÌ( )
GetRect
ÌÌ) 0
(
ÌÌ0 1
$num
ÌÌ1 3
,
ÌÌ3 4
$num
ÌÌ5 7
,
ÌÌ7 8
	GUILayout
ÌÌ9 B
.
ÌÌB C
ExpandWidth
ÌÌC N
(
ÌÌN O
true
ÌÌO S
)
ÌÌS T
)
ÌÌT U
;
ÌÌU V
Event
ÓÓ 
evt
ÓÓ 
=
ÓÓ 
Event
ÓÓ 
.
ÓÓ 
current
ÓÓ %
;
ÓÓ% &
if
ÔÔ 
(
ÔÔ 
evt
ÔÔ 
.
ÔÔ 
type
ÔÔ 
==
ÔÔ 
	EventType
ÔÔ %
.
ÔÔ% &
DragUpdated
ÔÔ& 1
)
ÔÔ1 2
{
 
DragAndDrop
ÒÒ 
.
ÒÒ 

visualMode
ÒÒ &
=
ÒÒ' (#
DragAndDropVisualMode
ÒÒ) >
.
ÒÒ> ?
Generic
ÒÒ? F
;
ÒÒF G
evt
ÚÚ 
.
ÚÚ 
Use
ÚÚ 
(
ÚÚ 
)
ÚÚ 
;
ÚÚ 
}
ÛÛ 
else
ÙÙ 
if
ÙÙ 
(
ÙÙ 
evt
ıı 
.
ıı 
type
ıı 
==
ıı 
	EventType
ıı %
.
ıı% &
DragPerform
ıı& 1
&&
ıı2 4
Rect
ˆˆ 
.
ˆˆ 

MinMaxRect
ˆˆ 
(
ˆˆ  
rect
ˆˆ  $
.
ˆˆ$ %
xMin
ˆˆ% )
,
ˆˆ) *
m_DragAndDropMinY
ˆˆ+ <
,
ˆˆ< =
rect
ˆˆ> B
.
ˆˆB C
xMax
ˆˆC G
,
ˆˆG H
rect
ˆˆI M
.
ˆˆM N
yMax
ˆˆN R
)
ˆˆR S
.
ˆˆS T
Contains
ˆˆT \
(
ˆˆ\ ]
evt
ˆˆ] `
.
ˆˆ` a
mousePosition
ˆˆa n
)
ˆˆn o
)
˜˜ 
{
¯¯ 
DragAndDrop
˘˘ 
.
˘˘ 

AcceptDrag
˘˘ &
(
˘˘& '
)
˘˘' (
;
˘˘( )
evt
˙˙ 
.
˙˙ 
Use
˙˙ 
(
˙˙ 
)
˙˙ 
;
˙˙ 
Material
˚˚ 
droppedMaterial
˚˚ (
=
˚˚) *
DragAndDrop
˚˚+ 6
.
˚˚6 7
objectReferences
˚˚7 G
[
˚˚G H
$num
˚˚H I
]
˚˚I J
as
˚˚K M
Material
˚˚N V
;
˚˚V W
if
¸¸ 
(
¸¸ 
droppedMaterial
¸¸ #
&&
¸¸$ &
droppedMaterial
¸¸' 6
!=
¸¸7 9

m_Material
¸¸: D
)
¸¸D E
{
˝˝ 
PerformDrop
˛˛ 
(
˛˛  
droppedMaterial
˛˛  /
)
˛˛/ 0
;
˛˛0 1
}
ˇˇ 
}
ÄÄ 
}
ÅÅ 	
void
ÉÉ 
PerformDrop
ÉÉ 
(
ÉÉ 
Material
ÉÉ !
droppedMaterial
ÉÉ" 1
)
ÉÉ1 2
{
ÑÑ 	
Texture
ÖÖ 

droppedTex
ÖÖ 
=
ÖÖ  
droppedMaterial
ÖÖ! 0
.
ÖÖ0 1

GetTexture
ÖÖ1 ;
(
ÖÖ; <
ShaderUtilities
ÖÖ< K
.
ÖÖK L

ID_MainTex
ÖÖL V
)
ÖÖV W
;
ÖÖW X
if
ÜÜ 
(
ÜÜ 
!
ÜÜ 

droppedTex
ÜÜ 
)
ÜÜ 
{
áá 
return
àà 
;
àà 
}
ââ 
Texture
ãã 

currentTex
ãã 
=
ãã  

m_Material
ãã! +
.
ãã+ ,

GetTexture
ãã, 6
(
ãã6 7
ShaderUtilities
ãã7 F
.
ããF G

ID_MainTex
ããG Q
)
ããQ R
;
ããR S
TMP_FontAsset
åå 
requiredFontAsset
åå +
=
åå, -
null
åå. 2
;
åå2 3
if
çç 
(
çç 

droppedTex
çç 
!=
çç 

currentTex
çç (
)
çç( )
{
éé 
requiredFontAsset
èè !
=
èè" #
TMP_EditorUtility
èè$ 5
.
èè5 6#
FindMatchingFontAsset
èè6 K
(
èèK L
droppedMaterial
èèL [
)
èè[ \
;
èè\ ]
if
êê 
(
êê 
!
êê 
requiredFontAsset
êê &
)
êê& '
{
ëë 
return
íí 
;
íí 
}
ìì 
}
îî 
foreach
ññ 
(
ññ 

GameObject
ññ 
o
ññ  !
in
ññ" $
	Selection
ññ% .
.
ññ. /
gameObjects
ññ/ :
)
ññ: ;
{
óó 
if
òò 
(
òò 
requiredFontAsset
òò %
)
òò% &
{
ôô 
TMP_Text
öö 
textComponent
öö *
=
öö+ ,
o
öö- .
.
öö. /
GetComponent
öö/ ;
<
öö; <
TMP_Text
öö< D
>
ööD E
(
ööE F
)
ööF G
;
ööG H
if
õõ 
(
õõ 
textComponent
õõ %
)
õõ% &
{
úú 
Undo
ùù 
.
ùù 
RecordObject
ùù )
(
ùù) *
textComponent
ùù* 7
,
ùù7 8
$str
ùù9 L
)
ùùL M
;
ùùM N
textComponent
ûû %
.
ûû% &
font
ûû& *
=
ûû+ ,
requiredFontAsset
ûû- >
;
ûû> ?
}
üü 
}
††  
TMPro_EventManager
¢¢ "
.
¢¢" #/
!ON_DRAG_AND_DROP_MATERIAL_CHANGED
¢¢# D
(
¢¢D E
o
¢¢E F
,
¢¢F G

m_Material
¢¢H R
,
¢¢R S
droppedMaterial
¢¢T c
)
¢¢c d
;
¢¢d e
EditorUtility
££ 
.
££ 
SetDirty
££ &
(
££& '
o
££' (
)
££( )
;
££) *
}
§§ 
}
•• 	
}
¶¶ 
}ßß ∂€
üD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_CharacterPropertyDrawer.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{		 
[

  
CustomPropertyDrawer

 
(

 
typeof

  
(

  !
TMP_Character

! .
)

. /
)

/ 0
]

0 1
public 

class '
TMP_CharacterPropertyDrawer ,
:- .
PropertyDrawer/ =
{ 
private 
string 
k_ColorProperty &
=' (
$str) 1
;1 2
int %
m_GlyphSelectedForEditing %
=& '
-( )
$num) *
;* +
public 
override 
void 
OnGUI "
(" #
Rect# '
position( 0
,0 1
SerializedProperty2 D
propertyE M
,M N

GUIContentO Y
labelZ _
)_ `
{ 	
SerializedProperty 
prop_Unicode +
=, -
property. 6
.6 7 
FindPropertyRelative7 K
(K L
$strL W
)W X
;X Y
SerializedProperty 
prop_GlyphIndex .
=/ 0
property1 9
.9 : 
FindPropertyRelative: N
(N O
$strO ]
)] ^
;^ _
SerializedProperty 

prop_Scale )
=* +
property, 4
.4 5 
FindPropertyRelative5 I
(I J
$strJ S
)S T
;T U
GUIStyle 
style 
= 
new  
GUIStyle! )
() *
EditorStyles* 6
.6 7
label7 <
)< =
;= >
style 
. 
richText 
= 
true !
;! "
EditorGUIUtility 
. 

labelWidth '
=( )
$num* -
;- .
EditorGUIUtility 
. 

fieldWidth '
=( )
$num* ,
;, -
Rect 
rect 
= 
new 
Rect  
(  !
position! )
.) *
x* +
+, -
$num. 0
,0 1
position2 :
.: ;
y; <
,< =
position> F
.F G
widthG L
,L M
$numN P
)P Q
;Q R
if!! 
(!! 
GUI!! 
.!! 
enabled!! 
==!! 
false!! $
)!!$ %
{"" 
int## 
unicode## 
=## 
prop_Unicode## *
.##* +
intValue##+ 3
;##3 4
	EditorGUI$$ 
.$$ 

LabelField$$ $
($$$ %
new$$% (
Rect$$) -
($$- .
rect$$. 2
.$$2 3
x$$3 4
,$$4 5
rect$$6 :
.$$: ;
y$$; <
,$$< =
$num$$> B
,$$B C
$num$$D F
)$$F G
,$$G H
new$$I L

GUIContent$$M W
($$W X
$str$$X t
+$$u v
unicode$$w ~
.$$~ 
ToString	$$ á
(
$$á à
$str
$$à ã
)
$$ã å
+
$$ç é
$str
$$è ô
)
$$ô ö
,
$$ö õ
style
$$ú °
)
$$° ¢
;
$$¢ £
	EditorGUI%% 
.%% 

LabelField%% $
(%%$ %
new%%% (
Rect%%) -
(%%- .
rect%%. 2
.%%2 3
x%%3 4
+%%5 6
$num%%7 :
,%%: ;
rect%%< @
.%%@ A
y%%A B
,%%B C
$num%%D H
,%%H I
$num%%J L
)%%L M
,%%M N
unicode%%O V
<=%%W Y
$num%%Z `
?%%a b
new%%c f

GUIContent%%g q
(%%q r
$str	%%r ç
+
%%é è
unicode
%%ê ó
.
%%ó ò
ToString
%%ò †
(
%%† °
$str
%%° •
)
%%• ¶
+
%%ß ®
$str
%%© ≥
)
%%≥ ¥
:
%%µ ∂
new
%%∑ ∫

GUIContent
%%ª ≈
(
%%≈ ∆
$str
%%∆ ·
+
%%‚ „
unicode
%%‰ Î
.
%%Î Ï
ToString
%%Ï Ù
(
%%Ù ı
$str
%%ı ˘
)
%%˘ ˙
+
%%˚ ¸
$str
%%˝ á
)
%%á à
,
%%à â
style
%%ä è
)
%%è ê
;
%%ê ë
	EditorGUI&& 
.&& 

LabelField&& $
(&&$ %
new&&% (
Rect&&) -
(&&- .
rect&&. 2
.&&2 3
x&&3 4
,&&4 5
rect&&6 :
.&&: ;
y&&; <
+&&= >
$num&&? A
,&&A B
$num&&C F
,&&F G
$num&&H J
)&&J K
,&&K L
new&&M P

GUIContent&&Q [
(&&[ \
$str&&\ w
+&&x y
prop_GlyphIndex	&&z â
.
&&â ä
intValue
&&ä í
+
&&ì î
$str
&&ï ü
)
&&ü †
,
&&† °
style
&&¢ ß
)
&&ß ®
;
&&® ©
	EditorGUI'' 
.'' 

LabelField'' $
(''$ %
new''% (
Rect'') -
(''- .
rect''. 2
.''2 3
x''3 4
,''4 5
rect''6 :
.'': ;
y''; <
+''= >
$num''? A
,''A B
$num''C E
,''E F
$num''G I
)''I J
,''J K
new''L O

GUIContent''P Z
(''Z [
$str''[ s
+''t u

prop_Scale	''v Ä
.
''Ä Å

floatValue
''Å ã
+
''å ç
$str
''é ò
)
''ò ô
,
''ô ö
style
''õ †
)
''† °
;
''° ¢
	DrawGlyph** 
(** 
position** "
,**" #
property**$ ,
)**, -
;**- .
}++ 
else,, 
{-- 
EditorGUIUtility..  
...  !

labelWidth..! +
=.., -
$num... 1
;..1 2
GUI// 
.// 
SetNextControlName// &
(//& '
$str//' 6
)//6 7
;//7 8
	EditorGUI00 
.00 
BeginChangeCheck00 *
(00* +
)00+ ,
;00, -
string11 
unicode11 
=11  
	EditorGUI11! *
.11* +
	TextField11+ 4
(114 5
new115 8
Rect119 =
(11= >
rect11> B
.11B C
x11C D
,11D E
rect11F J
.11J K
y11K L
,11L M
$num11N Q
,11Q R
$num11S U
)11U V
,11V W
$str11X b
,11b c
prop_Unicode11d p
.11p q
intValue11q y
.11y z
ToString	11z Ç
(
11Ç É
$str
11É Ü
)
11Ü á
)
11á à
;
11à â
if33 
(33 
GUI33 
.33 #
GetNameOfFocusedControl33 /
(33/ 0
)330 1
==332 4
$str335 D
)33D E
{44 
char66 
chr66 
=66 
Event66 $
.66$ %
current66% ,
.66, -
	character66- 6
;666 7
if77 
(77 
(77 
chr77 
<77 
$char77 "
||77# %
chr77& )
>77* +
$char77, /
)77/ 0
&&771 3
(774 5
chr775 8
<779 :
$char77; >
||77? A
chr77B E
>77F G
$char77H K
)77K L
&&77M O
(77P Q
chr77Q T
<77U V
$char77W Z
||77[ ]
chr77^ a
>77b c
$char77d g
)77g h
)77h i
{88 
Event99 
.99 
current99 %
.99% &
	character99& /
=990 1
$char992 6
;996 7
}:: 
};; 
if== 
(== 
	EditorGUI== 
.== 
EndChangeCheck== ,
(==, -
)==- .
)==. /
{>> 
prop_Unicode@@  
.@@  !
intValue@@! )
=@@* +
TMP_TextUtilities@@, =
.@@= >
StringHexToInt@@> L
(@@L M
unicode@@M T
)@@T U
;@@U V
}AA 
intDD 
currentGlyphIndexDD %
=DD& '
prop_GlyphIndexDD( 7
.DD7 8
intValueDD8 @
;DD@ A
EditorGUIUtilityFF  
.FF  !

labelWidthFF! +
=FF, -
$numFF. 1
;FF1 2
	EditorGUIGG 
.GG 
BeginChangeCheckGG *
(GG* +
)GG+ ,
;GG, -
	EditorGUIHH 
.HH 
DelayedIntFieldHH )
(HH) *
newHH* -
RectHH. 2
(HH2 3
rectHH3 7
.HH7 8
xHH8 9
,HH9 :
rectHH; ?
.HH? @
yHH@ A
+HHB C
$numHHD F
,HHF G
$numHHH K
,HHK L
$numHHM O
)HHO P
,HHP Q
prop_GlyphIndexHHR a
,HHa b
newHHc f

GUIContentHHg q
(HHq r
$strHHr }
)HH} ~
)HH~ 
;	HH Ä
ifII 
(II 
	EditorGUIII 
.II 
EndChangeCheckII ,
(II, -
)II- .
)II. /
{JJ 
TMP_FontAssetLL !
	fontAssetLL" +
=LL, -
propertyLL. 6
.LL6 7
serializedObjectLL7 G
.LLG H
targetObjectLLH T
asLLU W
TMP_FontAssetLLX e
;LLe f
intOO 
elementIndexOO $
=OO% &
	fontAssetOO' 0
.OO0 1

glyphTableOO1 ;
.OO; <
	FindIndexOO< E
(OOE F
itemOOF J
=>OOK M
itemOON R
.OOR S
indexOOS X
==OOY [
prop_GlyphIndexOO\ k
.OOk l
intValueOOl t
)OOt u
;OOu v
ifQQ 
(QQ 
elementIndexQQ $
==QQ% '
-QQ( )
$numQQ) *
)QQ* +
prop_GlyphIndexRR '
.RR' (
intValueRR( 0
=RR1 2
currentGlyphIndexRR3 D
;RRD E
elseSS 
	fontAssetTT !
.TT! "(
IsFontAssetLookupTablesDirtyTT" >
=TT? @
trueTTA E
;TTE F
}UU 
intWW 

glyphIndexWW 
=WW  
prop_GlyphIndexWW! 0
.WW0 1
intValueWW1 9
;WW9 :
ifZZ 
(ZZ 
GUIZZ 
.ZZ 
enabledZZ 
&&ZZ  "%
m_GlyphSelectedForEditingZZ# <
!=ZZ= ?

glyphIndexZZ@ J
)ZZJ K%
m_GlyphSelectedForEditing[[ -
=[[. /
-[[0 1
$num[[1 2
;[[2 3
if^^ 
(^^ 
GUI^^ 
.^^ 
Button^^ 
(^^ 
new^^ "
Rect^^# '
(^^' (
rect^^( ,
.^^, -
x^^- .
+^^/ 0
$num^^1 4
,^^4 5
rect^^6 :
.^^: ;
y^^; <
+^^= >
$num^^? A
,^^A B
$num^^C E
,^^E F
$num^^G I
)^^I J
,^^J K
new^^L O

GUIContent^^P Z
(^^Z [
$str^^[ g
)^^g h
)^^h i
)^^i j
{__ 
if`` 
(`` %
m_GlyphSelectedForEditing`` 1
==``2 4
-``5 6
$num``6 7
)``7 8%
m_GlyphSelectedForEditingaa 1
=aa2 3

glyphIndexaa4 >
;aa> ?
elsebb %
m_GlyphSelectedForEditingcc 1
=cc2 3
-cc4 5
$numcc5 6
;cc6 7
GUIff 
.ff 
changedff 
=ff  !
falseff" '
;ff' (
}gg 
ifjj 
(jj 

glyphIndexjj 
==jj !%
m_GlyphSelectedForEditingjj" ;
&&jj< >
GUIjj? B
.jjB C
enabledjjC J
)jjJ K
{kk 
TMP_FontAssetmm !
	fontAssetmm" +
=mm, -
propertymm. 6
.mm6 7
serializedObjectmm7 G
.mmG H
targetObjectmmH T
asmmU W
TMP_FontAssetmmX e
;mme f
ifoo 
(oo 
	fontAssetoo !
!=oo" $
nulloo% )
)oo) *
{pp 
intrr 
elementIndexrr (
=rr) *
	fontAssetrr+ 4
.rr4 5

glyphTablerr5 ?
.rr? @
	FindIndexrr@ I
(rrI J
itemrrJ N
=>rrO Q
itemrrR V
.rrV W
indexrrW \
==rr] _

glyphIndexrr` j
)rrj k
;rrk l
iftt 
(tt 
elementIndextt (
!=tt) +
-tt, -
$numtt- .
)tt. /
{uu 
SerializedPropertyvv .
prop_GlyphTablevv/ >
=vv? @
propertyvvA I
.vvI J
serializedObjectvvJ Z
.vvZ [
FindPropertyvv[ g
(vvg h
$strvvh v
)vvv w
;vvw x
SerializedPropertyww .

prop_Glyphww/ 9
=ww: ;
prop_GlyphTableww< K
.wwK L"
GetArrayElementAtIndexwwL b
(wwb c
elementIndexwwc o
)wwo p
;wwp q
SerializedPropertyyy .
prop_GlyphMetricsyy/ @
=yyA B

prop_GlyphyyC M
.yyM N 
FindPropertyRelativeyyN b
(yyb c
$stryyc n
)yyn o
;yyo p
SerializedPropertyzz .
prop_GlyphRectzz/ =
=zz> ?

prop_Glyphzz@ J
.zzJ K 
FindPropertyRelativezzK _
(zz_ `
$strzz` m
)zzm n
;zzn o
Rect||  
newRect||! (
=||) *
EditorGUILayout||+ :
.||: ;
GetControlRect||; I
(||I J
false||J O
,||O P
$num||Q T
)||T U
;||U V
	EditorGUI}} %
.}}% &
DrawRect}}& .
(}}. /
new}}/ 2
Rect}}3 7
(}}7 8
newRect}}8 ?
.}}? @
x}}@ A
+}}B C
$num}}D F
,}}F G
newRect}}H O
.}}O P
y}}P Q
-}}R S
$num}}T V
,}}V W
newRect}}X _
.}}_ `
width}}` e
-}}f g
$num}}h j
,}}j k
newRect}}l s
.}}s t
height}}t z
-}}{ |
$num}}} ~
)}}~ 
,	}} Ä
new
}}Å Ñ
Color
}}Ö ä
(
}}ä ã
$num
}}ã è
,
}}è ê
$num
}}ë ï
,
}}ï ñ
$num
}}ó õ
,
}}õ ú
$num
}}ù ¢
)
}}¢ £
)
}}£ §
;
}}§ •
	EditorGUI~~ %
.~~% &
DrawRect~~& .
(~~. /
new~~/ 2
Rect~~3 7
(~~7 8
newRect~~8 ?
.~~? @
x~~@ A
+~~B C
$num~~D F
,~~F G
newRect~~H O
.~~O P
y~~P Q
-~~R S
$num~~T V
,~~V W
newRect~~X _
.~~_ `
width~~` e
-~~f g
$num~~h j
,~~j k
newRect~~l s
.~~s t
height~~t z
-~~{ |
$num~~} ~
)~~~ 
,	~~ Ä
new
~~Å Ñ
Color
~~Ö ä
(
~~ä ã
$num
~~ã è
,
~~è ê
$num
~~ë ï
,
~~ï ñ
$num
~~ó õ
,
~~õ ú
$num
~~ù °
)
~~° ¢
)
~~¢ £
;
~~£ §
newRect
ÅÅ #
.
ÅÅ# $
x
ÅÅ$ %
+=
ÅÅ& (
$num
ÅÅ) +
;
ÅÅ+ ,
newRect
ÇÇ #
.
ÇÇ# $
y
ÇÇ$ %
-=
ÇÇ& (
$num
ÇÇ) +
;
ÇÇ+ ,
newRect
ÉÉ #
.
ÉÉ# $
width
ÉÉ$ )
+=
ÉÉ* ,
$num
ÉÉ- .
;
ÉÉ. /
	EditorGUI
ÑÑ %
.
ÑÑ% &
PropertyField
ÑÑ& 3
(
ÑÑ3 4
newRect
ÑÑ4 ;
,
ÑÑ; <
prop_GlyphRect
ÑÑ= K
)
ÑÑK L
;
ÑÑL M
newRect
áá #
.
áá# $
y
áá$ %
+=
áá& (
$num
áá) +
;
áá+ ,
	EditorGUI
àà %
.
àà% &
PropertyField
àà& 3
(
àà3 4
newRect
àà4 ;
,
àà; <
prop_GlyphMetrics
àà= N
)
ààN O
;
ààO P
rect
ää  
.
ää  !
y
ää! "
+=
ää# %
$num
ää& )
;
ää) *
}
ãã 
}
åå 
}
çç 
EditorGUIUtility
èè  
.
èè  !

labelWidth
èè! +
=
èè, -
$num
èè. 1
;
èè1 2
	EditorGUI
êê 
.
êê 
PropertyField
êê '
(
êê' (
new
êê( +
Rect
êê, 0
(
êê0 1
rect
êê1 5
.
êê5 6
x
êê6 7
,
êê7 8
rect
êê9 =
.
êê= >
y
êê> ?
+
êê@ A
$num
êêB D
,
êêD E
$num
êêF H
,
êêH I
$num
êêJ L
)
êêL M
,
êêM N

prop_Scale
êêO Y
,
êêY Z
new
êê[ ^

GUIContent
êê_ i
(
êêi j
$str
êêj r
)
êêr s
)
êês t
;
êêt u
	DrawGlyph
ìì 
(
ìì 
position
ìì "
,
ìì" #
property
ìì$ ,
)
ìì, -
;
ìì- .
}
îî 
}
ïï 	
public
óó 
override
óó 
float
óó 
GetPropertyHeight
óó /
(
óó/ 0 
SerializedProperty
óó0 B
property
óóC K
,
óóK L

GUIContent
óóM W
label
óóX ]
)
óó] ^
{
òò 	
return
ôô 
$num
ôô 
;
ôô 
}
öö 	
void
úú 
	DrawGlyph
úú 
(
úú 
Rect
úú 
position
úú $
,
úú$ % 
SerializedProperty
úú& 8
property
úú9 A
)
úúA B
{
ùù 	
TMP_FontAsset
üü 
	fontAsset
üü #
=
üü$ %
property
üü& .
.
üü. /
serializedObject
üü/ ?
.
üü? @
targetObject
üü@ L
as
üüM O
TMP_FontAsset
üüP ]
;
üü] ^
if
°° 
(
°° 
	fontAsset
°° 
==
°° 
null
°° !
)
°°! "
return
¢¢ 
;
¢¢  
SerializedProperty
•• 
prop_GlyphTable
•• .
=
••/ 0
property
••1 9
.
••9 :
serializedObject
••: J
.
••J K
FindProperty
••K W
(
••W X
$str
••X f
)
••f g
;
••g h
int
¶¶ 

glyphIndex
¶¶ 
=
¶¶ 
property
¶¶ %
.
¶¶% &"
FindPropertyRelative
¶¶& :
(
¶¶: ;
$str
¶¶; I
)
¶¶I J
.
¶¶J K
intValue
¶¶K S
;
¶¶S T
int
ßß 
elementIndex
ßß 
=
ßß 
	fontAsset
ßß (
.
ßß( )

glyphTable
ßß) 3
.
ßß3 4
	FindIndex
ßß4 =
(
ßß= >
item
ßß> B
=>
ßßC E
item
ßßF J
.
ßßJ K
index
ßßK P
==
ßßQ S

glyphIndex
ßßT ^
)
ßß^ _
;
ßß_ `
if
™™ 
(
™™ 
elementIndex
™™ 
==
™™ 
-
™™  !
$num
™™! "
)
™™" #
return
´´ 
;
´´  
SerializedProperty
≠≠ 

prop_Glyph
≠≠ )
=
≠≠* +
prop_GlyphTable
≠≠, ;
.
≠≠; <$
GetArrayElementAtIndex
≠≠< R
(
≠≠R S
elementIndex
≠≠S _
)
≠≠_ `
;
≠≠` a
int
∞∞ 

atlasIndex
∞∞ 
=
∞∞ 

prop_Glyph
∞∞ '
.
∞∞' ("
FindPropertyRelative
∞∞( <
(
∞∞< =
$str
∞∞= K
)
∞∞K L
.
∞∞L M
intValue
∞∞M U
;
∞∞U V
	Texture2D
±± 
atlasTexture
±± "
=
±±# $
	fontAsset
±±% .
.
±±. /
atlasTextures
±±/ <
.
±±< =
Length
±±= C
>
±±D E

atlasIndex
±±F P
?
±±Q R
	fontAsset
±±S \
.
±±\ ]
atlasTextures
±±] j
[
±±j k

atlasIndex
±±k u
]
±±u v
:
±±w x
null
±±y }
;
±±} ~
if
≥≥ 
(
≥≥ 
atlasTexture
≥≥ 
==
≥≥ 
null
≥≥  $
)
≥≥$ %
return
¥¥ 
;
¥¥ 
Material
∂∂ 
mat
∂∂ 
;
∂∂ 
if
∑∑ 
(
∑∑ 
(
∑∑ 
(
∑∑ 
GlyphRasterModes
∑∑ "
)
∑∑" #
	fontAsset
∑∑# ,
.
∑∑, -
atlasRenderMode
∑∑- <
&
∑∑= >
GlyphRasterModes
∑∑? O
.
∑∑O P 
RASTER_MODE_BITMAP
∑∑P b
)
∑∑b c
==
∑∑d f
GlyphRasterModes
∑∑g w
.
∑∑w x!
RASTER_MODE_BITMAP∑∑x ä
)∑∑ä ã
{
∏∏ 
mat
ππ 
=
ππ !
TMP_FontAssetEditor
ππ )
.
ππ) *$
internalBitmapMaterial
ππ* @
;
ππ@ A
if
ªª 
(
ªª 
mat
ªª 
==
ªª 
null
ªª 
)
ªª  
return
ºº 
;
ºº 
mat
ææ 
.
ææ 
mainTexture
ææ 
=
ææ  !
atlasTexture
ææ" .
;
ææ. /
mat
øø 
.
øø 
SetColor
øø 
(
øø 
k_ColorProperty
øø ,
,
øø, -
Color
øø. 3
.
øø3 4
white
øø4 9
)
øø9 :
;
øø: ;
}
¿¿ 
else
¡¡ 
{
¬¬ 
mat
√√ 
=
√√ !
TMP_FontAssetEditor
√√ )
.
√√) *!
internalSDFMaterial
√√* =
;
√√= >
if
≈≈ 
(
≈≈ 
mat
≈≈ 
==
≈≈ 
null
≈≈ 
)
≈≈  
return
∆∆ 
;
∆∆ 
mat
»» 
.
»» 
mainTexture
»» 
=
»»  !
atlasTexture
»»" .
;
»». /
mat
…… 
.
…… 
SetFloat
…… 
(
…… 
ShaderUtilities
…… ,
.
……, -
ID_GradientScale
……- =
,
……= >
	fontAsset
……? H
.
……H I
atlasPadding
……I U
+
……V W
$num
……X Y
)
……Y Z
;
……Z [
}
   
Rect
ÕÕ 
glyphDrawPosition
ÕÕ "
=
ÕÕ# $
new
ÕÕ% (
Rect
ÕÕ) -
(
ÕÕ- .
position
ÕÕ. 6
.
ÕÕ6 7
x
ÕÕ7 8
,
ÕÕ8 9
position
ÕÕ: B
.
ÕÕB C
y
ÕÕC D
,
ÕÕD E
$num
ÕÕF H
,
ÕÕH I
$num
ÕÕJ L
)
ÕÕL M
;
ÕÕM N 
SerializedProperty
œœ 
glyphRectProperty
œœ 0
=
œœ1 2

prop_Glyph
œœ3 =
.
œœ= >"
FindPropertyRelative
œœ> R
(
œœR S
$str
œœS `
)
œœ` a
;
œœa b
int
—— 
padding
—— 
=
—— 
	fontAsset
—— #
.
——# $
atlasPadding
——$ 0
;
——0 1
int
”” 
glyphOriginX
”” 
=
”” 
glyphRectProperty
”” 0
.
””0 1"
FindPropertyRelative
””1 E
(
””E F
$str
””F K
)
””K L
.
””L M
intValue
””M U
-
””V W
padding
””X _
;
””_ `
int
‘‘ 
glyphOriginY
‘‘ 
=
‘‘ 
glyphRectProperty
‘‘ 0
.
‘‘0 1"
FindPropertyRelative
‘‘1 E
(
‘‘E F
$str
‘‘F K
)
‘‘K L
.
‘‘L M
intValue
‘‘M U
-
‘‘V W
padding
‘‘X _
;
‘‘_ `
int
’’ 

glyphWidth
’’ 
=
’’ 
glyphRectProperty
’’ .
.
’’. /"
FindPropertyRelative
’’/ C
(
’’C D
$str
’’D M
)
’’M N
.
’’N O
intValue
’’O W
+
’’X Y
padding
’’Z a
*
’’b c
$num
’’d e
;
’’e f
int
÷÷ 
glyphHeight
÷÷ 
=
÷÷ 
glyphRectProperty
÷÷ /
.
÷÷/ 0"
FindPropertyRelative
÷÷0 D
(
÷÷D E
$str
÷÷E O
)
÷÷O P
.
÷÷P Q
intValue
÷÷Q Y
+
÷÷Z [
padding
÷÷\ c
*
÷÷d e
$num
÷÷f g
;
÷÷g h
float
ÿÿ 
normalizedHeight
ÿÿ "
=
ÿÿ# $
	fontAsset
ÿÿ% .
.
ÿÿ. /
faceInfo
ÿÿ/ 7
.
ÿÿ7 8

ascentLine
ÿÿ8 B
-
ÿÿC D
	fontAsset
ÿÿE N
.
ÿÿN O
faceInfo
ÿÿO W
.
ÿÿW X
descentLine
ÿÿX c
;
ÿÿc d
float
ŸŸ 
scale
ŸŸ 
=
ŸŸ 
glyphDrawPosition
ŸŸ +
.
ŸŸ+ ,
width
ŸŸ, 1
/
ŸŸ2 3
normalizedHeight
ŸŸ4 D
;
ŸŸD E
Rect
‹‹ 
	texCoords
‹‹ 
=
‹‹ 
new
‹‹  
Rect
‹‹! %
(
‹‹% &
(
‹‹& '
float
‹‹' ,
)
‹‹, -
glyphOriginX
‹‹- 9
/
‹‹: ;
atlasTexture
‹‹< H
.
‹‹H I
width
‹‹I N
,
‹‹N O
(
‹‹P Q
float
‹‹Q V
)
‹‹V W
glyphOriginY
‹‹W c
/
‹‹d e
atlasTexture
‹‹f r
.
‹‹r s
height
‹‹s y
,
‹‹y z
(
‹‹{ |
float‹‹| Å
)‹‹Å Ç

glyphWidth‹‹Ç å
/‹‹ç é
atlasTexture‹‹è õ
.‹‹õ ú
width‹‹ú °
,‹‹° ¢
(‹‹£ §
float‹‹§ ©
)‹‹© ™
glyphHeight‹‹™ µ
/‹‹∂ ∑
atlasTexture‹‹∏ ƒ
.‹‹ƒ ≈
height‹‹≈ À
)‹‹À Ã
;‹‹Ã Õ
if
ﬁﬁ 
(
ﬁﬁ 
Event
ﬁﬁ 
.
ﬁﬁ 
current
ﬁﬁ 
.
ﬁﬁ 
type
ﬁﬁ "
==
ﬁﬁ# %
	EventType
ﬁﬁ& /
.
ﬁﬁ/ 0
Repaint
ﬁﬁ0 7
)
ﬁﬁ7 8
{
ﬂﬂ 
glyphDrawPosition
‡‡ !
.
‡‡! "
x
‡‡" #
+=
‡‡$ &
(
‡‡' (
glyphDrawPosition
‡‡( 9
.
‡‡9 :
width
‡‡: ?
-
‡‡@ A

glyphWidth
‡‡B L
*
‡‡M N
scale
‡‡O T
)
‡‡T U
/
‡‡V W
$num
‡‡X Y
;
‡‡Y Z
glyphDrawPosition
·· !
.
··! "
y
··" #
+=
··$ &
(
··' (
glyphDrawPosition
··( 9
.
··9 :
height
··: @
-
··A B
glyphHeight
··C N
*
··O P
scale
··Q V
)
··V W
/
··X Y
$num
··Z [
;
··[ \
glyphDrawPosition
‚‚ !
.
‚‚! "
width
‚‚" '
=
‚‚( )

glyphWidth
‚‚* 4
*
‚‚5 6
scale
‚‚7 <
;
‚‚< =
glyphDrawPosition
„„ !
.
„„! "
height
„„" (
=
„„) *
glyphHeight
„„+ 6
*
„„7 8
scale
„„9 >
;
„„> ?
Graphics
ÊÊ 
.
ÊÊ 
DrawTexture
ÊÊ $
(
ÊÊ$ %
glyphDrawPosition
ÊÊ% 6
,
ÊÊ6 7
atlasTexture
ÊÊ8 D
,
ÊÊD E
	texCoords
ÊÊF O
,
ÊÊO P
$num
ÊÊQ R
,
ÊÊR S
$num
ÊÊT U
,
ÊÊU V
$num
ÊÊW X
,
ÊÊX Y
$num
ÊÊZ [
,
ÊÊ[ \
new
ÊÊ] `
Color
ÊÊa f
(
ÊÊf g
$num
ÊÊg i
,
ÊÊi j
$num
ÊÊk m
,
ÊÊm n
$num
ÊÊo q
)
ÊÊq r
,
ÊÊr s
mat
ÊÊt w
)
ÊÊw x
;
ÊÊx y
}
ÁÁ 
}
ËË 	
}
ÍÍ 
}ÎÎ — 
üD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMPro_EditorShaderUtilities.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
public

 

static

 
class

 !
EditorShaderUtilities

 -
{ 
public 
static 
void "
CopyMaterialProperties 1
(1 2
Material2 :
source; A
,A B
MaterialC K
destinationL W
)W X
{ 	
MaterialProperty 
[ 
] 
source_prop *
=+ ,
MaterialEditor- ;
.; <!
GetMaterialProperties< Q
(Q R
newR U
MaterialV ^
[^ _
]_ `
{a b
sourcec i
}j k
)k l
;l m
for 
( 
int 
i 
= 
$num 
; 
i 
< 
source_prop  +
.+ ,
Length, 2
;2 3
i4 5
++5 7
)7 8
{ 
int 
property_ID 
=  !
Shader" (
.( )
PropertyToID) 5
(5 6
source_prop6 A
[A B
iB C
]C D
.D E
nameE I
)I J
;J K
if 
( 
destination 
.  
HasProperty  +
(+ ,
property_ID, 7
)7 8
)8 9
{ 
switch 
( 

ShaderUtil &
.& '
GetPropertyType' 6
(6 7
source7 =
.= >
shader> D
,D E
iF G
)G H
)H I
{ 
case 

ShaderUtil '
.' (
ShaderPropertyType( :
.: ;
Color; @
:@ A
destination '
.' (
SetColor( 0
(0 1
property_ID1 <
,< =
source> D
.D E
GetColorE M
(M N
property_IDN Y
)Y Z
)Z [
;[ \
break   !
;  ! "
case!! 

ShaderUtil!! '
.!!' (
ShaderPropertyType!!( :
.!!: ;
Float!!; @
:!!@ A
destination"" '
.""' (
SetFloat""( 0
(""0 1
property_ID""1 <
,""< =
source""> D
.""D E
GetFloat""E M
(""M N
property_ID""N Y
)""Y Z
)""Z [
;""[ \
break## !
;##! "
case$$ 

ShaderUtil$$ '
.$$' (
ShaderPropertyType$$( :
.$$: ;
Range$$; @
:$$@ A
destination%% '
.%%' (
SetFloat%%( 0
(%%0 1
property_ID%%1 <
,%%< =
source%%> D
.%%D E
GetFloat%%E M
(%%M N
property_ID%%N Y
)%%Y Z
)%%Z [
;%%[ \
break&& !
;&&! "
case'' 

ShaderUtil'' '
.''' (
ShaderPropertyType''( :
.'': ;
TexEnv''; A
:''A B
destination(( '
.((' (

SetTexture((( 2
(((2 3
property_ID((3 >
,((> ?
source((@ F
.((F G

GetTexture((G Q
(((Q R
property_ID((R ]
)((] ^
)((^ _
;((_ `
break)) !
;))! "
case** 

ShaderUtil** '
.**' (
ShaderPropertyType**( :
.**: ;
Vector**; A
:**A B
destination++ '
.++' (
	SetVector++( 1
(++1 2
property_ID++2 =
,++= >
source++? E
.++E F
	GetVector++F O
(++O P
property_ID++P [
)++[ \
)++\ ]
;++] ^
break,, !
;,,! "
}-- 
}.. 
}// 
}11 	
}33 
}55 √Ø
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_SpriteAssetImporter.cs
	namespace

 	
TMPro


 
{ 
public 

class #
TMP_SpriteAssetImporter (
:) *
EditorWindow+ 7
{ 
[ 	
MenuItem	 
( 
$str 6
,6 7
false8 =
,= >
$num? C
)C D
]D E
public 
static 
void &
ShowFontAtlasCreatorWindow 5
(5 6
)6 7
{ 	
var 
window 
= 
	GetWindow "
<" ##
TMP_SpriteAssetImporter# :
>: ;
(; <
)< =
;= >
window 
. 
titleContent 
=  !
new" %

GUIContent& 0
(0 1
$str1 B
)B C
;C D
window 
. 
Focus 
( 
) 
; 
} 	
	Texture2D 
m_SpriteAtlas 
;  $
SpriteAssetImportFormats  
m_SpriteDataFormat! 3
=4 5$
SpriteAssetImportFormats6 N
.N O"
TexturePackerJsonArrayO e
;e f
	TextAsset 

m_JsonFile 
; 
string 
m_CreationFeedback !
;! "
TMP_SpriteAsset 
m_SpriteAsset %
;% &
List 
< 

TMP_Sprite 
> 
m_SpriteInfoList )
=* +
new, /
List0 4
<4 5

TMP_Sprite5 ?
>? @
(@ A
)A B
;B C
void## 
OnEnable## 
(## 
)## 
{$$ 	
SetEditorWindowSize&& 
(&&  
)&&  !
;&&! "
}'' 	
public,, 
void,, 
OnGUI,, 
(,, 
),, 
{-- 	
DrawEditorPanel.. 
(.. 
).. 
;.. 
}// 	
private44 
void44 
	OnDisable44 
(44 
)44  
{55 	
if77 
(77 
m_SpriteAsset77 
!=77  
null77! %
&&77& (
!77) *
EditorUtility77* 7
.777 8
IsPersistent778 D
(77D E
m_SpriteAsset77E R
)77R S
)77S T
DestroyImmediate88  
(88  !
m_SpriteAsset88! .
)88. /
;88/ 0
}99 	
void>> 
DrawEditorPanel>> 
(>> 
)>> 
{?? 	
	GUILayoutAA 
.AA 
LabelAA 
(AA 
$strAA -
,AA- .
EditorStylesAA/ ;
.AA; <
	boldLabelAA< E
)AAE F
;AAF G
	EditorGUICC 
.CC 
BeginChangeCheckCC &
(CC& '
)CC' (
;CC( )

m_JsonFileFF 
=FF 
EditorGUILayoutFF (
.FF( )
ObjectFieldFF) 4
(FF4 5
$strFF5 I
,FFI J

m_JsonFileFFK U
,FFU V
typeofFFW ]
(FF] ^
	TextAssetFF^ g
)FFg h
,FFh i
falseFFj o
)FFo p
asFFq s
	TextAssetFFt }
;FF} ~
m_SpriteDataFormatHH 
=HH  
(HH! "$
SpriteAssetImportFormatsHH" :
)HH: ;
EditorGUILayoutHH; J
.HHJ K
	EnumPopupHHK T
(HHT U
$strHHU d
,HHd e
m_SpriteDataFormatHHf x
)HHx y
;HHy z
m_SpriteAtlasKK 
=KK 
EditorGUILayoutKK +
.KK+ ,
ObjectFieldKK, 7
(KK7 8
$strKK8 N
,KKN O
m_SpriteAtlasKKP ]
,KK] ^
typeofKK_ e
(KKe f
	Texture2DKKf o
)KKo p
,KKp q
falseKKr w
)KKw x
asKKy {
	Texture2D	KK| Ö
;
KKÖ Ü
ifMM 
(MM 
	EditorGUIMM 
.MM 
EndChangeCheckMM (
(MM( )
)MM) *
)MM* +
{NN 
m_CreationFeedbackOO "
=OO# $
stringOO% +
.OO+ ,
EmptyOO, 1
;OO1 2
}PP 
	GUILayoutRR 
.RR 
SpaceRR 
(RR 
$numRR 
)RR 
;RR  
GUITT 
.TT 
enabledTT 
=TT 

m_JsonFileTT $
!=TT% '
nullTT( ,
&&TT- /
m_SpriteAtlasTT0 =
!=TT> @
nullTTA E
&&TTF H
m_SpriteDataFormatTTI [
!=TT\ ^$
SpriteAssetImportFormatsTT_ w
.TTw x
NoneTTx |
;TT| }
ifWW 
(WW 
	GUILayoutWW 
.WW 
ButtonWW  
(WW  !
$strWW! 6
)WW6 7
)WW7 8
{XX 
m_CreationFeedbackYY "
=YY# $
stringYY% +
.YY+ ,
EmptyYY, 1
;YY1 2
if\\ 
(\\ 
m_SpriteAsset\\ !
!=\\" $
null\\% )
&&\\* ,
!\\- .
EditorUtility\\. ;
.\\; <
IsPersistent\\< H
(\\H I
m_SpriteAsset\\I V
)\\V W
)\\W X
DestroyImmediate]] $
(]]$ %
m_SpriteAsset]]% 2
)]]2 3
;]]3 4
if`` 
(`` 

m_JsonFile`` 
!=`` !
null``" &
)``& '
{aa 
switchbb 
(bb 
m_SpriteDataFormatbb .
)bb. /
{cc 
casedd $
SpriteAssetImportFormatsdd 5
.dd5 6"
TexturePackerJsonArraydd6 L
:ddL M#
TexturePacker_JsonArrayee 3
.ee3 4
SpriteDataObjectee4 D
jsonDataeeE M
=eeN O
nulleeP T
;eeT U
tryff 
{gg 
jsonDatahh  (
=hh) *
JsonUtilityhh+ 6
.hh6 7
FromJsonhh7 ?
<hh? @#
TexturePacker_JsonArrayhh@ W
.hhW X
SpriteDataObjecthhX h
>hhh i
(hhi j

m_JsonFilehhj t
.hht u
texthhu y
)hhy z
;hhz {
}ii 
catchjj !
{kk 
m_CreationFeedbackll  2
=ll3 4
$strll5 T
+llU V

m_JsonFilellW a
.lla b
namellb f
+llg h
$str	lli ú
;
llú ù
}mm 
ifoo 
(oo  
jsonDataoo  (
!=oo) +
nulloo, 0
&&oo1 3
jsonDataoo4 <
.oo< =
framesoo= C
!=ooD F
nullooG K
&&ooL N
jsonDataooO W
.ooW X
framesooX ^
.oo^ _
Countoo_ d
>ooe f
$numoog h
)ooh i
{pp 
intqq  #
spriteCountqq$ /
=qq0 1
jsonDataqq2 :
.qq: ;
framesqq; A
.qqA B
CountqqB G
;qqG H
m_CreationFeedbacktt  2
=tt3 4
$strtt5 d
;ttd e
m_CreationFeedbackuu  2
+=uu3 5
$struu6 J
+uuK L
spriteCountuuM X
+uuY Z
$str	uu[ ä
;
uuä ã
m_SpriteAssetxx  -
=xx. /
CreateInstancexx0 >
<xx> ?
TMP_SpriteAssetxx? N
>xxN O
(xxO P
)xxP Q
;xxQ R
m_SpriteAsset{{  -
.{{- .
spriteSheet{{. 9
={{: ;
m_SpriteAtlas{{< I
;{{I J
List}}  $
<}}$ %
TMP_SpriteGlyph}}% 4
>}}4 5
spriteGlyphTable}}6 F
=}}G H
new}}I L
List}}M Q
<}}Q R
TMP_SpriteGlyph}}R a
>}}a b
(}}b c
)}}c d
;}}d e
List~~  $
<~~$ %
TMP_SpriteCharacter~~% 8
>~~8 9 
spriteCharacterTable~~: N
=~~O P
new~~Q T
List~~U Y
<~~Y Z
TMP_SpriteCharacter~~Z m
>~~m n
(~~n o
)~~o p
;~~p q"
PopulateSpriteTables
ÄÄ  4
(
ÄÄ4 5
jsonData
ÄÄ5 =
,
ÄÄ= >"
spriteCharacterTable
ÄÄ? S
,
ÄÄS T
spriteGlyphTable
ÄÄU e
)
ÄÄe f
;
ÄÄf g
m_SpriteAsset
ÇÇ  -
.
ÇÇ- ."
spriteCharacterTable
ÇÇ. B
=
ÇÇC D"
spriteCharacterTable
ÇÇE Y
;
ÇÇY Z
m_SpriteAsset
ÉÉ  -
.
ÉÉ- .
spriteGlyphTable
ÉÉ. >
=
ÉÉ? @
spriteGlyphTable
ÉÉA Q
;
ÉÉQ R
}
ÑÑ 
break
ÖÖ !
;
ÖÖ! "
}
ÜÜ 
}
áá 
}
àà 
GUI
ää 
.
ää 
enabled
ää 
=
ää 
true
ää 
;
ää 
	GUILayout
çç 
.
çç 
Space
çç 
(
çç 
$num
çç 
)
çç 
;
çç 
	GUILayout
éé 
.
éé 
BeginVertical
éé #
(
éé# $
EditorStyles
éé$ 0
.
éé0 1
helpBox
éé1 8
,
éé8 9
	GUILayout
éé: C
.
ééC D
Height
ééD J
(
ééJ K
$num
ééK M
)
ééM N
)
ééN O
;
ééO P
{
èè 
EditorGUILayout
êê 
.
êê  
TextArea
êê  (
(
êê( ) 
m_CreationFeedback
êê) ;
,
êê; < 
TMP_UIStyleManager
êê= O
.
êêO P
label
êêP U
)
êêU V
;
êêV W
}
ëë 
	GUILayout
íí 
.
íí 
EndVertical
íí !
(
íí! "
)
íí" #
;
íí# $
	GUILayout
îî 
.
îî 
Space
îî 
(
îî 
$num
îî 
)
îî 
;
îî 
GUI
ïï 
.
ïï 
enabled
ïï 
=
ïï 

m_JsonFile
ïï $
!=
ïï% '
null
ïï( ,
&&
ïï- /
m_SpriteAtlas
ïï0 =
&&
ïï> @
m_SpriteInfoList
ïïA Q
!=
ïïR T
null
ïïU Y
&&
ïïZ \
m_SpriteAsset
ïï] j
!=
ïïk m
null
ïïn r
;
ïïr s
if
ññ 
(
ññ 
	GUILayout
ññ 
.
ññ 
Button
ññ  
(
ññ  !
$str
ññ! 4
)
ññ4 5
&&
ññ6 8

m_JsonFile
ññ9 C
!=
ññD F
null
ññG K
)
ññK L
{
óó 
string
òò 
filePath
òò 
=
òò  !
EditorUtility
òò" /
.
òò/ 0
SaveFilePanel
òò0 =
(
òò= >
$str
òò> V
,
òòV W
new
òòX [
FileInfo
òò\ d
(
òòd e
AssetDatabase
òòe r
.
òòr s
GetAssetPath
òòs 
(òò Ä

m_JsonFileòòÄ ä
)òòä ã
)òòã å
.òòå ç
DirectoryNameòòç ö
,òòö õ

m_JsonFileòòú ¶
.òò¶ ß
nameòòß ´
,òò´ ¨
$stròò≠ ¥
)òò¥ µ
;òòµ ∂
if
öö 
(
öö 
filePath
öö 
.
öö 
Length
öö #
==
öö$ &
$num
öö' (
)
öö( )
return
õõ 
;
õõ 
SaveSpriteAsset
ùù 
(
ùù  
filePath
ùù  (
)
ùù( )
;
ùù) *
}
ûû 
GUI
üü 
.
üü 
enabled
üü 
=
üü 
true
üü 
;
üü 
}
†† 	
private
®® 
static
®® 
void
®® "
PopulateSpriteTables
®® 0
(
®®0 1%
TexturePacker_JsonArray
®®1 H
.
®®H I
SpriteDataObject
®®I Y
spriteDataObject
®®Z j
,
®®j k
List
®®l p
<
®®p q"
TMP_SpriteCharacter®®q Ñ
>®®Ñ Ö$
spriteCharacterTable®®Ü ö
,®®ö õ
List®®ú †
<®®† °
TMP_SpriteGlyph®®° ∞
>®®∞ ± 
spriteGlyphTable®®≤ ¬
)®®¬ √
{
©© 	
List
™™ 
<
™™ %
TexturePacker_JsonArray
™™ (
.
™™( )
Frame
™™) .
>
™™. /
importedSprites
™™0 ?
=
™™@ A
spriteDataObject
™™B R
.
™™R S
frames
™™S Y
;
™™Y Z
float
¨¨ 
atlasHeight
¨¨ 
=
¨¨ 
spriteDataObject
¨¨  0
.
¨¨0 1
meta
¨¨1 5
.
¨¨5 6
size
¨¨6 :
.
¨¨: ;
h
¨¨; <
;
¨¨< =
for
ÆÆ 
(
ÆÆ 
int
ÆÆ 
i
ÆÆ 
=
ÆÆ 
$num
ÆÆ 
;
ÆÆ 
i
ÆÆ 
<
ÆÆ 
importedSprites
ÆÆ  /
.
ÆÆ/ 0
Count
ÆÆ0 5
;
ÆÆ5 6
i
ÆÆ7 8
++
ÆÆ8 :
)
ÆÆ: ;
{
ØØ %
TexturePacker_JsonArray
∞∞ '
.
∞∞' (
Frame
∞∞( -

spriteData
∞∞. 8
=
∞∞9 :
importedSprites
∞∞; J
[
∞∞J K
i
∞∞K L
]
∞∞L M
;
∞∞M N
TMP_SpriteGlyph
≤≤ 
spriteGlyph
≤≤  +
=
≤≤, -
new
≤≤. 1
TMP_SpriteGlyph
≤≤2 A
(
≤≤A B
)
≤≤B C
;
≤≤C D
spriteGlyph
≥≥ 
.
≥≥ 
index
≥≥ !
=
≥≥" #
(
≥≥$ %
uint
≥≥% )
)
≥≥) *
i
≥≥* +
;
≥≥+ ,
spriteGlyph
µµ 
.
µµ 
metrics
µµ #
=
µµ$ %
new
µµ& )
GlyphMetrics
µµ* 6
(
µµ6 7
(
µµ7 8
int
µµ8 ;
)
µµ; <

spriteData
µµ< F
.
µµF G
frame
µµG L
.
µµL M
w
µµM N
,
µµN O
(
µµP Q
int
µµQ T
)
µµT U

spriteData
µµU _
.
µµ_ `
frame
µµ` e
.
µµe f
h
µµf g
,
µµg h
-
µµi j

spriteData
µµj t
.
µµt u
frame
µµu z
.
µµz {
w
µµ{ |
*
µµ} ~

spriteDataµµ â
.µµâ ä
pivotµµä è
.µµè ê
xµµê ë
,µµë í

spriteDataµµì ù
.µµù û
frameµµû £
.µµ£ §
hµµ§ •
*µµ¶ ß

spriteDataµµ® ≤
.µµ≤ ≥
pivotµµ≥ ∏
.µµ∏ π
yµµπ ∫
,µµ∫ ª
(µµº Ω
intµµΩ ¿
)µµ¿ ¡

spriteDataµµ¡ À
.µµÀ Ã
frameµµÃ —
.µµ— “
wµµ“ ”
)µµ” ‘
;µµ‘ ’
spriteGlyph
∂∂ 
.
∂∂ 
	glyphRect
∂∂ %
=
∂∂& '
new
∂∂( +
	GlyphRect
∂∂, 5
(
∂∂5 6
(
∂∂6 7
int
∂∂7 :
)
∂∂: ;

spriteData
∂∂; E
.
∂∂E F
frame
∂∂F K
.
∂∂K L
x
∂∂L M
,
∂∂M N
(
∂∂O P
int
∂∂P S
)
∂∂S T
(
∂∂T U
atlasHeight
∂∂U `
-
∂∂a b

spriteData
∂∂c m
.
∂∂m n
frame
∂∂n s
.
∂∂s t
h
∂∂t u
-
∂∂v w

spriteData∂∂x Ç
.∂∂Ç É
frame∂∂É à
.∂∂à â
y∂∂â ä
)∂∂ä ã
,∂∂ã å
(∂∂ç é
int∂∂é ë
)∂∂ë í

spriteData∂∂í ú
.∂∂ú ù
frame∂∂ù ¢
.∂∂¢ £
w∂∂£ §
,∂∂§ •
(∂∂¶ ß
int∂∂ß ™
)∂∂™ ´

spriteData∂∂´ µ
.∂∂µ ∂
frame∂∂∂ ª
.∂∂ª º
h∂∂º Ω
)∂∂Ω æ
;∂∂æ ø
spriteGlyph
∑∑ 
.
∑∑ 
scale
∑∑ !
=
∑∑" #
$num
∑∑$ (
;
∑∑( )
spriteGlyphTable
ππ  
.
ππ  !
Add
ππ! $
(
ππ$ %
spriteGlyph
ππ% 0
)
ππ0 1
;
ππ1 2!
TMP_SpriteCharacter
ªª #
spriteCharacter
ªª$ 3
=
ªª4 5
new
ªª6 9!
TMP_SpriteCharacter
ªª: M
(
ªªM N
$num
ªªN O
,
ªªO P
spriteGlyph
ªªQ \
)
ªª\ ]
;
ªª] ^
spriteCharacter
ºº 
.
ºº  
name
ºº  $
=
ºº% &

spriteData
ºº' 1
.
ºº1 2
filename
ºº2 :
.
ºº: ;
Split
ºº; @
(
ºº@ A
$char
ººA D
)
ººD E
[
ººE F
$num
ººF G
]
ººG H
;
ººH I
spriteCharacter
ΩΩ 
.
ΩΩ  
unicode
ΩΩ  '
=
ΩΩ( )
$num
ΩΩ* 0
;
ΩΩ0 1
spriteCharacter
ææ 
.
ææ  
scale
ææ  %
=
ææ& '
$num
ææ( ,
;
ææ, -"
spriteCharacterTable
¿¿ $
.
¿¿$ %
Add
¿¿% (
(
¿¿( )
spriteCharacter
¿¿) 8
)
¿¿8 9
;
¿¿9 :
}
¡¡ 
}
¬¬ 	
void
»» 
SaveSpriteAsset
»» 
(
»» 
string
»» #
filePath
»»$ ,
)
»», -
{
…… 	
filePath
   
=
   
filePath
   
.
    
	Substring
    )
(
  ) *
$num
  * +
,
  + ,
filePath
  - 5
.
  5 6
Length
  6 <
-
  = >
$num
  ? @
)
  @ A
;
  A B
string
ÃÃ 
dataPath
ÃÃ 
=
ÃÃ 
Application
ÃÃ )
.
ÃÃ) *
dataPath
ÃÃ* 2
;
ÃÃ2 3
if
ŒŒ 
(
ŒŒ 
filePath
ŒŒ 
.
ŒŒ 
IndexOf
ŒŒ  
(
ŒŒ  !
dataPath
ŒŒ! )
,
ŒŒ) *
System
ŒŒ+ 1
.
ŒŒ1 2
StringComparison
ŒŒ2 B
.
ŒŒB C(
InvariantCultureIgnoreCase
ŒŒC ]
)
ŒŒ] ^
==
ŒŒ_ a
-
ŒŒb c
$num
ŒŒc d
)
ŒŒd e
{
œœ 
Debug
–– 
.
–– 
LogError
–– 
(
–– 
$str–– ¶
+––ß ®
dataPath––© ±
+––≤ ≥
$str––¥ ∏
)––∏ π
;––π ∫
return
—— 
;
—— 
}
““ 
string
‘‘ 
relativeAssetPath
‘‘ $
=
‘‘% &
filePath
‘‘' /
.
‘‘/ 0
	Substring
‘‘0 9
(
‘‘9 :
dataPath
‘‘: B
.
‘‘B C
Length
‘‘C I
-
‘‘J K
$num
‘‘L M
)
‘‘M N
;
‘‘N O
string
’’ 
dirName
’’ 
=
’’ 
Path
’’ !
.
’’! "
GetDirectoryName
’’" 2
(
’’2 3
relativeAssetPath
’’3 D
)
’’D E
;
’’E F
string
÷÷ 
fileName
÷÷ 
=
÷÷ 
Path
÷÷ "
.
÷÷" #)
GetFileNameWithoutExtension
÷÷# >
(
÷÷> ?
relativeAssetPath
÷÷? P
)
÷÷P Q
;
÷÷Q R
string
◊◊ 
	pathNoExt
◊◊ 
=
◊◊ 
dirName
◊◊ &
+
◊◊' (
$str
◊◊) ,
+
◊◊- .
fileName
◊◊/ 7
;
◊◊7 8
AssetDatabase
⁄⁄ 
.
⁄⁄ 
CreateAsset
⁄⁄ %
(
⁄⁄% &
m_SpriteAsset
⁄⁄& 3
,
⁄⁄3 4
	pathNoExt
⁄⁄5 >
+
⁄⁄? @
$str
⁄⁄A I
)
⁄⁄I J
;
⁄⁄J K
m_SpriteAsset
›› 
.
›› 
version
›› !
=
››" #
$str
››$ +
;
››+ ,
m_SpriteAsset
‡‡ 
.
‡‡ 
hashCode
‡‡ "
=
‡‡# $
TMP_TextUtilities
‡‡% 6
.
‡‡6 7
GetSimpleHashCode
‡‡7 H
(
‡‡H I
m_SpriteAsset
‡‡I V
.
‡‡V W
name
‡‡W [
)
‡‡[ \
;
‡‡\ ] 
AddDefaultMaterial
„„ 
(
„„ 
m_SpriteAsset
„„ ,
)
„„, -
;
„„- .
}
‰‰ 	
static
ÍÍ 
void
ÍÍ  
AddDefaultMaterial
ÍÍ &
(
ÍÍ& '
TMP_SpriteAsset
ÍÍ' 6
spriteAsset
ÍÍ7 B
)
ÍÍB C
{
ÎÎ 	
Shader
ÏÏ 
shader
ÏÏ 
=
ÏÏ 
Shader
ÏÏ "
.
ÏÏ" #
Find
ÏÏ# '
(
ÏÏ' (
$str
ÏÏ( <
)
ÏÏ< =
;
ÏÏ= >
Material
ÌÌ 
material
ÌÌ 
=
ÌÌ 
new
ÌÌ  #
Material
ÌÌ$ ,
(
ÌÌ, -
shader
ÌÌ- 3
)
ÌÌ3 4
;
ÌÌ4 5
material
ÓÓ 
.
ÓÓ 

SetTexture
ÓÓ 
(
ÓÓ  
ShaderUtilities
ÓÓ  /
.
ÓÓ/ 0

ID_MainTex
ÓÓ0 :
,
ÓÓ: ;
spriteAsset
ÓÓ< G
.
ÓÓG H
spriteSheet
ÓÓH S
)
ÓÓS T
;
ÓÓT U
spriteAsset
 
.
 
material
  
=
! "
material
# +
;
+ ,
material
ÒÒ 
.
ÒÒ 
	hideFlags
ÒÒ 
=
ÒÒ  
	HideFlags
ÒÒ! *
.
ÒÒ* +
HideInHierarchy
ÒÒ+ :
;
ÒÒ: ;
AssetDatabase
ÚÚ 
.
ÚÚ 
AddObjectToAsset
ÚÚ *
(
ÚÚ* +
material
ÚÚ+ 3
,
ÚÚ3 4
spriteAsset
ÚÚ5 @
)
ÚÚ@ A
;
ÚÚA B
}
ÛÛ 	
void
¯¯ !
SetEditorWindowSize
¯¯  
(
¯¯  !
)
¯¯! "
{
˘˘ 	
EditorWindow
˙˙ 
editorWindow
˙˙ %
=
˙˙& '
this
˙˙( ,
;
˙˙, -
Vector2
¸¸ 
currentWindowSize
¸¸ %
=
¸¸& '
editorWindow
¸¸( 4
.
¸¸4 5
minSize
¸¸5 <
;
¸¸< =
editorWindow
˛˛ 
.
˛˛ 
minSize
˛˛  
=
˛˛! "
new
˛˛# &
Vector2
˛˛' .
(
˛˛. /
Mathf
˛˛/ 4
.
˛˛4 5
Max
˛˛5 8
(
˛˛8 9
$num
˛˛9 <
,
˛˛< =
currentWindowSize
˛˛> O
.
˛˛O P
x
˛˛P Q
)
˛˛Q R
,
˛˛R S
Mathf
˛˛T Y
.
˛˛Y Z
Max
˛˛Z ]
(
˛˛] ^
$num
˛˛^ a
,
˛˛a b
currentWindowSize
˛˛c t
.
˛˛t u
y
˛˛u v
)
˛˛v w
)
˛˛w x
;
˛˛x y
}
ˇˇ 	
}
ÄÄ 
}ÅÅ ñ
ìD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\GlyphInfoDrawer.cs†‡
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_SettingsEditor.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{		 
[

 
CustomEditor

 
(

 
typeof

 
(

 
TMP_Settings

 %
)

% &
)

& '
]

' (
public 

class 
TMP_SettingsEditor #
:$ %
Editor& ,
{ 
internal 
class 
Styles 
{ 	
public 
static 
readonly "

GUIContent# -!
defaultFontAssetLabel. C
=D E
newF I

GUIContentJ T
(T U
$strU i
,i j
$str	k €
)
€ ‹
;
‹ ›
public 
static 
readonly "

GUIContent# -%
defaultFontAssetPathLabel. G
=H I
newJ M

GUIContentN X
(X Y
$strY r
,r s
$str	t ı
)
ı ˆ
;
ˆ ˜
public 
static 
readonly "

GUIContent# -#
fallbackFontAssetsLabel. E
=F G
newH K

GUIContentL V
(V W
$strW m
,m n
$str	o ÿ
)
ÿ Ÿ
;
Ÿ ⁄
public 
static 
readonly "

GUIContent# -'
fallbackFontAssetsListLabel. I
=J K
newL O

GUIContentP Z
(Z [
$str[ v
,v w
$str	x ·
)
· ‚
;
‚ „
public 
static 
readonly "

GUIContent# -)
fallbackMaterialSettingsLabel. K
=L M
newN Q

GUIContentR \
(\ ]
$str] y
)y z
;z {
public 
static 
readonly "

GUIContent# -$
matchMaterialPresetLabel. F
=G H
newI L

GUIContentM W
(W X
$strX p
)p q
;q r
public 
static 
readonly "

GUIContent# -)
containerDefaultSettingsLabel. K
=L M
newN Q

GUIContentR \
(\ ]
$str] ~
)~ 
;	 Ä
public 
static 
readonly "

GUIContent# -
textMeshProLabel. >
=? @
newA D

GUIContentE O
(O P
$strP ]
)] ^
;^ _
public 
static 
readonly "

GUIContent# -
textMeshProUiLabel. @
=A B
newC F

GUIContentG Q
(Q R
$strR b
)b c
;c d
public 
static 
readonly "

GUIContent# -
enableRaycastTarget. A
=B C
newD G

GUIContentH R
(R S
$strS j
)j k
;k l
public 
static 
readonly "

GUIContent# -"
autoSizeContainerLabel. D
=E F
newG J

GUIContentK U
(U V
$strV p
,p q
$str	r ©
)
© ™
;
™ ´
public 
static 
readonly "

GUIContent# -(
isTextObjectScaleStaticLabel. J
=K L
newM P

GUIContentQ [
([ \
$str\ t
,t u
$str	v Ê
)
Ê Á
;
Á Ë
public   
static   
readonly   "

GUIContent  # --
!textComponentDefaultSettingsLabel  . O
=  P Q
new  R U

GUIContent  V `
(  ` a
$str	  a Ç
)
  Ç É
;
  É Ñ
public!! 
static!! 
readonly!! "

GUIContent!!# -
defaultFontSize!!. =
=!!> ?
new!!@ C

GUIContent!!D N
(!!N O
$str!!O b
)!!b c
;!!c d
public"" 
static"" 
readonly"" "

GUIContent""# -
autoSizeRatioLabel"". @
=""A B
new""C F

GUIContent""G Q
(""Q R
$str""R i
)""i j
;""j k
public## 
static## 
readonly## "

GUIContent### -
minLabel##. 6
=##7 8
new##9 <

GUIContent##= G
(##G H
$str##H M
)##M N
;##N O
public$$ 
static$$ 
readonly$$ "

GUIContent$$# -
maxLabel$$. 6
=$$7 8
new$$9 <

GUIContent$$= G
($$G H
$str$$H M
)$$M N
;$$N O
public&& 
static&& 
readonly&& "

GUIContent&&# -
wordWrappingLabel&&. ?
=&&@ A
new&&B E

GUIContent&&F P
(&&P Q
$str&&Q `
)&&` a
;&&a b
public'' 
static'' 
readonly'' "

GUIContent''# -
kerningLabel''. :
=''; <
new''= @

GUIContent''A K
(''K L
$str''L U
)''U V
;''V W
public(( 
static(( 
readonly(( "

GUIContent((# -
extraPaddingLabel((. ?
=((@ A
new((B E

GUIContent((F P
(((P Q
$str((Q `
)((` a
;((a b
public)) 
static)) 
readonly)) "

GUIContent))# -
tintAllSpritesLabel)). A
=))B C
new))D G

GUIContent))H R
())R S
$str))S e
)))e f
;))f g
public** 
static** 
readonly** "

GUIContent**# -&
parseEscapeCharactersLabel**. H
=**I J
new**K N

GUIContent**O Y
(**Y Z
$str**Z q
)**q r
;**r s
public,, 
static,, 
readonly,, "

GUIContent,,# -*
dynamicFontSystemSettingsLabel,,. L
=,,M N
new,,O R

GUIContent,,S ]
(,,] ^
$str,,^ |
),,| }
;,,} ~
public-- 
static-- 
readonly-- "

GUIContent--# -$
getFontFeaturesAtRuntime--. F
=--G H
new--I L

GUIContent--M W
(--W X
$str--X v
,--v w
$str	--x É
)
--É Ñ
;
--Ñ Ö
public.. 
static.. 
readonly.. "

GUIContent..# -$
dynamicAtlasTextureGroup... F
=..G H
new..I L

GUIContent..M W
(..W X
$str..X u
)..u v
;..v w
public00 
static00 
readonly00 "

GUIContent00# -
missingGlyphLabel00. ?
=00@ A
new00B E

GUIContent00F P
(00P Q
$str00Q l
,00l m
$str	00n ◊
)
00◊ ÿ
;
00ÿ Ÿ
public11 
static11 
readonly11 "

GUIContent11# - 
disableWarningsLabel11. B
=11C D
new11E H

GUIContent11I S
(11S T
$str11T f
,11f g
$str	11h í
)
11í ì
;
11ì î
public33 
static33 
readonly33 "

GUIContent33# -#
defaultSpriteAssetLabel33. E
=33F G
new33H K

GUIContent33L V
(33V W
$str33W m
,33m n
$str	33o ·
)
33· ‚
;
33‚ „
public44 
static44 
readonly44 "

GUIContent44# -.
"missingSpriteCharacterUnicodeLabel44. P
=44Q R
new44S V

GUIContent44W a
(44a b
$str44b z
,44z {
$str	44| å
)
44å ç
;
44ç é
public55 
static55 
readonly55 "

GUIContent55# -#
enableEmojiSupportLabel55. E
=55F G
new55H K

GUIContent55L V
(55V W
$str55W j
,55j k
$str	55l ±
)
55± ≤
;
55≤ ≥
public88 
static88 
readonly88 "

GUIContent88# -!
spriteAssetsPathLabel88. C
=88D E
new88F I

GUIContent88J T
(88T U
$str88U n
,88n o
$str	88p ⁄
)
88⁄ €
;
88€ ‹
public:: 
static:: 
readonly:: "

GUIContent::# -"
defaultStyleSheetLabel::. D
=::E F
new::G J

GUIContent::K U
(::U V
$str::V k
,::k l
$str	::m ∂
)
::∂ ∑
;
::∑ ∏
public;; 
static;; 
readonly;; "

GUIContent;;# -'
styleSheetResourcePathLabel;;. I
=;;J K
new;;L O

GUIContent;;P Z
(;;Z [
$str;;[ t
,;;t u
$str	;;v ﬁ
)
;;ﬁ ﬂ
;
;;ﬂ ‡
public== 
static== 
readonly== "

GUIContent==# -%
colorGradientPresetsLabel==. G
===H I
new==J M

GUIContent==N X
(==X Y
$str==Y q
,==q r
$str	==s Ô
)
==Ô 
;
== Ò
public>> 
static>> 
readonly>> "

GUIContent>># -#
colorGradientsPathLabel>>. E
=>>F G
new>>H K

GUIContent>>L V
(>>V W
$str>>W p
,>>p q
$str	>>r Ó
)
>>Ó Ô
;
>>Ô 
public@@ 
static@@ 
readonly@@ "

GUIContent@@# -
lineBreakingLabel@@. ?
=@@@ A
new@@B E

GUIContent@@F P
(@@P Q
$str@@Q t
,@@t u
$str	@@v ¯
)
@@¯ ˘
;
@@˘ ˙
publicAA 
staticAA 
readonlyAA "

GUIContentAA# -
koreanSpecificRulesAA. A
=AAB C
newAAD G

GUIContentAAH R
(AAR S
$strAAS l
)AAl m
;AAm n
}BB 	
SerializedPropertyDD 
m_PropFontAssetDD *
;DD* +
SerializedPropertyEE &
m_PropDefaultFontAssetPathEE 5
;EE5 6
SerializedPropertyFF !
m_PropDefaultFontSizeFF 0
;FF0 1
SerializedPropertyGG )
m_PropDefaultAutoSizeMinRatioGG 8
;GG8 9
SerializedPropertyHH )
m_PropDefaultAutoSizeMaxRatioHH 8
;HH8 9
SerializedPropertyII 5
)m_PropDefaultTextMeshProTextContainerSizeII D
;IID E
SerializedPropertyJJ 7
+m_PropDefaultTextMeshProUITextContainerSizeJJ F
;JJF G
SerializedPropertyKK '
m_PropAutoSizeTextContainerKK 6
;KK6 7
SerializedPropertyLL %
m_PropEnableRaycastTargetLL 4
;LL4 5
SerializedPropertyMM )
m_PropIsTextObjectScaleStaticMM 8
;MM8 9
SerializedPropertyOO 
m_PropSpriteAssetOO ,
;OO, -
SerializedPropertyPP /
#m_PropMissingSpriteCharacterUnicodePP >
;PP> ?
SerializedPropertyRR $
m_PropEnableEmojiSupportRR 3
;RR3 4
SerializedPropertySS !
m_PropSpriteAssetPathSS 0
;SS0 1
SerializedPropertyVV 
m_PropStyleSheetVV +
;VV+ ,
SerializedPropertyWW )
m_PropStyleSheetsResourcePathWW 8
;WW8 9
ReorderableListXX 
m_ListXX 
;XX 
SerializedPropertyZZ *
m_PropColorGradientPresetsPathZZ 9
;ZZ9 :
SerializedProperty\\ %
m_PropMatchMaterialPreset\\ 4
;\\4 5
SerializedProperty]] 
m_PropWordWrapping]] -
;]]- .
SerializedProperty^^ 
m_PropKerning^^ (
;^^( )
SerializedProperty__ 
m_PropExtraPadding__ -
;__- .
SerializedProperty``  
m_PropTintAllSprites`` /
;``/ 0
SerializedPropertyaa '
m_PropParseEscapeCharactersaa 6
;aa6 7
SerializedPropertybb '
m_PropMissingGlyphCharacterbb 6
;bb6 7
SerializedPropertyee &
m_GetFontFeaturesAtRuntimeee 5
;ee5 6
SerializedPropertygg "
m_PropWarningsDisabledgg 1
;gg1 2
SerializedPropertyii #
m_PropLeadingCharactersii 2
;ii2 3
SerializedPropertyjj %
m_PropFollowingCharactersjj 4
;jj4 5
SerializedPropertykk 2
&m_PropUseModernHangulLineBreakingRuleskk A
;kkA B
privatemm 
constmm 
stringmm 

k_UndoRedomm '
=mm( )
$strmm* =
;mm= >
publicoo 
voidoo 
OnEnableoo 
(oo 
)oo 
{pp 	
ifqq 
(qq 
targetqq 
==qq 
nullqq 
)qq 
returnrr 
;rr 
m_PropFontAssettt 
=tt 
serializedObjecttt .
.tt. /
FindPropertytt/ ;
(tt; <
$strtt< P
)ttP Q
;ttQ R&
m_PropDefaultFontAssetPathuu &
=uu' (
serializedObjectuu) 9
.uu9 :
FindPropertyuu: F
(uuF G
$struuG _
)uu_ `
;uu` a!
m_PropDefaultFontSizevv !
=vv" #
serializedObjectvv$ 4
.vv4 5
FindPropertyvv5 A
(vvA B
$strvvB U
)vvU V
;vvV W)
m_PropDefaultAutoSizeMinRatioww )
=ww* +
serializedObjectww, <
.ww< =
FindPropertyww= I
(wwI J
$strwwJ e
)wwe f
;wwf g)
m_PropDefaultAutoSizeMaxRatioxx )
=xx* +
serializedObjectxx, <
.xx< =
FindPropertyxx= I
(xxI J
$strxxJ e
)xxe f
;xxf g5
)m_PropDefaultTextMeshProTextContainerSizeyy 5
=yy6 7
serializedObjectyy8 H
.yyH I
FindPropertyyyI U
(yyU V
$stryyV }
)yy} ~
;yy~ 7
+m_PropDefaultTextMeshProUITextContainerSizezz 7
=zz8 9
serializedObjectzz: J
.zzJ K
FindPropertyzzK W
(zzW X
$str	zzX Å
)
zzÅ Ç
;
zzÇ É'
m_PropAutoSizeTextContainer{{ '
={{( )
serializedObject{{* :
.{{: ;
FindProperty{{; G
({{G H
$str{{H a
){{a b
;{{b c%
m_PropEnableRaycastTarget|| %
=||& '
serializedObject||( 8
.||8 9
FindProperty||9 E
(||E F
$str||F ]
)||] ^
;||^ _)
m_PropIsTextObjectScaleStatic}} )
=}}* +
serializedObject}}, <
.}}< =
FindProperty}}= I
(}}I J
$str}}J e
)}}e f
;}}f g
m_PropSpriteAsset 
= 
serializedObject  0
.0 1
FindProperty1 =
(= >
$str> T
)T U
;U V1
#m_PropMissingSpriteCharacterUnicode
ÄÄ /
=
ÄÄ0 1
serializedObject
ÄÄ2 B
.
ÄÄB C
FindProperty
ÄÄC O
(
ÄÄO P
$str
ÄÄP q
)
ÄÄq r
;
ÄÄr s&
m_PropEnableEmojiSupport
ÇÇ $
=
ÇÇ% &
serializedObject
ÇÇ' 7
.
ÇÇ7 8
FindProperty
ÇÇ8 D
(
ÇÇD E
$str
ÇÇE [
)
ÇÇ[ \
;
ÇÇ\ ]#
m_PropSpriteAssetPath
ÉÉ !
=
ÉÉ" #
serializedObject
ÉÉ$ 4
.
ÉÉ4 5
FindProperty
ÉÉ5 A
(
ÉÉA B
$str
ÉÉB \
)
ÉÉ\ ]
;
ÉÉ] ^
m_PropStyleSheet
ÖÖ 
=
ÖÖ 
serializedObject
ÖÖ /
.
ÖÖ/ 0
FindProperty
ÖÖ0 <
(
ÖÖ< =
$str
ÖÖ= R
)
ÖÖR S
;
ÖÖS T+
m_PropStyleSheetsResourcePath
ÜÜ )
=
ÜÜ* +
serializedObject
ÜÜ, <
.
ÜÜ< =
FindProperty
ÜÜ= I
(
ÜÜI J
$str
ÜÜJ e
)
ÜÜe f
;
ÜÜf g,
m_PropColorGradientPresetsPath
ââ *
=
ââ+ ,
serializedObject
ââ- =
.
ââ= >
FindProperty
ââ> J
(
ââJ K
$str
ââK n
)
âân o
;
ââo p
m_List
ãã 
=
ãã 
new
ãã 
ReorderableList
ãã (
(
ãã( )
serializedObject
ãã) 9
,
ãã9 :
serializedObject
ãã; K
.
ããK L
FindProperty
ããL X
(
ããX Y
$str
ããY o
)
ãão p
,
ããp q
true
ããr v
,
ããv w
true
ããx |
,
ãã| }
trueãã~ Ç
,ããÇ É
trueããÑ à
)ããà â
;ããâ ä
m_List
çç 
.
çç !
drawElementCallback
çç &
=
çç' (
(
çç) *
rect
çç* .
,
çç. /
index
çç0 5
,
çç5 6
isActive
çç7 ?
,
çç? @
	isFocused
ççA J
)
ççJ K
=>
ççL N
{
éé 
var
èè 
element
èè 
=
èè 
m_List
èè $
.
èè$ % 
serializedProperty
èè% 7
.
èè7 8$
GetArrayElementAtIndex
èè8 N
(
èèN O
index
èèO T
)
èèT U
;
èèU V
rect
êê 
.
êê 
y
êê 
+=
êê 
$num
êê 
;
êê 
	EditorGUI
ëë 
.
ëë 
PropertyField
ëë '
(
ëë' (
new
ëë( +
Rect
ëë, 0
(
ëë0 1
rect
ëë1 5
.
ëë5 6
x
ëë6 7
,
ëë7 8
rect
ëë9 =
.
ëë= >
y
ëë> ?
,
ëë? @
rect
ëëA E
.
ëëE F
width
ëëF K
,
ëëK L
EditorGUIUtility
ëëM ]
.
ëë] ^
singleLineHeight
ëë^ n
)
ëën o
,
ëëo p
element
ëëq x
,
ëëx y

GUIContentëëz Ñ
.ëëÑ Ö
noneëëÖ â
)ëëâ ä
;ëëä ã
}
íí 
;
íí 
m_List
îî 
.
îî  
drawHeaderCallback
îî %
=
îî& '
rect
îî( ,
=>
îî- /
{
ïï 
	EditorGUI
ññ 
.
ññ 

LabelField
ññ $
(
ññ$ %
rect
ññ% )
,
ññ) *
Styles
ññ+ 1
.
ññ1 2)
fallbackFontAssetsListLabel
ññ2 M
)
ññM N
;
ññN O
}
óó 
;
óó '
m_PropMatchMaterialPreset
ôô %
=
ôô& '
serializedObject
ôô( 8
.
ôô8 9
FindProperty
ôô9 E
(
ôôE F
$str
ôôF ]
)
ôô] ^
;
ôô^ _ 
m_PropWordWrapping
õõ 
=
õõ  
serializedObject
õõ! 1
.
õõ1 2
FindProperty
õõ2 >
(
õõ> ?
$str
õõ? U
)
õõU V
;
õõV W
m_PropKerning
úú 
=
úú 
serializedObject
úú ,
.
úú, -
FindProperty
úú- 9
(
úú9 :
$str
úú: K
)
úúK L
;
úúL M 
m_PropExtraPadding
ùù 
=
ùù  
serializedObject
ùù! 1
.
ùù1 2
FindProperty
ùù2 >
(
ùù> ?
$str
ùù? U
)
ùùU V
;
ùùV W"
m_PropTintAllSprites
ûû  
=
ûû! "
serializedObject
ûû# 3
.
ûû3 4
FindProperty
ûû4 @
(
ûû@ A
$str
ûûA Y
)
ûûY Z
;
ûûZ [)
m_PropParseEscapeCharacters
üü '
=
üü( )
serializedObject
üü* :
.
üü: ;
FindProperty
üü; G
(
üüG H
$str
üüH g
)
üüg h
;
üüh i)
m_PropMissingGlyphCharacter
†† '
=
††( )
serializedObject
††* :
.
††: ;
FindProperty
††; G
(
††G H
$str
††H a
)
††a b
;
††b c$
m_PropWarningsDisabled
¢¢ "
=
¢¢# $
serializedObject
¢¢% 5
.
¢¢5 6
FindProperty
¢¢6 B
(
¢¢B C
$str
¢¢C W
)
¢¢W X
;
¢¢X Y(
m_GetFontFeaturesAtRuntime
•• &
=
••' (
serializedObject
••) 9
.
••9 :
FindProperty
••: F
(
••F G
$str
••G c
)
••c d
;
••d e%
m_PropLeadingCharacters
ßß #
=
ßß$ %
serializedObject
ßß& 6
.
ßß6 7
FindProperty
ßß7 C
(
ßßC D
$str
ßßD Y
)
ßßY Z
;
ßßZ ['
m_PropFollowingCharacters
®® %
=
®®& '
serializedObject
®®( 8
.
®®8 9
FindProperty
®®9 E
(
®®E F
$str
®®F ]
)
®®] ^
;
®®^ _4
&m_PropUseModernHangulLineBreakingRules
©© 2
=
©©3 4
serializedObject
©©5 E
.
©©E F
FindProperty
©©F R
(
©©R S
$str
©©S w
)
©©w x
;
©©x y
}
™™ 	
public
¨¨ 
override
¨¨ 
void
¨¨ 
OnInspectorGUI
¨¨ +
(
¨¨+ ,
)
¨¨, -
{
≠≠ 	
serializedObject
ÆÆ 
.
ÆÆ 
Update
ÆÆ #
(
ÆÆ# $
)
ÆÆ$ %
;
ÆÆ% &
string
ØØ 
evt_cmd
ØØ 
=
ØØ 
Event
ØØ "
.
ØØ" #
current
ØØ# *
.
ØØ* +
commandName
ØØ+ 6
;
ØØ6 7
float
±± 

labelWidth
±± 
=
±± 
EditorGUIUtility
±± /
.
±±/ 0

labelWidth
±±0 :
;
±±: ;
float
≤≤ 

fieldWidth
≤≤ 
=
≤≤ 
EditorGUIUtility
≤≤ /
.
≤≤/ 0

fieldWidth
≤≤0 :
;
≤≤: ;
	EditorGUI
µµ 
.
µµ 
indentLevel
µµ !
=
µµ" #
$num
µµ$ %
;
µµ% &
EditorGUILayout
∏∏ 
.
∏∏ 
BeginVertical
∏∏ )
(
∏∏) *
EditorStyles
∏∏* 6
.
∏∏6 7
helpBox
∏∏7 >
)
∏∏> ?
;
∏∏? @
	GUILayout
ππ 
.
ππ 
Label
ππ 
(
ππ 
Styles
ππ "
.
ππ" ##
defaultFontAssetLabel
ππ# 8
,
ππ8 9
EditorStyles
ππ: F
.
ππF G
	boldLabel
ππG P
)
ππP Q
;
ππQ R
	EditorGUI
∫∫ 
.
∫∫ 
indentLevel
∫∫ !
=
∫∫" #
$num
∫∫$ %
;
∫∫% &
EditorGUILayout
ªª 
.
ªª 
PropertyField
ªª )
(
ªª) *
m_PropFontAsset
ªª* 9
,
ªª9 :
Styles
ªª; A
.
ªªA B#
defaultFontAssetLabel
ªªB W
)
ªªW X
;
ªªX Y
EditorGUILayout
ºº 
.
ºº 
PropertyField
ºº )
(
ºº) *(
m_PropDefaultFontAssetPath
ºº* D
,
ººD E
Styles
ººF L
.
ººL M'
defaultFontAssetPathLabel
ººM f
)
ººf g
;
ººg h
	EditorGUI
ΩΩ 
.
ΩΩ 
indentLevel
ΩΩ !
=
ΩΩ" #
$num
ΩΩ$ %
;
ΩΩ% &
EditorGUILayout
øø 
.
øø 
Space
øø !
(
øø! "
)
øø" #
;
øø# $
EditorGUILayout
¿¿ 
.
¿¿ 
EndVertical
¿¿ '
(
¿¿' (
)
¿¿( )
;
¿¿) *
EditorGUILayout
√√ 
.
√√ 
BeginVertical
√√ )
(
√√) *
EditorStyles
√√* 6
.
√√6 7
helpBox
√√7 >
)
√√> ?
;
√√? @
	GUILayout
ƒƒ 
.
ƒƒ 
Label
ƒƒ 
(
ƒƒ 
Styles
ƒƒ "
.
ƒƒ" #%
fallbackFontAssetsLabel
ƒƒ# :
,
ƒƒ: ;
EditorStyles
ƒƒ< H
.
ƒƒH I
	boldLabel
ƒƒI R
)
ƒƒR S
;
ƒƒS T
m_List
≈≈ 
.
≈≈ 
DoLayoutList
≈≈ 
(
≈≈  
)
≈≈  !
;
≈≈! "
	GUILayout
«« 
.
«« 
Label
«« 
(
«« 
Styles
«« "
.
««" #+
fallbackMaterialSettingsLabel
««# @
,
««@ A
EditorStyles
««B N
.
««N O
	boldLabel
««O X
)
««X Y
;
««Y Z
	EditorGUI
»» 
.
»» 
indentLevel
»» !
=
»»" #
$num
»»$ %
;
»»% &
EditorGUILayout
…… 
.
…… 
PropertyField
…… )
(
……) *'
m_PropMatchMaterialPreset
……* C
,
……C D
Styles
……E K
.
……K L&
matchMaterialPresetLabel
……L d
)
……d e
;
……e f
	EditorGUI
   
.
   
indentLevel
   !
=
  " #
$num
  $ %
;
  % &
EditorGUILayout
ÃÃ 
.
ÃÃ 
Space
ÃÃ !
(
ÃÃ! "
)
ÃÃ" #
;
ÃÃ# $
EditorGUILayout
ÕÕ 
.
ÕÕ 
EndVertical
ÕÕ '
(
ÕÕ' (
)
ÕÕ( )
;
ÕÕ) *
EditorGUILayout
–– 
.
–– 
BeginVertical
–– )
(
––) *
EditorStyles
––* 6
.
––6 7
helpBox
––7 >
)
––> ?
;
––? @
	GUILayout
—— 
.
—— 
Label
—— 
(
—— 
Styles
—— "
.
——" #,
dynamicFontSystemSettingsLabel
——# A
,
——A B
EditorStyles
——C O
.
——O P
	boldLabel
——P Y
)
——Y Z
;
——Z [
	EditorGUI
““ 
.
““ 
indentLevel
““ !
=
““" #
$num
““$ %
;
““% &
EditorGUILayout
”” 
.
”” 
PropertyField
”” )
(
””) *(
m_GetFontFeaturesAtRuntime
””* D
,
””D E
Styles
””F L
.
””L M&
getFontFeaturesAtRuntime
””M e
)
””e f
;
””f g
EditorGUILayout
‘‘ 
.
‘‘ 
PropertyField
‘‘ )
(
‘‘) *)
m_PropMissingGlyphCharacter
‘‘* E
,
‘‘E F
Styles
‘‘G M
.
‘‘M N
missingGlyphLabel
‘‘N _
)
‘‘_ `
;
‘‘` a
EditorGUILayout
’’ 
.
’’ 
PropertyField
’’ )
(
’’) *$
m_PropWarningsDisabled
’’* @
,
’’@ A
Styles
’’B H
.
’’H I"
disableWarningsLabel
’’I ]
)
’’] ^
;
’’^ _
	EditorGUI
◊◊ 
.
◊◊ 
indentLevel
◊◊ !
=
◊◊" #
$num
◊◊$ %
;
◊◊% &
EditorGUILayout
ŸŸ 
.
ŸŸ 
Space
ŸŸ !
(
ŸŸ! "
)
ŸŸ" #
;
ŸŸ# $
EditorGUILayout
⁄⁄ 
.
⁄⁄ 
EndVertical
⁄⁄ '
(
⁄⁄' (
)
⁄⁄( )
;
⁄⁄) *
EditorGUILayout
›› 
.
›› 
BeginVertical
›› )
(
››) *
EditorStyles
››* 6
.
››6 7
helpBox
››7 >
)
››> ?
;
››? @
	GUILayout
ﬁﬁ 
.
ﬁﬁ 
Label
ﬁﬁ 
(
ﬁﬁ 
Styles
ﬁﬁ "
.
ﬁﬁ" #+
containerDefaultSettingsLabel
ﬁﬁ# @
,
ﬁﬁ@ A
EditorStyles
ﬁﬁB N
.
ﬁﬁN O
	boldLabel
ﬁﬁO X
)
ﬁﬁX Y
;
ﬁﬁY Z
	EditorGUI
ﬂﬂ 
.
ﬂﬂ 
indentLevel
ﬂﬂ !
=
ﬂﬂ" #
$num
ﬂﬂ$ %
;
ﬂﬂ% &
EditorGUILayout
·· 
.
·· 
PropertyField
·· )
(
··) *7
)m_PropDefaultTextMeshProTextContainerSize
··* S
,
··S T
Styles
··U [
.
··[ \
textMeshProLabel
··\ l
)
··l m
;
··m n
EditorGUILayout
‚‚ 
.
‚‚ 
PropertyField
‚‚ )
(
‚‚) *9
+m_PropDefaultTextMeshProUITextContainerSize
‚‚* U
,
‚‚U V
Styles
‚‚W ]
.
‚‚] ^ 
textMeshProUiLabel
‚‚^ p
)
‚‚p q
;
‚‚q r
EditorGUILayout
„„ 
.
„„ 
PropertyField
„„ )
(
„„) *'
m_PropEnableRaycastTarget
„„* C
,
„„C D
Styles
„„E K
.
„„K L!
enableRaycastTarget
„„L _
)
„„_ `
;
„„` a
EditorGUILayout
‰‰ 
.
‰‰ 
PropertyField
‰‰ )
(
‰‰) *)
m_PropAutoSizeTextContainer
‰‰* E
,
‰‰E F
Styles
‰‰G M
.
‰‰M N$
autoSizeContainerLabel
‰‰N d
)
‰‰d e
;
‰‰e f
EditorGUILayout
ÂÂ 
.
ÂÂ 
PropertyField
ÂÂ )
(
ÂÂ) *+
m_PropIsTextObjectScaleStatic
ÂÂ* G
,
ÂÂG H
Styles
ÂÂI O
.
ÂÂO P*
isTextObjectScaleStaticLabel
ÂÂP l
)
ÂÂl m
;
ÂÂm n
	EditorGUI
ÊÊ 
.
ÊÊ 
indentLevel
ÊÊ !
=
ÊÊ" #
$num
ÊÊ$ %
;
ÊÊ% &
EditorGUILayout
ËË 
.
ËË 
Space
ËË !
(
ËË! "
)
ËË" #
;
ËË# $
	GUILayout
ÍÍ 
.
ÍÍ 
Label
ÍÍ 
(
ÍÍ 
Styles
ÍÍ "
.
ÍÍ" #/
!textComponentDefaultSettingsLabel
ÍÍ# D
,
ÍÍD E
EditorStyles
ÍÍF R
.
ÍÍR S
	boldLabel
ÍÍS \
)
ÍÍ\ ]
;
ÍÍ] ^
	EditorGUI
ÎÎ 
.
ÎÎ 
indentLevel
ÎÎ !
=
ÎÎ" #
$num
ÎÎ$ %
;
ÎÎ% &
EditorGUILayout
ÏÏ 
.
ÏÏ 
PropertyField
ÏÏ )
(
ÏÏ) *#
m_PropDefaultFontSize
ÏÏ* ?
,
ÏÏ? @
Styles
ÏÏA G
.
ÏÏG H
defaultFontSize
ÏÏH W
)
ÏÏW X
;
ÏÏX Y
EditorGUILayout
ÓÓ 
.
ÓÓ 
BeginHorizontal
ÓÓ +
(
ÓÓ+ ,
)
ÓÓ, -
;
ÓÓ- .
{
ÔÔ 
EditorGUILayout
 
.
  
PrefixLabel
  +
(
+ ,
Styles
, 2
.
2 3 
autoSizeRatioLabel
3 E
)
E F
;
F G
EditorGUIUtility
ÒÒ  
.
ÒÒ  !

labelWidth
ÒÒ! +
=
ÒÒ, -
$num
ÒÒ. 0
;
ÒÒ0 1
EditorGUIUtility
ÚÚ  
.
ÚÚ  !

fieldWidth
ÚÚ! +
=
ÚÚ, -
$num
ÚÚ. 0
;
ÚÚ0 1
	EditorGUI
ÙÙ 
.
ÙÙ 
indentLevel
ÙÙ %
=
ÙÙ& '
$num
ÙÙ( )
;
ÙÙ) *
EditorGUILayout
ıı 
.
ıı  
PropertyField
ıı  -
(
ıı- .+
m_PropDefaultAutoSizeMinRatio
ıı. K
,
ııK L
Styles
ııM S
.
ııS T
minLabel
ııT \
)
ıı\ ]
;
ıı] ^
EditorGUILayout
ˆˆ 
.
ˆˆ  
PropertyField
ˆˆ  -
(
ˆˆ- .+
m_PropDefaultAutoSizeMaxRatio
ˆˆ. K
,
ˆˆK L
Styles
ˆˆM S
.
ˆˆS T
maxLabel
ˆˆT \
)
ˆˆ\ ]
;
ˆˆ] ^
	EditorGUI
˜˜ 
.
˜˜ 
indentLevel
˜˜ %
=
˜˜& '
$num
˜˜( )
;
˜˜) *
}
¯¯ 
EditorGUILayout
˘˘ 
.
˘˘ 
EndHorizontal
˘˘ )
(
˘˘) *
)
˘˘* +
;
˘˘+ ,
EditorGUIUtility
˚˚ 
.
˚˚ 

labelWidth
˚˚ '
=
˚˚( )

labelWidth
˚˚* 4
;
˚˚4 5
EditorGUIUtility
¸¸ 
.
¸¸ 

fieldWidth
¸¸ '
=
¸¸( )

fieldWidth
¸¸* 4
;
¸¸4 5
EditorGUILayout
˛˛ 
.
˛˛ 
PropertyField
˛˛ )
(
˛˛) * 
m_PropWordWrapping
˛˛* <
,
˛˛< =
Styles
˛˛> D
.
˛˛D E
wordWrappingLabel
˛˛E V
)
˛˛V W
;
˛˛W X
EditorGUILayout
ˇˇ 
.
ˇˇ 
PropertyField
ˇˇ )
(
ˇˇ) *
m_PropKerning
ˇˇ* 7
,
ˇˇ7 8
Styles
ˇˇ9 ?
.
ˇˇ? @
kerningLabel
ˇˇ@ L
)
ˇˇL M
;
ˇˇM N
EditorGUILayout
ÅÅ 
.
ÅÅ 
PropertyField
ÅÅ )
(
ÅÅ) * 
m_PropExtraPadding
ÅÅ* <
,
ÅÅ< =
Styles
ÅÅ> D
.
ÅÅD E
extraPaddingLabel
ÅÅE V
)
ÅÅV W
;
ÅÅW X
EditorGUILayout
ÇÇ 
.
ÇÇ 
PropertyField
ÇÇ )
(
ÇÇ) *"
m_PropTintAllSprites
ÇÇ* >
,
ÇÇ> ?
Styles
ÇÇ@ F
.
ÇÇF G!
tintAllSpritesLabel
ÇÇG Z
)
ÇÇZ [
;
ÇÇ[ \
EditorGUILayout
ÑÑ 
.
ÑÑ 
PropertyField
ÑÑ )
(
ÑÑ) *)
m_PropParseEscapeCharacters
ÑÑ* E
,
ÑÑE F
Styles
ÑÑG M
.
ÑÑM N(
parseEscapeCharactersLabel
ÑÑN h
)
ÑÑh i
;
ÑÑi j
	EditorGUI
ÜÜ 
.
ÜÜ 
indentLevel
ÜÜ !
=
ÜÜ" #
$num
ÜÜ$ %
;
ÜÜ% &
EditorGUILayout
àà 
.
àà 
Space
àà !
(
àà! "
)
àà" #
;
àà# $
EditorGUILayout
ââ 
.
ââ 
EndVertical
ââ '
(
ââ' (
)
ââ( )
;
ââ) *
EditorGUILayout
åå 
.
åå 
BeginVertical
åå )
(
åå) *
EditorStyles
åå* 6
.
åå6 7
helpBox
åå7 >
)
åå> ?
;
åå? @
	GUILayout
çç 
.
çç 
Label
çç 
(
çç 
Styles
çç "
.
çç" #%
defaultSpriteAssetLabel
çç# :
,
çç: ;
EditorStyles
çç< H
.
ççH I
	boldLabel
ççI R
)
ççR S
;
ççS T
	EditorGUI
éé 
.
éé 
indentLevel
éé !
=
éé" #
$num
éé$ %
;
éé% &
EditorGUILayout
èè 
.
èè 
PropertyField
èè )
(
èè) *
m_PropSpriteAsset
èè* ;
,
èè; <
Styles
èè= C
.
èèC D%
defaultSpriteAssetLabel
èèD [
)
èè[ \
;
èè\ ]
EditorGUILayout
êê 
.
êê 
PropertyField
êê )
(
êê) *1
#m_PropMissingSpriteCharacterUnicode
êê* M
,
êêM N
Styles
êêO U
.
êêU V0
"missingSpriteCharacterUnicodeLabel
êêV x
)
êêx y
;
êêy z
EditorGUILayout
ëë 
.
ëë 
PropertyField
ëë )
(
ëë) *&
m_PropEnableEmojiSupport
ëë* B
,
ëëB C
Styles
ëëD J
.
ëëJ K%
enableEmojiSupportLabel
ëëK b
)
ëëb c
;
ëëc d
EditorGUILayout
ìì 
.
ìì 
PropertyField
ìì )
(
ìì) *#
m_PropSpriteAssetPath
ìì* ?
,
ìì? @
Styles
ììA G
.
ììG H#
spriteAssetsPathLabel
ììH ]
)
ìì] ^
;
ìì^ _
	EditorGUI
îî 
.
îî 
indentLevel
îî !
=
îî" #
$num
îî$ %
;
îî% &
EditorGUILayout
ññ 
.
ññ 
Space
ññ !
(
ññ! "
)
ññ" #
;
ññ# $
EditorGUILayout
óó 
.
óó 
EndVertical
óó '
(
óó' (
)
óó( )
;
óó) *
EditorGUILayout
öö 
.
öö 
BeginVertical
öö )
(
öö) *
EditorStyles
öö* 6
.
öö6 7
helpBox
öö7 >
)
öö> ?
;
öö? @
	GUILayout
õõ 
.
õõ 
Label
õõ 
(
õõ 
Styles
õõ "
.
õõ" #$
defaultStyleSheetLabel
õõ# 9
,
õõ9 :
EditorStyles
õõ; G
.
õõG H
	boldLabel
õõH Q
)
õõQ R
;
õõR S
	EditorGUI
úú 
.
úú 
indentLevel
úú !
=
úú" #
$num
úú$ %
;
úú% &
	EditorGUI
ùù 
.
ùù 
BeginChangeCheck
ùù &
(
ùù& '
)
ùù' (
;
ùù( )
EditorGUILayout
ûû 
.
ûû 
PropertyField
ûû )
(
ûû) *
m_PropStyleSheet
ûû* :
,
ûû: ;
Styles
ûû< B
.
ûûB C$
defaultStyleSheetLabel
ûûC Y
)
ûûY Z
;
ûûZ [
if
üü 
(
üü 
	EditorGUI
üü 
.
üü 
EndChangeCheck
üü (
(
üü( )
)
üü) *
)
üü* +
{
†† 
serializedObject
°°  
.
°°  !%
ApplyModifiedProperties
°°! 8
(
°°8 9
)
°°9 :
;
°°: ;
TMP_StyleSheet
££ 

styleSheet
££ )
=
££* +
m_PropStyleSheet
££, <
.
££< ="
objectReferenceValue
££= Q
as
££R T
TMP_StyleSheet
££U c
;
££c d
if
§§ 
(
§§ 

styleSheet
§§ 
!=
§§ !
null
§§" &
)
§§& '

styleSheet
•• 
.
•• 
RefreshStyles
•• ,
(
••, -
)
••- .
;
••. /
}
¶¶ 
EditorGUILayout
ßß 
.
ßß 
PropertyField
ßß )
(
ßß) *+
m_PropStyleSheetsResourcePath
ßß* G
,
ßßG H
Styles
ßßI O
.
ßßO P)
styleSheetResourcePathLabel
ßßP k
)
ßßk l
;
ßßl m
	EditorGUI
®® 
.
®® 
indentLevel
®® !
=
®®" #
$num
®®$ %
;
®®% &
EditorGUILayout
™™ 
.
™™ 
Space
™™ !
(
™™! "
)
™™" #
;
™™# $
EditorGUILayout
´´ 
.
´´ 
EndVertical
´´ '
(
´´' (
)
´´( )
;
´´) *
EditorGUILayout
ÆÆ 
.
ÆÆ 
BeginVertical
ÆÆ )
(
ÆÆ) *
EditorStyles
ÆÆ* 6
.
ÆÆ6 7
helpBox
ÆÆ7 >
)
ÆÆ> ?
;
ÆÆ? @
	GUILayout
ØØ 
.
ØØ 
Label
ØØ 
(
ØØ 
Styles
ØØ "
.
ØØ" #'
colorGradientPresetsLabel
ØØ# <
,
ØØ< =
EditorStyles
ØØ> J
.
ØØJ K
	boldLabel
ØØK T
)
ØØT U
;
ØØU V
	EditorGUI
∞∞ 
.
∞∞ 
indentLevel
∞∞ !
=
∞∞" #
$num
∞∞$ %
;
∞∞% &
EditorGUILayout
±± 
.
±± 
PropertyField
±± )
(
±±) *,
m_PropColorGradientPresetsPath
±±* H
,
±±H I
Styles
±±J P
.
±±P Q%
colorGradientsPathLabel
±±Q h
)
±±h i
;
±±i j
	EditorGUI
≤≤ 
.
≤≤ 
indentLevel
≤≤ !
=
≤≤" #
$num
≤≤$ %
;
≤≤% &
EditorGUILayout
¥¥ 
.
¥¥ 
Space
¥¥ !
(
¥¥! "
)
¥¥" #
;
¥¥# $
EditorGUILayout
µµ 
.
µµ 
EndVertical
µµ '
(
µµ' (
)
µµ( )
;
µµ) *
EditorGUILayout
∏∏ 
.
∏∏ 
BeginVertical
∏∏ )
(
∏∏) *
EditorStyles
∏∏* 6
.
∏∏6 7
helpBox
∏∏7 >
)
∏∏> ?
;
∏∏? @
	GUILayout
ππ 
.
ππ 
Label
ππ 
(
ππ 
Styles
ππ "
.
ππ" #
lineBreakingLabel
ππ# 4
,
ππ4 5
EditorStyles
ππ6 B
.
ππB C
	boldLabel
ππC L
)
ππL M
;
ππM N
	EditorGUI
∫∫ 
.
∫∫ 
indentLevel
∫∫ !
=
∫∫" #
$num
∫∫$ %
;
∫∫% &
EditorGUILayout
ªª 
.
ªª 
PropertyField
ªª )
(
ªª) *%
m_PropLeadingCharacters
ªª* A
)
ªªA B
;
ªªB C
EditorGUILayout
ºº 
.
ºº 
PropertyField
ºº )
(
ºº) *'
m_PropFollowingCharacters
ºº* C
)
ººC D
;
ººD E
EditorGUILayout
ææ 
.
ææ 
Space
ææ !
(
ææ! "
)
ææ" #
;
ææ# $
	GUILayout
øø 
.
øø 
Label
øø 
(
øø 
Styles
øø "
.
øø" #!
koreanSpecificRules
øø# 6
,
øø6 7
EditorStyles
øø8 D
.
øøD E
	boldLabel
øøE N
)
øøN O
;
øøO P
EditorGUILayout
¿¿ 
.
¿¿ 
PropertyField
¿¿ )
(
¿¿) *4
&m_PropUseModernHangulLineBreakingRules
¿¿* P
,
¿¿P Q
new
¿¿R U

GUIContent
¿¿V `
(
¿¿` a
$str
¿¿a {
,
¿¿{ |
$str¿¿} Ÿ
)¿¿Ÿ ⁄
)¿¿⁄ €
;¿¿€ ‹
	EditorGUI
¬¬ 
.
¬¬ 
indentLevel
¬¬ !
=
¬¬" #
$num
¬¬$ %
;
¬¬% &
EditorGUILayout
ƒƒ 
.
ƒƒ 
Space
ƒƒ !
(
ƒƒ! "
)
ƒƒ" #
;
ƒƒ# $
EditorGUILayout
≈≈ 
.
≈≈ 
EndVertical
≈≈ '
(
≈≈' (
)
≈≈( )
;
≈≈) *
if
«« 
(
«« 
serializedObject
««  
.
««  !%
ApplyModifiedProperties
««! 8
(
««8 9
)
««9 :
||
««; =
evt_cmd
««> E
==
««F H

k_UndoRedo
««I S
)
««S T
{
»» 
EditorUtility
…… 
.
…… 
SetDirty
…… &
(
……& '
target
……' -
)
……- .
;
……. / 
TMPro_EventManager
   "
.
  " #%
ON_TMP_SETTINGS_CHANGED
  # :
(
  : ;
)
  ; <
;
  < =
}
ÀÀ 
}
ÃÃ 	
}
ÕÕ 
class
–– 	*
TMP_ResourceImporterProvider
––
 &
:
––' (
SettingsProvider
––) 9
{
—— )
TMP_PackageResourceImporter
““ # 
m_ResourceImporter
““$ 6
;
““6 7
public
‘‘ *
TMP_ResourceImporterProvider
‘‘ +
(
‘‘+ ,
)
‘‘, -
:
’’ 
base
’’ 
(
’’ 
$str
’’ )
,
’’) *
SettingsScope
’’+ 8
.
’’8 9
Project
’’9 @
)
’’@ A
{
÷÷ 	
}
◊◊ 	
public
ŸŸ 
override
ŸŸ 
void
ŸŸ 
OnGUI
ŸŸ "
(
ŸŸ" #
string
ŸŸ# )
searchContext
ŸŸ* 7
)
ŸŸ7 8
{
⁄⁄ 	
if
‹‹ 
(
‹‹  
m_ResourceImporter
‹‹ "
==
‹‹# %
null
‹‹& *
)
‹‹* + 
m_ResourceImporter
›› "
=
››# $
new
››% ()
TMP_PackageResourceImporter
››) D
(
››D E
)
››E F
;
››F G 
m_ResourceImporter
ﬂﬂ 
.
ﬂﬂ 
OnGUI
ﬂﬂ $
(
ﬂﬂ$ %
)
ﬂﬂ% &
;
ﬂﬂ& '
}
‡‡ 	
public
‚‚ 
override
‚‚ 
void
‚‚ 
OnDeactivate
‚‚ )
(
‚‚) *
)
‚‚* +
{
„„ 	
if
‰‰ 
(
‰‰  
m_ResourceImporter
‰‰ "
!=
‰‰# %
null
‰‰& *
)
‰‰* + 
m_ResourceImporter
ÂÂ "
.
ÂÂ" #
	OnDestroy
ÂÂ# ,
(
ÂÂ, -
)
ÂÂ- .
;
ÂÂ. /
}
ÊÊ 	
static
ËË 
UnityEngine
ËË 
.
ËË 
Object
ËË !
GetTMPSettings
ËË" 0
(
ËË0 1
)
ËË1 2
{
ÈÈ 	
return
ÍÍ 
	Resources
ÍÍ 
.
ÍÍ 
Load
ÍÍ !
<
ÍÍ! "
TMP_Settings
ÍÍ" .
>
ÍÍ. /
(
ÍÍ/ 0
$str
ÍÍ0 >
)
ÍÍ> ?
;
ÍÍ? @
}
ÎÎ 	
[
ÌÌ 	#
SettingsProviderGroup
ÌÌ	 
]
ÌÌ 
static
ÓÓ 
SettingsProvider
ÓÓ 
[
ÓÓ  
]
ÓÓ  !'
CreateTMPSettingsProvider
ÓÓ" ;
(
ÓÓ; <
)
ÓÓ< =
{
ÔÔ 	
var
 
	providers
 
=
 
new
 
List
  $
<
$ %
SettingsProvider
% 5
>
5 6
{
7 8
new
9 <*
TMP_ResourceImporterProvider
= Y
(
Y Z
)
Z [
}
\ ]
;
] ^
if
ÚÚ 
(
ÚÚ 
GetTMPSettings
ÚÚ 
(
ÚÚ 
)
ÚÚ  
!=
ÚÚ! #
null
ÚÚ$ (
)
ÚÚ( )
{
ÛÛ 
var
ÙÙ 
provider
ÙÙ 
=
ÙÙ 
new
ÙÙ "#
AssetSettingsProvider
ÙÙ# 8
(
ÙÙ8 9
$str
ÙÙ9 X
,
ÙÙX Y
GetTMPSettings
ÙÙZ h
)
ÙÙh i
;
ÙÙi j
provider
ıı 
.
ıı <
.PopulateSearchKeywordsFromGUIContentProperties
ıı G
<
ııG H 
TMP_SettingsEditor
ııH Z
.
ııZ [
Styles
ıı[ a
>
ııa b
(
ııb c
)
ııc d
;
ııd e
	providers
ˆˆ 
.
ˆˆ 
Add
ˆˆ 
(
ˆˆ 
provider
ˆˆ &
)
ˆˆ& '
;
ˆˆ' (
}
˜˜ 
return
˘˘ 
	providers
˘˘ 
.
˘˘ 
ToArray
˘˘ $
(
˘˘$ %
)
˘˘% &
;
˘˘& '
}
˙˙ 	
}
˚˚ 
}˝˝ ¡a
°D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_SpriteGlyphPropertyDrawer.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
[

  
CustomPropertyDrawer

 
(

 
typeof

  
(

  !
TMP_SpriteGlyph

! 0
)

0 1
)

1 2
]

2 3
public 

class )
TMP_SpriteGlyphPropertyDrawer .
:/ 0
PropertyDrawer1 ?
{ 
public 
override 
void 
OnGUI "
(" #
Rect# '
position( 0
,0 1
SerializedProperty2 D
propertyE M
,M N

GUIContentO Y
labelZ _
)_ `
{ 	
SerializedProperty 
prop_GlyphIndex .
=/ 0
property1 9
.9 : 
FindPropertyRelative: N
(N O
$strO X
)X Y
;Y Z
SerializedProperty 
prop_GlyphMetrics 0
=1 2
property3 ;
.; < 
FindPropertyRelative< P
(P Q
$strQ \
)\ ]
;] ^
SerializedProperty 
prop_GlyphRect -
=. /
property0 8
.8 9 
FindPropertyRelative9 M
(M N
$strN [
)[ \
;\ ]
SerializedProperty 

prop_Scale )
=* +
property, 4
.4 5 
FindPropertyRelative5 I
(I J
$strJ S
)S T
;T U
SerializedProperty 
prop_AtlasIndex .
=/ 0
property1 9
.9 : 
FindPropertyRelative: N
(N O
$strO ]
)] ^
;^ _
GUIStyle 
style 
= 
new  
GUIStyle! )
() *
EditorStyles* 6
.6 7
label7 <
)< =
;= >
style 
. 
richText 
= 
true !
;! "
Rect 
rect 
= 
new 
Rect  
(  !
position! )
.) *
x* +
+, -
$num. 0
,0 1
position2 :
.: ;
y; <
,< =
position> F
.F G
widthG L
,L M
$numN P
)P Q
;Q R
	EditorGUI 
. 
PropertyField #
(# $
rect$ (
,( )
prop_GlyphRect* 8
)8 9
;9 :
rect 
. 
y 
+= 
$num 
; 
	EditorGUI 
. 
PropertyField #
(# $
rect$ (
,( )
prop_GlyphMetrics* ;
); <
;< =
EditorGUIUtility!! 
.!! 

labelWidth!! '
=!!( )
$num!!* -
;!!- .
	EditorGUI"" 
."" 
PropertyField"" #
(""# $
new""$ '
Rect""( ,
("", -
rect""- 1
.""1 2
x""2 3
,""3 4
rect""5 9
.""9 :
y"": ;
+""< =
$num""> @
,""@ A
$num""B D
,""D E
$num""F H
)""H I
,""I J

prop_Scale""K U
,""U V
new""W Z

GUIContent""[ e
(""e f
$str""f n
)""n o
)""o p
;""p q
EditorGUIUtility$$ 
.$$ 

labelWidth$$ '
=$$( )
$num$$* -
;$$- .
	EditorGUI%% 
.%% 
PropertyField%% #
(%%# $
new%%$ '
Rect%%( ,
(%%, -
rect%%- 1
.%%1 2
x%%2 3
+%%4 5
$num%%6 8
,%%8 9
rect%%: >
.%%> ?
y%%? @
+%%A B
$num%%C E
,%%E F
$num%%G I
,%%I J
$num%%K M
)%%M N
,%%N O
prop_AtlasIndex%%P _
,%%_ `
new%%a d

GUIContent%%e o
(%%o p
$str%%p ~
)%%~ 
)	%% Ä
;
%%Ä Å
	DrawGlyph'' 
('' 
position'' 
,'' 
property''  (
)''( )
;'') *
int))  
spriteCharacterIndex)) $
;))$ %
int** 
.** 
TryParse** 
(** 
property** !
.**! "
displayName**" -
.**- .
Split**. 3
(**3 4
$char**4 7
)**7 8
[**8 9
$num**9 :
]**: ;
,**; <
out**= @ 
spriteCharacterIndex**A U
)**U V
;**V W
	EditorGUI,, 
.,, 

LabelField,,  
(,,  !
new,,! $
Rect,,% )
(,,) *
position,,* 2
.,,2 3
x,,3 4
,,,4 5
position,,6 >
.,,> ?
y,,? @
+,,A B
$num,,C D
,,,D E
$num,,F I
,,,I J
$num,,K N
),,N O
,,,O P
new,,Q T

GUIContent,,U _
(,,_ `
$str,,` c
+,,d e 
spriteCharacterIndex,,f z
),,z {
,,,{ |
style	,,} Ç
)
,,Ç É
;
,,É Ñ
float.. 
labelWidthID.. 
=..  
GUI..! $
...$ %
skin..% )
...) *
label..* /
.../ 0
CalcSize..0 8
(..8 9
new..9 <

GUIContent..= G
(..G H
$str..H N
+..O P
prop_GlyphIndex..Q `
...` a
intValue..a i
)..i j
)..j k
...k l
x..l m
;..m n
	EditorGUI// 
.// 

LabelField//  
(//  !
new//! $
Rect//% )
(//) *
position//* 2
.//2 3
x//3 4
+//5 6
(//7 8
$num//8 :
-//; <
labelWidthID//= I
)//I J
///K L
$num//M N
,//N O
position//P X
.//X Y
y//Y Z
+//[ \
$num//] `
,//` a
$num//b e
,//e f
$num//g j
)//j k
,//k l
new//m p

GUIContent//q {
(//{ |
$str	//| ë
+
//í ì
prop_GlyphIndex
//î £
.
//£ §
intValue
//§ ¨
+
//≠ Æ
$str
//Ø π
)
//π ∫
,
//∫ ª
style
//º ¡
)
//¡ ¬
;
//¬ √
}00 	
void22 
	DrawGlyph22 
(22 
Rect22 
position22 $
,22$ %
SerializedProperty22& 8
property229 A
)22A B
{33 	
Texture55 
tex55 
=55 
(55 
property55 #
.55# $
serializedObject55$ 4
.554 5
targetObject555 A
as55B D
TMP_SpriteAsset55E T
)55T U
.55U V
spriteSheet55V a
;55a b
if88 
(88 
tex88 
==88 
null88 
)88 
{99 
Debug:: 
.:: 

LogWarning::  
(::  !
$str::! V
+::W X
property::Y a
.::a b
serializedObject::b r
.::r s
targetObject::s 
.	:: Ä
name
::Ä Ñ
+
::Ö Ü
$str
::á ò
,
::ò ô
property
::ö ¢
.
::¢ £
serializedObject
::£ ≥
.
::≥ ¥
targetObject
::¥ ¿
)
::¿ ¡
;
::¡ ¬
return;; 
;;; 
}<< 
Vector2>> 
spriteTexPosition>> %
=>>& '
new>>( +
Vector2>>, 3
(>>3 4
position>>4 <
.>>< =
x>>= >
,>>> ?
position>>@ H
.>>H I
y>>I J
)>>J K
;>>K L
Vector2?? 

spriteSize?? 
=??  
new??! $
Vector2??% ,
(??, -
$num??- /
,??/ 0
$num??1 3
)??3 4
;??4 5
SerializedPropertyAA 
prop_GlyphRectAA -
=AA. /
propertyAA0 8
.AA8 9 
FindPropertyRelativeAA9 M
(AAM N
$strAAN [
)AA[ \
;AA\ ]
intCC 
spriteImageXCC 
=CC 
prop_GlyphRectCC -
.CC- . 
FindPropertyRelativeCC. B
(CCB C
$strCCC H
)CCH I
.CCI J
intValueCCJ R
;CCR S
intDD 
spriteImageYDD 
=DD 
prop_GlyphRectDD -
.DD- . 
FindPropertyRelativeDD. B
(DDB C
$strDDC H
)DDH I
.DDI J
intValueDDJ R
;DDR S
intEE 
spriteImageWidthEE  
=EE! "
prop_GlyphRectEE# 1
.EE1 2 
FindPropertyRelativeEE2 F
(EEF G
$strEEG P
)EEP Q
.EEQ R
intValueEER Z
;EEZ [
intFF 
spriteImageHeightFF !
=FF" #
prop_GlyphRectFF$ 2
.FF2 3 
FindPropertyRelativeFF3 G
(FFG H
$strFFH R
)FFR S
.FFS T
intValueFFT \
;FF\ ]
ifHH 
(HH 
spriteImageWidthHH  
>=HH! #
spriteImageHeightHH$ 5
)HH5 6
{II 

spriteSizeJJ 
.JJ 
yJJ 
=JJ 
spriteImageHeightJJ 0
*JJ1 2

spriteSizeJJ3 =
.JJ= >
xJJ> ?
/JJ@ A
spriteImageWidthJJB R
;JJR S
spriteTexPositionKK !
.KK! "
yKK" #
+=KK$ &
(KK' (

spriteSizeKK( 2
.KK2 3
xKK3 4
-KK5 6

spriteSizeKK7 A
.KKA B
yKKB C
)KKC D
/KKE F
$numKKG H
;KKH I
}LL 
elseMM 
{NN 

spriteSizeOO 
.OO 
xOO 
=OO 
spriteImageWidthOO /
*OO0 1

spriteSizeOO2 <
.OO< =
yOO= >
/OO? @
spriteImageHeightOOA R
;OOR S
spriteTexPositionPP !
.PP! "
xPP" #
+=PP$ &
(PP' (

spriteSizePP( 2
.PP2 3
yPP3 4
-PP5 6

spriteSizePP7 A
.PPA B
xPPB C
)PPC D
/PPE F
$numPPG H
;PPH I
}QQ 
RectTT 
	texCoordsTT 
=TT 
newTT  
RectTT! %
(TT% &
(TT& '
floatTT' ,
)TT, -
spriteImageXTT- 9
/TT: ;
texTT< ?
.TT? @
widthTT@ E
,TTE F
(TTG H
floatTTH M
)TTM N
spriteImageYTTN Z
/TT[ \
texTT] `
.TT` a
heightTTa g
,TTg h
(TTi j
floatTTj o
)TTo p
spriteImageWidth	TTp Ä
/
TTÅ Ç
tex
TTÉ Ü
.
TTÜ á
width
TTá å
,
TTå ç
(
TTé è
float
TTè î
)
TTî ï
spriteImageHeight
TTï ¶
/
TTß ®
tex
TT© ¨
.
TT¨ ≠
height
TT≠ ≥
)
TT≥ ¥
;
TT¥ µ
GUIUU 
.UU $
DrawTextureWithTexCoordsUU (
(UU( )
newUU) ,
RectUU- 1
(UU1 2
spriteTexPositionUU2 C
.UUC D
xUUD E
+UUF G
$numUUH I
,UUI J
spriteTexPositionUUK \
.UU\ ]
yUU] ^
+UU_ `
$numUUa d
,UUd e

spriteSizeUUf p
.UUp q
xUUq r
,UUr s

spriteSizeUUt ~
.UU~ 
y	UU Ä
)
UUÄ Å
,
UUÅ Ç
tex
UUÉ Ü
,
UUÜ á
	texCoords
UUà ë
,
UUë í
true
UUì ó
)
UUó ò
;
UUò ô
}VV 	
publicXX 
overrideXX 
floatXX 
GetPropertyHeightXX /
(XX/ 0
SerializedPropertyXX0 B
propertyXXC K
,XXK L

GUIContentXXM W
labelXXX ]
)XX] ^
{YY 	
returnZZ 
$numZZ 
;ZZ 
}[[ 	
}]] 
}^^ –ó
ùD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMPro_TextContainerEditor.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
[ 
CustomEditor 
( 
typeof 
( 
TextContainer &
)& '
)' (
,( )"
CanEditMultipleObjects* @
]@ A
public		 

class		 %
TMPro_TextContainerEditor		 *
:		+ ,
Editor		- 3
{

 
private 
SerializedProperty "
anchorPosition_prop# 6
;6 7
private 
SerializedProperty "

pivot_prop# -
;- .
private 
SerializedProperty "
rectangle_prop# 1
;1 2
private 
SerializedProperty "
margins_prop# /
;/ 0
private 
TextContainer 
m_textContainer -
;- .
void!! 
OnEnable!! 
(!! 
)!! 
{"" 	
anchorPosition_prop%% 
=%%  !
serializedObject%%" 2
.%%2 3
FindProperty%%3 ?
(%%? @
$str%%@ R
)%%R S
;%%S T

pivot_prop&& 
=&& 
serializedObject&& )
.&&) *
FindProperty&&* 6
(&&6 7
$str&&7 @
)&&@ A
;&&A B
rectangle_prop'' 
='' 
serializedObject'' -
.''- .
FindProperty''. :
('': ;
$str''; C
)''C D
;''D E
margins_prop(( 
=(( 
serializedObject(( +
.((+ ,
FindProperty((, 8
(((8 9
$str((9 D
)((D E
;((E F
m_textContainer** 
=** 
(** 
TextContainer** ,
)**, -
target**- 3
;**3 4
}55 	
void77 
	OnDisable77 
(77 
)77 
{88 	
}== 	
publicBB 
overrideBB 
voidBB 
OnInspectorGUIBB +
(BB+ ,
)BB, -
{CC 	
serializedObjectDD 
.DD 
UpdateDD #
(DD# $
)DD$ %
;DD% &
	EditorGUIFF 
.FF 
BeginChangeCheckFF &
(FF& '
)FF' (
;FF( )
EditorGUILayoutGG 
.GG 
PropertyFieldGG )
(GG) *
anchorPosition_propGG* =
)GG= >
;GG> ?
ifHH 
(HH 
anchorPosition_propHH #
.HH# $
enumValueIndexHH$ 2
==HH3 5
$numHH6 7
)HH7 8
{II 
	EditorGUIJJ 
.JJ 
indentLevelJJ %
+=JJ& (
$numJJ) *
;JJ* +
EditorGUILayoutKK 
.KK  
PropertyFieldKK  -
(KK- .

pivot_propKK. 8
,KK8 9
newKK: =

GUIContentKK> H
(KKH I
$strKKI Y
)KKY Z
)KKZ [
;KK[ \
	EditorGUILL 
.LL 
indentLevelLL %
-=LL& (
$numLL) *
;LL* +
}MM !
DrawDimensionPropertyPP !
(PP! "
rectangle_propPP" 0
,PP0 1
$strPP2 >
)PP> ?
;PP? @
DrawMaginPropertyQQ 
(QQ 
margins_propQQ *
,QQ* +
$strQQ, 5
)QQ5 6
;QQ6 7
ifRR 
(RR 
	EditorGUIRR 
.RR 
EndChangeCheckRR (
(RR( )
)RR) *
)RR* +
{SS 
ifUU 
(UU 
anchorPosition_propUU '
.UU' (
enumValueIndexUU( 6
!=UU7 9
$numUU: ;
)UU; <

pivot_propVV 
.VV 
vector2ValueVV +
=VV, -
GetAnchorPositionVV. ?
(VV? @
anchorPosition_propVV@ S
.VVS T
enumValueIndexVVT b
)VVb c
;VVc d
m_textContainerXX 
.XX  

hasChangedXX  *
=XX+ ,
trueXX- 1
;XX1 2
}YY 
serializedObject[[ 
.[[ #
ApplyModifiedProperties[[ 4
([[4 5
)[[5 6
;[[6 7
EditorGUILayout]] 
.]] 
Space]] !
(]]! "
)]]" #
;]]# $
}^^ 	
privateaa 
voidaa !
DrawDimensionPropertyaa *
(aa* +
SerializedPropertyaa+ =
propertyaa> F
,aaF G
stringaaH N
labelaaO T
)aaT U
{bb 	
floatcc 
old_LabelWidthcc  
=cc! "
EditorGUIUtilitycc# 3
.cc3 4

labelWidthcc4 >
;cc> ?
floatdd 
old_FieldWidthdd  
=dd! "
EditorGUIUtilitydd# 3
.dd3 4

fieldWidthdd4 >
;dd> ?
Rectff 
rectff 
=ff 
EditorGUILayoutff '
.ff' (
GetControlRectff( 6
(ff6 7
falseff7 <
,ff< =
$numff> @
)ff@ A
;ffA B
Rectgg 
pos0gg 
=gg 
newgg 
Rectgg  
(gg  !
rectgg! %
.gg% &
xgg& '
,gg' (
rectgg) -
.gg- .
ygg. /
+gg0 1
$numgg2 3
,gg3 4
rectgg5 9
.gg9 :
widthgg: ?
,gg? @
$numggA C
)ggC D
;ggD E
floatii 
widthii 
=ii 
rectii 
.ii 
widthii $
+ii% &
$numii' (
;ii( )
pos0jj 
.jj 
widthjj 
=jj 
old_LabelWidthjj '
;jj' (
GUIkk 
.kk 
Labelkk 
(kk 
pos0kk 
,kk 
labelkk !
)kk! "
;kk" #
Rectmm 
	rectanglemm 
=mm 
propertymm %
.mm% &
	rectValuemm& /
;mm/ 0
floatoo 
width_Boo 
=oo 
widthoo !
-oo" #
old_LabelWidthoo$ 2
;oo2 3
floatpp 

fieldWidthpp 
=pp 
width_Bpp &
/pp' (
$numpp) *
;pp* +
pos0qq 
.qq 
widthqq 
=qq 

fieldWidthqq #
-qq$ %
$numqq& '
;qq' (
pos0ss 
.ss 
xss 
=ss 
old_LabelWidthss #
+ss$ %
$numss& (
;ss( )
GUItt 
.tt 
Labeltt 
(tt 
pos0tt 
,tt 
$strtt #
)tt# $
;tt$ %
pos0vv 
.vv 
xvv 
+=vv 

fieldWidthvv  
;vv  !
	rectangleww 
.ww 
widthww 
=ww 
	EditorGUIww '
.ww' (

FloatFieldww( 2
(ww2 3
pos0ww3 7
,ww7 8

GUIContentww9 C
.wwC D
nonewwD H
,wwH I
	rectanglewwJ S
.wwS T
widthwwT Y
)wwY Z
;wwZ [
pos0yy 
.yy 
xyy 
+=yy 

fieldWidthyy  
;yy  !
GUIzz 
.zz 
Labelzz 
(zz 
pos0zz 
,zz 
$strzz $
)zz$ %
;zz% &
pos0|| 
.|| 
x|| 
+=|| 

fieldWidth||  
;||  !
	rectangle}} 
.}} 
height}} 
=}} 
	EditorGUI}} (
.}}( )

FloatField}}) 3
(}}3 4
pos0}}4 8
,}}8 9

GUIContent}}: D
.}}D E
none}}E I
,}}I J
	rectangle}}K T
.}}T U
height}}U [
)}}[ \
;}}\ ]
property 
. 
	rectValue 
=  
	rectangle! *
;* +
EditorGUIUtility
ÄÄ 
.
ÄÄ 

labelWidth
ÄÄ '
=
ÄÄ( )
old_LabelWidth
ÄÄ* 8
;
ÄÄ8 9
EditorGUIUtility
ÅÅ 
.
ÅÅ 

fieldWidth
ÅÅ '
=
ÅÅ( )
old_FieldWidth
ÅÅ* 8
;
ÅÅ8 9
}
ÇÇ 	
private
ÖÖ 
void
ÖÖ 
DrawMaginProperty
ÖÖ &
(
ÖÖ& ' 
SerializedProperty
ÖÖ' 9
property
ÖÖ: B
,
ÖÖB C
string
ÖÖD J
label
ÖÖK P
)
ÖÖP Q
{
ÜÜ 	
float
áá 
old_LabelWidth
áá  
=
áá! "
EditorGUIUtility
áá# 3
.
áá3 4

labelWidth
áá4 >
;
áá> ?
float
àà 
old_FieldWidth
àà  
=
àà! "
EditorGUIUtility
àà# 3
.
àà3 4

fieldWidth
àà4 >
;
àà> ?
Rect
ää 
rect
ää 
=
ää 
EditorGUILayout
ää '
.
ää' (
GetControlRect
ää( 6
(
ää6 7
false
ää7 <
,
ää< =
$num
ää> ?
*
ää@ A
$num
ääB D
)
ääD E
;
ääE F
Rect
ãã 
pos0
ãã 
=
ãã 
new
ãã 
Rect
ãã  
(
ãã  !
rect
ãã! %
.
ãã% &
x
ãã& '
,
ãã' (
rect
ãã) -
.
ãã- .
y
ãã. /
+
ãã0 1
$num
ãã2 3
,
ãã3 4
rect
ãã5 9
.
ãã9 :
width
ãã: ?
,
ãã? @
$num
ããA C
)
ããC D
;
ããD E
float
çç 
width
çç 
=
çç 
rect
çç 
.
çç 
width
çç $
+
çç% &
$num
çç' (
;
çç( )
pos0
éé 
.
éé 
width
éé 
=
éé 
old_LabelWidth
éé '
;
éé' (
GUI
èè 
.
èè 
Label
èè 
(
èè 
pos0
èè 
,
èè 
label
èè !
)
èè! "
;
èè" #
Vector4
íí 
vec
íí 
=
íí 
Vector4
íí !
.
íí! "
zero
íí" &
;
íí& '
vec
ìì 
.
ìì 
x
ìì 
=
ìì 
property
ìì 
.
ìì "
FindPropertyRelative
ìì 1
(
ìì1 2
$str
ìì2 5
)
ìì5 6
.
ìì6 7

floatValue
ìì7 A
;
ììA B
vec
îî 
.
îî 
y
îî 
=
îî 
property
îî 
.
îî "
FindPropertyRelative
îî 1
(
îî1 2
$str
îî2 5
)
îî5 6
.
îî6 7

floatValue
îî7 A
;
îîA B
vec
ïï 
.
ïï 
z
ïï 
=
ïï 
property
ïï 
.
ïï "
FindPropertyRelative
ïï 1
(
ïï1 2
$str
ïï2 5
)
ïï5 6
.
ïï6 7

floatValue
ïï7 A
;
ïïA B
vec
ññ 
.
ññ 
w
ññ 
=
ññ 
property
ññ 
.
ññ "
FindPropertyRelative
ññ 1
(
ññ1 2
$str
ññ2 5
)
ññ5 6
.
ññ6 7

floatValue
ññ7 A
;
ññA B
float
ôô 
widthB
ôô 
=
ôô 
width
ôô  
-
ôô! "
old_LabelWidth
ôô# 1
;
ôô1 2
float
öö 

fieldWidth
öö 
=
öö 
widthB
öö %
/
öö& '
$num
öö( )
;
öö) *
pos0
õõ 
.
õõ 
width
õõ 
=
õõ 

fieldWidth
õõ #
-
õõ$ %
$num
õõ& '
;
õõ' (
pos0
ûû 
.
ûû 
x
ûû 
=
ûû 
old_LabelWidth
ûû #
+
ûû$ %
$num
ûû& (
;
ûû( )
GUI
üü 
.
üü 
Label
üü 
(
üü 
pos0
üü 
,
üü 
$str
üü "
)
üü" #
;
üü# $
pos0
°° 
.
°° 
x
°° 
+=
°° 

fieldWidth
°°  
;
°°  !
GUI
¢¢ 
.
¢¢ 
Label
¢¢ 
(
¢¢ 
pos0
¢¢ 
,
¢¢ 
$str
¢¢ !
)
¢¢! "
;
¢¢" #
pos0
§§ 
.
§§ 
x
§§ 
+=
§§ 

fieldWidth
§§  
;
§§  !
GUI
•• 
.
•• 
Label
•• 
(
•• 
pos0
•• 
,
•• 
$str
•• #
)
••# $
;
••$ %
pos0
ßß 
.
ßß 
x
ßß 
+=
ßß 

fieldWidth
ßß  
;
ßß  !
GUI
®® 
.
®® 
Label
®® 
(
®® 
pos0
®® 
,
®® 
$str
®® $
)
®®$ %
;
®®% &
pos0
™™ 
.
™™ 
y
™™ 
+=
™™ 
$num
™™ 
;
™™ 
pos0
¨¨ 
.
¨¨ 
x
¨¨ 
=
¨¨ 
old_LabelWidth
¨¨ #
+
¨¨$ %
$num
¨¨& (
;
¨¨( )
vec
≠≠ 
.
≠≠ 
x
≠≠ 
=
≠≠ 
	EditorGUI
≠≠ 
.
≠≠ 

FloatField
≠≠ (
(
≠≠( )
pos0
≠≠) -
,
≠≠- .

GUIContent
≠≠/ 9
.
≠≠9 :
none
≠≠: >
,
≠≠> ?
vec
≠≠@ C
.
≠≠C D
x
≠≠D E
)
≠≠E F
;
≠≠F G
pos0
ØØ 
.
ØØ 
x
ØØ 
+=
ØØ 

fieldWidth
ØØ  
;
ØØ  !
vec
∞∞ 
.
∞∞ 
y
∞∞ 
=
∞∞ 
	EditorGUI
∞∞ 
.
∞∞ 

FloatField
∞∞ (
(
∞∞( )
pos0
∞∞) -
,
∞∞- .

GUIContent
∞∞/ 9
.
∞∞9 :
none
∞∞: >
,
∞∞> ?
vec
∞∞@ C
.
∞∞C D
y
∞∞D E
)
∞∞E F
;
∞∞F G
pos0
≤≤ 
.
≤≤ 
x
≤≤ 
+=
≤≤ 

fieldWidth
≤≤  
;
≤≤  !
vec
≥≥ 
.
≥≥ 
z
≥≥ 
=
≥≥ 
	EditorGUI
≥≥ 
.
≥≥ 

FloatField
≥≥ (
(
≥≥( )
pos0
≥≥) -
,
≥≥- .

GUIContent
≥≥/ 9
.
≥≥9 :
none
≥≥: >
,
≥≥> ?
vec
≥≥@ C
.
≥≥C D
z
≥≥D E
)
≥≥E F
;
≥≥F G
pos0
µµ 
.
µµ 
x
µµ 
+=
µµ 

fieldWidth
µµ  
;
µµ  !
vec
∂∂ 
.
∂∂ 
w
∂∂ 
=
∂∂ 
	EditorGUI
∂∂ 
.
∂∂ 

FloatField
∂∂ (
(
∂∂( )
pos0
∂∂) -
,
∂∂- .

GUIContent
∂∂/ 9
.
∂∂9 :
none
∂∂: >
,
∂∂> ?
vec
∂∂@ C
.
∂∂C D
w
∂∂D E
)
∂∂E F
;
∂∂F G
property
ππ 
.
ππ "
FindPropertyRelative
ππ )
(
ππ) *
$str
ππ* -
)
ππ- .
.
ππ. /

floatValue
ππ/ 9
=
ππ: ;
vec
ππ< ?
.
ππ? @
x
ππ@ A
;
ππA B
property
∫∫ 
.
∫∫ "
FindPropertyRelative
∫∫ )
(
∫∫) *
$str
∫∫* -
)
∫∫- .
.
∫∫. /

floatValue
∫∫/ 9
=
∫∫: ;
vec
∫∫< ?
.
∫∫? @
y
∫∫@ A
;
∫∫A B
property
ªª 
.
ªª "
FindPropertyRelative
ªª )
(
ªª) *
$str
ªª* -
)
ªª- .
.
ªª. /

floatValue
ªª/ 9
=
ªª: ;
vec
ªª< ?
.
ªª? @
z
ªª@ A
;
ªªA B
property
ºº 
.
ºº "
FindPropertyRelative
ºº )
(
ºº) *
$str
ºº* -
)
ºº- .
.
ºº. /

floatValue
ºº/ 9
=
ºº: ;
vec
ºº< ?
.
ºº? @
w
ºº@ A
;
ººA B
EditorGUIUtility
ææ 
.
ææ 

labelWidth
ææ '
=
ææ( )
old_LabelWidth
ææ* 8
;
ææ8 9
EditorGUIUtility
øø 
.
øø 

fieldWidth
øø '
=
øø( )
old_FieldWidth
øø* 8
;
øø8 9
}
¿¿ 	
Vector2
√√ 
GetAnchorPosition
√√ !
(
√√! "
int
√√" %
index
√√& +
)
√√+ ,
{
ƒƒ 	
Vector2
≈≈ 
anchorPosition
≈≈ "
=
≈≈# $
Vector2
≈≈% ,
.
≈≈, -
zero
≈≈- 1
;
≈≈1 2
switch
«« 
(
«« 
index
«« 
)
«« 
{
»» 
case
…… 
$num
…… 
:
…… 
anchorPosition
   "
=
  # $
new
  % (
Vector2
  ) 0
(
  0 1
$num
  1 2
,
  2 3
$num
  4 5
)
  5 6
;
  6 7
break
ÀÀ 
;
ÀÀ 
case
ÃÃ 
$num
ÃÃ 
:
ÃÃ 
anchorPosition
ÕÕ "
=
ÕÕ# $
new
ÕÕ% (
Vector2
ÕÕ) 0
(
ÕÕ0 1
$num
ÕÕ1 5
,
ÕÕ5 6
$num
ÕÕ7 8
)
ÕÕ8 9
;
ÕÕ9 :
break
ŒŒ 
;
ŒŒ 
case
œœ 
$num
œœ 
:
œœ 
anchorPosition
–– "
=
––# $
new
––% (
Vector2
––) 0
(
––0 1
$num
––1 2
,
––2 3
$num
––4 5
)
––5 6
;
––6 7
break
—— 
;
—— 
case
““ 
$num
““ 
:
““ 
anchorPosition
”” "
=
””# $
new
””% (
Vector2
””) 0
(
””0 1
$num
””1 2
,
””2 3
$num
””4 8
)
””8 9
;
””9 :
break
‘‘ 
;
‘‘ 
case
’’ 
$num
’’ 
:
’’ 
anchorPosition
÷÷ "
=
÷÷# $
new
÷÷% (
Vector2
÷÷) 0
(
÷÷0 1
$num
÷÷1 5
,
÷÷5 6
$num
÷÷7 ;
)
÷÷; <
;
÷÷< =
break
◊◊ 
;
◊◊ 
case
ÿÿ 
$num
ÿÿ 
:
ÿÿ 
anchorPosition
ŸŸ "
=
ŸŸ# $
new
ŸŸ% (
Vector2
ŸŸ) 0
(
ŸŸ0 1
$num
ŸŸ1 2
,
ŸŸ2 3
$num
ŸŸ4 8
)
ŸŸ8 9
;
ŸŸ9 :
break
⁄⁄ 
;
⁄⁄ 
case
€€ 
$num
€€ 
:
€€ 
anchorPosition
‹‹ "
=
‹‹# $
new
‹‹% (
Vector2
‹‹) 0
(
‹‹0 1
$num
‹‹1 2
,
‹‹2 3
$num
‹‹4 5
)
‹‹5 6
;
‹‹6 7
break
›› 
;
›› 
case
ﬁﬁ 
$num
ﬁﬁ 
:
ﬁﬁ 
anchorPosition
ﬂﬂ "
=
ﬂﬂ# $
new
ﬂﬂ% (
Vector2
ﬂﬂ) 0
(
ﬂﬂ0 1
$num
ﬂﬂ1 5
,
ﬂﬂ5 6
$num
ﬂﬂ7 8
)
ﬂﬂ8 9
;
ﬂﬂ9 :
break
‡‡ 
;
‡‡ 
case
·· 
$num
·· 
:
·· 
anchorPosition
‚‚ "
=
‚‚# $
new
‚‚% (
Vector2
‚‚) 0
(
‚‚0 1
$num
‚‚1 2
,
‚‚2 3
$num
‚‚4 5
)
‚‚5 6
;
‚‚6 7
break
„„ 
;
„„ 
}
‰‰ 
return
ÊÊ 
anchorPosition
ÊÊ !
;
ÊÊ! "
}
ÁÁ 	
}
ÍÍ 
}ÎÎ ﬂ
ûD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMPro_TexturePostProcessor.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
public

 

class

 &
TMPro_TexturePostProcessor

 +
:

, -
AssetPostprocessor

. @
{ 
void  
OnPostprocessTexture !
(! "
	Texture2D" +
texture, 3
)3 4
{ 	
	Texture2D 
tex 
= 
AssetDatabase )
.) *
LoadAssetAtPath* 9
(9 :
	assetPath: C
,C D
typeofE K
(K L
	Texture2DL U
)U V
)V W
asX Z
	Texture2D[ d
;d e
if 
( 
tex 
!= 
null 
) 
TMPro_EventManager "
." #,
 ON_SPRITE_ASSET_PROPERTY_CHANGED# C
(C D
trueD H
,H I
texJ M
)M N
;N O
} 	
} 
class 	"
FontAssetPostProcessor
  
:! "
AssetPostprocessor# 5
{ 
private 
static 
void "
OnPostprocessAllAssets 2
(2 3
string3 9
[9 :
]: ;
importedAssets< J
,J K
stringL R
[R S
]S T
deletedAssetsU b
,b c
stringd j
[j k
]k l
movedAssetsm x
,x y
string	z Ä
[
Ä Å
]
Å Ç!
movedFromAssetPaths
É ñ
)
ñ ó
{ 	
foreach 
( 
var 
asset 
in !
importedAssets" 0
)0 1
{ 
if 
( 
AssetDatabase !
.! ""
GetMainAssetTypeAtPath" 8
(8 9
asset9 >
)> ?
==@ B
typeofC I
(I J
TMP_FontAssetJ W
)W X
)X Y
{   
TMP_FontAsset!! !
	fontAsset!!" +
=!!, -
AssetDatabase!!. ;
.!!; <
LoadAssetAtPath!!< K
(!!K L
asset!!L Q
,!!Q R
typeof!!S Y
(!!Y Z
TMP_FontAsset!!Z g
)!!g h
)!!h i
as!!j l
TMP_FontAsset!!m z
;!!z {
if## 
(## 
	fontAsset## !
!=##" $
null##% )
)##) *%
TMP_EditorResourceManager$$ 1
.$$1 21
%RegisterFontAssetForDefinitionRefresh$$2 W
($$W X
	fontAsset$$X a
)$$a b
;$$b c
}%% 
}&& 
}'' 	
}(( 
}[[ •€	
†D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMPro_FontAssetCreatorWindow.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
public 

class (
TMPro_FontAssetCreatorWindow -
:. /
EditorWindow0 <
{ 
[ 	
MenuItem	 
( 
$str 9
,9 :
false; @
,@ A
$numB F
)F G
]G H
public 
static 
void &
ShowFontAtlasCreatorWindow 5
(5 6
)6 7
{ 	
var 
window 
= 
	GetWindow "
<" #(
TMPro_FontAssetCreatorWindow# ?
>? @
(@ A
)A B
;B C
window 
. 
titleContent 
=  !
new" %

GUIContent& 0
(0 1
$str1 E
)E F
;F G
window 
. 
Focus 
( 
) 
; 
window 
. #
CheckEssentialResources *
(* +
)+ ,
;, -
} 	
public 
static 
void &
ShowFontAtlasCreatorWindow 5
(5 6
Font6 :
sourceFontFile; I
)I J
{ 	
var   
window   
=   
	GetWindow   "
<  " #(
TMPro_FontAssetCreatorWindow  # ?
>  ? @
(  @ A
)  A B
;  B C
window"" 
."" 
titleContent"" 
=""  !
new""" %

GUIContent""& 0
(""0 1
$str""1 E
)""E F
;""F G
window## 
.## 
Focus## 
(## 
)## 
;## 
window%% 
.%% 
ClearGeneratedData%% %
(%%% &
)%%& '
;%%' (
window&& 
.&& 
m_LegacyFontAsset&& $
=&&% &
null&&' +
;&&+ ,
window'' 
.'' 
m_SelectedFontAsset'' &
=''' (
null'') -
;''- .
window** 
.** 
m_SourceFontFile** #
=**$ %
sourceFontFile**& 4
;**4 5
window-- 
.-- #
CheckEssentialResources-- *
(--* +
)--+ ,
;--, -
}.. 	
public11 
static11 
void11 &
ShowFontAtlasCreatorWindow11 5
(115 6
TMP_FontAsset116 C
	fontAsset11D M
)11M N
{22 	
var33 
window33 
=33 
	GetWindow33 "
<33" #(
TMPro_FontAssetCreatorWindow33# ?
>33? @
(33@ A
)33A B
;33B C
window55 
.55 
titleContent55 
=55  !
new55" %

GUIContent55& 0
(550 1
$str551 E
)55E F
;55F G
window66 
.66 
Focus66 
(66 
)66 
;66 
window99 
.99 
ClearGeneratedData99 %
(99% &
)99& '
;99' (
window:: 
.:: 
m_LegacyFontAsset:: $
=::% &
null::' +
;::+ ,
if== 
(== 
string== 
.== 
IsNullOrEmpty== $
(==$ %
	fontAsset==% .
.==. /
creationSettings==/ ?
.==? @
sourceFontFileGUID==@ R
)==R S
====T V
false==W \
)==\ ]
{>> 
window?? 
.?? $
LoadFontCreationSettings?? /
(??/ 0
	fontAsset??0 9
.??9 :
creationSettings??: J
)??J K
;??K L
windowBB 
.BB '
m_CharacterSetSelectionModeBB 2
=BB3 4
$numBB5 6
;BB6 7
windowCC 
.CC 
m_CharacterSequenceCC *
=CC+ ,
TMP_EditorUtilityCC- >
.CC> ?'
GetUnicodeCharacterSequenceCC? Z
(CCZ [
TMP_FontAssetCC[ h
.CCh i
GetCharactersArrayCCi {
(CC{ |
	fontAsset	CC| Ö
)
CCÖ Ü
)
CCÜ á
;
CCá à
windowFF 
.FF !
m_ReferencedFontAssetFF ,
=FF- .
	fontAssetFF/ 8
;FF8 9
windowGG 
.GG 
m_SavedFontAtlasGG '
=GG( )
	fontAssetGG* 3
.GG3 4
atlasTextureGG4 @
;GG@ A
}HH 
elseII 
{JJ 
windowKK 
.KK 
m_WarningMessageKK '
=KK( )
$strKK* 8
+KK9 :
	fontAssetKK; D
.KKD E
nameKKE I
+KKJ K
$str	KKL §
+
KK• ¶
	fontAsset
KKß ∞
.
KK∞ ±
name
KK± µ
+
KK∂ ∑
$str
KK∏ 
;
KK Ò
windowLL 
.LL 
m_SourceFontFileLL '
=LL( )
nullLL* .
;LL. /
windowMM 
.MM 
m_LegacyFontAssetMM (
=MM) *
	fontAssetMM+ 4
;MM4 5
}NN 
windowQQ 
.QQ 
m_SelectedFontAssetQQ &
=QQ' (
	fontAssetQQ) 2
;QQ2 3
windowTT 
.TT #
CheckEssentialResourcesTT *
(TT* +
)TT+ ,
;TT, -
}UU 	
[WW 	
SystemWW	 
.WW 
SerializableWW 
]WW 
classXX .
"FontAssetCreationSettingsContainerXX 0
{YY 	
publicZZ 
ListZZ 
<ZZ %
FontAssetCreationSettingsZZ 1
>ZZ1 2%
fontAssetCreationSettingsZZ3 L
;ZZL M
}[[ 	.
"FontAssetCreationSettingsContainer]] *0
$m_FontAssetCreationSettingsContainer]]+ O
;]]O P
int`` 3
'm_FontAssetCreationSettingsCurrentIndex`` 3
=``4 5
$num``6 7
;``7 8
constbb 
stringbb 3
'k_FontAssetCreationSettingsContainerKeybb <
=bb= >
$str	bb? á
;
bbá à
constcc 
stringcc 6
*k_FontAssetCreationSettingsCurrentIndexKeycc ?
=cc@ A
$str	ccB ç
;
ccç é
constdd 
floatdd $
k_TwoColumnControlsWidthdd ,
=dd- .
$numdd/ 3
;dd3 4
Systemgg 
.gg 
Diagnosticsgg 
.gg 
	Stopwatchgg $
m_StopWatchgg% 0
;gg0 1
doublehh (
m_GlyphPackingGenerationTimehh +
;hh+ ,
doubleii *
m_GlyphRenderingGenerationTimeii -
;ii- .
stringkk 
[kk 
]kk 
m_FontSizingOptionskk $
=kk% &
{kk' (
$strkk) 6
,kk6 7
$strkk8 E
}kkF G
;kkG H
intll #
m_PointSizeSamplingModell #
;ll# $
stringmm 
[mm 
]mm "
m_FontResolutionLabelsmm '
=mm( )
{mm* +
$strmm, /
,mm/ 0
$strmm1 5
,mm5 6
$strmm6 :
,mm: ;
$strmm< @
,mm@ A
$strmmB G
,mmG H
$strmmI N
,mmN O
$strmmP U
,mmU V
$strmmW ]
,mm] ^
$strmm_ e
,mme f
$strmmg m
,mmm n
$strmmo u
}mmv w
;mmw x
intnn 
[nn 
]nn "
m_FontAtlasResolutionsnn $
=nn% &
{nn' (
$numnn) *
,nn* +
$numnn, .
,nn. /
$numnn0 2
,nn2 3
$numnn4 6
,nn6 7
$numnn8 ;
,nn; <
$numnn= @
,nn@ A
$numnnB E
,nnE F
$numnnG K
,nnK L
$numnnM Q
,nnQ R
$numnnS W
,nnW X
$numnnY ]
}nn^ _
;nn_ `
stringoo 
[oo 
]oo 
m_FontCharacterSetsoo $
=oo% &
{oo' (
$stroo) 0
,oo0 1
$stroo2 B
,ooB C
$strooD U
,ooU V
$strooW h
,ooh i
$strooj }
,oo} ~
$str	oo ç
,
ooç é
$str
ooè §
,
oo§ •
$str
oo¶ π
,
ooπ ∫
$str
ooª —
}
oo“ ”
;
oo” ‘
enumpp 
FontPackingModespp 
{pp 
Fastpp  $
=pp% &
$numpp' (
,pp( )
Optimumpp* 1
=pp2 3
$numpp4 5
}pp6 7
;pp7 8
FontPackingModesqq 
m_PackingModeqq &
=qq' (
FontPackingModesqq) 9
.qq9 :
Fastqq: >
;qq> ?
intss '
m_CharacterSetSelectionModess '
;ss' (
stringuu 
m_CharacterSequenceuu "
=uu# $
$struu% '
;uu' (
stringvv 
m_OutputFeedbackvv 
=vv  !
$strvv" $
;vv$ %
stringww 
m_WarningMessageww 
;ww  
intxx 
m_CharacterCountxx 
;xx 
Vector2yy 
m_ScrollPositionyy  
;yy  !
Vector2zz "
m_OutputScrollPositionzz &
;zz& '
bool|| 
m_IsRepaintNeeded|| 
;|| 
float~~ %
m_AtlasGenerationProgress~~ '
;~~' (
string *
m_AtlasGenerationProgressLabel -
=. /
string0 6
.6 7
Empty7 <
;< =
float
ÄÄ !
m_RenderingProgress
ÄÄ !
;
ÄÄ! "
bool
ÅÅ "
m_IsGlyphPackingDone
ÅÅ !
;
ÅÅ! "
bool
ÇÇ $
m_IsGlyphRenderingDone
ÇÇ #
;
ÇÇ# $
bool
ÉÉ 
m_IsRenderingDone
ÉÉ 
;
ÉÉ 
bool
ÑÑ 
m_IsProcessing
ÑÑ 
;
ÑÑ 
bool
ÖÖ $
m_IsGenerationDisabled
ÖÖ #
;
ÖÖ# $
bool
ÜÜ %
m_IsGenerationCancelled
ÜÜ $
;
ÜÜ$ %
bool
àà "
m_IsFontAtlasInvalid
àà !
;
àà! "
Object
ââ 
m_SourceFontFile
ââ 
;
ââ  
TMP_FontAsset
ää !
m_SelectedFontAsset
ää )
;
ää) *
TMP_FontAsset
ãã 
m_LegacyFontAsset
ãã '
;
ãã' (
TMP_FontAsset
åå #
m_ReferencedFontAsset
åå +
;
åå+ ,
	TextAsset
éé "
m_CharactersFromFile
éé &
;
éé& '
int
èè 
m_PointSize
èè 
;
èè 
int
êê 
	m_Padding
êê 
=
êê 
$num
êê 
;
êê 
GlyphRenderMode
îî 
m_GlyphRenderMode
îî )
=
îî* +
GlyphRenderMode
îî, ;
.
îî; <
SDFAA
îî< A
;
îîA B
int
ïï 
m_AtlasWidth
ïï 
=
ïï 
$num
ïï 
;
ïï 
int
ññ 
m_AtlasHeight
ññ 
=
ññ 
$num
ññ 
;
ññ  
byte
óó 
[
óó 
]
óó "
m_AtlasTextureBuffer
óó #
;
óó# $
	Texture2D
òò  
m_FontAtlasTexture
òò $
;
òò$ %
	Texture2D
ôô 
m_SavedFontAtlas
ôô "
;
ôô" #
List
úú 
<
úú 
Glyph
úú 
>
úú 
m_FontGlyphTable
úú $
=
úú% &
new
úú' *
List
úú+ /
<
úú/ 0
Glyph
úú0 5
>
úú5 6
(
úú6 7
)
úú7 8
;
úú8 9
List
ùù 
<
ùù 
TMP_Character
ùù 
>
ùù "
m_FontCharacterTable
ùù 0
=
ùù1 2
new
ùù3 6
List
ùù7 ;
<
ùù; <
TMP_Character
ùù< I
>
ùùI J
(
ùùJ K
)
ùùK L
;
ùùL M

Dictionary
üü 
<
üü 
uint
üü 
,
üü 
uint
üü 
>
üü "
m_CharacterLookupMap
üü 3
=
üü4 5
new
üü6 9

Dictionary
üü: D
<
üüD E
uint
üüE I
,
üüI J
uint
üüK O
>
üüO P
(
üüP Q
)
üüQ R
;
üüR S

Dictionary
†† 
<
†† 
uint
†† 
,
†† 
List
†† 
<
†† 
uint
†† "
>
††" #
>
††# $
m_GlyphLookupMap
††% 5
=
††6 7
new
††8 ;

Dictionary
††< F
<
††F G
uint
††G K
,
††K L
List
††M Q
<
††Q R
uint
††R V
>
††V W
>
††W X
(
††X Y
)
††Y Z
;
††Z [
List
¢¢ 
<
¢¢ 
Glyph
¢¢ 
>
¢¢ 
m_GlyphsToPack
¢¢ "
=
¢¢# $
new
¢¢% (
List
¢¢) -
<
¢¢- .
Glyph
¢¢. 3
>
¢¢3 4
(
¢¢4 5
)
¢¢5 6
;
¢¢6 7
List
££ 
<
££ 
Glyph
££ 
>
££ 
m_GlyphsPacked
££ "
=
££# $
new
££% (
List
££) -
<
££- .
Glyph
££. 3
>
££3 4
(
££4 5
)
££5 6
;
££6 7
List
§§ 
<
§§ 
	GlyphRect
§§ 
>
§§ 
m_FreeGlyphRects
§§ (
=
§§) *
new
§§+ .
List
§§/ 3
<
§§3 4
	GlyphRect
§§4 =
>
§§= >
(
§§> ?
)
§§? @
;
§§@ A
List
•• 
<
•• 
	GlyphRect
•• 
>
•• 
m_UsedGlyphRects
•• (
=
••) *
new
••+ .
List
••/ 3
<
••3 4
	GlyphRect
••4 =
>
••= >
(
••> ?
)
••? @
;
••@ A
List
¶¶ 
<
¶¶ 
Glyph
¶¶ 
>
¶¶ 
m_GlyphsToRender
¶¶ $
=
¶¶% &
new
¶¶' *
List
¶¶+ /
<
¶¶/ 0
Glyph
¶¶0 5
>
¶¶5 6
(
¶¶6 7
)
¶¶7 8
;
¶¶8 9
List
ßß 
<
ßß 
uint
ßß 
>
ßß $
m_AvailableGlyphsToAdd
ßß )
=
ßß* +
new
ßß, /
List
ßß0 4
<
ßß4 5
uint
ßß5 9
>
ßß9 :
(
ßß: ;
)
ßß; <
;
ßß< =
List
®® 
<
®® 
uint
®® 
>
®® !
m_MissingCharacters
®® &
=
®®' (
new
®®) ,
List
®®- 1
<
®®1 2
uint
®®2 6
>
®®6 7
(
®®7 8
)
®®8 9
;
®®9 :
List
©© 
<
©© 
uint
©© 
>
©© "
m_ExcludedCharacters
©© '
=
©©( )
new
©©* -
List
©©. 2
<
©©2 3
uint
©©3 7
>
©©7 8
(
©©8 9
)
©©9 :
;
©©: ;
private
´´ 
FaceInfo
´´ 

m_FaceInfo
´´ #
;
´´# $
bool
≠≠ #
m_IncludeFontFeatures
≠≠ "
;
≠≠" #
public
∞∞ 
void
∞∞ 
OnEnable
∞∞ 
(
∞∞ 
)
∞∞ 
{
±± 	
m_StopWatch
≥≥ 
=
≥≥ 
new
≥≥ 
System
≥≥ $
.
≥≥$ %
Diagnostics
≥≥% 0
.
≥≥0 1
	Stopwatch
≥≥1 :
(
≥≥: ;
)
≥≥; <
;
≥≥< =
minSize
∂∂ 
=
∂∂ 
new
∂∂ 
Vector2
∂∂ !
(
∂∂! "
$num
∂∂" %
,
∂∂% &
minSize
∂∂' .
.
∂∂. /
y
∂∂/ 0
)
∂∂0 1
;
∂∂1 2
ShaderUtilities
ππ 
.
ππ "
GetShaderPropertyIDs
ππ 0
(
ππ0 1
)
ππ1 2
;
ππ2 3
if
ºº 
(
ºº 
EditorPrefs
ºº 
.
ºº 
HasKey
ºº "
(
ºº" #5
'k_FontAssetCreationSettingsContainerKey
ºº# J
)
ººJ K
)
ººK L
{
ΩΩ 
if
ææ 
(
ææ 2
$m_FontAssetCreationSettingsContainer
ææ 8
==
ææ9 ;
null
ææ< @
)
ææ@ A2
$m_FontAssetCreationSettingsContainer
øø 8
=
øø9 :
JsonUtility
øø; F
.
øøF G
FromJson
øøG O
<
øøO P0
"FontAssetCreationSettingsContainer
øøP r
>
øør s
(
øøs t
EditorPrefs
øøt 
.øø Ä
	GetStringøøÄ â
(øøâ ä7
'k_FontAssetCreationSettingsContainerKeyøøä ±
)øø± ≤
)øø≤ ≥
;øø≥ ¥
if
¡¡ 
(
¡¡ 2
$m_FontAssetCreationSettingsContainer
¡¡ 8
.
¡¡8 9'
fontAssetCreationSettings
¡¡9 R
!=
¡¡S U
null
¡¡V Z
&&
¡¡[ ]3
$m_FontAssetCreationSettingsContainer¡¡^ Ç
.¡¡Ç É)
fontAssetCreationSettings¡¡É ú
.¡¡ú ù
Count¡¡ù ¢
>¡¡£ §
$num¡¡• ¶
)¡¡¶ ß
{
¬¬ 
if
ƒƒ 
(
ƒƒ 
EditorPrefs
ƒƒ #
.
ƒƒ# $
HasKey
ƒƒ$ *
(
ƒƒ* +8
*k_FontAssetCreationSettingsCurrentIndexKey
ƒƒ+ U
)
ƒƒU V
)
ƒƒV W5
'm_FontAssetCreationSettingsCurrentIndex
≈≈ ?
=
≈≈@ A
EditorPrefs
≈≈B M
.
≈≈M N
GetInt
≈≈N T
(
≈≈T U8
*k_FontAssetCreationSettingsCurrentIndexKey
≈≈U 
)≈≈ Ä
;≈≈Ä Å&
LoadFontCreationSettings
«« ,
(
««, -2
$m_FontAssetCreationSettingsContainer
««- Q
.
««Q R'
fontAssetCreationSettings
««R k
[
««k l6
'm_FontAssetCreationSettingsCurrentIndex««l ì
]««ì î
)««î ï
;««ï ñ
}
»» 
}
……  
ClearGeneratedData
ÀÀ 
(
ÀÀ 
)
ÀÀ  
;
ÀÀ  !
}
ÃÃ 	
public
œœ 
void
œœ 
	OnDisable
œœ 
(
œœ 
)
œœ 
{
–– 	

FontEngine
‘‘ 
.
‘‘ 
DestroyFontEngine
‘‘ (
(
‘‘( )
)
‘‘) *
;
‘‘* + 
ClearGeneratedData
÷÷ 
(
÷÷ 
)
÷÷  
;
÷÷  !
if
ŸŸ 
(
ŸŸ 
File
ŸŸ 
.
ŸŸ 
Exists
ŸŸ 
(
ŸŸ 
$str
ŸŸ B
)
ŸŸB C
)
ŸŸC D
{
⁄⁄ 
File
€€ 
.
€€ 
Delete
€€ 
(
€€ 
$str
€€ B
)
€€B C
;
€€C D
File
‹‹ 
.
‹‹ 
Delete
‹‹ 
(
‹‹ 
$str
‹‹ G
)
‹‹G H
;
‹‹H I
AssetDatabase
ﬁﬁ 
.
ﬁﬁ 
Refresh
ﬁﬁ %
(
ﬁﬁ% &
)
ﬁﬁ& '
;
ﬁﬁ' (
}
ﬂﬂ /
!SaveCreationSettingsToEditorPrefs
‚‚ -
(
‚‚- .&
SaveFontCreationSettings
‚‚. F
(
‚‚F G
)
‚‚G H
)
‚‚H I
;
‚‚I J
EditorPrefs
„„ 
.
„„ 
SetInt
„„ 
(
„„ 8
*k_FontAssetCreationSettingsCurrentIndexKey
„„ I
,
„„I J5
'm_FontAssetCreationSettingsCurrentIndex
„„K r
)
„„r s
;
„„s t 
TMPro_EventManager
ÊÊ 
.
ÊÊ !
RESOURCE_LOAD_EVENT
ÊÊ 2
.
ÊÊ2 3
Remove
ÊÊ3 9
(
ÊÊ9 :!
ON_RESOURCES_LOADED
ÊÊ: M
)
ÊÊM N
;
ÊÊN O
	Resources
ËË 
.
ËË  
UnloadUnusedAssets
ËË (
(
ËË( )
)
ËË) *
;
ËË* +
}
ÈÈ 	
void
ÌÌ !
ON_RESOURCES_LOADED
ÌÌ  
(
ÌÌ  !
)
ÌÌ! "
{
ÓÓ 	 
TMPro_EventManager
ÔÔ 
.
ÔÔ !
RESOURCE_LOAD_EVENT
ÔÔ 2
.
ÔÔ2 3
Remove
ÔÔ3 9
(
ÔÔ9 :!
ON_RESOURCES_LOADED
ÔÔ: M
)
ÔÔM N
;
ÔÔN O$
m_IsGenerationDisabled
ÒÒ "
=
ÒÒ# $
false
ÒÒ% *
;
ÒÒ* +
}
ÚÚ 	
void
ıı %
CheckEssentialResources
ıı $
(
ıı$ %
)
ıı% &
{
ˆˆ 	
if
˜˜ 
(
˜˜ 
TMP_Settings
˜˜ 
.
˜˜ 
instance
˜˜ %
==
˜˜& (
null
˜˜) -
)
˜˜- .
{
¯¯ 
if
˘˘ 
(
˘˘ $
m_IsGenerationDisabled
˘˘ *
==
˘˘+ -
false
˘˘. 3
)
˘˘3 4 
TMPro_EventManager
˙˙ &
.
˙˙& '!
RESOURCE_LOAD_EVENT
˙˙' :
.
˙˙: ;
Add
˙˙; >
(
˙˙> ?!
ON_RESOURCES_LOADED
˙˙? R
)
˙˙R S
;
˙˙S T$
m_IsGenerationDisabled
¸¸ &
=
¸¸' (
true
¸¸) -
;
¸¸- .
}
˝˝ 
}
˛˛ 	
public
ÅÅ 
void
ÅÅ 
OnGUI
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
	GUILayout
ÉÉ 
.
ÉÉ 
BeginHorizontal
ÉÉ %
(
ÉÉ% &
)
ÉÉ& '
;
ÉÉ' (
DrawControls
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
if
ÖÖ 
(
ÖÖ 
position
ÖÖ 
.
ÖÖ 
width
ÖÖ 
>
ÖÖ  
position
ÖÖ! )
.
ÖÖ) *
height
ÖÖ* 0
&&
ÖÖ1 3
position
ÖÖ4 <
.
ÖÖ< =
width
ÖÖ= B
>
ÖÖC D&
k_TwoColumnControlsWidth
ÖÖE ]
)
ÖÖ] ^
{
ÜÜ 
DrawPreview
áá 
(
áá 
)
áá 
;
áá 
}
àà 
	GUILayout
ââ 
.
ââ 
EndHorizontal
ââ #
(
ââ# $
)
ââ$ %
;
ââ% &
}
ää 	
public
çç 
void
çç 
Update
çç 
(
çç 
)
çç 
{
éé 	
if
èè 
(
èè 
m_IsRepaintNeeded
èè !
)
èè! "
{
êê 
m_IsRepaintNeeded
íí !
=
íí" #
false
íí$ )
;
íí) *
Repaint
ìì 
(
ìì 
)
ìì 
;
ìì 
}
îî 
if
óó 
(
óó 
m_IsProcessing
óó 
)
óó 
{
òò '
m_AtlasGenerationProgress
ôô )
=
ôô* +

FontEngine
ôô, 6
.
ôô6 7 
generationProgress
ôô7 I
;
ôôI J
m_IsRepaintNeeded
õõ !
=
õõ" #
true
õõ$ (
;
õõ( )
}
úú 
if
ûû 
(
ûû "
m_IsGlyphPackingDone
ûû $
)
ûû$ %
{
üü 
Debug
†† 
.
†† 
Log
†† 
(
†† 
$str
†† 8
+
††9 :*
m_GlyphPackingGenerationTime
††; W
.
††W X
ToString
††X `
(
††` a
$str
††a l
)
††l m
)
††m n
;
††n o"
m_IsGlyphPackingDone
°° $
=
°°% &
false
°°' ,
;
°°, -
}
¢¢ 
if
§§ 
(
§§ $
m_IsGlyphRenderingDone
§§ &
)
§§& '
{
•• 
Debug
¶¶ 
.
¶¶ 
Log
¶¶ 
(
¶¶ 
$str
¶¶ @
+
¶¶A B,
m_GlyphRenderingGenerationTime
¶¶C a
.
¶¶a b
ToString
¶¶b j
(
¶¶j k
$str
¶¶k v
)
¶¶v w
)
¶¶w x
;
¶¶x y$
m_IsGlyphRenderingDone
ßß &
=
ßß' (
false
ßß) .
;
ßß. /
}
®® 
if
´´ 
(
´´ 
m_IsRenderingDone
´´ !
)
´´! "
{
¨¨ 
m_IsProcessing
≠≠ 
=
≠≠  
false
≠≠! &
;
≠≠& '
m_IsRenderingDone
ÆÆ !
=
ÆÆ" #
false
ÆÆ$ )
;
ÆÆ) *
if
∞∞ 
(
∞∞ %
m_IsGenerationCancelled
∞∞ +
==
∞∞, .
false
∞∞/ 4
)
∞∞4 5
{
±± ,
m_AtlasGenerationProgressLabel
≤≤ 2
=
≤≤3 4
$str
≤≤5 P
+
≤≤Q R
(
≤≤S T*
m_GlyphPackingGenerationTime
≤≤T p
+
≤≤q r-
m_GlyphRenderingGenerationTime≤≤s ë
)≤≤ë í
.≤≤í ì
ToString≤≤ì õ
(≤≤õ ú
$str≤≤ú ¶
)≤≤¶ ß
;≤≤ß ®(
UpdateRenderFeedbackWindow
¥¥ .
(
¥¥. /
)
¥¥/ 0
;
¥¥0 1$
CreateFontAtlasTexture
µµ *
(
µµ* +
)
µµ+ ,
;
µµ, - 
m_FontAtlasTexture
∏∏ &
.
∏∏& '
Apply
∏∏' ,
(
∏∏, -
false
∏∏- 2
,
∏∏2 3
false
∏∏4 9
)
∏∏9 :
;
∏∏: ;
}
ππ 
Repaint
∫∫ 
(
∫∫ 
)
∫∫ 
;
∫∫ 
}
ªª 
}
ºº 	
static
ƒƒ 
uint
ƒƒ 
[
ƒƒ 
]
ƒƒ !
ParseNumberSequence
ƒƒ )
(
ƒƒ) *
string
ƒƒ* 0
sequence
ƒƒ1 9
)
ƒƒ9 :
{
≈≈ 	
List
∆∆ 
<
∆∆ 
uint
∆∆ 
>
∆∆ 
unicodeList
∆∆ "
=
∆∆# $
new
∆∆% (
List
∆∆) -
<
∆∆- .
uint
∆∆. 2
>
∆∆2 3
(
∆∆3 4
)
∆∆4 5
;
∆∆5 6
string
«« 
[
«« 
]
«« 
	sequences
«« 
=
««  
sequence
««! )
.
««) *
Split
««* /
(
««/ 0
$char
««0 3
)
««3 4
;
««4 5
foreach
…… 
(
…… 
string
…… 
seq
…… 
in
……  "
	sequences
……# ,
)
……, -
{
   
string
ÀÀ 
[
ÀÀ 
]
ÀÀ 
s1
ÀÀ 
=
ÀÀ 
seq
ÀÀ !
.
ÀÀ! "
Split
ÀÀ" '
(
ÀÀ' (
$char
ÀÀ( +
)
ÀÀ+ ,
;
ÀÀ, -
if
ÕÕ 
(
ÕÕ 
s1
ÕÕ 
.
ÕÕ 
Length
ÕÕ 
==
ÕÕ  
$num
ÕÕ! "
)
ÕÕ" #
try
ŒŒ 
{
œœ 
unicodeList
–– #
.
––# $
Add
––$ '
(
––' (
uint
––( ,
.
––, -
Parse
––- 2
(
––2 3
s1
––3 5
[
––5 6
$num
––6 7
]
––7 8
)
––8 9
)
––9 :
;
––: ;
}
—— 
catch
““ 
{
”” 
Debug
‘‘ 
.
‘‘ 
Log
‘‘ !
(
‘‘! "
$str
‘‘" M
)
‘‘M N
;
‘‘N O
}
’’ 
else
÷÷ 
{
◊◊ 
for
ÿÿ 
(
ÿÿ 
uint
ÿÿ 
j
ÿÿ 
=
ÿÿ  !
uint
ÿÿ" &
.
ÿÿ& '
Parse
ÿÿ' ,
(
ÿÿ, -
s1
ÿÿ- /
[
ÿÿ/ 0
$num
ÿÿ0 1
]
ÿÿ1 2
)
ÿÿ2 3
;
ÿÿ3 4
j
ÿÿ5 6
<
ÿÿ7 8
uint
ÿÿ9 =
.
ÿÿ= >
Parse
ÿÿ> C
(
ÿÿC D
s1
ÿÿD F
[
ÿÿF G
$num
ÿÿG H
]
ÿÿH I
)
ÿÿI J
+
ÿÿK L
$num
ÿÿM N
;
ÿÿN O
j
ÿÿP Q
++
ÿÿQ S
)
ÿÿS T
{
ŸŸ 
unicodeList
⁄⁄ #
.
⁄⁄# $
Add
⁄⁄$ '
(
⁄⁄' (
j
⁄⁄( )
)
⁄⁄) *
;
⁄⁄* +
}
€€ 
}
‹‹ 
}
›› 
return
ﬂﬂ 
unicodeList
ﬂﬂ 
.
ﬂﬂ 
ToArray
ﬂﬂ &
(
ﬂﬂ& '
)
ﬂﬂ' (
;
ﬂﬂ( )
}
‡‡ 	
static
ËË 
uint
ËË 
[
ËË 
]
ËË $
ParseHexNumberSequence
ËË ,
(
ËË, -
string
ËË- 3
sequence
ËË4 <
)
ËË< =
{
ÈÈ 	
List
ÍÍ 
<
ÍÍ 
uint
ÍÍ 
>
ÍÍ 
unicodeList
ÍÍ "
=
ÍÍ# $
new
ÍÍ% (
List
ÍÍ) -
<
ÍÍ- .
uint
ÍÍ. 2
>
ÍÍ2 3
(
ÍÍ3 4
)
ÍÍ4 5
;
ÍÍ5 6
string
ÎÎ 
[
ÎÎ 
]
ÎÎ 
	sequences
ÎÎ 
=
ÎÎ  
sequence
ÎÎ! )
.
ÎÎ) *
Split
ÎÎ* /
(
ÎÎ/ 0
$char
ÎÎ0 3
)
ÎÎ3 4
;
ÎÎ4 5
foreach
ÌÌ 
(
ÌÌ 
string
ÌÌ 
seq
ÌÌ 
in
ÌÌ  "
	sequences
ÌÌ# ,
)
ÌÌ, -
{
ÓÓ 
string
ÔÔ 
[
ÔÔ 
]
ÔÔ 
s1
ÔÔ 
=
ÔÔ 
seq
ÔÔ !
.
ÔÔ! "
Split
ÔÔ" '
(
ÔÔ' (
$char
ÔÔ( +
)
ÔÔ+ ,
;
ÔÔ, -
if
ÒÒ 
(
ÒÒ 
s1
ÒÒ 
.
ÒÒ 
Length
ÒÒ 
==
ÒÒ  
$num
ÒÒ! "
)
ÒÒ" #
try
ÚÚ 
{
ÛÛ 
unicodeList
ÙÙ #
.
ÙÙ# $
Add
ÙÙ$ '
(
ÙÙ' (
uint
ÙÙ( ,
.
ÙÙ, -
Parse
ÙÙ- 2
(
ÙÙ2 3
s1
ÙÙ3 5
[
ÙÙ5 6
$num
ÙÙ6 7
]
ÙÙ7 8
,
ÙÙ8 9
NumberStyles
ÙÙ: F
.
ÙÙF G
AllowHexSpecifier
ÙÙG X
)
ÙÙX Y
)
ÙÙY Z
;
ÙÙZ [
}
ıı 
catch
ˆˆ 
{
˜˜ 
Debug
¯¯ 
.
¯¯ 
Log
¯¯ !
(
¯¯! "
$str
¯¯" M
)
¯¯M N
;
¯¯N O
}
˘˘ 
else
˙˙ 
{
˚˚ 
for
¸¸ 
(
¸¸ 
uint
¸¸ 
j
¸¸ 
=
¸¸  !
uint
¸¸" &
.
¸¸& '
Parse
¸¸' ,
(
¸¸, -
s1
¸¸- /
[
¸¸/ 0
$num
¸¸0 1
]
¸¸1 2
,
¸¸2 3
NumberStyles
¸¸4 @
.
¸¸@ A
AllowHexSpecifier
¸¸A R
)
¸¸R S
;
¸¸S T
j
¸¸U V
<
¸¸W X
uint
¸¸Y ]
.
¸¸] ^
Parse
¸¸^ c
(
¸¸c d
s1
¸¸d f
[
¸¸f g
$num
¸¸g h
]
¸¸h i
,
¸¸i j
NumberStyles
¸¸k w
.
¸¸w x 
AllowHexSpecifier¸¸x â
)¸¸â ä
+¸¸ã å
$num¸¸ç é
;¸¸é è
j¸¸ê ë
++¸¸ë ì
)¸¸ì î
{
˝˝ 
unicodeList
˛˛ #
.
˛˛# $
Add
˛˛$ '
(
˛˛' (
j
˛˛( )
)
˛˛) *
;
˛˛* +
}
ˇˇ 
}
ÄÄ 
}
ÅÅ 
return
ÉÉ 
unicodeList
ÉÉ 
.
ÉÉ 
ToArray
ÉÉ &
(
ÉÉ& '
)
ÉÉ' (
;
ÉÉ( )
}
ÑÑ 	
void
áá 
DrawControls
áá 
(
áá 
)
áá 
{
àà 	
	GUILayout
ââ 
.
ââ 
Space
ââ 
(
ââ 
$num
ââ 
)
ââ 
;
ââ  
if
ãã 
(
ãã 
position
ãã 
.
ãã 
width
ãã 
>
ãã  
position
ãã! )
.
ãã) *
height
ãã* 0
&&
ãã1 3
position
ãã4 <
.
ãã< =
width
ãã= B
>
ããC D&
k_TwoColumnControlsWidth
ããE ]
)
ãã] ^
{
åå 
m_ScrollPosition
çç  
=
çç! "
EditorGUILayout
çç# 2
.
çç2 3
BeginScrollView
çç3 B
(
ççB C
m_ScrollPosition
ççC S
,
ççS T
	GUILayout
ççU ^
.
çç^ _
Width
çç_ d
(
ççd e
$num
ççe h
)
ççh i
)
ççi j
;
ççj k
}
éé 
else
èè 
{
êê 
m_ScrollPosition
ëë  
=
ëë! "
EditorGUILayout
ëë# 2
.
ëë2 3
BeginScrollView
ëë3 B
(
ëëB C
m_ScrollPosition
ëëC S
)
ëëS T
;
ëëT U
}
íí 
	GUILayout
îî 
.
îî 
Space
îî 
(
îî 
$num
îî 
)
îî 
;
îî  
	GUILayout
ññ 
.
ññ 
Label
ññ 
(
ññ !
m_SelectedFontAsset
ññ /
!=
ññ0 2
null
ññ3 7
?
ññ8 9
string
ññ: @
.
ññ@ A
Format
ññA G
(
ññG H
$str
ññH ]
,
ññ] ^!
m_SelectedFontAsset
ññ_ r
.
ññr s
name
ññs w
)
ññw x
:
ññy z
$strññ{ ä
,ññä ã
EditorStylesññå ò
.ññò ô
	boldLabelññô ¢
)ññ¢ £
;ññ£ §
EditorGUILayout
òò 
.
òò 
BeginVertical
òò )
(
òò) *
EditorStyles
òò* 6
.
òò6 7
helpBox
òò7 >
)
òò> ?
;
òò? @
EditorGUIUtility
öö 
.
öö 

labelWidth
öö '
=
öö( )
$num
öö* .
;
öö. /
EditorGUIUtility
õõ 
.
õõ 

fieldWidth
õõ '
=
õõ( )
$num
õõ* ,
;
õõ, -
	EditorGUI
ûû 
.
ûû  
BeginDisabledGroup
ûû (
(
ûû( )
m_IsProcessing
ûû) 7
)
ûû7 8
;
ûû8 9
{
üü 
	EditorGUI
°° 
.
°° 
BeginChangeCheck
°° *
(
°°* +
)
°°+ ,
;
°°, -
m_SourceFontFile
¢¢  
=
¢¢! "
EditorGUILayout
¢¢# 2
.
¢¢2 3
ObjectField
¢¢3 >
(
¢¢> ?
$str
¢¢? Q
,
¢¢Q R
m_SourceFontFile
¢¢S c
,
¢¢c d
typeof
¢¢e k
(
¢¢k l
Font
¢¢l p
)
¢¢p q
,
¢¢q r
false
¢¢s x
)
¢¢x y
as
¢¢z |
Font¢¢} Å
;¢¢Å Ç
if
££ 
(
££ 
	EditorGUI
££ 
.
££ 
EndChangeCheck
££ ,
(
££, -
)
££- .
)
££. /
{
§§ !
m_SelectedFontAsset
•• '
=
••( )
null
••* .
;
••. /"
m_IsFontAtlasInvalid
¶¶ (
=
¶¶) *
true
¶¶+ /
;
¶¶/ 0
}
ßß 
	EditorGUI
™™ 
.
™™ 
BeginChangeCheck
™™ *
(
™™* +
)
™™+ ,
;
™™, -
if
´´ 
(
´´ %
m_PointSizeSamplingMode
´´ +
==
´´, .
$num
´´/ 0
)
´´0 1
{
¨¨ %
m_PointSizeSamplingMode
≠≠ +
=
≠≠, -
EditorGUILayout
≠≠. =
.
≠≠= >
Popup
≠≠> C
(
≠≠C D
$str
≠≠D Y
,
≠≠Y Z%
m_PointSizeSamplingMode
≠≠[ r
,
≠≠r s"
m_FontSizingOptions≠≠t á
)≠≠á à
;≠≠à â
}
ÆÆ 
else
ØØ 
{
∞∞ 
	GUILayout
±± 
.
±± 
BeginHorizontal
±± -
(
±±- .
)
±±. /
;
±±/ 0%
m_PointSizeSamplingMode
≤≤ +
=
≤≤, -
EditorGUILayout
≤≤. =
.
≤≤= >
Popup
≤≤> C
(
≤≤C D
$str
≤≤D Y
,
≤≤Y Z%
m_PointSizeSamplingMode
≤≤[ r
,
≤≤r s"
m_FontSizingOptions≤≤t á
,≤≤á à
	GUILayout≤≤â í
.≤≤í ì
Width≤≤ì ò
(≤≤ò ô
$num≤≤ô ú
)≤≤ú ù
)≤≤ù û
;≤≤û ü
m_PointSize
≥≥ 
=
≥≥  !
EditorGUILayout
≥≥" 1
.
≥≥1 2
IntField
≥≥2 :
(
≥≥: ;
m_PointSize
≥≥; F
)
≥≥F G
;
≥≥G H
	GUILayout
¥¥ 
.
¥¥ 
EndHorizontal
¥¥ +
(
¥¥+ ,
)
¥¥, -
;
¥¥- .
}
µµ 
if
∂∂ 
(
∂∂ 
	EditorGUI
∂∂ 
.
∂∂ 
EndChangeCheck
∂∂ ,
(
∂∂, -
)
∂∂- .
)
∂∂. /
{
∑∑ "
m_IsFontAtlasInvalid
∏∏ (
=
∏∏) *
true
∏∏+ /
;
∏∏/ 0
}
ππ 
	EditorGUI
ºº 
.
ºº 
BeginChangeCheck
ºº *
(
ºº* +
)
ºº+ ,
;
ºº, -
	m_Padding
ΩΩ 
=
ΩΩ 
EditorGUILayout
ΩΩ +
.
ΩΩ+ ,
IntField
ΩΩ, 4
(
ΩΩ4 5
$str
ΩΩ5 >
,
ΩΩ> ?
	m_Padding
ΩΩ@ I
)
ΩΩI J
;
ΩΩJ K
	m_Padding
ææ 
=
ææ 
(
ææ 
int
ææ  
)
ææ  !
Mathf
ææ! &
.
ææ& '
Clamp
ææ' ,
(
ææ, -
	m_Padding
ææ- 6
,
ææ6 7
$num
ææ8 :
,
ææ: ;
$num
ææ< ?
)
ææ? @
;
ææ@ A
if
øø 
(
øø 
	EditorGUI
øø 
.
øø 
EndChangeCheck
øø ,
(
øø, -
)
øø- .
)
øø. /
{
¿¿ "
m_IsFontAtlasInvalid
¡¡ (
=
¡¡) *
true
¡¡+ /
;
¡¡/ 0
}
¬¬ 
	EditorGUI
≈≈ 
.
≈≈ 
BeginChangeCheck
≈≈ *
(
≈≈* +
)
≈≈+ ,
;
≈≈, -
m_PackingMode
∆∆ 
=
∆∆ 
(
∆∆  !
FontPackingModes
∆∆! 1
)
∆∆1 2
EditorGUILayout
∆∆2 A
.
∆∆A B
	EnumPopup
∆∆B K
(
∆∆K L
$str
∆∆L \
,
∆∆\ ]
m_PackingMode
∆∆^ k
)
∆∆k l
;
∆∆l m
if
«« 
(
«« 
	EditorGUI
«« 
.
«« 
EndChangeCheck
«« ,
(
««, -
)
««- .
)
««. /
{
»» "
m_IsFontAtlasInvalid
…… (
=
……) *
true
……+ /
;
……/ 0
}
   
	GUILayout
ÕÕ 
.
ÕÕ 
BeginHorizontal
ÕÕ )
(
ÕÕ) *
)
ÕÕ* +
;
ÕÕ+ ,
GUI
ŒŒ 
.
ŒŒ 
changed
ŒŒ 
=
ŒŒ 
false
ŒŒ #
;
ŒŒ# $
	EditorGUI
–– 
.
–– 
BeginChangeCheck
–– *
(
––* +
)
––+ ,
;
––, -
EditorGUILayout
—— 
.
——  
PrefixLabel
——  +
(
——+ ,
$str
——, >
)
——> ?
;
——? @
m_AtlasWidth
““ 
=
““ 
EditorGUILayout
““ .
.
““. /
IntPopup
““/ 7
(
““7 8
m_AtlasWidth
““8 D
,
““D E$
m_FontResolutionLabels
““F \
,
““\ ]$
m_FontAtlasResolutions
““^ t
)
““t u
;
““u v
m_AtlasHeight
”” 
=
”” 
EditorGUILayout
””  /
.
””/ 0
IntPopup
””0 8
(
””8 9
m_AtlasHeight
””9 F
,
””F G$
m_FontResolutionLabels
””H ^
,
””^ _$
m_FontAtlasResolutions
””` v
)
””v w
;
””w x
if
‘‘ 
(
‘‘ 
	EditorGUI
‘‘ 
.
‘‘ 
EndChangeCheck
‘‘ ,
(
‘‘, -
)
‘‘- .
)
‘‘. /
{
’’ "
m_IsFontAtlasInvalid
÷÷ (
=
÷÷) *
true
÷÷+ /
;
÷÷/ 0
}
◊◊ 
	GUILayout
ŸŸ 
.
ŸŸ 
EndHorizontal
ŸŸ '
(
ŸŸ' (
)
ŸŸ( )
;
ŸŸ) *
	EditorGUI
›› 
.
›› 
BeginChangeCheck
›› *
(
››* +
)
››+ ,
;
››, -
bool
ﬁﬁ !
hasSelectionChanged
ﬁﬁ (
=
ﬁﬁ) *
false
ﬁﬁ+ 0
;
ﬁﬁ0 1)
m_CharacterSetSelectionMode
ﬂﬂ +
=
ﬂﬂ, -
EditorGUILayout
ﬂﬂ. =
.
ﬂﬂ= >
Popup
ﬂﬂ> C
(
ﬂﬂC D
$str
ﬂﬂD S
,
ﬂﬂS T)
m_CharacterSetSelectionMode
ﬂﬂU p
,
ﬂﬂp q"
m_FontCharacterSetsﬂﬂr Ö
)ﬂﬂÖ Ü
;ﬂﬂÜ á
if
‡‡ 
(
‡‡ 
	EditorGUI
‡‡ 
.
‡‡ 
EndChangeCheck
‡‡ ,
(
‡‡, -
)
‡‡- .
)
‡‡. /
{
·· !
m_CharacterSequence
‚‚ '
=
‚‚( )
$str
‚‚* ,
;
‚‚, -!
hasSelectionChanged
„„ '
=
„„( )
true
„„* .
;
„„. /"
m_IsFontAtlasInvalid
‰‰ (
=
‰‰) *
true
‰‰+ /
;
‰‰/ 0
}
ÂÂ 
switch
ÁÁ 
(
ÁÁ )
m_CharacterSetSelectionMode
ÁÁ 3
)
ÁÁ3 4
{
ËË 
case
ÈÈ 
$num
ÈÈ 
:
ÈÈ !
m_CharacterSequence
ÎÎ +
=
ÎÎ, -
$str
ÎÎ. O
;
ÎÎO P
break
ÏÏ 
;
ÏÏ 
case
ÓÓ 
$num
ÓÓ 
:
ÓÓ !
m_CharacterSequence
ÔÔ +
=
ÔÔ, -
$str
ÔÔ. b
;
ÔÔb c
break
ÒÒ 
;
ÒÒ 
case
ÛÛ 
$num
ÛÛ 
:
ÛÛ !
m_CharacterSequence
ÙÙ +
=
ÙÙ, -
$str
ÙÙ. F
;
ÙÙF G
break
ıı 
;
ıı 
case
˜˜ 
$num
˜˜ 
:
˜˜ !
m_CharacterSequence
¯¯ +
=
¯¯, -
$str
¯¯. G
;
¯¯G H
break
˘˘ 
;
˘˘ 
case
˚˚ 
$num
˚˚ 
:
˚˚ !
m_CharacterSequence
¸¸ +
=
¸¸, -
$str
¸¸. P
;
¸¸P Q
break
˝˝ 
;
˝˝ 
case
ˇˇ 
$num
ˇˇ 
:
ˇˇ 
EditorGUILayout
ÄÄ '
.
ÄÄ' (
BeginVertical
ÄÄ( 5
(
ÄÄ5 6
EditorStyles
ÄÄ6 B
.
ÄÄB C
helpBox
ÄÄC J
)
ÄÄJ K
;
ÄÄK L
	GUILayout
ÅÅ !
.
ÅÅ! "
Label
ÅÅ" '
(
ÅÅ' (
$strÅÅ( Ø
,ÅÅØ ∞"
TMP_UIStyleManagerÅÅ± √
.ÅÅ√ ƒ
labelÅÅƒ …
)ÅÅ…  
;ÅÅ  À
	GUILayout
ÇÇ !
.
ÇÇ! "
Space
ÇÇ" '
(
ÇÇ' (
$num
ÇÇ( +
)
ÇÇ+ ,
;
ÇÇ, -
	EditorGUI
ÑÑ !
.
ÑÑ! "
BeginChangeCheck
ÑÑ" 2
(
ÑÑ2 3
)
ÑÑ3 4
;
ÑÑ4 5#
m_ReferencedFontAsset
ÖÖ -
=
ÖÖ. /
EditorGUILayout
ÖÖ0 ?
.
ÖÖ? @
ObjectField
ÖÖ@ K
(
ÖÖK L
$str
ÖÖL _
,
ÖÖ_ `#
m_ReferencedFontAsset
ÖÖa v
,
ÖÖv w
typeof
ÖÖx ~
(
ÖÖ~ 
TMP_FontAssetÖÖ å
)ÖÖå ç
,ÖÖç é
falseÖÖè î
)ÖÖî ï
asÖÖñ ò
TMP_FontAssetÖÖô ¶
;ÖÖ¶ ß
if
ÜÜ 
(
ÜÜ 
	EditorGUI
ÜÜ %
.
ÜÜ% &
EndChangeCheck
ÜÜ& 4
(
ÜÜ4 5
)
ÜÜ5 6
||
ÜÜ7 9!
hasSelectionChanged
ÜÜ: M
)
ÜÜM N
{
áá 
if
àà 
(
àà  #
m_ReferencedFontAsset
àà  5
!=
àà6 8
null
àà9 =
)
àà= >!
m_CharacterSequence
ââ  3
=
ââ4 5
TMP_EditorUtility
ââ6 G
.
ââG H)
GetDecimalCharacterSequence
ââH c
(
ââc d
TMP_FontAsset
ââd q
.
ââq r!
GetCharactersArrayââr Ñ
(ââÑ Ö%
m_ReferencedFontAssetââÖ ö
)ââö õ
)ââõ ú
;ââú ù"
m_IsFontAtlasInvalid
ãã 0
=
ãã1 2
true
ãã3 7
;
ãã7 8
}
åå 
char
èè 
chr
èè  
=
èè! "
Event
èè# (
.
èè( )
current
èè) 0
.
èè0 1
	character
èè1 :
;
èè: ;
if
êê 
(
êê 
(
êê 
chr
êê  
<
êê! "
$char
êê# &
||
êê' )
chr
êê* -
>
êê. /
$char
êê0 3
)
êê3 4
&&
êê5 7
(
êê8 9
chr
êê9 <
<
êê= >
$char
êê? B
||
êêC E
chr
êêF I
>
êêJ K
$char
êêL O
)
êêO P
)
êêP Q
{
ëë 
Event
íí !
.
íí! "
current
íí" )
.
íí) *
	character
íí* 3
=
íí4 5
$char
íí6 :
;
íí: ;
}
ìì 
	GUILayout
îî !
.
îî! "
Label
îî" '
(
îî' (
$str
îî( F
,
îîF G
EditorStyles
îîH T
.
îîT U
	boldLabel
îîU ^
)
îî^ _
;
îî_ `
	EditorGUI
ïï !
.
ïï! "
BeginChangeCheck
ïï" 2
(
ïï2 3
)
ïï3 4
;
ïï4 5!
m_CharacterSequence
ññ +
=
ññ, -
EditorGUILayout
ññ. =
.
ññ= >
TextArea
ññ> F
(
ññF G!
m_CharacterSequence
ññG Z
,
ññZ [ 
TMP_UIStyleManager
ññ\ n
.
ññn o 
textAreaBoxWindowñño Ä
,ññÄ Å
	GUILayoutññÇ ã
.ññã å
Heightññå í
(ññí ì
$numññì ñ
)ñññ ó
,ññó ò
	GUILayoutññô ¢
.ññ¢ £
ExpandWidthññ£ Æ
(ññÆ Ø
trueññØ ≥
)ññ≥ ¥
)ññ¥ µ
;ññµ ∂
if
óó 
(
óó 
	EditorGUI
óó %
.
óó% &
EndChangeCheck
óó& 4
(
óó4 5
)
óó5 6
)
óó6 7
{
òò "
m_IsFontAtlasInvalid
ôô 0
=
ôô1 2
true
ôô3 7
;
ôô7 8
}
öö 
EditorGUILayout
úú '
.
úú' (
EndVertical
úú( 3
(
úú3 4
)
úú4 5
;
úú5 6
break
ùù 
;
ùù 
case
üü 
$num
üü 
:
üü 
EditorGUILayout
†† '
.
††' (
BeginVertical
††( 5
(
††5 6
EditorStyles
††6 B
.
††B C
helpBox
††C J
)
††J K
;
††K L
	GUILayout
°° !
.
°°! "
Label
°°" '
(
°°' (
$str°°( µ
,°°µ ∂"
TMP_UIStyleManager°°∑ …
.°°…  
label°°  œ
)°°œ –
;°°– —
	GUILayout
¢¢ !
.
¢¢! "
Space
¢¢" '
(
¢¢' (
$num
¢¢( +
)
¢¢+ ,
;
¢¢, -
	EditorGUI
§§ !
.
§§! "
BeginChangeCheck
§§" 2
(
§§2 3
)
§§3 4
;
§§4 5#
m_ReferencedFontAsset
•• -
=
••. /
EditorGUILayout
••0 ?
.
••? @
ObjectField
••@ K
(
••K L
$str
••L _
,
••_ `#
m_ReferencedFontAsset
••a v
,
••v w
typeof
••x ~
(
••~ 
TMP_FontAsset•• å
)••å ç
,••ç é
false••è î
)••î ï
as••ñ ò
TMP_FontAsset••ô ¶
;••¶ ß
if
¶¶ 
(
¶¶ 
	EditorGUI
¶¶ %
.
¶¶% &
EndChangeCheck
¶¶& 4
(
¶¶4 5
)
¶¶5 6
||
¶¶7 9!
hasSelectionChanged
¶¶: M
)
¶¶M N
{
ßß 
if
®® 
(
®®  #
m_ReferencedFontAsset
®®  5
!=
®®6 8
null
®®9 =
)
®®= >!
m_CharacterSequence
©©  3
=
©©4 5
TMP_EditorUtility
©©6 G
.
©©G H)
GetUnicodeCharacterSequence
©©H c
(
©©c d
TMP_FontAsset
©©d q
.
©©q r!
GetCharactersArray©©r Ñ
(©©Ñ Ö%
m_ReferencedFontAsset©©Ö ö
)©©ö õ
)©©õ ú
;©©ú ù"
m_IsFontAtlasInvalid
´´ 0
=
´´1 2
true
´´3 7
;
´´7 8
}
¨¨ 
chr
ØØ 
=
ØØ 
Event
ØØ #
.
ØØ# $
current
ØØ$ +
.
ØØ+ ,
	character
ØØ, 5
;
ØØ5 6
if
∞∞ 
(
∞∞ 
(
∞∞ 
chr
∞∞  
<
∞∞! "
$char
∞∞# &
||
∞∞' )
chr
∞∞* -
>
∞∞. /
$char
∞∞0 3
)
∞∞3 4
&&
∞∞5 7
(
∞∞8 9
chr
∞∞9 <
<
∞∞= >
$char
∞∞? B
||
∞∞C E
chr
∞∞F I
>
∞∞J K
$char
∞∞L O
)
∞∞O P
&&
∞∞Q S
(
∞∞T U
chr
∞∞U X
<
∞∞Y Z
$char
∞∞[ ^
||
∞∞_ a
chr
∞∞b e
>
∞∞f g
$char
∞∞h k
)
∞∞k l
&&
∞∞m o
(
∞∞p q
chr
∞∞q t
<
∞∞u v
$char
∞∞w z
||
∞∞{ }
chr∞∞~ Å
>∞∞Ç É
$char∞∞Ñ á
)∞∞á à
)∞∞à â
{
±± 
Event
≤≤ !
.
≤≤! "
current
≤≤" )
.
≤≤) *
	character
≤≤* 3
=
≤≤4 5
$char
≤≤6 :
;
≤≤: ;
}
≥≥ 
	GUILayout
¥¥ !
.
¥¥! "
Label
¥¥" '
(
¥¥' (
$str
¥¥( B
,
¥¥B C
EditorStyles
¥¥D P
.
¥¥P Q
	boldLabel
¥¥Q Z
)
¥¥Z [
;
¥¥[ \
	EditorGUI
µµ !
.
µµ! "
BeginChangeCheck
µµ" 2
(
µµ2 3
)
µµ3 4
;
µµ4 5!
m_CharacterSequence
∂∂ +
=
∂∂, -
EditorGUILayout
∂∂. =
.
∂∂= >
TextArea
∂∂> F
(
∂∂F G!
m_CharacterSequence
∂∂G Z
,
∂∂Z [ 
TMP_UIStyleManager
∂∂\ n
.
∂∂n o 
textAreaBoxWindow∂∂o Ä
,∂∂Ä Å
	GUILayout∂∂Ç ã
.∂∂ã å
Height∂∂å í
(∂∂í ì
$num∂∂ì ñ
)∂∂ñ ó
,∂∂ó ò
	GUILayout∂∂ô ¢
.∂∂¢ £
ExpandWidth∂∂£ Æ
(∂∂Æ Ø
true∂∂Ø ≥
)∂∂≥ ¥
)∂∂¥ µ
;∂∂µ ∂
if
∑∑ 
(
∑∑ 
	EditorGUI
∑∑ %
.
∑∑% &
EndChangeCheck
∑∑& 4
(
∑∑4 5
)
∑∑5 6
)
∑∑6 7
{
∏∏ "
m_IsFontAtlasInvalid
ππ 0
=
ππ1 2
true
ππ3 7
;
ππ7 8
}
∫∫ 
EditorGUILayout
ºº '
.
ºº' (
EndVertical
ºº( 3
(
ºº3 4
)
ºº4 5
;
ºº5 6
break
ΩΩ 
;
ΩΩ 
case
øø 
$num
øø 
:
øø 
EditorGUILayout
¿¿ '
.
¿¿' (
BeginVertical
¿¿( 5
(
¿¿5 6
EditorStyles
¿¿6 B
.
¿¿B C
helpBox
¿¿C J
)
¿¿J K
;
¿¿K L
	GUILayout
¡¡ !
.
¡¡! "
Label
¡¡" '
(
¡¡' (
$str¡¡( à
,¡¡à â"
TMP_UIStyleManager¡¡ä ú
.¡¡ú ù
label¡¡ù ¢
)¡¡¢ £
;¡¡£ §
	GUILayout
¬¬ !
.
¬¬! "
Space
¬¬" '
(
¬¬' (
$num
¬¬( +
)
¬¬+ ,
;
¬¬, -
	EditorGUI
ƒƒ !
.
ƒƒ! "
BeginChangeCheck
ƒƒ" 2
(
ƒƒ2 3
)
ƒƒ3 4
;
ƒƒ4 5#
m_ReferencedFontAsset
≈≈ -
=
≈≈. /
EditorGUILayout
≈≈0 ?
.
≈≈? @
ObjectField
≈≈@ K
(
≈≈K L
$str
≈≈L _
,
≈≈_ `#
m_ReferencedFontAsset
≈≈a v
,
≈≈v w
typeof
≈≈x ~
(
≈≈~ 
TMP_FontAsset≈≈ å
)≈≈å ç
,≈≈ç é
false≈≈è î
)≈≈î ï
as≈≈ñ ò
TMP_FontAsset≈≈ô ¶
;≈≈¶ ß
if
∆∆ 
(
∆∆ 
	EditorGUI
∆∆ %
.
∆∆% &
EndChangeCheck
∆∆& 4
(
∆∆4 5
)
∆∆5 6
||
∆∆7 9!
hasSelectionChanged
∆∆: M
)
∆∆M N
{
«« 
if
»» 
(
»»  #
m_ReferencedFontAsset
»»  5
!=
»»6 8
null
»»9 =
)
»»= >!
m_CharacterSequence
……  3
=
……4 5
TMP_FontAsset
……6 C
.
……C D
GetCharacters
……D Q
(
……Q R#
m_ReferencedFontAsset
……R g
)
……g h
;
……h i"
m_IsFontAtlasInvalid
ÀÀ 0
=
ÀÀ1 2
true
ÀÀ3 7
;
ÀÀ7 8
}
ÃÃ 
	EditorGUI
ŒŒ !
.
ŒŒ! "
indentLevel
ŒŒ" -
=
ŒŒ. /
$num
ŒŒ0 1
;
ŒŒ1 2
	GUILayout
–– !
.
––! "
Label
––" '
(
––' (
$str
––( ?
,
––? @
EditorStyles
––A M
.
––M N
	boldLabel
––N W
)
––W X
;
––X Y
	EditorGUI
—— !
.
——! "
BeginChangeCheck
——" 2
(
——2 3
)
——3 4
;
——4 5!
m_CharacterSequence
““ +
=
““, -
EditorGUILayout
““. =
.
““= >
TextArea
““> F
(
““F G!
m_CharacterSequence
““G Z
,
““Z [ 
TMP_UIStyleManager
““\ n
.
““n o 
textAreaBoxWindow““o Ä
,““Ä Å
	GUILayout““Ç ã
.““ã å
Height““å í
(““í ì
$num““ì ñ
)““ñ ó
,““ó ò
	GUILayout““ô ¢
.““¢ £
ExpandWidth““£ Æ
(““Æ Ø
true““Ø ≥
)““≥ ¥
)““¥ µ
;““µ ∂
if
”” 
(
”” 
	EditorGUI
”” %
.
””% &
EndChangeCheck
””& 4
(
””4 5
)
””5 6
)
””6 7
{
‘‘ "
m_IsFontAtlasInvalid
’’ 0
=
’’1 2
true
’’3 7
;
’’7 8
}
÷÷ 
EditorGUILayout
◊◊ '
.
◊◊' (
EndVertical
◊◊( 3
(
◊◊3 4
)
◊◊4 5
;
◊◊5 6
break
ÿÿ 
;
ÿÿ 
case
⁄⁄ 
$num
⁄⁄ 
:
⁄⁄ 
	EditorGUI
€€ !
.
€€! "
BeginChangeCheck
€€" 2
(
€€2 3
)
€€3 4
;
€€4 5"
m_CharactersFromFile
‹‹ ,
=
‹‹- .
EditorGUILayout
‹‹/ >
.
‹‹> ?
ObjectField
‹‹? J
(
‹‹J K
$str
‹‹K [
,
‹‹[ \"
m_CharactersFromFile
‹‹] q
,
‹‹q r
typeof
‹‹s y
(
‹‹y z
	TextAsset‹‹z É
)‹‹É Ñ
,‹‹Ñ Ö
false‹‹Ü ã
)‹‹ã å
as‹‹ç è
	TextAsset‹‹ê ô
;‹‹ô ö
if
›› 
(
›› 
	EditorGUI
›› %
.
››% &
EndChangeCheck
››& 4
(
››4 5
)
››5 6
)
››6 7
{
ﬁﬁ "
m_IsFontAtlasInvalid
ﬂﬂ 0
=
ﬂﬂ1 2
true
ﬂﬂ3 7
;
ﬂﬂ7 8
}
‡‡ 
if
‚‚ 
(
‚‚ "
m_CharactersFromFile
‚‚ 0
!=
‚‚1 3
null
‚‚4 8
)
‚‚8 9
{
„„ 
Regex
‰‰ !
rx
‰‰" $
=
‰‰% &
new
‰‰' *
Regex
‰‰+ 0
(
‰‰0 1
$str
‰‰1 b
)
‰‰b c
;
‰‰c d!
m_CharacterSequence
ÊÊ /
=
ÊÊ0 1
rx
ÊÊ2 4
.
ÊÊ4 5
Replace
ÊÊ5 <
(
ÊÊ< ="
m_CharactersFromFile
ÊÊ= Q
.
ÊÊQ R
text
ÊÊR V
,
ÊÊV W
match
ÁÁ  %
=>
ÁÁ& (
{
ËË  !
if
ÈÈ$ &
(
ÈÈ' (
match
ÈÈ( -
.
ÈÈ- .
Value
ÈÈ. 3
.
ÈÈ3 4

StartsWith
ÈÈ4 >
(
ÈÈ> ?
$str
ÈÈ? D
)
ÈÈD E
)
ÈÈE F
return
ÍÍ( .
char
ÍÍ/ 3
.
ÍÍ3 4
ConvertFromUtf32
ÍÍ4 D
(
ÍÍD E
int
ÍÍE H
.
ÍÍH I
Parse
ÍÍI N
(
ÍÍN O
match
ÍÍO T
.
ÍÍT U
Value
ÍÍU Z
.
ÍÍZ [
Replace
ÍÍ[ b
(
ÍÍb c
$str
ÍÍc h
,
ÍÍh i
$str
ÍÍj l
)
ÍÍl m
,
ÍÍm n
NumberStyles
ÍÍo {
.
ÍÍ{ |
	HexNumberÍÍ| Ö
)ÍÍÖ Ü
)ÍÍÜ á
;ÍÍá à
return
ÏÏ$ *
char
ÏÏ+ /
.
ÏÏ/ 0
ConvertFromUtf32
ÏÏ0 @
(
ÏÏ@ A
int
ÏÏA D
.
ÏÏD E
Parse
ÏÏE J
(
ÏÏJ K
match
ÏÏK P
.
ÏÏP Q
Value
ÏÏQ V
.
ÏÏV W
Replace
ÏÏW ^
(
ÏÏ^ _
$str
ÏÏ_ d
,
ÏÏd e
$str
ÏÏf h
)
ÏÏh i
,
ÏÏi j
NumberStyles
ÏÏk w
.
ÏÏw x
	HexNumberÏÏx Å
)ÏÏÅ Ç
)ÏÏÇ É
;ÏÏÉ Ñ
}
ÌÌ  !
)
ÌÌ! "
;
ÌÌ" #
}
ÓÓ 
break
ÔÔ 
;
ÔÔ 
}
 +
CheckForLegacyGlyphRenderMode
˛˛ -
(
˛˛- .
)
˛˛. /
;
˛˛/ 0
	EditorGUI
ÄÄ 
.
ÄÄ 
BeginChangeCheck
ÄÄ *
(
ÄÄ* +
)
ÄÄ+ ,
;
ÄÄ, -
m_GlyphRenderMode
ÅÅ !
=
ÅÅ" #
(
ÅÅ$ %
GlyphRenderMode
ÅÅ% 4
)
ÅÅ4 5
EditorGUILayout
ÅÅ5 D
.
ÅÅD E
	EnumPopup
ÅÅE N
(
ÅÅN O
$str
ÅÅO \
,
ÅÅ\ ]
m_GlyphRenderMode
ÅÅ^ o
)
ÅÅo p
;
ÅÅp q
if
ÇÇ 
(
ÇÇ 
	EditorGUI
ÇÇ 
.
ÇÇ 
EndChangeCheck
ÇÇ ,
(
ÇÇ, -
)
ÇÇ- .
)
ÇÇ. /
{
ÉÉ "
m_IsFontAtlasInvalid
ÑÑ (
=
ÑÑ) *
true
ÑÑ+ /
;
ÑÑ/ 0
}
ÖÖ #
m_IncludeFontFeatures
áá %
=
áá& '
EditorGUILayout
áá( 7
.
áá7 8
Toggle
áá8 >
(
áá> ?
$str
áá? R
,
ááR S#
m_IncludeFontFeatures
ááT i
)
áái j
;
ááj k
EditorGUILayout
ââ 
.
ââ  
Space
ââ  %
(
ââ% &
)
ââ& '
;
ââ' (
}
ää 
	EditorGUI
åå 
.
åå 
EndDisabledGroup
åå &
(
åå& '
)
åå' (
;
åå( )
if
éé 
(
éé 
!
éé 
string
éé 
.
éé 
IsNullOrEmpty
éé %
(
éé% &
m_WarningMessage
éé& 6
)
éé6 7
)
éé7 8
{
èè 
EditorGUILayout
êê 
.
êê  
HelpBox
êê  '
(
êê' (
m_WarningMessage
êê( 8
,
êê8 9
MessageType
êê: E
.
êêE F
Warning
êêF M
)
êêM N
;
êêN O
}
ëë 
GUI
ìì 
.
ìì 
enabled
ìì 
=
ìì 
m_SourceFontFile
ìì *
!=
ìì+ -
null
ìì. 2
&&
ìì3 5
!
ìì6 7
m_IsProcessing
ìì7 E
&&
ììF H
!
ììI J$
m_IsGenerationDisabled
ììJ `
;
ìì` a
if
îî 
(
îî 
	GUILayout
îî 
.
îî 
Button
îî  
(
îî  !
$str
îî! 6
)
îî6 7
&&
îî8 :
GUI
îî; >
.
îî> ?
enabled
îî? F
)
îîF G
{
ïï 
if
ññ 
(
ññ 
!
ññ 
m_IsProcessing
ññ #
&&
ññ$ &
m_SourceFontFile
ññ' 7
!=
ññ8 :
null
ññ; ?
)
ññ? @
{
óó 
DestroyImmediate
òò $
(
òò$ % 
m_FontAtlasTexture
òò% 7
)
òò7 8
;
òò8 9 
m_FontAtlasTexture
ôô &
=
ôô' (
null
ôô) -
;
ôô- .
m_SavedFontAtlas
öö $
=
öö% &
null
öö' +
;
öö+ ,
FontEngineError
ùù #
	errorCode
ùù$ -
=
ùù. /

FontEngine
ùù0 :
.
ùù: ;"
InitializeFontEngine
ùù; O
(
ùùO P
)
ùùP Q
;
ùùQ R
if
ûû 
(
ûû 
	errorCode
ûû !
!=
ûû" $
FontEngineError
ûû% 4
.
ûû4 5
Success
ûû5 <
)
ûû< =
{
üü 
Debug
†† 
.
†† 
Log
†† !
(
††! "
$str
††" @
+
††A B
	errorCode
††C L
+
††M N
$str††O à
)††à â
;††â ä
}
°° 
string
§§ 
fontPath
§§ #
=
§§$ %
AssetDatabase
§§& 3
.
§§3 4
GetAssetPath
§§4 @
(
§§@ A
m_SourceFontFile
§§A Q
)
§§Q R
;
§§R S
if
¶¶ 
(
¶¶ 
	errorCode
¶¶ !
==
¶¶" $
FontEngineError
¶¶% 4
.
¶¶4 5
Success
¶¶5 <
)
¶¶< =
{
ßß 
	errorCode
®® !
=
®®" #

FontEngine
®®$ .
.
®®. /
LoadFontFace
®®/ ;
(
®®; <
fontPath
®®< D
)
®®D E
;
®®E F
if
™™ 
(
™™ 
	errorCode
™™ %
!=
™™& (
FontEngineError
™™) 8
.
™™8 9
Success
™™9 @
)
™™@ A
{
´´ 
Debug
¨¨ !
.
¨¨! "
Log
¨¨" %
(
¨¨% &
$str
¨¨& I
+
¨¨J K
	errorCode
¨¨L U
+
¨¨V W
$str
¨¨X }
+
¨¨~  
m_SourceFontFile¨¨Ä ê
.¨¨ê ë
name¨¨ë ï
+¨¨ñ ó
$str¨¨ò ı
,¨¨ı ˆ 
m_SourceFontFile¨¨˜ á
)¨¨á à
;¨¨à â
}
≠≠ 
}
ÆÆ 
if
≤≤ 
(
≤≤ 
	errorCode
≤≤ !
==
≤≤" $
FontEngineError
≤≤% 4
.
≤≤4 5
Success
≤≤5 <
)
≤≤< =
{
≥≥ 
uint
¥¥ 
[
¥¥ 
]
¥¥ 
characterSet
¥¥ +
=
¥¥, -
null
¥¥. 2
;
¥¥2 3
if
∑∑ 
(
∑∑ )
m_CharacterSetSelectionMode
∑∑ 7
==
∑∑8 :
$num
∑∑; <
||
∑∑= ?)
m_CharacterSetSelectionMode
∑∑@ [
==
∑∑\ ^
$num
∑∑_ `
)
∑∑` a
{
∏∏ 
List
ππ  
<
ππ  !
uint
ππ! %
>
ππ% &
	char_List
ππ' 0
=
ππ1 2
new
ππ3 6
List
ππ7 ;
<
ππ; <
uint
ππ< @
>
ππ@ A
(
ππA B
)
ππB C
;
ππC D
for
ªª 
(
ªª  !
int
ªª! $
i
ªª% &
=
ªª' (
$num
ªª) *
;
ªª* +
i
ªª, -
<
ªª. /!
m_CharacterSequence
ªª0 C
.
ªªC D
Length
ªªD J
;
ªªJ K
i
ªªL M
++
ªªM O
)
ªªO P
{
ºº 
uint
ΩΩ  $
unicode
ΩΩ% ,
=
ΩΩ- .!
m_CharacterSequence
ΩΩ/ B
[
ΩΩB C
i
ΩΩC D
]
ΩΩD E
;
ΩΩE F
if
¿¿  "
(
¿¿# $
i
¿¿$ %
<
¿¿& '!
m_CharacterSequence
¿¿( ;
.
¿¿; <
Length
¿¿< B
-
¿¿C D
$num
¿¿E F
&&
¿¿G I
char
¿¿J N
.
¿¿N O
IsHighSurrogate
¿¿O ^
(
¿¿^ _
(
¿¿_ `
char
¿¿` d
)
¿¿d e
unicode
¿¿e l
)
¿¿l m
&&
¿¿n p
char
¿¿q u
.
¿¿u v
IsLowSurrogate¿¿v Ñ
(¿¿Ñ Ö#
m_CharacterSequence¿¿Ö ò
[¿¿ò ô
i¿¿ô ö
+¿¿õ ú
$num¿¿ù û
]¿¿û ü
)¿¿ü †
)¿¿† °
{
¡¡  !
unicode
¬¬$ +
=
¬¬, -
(
¬¬. /
uint
¬¬/ 3
)
¬¬3 4
char
¬¬4 8
.
¬¬8 9
ConvertToUtf32
¬¬9 G
(
¬¬G H!
m_CharacterSequence
¬¬H [
[
¬¬[ \
i
¬¬\ ]
]
¬¬] ^
,
¬¬^ _!
m_CharacterSequence
¬¬` s
[
¬¬s t
i
¬¬t u
+
¬¬v w
$num
¬¬x y
]
¬¬y z
)
¬¬z {
;
¬¬{ |
i
√√$ %
+=
√√& (
$num
√√) *
;
√√* +
}
ƒƒ  !
if
««  "
(
««# $
	char_List
««$ -
.
««- .
	FindIndex
««. 7
(
««7 8
item
««8 <
=>
««= ?
item
««@ D
==
««E G
unicode
««H O
)
««O P
==
««Q S
-
««T U
$num
««U V
)
««V W
	char_List
»»$ -
.
»»- .
Add
»». 1
(
»»1 2
unicode
»»2 9
)
»»9 :
;
»»: ;
}
…… 
characterSet
ÀÀ (
=
ÀÀ) *
	char_List
ÀÀ+ 4
.
ÀÀ4 5
ToArray
ÀÀ5 <
(
ÀÀ< =
)
ÀÀ= >
;
ÀÀ> ?
}
ÃÃ 
else
ÕÕ 
if
ÕÕ 
(
ÕÕ  !)
m_CharacterSetSelectionMode
ÕÕ! <
==
ÕÕ= ?
$num
ÕÕ@ A
)
ÕÕA B
{
ŒŒ 
characterSet
œœ (
=
œœ) *$
ParseHexNumberSequence
œœ+ A
(
œœA B!
m_CharacterSequence
œœB U
)
œœU V
;
œœV W
}
–– 
else
—— 
{
““ 
characterSet
”” (
=
””) *!
ParseNumberSequence
””+ >
(
””> ?!
m_CharacterSequence
””? R
)
””R S
;
””S T
}
‘‘ 
m_CharacterCount
÷÷ (
=
÷÷) *
characterSet
÷÷+ 7
.
÷÷7 8
Length
÷÷8 >
;
÷÷> ?'
m_AtlasGenerationProgress
ÿÿ 1
=
ÿÿ2 3
$num
ÿÿ4 5
;
ÿÿ5 6
m_IsProcessing
ŸŸ &
=
ŸŸ' (
true
ŸŸ) -
;
ŸŸ- .%
m_IsGenerationCancelled
⁄⁄ /
=
⁄⁄0 1
false
⁄⁄2 7
;
⁄⁄7 8
GlyphLoadFlags
‹‹ &
glyphLoadFlags
‹‹' 5
=
‹‹6 7
(
‹‹8 9
(
‹‹9 :
GlyphRasterModes
‹‹: J
)
‹‹J K
m_GlyphRenderMode
‹‹K \
&
‹‹] ^
GlyphRasterModes
‹‹_ o
.
‹‹o p!
RASTER_MODE_HINTED‹‹p Ç
)‹‹Ç É
==‹‹Ñ Ü 
GlyphRasterModes‹‹á ó
.‹‹ó ò"
RASTER_MODE_HINTED‹‹ò ™
?
›› 
GlyphLoadFlags
›› ,
.
››, -
LOAD_RENDER
››- 8
:
ﬁﬁ 
GlyphLoadFlags
ﬁﬁ ,
.
ﬁﬁ, -
LOAD_RENDER
ﬁﬁ- 8
|
ﬁﬁ9 :
GlyphLoadFlags
ﬁﬁ; I
.
ﬁﬁI J
LOAD_NO_HINTING
ﬁﬁJ Y
;
ﬁﬁY Z
glyphLoadFlags
‡‡ &
=
‡‡' (
(
‡‡) *
(
‡‡* +
GlyphRasterModes
‡‡+ ;
)
‡‡; <
m_GlyphRenderMode
‡‡< M
&
‡‡N O
GlyphRasterModes
‡‡P `
.
‡‡` a
RASTER_MODE_MONO
‡‡a q
)
‡‡q r
==
‡‡s u
GlyphRasterModes‡‡v Ü
.‡‡Ü á 
RASTER_MODE_MONO‡‡á ó
?
·· 
glyphLoadFlags
·· ,
|
··- .
GlyphLoadFlags
··/ =
.
··= >
LOAD_MONOCHROME
··> M
:
‚‚ 
glyphLoadFlags
‚‚ ,
;
‚‚, -
AutoResetEvent
ÂÂ &
	autoEvent
ÂÂ' 0
=
ÂÂ1 2
new
ÂÂ3 6
AutoResetEvent
ÂÂ7 E
(
ÂÂE F
false
ÂÂF K
)
ÂÂK L
;
ÂÂL M

ThreadPool
ËË "
.
ËË" #
QueueUserWorkItem
ËË# 4
(
ËË4 5

PackGlyphs
ËË5 ?
=>
ËË@ B
{
ÈÈ 
m_StopWatch
ÎÎ '
=
ÎÎ( )
System
ÎÎ* 0
.
ÎÎ0 1
Diagnostics
ÎÎ1 <
.
ÎÎ< =
	Stopwatch
ÎÎ= F
.
ÎÎF G
StartNew
ÎÎG O
(
ÎÎO P
)
ÎÎP Q
;
ÎÎQ R$
m_AvailableGlyphsToAdd
ÓÓ 2
.
ÓÓ2 3
Clear
ÓÓ3 8
(
ÓÓ8 9
)
ÓÓ9 :
;
ÓÓ: ;!
m_MissingCharacters
ÔÔ /
.
ÔÔ/ 0
Clear
ÔÔ0 5
(
ÔÔ5 6
)
ÔÔ6 7
;
ÔÔ7 8"
m_ExcludedCharacters
 0
.
0 1
Clear
1 6
(
6 7
)
7 8
;
8 9"
m_CharacterLookupMap
ÒÒ 0
.
ÒÒ0 1
Clear
ÒÒ1 6
(
ÒÒ6 7
)
ÒÒ7 8
;
ÒÒ8 9
m_GlyphLookupMap
ÚÚ ,
.
ÚÚ, -
Clear
ÚÚ- 2
(
ÚÚ2 3
)
ÚÚ3 4
;
ÚÚ4 5
m_GlyphsToPack
ÛÛ *
.
ÛÛ* +
Clear
ÛÛ+ 0
(
ÛÛ0 1
)
ÛÛ1 2
;
ÛÛ2 3
m_GlyphsPacked
ÙÙ *
.
ÙÙ* +
Clear
ÙÙ+ 0
(
ÙÙ0 1
)
ÙÙ1 2
;
ÙÙ2 3
for
˜˜ 
(
˜˜  !
int
˜˜! $
i
˜˜% &
=
˜˜' (
$num
˜˜) *
;
˜˜* +
i
˜˜, -
<
˜˜. /
characterSet
˜˜0 <
.
˜˜< =
Length
˜˜= C
;
˜˜C D
i
˜˜E F
++
˜˜F H
)
˜˜H I
{
¯¯ 
uint
˘˘  $
unicode
˘˘% ,
=
˘˘- .
characterSet
˘˘/ ;
[
˘˘; <
i
˘˘< =
]
˘˘= >
;
˘˘> ?
uint
˙˙  $

glyphIndex
˙˙% /
;
˙˙/ 0
if
¸¸  "
(
¸¸# $

FontEngine
¸¸$ .
.
¸¸. /
TryGetGlyphIndex
¸¸/ ?
(
¸¸? @
unicode
¸¸@ G
,
¸¸G H
out
¸¸I L

glyphIndex
¸¸M W
)
¸¸W X
)
¸¸X Y
{
˝˝  !
if
ˇˇ$ &
(
ˇˇ' ("
m_CharacterLookupMap
ˇˇ( <
.
ˇˇ< =
ContainsKey
ˇˇ= H
(
ˇˇH I
unicode
ˇˇI P
)
ˇˇP Q
)
ˇˇQ R
continue
ÄÄ( 0
;
ÄÄ0 1"
m_CharacterLookupMap
ÉÉ$ 8
.
ÉÉ8 9
Add
ÉÉ9 <
(
ÉÉ< =
unicode
ÉÉ= D
,
ÉÉD E

glyphIndex
ÉÉF P
)
ÉÉP Q
;
ÉÉQ R
if
ÜÜ$ &
(
ÜÜ' (
m_GlyphLookupMap
ÜÜ( 8
.
ÜÜ8 9
ContainsKey
ÜÜ9 D
(
ÜÜD E

glyphIndex
ÜÜE O
)
ÜÜO P
)
ÜÜP Q
{
áá$ %
m_GlyphLookupMap
ââ( 8
[
ââ8 9

glyphIndex
ââ9 C
]
ââC D
.
ââD E
Add
ââE H
(
ââH I
unicode
ââI P
)
ââP Q
;
ââQ R
continue
ää( 0
;
ää0 1
}
ãã$ %
m_GlyphLookupMap
éé$ 4
.
éé4 5
Add
éé5 8
(
éé8 9

glyphIndex
éé9 C
,
ééC D
new
ééE H
List
ééI M
<
ééM N
uint
ééN R
>
ééR S
(
ééS T
)
ééT U
{
ééV W
unicode
ééX _
}
éé` a
)
ééa b
;
ééb c$
m_AvailableGlyphsToAdd
ëë$ :
.
ëë: ;
Add
ëë; >
(
ëë> ?

glyphIndex
ëë? I
)
ëëI J
;
ëëJ K
}
íí  !
else
ìì  $
{
îî  !!
m_MissingCharacters
ññ$ 7
.
ññ7 8
Add
ññ8 ;
(
ññ; <
unicode
ññ< C
)
ññC D
;
ññD E
}
óó  !
}
òò 
if
õõ 
(
õõ  $
m_AvailableGlyphsToAdd
õõ  6
.
õõ6 7
Count
õõ7 <
>
õõ= >
$num
õõ? @
)
õõ@ A
{
úú 
int
ùù  #
packingModifier
ùù$ 3
=
ùù4 5
(
ùù6 7
(
ùù7 8
GlyphRasterModes
ùù8 H
)
ùùH I
m_GlyphRenderMode
ùùI Z
&
ùù[ \
GlyphRasterModes
ùù] m
.
ùùm n!
RASTER_MODE_BITMAPùùn Ä
)ùùÄ Å
==ùùÇ Ñ 
GlyphRasterModesùùÖ ï
.ùùï ñ"
RASTER_MODE_BITMAPùùñ ®
?ùù© ™
$numùù´ ¨
:ùù≠ Æ
$numùùØ ∞
;ùù∞ ±
if
üü  "
(
üü# $%
m_PointSizeSamplingMode
üü$ ;
==
üü< >
$num
üü? @
)
üü@ A
{
††  !
int
¢¢$ '
minPointSize
¢¢( 4
=
¢¢5 6
$num
¢¢7 8
;
¢¢8 9
int
££$ '
maxPointSize
££( 4
=
££5 6
(
££7 8
int
££8 ;
)
££; <
Mathf
££< A
.
££A B
Sqrt
££B F
(
££F G
(
££G H
m_AtlasWidth
££H T
*
££U V
m_AtlasHeight
££W d
)
££d e
/
££f g$
m_AvailableGlyphsToAdd
££h ~
.
££~ 
Count££ Ñ
)££Ñ Ö
*££Ü á
$num££à â
;££â ä
m_PointSize
••$ /
=
••0 1
(
••2 3
maxPointSize
••3 ?
+
••@ A
minPointSize
••B N
)
••N O
/
••P Q
$num
••R S
;
••S T
bool
ßß$ (#
optimumPointSizeFound
ßß) >
=
ßß? @
false
ßßA F
;
ßßF G
for
®®$ '
(
®®( )
int
®®) ,
	iteration
®®- 6
=
®®7 8
$num
®®9 :
;
®®: ;
	iteration
®®< E
<
®®F G
$num
®®H J
&&
®®K M#
optimumPointSizeFound
®®N c
==
®®d f
false
®®g l
;
®®l m
	iteration
®®n w
++
®®w y
)
®®y z
{
©©$ %,
m_AtlasGenerationProgressLabel
™™( F
=
™™G H
$str
™™I b
+
™™c d
	iteration
™™e n
+
™™o p
$str
™™q t
;
™™t u

FontEngine
¨¨( 2
.
¨¨2 3
SetFaceSize
¨¨3 >
(
¨¨> ?
m_PointSize
¨¨? J
)
¨¨J K
;
¨¨K L
m_GlyphsToPack
ÆÆ( 6
.
ÆÆ6 7
Clear
ÆÆ7 <
(
ÆÆ< =
)
ÆÆ= >
;
ÆÆ> ?
m_GlyphsPacked
ØØ( 6
.
ØØ6 7
Clear
ØØ7 <
(
ØØ< =
)
ØØ= >
;
ØØ> ?
m_FreeGlyphRects
±±( 8
.
±±8 9
Clear
±±9 >
(
±±> ?
)
±±? @
;
±±@ A
m_FreeGlyphRects
≤≤( 8
.
≤≤8 9
Add
≤≤9 <
(
≤≤< =
new
≤≤= @
	GlyphRect
≤≤A J
(
≤≤J K
$num
≤≤K L
,
≤≤L M
$num
≤≤N O
,
≤≤O P
m_AtlasWidth
≤≤Q ]
-
≤≤^ _
packingModifier
≤≤` o
,
≤≤o p
m_AtlasHeight
≤≤q ~
-≤≤ Ä
packingModifier≤≤Å ê
)≤≤ê ë
)≤≤ë í
;≤≤í ì
m_UsedGlyphRects
≥≥( 8
.
≥≥8 9
Clear
≥≥9 >
(
≥≥> ?
)
≥≥? @
;
≥≥@ A
for
µµ( +
(
µµ, -
int
µµ- 0
i
µµ1 2
=
µµ3 4
$num
µµ5 6
;
µµ6 7
i
µµ8 9
<
µµ: ;$
m_AvailableGlyphsToAdd
µµ< R
.
µµR S
Count
µµS X
;
µµX Y
i
µµZ [
++
µµ[ ]
)
µµ] ^
{
∂∂( )
uint
∑∑, 0

glyphIndex
∑∑1 ;
=
∑∑< =$
m_AvailableGlyphsToAdd
∑∑> T
[
∑∑T U
i
∑∑U V
]
∑∑V W
;
∑∑W X
Glyph
∏∏, 1
glyph
∏∏2 7
;
∏∏7 8
if
∫∫, .
(
∫∫/ 0

FontEngine
∫∫0 :
.
∫∫: ;'
TryGetGlyphWithIndexValue
∫∫; T
(
∫∫T U

glyphIndex
∫∫U _
,
∫∫_ `
glyphLoadFlags
∫∫a o
,
∫∫o p
out
∫∫q t
glyph
∫∫u z
)
∫∫z {
)
∫∫{ |
{
ªª, -
if
ºº0 2
(
ºº3 4
glyph
ºº4 9
.
ºº9 :
	glyphRect
ºº: C
.
ººC D
width
ººD I
>
ººJ K
$num
ººL M
&&
ººN P
glyph
ººQ V
.
ººV W
	glyphRect
ººW `
.
ºº` a
height
ººa g
>
ººh i
$num
ººj k
)
ººk l
{
ΩΩ0 1
m_GlyphsToPack
ææ4 B
.
ææB C
Add
ææC F
(
ææF G
glyph
ææG L
)
ææL M
;
ææM N
}
øø0 1
else
¿¿0 4
{
¡¡0 1
m_GlyphsPacked
¬¬4 B
.
¬¬B C
Add
¬¬C F
(
¬¬F G
glyph
¬¬G L
)
¬¬L M
;
¬¬M N
}
√√0 1
}
ƒƒ, -
}
≈≈( )

FontEngine
««( 2
.
««2 3"
TryPackGlyphsInAtlas
««3 G
(
««G H
m_GlyphsToPack
««H V
,
««V W
m_GlyphsPacked
««X f
,
««f g
	m_Padding
««h q
,
««q r
(
««s t
GlyphPackingMode««t Ñ
)««Ñ Ö
m_PackingMode««Ö í
,««í ì!
m_GlyphRenderMode««î •
,««• ¶
m_AtlasWidth««ß ≥
,««≥ ¥
m_AtlasHeight««µ ¬
,««¬ √ 
m_FreeGlyphRects««ƒ ‘
,««‘ ’ 
m_UsedGlyphRects««÷ Ê
)««Ê Á
;««Á Ë
if
……( *
(
……+ ,%
m_IsGenerationCancelled
……, C
)
……C D
{
  ( )
DestroyImmediate
ÀÀ, <
(
ÀÀ< = 
m_FontAtlasTexture
ÀÀ= O
)
ÀÀO P
;
ÀÀP Q 
m_FontAtlasTexture
ÃÃ, >
=
ÃÃ? @
null
ÃÃA E
;
ÃÃE F
return
ÕÕ, 2
;
ÕÕ2 3
}
ŒŒ( )
if
““( *
(
““+ ,
m_GlyphsToPack
““, :
.
““: ;
Count
““; @
>
““A B
$num
““C D
)
““D E
{
””( )
if
‘‘, .
(
‘‘/ 0
m_PointSize
‘‘0 ;
>
‘‘< =
minPointSize
‘‘> J
)
‘‘J K
{
’’, -
maxPointSize
÷÷0 <
=
÷÷= >
m_PointSize
÷÷? J
;
÷÷J K
m_PointSize
◊◊0 ;
=
◊◊< =
(
◊◊> ?
m_PointSize
◊◊? J
+
◊◊K L
minPointSize
◊◊M Y
)
◊◊Y Z
/
◊◊[ \
$num
◊◊] ^
;
◊◊^ _
}
⁄⁄, -
}
€€( )
else
‹‹( ,
{
››( )
if
ﬁﬁ, .
(
ﬁﬁ/ 0
maxPointSize
ﬁﬁ0 <
-
ﬁﬁ= >
minPointSize
ﬁﬁ? K
>
ﬁﬁL M
$num
ﬁﬁN O
&&
ﬁﬁP R
m_PointSize
ﬁﬁS ^
<
ﬁﬁ_ `
maxPointSize
ﬁﬁa m
)
ﬁﬁm n
{
ﬂﬂ, -
minPointSize
‡‡0 <
=
‡‡= >
m_PointSize
‡‡? J
;
‡‡J K
m_PointSize
··0 ;
=
··< =
(
··> ?
m_PointSize
··? J
+
··K L
maxPointSize
··M Y
)
··Y Z
/
··[ \
$num
··] ^
;
··^ _
}
‰‰, -
else
ÂÂ, 0
{
ÊÊ, -#
optimumPointSizeFound
ËË0 E
=
ËËF G
true
ËËH L
;
ËËL M
}
ÈÈ, -
}
ÍÍ( )
}
ÎÎ$ %
}
ÏÏ  !
else
ÌÌ  $
{
ÓÓ  !,
m_AtlasGenerationProgressLabel
ÔÔ$ B
=
ÔÔC D
$str
ÔÔE X
;
ÔÔX Y

FontEngine
ÚÚ$ .
.
ÚÚ. /
SetFaceSize
ÚÚ/ :
(
ÚÚ: ;
m_PointSize
ÚÚ; F
)
ÚÚF G
;
ÚÚG H
m_GlyphsToPack
ÙÙ$ 2
.
ÙÙ2 3
Clear
ÙÙ3 8
(
ÙÙ8 9
)
ÙÙ9 :
;
ÙÙ: ;
m_GlyphsPacked
ıı$ 2
.
ıı2 3
Clear
ıı3 8
(
ıı8 9
)
ıı9 :
;
ıı: ;
m_FreeGlyphRects
˜˜$ 4
.
˜˜4 5
Clear
˜˜5 :
(
˜˜: ;
)
˜˜; <
;
˜˜< =
m_FreeGlyphRects
¯¯$ 4
.
¯¯4 5
Add
¯¯5 8
(
¯¯8 9
new
¯¯9 <
	GlyphRect
¯¯= F
(
¯¯F G
$num
¯¯G H
,
¯¯H I
$num
¯¯J K
,
¯¯K L
m_AtlasWidth
¯¯M Y
-
¯¯Z [
packingModifier
¯¯\ k
,
¯¯k l
m_AtlasHeight
¯¯m z
-
¯¯{ |
packingModifier¯¯} å
)¯¯å ç
)¯¯ç é
;¯¯é è
m_UsedGlyphRects
˘˘$ 4
.
˘˘4 5
Clear
˘˘5 :
(
˘˘: ;
)
˘˘; <
;
˘˘< =
for
˚˚$ '
(
˚˚( )
int
˚˚) ,
i
˚˚- .
=
˚˚/ 0
$num
˚˚1 2
;
˚˚2 3
i
˚˚4 5
<
˚˚6 7$
m_AvailableGlyphsToAdd
˚˚8 N
.
˚˚N O
Count
˚˚O T
;
˚˚T U
i
˚˚V W
++
˚˚W Y
)
˚˚Y Z
{
¸¸$ %
uint
˝˝( ,

glyphIndex
˝˝- 7
=
˝˝8 9$
m_AvailableGlyphsToAdd
˝˝: P
[
˝˝P Q
i
˝˝Q R
]
˝˝R S
;
˝˝S T
Glyph
˛˛( -
glyph
˛˛. 3
;
˛˛3 4
if
ÄÄ( *
(
ÄÄ+ ,

FontEngine
ÄÄ, 6
.
ÄÄ6 7'
TryGetGlyphWithIndexValue
ÄÄ7 P
(
ÄÄP Q

glyphIndex
ÄÄQ [
,
ÄÄ[ \
glyphLoadFlags
ÄÄ] k
,
ÄÄk l
out
ÄÄm p
glyph
ÄÄq v
)
ÄÄv w
)
ÄÄw x
{
ÅÅ( )
if
ÇÇ, .
(
ÇÇ/ 0
glyph
ÇÇ0 5
.
ÇÇ5 6
	glyphRect
ÇÇ6 ?
.
ÇÇ? @
width
ÇÇ@ E
>
ÇÇF G
$num
ÇÇH I
&&
ÇÇJ L
glyph
ÇÇM R
.
ÇÇR S
	glyphRect
ÇÇS \
.
ÇÇ\ ]
height
ÇÇ] c
>
ÇÇd e
$num
ÇÇf g
)
ÇÇg h
{
ÉÉ, -
m_GlyphsToPack
ÑÑ0 >
.
ÑÑ> ?
Add
ÑÑ? B
(
ÑÑB C
glyph
ÑÑC H
)
ÑÑH I
;
ÑÑI J
}
ÖÖ, -
else
ÜÜ, 0
{
áá, -
m_GlyphsPacked
àà0 >
.
àà> ?
Add
àà? B
(
ààB C
glyph
ààC H
)
ààH I
;
ààI J
}
ââ, -
}
ää( )
}
ãã$ %

FontEngine
çç$ .
.
çç. /"
TryPackGlyphsInAtlas
çç/ C
(
ççC D
m_GlyphsToPack
ççD R
,
ççR S
m_GlyphsPacked
ççT b
,
ççb c
	m_Padding
ççd m
,
ççm n
(
çço p
GlyphPackingModeççp Ä
)ççÄ Å
m_PackingModeççÅ é
,ççé è!
m_GlyphRenderModeççê °
,çç° ¢
m_AtlasWidthçç£ Ø
,ççØ ∞
m_AtlasHeightçç± æ
,ççæ ø 
m_FreeGlyphRectsçç¿ –
,çç– — 
m_UsedGlyphRectsçç“ ‚
)çç‚ „
;çç„ ‰
if
èè$ &
(
èè' (%
m_IsGenerationCancelled
èè( ?
)
èè? @
{
êê$ %
DestroyImmediate
ëë( 8
(
ëë8 9 
m_FontAtlasTexture
ëë9 K
)
ëëK L
;
ëëL M 
m_FontAtlasTexture
íí( :
=
íí; <
null
íí= A
;
ííA B
return
ìì( .
;
ìì. /
}
îî$ %
}
ññ  !
}
òò 
else
ôô  
{
öö 
int
õõ  #
packingModifier
õõ$ 3
=
õõ4 5
(
õõ6 7
(
õõ7 8
GlyphRasterModes
õõ8 H
)
õõH I
m_GlyphRenderMode
õõI Z
&
õõ[ \
GlyphRasterModes
õõ] m
.
õõm n!
RASTER_MODE_BITMAPõõn Ä
)õõÄ Å
==õõÇ Ñ 
GlyphRasterModesõõÖ ï
.õõï ñ"
RASTER_MODE_BITMAPõõñ ®
?õõ© ™
$numõõ´ ¨
:õõ≠ Æ
$numõõØ ∞
;õõ∞ ±

FontEngine
ùù  *
.
ùù* +
SetFaceSize
ùù+ 6
(
ùù6 7
m_PointSize
ùù7 B
)
ùùB C
;
ùùC D
m_GlyphsToPack
üü  .
.
üü. /
Clear
üü/ 4
(
üü4 5
)
üü5 6
;
üü6 7
m_GlyphsPacked
††  .
.
††. /
Clear
††/ 4
(
††4 5
)
††5 6
;
††6 7
m_FreeGlyphRects
¢¢  0
.
¢¢0 1
Clear
¢¢1 6
(
¢¢6 7
)
¢¢7 8
;
¢¢8 9
m_FreeGlyphRects
££  0
.
££0 1
Add
££1 4
(
££4 5
new
££5 8
	GlyphRect
££9 B
(
££B C
$num
££C D
,
££D E
$num
££F G
,
££G H
m_AtlasWidth
££I U
-
££V W
packingModifier
££X g
,
££g h
m_AtlasHeight
££i v
-
££w x
packingModifier££y à
)££à â
)££â ä
;££ä ã
m_UsedGlyphRects
§§  0
.
§§0 1
Clear
§§1 6
(
§§6 7
)
§§7 8
;
§§8 9
}
•• 
m_StopWatch
®® '
.
®®' (
Stop
®®( ,
(
®®, -
)
®®- .
;
®®. /*
m_GlyphPackingGenerationTime
©© 8
=
©©9 :
m_StopWatch
©©; F
.
©©F G
Elapsed
©©G N
.
©©N O
TotalMilliseconds
©©O `
;
©©` a"
m_IsGlyphPackingDone
™™ 0
=
™™1 2
true
™™3 7
;
™™7 8
m_StopWatch
´´ '
.
´´' (
Reset
´´( -
(
´´- .
)
´´. /
;
´´/ 0"
m_FontCharacterTable
≠≠ 0
.
≠≠0 1
Clear
≠≠1 6
(
≠≠6 7
)
≠≠7 8
;
≠≠8 9
m_FontGlyphTable
ÆÆ ,
.
ÆÆ, -
Clear
ÆÆ- 2
(
ÆÆ2 3
)
ÆÆ3 4
;
ÆÆ4 5
m_GlyphsToRender
ØØ ,
.
ØØ, -
Clear
ØØ- 2
(
ØØ2 3
)
ØØ3 4
;
ØØ4 5
foreach
≤≤ #
(
≤≤$ %
Glyph
≤≤% *
glyph
≤≤+ 0
in
≤≤1 3
m_GlyphsPacked
≤≤4 B
)
≤≤B C
{
≥≥ 
uint
¥¥  $

glyphIndex
¥¥% /
=
¥¥0 1
glyph
¥¥2 7
.
¥¥7 8
index
¥¥8 =
;
¥¥= >
m_FontGlyphTable
∂∂  0
.
∂∂0 1
Add
∂∂1 4
(
∂∂4 5
glyph
∂∂5 :
)
∂∂: ;
;
∂∂; <
if
ππ  "
(
ππ# $
glyph
ππ$ )
.
ππ) *
	glyphRect
ππ* 3
.
ππ3 4
width
ππ4 9
>
ππ: ;
$num
ππ< =
&&
ππ> @
glyph
ππA F
.
ππF G
	glyphRect
ππG P
.
ππP Q
height
ππQ W
>
ππX Y
$num
ππZ [
)
ππ[ \
m_GlyphsToRender
∫∫$ 4
.
∫∫4 5
Add
∫∫5 8
(
∫∫8 9
glyph
∫∫9 >
)
∫∫> ?
;
∫∫? @
foreach
ºº  '
(
ºº( )
uint
ºº) -
unicode
ºº. 5
in
ºº6 8
m_GlyphLookupMap
ºº9 I
[
ººI J

glyphIndex
ººJ T
]
ººT U
)
ººU V
{
ΩΩ  !"
m_FontCharacterTable
øø$ 8
.
øø8 9
Add
øø9 <
(
øø< =
new
øø= @
TMP_Character
øøA N
(
øøN O
unicode
øøO V
,
øøV W
glyph
øøX ]
)
øø] ^
)
øø^ _
;
øø_ `
}
¿¿  !
}
¡¡ 
foreach
ƒƒ #
(
ƒƒ$ %
Glyph
ƒƒ% *
glyph
ƒƒ+ 0
in
ƒƒ1 3
m_GlyphsToPack
ƒƒ4 B
)
ƒƒB C
{
≈≈ 
foreach
∆∆  '
(
∆∆( )
uint
∆∆) -
unicode
∆∆. 5
in
∆∆6 8
m_GlyphLookupMap
∆∆9 I
[
∆∆I J
glyph
∆∆J O
.
∆∆O P
index
∆∆P U
]
∆∆U V
)
∆∆V W
{
««  !"
m_ExcludedCharacters
»»$ 8
.
»»8 9
Add
»»9 <
(
»»< =
unicode
»»= D
)
»»D E
;
»»E F
}
……  !
}
   

m_FaceInfo
ÕÕ &
=
ÕÕ' (

FontEngine
ÕÕ) 3
.
ÕÕ3 4
GetFaceInfo
ÕÕ4 ?
(
ÕÕ? @
)
ÕÕ@ A
;
ÕÕA B
	autoEvent
œœ %
.
œœ% &
Set
œœ& )
(
œœ) *
)
œœ* +
;
œœ+ ,
}
–– 
)
–– 
;
–– 

ThreadPool
”” "
.
””" #
QueueUserWorkItem
””# 4
(
””4 5
RenderGlyphs
””5 A
=>
””B D
{
‘‘ 
	autoEvent
’’ %
.
’’% &
WaitOne
’’& -
(
’’- .
)
’’. /
;
’’/ 0
m_StopWatch
ÿÿ '
=
ÿÿ( )
System
ÿÿ* 0
.
ÿÿ0 1
Diagnostics
ÿÿ1 <
.
ÿÿ< =
	Stopwatch
ÿÿ= F
.
ÿÿF G
StartNew
ÿÿG O
(
ÿÿO P
)
ÿÿP Q
;
ÿÿQ R
m_IsRenderingDone
⁄⁄ -
=
⁄⁄. /
false
⁄⁄0 5
;
⁄⁄5 6"
m_AtlasTextureBuffer
›› 0
=
››1 2
new
››3 6
byte
››7 ;
[
››; <
m_AtlasWidth
››< H
*
››I J
m_AtlasHeight
››K X
]
››X Y
;
››Y Z,
m_AtlasGenerationProgressLabel
ﬂﬂ :
=
ﬂﬂ; <
$str
ﬂﬂ= R
;
ﬂﬂR S
if
‚‚ 
(
‚‚  
m_GlyphsToRender
‚‚  0
.
‚‚0 1
Count
‚‚1 6
>
‚‚7 8
$num
‚‚9 :
)
‚‚: ;
{
„„ 

FontEngine
‰‰  *
.
‰‰* +#
RenderGlyphsToTexture
‰‰+ @
(
‰‰@ A
m_GlyphsToRender
‰‰A Q
,
‰‰Q R
	m_Padding
‰‰S \
,
‰‰\ ]
m_GlyphRenderMode
‰‰^ o
,
‰‰o p#
m_AtlasTextureBuffer‰‰q Ö
,‰‰Ö Ü
m_AtlasWidth‰‰á ì
,‰‰ì î
m_AtlasHeight‰‰ï ¢
)‰‰¢ £
;‰‰£ §
}
ÂÂ 
m_IsRenderingDone
ÁÁ -
=
ÁÁ. /
true
ÁÁ0 4
;
ÁÁ4 5
m_StopWatch
ÍÍ '
.
ÍÍ' (
Stop
ÍÍ( ,
(
ÍÍ, -
)
ÍÍ- .
;
ÍÍ. /,
m_GlyphRenderingGenerationTime
ÎÎ :
=
ÎÎ; <
m_StopWatch
ÎÎ= H
.
ÎÎH I
Elapsed
ÎÎI P
.
ÎÎP Q
TotalMilliseconds
ÎÎQ b
;
ÎÎb c$
m_IsGlyphRenderingDone
ÏÏ 2
=
ÏÏ3 4
true
ÏÏ5 9
;
ÏÏ9 :
m_StopWatch
ÌÌ '
.
ÌÌ' (
Reset
ÌÌ( -
(
ÌÌ- .
)
ÌÌ. /
;
ÌÌ/ 0
}
ÓÓ 
)
ÓÓ 
;
ÓÓ 
}
ÔÔ /
!SaveCreationSettingsToEditorPrefs
ÒÒ 5
(
ÒÒ5 6&
SaveFontCreationSettings
ÒÒ6 N
(
ÒÒN O
)
ÒÒO P
)
ÒÒP Q
;
ÒÒQ R
}
ÚÚ 
}
ÛÛ 
	GUILayout
ˆˆ 
.
ˆˆ 
Space
ˆˆ 
(
ˆˆ 
$num
ˆˆ 
)
ˆˆ 
;
ˆˆ 
Rect
˜˜ 
progressRect
˜˜ 
=
˜˜ 
EditorGUILayout
˜˜  /
.
˜˜/ 0
GetControlRect
˜˜0 >
(
˜˜> ?
false
˜˜? D
,
˜˜D E
$num
˜˜F H
)
˜˜H I
;
˜˜I J
GUI
˘˘ 
.
˘˘ 
enabled
˘˘ 
=
˘˘ 
true
˘˘ 
;
˘˘ 
progressRect
˙˙ 
.
˙˙ 
width
˙˙ 
-=
˙˙ !
$num
˙˙" $
;
˙˙$ %
	EditorGUI
˚˚ 
.
˚˚ 
ProgressBar
˚˚ !
(
˚˚! "
progressRect
˚˚" .
,
˚˚. /
Mathf
˚˚0 5
.
˚˚5 6
Max
˚˚6 9
(
˚˚9 :
$num
˚˚: ?
,
˚˚? @'
m_AtlasGenerationProgress
˚˚A Z
)
˚˚Z [
,
˚˚[ \,
m_AtlasGenerationProgressLabel
˚˚] {
)
˚˚{ |
;
˚˚| }
progressRect
¸¸ 
.
¸¸ 
x
¸¸ 
=
¸¸ 
progressRect
¸¸ )
.
¸¸) *
x
¸¸* +
+
¸¸, -
progressRect
¸¸. :
.
¸¸: ;
width
¸¸; @
+
¸¸A B
$num
¸¸C D
;
¸¸D E
progressRect
˝˝ 
.
˝˝ 
y
˝˝ 
-=
˝˝ 
$num
˝˝ 
;
˝˝  
progressRect
˛˛ 
.
˛˛ 
width
˛˛ 
=
˛˛  
$num
˛˛! #
;
˛˛# $
progressRect
ˇˇ 
.
ˇˇ 
height
ˇˇ 
=
ˇˇ  !
$num
ˇˇ" $
;
ˇˇ$ %
GUI
ÅÅ 
.
ÅÅ 
enabled
ÅÅ 
=
ÅÅ 
m_IsProcessing
ÅÅ (
;
ÅÅ( )
if
ÇÇ 
(
ÇÇ 
GUI
ÇÇ 
.
ÇÇ 
Button
ÇÇ 
(
ÇÇ 
progressRect
ÇÇ '
,
ÇÇ' (
$str
ÇÇ) ,
)
ÇÇ, -
)
ÇÇ- .
{
ÉÉ 

FontEngine
ÑÑ 
.
ÑÑ %
SendCancellationRequest
ÑÑ 2
(
ÑÑ2 3
)
ÑÑ3 4
;
ÑÑ4 5'
m_AtlasGenerationProgress
ÖÖ )
=
ÖÖ* +
$num
ÖÖ, -
;
ÖÖ- .
m_IsProcessing
ÜÜ 
=
ÜÜ  
false
ÜÜ! &
;
ÜÜ& '%
m_IsGenerationCancelled
áá '
=
áá( )
true
áá* .
;
áá. /
}
àà 
	GUILayout
ââ 
.
ââ 
Space
ââ 
(
ââ 
$num
ââ 
)
ââ 
;
ââ 
GUI
åå 
.
åå 
enabled
åå 
=
åå 
true
åå 
;
åå 
	GUILayout
éé 
.
éé 
BeginVertical
éé #
(
éé# $
EditorStyles
éé$ 0
.
éé0 1
helpBox
éé1 8
,
éé8 9
	GUILayout
éé: C
.
ééC D
Height
ééD J
(
ééJ K
$num
ééK N
)
ééN O
)
ééO P
;
ééP Q$
m_OutputScrollPosition
èè "
=
èè# $
EditorGUILayout
èè% 4
.
èè4 5
BeginScrollView
èè5 D
(
èèD E$
m_OutputScrollPosition
èèE [
)
èè[ \
;
èè\ ]
EditorGUILayout
êê 
.
êê 

LabelField
êê &
(
êê& '
m_OutputFeedback
êê' 7
,
êê7 8 
TMP_UIStyleManager
êê9 K
.
êêK L
label
êêL Q
)
êêQ R
;
êêR S
EditorGUILayout
ëë 
.
ëë 
EndScrollView
ëë )
(
ëë) *
)
ëë* +
;
ëë+ ,
	GUILayout
íí 
.
íí 
EndVertical
íí !
(
íí! "
)
íí" #
;
íí# $
GUI
ïï 
.
ïï 
enabled
ïï 
=
ïï  
m_FontAtlasTexture
ïï ,
!=
ïï- /
null
ïï0 4
&&
ïï5 7
!
ïï8 9
m_IsProcessing
ïï9 G
;
ïïG H
EditorGUILayout
óó 
.
óó 
BeginHorizontal
óó +
(
óó+ ,
)
óó, -
;
óó- .
if
ôô 
(
ôô 
	GUILayout
ôô 
.
ôô 
Button
ôô  
(
ôô  !
$str
ôô! '
)
ôô' (
&&
ôô) +
GUI
ôô, /
.
ôô/ 0
enabled
ôô0 7
)
ôô7 8
{
öö 
if
õõ 
(
õõ !
m_SelectedFontAsset
õõ '
==
õõ( *
null
õõ+ /
)
õõ/ 0
{
úú 
if
ùù 
(
ùù 
m_LegacyFontAsset
ùù )
!=
ùù* ,
null
ùù- 1
)
ùù1 2*
SaveNewFontAssetWithSameName
ûû 4
(
ûû4 5
m_LegacyFontAsset
ûû5 F
)
ûûF G
;
ûûG H
else
üü 
SaveNewFontAsset
†† (
(
††( )
m_SourceFontFile
††) 9
)
††9 :
;
††: ;
}
°° 
else
¢¢ 
{
££ 
string
•• 
filePath
•• #
=
••$ %
Path
••& *
.
••* +
GetFullPath
••+ 6
(
••6 7
AssetDatabase
••7 D
.
••D E
GetAssetPath
••E Q
(
••Q R!
m_SelectedFontAsset
••R e
)
••e f
)
••f g
.
••g h
Replace
••h o
(
••o p
$char
••p t
,
••t u
$char
••v y
)
••y z
;
••z {
if
ßß 
(
ßß 
(
ßß 
(
ßß 
GlyphRasterModes
ßß *
)
ßß* +
m_GlyphRenderMode
ßß+ <
&
ßß= >
GlyphRasterModes
ßß? O
.
ßßO P 
RASTER_MODE_BITMAP
ßßP b
)
ßßb c
==
ßßd f
GlyphRasterModes
ßßg w
.
ßßw x!
RASTER_MODE_BITMAPßßx ä
)ßßä ã#
Save_Bitmap_FontAsset
®® 1
(
®®1 2
filePath
®®2 :
)
®®: ;
;
®®; <
else
©©  
Save_SDF_FontAsset
™™ *
(
™™* +
filePath
™™+ 3
)
™™3 4
;
™™4 5
}
´´ 
}
¨¨ 
if
≠≠ 
(
≠≠ 
	GUILayout
≠≠ 
.
≠≠ 
Button
≠≠  
(
≠≠  !
$str
≠≠! -
)
≠≠- .
&&
≠≠/ 1
GUI
≠≠2 5
.
≠≠5 6
enabled
≠≠6 =
)
≠≠= >
{
ÆÆ 
if
ØØ 
(
ØØ !
m_SelectedFontAsset
ØØ '
==
ØØ( *
null
ØØ+ /
)
ØØ/ 0
{
∞∞ 
SaveNewFontAsset
±± $
(
±±$ %
m_SourceFontFile
±±% 5
)
±±5 6
;
±±6 7
}
≤≤ 
else
≥≥ 
{
¥¥ *
SaveNewFontAssetWithSameName
µµ 0
(
µµ0 1!
m_SelectedFontAsset
µµ1 D
)
µµD E
;
µµE F
}
∂∂ 
}
∑∑ 
EditorGUILayout
ππ 
.
ππ 
EndHorizontal
ππ )
(
ππ) *
)
ππ* +
;
ππ+ ,
EditorGUILayout
ªª 
.
ªª 
Space
ªª !
(
ªª! "
)
ªª" #
;
ªª# $
EditorGUILayout
ΩΩ 
.
ΩΩ 
EndVertical
ΩΩ '
(
ΩΩ' (
)
ΩΩ( )
;
ΩΩ) *
GUI
øø 
.
øø 
enabled
øø 
=
øø 
true
øø 
;
øø 
if
¡¡ 
(
¡¡ 
position
¡¡ 
.
¡¡ 
height
¡¡ 
>
¡¡  !
position
¡¡" *
.
¡¡* +
width
¡¡+ 0
||
¡¡1 3
position
¡¡4 <
.
¡¡< =
width
¡¡= B
<
¡¡C D&
k_TwoColumnControlsWidth
¡¡E ]
)
¡¡] ^
{
¬¬ 
DrawPreview
√√ 
(
√√ 
)
√√ 
;
√√ 
	GUILayout
ƒƒ 
.
ƒƒ 
Space
ƒƒ 
(
ƒƒ  
$num
ƒƒ  !
)
ƒƒ! "
;
ƒƒ" #
}
≈≈ 
EditorGUILayout
«« 
.
«« 
EndScrollView
«« )
(
««) *
)
««* +
;
««+ ,
if
…… 
(
…… "
m_IsFontAtlasInvalid
…… $
)
……$ % 
ClearGeneratedData
   "
(
  " #
)
  # $
;
  $ %
}
ÀÀ 	
void
——  
ClearGeneratedData
—— 
(
——  
)
——  !
{
““ 	"
m_IsFontAtlasInvalid
””  
=
””! "
false
””# (
;
””( )
if
’’ 
(
’’  
m_FontAtlasTexture
’’ "
!=
’’# %
null
’’& *
&&
’’+ -
!
’’. /
EditorUtility
’’/ <
.
’’< =
IsPersistent
’’= I
(
’’I J 
m_FontAtlasTexture
’’J \
)
’’\ ]
)
’’] ^
{
÷÷ 
DestroyImmediate
◊◊  
(
◊◊  ! 
m_FontAtlasTexture
◊◊! 3
)
◊◊3 4
;
◊◊4 5 
m_FontAtlasTexture
ÿÿ "
=
ÿÿ# $
null
ÿÿ% )
;
ÿÿ) *
}
ŸŸ ,
m_AtlasGenerationProgressLabel
€€ *
=
€€+ ,
string
€€- 3
.
€€3 4
Empty
€€4 9
;
€€9 :'
m_AtlasGenerationProgress
‹‹ %
=
‹‹& '
$num
‹‹( )
;
‹‹) *
m_SavedFontAtlas
›› 
=
›› 
null
›› #
;
››# $
m_OutputFeedback
ﬂﬂ 
=
ﬂﬂ 
string
ﬂﬂ %
.
ﬂﬂ% &
Empty
ﬂﬂ& +
;
ﬂﬂ+ ,
m_WarningMessage
‡‡ 
=
‡‡ 
string
‡‡ %
.
‡‡% &
Empty
‡‡& +
;
‡‡+ ,
}
·· 	
void
ÁÁ (
UpdateRenderFeedbackWindow
ÁÁ '
(
ÁÁ' (
)
ÁÁ( )
{
ËË 	
m_PointSize
ÈÈ 
=
ÈÈ 

m_FaceInfo
ÈÈ $
.
ÈÈ$ %
	pointSize
ÈÈ% .
;
ÈÈ. /
string
ÎÎ  
missingGlyphReport
ÎÎ %
=
ÎÎ& '
string
ÎÎ( .
.
ÎÎ. /
Empty
ÎÎ/ 4
;
ÎÎ4 5
string
ÓÓ 
	colorTag2
ÓÓ 
=
ÓÓ 
$str
ÓÓ 0
;
ÓÓ0 1 
missingGlyphReport
 
=
  
$str
! ,
+
- .
	colorTag2
/ 8
+
9 :

m_FaceInfo
; E
.
E F

familyName
F P
+
Q R
$str
S m
+
n o
	colorTag2
p y
+
z {

m_FaceInfo| Ü
.Ü á
	styleNameá ê
+ë í
$strì °
;° ¢ 
missingGlyphReport
ÚÚ 
+=
ÚÚ !
$str
ÚÚ" 5
+
ÚÚ6 7
	colorTag2
ÚÚ8 A
+
ÚÚB C

m_FaceInfo
ÚÚD N
.
ÚÚN O
	pointSize
ÚÚO X
+
ÚÚY Z
$str
ÚÚ[ |
+
ÚÚ} ~
	colorTag2ÚÚ à
+ÚÚâ ä
(ÚÚå ç
(ÚÚç é
floatÚÚé ì
)ÚÚì î
	m_PaddingÚÚî ù
/ÚÚû ü

m_FaceInfoÚÚ† ™
.ÚÚ™ ´
	pointSizeÚÚ´ ¥
)ÚÚ¥ µ
.ÚÚµ ∂
ToStringÚÚ∂ æ
(ÚÚæ ø
$strÚÚø ≈
+ÚÚ∆ «
$strÚÚ» ÷
)ÚÚ÷ ◊
;ÚÚ◊ ÿ 
missingGlyphReport
ÙÙ 
+=
ÙÙ !
$str
ÙÙ" O
+
ÙÙP Q"
m_FontCharacterTable
ÙÙR f
.
ÙÙf g
Count
ÙÙg l
+
ÙÙm n
$str
ÙÙo r
+
ÙÙs t
m_CharacterCountÙÙu Ö
+ÙÙÜ á
$strÙÙà ñ
;ÙÙñ ó 
missingGlyphReport
ıı 
+=
ıı !
$str
ıı" L
+
ııM N!
m_MissingCharacters
ııO b
.
ııb c
Count
ııc h
+
ııi j
$str
ıık y
;
ııy z 
missingGlyphReport
ˆˆ 
+=
ˆˆ !
$str
ˆˆ" M
+
ˆˆN O"
m_ExcludedCharacters
ˆˆP d
.
ˆˆd e
Count
ˆˆe j
+
ˆˆk l
$str
ˆˆm {
;
ˆˆ{ | 
missingGlyphReport
˘˘ 
+=
˘˘ !
$str
˘˘" h
;
˘˘h i 
missingGlyphReport
˙˙ 
+=
˙˙ !
$str
˙˙" N
;
˙˙N O
m_OutputFeedback
¸¸ 
=
¸¸  
missingGlyphReport
¸¸ 1
;
¸¸1 2
for
˛˛ 
(
˛˛ 
int
˛˛ 
i
˛˛ 
=
˛˛ 
$num
˛˛ 
;
˛˛ 
i
˛˛ 
<
˛˛ !
m_MissingCharacters
˛˛  3
.
˛˛3 4
Count
˛˛4 9
;
˛˛9 :
i
˛˛; <
++
˛˛< >
)
˛˛> ?
{
ˇˇ  
missingGlyphReport
Ä	Ä	 "
+=
Ä	Ä	# %
$str
Ä	Ä	& =
+
Ä	Ä	> ?!
m_MissingCharacters
Ä	Ä	@ S
[
Ä	Ä	S T
i
Ä	Ä	T U
]
Ä	Ä	U V
+
Ä	Ä	W X
$str
Ä	Ä	Y y
+
Ä	Ä	z {"
m_MissingCharactersÄ	Ä	| è
[Ä	Ä	è ê
iÄ	Ä	ê ë
]Ä	Ä	ë í
.Ä	Ä	í ì
ToStringÄ	Ä	ì õ
(Ä	Ä	õ ú
$strÄ	Ä	ú ü
)Ä	Ä	ü †
+Ä	Ä	° ¢
$strÄ	Ä	£ ƒ
+Ä	Ä	≈ ∆
(Ä	Ä	« »
charÄ	Ä	» Ã
)Ä	Ä	Ã Õ#
m_MissingCharactersÄ	Ä	Õ ‡
[Ä	Ä	‡ ·
iÄ	Ä	· ‚
]Ä	Ä	‚ „
+Ä	Ä	‰ Â
$strÄ	Ä	Ê Ò
;Ä	Ä	Ò Ú
if
Ç	Ç	 
(
Ç	Ç	  
missingGlyphReport
Ç	Ç	 &
.
Ç	Ç	& '
Length
Ç	Ç	' -
<
Ç	Ç	. /
$num
Ç	Ç	0 5
)
Ç	Ç	5 6
m_OutputFeedback
É	É	 $
=
É	É	% & 
missingGlyphReport
É	É	' 9
;
É	É	9 :
}
Ñ	Ñ	  
missingGlyphReport
á	á	 
+=
á	á	 !
$str
á	á	" g
;
á	á	g h 
missingGlyphReport
à	à	 
+=
à	à	 !
$str
à	à	" N
;
à	à	N O
for
ä	ä	 
(
ä	ä	 
int
ä	ä	 
i
ä	ä	 
=
ä	ä	 
$num
ä	ä	 
;
ä	ä	 
i
ä	ä	 
<
ä	ä	 "
m_ExcludedCharacters
ä	ä	  4
.
ä	ä	4 5
Count
ä	ä	5 :
;
ä	ä	: ;
i
ä	ä	< =
++
ä	ä	= ?
)
ä	ä	? @
{
ã	ã	  
missingGlyphReport
å	å	 "
+=
å	å	# %
$str
å	å	& =
+
å	å	> ?"
m_ExcludedCharacters
å	å	@ T
[
å	å	T U
i
å	å	U V
]
å	å	V W
+
å	å	X Y
$str
å	å	Z z
+
å	å	{ |#
m_ExcludedCharacterså	å	} ë
[å	å	ë í
iå	å	í ì
]å	å	ì î
.å	å	î ï
ToStringå	å	ï ù
(å	å	ù û
$strå	å	û °
)å	å	° ¢
+å	å	£ §
$strå	å	• ∆
+å	å	« »
(å	å	…  
charå	å	  Œ
)å	å	Œ œ$
m_ExcludedCharacterså	å	œ „
[å	å	„ ‰
iå	å	‰ Â
]å	å	Â Ê
+å	å	Á Ë
$strå	å	È Ù
;å	å	Ù ı
if
é	é	 
(
é	é	  
missingGlyphReport
é	é	 *
.
é	é	* +
Length
é	é	+ 1
<
é	é	2 3
$num
é	é	4 9
)
é	é	9 :
m_OutputFeedback
è	è	 $
=
è	è	% & 
missingGlyphReport
è	è	' 9
;
è	è	9 :
}
ê	ê	 
if
í	í	 
(
í	í	  
missingGlyphReport
í	í	 "
.
í	í	" #
Length
í	í	# )
>
í	í	* +
$num
í	í	, 1
)
í	í	1 2
m_OutputFeedback
ì	ì	  
+=
ì	ì	! #
$strì	ì	$ ë
;ì	ì	ë í
if
ñ	ñ	 
(
ñ	ñ	 
	Directory
ñ	ñ	 
.
ñ	ñ	 
Exists
ñ	ñ	  
(
ñ	ñ	  !
$str
ñ	ñ	! 6
)
ñ	ñ	6 7
)
ñ	ñ	7 8
{
ó	ó	  
missingGlyphReport
ò	ò	 "
=
ò	ò	# $
System
ò	ò	% +
.
ò	ò	+ ,
Text
ò	ò	, 0
.
ò	ò	0 1 
RegularExpressions
ò	ò	1 C
.
ò	ò	C D
Regex
ò	ò	D I
.
ò	ò	I J
Replace
ò	ò	J Q
(
ò	ò	Q R 
missingGlyphReport
ò	ò	R d
,
ò	ò	d e
$str
ò	ò	f p
,
ò	ò	p q
string
ò	ò	r x
.
ò	ò	x y
Empty
ò	ò	y ~
)
ò	ò	~ 
;ò	ò	 Ä
File
ô	ô	 
.
ô	ô	 
WriteAllText
ô	ô	 !
(
ô	ô	! "
$str
ô	ô	" H
,
ô	ô	H I 
missingGlyphReport
ô	ô	J \
)
ô	ô	\ ]
;
ô	ô	] ^
AssetDatabase
ö	ö	 
.
ö	ö	 
Refresh
ö	ö	 %
(
ö	ö	% &
)
ö	ö	& '
;
ö	ö	' (
}
õ	õ	 
}
ú	ú	 	
void
ü	ü	 $
CreateFontAtlasTexture
ü	ü	 #
(
ü	ü	# $
)
ü	ü	$ %
{
†	†	 	
if
°	°	 
(
°	°	  
m_FontAtlasTexture
°	°	 "
!=
°	°	# %
null
°	°	& *
)
°	°	* +
DestroyImmediate
¢	¢	  
(
¢	¢	  ! 
m_FontAtlasTexture
¢	¢	! 3
)
¢	¢	3 4
;
¢	¢	4 5 
m_FontAtlasTexture
§	§	 
=
§	§	  
new
§	§	! $
	Texture2D
§	§	% .
(
§	§	. /
m_AtlasWidth
§	§	/ ;
,
§	§	; <
m_AtlasHeight
§	§	= J
,
§	§	J K
TextureFormat
§	§	L Y
.
§	§	Y Z
Alpha8
§	§	Z `
,
§	§	` a
false
§	§	b g
,
§	§	g h
true
§	§	i m
)
§	§	m n
;
§	§	n o
Color32
¶	¶	 
[
¶	¶	 
]
¶	¶	 
colors
¶	¶	 
=
¶	¶	 
new
¶	¶	 "
Color32
¶	¶	# *
[
¶	¶	* +
m_AtlasWidth
¶	¶	+ 7
*
¶	¶	8 9
m_AtlasHeight
¶	¶	: G
]
¶	¶	G H
;
¶	¶	H I
for
®	®	 
(
®	®	 
int
®	®	 
i
®	®	 
=
®	®	 
$num
®	®	 
;
®	®	 
i
®	®	 
<
®	®	 
colors
®	®	  &
.
®	®	& '
Length
®	®	' -
;
®	®	- .
i
®	®	/ 0
++
®	®	0 2
)
®	®	2 3
{
©	©	 
byte
™	™	 
c
™	™	 
=
™	™	 "
m_AtlasTextureBuffer
™	™	 -
[
™	™	- .
i
™	™	. /
]
™	™	/ 0
;
™	™	0 1
colors
´	´	 
[
´	´	 
i
´	´	 
]
´	´	 
=
´	´	 
new
´	´	 
Color32
´	´	  '
(
´	´	' (
c
´	´	( )
,
´	´	) *
c
´	´	+ ,
,
´	´	, -
c
´	´	. /
,
´	´	/ 0
c
´	´	1 2
)
´	´	2 3
;
´	´	3 4
}
¨	¨	 "
m_AtlasTextureBuffer
Ø	Ø	  
=
Ø	Ø	! "
null
Ø	Ø	# '
;
Ø	Ø	' (
if
±	±	 
(
±	±	 
(
±	±	 
m_GlyphRenderMode
±	±	 "
&
±	±	# $
GlyphRenderMode
±	±	% 4
.
±	±	4 5
RASTER
±	±	5 ;
)
±	±	; <
==
±	±	= ?
GlyphRenderMode
±	±	@ O
.
±	±	O P
RASTER
±	±	P V
||
±	±	W Y
(
±	±	Z [
m_GlyphRenderMode
±	±	[ l
&
±	±	m n
GlyphRenderMode
±	±	o ~
.
±	±	~ 
RASTER_HINTED±	±	 å
)±	±	å ç
==±	±	é ê
GlyphRenderMode±	±	ë †
.±	±	† °
RASTER_HINTED±	±	° Æ
)±	±	Æ Ø 
m_FontAtlasTexture
≤	≤	 "
.
≤	≤	" #

filterMode
≤	≤	# -
=
≤	≤	. /

FilterMode
≤	≤	0 :
.
≤	≤	: ;
Point
≤	≤	; @
;
≤	≤	@ A 
m_FontAtlasTexture
¥	¥	 
.
¥	¥	 
SetPixels32
¥	¥	 *
(
¥	¥	* +
colors
¥	¥	+ 1
,
¥	¥	1 2
$num
¥	¥	3 4
)
¥	¥	4 5
;
¥	¥	5 6 
m_FontAtlasTexture
µ	µ	 
.
µ	µ	 
Apply
µ	µ	 $
(
µ	µ	$ %
false
µ	µ	% *
,
µ	µ	* +
false
µ	µ	, 1
)
µ	µ	1 2
;
µ	µ	2 3
}
∫	∫	 	
void
¡	¡	 
SaveNewFontAsset
¡	¡	 
(
¡	¡	 
Object
¡	¡	 $
sourceObject
¡	¡	% 1
)
¡	¡	1 2
{
¬	¬	 	
string
√	√	 
filePath
√	√	 
;
√	√	 
string
∆	∆	 
saveDirectory
∆	∆	  
=
∆	∆	! "
new
∆	∆	# &
FileInfo
∆	∆	' /
(
∆	∆	/ 0
AssetDatabase
∆	∆	0 =
.
∆	∆	= >
GetAssetPath
∆	∆	> J
(
∆	∆	J K
sourceObject
∆	∆	K W
)
∆	∆	W X
)
∆	∆	X Y
.
∆	∆	Y Z
DirectoryName
∆	∆	Z g
;
∆	∆	g h
if
»	»	 
(
»	»	 
(
»	»	 
(
»	»	 
GlyphRasterModes
»	»	 "
)
»	»	" #
m_GlyphRenderMode
»	»	# 4
&
»	»	5 6
GlyphRasterModes
»	»	7 G
.
»	»	G H 
RASTER_MODE_BITMAP
»	»	H Z
)
»	»	Z [
==
»	»	\ ^
GlyphRasterModes
»	»	_ o
.
»	»	o p!
RASTER_MODE_BITMAP»	»	p Ç
)»	»	Ç É
{
…	…	 
filePath
 	 	 
=
 	 	 
EditorUtility
 	 	 (
.
 	 	( )
SaveFilePanel
 	 	) 6
(
 	 	6 7
$str
 	 	7 [
,
 	 	[ \
saveDirectory
 	 	] j
,
 	 	j k
sourceObject
 	 	l x
.
 	 	x y
name
 	 	y }
,
 	 	} ~
$str 	 	 Ü
) 	 	Ü á
; 	 	á à
if
Ã	Ã	 
(
Ã	Ã	 
filePath
Ã	Ã	 
.
Ã	Ã	 
Length
Ã	Ã	 #
==
Ã	Ã	$ &
$num
Ã	Ã	' (
)
Ã	Ã	( )
return
Õ	Õ	 
;
Õ	Õ	 #
Save_Bitmap_FontAsset
œ	œ	 %
(
œ	œ	% &
filePath
œ	œ	& .
)
œ	œ	. /
;
œ	œ	/ 0
}
–	–	 
else
—	—	 
{
“	“	 
filePath
”	”	 
=
”	”	 
EditorUtility
”	”	 (
.
”	”	( )
SaveFilePanel
”	”	) 6
(
”	”	6 7
$str
”	”	7 [
,
”	”	[ \
saveDirectory
”	”	] j
,
”	”	j k
sourceObject
”	”	l x
.
”	”	x y
name
”	”	y }
+
”	”	~ 
$str”	”	Ä Ü
,”	”	Ü á
$str”	”	à è
)”	”	è ê
;”	”	ê ë
if
’	’	 
(
’	’	 
filePath
’	’	 
.
’	’	 
Length
’	’	 #
==
’	’	$ &
$num
’	’	' (
)
’	’	( )
return
÷	÷	 
;
÷	÷	  
Save_SDF_FontAsset
ÿ	ÿ	 "
(
ÿ	ÿ	" #
filePath
ÿ	ÿ	# +
)
ÿ	ÿ	+ ,
;
ÿ	ÿ	, -
}
Ÿ	Ÿ	 
}
⁄	⁄	 	
void
·	·	 *
SaveNewFontAssetWithSameName
·	·	 )
(
·	·	) *
Object
·	·	* 0
sourceObject
·	·	1 =
)
·	·	= >
{
‚	‚	 	
string
„	„	 
filePath
„	„	 
;
„	„	 
string
Ê	Ê	 
saveDirectory
Ê	Ê	  
=
Ê	Ê	! "
new
Ê	Ê	# &
FileInfo
Ê	Ê	' /
(
Ê	Ê	/ 0
AssetDatabase
Ê	Ê	0 =
.
Ê	Ê	= >
GetAssetPath
Ê	Ê	> J
(
Ê	Ê	J K
sourceObject
Ê	Ê	K W
)
Ê	Ê	W X
)
Ê	Ê	X Y
.
Ê	Ê	Y Z
DirectoryName
Ê	Ê	Z g
;
Ê	Ê	g h
filePath
Ë	Ë	 
=
Ë	Ë	 
EditorUtility
Ë	Ë	 $
.
Ë	Ë	$ %
SaveFilePanel
Ë	Ë	% 2
(
Ë	Ë	2 3
$str
Ë	Ë	3 W
,
Ë	Ë	W X
saveDirectory
Ë	Ë	Y f
,
Ë	Ë	f g
sourceObject
Ë	Ë	h t
.
Ë	Ë	t u
name
Ë	Ë	u y
,
Ë	Ë	y z
$strË	Ë	{ Ç
)Ë	Ë	Ç É
;Ë	Ë	É Ñ
if
Í	Í	 
(
Í	Í	 
filePath
Í	Í	 
.
Í	Í	 
Length
Í	Í	 
==
Í	Í	  "
$num
Í	Í	# $
)
Í	Í	$ %
return
Î	Î	 
;
Î	Î	 
if
Ì	Ì	 
(
Ì	Ì	 
(
Ì	Ì	 
(
Ì	Ì	 
GlyphRasterModes
Ì	Ì	 "
)
Ì	Ì	" #
m_GlyphRenderMode
Ì	Ì	# 4
&
Ì	Ì	5 6
GlyphRasterModes
Ì	Ì	7 G
.
Ì	Ì	G H 
RASTER_MODE_BITMAP
Ì	Ì	H Z
)
Ì	Ì	Z [
==
Ì	Ì	\ ^
GlyphRasterModes
Ì	Ì	_ o
.
Ì	Ì	o p!
RASTER_MODE_BITMAPÌ	Ì	p Ç
)Ì	Ì	Ç É
{
Ó	Ó	 #
Save_Bitmap_FontAsset
Ô	Ô	 %
(
Ô	Ô	% &
filePath
Ô	Ô	& .
)
Ô	Ô	. /
;
Ô	Ô	/ 0
}
		 
else
Ò	Ò	 
{
Ú	Ú	  
Save_SDF_FontAsset
Û	Û	 "
(
Û	Û	" #
filePath
Û	Û	# +
)
Û	Û	+ ,
;
Û	Û	, -
}
Ù	Ù	 
}
ı	ı	 	
void
¯	¯	 #
Save_Bitmap_FontAsset
¯	¯	 "
(
¯	¯	" #
string
¯	¯	# )
filePath
¯	¯	* 2
)
¯	¯	2 3
{
˘	˘	 	
filePath
˙	˙	 
=
˙	˙	 
filePath
˙	˙	 
.
˙	˙	  
	Substring
˙	˙	  )
(
˙	˙	) *
$num
˙	˙	* +
,
˙	˙	+ ,
filePath
˙	˙	- 5
.
˙	˙	5 6
Length
˙	˙	6 <
-
˙	˙	= >
$num
˙	˙	? @
)
˙	˙	@ A
;
˙	˙	A B
string
¸	¸	 
dataPath
¸	¸	 
=
¸	¸	 
Application
¸	¸	 )
.
¸	¸	) *
dataPath
¸	¸	* 2
;
¸	¸	2 3
if
˛	˛	 
(
˛	˛	 
filePath
˛	˛	 
.
˛	˛	 
IndexOf
˛	˛	  
(
˛	˛	  !
dataPath
˛	˛	! )
,
˛	˛	) *
System
˛	˛	+ 1
.
˛	˛	1 2
StringComparison
˛	˛	2 B
.
˛	˛	B C(
InvariantCultureIgnoreCase
˛	˛	C ]
)
˛	˛	] ^
==
˛	˛	_ a
-
˛	˛	b c
$num
˛	˛	c d
)
˛	˛	d e
{
ˇ	ˇ	 
Debug
Ä
Ä
 
.
Ä
Ä
 
LogError
Ä
Ä
 
(
Ä
Ä
 
$strÄ
Ä
 ¶
+Ä
Ä
ß ®
dataPathÄ
Ä
© ±
+Ä
Ä
≤ ≥
$strÄ
Ä
¥ ∏
)Ä
Ä
∏ π
;Ä
Ä
π ∫
return
Å
Å
 
;
Å
Å
 
}
Ç
Ç
 
string
Ñ
Ñ
 
relativeAssetPath
Ñ
Ñ
 $
=
Ñ
Ñ
% &
filePath
Ñ
Ñ
' /
.
Ñ
Ñ
/ 0
	Substring
Ñ
Ñ
0 9
(
Ñ
Ñ
9 :
dataPath
Ñ
Ñ
: B
.
Ñ
Ñ
B C
Length
Ñ
Ñ
C I
-
Ñ
Ñ
J K
$num
Ñ
Ñ
L M
)
Ñ
Ñ
M N
;
Ñ
Ñ
N O
string
Ö
Ö
 
tex_DirName
Ö
Ö
 
=
Ö
Ö
  
Path
Ö
Ö
! %
.
Ö
Ö
% &
GetDirectoryName
Ö
Ö
& 6
(
Ö
Ö
6 7
relativeAssetPath
Ö
Ö
7 H
)
Ö
Ö
H I
;
Ö
Ö
I J
string
Ü
Ü
 
tex_FileName
Ü
Ü
 
=
Ü
Ü
  !
Path
Ü
Ü
" &
.
Ü
Ü
& ')
GetFileNameWithoutExtension
Ü
Ü
' B
(
Ü
Ü
B C
relativeAssetPath
Ü
Ü
C T
)
Ü
Ü
T U
;
Ü
Ü
U V
string
á
á
 
tex_Path_NoExt
á
á
 !
=
á
á
" #
tex_DirName
á
á
$ /
+
á
á
0 1
$str
á
á
2 5
+
á
á
6 7
tex_FileName
á
á
8 D
;
á
á
D E
TMP_FontAsset
ä
ä
 
	fontAsset
ä
ä
 #
=
ä
ä
$ %
AssetDatabase
ä
ä
& 3
.
ä
ä
3 4
LoadAssetAtPath
ä
ä
4 C
(
ä
ä
C D
tex_Path_NoExt
ä
ä
D R
+
ä
ä
S T
$str
ä
ä
U ]
,
ä
ä
] ^
typeof
ä
ä
_ e
(
ä
ä
e f
TMP_FontAsset
ä
ä
f s
)
ä
ä
s t
)
ä
ä
t u
as
ä
ä
v x
TMP_FontAssetä
ä
y Ü
;ä
ä
Ü á
if
ã
ã
 
(
ã
ã
 
	fontAsset
ã
ã
 
==
ã
ã
 
null
ã
ã
 !
)
ã
ã
! "
{
å
å
 
	fontAsset
é
é
 
=
é
é
 
ScriptableObject
é
é
 ,
.
é
é
, -
CreateInstance
é
é
- ;
<
é
é
; <
TMP_FontAsset
é
é
< I
>
é
é
I J
(
é
é
J K
)
é
é
K L
;
é
é
L M
AssetDatabase
è
è
 
.
è
è
 
CreateAsset
è
è
 )
(
è
è
) *
	fontAsset
è
è
* 3
,
è
è
3 4
tex_Path_NoExt
è
è
5 C
+
è
è
D E
$str
è
è
F N
)
è
è
N O
;
è
è
O P
	fontAsset
í
í
 
.
í
í
 
version
í
í
 !
=
í
í
" #
$str
í
í
$ +
;
í
í
+ ,
	fontAsset
ï
ï
 
.
ï
ï
 
atlasRenderMode
ï
ï
 )
=
ï
ï
* +
m_GlyphRenderMode
ï
ï
, =
;
ï
ï
= >
	fontAsset
ò
ò
 
.
ò
ò
 (
m_SourceFontFile_EditorRef
ò
ò
 4
=
ò
ò
5 6
(
ò
ò
7 8
Font
ò
ò
8 <
)
ò
ò
< =
m_SourceFontFile
ò
ò
= M
;
ò
ò
M N
	fontAsset
ô
ô
 
.
ô
ô
 "
m_SourceFontFileGUID
ô
ô
 .
=
ô
ô
/ 0
AssetDatabase
ô
ô
1 >
.
ô
ô
> ?
AssetPathToGUID
ô
ô
? N
(
ô
ô
N O
AssetDatabase
ô
ô
O \
.
ô
ô
\ ]
GetAssetPath
ô
ô
] i
(
ô
ô
i j
m_SourceFontFile
ô
ô
j z
)
ô
ô
z {
)
ô
ô
{ |
;
ô
ô
| }
	fontAsset
ú
ú
 
.
ú
ú
 
faceInfo
ú
ú
 "
=
ú
ú
# $

m_FaceInfo
ú
ú
% /
;
ú
ú
/ 0
	fontAsset
ü
ü
 
.
ü
ü
 

glyphTable
ü
ü
 $
=
ü
ü
% &
m_FontGlyphTable
ü
ü
' 7
;
ü
ü
7 8
	fontAsset
¢
¢
 
.
¢
¢
 
characterTable
¢
¢
 (
=
¢
¢
) *"
m_FontCharacterTable
¢
¢
+ ?
;
¢
¢
? @
	fontAsset
•
•
 
.
•
•
 
SortAllTables
•
•
 '
(
•
•
' (
)
•
•
( )
;
•
•
) *
if
®
®
 
(
®
®
 #
m_IncludeFontFeatures
®
®
 )
)
®
®
) *
	fontAsset
©
©
 
.
©
©
 
fontFeatureTable
©
©
 .
=
©
©
/ 0
GetKerningTable
©
©
1 @
(
©
©
@ A
)
©
©
A B
;
©
©
B C
	fontAsset
≠
≠
 
.
≠
≠
 
atlasTextures
≠
≠
 '
=
≠
≠
( )
new
≠
≠
* -
	Texture2D
≠
≠
. 7
[
≠
≠
7 8
]
≠
≠
8 9
{
≠
≠
: ; 
m_FontAtlasTexture
≠
≠
< N
}
≠
≠
O P
;
≠
≠
P Q 
m_FontAtlasTexture
Æ
Æ
 "
.
Æ
Æ
" #
name
Æ
Æ
# '
=
Æ
Æ
( )
tex_FileName
Æ
Æ
* 6
+
Æ
Æ
7 8
$str
Æ
Æ
9 A
;
Æ
Æ
A B
	fontAsset
Ø
Ø
 
.
Ø
Ø
 

atlasWidth
Ø
Ø
 $
=
Ø
Ø
% &
m_AtlasWidth
Ø
Ø
' 3
;
Ø
Ø
3 4
	fontAsset
∞
∞
 
.
∞
∞
 
atlasHeight
∞
∞
 %
=
∞
∞
& '
m_AtlasHeight
∞
∞
( 5
;
∞
∞
5 6
	fontAsset
±
±
 
.
±
±
 
atlasPadding
±
±
 &
=
±
±
' (
	m_Padding
±
±
) 2
;
±
±
2 3
AssetDatabase
≥
≥
 
.
≥
≥
 
AddObjectToAsset
≥
≥
 .
(
≥
≥
. / 
m_FontAtlasTexture
≥
≥
/ A
,
≥
≥
A B
	fontAsset
≥
≥
C L
)
≥
≥
L M
;
≥
≥
M N
Shader
∂
∂
 
default_Shader
∂
∂
 %
=
∂
∂
& '
Shader
∂
∂
( .
.
∂
∂
. /
Find
∂
∂
/ 3
(
∂
∂
3 4
$str
∂
∂
4 H
)
∂
∂
H I
;
∂
∂
I J
Material
∑
∑
 
tmp_material
∑
∑
 %
=
∑
∑
& '
new
∑
∑
( +
Material
∑
∑
, 4
(
∑
∑
4 5
default_Shader
∑
∑
5 C
)
∑
∑
C D
;
∑
∑
D E
tmp_material
∏
∏
 
.
∏
∏
 
name
∏
∏
 !
=
∏
∏
" #
tex_FileName
∏
∏
$ 0
+
∏
∏
1 2
$str
∏
∏
3 >
;
∏
∏
> ?
tmp_material
π
π
 
.
π
π
 

SetTexture
π
π
 '
(
π
π
' (
ShaderUtilities
π
π
( 7
.
π
π
7 8

ID_MainTex
π
π
8 B
,
π
π
B C 
m_FontAtlasTexture
π
π
D V
)
π
π
V W
;
π
π
W X
	fontAsset
∫
∫
 
.
∫
∫
 
material
∫
∫
 "
=
∫
∫
# $
tmp_material
∫
∫
% 1
;
∫
∫
1 2
AssetDatabase
º
º
 
.
º
º
 
AddObjectToAsset
º
º
 .
(
º
º
. /
tmp_material
º
º
/ ;
,
º
º
; <
	fontAsset
º
º
= F
)
º
º
F G
;
º
º
G H
}
æ
æ
 
else
ø
ø
 
{
¿
¿
 
Material
¬
¬
 
[
¬
¬
 
]
¬
¬
 !
material_references
¬
¬
 .
=
¬
¬
/ 0
TMP_EditorUtility
¬
¬
1 B
.
¬
¬
B C$
FindMaterialReferences
¬
¬
C Y
(
¬
¬
Y Z
	fontAsset
¬
¬
Z c
)
¬
¬
c d
;
¬
¬
d e
	fontAsset
≈
≈
 
.
≈
≈
 
version
≈
≈
 !
=
≈
≈
" #
$str
≈
≈
$ +
;
≈
≈
+ ,
if
»
»
 
(
»
»
 
	fontAsset
»
»
 
.
»
»
 
m_glyphInfoList
»
»
 -
!=
»
»
. 0
null
»
»
1 5
&&
»
»
6 8
	fontAsset
»
»
9 B
.
»
»
B C
m_glyphInfoList
»
»
C R
.
»
»
R S
Count
»
»
S X
>
»
»
Y Z
$num
»
»
[ \
)
»
»
\ ]
	fontAsset
…
…
 
.
…
…
 
m_glyphInfoList
…
…
 -
=
…
…
. /
null
…
…
0 4
;
…
…
4 5
	fontAsset
Ã
Ã
 
.
Ã
Ã
 
atlasRenderMode
Ã
Ã
 )
=
Ã
Ã
* +
m_GlyphRenderMode
Ã
Ã
, =
;
Ã
Ã
= >
	fontAsset
œ
œ
 
.
œ
œ
 
faceInfo
œ
œ
 "
=
œ
œ
# $

m_FaceInfo
œ
œ
% /
;
œ
œ
/ 0
	fontAsset
“
“
 
.
“
“
 

glyphTable
“
“
 $
=
“
“
% &
m_FontGlyphTable
“
“
' 7
;
“
“
7 8
	fontAsset
’
’
 
.
’
’
 
characterTable
’
’
 (
=
’
’
) *"
m_FontCharacterTable
’
’
+ ?
;
’
’
? @
	fontAsset
ÿ
ÿ
 
.
ÿ
ÿ
 
SortAllTables
ÿ
ÿ
 '
(
ÿ
ÿ
' (
)
ÿ
ÿ
( )
;
ÿ
ÿ
) *
if
€
€
 
(
€
€
 #
m_IncludeFontFeatures
€
€
 )
)
€
€
) *
	fontAsset
‹
‹
 
.
‹
‹
 
fontFeatureTable
‹
‹
 .
=
‹
‹
/ 0
GetKerningTable
‹
‹
1 @
(
‹
‹
@ A
)
‹
‹
A B
;
‹
‹
B C
if
ﬂ
ﬂ
 
(
ﬂ
ﬂ
 
	fontAsset
ﬂ
ﬂ
 
.
ﬂ
ﬂ
 
atlasTextures
ﬂ
ﬂ
 +
!=
ﬂ
ﬂ
, .
null
ﬂ
ﬂ
/ 3
&&
ﬂ
ﬂ
4 6
	fontAsset
ﬂ
ﬂ
7 @
.
ﬂ
ﬂ
@ A
atlasTextures
ﬂ
ﬂ
A N
.
ﬂ
ﬂ
N O
Length
ﬂ
ﬂ
O U
>
ﬂ
ﬂ
V W
$num
ﬂ
ﬂ
X Y
)
ﬂ
ﬂ
Y Z
{
‡
‡
 
for
·
·
 
(
·
·
 
int
·
·
 
i
·
·
 
=
·
·
  
$num
·
·
! "
;
·
·
" #
i
·
·
$ %
<
·
·
& '
	fontAsset
·
·
( 1
.
·
·
1 2
atlasTextures
·
·
2 ?
.
·
·
? @
Length
·
·
@ F
;
·
·
F G
i
·
·
H I
++
·
·
I K
)
·
·
K L
DestroyImmediate
‚
‚
 (
(
‚
‚
( )
	fontAsset
‚
‚
) 2
.
‚
‚
2 3
atlasTextures
‚
‚
3 @
[
‚
‚
@ A
i
‚
‚
A B
]
‚
‚
B C
,
‚
‚
C D
true
‚
‚
E I
)
‚
‚
I J
;
‚
‚
J K
}
„
„
 
	fontAsset
Â
Â
 
.
Â
Â
 !
m_AtlasTextureIndex
Â
Â
 -
=
Â
Â
. /
$num
Â
Â
0 1
;
Â
Â
1 2
	fontAsset
Ê
Ê
 
.
Ê
Ê
 

atlasWidth
Ê
Ê
 $
=
Ê
Ê
% &
m_AtlasWidth
Ê
Ê
' 3
;
Ê
Ê
3 4
	fontAsset
Á
Á
 
.
Á
Á
 
atlasHeight
Á
Á
 %
=
Á
Á
& '
m_AtlasHeight
Á
Á
( 5
;
Á
Á
5 6
	fontAsset
Ë
Ë
 
.
Ë
Ë
 
atlasPadding
Ë
Ë
 &
=
Ë
Ë
' (
	m_Padding
Ë
Ë
) 2
;
Ë
Ë
2 3
	Texture2D
Î
Î
 
tex
Î
Î
 
=
Î
Î
 
	fontAsset
Î
Î
  )
.
Î
Î
) *
atlasTextures
Î
Î
* 7
[
Î
Î
7 8
$num
Î
Î
8 9
]
Î
Î
9 :
;
Î
Î
: ;
tex
Ï
Ï
 
.
Ï
Ï
 
name
Ï
Ï
 
=
Ï
Ï
 
tex_FileName
Ï
Ï
 '
+
Ï
Ï
( )
$str
Ï
Ï
* 2
;
Ï
Ï
2 3
bool
Ô
Ô
 
isReadableState
Ô
Ô
 $
=
Ô
Ô
% &
tex
Ô
Ô
' *
.
Ô
Ô
* +

isReadable
Ô
Ô
+ 5
;
Ô
Ô
5 6
if


 
(


 
isReadableState


 #
==


$ &
false


' ,
)


, -'
FontEngineEditorUtilities
Ò
Ò
 -
.
Ò
Ò
- .'
SetAtlasTextureIsReadable
Ò
Ò
. G
(
Ò
Ò
G H
tex
Ò
Ò
H K
,
Ò
Ò
K L
true
Ò
Ò
M Q
)
Ò
Ò
Q R
;
Ò
Ò
R S
if
Û
Û
 
(
Û
Û
 
tex
Û
Û
 
.
Û
Û
 
width
Û
Û
 
!=
Û
Û
  
m_AtlasWidth
Û
Û
! -
||
Û
Û
. 0
tex
Û
Û
1 4
.
Û
Û
4 5
height
Û
Û
5 ;
!=
Û
Û
< >
m_AtlasHeight
Û
Û
? L
)
Û
Û
L M
{
Ù
Ù
 
tex
ı
ı
 
.
ı
ı
 
Resize
ı
ı
 
(
ı
ı
 
m_AtlasWidth
ı
ı
 +
,
ı
ı
+ ,
m_AtlasHeight
ı
ı
- :
)
ı
ı
: ;
;
ı
ı
; <
tex
ˆ
ˆ
 
.
ˆ
ˆ
 
Apply
ˆ
ˆ
 
(
ˆ
ˆ
 
)
ˆ
ˆ
 
;
ˆ
ˆ
  
}
˜
˜
 
Graphics
˙
˙
 
.
˙
˙
 
CopyTexture
˙
˙
 $
(
˙
˙
$ % 
m_FontAtlasTexture
˙
˙
% 7
,
˙
˙
7 8
tex
˙
˙
9 <
)
˙
˙
< =
;
˙
˙
= >
tex
˝
˝
 
.
˝
˝
 
Apply
˝
˝
 
(
˝
˝
 
false
˝
˝
 
,
˝
˝
  
!
˝
˝
! "
isReadableState
˝
˝
" 1
)
˝
˝
1 2
;
˝
˝
2 3 
m_FontAtlasTexture
ÄÄ "
.
ÄÄ" #
	hideFlags
ÄÄ# ,
=
ÄÄ- .
	HideFlags
ÄÄ/ 8
.
ÄÄ8 9
None
ÄÄ9 =
;
ÄÄ= >
	fontAsset
ÅÅ 
.
ÅÅ 
material
ÅÅ "
.
ÅÅ" #
	hideFlags
ÅÅ# ,
=
ÅÅ- .
	HideFlags
ÅÅ/ 8
.
ÅÅ8 9
None
ÅÅ9 =
;
ÅÅ= >
}
èè 
	fontAsset
íí 
.
íí 
freeGlyphRects
íí $
=
íí% &
m_FreeGlyphRects
íí' 7
;
íí7 8
	fontAsset
ìì 
.
ìì 
usedGlyphRects
ìì $
=
ìì% &
m_UsedGlyphRects
ìì' 7
;
ìì7 8!
m_SelectedFontAsset
ññ 
=
ññ  !
	fontAsset
ññ" +
;
ññ+ ,
m_LegacyFontAsset
óó 
=
óó 
null
óó  $
;
óó$ %
	fontAsset
òò 
.
òò 
creationSettings
òò &
=
òò' (&
SaveFontCreationSettings
òò) A
(
òòA B
)
òòB C
;
òòC D
AssetDatabase
öö 
.
öö 

SaveAssets
öö $
(
öö$ %
)
öö% &
;
öö& '
AssetDatabase
úú 
.
úú 
ImportAsset
úú %
(
úú% &
AssetDatabase
úú& 3
.
úú3 4
GetAssetPath
úú4 @
(
úú@ A
	fontAsset
úúA J
)
úúJ K
)
úúK L
;
úúL M
	fontAsset
üü 
.
üü %
ReadFontAssetDefinition
üü -
(
üü- .
)
üü. /
;
üü/ 0
AssetDatabase
°° 
.
°° 
Refresh
°° !
(
°°! "
)
°°" #
;
°°# $ 
m_FontAtlasTexture
££ 
=
££  
null
££! %
;
££% & 
TMPro_EventManager
¶¶ 
.
¶¶ &
ON_FONT_PROPERTY_CHANGED
¶¶ 7
(
¶¶7 8
true
¶¶8 <
,
¶¶< =
	fontAsset
¶¶> G
)
¶¶G H
;
¶¶H I
}
ßß 	
void
™™  
Save_SDF_FontAsset
™™ 
(
™™  
string
™™  &
filePath
™™' /
)
™™/ 0
{
´´ 	
filePath
¨¨ 
=
¨¨ 
filePath
¨¨ 
.
¨¨  
	Substring
¨¨  )
(
¨¨) *
$num
¨¨* +
,
¨¨+ ,
filePath
¨¨- 5
.
¨¨5 6
Length
¨¨6 <
-
¨¨= >
$num
¨¨? @
)
¨¨@ A
;
¨¨A B
string
ÆÆ 
dataPath
ÆÆ 
=
ÆÆ 
Application
ÆÆ )
.
ÆÆ) *
dataPath
ÆÆ* 2
;
ÆÆ2 3
if
∞∞ 
(
∞∞ 
filePath
∞∞ 
.
∞∞ 
IndexOf
∞∞  
(
∞∞  !
dataPath
∞∞! )
,
∞∞) *
System
∞∞+ 1
.
∞∞1 2
StringComparison
∞∞2 B
.
∞∞B C(
InvariantCultureIgnoreCase
∞∞C ]
)
∞∞] ^
==
∞∞_ a
-
∞∞b c
$num
∞∞c d
)
∞∞d e
{
±± 
Debug
≤≤ 
.
≤≤ 
LogError
≤≤ 
(
≤≤ 
$str≤≤ ¶
+≤≤ß ®
dataPath≤≤© ±
+≤≤≤ ≥
$str≤≤¥ ∏
)≤≤∏ π
;≤≤π ∫
return
≥≥ 
;
≥≥ 
}
¥¥ 
string
∂∂ 
relativeAssetPath
∂∂ $
=
∂∂% &
filePath
∂∂' /
.
∂∂/ 0
	Substring
∂∂0 9
(
∂∂9 :
dataPath
∂∂: B
.
∂∂B C
Length
∂∂C I
-
∂∂J K
$num
∂∂L M
)
∂∂M N
;
∂∂N O
string
∑∑ 
tex_DirName
∑∑ 
=
∑∑  
Path
∑∑! %
.
∑∑% &
GetDirectoryName
∑∑& 6
(
∑∑6 7
relativeAssetPath
∑∑7 H
)
∑∑H I
;
∑∑I J
string
∏∏ 
tex_FileName
∏∏ 
=
∏∏  !
Path
∏∏" &
.
∏∏& ')
GetFileNameWithoutExtension
∏∏' B
(
∏∏B C
relativeAssetPath
∏∏C T
)
∏∏T U
;
∏∏U V
string
ππ 
tex_Path_NoExt
ππ !
=
ππ" #
tex_DirName
ππ$ /
+
ππ0 1
$str
ππ2 5
+
ππ6 7
tex_FileName
ππ8 D
;
ππD E
TMP_FontAsset
ΩΩ 
	fontAsset
ΩΩ #
=
ΩΩ$ %
AssetDatabase
ΩΩ& 3
.
ΩΩ3 4
LoadAssetAtPath
ΩΩ4 C
<
ΩΩC D
TMP_FontAsset
ΩΩD Q
>
ΩΩQ R
(
ΩΩR S
tex_Path_NoExt
ΩΩS a
+
ΩΩb c
$str
ΩΩd l
)
ΩΩl m
;
ΩΩm n
if
ææ 
(
ææ 
	fontAsset
ææ 
==
ææ 
null
ææ !
)
ææ! "
{
øø 
	fontAsset
¡¡ 
=
¡¡ 
ScriptableObject
¡¡ ,
.
¡¡, -
CreateInstance
¡¡- ;
<
¡¡; <
TMP_FontAsset
¡¡< I
>
¡¡I J
(
¡¡J K
)
¡¡K L
;
¡¡L M
AssetDatabase
¬¬ 
.
¬¬ 
CreateAsset
¬¬ )
(
¬¬) *
	fontAsset
¬¬* 3
,
¬¬3 4
tex_Path_NoExt
¬¬5 C
+
¬¬D E
$str
¬¬F N
)
¬¬N O
;
¬¬O P
	fontAsset
≈≈ 
.
≈≈ 
version
≈≈ !
=
≈≈" #
$str
≈≈$ +
;
≈≈+ ,
	fontAsset
»» 
.
»» (
m_SourceFontFile_EditorRef
»» 4
=
»»5 6
(
»»7 8
Font
»»8 <
)
»»< =
m_SourceFontFile
»»= M
;
»»M N
	fontAsset
…… 
.
…… "
m_SourceFontFileGUID
…… .
=
……/ 0
AssetDatabase
……1 >
.
……> ?
AssetPathToGUID
……? N
(
……N O
AssetDatabase
……O \
.
……\ ]
GetAssetPath
……] i
(
……i j
m_SourceFontFile
……j z
)
……z {
)
……{ |
;
……| }
	fontAsset
ÃÃ 
.
ÃÃ 
atlasRenderMode
ÃÃ )
=
ÃÃ* +
m_GlyphRenderMode
ÃÃ, =
;
ÃÃ= >
	fontAsset
œœ 
.
œœ 
faceInfo
œœ "
=
œœ# $

m_FaceInfo
œœ% /
;
œœ/ 0
	fontAsset
““ 
.
““ 

glyphTable
““ $
=
““% &
m_FontGlyphTable
““' 7
;
““7 8
	fontAsset
’’ 
.
’’ 
characterTable
’’ (
=
’’) *"
m_FontCharacterTable
’’+ ?
;
’’? @
	fontAsset
ÿÿ 
.
ÿÿ 
SortAllTables
ÿÿ '
(
ÿÿ' (
)
ÿÿ( )
;
ÿÿ) *
if
€€ 
(
€€ #
m_IncludeFontFeatures
€€ )
)
€€) *
	fontAsset
‹‹ 
.
‹‹ 
fontFeatureTable
‹‹ .
=
‹‹/ 0
GetKerningTable
‹‹1 @
(
‹‹@ A
)
‹‹A B
;
‹‹B C
	fontAsset
ﬂﬂ 
.
ﬂﬂ 
atlasTextures
ﬂﬂ '
=
ﬂﬂ( )
new
ﬂﬂ* -
	Texture2D
ﬂﬂ. 7
[
ﬂﬂ7 8
]
ﬂﬂ8 9
{
ﬂﬂ: ; 
m_FontAtlasTexture
ﬂﬂ< N
}
ﬂﬂO P
;
ﬂﬂP Q 
m_FontAtlasTexture
‡‡ "
.
‡‡" #
name
‡‡# '
=
‡‡( )
tex_FileName
‡‡* 6
+
‡‡7 8
$str
‡‡9 A
;
‡‡A B
	fontAsset
·· 
.
·· 

atlasWidth
·· $
=
··% &
m_AtlasWidth
··' 3
;
··3 4
	fontAsset
‚‚ 
.
‚‚ 
atlasHeight
‚‚ %
=
‚‚& '
m_AtlasHeight
‚‚( 5
;
‚‚5 6
	fontAsset
„„ 
.
„„ 
atlasPadding
„„ &
=
„„' (
	m_Padding
„„) 2
;
„„2 3
AssetDatabase
ÂÂ 
.
ÂÂ 
AddObjectToAsset
ÂÂ .
(
ÂÂ. / 
m_FontAtlasTexture
ÂÂ/ A
,
ÂÂA B
	fontAsset
ÂÂC L
)
ÂÂL M
;
ÂÂM N
Shader
ËË 
default_Shader
ËË %
=
ËË& '
Shader
ËË( .
.
ËË. /
Find
ËË/ 3
(
ËË3 4
$str
ËË4 P
)
ËËP Q
;
ËËQ R
Material
ÈÈ 
tmp_material
ÈÈ %
=
ÈÈ& '
new
ÈÈ( +
Material
ÈÈ, 4
(
ÈÈ4 5
default_Shader
ÈÈ5 C
)
ÈÈC D
;
ÈÈD E
tmp_material
ÎÎ 
.
ÎÎ 
name
ÎÎ !
=
ÎÎ" #
tex_FileName
ÎÎ$ 0
+
ÎÎ1 2
$str
ÎÎ3 >
;
ÎÎ> ?
tmp_material
ÏÏ 
.
ÏÏ 

SetTexture
ÏÏ '
(
ÏÏ' (
ShaderUtilities
ÏÏ( 7
.
ÏÏ7 8

ID_MainTex
ÏÏ8 B
,
ÏÏB C 
m_FontAtlasTexture
ÏÏD V
)
ÏÏV W
;
ÏÏW X
tmp_material
ÌÌ 
.
ÌÌ 
SetFloat
ÌÌ %
(
ÌÌ% &
ShaderUtilities
ÌÌ& 5
.
ÌÌ5 6
ID_TextureWidth
ÌÌ6 E
,
ÌÌE F 
m_FontAtlasTexture
ÌÌG Y
.
ÌÌY Z
width
ÌÌZ _
)
ÌÌ_ `
;
ÌÌ` a
tmp_material
ÓÓ 
.
ÓÓ 
SetFloat
ÓÓ %
(
ÓÓ% &
ShaderUtilities
ÓÓ& 5
.
ÓÓ5 6
ID_TextureHeight
ÓÓ6 F
,
ÓÓF G 
m_FontAtlasTexture
ÓÓH Z
.
ÓÓZ [
height
ÓÓ[ a
)
ÓÓa b
;
ÓÓb c
int
 
spread
 
=
 
	m_Padding
 &
+
' (
$num
) *
;
* +
tmp_material
ÒÒ 
.
ÒÒ 
SetFloat
ÒÒ %
(
ÒÒ% &
ShaderUtilities
ÒÒ& 5
.
ÒÒ5 6
ID_GradientScale
ÒÒ6 F
,
ÒÒF G
spread
ÒÒH N
)
ÒÒN O
;
ÒÒO P
tmp_material
ÛÛ 
.
ÛÛ 
SetFloat
ÛÛ %
(
ÛÛ% &
ShaderUtilities
ÛÛ& 5
.
ÛÛ5 6
ID_WeightNormal
ÛÛ6 E
,
ÛÛE F
	fontAsset
ÛÛG P
.
ÛÛP Q
normalStyle
ÛÛQ \
)
ÛÛ\ ]
;
ÛÛ] ^
tmp_material
ÙÙ 
.
ÙÙ 
SetFloat
ÙÙ %
(
ÙÙ% &
ShaderUtilities
ÙÙ& 5
.
ÙÙ5 6
ID_WeightBold
ÙÙ6 C
,
ÙÙC D
	fontAsset
ÙÙE N
.
ÙÙN O
	boldStyle
ÙÙO X
)
ÙÙX Y
;
ÙÙY Z
	fontAsset
ˆˆ 
.
ˆˆ 
material
ˆˆ "
=
ˆˆ# $
tmp_material
ˆˆ% 1
;
ˆˆ1 2
AssetDatabase
¯¯ 
.
¯¯ 
AddObjectToAsset
¯¯ .
(
¯¯. /
tmp_material
¯¯/ ;
,
¯¯; <
	fontAsset
¯¯= F
)
¯¯F G
;
¯¯G H
}
˙˙ 
else
˚˚ 
{
¸¸ 
Material
˛˛ 
[
˛˛ 
]
˛˛ !
material_references
˛˛ .
=
˛˛/ 0
TMP_EditorUtility
˛˛1 B
.
˛˛B C$
FindMaterialReferences
˛˛C Y
(
˛˛Y Z
	fontAsset
˛˛Z c
)
˛˛c d
;
˛˛d e
	fontAsset
ÅÅ 
.
ÅÅ 
version
ÅÅ !
=
ÅÅ" #
$str
ÅÅ$ +
;
ÅÅ+ ,
if
ÑÑ 
(
ÑÑ 
	fontAsset
ÑÑ 
.
ÑÑ 
m_glyphInfoList
ÑÑ -
!=
ÑÑ. 0
null
ÑÑ1 5
&&
ÑÑ6 8
	fontAsset
ÑÑ9 B
.
ÑÑB C
m_glyphInfoList
ÑÑC R
.
ÑÑR S
Count
ÑÑS X
>
ÑÑY Z
$num
ÑÑ[ \
)
ÑÑ\ ]
	fontAsset
ÖÖ 
.
ÖÖ 
m_glyphInfoList
ÖÖ -
=
ÖÖ. /
null
ÖÖ0 4
;
ÖÖ4 5
	fontAsset
àà 
.
àà 
atlasRenderMode
àà )
=
àà* +
m_GlyphRenderMode
àà, =
;
àà= >
	fontAsset
ãã 
.
ãã 
faceInfo
ãã "
=
ãã# $

m_FaceInfo
ãã% /
;
ãã/ 0
	fontAsset
éé 
.
éé 

glyphTable
éé $
=
éé% &
m_FontGlyphTable
éé' 7
;
éé7 8
	fontAsset
ëë 
.
ëë 
characterTable
ëë (
=
ëë) *"
m_FontCharacterTable
ëë+ ?
;
ëë? @
	fontAsset
îî 
.
îî 
SortAllTables
îî '
(
îî' (
)
îî( )
;
îî) *
if
òò 
(
òò #
m_IncludeFontFeatures
òò )
)
òò) *
	fontAsset
ôô 
.
ôô 
fontFeatureTable
ôô .
=
ôô/ 0
GetKerningTable
ôô1 @
(
ôô@ A
)
ôôA B
;
ôôB C
if
úú 
(
úú 
	fontAsset
úú 
.
úú 
atlasTextures
úú +
!=
úú, .
null
úú/ 3
&&
úú4 6
	fontAsset
úú7 @
.
úú@ A
atlasTextures
úúA N
.
úúN O
Length
úúO U
>
úúV W
$num
úúX Y
)
úúY Z
{
ùù 
for
ûû 
(
ûû 
int
ûû 
i
ûû 
=
ûû  
$num
ûû! "
;
ûû" #
i
ûû$ %
<
ûû& '
	fontAsset
ûû( 1
.
ûû1 2
atlasTextures
ûû2 ?
.
ûû? @
Length
ûû@ F
;
ûûF G
i
ûûH I
++
ûûI K
)
ûûK L
DestroyImmediate
üü (
(
üü( )
	fontAsset
üü) 2
.
üü2 3
atlasTextures
üü3 @
[
üü@ A
i
üüA B
]
üüB C
,
üüC D
true
üüE I
)
üüI J
;
üüJ K
}
†† 
	fontAsset
¢¢ 
.
¢¢ !
m_AtlasTextureIndex
¢¢ -
=
¢¢. /
$num
¢¢0 1
;
¢¢1 2
	fontAsset
££ 
.
££ 

atlasWidth
££ $
=
££% &
m_AtlasWidth
££' 3
;
££3 4
	fontAsset
§§ 
.
§§ 
atlasHeight
§§ %
=
§§& '
m_AtlasHeight
§§( 5
;
§§5 6
	fontAsset
•• 
.
•• 
atlasPadding
•• &
=
••' (
	m_Padding
••) 2
;
••2 3
	Texture2D
®® 
tex
®® 
=
®® 
	fontAsset
®®  )
.
®®) *
atlasTextures
®®* 7
[
®®7 8
$num
®®8 9
]
®®9 :
;
®®: ;
tex
©© 
.
©© 
name
©© 
=
©© 
tex_FileName
©© '
+
©©( )
$str
©©* 2
;
©©2 3
bool
¨¨ 
isReadableState
¨¨ $
=
¨¨% &
tex
¨¨' *
.
¨¨* +

isReadable
¨¨+ 5
;
¨¨5 6
if
≠≠ 
(
≠≠ 
isReadableState
≠≠ #
==
≠≠$ &
false
≠≠' ,
)
≠≠, -'
FontEngineEditorUtilities
ÆÆ -
.
ÆÆ- .'
SetAtlasTextureIsReadable
ÆÆ. G
(
ÆÆG H
tex
ÆÆH K
,
ÆÆK L
true
ÆÆM Q
)
ÆÆQ R
;
ÆÆR S
if
∞∞ 
(
∞∞ 
tex
∞∞ 
.
∞∞ 
width
∞∞ 
!=
∞∞  
m_AtlasWidth
∞∞! -
||
∞∞. 0
tex
∞∞1 4
.
∞∞4 5
height
∞∞5 ;
!=
∞∞< >
m_AtlasHeight
∞∞? L
)
∞∞L M
{
±± 
tex
≤≤ 
.
≤≤ 
Resize
≤≤ 
(
≤≤ 
m_AtlasWidth
≤≤ +
,
≤≤+ ,
m_AtlasHeight
≤≤- :
)
≤≤: ;
;
≤≤; <
tex
≥≥ 
.
≥≥ 
Apply
≥≥ 
(
≥≥ 
)
≥≥ 
;
≥≥  
}
¥¥ 
Graphics
∑∑ 
.
∑∑ 
CopyTexture
∑∑ $
(
∑∑$ % 
m_FontAtlasTexture
∑∑% 7
,
∑∑7 8
tex
∑∑9 <
)
∑∑< =
;
∑∑= >
tex
∫∫ 
.
∫∫ 
Apply
∫∫ 
(
∫∫ 
false
∫∫ 
,
∫∫  
!
∫∫! "
isReadableState
∫∫" 1
)
∫∫1 2
;
∫∫2 3 
m_FontAtlasTexture
ΩΩ "
.
ΩΩ" #
	hideFlags
ΩΩ# ,
=
ΩΩ- .
	HideFlags
ΩΩ/ 8
.
ΩΩ8 9
None
ΩΩ9 =
;
ΩΩ= >
	fontAsset
ææ 
.
ææ 
material
ææ "
.
ææ" #
	hideFlags
ææ# ,
=
ææ- .
	HideFlags
ææ/ 8
.
ææ8 9
None
ææ9 =
;
ææ= >
for
¡¡ 
(
¡¡ 
int
¡¡ 
i
¡¡ 
=
¡¡ 
$num
¡¡ 
;
¡¡ 
i
¡¡  !
<
¡¡" #!
material_references
¡¡$ 7
.
¡¡7 8
Length
¡¡8 >
;
¡¡> ?
i
¡¡@ A
++
¡¡A C
)
¡¡C D
{
¬¬ !
material_references
√√ '
[
√√' (
i
√√( )
]
√√) *
.
√√* +
SetFloat
√√+ 3
(
√√3 4
ShaderUtilities
√√4 C
.
√√C D
ID_TextureWidth
√√D S
,
√√S T
tex
√√U X
.
√√X Y
width
√√Y ^
)
√√^ _
;
√√_ `!
material_references
ƒƒ '
[
ƒƒ' (
i
ƒƒ( )
]
ƒƒ) *
.
ƒƒ* +
SetFloat
ƒƒ+ 3
(
ƒƒ3 4
ShaderUtilities
ƒƒ4 C
.
ƒƒC D
ID_TextureHeight
ƒƒD T
,
ƒƒT U
tex
ƒƒV Y
.
ƒƒY Z
height
ƒƒZ `
)
ƒƒ` a
;
ƒƒa b
int
∆∆ 
spread
∆∆ 
=
∆∆  
	m_Padding
∆∆! *
+
∆∆+ ,
$num
∆∆- .
;
∆∆. /!
material_references
«« '
[
««' (
i
««( )
]
««) *
.
««* +
SetFloat
««+ 3
(
««3 4
ShaderUtilities
««4 C
.
««C D
ID_GradientScale
««D T
,
««T U
spread
««V \
)
««\ ]
;
««] ^!
material_references
…… '
[
……' (
i
……( )
]
……) *
.
……* +
SetFloat
……+ 3
(
……3 4
ShaderUtilities
……4 C
.
……C D
ID_WeightNormal
……D S
,
……S T
	fontAsset
……U ^
.
……^ _
normalStyle
……_ j
)
……j k
;
……k l!
material_references
   '
[
  ' (
i
  ( )
]
  ) *
.
  * +
SetFloat
  + 3
(
  3 4
ShaderUtilities
  4 C
.
  C D
ID_WeightBold
  D Q
,
  Q R
	fontAsset
  S \
.
  \ ]
	boldStyle
  ] f
)
  f g
;
  g h
}
ÀÀ 
}
ÃÃ 
	fontAsset
”” 
.
”” 
freeGlyphRects
”” $
=
””% &
m_FreeGlyphRects
””' 7
;
””7 8
	fontAsset
‘‘ 
.
‘‘ 
usedGlyphRects
‘‘ $
=
‘‘% &
m_UsedGlyphRects
‘‘' 7
;
‘‘7 8!
m_SelectedFontAsset
◊◊ 
=
◊◊  !
	fontAsset
◊◊" +
;
◊◊+ ,
m_LegacyFontAsset
ÿÿ 
=
ÿÿ 
null
ÿÿ  $
;
ÿÿ$ %
	fontAsset
ŸŸ 
.
ŸŸ 
creationSettings
ŸŸ &
=
ŸŸ' (&
SaveFontCreationSettings
ŸŸ) A
(
ŸŸA B
)
ŸŸB C
;
ŸŸC D
AssetDatabase
€€ 
.
€€ 

SaveAssets
€€ $
(
€€$ %
)
€€% &
;
€€& '
AssetDatabase
›› 
.
›› 
ImportAsset
›› %
(
››% &
AssetDatabase
››& 3
.
››3 4
GetAssetPath
››4 @
(
››@ A
	fontAsset
››A J
)
››J K
)
››K L
;
››L M
	fontAsset
ﬂﬂ 
.
ﬂﬂ %
ReadFontAssetDefinition
ﬂﬂ -
(
ﬂﬂ- .
)
ﬂﬂ. /
;
ﬂﬂ/ 0
AssetDatabase
·· 
.
·· 
Refresh
·· !
(
··! "
)
··" #
;
··# $ 
m_FontAtlasTexture
„„ 
=
„„  
null
„„! %
;
„„% & 
TMPro_EventManager
ÊÊ 
.
ÊÊ &
ON_FONT_PROPERTY_CHANGED
ÊÊ 7
(
ÊÊ7 8
true
ÊÊ8 <
,
ÊÊ< =
	fontAsset
ÊÊ> G
)
ÊÊG H
;
ÊÊH I
}
ÁÁ 	'
FontAssetCreationSettings
ÓÓ !&
SaveFontCreationSettings
ÓÓ" :
(
ÓÓ: ;
)
ÓÓ; <
{
ÔÔ 	'
FontAssetCreationSettings
 %
settings
& .
=
/ 0
new
1 4'
FontAssetCreationSettings
5 N
(
N O
)
O P
;
P Q
settings
ÛÛ 
.
ÛÛ  
sourceFontFileGUID
ÛÛ '
=
ÛÛ( )
AssetDatabase
ÛÛ* 7
.
ÛÛ7 8
AssetPathToGUID
ÛÛ8 G
(
ÛÛG H
AssetDatabase
ÛÛH U
.
ÛÛU V
GetAssetPath
ÛÛV b
(
ÛÛb c
m_SourceFontFile
ÛÛc s
)
ÛÛs t
)
ÛÛt u
;
ÛÛu v
settings
ÙÙ 
.
ÙÙ #
pointSizeSamplingMode
ÙÙ *
=
ÙÙ+ ,%
m_PointSizeSamplingMode
ÙÙ- D
;
ÙÙD E
settings
ıı 
.
ıı 
	pointSize
ıı 
=
ıı  
m_PointSize
ıı! ,
;
ıı, -
settings
ˆˆ 
.
ˆˆ 
padding
ˆˆ 
=
ˆˆ 
	m_Padding
ˆˆ (
;
ˆˆ( )
settings
˜˜ 
.
˜˜ 
packingMode
˜˜  
=
˜˜! "
(
˜˜# $
int
˜˜$ '
)
˜˜' (
m_PackingMode
˜˜( 5
;
˜˜5 6
settings
¯¯ 
.
¯¯ 

atlasWidth
¯¯ 
=
¯¯  !
m_AtlasWidth
¯¯" .
;
¯¯. /
settings
˘˘ 
.
˘˘ 
atlasHeight
˘˘  
=
˘˘! "
m_AtlasHeight
˘˘# 0
;
˘˘0 1
settings
˙˙ 
.
˙˙ '
characterSetSelectionMode
˙˙ .
=
˙˙/ 0)
m_CharacterSetSelectionMode
˙˙1 L
;
˙˙L M
settings
˚˚ 
.
˚˚ 
characterSequence
˚˚ &
=
˚˚' (!
m_CharacterSequence
˚˚) <
;
˚˚< =
settings
¸¸ 
.
¸¸ %
referencedFontAssetGUID
¸¸ ,
=
¸¸- .
AssetDatabase
¸¸/ <
.
¸¸< =
AssetPathToGUID
¸¸= L
(
¸¸L M
AssetDatabase
¸¸M Z
.
¸¸Z [
GetAssetPath
¸¸[ g
(
¸¸g h#
m_ReferencedFontAsset
¸¸h }
)
¸¸} ~
)
¸¸~ 
;¸¸ Ä
settings
˝˝ 
.
˝˝ %
referencedTextAssetGUID
˝˝ ,
=
˝˝- .
AssetDatabase
˝˝/ <
.
˝˝< =
AssetPathToGUID
˝˝= L
(
˝˝L M
AssetDatabase
˝˝M Z
.
˝˝Z [
GetAssetPath
˝˝[ g
(
˝˝g h"
m_CharactersFromFile
˝˝h |
)
˝˝| }
)
˝˝} ~
;
˝˝~ 
settings
ÄÄ 
.
ÄÄ 

renderMode
ÄÄ 
=
ÄÄ  !
(
ÄÄ" #
int
ÄÄ# &
)
ÄÄ& '
m_GlyphRenderMode
ÄÄ' 8
;
ÄÄ8 9
settings
ÅÅ 
.
ÅÅ !
includeFontFeatures
ÅÅ (
=
ÅÅ) *#
m_IncludeFontFeatures
ÅÅ+ @
;
ÅÅ@ A
return
ÉÉ 
settings
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
void
ãã &
LoadFontCreationSettings
ãã %
(
ãã% &'
FontAssetCreationSettings
ãã& ?
settings
ãã@ H
)
ããH I
{
åå 	
m_SourceFontFile
çç 
=
çç 
AssetDatabase
çç ,
.
çç, -
LoadAssetAtPath
çç- <
<
çç< =
Font
çç= A
>
ççA B
(
ççB C
AssetDatabase
ççC P
.
ççP Q
GUIDToAssetPath
ççQ `
(
çç` a
settings
çça i
.
ççi j 
sourceFontFileGUID
ççj |
)
çç| }
)
çç} ~
;
çç~ %
m_PointSizeSamplingMode
éé #
=
éé% &
settings
éé' /
.
éé/ 0#
pointSizeSamplingMode
éé0 E
;
ééE F
m_PointSize
èè 
=
èè 
settings
èè "
.
èè" #
	pointSize
èè# ,
;
èè, -
	m_Padding
êê 
=
êê 
settings
êê  
.
êê  !
padding
êê! (
;
êê( )
m_PackingMode
ëë 
=
ëë 
(
ëë 
FontPackingModes
ëë -
)
ëë- .
settings
ëë. 6
.
ëë6 7
packingMode
ëë7 B
;
ëëB C
m_AtlasWidth
íí 
=
íí 
settings
íí #
.
íí# $

atlasWidth
íí$ .
;
íí. /
m_AtlasHeight
ìì 
=
ìì 
settings
ìì $
.
ìì$ %
atlasHeight
ìì% 0
;
ìì0 1)
m_CharacterSetSelectionMode
îî '
=
îî( )
settings
îî* 2
.
îî2 3'
characterSetSelectionMode
îî3 L
;
îîL M!
m_CharacterSequence
ïï 
=
ïï  !
settings
ïï" *
.
ïï* +
characterSequence
ïï+ <
;
ïï< =#
m_ReferencedFontAsset
ññ !
=
ññ" #
AssetDatabase
ññ$ 1
.
ññ1 2
LoadAssetAtPath
ññ2 A
<
ññA B
TMP_FontAsset
ññB O
>
ññO P
(
ññP Q
AssetDatabase
ññQ ^
.
ññ^ _
GUIDToAssetPath
ññ_ n
(
ññn o
settings
ñño w
.
ññw x&
referencedFontAssetGUIDññx è
)ññè ê
)ññê ë
;ññë í"
m_CharactersFromFile
óó  
=
óó! "
AssetDatabase
óó# 0
.
óó0 1
LoadAssetAtPath
óó1 @
<
óó@ A
	TextAsset
óóA J
>
óóJ K
(
óóK L
AssetDatabase
óóL Y
.
óóY Z
GUIDToAssetPath
óóZ i
(
óói j
settings
óój r
.
óór s&
referencedTextAssetGUIDóós ä
)óóä ã
)óóã å
;óóå ç
m_GlyphRenderMode
öö 
=
öö 
(
öö  !
GlyphRenderMode
öö! 0
)
öö0 1
settings
öö1 9
.
öö9 :

renderMode
öö: D
;
ööD E#
m_IncludeFontFeatures
õõ !
=
õõ" #
settings
õõ$ ,
.
õõ, -!
includeFontFeatures
õõ- @
;
õõ@ A
}
úú 	
void
££ /
!SaveCreationSettingsToEditorPrefs
££ .
(
££. /'
FontAssetCreationSettings
££/ H
settings
££I Q
)
££Q R
{
§§ 	
if
¶¶ 
(
¶¶ 2
$m_FontAssetCreationSettingsContainer
¶¶ 4
==
¶¶5 7
null
¶¶8 <
)
¶¶< =
{
ßß 2
$m_FontAssetCreationSettingsContainer
®® 4
=
®®5 6
new
®®7 :0
"FontAssetCreationSettingsContainer
®®; ]
(
®®] ^
)
®®^ _
;
®®_ `2
$m_FontAssetCreationSettingsContainer
©© 4
.
©©4 5'
fontAssetCreationSettings
©©5 N
=
©©O P
new
©©Q T
List
©©U Y
<
©©Y Z'
FontAssetCreationSettings
©©Z s
>
©©s t
(
©©t u
)
©©u v
;
©©v w
}
™™ 2
$m_FontAssetCreationSettingsContainer
≠≠ 0
.
≠≠0 1'
fontAssetCreationSettings
≠≠1 J
.
≠≠J K
Add
≠≠K N
(
≠≠N O
settings
≠≠O W
)
≠≠W X
;
≠≠X Y
if
∞∞ 
(
∞∞ 2
$m_FontAssetCreationSettingsContainer
∞∞ 4
.
∞∞4 5'
fontAssetCreationSettings
∞∞5 N
.
∞∞N O
Count
∞∞O T
>
∞∞U V
$num
∞∞W X
)
∞∞X Y2
$m_FontAssetCreationSettingsContainer
±± 4
.
±±4 5'
fontAssetCreationSettings
±±5 N
.
±±N O
RemoveAt
±±O W
(
±±W X
$num
±±X Y
)
±±Y Z
;
±±Z [5
'm_FontAssetCreationSettingsCurrentIndex
≥≥ 3
=
≥≥4 52
$m_FontAssetCreationSettingsContainer
≥≥6 Z
.
≥≥Z ['
fontAssetCreationSettings
≥≥[ t
.
≥≥t u
Count
≥≥u z
-
≥≥{ |
$num
≥≥} ~
;
≥≥~ 
string
∂∂  
serializedSettings
∂∂ %
=
∂∂& '
JsonUtility
∂∂( 3
.
∂∂3 4
ToJson
∂∂4 :
(
∂∂: ;2
$m_FontAssetCreationSettingsContainer
∂∂; _
,
∂∂_ `
true
∂∂a e
)
∂∂e f
;
∂∂f g
EditorPrefs
∏∏ 
.
∏∏ 
	SetString
∏∏ !
(
∏∏! "5
'k_FontAssetCreationSettingsContainerKey
∏∏" I
,
∏∏I J 
serializedSettings
∏∏K ]
)
∏∏] ^
;
∏∏^ _
}
ππ 	
void
ªª 
DrawPreview
ªª 
(
ªª 
)
ªª 
{
ºº 	
Rect
ΩΩ 
	pixelRect
ΩΩ 
;
ΩΩ 
if
ææ 
(
ææ 
position
ææ 
.
ææ 
width
ææ 
>
ææ  
position
ææ! )
.
ææ) *
height
ææ* 0
&&
ææ1 3
position
ææ4 <
.
ææ< =
width
ææ= B
>
ææC D&
k_TwoColumnControlsWidth
ææE ]
)
ææ] ^
{
øø 
float
¿¿ 
minSide
¿¿ 
=
¿¿ 
Mathf
¿¿  %
.
¿¿% &
Min
¿¿& )
(
¿¿) *
position
¿¿* 2
.
¿¿2 3
height
¿¿3 9
-
¿¿: ;
$num
¿¿< ?
,
¿¿? @
position
¿¿A I
.
¿¿I J
width
¿¿J O
-
¿¿P Q&
k_TwoColumnControlsWidth
¿¿R j
)
¿¿j k
;
¿¿k l
EditorGUILayout
¬¬ 
.
¬¬  
BeginVertical
¬¬  -
(
¬¬- .
EditorStyles
¬¬. :
.
¬¬: ;
helpBox
¬¬; B
,
¬¬B C
	GUILayout
¬¬D M
.
¬¬M N
MaxWidth
¬¬N V
(
¬¬V W
minSide
¬¬W ^
)
¬¬^ _
)
¬¬_ `
;
¬¬` a
	pixelRect
ƒƒ 
=
ƒƒ 
GUILayoutUtility
ƒƒ ,
.
ƒƒ, -
GetRect
ƒƒ- 4
(
ƒƒ4 5
minSide
ƒƒ5 <
,
ƒƒ< =
minSide
ƒƒ> E
,
ƒƒE F
	GUILayout
ƒƒG P
.
ƒƒP Q
ExpandHeight
ƒƒQ ]
(
ƒƒ] ^
false
ƒƒ^ c
)
ƒƒc d
,
ƒƒd e
	GUILayout
ƒƒf o
.
ƒƒo p
ExpandWidth
ƒƒp {
(
ƒƒ{ |
falseƒƒ| Å
)ƒƒÅ Ç
)ƒƒÇ É
;ƒƒÉ Ñ
}
≈≈ 
else
∆∆ 
{
«« 
EditorGUILayout
»» 
.
»»  
BeginVertical
»»  -
(
»»- .
EditorStyles
»». :
.
»»: ;
helpBox
»»; B
)
»»B C
;
»»C D
	pixelRect
   
=
   
GUILayoutUtility
   ,
.
  , -
GetAspectRect
  - :
(
  : ;
$num
  ; =
)
  = >
;
  > ?
}
ÀÀ 
if
ÕÕ 
(
ÕÕ  
m_FontAtlasTexture
ÕÕ "
!=
ÕÕ# %
null
ÕÕ& *
)
ÕÕ* +
{
ŒŒ 
	EditorGUI
œœ 
.
œœ 
DrawTextureAlpha
œœ *
(
œœ* +
	pixelRect
œœ+ 4
,
œœ4 5 
m_FontAtlasTexture
œœ6 H
,
œœH I
	ScaleMode
œœJ S
.
œœS T
StretchToFill
œœT a
)
œœa b
;
œœb c
}
–– 
else
—— 
if
—— 
(
—— 
m_SavedFontAtlas
—— %
!=
——& (
null
——) -
)
——- .
{
““ 
	EditorGUI
”” 
.
”” 
DrawTextureAlpha
”” *
(
””* +
	pixelRect
””+ 4
,
””4 5
m_SavedFontAtlas
””6 F
,
””F G
	ScaleMode
””H Q
.
””Q R
StretchToFill
””R _
)
””_ `
;
””` a
}
‘‘ 
EditorGUILayout
÷÷ 
.
÷÷ 
EndVertical
÷÷ '
(
÷÷' (
)
÷÷( )
;
÷÷) *
}
◊◊ 	
void
⁄⁄ +
CheckForLegacyGlyphRenderMode
⁄⁄ *
(
⁄⁄* +
)
⁄⁄+ ,
{
€€ 	
if
›› 
(
›› 
(
›› 
int
›› 
)
›› 
m_GlyphRenderMode
›› &
<
››' (
$num
››) .
)
››. /
{
ﬁﬁ 
switch
ﬂﬂ 
(
ﬂﬂ 
(
ﬂﬂ 
int
ﬂﬂ 
)
ﬂﬂ 
m_GlyphRenderMode
ﬂﬂ .
)
ﬂﬂ. /
{
‡‡ 
case
·· 
$num
·· 
:
·· 
m_GlyphRenderMode
‚‚ )
=
‚‚* +
GlyphRenderMode
‚‚, ;
.
‚‚; <
SMOOTH_HINTED
‚‚< I
;
‚‚I J
break
„„ 
;
„„ 
case
‰‰ 
$num
‰‰ 
:
‰‰ 
m_GlyphRenderMode
ÂÂ )
=
ÂÂ* +
GlyphRenderMode
ÂÂ, ;
.
ÂÂ; <
SMOOTH
ÂÂ< B
;
ÂÂB C
break
ÊÊ 
;
ÊÊ 
case
ÁÁ 
$num
ÁÁ 
:
ÁÁ 
m_GlyphRenderMode
ËË )
=
ËË* +
GlyphRenderMode
ËË, ;
.
ËË; <
RASTER_HINTED
ËË< I
;
ËËI J
break
ÈÈ 
;
ÈÈ 
case
ÍÍ 
$num
ÍÍ 
:
ÍÍ 
m_GlyphRenderMode
ÎÎ )
=
ÎÎ* +
GlyphRenderMode
ÎÎ, ;
.
ÎÎ; <
RASTER
ÎÎ< B
;
ÎÎB C
break
ÏÏ 
;
ÏÏ 
case
ÌÌ 
$num
ÌÌ 
:
ÌÌ 
case
ÓÓ 
$num
ÓÓ 
:
ÓÓ 
m_GlyphRenderMode
ÔÔ )
=
ÔÔ* +
GlyphRenderMode
ÔÔ, ;
.
ÔÔ; <
SDFAA
ÔÔ< A
;
ÔÔA B
break
 
;
 
}
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
public
˜˜ "
TMP_FontFeatureTable
˜˜ #
GetKerningTable
˜˜$ 3
(
˜˜3 4
)
˜˜4 5
{
¯¯ 	'
GlyphPairAdjustmentRecord
˘˘ %
[
˘˘% &
]
˘˘& '
adjustmentRecords
˘˘( 9
=
˘˘: ;

FontEngine
˘˘< F
.
˘˘F G)
GetGlyphPairAdjustmentTable
˘˘G b
(
˘˘b c$
m_AvailableGlyphsToAdd
˘˘c y
.
˘˘y z
ToArray˘˘z Å
(˘˘Å Ç
)˘˘Ç É
)˘˘É Ñ
;˘˘Ñ Ö
if
˚˚ 
(
˚˚ 
adjustmentRecords
˚˚ !
==
˚˚" $
null
˚˚% )
)
˚˚) *
return
¸¸ 
null
¸¸ 
;
¸¸ "
TMP_FontFeatureTable
˛˛  
fontFeatureTable
˛˛! 1
=
˛˛2 3
new
˛˛4 7"
TMP_FontFeatureTable
˛˛8 L
(
˛˛L M
)
˛˛M N
;
˛˛N O
for
ÄÄ 
(
ÄÄ 
int
ÄÄ 
i
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
i
ÄÄ 
<
ÄÄ 
adjustmentRecords
ÄÄ  1
.
ÄÄ1 2
Length
ÄÄ2 8
&&
ÄÄ9 ;
adjustmentRecords
ÄÄ< M
[
ÄÄM N
i
ÄÄN O
]
ÄÄO P
.
ÄÄP Q#
firstAdjustmentRecord
ÄÄQ f
.
ÄÄf g

glyphIndex
ÄÄg q
!=
ÄÄr t
$num
ÄÄu v
;
ÄÄv w
i
ÄÄx y
++
ÄÄy {
)
ÄÄ{ |
{
ÅÅ 
fontFeatureTable
ÇÇ  
.
ÇÇ  !(
glyphPairAdjustmentRecords
ÇÇ! ;
.
ÇÇ; <
Add
ÇÇ< ?
(
ÇÇ? @
new
ÇÇ@ C+
TMP_GlyphPairAdjustmentRecord
ÇÇD a
(
ÇÇa b
adjustmentRecords
ÇÇb s
[
ÇÇs t
i
ÇÇt u
]
ÇÇu v
)
ÇÇv w
)
ÇÇw x
;
ÇÇx y
}
ÉÉ 
fontFeatureTable
ÖÖ 
.
ÖÖ ,
SortGlyphPairAdjustmentRecords
ÖÖ ;
(
ÖÖ; <
)
ÖÖ< =
;
ÖÖ= >
return
áá 
fontFeatureTable
áá #
;
áá# $
}
àà 	
}
ââ 
}ää ôp
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_GlyphPropertyDrawer.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{		 
[  
CustomPropertyDrawer 
( 
typeof  
(  !
Glyph! &
)& '
)' (
]( )
public 

class #
TMP_GlyphPropertyDrawer (
:) *
PropertyDrawer+ 9
{ 
private 
string 
k_ColorProperty &
=' (
$str) 1
;1 2
public 
override 
void 
OnGUI "
(" #
Rect# '
position( 0
,0 1
SerializedProperty2 D
propertyE M
,M N

GUIContentO Y
labelZ _
)_ `
{ 	
SerializedProperty 
prop_GlyphIndex .
=/ 0
property1 9
.9 : 
FindPropertyRelative: N
(N O
$strO X
)X Y
;Y Z
SerializedProperty 
prop_GlyphMetrics 0
=1 2
property3 ;
.; < 
FindPropertyRelative< P
(P Q
$strQ \
)\ ]
;] ^
SerializedProperty 
prop_GlyphRect -
=. /
property0 8
.8 9 
FindPropertyRelative9 M
(M N
$strN [
)[ \
;\ ]
SerializedProperty 

prop_Scale )
=* +
property, 4
.4 5 
FindPropertyRelative5 I
(I J
$strJ S
)S T
;T U
SerializedProperty 
prop_AtlasIndex .
=/ 0
property1 9
.9 : 
FindPropertyRelative: N
(N O
$strO ]
)] ^
;^ _
GUIStyle 
style 
= 
new  
GUIStyle! )
() *
EditorStyles* 6
.6 7
label7 <
)< =
;= >
style 
. 
richText 
= 
true !
;! "
Rect 
rect 
= 
new 
Rect  
(  !
position! )
.) *
x* +
+, -
$num. 0
,0 1
position2 :
.: ;
y; <
,< =
position> F
.F G
widthG L
,L M
$numN P
)P Q
;Q R
float 

labelWidth 
= 
GUI "
." #
skin# '
.' (
label( -
.- .
CalcSize. 6
(6 7
new7 :

GUIContent; E
(E F
$strF L
+M N
prop_GlyphIndexO ^
.^ _
intValue_ g
)g h
)h i
.i j
xj k
;k l
	EditorGUI 
. 

LabelField  
(  !
new! $
Rect% )
() *
position* 2
.2 3
x3 4
+5 6
(7 8
$num8 :
-; <

labelWidth= G
)G H
/I J
$numK L
,L M
positionN V
.V W
yW X
+Y Z
$num[ ]
,] ^
$num_ b
,b c
$numd g
)g h
,h i
newj m

GUIContentn x
(x y
$str	y é
+
è ê
prop_GlyphIndex
ë †
.
† °
intValue
° ©
+
™ ´
$str
¨ ∂
)
∂ ∑
,
∑ ∏
style
π æ
)
æ ø
;
ø ¿
	EditorGUI## 
.## 
PropertyField## #
(### $
new##$ '
Rect##( ,
(##, -
rect##- 1
.##1 2
x##2 3
,##3 4
rect##5 9
.##9 :
y##: ;
,##; <
position##= E
.##E F
width##F K
,##K L
$num##M O
)##O P
,##P Q
prop_GlyphRect##R `
)##` a
;##a b
rect%% 
.%% 
y%% 
+=%% 
$num%% 
;%% 
	EditorGUI&& 
.&& 
PropertyField&& #
(&&# $
rect&&$ (
,&&( )
prop_GlyphMetrics&&* ;
)&&; <
;&&< =
EditorGUIUtility(( 
.(( 

labelWidth(( '
=((( )
$num((* -
;((- .
	EditorGUI)) 
.)) 
PropertyField)) #
())# $
new))$ '
Rect))( ,
()), -
rect))- 1
.))1 2
x))2 3
,))3 4
rect))5 9
.))9 :
y)): ;
+))< =
$num))> @
,))@ A
$num))B D
,))D E
$num))F H
)))H I
,))I J

prop_Scale))K U
,))U V
new))W Z

GUIContent))[ e
())e f
$str))f n
)))n o
)))o p
;))p q
EditorGUIUtility++ 
.++ 

labelWidth++ '
=++( )
$num++* -
;++- .
	EditorGUI,, 
.,, 
PropertyField,, #
(,,# $
new,,$ '
Rect,,( ,
(,,, -
rect,,- 1
.,,1 2
x,,2 3
+,,4 5
$num,,6 8
,,,8 9
rect,,: >
.,,> ?
y,,? @
+,,A B
$num,,C E
,,,E F
$num,,G I
,,,I J
$num,,K M
),,M N
,,,N O
prop_AtlasIndex,,P _
,,,_ `
new,,a d

GUIContent,,e o
(,,o p
$str,,p ~
),,~ 
)	,, Ä
;
,,Ä Å
	DrawGlyph.. 
(.. 
position.. 
,.. 
property..  (
)..( )
;..) *
}// 	
public11 
override11 
float11 
GetPropertyHeight11 /
(11/ 0
SerializedProperty110 B
property11C K
,11K L

GUIContent11M W
label11X ]
)11] ^
{22 	
return33 
$num33 
;33 
}44 	
void66 
	DrawGlyph66 
(66 
Rect66 
position66 $
,66$ %
SerializedProperty66& 8
property669 A
)66A B
{77 	
TMP_FontAsset99 
	fontAsset99 #
=99$ %
property99& .
.99. /
serializedObject99/ ?
.99? @
targetObject99@ L
as99M O
TMP_FontAsset99P ]
;99] ^
if;; 
(;; 
	fontAsset;; 
==;; 
null;; !
);;! "
return<< 
;<< 
int?? 

atlasIndex?? 
=?? 
property?? %
.??% & 
FindPropertyRelative??& :
(??: ;
$str??; I
)??I J
.??J K
intValue??K S
;??S T
	Texture2D@@ 
atlasTexture@@ "
=@@# $
	fontAsset@@% .
.@@. /
atlasTextures@@/ <
.@@< =
Length@@= C
>@@D E

atlasIndex@@F P
?@@Q R
	fontAsset@@S \
.@@\ ]
atlasTextures@@] j
[@@j k

atlasIndex@@k u
]@@u v
:@@w x
null@@y }
;@@} ~
ifBB 
(BB 
atlasTextureBB 
==BB 
nullBB  $
)BB$ %
returnCC 
;CC 
MaterialEE 
matEE 
;EE 
ifFF 
(FF 
(FF 
(FF 
GlyphRasterModesFF "
)FF" #
	fontAssetFF# ,
.FF, -
atlasRenderModeFF- <
&FF= >
GlyphRasterModesFF? O
.FFO P
RASTER_MODE_BITMAPFFP b
)FFb c
==FFd f
GlyphRasterModesFFg w
.FFw x
RASTER_MODE_BITMAP	FFx ä
)
FFä ã
{GG 
matHH 
=HH 
TMP_FontAssetEditorHH )
.HH) *"
internalBitmapMaterialHH* @
;HH@ A
ifJJ 
(JJ 
matJJ 
==JJ 
nullJJ 
)JJ  
returnKK 
;KK 
matMM 
.MM 
mainTextureMM 
=MM  !
atlasTextureMM" .
;MM. /
matNN 
.NN 
SetColorNN 
(NN 
k_ColorPropertyNN ,
,NN, -
ColorNN. 3
.NN3 4
whiteNN4 9
)NN9 :
;NN: ;
}OO 
elsePP 
{QQ 
matRR 
=RR 
TMP_FontAssetEditorRR )
.RR) *
internalSDFMaterialRR* =
;RR= >
ifTT 
(TT 
matTT 
==TT 
nullTT 
)TT  
returnUU 
;UU 
matWW 
.WW 
mainTextureWW 
=WW  !
atlasTextureWW" .
;WW. /
matXX 
.XX 
SetFloatXX 
(XX 
ShaderUtilitiesXX ,
.XX, -
ID_GradientScaleXX- =
,XX= >
	fontAssetXX? H
.XXH I
atlasPaddingXXI U
+XXV W
$numXXX Y
)XXY Z
;XXZ [
}YY 
Rect\\ 
glyphDrawPosition\\ "
=\\# $
new\\% (
Rect\\) -
(\\- .
position\\. 6
.\\6 7
x\\7 8
,\\8 9
position\\: B
.\\B C
y\\C D
+\\E F
$num\\G H
,\\H I
$num\\J L
,\\L M
$num\\N P
)\\P Q
;\\Q R
SerializedProperty^^ 
glyphRectProperty^^ 0
=^^1 2
property^^3 ;
.^^; < 
FindPropertyRelative^^< P
(^^P Q
$str^^Q ^
)^^^ _
;^^_ `
int`` 
padding`` 
=`` 
	fontAsset`` #
.``# $
atlasPadding``$ 0
;``0 1
intbb 
glyphOriginXbb 
=bb 
glyphRectPropertybb 0
.bb0 1 
FindPropertyRelativebb1 E
(bbE F
$strbbF K
)bbK L
.bbL M
intValuebbM U
-bbV W
paddingbbX _
;bb_ `
intcc 
glyphOriginYcc 
=cc 
glyphRectPropertycc 0
.cc0 1 
FindPropertyRelativecc1 E
(ccE F
$strccF K
)ccK L
.ccL M
intValueccM U
-ccV W
paddingccX _
;cc_ `
intdd 

glyphWidthdd 
=dd 
glyphRectPropertydd .
.dd. / 
FindPropertyRelativedd/ C
(ddC D
$strddD M
)ddM N
.ddN O
intValueddO W
+ddX Y
paddingddZ a
*ddb c
$numddd e
;dde f
intee 
glyphHeightee 
=ee 
glyphRectPropertyee /
.ee/ 0 
FindPropertyRelativeee0 D
(eeD E
$streeE O
)eeO P
.eeP Q
intValueeeQ Y
+eeZ [
paddingee\ c
*eed e
$numeef g
;eeg h
floatgg 
normalizedHeightgg "
=gg# $
	fontAssetgg% .
.gg. /
faceInfogg/ 7
.gg7 8

ascentLinegg8 B
-ggC D
	fontAssetggE N
.ggN O
faceInfoggO W
.ggW X
descentLineggX c
;ggc d
floathh 
scalehh 
=hh 
glyphDrawPositionhh +
.hh+ ,
widthhh, 1
/hh2 3
normalizedHeighthh4 D
;hhD E
Rectkk 
	texCoordskk 
=kk 
newkk  
Rectkk! %
(kk% &
(kk& '
floatkk' ,
)kk, -
glyphOriginXkk- 9
/kk: ;
atlasTexturekk< H
.kkH I
widthkkI N
,kkN O
(kkP Q
floatkkQ V
)kkV W
glyphOriginYkkW c
/kkd e
atlasTexturekkf r
.kkr s
heightkks y
,kky z
(kk{ |
float	kk| Å
)
kkÅ Ç

glyphWidth
kkÇ å
/
kkç é
atlasTexture
kkè õ
.
kkõ ú
width
kkú °
,
kk° ¢
(
kk£ §
float
kk§ ©
)
kk© ™
glyphHeight
kk™ µ
/
kk∂ ∑
atlasTexture
kk∏ ƒ
.
kkƒ ≈
height
kk≈ À
)
kkÀ Ã
;
kkÃ Õ
ifmm 
(mm 
Eventmm 
.mm 
currentmm 
.mm 
typemm "
==mm# %
	EventTypemm& /
.mm/ 0
Repaintmm0 7
)mm7 8
{nn 
glyphDrawPositionoo !
.oo! "
xoo" #
+=oo$ &
(oo' (
glyphDrawPositionoo( 9
.oo9 :
widthoo: ?
-oo@ A

glyphWidthooB L
*ooM N
scaleooO T
)ooT U
/ooV W
$numooX Y
;ooY Z
glyphDrawPositionpp !
.pp! "
ypp" #
+=pp$ &
(pp' (
glyphDrawPositionpp( 9
.pp9 :
heightpp: @
-ppA B
glyphHeightppC N
*ppO P
scaleppQ V
)ppV W
/ppX Y
$numppZ [
;pp[ \
glyphDrawPositionqq !
.qq! "
widthqq" '
=qq( )

glyphWidthqq* 4
*qq5 6
scaleqq7 <
;qq< =
glyphDrawPositionrr !
.rr! "
heightrr" (
=rr) *
glyphHeightrr+ 6
*rr7 8
scalerr9 >
;rr> ?
Graphicsuu 
.uu 
DrawTextureuu $
(uu$ %
glyphDrawPositionuu% 6
,uu6 7
atlasTextureuu8 D
,uuD E
	texCoordsuuF O
,uuO P
$numuuQ R
,uuR S
$numuuT U
,uuU V
$numuuW X
,uuX Y
$numuuZ [
,uu[ \
newuu] `
Coloruua f
(uuf g
$numuug i
,uui j
$numuuk m
,uum n
$numuuo q
)uuq r
,uur s
matuut w
)uuw x
;uux y
}vv 
}ww 	
}yy 
}zz êà
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_FontAssetEditor.cs
	namespace

 	
TMPro


 
.

 
EditorUtilities

 
{ 
[  
CustomPropertyDrawer 
( 
typeof  
(  !
TMP_FontWeightPair! 3
)3 4
)4 5
]5 6
public 

class 
FontWeightDrawer !
:" #
PropertyDrawer$ 2
{ 
public 
override 
void 
OnGUI "
(" #
Rect# '
position( 0
,0 1
SerializedProperty2 D
propertyE M
,M N

GUIContentO Y
labelZ _
)_ `
{ 	
SerializedProperty 
prop_regular +
=, -
property. 6
.6 7 
FindPropertyRelative7 K
(K L
$strL ]
)] ^
;^ _
SerializedProperty 
prop_italic *
=+ ,
property- 5
.5 6 
FindPropertyRelative6 J
(J K
$strK [
)[ \
;\ ]
float 
width 
= 
position "
." #
width# (
;( )
position 
. 
width 
= 
EditorGUIUtility -
.- .

labelWidth. 8
;8 9
	EditorGUI 
. 

LabelField  
(  !
position! )
,) *
label+ 0
)0 1
;1 2
int 
	oldIndent 
= 
	EditorGUI %
.% &
indentLevel& 1
;1 2
	EditorGUI 
. 
indentLevel !
=" #
$num$ %
;% &
if 
( 
label 
. 
text 
[ 
$num 
] 
==  
$char! $
)$ %
GUI& )
.) *
enabled* 1
=2 3
false4 9
;9 :
position 
. 
x 
+= 
position "
." #
width# (
;( )
position* 2
.2 3
width3 8
=9 :
(; <
width< A
-B C
positionD L
.L M
widthM R
)R S
/T U
$numV W
;W X
	EditorGUI   
.   
PropertyField   #
(  # $
position  $ ,
,  , -
prop_regular  . :
,  : ;

GUIContent  < F
.  F G
none  G K
)  K L
;  L M
GUI## 
.## 
enabled## 
=## 
true## 
;## 
position$$ 
.$$ 
x$$ 
+=$$ 
position$$ "
.$$" #
width$$# (
;$$( )
	EditorGUI%% 
.%% 
PropertyField%% #
(%%# $
position%%$ ,
,%%, -
prop_italic%%. 9
,%%9 :

GUIContent%%; E
.%%E F
none%%F J
)%%J K
;%%K L
	EditorGUI'' 
.'' 
indentLevel'' !
=''" #
	oldIndent''$ -
;''- .
}(( 	
})) 
[++ 
CustomEditor++ 
(++ 
typeof++ 
(++ 
TMP_FontAsset++ &
)++& '
)++' (
]++( )
public,, 

class,, 
TMP_FontAssetEditor,, $
:,,% &
Editor,,' -
{-- 
private.. 
struct.. 
UI_PanelState.. $
{// 	
public00 
static00 
bool00 
faceInfoPanel00 ,
=00- .
true00/ 3
;003 4
public11 
static11 
bool11 #
generationSettingsPanel11 6
=117 8
true119 =
;11= >
public22 
static22 
bool22 
fontAtlasInfoPanel22 1
=222 3
true224 8
;228 9
public33 
static33 
bool33 
fontWeightPanel33 .
=33/ 0
true331 5
;335 6
public44 
static44 
bool44 "
fallbackFontAssetPanel44 5
=446 7
true448 <
;44< =
public55 
static55 
bool55 
glyphTablePanel55 .
=55/ 0
false551 6
;556 7
public66 
static66 
bool66 
characterTablePanel66 2
=663 4
false665 :
;66: ;
public77 
static77 
bool77 !
fontFeatureTablePanel77 4
=775 6
false777 <
;77< =
}88 	
private:: 
struct:: 
AtlasSettings:: $
{;; 	
public<< 
GlyphRenderMode<< "
glyphRenderMode<<# 2
;<<2 3
public== 
int== 
	pointSize==  
;==  !
public>> 
int>> 
padding>> 
;>> 
public?? 
int?? 

atlasWidth?? !
;??! "
public@@ 
int@@ 
atlasHeight@@ "
;@@" #
}AA 	
internalFF 
staticFF 
MaterialFF  
internalSDFMaterialFF! 4
{GG 	
getHH 
{II 
ifJJ 
(JJ !
s_InternalSDFMaterialJJ )
==JJ* ,
nullJJ- 1
)JJ1 2
{KK 
ShaderLL 
shaderLL !
=LL" #
ShaderLL$ *
.LL* +
FindLL+ /
(LL/ 0
$strLL0 _
)LL_ `
;LL` a
ifNN 
(NN 
shaderNN 
!=NN !
nullNN" &
)NN& '!
s_InternalSDFMaterialOO -
=OO. /
newOO0 3
MaterialOO4 <
(OO< =
shaderOO= C
)OOC D
;OOD E
}PP 
returnRR !
s_InternalSDFMaterialRR ,
;RR, -
}SS 
}TT 	
staticUU 
MaterialUU !
s_InternalSDFMaterialUU -
;UU- .
internalZZ 
staticZZ 
MaterialZZ  "
internalBitmapMaterialZZ! 7
{[[ 	
get\\ 
{]] 
if^^ 
(^^ $
s_InternalBitmapMaterial^^ ,
==^^- /
null^^0 4
)^^4 5
{__ 
Shader`` 
shader`` !
=``" #
Shader``$ *
.``* +
Find``+ /
(``/ 0
$str``0 T
)``T U
;``U V
ifbb 
(bb 
shaderbb 
!=bb !
nullbb" &
)bb& '$
s_InternalBitmapMaterialcc 0
=cc1 2
newcc3 6
Materialcc7 ?
(cc? @
shadercc@ F
)ccF G
;ccG H
}dd 
returnff $
s_InternalBitmapMaterialff /
;ff/ 0
}gg 
}hh 	
staticii 
Materialii $
s_InternalBitmapMaterialii 0
;ii0 1
privatekk 
statickk 
stringkk 
[kk 
]kk 
s_UiStateLabelkk  .
=kk/ 0
newkk1 4
stringkk5 ;
[kk; <
]kk< =
{kk> ?
$strkk@ ]
,kk] ^
$strkk_ z
}kk{ |
;kk| }
privatell 

GUIContentll 
[ll 
]ll #
m_AtlasResolutionLabelsll 4
=ll5 6
{ll7 8
newll9 <

GUIContentll= G
(llG H
$strllH K
)llK L
,llL M
newllN Q

GUIContentllR \
(ll\ ]
$strll] a
)lla b
,llb c
newlld g

GUIContentllh r
(llr s
$strlls w
)llw x
,llx y
newllz }

GUIContent	ll~ à
(
llà â
$str
llâ ç
)
llç é
,
llé è
new
llê ì

GUIContent
llî û
(
llû ü
$str
llü §
)
ll§ •
,
ll• ¶
new
llß ™

GUIContent
ll´ µ
(
llµ ∂
$str
ll∂ ª
)
llª º
,
llº Ω
new
llæ ¡

GUIContent
ll¬ Ã
(
llÃ Õ
$str
llÕ “
)
ll“ ”
,
ll” ‘
new
ll’ ÿ

GUIContent
llŸ „
(
ll„ ‰
$str
ll‰ Í
)
llÍ Î
,
llÎ Ï
new
llÌ 

GUIContent
llÒ ˚
(
ll˚ ¸
$str
ll¸ Ç
)
llÇ É
,
llÉ Ñ
new
llÖ à

GUIContent
llâ ì
(
llì î
$str
llî ö
)
llö õ
,
llõ ú
new
llù †

GUIContent
ll° ´
(
ll´ ¨
$str
ll¨ ≤
)
ll≤ ≥
}
ll¥ µ
;
llµ ∂
privatemm 
intmm 
[mm 
]mm 
m_AtlasResolutionsmm (
=mm) *
{mm+ ,
$nummm- .
,mm. /
$nummm0 2
,mm2 3
$nummm4 6
,mm6 7
$nummm8 :
,mm: ;
$nummm< ?
,mm? @
$nummmA D
,mmD E
$nummmF I
,mmI J
$nummmK O
,mmO P
$nummmQ U
,mmU V
$nummmW [
,mm[ \
$nummm] a
}mmb c
;mmc d
privateoo 
structoo 
Warningoo 
{pp 	
publicqq 
boolqq 
	isEnabledqq !
;qq! "
publicrr 
doublerr 
expirationTimerr (
;rr( )
}ss 	
privateuu 
intuu 
m_CurrentGlyphPageuu &
=uu' (
$numuu) *
;uu* +
privatevv 
intvv "
m_CurrentCharacterPagevv *
=vv+ ,
$numvv- .
;vv. /
privateww 
intww  
m_CurrentKerningPageww (
=ww) *
$numww+ ,
;ww, -
privateyy 
intyy !
m_SelectedGlyphRecordyy )
=yy* +
-yy, -
$numyy- .
;yy. /
privatezz 
intzz %
m_SelectedCharacterRecordzz -
=zz. /
-zz0 1
$numzz1 2
;zz2 3
private{{ 
int{{ &
m_SelectedAdjustmentRecord{{ .
={{/ 0
-{{1 2
$num{{2 3
;{{3 4
private}} 
string}} 
m_dstGlyphID}} #
;}}# $
private~~ 
string~~ 
m_dstUnicode~~ #
;~~# $
private 
const 
string #
k_placeholderUnicodeHex 4
=5 6
$str7 Q
;Q R
private
ÄÄ 
string
ÄÄ 
m_unicodeHexLabel
ÄÄ (
=
ÄÄ) *%
k_placeholderUnicodeHex
ÄÄ+ B
;
ÄÄB C
private
ÅÅ 
const
ÅÅ 
string
ÅÅ "
k_placeholderGlyphID
ÅÅ 1
=
ÅÅ2 3
$str
ÅÅ4 I
;
ÅÅI J
private
ÇÇ 
string
ÇÇ 
m_GlyphIDLabel
ÇÇ %
=
ÇÇ& '"
k_placeholderGlyphID
ÇÇ( <
;
ÇÇ< =
private
ÑÑ 
Warning
ÑÑ 
m_AddGlyphWarning
ÑÑ )
;
ÑÑ) *
private
ÖÖ 
Warning
ÖÖ #
m_AddCharacterWarning
ÖÖ -
;
ÖÖ- .
private
ÜÜ 
bool
ÜÜ /
!m_DisplayDestructiveChangeWarning
ÜÜ 6
;
ÜÜ6 7
private
áá 
AtlasSettings
áá 
m_AtlasSettings
áá -
;
áá- .
private
àà 
bool
àà ,
m_MaterialPresetsRequireUpdate
àà 3
;
àà3 4
private
ää 
string
ää "
m_GlyphSearchPattern
ää +
;
ää+ ,
private
ãã 
List
ãã 
<
ãã 
int
ãã 
>
ãã 
m_GlyphSearchList
ãã +
;
ãã+ ,
private
çç 
string
çç &
m_CharacterSearchPattern
çç /
;
çç/ 0
private
éé 
List
éé 
<
éé 
int
éé 
>
éé #
m_CharacterSearchList
éé /
;
éé/ 0
private
êê 
string
êê )
m_KerningTableSearchPattern
êê 2
;
êê2 3
private
ëë 
List
ëë 
<
ëë 
int
ëë 
>
ëë &
m_KerningTableSearchList
ëë 2
;
ëë2 3
private
ìì 
bool
ìì 
m_isSearchDirty
ìì $
;
ìì$ %
private
ïï 
const
ïï 
string
ïï 

k_UndoRedo
ïï '
=
ïï( )
$str
ïï* =
;
ïï= >
private
óó  
SerializedProperty
óó "(
m_AtlasPopulationMode_prop
óó# =
;
óó= >
private
òò  
SerializedProperty
òò "
font_atlas_prop
òò# 2
;
òò2 3
private
ôô  
SerializedProperty
ôô " 
font_material_prop
ôô# 5
;
ôô5 6
private
õõ  
SerializedProperty
õõ "$
m_AtlasRenderMode_prop
õõ# 9
;
õõ9 :
private
úú  
SerializedProperty
úú "&
m_SamplingPointSize_prop
úú# ;
;
úú; <
private
ùù  
SerializedProperty
ùù "!
m_AtlasPadding_prop
ùù# 6
;
ùù6 7
private
ûû  
SerializedProperty
ûû "
m_AtlasWidth_prop
ûû# 4
;
ûû4 5
private
üü  
SerializedProperty
üü " 
m_AtlasHeight_prop
üü# 5
;
üü5 6
private
††  
SerializedProperty
†† "0
"m_IsMultiAtlasTexturesEnabled_prop
††# E
;
††E F
private
¢¢  
SerializedProperty
¢¢ "
fontWeights_prop
¢¢# 3
;
¢¢3 4
private
•• 
ReorderableList
•• 
m_list
••  &
;
••& '
private
ßß  
SerializedProperty
ßß "#
font_normalStyle_prop
ßß# 8
;
ßß8 9
private
®®  
SerializedProperty
®® "%
font_normalSpacing_prop
®®# :
;
®®: ;
private
™™  
SerializedProperty
™™ "!
font_boldStyle_prop
™™# 6
;
™™6 7
private
´´  
SerializedProperty
´´ "#
font_boldSpacing_prop
´´# 8
;
´´8 9
private
≠≠  
SerializedProperty
≠≠ "#
font_italicStyle_prop
≠≠# 8
;
≠≠8 9
private
ÆÆ  
SerializedProperty
ÆÆ "
font_tabSize_prop
ÆÆ# 4
;
ÆÆ4 5
private
∞∞  
SerializedProperty
∞∞ "
m_FaceInfo_prop
∞∞# 2
;
∞∞2 3
private
±±  
SerializedProperty
±± "
m_GlyphTable_prop
±±# 4
;
±±4 5
private
≤≤  
SerializedProperty
≤≤ "#
m_CharacterTable_prop
≤≤# 8
;
≤≤8 9
private
¥¥ "
TMP_FontFeatureTable
¥¥ $ 
m_FontFeatureTable
¥¥% 7
;
¥¥7 8
private
µµ  
SerializedProperty
µµ "%
m_FontFeatureTable_prop
µµ# :
;
µµ: ;
private
∂∂  
SerializedProperty
∂∂ "/
!m_GlyphPairAdjustmentRecords_prop
∂∂# D
;
∂∂D E
private
∏∏ *
TMP_SerializedPropertyHolder
∏∏ ,(
m_SerializedPropertyHolder
∏∏- G
;
∏∏G H
private
ππ  
SerializedProperty
ππ "3
%m_EmptyGlyphPairAdjustmentRecord_prop
ππ# H
;
ππH I
private
ªª 
TMP_FontAsset
ªª 
m_fontAsset
ªª )
;
ªª) *
private
ΩΩ 
Material
ΩΩ 
[
ΩΩ 
]
ΩΩ 
m_materialPresets
ΩΩ ,
;
ΩΩ, -
private
øø 
bool
øø 
isAssetDirty
øø !
=
øø" #
false
øø$ )
;
øø) *
private
¡¡ 
int
¡¡ 
	errorCode
¡¡ 
;
¡¡ 
private
√√ 
System
√√ 
.
√√ 
DateTime
√√ 
	timeStamp
√√  )
;
√√) *
public
∆∆ 
void
∆∆ 
OnEnable
∆∆ 
(
∆∆ 
)
∆∆ 
{
«« 	
m_FaceInfo_prop
»» 
=
»» 
serializedObject
»» .
.
»». /
FindProperty
»»/ ;
(
»»; <
$str
»»< H
)
»»H I
;
»»I J
font_atlas_prop
   
=
   
serializedObject
   .
.
  . /
FindProperty
  / ;
(
  ; <
$str
  < M
)
  M N
.
  N O$
GetArrayElementAtIndex
  O e
(
  e f
$num
  f g
)
  g h
;
  h i 
font_material_prop
ÀÀ 
=
ÀÀ  
serializedObject
ÀÀ! 1
.
ÀÀ1 2
FindProperty
ÀÀ2 >
(
ÀÀ> ?
$str
ÀÀ? I
)
ÀÀI J
;
ÀÀJ K(
m_AtlasPopulationMode_prop
ÕÕ &
=
ÕÕ' (
serializedObject
ÕÕ) 9
.
ÕÕ9 :
FindProperty
ÕÕ: F
(
ÕÕF G
$str
ÕÕG ^
)
ÕÕ^ _
;
ÕÕ_ `$
m_AtlasRenderMode_prop
ŒŒ "
=
ŒŒ# $
serializedObject
ŒŒ% 5
.
ŒŒ5 6
FindProperty
ŒŒ6 B
(
ŒŒB C
$str
ŒŒC V
)
ŒŒV W
;
ŒŒW X&
m_SamplingPointSize_prop
œœ $
=
œœ% &
m_FaceInfo_prop
œœ' 6
.
œœ6 7"
FindPropertyRelative
œœ7 K
(
œœK L
$str
œœL Y
)
œœY Z
;
œœZ [!
m_AtlasPadding_prop
–– 
=
––  !
serializedObject
––" 2
.
––2 3
FindProperty
––3 ?
(
––? @
$str
––@ P
)
––P Q
;
––Q R
m_AtlasWidth_prop
—— 
=
—— 
serializedObject
——  0
.
——0 1
FindProperty
——1 =
(
——= >
$str
——> L
)
——L M
;
——M N 
m_AtlasHeight_prop
““ 
=
““  
serializedObject
““! 1
.
““1 2
FindProperty
““2 >
(
““> ?
$str
““? N
)
““N O
;
““O P0
"m_IsMultiAtlasTexturesEnabled_prop
”” .
=
””/ 0
serializedObject
””1 A
.
””A B
FindProperty
””B N
(
””N O
$str
””O n
)
””n o
;
””o p
fontWeights_prop
’’ 
=
’’ 
serializedObject
’’ /
.
’’/ 0
FindProperty
’’0 <
(
’’< =
$str
’’= P
)
’’P Q
;
’’Q R
m_list
◊◊ 
=
◊◊ 
new
◊◊ 
ReorderableList
◊◊ (
(
◊◊( )
serializedObject
◊◊) 9
,
◊◊9 :
serializedObject
◊◊; K
.
◊◊K L
FindProperty
◊◊L X
(
◊◊X Y
$str
◊◊Y s
)
◊◊s t
,
◊◊t u
true
◊◊v z
,
◊◊z {
true◊◊| Ä
,◊◊Ä Å
true◊◊Ç Ü
,◊◊Ü á
true◊◊à å
)◊◊å ç
;◊◊ç é
m_list
ŸŸ 
.
ŸŸ !
drawElementCallback
ŸŸ &
=
ŸŸ' (
(
ŸŸ) *
Rect
ŸŸ* .
rect
ŸŸ/ 3
,
ŸŸ3 4
int
ŸŸ5 8
index
ŸŸ9 >
,
ŸŸ> ?
bool
ŸŸ@ D
isActive
ŸŸE M
,
ŸŸM N
bool
ŸŸO S
	isFocused
ŸŸT ]
)
ŸŸ] ^
=>
ŸŸ_ a
{
⁄⁄ 
var
€€ 
element
€€ 
=
€€ 
m_list
€€ $
.
€€$ % 
serializedProperty
€€% 7
.
€€7 8$
GetArrayElementAtIndex
€€8 N
(
€€N O
index
€€O T
)
€€T U
;
€€U V
rect
‹‹ 
.
‹‹ 
y
‹‹ 
+=
‹‹ 
$num
‹‹ 
;
‹‹ 
	EditorGUI
›› 
.
›› 
PropertyField
›› '
(
››' (
new
››( +
Rect
››, 0
(
››0 1
rect
››1 5
.
››5 6
x
››6 7
,
››7 8
rect
››9 =
.
››= >
y
››> ?
,
››? @
rect
››A E
.
››E F
width
››F K
,
››K L
EditorGUIUtility
››M ]
.
››] ^
singleLineHeight
››^ n
)
››n o
,
››o p
element
››q x
,
››x y

GUIContent››z Ñ
.››Ñ Ö
none››Ö â
)››â ä
;››ä ã
}
ﬁﬁ 
;
ﬁﬁ 
m_list
‡‡ 
.
‡‡  
drawHeaderCallback
‡‡ %
=
‡‡& '
rect
‡‡( ,
=>
‡‡- /
{
·· 
	EditorGUI
‚‚ 
.
‚‚ 

LabelField
‚‚ $
(
‚‚$ %
rect
‚‚% )
,
‚‚) *
$str
‚‚+ :
)
‚‚: ;
;
‚‚; <
}
„„ 
;
„„ )
CleanFallbackFontAssetTable
ÊÊ '
(
ÊÊ' (
)
ÊÊ( )
;
ÊÊ) *#
font_normalStyle_prop
ËË !
=
ËË" #
serializedObject
ËË$ 4
.
ËË4 5
FindProperty
ËË5 A
(
ËËA B
$str
ËËB O
)
ËËO P
;
ËËP Q%
font_normalSpacing_prop
ÈÈ #
=
ÈÈ$ %
serializedObject
ÈÈ& 6
.
ÈÈ6 7
FindProperty
ÈÈ7 C
(
ÈÈC D
$str
ÈÈD Y
)
ÈÈY Z
;
ÈÈZ [!
font_boldStyle_prop
ÎÎ 
=
ÎÎ  !
serializedObject
ÎÎ" 2
.
ÎÎ2 3
FindProperty
ÎÎ3 ?
(
ÎÎ? @
$str
ÎÎ@ K
)
ÎÎK L
;
ÎÎL M#
font_boldSpacing_prop
ÏÏ !
=
ÏÏ" #
serializedObject
ÏÏ$ 4
.
ÏÏ4 5
FindProperty
ÏÏ5 A
(
ÏÏA B
$str
ÏÏB O
)
ÏÏO P
;
ÏÏP Q#
font_italicStyle_prop
ÓÓ !
=
ÓÓ" #
serializedObject
ÓÓ$ 4
.
ÓÓ4 5
FindProperty
ÓÓ5 A
(
ÓÓA B
$str
ÓÓB O
)
ÓÓO P
;
ÓÓP Q
font_tabSize_prop
ÔÔ 
=
ÔÔ 
serializedObject
ÔÔ  0
.
ÔÔ0 1
FindProperty
ÔÔ1 =
(
ÔÔ= >
$str
ÔÔ> G
)
ÔÔG H
;
ÔÔH I#
m_CharacterTable_prop
ÒÒ !
=
ÒÒ" #
serializedObject
ÒÒ$ 4
.
ÒÒ4 5
FindProperty
ÒÒ5 A
(
ÒÒA B
$str
ÒÒB T
)
ÒÒT U
;
ÒÒU V
m_GlyphTable_prop
ÚÚ 
=
ÚÚ 
serializedObject
ÚÚ  0
.
ÚÚ0 1
FindProperty
ÚÚ1 =
(
ÚÚ= >
$str
ÚÚ> L
)
ÚÚL M
;
ÚÚM N%
m_FontFeatureTable_prop
ÙÙ #
=
ÙÙ$ %
serializedObject
ÙÙ& 6
.
ÙÙ6 7
FindProperty
ÙÙ7 C
(
ÙÙC D
$str
ÙÙD X
)
ÙÙX Y
;
ÙÙY Z/
!m_GlyphPairAdjustmentRecords_prop
ıı -
=
ıı. /%
m_FontFeatureTable_prop
ıı0 G
.
ııG H"
FindPropertyRelative
ııH \
(
ıı\ ]
$str
ıı] {
)
ıı{ |
;
ıı| }
m_fontAsset
˜˜ 
=
˜˜ 
target
˜˜  
as
˜˜! #
TMP_FontAsset
˜˜$ 1
;
˜˜1 2 
m_FontFeatureTable
¯¯ 
=
¯¯  
m_fontAsset
¯¯! ,
.
¯¯, -
fontFeatureTable
¯¯- =
;
¯¯= >
if
˚˚ 
(
˚˚ 
m_fontAsset
˚˚ 
.
˚˚ 
m_KerningTable
˚˚ *
!=
˚˚+ -
null
˚˚. 2
&&
˚˚3 5
m_fontAsset
˚˚6 A
.
˚˚A B
m_KerningTable
˚˚B P
.
˚˚P Q
kerningPairs
˚˚Q ]
!=
˚˚^ `
null
˚˚a e
&&
˚˚f h
m_fontAsset
˚˚i t
.
˚˚t u
m_KerningTable˚˚u É
.˚˚É Ñ
kerningPairs˚˚Ñ ê
.˚˚ê ë
Count˚˚ë ñ
>˚˚ó ò
$num˚˚ô ö
)˚˚ö õ
m_fontAsset
¸¸ 
.
¸¸ %
ReadFontAssetDefinition
¸¸ 3
(
¸¸3 4
)
¸¸4 5
;
¸¸5 6(
m_SerializedPropertyHolder
ˇˇ &
=
ˇˇ' (
CreateInstance
ˇˇ) 7
<
ˇˇ7 8*
TMP_SerializedPropertyHolder
ˇˇ8 T
>
ˇˇT U
(
ˇˇU V
)
ˇˇV W
;
ˇˇW X(
m_SerializedPropertyHolder
ÄÄ &
.
ÄÄ& '
	fontAsset
ÄÄ' 0
=
ÄÄ1 2
m_fontAsset
ÄÄ3 >
;
ÄÄ> ?
SerializedObject
ÅÅ &
internalSerializedObject
ÅÅ 5
=
ÅÅ6 7
new
ÅÅ8 ;
SerializedObject
ÅÅ< L
(
ÅÅL M(
m_SerializedPropertyHolder
ÅÅM g
)
ÅÅg h
;
ÅÅh i3
%m_EmptyGlyphPairAdjustmentRecord_prop
ÇÇ 1
=
ÇÇ2 3&
internalSerializedObject
ÇÇ4 L
.
ÇÇL M
FindProperty
ÇÇM Y
(
ÇÇY Z
$str
ÇÇZ u
)
ÇÇu v
;
ÇÇv w
m_materialPresets
ÑÑ 
=
ÑÑ 
TMP_EditorUtility
ÑÑ  1
.
ÑÑ1 2$
FindMaterialReferences
ÑÑ2 H
(
ÑÑH I
m_fontAsset
ÑÑI T
)
ÑÑT U
;
ÑÑU V
m_GlyphSearchList
ÜÜ 
=
ÜÜ 
new
ÜÜ  #
List
ÜÜ$ (
<
ÜÜ( )
int
ÜÜ) ,
>
ÜÜ, -
(
ÜÜ- .
)
ÜÜ. /
;
ÜÜ/ 0&
m_KerningTableSearchList
áá $
=
áá% &
new
áá' *
List
áá+ /
<
áá/ 0
int
áá0 3
>
áá3 4
(
áá4 5
)
áá5 6
;
áá6 7
m_fontAsset
ää 
.
ää 
SortAllTables
ää %
(
ää% &
)
ää& '
;
ää' (
}
ãã 	
public
éé 
void
éé 
	OnDisable
éé 
(
éé 
)
éé 
{
èè 	
if
ëë 
(
ëë /
!m_DisplayDestructiveChangeWarning
ëë 1
)
ëë1 2
{
íí /
!m_DisplayDestructiveChangeWarning
ìì 1
=
ìì2 3
false
ìì4 9
;
ìì9 :,
RestoreAtlasGenerationSettings
îî .
(
îî. /
)
îî/ 0
;
îî0 1

GUIUtility
ïï 
.
ïï 
keyboardControl
ïï *
=
ïï+ ,
$num
ïï- .
;
ïï. /
serializedObject
óó  
.
óó  !%
ApplyModifiedProperties
óó! 8
(
óó8 9
)
óó9 :
;
óó: ;
}
òò 
}
ôô 	
public
úú 
override
úú 
void
úú 
OnInspectorGUI
úú +
(
úú+ ,
)
úú, -
{
ùù 	
Event
†† 
currentEvent
†† 
=
††  
Event
††! &
.
††& '
current
††' .
;
††. /
serializedObject
¢¢ 
.
¢¢ 
Update
¢¢ #
(
¢¢# $
)
¢¢$ %
;
¢¢% &
Rect
§§ 
rect
§§ 
=
§§ 
EditorGUILayout
§§ '
.
§§' (
GetControlRect
§§( 6
(
§§6 7
false
§§7 <
,
§§< =
$num
§§> @
)
§§@ A
;
§§A B
float
•• 

labelWidth
•• 
=
•• 
EditorGUIUtility
•• /
.
••/ 0

labelWidth
••0 :
;
••: ;
float
¶¶ 

fieldWidth
¶¶ 
=
¶¶ 
EditorGUIUtility
¶¶ /
.
¶¶/ 0

fieldWidth
¶¶0 :
;
¶¶: ;
GUI
™™ 
.
™™ 
Label
™™ 
(
™™ 
rect
™™ 
,
™™ 
new
™™ 

GUIContent
™™  *
(
™™* +
$str
™™+ A
+
™™B C
m_fontAsset
™™D O
.
™™O P
version
™™P W
)
™™W X
,
™™X Y 
TMP_UIStyleManager
™™Z l
.
™™l m
sectionHeader
™™m z
)
™™z {
;
™™{ |
rect
¨¨ 
.
¨¨ 
x
¨¨ 
+=
¨¨ 
rect
¨¨ 
.
¨¨ 
width
¨¨  
-
¨¨! "
$num
¨¨# '
;
¨¨' (
rect
≠≠ 
.
≠≠ 
y
≠≠ 
+=
≠≠ 
$num
≠≠ 
;
≠≠ 
rect
ÆÆ 
.
ÆÆ 
width
ÆÆ 
=
ÆÆ 
$num
ÆÆ 
;
ÆÆ 
rect
ØØ 
.
ØØ 
height
ØØ 
=
ØØ 
$num
ØØ 
;
ØØ 
if
∞∞ 
(
∞∞ 
GUI
∞∞ 
.
∞∞ 
Button
∞∞ 
(
∞∞ 
rect
∞∞ 
,
∞∞  
new
∞∞! $

GUIContent
∞∞% /
(
∞∞/ 0
$str
∞∞0 F
)
∞∞F G
)
∞∞G H
)
∞∞H I
{
±± *
TMPro_FontAssetCreatorWindow
≤≤ ,
.
≤≤, -(
ShowFontAtlasCreatorWindow
≤≤- G
(
≤≤G H
target
≤≤H N
as
≤≤O Q
TMP_FontAsset
≤≤R _
)
≤≤_ `
;
≤≤` a
}
≥≥ 
	EditorGUI
µµ 
.
µµ 
indentLevel
µµ !
=
µµ" #
$num
µµ$ %
;
µµ% &
GUI
∂∂ 
.
∂∂ 
enabled
∂∂ 
=
∂∂ 
false
∂∂ 
;
∂∂  
EditorGUILayout
ππ 
.
ππ 
PropertyField
ππ )
(
ππ) *
m_FaceInfo_prop
ππ* 9
.
ππ9 :"
FindPropertyRelative
ππ: N
(
ππN O
$str
ππO ]
)
ππ] ^
)
ππ^ _
;
ππ_ `
EditorGUILayout
∫∫ 
.
∫∫ 
PropertyField
∫∫ )
(
∫∫) *
m_FaceInfo_prop
∫∫* 9
.
∫∫9 :"
FindPropertyRelative
∫∫: N
(
∫∫N O
$str
∫∫O \
)
∫∫\ ]
)
∫∫] ^
;
∫∫^ _
EditorGUILayout
ªª 
.
ªª 
PropertyField
ªª )
(
ªª) *
m_FaceInfo_prop
ªª* 9
.
ªª9 :"
FindPropertyRelative
ªª: N
(
ªªN O
$str
ªªO \
)
ªª\ ]
)
ªª] ^
;
ªª^ _
GUI
ΩΩ 
.
ΩΩ 
enabled
ΩΩ 
=
ΩΩ 
true
ΩΩ 
;
ΩΩ 
EditorGUILayout
øø 
.
øø 
PropertyField
øø )
(
øø) *
m_FaceInfo_prop
øø* 9
.
øø9 :"
FindPropertyRelative
øø: N
(
øøN O
$str
øøO X
)
øøX Y
)
øøY Z
;
øøZ [
EditorGUILayout
¿¿ 
.
¿¿ 
PropertyField
¿¿ )
(
¿¿) *
m_FaceInfo_prop
¿¿* 9
.
¿¿9 :"
FindPropertyRelative
¿¿: N
(
¿¿N O
$str
¿¿O ]
)
¿¿] ^
)
¿¿^ _
;
¿¿_ `
EditorGUILayout
¬¬ 
.
¬¬ 
PropertyField
¬¬ )
(
¬¬) *
m_FaceInfo_prop
¬¬* 9
.
¬¬9 :"
FindPropertyRelative
¬¬: N
(
¬¬N O
$str
¬¬O ]
)
¬¬] ^
)
¬¬^ _
;
¬¬_ `
EditorGUILayout
√√ 
.
√√ 
PropertyField
√√ )
(
√√) *
m_FaceInfo_prop
√√* 9
.
√√9 :"
FindPropertyRelative
√√: N
(
√√N O
$str
√√O Z
)
√√Z [
)
√√[ \
;
√√\ ]
EditorGUILayout
ƒƒ 
.
ƒƒ 
PropertyField
ƒƒ )
(
ƒƒ) *
m_FaceInfo_prop
ƒƒ* 9
.
ƒƒ9 :"
FindPropertyRelative
ƒƒ: N
(
ƒƒN O
$str
ƒƒO [
)
ƒƒ[ \
)
ƒƒ\ ]
;
ƒƒ] ^
EditorGUILayout
≈≈ 
.
≈≈ 
PropertyField
≈≈ )
(
≈≈) *
m_FaceInfo_prop
≈≈* 9
.
≈≈9 :"
FindPropertyRelative
≈≈: N
(
≈≈N O
$str
≈≈O [
)
≈≈[ \
)
≈≈\ ]
;
≈≈] ^
EditorGUILayout
∆∆ 
.
∆∆ 
PropertyField
∆∆ )
(
∆∆) *
m_FaceInfo_prop
∆∆* 9
.
∆∆9 :"
FindPropertyRelative
∆∆: N
(
∆∆N O
$str
∆∆O ^
)
∆∆^ _
)
∆∆_ `
;
∆∆` a
EditorGUILayout
«« 
.
«« 
PropertyField
«« )
(
««) *
m_FaceInfo_prop
««* 9
.
««9 :"
FindPropertyRelative
««: N
(
««N O
$str
««O b
)
««b c
)
««c d
;
««d e
EditorGUILayout
»» 
.
»» 
PropertyField
»» )
(
»») *
m_FaceInfo_prop
»»* 9
.
»»9 :"
FindPropertyRelative
»»: N
(
»»N O
$str
»»O e
)
»»e f
)
»»f g
;
»»g h
EditorGUILayout
…… 
.
…… 
PropertyField
…… )
(
……) *
m_FaceInfo_prop
……* 9
.
……9 :"
FindPropertyRelative
……: N
(
……N O
$str
……O f
)
……f g
)
……g h
;
……h i
EditorGUILayout
ÀÀ 
.
ÀÀ 
PropertyField
ÀÀ )
(
ÀÀ) *
m_FaceInfo_prop
ÀÀ* 9
.
ÀÀ9 :"
FindPropertyRelative
ÀÀ: N
(
ÀÀN O
$str
ÀÀO d
)
ÀÀd e
)
ÀÀe f
;
ÀÀf g
EditorGUILayout
ÃÃ 
.
ÃÃ 
PropertyField
ÃÃ )
(
ÃÃ) *
m_FaceInfo_prop
ÃÃ* 9
.
ÃÃ9 :"
FindPropertyRelative
ÃÃ: N
(
ÃÃN O
$str
ÃÃO b
)
ÃÃb c
)
ÃÃc d
;
ÃÃd e
EditorGUILayout
ÕÕ 
.
ÕÕ 
PropertyField
ÕÕ )
(
ÕÕ) *
m_FaceInfo_prop
ÕÕ* 9
.
ÕÕ9 :"
FindPropertyRelative
ÕÕ: N
(
ÕÕN O
$str
ÕÕO b
)
ÕÕb c
)
ÕÕc d
;
ÕÕd e
EditorGUILayout
ŒŒ 
.
ŒŒ 
PropertyField
ŒŒ )
(
ŒŒ) *
m_FaceInfo_prop
ŒŒ* 9
.
ŒŒ9 :"
FindPropertyRelative
ŒŒ: N
(
ŒŒN O
$str
ŒŒO `
)
ŒŒ` a
)
ŒŒa b
;
ŒŒb c
EditorGUILayout
œœ 
.
œœ 
PropertyField
œœ )
(
œœ) *
m_FaceInfo_prop
œœ* 9
.
œœ9 :"
FindPropertyRelative
œœ: N
(
œœN O
$str
œœO [
)
œœ[ \
)
œœ\ ]
;
œœ] ^
EditorGUILayout
”” 
.
”” 
Space
”” !
(
””! "
)
””" #
;
””# $
rect
ÿÿ 
=
ÿÿ 
EditorGUILayout
ÿÿ "
.
ÿÿ" #
GetControlRect
ÿÿ# 1
(
ÿÿ1 2
false
ÿÿ2 7
,
ÿÿ7 8
$num
ÿÿ9 ;
)
ÿÿ; <
;
ÿÿ< =
if
⁄⁄ 
(
⁄⁄ 
GUI
⁄⁄ 
.
⁄⁄ 
Button
⁄⁄ 
(
⁄⁄ 
rect
⁄⁄ 
,
⁄⁄  
new
⁄⁄! $

GUIContent
⁄⁄% /
(
⁄⁄/ 0
$str
⁄⁄0 L
)
⁄⁄L M
,
⁄⁄M N 
TMP_UIStyleManager
⁄⁄O a
.
⁄⁄a b
sectionHeader
⁄⁄b o
)
⁄⁄o p
)
⁄⁄p q
UI_PanelState
€€ 
.
€€ %
generationSettingsPanel
€€ 5
=
€€6 7
!
€€8 9
UI_PanelState
€€9 F
.
€€F G%
generationSettingsPanel
€€G ^
;
€€^ _
GUI
›› 
.
›› 
Label
›› 
(
›› 
rect
›› 
,
›› 
(
›› 
UI_PanelState
›› *
.
››* +%
generationSettingsPanel
››+ B
?
››C D
$str
››E G
:
››H I
s_UiStateLabel
››J X
[
››X Y
$num
››Y Z
]
››Z [
)
››[ \
,
››\ ] 
TMP_UIStyleManager
››^ p
.
››p q

rightLabel
››q {
)
››{ |
;
››| }
if
ﬂﬂ 
(
ﬂﬂ 
UI_PanelState
ﬂﬂ 
.
ﬂﬂ %
generationSettingsPanel
ﬂﬂ 5
)
ﬂﬂ5 6
{
‡‡ 
	EditorGUI
·· 
.
·· 
indentLevel
·· %
=
··& '
$num
··( )
;
··) *
	EditorGUI
„„ 
.
„„ 
BeginChangeCheck
„„ *
(
„„* +
)
„„+ ,
;
„„, -
Font
‰‰ 

sourceFont
‰‰ 
=
‰‰  !
(
‰‰" #
Font
‰‰# '
)
‰‰' (
EditorGUILayout
‰‰( 7
.
‰‰7 8
ObjectField
‰‰8 C
(
‰‰C D
$str
‰‰D V
,
‰‰V W
m_fontAsset
‰‰X c
.
‰‰c d(
m_SourceFontFile_EditorRef
‰‰d ~
,
‰‰~ 
typeof‰‰Ä Ü
(‰‰Ü á
Font‰‰á ã
)‰‰ã å
,‰‰å ç
false‰‰é ì
)‰‰ì î
;‰‰î ï
if
ÂÂ 
(
ÂÂ 
	EditorGUI
ÂÂ 
.
ÂÂ 
EndChangeCheck
ÂÂ ,
(
ÂÂ, -
)
ÂÂ- .
)
ÂÂ. /
{
ÊÊ 
string
ÁÁ 
guid
ÁÁ 
=
ÁÁ  !
AssetDatabase
ÁÁ" /
.
ÁÁ/ 0
AssetPathToGUID
ÁÁ0 ?
(
ÁÁ? @
AssetDatabase
ÁÁ@ M
.
ÁÁM N
GetAssetPath
ÁÁN Z
(
ÁÁZ [

sourceFont
ÁÁ[ e
)
ÁÁe f
)
ÁÁf g
;
ÁÁg h
m_fontAsset
ËË 
.
ËË  "
m_SourceFontFileGUID
ËË  4
=
ËË5 6
guid
ËË7 ;
;
ËË; <
m_fontAsset
ÈÈ 
.
ÈÈ  (
m_SourceFontFile_EditorRef
ÈÈ  :
=
ÈÈ; <

sourceFont
ÈÈ= G
;
ÈÈG H
}
ÍÍ 
	EditorGUI
ÏÏ 
.
ÏÏ  
BeginDisabledGroup
ÏÏ ,
(
ÏÏ, -

sourceFont
ÏÏ- 7
==
ÏÏ8 :
null
ÏÏ; ?
)
ÏÏ? @
;
ÏÏ@ A
{
ÌÌ 
	EditorGUI
ÓÓ 
.
ÓÓ 
BeginChangeCheck
ÓÓ .
(
ÓÓ. /
)
ÓÓ/ 0
;
ÓÓ0 1
EditorGUILayout
ÔÔ #
.
ÔÔ# $
PropertyField
ÔÔ$ 1
(
ÔÔ1 2(
m_AtlasPopulationMode_prop
ÔÔ2 L
,
ÔÔL M
new
ÔÔN Q

GUIContent
ÔÔR \
(
ÔÔ\ ]
$str
ÔÔ] t
)
ÔÔt u
)
ÔÔu v
;
ÔÔv w
if
 
(
 
	EditorGUI
 !
.
! "
EndChangeCheck
" 0
(
0 1
)
1 2
)
2 3
{
ÒÒ 
serializedObject
ÚÚ (
.
ÚÚ( )%
ApplyModifiedProperties
ÚÚ) @
(
ÚÚ@ A
)
ÚÚA B
;
ÚÚB C
bool
ÙÙ '
isDatabaseRefreshRequired
ÙÙ 6
=
ÙÙ7 8
false
ÙÙ9 >
;
ÙÙ> ?
if
ˆˆ 
(
ˆˆ (
m_AtlasPopulationMode_prop
ˆˆ 6
.
ˆˆ6 7
intValue
ˆˆ7 ?
==
ˆˆ@ B
$num
ˆˆC D
)
ˆˆD E
{
˜˜ 
m_fontAsset
¯¯ '
.
¯¯' (
sourceFontFile
¯¯( 6
=
¯¯7 8
null
¯¯9 =
;
¯¯= >
for
˚˚ 
(
˚˚  !
int
˚˚! $
i
˚˚% &
=
˚˚' (
$num
˚˚) *
;
˚˚* +
i
˚˚, -
<
˚˚. /
m_fontAsset
˚˚0 ;
.
˚˚; <
atlasTextures
˚˚< I
.
˚˚I J
Length
˚˚J P
;
˚˚P Q
i
˚˚R S
++
˚˚S U
)
˚˚U V
{
¸¸ 
	Texture2D
˝˝  )
tex
˝˝* -
=
˝˝. /
m_fontAsset
˝˝0 ;
.
˝˝; <
atlasTextures
˝˝< I
[
˝˝I J
i
˝˝J K
]
˝˝K L
;
˝˝L M
if
ˇˇ  "
(
ˇˇ# $
tex
ˇˇ$ '
!=
ˇˇ( *
null
ˇˇ+ /
&&
ˇˇ0 2
tex
ˇˇ3 6
.
ˇˇ6 7

isReadable
ˇˇ7 A
)
ˇˇA B'
FontEngineEditorUtilities
ÄÄ$ =
.
ÄÄ= >'
SetAtlasTextureIsReadable
ÄÄ> W
(
ÄÄW X
tex
ÄÄX [
,
ÄÄ[ \
false
ÄÄ] b
)
ÄÄb c
;
ÄÄc d
}
ÅÅ 
Debug
ÉÉ !
.
ÉÉ! "
Log
ÉÉ" %
(
ÉÉ% &
$str
ÉÉ& N
)
ÉÉN O
;
ÉÉO P
}
ÑÑ 
else
ÖÖ 
if
ÖÖ 
(
ÖÖ  !(
m_AtlasPopulationMode_prop
ÖÖ! ;
.
ÖÖ; <
intValue
ÖÖ< D
==
ÖÖE G
$num
ÖÖH I
)
ÖÖI J
{
ÜÜ 
if
áá 
(
áá  
m_fontAsset
áá  +
.
áá+ ,(
m_SourceFontFile_EditorRef
áá, F
.
ááF G
dynamic
ááG N
==
ááO Q
false
ááR W
)
ááW X
{
àà 
Debug
ââ  %
.
ââ% &

LogWarning
ââ& 0
(
ââ0 1
$str
ââ1 C
+
ââD E
m_fontAsset
ââF Q
.
ââQ R
name
ââR V
+
ââW X
$strââY û
,ââû ü
m_fontAssetââ† ´
.ââ´ ¨*
m_SourceFontFile_EditorRefââ¨ ∆
)ââ∆ «
;ââ« »(
m_AtlasPopulationMode_prop
ää  :
.
ää: ;
intValue
ää; C
=
ääD E
$num
ääF G
;
ääG H
serializedObject
åå  0
.
åå0 1%
ApplyModifiedProperties
åå1 H
(
ååH I
)
ååI J
;
ååJ K
}
çç 
else
éé  
{
èè 
m_fontAsset
êê  +
.
êê+ ,
sourceFontFile
êê, :
=
êê; <
m_fontAsset
êê= H
.
êêH I(
m_SourceFontFile_EditorRef
êêI c
;
êêc d
for
ìì  #
(
ìì$ %
int
ìì% (
i
ìì) *
=
ìì+ ,
$num
ìì- .
;
ìì. /
i
ìì0 1
<
ìì2 3
m_fontAsset
ìì4 ?
.
ìì? @
atlasTextures
ìì@ M
.
ììM N
Length
ììN T
;
ììT U
i
ììV W
++
ììW Y
)
ììY Z
{
îî  !
	Texture2D
ïï$ -
tex
ïï. 1
=
ïï2 3
m_fontAsset
ïï4 ?
.
ïï? @
atlasTextures
ïï@ M
[
ïïM N
i
ïïN O
]
ïïO P
;
ïïP Q
if
óó$ &
(
óó' (
tex
óó( +
!=
óó, .
null
óó/ 3
&&
óó4 6
tex
óó7 :
.
óó: ;

isReadable
óó; E
==
óóF H
false
óóI N
)
óóN O'
FontEngineEditorUtilities
òò( A
.
òòA B'
SetAtlasTextureIsReadable
òòB [
(
òò[ \
tex
òò\ _
,
òò_ `
true
òòa e
)
òòe f
;
òòf g
}
ôô  !
Debug
õõ  %
.
õõ% &
Log
õõ& )
(
õõ) *
$str
õõ* S
)
õõS T
;
õõT U
}
úú 
}
ùù 
if
üü 
(
üü '
isDatabaseRefreshRequired
üü 5
)
üü5 6
AssetDatabase
†† )
.
††) *
Refresh
††* 1
(
††1 2
)
††2 3
;
††3 4
serializedObject
¢¢ (
.
¢¢( )
Update
¢¢) /
(
¢¢/ 0
)
¢¢0 1
;
¢¢1 2
isAssetDirty
££ $
=
££% &
true
££' +
;
££+ ,
}
§§ 
if
ßß 
(
ßß /
!m_DisplayDestructiveChangeWarning
ßß 9
==
ßß: <
false
ßß= B
)
ßßB C
{
®® *
SavedAtlasGenerationSettings
©© 4
(
©©4 5
)
©©5 6
;
©©6 7
}
´´ 
	EditorGUI
≠≠ 
.
≠≠  
BeginDisabledGroup
≠≠ 0
(
≠≠0 1(
m_AtlasPopulationMode_prop
≠≠1 K
.
≠≠K L
intValue
≠≠L T
==
≠≠U W
(
≠≠X Y
int
≠≠Y \
)
≠≠\ ]!
AtlasPopulationMode
≠≠] p
.
≠≠p q
Static
≠≠q w
)
≠≠w x
;
≠≠x y
{
ÆÆ 
	EditorGUI
ØØ !
.
ØØ! "
BeginChangeCheck
ØØ" 2
(
ØØ2 3
)
ØØ3 4
;
ØØ4 5
EditorGUILayout
±± '
.
±±' (
PropertyField
±±( 5
(
±±5 6$
m_AtlasRenderMode_prop
±±6 L
)
±±L M
;
±±M N
EditorGUILayout
≤≤ '
.
≤≤' (
PropertyField
≤≤( 5
(
≤≤5 6&
m_SamplingPointSize_prop
≤≤6 N
,
≤≤N O
new
≤≤P S

GUIContent
≤≤T ^
(
≤≤^ _
$str
≤≤_ t
)
≤≤t u
)
≤≤u v
;
≤≤v w
if
≥≥ 
(
≥≥ 
	EditorGUI
≥≥ %
.
≥≥% &
EndChangeCheck
≥≥& 4
(
≥≥4 5
)
≥≥5 6
)
≥≥6 7
{
¥¥ /
!m_DisplayDestructiveChangeWarning
µµ =
=
µµ> ?
true
µµ@ D
;
µµD E
}
∂∂ 
	EditorGUI
ππ !
.
ππ! "
BeginChangeCheck
ππ" 2
(
ππ2 3
)
ππ3 4
;
ππ4 5
EditorGUILayout
∫∫ '
.
∫∫' (
PropertyField
∫∫( 5
(
∫∫5 6!
m_AtlasPadding_prop
∫∫6 I
,
∫∫I J
new
∫∫K N

GUIContent
∫∫O Y
(
∫∫Y Z
$str
∫∫Z c
)
∫∫c d
)
∫∫d e
;
∫∫e f
EditorGUILayout
ªª '
.
ªª' (
IntPopup
ªª( 0
(
ªª0 1
m_AtlasWidth_prop
ªª1 B
,
ªªB C%
m_AtlasResolutionLabels
ªªD [
,
ªª[ \ 
m_AtlasResolutions
ªª] o
,
ªªo p
new
ªªq t

GUIContent
ªªu 
(ªª Ä
$strªªÄ ç
)ªªç é
)ªªé è
;ªªè ê
EditorGUILayout
ºº '
.
ºº' (
IntPopup
ºº( 0
(
ºº0 1 
m_AtlasHeight_prop
ºº1 C
,
ººC D%
m_AtlasResolutionLabels
ººE \
,
ºº\ ] 
m_AtlasResolutions
ºº^ p
,
ººp q
new
ººr u

GUIContentººv Ä
(ººÄ Å
$strººÅ è
)ººè ê
)ººê ë
;ººë í
EditorGUILayout
ΩΩ '
.
ΩΩ' (
PropertyField
ΩΩ( 5
(
ΩΩ5 60
"m_IsMultiAtlasTexturesEnabled_prop
ΩΩ6 X
,
ΩΩX Y
new
ΩΩZ ]

GUIContent
ΩΩ^ h
(
ΩΩh i
$str
ΩΩi 
,ΩΩ Ä
$strΩΩÅ Õ
)ΩΩÕ Œ
)ΩΩŒ œ
;ΩΩœ –
if
ææ 
(
ææ 
	EditorGUI
ææ %
.
ææ% &
EndChangeCheck
ææ& 4
(
ææ4 5
)
ææ5 6
)
ææ6 7
{
øø ,
m_MaterialPresetsRequireUpdate
¿¿ :
=
¿¿; <
true
¿¿= A
;
¿¿A B/
!m_DisplayDestructiveChangeWarning
¡¡ =
=
¡¡> ?
true
¡¡@ D
;
¡¡D E
}
¬¬ 
if
ƒƒ 
(
ƒƒ /
!m_DisplayDestructiveChangeWarning
ƒƒ =
)
ƒƒ= >
{
≈≈ 
rect
««  
=
««! "
EditorGUILayout
««# 2
.
««2 3
GetControlRect
««3 A
(
««A B
false
««B G
,
««G H
$num
««I K
)
««K L
;
««L M
rect
»»  
.
»»  !
x
»»! "
+=
»»# %
$num
»»& (
;
»»( )
rect
……  
.
……  !
width
……! &
-=
……' )
$num
……* ,
;
……, -
	EditorGUI
   %
.
  % &
HelpBox
  & -
(
  - .
rect
  . 2
,
  2 3
$str  4 å
,  å ç
MessageType  é ô
.  ô ö
Warning  ö °
)  ° ¢
;  ¢ £
if
ÃÃ 
(
ÃÃ  
GUI
ÃÃ  #
.
ÃÃ# $
Button
ÃÃ$ *
(
ÃÃ* +
new
ÃÃ+ .
Rect
ÃÃ/ 3
(
ÃÃ3 4
rect
ÃÃ4 8
.
ÃÃ8 9
width
ÃÃ9 >
-
ÃÃ? @
$num
ÃÃA D
,
ÃÃD E
rect
ÃÃF J
.
ÃÃJ K
y
ÃÃK L
+
ÃÃM N
$num
ÃÃO Q
,
ÃÃQ R
$num
ÃÃS U
,
ÃÃU V
$num
ÃÃW Y
)
ÃÃY Z
,
ÃÃZ [
new
ÃÃ\ _

GUIContent
ÃÃ` j
(
ÃÃj k
$str
ÃÃk r
)
ÃÃr s
)
ÃÃs t
)
ÃÃt u
{
ÕÕ /
!m_DisplayDestructiveChangeWarning
ŒŒ  A
=
ŒŒB C
false
ŒŒD I
;
ŒŒI J
if
——  "
(
——# $
m_AtlasSettings
——$ 3
.
——3 4
	pointSize
——4 =
!=
——> @&
m_SamplingPointSize_prop
——A Y
.
——Y Z
intValue
——Z b
)
——b c
{
““  !

FontEngine
””$ .
.
””. /
LoadFontFace
””/ ;
(
””; <
m_fontAsset
””< G
.
””G H
sourceFontFile
””H V
,
””V W&
m_SamplingPointSize_prop
””X p
.
””p q
intValue
””q y
)
””y z
;
””z {
m_fontAsset
‘‘$ /
.
‘‘/ 0
faceInfo
‘‘0 8
=
‘‘9 :

FontEngine
‘‘; E
.
‘‘E F
GetFaceInfo
‘‘F Q
(
‘‘Q R
)
‘‘R S
;
‘‘S T
}
’’  !
m_fontAsset
ÿÿ  +
.
ÿÿ+ ,
material
ÿÿ, 4
.
ÿÿ4 5
SetFloat
ÿÿ5 =
(
ÿÿ= >
ShaderUtilities
ÿÿ> M
.
ÿÿM N
ID_TextureWidth
ÿÿN ]
,
ÿÿ] ^
m_AtlasWidth_prop
ÿÿ_ p
.
ÿÿp q
intValue
ÿÿq y
)
ÿÿy z
;
ÿÿz {
m_fontAsset
ŸŸ  +
.
ŸŸ+ ,
material
ŸŸ, 4
.
ŸŸ4 5
SetFloat
ŸŸ5 =
(
ŸŸ= >
ShaderUtilities
ŸŸ> M
.
ŸŸM N
ID_TextureHeight
ŸŸN ^
,
ŸŸ^ _ 
m_AtlasHeight_prop
ŸŸ` r
.
ŸŸr s
intValue
ŸŸs {
)
ŸŸ{ |
;
ŸŸ| }
m_fontAsset
⁄⁄  +
.
⁄⁄+ ,
material
⁄⁄, 4
.
⁄⁄4 5
SetFloat
⁄⁄5 =
(
⁄⁄= >
ShaderUtilities
⁄⁄> M
.
⁄⁄M N
ID_GradientScale
⁄⁄N ^
,
⁄⁄^ _!
m_AtlasPadding_prop
⁄⁄` s
.
⁄⁄s t
intValue
⁄⁄t |
+
⁄⁄} ~
$num⁄⁄ Ä
)⁄⁄Ä Å
;⁄⁄Å Ç
if
››  "
(
››# $,
m_MaterialPresetsRequireUpdate
››$ B
)
››B C
{
ﬁﬁ  !,
m_MaterialPresetsRequireUpdate
ﬂﬂ$ B
=
ﬂﬂC D
false
ﬂﬂE J
;
ﬂﬂJ K
Material
··$ ,
[
··, -
]
··- .
materialPresets
··/ >
=
··? @
TMP_EditorUtility
··A R
.
··R S$
FindMaterialReferences
··S i
(
··i j
m_fontAsset
··j u
)
··u v
;
··v w
for
‚‚$ '
(
‚‚( )
int
‚‚) ,
i
‚‚- .
=
‚‚/ 0
$num
‚‚1 2
;
‚‚2 3
i
‚‚4 5
<
‚‚6 7
materialPresets
‚‚8 G
.
‚‚G H
Length
‚‚H N
;
‚‚N O
i
‚‚P Q
++
‚‚Q S
)
‚‚S T
{
„„$ %
Material
‰‰( 0
mat
‰‰1 4
=
‰‰5 6
materialPresets
‰‰7 F
[
‰‰F G
i
‰‰G H
]
‰‰H I
;
‰‰I J
mat
ÊÊ( +
.
ÊÊ+ ,
SetFloat
ÊÊ, 4
(
ÊÊ4 5
ShaderUtilities
ÊÊ5 D
.
ÊÊD E
ID_TextureWidth
ÊÊE T
,
ÊÊT U
m_AtlasWidth_prop
ÊÊV g
.
ÊÊg h
intValue
ÊÊh p
)
ÊÊp q
;
ÊÊq r
mat
ÁÁ( +
.
ÁÁ+ ,
SetFloat
ÁÁ, 4
(
ÁÁ4 5
ShaderUtilities
ÁÁ5 D
.
ÁÁD E
ID_TextureHeight
ÁÁE U
,
ÁÁU V 
m_AtlasHeight_prop
ÁÁW i
.
ÁÁi j
intValue
ÁÁj r
)
ÁÁr s
;
ÁÁs t
mat
ËË( +
.
ËË+ ,
SetFloat
ËË, 4
(
ËË4 5
ShaderUtilities
ËË5 D
.
ËËD E
ID_GradientScale
ËËE U
,
ËËU V!
m_AtlasPadding_prop
ËËW j
.
ËËj k
intValue
ËËk s
+
ËËt u
$num
ËËv w
)
ËËw x
;
ËËx y
}
ÈÈ$ %
}
ÍÍ  !
m_fontAsset
ÏÏ  +
.
ÏÏ+ ,!
UpdateFontAssetData
ÏÏ, ?
(
ÏÏ? @
)
ÏÏ@ A
;
ÏÏA B

GUIUtility
ÌÌ  *
.
ÌÌ* +
keyboardControl
ÌÌ+ :
=
ÌÌ; <
$num
ÌÌ= >
;
ÌÌ> ?
isAssetDirty
ÓÓ  ,
=
ÓÓ- .
true
ÓÓ/ 3
;
ÓÓ3 4-
UpdateFontAssetCreationSettings
ÒÒ  ?
(
ÒÒ? @
)
ÒÒ@ A
;
ÒÒA B
}
ıı 
if
˜˜ 
(
˜˜  
GUI
˜˜  #
.
˜˜# $
Button
˜˜$ *
(
˜˜* +
new
˜˜+ .
Rect
˜˜/ 3
(
˜˜3 4
rect
˜˜4 8
.
˜˜8 9
width
˜˜9 >
-
˜˜? @
$num
˜˜A C
,
˜˜C D
rect
˜˜E I
.
˜˜I J
y
˜˜J K
+
˜˜L M
$num
˜˜N P
,
˜˜P Q
$num
˜˜R T
,
˜˜T U
$num
˜˜V X
)
˜˜X Y
,
˜˜Y Z
new
˜˜[ ^

GUIContent
˜˜_ i
(
˜˜i j
$str
˜˜j r
)
˜˜r s
)
˜˜s t
)
˜˜t u
{
¯¯ /
!m_DisplayDestructiveChangeWarning
˘˘  A
=
˘˘B C
false
˘˘D I
;
˘˘I J,
RestoreAtlasGenerationSettings
˙˙  >
(
˙˙> ?
)
˙˙? @
;
˙˙@ A

GUIUtility
˚˚  *
.
˚˚* +
keyboardControl
˚˚+ :
=
˚˚; <
$num
˚˚= >
;
˚˚> ?
}
ˇˇ 
}
ÄÄ 
}
ÅÅ 
	EditorGUI
ÇÇ 
.
ÇÇ 
EndDisabledGroup
ÇÇ .
(
ÇÇ. /
)
ÇÇ/ 0
;
ÇÇ0 1
}
ÉÉ 
	EditorGUI
ÑÑ 
.
ÑÑ 
EndDisabledGroup
ÑÑ *
(
ÑÑ* +
)
ÑÑ+ ,
;
ÑÑ, -
EditorGUILayout
ÖÖ 
.
ÖÖ  
Space
ÖÖ  %
(
ÖÖ% &
)
ÖÖ& '
;
ÖÖ' (
}
ÜÜ 
rect
ãã 
=
ãã 
EditorGUILayout
ãã "
.
ãã" #
GetControlRect
ãã# 1
(
ãã1 2
false
ãã2 7
,
ãã7 8
$num
ãã9 ;
)
ãã; <
;
ãã< =
if
çç 
(
çç 
GUI
çç 
.
çç 
Button
çç 
(
çç 
rect
çç 
,
çç  
new
çç! $

GUIContent
çç% /
(
çç/ 0
$str
çç0 I
)
ççI J
,
ççJ K 
TMP_UIStyleManager
ççL ^
.
çç^ _
sectionHeader
çç_ l
)
ççl m
)
ççm n
UI_PanelState
éé 
.
éé  
fontAtlasInfoPanel
éé 0
=
éé1 2
!
éé3 4
UI_PanelState
éé4 A
.
ééA B 
fontAtlasInfoPanel
ééB T
;
ééT U
GUI
êê 
.
êê 
Label
êê 
(
êê 
rect
êê 
,
êê 
(
êê 
UI_PanelState
êê *
.
êê* + 
fontAtlasInfoPanel
êê+ =
?
êê> ?
$str
êê@ B
:
êêC D
s_UiStateLabel
êêE S
[
êêS T
$num
êêT U
]
êêU V
)
êêV W
,
êêW X 
TMP_UIStyleManager
êêY k
.
êêk l

rightLabel
êêl v
)
êêv w
;
êêw x
if
íí 
(
íí 
UI_PanelState
íí 
.
íí  
fontAtlasInfoPanel
íí 0
)
íí0 1
{
ìì 
	EditorGUI
îî 
.
îî 
indentLevel
îî %
=
îî& '
$num
îî( )
;
îî) *
GUI
ññ 
.
ññ 
enabled
ññ 
=
ññ 
false
ññ #
;
ññ# $
EditorGUILayout
óó 
.
óó  
PropertyField
óó  -
(
óó- .
font_atlas_prop
óó. =
,
óó= >
new
óó? B

GUIContent
óóC M
(
óóM N
$str
óóN Z
)
óóZ [
)
óó[ \
;
óó\ ]
EditorGUILayout
òò 
.
òò  
PropertyField
òò  -
(
òò- . 
font_material_prop
òò. @
,
òò@ A
new
òòB E

GUIContent
òòF P
(
òòP Q
$str
òòQ `
)
òò` a
)
òòa b
;
òòb c
GUI
ôô 
.
ôô 
enabled
ôô 
=
ôô 
true
ôô "
;
ôô" #
EditorGUILayout
öö 
.
öö  
Space
öö  %
(
öö% &
)
öö& '
;
öö' (
}
õõ 
string
ûû 
evt_cmd
ûû 
=
ûû 
Event
ûû "
.
ûû" #
current
ûû# *
.
ûû* +
commandName
ûû+ 6
;
ûû6 7
rect
¢¢ 
=
¢¢ 
EditorGUILayout
¢¢ "
.
¢¢" #
GetControlRect
¢¢# 1
(
¢¢1 2
false
¢¢2 7
,
¢¢7 8
$num
¢¢9 ;
)
¢¢; <
;
¢¢< =
if
§§ 
(
§§ 
GUI
§§ 
.
§§ 
Button
§§ 
(
§§ 
rect
§§ 
,
§§  
new
§§! $

GUIContent
§§% /
(
§§/ 0
$str
§§0 E
,
§§E F
$str§§G Œ
)§§Œ œ
,§§œ –"
TMP_UIStyleManager§§— „
.§§„ ‰
sectionHeader§§‰ Ò
)§§Ò Ú
)§§Ú Û
UI_PanelState
•• 
.
•• 
fontWeightPanel
•• -
=
••. /
!
••0 1
UI_PanelState
••1 >
.
••> ?
fontWeightPanel
••? N
;
••N O
GUI
ßß 
.
ßß 
Label
ßß 
(
ßß 
rect
ßß 
,
ßß 
(
ßß 
UI_PanelState
ßß *
.
ßß* +
fontWeightPanel
ßß+ :
?
ßß; <
$str
ßß= ?
:
ßß@ A
s_UiStateLabel
ßßB P
[
ßßP Q
$num
ßßQ R
]
ßßR S
)
ßßS T
,
ßßT U 
TMP_UIStyleManager
ßßV h
.
ßßh i

rightLabel
ßßi s
)
ßßs t
;
ßßt u
if
©© 
(
©© 
UI_PanelState
©© 
.
©© 
fontWeightPanel
©© -
)
©©- .
{
™™ 
EditorGUIUtility
´´  
.
´´  !

labelWidth
´´! +
*=
´´, .
$num
´´/ 4
;
´´4 5
EditorGUIUtility
¨¨  
.
¨¨  !

fieldWidth
¨¨! +
*=
¨¨, .
$num
¨¨/ 4
;
¨¨4 5
EditorGUILayout
ÆÆ 
.
ÆÆ  
BeginVertical
ÆÆ  -
(
ÆÆ- .
)
ÆÆ. /
;
ÆÆ/ 0
	EditorGUI
ØØ 
.
ØØ 
indentLevel
ØØ %
=
ØØ& '
$num
ØØ( )
;
ØØ) *
rect
∞∞ 
=
∞∞ 
EditorGUILayout
∞∞ &
.
∞∞& '
GetControlRect
∞∞' 5
(
∞∞5 6
true
∞∞6 :
)
∞∞: ;
;
∞∞; <
rect
±± 
.
±± 
x
±± 
+=
±± 
EditorGUIUtility
±± *
.
±±* +

labelWidth
±±+ 5
;
±±5 6
rect
≤≤ 
.
≤≤ 
width
≤≤ 
=
≤≤ 
(
≤≤ 
rect
≤≤ "
.
≤≤" #
width
≤≤# (
-
≤≤) *
EditorGUIUtility
≤≤+ ;
.
≤≤; <

labelWidth
≤≤< F
)
≤≤F G
/
≤≤H I
$num
≤≤J L
;
≤≤L M
GUI
≥≥ 
.
≥≥ 
Label
≥≥ 
(
≥≥ 
rect
≥≥ 
,
≥≥ 
$str
≥≥  2
,
≥≥2 3
EditorStyles
≥≥4 @
.
≥≥@ A
label
≥≥A F
)
≥≥F G
;
≥≥G H
rect
¥¥ 
.
¥¥ 
x
¥¥ 
+=
¥¥ 
rect
¥¥ 
.
¥¥ 
width
¥¥ $
;
¥¥$ %
GUI
µµ 
.
µµ 
Label
µµ 
(
µµ 
rect
µµ 
,
µµ 
$str
µµ  1
,
µµ1 2
EditorStyles
µµ3 ?
.
µµ? @
label
µµ@ E
)
µµE F
;
µµF G
	EditorGUI
∑∑ 
.
∑∑ 
indentLevel
∑∑ %
=
∑∑& '
$num
∑∑( )
;
∑∑) *
EditorGUILayout
ππ 
.
ππ  
PropertyField
ππ  -
(
ππ- .
fontWeights_prop
ππ. >
.
ππ> ?$
GetArrayElementAtIndex
ππ? U
(
ππU V
$num
ππV W
)
ππW X
,
ππX Y
new
ππZ ]

GUIContent
ππ^ h
(
ππh i
$str
ππi u
)
ππu v
)
ππv w
;
ππw x
EditorGUILayout
∫∫ 
.
∫∫  
PropertyField
∫∫  -
(
∫∫- .
fontWeights_prop
∫∫. >
.
∫∫> ?$
GetArrayElementAtIndex
∫∫? U
(
∫∫U V
$num
∫∫V W
)
∫∫W X
,
∫∫X Y
new
∫∫Z ]

GUIContent
∫∫^ h
(
∫∫h i
$str
∫∫i |
)
∫∫| }
)
∫∫} ~
;
∫∫~ 
EditorGUILayout
ªª 
.
ªª  
PropertyField
ªª  -
(
ªª- .
fontWeights_prop
ªª. >
.
ªª> ?$
GetArrayElementAtIndex
ªª? U
(
ªªU V
$num
ªªV W
)
ªªW X
,
ªªX Y
new
ªªZ ]

GUIContent
ªª^ h
(
ªªh i
$str
ªªi v
)
ªªv w
)
ªªw x
;
ªªx y
EditorGUILayout
ºº 
.
ºº  
PropertyField
ºº  -
(
ºº- .
fontWeights_prop
ºº. >
.
ºº> ?$
GetArrayElementAtIndex
ºº? U
(
ººU V
$num
ººV W
)
ººW X
,
ººX Y
new
ººZ ]

GUIContent
ºº^ h
(
ººh i
$str
ººi x
)
ººx y
)
ººy z
;
ººz {
EditorGUILayout
ΩΩ 
.
ΩΩ  
PropertyField
ΩΩ  -
(
ΩΩ- .
fontWeights_prop
ΩΩ. >
.
ΩΩ> ?$
GetArrayElementAtIndex
ΩΩ? U
(
ΩΩU V
$num
ΩΩV W
)
ΩΩW X
,
ΩΩX Y
new
ΩΩZ ]

GUIContent
ΩΩ^ h
(
ΩΩh i
$str
ΩΩi w
)
ΩΩw x
)
ΩΩx y
;
ΩΩy z
EditorGUILayout
ææ 
.
ææ  
PropertyField
ææ  -
(
ææ- .
fontWeights_prop
ææ. >
.
ææ> ?$
GetArrayElementAtIndex
ææ? U
(
ææU V
$num
ææV W
)
ææW X
,
ææX Y
new
ææZ ]

GUIContent
ææ^ h
(
ææh i
$str
ææi z
)
ææz {
)
ææ{ |
;
ææ| }
EditorGUILayout
øø 
.
øø  
PropertyField
øø  -
(
øø- .
fontWeights_prop
øø. >
.
øø> ?$
GetArrayElementAtIndex
øø? U
(
øøU V
$num
øøV W
)
øøW X
,
øøX Y
new
øøZ ]

GUIContent
øø^ h
(
øøh i
$str
øøi u
)
øøu v
)
øøv w
;
øøw x
EditorGUILayout
¿¿ 
.
¿¿  
PropertyField
¿¿  -
(
¿¿- .
fontWeights_prop
¿¿. >
.
¿¿> ?$
GetArrayElementAtIndex
¿¿? U
(
¿¿U V
$num
¿¿V W
)
¿¿W X
,
¿¿X Y
new
¿¿Z ]

GUIContent
¿¿^ h
(
¿¿h i
$str
¿¿i v
)
¿¿v w
)
¿¿w x
;
¿¿x y
EditorGUILayout
¡¡ 
.
¡¡  
PropertyField
¡¡  -
(
¡¡- .
fontWeights_prop
¡¡. >
.
¡¡> ?$
GetArrayElementAtIndex
¡¡? U
(
¡¡U V
$num
¡¡V W
)
¡¡W X
,
¡¡X Y
new
¡¡Z ]

GUIContent
¡¡^ h
(
¡¡h i
$str
¡¡i v
)
¡¡v w
)
¡¡w x
;
¡¡x y
EditorGUILayout
√√ 
.
√√  
EndVertical
√√  +
(
√√+ ,
)
√√, -
;
√√- .
EditorGUILayout
≈≈ 
.
≈≈  
Space
≈≈  %
(
≈≈% &
)
≈≈& '
;
≈≈' (
EditorGUILayout
«« 
.
««  
BeginVertical
««  -
(
««- .
)
««. /
;
««/ 0
EditorGUILayout
…… 
.
……  
BeginHorizontal
……  /
(
……/ 0
)
……0 1
;
……1 2
EditorGUILayout
   
.
    
PropertyField
    -
(
  - .#
font_normalStyle_prop
  . C
,
  C D
new
  E H

GUIContent
  I S
(
  S T
$str
  T c
)
  c d
)
  d e
;
  e f#
font_normalStyle_prop
ÀÀ %
.
ÀÀ% &

floatValue
ÀÀ& 0
=
ÀÀ1 2
Mathf
ÀÀ3 8
.
ÀÀ8 9
Clamp
ÀÀ9 >
(
ÀÀ> ?#
font_normalStyle_prop
ÀÀ? T
.
ÀÀT U

floatValue
ÀÀU _
,
ÀÀ_ `
-
ÀÀa b
$num
ÀÀb f
,
ÀÀf g
$num
ÀÀh l
)
ÀÀl m
;
ÀÀm n
if
ÃÃ 
(
ÃÃ 
GUI
ÃÃ 
.
ÃÃ 
changed
ÃÃ 
||
ÃÃ  "
evt_cmd
ÃÃ# *
==
ÃÃ+ -

k_UndoRedo
ÃÃ. 8
)
ÃÃ8 9
{
ÕÕ 
GUI
ŒŒ 
.
ŒŒ 
changed
ŒŒ 
=
ŒŒ  !
false
ŒŒ" '
;
ŒŒ' (
for
—— 
(
—— 
int
—— 
i
—— 
=
——  
$num
——! "
;
——" #
i
——$ %
<
——& '
m_materialPresets
——( 9
.
——9 :
Length
——: @
;
——@ A
i
——B C
++
——C E
)
——E F
m_materialPresets
““ )
[
““) *
i
““* +
]
““+ ,
.
““, -
SetFloat
““- 5
(
““5 6
$str
““6 E
,
““E F#
font_normalStyle_prop
““G \
.
““\ ]

floatValue
““] g
)
““g h
;
““h i
}
”” 
EditorGUILayout
’’ 
.
’’  
PropertyField
’’  -
(
’’- .!
font_boldStyle_prop
’’. A
,
’’A B
new
’’C F

GUIContent
’’G Q
(
’’Q R
$str
’’R _
)
’’_ `
)
’’` a
;
’’a b!
font_boldStyle_prop
÷÷ #
.
÷÷# $

floatValue
÷÷$ .
=
÷÷/ 0
Mathf
÷÷1 6
.
÷÷6 7
Clamp
÷÷7 <
(
÷÷< =!
font_boldStyle_prop
÷÷= P
.
÷÷P Q

floatValue
÷÷Q [
,
÷÷[ \
-
÷÷] ^
$num
÷÷^ b
,
÷÷b c
$num
÷÷d h
)
÷÷h i
;
÷÷i j
if
◊◊ 
(
◊◊ 
GUI
◊◊ 
.
◊◊ 
changed
◊◊ 
||
◊◊  "
evt_cmd
◊◊# *
==
◊◊+ -

k_UndoRedo
◊◊. 8
)
◊◊8 9
{
ÿÿ 
GUI
ŸŸ 
.
ŸŸ 
changed
ŸŸ 
=
ŸŸ  !
false
ŸŸ" '
;
ŸŸ' (
for
‹‹ 
(
‹‹ 
int
‹‹ 
i
‹‹ 
=
‹‹  
$num
‹‹! "
;
‹‹" #
i
‹‹$ %
<
‹‹& '
m_materialPresets
‹‹( 9
.
‹‹9 :
Length
‹‹: @
;
‹‹@ A
i
‹‹B C
++
‹‹C E
)
‹‹E F
m_materialPresets
›› )
[
››) *
i
››* +
]
››+ ,
.
››, -
SetFloat
››- 5
(
››5 6
$str
››6 C
,
››C D!
font_boldStyle_prop
››E X
.
››X Y

floatValue
››Y c
)
››c d
;
››d e
}
ﬁﬁ 
EditorGUILayout
ﬂﬂ 
.
ﬂﬂ  
EndHorizontal
ﬂﬂ  -
(
ﬂﬂ- .
)
ﬂﬂ. /
;
ﬂﬂ/ 0
EditorGUILayout
·· 
.
··  
BeginHorizontal
··  /
(
··/ 0
)
··0 1
;
··1 2
EditorGUILayout
‚‚ 
.
‚‚  
PropertyField
‚‚  -
(
‚‚- .%
font_normalSpacing_prop
‚‚. E
,
‚‚E F
new
‚‚G J

GUIContent
‚‚K U
(
‚‚U V
$str
‚‚V f
)
‚‚f g
)
‚‚g h
;
‚‚h i%
font_normalSpacing_prop
„„ '
.
„„' (

floatValue
„„( 2
=
„„3 4
Mathf
„„5 :
.
„„: ;
Clamp
„„; @
(
„„@ A%
font_normalSpacing_prop
„„A X
.
„„X Y

floatValue
„„Y c
,
„„c d
-
„„e f
$num
„„f i
,
„„i j
$num
„„k n
)
„„n o
;
„„o p
if
‰‰ 
(
‰‰ 
GUI
‰‰ 
.
‰‰ 
changed
‰‰ 
||
‰‰  "
evt_cmd
‰‰# *
==
‰‰+ -

k_UndoRedo
‰‰. 8
)
‰‰8 9
{
ÂÂ 
GUI
ÊÊ 
.
ÊÊ 
changed
ÊÊ 
=
ÊÊ  !
false
ÊÊ" '
;
ÊÊ' (
}
ÁÁ 
EditorGUILayout
ÈÈ 
.
ÈÈ  
PropertyField
ÈÈ  -
(
ÈÈ- .#
font_boldSpacing_prop
ÈÈ. C
,
ÈÈC D
new
ÈÈE H

GUIContent
ÈÈI S
(
ÈÈS T
$str
ÈÈT b
)
ÈÈb c
)
ÈÈc d
;
ÈÈd e#
font_boldSpacing_prop
ÍÍ %
.
ÍÍ% &

floatValue
ÍÍ& 0
=
ÍÍ1 2
Mathf
ÍÍ3 8
.
ÍÍ8 9
Clamp
ÍÍ9 >
(
ÍÍ> ?#
font_boldSpacing_prop
ÍÍ? T
.
ÍÍT U

floatValue
ÍÍU _
,
ÍÍ_ `
$num
ÍÍa b
,
ÍÍb c
$num
ÍÍd g
)
ÍÍg h
;
ÍÍh i
if
ÎÎ 
(
ÎÎ 
GUI
ÎÎ 
.
ÎÎ 
changed
ÎÎ 
||
ÎÎ  "
evt_cmd
ÎÎ# *
==
ÎÎ+ -

k_UndoRedo
ÎÎ. 8
)
ÎÎ8 9
{
ÏÏ 
GUI
ÌÌ 
.
ÌÌ 
changed
ÌÌ 
=
ÌÌ  !
false
ÌÌ" '
;
ÌÌ' (
}
ÓÓ 
EditorGUILayout
ÔÔ 
.
ÔÔ  
EndHorizontal
ÔÔ  -
(
ÔÔ- .
)
ÔÔ. /
;
ÔÔ/ 0
EditorGUILayout
ÒÒ 
.
ÒÒ  
BeginHorizontal
ÒÒ  /
(
ÒÒ/ 0
)
ÒÒ0 1
;
ÒÒ1 2
EditorGUILayout
ÚÚ 
.
ÚÚ  
PropertyField
ÚÚ  -
(
ÚÚ- .#
font_italicStyle_prop
ÚÚ. C
,
ÚÚC D
new
ÚÚE H

GUIContent
ÚÚI S
(
ÚÚS T
$str
ÚÚT b
)
ÚÚb c
)
ÚÚc d
;
ÚÚd e#
font_italicStyle_prop
ÛÛ %
.
ÛÛ% &
intValue
ÛÛ& .
=
ÛÛ/ 0
Mathf
ÛÛ1 6
.
ÛÛ6 7
Clamp
ÛÛ7 <
(
ÛÛ< =#
font_italicStyle_prop
ÛÛ= R
.
ÛÛR S
intValue
ÛÛS [
,
ÛÛ[ \
$num
ÛÛ] _
,
ÛÛ_ `
$num
ÛÛa c
)
ÛÛc d
;
ÛÛd e
EditorGUILayout
ıı 
.
ıı  
PropertyField
ıı  -
(
ıı- .
font_tabSize_prop
ıı. ?
,
ıı? @
new
ııA D

GUIContent
ııE O
(
ııO P
$str
ııP ^
)
ıı^ _
)
ıı_ `
;
ıı` a
EditorGUILayout
ˆˆ 
.
ˆˆ  
EndHorizontal
ˆˆ  -
(
ˆˆ- .
)
ˆˆ. /
;
ˆˆ/ 0
EditorGUILayout
˜˜ 
.
˜˜  
EndVertical
˜˜  +
(
˜˜+ ,
)
˜˜, -
;
˜˜- .
EditorGUILayout
¯¯ 
.
¯¯  
Space
¯¯  %
(
¯¯% &
)
¯¯& '
;
¯¯' (
}
˘˘ 
EditorGUIUtility
˚˚ 
.
˚˚ 

labelWidth
˚˚ '
=
˚˚( )
$num
˚˚* +
;
˚˚+ ,
EditorGUIUtility
¸¸ 
.
¸¸ 

fieldWidth
¸¸ '
=
¸¸( )
$num
¸¸* +
;
¸¸+ ,
rect
ÅÅ 
=
ÅÅ 
EditorGUILayout
ÅÅ "
.
ÅÅ" #
GetControlRect
ÅÅ# 1
(
ÅÅ1 2
false
ÅÅ2 7
,
ÅÅ7 8
$num
ÅÅ9 ;
)
ÅÅ; <
;
ÅÅ< =
	EditorGUI
ÇÇ 
.
ÇÇ 
indentLevel
ÇÇ !
=
ÇÇ" #
$num
ÇÇ$ %
;
ÇÇ% &
if
ÉÉ 
(
ÉÉ 
GUI
ÉÉ 
.
ÉÉ 
Button
ÉÉ 
(
ÉÉ 
rect
ÉÉ 
,
ÉÉ  
new
ÉÉ! $

GUIContent
ÉÉ% /
(
ÉÉ/ 0
$str
ÉÉ0 M
,
ÉÉM N
$strÉÉO ƒ
)ÉÉƒ ≈
,ÉÉ≈ ∆"
TMP_UIStyleManagerÉÉ« Ÿ
.ÉÉŸ ⁄
sectionHeaderÉÉ⁄ Á
)ÉÉÁ Ë
)ÉÉË È
UI_PanelState
ÑÑ 
.
ÑÑ $
fallbackFontAssetPanel
ÑÑ 4
=
ÑÑ5 6
!
ÑÑ7 8
UI_PanelState
ÑÑ8 E
.
ÑÑE F$
fallbackFontAssetPanel
ÑÑF \
;
ÑÑ\ ]
GUI
ÜÜ 
.
ÜÜ 
Label
ÜÜ 
(
ÜÜ 
rect
ÜÜ 
,
ÜÜ 
(
ÜÜ 
UI_PanelState
ÜÜ *
.
ÜÜ* +$
fallbackFontAssetPanel
ÜÜ+ A
?
ÜÜB C
$str
ÜÜD F
:
ÜÜG H
s_UiStateLabel
ÜÜI W
[
ÜÜW X
$num
ÜÜX Y
]
ÜÜY Z
)
ÜÜZ [
,
ÜÜ[ \ 
TMP_UIStyleManager
ÜÜ] o
.
ÜÜo p

rightLabel
ÜÜp z
)
ÜÜz {
;
ÜÜ{ |
if
àà 
(
àà 
UI_PanelState
àà 
.
àà $
fallbackFontAssetPanel
àà 4
)
àà4 5
{
ââ 
EditorGUIUtility
ää  
.
ää  !

labelWidth
ää! +
=
ää, -
$num
ää. 1
;
ää1 2
	EditorGUI
ãã 
.
ãã 
indentLevel
ãã %
=
ãã& '
$num
ãã( )
;
ãã) *
m_list
çç 
.
çç 
DoLayoutList
çç #
(
çç# $
)
çç$ %
;
çç% &
EditorGUILayout
éé 
.
éé  
Space
éé  %
(
éé% &
)
éé& '
;
éé' (
}
èè 
EditorGUIUtility
îî 
.
îî 

labelWidth
îî '
=
îî( )

labelWidth
îî* 4
;
îî4 5
EditorGUIUtility
ïï 
.
ïï 

fieldWidth
ïï '
=
ïï( )

fieldWidth
ïï* 4
;
ïï4 5
	EditorGUI
ññ 
.
ññ 
indentLevel
ññ !
=
ññ" #
$num
ññ$ %
;
ññ% &
rect
óó 
=
óó 
EditorGUILayout
óó "
.
óó" #
GetControlRect
óó# 1
(
óó1 2
false
óó2 7
,
óó7 8
$num
óó9 ;
)
óó; <
;
óó< =
int
ôô 
characterCount
ôô 
=
ôô  
m_fontAsset
ôô! ,
.
ôô, -
characterTable
ôô- ;
.
ôô; <
Count
ôô< A
;
ôôA B
if
õõ 
(
õõ 
GUI
õõ 
.
õõ 
Button
õõ 
(
õõ 
rect
õõ 
,
õõ  
new
õõ! $

GUIContent
õõ% /
(
õõ/ 0
$str
õõ0 L
+
õõM N
characterCount
õõO ]
+
õõ^ _
$str
õõ` c
+
õõd e
(
õõf g
rect
õõg k
.
õõk l
width
õõl q
>
õõr s
$num
õõt w
?
õõx y
$strõõz á
:õõà â
$strõõä å
)õõå ç
,õõç é
$strõõè ¡
)õõ¡ ¬
,õõ¬ √"
TMP_UIStyleManagerõõƒ ÷
.õõ÷ ◊
sectionHeaderõõ◊ ‰
)õõ‰ Â
)õõÂ Ê
UI_PanelState
úú 
.
úú !
characterTablePanel
úú 1
=
úú2 3
!
úú4 5
UI_PanelState
úú5 B
.
úúB C!
characterTablePanel
úúC V
;
úúV W
GUI
ûû 
.
ûû 
Label
ûû 
(
ûû 
rect
ûû 
,
ûû 
(
ûû 
UI_PanelState
ûû *
.
ûû* +!
characterTablePanel
ûû+ >
?
ûû? @
$str
ûûA C
:
ûûD E
s_UiStateLabel
ûûF T
[
ûûT U
$num
ûûU V
]
ûûV W
)
ûûW X
,
ûûX Y 
TMP_UIStyleManager
ûûZ l
.
ûûl m

rightLabel
ûûm w
)
ûûw x
;
ûûx y
if
†† 
(
†† 
UI_PanelState
†† 
.
†† !
characterTablePanel
†† 1
)
††1 2
{
°° 
int
¢¢ 
	arraySize
¢¢ 
=
¢¢ #
m_CharacterTable_prop
¢¢  5
.
¢¢5 6
	arraySize
¢¢6 ?
;
¢¢? @
int
££ 
itemsPerPage
££  
=
££! "
$num
££# %
;
££% &
EditorGUILayout
¶¶ 
.
¶¶  
BeginVertical
¶¶  -
(
¶¶- .
EditorStyles
¶¶. :
.
¶¶: ;
helpBox
¶¶; B
)
¶¶B C
;
¶¶C D
{
ßß 
EditorGUILayout
™™ #
.
™™# $
BeginHorizontal
™™$ 3
(
™™3 4
)
™™4 5
;
™™5 6
{
´´ 
EditorGUIUtility
¨¨ (
.
¨¨( )

labelWidth
¨¨) 3
=
¨¨4 5
$num
¨¨6 :
;
¨¨: ;
	EditorGUI
≠≠ !
.
≠≠! "
BeginChangeCheck
≠≠" 2
(
≠≠2 3
)
≠≠3 4
;
≠≠4 5
string
ÆÆ 
searchPattern
ÆÆ ,
=
ÆÆ- .
EditorGUILayout
ÆÆ/ >
.
ÆÆ> ?
	TextField
ÆÆ? H
(
ÆÆH I
$str
ÆÆI [
,
ÆÆ[ \&
m_CharacterSearchPattern
ÆÆ] u
,
ÆÆu v
$strÆÆw à
)ÆÆà â
;ÆÆâ ä
if
ØØ 
(
ØØ 
	EditorGUI
ØØ %
.
ØØ% &
EndChangeCheck
ØØ& 4
(
ØØ4 5
)
ØØ5 6
||
ØØ7 9
m_isSearchDirty
ØØ: I
)
ØØI J
{
∞∞ 
if
±± 
(
±±  
string
±±  &
.
±±& '
IsNullOrEmpty
±±' 4
(
±±4 5
searchPattern
±±5 B
)
±±B C
==
±±D F
false
±±G L
)
±±L M
{
≤≤ &
m_CharacterSearchPattern
≥≥  8
=
≥≥9 :
searchPattern
≥≥; H
;
≥≥H I"
SearchCharacterTable
∂∂  4
(
∂∂5 6&
m_CharacterSearchPattern
∂∂6 N
,
∂∂N O
ref
∂∂P S#
m_CharacterSearchList
∂∂T i
)
∂∂i j
;
∂∂j k
}
∑∑ 
else
∏∏  &
m_CharacterSearchPattern
ππ  8
=
ππ9 :
null
ππ; ?
;
ππ? @
m_isSearchDirty
ªª +
=
ªª, -
false
ªª. 3
;
ªª3 4
}
ºº 
string
ææ 
	styleName
ææ (
=
ææ) *
string
ææ+ 1
.
ææ1 2
IsNullOrEmpty
ææ2 ?
(
ææ? @&
m_CharacterSearchPattern
ææ@ X
)
ææX Y
?
ææZ [
$str
ææ\ u
:
ææv w
$strææx å
;ææå ç
if
øø 
(
øø 
	GUILayout
øø %
.
øø% &
Button
øø& ,
(
øø, -

GUIContent
øø- 7
.
øø7 8
none
øø8 <
,
øø< =
	styleName
øø> G
)
øøG H
)
øøH I
{
¿¿ 

GUIUtility
¡¡ &
.
¡¡& '
keyboardControl
¡¡' 6
=
¡¡7 8
$num
¡¡9 :
;
¡¡: ;&
m_CharacterSearchPattern
¬¬ 4
=
¬¬5 6
string
¬¬7 =
.
¬¬= >
Empty
¬¬> C
;
¬¬C D
}
√√ 
}
ƒƒ 
EditorGUILayout
≈≈ #
.
≈≈# $
EndHorizontal
≈≈$ 1
(
≈≈1 2
)
≈≈2 3
;
≈≈3 4
if
…… 
(
…… 
!
…… 
string
…… 
.
……  
IsNullOrEmpty
……  -
(
……- .&
m_CharacterSearchPattern
……. F
)
……F G
)
……G H
	arraySize
   !
=
  " ##
m_CharacterSearchList
  $ 9
.
  9 :
Count
  : ?
;
  ? @#
DisplayPageNavigation
ÃÃ )
(
ÃÃ) *
ref
ÃÃ* -$
m_CurrentCharacterPage
ÃÃ. D
,
ÃÃD E
	arraySize
ÃÃF O
,
ÃÃO P
itemsPerPage
ÃÃQ ]
)
ÃÃ] ^
;
ÃÃ^ _
}
ÕÕ 
EditorGUILayout
ŒŒ 
.
ŒŒ  
EndVertical
ŒŒ  +
(
ŒŒ+ ,
)
ŒŒ, -
;
ŒŒ- .
if
—— 
(
—— 
	arraySize
—— 
>
—— 
$num
——  !
)
——! "
{
““ 
for
‘‘ 
(
‘‘ 
int
‘‘ 
i
‘‘ 
=
‘‘  
itemsPerPage
‘‘! -
*
‘‘. /$
m_CurrentCharacterPage
‘‘0 F
;
‘‘F G
i
‘‘H I
<
‘‘J K
	arraySize
‘‘L U
&&
‘‘V X
i
‘‘Y Z
<
‘‘[ \
itemsPerPage
‘‘] i
*
‘‘j k
(
‘‘l m%
m_CurrentCharacterPage‘‘m É
+‘‘Ñ Ö
$num‘‘Ü á
)‘‘á à
;‘‘à â
i‘‘ä ã
++‘‘ã ç
)‘‘ç é
{
’’ 
Rect
◊◊  
elementStartRegion
◊◊ /
=
◊◊0 1
GUILayoutUtility
◊◊2 B
.
◊◊B C
GetRect
◊◊C J
(
◊◊J K
$num
◊◊K M
,
◊◊M N
$num
◊◊O Q
,
◊◊Q R
	GUILayout
◊◊S \
.
◊◊\ ]
ExpandWidth
◊◊] h
(
◊◊h i
true
◊◊i m
)
◊◊m n
)
◊◊n o
;
◊◊o p
int
ŸŸ 
elementIndex
ŸŸ (
=
ŸŸ) *
i
ŸŸ+ ,
;
ŸŸ, -
if
⁄⁄ 
(
⁄⁄ 
!
⁄⁄ 
string
⁄⁄ #
.
⁄⁄# $
IsNullOrEmpty
⁄⁄$ 1
(
⁄⁄1 2&
m_CharacterSearchPattern
⁄⁄2 J
)
⁄⁄J K
)
⁄⁄K L
elementIndex
€€ (
=
€€) *#
m_CharacterSearchList
€€+ @
[
€€@ A
i
€€A B
]
€€B C
;
€€C D 
SerializedProperty
›› *
characterProperty
››+ <
=
››= >#
m_CharacterTable_prop
››? T
.
››T U$
GetArrayElementAtIndex
››U k
(
››k l
elementIndex
››l x
)
››x y
;
››y z
EditorGUILayout
ﬂﬂ '
.
ﬂﬂ' (
BeginVertical
ﬂﬂ( 5
(
ﬂﬂ5 6
EditorStyles
ﬂﬂ6 B
.
ﬂﬂB C
helpBox
ﬂﬂC J
)
ﬂﬂJ K
;
ﬂﬂK L
	EditorGUI
·· !
.
··! " 
BeginDisabledGroup
··" 4
(
··4 5
i
··5 6
!=
··7 9'
m_SelectedCharacterRecord
··: S
)
··S T
;
··T U
{
‚‚ 
EditorGUILayout
„„ +
.
„„+ ,
PropertyField
„„, 9
(
„„9 :
characterProperty
„„: K
)
„„K L
;
„„L M
}
‰‰ 
	EditorGUI
ÂÂ !
.
ÂÂ! "
EndDisabledGroup
ÂÂ" 2
(
ÂÂ2 3
)
ÂÂ3 4
;
ÂÂ4 5
EditorGUILayout
ÁÁ '
.
ÁÁ' (
EndVertical
ÁÁ( 3
(
ÁÁ3 4
)
ÁÁ4 5
;
ÁÁ5 6
Rect
ÍÍ 
elementEndRegion
ÍÍ -
=
ÍÍ. /
GUILayoutUtility
ÍÍ0 @
.
ÍÍ@ A
GetRect
ÍÍA H
(
ÍÍH I
$num
ÍÍI K
,
ÍÍK L
$num
ÍÍM O
,
ÍÍO P
	GUILayout
ÍÍQ Z
.
ÍÍZ [
ExpandWidth
ÍÍ[ f
(
ÍÍf g
true
ÍÍg k
)
ÍÍk l
)
ÍÍl m
;
ÍÍm n
Rect
ÌÌ 
selectionArea
ÌÌ *
=
ÌÌ+ ,
new
ÌÌ- 0
Rect
ÌÌ1 5
(
ÌÌ5 6 
elementStartRegion
ÌÌ6 H
.
ÌÌH I
x
ÌÌI J
,
ÌÌJ K 
elementStartRegion
ÌÌL ^
.
ÌÌ^ _
y
ÌÌ_ `
,
ÌÌ` a
elementEndRegion
ÌÌb r
.
ÌÌr s
width
ÌÌs x
,
ÌÌx y
elementEndRegionÌÌz ä
.ÌÌä ã
yÌÌã å
-ÌÌç é"
elementStartRegionÌÌè °
.ÌÌ° ¢
yÌÌ¢ £
)ÌÌ£ §
;ÌÌ§ •
if
ÓÓ 
(
ÓÓ 
DoSelectionCheck
ÓÓ ,
(
ÓÓ, -
selectionArea
ÓÓ- :
)
ÓÓ: ;
)
ÓÓ; <
{
ÔÔ 
if
 
(
  '
m_SelectedCharacterRecord
  9
==
: <
i
= >
)
> ?'
m_SelectedCharacterRecord
ÒÒ  9
=
ÒÒ: ;
-
ÒÒ< =
$num
ÒÒ= >
;
ÒÒ> ?
else
ÚÚ  
{
ÛÛ '
m_SelectedCharacterRecord
ÙÙ  9
=
ÙÙ: ;
i
ÙÙ< =
;
ÙÙ= >#
m_AddCharacterWarning
ıı  5
.
ıı5 6
	isEnabled
ıı6 ?
=
ıı@ A
false
ııB G
;
ııG H
m_unicodeHexLabel
ˆˆ  1
=
ˆˆ2 3%
k_placeholderUnicodeHex
ˆˆ4 K
;
ˆˆK L

GUIUtility
˜˜  *
.
˜˜* +
keyboardControl
˜˜+ :
=
˜˜; <
$num
˜˜= >
;
˜˜> ?
}
¯¯ 
}
˘˘ 
if
¸¸ 
(
¸¸ '
m_SelectedCharacterRecord
¸¸ 5
==
¸¸6 8
i
¸¸9 :
)
¸¸: ;
{
˝˝ 
TMP_EditorUtility
˛˛ -
.
˛˛- .
DrawBox
˛˛. 5
(
˛˛5 6
selectionArea
˛˛6 C
,
˛˛C D
$num
˛˛E G
,
˛˛G H
new
˛˛I L
Color32
˛˛M T
(
˛˛T U
$num
˛˛U W
,
˛˛W X
$num
˛˛Y \
,
˛˛\ ]
$num
˛˛^ a
,
˛˛a b
$num
˛˛c f
)
˛˛f g
)
˛˛g h
;
˛˛h i
Rect
ÅÅ  
controlRect
ÅÅ! ,
=
ÅÅ- .
EditorGUILayout
ÅÅ/ >
.
ÅÅ> ?
GetControlRect
ÅÅ? M
(
ÅÅM N
true
ÅÅN R
,
ÅÅR S
EditorGUIUtility
ÅÅT d
.
ÅÅd e
singleLineHeight
ÅÅe u
*
ÅÅv w
$num
ÅÅx z
)
ÅÅz {
;
ÅÅ{ |
float
ÇÇ !
optionAreaWidth
ÇÇ" 1
=
ÇÇ2 3
controlRect
ÇÇ4 ?
.
ÇÇ? @
width
ÇÇ@ E
*
ÇÇF G
$num
ÇÇH L
;
ÇÇL M
float
ÉÉ !
btnWidth
ÉÉ" *
=
ÉÉ+ ,
optionAreaWidth
ÉÉ- <
/
ÉÉ= >
$num
ÉÉ? @
;
ÉÉ@ A
Rect
ÖÖ  
position
ÖÖ! )
=
ÖÖ* +
new
ÖÖ, /
Rect
ÖÖ0 4
(
ÖÖ4 5
controlRect
ÖÖ5 @
.
ÖÖ@ A
x
ÖÖA B
+
ÖÖC D
controlRect
ÖÖE P
.
ÖÖP Q
width
ÖÖQ V
*
ÖÖW X
$num
ÖÖY \
,
ÖÖ\ ]
controlRect
ÖÖ^ i
.
ÖÖi j
y
ÖÖj k
,
ÖÖk l
btnWidth
ÖÖm u
,
ÖÖu v
controlRectÖÖw Ç
.ÖÖÇ É
heightÖÖÉ â
)ÖÖâ ä
;ÖÖä ã
GUI
àà 
.
àà  
enabled
àà  '
=
àà( )
!
àà* +
string
àà+ 1
.
àà1 2
IsNullOrEmpty
àà2 ?
(
àà? @
m_dstUnicode
àà@ L
)
ààL M
;
ààM N
if
ââ 
(
ââ  
GUI
ââ  #
.
ââ# $
Button
ââ$ *
(
ââ* +
position
ââ+ 3
,
ââ3 4
new
ââ5 8

GUIContent
ââ9 C
(
ââC D
$str
ââD M
)
ââM N
)
ââN O
)
ââO P
{
ää 

GUIUtility
ãã  *
.
ãã* +
keyboardControl
ãã+ :
=
ãã; <
$num
ãã= >
;
ãã> ?
int
éé  #

dstGlyphID
éé$ .
=
éé/ 0
TMP_TextUtilities
éé1 B
.
ééB C
StringHexToInt
ééC Q
(
ééQ R
m_dstUnicode
ééR ^
)
éé^ _
;
éé_ `
if
ëë  "
(
ëë# $
!
ëë$ %
AddNewCharacter
ëë% 4
(
ëë4 5
elementIndex
ëë5 A
,
ëëA B

dstGlyphID
ëëC M
)
ëëM N
)
ëëN O
{
íí  !#
m_AddCharacterWarning
ìì$ 9
.
ìì9 :
	isEnabled
ìì: C
=
ììD E
true
ììF J
;
ììJ K#
m_AddCharacterWarning
îî$ 9
.
îî9 :
expirationTime
îî: H
=
îîI J
EditorApplication
îîK \
.
îî\ ]
timeSinceStartup
îî] m
+
îîn o
$num
îîp q
;
îîq r
}
ïï  !
m_dstUnicode
óó  ,
=
óó- .
string
óó/ 5
.
óó5 6
Empty
óó6 ;
;
óó; <
m_isSearchDirty
òò  /
=
òò0 1
true
òò2 6
;
òò6 7 
TMPro_EventManager
öö  2
.
öö2 3&
ON_FONT_PROPERTY_CHANGED
öö3 K
(
ööK L
true
ööL P
,
ööP Q
m_fontAsset
ööR ]
)
öö] ^
;
öö^ _
}
õõ 
GUI
ûû 
.
ûû  
enabled
ûû  '
=
ûû( )
true
ûû* .
;
ûû. /
position
üü $
.
üü$ %
x
üü% &
+=
üü' )
btnWidth
üü* 2
;
üü2 3
GUI
°° 
.
°°   
SetNextControlName
°°  2
(
°°2 3
$str
°°3 F
)
°°F G
;
°°G H
m_dstUnicode
¢¢ (
=
¢¢) *
	EditorGUI
¢¢+ 4
.
¢¢4 5
	TextField
¢¢5 >
(
¢¢> ?
position
¢¢? G
,
¢¢G H
m_dstUnicode
¢¢I U
)
¢¢U V
;
¢¢V W
	EditorGUI
•• %
.
••% &

LabelField
••& 0
(
••0 1
position
••1 9
,
••9 :
new
••; >

GUIContent
••? I
(
••I J
m_unicodeHexLabel
••J [
,
••[ \
$str••] è
)••è ê
,••ê ë"
TMP_UIStyleManager••í §
.••§ •
label••• ™
)••™ ´
;••´ ¨
if
®® 
(
®®  
GUI
®®  #
.
®®# $%
GetNameOfFocusedControl
®®$ ;
(
®®; <
)
®®< =
==
®®> @
$str
®®A T
)
®®T U
{
©© 
m_unicodeHexLabel
™™  1
=
™™2 3
string
™™4 :
.
™™: ;
Empty
™™; @
;
™™@ A
char
≠≠  $
chr
≠≠% (
=
≠≠) *
Event
≠≠+ 0
.
≠≠0 1
current
≠≠1 8
.
≠≠8 9
	character
≠≠9 B
;
≠≠B C
if
ÆÆ  "
(
ÆÆ# $
(
ÆÆ$ %
chr
ÆÆ% (
<
ÆÆ) *
$char
ÆÆ+ .
||
ÆÆ/ 1
chr
ÆÆ2 5
>
ÆÆ6 7
$char
ÆÆ8 ;
)
ÆÆ; <
&&
ÆÆ= ?
(
ÆÆ@ A
chr
ÆÆA D
<
ÆÆE F
$char
ÆÆG J
||
ÆÆK M
chr
ÆÆN Q
>
ÆÆR S
$char
ÆÆT W
)
ÆÆW X
&&
ÆÆY [
(
ÆÆ\ ]
chr
ÆÆ] `
<
ÆÆa b
$char
ÆÆc f
||
ÆÆg i
chr
ÆÆj m
>
ÆÆn o
$char
ÆÆp s
)
ÆÆs t
)
ÆÆt u
{
ØØ  !
Event
∞∞$ )
.
∞∞) *
current
∞∞* 1
.
∞∞1 2
	character
∞∞2 ;
=
∞∞< =
$char
∞∞> B
;
∞∞B C
}
±±  !
}
≤≤ 
else
≥≥  
{
¥¥ 
m_unicodeHexLabel
µµ  1
=
µµ2 3%
k_placeholderUnicodeHex
µµ4 K
;
µµK L
}
∑∑ 
position
ªª $
.
ªª$ %
x
ªª% &
+=
ªª' )
btnWidth
ªª* 2
;
ªª2 3
if
ºº 
(
ºº  
GUI
ºº  #
.
ºº# $
Button
ºº$ *
(
ºº* +
position
ºº+ 3
,
ºº3 4
$str
ºº5 =
)
ºº= >
)
ºº> ?
{
ΩΩ 

GUIUtility
ææ  *
.
ææ* +
keyboardControl
ææ+ :
=
ææ; <
$num
ææ= >
;
ææ> ?%
RemoveCharacterFromList
¿¿  7
(
¿¿7 8
elementIndex
¿¿8 D
)
¿¿D E
;
¿¿E F
isAssetDirty
¬¬  ,
=
¬¬- .
true
¬¬/ 3
;
¬¬3 4'
m_SelectedCharacterRecord
√√  9
=
√√: ;
-
√√< =
$num
√√= >
;
√√> ?
m_isSearchDirty
ƒƒ  /
=
ƒƒ0 1
true
ƒƒ2 6
;
ƒƒ6 7
break
≈≈  %
;
≈≈% &
}
∆∆ 
if
»» 
(
»»  #
m_AddCharacterWarning
»»  5
.
»»5 6
	isEnabled
»»6 ?
&&
»»@ B
EditorApplication
»»C T
.
»»T U
timeSinceStartup
»»U e
<
»»f g#
m_AddCharacterWarning
»»h }
.
»»} ~
expirationTime»»~ å
)»»å ç
{
…… 
EditorGUILayout
    /
.
  / 0
HelpBox
  0 7
(
  7 8
$str
  8 e
,
  e f
MessageType
  g r
.
  r s
Warning
  s z
)
  z {
;
  { |
}
ÀÀ 
}
ÕÕ 
}
ŒŒ 
}
œœ #
DisplayPageNavigation
—— %
(
——% &
ref
——& )$
m_CurrentCharacterPage
——* @
,
——@ A
	arraySize
——B K
,
——K L
itemsPerPage
——M Y
)
——Y Z
;
——Z [
EditorGUILayout
”” 
.
””  
Space
””  %
(
””% &
)
””& '
;
””' (
}
‘‘ 
EditorGUIUtility
ŸŸ 
.
ŸŸ 

labelWidth
ŸŸ '
=
ŸŸ( )

labelWidth
ŸŸ* 4
;
ŸŸ4 5
EditorGUIUtility
⁄⁄ 
.
⁄⁄ 

fieldWidth
⁄⁄ '
=
⁄⁄( )

fieldWidth
⁄⁄* 4
;
⁄⁄4 5
	EditorGUI
€€ 
.
€€ 
indentLevel
€€ !
=
€€" #
$num
€€$ %
;
€€% &
rect
‹‹ 
=
‹‹ 
EditorGUILayout
‹‹ "
.
‹‹" #
GetControlRect
‹‹# 1
(
‹‹1 2
false
‹‹2 7
,
‹‹7 8
$num
‹‹9 ;
)
‹‹; <
;
‹‹< =
GUIStyle
ﬁﬁ 
glyphPanelStyle
ﬁﬁ $
=
ﬁﬁ% &
new
ﬁﬁ' *
GUIStyle
ﬁﬁ+ 3
(
ﬁﬁ3 4
EditorStyles
ﬁﬁ4 @
.
ﬁﬁ@ A
helpBox
ﬁﬁA H
)
ﬁﬁH I
;
ﬁﬁI J
int
‡‡ 

glyphCount
‡‡ 
=
‡‡ 
m_fontAsset
‡‡ (
.
‡‡( )

glyphTable
‡‡) 3
.
‡‡3 4
Count
‡‡4 9
;
‡‡9 :
if
‚‚ 
(
‚‚ 
GUI
‚‚ 
.
‚‚ 
Button
‚‚ 
(
‚‚ 
rect
‚‚ 
,
‚‚  
new
‚‚! $

GUIContent
‚‚% /
(
‚‚/ 0
$str
‚‚0 H
+
‚‚I J

glyphCount
‚‚K U
+
‚‚V W
$str
‚‚X [
+
‚‚\ ]
(
‚‚^ _
rect
‚‚_ c
.
‚‚c d
width
‚‚d i
>
‚‚j k
$num
‚‚l o
?
‚‚p q
$str
‚‚r {
:
‚‚| }
$str‚‚~ Ä
)‚‚Ä Å
,‚‚Å Ç
$str‚‚É ±
)‚‚± ≤
,‚‚≤ ≥"
TMP_UIStyleManager‚‚¥ ∆
.‚‚∆ «
sectionHeader‚‚« ‘
)‚‚‘ ’
)‚‚’ ÷
UI_PanelState
„„ 
.
„„ 
glyphTablePanel
„„ -
=
„„. /
!
„„0 1
UI_PanelState
„„1 >
.
„„> ?
glyphTablePanel
„„? N
;
„„N O
GUI
ÂÂ 
.
ÂÂ 
Label
ÂÂ 
(
ÂÂ 
rect
ÂÂ 
,
ÂÂ 
(
ÂÂ 
UI_PanelState
ÂÂ *
.
ÂÂ* +
glyphTablePanel
ÂÂ+ :
?
ÂÂ; <
$str
ÂÂ= ?
:
ÂÂ@ A
s_UiStateLabel
ÂÂB P
[
ÂÂP Q
$num
ÂÂQ R
]
ÂÂR S
)
ÂÂS T
,
ÂÂT U 
TMP_UIStyleManager
ÂÂV h
.
ÂÂh i

rightLabel
ÂÂi s
)
ÂÂs t
;
ÂÂt u
if
ÁÁ 
(
ÁÁ 
UI_PanelState
ÁÁ 
.
ÁÁ 
glyphTablePanel
ÁÁ -
)
ÁÁ- .
{
ËË 
int
ÈÈ 
	arraySize
ÈÈ 
=
ÈÈ 
m_GlyphTable_prop
ÈÈ  1
.
ÈÈ1 2
	arraySize
ÈÈ2 ;
;
ÈÈ; <
int
ÍÍ 
itemsPerPage
ÍÍ  
=
ÍÍ! "
$num
ÍÍ# %
;
ÍÍ% &
EditorGUILayout
ÌÌ 
.
ÌÌ  
BeginVertical
ÌÌ  -
(
ÌÌ- .
EditorStyles
ÌÌ. :
.
ÌÌ: ;
helpBox
ÌÌ; B
)
ÌÌB C
;
ÌÌC D
{
ÓÓ 
EditorGUILayout
ÒÒ #
.
ÒÒ# $
BeginHorizontal
ÒÒ$ 3
(
ÒÒ3 4
)
ÒÒ4 5
;
ÒÒ5 6
{
ÚÚ 
EditorGUIUtility
ÛÛ (
.
ÛÛ( )

labelWidth
ÛÛ) 3
=
ÛÛ4 5
$num
ÛÛ6 :
;
ÛÛ: ;
	EditorGUI
ÙÙ !
.
ÙÙ! "
BeginChangeCheck
ÙÙ" 2
(
ÙÙ2 3
)
ÙÙ3 4
;
ÙÙ4 5
string
ıı 
searchPattern
ıı ,
=
ıı- .
EditorGUILayout
ıı/ >
.
ıı> ?
	TextField
ıı? H
(
ııH I
$str
ııI W
,
ııW X"
m_GlyphSearchPattern
ııY m
,
ıım n
$strııo Ä
)ııÄ Å
;ııÅ Ç
if
ˆˆ 
(
ˆˆ 
	EditorGUI
ˆˆ %
.
ˆˆ% &
EndChangeCheck
ˆˆ& 4
(
ˆˆ4 5
)
ˆˆ5 6
||
ˆˆ7 9
m_isSearchDirty
ˆˆ: I
)
ˆˆI J
{
˜˜ 
if
¯¯ 
(
¯¯  
string
¯¯  &
.
¯¯& '
IsNullOrEmpty
¯¯' 4
(
¯¯4 5
searchPattern
¯¯5 B
)
¯¯B C
==
¯¯D F
false
¯¯G L
)
¯¯L M
{
˘˘ "
m_GlyphSearchPattern
˙˙  4
=
˙˙5 6
searchPattern
˙˙7 D
;
˙˙D E
SearchGlyphTable
˝˝  0
(
˝˝0 1"
m_GlyphSearchPattern
˝˝1 E
,
˝˝E F
ref
˝˝G J
m_GlyphSearchList
˝˝K \
)
˝˝\ ]
;
˝˝] ^
}
˛˛ 
else
ˇˇ  "
m_GlyphSearchPattern
ÄÄ  4
=
ÄÄ5 6
null
ÄÄ7 ;
;
ÄÄ; <
m_isSearchDirty
ÇÇ +
=
ÇÇ, -
false
ÇÇ. 3
;
ÇÇ3 4
}
ÉÉ 
string
ÖÖ 
	styleName
ÖÖ (
=
ÖÖ) *
string
ÖÖ+ 1
.
ÖÖ1 2
IsNullOrEmpty
ÖÖ2 ?
(
ÖÖ? @"
m_GlyphSearchPattern
ÖÖ@ T
)
ÖÖT U
?
ÖÖV W
$str
ÖÖX q
:
ÖÖr s
$strÖÖt à
;ÖÖà â
if
ÜÜ 
(
ÜÜ 
	GUILayout
ÜÜ %
.
ÜÜ% &
Button
ÜÜ& ,
(
ÜÜ, -

GUIContent
ÜÜ- 7
.
ÜÜ7 8
none
ÜÜ8 <
,
ÜÜ< =
	styleName
ÜÜ> G
)
ÜÜG H
)
ÜÜH I
{
áá 

GUIUtility
àà &
.
àà& '
keyboardControl
àà' 6
=
àà7 8
$num
àà9 :
;
àà: ;"
m_GlyphSearchPattern
ââ 0
=
ââ1 2
string
ââ3 9
.
ââ9 :
Empty
ââ: ?
;
ââ? @
}
ää 
}
ãã 
EditorGUILayout
åå #
.
åå# $
EndHorizontal
åå$ 1
(
åå1 2
)
åå2 3
;
åå3 4
if
êê 
(
êê 
!
êê 
string
êê 
.
êê  
IsNullOrEmpty
êê  -
(
êê- ."
m_GlyphSearchPattern
êê. B
)
êêB C
)
êêC D
	arraySize
ëë !
=
ëë" #
m_GlyphSearchList
ëë$ 5
.
ëë5 6
Count
ëë6 ;
;
ëë; <#
DisplayPageNavigation
ìì )
(
ìì) *
ref
ìì* - 
m_CurrentGlyphPage
ìì. @
,
ìì@ A
	arraySize
ììB K
,
ììK L
itemsPerPage
ììM Y
)
ììY Z
;
ììZ [
}
îî 
EditorGUILayout
ïï 
.
ïï  
EndVertical
ïï  +
(
ïï+ ,
)
ïï, -
;
ïï- .
if
ôô 
(
ôô 
	arraySize
ôô 
>
ôô 
$num
ôô  !
)
ôô! "
{
öö 
for
úú 
(
úú 
int
úú 
i
úú 
=
úú  
itemsPerPage
úú! -
*
úú. / 
m_CurrentGlyphPage
úú0 B
;
úúB C
i
úúD E
<
úúF G
	arraySize
úúH Q
&&
úúR T
i
úúU V
<
úúW X
itemsPerPage
úúY e
*
úúf g
(
úúh i 
m_CurrentGlyphPage
úúi {
+
úú| }
$num
úú~ 
)úú Ä
;úúÄ Å
iúúÇ É
++úúÉ Ö
)úúÖ Ü
{
ùù 
Rect
üü  
elementStartRegion
üü /
=
üü0 1
GUILayoutUtility
üü2 B
.
üüB C
GetRect
üüC J
(
üüJ K
$num
üüK M
,
üüM N
$num
üüO Q
,
üüQ R
	GUILayout
üüS \
.
üü\ ]
ExpandWidth
üü] h
(
üüh i
true
üüi m
)
üüm n
)
üün o
;
üüo p
int
°° 
elementIndex
°° (
=
°°) *
i
°°+ ,
;
°°, -
if
¢¢ 
(
¢¢ 
!
¢¢ 
string
¢¢ #
.
¢¢# $
IsNullOrEmpty
¢¢$ 1
(
¢¢1 2"
m_GlyphSearchPattern
¢¢2 F
)
¢¢F G
)
¢¢G H
elementIndex
££ (
=
££) *
m_GlyphSearchList
££+ <
[
££< =
i
££= >
]
££> ?
;
££? @ 
SerializedProperty
•• *
glyphProperty
••+ 8
=
••9 :
m_GlyphTable_prop
••; L
.
••L M$
GetArrayElementAtIndex
••M c
(
••c d
elementIndex
••d p
)
••p q
;
••q r
EditorGUILayout
ßß '
.
ßß' (
BeginVertical
ßß( 5
(
ßß5 6
glyphPanelStyle
ßß6 E
)
ßßE F
;
ßßF G
using
©© 
(
©© 
new
©© "
	EditorGUI
©©# ,
.
©©, -
DisabledScope
©©- :
(
©©: ;
i
©©; <
!=
©©= ?#
m_SelectedGlyphRecord
©©@ U
)
©©U V
)
©©V W
{
™™ 
EditorGUILayout
´´ +
.
´´+ ,
PropertyField
´´, 9
(
´´9 :
glyphProperty
´´: G
)
´´G H
;
´´H I
}
¨¨ 
EditorGUILayout
ÆÆ '
.
ÆÆ' (
EndVertical
ÆÆ( 3
(
ÆÆ3 4
)
ÆÆ4 5
;
ÆÆ5 6
Rect
±± 
elementEndRegion
±± -
=
±±. /
GUILayoutUtility
±±0 @
.
±±@ A
GetRect
±±A H
(
±±H I
$num
±±I K
,
±±K L
$num
±±M O
,
±±O P
	GUILayout
±±Q Z
.
±±Z [
ExpandWidth
±±[ f
(
±±f g
true
±±g k
)
±±k l
)
±±l m
;
±±m n
Rect
¥¥ 
selectionArea
¥¥ *
=
¥¥+ ,
new
¥¥- 0
Rect
¥¥1 5
(
¥¥5 6 
elementStartRegion
¥¥6 H
.
¥¥H I
x
¥¥I J
,
¥¥J K 
elementStartRegion
¥¥L ^
.
¥¥^ _
y
¥¥_ `
,
¥¥` a
elementEndRegion
¥¥b r
.
¥¥r s
width
¥¥s x
,
¥¥x y
elementEndRegion¥¥z ä
.¥¥ä ã
y¥¥ã å
-¥¥ç é"
elementStartRegion¥¥è °
.¥¥° ¢
y¥¥¢ £
)¥¥£ §
;¥¥§ •
if
µµ 
(
µµ 
DoSelectionCheck
µµ ,
(
µµ, -
selectionArea
µµ- :
)
µµ: ;
)
µµ; <
{
∂∂ 
if
∑∑ 
(
∑∑  #
m_SelectedGlyphRecord
∑∑  5
==
∑∑6 8
i
∑∑9 :
)
∑∑: ;#
m_SelectedGlyphRecord
∏∏  5
=
∏∏6 7
-
∏∏8 9
$num
∏∏9 :
;
∏∏: ;
else
ππ  
{
∫∫ #
m_SelectedGlyphRecord
ªª  5
=
ªª6 7
i
ªª8 9
;
ªª9 :
m_AddGlyphWarning
ºº  1
.
ºº1 2
	isEnabled
ºº2 ;
=
ºº< =
false
ºº> C
;
ººC D
m_unicodeHexLabel
ΩΩ  1
=
ΩΩ2 3%
k_placeholderUnicodeHex
ΩΩ4 K
;
ΩΩK L

GUIUtility
ææ  *
.
ææ* +
keyboardControl
ææ+ :
=
ææ; <
$num
ææ= >
;
ææ> ?
}
øø 
}
¿¿ 
if
√√ 
(
√√ #
m_SelectedGlyphRecord
√√ 1
==
√√2 4
i
√√5 6
)
√√6 7
{
ƒƒ 
TMP_EditorUtility
≈≈ -
.
≈≈- .
DrawBox
≈≈. 5
(
≈≈5 6
selectionArea
≈≈6 C
,
≈≈C D
$num
≈≈E G
,
≈≈G H
new
≈≈I L
Color32
≈≈M T
(
≈≈T U
$num
≈≈U W
,
≈≈W X
$num
≈≈Y \
,
≈≈\ ]
$num
≈≈^ a
,
≈≈a b
$num
≈≈c f
)
≈≈f g
)
≈≈g h
;
≈≈h i
Rect
»»  
controlRect
»»! ,
=
»»- .
EditorGUILayout
»»/ >
.
»»> ?
GetControlRect
»»? M
(
»»M N
true
»»N R
,
»»R S
EditorGUIUtility
»»T d
.
»»d e
singleLineHeight
»»e u
*
»»v w
$num
»»x z
)
»»z {
;
»»{ |
float
…… !
optionAreaWidth
……" 1
=
……2 3
controlRect
……4 ?
.
……? @
width
……@ E
*
……F G
$num
……H L
;
……L M
float
   !
btnWidth
  " *
=
  + ,
optionAreaWidth
  - <
/
  = >
$num
  ? @
;
  @ A
Rect
ÃÃ  
position
ÃÃ! )
=
ÃÃ* +
new
ÃÃ, /
Rect
ÃÃ0 4
(
ÃÃ4 5
controlRect
ÃÃ5 @
.
ÃÃ@ A
x
ÃÃA B
+
ÃÃC D
controlRect
ÃÃE P
.
ÃÃP Q
width
ÃÃQ V
*
ÃÃW X
$num
ÃÃY \
,
ÃÃ\ ]
controlRect
ÃÃ^ i
.
ÃÃi j
y
ÃÃj k
,
ÃÃk l
btnWidth
ÃÃm u
,
ÃÃu v
controlRectÃÃw Ç
.ÃÃÇ É
heightÃÃÉ â
)ÃÃâ ä
;ÃÃä ã
GUI
œœ 
.
œœ  
enabled
œœ  '
=
œœ( )
!
œœ* +
string
œœ+ 1
.
œœ1 2
IsNullOrEmpty
œœ2 ?
(
œœ? @
m_dstGlyphID
œœ@ L
)
œœL M
;
œœM N
if
–– 
(
––  
GUI
––  #
.
––# $
Button
––$ *
(
––* +
position
––+ 3
,
––3 4
new
––5 8

GUIContent
––9 C
(
––C D
$str
––D M
)
––M N
)
––N O
)
––O P
{
—— 

GUIUtility
““  *
.
““* +
keyboardControl
““+ :
=
““; <
$num
““= >
;
““> ?
int
””  #

dstGlyphID
””$ .
;
””. /
int
÷÷  #
.
÷÷# $
TryParse
÷÷$ ,
(
÷÷, -
m_dstGlyphID
÷÷- 9
,
÷÷9 :
out
÷÷; >

dstGlyphID
÷÷? I
)
÷÷I J
;
÷÷J K
if
ŸŸ  "
(
ŸŸ# $
!
ŸŸ$ %
AddNewGlyph
ŸŸ% 0
(
ŸŸ0 1
elementIndex
ŸŸ1 =
,
ŸŸ= >

dstGlyphID
ŸŸ? I
)
ŸŸI J
)
ŸŸJ K
{
⁄⁄  !
m_AddGlyphWarning
€€$ 5
.
€€5 6
	isEnabled
€€6 ?
=
€€@ A
true
€€B F
;
€€F G
m_AddGlyphWarning
‹‹$ 5
.
‹‹5 6
expirationTime
‹‹6 D
=
‹‹E F
EditorApplication
‹‹G X
.
‹‹X Y
timeSinceStartup
‹‹Y i
+
‹‹j k
$num
‹‹l m
;
‹‹m n
}
››  !
m_dstGlyphID
ﬂﬂ  ,
=
ﬂﬂ- .
string
ﬂﬂ/ 5
.
ﬂﬂ5 6
Empty
ﬂﬂ6 ;
;
ﬂﬂ; <
m_isSearchDirty
‡‡  /
=
‡‡0 1
true
‡‡2 6
;
‡‡6 7 
TMPro_EventManager
‚‚  2
.
‚‚2 3&
ON_FONT_PROPERTY_CHANGED
‚‚3 K
(
‚‚K L
true
‚‚L P
,
‚‚P Q
m_fontAsset
‚‚R ]
)
‚‚] ^
;
‚‚^ _
}
„„ 
GUI
ÊÊ 
.
ÊÊ  
enabled
ÊÊ  '
=
ÊÊ( )
true
ÊÊ* .
;
ÊÊ. /
position
ÁÁ $
.
ÁÁ$ %
x
ÁÁ% &
+=
ÁÁ' )
btnWidth
ÁÁ* 2
;
ÁÁ2 3
GUI
ÈÈ 
.
ÈÈ   
SetNextControlName
ÈÈ  2
(
ÈÈ2 3
$str
ÈÈ3 B
)
ÈÈB C
;
ÈÈC D
m_dstGlyphID
ÍÍ (
=
ÍÍ) *
	EditorGUI
ÍÍ+ 4
.
ÍÍ4 5
	TextField
ÍÍ5 >
(
ÍÍ> ?
position
ÍÍ? G
,
ÍÍG H
m_dstGlyphID
ÍÍI U
)
ÍÍU V
;
ÍÍV W
	EditorGUI
ÌÌ %
.
ÌÌ% &

LabelField
ÌÌ& 0
(
ÌÌ0 1
position
ÌÌ1 9
,
ÌÌ9 :
new
ÌÌ; >

GUIContent
ÌÌ? I
(
ÌÌI J
m_GlyphIDLabel
ÌÌJ X
,
ÌÌX Y
$strÌÌZ Ä
)ÌÌÄ Å
,ÌÌÅ Ç"
TMP_UIStyleManagerÌÌÉ ï
.ÌÌï ñ
labelÌÌñ õ
)ÌÌõ ú
;ÌÌú ù
if
 
(
  
GUI
  #
.
# $%
GetNameOfFocusedControl
$ ;
(
; <
)
< =
==
> @
$str
A P
)
P Q
{
ÒÒ 
m_GlyphIDLabel
ÚÚ  .
=
ÚÚ/ 0
string
ÚÚ1 7
.
ÚÚ7 8
Empty
ÚÚ8 =
;
ÚÚ= >
char
ıı  $
chr
ıı% (
=
ıı) *
Event
ıı+ 0
.
ıı0 1
current
ıı1 8
.
ıı8 9
	character
ıı9 B
;
ııB C
if
ˆˆ  "
(
ˆˆ# $
(
ˆˆ$ %
chr
ˆˆ% (
<
ˆˆ) *
$char
ˆˆ+ .
||
ˆˆ/ 1
chr
ˆˆ2 5
>
ˆˆ6 7
$char
ˆˆ8 ;
)
ˆˆ; <
)
ˆˆ< =
{
˜˜  !
Event
¯¯$ )
.
¯¯) *
current
¯¯* 1
.
¯¯1 2
	character
¯¯2 ;
=
¯¯< =
$char
¯¯> B
;
¯¯B C
}
˘˘  !
}
˙˙ 
else
˚˚  
{
¸¸ 
m_GlyphIDLabel
˝˝  .
=
˝˝/ 0"
k_placeholderGlyphID
˝˝1 E
;
˝˝E F
}
ˇˇ 
position
ÇÇ $
.
ÇÇ$ %
x
ÇÇ% &
+=
ÇÇ' )
btnWidth
ÇÇ* 2
;
ÇÇ2 3
if
ÉÉ 
(
ÉÉ  
GUI
ÉÉ  #
.
ÉÉ# $
Button
ÉÉ$ *
(
ÉÉ* +
position
ÉÉ+ 3
,
ÉÉ3 4
$str
ÉÉ5 =
)
ÉÉ= >
)
ÉÉ> ?
{
ÑÑ 

GUIUtility
ÖÖ  *
.
ÖÖ* +
keyboardControl
ÖÖ+ :
=
ÖÖ; <
$num
ÖÖ= >
;
ÖÖ> ?!
RemoveGlyphFromList
áá  3
(
áá3 4
elementIndex
áá4 @
)
áá@ A
;
ááA B
isAssetDirty
ââ  ,
=
ââ- .
true
ââ/ 3
;
ââ3 4#
m_SelectedGlyphRecord
ää  5
=
ää6 7
-
ää8 9
$num
ää9 :
;
ää: ;
m_isSearchDirty
ãã  /
=
ãã0 1
true
ãã2 6
;
ãã6 7
break
åå  %
;
åå% &
}
çç 
if
èè 
(
èè  
m_AddGlyphWarning
èè  1
.
èè1 2
	isEnabled
èè2 ;
&&
èè< >
EditorApplication
èè? P
.
èèP Q
timeSinceStartup
èèQ a
<
èèb c
m_AddGlyphWarning
èèd u
.
èèu v
expirationTimeèèv Ñ
)èèÑ Ö
{
êê 
EditorGUILayout
ëë  /
.
ëë/ 0
HelpBox
ëë0 7
(
ëë7 8
$str
ëë8 a
,
ëëa b
MessageType
ëëc n
.
ëën o
Warning
ëëo v
)
ëëv w
;
ëëw x
}
íí 
}
îî 
}
ïï 
}
ññ #
DisplayPageNavigation
òò %
(
òò% &
ref
òò& ) 
m_CurrentGlyphPage
òò* <
,
òò< =
	arraySize
òò> G
,
òòG H
itemsPerPage
òòI U
)
òòU V
;
òòV W
EditorGUILayout
öö 
.
öö  
Space
öö  %
(
öö% &
)
öö& '
;
öö' (
}
õõ 
EditorGUIUtility
†† 
.
†† 

labelWidth
†† '
=
††( )

labelWidth
††* 4
;
††4 5
EditorGUIUtility
°° 
.
°° 

fieldWidth
°° '
=
°°( )

fieldWidth
°°* 4
;
°°4 5
	EditorGUI
¢¢ 
.
¢¢ 
indentLevel
¢¢ !
=
¢¢" #
$num
¢¢$ %
;
¢¢% &
rect
££ 
=
££ 
EditorGUILayout
££ "
.
££" #
GetControlRect
££# 1
(
££1 2
false
££2 7
,
££7 8
$num
££9 ;
)
££; <
;
££< =
int
•• !
adjustmentPairCount
•• #
=
••$ %
m_fontAsset
••& 1
.
••1 2
fontFeatureTable
••2 B
.
••B C(
glyphPairAdjustmentRecords
••C ]
.
••] ^
Count
••^ c
;
••c d
if
ßß 
(
ßß 
GUI
ßß 
.
ßß 
Button
ßß 
(
ßß 
rect
ßß 
,
ßß  
new
ßß! $

GUIContent
ßß% /
(
ßß/ 0
$str
ßß0 S
+
ßßT U!
adjustmentPairCount
ßßV i
+
ßßj k
$str
ßßl o
+
ßßp q
(
ßßr s
rect
ßßs w
.
ßßw x
width
ßßx }
>
ßß~ 
$numßßÄ É
?ßßÑ Ö
$strßßÜ ê
:ßßë í
$strßßì ï
)ßßï ñ
,ßßñ ó
$strßßò Ã
)ßßÃ Õ
,ßßÕ Œ"
TMP_UIStyleManagerßßœ ·
.ßß· ‚
sectionHeaderßß‚ Ô
)ßßÔ 
)ßß Ò
UI_PanelState
®® 
.
®® #
fontFeatureTablePanel
®® 3
=
®®4 5
!
®®6 7
UI_PanelState
®®7 D
.
®®D E#
fontFeatureTablePanel
®®E Z
;
®®Z [
GUI
™™ 
.
™™ 
Label
™™ 
(
™™ 
rect
™™ 
,
™™ 
(
™™ 
UI_PanelState
™™ *
.
™™* +#
fontFeatureTablePanel
™™+ @
?
™™A B
$str
™™C E
:
™™F G
s_UiStateLabel
™™H V
[
™™V W
$num
™™W X
]
™™X Y
)
™™Y Z
,
™™Z [ 
TMP_UIStyleManager
™™\ n
.
™™n o

rightLabel
™™o y
)
™™y z
;
™™z {
if
¨¨ 
(
¨¨ 
UI_PanelState
¨¨ 
.
¨¨ #
fontFeatureTablePanel
¨¨ 3
)
¨¨3 4
{
≠≠ 
int
ÆÆ 
	arraySize
ÆÆ 
=
ÆÆ /
!m_GlyphPairAdjustmentRecords_prop
ÆÆ  A
.
ÆÆA B
	arraySize
ÆÆB K
;
ÆÆK L
int
ØØ 
itemsPerPage
ØØ  
=
ØØ! "
$num
ØØ# %
;
ØØ% &
EditorGUILayout
≤≤ 
.
≤≤  
BeginVertical
≤≤  -
(
≤≤- .
EditorStyles
≤≤. :
.
≤≤: ;
helpBox
≤≤; B
)
≤≤B C
;
≤≤C D
{
≥≥ 
EditorGUILayout
∂∂ #
.
∂∂# $
BeginHorizontal
∂∂$ 3
(
∂∂3 4
)
∂∂4 5
;
∂∂5 6
{
∑∑ 
EditorGUIUtility
∏∏ (
.
∏∏( )

labelWidth
∏∏) 3
=
∏∏4 5
$num
∏∏6 :
;
∏∏: ;
	EditorGUI
ππ !
.
ππ! "
BeginChangeCheck
ππ" 2
(
ππ2 3
)
ππ3 4
;
ππ4 5
string
∫∫ 
searchPattern
∫∫ ,
=
∫∫- .
EditorGUILayout
∫∫/ >
.
∫∫> ?
	TextField
∫∫? H
(
∫∫H I
$str
∫∫I a
,
∫∫a b)
m_KerningTableSearchPattern
∫∫c ~
,
∫∫~ 
$str∫∫Ä ë
)∫∫ë í
;∫∫í ì
if
ªª 
(
ªª 
	EditorGUI
ªª %
.
ªª% &
EndChangeCheck
ªª& 4
(
ªª4 5
)
ªª5 6
||
ªª7 9
m_isSearchDirty
ªª: I
)
ªªI J
{
ºº 
if
ΩΩ 
(
ΩΩ  
string
ΩΩ  &
.
ΩΩ& '
IsNullOrEmpty
ΩΩ' 4
(
ΩΩ4 5
searchPattern
ΩΩ5 B
)
ΩΩB C
==
ΩΩD F
false
ΩΩG L
)
ΩΩL M
{
ææ )
m_KerningTableSearchPattern
øø  ;
=
øø< =
searchPattern
øø> K
;
øøK L 
SearchKerningTable
¬¬  2
(
¬¬2 3)
m_KerningTableSearchPattern
¬¬3 N
,
¬¬N O
ref
¬¬P S&
m_KerningTableSearchList
¬¬T l
)
¬¬l m
;
¬¬m n
}
√√ 
else
ƒƒ  )
m_KerningTableSearchPattern
≈≈  ;
=
≈≈< =
null
≈≈> B
;
≈≈B C
m_isSearchDirty
«« +
=
««, -
false
««. 3
;
««3 4
}
»» 
string
   
	styleName
   (
=
  ) *
string
  + 1
.
  1 2
IsNullOrEmpty
  2 ?
(
  ? @)
m_KerningTableSearchPattern
  @ [
)
  [ \
?
  ] ^
$str
  _ x
:
  y z
$str  { è
;  è ê
if
ÀÀ 
(
ÀÀ 
	GUILayout
ÀÀ %
.
ÀÀ% &
Button
ÀÀ& ,
(
ÀÀ, -

GUIContent
ÀÀ- 7
.
ÀÀ7 8
none
ÀÀ8 <
,
ÀÀ< =
	styleName
ÀÀ> G
)
ÀÀG H
)
ÀÀH I
{
ÃÃ 

GUIUtility
ÕÕ &
.
ÕÕ& '
keyboardControl
ÕÕ' 6
=
ÕÕ7 8
$num
ÕÕ9 :
;
ÕÕ: ;)
m_KerningTableSearchPattern
ŒŒ 7
=
ŒŒ8 9
string
ŒŒ: @
.
ŒŒ@ A
Empty
ŒŒA F
;
ŒŒF G
}
œœ 
}
–– 
EditorGUILayout
—— #
.
——# $
EndHorizontal
——$ 1
(
——1 2
)
——2 3
;
——3 4
if
’’ 
(
’’ 
!
’’ 
string
’’ 
.
’’  
IsNullOrEmpty
’’  -
(
’’- .)
m_KerningTableSearchPattern
’’. I
)
’’I J
)
’’J K
	arraySize
÷÷ !
=
÷÷" #&
m_KerningTableSearchList
÷÷$ <
.
÷÷< =
Count
÷÷= B
;
÷÷B C#
DisplayPageNavigation
ÿÿ )
(
ÿÿ) *
ref
ÿÿ* -"
m_CurrentKerningPage
ÿÿ. B
,
ÿÿB C
	arraySize
ÿÿD M
,
ÿÿM N
itemsPerPage
ÿÿO [
)
ÿÿ[ \
;
ÿÿ\ ]
}
ŸŸ 
EditorGUILayout
⁄⁄ 
.
⁄⁄  
EndVertical
⁄⁄  +
(
⁄⁄+ ,
)
⁄⁄, -
;
⁄⁄- .
if
‹‹ 
(
‹‹ 
	arraySize
‹‹ 
>
‹‹ 
$num
‹‹  !
)
‹‹! "
{
›› 
for
ﬂﬂ 
(
ﬂﬂ 
int
ﬂﬂ 
i
ﬂﬂ 
=
ﬂﬂ  
itemsPerPage
ﬂﬂ! -
*
ﬂﬂ. /"
m_CurrentKerningPage
ﬂﬂ0 D
;
ﬂﬂD E
i
ﬂﬂF G
<
ﬂﬂH I
	arraySize
ﬂﬂJ S
&&
ﬂﬂT V
i
ﬂﬂW X
<
ﬂﬂY Z
itemsPerPage
ﬂﬂ[ g
*
ﬂﬂh i
(
ﬂﬂj k"
m_CurrentKerningPage
ﬂﬂk 
+ﬂﬂÄ Å
$numﬂﬂÇ É
)ﬂﬂÉ Ñ
;ﬂﬂÑ Ö
iﬂﬂÜ á
++ﬂﬂá â
)ﬂﬂâ ä
{
‡‡ 
Rect
‚‚  
elementStartRegion
‚‚ /
=
‚‚0 1
GUILayoutUtility
‚‚2 B
.
‚‚B C
GetRect
‚‚C J
(
‚‚J K
$num
‚‚K M
,
‚‚M N
$num
‚‚O Q
,
‚‚Q R
	GUILayout
‚‚S \
.
‚‚\ ]
ExpandWidth
‚‚] h
(
‚‚h i
true
‚‚i m
)
‚‚m n
)
‚‚n o
;
‚‚o p
int
‰‰ 
elementIndex
‰‰ (
=
‰‰) *
i
‰‰+ ,
;
‰‰, -
if
ÂÂ 
(
ÂÂ 
!
ÂÂ 
string
ÂÂ #
.
ÂÂ# $
IsNullOrEmpty
ÂÂ$ 1
(
ÂÂ1 2)
m_KerningTableSearchPattern
ÂÂ2 M
)
ÂÂM N
)
ÂÂN O
elementIndex
ÊÊ (
=
ÊÊ) *&
m_KerningTableSearchList
ÊÊ+ C
[
ÊÊC D
i
ÊÊD E
]
ÊÊE F
;
ÊÊF G 
SerializedProperty
ËË **
pairAdjustmentRecordProperty
ËË+ G
=
ËËH I/
!m_GlyphPairAdjustmentRecords_prop
ËËJ k
.
ËËk l%
GetArrayElementAtIndexËËl Ç
(ËËÇ É
elementIndexËËÉ è
)ËËè ê
;ËËê ë
EditorGUILayout
ÍÍ '
.
ÍÍ' (
BeginVertical
ÍÍ( 5
(
ÍÍ5 6
EditorStyles
ÍÍ6 B
.
ÍÍB C
helpBox
ÍÍC J
)
ÍÍJ K
;
ÍÍK L
using
ÏÏ 
(
ÏÏ 
new
ÏÏ "
	EditorGUI
ÏÏ# ,
.
ÏÏ, -
DisabledScope
ÏÏ- :
(
ÏÏ: ;
i
ÏÏ; <
!=
ÏÏ= ?(
m_SelectedAdjustmentRecord
ÏÏ@ Z
)
ÏÏZ [
)
ÏÏ[ \
{
ÌÌ 
EditorGUILayout
ÓÓ +
.
ÓÓ+ ,
PropertyField
ÓÓ, 9
(
ÓÓ9 :*
pairAdjustmentRecordProperty
ÓÓ: V
,
ÓÓV W
new
ÓÓX [

GUIContent
ÓÓ\ f
(
ÓÓf g
$str
ÓÓg s
)
ÓÓs t
)
ÓÓt u
;
ÓÓu v
}
ÔÔ 
EditorGUILayout
ÒÒ '
.
ÒÒ' (
EndVertical
ÒÒ( 3
(
ÒÒ3 4
)
ÒÒ4 5
;
ÒÒ5 6
Rect
ÙÙ 
elementEndRegion
ÙÙ -
=
ÙÙ. /
GUILayoutUtility
ÙÙ0 @
.
ÙÙ@ A
GetRect
ÙÙA H
(
ÙÙH I
$num
ÙÙI K
,
ÙÙK L
$num
ÙÙM O
,
ÙÙO P
	GUILayout
ÙÙQ Z
.
ÙÙZ [
ExpandWidth
ÙÙ[ f
(
ÙÙf g
true
ÙÙg k
)
ÙÙk l
)
ÙÙl m
;
ÙÙm n
Rect
˜˜ 
selectionArea
˜˜ *
=
˜˜+ ,
new
˜˜- 0
Rect
˜˜1 5
(
˜˜5 6 
elementStartRegion
˜˜6 H
.
˜˜H I
x
˜˜I J
,
˜˜J K 
elementStartRegion
˜˜L ^
.
˜˜^ _
y
˜˜_ `
,
˜˜` a
elementEndRegion
˜˜b r
.
˜˜r s
width
˜˜s x
,
˜˜x y
elementEndRegion˜˜z ä
.˜˜ä ã
y˜˜ã å
-˜˜ç é"
elementStartRegion˜˜è °
.˜˜° ¢
y˜˜¢ £
)˜˜£ §
;˜˜§ •
if
¯¯ 
(
¯¯ 
DoSelectionCheck
¯¯ ,
(
¯¯, -
selectionArea
¯¯- :
)
¯¯: ;
)
¯¯; <
{
˘˘ 
if
˙˙ 
(
˙˙  (
m_SelectedAdjustmentRecord
˙˙  :
==
˙˙; =
i
˙˙> ?
)
˙˙? @
{
˚˚ (
m_SelectedAdjustmentRecord
¸¸  :
=
¸¸; <
-
¸¸= >
$num
¸¸> ?
;
¸¸? @
}
˝˝ 
else
˛˛  
{
ˇˇ (
m_SelectedAdjustmentRecord
Ä	Ä	  :
=
Ä	Ä	; <
i
Ä	Ä	= >
;
Ä	Ä	> ?

GUIUtility
Å	Å	  *
.
Å	Å	* +
keyboardControl
Å	Å	+ :
=
Å	Å	; <
$num
Å	Å	= >
;
Å	Å	> ?
}
Ç	Ç	 
}
É	É	 
if
Ü	Ü	 
(
Ü	Ü	 (
m_SelectedAdjustmentRecord
Ü	Ü	 6
==
Ü	Ü	7 9
i
Ü	Ü	: ;
)
Ü	Ü	; <
{
á	á	 
TMP_EditorUtility
à	à	 -
.
à	à	- .
DrawBox
à	à	. 5
(
à	à	5 6
selectionArea
à	à	6 C
,
à	à	C D
$num
à	à	E G
,
à	à	G H
new
à	à	I L
Color32
à	à	M T
(
à	à	T U
$num
à	à	U W
,
à	à	W X
$num
à	à	Y \
,
à	à	\ ]
$num
à	à	^ a
,
à	à	a b
$num
à	à	c f
)
à	à	f g
)
à	à	g h
;
à	à	h i
Rect
ã	ã	  
controlRect
ã	ã	! ,
=
ã	ã	- .
EditorGUILayout
ã	ã	/ >
.
ã	ã	> ?
GetControlRect
ã	ã	? M
(
ã	ã	M N
true
ã	ã	N R
,
ã	ã	R S
EditorGUIUtility
ã	ã	T d
.
ã	ã	d e
singleLineHeight
ã	ã	e u
*
ã	ã	v w
$num
ã	ã	x z
)
ã	ã	z {
;
ã	ã	{ |
float
å	å	 !
optionAreaWidth
å	å	" 1
=
å	å	2 3
controlRect
å	å	4 ?
.
å	å	? @
width
å	å	@ E
;
å	å	E F
float
ç	ç	 !
btnWidth
ç	ç	" *
=
ç	ç	+ ,
optionAreaWidth
ç	ç	- <
/
ç	ç	= >
$num
ç	ç	? @
;
ç	ç	@ A
Rect
è	è	  
position
è	è	! )
=
è	è	* +
new
è	è	, /
Rect
è	è	0 4
(
è	è	4 5
controlRect
è	è	5 @
.
è	è	@ A
x
è	è	A B
+
è	è	C D
controlRect
è	è	E P
.
è	è	P Q
width
è	è	Q V
-
è	è	W X
btnWidth
è	è	Y a
,
è	è	a b
controlRect
è	è	c n
.
è	è	n o
y
è	è	o p
,
è	è	p q
btnWidth
è	è	r z
,
è	è	z {
controlRectè	è	| á
.è	è	á à
heightè	è	à é
)è	è	é è
;è	è	è ê
GUI
í	í	 
.
í	í	  
enabled
í	í	  '
=
í	í	( )
true
í	í	* .
;
í	í	. /
if
ì	ì	 
(
ì	ì	  
GUI
ì	ì	  #
.
ì	ì	# $
Button
ì	ì	$ *
(
ì	ì	* +
position
ì	ì	+ 3
,
ì	ì	3 4
$str
ì	ì	5 =
)
ì	ì	= >
)
ì	ì	> ?
{
î	î	 

GUIUtility
ï	ï	  *
.
ï	ï	* +
keyboardControl
ï	ï	+ :
=
ï	ï	; <
$num
ï	ï	= >
;
ï	ï	> ?*
RemoveAdjustmentPairFromList
ó	ó	  <
(
ó	ó	< =
i
ó	ó	= >
)
ó	ó	> ?
;
ó	ó	? @
isAssetDirty
ô	ô	  ,
=
ô	ô	- .
true
ô	ô	/ 3
;
ô	ô	3 4(
m_SelectedAdjustmentRecord
ö	ö	  :
=
ö	ö	; <
-
ö	ö	= >
$num
ö	ö	> ?
;
ö	ö	? @
m_isSearchDirty
õ	õ	  /
=
õ	õ	0 1
true
õ	õ	2 6
;
õ	õ	6 7
break
ú	ú	  %
;
ú	ú	% &
}
ù	ù	 
}
û	û	 
}
ü	ü	 
}
†	†	 #
DisplayPageNavigation
¢	¢	 %
(
¢	¢	% &
ref
¢	¢	& )"
m_CurrentKerningPage
¢	¢	* >
,
¢	¢	> ?
	arraySize
¢	¢	@ I
,
¢	¢	I J
itemsPerPage
¢	¢	K W
)
¢	¢	W X
;
¢	¢	X Y
	GUILayout
§	§	 
.
§	§	 
Space
§	§	 
(
§	§	  
$num
§	§	  !
)
§	§	! "
;
§	§	" #
EditorGUILayout
ß	ß	 
.
ß	ß	  
BeginVertical
ß	ß	  -
(
ß	ß	- .
EditorStyles
ß	ß	. :
.
ß	ß	: ;
helpBox
ß	ß	; B
)
ß	ß	B C
;
ß	ß	C D
{
®	®	 
EditorGUILayout
©	©	 #
.
©	©	# $
PropertyField
©	©	$ 1
(
©	©	1 23
%m_EmptyGlyphPairAdjustmentRecord_prop
©	©	2 W
)
©	©	W X
;
©	©	X Y
}
™	™	 
EditorGUILayout
´	´	 
.
´	´	  
EndVertical
´	´	  +
(
´	´	+ ,
)
´	´	, -
;
´	´	- .
if
≠	≠	 
(
≠	≠	 
	GUILayout
≠	≠	 
.
≠	≠	 
Button
≠	≠	 $
(
≠	≠	$ %
$str
≠	≠	% F
)
≠	≠	F G
)
≠	≠	G H
{
Æ	Æ	  
SerializedProperty
Ø	Ø	 &+
firstAdjustmentRecordProperty
Ø	Ø	' D
=
Ø	Ø	E F3
%m_EmptyGlyphPairAdjustmentRecord_prop
Ø	Ø	G l
.
Ø	Ø	l m#
FindPropertyRelativeØ	Ø	m Å
(Ø	Ø	Å Ç
$strØ	Ø	Ç õ
)Ø	Ø	õ ú
;Ø	Ø	ú ù 
SerializedProperty
∞	∞	 &,
secondAdjustmentRecordProperty
∞	∞	' E
=
∞	∞	F G3
%m_EmptyGlyphPairAdjustmentRecord_prop
∞	∞	H m
.
∞	∞	m n#
FindPropertyRelative∞	∞	n Ç
(∞	∞	Ç É
$str∞	∞	É ù
)∞	∞	ù û
;∞	∞	û ü
uint
≤	≤	 
firstGlyphIndex
≤	≤	 (
=
≤	≤	) *
(
≤	≤	+ ,
uint
≤	≤	, 0
)
≤	≤	0 1+
firstAdjustmentRecordProperty
≤	≤	1 N
.
≤	≤	N O"
FindPropertyRelative
≤	≤	O c
(
≤	≤	c d
$str
≤	≤	d r
)
≤	≤	r s
.
≤	≤	s t
intValue
≤	≤	t |
;
≤	≤	| }
uint
≥	≥	 
secondGlyphIndex
≥	≥	 )
=
≥	≥	* +
(
≥	≥	, -
uint
≥	≥	- 1
)
≥	≥	1 2,
secondAdjustmentRecordProperty
≥	≥	2 P
.
≥	≥	P Q"
FindPropertyRelative
≥	≥	Q e
(
≥	≥	e f
$str
≥	≥	f t
)
≥	≥	t u
.
≥	≥	u v
intValue
≥	≥	v ~
;
≥	≥	~ "
TMP_GlyphValueRecord
µ	µ	 (
firstValueRecord
µ	µ	) 9
=
µ	µ	: ;
GetValueRecord
µ	µ	< J
(
µ	µ	J K+
firstAdjustmentRecordProperty
µ	µ	K h
.
µ	µ	h i"
FindPropertyRelative
µ	µ	i }
(
µ	µ	} ~
$strµ	µ	~ í
)µ	µ	í ì
)µ	µ	ì î
;µ	µ	î ï"
TMP_GlyphValueRecord
∂	∂	 (
secondValueRecord
∂	∂	) :
=
∂	∂	; <
GetValueRecord
∂	∂	= K
(
∂	∂	K L,
secondAdjustmentRecordProperty
∂	∂	L j
.
∂	∂	j k"
FindPropertyRelative
∂	∂	k 
(∂	∂	 Ä
$str∂	∂	Ä î
)∂	∂	î ï
)∂	∂	ï ñ
;∂	∂	ñ ó
	errorCode
∏	∏	 
=
∏	∏	 
-
∏	∏	  !
$num
∏	∏	! "
;
∏	∏	" #
uint
π	π	 
pairKey
π	π	  
=
π	π	! "
secondGlyphIndex
π	π	# 3
<<
π	π	4 6
$num
π	π	7 9
|
π	π	: ;
firstGlyphIndex
π	π	< K
;
π	π	K L
if
∫	∫	 
(
∫	∫	  
m_FontFeatureTable
∫	∫	 *
.
∫	∫	* +9
+m_GlyphPairAdjustmentRecordLookupDictionary
∫	∫	+ V
.
∫	∫	V W
ContainsKey
∫	∫	W b
(
∫	∫	b c
pairKey
∫	∫	c j
)
∫	∫	j k
==
∫	∫	l n
false
∫	∫	o t
)
∫	∫	t u
{
ª	ª	 +
TMP_GlyphPairAdjustmentRecord
º	º	 5
adjustmentRecord
º	º	6 F
=
º	º	G H
new
º	º	I L+
TMP_GlyphPairAdjustmentRecord
º	º	M j
(
º	º	j k
new
º	º	k n(
TMP_GlyphAdjustmentRecordº	º	o à
(º	º	à â
firstGlyphIndexº	º	â ò
,º	º	ò ô 
firstValueRecordº	º	ö ™
)º	º	™ ´
,º	º	´ ¨
newº	º	≠ ∞)
TMP_GlyphAdjustmentRecordº	º	±  
(º	º	  À 
secondGlyphIndexº	º	À €
,º	º	€ ‹!
secondValueRecordº	º	› Ó
)º	º	Ó Ô
)º	º	Ô 
;º	º	 Ò 
m_FontFeatureTable
Ω	Ω	 *
.
Ω	Ω	* +*
m_GlyphPairAdjustmentRecords
Ω	Ω	+ G
.
Ω	Ω	G H
Add
Ω	Ω	H K
(
Ω	Ω	K L
adjustmentRecord
Ω	Ω	L \
)
Ω	Ω	\ ]
;
Ω	Ω	] ^ 
m_FontFeatureTable
æ	æ	 *
.
æ	æ	* +9
+m_GlyphPairAdjustmentRecordLookupDictionary
æ	æ	+ V
.
æ	æ	V W
Add
æ	æ	W Z
(
æ	æ	Z [
pairKey
æ	æ	[ b
,
æ	æ	b c
adjustmentRecord
æ	æ	d t
)
æ	æ	t u
;
æ	æ	u v
	errorCode
ø	ø	 !
=
ø	ø	" #
$num
ø	ø	$ %
;
ø	ø	% &
}
¿	¿	 
TMP_Character
√	√	 !
	character
√	√	" +
;
√	√	+ ,
uint
≈	≈	 
firstCharacter
≈	≈	 '
=
≈	≈	( )(
m_SerializedPropertyHolder
≈	≈	* D
.
≈	≈	D E
firstCharacter
≈	≈	E S
;
≈	≈	S T
if
∆	∆	 
(
∆	∆	 
!
∆	∆	 
m_fontAsset
∆	∆	 $
.
∆	∆	$ %"
characterLookupTable
∆	∆	% 9
.
∆	∆	9 :
ContainsKey
∆	∆	: E
(
∆	∆	E F
firstCharacter
∆	∆	F T
)
∆	∆	T U
)
∆	∆	U V
m_fontAsset
«	«	 #
.
«	«	# $%
TryAddCharacterInternal
«	«	$ ;
(
«	«	; <
firstCharacter
«	«	< J
,
«	«	J K
out
«	«	L O
	character
«	«	P Y
)
«	«	Y Z
;
«	«	Z [
uint
…	…	 
secondCharacter
…	…	 (
=
…	…	) *(
m_SerializedPropertyHolder
…	…	+ E
.
…	…	E F
secondCharacter
…	…	F U
;
…	…	U V
if
 	 	 
(
 	 	 
!
 	 	 
m_fontAsset
 	 	 $
.
 	 	$ %"
characterLookupTable
 	 	% 9
.
 	 	9 :
ContainsKey
 	 	: E
(
 	 	E F
secondCharacter
 	 	F U
)
 	 	U V
)
 	 	V W
m_fontAsset
À	À	 #
.
À	À	# $%
TryAddCharacterInternal
À	À	$ ;
(
À	À	; <
secondCharacter
À	À	< K
,
À	À	K L
out
À	À	M P
	character
À	À	Q Z
)
À	À	Z [
;
À	À	[ \
if
Œ	Œ	 
(
Œ	Œ	 
	errorCode
Œ	Œ	 !
!=
Œ	Œ	" $
-
Œ	Œ	% &
$num
Œ	Œ	& '
)
Œ	Œ	' (
{
œ	œ	  
m_FontFeatureTable
–	–	 *
.
–	–	* +,
SortGlyphPairAdjustmentRecords
–	–	+ I
(
–	–	I J
)
–	–	J K
;
–	–	K L
serializedObject
—	—	 (
.
—	—	( )%
ApplyModifiedProperties
—	—	) @
(
—	—	@ A
)
—	—	A B
;
—	—	B C
isAssetDirty
“	“	 $
=
“	“	% &
true
“	“	' +
;
“	“	+ ,
m_isSearchDirty
”	”	 '
=
”	”	( )
true
”	”	* .
;
”	”	. /
}
‘	‘	 
else
’	’	 
{
÷	÷	 
	timeStamp
◊	◊	 !
=
◊	◊	" #
System
◊	◊	$ *
.
◊	◊	* +
DateTime
◊	◊	+ 3
.
◊	◊	3 4
Now
◊	◊	4 7
.
◊	◊	7 8

AddSeconds
◊	◊	8 B
(
◊	◊	B C
$num
◊	◊	C D
)
◊	◊	D E
;
◊	◊	E F
}
ÿ	ÿ	 
}
‹	‹	 
if
ﬁ	ﬁ	 
(
ﬁ	ﬁ	 
	errorCode
ﬁ	ﬁ	 
==
ﬁ	ﬁ	  
-
ﬁ	ﬁ	! "
$num
ﬁ	ﬁ	" #
)
ﬁ	ﬁ	# $
{
ﬂ	ﬂ	 
	GUILayout
‡	‡	 
.
‡	‡	 
BeginHorizontal
‡	‡	 -
(
‡	‡	- .
)
‡	‡	. /
;
‡	‡	/ 0
	GUILayout
·	·	 
.
·	·	 
FlexibleSpace
·	·	 +
(
·	·	+ ,
)
·	·	, -
;
·	·	- .
	GUILayout
‚	‚	 
.
‚	‚	 
Label
‚	‚	 #
(
‚	‚	# $
$str
‚	‚	$ Y
,
‚	‚	Y Z 
TMP_UIStyleManager
‚	‚	[ m
.
‚	‚	m n
label
‚	‚	n s
)
‚	‚	s t
;
‚	‚	t u
	GUILayout
„	„	 
.
„	„	 
FlexibleSpace
„	„	 +
(
„	„	+ ,
)
„	„	, -
;
„	„	- .
	GUILayout
‰	‰	 
.
‰	‰	 
EndHorizontal
‰	‰	 +
(
‰	‰	+ ,
)
‰	‰	, -
;
‰	‰	- .
if
Ê	Ê	 
(
Ê	Ê	 
System
Ê	Ê	 
.
Ê	Ê	 
DateTime
Ê	Ê	 '
.
Ê	Ê	' (
Now
Ê	Ê	( +
>
Ê	Ê	, -
	timeStamp
Ê	Ê	. 7
)
Ê	Ê	7 8
	errorCode
Á	Á	 !
=
Á	Á	" #
$num
Á	Á	$ %
;
Á	Á	% &
}
Ë	Ë	 
}
È	È	 
if
Ï	Ï	 
(
Ï	Ï	 
serializedObject
Ï	Ï	  
.
Ï	Ï	  !%
ApplyModifiedProperties
Ï	Ï	! 8
(
Ï	Ï	8 9
)
Ï	Ï	9 :
||
Ï	Ï	; =
evt_cmd
Ï	Ï	> E
==
Ï	Ï	F H

k_UndoRedo
Ï	Ï	I S
||
Ï	Ï	T V
isAssetDirty
Ï	Ï	W c
)
Ï	Ï	c d
{
Ì	Ì	 
if
Ô	Ô	 
(
Ô	Ô	 /
!m_DisplayDestructiveChangeWarning
Ô	Ô	 5
==
Ô	Ô	6 8
false
Ô	Ô	9 >
)
Ô	Ô	> ? 
TMPro_EventManager
		 &
.
		& '&
ON_FONT_PROPERTY_CHANGED
		' ?
(
		? @
true
		@ D
,
		D E
m_fontAsset
		F Q
)
		Q R
;
		R S
if
Ú	Ú	 
(
Ú	Ú	 
m_fontAsset
Ú	Ú	 
.
Ú	Ú	  *
IsFontAssetLookupTablesDirty
Ú	Ú	  <
||
Ú	Ú	= ?
evt_cmd
Ú	Ú	@ G
==
Ú	Ú	H J

k_UndoRedo
Ú	Ú	K U
)
Ú	Ú	U V
m_fontAsset
Û	Û	 
.
Û	Û	  %
ReadFontAssetDefinition
Û	Û	  7
(
Û	Û	7 8
)
Û	Û	8 9
;
Û	Û	9 :
isAssetDirty
ı	ı	 
=
ı	ı	 
false
ı	ı	 $
;
ı	ı	$ %
EditorUtility
ˆ	ˆ	 
.
ˆ	ˆ	 
SetDirty
ˆ	ˆ	 &
(
ˆ	ˆ	& '
target
ˆ	ˆ	' -
)
ˆ	ˆ	- .
;
ˆ	ˆ	. /
}
˜	˜	 
GUI
˚	˚	 
.
˚	˚	 
enabled
˚	˚	 
=
˚	˚	 
true
˚	˚	 
;
˚	˚	 
if
¸	¸	 
(
¸	¸	 
currentEvent
¸	¸	 
.
¸	¸	 
type
¸	¸	 !
==
¸	¸	" $
	EventType
¸	¸	% .
.
¸	¸	. /
	MouseDown
¸	¸	/ 8
&&
¸	¸	9 ;
currentEvent
¸	¸	< H
.
¸	¸	H I
button
¸	¸	I O
==
¸	¸	P R
$num
¸	¸	S T
)
¸	¸	T U(
m_SelectedAdjustmentRecord
˝	˝	 *
=
˝	˝	+ ,
-
˝	˝	- .
$num
˝	˝	. /
;
˝	˝	/ 0
}
ˇ	ˇ	 	
void
Å
Å
 )
CleanFallbackFontAssetTable
Å
Å
 (
(
Å
Å
( )
)
Å
Å
) *
{
Ç
Ç
 	 
SerializedProperty
É
É
 %
m_FallbackFontAsseTable
É
É
 6
=
É
É
7 8
serializedObject
É
É
9 I
.
É
É
I J
FindProperty
É
É
J V
(
É
É
V W
$str
É
É
W q
)
É
É
q r
;
É
É
r s
bool
Ö
Ö
 
isListDirty
Ö
Ö
 
=
Ö
Ö
 
false
Ö
Ö
 $
;
Ö
Ö
$ %
int
á
á
 
elementCount
á
á
 
=
á
á
 %
m_FallbackFontAsseTable
á
á
 6
.
á
á
6 7
	arraySize
á
á
7 @
;
á
á
@ A
for
â
â
 
(
â
â
 
int
â
â
 
i
â
â
 
=
â
â
 
$num
â
â
 
;
â
â
 
i
â
â
 
<
â
â
 
elementCount
â
â
  ,
;
â
â
, -
i
â
â
. /
++
â
â
/ 1
)
â
â
1 2
{
ä
ä
  
SerializedProperty
ã
ã
 "
element
ã
ã
# *
=
ã
ã
+ ,%
m_FallbackFontAsseTable
ã
ã
- D
.
ã
ã
D E$
GetArrayElementAtIndex
ã
ã
E [
(
ã
ã
[ \
i
ã
ã
\ ]
)
ã
ã
] ^
;
ã
ã
^ _
if
å
å
 
(
å
å
 
element
å
å
 
.
å
å
 "
objectReferenceValue
å
å
 0
==
å
å
1 3
null
å
å
4 8
)
å
å
8 9
{
ç
ç
 %
m_FallbackFontAsseTable
é
é
 +
.
é
é
+ ,'
DeleteArrayElementAtIndex
é
é
, E
(
é
é
E F
i
é
é
F G
)
é
é
G H
;
é
é
H I
elementCount
è
è
  
-=
è
è
! #
$num
è
è
$ %
;
è
è
% &
i
ê
ê
 
-=
ê
ê
 
$num
ê
ê
 
;
ê
ê
 
isListDirty
í
í
 
=
í
í
  !
true
í
í
" &
;
í
í
& '
}
ì
ì
 
}
î
î
 
if
ñ
ñ
 
(
ñ
ñ
 
isListDirty
ñ
ñ
 
)
ñ
ñ
 
{
ó
ó
 
serializedObject
ò
ò
  
.
ò
ò
  !%
ApplyModifiedProperties
ò
ò
! 8
(
ò
ò
8 9
)
ò
ò
9 :
;
ò
ò
: ;
serializedObject
ô
ô
  
.
ô
ô
  !
Update
ô
ô
! '
(
ô
ô
' (
)
ô
ô
( )
;
ô
ô
) *
}
ö
ö
 
}
õ
õ
 	
void
ù
ù
 *
SavedAtlasGenerationSettings
ù
ù
 )
(
ù
ù
) *
)
ù
ù
* +
{
û
û
 	
m_AtlasSettings
ü
ü
 
.
ü
ü
 
glyphRenderMode
ü
ü
 +
=
ü
ü
, -
(
ü
ü
. /
GlyphRenderMode
ü
ü
/ >
)
ü
ü
> ?$
m_AtlasRenderMode_prop
ü
ü
? U
.
ü
ü
U V
intValue
ü
ü
V ^
;
ü
ü
^ _
m_AtlasSettings
†
†
 
.
†
†
 
	pointSize
†
†
 %
=
†
†
, -&
m_SamplingPointSize_prop
†
†
. F
.
†
†
F G
intValue
†
†
G O
;
†
†
O P
m_AtlasSettings
°
°
 
.
°
°
 
padding
°
°
 #
=
°
°
, -!
m_AtlasPadding_prop
°
°
. A
.
°
°
A B
intValue
°
°
B J
;
°
°
J K
m_AtlasSettings
¢
¢
 
.
¢
¢
 

atlasWidth
¢
¢
 &
=
¢
¢
, -
m_AtlasWidth_prop
¢
¢
. ?
.
¢
¢
? @
intValue
¢
¢
@ H
;
¢
¢
H I
m_AtlasSettings
£
£
 
.
£
£
 
atlasHeight
£
£
 '
=
£
£
, - 
m_AtlasHeight_prop
£
£
. @
.
£
£
@ A
intValue
£
£
A I
;
£
£
I J
}
§
§
 	
void
¶
¶
 ,
RestoreAtlasGenerationSettings
¶
¶
 +
(
¶
¶
+ ,
)
¶
¶
, -
{
ß
ß
 	$
m_AtlasRenderMode_prop
®
®
 "
.
®
®
" #
intValue
®
®
# +
=
®
®
, -
(
®
®
. /
int
®
®
/ 2
)
®
®
2 3
m_AtlasSettings
®
®
3 B
.
®
®
B C
glyphRenderMode
®
®
C R
;
®
®
R S&
m_SamplingPointSize_prop
©
©
 $
.
©
©
$ %
intValue
©
©
% -
=
©
©
. /
m_AtlasSettings
©
©
0 ?
.
©
©
? @
	pointSize
©
©
@ I
;
©
©
I J!
m_AtlasPadding_prop
™
™
 
.
™
™
  
intValue
™
™
  (
=
™
™
) *
m_AtlasSettings
™
™
+ :
.
™
™
: ;
padding
™
™
; B
;
™
™
B C
m_AtlasWidth_prop
´
´
 
.
´
´
 
intValue
´
´
 &
=
´
´
' (
m_AtlasSettings
´
´
) 8
.
´
´
8 9

atlasWidth
´
´
9 C
;
´
´
C D 
m_AtlasHeight_prop
¨
¨
 
.
¨
¨
 
intValue
¨
¨
 '
=
¨
¨
( )
m_AtlasSettings
¨
¨
* 9
.
¨
¨
9 :
atlasHeight
¨
¨
: E
;
¨
¨
E F
}
≠
≠
 	
void
∞
∞
 -
UpdateFontAssetCreationSettings
∞
∞
 ,
(
∞
∞
, -
)
∞
∞
- .
{
±
±
 	
m_fontAsset
≤
≤
 
.
≤
≤
  
m_CreationSettings
≤
≤
 *
.
≤
≤
* +
	pointSize
≤
≤
+ 4
=
≤
≤
5 6&
m_SamplingPointSize_prop
≤
≤
7 O
.
≤
≤
O P
intValue
≤
≤
P X
;
≤
≤
X Y
m_fontAsset
≥
≥
 
.
≥
≥
  
m_CreationSettings
≥
≥
 *
.
≥
≥
* +

renderMode
≥
≥
+ 5
=
≥
≥
6 7$
m_AtlasRenderMode_prop
≥
≥
8 N
.
≥
≥
N O
intValue
≥
≥
O W
;
≥
≥
W X
m_fontAsset
¥
¥
 
.
¥
¥
  
m_CreationSettings
¥
¥
 *
.
¥
¥
* +
padding
¥
¥
+ 2
=
¥
¥
3 4!
m_AtlasPadding_prop
¥
¥
5 H
.
¥
¥
H I
intValue
¥
¥
I Q
;
¥
¥
Q R
m_fontAsset
µ
µ
 
.
µ
µ
  
m_CreationSettings
µ
µ
 *
.
µ
µ
* +

atlasWidth
µ
µ
+ 5
=
µ
µ
6 7
m_AtlasWidth_prop
µ
µ
8 I
.
µ
µ
I J
intValue
µ
µ
J R
;
µ
µ
R S
m_fontAsset
∂
∂
 
.
∂
∂
  
m_CreationSettings
∂
∂
 *
.
∂
∂
* +
atlasHeight
∂
∂
+ 6
=
∂
∂
7 8 
m_AtlasHeight_prop
∂
∂
9 K
.
∂
∂
K L
intValue
∂
∂
L T
;
∂
∂
T U
}
∑
∑
 	
void
∫
∫
 !
UpdateCharacterData
∫
∫
  
(
∫
∫
  ! 
SerializedProperty
∫
∫
! 3
property
∫
∫
4 <
,
∫
∫
< =
int
∫
∫
> A
index
∫
∫
B G
)
∫
∫
G H
{
ª
ª
 	
TMP_Character
º
º
 
	character
º
º
 #
=
º
º
$ %
m_fontAsset
º
º
& 1
.
º
º
1 2
characterTable
º
º
2 @
[
º
º
@ A
index
º
º
A F
]
º
º
F G
;
º
º
G H
	character
æ
æ
 
.
æ
æ
 
unicode
æ
æ
 
=
æ
æ
 
(
æ
æ
  !
uint
æ
æ
! %
)
æ
æ
% &
property
æ
æ
& .
.
æ
æ
. /"
FindPropertyRelative
æ
æ
/ C
(
æ
æ
C D
$str
æ
æ
D O
)
æ
æ
O P
.
æ
æ
P Q
intValue
æ
æ
Q Y
;
æ
æ
Y Z
	character
ø
ø
 
.
ø
ø
 
scale
ø
ø
 
=
ø
ø
 
property
ø
ø
 &
.
ø
ø
& '"
FindPropertyRelative
ø
ø
' ;
(
ø
ø
; <
$str
ø
ø
< E
)
ø
ø
E F
.
ø
ø
F G

floatValue
ø
ø
G Q
;
ø
ø
Q R 
SerializedProperty
¡
¡
 
glyphProperty
¡
¡
 ,
=
¡
¡
- .
property
¡
¡
/ 7
.
¡
¡
7 8"
FindPropertyRelative
¡
¡
8 L
(
¡
¡
L M
$str
¡
¡
M V
)
¡
¡
V W
;
¡
¡
W X
	character
¬
¬
 
.
¬
¬
 
glyph
¬
¬
 
.
¬
¬
 
index
¬
¬
 !
=
¬
¬
" #
(
¬
¬
$ %
uint
¬
¬
% )
)
¬
¬
) *
glyphProperty
¬
¬
* 7
.
¬
¬
7 8"
FindPropertyRelative
¬
¬
8 L
(
¬
¬
L M
$str
¬
¬
M V
)
¬
¬
V W
.
¬
¬
W X
intValue
¬
¬
X `
;
¬
¬
` a 
SerializedProperty
ƒ
ƒ
 
glyphRectProperty
ƒ
ƒ
 0
=
ƒ
ƒ
1 2
glyphProperty
ƒ
ƒ
3 @
.
ƒ
ƒ
@ A"
FindPropertyRelative
ƒ
ƒ
A U
(
ƒ
ƒ
U V
$str
ƒ
ƒ
V c
)
ƒ
ƒ
c d
;
ƒ
ƒ
d e
	character
≈
≈
 
.
≈
≈
 
glyph
≈
≈
 
.
≈
≈
 
	glyphRect
≈
≈
 %
=
≈
≈
& '
new
≈
≈
( +
	GlyphRect
≈
≈
, 5
(
≈
≈
5 6
glyphRectProperty
≈
≈
6 G
.
≈
≈
G H"
FindPropertyRelative
≈
≈
H \
(
≈
≈
\ ]
$str
≈
≈
] b
)
≈
≈
b c
.
≈
≈
c d
intValue
≈
≈
d l
,
≈
≈
l m
glyphRectProperty
≈
≈
n 
.≈
≈
 Ä$
FindPropertyRelative≈
≈
Ä î
(≈
≈
î ï
$str≈
≈
ï ö
)≈
≈
ö õ
.≈
≈
õ ú
intValue≈
≈
ú §
,≈
≈
§ •!
glyphRectProperty≈
≈
¶ ∑
.≈
≈
∑ ∏$
FindPropertyRelative≈
≈
∏ Ã
(≈
≈
Ã Õ
$str≈
≈
Õ ÷
)≈
≈
÷ ◊
.≈
≈
◊ ÿ
intValue≈
≈
ÿ ‡
,≈
≈
‡ ·!
glyphRectProperty≈
≈
‚ Û
.≈
≈
Û Ù$
FindPropertyRelative≈
≈
Ù à
(≈
≈
à â
$str≈
≈
â ì
)≈
≈
ì î
.≈
≈
î ï
intValue≈
≈
ï ù
)≈
≈
ù û
;≈
≈
û ü 
SerializedProperty
«
«
 "
glyphMetricsProperty
«
«
 3
=
«
«
4 5
glyphProperty
«
«
6 C
.
«
«
C D"
FindPropertyRelative
«
«
D X
(
«
«
X Y
$str
«
«
Y d
)
«
«
d e
;
«
«
e f
	character
»
»
 
.
»
»
 
glyph
»
»
 
.
»
»
 
metrics
»
»
 #
=
»
»
$ %
new
»
»
& )
GlyphMetrics
»
»
* 6
(
»
»
6 7"
glyphMetricsProperty
»
»
7 K
.
»
»
K L"
FindPropertyRelative
»
»
L `
(
»
»
` a
$str
»
»
a j
)
»
»
j k
.
»
»
k l

floatValue
»
»
l v
,
»
»
v w#
glyphMetricsProperty»
»
x å
.»
»
å ç$
FindPropertyRelative»
»
ç °
(»
»
° ¢
$str»
»
¢ ¨
)»
»
¨ ≠
.»
»
≠ Æ

floatValue»
»
Æ ∏
,»
»
∏ π$
glyphMetricsProperty»
»
∫ Œ
.»
»
Œ œ$
FindPropertyRelative»
»
œ „
(»
»
„ ‰
$str»
»
‰ ˙
)»
»
˙ ˚
.»
»
˚ ¸

floatValue»
»
¸ Ü
,»
»
Ü á$
glyphMetricsProperty»
»
à ú
.»
»
ú ù$
FindPropertyRelative»
»
ù ±
(»
»
± ≤
$str»
»
≤ »
)»
»
» …
.»
»
…  

floatValue»
»
  ‘
,»
»
‘ ’$
glyphMetricsProperty»
»
÷ Í
.»
»
Í Î$
FindPropertyRelative»
»
Î ˇ
(»
»
ˇ Ä
$str»
»
Ä ï
)»
»
ï ñ
.»
»
ñ ó

floatValue»
»
ó °
)»
»
° ¢
;»
»
¢ £
	character
 
 
 
.
 
 
 
glyph
 
 
 
.
 
 
 
scale
 
 
 !
=
 
 
" #
glyphProperty
 
 
$ 1
.
 
 
1 2"
FindPropertyRelative
 
 
2 F
(
 
 
F G
$str
 
 
G P
)
 
 
P Q
.
 
 
Q R

floatValue
 
 
R \
;
 
 
\ ]
	character
Ã
Ã
 
.
Ã
Ã
 
glyph
Ã
Ã
 
.
Ã
Ã
 

atlasIndex
Ã
Ã
 &
=
Ã
Ã
' (
glyphProperty
Ã
Ã
) 6
.
Ã
Ã
6 7"
FindPropertyRelative
Ã
Ã
7 K
(
Ã
Ã
K L
$str
Ã
Ã
L Z
)
Ã
Ã
Z [
.
Ã
Ã
[ \
intValue
Ã
Ã
\ d
;
Ã
Ã
d e
}
Õ
Õ
 	
void
–
–
 
UpdateGlyphData
–
–
 
(
–
–
  
SerializedProperty
–
–
 /
property
–
–
0 8
,
–
–
8 9
int
–
–
: =
index
–
–
> C
)
–
–
C D
{
—
—
 	
Glyph
“
“
 
glyph
“
“
 
=
“
“
 
m_fontAsset
“
“
 %
.
“
“
% &

glyphTable
“
“
& 0
[
“
“
0 1
index
“
“
1 6
]
“
“
6 7
;
“
“
7 8
glyph
‘
‘
 
.
‘
‘
 
index
‘
‘
 
=
‘
‘
 
(
‘
‘
 
uint
‘
‘
 
)
‘
‘
  
property
‘
‘
  (
.
‘
‘
( )"
FindPropertyRelative
‘
‘
) =
(
‘
‘
= >
$str
‘
‘
> G
)
‘
‘
G H
.
‘
‘
H I
intValue
‘
‘
I Q
;
‘
‘
Q R 
SerializedProperty
÷
÷
 
	glyphRect
÷
÷
 (
=
÷
÷
) *
property
÷
÷
+ 3
.
÷
÷
3 4"
FindPropertyRelative
÷
÷
4 H
(
÷
÷
H I
$str
÷
÷
I V
)
÷
÷
V W
;
÷
÷
W X
glyph
◊
◊
 
.
◊
◊
 
	glyphRect
◊
◊
 
=
◊
◊
 
new
◊
◊
 !
	GlyphRect
◊
◊
" +
(
◊
◊
+ ,
	glyphRect
◊
◊
, 5
.
◊
◊
5 6"
FindPropertyRelative
◊
◊
6 J
(
◊
◊
J K
$str
◊
◊
K P
)
◊
◊
P Q
.
◊
◊
Q R
intValue
◊
◊
R Z
,
◊
◊
Z [
	glyphRect
◊
◊
\ e
.
◊
◊
e f"
FindPropertyRelative
◊
◊
f z
(
◊
◊
z {
$str◊
◊
{ Ä
)◊
◊
Ä Å
.◊
◊
Å Ç
intValue◊
◊
Ç ä
,◊
◊
ä ã
	glyphRect◊
◊
å ï
.◊
◊
ï ñ$
FindPropertyRelative◊
◊
ñ ™
(◊
◊
™ ´
$str◊
◊
´ ¥
)◊
◊
¥ µ
.◊
◊
µ ∂
intValue◊
◊
∂ æ
,◊
◊
æ ø
	glyphRect◊
◊
¿ …
.◊
◊
…  $
FindPropertyRelative◊
◊
  ﬁ
(◊
◊
ﬁ ﬂ
$str◊
◊
ﬂ È
)◊
◊
È Í
.◊
◊
Í Î
intValue◊
◊
Î Û
)◊
◊
Û Ù
;◊
◊
Ù ı 
SerializedProperty
Ÿ
Ÿ
 
glyphMetrics
Ÿ
Ÿ
 +
=
Ÿ
Ÿ
, -
property
Ÿ
Ÿ
. 6
.
Ÿ
Ÿ
6 7"
FindPropertyRelative
Ÿ
Ÿ
7 K
(
Ÿ
Ÿ
K L
$str
Ÿ
Ÿ
L W
)
Ÿ
Ÿ
W X
;
Ÿ
Ÿ
X Y
glyph
⁄
⁄
 
.
⁄
⁄
 
metrics
⁄
⁄
 
=
⁄
⁄
 
new
⁄
⁄
 
GlyphMetrics
⁄
⁄
  ,
(
⁄
⁄
, -
glyphMetrics
⁄
⁄
- 9
.
⁄
⁄
9 :"
FindPropertyRelative
⁄
⁄
: N
(
⁄
⁄
N O
$str
⁄
⁄
O X
)
⁄
⁄
X Y
.
⁄
⁄
Y Z

floatValue
⁄
⁄
Z d
,
⁄
⁄
d e
glyphMetrics
⁄
⁄
f r
.
⁄
⁄
r s#
FindPropertyRelative⁄
⁄
s á
(⁄
⁄
á à
$str⁄
⁄
à í
)⁄
⁄
í ì
.⁄
⁄
ì î

floatValue⁄
⁄
î û
,⁄
⁄
û ü
glyphMetrics⁄
⁄
† ¨
.⁄
⁄
¨ ≠$
FindPropertyRelative⁄
⁄
≠ ¡
(⁄
⁄
¡ ¬
$str⁄
⁄
¬ ÿ
)⁄
⁄
ÿ Ÿ
.⁄
⁄
Ÿ ⁄

floatValue⁄
⁄
⁄ ‰
,⁄
⁄
‰ Â
glyphMetrics⁄
⁄
Ê Ú
.⁄
⁄
Ú Û$
FindPropertyRelative⁄
⁄
Û á
(⁄
⁄
á à
$str⁄
⁄
à û
)⁄
⁄
û ü
.⁄
⁄
ü †

floatValue⁄
⁄
† ™
,⁄
⁄
™ ´
glyphMetrics⁄
⁄
¨ ∏
.⁄
⁄
∏ π$
FindPropertyRelative⁄
⁄
π Õ
(⁄
⁄
Õ Œ
$str⁄
⁄
Œ „
)⁄
⁄
„ ‰
.⁄
⁄
‰ Â

floatValue⁄
⁄
Â Ô
)⁄
⁄
Ô 
;⁄
⁄
 Ò
glyph
‹
‹
 
.
‹
‹
 
scale
‹
‹
 
=
‹
‹
 
property
‹
‹
 "
.
‹
‹
" #"
FindPropertyRelative
‹
‹
# 7
(
‹
‹
7 8
$str
‹
‹
8 A
)
‹
‹
A B
.
‹
‹
B C

floatValue
‹
‹
C M
;
‹
‹
M N
}
›
›
 	
void
‡
‡
 #
DisplayPageNavigation
‡
‡
 "
(
‡
‡
" #
ref
‡
‡
# &
int
‡
‡
' *
currentPage
‡
‡
+ 6
,
‡
‡
6 7
int
‡
‡
8 ;
	arraySize
‡
‡
< E
,
‡
‡
E F
int
‡
‡
G J
itemsPerPage
‡
‡
K W
)
‡
‡
W X
{
·
·
 	
Rect
‚
‚
 
pagePos
‚
‚
 
=
‚
‚
 
EditorGUILayout
‚
‚
 *
.
‚
‚
* +
GetControlRect
‚
‚
+ 9
(
‚
‚
9 :
false
‚
‚
: ?
,
‚
‚
? @
$num
‚
‚
A C
)
‚
‚
C D
;
‚
‚
D E
pagePos
„
„
 
.
„
„
 
width
„
„
 
/=
„
„
 
$num
„
„
 
;
„
„
 
int
Â
Â
 
shiftMultiplier
Â
Â
 
=
Â
Â
  !
Event
Â
Â
" '
.
Â
Â
' (
current
Â
Â
( /
.
Â
Â
/ 0
shift
Â
Â
0 5
?
Â
Â
6 7
$num
Â
Â
8 :
:
Â
Â
; <
$num
Â
Â
= >
;
Â
Â
> ?
GUI
Ë
Ë
 
.
Ë
Ë
 
enabled
Ë
Ë
 
=
Ë
Ë
 
currentPage
Ë
Ë
 %
>
Ë
Ë
& '
$num
Ë
Ë
( )
;
Ë
Ë
) *
if
Í
Í
 
(
Í
Í
 
GUI
Í
Í
 
.
Í
Í
 
Button
Í
Í
 
(
Í
Í
 
pagePos
Í
Í
 "
,
Í
Í
" #
$str
Í
Í
$ 3
)
Í
Í
3 4
)
Í
Í
4 5
currentPage
Î
Î
 
-=
Î
Î
 
$num
Î
Î
  
*
Î
Î
! "
shiftMultiplier
Î
Î
# 2
;
Î
Î
2 3
GUI
Ô
Ô
 
.
Ô
Ô
 
enabled
Ô
Ô
 
=
Ô
Ô
 
true
Ô
Ô
 
;
Ô
Ô
 
pagePos


 
.


 
x


 
+=


 
pagePos


  
.


  !
width


! &
;


& '
int
Ò
Ò
 

totalPages
Ò
Ò
 
=
Ò
Ò
 
(
Ò
Ò
 
int
Ò
Ò
 !
)
Ò
Ò
! "
(
Ò
Ò
" #
	arraySize
Ò
Ò
# ,
/
Ò
Ò
- .
(
Ò
Ò
/ 0
float
Ò
Ò
0 5
)
Ò
Ò
5 6
itemsPerPage
Ò
Ò
6 B
+
Ò
Ò
C D
$num
Ò
Ò
E K
)
Ò
Ò
K L
;
Ò
Ò
L M
GUI
Ú
Ú
 
.
Ú
Ú
 
Label
Ú
Ú
 
(
Ú
Ú
 
pagePos
Ú
Ú
 
,
Ú
Ú
 
$str
Ú
Ú
 &
+
Ú
Ú
' (
(
Ú
Ú
) *
currentPage
Ú
Ú
* 5
+
Ú
Ú
6 7
$num
Ú
Ú
8 9
)
Ú
Ú
9 :
+
Ú
Ú
; <
$str
Ú
Ú
= B
+
Ú
Ú
C D

totalPages
Ú
Ú
E O
,
Ú
Ú
O P 
TMP_UIStyleManager
Ú
Ú
Q c
.
Ú
Ú
c d
centeredLabel
Ú
Ú
d q
)
Ú
Ú
q r
;
Ú
Ú
r s
pagePos
ı
ı
 
.
ı
ı
 
x
ı
ı
 
+=
ı
ı
 
pagePos
ı
ı
  
.
ı
ı
  !
width
ı
ı
! &
;
ı
ı
& '
GUI
ˆ
ˆ
 
.
ˆ
ˆ
 
enabled
ˆ
ˆ
 
=
ˆ
ˆ
 
itemsPerPage
ˆ
ˆ
 &
*
ˆ
ˆ
' (
(
ˆ
ˆ
) *
currentPage
ˆ
ˆ
* 5
+
ˆ
ˆ
6 7
$num
ˆ
ˆ
8 9
)
ˆ
ˆ
9 :
<
ˆ
ˆ
; <
	arraySize
ˆ
ˆ
= F
;
ˆ
ˆ
F G
if
¯
¯
 
(
¯
¯
 
GUI
¯
¯
 
.
¯
¯
 
Button
¯
¯
 
(
¯
¯
 
pagePos
¯
¯
 "
,
¯
¯
" #
$str
¯
¯
$ /
)
¯
¯
/ 0
)
¯
¯
0 1
currentPage
˘
˘
 
+=
˘
˘
 
$num
˘
˘
  
*
˘
˘
! "
shiftMultiplier
˘
˘
# 2
;
˘
˘
2 3
currentPage
¸
¸
 
=
¸
¸
 
Mathf
¸
¸
 
.
¸
¸
  
Clamp
¸
¸
  %
(
¸
¸
% &
currentPage
¸
¸
& 1
,
¸
¸
1 2
$num
¸
¸
3 4
,
¸
¸
4 5
	arraySize
¸
¸
6 ?
/
¸
¸
@ A
itemsPerPage
¸
¸
B N
)
¸
¸
N O
;
¸
¸
O P
GUI
˛
˛
 
.
˛
˛
 
enabled
˛
˛
 
=
˛
˛
 
true
˛
˛
 
;
˛
˛
 
}
ˇ
ˇ
 	
bool
áá 
AddNewGlyph
áá 
(
áá 
int
áá 
srcIndex
áá %
,
áá% &
int
áá' *

dstGlyphID
áá+ 5
)
áá5 6
{
àà 	
if
ää 
(
ää 
m_fontAsset
ää 
.
ää 
glyphLookupTable
ää ,
.
ää, -
ContainsKey
ää- 8
(
ää8 9
(
ää9 :
uint
ää: >
)
ää> ?

dstGlyphID
ää? I
)
ääI J
)
ääJ K
return
ãã 
false
ãã 
;
ãã 
m_GlyphTable_prop
éé 
.
éé 
	arraySize
éé '
+=
éé( *
$num
éé+ ,
;
éé, - 
SerializedProperty
ëë 
sourceGlyph
ëë *
=
ëë+ ,
m_GlyphTable_prop
ëë- >
.
ëë> ?$
GetArrayElementAtIndex
ëë? U
(
ëëU V
srcIndex
ëëV ^
)
ëë^ _
;
ëë_ `
int
ìì 
dstIndex
ìì 
=
ìì 
m_GlyphTable_prop
ìì ,
.
ìì, -
	arraySize
ìì- 6
-
ìì7 8
$num
ìì9 :
;
ìì: ; 
SerializedProperty
ññ 
targetGlyph
ññ *
=
ññ+ ,
m_GlyphTable_prop
ññ- >
.
ññ> ?$
GetArrayElementAtIndex
ññ? U
(
ññU V
dstIndex
ññV ^
)
ññ^ _
;
ññ_ `)
CopyGlyphSerializedProperty
òò '
(
òò' (
sourceGlyph
òò( 3
,
òò3 4
ref
òò5 8
targetGlyph
òò9 D
)
òòD E
;
òòE F
targetGlyph
õõ 
.
õõ "
FindPropertyRelative
õõ ,
(
õõ, -
$str
õõ- 6
)
õõ6 7
.
õõ7 8
intValue
õõ8 @
=
õõA B

dstGlyphID
õõC M
;
õõM N
serializedObject
ùù 
.
ùù %
ApplyModifiedProperties
ùù 4
(
ùù4 5
)
ùù5 6
;
ùù6 7
m_fontAsset
üü 
.
üü 
SortGlyphTable
üü &
(
üü& '
)
üü' (
;
üü( )
m_fontAsset
°° 
.
°° %
ReadFontAssetDefinition
°° /
(
°°/ 0
)
°°0 1
;
°°1 2
return
££ 
true
££ 
;
££ 
}
§§ 	
void
™™ !
RemoveGlyphFromList
™™  
(
™™  !
int
™™! $
index
™™% *
)
™™* +
{
´´ 	
if
¨¨ 
(
¨¨ 
index
¨¨ 
>
¨¨ 
m_GlyphTable_prop
¨¨ )
.
¨¨) *
	arraySize
¨¨* 3
)
¨¨3 4
return
≠≠ 
;
≠≠ 
int
ØØ 
targetGlyphIndex
ØØ  
=
ØØ! "
m_GlyphTable_prop
ØØ# 4
.
ØØ4 5$
GetArrayElementAtIndex
ØØ5 K
(
ØØK L
index
ØØL Q
)
ØØQ R
.
ØØR S"
FindPropertyRelative
ØØS g
(
ØØg h
$str
ØØh q
)
ØØq r
.
ØØr s
intValue
ØØs {
;
ØØ{ |
m_GlyphTable_prop
±± 
.
±± '
DeleteArrayElementAtIndex
±± 7
(
±±7 8
index
±±8 =
)
±±= >
;
±±> ?
for
¥¥ 
(
¥¥ 
int
¥¥ 
i
¥¥ 
=
¥¥ 
$num
¥¥ 
;
¥¥ 
i
¥¥ 
<
¥¥ #
m_CharacterTable_prop
¥¥  5
.
¥¥5 6
	arraySize
¥¥6 ?
;
¥¥? @
i
¥¥A B
++
¥¥B D
)
¥¥D E
{
µµ 
int
∂∂ 

glyphIndex
∂∂ 
=
∂∂  #
m_CharacterTable_prop
∂∂! 6
.
∂∂6 7$
GetArrayElementAtIndex
∂∂7 M
(
∂∂M N
i
∂∂N O
)
∂∂O P
.
∂∂P Q"
FindPropertyRelative
∂∂Q e
(
∂∂e f
$str
∂∂f t
)
∂∂t u
.
∂∂u v
intValue
∂∂v ~
;
∂∂~ 
if
∏∏ 
(
∏∏ 

glyphIndex
∏∏ 
==
∏∏ !
targetGlyphIndex
∏∏" 2
)
∏∏2 3
{
ππ #
m_CharacterTable_prop
ªª )
.
ªª) *'
DeleteArrayElementAtIndex
ªª* C
(
ªªC D
i
ªªD E
)
ªªE F
;
ªªF G
}
ºº 
}
ΩΩ 
serializedObject
øø 
.
øø %
ApplyModifiedProperties
øø 4
(
øø4 5
)
øø5 6
;
øø6 7
m_fontAsset
¡¡ 
.
¡¡ %
ReadFontAssetDefinition
¡¡ /
(
¡¡/ 0
)
¡¡0 1
;
¡¡1 2
}
¬¬ 	
bool
ƒƒ 
AddNewCharacter
ƒƒ 
(
ƒƒ 
int
ƒƒ  
srcIndex
ƒƒ! )
,
ƒƒ) *
int
ƒƒ+ .

dstGlyphID
ƒƒ/ 9
)
ƒƒ9 :
{
≈≈ 	
if
«« 
(
«« 
m_fontAsset
«« 
.
«« "
characterLookupTable
«« 0
.
««0 1
ContainsKey
««1 <
(
««< =
(
««= >
uint
««> B
)
««B C

dstGlyphID
««C M
)
««M N
)
««N O
return
»» 
false
»» 
;
»» #
m_CharacterTable_prop
ÀÀ !
.
ÀÀ! "
	arraySize
ÀÀ" +
+=
ÀÀ, .
$num
ÀÀ/ 0
;
ÀÀ0 1 
SerializedProperty
ŒŒ 
sourceCharacter
ŒŒ .
=
ŒŒ/ 0#
m_CharacterTable_prop
ŒŒ1 F
.
ŒŒF G$
GetArrayElementAtIndex
ŒŒG ]
(
ŒŒ] ^
srcIndex
ŒŒ^ f
)
ŒŒf g
;
ŒŒg h
int
–– 
dstIndex
–– 
=
–– #
m_CharacterTable_prop
–– 0
.
––0 1
	arraySize
––1 :
-
––; <
$num
––= >
;
––> ? 
SerializedProperty
”” 
targetCharacter
”” .
=
””/ 0#
m_CharacterTable_prop
””1 F
.
””F G$
GetArrayElementAtIndex
””G ]
(
””] ^
dstIndex
””^ f
)
””f g
;
””g h-
CopyCharacterSerializedProperty
’’ +
(
’’+ ,
sourceCharacter
’’, ;
,
’’; <
ref
’’= @
targetCharacter
’’A P
)
’’P Q
;
’’Q R
targetCharacter
ÿÿ 
.
ÿÿ "
FindPropertyRelative
ÿÿ 0
(
ÿÿ0 1
$str
ÿÿ1 <
)
ÿÿ< =
.
ÿÿ= >
intValue
ÿÿ> F
=
ÿÿG H

dstGlyphID
ÿÿI S
;
ÿÿS T
serializedObject
⁄⁄ 
.
⁄⁄ %
ApplyModifiedProperties
⁄⁄ 4
(
⁄⁄4 5
)
⁄⁄5 6
;
⁄⁄6 7
m_fontAsset
‹‹ 
.
‹‹  
SortCharacterTable
‹‹ *
(
‹‹* +
)
‹‹+ ,
;
‹‹, -
m_fontAsset
ﬁﬁ 
.
ﬁﬁ %
ReadFontAssetDefinition
ﬁﬁ /
(
ﬁﬁ/ 0
)
ﬁﬁ0 1
;
ﬁﬁ1 2
return
‡‡ 
true
‡‡ 
;
‡‡ 
}
·· 	
void
„„ %
RemoveCharacterFromList
„„ $
(
„„$ %
int
„„% (
index
„„) .
)
„„. /
{
‰‰ 	
if
ÂÂ 
(
ÂÂ 
index
ÂÂ 
>
ÂÂ #
m_CharacterTable_prop
ÂÂ -
.
ÂÂ- .
	arraySize
ÂÂ. 7
)
ÂÂ7 8
return
ÊÊ 
;
ÊÊ #
m_CharacterTable_prop
ËË !
.
ËË! "'
DeleteArrayElementAtIndex
ËË" ;
(
ËË; <
index
ËË< A
)
ËËA B
;
ËËB C
serializedObject
ÍÍ 
.
ÍÍ %
ApplyModifiedProperties
ÍÍ 4
(
ÍÍ4 5
)
ÍÍ5 6
;
ÍÍ6 7
m_fontAsset
ÏÏ 
.
ÏÏ %
ReadFontAssetDefinition
ÏÏ /
(
ÏÏ/ 0
)
ÏÏ0 1
;
ÏÏ1 2
}
ÌÌ 	
private
ÒÒ 
bool
ÒÒ 
DoSelectionCheck
ÒÒ %
(
ÒÒ% &
Rect
ÒÒ& *
selectionArea
ÒÒ+ 8
)
ÒÒ8 9
{
ÚÚ 	
Event
ÛÛ 
currentEvent
ÛÛ 
=
ÛÛ  
Event
ÛÛ! &
.
ÛÛ& '
current
ÛÛ' .
;
ÛÛ. /
switch
ıı 
(
ıı 
currentEvent
ıı  
.
ıı  !
type
ıı! %
)
ıı% &
{
ˆˆ 
case
˜˜ 
	EventType
˜˜ 
.
˜˜ 
	MouseDown
˜˜ (
:
˜˜( )
if
¯¯ 
(
¯¯ 
selectionArea
¯¯ %
.
¯¯% &
Contains
¯¯& .
(
¯¯. /
currentEvent
¯¯/ ;
.
¯¯; <
mousePosition
¯¯< I
)
¯¯I J
&&
¯¯K M
currentEvent
¯¯N Z
.
¯¯Z [
button
¯¯[ a
==
¯¯b d
$num
¯¯e f
)
¯¯f g
{
˘˘ 
currentEvent
˙˙ $
.
˙˙$ %
Use
˙˙% (
(
˙˙( )
)
˙˙) *
;
˙˙* +
return
˚˚ 
true
˚˚ #
;
˚˚# $
}
¸¸ 
break
˛˛ 
;
˛˛ 
}
ˇˇ 
return
ÅÅ 
false
ÅÅ 
;
ÅÅ 
}
ÇÇ 	"
TMP_GlyphValueRecord
ÑÑ 
GetValueRecord
ÑÑ +
(
ÑÑ+ , 
SerializedProperty
ÑÑ, >
property
ÑÑ? G
)
ÑÑG H
{
ÖÖ 	"
TMP_GlyphValueRecord
ÜÜ  
record
ÜÜ! '
=
ÜÜ( )
new
ÜÜ* -"
TMP_GlyphValueRecord
ÜÜ. B
(
ÜÜB C
)
ÜÜC D
;
ÜÜD E
record
áá 
.
áá 

xPlacement
áá 
=
áá 
property
áá  (
.
áá( )"
FindPropertyRelative
áá) =
(
áá= >
$str
áá> L
)
ááL M
.
ááM N

floatValue
ááN X
;
ááX Y
record
àà 
.
àà 

yPlacement
àà 
=
àà 
property
àà  (
.
àà( )"
FindPropertyRelative
àà) =
(
àà= >
$str
àà> L
)
ààL M
.
ààM N

floatValue
ààN X
;
ààX Y
record
ââ 
.
ââ 
xAdvance
ââ 
=
ââ 
property
ââ &
.
ââ& '"
FindPropertyRelative
ââ' ;
(
ââ; <
$str
ââ< H
)
ââH I
.
ââI J

floatValue
ââJ T
;
ââT U
record
ää 
.
ää 
yAdvance
ää 
=
ää 
property
ää &
.
ää& '"
FindPropertyRelative
ää' ;
(
ää; <
$str
ää< H
)
ääH I
.
ääI J

floatValue
ääJ T
;
ääT U
return
åå 
record
åå 
;
åå 
}
çç 	
void
èè *
RemoveAdjustmentPairFromList
èè )
(
èè) *
int
èè* -
index
èè. 3
)
èè3 4
{
êê 	
if
ëë 
(
ëë 
index
ëë 
>
ëë /
!m_GlyphPairAdjustmentRecords_prop
ëë 9
.
ëë9 :
	arraySize
ëë: C
)
ëëC D
return
íí 
;
íí /
!m_GlyphPairAdjustmentRecords_prop
îî -
.
îî- .'
DeleteArrayElementAtIndex
îî. G
(
îîG H
index
îîH M
)
îîM N
;
îîN O
serializedObject
ññ 
.
ññ %
ApplyModifiedProperties
ññ 4
(
ññ4 5
)
ññ5 6
;
ññ6 7
m_fontAsset
òò 
.
òò %
ReadFontAssetDefinition
òò /
(
òò/ 0
)
òò0 1
;
òò1 2
}
ôô 	
void
†† )
CopyGlyphSerializedProperty
†† (
(
††( ) 
SerializedProperty
††) ;
srcGlyph
††< D
,
††D E
ref
††F I 
SerializedProperty
††J \
dstGlyph
††] e
)
††e f
{
°° 	
dstGlyph
££ 
.
££ "
FindPropertyRelative
££ )
(
££) *
$str
££* 3
)
££3 4
.
££4 5
intValue
££5 =
=
££> ?
srcGlyph
££@ H
.
££H I"
FindPropertyRelative
££I ]
(
££] ^
$str
££^ g
)
££g h
.
££h i
intValue
££i q
;
££q r 
SerializedProperty
¶¶ 
srcGlyphMetrics
¶¶ .
=
¶¶/ 0
srcGlyph
¶¶1 9
.
¶¶9 :"
FindPropertyRelative
¶¶: N
(
¶¶N O
$str
¶¶O Z
)
¶¶Z [
;
¶¶[ \ 
SerializedProperty
ßß 
dstGlyphMetrics
ßß .
=
ßß/ 0
dstGlyph
ßß1 9
.
ßß9 :"
FindPropertyRelative
ßß: N
(
ßßN O
$str
ßßO Z
)
ßßZ [
;
ßß[ \
dstGlyphMetrics
©© 
.
©© "
FindPropertyRelative
©© 0
(
©©0 1
$str
©©1 :
)
©©: ;
.
©©; <

floatValue
©©< F
=
©©G H
srcGlyphMetrics
©©I X
.
©©X Y"
FindPropertyRelative
©©Y m
(
©©m n
$str
©©n w
)
©©w x
.
©©x y

floatValue©©y É
;©©É Ñ
dstGlyphMetrics
™™ 
.
™™ "
FindPropertyRelative
™™ 0
(
™™0 1
$str
™™1 ;
)
™™; <
.
™™< =

floatValue
™™= G
=
™™H I
srcGlyphMetrics
™™J Y
.
™™Y Z"
FindPropertyRelative
™™Z n
(
™™n o
$str
™™o y
)
™™y z
.
™™z {

floatValue™™{ Ö
;™™Ö Ü
dstGlyphMetrics
´´ 
.
´´ "
FindPropertyRelative
´´ 0
(
´´0 1
$str
´´1 G
)
´´G H
.
´´H I

floatValue
´´I S
=
´´T U
srcGlyphMetrics
´´V e
.
´´e f"
FindPropertyRelative
´´f z
(
´´z {
$str´´{ ë
)´´ë í
.´´í ì

floatValue´´ì ù
;´´ù û
dstGlyphMetrics
¨¨ 
.
¨¨ "
FindPropertyRelative
¨¨ 0
(
¨¨0 1
$str
¨¨1 G
)
¨¨G H
.
¨¨H I

floatValue
¨¨I S
=
¨¨T U
srcGlyphMetrics
¨¨V e
.
¨¨e f"
FindPropertyRelative
¨¨f z
(
¨¨z {
$str¨¨{ ë
)¨¨ë í
.¨¨í ì

floatValue¨¨ì ù
;¨¨ù û
dstGlyphMetrics
≠≠ 
.
≠≠ "
FindPropertyRelative
≠≠ 0
(
≠≠0 1
$str
≠≠1 F
)
≠≠F G
.
≠≠G H

floatValue
≠≠H R
=
≠≠S T
srcGlyphMetrics
≠≠U d
.
≠≠d e"
FindPropertyRelative
≠≠e y
(
≠≠y z
$str≠≠z è
)≠≠è ê
.≠≠ê ë

floatValue≠≠ë õ
;≠≠õ ú 
SerializedProperty
∞∞ 
srcGlyphRect
∞∞ +
=
∞∞, -
srcGlyph
∞∞. 6
.
∞∞6 7"
FindPropertyRelative
∞∞7 K
(
∞∞K L
$str
∞∞L Y
)
∞∞Y Z
;
∞∞Z [ 
SerializedProperty
±± 
dstGlyphRect
±± +
=
±±, -
dstGlyph
±±. 6
.
±±6 7"
FindPropertyRelative
±±7 K
(
±±K L
$str
±±L Y
)
±±Y Z
;
±±Z [
dstGlyphRect
≥≥ 
.
≥≥ "
FindPropertyRelative
≥≥ -
(
≥≥- .
$str
≥≥. 3
)
≥≥3 4
.
≥≥4 5
intValue
≥≥5 =
=
≥≥> ?
srcGlyphRect
≥≥@ L
.
≥≥L M"
FindPropertyRelative
≥≥M a
(
≥≥a b
$str
≥≥b g
)
≥≥g h
.
≥≥h i
intValue
≥≥i q
;
≥≥q r
dstGlyphRect
¥¥ 
.
¥¥ "
FindPropertyRelative
¥¥ -
(
¥¥- .
$str
¥¥. 3
)
¥¥3 4
.
¥¥4 5
intValue
¥¥5 =
=
¥¥> ?
srcGlyphRect
¥¥@ L
.
¥¥L M"
FindPropertyRelative
¥¥M a
(
¥¥a b
$str
¥¥b g
)
¥¥g h
.
¥¥h i
intValue
¥¥i q
;
¥¥q r
dstGlyphRect
µµ 
.
µµ "
FindPropertyRelative
µµ -
(
µµ- .
$str
µµ. 7
)
µµ7 8
.
µµ8 9
intValue
µµ9 A
=
µµB C
srcGlyphRect
µµD P
.
µµP Q"
FindPropertyRelative
µµQ e
(
µµe f
$str
µµf o
)
µµo p
.
µµp q
intValue
µµq y
;
µµy z
dstGlyphRect
∂∂ 
.
∂∂ "
FindPropertyRelative
∂∂ -
(
∂∂- .
$str
∂∂. 8
)
∂∂8 9
.
∂∂9 :
intValue
∂∂: B
=
∂∂C D
srcGlyphRect
∂∂E Q
.
∂∂Q R"
FindPropertyRelative
∂∂R f
(
∂∂f g
$str
∂∂g q
)
∂∂q r
.
∂∂r s
intValue
∂∂s {
;
∂∂{ |
dstGlyph
∏∏ 
.
∏∏ "
FindPropertyRelative
∏∏ )
(
∏∏) *
$str
∏∏* 3
)
∏∏3 4
.
∏∏4 5

floatValue
∏∏5 ?
=
∏∏@ A
srcGlyph
∏∏B J
.
∏∏J K"
FindPropertyRelative
∏∏K _
(
∏∏_ `
$str
∏∏` i
)
∏∏i j
.
∏∏j k

floatValue
∏∏k u
;
∏∏u v
dstGlyph
ππ 
.
ππ "
FindPropertyRelative
ππ )
(
ππ) *
$str
ππ* 8
)
ππ8 9
.
ππ9 :
intValue
ππ: B
=
ππC D
srcGlyph
ππE M
.
ππM N"
FindPropertyRelative
ππN b
(
ππb c
$str
ππc q
)
ππq r
.
ππr s
intValue
ππs {
;
ππ{ |
}
∫∫ 	
void
ΩΩ -
CopyCharacterSerializedProperty
ΩΩ ,
(
ΩΩ, - 
SerializedProperty
ΩΩ- ?
source
ΩΩ@ F
,
ΩΩF G
ref
ΩΩH K 
SerializedProperty
ΩΩL ^
target
ΩΩ_ e
)
ΩΩe f
{
ææ 	
int
¿¿ 
unicode
¿¿ 
=
¿¿ 
source
¿¿  
.
¿¿  !"
FindPropertyRelative
¿¿! 5
(
¿¿5 6
$str
¿¿6 A
)
¿¿A B
.
¿¿B C
intValue
¿¿C K
;
¿¿K L
target
¡¡ 
.
¡¡ "
FindPropertyRelative
¡¡ '
(
¡¡' (
$str
¡¡( 3
)
¡¡3 4
.
¡¡4 5
intValue
¡¡5 =
=
¡¡> ?
unicode
¡¡@ G
;
¡¡G H
int
√√ 
srcGlyphIndex
√√ 
=
√√ 
source
√√  &
.
√√& '"
FindPropertyRelative
√√' ;
(
√√; <
$str
√√< J
)
√√J K
.
√√K L
intValue
√√L T
;
√√T U
target
ƒƒ 
.
ƒƒ "
FindPropertyRelative
ƒƒ '
(
ƒƒ' (
$str
ƒƒ( 6
)
ƒƒ6 7
.
ƒƒ7 8
intValue
ƒƒ8 @
=
ƒƒA B
srcGlyphIndex
ƒƒC P
;
ƒƒP Q
target
∆∆ 
.
∆∆ "
FindPropertyRelative
∆∆ '
(
∆∆' (
$str
∆∆( 1
)
∆∆1 2
.
∆∆2 3

floatValue
∆∆3 =
=
∆∆> ?
source
∆∆@ F
.
∆∆F G"
FindPropertyRelative
∆∆G [
(
∆∆[ \
$str
∆∆\ e
)
∆∆e f
.
∆∆f g

floatValue
∆∆g q
;
∆∆q r
}
«« 	
void
œœ 
SearchGlyphTable
œœ 
(
œœ 
string
œœ %
searchPattern
œœ& 3
,
œœ3 4
ref
œœ5 8
List
œœ9 =
<
œœ= >
int
œœ> A
>
œœA B
searchResults
œœC P
)
œœP Q
{
–– 	
if
—— 
(
—— 
searchResults
—— 
==
——  
null
——! %
)
——% &
searchResults
——' 4
=
——5 6
new
——7 :
List
——; ?
<
——? @
int
——@ C
>
——C D
(
——D E
)
——E F
;
——F G
searchResults
”” 
.
”” 
Clear
”” 
(
””  
)
””  !
;
””! "
int
’’ 
	arraySize
’’ 
=
’’ 
m_GlyphTable_prop
’’ -
.
’’- .
	arraySize
’’. 7
;
’’7 8
for
◊◊ 
(
◊◊ 
int
◊◊ 
i
◊◊ 
=
◊◊ 
$num
◊◊ 
;
◊◊ 
i
◊◊ 
<
◊◊ 
	arraySize
◊◊  )
;
◊◊) *
i
◊◊+ ,
++
◊◊, .
)
◊◊. /
{
ÿÿ  
SerializedProperty
ŸŸ "
sourceGlyph
ŸŸ# .
=
ŸŸ/ 0
m_GlyphTable_prop
ŸŸ1 B
.
ŸŸB C$
GetArrayElementAtIndex
ŸŸC Y
(
ŸŸY Z
i
ŸŸZ [
)
ŸŸ[ \
;
ŸŸ\ ]
int
€€ 
id
€€ 
=
€€ 
sourceGlyph
€€ $
.
€€$ %"
FindPropertyRelative
€€% 9
(
€€9 :
$str
€€: C
)
€€C D
.
€€D E
intValue
€€E M
;
€€M N
if
‚‚ 
(
‚‚ 
id
‚‚ 
.
‚‚ 
ToString
‚‚ 
(
‚‚  
)
‚‚  !
.
‚‚! "
Contains
‚‚" *
(
‚‚* +
searchPattern
‚‚+ 8
)
‚‚8 9
)
‚‚9 :
searchResults
„„ !
.
„„! "
Add
„„" %
(
„„% &
i
„„& '
)
„„' (
;
„„( )
}
ÍÍ 
}
ÎÎ 	
void
ÓÓ "
SearchCharacterTable
ÓÓ !
(
ÓÓ! "
string
ÓÓ" (
searchPattern
ÓÓ) 6
,
ÓÓ6 7
ref
ÓÓ8 ;
List
ÓÓ< @
<
ÓÓ@ A
int
ÓÓA D
>
ÓÓD E
searchResults
ÓÓF S
)
ÓÓS T
{
ÔÔ 	
if
 
(
 
searchResults
 
==
  
null
! %
)
% &
searchResults
' 4
=
5 6
new
7 :
List
; ?
<
? @
int
@ C
>
C D
(
D E
)
E F
;
F G
searchResults
ÚÚ 
.
ÚÚ 
Clear
ÚÚ 
(
ÚÚ  
)
ÚÚ  !
;
ÚÚ! "
int
ÙÙ 
	arraySize
ÙÙ 
=
ÙÙ #
m_CharacterTable_prop
ÙÙ 1
.
ÙÙ1 2
	arraySize
ÙÙ2 ;
;
ÙÙ; <
for
ˆˆ 
(
ˆˆ 
int
ˆˆ 
i
ˆˆ 
=
ˆˆ 
$num
ˆˆ 
;
ˆˆ 
i
ˆˆ 
<
ˆˆ 
	arraySize
ˆˆ  )
;
ˆˆ) *
i
ˆˆ+ ,
++
ˆˆ, .
)
ˆˆ. /
{
˜˜  
SerializedProperty
¯¯ "
sourceCharacter
¯¯# 2
=
¯¯3 4#
m_CharacterTable_prop
¯¯5 J
.
¯¯J K$
GetArrayElementAtIndex
¯¯K a
(
¯¯a b
i
¯¯b c
)
¯¯c d
;
¯¯d e
int
˙˙ 
id
˙˙ 
=
˙˙ 
sourceCharacter
˙˙ (
.
˙˙( )"
FindPropertyRelative
˙˙) =
(
˙˙= >
$str
˙˙> I
)
˙˙I J
.
˙˙J K
intValue
˙˙K S
;
˙˙S T
if
˝˝ 
(
˝˝ 
searchPattern
˝˝ !
.
˝˝! "
Length
˝˝" (
==
˝˝) +
$num
˝˝, -
&&
˝˝. 0
id
˝˝1 3
==
˝˝4 6
searchPattern
˝˝7 D
[
˝˝D E
$num
˝˝E F
]
˝˝F G
)
˝˝G H
searchResults
˛˛ !
.
˛˛! "
Add
˛˛" %
(
˛˛% &
i
˛˛& '
)
˛˛' (
;
˛˛( )
else
ˇˇ 
if
ˇˇ 
(
ˇˇ 
id
ˇˇ 
.
ˇˇ 
ToString
ˇˇ $
(
ˇˇ$ %
$str
ˇˇ% (
)
ˇˇ( )
.
ˇˇ) *
Contains
ˇˇ* 2
(
ˇˇ2 3
searchPattern
ˇˇ3 @
)
ˇˇ@ A
)
ˇˇA B
searchResults
ÄÄ !
.
ÄÄ! "
Add
ÄÄ" %
(
ÄÄ% &
i
ÄÄ& '
)
ÄÄ' (
;
ÄÄ( )
else
ÅÅ 
if
ÅÅ 
(
ÅÅ 
id
ÅÅ 
.
ÅÅ 
ToString
ÅÅ $
(
ÅÅ$ %
$str
ÅÅ% (
)
ÅÅ( )
.
ÅÅ) *
Contains
ÅÅ* 2
(
ÅÅ2 3
searchPattern
ÅÅ3 @
)
ÅÅ@ A
)
ÅÅA B
searchResults
ÇÇ !
.
ÇÇ! "
Add
ÇÇ" %
(
ÇÇ% &
i
ÇÇ& '
)
ÇÇ' (
;
ÇÇ( )
}
áá 
}
àà 	
void
ãã  
SearchKerningTable
ãã 
(
ãã  
string
ãã  &
searchPattern
ãã' 4
,
ãã4 5
ref
ãã6 9
List
ãã: >
<
ãã> ?
int
ãã? B
>
ããB C
searchResults
ããD Q
)
ããQ R
{
åå 	
if
çç 
(
çç 
searchResults
çç 
==
çç  
null
çç! %
)
çç% &
searchResults
çç' 4
=
çç5 6
new
çç7 :
List
çç; ?
<
çç? @
int
çç@ C
>
ççC D
(
ççD E
)
ççE F
;
ççF G
searchResults
èè 
.
èè 
Clear
èè 
(
èè  
)
èè  !
;
èè! "
uint
íí 
firstGlyphIndex
íí  
=
íí! "
$num
íí# $
;
íí$ %
TMP_Character
ìì "
firstCharacterSearch
ìì .
;
ìì. /
if
ïï 
(
ïï 
searchPattern
ïï 
.
ïï 
Length
ïï $
>
ïï% &
$num
ïï' (
&&
ïï) +
m_fontAsset
ïï, 7
.
ïï7 8"
characterLookupTable
ïï8 L
.
ïïL M
TryGetValue
ïïM X
(
ïïX Y
searchPattern
ïïY f
[
ïïf g
$num
ïïg h
]
ïïh i
,
ïïi j
out
ïïk n#
firstCharacterSearchïïo É
)ïïÉ Ñ
)ïïÑ Ö
firstGlyphIndex
ññ 
=
ññ  !"
firstCharacterSearch
ññ" 6
.
ññ6 7

glyphIndex
ññ7 A
;
ññA B
uint
òò 
secondGlyphIndex
òò !
=
òò" #
$num
òò$ %
;
òò% &
TMP_Character
ôô #
secondCharacterSearch
ôô /
;
ôô/ 0
if
õõ 
(
õõ 
searchPattern
õõ 
.
õõ 
Length
õõ $
>
õõ% &
$num
õõ' (
&&
õõ) +
m_fontAsset
õõ, 7
.
õõ7 8"
characterLookupTable
õõ8 L
.
õõL M
TryGetValue
õõM X
(
õõX Y
searchPattern
õõY f
[
õõf g
$num
õõg h
]
õõh i
,
õõi j
out
õõk n$
secondCharacterSearchõõo Ñ
)õõÑ Ö
)õõÖ Ü
secondGlyphIndex
úú  
=
úú! "#
secondCharacterSearch
úú# 8
.
úú8 9

glyphIndex
úú9 C
;
úúC D
int
ûû 
	arraySize
ûû 
=
ûû /
!m_GlyphPairAdjustmentRecords_prop
ûû =
.
ûû= >
	arraySize
ûû> G
;
ûûG H
for
†† 
(
†† 
int
†† 
i
†† 
=
†† 
$num
†† 
;
†† 
i
†† 
<
†† 
	arraySize
††  )
;
††) *
i
††+ ,
++
††, .
)
††. /
{
°°  
SerializedProperty
¢¢ "
record
¢¢# )
=
¢¢* +/
!m_GlyphPairAdjustmentRecords_prop
¢¢, M
.
¢¢M N$
GetArrayElementAtIndex
¢¢N d
(
¢¢d e
i
¢¢e f
)
¢¢f g
;
¢¢g h 
SerializedProperty
§§ "#
firstAdjustmentRecord
§§# 8
=
§§9 :
record
§§; A
.
§§A B"
FindPropertyRelative
§§B V
(
§§V W
$str
§§W p
)
§§p q
;
§§q r 
SerializedProperty
•• "$
secondAdjustmentRecord
••# 9
=
••: ;
record
••< B
.
••B C"
FindPropertyRelative
••C W
(
••W X
$str
••X r
)
••r s
;
••s t
int
ßß 

firstGlyph
ßß 
=
ßß  #
firstAdjustmentRecord
ßß! 6
.
ßß6 7"
FindPropertyRelative
ßß7 K
(
ßßK L
$str
ßßL Z
)
ßßZ [
.
ßß[ \
intValue
ßß\ d
;
ßßd e
int
®® 
secondGlyph
®® 
=
®®  !$
secondAdjustmentRecord
®®" 8
.
®®8 9"
FindPropertyRelative
®®9 M
(
®®M N
$str
®®N \
)
®®\ ]
.
®®] ^
intValue
®®^ f
;
®®f g
if
™™ 
(
™™ 
firstGlyphIndex
™™ #
==
™™$ &

firstGlyph
™™' 1
&&
™™2 4
secondGlyphIndex
™™5 E
==
™™F H
secondGlyph
™™I T
)
™™T U
searchResults
´´ !
.
´´! "
Add
´´" %
(
´´% &
i
´´& '
)
´´' (
;
´´( )
else
¨¨ 
if
¨¨ 
(
¨¨ 
searchPattern
¨¨ &
.
¨¨& '
Length
¨¨' -
==
¨¨. 0
$num
¨¨1 2
&&
¨¨3 5
(
¨¨6 7
firstGlyphIndex
¨¨7 F
==
¨¨G I

firstGlyph
¨¨J T
||
¨¨U W
firstGlyphIndex
¨¨X g
==
¨¨h j
secondGlyph
¨¨k v
)
¨¨v w
)
¨¨w x
searchResults
≠≠ !
.
≠≠! "
Add
≠≠" %
(
≠≠% &
i
≠≠& '
)
≠≠' (
;
≠≠( )
else
ÆÆ 
if
ÆÆ 
(
ÆÆ 

firstGlyph
ÆÆ #
.
ÆÆ# $
ToString
ÆÆ$ ,
(
ÆÆ, -
)
ÆÆ- .
.
ÆÆ. /
Contains
ÆÆ/ 7
(
ÆÆ7 8
searchPattern
ÆÆ8 E
)
ÆÆE F
)
ÆÆF G
searchResults
ØØ !
.
ØØ! "
Add
ØØ" %
(
ØØ% &
i
ØØ& '
)
ØØ' (
;
ØØ( )
else
∞∞ 
if
∞∞ 
(
∞∞ 
secondGlyph
∞∞ $
.
∞∞$ %
ToString
∞∞% -
(
∞∞- .
)
∞∞. /
.
∞∞/ 0
Contains
∞∞0 8
(
∞∞8 9
searchPattern
∞∞9 F
)
∞∞F G
)
∞∞G H
searchResults
±± !
.
±±! "
Add
±±" %
(
±±% &
i
±±& '
)
±±' (
;
±±( )
}
≤≤ 
}
≥≥ 	
}
¥¥ 
}µµ ã
öD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_MeshRendererEditor.cs
	namespace

 	
TMPro


 
.

 
EditorUtilities

 
{ 
}LL à 
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_SpriteAssetMenu.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
public 

static 
class 
TMP_SpriteAssetMenu +
{ 
[ 	
MenuItem	 
( 
$str @
,@ A
trueB F
,F G
$numH L
)L M
]M N
static 
bool &
AddDefaultMaterialValidate .
(. /
MenuCommand/ :
command; B
)B C
{ 	
return 
AssetDatabase  
.  !
IsOpenForEdit! .
(. /
command/ 6
.6 7
context7 >
)> ?
;? @
} 	
[ 	
MenuItem	 
( 
$str @
,@ A
falseB G
,G H
$numI M
)M N
]N O
static 
void 
AddDefaultMaterial &
(& '
MenuCommand' 2
command3 :
): ;
{ 	
TMP_SpriteAsset 
spriteAsset '
=( )
(* +
TMP_SpriteAsset+ :
): ;
command; B
.B C
contextC J
;J K
if 
( 
spriteAsset 
!= 
null #
&&$ &
spriteAsset' 2
.2 3
material3 ;
==< >
null? C
)C D
{ 
AddDefaultMaterial "
(" #
spriteAsset# .
). /
;/ 0
}   
}!! 	
[$$ 	
MenuItem$$	 
($$ 
$str$$ ?
,$$? @
true$$A E
,$$E F
$num$$G K
)$$K L
]$$L M
static%% 
bool%% %
UpdateSpriteAssetValidate%% -
(%%- .
MenuCommand%%. 9
command%%: A
)%%A B
{&& 	
return'' 
AssetDatabase''  
.''  !
IsOpenForEdit''! .
(''. /
command''/ 6
.''6 7
context''7 >
)''> ?
;''? @
}(( 	
[** 	
MenuItem**	 
(** 
$str** ?
,**? @
false**A F
,**F G
$num**H L
)**L M
]**M N
static++ 
void++ 
UpdateSpriteAsset++ %
(++% &
MenuCommand++& 1
command++2 9
)++9 :
{,, 	
TMP_SpriteAsset-- 
spriteAsset-- '
=--( )
(--* +
TMP_SpriteAsset--+ :
)--: ;
command--; B
.--B C
context--C J
;--J K
if// 
(// 
spriteAsset// 
==// 
null// #
)//# $
return00 
;00 
UpdateSpriteAsset22 
(22 
spriteAsset22 )
)22) *
;22* +
}33 	
internal55 
static55 
void55 
UpdateSpriteAsset55 .
(55. /
TMP_SpriteAsset55/ >
spriteAsset55? J
)55J K
{66 	
string99 
filePath99 
=99 
AssetDatabase99 +
.99+ ,
GetAssetPath99, 8
(998 9
spriteAsset999 D
.99D E
spriteSheet99E P
)99P Q
;99Q R
if;; 
(;; 
string;; 
.;; 
IsNullOrEmpty;; $
(;;$ %
filePath;;% -
);;- .
);;. /
return<< 
;<< 
Sprite?? 
[?? 
]?? 
sprites?? 
=?? 
AssetDatabase?? ,
.??, -
LoadAllAssetsAtPath??- @
(??@ A
filePath??A I
)??I J
.??J K
Select??K Q
(??Q R
x??R S
=>??T V
x??W X
as??Y [
Sprite??\ b
)??b c
.??c d
Where??d i
(??i j
x??j k
=>??l n
x??o p
!=??q s
null??t x
)??x y
.??y z
ToArray	??z Å
(
??Å Ç
)
??Ç É
;
??É Ñ
ifBB 
(BB 
spritesBB 
.BB 
LengthBB 
==BB !
$numBB" #
)BB# $
{CC 
DebugDD 
.DD 
LogDD 
(DD 
$strDD 9
+DD: ;
spriteAssetDD< G
.DDG H
nameDDH L
+DDM N
$str	DDO ›
,
DD› ﬁ
spriteAsset
DDﬂ Í
.
DDÍ Î
spriteSheet
DDÎ ˆ
)
DDˆ ˜
;
DD˜ ¯
returnEE 
;EE 
}FF 
ListHH 
<HH 
TMP_SpriteGlyphHH  
>HH  !
spriteGlyphTableHH" 2
=HH3 4
spriteAssetHH5 @
.HH@ A
spriteGlyphTableHHA Q
;HHQ R
uintKK 
[KK 
]KK  
existingGlyphIndexesKK '
=KK( )
spriteGlyphTableKK* :
.KK: ;
SelectKK; A
(KKA B
xKKB C
=>KKD F
xKKG H
.KKH I
indexKKI N
)KKN O
.KKO P
ToArrayKKP W
(KKW X
)KKX Y
;KKY Z
ListLL 
<LL 
uintLL 
>LL !
availableGlyphIndexesLL ,
=LL- .
newLL/ 2
ListLL3 7
<LL7 8
uintLL8 <
>LL< =
(LL= >
)LL> ?
;LL? @
uintNN 
lastGlyphIndexNN 
=NN  ! 
existingGlyphIndexesNN" 6
.NN6 7
LengthNN7 =
>NN> ?
$numNN@ A
?NNB C 
existingGlyphIndexesNND X
.NNX Y
LastNNY ]
(NN] ^
)NN^ _
:NN` a
$numNNb c
;NNc d
intOO 
elementIndexOO 
=OO 
$numOO  
;OO  !
forPP 
(PP 
uintPP 
iPP 
=PP 
$numPP 
;PP 
iPP 
<PP  
lastGlyphIndexPP! /
;PP/ 0
iPP1 2
++PP2 4
)PP4 5
{QQ 
uintRR 
existingGlyphIndexRR '
=RR( ) 
existingGlyphIndexesRR* >
[RR> ?
elementIndexRR? K
]RRK L
;RRL M
ifTT 
(TT 
iTT 
==TT 
existingGlyphIndexTT +
)TT+ ,
elementIndexUU  
+=UU! #
$numUU$ %
;UU% &
elseVV !
availableGlyphIndexesWW )
.WW) *
AddWW* -
(WW- .
iWW. /
)WW/ 0
;WW0 1
}XX 
for[[ 
([[ 
int[[ 
i[[ 
=[[ 
$num[[ 
;[[ 
i[[ 
<[[ 
sprites[[  '
.[[' (
Length[[( .
;[[. /
i[[0 1
++[[1 3
)[[3 4
{\\ 
Sprite]] 
sprite]] 
=]] 
sprites]]  '
[]]' (
i]]( )
]]]) *
;]]* +
TMP_SpriteGlyph`` 
spriteGlyph``  +
=``, -
spriteGlyphTable``. >
.``> ?
FirstOrDefault``? M
(``M N
x``N O
=>``P R
x``S T
.``T U
sprite``U [
==``\ ^
sprite``_ e
)``e f
;``f g
ifbb 
(bb 
spriteGlyphbb 
!=bb  "
nullbb# '
)bb' (
{cc 
ifee 
(ee 
spriteGlyphee #
.ee# $
	glyphRectee$ -
.ee- .
xee. /
!=ee0 2
spriteee3 9
.ee9 :
rectee: >
.ee> ?
xee? @
||eeA C
spriteGlypheeD O
.eeO P
	glyphRecteeP Y
.eeY Z
yeeZ [
!=ee\ ^
spriteee_ e
.eee f
recteef j
.eej k
yeek l
||eem o
spriteGlypheep {
.ee{ |
	glyphRect	ee| Ö
.
eeÖ Ü
width
eeÜ ã
!=
eeå é
sprite
eeè ï
.
eeï ñ
rect
eeñ ö
.
eeö õ
width
eeõ †
||
ee° £
spriteGlyph
ee§ Ø
.
eeØ ∞
	glyphRect
ee∞ π
.
eeπ ∫
height
ee∫ ¿
!=
ee¡ √
sprite
eeƒ  
.
ee  À
rect
eeÀ œ
.
eeœ –
height
ee– ÷
)
ee÷ ◊
spriteGlyphff #
.ff# $
	glyphRectff$ -
=ff. /
newff0 3
	GlyphRectff4 =
(ff= >
spriteff> D
.ffD E
rectffE I
)ffI J
;ffJ K
}gg 
elsehh 
{ii 
TMP_SpriteCharacterjj '
spriteCharacterjj( 7
;jj7 8
ifmm 
(mm 
spriteAssetmm #
.mm# $ 
spriteCharacterTablemm$ 8
!=mm9 ;
nullmm< @
&&mmA C
spriteAssetmmD O
.mmO P 
spriteCharacterTablemmP d
.mmd e
Countmme j
>mmk l
$nummmm n
)mmn o
{nn 
spriteCharacteroo '
=oo( )
spriteAssetoo* 5
.oo5 6 
spriteCharacterTableoo6 J
.ooJ K
FirstOrDefaultooK Y
(ooY Z
xooZ [
=>oo\ ^
xoo_ `
.oo` a
nameooa e
==oof h
spriteooi o
.ooo p
nameoop t
)oot u
;oou v
spriteGlyphpp #
=pp$ %
spriteCharacterpp& 5
!=pp6 8
nullpp9 =
?pp> ?
spriteGlyphTablepp@ P
[ppP Q
(ppQ R
intppR U
)ppU V
spriteCharacterppV e
.ppe f

glyphIndexppf p
]ppp q
:ppr s
nullppt x
;ppx y
ifrr 
(rr 
spriteGlyphrr '
!=rr( *
nullrr+ /
)rr/ 0
{ss 
spriteGlyphuu '
.uu' (
spriteuu( .
=uu/ 0
spriteuu1 7
;uu7 8
ifww 
(ww  
spriteGlyphww  +
.ww+ ,
	glyphRectww, 5
.ww5 6
xww6 7
!=ww8 :
spriteww; A
.wwA B
rectwwB F
.wwF G
xwwG H
||wwI K
spriteGlyphwwL W
.wwW X
	glyphRectwwX a
.wwa b
ywwb c
!=wwd f
spritewwg m
.wwm n
rectwwn r
.wwr s
ywws t
||wwu w
spriteGlyph	wwx É
.
wwÉ Ñ
	glyphRect
wwÑ ç
.
wwç é
width
wwé ì
!=
wwî ñ
sprite
wwó ù
.
wwù û
rect
wwû ¢
.
ww¢ £
width
ww£ ®
||
ww© ´
spriteGlyph
ww¨ ∑
.
ww∑ ∏
	glyphRect
ww∏ ¡
.
ww¡ ¬
height
ww¬ »
!=
ww… À
sprite
wwÃ “
.
ww“ ”
rect
ww” ◊
.
ww◊ ÿ
height
wwÿ ﬁ
)
wwﬁ ﬂ
spriteGlyphxx  +
.xx+ ,
	glyphRectxx, 5
=xx6 7
newxx8 ;
	GlyphRectxx< E
(xxE F
spritexxF L
.xxL M
rectxxM Q
)xxQ R
;xxR S
}yy 
}zz 
spriteGlyph}} 
=}}  !
new}}" %
TMP_SpriteGlyph}}& 5
(}}5 6
)}}6 7
;}}7 8
if
ÄÄ 
(
ÄÄ #
availableGlyphIndexes
ÄÄ -
.
ÄÄ- .
Count
ÄÄ. 3
>
ÄÄ4 5
$num
ÄÄ6 7
)
ÄÄ7 8
{
ÅÅ 
spriteGlyph
ÇÇ #
.
ÇÇ# $
index
ÇÇ$ )
=
ÇÇ* +#
availableGlyphIndexes
ÇÇ, A
[
ÇÇA B
$num
ÇÇB C
]
ÇÇC D
;
ÇÇD E#
availableGlyphIndexes
ÉÉ -
.
ÉÉ- .
RemoveAt
ÉÉ. 6
(
ÉÉ6 7
$num
ÉÉ7 8
)
ÉÉ8 9
;
ÉÉ9 :
}
ÑÑ 
else
ÖÖ 
spriteGlyph
ÜÜ #
.
ÜÜ# $
index
ÜÜ$ )
=
ÜÜ* +
(
ÜÜ, -
uint
ÜÜ- 1
)
ÜÜ1 2
spriteGlyphTable
ÜÜ2 B
.
ÜÜB C
Count
ÜÜC H
;
ÜÜH I
spriteGlyph
àà 
.
àà  
metrics
àà  '
=
àà( )
new
àà* -
GlyphMetrics
àà. :
(
àà: ;
sprite
àà; A
.
ààA B
rect
ààB F
.
ààF G
width
ààG L
,
ààL M
sprite
ààN T
.
ààT U
rect
ààU Y
.
ààY Z
height
ààZ `
,
àà` a
-
ààb c
sprite
ààc i
.
àài j
pivot
ààj o
.
àào p
x
ààp q
,
ààq r
sprite
ààs y
.
àày z
rect
ààz ~
.
àà~ 
heightàà Ö
-ààÜ á
spriteààà é
.ààé è
pivotààè î
.ààî ï
yààï ñ
,ààñ ó
spriteààò û
.ààû ü
rectààü £
.àà£ §
widthàà§ ©
)àà© ™
;àà™ ´
spriteGlyph
ââ 
.
ââ  
	glyphRect
ââ  )
=
ââ* +
new
ââ, /
	GlyphRect
ââ0 9
(
ââ9 :
sprite
ââ: @
.
ââ@ A
rect
ââA E
)
ââE F
;
ââF G
spriteGlyph
ää 
.
ää  
scale
ää  %
=
ää& '
$num
ää( ,
;
ää, -
spriteGlyph
ãã 
.
ãã  
sprite
ãã  &
=
ãã' (
sprite
ãã) /
;
ãã/ 0
spriteGlyphTable
çç $
.
çç$ %
Add
çç% (
(
çç( )
spriteGlyph
çç) 4
)
çç4 5
;
çç5 6
spriteCharacter
èè #
=
èè$ %
new
èè& )!
TMP_SpriteCharacter
èè* =
(
èè= >
$num
èè> D
,
èèD E
spriteGlyph
èèF Q
)
èèQ R
;
èèR S
spriteCharacter
êê #
.
êê# $
name
êê$ (
=
êê) *
sprite
êê+ 1
.
êê1 2
name
êê2 6
;
êê6 7
spriteCharacter
ëë #
.
ëë# $
scale
ëë$ )
=
ëë* +
$num
ëë, 0
;
ëë0 1
spriteAsset
ìì 
.
ìì  "
spriteCharacterTable
ìì  4
.
ìì4 5
Add
ìì5 8
(
ìì8 9
spriteCharacter
ìì9 H
)
ììH I
;
ììI J
}
îî 
}
ïï 
for
òò 
(
òò 
int
òò 
i
òò 
=
òò 
$num
òò 
;
òò 
i
òò 
<
òò 
spriteAsset
òò  +
.
òò+ ,"
spriteCharacterTable
òò, @
.
òò@ A
Count
òòA F
;
òòF G
i
òòH I
++
òòI K
)
òòK L
{
ôô !
TMP_SpriteCharacter
öö #
spriteCharacter
öö$ 3
=
öö4 5
spriteAsset
öö6 A
.
ööA B"
spriteCharacterTable
ööB V
[
ööV W
i
ööW X
]
ööX Y
;
ööY Z
if
õõ 
(
õõ 
spriteCharacter
õõ #
.
õõ# $
unicode
õõ$ +
==
õõ, .
$num
õõ/ 0
)
õõ0 1
spriteCharacter
úú #
.
úú# $
unicode
úú$ +
=
úú, -
$num
úú. 4
;
úú4 5
}
ùù 
spriteAsset
†† 
.
†† 
SortGlyphTable
†† &
(
††& '
)
††' (
;
††( )
spriteAsset
°° 
.
°°  
UpdateLookupTables
°° *
(
°°* +
)
°°+ ,
;
°°, - 
TMPro_EventManager
¢¢ 
.
¢¢ .
 ON_SPRITE_ASSET_PROPERTY_CHANGED
¢¢ ?
(
¢¢? @
true
¢¢@ D
,
¢¢D E
spriteAsset
¢¢F Q
)
¢¢Q R
;
¢¢R S
}
§§ 	
[
ßß 	
MenuItem
ßß	 
(
ßß 
$str
ßß :
,
ßß: ;
false
ßß< A
,
ßßA B
$num
ßßC F
)
ßßF G
]
ßßG H
public
®® 
static
®® 
void
®® 
CreateSpriteAsset
®® ,
(
®®, -
)
®®- .
{
©© 	
Object
™™ 
target
™™ 
=
™™ 
	Selection
™™ %
.
™™% &
activeObject
™™& 2
;
™™2 3
if
¨¨ 
(
¨¨ 
target
¨¨ 
==
¨¨ 
null
¨¨ 
||
¨¨ !
target
¨¨" (
.
¨¨( )
GetType
¨¨) 0
(
¨¨0 1
)
¨¨1 2
!=
¨¨3 5
typeof
¨¨6 <
(
¨¨< =
	Texture2D
¨¨= F
)
¨¨F G
)
¨¨G H
{
≠≠ 
Debug
ÆÆ 
.
ÆÆ 

LogWarning
ÆÆ  
(
ÆÆ  !
$str
ÆÆ! s
)
ÆÆs t
;
ÆÆt u
return
ØØ 
;
ØØ 
}
∞∞ 
string
≥≥ 
filePathWithName
≥≥ #
=
≥≥$ %
AssetDatabase
≥≥& 3
.
≥≥3 4
GetAssetPath
≥≥4 @
(
≥≥@ A
target
≥≥A G
)
≥≥G H
;
≥≥H I
string
¥¥ #
fileNameWithExtension
¥¥ (
=
¥¥) *
Path
¥¥+ /
.
¥¥/ 0
GetFileName
¥¥0 ;
(
¥¥; <
filePathWithName
¥¥< L
)
¥¥L M
;
¥¥M N
string
µµ &
fileNameWithoutExtension
µµ +
=
µµ, -
Path
µµ. 2
.
µµ2 3)
GetFileNameWithoutExtension
µµ3 N
(
µµN O
filePathWithName
µµO _
)
µµ_ `
;
µµ` a
string
∂∂ 
filePath
∂∂ 
=
∂∂ 
filePathWithName
∂∂ .
.
∂∂. /
Replace
∂∂/ 6
(
∂∂6 7#
fileNameWithExtension
∂∂7 L
,
∂∂L M
$str
∂∂N P
)
∂∂P Q
;
∂∂Q R
TMP_SpriteAsset
∫∫ 
spriteAsset
∫∫ '
=
∫∫( )
ScriptableObject
∫∫* :
.
∫∫: ;
CreateInstance
∫∫; I
<
∫∫I J
TMP_SpriteAsset
∫∫J Y
>
∫∫Y Z
(
∫∫Z [
)
∫∫[ \
;
∫∫\ ]
AssetDatabase
ªª 
.
ªª 
CreateAsset
ªª %
(
ªª% &
spriteAsset
ªª& 1
,
ªª1 2
filePath
ªª3 ;
+
ªª< =&
fileNameWithoutExtension
ªª> V
+
ªªW X
$str
ªªY a
)
ªªa b
;
ªªb c
spriteAsset
ΩΩ 
.
ΩΩ 
version
ΩΩ 
=
ΩΩ  !
$str
ΩΩ" )
;
ΩΩ) *
spriteAsset
¿¿ 
.
¿¿ 
hashCode
¿¿  
=
¿¿! "
TMP_TextUtilities
¿¿# 4
.
¿¿4 5
GetSimpleHashCode
¿¿5 F
(
¿¿F G
spriteAsset
¿¿G R
.
¿¿R S
name
¿¿S W
)
¿¿W X
;
¿¿X Y
List
¬¬ 
<
¬¬ 
TMP_SpriteGlyph
¬¬  
>
¬¬  !
spriteGlyphTable
¬¬" 2
=
¬¬3 4
new
¬¬5 8
List
¬¬9 =
<
¬¬= >
TMP_SpriteGlyph
¬¬> M
>
¬¬M N
(
¬¬N O
)
¬¬O P
;
¬¬P Q
List
√√ 
<
√√ !
TMP_SpriteCharacter
√√ $
>
√√$ %"
spriteCharacterTable
√√& :
=
√√; <
new
√√= @
List
√√A E
<
√√E F!
TMP_SpriteCharacter
√√F Y
>
√√Y Z
(
√√Z [
)
√√[ \
;
√√\ ]
if
≈≈ 
(
≈≈ 
target
≈≈ 
.
≈≈ 
GetType
≈≈ 
(
≈≈ 
)
≈≈  
==
≈≈! #
typeof
≈≈$ *
(
≈≈* +
	Texture2D
≈≈+ 4
)
≈≈4 5
)
≈≈5 6
{
∆∆ 
	Texture2D
«« 
	sourceTex
«« #
=
««$ %
target
««& ,
as
««- /
	Texture2D
««0 9
;
««9 :
spriteAsset
   
.
   
spriteSheet
   '
=
  ( )
	sourceTex
  * 3
;
  3 4"
PopulateSpriteTables
ÃÃ $
(
ÃÃ$ %
	sourceTex
ÃÃ% .
,
ÃÃ. /
ref
ÃÃ0 3"
spriteCharacterTable
ÃÃ4 H
,
ÃÃH I
ref
ÃÃJ M
spriteGlyphTable
ÃÃN ^
)
ÃÃ^ _
;
ÃÃ_ `
spriteAsset
ŒŒ 
.
ŒŒ "
spriteCharacterTable
ŒŒ 0
=
ŒŒ1 2"
spriteCharacterTable
ŒŒ3 G
;
ŒŒG H
spriteAsset
œœ 
.
œœ 
spriteGlyphTable
œœ ,
=
œœ- .
spriteGlyphTable
œœ/ ?
;
œœ? @ 
AddDefaultMaterial
““ "
(
““" #
spriteAsset
““# .
)
““. /
;
““/ 0
}
”” 
else
‘‘ 
if
‘‘ 
(
‘‘ 
target
‘‘ 
.
‘‘ 
GetType
‘‘ #
(
‘‘# $
)
‘‘$ %
==
‘‘& (
typeof
‘‘) /
(
‘‘/ 0
SpriteAtlas
‘‘0 ;
)
‘‘; <
)
‘‘< =
{
’’ 
}
·· 
spriteAsset
‰‰ 
.
‰‰  
UpdateLookupTables
‰‰ *
(
‰‰* +
)
‰‰+ ,
;
‰‰, -
EditorUtility
ÁÁ 
.
ÁÁ 
SetDirty
ÁÁ "
(
ÁÁ" #
spriteAsset
ÁÁ# .
)
ÁÁ. /
;
ÁÁ/ 0
AssetDatabase
ÓÓ 
.
ÓÓ 

SaveAssets
ÓÓ $
(
ÓÓ$ %
)
ÓÓ% &
;
ÓÓ& '
AssetDatabase
 
.
 
ImportAsset
 %
(
% &
AssetDatabase
& 3
.
3 4
GetAssetPath
4 @
(
@ A
spriteAsset
A L
)
L M
)
M N
;
N O
}
ÛÛ 	
private
ˆˆ 
static
ˆˆ 
void
ˆˆ "
PopulateSpriteTables
ˆˆ 0
(
ˆˆ0 1
Texture
ˆˆ1 8
source
ˆˆ9 ?
,
ˆˆ? @
ref
ˆˆA D
List
ˆˆE I
<
ˆˆI J!
TMP_SpriteCharacter
ˆˆJ ]
>
ˆˆ] ^"
spriteCharacterTable
ˆˆ_ s
,
ˆˆs t
ref
ˆˆu x
List
ˆˆy }
<
ˆˆ} ~
TMP_SpriteGlyphˆˆ~ ç
>ˆˆç é 
spriteGlyphTableˆˆè ü
)ˆˆü †
{
˜˜ 	
string
˙˙ 
filePath
˙˙ 
=
˙˙ 
AssetDatabase
˙˙ +
.
˙˙+ ,
GetAssetPath
˙˙, 8
(
˙˙8 9
source
˙˙9 ?
)
˙˙? @
;
˙˙@ A
Sprite
˝˝ 
[
˝˝ 
]
˝˝ 
sprites
˝˝ 
=
˝˝ 
AssetDatabase
˝˝ ,
.
˝˝, -!
LoadAllAssetsAtPath
˝˝- @
(
˝˝@ A
filePath
˝˝A I
)
˝˝I J
.
˝˝J K
Select
˝˝K Q
(
˝˝Q R
x
˝˝R S
=>
˝˝T V
x
˝˝W X
as
˝˝Y [
Sprite
˝˝\ b
)
˝˝b c
.
˝˝c d
Where
˝˝d i
(
˝˝i j
x
˝˝j k
=>
˝˝l n
x
˝˝o p
!=
˝˝q s
null
˝˝t x
)
˝˝x y
.
˝˝y z 
OrderByDescending˝˝z ã
(˝˝ã å
x˝˝å ç
=>˝˝é ê
x˝˝ë í
.˝˝í ì
rect˝˝ì ó
.˝˝ó ò
y˝˝ò ô
)˝˝ô ö
.˝˝ö õ
ThenBy˝˝õ °
(˝˝° ¢
x˝˝¢ £
=>˝˝§ ¶
x˝˝ß ®
.˝˝® ©
rect˝˝© ≠
.˝˝≠ Æ
x˝˝Æ Ø
)˝˝Ø ∞
.˝˝∞ ±
ToArray˝˝± ∏
(˝˝∏ π
)˝˝π ∫
;˝˝∫ ª
for
ˇˇ 
(
ˇˇ 
int
ˇˇ 
i
ˇˇ 
=
ˇˇ 
$num
ˇˇ 
;
ˇˇ 
i
ˇˇ 
<
ˇˇ 
sprites
ˇˇ  '
.
ˇˇ' (
Length
ˇˇ( .
;
ˇˇ. /
i
ˇˇ0 1
++
ˇˇ1 3
)
ˇˇ3 4
{
ÄÄ 
Sprite
ÅÅ 
sprite
ÅÅ 
=
ÅÅ 
sprites
ÅÅ  '
[
ÅÅ' (
i
ÅÅ( )
]
ÅÅ) *
;
ÅÅ* +
TMP_SpriteGlyph
ÉÉ 
spriteGlyph
ÉÉ  +
=
ÉÉ, -
new
ÉÉ. 1
TMP_SpriteGlyph
ÉÉ2 A
(
ÉÉA B
)
ÉÉB C
;
ÉÉC D
spriteGlyph
ÑÑ 
.
ÑÑ 
index
ÑÑ !
=
ÑÑ" #
(
ÑÑ$ %
uint
ÑÑ% )
)
ÑÑ) *
i
ÑÑ* +
;
ÑÑ+ ,
spriteGlyph
ÖÖ 
.
ÖÖ 
metrics
ÖÖ #
=
ÖÖ$ %
new
ÖÖ& )
GlyphMetrics
ÖÖ* 6
(
ÖÖ6 7
sprite
ÖÖ7 =
.
ÖÖ= >
rect
ÖÖ> B
.
ÖÖB C
width
ÖÖC H
,
ÖÖH I
sprite
ÖÖJ P
.
ÖÖP Q
rect
ÖÖQ U
.
ÖÖU V
height
ÖÖV \
,
ÖÖ\ ]
-
ÖÖ^ _
sprite
ÖÖ_ e
.
ÖÖe f
pivot
ÖÖf k
.
ÖÖk l
x
ÖÖl m
,
ÖÖm n
sprite
ÖÖo u
.
ÖÖu v
rect
ÖÖv z
.
ÖÖz {
heightÖÖ{ Å
-ÖÖÇ É
spriteÖÖÑ ä
.ÖÖä ã
pivotÖÖã ê
.ÖÖê ë
yÖÖë í
,ÖÖí ì
spriteÖÖî ö
.ÖÖö õ
rectÖÖõ ü
.ÖÖü †
widthÖÖ† •
)ÖÖ• ¶
;ÖÖ¶ ß
spriteGlyph
ÜÜ 
.
ÜÜ 
	glyphRect
ÜÜ %
=
ÜÜ& '
new
ÜÜ( +
	GlyphRect
ÜÜ, 5
(
ÜÜ5 6
sprite
ÜÜ6 <
.
ÜÜ< =
rect
ÜÜ= A
)
ÜÜA B
;
ÜÜB C
spriteGlyph
áá 
.
áá 
scale
áá !
=
áá" #
$num
áá$ (
;
áá( )
spriteGlyph
àà 
.
àà 
sprite
àà "
=
àà# $
sprite
àà% +
;
àà+ ,
spriteGlyphTable
ää  
.
ää  !
Add
ää! $
(
ää$ %
spriteGlyph
ää% 0
)
ää0 1
;
ää1 2!
TMP_SpriteCharacter
åå #
spriteCharacter
åå$ 3
=
åå4 5
new
åå6 9!
TMP_SpriteCharacter
åå: M
(
ååM N
$num
ååN T
,
ååT U
spriteGlyph
ååV a
)
ååa b
;
ååb c
spriteCharacter
çç 
.
çç  
name
çç  $
=
çç% &
sprite
çç' -
.
çç- .
name
çç. 2
;
çç2 3
spriteCharacter
éé 
.
éé  
scale
éé  %
=
éé& '
$num
éé( ,
;
éé, -"
spriteCharacterTable
êê $
.
êê$ %
Add
êê% (
(
êê( )
spriteCharacter
êê) 8
)
êê8 9
;
êê9 :
}
ëë 
}
íí 	
private
ïï 
static
ïï 
void
ïï "
PopulateSpriteTables
ïï 0
(
ïï0 1
SpriteAtlas
ïï1 <
spriteAtlas
ïï= H
,
ïïH I
ref
ïïJ M
List
ïïN R
<
ïïR S!
TMP_SpriteCharacter
ïïS f
>
ïïf g"
spriteCharacterTable
ïïh |
,
ïï| }
refïï~ Å
ListïïÇ Ü
<ïïÜ á
TMP_SpriteGlyphïïá ñ
>ïïñ ó 
spriteGlyphTableïïò ®
)ïï® ©
{
ññ 	
int
òò 
spriteCount
òò 
=
òò 
spriteAtlas
òò )
.
òò) *
spriteCount
òò* 5
;
òò5 6
Sprite
ôô 
[
ôô 
]
ôô 
sprites
ôô 
=
ôô 
new
ôô "
Sprite
ôô# )
[
ôô) *
spriteCount
ôô* 5
]
ôô5 6
;
ôô6 7
spriteAtlas
úú 
.
úú 

GetSprites
úú "
(
úú" #
sprites
úú# *
)
úú* +
;
úú+ ,
for
ûû 
(
ûû 
int
ûû 
i
ûû 
=
ûû 
$num
ûû 
;
ûû 
i
ûû 
<
ûû 
sprites
ûû  '
.
ûû' (
Length
ûû( .
;
ûû. /
i
ûû0 1
++
ûû1 3
)
ûû3 4
{
üü 
Sprite
†† 
sprite
†† 
=
†† 
sprites
††  '
[
††' (
i
††( )
]
††) *
;
††* +
TMP_SpriteGlyph
¢¢ 
spriteGlyph
¢¢  +
=
¢¢, -
new
¢¢. 1
TMP_SpriteGlyph
¢¢2 A
(
¢¢A B
)
¢¢B C
;
¢¢C D
spriteGlyph
££ 
.
££ 
index
££ !
=
££" #
(
££$ %
uint
££% )
)
££) *
i
££* +
;
££+ ,
spriteGlyph
§§ 
.
§§ 
metrics
§§ #
=
§§$ %
new
§§& )
GlyphMetrics
§§* 6
(
§§6 7
sprite
§§7 =
.
§§= >
textureRect
§§> I
.
§§I J
width
§§J O
,
§§O P
sprite
§§Q W
.
§§W X
textureRect
§§X c
.
§§c d
height
§§d j
,
§§j k
-
§§l m
sprite
§§m s
.
§§s t
pivot
§§t y
.
§§y z
x
§§z {
,
§§{ |
sprite§§} É
.§§É Ñ
textureRect§§Ñ è
.§§è ê
height§§ê ñ
-§§ó ò
sprite§§ô ü
.§§ü †
pivot§§† •
.§§• ¶
y§§¶ ß
,§§ß ®
sprite§§© Ø
.§§Ø ∞
textureRect§§∞ ª
.§§ª º
width§§º ¡
)§§¡ ¬
;§§¬ √
spriteGlyph
•• 
.
•• 
	glyphRect
•• %
=
••& '
new
••( +
	GlyphRect
••, 5
(
••5 6
sprite
••6 <
.
••< =
textureRect
••= H
)
••H I
;
••I J
spriteGlyph
¶¶ 
.
¶¶ 
scale
¶¶ !
=
¶¶" #
$num
¶¶$ (
;
¶¶( )
spriteGlyph
ßß 
.
ßß 
sprite
ßß "
=
ßß# $
sprite
ßß% +
;
ßß+ ,
spriteGlyphTable
©©  
.
©©  !
Add
©©! $
(
©©$ %
spriteGlyph
©©% 0
)
©©0 1
;
©©1 2!
TMP_SpriteCharacter
´´ #
spriteCharacter
´´$ 3
=
´´4 5
new
´´6 9!
TMP_SpriteCharacter
´´: M
(
´´M N
$num
´´N T
,
´´T U
spriteGlyph
´´V a
)
´´a b
;
´´b c
spriteCharacter
¨¨ 
.
¨¨  
name
¨¨  $
=
¨¨% &
sprite
¨¨' -
.
¨¨- .
name
¨¨. 2
;
¨¨2 3
spriteCharacter
≠≠ 
.
≠≠  
scale
≠≠  %
=
≠≠& '
$num
≠≠( ,
;
≠≠, -"
spriteCharacterTable
ØØ $
.
ØØ$ %
Add
ØØ% (
(
ØØ( )
spriteCharacter
ØØ) 8
)
ØØ8 9
;
ØØ9 :
}
∞∞ 
}
±± 	
private
∏∏ 
static
∏∏ 
void
∏∏  
AddDefaultMaterial
∏∏ .
(
∏∏. /
TMP_SpriteAsset
∏∏/ >
spriteAsset
∏∏? J
)
∏∏J K
{
ππ 	
Shader
∫∫ 
shader
∫∫ 
=
∫∫ 
Shader
∫∫ "
.
∫∫" #
Find
∫∫# '
(
∫∫' (
$str
∫∫( <
)
∫∫< =
;
∫∫= >
Material
ªª 
material
ªª 
=
ªª 
new
ªª  #
Material
ªª$ ,
(
ªª, -
shader
ªª- 3
)
ªª3 4
;
ªª4 5
material
ºº 
.
ºº 

SetTexture
ºº 
(
ºº  
ShaderUtilities
ºº  /
.
ºº/ 0

ID_MainTex
ºº0 :
,
ºº: ;
spriteAsset
ºº< G
.
ººG H
spriteSheet
ººH S
)
ººS T
;
ººT U
spriteAsset
ææ 
.
ææ 
material
ææ  
=
ææ! "
material
ææ# +
;
ææ+ ,
material
øø 
.
øø 
	hideFlags
øø 
=
øø  
	HideFlags
øø! *
.
øø* +
HideInHierarchy
øø+ :
;
øø: ;
AssetDatabase
¿¿ 
.
¿¿ 
AddObjectToAsset
¿¿ *
(
¿¿* +
material
¿¿+ 3
,
¿¿3 4
spriteAsset
¿¿5 @
)
¿¿@ A
;
¿¿A B
}
¡¡ 	
private
≈≈ 
static
≈≈ 
List
≈≈ 
<
≈≈ 

TMP_Sprite
≈≈ &
>
≈≈& '
UpdateSpriteInfo
≈≈( 8
(
≈≈8 9
TMP_SpriteAsset
≈≈9 H
spriteAsset
≈≈I T
)
≈≈T U
{
∆∆ 	
string
…… 
filePath
…… 
=
…… 
AssetDatabase
…… +
.
……+ ,
GetAssetPath
……, 8
(
……8 9
spriteAsset
……9 D
.
……D E
spriteSheet
……E P
)
……P Q
;
……Q R
Sprite
ÃÃ 
[
ÃÃ 
]
ÃÃ 
sprites
ÃÃ 
=
ÃÃ 
AssetDatabase
ÃÃ ,
.
ÃÃ, -!
LoadAllAssetsAtPath
ÃÃ- @
(
ÃÃ@ A
filePath
ÃÃA I
)
ÃÃI J
.
ÃÃJ K
Select
ÃÃK Q
(
ÃÃQ R
x
ÃÃR S
=>
ÃÃT V
x
ÃÃW X
as
ÃÃY [
Sprite
ÃÃ\ b
)
ÃÃb c
.
ÃÃc d
Where
ÃÃd i
(
ÃÃi j
x
ÃÃj k
=>
ÃÃl n
x
ÃÃo p
!=
ÃÃq s
null
ÃÃt x
)
ÃÃx y
.
ÃÃy z 
OrderByDescendingÃÃz ã
(ÃÃã å
xÃÃå ç
=>ÃÃé ê
xÃÃë í
.ÃÃí ì
rectÃÃì ó
.ÃÃó ò
yÃÃò ô
)ÃÃô ö
.ÃÃö õ
ThenByÃÃõ °
(ÃÃ° ¢
xÃÃ¢ £
=>ÃÃ§ ¶
xÃÃß ®
.ÃÃ® ©
rectÃÃ© ≠
.ÃÃ≠ Æ
xÃÃÆ Ø
)ÃÃØ ∞
.ÃÃ∞ ±
ToArrayÃÃ± ∏
(ÃÃ∏ π
)ÃÃπ ∫
;ÃÃ∫ ª
for
ŒŒ 
(
ŒŒ 
int
ŒŒ 
i
ŒŒ 
=
ŒŒ 
$num
ŒŒ 
;
ŒŒ 
i
ŒŒ 
<
ŒŒ 
sprites
ŒŒ  '
.
ŒŒ' (
Length
ŒŒ( .
;
ŒŒ. /
i
ŒŒ0 1
++
ŒŒ1 3
)
ŒŒ3 4
{
œœ 
Sprite
–– 
sprite
–– 
=
–– 
sprites
––  '
[
––' (
i
––( )
]
––) *
;
––* +
int
”” 
index
”” 
=
”” 
-
”” 
$num
”” 
;
”” 
if
‘‘ 
(
‘‘ 
spriteAsset
‘‘ 
.
‘‘  
spriteInfoList
‘‘  .
.
‘‘. /
Count
‘‘/ 4
>
‘‘5 6
i
‘‘7 8
&&
‘‘9 ;
spriteAsset
‘‘< G
.
‘‘G H
spriteInfoList
‘‘H V
[
‘‘V W
i
‘‘W X
]
‘‘X Y
.
‘‘Y Z
sprite
‘‘Z `
!=
‘‘a c
null
‘‘d h
)
‘‘h i
index
’’ 
=
’’ 
spriteAsset
’’ '
.
’’' (
spriteInfoList
’’( 6
.
’’6 7
	FindIndex
’’7 @
(
’’@ A
item
’’A E
=>
’’F H
item
’’I M
.
’’M N
sprite
’’N T
.
’’T U
GetInstanceID
’’U b
(
’’b c
)
’’c d
==
’’e g
sprite
’’h n
.
’’n o
GetInstanceID
’’o |
(
’’| }
)
’’} ~
)
’’~ 
;’’ Ä

TMP_Sprite
ÿÿ 

spriteInfo
ÿÿ %
=
ÿÿ& '
index
ÿÿ( -
==
ÿÿ. 0
-
ÿÿ1 2
$num
ÿÿ2 3
?
ÿÿ4 5
new
ÿÿ6 9

TMP_Sprite
ÿÿ: D
(
ÿÿD E
)
ÿÿE F
:
ÿÿG H
spriteAsset
ÿÿI T
.
ÿÿT U
spriteInfoList
ÿÿU c
[
ÿÿc d
index
ÿÿd i
]
ÿÿi j
;
ÿÿj k
Rect
⁄⁄ 

spriteRect
⁄⁄ 
=
⁄⁄  !
sprite
⁄⁄" (
.
⁄⁄( )
rect
⁄⁄) -
;
⁄⁄- .

spriteInfo
€€ 
.
€€ 
x
€€ 
=
€€ 

spriteRect
€€ )
.
€€) *
x
€€* +
;
€€+ ,

spriteInfo
‹‹ 
.
‹‹ 
y
‹‹ 
=
‹‹ 

spriteRect
‹‹ )
.
‹‹) *
y
‹‹* +
;
‹‹+ ,

spriteInfo
›› 
.
›› 
width
››  
=
››! "

spriteRect
››# -
.
››- .
width
››. 3
;
››3 4

spriteInfo
ﬁﬁ 
.
ﬁﬁ 
height
ﬁﬁ !
=
ﬁﬁ" #

spriteRect
ﬁﬁ$ .
.
ﬁﬁ. /
height
ﬁﬁ/ 5
;
ﬁﬁ5 6
Vector2
·· 
pivot
·· 
=
·· 
new
··  #
Vector2
··$ +
(
··+ ,
$num
··, -
-
··. /
(
··0 1
sprite
··1 7
.
··7 8
bounds
··8 >
.
··> ?
min
··? B
.
··B C
x
··C D
)
··D E
/
··F G
(
··H I
sprite
··I O
.
··O P
bounds
··P V
.
··V W
extents
··W ^
.
··^ _
x
··_ `
*
··a b
$num
··c d
)
··d e
,
··e f
$num
··g h
-
··i j
(
··k l
sprite
··l r
.
··r s
bounds
··s y
.
··y z
min
··z }
.
··} ~
y
··~ 
)·· Ä
/··Å Ç
(··É Ñ
sprite··Ñ ä
.··ä ã
bounds··ã ë
.··ë í
extents··í ô
.··ô ö
y··ö õ
*··ú ù
$num··û ü
)··ü †
)··† °
;··° ¢

spriteInfo
‰‰ 
.
‰‰ 
pivot
‰‰  
=
‰‰! "
new
‰‰# &
Vector2
‰‰' .
(
‰‰. /
$num
‰‰/ 0
-
‰‰1 2
pivot
‰‰3 8
.
‰‰8 9
x
‰‰9 :
*
‰‰; <

spriteRect
‰‰= G
.
‰‰G H
width
‰‰H M
,
‰‰M N

spriteRect
‰‰O Y
.
‰‰Y Z
height
‰‰Z `
-
‰‰a b
pivot
‰‰c h
.
‰‰h i
y
‰‰i j
*
‰‰k l

spriteRect
‰‰m w
.
‰‰w x
height
‰‰x ~
)
‰‰~ 
;‰‰ Ä
if
ÊÊ 
(
ÊÊ 
index
ÊÊ 
==
ÊÊ 
-
ÊÊ 
$num
ÊÊ 
)
ÊÊ  
{
ÁÁ 
int
ÈÈ 
[
ÈÈ 
]
ÈÈ 
ids
ÈÈ 
=
ÈÈ 
spriteAsset
ÈÈ  +
.
ÈÈ+ ,
spriteInfoList
ÈÈ, :
.
ÈÈ: ;
Select
ÈÈ; A
(
ÈÈA B
item
ÈÈB F
=>
ÈÈG I
item
ÈÈJ N
.
ÈÈN O
id
ÈÈO Q
)
ÈÈQ R
.
ÈÈR S
ToArray
ÈÈS Z
(
ÈÈZ [
)
ÈÈ[ \
;
ÈÈ\ ]
int
ÎÎ 
id
ÎÎ 
=
ÎÎ 
$num
ÎÎ 
;
ÎÎ 
for
ÏÏ 
(
ÏÏ 
int
ÏÏ 
j
ÏÏ 
=
ÏÏ  
$num
ÏÏ! "
;
ÏÏ" #
j
ÏÏ$ %
<
ÏÏ& '
ids
ÏÏ( +
.
ÏÏ+ ,
Length
ÏÏ, 2
;
ÏÏ2 3
j
ÏÏ4 5
++
ÏÏ5 7
)
ÏÏ8 9
{
ÌÌ 
if
ÓÓ 
(
ÓÓ 
ids
ÓÓ 
[
ÓÓ  
$num
ÓÓ  !
]
ÓÓ! "
!=
ÓÓ# %
$num
ÓÓ& '
)
ÓÓ' (
break
ÓÓ) .
;
ÓÓ. /
if
 
(
 
j
 
>
 
$num
  !
&&
" $
(
% &
ids
& )
[
) *
j
* +
]
+ ,
-
- .
ids
/ 2
[
2 3
j
3 4
-
5 6
$num
7 8
]
8 9
)
9 :
>
; <
$num
= >
)
> ?
{
ÒÒ 
id
ÚÚ 
=
ÚÚ  
ids
ÚÚ! $
[
ÚÚ$ %
j
ÚÚ% &
-
ÚÚ' (
$num
ÚÚ) *
]
ÚÚ* +
+
ÚÚ, -
$num
ÚÚ. /
;
ÚÚ/ 0
break
ÛÛ !
;
ÛÛ! "
}
ÙÙ 
id
ˆˆ 
=
ˆˆ 
j
ˆˆ 
+
ˆˆ  
$num
ˆˆ! "
;
ˆˆ" #
}
˜˜ 

spriteInfo
˘˘ 
.
˘˘ 
sprite
˘˘ %
=
˘˘& '
sprite
˘˘( .
;
˘˘. /

spriteInfo
˙˙ 
.
˙˙ 
name
˙˙ #
=
˙˙$ %
sprite
˙˙& ,
.
˙˙, -
name
˙˙- 1
;
˙˙1 2

spriteInfo
˚˚ 
.
˚˚ 
hashCode
˚˚ '
=
˚˚( )
TMP_TextUtilities
˚˚* ;
.
˚˚; <
GetSimpleHashCode
˚˚< M
(
˚˚M N

spriteInfo
˚˚N X
.
˚˚X Y
name
˚˚Y ]
)
˚˚] ^
;
˚˚^ _

spriteInfo
¸¸ 
.
¸¸ 
id
¸¸ !
=
¸¸" #
id
¸¸$ &
;
¸¸& '

spriteInfo
˝˝ 
.
˝˝ 
xAdvance
˝˝ '
=
˝˝( )

spriteRect
˝˝* 4
.
˝˝4 5
width
˝˝5 :
;
˝˝: ;

spriteInfo
˛˛ 
.
˛˛ 
scale
˛˛ $
=
˛˛% &
$num
˛˛' +
;
˛˛+ ,

spriteInfo
ÄÄ 
.
ÄÄ 
xOffset
ÄÄ &
=
ÄÄ' (

spriteInfo
ÄÄ) 3
.
ÄÄ3 4
pivot
ÄÄ4 9
.
ÄÄ9 :
x
ÄÄ: ;
;
ÄÄ; <

spriteInfo
ÅÅ 
.
ÅÅ 
yOffset
ÅÅ &
=
ÅÅ' (

spriteInfo
ÅÅ) 3
.
ÅÅ3 4
pivot
ÅÅ4 9
.
ÅÅ9 :
y
ÅÅ: ;
;
ÅÅ; <
spriteAsset
ÉÉ 
.
ÉÉ  
spriteInfoList
ÉÉ  .
.
ÉÉ. /
Add
ÉÉ/ 2
(
ÉÉ2 3

spriteInfo
ÉÉ3 =
)
ÉÉ= >
;
ÉÉ> ?
spriteAsset
ÜÜ 
.
ÜÜ  
spriteInfoList
ÜÜ  .
=
ÜÜ/ 0
spriteAsset
ÜÜ1 <
.
ÜÜ< =
spriteInfoList
ÜÜ= K
.
ÜÜK L
OrderBy
ÜÜL S
(
ÜÜS T
s
ÜÜT U
=>
ÜÜV X
s
ÜÜY Z
.
ÜÜZ [
id
ÜÜ[ ]
)
ÜÜ] ^
.
ÜÜ^ _
ToList
ÜÜ_ e
(
ÜÜe f
)
ÜÜf g
;
ÜÜg h
}
áá 
else
àà 
{
ââ 
spriteAsset
ää 
.
ää  
spriteInfoList
ää  .
[
ää. /
index
ää/ 4
]
ää4 5
=
ää6 7

spriteInfo
ää8 B
;
ääB C
}
ãã 
}
åå 
return
éé 
spriteAsset
éé 
.
éé 
spriteInfoList
éé -
;
éé- .
}
èè 	
}
êê 
}ëë øï
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMPro_ContextMenus.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
public

 

class

 
TMP_ContextMenus

 !
:

" #
Editor

$ *
{ 
private 
static 
Texture 
m_copiedTexture .
;. /
private 
static 
Material 
m_copiedProperties  2
;2 3
private 
static 
Material #
m_copiedAtlasProperties  7
;7 8
[ 	
MenuItem	 
( 
$str (
,( )
false* /
,/ 0
$num1 5
)5 6
]6 7
static 
void 
CopyTexture 
(  
MenuCommand  +
command, 3
)3 4
{ 	
m_copiedTexture 
= 
command %
.% &
context& -
as. 0
Texture1 8
;8 9
} 	
[ 	
MenuItem	 
( 
$str 4
,4 5
false6 ;
,; <
$num= @
)@ A
]A B
static 
void 
SelectMaterial "
(" #
MenuCommand# .
command/ 6
)6 7
{ 	
Material 
mat 
= 
command "
." #
context# *
as+ -
Material. 6
;6 7
EditorUtility"" 
."" 
FocusProjectWindow"" ,
("", -
)""- .
;"". /
EditorGUIUtility## 
.## 

PingObject## '
(##' (
mat##( +
)##+ ,
;##, -
}$$ 	
[(( 	
MenuItem((	 
((( 
$str(( ;
,((; <
false((= B
)((B C
]((C D
static)) 
void)) 
DuplicateMaterial)) %
())% &
MenuCommand))& 1
command))2 9
)))9 :
{** 	
Material.. 

source_Mat.. 
=..  !
(.." #
Material..# +
)..+ ,
command.., 3
...3 4
context..4 ;
;..; <
if// 
(// 
!// 
EditorUtility// 
.// 
IsPersistent// +
(//+ ,

source_Mat//, 6
)//6 7
)//7 8
{00 
Debug11 
.11 

LogWarning11  
(11  !
$str11! k
)11k l
;11l m
return22 
;22 
}33 
string55 
	assetPath55 
=55 
AssetDatabase55 ,
.55, -
GetAssetPath55- 9
(559 :

source_Mat55: D
)55D E
.55E F
Split55F K
(55K L
$char55L O
)55O P
[55P Q
$num55Q R
]55R S
;55S T
if77 
(77 
	assetPath77 
.77 
IndexOf77 !
(77! "
$str77" +
,77+ ,
System77- 3
.773 4
StringComparison774 D
.77D E&
InvariantCultureIgnoreCase77E _
)77_ `
==77a c
-77d e
$num77e f
)77f g
{88 
Debug99 
.99 

LogWarning99  
(99  !
$str99! y
)99y z
;99z {
return:: 
;:: 
};; 
Material== 
	duplicate== 
===  
new==! $
Material==% -
(==- .

source_Mat==. 8
)==8 9
;==9 :
	duplicate@@ 
.@@ 
shaderKeywords@@ $
=@@% &

source_Mat@@' 1
.@@1 2
shaderKeywords@@2 @
;@@@ A
AssetDatabaseBB 
.BB 
CreateAssetBB %
(BB% &
	duplicateBB& /
,BB/ 0
AssetDatabaseBB1 >
.BB> ?#
GenerateUniqueAssetPathBB? V
(BBV W
	assetPathBBW `
+BBa b
$strBBc i
)BBi j
)BBj k
;BBk l

GameObjectDD 
[DD 
]DD 
selectedObjectsDD (
=DD) *
	SelectionDD+ 4
.DD4 5
gameObjectsDD5 @
;DD@ A
forGG 
(GG 
intGG 
iGG 
=GG 
$numGG 
;GG 
iGG 
<GG 
selectedObjectsGG  /
.GG/ 0
LengthGG0 6
;GG6 7
iGG8 9
++GG9 ;
)GG; <
{HH 
TMP_TextII 

textObjectII #
=II$ %
selectedObjectsII& 5
[II5 6
iII6 7
]II7 8
.II8 9
GetComponentII9 E
<IIE F
TMP_TextIIF N
>IIN O
(IIO P
)IIP Q
;IIQ R
ifKK 
(KK 

textObjectKK 
!=KK !
nullKK" &
)KK& '
{LL 

textObjectMM 
.MM 
fontSharedMaterialMM 1
=MM2 3
	duplicateMM4 =
;MM= >
}NN 
elseOO 
{PP 
TMP_SubMeshQQ 
subMeshObjectQQ  -
=QQ. /
selectedObjectsQQ0 ?
[QQ? @
iQQ@ A
]QQA B
.QQB C
GetComponentQQC O
<QQO P
TMP_SubMeshQQP [
>QQ[ \
(QQ\ ]
)QQ] ^
;QQ^ _
ifSS 
(SS 
subMeshObjectSS %
!=SS& (
nullSS) -
)SS- .
subMeshObjectTT %
.TT% &
sharedMaterialTT& 4
=TT5 6
	duplicateTT7 @
;TT@ A
elseUU 
{VV 
TMP_SubMeshUIWW %
subMeshUIObjectWW& 5
=WW6 7
selectedObjectsWW8 G
[WWG H
iWWH I
]WWI J
.WWJ K
GetComponentWWK W
<WWW X
TMP_SubMeshUIWWX e
>WWe f
(WWf g
)WWg h
;WWh i
ifYY 
(YY 
subMeshUIObjectYY +
!=YY, .
nullYY/ 3
)YY3 4
subMeshUIObjectZZ +
.ZZ+ ,
sharedMaterialZZ, :
=ZZ; <
	duplicateZZ= F
;ZZF G
}[[ 
}\\ 
}]] 
EditorUtility`` 
.`` 
FocusProjectWindow`` ,
(``, -
)``- .
;``. /
EditorGUIUtilityaa 
.aa 

PingObjectaa '
(aa' (
	duplicateaa( 1
)aa1 2
;aa2 3
}bb 	
[ff 	
MenuItemff	 
(ff 
$strff =
,ff= >
falseff? D
)ffD E
]ffE F
staticgg 
voidgg "
CopyMaterialPropertiesgg *
(gg* +
MenuCommandgg+ 6
commandgg7 >
)gg> ?
{hh 	
Materialii 
matii 
=ii 
nullii 
;ii  
ifjj 
(jj 
commandjj 
.jj 
contextjj 
.jj  
GetTypejj  '
(jj' (
)jj( )
==jj* ,
typeofjj- 3
(jj3 4
Materialjj4 <
)jj< =
)jj= >
matkk 
=kk 
(kk 
Materialkk 
)kk  
commandkk  '
.kk' (
contextkk( /
;kk/ 0
elsell 
{mm 
matnn 
=nn 
	Selectionnn 
.nn  
activeGameObjectnn  0
.nn0 1
GetComponentnn1 =
<nn= >
CanvasRenderernn> L
>nnL M
(nnM N
)nnN O
.nnO P
GetMaterialnnP [
(nn[ \
)nn\ ]
;nn] ^
}oo 
m_copiedPropertiesqq 
=qq  
newqq! $
Materialqq% -
(qq- .
matqq. 1
)qq1 2
;qq2 3
m_copiedPropertiesss 
.ss 
shaderKeywordsss -
=ss. /
matss0 3
.ss3 4
shaderKeywordsss4 B
;ssB C
m_copiedPropertiesuu 
.uu 
	hideFlagsuu (
=uu) *
	HideFlagsuu+ 4
.uu4 5
DontSaveuu5 =
;uu= >
}vv 	
[zz 	
MenuItemzz	 
(zz 
$strzz >
,zz> ?
truezz@ D
)zzD E
]zzE F
static{{ 
bool{{ +
PasteMaterialPropertiesValidate{{ 3
({{3 4
MenuCommand{{4 ?
command{{@ G
){{G H
{|| 	
if}} 
(}} 
m_copiedProperties}} "
==}}# %
null}}& *
)}}* +
return~~ 
false~~ 
;~~ 
return
ÄÄ 
AssetDatabase
ÄÄ  
.
ÄÄ  !
IsOpenForEdit
ÄÄ! .
(
ÄÄ. /
command
ÄÄ/ 6
.
ÄÄ6 7
context
ÄÄ7 >
)
ÄÄ> ?
;
ÄÄ? @
}
ÅÅ 	
[
ÉÉ 	
MenuItem
ÉÉ	 
(
ÉÉ 
$str
ÉÉ >
,
ÉÉ> ?
false
ÉÉ@ E
)
ÉÉE F
]
ÉÉF G
static
ÑÑ 
void
ÑÑ %
PasteMaterialProperties
ÑÑ +
(
ÑÑ+ ,
MenuCommand
ÑÑ, 7
command
ÑÑ8 ?
)
ÑÑ? @
{
ÖÖ 	
if
ÜÜ 
(
ÜÜ  
m_copiedProperties
ÜÜ "
==
ÜÜ# %
null
ÜÜ& *
)
ÜÜ* +
{
áá 
Debug
àà 
.
àà 

LogWarning
àà  
(
àà  !
$str
àà! g
)
ààg h
;
ààh i
return
ââ 
;
ââ 
}
ää 
Material
åå 
mat
åå 
=
åå 
null
åå 
;
åå  
if
çç 
(
çç 
command
çç 
.
çç 
context
çç 
.
çç  
GetType
çç  '
(
çç' (
)
çç( )
==
çç* ,
typeof
çç- 3
(
çç3 4
Material
çç4 <
)
çç< =
)
çç= >
mat
éé 
=
éé 
(
éé 
Material
éé 
)
éé  
command
éé  '
.
éé' (
context
éé( /
;
éé/ 0
else
èè 
{
êê 
mat
ëë 
=
ëë 
	Selection
ëë 
.
ëë  
activeGameObject
ëë  0
.
ëë0 1
GetComponent
ëë1 =
<
ëë= >
CanvasRenderer
ëë> L
>
ëëL M
(
ëëM N
)
ëëN O
.
ëëO P
GetMaterial
ëëP [
(
ëë[ \
)
ëë\ ]
;
ëë] ^
}
íí 
Undo
îî 
.
îî 
RecordObject
îî 
(
îî 
mat
îî !
,
îî! "
$str
îî# 3
)
îî3 4
;
îî4 5
ShaderUtilities
ññ 
.
ññ "
GetShaderPropertyIDs
ññ 0
(
ññ0 1
)
ññ1 2
;
ññ2 3
if
óó 
(
óó 
mat
óó 
.
óó 
HasProperty
óó 
(
óó  
ShaderUtilities
óó  /
.
óó/ 0
ID_GradientScale
óó0 @
)
óó@ A
)
óóA B
{
òò  
m_copiedProperties
öö "
.
öö" #

SetTexture
öö# -
(
öö- .
ShaderUtilities
öö. =
.
öö= >

ID_MainTex
öö> H
,
ööH I
mat
ööJ M
.
ööM N

GetTexture
ööN X
(
ööX Y
ShaderUtilities
ööY h
.
ööh i

ID_MainTex
ööi s
)
öös t
)
ööt u
;
ööu v 
m_copiedProperties
õõ "
.
õõ" #
SetFloat
õõ# +
(
õõ+ ,
ShaderUtilities
õõ, ;
.
õõ; <
ID_GradientScale
õõ< L
,
õõL M
mat
õõN Q
.
õõQ R
GetFloat
õõR Z
(
õõZ [
ShaderUtilities
õõ[ j
.
õõj k
ID_GradientScale
õõk {
)
õõ{ |
)
õõ| }
;
õõ} ~ 
m_copiedProperties
úú "
.
úú" #
SetFloat
úú# +
(
úú+ ,
ShaderUtilities
úú, ;
.
úú; <
ID_TextureWidth
úú< K
,
úúK L
mat
úúM P
.
úúP Q
GetFloat
úúQ Y
(
úúY Z
ShaderUtilities
úúZ i
.
úúi j
ID_TextureWidth
úúj y
)
úúy z
)
úúz {
;
úú{ | 
m_copiedProperties
ùù "
.
ùù" #
SetFloat
ùù# +
(
ùù+ ,
ShaderUtilities
ùù, ;
.
ùù; <
ID_TextureHeight
ùù< L
,
ùùL M
mat
ùùN Q
.
ùùQ R
GetFloat
ùùR Z
(
ùùZ [
ShaderUtilities
ùù[ j
.
ùùj k
ID_TextureHeight
ùùk {
)
ùù{ |
)
ùù| }
;
ùù} ~
}
ûû #
EditorShaderUtilities
†† !
.
††! "$
CopyMaterialProperties
††" 8
(
††8 9 
m_copiedProperties
††9 K
,
††K L
mat
††M P
)
††P Q
;
††Q R
mat
££ 
.
££ 
shaderKeywords
££ 
=
££   
m_copiedProperties
££! 3
.
££3 4
shaderKeywords
££4 B
;
££B C 
TMPro_EventManager
¶¶ 
.
¶¶ *
ON_MATERIAL_PROPERTY_CHANGED
¶¶ ;
(
¶¶; <
true
¶¶< @
,
¶¶@ A
mat
¶¶B E
)
¶¶E F
;
¶¶F G
}
ßß 	
[
´´ 	
MenuItem
´´	 
(
´´ 
$str
´´ *
,
´´* +
true
´´, 0
,
´´0 1
$num
´´2 6
)
´´6 7
]
´´7 8
static
¨¨ 
bool
¨¨ #
ResetSettingsValidate
¨¨ )
(
¨¨) *
MenuCommand
¨¨* 5
command
¨¨6 =
)
¨¨= >
{
≠≠ 	
return
ÆÆ 
AssetDatabase
ÆÆ  
.
ÆÆ  !
IsOpenForEdit
ÆÆ! .
(
ÆÆ. /
command
ÆÆ/ 6
.
ÆÆ6 7
context
ÆÆ7 >
)
ÆÆ> ?
;
ÆÆ? @
}
ØØ 	
[
±± 	
MenuItem
±±	 
(
±± 
$str
±± *
,
±±* +
false
±±, 1
,
±±1 2
$num
±±3 7
)
±±7 8
]
±±8 9
static
≤≤ 
void
≤≤ 
ResetSettings
≤≤ !
(
≤≤! "
MenuCommand
≤≤" -
command
≤≤. 5
)
≤≤5 6
{
≥≥ 	
Material
¥¥ 
mat
¥¥ 
=
¥¥ 
null
¥¥ 
;
¥¥  
if
µµ 
(
µµ 
command
µµ 
.
µµ 
context
µµ 
.
µµ  
GetType
µµ  '
(
µµ' (
)
µµ( )
==
µµ* ,
typeof
µµ- 3
(
µµ3 4
Material
µµ4 <
)
µµ< =
)
µµ= >
mat
∂∂ 
=
∂∂ 
(
∂∂ 
Material
∂∂ 
)
∂∂  
command
∂∂  '
.
∂∂' (
context
∂∂( /
;
∂∂/ 0
else
∑∑ 
{
∏∏ 
mat
ππ 
=
ππ 
	Selection
ππ 
.
ππ  
activeGameObject
ππ  0
.
ππ0 1
GetComponent
ππ1 =
<
ππ= >
CanvasRenderer
ππ> L
>
ππL M
(
ππM N
)
ππN O
.
ππO P
GetMaterial
ππP [
(
ππ[ \
)
ππ\ ]
;
ππ] ^
}
∫∫ 
Undo
ºº 
.
ºº 
RecordObject
ºº 
(
ºº 
mat
ºº !
,
ºº! "
$str
ºº# 3
)
ºº3 4
;
ºº4 5
ShaderUtilities
ææ 
.
ææ "
GetShaderPropertyIDs
ææ 0
(
ææ0 1
)
ææ1 2
;
ææ2 3
if
øø 
(
øø 
mat
øø 
.
øø 
HasProperty
øø 
(
øø  
ShaderUtilities
øø  /
.
øø/ 0
ID_GradientScale
øø0 @
)
øø@ A
)
øøA B
{
¿¿ 
var
¬¬ 
texture
¬¬ 
=
¬¬ 
mat
¬¬ !
.
¬¬! "

GetTexture
¬¬" ,
(
¬¬, -
ShaderUtilities
¬¬- <
.
¬¬< =

ID_MainTex
¬¬= G
)
¬¬G H
;
¬¬H I
var
√√ 
gradientScale
√√ !
=
√√" #
mat
√√$ '
.
√√' (
GetFloat
√√( 0
(
√√0 1
ShaderUtilities
√√1 @
.
√√@ A
ID_GradientScale
√√A Q
)
√√Q R
;
√√R S
var
ƒƒ 
texWidth
ƒƒ 
=
ƒƒ 
mat
ƒƒ "
.
ƒƒ" #
GetFloat
ƒƒ# +
(
ƒƒ+ ,
ShaderUtilities
ƒƒ, ;
.
ƒƒ; <
ID_TextureWidth
ƒƒ< K
)
ƒƒK L
;
ƒƒL M
var
≈≈ 
	texHeight
≈≈ 
=
≈≈ 
mat
≈≈  #
.
≈≈# $
GetFloat
≈≈$ ,
(
≈≈, -
ShaderUtilities
≈≈- <
.
≈≈< =
ID_TextureHeight
≈≈= M
)
≈≈M N
;
≈≈N O
var
«« 
	stencilId
«« 
=
«« 
$num
««  $
;
««$ %
var
»» 
stencilComp
»» 
=
»»  !
$num
»»" &
;
»»& '
if
   
(
   
mat
   
.
   
HasProperty
   #
(
  # $
ShaderUtilities
  $ 3
.
  3 4
ID_StencilID
  4 @
)
  @ A
)
  A B
{
ÀÀ 
	stencilId
ÃÃ 
=
ÃÃ 
mat
ÃÃ  #
.
ÃÃ# $
GetFloat
ÃÃ$ ,
(
ÃÃ, -
ShaderUtilities
ÃÃ- <
.
ÃÃ< =
ID_StencilID
ÃÃ= I
)
ÃÃI J
;
ÃÃJ K
stencilComp
ÕÕ 
=
ÕÕ  !
mat
ÕÕ" %
.
ÕÕ% &
GetFloat
ÕÕ& .
(
ÕÕ. /
ShaderUtilities
ÕÕ/ >
.
ÕÕ> ?
ID_StencilComp
ÕÕ? M
)
ÕÕM N
;
ÕÕN O
}
ŒŒ 
var
–– 
normalWeight
––  
=
––! "
mat
––# &
.
––& '
GetFloat
––' /
(
––/ 0
ShaderUtilities
––0 ?
.
––? @
ID_WeightNormal
––@ O
)
––O P
;
––P Q
var
—— 

boldWeight
—— 
=
——  
mat
——! $
.
——$ %
GetFloat
——% -
(
——- .
ShaderUtilities
——. =
.
——= >
ID_WeightBold
——> K
)
——K L
;
——L M
Unsupported
‘‘ 
.
‘‘ 

SmartReset
‘‘ &
(
‘‘& '
mat
‘‘' *
)
‘‘* +
;
‘‘+ ,
mat
◊◊ 
.
◊◊ 
shaderKeywords
◊◊ "
=
◊◊# $
new
◊◊% (
string
◊◊) /
[
◊◊/ 0
$num
◊◊0 1
]
◊◊1 2
;
◊◊2 3
mat
⁄⁄ 
.
⁄⁄ 

SetTexture
⁄⁄ 
(
⁄⁄ 
ShaderUtilities
⁄⁄ .
.
⁄⁄. /

ID_MainTex
⁄⁄/ 9
,
⁄⁄9 :
texture
⁄⁄; B
)
⁄⁄B C
;
⁄⁄C D
mat
€€ 
.
€€ 
SetFloat
€€ 
(
€€ 
ShaderUtilities
€€ ,
.
€€, -
ID_GradientScale
€€- =
,
€€= >
gradientScale
€€? L
)
€€L M
;
€€M N
mat
‹‹ 
.
‹‹ 
SetFloat
‹‹ 
(
‹‹ 
ShaderUtilities
‹‹ ,
.
‹‹, -
ID_TextureWidth
‹‹- <
,
‹‹< =
texWidth
‹‹> F
)
‹‹F G
;
‹‹G H
mat
›› 
.
›› 
SetFloat
›› 
(
›› 
ShaderUtilities
›› ,
.
››, -
ID_TextureHeight
››- =
,
››= >
	texHeight
››? H
)
››H I
;
››I J
if
ﬂﬂ 
(
ﬂﬂ 
mat
ﬂﬂ 
.
ﬂﬂ 
HasProperty
ﬂﬂ #
(
ﬂﬂ# $
ShaderUtilities
ﬂﬂ$ 3
.
ﬂﬂ3 4
ID_StencilID
ﬂﬂ4 @
)
ﬂﬂ@ A
)
ﬂﬂA B
{
‡‡ 
mat
·· 
.
·· 
SetFloat
··  
(
··  !
ShaderUtilities
··! 0
.
··0 1
ID_StencilID
··1 =
,
··= >
	stencilId
··? H
)
··H I
;
··I J
mat
‚‚ 
.
‚‚ 
SetFloat
‚‚  
(
‚‚  !
ShaderUtilities
‚‚! 0
.
‚‚0 1
ID_StencilComp
‚‚1 ?
,
‚‚? @
stencilComp
‚‚A L
)
‚‚L M
;
‚‚M N
}
„„ 
mat
ÂÂ 
.
ÂÂ 
SetFloat
ÂÂ 
(
ÂÂ 
ShaderUtilities
ÂÂ ,
.
ÂÂ, -
ID_WeightNormal
ÂÂ- <
,
ÂÂ< =
normalWeight
ÂÂ> J
)
ÂÂJ K
;
ÂÂK L
mat
ÊÊ 
.
ÊÊ 
SetFloat
ÊÊ 
(
ÊÊ 
ShaderUtilities
ÊÊ ,
.
ÊÊ, -
ID_WeightBold
ÊÊ- :
,
ÊÊ: ;

boldWeight
ÊÊ< F
)
ÊÊF G
;
ÊÊG H
}
ÁÁ 
else
ËË 
{
ÈÈ 
Unsupported
ÍÍ 
.
ÍÍ 

SmartReset
ÍÍ &
(
ÍÍ& '
mat
ÍÍ' *
)
ÍÍ* +
;
ÍÍ+ ,
}
ÎÎ  
TMPro_EventManager
ÌÌ 
.
ÌÌ *
ON_MATERIAL_PROPERTY_CHANGED
ÌÌ ;
(
ÌÌ; <
true
ÌÌ< @
,
ÌÌ@ A
mat
ÌÌB E
)
ÌÌE F
;
ÌÌF G
}
ÓÓ 	
[
ÚÚ 	
MenuItem
ÚÚ	 
(
ÚÚ 
$str
ÚÚ /
,
ÚÚ/ 0
false
ÚÚ1 6
,
ÚÚ6 7
$num
ÚÚ8 <
)
ÚÚ< =
]
ÚÚ= >
static
ÛÛ 
void
ÛÛ 
	CopyAtlas
ÛÛ 
(
ÛÛ 
MenuCommand
ÛÛ )
command
ÛÛ* 1
)
ÛÛ1 2
{
ÙÙ 	
Material
ıı 
mat
ıı 
=
ıı 
command
ıı "
.
ıı" #
context
ıı# *
as
ıı+ -
Material
ıı. 6
;
ıı6 7%
m_copiedAtlasProperties
˜˜ #
=
˜˜$ %
new
˜˜& )
Material
˜˜* 2
(
˜˜2 3
mat
˜˜3 6
)
˜˜6 7
;
˜˜7 8%
m_copiedAtlasProperties
¯¯ #
.
¯¯# $
	hideFlags
¯¯$ -
=
¯¯. /
	HideFlags
¯¯0 9
.
¯¯9 :
DontSave
¯¯: B
;
¯¯B C
}
˘˘ 	
[
˝˝ 	
MenuItem
˝˝	 
(
˝˝ 
$str
˝˝ 0
,
˝˝0 1
true
˝˝2 6
,
˝˝6 7
$num
˝˝8 <
)
˝˝< =
]
˝˝= >
static
˛˛ 
bool
˛˛  
PasteAtlasValidate
˛˛ &
(
˛˛& '
MenuCommand
˛˛' 2
command
˛˛3 :
)
˛˛: ;
{
ˇˇ 	
if
ÄÄ 
(
ÄÄ %
m_copiedAtlasProperties
ÄÄ '
==
ÄÄ( *
null
ÄÄ+ /
&&
ÄÄ0 2
m_copiedTexture
ÄÄ3 B
==
ÄÄC E
null
ÄÄF J
)
ÄÄJ K
return
ÅÅ 
false
ÅÅ 
;
ÅÅ 
return
ÉÉ 
AssetDatabase
ÉÉ  
.
ÉÉ  !
IsOpenForEdit
ÉÉ! .
(
ÉÉ. /
command
ÉÉ/ 6
.
ÉÉ6 7
context
ÉÉ7 >
)
ÉÉ> ?
;
ÉÉ? @
}
ÑÑ 	
[
ÜÜ 	
MenuItem
ÜÜ	 
(
ÜÜ 
$str
ÜÜ 0
,
ÜÜ0 1
false
ÜÜ2 7
,
ÜÜ7 8
$num
ÜÜ9 =
)
ÜÜ= >
]
ÜÜ> ?
static
áá 
void
áá 

PasteAtlas
áá 
(
áá 
MenuCommand
áá *
command
áá+ 2
)
áá2 3
{
àà 	
Material
ââ 
mat
ââ 
=
ââ 
command
ââ "
.
ââ" #
context
ââ# *
as
ââ+ -
Material
ââ. 6
;
ââ6 7
if
ãã 
(
ãã 
mat
ãã 
==
ãã 
null
ãã 
)
ãã 
return
åå 
;
åå 
if
éé 
(
éé %
m_copiedAtlasProperties
éé '
!=
éé( *
null
éé+ /
)
éé/ 0
{
èè 
Undo
êê 
.
êê 
RecordObject
êê !
(
êê! "
mat
êê" %
,
êê% &
$str
êê' 6
)
êê6 7
;
êê7 8
ShaderUtilities
íí 
.
íí  "
GetShaderPropertyIDs
íí  4
(
íí4 5
)
íí5 6
;
íí6 7
if
îî 
(
îî %
m_copiedAtlasProperties
îî +
.
îî+ ,
HasProperty
îî, 7
(
îî7 8
ShaderUtilities
îî8 G
.
îîG H

ID_MainTex
îîH R
)
îîR S
)
îîS T
mat
ïï 
.
ïï 

SetTexture
ïï "
(
ïï" #
ShaderUtilities
ïï# 2
.
ïï2 3

ID_MainTex
ïï3 =
,
ïï= >%
m_copiedAtlasProperties
ïï? V
.
ïïV W

GetTexture
ïïW a
(
ïïa b
ShaderUtilities
ïïb q
.
ïïq r

ID_MainTex
ïïr |
)
ïï| }
)
ïï} ~
;
ïï~ 
if
óó 
(
óó %
m_copiedAtlasProperties
óó +
.
óó+ ,
HasProperty
óó, 7
(
óó7 8
ShaderUtilities
óó8 G
.
óóG H
ID_GradientScale
óóH X
)
óóX Y
)
óóY Z
{
òò 
mat
ôô 
.
ôô 
SetFloat
ôô  
(
ôô  !
ShaderUtilities
ôô! 0
.
ôô0 1
ID_GradientScale
ôô1 A
,
ôôA B%
m_copiedAtlasProperties
ôôC Z
.
ôôZ [
GetFloat
ôô[ c
(
ôôc d
ShaderUtilities
ôôd s
.
ôôs t
ID_GradientScaleôôt Ñ
)ôôÑ Ö
)ôôÖ Ü
;ôôÜ á
mat
öö 
.
öö 
SetFloat
öö  
(
öö  !
ShaderUtilities
öö! 0
.
öö0 1
ID_TextureWidth
öö1 @
,
öö@ A%
m_copiedAtlasProperties
ööB Y
.
ööY Z
GetFloat
ööZ b
(
ööb c
ShaderUtilities
ööc r
.
öör s
ID_TextureWidthöös Ç
)ööÇ É
)ööÉ Ñ
;ööÑ Ö
mat
õõ 
.
õõ 
SetFloat
õõ  
(
õõ  !
ShaderUtilities
õõ! 0
.
õõ0 1
ID_TextureHeight
õõ1 A
,
õõA B%
m_copiedAtlasProperties
õõC Z
.
õõZ [
GetFloat
õõ[ c
(
õõc d
ShaderUtilities
õõd s
.
õõs t
ID_TextureHeightõõt Ñ
)õõÑ Ö
)õõÖ Ü
;õõÜ á
}
úú 
}
ùù 
else
ûû 
if
ûû 
(
ûû 
m_copiedTexture
ûû $
!=
ûû% '
null
ûû( ,
)
ûû, -
{
üü 
Undo
†† 
.
†† 
RecordObject
†† !
(
††! "
mat
††" %
,
††% &
$str
††' 6
)
††6 7
;
††7 8
mat
¢¢ 
.
¢¢ 

SetTexture
¢¢ 
(
¢¢ 
ShaderUtilities
¢¢ .
.
¢¢. /

ID_MainTex
¢¢/ 9
,
¢¢9 :
m_copiedTexture
¢¢; J
)
¢¢J K
;
¢¢K L
}
££ 
}
¶¶ 	
[
´´ 	
MenuItem
´´	 
(
´´ 
$str
´´ 7
,
´´7 8
false
´´9 >
,
´´> ?
$num
´´@ D
)
´´D E
]
´´E F
static
¨¨ 
void
¨¨ 
ExtractAtlas
¨¨  
(
¨¨  !
MenuCommand
¨¨! ,
command
¨¨- 4
)
¨¨4 5
{
≠≠ 	
TMP_FontAsset
ÆÆ 
font
ÆÆ 
=
ÆÆ  
command
ÆÆ! (
.
ÆÆ( )
context
ÆÆ) 0
as
ÆÆ1 3
TMP_FontAsset
ÆÆ4 A
;
ÆÆA B
string
∞∞ 
fontPath
∞∞ 
=
∞∞ 
AssetDatabase
∞∞ +
.
∞∞+ ,
GetAssetPath
∞∞, 8
(
∞∞8 9
font
∞∞9 =
)
∞∞= >
;
∞∞> ?
string
±± 
texPath
±± 
=
±± 
Path
±± !
.
±±! "
GetDirectoryName
±±" 2
(
±±2 3
fontPath
±±3 ;
)
±±; <
+
±±= >
$str
±±? B
+
±±C D
Path
±±E I
.
±±I J)
GetFileNameWithoutExtension
±±J e
(
±±e f
fontPath
±±f n
)
±±n o
+
±±p q
$str
±±r ~
;
±±~ 
SerializedObject
¥¥ 
texprop
¥¥ $
=
¥¥% &
new
¥¥' *
SerializedObject
¥¥+ ;
(
¥¥; <
font
¥¥< @
.
¥¥@ A
material
¥¥A I
.
¥¥I J

GetTexture
¥¥J T
(
¥¥T U
ShaderUtilities
¥¥U d
.
¥¥d e

ID_MainTex
¥¥e o
)
¥¥o p
)
¥¥p q
;
¥¥q r
texprop
µµ 
.
µµ 
FindProperty
µµ  
(
µµ  !
$str
µµ! /
)
µµ/ 0
.
µµ0 1
	boolValue
µµ1 :
=
µµ; <
true
µµ= A
;
µµA B
texprop
∂∂ 
.
∂∂ %
ApplyModifiedProperties
∂∂ +
(
∂∂+ ,
)
∂∂, -
;
∂∂- .
	Texture2D
ππ 
tex
ππ 
=
ππ 
Instantiate
ππ '
(
ππ' (
font
ππ( ,
.
ππ, -
material
ππ- 5
.
ππ5 6

GetTexture
ππ6 @
(
ππ@ A
ShaderUtilities
ππA P
.
ππP Q

ID_MainTex
ππQ [
)
ππ[ \
)
ππ\ ]
as
ππ^ `
	Texture2D
ππa j
;
ππj k
texprop
ºº 
.
ºº 
FindProperty
ºº  
(
ºº  !
$str
ºº! /
)
ºº/ 0
.
ºº0 1
	boolValue
ºº1 :
=
ºº; <
false
ºº= B
;
ººB C
texprop
ΩΩ 
.
ΩΩ %
ApplyModifiedProperties
ΩΩ +
(
ΩΩ+ ,
)
ΩΩ, -
;
ΩΩ- .
Debug
øø 
.
øø 
Log
øø 
(
øø 
texPath
øø 
)
øø 
;
øø 
var
¡¡ 
pngData
¡¡ 
=
¡¡ 
tex
¡¡ 
.
¡¡ 
EncodeToPNG
¡¡ )
(
¡¡) *
)
¡¡* +
;
¡¡+ ,
File
¬¬ 
.
¬¬ 
WriteAllBytes
¬¬ 
(
¬¬ 
texPath
¬¬ &
,
¬¬& '
pngData
¬¬( /
)
¬¬/ 0
;
¬¬0 1
AssetDatabase
ƒƒ 
.
ƒƒ 
Refresh
ƒƒ !
(
ƒƒ! "
)
ƒƒ" #
;
ƒƒ# $
DestroyImmediate
≈≈ 
(
≈≈ 
tex
≈≈  
)
≈≈  !
;
≈≈! "
}
∆∆ 	
[
ÃÃ 	
MenuItem
ÃÃ	 
(
ÃÃ 
$str
ÃÃ A
,
ÃÃA B
false
ÃÃC H
,
ÃÃH I
$num
ÃÃJ N
)
ÃÃN O
]
ÃÃO P
static
ÕÕ 
void
ÕÕ !
RegenerateFontAsset
ÕÕ '
(
ÕÕ' (
MenuCommand
ÕÕ( 3
command
ÕÕ4 ;
)
ÕÕ; <
{
ŒŒ 	
TMP_FontAsset
œœ 
	fontAsset
œœ #
=
œœ$ %
command
œœ& -
.
œœ- .
context
œœ. 5
as
œœ6 8
TMP_FontAsset
œœ9 F
;
œœF G
if
—— 
(
—— 
	fontAsset
—— 
!=
—— 
null
—— !
)
——! "
{
““ *
TMPro_FontAssetCreatorWindow
”” ,
.
””, -(
ShowFontAtlasCreatorWindow
””- G
(
””G H
	fontAsset
””H Q
)
””Q R
;
””R S
}
‘‘ 
}
’’ 	
[
◊◊ 	
MenuItem
◊◊	 
(
◊◊ 
$str
◊◊ K
,
◊◊K L
false
◊◊M R
,
◊◊R S
$num
◊◊T X
)
◊◊X Y
]
◊◊Y Z
static
ÿÿ 
void
ÿÿ #
ForceFontAssetUpgrade
ÿÿ )
(
ÿÿ) *
MenuCommand
ÿÿ* 5
command
ÿÿ6 =
)
ÿÿ= >
{
ŸŸ 	
TMP_FontAsset
⁄⁄ 
	fontAsset
⁄⁄ #
=
⁄⁄$ %
command
⁄⁄& -
.
⁄⁄- .
context
⁄⁄. 5
as
⁄⁄6 8
TMP_FontAsset
⁄⁄9 F
;
⁄⁄F G
if
‹‹ 
(
‹‹ 
	fontAsset
‹‹ 
!=
‹‹ 
null
‹‹ !
)
‹‹! "
{
›› 
	fontAsset
ﬁﬁ 
.
ﬁﬁ 
UpgradeFontAsset
ﬁﬁ *
(
ﬁﬁ* +
)
ﬁﬁ+ ,
;
ﬁﬁ, - 
TMPro_EventManager
ﬂﬂ "
.
ﬂﬂ" #&
ON_FONT_PROPERTY_CHANGED
ﬂﬂ# ;
(
ﬂﬂ; <
true
ﬂﬂ< @
,
ﬂﬂ@ A
	fontAsset
ﬂﬂB K
)
ﬂﬂK L
;
ﬂﬂL M
}
‡‡ 
}
·· 	
[
ËË 	
MenuItem
ËË	 
(
ËË 
$str
ËË /
,
ËË/ 0
true
ËË1 5
,
ËË5 6
$num
ËË7 :
)
ËË: ;
]
ËË; <
static
ÈÈ 
bool
ÈÈ (
ClearFontAssetDataValidate
ÈÈ .
(
ÈÈ. /
MenuCommand
ÈÈ/ :
command
ÈÈ; B
)
ÈÈB C
{
ÍÍ 	
return
ÎÎ 
AssetDatabase
ÎÎ  
.
ÎÎ  !
IsOpenForEdit
ÎÎ! .
(
ÎÎ. /
command
ÎÎ/ 6
.
ÎÎ6 7
context
ÎÎ7 >
)
ÎÎ> ?
;
ÎÎ? @
}
ÏÏ 	
[
ÓÓ 	
MenuItem
ÓÓ	 
(
ÓÓ 
$str
ÓÓ /
,
ÓÓ/ 0
false
ÓÓ1 6
,
ÓÓ6 7
$num
ÓÓ8 ;
)
ÓÓ; <
]
ÓÓ< =
static
ÔÔ 
void
ÔÔ  
ClearFontAssetData
ÔÔ &
(
ÔÔ& '
MenuCommand
ÔÔ' 2
command
ÔÔ3 :
)
ÔÔ: ;
{
 	
TMP_FontAsset
ÒÒ 
	fontAsset
ÒÒ #
=
ÒÒ$ %
command
ÒÒ& -
.
ÒÒ- .
context
ÒÒ. 5
as
ÒÒ6 8
TMP_FontAsset
ÒÒ9 F
;
ÒÒF G
if
ÛÛ 
(
ÛÛ 
	fontAsset
ÛÛ 
!=
ÛÛ 
null
ÛÛ !
&&
ÛÛ" $
	Selection
ÛÛ% .
.
ÛÛ. /
activeObject
ÛÛ/ ;
!=
ÛÛ< >
	fontAsset
ÛÛ? H
)
ÛÛH I
{
ÙÙ 
	Selection
ıı 
.
ıı 
activeObject
ıı &
=
ıı' (
	fontAsset
ıı) 2
;
ıı2 3
}
ˆˆ 
	fontAsset
¯¯ 
.
¯¯  
ClearFontAssetData
¯¯ (
(
¯¯( )
true
¯¯) -
)
¯¯- .
;
¯¯. / 
TMPro_EventManager
˙˙ 
.
˙˙ &
ON_FONT_PROPERTY_CHANGED
˙˙ 7
(
˙˙7 8
true
˙˙8 <
,
˙˙< =
	fontAsset
˙˙> G
)
˙˙G H
;
˙˙H I
}
˚˚ 	
[
˛˛ 	
MenuItem
˛˛	 
(
˛˛ 
$str
˛˛ I
,
˛˛I J
false
˛˛K P
,
˛˛P Q
$num
˛˛R U
)
˛˛U V
]
˛˛V W
static
ˇˇ 
void
ˇˇ 
CreateFontAsset
ˇˇ #
(
ˇˇ# $
MenuCommand
ˇˇ$ /
command
ˇˇ0 7
)
ˇˇ7 8
{
ÄÄ 	"
TrueTypeFontImporter
ÅÅ  
importer
ÅÅ! )
=
ÅÅ* +
command
ÅÅ, 3
.
ÅÅ3 4
context
ÅÅ4 ;
as
ÅÅ< >"
TrueTypeFontImporter
ÅÅ? S
;
ÅÅS T
if
ÉÉ 
(
ÉÉ 
importer
ÉÉ 
!=
ÉÉ 
null
ÉÉ  
)
ÉÉ  !
{
ÑÑ 
Font
ÖÖ 
sourceFontFile
ÖÖ #
=
ÖÖ$ %
AssetDatabase
ÖÖ& 3
.
ÖÖ3 4
LoadAssetAtPath
ÖÖ4 C
<
ÖÖC D
Font
ÖÖD H
>
ÖÖH I
(
ÖÖI J
importer
ÖÖJ R
.
ÖÖR S
	assetPath
ÖÖS \
)
ÖÖ\ ]
;
ÖÖ] ^
if
áá 
(
áá 
sourceFontFile
áá "
)
áá" #*
TMPro_FontAssetCreatorWindow
àà 0
.
àà0 1(
ShowFontAtlasCreatorWindow
àà1 K
(
ààK L
sourceFontFile
ààL Z
)
ààZ [
;
àà[ \
}
ââ 
}
ää 	
}
ãã 
}åå Á
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_ResourcesLoader.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
class		 	
TMP_ResourcesLoader		
 
{

 
public 
static 
void $
LoadTextMeshProResources 3
(3 4
)4 5
{ 	
} 	
static 
TMP_ResourcesLoader "
(" #
)# $
{ 	
}   	
}44 
}DD Â-
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\GlyphRectPropertyDrawer.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
[

  
CustomPropertyDrawer

 
(

 
typeof

  
(

  !
	GlyphRect

! *
)

* +
)

+ ,
]

, -
public 

class #
GlyphRectPropertyDrawer (
:) *
PropertyDrawer+ 9
{ 
public 
override 
void 
OnGUI "
(" #
Rect# '
position( 0
,0 1
SerializedProperty2 D
propertyE M
,M N

GUIContentO Y
labelZ _
)_ `
{ 	
SerializedProperty 
prop_X %
=& '
property( 0
.0 1 
FindPropertyRelative1 E
(E F
$strF K
)K L
;L M
SerializedProperty 
prop_Y %
=& '
property( 0
.0 1 
FindPropertyRelative1 E
(E F
$strF K
)K L
;L M
SerializedProperty 

prop_Width )
=* +
property, 4
.4 5 
FindPropertyRelative5 I
(I J
$strJ S
)S T
;T U
SerializedProperty 
prop_Height *
=+ ,
property- 5
.5 6 
FindPropertyRelative6 J
(J K
$strK U
)U V
;V W
Rect 
rect 
= 
new 
Rect  
(  !
position! )
.) *
x* +
,+ ,
position- 5
.5 6
y6 7
,7 8
position9 A
.A B
widthB G
,G H
$numI K
)K L
;L M
	EditorGUI 
. 

LabelField  
(  !
new! $
Rect% )
() *
rect* .
.. /
x/ 0
,0 1
rect2 6
.6 7
y7 8
-9 :
$num; ?
,? @
rectA E
.E F
widthF K
,K L
$numM O
)O P
,P Q
newR U

GUIContentV `
(` a
$stra m
)m n
)n o
;o p
EditorGUIUtility 
. 

labelWidth '
=( )
$num* -
;- .
EditorGUIUtility 
. 

fieldWidth '
=( )
$num* -
;- .
float 
width 
= 
( 
rect 
.  
width  %
-& '
$num( +
)+ ,
/- .
$num/ 0
;0 1
	EditorGUI 
. 
PropertyField #
(# $
new$ '
Rect( ,
(, -
rect- 1
.1 2
x2 3
+4 5
width6 ;
*< =
$num> ?
,? @
rectA E
.E F
yF G
+H I
$numJ L
,L M
widthN S
-T U
$numV X
,X Y
$numZ \
)\ ]
,] ^
prop_X_ e
,e f
newg j

GUIContentk u
(u v
$strv z
)z {
){ |
;| }
	EditorGUI   
.   
PropertyField   #
(  # $
new  $ '
Rect  ( ,
(  , -
rect  - 1
.  1 2
x  2 3
+  4 5
width  6 ;
*  < =
$num  > ?
,  ? @
rect  A E
.  E F
y  F G
+  H I
$num  J L
,  L M
width  N S
-  T U
$num  V X
,  X Y
$num  Z \
)  \ ]
,  ] ^
prop_Y  _ e
,  e f
new  g j

GUIContent  k u
(  u v
$str  v z
)  z {
)  { |
;  | }
	EditorGUI!! 
.!! 
PropertyField!! #
(!!# $
new!!$ '
Rect!!( ,
(!!, -
rect!!- 1
.!!1 2
x!!2 3
+!!4 5
width!!6 ;
*!!< =
$num!!> ?
,!!? @
rect!!A E
.!!E F
y!!F G
+!!H I
$num!!J L
,!!L M
width!!N S
-!!T U
$num!!V X
,!!X Y
$num!!Z \
)!!\ ]
,!!] ^

prop_Width!!_ i
,!!i j
new!!k n

GUIContent!!o y
(!!y z
$str!!z ~
)!!~ 
)	!! Ä
;
!!Ä Å
	EditorGUI"" 
."" 
PropertyField"" #
(""# $
new""$ '
Rect""( ,
("", -
rect""- 1
.""1 2
x""2 3
+""4 5
width""6 ;
*""< =
$num""> ?
,""? @
rect""A E
.""E F
y""F G
+""H I
$num""J L
,""L M
width""N S
-""T U
$num""V X
,""X Y
$num""Z \
)""\ ]
,""] ^
prop_Height""_ j
,""j k
new""l o

GUIContent""p z
(""z {
$str""{ 
)	"" Ä
)
""Ä Å
;
""Å Ç
}%% 	
public'' 
override'' 
float'' 
GetPropertyHeight'' /
(''/ 0
SerializedProperty''0 B
property''C K
,''K L

GUIContent''M W
label''X ]
)''] ^
{(( 	
return)) 
$num)) 
;)) 
}** 	
}++ 
},, ´*
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_DropdownEditor.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
[ 
CustomEditor 
( 
typeof 
( 
TMP_Dropdown %
)% &
,& '
true( ,
), -
]- .
[		 "
CanEditMultipleObjects		 
]		 
public

 

class

 
DropdownEditor

 
:

  !
SelectableEditor

" 2
{ 
SerializedProperty 

m_Template %
;% &
SerializedProperty 
m_CaptionText (
;( )
SerializedProperty 
m_CaptionImage )
;) *
SerializedProperty 
m_Placeholder (
;( )
SerializedProperty 

m_ItemText %
;% &
SerializedProperty 
m_ItemImage &
;& '
SerializedProperty  
m_OnSelectionChanged /
;/ 0
SerializedProperty 
m_Value "
;" #
SerializedProperty 
m_AlphaFadeSpeed +
;+ ,
SerializedProperty 
	m_Options $
;$ %
	protected 
override 
void 
OnEnable  (
(( )
)) *
{ 	
base 
. 
OnEnable 
( 
) 
; 

m_Template 
= 
serializedObject )
.) *
FindProperty* 6
(6 7
$str7 C
)C D
;D E
m_CaptionText 
= 
serializedObject ,
., -
FindProperty- 9
(9 :
$str: I
)I J
;J K
m_CaptionImage 
= 
serializedObject -
.- .
FindProperty. :
(: ;
$str; K
)K L
;L M
m_Placeholder 
= 
serializedObject ,
., -
FindProperty- 9
(9 :
$str: I
)I J
;J K

m_ItemText 
= 
serializedObject )
.) *
FindProperty* 6
(6 7
$str7 C
)C D
;D E
m_ItemImage 
= 
serializedObject *
.* +
FindProperty+ 7
(7 8
$str8 E
)E F
;F G 
m_OnSelectionChanged    
=  ! "
serializedObject  # 3
.  3 4
FindProperty  4 @
(  @ A
$str  A S
)  S T
;  T U
m_Value!! 
=!! 
serializedObject!! &
.!!& '
FindProperty!!' 3
(!!3 4
$str!!4 =
)!!= >
;!!> ?
m_AlphaFadeSpeed"" 
="" 
serializedObject"" /
.""/ 0
FindProperty""0 <
(""< =
$str""= O
)""O P
;""P Q
	m_Options## 
=## 
serializedObject## (
.##( )
FindProperty##) 5
(##5 6
$str##6 A
)##A B
;##B C
}$$ 	
public&& 
override&& 
void&& 
OnInspectorGUI&& +
(&&+ ,
)&&, -
{'' 	
base(( 
.(( 
OnInspectorGUI(( 
(((  
)((  !
;((! "
EditorGUILayout)) 
.)) 
Space)) !
())! "
)))" #
;))# $
serializedObject++ 
.++ 
Update++ #
(++# $
)++$ %
;++% &
EditorGUILayout,, 
.,, 
PropertyField,, )
(,,) *

m_Template,,* 4
),,4 5
;,,5 6
EditorGUILayout-- 
.-- 
PropertyField-- )
(--) *
m_CaptionText--* 7
)--7 8
;--8 9
EditorGUILayout.. 
... 
PropertyField.. )
(..) *
m_CaptionImage..* 8
)..8 9
;..9 :
EditorGUILayout// 
.// 
PropertyField// )
(//) *
m_Placeholder//* 7
)//7 8
;//8 9
EditorGUILayout00 
.00 
PropertyField00 )
(00) *

m_ItemText00* 4
)004 5
;005 6
EditorGUILayout11 
.11 
PropertyField11 )
(11) *
m_ItemImage11* 5
)115 6
;116 7
EditorGUILayout22 
.22 
PropertyField22 )
(22) *
m_Value22* 1
)221 2
;222 3
EditorGUILayout33 
.33 
PropertyField33 )
(33) *
m_AlphaFadeSpeed33* :
)33: ;
;33; <
EditorGUILayout44 
.44 
PropertyField44 )
(44) *
	m_Options44* 3
)443 4
;444 5
EditorGUILayout55 
.55 
PropertyField55 )
(55) * 
m_OnSelectionChanged55* >
)55> ?
;55? @
serializedObject66 
.66 #
ApplyModifiedProperties66 4
(664 5
)665 6
;666 7
}77 	
}88 
}99 ®´
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Editor\TMP_SDFShaderGUI.cs
	namespace 	
TMPro
 
. 
EditorUtilities 
{ 
public 

class 
TMP_SDFShaderGUI !
:" #
TMP_BaseShaderGUI$ 5
{ 
static 
ShaderFeature 
s_OutlineFeature -
,- .
s_UnderlayFeature/ @
,@ A
s_BevelFeatureB P
,P Q
s_GlowFeatureR _
,_ `
s_MaskFeaturea n
;n o
static

 
bool

 
s_Face

 
=

 
true

 !
,

! "
	s_Outline

# ,
=

- .
true

/ 3
,

3 4

s_Outline2

5 ?
,

? @

s_Underlay

A K
,

K L

s_Lighting

M W
,

W X
s_Glow

Y _
,

_ `
s_Bevel

a h
,

h i
s_Light

j q
,

q r
s_Bump

s y
,

y z
s_Env	

{ Ä
;


Ä Å
static 
string 
[ 
] 
s_FaceUvSpeedNames 
=  
{! "
$str# 2
,2 3
$str4 C
}D E
,E F!
s_OutlineUvSpeedNames !
=" #
{$ %
$str& 8
,8 9
$str: L
}M N
;N O
static 
TMP_SDFShaderGUI 
(  
)  !
{ 	
s_OutlineFeature 
= 
new "
ShaderFeature# 0
(0 1
)1 2
{ 
	undoLabel 
= 
$str %
,% &
keywords 
= 
new 
[ 
]  
{! "
$str# /
}0 1
} 
; 
s_UnderlayFeature 
= 
new  #
ShaderFeature$ 1
(1 2
)2 3
{ 
	undoLabel 
= 
$str &
,& '
keywords 
= 
new 
[ 
]  
{! "
$str# 0
,0 1
$str2 B
}C D
,D E
label 
= 
new 

GUIContent &
(& '
$str' 6
)6 7
,7 8
keywordLabels 
= 
new  #
[# $
]$ %
{ 
new 

GUIContent "
(" #
$str# )
)) *
,* +
new, /

GUIContent0 :
(: ;
$str; C
)C D
,D E
newF I

GUIContentJ T
(T U
$strU \
)\ ]
}   
}!! 
;!! 
s_BevelFeature## 
=## 
new##  
ShaderFeature##! .
(##. /
)##/ 0
{$$ 
	undoLabel%% 
=%% 
$str%% #
,%%# $
keywords&& 
=&& 
new&& 
[&& 
]&&  
{&&! "
$str&&# -
}&&. /
}'' 
;'' 
s_GlowFeature)) 
=)) 
new)) 
ShaderFeature))  -
())- .
))). /
{** 
	undoLabel++ 
=++ 
$str++ "
,++" #
keywords,, 
=,, 
new,, 
[,, 
],,  
{,,! "
$str,,# ,
},,- .
}-- 
;-- 
s_MaskFeature// 
=// 
new// 
ShaderFeature//  -
(//- .
)//. /
{00 
	undoLabel11 
=11 
$str11 "
,11" #
keywords22 
=22 
new22 
[22 
]22  
{22! "
$str22# .
,22. /
$str220 ;
}22< =
,22= >
label33 
=33 
new33 

GUIContent33 &
(33& '
$str33' -
)33- .
,33. /
keywordLabels44 
=44 
new44  #
[44# $
]44$ %
{55 
new66 

GUIContent66 "
(66" #
$str66# -
)66- .
,66. /
new660 3

GUIContent664 >
(66> ?
$str66? J
)66J K
,66K L
new66M P

GUIContent66Q [
(66[ \
$str66\ g
)66g h
}77 
}88 
;88 
}99 	
	protected;; 
override;; 
void;; 
DoGUI;;  %
(;;% &
);;& '
{<< 	
s_Face== 
=== 

BeginPanel== 
(==  
$str==  &
,==& '
s_Face==( .
)==. /
;==/ 0
if>> 
(>> 
s_Face>> 
)>> 
{?? 
DoFacePanel@@ 
(@@ 
)@@ 
;@@ 
}AA 
EndPanelCC 
(CC 
)CC 
;CC 
	s_OutlineEE 
=EE 

m_MaterialEE "
.EE" #
HasPropertyEE# .
(EE. /
ShaderUtilitiesEE/ >
.EE> ?
ID_OutlineTexEE? L
)EEL M
?EEN O

BeginPanelEEP Z
(EEZ [
$strEE[ d
,EEd e
	s_OutlineEEf o
)EEo p
:EEq r

BeginPanelEEs }
(EE} ~
$str	EE~ á
,
EEá à
s_OutlineFeature
EEâ ô
,
EEô ö
	s_Outline
EEõ §
)
EE§ •
;
EE• ¶
ifFF 
(FF 
	s_OutlineFF 
)FF 
{GG 
DoOutlinePanelHH 
(HH 
)HH  
;HH  !
}II 
EndPanelKK 
(KK 
)KK 
;KK 
ifMM 
(MM 

m_MaterialMM 
.MM 
HasPropertyMM &
(MM& '
ShaderUtilitiesMM' 6
.MM6 7
ID_Outline2ColorMM7 G
)MMG H
)MMH I
{NN 

s_Outline2OO 
=OO 

BeginPanelOO '
(OO' (
$strOO( 3
,OO3 4
s_OutlineFeatureOO5 E
,OOE F

s_Outline2OOG Q
)OOQ R
;OOR S
ifPP 
(PP 

s_Outline2PP 
)PP 
{QQ 
DoOutline2PanelRR #
(RR# $
)RR$ %
;RR% &
}SS 
EndPanelUU 
(UU 
)UU 
;UU 
}VV 
ifXX 
(XX 

m_MaterialXX 
.XX 
HasPropertyXX &
(XX& '
ShaderUtilitiesXX' 6
.XX6 7
ID_UnderlayColorXX7 G
)XXG H
)XXH I
{YY 

s_UnderlayZZ 
=ZZ 

BeginPanelZZ '
(ZZ' (
$strZZ( 2
,ZZ2 3
s_UnderlayFeatureZZ4 E
,ZZE F

s_UnderlayZZG Q
)ZZQ R
;ZZR S
if[[ 
([[ 

s_Underlay[[ 
)[[ 
{\\ 
DoUnderlayPanel]] #
(]]# $
)]]$ %
;]]% &
}^^ 
EndPanel`` 
(`` 
)`` 
;`` 
}aa 
ifcc 
(cc 

m_Materialcc 
.cc 
HasPropertycc &
(cc& '
$strcc' 7
)cc7 8
)cc8 9
{dd 

s_Lightingee 
=ee 

BeginPanelee '
(ee' (
$stree( 2
,ee2 3
s_BevelFeatureee4 B
,eeB C

s_LightingeeD N
)eeN O
;eeO P
ifff 
(ff 

s_Lightingff 
)ff 
{gg 
s_Bevelhh 
=hh 

BeginPanelhh (
(hh( )
$strhh) 0
,hh0 1
s_Bevelhh2 9
)hh9 :
;hh: ;
ifii 
(ii 
s_Bevelii 
)ii  
{jj 
DoBevelPanelkk $
(kk$ %
)kk% &
;kk& '
}ll 
EndPanelnn 
(nn 
)nn 
;nn 
s_Lightpp 
=pp 

BeginPanelpp (
(pp( )
$strpp) 9
,pp9 :
s_Lightpp; B
)ppB C
;ppC D
ifqq 
(qq 
s_Lightqq 
)qq  
{rr  
DoLocalLightingPanelss ,
(ss, -
)ss- .
;ss. /
}tt 
EndPanelvv 
(vv 
)vv 
;vv 
s_Bumpxx 
=xx 

BeginPanelxx '
(xx' (
$strxx( 2
,xx2 3
s_Bumpxx4 :
)xx: ;
;xx; <
ifyy 
(yy 
s_Bumpyy 
)yy 
{zz 
DoBumpMapPanel{{ &
({{& '
){{' (
;{{( )
}|| 
EndPanel~~ 
(~~ 
)~~ 
;~~ 
s_Env
ÄÄ 
=
ÄÄ 

BeginPanel
ÄÄ &
(
ÄÄ& '
$str
ÄÄ' 8
,
ÄÄ8 9
s_Env
ÄÄ: ?
)
ÄÄ? @
;
ÄÄ@ A
if
ÅÅ 
(
ÅÅ 
s_Env
ÅÅ 
)
ÅÅ 
{
ÇÇ 
DoEnvMapPanel
ÉÉ %
(
ÉÉ% &
)
ÉÉ& '
;
ÉÉ' (
}
ÑÑ 
EndPanel
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
}
áá 
EndPanel
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 
else
ãã 
if
ãã 
(
ãã 

m_Material
ãã 
.
ãã  
HasProperty
ãã  +
(
ãã+ ,
$str
ãã, 8
)
ãã8 9
)
ãã9 :
{
åå 
s_Bevel
çç 
=
çç 

BeginPanel
çç $
(
çç$ %
$str
çç% ,
,
çç, -
s_Bevel
çç. 5
)
çç5 6
;
çç6 7
if
éé 
(
éé 
s_Bevel
éé 
)
éé 
{
èè 
DoBevelPanel
êê  
(
êê  !
)
êê! "
;
êê" #
}
ëë 
EndPanel
ìì 
(
ìì 
)
ìì 
;
ìì 
s_Light
ïï 
=
ïï 

BeginPanel
ïï $
(
ïï$ %
$str
ïï% 7
,
ïï7 8
s_Light
ïï9 @
)
ïï@ A
;
ïïA B
if
ññ 
(
ññ 
s_Light
ññ 
)
ññ 
{
óó $
DoSurfaceLightingPanel
òò *
(
òò* +
)
òò+ ,
;
òò, -
}
ôô 
EndPanel
õõ 
(
õõ 
)
õõ 
;
õõ 
s_Bump
ùù 
=
ùù 

BeginPanel
ùù #
(
ùù# $
$str
ùù$ .
,
ùù. /
s_Bump
ùù0 6
)
ùù6 7
;
ùù7 8
if
ûû 
(
ûû 
s_Bump
ûû 
)
ûû 
{
üü 
DoBumpMapPanel
†† "
(
††" #
)
††# $
;
††$ %
}
°° 
EndPanel
££ 
(
££ 
)
££ 
;
££ 
s_Env
•• 
=
•• 

BeginPanel
•• "
(
••" #
$str
••# 4
,
••4 5
s_Env
••6 ;
)
••; <
;
••< =
if
¶¶ 
(
¶¶ 
s_Env
¶¶ 
)
¶¶ 
{
ßß 
DoEnvMapPanel
®® !
(
®®! "
)
®®" #
;
®®# $
}
©© 
EndPanel
´´ 
(
´´ 
)
´´ 
;
´´ 
}
¨¨ 
if
ÆÆ 
(
ÆÆ 

m_Material
ÆÆ 
.
ÆÆ 
HasProperty
ÆÆ &
(
ÆÆ& '
ShaderUtilities
ÆÆ' 6
.
ÆÆ6 7
ID_GlowColor
ÆÆ7 C
)
ÆÆC D
)
ÆÆD E
{
ØØ 
s_Glow
∞∞ 
=
∞∞ 

BeginPanel
∞∞ #
(
∞∞# $
$str
∞∞$ *
,
∞∞* +
s_GlowFeature
∞∞, 9
,
∞∞9 :
s_Glow
∞∞; A
)
∞∞A B
;
∞∞B C
if
±± 
(
±± 
s_Glow
±± 
)
±± 
{
≤≤ 
DoGlowPanel
≥≥ 
(
≥≥  
)
≥≥  !
;
≥≥! "
}
¥¥ 
EndPanel
∂∂ 
(
∂∂ 
)
∂∂ 
;
∂∂ 
}
∑∑ 
s_DebugExtended
ππ 
=
ππ 

BeginPanel
ππ (
(
ππ( )
$str
ππ) 9
,
ππ9 :
s_DebugExtended
ππ; J
)
ππJ K
;
ππK L
if
∫∫ 
(
∫∫ 
s_DebugExtended
∫∫ 
)
∫∫  
{
ªª 
DoDebugPanel
ºº 
(
ºº 
)
ºº 
;
ºº 
}
ΩΩ 
EndPanel
øø 
(
øø 
)
øø 
;
øø 
}
¿¿ 	
void
¬¬ 
DoFacePanel
¬¬ 
(
¬¬ 
)
¬¬ 
{
√√ 	
	EditorGUI
ƒƒ 
.
ƒƒ 
indentLevel
ƒƒ !
+=
ƒƒ" $
$num
ƒƒ% &
;
ƒƒ& '
DoColor
≈≈ 
(
≈≈ 
$str
≈≈  
,
≈≈  !
$str
≈≈" )
)
≈≈) *
;
≈≈* +
if
∆∆ 
(
∆∆ 

m_Material
∆∆ 
.
∆∆ 
HasProperty
∆∆ &
(
∆∆& '
ShaderUtilities
∆∆' 6
.
∆∆6 7

ID_FaceTex
∆∆7 A
)
∆∆A B
)
∆∆B C
{
«« 
if
»» 
(
»» 

m_Material
»» 
.
»» 
HasProperty
»» *
(
»»* +
$str
»»+ :
)
»»: ;
)
»»; <
{
…… 
DoTexture2D
   
(
    
$str
    *
,
  * +
$str
  , 5
,
  5 6
true
  7 ;
,
  ; < 
s_FaceUvSpeedNames
  = O
)
  O P
;
  P Q
}
ÀÀ 
else
ÃÃ 
{
ÕÕ 
DoTexture2D
ŒŒ 
(
ŒŒ  
$str
ŒŒ  *
,
ŒŒ* +
$str
ŒŒ, 5
,
ŒŒ5 6
true
ŒŒ7 ;
)
ŒŒ; <
;
ŒŒ< =
}
œœ 
}
–– 
DoSlider
““ 
(
““ 
$str
““ '
,
““' (
$str
““) 3
)
““3 4
;
““4 5
DoSlider
”” 
(
”” 
$str
”” "
,
””" #
$str
””$ ,
)
””, -
;
””- .
if
‘‘ 
(
‘‘ 

m_Material
‘‘ 
.
‘‘ 
HasProperty
‘‘ &
(
‘‘& '
ShaderUtilities
‘‘' 6
.
‘‘6 7
ID_Shininess
‘‘7 C
)
‘‘C D
)
‘‘D E
{
’’ 
DoSlider
÷÷ 
(
÷÷ 
$str
÷÷ )
,
÷÷) *
$str
÷÷+ 2
)
÷÷2 3
;
÷÷3 4
}
◊◊ 
	EditorGUI
ŸŸ 
.
ŸŸ 
indentLevel
ŸŸ !
-=
ŸŸ" $
$num
ŸŸ% &
;
ŸŸ& '
EditorGUILayout
⁄⁄ 
.
⁄⁄ 
Space
⁄⁄ !
(
⁄⁄! "
)
⁄⁄" #
;
⁄⁄# $
}
€€ 	
void
›› 
DoOutlinePanel
›› 
(
›› 
)
›› 
{
ﬁﬁ 	
	EditorGUI
ﬂﬂ 
.
ﬂﬂ 
indentLevel
ﬂﬂ !
+=
ﬂﬂ" $
$num
ﬂﬂ% &
;
ﬂﬂ& '
DoColor
‡‡ 
(
‡‡ 
$str
‡‡ #
,
‡‡# $
$str
‡‡% ,
)
‡‡, -
;
‡‡- .
if
·· 
(
·· 

m_Material
·· 
.
·· 
HasProperty
·· &
(
··& '
ShaderUtilities
··' 6
.
··6 7
ID_OutlineTex
··7 D
)
··D E
)
··E F
{
‚‚ 
if
„„ 
(
„„ 

m_Material
„„ 
.
„„ 
HasProperty
„„ *
(
„„* +
$str
„„+ =
)
„„= >
)
„„> ?
{
‰‰ 
DoTexture2D
ÂÂ 
(
ÂÂ  
$str
ÂÂ  -
,
ÂÂ- .
$str
ÂÂ/ 8
,
ÂÂ8 9
true
ÂÂ: >
,
ÂÂ> ?#
s_OutlineUvSpeedNames
ÂÂ@ U
)
ÂÂU V
;
ÂÂV W
}
ÊÊ 
else
ÁÁ 
{
ËË 
DoTexture2D
ÈÈ 
(
ÈÈ  
$str
ÈÈ  -
,
ÈÈ- .
$str
ÈÈ/ 8
,
ÈÈ8 9
true
ÈÈ: >
)
ÈÈ> ?
;
ÈÈ? @
}
ÍÍ 
}
ÎÎ 
DoSlider
ÌÌ 
(
ÌÌ 
$str
ÌÌ $
,
ÌÌ$ %
$str
ÌÌ& 1
)
ÌÌ1 2
;
ÌÌ2 3
if
ÓÓ 
(
ÓÓ 

m_Material
ÓÓ 
.
ÓÓ 
HasProperty
ÓÓ &
(
ÓÓ& '
$str
ÓÓ' :
)
ÓÓ: ;
)
ÓÓ; <
{
ÔÔ 
DoSlider
 
(
 
$str
 ,
,
, -
$str
. 5
)
5 6
;
6 7
}
ÒÒ 
	EditorGUI
ÛÛ 
.
ÛÛ 
indentLevel
ÛÛ !
-=
ÛÛ" $
$num
ÛÛ% &
;
ÛÛ& '
EditorGUILayout
ÙÙ 
.
ÙÙ 
Space
ÙÙ !
(
ÙÙ! "
)
ÙÙ" #
;
ÙÙ# $
}
ıı 	
void
˜˜ 
DoOutline2Panel
˜˜ 
(
˜˜ 
)
˜˜ 
{
¯¯ 	
	EditorGUI
˘˘ 
.
˘˘ 
indentLevel
˘˘ !
+=
˘˘" $
$num
˘˘% &
;
˘˘& '
DoColor
˙˙ 
(
˙˙ 
$str
˙˙ $
,
˙˙$ %
$str
˙˙& -
)
˙˙- .
;
˙˙. /
DoSlider
áá 
(
áá 
$str
áá %
,
áá% &
$str
áá' 2
)
áá2 3
;
áá3 4
	EditorGUI
çç 
.
çç 
indentLevel
çç !
-=
çç" $
$num
çç% &
;
çç& '
EditorGUILayout
éé 
.
éé 
Space
éé !
(
éé! "
)
éé" #
;
éé# $
}
èè 	
void
ëë 
DoUnderlayPanel
ëë 
(
ëë 
)
ëë 
{
íí 	
	EditorGUI
ìì 
.
ìì 
indentLevel
ìì !
+=
ìì" $
$num
ìì% &
;
ìì& '
s_UnderlayFeature
îî 
.
îî 
DoPopup
îî %
(
îî% &
m_Editor
îî& .
,
îî. /

m_Material
îî0 :
)
îî: ;
;
îî; <
DoColor
ïï 
(
ïï 
$str
ïï $
,
ïï$ %
$str
ïï& -
)
ïï- .
;
ïï. /
DoSlider
ññ 
(
ññ 
$str
ññ '
,
ññ' (
$str
ññ) 3
)
ññ3 4
;
ññ4 5
DoSlider
óó 
(
óó 
$str
óó '
,
óó' (
$str
óó) 3
)
óó3 4
;
óó4 5
DoSlider
òò 
(
òò 
$str
òò &
,
òò& '
$str
òò( 0
)
òò0 1
;
òò1 2
DoSlider
ôô 
(
ôô 
$str
ôô (
,
ôô( )
$str
ôô* 4
)
ôô4 5
;
ôô5 6
	EditorGUI
öö 
.
öö 
indentLevel
öö !
-=
öö" $
$num
öö% &
;
öö& '
EditorGUILayout
õõ 
.
õõ 
Space
õõ !
(
õõ! "
)
õõ" #
;
õõ# $
}
úú 	
static
ûû 

GUIContent
ûû 
[
ûû 
]
ûû 
s_BevelTypeLabels
ûû -
=
ûû. /
{
üü 	
new
†† 

GUIContent
†† 
(
†† 
$str
†† (
)
††( )
,
††) *
new
°° 

GUIContent
°° 
(
°° 
$str
°° (
)
°°( )
}
¢¢ 	
;
¢¢	 

void
§§ 
DoBevelPanel
§§ 
(
§§ 
)
§§ 
{
•• 	
	EditorGUI
¶¶ 
.
¶¶ 
indentLevel
¶¶ !
+=
¶¶" $
$num
¶¶% &
;
¶¶& '
DoPopup
ßß 
(
ßß 
$str
ßß "
,
ßß" #
$str
ßß$ *
,
ßß* +
s_BevelTypeLabels
ßß, =
)
ßß= >
;
ßß> ?
DoSlider
®® 
(
®® 
$str
®® 
,
®® 
$str
®® '
)
®®' (
;
®®( )
DoSlider
©© 
(
©© 
$str
©© #
,
©©# $
$str
©©% -
)
©©- .
;
©©. /
DoSlider
™™ 
(
™™ 
$str
™™ "
,
™™" #
$str
™™$ +
)
™™+ ,
;
™™, -
DoSlider
´´ 
(
´´ 
$str
´´ &
,
´´& '
$str
´´( 3
)
´´3 4
;
´´4 5
DoSlider
¨¨ 
(
¨¨ 
$str
¨¨ "
,
¨¨" #
$str
¨¨$ +
)
¨¨+ ,
;
¨¨, -
	EditorGUI
≠≠ 
.
≠≠ 
indentLevel
≠≠ !
-=
≠≠" $
$num
≠≠% &
;
≠≠& '
EditorGUILayout
ÆÆ 
.
ÆÆ 
Space
ÆÆ !
(
ÆÆ! "
)
ÆÆ" #
;
ÆÆ# $
}
ØØ 	
void
±± "
DoLocalLightingPanel
±± !
(
±±! "
)
±±" #
{
≤≤ 	
	EditorGUI
≥≥ 
.
≥≥ 
indentLevel
≥≥ !
+=
≥≥" $
$num
≥≥% &
;
≥≥& '
DoSlider
¥¥ 
(
¥¥ 
$str
¥¥ "
,
¥¥" #
$str
¥¥$ 1
)
¥¥1 2
;
¥¥2 3
DoColor
µµ 
(
µµ 
$str
µµ $
,
µµ$ %
$str
µµ& 6
)
µµ6 7
;
µµ7 8
DoSlider
∂∂ 
(
∂∂ 
$str
∂∂ %
,
∂∂% &
$str
∂∂' 7
)
∂∂7 8
;
∂∂8 9
DoSlider
∑∑ 
(
∑∑ 
$str
∑∑ $
,
∑∑$ %
$str
∑∑& :
)
∑∑: ;
;
∑∑; <
DoSlider
∏∏ 
(
∏∏ 
$str
∏∏ 
,
∏∏  
$str
∏∏! 1
)
∏∏1 2
;
∏∏2 3
DoSlider
ππ 
(
ππ 
$str
ππ 
,
ππ  
$str
ππ! 1
)
ππ1 2
;
ππ2 3
	EditorGUI
∫∫ 
.
∫∫ 
indentLevel
∫∫ !
-=
∫∫" $
$num
∫∫% &
;
∫∫& '
EditorGUILayout
ªª 
.
ªª 
Space
ªª !
(
ªª! "
)
ªª" #
;
ªª# $
}
ºº 	
void
ææ $
DoSurfaceLightingPanel
ææ #
(
ææ# $
)
ææ$ %
{
øø 	
	EditorGUI
¿¿ 
.
¿¿ 
indentLevel
¿¿ !
+=
¿¿" $
$num
¿¿% &
;
¿¿& '
DoColor
¡¡ 
(
¡¡ 
$str
¡¡  
,
¡¡  !
$str
¡¡" 2
)
¡¡2 3
;
¡¡3 4
	EditorGUI
¬¬ 
.
¬¬ 
indentLevel
¬¬ !
-=
¬¬" $
$num
¬¬% &
;
¬¬& '
EditorGUILayout
√√ 
.
√√ 
Space
√√ !
(
√√! "
)
√√" #
;
√√# $
}
ƒƒ 	
void
∆∆ 
DoBumpMapPanel
∆∆ 
(
∆∆ 
)
∆∆ 
{
«« 	
	EditorGUI
»» 
.
»» 
indentLevel
»» !
+=
»»" $
$num
»»% &
;
»»& '
DoTexture2D
…… 
(
…… 
$str
…… "
,
……" #
$str
……$ -
)
……- .
;
……. /
DoSlider
   
(
   
$str
    
,
    !
$str
  " (
)
  ( )
;
  ) *
DoSlider
ÀÀ 
(
ÀÀ 
$str
ÀÀ #
,
ÀÀ# $
$str
ÀÀ% .
)
ÀÀ. /
;
ÀÀ/ 0
	EditorGUI
ÃÃ 
.
ÃÃ 
indentLevel
ÃÃ !
-=
ÃÃ" $
$num
ÃÃ% &
;
ÃÃ& '
EditorGUILayout
ÕÕ 
.
ÕÕ 
Space
ÕÕ !
(
ÕÕ! "
)
ÕÕ" #
;
ÕÕ# $
}
ŒŒ 	
void
–– 
DoEnvMapPanel
–– 
(
–– 
)
–– 
{
—— 	
	EditorGUI
““ 
.
““ 
indentLevel
““ !
+=
““" $
$num
““% &
;
““& '
DoColor
”” 
(
”” 
$str
”” '
,
””' (
$str
””) 5
)
””5 6
;
””6 7
DoColor
‘‘ 
(
‘‘ 
$str
‘‘ *
,
‘‘* +
$str
‘‘, ;
)
‘‘; <
;
‘‘< =
	DoCubeMap
’’ 
(
’’ 
$str
’’ 
,
’’ 
$str
’’ (
)
’’( )
;
’’) *
	DoVector3
÷÷ 
(
÷÷ 
$str
÷÷ *
,
÷÷* +
$str
÷÷, 6
)
÷÷6 7
;
÷÷7 8
	EditorGUI
◊◊ 
.
◊◊ 
indentLevel
◊◊ !
-=
◊◊" $
$num
◊◊% &
;
◊◊& '
EditorGUILayout
ÿÿ 
.
ÿÿ 
Space
ÿÿ !
(
ÿÿ! "
)
ÿÿ" #
;
ÿÿ# $
}
ŸŸ 	
void
€€ 
DoGlowPanel
€€ 
(
€€ 
)
€€ 
{
‹‹ 	
	EditorGUI
›› 
.
›› 
indentLevel
›› !
+=
››" $
$num
››% &
;
››& '
DoColor
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ  
,
ﬁﬁ  !
$str
ﬁﬁ" )
)
ﬁﬁ) *
;
ﬁﬁ* +
DoSlider
ﬂﬂ 
(
ﬂﬂ 
$str
ﬂﬂ "
,
ﬂﬂ" #
$str
ﬂﬂ$ ,
)
ﬂﬂ, -
;
ﬂﬂ- .
DoSlider
‡‡ 
(
‡‡ 
$str
‡‡ !
,
‡‡! "
$str
‡‡# *
)
‡‡* +
;
‡‡+ ,
DoSlider
·· 
(
·· 
$str
·· !
,
··! "
$str
··# *
)
··* +
;
··+ ,
DoSlider
‚‚ 
(
‚‚ 
$str
‚‚ !
,
‚‚! "
$str
‚‚# *
)
‚‚* +
;
‚‚+ ,
	EditorGUI
„„ 
.
„„ 
indentLevel
„„ !
-=
„„" $
$num
„„% &
;
„„& '
EditorGUILayout
‰‰ 
.
‰‰ 
Space
‰‰ !
(
‰‰! "
)
‰‰" #
;
‰‰# $
}
ÂÂ 	
void
ÁÁ 
DoDebugPanel
ÁÁ 
(
ÁÁ 
)
ÁÁ 
{
ËË 	
	EditorGUI
ÈÈ 
.
ÈÈ 
indentLevel
ÈÈ !
+=
ÈÈ" $
$num
ÈÈ% &
;
ÈÈ& '
DoTexture2D
ÍÍ 
(
ÍÍ 
$str
ÍÍ "
,
ÍÍ" #
$str
ÍÍ$ 0
)
ÍÍ0 1
;
ÍÍ1 2
DoFloat
ÎÎ 
(
ÎÎ 
$str
ÎÎ $
,
ÎÎ$ %
$str
ÎÎ& 6
)
ÎÎ6 7
;
ÎÎ7 8
DoFloat
ÏÏ 
(
ÏÏ 
$str
ÏÏ #
,
ÏÏ# $
$str
ÏÏ% 4
)
ÏÏ4 5
;
ÏÏ5 6
DoFloat
ÌÌ 
(
ÌÌ 
$str
ÌÌ $
,
ÌÌ$ %
$str
ÌÌ& 6
)
ÌÌ6 7
;
ÌÌ7 8
EditorGUILayout
ÓÓ 
.
ÓÓ 
Space
ÓÓ !
(
ÓÓ! "
)
ÓÓ" #
;
ÓÓ# $
DoFloat
ÔÔ 
(
ÔÔ 
$str
ÔÔ 
,
ÔÔ 
$str
ÔÔ (
)
ÔÔ( )
;
ÔÔ) *
DoFloat
 
(
 
$str
 
,
 
$str
 (
)
( )
;
) *
if
ÚÚ 
(
ÚÚ 

m_Material
ÚÚ 
.
ÚÚ 
HasProperty
ÚÚ &
(
ÚÚ& '
ShaderUtilities
ÚÚ' 6
.
ÚÚ6 7
ID_Sharpness
ÚÚ7 C
)
ÚÚC D
)
ÚÚD E
DoSlider
ÛÛ 
(
ÛÛ 
$str
ÛÛ %
,
ÛÛ% &
$str
ÛÛ' 2
)
ÛÛ2 3
;
ÛÛ3 4
DoSlider
ıı 
(
ıı 
$str
ıı )
,
ıı) *
$str
ıı+ ?
)
ıı? @
;
ıı@ A
EditorGUILayout
ˆˆ 
.
ˆˆ 
Space
ˆˆ !
(
ˆˆ! "
)
ˆˆ" #
;
ˆˆ# $
DoFloat
˜˜ 
(
˜˜ 
$str
˜˜ $
,
˜˜$ %
$str
˜˜& 0
)
˜˜0 1
;
˜˜1 2
DoFloat
¯¯ 
(
¯¯ 
$str
¯¯ $
,
¯¯$ %
$str
¯¯& 0
)
¯¯0 1
;
¯¯1 2
if
˙˙ 
(
˙˙ 

m_Material
˙˙ 
.
˙˙ 
HasProperty
˙˙ &
(
˙˙& '
ShaderUtilities
˙˙' 6
.
˙˙6 7
ID_MaskCoord
˙˙7 C
)
˙˙C D
)
˙˙D E
{
˚˚ 
EditorGUILayout
¸¸ 
.
¸¸  
Space
¸¸  %
(
¸¸% &
)
¸¸& '
;
¸¸' (
s_MaskFeature
˝˝ 
.
˝˝ 
	ReadState
˝˝ '
(
˝˝' (

m_Material
˝˝( 2
)
˝˝2 3
;
˝˝3 4
s_MaskFeature
˛˛ 
.
˛˛ 
DoPopup
˛˛ %
(
˛˛% &
m_Editor
˛˛& .
,
˛˛. /

m_Material
˛˛0 :
)
˛˛: ;
;
˛˛; <
if
ˇˇ 
(
ˇˇ 
s_MaskFeature
ˇˇ !
.
ˇˇ! "
Active
ˇˇ" (
)
ˇˇ( )
{
ÄÄ 
DoMaskSubgroup
ÅÅ "
(
ÅÅ" #
)
ÅÅ# $
;
ÅÅ$ %
}
ÇÇ 
EditorGUILayout
ÑÑ 
.
ÑÑ  
Space
ÑÑ  %
(
ÑÑ% &
)
ÑÑ& '
;
ÑÑ' (
DoVector
ÖÖ 
(
ÖÖ 
$str
ÖÖ $
,
ÖÖ$ %
$str
ÖÖ& 1
,
ÖÖ1 2 
s_LbrtVectorLabels
ÖÖ3 E
)
ÖÖE F
;
ÖÖF G
}
ÜÜ 
else
áá 
if
áá 
(
áá 

m_Material
áá 
.
áá  
HasProperty
áá  +
(
áá+ ,
$str
áá, 6
)
áá6 7
)
áá7 8
{
àà 
DoMaskTexSubgroup
ââ !
(
ââ! "
)
ââ" #
;
ââ# $
}
ää 
else
ãã 
if
ãã 
(
ãã 

m_Material
ãã 
.
ãã  
HasProperty
ãã  +
(
ãã+ ,
ShaderUtilities
ãã, ;
.
ãã; <
ID_MaskSoftnessX
ãã< L
)
ããL M
)
ããM N
{
åå 
EditorGUILayout
çç 
.
çç  
Space
çç  %
(
çç% &
)
çç& '
;
çç' (
DoFloat
éé 
(
éé 
$str
éé (
,
éé( )
$str
éé* 6
)
éé6 7
;
éé7 8
DoFloat
èè 
(
èè 
$str
èè (
,
èè( )
$str
èè* 6
)
èè6 7
;
èè7 8
DoVector
êê 
(
êê 
$str
êê $
,
êê$ %
$str
êê& 1
,
êê1 2 
s_LbrtVectorLabels
êê3 E
)
êêE F
;
êêF G
}
ëë 
if
ìì 
(
ìì 

m_Material
ìì 
.
ìì 
HasProperty
ìì &
(
ìì& '
ShaderUtilities
ìì' 6
.
ìì6 7
ID_StencilID
ìì7 C
)
ììC D
)
ììD E
{
îî 
EditorGUILayout
ïï 
.
ïï  
Space
ïï  %
(
ïï% &
)
ïï& '
;
ïï' (
DoFloat
ññ 
(
ññ 
$str
ññ "
,
ññ" #
$str
ññ$ 0
)
ññ0 1
;
ññ1 2
DoFloat
óó 
(
óó 
$str
óó &
,
óó& '
$str
óó( 6
)
óó6 7
;
óó7 8
}
òò 
EditorGUILayout
öö 
.
öö 
Space
öö !
(
öö! "
)
öö" #
;
öö# $
	EditorGUI
úú 
.
úú 
BeginChangeCheck
úú &
(
úú& '
)
úú' (
;
úú( )
bool
ùù 
	useRatios
ùù 
=
ùù 
EditorGUILayout
ùù ,
.
ùù, -
Toggle
ùù- 3
(
ùù3 4
$str
ùù4 @
,
ùù@ A
!
ùùB C

m_Material
ùùC M
.
ùùM N
IsKeywordEnabled
ùùN ^
(
ùù^ _
$str
ùù_ k
)
ùùk l
)
ùùl m
;
ùùm n
if
ûû 
(
ûû 
	EditorGUI
ûû 
.
ûû 
EndChangeCheck
ûû (
(
ûû( )
)
ûû) *
)
ûû* +
{
üü 
m_Editor
†† 
.
†† (
RegisterPropertyChangeUndo
†† 3
(
††3 4
$str
††4 @
)
††@ A
;
††A B
if
°° 
(
°° 
	useRatios
°° 
)
°° 
{
¢¢ 

m_Material
££ 
.
££ 
DisableKeyword
££ -
(
££- .
$str
££. :
)
££: ;
;
££; <
}
§§ 
else
•• 
{
¶¶ 

m_Material
ßß 
.
ßß 
EnableKeyword
ßß ,
(
ßß, -
$str
ßß- 9
)
ßß9 :
;
ßß: ;
}
®® 
}
©© 
if
´´ 
(
´´ 

m_Material
´´ 
.
´´ 
HasProperty
´´ &
(
´´& '
ShaderUtilities
´´' 6
.
´´6 7 
ShaderTag_CullMode
´´7 I
)
´´I J
)
´´J K
{
¨¨ 
EditorGUILayout
≠≠ 
.
≠≠  
Space
≠≠  %
(
≠≠% &
)
≠≠& '
;
≠≠' (
DoPopup
ÆÆ 
(
ÆÆ 
$str
ÆÆ #
,
ÆÆ# $
$str
ÆÆ% 0
,
ÆÆ0 1!
s_CullingTypeLabels
ÆÆ2 E
)
ÆÆE F
;
ÆÆF G
}
ØØ 
EditorGUILayout
±± 
.
±± 
Space
±± !
(
±±! "
)
±±" #
;
±±# $
	EditorGUI
≥≥ 
.
≥≥  
BeginDisabledGroup
≥≥ (
(
≥≥( )
true
≥≥) -
)
≥≥- .
;
≥≥. /
DoFloat
¥¥ 
(
¥¥ 
$str
¥¥ "
,
¥¥" #
$str
¥¥$ 3
)
¥¥3 4
;
¥¥4 5
DoFloat
µµ 
(
µµ 
$str
µµ "
,
µµ" #
$str
µµ$ 3
)
µµ3 4
;
µµ4 5
DoFloat
∂∂ 
(
∂∂ 
$str
∂∂ "
,
∂∂" #
$str
∂∂$ 3
)
∂∂3 4
;
∂∂4 5
	EditorGUI
∑∑ 
.
∑∑ 
EndDisabledGroup
∑∑ &
(
∑∑& '
)
∑∑' (
;
∑∑( )
	EditorGUI
∏∏ 
.
∏∏ 
indentLevel
∏∏ !
-=
∏∏" $
$num
∏∏% &
;
∏∏& '
EditorGUILayout
ππ 
.
ππ 
Space
ππ !
(
ππ! "
)
ππ" #
;
ππ# $
}
∫∫ 	
void
ºº 
DoMaskSubgroup
ºº 
(
ºº 
)
ºº 
{
ΩΩ 	
DoVector
ææ 
(
ææ 
$str
ææ !
,
ææ! "
$str
ææ# 0
,
ææ0 1 
s_XywhVectorLabels
ææ2 D
)
ææD E
;
ææE F
if
øø 
(
øø 
	Selection
øø 
.
øø 
activeGameObject
øø *
!=
øø+ -
null
øø. 2
)
øø2 3
{
¿¿ 
Renderer
¡¡ 
renderer
¡¡ !
=
¡¡" #
	Selection
¡¡$ -
.
¡¡- .
activeGameObject
¡¡. >
.
¡¡> ?
GetComponent
¡¡? K
<
¡¡K L
Renderer
¡¡L T
>
¡¡T U
(
¡¡U V
)
¡¡V W
;
¡¡W X
if
¬¬ 
(
¬¬ 
renderer
¬¬ 
!=
¬¬ 
null
¬¬  $
)
¬¬$ %
{
√√ 
Rect
ƒƒ 
rect
ƒƒ 
=
ƒƒ 
EditorGUILayout
ƒƒ  /
.
ƒƒ/ 0
GetControlRect
ƒƒ0 >
(
ƒƒ> ?
)
ƒƒ? @
;
ƒƒ@ A
rect
≈≈ 
.
≈≈ 
x
≈≈ 
+=
≈≈ 
EditorGUIUtility
≈≈ .
.
≈≈. /

labelWidth
≈≈/ 9
;
≈≈9 :
rect
∆∆ 
.
∆∆ 
width
∆∆ 
-=
∆∆ !
EditorGUIUtility
∆∆" 2
.
∆∆2 3

labelWidth
∆∆3 =
;
∆∆= >
if
«« 
(
«« 
GUI
«« 
.
«« 
Button
«« "
(
««" #
rect
««# '
,
««' (
$str
««) @
)
««@ A
)
««A B
{
»» 
FindProperty
…… $
(
……$ %
$str
……% 1
,
……1 2
m_Properties
……3 ?
)
……? @
.
……@ A
vectorValue
……A L
=
……M N
new
……O R
Vector4
……S Z
(
……Z [
$num
   
,
   
$num
ÀÀ 
,
ÀÀ 
Mathf
ÃÃ !
.
ÃÃ! "
Round
ÃÃ" '
(
ÃÃ' (
renderer
ÃÃ( 0
.
ÃÃ0 1
bounds
ÃÃ1 7
.
ÃÃ7 8
extents
ÃÃ8 ?
.
ÃÃ? @
x
ÃÃ@ A
*
ÃÃB C
$num
ÃÃD H
)
ÃÃH I
/
ÃÃJ K
$num
ÃÃL P
,
ÃÃP Q
Mathf
ÕÕ !
.
ÕÕ! "
Round
ÕÕ" '
(
ÕÕ' (
renderer
ÕÕ( 0
.
ÕÕ0 1
bounds
ÕÕ1 7
.
ÕÕ7 8
extents
ÕÕ8 ?
.
ÕÕ? @
y
ÕÕ@ A
*
ÕÕB C
$num
ÕÕD H
)
ÕÕH I
/
ÕÕJ K
$num
ÕÕL P
)
ŒŒ 
;
ŒŒ 
}
œœ 
}
–– 
}
—— 
if
”” 
(
”” 
s_MaskFeature
”” 
.
”” 
State
”” #
==
””$ &
$num
””' (
)
””( )
{
‘‘ 
DoFloat
’’ 
(
’’ 
$str
’’ (
,
’’( )
$str
’’* 6
)
’’6 7
;
’’7 8
DoFloat
÷÷ 
(
÷÷ 
$str
÷÷ (
,
÷÷( )
$str
÷÷* 6
)
÷÷6 7
;
÷÷7 8
}
◊◊ 
}
ÿÿ 	
void
⁄⁄ 
DoMaskTexSubgroup
⁄⁄ 
(
⁄⁄ 
)
⁄⁄  
{
€€ 	
EditorGUILayout
‹‹ 
.
‹‹ 
Space
‹‹ !
(
‹‹! "
)
‹‹" #
;
‹‹# $
DoTexture2D
›› 
(
›› 
$str
›› "
,
››" #
$str
››$ 2
)
››2 3
;
››3 4
DoToggle
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ #
,
ﬁﬁ# $
$str
ﬁﬁ% 3
)
ﬁﬁ3 4
;
ﬁﬁ4 5
DoColor
ﬂﬂ 
(
ﬂﬂ 
$str
ﬂﬂ $
,
ﬂﬂ$ %
$str
ﬂﬂ& 2
)
ﬂﬂ2 3
;
ﬂﬂ3 4
DoSlider
‡‡ 
(
‡‡ 
$str
‡‡ (
,
‡‡( )
$str
‡‡* 9
)
‡‡9 :
;
‡‡: ;
DoSlider
·· 
(
·· 
$str
·· '
,
··' (
$str
··) 8
)
··8 9
;
··9 :
DoFloat
‚‚ 
(
‚‚ 
$str
‚‚ $
,
‚‚$ %
$str
‚‚& 2
)
‚‚2 3
;
‚‚3 4
DoFloat
„„ 
(
„„ 
$str
„„ $
,
„„$ %
$str
„„& 2
)
„„2 3
;
„„3 4
DoVector
‰‰ 
(
‰‰ 
$str
‰‰  
,
‰‰  !
$str
‰‰" -
,
‰‰- . 
s_LbrtVectorLabels
‰‰/ A
)
‰‰A B
;
‰‰B C
}
ÂÂ 	
}
ÊÊ 
}ÁÁ 
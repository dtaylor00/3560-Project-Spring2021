›é
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_TextProcessingStack.cs
	namespace 	
TMPro
 
{ 
public

 

struct

 
TMP_FontStyleStack

 $
{ 
public 
byte 
bold 
; 
public 
byte 
italic 
; 
public 
byte 
	underline 
; 
public 
byte 
strikethrough !
;! "
public 
byte 
	highlight 
; 
public 
byte 
superscript 
;  
public 
byte 
	subscript 
; 
public 
byte 
	uppercase 
; 
public 
byte 
	lowercase 
; 
public 
byte 
	smallcaps 
; 
public 
void 
Clear 
( 
) 
{ 	
bold 
= 
$num 
; 
italic 
= 
$num 
; 
	underline 
= 
$num 
; 
strikethrough 
= 
$num 
; 
	highlight   
=   
$num   
;   
superscript!! 
=!! 
$num!! 
;!! 
	subscript"" 
="" 
$num"" 
;"" 
	uppercase## 
=## 
$num## 
;## 
	lowercase$$ 
=$$ 
$num$$ 
;$$ 
	smallcaps%% 
=%% 
$num%% 
;%% 
}&& 	
public(( 
byte(( 
Add(( 
((( 

FontStyles(( "
style((# (
)((( )
{)) 	
switch** 
(** 
style** 
)** 
{++ 
case,, 

FontStyles,, 
.,,  
Bold,,  $
:,,$ %
bold-- 
++-- 
;-- 
return.. 
bold.. 
;..  
case// 

FontStyles// 
.//  
Italic//  &
://& '
italic00 
++00 
;00 
return11 
italic11 !
;11! "
case22 

FontStyles22 
.22  
	Underline22  )
:22) *
	underline33 
++33 
;33  
return44 
	underline44 $
;44$ %
case55 

FontStyles55 
.55  
Strikethrough55  -
:55- .
strikethrough66 !
++66! #
;66# $
return77 
strikethrough77 (
;77( )
case88 

FontStyles88 
.88  
Superscript88  +
:88+ ,
superscript99 
++99 !
;99! "
return:: 
superscript:: &
;::& '
case;; 

FontStyles;; 
.;;  
	Subscript;;  )
:;;) *
	subscript<< 
++<< 
;<<  
return== 
	subscript== $
;==$ %
case>> 

FontStyles>> 
.>>  
	Highlight>>  )
:>>) *
	highlight?? 
++?? 
;??  
return@@ 
	highlight@@ $
;@@$ %
}AA 
returnCC 
$numCC 
;CC 
}DD 	
publicFF 
byteFF 
RemoveFF 
(FF 

FontStylesFF %
styleFF& +
)FF+ ,
{GG 	
switchHH 
(HH 
styleHH 
)HH 
{II 
caseJJ 

FontStylesJJ 
.JJ  
BoldJJ  $
:JJ$ %
ifKK 
(KK 
boldKK 
>KK 
$numKK  
)KK  !
boldLL 
--LL 
;LL 
elseMM 
boldNN 
=NN 
$numNN  
;NN  !
returnOO 
boldOO 
;OO  
casePP 

FontStylesPP 
.PP  
ItalicPP  &
:PP& '
ifQQ 
(QQ 
italicQQ 
>QQ  
$numQQ! "
)QQ" #
italicRR 
--RR  
;RR  !
elseSS 
italicTT 
=TT  
$numTT! "
;TT" #
returnUU 
italicUU !
;UU! "
caseVV 

FontStylesVV 
.VV  
	UnderlineVV  )
:VV) *
ifWW 
(WW 
	underlineWW !
>WW" #
$numWW$ %
)WW% &
	underlineXX !
--XX! #
;XX# $
elseYY 
	underlineZZ !
=ZZ" #
$numZZ$ %
;ZZ% &
return[[ 
	underline[[ $
;[[$ %
case\\ 

FontStyles\\ 
.\\  
Strikethrough\\  -
:\\- .
if]] 
(]] 
strikethrough]] %
>]]& '
$num]]( )
)]]) *
strikethrough^^ %
--^^% '
;^^' (
else__ 
strikethrough`` %
=``& '
$num``( )
;``) *
returnaa 
strikethroughaa (
;aa( )
casebb 

FontStylesbb 
.bb  
	Highlightbb  )
:bb) *
ifcc 
(cc 
	highlightcc !
>cc" #
$numcc$ %
)cc% &
	highlightdd !
--dd! #
;dd# $
elseee 
	highlightff !
=ff" #
$numff$ %
;ff% &
returngg 
	highlightgg $
;gg$ %
casehh 

FontStyleshh 
.hh  
Superscripthh  +
:hh+ ,
ifii 
(ii 
superscriptii #
>ii$ %
$numii& '
)ii' (
superscriptjj #
--jj# %
;jj% &
elsekk 
superscriptll #
=ll$ %
$numll& '
;ll' (
returnmm 
superscriptmm &
;mm& '
casenn 

FontStylesnn 
.nn  
	Subscriptnn  )
:nn) *
ifoo 
(oo 
	subscriptoo !
>oo" #
$numoo$ %
)oo% &
	subscriptpp !
--pp! #
;pp# $
elseqq 
	subscriptrr !
=rr" #
$numrr$ %
;rr% &
returnss 
	subscriptss $
;ss$ %
}tt 
returnvv 
$numvv 
;vv 
}ww 	
}xx 
[ 
DebuggerDisplay 
( 
$str -
)- .
]. /
public
ÄÄ 

struct
ÄÄ %
TMP_TextProcessingStack
ÄÄ )
<
ÄÄ) *
T
ÄÄ* +
>
ÄÄ+ ,
{
ÅÅ 
public
ÇÇ 
T
ÇÇ 
[
ÇÇ 
]
ÇÇ 
	itemStack
ÇÇ 
;
ÇÇ 
public
ÉÉ 
int
ÉÉ 
index
ÉÉ 
;
ÉÉ 
T
ÖÖ 	
m_DefaultItem
ÖÖ
 
;
ÖÖ 
int
ÜÜ 

m_Capacity
ÜÜ 
;
ÜÜ 
int
áá 
m_RolloverSize
áá 
;
áá 
int
àà 
m_Count
àà 
;
àà 
const
ää 
int
ää 
k_DefaultCapacity
ää #
=
ää$ %
$num
ää& '
;
ää' (
public
ëë %
TMP_TextProcessingStack
ëë &
(
ëë& '
T
ëë' (
[
ëë( )
]
ëë) *
stack
ëë+ 0
)
ëë0 1
{
íí 	
	itemStack
ìì 
=
ìì 
stack
ìì 
;
ìì 

m_Capacity
îî 
=
îî 
stack
îî 
.
îî 
Length
îî %
;
îî% &
index
ïï 
=
ïï 
$num
ïï 
;
ïï 
m_RolloverSize
ññ 
=
ññ 
$num
ññ 
;
ññ 
m_DefaultItem
òò 
=
òò 
default
òò #
;
òò# $
m_Count
ôô 
=
ôô 
$num
ôô 
;
ôô 
}
öö 	
public
°° %
TMP_TextProcessingStack
°° &
(
°°& '
int
°°' *
capacity
°°+ 3
)
°°3 4
{
¢¢ 	
	itemStack
££ 
=
££ 
new
££ 
T
££ 
[
££ 
capacity
££ &
]
££& '
;
££' (

m_Capacity
§§ 
=
§§ 
capacity
§§ !
;
§§! "
index
•• 
=
•• 
$num
•• 
;
•• 
m_RolloverSize
¶¶ 
=
¶¶ 
$num
¶¶ 
;
¶¶ 
m_DefaultItem
®® 
=
®® 
default
®® #
;
®®# $
m_Count
©© 
=
©© 
$num
©© 
;
©© 
}
™™ 	
public
≠≠ %
TMP_TextProcessingStack
≠≠ &
(
≠≠& '
int
≠≠' *
capacity
≠≠+ 3
,
≠≠3 4
int
≠≠5 8
rolloverSize
≠≠9 E
)
≠≠E F
{
ÆÆ 	
	itemStack
ØØ 
=
ØØ 
new
ØØ 
T
ØØ 
[
ØØ 
capacity
ØØ &
]
ØØ& '
;
ØØ' (

m_Capacity
∞∞ 
=
∞∞ 
capacity
∞∞ !
;
∞∞! "
index
±± 
=
±± 
$num
±± 
;
±± 
m_RolloverSize
≤≤ 
=
≤≤ 
rolloverSize
≤≤ )
;
≤≤) *
m_DefaultItem
¥¥ 
=
¥¥ 
default
¥¥ #
;
¥¥# $
m_Count
µµ 
=
µµ 
$num
µµ 
;
µµ 
}
∂∂ 	
public
ºº 
int
ºº 
Count
ºº 
{
ΩΩ 	
get
ææ 
{
ææ 
return
ææ 
m_Count
ææ  
;
ææ  !
}
ææ" #
}
øø 	
public
≈≈ 
T
≈≈ 
current
≈≈ 
{
∆∆ 	
get
«« 
{
»» 
if
…… 
(
…… 
index
…… 
>
…… 
$num
…… 
)
…… 
return
   
	itemStack
   $
[
  $ %
index
  % *
-
  + ,
$num
  - .
]
  . /
;
  / 0
return
ÃÃ 
	itemStack
ÃÃ  
[
ÃÃ  !
$num
ÃÃ! "
]
ÃÃ" #
;
ÃÃ# $
}
ÕÕ 
}
ŒŒ 	
public
‘‘ 
int
‘‘ 
rolloverSize
‘‘ 
{
’’ 	
get
÷÷ 
{
÷÷ 
return
÷÷ 
m_RolloverSize
÷÷ '
;
÷÷' (
}
÷÷) *
set
◊◊ 
{
ÿÿ 
m_RolloverSize
ŸŸ 
=
ŸŸ  
value
ŸŸ! &
;
ŸŸ& '
}
›› 
}
ﬁﬁ 	
public
‰‰ 
void
‰‰ 
Clear
‰‰ 
(
‰‰ 
)
‰‰ 
{
ÂÂ 	
index
ÊÊ 
=
ÊÊ 
$num
ÊÊ 
;
ÊÊ 
m_Count
ÁÁ 
=
ÁÁ 
$num
ÁÁ 
;
ÁÁ 
}
ËË 	
public
ÔÔ 
void
ÔÔ 

SetDefault
ÔÔ 
(
ÔÔ 
T
ÔÔ  
item
ÔÔ! %
)
ÔÔ% &
{
 	
if
ÒÒ 
(
ÒÒ 
	itemStack
ÒÒ 
==
ÒÒ 
null
ÒÒ !
)
ÒÒ! "
{
ÚÚ 

m_Capacity
ÛÛ 
=
ÛÛ 
k_DefaultCapacity
ÛÛ .
;
ÛÛ. /
	itemStack
ÙÙ 
=
ÙÙ 
new
ÙÙ 
T
ÙÙ  !
[
ÙÙ! "

m_Capacity
ÙÙ" ,
]
ÙÙ, -
;
ÙÙ- .
m_DefaultItem
ıı 
=
ıı 
default
ıı  '
;
ıı' (
}
ˆˆ 
	itemStack
¯¯ 
[
¯¯ 
$num
¯¯ 
]
¯¯ 
=
¯¯ 
item
¯¯ 
;
¯¯  
index
˘˘ 
=
˘˘ 
$num
˘˘ 
;
˘˘ 
}
˙˙ 	
public
ÅÅ 
void
ÅÅ 
Add
ÅÅ 
(
ÅÅ 
T
ÅÅ 
item
ÅÅ 
)
ÅÅ 
{
ÇÇ 	
if
ÉÉ 
(
ÉÉ 
index
ÉÉ 
<
ÉÉ 
	itemStack
ÉÉ !
.
ÉÉ! "
Length
ÉÉ" (
)
ÉÉ( )
{
ÑÑ 
	itemStack
ÖÖ 
[
ÖÖ 
index
ÖÖ 
]
ÖÖ  
=
ÖÖ! "
item
ÖÖ# '
;
ÖÖ' (
index
ÜÜ 
+=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
}
áá 
}
àà 	
public
èè 
T
èè 
Remove
èè 
(
èè 
)
èè 
{
êê 	
index
ëë 
-=
ëë 
$num
ëë 
;
ëë 
if
ìì 
(
ìì 
index
ìì 
<=
ìì 
$num
ìì 
)
ìì 
{
îî 
index
ïï 
=
ïï 
$num
ïï 
;
ïï 
return
ññ 
	itemStack
ññ  
[
ññ  !
$num
ññ! "
]
ññ" #
;
ññ# $
}
òò 
return
öö 
	itemStack
öö 
[
öö 
index
öö "
-
öö# $
$num
öö% &
]
öö& '
;
öö' (
}
õõ 	
public
ùù 
void
ùù 
Push
ùù 
(
ùù 
T
ùù 
item
ùù 
)
ùù  
{
ûû 	
if
üü 
(
üü 
index
üü 
==
üü 

m_Capacity
üü #
)
üü# $
{
†† 

m_Capacity
°° 
*=
°° 
$num
°° 
;
°°  
if
¢¢ 
(
¢¢ 

m_Capacity
¢¢ 
==
¢¢ !
$num
¢¢" #
)
¢¢# $

m_Capacity
££ 
=
££  
k_DefaultCapacity
££! 2
;
££2 3
Array
•• 
.
•• 
Resize
•• 
(
•• 
ref
••  
	itemStack
••! *
,
••* +

m_Capacity
••, 6
)
••6 7
;
••7 8
}
¶¶ 
	itemStack
®® 
[
®® 
index
®® 
]
®® 
=
®® 
item
®® #
;
®®# $
if
™™ 
(
™™ 
m_RolloverSize
™™ 
==
™™ !
$num
™™" #
)
™™# $
{
´´ 
index
¨¨ 
+=
¨¨ 
$num
¨¨ 
;
¨¨ 
m_Count
≠≠ 
+=
≠≠ 
$num
≠≠ 
;
≠≠ 
}
ÆÆ 
else
ØØ 
{
∞∞ 
index
±± 
=
±± 
(
±± 
index
±± 
+
±±  
$num
±±! "
)
±±" #
%
±±$ %
m_RolloverSize
±±& 4
;
±±4 5
m_Count
≤≤ 
=
≤≤ 
m_Count
≤≤ !
<
≤≤" #
m_RolloverSize
≤≤$ 2
?
≤≤3 4
m_Count
≤≤5 <
+
≤≤= >
$num
≤≤? @
:
≤≤A B
m_RolloverSize
≤≤C Q
;
≤≤Q R
}
≥≥ 
}
µµ 	
public
∑∑ 
T
∑∑ 
Pop
∑∑ 
(
∑∑ 
)
∑∑ 
{
∏∏ 	
if
ππ 
(
ππ 
index
ππ 
==
ππ 
$num
ππ 
&&
ππ 
m_RolloverSize
ππ ,
==
ππ- /
$num
ππ0 1
)
ππ1 2
return
∫∫ 
default
∫∫ 
;
∫∫ 
if
ºº 
(
ºº 
m_RolloverSize
ºº 
==
ºº !
$num
ºº" #
)
ºº# $
index
ΩΩ 
-=
ΩΩ 
$num
ΩΩ 
;
ΩΩ 
else
ææ 
{
øø 
index
¿¿ 
=
¿¿ 
(
¿¿ 
index
¿¿ 
-
¿¿  
$num
¿¿! "
)
¿¿" #
%
¿¿$ %
m_RolloverSize
¿¿& 4
;
¿¿4 5
index
¡¡ 
=
¡¡ 
index
¡¡ 
<
¡¡ 
$num
¡¡  !
?
¡¡" #
index
¡¡$ )
+
¡¡* +
m_RolloverSize
¡¡, :
:
¡¡; <
index
¡¡= B
;
¡¡B C
}
¬¬ 
T
ƒƒ 
item
ƒƒ 
=
ƒƒ 
	itemStack
ƒƒ 
[
ƒƒ 
index
ƒƒ $
]
ƒƒ$ %
;
ƒƒ% &
	itemStack
≈≈ 
[
≈≈ 
index
≈≈ 
]
≈≈ 
=
≈≈ 
m_DefaultItem
≈≈ ,
;
≈≈, -
m_Count
«« 
=
«« 
m_Count
«« 
>
«« 
$num
««  !
?
««" #
m_Count
««$ +
-
««, -
$num
««. /
:
««0 1
$num
««2 3
;
««3 4
return
…… 
item
…… 
;
…… 
}
   	
public
–– 
T
–– 
Peek
–– 
(
–– 
)
–– 
{
—— 	
if
““ 
(
““ 
index
““ 
==
““ 
$num
““ 
)
““ 
return
”” 
m_DefaultItem
”” $
;
””$ %
return
’’ 
	itemStack
’’ 
[
’’ 
index
’’ "
-
’’# $
$num
’’% &
]
’’& '
;
’’' (
}
÷÷ 	
public
›› 
T
›› 
CurrentItem
›› 
(
›› 
)
›› 
{
ﬁﬁ 	
if
ﬂﬂ 
(
ﬂﬂ 
index
ﬂﬂ 
>
ﬂﬂ 
$num
ﬂﬂ 
)
ﬂﬂ 
return
‡‡ 
	itemStack
‡‡  
[
‡‡  !
index
‡‡! &
-
‡‡' (
$num
‡‡) *
]
‡‡* +
;
‡‡+ ,
return
‚‚ 
	itemStack
‚‚ 
[
‚‚ 
$num
‚‚ 
]
‚‚ 
;
‚‚  
}
„„ 	
public
ÍÍ 
T
ÍÍ 
PreviousItem
ÍÍ 
(
ÍÍ 
)
ÍÍ 
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ 
index
ÏÏ 
>
ÏÏ 
$num
ÏÏ 
)
ÏÏ 
return
ÌÌ 
	itemStack
ÌÌ  
[
ÌÌ  !
index
ÌÌ! &
-
ÌÌ' (
$num
ÌÌ) *
]
ÌÌ* +
;
ÌÌ+ ,
return
ÔÔ 
	itemStack
ÔÔ 
[
ÔÔ 
$num
ÔÔ 
]
ÔÔ 
;
ÔÔ  
}
 	
}
ÒÒ 
}ÚÚ á•
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_TextUtilities.cs
	namespace 	
TMPro
 
{ 
public 

enum 
CaretPosition 
{ 
None  $
,$ %
Left& *
,* +
Right, 1
}2 3
public 

struct 
	CaretInfo 
{ 
public 
int 
index 
; 
public 
CaretPosition 
position %
;% &
public 
	CaretInfo 
( 
int 
index "
," #
CaretPosition$ 1
position2 :
): ;
{ 	
this 
. 
index 
= 
index 
; 
this 
. 
position 
= 
position $
;$ %
} 	
} 
public 

static 
class 
TMP_TextUtilities )
{ 
private 
static 
Vector3 
[ 
]  
m_rectWorldCorners! 3
=4 5
new6 9
Vector3: A
[A B
$numB C
]C D
;D E
publicGG 
staticGG 
intGG &
GetCursorIndexFromPositionGG 4
(GG4 5
TMP_TextGG5 =
textComponentGG> K
,GGK L
Vector3GGM T
positionGGU ]
,GG] ^
CameraGG_ e
cameraGGf l
)GGl m
{HH 	
intII 
indexII 
=II 
TMP_TextUtilitiesII )
.II) * 
FindNearestCharacterII* >
(II> ?
textComponentII? L
,IIL M
positionIIN V
,IIV W
cameraIIX ^
,II^ _
falseII` e
)IIe f
;IIf g
RectTransformKK 
rectTransformKK '
=KK( )
textComponentKK* 7
.KK7 8
rectTransformKK8 E
;KKE F.
"ScreenPointToWorldPointInRectangleNN .
(NN. /
rectTransformNN/ <
,NN< =
positionNN> F
,NNF G
cameraNNH N
,NNN O
outNNP S
positionNNT \
)NN\ ]
;NN] ^
TMP_CharacterInfoPP 
cInfoPP #
=PP$ %
textComponentPP& 3
.PP3 4
textInfoPP4 <
.PP< =
characterInfoPP= J
[PPJ K
indexPPK P
]PPP Q
;PPQ R
Vector3SS 
blSS 
=SS 
rectTransformSS &
.SS& '
TransformPointSS' 5
(SS5 6
cInfoSS6 ;
.SS; <

bottomLeftSS< F
)SSF G
;SSG H
Vector3TT 
trTT 
=TT 
rectTransformTT &
.TT& '
TransformPointTT' 5
(TT5 6
cInfoTT6 ;
.TT; <
topRightTT< D
)TTD E
;TTE F
floatVV 
insertPositionVV  
=VV! "
(VV# $
positionVV$ ,
.VV, -
xVV- .
-VV/ 0
blVV1 3
.VV3 4
xVV4 5
)VV5 6
/VV7 8
(VV9 :
trVV: <
.VV< =
xVV= >
-VV? @
blVVA C
.VVC D
xVVD E
)VVE F
;VVF G
ifXX 
(XX 
insertPositionXX 
<XX  
$numXX! %
)XX% &
returnYY 
indexYY 
;YY 
elseZZ 
return[[ 
index[[ 
+[[ 
$num[[  
;[[  !
}]] 	
public
éé 
static
éé 
int
éé (
GetCursorIndexFromPosition
éé 4
(
éé4 5
TMP_Text
éé5 =
textComponent
éé> K
,
ééK L
Vector3
ééM T
position
ééU ]
,
éé] ^
Camera
éé_ e
camera
ééf l
,
éél m
out
één q
CaretPosition
éér 
cursorééÄ Ü
)ééÜ á
{
èè 	
int
êê 
line
êê 
=
êê 
TMP_TextUtilities
êê (
.
êê( )
FindNearestLine
êê) 8
(
êê8 9
textComponent
êê9 F
,
êêF G
position
êêH P
,
êêP Q
camera
êêR X
)
êêX Y
;
êêY Z
int
íí 
index
íí 
=
íí (
FindNearestCharacterOnLine
íí 2
(
íí2 3
textComponent
íí3 @
,
íí@ A
position
ííB J
,
ííJ K
line
ííL P
,
ííP Q
camera
ííR X
,
ííX Y
false
ííZ _
)
íí_ `
;
íí` a
if
ïï 
(
ïï 
textComponent
ïï 
.
ïï 
textInfo
ïï &
.
ïï& '
lineInfo
ïï' /
[
ïï/ 0
line
ïï0 4
]
ïï4 5
.
ïï5 6
characterCount
ïï6 D
==
ïïE G
$num
ïïH I
)
ïïI J
{
ññ 
cursor
óó 
=
óó 
CaretPosition
óó &
.
óó& '
Left
óó' +
;
óó+ ,
return
òò 
index
òò 
;
òò 
}
ôô 
RectTransform
õõ 
rectTransform
õõ '
=
õõ( )
textComponent
õõ* 7
.
õõ7 8
rectTransform
õõ8 E
;
õõE F0
"ScreenPointToWorldPointInRectangle
ûû .
(
ûû. /
rectTransform
ûû/ <
,
ûû< =
position
ûû> F
,
ûûF G
camera
ûûH N
,
ûûN O
out
ûûP S
position
ûûT \
)
ûû\ ]
;
ûû] ^
TMP_CharacterInfo
†† 
cInfo
†† #
=
††$ %
textComponent
††& 3
.
††3 4
textInfo
††4 <
.
††< =
characterInfo
††= J
[
††J K
index
††K P
]
††P Q
;
††Q R
Vector3
££ 
bl
££ 
=
££ 
rectTransform
££ &
.
££& '
TransformPoint
££' 5
(
££5 6
cInfo
££6 ;
.
££; <

bottomLeft
££< F
)
££F G
;
££G H
Vector3
§§ 
tr
§§ 
=
§§ 
rectTransform
§§ &
.
§§& '
TransformPoint
§§' 5
(
§§5 6
cInfo
§§6 ;
.
§§; <
topRight
§§< D
)
§§D E
;
§§E F
float
¶¶ 
insertPosition
¶¶  
=
¶¶! "
(
¶¶# $
position
¶¶$ ,
.
¶¶, -
x
¶¶- .
-
¶¶/ 0
bl
¶¶1 3
.
¶¶3 4
x
¶¶4 5
)
¶¶5 6
/
¶¶7 8
(
¶¶9 :
tr
¶¶: <
.
¶¶< =
x
¶¶= >
-
¶¶? @
bl
¶¶A C
.
¶¶C D
x
¶¶D E
)
¶¶E F
;
¶¶F G
if
®® 
(
®® 
insertPosition
®® 
<
®®  
$num
®®! %
)
®®% &
{
©© 
cursor
™™ 
=
™™ 
CaretPosition
™™ &
.
™™& '
Left
™™' +
;
™™+ ,
return
´´ 
index
´´ 
;
´´ 
}
¨¨ 
else
≠≠ 
{
ÆÆ 
cursor
ØØ 
=
ØØ 
CaretPosition
ØØ &
.
ØØ& '
Right
ØØ' ,
;
ØØ, -
return
∞∞ 
index
∞∞ 
;
∞∞ 
}
±± 
}
≤≤ 	
public
ºº 
static
ºº 
int
ºº 
FindNearestLine
ºº )
(
ºº) *
TMP_Text
ºº* 2
text
ºº3 7
,
ºº7 8
Vector3
ºº9 @
position
ººA I
,
ººI J
Camera
ººK Q
camera
ººR X
)
ººX Y
{
ΩΩ 	
RectTransform
ææ 
rectTransform
ææ '
=
ææ( )
text
ææ* .
.
ææ. /
rectTransform
ææ/ <
;
ææ< =
float
¿¿ 
distance
¿¿ 
=
¿¿ 
Mathf
¿¿ "
.
¿¿" #
Infinity
¿¿# +
;
¿¿+ ,
int
¡¡ 
closest
¡¡ 
=
¡¡ 
-
¡¡ 
$num
¡¡ 
;
¡¡ 0
"ScreenPointToWorldPointInRectangle
ƒƒ .
(
ƒƒ. /
rectTransform
ƒƒ/ <
,
ƒƒ< =
position
ƒƒ> F
,
ƒƒF G
camera
ƒƒH N
,
ƒƒN O
out
ƒƒP S
position
ƒƒT \
)
ƒƒ\ ]
;
ƒƒ] ^
for
∆∆ 
(
∆∆ 
int
∆∆ 
i
∆∆ 
=
∆∆ 
$num
∆∆ 
;
∆∆ 
i
∆∆ 
<
∆∆ 
text
∆∆  $
.
∆∆$ %
textInfo
∆∆% -
.
∆∆- .
	lineCount
∆∆. 7
;
∆∆7 8
i
∆∆9 :
++
∆∆: <
)
∆∆< =
{
«« 
TMP_LineInfo
»» 
lineInfo
»» %
=
»»& '
text
»»( ,
.
»», -
textInfo
»»- 5
.
»»5 6
lineInfo
»»6 >
[
»»> ?
i
»»? @
]
»»@ A
;
»»A B
float
   
ascender
   
=
    
rectTransform
  ! .
.
  . /
TransformPoint
  / =
(
  = >
new
  > A
Vector3
  B I
(
  I J
$num
  J K
,
  K L
lineInfo
  M U
.
  U V
ascender
  V ^
,
  ^ _
$num
  ` a
)
  a b
)
  b c
.
  c d
y
  d e
;
  e f
float
ÀÀ 
	descender
ÀÀ 
=
ÀÀ  !
rectTransform
ÀÀ" /
.
ÀÀ/ 0
TransformPoint
ÀÀ0 >
(
ÀÀ> ?
new
ÀÀ? B
Vector3
ÀÀC J
(
ÀÀJ K
$num
ÀÀK L
,
ÀÀL M
lineInfo
ÀÀN V
.
ÀÀV W
	descender
ÀÀW `
,
ÀÀ` a
$num
ÀÀb c
)
ÀÀc d
)
ÀÀd e
.
ÀÀe f
y
ÀÀf g
;
ÀÀg h
if
ÕÕ 
(
ÕÕ 
ascender
ÕÕ 
>
ÕÕ 
position
ÕÕ '
.
ÕÕ' (
y
ÕÕ( )
&&
ÕÕ* ,
	descender
ÕÕ- 6
<
ÕÕ7 8
position
ÕÕ9 A
.
ÕÕA B
y
ÕÕB C
)
ÕÕC D
{
ŒŒ 
return
–– 
i
–– 
;
–– 
}
—— 
float
”” 
d0
”” 
=
”” 
Mathf
””  
.
””  !
Abs
””! $
(
””$ %
ascender
””% -
-
””. /
position
””0 8
.
””8 9
y
””9 :
)
””: ;
;
””; <
float
‘‘ 
d1
‘‘ 
=
‘‘ 
Mathf
‘‘  
.
‘‘  !
Abs
‘‘! $
(
‘‘$ %
	descender
‘‘% .
-
‘‘/ 0
position
‘‘1 9
.
‘‘9 :
y
‘‘: ;
)
‘‘; <
;
‘‘< =
float
÷÷ 
d
÷÷ 
=
÷÷ 
Mathf
÷÷ 
.
÷÷  
Min
÷÷  #
(
÷÷# $
d0
÷÷$ &
,
÷÷& '
d1
÷÷( *
)
÷÷* +
;
÷÷+ ,
if
◊◊ 
(
◊◊ 
d
◊◊ 
<
◊◊ 
distance
◊◊  
)
◊◊  !
{
ÿÿ 
distance
ŸŸ 
=
ŸŸ 
d
ŸŸ  
;
ŸŸ  !
closest
⁄⁄ 
=
⁄⁄ 
i
⁄⁄ 
;
⁄⁄  
}
€€ 
}
‹‹ 
return
ﬂﬂ 
closest
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
public
ÎÎ 
static
ÎÎ 
int
ÎÎ (
FindNearestCharacterOnLine
ÎÎ 4
(
ÎÎ4 5
TMP_Text
ÎÎ5 =
text
ÎÎ> B
,
ÎÎB C
Vector3
ÎÎD K
position
ÎÎL T
,
ÎÎT U
int
ÎÎV Y
line
ÎÎZ ^
,
ÎÎ^ _
Camera
ÎÎ` f
camera
ÎÎg m
,
ÎÎm n
bool
ÎÎo s
visibleOnly
ÎÎt 
)ÎÎ Ä
{
ÏÏ 	
RectTransform
ÌÌ 
rectTransform
ÌÌ '
=
ÌÌ( )
text
ÌÌ* .
.
ÌÌ. /
rectTransform
ÌÌ/ <
;
ÌÌ< =0
"ScreenPointToWorldPointInRectangle
 .
(
. /
rectTransform
/ <
,
< =
position
> F
,
F G
camera
H N
,
N O
out
P S
position
T \
)
\ ]
;
] ^
int
ÚÚ 
firstCharacter
ÚÚ 
=
ÚÚ  
text
ÚÚ! %
.
ÚÚ% &
textInfo
ÚÚ& .
.
ÚÚ. /
lineInfo
ÚÚ/ 7
[
ÚÚ7 8
line
ÚÚ8 <
]
ÚÚ< =
.
ÚÚ= >!
firstCharacterIndex
ÚÚ> Q
;
ÚÚQ R
int
ÛÛ 
lastCharacter
ÛÛ 
=
ÛÛ 
text
ÛÛ  $
.
ÛÛ$ %
textInfo
ÛÛ% -
.
ÛÛ- .
lineInfo
ÛÛ. 6
[
ÛÛ6 7
line
ÛÛ7 ;
]
ÛÛ; <
.
ÛÛ< = 
lastCharacterIndex
ÛÛ= O
;
ÛÛO P
float
ıı 
distanceSqr
ıı 
=
ıı 
Mathf
ıı  %
.
ıı% &
Infinity
ıı& .
;
ıı. /
int
ˆˆ 
closest
ˆˆ 
=
ˆˆ 
lastCharacter
ˆˆ '
;
ˆˆ' (
for
¯¯ 
(
¯¯ 
int
¯¯ 
i
¯¯ 
=
¯¯ 
firstCharacter
¯¯ '
;
¯¯' (
i
¯¯) *
<
¯¯+ ,
lastCharacter
¯¯- :
;
¯¯: ;
i
¯¯< =
++
¯¯= ?
)
¯¯? @
{
˘˘ 
TMP_CharacterInfo
˚˚ !
cInfo
˚˚" '
=
˚˚( )
text
˚˚* .
.
˚˚. /
textInfo
˚˚/ 7
.
˚˚7 8
characterInfo
˚˚8 E
[
˚˚E F
i
˚˚F G
]
˚˚G H
;
˚˚H I
if
¸¸ 
(
¸¸ 
visibleOnly
¸¸ 
&&
¸¸  "
!
¸¸# $
cInfo
¸¸$ )
.
¸¸) *
	isVisible
¸¸* 3
)
¸¸3 4
continue
¸¸5 =
;
¸¸= >
Vector3
ˇˇ 
bl
ˇˇ 
=
ˇˇ 
rectTransform
ˇˇ *
.
ˇˇ* +
TransformPoint
ˇˇ+ 9
(
ˇˇ9 :
cInfo
ˇˇ: ?
.
ˇˇ? @

bottomLeft
ˇˇ@ J
)
ˇˇJ K
;
ˇˇK L
Vector3
ÄÄ 
tl
ÄÄ 
=
ÄÄ 
rectTransform
ÄÄ *
.
ÄÄ* +
TransformPoint
ÄÄ+ 9
(
ÄÄ9 :
new
ÄÄ: =
Vector3
ÄÄ> E
(
ÄÄE F
cInfo
ÄÄF K
.
ÄÄK L

bottomLeft
ÄÄL V
.
ÄÄV W
x
ÄÄW X
,
ÄÄX Y
cInfo
ÄÄZ _
.
ÄÄ_ `
topRight
ÄÄ` h
.
ÄÄh i
y
ÄÄi j
,
ÄÄj k
$num
ÄÄl m
)
ÄÄm n
)
ÄÄn o
;
ÄÄo p
Vector3
ÅÅ 
tr
ÅÅ 
=
ÅÅ 
rectTransform
ÅÅ *
.
ÅÅ* +
TransformPoint
ÅÅ+ 9
(
ÅÅ9 :
cInfo
ÅÅ: ?
.
ÅÅ? @
topRight
ÅÅ@ H
)
ÅÅH I
;
ÅÅI J
Vector3
ÇÇ 
br
ÇÇ 
=
ÇÇ 
rectTransform
ÇÇ *
.
ÇÇ* +
TransformPoint
ÇÇ+ 9
(
ÇÇ9 :
new
ÇÇ: =
Vector3
ÇÇ> E
(
ÇÇE F
cInfo
ÇÇF K
.
ÇÇK L
topRight
ÇÇL T
.
ÇÇT U
x
ÇÇU V
,
ÇÇV W
cInfo
ÇÇX ]
.
ÇÇ] ^

bottomLeft
ÇÇ^ h
.
ÇÇh i
y
ÇÇi j
,
ÇÇj k
$num
ÇÇl m
)
ÇÇm n
)
ÇÇn o
;
ÇÇo p
if
ÑÑ 
(
ÑÑ %
PointIntersectRectangle
ÑÑ +
(
ÑÑ+ ,
position
ÑÑ, 4
,
ÑÑ4 5
bl
ÑÑ6 8
,
ÑÑ8 9
tl
ÑÑ: <
,
ÑÑ< =
tr
ÑÑ> @
,
ÑÑ@ A
br
ÑÑB D
)
ÑÑD E
)
ÑÑE F
{
ÖÖ 
closest
ÜÜ 
=
ÜÜ 
i
ÜÜ 
;
ÜÜ  
break
áá 
;
áá 
}
àà 
float
ãã 
dbl
ãã 
=
ãã 
DistanceToLine
ãã *
(
ãã* +
bl
ãã+ -
,
ãã- .
tl
ãã/ 1
,
ãã1 2
position
ãã3 ;
)
ãã; <
;
ãã< =
float
åå 
dtl
åå 
=
åå 
DistanceToLine
åå *
(
åå* +
tl
åå+ -
,
åå- .
tr
åå/ 1
,
åå1 2
position
åå3 ;
)
åå; <
;
åå< =
float
çç 
dtr
çç 
=
çç 
DistanceToLine
çç *
(
çç* +
tr
çç+ -
,
çç- .
br
çç/ 1
,
çç1 2
position
çç3 ;
)
çç; <
;
çç< =
float
éé 
dbr
éé 
=
éé 
DistanceToLine
éé *
(
éé* +
br
éé+ -
,
éé- .
bl
éé/ 1
,
éé1 2
position
éé3 ;
)
éé; <
;
éé< =
float
êê 
d
êê 
=
êê 
dbl
êê 
<
êê 
dtl
êê  #
?
êê$ %
dbl
êê& )
:
êê* +
dtl
êê, /
;
êê/ 0
d
ëë 
=
ëë 
d
ëë 
<
ëë 
dtr
ëë 
?
ëë 
d
ëë 
:
ëë  !
dtr
ëë" %
;
ëë% &
d
íí 
=
íí 
d
íí 
<
íí 
dbr
íí 
?
íí 
d
íí 
:
íí  !
dbr
íí" %
;
íí% &
if
îî 
(
îî 
distanceSqr
îî 
>
îî  !
d
îî" #
)
îî# $
{
ïï 
distanceSqr
ññ 
=
ññ  !
d
ññ" #
;
ññ# $
closest
óó 
=
óó 
i
óó 
;
óó  
}
òò 
}
ôô 
return
öö 
closest
öö 
;
öö 
}
õõ 	
public
•• 
static
•• 
bool
•• )
IsIntersectingRectTransform
•• 6
(
••6 7
RectTransform
••7 D
rectTransform
••E R
,
••R S
Vector3
••T [
position
••\ d
,
••d e
Camera
••f l
camera
••m s
)
••s t
{
¶¶ 	0
"ScreenPointToWorldPointInRectangle
®® .
(
®®. /
rectTransform
®®/ <
,
®®< =
position
®®> F
,
®®F G
camera
®®H N
,
®®N O
out
®®P S
position
®®T \
)
®®\ ]
;
®®] ^
rectTransform
™™ 
.
™™ 
GetWorldCorners
™™ )
(
™™) * 
m_rectWorldCorners
™™* <
)
™™< =
;
™™= >
if
¨¨ 
(
¨¨ %
PointIntersectRectangle
¨¨ '
(
¨¨' (
position
¨¨( 0
,
¨¨0 1 
m_rectWorldCorners
¨¨2 D
[
¨¨D E
$num
¨¨E F
]
¨¨F G
,
¨¨G H 
m_rectWorldCorners
¨¨I [
[
¨¨[ \
$num
¨¨\ ]
]
¨¨] ^
,
¨¨^ _ 
m_rectWorldCorners
¨¨` r
[
¨¨r s
$num
¨¨s t
]
¨¨t u
,
¨¨u v!
m_rectWorldCorners¨¨w â
[¨¨â ä
$num¨¨ä ã
]¨¨ã å
)¨¨å ç
)¨¨ç é
{
≠≠ 
return
ÆÆ 
true
ÆÆ 
;
ÆÆ 
}
ØØ 
return
±± 
false
±± 
;
±± 
}
≤≤ 	
public
øø 
static
øø 
int
øø '
FindIntersectingCharacter
øø 3
(
øø3 4
TMP_Text
øø4 <
text
øø= A
,
øøA B
Vector3
øøC J
position
øøK S
,
øøS T
Camera
øøU [
camera
øø\ b
,
øøb c
bool
øød h
visibleOnly
øøi t
)
øøt u
{
¿¿ 	
RectTransform
¡¡ 
rectTransform
¡¡ '
=
¡¡( )
text
¡¡* .
.
¡¡. /
rectTransform
¡¡/ <
;
¡¡< =0
"ScreenPointToWorldPointInRectangle
ƒƒ .
(
ƒƒ. /
rectTransform
ƒƒ/ <
,
ƒƒ< =
position
ƒƒ> F
,
ƒƒF G
camera
ƒƒH N
,
ƒƒN O
out
ƒƒP S
position
ƒƒT \
)
ƒƒ\ ]
;
ƒƒ] ^
for
∆∆ 
(
∆∆ 
int
∆∆ 
i
∆∆ 
=
∆∆ 
$num
∆∆ 
;
∆∆ 
i
∆∆ 
<
∆∆ 
text
∆∆  $
.
∆∆$ %
textInfo
∆∆% -
.
∆∆- .
characterCount
∆∆. <
;
∆∆< =
i
∆∆> ?
++
∆∆? A
)
∆∆A B
{
«« 
TMP_CharacterInfo
…… !
cInfo
……" '
=
……( )
text
……* .
.
……. /
textInfo
……/ 7
.
……7 8
characterInfo
……8 E
[
……E F
i
……F G
]
……G H
;
……H I
if
   
(
   
visibleOnly
   
&&
    "
!
  # $
cInfo
  $ )
.
  ) *
	isVisible
  * 3
)
  3 4
continue
  5 =
;
  = >
Vector3
ÕÕ 
bl
ÕÕ 
=
ÕÕ 
rectTransform
ÕÕ *
.
ÕÕ* +
TransformPoint
ÕÕ+ 9
(
ÕÕ9 :
cInfo
ÕÕ: ?
.
ÕÕ? @

bottomLeft
ÕÕ@ J
)
ÕÕJ K
;
ÕÕK L
Vector3
ŒŒ 
tl
ŒŒ 
=
ŒŒ 
rectTransform
ŒŒ *
.
ŒŒ* +
TransformPoint
ŒŒ+ 9
(
ŒŒ9 :
new
ŒŒ: =
Vector3
ŒŒ> E
(
ŒŒE F
cInfo
ŒŒF K
.
ŒŒK L

bottomLeft
ŒŒL V
.
ŒŒV W
x
ŒŒW X
,
ŒŒX Y
cInfo
ŒŒZ _
.
ŒŒ_ `
topRight
ŒŒ` h
.
ŒŒh i
y
ŒŒi j
,
ŒŒj k
$num
ŒŒl m
)
ŒŒm n
)
ŒŒn o
;
ŒŒo p
Vector3
œœ 
tr
œœ 
=
œœ 
rectTransform
œœ *
.
œœ* +
TransformPoint
œœ+ 9
(
œœ9 :
cInfo
œœ: ?
.
œœ? @
topRight
œœ@ H
)
œœH I
;
œœI J
Vector3
–– 
br
–– 
=
–– 
rectTransform
–– *
.
––* +
TransformPoint
––+ 9
(
––9 :
new
––: =
Vector3
––> E
(
––E F
cInfo
––F K
.
––K L
topRight
––L T
.
––T U
x
––U V
,
––V W
cInfo
––X ]
.
––] ^

bottomLeft
––^ h
.
––h i
y
––i j
,
––j k
$num
––l m
)
––m n
)
––n o
;
––o p
if
““ 
(
““ %
PointIntersectRectangle
““ +
(
““+ ,
position
““, 4
,
““4 5
bl
““6 8
,
““8 9
tl
““: <
,
““< =
tr
““> @
,
““@ A
br
““B D
)
““D E
)
““E F
return
”” 
i
”” 
;
”” 
}
’’ 
return
÷÷ 
-
÷÷ 
$num
÷÷ 
;
÷÷ 
}
◊◊ 	
public
áá 
static
áá 
int
áá "
FindNearestCharacter
áá .
(
áá. /
TMP_Text
áá/ 7
text
áá8 <
,
áá< =
Vector3
áá> E
position
ááF N
,
ááN O
Camera
ááP V
camera
ááW ]
,
áá] ^
bool
áá_ c
visibleOnly
áád o
)
ááo p
{
àà 	
RectTransform
ââ 
rectTransform
ââ '
=
ââ( )
text
ââ* .
.
ââ. /
rectTransform
ââ/ <
;
ââ< =
float
ãã 
distanceSqr
ãã 
=
ãã 
Mathf
ãã  %
.
ãã% &
Infinity
ãã& .
;
ãã. /
int
åå 
closest
åå 
=
åå 
$num
åå 
;
åå 0
"ScreenPointToWorldPointInRectangle
èè .
(
èè. /
rectTransform
èè/ <
,
èè< =
position
èè> F
,
èèF G
camera
èèH N
,
èèN O
out
èèP S
position
èèT \
)
èè\ ]
;
èè] ^
for
ëë 
(
ëë 
int
ëë 
i
ëë 
=
ëë 
$num
ëë 
;
ëë 
i
ëë 
<
ëë 
text
ëë  $
.
ëë$ %
textInfo
ëë% -
.
ëë- .
characterCount
ëë. <
;
ëë< =
i
ëë> ?
++
ëë? A
)
ëëA B
{
íí 
TMP_CharacterInfo
îî !
cInfo
îî" '
=
îî( )
text
îî* .
.
îî. /
textInfo
îî/ 7
.
îî7 8
characterInfo
îî8 E
[
îîE F
i
îîF G
]
îîG H
;
îîH I
if
ïï 
(
ïï 
visibleOnly
ïï 
&&
ïï  "
!
ïï# $
cInfo
ïï$ )
.
ïï) *
	isVisible
ïï* 3
)
ïï3 4
continue
ïï5 =
;
ïï= >
Vector3
òò 
bl
òò 
=
òò 
rectTransform
òò *
.
òò* +
TransformPoint
òò+ 9
(
òò9 :
cInfo
òò: ?
.
òò? @

bottomLeft
òò@ J
)
òòJ K
;
òòK L
Vector3
ôô 
tl
ôô 
=
ôô 
rectTransform
ôô *
.
ôô* +
TransformPoint
ôô+ 9
(
ôô9 :
new
ôô: =
Vector3
ôô> E
(
ôôE F
cInfo
ôôF K
.
ôôK L

bottomLeft
ôôL V
.
ôôV W
x
ôôW X
,
ôôX Y
cInfo
ôôZ _
.
ôô_ `
topRight
ôô` h
.
ôôh i
y
ôôi j
,
ôôj k
$num
ôôl m
)
ôôm n
)
ôôn o
;
ôôo p
Vector3
öö 
tr
öö 
=
öö 
rectTransform
öö *
.
öö* +
TransformPoint
öö+ 9
(
öö9 :
cInfo
öö: ?
.
öö? @
topRight
öö@ H
)
ööH I
;
ööI J
Vector3
õõ 
br
õõ 
=
õõ 
rectTransform
õõ *
.
õõ* +
TransformPoint
õõ+ 9
(
õõ9 :
new
õõ: =
Vector3
õõ> E
(
õõE F
cInfo
õõF K
.
õõK L
topRight
õõL T
.
õõT U
x
õõU V
,
õõV W
cInfo
õõX ]
.
õõ] ^

bottomLeft
õõ^ h
.
õõh i
y
õõi j
,
õõj k
$num
õõl m
)
õõm n
)
õõn o
;
õõo p
if
ùù 
(
ùù %
PointIntersectRectangle
ùù +
(
ùù+ ,
position
ùù, 4
,
ùù4 5
bl
ùù6 8
,
ùù8 9
tl
ùù: <
,
ùù< =
tr
ùù> @
,
ùù@ A
br
ùùB D
)
ùùD E
)
ùùE F
return
ûû 
i
ûû 
;
ûû 
float
°° 
dbl
°° 
=
°° 
DistanceToLine
°° *
(
°°* +
bl
°°+ -
,
°°- .
tl
°°/ 1
,
°°1 2
position
°°3 ;
)
°°; <
;
°°< =
float
¢¢ 
dtl
¢¢ 
=
¢¢ 
DistanceToLine
¢¢ *
(
¢¢* +
tl
¢¢+ -
,
¢¢- .
tr
¢¢/ 1
,
¢¢1 2
position
¢¢3 ;
)
¢¢; <
;
¢¢< =
float
££ 
dtr
££ 
=
££ 
DistanceToLine
££ *
(
££* +
tr
££+ -
,
££- .
br
££/ 1
,
££1 2
position
££3 ;
)
££; <
;
££< =
float
§§ 
dbr
§§ 
=
§§ 
DistanceToLine
§§ *
(
§§* +
br
§§+ -
,
§§- .
bl
§§/ 1
,
§§1 2
position
§§3 ;
)
§§; <
;
§§< =
float
¶¶ 
d
¶¶ 
=
¶¶ 
dbl
¶¶ 
<
¶¶ 
dtl
¶¶  #
?
¶¶$ %
dbl
¶¶& )
:
¶¶* +
dtl
¶¶, /
;
¶¶/ 0
d
ßß 
=
ßß 
d
ßß 
<
ßß 
dtr
ßß 
?
ßß 
d
ßß 
:
ßß  !
dtr
ßß" %
;
ßß% &
d
®® 
=
®® 
d
®® 
<
®® 
dbr
®® 
?
®® 
d
®® 
:
®®  !
dbr
®®" %
;
®®% &
if
™™ 
(
™™ 
distanceSqr
™™ 
>
™™  !
d
™™" #
)
™™# $
{
´´ 
distanceSqr
¨¨ 
=
¨¨  !
d
¨¨" #
;
¨¨# $
closest
≠≠ 
=
≠≠ 
i
≠≠ 
;
≠≠  
}
ÆÆ 
}
ØØ 
return
±± 
closest
±± 
;
±± 
}
≤≤ 	
public
ØØ 
static
ØØ 
int
ØØ "
FindIntersectingWord
ØØ .
(
ØØ. /
TMP_Text
ØØ/ 7
text
ØØ8 <
,
ØØ< =
Vector3
ØØ> E
position
ØØF N
,
ØØN O
Camera
ØØP V
camera
ØØW ]
)
ØØ] ^
{
∞∞ 	
RectTransform
±± 
rectTransform
±± '
=
±±( )
text
±±* .
.
±±. /
rectTransform
±±/ <
;
±±< =0
"ScreenPointToWorldPointInRectangle
¥¥ .
(
¥¥. /
rectTransform
¥¥/ <
,
¥¥< =
position
¥¥> F
,
¥¥F G
camera
¥¥H N
,
¥¥N O
out
¥¥P S
position
¥¥T \
)
¥¥\ ]
;
¥¥] ^
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂ 
$num
∂∂ 
;
∂∂ 
i
∂∂ 
<
∂∂ 
text
∂∂  $
.
∂∂$ %
textInfo
∂∂% -
.
∂∂- .
	wordCount
∂∂. 7
;
∂∂7 8
i
∂∂9 :
++
∂∂: <
)
∂∂< =
{
∑∑ 
TMP_WordInfo
∏∏ 
wInfo
∏∏ "
=
∏∏# $
text
∏∏% )
.
∏∏) *
textInfo
∏∏* 2
.
∏∏2 3
wordInfo
∏∏3 ;
[
∏∏; <
i
∏∏< =
]
∏∏= >
;
∏∏> ?
bool
∫∫ 
isBeginRegion
∫∫ "
=
∫∫# $
false
∫∫% *
;
∫∫* +
Vector3
ºº 
bl
ºº 
=
ºº 
Vector3
ºº $
.
ºº$ %
zero
ºº% )
;
ºº) *
Vector3
ΩΩ 
tl
ΩΩ 
=
ΩΩ 
Vector3
ΩΩ $
.
ΩΩ$ %
zero
ΩΩ% )
;
ΩΩ) *
Vector3
ææ 
br
ææ 
=
ææ 
Vector3
ææ $
.
ææ$ %
zero
ææ% )
;
ææ) *
Vector3
øø 
tr
øø 
=
øø 
Vector3
øø $
.
øø$ %
zero
øø% )
;
øø) *
float
¡¡ 
maxAscender
¡¡ !
=
¡¡" #
-
¡¡$ %
Mathf
¡¡% *
.
¡¡* +
Infinity
¡¡+ 3
;
¡¡3 4
float
¬¬ 
minDescender
¬¬ "
=
¬¬# $
Mathf
¬¬% *
.
¬¬* +
Infinity
¬¬+ 3
;
¬¬3 4
for
≈≈ 
(
≈≈ 
int
≈≈ 
j
≈≈ 
=
≈≈ 
$num
≈≈ 
;
≈≈ 
j
≈≈  !
<
≈≈" #
wInfo
≈≈$ )
.
≈≈) *
characterCount
≈≈* 8
;
≈≈8 9
j
≈≈: ;
++
≈≈; =
)
≈≈= >
{
∆∆ 
int
«« 
characterIndex
«« &
=
««' (
wInfo
««) .
.
««. /!
firstCharacterIndex
««/ B
+
««C D
j
««E F
;
««F G
TMP_CharacterInfo
»» %
currentCharInfo
»»& 5
=
»»6 7
text
»»8 <
.
»»< =
textInfo
»»= E
.
»»E F
characterInfo
»»F S
[
»»S T
characterIndex
»»T b
]
»»b c
;
»»c d
int
…… 
currentLine
…… #
=
……$ %
currentCharInfo
……& 5
.
……5 6

lineNumber
……6 @
;
……@ A
bool
ÀÀ  
isCharacterVisible
ÀÀ +
=
ÀÀ, -
currentCharInfo
ÀÀ. =
.
ÀÀ= >
	isVisible
ÀÀ> G
;
ÀÀG H
maxAscender
ŒŒ 
=
ŒŒ  !
Mathf
ŒŒ" '
.
ŒŒ' (
Max
ŒŒ( +
(
ŒŒ+ ,
maxAscender
ŒŒ, 7
,
ŒŒ7 8
currentCharInfo
ŒŒ9 H
.
ŒŒH I
ascender
ŒŒI Q
)
ŒŒQ R
;
ŒŒR S
minDescender
œœ  
=
œœ! "
Mathf
œœ# (
.
œœ( )
Min
œœ) ,
(
œœ, -
minDescender
œœ- 9
,
œœ9 :
currentCharInfo
œœ; J
.
œœJ K
	descender
œœK T
)
œœT U
;
œœU V
if
—— 
(
—— 
isBeginRegion
—— %
==
——& (
false
——) .
&&
——/ 1 
isCharacterVisible
——2 D
)
——D E
{
““ 
isBeginRegion
”” %
=
””& '
true
””( ,
;
””, -
bl
’’ 
=
’’ 
new
’’  
Vector3
’’! (
(
’’( )
currentCharInfo
’’) 8
.
’’8 9

bottomLeft
’’9 C
.
’’C D
x
’’D E
,
’’E F
currentCharInfo
’’G V
.
’’V W
	descender
’’W `
,
’’` a
$num
’’b c
)
’’c d
;
’’d e
tl
÷÷ 
=
÷÷ 
new
÷÷  
Vector3
÷÷! (
(
÷÷( )
currentCharInfo
÷÷) 8
.
÷÷8 9

bottomLeft
÷÷9 C
.
÷÷C D
x
÷÷D E
,
÷÷E F
currentCharInfo
÷÷G V
.
÷÷V W
ascender
÷÷W _
,
÷÷_ `
$num
÷÷a b
)
÷÷b c
;
÷÷c d
if
€€ 
(
€€ 
wInfo
€€ !
.
€€! "
characterCount
€€" 0
==
€€1 3
$num
€€4 5
)
€€5 6
{
‹‹ 
isBeginRegion
›› )
=
››* +
false
››, 1
;
››1 2
br
ﬂﬂ 
=
ﬂﬂ  
new
ﬂﬂ! $
Vector3
ﬂﬂ% ,
(
ﬂﬂ, -
currentCharInfo
ﬂﬂ- <
.
ﬂﬂ< =
topRight
ﬂﬂ= E
.
ﬂﬂE F
x
ﬂﬂF G
,
ﬂﬂG H
currentCharInfo
ﬂﬂI X
.
ﬂﬂX Y
	descender
ﬂﬂY b
,
ﬂﬂb c
$num
ﬂﬂd e
)
ﬂﬂe f
;
ﬂﬂf g
tr
‡‡ 
=
‡‡  
new
‡‡! $
Vector3
‡‡% ,
(
‡‡, -
currentCharInfo
‡‡- <
.
‡‡< =
topRight
‡‡= E
.
‡‡E F
x
‡‡F G
,
‡‡G H
currentCharInfo
‡‡I X
.
‡‡X Y
ascender
‡‡Y a
,
‡‡a b
$num
‡‡c d
)
‡‡d e
;
‡‡e f
bl
„„ 
=
„„  
rectTransform
„„! .
.
„„. /
TransformPoint
„„/ =
(
„„= >
new
„„> A
Vector3
„„B I
(
„„I J
bl
„„J L
.
„„L M
x
„„M N
,
„„N O
minDescender
„„P \
,
„„\ ]
$num
„„^ _
)
„„_ `
)
„„` a
;
„„a b
tl
‰‰ 
=
‰‰  
rectTransform
‰‰! .
.
‰‰. /
TransformPoint
‰‰/ =
(
‰‰= >
new
‰‰> A
Vector3
‰‰B I
(
‰‰I J
tl
‰‰J L
.
‰‰L M
x
‰‰M N
,
‰‰N O
maxAscender
‰‰P [
,
‰‰[ \
$num
‰‰] ^
)
‰‰^ _
)
‰‰_ `
;
‰‰` a
tr
ÂÂ 
=
ÂÂ  
rectTransform
ÂÂ! .
.
ÂÂ. /
TransformPoint
ÂÂ/ =
(
ÂÂ= >
new
ÂÂ> A
Vector3
ÂÂB I
(
ÂÂI J
tr
ÂÂJ L
.
ÂÂL M
x
ÂÂM N
,
ÂÂN O
maxAscender
ÂÂP [
,
ÂÂ[ \
$num
ÂÂ] ^
)
ÂÂ^ _
)
ÂÂ_ `
;
ÂÂ` a
br
ÊÊ 
=
ÊÊ  
rectTransform
ÊÊ! .
.
ÊÊ. /
TransformPoint
ÊÊ/ =
(
ÊÊ= >
new
ÊÊ> A
Vector3
ÊÊB I
(
ÊÊI J
br
ÊÊJ L
.
ÊÊL M
x
ÊÊM N
,
ÊÊN O
minDescender
ÊÊP \
,
ÊÊ\ ]
$num
ÊÊ^ _
)
ÊÊ_ `
)
ÊÊ` a
;
ÊÊa b
if
ÈÈ 
(
ÈÈ  %
PointIntersectRectangle
ÈÈ  7
(
ÈÈ7 8
position
ÈÈ8 @
,
ÈÈ@ A
bl
ÈÈB D
,
ÈÈD E
tl
ÈÈF H
,
ÈÈH I
tr
ÈÈJ L
,
ÈÈL M
br
ÈÈN P
)
ÈÈP Q
)
ÈÈQ R
return
ÍÍ  &
i
ÍÍ' (
;
ÍÍ( )
}
ÌÌ 
}
ÓÓ 
if
ÒÒ 
(
ÒÒ 
isBeginRegion
ÒÒ %
&&
ÒÒ& (
j
ÒÒ) *
==
ÒÒ+ -
wInfo
ÒÒ. 3
.
ÒÒ3 4
characterCount
ÒÒ4 B
-
ÒÒC D
$num
ÒÒE F
)
ÒÒF G
{
ÚÚ 
isBeginRegion
ÛÛ %
=
ÛÛ& '
false
ÛÛ( -
;
ÛÛ- .
br
ıı 
=
ıı 
new
ıı  
Vector3
ıı! (
(
ıı( )
currentCharInfo
ıı) 8
.
ıı8 9
topRight
ıı9 A
.
ııA B
x
ııB C
,
ııC D
currentCharInfo
ııE T
.
ııT U
	descender
ııU ^
,
ıı^ _
$num
ıı` a
)
ııa b
;
ııb c
tr
ˆˆ 
=
ˆˆ 
new
ˆˆ  
Vector3
ˆˆ! (
(
ˆˆ( )
currentCharInfo
ˆˆ) 8
.
ˆˆ8 9
topRight
ˆˆ9 A
.
ˆˆA B
x
ˆˆB C
,
ˆˆC D
currentCharInfo
ˆˆE T
.
ˆˆT U
ascender
ˆˆU ]
,
ˆˆ] ^
$num
ˆˆ_ `
)
ˆˆ` a
;
ˆˆa b
bl
˘˘ 
=
˘˘ 
rectTransform
˘˘ *
.
˘˘* +
TransformPoint
˘˘+ 9
(
˘˘9 :
new
˘˘: =
Vector3
˘˘> E
(
˘˘E F
bl
˘˘F H
.
˘˘H I
x
˘˘I J
,
˘˘J K
minDescender
˘˘L X
,
˘˘X Y
$num
˘˘Z [
)
˘˘[ \
)
˘˘\ ]
;
˘˘] ^
tl
˙˙ 
=
˙˙ 
rectTransform
˙˙ *
.
˙˙* +
TransformPoint
˙˙+ 9
(
˙˙9 :
new
˙˙: =
Vector3
˙˙> E
(
˙˙E F
tl
˙˙F H
.
˙˙H I
x
˙˙I J
,
˙˙J K
maxAscender
˙˙L W
,
˙˙W X
$num
˙˙Y Z
)
˙˙Z [
)
˙˙[ \
;
˙˙\ ]
tr
˚˚ 
=
˚˚ 
rectTransform
˚˚ *
.
˚˚* +
TransformPoint
˚˚+ 9
(
˚˚9 :
new
˚˚: =
Vector3
˚˚> E
(
˚˚E F
tr
˚˚F H
.
˚˚H I
x
˚˚I J
,
˚˚J K
maxAscender
˚˚L W
,
˚˚W X
$num
˚˚Y Z
)
˚˚Z [
)
˚˚[ \
;
˚˚\ ]
br
¸¸ 
=
¸¸ 
rectTransform
¸¸ *
.
¸¸* +
TransformPoint
¸¸+ 9
(
¸¸9 :
new
¸¸: =
Vector3
¸¸> E
(
¸¸E F
br
¸¸F H
.
¸¸H I
x
¸¸I J
,
¸¸J K
minDescender
¸¸L X
,
¸¸X Y
$num
¸¸Z [
)
¸¸[ \
)
¸¸\ ]
;
¸¸] ^
if
ˇˇ 
(
ˇˇ %
PointIntersectRectangle
ˇˇ 3
(
ˇˇ3 4
position
ˇˇ4 <
,
ˇˇ< =
bl
ˇˇ> @
,
ˇˇ@ A
tl
ˇˇB D
,
ˇˇD E
tr
ˇˇF H
,
ˇˇH I
br
ˇˇJ L
)
ˇˇL M
)
ˇˇM N
return
ÄÄ "
i
ÄÄ# $
;
ÄÄ$ %
}
ÉÉ 
else
ÖÖ 
if
ÖÖ 
(
ÖÖ 
isBeginRegion
ÖÖ *
&&
ÖÖ+ -
currentLine
ÖÖ. 9
!=
ÖÖ: <
text
ÖÖ= A
.
ÖÖA B
textInfo
ÖÖB J
.
ÖÖJ K
characterInfo
ÖÖK X
[
ÖÖX Y
characterIndex
ÖÖY g
+
ÖÖh i
$num
ÖÖj k
]
ÖÖk l
.
ÖÖl m

lineNumber
ÖÖm w
)
ÖÖw x
{
ÜÜ 
isBeginRegion
áá %
=
áá& '
false
áá( -
;
áá- .
br
ââ 
=
ââ 
new
ââ  
Vector3
ââ! (
(
ââ( )
currentCharInfo
ââ) 8
.
ââ8 9
topRight
ââ9 A
.
ââA B
x
ââB C
,
ââC D
currentCharInfo
ââE T
.
ââT U
	descender
ââU ^
,
ââ^ _
$num
ââ` a
)
ââa b
;
ââb c
tr
ää 
=
ää 
new
ää  
Vector3
ää! (
(
ää( )
currentCharInfo
ää) 8
.
ää8 9
topRight
ää9 A
.
ääA B
x
ääB C
,
ääC D
currentCharInfo
ääE T
.
ääT U
ascender
ääU ]
,
ää] ^
$num
ää_ `
)
ää` a
;
ääa b
bl
çç 
=
çç 
rectTransform
çç *
.
çç* +
TransformPoint
çç+ 9
(
çç9 :
new
çç: =
Vector3
çç> E
(
ççE F
bl
ççF H
.
ççH I
x
ççI J
,
ççJ K
minDescender
ççL X
,
ççX Y
$num
ççZ [
)
çç[ \
)
çç\ ]
;
çç] ^
tl
éé 
=
éé 
rectTransform
éé *
.
éé* +
TransformPoint
éé+ 9
(
éé9 :
new
éé: =
Vector3
éé> E
(
ééE F
tl
ééF H
.
ééH I
x
ééI J
,
ééJ K
maxAscender
ééL W
,
ééW X
$num
ééY Z
)
ééZ [
)
éé[ \
;
éé\ ]
tr
èè 
=
èè 
rectTransform
èè *
.
èè* +
TransformPoint
èè+ 9
(
èè9 :
new
èè: =
Vector3
èè> E
(
èèE F
tr
èèF H
.
èèH I
x
èèI J
,
èèJ K
maxAscender
èèL W
,
èèW X
$num
èèY Z
)
èèZ [
)
èè[ \
;
èè\ ]
br
êê 
=
êê 
rectTransform
êê *
.
êê* +
TransformPoint
êê+ 9
(
êê9 :
new
êê: =
Vector3
êê> E
(
êêE F
br
êêF H
.
êêH I
x
êêI J
,
êêJ K
minDescender
êêL X
,
êêX Y
$num
êêZ [
)
êê[ \
)
êê\ ]
;
êê] ^
maxAscender
íí #
=
íí$ %
-
íí& '
Mathf
íí' ,
.
íí, -
Infinity
íí- 5
;
íí5 6
minDescender
ìì $
=
ìì% &
Mathf
ìì' ,
.
ìì, -
Infinity
ìì- 5
;
ìì5 6
if
ññ 
(
ññ %
PointIntersectRectangle
ññ 3
(
ññ3 4
position
ññ4 <
,
ññ< =
bl
ññ> @
,
ññ@ A
tl
ññB D
,
ññD E
tr
ññF H
,
ññH I
br
ññJ L
)
ññL M
)
ññM N
return
óó "
i
óó# $
;
óó$ %
}
öö 
}
õõ 
}
üü 
return
°° 
-
°° 
$num
°° 
;
°° 
}
¢¢ 	
public
®® 
static
®® 
int
®® 
FindNearestWord
®® )
(
®®) *
TMP_Text
®®* 2
text
®®3 7
,
®®7 8
Vector3
®®9 @
position
®®A I
,
®®I J
Camera
®®K Q
camera
®®R X
)
®®X Y
{
©© 	
RectTransform
™™ 
rectTransform
™™ '
=
™™( )
text
™™* .
.
™™. /
rectTransform
™™/ <
;
™™< =
float
¨¨ 
distanceSqr
¨¨ 
=
¨¨ 
Mathf
¨¨  %
.
¨¨% &
Infinity
¨¨& .
;
¨¨. /
int
≠≠ 
closest
≠≠ 
=
≠≠ 
$num
≠≠ 
;
≠≠ 0
"ScreenPointToWorldPointInRectangle
∞∞ .
(
∞∞. /
rectTransform
∞∞/ <
,
∞∞< =
position
∞∞> F
,
∞∞F G
camera
∞∞H N
,
∞∞N O
out
∞∞P S
position
∞∞T \
)
∞∞\ ]
;
∞∞] ^
for
≤≤ 
(
≤≤ 
int
≤≤ 
i
≤≤ 
=
≤≤ 
$num
≤≤ 
;
≤≤ 
i
≤≤ 
<
≤≤ 
text
≤≤  $
.
≤≤$ %
textInfo
≤≤% -
.
≤≤- .
	wordCount
≤≤. 7
;
≤≤7 8
i
≤≤9 :
++
≤≤: <
)
≤≤< =
{
≥≥ 
TMP_WordInfo
¥¥ 
wInfo
¥¥ "
=
¥¥# $
text
¥¥% )
.
¥¥) *
textInfo
¥¥* 2
.
¥¥2 3
wordInfo
¥¥3 ;
[
¥¥; <
i
¥¥< =
]
¥¥= >
;
¥¥> ?
bool
∂∂ 
isBeginRegion
∂∂ "
=
∂∂# $
false
∂∂% *
;
∂∂* +
Vector3
∏∏ 
bl
∏∏ 
=
∏∏ 
Vector3
∏∏ $
.
∏∏$ %
zero
∏∏% )
;
∏∏) *
Vector3
ππ 
tl
ππ 
=
ππ 
Vector3
ππ $
.
ππ$ %
zero
ππ% )
;
ππ) *
Vector3
∫∫ 
br
∫∫ 
=
∫∫ 
Vector3
∫∫ $
.
∫∫$ %
zero
∫∫% )
;
∫∫) *
Vector3
ªª 
tr
ªª 
=
ªª 
Vector3
ªª $
.
ªª$ %
zero
ªª% )
;
ªª) *
for
ææ 
(
ææ 
int
ææ 
j
ææ 
=
ææ 
$num
ææ 
;
ææ 
j
ææ  !
<
ææ" #
wInfo
ææ$ )
.
ææ) *
characterCount
ææ* 8
;
ææ8 9
j
ææ: ;
++
ææ; =
)
ææ= >
{
øø 
int
¿¿ 
characterIndex
¿¿ &
=
¿¿' (
wInfo
¿¿) .
.
¿¿. /!
firstCharacterIndex
¿¿/ B
+
¿¿C D
j
¿¿E F
;
¿¿F G
TMP_CharacterInfo
¡¡ %
currentCharInfo
¡¡& 5
=
¡¡6 7
text
¡¡8 <
.
¡¡< =
textInfo
¡¡= E
.
¡¡E F
characterInfo
¡¡F S
[
¡¡S T
characterIndex
¡¡T b
]
¡¡b c
;
¡¡c d
int
¬¬ 
currentLine
¬¬ #
=
¬¬$ %
currentCharInfo
¬¬& 5
.
¬¬5 6

lineNumber
¬¬6 @
;
¬¬@ A
bool
ƒƒ  
isCharacterVisible
ƒƒ +
=
ƒƒ, -
currentCharInfo
ƒƒ. =
.
ƒƒ= >
	isVisible
ƒƒ> G
;
ƒƒG H
if
∆∆ 
(
∆∆ 
isBeginRegion
∆∆ %
==
∆∆& (
false
∆∆) .
&&
∆∆/ 1 
isCharacterVisible
∆∆2 D
)
∆∆D E
{
«« 
isBeginRegion
»» %
=
»»& '
true
»»( ,
;
»», -
bl
   
=
   
rectTransform
   *
.
  * +
TransformPoint
  + 9
(
  9 :
new
  : =
Vector3
  > E
(
  E F
currentCharInfo
  F U
.
  U V

bottomLeft
  V `
.
  ` a
x
  a b
,
  b c
currentCharInfo
  d s
.
  s t
	descender
  t }
,
  } ~
$num   Ä
)  Ä Å
)  Å Ç
;  Ç É
tl
ÀÀ 
=
ÀÀ 
rectTransform
ÀÀ *
.
ÀÀ* +
TransformPoint
ÀÀ+ 9
(
ÀÀ9 :
new
ÀÀ: =
Vector3
ÀÀ> E
(
ÀÀE F
currentCharInfo
ÀÀF U
.
ÀÀU V

bottomLeft
ÀÀV `
.
ÀÀ` a
x
ÀÀa b
,
ÀÀb c
currentCharInfo
ÀÀd s
.
ÀÀs t
ascender
ÀÀt |
,
ÀÀ| }
$num
ÀÀ~ 
)ÀÀ Ä
)ÀÀÄ Å
;ÀÀÅ Ç
if
–– 
(
–– 
wInfo
–– !
.
––! "
characterCount
––" 0
==
––1 3
$num
––4 5
)
––5 6
{
—— 
isBeginRegion
““ )
=
““* +
false
““, 1
;
““1 2
br
‘‘ 
=
‘‘  
rectTransform
‘‘! .
.
‘‘. /
TransformPoint
‘‘/ =
(
‘‘= >
new
‘‘> A
Vector3
‘‘B I
(
‘‘I J
currentCharInfo
‘‘J Y
.
‘‘Y Z
topRight
‘‘Z b
.
‘‘b c
x
‘‘c d
,
‘‘d e
currentCharInfo
‘‘f u
.
‘‘u v
	descender
‘‘v 
,‘‘ Ä
$num‘‘Å Ç
)‘‘Ç É
)‘‘É Ñ
;‘‘Ñ Ö
tr
’’ 
=
’’  
rectTransform
’’! .
.
’’. /
TransformPoint
’’/ =
(
’’= >
new
’’> A
Vector3
’’B I
(
’’I J
currentCharInfo
’’J Y
.
’’Y Z
topRight
’’Z b
.
’’b c
x
’’c d
,
’’d e
currentCharInfo
’’f u
.
’’u v
ascender
’’v ~
,
’’~ 
$num’’Ä Å
)’’Å Ç
)’’Ç É
;’’É Ñ
if
ÿÿ 
(
ÿÿ  %
PointIntersectRectangle
ÿÿ  7
(
ÿÿ7 8
position
ÿÿ8 @
,
ÿÿ@ A
bl
ÿÿB D
,
ÿÿD E
tl
ÿÿF H
,
ÿÿH I
tr
ÿÿJ L
,
ÿÿL M
br
ÿÿN P
)
ÿÿP Q
)
ÿÿQ R
return
ŸŸ  &
i
ŸŸ' (
;
ŸŸ( )
float
‹‹ !
dbl
‹‹" %
=
‹‹& '
DistanceToLine
‹‹( 6
(
‹‹6 7
bl
‹‹7 9
,
‹‹9 :
tl
‹‹; =
,
‹‹= >
position
‹‹? G
)
‹‹G H
;
‹‹H I
float
›› !
dtl
››" %
=
››& '
DistanceToLine
››( 6
(
››6 7
tl
››7 9
,
››9 :
tr
››; =
,
››= >
position
››? G
)
››G H
;
››H I
float
ﬁﬁ !
dtr
ﬁﬁ" %
=
ﬁﬁ& '
DistanceToLine
ﬁﬁ( 6
(
ﬁﬁ6 7
tr
ﬁﬁ7 9
,
ﬁﬁ9 :
br
ﬁﬁ; =
,
ﬁﬁ= >
position
ﬁﬁ? G
)
ﬁﬁG H
;
ﬁﬁH I
float
ﬂﬂ !
dbr
ﬂﬂ" %
=
ﬂﬂ& '
DistanceToLine
ﬂﬂ( 6
(
ﬂﬂ6 7
br
ﬂﬂ7 9
,
ﬂﬂ9 :
bl
ﬂﬂ; =
,
ﬂﬂ= >
position
ﬂﬂ? G
)
ﬂﬂG H
;
ﬂﬂH I
float
·· !
d
··" #
=
··$ %
dbl
··& )
<
··* +
dtl
··, /
?
··0 1
dbl
··2 5
:
··6 7
dtl
··8 ;
;
··; <
d
‚‚ 
=
‚‚ 
d
‚‚  !
<
‚‚" #
dtr
‚‚$ '
?
‚‚( )
d
‚‚* +
:
‚‚, -
dtr
‚‚. 1
;
‚‚1 2
d
„„ 
=
„„ 
d
„„  !
<
„„" #
dbr
„„$ '
?
„„( )
d
„„* +
:
„„, -
dbr
„„. 1
;
„„1 2
if
ÂÂ 
(
ÂÂ  
distanceSqr
ÂÂ  +
>
ÂÂ, -
d
ÂÂ. /
)
ÂÂ/ 0
{
ÊÊ 
distanceSqr
ÁÁ  +
=
ÁÁ, -
d
ÁÁ. /
;
ÁÁ/ 0
closest
ËË  '
=
ËË( )
i
ËË* +
;
ËË+ ,
}
ÈÈ 
}
ÍÍ 
}
ÎÎ 
if
ÓÓ 
(
ÓÓ 
isBeginRegion
ÓÓ %
&&
ÓÓ& (
j
ÓÓ) *
==
ÓÓ+ -
wInfo
ÓÓ. 3
.
ÓÓ3 4
characterCount
ÓÓ4 B
-
ÓÓC D
$num
ÓÓE F
)
ÓÓF G
{
ÔÔ 
isBeginRegion
 %
=
& '
false
( -
;
- .
br
ÚÚ 
=
ÚÚ 
rectTransform
ÚÚ *
.
ÚÚ* +
TransformPoint
ÚÚ+ 9
(
ÚÚ9 :
new
ÚÚ: =
Vector3
ÚÚ> E
(
ÚÚE F
currentCharInfo
ÚÚF U
.
ÚÚU V
topRight
ÚÚV ^
.
ÚÚ^ _
x
ÚÚ_ `
,
ÚÚ` a
currentCharInfo
ÚÚb q
.
ÚÚq r
	descender
ÚÚr {
,
ÚÚ{ |
$num
ÚÚ} ~
)
ÚÚ~ 
)ÚÚ Ä
;ÚÚÄ Å
tr
ÛÛ 
=
ÛÛ 
rectTransform
ÛÛ *
.
ÛÛ* +
TransformPoint
ÛÛ+ 9
(
ÛÛ9 :
new
ÛÛ: =
Vector3
ÛÛ> E
(
ÛÛE F
currentCharInfo
ÛÛF U
.
ÛÛU V
topRight
ÛÛV ^
.
ÛÛ^ _
x
ÛÛ_ `
,
ÛÛ` a
currentCharInfo
ÛÛb q
.
ÛÛq r
ascender
ÛÛr z
,
ÛÛz {
$num
ÛÛ| }
)
ÛÛ} ~
)
ÛÛ~ 
;ÛÛ Ä
if
ˆˆ 
(
ˆˆ %
PointIntersectRectangle
ˆˆ 3
(
ˆˆ3 4
position
ˆˆ4 <
,
ˆˆ< =
bl
ˆˆ> @
,
ˆˆ@ A
tl
ˆˆB D
,
ˆˆD E
tr
ˆˆF H
,
ˆˆH I
br
ˆˆJ L
)
ˆˆL M
)
ˆˆM N
return
˜˜ "
i
˜˜# $
;
˜˜$ %
float
˙˙ 
dbl
˙˙ !
=
˙˙" #
DistanceToLine
˙˙$ 2
(
˙˙2 3
bl
˙˙3 5
,
˙˙5 6
tl
˙˙7 9
,
˙˙9 :
position
˙˙; C
)
˙˙C D
;
˙˙D E
float
˚˚ 
dtl
˚˚ !
=
˚˚" #
DistanceToLine
˚˚$ 2
(
˚˚2 3
tl
˚˚3 5
,
˚˚5 6
tr
˚˚7 9
,
˚˚9 :
position
˚˚; C
)
˚˚C D
;
˚˚D E
float
¸¸ 
dtr
¸¸ !
=
¸¸" #
DistanceToLine
¸¸$ 2
(
¸¸2 3
tr
¸¸3 5
,
¸¸5 6
br
¸¸7 9
,
¸¸9 :
position
¸¸; C
)
¸¸C D
;
¸¸D E
float
˝˝ 
dbr
˝˝ !
=
˝˝" #
DistanceToLine
˝˝$ 2
(
˝˝2 3
br
˝˝3 5
,
˝˝5 6
bl
˝˝7 9
,
˝˝9 :
position
˝˝; C
)
˝˝C D
;
˝˝D E
float
ˇˇ 
d
ˇˇ 
=
ˇˇ  !
dbl
ˇˇ" %
<
ˇˇ& '
dtl
ˇˇ( +
?
ˇˇ, -
dbl
ˇˇ. 1
:
ˇˇ2 3
dtl
ˇˇ4 7
;
ˇˇ7 8
d
ÄÄ 
=
ÄÄ 
d
ÄÄ 
<
ÄÄ 
dtr
ÄÄ  #
?
ÄÄ$ %
d
ÄÄ& '
:
ÄÄ( )
dtr
ÄÄ* -
;
ÄÄ- .
d
ÅÅ 
=
ÅÅ 
d
ÅÅ 
<
ÅÅ 
dbr
ÅÅ  #
?
ÅÅ$ %
d
ÅÅ& '
:
ÅÅ( )
dbr
ÅÅ* -
;
ÅÅ- .
if
ÉÉ 
(
ÉÉ 
distanceSqr
ÉÉ '
>
ÉÉ( )
d
ÉÉ* +
)
ÉÉ+ ,
{
ÑÑ 
distanceSqr
ÖÖ '
=
ÖÖ( )
d
ÖÖ* +
;
ÖÖ+ ,
closest
ÜÜ #
=
ÜÜ$ %
i
ÜÜ& '
;
ÜÜ' (
}
áá 
}
àà 
else
ää 
if
ää 
(
ää 
isBeginRegion
ää *
&&
ää+ -
currentLine
ää. 9
!=
ää: <
text
ää= A
.
ääA B
textInfo
ääB J
.
ääJ K
characterInfo
ääK X
[
ääX Y
characterIndex
ääY g
+
ääh i
$num
ääj k
]
ääk l
.
ääl m

lineNumber
ääm w
)
ääw x
{
ãã 
isBeginRegion
åå %
=
åå& '
false
åå( -
;
åå- .
br
éé 
=
éé 
rectTransform
éé *
.
éé* +
TransformPoint
éé+ 9
(
éé9 :
new
éé: =
Vector3
éé> E
(
ééE F
currentCharInfo
ééF U
.
ééU V
topRight
ééV ^
.
éé^ _
x
éé_ `
,
éé` a
currentCharInfo
ééb q
.
ééq r
	descender
éér {
,
éé{ |
$num
éé} ~
)
éé~ 
)éé Ä
;ééÄ Å
tr
èè 
=
èè 
rectTransform
èè *
.
èè* +
TransformPoint
èè+ 9
(
èè9 :
new
èè: =
Vector3
èè> E
(
èèE F
currentCharInfo
èèF U
.
èèU V
topRight
èèV ^
.
èè^ _
x
èè_ `
,
èè` a
currentCharInfo
èèb q
.
èèq r
ascender
èèr z
,
èèz {
$num
èè| }
)
èè} ~
)
èè~ 
;èè Ä
if
íí 
(
íí %
PointIntersectRectangle
íí 3
(
íí3 4
position
íí4 <
,
íí< =
bl
íí> @
,
íí@ A
tl
ííB D
,
ííD E
tr
ííF H
,
ííH I
br
ííJ L
)
ííL M
)
ííM N
return
ìì "
i
ìì# $
;
ìì$ %
float
ññ 
dbl
ññ !
=
ññ" #
DistanceToLine
ññ$ 2
(
ññ2 3
bl
ññ3 5
,
ññ5 6
tl
ññ7 9
,
ññ9 :
position
ññ; C
)
ññC D
;
ññD E
float
óó 
dtl
óó !
=
óó" #
DistanceToLine
óó$ 2
(
óó2 3
tl
óó3 5
,
óó5 6
tr
óó7 9
,
óó9 :
position
óó; C
)
óóC D
;
óóD E
float
òò 
dtr
òò !
=
òò" #
DistanceToLine
òò$ 2
(
òò2 3
tr
òò3 5
,
òò5 6
br
òò7 9
,
òò9 :
position
òò; C
)
òòC D
;
òòD E
float
ôô 
dbr
ôô !
=
ôô" #
DistanceToLine
ôô$ 2
(
ôô2 3
br
ôô3 5
,
ôô5 6
bl
ôô7 9
,
ôô9 :
position
ôô; C
)
ôôC D
;
ôôD E
float
õõ 
d
õõ 
=
õõ  !
dbl
õõ" %
<
õõ& '
dtl
õõ( +
?
õõ, -
dbl
õõ. 1
:
õõ2 3
dtl
õõ4 7
;
õõ7 8
d
úú 
=
úú 
d
úú 
<
úú 
dtr
úú  #
?
úú$ %
d
úú& '
:
úú( )
dtr
úú* -
;
úú- .
d
ùù 
=
ùù 
d
ùù 
<
ùù 
dbr
ùù  #
?
ùù$ %
d
ùù& '
:
ùù( )
dbr
ùù* -
;
ùù- .
if
üü 
(
üü 
distanceSqr
üü '
>
üü( )
d
üü* +
)
üü+ ,
{
†† 
distanceSqr
°° '
=
°°( )
d
°°* +
;
°°+ ,
closest
¢¢ #
=
¢¢$ %
i
¢¢& '
;
¢¢' (
}
££ 
}
§§ 
}
•• 
}
®® 
return
™™ 
closest
™™ 
;
™™ 
}
´´ 	
public
ü
ü
 
static
ü
ü
 
int
ü
ü
 "
FindIntersectingLine
ü
ü
 .
(
ü
ü
. /
TMP_Text
ü
ü
/ 7
text
ü
ü
8 <
,
ü
ü
< =
Vector3
ü
ü
> E
position
ü
ü
F N
,
ü
ü
N O
Camera
ü
ü
P V
camera
ü
ü
W ]
)
ü
ü
] ^
{
†
†
 	
RectTransform
°
°
 
rectTransform
°
°
 '
=
°
°
( )
text
°
°
* .
.
°
°
. /
rectTransform
°
°
/ <
;
°
°
< =
int
£
£
 
closest
£
£
 
=
£
£
 
-
£
£
 
$num
£
£
 
;
£
£
 0
"ScreenPointToWorldPointInRectangle
¶
¶
 .
(
¶
¶
. /
rectTransform
¶
¶
/ <
,
¶
¶
< =
position
¶
¶
> F
,
¶
¶
F G
camera
¶
¶
H N
,
¶
¶
N O
out
¶
¶
P S
position
¶
¶
T \
)
¶
¶
\ ]
;
¶
¶
] ^
for
®
®
 
(
®
®
 
int
®
®
 
i
®
®
 
=
®
®
 
$num
®
®
 
;
®
®
 
i
®
®
 
<
®
®
 
text
®
®
  $
.
®
®
$ %
textInfo
®
®
% -
.
®
®
- .
	lineCount
®
®
. 7
;
®
®
7 8
i
®
®
9 :
++
®
®
: <
)
®
®
< =
{
©
©
 
TMP_LineInfo
™
™
 
lineInfo
™
™
 %
=
™
™
& '
text
™
™
( ,
.
™
™
, -
textInfo
™
™
- 5
.
™
™
5 6
lineInfo
™
™
6 >
[
™
™
> ?
i
™
™
? @
]
™
™
@ A
;
™
™
A B
float
¨
¨
 
ascender
¨
¨
 
=
¨
¨
  
rectTransform
¨
¨
! .
.
¨
¨
. /
TransformPoint
¨
¨
/ =
(
¨
¨
= >
new
¨
¨
> A
Vector3
¨
¨
B I
(
¨
¨
I J
$num
¨
¨
J K
,
¨
¨
K L
lineInfo
¨
¨
M U
.
¨
¨
U V
ascender
¨
¨
V ^
,
¨
¨
^ _
$num
¨
¨
` a
)
¨
¨
a b
)
¨
¨
b c
.
¨
¨
c d
y
¨
¨
d e
;
¨
¨
e f
float
≠
≠
 
	descender
≠
≠
 
=
≠
≠
  !
rectTransform
≠
≠
" /
.
≠
≠
/ 0
TransformPoint
≠
≠
0 >
(
≠
≠
> ?
new
≠
≠
? B
Vector3
≠
≠
C J
(
≠
≠
J K
$num
≠
≠
K L
,
≠
≠
L M
lineInfo
≠
≠
N V
.
≠
≠
V W
	descender
≠
≠
W `
,
≠
≠
` a
$num
≠
≠
b c
)
≠
≠
c d
)
≠
≠
d e
.
≠
≠
e f
y
≠
≠
f g
;
≠
≠
g h
if
Ø
Ø
 
(
Ø
Ø
 
ascender
Ø
Ø
 
>
Ø
Ø
 
position
Ø
Ø
 '
.
Ø
Ø
' (
y
Ø
Ø
( )
&&
Ø
Ø
* ,
	descender
Ø
Ø
- 6
<
Ø
Ø
7 8
position
Ø
Ø
9 A
.
Ø
Ø
A B
y
Ø
Ø
B C
)
Ø
Ø
C D
{
∞
∞
 
return
≤
≤
 
i
≤
≤
 
;
≤
≤
 
}
≥
≥
 
}
¥
¥
 
return
∑
∑
 
closest
∑
∑
 
;
∑
∑
 
}
∏
∏
 	
public
¬
¬
 
static
¬
¬
 
int
¬
¬
 "
FindIntersectingLink
¬
¬
 .
(
¬
¬
. /
TMP_Text
¬
¬
/ 7
text
¬
¬
8 <
,
¬
¬
< =
Vector3
¬
¬
> E
position
¬
¬
F N
,
¬
¬
N O
Camera
¬
¬
P V
camera
¬
¬
W ]
)
¬
¬
] ^
{
√
√
 	
	Transform
ƒ
ƒ
 
rectTransform
ƒ
ƒ
 #
=
ƒ
ƒ
$ %
text
ƒ
ƒ
& *
.
ƒ
ƒ
* +
	transform
ƒ
ƒ
+ 4
;
ƒ
ƒ
4 50
"ScreenPointToWorldPointInRectangle
«
«
 .
(
«
«
. /
rectTransform
«
«
/ <
,
«
«
< =
position
«
«
> F
,
«
«
F G
camera
«
«
H N
,
«
«
N O
out
«
«
P S
position
«
«
T \
)
«
«
\ ]
;
«
«
] ^
for
…
…
 
(
…
…
 
int
…
…
 
i
…
…
 
=
…
…
 
$num
…
…
 
;
…
…
 
i
…
…
 
<
…
…
 
text
…
…
  $
.
…
…
$ %
textInfo
…
…
% -
.
…
…
- .
	linkCount
…
…
. 7
;
…
…
7 8
i
…
…
9 :
++
…
…
: <
)
…
…
< =
{
 
 
 
TMP_LinkInfo
À
À
 
linkInfo
À
À
 %
=
À
À
& '
text
À
À
( ,
.
À
À
, -
textInfo
À
À
- 5
.
À
À
5 6
linkInfo
À
À
6 >
[
À
À
> ?
i
À
À
? @
]
À
À
@ A
;
À
À
A B
bool
Õ
Õ
 
isBeginRegion
Õ
Õ
 "
=
Õ
Õ
# $
false
Õ
Õ
% *
;
Õ
Õ
* +
Vector3
œ
œ
 
bl
œ
œ
 
=
œ
œ
 
Vector3
œ
œ
 $
.
œ
œ
$ %
zero
œ
œ
% )
;
œ
œ
) *
Vector3
–
–
 
tl
–
–
 
=
–
–
 
Vector3
–
–
 $
.
–
–
$ %
zero
–
–
% )
;
–
–
) *
Vector3
—
—
 
br
—
—
 
=
—
—
 
Vector3
—
—
 $
.
—
—
$ %
zero
—
—
% )
;
—
—
) *
Vector3
“
“
 
tr
“
“
 
=
“
“
 
Vector3
“
“
 $
.
“
“
$ %
zero
“
“
% )
;
“
“
) *
for
’
’
 
(
’
’
 
int
’
’
 
j
’
’
 
=
’
’
 
$num
’
’
 
;
’
’
 
j
’
’
  !
<
’
’
" #
linkInfo
’
’
$ ,
.
’
’
, -
linkTextLength
’
’
- ;
;
’
’
; <
j
’
’
= >
++
’
’
> @
)
’
’
@ A
{
÷
÷
 
int
◊
◊
 
characterIndex
◊
◊
 &
=
◊
◊
' (
linkInfo
◊
◊
) 1
.
◊
◊
1 2)
linkTextfirstCharacterIndex
◊
◊
2 M
+
◊
◊
N O
j
◊
◊
P Q
;
◊
◊
Q R
TMP_CharacterInfo
ÿ
ÿ
 %
currentCharInfo
ÿ
ÿ
& 5
=
ÿ
ÿ
6 7
text
ÿ
ÿ
8 <
.
ÿ
ÿ
< =
textInfo
ÿ
ÿ
= E
.
ÿ
ÿ
E F
characterInfo
ÿ
ÿ
F S
[
ÿ
ÿ
S T
characterIndex
ÿ
ÿ
T b
]
ÿ
ÿ
b c
;
ÿ
ÿ
c d
int
Ÿ
Ÿ
 
currentLine
Ÿ
Ÿ
 #
=
Ÿ
Ÿ
$ %
currentCharInfo
Ÿ
Ÿ
& 5
.
Ÿ
Ÿ
5 6

lineNumber
Ÿ
Ÿ
6 @
;
Ÿ
Ÿ
@ A
if
‹
‹
 
(
‹
‹
 
text
‹
‹
 
.
‹
‹
 
overflowMode
‹
‹
 )
==
‹
‹
* ,
TextOverflowModes
‹
‹
- >
.
‹
‹
> ?
Page
‹
‹
? C
&&
‹
‹
D F
currentCharInfo
‹
‹
G V
.
‹
‹
V W

pageNumber
‹
‹
W a
+
‹
‹
b c
$num
‹
‹
d e
!=
‹
‹
f h
text
‹
‹
i m
.
‹
‹
m n
pageToDisplay
‹
‹
n {
)
‹
‹
{ |
continue‹
‹
} Ö
;‹
‹
Ö Ü
if
ﬁ
ﬁ
 
(
ﬁ
ﬁ
 
isBeginRegion
ﬁ
ﬁ
 %
==
ﬁ
ﬁ
& (
false
ﬁ
ﬁ
) .
)
ﬁ
ﬁ
. /
{
ﬂ
ﬂ
 
isBeginRegion
‡
‡
 %
=
‡
‡
& '
true
‡
‡
( ,
;
‡
‡
, -
bl
‚
‚
 
=
‚
‚
 
rectTransform
‚
‚
 *
.
‚
‚
* +
TransformPoint
‚
‚
+ 9
(
‚
‚
9 :
new
‚
‚
: =
Vector3
‚
‚
> E
(
‚
‚
E F
currentCharInfo
‚
‚
F U
.
‚
‚
U V

bottomLeft
‚
‚
V `
.
‚
‚
` a
x
‚
‚
a b
,
‚
‚
b c
currentCharInfo
‚
‚
d s
.
‚
‚
s t
	descender
‚
‚
t }
,
‚
‚
} ~
$num‚
‚
 Ä
)‚
‚
Ä Å
)‚
‚
Å Ç
;‚
‚
Ç É
tl
„
„
 
=
„
„
 
rectTransform
„
„
 *
.
„
„
* +
TransformPoint
„
„
+ 9
(
„
„
9 :
new
„
„
: =
Vector3
„
„
> E
(
„
„
E F
currentCharInfo
„
„
F U
.
„
„
U V

bottomLeft
„
„
V `
.
„
„
` a
x
„
„
a b
,
„
„
b c
currentCharInfo
„
„
d s
.
„
„
s t
ascender
„
„
t |
,
„
„
| }
$num
„
„
~ 
)„
„
 Ä
)„
„
Ä Å
;„
„
Å Ç
if
Ë
Ë
 
(
Ë
Ë
 
linkInfo
Ë
Ë
 $
.
Ë
Ë
$ %
linkTextLength
Ë
Ë
% 3
==
Ë
Ë
4 6
$num
Ë
Ë
7 8
)
Ë
Ë
8 9
{
È
È
 
isBeginRegion
Í
Í
 )
=
Í
Í
* +
false
Í
Í
, 1
;
Í
Í
1 2
br
Ï
Ï
 
=
Ï
Ï
  
rectTransform
Ï
Ï
! .
.
Ï
Ï
. /
TransformPoint
Ï
Ï
/ =
(
Ï
Ï
= >
new
Ï
Ï
> A
Vector3
Ï
Ï
B I
(
Ï
Ï
I J
currentCharInfo
Ï
Ï
J Y
.
Ï
Ï
Y Z
topRight
Ï
Ï
Z b
.
Ï
Ï
b c
x
Ï
Ï
c d
,
Ï
Ï
d e
currentCharInfo
Ï
Ï
f u
.
Ï
Ï
u v
	descender
Ï
Ï
v 
,Ï
Ï
 Ä
$numÏ
Ï
Å Ç
)Ï
Ï
Ç É
)Ï
Ï
É Ñ
;Ï
Ï
Ñ Ö
tr
Ì
Ì
 
=
Ì
Ì
  
rectTransform
Ì
Ì
! .
.
Ì
Ì
. /
TransformPoint
Ì
Ì
/ =
(
Ì
Ì
= >
new
Ì
Ì
> A
Vector3
Ì
Ì
B I
(
Ì
Ì
I J
currentCharInfo
Ì
Ì
J Y
.
Ì
Ì
Y Z
topRight
Ì
Ì
Z b
.
Ì
Ì
b c
x
Ì
Ì
c d
,
Ì
Ì
d e
currentCharInfo
Ì
Ì
f u
.
Ì
Ì
u v
ascender
Ì
Ì
v ~
,
Ì
Ì
~ 
$numÌ
Ì
Ä Å
)Ì
Ì
Å Ç
)Ì
Ì
Ç É
;Ì
Ì
É Ñ
if


 
(


  %
PointIntersectRectangle


  7
(


7 8
position


8 @
,


@ A
bl


B D
,


D E
tl


F H
,


H I
tr


J L
,


L M
br


N P
)


P Q
)


Q R
return
Ò
Ò
  &
i
Ò
Ò
' (
;
Ò
Ò
( )
}
Ù
Ù
 
}
ı
ı
 
if
¯
¯
 
(
¯
¯
 
isBeginRegion
¯
¯
 %
&&
¯
¯
& (
j
¯
¯
) *
==
¯
¯
+ -
linkInfo
¯
¯
. 6
.
¯
¯
6 7
linkTextLength
¯
¯
7 E
-
¯
¯
F G
$num
¯
¯
H I
)
¯
¯
I J
{
˘
˘
 
isBeginRegion
˙
˙
 %
=
˙
˙
& '
false
˙
˙
( -
;
˙
˙
- .
br
¸
¸
 
=
¸
¸
 
rectTransform
¸
¸
 *
.
¸
¸
* +
TransformPoint
¸
¸
+ 9
(
¸
¸
9 :
new
¸
¸
: =
Vector3
¸
¸
> E
(
¸
¸
E F
currentCharInfo
¸
¸
F U
.
¸
¸
U V
topRight
¸
¸
V ^
.
¸
¸
^ _
x
¸
¸
_ `
,
¸
¸
` a
currentCharInfo
¸
¸
b q
.
¸
¸
q r
	descender
¸
¸
r {
,
¸
¸
{ |
$num
¸
¸
} ~
)
¸
¸
~ 
)¸
¸
 Ä
;¸
¸
Ä Å
tr
˝
˝
 
=
˝
˝
 
rectTransform
˝
˝
 *
.
˝
˝
* +
TransformPoint
˝
˝
+ 9
(
˝
˝
9 :
new
˝
˝
: =
Vector3
˝
˝
> E
(
˝
˝
E F
currentCharInfo
˝
˝
F U
.
˝
˝
U V
topRight
˝
˝
V ^
.
˝
˝
^ _
x
˝
˝
_ `
,
˝
˝
` a
currentCharInfo
˝
˝
b q
.
˝
˝
q r
ascender
˝
˝
r z
,
˝
˝
z {
$num
˝
˝
| }
)
˝
˝
} ~
)
˝
˝
~ 
;˝
˝
 Ä
if
ÄÄ 
(
ÄÄ %
PointIntersectRectangle
ÄÄ 3
(
ÄÄ3 4
position
ÄÄ4 <
,
ÄÄ< =
bl
ÄÄ> @
,
ÄÄ@ A
tl
ÄÄB D
,
ÄÄD E
tr
ÄÄF H
,
ÄÄH I
br
ÄÄJ L
)
ÄÄL M
)
ÄÄM N
return
ÅÅ "
i
ÅÅ# $
;
ÅÅ$ %
}
ÑÑ 
else
ÜÜ 
if
ÜÜ 
(
ÜÜ 
isBeginRegion
ÜÜ *
&&
ÜÜ+ -
currentLine
ÜÜ. 9
!=
ÜÜ: <
text
ÜÜ= A
.
ÜÜA B
textInfo
ÜÜB J
.
ÜÜJ K
characterInfo
ÜÜK X
[
ÜÜX Y
characterIndex
ÜÜY g
+
ÜÜh i
$num
ÜÜj k
]
ÜÜk l
.
ÜÜl m

lineNumber
ÜÜm w
)
ÜÜw x
{
áá 
isBeginRegion
àà %
=
àà& '
false
àà( -
;
àà- .
br
ää 
=
ää 
rectTransform
ää *
.
ää* +
TransformPoint
ää+ 9
(
ää9 :
new
ää: =
Vector3
ää> E
(
ääE F
currentCharInfo
ääF U
.
ääU V
topRight
ääV ^
.
ää^ _
x
ää_ `
,
ää` a
currentCharInfo
ääb q
.
ääq r
	descender
äär {
,
ää{ |
$num
ää} ~
)
ää~ 
)ää Ä
;ääÄ Å
tr
ãã 
=
ãã 
rectTransform
ãã *
.
ãã* +
TransformPoint
ãã+ 9
(
ãã9 :
new
ãã: =
Vector3
ãã> E
(
ããE F
currentCharInfo
ããF U
.
ããU V
topRight
ããV ^
.
ãã^ _
x
ãã_ `
,
ãã` a
currentCharInfo
ããb q
.
ããq r
ascender
ããr z
,
ããz {
$num
ãã| }
)
ãã} ~
)
ãã~ 
;ãã Ä
if
éé 
(
éé %
PointIntersectRectangle
éé 3
(
éé3 4
position
éé4 <
,
éé< =
bl
éé> @
,
éé@ A
tl
ééB D
,
ééD E
tr
ééF H
,
ééH I
br
ééJ L
)
ééL M
)
ééM N
return
èè "
i
èè# $
;
èè$ %
}
íí 
}
ìì 
}
óó 
return
ôô 
-
ôô 
$num
ôô 
;
ôô 
}
öö 	
public
ÁÁ 
static
ÁÁ 
int
ÁÁ 
FindNearestLink
ÁÁ )
(
ÁÁ) *
TMP_Text
ÁÁ* 2
text
ÁÁ3 7
,
ÁÁ7 8
Vector3
ÁÁ9 @
position
ÁÁA I
,
ÁÁI J
Camera
ÁÁK Q
camera
ÁÁR X
)
ÁÁX Y
{
ËË 	
RectTransform
ÈÈ 
rectTransform
ÈÈ '
=
ÈÈ( )
text
ÈÈ* .
.
ÈÈ. /
rectTransform
ÈÈ/ <
;
ÈÈ< =0
"ScreenPointToWorldPointInRectangle
ÏÏ .
(
ÏÏ. /
rectTransform
ÏÏ/ <
,
ÏÏ< =
position
ÏÏ> F
,
ÏÏF G
camera
ÏÏH N
,
ÏÏN O
out
ÏÏP S
position
ÏÏT \
)
ÏÏ\ ]
;
ÏÏ] ^
float
ÓÓ 
distanceSqr
ÓÓ 
=
ÓÓ 
Mathf
ÓÓ  %
.
ÓÓ% &
Infinity
ÓÓ& .
;
ÓÓ. /
int
ÔÔ 
closest
ÔÔ 
=
ÔÔ 
$num
ÔÔ 
;
ÔÔ 
for
ÒÒ 
(
ÒÒ 
int
ÒÒ 
i
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
;
ÒÒ 
i
ÒÒ 
<
ÒÒ 
text
ÒÒ  $
.
ÒÒ$ %
textInfo
ÒÒ% -
.
ÒÒ- .
	linkCount
ÒÒ. 7
;
ÒÒ7 8
i
ÒÒ9 :
++
ÒÒ: <
)
ÒÒ< =
{
ÚÚ 
TMP_LinkInfo
ÛÛ 
linkInfo
ÛÛ %
=
ÛÛ& '
text
ÛÛ( ,
.
ÛÛ, -
textInfo
ÛÛ- 5
.
ÛÛ5 6
linkInfo
ÛÛ6 >
[
ÛÛ> ?
i
ÛÛ? @
]
ÛÛ@ A
;
ÛÛA B
bool
ıı 
isBeginRegion
ıı "
=
ıı# $
false
ıı% *
;
ıı* +
Vector3
˜˜ 
bl
˜˜ 
=
˜˜ 
Vector3
˜˜ $
.
˜˜$ %
zero
˜˜% )
;
˜˜) *
Vector3
¯¯ 
tl
¯¯ 
=
¯¯ 
Vector3
¯¯ $
.
¯¯$ %
zero
¯¯% )
;
¯¯) *
Vector3
˘˘ 
br
˘˘ 
=
˘˘ 
Vector3
˘˘ $
.
˘˘$ %
zero
˘˘% )
;
˘˘) *
Vector3
˙˙ 
tr
˙˙ 
=
˙˙ 
Vector3
˙˙ $
.
˙˙$ %
zero
˙˙% )
;
˙˙) *
for
˝˝ 
(
˝˝ 
int
˝˝ 
j
˝˝ 
=
˝˝ 
$num
˝˝ 
;
˝˝ 
j
˝˝  !
<
˝˝" #
linkInfo
˝˝$ ,
.
˝˝, -
linkTextLength
˝˝- ;
;
˝˝; <
j
˝˝= >
++
˝˝> @
)
˝˝@ A
{
˛˛ 
int
ˇˇ 
characterIndex
ˇˇ &
=
ˇˇ' (
linkInfo
ˇˇ) 1
.
ˇˇ1 2)
linkTextfirstCharacterIndex
ˇˇ2 M
+
ˇˇN O
j
ˇˇP Q
;
ˇˇQ R
TMP_CharacterInfo
ÄÄ %
currentCharInfo
ÄÄ& 5
=
ÄÄ6 7
text
ÄÄ8 <
.
ÄÄ< =
textInfo
ÄÄ= E
.
ÄÄE F
characterInfo
ÄÄF S
[
ÄÄS T
characterIndex
ÄÄT b
]
ÄÄb c
;
ÄÄc d
int
ÅÅ 
currentLine
ÅÅ #
=
ÅÅ$ %
currentCharInfo
ÅÅ& 5
.
ÅÅ5 6

lineNumber
ÅÅ6 @
;
ÅÅ@ A
if
ÑÑ 
(
ÑÑ 
text
ÑÑ 
.
ÑÑ 
overflowMode
ÑÑ )
==
ÑÑ* ,
TextOverflowModes
ÑÑ- >
.
ÑÑ> ?
Page
ÑÑ? C
&&
ÑÑD F
currentCharInfo
ÑÑG V
.
ÑÑV W

pageNumber
ÑÑW a
+
ÑÑb c
$num
ÑÑd e
!=
ÑÑf h
text
ÑÑi m
.
ÑÑm n
pageToDisplay
ÑÑn {
)
ÑÑ{ |
continueÑÑ} Ö
;ÑÑÖ Ü
if
ÜÜ 
(
ÜÜ 
isBeginRegion
ÜÜ %
==
ÜÜ& (
false
ÜÜ) .
)
ÜÜ. /
{
áá 
isBeginRegion
àà %
=
àà& '
true
àà( ,
;
àà, -
bl
åå 
=
åå 
rectTransform
åå *
.
åå* +
TransformPoint
åå+ 9
(
åå9 :
new
åå: =
Vector3
åå> E
(
ååE F
currentCharInfo
ååF U
.
ååU V

bottomLeft
ååV `
.
åå` a
x
ååa b
,
ååb c
currentCharInfo
ååd s
.
åås t
	descender
ååt }
,
åå} ~
$numåå Ä
)ååÄ Å
)ååÅ Ç
;ååÇ É
tl
çç 
=
çç 
rectTransform
çç *
.
çç* +
TransformPoint
çç+ 9
(
çç9 :
new
çç: =
Vector3
çç> E
(
ççE F
currentCharInfo
ççF U
.
ççU V

bottomLeft
ççV `
.
çç` a
x
çça b
,
ççb c
currentCharInfo
ççd s
.
ççs t
ascender
ççt |
,
çç| }
$num
çç~ 
)çç Ä
)ççÄ Å
;ççÅ Ç
if
êê 
(
êê 
linkInfo
êê $
.
êê$ %
linkTextLength
êê% 3
==
êê4 6
$num
êê7 8
)
êê8 9
{
ëë 
isBeginRegion
íí )
=
íí* +
false
íí, 1
;
íí1 2
br
îî 
=
îî  
rectTransform
îî! .
.
îî. /
TransformPoint
îî/ =
(
îî= >
new
îî> A
Vector3
îîB I
(
îîI J
currentCharInfo
îîJ Y
.
îîY Z
topRight
îîZ b
.
îîb c
x
îîc d
,
îîd e
currentCharInfo
îîf u
.
îîu v
	descender
îîv 
,îî Ä
$numîîÅ Ç
)îîÇ É
)îîÉ Ñ
;îîÑ Ö
tr
ïï 
=
ïï  
rectTransform
ïï! .
.
ïï. /
TransformPoint
ïï/ =
(
ïï= >
new
ïï> A
Vector3
ïïB I
(
ïïI J
currentCharInfo
ïïJ Y
.
ïïY Z
topRight
ïïZ b
.
ïïb c
x
ïïc d
,
ïïd e
currentCharInfo
ïïf u
.
ïïu v
ascender
ïïv ~
,
ïï~ 
$numïïÄ Å
)ïïÅ Ç
)ïïÇ É
;ïïÉ Ñ
if
òò 
(
òò  %
PointIntersectRectangle
òò  7
(
òò7 8
position
òò8 @
,
òò@ A
bl
òòB D
,
òòD E
tl
òòF H
,
òòH I
tr
òòJ L
,
òòL M
br
òòN P
)
òòP Q
)
òòQ R
return
ôô  &
i
ôô' (
;
ôô( )
float
úú !
dbl
úú" %
=
úú& '
DistanceToLine
úú( 6
(
úú6 7
bl
úú7 9
,
úú9 :
tl
úú; =
,
úú= >
position
úú? G
)
úúG H
;
úúH I
float
ùù !
dtl
ùù" %
=
ùù& '
DistanceToLine
ùù( 6
(
ùù6 7
tl
ùù7 9
,
ùù9 :
tr
ùù; =
,
ùù= >
position
ùù? G
)
ùùG H
;
ùùH I
float
ûû !
dtr
ûû" %
=
ûû& '
DistanceToLine
ûû( 6
(
ûû6 7
tr
ûû7 9
,
ûû9 :
br
ûû; =
,
ûû= >
position
ûû? G
)
ûûG H
;
ûûH I
float
üü !
dbr
üü" %
=
üü& '
DistanceToLine
üü( 6
(
üü6 7
br
üü7 9
,
üü9 :
bl
üü; =
,
üü= >
position
üü? G
)
üüG H
;
üüH I
float
°° !
d
°°" #
=
°°$ %
dbl
°°& )
<
°°* +
dtl
°°, /
?
°°0 1
dbl
°°2 5
:
°°6 7
dtl
°°8 ;
;
°°; <
d
¢¢ 
=
¢¢ 
d
¢¢  !
<
¢¢" #
dtr
¢¢$ '
?
¢¢( )
d
¢¢* +
:
¢¢, -
dtr
¢¢. 1
;
¢¢1 2
d
££ 
=
££ 
d
££  !
<
££" #
dbr
££$ '
?
££( )
d
££* +
:
££, -
dbr
££. 1
;
££1 2
if
•• 
(
••  
distanceSqr
••  +
>
••, -
d
••. /
)
••/ 0
{
¶¶ 
distanceSqr
ßß  +
=
ßß, -
d
ßß. /
;
ßß/ 0
closest
®®  '
=
®®( )
i
®®* +
;
®®+ ,
}
©© 
}
´´ 
}
¨¨ 
if
ØØ 
(
ØØ 
isBeginRegion
ØØ %
&&
ØØ& (
j
ØØ) *
==
ØØ+ -
linkInfo
ØØ. 6
.
ØØ6 7
linkTextLength
ØØ7 E
-
ØØF G
$num
ØØH I
)
ØØI J
{
∞∞ 
isBeginRegion
±± %
=
±±& '
false
±±( -
;
±±- .
br
≥≥ 
=
≥≥ 
rectTransform
≥≥ *
.
≥≥* +
TransformPoint
≥≥+ 9
(
≥≥9 :
new
≥≥: =
Vector3
≥≥> E
(
≥≥E F
currentCharInfo
≥≥F U
.
≥≥U V
topRight
≥≥V ^
.
≥≥^ _
x
≥≥_ `
,
≥≥` a
currentCharInfo
≥≥b q
.
≥≥q r
	descender
≥≥r {
,
≥≥{ |
$num
≥≥} ~
)
≥≥~ 
)≥≥ Ä
;≥≥Ä Å
tr
¥¥ 
=
¥¥ 
rectTransform
¥¥ *
.
¥¥* +
TransformPoint
¥¥+ 9
(
¥¥9 :
new
¥¥: =
Vector3
¥¥> E
(
¥¥E F
currentCharInfo
¥¥F U
.
¥¥U V
topRight
¥¥V ^
.
¥¥^ _
x
¥¥_ `
,
¥¥` a
currentCharInfo
¥¥b q
.
¥¥q r
ascender
¥¥r z
,
¥¥z {
$num
¥¥| }
)
¥¥} ~
)
¥¥~ 
;¥¥ Ä
if
∑∑ 
(
∑∑ %
PointIntersectRectangle
∑∑ 3
(
∑∑3 4
position
∑∑4 <
,
∑∑< =
bl
∑∑> @
,
∑∑@ A
tl
∑∑B D
,
∑∑D E
tr
∑∑F H
,
∑∑H I
br
∑∑J L
)
∑∑L M
)
∑∑M N
return
∏∏ "
i
∏∏# $
;
∏∏$ %
float
ªª 
dbl
ªª !
=
ªª" #
DistanceToLine
ªª$ 2
(
ªª2 3
bl
ªª3 5
,
ªª5 6
tl
ªª7 9
,
ªª9 :
position
ªª; C
)
ªªC D
;
ªªD E
float
ºº 
dtl
ºº !
=
ºº" #
DistanceToLine
ºº$ 2
(
ºº2 3
tl
ºº3 5
,
ºº5 6
tr
ºº7 9
,
ºº9 :
position
ºº; C
)
ººC D
;
ººD E
float
ΩΩ 
dtr
ΩΩ !
=
ΩΩ" #
DistanceToLine
ΩΩ$ 2
(
ΩΩ2 3
tr
ΩΩ3 5
,
ΩΩ5 6
br
ΩΩ7 9
,
ΩΩ9 :
position
ΩΩ; C
)
ΩΩC D
;
ΩΩD E
float
ææ 
dbr
ææ !
=
ææ" #
DistanceToLine
ææ$ 2
(
ææ2 3
br
ææ3 5
,
ææ5 6
bl
ææ7 9
,
ææ9 :
position
ææ; C
)
ææC D
;
ææD E
float
¿¿ 
d
¿¿ 
=
¿¿  !
dbl
¿¿" %
<
¿¿& '
dtl
¿¿( +
?
¿¿, -
dbl
¿¿. 1
:
¿¿2 3
dtl
¿¿4 7
;
¿¿7 8
d
¡¡ 
=
¡¡ 
d
¡¡ 
<
¡¡ 
dtr
¡¡  #
?
¡¡$ %
d
¡¡& '
:
¡¡( )
dtr
¡¡* -
;
¡¡- .
d
¬¬ 
=
¬¬ 
d
¬¬ 
<
¬¬ 
dbr
¬¬  #
?
¬¬$ %
d
¬¬& '
:
¬¬( )
dbr
¬¬* -
;
¬¬- .
if
ƒƒ 
(
ƒƒ 
distanceSqr
ƒƒ '
>
ƒƒ( )
d
ƒƒ* +
)
ƒƒ+ ,
{
≈≈ 
distanceSqr
∆∆ '
=
∆∆( )
d
∆∆* +
;
∆∆+ ,
closest
«« #
=
««$ %
i
««& '
;
««' (
}
»» 
}
   
else
ÃÃ 
if
ÃÃ 
(
ÃÃ 
isBeginRegion
ÃÃ *
&&
ÃÃ+ -
currentLine
ÃÃ. 9
!=
ÃÃ: <
text
ÃÃ= A
.
ÃÃA B
textInfo
ÃÃB J
.
ÃÃJ K
characterInfo
ÃÃK X
[
ÃÃX Y
characterIndex
ÃÃY g
+
ÃÃh i
$num
ÃÃj k
]
ÃÃk l
.
ÃÃl m

lineNumber
ÃÃm w
)
ÃÃw x
{
ÕÕ 
isBeginRegion
ŒŒ %
=
ŒŒ& '
false
ŒŒ( -
;
ŒŒ- .
br
–– 
=
–– 
rectTransform
–– *
.
––* +
TransformPoint
––+ 9
(
––9 :
new
––: =
Vector3
––> E
(
––E F
currentCharInfo
––F U
.
––U V
topRight
––V ^
.
––^ _
x
––_ `
,
––` a
currentCharInfo
––b q
.
––q r
	descender
––r {
,
––{ |
$num
––} ~
)
––~ 
)–– Ä
;––Ä Å
tr
—— 
=
—— 
rectTransform
—— *
.
——* +
TransformPoint
——+ 9
(
——9 :
new
——: =
Vector3
——> E
(
——E F
currentCharInfo
——F U
.
——U V
topRight
——V ^
.
——^ _
x
——_ `
,
——` a
currentCharInfo
——b q
.
——q r
ascender
——r z
,
——z {
$num
——| }
)
——} ~
)
——~ 
;—— Ä
if
‘‘ 
(
‘‘ %
PointIntersectRectangle
‘‘ 3
(
‘‘3 4
position
‘‘4 <
,
‘‘< =
bl
‘‘> @
,
‘‘@ A
tl
‘‘B D
,
‘‘D E
tr
‘‘F H
,
‘‘H I
br
‘‘J L
)
‘‘L M
)
‘‘M N
return
’’ "
i
’’# $
;
’’$ %
float
ÿÿ 
dbl
ÿÿ !
=
ÿÿ" #
DistanceToLine
ÿÿ$ 2
(
ÿÿ2 3
bl
ÿÿ3 5
,
ÿÿ5 6
tl
ÿÿ7 9
,
ÿÿ9 :
position
ÿÿ; C
)
ÿÿC D
;
ÿÿD E
float
ŸŸ 
dtl
ŸŸ !
=
ŸŸ" #
DistanceToLine
ŸŸ$ 2
(
ŸŸ2 3
tl
ŸŸ3 5
,
ŸŸ5 6
tr
ŸŸ7 9
,
ŸŸ9 :
position
ŸŸ; C
)
ŸŸC D
;
ŸŸD E
float
⁄⁄ 
dtr
⁄⁄ !
=
⁄⁄" #
DistanceToLine
⁄⁄$ 2
(
⁄⁄2 3
tr
⁄⁄3 5
,
⁄⁄5 6
br
⁄⁄7 9
,
⁄⁄9 :
position
⁄⁄; C
)
⁄⁄C D
;
⁄⁄D E
float
€€ 
dbr
€€ !
=
€€" #
DistanceToLine
€€$ 2
(
€€2 3
br
€€3 5
,
€€5 6
bl
€€7 9
,
€€9 :
position
€€; C
)
€€C D
;
€€D E
float
›› 
d
›› 
=
››  !
dbl
››" %
<
››& '
dtl
››( +
?
››, -
dbl
››. 1
:
››2 3
dtl
››4 7
;
››7 8
d
ﬁﬁ 
=
ﬁﬁ 
d
ﬁﬁ 
<
ﬁﬁ 
dtr
ﬁﬁ  #
?
ﬁﬁ$ %
d
ﬁﬁ& '
:
ﬁﬁ( )
dtr
ﬁﬁ* -
;
ﬁﬁ- .
d
ﬂﬂ 
=
ﬂﬂ 
d
ﬂﬂ 
<
ﬂﬂ 
dbr
ﬂﬂ  #
?
ﬂﬂ$ %
d
ﬂﬂ& '
:
ﬂﬂ( )
dbr
ﬂﬂ* -
;
ﬂﬂ- .
if
·· 
(
·· 
distanceSqr
·· '
>
··( )
d
··* +
)
··+ ,
{
‚‚ 
distanceSqr
„„ '
=
„„( )
d
„„* +
;
„„+ ,
closest
‰‰ #
=
‰‰$ %
i
‰‰& '
;
‰‰' (
}
ÂÂ 
}
ÊÊ 
}
ÁÁ 
}
ÎÎ 
return
ÌÌ 
closest
ÌÌ 
;
ÌÌ 
}
ÓÓ 	
private
‹‹ 
static
‹‹ 
bool
‹‹ %
PointIntersectRectangle
‹‹ 3
(
‹‹3 4
Vector3
‹‹4 ;
m
‹‹< =
,
‹‹= >
Vector3
‹‹? F
a
‹‹G H
,
‹‹H I
Vector3
‹‹J Q
b
‹‹R S
,
‹‹S T
Vector3
‹‹U \
c
‹‹] ^
,
‹‹^ _
Vector3
‹‹` g
d
‹‹h i
)
‹‹i j
{
›› 	
Vector3
ﬁﬁ 
ab
ﬁﬁ 
=
ﬁﬁ 
b
ﬁﬁ 
-
ﬁﬁ 
a
ﬁﬁ 
;
ﬁﬁ 
Vector3
ﬂﬂ 
am
ﬂﬂ 
=
ﬂﬂ 
m
ﬂﬂ 
-
ﬂﬂ 
a
ﬂﬂ 
;
ﬂﬂ 
Vector3
‡‡ 
bc
‡‡ 
=
‡‡ 
c
‡‡ 
-
‡‡ 
b
‡‡ 
;
‡‡ 
Vector3
·· 
bm
·· 
=
·· 
m
·· 
-
·· 
b
·· 
;
·· 
float
„„ 
abamDot
„„ 
=
„„ 
Vector3
„„ #
.
„„# $
Dot
„„$ '
(
„„' (
ab
„„( *
,
„„* +
am
„„, .
)
„„. /
;
„„/ 0
float
‰‰ 
bcbmDot
‰‰ 
=
‰‰ 
Vector3
‰‰ #
.
‰‰# $
Dot
‰‰$ '
(
‰‰' (
bc
‰‰( *
,
‰‰* +
bm
‰‰, .
)
‰‰. /
;
‰‰/ 0
return
ÊÊ 
$num
ÊÊ 
<=
ÊÊ 
abamDot
ÊÊ 
&&
ÊÊ  "
abamDot
ÊÊ# *
<=
ÊÊ+ -
Vector3
ÊÊ. 5
.
ÊÊ5 6
Dot
ÊÊ6 9
(
ÊÊ9 :
ab
ÊÊ: <
,
ÊÊ< =
ab
ÊÊ> @
)
ÊÊ@ A
&&
ÊÊB D
$num
ÊÊE F
<=
ÊÊG I
bcbmDot
ÊÊJ Q
&&
ÊÊR T
bcbmDot
ÊÊU \
<=
ÊÊ] _
Vector3
ÊÊ` g
.
ÊÊg h
Dot
ÊÊh k
(
ÊÊk l
bc
ÊÊl n
,
ÊÊn o
bc
ÊÊp r
)
ÊÊr s
;
ÊÊs t
}
ÁÁ 	
public
ÚÚ 
static
ÚÚ 
bool
ÚÚ 0
"ScreenPointToWorldPointInRectangle
ÚÚ =
(
ÚÚ= >
	Transform
ÚÚ> G
	transform
ÚÚH Q
,
ÚÚQ R
Vector2
ÚÚS Z
screenPoint
ÚÚ[ f
,
ÚÚf g
Camera
ÚÚh n
cam
ÚÚo r
,
ÚÚr s
out
ÚÚt w
Vector3
ÚÚx 

worldPointÚÚÄ ä
)ÚÚä ã
{
ÛÛ 	

worldPoint
ÙÙ 
=
ÙÙ 
(
ÙÙ 
Vector3
ÙÙ !
)
ÙÙ! "
Vector2
ÙÙ" )
.
ÙÙ) *
zero
ÙÙ* .
;
ÙÙ. /
Ray
ıı 
ray
ıı 
=
ıı "
RectTransformUtility
ıı *
.
ıı* +
ScreenPointToRay
ıı+ ;
(
ıı; <
cam
ıı< ?
,
ıı? @
screenPoint
ııA L
)
ııL M
;
ııM N
float
˜˜ 
enter
˜˜ 
;
˜˜ 
if
¯¯ 
(
¯¯ 
!
¯¯ 
new
¯¯ 
Plane
¯¯ 
(
¯¯ 
	transform
¯¯ $
.
¯¯$ %
rotation
¯¯% -
*
¯¯. /
Vector3
¯¯0 7
.
¯¯7 8
back
¯¯8 <
,
¯¯< =
	transform
¯¯> G
.
¯¯G H
position
¯¯H P
)
¯¯P Q
.
¯¯Q R
Raycast
¯¯R Y
(
¯¯Y Z
ray
¯¯Z ]
,
¯¯] ^
out
¯¯_ b
enter
¯¯c h
)
¯¯h i
)
¯¯i j
return
˘˘ 
false
˘˘ 
;
˘˘ 

worldPoint
˚˚ 
=
˚˚ 
ray
˚˚ 
.
˚˚ 
GetPoint
˚˚ %
(
˚˚% &
enter
˚˚& +
)
˚˚+ ,
;
˚˚, -
return
˝˝ 
true
˝˝ 
;
˝˝ 
}
˛˛ 	
private
ÅÅ 
struct
ÅÅ 
LineSegment
ÅÅ "
{
ÇÇ 	
public
ÉÉ 
Vector3
ÉÉ 
Point1
ÉÉ !
;
ÉÉ! "
public
ÑÑ 
Vector3
ÑÑ 
Point2
ÑÑ !
;
ÑÑ! "
public
ÜÜ 
LineSegment
ÜÜ 
(
ÜÜ 
Vector3
ÜÜ &
p1
ÜÜ' )
,
ÜÜ) *
Vector3
ÜÜ+ 2
p2
ÜÜ3 5
)
ÜÜ5 6
{
áá 
Point1
àà 
=
àà 
p1
àà 
;
àà 
Point2
ââ 
=
ââ 
p2
ââ 
;
ââ 
}
ää 
}
ãã 	
private
ññ 
static
ññ 
bool
ññ  
IntersectLinePlane
ññ .
(
ññ. /
LineSegment
ññ/ :
line
ññ; ?
,
ññ? @
Vector3
ññA H
point
ññI N
,
ññN O
Vector3
ññP W
normal
ññX ^
,
ññ^ _
out
ññ` c
Vector3
ññd k
intersectingPoint
ññl }
)
ññ} ~
{
óó 	
intersectingPoint
òò 
=
òò 
Vector3
òò  '
.
òò' (
zero
òò( ,
;
òò, -
Vector3
ôô 
u
ôô 
=
ôô 
line
ôô 
.
ôô 
Point2
ôô #
-
ôô$ %
line
ôô& *
.
ôô* +
Point1
ôô+ 1
;
ôô1 2
Vector3
öö 
w
öö 
=
öö 
line
öö 
.
öö 
Point1
öö #
-
öö$ %
point
öö& +
;
öö+ ,
float
úú 
D
úú 
=
úú 
Vector3
úú 
.
úú 
Dot
úú !
(
úú! "
normal
úú" (
,
úú( )
u
úú* +
)
úú+ ,
;
úú, -
float
ùù 
N
ùù 
=
ùù 
-
ùù 
Vector3
ùù 
.
ùù 
Dot
ùù "
(
ùù" #
normal
ùù# )
,
ùù) *
w
ùù+ ,
)
ùù, -
;
ùù- .
if
üü 
(
üü 
Mathf
üü 
.
üü 
Abs
üü 
(
üü 
D
üü 
)
üü 
<
üü 
Mathf
üü $
.
üü$ %
Epsilon
üü% ,
)
üü, -
{
†† 
if
°° 
(
°° 
N
°° 
==
°° 
$num
°° 
)
°° 
return
¢¢ 
true
¢¢ 
;
¢¢  
else
££ 
return
§§ 
false
§§  
;
§§  !
}
•• 
float
ßß 
sI
ßß 
=
ßß 
N
ßß 
/
ßß 
D
ßß 
;
ßß 
if
©© 
(
©© 
sI
©© 
<
©© 
$num
©© 
||
©© 
sI
©© 
>
©© 
$num
©©  
)
©©  !
return
™™ 
false
™™ 
;
™™ 
intersectingPoint
¨¨ 
=
¨¨ 
line
¨¨  $
.
¨¨$ %
Point1
¨¨% +
+
¨¨, -
sI
¨¨. 0
*
¨¨1 2
u
¨¨3 4
;
¨¨4 5
return
ÆÆ 
true
ÆÆ 
;
ÆÆ 
}
ØØ 	
public
ππ 
static
ππ 
float
ππ 
DistanceToLine
ππ *
(
ππ* +
Vector3
ππ+ 2
a
ππ3 4
,
ππ4 5
Vector3
ππ6 =
b
ππ> ?
,
ππ? @
Vector3
ππA H
point
ππI N
)
ππN O
{
∫∫ 	
Vector3
ªª 
n
ªª 
=
ªª 
b
ªª 
-
ªª 
a
ªª 
;
ªª 
Vector3
ºº 
pa
ºº 
=
ºº 
a
ºº 
-
ºº 
point
ºº "
;
ºº" #
float
ææ 
c
ææ 
=
ææ 
Vector3
ææ 
.
ææ 
Dot
ææ !
(
ææ! "
n
ææ# $
,
ææ$ %
pa
ææ& (
)
ææ) *
;
ææ* +
if
¡¡ 
(
¡¡ 
c
¡¡ 
>
¡¡ 
$num
¡¡ 
)
¡¡ 
return
¬¬ 
Vector3
¬¬ 
.
¬¬ 
Dot
¬¬ "
(
¬¬" #
pa
¬¬$ &
,
¬¬& '
pa
¬¬( *
)
¬¬+ ,
;
¬¬, -
Vector3
ƒƒ 
bp
ƒƒ 
=
ƒƒ 
point
ƒƒ 
-
ƒƒ  
b
ƒƒ! "
;
ƒƒ" #
if
«« 
(
«« 
Vector3
«« 
.
«« 
Dot
«« 
(
«« 
n
«« 
,
«« 
bp
««  "
)
««# $
>
««% &
$num
««' +
)
««, -
return
»» 
Vector3
»» 
.
»» 
Dot
»» "
(
»»" #
bp
»»$ &
,
»»& '
bp
»»( *
)
»»+ ,
;
»», -
Vector3
ÀÀ 
e
ÀÀ 
=
ÀÀ 
pa
ÀÀ 
-
ÀÀ 
n
ÀÀ 
*
ÀÀ  
(
ÀÀ! "
c
ÀÀ" #
/
ÀÀ$ %
Vector3
ÀÀ& -
.
ÀÀ- .
Dot
ÀÀ. 1
(
ÀÀ1 2
n
ÀÀ3 4
,
ÀÀ4 5
n
ÀÀ6 7
)
ÀÀ8 9
)
ÀÀ9 :
;
ÀÀ: ;
return
ÕÕ 
Vector3
ÕÕ 
.
ÕÕ 
Dot
ÕÕ 
(
ÕÕ 
e
ÕÕ  !
,
ÕÕ! "
e
ÕÕ# $
)
ÕÕ% &
;
ÕÕ& '
}
ŒŒ 	
const
˜˜ 
string
˜˜ 
k_lookupStringL
˜˜ $
=
˜˜% &
$str˜˜' ©
;˜˜© ™
const
¸¸ 
string
¸¸ 
k_lookupStringU
¸¸ $
=
¸¸% &
$str¸¸' ©
;¸¸© ™
public
ÇÇ 
static
ÇÇ 
char
ÇÇ 
ToLowerFast
ÇÇ &
(
ÇÇ& '
char
ÇÇ' +
c
ÇÇ, -
)
ÇÇ- .
{
ÉÉ 	
if
ÑÑ 
(
ÑÑ 
c
ÑÑ 
>
ÑÑ 
k_lookupStringL
ÑÑ #
.
ÑÑ# $
Length
ÑÑ$ *
-
ÑÑ+ ,
$num
ÑÑ- .
)
ÑÑ. /
return
ÖÖ 
c
ÖÖ 
;
ÖÖ 
return
áá 
k_lookupStringL
áá "
[
áá" #
c
áá# $
]
áá$ %
;
áá% &
}
àà 	
public
çç 
static
çç 
char
çç 
ToUpperFast
çç &
(
çç& '
char
çç' +
c
çç, -
)
çç- .
{
éé 	
if
èè 
(
èè 
c
èè 
>
èè 
k_lookupStringU
èè #
.
èè# $
Length
èè$ *
-
èè+ ,
$num
èè- .
)
èè. /
return
êê 
c
êê 
;
êê 
return
íí 
k_lookupStringU
íí "
[
íí" #
c
íí# $
]
íí$ %
;
íí% &
}
ìì 	
public
öö 
static
öö 
int
öö 
GetHashCode
öö %
(
öö% &
string
öö& ,
s
öö- .
)
öö. /
{
õõ 	
int
úú 
hashCode
úú 
=
úú 
$num
úú 
;
úú 
for
ûû 
(
ûû 
int
ûû 
i
ûû 
=
ûû 
$num
ûû 
;
ûû 
i
ûû 
<
ûû 
s
ûû  !
.
ûû! "
Length
ûû" (
;
ûû( )
i
ûû* +
++
ûû+ -
)
ûû- .
hashCode
üü 
=
üü 
(
üü 
(
üü 
hashCode
üü %
<<
üü& (
$num
üü) *
)
üü* +
+
üü, -
hashCode
üü. 6
)
üü6 7
^
üü8 9
ToUpperFast
üü: E
(
üüE F
s
üüF G
[
üüG H
i
üüH I
]
üüI J
)
üüJ K
;
üüK L
return
°° 
hashCode
°° 
;
°° 
}
¢¢ 	
public
®® 
static
®® 
int
®® 
GetSimpleHashCode
®® +
(
®®+ ,
string
®®, 2
s
®®3 4
)
®®4 5
{
©© 	
int
™™ 
hashCode
™™ 
=
™™ 
$num
™™ 
;
™™ 
for
¨¨ 
(
¨¨ 
int
¨¨ 
i
¨¨ 
=
¨¨ 
$num
¨¨ 
;
¨¨ 
i
¨¨ 
<
¨¨ 
s
¨¨  !
.
¨¨! "
Length
¨¨" (
;
¨¨( )
i
¨¨* +
++
¨¨+ -
)
¨¨- .
hashCode
≠≠ 
=
≠≠ 
(
≠≠ 
hashCode
≠≠ $
<<
≠≠% '
$num
≠≠( )
)
≠≠) *
+
≠≠+ ,
hashCode
≠≠- 5
^
≠≠6 7
s
≠≠8 9
[
≠≠9 :
i
≠≠: ;
]
≠≠; <
;
≠≠< =
return
ØØ 
hashCode
ØØ 
;
ØØ 
}
∞∞ 	
public
∂∂ 
static
∂∂ 
uint
∂∂ (
GetSimpleHashCodeLowercase
∂∂ 5
(
∂∂5 6
string
∂∂6 <
s
∂∂= >
)
∂∂> ?
{
∑∑ 	
uint
∏∏ 
hashCode
∏∏ 
=
∏∏ 
$num
∏∏  
;
∏∏  !
for
∫∫ 
(
∫∫ 
int
∫∫ 
i
∫∫ 
=
∫∫ 
$num
∫∫ 
;
∫∫ 
i
∫∫ 
<
∫∫ 
s
∫∫  !
.
∫∫! "
Length
∫∫" (
;
∫∫( )
i
∫∫* +
++
∫∫+ -
)
∫∫- .
hashCode
ªª 
=
ªª 
(
ªª 
hashCode
ªª $
<<
ªª% '
$num
ªª( )
)
ªª) *
+
ªª+ ,
hashCode
ªª- 5
^
ªª6 7
ToLowerFast
ªª8 C
(
ªªC D
s
ªªD E
[
ªªE F
i
ªªF G
]
ªªG H
)
ªªH I
;
ªªI J
return
ΩΩ 
hashCode
ΩΩ 
;
ΩΩ 
}
ææ 	
public
∆∆ 
static
∆∆ 
int
∆∆ 
HexToInt
∆∆ "
(
∆∆" #
char
∆∆# '
hex
∆∆( +
)
∆∆+ ,
{
«« 	
switch
»» 
(
»» 
hex
»» 
)
»» 
{
…… 
case
   
$char
   
:
   
return
    
$num
  ! "
;
  " #
case
ÀÀ 
$char
ÀÀ 
:
ÀÀ 
return
ÀÀ  
$num
ÀÀ! "
;
ÀÀ" #
case
ÃÃ 
$char
ÃÃ 
:
ÃÃ 
return
ÃÃ  
$num
ÃÃ! "
;
ÃÃ" #
case
ÕÕ 
$char
ÕÕ 
:
ÕÕ 
return
ÕÕ  
$num
ÕÕ! "
;
ÕÕ" #
case
ŒŒ 
$char
ŒŒ 
:
ŒŒ 
return
ŒŒ  
$num
ŒŒ! "
;
ŒŒ" #
case
œœ 
$char
œœ 
:
œœ 
return
œœ  
$num
œœ! "
;
œœ" #
case
–– 
$char
–– 
:
–– 
return
––  
$num
––! "
;
––" #
case
—— 
$char
—— 
:
—— 
return
——  
$num
——! "
;
——" #
case
““ 
$char
““ 
:
““ 
return
““  
$num
““! "
;
““" #
case
”” 
$char
”” 
:
”” 
return
””  
$num
””! "
;
””" #
case
‘‘ 
$char
‘‘ 
:
‘‘ 
return
‘‘  
$num
‘‘! #
;
‘‘# $
case
’’ 
$char
’’ 
:
’’ 
return
’’  
$num
’’! #
;
’’# $
case
÷÷ 
$char
÷÷ 
:
÷÷ 
return
÷÷  
$num
÷÷! #
;
÷÷# $
case
◊◊ 
$char
◊◊ 
:
◊◊ 
return
◊◊  
$num
◊◊! #
;
◊◊# $
case
ÿÿ 
$char
ÿÿ 
:
ÿÿ 
return
ÿÿ  
$num
ÿÿ! #
;
ÿÿ# $
case
ŸŸ 
$char
ŸŸ 
:
ŸŸ 
return
ŸŸ  
$num
ŸŸ! #
;
ŸŸ# $
case
⁄⁄ 
$char
⁄⁄ 
:
⁄⁄ 
return
⁄⁄  
$num
⁄⁄! #
;
⁄⁄# $
case
€€ 
$char
€€ 
:
€€ 
return
€€  
$num
€€! #
;
€€# $
case
‹‹ 
$char
‹‹ 
:
‹‹ 
return
‹‹  
$num
‹‹! #
;
‹‹# $
case
›› 
$char
›› 
:
›› 
return
››  
$num
››! #
;
››# $
case
ﬁﬁ 
$char
ﬁﬁ 
:
ﬁﬁ 
return
ﬁﬁ  
$num
ﬁﬁ! #
;
ﬁﬁ# $
case
ﬂﬂ 
$char
ﬂﬂ 
:
ﬂﬂ 
return
ﬂﬂ  
$num
ﬂﬂ! #
;
ﬂﬂ# $
}
‡‡ 
return
·· 
$num
·· 
;
·· 
}
‚‚ 	
public
ÍÍ 
static
ÍÍ 
int
ÍÍ 
StringHexToInt
ÍÍ (
(
ÍÍ( )
string
ÍÍ) /
s
ÍÍ0 1
)
ÍÍ1 2
{
ÎÎ 	
int
ÏÏ 
value
ÏÏ 
=
ÏÏ 
$num
ÏÏ 
;
ÏÏ 
for
ÓÓ 
(
ÓÓ 
int
ÓÓ 
i
ÓÓ 
=
ÓÓ 
$num
ÓÓ 
;
ÓÓ 
i
ÓÓ 
<
ÓÓ 
s
ÓÓ  !
.
ÓÓ! "
Length
ÓÓ" (
;
ÓÓ( )
i
ÓÓ* +
++
ÓÓ+ -
)
ÓÓ- .
{
ÔÔ 
value
 
+=
 
HexToInt
 !
(
! "
s
" #
[
# $
i
$ %
]
% &
)
& '
*
( )
(
* +
int
+ .
)
. /
Mathf
/ 4
.
4 5
Pow
5 8
(
8 9
$num
9 ;
,
; <
(
= >
s
> ?
.
? @
Length
@ F
-
G H
$num
I J
)
J K
-
L M
i
N O
)
O P
;
P Q
}
ÒÒ 
return
ÛÛ 
value
ÛÛ 
;
ÛÛ 
}
ÙÙ 	
}
ˆˆ 
}˜˜ Ä
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_SpriteGlyph.cs
	namespace 	
TMPro
 
{ 
[

 
Serializable

 
]

 
public 

class 
TMP_SpriteGlyph  
:! "
Glyph# (
{ 
public 
Sprite 
sprite 
; 
public 
TMP_SpriteGlyph 
( 
)  
{! "
}# $
public!! 
TMP_SpriteGlyph!! 
(!! 
uint!! #
index!!$ )
,!!) *
GlyphMetrics!!+ 7
metrics!!8 ?
,!!? @
	GlyphRect!!A J
	glyphRect!!K T
,!!T U
float!!V [
scale!!\ a
,!!a b
int!!c f

atlasIndex!!g q
)!!q r
{"" 	
this## 
.## 
index## 
=## 
index## 
;## 
this$$ 
.$$ 
metrics$$ 
=$$ 
metrics$$ "
;$$" #
this%% 
.%% 
	glyphRect%% 
=%% 
	glyphRect%% &
;%%& '
this&& 
.&& 
scale&& 
=&& 
scale&& 
;&& 
this'' 
.'' 

atlasIndex'' 
='' 

atlasIndex'' (
;''( )
}(( 	
public33 
TMP_SpriteGlyph33 
(33 
uint33 #
index33$ )
,33) *
GlyphMetrics33+ 7
metrics338 ?
,33? @
	GlyphRect33A J
	glyphRect33K T
,33T U
float33V [
scale33\ a
,33a b
int33c f

atlasIndex33g q
,33q r
Sprite33s y
sprite	33z Ä
)
33Ä Å
{44 	
this55 
.55 
index55 
=55 
index55 
;55 
this66 
.66 
metrics66 
=66 
metrics66 "
;66" #
this77 
.77 
	glyphRect77 
=77 
	glyphRect77 &
;77& '
this88 
.88 
scale88 
=88 
scale88 
;88 
this99 
.99 

atlasIndex99 
=99 

atlasIndex99 (
;99( )
this:: 
.:: 
sprite:: 
=:: 
sprite::  
;::  !
};; 	
}<< 
}== ∆
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\ITextPreProcessor.cs
	namespace 	
TMPro
 
{ 
public 

	interface 
ITextPreprocessor &
{		 
string 
PreprocessText 
( 
string $
text% )
)) *
;* +
} 
} ±ß
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMPro_MeshUtilities.cs
	namespace 	
TMPro
 
{ 
public 

enum %
TMP_VertexDataUpdateFlags )
{ 
None 
= 
$num 
, 
Vertices 
= 
$num 
, 
Uv0 
= 
$num 
, 
Uv2 
= 
$num 
, 
Uv4 
= 
$num 
, 
Colors32 
= 
$num 
, 
All 
= 
$num 
} 
; 
[GG 
SerializableGG 
]GG 
publicHH 

structHH 
VertexGradientHH  
{II 
publicJJ 
ColorJJ 
topLeftJJ 
;JJ 
publicKK 
ColorKK 
topRightKK 
;KK 
publicLL 
ColorLL 

bottomLeftLL 
;LL  
publicMM 
ColorMM 
bottomRightMM  
;MM  !
publicOO 
VertexGradientOO 
(OO 
ColorOO $
colorOO% *
)OO* +
{PP 	
thisQQ 
.QQ 
topLeftQQ 
=QQ 
colorQQ  
;QQ  !
thisRR 
.RR 
topRightRR 
=RR 
colorRR !
;RR! "
thisSS 
.SS 

bottomLeftSS 
=SS 
colorSS #
;SS# $
thisTT 
.TT 
bottomRightTT 
=TT 
colorTT $
;TT$ %
}UU 	
public^^ 
VertexGradient^^ 
(^^ 
Color^^ #
color0^^$ *
,^^* +
Color^^, 1
color1^^2 8
,^^8 9
Color^^: ?
color2^^@ F
,^^F G
Color^^H M
color3^^N T
)^^T U
{__ 	
this`` 
.`` 
topLeft`` 
=`` 
color0`` !
;``! "
thisaa 
.aa 
topRightaa 
=aa 
color1aa "
;aa" #
thisbb 
.bb 

bottomLeftbb 
=bb 
color2bb $
;bb$ %
thiscc 
.cc 
bottomRightcc 
=cc 
color3cc %
;cc% &
}dd 	
}ee 
publichh 

structhh 
TMP_PageInfohh 
{ii 
publicjj 
intjj 
firstCharacterIndexjj &
;jj& '
publickk 
intkk 
lastCharacterIndexkk %
;kk% &
publicll 
floatll 
ascenderll 
;ll 
publicmm 
floatmm 
baseLinemm 
;mm 
publicnn 
floatnn 
	descendernn 
;nn 
}pp 
publicvv 

structvv 
TMP_LinkInfovv 
{ww 
publicxx 
TMP_Textxx 
textComponentxx %
;xx% &
publiczz 
intzz 
hashCodezz 
;zz 
public|| 
int|| %
linkIdFirstCharacterIndex|| ,
;||, -
public}} 
int}} 
linkIdLength}} 
;}}  
public~~ 
int~~ '
linkTextfirstCharacterIndex~~ .
;~~. /
public 
int 
linkTextLength !
;! "
internal
ÅÅ 
char
ÅÅ 
[
ÅÅ 
]
ÅÅ 
linkID
ÅÅ 
;
ÅÅ 
internal
ÑÑ 
void
ÑÑ 
	SetLinkID
ÑÑ 
(
ÑÑ  
char
ÑÑ  $
[
ÑÑ$ %
]
ÑÑ% &
text
ÑÑ' +
,
ÑÑ+ ,
int
ÑÑ- 0

startIndex
ÑÑ1 ;
,
ÑÑ; <
int
ÑÑ= @
length
ÑÑA G
)
ÑÑG H
{
ÖÖ 	
if
ÜÜ 
(
ÜÜ 
linkID
ÜÜ 
==
ÜÜ 
null
ÜÜ 
||
ÜÜ !
linkID
ÜÜ" (
.
ÜÜ( )
Length
ÜÜ) /
<
ÜÜ0 1
length
ÜÜ2 8
)
ÜÜ8 9
linkID
ÜÜ: @
=
ÜÜA B
new
ÜÜC F
char
ÜÜG K
[
ÜÜK L
length
ÜÜL R
]
ÜÜR S
;
ÜÜS T
for
àà 
(
àà 
int
àà 
i
àà 
=
àà 
$num
àà 
;
àà 
i
àà 
<
àà 
length
àà  &
;
àà& '
i
àà( )
++
àà) +
)
àà+ ,
linkID
ââ 
[
ââ 
i
ââ 
]
ââ 
=
ââ 
text
ââ  
[
ââ  !

startIndex
ââ! +
+
ââ, -
i
ââ. /
]
ââ/ 0
;
ââ0 1
}
ää 	
public
ëë 
string
ëë 
GetLinkText
ëë !
(
ëë! "
)
ëë" #
{
íí 	
string
ìì 
text
ìì 
=
ìì 
string
ìì  
.
ìì  !
Empty
ìì! &
;
ìì& '
TMP_TextInfo
îî 
textInfo
îî !
=
îî" #
textComponent
îî$ 1
.
îî1 2
textInfo
îî2 :
;
îî: ;
for
ññ 
(
ññ 
int
ññ 
i
ññ 
=
ññ )
linkTextfirstCharacterIndex
ññ 4
;
ññ4 5
i
ññ6 7
<
ññ8 9)
linkTextfirstCharacterIndex
ññ: U
+
ññV W
linkTextLength
ññX f
;
ññf g
i
ññh i
++
ññi k
)
ññk l
text
óó 
+=
óó 
textInfo
óó  
.
óó  !
characterInfo
óó! .
[
óó. /
i
óó/ 0
]
óó0 1
.
óó1 2
	character
óó2 ;
;
óó; <
return
ôô 
text
ôô 
;
ôô 
}
öö 	
public
¢¢ 
string
¢¢ 
	GetLinkID
¢¢ 
(
¢¢  
)
¢¢  !
{
££ 	
if
§§ 
(
§§ 
textComponent
§§ 
==
§§  
null
§§! %
)
§§% &
return
•• 
string
•• 
.
•• 
Empty
•• #
;
••# $
return
ßß 
new
ßß 
string
ßß 
(
ßß 
linkID
ßß $
,
ßß$ %
$num
ßß& '
,
ßß' (
linkIdLength
ßß) 5
)
ßß5 6
;
ßß6 7
}
™™ 	
}
´´ 
public
±± 

struct
±± 
TMP_WordInfo
±± 
{
≤≤ 
public
µµ 
TMP_Text
µµ 
textComponent
µµ %
;
µµ% &
public
∑∑ 
int
∑∑ !
firstCharacterIndex
∑∑ &
;
∑∑& '
public
∏∏ 
int
∏∏  
lastCharacterIndex
∏∏ %
;
∏∏% &
public
ππ 
int
ππ 
characterCount
ππ !
;
ππ! "
public
¿¿ 
string
¿¿ 
GetWord
¿¿ 
(
¿¿ 
)
¿¿ 
{
¡¡ 	
string
¬¬ 
word
¬¬ 
=
¬¬ 
string
¬¬  
.
¬¬  !
Empty
¬¬! &
;
¬¬& '
TMP_CharacterInfo
√√ 
[
√√ 
]
√√ 
charInfo
√√  (
=
√√) *
textComponent
√√+ 8
.
√√8 9
textInfo
√√9 A
.
√√A B
characterInfo
√√B O
;
√√O P
for
≈≈ 
(
≈≈ 
int
≈≈ 
i
≈≈ 
=
≈≈ !
firstCharacterIndex
≈≈ ,
;
≈≈, -
i
≈≈. /
<
≈≈0 1 
lastCharacterIndex
≈≈2 D
+
≈≈E F
$num
≈≈G H
;
≈≈H I
i
≈≈J K
++
≈≈K M
)
≈≈M N
{
∆∆ 
word
«« 
+=
«« 
charInfo
««  
[
««  !
i
««! "
]
««" #
.
««# $
	character
««$ -
;
««- .
}
»» 
return
   
word
   
;
   
}
ÀÀ 	
}
ÃÃ 
public
œœ 

struct
œœ 
TMP_SpriteInfo
œœ  
{
–– 
public
—— 
int
—— 
spriteIndex
—— 
;
—— 
public
““ 
int
““ 
characterIndex
““ !
;
““! "
public
”” 
int
”” 
vertexIndex
”” 
;
”” 
}
‘‘ 
public
›› 

struct
›› 
Extents
›› 
{
ﬁﬁ 
internal
ﬂﬂ 
static
ﬂﬂ 
Extents
ﬂﬂ 
zero
ﬂﬂ  $
=
ﬂﬂ% &
new
ﬂﬂ' *
Extents
ﬂﬂ+ 2
(
ﬂﬂ2 3
Vector2
ﬂﬂ3 :
.
ﬂﬂ: ;
zero
ﬂﬂ; ?
,
ﬂﬂ? @
Vector2
ﬂﬂA H
.
ﬂﬂH I
zero
ﬂﬂI M
)
ﬂﬂM N
;
ﬂﬂN O
internal
‡‡ 
static
‡‡ 
Extents
‡‡ 
uninitialized
‡‡  -
=
‡‡. /
new
‡‡0 3
Extents
‡‡4 ;
(
‡‡; <
new
‡‡< ?
Vector2
‡‡@ G
(
‡‡G H
$num
‡‡H M
,
‡‡M N
$num
‡‡O T
)
‡‡T U
,
‡‡U V
new
‡‡W Z
Vector2
‡‡[ b
(
‡‡b c
-
‡‡c d
$num
‡‡d i
,
‡‡i j
-
‡‡k l
$num
‡‡l q
)
‡‡q r
)
‡‡r s
;
‡‡s t
public
‚‚ 
Vector2
‚‚ 
min
‚‚ 
;
‚‚ 
public
„„ 
Vector2
„„ 
max
„„ 
;
„„ 
public
ÂÂ 
Extents
ÂÂ 
(
ÂÂ 
Vector2
ÂÂ 
min
ÂÂ "
,
ÂÂ" #
Vector2
ÂÂ$ +
max
ÂÂ, /
)
ÂÂ/ 0
{
ÊÊ 	
this
ÁÁ 
.
ÁÁ 
min
ÁÁ 
=
ÁÁ 
min
ÁÁ 
;
ÁÁ 
this
ËË 
.
ËË 
max
ËË 
=
ËË 
max
ËË 
;
ËË 
}
ÈÈ 	
public
ÎÎ 
override
ÎÎ 
string
ÎÎ 
ToString
ÎÎ '
(
ÎÎ' (
)
ÎÎ( )
{
ÏÏ 	
string
ÌÌ 
s
ÌÌ 
=
ÌÌ 
$str
ÌÌ 
+
ÌÌ  
min
ÌÌ! $
.
ÌÌ$ %
x
ÌÌ% &
.
ÌÌ& '
ToString
ÌÌ' /
(
ÌÌ/ 0
$str
ÌÌ0 4
)
ÌÌ4 5
+
ÌÌ6 7
$str
ÌÌ8 <
+
ÌÌ= >
min
ÌÌ? B
.
ÌÌB C
y
ÌÌC D
.
ÌÌD E
ToString
ÌÌE M
(
ÌÌM N
$str
ÌÌN R
)
ÌÌR S
+
ÌÌT U
$str
ÌÌV a
+
ÌÌb c
max
ÌÌd g
.
ÌÌg h
x
ÌÌh i
.
ÌÌi j
ToString
ÌÌj r
(
ÌÌr s
$str
ÌÌs w
)
ÌÌw x
+
ÌÌy z
$str
ÌÌ{ 
+ÌÌÄ Å
maxÌÌÇ Ö
.ÌÌÖ Ü
yÌÌÜ á
.ÌÌá à
ToStringÌÌà ê
(ÌÌê ë
$strÌÌë ï
)ÌÌï ñ
+ÌÌó ò
$strÌÌô ú
;ÌÌú ù
return
ÓÓ 
s
ÓÓ 
;
ÓÓ 
}
ÔÔ 	
}
 
[
ÛÛ 
Serializable
ÛÛ 
]
ÛÛ 
public
ÙÙ 

struct
ÙÙ 
Mesh_Extents
ÙÙ 
{
ıı 
public
ˆˆ 
Vector2
ˆˆ 
min
ˆˆ 
;
ˆˆ 
public
˜˜ 
Vector2
˜˜ 
max
˜˜ 
;
˜˜ 
public
˙˙ 
Mesh_Extents
˙˙ 
(
˙˙ 
Vector2
˙˙ #
min
˙˙$ '
,
˙˙' (
Vector2
˙˙) 0
max
˙˙1 4
)
˙˙4 5
{
˚˚ 	
this
¸¸ 
.
¸¸ 
min
¸¸ 
=
¸¸ 
min
¸¸ 
;
¸¸ 
this
˝˝ 
.
˝˝ 
max
˝˝ 
=
˝˝ 
max
˝˝ 
;
˝˝ 
}
˛˛ 	
public
ÄÄ 
override
ÄÄ 
string
ÄÄ 
ToString
ÄÄ '
(
ÄÄ' (
)
ÄÄ( )
{
ÅÅ 	
string
ÇÇ 
s
ÇÇ 
=
ÇÇ 
$str
ÇÇ 
+
ÇÇ  
min
ÇÇ! $
.
ÇÇ$ %
x
ÇÇ% &
.
ÇÇ& '
ToString
ÇÇ' /
(
ÇÇ/ 0
$str
ÇÇ0 4
)
ÇÇ4 5
+
ÇÇ6 7
$str
ÇÇ8 <
+
ÇÇ= >
min
ÇÇ? B
.
ÇÇB C
y
ÇÇC D
.
ÇÇD E
ToString
ÇÇE M
(
ÇÇM N
$str
ÇÇN R
)
ÇÇR S
+
ÇÇT U
$str
ÇÇV a
+
ÇÇb c
max
ÇÇd g
.
ÇÇg h
x
ÇÇh i
.
ÇÇi j
ToString
ÇÇj r
(
ÇÇr s
$str
ÇÇs w
)
ÇÇw x
+
ÇÇy z
$str
ÇÇ{ 
+ÇÇÄ Å
maxÇÇÇ Ö
.ÇÇÖ Ü
yÇÇÜ á
.ÇÇá à
ToStringÇÇà ê
(ÇÇê ë
$strÇÇë ï
)ÇÇï ñ
+ÇÇó ò
$strÇÇô ú
;ÇÇú ù
return
ÑÑ 
s
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
}
ÜÜ 
public
⁄⁄ 

struct
⁄⁄ 
WordWrapState
⁄⁄ 
{
€€ 
public
‹‹ 
int
‹‹  
previous_WordBreak
‹‹ %
;
‹‹% &
public
›› 
int
›› "
total_CharacterCount
›› '
;
››' (
public
ﬁﬁ 
int
ﬁﬁ $
visible_CharacterCount
ﬁﬁ )
;
ﬁﬁ) *
public
ﬂﬂ 
int
ﬂﬂ !
visible_SpriteCount
ﬂﬂ &
;
ﬂﬂ& '
public
‡‡ 
int
‡‡ 
visible_LinkCount
‡‡ $
;
‡‡$ %
public
·· 
int
·· !
firstCharacterIndex
·· &
;
··& '
public
‚‚ 
int
‚‚ (
firstVisibleCharacterIndex
‚‚ -
;
‚‚- .
public
„„ 
int
„„  
lastCharacterIndex
„„ %
;
„„% &
public
‰‰ 
int
‰‰ "
lastVisibleCharIndex
‰‰ '
;
‰‰' (
public
ÂÂ 
int
ÂÂ 

lineNumber
ÂÂ 
;
ÂÂ 
public
ÁÁ 
float
ÁÁ 
maxCapHeight
ÁÁ !
;
ÁÁ! "
public
ËË 
float
ËË 
maxAscender
ËË  
;
ËË  !
public
ÈÈ 
float
ÈÈ 
maxDescender
ÈÈ !
;
ÈÈ! "
public
ÍÍ 
float
ÍÍ !
startOfLineAscender
ÍÍ (
;
ÍÍ( )
public
ÎÎ 
float
ÎÎ 
maxLineAscender
ÎÎ $
;
ÎÎ$ %
public
ÏÏ 
float
ÏÏ 
maxLineDescender
ÏÏ %
;
ÏÏ% &
public
ÌÌ 
float
ÌÌ 
pageAscender
ÌÌ !
;
ÌÌ! "
public
ÔÔ (
HorizontalAlignmentOptions
ÔÔ )!
horizontalAlignment
ÔÔ* =
;
ÔÔ= >
public
 
float
 

marginLeft
 
;
  
public
ÒÒ 
float
ÒÒ 
marginRight
ÒÒ  
;
ÒÒ  !
public
ÛÛ 
float
ÛÛ 
xAdvance
ÛÛ 
;
ÛÛ 
public
ÙÙ 
float
ÙÙ 
preferredWidth
ÙÙ #
;
ÙÙ# $
public
ıı 
float
ıı 
preferredHeight
ıı $
;
ıı$ %
public
˜˜ 
float
˜˜ 
previousLineScale
˜˜ &
;
˜˜& '
public
˘˘ 
int
˘˘ 
	wordCount
˘˘ 
;
˘˘ 
public
˙˙ 

FontStyles
˙˙ 
	fontStyle
˙˙ #
;
˙˙# $
public
˚˚ 
int
˚˚ 
italicAngle
˚˚ 
;
˚˚ 
public
¸¸ 
float
¸¸ 
	fontScale
¸¸ 
;
¸¸ 
public
˝˝ 
float
˝˝ !
fontScaleMultiplier
˝˝ (
;
˝˝( )
public
ˇˇ 
float
ˇˇ 
currentFontSize
ˇˇ $
;
ˇˇ$ %
public
ÄÄ 
float
ÄÄ 
baselineOffset
ÄÄ #
;
ÄÄ# $
public
ÅÅ 
float
ÅÅ 

lineOffset
ÅÅ 
;
ÅÅ  
public
ÇÇ 
bool
ÇÇ !
isDrivenLineSpacing
ÇÇ '
;
ÇÇ' (
public
ÉÉ 
float
ÉÉ .
 glyphHorizontalAdvanceAdjustment
ÉÉ 5
;
ÉÉ5 6
public
ÖÖ 
float
ÖÖ 
cSpace
ÖÖ 
;
ÖÖ 
public
ÜÜ 
float
ÜÜ 
mSpace
ÜÜ 
;
ÜÜ 
public
àà 
TMP_TextInfo
àà 
textInfo
àà $
;
àà$ %
public
ââ 
TMP_LineInfo
ââ 
lineInfo
ââ $
;
ââ$ %
public
ãã 
Color32
ãã 
vertexColor
ãã "
;
ãã" #
public
åå 
Color32
åå 
underlineColor
åå %
;
åå% &
public
çç 
Color32
çç  
strikethroughColor
çç )
;
çç) *
public
éé 
Color32
éé 
highlightColor
éé %
;
éé% &
public
èè  
TMP_FontStyleStack
èè !
basicStyleStack
èè" 1
;
èè1 2
public
êê %
TMP_TextProcessingStack
êê &
<
êê& '
int
êê' *
>
êê* +
italicAngleStack
êê, <
;
êê< =
public
ëë %
TMP_TextProcessingStack
ëë &
<
ëë& '
Color32
ëë' .
>
ëë. /

colorStack
ëë0 :
;
ëë: ;
public
íí %
TMP_TextProcessingStack
íí &
<
íí& '
Color32
íí' .
>
íí. /!
underlineColorStack
íí0 C
;
ííC D
public
ìì %
TMP_TextProcessingStack
ìì &
<
ìì& '
Color32
ìì' .
>
ìì. /%
strikethroughColorStack
ìì0 G
;
ììG H
public
îî %
TMP_TextProcessingStack
îî &
<
îî& '
Color32
îî' .
>
îî. /!
highlightColorStack
îî0 C
;
îîC D
public
ïï %
TMP_TextProcessingStack
ïï &
<
ïï& '
HighlightState
ïï' 5
>
ïï5 6!
highlightStateStack
ïï7 J
;
ïïJ K
public
ññ %
TMP_TextProcessingStack
ññ &
<
ññ& '
TMP_ColorGradient
ññ' 8
>
ññ8 9 
colorGradientStack
ññ: L
;
ññL M
public
óó %
TMP_TextProcessingStack
óó &
<
óó& '
float
óó' ,
>
óó, -
	sizeStack
óó. 7
;
óó7 8
public
òò %
TMP_TextProcessingStack
òò &
<
òò& '
float
òò' ,
>
òò, -
indentStack
òò. 9
;
òò9 :
public
ôô %
TMP_TextProcessingStack
ôô &
<
ôô& '

FontWeight
ôô' 1
>
ôô1 2
fontWeightStack
ôô3 B
;
ôôB C
public
öö %
TMP_TextProcessingStack
öö &
<
öö& '
int
öö' *
>
öö* +

styleStack
öö, 6
;
öö6 7
public
õõ %
TMP_TextProcessingStack
õõ &
<
õõ& '
float
õõ' ,
>
õõ, -
baselineStack
õõ. ;
;
õõ; <
public
úú %
TMP_TextProcessingStack
úú &
<
úú& '
int
úú' *
>
úú* +
actionStack
úú, 7
;
úú7 8
public
ùù %
TMP_TextProcessingStack
ùù &
<
ùù& '
MaterialReference
ùù' 8
>
ùù8 9$
materialReferenceStack
ùù: P
;
ùùP Q
public
ûû %
TMP_TextProcessingStack
ûû &
<
ûû& '(
HorizontalAlignmentOptions
ûû' A
>
ûûA B$
lineJustificationStack
ûûC Y
;
ûûY Z
public
üü 
int
üü 
spriteAnimationID
üü $
;
üü$ %
public
°° 
TMP_FontAsset
°° 
currentFontAsset
°° -
;
°°- .
public
¢¢ 
TMP_SpriteAsset
¢¢  
currentSpriteAsset
¢¢ 1
;
¢¢1 2
public
££ 
Material
££ 
currentMaterial
££ '
;
££' (
public
§§ 
int
§§ "
currentMaterialIndex
§§ '
;
§§' (
public
¶¶ 
Extents
¶¶ 
meshExtents
¶¶ "
;
¶¶" #
public
®® 
bool
®® 
tagNoParsing
®®  
;
®®  !
public
©© 
bool
©©  
isNonBreakingSpace
©© &
;
©©& '
}
™™ 
public
∞∞ 

struct
∞∞ 
TagAttribute
∞∞ 
{
±± 
public
≤≤ 
int
≤≤ 

startIndex
≤≤ 
;
≤≤ 
public
≥≥ 
int
≥≥ 
length
≥≥ 
;
≥≥ 
public
¥¥ 
int
¥¥ 
hashCode
¥¥ 
;
¥¥ 
}
µµ 
public
∏∏ 

struct
∏∏ "
RichTextTagAttribute
∏∏ &
{
ππ 
public
∫∫ 
int
∫∫ 
nameHashCode
∫∫ 
;
∫∫  
public
ªª 
int
ªª 
valueHashCode
ªª  
;
ªª  !
public
ºº 
TagValueType
ºº 
	valueType
ºº %
;
ºº% &
public
ΩΩ 
int
ΩΩ 
valueStartIndex
ΩΩ "
;
ΩΩ" #
public
ææ 
int
ææ 
valueLength
ææ 
;
ææ 
public
øø 
TagUnitType
øø 
unitType
øø #
;
øø# $
}
¿¿ 
}¬¬ Ûp
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_CharacterInfo.cs
	namespace 	
TMPro
 
{ 
public 

struct 

TMP_Vertex 
{ 
public		 
Vector3		 
position		 
;		  
public

 
Vector2

 
uv

 
;

 
public 
Vector2 
uv2 
; 
public 
Vector2 
uv4 
; 
public 
Color32 
color 
; 
public 
static 

TMP_Vertex  
zero! %
{& '
get( +
{, -
return. 4
k_Zero5 ;
;; <
}= >
}? @
static 
readonly 

TMP_Vertex "
k_Zero# )
=* +
new, /

TMP_Vertex0 :
(: ;
); <
;< =
} 
public 

struct 

TMP_Offset 
{ 
public 
float 
left 
{ 
get 
{  !
return" (
m_Left) /
;/ 0
}1 2
set3 6
{7 8
m_Left9 ?
=@ A
valueB G
;G H
}I J
}K L
public 
float 
right 
{ 
get  
{! "
return# )
m_Right* 1
;1 2
}3 4
set5 8
{9 :
m_Right; B
=C D
valueE J
;J K
}L M
}N O
public   
float   
top   
{   
get   
{    
return  ! '
m_Top  ( -
;  - .
}  / 0
set  1 4
{  5 6
m_Top  7 <
=  = >
value  ? D
;  D E
}  F G
}  H I
public"" 
float"" 
bottom"" 
{"" 
get"" !
{""" #
return""$ *
m_Bottom""+ 3
;""3 4
}""5 6
set""7 :
{""; <
m_Bottom""= E
=""F G
value""H M
;""M N
}""O P
}""Q R
public$$ 
float$$ 

horizontal$$ 
{$$  !
get$$" %
{$$& '
return$$( .
m_Left$$/ 5
;$$5 6
}$$7 8
set$$9 <
{$$= >
m_Left$$? E
=$$F G
value$$H M
;$$M N
m_Right$$O V
=$$W X
value$$Y ^
;$$^ _
}$$` a
}$$b c
public&& 
float&& 
vertical&& 
{&& 
get&&  #
{&&$ %
return&&& ,
m_Top&&- 2
;&&2 3
}&&4 5
set&&6 9
{&&: ;
m_Top&&< A
=&&B C
value&&D I
;&&I J
m_Bottom&&K S
=&&T U
value&&V [
;&&[ \
}&&] ^
}&&_ `
public++ 
static++ 

TMP_Offset++  
zero++! %
{++& '
get++( +
{++, -
return++. 4
k_ZeroOffset++5 A
;++A B
}++C D
}++E F
float11 
m_Left11 
;11 
float22 
m_Right22 
;22 
float33 
m_Top33 
;33 
float44 
m_Bottom44 
;44 
static66 
readonly66 

TMP_Offset66 "
k_ZeroOffset66# /
=660 1
new662 5

TMP_Offset666 @
(66@ A
$num66A C
,66C D
$num66E G
,66G H
$num66I K
,66K L
$num66M O
)66O P
;66P Q
public?? 

TMP_Offset?? 
(?? 
float?? 
left??  $
,??$ %
float??& +
right??, 1
,??1 2
float??3 8
top??9 <
,??< =
float??> C
bottom??D J
)??J K
{@@ 	
m_LeftAA 
=AA 
leftAA 
;AA 
m_RightBB 
=BB 
rightBB 
;BB 
m_TopCC 
=CC 
topCC 
;CC 
m_BottomDD 
=DD 
bottomDD 
;DD 
}EE 	
publicLL 

TMP_OffsetLL 
(LL 
floatLL 

horizontalLL  *
,LL* +
floatLL, 1
verticalLL2 :
)LL: ;
{MM 	
m_LeftNN 
=NN 

horizontalNN 
;NN  
m_RightOO 
=OO 

horizontalOO  
;OO  !
m_TopPP 
=PP 
verticalPP 
;PP 
m_BottomQQ 
=QQ 
verticalQQ 
;QQ  
}RR 	
publicTT 
staticTT 
boolTT 
operatorTT #
==TT$ &
(TT& '

TMP_OffsetTT' 1
lhsTT2 5
,TT5 6

TMP_OffsetTT7 A
rhsTTB E
)TTE F
{UU 	
returnVV 
lhsVV 
.VV 
m_LeftVV 
==VV  
rhsVV! $
.VV$ %
m_LeftVV% +
&&VV, .
lhsWW 
.WW 
m_RightWW 
==WW  "
rhsWW# &
.WW& '
m_RightWW' .
&&WW/ 1
lhsXX 
.XX 
m_TopXX 
==XX  
rhsXX! $
.XX$ %
m_TopXX% *
&&XX+ -
lhsYY 
.YY 
m_BottomYY  
==YY! #
rhsYY$ '
.YY' (
m_BottomYY( 0
;YY0 1
}ZZ 	
public\\ 
static\\ 
bool\\ 
operator\\ #
!=\\$ &
(\\& '

TMP_Offset\\' 1
lhs\\2 5
,\\5 6

TMP_Offset\\7 A
rhs\\B E
)\\E F
{]] 	
return^^ 
!^^ 
(^^ 
lhs^^ 
==^^ 
rhs^^ 
)^^  
;^^  !
}__ 	
publicaa 
staticaa 

TMP_Offsetaa  
operatoraa! )
*aa* +
(aa+ ,

TMP_Offsetaa, 6
aaa7 8
,aa8 9
floataa: ?
baa@ A
)aaA B
{bb 	
returncc 
newcc 

TMP_Offsetcc !
(cc! "
acc" #
.cc# $
m_Leftcc$ *
*cc+ ,
bcc- .
,cc. /
acc0 1
.cc1 2
m_Rightcc2 9
*cc: ;
bcc< =
,cc= >
acc? @
.cc@ A
m_TopccA F
*ccG H
bccI J
,ccJ K
accL M
.ccM N
m_BottomccN V
*ccW X
bccY Z
)ccZ [
;cc[ \
}dd 	
publicff 
overrideff 
intff 
GetHashCodeff '
(ff' (
)ff( )
{gg 	
returnhh 
basehh 
.hh 
GetHashCodehh #
(hh# $
)hh$ %
;hh% &
}ii 	
publickk 
overridekk 
boolkk 
Equalskk #
(kk# $
objectkk$ *
objkk+ .
)kk. /
{ll 	
returnmm 
basemm 
.mm 
Equalsmm 
(mm 
objmm "
)mm" #
;mm# $
}nn 	
publicpp 
boolpp 
Equalspp 
(pp 

TMP_Offsetpp %
otherpp& +
)pp+ ,
{qq 	
returnrr 
baserr 
.rr 
Equalsrr 
(rr 
otherrr $
)rr$ %
;rr% &
}ss 	
}tt 
publiczz 

structzz 
HighlightStatezz  
{{{ 
public|| 
Color32|| 
color|| 
;|| 
public}} 

TMP_Offset}} 
padding}} !
;}}! "
public 
HighlightState 
( 
Color32 %
color& +
,+ ,

TMP_Offset- 7
padding8 ?
)? @
{
ÄÄ 	
this
ÅÅ 
.
ÅÅ 
color
ÅÅ 
=
ÅÅ 
color
ÅÅ 
;
ÅÅ 
this
ÇÇ 
.
ÇÇ 
padding
ÇÇ 
=
ÇÇ 
padding
ÇÇ "
;
ÇÇ" #
}
ÉÉ 	
public
ÖÖ 
static
ÖÖ 
bool
ÖÖ 
operator
ÖÖ #
==
ÖÖ$ &
(
ÖÖ& '
HighlightState
ÖÖ' 5
lhs
ÖÖ6 9
,
ÖÖ9 :
HighlightState
ÖÖ; I
rhs
ÖÖJ M
)
ÖÖM N
{
ÜÜ 	
return
áá 
lhs
áá 
.
áá 
color
áá 
.
áá 
Compare
áá $
(
áá$ %
rhs
áá% (
.
áá( )
color
áá) .
)
áá. /
&&
áá0 2
lhs
áá3 6
.
áá6 7
padding
áá7 >
==
áá? A
rhs
ááB E
.
ááE F
padding
ááF M
;
ááM N
}
àà 	
public
ää 
static
ää 
bool
ää 
operator
ää #
!=
ää$ &
(
ää& '
HighlightState
ää' 5
lhs
ää6 9
,
ää9 :
HighlightState
ää; I
rhs
ääJ M
)
ääM N
{
ãã 	
return
åå 
!
åå 
(
åå 
lhs
åå 
==
åå 
rhs
åå 
)
åå  
;
åå  !
}
çç 	
public
èè 
override
èè 
int
èè 
GetHashCode
èè '
(
èè' (
)
èè( )
{
êê 	
return
ëë 
base
ëë 
.
ëë 
GetHashCode
ëë #
(
ëë# $
)
ëë$ %
;
ëë% &
}
íí 	
public
îî 
override
îî 
bool
îî 
Equals
îî #
(
îî# $
object
îî$ *
obj
îî+ .
)
îî. /
{
ïï 	
return
ññ 
base
ññ 
.
ññ 
Equals
ññ 
(
ññ 
obj
ññ "
)
ññ" #
;
ññ# $
}
óó 	
public
ôô 
bool
ôô 
Equals
ôô 
(
ôô 
HighlightState
ôô )
other
ôô* /
)
ôô/ 0
{
öö 	
return
õõ 
base
õõ 
.
õõ 
Equals
õõ 
(
õõ 
other
õõ $
)
õõ$ %
;
õõ% &
}
úú 	
}
ùù 
[
°° 
DebuggerDisplay
°° 
(
°° 
$str
°° S
)
°°S T
]
°°T U
public
¢¢ 

struct
¢¢ 
TMP_CharacterInfo
¢¢ #
{
££ 
public
§§ 
char
§§ 
	character
§§ 
;
§§ 
public
®® 
int
®® 
index
®® 
;
®® 
public
©© 
int
©© 
stringLength
©© 
;
©©  
public
™™ !
TMP_TextElementType
™™ "
elementType
™™# .
;
™™. /
public
¨¨ 
TMP_TextElement
¨¨ 
textElement
¨¨ *
;
¨¨* +
public
≠≠ 
TMP_FontAsset
≠≠ 
	fontAsset
≠≠ &
;
≠≠& '
public
ÆÆ 
TMP_SpriteAsset
ÆÆ 
spriteAsset
ÆÆ *
;
ÆÆ* +
public
ØØ 
int
ØØ 
spriteIndex
ØØ 
;
ØØ 
public
∞∞ 
Material
∞∞ 
material
∞∞  
;
∞∞  !
public
±± 
int
±± $
materialReferenceIndex
±± )
;
±±) *
public
≤≤ 
bool
≤≤ &
isUsingAlternateTypeface
≤≤ ,
;
≤≤, -
public
¥¥ 
float
¥¥ 
	pointSize
¥¥ 
;
¥¥ 
public
∑∑ 
int
∑∑ 

lineNumber
∑∑ 
;
∑∑ 
public
ππ 
int
ππ 

pageNumber
ππ 
;
ππ 
public
ºº 
int
ºº 
vertexIndex
ºº 
;
ºº 
public
ΩΩ 

TMP_Vertex
ΩΩ 
	vertex_BL
ΩΩ #
;
ΩΩ# $
public
ææ 

TMP_Vertex
ææ 
	vertex_TL
ææ #
;
ææ# $
public
øø 

TMP_Vertex
øø 
	vertex_TR
øø #
;
øø# $
public
¿¿ 

TMP_Vertex
¿¿ 
	vertex_BR
¿¿ #
;
¿¿# $
public
¬¬ 
Vector3
¬¬ 
topLeft
¬¬ 
;
¬¬ 
public
√√ 
Vector3
√√ 

bottomLeft
√√ !
;
√√! "
public
ƒƒ 
Vector3
ƒƒ 
topRight
ƒƒ 
;
ƒƒ  
public
≈≈ 
Vector3
≈≈ 
bottomRight
≈≈ "
;
≈≈" #
public
«« 
float
«« 
origin
«« 
;
«« 
public
»» 
float
»» 
xAdvance
»» 
;
»» 
public
…… 
float
…… 
ascender
…… 
;
…… 
public
   
float
   
baseLine
   
;
   
public
ÀÀ 
float
ÀÀ 
	descender
ÀÀ 
;
ÀÀ 
internal
ÃÃ 
float
ÃÃ 
adjustedAscender
ÃÃ '
;
ÃÃ' (
internal
ÕÕ 
float
ÕÕ 
adjustedDescender
ÕÕ (
;
ÕÕ( )
public
œœ 
float
œœ 
aspectRatio
œœ  
;
œœ  !
public
–– 
float
–– 
scale
–– 
;
–– 
public
—— 
Color32
—— 
color
—— 
;
—— 
public
““ 
Color32
““ 
underlineColor
““ %
;
““% &
public
”” 
int
”” "
underlineVertexIndex
”” '
;
””' (
public
‘‘ 
Color32
‘‘  
strikethroughColor
‘‘ )
;
‘‘) *
public
’’ 
int
’’ &
strikethroughVertexIndex
’’ +
;
’’+ ,
public
÷÷ 
Color32
÷÷ 
highlightColor
÷÷ %
;
÷÷% &
public
◊◊ 
HighlightState
◊◊ 
highlightState
◊◊ ,
;
◊◊, -
public
ÿÿ 

FontStyles
ÿÿ 
style
ÿÿ 
;
ÿÿ  
public
ŸŸ 
bool
ŸŸ 
	isVisible
ŸŸ 
;
ŸŸ 
}
€€ 
}‹‹ ∆0
ìD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_StyleSheet.cs
	namespace 	
TMPro
 
{ 
[		 
Serializable		 
]		 
[		 &
ExcludeFromPresetAttribute		 -
]		- .
public

 

class

 
TMP_StyleSheet

 
:

  !
ScriptableObject

" 2
{ 
internal 
List 
< 
	TMP_Style 
>  
styles! '
{ 	
get 
{ 
return 
m_StyleList $
;$ %
}& '
} 	
[ 	
SerializeField	 
] 
private 
List 
< 
	TMP_Style 
> 
m_StyleList  +
=, -
new. 1
List2 6
<6 7
	TMP_Style7 @
>@ A
(A B
$numB C
)C D
;D E
private 

Dictionary 
< 
int 
, 
	TMP_Style  )
>) *#
m_StyleLookupDictionary+ B
;B C
private 
void 
Reset 
( 
) 
{ 	'
LoadStyleDictionaryInternal '
(' (
)( )
;) *
} 	
public"" 
	TMP_Style"" 
GetStyle"" !
(""! "
int""" %
hashCode""& .
)"". /
{## 	
if$$ 
($$ #
m_StyleLookupDictionary$$ '
==$$( *
null$$+ /
)$$/ 0'
LoadStyleDictionaryInternal%% +
(%%+ ,
)%%, -
;%%- .
	TMP_Style'' 
style'' 
;'' 
if)) 
()) #
m_StyleLookupDictionary)) '
.))' (
TryGetValue))( 3
())3 4
hashCode))4 <
,))< =
out))> A
style))B G
)))G H
)))H I
return** 
style** 
;** 
return,, 
null,, 
;,, 
}-- 	
public44 
	TMP_Style44 
GetStyle44 !
(44! "
string44" (
name44) -
)44- .
{55 	
if66 
(66 #
m_StyleLookupDictionary66 '
==66( *
null66+ /
)66/ 0'
LoadStyleDictionaryInternal77 +
(77+ ,
)77, -
;77- .
int99 
hashCode99 
=99 $
TMP_TextParsingUtilities99 3
.993 4
GetHashCode994 ?
(99? @
name99@ D
)99D E
;99E F
	TMP_Style:: 
style:: 
;:: 
if<< 
(<< #
m_StyleLookupDictionary<< '
.<<' (
TryGetValue<<( 3
(<<3 4
hashCode<<4 <
,<<< =
out<<> A
style<<B G
)<<G H
)<<H I
return== 
style== 
;== 
return?? 
null?? 
;?? 
}@@ 	
publicEE 
voidEE 
RefreshStylesEE !
(EE! "
)EE" #
{FF 	'
LoadStyleDictionaryInternalGG '
(GG' (
)GG( )
;GG) *
}HH 	
privateMM 
voidMM '
LoadStyleDictionaryInternalMM 0
(MM0 1
)MM1 2
{NN 	
ifOO 
(OO #
m_StyleLookupDictionaryOO '
==OO( *
nullOO+ /
)OO/ 0#
m_StyleLookupDictionaryPP '
=PP( )
newPP* -

DictionaryPP. 8
<PP8 9
intPP9 <
,PP< =
	TMP_StylePP> G
>PPG H
(PPH I
)PPI J
;PPJ K
elseQQ #
m_StyleLookupDictionaryRR '
.RR' (
ClearRR( -
(RR- .
)RR. /
;RR/ 0
forUU 
(UU 
intUU 
iUU 
=UU 
$numUU 
;UU 
iUU 
<UU 
m_StyleListUU  +
.UU+ ,
CountUU, 1
;UU1 2
iUU3 4
++UU4 6
)UU6 7
{VV 
m_StyleListWW 
[WW 
iWW 
]WW 
.WW 
RefreshStyleWW +
(WW+ ,
)WW, -
;WW- .
ifYY 
(YY 
!YY #
m_StyleLookupDictionaryYY ,
.YY, -
ContainsKeyYY- 8
(YY8 9
m_StyleListYY9 D
[YYD E
iYYE F
]YYF G
.YYG H
hashCodeYYH P
)YYP Q
)YYQ R#
m_StyleLookupDictionaryZZ +
.ZZ+ ,
AddZZ, /
(ZZ/ 0
m_StyleListZZ0 ;
[ZZ; <
iZZ< =
]ZZ= >
.ZZ> ?
hashCodeZZ? G
,ZZG H
m_StyleListZZI T
[ZZT U
iZZU V
]ZZV W
)ZZW X
;ZZX Y
}[[ 
int^^ 
normalStyleHashCode^^ #
=^^$ %$
TMP_TextParsingUtilities^^& >
.^^> ?
GetHashCode^^? J
(^^J K
$str^^K S
)^^S T
;^^T U
if__ 
(__ 
!__ #
m_StyleLookupDictionary__ (
.__( )
ContainsKey__) 4
(__4 5
normalStyleHashCode__5 H
)__H I
)__I J
{`` 
	TMP_Styleaa 
styleaa 
=aa  !
newaa" %
	TMP_Styleaa& /
(aa/ 0
$straa0 8
,aa8 9
stringaa: @
.aa@ A
EmptyaaA F
,aaF G
stringaaH N
.aaN O
EmptyaaO T
)aaT U
;aaU V
m_StyleListbb 
.bb 
Addbb 
(bb  
stylebb  %
)bb% &
;bb& '#
m_StyleLookupDictionarycc '
.cc' (
Addcc( +
(cc+ ,
normalStyleHashCodecc, ?
,cc? @
styleccA F
)ccF G
;ccG H
}dd 
TMPro_EventManagerhh 
.hh *
ON_TEXT_STYLE_PROPERTY_CHANGEDhh =
(hh= >
truehh> B
)hhB C
;hhC D
}jj 	
}kk 
}mm –´
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_FontAssetUtilities.cs
	namespace 	
TMPro
 
{ 
public 

class "
TMP_FontAssetUtilities '
{		 
private

 
static

 
readonly

 "
TMP_FontAssetUtilities

  6

s_Instance

7 A
=

B C
new

D G"
TMP_FontAssetUtilities

H ^
(

^ _
)

_ `
;

` a
static "
TMP_FontAssetUtilities %
(% &
)& '
{( )
}* +
public 
static "
TMP_FontAssetUtilities ,
instance- 5
{ 	
get 
{ 
return 

s_Instance #
;# $
}% &
} 	
private 
static 
HashSet 
< 
int "
>" #
k_SearchedAssets$ 4
;4 5
public// 
static// 
TMP_Character// #%
GetCharacterFromFontAsset//$ =
(//= >
uint//> B
unicode//C J
,//J K
TMP_FontAsset//L Y
sourceFontAsset//Z i
,//i j
bool//k o
includeFallbacks	//p Ä
,
//Ä Å

FontStyles
//Ç å
	fontStyle
//ç ñ
,
//ñ ó

FontWeight
//ò ¢

fontWeight
//£ ≠
,
//≠ Æ
out
//Ø ≤
bool
//≥ ∑#
isAlternativeTypeface
//∏ Õ
)
//Õ Œ
{00 	
if11 
(11 
includeFallbacks11  
)11  !
{22 
if33 
(33 
k_SearchedAssets33 $
==33% '
null33( ,
)33, -
k_SearchedAssets44 $
=44% &
new44' *
HashSet44+ 2
<442 3
int443 6
>446 7
(447 8
)448 9
;449 :
else55 
k_SearchedAssets66 $
.66$ %
Clear66% *
(66* +
)66+ ,
;66, -
}77 
return99 .
"GetCharacterFromFontAsset_Internal99 5
(995 6
unicode996 =
,99= >
sourceFontAsset99? N
,99N O
includeFallbacks99P `
,99` a
	fontStyle99b k
,99k l

fontWeight99m w
,99w x
out99y |"
isAlternativeTypeface	99} í
)
99í ì
;
99ì î
}:: 	
privateAA 
staticAA 
TMP_CharacterAA $.
"GetCharacterFromFontAsset_InternalAA% G
(AAG H
uintAAH L
unicodeAAM T
,AAT U
TMP_FontAssetAAV c
sourceFontAssetAAd s
,AAs t
boolAAu y
includeFallbacks	AAz ä
,
AAä ã

FontStyles
AAå ñ
	fontStyle
AAó †
,
AA† °

FontWeight
AA¢ ¨

fontWeight
AA≠ ∑
,
AA∑ ∏
out
AAπ º
bool
AAΩ ¡#
isAlternativeTypeface
AA¬ ◊
)
AA◊ ÿ
{BB 	!
isAlternativeTypefaceCC !
=CC" #
falseCC$ )
;CC) *
TMP_CharacterDD 
	characterDD #
=DD$ %
nullDD& *
;DD* +
boolHH 
isItalicHH 
=HH 
(HH 
	fontStyleHH &
&HH' (

FontStylesHH) 3
.HH3 4
ItalicHH4 :
)HH: ;
==HH< >

FontStylesHH? I
.HHI J
ItalicHHJ P
;HHP Q
ifJJ 
(JJ 
isItalicJJ 
||JJ 

fontWeightJJ &
!=JJ' )

FontWeightJJ* 4
.JJ4 5
RegularJJ5 <
)JJ< =
{KK 
TMP_FontWeightPairMM "
[MM" #
]MM# $
fontWeightsMM% 0
=MM1 2
sourceFontAssetMM3 B
.MMB C
fontWeightTableMMC R
;MMR S
intOO 
fontWeightIndexOO #
=OO$ %
$numOO& '
;OO' (
switchPP 
(PP 

fontWeightPP "
)PP" #
{QQ 
caseRR 

FontWeightRR #
.RR# $
ThinRR$ (
:RR( )
fontWeightIndexSS '
=SS( )
$numSS* +
;SS+ ,
breakTT 
;TT 
caseUU 

FontWeightUU #
.UU# $

ExtraLightUU$ .
:UU. /
fontWeightIndexVV '
=VV( )
$numVV* +
;VV+ ,
breakWW 
;WW 
caseXX 

FontWeightXX #
.XX# $
LightXX$ )
:XX) *
fontWeightIndexYY '
=YY( )
$numYY* +
;YY+ ,
breakZZ 
;ZZ 
case[[ 

FontWeight[[ #
.[[# $
Regular[[$ +
:[[+ ,
fontWeightIndex\\ '
=\\( )
$num\\* +
;\\+ ,
break]] 
;]] 
case^^ 

FontWeight^^ #
.^^# $
Medium^^$ *
:^^* +
fontWeightIndex__ '
=__( )
$num__* +
;__+ ,
break`` 
;`` 
caseaa 

FontWeightaa #
.aa# $
SemiBoldaa$ ,
:aa, -
fontWeightIndexbb '
=bb( )
$numbb* +
;bb+ ,
breakcc 
;cc 
casedd 

FontWeightdd #
.dd# $
Bolddd$ (
:dd( )
fontWeightIndexee '
=ee( )
$numee* +
;ee+ ,
breakff 
;ff 
casegg 

FontWeightgg #
.gg# $
Heavygg$ )
:gg) *
fontWeightIndexhh '
=hh( )
$numhh* +
;hh+ ,
breakii 
;ii 
casejj 

FontWeightjj #
.jj# $
Blackjj$ )
:jj) *
fontWeightIndexkk '
=kk( )
$numkk* +
;kk+ ,
breakll 
;ll 
}mm 
TMP_FontAssetoo 
tempoo "
=oo# $
isItalicoo% -
?oo. /
fontWeightsoo0 ;
[oo; <
fontWeightIndexoo< K
]ooK L
.ooL M
italicTypefaceooM [
:oo\ ]
fontWeightsoo^ i
[ooi j
fontWeightIndexooj y
]ooy z
.ooz {
regularTypeface	oo{ ä
;
ooä ã
ifqq 
(qq 
tempqq 
!=qq 
nullqq  
)qq  !
{rr 
ifss 
(ss 
tempss 
.ss  
characterLookupTabless 1
.ss1 2
TryGetValuess2 =
(ss= >
unicodess> E
,ssE F
outssG J
	characterssK T
)ssT U
)ssU V
{tt !
isAlternativeTypefaceuu -
=uu. /
trueuu0 4
;uu4 5
returnww 
	characterww (
;ww( )
}xx 
ifzz 
(zz 
tempzz 
.zz 
atlasPopulationModezz 0
==zz1 3
AtlasPopulationModezz4 G
.zzG H
DynamiczzH O
)zzO P
{{{ 
if|| 
(|| 
temp||  
.||  !#
TryAddCharacterInternal||! 8
(||8 9
unicode||9 @
,||@ A
out||B E
	character||F O
)||O P
)||P Q
{}} !
isAlternativeTypeface~~ 1
=~~2 3
true~~4 8
;~~8 9
return
ÄÄ "
	character
ÄÄ# ,
;
ÄÄ, -
}
ÅÅ 
}
êê 
}
îî 
}
ññ 
if
öö 
(
öö 
sourceFontAsset
öö 
.
öö  "
characterLookupTable
öö  4
.
öö4 5
TryGetValue
öö5 @
(
öö@ A
unicode
ööA H
,
ööH I
out
ööJ M
	character
ööN W
)
ööW X
)
ööX Y
return
õõ 
	character
õõ  
;
õõ  !
if
ùù 
(
ùù 
sourceFontAsset
ùù 
.
ùù  !
atlasPopulationMode
ùù  3
==
ùù4 6!
AtlasPopulationMode
ùù7 J
.
ùùJ K
Dynamic
ùùK R
)
ùùR S
{
ûû 
if
üü 
(
üü 
sourceFontAsset
üü #
.
üü# $%
TryAddCharacterInternal
üü$ ;
(
üü; <
unicode
üü< C
,
üüC D
out
üüE H
	character
üüI R
)
üüR S
)
üüS T
return
†† 
	character
†† $
;
††$ %
}
°° 
if
§§ 
(
§§ 
	character
§§ 
==
§§ 
null
§§ !
&&
§§" $
includeFallbacks
§§% 5
&&
§§6 8
sourceFontAsset
§§9 H
.
§§H I$
fallbackFontAssetTable
§§I _
!=
§§` b
null
§§c g
)
§§g h
{
•• 
List
ßß 
<
ßß 
TMP_FontAsset
ßß "
>
ßß" # 
fallbackFontAssets
ßß$ 6
=
ßß7 8
sourceFontAsset
ßß9 H
.
ßßH I$
fallbackFontAssetTable
ßßI _
;
ßß_ `
int
®® 
fallbackCount
®® !
=
®®" # 
fallbackFontAssets
®®$ 6
.
®®6 7
Count
®®7 <
;
®®< =
if
™™ 
(
™™  
fallbackFontAssets
™™ &
!=
™™' )
null
™™* .
&&
™™/ 1
fallbackCount
™™2 ?
>
™™@ A
$num
™™B C
)
™™C D
{
´´ 
for
¨¨ 
(
¨¨ 
int
¨¨ 
i
¨¨ 
=
¨¨  
$num
¨¨! "
;
¨¨" #
i
¨¨$ %
<
¨¨& '
fallbackCount
¨¨( 5
;
¨¨5 6
i
¨¨7 8
++
¨¨8 :
)
¨¨: ;
{
≠≠ 
TMP_FontAsset
ÆÆ %
temp
ÆÆ& *
=
ÆÆ+ , 
fallbackFontAssets
ÆÆ- ?
[
ÆÆ? @
i
ÆÆ@ A
]
ÆÆA B
;
ÆÆB C
if
∞∞ 
(
∞∞ 
temp
∞∞  
==
∞∞! #
null
∞∞$ (
)
∞∞( )
continue
±± $
;
±±$ %
int
≥≥ 
id
≥≥ 
=
≥≥  
temp
≥≥! %
.
≥≥% &

instanceID
≥≥& 0
;
≥≥0 1
if
∂∂ 
(
∂∂ 
k_SearchedAssets
∂∂ ,
.
∂∂, -
Add
∂∂- 0
(
∂∂0 1
id
∂∂1 3
)
∂∂3 4
==
∂∂5 7
false
∂∂8 =
)
∂∂= >
continue
∑∑ $
;
∑∑$ %
sourceFontAsset
∫∫ '
.
∫∫' ('
FallbackSearchQueryLookup
∫∫( A
.
∫∫A B
Add
∫∫B E
(
∫∫E F
id
∫∫F H
)
∫∫H I
;
∫∫I J
	character
ºº !
=
ºº" #0
"GetCharacterFromFontAsset_Internal
ºº$ F
(
ººF G
unicode
ººG N
,
ººN O
temp
ººP T
,
ººT U
true
ººV Z
,
ººZ [
	fontStyle
ºº\ e
,
ººe f

fontWeight
ººg q
,
ººq r
out
ººs v$
isAlternativeTypefaceººw å
)ººå ç
;ººç é
if
ææ 
(
ææ 
	character
ææ %
!=
ææ& (
null
ææ) -
)
ææ- .
return
øø "
	character
øø# ,
;
øø, -
}
¿¿ 
}
¡¡ 
}
¬¬ 
return
ƒƒ 
null
ƒƒ 
;
ƒƒ 
}
≈≈ 	
public
÷÷ 
static
÷÷ 
TMP_Character
÷÷ #(
GetCharacterFromFontAssets
÷÷$ >
(
÷÷> ?
uint
÷÷? C
unicode
÷÷D K
,
÷÷K L
TMP_FontAsset
÷÷M Z
sourceFontAsset
÷÷[ j
,
÷÷j k
List
÷÷l p
<
÷÷p q
TMP_FontAsset
÷÷q ~
>
÷÷~ 

fontAssets÷÷Ä ä
,÷÷ä ã
bool÷÷å ê 
includeFallbacks÷÷ë °
,÷÷° ¢

FontStyles÷÷£ ≠
	fontStyle÷÷Æ ∑
,÷÷∑ ∏

FontWeight÷÷π √

fontWeight÷÷ƒ Œ
,÷÷Œ œ
out÷÷– ”
bool÷÷‘ ÿ%
isAlternativeTypeface÷÷Ÿ Ó
)÷÷Ó Ô
{
◊◊ 	#
isAlternativeTypeface
ÿÿ !
=
ÿÿ" #
false
ÿÿ$ )
;
ÿÿ) *
if
€€ 
(
€€ 

fontAssets
€€ 
==
€€ 
null
€€ "
||
€€# %

fontAssets
€€& 0
.
€€0 1
Count
€€1 6
==
€€7 9
$num
€€: ;
)
€€; <
return
‹‹ 
null
‹‹ 
;
‹‹ 
if
ﬁﬁ 
(
ﬁﬁ 
includeFallbacks
ﬁﬁ  
)
ﬁﬁ  !
{
ﬂﬂ 
if
‡‡ 
(
‡‡ 
k_SearchedAssets
‡‡ $
==
‡‡% '
null
‡‡( ,
)
‡‡, -
k_SearchedAssets
·· $
=
··% &
new
··' *
HashSet
··+ 2
<
··2 3
int
··3 6
>
··6 7
(
··7 8
)
··8 9
;
··9 :
else
‚‚ 
k_SearchedAssets
„„ $
.
„„$ %
Clear
„„% *
(
„„* +
)
„„+ ,
;
„„, -
}
‰‰ 
int
ÊÊ 
fontAssetCount
ÊÊ 
=
ÊÊ  

fontAssets
ÊÊ! +
.
ÊÊ+ ,
Count
ÊÊ, 1
;
ÊÊ1 2
for
ËË 
(
ËË 
int
ËË 
i
ËË 
=
ËË 
$num
ËË 
;
ËË 
i
ËË 
<
ËË 
fontAssetCount
ËË  .
;
ËË. /
i
ËË0 1
++
ËË1 3
)
ËË3 4
{
ÈÈ 
TMP_FontAsset
ÍÍ 
	fontAsset
ÍÍ '
=
ÍÍ( )

fontAssets
ÍÍ* 4
[
ÍÍ4 5
i
ÍÍ5 6
]
ÍÍ6 7
;
ÍÍ7 8
if
ÏÏ 
(
ÏÏ 
	fontAsset
ÏÏ 
==
ÏÏ  
null
ÏÏ! %
)
ÏÏ% &
continue
ÏÏ' /
;
ÏÏ/ 0
sourceFontAsset
ÔÔ 
.
ÔÔ  '
FallbackSearchQueryLookup
ÔÔ  9
.
ÔÔ9 :
Add
ÔÔ: =
(
ÔÔ= >
	fontAsset
ÔÔ> G
.
ÔÔG H

instanceID
ÔÔH R
)
ÔÔR S
;
ÔÔS T
TMP_Character
ÒÒ 
	character
ÒÒ '
=
ÒÒ( )0
"GetCharacterFromFontAsset_Internal
ÒÒ* L
(
ÒÒL M
unicode
ÒÒM T
,
ÒÒT U
	fontAsset
ÒÒV _
,
ÒÒ_ `
includeFallbacks
ÒÒa q
,
ÒÒq r
	fontStyle
ÒÒs |
,
ÒÒ| }

fontWeightÒÒ~ à
,ÒÒà â
outÒÒä ç%
isAlternativeTypefaceÒÒé £
)ÒÒ£ §
;ÒÒ§ •
if
ÛÛ 
(
ÛÛ 
	character
ÛÛ 
!=
ÛÛ  
null
ÛÛ! %
)
ÛÛ% &
return
ÙÙ 
	character
ÙÙ $
;
ÙÙ$ %
}
ıı 
return
˜˜ 
null
˜˜ 
;
˜˜ 
}
¯¯ 	
public
ÖÖ 
static
ÖÖ !
TMP_SpriteCharacter
ÖÖ )/
!GetSpriteCharacterFromSpriteAsset
ÖÖ* K
(
ÖÖK L
uint
ÖÖL P
unicode
ÖÖQ X
,
ÖÖX Y
TMP_SpriteAsset
ÖÖZ i
spriteAsset
ÖÖj u
,
ÖÖu v
bool
ÖÖw {
includeFallbacksÖÖ| å
)ÖÖå ç
{
ÜÜ 	
if
àà 
(
àà 
spriteAsset
àà 
==
àà 
null
àà #
)
àà# $
return
ââ 
null
ââ 
;
ââ !
TMP_SpriteCharacter
ãã 
spriteCharacter
ãã  /
;
ãã/ 0
if
éé 
(
éé 
spriteAsset
éé 
.
éé (
spriteCharacterLookupTable
éé 6
.
éé6 7
TryGetValue
éé7 B
(
ééB C
unicode
ééC J
,
ééJ K
out
ééL O
spriteCharacter
ééP _
)
éé_ `
)
éé` a
return
èè 
spriteCharacter
èè &
;
èè& '
if
ëë 
(
ëë 
includeFallbacks
ëë  
)
ëë  !
{
íí 
if
îî 
(
îî 
k_SearchedAssets
îî $
==
îî% '
null
îî( ,
)
îî, -
k_SearchedAssets
ïï $
=
ïï% &
new
ïï' *
HashSet
ïï+ 2
<
ïï2 3
int
ïï3 6
>
ïï6 7
(
ïï7 8
)
ïï8 9
;
ïï9 :
else
ññ 
k_SearchedAssets
óó $
.
óó$ %
Clear
óó% *
(
óó* +
)
óó+ ,
;
óó, -
k_SearchedAssets
öö  
.
öö  !
Add
öö! $
(
öö$ %
spriteAsset
öö% 0
.
öö0 1

instanceID
öö1 ;
)
öö; <
;
öö< =
List
úú 
<
úú 
TMP_SpriteAsset
úú $
>
úú$ %!
fallbackSpriteAsset
úú& 9
=
úú: ;
spriteAsset
úú< G
.
úúG H"
fallbackSpriteAssets
úúH \
;
úú\ ]
if
ûû 
(
ûû !
fallbackSpriteAsset
ûû '
!=
ûû( *
null
ûû+ /
&&
ûû0 2!
fallbackSpriteAsset
ûû3 F
.
ûûF G
Count
ûûG L
>
ûûM N
$num
ûûO P
)
ûûP Q
{
üü 
int
†† 
fallbackCount
†† %
=
††& '!
fallbackSpriteAsset
††( ;
.
††; <
Count
††< A
;
††A B
for
¢¢ 
(
¢¢ 
int
¢¢ 
i
¢¢ 
=
¢¢  
$num
¢¢! "
;
¢¢" #
i
¢¢$ %
<
¢¢& '
fallbackCount
¢¢( 5
;
¢¢5 6
i
¢¢7 8
++
¢¢8 :
)
¢¢: ;
{
££ 
TMP_SpriteAsset
§§ '
temp
§§( ,
=
§§- .!
fallbackSpriteAsset
§§/ B
[
§§B C
i
§§C D
]
§§D E
;
§§E F
if
¶¶ 
(
¶¶ 
temp
¶¶  
==
¶¶! #
null
¶¶$ (
)
¶¶( )
continue
ßß $
;
ßß$ %
int
©© 
id
©© 
=
©©  
temp
©©! %
.
©©% &

instanceID
©©& 0
;
©©0 1
if
¨¨ 
(
¨¨ 
k_SearchedAssets
¨¨ ,
.
¨¨, -
Add
¨¨- 0
(
¨¨0 1
id
¨¨1 3
)
¨¨3 4
==
¨¨5 7
false
¨¨8 =
)
¨¨= >
continue
≠≠ $
;
≠≠$ %
spriteCharacter
ØØ '
=
ØØ( )8
*GetSpriteCharacterFromSpriteAsset_Internal
ØØ* T
(
ØØT U
unicode
ØØU \
,
ØØ\ ]
temp
ØØ^ b
,
ØØb c
true
ØØd h
)
ØØh i
;
ØØi j
if
±± 
(
±± 
spriteCharacter
±± +
!=
±±, .
null
±±/ 3
)
±±3 4
return
≤≤ "
spriteCharacter
≤≤# 2
;
≤≤2 3
}
≥≥ 
}
¥¥ 
}
µµ 
return
∑∑ 
null
∑∑ 
;
∑∑ 
}
∏∏ 	
static
¡¡ !
TMP_SpriteCharacter
¡¡ "8
*GetSpriteCharacterFromSpriteAsset_Internal
¡¡# M
(
¡¡M N
uint
¡¡N R
unicode
¡¡S Z
,
¡¡Z [
TMP_SpriteAsset
¡¡\ k
spriteAsset
¡¡l w
,
¡¡w x
bool
¡¡y }
includeFallbacks¡¡~ é
)¡¡é è
{
¬¬ 	!
TMP_SpriteCharacter
√√ 
spriteCharacter
√√  /
;
√√/ 0
if
∆∆ 
(
∆∆ 
spriteAsset
∆∆ 
.
∆∆ (
spriteCharacterLookupTable
∆∆ 6
.
∆∆6 7
TryGetValue
∆∆7 B
(
∆∆B C
unicode
∆∆C J
,
∆∆J K
out
∆∆L O
spriteCharacter
∆∆P _
)
∆∆_ `
)
∆∆` a
return
«« 
spriteCharacter
«« &
;
««& '
if
…… 
(
…… 
includeFallbacks
……  
)
……  !
{
   
List
ÀÀ 
<
ÀÀ 
TMP_SpriteAsset
ÀÀ $
>
ÀÀ$ %!
fallbackSpriteAsset
ÀÀ& 9
=
ÀÀ: ;
spriteAsset
ÀÀ< G
.
ÀÀG H"
fallbackSpriteAssets
ÀÀH \
;
ÀÀ\ ]
if
ÕÕ 
(
ÕÕ !
fallbackSpriteAsset
ÕÕ '
!=
ÕÕ( *
null
ÕÕ+ /
&&
ÕÕ0 2!
fallbackSpriteAsset
ÕÕ3 F
.
ÕÕF G
Count
ÕÕG L
>
ÕÕM N
$num
ÕÕO P
)
ÕÕP Q
{
ŒŒ 
int
œœ 
fallbackCount
œœ %
=
œœ& '!
fallbackSpriteAsset
œœ( ;
.
œœ; <
Count
œœ< A
;
œœA B
for
—— 
(
—— 
int
—— 
i
—— 
=
——  
$num
——! "
;
——" #
i
——$ %
<
——& '
fallbackCount
——( 5
;
——5 6
i
——7 8
++
——8 :
)
——: ;
{
““ 
TMP_SpriteAsset
”” '
temp
””( ,
=
””- .!
fallbackSpriteAsset
””/ B
[
””B C
i
””C D
]
””D E
;
””E F
if
’’ 
(
’’ 
temp
’’  
==
’’! #
null
’’$ (
)
’’( )
continue
÷÷ $
;
÷÷$ %
int
ÿÿ 
id
ÿÿ 
=
ÿÿ  
temp
ÿÿ! %
.
ÿÿ% &

instanceID
ÿÿ& 0
;
ÿÿ0 1
if
€€ 
(
€€ 
k_SearchedAssets
€€ ,
.
€€, -
Add
€€- 0
(
€€0 1
id
€€1 3
)
€€3 4
==
€€5 7
false
€€8 =
)
€€= >
continue
‹‹ $
;
‹‹$ %
spriteCharacter
ﬁﬁ '
=
ﬁﬁ( )8
*GetSpriteCharacterFromSpriteAsset_Internal
ﬁﬁ* T
(
ﬁﬁT U
unicode
ﬁﬁU \
,
ﬁﬁ\ ]
temp
ﬁﬁ^ b
,
ﬁﬁb c
true
ﬁﬁd h
)
ﬁﬁh i
;
ﬁﬁi j
if
‡‡ 
(
‡‡ 
spriteCharacter
‡‡ +
!=
‡‡, .
null
‡‡/ 3
)
‡‡3 4
return
·· "
spriteCharacter
··# 2
;
··2 3
}
‚‚ 
}
„„ 
}
‰‰ 
return
ÊÊ 
null
ÊÊ 
;
ÊÊ 
}
ÁÁ 	
private
ÓÓ 
static
ÓÓ 
bool
ÓÓ '
k_IsFontEngineInitialized
ÓÓ 5
;
ÓÓ5 6
}
ππ 
}∫∫ ¿“
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMPro_UGUI_Private.cs
	namespace 	
TMPro
 
{ 
public 

partial 
class 
TextMeshProUGUI (
{ 
[ 	
SerializeField	 
] 
private 
bool !
m_hasFontAssetChanged *
=+ ,
false- 2
;2 3
	protected 
TMP_SubMeshUI 
[  
]  !
m_subTextObjects" 2
=3 4
new5 8
TMP_SubMeshUI9 F
[F G
$numG H
]H I
;I J
private 
float !
m_previousLossyScaleY +
=, -
-. /
$num/ 0
;0 1
private 
Vector3 
[ 
] "
m_RectTransformCorners 0
=1 2
new3 6
Vector37 >
[> ?
$num? @
]@ A
;A B
private 
CanvasRenderer 
m_canvasRenderer /
;/ 0
private 
Canvas 
m_canvas 
;  
private 
bool 
m_isFirstAllocation (
;( )
private   
int   
m_max_characters   $
=  % &
$num  ' (
;  ( )
[%% 	
SerializeField%%	 
]%% 
private&& 
Material&& 
m_baseMaterial&& '
;&&' (
private(( 
bool(( 
m_isScrollRegionSet(( (
;((( )
[++ 	
SerializeField++	 
]++ 
private,, 
Vector4,, 
m_maskOffset,, $
;,,$ %
private// 
	Matrix4x4// 
m_EnvMapMatrix// (
=//) *
new//+ .
	Matrix4x4/// 8
(//8 9
)//9 :
;//: ;
[33 	
NonSerialized33	 
]33 
private44 
bool44 #
m_isRegisteredForEvents44 ,
;44, -
	protected66 
override66 
void66 
Awake66  %
(66% &
)66& '
{77 	
if<< 
(<< 
TMP_Settings<< 
.<< 
instance<< %
==<<& (
null<<) -
)<<- .
{== 
if>> 
(>> %
m_isWaitingOnResourceLoad>> -
==>>. 0
false>>1 6
)>>6 7
TMPro_EventManager?? &
.??& '
RESOURCE_LOAD_EVENT??' :
.??: ;
Add??; >
(??> ?
ON_RESOURCES_LOADED??? R
)??R S
;??S T%
m_isWaitingOnResourceLoadAA )
=AA* +
trueAA, 0
;AA0 1
returnBB 
;BB 
}CC 
m_canvasGG 
=GG 
thisGG 
.GG 
canvasGG "
;GG" #
m_isOrthographicII 
=II 
trueII #
;II# $
m_rectTransformLL 
=LL 

gameObjectLL (
.LL( )
GetComponentLL) 5
<LL5 6
RectTransformLL6 C
>LLC D
(LLD E
)LLE F
;LLF G
ifMM 
(MM 
m_rectTransformMM 
==MM  "
nullMM# '
)MM' (
m_rectTransformNN 
=NN  !

gameObjectNN" ,
.NN, -
AddComponentNN- 9
<NN9 :
RectTransformNN: G
>NNG H
(NNH I
)NNI J
;NNJ K
m_canvasRendererQQ 
=QQ 
GetComponentQQ +
<QQ+ ,
CanvasRendererQQ, :
>QQ: ;
(QQ; <
)QQ< =
;QQ= >
ifRR 
(RR 
m_canvasRendererRR  
==RR! #
nullRR$ (
)RR( )
m_canvasRendererSS  
=SS! "

gameObjectSS# -
.SS- .
AddComponentSS. :
<SS: ;
CanvasRendererSS; I
>SSI J
(SSK L
)SSL M
;SSM N
ifUU 
(UU 
m_meshUU 
==UU 
nullUU 
)UU 
{VV 
m_meshWW 
=WW 
newWW 
MeshWW !
(WW! "
)WW" #
;WW# $
m_meshXX 
.XX 
	hideFlagsXX  
=XX! "
	HideFlagsXX# ,
.XX, -
HideAndDontSaveXX- <
;XX< =
m_meshZZ 
.ZZ 
nameZZ 
=ZZ 
$strZZ 3
;ZZ3 4

m_textInfo]] 
=]] 
new]]  
TMP_TextInfo]]! -
(]]- .
this]]. 2
)]]2 3
;]]3 4
}^^ 
LoadDefaultSettingsaa 
(aa  
)aa  !
;aa! "
LoadFontAssetdd 
(dd 
)dd 
;dd 
ifgg 
(gg #
m_InternalParsingBuffergg '
==gg( *
nullgg+ /
)gg/ 0#
m_InternalParsingBufferhh '
=hh( )
newhh* -
UnicodeCharhh. 9
[hh9 :
m_max_charactershh: J
]hhJ K
;hhK L 
m_cached_TextElementjj  
=jj! "
newjj# &
TMP_Characterjj' 4
(jj4 5
)jj5 6
;jj6 7
m_isFirstAllocationkk 
=kk  !
truekk" &
;kk& '
TMP_SubMeshUInn 
[nn 
]nn 
subTextObjectsnn *
=nn+ ,#
GetComponentsInChildrennn- D
<nnD E
TMP_SubMeshUInnE R
>nnR S
(nnS T
)nnT U
;nnU V
ifoo 
(oo 
subTextObjectsoo 
.oo 
Lengthoo %
>oo& '
$numoo( )
)oo) *
{pp 
forqq 
(qq 
intqq 
iqq 
=qq 
$numqq 
;qq 
iqq  !
<qq" #
subTextObjectsqq$ 2
.qq2 3
Lengthqq3 9
;qq9 :
iqq; <
++qq< >
)qq> ?
m_subTextObjectsrr $
[rr$ %
irr% &
+rr' (
$numrr) *
]rr* +
=rr, -
subTextObjectsrr. <
[rr< =
irr= >
]rr> ?
;rr? @
}ss $
m_isInputParsingRequiredvv $
=vv% &
truevv' +
;vv+ ,#
m_havePropertiesChangedww #
=ww$ %
trueww& *
;ww* +
	m_isAwakeyy 
=yy 
trueyy 
;yy 
}zz 	
	protected}} 
override}} 
void}} 
OnEnable}}  (
(}}( )
)}}) *
{~~ 	
if
ÇÇ 
(
ÇÇ 
	m_isAwake
ÇÇ 
==
ÇÇ 
false
ÇÇ "
)
ÇÇ" #
return
ÉÉ 
;
ÉÉ 
if
ÖÖ 
(
ÖÖ 
!
ÖÖ %
m_isRegisteredForEvents
ÖÖ (
)
ÖÖ( )
{
ÜÜ  
TMPro_EventManager
ãã "
.
ãã" #%
MATERIAL_PROPERTY_EVENT
ãã# :
.
ãã: ;
Add
ãã; >
(
ãã> ?*
ON_MATERIAL_PROPERTY_CHANGED
ãã? [
)
ãã[ \
;
ãã\ ] 
TMPro_EventManager
åå "
.
åå" #!
FONT_PROPERTY_EVENT
åå# 6
.
åå6 7
Add
åå7 :
(
åå: ;&
ON_FONT_PROPERTY_CHANGED
åå; S
)
ååS T
;
ååT U 
TMPro_EventManager
çç "
.
çç" #-
TEXTMESHPRO_UGUI_PROPERTY_EVENT
çç# B
.
ççB C
Add
ççC F
(
ççF G2
$ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED
ççG k
)
ççk l
;
ççl m 
TMPro_EventManager
éé "
.
éé" #*
DRAG_AND_DROP_MATERIAL_EVENT
éé# ?
.
éé? @
Add
éé@ C
(
ééC D'
ON_DRAG_AND_DROP_MATERIAL
ééD ]
)
éé] ^
;
éé^ _ 
TMPro_EventManager
èè "
.
èè" #'
TEXT_STYLE_PROPERTY_EVENT
èè# <
.
èè< =
Add
èè= @
(
èè@ A#
ON_TEXT_STYLE_CHANGED
èèA V
)
èèV W
;
èèW X 
TMPro_EventManager
êê "
.
êê" #+
COLOR_GRADIENT_PROPERTY_EVENT
êê# @
.
êê@ A
Add
êêA D
(
êêD E'
ON_COLOR_GRADIENT_CHANGED
êêE ^
)
êê^ _
;
êê_ ` 
TMPro_EventManager
ëë "
.
ëë" #)
TMP_SETTINGS_PROPERTY_EVENT
ëë# >
.
ëë> ?
Add
ëë? B
(
ëëB C%
ON_TMP_SETTINGS_CHANGED
ëëC Z
)
ëëZ [
;
ëë[ \
UnityEditor
ìì 
.
ìì 
PrefabUtility
ìì )
.
ìì) *#
prefabInstanceUpdated
ìì* ?
+=
ìì@ B$
OnPrefabInstanceUpdate
ììC Y
;
ììY Z%
m_isRegisteredForEvents
ïï '
=
ïï( )
true
ïï* .
;
ïï. /
}
ññ 
m_canvas
ôô 
=
ôô 
	GetCanvas
ôô  
(
ôô  !
)
ôô! "
;
ôô" # 
SetActiveSubMeshes
õõ 
(
õõ 
true
õõ #
)
õõ# $
;
õõ$ %
GraphicRegistry
ûû 
.
ûû &
RegisterGraphicForCanvas
ûû 4
(
ûû4 5
m_canvas
ûû5 =
,
ûû= >
this
ûû? C
)
ûûC D
;
ûûD E
if
°° 
(
°° '
m_IsTextObjectScaleStatic
°° )
==
°°* ,
false
°°- 2
)
°°2 3
TMP_UpdateManager
¢¢ !
.
¢¢! ")
RegisterTextObjectForUpdate
¢¢" =
(
¢¢= >
this
¢¢> B
)
¢¢B C
;
¢¢C D
ComputeMarginSize
§§ 
(
§§ 
)
§§ 
;
§§  &
m_isInputParsingRequired
¶¶ $
=
¶¶% &
true
¶¶' +
;
¶¶+ ,
SetAllDirty
ßß 
(
ßß 
)
ßß 
;
ßß !
RecalculateClipping
©© 
(
©©  
)
©©  !
;
©©! " 
RecalculateMasking
™™ 
(
™™ 
)
™™  
;
™™  !
}
´´ 	
	protected
ÆÆ 
override
ÆÆ 
void
ÆÆ 
	OnDisable
ÆÆ  )
(
ÆÆ) *
)
ÆÆ* +
{
ØØ 	
if
≥≥ 
(
≥≥ 
	m_isAwake
≥≥ 
==
≥≥ 
false
≥≥ "
)
≥≥" #
return
¥¥ 
;
¥¥ 
GraphicRegistry
ΩΩ 
.
ΩΩ (
UnregisterGraphicForCanvas
ΩΩ 6
(
ΩΩ6 7
m_canvas
ΩΩ7 ?
,
ΩΩ? @
this
ΩΩA E
)
ΩΩE F
;
ΩΩF G"
CanvasUpdateRegistry
ææ  
.
ææ  !/
!UnRegisterCanvasElementForRebuild
ææ! B
(
ææB C
(
ææC D
ICanvasElement
ææD R
)
ææR S
this
ææS W
)
ææW X
;
ææX Y
TMP_UpdateManager
¿¿ 
.
¿¿ +
UnRegisterTextObjectForUpdate
¿¿ ;
(
¿¿; <
this
¿¿< @
)
¿¿@ A
;
¿¿A B
if
¬¬ 
(
¬¬ 
m_canvasRenderer
¬¬  
!=
¬¬! #
null
¬¬$ (
)
¬¬( )
m_canvasRenderer
√√  
.
√√  !
Clear
√√! &
(
√√& '
)
√√' (
;
√√( ) 
SetActiveSubMeshes
≈≈ 
(
≈≈ 
false
≈≈ $
)
≈≈$ %
;
≈≈% &
LayoutRebuilder
«« 
.
«« "
MarkLayoutForRebuild
«« 0
(
««0 1
m_rectTransform
««1 @
)
««@ A
;
««A B!
RecalculateClipping
»» 
(
»»  
)
»»  !
;
»»! " 
RecalculateMasking
…… 
(
…… 
)
……  
;
……  !
}
   	
	protected
ÕÕ 
override
ÕÕ 
void
ÕÕ 
	OnDestroy
ÕÕ  )
(
ÕÕ) *
)
ÕÕ* +
{
ŒŒ 	
GraphicRegistry
““ 
.
““ (
UnregisterGraphicForCanvas
““ 6
(
““6 7
m_canvas
““7 ?
,
““? @
this
““A E
)
““E F
;
““F G
TMP_UpdateManager
‘‘ 
.
‘‘ +
UnRegisterTextObjectForUpdate
‘‘ ;
(
‘‘; <
this
‘‘< @
)
‘‘@ A
;
‘‘A B
if
◊◊ 
(
◊◊ 
m_mesh
◊◊ 
!=
◊◊ 
null
◊◊ 
)
◊◊ 
DestroyImmediate
ÿÿ  
(
ÿÿ  !
m_mesh
ÿÿ! '
)
ÿÿ' (
;
ÿÿ( )
if
€€ 
(
€€ 
m_MaskMaterial
€€ 
!=
€€ !
null
€€" &
)
€€& '
{
‹‹ !
TMP_MaterialManager
›› #
.
››# $$
ReleaseStencilMaterial
››$ :
(
››: ;
m_MaskMaterial
››; I
)
››I J
;
››J K
m_MaskMaterial
ﬁﬁ 
=
ﬁﬁ  
null
ﬁﬁ! %
;
ﬁﬁ% &
}
ﬂﬂ  
TMPro_EventManager
„„ 
.
„„ %
MATERIAL_PROPERTY_EVENT
„„ 6
.
„„6 7
Remove
„„7 =
(
„„= >*
ON_MATERIAL_PROPERTY_CHANGED
„„> Z
)
„„Z [
;
„„[ \ 
TMPro_EventManager
‰‰ 
.
‰‰ !
FONT_PROPERTY_EVENT
‰‰ 2
.
‰‰2 3
Remove
‰‰3 9
(
‰‰9 :&
ON_FONT_PROPERTY_CHANGED
‰‰: R
)
‰‰R S
;
‰‰S T 
TMPro_EventManager
ÂÂ 
.
ÂÂ -
TEXTMESHPRO_UGUI_PROPERTY_EVENT
ÂÂ >
.
ÂÂ> ?
Remove
ÂÂ? E
(
ÂÂE F2
$ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED
ÂÂF j
)
ÂÂj k
;
ÂÂk l 
TMPro_EventManager
ÊÊ 
.
ÊÊ *
DRAG_AND_DROP_MATERIAL_EVENT
ÊÊ ;
.
ÊÊ; <
Remove
ÊÊ< B
(
ÊÊB C'
ON_DRAG_AND_DROP_MATERIAL
ÊÊC \
)
ÊÊ\ ]
;
ÊÊ] ^ 
TMPro_EventManager
ÁÁ 
.
ÁÁ '
TEXT_STYLE_PROPERTY_EVENT
ÁÁ 8
.
ÁÁ8 9
Remove
ÁÁ9 ?
(
ÁÁ? @#
ON_TEXT_STYLE_CHANGED
ÁÁ@ U
)
ÁÁU V
;
ÁÁV W 
TMPro_EventManager
ËË 
.
ËË +
COLOR_GRADIENT_PROPERTY_EVENT
ËË <
.
ËË< =
Remove
ËË= C
(
ËËC D'
ON_COLOR_GRADIENT_CHANGED
ËËD ]
)
ËË] ^
;
ËË^ _ 
TMPro_EventManager
ÈÈ 
.
ÈÈ )
TMP_SETTINGS_PROPERTY_EVENT
ÈÈ :
.
ÈÈ: ;
Remove
ÈÈ; A
(
ÈÈA B%
ON_TMP_SETTINGS_CHANGED
ÈÈB Y
)
ÈÈY Z
;
ÈÈZ [ 
TMPro_EventManager
ÍÍ 
.
ÍÍ !
RESOURCE_LOAD_EVENT
ÍÍ 2
.
ÍÍ2 3
Remove
ÍÍ3 9
(
ÍÍ9 :!
ON_RESOURCES_LOADED
ÍÍ: M
)
ÍÍM N
;
ÍÍN O
UnityEditor
ÏÏ 
.
ÏÏ 
PrefabUtility
ÏÏ %
.
ÏÏ% &#
prefabInstanceUpdated
ÏÏ& ;
-=
ÏÏ< >$
OnPrefabInstanceUpdate
ÏÏ? U
;
ÏÏU V%
m_isRegisteredForEvents
ÓÓ #
=
ÓÓ$ %
false
ÓÓ& +
;
ÓÓ+ ,
}
ÔÔ 	
	protected
ÛÛ 
override
ÛÛ 
void
ÛÛ 
Reset
ÛÛ  %
(
ÛÛ% &
)
ÛÛ& '
{
ÙÙ 	
if
¯¯ 
(
¯¯ 
	m_isAwake
¯¯ 
==
¯¯ 
false
¯¯ "
)
¯¯" #
return
˘˘ 
;
˘˘ !
LoadDefaultSettings
˚˚ 
(
˚˚  
)
˚˚  !
;
˚˚! "
LoadFontAsset
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ &
m_isInputParsingRequired
˛˛ $
=
˛˛% &
true
˛˛' +
;
˛˛+ ,%
m_havePropertiesChanged
ˇˇ #
=
ˇˇ$ %
true
ˇˇ& *
;
ˇˇ* +
}
ÄÄ 	
	protected
ÉÉ 
override
ÉÉ 
void
ÉÉ 

OnValidate
ÉÉ  *
(
ÉÉ* +
)
ÉÉ+ ,
{
ÑÑ 	
if
áá 
(
áá 
	m_isAwake
áá 
==
áá 
false
áá "
)
áá" #
return
àà 
;
àà 
if
ãã 
(
ãã 
m_fontAsset
ãã 
==
ãã 
null
ãã #
||
ãã$ &#
m_hasFontAssetChanged
ãã' <
)
ãã< =
{
åå 
LoadFontAsset
çç 
(
çç 
)
çç 
;
çç  #
m_hasFontAssetChanged
éé %
=
éé& '
false
éé( -
;
éé- .
}
èè 
if
ëë 
(
ëë 
m_canvasRenderer
ëë  
==
ëë! #
null
ëë$ (
||
ëë) +
m_canvasRenderer
ëë, <
.
ëë< =
GetMaterial
ëë= H
(
ëëH I
)
ëëI J
==
ëëK M
null
ëëN R
||
ëëS U
m_canvasRenderer
ëëV f
.
ëëf g
GetMaterial
ëëg r
(
ëër s
)
ëës t
.
ëët u

GetTexture
ëëu 
(ëë Ä
ShaderUtilitiesëëÄ è
.ëëè ê

ID_MainTexëëê ö
)ëëö õ
==ëëú û
nullëëü £
||ëë§ ¶
m_fontAssetëëß ≤
==ëë≥ µ
nullëë∂ ∫
||ëëª Ω
m_fontAssetëëæ …
.ëë…  
atlasTextureëë  ÷
.ëë÷ ◊
GetInstanceIDëë◊ ‰
(ëë‰ Â
)ëëÂ Ê
!=ëëÁ È 
m_canvasRendererëëÍ ˙
.ëë˙ ˚
GetMaterialëë˚ Ü
(ëëÜ á
)ëëá à
.ëëà â

GetTextureëëâ ì
(ëëì î
ShaderUtilitiesëëî £
.ëë£ §

ID_MainTexëë§ Æ
)ëëÆ Ø
.ëëØ ∞
GetInstanceIDëë∞ Ω
(ëëΩ æ
)ëëæ ø
)ëëø ¿
{
íí 
LoadFontAsset
ìì 
(
ìì 
)
ìì 
;
ìì  #
m_hasFontAssetChanged
îî %
=
îî& '
false
îî( -
;
îî- .
}
ïï 
	m_padding
óó 
=
óó #
GetPaddingForMaterial
óó -
(
óó- .
)
óó. /
;
óó/ 0
ComputeMarginSize
òò 
(
òò 
)
òò 
;
òò  &
m_isInputParsingRequired
öö $
=
öö% &
true
öö' +
;
öö+ ,
m_inputSource
õõ 
=
õõ 
TextInputSources
õõ ,
.
õõ, -
Text
õõ- 1
;
õõ1 2%
m_havePropertiesChanged
úú #
=
úú$ %
true
úú& *
;
úú* +%
m_isPreferredWidthDirty
ùù #
=
ùù$ %
true
ùù& *
;
ùù* +&
m_isPreferredHeightDirty
ûû $
=
ûû% &
true
ûû' +
;
ûû+ ,
SetAllDirty
†† 
(
†† 
)
†† 
;
†† 
}
°° 	
void
®® $
OnPrefabInstanceUpdate
®® #
(
®®# $

GameObject
®®$ .
go
®®/ 1
)
®®1 2
{
©© 	
if
´´ 
(
´´ 
this
´´ 
==
´´ 
null
´´ 
)
´´ 
{
¨¨ 
UnityEditor
≠≠ 
.
≠≠ 
PrefabUtility
≠≠ )
.
≠≠) *#
prefabInstanceUpdated
≠≠* ?
-=
≠≠@ B$
OnPrefabInstanceUpdate
≠≠C Y
;
≠≠Y Z
return
ÆÆ 
;
ÆÆ 
}
ØØ 
if
±± 
(
±± 
go
±± 
==
±± 
this
±± 
.
±± 

gameObject
±± %
)
±±% &
{
≤≤ 
TMP_SubMeshUI
≥≥ 
[
≥≥ 
]
≥≥ 
subTextObjects
≥≥  .
=
≥≥/ 0%
GetComponentsInChildren
≥≥1 H
<
≥≥H I
TMP_SubMeshUI
≥≥I V
>
≥≥V W
(
≥≥W X
)
≥≥X Y
;
≥≥Y Z
if
¥¥ 
(
¥¥ 
subTextObjects
¥¥ "
.
¥¥" #
Length
¥¥# )
>
¥¥* +
$num
¥¥, -
)
¥¥- .
{
µµ 
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂  
$num
∂∂! "
;
∂∂" #
i
∂∂$ %
<
∂∂& '
subTextObjects
∂∂( 6
.
∂∂6 7
Length
∂∂7 =
;
∂∂= >
i
∂∂? @
++
∂∂@ B
)
∂∂B C
m_subTextObjects
∑∑ (
[
∑∑( )
i
∑∑) *
+
∑∑+ ,
$num
∑∑- .
]
∑∑. /
=
∑∑0 1
subTextObjects
∑∑2 @
[
∑∑@ A
i
∑∑A B
]
∑∑B C
;
∑∑C D
}
∏∏ 
}
ππ 
}
∫∫ 	
void
ææ !
ON_RESOURCES_LOADED
ææ  
(
ææ  !
)
ææ! "
{
øø 	 
TMPro_EventManager
¿¿ 
.
¿¿ !
RESOURCE_LOAD_EVENT
¿¿ 2
.
¿¿2 3
Remove
¿¿3 9
(
¿¿9 :!
ON_RESOURCES_LOADED
¿¿: M
)
¿¿M N
;
¿¿N O
if
¬¬ 
(
¬¬ 
this
¬¬ 
==
¬¬ 
null
¬¬ 
)
¬¬ 
return
√√ 
;
√√ 
Awake
≈≈ 
(
≈≈ 
)
≈≈ 
;
≈≈ 
OnEnable
∆∆ 
(
∆∆ 
)
∆∆ 
;
∆∆ 
}
«« 	
void
ÀÀ *
ON_MATERIAL_PROPERTY_CHANGED
ÀÀ )
(
ÀÀ) *
bool
ÀÀ* .
	isChanged
ÀÀ/ 8
,
ÀÀ8 9
Material
ÀÀ: B
mat
ÀÀC F
)
ÀÀF G
{
ÃÃ 	
ShaderUtilities
œœ 
.
œœ "
GetShaderPropertyIDs
œœ 0
(
œœ0 1
)
œœ1 2
;
œœ2 3
int
—— 

materialID
—— 
=
—— 
mat
——  
.
——  !
GetInstanceID
——! .
(
——. /
)
——/ 0
;
——0 1
int
““ 
sharedMaterialID
““  
=
““! "
m_sharedMaterial
““# 3
.
““3 4
GetInstanceID
““4 A
(
““A B
)
““B C
;
““C D
int
”” 
maskingMaterialID
”” !
=
””" #
m_MaskMaterial
””$ 2
==
””3 5
null
””6 :
?
””; <
$num
””= >
:
””? @
m_MaskMaterial
””A O
.
””O P
GetInstanceID
””P ]
(
””] ^
)
””^ _
;
””_ `
if
’’ 
(
’’ 
m_canvasRenderer
’’  
==
’’! #
null
’’$ (
||
’’) +
m_canvasRenderer
’’, <
.
’’< =
GetMaterial
’’= H
(
’’H I
)
’’I J
==
’’K M
null
’’N R
)
’’R S
{
÷÷ 
if
◊◊ 
(
◊◊ 
m_canvasRenderer
◊◊ $
==
◊◊% '
null
◊◊( ,
)
◊◊, -
return
◊◊. 4
;
◊◊4 5
if
ŸŸ 
(
ŸŸ 
m_fontAsset
ŸŸ 
!=
ŸŸ  "
null
ŸŸ# '
)
ŸŸ' (
{
⁄⁄ 
m_canvasRenderer
€€ $
.
€€$ %
SetMaterial
€€% 0
(
€€0 1
m_fontAsset
€€1 <
.
€€< =
material
€€= E
,
€€E F
m_sharedMaterial
€€G W
.
€€W X

GetTexture
€€X b
(
€€b c
ShaderUtilities
€€c r
.
€€r s

ID_MainTex
€€s }
)
€€} ~
)
€€~ 
;€€ Ä
}
›› 
else
ﬁﬁ 
Debug
ﬂﬂ 
.
ﬂﬂ 

LogWarning
ﬂﬂ $
(
ﬂﬂ$ %
$str
ﬂﬂ% A
+
ﬂﬂB C
name
ﬂﬂD H
+
ﬂﬂI J
$str
ﬂﬂK j
,
ﬂﬂj k
this
ﬂﬂl p
)
ﬂﬂp q
;
ﬂﬂq r
}
‡‡ 
if
„„ 
(
„„ 
m_canvasRenderer
„„  
.
„„  !
GetMaterial
„„! ,
(
„„, -
)
„„- .
!=
„„/ 1
m_sharedMaterial
„„2 B
&&
„„C E
m_fontAsset
„„F Q
==
„„R T
null
„„U Y
)
„„Y Z
{
‰‰ 
m_sharedMaterial
ÊÊ  
=
ÊÊ! "
m_canvasRenderer
ÊÊ# 3
.
ÊÊ3 4
GetMaterial
ÊÊ4 ?
(
ÊÊ? @
)
ÊÊ@ A
;
ÊÊA B
}
ÁÁ 
if
ÎÎ 
(
ÎÎ 
m_MaskMaterial
ÎÎ 
!=
ÎÎ !
null
ÎÎ" &
)
ÎÎ& '
{
ÏÏ 
UnityEditor
ÌÌ 
.
ÌÌ 
Undo
ÌÌ  
.
ÌÌ  !
RecordObject
ÌÌ! -
(
ÌÌ- .
m_MaskMaterial
ÌÌ. <
,
ÌÌ< =
$str
ÌÌ> Y
)
ÌÌY Z
;
ÌÌZ [
UnityEditor
ÓÓ 
.
ÓÓ 
Undo
ÓÓ  
.
ÓÓ  !
RecordObject
ÓÓ! -
(
ÓÓ- .
m_sharedMaterial
ÓÓ. >
,
ÓÓ> ?
$str
ÓÓ@ [
)
ÓÓ[ \
;
ÓÓ\ ]
if
 
(
 

materialID
 
==
 !
sharedMaterialID
" 2
)
2 3
{
ÒÒ 
float
ÛÛ 
	stencilID
ÛÛ #
=
ÛÛ$ %
m_MaskMaterial
ÛÛ& 4
.
ÛÛ4 5
GetFloat
ÛÛ5 =
(
ÛÛ= >
ShaderUtilities
ÛÛ> M
.
ÛÛM N
ID_StencilID
ÛÛN Z
)
ÛÛZ [
;
ÛÛ[ \
float
ÙÙ 
stencilComp
ÙÙ %
=
ÙÙ& '
m_MaskMaterial
ÙÙ( 6
.
ÙÙ6 7
GetFloat
ÙÙ7 ?
(
ÙÙ? @
ShaderUtilities
ÙÙ@ O
.
ÙÙO P
ID_StencilComp
ÙÙP ^
)
ÙÙ^ _
;
ÙÙ_ `
m_MaskMaterial
˘˘ "
.
˘˘" #(
CopyPropertiesFromMaterial
˘˘# =
(
˘˘= >
mat
˘˘> A
)
˘˘A B
;
˘˘B C
m_MaskMaterial
˙˙ "
.
˙˙" #
shaderKeywords
˙˙# 1
=
˙˙2 3
mat
˙˙4 7
.
˙˙7 8
shaderKeywords
˙˙8 F
;
˙˙F G
m_MaskMaterial
¸¸ "
.
¸¸" #
SetFloat
¸¸# +
(
¸¸+ ,
ShaderUtilities
¸¸, ;
.
¸¸; <
ID_StencilID
¸¸< H
,
¸¸H I
	stencilID
¸¸J S
)
¸¸S T
;
¸¸T U
m_MaskMaterial
˝˝ "
.
˝˝" #
SetFloat
˝˝# +
(
˝˝+ ,
ShaderUtilities
˝˝, ;
.
˝˝; <
ID_StencilComp
˝˝< J
,
˝˝J K
stencilComp
˝˝L W
)
˝˝W X
;
˝˝X Y
}
ÅÅ 
else
ÇÇ 
if
ÇÇ 
(
ÇÇ 

materialID
ÇÇ #
==
ÇÇ$ &
maskingMaterialID
ÇÇ' 8
)
ÇÇ8 9
{
ÉÉ #
GetPaddingForMaterial
ÖÖ )
(
ÖÖ) *
mat
ÖÖ* -
)
ÖÖ- .
;
ÖÖ. /
m_sharedMaterial
áá $
.
áá$ %(
CopyPropertiesFromMaterial
áá% ?
(
áá? @
mat
áá@ C
)
ááC D
;
ááD E
m_sharedMaterial
àà $
.
àà$ %
shaderKeywords
àà% 3
=
àà4 5
mat
àà6 9
.
àà9 :
shaderKeywords
àà: H
;
ààH I
m_sharedMaterial
ââ $
.
ââ$ %
SetFloat
ââ% -
(
ââ- .
ShaderUtilities
ââ. =
.
ââ= >
ID_StencilID
ââ> J
,
ââJ K
$num
ââL M
)
ââM N
;
ââN O
m_sharedMaterial
ää $
.
ää$ %
SetFloat
ää% -
(
ää- .
ShaderUtilities
ää. =
.
ää= >
ID_StencilComp
ää> L
,
ääL M
$num
ääN O
)
ääO P
;
ääP Q
}
éé 
}
êê 
	m_padding
íí 
=
íí #
GetPaddingForMaterial
íí -
(
íí- .
)
íí. /
;
íí/ 0%
m_havePropertiesChanged
ìì #
=
ìì$ %
true
ìì& *
;
ìì* +
SetVerticesDirty
îî 
(
îî 
)
îî 
;
îî 
}
ññ 	
void
öö &
ON_FONT_PROPERTY_CHANGED
öö %
(
öö% &
bool
öö& *
	isChanged
öö+ 4
,
öö4 5
Object
öö6 <
font
öö= A
)
ööA B
{
õõ 	
if
úú 
(
úú 
MaterialReference
úú !
.
úú! "
Contains
úú" *
(
úú* +"
m_materialReferences
úú+ ?
,
úú? @
(
úúA B
TMP_FontAsset
úúB O
)
úúO P
font
úúQ U
)
úúU V
)
úúV W
{
ùù &
m_isInputParsingRequired
üü (
=
üü) *
true
üü+ /
;
üü/ 0%
m_havePropertiesChanged
†† '
=
††( )
true
††* .
;
††. /
UpdateMeshPadding
¢¢ !
(
¢¢! "
)
¢¢" #
;
¢¢# $
SetLayoutDirty
§§ 
(
§§ 
)
§§  
;
§§  !
SetVerticesDirty
••  
(
••  !
)
••! "
;
••" #
}
¶¶ 
}
ßß 	
void
´´ 2
$ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED
´´ 1
(
´´1 2
bool
´´2 6
	isChanged
´´7 @
,
´´@ A
Object
´´B H
obj
´´I L
)
´´L M
{
¨¨ 	
if
ØØ 
(
ØØ 
obj
ØØ 
==
ØØ 
this
ØØ 
)
ØØ 
{
∞∞ %
m_havePropertiesChanged
≤≤ '
=
≤≤( )
true
≤≤* .
;
≤≤. /&
m_isInputParsingRequired
≥≥ (
=
≥≥) *
true
≥≥+ /
;
≥≥/ 0
ComputeMarginSize
µµ !
(
µµ! "
)
µµ" #
;
µµ# $
SetVerticesDirty
∂∂  
(
∂∂  !
)
∂∂! "
;
∂∂" #
}
∑∑ 
}
∏∏ 	
void
ºº '
ON_DRAG_AND_DROP_MATERIAL
ºº &
(
ºº& '

GameObject
ºº' 1
obj
ºº2 5
,
ºº5 6
Material
ºº7 ?
currentMaterial
ºº@ O
,
ººO P
Material
ººQ Y
newMaterial
ººZ e
)
ººe f
{
ΩΩ 	
if
¬¬ 
(
¬¬ 
obj
¬¬ 
==
¬¬ 

gameObject
¬¬ !
||
¬¬" $
UnityEditor
¬¬% 0
.
¬¬0 1
PrefabUtility
¬¬1 >
.
¬¬> ?.
 GetCorrespondingObjectFromSource
¬¬? _
(
¬¬_ `

gameObject
¬¬` j
)
¬¬j k
==
¬¬l n
obj
¬¬o r
)
¬¬r s
{
∆∆ 
UnityEditor
«« 
.
«« 
Undo
««  
.
««  !
RecordObject
««! -
(
««- .
this
««. 2
,
««2 3
$str
««4 I
)
««I J
;
««J K
UnityEditor
»» 
.
»» 
Undo
»»  
.
»»  !
RecordObject
»»! -
(
»»- .
m_canvasRenderer
»». >
,
»»> ?
$str
»»@ U
)
»»U V
;
»»V W
m_sharedMaterial
    
=
  ! "
newMaterial
  # .
;
  . /
	m_padding
ÃÃ 
=
ÃÃ #
GetPaddingForMaterial
ÃÃ 1
(
ÃÃ1 2
)
ÃÃ2 3
;
ÃÃ3 4%
m_havePropertiesChanged
ŒŒ '
=
ŒŒ( )
true
ŒŒ* .
;
ŒŒ. /
SetVerticesDirty
œœ  
(
œœ  !
)
œœ! "
;
œœ" #
SetMaterialDirty
––  
(
––  !
)
––! "
;
––" #
}
—— 
}
““ 	
void
÷÷ #
ON_TEXT_STYLE_CHANGED
÷÷ "
(
÷÷" #
bool
÷÷# '
	isChanged
÷÷( 1
)
÷÷1 2
{
◊◊ 	%
m_havePropertiesChanged
ÿÿ #
=
ÿÿ$ %
true
ÿÿ& *
;
ÿÿ* +&
m_isInputParsingRequired
ŸŸ $
=
ŸŸ% &
true
ŸŸ' +
;
ŸŸ+ ,
SetVerticesDirty
⁄⁄ 
(
⁄⁄ 
)
⁄⁄ 
;
⁄⁄ 
}
€€ 	
void
‚‚ '
ON_COLOR_GRADIENT_CHANGED
‚‚ &
(
‚‚& '
Object
‚‚' -
gradient
‚‚. 6
)
‚‚6 7
{
„„ 	%
m_havePropertiesChanged
‰‰ #
=
‰‰$ %
true
‰‰& *
;
‰‰* +
SetVerticesDirty
ÂÂ 
(
ÂÂ 
)
ÂÂ 
;
ÂÂ 
}
ÊÊ 	
void
ÏÏ %
ON_TMP_SETTINGS_CHANGED
ÏÏ $
(
ÏÏ$ %
)
ÏÏ% &
{
ÌÌ 	"
m_defaultSpriteAsset
ÓÓ  
=
ÓÓ! "
null
ÓÓ# '
;
ÓÓ' (%
m_havePropertiesChanged
ÔÔ #
=
ÔÔ$ %
true
ÔÔ& *
;
ÔÔ* +&
m_isInputParsingRequired
 $
=
% &
true
' +
;
+ ,
SetAllDirty
ÒÒ 
(
ÒÒ 
)
ÒÒ 
;
ÒÒ 
}
ÚÚ 	
	protected
˜˜ 
override
˜˜ 
void
˜˜ 
LoadFontAsset
˜˜  -
(
˜˜- .
)
˜˜. /
{
¯¯ 	
ShaderUtilities
˚˚ 
.
˚˚ "
GetShaderPropertyIDs
˚˚ 0
(
˚˚0 1
)
˚˚1 2
;
˚˚2 3
if
˝˝ 
(
˝˝ 
m_fontAsset
˝˝ 
==
˝˝ 
null
˝˝ #
)
˝˝# $
{
˛˛ 
if
ˇˇ 
(
ˇˇ 
TMP_Settings
ˇˇ  
.
ˇˇ  !
defaultFontAsset
ˇˇ! 1
!=
ˇˇ2 4
null
ˇˇ5 9
)
ˇˇ9 :
m_fontAsset
ÄÄ 
=
ÄÄ  !
TMP_Settings
ÄÄ" .
.
ÄÄ. /
defaultFontAsset
ÄÄ/ ?
;
ÄÄ? @
else
ÅÅ 
m_fontAsset
ÇÇ 
=
ÇÇ  !
	Resources
ÇÇ" +
.
ÇÇ+ ,
Load
ÇÇ, 0
<
ÇÇ0 1
TMP_FontAsset
ÇÇ1 >
>
ÇÇ> ?
(
ÇÇ? @
$str
ÇÇ@ f
)
ÇÇf g
;
ÇÇg h
if
ÑÑ 
(
ÑÑ 
m_fontAsset
ÑÑ 
==
ÑÑ  "
null
ÑÑ# '
)
ÑÑ' (
{
ÖÖ 
Debug
ÜÜ 
.
ÜÜ 

LogWarning
ÜÜ $
(
ÜÜ$ %
$str
ÜÜ% {
+
ÜÜ| }

gameObjectÜÜ~ à
.ÜÜà â
nameÜÜâ ç
+ÜÜé è
$strÜÜê ì
,ÜÜì î
thisÜÜï ô
)ÜÜô ö
;ÜÜö õ
return
áá 
;
áá 
}
àà 
if
ää 
(
ää 
m_fontAsset
ää 
.
ää  "
characterLookupTable
ää  4
==
ää5 7
null
ää8 <
)
ää< =
{
ãã 
Debug
åå 
.
åå 
Log
åå 
(
åå 
$str
åå 3
)
åå3 4
;
åå4 5
}
çç 
m_sharedMaterial
èè  
=
èè! "
m_fontAsset
èè# .
.
èè. /
material
èè/ 7
;
èè7 8
}
êê 
else
ëë 
{
íí 
if
îî 
(
îî 
m_fontAsset
îî 
.
îî  "
characterLookupTable
îî  4
==
îî5 7
null
îî8 <
)
îî< =
m_fontAsset
ïï 
.
ïï  %
ReadFontAssetDefinition
ïï  7
(
ïï7 8
)
ïï8 9
;
ïï9 :
if
òò 
(
òò 
m_sharedMaterial
òò $
==
òò% '
null
òò( ,
&&
òò- /
m_baseMaterial
òò0 >
!=
òò? A
null
òòB F
)
òòF G
{
ôô 
m_sharedMaterial
öö $
=
öö% &
m_baseMaterial
öö' 5
;
öö5 6
m_baseMaterial
õõ "
=
õõ# $
null
õõ% )
;
õõ) *
}
úú 
if
üü 
(
üü 
m_sharedMaterial
üü $
==
üü% '
null
üü( ,
||
üü- /
m_sharedMaterial
üü0 @
.
üü@ A

GetTexture
üüA K
(
üüK L
ShaderUtilities
üüL [
.
üü[ \

ID_MainTex
üü\ f
)
üüf g
==
üüh j
null
üük o
||
üüp r
m_fontAsset
üüs ~
.
üü~ 
atlasTextureüü ã
.üüã å
GetInstanceIDüüå ô
(üüô ö
)üüö õ
!=üüú û 
m_sharedMaterialüüü Ø
.üüØ ∞

GetTextureüü∞ ∫
(üü∫ ª
ShaderUtilitiesüüª  
.üü  À

ID_MainTexüüÀ ’
)üü’ ÷
.üü÷ ◊
GetInstanceIDüü◊ ‰
(üü‰ Â
)üüÂ Ê
)üüÊ Á
{
†† 
if
°° 
(
°° 
m_fontAsset
°° #
.
°°# $
material
°°$ ,
==
°°- /
null
°°0 4
)
°°4 5
Debug
¢¢ 
.
¢¢ 

LogWarning
¢¢ (
(
¢¢( )
$str
¢¢) T
+
¢¢U V
m_fontAsset
¢¢W b
.
¢¢b c
name
¢¢c g
+
¢¢h i
$str
¢¢j y
+
¢¢z {

gameObject¢¢| Ü
.¢¢Ü á
name¢¢á ã
+¢¢å ç
$str¢¢é ú
,¢¢ú ù
this¢¢û ¢
)¢¢¢ £
;¢¢£ §
else
££ 
m_sharedMaterial
§§ (
=
§§) *
m_fontAsset
§§+ 6
.
§§6 7
material
§§7 ?
;
§§? @
}
•• 
}
¶¶ "
GetSpecialCharacters
™™  
(
™™  !
m_fontAsset
™™! ,
)
™™, -
;
™™- .
	m_padding
¨¨ 
=
¨¨ #
GetPaddingForMaterial
¨¨ -
(
¨¨- .
)
¨¨. /
;
¨¨/ 0
SetMaterialDirty
ÆÆ 
(
ÆÆ 
)
ÆÆ 
;
ÆÆ 
}
ØØ 	
private
µµ 
Canvas
µµ 
	GetCanvas
µµ  
(
µµ  !
)
µµ! "
{
∂∂ 	
Canvas
∑∑ 
canvas
∑∑ 
=
∑∑ 
null
∑∑  
;
∑∑  !
var
∏∏ 
list
∏∏ 
=
∏∏ 
TMP_ListPool
∏∏ #
<
∏∏# $
Canvas
∏∏$ *
>
∏∏* +
.
∏∏+ ,
Get
∏∏, /
(
∏∏/ 0
)
∏∏0 1
;
∏∏1 2

gameObject
∫∫ 
.
∫∫ #
GetComponentsInParent
∫∫ ,
(
∫∫, -
false
∫∫- 2
,
∫∫2 3
list
∫∫4 8
)
∫∫8 9
;
∫∫9 :
if
ªª 
(
ªª 
list
ªª 
.
ªª 
Count
ªª 
>
ªª 
$num
ªª 
)
ªª 
{
ºº 
for
ææ 
(
ææ 
int
ææ 
i
ææ 
=
ææ 
$num
ææ 
;
ææ 
i
ææ  !
<
ææ" #
list
ææ$ (
.
ææ( )
Count
ææ) .
;
ææ. /
++
ææ0 2
i
ææ2 3
)
ææ3 4
{
øø 
if
¿¿ 
(
¿¿ 
list
¿¿ 
[
¿¿ 
i
¿¿ 
]
¿¿ 
.
¿¿   
isActiveAndEnabled
¿¿  2
)
¿¿2 3
{
¡¡ 
canvas
¬¬ 
=
¬¬  
list
¬¬! %
[
¬¬% &
i
¬¬& '
]
¬¬' (
;
¬¬( )
break
√√ 
;
√√ 
}
ƒƒ 
}
≈≈ 
}
∆∆ 
TMP_ListPool
»» 
<
»» 
Canvas
»» 
>
»»  
.
»»  !
Release
»»! (
(
»»( )
list
»») -
)
»»- .
;
»». /
return
   
canvas
   
;
   
}
ÀÀ 	
void
——  
UpdateEnvMapMatrix
—— 
(
——  
)
——  !
{
““ 	
if
”” 
(
”” 
!
”” 
m_sharedMaterial
”” !
.
””! "
HasProperty
””" -
(
””- .
ShaderUtilities
””. =
.
””= >
	ID_EnvMap
””> G
)
””G H
||
””I K
m_sharedMaterial
””L \
.
””\ ]

GetTexture
””] g
(
””g h
ShaderUtilities
””h w
.
””w x
	ID_EnvMap””x Å
)””Å Ç
==””É Ö
null””Ü ä
)””ä ã
return
‘‘ 
;
‘‘ 
Vector3
◊◊ 
rotation
◊◊ 
=
◊◊ 
m_sharedMaterial
◊◊ /
.
◊◊/ 0
	GetVector
◊◊0 9
(
◊◊9 :
ShaderUtilities
◊◊: I
.
◊◊I J"
ID_EnvMatrixRotation
◊◊J ^
)
◊◊^ _
;
◊◊_ `
m_EnvMapMatrix
ÿÿ 
=
ÿÿ 
	Matrix4x4
ÿÿ &
.
ÿÿ& '
TRS
ÿÿ' *
(
ÿÿ* +
Vector3
ÿÿ+ 2
.
ÿÿ2 3
zero
ÿÿ3 7
,
ÿÿ7 8

Quaternion
ÿÿ9 C
.
ÿÿC D
Euler
ÿÿD I
(
ÿÿI J
rotation
ÿÿJ R
)
ÿÿR S
,
ÿÿS T
Vector3
ÿÿU \
.
ÿÿ\ ]
one
ÿÿ] `
)
ÿÿ` a
;
ÿÿa b
m_sharedMaterial
⁄⁄ 
.
⁄⁄ 
	SetMatrix
⁄⁄ &
(
⁄⁄& '
ShaderUtilities
⁄⁄' 6
.
⁄⁄6 7
ID_EnvMatrix
⁄⁄7 C
,
⁄⁄C D
m_EnvMapMatrix
⁄⁄E S
)
⁄⁄S T
;
⁄⁄T U
}
€€ 	
void
ﬂﬂ 
EnableMasking
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ 
{
‡‡ 	
if
·· 
(
·· 
m_fontMaterial
·· 
==
·· !
null
··" &
)
··& '
{
‚‚ 
m_fontMaterial
„„ 
=
„„  $
CreateMaterialInstance
„„! 7
(
„„7 8
m_sharedMaterial
„„8 H
)
„„H I
;
„„I J
m_canvasRenderer
‰‰  
.
‰‰  !
SetMaterial
‰‰! ,
(
‰‰, -
m_fontMaterial
‰‰- ;
,
‰‰; <
m_sharedMaterial
‰‰= M
.
‰‰M N

GetTexture
‰‰N X
(
‰‰X Y
ShaderUtilities
‰‰Y h
.
‰‰h i

ID_MainTex
‰‰i s
)
‰‰s t
)
‰‰t u
;
‰‰u v
}
ÂÂ 
m_sharedMaterial
ÁÁ 
=
ÁÁ 
m_fontMaterial
ÁÁ -
;
ÁÁ- .
if
ËË 
(
ËË 
m_sharedMaterial
ËË  
.
ËË  !
HasProperty
ËË! ,
(
ËË, -
ShaderUtilities
ËË- <
.
ËË< =
ID_ClipRect
ËË= H
)
ËËH I
)
ËËI J
{
ÈÈ 
m_sharedMaterial
ÍÍ  
.
ÍÍ  !
EnableKeyword
ÍÍ! .
(
ÍÍ. /
ShaderUtilities
ÍÍ/ >
.
ÍÍ> ?
Keyword_MASK_SOFT
ÍÍ? P
)
ÍÍP Q
;
ÍÍQ R
m_sharedMaterial
ÎÎ  
.
ÎÎ  !
DisableKeyword
ÎÎ! /
(
ÎÎ/ 0
ShaderUtilities
ÎÎ0 ?
.
ÎÎ? @
Keyword_MASK_HARD
ÎÎ@ Q
)
ÎÎQ R
;
ÎÎR S
m_sharedMaterial
ÏÏ  
.
ÏÏ  !
DisableKeyword
ÏÏ! /
(
ÏÏ/ 0
ShaderUtilities
ÏÏ0 ?
.
ÏÏ? @
Keyword_MASK_TEX
ÏÏ@ P
)
ÏÏP Q
;
ÏÏQ R

UpdateMask
ÓÓ 
(
ÓÓ 
)
ÓÓ 
;
ÓÓ 
}
ÔÔ  
m_isMaskingEnabled
ÒÒ 
=
ÒÒ  
true
ÒÒ! %
;
ÒÒ% &
}
ÑÑ 	
void
àà 
DisableMasking
àà 
(
àà 
)
àà 
{
ââ 	
}
µµ 	
void
ππ 

UpdateMask
ππ 
(
ππ 
)
ππ 
{
∫∫ 	
if
ΩΩ 
(
ΩΩ 
m_rectTransform
ΩΩ 
!=
ΩΩ  "
null
ΩΩ# '
)
ΩΩ' (
{
ææ 
if
√√ 
(
√√ 
!
√√ 
ShaderUtilities
√√ $
.
√√$ %
isInitialized
√√% 2
)
√√2 3
ShaderUtilities
ƒƒ #
.
ƒƒ# $"
GetShaderPropertyIDs
ƒƒ$ 8
(
ƒƒ8 9
)
ƒƒ9 :
;
ƒƒ: ;!
m_isScrollRegionSet
»» #
=
»»$ %
true
»»& *
;
»»* +
float
   
	softnessX
   
=
    !
Mathf
  " '
.
  ' (
Min
  ( +
(
  + ,
Mathf
  , 1
.
  1 2
Min
  2 5
(
  5 6
m_margin
  6 >
.
  > ?
x
  ? @
,
  @ A
m_margin
  B J
.
  J K
z
  K L
)
  L M
,
  M N
m_sharedMaterial
  O _
.
  _ `
GetFloat
  ` h
(
  h i
ShaderUtilities
  i x
.
  x y
ID_MaskSoftnessX  y â
)  â ä
)  ä ã
;  ã å
float
ÀÀ 
	softnessY
ÀÀ 
=
ÀÀ  !
Mathf
ÀÀ" '
.
ÀÀ' (
Min
ÀÀ( +
(
ÀÀ+ ,
Mathf
ÀÀ, 1
.
ÀÀ1 2
Min
ÀÀ2 5
(
ÀÀ5 6
m_margin
ÀÀ6 >
.
ÀÀ> ?
y
ÀÀ? @
,
ÀÀ@ A
m_margin
ÀÀB J
.
ÀÀJ K
w
ÀÀK L
)
ÀÀL M
,
ÀÀM N
m_sharedMaterial
ÀÀO _
.
ÀÀ_ `
GetFloat
ÀÀ` h
(
ÀÀh i
ShaderUtilities
ÀÀi x
.
ÀÀx y
ID_MaskSoftnessYÀÀy â
)ÀÀâ ä
)ÀÀä ã
;ÀÀã å
	softnessX
ÕÕ 
=
ÕÕ 
	softnessX
ÕÕ %
>
ÕÕ& '
$num
ÕÕ( )
?
ÕÕ* +
	softnessX
ÕÕ, 5
:
ÕÕ6 7
$num
ÕÕ8 9
;
ÕÕ9 :
	softnessY
ŒŒ 
=
ŒŒ 
	softnessY
ŒŒ %
>
ŒŒ& '
$num
ŒŒ( )
?
ŒŒ* +
	softnessY
ŒŒ, 5
:
ŒŒ6 7
$num
ŒŒ8 9
;
ŒŒ9 :
float
–– 
width
–– 
=
–– 
(
–– 
m_rectTransform
–– .
.
––. /
rect
––/ 3
.
––3 4
width
––4 9
-
––: ;
Mathf
––< A
.
––A B
Max
––B E
(
––E F
m_margin
––F N
.
––N O
x
––O P
,
––P Q
$num
––R S
)
––S T
-
––U V
Mathf
––W \
.
––\ ]
Max
––] `
(
––` a
m_margin
––a i
.
––i j
z
––j k
,
––k l
$num
––m n
)
––n o
)
––o p
/
––q r
$num
––s t
+
––u v
	softnessX––w Ä
;––Ä Å
float
—— 
height
—— 
=
—— 
(
——  
m_rectTransform
——  /
.
——/ 0
rect
——0 4
.
——4 5
height
——5 ;
-
——< =
Mathf
——> C
.
——C D
Max
——D G
(
——G H
m_margin
——H P
.
——P Q
y
——Q R
,
——R S
$num
——T U
)
——U V
-
——W X
Mathf
——Y ^
.
——^ _
Max
——_ b
(
——b c
m_margin
——c k
.
——k l
w
——l m
,
——m n
$num
——o p
)
——p q
)
——q r
/
——s t
$num
——u v
+
——w x
	softnessY——y Ç
;——Ç É
Vector2
‘‘ 
center
‘‘ 
=
‘‘  
m_rectTransform
‘‘! 0
.
‘‘0 1
localPosition
‘‘1 >
+
‘‘? @
new
‘‘A D
Vector3
‘‘E L
(
‘‘L M
(
‘‘M N
$num
‘‘N R
-
‘‘S T
m_rectTransform
‘‘U d
.
‘‘d e
pivot
‘‘e j
.
‘‘j k
x
‘‘k l
)
‘‘l m
*
‘‘n o
m_rectTransform
‘‘p 
.‘‘ Ä
rect‘‘Ä Ñ
.‘‘Ñ Ö
width‘‘Ö ä
+‘‘ã å
(‘‘ç é
Mathf‘‘é ì
.‘‘ì î
Max‘‘î ó
(‘‘ó ò
m_margin‘‘ò †
.‘‘† °
x‘‘° ¢
,‘‘¢ £
$num‘‘§ •
)‘‘• ¶
-‘‘ß ®
Mathf‘‘© Æ
.‘‘Æ Ø
Max‘‘Ø ≤
(‘‘≤ ≥
m_margin‘‘≥ ª
.‘‘ª º
z‘‘º Ω
,‘‘Ω æ
$num‘‘ø ¿
)‘‘¿ ¡
)‘‘¡ ¬
/‘‘√ ƒ
$num‘‘≈ ∆
,‘‘∆ «
(‘‘» …
$num‘‘… Õ
-‘‘Œ œ
m_rectTransform‘‘– ﬂ
.‘‘ﬂ ‡
pivot‘‘‡ Â
.‘‘Â Ê
y‘‘Ê Á
)‘‘Á Ë
*‘‘È Í
m_rectTransform‘‘Î ˙
.‘‘˙ ˚
rect‘‘˚ ˇ
.‘‘ˇ Ä
height‘‘Ä Ü
+‘‘á à
(‘‘â ä
-‘‘ä ã
Mathf‘‘ã ê
.‘‘ê ë
Max‘‘ë î
(‘‘î ï
m_margin‘‘ï ù
.‘‘ù û
y‘‘û ü
,‘‘ü †
$num‘‘° ¢
)‘‘¢ £
+‘‘§ •
Mathf‘‘¶ ´
.‘‘´ ¨
Max‘‘¨ Ø
(‘‘Ø ∞
m_margin‘‘∞ ∏
.‘‘∏ π
w‘‘π ∫
,‘‘∫ ª
$num‘‘º Ω
)‘‘Ω æ
)‘‘æ ø
/‘‘¿ ¡
$num‘‘¬ √
)‘‘√ ƒ
;‘‘ƒ ≈
Vector4
◊◊ 
mask
◊◊ 
=
◊◊ 
new
◊◊ "
Vector4
◊◊# *
(
◊◊* +
center
◊◊+ 1
.
◊◊1 2
x
◊◊2 3
,
◊◊3 4
center
◊◊5 ;
.
◊◊; <
y
◊◊< =
,
◊◊= >
width
◊◊? D
,
◊◊D E
height
◊◊F L
)
◊◊L M
;
◊◊M N
m_sharedMaterial
ﬁﬁ  
.
ﬁﬁ  !
	SetVector
ﬁﬁ! *
(
ﬁﬁ* +
ShaderUtilities
ﬁﬁ+ :
.
ﬁﬁ: ;
ID_ClipRect
ﬁﬁ; F
,
ﬁﬁF G
mask
ﬁﬁH L
)
ﬁﬁL M
;
ﬁﬁM N
}
ﬂﬂ 
}
‡‡ 	
	protected
‰‰ 
override
‰‰ 
Material
‰‰ #
GetMaterial
‰‰$ /
(
‰‰/ 0
Material
‰‰0 8
mat
‰‰9 <
)
‰‰< =
{
ÂÂ 	
ShaderUtilities
ÁÁ 
.
ÁÁ "
GetShaderPropertyIDs
ÁÁ 0
(
ÁÁ0 1
)
ÁÁ1 2
;
ÁÁ2 3
if
ÔÔ 
(
ÔÔ 
m_fontMaterial
ÔÔ 
==
ÔÔ !
null
ÔÔ" &
||
ÔÔ' )
m_fontMaterial
ÔÔ* 8
.
ÔÔ8 9
GetInstanceID
ÔÔ9 F
(
ÔÔF G
)
ÔÔG H
!=
ÔÔI K
mat
ÔÔL O
.
ÔÔO P
GetInstanceID
ÔÔP ]
(
ÔÔ] ^
)
ÔÔ^ _
)
ÔÔ_ `
m_fontMaterial
 
=
  $
CreateMaterialInstance
! 7
(
7 8
mat
8 ;
)
; <
;
< =
m_sharedMaterial
ÚÚ 
=
ÚÚ 
m_fontMaterial
ÚÚ -
;
ÚÚ- .
	m_padding
ÙÙ 
=
ÙÙ #
GetPaddingForMaterial
ÙÙ -
(
ÙÙ- .
)
ÙÙ. /
;
ÙÙ/ 0(
m_ShouldRecalculateStencil
ˆˆ &
=
ˆˆ' (
true
ˆˆ) -
;
ˆˆ- .
SetVerticesDirty
˜˜ 
(
˜˜ 
)
˜˜ 
;
˜˜ 
SetMaterialDirty
¯¯ 
(
¯¯ 
)
¯¯ 
;
¯¯ 
return
˙˙ 
m_sharedMaterial
˙˙ #
;
˙˙# $
}
˚˚ 	
	protected
ÇÇ 
override
ÇÇ 
Material
ÇÇ #
[
ÇÇ# $
]
ÇÇ$ %
GetMaterials
ÇÇ& 2
(
ÇÇ2 3
Material
ÇÇ3 ;
[
ÇÇ; <
]
ÇÇ< =
mats
ÇÇ> B
)
ÇÇB C
{
ÉÉ 	
int
ÑÑ 
materialCount
ÑÑ 
=
ÑÑ 

m_textInfo
ÑÑ  *
.
ÑÑ* +
materialCount
ÑÑ+ 8
;
ÑÑ8 9
if
ÜÜ 
(
ÜÜ 
m_fontMaterials
ÜÜ 
==
ÜÜ  "
null
ÜÜ# '
)
ÜÜ' (
m_fontMaterials
áá 
=
áá  !
new
áá" %
Material
áá& .
[
áá. /
materialCount
áá/ <
]
áá< =
;
áá= >
else
àà 
if
àà 
(
àà 
m_fontMaterials
àà $
.
àà$ %
Length
àà% +
!=
àà, .
materialCount
àà/ <
)
àà< =
TMP_TextInfo
ââ 
.
ââ 
Resize
ââ #
(
ââ# $
ref
ââ$ '
m_fontMaterials
ââ( 7
,
ââ7 8
materialCount
ââ9 F
,
ââF G
false
ââH M
)
ââM N
;
ââN O
for
åå 
(
åå 
int
åå 
i
åå 
=
åå 
$num
åå 
;
åå 
i
åå 
<
åå 
materialCount
åå  -
;
åå- .
i
åå/ 0
++
åå0 2
)
åå2 3
{
çç 
if
éé 
(
éé 
i
éé 
==
éé 
$num
éé 
)
éé 
m_fontMaterials
èè #
[
èè# $
i
èè$ %
]
èè% &
=
èè' (
fontMaterial
èè) 5
;
èè5 6
else
êê 
m_fontMaterials
ëë #
[
ëë# $
i
ëë$ %
]
ëë% &
=
ëë' (
m_subTextObjects
ëë) 9
[
ëë9 :
i
ëë: ;
]
ëë; <
.
ëë< =
material
ëë= E
;
ëëE F
}
íí #
m_fontSharedMaterials
îî !
=
îî" #
m_fontMaterials
îî$ 3
;
îî3 4
return
ññ 
m_fontMaterials
ññ "
;
ññ" #
}
óó 	
	protected
õõ 
override
õõ 
void
õõ 
SetSharedMaterial
õõ  1
(
õõ1 2
Material
õõ2 :
mat
õõ; >
)
õõ> ?
{
úú 	
m_sharedMaterial
¢¢ 
=
¢¢ 
mat
¢¢ "
;
¢¢" #
	m_padding
§§ 
=
§§ #
GetPaddingForMaterial
§§ -
(
§§- .
)
§§. /
;
§§/ 0
SetMaterialDirty
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 	
	protected
ÆÆ 
override
ÆÆ 
Material
ÆÆ #
[
ÆÆ# $
]
ÆÆ$ % 
GetSharedMaterials
ÆÆ& 8
(
ÆÆ8 9
)
ÆÆ9 :
{
ØØ 	
int
∞∞ 
materialCount
∞∞ 
=
∞∞ 

m_textInfo
∞∞  *
.
∞∞* +
materialCount
∞∞+ 8
;
∞∞8 9
if
≤≤ 
(
≤≤ #
m_fontSharedMaterials
≤≤ %
==
≤≤& (
null
≤≤) -
)
≤≤- .#
m_fontSharedMaterials
≥≥ %
=
≥≥& '
new
≥≥( +
Material
≥≥, 4
[
≥≥4 5
materialCount
≥≥5 B
]
≥≥B C
;
≥≥C D
else
¥¥ 
if
¥¥ 
(
¥¥ #
m_fontSharedMaterials
¥¥ *
.
¥¥* +
Length
¥¥+ 1
!=
¥¥2 4
materialCount
¥¥5 B
)
¥¥B C
TMP_TextInfo
µµ 
.
µµ 
Resize
µµ #
(
µµ# $
ref
µµ$ '#
m_fontSharedMaterials
µµ( =
,
µµ= >
materialCount
µµ? L
,
µµL M
false
µµN S
)
µµS T
;
µµT U
for
∑∑ 
(
∑∑ 
int
∑∑ 
i
∑∑ 
=
∑∑ 
$num
∑∑ 
;
∑∑ 
i
∑∑ 
<
∑∑ 
materialCount
∑∑  -
;
∑∑- .
i
∑∑/ 0
++
∑∑0 2
)
∑∑2 3
{
∏∏ 
if
ππ 
(
ππ 
i
ππ 
==
ππ 
$num
ππ 
)
ππ #
m_fontSharedMaterials
∫∫ )
[
∫∫) *
i
∫∫* +
]
∫∫+ ,
=
∫∫- .
m_sharedMaterial
∫∫/ ?
;
∫∫? @
else
ªª #
m_fontSharedMaterials
ºº )
[
ºº) *
i
ºº* +
]
ºº+ ,
=
ºº- .
m_subTextObjects
ºº/ ?
[
ºº? @
i
ºº@ A
]
ººA B
.
ººB C
sharedMaterial
ººC Q
;
ººQ R
}
ΩΩ 
return
øø #
m_fontSharedMaterials
øø (
;
øø( )
}
¿¿ 	
	protected
∆∆ 
override
∆∆ 
void
∆∆  
SetSharedMaterials
∆∆  2
(
∆∆2 3
Material
∆∆3 ;
[
∆∆; <
]
∆∆< =
	materials
∆∆> G
)
∆∆G H
{
«« 	
int
»» 
materialCount
»» 
=
»» 

m_textInfo
»»  *
.
»»* +
materialCount
»»+ 8
;
»»8 9
if
ÀÀ 
(
ÀÀ #
m_fontSharedMaterials
ÀÀ %
==
ÀÀ& (
null
ÀÀ) -
)
ÀÀ- .#
m_fontSharedMaterials
ÃÃ %
=
ÃÃ& '
new
ÃÃ( +
Material
ÃÃ, 4
[
ÃÃ4 5
materialCount
ÃÃ5 B
]
ÃÃB C
;
ÃÃC D
else
ÕÕ 
if
ÕÕ 
(
ÕÕ #
m_fontSharedMaterials
ÕÕ *
.
ÕÕ* +
Length
ÕÕ+ 1
!=
ÕÕ2 4
materialCount
ÕÕ5 B
)
ÕÕB C
TMP_TextInfo
ŒŒ 
.
ŒŒ 
Resize
ŒŒ #
(
ŒŒ# $
ref
ŒŒ$ '#
m_fontSharedMaterials
ŒŒ( =
,
ŒŒ= >
materialCount
ŒŒ? L
,
ŒŒL M
false
ŒŒN S
)
ŒŒS T
;
ŒŒT U
for
—— 
(
—— 
int
—— 
i
—— 
=
—— 
$num
—— 
;
—— 
i
—— 
<
—— 
materialCount
——  -
;
——- .
i
——/ 0
++
——0 2
)
——2 3
{
““ 
if
”” 
(
”” 
i
”” 
==
”” 
$num
”” 
)
”” 
{
‘‘ 
if
÷÷ 
(
÷÷ 
	materials
÷÷ !
[
÷÷! "
i
÷÷" #
]
÷÷# $
.
÷÷$ %

GetTexture
÷÷% /
(
÷÷/ 0
ShaderUtilities
÷÷0 ?
.
÷÷? @

ID_MainTex
÷÷@ J
)
÷÷J K
==
÷÷L N
null
÷÷O S
||
÷÷T V
	materials
÷÷W `
[
÷÷` a
i
÷÷a b
]
÷÷b c
.
÷÷c d

GetTexture
÷÷d n
(
÷÷n o
ShaderUtilities
÷÷o ~
.
÷÷~ 

ID_MainTex÷÷ â
)÷÷â ä
.÷÷ä ã
GetInstanceID÷÷ã ò
(÷÷ò ô
)÷÷ô ö
!=÷÷õ ù 
m_sharedMaterial÷÷û Æ
.÷÷Æ Ø

GetTexture÷÷Ø π
(÷÷π ∫
ShaderUtilities÷÷∫ …
.÷÷…  

ID_MainTex÷÷  ‘
)÷÷‘ ’
.÷÷’ ÷
GetInstanceID÷÷÷ „
(÷÷„ ‰
)÷÷‰ Â
)÷÷Â Ê
continue
◊◊  
;
◊◊  !
m_sharedMaterial
ŸŸ $
=
ŸŸ% &#
m_fontSharedMaterials
ŸŸ' <
[
ŸŸ< =
i
ŸŸ= >
]
ŸŸ> ?
=
ŸŸ@ A
	materials
ŸŸB K
[
ŸŸK L
i
ŸŸL M
]
ŸŸM N
;
ŸŸN O
	m_padding
⁄⁄ 
=
⁄⁄ #
GetPaddingForMaterial
⁄⁄  5
(
⁄⁄5 6
m_sharedMaterial
⁄⁄6 F
)
⁄⁄F G
;
⁄⁄G H
}
€€ 
else
‹‹ 
{
›› 
if
ﬂﬂ 
(
ﬂﬂ 
	materials
ﬂﬂ !
[
ﬂﬂ! "
i
ﬂﬂ" #
]
ﬂﬂ# $
.
ﬂﬂ$ %

GetTexture
ﬂﬂ% /
(
ﬂﬂ/ 0
ShaderUtilities
ﬂﬂ0 ?
.
ﬂﬂ? @

ID_MainTex
ﬂﬂ@ J
)
ﬂﬂJ K
==
ﬂﬂL N
null
ﬂﬂO S
||
ﬂﬂT V
	materials
ﬂﬂW `
[
ﬂﬂ` a
i
ﬂﬂa b
]
ﬂﬂb c
.
ﬂﬂc d

GetTexture
ﬂﬂd n
(
ﬂﬂn o
ShaderUtilities
ﬂﬂo ~
.
ﬂﬂ~ 

ID_MainTexﬂﬂ â
)ﬂﬂâ ä
.ﬂﬂä ã
GetInstanceIDﬂﬂã ò
(ﬂﬂò ô
)ﬂﬂô ö
!=ﬂﬂõ ù 
m_subTextObjectsﬂﬂû Æ
[ﬂﬂÆ Ø
iﬂﬂØ ∞
]ﬂﬂ∞ ±
.ﬂﬂ± ≤
sharedMaterialﬂﬂ≤ ¿
.ﬂﬂ¿ ¡

GetTextureﬂﬂ¡ À
(ﬂﬂÀ Ã
ShaderUtilitiesﬂﬂÃ €
.ﬂﬂ€ ‹

ID_MainTexﬂﬂ‹ Ê
)ﬂﬂÊ Á
.ﬂﬂÁ Ë
GetInstanceIDﬂﬂË ı
(ﬂﬂı ˆ
)ﬂﬂˆ ˜
)ﬂﬂ˜ ¯
continue
‡‡  
;
‡‡  !
if
„„ 
(
„„ 
m_subTextObjects
„„ (
[
„„( )
i
„„) *
]
„„* +
.
„„+ ,
isDefaultMaterial
„„, =
)
„„= >
m_subTextObjects
‰‰ (
[
‰‰( )
i
‰‰) *
]
‰‰* +
.
‰‰+ ,
sharedMaterial
‰‰, :
=
‰‰; <#
m_fontSharedMaterials
‰‰= R
[
‰‰R S
i
‰‰S T
]
‰‰T U
=
‰‰V W
	materials
‰‰X a
[
‰‰a b
i
‰‰b c
]
‰‰c d
;
‰‰d e
}
ÂÂ 
}
ÊÊ 
}
ÁÁ 	
	protected
ÎÎ 
override
ÎÎ 
void
ÎÎ !
SetOutlineThickness
ÎÎ  3
(
ÎÎ3 4
float
ÎÎ4 9
	thickness
ÎÎ: C
)
ÎÎC D
{
ÏÏ 	
if
ÓÓ 
(
ÓÓ 
m_fontMaterial
ÓÓ 
!=
ÓÓ !
null
ÓÓ" &
&&
ÓÓ' )
m_sharedMaterial
ÓÓ* :
.
ÓÓ: ;
GetInstanceID
ÓÓ; H
(
ÓÓH I
)
ÓÓI J
!=
ÓÓK M
m_fontMaterial
ÓÓN \
.
ÓÓ\ ]
GetInstanceID
ÓÓ] j
(
ÓÓj k
)
ÓÓk l
)
ÓÓl m
{
ÔÔ 
m_sharedMaterial
  
=
! "
m_fontMaterial
# 1
;
1 2
m_canvasRenderer
ÒÒ  
.
ÒÒ  !
SetMaterial
ÒÒ! ,
(
ÒÒ, -
m_sharedMaterial
ÒÒ- =
,
ÒÒ= >
m_sharedMaterial
ÒÒ? O
.
ÒÒO P

GetTexture
ÒÒP Z
(
ÒÒZ [
ShaderUtilities
ÒÒ[ j
.
ÒÒj k

ID_MainTex
ÒÒk u
)
ÒÒu v
)
ÒÒv w
;
ÒÒw x
}
ÚÚ 
else
ÛÛ 
if
ÛÛ 
(
ÛÛ 
m_fontMaterial
ÛÛ "
==
ÛÛ# %
null
ÛÛ& *
)
ÛÛ* +
{
ÙÙ 
m_fontMaterial
ıı 
=
ıı  $
CreateMaterialInstance
ıı! 7
(
ıı7 8
m_sharedMaterial
ıı8 H
)
ııH I
;
ııI J
m_sharedMaterial
ˆˆ  
=
ˆˆ! "
m_fontMaterial
ˆˆ# 1
;
ˆˆ1 2
m_canvasRenderer
˜˜  
.
˜˜  !
SetMaterial
˜˜! ,
(
˜˜, -
m_sharedMaterial
˜˜- =
,
˜˜= >
m_sharedMaterial
˜˜? O
.
˜˜O P

GetTexture
˜˜P Z
(
˜˜Z [
ShaderUtilities
˜˜[ j
.
˜˜j k

ID_MainTex
˜˜k u
)
˜˜u v
)
˜˜v w
;
˜˜w x
}
¯¯ 
	thickness
˙˙ 
=
˙˙ 
Mathf
˙˙ 
.
˙˙ 
Clamp01
˙˙ %
(
˙˙% &
	thickness
˙˙& /
)
˙˙/ 0
;
˙˙0 1
m_sharedMaterial
˚˚ 
.
˚˚ 
SetFloat
˚˚ %
(
˚˚% &
ShaderUtilities
˚˚& 5
.
˚˚5 6
ID_OutlineWidth
˚˚6 E
,
˚˚E F
	thickness
˚˚G P
)
˚˚P Q
;
˚˚Q R
	m_padding
¸¸ 
=
¸¸ #
GetPaddingForMaterial
¸¸ -
(
¸¸- .
)
¸¸. /
;
¸¸/ 0
}
˝˝ 	
	protected
ÅÅ 
override
ÅÅ 
void
ÅÅ 
SetFaceColor
ÅÅ  ,
(
ÅÅ, -
Color32
ÅÅ- 4
color
ÅÅ5 :
)
ÅÅ: ;
{
ÇÇ 	
if
ÑÑ 
(
ÑÑ 
m_fontMaterial
ÑÑ 
==
ÑÑ !
null
ÑÑ" &
)
ÑÑ& '
m_fontMaterial
ÖÖ 
=
ÖÖ  $
CreateMaterialInstance
ÖÖ! 7
(
ÖÖ7 8
m_sharedMaterial
ÖÖ8 H
)
ÖÖH I
;
ÖÖI J
m_sharedMaterial
áá 
=
áá 
m_fontMaterial
áá -
;
áá- .
	m_padding
àà 
=
àà #
GetPaddingForMaterial
àà -
(
àà- .
)
àà. /
;
àà/ 0
m_sharedMaterial
ää 
.
ää 
SetColor
ää %
(
ää% &
ShaderUtilities
ää& 5
.
ää5 6
ID_FaceColor
ää6 B
,
ääB C
color
ääD I
)
ääI J
;
ääJ K
}
ãã 	
	protected
èè 
override
èè 
void
èè 
SetOutlineColor
èè  /
(
èè/ 0
Color32
èè0 7
color
èè8 =
)
èè= >
{
êê 	
if
íí 
(
íí 
m_fontMaterial
íí 
==
íí !
null
íí" &
)
íí& '
m_fontMaterial
ìì 
=
ìì  $
CreateMaterialInstance
ìì! 7
(
ìì7 8
m_sharedMaterial
ìì8 H
)
ììH I
;
ììI J
m_sharedMaterial
ïï 
=
ïï 
m_fontMaterial
ïï -
;
ïï- .
	m_padding
ññ 
=
ññ #
GetPaddingForMaterial
ññ -
(
ññ- .
)
ññ. /
;
ññ/ 0
m_sharedMaterial
òò 
.
òò 
SetColor
òò %
(
òò% &
ShaderUtilities
òò& 5
.
òò5 6
ID_OutlineColor
òò6 E
,
òòE F
color
òòG L
)
òòL M
;
òòM N
}
ôô 	
	protected
ùù 
override
ùù 
void
ùù 
SetShaderDepth
ùù  .
(
ùù. /
)
ùù/ 0
{
ûû 	
if
üü 
(
üü 
m_canvas
üü 
==
üü 
null
üü  
||
üü! #
m_sharedMaterial
üü$ 4
==
üü5 7
null
üü8 <
)
üü< =
return
†† 
;
†† 
if
¢¢ 
(
¢¢ 
m_canvas
¢¢ 
.
¢¢ 

renderMode
¢¢ #
==
¢¢$ &

RenderMode
¢¢' 1
.
¢¢1 2 
ScreenSpaceOverlay
¢¢2 D
||
¢¢E G
m_isOverlay
¢¢H S
)
¢¢S T
{
££ 
m_sharedMaterial
••  
.
••  !
SetFloat
••! )
(
••) *
ShaderUtilities
••* 9
.
••9 :!
ShaderTag_ZTestMode
••: M
,
••M N
$num
••O P
)
••P Q
;
••Q R
}
¶¶ 
else
ßß 
{
®® 
m_sharedMaterial
©©  
.
©©  !
SetFloat
©©! )
(
©©) *
ShaderUtilities
©©* 9
.
©©9 :!
ShaderTag_ZTestMode
©©: M
,
©©M N
$num
©©O P
)
©©P Q
;
©©Q R
}
™™ 
}
´´ 	
	protected
ØØ 
override
ØØ 
void
ØØ 

SetCulling
ØØ  *
(
ØØ* +
)
ØØ+ ,
{
∞∞ 	
if
±± 
(
±±  
m_isCullingEnabled
±± "
)
±±" #
{
≤≤ 
Material
≥≥ 
mat
≥≥ 
=
≥≥ "
materialForRendering
≥≥ 3
;
≥≥3 4
if
µµ 
(
µµ 
mat
µµ 
!=
µµ 
null
µµ 
)
µµ  
mat
∂∂ 
.
∂∂ 
SetFloat
∂∂  
(
∂∂  !
$str
∂∂! ,
,
∂∂, -
$num
∂∂. /
)
∂∂/ 0
;
∂∂0 1
for
∏∏ 
(
∏∏ 
int
∏∏ 
i
∏∏ 
=
∏∏ 
$num
∏∏ 
;
∏∏ 
i
∏∏  !
<
∏∏" #
m_subTextObjects
∏∏$ 4
.
∏∏4 5
Length
∏∏5 ;
&&
∏∏< >
m_subTextObjects
∏∏? O
[
∏∏O P
i
∏∏P Q
]
∏∏Q R
!=
∏∏S U
null
∏∏V Z
;
∏∏Z [
i
∏∏\ ]
++
∏∏] _
)
∏∏_ `
{
ππ 
mat
∫∫ 
=
∫∫ 
m_subTextObjects
∫∫ *
[
∫∫* +
i
∫∫+ ,
]
∫∫, -
.
∫∫- ."
materialForRendering
∫∫. B
;
∫∫B C
if
ºº 
(
ºº 
mat
ºº 
!=
ºº 
null
ºº #
)
ºº# $
{
ΩΩ 
mat
ææ 
.
ææ 
SetFloat
ææ $
(
ææ$ %
ShaderUtilities
ææ% 4
.
ææ4 5 
ShaderTag_CullMode
ææ5 G
,
ææG H
$num
ææI J
)
ææJ K
;
ææK L
}
øø 
}
¿¿ 
}
¡¡ 
else
¬¬ 
{
√√ 
Material
ƒƒ 
mat
ƒƒ 
=
ƒƒ "
materialForRendering
ƒƒ 3
;
ƒƒ3 4
if
∆∆ 
(
∆∆ 
mat
∆∆ 
!=
∆∆ 
null
∆∆ 
)
∆∆  
mat
«« 
.
«« 
SetFloat
««  
(
««  !
$str
««! ,
,
««, -
$num
««. /
)
««/ 0
;
««0 1
for
…… 
(
…… 
int
…… 
i
…… 
=
…… 
$num
…… 
;
…… 
i
……  !
<
……" #
m_subTextObjects
……$ 4
.
……4 5
Length
……5 ;
&&
……< >
m_subTextObjects
……? O
[
……O P
i
……P Q
]
……Q R
!=
……S U
null
……V Z
;
……Z [
i
……\ ]
++
……] _
)
……_ `
{
   
mat
ÀÀ 
=
ÀÀ 
m_subTextObjects
ÀÀ *
[
ÀÀ* +
i
ÀÀ+ ,
]
ÀÀ, -
.
ÀÀ- ."
materialForRendering
ÀÀ. B
;
ÀÀB C
if
ÕÕ 
(
ÕÕ 
mat
ÕÕ 
!=
ÕÕ 
null
ÕÕ #
)
ÕÕ# $
{
ŒŒ 
mat
œœ 
.
œœ 
SetFloat
œœ $
(
œœ$ %
ShaderUtilities
œœ% 4
.
œœ4 5 
ShaderTag_CullMode
œœ5 G
,
œœG H
$num
œœI J
)
œœJ K
;
œœK L
}
–– 
}
—— 
}
““ 
}
”” 	
void
◊◊ &
SetPerspectiveCorrection
◊◊ %
(
◊◊% &
)
◊◊& '
{
ÿÿ 	
if
ŸŸ 
(
ŸŸ 
m_isOrthographic
ŸŸ  
)
ŸŸ  !
m_sharedMaterial
⁄⁄  
.
⁄⁄  !
SetFloat
⁄⁄! )
(
⁄⁄) *
ShaderUtilities
⁄⁄* 9
.
⁄⁄9 :"
ID_PerspectiveFilter
⁄⁄: N
,
⁄⁄N O
$num
⁄⁄P T
)
⁄⁄T U
;
⁄⁄U V
else
€€ 
m_sharedMaterial
‹‹  
.
‹‹  !
SetFloat
‹‹! )
(
‹‹) *
ShaderUtilities
‹‹* 9
.
‹‹9 :"
ID_PerspectiveFilter
‹‹: N
,
‹‹N O
$num
‹‹P V
)
‹‹V W
;
‹‹W X
}
›› 	
void
·· 
SetMeshArrays
·· 
(
·· 
int
·· 
size
·· #
)
··# $
{
‚‚ 	

m_textInfo
„„ 
.
„„ 
meshInfo
„„ 
[
„„  
$num
„„  !
]
„„! "
.
„„" #
ResizeMeshInfo
„„# 1
(
„„1 2
size
„„2 6
)
„„6 7
;
„„7 8
m_canvasRenderer
ÂÂ 
.
ÂÂ 
SetMesh
ÂÂ $
(
ÂÂ$ %

m_textInfo
ÂÂ% /
.
ÂÂ/ 0
meshInfo
ÂÂ0 8
[
ÂÂ8 9
$num
ÂÂ9 :
]
ÂÂ: ;
.
ÂÂ; <
mesh
ÂÂ< @
)
ÂÂ@ A
;
ÂÂA B
}
ÊÊ 	
	protected
ÍÍ 
override
ÍÍ 
int
ÍÍ 
SetArraySizes
ÍÍ ,
(
ÍÍ, -
UnicodeChar
ÍÍ- 8
[
ÍÍ8 9
]
ÍÍ9 :
unicodeChars
ÍÍ; G
)
ÍÍG H
{
ÎÎ 	
int
ÒÒ 
spriteCount
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
;
ÒÒ  #
m_totalCharacterCount
ÛÛ !
=
ÛÛ" #
$num
ÛÛ$ %
;
ÛÛ% &
m_isUsingBold
ÙÙ 
=
ÙÙ 
false
ÙÙ !
;
ÙÙ! "
m_isParsingText
ıı 
=
ıı 
false
ıı #
;
ıı# $
tag_NoParsing
ˆˆ 
=
ˆˆ 
false
ˆˆ !
;
ˆˆ! "!
m_FontStyleInternal
˜˜ 
=
˜˜  !
m_fontStyle
˜˜" -
;
˜˜- .
m_fontStyleStack
¯¯ 
.
¯¯ 
Clear
¯¯ "
(
¯¯" #
)
¯¯# $
;
¯¯$ %"
m_FontWeightInternal
˙˙  
=
˙˙! "
(
˙˙# $!
m_FontStyleInternal
˙˙$ 7
&
˙˙8 9

FontStyles
˙˙: D
.
˙˙D E
Bold
˙˙E I
)
˙˙I J
==
˙˙K M

FontStyles
˙˙N X
.
˙˙X Y
Bold
˙˙Y ]
?
˙˙^ _

FontWeight
˙˙` j
.
˙˙j k
Bold
˙˙k o
:
˙˙p q
m_fontWeight
˙˙r ~
;
˙˙~ 
m_FontWeightStack
˚˚ 
.
˚˚ 

SetDefault
˚˚ (
(
˚˚( )"
m_FontWeightInternal
˚˚) =
)
˚˚= >
;
˚˚> ? 
m_currentFontAsset
˝˝ 
=
˝˝  
m_fontAsset
˝˝! ,
;
˝˝, -
m_currentMaterial
˛˛ 
=
˛˛ 
m_sharedMaterial
˛˛  0
;
˛˛0 1$
m_currentMaterialIndex
ˇˇ "
=
ˇˇ# $
$num
ˇˇ% &
;
ˇˇ& '&
m_materialReferenceStack
ÅÅ $
.
ÅÅ$ %

SetDefault
ÅÅ% /
(
ÅÅ/ 0
new
ÅÅ0 3
MaterialReference
ÅÅ4 E
(
ÅÅE F$
m_currentMaterialIndex
ÅÅF \
,
ÅÅ\ ] 
m_currentFontAsset
ÅÅ^ p
,
ÅÅp q
null
ÅÅr v
,
ÅÅv w 
m_currentMaterialÅÅx â
,ÅÅâ ä
	m_paddingÅÅã î
)ÅÅî ï
)ÅÅï ñ
;ÅÅñ ó,
m_materialReferenceIndexLookup
ÉÉ *
.
ÉÉ* +
Clear
ÉÉ+ 0
(
ÉÉ0 1
)
ÉÉ1 2
;
ÉÉ2 3
MaterialReference
ÑÑ 
.
ÑÑ "
AddMaterialReference
ÑÑ 2
(
ÑÑ2 3
m_currentMaterial
ÑÑ3 D
,
ÑÑD E 
m_currentFontAsset
ÑÑF X
,
ÑÑX Y"
m_materialReferences
ÑÑZ n
,
ÑÑn o-
m_materialReferenceIndexLookupÑÑp é
)ÑÑé è
;ÑÑè ê
if
áá 
(
áá 

m_textInfo
áá 
==
áá 
null
áá "
)
áá" #

m_textInfo
àà 
=
àà 
new
àà  
TMP_TextInfo
àà! -
(
àà- .)
m_InternalParsingBufferSize
àà. I
)
ààI J
;
ààJ K
else
ââ 
if
ââ 
(
ââ 

m_textInfo
ââ 
.
ââ  
characterInfo
ââ  -
.
ââ- .
Length
ââ. 4
<
ââ5 6)
m_InternalParsingBufferSize
ââ7 R
)
ââR S
TMP_TextInfo
ää 
.
ää 
Resize
ää #
(
ää# $
ref
ää$ '

m_textInfo
ää( 2
.
ää2 3
characterInfo
ää3 @
,
ää@ A)
m_InternalParsingBufferSize
ääB ]
,
ää] ^
false
ää_ d
)
ääd e
;
ääe f
m_textElementType
åå 
=
åå !
TMP_TextElementType
åå  3
.
åå3 4
	Character
åå4 =
;
åå= >
if
•• 
(
•• 
m_overflowMode
•• 
==
•• !
TextOverflowModes
••" 3
.
••3 4
Ellipsis
••4 <
)
••< =
{
¶¶ )
GetEllipsisSpecialCharacter
ßß +
(
ßß+ , 
m_currentFontAsset
ßß, >
)
ßß> ?
;
ßß? @
if
©© 
(
©© 

m_Ellipsis
©© 
.
©© 
	character
©© (
!=
©©) +
null
©©, 0
)
©©0 1
{
™™ 
if
´´ 
(
´´ 

m_Ellipsis
´´ "
.
´´" #
	fontAsset
´´# ,
.
´´, -
GetInstanceID
´´- :
(
´´: ;
)
´´; <
!=
´´= ? 
m_currentFontAsset
´´@ R
.
´´R S
GetInstanceID
´´S `
(
´´` a
)
´´a b
)
´´b c
{
¨¨ 
if
≠≠ 
(
≠≠ 
TMP_Settings
≠≠ (
.
≠≠( )!
matchMaterialPreset
≠≠) <
&&
≠≠= ?
m_currentMaterial
≠≠@ Q
.
≠≠Q R
GetInstanceID
≠≠R _
(
≠≠_ `
)
≠≠` a
!=
≠≠b d

m_Ellipsis
≠≠e o
.
≠≠o p
	fontAsset
≠≠p y
.
≠≠y z
material≠≠z Ç
.≠≠Ç É
GetInstanceID≠≠É ê
(≠≠ê ë
)≠≠ë í
)≠≠í ì

m_Ellipsis
ÆÆ &
.
ÆÆ& '
material
ÆÆ' /
=
ÆÆ0 1!
TMP_MaterialManager
ÆÆ2 E
.
ÆÆE F!
GetFallbackMaterial
ÆÆF Y
(
ÆÆY Z
m_currentMaterial
ÆÆZ k
,
ÆÆk l

m_Ellipsis
ÆÆm w
.
ÆÆw x
	fontAssetÆÆx Å
.ÆÆÅ Ç
materialÆÆÇ ä
)ÆÆä ã
;ÆÆã å
else
ØØ 

m_Ellipsis
∞∞ &
.
∞∞& '
material
∞∞' /
=
∞∞0 1

m_Ellipsis
∞∞2 <
.
∞∞< =
	fontAsset
∞∞= F
.
∞∞F G
material
∞∞G O
;
∞∞O P

m_Ellipsis
≤≤ "
.
≤≤" #
materialIndex
≤≤# 0
=
≤≤1 2
MaterialReference
≤≤3 D
.
≤≤D E"
AddMaterialReference
≤≤E Y
(
≤≤Y Z

m_Ellipsis
≤≤Z d
.
≤≤d e
material
≤≤e m
,
≤≤m n

m_Ellipsis
≤≤o y
.
≤≤y z
	fontAsset≤≤z É
,≤≤É Ñ$
m_materialReferences≤≤Ö ô
,≤≤ô ö.
m_materialReferenceIndexLookup≤≤õ π
)≤≤π ∫
;≤≤∫ ª"
m_materialReferences
≥≥ ,
[
≥≥, -

m_Ellipsis
≥≥- 7
.
≥≥7 8
materialIndex
≥≥8 E
]
≥≥E F
.
≥≥F G
referenceCount
≥≥G U
=
≥≥V W
$num
≥≥X Y
;
≥≥Y Z
}
¥¥ 
}
µµ 
else
∂∂ 
{
∑∑ 
m_overflowMode
∏∏ "
=
∏∏# $
TextOverflowModes
∏∏% 6
.
∏∏6 7
Truncate
∏∏7 ?
;
∏∏? @
if
∫∫ 
(
∫∫ 
!
∫∫ 
TMP_Settings
∫∫ %
.
∫∫% &
warningsDisabled
∫∫& 6
)
∫∫6 7
Debug
ªª 
.
ªª 

LogWarning
ªª (
(
ªª( )
$str
ªª) k
+
ªªl m!
m_currentFontAssetªªn Ä
.ªªÄ Å
nameªªÅ Ö
+ªªÜ á
$strªªà —
,ªª— “
thisªª” ◊
)ªª◊ ÿ
;ªªÿ Ÿ
}
ºº 
}
ΩΩ 
if
¬¬ 
(
¬¬ #
m_linkedTextComponent
¬¬ %
!=
¬¬& (
null
¬¬) -
&&
¬¬. 0
!
¬¬1 2,
m_isCalculatingPreferredValues
¬¬2 P
)
¬¬P Q
{
√√ #
m_linkedTextComponent
ƒƒ %
.
ƒƒ% &
text
ƒƒ& *
=
ƒƒ+ ,
string
ƒƒ- 3
.
ƒƒ3 4
Empty
ƒƒ4 9
;
ƒƒ9 :#
m_linkedTextComponent
≈≈ %
.
≈≈% &
	ClearMesh
≈≈& /
(
≈≈/ 0
)
≈≈0 1
;
≈≈1 2
}
∆∆ 
for
…… 
(
…… 
int
…… 
i
…… 
=
…… 
$num
…… 
;
…… 
i
…… 
<
…… 
unicodeChars
……  ,
.
……, -
Length
……- 3
&&
……4 6
unicodeChars
……7 C
[
……C D
i
……D E
]
……E F
.
……F G
unicode
……G N
!=
……O Q
$num
……R S
;
……S T
i
……U V
++
……V X
)
……X Y
{
   
if
ÃÃ 
(
ÃÃ 

m_textInfo
ÃÃ 
.
ÃÃ 
characterInfo
ÃÃ ,
==
ÃÃ- /
null
ÃÃ0 4
||
ÃÃ5 7#
m_totalCharacterCount
ÃÃ8 M
>=
ÃÃN P

m_textInfo
ÃÃQ [
.
ÃÃ[ \
characterInfo
ÃÃ\ i
.
ÃÃi j
Length
ÃÃj p
)
ÃÃp q
TMP_TextInfo
ÕÕ  
.
ÕÕ  !
Resize
ÕÕ! '
(
ÕÕ' (
ref
ÕÕ( +

m_textInfo
ÕÕ, 6
.
ÕÕ6 7
characterInfo
ÕÕ7 D
,
ÕÕD E#
m_totalCharacterCount
ÕÕF [
+
ÕÕ\ ]
$num
ÕÕ^ _
,
ÕÕ_ `
true
ÕÕa e
)
ÕÕe f
;
ÕÕf g
int
œœ 
unicode
œœ 
=
œœ 
unicodeChars
œœ *
[
œœ* +
i
œœ+ ,
]
œœ, -
.
œœ- .
unicode
œœ. 5
;
œœ5 6
if
”” 
(
”” 
m_isRichText
””  
&&
””! #
unicode
””$ +
==
””, .
$num
””/ 1
)
””1 2
{
‘‘ 
int
’’  
prev_MaterialIndex
’’ *
=
’’+ ,$
m_currentMaterialIndex
’’- C
;
’’C D
int
÷÷ 
endTagIndex
÷÷ #
;
÷÷# $
if
ŸŸ 
(
ŸŸ 
ValidateHtmlTag
ŸŸ '
(
ŸŸ' (
unicodeChars
ŸŸ( 4
,
ŸŸ4 5
i
ŸŸ6 7
+
ŸŸ8 9
$num
ŸŸ: ;
,
ŸŸ; <
out
ŸŸ= @
endTagIndex
ŸŸA L
)
ŸŸL M
)
ŸŸM N
{
⁄⁄ 
int
€€ 
tagStartIndex
€€ )
=
€€* +
unicodeChars
€€, 8
[
€€8 9
i
€€9 :
]
€€: ;
.
€€; <
stringIndex
€€< G
;
€€G H
i
‹‹ 
=
‹‹ 
endTagIndex
‹‹ '
;
‹‹' (
if
ﬁﬁ 
(
ﬁﬁ 
(
ﬁﬁ !
m_FontStyleInternal
ﬁﬁ 0
&
ﬁﬁ1 2

FontStyles
ﬁﬁ3 =
.
ﬁﬁ= >
Bold
ﬁﬁ> B
)
ﬁﬁB C
==
ﬁﬁD F

FontStyles
ﬁﬁG Q
.
ﬁﬁQ R
Bold
ﬁﬁR V
)
ﬁﬁV W
m_isUsingBold
ﬂﬂ )
=
ﬂﬂ* +
true
ﬂﬂ, 0
;
ﬂﬂ0 1
if
·· 
(
·· 
m_textElementType
·· -
==
··. 0!
TMP_TextElementType
··1 D
.
··D E
Sprite
··E K
)
··K L
{
‚‚ "
m_materialReferences
„„ 0
[
„„0 1$
m_currentMaterialIndex
„„1 G
]
„„G H
.
„„H I
referenceCount
„„I W
+=
„„X Z
$num
„„[ \
;
„„\ ]

m_textInfo
ÂÂ &
.
ÂÂ& '
characterInfo
ÂÂ' 4
[
ÂÂ4 5#
m_totalCharacterCount
ÂÂ5 J
]
ÂÂJ K
.
ÂÂK L
	character
ÂÂL U
=
ÂÂV W
(
ÂÂX Y
char
ÂÂY ]
)
ÂÂ] ^
(
ÂÂ^ _
$num
ÂÂ_ d
+
ÂÂe f
m_spriteIndex
ÂÂg t
)
ÂÂt u
;
ÂÂu v

m_textInfo
ÊÊ &
.
ÊÊ& '
characterInfo
ÊÊ' 4
[
ÊÊ4 5#
m_totalCharacterCount
ÊÊ5 J
]
ÊÊJ K
.
ÊÊK L
spriteIndex
ÊÊL W
=
ÊÊX Y
m_spriteIndex
ÊÊZ g
;
ÊÊg h

m_textInfo
ÁÁ &
.
ÁÁ& '
characterInfo
ÁÁ' 4
[
ÁÁ4 5#
m_totalCharacterCount
ÁÁ5 J
]
ÁÁJ K
.
ÁÁK L
	fontAsset
ÁÁL U
=
ÁÁV W 
m_currentFontAsset
ÁÁX j
;
ÁÁj k

m_textInfo
ËË &
.
ËË& '
characterInfo
ËË' 4
[
ËË4 5#
m_totalCharacterCount
ËË5 J
]
ËËJ K
.
ËËK L
spriteAsset
ËËL W
=
ËËX Y"
m_currentSpriteAsset
ËËZ n
;
ËËn o

m_textInfo
ÈÈ &
.
ÈÈ& '
characterInfo
ÈÈ' 4
[
ÈÈ4 5#
m_totalCharacterCount
ÈÈ5 J
]
ÈÈJ K
.
ÈÈK L$
materialReferenceIndex
ÈÈL b
=
ÈÈc d$
m_currentMaterialIndex
ÈÈe {
;
ÈÈ{ |

m_textInfo
ÍÍ &
.
ÍÍ& '
characterInfo
ÍÍ' 4
[
ÍÍ4 5#
m_totalCharacterCount
ÍÍ5 J
]
ÍÍJ K
.
ÍÍK L
textElement
ÍÍL W
=
ÍÍX Y"
m_currentSpriteAsset
ÍÍZ n
.
ÍÍn o#
spriteCharacterTableÍÍo É
[ÍÍÉ Ñ
m_spriteIndexÍÍÑ ë
]ÍÍë í
;ÍÍí ì

m_textInfo
ÎÎ &
.
ÎÎ& '
characterInfo
ÎÎ' 4
[
ÎÎ4 5#
m_totalCharacterCount
ÎÎ5 J
]
ÎÎJ K
.
ÎÎK L
elementType
ÎÎL W
=
ÎÎX Y
m_textElementType
ÎÎZ k
;
ÎÎk l

m_textInfo
ÏÏ &
.
ÏÏ& '
characterInfo
ÏÏ' 4
[
ÏÏ4 5#
m_totalCharacterCount
ÏÏ5 J
]
ÏÏJ K
.
ÏÏK L
index
ÏÏL Q
=
ÏÏR S
tagStartIndex
ÏÏT a
;
ÏÏa b

m_textInfo
ÌÌ &
.
ÌÌ& '
characterInfo
ÌÌ' 4
[
ÌÌ4 5#
m_totalCharacterCount
ÌÌ5 J
]
ÌÌJ K
.
ÌÌK L
stringLength
ÌÌL X
=
ÌÌY Z
unicodeChars
ÌÌ[ g
[
ÌÌg h
i
ÌÌh i
]
ÌÌi j
.
ÌÌj k
stringIndex
ÌÌk v
-
ÌÌw x
tagStartIndexÌÌy Ü
+ÌÌá à
$numÌÌâ ä
;ÌÌä ã
m_textElementType
 -
=
. /!
TMP_TextElementType
0 C
.
C D
	Character
D M
;
M N$
m_currentMaterialIndex
ÒÒ 2
=
ÒÒ3 4 
prev_MaterialIndex
ÒÒ5 G
;
ÒÒG H
spriteCount
ÛÛ '
+=
ÛÛ( *
$num
ÛÛ+ ,
;
ÛÛ, -#
m_totalCharacterCount
ÙÙ 1
+=
ÙÙ2 4
$num
ÙÙ5 6
;
ÙÙ6 7
}
ıı 
continue
˜˜  
;
˜˜  !
}
¯¯ 
}
˘˘ 
bool
¸¸ (
isUsingAlternativeTypeface
¸¸ /
=
¸¸0 1
false
¸¸2 7
;
¸¸7 8
bool
˝˝ 2
$isUsingFallbackOrAlternativeTypeface
˝˝ 9
=
˝˝: ;
false
˝˝< A
;
˝˝A B
TMP_FontAsset
ˇˇ 
prev_fontAsset
ˇˇ ,
=
ˇˇ- . 
m_currentFontAsset
ˇˇ/ A
;
ˇˇA B
Material
Ä	Ä	 
prev_material
Ä	Ä	 &
=
Ä	Ä	' (
m_currentMaterial
Ä	Ä	) :
;
Ä	Ä	: ;
int
Å	Å	  
prev_materialIndex
Å	Å	 &
=
Å	Å	' ($
m_currentMaterialIndex
Å	Å	) ?
;
Å	Å	? @
if
Ö	Ö	 
(
Ö	Ö	 
m_textElementType
Ö	Ö	 %
==
Ö	Ö	& (!
TMP_TextElementType
Ö	Ö	) <
.
Ö	Ö	< =
	Character
Ö	Ö	= F
)
Ö	Ö	F G
{
Ü	Ü	 
if
á	á	 
(
á	á	 
(
á	á	 !
m_FontStyleInternal
á	á	 ,
&
á	á	- .

FontStyles
á	á	/ 9
.
á	á	9 :
	UpperCase
á	á	: C
)
á	á	C D
==
á	á	E G

FontStyles
á	á	H R
.
á	á	R S
	UpperCase
á	á	S \
)
á	á	\ ]
{
à	à	 
if
ä	ä	 
(
ä	ä	 
char
ä	ä	  
.
ä	ä	  !
IsLower
ä	ä	! (
(
ä	ä	( )
(
ä	ä	) *
char
ä	ä	* .
)
ä	ä	. /
unicode
ä	ä	/ 6
)
ä	ä	6 7
)
ä	ä	7 8
unicode
ã	ã	 #
=
ã	ã	$ %
char
ã	ã	& *
.
ã	ã	* +
ToUpper
ã	ã	+ 2
(
ã	ã	2 3
(
ã	ã	3 4
char
ã	ã	4 8
)
ã	ã	8 9
unicode
ã	ã	9 @
)
ã	ã	@ A
;
ã	ã	A B
}
ç	ç	 
else
é	é	 
if
é	é	 
(
é	é	 
(
é	é	 !
m_FontStyleInternal
é	é	 1
&
é	é	2 3

FontStyles
é	é	4 >
.
é	é	> ?
	LowerCase
é	é	? H
)
é	é	H I
==
é	é	J L

FontStyles
é	é	M W
.
é	é	W X
	LowerCase
é	é	X a
)
é	é	a b
{
è	è	 
if
ë	ë	 
(
ë	ë	 
char
ë	ë	  
.
ë	ë	  !
IsUpper
ë	ë	! (
(
ë	ë	( )
(
ë	ë	) *
char
ë	ë	* .
)
ë	ë	. /
unicode
ë	ë	/ 6
)
ë	ë	6 7
)
ë	ë	7 8
unicode
í	í	 #
=
í	í	$ %
char
í	í	& *
.
í	í	* +
ToLower
í	í	+ 2
(
í	í	2 3
(
í	í	3 4
char
í	í	4 8
)
í	í	8 9
unicode
í	í	9 @
)
í	í	@ A
;
í	í	A B
}
ì	ì	 
else
î	î	 
if
î	î	 
(
î	î	 
(
î	î	 !
m_FontStyleInternal
î	î	 1
&
î	î	2 3

FontStyles
î	î	4 >
.
î	î	> ?
	SmallCaps
î	î	? H
)
î	î	H I
==
î	î	J L

FontStyles
î	î	M W
.
î	î	W X
	SmallCaps
î	î	X a
)
î	î	a b
{
ï	ï	 
if
ó	ó	 
(
ó	ó	 
char
ó	ó	  
.
ó	ó	  !
IsLower
ó	ó	! (
(
ó	ó	( )
(
ó	ó	) *
char
ó	ó	* .
)
ó	ó	. /
unicode
ó	ó	/ 6
)
ó	ó	6 7
)
ó	ó	7 8
unicode
ò	ò	 #
=
ò	ò	$ %
char
ò	ò	& *
.
ò	ò	* +
ToUpper
ò	ò	+ 2
(
ò	ò	2 3
(
ò	ò	3 4
char
ò	ò	4 8
)
ò	ò	8 9
unicode
ò	ò	9 @
)
ò	ò	@ A
;
ò	ò	A B
}
ô	ô	 
}
ö	ö	 
TMP_TextElement
ü	ü	 
	character
ü	ü	  )
=
ü	ü	* +
GetTextElement
ü	ü	, :
(
ü	ü	: ;
(
ü	ü	; <
uint
ü	ü	< @
)
ü	ü	@ A
unicode
ü	ü	A H
,
ü	ü	H I 
m_currentFontAsset
ü	ü	J \
,
ü	ü	\ ]!
m_FontStyleInternal
ü	ü	^ q
,
ü	ü	q r#
m_FontWeightInternalü	ü	s á
,ü	ü	á à
outü	ü	â å*
isUsingAlternativeTypefaceü	ü	ç ß
)ü	ü	ß ®
;ü	ü	® ©
if
≥	≥	 
(
≥	≥	 
	character
≥	≥	 
==
≥	≥	  
null
≥	≥	! %
)
≥	≥	% &
{
¥	¥	 
int
∂	∂	 
srcGlyph
∂	∂	  
=
∂	∂	! "
unicode
∂	∂	# *
;
∂	∂	* +
unicode
π	π	 
=
π	π	 
unicodeChars
π	π	 *
[
π	π	* +
i
π	π	+ ,
]
π	π	, -
.
π	π	- .
unicode
π	π	. 5
=
π	π	6 7
TMP_Settings
π	π	8 D
.
π	π	D E#
missingGlyphCharacter
π	π	E Z
==
π	π	[ ]
$num
π	π	^ _
?
π	π	` a
$num
π	π	b f
:
π	π	g h
TMP_Settings
π	π	i u
.
π	π	u v$
missingGlyphCharacterπ	π	v ã
;π	π	ã å
	character
º	º	 
=
º	º	 $
TMP_FontAssetUtilities
º	º	  6
.
º	º	6 7'
GetCharacterFromFontAsset
º	º	7 P
(
º	º	P Q
(
º	º	Q R
uint
º	º	R V
)
º	º	V W
unicode
º	º	W ^
,
º	º	^ _ 
m_currentFontAsset
º	º	` r
,
º	º	r s
true
º	º	t x
,
º	º	x y"
m_FontStyleInternalº	º	z ç
,º	º	ç é$
m_FontWeightInternalº	º	è £
,º	º	£ §
outº	º	• ®*
isUsingAlternativeTypefaceº	º	© √
)º	º	√ ƒ
;º	º	ƒ ≈
if
æ	æ	 
(
æ	æ	 
	character
æ	æ	 !
==
æ	æ	" $
null
æ	æ	% )
)
æ	æ	) *
{
ø	ø	 
if
¡	¡	 
(
¡	¡	 
TMP_Settings
¡	¡	 (
.
¡	¡	( ) 
fallbackFontAssets
¡	¡	) ;
!=
¡	¡	< >
null
¡	¡	? C
&&
¡	¡	D F
TMP_Settings
¡	¡	G S
.
¡	¡	S T 
fallbackFontAssets
¡	¡	T f
.
¡	¡	f g
Count
¡	¡	g l
>
¡	¡	m n
$num
¡	¡	o p
)
¡	¡	p q
	character
¬	¬	 %
=
¬	¬	& '$
TMP_FontAssetUtilities
¬	¬	( >
.
¬	¬	> ?(
GetCharacterFromFontAssets
¬	¬	? Y
(
¬	¬	Y Z
(
¬	¬	Z [
uint
¬	¬	[ _
)
¬	¬	_ `
unicode
¬	¬	` g
,
¬	¬	g h 
m_currentFontAsset
¬	¬	i {
,
¬	¬	{ |
TMP_Settings¬	¬	} â
.¬	¬	â ä"
fallbackFontAssets¬	¬	ä ú
,¬	¬	ú ù
true¬	¬	û ¢
,¬	¬	¢ £#
m_FontStyleInternal¬	¬	§ ∑
,¬	¬	∑ ∏$
m_FontWeightInternal¬	¬	π Õ
,¬	¬	Õ Œ
out¬	¬	œ “*
isUsingAlternativeTypeface¬	¬	” Ì
)¬	¬	Ì Ó
;¬	¬	Ó Ô
}
√	√	 
if
≈	≈	 
(
≈	≈	 
	character
≈	≈	 !
==
≈	≈	" $
null
≈	≈	% )
)
≈	≈	) *
{
∆	∆	 
if
»	»	 
(
»	»	 
TMP_Settings
»	»	 (
.
»	»	( )
defaultFontAsset
»	»	) 9
!=
»	»	: <
null
»	»	= A
)
»	»	A B
	character
…	…	 %
=
…	…	& '$
TMP_FontAssetUtilities
…	…	( >
.
…	…	> ?'
GetCharacterFromFontAsset
…	…	? X
(
…	…	X Y
(
…	…	Y Z
uint
…	…	Z ^
)
…	…	^ _
unicode
…	…	_ f
,
…	…	f g
TMP_Settings
…	…	h t
.
…	…	t u
defaultFontAsset…	…	u Ö
,…	…	Ö Ü
true…	…	á ã
,…	…	ã å#
m_FontStyleInternal…	…	ç †
,…	…	† °$
m_FontWeightInternal…	…	¢ ∂
,…	…	∂ ∑
out…	…	∏ ª*
isUsingAlternativeTypeface…	…	º ÷
)…	…	÷ ◊
;…	…	◊ ÿ
}
 	 	 
if
Ã	Ã	 
(
Ã	Ã	 
	character
Ã	Ã	 !
==
Ã	Ã	" $
null
Ã	Ã	% )
)
Ã	Ã	) *
{
Õ	Õ	 
unicode
œ	œ	 
=
œ	œ	  !
unicodeChars
œ	œ	" .
[
œ	œ	. /
i
œ	œ	/ 0
]
œ	œ	0 1
.
œ	œ	1 2
unicode
œ	œ	2 9
=
œ	œ	: ;
$num
œ	œ	< >
;
œ	œ	> ?
	character
–	–	 !
=
–	–	" #$
TMP_FontAssetUtilities
–	–	$ :
.
–	–	: ;'
GetCharacterFromFontAsset
–	–	; T
(
–	–	T U
(
–	–	U V
uint
–	–	V Z
)
–	–	Z [
unicode
–	–	[ b
,
–	–	b c 
m_currentFontAsset
–	–	d v
,
–	–	v w
true
–	–	x |
,
–	–	| }"
m_FontStyleInternal–	–	~ ë
,–	–	ë í$
m_FontWeightInternal–	–	ì ß
,–	–	ß ®
out–	–	© ¨*
isUsingAlternativeTypeface–	–	≠ «
)–	–	« »
;–	–	» …
}
—	—	 
if
”	”	 
(
”	”	 
	character
”	”	 !
==
”	”	" $
null
”	”	% )
)
”	”	) *
{
‘	‘	 
unicode
÷	÷	 
=
÷	÷	  !
unicodeChars
÷	÷	" .
[
÷	÷	. /
i
÷	÷	/ 0
]
÷	÷	0 1
.
÷	÷	1 2
unicode
÷	÷	2 9
=
÷	÷	: ;
$num
÷	÷	< @
;
÷	÷	@ A
	character
◊	◊	 !
=
◊	◊	" #$
TMP_FontAssetUtilities
◊	◊	$ :
.
◊	◊	: ;'
GetCharacterFromFontAsset
◊	◊	; T
(
◊	◊	T U
(
◊	◊	U V
uint
◊	◊	V Z
)
◊	◊	Z [
unicode
◊	◊	[ b
,
◊	◊	b c 
m_currentFontAsset
◊	◊	d v
,
◊	◊	v w
true
◊	◊	x |
,
◊	◊	| }"
m_FontStyleInternal◊	◊	~ ë
,◊	◊	ë í$
m_FontWeightInternal◊	◊	ì ß
,◊	◊	ß ®
out◊	◊	© ¨*
isUsingAlternativeTypeface◊	◊	≠ «
)◊	◊	« »
;◊	◊	» …
}
ÿ	ÿ	 
if
⁄	⁄	 
(
⁄	⁄	 
!
⁄	⁄	 
TMP_Settings
⁄	⁄	 %
.
⁄	⁄	% &
warningsDisabled
⁄	⁄	& 6
)
⁄	⁄	6 7
{
€	€	 
string
‹	‹	 
formattedWarning
‹	‹	 /
=
‹	‹	0 1
srcGlyph
‹	‹	2 :
>
‹	‹	; <
$num
‹	‹	= C
?
›	›	 
string
›	›	 $
.
›	›	$ %
Format
›	›	% +
(
›	›	+ ,
$str›	›	, ﬂ
,›	›	ﬂ ‡
srcGlyph›	›	· È
,›	›	È Í
m_fontAsset›	›	Î ˆ
.›	›	ˆ ˜
name›	›	˜ ˚
,›	›	˚ ¸
	character›	›	˝ Ü
.›	›	Ü á
unicode›	›	á é
,›	›	é è
this›	›	ê î
.›	›	î ï
name›	›	ï ô
)›	›	ô ö
:
ﬁ	ﬁ	 
string
ﬁ	ﬁ	 $
.
ﬁ	ﬁ	$ %
Format
ﬁ	ﬁ	% +
(
ﬁ	ﬁ	+ ,
$strﬁ	ﬁ	, ﬂ
,ﬁ	ﬁ	ﬂ ‡
srcGlyphﬁ	ﬁ	· È
,ﬁ	ﬁ	È Í
m_fontAssetﬁ	ﬁ	Î ˆ
.ﬁ	ﬁ	ˆ ˜
nameﬁ	ﬁ	˜ ˚
,ﬁ	ﬁ	˚ ¸
	characterﬁ	ﬁ	˝ Ü
.ﬁ	ﬁ	Ü á
unicodeﬁ	ﬁ	á é
,ﬁ	ﬁ	é è
thisﬁ	ﬁ	ê î
.ﬁ	ﬁ	î ï
nameﬁ	ﬁ	ï ô
)ﬁ	ﬁ	ô ö
;ﬁ	ﬁ	ö õ
Debug
‡	‡	 
.
‡	‡	 

LogWarning
‡	‡	 (
(
‡	‡	( )
formattedWarning
‡	‡	) 9
,
‡	‡	9 :
this
‡	‡	; ?
)
‡	‡	? @
;
‡	‡	@ A
}
·	·	 
}
‚	‚	 
if
‰	‰	 
(
‰	‰	 
	character
‰	‰	 
.
‰	‰	 
elementType
‰	‰	 )
==
‰	‰	* ,
TextElementType
‰	‰	- <
.
‰	‰	< =
	Character
‰	‰	= F
)
‰	‰	F G
{
Â	Â	 
if
Ê	Ê	 
(
Ê	Ê	 
	character
Ê	Ê	 !
.
Ê	Ê	! "
	textAsset
Ê	Ê	" +
.
Ê	Ê	+ ,

instanceID
Ê	Ê	, 6
!=
Ê	Ê	7 9 
m_currentFontAsset
Ê	Ê	: L
.
Ê	Ê	L M

instanceID
Ê	Ê	M W
)
Ê	Ê	W X
{
Á	Á	 2
$isUsingFallbackOrAlternativeTypeface
Ë	Ë	 <
=
Ë	Ë	= >
true
Ë	Ë	? C
;
Ë	Ë	C D 
m_currentFontAsset
È	È	 *
=
È	È	+ ,
	character
È	È	- 6
.
È	È	6 7
	textAsset
È	È	7 @
as
È	È	A C
TMP_FontAsset
È	È	D Q
;
È	È	Q R
}
Î	Î	 
}
Ï	Ï	 

m_textInfo
		 
.
		 
characterInfo
		 (
[
		( )#
m_totalCharacterCount
		) >
]
		> ?
.
		? @
elementType
		@ K
=
		L M!
TMP_TextElementType
		N a
.
		a b
	Character
		b k
;
		k l

m_textInfo
Ò	Ò	 
.
Ò	Ò	 
characterInfo
Ò	Ò	 (
[
Ò	Ò	( )#
m_totalCharacterCount
Ò	Ò	) >
]
Ò	Ò	> ?
.
Ò	Ò	? @
textElement
Ò	Ò	@ K
=
Ò	Ò	L M
	character
Ò	Ò	N W
;
Ò	Ò	W X

m_textInfo
Ú	Ú	 
.
Ú	Ú	 
characterInfo
Ú	Ú	 (
[
Ú	Ú	( )#
m_totalCharacterCount
Ú	Ú	) >
]
Ú	Ú	> ?
.
Ú	Ú	? @&
isUsingAlternateTypeface
Ú	Ú	@ X
=
Ú	Ú	Y Z(
isUsingAlternativeTypeface
Ú	Ú	[ u
;
Ú	Ú	u v

m_textInfo
Û	Û	 
.
Û	Û	 
characterInfo
Û	Û	 (
[
Û	Û	( )#
m_totalCharacterCount
Û	Û	) >
]
Û	Û	> ?
.
Û	Û	? @
	character
Û	Û	@ I
=
Û	Û	J K
(
Û	Û	L M
char
Û	Û	M Q
)
Û	Û	Q R
unicode
Û	Û	R Y
;
Û	Û	Y Z

m_textInfo
Ù	Ù	 
.
Ù	Ù	 
characterInfo
Ù	Ù	 (
[
Ù	Ù	( )#
m_totalCharacterCount
Ù	Ù	) >
]
Ù	Ù	> ?
.
Ù	Ù	? @
index
Ù	Ù	@ E
=
Ù	Ù	F G
unicodeChars
Ù	Ù	H T
[
Ù	Ù	T U
i
Ù	Ù	U V
]
Ù	Ù	V W
.
Ù	Ù	W X
stringIndex
Ù	Ù	X c
;
Ù	Ù	c d

m_textInfo
ı	ı	 
.
ı	ı	 
characterInfo
ı	ı	 (
[
ı	ı	( )#
m_totalCharacterCount
ı	ı	) >
]
ı	ı	> ?
.
ı	ı	? @
stringLength
ı	ı	@ L
=
ı	ı	M N
unicodeChars
ı	ı	O [
[
ı	ı	[ \
i
ı	ı	\ ]
]
ı	ı	] ^
.
ı	ı	^ _
length
ı	ı	_ e
;
ı	ı	e f

m_textInfo
ˆ	ˆ	 
.
ˆ	ˆ	 
characterInfo
ˆ	ˆ	 (
[
ˆ	ˆ	( )#
m_totalCharacterCount
ˆ	ˆ	) >
]
ˆ	ˆ	> ?
.
ˆ	ˆ	? @
	fontAsset
ˆ	ˆ	@ I
=
ˆ	ˆ	J K 
m_currentFontAsset
ˆ	ˆ	L ^
;
ˆ	ˆ	^ _
if
˘	˘	 
(
˘	˘	 
	character
˘	˘	 
.
˘	˘	 
elementType
˘	˘	 )
==
˘	˘	* ,
TextElementType
˘	˘	- <
.
˘	˘	< =
Sprite
˘	˘	= C
)
˘	˘	C D
{
˙	˙	 
TMP_SpriteAsset
˚	˚	 #
spriteAssetRef
˚	˚	$ 2
=
˚	˚	3 4
	character
˚	˚	5 >
.
˚	˚	> ?
	textAsset
˚	˚	? H
as
˚	˚	I K
TMP_SpriteAsset
˚	˚	L [
;
˚	˚	[ \$
m_currentMaterialIndex
¸	¸	 *
=
¸	¸	+ ,
MaterialReference
¸	¸	- >
.
¸	¸	> ?"
AddMaterialReference
¸	¸	? S
(
¸	¸	S T
spriteAssetRef
¸	¸	T b
.
¸	¸	b c
material
¸	¸	c k
,
¸	¸	k l
spriteAssetRef
¸	¸	m {
,
¸	¸	{ |#
m_materialReferences¸	¸	} ë
,¸	¸	ë í.
m_materialReferenceIndexLookup¸	¸	ì ±
)¸	¸	± ≤
;¸	¸	≤ ≥"
m_materialReferences
˝	˝	 (
[
˝	˝	( )$
m_currentMaterialIndex
˝	˝	) ?
]
˝	˝	? @
.
˝	˝	@ A
referenceCount
˝	˝	A O
+=
˝	˝	P R
$num
˝	˝	S T
;
˝	˝	T U

m_textInfo
ˇ	ˇ	 
.
ˇ	ˇ	 
characterInfo
ˇ	ˇ	 ,
[
ˇ	ˇ	, -#
m_totalCharacterCount
ˇ	ˇ	- B
]
ˇ	ˇ	B C
.
ˇ	ˇ	C D
elementType
ˇ	ˇ	D O
=
ˇ	ˇ	P Q!
TMP_TextElementType
ˇ	ˇ	R e
.
ˇ	ˇ	e f
Sprite
ˇ	ˇ	f l
;
ˇ	ˇ	l m

m_textInfo
Ä
Ä
 
.
Ä
Ä
 
characterInfo
Ä
Ä
 ,
[
Ä
Ä
, -#
m_totalCharacterCount
Ä
Ä
- B
]
Ä
Ä
B C
.
Ä
Ä
C D$
materialReferenceIndex
Ä
Ä
D Z
=
Ä
Ä
[ \$
m_currentMaterialIndex
Ä
Ä
] s
;
Ä
Ä
s t

m_textInfo
Å
Å
 
.
Å
Å
 
characterInfo
Å
Å
 ,
[
Å
Å
, -#
m_totalCharacterCount
Å
Å
- B
]
Å
Å
B C
.
Å
Å
C D
spriteAsset
Å
Å
D O
=
Å
Å
P Q
spriteAssetRef
Å
Å
R `
;
Å
Å
` a

m_textInfo
Ç
Ç
 
.
Ç
Ç
 
characterInfo
Ç
Ç
 ,
[
Ç
Ç
, -#
m_totalCharacterCount
Ç
Ç
- B
]
Ç
Ç
B C
.
Ç
Ç
C D
spriteIndex
Ç
Ç
D O
=
Ç
Ç
P Q
(
Ç
Ç
R S
int
Ç
Ç
S V
)
Ç
Ç
V W
	character
Ç
Ç
W `
.
Ç
Ç
` a

glyphIndex
Ç
Ç
a k
;
Ç
Ç
k l
m_textElementType
Ö
Ö
 %
=
Ö
Ö
& '!
TMP_TextElementType
Ö
Ö
( ;
.
Ö
Ö
; <
	Character
Ö
Ö
< E
;
Ö
Ö
E F$
m_currentMaterialIndex
Ü
Ü
 *
=
Ü
Ü
+ , 
prev_materialIndex
Ü
Ü
- ?
;
Ü
Ü
? @
spriteCount
à
à
 
+=
à
à
  "
$num
à
à
# $
;
à
à
$ %#
m_totalCharacterCount
â
â
 )
+=
â
â
* ,
$num
â
â
- .
;
â
â
. /
continue
ã
ã
 
;
ã
ã
 
}
å
å
 
if
é
é
 
(
é
é
 2
$isUsingFallbackOrAlternativeTypeface
é
é
 8
&&
é
é
9 ; 
m_currentFontAsset
é
é
< N
.
é
é
N O

instanceID
é
é
O Y
!=
é
é
Z \
m_fontAsset
é
é
] h
.
é
é
h i

instanceID
é
é
i s
)
é
é
s t
{
è
è
 
if
ë
ë
 
(
ë
ë
 
TMP_Settings
ë
ë
 $
.
ë
ë
$ %!
matchMaterialPreset
ë
ë
% 8
)
ë
ë
8 9
m_currentMaterial
í
í
 )
=
í
í
* +!
TMP_MaterialManager
í
í
, ?
.
í
í
? @!
GetFallbackMaterial
í
í
@ S
(
í
í
S T
m_currentMaterial
í
í
T e
,
í
í
e f 
m_currentFontAsset
í
í
g y
.
í
í
y z
materialí
í
z Ç
)í
í
Ç É
;í
í
É Ñ
else
ì
ì
 
m_currentMaterial
î
î
 )
=
î
î
* + 
m_currentFontAsset
î
î
, >
.
î
î
> ?
material
î
î
? G
;
î
î
G H$
m_currentMaterialIndex
ñ
ñ
 *
=
ñ
ñ
+ ,
MaterialReference
ñ
ñ
- >
.
ñ
ñ
> ?"
AddMaterialReference
ñ
ñ
? S
(
ñ
ñ
S T
m_currentMaterial
ñ
ñ
T e
,
ñ
ñ
e f 
m_currentFontAsset
ñ
ñ
g y
,
ñ
ñ
y z#
m_materialReferencesñ
ñ
{ è
,ñ
ñ
è ê.
m_materialReferenceIndexLookupñ
ñ
ë Ø
)ñ
ñ
Ø ∞
;ñ
ñ
∞ ±
}
ó
ó
 
if
ö
ö
 
(
ö
ö
 
	character
ö
ö
 
!=
ö
ö
  
null
ö
ö
! %
&&
ö
ö
& (
	character
ö
ö
) 2
.
ö
ö
2 3
glyph
ö
ö
3 8
.
ö
ö
8 9

atlasIndex
ö
ö
9 C
>
ö
ö
D E
$num
ö
ö
F G
)
ö
ö
G H
{
õ
õ
 
m_currentMaterial
ú
ú
 %
=
ú
ú
& '!
TMP_MaterialManager
ú
ú
( ;
.
ú
ú
; <!
GetFallbackMaterial
ú
ú
< O
(
ú
ú
O P 
m_currentFontAsset
ú
ú
P b
,
ú
ú
b c
m_currentMaterial
ú
ú
d u
,
ú
ú
u v
	characterú
ú
w Ä
.ú
ú
Ä Å
glyphú
ú
Å Ü
.ú
ú
Ü á

atlasIndexú
ú
á ë
)ú
ú
ë í
;ú
ú
í ì$
m_currentMaterialIndex
û
û
 *
=
û
û
+ ,
MaterialReference
û
û
- >
.
û
û
> ?"
AddMaterialReference
û
û
? S
(
û
û
S T
m_currentMaterial
û
û
T e
,
û
û
e f 
m_currentFontAsset
û
û
g y
,
û
û
y z#
m_materialReferencesû
û
{ è
,û
û
è ê.
m_materialReferenceIndexLookupû
û
ë Ø
)û
û
Ø ∞
;û
û
∞ ±2
$isUsingFallbackOrAlternativeTypeface
†
†
 8
=
†
†
9 :
true
†
†
; ?
;
†
†
? @
}
°
°
 
if
£
£
 
(
£
£
 
!
£
£
 
char
£
£
 
.
£
£
 
IsWhiteSpace
£
£
 &
(
£
£
& '
(
£
£
' (
char
£
£
( ,
)
£
£
, -
unicode
£
£
- 4
)
£
£
4 5
&&
£
£
6 8
unicode
£
£
9 @
!=
£
£
A C
$num
£
£
D J
)
£
£
J K
{
§
§
 
if
¶
¶
 
(
¶
¶
 "
m_materialReferences
¶
¶
 ,
[
¶
¶
, -$
m_currentMaterialIndex
¶
¶
- C
]
¶
¶
C D
.
¶
¶
D E
referenceCount
¶
¶
E S
<
¶
¶
T U
$num
¶
¶
V [
)
¶
¶
[ \"
m_materialReferences
ß
ß
 ,
[
ß
ß
, -$
m_currentMaterialIndex
ß
ß
- C
]
ß
ß
C D
.
ß
ß
D E
referenceCount
ß
ß
E S
+=
ß
ß
T V
$num
ß
ß
W X
;
ß
ß
X Y
else
®
®
 
{
©
©
 $
m_currentMaterialIndex
™
™
 .
=
™
™
/ 0
MaterialReference
™
™
1 B
.
™
™
B C"
AddMaterialReference
™
™
C W
(
™
™
W X
new
™
™
X [
Material
™
™
\ d
(
™
™
d e
m_currentMaterial
™
™
e v
)
™
™
v w
,
™
™
w x!
m_currentFontAsset™
™
y ã
,™
™
ã å$
m_materialReferences™
™
ç °
,™
™
° ¢.
m_materialReferenceIndexLookup™
™
£ ¡
)™
™
¡ ¬
;™
™
¬ √"
m_materialReferences
´
´
 ,
[
´
´
, -$
m_currentMaterialIndex
´
´
- C
]
´
´
C D
.
´
´
D E
referenceCount
´
´
E S
+=
´
´
T V
$num
´
´
W X
;
´
´
X Y
}
¨
¨
 
}
≠
≠
 

m_textInfo
Ø
Ø
 
.
Ø
Ø
 
characterInfo
Ø
Ø
 (
[
Ø
Ø
( )#
m_totalCharacterCount
Ø
Ø
) >
]
Ø
Ø
> ?
.
Ø
Ø
? @
material
Ø
Ø
@ H
=
Ø
Ø
I J
m_currentMaterial
Ø
Ø
K \
;
Ø
Ø
\ ]

m_textInfo
∞
∞
 
.
∞
∞
 
characterInfo
∞
∞
 (
[
∞
∞
( )#
m_totalCharacterCount
∞
∞
) >
]
∞
∞
> ?
.
∞
∞
? @$
materialReferenceIndex
∞
∞
@ V
=
∞
∞
W X$
m_currentMaterialIndex
∞
∞
Y o
;
∞
∞
o p"
m_materialReferences
±
±
 $
[
±
±
$ %$
m_currentMaterialIndex
±
±
% ;
]
±
±
; <
.
±
±
< = 
isFallbackMaterial
±
±
= O
=
±
±
P Q2
$isUsingFallbackOrAlternativeTypeface
±
±
R v
;
±
±
v w
if
¥
¥
 
(
¥
¥
 2
$isUsingFallbackOrAlternativeTypeface
¥
¥
 8
)
¥
¥
8 9
{
µ
µ
 "
m_materialReferences
∂
∂
 (
[
∂
∂
( )$
m_currentMaterialIndex
∂
∂
) ?
]
∂
∂
? @
.
∂
∂
@ A
fallbackMaterial
∂
∂
A Q
=
∂
∂
R S
prev_material
∂
∂
T a
;
∂
∂
a b 
m_currentFontAsset
∑
∑
 &
=
∑
∑
' (
prev_fontAsset
∑
∑
) 7
;
∑
∑
7 8
m_currentMaterial
∏
∏
 %
=
∏
∏
& '
prev_material
∏
∏
( 5
;
∏
∏
5 6$
m_currentMaterialIndex
π
π
 *
=
π
π
+ , 
prev_materialIndex
π
π
- ?
;
π
π
? @
}
∫
∫
 #
m_totalCharacterCount
º
º
 %
+=
º
º
& (
$num
º
º
) *
;
º
º
* +
}
Ω
Ω
 
if
¿
¿
 
(
¿
¿
 ,
m_isCalculatingPreferredValues
¿
¿
 .
)
¿
¿
. /
{
¡
¡
 ,
m_isCalculatingPreferredValues
¬
¬
 .
=
¬
¬
/ 0
false
¬
¬
1 6
;
¬
¬
6 7&
m_isInputParsingRequired
√
√
 (
=
√
√
) *
true
√
√
+ /
;
√
√
/ 0
return
ƒ
ƒ
 #
m_totalCharacterCount
ƒ
ƒ
 ,
;
ƒ
ƒ
, -
}
≈
≈
 

m_textInfo
»
»
 
.
»
»
 
spriteCount
»
»
 "
=
»
»
# $
spriteCount
»
»
% 0
;
»
»
0 1
int
…
…
 
materialCount
…
…
 
=
…
…
 

m_textInfo
…
…
  *
.
…
…
* +
materialCount
…
…
+ 8
=
…
…
9 :,
m_materialReferenceIndexLookup
…
…
; Y
.
…
…
Y Z
Count
…
…
Z _
;
…
…
_ `
if
Ã
Ã
 
(
Ã
Ã
 
materialCount
Ã
Ã
 
>
Ã
Ã
 

m_textInfo
Ã
Ã
  *
.
Ã
Ã
* +
meshInfo
Ã
Ã
+ 3
.
Ã
Ã
3 4
Length
Ã
Ã
4 :
)
Ã
Ã
: ;
TMP_TextInfo
Õ
Õ
 
.
Õ
Õ
 
Resize
Õ
Õ
 #
(
Õ
Õ
# $
ref
Õ
Õ
$ '

m_textInfo
Õ
Õ
( 2
.
Õ
Õ
2 3
meshInfo
Õ
Õ
3 ;
,
Õ
Õ
; <
materialCount
Õ
Õ
= J
,
Õ
Õ
J K
false
Õ
Õ
L Q
)
Õ
Õ
Q R
;
Õ
Õ
R S
if
–
–
 
(
–
–
 
materialCount
–
–
 
>
–
–
 
m_subTextObjects
–
–
  0
.
–
–
0 1
Length
–
–
1 7
)
–
–
7 8
TMP_TextInfo
—
—
 
.
—
—
 
Resize
—
—
 #
(
—
—
# $
ref
—
—
$ '
m_subTextObjects
—
—
( 8
,
—
—
8 9
Mathf
—
—
: ?
.
—
—
? @
NextPowerOfTwo
—
—
@ N
(
—
—
N O
materialCount
—
—
O \
+
—
—
] ^
$num
—
—
_ `
)
—
—
` a
)
—
—
a b
;
—
—
b c
if
‘
‘
 
(
‘
‘
 

m_textInfo
‘
‘
 
.
‘
‘
 
characterInfo
‘
‘
 (
.
‘
‘
( )
Length
‘
‘
) /
-
‘
‘
0 1#
m_totalCharacterCount
‘
‘
2 G
>
‘
‘
H I
$num
‘
‘
J M
)
‘
‘
M N
TMP_TextInfo
’
’
 
.
’
’
 
Resize
’
’
 #
(
’
’
# $
ref
’
’
$ '

m_textInfo
’
’
( 2
.
’
’
2 3
characterInfo
’
’
3 @
,
’
’
@ A
Mathf
’
’
B G
.
’
’
G H
Max
’
’
H K
(
’
’
K L#
m_totalCharacterCount
’
’
L a
+
’
’
b c
$num
’
’
d e
,
’
’
e f
$num
’
’
g j
)
’
’
j k
,
’
’
k l
true
’
’
m q
)
’
’
q r
;
’
’
r s
for
Ÿ
Ÿ
 
(
Ÿ
Ÿ
 
int
Ÿ
Ÿ
 
i
Ÿ
Ÿ
 
=
Ÿ
Ÿ
 
$num
Ÿ
Ÿ
 
;
Ÿ
Ÿ
 
i
Ÿ
Ÿ
 
<
Ÿ
Ÿ
 
materialCount
Ÿ
Ÿ
  -
;
Ÿ
Ÿ
- .
i
Ÿ
Ÿ
/ 0
++
Ÿ
Ÿ
0 2
)
Ÿ
Ÿ
2 3
{
⁄
⁄
 
if
‹
‹
 
(
‹
‹
 
i
‹
‹
 
>
‹
‹
 
$num
‹
‹
 
)
‹
‹
 
{
›
›
 
if
ﬁ
ﬁ
 
(
ﬁ
ﬁ
 
m_subTextObjects
ﬁ
ﬁ
 (
[
ﬁ
ﬁ
( )
i
ﬁ
ﬁ
) *
]
ﬁ
ﬁ
* +
==
ﬁ
ﬁ
, .
null
ﬁ
ﬁ
/ 3
)
ﬁ
ﬁ
3 4
{
ﬂ
ﬂ
 
m_subTextObjects
‡
‡
 (
[
‡
‡
( )
i
‡
‡
) *
]
‡
‡
* +
=
‡
‡
, -
TMP_SubMeshUI
‡
‡
. ;
.
‡
‡
; <
AddSubTextObject
‡
‡
< L
(
‡
‡
L M
this
‡
‡
M Q
,
‡
‡
Q R"
m_materialReferences
‡
‡
S g
[
‡
‡
g h
i
‡
‡
h i
]
‡
‡
i j
)
‡
‡
j k
;
‡
‡
k l

m_textInfo
„
„
 "
.
„
„
" #
meshInfo
„
„
# +
[
„
„
+ ,
i
„
„
, -
]
„
„
- .
.
„
„
. /
vertices
„
„
/ 7
=
„
„
8 9
null
„
„
: >
;
„
„
> ?
}
‰
‰
 
if
È
È
 
(
È
È
 
m_rectTransform
È
È
 '
.
È
È
' (
pivot
È
È
( -
!=
È
È
. 0
m_subTextObjects
È
È
1 A
[
È
È
A B
i
È
È
B C
]
È
È
C D
.
È
È
D E
rectTransform
È
È
E R
.
È
È
R S
pivot
È
È
S X
)
È
È
X Y
m_subTextObjects
Í
Í
 (
[
Í
Í
( )
i
Í
Í
) *
]
Í
Í
* +
.
Í
Í
+ ,
rectTransform
Í
Í
, 9
.
Í
Í
9 :
pivot
Í
Í
: ?
=
Í
Í
@ A
m_rectTransform
Í
Í
B Q
.
Í
Í
Q R
pivot
Í
Í
R W
;
Í
Í
W X
if
Ì
Ì
 
(
Ì
Ì
 
m_subTextObjects
Ì
Ì
 (
[
Ì
Ì
( )
i
Ì
Ì
) *
]
Ì
Ì
* +
.
Ì
Ì
+ ,
sharedMaterial
Ì
Ì
, :
==
Ì
Ì
; =
null
Ì
Ì
> B
||
Ì
Ì
C E
m_subTextObjects
Ì
Ì
F V
[
Ì
Ì
V W
i
Ì
Ì
W X
]
Ì
Ì
X Y
.
Ì
Ì
Y Z
sharedMaterial
Ì
Ì
Z h
.
Ì
Ì
h i
GetInstanceID
Ì
Ì
i v
(
Ì
Ì
v w
)
Ì
Ì
w x
!=
Ì
Ì
y {#
m_materialReferencesÌ
Ì
| ê
[Ì
Ì
ê ë
iÌ
Ì
ë í
]Ì
Ì
í ì
.Ì
Ì
ì î
materialÌ
Ì
î ú
.Ì
Ì
ú ù
GetInstanceIDÌ
Ì
ù ™
(Ì
Ì
™ ´
)Ì
Ì
´ ¨
)Ì
Ì
¨ ≠
{
Ó
Ó
 
m_subTextObjects
Ô
Ô
 (
[
Ô
Ô
( )
i
Ô
Ô
) *
]
Ô
Ô
* +
.
Ô
Ô
+ ,
sharedMaterial
Ô
Ô
, :
=
Ô
Ô
; <"
m_materialReferences
Ô
Ô
= Q
[
Ô
Ô
Q R
i
Ô
Ô
R S
]
Ô
Ô
S T
.
Ô
Ô
T U
material
Ô
Ô
U ]
;
Ô
Ô
] ^
m_subTextObjects


 (
[


( )
i


) *
]


* +
.


+ ,
	fontAsset


, 5
=


6 7"
m_materialReferences


8 L
[


L M
i


M N
]


N O
.


O P
	fontAsset


P Y
;


Y Z
m_subTextObjects
Ò
Ò
 (
[
Ò
Ò
( )
i
Ò
Ò
) *
]
Ò
Ò
* +
.
Ò
Ò
+ ,
spriteAsset
Ò
Ò
, 7
=
Ò
Ò
8 9"
m_materialReferences
Ò
Ò
: N
[
Ò
Ò
N O
i
Ò
Ò
O P
]
Ò
Ò
P Q
.
Ò
Ò
Q R
spriteAsset
Ò
Ò
R ]
;
Ò
Ò
] ^
}
Ú
Ú
 
if
ı
ı
 
(
ı
ı
 "
m_materialReferences
ı
ı
 ,
[
ı
ı
, -
i
ı
ı
- .
]
ı
ı
. /
.
ı
ı
/ 0 
isFallbackMaterial
ı
ı
0 B
)
ı
ı
B C
{
ˆ
ˆ
 
m_subTextObjects
˜
˜
 (
[
˜
˜
( )
i
˜
˜
) *
]
˜
˜
* +
.
˜
˜
+ ,
fallbackMaterial
˜
˜
, <
=
˜
˜
= >"
m_materialReferences
˜
˜
? S
[
˜
˜
S T
i
˜
˜
T U
]
˜
˜
U V
.
˜
˜
V W
material
˜
˜
W _
;
˜
˜
_ `
m_subTextObjects
¯
¯
 (
[
¯
¯
( )
i
¯
¯
) *
]
¯
¯
* +
.
¯
¯
+ ,$
fallbackSourceMaterial
¯
¯
, B
=
¯
¯
C D"
m_materialReferences
¯
¯
E Y
[
¯
¯
Y Z
i
¯
¯
Z [
]
¯
¯
[ \
.
¯
¯
\ ]
fallbackMaterial
¯
¯
] m
;
¯
¯
m n
}
˘
˘
 
}
˙
˙
 
int
¸
¸
 
referenceCount
¸
¸
 "
=
¸
¸
# $"
m_materialReferences
¸
¸
% 9
[
¸
¸
9 :
i
¸
¸
: ;
]
¸
¸
; <
.
¸
¸
< =
referenceCount
¸
¸
= K
;
¸
¸
K L
if
ˇ
ˇ
 
(
ˇ
ˇ
 

m_textInfo
ˇ
ˇ
 
.
ˇ
ˇ
 
meshInfo
ˇ
ˇ
 '
[
ˇ
ˇ
' (
i
ˇ
ˇ
( )
]
ˇ
ˇ
) *
.
ˇ
ˇ
* +
vertices
ˇ
ˇ
+ 3
==
ˇ
ˇ
4 6
null
ˇ
ˇ
7 ;
||
ˇ
ˇ
< >

m_textInfo
ˇ
ˇ
? I
.
ˇ
ˇ
I J
meshInfo
ˇ
ˇ
J R
[
ˇ
ˇ
R S
i
ˇ
ˇ
S T
]
ˇ
ˇ
T U
.
ˇ
ˇ
U V
vertices
ˇ
ˇ
V ^
.
ˇ
ˇ
^ _
Length
ˇ
ˇ
_ e
<
ˇ
ˇ
f g
referenceCount
ˇ
ˇ
h v
*
ˇ
ˇ
w x
$num
ˇ
ˇ
y z
)
ˇ
ˇ
z {
{
ÄÄ 
if
ÅÅ 
(
ÅÅ 

m_textInfo
ÅÅ "
.
ÅÅ" #
meshInfo
ÅÅ# +
[
ÅÅ+ ,
i
ÅÅ, -
]
ÅÅ- .
.
ÅÅ. /
vertices
ÅÅ/ 7
==
ÅÅ8 :
null
ÅÅ; ?
)
ÅÅ? @
{
ÇÇ 
if
ÉÉ 
(
ÉÉ 
i
ÉÉ 
==
ÉÉ  
$num
ÉÉ! "
)
ÉÉ" #

m_textInfo
ÑÑ &
.
ÑÑ& '
meshInfo
ÑÑ' /
[
ÑÑ/ 0
i
ÑÑ0 1
]
ÑÑ1 2
=
ÑÑ3 4
new
ÑÑ5 8
TMP_MeshInfo
ÑÑ9 E
(
ÑÑE F
m_mesh
ÑÑF L
,
ÑÑL M
referenceCount
ÑÑN \
+
ÑÑ] ^
$num
ÑÑ_ `
)
ÑÑ` a
;
ÑÑa b
else
ÖÖ 

m_textInfo
ÜÜ &
.
ÜÜ& '
meshInfo
ÜÜ' /
[
ÜÜ/ 0
i
ÜÜ0 1
]
ÜÜ1 2
=
ÜÜ3 4
new
ÜÜ5 8
TMP_MeshInfo
ÜÜ9 E
(
ÜÜE F
m_subTextObjects
ÜÜF V
[
ÜÜV W
i
ÜÜW X
]
ÜÜX Y
.
ÜÜY Z
mesh
ÜÜZ ^
,
ÜÜ^ _
referenceCount
ÜÜ` n
+
ÜÜo p
$num
ÜÜq r
)
ÜÜr s
;
ÜÜs t
}
áá 
else
àà 

m_textInfo
ââ "
.
ââ" #
meshInfo
ââ# +
[
ââ+ ,
i
ââ, -
]
ââ- .
.
ââ. /
ResizeMeshInfo
ââ/ =
(
ââ= >
referenceCount
ââ> L
>
ââM N
$num
ââO S
?
ââT U
referenceCount
ââV d
+
ââe f
$num
ââg j
:
ââk l
Mathf
ââm r
.
ââr s
NextPowerOfTwoââs Å
(ââÅ Ç
referenceCountââÇ ê
+ââë í
$numââì î
)ââî ï
)ââï ñ
;ââñ ó
}
ää 
else
ãã 
if
ãã 
(
ãã -
m_VertexBufferAutoSizeReduction
ãã 8
&&
ãã9 ;
referenceCount
ãã< J
>
ããK L
$num
ããM N
&&
ããO Q

m_textInfo
ããR \
.
ãã\ ]
meshInfo
ãã] e
[
ããe f
i
ããf g
]
ããg h
.
ããh i
vertices
ããi q
.
ããq r
Length
ããr x
/
ããy z
$num
ãã{ |
-
ãã} ~
referenceCountãã ç
>ããé è
$numããê ì
)ããì î
{
åå 

m_textInfo
èè 
.
èè 
meshInfo
èè '
[
èè' (
i
èè( )
]
èè) *
.
èè* +
ResizeMeshInfo
èè+ 9
(
èè9 :
referenceCount
èè: H
>
èèI J
$num
èèK O
?
èèP Q
referenceCount
èèR `
+
èèa b
$num
èèc f
:
èèg h
Mathf
èèi n
.
èèn o
NextPowerOfTwo
èèo }
(
èè} ~
referenceCountèè~ å
+èèç é
$numèèè ê
)èèê ë
)èèë í
;èèí ì
}
êê 

m_textInfo
ìì 
.
ìì 
meshInfo
ìì #
[
ìì# $
i
ìì$ %
]
ìì% &
.
ìì& '
material
ìì' /
=
ìì0 1"
m_materialReferences
ìì2 F
[
ììF G
i
ììG H
]
ììH I
.
ììI J
material
ììJ R
;
ììR S
}
îî 
for
ôô 
(
ôô 
int
ôô 
i
ôô 
=
ôô 
materialCount
ôô &
;
ôô& '
i
ôô( )
<
ôô* +
m_subTextObjects
ôô, <
.
ôô< =
Length
ôô= C
&&
ôôD F
m_subTextObjects
ôôG W
[
ôôW X
i
ôôX Y
]
ôôY Z
!=
ôô[ ]
null
ôô^ b
;
ôôb c
i
ôôd e
++
ôôe g
)
ôôg h
{
öö 
if
õõ 
(
õõ 
i
õõ 
<
õõ 

m_textInfo
õõ "
.
õõ" #
meshInfo
õõ# +
.
õõ+ ,
Length
õõ, 2
)
õõ2 3
{
úú 
m_subTextObjects
ùù $
[
ùù$ %
i
ùù% &
]
ùù& '
.
ùù' (
canvasRenderer
ùù( 6
.
ùù6 7
SetMesh
ùù7 >
(
ùù> ?
null
ùù? C
)
ùùC D
;
ùùD E
}
°° 
}
¢¢ 
return
®® #
m_totalCharacterCount
®® (
;
®®( )
}
©© 	
public
∑∑ 
override
∑∑ 
void
∑∑ 
ComputeMarginSize
∑∑ .
(
∑∑. /
)
∑∑/ 0
{
∏∏ 	
if
ππ 
(
ππ 
this
ππ 
.
ππ 
rectTransform
ππ "
!=
ππ# %
null
ππ& *
)
ππ* +
{
∫∫ 
Rect
ºº 
rect
ºº 
=
ºº 
m_rectTransform
ºº +
.
ºº+ ,
rect
ºº, 0
;
ºº0 1
m_marginWidth
ææ 
=
ææ 
rect
ææ  $
.
ææ$ %
width
ææ% *
-
ææ+ ,
m_margin
ææ- 5
.
ææ5 6
x
ææ6 7
-
ææ8 9
m_margin
ææ: B
.
ææB C
z
ææC D
;
ææD E
m_marginHeight
øø 
=
øø  
rect
øø! %
.
øø% &
height
øø& ,
-
øø- .
m_margin
øø/ 7
.
øø7 8
y
øø8 9
-
øø: ;
m_margin
øø< D
.
øøD E
w
øøE F
;
øøF G)
m_PreviousRectTransformSize
¬¬ +
=
¬¬, -
rect
¬¬. 2
.
¬¬2 3
size
¬¬3 7
;
¬¬7 8%
m_PreviousPivotPosition
√√ '
=
√√( )
m_rectTransform
√√* 9
.
√√9 :
pivot
√√: ?
;
√√? @$
m_RectTransformCorners
∆∆ &
=
∆∆' (*
GetTextContainerLocalCorners
∆∆) E
(
∆∆E F
)
∆∆F G
;
∆∆G H
}
«« 
}
»» 	
	protected
ŒŒ 
override
ŒŒ 
void
ŒŒ +
OnDidApplyAnimationProperties
ŒŒ  =
(
ŒŒ= >
)
ŒŒ> ?
{
œœ 	%
m_havePropertiesChanged
–– #
=
––$ %
true
––& *
;
––* +
SetVerticesDirty
—— 
(
—— 
)
—— 
;
—— 
SetLayoutDirty
““ 
(
““ 
)
““ 
;
““ 
}
‘‘ 	
	protected
◊◊ 
override
◊◊ 
void
◊◊ &
OnCanvasHierarchyChanged
◊◊  8
(
◊◊8 9
)
◊◊9 :
{
ÿÿ 	
base
ŸŸ 
.
ŸŸ &
OnCanvasHierarchyChanged
ŸŸ )
(
ŸŸ) *
)
ŸŸ* +
;
ŸŸ+ ,
m_canvas
€€ 
=
€€ 
canvas
€€ 
;
€€ 
if
›› 
(
›› 
!
›› 
	m_isAwake
›› 
||
›› 
!
››  
isActiveAndEnabled
›› 1
)
››1 2
return
ﬁﬁ 
;
ﬁﬁ 
if
·· 
(
·· 
m_canvas
·· 
==
·· 
null
··  
||
··! #
m_canvas
··$ ,
.
··, -
enabled
··- 4
==
··5 7
false
··8 =
)
··= >
TMP_UpdateManager
‚‚ !
.
‚‚! "+
UnRegisterTextObjectForUpdate
‚‚" ?
(
‚‚? @
this
‚‚@ D
)
‚‚D E
;
‚‚E F
else
„„ 
if
„„ 
(
„„ '
m_IsTextObjectScaleStatic
„„ .
==
„„/ 1
false
„„2 7
)
„„7 8
TMP_UpdateManager
‰‰ !
.
‰‰! ")
RegisterTextObjectForUpdate
‰‰" =
(
‰‰= >
this
‰‰> B
)
‰‰B C
;
‰‰C D
}
ÂÂ 	
	protected
ËË 
override
ËË 
void
ËË &
OnTransformParentChanged
ËË  8
(
ËË8 9
)
ËË9 :
{
ÈÈ 	
base
ÏÏ 
.
ÏÏ &
OnTransformParentChanged
ÏÏ )
(
ÏÏ) *
)
ÏÏ* +
;
ÏÏ+ ,
m_canvas
ÓÓ 
=
ÓÓ 
this
ÓÓ 
.
ÓÓ 
canvas
ÓÓ "
;
ÓÓ" #
ComputeMarginSize
 
(
 
)
 
;
  %
m_havePropertiesChanged
ÒÒ #
=
ÒÒ$ %
true
ÒÒ& *
;
ÒÒ* +
}
ÚÚ 	
	protected
ıı 
override
ıı 
void
ıı -
OnRectTransformDimensionsChange
ıı  ?
(
ıı? @
)
ıı@ A
{
ˆˆ 	
if
˙˙ 
(
˙˙ 
!
˙˙ 
this
˙˙ 
.
˙˙ 

gameObject
˙˙  
.
˙˙  !
activeInHierarchy
˙˙! 2
)
˙˙2 3
return
˚˚ 
;
˚˚ 
if
˛˛ 
(
˛˛ 
rectTransform
˛˛ 
!=
˛˛  
null
˛˛! %
&&
˛˛& (
Mathf
ˇˇ 
.
ˇˇ 
Abs
ˇˇ 
(
ˇˇ 
m_rectTransform
ˇˇ )
.
ˇˇ) *
rect
ˇˇ* .
.
ˇˇ. /
width
ˇˇ/ 4
-
ˇˇ5 6)
m_PreviousRectTransformSize
ˇˇ7 R
.
ˇˇR S
x
ˇˇS T
)
ˇˇT U
<
ˇˇV W
$num
ˇˇX _
&&
ˇˇ` b
Mathf
ˇˇc h
.
ˇˇh i
Abs
ˇˇi l
(
ˇˇl m
m_rectTransform
ˇˇm |
.
ˇˇ| }
rectˇˇ} Å
.ˇˇÅ Ç
heightˇˇÇ à
-ˇˇâ ä+
m_PreviousRectTransformSizeˇˇã ¶
.ˇˇ¶ ß
yˇˇß ®
)ˇˇ® ©
<ˇˇ™ ´
$numˇˇ¨ ≥
&&ˇˇ¥ ∂
Mathf
ÄÄ 
.
ÄÄ 
Abs
ÄÄ 
(
ÄÄ 
m_rectTransform
ÄÄ )
.
ÄÄ) *
pivot
ÄÄ* /
.
ÄÄ/ 0
x
ÄÄ0 1
-
ÄÄ2 3%
m_PreviousPivotPosition
ÄÄ4 K
.
ÄÄK L
x
ÄÄL M
)
ÄÄM N
<
ÄÄO P
$num
ÄÄQ X
&&
ÄÄY [
Mathf
ÄÄ\ a
.
ÄÄa b
Abs
ÄÄb e
(
ÄÄe f
m_rectTransform
ÄÄf u
.
ÄÄu v
pivot
ÄÄv {
.
ÄÄ{ |
y
ÄÄ| }
-
ÄÄ~ '
m_PreviousPivotPositionÄÄÄ ó
.ÄÄó ò
yÄÄò ô
)ÄÄô ö
<ÄÄõ ú
$numÄÄù §
)ÄÄ§ •
{
ÅÅ 
return
ÇÇ 
;
ÇÇ 
}
ÉÉ 
ComputeMarginSize
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ  "
UpdateSubObjectPivot
áá  
(
áá  !
)
áá! "
;
áá" #
SetVerticesDirty
ââ 
(
ââ 
)
ââ 
;
ââ 
SetLayoutDirty
ää 
(
ää 
)
ää 
;
ää 
}
ãã 	
internal
ëë 
override
ëë 
void
ëë 
InternalUpdate
ëë -
(
ëë- .
)
ëë. /
{
íí 	
if
îî 
(
îî %
m_havePropertiesChanged
îî '
==
îî( *
false
îî+ 0
)
îî0 1
{
ïï 
float
ññ 
lossyScaleY
ññ !
=
ññ" #
m_rectTransform
ññ$ 3
.
ññ3 4

lossyScale
ññ4 >
.
ññ> ?
y
ññ? @
;
ññ@ A
if
öö 
(
öö 
Mathf
öö 
.
öö 
Abs
öö 
(
öö 
lossyScaleY
öö )
-
öö* +#
m_previousLossyScaleY
öö, A
)
ööA B
>
ööC D
$num
ööE L
&&
ööM O%
m_InternalParsingBuffer
ööP g
[
öög h
$num
ööh i
]
ööi j
.
ööj k
unicode
öök r
!=
öös u
$num
ööv w
)
ööw x
{
õõ 
float
úú 

scaleDelta
úú $
=
úú% &
lossyScaleY
úú' 2
/
úú3 4#
m_previousLossyScaleY
úú5 J
;
úúJ K
UpdateSDFScale
ûû "
(
ûû" #

scaleDelta
ûû# -
)
ûû- .
;
ûû. /#
m_previousLossyScaleY
†† )
=
††* +
lossyScaleY
††, 7
;
††7 8
}
°° 
}
¢¢ 
if
•• 
(
•• /
!m_isUsingLegacyAnimationComponent
•• 1
)
••1 2
{
¶¶ %
m_havePropertiesChanged
®® '
=
®®( )
true
®®* .
;
®®. /
OnPreRenderCanvas
©© !
(
©©! "
)
©©" #
;
©©# $
}
™™ 
}
´´ 	
void
ØØ 
OnPreRenderCanvas
ØØ 
(
ØØ 
)
ØØ  
{
∞∞ 	
if
¥¥ 
(
¥¥ 
!
¥¥ 
	m_isAwake
¥¥ 
||
¥¥ 
(
¥¥ 
this
¥¥ #
.
¥¥# $
IsActive
¥¥$ ,
(
¥¥, -
)
¥¥- .
==
¥¥/ 1
false
¥¥2 7
&&
¥¥8 :!
m_ignoreActiveState
¥¥; N
==
¥¥O Q
false
¥¥R W
)
¥¥W X
)
¥¥X Y
return
µµ 
;
µµ 
if
∑∑ 
(
∑∑ 
m_canvas
∑∑ 
==
∑∑ 
null
∑∑  
)
∑∑  !
{
∑∑" #
m_canvas
∑∑$ ,
=
∑∑- .
this
∑∑/ 3
.
∑∑3 4
canvas
∑∑4 :
;
∑∑: ;
if
∑∑< >
(
∑∑? @
m_canvas
∑∑@ H
==
∑∑I K
null
∑∑L P
)
∑∑P Q
return
∑∑R X
;
∑∑X Y
}
∑∑Z [
if
∫∫ 
(
∫∫ 
m_fontAsset
∫∫ 
==
∫∫ 
null
∫∫ #
)
∫∫# $
{
ªª 
Debug
ºº 
.
ºº 

LogWarning
ºº  
(
ºº  !
$str
ºº! F
+
ººG H
	transform
ººI R
.
ººR S
name
ººS W
+
ººX Y
$str
ººZ h
,
ººh i
this
ººj n
)
ººn o
;
ººo p
return
ΩΩ 
;
ΩΩ 
}
ææ 
if
¿¿ 
(
¿¿ %
m_havePropertiesChanged
¿¿ '
||
¿¿( *
m_isLayoutDirty
¿¿+ :
)
¿¿: ;
{
¡¡ 
if
≈≈ 
(
≈≈ "
checkPaddingRequired
≈≈ (
)
≈≈( )
UpdateMeshPadding
∆∆ %
(
∆∆% &
)
∆∆& '
;
∆∆' (
if
…… 
(
…… &
m_isInputParsingRequired
…… ,
||
……- /
m_isTextTruncated
……0 A
)
……A B
{
   
ParseInputText
œœ "
(
œœ" #
)
œœ# $
;
œœ$ %
TMP_FontAsset
—— !
.
——! "4
&UpdateFontFeaturesForFontAssetsInQueue
——" H
(
——H I
)
——I J
;
——J K
}
÷÷ 
if
ŸŸ 
(
ŸŸ  
m_enableAutoSizing
ŸŸ &
)
ŸŸ& '

m_fontSize
⁄⁄ 
=
⁄⁄  
Mathf
⁄⁄! &
.
⁄⁄& '
Clamp
⁄⁄' ,
(
⁄⁄, -
m_fontSizeBase
⁄⁄- ;
,
⁄⁄; <
m_fontSizeMin
⁄⁄= J
,
⁄⁄J K
m_fontSizeMax
⁄⁄L Y
)
⁄⁄Y Z
;
⁄⁄Z [
m_maxFontSize
‹‹ 
=
‹‹ 
m_fontSizeMax
‹‹  -
;
‹‹- .
m_minFontSize
›› 
=
›› 
m_fontSizeMin
››  -
;
››- . 
m_lineSpacingDelta
ﬁﬁ "
=
ﬁﬁ# $
$num
ﬁﬁ% &
;
ﬁﬁ& '!
m_charWidthAdjDelta
ﬂﬂ #
=
ﬂﬂ$ %
$num
ﬂﬂ& '
;
ﬂﬂ' (
m_isTextTruncated
·· !
=
··" #
false
··$ )
;
··) *%
m_havePropertiesChanged
„„ '
=
„„( )
false
„„* /
;
„„/ 0
m_isLayoutDirty
‰‰ 
=
‰‰  !
false
‰‰" '
;
‰‰' (!
m_ignoreActiveState
ÂÂ #
=
ÂÂ$ %
false
ÂÂ& +
;
ÂÂ+ ,&
m_IsAutoSizePointSizeSet
ËË (
=
ËË) *
false
ËË+ 0
;
ËË0 1&
m_AutoSizeIterationCount
ÈÈ (
=
ÈÈ) *
$num
ÈÈ+ ,
;
ÈÈ, -
while
ÌÌ 
(
ÌÌ &
m_IsAutoSizePointSizeSet
ÌÌ /
==
ÌÌ0 2
false
ÌÌ3 8
)
ÌÌ8 9
{
ÓÓ 
GenerateTextMesh
ÔÔ $
(
ÔÔ$ %
)
ÔÔ% &
;
ÔÔ& '&
m_AutoSizeIterationCount
 ,
+=
- /
$num
0 1
;
1 2
}
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
	protected
˘˘ 
override
˘˘ 
void
˘˘ 
GenerateTextMesh
˘˘  0
(
˘˘0 1
)
˘˘1 2
{
˙˙ 	
if
ÅÅ 
(
ÅÅ 
m_fontAsset
ÅÅ 
==
ÅÅ 
null
ÅÅ #
||
ÅÅ$ &
m_fontAsset
ÅÅ' 2
.
ÅÅ2 3"
characterLookupTable
ÅÅ3 G
==
ÅÅH J
null
ÅÅK O
)
ÅÅO P
{
ÇÇ 
Debug
ÉÉ 
.
ÉÉ 

LogWarning
ÉÉ  
(
ÉÉ  !
$str
ÉÉ! f
+
ÉÉg h
this
ÉÉi m
.
ÉÉm n
GetInstanceID
ÉÉn {
(
ÉÉ{ |
)
ÉÉ| }
)
ÉÉ} ~
;
ÉÉ~ &
m_IsAutoSizePointSizeSet
ÑÑ (
=
ÑÑ) *
true
ÑÑ+ /
;
ÑÑ/ 0
return
ÖÖ 
;
ÖÖ 
}
ÜÜ 
if
ââ 
(
ââ 

m_textInfo
ââ 
!=
ââ 
null
ââ "
)
ââ" #

m_textInfo
ää 
.
ää 
Clear
ää  
(
ää  !
)
ää! "
;
ää" #
if
çç 
(
çç %
m_InternalParsingBuffer
çç '
==
çç( *
null
çç+ /
||
çç0 2%
m_InternalParsingBuffer
çç3 J
.
ççJ K
Length
ççK Q
==
ççR T
$num
ççU V
||
ççW Y%
m_InternalParsingBuffer
ççZ q
[
ççq r
$num
ççr s
]
ççs t
.
ççt u
unicode
ççu |
==
çç} 
$numççÄ Å
)ççÅ Ç
{
éé 
	ClearMesh
êê 
(
êê 
)
êê 
;
êê 
m_preferredWidth
íí  
=
íí! "
$num
íí# $
;
íí$ %
m_preferredHeight
ìì !
=
ìì" #
$num
ìì$ %
;
ìì% & 
TMPro_EventManager
ññ "
.
ññ" #
ON_TEXT_CHANGED
ññ# 2
(
ññ2 3
this
ññ3 7
)
ññ7 8
;
ññ8 9&
m_IsAutoSizePointSizeSet
óó (
=
óó) *
true
óó+ /
;
óó/ 0
return
òò 
;
òò 
}
ôô  
m_currentFontAsset
õõ 
=
õõ  
m_fontAsset
õõ! ,
;
õõ, -
m_currentMaterial
úú 
=
úú 
m_sharedMaterial
úú  0
;
úú0 1$
m_currentMaterialIndex
ùù "
=
ùù# $
$num
ùù% &
;
ùù& '&
m_materialReferenceStack
ûû $
.
ûû$ %

SetDefault
ûû% /
(
ûû/ 0
new
ûû0 3
MaterialReference
ûû4 E
(
ûûE F$
m_currentMaterialIndex
ûûF \
,
ûû\ ] 
m_currentFontAsset
ûû^ p
,
ûûp q
null
ûûr v
,
ûûv w 
m_currentMaterialûûx â
,ûûâ ä
	m_paddingûûã î
)ûûî ï
)ûûï ñ
;ûûñ ó"
m_currentSpriteAsset
††  
=
††! "
m_spriteAsset
††# 0
;
††0 1
if
££ 
(
££ 
m_spriteAnimator
££  
!=
££! #
null
££$ (
)
££( )
m_spriteAnimator
§§  
.
§§  !
StopAllAnimations
§§! 2
(
§§2 3
)
§§3 4
;
§§4 5
int
ßß !
totalCharacterCount
ßß #
=
ßß$ %#
m_totalCharacterCount
ßß& ;
;
ßß; <
float
´´ 
	baseScale
´´ 
=
´´ 
m_fontScale
´´ )
=
´´* +
(
´´, -

m_fontSize
´´- 7
/
´´8 9
m_fontAsset
´´: E
.
´´E F

m_FaceInfo
´´F P
.
´´P Q
	pointSize
´´Q Z
*
´´[ \
m_fontAsset
´´] h
.
´´h i

m_FaceInfo
´´i s
.
´´s t
scale
´´t y
*
´´z {
(
´´| }
m_isOrthographic´´} ç
?´´é è
$num´´ê ë
:´´í ì
$num´´î ò
)´´ò ô
)´´ô ö
;´´ö õ
float
¨¨ !
currentElementScale
¨¨ %
=
¨¨& '
	baseScale
¨¨( 1
;
¨¨1 2
float
≠≠ 
currentEmScale
≠≠  
=
≠≠! "

m_fontSize
≠≠# -
*
≠≠. /
$num
≠≠0 5
*
≠≠6 7
(
≠≠8 9
m_isOrthographic
≠≠9 I
?
≠≠J K
$num
≠≠L M
:
≠≠N O
$num
≠≠P T
)
≠≠T U
;
≠≠U V#
m_fontScaleMultiplier
ÆÆ !
=
ÆÆ" #
$num
ÆÆ$ %
;
ÆÆ% &
m_currentFontSize
∞∞ 
=
∞∞ 

m_fontSize
∞∞  *
;
∞∞* +
m_sizeStack
±± 
.
±± 

SetDefault
±± "
(
±±" #
m_currentFontSize
±±# 4
)
±±4 5
;
±±5 6
float
≤≤ 
fontSizeDelta
≤≤ 
=
≤≤  !
$num
≤≤" #
;
≤≤# $
int
¥¥ 
charCode
¥¥ 
=
¥¥ 
$num
¥¥ 
;
¥¥ !
m_FontStyleInternal
∂∂ 
=
∂∂  !
m_fontStyle
∂∂" -
;
∂∂- ."
m_FontWeightInternal
∑∑  
=
∑∑! "
(
∑∑# $!
m_FontStyleInternal
∑∑$ 7
&
∑∑8 9

FontStyles
∑∑: D
.
∑∑D E
Bold
∑∑E I
)
∑∑I J
==
∑∑K M

FontStyles
∑∑N X
.
∑∑X Y
Bold
∑∑Y ]
?
∑∑^ _

FontWeight
∑∑` j
.
∑∑j k
Bold
∑∑k o
:
∑∑p q
m_fontWeight
∑∑r ~
;
∑∑~ 
m_FontWeightStack
∏∏ 
.
∏∏ 

SetDefault
∏∏ (
(
∏∏( )"
m_FontWeightInternal
∏∏) =
)
∏∏= >
;
∏∏> ?
m_fontStyleStack
ππ 
.
ππ 
Clear
ππ "
(
ππ" #
)
ππ# $
;
ππ$ %!
m_lineJustification
ªª 
=
ªª  !#
m_HorizontalAlignment
ªª" 7
;
ªª7 8&
m_lineJustificationStack
ºº $
.
ºº$ %

SetDefault
ºº% /
(
ºº/ 0!
m_lineJustification
ºº0 C
)
ººC D
;
ººD E
float
ææ 
padding
ææ 
=
ææ 
$num
ææ 
;
ææ 
float
øø 
style_padding
øø 
=
øø  !
$num
øø" #
;
øø# $
float
¿¿ #
boldSpacingAdjustment
¿¿ '
=
¿¿( )
$num
¿¿* +
;
¿¿+ ,
m_baselineOffset
√√ 
=
√√ 
$num
√√  
;
√√  !#
m_baselineOffsetStack
ƒƒ !
.
ƒƒ! "
Clear
ƒƒ" '
(
ƒƒ' (
)
ƒƒ( )
;
ƒƒ) *
bool
«« 
beginUnderline
«« 
=
««  !
false
««" '
;
««' (
Vector3
»» 
underline_start
»» #
=
»»$ %
Vector3
»»& -
.
»»- .
zero
»». 2
;
»»2 3
Vector3
…… 
underline_end
…… !
=
……" #
Vector3
……$ +
.
……+ ,
zero
……, 0
;
……0 1
bool
ÃÃ  
beginStrikethrough
ÃÃ #
=
ÃÃ$ %
false
ÃÃ& +
;
ÃÃ+ ,
Vector3
ÕÕ !
strikethrough_start
ÕÕ '
=
ÕÕ( )
Vector3
ÕÕ* 1
.
ÕÕ1 2
zero
ÕÕ2 6
;
ÕÕ6 7
Vector3
ŒŒ 
strikethrough_end
ŒŒ %
=
ŒŒ& '
Vector3
ŒŒ( /
.
ŒŒ/ 0
zero
ŒŒ0 4
;
ŒŒ4 5
bool
—— 
beginHighlight
—— 
=
——  !
false
——" '
;
——' (
Vector3
““ 
highlight_start
““ #
=
““$ %
Vector3
““& -
.
““- .
zero
““. 2
;
““2 3
Vector3
”” 
highlight_end
”” !
=
””" #
Vector3
””$ +
.
””+ ,
zero
””, 0
;
””0 1
m_fontColor32
’’ 
=
’’ 
m_fontColor
’’ '
;
’’' (
Color32
÷÷ 
vertexColor
÷÷ 
;
÷÷  
m_htmlColor
◊◊ 
=
◊◊ 
m_fontColor32
◊◊ '
;
◊◊' (
m_underlineColor
ÿÿ 
=
ÿÿ 
m_htmlColor
ÿÿ *
;
ÿÿ* +"
m_strikethroughColor
ŸŸ  
=
ŸŸ! "
m_htmlColor
ŸŸ# .
;
ŸŸ. /
m_colorStack
€€ 
.
€€ 

SetDefault
€€ #
(
€€# $
m_htmlColor
€€$ /
)
€€/ 0
;
€€0 1#
m_underlineColorStack
‹‹ !
.
‹‹! "

SetDefault
‹‹" ,
(
‹‹, -
m_htmlColor
‹‹- 8
)
‹‹8 9
;
‹‹9 :'
m_strikethroughColorStack
›› %
.
››% &

SetDefault
››& 0
(
››0 1
m_htmlColor
››1 <
)
››< =
;
››= >#
m_HighlightStateStack
ﬁﬁ !
.
ﬁﬁ! "

SetDefault
ﬁﬁ" ,
(
ﬁﬁ, -
new
ﬁﬁ- 0
HighlightState
ﬁﬁ1 ?
(
ﬁﬁ? @
m_htmlColor
ﬁﬁ@ K
,
ﬁﬁK L

TMP_Offset
ﬁﬁM W
.
ﬁﬁW X
zero
ﬁﬁX \
)
ﬁﬁ\ ]
)
ﬁﬁ] ^
;
ﬁﬁ^ _#
m_colorGradientPreset
‡‡ !
=
‡‡" #
null
‡‡$ (
;
‡‡( )"
m_colorGradientStack
··  
.
··  !

SetDefault
··! +
(
··+ ,
null
··, 0
)
··0 1
;
··1 2
m_ItalicAngle
„„ 
=
„„  
m_currentFontAsset
„„ .
.
„„. /
italicStyle
„„/ :
;
„„: ; 
m_ItalicAngleStack
‰‰ 
.
‰‰ 

SetDefault
‰‰ )
(
‰‰) *
m_ItalicAngle
‰‰* 7
)
‰‰7 8
;
‰‰8 9
m_actionStack
ÍÍ 
.
ÍÍ 
Clear
ÍÍ 
(
ÍÍ  
)
ÍÍ  !
;
ÍÍ! "
m_isFXMatrixSet
ÏÏ 
=
ÏÏ 
false
ÏÏ #
;
ÏÏ# $
m_lineOffset
ÓÓ 
=
ÓÓ 
$num
ÓÓ 
;
ÓÓ 
m_lineHeight
ÔÔ 
=
ÔÔ 
TMP_Math
ÔÔ #
.
ÔÔ# $
FLOAT_UNSET
ÔÔ$ /
;
ÔÔ/ 0
float
 
lineGap
 
=
  
m_currentFontAsset
 .
.
. /

m_FaceInfo
/ 9
.
9 :

lineHeight
: D
-
E F
(
G H 
m_currentFontAsset
H Z
.
Z [

m_FaceInfo
[ e
.
e f

ascentLine
f p
-
q r!
m_currentFontAssets Ö
.Ö Ü

m_FaceInfoÜ ê
.ê ë
descentLineë ú
)ú ù
;ù û

m_cSpacing
ÚÚ 
=
ÚÚ 
$num
ÚÚ 
;
ÚÚ 
m_monoSpacing
ÛÛ 
=
ÛÛ 
$num
ÛÛ 
;
ÛÛ 

m_xAdvance
ÙÙ 
=
ÙÙ 
$num
ÙÙ 
;
ÙÙ 
tag_LineIndent
ˆˆ 
=
ˆˆ 
$num
ˆˆ 
;
ˆˆ 

tag_Indent
˜˜ 
=
˜˜ 
$num
˜˜ 
;
˜˜ 
m_indentStack
¯¯ 
.
¯¯ 

SetDefault
¯¯ $
(
¯¯$ %
$num
¯¯% &
)
¯¯& '
;
¯¯' (
tag_NoParsing
˘˘ 
=
˘˘ 
false
˘˘ !
;
˘˘! "
m_characterCount
¸¸ 
=
¸¸ 
$num
¸¸  
;
¸¸  !$
m_firstCharacterOfLine
ˇˇ "
=
ˇˇ# $%
m_firstVisibleCharacter
ˇˇ% <
;
ˇˇ< =#
m_lastCharacterOfLine
ÄÄ !
=
ÄÄ" #
$num
ÄÄ$ %
;
ÄÄ% &+
m_firstVisibleCharacterOfLine
ÅÅ )
=
ÅÅ* +
$num
ÅÅ, -
;
ÅÅ- .*
m_lastVisibleCharacterOfLine
ÇÇ (
=
ÇÇ) *
$num
ÇÇ+ ,
;
ÇÇ, -
m_maxLineAscender
ÉÉ 
=
ÉÉ "
k_LargeNegativeFloat
ÉÉ  4
;
ÉÉ4 5 
m_maxLineDescender
ÑÑ 
=
ÑÑ  "
k_LargePositiveFloat
ÑÑ! 5
;
ÑÑ5 6
m_lineNumber
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ #
m_startOfLineAscender
ÜÜ !
=
ÜÜ" #
$num
ÜÜ$ %
;
ÜÜ% &$
m_startOfLineDescender
áá "
=
áá# $
$num
áá% &
;
áá& ')
m_lineVisibleCharacterCount
àà '
=
àà( )
$num
àà* +
;
àà+ ,
bool
ââ 
isStartOfNewLine
ââ !
=
ââ" #
true
ââ$ (
;
ââ( )#
m_IsDrivenLineSpacing
ää !
=
ää" #
false
ää$ )
;
ää) *+
m_firstOverflowCharacterIndex
ãã )
=
ãã* +
-
ãã, -
$num
ãã- .
;
ãã. /
m_pageNumber
çç 
=
çç 
$num
çç 
;
çç 
int
éé 
pageToDisplay
éé 
=
éé 
Mathf
éé  %
.
éé% &
Clamp
éé& +
(
éé+ ,
m_pageToDisplay
éé, ;
-
éé< =
$num
éé> ?
,
éé? @
$num
ééA B
,
ééB C

m_textInfo
ééD N
.
ééN O
pageInfo
ééO W
.
ééW X
Length
ééX ^
-
éé_ `
$num
ééa b
)
ééb c
;
ééc d

m_textInfo
èè 
.
èè 
ClearPageInfo
èè $
(
èè$ %
)
èè% &
;
èè& '
Vector4
ëë 
margins
ëë 
=
ëë 
m_margin
ëë &
;
ëë& '
float
íí 
marginWidth
íí 
=
íí 
m_marginWidth
íí  -
>
íí. /
$num
íí0 1
?
íí2 3
m_marginWidth
íí4 A
:
ííB C
$num
ííD E
;
ííE F
float
ìì 
marginHeight
ìì 
=
ìì  
m_marginHeight
ìì! /
>
ìì0 1
$num
ìì2 3
?
ìì4 5
m_marginHeight
ìì6 D
:
ììE F
$num
ììG H
;
ììH I
m_marginLeft
îî 
=
îî 
$num
îî 
;
îî 
m_marginRight
ïï 
=
ïï 
$num
ïï 
;
ïï 
m_width
ññ 
=
ññ 
-
ññ 
$num
ññ 
;
ññ 
float
óó 
widthOfTextArea
óó !
=
óó" #
marginWidth
óó$ /
+
óó0 1
$num
óó2 9
-
óó: ;
m_marginLeft
óó< H
-
óóI J
m_marginRight
óóK X
;
óóX Y
m_meshExtents
öö 
.
öö 
min
öö 
=
öö $
k_LargePositiveVector2
öö  6
;
öö6 7
m_meshExtents
õõ 
.
õõ 
max
õõ 
=
õõ $
k_LargeNegativeVector2
õõ  6
;
õõ6 7

m_textInfo
ûû 
.
ûû 
ClearLineInfo
ûû $
(
ûû$ %
)
ûû% &
;
ûû& '
m_maxCapHeight
°° 
=
°° 
$num
°° 
;
°° 
m_maxTextAscender
¢¢ 
=
¢¢ 
$num
¢¢  !
;
¢¢! " 
m_ElementDescender
££ 
=
££  
$num
££! "
;
££" #
m_PageAscender
§§ 
=
§§ 
$num
§§ 
;
§§ 
float
•• !
maxVisibleDescender
•• %
=
••& '
$num
••( )
;
••) *
bool
¶¶ &
isMaxVisibleDescenderSet
¶¶ )
=
¶¶* +
false
¶¶, 1
;
¶¶1 2
m_isNewPage
ßß 
=
ßß 
false
ßß 
;
ßß  
bool
™™ 
isFirstWordOfLine
™™ "
=
™™# $
true
™™% )
;
™™) *"
m_isNonBreakingSpace
´´  
=
´´! "
false
´´# (
;
´´( )
bool
¨¨ $
ignoreNonBreakingSpace
¨¨ '
=
¨¨( )
false
¨¨* /
;
¨¨/ 0
int
ÆÆ 
lastSoftLineBreak
ÆÆ !
=
ÆÆ" #
$num
ÆÆ$ %
;
ÆÆ% &#
CharacterSubstitution
∞∞ !#
characterToSubstitute
∞∞" 7
=
∞∞8 9
new
∞∞: =#
CharacterSubstitution
∞∞> S
(
∞∞S T
-
∞∞T U
$num
∞∞U V
,
∞∞V W
$num
∞∞X Y
)
∞∞Y Z
;
∞∞Z [
bool
±± !
isSoftHyphenIgnored
±± $
=
±±% &
false
±±' ,
;
±±, -
bool
≤≤ "
isInjectingCharacter
≤≤ %
=
≤≤& '
false
≤≤( -
;
≤≤- .#
SaveWordWrappingState
µµ !
(
µµ! "
ref
µµ" %"
m_SavedWordWrapState
µµ& :
,
µµ: ;
-
µµ< =
$num
µµ= >
,
µµ> ?
-
µµ@ A
$num
µµA B
)
µµB C
;
µµC D#
SaveWordWrappingState
∂∂ !
(
∂∂! "
ref
∂∂" %
m_SavedLineState
∂∂& 6
,
∂∂6 7
-
∂∂8 9
$num
∂∂9 :
,
∂∂: ;
-
∂∂< =
$num
∂∂= >
)
∂∂> ?
;
∂∂? @#
SaveWordWrappingState
∑∑ !
(
∑∑! "
ref
∑∑" %"
m_SavedEllipsisState
∑∑& :
,
∑∑: ;
-
∑∑< =
$num
∑∑= >
,
∑∑> ?
-
∑∑@ A
$num
∑∑A B
)
∑∑B C
;
∑∑C D#
SaveWordWrappingState
∏∏ !
(
∏∏! "
ref
∏∏" %#
m_SavedLastValidState
∏∏& ;
,
∏∏; <
-
∏∏= >
$num
∏∏> ?
,
∏∏? @
-
∏∏A B
$num
∏∏B C
)
∏∏C D
;
∏∏D E#
SaveWordWrappingState
ππ !
(
ππ! "
ref
ππ" %'
m_SavedSoftLineBreakState
ππ& ?
,
ππ? @
-
ππA B
$num
ππB C
,
ππC D
-
ππE F
$num
ππF G
)
ππG H
;
ππH I/
!m_EllipsisInsertionCandidateStack
ªª -
.
ªª- .
Clear
ªª. 3
(
ªª3 4
)
ªª4 5
;
ªª5 6
int
ææ 
restoreCount
ææ 
=
ææ 
$num
ææ  
;
ææ  !
for
≈≈ 
(
≈≈ 
int
≈≈ 
i
≈≈ 
=
≈≈ 
$num
≈≈ 
;
≈≈ 
i
≈≈ 
<
≈≈ %
m_InternalParsingBuffer
≈≈  7
.
≈≈7 8
Length
≈≈8 >
&&
≈≈? A%
m_InternalParsingBuffer
≈≈B Y
[
≈≈Y Z
i
≈≈Z [
]
≈≈[ \
.
≈≈\ ]
unicode
≈≈] d
!=
≈≈e g
$num
≈≈h i
;
≈≈i j
i
≈≈k l
++
≈≈l n
)
≈≈n o
{
∆∆ 
charCode
«« 
=
«« %
m_InternalParsingBuffer
«« 2
[
««2 3
i
««3 4
]
««4 5
.
««5 6
unicode
««6 =
;
««= >
if
…… 
(
…… 
restoreCount
……  
>
……! "
$num
……# $
)
……$ %
{
   
Debug
ÀÀ 
.
ÀÀ 
LogError
ÀÀ "
(
ÀÀ" #
$str
ÀÀ# ]
+
ÀÀ^ _
charCode
ÀÀ` h
+
ÀÀi j
$str
ÀÀk v
+
ÀÀw x
i
ÀÀy z
)
ÀÀz {
;
ÀÀ{ |#
characterToSubstitute
ÃÃ )
.
ÃÃ) *
index
ÃÃ* /
=
ÃÃ0 1
m_characterCount
ÃÃ2 B
;
ÃÃB C#
characterToSubstitute
ÕÕ )
.
ÕÕ) *
unicode
ÕÕ* 1
=
ÕÕ2 3
$num
ÕÕ4 8
;
ÕÕ8 9
}
ŒŒ 
if
““ 
(
““ 
m_isRichText
““  
&&
““! #
charCode
““$ ,
==
““- /
$num
““0 2
)
““2 3
{
”” 
m_isParsingText
ÿÿ #
=
ÿÿ$ %
true
ÿÿ& *
;
ÿÿ* +
m_textElementType
ŸŸ %
=
ŸŸ& '!
TMP_TextElementType
ŸŸ( ;
.
ŸŸ; <
	Character
ŸŸ< E
;
ŸŸE F
int
⁄⁄ 
endTagIndex
⁄⁄ #
;
⁄⁄# $
if
›› 
(
›› 
ValidateHtmlTag
›› '
(
››' (%
m_InternalParsingBuffer
››( ?
,
››? @
i
››A B
+
››C D
$num
››E F
,
››F G
out
››H K
endTagIndex
››L W
)
››W X
)
››X Y
{
ﬁﬁ 
i
ﬂﬂ 
=
ﬂﬂ 
endTagIndex
ﬂﬂ '
;
ﬂﬂ' (
if
‚‚ 
(
‚‚ 
m_textElementType
‚‚ -
==
‚‚. 0!
TMP_TextElementType
‚‚1 D
.
‚‚D E
	Character
‚‚E N
)
‚‚N O
{
„„ 
continue
ËË $
;
ËË$ %
}
ÈÈ 
}
ÍÍ 
}
ÔÔ 
else
 
{
ÒÒ 
m_textElementType
ÚÚ %
=
ÚÚ& '

m_textInfo
ÚÚ( 2
.
ÚÚ2 3
characterInfo
ÚÚ3 @
[
ÚÚ@ A
m_characterCount
ÚÚA Q
]
ÚÚQ R
.
ÚÚR S
elementType
ÚÚS ^
;
ÚÚ^ _$
m_currentMaterialIndex
ÛÛ *
=
ÛÛ+ ,

m_textInfo
ÛÛ- 7
.
ÛÛ7 8
characterInfo
ÛÛ8 E
[
ÛÛE F
m_characterCount
ÛÛF V
]
ÛÛV W
.
ÛÛW X$
materialReferenceIndex
ÛÛX n
;
ÛÛn o 
m_currentFontAsset
ÙÙ &
=
ÙÙ' (

m_textInfo
ÙÙ) 3
.
ÙÙ3 4
characterInfo
ÙÙ4 A
[
ÙÙA B
m_characterCount
ÙÙB R
]
ÙÙR S
.
ÙÙS T
	fontAsset
ÙÙT ]
;
ÙÙ] ^
}
ıı 
int
¯¯ #
previousMaterialIndex
¯¯ )
=
¯¯* +$
m_currentMaterialIndex
¯¯, B
;
¯¯B C
bool
˘˘  
isUsingAltTypeface
˘˘ '
=
˘˘( )

m_textInfo
˘˘* 4
.
˘˘4 5
characterInfo
˘˘5 B
[
˘˘B C
m_characterCount
˘˘C S
]
˘˘S T
.
˘˘T U&
isUsingAlternateTypeface
˘˘U m
;
˘˘m n
m_isParsingText
˚˚ 
=
˚˚  !
false
˚˚" '
;
˚˚' ("
isInjectingCharacter
ˇˇ $
=
ˇˇ% &
false
ˇˇ' ,
;
ˇˇ, -
if
ÅÅ 
(
ÅÅ #
characterToSubstitute
ÅÅ )
.
ÅÅ) *
index
ÅÅ* /
==
ÅÅ0 2
m_characterCount
ÅÅ3 C
)
ÅÅC D
{
ÇÇ 
charCode
ÉÉ 
=
ÉÉ 
(
ÉÉ  
int
ÉÉ  #
)
ÉÉ# $#
characterToSubstitute
ÉÉ$ 9
.
ÉÉ9 :
unicode
ÉÉ: A
;
ÉÉA B
m_textElementType
ÑÑ %
=
ÑÑ& '!
TMP_TextElementType
ÑÑ( ;
.
ÑÑ; <
	Character
ÑÑ< E
;
ÑÑE F"
isInjectingCharacter
ÖÖ (
=
ÖÖ) *
true
ÖÖ+ /
;
ÖÖ/ 0
switch
áá 
(
áá 
charCode
áá $
)
áá$ %
{
àà 
case
ââ 
$num
ââ !
:
ââ! "

m_textInfo
ää &
.
ää& '
characterInfo
ää' 4
[
ää4 5
m_characterCount
ää5 E
]
ääE F
.
ääF G
textElement
ääG R
=
ääS T 
m_currentFontAsset
ääU g
.
ääg h"
characterLookupTable
ääh |
[
ää| }
$numää} Å
]ääÅ Ç
;ääÇ É
m_isTextTruncated
ãã -
=
ãã. /
true
ãã0 4
;
ãã4 5
break
åå !
;
åå! "
case
çç 
$num
çç !
:
çç! "
break
èè !
;
èè! "
case
êê 
$num
êê #
:
êê# $

m_textInfo
ëë &
.
ëë& '
characterInfo
ëë' 4
[
ëë4 5
m_characterCount
ëë5 E
]
ëëE F
.
ëëF G
textElement
ëëG R
=
ëëS T

m_Ellipsis
ëëU _
.
ëë_ `
	character
ëë` i
;
ëëi j

m_textInfo
íí &
.
íí& '
characterInfo
íí' 4
[
íí4 5
m_characterCount
íí5 E
]
ííE F
.
ííF G
elementType
ííG R
=
ííS T!
TMP_TextElementType
ííU h
.
ííh i
	Character
ííi r
;
íír s

m_textInfo
ìì &
.
ìì& '
characterInfo
ìì' 4
[
ìì4 5
m_characterCount
ìì5 E
]
ììE F
.
ììF G
	fontAsset
ììG P
=
ììQ R

m_Ellipsis
ììS ]
.
ìì] ^
	fontAsset
ìì^ g
;
ììg h

m_textInfo
îî &
.
îî& '
characterInfo
îî' 4
[
îî4 5
m_characterCount
îî5 E
]
îîE F
.
îîF G
material
îîG O
=
îîP Q

m_Ellipsis
îîR \
.
îî\ ]
material
îî] e
;
îîe f

m_textInfo
ïï &
.
ïï& '
characterInfo
ïï' 4
[
ïï4 5
m_characterCount
ïï5 E
]
ïïE F
.
ïïF G$
materialReferenceIndex
ïïG ]
=
ïï^ _

m_Ellipsis
ïï` j
.
ïïj k
materialIndex
ïïk x
;
ïïx y
m_isTextTruncated
òò -
=
òò. /
true
òò0 4
;
òò4 5#
characterToSubstitute
õõ 1
.
õõ1 2
index
õõ2 7
=
õõ8 9
m_characterCount
õõ: J
+
õõK L
$num
õõM N
;
õõN O#
characterToSubstitute
úú 1
.
úú1 2
unicode
úú2 9
=
úú: ;
$num
úú< @
;
úú@ A
break
ùù !
;
ùù! "
}
ûû 
}
üü 
if
•• 
(
•• 
m_characterCount
•• $
<
••% &%
m_firstVisibleCharacter
••' >
&&
••? A
charCode
••B J
!=
••K M
$num
••N R
)
••R S
{
¶¶ 

m_textInfo
ßß 
.
ßß 
characterInfo
ßß ,
[
ßß, -
m_characterCount
ßß- =
]
ßß= >
.
ßß> ?
	isVisible
ßß? H
=
ßßI J
false
ßßK P
;
ßßP Q

m_textInfo
®® 
.
®® 
characterInfo
®® ,
[
®®, -
m_characterCount
®®- =
]
®®= >
.
®®> ?
	character
®®? H
=
®®I J
(
®®K L
char
®®L P
)
®®P Q
$num
®®Q W
;
®®W X

m_textInfo
©© 
.
©© 
characterInfo
©© ,
[
©©, -
m_characterCount
©©- =
]
©©= >
.
©©> ?

lineNumber
©©? I
=
©©J K
$num
©©L M
;
©©M N
m_characterCount
™™ $
+=
™™% '
$num
™™( )
;
™™) *
continue
´´ 
;
´´ 
}
¨¨ 
float
≥≥ !
smallCapsMultiplier
≥≥ )
=
≥≥* +
$num
≥≥, 0
;
≥≥0 1
if
µµ 
(
µµ 
m_textElementType
µµ %
==
µµ& (!
TMP_TextElementType
µµ) <
.
µµ< =
	Character
µµ= F
)
µµF G
{
∂∂ 
if
∑∑ 
(
∑∑ 
(
∑∑ !
m_FontStyleInternal
∑∑ ,
&
∑∑- .

FontStyles
∑∑/ 9
.
∑∑9 :
	UpperCase
∑∑: C
)
∑∑C D
==
∑∑E G

FontStyles
∑∑H R
.
∑∑R S
	UpperCase
∑∑S \
)
∑∑\ ]
{
∏∏ 
if
∫∫ 
(
∫∫ 
char
∫∫  
.
∫∫  !
IsLower
∫∫! (
(
∫∫( )
(
∫∫) *
char
∫∫* .
)
∫∫. /
charCode
∫∫/ 7
)
∫∫7 8
)
∫∫8 9
charCode
ªª $
=
ªª% &
char
ªª' +
.
ªª+ ,
ToUpper
ªª, 3
(
ªª3 4
(
ªª4 5
char
ªª5 9
)
ªª9 :
charCode
ªª: B
)
ªªB C
;
ªªC D
}
ΩΩ 
else
ææ 
if
ææ 
(
ææ 
(
ææ !
m_FontStyleInternal
ææ 1
&
ææ2 3

FontStyles
ææ4 >
.
ææ> ?
	LowerCase
ææ? H
)
ææH I
==
ææJ L

FontStyles
ææM W
.
ææW X
	LowerCase
ææX a
)
ææa b
{
øø 
if
¡¡ 
(
¡¡ 
char
¡¡  
.
¡¡  !
IsUpper
¡¡! (
(
¡¡( )
(
¡¡) *
char
¡¡* .
)
¡¡. /
charCode
¡¡/ 7
)
¡¡7 8
)
¡¡8 9
charCode
¬¬ $
=
¬¬% &
char
¬¬' +
.
¬¬+ ,
ToLower
¬¬, 3
(
¬¬3 4
(
¬¬4 5
char
¬¬5 9
)
¬¬9 :
charCode
¬¬: B
)
¬¬B C
;
¬¬C D
}
√√ 
else
ƒƒ 
if
ƒƒ 
(
ƒƒ 
(
ƒƒ !
m_FontStyleInternal
ƒƒ 1
&
ƒƒ2 3

FontStyles
ƒƒ4 >
.
ƒƒ> ?
	SmallCaps
ƒƒ? H
)
ƒƒH I
==
ƒƒJ L

FontStyles
ƒƒM W
.
ƒƒW X
	SmallCaps
ƒƒX a
)
ƒƒa b
{
≈≈ 
if
∆∆ 
(
∆∆ 
char
∆∆  
.
∆∆  !
IsLower
∆∆! (
(
∆∆( )
(
∆∆) *
char
∆∆* .
)
∆∆. /
charCode
∆∆/ 7
)
∆∆7 8
)
∆∆8 9
{
«« !
smallCapsMultiplier
»» /
=
»»0 1
$num
»»2 6
;
»»6 7
charCode
…… $
=
……% &
char
……' +
.
……+ ,
ToUpper
……, 3
(
……3 4
(
……4 5
char
……5 9
)
……9 :
charCode
……: B
)
……B C
;
……C D
}
   
}
ÀÀ 
}
ÃÃ 
float
’’ 
baselineOffset
’’ $
=
’’% &
$num
’’' (
;
’’( )
float
÷÷ 
elementAscentLine
÷÷ '
=
÷÷( )
$num
÷÷* +
;
÷÷+ ,
float
◊◊  
elementDescentLine
◊◊ (
=
◊◊) *
$num
◊◊+ ,
;
◊◊, -
if
ÿÿ 
(
ÿÿ 
m_textElementType
ÿÿ %
==
ÿÿ& (!
TMP_TextElementType
ÿÿ) <
.
ÿÿ< =
Sprite
ÿÿ= C
)
ÿÿC D
{
ŸŸ "
m_currentSpriteAsset
€€ (
=
€€) *

m_textInfo
€€+ 5
.
€€5 6
characterInfo
€€6 C
[
€€C D
m_characterCount
€€D T
]
€€T U
.
€€U V
spriteAsset
€€V a
;
€€a b
m_spriteIndex
‹‹ !
=
‹‹" #

m_textInfo
‹‹$ .
.
‹‹. /
characterInfo
‹‹/ <
[
‹‹< =
m_characterCount
‹‹= M
]
‹‹M N
.
‹‹N O
spriteIndex
‹‹O Z
;
‹‹Z [!
TMP_SpriteCharacter
ﬁﬁ '
sprite
ﬁﬁ( .
=
ﬁﬁ/ 0"
m_currentSpriteAsset
ﬁﬁ1 E
.
ﬁﬁE F"
spriteCharacterTable
ﬁﬁF Z
[
ﬁﬁZ [
m_spriteIndex
ﬁﬁ[ h
]
ﬁﬁh i
;
ﬁﬁi j
if
ﬂﬂ 
(
ﬂﬂ 
sprite
ﬂﬂ 
==
ﬂﬂ !
null
ﬂﬂ" &
)
ﬂﬂ& '
continue
ﬂﬂ( 0
;
ﬂﬂ0 1
if
‚‚ 
(
‚‚ 
charCode
‚‚  
==
‚‚! #
$num
‚‚$ &
)
‚‚& '
charCode
„„  
=
„„! "
$num
„„# (
+
„„) *
m_spriteIndex
„„+ 8
;
„„8 9
else
‰‰ 
m_spriteColor
ÂÂ %
=
ÂÂ& '
s_colorWhite
ÂÂ( 4
;
ÂÂ4 5
if
ËË 
(
ËË "
m_currentSpriteAsset
ËË ,
.
ËË, -

m_FaceInfo
ËË- 7
.
ËË7 8
	pointSize
ËË8 A
>
ËËB C
$num
ËËD E
)
ËËE F
{
ÈÈ 
float
ÍÍ 
spriteScale
ÍÍ )
=
ÍÍ* +
m_currentFontSize
ÍÍ, =
/
ÍÍ> ?"
m_currentSpriteAsset
ÍÍ@ T
.
ÍÍT U

m_FaceInfo
ÍÍU _
.
ÍÍ_ `
	pointSize
ÍÍ` i
*
ÍÍj k#
m_currentSpriteAssetÍÍl Ä
.ÍÍÄ Å

m_FaceInfoÍÍÅ ã
.ÍÍã å
scaleÍÍå ë
*ÍÍí ì
(ÍÍî ï 
m_isOrthographicÍÍï •
?ÍÍ¶ ß
$numÍÍ® ©
:ÍÍ™ ´
$numÍÍ¨ ∞
)ÍÍ∞ ±
;ÍÍ± ≤!
currentElementScale
ÎÎ +
=
ÎÎ, -
sprite
ÎÎ. 4
.
ÎÎ4 5
m_Scale
ÎÎ5 <
*
ÎÎ= >
sprite
ÎÎ? E
.
ÎÎE F
m_Glyph
ÎÎF M
.
ÎÎM N
scale
ÎÎN S
*
ÎÎT U
spriteScale
ÎÎV a
;
ÎÎa b
elementAscentLine
ÏÏ )
=
ÏÏ* +"
m_currentSpriteAsset
ÏÏ, @
.
ÏÏ@ A

m_FaceInfo
ÏÏA K
.
ÏÏK L

ascentLine
ÏÏL V
;
ÏÏV W
baselineOffset
ÌÌ &
=
ÌÌ' ("
m_currentSpriteAsset
ÌÌ) =
.
ÌÌ= >

m_FaceInfo
ÌÌ> H
.
ÌÌH I
baseline
ÌÌI Q
*
ÌÌR S
m_fontScale
ÌÌT _
*
ÌÌ` a#
m_fontScaleMultiplier
ÌÌb w
*
ÌÌx y#
m_currentSpriteAssetÌÌz é
.ÌÌé è

m_FaceInfoÌÌè ô
.ÌÌô ö
scaleÌÌö ü
;ÌÌü † 
elementDescentLine
ÓÓ *
=
ÓÓ+ ,"
m_currentSpriteAsset
ÓÓ- A
.
ÓÓA B

m_FaceInfo
ÓÓB L
.
ÓÓL M
descentLine
ÓÓM X
;
ÓÓX Y
}
ÔÔ 
else
 
{
ÒÒ 
float
ÚÚ 
spriteScale
ÚÚ )
=
ÚÚ* +
m_currentFontSize
ÚÚ, =
/
ÚÚ> ? 
m_currentFontAsset
ÚÚ@ R
.
ÚÚR S

m_FaceInfo
ÚÚS ]
.
ÚÚ] ^
	pointSize
ÚÚ^ g
*
ÚÚh i 
m_currentFontAsset
ÚÚj |
.
ÚÚ| }

m_FaceInfoÚÚ} á
.ÚÚá à
scaleÚÚà ç
*ÚÚé è
(ÚÚê ë 
m_isOrthographicÚÚë °
?ÚÚ¢ £
$numÚÚ§ •
:ÚÚ¶ ß
$numÚÚ® ¨
)ÚÚ¨ ≠
;ÚÚ≠ Æ!
currentElementScale
ÛÛ +
=
ÛÛ, - 
m_currentFontAsset
ÛÛ. @
.
ÛÛ@ A

m_FaceInfo
ÛÛA K
.
ÛÛK L

ascentLine
ÛÛL V
/
ÛÛW X
sprite
ÛÛY _
.
ÛÛ_ `
m_Glyph
ÛÛ` g
.
ÛÛg h
metrics
ÛÛh o
.
ÛÛo p
height
ÛÛp v
*
ÛÛw x
sprite
ÛÛy 
.ÛÛ Ä
m_ScaleÛÛÄ á
*ÛÛà â
spriteÛÛä ê
.ÛÛê ë
m_GlyphÛÛë ò
.ÛÛò ô
scaleÛÛô û
*ÛÛü †
spriteScaleÛÛ° ¨
;ÛÛ¨ ≠
float
ÙÙ 

scaleDelta
ÙÙ (
=
ÙÙ) *
spriteScale
ÙÙ+ 6
/
ÙÙ7 8!
currentElementScale
ÙÙ9 L
;
ÙÙL M
elementAscentLine
ıı )
=
ıı* + 
m_currentFontAsset
ıı, >
.
ıı> ?

m_FaceInfo
ıı? I
.
ııI J

ascentLine
ııJ T
*
ııU V

scaleDelta
ııW a
;
ııa b
baselineOffset
ˆˆ &
=
ˆˆ' ( 
m_currentFontAsset
ˆˆ) ;
.
ˆˆ; <

m_FaceInfo
ˆˆ< F
.
ˆˆF G
baseline
ˆˆG O
*
ˆˆP Q
m_fontScale
ˆˆR ]
*
ˆˆ^ _#
m_fontScaleMultiplier
ˆˆ` u
*
ˆˆv w!
m_currentFontAssetˆˆx ä
.ˆˆä ã

m_FaceInfoˆˆã ï
.ˆˆï ñ
scaleˆˆñ õ
;ˆˆõ ú 
elementDescentLine
˜˜ *
=
˜˜+ , 
m_currentFontAsset
˜˜- ?
.
˜˜? @

m_FaceInfo
˜˜@ J
.
˜˜J K
descentLine
˜˜K V
*
˜˜W X

scaleDelta
˜˜Y c
;
˜˜c d
}
¯¯ "
m_cached_TextElement
˙˙ (
=
˙˙) *
sprite
˙˙+ 1
;
˙˙1 2

m_textInfo
¸¸ 
.
¸¸ 
characterInfo
¸¸ ,
[
¸¸, -
m_characterCount
¸¸- =
]
¸¸= >
.
¸¸> ?
elementType
¸¸? J
=
¸¸K L!
TMP_TextElementType
¸¸M `
.
¸¸` a
Sprite
¸¸a g
;
¸¸g h

m_textInfo
˝˝ 
.
˝˝ 
characterInfo
˝˝ ,
[
˝˝, -
m_characterCount
˝˝- =
]
˝˝= >
.
˝˝> ?
scale
˝˝? D
=
˝˝E F!
currentElementScale
˝˝G Z
;
˝˝Z [

m_textInfo
˛˛ 
.
˛˛ 
characterInfo
˛˛ ,
[
˛˛, -
m_characterCount
˛˛- =
]
˛˛= >
.
˛˛> ?
spriteAsset
˛˛? J
=
˛˛K L"
m_currentSpriteAsset
˛˛M a
;
˛˛a b

m_textInfo
ˇˇ 
.
ˇˇ 
characterInfo
ˇˇ ,
[
ˇˇ, -
m_characterCount
ˇˇ- =
]
ˇˇ= >
.
ˇˇ> ?
	fontAsset
ˇˇ? H
=
ˇˇI J 
m_currentFontAsset
ˇˇK ]
;
ˇˇ] ^

m_textInfo
ÄÄ 
.
ÄÄ 
characterInfo
ÄÄ ,
[
ÄÄ, -
m_characterCount
ÄÄ- =
]
ÄÄ= >
.
ÄÄ> ?$
materialReferenceIndex
ÄÄ? U
=
ÄÄV W$
m_currentMaterialIndex
ÄÄX n
;
ÄÄn o$
m_currentMaterialIndex
ÇÇ *
=
ÇÇ+ ,#
previousMaterialIndex
ÇÇ- B
;
ÇÇB C
padding
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ  
}
ÖÖ 
else
ÜÜ 
if
ÜÜ 
(
ÜÜ 
m_textElementType
ÜÜ *
==
ÜÜ+ -!
TMP_TextElementType
ÜÜ. A
.
ÜÜA B
	Character
ÜÜB K
)
ÜÜK L
{
áá "
m_cached_TextElement
àà (
=
àà) *

m_textInfo
àà+ 5
.
àà5 6
characterInfo
àà6 C
[
ààC D
m_characterCount
ààD T
]
ààT U
.
ààU V
textElement
ààV a
;
ààa b
if
ââ 
(
ââ "
m_cached_TextElement
ââ ,
==
ââ- /
null
ââ0 4
)
ââ4 5
continue
ââ6 >
;
ââ> ? 
m_currentFontAsset
ãã &
=
ãã' (

m_textInfo
ãã) 3
.
ãã3 4
characterInfo
ãã4 A
[
ããA B
m_characterCount
ããB R
]
ããR S
.
ããS T
	fontAsset
ããT ]
;
ãã] ^
m_currentMaterial
åå %
=
åå& '

m_textInfo
åå( 2
.
åå2 3
characterInfo
åå3 @
[
åå@ A
m_characterCount
ååA Q
]
ååQ R
.
ååR S
material
ååS [
;
åå[ \$
m_currentMaterialIndex
çç *
=
çç+ ,

m_textInfo
çç- 7
.
çç7 8
characterInfo
çç8 E
[
ççE F
m_characterCount
ççF V
]
ççV W
.
ççW X$
materialReferenceIndex
ççX n
;
ççn o
float
êê 
adjustedScale
êê '
;
êê' (
if
ëë 
(
ëë "
isInjectingCharacter
ëë ,
&&
ëë- /%
m_InternalParsingBuffer
ëë0 G
[
ëëG H
i
ëëH I
]
ëëI J
.
ëëJ K
unicode
ëëK R
==
ëëS U
$num
ëëV Z
&&
ëë[ ]
m_characterCount
ëë^ n
!=
ëëo q%
m_firstCharacterOfLineëër à
)ëëà â
adjustedScale
íí %
=
íí& '

m_textInfo
íí( 2
.
íí2 3
characterInfo
íí3 @
[
íí@ A
m_characterCount
ííA Q
-
ííR S
$num
ííT U
]
ííU V
.
ííV W
	pointSize
ííW `
*
íía b!
smallCapsMultiplier
ííc v
/
ííw x!
m_currentFontAssetííy ã
.ííã å

m_FaceInfoííå ñ
.ííñ ó
	pointSizeííó †
*íí° ¢"
m_currentFontAssetíí£ µ
.ííµ ∂

m_FaceInfoíí∂ ¿
.íí¿ ¡
scaleíí¡ ∆
*íí« »
(íí…   
m_isOrthographicíí  ⁄
?íí€ ‹
$numíí› ﬁ
:ííﬂ ‡
$numíí· Â
)ííÂ Ê
;ííÊ Á
else
ìì 
adjustedScale
îî %
=
îî& '
m_currentFontSize
îî( 9
*
îî: ;!
smallCapsMultiplier
îî< O
/
îîP Q 
m_currentFontAsset
îîR d
.
îîd e

m_FaceInfo
îîe o
.
îîo p
	pointSize
îîp y
*
îîz {!
m_currentFontAssetîî| é
.îîé è

m_FaceInfoîîè ô
.îîô ö
scaleîîö ü
*îî† °
(îî¢ £ 
m_isOrthographicîî£ ≥
?îî¥ µ
$numîî∂ ∑
:îî∏ π
$numîî∫ æ
)îîæ ø
;îîø ¿
elementAscentLine
ññ %
=
ññ& ' 
m_currentFontAsset
ññ( :
.
ññ: ;

m_FaceInfo
ññ; E
.
ññE F

ascentLine
ññF P
;
ññP Q 
elementDescentLine
óó &
=
óó' ( 
m_currentFontAsset
óó) ;
.
óó; <

m_FaceInfo
óó< F
.
óóF G
descentLine
óóG R
;
óóR S!
currentElementScale
ôô '
=
ôô( )
adjustedScale
ôô* 7
*
ôô8 9#
m_fontScaleMultiplier
ôô: O
*
ôôP Q"
m_cached_TextElement
ôôR f
.
ôôf g
m_Scale
ôôg n
*
ôôo p#
m_cached_TextElementôôq Ö
.ôôÖ Ü
m_GlyphôôÜ ç
.ôôç é
scaleôôé ì
;ôôì î
baselineOffset
öö "
=
öö# $ 
m_currentFontAsset
öö% 7
.
öö7 8

m_FaceInfo
öö8 B
.
ööB C
baseline
ööC K
*
ööL M
adjustedScale
ööN [
*
öö\ ]#
m_fontScaleMultiplier
öö^ s
*
ööt u!
m_currentFontAssetööv à
.ööà â

m_FaceInfoööâ ì
.ööì î
scaleööî ô
;ööô ö

m_textInfo
úú 
.
úú 
characterInfo
úú ,
[
úú, -
m_characterCount
úú- =
]
úú= >
.
úú> ?
elementType
úú? J
=
úúK L!
TMP_TextElementType
úúM `
.
úú` a
	Character
úúa j
;
úúj k

m_textInfo
ùù 
.
ùù 
characterInfo
ùù ,
[
ùù, -
m_characterCount
ùù- =
]
ùù= >
.
ùù> ?
scale
ùù? D
=
ùùE F!
currentElementScale
ùùG Z
;
ùùZ [
padding
üü 
=
üü $
m_currentMaterialIndex
üü 4
==
üü5 7
$num
üü8 9
?
üü: ;
	m_padding
üü< E
:
üüF G
m_subTextObjects
üüH X
[
üüX Y$
m_currentMaterialIndex
üüY o
]
üüo p
.
üüp q
padding
üüq x
;
üüx y
}
†† 
float
©© +
currentElementUnmodifiedScale
©© 3
=
©©4 5!
currentElementScale
©©6 I
;
©©I J
if
™™ 
(
™™ 
charCode
™™ 
==
™™ 
$num
™™  $
||
™™% '
charCode
™™( 0
==
™™1 3
$num
™™4 8
)
™™8 9!
currentElementScale
´´ '
=
´´( )
$num
´´* +
;
´´+ ,

m_textInfo
∞∞ 
.
∞∞ 
characterInfo
∞∞ (
[
∞∞( )
m_characterCount
∞∞) 9
]
∞∞9 :
.
∞∞: ;
	character
∞∞; D
=
∞∞E F
(
∞∞G H
char
∞∞H L
)
∞∞L M
charCode
∞∞M U
;
∞∞U V

m_textInfo
±± 
.
±± 
characterInfo
±± (
[
±±( )
m_characterCount
±±) 9
]
±±9 :
.
±±: ;
	pointSize
±±; D
=
±±E F
m_currentFontSize
±±G X
;
±±X Y

m_textInfo
≤≤ 
.
≤≤ 
characterInfo
≤≤ (
[
≤≤( )
m_characterCount
≤≤) 9
]
≤≤9 :
.
≤≤: ;
color
≤≤; @
=
≤≤A B
m_htmlColor
≤≤C N
;
≤≤N O

m_textInfo
≥≥ 
.
≥≥ 
characterInfo
≥≥ (
[
≥≥( )
m_characterCount
≥≥) 9
]
≥≥9 :
.
≥≥: ;
underlineColor
≥≥; I
=
≥≥J K
m_underlineColor
≥≥L \
;
≥≥\ ]

m_textInfo
¥¥ 
.
¥¥ 
characterInfo
¥¥ (
[
¥¥( )
m_characterCount
¥¥) 9
]
¥¥9 :
.
¥¥: ; 
strikethroughColor
¥¥; M
=
¥¥N O"
m_strikethroughColor
¥¥P d
;
¥¥d e

m_textInfo
µµ 
.
µµ 
characterInfo
µµ (
[
µµ( )
m_characterCount
µµ) 9
]
µµ9 :
.
µµ: ;
highlightState
µµ; I
=
µµJ K#
m_HighlightStateStack
µµL a
.
µµa b
current
µµb i
;
µµi j

m_textInfo
∂∂ 
.
∂∂ 
characterInfo
∂∂ (
[
∂∂( )
m_characterCount
∂∂) 9
]
∂∂9 :
.
∂∂: ;
style
∂∂; @
=
∂∂A B!
m_FontStyleInternal
∂∂C V
;
∂∂V W
GlyphMetrics
ππ !
currentGlyphMetrics
ππ 0
=
ππ1 2"
m_cached_TextElement
ππ3 G
.
ππG H
m_Glyph
ππH O
.
ππO P
metrics
ππP W
;
ππW X
bool
ºº 
isWhiteSpace
ºº !
=
ºº" #
char
ºº$ (
.
ºº( )
IsWhiteSpace
ºº) 5
(
ºº5 6
(
ºº6 7
char
ºº7 ;
)
ºº; <
charCode
ºº< D
)
ººD E
;
ººE F"
TMP_GlyphValueRecord
¡¡ $
glyphAdjustments
¡¡% 5
=
¡¡6 7
new
¡¡8 ;"
TMP_GlyphValueRecord
¡¡< P
(
¡¡P Q
)
¡¡Q R
;
¡¡R S
float
¬¬ (
characterSpacingAdjustment
¬¬ 0
=
¬¬1 2 
m_characterSpacing
¬¬3 E
;
¬¬E F0
"m_GlyphHorizontalAdvanceAdjustment
√√ 2
=
√√3 4
$num
√√5 6
;
√√6 7
if
ƒƒ 
(
ƒƒ 
m_enableKerning
ƒƒ #
)
ƒƒ# $
{
≈≈ +
TMP_GlyphPairAdjustmentRecord
   1
adjustmentPair
  2 @
;
  @ A
uint
ÀÀ 
baseGlyphIndex
ÀÀ '
=
ÀÀ( )"
m_cached_TextElement
ÀÀ* >
.
ÀÀ> ?
m_GlyphIndex
ÀÀ? K
;
ÀÀK L
if
ÕÕ 
(
ÕÕ 
m_characterCount
ÕÕ (
<
ÕÕ) *!
totalCharacterCount
ÕÕ+ >
-
ÕÕ? @
$num
ÕÕA B
)
ÕÕB C
{
ŒŒ 
uint
œœ 
nextGlyphIndex
œœ +
=
œœ, -

m_textInfo
œœ. 8
.
œœ8 9
characterInfo
œœ9 F
[
œœF G
m_characterCount
œœG W
+
œœX Y
$num
œœZ [
]
œœ[ \
.
œœ\ ]
textElement
œœ] h
.
œœh i
m_GlyphIndex
œœi u
;
œœu v
uint
–– 
key
––  
=
––! "
nextGlyphIndex
––# 1
<<
––2 4
$num
––5 7
|
––8 9
baseGlyphIndex
––: H
;
––H I
if
““ 
(
““  
m_currentFontAsset
““ .
.
““. / 
m_FontFeatureTable
““/ A
.
““A B9
+m_GlyphPairAdjustmentRecordLookupDictionary
““B m
.
““m n
TryGetValue
““n y
(
““y z
key
““z }
,
““} ~
out““ Ç
adjustmentPair““É ë
)““ë í
)““í ì
{
”” 
glyphAdjustments
‘‘ ,
=
‘‘- .
adjustmentPair
‘‘/ =
.
‘‘= >%
m_FirstAdjustmentRecord
‘‘> U
.
‘‘U V 
m_GlyphValueRecord
‘‘V h
;
‘‘h i(
characterSpacingAdjustment
’’ 6
=
’’7 8
(
’’9 :
adjustmentPair
’’: H
.
’’H I"
m_FeatureLookupFlags
’’I ]
&
’’^ _$
FontFeatureLookupFlags
’’` v
.
’’v w'
IgnoreSpacingAdjustments’’w è
)’’è ê
==’’ë ì&
FontFeatureLookupFlags’’î ™
.’’™ ´(
IgnoreSpacingAdjustments’’´ √
?’’ƒ ≈
$num’’∆ «
:’’» …*
characterSpacingAdjustment’’  ‰
;’’‰ Â
}
÷÷ 
}
◊◊ 
if
ŸŸ 
(
ŸŸ 
m_characterCount
ŸŸ (
>=
ŸŸ) +
$num
ŸŸ, -
)
ŸŸ- .
{
⁄⁄ 
uint
€€  
previousGlyphIndex
€€ /
=
€€0 1

m_textInfo
€€2 <
.
€€< =
characterInfo
€€= J
[
€€J K
m_characterCount
€€K [
-
€€\ ]
$num
€€^ _
]
€€_ `
.
€€` a
textElement
€€a l
.
€€l m
m_GlyphIndex
€€m y
;
€€y z
uint
‹‹ 
key
‹‹  
=
‹‹! "
baseGlyphIndex
‹‹# 1
<<
‹‹2 4
$num
‹‹5 7
|
‹‹8 9 
previousGlyphIndex
‹‹: L
;
‹‹L M
if
ﬁﬁ 
(
ﬁﬁ  
m_currentFontAsset
ﬁﬁ .
.
ﬁﬁ. / 
m_FontFeatureTable
ﬁﬁ/ A
.
ﬁﬁA B9
+m_GlyphPairAdjustmentRecordLookupDictionary
ﬁﬁB m
.
ﬁﬁm n
TryGetValue
ﬁﬁn y
(
ﬁﬁy z
key
ﬁﬁz }
,
ﬁﬁ} ~
outﬁﬁ Ç
adjustmentPairﬁﬁÉ ë
)ﬁﬁë í
)ﬁﬁí ì
{
ﬂﬂ 
glyphAdjustments
‡‡ ,
+=
‡‡- /
adjustmentPair
‡‡0 >
.
‡‡> ?&
m_SecondAdjustmentRecord
‡‡? W
.
‡‡W X 
m_GlyphValueRecord
‡‡X j
;
‡‡j k(
characterSpacingAdjustment
·· 6
=
··7 8
(
··9 :
adjustmentPair
··: H
.
··H I"
m_FeatureLookupFlags
··I ]
&
··^ _$
FontFeatureLookupFlags
··` v
.
··v w'
IgnoreSpacingAdjustments··w è
)··è ê
==··ë ì&
FontFeatureLookupFlags··î ™
.··™ ´(
IgnoreSpacingAdjustments··´ √
?··ƒ ≈
$num··∆ «
:··» …*
characterSpacingAdjustment··  ‰
;··‰ Â
}
‚‚ 
}
„„ 0
"m_GlyphHorizontalAdvanceAdjustment
ÂÂ 6
=
ÂÂ7 8
glyphAdjustments
ÂÂ9 I
.
ÂÂI J
xAdvance
ÂÂJ R
;
ÂÂR S
}
ÍÍ 
if
 
(
 
m_isRightToLeft
 #
)
# $
{
ÒÒ 

m_xAdvance
ÚÚ 
-=
ÚÚ !!
currentGlyphMetrics
ÚÚ" 5
.
ÚÚ5 6
horizontalAdvance
ÚÚ6 G
*
ÚÚH I
(
ÚÚJ K
$num
ÚÚK L
-
ÚÚM N!
m_charWidthAdjDelta
ÚÚO b
)
ÚÚb c
*
ÚÚd e!
currentElementScale
ÚÚf y
;
ÚÚy z
if
ÙÙ 
(
ÙÙ 
isWhiteSpace
ÙÙ $
||
ÙÙ% '
charCode
ÙÙ( 0
==
ÙÙ1 3
$num
ÙÙ4 :
)
ÙÙ: ;

m_xAdvance
ıı "
-=
ıı# %
m_wordSpacing
ıı& 3
*
ıı4 5
currentEmScale
ıı6 D
;
ııD E
}
ˆˆ 
float
¸¸ 
monoAdvance
¸¸ !
=
¸¸" #
$num
¸¸$ %
;
¸¸% &
if
˝˝ 
(
˝˝ 
m_monoSpacing
˝˝ !
!=
˝˝" $
$num
˝˝% &
)
˝˝& '
{
˛˛ 
monoAdvance
ˇˇ 
=
ˇˇ  !
(
ˇˇ" #
m_monoSpacing
ˇˇ# 0
/
ˇˇ1 2
$num
ˇˇ3 4
-
ˇˇ5 6
(
ˇˇ7 8!
currentGlyphMetrics
ˇˇ8 K
.
ˇˇK L
width
ˇˇL Q
/
ˇˇR S
$num
ˇˇT U
+
ˇˇV W!
currentGlyphMetrics
ˇˇX k
.
ˇˇk l 
horizontalBearingX
ˇˇl ~
)
ˇˇ~ 
*ˇˇÄ Å#
currentElementScaleˇˇÇ ï
)ˇˇï ñ
*ˇˇó ò
(ˇˇô ö
$numˇˇö õ
-ˇˇú ù#
m_charWidthAdjDeltaˇˇû ±
)ˇˇ± ≤
;ˇˇ≤ ≥

m_xAdvance
ÄÄ 
+=
ÄÄ !
monoAdvance
ÄÄ" -
;
ÄÄ- .
}
ÅÅ 
if
áá 
(
áá 
m_textElementType
áá %
==
áá& (!
TMP_TextElementType
áá) <
.
áá< =
	Character
áá= F
&&
ááG I
!
ááJ K 
isUsingAltTypeface
ááK ]
&&
áá^ `
(
ááa b
(
ááb c!
m_FontStyleInternal
áác v
&
ááw x

FontStylesááy É
.ááÉ Ñ
BoldááÑ à
)ááà â
==ááä å

FontStylesááç ó
.ááó ò
Boldááò ú
)ááú ù
)ááù û
{
àà 
if
ââ 
(
ââ 
m_currentMaterial
ââ )
!=
ââ* ,
null
ââ- 1
&&
ââ2 4
m_currentMaterial
ââ5 F
.
ââF G
HasProperty
ââG R
(
ââR S
ShaderUtilities
ââS b
.
ââb c
ID_GradientScale
ââc s
)
ââs t
)
âât u
{
ää 
float
ãã 
gradientScale
ãã +
=
ãã, -
m_currentMaterial
ãã. ?
.
ãã? @
GetFloat
ãã@ H
(
ããH I
ShaderUtilities
ããI X
.
ããX Y
ID_GradientScale
ããY i
)
ããi j
;
ããj k
style_padding
åå %
=
åå& ' 
m_currentFontAsset
åå( :
.
åå: ;
	boldStyle
åå; D
/
ååE F
$num
ååG K
*
ååL M
gradientScale
ååN [
*
åå\ ]
m_currentMaterial
åå^ o
.
ååo p
GetFloat
ååp x
(
ååx y
ShaderUtilitiesååy à
.ååà â
ID_ScaleRatio_Aååâ ò
)ååò ô
;ååô ö
if
èè 
(
èè 
style_padding
èè )
+
èè* +
padding
èè, 3
>
èè4 5
gradientScale
èè6 C
)
èèC D
padding
êê #
=
êê$ %
gradientScale
êê& 3
-
êê4 5
style_padding
êê6 C
;
êêC D
}
ëë 
else
íí 
style_padding
ìì %
=
ìì& '
$num
ìì( )
;
ìì) *#
boldSpacingAdjustment
ïï )
=
ïï* + 
m_currentFontAsset
ïï, >
.
ïï> ?
boldSpacing
ïï? J
;
ïïJ K
}
ññ 
else
óó 
{
òò 
if
ôô 
(
ôô 
m_currentMaterial
ôô )
!=
ôô* ,
null
ôô- 1
&&
ôô2 4
m_currentMaterial
ôô5 F
.
ôôF G
HasProperty
ôôG R
(
ôôR S
ShaderUtilities
ôôS b
.
ôôb c
ID_GradientScale
ôôc s
)
ôôs t
)
ôôt u
{
öö 
float
õõ 
gradientScale
õõ +
=
õõ, -
m_currentMaterial
õõ. ?
.
õõ? @
GetFloat
õõ@ H
(
õõH I
ShaderUtilities
õõI X
.
õõX Y
ID_GradientScale
õõY i
)
õõi j
;
õõj k
style_padding
úú %
=
úú& ' 
m_currentFontAsset
úú( :
.
úú: ;
normalStyle
úú; F
/
úúG H
$num
úúI M
*
úúN O
gradientScale
úúP ]
*
úú^ _
m_currentMaterial
úú` q
.
úúq r
GetFloat
úúr z
(
úúz {
ShaderUtilitiesúú{ ä
.úúä ã
ID_ScaleRatio_Aúúã ö
)úúö õ
;úúõ ú
if
üü 
(
üü 
style_padding
üü )
+
üü* +
padding
üü, 3
>
üü4 5
gradientScale
üü6 C
)
üüC D
padding
†† #
=
††$ %
gradientScale
††& 3
-
††4 5
style_padding
††6 C
;
††C D
}
°° 
else
¢¢ 
style_padding
££ %
=
££& '
$num
££( )
;
££) *#
boldSpacingAdjustment
•• )
=
••* +
$num
••, -
;
••- .
}
¶¶ 
Vector3
ØØ 
top_left
ØØ  
;
ØØ  !
top_left
∞∞ 
.
∞∞ 
x
∞∞ 
=
∞∞ 

m_xAdvance
∞∞ '
+
∞∞( )
(
∞∞* +
(
∞∞+ ,!
currentGlyphMetrics
∞∞, ?
.
∞∞? @ 
horizontalBearingX
∞∞@ R
-
∞∞S T
padding
∞∞U \
-
∞∞] ^
style_padding
∞∞_ l
+
∞∞m n
glyphAdjustments
∞∞o 
.∞∞ Ä
m_XPlacement∞∞Ä å
)∞∞å ç
*∞∞é è#
currentElementScale∞∞ê £
*∞∞§ •
(∞∞¶ ß
$num∞∞ß ®
-∞∞© ™#
m_charWidthAdjDelta∞∞´ æ
)∞∞æ ø
)∞∞ø ¿
;∞∞¿ ¡
top_left
±± 
.
±± 
y
±± 
=
±± 
baselineOffset
±± +
+
±±, -
(
±±. /!
currentGlyphMetrics
±±/ B
.
±±B C 
horizontalBearingY
±±C U
+
±±V W
padding
±±X _
+
±±` a
glyphAdjustments
±±b r
.
±±r s
m_YPlacement
±±s 
)±± Ä
*±±Å Ç#
currentElementScale±±É ñ
-±±ó ò
m_lineOffset±±ô •
+±±¶ ß 
m_baselineOffset±±® ∏
;±±∏ π
top_left
≤≤ 
.
≤≤ 
z
≤≤ 
=
≤≤ 
$num
≤≤ 
;
≤≤ 
Vector3
¥¥ 
bottom_left
¥¥ #
;
¥¥# $
bottom_left
µµ 
.
µµ 
x
µµ 
=
µµ 
top_left
µµ  (
.
µµ( )
x
µµ) *
;
µµ* +
bottom_left
∂∂ 
.
∂∂ 
y
∂∂ 
=
∂∂ 
top_left
∂∂  (
.
∂∂( )
y
∂∂) *
-
∂∂+ ,
(
∂∂- .
(
∂∂. /!
currentGlyphMetrics
∂∂/ B
.
∂∂B C
height
∂∂C I
+
∂∂J K
padding
∂∂L S
*
∂∂T U
$num
∂∂V W
)
∂∂W X
*
∂∂Y Z!
currentElementScale
∂∂[ n
)
∂∂n o
;
∂∂o p
bottom_left
∑∑ 
.
∑∑ 
z
∑∑ 
=
∑∑ 
$num
∑∑  !
;
∑∑! "
Vector3
ππ 
	top_right
ππ !
;
ππ! "
	top_right
∫∫ 
.
∫∫ 
x
∫∫ 
=
∫∫ 
bottom_left
∫∫ )
.
∫∫) *
x
∫∫* +
+
∫∫, -
(
∫∫. /
(
∫∫/ 0!
currentGlyphMetrics
∫∫0 C
.
∫∫C D
width
∫∫D I
+
∫∫J K
padding
∫∫L S
*
∫∫T U
$num
∫∫V W
+
∫∫X Y
style_padding
∫∫Z g
*
∫∫h i
$num
∫∫j k
)
∫∫k l
*
∫∫m n"
currentElementScale∫∫o Ç
*∫∫É Ñ
(∫∫Ö Ü
$num∫∫Ü á
-∫∫à â#
m_charWidthAdjDelta∫∫ä ù
)∫∫ù û
)∫∫û ü
;∫∫ü †
	top_right
ªª 
.
ªª 
y
ªª 
=
ªª 
top_left
ªª &
.
ªª& '
y
ªª' (
;
ªª( )
	top_right
ºº 
.
ºº 
z
ºº 
=
ºº 
$num
ºº 
;
ºº  
Vector3
ææ 
bottom_right
ææ $
;
ææ$ %
bottom_right
øø 
.
øø 
x
øø 
=
øø  
	top_right
øø! *
.
øø* +
x
øø+ ,
;
øø, -
bottom_right
¿¿ 
.
¿¿ 
y
¿¿ 
=
¿¿  
bottom_left
¿¿! ,
.
¿¿, -
y
¿¿- .
;
¿¿. /
bottom_right
¡¡ 
.
¡¡ 
z
¡¡ 
=
¡¡  
$num
¡¡! "
;
¡¡" #
if
ÀÀ 
(
ÀÀ 
m_textElementType
ÀÀ %
==
ÀÀ& (!
TMP_TextElementType
ÀÀ) <
.
ÀÀ< =
	Character
ÀÀ= F
&&
ÀÀG I
!
ÀÀJ K 
isUsingAltTypeface
ÀÀK ]
&&
ÀÀ^ `
(
ÀÀa b
(
ÀÀb c!
m_FontStyleInternal
ÀÀc v
&
ÀÀw x

FontStylesÀÀy É
.ÀÀÉ Ñ
ItalicÀÀÑ ä
)ÀÀä ã
==ÀÀå é

FontStylesÀÀè ô
.ÀÀô ö
ItalicÀÀö †
)ÀÀ† °
)ÀÀ° ¢
{
ÃÃ 
float
ŒŒ 
shear_value
ŒŒ %
=
ŒŒ& '
m_ItalicAngle
ŒŒ( 5
*
ŒŒ6 7
$num
ŒŒ8 =
;
ŒŒ= >
Vector3
œœ 
topShear
œœ $
=
œœ% &
new
œœ' *
Vector3
œœ+ 2
(
œœ2 3
shear_value
œœ3 >
*
œœ? @
(
œœA B
(
œœB C!
currentGlyphMetrics
œœC V
.
œœV W 
horizontalBearingY
œœW i
+
œœj k
padding
œœl s
+
œœt u
style_paddingœœv É
)œœÉ Ñ
*œœÖ Ü#
currentElementScaleœœá ö
)œœö õ
,œœõ ú
$numœœù û
,œœû ü
$numœœ† °
)œœ° ¢
;œœ¢ £
Vector3
–– 
bottomShear
–– '
=
––( )
new
––* -
Vector3
––. 5
(
––5 6
shear_value
––6 A
*
––B C
(
––D E
(
––E F
(
––F G!
currentGlyphMetrics
––G Z
.
––Z [ 
horizontalBearingY
––[ m
-
––n o"
currentGlyphMetrics––p É
.––É Ñ
height––Ñ ä
-––ã å
padding––ç î
-––ï ñ
style_padding––ó §
)––§ •
)––• ¶
*––ß ®#
currentElementScale––© º
)––º Ω
,––Ω æ
$num––ø ¿
,––¿ ¡
$num––¬ √
)––√ ƒ
;––ƒ ≈
Vector3
““ 
shearAdjustment
““ +
=
““, -
new
““. 1
Vector3
““2 9
(
““9 :
(
““: ;
topShear
““; C
.
““C D
x
““D E
-
““F G
bottomShear
““H S
.
““S T
x
““T U
)
““U V
/
““W X
$num
““Y Z
,
““Z [
$num
““\ ]
,
““] ^
$num
““_ `
)
““` a
;
““a b
top_left
‘‘ 
=
‘‘ 
top_left
‘‘ '
+
‘‘( )
topShear
‘‘* 2
-
‘‘3 4
shearAdjustment
‘‘5 D
;
‘‘D E
bottom_left
’’ 
=
’’  !
bottom_left
’’" -
+
’’. /
bottomShear
’’0 ;
-
’’< =
shearAdjustment
’’> M
;
’’M N
	top_right
÷÷ 
=
÷÷ 
	top_right
÷÷  )
+
÷÷* +
topShear
÷÷, 4
-
÷÷5 6
shearAdjustment
÷÷7 F
;
÷÷F G
bottom_right
◊◊  
=
◊◊! "
bottom_right
◊◊# /
+
◊◊0 1
bottomShear
◊◊2 =
-
◊◊> ?
shearAdjustment
◊◊@ O
;
◊◊O P
}
ÿÿ 
if
ﬁﬁ 
(
ﬁﬁ 
m_isFXMatrixSet
ﬁﬁ #
)
ﬁﬁ# $
{
ﬂﬂ 
if
·· 
(
·· 

m_FXMatrix
·· "
.
··" #

lossyScale
··# -
.
··- .
x
··. /
!=
··0 2
$num
··3 4
)
··4 5
{
‚‚ 
}
ÁÁ 
Vector3
ÈÈ 
positionOffset
ÈÈ *
=
ÈÈ+ ,
(
ÈÈ- .
	top_right
ÈÈ. 7
+
ÈÈ8 9
bottom_left
ÈÈ: E
)
ÈÈE F
/
ÈÈG H
$num
ÈÈI J
;
ÈÈJ K
top_left
ÎÎ 
=
ÎÎ 

m_FXMatrix
ÎÎ )
.
ÎÎ) *
MultiplyPoint3x4
ÎÎ* :
(
ÎÎ: ;
top_left
ÎÎ; C
-
ÎÎD E
positionOffset
ÎÎF T
)
ÎÎT U
+
ÎÎV W
positionOffset
ÎÎX f
;
ÎÎf g
bottom_left
ÏÏ 
=
ÏÏ  !

m_FXMatrix
ÏÏ" ,
.
ÏÏ, -
MultiplyPoint3x4
ÏÏ- =
(
ÏÏ= >
bottom_left
ÏÏ> I
-
ÏÏJ K
positionOffset
ÏÏL Z
)
ÏÏZ [
+
ÏÏ\ ]
positionOffset
ÏÏ^ l
;
ÏÏl m
	top_right
ÌÌ 
=
ÌÌ 

m_FXMatrix
ÌÌ  *
.
ÌÌ* +
MultiplyPoint3x4
ÌÌ+ ;
(
ÌÌ; <
	top_right
ÌÌ< E
-
ÌÌF G
positionOffset
ÌÌH V
)
ÌÌV W
+
ÌÌX Y
positionOffset
ÌÌZ h
;
ÌÌh i
bottom_right
ÓÓ  
=
ÓÓ! "

m_FXMatrix
ÓÓ# -
.
ÓÓ- .
MultiplyPoint3x4
ÓÓ. >
(
ÓÓ> ?
bottom_right
ÓÓ? K
-
ÓÓL M
positionOffset
ÓÓN \
)
ÓÓ\ ]
+
ÓÓ^ _
positionOffset
ÓÓ` n
;
ÓÓn o
}
ÔÔ 

m_textInfo
ÙÙ 
.
ÙÙ 
characterInfo
ÙÙ (
[
ÙÙ( )
m_characterCount
ÙÙ) 9
]
ÙÙ9 :
.
ÙÙ: ;

bottomLeft
ÙÙ; E
=
ÙÙF G
bottom_left
ÙÙH S
;
ÙÙS T

m_textInfo
ıı 
.
ıı 
characterInfo
ıı (
[
ıı( )
m_characterCount
ıı) 9
]
ıı9 :
.
ıı: ;
topLeft
ıı; B
=
ııC D
top_left
ııE M
;
ııM N

m_textInfo
ˆˆ 
.
ˆˆ 
characterInfo
ˆˆ (
[
ˆˆ( )
m_characterCount
ˆˆ) 9
]
ˆˆ9 :
.
ˆˆ: ;
topRight
ˆˆ; C
=
ˆˆD E
	top_right
ˆˆF O
;
ˆˆO P

m_textInfo
˜˜ 
.
˜˜ 
characterInfo
˜˜ (
[
˜˜( )
m_characterCount
˜˜) 9
]
˜˜9 :
.
˜˜: ;
bottomRight
˜˜; F
=
˜˜G H
bottom_right
˜˜I U
;
˜˜U V

m_textInfo
˘˘ 
.
˘˘ 
characterInfo
˘˘ (
[
˘˘( )
m_characterCount
˘˘) 9
]
˘˘9 :
.
˘˘: ;
origin
˘˘; A
=
˘˘B C

m_xAdvance
˘˘D N
;
˘˘N O

m_textInfo
˙˙ 
.
˙˙ 
characterInfo
˙˙ (
[
˙˙( )
m_characterCount
˙˙) 9
]
˙˙9 :
.
˙˙: ;
baseLine
˙˙; C
=
˙˙D E
baselineOffset
˙˙F T
-
˙˙U V
m_lineOffset
˙˙W c
+
˙˙d e
m_baselineOffset
˙˙f v
;
˙˙v w

m_textInfo
˚˚ 
.
˚˚ 
characterInfo
˚˚ (
[
˚˚( )
m_characterCount
˚˚) 9
]
˚˚9 :
.
˚˚: ;
aspectRatio
˚˚; F
=
˚˚G H
(
˚˚I J
	top_right
˚˚J S
.
˚˚S T
x
˚˚T U
-
˚˚V W
bottom_left
˚˚X c
.
˚˚c d
x
˚˚d e
)
˚˚e f
/
˚˚g h
(
˚˚i j
top_left
˚˚j r
.
˚˚r s
y
˚˚s t
-
˚˚u v
bottom_left˚˚w Ç
.˚˚Ç É
y˚˚É Ñ
)˚˚Ñ Ö
;˚˚Ö Ü
float
ÑÑ 
elementAscender
ÑÑ %
=
ÑÑ& '
m_textElementType
ÑÑ( 9
==
ÑÑ: <!
TMP_TextElementType
ÑÑ= P
.
ÑÑP Q
	Character
ÑÑQ Z
?
ÖÖ 
elementAscentLine
ÖÖ '
*
ÖÖ( )!
currentElementScale
ÖÖ* =
/
ÖÖ> ?!
smallCapsMultiplier
ÖÖ@ S
+
ÖÖT U
m_baselineOffset
ÖÖV f
:
ÜÜ 
elementAscentLine
ÜÜ '
*
ÜÜ( )!
currentElementScale
ÜÜ* =
+
ÜÜ> ?
m_baselineOffset
ÜÜ@ P
;
ÜÜP Q
float
ââ 
elementDescender
ââ &
=
ââ' (
m_textElementType
ââ) :
==
ââ; =!
TMP_TextElementType
ââ> Q
.
ââQ R
	Character
ââR [
?
ää  
elementDescentLine
ää (
*
ää) *!
currentElementScale
ää+ >
/
ää? @!
smallCapsMultiplier
ääA T
+
ääU V
m_baselineOffset
ääW g
:
ãã  
elementDescentLine
ãã (
*
ãã) *!
currentElementScale
ãã+ >
+
ãã? @
m_baselineOffset
ããA Q
;
ããQ R
float
çç 
adjustedAscender
çç &
=
çç' (
elementAscender
çç) 8
;
çç8 9
float
éé 
adjustedDescender
éé '
=
éé( )
elementDescender
éé* :
;
éé: ;
bool
êê $
isFirstCharacterOfLine
êê +
=
êê, -
m_characterCount
êê. >
==
êê? A$
m_firstCharacterOfLine
êêB X
;
êêX Y
if
íí 
(
íí $
isFirstCharacterOfLine
íí *
||
íí+ -
isWhiteSpace
íí. :
==
íí; =
false
íí> C
)
ííC D
{
ìì 
if
ïï 
(
ïï 
m_baselineOffset
ïï (
!=
ïï) +
$num
ïï, -
)
ïï- .
{
ññ 
adjustedAscender
óó (
=
óó) *
Mathf
óó+ 0
.
óó0 1
Max
óó1 4
(
óó4 5
(
óó5 6
elementAscender
óó6 E
-
óóF G
m_baselineOffset
óóH X
)
óóX Y
/
óóZ [#
m_fontScaleMultiplier
óó\ q
,
óóq r
adjustedAscenderóós É
)óóÉ Ñ
;óóÑ Ö
adjustedDescender
òò )
=
òò* +
Mathf
òò, 1
.
òò1 2
Min
òò2 5
(
òò5 6
(
òò6 7
elementDescender
òò7 G
-
òòH I
m_baselineOffset
òòJ Z
)
òòZ [
/
òò\ ]#
m_fontScaleMultiplier
òò^ s
,
òòs t 
adjustedDescenderòòu Ü
)òòÜ á
;òòá à
}
ôô 
m_maxLineAscender
õõ %
=
õõ& '
Mathf
õõ( -
.
õõ- .
Max
õõ. 1
(
õõ1 2
adjustedAscender
õõ2 B
,
õõB C
m_maxLineAscender
õõD U
)
õõU V
;
õõV W 
m_maxLineDescender
úú &
=
úú' (
Mathf
úú) .
.
úú. /
Min
úú/ 2
(
úú2 3
adjustedDescender
úú3 D
,
úúD E 
m_maxLineDescender
úúF X
)
úúX Y
;
úúY Z
}
ùù 
if
†† 
(
†† $
isFirstCharacterOfLine
†† *
||
††+ -
isWhiteSpace
††. :
==
††; =
false
††> C
)
††C D
{
°° 

m_textInfo
¢¢ 
.
¢¢ 
characterInfo
¢¢ ,
[
¢¢, -
m_characterCount
¢¢- =
]
¢¢= >
.
¢¢> ?
adjustedAscender
¢¢? O
=
¢¢P Q
adjustedAscender
¢¢R b
;
¢¢b c

m_textInfo
££ 
.
££ 
characterInfo
££ ,
[
££, -
m_characterCount
££- =
]
££= >
.
££> ?
adjustedDescender
££? P
=
££Q R
adjustedDescender
££S d
;
££d e
m_ElementAscender
•• %
=
••& '

m_textInfo
••( 2
.
••2 3
characterInfo
••3 @
[
••@ A
m_characterCount
••A Q
]
••Q R
.
••R S
ascender
••S [
=
••\ ]
elementAscender
••^ m
-
••n o
m_lineOffset
••p |
;
••| } 
m_ElementDescender
¶¶ &
=
¶¶' (

m_textInfo
¶¶) 3
.
¶¶3 4
characterInfo
¶¶4 A
[
¶¶A B
m_characterCount
¶¶B R
]
¶¶R S
.
¶¶S T
	descender
¶¶T ]
=
¶¶^ _
elementDescender
¶¶` p
-
¶¶q r
m_lineOffset
¶¶s 
;¶¶ Ä
}
ßß 
else
®® 
{
©© 

m_textInfo
™™ 
.
™™ 
characterInfo
™™ ,
[
™™, -
m_characterCount
™™- =
]
™™= >
.
™™> ?
adjustedAscender
™™? O
=
™™P Q
m_maxLineAscender
™™R c
;
™™c d

m_textInfo
´´ 
.
´´ 
characterInfo
´´ ,
[
´´, -
m_characterCount
´´- =
]
´´= >
.
´´> ?
adjustedDescender
´´? P
=
´´Q R 
m_maxLineDescender
´´S e
;
´´e f
m_ElementAscender
≠≠ %
=
≠≠& '

m_textInfo
≠≠( 2
.
≠≠2 3
characterInfo
≠≠3 @
[
≠≠@ A
m_characterCount
≠≠A Q
]
≠≠Q R
.
≠≠R S
ascender
≠≠S [
=
≠≠\ ]
m_maxLineAscender
≠≠^ o
-
≠≠p q
m_lineOffset
≠≠r ~
;
≠≠~  
m_ElementDescender
ÆÆ &
=
ÆÆ' (

m_textInfo
ÆÆ) 3
.
ÆÆ3 4
characterInfo
ÆÆ4 A
[
ÆÆA B
m_characterCount
ÆÆB R
]
ÆÆR S
.
ÆÆS T
	descender
ÆÆT ]
=
ÆÆ^ _ 
m_maxLineDescender
ÆÆ` r
-
ÆÆs t
m_lineOffsetÆÆu Å
;ÆÆÅ Ç
}
ØØ 
if
≤≤ 
(
≤≤ 
m_lineNumber
≤≤  
==
≤≤! #
$num
≤≤$ %
||
≤≤& (
m_isNewPage
≤≤) 4
)
≤≤4 5
{
≥≥ 
if
¥¥ 
(
¥¥ $
isFirstCharacterOfLine
¥¥ .
||
¥¥/ 1
isWhiteSpace
¥¥2 >
==
¥¥? A
false
¥¥B G
)
¥¥G H
{
µµ 
m_maxTextAscender
∂∂ )
=
∂∂* +
m_maxLineAscender
∂∂, =
;
∂∂= >
m_maxCapHeight
∑∑ &
=
∑∑' (
Mathf
∑∑) .
.
∑∑. /
Max
∑∑/ 2
(
∑∑2 3
m_maxCapHeight
∑∑3 A
,
∑∑A B 
m_currentFontAsset
∑∑C U
.
∑∑U V

m_FaceInfo
∑∑V `
.
∑∑` a
capLine
∑∑a h
*
∑∑i j!
currentElementScale
∑∑k ~
/∑∑ Ä#
smallCapsMultiplier∑∑Å î
)∑∑î ï
;∑∑ï ñ
}
∏∏ 
}
ππ 
if
ºº 
(
ºº 
m_lineOffset
ºº  
==
ºº! #
$num
ºº$ %
)
ºº% &
{
ΩΩ 
if
ææ 
(
ææ $
isFirstCharacterOfLine
ææ .
||
ææ/ 1
isWhiteSpace
ææ2 >
==
ææ? A
false
ææB G
)
ææG H
m_PageAscender
øø &
=
øø' (
m_PageAscender
øø) 7
>
øø8 9
elementAscender
øø: I
?
øøJ K
m_PageAscender
øøL Z
:
øø[ \
elementAscender
øø] l
;
øøl m
}
¿¿ 

m_textInfo
»» 
.
»» 
characterInfo
»» (
[
»»( )
m_characterCount
»») 9
]
»»9 :
.
»»: ;
	isVisible
»»; D
=
»»E F
false
»»G L
;
»»L M
bool
    
isJustifiedOrFlush
   '
=
  ( )
(
  * +!
m_lineJustification
  + >
&
  ? @(
HorizontalAlignmentOptions
  A [
.
  [ \
Flush
  \ a
)
  a b
==
  c e)
HorizontalAlignmentOptions  f Ä
.  Ä Å
Flush  Å Ü
||  á â
(  ä ã#
m_lineJustification  ã û
&  ü †*
HorizontalAlignmentOptions  ° ª
.  ª º
	Justified  º ≈
)  ≈ ∆
==  « …*
HorizontalAlignmentOptions    ‰
.  ‰ Â
	Justified  Â Ó
;  Ó Ô
if
ŒŒ 
(
ŒŒ 
charCode
ŒŒ 
==
ŒŒ 
$num
ŒŒ  !
||
ŒŒ" $
(
ŒŒ% &
isWhiteSpace
ŒŒ& 2
==
ŒŒ3 5
false
ŒŒ6 ;
&&
ŒŒ< >
charCode
ŒŒ? G
!=
ŒŒH J
$num
ŒŒK Q
&&
ŒŒR T
charCode
ŒŒU ]
!=
ŒŒ^ `
$num
ŒŒa e
&&
ŒŒf h
charCode
ŒŒi q
!=
ŒŒr t
$num
ŒŒu y
)
ŒŒy z
||
ŒŒ{ }
(
ŒŒ~ 
charCodeŒŒ á
==ŒŒà ä
$numŒŒã è
&&ŒŒê í#
isSoftHyphenIgnoredŒŒì ¶
==ŒŒß ©
falseŒŒ™ Ø
)ŒŒØ ∞
||ŒŒ± ≥!
m_textElementTypeŒŒ¥ ≈
==ŒŒ∆ »#
TMP_TextElementTypeŒŒ… ‹
.ŒŒ‹ ›
SpriteŒŒ› „
)ŒŒ„ ‰
{
œœ 

m_textInfo
‘‘ 
.
‘‘ 
characterInfo
‘‘ ,
[
‘‘, -
m_characterCount
‘‘- =
]
‘‘= >
.
‘‘> ?
	isVisible
‘‘? H
=
‘‘I J
true
‘‘K O
;
‘‘O P
float
˘˘ 

marginLeft
˘˘ $
=
˘˘% &
m_marginLeft
˘˘' 3
;
˘˘3 4
float
˙˙ 
marginRight
˙˙ %
=
˙˙& '
m_marginRight
˙˙( 5
;
˙˙5 6
if
˝˝ 
(
˝˝ "
isInjectingCharacter
˝˝ ,
)
˝˝, -
{
˛˛ 

marginLeft
ˇˇ "
=
ˇˇ# $

m_textInfo
ˇˇ% /
.
ˇˇ/ 0
lineInfo
ˇˇ0 8
[
ˇˇ8 9
m_lineNumber
ˇˇ9 E
]
ˇˇE F
.
ˇˇF G

marginLeft
ˇˇG Q
;
ˇˇQ R
marginRight
ÄÄ #
=
ÄÄ$ %

m_textInfo
ÄÄ& 0
.
ÄÄ0 1
lineInfo
ÄÄ1 9
[
ÄÄ9 :
m_lineNumber
ÄÄ: F
]
ÄÄF G
.
ÄÄG H
marginRight
ÄÄH S
;
ÄÄS T
}
ÅÅ 
widthOfTextArea
ÉÉ #
=
ÉÉ$ %
m_width
ÉÉ& -
!=
ÉÉ. 0
-
ÉÉ1 2
$num
ÉÉ2 3
?
ÉÉ4 5
Mathf
ÉÉ6 ;
.
ÉÉ; <
Min
ÉÉ< ?
(
ÉÉ? @
marginWidth
ÉÉ@ K
+
ÉÉL M
$num
ÉÉN U
-
ÉÉV W

marginLeft
ÉÉX b
-
ÉÉc d
marginRight
ÉÉe p
,
ÉÉp q
m_width
ÉÉr y
)
ÉÉy z
:
ÉÉ{ |
marginWidthÉÉ} à
+ÉÉâ ä
$numÉÉã í
-ÉÉì î

marginLeftÉÉï ü
-ÉÉ† °
marginRightÉÉ¢ ≠
;ÉÉ≠ Æ
float
ÜÜ 
	textWidth
ÜÜ #
=
ÜÜ$ %
Mathf
ÜÜ& +
.
ÜÜ+ ,
Abs
ÜÜ, /
(
ÜÜ/ 0

m_xAdvance
ÜÜ0 :
)
ÜÜ: ;
+
ÜÜ< =
(
ÜÜ> ?
!
ÜÜ? @
m_isRightToLeft
ÜÜ@ O
?
ÜÜP Q!
currentGlyphMetrics
ÜÜR e
.
ÜÜe f
horizontalAdvance
ÜÜf w
:
ÜÜx y
$num
ÜÜz {
)
ÜÜ{ |
*
ÜÜ} ~
(ÜÜ Ä
$numÜÜÄ Å
-ÜÜÇ É#
m_charWidthAdjDeltaÜÜÑ ó
)ÜÜó ò
*ÜÜô ö
(ÜÜõ ú
charCodeÜÜú §
==ÜÜ• ß
$numÜÜ® ¨
?ÜÜ≠ Æ-
currentElementUnmodifiedScaleÜÜØ Ã
:ÜÜÕ Œ#
currentElementScaleÜÜœ ‚
)ÜÜ‚ „
;ÜÜ„ ‰
float
áá 

textHeight
áá $
=
áá% &
m_maxTextAscender
áá' 8
-
áá9 :
(
áá; < 
m_maxLineDescender
áá< N
-
ááO P
m_lineOffset
ááQ ]
)
áá] ^
+
áá_ `
(
ááa b
m_lineOffset
ááb n
>
ááo p
$num
ááq r
&&
áás u$
m_IsDrivenLineSpacingááv ã
==ááå é
falseááè î
?ááï ñ!
m_maxLineAscenderááó ®
-áá© ™%
m_startOfLineAscenderáá´ ¿
:áá¡ ¬
$numáá√ ƒ
)ááƒ ≈
;áá≈ ∆
int
ââ "
testedCharacterCount
ââ ,
=
ââ- .
m_characterCount
ââ/ ?
;
ââ? @
if
çç 
(
çç 

textHeight
çç "
>
çç# $
marginHeight
çç% 1
+
çç2 3
$num
çç4 ;
)
çç; <
{
éé 
if
êê 
(
êê +
m_firstOverflowCharacterIndex
êê 9
==
êê: <
-
êê= >
$num
êê> ?
)
êê? @+
m_firstOverflowCharacterIndex
ëë 9
=
ëë: ;
m_characterCount
ëë< L
;
ëëL M
if
îî 
(
îî  
m_enableAutoSizing
îî .
)
îî. /
{
ïï 
if
òò 
(
òò   
m_lineSpacingDelta
òò  2
>
òò3 4
m_lineSpacingMax
òò5 E
&&
òòF H
m_lineOffset
òòI U
>
òòV W
$num
òòX Y
&&
òòZ \&
m_AutoSizeIterationCount
òò] u
<
òòv w*
m_AutoSizeMaxIterationCountòòx ì
)òòì î
{
ôô 
float
öö  %
adjustmentDelta
öö& 5
=
öö6 7
(
öö8 9
marginHeight
öö9 E
-
ööF G

textHeight
ööH R
)
ööR S
/
ööT U
m_lineNumber
ööV b
;
ööb c 
m_lineSpacingDelta
úú  2
=
úú3 4
Mathf
úú5 :
.
úú: ;
Max
úú; >
(
úú> ? 
m_lineSpacingDelta
úú? Q
+
úúR S
adjustmentDelta
úúT c
/
úúd e
	baseScale
úúf o
,
úúo p
m_lineSpacingMaxúúq Å
)úúÅ Ç
;úúÇ É
return
üü  &
;
üü& '
}
†† 
if
¶¶ 
(
¶¶  

m_fontSize
¶¶  *
>
¶¶+ ,
m_fontSizeMin
¶¶- :
&&
¶¶; =&
m_AutoSizeIterationCount
¶¶> V
<
¶¶W X)
m_AutoSizeMaxIterationCount
¶¶Y t
)
¶¶t u
{
ßß 
m_maxFontSize
®®  -
=
®®. /

m_fontSize
®®0 :
;
®®: ;
float
™™  %
	sizeDelta
™™& /
=
™™0 1
Mathf
™™2 7
.
™™7 8
Max
™™8 ;
(
™™; <
(
™™< =

m_fontSize
™™= G
-
™™H I
m_minFontSize
™™J W
)
™™W X
/
™™Y Z
$num
™™[ \
,
™™\ ]
$num
™™^ c
)
™™c d
;
™™d e

m_fontSize
´´  *
-=
´´+ -
	sizeDelta
´´. 7
;
´´7 8

m_fontSize
¨¨  *
=
¨¨+ ,
Mathf
¨¨- 2
.
¨¨2 3
Max
¨¨3 6
(
¨¨6 7
(
¨¨7 8
int
¨¨8 ;
)
¨¨; <
(
¨¨< =

m_fontSize
¨¨= G
*
¨¨H I
$num
¨¨J L
+
¨¨M N
$num
¨¨O S
)
¨¨S T
/
¨¨U V
$num
¨¨W Z
,
¨¨Z [
m_fontSizeMin
¨¨\ i
)
¨¨i j
;
¨¨j k
return
ØØ  &
;
ØØ& '
}
∞∞ 
}
≤≤ 
switch
µµ 
(
µµ  
m_overflowMode
µµ  .
)
µµ. /
{
∂∂ 
case
∑∑  
TextOverflowModes
∑∑! 2
.
∑∑2 3
Overflow
∑∑3 ;
:
∑∑; <
case
∏∏  
TextOverflowModes
∏∏! 2
.
∏∏2 3

ScrollRect
∏∏3 =
:
∏∏= >
case
ππ  
TextOverflowModes
ππ! 2
.
ππ2 3
Masking
ππ3 :
:
ππ: ;
break
ªª  %
;
ªª% &
case
ΩΩ  
TextOverflowModes
ΩΩ! 2
.
ΩΩ2 3
Truncate
ΩΩ3 ;
:
ΩΩ; <
i
ææ  !
=
ææ" #&
RestoreWordWrappingState
ææ$ <
(
ææ< =
ref
ææ= @#
m_SavedLastValidState
ææA V
)
ææV W
;
ææW X#
characterToSubstitute
¿¿  5
.
¿¿5 6
index
¿¿6 ;
=
¿¿< ="
testedCharacterCount
¿¿> R
;
¿¿R S#
characterToSubstitute
¡¡  5
.
¡¡5 6
unicode
¡¡6 =
=
¡¡> ?
$num
¡¡@ D
;
¡¡D E
continue
¬¬  (
;
¬¬( )
case
ƒƒ  
TextOverflowModes
ƒƒ! 2
.
ƒƒ2 3
Ellipsis
ƒƒ3 ;
:
ƒƒ; <
if
≈≈  "
(
≈≈# $/
!m_EllipsisInsertionCandidateStack
≈≈$ E
.
≈≈E F
Count
≈≈F K
==
≈≈L N
$num
≈≈O P
)
≈≈P Q
{
∆∆  !
i
««$ %
=
««& '
-
««( )
$num
««) *
;
««* +
m_characterCount
»»$ 4
=
»»5 6
$num
»»7 8
;
»»8 9#
characterToSubstitute
……$ 9
.
……9 :
index
……: ?
=
……@ A
$num
……B C
;
……C D#
characterToSubstitute
  $ 9
.
  9 :
unicode
  : A
=
  B C
$num
  D H
;
  H I$
m_firstCharacterOfLine
ÀÀ$ :
=
ÀÀ; <
$num
ÀÀ= >
;
ÀÀ> ?
continue
ÃÃ$ ,
;
ÃÃ, -
}
ÕÕ  !
var
œœ  #
ellipsisState
œœ$ 1
=
œœ2 3/
!m_EllipsisInsertionCandidateStack
œœ4 U
.
œœU V
Pop
œœV Y
(
œœY Z
)
œœZ [
;
œœ[ \
i
––  !
=
––" #&
RestoreWordWrappingState
––$ <
(
––< =
ref
––= @
ellipsisState
––A N
)
––N O
;
––O P
i
““  !
-=
““" $
$num
““% &
;
““& '
m_characterCount
””  0
-=
””1 3
$num
””4 5
;
””5 6#
characterToSubstitute
‘‘  5
.
‘‘5 6
index
‘‘6 ;
=
‘‘< =
m_characterCount
‘‘> N
;
‘‘N O#
characterToSubstitute
’’  5
.
’’5 6
unicode
’’6 =
=
’’> ?
$num
’’@ F
;
’’F G
restoreCount
◊◊  ,
+=
◊◊- /
$num
◊◊0 1
;
◊◊1 2
continue
ÿÿ  (
;
ÿÿ( )
case
⁄⁄  
TextOverflowModes
⁄⁄! 2
.
⁄⁄2 3
Linked
⁄⁄3 9
:
⁄⁄9 :
i
€€  !
=
€€" #&
RestoreWordWrappingState
€€$ <
(
€€< =
ref
€€= @#
m_SavedLastValidState
€€A V
)
€€V W
;
€€W X
if
››  "
(
››# $#
m_linkedTextComponent
››$ 9
!=
››: <
null
››= A
)
››A B
{
ﬁﬁ  !#
m_linkedTextComponent
ﬂﬂ$ 9
.
ﬂﬂ9 :
text
ﬂﬂ: >
=
ﬂﬂ? @
text
ﬂﬂA E
;
ﬂﬂE F#
m_linkedTextComponent
‡‡$ 9
.
‡‡9 :#
firstVisibleCharacter
‡‡: O
=
‡‡P Q
m_characterCount
‡‡R b
;
‡‡b c#
m_linkedTextComponent
··$ 9
.
··9 :
ForceMeshUpdate
··: I
(
··I J
)
··J K
;
··K L
m_isTextTruncated
„„$ 5
=
„„6 7
true
„„8 <
;
„„< =
}
‰‰  !#
characterToSubstitute
ÁÁ  5
.
ÁÁ5 6
index
ÁÁ6 ;
=
ÁÁ< ="
testedCharacterCount
ÁÁ> R
;
ÁÁR S#
characterToSubstitute
ËË  5
.
ËË5 6
unicode
ËË6 =
=
ËË> ?
$num
ËË@ D
;
ËËD E
continue
ÈÈ  (
;
ÈÈ( )
case
ÎÎ  
TextOverflowModes
ÎÎ! 2
.
ÎÎ2 3
Page
ÎÎ3 7
:
ÎÎ7 8
if
ÌÌ  "
(
ÌÌ# $
i
ÌÌ$ %
<
ÌÌ& '
$num
ÌÌ( )
||
ÌÌ* ,"
testedCharacterCount
ÌÌ- A
==
ÌÌB D
$num
ÌÌE F
)
ÌÌF G
{
ÓÓ  !
i
ÔÔ$ %
=
ÔÔ& '
-
ÔÔ( )
$num
ÔÔ) *
;
ÔÔ* +
m_characterCount
$ 4
=
5 6
$num
7 8
;
8 9#
characterToSubstitute
ÒÒ$ 9
.
ÒÒ9 :
index
ÒÒ: ?
=
ÒÒ@ A
$num
ÒÒB C
;
ÒÒC D#
characterToSubstitute
ÚÚ$ 9
.
ÚÚ9 :
unicode
ÚÚ: A
=
ÚÚB C
$num
ÚÚD H
;
ÚÚH I
continue
ÛÛ$ ,
;
ÛÛ, -
}
ÙÙ  !
else
ıı  $
if
ıı% '
(
ıı( )
m_maxLineAscender
ıı) :
-
ıı; < 
m_maxLineDescender
ıı= O
>
ııP Q
marginHeight
ııR ^
+
ıı_ `
$num
ııa h
)
ııh i
{
ˆˆ  !
i
˘˘$ %
=
˘˘& '&
RestoreWordWrappingState
˘˘( @
(
˘˘@ A
ref
˘˘A D
m_SavedLineState
˘˘E U
)
˘˘U V
;
˘˘V W#
characterToSubstitute
˚˚$ 9
.
˚˚9 :
index
˚˚: ?
=
˚˚@ A"
testedCharacterCount
˚˚B V
;
˚˚V W#
characterToSubstitute
¸¸$ 9
.
¸¸9 :
unicode
¸¸: A
=
¸¸B C
$num
¸¸D H
;
¸¸H I
continue
˝˝$ ,
;
˝˝, -
}
˛˛  !
i
ÅÅ  !
=
ÅÅ" #&
RestoreWordWrappingState
ÅÅ$ <
(
ÅÅ< =
ref
ÅÅ= @
m_SavedLineState
ÅÅA Q
)
ÅÅQ R
;
ÅÅR S
m_isNewPage
ÉÉ  +
=
ÉÉ, -
true
ÉÉ. 2
;
ÉÉ2 3$
m_firstCharacterOfLine
ÑÑ  6
=
ÑÑ7 8
m_characterCount
ÑÑ9 I
;
ÑÑI J
m_maxLineAscender
ÖÖ  1
=
ÖÖ2 3"
k_LargeNegativeFloat
ÖÖ4 H
;
ÖÖH I 
m_maxLineDescender
ÜÜ  2
=
ÜÜ3 4"
k_LargePositiveFloat
ÜÜ5 I
;
ÜÜI J#
m_startOfLineAscender
áá  5
=
áá6 7
$num
áá8 9
;
áá9 :

m_xAdvance
ââ  *
=
ââ+ ,
$num
ââ- .
+
ââ/ 0

tag_Indent
ââ1 ;
;
ââ; <
m_lineOffset
ää  ,
=
ää- .
$num
ää/ 0
;
ää0 1
m_maxTextAscender
ãã  1
=
ãã2 3
$num
ãã4 5
;
ãã5 6
m_PageAscender
åå  .
=
åå/ 0
$num
åå1 2
;
åå2 3
m_lineNumber
çç  ,
+=
çç- /
$num
çç0 1
;
çç1 2
m_pageNumber
éé  ,
+=
éé- /
$num
éé0 1
;
éé1 2
continue
ëë  (
;
ëë( )
}
íí 
}
ìì 
if
ôô 
(
ôô 
	textWidth
ôô !
>
ôô" #
widthOfTextArea
ôô$ 3
*
ôô4 5
(
ôô6 7 
isJustifiedOrFlush
ôô7 I
?
ôôJ K
$num
ôôL Q
:
ôôR S
$num
ôôT X
)
ôôX Y
)
ôôY Z
{
öö 
if
†† 
(
†† "
m_enableWordWrapping
†† 0
&&
††1 3
m_characterCount
††4 D
!=
††E G$
m_firstCharacterOfLine
††H ^
)
††^ _
{
°° 
i
££ 
=
££ &
RestoreWordWrappingState
££  8
(
££8 9
ref
££9 <"
m_SavedWordWrapState
££= Q
)
££Q R
;
££R S
float
¶¶ !
lineOffsetDelta
¶¶" 1
=
¶¶2 3
$num
¶¶4 5
;
¶¶5 6
if
ßß 
(
ßß  
m_lineHeight
ßß  ,
==
ßß- /
TMP_Math
ßß0 8
.
ßß8 9
FLOAT_UNSET
ßß9 D
)
ßßD E
{
®® 
float
©©  %
ascender
©©& .
=
©©/ 0

m_textInfo
©©1 ;
.
©©; <
characterInfo
©©< I
[
©©I J
m_characterCount
©©J Z
]
©©Z [
.
©©[ \
adjustedAscender
©©\ l
;
©©l m
lineOffsetDelta
™™  /
=
™™0 1
(
™™2 3
m_lineOffset
™™3 ?
>
™™@ A
$num
™™B C
&&
™™D F#
m_IsDrivenLineSpacing
™™G \
==
™™] _
false
™™` e
?
™™f g
m_maxLineAscender
™™h y
-
™™z {$
m_startOfLineAscender™™| ë
:™™í ì
$num™™î ï
)™™ï ñ
-™™ó ò"
m_maxLineDescender™™ô ´
+™™¨ ≠
ascender™™Æ ∂
+™™∑ ∏
(™™π ∫
lineGap™™∫ ¡
+™™¬ √"
m_lineSpacingDelta™™ƒ ÷
)™™÷ ◊
*™™ÿ Ÿ
	baseScale™™⁄ „
+™™‰ Â
m_lineSpacing™™Ê Û
*™™Ù ı
currentEmScale™™ˆ Ñ
;™™Ñ Ö
}
´´ 
else
¨¨  
{
≠≠ 
lineOffsetDelta
ÆÆ  /
=
ÆÆ0 1
m_lineHeight
ÆÆ2 >
+
ÆÆ? @
m_lineSpacing
ÆÆA N
*
ÆÆO P
currentEmScale
ÆÆQ _
;
ÆÆ_ `#
m_IsDrivenLineSpacing
ØØ  5
=
ØØ6 7
true
ØØ8 <
;
ØØ< =
}
∞∞ 
float
≥≥ !
newTextHeight
≥≥" /
=
≥≥0 1
m_maxTextAscender
≥≥2 C
+
≥≥D E
lineOffsetDelta
≥≥F U
+
≥≥V W
m_lineOffset
≥≥X d
-
≥≥e f

m_textInfo
≥≥g q
.
≥≥q r
characterInfo
≥≥r 
[≥≥ Ä 
m_characterCount≥≥Ä ê
]≥≥ê ë
.≥≥ë í!
adjustedDescender≥≥í £
;≥≥£ §
if
∑∑ 
(
∑∑  

m_textInfo
∑∑  *
.
∑∑* +
characterInfo
∑∑+ 8
[
∑∑8 9
m_characterCount
∑∑9 I
-
∑∑J K
$num
∑∑L M
]
∑∑M N
.
∑∑N O
	character
∑∑O X
==
∑∑Y [
$num
∑∑\ `
&&
∑∑a c!
isSoftHyphenIgnored
∑∑d w
==
∑∑x z
false∑∑{ Ä
)∑∑Ä Å
{
∏∏ 
if
∫∫  "
(
∫∫# $
m_overflowMode
∫∫$ 2
==
∫∫3 5
TextOverflowModes
∫∫6 G
.
∫∫G H
Overflow
∫∫H P
||
∫∫Q S
newTextHeight
∫∫T a
<
∫∫b c
marginHeight
∫∫d p
+
∫∫q r
$num
∫∫s z
)
∫∫z {
{
ªª  !#
characterToSubstitute
ºº$ 9
.
ºº9 :
index
ºº: ?
=
ºº@ A
m_characterCount
ººB R
-
ººS T
$num
ººU V
;
ººV W#
characterToSubstitute
ΩΩ$ 9
.
ΩΩ9 :
unicode
ΩΩ: A
=
ΩΩB C
$num
ΩΩD H
;
ΩΩH I
i
øø$ %
-=
øø& (
$num
øø) *
;
øø* +
m_characterCount
¿¿$ 4
-=
¿¿5 7
$num
¿¿8 9
;
¿¿9 :
continue
¡¡$ ,
;
¡¡, -
}
¬¬  !
}
√√ !
isSoftHyphenIgnored
≈≈ /
=
≈≈0 1
false
≈≈2 7
;
≈≈7 8
if
»» 
(
»»  

m_textInfo
»»  *
.
»»* +
characterInfo
»»+ 8
[
»»8 9
m_characterCount
»»9 I
]
»»I J
.
»»J K
	character
»»K T
==
»»U W
$num
»»X \
)
»»\ ]
{
…… !
isSoftHyphenIgnored
    3
=
  4 5
true
  6 :
;
  : ;
continue
ÀÀ  (
;
ÀÀ( )
}
ÃÃ 
if
–– 
(
––   
m_enableAutoSizing
––  2
&&
––3 5
isFirstWordOfLine
––6 G
)
––G H
{
—— 
if
‘‘  "
(
‘‘# $!
m_charWidthAdjDelta
‘‘$ 7
<
‘‘8 9
m_charWidthMaxAdj
‘‘: K
/
‘‘L M
$num
‘‘N Q
&&
‘‘R T&
m_AutoSizeIterationCount
‘‘U m
<
‘‘n o*
m_AutoSizeMaxIterationCount‘‘p ã
)‘‘ã å
{
’’  !
float
÷÷$ )
adjustedTextWidth
÷÷* ;
=
÷÷< =
	textWidth
÷÷> G
;
÷÷G H
if
ŸŸ$ &
(
ŸŸ' (!
m_charWidthAdjDelta
ŸŸ( ;
>
ŸŸ< =
$num
ŸŸ> ?
)
ŸŸ? @
adjustedTextWidth
⁄⁄( 9
/=
⁄⁄: <
$num
⁄⁄= ?
-
⁄⁄@ A!
m_charWidthAdjDelta
⁄⁄B U
;
⁄⁄U V
float
‹‹$ )
adjustmentDelta
‹‹* 9
=
‹‹: ;
	textWidth
‹‹< E
-
‹‹F G
(
‹‹H I
widthOfTextArea
‹‹I X
-
‹‹Y Z
$num
‹‹[ b
)
‹‹b c
*
‹‹d e
(
‹‹f g 
isJustifiedOrFlush
‹‹g y
?
‹‹z {
$num‹‹| Å
:‹‹Ç É
$num‹‹Ñ à
)‹‹à â
;‹‹â ä!
m_charWidthAdjDelta
››$ 7
+=
››8 :
adjustmentDelta
››; J
/
››K L
adjustedTextWidth
››M ^
;
››^ _!
m_charWidthAdjDelta
ﬁﬁ$ 7
=
ﬁﬁ8 9
Mathf
ﬁﬁ: ?
.
ﬁﬁ? @
Min
ﬁﬁ@ C
(
ﬁﬁC D!
m_charWidthAdjDelta
ﬁﬁD W
,
ﬁﬁW X
m_charWidthMaxAdj
ﬁﬁY j
/
ﬁﬁk l
$num
ﬁﬁm p
)
ﬁﬁp q
;
ﬁﬁq r
return
··$ *
;
··* +
}
‚‚  !
if
ÁÁ  "
(
ÁÁ# $

m_fontSize
ÁÁ$ .
>
ÁÁ/ 0
m_fontSizeMin
ÁÁ1 >
&&
ÁÁ? A&
m_AutoSizeIterationCount
ÁÁB Z
<
ÁÁ[ \)
m_AutoSizeMaxIterationCount
ÁÁ] x
)
ÁÁx y
{
ËË  !
m_maxFontSize
ÈÈ$ 1
=
ÈÈ2 3

m_fontSize
ÈÈ4 >
;
ÈÈ> ?
float
ÎÎ$ )
	sizeDelta
ÎÎ* 3
=
ÎÎ4 5
Mathf
ÎÎ6 ;
.
ÎÎ; <
Max
ÎÎ< ?
(
ÎÎ? @
(
ÎÎ@ A

m_fontSize
ÎÎA K
-
ÎÎL M
m_minFontSize
ÎÎN [
)
ÎÎ[ \
/
ÎÎ] ^
$num
ÎÎ_ `
,
ÎÎ` a
$num
ÎÎb g
)
ÎÎg h
;
ÎÎh i

m_fontSize
ÏÏ$ .
-=
ÏÏ/ 1
	sizeDelta
ÏÏ2 ;
;
ÏÏ; <

m_fontSize
ÌÌ$ .
=
ÌÌ/ 0
Mathf
ÌÌ1 6
.
ÌÌ6 7
Max
ÌÌ7 :
(
ÌÌ: ;
(
ÌÌ; <
int
ÌÌ< ?
)
ÌÌ? @
(
ÌÌ@ A

m_fontSize
ÌÌA K
*
ÌÌL M
$num
ÌÌN P
+
ÌÌQ R
$num
ÌÌS W
)
ÌÌW X
/
ÌÌY Z
$num
ÌÌ[ ^
,
ÌÌ^ _
m_fontSizeMin
ÌÌ` m
)
ÌÌm n
;
ÌÌn o
return
$ *
;
* +
}
ÒÒ  !
}
ÛÛ 
int
˜˜ (
savedSoftLineBreakingSpace
˜˜  :
=
˜˜; <'
m_SavedSoftLineBreakState
˜˜= V
.
˜˜V W 
previous_WordBreak
˜˜W i
;
˜˜i j
if
¯¯ 
(
¯¯  
isFirstWordOfLine
¯¯  1
&&
¯¯2 4(
savedSoftLineBreakingSpace
¯¯5 O
!=
¯¯P R
-
¯¯S T
$num
¯¯T U
)
¯¯U V
{
˘˘ 
if
˙˙  "
(
˙˙# $(
savedSoftLineBreakingSpace
˙˙$ >
!=
˙˙? A
lastSoftLineBreak
˙˙B S
)
˙˙S T
{
˚˚  !
i
¸¸$ %
=
¸¸& '&
RestoreWordWrappingState
¸¸( @
(
¸¸@ A
ref
¸¸A D'
m_SavedSoftLineBreakState
¸¸E ^
)
¸¸^ _
;
¸¸_ `
lastSoftLineBreak
˝˝$ 5
=
˝˝6 7(
savedSoftLineBreakingSpace
˝˝8 R
;
˝˝R S
if
ÄÄ$ &
(
ÄÄ' (

m_textInfo
ÄÄ( 2
.
ÄÄ2 3
characterInfo
ÄÄ3 @
[
ÄÄ@ A
m_characterCount
ÄÄA Q
-
ÄÄR S
$num
ÄÄT U
]
ÄÄU V
.
ÄÄV W
	character
ÄÄW `
==
ÄÄa c
$num
ÄÄd h
)
ÄÄh i
{
ÅÅ$ %#
characterToSubstitute
ÇÇ( =
.
ÇÇ= >
index
ÇÇ> C
=
ÇÇD E
m_characterCount
ÇÇF V
-
ÇÇW X
$num
ÇÇY Z
;
ÇÇZ [#
characterToSubstitute
ÉÉ( =
.
ÉÉ= >
unicode
ÉÉ> E
=
ÉÉF G
$num
ÉÉH L
;
ÉÉL M
i
ÖÖ( )
-=
ÖÖ* ,
$num
ÖÖ- .
;
ÖÖ. /
m_characterCount
ÜÜ( 8
-=
ÜÜ9 ;
$num
ÜÜ< =
;
ÜÜ= >
continue
áá( 0
;
áá0 1
}
àà$ %
}
ââ  !
}
ää 
if
çç 
(
çç  
newTextHeight
çç  -
>
çç. /
marginHeight
çç0 <
+
çç= >
$num
çç? F
)
ççF G
{
éé 
if
êê  "
(
êê# $+
m_firstOverflowCharacterIndex
êê$ A
==
êêB D
-
êêE F
$num
êêF G
)
êêG H+
m_firstOverflowCharacterIndex
ëë$ A
=
ëëB C
m_characterCount
ëëD T
;
ëëT U
if
îî  "
(
îî# $ 
m_enableAutoSizing
îî$ 6
)
îî6 7
{
ïï  !
if
òò$ &
(
òò' ( 
m_lineSpacingDelta
òò( :
>
òò; <
m_lineSpacingMax
òò= M
&&
òòN P&
m_AutoSizeIterationCount
òòQ i
<
òòj k*
m_AutoSizeMaxIterationCountòòl á
)òòá à
{
ôô$ %
float
öö( -
adjustmentDelta
öö. =
=
öö> ?
(
öö@ A
marginHeight
ööA M
-
ööN O
newTextHeight
ööP ]
)
öö] ^
/
öö_ `
(
ööa b
m_lineNumber
ööb n
+
ööo p
$num
ööq r
)
öör s
;
öös t 
m_lineSpacingDelta
úú( :
=
úú; <
Mathf
úú= B
.
úúB C
Max
úúC F
(
úúF G 
m_lineSpacingDelta
úúG Y
+
úúZ [
adjustmentDelta
úú\ k
/
úúl m
	baseScale
úún w
,
úúw x
m_lineSpacingMaxúúy â
)úúâ ä
;úúä ã
return
üü( .
;
üü. /
}
††$ %
if
••$ &
(
••' (!
m_charWidthAdjDelta
••( ;
<
••< =
m_charWidthMaxAdj
••> O
/
••P Q
$num
••R U
&&
••V X&
m_AutoSizeIterationCount
••Y q
<
••r s*
m_AutoSizeMaxIterationCount••t è
)••è ê
{
¶¶$ %
float
ßß( -
adjustedTextWidth
ßß. ?
=
ßß@ A
	textWidth
ßßB K
;
ßßK L
if
™™( *
(
™™+ ,!
m_charWidthAdjDelta
™™, ?
>
™™@ A
$num
™™B C
)
™™C D
adjustedTextWidth
´´, =
/=
´´> @
$num
´´A C
-
´´D E!
m_charWidthAdjDelta
´´F Y
;
´´Y Z
float
≠≠( -
adjustmentDelta
≠≠. =
=
≠≠> ?
	textWidth
≠≠@ I
-
≠≠J K
(
≠≠L M
widthOfTextArea
≠≠M \
-
≠≠] ^
$num
≠≠_ f
)
≠≠f g
*
≠≠h i
(
≠≠j k 
isJustifiedOrFlush
≠≠k }
?
≠≠~ 
$num≠≠Ä Ö
:≠≠Ü á
$num≠≠à å
)≠≠å ç
;≠≠ç é!
m_charWidthAdjDelta
ÆÆ( ;
+=
ÆÆ< >
adjustmentDelta
ÆÆ? N
/
ÆÆO P
adjustedTextWidth
ÆÆQ b
;
ÆÆb c!
m_charWidthAdjDelta
ØØ( ;
=
ØØ< =
Mathf
ØØ> C
.
ØØC D
Min
ØØD G
(
ØØG H!
m_charWidthAdjDelta
ØØH [
,
ØØ[ \
m_charWidthMaxAdj
ØØ] n
/
ØØo p
$num
ØØq t
)
ØØt u
;
ØØu v
return
≤≤( .
;
≤≤. /
}
≥≥$ %
if
∏∏$ &
(
∏∏' (

m_fontSize
∏∏( 2
>
∏∏3 4
m_fontSizeMin
∏∏5 B
&&
∏∏C E&
m_AutoSizeIterationCount
∏∏F ^
<
∏∏_ `)
m_AutoSizeMaxIterationCount
∏∏a |
)
∏∏| }
{
ππ$ %
m_maxFontSize
∫∫( 5
=
∫∫6 7

m_fontSize
∫∫8 B
;
∫∫B C
float
ºº( -
	sizeDelta
ºº. 7
=
ºº8 9
Mathf
ºº: ?
.
ºº? @
Max
ºº@ C
(
ººC D
(
ººD E

m_fontSize
ººE O
-
ººP Q
m_minFontSize
ººR _
)
ºº_ `
/
ººa b
$num
ººc d
,
ººd e
$num
ººf k
)
ººk l
;
ººl m

m_fontSize
ΩΩ( 2
-=
ΩΩ3 5
	sizeDelta
ΩΩ6 ?
;
ΩΩ? @

m_fontSize
ææ( 2
=
ææ3 4
Mathf
ææ5 :
.
ææ: ;
Max
ææ; >
(
ææ> ?
(
ææ? @
int
ææ@ C
)
ææC D
(
ææD E

m_fontSize
ææE O
*
ææP Q
$num
ææR T
+
ææU V
$num
ææW [
)
ææ[ \
/
ææ] ^
$num
ææ_ b
,
ææb c
m_fontSizeMin
ææd q
)
ææq r
;
æær s
return
¡¡( .
;
¡¡. /
}
¬¬$ %
}
ƒƒ  !
switch
««  &
(
««' (
m_overflowMode
««( 6
)
««6 7
{
»»  !
case
……$ (
TextOverflowModes
……) :
.
……: ;
Overflow
……; C
:
……C D
case
  $ (
TextOverflowModes
  ) :
.
  : ;

ScrollRect
  ; E
:
  E F
case
ÀÀ$ (
TextOverflowModes
ÀÀ) :
.
ÀÀ: ;
Masking
ÀÀ; B
:
ÀÀB C
InsertNewLine
––( 5
(
––5 6
i
––6 7
,
––7 8
	baseScale
––9 B
,
––B C!
currentElementScale
––D W
,
––W X
currentEmScale
––Y g
,
––g h1
"m_GlyphHorizontalAdvanceAdjustment––i ã
,––ã å%
boldSpacingAdjustment––ç ¢
,––¢ £*
characterSpacingAdjustment––§ æ
,––æ ø
widthOfTextArea––¿ œ
,––œ –
lineGap––— ÿ
,––ÿ Ÿ
ref––⁄ ›(
isMaxVisibleDescenderSet––ﬁ ˆ
,––ˆ ˜
ref––¯ ˚#
maxVisibleDescender––¸ è
)––è ê
;––ê ë
isStartOfNewLine
——( 8
=
——9 :
true
——; ?
;
——? @
isFirstWordOfLine
““( 9
=
““: ;
true
““< @
;
““@ A
continue
ﬂﬂ( 0
;
ﬂﬂ0 1
case
··$ (
TextOverflowModes
··) :
.
··: ;
Truncate
··; C
:
··C D
i
‚‚( )
=
‚‚* +&
RestoreWordWrappingState
‚‚, D
(
‚‚D E
ref
‚‚E H#
m_SavedLastValidState
‚‚I ^
)
‚‚^ _
;
‚‚_ `#
characterToSubstitute
‰‰( =
.
‰‰= >
index
‰‰> C
=
‰‰D E"
testedCharacterCount
‰‰F Z
;
‰‰Z [#
characterToSubstitute
ÂÂ( =
.
ÂÂ= >
unicode
ÂÂ> E
=
ÂÂF G
$num
ÂÂH L
;
ÂÂL M
continue
ÊÊ( 0
;
ÊÊ0 1
case
ËË$ (
TextOverflowModes
ËË) :
.
ËË: ;
Ellipsis
ËË; C
:
ËËC D
if
ÈÈ( *
(
ÈÈ+ ,/
!m_EllipsisInsertionCandidateStack
ÈÈ, M
.
ÈÈM N
Count
ÈÈN S
==
ÈÈT V
$num
ÈÈW X
)
ÈÈX Y
{
ÍÍ( )
i
ÎÎ, -
=
ÎÎ. /
-
ÎÎ0 1
$num
ÎÎ1 2
;
ÎÎ2 3
m_characterCount
ÏÏ, <
=
ÏÏ= >
$num
ÏÏ? @
;
ÏÏ@ A#
characterToSubstitute
ÌÌ, A
.
ÌÌA B
index
ÌÌB G
=
ÌÌH I
$num
ÌÌJ K
;
ÌÌK L#
characterToSubstitute
ÓÓ, A
.
ÓÓA B
unicode
ÓÓB I
=
ÓÓJ K
$num
ÓÓL P
;
ÓÓP Q$
m_firstCharacterOfLine
ÔÔ, B
=
ÔÔC D
$num
ÔÔE F
;
ÔÔF G
continue
, 4
;
4 5
}
ÒÒ( )
var
ÛÛ( +
ellipsisState
ÛÛ, 9
=
ÛÛ: ;/
!m_EllipsisInsertionCandidateStack
ÛÛ< ]
.
ÛÛ] ^
Pop
ÛÛ^ a
(
ÛÛa b
)
ÛÛb c
;
ÛÛc d
i
ÙÙ( )
=
ÙÙ* +&
RestoreWordWrappingState
ÙÙ, D
(
ÙÙD E
ref
ÙÙE H
ellipsisState
ÙÙI V
)
ÙÙV W
;
ÙÙW X
i
ˆˆ( )
-=
ˆˆ* ,
$num
ˆˆ- .
;
ˆˆ. /
m_characterCount
˜˜( 8
-=
˜˜9 ;
$num
˜˜< =
;
˜˜= >#
characterToSubstitute
¯¯( =
.
¯¯= >
index
¯¯> C
=
¯¯D E
m_characterCount
¯¯F V
;
¯¯V W#
characterToSubstitute
˘˘( =
.
˘˘= >
unicode
˘˘> E
=
˘˘F G
$num
˘˘H N
;
˘˘N O
restoreCount
˚˚( 4
+=
˚˚5 7
$num
˚˚8 9
;
˚˚9 :
continue
¸¸( 0
;
¸¸0 1
case
˛˛$ (
TextOverflowModes
˛˛) :
.
˛˛: ;
Linked
˛˛; A
:
˛˛A B
if
ˇˇ( *
(
ˇˇ+ ,#
m_linkedTextComponent
ˇˇ, A
!=
ˇˇB D
null
ˇˇE I
)
ˇˇI J
{
ÄÄ( )#
m_linkedTextComponent
ÅÅ, A
.
ÅÅA B
text
ÅÅB F
=
ÅÅG H
text
ÅÅI M
;
ÅÅM N#
m_linkedTextComponent
ÇÇ, A
.
ÇÇA B#
firstVisibleCharacter
ÇÇB W
=
ÇÇX Y
m_characterCount
ÇÇZ j
;
ÇÇj k#
m_linkedTextComponent
ÉÉ, A
.
ÉÉA B
ForceMeshUpdate
ÉÉB Q
(
ÉÉQ R
)
ÉÉR S
;
ÉÉS T
m_isTextTruncated
ÖÖ, =
=
ÖÖ> ?
true
ÖÖ@ D
;
ÖÖD E
}
ÜÜ( )#
characterToSubstitute
ââ( =
.
ââ= >
index
ââ> C
=
ââD E
m_characterCount
ââF V
;
ââV W#
characterToSubstitute
ää( =
.
ää= >
unicode
ää> E
=
ääF G
$num
ääH L
;
ääL M
continue
ãã( 0
;
ãã0 1
case
çç$ (
TextOverflowModes
çç) :
.
çç: ;
Page
çç; ?
:
çç? @
m_isNewPage
èè( 3
=
èè4 5
true
èè6 :
;
èè: ;
InsertNewLine
ëë( 5
(
ëë5 6
i
ëë6 7
,
ëë7 8
	baseScale
ëë9 B
,
ëëB C!
currentElementScale
ëëD W
,
ëëW X
currentEmScale
ëëY g
,
ëëg h1
"m_GlyphHorizontalAdvanceAdjustmentëëi ã
,ëëã å%
boldSpacingAdjustmentëëç ¢
,ëë¢ £*
characterSpacingAdjustmentëë§ æ
,ëëæ ø
widthOfTextAreaëë¿ œ
,ëëœ –
lineGapëë— ÿ
,ëëÿ Ÿ
refëë⁄ ›(
isMaxVisibleDescenderSetëëﬁ ˆ
,ëëˆ ˜
refëë¯ ˚#
maxVisibleDescenderëë¸ è
)ëëè ê
;ëëê ë#
m_startOfLineAscender
ìì( =
=
ìì> ?
$num
ìì@ A
;
ììA B
m_lineOffset
îî( 4
=
îî5 6
$num
îî7 8
;
îî8 9
m_maxTextAscender
ïï( 9
=
ïï: ;
$num
ïï< =
;
ïï= >
m_PageAscender
ññ( 6
=
ññ7 8
$num
ññ9 :
;
ññ: ;
m_pageNumber
óó( 4
+=
óó5 7
$num
óó8 9
;
óó9 :
isStartOfNewLine
ôô( 8
=
ôô9 :
true
ôô; ?
;
ôô? @
isFirstWordOfLine
öö( 9
=
öö: ;
true
öö< @
;
öö@ A
continue
õõ( 0
;
õõ0 1
}
úú  !
}
ùù 
else
ûû  
{
üü 
InsertNewLine
ΩΩ  -
(
ΩΩ- .
i
ΩΩ. /
,
ΩΩ/ 0
	baseScale
ΩΩ1 :
,
ΩΩ: ;!
currentElementScale
ΩΩ< O
,
ΩΩO P
currentEmScale
ΩΩQ _
,
ΩΩ_ `1
"m_GlyphHorizontalAdvanceAdjustmentΩΩa É
,ΩΩÉ Ñ%
boldSpacingAdjustmentΩΩÖ ö
,ΩΩö õ*
characterSpacingAdjustmentΩΩú ∂
,ΩΩ∂ ∑
widthOfTextAreaΩΩ∏ «
,ΩΩ« »
lineGapΩΩ… –
,ΩΩ– —
refΩΩ“ ’(
isMaxVisibleDescenderSetΩΩ÷ Ó
,ΩΩÓ Ô
refΩΩ Û#
maxVisibleDescenderΩΩÙ á
)ΩΩá à
;ΩΩà â
isStartOfNewLine
ææ  0
=
ææ1 2
true
ææ3 7
;
ææ7 8
isFirstWordOfLine
øø  1
=
øø2 3
true
øø4 8
;
øø8 9
continue
ÀÀ  (
;
ÀÀ( )
}
ÃÃ 
}
ÕÕ 
else
ŒŒ 
{
œœ 
if
–– 
(
––   
m_enableAutoSizing
––  2
&&
––3 5&
m_AutoSizeIterationCount
––6 N
<
––O P)
m_AutoSizeMaxIterationCount
––Q l
)
––l m
{
—— 
if
‘‘  "
(
‘‘# $!
m_charWidthAdjDelta
‘‘$ 7
<
‘‘8 9
m_charWidthMaxAdj
‘‘: K
/
‘‘L M
$num
‘‘N Q
)
‘‘Q R
{
’’  !
float
÷÷$ )
adjustedTextWidth
÷÷* ;
=
÷÷< =
	textWidth
÷÷> G
;
÷÷G H
if
ŸŸ$ &
(
ŸŸ' (!
m_charWidthAdjDelta
ŸŸ( ;
>
ŸŸ< =
$num
ŸŸ> ?
)
ŸŸ? @
adjustedTextWidth
⁄⁄( 9
/=
⁄⁄: <
$num
⁄⁄= ?
-
⁄⁄@ A!
m_charWidthAdjDelta
⁄⁄B U
;
⁄⁄U V
float
‹‹$ )
adjustmentDelta
‹‹* 9
=
‹‹: ;
	textWidth
‹‹< E
-
‹‹F G
(
‹‹H I
widthOfTextArea
‹‹I X
-
‹‹Y Z
$num
‹‹[ b
)
‹‹b c
*
‹‹d e
(
‹‹f g 
isJustifiedOrFlush
‹‹g y
?
‹‹z {
$num‹‹| Å
:‹‹Ç É
$num‹‹Ñ à
)‹‹à â
;‹‹â ä!
m_charWidthAdjDelta
››$ 7
+=
››8 :
adjustmentDelta
››; J
/
››K L
adjustedTextWidth
››M ^
;
››^ _!
m_charWidthAdjDelta
ﬁﬁ$ 7
=
ﬁﬁ8 9
Mathf
ﬁﬁ: ?
.
ﬁﬁ? @
Min
ﬁﬁ@ C
(
ﬁﬁC D!
m_charWidthAdjDelta
ﬁﬁD W
,
ﬁﬁW X
m_charWidthMaxAdj
ﬁﬁY j
/
ﬁﬁk l
$num
ﬁﬁm p
)
ﬁﬁp q
;
ﬁﬁq r
return
··$ *
;
··* +
}
‚‚  !
if
ÁÁ  "
(
ÁÁ# $

m_fontSize
ÁÁ$ .
>
ÁÁ/ 0
m_fontSizeMin
ÁÁ1 >
)
ÁÁ> ?
{
ËË  !
m_maxFontSize
ÌÌ$ 1
=
ÌÌ2 3

m_fontSize
ÌÌ4 >
;
ÌÌ> ?
float
ÔÔ$ )
	sizeDelta
ÔÔ* 3
=
ÔÔ4 5
Mathf
ÔÔ6 ;
.
ÔÔ; <
Max
ÔÔ< ?
(
ÔÔ? @
(
ÔÔ@ A

m_fontSize
ÔÔA K
-
ÔÔL M
m_minFontSize
ÔÔN [
)
ÔÔ[ \
/
ÔÔ] ^
$num
ÔÔ_ `
,
ÔÔ` a
$num
ÔÔb g
)
ÔÔg h
;
ÔÔh i

m_fontSize
$ .
-=
/ 1
	sizeDelta
2 ;
;
; <

m_fontSize
ÒÒ$ .
=
ÒÒ/ 0
Mathf
ÒÒ1 6
.
ÒÒ6 7
Max
ÒÒ7 :
(
ÒÒ: ;
(
ÒÒ; <
int
ÒÒ< ?
)
ÒÒ? @
(
ÒÒ@ A

m_fontSize
ÒÒA K
*
ÒÒL M
$num
ÒÒN P
+
ÒÒQ R
$num
ÒÒS W
)
ÒÒW X
/
ÒÒY Z
$num
ÒÒ[ ^
,
ÒÒ^ _
m_fontSizeMin
ÒÒ` m
)
ÒÒm n
;
ÒÒn o
return
ÙÙ$ *
;
ÙÙ* +
}
ıı  !
}
¯¯ 
switch
˚˚ "
(
˚˚# $
m_overflowMode
˚˚$ 2
)
˚˚2 3
{
¸¸ 
case
˝˝  $
TextOverflowModes
˝˝% 6
.
˝˝6 7
Overflow
˝˝7 ?
:
˝˝? @
case
˛˛  $
TextOverflowModes
˛˛% 6
.
˛˛6 7

ScrollRect
˛˛7 A
:
˛˛A B
case
ˇˇ  $
TextOverflowModes
ˇˇ% 6
.
ˇˇ6 7
Masking
ˇˇ7 >
:
ˇˇ> ?
break
ÅÅ$ )
;
ÅÅ) *
case
ÉÉ  $
TextOverflowModes
ÉÉ% 6
.
ÉÉ6 7
Truncate
ÉÉ7 ?
:
ÉÉ? @
i
ÑÑ$ %
=
ÑÑ& '&
RestoreWordWrappingState
ÑÑ( @
(
ÑÑ@ A
ref
ÑÑA D"
m_SavedWordWrapState
ÑÑE Y
)
ÑÑY Z
;
ÑÑZ [#
characterToSubstitute
ÜÜ$ 9
.
ÜÜ9 :
index
ÜÜ: ?
=
ÜÜ@ A"
testedCharacterCount
ÜÜB V
;
ÜÜV W#
characterToSubstitute
áá$ 9
.
áá9 :
unicode
áá: A
=
ááB C
$num
ááD H
;
ááH I
continue
àà$ ,
;
àà, -
case
ää  $
TextOverflowModes
ää% 6
.
ää6 7
Ellipsis
ää7 ?
:
ää? @
if
ãã$ &
(
ãã' (/
!m_EllipsisInsertionCandidateStack
ãã( I
.
ããI J
Count
ããJ O
==
ããP R
$num
ããS T
)
ããT U
{
åå$ %
i
çç( )
=
çç* +
-
çç, -
$num
çç- .
;
çç. /
m_characterCount
éé( 8
=
éé9 :
$num
éé; <
;
éé< =#
characterToSubstitute
èè( =
.
èè= >
index
èè> C
=
èèD E
$num
èèF G
;
èèG H#
characterToSubstitute
êê( =
.
êê= >
unicode
êê> E
=
êêF G
$num
êêH L
;
êêL M$
m_firstCharacterOfLine
ëë( >
=
ëë? @
$num
ëëA B
;
ëëB C
continue
íí( 0
;
íí0 1
}
ìì$ %
var
ïï$ '
ellipsisState
ïï( 5
=
ïï6 7/
!m_EllipsisInsertionCandidateStack
ïï8 Y
.
ïïY Z
Pop
ïïZ ]
(
ïï] ^
)
ïï^ _
;
ïï_ `
i
ññ$ %
=
ññ& '&
RestoreWordWrappingState
ññ( @
(
ññ@ A
ref
ññA D
ellipsisState
ññE R
)
ññR S
;
ññS T
i
òò$ %
-=
òò& (
$num
òò) *
;
òò* +
m_characterCount
ôô$ 4
-=
ôô5 7
$num
ôô8 9
;
ôô9 :#
characterToSubstitute
öö$ 9
.
öö9 :
index
öö: ?
=
öö@ A
m_characterCount
ööB R
;
ööR S#
characterToSubstitute
õõ$ 9
.
õõ9 :
unicode
õõ: A
=
õõB C
$num
õõD J
;
õõJ K
restoreCount
ùù$ 0
+=
ùù1 3
$num
ùù4 5
;
ùù5 6
continue
ûû$ ,
;
ûû, -
case
††  $
TextOverflowModes
††% 6
.
††6 7
Linked
††7 =
:
††= >
i
°°$ %
=
°°& '&
RestoreWordWrappingState
°°( @
(
°°@ A
ref
°°A D"
m_SavedWordWrapState
°°E Y
)
°°Y Z
;
°°Z [
if
££$ &
(
££' (#
m_linkedTextComponent
££( =
!=
££> @
null
££A E
)
££E F
{
§§$ %#
m_linkedTextComponent
••( =
.
••= >
text
••> B
=
••C D
text
••E I
;
••I J#
m_linkedTextComponent
¶¶( =
.
¶¶= >#
firstVisibleCharacter
¶¶> S
=
¶¶T U
m_characterCount
¶¶V f
;
¶¶f g#
m_linkedTextComponent
ßß( =
.
ßß= >
ForceMeshUpdate
ßß> M
(
ßßM N
)
ßßN O
;
ßßO P
m_isTextTruncated
©©( 9
=
©©: ;
true
©©< @
;
©©@ A
}
™™$ %#
characterToSubstitute
≠≠$ 9
.
≠≠9 :
index
≠≠: ?
=
≠≠@ A
m_characterCount
≠≠B R
;
≠≠R S#
characterToSubstitute
ÆÆ$ 9
.
ÆÆ9 :
unicode
ÆÆ: A
=
ÆÆB C
$num
ÆÆD H
;
ÆÆH I
continue
ØØ$ ,
;
ØØ, -
}
∞∞ 
}
≤≤ 
}
∏∏ 
if
ΩΩ 
(
ΩΩ 
charCode
ΩΩ  
==
ΩΩ! #
$num
ΩΩ$ %
)
ΩΩ% &
{
ææ 

m_textInfo
øø "
.
øø" #
characterInfo
øø# 0
[
øø0 1
m_characterCount
øø1 A
]
øøA B
.
øøB C
	isVisible
øøC L
=
øøM N
false
øøO T
;
øøT U*
m_lastVisibleCharacterOfLine
¿¿ 4
=
¿¿5 6
m_characterCount
¿¿7 G
;
¿¿G H

m_textInfo
¡¡ "
.
¡¡" #
lineInfo
¡¡# +
[
¡¡+ ,
m_lineNumber
¡¡, 8
]
¡¡8 9
.
¡¡9 :

spaceCount
¡¡: D
+=
¡¡E G
$num
¡¡H I
;
¡¡I J

m_textInfo
¬¬ "
.
¬¬" #

spaceCount
¬¬# -
+=
¬¬. 0
$num
¬¬1 2
;
¬¬2 3
}
√√ 
else
ƒƒ 
if
ƒƒ 
(
ƒƒ 
charCode
ƒƒ %
==
ƒƒ& (
$num
ƒƒ) -
)
ƒƒ- .
{
≈≈ 

m_textInfo
∆∆ "
.
∆∆" #
characterInfo
∆∆# 0
[
∆∆0 1
m_characterCount
∆∆1 A
]
∆∆A B
.
∆∆B C
	isVisible
∆∆C L
=
∆∆M N
false
∆∆O T
;
∆∆T U
}
«« 
else
»» 
{
…… 
if
ÀÀ 
(
ÀÀ "
m_overrideHtmlColors
ÀÀ 0
)
ÀÀ0 1
vertexColor
ÃÃ '
=
ÃÃ( )
m_fontColor32
ÃÃ* 7
;
ÃÃ7 8
else
ÕÕ 
vertexColor
ŒŒ '
=
ŒŒ( )
m_htmlColor
ŒŒ* 5
;
ŒŒ5 6
if
‘‘ 
(
‘‘ 
m_textElementType
‘‘ -
==
‘‘. 0!
TMP_TextElementType
‘‘1 D
.
‘‘D E
	Character
‘‘E N
)
‘‘N O
{
’’ !
SaveGlyphVertexInfo
◊◊ /
(
◊◊/ 0
padding
◊◊0 7
,
◊◊7 8
style_padding
◊◊9 F
,
◊◊F G
vertexColor
◊◊H S
)
◊◊S T
;
◊◊T U
}
ÿÿ 
else
ŸŸ 
if
ŸŸ 
(
ŸŸ  !
m_textElementType
ŸŸ! 2
==
ŸŸ3 5!
TMP_TextElementType
ŸŸ6 I
.
ŸŸI J
Sprite
ŸŸJ P
)
ŸŸP Q
{
⁄⁄ "
SaveSpriteVertexInfo
€€ 0
(
€€0 1
vertexColor
€€1 <
)
€€< =
;
€€= >
}
‹‹ 
if
·· 
(
·· 
isStartOfNewLine
·· ,
)
··, -
{
‚‚ 
isStartOfNewLine
„„ ,
=
„„- .
false
„„/ 4
;
„„4 5+
m_firstVisibleCharacterOfLine
‰‰ 9
=
‰‰: ;
m_characterCount
‰‰< L
;
‰‰L M
}
ÂÂ )
m_lineVisibleCharacterCount
ÁÁ 3
+=
ÁÁ4 6
$num
ÁÁ7 8
;
ÁÁ8 9*
m_lastVisibleCharacterOfLine
ËË 4
=
ËË5 6
m_characterCount
ËË7 G
;
ËËG H

m_textInfo
ÈÈ "
.
ÈÈ" #
lineInfo
ÈÈ# +
[
ÈÈ+ ,
m_lineNumber
ÈÈ, 8
]
ÈÈ8 9
.
ÈÈ9 :

marginLeft
ÈÈ: D
=
ÈÈE F

marginLeft
ÈÈG Q
;
ÈÈQ R

m_textInfo
ÍÍ "
.
ÍÍ" #
lineInfo
ÍÍ# +
[
ÍÍ+ ,
m_lineNumber
ÍÍ, 8
]
ÍÍ8 9
.
ÍÍ9 :
marginRight
ÍÍ: E
=
ÍÍF G
marginRight
ÍÍH S
;
ÍÍS T
}
ÎÎ 
}
 
else
ÒÒ 
{
ÚÚ 
if
˘˘ 
(
˘˘ 
(
˘˘ 
charCode
˘˘ !
==
˘˘" $
$num
˘˘% '
||
˘˘( *
charCode
˘˘+ 3
==
˘˘4 6
$num
˘˘7 9
||
˘˘: <
charCode
˘˘= E
==
˘˘F H
$num
˘˘I M
||
˘˘N P
charCode
˘˘Q Y
==
˘˘Z \
$num
˘˘] c
||
˘˘d f
charCode
˘˘g o
==
˘˘p r
$num
˘˘s y
||
˘˘z |
charCode˘˘} Ö
==˘˘Ü à
$num˘˘â è
||˘˘ê í
char˘˘ì ó
.˘˘ó ò
IsSeparator˘˘ò £
(˘˘£ §
(˘˘§ •
char˘˘• ©
)˘˘© ™
charCode˘˘™ ≤
)˘˘≤ ≥
)˘˘≥ ¥
&&˘˘µ ∑
charCode˘˘∏ ¿
!=˘˘¡ √
$num˘˘ƒ »
&&˘˘… À
charCode˘˘Ã ‘
!=˘˘’ ◊
$num˘˘ÿ ﬁ
&&˘˘ﬂ ·
charCode˘˘‚ Í
!=˘˘Î Ì
$num˘˘Ó Ù
)˘˘Ù ı
{
˙˙ 

m_textInfo
˚˚ "
.
˚˚" #
lineInfo
˚˚# +
[
˚˚+ ,
m_lineNumber
˚˚, 8
]
˚˚8 9
.
˚˚9 :

spaceCount
˚˚: D
+=
˚˚E G
$num
˚˚H I
;
˚˚I J

m_textInfo
¸¸ "
.
¸¸" #

spaceCount
¸¸# -
+=
¸¸. 0
$num
¸¸1 2
;
¸¸2 3
}
˝˝ 
if
ˇˇ 
(
ˇˇ 
charCode
ˇˇ  
==
ˇˇ! #
$num
ˇˇ$ (
)
ˇˇ( )

m_textInfo
ÄÄ "
.
ÄÄ" #
lineInfo
ÄÄ# +
[
ÄÄ+ ,
m_lineNumber
ÄÄ, 8
]
ÄÄ8 9
.
ÄÄ9 :#
controlCharacterCount
ÄÄ: O
+=
ÄÄP R
$num
ÄÄS T
;
ÄÄT U
}
ÖÖ 
if
ãã 
(
ãã 
m_overflowMode
ãã "
==
ãã# %
TextOverflowModes
ãã& 7
.
ãã7 8
Ellipsis
ãã8 @
&&
ããA C
(
ããD E"
isInjectingCharacter
ããE Y
==
ããZ \
false
ãã] b
||
ããc e
charCode
ããf n
==
ãão q
$num
ããr v
)
ããv w
)
ããw x
{
åå 
float
çç 
	fontScale
çç #
=
çç$ %
m_currentFontSize
çç& 7
/
çç8 9

m_Ellipsis
çç: D
.
ççD E
	fontAsset
ççE N
.
ççN O

m_FaceInfo
ççO Y
.
ççY Z
	pointSize
ççZ c
*
ççd e

m_Ellipsis
ççf p
.
ççp q
	fontAsset
ççq z
.
ççz {

m_FaceInfoçç{ Ö
.ççÖ Ü
scaleççÜ ã
*ççå ç
(ççé è 
m_isOrthographicççè ü
?çç† °
$numçç¢ £
:çç§ •
$numçç¶ ™
)çç™ ´
;çç´ ¨
float
éé 
scale
éé 
=
éé  !
	fontScale
éé" +
*
éé, -#
m_fontScaleMultiplier
éé. C
*
ééD E

m_Ellipsis
ééF P
.
ééP Q
	character
ééQ Z
.
ééZ [
m_Scale
éé[ b
*
ééc d

m_Ellipsis
éée o
.
ééo p
	character
éép y
.
ééy z
m_Glyphééz Å
.ééÅ Ç
scaleééÇ á
;ééá à
float
èè 

marginLeft
èè $
=
èè% &
m_marginLeft
èè' 3
;
èè3 4
float
êê 
marginRight
êê %
=
êê& '
m_marginRight
êê( 5
;
êê5 6
if
ìì 
(
ìì 
charCode
ìì  
==
ìì! #
$num
ìì$ (
&&
ìì) +
m_characterCount
ìì, <
!=
ìì= ?$
m_firstCharacterOfLine
ìì@ V
)
ììV W
{
îî 
	fontScale
ïï !
=
ïï" #

m_textInfo
ïï$ .
.
ïï. /
characterInfo
ïï/ <
[
ïï< =
m_characterCount
ïï= M
-
ïïN O
$num
ïïP Q
]
ïïQ R
.
ïïR S
	pointSize
ïïS \
/
ïï] ^

m_Ellipsis
ïï_ i
.
ïïi j
	fontAsset
ïïj s
.
ïïs t

m_FaceInfo
ïït ~
.
ïï~ 
	pointSizeïï à
*ïïâ ä

m_Ellipsisïïã ï
.ïïï ñ
	fontAssetïïñ ü
.ïïü †

m_FaceInfoïï† ™
.ïï™ ´
scaleïï´ ∞
*ïï± ≤
(ïï≥ ¥ 
m_isOrthographicïï¥ ƒ
?ïï≈ ∆
$numïï« »
:ïï…  
$numïïÀ œ
)ïïœ –
;ïï– —
scale
ññ 
=
ññ 
	fontScale
ññ  )
*
ññ* +#
m_fontScaleMultiplier
ññ, A
*
ññB C

m_Ellipsis
ññD N
.
ññN O
	character
ññO X
.
ññX Y
m_Scale
ññY `
*
ñña b

m_Ellipsis
ññc m
.
ññm n
	character
ññn w
.
ññw x
m_Glyph
ññx 
.ññ Ä
scaleññÄ Ö
;ññÖ Ü

marginLeft
óó "
=
óó# $

m_textInfo
óó% /
.
óó/ 0
lineInfo
óó0 8
[
óó8 9
m_lineNumber
óó9 E
]
óóE F
.
óóF G

marginLeft
óóG Q
;
óóQ R
marginRight
òò #
=
òò$ %

m_textInfo
òò& 0
.
òò0 1
lineInfo
òò1 9
[
òò9 :
m_lineNumber
òò: F
]
òòF G
.
òòG H
marginRight
òòH S
;
òòS T
}
ôô 
float
õõ 

textHeight
õõ $
=
õõ% &
m_maxTextAscender
õõ' 8
-
õõ9 :
(
õõ; < 
m_maxLineDescender
õõ< N
-
õõO P
m_lineOffset
õõQ ]
)
õõ] ^
+
õõ_ `
(
õõa b
m_lineOffset
õõb n
>
õõo p
$num
õõq r
&&
õõs u$
m_IsDrivenLineSpacingõõv ã
==õõå é
falseõõè î
?õõï ñ!
m_maxLineAscenderõõó ®
-õõ© ™%
m_startOfLineAscenderõõ´ ¿
:õõ¡ ¬
$numõõ√ ƒ
)õõƒ ≈
;õõ≈ ∆
float
úú 
	textWidth
úú #
=
úú$ %
Mathf
úú& +
.
úú+ ,
Abs
úú, /
(
úú/ 0

m_xAdvance
úú0 :
)
úú: ;
+
úú< =
(
úú> ?
!
úú? @
m_isRightToLeft
úú@ O
?
úúP Q

m_Ellipsis
úúR \
.
úú\ ]
	character
úú] f
.
úúf g
m_Glyph
úúg n
.
úún o
metrics
úúo v
.
úúv w 
horizontalAdvanceúúw à
:úúâ ä
$numúúã å
)úúå ç
*úúé è
(úúê ë
$numúúë í
-úúì î#
m_charWidthAdjDeltaúúï ®
)úú® ©
*úú™ ´
scaleúú¨ ±
;úú± ≤
float
ùù (
widthOfTextAreaForEllipsis
ùù 4
=
ùù5 6
m_width
ùù7 >
!=
ùù? A
-
ùùB C
$num
ùùC D
?
ùùE F
Mathf
ùùG L
.
ùùL M
Min
ùùM P
(
ùùP Q
marginWidth
ùùQ \
+
ùù] ^
$num
ùù_ f
-
ùùg h

marginLeft
ùùi s
-
ùùt u
marginRightùùv Å
,ùùÅ Ç
m_widthùùÉ ä
)ùùä ã
:ùùå ç
marginWidthùùé ô
+ùùö õ
$numùùú £
-ùù§ •

marginLeftùù¶ ∞
-ùù± ≤
marginRightùù≥ æ
;ùùæ ø
if
üü 
(
üü 
	textWidth
üü !
<
üü" #(
widthOfTextAreaForEllipsis
üü$ >
*
üü? @
(
üüA B 
isJustifiedOrFlush
üüB T
?
üüU V
$num
üüW \
:
üü] ^
$num
üü_ c
)
üüc d
&&
üüe g

textHeight
üüh r
<
üüs t
marginHeightüüu Å
+üüÇ É
$numüüÑ ã
)üüã å
{
†† #
SaveWordWrappingState
°° -
(
°°- .
ref
°°. 1"
m_SavedEllipsisState
°°2 F
,
°°F G
i
°°H I
,
°°I J
m_characterCount
°°K [
)
°°[ \
;
°°\ ]/
!m_EllipsisInsertionCandidateStack
¢¢ 9
.
¢¢9 :
Push
¢¢: >
(
¢¢> ?"
m_SavedEllipsisState
¢¢? S
)
¢¢S T
;
¢¢T U
}
££ 
}
§§ 

m_textInfo
™™ 
.
™™ 
characterInfo
™™ (
[
™™( )
m_characterCount
™™) 9
]
™™9 :
.
™™: ;

lineNumber
™™; E
=
™™F G
m_lineNumber
™™H T
;
™™T U

m_textInfo
´´ 
.
´´ 
characterInfo
´´ (
[
´´( )
m_characterCount
´´) 9
]
´´9 :
.
´´: ;

pageNumber
´´; E
=
´´F G
m_pageNumber
´´H T
;
´´T U
if
≠≠ 
(
≠≠ 
charCode
≠≠ 
!=
≠≠ 
$num
≠≠  "
&&
≠≠# %
charCode
≠≠& .
!=
≠≠/ 1
$num
≠≠2 4
&&
≠≠5 7
charCode
≠≠8 @
!=
≠≠A C
$num
≠≠D F
&&
≠≠G I"
isInjectingCharacter
≠≠J ^
==
≠≠_ a
false
≠≠b g
||≠≠Ç Ñ

m_textInfo≠≠Ö è
.≠≠è ê
lineInfo≠≠ê ò
[≠≠ò ô
m_lineNumber≠≠ô •
]≠≠• ¶
.≠≠¶ ß
characterCount≠≠ß µ
==≠≠∂ ∏
$num≠≠π ∫
)≠≠∫ ª

m_textInfo
ÆÆ 
.
ÆÆ 
lineInfo
ÆÆ '
[
ÆÆ' (
m_lineNumber
ÆÆ( 4
]
ÆÆ4 5
.
ÆÆ5 6
	alignment
ÆÆ6 ?
=
ÆÆ@ A!
m_lineJustification
ÆÆB U
;
ÆÆU V
if
∑∑ 
(
∑∑ 
charCode
∑∑ 
==
∑∑ 
$num
∑∑  !
)
∑∑! "
{
∏∏ 
float
ππ 
tabSize
ππ !
=
ππ" # 
m_currentFontAsset
ππ$ 6
.
ππ6 7

m_FaceInfo
ππ7 A
.
ππA B
tabWidth
ππB J
*
ππK L 
m_currentFontAsset
ππM _
.
ππ_ `
tabSize
ππ` g
*
ππh i!
currentElementScale
ππj }
;
ππ} ~
float
∫∫ 
tabs
∫∫ 
=
∫∫  
Mathf
∫∫! &
.
∫∫& '
Ceil
∫∫' +
(
∫∫+ ,

m_xAdvance
∫∫, 6
/
∫∫7 8
tabSize
∫∫9 @
)
∫∫@ A
*
∫∫B C
tabSize
∫∫D K
;
∫∫K L

m_xAdvance
ªª 
=
ªª  
tabs
ªª! %
>
ªª& '

m_xAdvance
ªª( 2
?
ªª3 4
tabs
ªª5 9
:
ªª: ;

m_xAdvance
ªª< F
+
ªªG H
tabSize
ªªI P
;
ªªP Q
}
ºº 
else
ΩΩ 
if
ΩΩ 
(
ΩΩ 
m_monoSpacing
ΩΩ &
!=
ΩΩ' )
$num
ΩΩ* +
)
ΩΩ+ ,
{
ææ 

m_xAdvance
øø 
+=
øø !
(
øø" #
m_monoSpacing
øø# 0
-
øø1 2
monoAdvance
øø3 >
+
øø? @
(
øøA B
(
øøB C 
m_currentFontAsset
øøC U
.
øøU V!
normalSpacingOffset
øøV i
+
øøj k)
characterSpacingAdjustmentøøl Ü
)øøÜ á
*øøà â
currentEmScaleøøä ò
)øøò ô
+øøö õ

m_cSpacingøøú ¶
)øø¶ ß
*øø® ©
(øø™ ´
$numøø´ ¨
-øø≠ Æ#
m_charWidthAdjDeltaøøØ ¬
)øø¬ √
;øø√ ƒ
if
¡¡ 
(
¡¡ 
isWhiteSpace
¡¡ $
||
¡¡% '
charCode
¡¡( 0
==
¡¡1 3
$num
¡¡4 :
)
¡¡: ;

m_xAdvance
¬¬ "
+=
¬¬# %
m_wordSpacing
¬¬& 3
*
¬¬4 5
currentEmScale
¬¬6 D
;
¬¬D E
}
√√ 
else
ƒƒ 
if
ƒƒ 
(
ƒƒ 
m_isRightToLeft
ƒƒ (
)
ƒƒ( )
{
≈≈ 

m_xAdvance
∆∆ 
-=
∆∆ !
(
∆∆" #
(
∆∆# $
(
∆∆$ %
glyphAdjustments
∆∆% 5
.
∆∆5 6

m_XAdvance
∆∆6 @
+
∆∆A B#
boldSpacingAdjustment
∆∆C X
)
∆∆X Y
*
∆∆Z [!
currentElementScale
∆∆\ o
+
∆∆p q
(
∆∆r s!
m_currentFontAsset∆∆s Ö
.∆∆Ö Ü#
normalSpacingOffset∆∆Ü ô
+∆∆ö õ*
characterSpacingAdjustment∆∆ú ∂
)∆∆∂ ∑
*∆∆∏ π
currentEmScale∆∆∫ »
+∆∆…  

m_cSpacing∆∆À ’
)∆∆’ ÷
*∆∆◊ ÿ
(∆∆Ÿ ⁄
$num∆∆⁄ €
-∆∆‹ ›#
m_charWidthAdjDelta∆∆ﬁ Ò
)∆∆Ò Ú
)∆∆Ú Û
;∆∆Û Ù
if
»» 
(
»» 
isWhiteSpace
»» $
||
»»% '
charCode
»»( 0
==
»»1 3
$num
»»4 :
)
»»: ;

m_xAdvance
…… "
-=
……# %
m_wordSpacing
……& 3
*
……4 5
currentEmScale
……6 D
;
……D E
}
   
else
ÀÀ 
{
ÃÃ 
float
ÕÕ 
scaleFXMultiplier
ÕÕ +
=
ÕÕ, -
$num
ÕÕ. /
;
ÕÕ/ 0
if
ŒŒ 
(
ŒŒ 
m_isFXMatrixSet
ŒŒ '
)
ŒŒ' (
scaleFXMultiplier
ŒŒ) :
=
ŒŒ; <

m_FXMatrix
ŒŒ= G
.
ŒŒG H

lossyScale
ŒŒH R
.
ŒŒR S
x
ŒŒS T
;
ŒŒT U

m_xAdvance
–– 
+=
–– !
(
––" #
(
––# $!
currentGlyphMetrics
––$ 7
.
––7 8
horizontalAdvance
––8 I
*
––J K
scaleFXMultiplier
––L ]
+
––^ _
glyphAdjustments
––` p
.
––p q

m_XAdvance
––q {
+
––| }$
boldSpacingAdjustment––~ ì
)––ì î
*––ï ñ#
currentElementScale––ó ™
+––´ ¨
(––≠ Æ"
m_currentFontAsset––Æ ¿
.––¿ ¡#
normalSpacingOffset––¡ ‘
+––’ ÷*
characterSpacingAdjustment––◊ Ò
)––Ò Ú
*––Û Ù
currentEmScale––ı É
+––Ñ Ö

m_cSpacing––Ü ê
)––ê ë
*––í ì
(––î ï
$num––ï ñ
-––ó ò#
m_charWidthAdjDelta––ô ¨
)––¨ ≠
;––≠ Æ
if
““ 
(
““ 
isWhiteSpace
““ $
||
““% '
charCode
““( 0
==
““1 3
$num
““4 :
)
““: ;

m_xAdvance
”” "
+=
””# %
m_wordSpacing
””& 3
*
””4 5
currentEmScale
””6 D
;
””D E
}
‘‘ 

m_textInfo
◊◊ 
.
◊◊ 
characterInfo
◊◊ (
[
◊◊( )
m_characterCount
◊◊) 9
]
◊◊9 :
.
◊◊: ;
xAdvance
◊◊; C
=
◊◊D E

m_xAdvance
◊◊F P
;
◊◊P Q
if
‡‡ 
(
‡‡ 
charCode
‡‡ 
==
‡‡ 
$num
‡‡  "
)
‡‡" #
{
·· 

m_xAdvance
ÊÊ 
=
ÊÊ  
$num
ÊÊ! "
+
ÊÊ# $

tag_Indent
ÊÊ% /
;
ÊÊ/ 0
}
ÎÎ 
if
ÒÒ 
(
ÒÒ 
charCode
ÒÒ 
==
ÒÒ 
$num
ÒÒ  "
||
ÒÒ# %
charCode
ÒÒ& .
==
ÒÒ/ 1
$num
ÒÒ2 4
||
ÒÒ5 7
charCode
ÒÒ8 @
==
ÒÒA C
$num
ÒÒD H
||
ÒÒI K
charCode
ÒÒL T
==
ÒÒU W
$num
ÒÒX ^
||
ÒÒ_ a
charCode
ÒÒb j
==
ÒÒk m
$num
ÒÒn t
||
ÒÒu w
(
ÒÒx y
charCodeÒÒy Å
==ÒÒÇ Ñ
$numÒÒÖ â
&&ÒÒä å$
isInjectingCharacterÒÒç °
)ÒÒ° ¢
||ÒÒ£ • 
m_characterCountÒÒ¶ ∂
==ÒÒ∑ π#
totalCharacterCountÒÒ∫ Õ
-ÒÒŒ œ
$numÒÒ– —
)ÒÒ— “
{
ÚÚ 
float
¯¯ %
baselineAdjustmentDelta
¯¯ 1
=
¯¯2 3
m_maxLineAscender
¯¯4 E
-
¯¯F G#
m_startOfLineAscender
¯¯H ]
;
¯¯] ^
if
˘˘ 
(
˘˘ 
m_lineOffset
˘˘ $
>
˘˘% &
$num
˘˘' (
&&
˘˘) +
Math
˘˘, 0
.
˘˘0 1
Abs
˘˘1 4
(
˘˘4 5%
baselineAdjustmentDelta
˘˘5 L
)
˘˘L M
>
˘˘N O
$num
˘˘P U
&&
˘˘V X#
m_IsDrivenLineSpacing
˘˘Y n
==
˘˘o q
false
˘˘r w
&&
˘˘x z
!
˘˘{ |
m_isNewPage˘˘| á
)˘˘á à
{
˙˙ 
AdjustLineOffset
¸¸ (
(
¸¸( )$
m_firstCharacterOfLine
¸¸) ?
,
¸¸? @
m_characterCount
¸¸A Q
,
¸¸Q R%
baselineAdjustmentDelta
¸¸S j
)
¸¸j k
;
¸¸k l 
m_ElementDescender
˝˝ *
-=
˝˝+ -%
baselineAdjustmentDelta
˝˝. E
;
˝˝E F
m_lineOffset
˛˛ $
+=
˛˛% '%
baselineAdjustmentDelta
˛˛( ?
;
˛˛? @
if
ÅÅ 
(
ÅÅ "
m_SavedEllipsisState
ÅÅ 0
.
ÅÅ0 1

lineNumber
ÅÅ1 ;
==
ÅÅ< >
m_lineNumber
ÅÅ? K
)
ÅÅK L
{
ÇÇ "
m_SavedEllipsisState
ÉÉ 0
=
ÉÉ1 2/
!m_EllipsisInsertionCandidateStack
ÉÉ3 T
.
ÉÉT U
Pop
ÉÉU X
(
ÉÉX Y
)
ÉÉY Z
;
ÉÉZ ["
m_SavedEllipsisState
ÑÑ 0
.
ÑÑ0 1!
startOfLineAscender
ÑÑ1 D
+=
ÑÑE G%
baselineAdjustmentDelta
ÑÑH _
;
ÑÑ_ `"
m_SavedEllipsisState
ÖÖ 0
.
ÖÖ0 1

lineOffset
ÖÖ1 ;
+=
ÖÖ< >%
baselineAdjustmentDelta
ÖÖ? V
;
ÖÖV W/
!m_EllipsisInsertionCandidateStack
ÜÜ =
.
ÜÜ= >
Push
ÜÜ> B
(
ÜÜB C"
m_SavedEllipsisState
ÜÜC W
)
ÜÜW X
;
ÜÜX Y
}
áá 
}
àà 
m_isNewPage
ââ 
=
ââ  !
false
ââ" '
;
ââ' (
float
åå 
lineAscender
åå &
=
åå' (
m_maxLineAscender
åå) :
-
åå; <
m_lineOffset
åå= I
;
ååI J
float
çç 
lineDescender
çç '
=
çç( ) 
m_maxLineDescender
çç* <
-
çç= >
m_lineOffset
çç? K
;
ççK L 
m_ElementDescender
êê &
=
êê' ( 
m_ElementDescender
êê) ;
<
êê< =
lineDescender
êê> K
?
êêL M 
m_ElementDescender
êêN `
:
êêa b
lineDescender
êêc p
;
êêp q
if
ëë 
(
ëë 
!
ëë &
isMaxVisibleDescenderSet
ëë 1
)
ëë1 2!
maxVisibleDescender
íí +
=
íí, - 
m_ElementDescender
íí. @
;
íí@ A
if
îî 
(
îî &
m_useMaxVisibleDescender
îî 0
&&
îî1 3
(
îî4 5
m_characterCount
îî5 E
>=
îîF H$
m_maxVisibleCharacters
îîI _
||
îî` b
m_lineNumber
îîc o
>=
îîp r 
m_maxVisibleLinesîîs Ñ
)îîÑ Ö
)îîÖ Ü&
isMaxVisibleDescenderSet
ïï 0
=
ïï1 2
true
ïï3 7
;
ïï7 8

m_textInfo
òò 
.
òò 
lineInfo
òò '
[
òò' (
m_lineNumber
òò( 4
]
òò4 5
.
òò5 6!
firstCharacterIndex
òò6 I
=
òòJ K$
m_firstCharacterOfLine
òòL b
;
òòb c

m_textInfo
ôô 
.
ôô 
lineInfo
ôô '
[
ôô' (
m_lineNumber
ôô( 4
]
ôô4 5
.
ôô5 6(
firstVisibleCharacterIndex
ôô6 P
=
ôôQ R+
m_firstVisibleCharacterOfLine
ôôS p
=
ôôq r%
m_firstCharacterOfLineôôs â
>ôôä ã-
m_firstVisibleCharacterOfLineôôå ©
?ôô™ ´&
m_firstCharacterOfLineôô¨ ¬
:ôô√ ƒ-
m_firstVisibleCharacterOfLineôô≈ ‚
;ôô‚ „

m_textInfo
öö 
.
öö 
lineInfo
öö '
[
öö' (
m_lineNumber
öö( 4
]
öö4 5
.
öö5 6 
lastCharacterIndex
öö6 H
=
ööI J#
m_lastCharacterOfLine
ööK `
=
ööa b
m_characterCount
ööc s
;
öös t

m_textInfo
õõ 
.
õõ 
lineInfo
õõ '
[
õõ' (
m_lineNumber
õõ( 4
]
õõ4 5
.
õõ5 6'
lastVisibleCharacterIndex
õõ6 O
=
õõP Q*
m_lastVisibleCharacterOfLine
õõR n
=
õõo p+
m_lastVisibleCharacterOfLineõõq ç
<õõé è-
m_firstVisibleCharacterOfLineõõê ≠
?õõÆ Ø-
m_firstVisibleCharacterOfLineõõ∞ Õ
:õõŒ œ,
m_lastVisibleCharacterOfLineõõ– Ï
;õõÏ Ì

m_textInfo
ùù 
.
ùù 
lineInfo
ùù '
[
ùù' (
m_lineNumber
ùù( 4
]
ùù4 5
.
ùù5 6
characterCount
ùù6 D
=
ùùE F

m_textInfo
ùùG Q
.
ùùQ R
lineInfo
ùùR Z
[
ùùZ [
m_lineNumber
ùù[ g
]
ùùg h
.
ùùh i 
lastCharacterIndex
ùùi {
-
ùù| }

m_textInfoùù~ à
.ùùà â
lineInfoùùâ ë
[ùùë í
m_lineNumberùùí û
]ùùû ü
.ùùü †#
firstCharacterIndexùù† ≥
+ùù¥ µ
$numùù∂ ∑
;ùù∑ ∏

m_textInfo
ûû 
.
ûû 
lineInfo
ûû '
[
ûû' (
m_lineNumber
ûû( 4
]
ûû4 5
.
ûû5 6#
visibleCharacterCount
ûû6 K
=
ûûL M)
m_lineVisibleCharacterCount
ûûN i
;
ûûi j

m_textInfo
üü 
.
üü 
lineInfo
üü '
[
üü' (
m_lineNumber
üü( 4
]
üü4 5
.
üü5 6
lineExtents
üü6 A
.
üüA B
min
üüB E
=
üüF G
new
üüH K
Vector2
üüL S
(
üüS T

m_textInfo
üüT ^
.
üü^ _
characterInfo
üü_ l
[
üül m,
m_firstVisibleCharacterOfLineüüm ä
]üüä ã
.üüã å

bottomLeftüüå ñ
.üüñ ó
xüüó ò
,üüò ô
lineDescenderüüö ß
)üüß ®
;üü® ©

m_textInfo
†† 
.
†† 
lineInfo
†† '
[
††' (
m_lineNumber
††( 4
]
††4 5
.
††5 6
lineExtents
††6 A
.
††A B
max
††B E
=
††F G
new
††H K
Vector2
††L S
(
††S T

m_textInfo
††T ^
.
††^ _
characterInfo
††_ l
[
††l m+
m_lastVisibleCharacterOfLine††m â
]††â ä
.††ä ã
topRight††ã ì
.††ì î
x††î ï
,††ï ñ
lineAscender††ó £
)††£ §
;††§ •

m_textInfo
°° 
.
°° 
lineInfo
°° '
[
°°' (
m_lineNumber
°°( 4
]
°°4 5
.
°°5 6
length
°°6 <
=
°°= >

m_textInfo
°°? I
.
°°I J
lineInfo
°°J R
[
°°R S
m_lineNumber
°°S _
]
°°_ `
.
°°` a
lineExtents
°°a l
.
°°l m
max
°°m p
.
°°p q
x
°°q r
-
°°s t
(
°°u v
padding
°°v }
*
°°~ #
currentElementScale°°Ä ì
)°°ì î
;°°î ï

m_textInfo
¢¢ 
.
¢¢ 
lineInfo
¢¢ '
[
¢¢' (
m_lineNumber
¢¢( 4
]
¢¢4 5
.
¢¢5 6
width
¢¢6 ;
=
¢¢< =
widthOfTextArea
¢¢> M
;
¢¢M N
if
§§ 
(
§§ 

m_textInfo
§§ "
.
§§" #
lineInfo
§§# +
[
§§+ ,
m_lineNumber
§§, 8
]
§§8 9
.
§§9 :
characterCount
§§: H
==
§§I K
$num
§§L M
)
§§M N

m_textInfo
•• "
.
••" #
lineInfo
••# +
[
••+ ,
m_lineNumber
••, 8
]
••8 9
.
••9 :
	alignment
••: C
=
••D E!
m_lineJustification
••F Y
;
••Y Z
float
ßß 
maxAdvanceOffset
ßß *
=
ßß+ ,
(
ßß- .#
boldSpacingAdjustment
ßß. C
*
ßßD E!
currentElementScale
ßßF Y
+
ßßZ [
(
ßß\ ] 
m_currentFontAsset
ßß] o
.
ßßo p"
normalSpacingOffsetßßp É
+ßßÑ Ö*
characterSpacingAdjustmentßßÜ †
)ßß† °
*ßß¢ £
currentEmScaleßß§ ≤
-ßß≥ ¥

m_cSpacingßßµ ø
)ßßø ¿
*ßß¡ ¬
(ßß√ ƒ
$numßßƒ ≈
-ßß∆ «#
m_charWidthAdjDeltaßß» €
)ßß€ ‹
;ßß‹ ›
if
®® 
(
®® 

m_textInfo
®® "
.
®®" #
characterInfo
®®# 0
[
®®0 1*
m_lastVisibleCharacterOfLine
®®1 M
]
®®M N
.
®®N O
	isVisible
®®O X
)
®®X Y

m_textInfo
©© "
.
©©" #
lineInfo
©©# +
[
©©+ ,
m_lineNumber
©©, 8
]
©©8 9
.
©©9 :

maxAdvance
©©: D
=
©©E F

m_textInfo
©©G Q
.
©©Q R
characterInfo
©©R _
[
©©_ `*
m_lastVisibleCharacterOfLine
©©` |
]
©©| }
.
©©} ~
xAdvance©©~ Ü
+©©á à
(©©â ä
m_isRightToLeft©©ä ô
?©©ö õ 
maxAdvanceOffset©©ú ¨
:©©≠ Æ
-©©Ø ∞ 
maxAdvanceOffset©©± ¡
)©©¡ ¬
;©©¬ √
else
™™ 

m_textInfo
´´ "
.
´´" #
lineInfo
´´# +
[
´´+ ,
m_lineNumber
´´, 8
]
´´8 9
.
´´9 :

maxAdvance
´´: D
=
´´E F

m_textInfo
´´G Q
.
´´Q R
characterInfo
´´R _
[
´´_ `#
m_lastCharacterOfLine
´´` u
]
´´u v
.
´´v w
xAdvance
´´w 
+´´Ä Å
(´´Ç É
m_isRightToLeft´´É í
?´´ì î 
maxAdvanceOffset´´ï •
:´´¶ ß
-´´® © 
maxAdvanceOffset´´™ ∫
)´´∫ ª
;´´ª º

m_textInfo
≠≠ 
.
≠≠ 
lineInfo
≠≠ '
[
≠≠' (
m_lineNumber
≠≠( 4
]
≠≠4 5
.
≠≠5 6
baseline
≠≠6 >
=
≠≠? @
$num
≠≠A B
-
≠≠C D
m_lineOffset
≠≠E Q
;
≠≠Q R

m_textInfo
ÆÆ 
.
ÆÆ 
lineInfo
ÆÆ '
[
ÆÆ' (
m_lineNumber
ÆÆ( 4
]
ÆÆ4 5
.
ÆÆ5 6
ascender
ÆÆ6 >
=
ÆÆ? @
lineAscender
ÆÆA M
;
ÆÆM N

m_textInfo
ØØ 
.
ØØ 
lineInfo
ØØ '
[
ØØ' (
m_lineNumber
ØØ( 4
]
ØØ4 5
.
ØØ5 6
	descender
ØØ6 ?
=
ØØ@ A
lineDescender
ØØB O
;
ØØO P

m_textInfo
∞∞ 
.
∞∞ 
lineInfo
∞∞ '
[
∞∞' (
m_lineNumber
∞∞( 4
]
∞∞4 5
.
∞∞5 6

lineHeight
∞∞6 @
=
∞∞A B
lineAscender
∞∞C O
-
∞∞P Q
lineDescender
∞∞R _
+
∞∞` a
lineGap
∞∞b i
*
∞∞j k
	baseScale
∞∞l u
;
∞∞u v
if
≥≥ 
(
≥≥ 
charCode
≥≥  
==
≥≥! #
$num
≥≥$ &
||
≥≥' )
charCode
≥≥* 2
==
≥≥3 5
$num
≥≥6 8
||
≥≥9 ;
charCode
≥≥< D
==
≥≥E G
$num
≥≥H L
||
≥≥M O
charCode
≥≥P X
==
≥≥Y [
$num
≥≥\ b
||
≥≥c e
charCode
≥≥f n
==
≥≥o q
$num
≥≥r x
)
≥≥x y
{
¥¥ #
SaveWordWrappingState
∂∂ -
(
∂∂- .
ref
∂∂. 1
m_SavedLineState
∂∂2 B
,
∂∂B C
i
∂∂D E
,
∂∂E F
m_characterCount
∂∂G W
)
∂∂W X
;
∂∂X Y
m_lineNumber
∏∏ $
+=
∏∏% '
$num
∏∏( )
;
∏∏) *
isStartOfNewLine
ππ (
=
ππ) *
true
ππ+ /
;
ππ/ 0$
ignoreNonBreakingSpace
∫∫ .
=
∫∫/ 0
false
∫∫1 6
;
∫∫6 7
isFirstWordOfLine
ªª )
=
ªª* +
true
ªª, 0
;
ªª0 1$
m_firstCharacterOfLine
ΩΩ .
=
ΩΩ/ 0
m_characterCount
ΩΩ1 A
+
ΩΩB C
$num
ΩΩD E
;
ΩΩE F)
m_lineVisibleCharacterCount
ææ 3
=
ææ4 5
$num
ææ6 7
;
ææ7 8
if
¡¡ 
(
¡¡ 
m_lineNumber
¡¡ (
>=
¡¡) +

m_textInfo
¡¡, 6
.
¡¡6 7
lineInfo
¡¡7 ?
.
¡¡? @
Length
¡¡@ F
)
¡¡F G
ResizeLineExtents
¬¬ -
(
¬¬- .
m_lineNumber
¬¬. :
)
¬¬: ;
;
¬¬; <
float
ƒƒ !
lastVisibleAscender
ƒƒ 1
=
ƒƒ2 3

m_textInfo
ƒƒ4 >
.
ƒƒ> ?
characterInfo
ƒƒ? L
[
ƒƒL M
m_characterCount
ƒƒM ]
]
ƒƒ] ^
.
ƒƒ^ _
adjustedAscender
ƒƒ_ o
;
ƒƒo p
if
«« 
(
«« 
m_lineHeight
«« (
==
««) +
TMP_Math
««, 4
.
««4 5
FLOAT_UNSET
««5 @
)
««@ A
{
»» 
float
…… !
lineOffsetDelta
……" 1
=
……2 3
$num
……4 5
-
……6 7 
m_maxLineDescender
……8 J
+
……K L!
lastVisibleAscender
……M `
+
……a b
(
……c d
lineGap
……d k
+
……l m!
m_lineSpacingDelta……n Ä
)……Ä Å
*……Ç É
	baseScale……Ñ ç
+……é è
(……ê ë
m_lineSpacing……ë û
+……ü †
(……° ¢
charCode……¢ ™
==……´ ≠
$num……Æ ∞
||……± ≥
charCode……¥ º
==……Ω ø
$num……¿ ∆
?……« »"
m_paragraphSpacing……… €
:……‹ ›
$num……ﬁ ﬂ
)……ﬂ ‡
)……‡ ·
*……‚ „
currentEmScale……‰ Ú
;……Ú Û
m_lineOffset
   (
+=
  ) +
lineOffsetDelta
  , ;
;
  ; <#
m_IsDrivenLineSpacing
ÀÀ 1
=
ÀÀ2 3
false
ÀÀ4 9
;
ÀÀ9 :
}
ÃÃ 
else
ÕÕ 
{
ŒŒ 
m_lineOffset
œœ (
+=
œœ) +
m_lineHeight
œœ, 8
+
œœ9 :
(
œœ; <
m_lineSpacing
œœ< I
+
œœJ K
(
œœL M
charCode
œœM U
==
œœV X
$num
œœY [
||
œœ\ ^
charCode
œœ_ g
==
œœh j
$num
œœk q
?
œœr s!
m_paragraphSpacingœœt Ü
:œœá à
$numœœâ ä
)œœä ã
)œœã å
*œœç é
currentEmScaleœœè ù
;œœù û#
m_IsDrivenLineSpacing
–– 1
=
––2 3
true
––4 8
;
––8 9
}
—— 
m_maxLineAscender
”” )
=
””* +"
k_LargeNegativeFloat
””, @
;
””@ A 
m_maxLineDescender
‘‘ *
=
‘‘+ ,"
k_LargePositiveFloat
‘‘- A
;
‘‘A B#
m_startOfLineAscender
’’ -
=
’’. /!
lastVisibleAscender
’’0 C
;
’’C D

m_xAdvance
◊◊ "
=
◊◊# $
$num
◊◊% &
+
◊◊' (
tag_LineIndent
◊◊) 7
+
◊◊8 9

tag_Indent
◊◊: D
;
◊◊D E#
SaveWordWrappingState
ŸŸ -
(
ŸŸ- .
ref
ŸŸ. 1"
m_SavedWordWrapState
ŸŸ2 F
,
ŸŸF G
i
ŸŸH I
,
ŸŸI J
m_characterCount
ŸŸK [
)
ŸŸ[ \
;
ŸŸ\ ]#
SaveWordWrappingState
⁄⁄ -
(
⁄⁄- .
ref
⁄⁄. 1#
m_SavedLastValidState
⁄⁄2 G
,
⁄⁄G H
i
⁄⁄I J
,
⁄⁄J K
m_characterCount
⁄⁄L \
)
⁄⁄\ ]
;
⁄⁄] ^
m_characterCount
‹‹ (
+=
‹‹) +
$num
‹‹, -
;
‹‹- .
continue
‚‚  
;
‚‚  !
}
„„ 
if
ÊÊ 
(
ÊÊ 
charCode
ÊÊ  
==
ÊÊ! #
$num
ÊÊ$ (
)
ÊÊ( )
i
ÁÁ 
=
ÁÁ %
m_InternalParsingBuffer
ÁÁ 3
.
ÁÁ3 4
Length
ÁÁ4 :
;
ÁÁ: ;
}
ÏÏ 
if
ˆˆ 
(
ˆˆ 

m_textInfo
ˆˆ 
.
ˆˆ 
characterInfo
ˆˆ ,
[
ˆˆ, -
m_characterCount
ˆˆ- =
]
ˆˆ= >
.
ˆˆ> ?
	isVisible
ˆˆ? H
)
ˆˆH I
{
˜˜ 
m_meshExtents
¯¯ !
.
¯¯! "
min
¯¯" %
.
¯¯% &
x
¯¯& '
=
¯¯( )
Mathf
¯¯* /
.
¯¯/ 0
Min
¯¯0 3
(
¯¯3 4
m_meshExtents
¯¯4 A
.
¯¯A B
min
¯¯B E
.
¯¯E F
x
¯¯F G
,
¯¯G H

m_textInfo
¯¯I S
.
¯¯S T
characterInfo
¯¯T a
[
¯¯a b
m_characterCount
¯¯b r
]
¯¯r s
.
¯¯s t

bottomLeft
¯¯t ~
.
¯¯~ 
x¯¯ Ä
)¯¯Ä Å
;¯¯Å Ç
m_meshExtents
˘˘ !
.
˘˘! "
min
˘˘" %
.
˘˘% &
y
˘˘& '
=
˘˘( )
Mathf
˘˘* /
.
˘˘/ 0
Min
˘˘0 3
(
˘˘3 4
m_meshExtents
˘˘4 A
.
˘˘A B
min
˘˘B E
.
˘˘E F
y
˘˘F G
,
˘˘G H

m_textInfo
˘˘I S
.
˘˘S T
characterInfo
˘˘T a
[
˘˘a b
m_characterCount
˘˘b r
]
˘˘r s
.
˘˘s t

bottomLeft
˘˘t ~
.
˘˘~ 
y˘˘ Ä
)˘˘Ä Å
;˘˘Å Ç
m_meshExtents
˚˚ !
.
˚˚! "
max
˚˚" %
.
˚˚% &
x
˚˚& '
=
˚˚( )
Mathf
˚˚* /
.
˚˚/ 0
Max
˚˚0 3
(
˚˚3 4
m_meshExtents
˚˚4 A
.
˚˚A B
max
˚˚B E
.
˚˚E F
x
˚˚F G
,
˚˚G H

m_textInfo
˚˚I S
.
˚˚S T
characterInfo
˚˚T a
[
˚˚a b
m_characterCount
˚˚b r
]
˚˚r s
.
˚˚s t
topRight
˚˚t |
.
˚˚| }
x
˚˚} ~
)
˚˚~ 
;˚˚ Ä
m_meshExtents
¸¸ !
.
¸¸! "
max
¸¸" %
.
¸¸% &
y
¸¸& '
=
¸¸( )
Mathf
¸¸* /
.
¸¸/ 0
Max
¸¸0 3
(
¸¸3 4
m_meshExtents
¸¸4 A
.
¸¸A B
max
¸¸B E
.
¸¸E F
y
¸¸F G
,
¸¸G H

m_textInfo
¸¸I S
.
¸¸S T
characterInfo
¸¸T a
[
¸¸a b
m_characterCount
¸¸b r
]
¸¸r s
.
¸¸s t
topRight
¸¸t |
.
¸¸| }
y
¸¸} ~
)
¸¸~ 
;¸¸ Ä
}
ÄÄ 
if
ÑÑ 
(
ÑÑ 
m_overflowMode
ÑÑ "
==
ÑÑ# %
TextOverflowModes
ÑÑ& 7
.
ÑÑ7 8
Page
ÑÑ8 <
&&
ÑÑ= ?
charCode
ÑÑ@ H
!=
ÑÑI K
$num
ÑÑL N
&&
ÑÑO Q
charCode
ÑÑR Z
!=
ÑÑ[ ]
$num
ÑÑ^ `
&&
ÑÑa c
charCode
ÑÑd l
!=
ÑÑm o
$num
ÑÑp r
&&
ÑÑs u
charCode
ÑÑv ~
!=ÑÑ Å
$numÑÑÇ à
&&ÑÑâ ã
charCodeÑÑå î
!=ÑÑï ó
$numÑÑò û
)ÑÑû ü
{
ÖÖ 
if
áá 
(
áá 
m_pageNumber
áá $
+
áá% &
$num
áá' (
>
áá) *

m_textInfo
áá+ 5
.
áá5 6
pageInfo
áá6 >
.
áá> ?
Length
áá? E
)
ááE F
TMP_TextInfo
àà $
.
àà$ %
Resize
àà% +
(
àà+ ,
ref
àà, /

m_textInfo
àà0 :
.
àà: ;
pageInfo
àà; C
,
ààC D
m_pageNumber
ààE Q
+
ààR S
$num
ààT U
,
ààU V
true
ààW [
)
àà[ \
;
àà\ ]

m_textInfo
ää 
.
ää 
pageInfo
ää '
[
ää' (
m_pageNumber
ää( 4
]
ää4 5
.
ää5 6
ascender
ää6 >
=
ää? @
m_PageAscender
ääA O
;
ääO P

m_textInfo
ãã 
.
ãã 
pageInfo
ãã '
[
ãã' (
m_pageNumber
ãã( 4
]
ãã4 5
.
ãã5 6
	descender
ãã6 ?
=
ãã@ A 
m_ElementDescender
ããB T
<
ããU V

m_textInfo
ããW a
.
ããa b
pageInfo
ããb j
[
ããj k
m_pageNumber
ããk w
]
ããw x
.
ããx y
	descenderããy Ç
?
åå  
m_ElementDescender
åå ,
:
çç 

m_textInfo
çç $
.
çç$ %
pageInfo
çç% -
[
çç- .
m_pageNumber
çç. :
]
çç: ;
.
çç; <
	descender
çç< E
;
ççE F
if
èè 
(
èè 
m_pageNumber
èè $
==
èè% '
$num
èè( )
&&
èè* ,
m_characterCount
èè- =
==
èè> @
$num
èèA B
)
èèB C

m_textInfo
êê "
.
êê" #
pageInfo
êê# +
[
êê+ ,
m_pageNumber
êê, 8
]
êê8 9
.
êê9 :!
firstCharacterIndex
êê: M
=
êêN O
m_characterCount
êêP `
;
êê` a
else
ëë 
if
ëë 
(
ëë 
m_characterCount
ëë -
>
ëë. /
$num
ëë0 1
&&
ëë2 4
m_pageNumber
ëë5 A
!=
ëëB D

m_textInfo
ëëE O
.
ëëO P
characterInfo
ëëP ]
[
ëë] ^
m_characterCount
ëë^ n
-
ëëo p
$num
ëëq r
]
ëër s
.
ëës t

pageNumber
ëët ~
)
ëë~ 
{
íí 

m_textInfo
ìì "
.
ìì" #
pageInfo
ìì# +
[
ìì+ ,
m_pageNumber
ìì, 8
-
ìì9 :
$num
ìì; <
]
ìì< =
.
ìì= > 
lastCharacterIndex
ìì> P
=
ììQ R
m_characterCount
ììS c
-
ììd e
$num
ììf g
;
ììg h

m_textInfo
îî "
.
îî" #
pageInfo
îî# +
[
îî+ ,
m_pageNumber
îî, 8
]
îî8 9
.
îî9 :!
firstCharacterIndex
îî: M
=
îîN O
m_characterCount
îîP `
;
îî` a
}
ïï 
else
ññ 
if
ññ 
(
ññ 
m_characterCount
ññ -
==
ññ. 0!
totalCharacterCount
ññ1 D
-
ññE F
$num
ññG H
)
ññH I

m_textInfo
óó "
.
óó" #
pageInfo
óó# +
[
óó+ ,
m_pageNumber
óó, 8
]
óó8 9
.
óó9 : 
lastCharacterIndex
óó: L
=
óóM N
m_characterCount
óóO _
;
óó_ `
}
òò 
if
°° 
(
°° "
m_enableWordWrapping
°° (
||
°°) +
m_overflowMode
°°, :
==
°°; =
TextOverflowModes
°°> O
.
°°O P
Truncate
°°P X
||
°°Y [
m_overflowMode
°°\ j
==
°°k m
TextOverflowModes
°°n 
.°° Ä
Ellipsis°°Ä à
||°°â ã
m_overflowMode°°å ö
==°°õ ù!
TextOverflowModes°°û Ø
.°°Ø ∞
Linked°°∞ ∂
)°°∂ ∑
{
¢¢ 
if
ßß 
(
ßß 
(
ßß 
isWhiteSpace
ßß %
||
ßß& (
charCode
ßß) 1
==
ßß2 4
$num
ßß5 ;
||
ßß< >
charCode
ßß? G
==
ßßH J
$num
ßßK O
||
ßßP R
charCode
ßßS [
==
ßß\ ^
$num
ßß_ c
)
ßßc d
&&
ßße g
(
ßßh i
!
ßßi j"
m_isNonBreakingSpace
ßßj ~
||ßß Å&
ignoreNonBreakingSpaceßßÇ ò
)ßßò ô
&&ßßö ú
charCodeßßù •
!=ßß¶ ®
$numßß© ≠
&&ßßÆ ∞
charCodeßß± π
!=ßß∫ º
$numßßΩ √
&&ßßƒ ∆
charCodeßß« œ
!=ßß– “
$numßß” Ÿ
&&ßß⁄ ‹
charCodeßß› Â
!=ßßÊ Ë
$numßßÈ Ô
&&ßß Ú
charCodeßßÛ ˚
!=ßß¸ ˛
$numßßˇ Ö
)ßßÖ Ü
{
®® #
SaveWordWrappingState
´´ -
(
´´- .
ref
´´. 1"
m_SavedWordWrapState
´´2 F
,
´´F G
i
´´H I
,
´´I J
m_characterCount
´´K [
)
´´[ \
;
´´\ ]
isFirstWordOfLine
¨¨ )
=
¨¨* +
false
¨¨, 1
;
¨¨1 2'
m_SavedSoftLineBreakState
∞∞ 1
.
∞∞1 2 
previous_WordBreak
∞∞2 D
=
∞∞E F
-
∞∞G H
$num
∞∞H I
;
∞∞I J
}
±± 
else
≥≥ 
if
≥≥ 
(
≥≥ "
m_isNonBreakingSpace
≥≥ 1
==
≥≥2 4
false
≥≥5 :
&&
≥≥; =
(
¥¥ 
(
¥¥ 
charCode
¥¥ '
>
¥¥( )
$num
¥¥* 0
&&
¥¥1 3
charCode
¥¥4 <
<
¥¥= >
$num
¥¥? E
||
¥¥F H
charCode
µµ '
>
µµ( )
$num
µµ* 0
&&
µµ1 3
charCode
µµ4 <
<
µµ= >
$num
µµ? E
||
µµF H
charCode
∂∂ '
>
∂∂( )
$num
∂∂* 0
&&
∂∂1 3
charCode
∂∂4 <
<
∂∂= >
$num
∂∂? E
)
∂∂E F
&&
∂∂F H
TMP_Settings
∑∑ *
.
∑∑* +.
 useModernHangulLineBreakingRules
∑∑+ K
==
∑∑L N
false
∑∑O T
||
∑∑U W
(
ππ 
charCode
ππ '
>
ππ( )
$num
ππ* 0
&&
ππ1 3
charCode
ππ4 <
<
ππ= >
$num
ππ? E
||
ππF H
charCode
∫∫ '
>
∫∫( )
$num
∫∫* 0
&&
∫∫1 3
charCode
∫∫4 <
<
∫∫= >
$num
∫∫? E
||
∫∫F H
charCode
ªª '
>
ªª( )
$num
ªª* 0
&&
ªª1 3
charCode
ªª4 <
<
ªª= >
$num
ªª? E
||
ªªF H
charCode
ºº '
>
ºº( )
$num
ºº* 0
&&
ºº1 3
charCode
ºº4 <
<
ºº= >
$num
ºº? E
)
ººE F
)
ººF G
)
ººG H
{
ΩΩ 
bool
ææ '
isCurrentLeadingCharacter
ææ 6
=
ææ7 8
TMP_Settings
ææ9 E
.
ææE F
linebreakingRules
ææF W
.
ææW X
leadingCharacters
ææX i
.
ææi j
ContainsKey
ææj u
(
ææu v
charCode
ææv ~
)
ææ~ 
;ææ Ä
bool
øø &
isNextFollowingCharacter
øø 5
=
øø6 7
m_characterCount
øø8 H
<
øøI J!
totalCharacterCount
øøK ^
-
øø_ `
$num
øøa b
&&
øøc e
TMP_Settings
øøf r
.
øør s 
linebreakingRulesøøs Ñ
.øøÑ Ö#
followingCharactersøøÖ ò
.øøò ô
ContainsKeyøøô §
(øø§ •

m_textInfoøø• Ø
.øøØ ∞
characterInfoøø∞ Ω
[øøΩ æ 
m_characterCountøøæ Œ
+øøœ –
$numøø— “
]øø“ ”
.øø” ‘
	characterøø‘ ›
)øø› ﬁ
;øøﬁ ﬂ
if
¡¡ 
(
¡¡ '
isCurrentLeadingCharacter
¡¡ 5
==
¡¡6 8
false
¡¡9 >
)
¡¡> ?
{
¬¬ 
if
√√ 
(
√√  &
isNextFollowingCharacter
√√  8
==
√√9 ;
false
√√< A
)
√√A B
{
ƒƒ #
SaveWordWrappingState
≈≈  5
(
≈≈5 6
ref
≈≈6 9"
m_SavedWordWrapState
≈≈: N
,
≈≈N O
i
≈≈P Q
,
≈≈Q R
m_characterCount
≈≈S c
)
≈≈c d
;
≈≈d e
isFirstWordOfLine
∆∆  1
=
∆∆2 3
false
∆∆4 9
;
∆∆9 :
}
«« 
if
…… 
(
……  
isFirstWordOfLine
……  1
)
……1 2
{
   
if
ÃÃ  "
(
ÃÃ# $
isWhiteSpace
ÃÃ$ 0
)
ÃÃ0 1#
SaveWordWrappingState
ÕÕ$ 9
(
ÕÕ9 :
ref
ÕÕ: ='
m_SavedSoftLineBreakState
ÕÕ> W
,
ÕÕW X
i
ÕÕY Z
,
ÕÕZ [
m_characterCount
ÕÕ\ l
)
ÕÕl m
;
ÕÕm n#
SaveWordWrappingState
œœ  5
(
œœ5 6
ref
œœ6 9"
m_SavedWordWrapState
œœ: N
,
œœN O
i
œœP Q
,
œœQ R
m_characterCount
œœS c
)
œœc d
;
œœd e
}
–– 
}
—— 
else
““ 
{
”” 
if
‘‘ 
(
‘‘  
isFirstWordOfLine
‘‘  1
&&
‘‘2 4$
isFirstCharacterOfLine
‘‘5 K
)
‘‘K L
{
’’ 
if
◊◊  "
(
◊◊# $
isWhiteSpace
◊◊$ 0
)
◊◊0 1#
SaveWordWrappingState
ÿÿ$ 9
(
ÿÿ9 :
ref
ÿÿ: ='
m_SavedSoftLineBreakState
ÿÿ> W
,
ÿÿW X
i
ÿÿY Z
,
ÿÿZ [
m_characterCount
ÿÿ\ l
)
ÿÿl m
;
ÿÿm n#
SaveWordWrappingState
⁄⁄  5
(
⁄⁄5 6
ref
⁄⁄6 9"
m_SavedWordWrapState
⁄⁄: N
,
⁄⁄N O
i
⁄⁄P Q
,
⁄⁄Q R
m_characterCount
⁄⁄S c
)
⁄⁄c d
;
⁄⁄d e
}
€€ 
}
‹‹ 
}
ﬂﬂ 
else
‡‡ 
if
‡‡ 
(
‡‡ 
isFirstWordOfLine
‡‡ .
)
‡‡. /
{
·· 
if
„„ 
(
„„ 
isWhiteSpace
„„ (
||
„„) +
(
„„, -
charCode
„„- 5
==
„„6 8
$num
„„9 =
&&
„„> @!
isSoftHyphenIgnored
„„A T
==
„„U W
false
„„X ]
)
„„] ^
)
„„^ _#
SaveWordWrappingState
‰‰ 1
(
‰‰1 2
ref
‰‰2 5'
m_SavedSoftLineBreakState
‰‰6 O
,
‰‰O P
i
‰‰Q R
,
‰‰R S
m_characterCount
‰‰T d
)
‰‰d e
;
‰‰e f#
SaveWordWrappingState
ÊÊ -
(
ÊÊ- .
ref
ÊÊ. 1"
m_SavedWordWrapState
ÊÊ2 F
,
ÊÊF G
i
ÊÊH I
,
ÊÊI J
m_characterCount
ÊÊK [
)
ÊÊ[ \
;
ÊÊ\ ]
}
ËË 
}
ÌÌ #
SaveWordWrappingState
 %
(
% &
ref
& )#
m_SavedLastValidState
* ?
,
? @
i
A B
,
B C
m_characterCount
D T
)
T U
;
U V
m_characterCount
ÚÚ  
+=
ÚÚ! #
$num
ÚÚ$ %
;
ÚÚ% &
}
ÛÛ 
fontSizeDelta
˜˜ 
=
˜˜ 
m_maxFontSize
˜˜ )
-
˜˜* +
m_minFontSize
˜˜, 9
;
˜˜9 :
if
¯¯ 
(
¯¯  
m_enableAutoSizing
¯¯7 I
&&
¯¯J L
fontSizeDelta
¯¯M Z
>
¯¯[ \
$num
¯¯] c
&&
¯¯d f

m_fontSize
¯¯g q
<
¯¯r s
m_fontSizeMax¯¯t Å
&&¯¯Ç Ñ(
m_AutoSizeIterationCount¯¯Ö ù
<¯¯û ü+
m_AutoSizeMaxIterationCount¯¯† ª
)¯¯ª º
{
˘˘ 
if
˚˚ 
(
˚˚ !
m_charWidthAdjDelta
˚˚ '
<
˚˚( )
m_charWidthMaxAdj
˚˚* ;
/
˚˚< =
$num
˚˚> A
)
˚˚A B!
m_charWidthAdjDelta
¸¸ '
=
¸¸( )
$num
¸¸* +
;
¸¸+ ,
m_minFontSize
˛˛ 
=
˛˛ 

m_fontSize
˛˛  *
;
˛˛* +
float
ÄÄ 
	sizeDelta
ÄÄ 
=
ÄÄ  !
Mathf
ÄÄ" '
.
ÄÄ' (
Max
ÄÄ( +
(
ÄÄ+ ,
(
ÄÄ, -
m_maxFontSize
ÄÄ- :
-
ÄÄ; <

m_fontSize
ÄÄ= G
)
ÄÄG H
/
ÄÄI J
$num
ÄÄK L
,
ÄÄL M
$num
ÄÄN S
)
ÄÄS T
;
ÄÄT U

m_fontSize
ÅÅ 
+=
ÅÅ 
	sizeDelta
ÅÅ '
;
ÅÅ' (

m_fontSize
ÇÇ 
=
ÇÇ 
Mathf
ÇÇ "
.
ÇÇ" #
Min
ÇÇ# &
(
ÇÇ& '
(
ÇÇ' (
int
ÇÇ( +
)
ÇÇ+ ,
(
ÇÇ, -

m_fontSize
ÇÇ- 7
*
ÇÇ8 9
$num
ÇÇ: <
+
ÇÇ= >
$num
ÇÇ? C
)
ÇÇC D
/
ÇÇE F
$num
ÇÇG J
,
ÇÇJ K
m_fontSizeMax
ÇÇL Y
)
ÇÇY Z
;
ÇÇZ [
return
ÖÖ 
;
ÖÖ 
}
ÜÜ &
m_IsAutoSizePointSizeSet
ââ $
=
ââ% &
true
ââ' +
;
ââ+ ,
if
ãã 
(
ãã &
m_AutoSizeIterationCount
ãã (
>=
ãã) +)
m_AutoSizeMaxIterationCount
ãã, G
)
ããG H
Debug
åå 
.
åå 
Log
åå 
(
åå 
$str
åå 7
+
åå8 9&
m_AutoSizeIterationCount
åå: R
+
ååS T
$str
ååU k
+
åål m

m_fontSize
åån x
)
ååx y
;
ååy z
if
èè 
(
èè 
m_characterCount
èè  
==
èè! #
$num
èè$ %
||
èè& (
(
èè) *
m_characterCount
èè* :
==
èè; =
$num
èè> ?
&&
èè@ B
charCode
èèC K
==
èèL N
$num
èèO S
)
èèS T
)
èèT U
{
êê 
	ClearMesh
ëë 
(
ëë 
)
ëë 
;
ëë  
TMPro_EventManager
îî "
.
îî" #
ON_TEXT_CHANGED
îî# 2
(
îî2 3
this
îî3 7
)
îî7 8
;
îî8 9
return
ïï 
;
ïï 
}
ññ 
int
†† 
last_vert_index
†† 
=
††  !"
m_materialReferences
††" 6
[
††6 7
m_Underline
††7 B
.
††B C
materialIndex
††C P
]
††P Q
.
††Q R
referenceCount
††R `
*
††a b
$num
††c d
;
††d e

m_textInfo
££ 
.
££ 
meshInfo
££ 
[
££  
$num
££  !
]
££! "
.
££" #
Clear
££# (
(
££( )
false
££) .
)
££. /
;
££/ 0
Vector3
ßß 
anchorOffset
ßß  
=
ßß! "
Vector3
ßß# *
.
ßß* +
zero
ßß+ /
;
ßß/ 0
Vector3
®® 
[
®® 
]
®® 
corners
®® 
=
®® $
m_RectTransformCorners
®®  6
;
®®6 7
switch
´´ 
(
´´ !
m_VerticalAlignment
´´ '
)
´´' (
{
¨¨ 
case
ÆÆ &
VerticalAlignmentOptions
ÆÆ -
.
ÆÆ- .
Top
ÆÆ. 1
:
ÆÆ1 2
if
ØØ 
(
ØØ 
m_overflowMode
ØØ &
!=
ØØ' )
TextOverflowModes
ØØ* ;
.
ØØ; <
Page
ØØ< @
)
ØØ@ A
anchorOffset
∞∞ $
=
∞∞% &
corners
∞∞' .
[
∞∞. /
$num
∞∞/ 0
]
∞∞0 1
+
∞∞2 3
new
∞∞4 7
Vector3
∞∞8 ?
(
∞∞? @
$num
∞∞@ A
+
∞∞B C
margins
∞∞D K
.
∞∞K L
x
∞∞L M
,
∞∞M N
$num
∞∞O P
-
∞∞Q R
m_maxTextAscender
∞∞S d
-
∞∞e f
margins
∞∞g n
.
∞∞n o
y
∞∞o p
,
∞∞p q
$num
∞∞r s
)
∞∞s t
;
∞∞t u
else
±± 
anchorOffset
≤≤ $
=
≤≤% &
corners
≤≤' .
[
≤≤. /
$num
≤≤/ 0
]
≤≤0 1
+
≤≤2 3
new
≤≤4 7
Vector3
≤≤8 ?
(
≤≤? @
$num
≤≤@ A
+
≤≤B C
margins
≤≤D K
.
≤≤K L
x
≤≤L M
,
≤≤M N
$num
≤≤O P
-
≤≤Q R

m_textInfo
≤≤S ]
.
≤≤] ^
pageInfo
≤≤^ f
[
≤≤f g
pageToDisplay
≤≤g t
]
≤≤t u
.
≤≤u v
ascender
≤≤v ~
-≤≤ Ä
margins≤≤Å à
.≤≤à â
y≤≤â ä
,≤≤ä ã
$num≤≤å ç
)≤≤ç é
;≤≤é è
break
≥≥ 
;
≥≥ 
case
∂∂ &
VerticalAlignmentOptions
∂∂ -
.
∂∂- .
Middle
∂∂. 4
:
∂∂4 5
if
∑∑ 
(
∑∑ 
m_overflowMode
∑∑ &
!=
∑∑' )
TextOverflowModes
∑∑* ;
.
∑∑; <
Page
∑∑< @
)
∑∑@ A
anchorOffset
∏∏ $
=
∏∏% &
(
∏∏' (
corners
∏∏( /
[
∏∏/ 0
$num
∏∏0 1
]
∏∏1 2
+
∏∏3 4
corners
∏∏5 <
[
∏∏< =
$num
∏∏= >
]
∏∏> ?
)
∏∏? @
/
∏∏A B
$num
∏∏C D
+
∏∏E F
new
∏∏G J
Vector3
∏∏K R
(
∏∏R S
$num
∏∏S T
+
∏∏U V
margins
∏∏W ^
.
∏∏^ _
x
∏∏_ `
,
∏∏` a
$num
∏∏b c
-
∏∏d e
(
∏∏f g
m_maxTextAscender
∏∏g x
+
∏∏y z
margins∏∏{ Ç
.∏∏Ç É
y∏∏É Ñ
+∏∏Ö Ü#
maxVisibleDescender∏∏á ö
-∏∏õ ú
margins∏∏ù §
.∏∏§ •
w∏∏• ¶
)∏∏¶ ß
/∏∏® ©
$num∏∏™ ´
,∏∏´ ¨
$num∏∏≠ Æ
)∏∏Æ Ø
;∏∏Ø ∞
else
ππ 
anchorOffset
∫∫ $
=
∫∫% &
(
∫∫' (
corners
∫∫( /
[
∫∫/ 0
$num
∫∫0 1
]
∫∫1 2
+
∫∫3 4
corners
∫∫5 <
[
∫∫< =
$num
∫∫= >
]
∫∫> ?
)
∫∫? @
/
∫∫A B
$num
∫∫C D
+
∫∫E F
new
∫∫G J
Vector3
∫∫K R
(
∫∫R S
$num
∫∫S T
+
∫∫U V
margins
∫∫W ^
.
∫∫^ _
x
∫∫_ `
,
∫∫` a
$num
∫∫b c
-
∫∫d e
(
∫∫f g

m_textInfo
∫∫g q
.
∫∫q r
pageInfo
∫∫r z
[
∫∫z {
pageToDisplay∫∫{ à
]∫∫à â
.∫∫â ä
ascender∫∫ä í
+∫∫ì î
margins∫∫ï ú
.∫∫ú ù
y∫∫ù û
+∫∫ü †

m_textInfo∫∫° ´
.∫∫´ ¨
pageInfo∫∫¨ ¥
[∫∫¥ µ
pageToDisplay∫∫µ ¬
]∫∫¬ √
.∫∫√ ƒ
	descender∫∫ƒ Õ
-∫∫Œ œ
margins∫∫– ◊
.∫∫◊ ÿ
w∫∫ÿ Ÿ
)∫∫Ÿ ⁄
/∫∫€ ‹
$num∫∫› ﬁ
,∫∫ﬁ ﬂ
$num∫∫‡ ·
)∫∫· ‚
;∫∫‚ „
break
ªª 
;
ªª 
case
ææ &
VerticalAlignmentOptions
ææ -
.
ææ- .
Bottom
ææ. 4
:
ææ4 5
if
øø 
(
øø 
m_overflowMode
øø &
!=
øø' )
TextOverflowModes
øø* ;
.
øø; <
Page
øø< @
)
øø@ A
anchorOffset
¿¿ $
=
¿¿% &
corners
¿¿' .
[
¿¿. /
$num
¿¿/ 0
]
¿¿0 1
+
¿¿2 3
new
¿¿4 7
Vector3
¿¿8 ?
(
¿¿? @
$num
¿¿@ A
+
¿¿B C
margins
¿¿D K
.
¿¿K L
x
¿¿L M
,
¿¿M N
$num
¿¿O P
-
¿¿Q R!
maxVisibleDescender
¿¿S f
+
¿¿g h
margins
¿¿i p
.
¿¿p q
w
¿¿q r
,
¿¿r s
$num
¿¿t u
)
¿¿u v
;
¿¿v w
else
¡¡ 
anchorOffset
¬¬ $
=
¬¬% &
corners
¬¬' .
[
¬¬. /
$num
¬¬/ 0
]
¬¬0 1
+
¬¬2 3
new
¬¬4 7
Vector3
¬¬8 ?
(
¬¬? @
$num
¬¬@ A
+
¬¬B C
margins
¬¬D K
.
¬¬K L
x
¬¬L M
,
¬¬M N
$num
¬¬O P
-
¬¬Q R

m_textInfo
¬¬S ]
.
¬¬] ^
pageInfo
¬¬^ f
[
¬¬f g
pageToDisplay
¬¬g t
]
¬¬t u
.
¬¬u v
	descender
¬¬v 
+¬¬Ä Å
margins¬¬Ç â
.¬¬â ä
w¬¬ä ã
,¬¬ã å
$num¬¬ç é
)¬¬é è
;¬¬è ê
break
√√ 
;
√√ 
case
∆∆ &
VerticalAlignmentOptions
∆∆ -
.
∆∆- .
Baseline
∆∆. 6
:
∆∆6 7
anchorOffset
««  
=
««! "
(
««# $
corners
««$ +
[
««+ ,
$num
««, -
]
««- .
+
««/ 0
corners
««1 8
[
««8 9
$num
««9 :
]
««: ;
)
««; <
/
««= >
$num
««? @
+
««A B
new
««C F
Vector3
««G N
(
««N O
$num
««O P
+
««Q R
margins
««S Z
.
««Z [
x
««[ \
,
««\ ]
$num
««^ _
,
««_ `
$num
««a b
)
««b c
;
««c d
break
»» 
;
»» 
case
ÀÀ &
VerticalAlignmentOptions
ÀÀ -
.
ÀÀ- .
Geometry
ÀÀ. 6
:
ÀÀ6 7
anchorOffset
ÃÃ  
=
ÃÃ! "
(
ÃÃ# $
corners
ÃÃ$ +
[
ÃÃ+ ,
$num
ÃÃ, -
]
ÃÃ- .
+
ÃÃ/ 0
corners
ÃÃ1 8
[
ÃÃ8 9
$num
ÃÃ9 :
]
ÃÃ: ;
)
ÃÃ; <
/
ÃÃ= >
$num
ÃÃ? @
+
ÃÃA B
new
ÃÃC F
Vector3
ÃÃG N
(
ÃÃN O
$num
ÃÃO P
+
ÃÃQ R
margins
ÃÃS Z
.
ÃÃZ [
x
ÃÃ[ \
,
ÃÃ\ ]
$num
ÃÃ^ _
-
ÃÃ` a
(
ÃÃb c
m_meshExtents
ÃÃc p
.
ÃÃp q
max
ÃÃq t
.
ÃÃt u
y
ÃÃu v
+
ÃÃw x
marginsÃÃy Ä
.ÃÃÄ Å
yÃÃÅ Ç
+ÃÃÉ Ñ
m_meshExtentsÃÃÖ í
.ÃÃí ì
minÃÃì ñ
.ÃÃñ ó
yÃÃó ò
-ÃÃô ö
marginsÃÃõ ¢
.ÃÃ¢ £
wÃÃ£ §
)ÃÃ§ •
/ÃÃ¶ ß
$numÃÃ® ©
,ÃÃ© ™
$numÃÃ´ ¨
)ÃÃ¨ ≠
;ÃÃ≠ Æ
break
ÕÕ 
;
ÕÕ 
case
–– &
VerticalAlignmentOptions
–– -
.
––- .
Capline
––. 5
:
––5 6
anchorOffset
——  
=
——! "
(
——# $
corners
——$ +
[
——+ ,
$num
——, -
]
——- .
+
——/ 0
corners
——1 8
[
——8 9
$num
——9 :
]
——: ;
)
——; <
/
——= >
$num
——? @
+
——A B
new
——C F
Vector3
——G N
(
——N O
$num
——O P
+
——Q R
margins
——S Z
.
——Z [
x
——[ \
,
——\ ]
$num
——^ _
-
——` a
(
——b c
m_maxCapHeight
——c q
-
——r s
margins
——t {
.
——{ |
y
——| }
-
——~ 
margins——Ä á
.——á à
w——à â
)——â ä
/——ã å
$num——ç é
,——é è
$num——ê ë
)——ë í
;——í ì
break
““ 
;
““ 
}
”” 
Vector3
ÿÿ !
justificationOffset
ÿÿ '
=
ÿÿ( )
Vector3
ÿÿ* 1
.
ÿÿ1 2
zero
ÿÿ2 6
;
ÿÿ6 7
Vector3
ŸŸ 
offset
ŸŸ 
=
ŸŸ 
Vector3
ŸŸ $
.
ŸŸ$ %
zero
ŸŸ% )
;
ŸŸ) *
int
⁄⁄ 
vert_index_X4
⁄⁄ 
=
⁄⁄ 
$num
⁄⁄  !
;
⁄⁄! "
int
€€ 
sprite_index_X4
€€ 
=
€€  !
$num
€€" #
;
€€# $
int
›› 
	wordCount
›› 
=
›› 
$num
›› 
;
›› 
int
ﬁﬁ 
	lineCount
ﬁﬁ 
=
ﬁﬁ 
$num
ﬁﬁ 
;
ﬁﬁ 
int
ﬂﬂ 
lastLine
ﬂﬂ 
=
ﬂﬂ 
$num
ﬂﬂ 
;
ﬂﬂ 
bool
‡‡ 
isFirstSeperator
‡‡ !
=
‡‡" #
false
‡‡$ )
;
‡‡) *
bool
‚‚ 
isStartOfWord
‚‚ 
=
‚‚  
false
‚‚! &
;
‚‚& '
int
„„ 
wordFirstChar
„„ 
=
„„ 
$num
„„  !
;
„„! "
int
‰‰ 
wordLastChar
‰‰ 
=
‰‰ 
$num
‰‰  
;
‰‰  !
bool
ËË 
isCameraAssigned
ËË !
=
ËË" #
m_canvas
ËË$ ,
.
ËË, -
worldCamera
ËË- 8
==
ËË9 ;
null
ËË< @
?
ËËA B
false
ËËC H
:
ËËI J
true
ËËK O
;
ËËO P
float
ÈÈ 

lossyScale
ÈÈ 
=
ÈÈ #
m_previousLossyScaleY
ÈÈ 4
=
ÈÈ5 6
this
ÈÈ7 ;
.
ÈÈ; <
	transform
ÈÈ< E
.
ÈÈE F

lossyScale
ÈÈF P
.
ÈÈP Q
y
ÈÈQ R
;
ÈÈR S

RenderMode
ÍÍ 
canvasRenderMode
ÍÍ '
=
ÍÍ( )
m_canvas
ÍÍ* 2
.
ÍÍ2 3

renderMode
ÍÍ3 =
;
ÍÍ= >
float
ÎÎ 
canvasScaleFactor
ÎÎ #
=
ÎÎ$ %
m_canvas
ÎÎ& .
.
ÎÎ. /
scaleFactor
ÎÎ/ :
;
ÎÎ: ;
Color32
ÌÌ 
underlineColor
ÌÌ "
=
ÌÌ# $
Color
ÌÌ% *
.
ÌÌ* +
white
ÌÌ+ 0
;
ÌÌ0 1
Color32
ÓÓ  
strikethroughColor
ÓÓ &
=
ÓÓ' (
Color
ÓÓ) .
.
ÓÓ. /
white
ÓÓ/ 4
;
ÓÓ4 5
HighlightState
ÔÔ 
highlightState
ÔÔ )
=
ÔÔ* +
new
ÔÔ, /
HighlightState
ÔÔ0 >
(
ÔÔ> ?
new
ÔÔ? B
Color32
ÔÔC J
(
ÔÔJ K
$num
ÔÔK N
,
ÔÔN O
$num
ÔÔP S
,
ÔÔS T
$num
ÔÔU V
,
ÔÔV W
$num
ÔÔX Z
)
ÔÔZ [
,
ÔÔ[ \

TMP_Offset
ÔÔ] g
.
ÔÔg h
zero
ÔÔh l
)
ÔÔl m
;
ÔÔm n
float
 
xScale
 
=
 
$num
 
;
 
float
ÒÒ 
	xScaleMax
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
;
ÒÒ  
float
ÚÚ !
underlineStartScale
ÚÚ %
=
ÚÚ& '
$num
ÚÚ( )
;
ÚÚ) *
float
ÛÛ 
underlineEndScale
ÛÛ #
=
ÛÛ$ %
$num
ÛÛ& '
;
ÛÛ' (
float
ÙÙ 
underlineMaxScale
ÙÙ #
=
ÙÙ$ %
$num
ÙÙ& '
;
ÙÙ' (
float
ıı 
underlineBaseLine
ıı #
=
ıı$ %"
k_LargePositiveFloat
ıı& :
;
ıı: ;
int
ˆˆ 
lastPage
ˆˆ 
=
ˆˆ 
$num
ˆˆ 
;
ˆˆ 
float
¯¯ $
strikethroughPointSize
¯¯ (
=
¯¯) *
$num
¯¯+ ,
;
¯¯, -
float
˘˘  
strikethroughScale
˘˘ $
=
˘˘% &
$num
˘˘' (
;
˘˘( )
float
˙˙ #
strikethroughBaseline
˙˙ '
=
˙˙( )
$num
˙˙* +
;
˙˙+ ,
TMP_CharacterInfo
¸¸ 
[
¸¸ 
]
¸¸ 
characterInfos
¸¸  .
=
¸¸/ 0

m_textInfo
¸¸1 ;
.
¸¸; <
characterInfo
¸¸< I
;
¸¸I J
for
˛˛ 
(
˛˛ 
int
˛˛ 
i
˛˛ 
=
˛˛ 
$num
˛˛ 
;
˛˛ 
i
˛˛ 
<
˛˛ 
m_characterCount
˛˛  0
;
˛˛0 1
i
˛˛2 3
++
˛˛3 5
)
˛˛5 6
{
ˇˇ 
TMP_FontAsset
ÄÄ 
currentFontAsset
ÄÄ .
=
ÄÄ/ 0
characterInfos
ÄÄ1 ?
[
ÄÄ? @
i
ÄÄ@ A
]
ÄÄA B
.
ÄÄB C
	fontAsset
ÄÄC L
;
ÄÄL M
char
ÇÇ 
unicode
ÇÇ 
=
ÇÇ 
characterInfos
ÇÇ -
[
ÇÇ- .
i
ÇÇ. /
]
ÇÇ/ 0
.
ÇÇ0 1
	character
ÇÇ1 :
;
ÇÇ: ;
int
ÑÑ 
currentLine
ÑÑ 
=
ÑÑ  !
characterInfos
ÑÑ" 0
[
ÑÑ0 1
i
ÑÑ1 2
]
ÑÑ2 3
.
ÑÑ3 4

lineNumber
ÑÑ4 >
;
ÑÑ> ?
TMP_LineInfo
ÖÖ 
lineInfo
ÖÖ %
=
ÖÖ& '

m_textInfo
ÖÖ( 2
.
ÖÖ2 3
lineInfo
ÖÖ3 ;
[
ÖÖ; <
currentLine
ÖÖ< G
]
ÖÖG H
;
ÖÖH I
	lineCount
ÜÜ 
=
ÜÜ 
currentLine
ÜÜ '
+
ÜÜ( )
$num
ÜÜ* +
;
ÜÜ+ ,(
HorizontalAlignmentOptions
àà *
lineAlignment
àà+ 8
=
àà9 :
lineInfo
àà; C
.
ààC D
	alignment
ààD M
;
ààM N
switch
åå 
(
åå 
lineAlignment
åå %
)
åå% &
{
çç 
case
éé (
HorizontalAlignmentOptions
éé 3
.
éé3 4
Left
éé4 8
:
éé8 9
if
èè 
(
èè 
!
èè 
m_isRightToLeft
èè ,
)
èè, -!
justificationOffset
êê /
=
êê0 1
new
êê2 5
Vector3
êê6 =
(
êê= >
$num
êê> ?
+
êê@ A
lineInfo
êêB J
.
êêJ K

marginLeft
êêK U
,
êêU V
$num
êêW X
,
êêX Y
$num
êêZ [
)
êê[ \
;
êê\ ]
else
ëë !
justificationOffset
íí /
=
íí0 1
new
íí2 5
Vector3
íí6 =
(
íí= >
$num
íí> ?
-
íí@ A
lineInfo
ííB J
.
ííJ K

maxAdvance
ííK U
,
ííU V
$num
ííW X
,
ííX Y
$num
ííZ [
)
íí[ \
;
íí\ ]
break
ìì 
;
ìì 
case
ïï (
HorizontalAlignmentOptions
ïï 3
.
ïï3 4
Center
ïï4 :
:
ïï: ;!
justificationOffset
ññ +
=
ññ, -
new
ññ. 1
Vector3
ññ2 9
(
ññ9 :
lineInfo
ññ: B
.
ññB C

marginLeft
ññC M
+
ññN O
lineInfo
ññP X
.
ññX Y
width
ññY ^
/
ññ_ `
$num
ñña b
-
ññc d
lineInfo
ññe m
.
ññm n

maxAdvance
ññn x
/
ññy z
$num
ññ{ |
,
ññ| }
$num
ññ~ 
,ññ Ä
$numññÅ Ç
)ññÇ É
;ññÉ Ñ
break
óó 
;
óó 
case
ôô (
HorizontalAlignmentOptions
ôô 3
.
ôô3 4
Geometry
ôô4 <
:
ôô< =!
justificationOffset
öö +
=
öö, -
new
öö. 1
Vector3
öö2 9
(
öö9 :
lineInfo
öö: B
.
ööB C

marginLeft
ööC M
+
ööN O
lineInfo
ööP X
.
ööX Y
width
ööY ^
/
öö_ `
$num
ööa b
-
ööc d
(
ööe f
lineInfo
ööf n
.
öön o
lineExtents
ööo z
.
ööz {
min
öö{ ~
.
öö~ 
xöö Ä
+ööÅ Ç
lineInfoööÉ ã
.ööã å
lineExtentsööå ó
.ööó ò
maxööò õ
.ööõ ú
xööú ù
)ööù û
/ööü †
$numöö° ¢
,öö¢ £
$numöö§ •
,öö• ¶
$numööß ®
)öö® ©
;öö© ™
break
õõ 
;
õõ 
case
ùù (
HorizontalAlignmentOptions
ùù 3
.
ùù3 4
Right
ùù4 9
:
ùù9 :
if
ûû 
(
ûû 
!
ûû 
m_isRightToLeft
ûû ,
)
ûû, -!
justificationOffset
üü /
=
üü0 1
new
üü2 5
Vector3
üü6 =
(
üü= >
lineInfo
üü> F
.
üüF G

marginLeft
üüG Q
+
üüR S
lineInfo
üüT \
.
üü\ ]
width
üü] b
-
üüc d
lineInfo
üüe m
.
üüm n

maxAdvance
üün x
,
üüx y
$num
üüz {
,
üü{ |
$num
üü} ~
)
üü~ 
;üü Ä
else
†† !
justificationOffset
°° /
=
°°0 1
new
°°2 5
Vector3
°°6 =
(
°°= >
lineInfo
°°> F
.
°°F G

marginLeft
°°G Q
+
°°R S
lineInfo
°°T \
.
°°\ ]
width
°°] b
,
°°b c
$num
°°d e
,
°°e f
$num
°°g h
)
°°h i
;
°°i j
break
¢¢ 
;
¢¢ 
case
§§ (
HorizontalAlignmentOptions
§§ 3
.
§§3 4
	Justified
§§4 =
:
§§= >
case
•• (
HorizontalAlignmentOptions
•• 3
.
••3 4
Flush
••4 9
:
••9 :
if
ßß 
(
ßß 
unicode
ßß #
==
ßß$ &
$num
ßß' +
||
ßß, .
unicode
ßß/ 6
==
ßß7 9
$num
ßß: >
||
ßß? A
unicode
ßßB I
==
ßßJ L
$num
ßßM S
||
ßßT V
unicode
ßßW ^
==
ßß_ a
$num
ßßb h
||
ßßi k
unicode
ßßl s
==
ßßt v
$num
ßßw {
)
ßß{ |
breakßß} Ç
;ßßÇ É
char
©© #
lastCharOfCurrentLine
©© 2
=
©©3 4
characterInfos
©©5 C
[
©©C D
lineInfo
©©D L
.
©©L M 
lastCharacterIndex
©©M _
]
©©_ `
.
©©` a
	character
©©a j
;
©©j k
bool
™™ 
isFlush
™™ $
=
™™% &
(
™™' (
lineAlignment
™™( 5
&
™™6 7(
HorizontalAlignmentOptions
™™8 R
.
™™R S
Flush
™™S X
)
™™X Y
==
™™Z \(
HorizontalAlignmentOptions
™™] w
.
™™w x
Flush
™™x }
;
™™} ~
if
ÆÆ 
(
ÆÆ 
char
ÆÆ  
.
ÆÆ  !
	IsControl
ÆÆ! *
(
ÆÆ* +#
lastCharOfCurrentLine
ÆÆ+ @
)
ÆÆ@ A
==
ÆÆB D
false
ÆÆE J
&&
ÆÆK M
currentLine
ÆÆN Y
<
ÆÆZ [
m_lineNumber
ÆÆ\ h
||
ÆÆi k
isFlush
ÆÆl s
||
ÆÆt v
lineInfo
ÆÆw 
.ÆÆ Ä

maxAdvanceÆÆÄ ä
>ÆÆã å
lineInfoÆÆç ï
.ÆÆï ñ
widthÆÆñ õ
)ÆÆõ ú
{
ØØ 
if
±± 
(
±±  
currentLine
±±  +
!=
±±, .
lastLine
±±/ 7
||
±±8 :
i
±±; <
==
±±= ?
$num
±±@ A
||
±±s u
i
±±v w
==
±±x z&
m_firstVisibleCharacter±±{ í
)±±í ì
{
≤≤ 
if
≥≥  "
(
≥≥# $
!
≥≥$ %
m_isRightToLeft
≥≥% 4
)
≥≥4 5!
justificationOffset
¥¥$ 7
=
¥¥8 9
new
¥¥: =
Vector3
¥¥> E
(
¥¥E F
lineInfo
¥¥F N
.
¥¥N O

marginLeft
¥¥O Y
,
¥¥Y Z
$num
¥¥[ \
,
¥¥\ ]
$num
¥¥^ _
)
¥¥_ `
;
¥¥` a
else
µµ  $!
justificationOffset
∂∂$ 7
=
∂∂8 9
new
∂∂: =
Vector3
∂∂> E
(
∂∂E F
lineInfo
∂∂F N
.
∂∂N O

marginLeft
∂∂O Y
+
∂∂Z [
lineInfo
∂∂\ d
.
∂∂d e
width
∂∂e j
,
∂∂j k
$num
∂∂l m
,
∂∂m n
$num
∂∂o p
)
∂∂p q
;
∂∂q r
if
∏∏  "
(
∏∏# $
char
∏∏$ (
.
∏∏( )
IsSeparator
∏∏) 4
(
∏∏4 5
unicode
∏∏5 <
)
∏∏< =
)
∏∏= >
isFirstSeperator
ππ$ 4
=
ππ5 6
true
ππ7 ;
;
ππ; <
else
∫∫  $
isFirstSeperator
ªª$ 4
=
ªª5 6
false
ªª7 <
;
ªª< =
}
ºº 
else
ΩΩ  
{
ææ 
float
øø  %
gap
øø& )
=
øø* +
!
øø, -
m_isRightToLeft
øø- <
?
øø= >
lineInfo
øø? G
.
øøG H
width
øøH M
-
øøN O
lineInfo
øøP X
.
øøX Y

maxAdvance
øøY c
:
øød e
lineInfo
øøf n
.
øøn o
width
øøo t
+
øøu v
lineInfo
øøw 
.øø Ä

maxAdvanceøøÄ ä
;øøä ã
int
¡¡  #
visibleCount
¡¡$ 0
=
¡¡1 2
lineInfo
¡¡3 ;
.
¡¡; <#
visibleCharacterCount
¡¡< Q
-
¡¡R S
$num
¡¡T U
+
¡¡V W
lineInfo
¡¡X `
.
¡¡` a#
controlCharacterCount
¡¡a v
;
¡¡v w
int
ƒƒ  #
spaces
ƒƒ$ *
=
ƒƒ+ ,
(
ƒƒ- .
characterInfos
ƒƒ. <
[
ƒƒ< =
lineInfo
ƒƒ= E
.
ƒƒE F 
lastCharacterIndex
ƒƒF X
]
ƒƒX Y
.
ƒƒY Z
	isVisible
ƒƒZ c
?
ƒƒd e
lineInfo
ƒƒf n
.
ƒƒn o

spaceCount
ƒƒo y
:
ƒƒz {
lineInfoƒƒ| Ñ
.ƒƒÑ Ö

spaceCountƒƒÖ è
-ƒƒê ë
$numƒƒí ì
)ƒƒì î
-ƒƒï ñ
lineInfoƒƒó ü
.ƒƒü †%
controlCharacterCountƒƒ† µ
;ƒƒµ ∂
if
∆∆  "
(
∆∆# $
isFirstSeperator
∆∆$ 4
)
∆∆4 5
{
∆∆6 7
spaces
∆∆8 >
-=
∆∆? A
$num
∆∆B C
;
∆∆C D
visibleCount
∆∆E Q
+=
∆∆R T
$num
∆∆U V
;
∆∆V W
}
∆∆X Y
float
»»  %
ratio
»»& +
=
»», -
spaces
»». 4
>
»»5 6
$num
»»7 8
?
»»9 :"
m_wordWrappingRatios
»»; O
:
»»P Q
$num
»»R S
;
»»S T
if
    "
(
  # $
spaces
  $ *
<
  + ,
$num
  - .
)
  . /
spaces
  0 6
=
  7 8
$num
  9 :
;
  : ;
if
ÃÃ  "
(
ÃÃ# $
unicode
ÃÃ$ +
!=
ÃÃ, .
$num
ÃÃ/ 3
&&
ÃÃ4 6
(
ÃÃ7 8
unicode
ÃÃ8 ?
==
ÃÃ@ B
$num
ÃÃC D
||
ÃÃE G
char
ÃÃH L
.
ÃÃL M
IsSeparator
ÃÃM X
(
ÃÃX Y
(
ÃÃY Z
char
ÃÃZ ^
)
ÃÃ^ _
unicode
ÃÃ_ f
)
ÃÃf g
)
ÃÃg h
)
ÃÃh i
{
ÕÕ  !
if
ŒŒ$ &
(
ŒŒ' (
!
ŒŒ( )
m_isRightToLeft
ŒŒ) 8
)
ŒŒ8 9!
justificationOffset
œœ( ;
+=
œœ< >
new
œœ? B
Vector3
œœC J
(
œœJ K
gap
œœK N
*
œœO P
(
œœQ R
$num
œœR S
-
œœT U
ratio
œœV [
)
œœ[ \
/
œœ] ^
spaces
œœ_ e
,
œœe f
$num
œœg h
,
œœh i
$num
œœj k
)
œœk l
;
œœl m
else
––$ (!
justificationOffset
——( ;
-=
——< >
new
——? B
Vector3
——C J
(
——J K
gap
——K N
*
——O P
(
——Q R
$num
——R S
-
——T U
ratio
——V [
)
——[ \
/
——] ^
spaces
——_ e
,
——e f
$num
——g h
,
——h i
$num
——j k
)
——k l
;
——l m
}
““  !
else
””  $
{
‘‘  !
if
’’$ &
(
’’' (
!
’’( )
m_isRightToLeft
’’) 8
)
’’8 9!
justificationOffset
÷÷( ;
+=
÷÷< >
new
÷÷? B
Vector3
÷÷C J
(
÷÷J K
gap
÷÷K N
*
÷÷O P
ratio
÷÷Q V
/
÷÷W X
visibleCount
÷÷Y e
,
÷÷e f
$num
÷÷g h
,
÷÷h i
$num
÷÷j k
)
÷÷k l
;
÷÷l m
else
◊◊$ (!
justificationOffset
ÿÿ( ;
-=
ÿÿ< >
new
ÿÿ? B
Vector3
ÿÿC J
(
ÿÿJ K
gap
ÿÿK N
*
ÿÿO P
ratio
ÿÿQ V
/
ÿÿW X
visibleCount
ÿÿY e
,
ÿÿe f
$num
ÿÿg h
,
ÿÿh i
$num
ÿÿj k
)
ÿÿk l
;
ÿÿl m
}
ŸŸ  !
}
⁄⁄ 
}
€€ 
else
‹‹ 
{
›› 
if
ﬁﬁ 
(
ﬁﬁ  
!
ﬁﬁ  !
m_isRightToLeft
ﬁﬁ! 0
)
ﬁﬁ0 1!
justificationOffset
ﬂﬂ  3
=
ﬂﬂ4 5
new
ﬂﬂ6 9
Vector3
ﬂﬂ: A
(
ﬂﬂA B
lineInfo
ﬂﬂB J
.
ﬂﬂJ K

marginLeft
ﬂﬂK U
,
ﬂﬂU V
$num
ﬂﬂW X
,
ﬂﬂX Y
$num
ﬂﬂZ [
)
ﬂﬂ[ \
;
ﬂﬂ\ ]
else
‡‡  !
justificationOffset
··  3
=
··4 5
new
··6 9
Vector3
··: A
(
··A B
lineInfo
··B J
.
··J K

marginLeft
··K U
+
··V W
lineInfo
··X `
.
··` a
width
··a f
,
··f g
$num
··h i
,
··i j
$num
··k l
)
··l m
;
··m n
}
‚‚ 
break
‰‰ 
;
‰‰ 
}
ÂÂ 
offset
ËË 
=
ËË 
anchorOffset
ËË %
+
ËË& '!
justificationOffset
ËË( ;
;
ËË; <
bool
ÏÏ  
isCharacterVisible
ÏÏ '
=
ÏÏ( )
characterInfos
ÏÏ* 8
[
ÏÏ8 9
i
ÏÏ9 :
]
ÏÏ: ;
.
ÏÏ; <
	isVisible
ÏÏ< E
;
ÏÏE F
if
ÌÌ 
(
ÌÌ  
isCharacterVisible
ÌÌ &
)
ÌÌ& '
{
ÓÓ !
TMP_TextElementType
ÔÔ '
elementType
ÔÔ( 3
=
ÔÔ4 5
characterInfos
ÔÔ6 D
[
ÔÔD E
i
ÔÔE F
]
ÔÔF G
.
ÔÔG H
elementType
ÔÔH S
;
ÔÔS T
switch
 
(
 
elementType
 '
)
' (
{
ÒÒ 
case
ÛÛ !
TMP_TextElementType
ÛÛ 0
.
ÛÛ0 1
	Character
ÛÛ1 :
:
ÛÛ: ;
Extents
ÙÙ #
lineExtents
ÙÙ$ /
=
ÙÙ0 1
lineInfo
ÙÙ2 :
.
ÙÙ: ;
lineExtents
ÙÙ; F
;
ÙÙF G
float
ıı !
uvOffset
ıı" *
=
ıı+ ,
(
ıı- .
m_uvLineOffset
ıı. <
*
ıı= >
currentLine
ıı? J
)
ııJ K
%
ııL M
$num
ııN O
;
ııO P
switch
˘˘ "
(
˘˘# $!
m_horizontalMapping
˘˘$ 7
)
˘˘7 8
{
˙˙ 
case
˚˚  $#
TextureMappingOptions
˚˚% :
.
˚˚: ;
	Character
˚˚; D
:
˚˚D E
characterInfos
¸¸$ 2
[
¸¸2 3
i
¸¸3 4
]
¸¸4 5
.
¸¸5 6
	vertex_BL
¸¸6 ?
.
¸¸? @
uv2
¸¸@ C
.
¸¸C D
x
¸¸D E
=
¸¸F G
$num
¸¸H I
;
¸¸I J
characterInfos
˝˝$ 2
[
˝˝2 3
i
˝˝3 4
]
˝˝4 5
.
˝˝5 6
	vertex_TL
˝˝6 ?
.
˝˝? @
uv2
˝˝@ C
.
˝˝C D
x
˝˝D E
=
˝˝F G
$num
˝˝H I
;
˝˝I J
characterInfos
˛˛$ 2
[
˛˛2 3
i
˛˛3 4
]
˛˛4 5
.
˛˛5 6
	vertex_TR
˛˛6 ?
.
˛˛? @
uv2
˛˛@ C
.
˛˛C D
x
˛˛D E
=
˛˛F G
$num
˛˛H I
;
˛˛I J
characterInfos
ˇˇ$ 2
[
ˇˇ2 3
i
ˇˇ3 4
]
ˇˇ4 5
.
ˇˇ5 6
	vertex_BR
ˇˇ6 ?
.
ˇˇ? @
uv2
ˇˇ@ C
.
ˇˇC D
x
ˇˇD E
=
ˇˇF G
$num
ˇˇH I
;
ˇˇI J
break
ÄÄ$ )
;
ÄÄ) *
case
ÇÇ  $#
TextureMappingOptions
ÇÇ% :
.
ÇÇ: ;
Line
ÇÇ; ?
:
ÇÇ? @
if
ÉÉ$ &
(
ÉÉ' (
m_textAlignment
ÉÉ( 7
!=
ÉÉ8 :"
TextAlignmentOptions
ÉÉ; O
.
ÉÉO P
	Justified
ÉÉP Y
)
ÉÉY Z
{
ÑÑ$ %
characterInfos
ÖÖ( 6
[
ÖÖ6 7
i
ÖÖ7 8
]
ÖÖ8 9
.
ÖÖ9 :
	vertex_BL
ÖÖ: C
.
ÖÖC D
uv2
ÖÖD G
.
ÖÖG H
x
ÖÖH I
=
ÖÖJ K
(
ÖÖL M
characterInfos
ÖÖM [
[
ÖÖ[ \
i
ÖÖ\ ]
]
ÖÖ] ^
.
ÖÖ^ _
	vertex_BL
ÖÖ_ h
.
ÖÖh i
position
ÖÖi q
.
ÖÖq r
x
ÖÖr s
-
ÖÖt u
lineExtentsÖÖv Å
.ÖÖÅ Ç
minÖÖÇ Ö
.ÖÖÖ Ü
xÖÖÜ á
)ÖÖá à
/ÖÖâ ä
(ÖÖã å
lineExtentsÖÖå ó
.ÖÖó ò
maxÖÖò õ
.ÖÖõ ú
xÖÖú ù
-ÖÖû ü
lineExtentsÖÖ† ´
.ÖÖ´ ¨
minÖÖ¨ Ø
.ÖÖØ ∞
xÖÖ∞ ±
)ÖÖ± ≤
+ÖÖ≥ ¥
uvOffsetÖÖµ Ω
;ÖÖΩ æ
characterInfos
ÜÜ( 6
[
ÜÜ6 7
i
ÜÜ7 8
]
ÜÜ8 9
.
ÜÜ9 :
	vertex_TL
ÜÜ: C
.
ÜÜC D
uv2
ÜÜD G
.
ÜÜG H
x
ÜÜH I
=
ÜÜJ K
(
ÜÜL M
characterInfos
ÜÜM [
[
ÜÜ[ \
i
ÜÜ\ ]
]
ÜÜ] ^
.
ÜÜ^ _
	vertex_TL
ÜÜ_ h
.
ÜÜh i
position
ÜÜi q
.
ÜÜq r
x
ÜÜr s
-
ÜÜt u
lineExtentsÜÜv Å
.ÜÜÅ Ç
minÜÜÇ Ö
.ÜÜÖ Ü
xÜÜÜ á
)ÜÜá à
/ÜÜâ ä
(ÜÜã å
lineExtentsÜÜå ó
.ÜÜó ò
maxÜÜò õ
.ÜÜõ ú
xÜÜú ù
-ÜÜû ü
lineExtentsÜÜ† ´
.ÜÜ´ ¨
minÜÜ¨ Ø
.ÜÜØ ∞
xÜÜ∞ ±
)ÜÜ± ≤
+ÜÜ≥ ¥
uvOffsetÜÜµ Ω
;ÜÜΩ æ
characterInfos
áá( 6
[
áá6 7
i
áá7 8
]
áá8 9
.
áá9 :
	vertex_TR
áá: C
.
ááC D
uv2
ááD G
.
ááG H
x
ááH I
=
ááJ K
(
ááL M
characterInfos
ááM [
[
áá[ \
i
áá\ ]
]
áá] ^
.
áá^ _
	vertex_TR
áá_ h
.
ááh i
position
áái q
.
ááq r
x
áár s
-
áát u
lineExtentsááv Å
.ááÅ Ç
minááÇ Ö
.ááÖ Ü
xááÜ á
)ááá à
/ááâ ä
(ááã å
lineExtentsááå ó
.ááó ò
maxááò õ
.ááõ ú
xááú ù
-ááû ü
lineExtentsáá† ´
.áá´ ¨
mináá¨ Ø
.ááØ ∞
xáá∞ ±
)áá± ≤
+áá≥ ¥
uvOffsetááµ Ω
;ááΩ æ
characterInfos
àà( 6
[
àà6 7
i
àà7 8
]
àà8 9
.
àà9 :
	vertex_BR
àà: C
.
ààC D
uv2
ààD G
.
ààG H
x
ààH I
=
ààJ K
(
ààL M
characterInfos
ààM [
[
àà[ \
i
àà\ ]
]
àà] ^
.
àà^ _
	vertex_BR
àà_ h
.
ààh i
position
àài q
.
ààq r
x
ààr s
-
ààt u
lineExtentsààv Å
.ààÅ Ç
minààÇ Ö
.ààÖ Ü
xààÜ á
)ààá à
/ààâ ä
(ààã å
lineExtentsààå ó
.ààó ò
maxààò õ
.ààõ ú
xààú ù
-ààû ü
lineExtentsàà† ´
.àà´ ¨
minàà¨ Ø
.ààØ ∞
xàà∞ ±
)àà± ≤
+àà≥ ¥
uvOffsetààµ Ω
;ààΩ æ
break
ââ( -
;
ââ- .
}
ää$ %
else
ãã$ (
{
åå$ %
characterInfos
çç( 6
[
çç6 7
i
çç7 8
]
çç8 9
.
çç9 :
	vertex_BL
çç: C
.
ççC D
uv2
ççD G
.
ççG H
x
ççH I
=
ççJ K
(
ççL M
characterInfos
ççM [
[
çç[ \
i
çç\ ]
]
çç] ^
.
çç^ _
	vertex_BL
çç_ h
.
ççh i
position
ççi q
.
ççq r
x
ççr s
+
ççt u"
justificationOffsetççv â
.ççâ ä
xççä ã
-ççå ç
m_meshExtentsççé õ
.ççõ ú
minççú ü
.ççü †
xçç† °
)çç° ¢
/çç£ §
(çç• ¶
m_meshExtentsçç¶ ≥
.çç≥ ¥
maxçç¥ ∑
.çç∑ ∏
xçç∏ π
-çç∫ ª
m_meshExtentsççº …
.çç…  
minçç  Õ
.ççÕ Œ
xççŒ œ
)ççœ –
+çç— “
uvOffsetçç” €
;çç€ ‹
characterInfos
éé( 6
[
éé6 7
i
éé7 8
]
éé8 9
.
éé9 :
	vertex_TL
éé: C
.
ééC D
uv2
ééD G
.
ééG H
x
ééH I
=
ééJ K
(
ééL M
characterInfos
ééM [
[
éé[ \
i
éé\ ]
]
éé] ^
.
éé^ _
	vertex_TL
éé_ h
.
ééh i
position
ééi q
.
ééq r
x
éér s
+
éét u"
justificationOffsetéév â
.ééâ ä
xééä ã
-ééå ç
m_meshExtentsééé õ
.ééõ ú
minééú ü
.ééü †
xéé† °
)éé° ¢
/éé£ §
(éé• ¶
m_meshExtentséé¶ ≥
.éé≥ ¥
maxéé¥ ∑
.éé∑ ∏
xéé∏ π
-éé∫ ª
m_meshExtentsééº …
.éé…  
minéé  Õ
.ééÕ Œ
xééŒ œ
)ééœ –
+éé— “
uvOffsetéé” €
;éé€ ‹
characterInfos
èè( 6
[
èè6 7
i
èè7 8
]
èè8 9
.
èè9 :
	vertex_TR
èè: C
.
èèC D
uv2
èèD G
.
èèG H
x
èèH I
=
èèJ K
(
èèL M
characterInfos
èèM [
[
èè[ \
i
èè\ ]
]
èè] ^
.
èè^ _
	vertex_TR
èè_ h
.
èèh i
position
èèi q
.
èèq r
x
èèr s
+
èèt u"
justificationOffsetèèv â
.èèâ ä
xèèä ã
-èèå ç
m_meshExtentsèèé õ
.èèõ ú
minèèú ü
.èèü †
xèè† °
)èè° ¢
/èè£ §
(èè• ¶
m_meshExtentsèè¶ ≥
.èè≥ ¥
maxèè¥ ∑
.èè∑ ∏
xèè∏ π
-èè∫ ª
m_meshExtentsèèº …
.èè…  
minèè  Õ
.èèÕ Œ
xèèŒ œ
)èèœ –
+èè— “
uvOffsetèè” €
;èè€ ‹
characterInfos
êê( 6
[
êê6 7
i
êê7 8
]
êê8 9
.
êê9 :
	vertex_BR
êê: C
.
êêC D
uv2
êêD G
.
êêG H
x
êêH I
=
êêJ K
(
êêL M
characterInfos
êêM [
[
êê[ \
i
êê\ ]
]
êê] ^
.
êê^ _
	vertex_BR
êê_ h
.
êêh i
position
êêi q
.
êêq r
x
êêr s
+
êêt u"
justificationOffsetêêv â
.êêâ ä
xêêä ã
-êêå ç
m_meshExtentsêêé õ
.êêõ ú
minêêú ü
.êêü †
xêê† °
)êê° ¢
/êê£ §
(êê• ¶
m_meshExtentsêê¶ ≥
.êê≥ ¥
maxêê¥ ∑
.êê∑ ∏
xêê∏ π
-êê∫ ª
m_meshExtentsêêº …
.êê…  
minêê  Õ
.êêÕ Œ
xêêŒ œ
)êêœ –
+êê— “
uvOffsetêê” €
;êê€ ‹
break
ëë( -
;
ëë- .
}
íí$ %
case
îî  $#
TextureMappingOptions
îî% :
.
îî: ;
	Paragraph
îî; D
:
îîD E
characterInfos
ïï$ 2
[
ïï2 3
i
ïï3 4
]
ïï4 5
.
ïï5 6
	vertex_BL
ïï6 ?
.
ïï? @
uv2
ïï@ C
.
ïïC D
x
ïïD E
=
ïïF G
(
ïïH I
characterInfos
ïïI W
[
ïïW X
i
ïïX Y
]
ïïY Z
.
ïïZ [
	vertex_BL
ïï[ d
.
ïïd e
position
ïïe m
.
ïïm n
x
ïïn o
+
ïïp q"
justificationOffsetïïr Ö
.ïïÖ Ü
xïïÜ á
-ïïà â
m_meshExtentsïïä ó
.ïïó ò
minïïò õ
.ïïõ ú
xïïú ù
)ïïù û
/ïïü †
(ïï° ¢
m_meshExtentsïï¢ Ø
.ïïØ ∞
maxïï∞ ≥
.ïï≥ ¥
xïï¥ µ
-ïï∂ ∑
m_meshExtentsïï∏ ≈
.ïï≈ ∆
minïï∆ …
.ïï…  
xïï  À
)ïïÀ Ã
+ïïÕ Œ
uvOffsetïïœ ◊
;ïï◊ ÿ
characterInfos
ññ$ 2
[
ññ2 3
i
ññ3 4
]
ññ4 5
.
ññ5 6
	vertex_TL
ññ6 ?
.
ññ? @
uv2
ññ@ C
.
ññC D
x
ññD E
=
ññF G
(
ññH I
characterInfos
ññI W
[
ññW X
i
ññX Y
]
ññY Z
.
ññZ [
	vertex_TL
ññ[ d
.
ññd e
position
ññe m
.
ññm n
x
ññn o
+
ññp q"
justificationOffsetññr Ö
.ññÖ Ü
xññÜ á
-ññà â
m_meshExtentsññä ó
.ññó ò
minññò õ
.ññõ ú
xññú ù
)ññù û
/ññü †
(ññ° ¢
m_meshExtentsññ¢ Ø
.ññØ ∞
maxññ∞ ≥
.ññ≥ ¥
xññ¥ µ
-ññ∂ ∑
m_meshExtentsññ∏ ≈
.ññ≈ ∆
minññ∆ …
.ññ…  
xññ  À
)ññÀ Ã
+ññÕ Œ
uvOffsetññœ ◊
;ññ◊ ÿ
characterInfos
óó$ 2
[
óó2 3
i
óó3 4
]
óó4 5
.
óó5 6
	vertex_TR
óó6 ?
.
óó? @
uv2
óó@ C
.
óóC D
x
óóD E
=
óóF G
(
óóH I
characterInfos
óóI W
[
óóW X
i
óóX Y
]
óóY Z
.
óóZ [
	vertex_TR
óó[ d
.
óód e
position
óóe m
.
óóm n
x
óón o
+
óóp q"
justificationOffsetóór Ö
.óóÖ Ü
xóóÜ á
-óóà â
m_meshExtentsóóä ó
.óóó ò
minóóò õ
.óóõ ú
xóóú ù
)óóù û
/óóü †
(óó° ¢
m_meshExtentsóó¢ Ø
.óóØ ∞
maxóó∞ ≥
.óó≥ ¥
xóó¥ µ
-óó∂ ∑
m_meshExtentsóó∏ ≈
.óó≈ ∆
minóó∆ …
.óó…  
xóó  À
)óóÀ Ã
+óóÕ Œ
uvOffsetóóœ ◊
;óó◊ ÿ
characterInfos
òò$ 2
[
òò2 3
i
òò3 4
]
òò4 5
.
òò5 6
	vertex_BR
òò6 ?
.
òò? @
uv2
òò@ C
.
òòC D
x
òòD E
=
òòF G
(
òòH I
characterInfos
òòI W
[
òòW X
i
òòX Y
]
òòY Z
.
òòZ [
	vertex_BR
òò[ d
.
òòd e
position
òòe m
.
òòm n
x
òòn o
+
òòp q"
justificationOffsetòòr Ö
.òòÖ Ü
xòòÜ á
-òòà â
m_meshExtentsòòä ó
.òòó ò
minòòò õ
.òòõ ú
xòòú ù
)òòù û
/òòü †
(òò° ¢
m_meshExtentsòò¢ Ø
.òòØ ∞
maxòò∞ ≥
.òò≥ ¥
xòò¥ µ
-òò∂ ∑
m_meshExtentsòò∏ ≈
.òò≈ ∆
minòò∆ …
.òò…  
xòò  À
)òòÀ Ã
+òòÕ Œ
uvOffsetòòœ ◊
;òò◊ ÿ
break
ôô$ )
;
ôô) *
case
õõ  $#
TextureMappingOptions
õõ% :
.
õõ: ;
MatchAspect
õõ; F
:
õõF G
switch
ùù$ *
(
ùù+ ,
m_verticalMapping
ùù, =
)
ùù= >
{
ûû$ %
case
üü( ,#
TextureMappingOptions
üü- B
.
üüB C
	Character
üüC L
:
üüL M
characterInfos
††, :
[
††: ;
i
††; <
]
††< =
.
††= >
	vertex_BL
††> G
.
††G H
uv2
††H K
.
††K L
y
††L M
=
††N O
$num
††P Q
;
††Q R
characterInfos
°°, :
[
°°: ;
i
°°; <
]
°°< =
.
°°= >
	vertex_TL
°°> G
.
°°G H
uv2
°°H K
.
°°K L
y
°°L M
=
°°N O
$num
°°P Q
;
°°Q R
characterInfos
¢¢, :
[
¢¢: ;
i
¢¢; <
]
¢¢< =
.
¢¢= >
	vertex_TR
¢¢> G
.
¢¢G H
uv2
¢¢H K
.
¢¢K L
y
¢¢L M
=
¢¢N O
$num
¢¢P Q
;
¢¢Q R
characterInfos
££, :
[
££: ;
i
££; <
]
££< =
.
££= >
	vertex_BR
££> G
.
££G H
uv2
££H K
.
££K L
y
££L M
=
££N O
$num
££P Q
;
££Q R
break
§§, 1
;
§§1 2
case
¶¶( ,#
TextureMappingOptions
¶¶- B
.
¶¶B C
Line
¶¶C G
:
¶¶G H
characterInfos
ßß, :
[
ßß: ;
i
ßß; <
]
ßß< =
.
ßß= >
	vertex_BL
ßß> G
.
ßßG H
uv2
ßßH K
.
ßßK L
y
ßßL M
=
ßßN O
(
ßßP Q
characterInfos
ßßQ _
[
ßß_ `
i
ßß` a
]
ßßa b
.
ßßb c
	vertex_BL
ßßc l
.
ßßl m
position
ßßm u
.
ßßu v
y
ßßv w
-
ßßx y
lineExtentsßßz Ö
.ßßÖ Ü
minßßÜ â
.ßßâ ä
yßßä ã
)ßßã å
/ßßç é
(ßßè ê
lineExtentsßßê õ
.ßßõ ú
maxßßú ü
.ßßü †
yßß† °
-ßß¢ £
lineExtentsßß§ Ø
.ßßØ ∞
minßß∞ ≥
.ßß≥ ¥
yßß¥ µ
)ßßµ ∂
+ßß∑ ∏
uvOffsetßßπ ¡
;ßß¡ ¬
characterInfos
®®, :
[
®®: ;
i
®®; <
]
®®< =
.
®®= >
	vertex_TL
®®> G
.
®®G H
uv2
®®H K
.
®®K L
y
®®L M
=
®®N O
(
®®P Q
characterInfos
®®Q _
[
®®_ `
i
®®` a
]
®®a b
.
®®b c
	vertex_TL
®®c l
.
®®l m
position
®®m u
.
®®u v
y
®®v w
-
®®x y
lineExtents®®z Ö
.®®Ö Ü
min®®Ü â
.®®â ä
y®®ä ã
)®®ã å
/®®ç é
(®®è ê
lineExtents®®ê õ
.®®õ ú
max®®ú ü
.®®ü †
y®®† °
-®®¢ £
lineExtents®®§ Ø
.®®Ø ∞
min®®∞ ≥
.®®≥ ¥
y®®¥ µ
)®®µ ∂
+®®∑ ∏
uvOffset®®π ¡
;®®¡ ¬
characterInfos
©©, :
[
©©: ;
i
©©; <
]
©©< =
.
©©= >
	vertex_TR
©©> G
.
©©G H
uv2
©©H K
.
©©K L
y
©©L M
=
©©N O
characterInfos
©©P ^
[
©©^ _
i
©©_ `
]
©©` a
.
©©a b
	vertex_BL
©©b k
.
©©k l
uv2
©©l o
.
©©o p
y
©©p q
;
©©q r
characterInfos
™™, :
[
™™: ;
i
™™; <
]
™™< =
.
™™= >
	vertex_BR
™™> G
.
™™G H
uv2
™™H K
.
™™K L
y
™™L M
=
™™N O
characterInfos
™™P ^
[
™™^ _
i
™™_ `
]
™™` a
.
™™a b
	vertex_TL
™™b k
.
™™k l
uv2
™™l o
.
™™o p
y
™™p q
;
™™q r
break
´´, 1
;
´´1 2
case
≠≠( ,#
TextureMappingOptions
≠≠- B
.
≠≠B C
	Paragraph
≠≠C L
:
≠≠L M
characterInfos
ÆÆ, :
[
ÆÆ: ;
i
ÆÆ; <
]
ÆÆ< =
.
ÆÆ= >
	vertex_BL
ÆÆ> G
.
ÆÆG H
uv2
ÆÆH K
.
ÆÆK L
y
ÆÆL M
=
ÆÆN O
(
ÆÆP Q
characterInfos
ÆÆQ _
[
ÆÆ_ `
i
ÆÆ` a
]
ÆÆa b
.
ÆÆb c
	vertex_BL
ÆÆc l
.
ÆÆl m
position
ÆÆm u
.
ÆÆu v
y
ÆÆv w
-
ÆÆx y
m_meshExtentsÆÆz á
.ÆÆá à
minÆÆà ã
.ÆÆã å
yÆÆå ç
)ÆÆç é
/ÆÆè ê
(ÆÆë í
m_meshExtentsÆÆí ü
.ÆÆü †
maxÆÆ† £
.ÆÆ£ §
yÆÆ§ •
-ÆÆ¶ ß
m_meshExtentsÆÆ® µ
.ÆÆµ ∂
minÆÆ∂ π
.ÆÆπ ∫
yÆÆ∫ ª
)ÆÆª º
+ÆÆΩ æ
uvOffsetÆÆø «
;ÆÆ« »
characterInfos
ØØ, :
[
ØØ: ;
i
ØØ; <
]
ØØ< =
.
ØØ= >
	vertex_TL
ØØ> G
.
ØØG H
uv2
ØØH K
.
ØØK L
y
ØØL M
=
ØØN O
(
ØØP Q
characterInfos
ØØQ _
[
ØØ_ `
i
ØØ` a
]
ØØa b
.
ØØb c
	vertex_TL
ØØc l
.
ØØl m
position
ØØm u
.
ØØu v
y
ØØv w
-
ØØx y
m_meshExtentsØØz á
.ØØá à
minØØà ã
.ØØã å
yØØå ç
)ØØç é
/ØØè ê
(ØØë í
m_meshExtentsØØí ü
.ØØü †
maxØØ† £
.ØØ£ §
yØØ§ •
-ØØ¶ ß
m_meshExtentsØØ® µ
.ØØµ ∂
minØØ∂ π
.ØØπ ∫
yØØ∫ ª
)ØØª º
+ØØΩ æ
uvOffsetØØø «
;ØØ« »
characterInfos
∞∞, :
[
∞∞: ;
i
∞∞; <
]
∞∞< =
.
∞∞= >
	vertex_TR
∞∞> G
.
∞∞G H
uv2
∞∞H K
.
∞∞K L
y
∞∞L M
=
∞∞N O
characterInfos
∞∞P ^
[
∞∞^ _
i
∞∞_ `
]
∞∞` a
.
∞∞a b
	vertex_BL
∞∞b k
.
∞∞k l
uv2
∞∞l o
.
∞∞o p
y
∞∞p q
;
∞∞q r
characterInfos
±±, :
[
±±: ;
i
±±; <
]
±±< =
.
±±= >
	vertex_BR
±±> G
.
±±G H
uv2
±±H K
.
±±K L
y
±±L M
=
±±N O
characterInfos
±±P ^
[
±±^ _
i
±±_ `
]
±±` a
.
±±a b
	vertex_TL
±±b k
.
±±k l
uv2
±±l o
.
±±o p
y
±±p q
;
±±q r
break
≤≤, 1
;
≤≤1 2
case
¥¥( ,#
TextureMappingOptions
¥¥- B
.
¥¥B C
MatchAspect
¥¥C N
:
¥¥N O
Debug
µµ, 1
.
µµ1 2
Log
µµ2 5
(
µµ5 6
$str
µµ6 g
)
µµg h
;
µµh i
break
∂∂, 1
;
∂∂1 2
}
∑∑$ %
float
∫∫$ )
xDelta
∫∫* 0
=
∫∫1 2
(
∫∫3 4
$num
∫∫4 5
-
∫∫6 7
(
∫∫8 9
(
∫∫9 :
characterInfos
∫∫: H
[
∫∫H I
i
∫∫I J
]
∫∫J K
.
∫∫K L
	vertex_BL
∫∫L U
.
∫∫U V
uv2
∫∫V Y
.
∫∫Y Z
y
∫∫Z [
+
∫∫\ ]
characterInfos
∫∫^ l
[
∫∫l m
i
∫∫m n
]
∫∫n o
.
∫∫o p
	vertex_TL
∫∫p y
.
∫∫y z
uv2
∫∫z }
.
∫∫} ~
y
∫∫~ 
)∫∫ Ä
*∫∫Å Ç
characterInfos∫∫É ë
[∫∫ë í
i∫∫í ì
]∫∫ì î
.∫∫î ï
aspectRatio∫∫ï †
)∫∫† °
)∫∫° ¢
/∫∫£ §
$num∫∫• ¶
;∫∫¶ ß
characterInfos
ºº$ 2
[
ºº2 3
i
ºº3 4
]
ºº4 5
.
ºº5 6
	vertex_BL
ºº6 ?
.
ºº? @
uv2
ºº@ C
.
ººC D
x
ººD E
=
ººF G
(
ººH I
characterInfos
ººI W
[
ººW X
i
ººX Y
]
ººY Z
.
ººZ [
	vertex_BL
ºº[ d
.
ººd e
uv2
ººe h
.
ººh i
y
ººi j
*
ººk l
characterInfos
ººm {
[
ºº{ |
i
ºº| }
]
ºº} ~
.
ºº~ 
aspectRatioºº ä
)ººä ã
+ººå ç
xDeltaººé î
+ººï ñ
uvOffsetººó ü
;ººü †
characterInfos
ΩΩ$ 2
[
ΩΩ2 3
i
ΩΩ3 4
]
ΩΩ4 5
.
ΩΩ5 6
	vertex_TL
ΩΩ6 ?
.
ΩΩ? @
uv2
ΩΩ@ C
.
ΩΩC D
x
ΩΩD E
=
ΩΩF G
characterInfos
ΩΩH V
[
ΩΩV W
i
ΩΩW X
]
ΩΩX Y
.
ΩΩY Z
	vertex_BL
ΩΩZ c
.
ΩΩc d
uv2
ΩΩd g
.
ΩΩg h
x
ΩΩh i
;
ΩΩi j
characterInfos
ææ$ 2
[
ææ2 3
i
ææ3 4
]
ææ4 5
.
ææ5 6
	vertex_TR
ææ6 ?
.
ææ? @
uv2
ææ@ C
.
ææC D
x
ææD E
=
ææF G
(
ææH I
characterInfos
ææI W
[
ææW X
i
ææX Y
]
ææY Z
.
ææZ [
	vertex_TL
ææ[ d
.
ææd e
uv2
ææe h
.
ææh i
y
ææi j
*
ææk l
characterInfos
ææm {
[
ææ{ |
i
ææ| }
]
ææ} ~
.
ææ~ 
aspectRatioææ ä
)ææä ã
+ææå ç
xDeltaææé î
+ææï ñ
uvOffsetææó ü
;ææü †
characterInfos
øø$ 2
[
øø2 3
i
øø3 4
]
øø4 5
.
øø5 6
	vertex_BR
øø6 ?
.
øø? @
uv2
øø@ C
.
øøC D
x
øøD E
=
øøF G
characterInfos
øøH V
[
øøV W
i
øøW X
]
øøX Y
.
øøY Z
	vertex_TR
øøZ c
.
øøc d
uv2
øød g
.
øøg h
x
øøh i
;
øøi j
break
¿¿$ )
;
¿¿) *
}
¡¡ 
switch
√√ "
(
√√# $
m_verticalMapping
√√$ 5
)
√√5 6
{
ƒƒ 
case
≈≈  $#
TextureMappingOptions
≈≈% :
.
≈≈: ;
	Character
≈≈; D
:
≈≈D E
characterInfos
∆∆$ 2
[
∆∆2 3
i
∆∆3 4
]
∆∆4 5
.
∆∆5 6
	vertex_BL
∆∆6 ?
.
∆∆? @
uv2
∆∆@ C
.
∆∆C D
y
∆∆D E
=
∆∆F G
$num
∆∆H I
;
∆∆I J
characterInfos
««$ 2
[
««2 3
i
««3 4
]
««4 5
.
««5 6
	vertex_TL
««6 ?
.
««? @
uv2
««@ C
.
««C D
y
««D E
=
««F G
$num
««H I
;
««I J
characterInfos
»»$ 2
[
»»2 3
i
»»3 4
]
»»4 5
.
»»5 6
	vertex_TR
»»6 ?
.
»»? @
uv2
»»@ C
.
»»C D
y
»»D E
=
»»F G
$num
»»H I
;
»»I J
characterInfos
……$ 2
[
……2 3
i
……3 4
]
……4 5
.
……5 6
	vertex_BR
……6 ?
.
……? @
uv2
……@ C
.
……C D
y
……D E
=
……F G
$num
……H I
;
……I J
break
  $ )
;
  ) *
case
ÃÃ  $#
TextureMappingOptions
ÃÃ% :
.
ÃÃ: ;
Line
ÃÃ; ?
:
ÃÃ? @
characterInfos
ÕÕ$ 2
[
ÕÕ2 3
i
ÕÕ3 4
]
ÕÕ4 5
.
ÕÕ5 6
	vertex_BL
ÕÕ6 ?
.
ÕÕ? @
uv2
ÕÕ@ C
.
ÕÕC D
y
ÕÕD E
=
ÕÕF G
(
ÕÕH I
characterInfos
ÕÕI W
[
ÕÕW X
i
ÕÕX Y
]
ÕÕY Z
.
ÕÕZ [
	vertex_BL
ÕÕ[ d
.
ÕÕd e
position
ÕÕe m
.
ÕÕm n
y
ÕÕn o
-
ÕÕp q
lineInfo
ÕÕr z
.
ÕÕz {
	descenderÕÕ{ Ñ
)ÕÕÑ Ö
/ÕÕÜ á
(ÕÕà â
lineInfoÕÕâ ë
.ÕÕë í
ascenderÕÕí ö
-ÕÕõ ú
lineInfoÕÕù •
.ÕÕ• ¶
	descenderÕÕ¶ Ø
)ÕÕØ ∞
;ÕÕ∞ ±
characterInfos
ŒŒ$ 2
[
ŒŒ2 3
i
ŒŒ3 4
]
ŒŒ4 5
.
ŒŒ5 6
	vertex_TL
ŒŒ6 ?
.
ŒŒ? @
uv2
ŒŒ@ C
.
ŒŒC D
y
ŒŒD E
=
ŒŒF G
(
ŒŒH I
characterInfos
ŒŒI W
[
ŒŒW X
i
ŒŒX Y
]
ŒŒY Z
.
ŒŒZ [
	vertex_TL
ŒŒ[ d
.
ŒŒd e
position
ŒŒe m
.
ŒŒm n
y
ŒŒn o
-
ŒŒp q
lineInfo
ŒŒr z
.
ŒŒz {
	descenderŒŒ{ Ñ
)ŒŒÑ Ö
/ŒŒÜ á
(ŒŒà â
lineInfoŒŒâ ë
.ŒŒë í
ascenderŒŒí ö
-ŒŒõ ú
lineInfoŒŒù •
.ŒŒ• ¶
	descenderŒŒ¶ Ø
)ŒŒØ ∞
;ŒŒ∞ ±
characterInfos
œœ$ 2
[
œœ2 3
i
œœ3 4
]
œœ4 5
.
œœ5 6
	vertex_TR
œœ6 ?
.
œœ? @
uv2
œœ@ C
.
œœC D
y
œœD E
=
œœF G
characterInfos
œœH V
[
œœV W
i
œœW X
]
œœX Y
.
œœY Z
	vertex_TL
œœZ c
.
œœc d
uv2
œœd g
.
œœg h
y
œœh i
;
œœi j
characterInfos
––$ 2
[
––2 3
i
––3 4
]
––4 5
.
––5 6
	vertex_BR
––6 ?
.
––? @
uv2
––@ C
.
––C D
y
––D E
=
––F G
characterInfos
––H V
[
––V W
i
––W X
]
––X Y
.
––Y Z
	vertex_BL
––Z c
.
––c d
uv2
––d g
.
––g h
y
––h i
;
––i j
break
——$ )
;
——) *
case
””  $#
TextureMappingOptions
””% :
.
””: ;
	Paragraph
””; D
:
””D E
characterInfos
‘‘$ 2
[
‘‘2 3
i
‘‘3 4
]
‘‘4 5
.
‘‘5 6
	vertex_BL
‘‘6 ?
.
‘‘? @
uv2
‘‘@ C
.
‘‘C D
y
‘‘D E
=
‘‘F G
(
‘‘H I
characterInfos
‘‘I W
[
‘‘W X
i
‘‘X Y
]
‘‘Y Z
.
‘‘Z [
	vertex_BL
‘‘[ d
.
‘‘d e
position
‘‘e m
.
‘‘m n
y
‘‘n o
-
‘‘p q
m_meshExtents
‘‘r 
.‘‘ Ä
min‘‘Ä É
.‘‘É Ñ
y‘‘Ñ Ö
)‘‘Ö Ü
/‘‘á à
(‘‘â ä
m_meshExtents‘‘ä ó
.‘‘ó ò
max‘‘ò õ
.‘‘õ ú
y‘‘ú ù
-‘‘û ü
m_meshExtents‘‘† ≠
.‘‘≠ Æ
min‘‘Æ ±
.‘‘± ≤
y‘‘≤ ≥
)‘‘≥ ¥
;‘‘¥ µ
characterInfos
’’$ 2
[
’’2 3
i
’’3 4
]
’’4 5
.
’’5 6
	vertex_TL
’’6 ?
.
’’? @
uv2
’’@ C
.
’’C D
y
’’D E
=
’’F G
(
’’H I
characterInfos
’’I W
[
’’W X
i
’’X Y
]
’’Y Z
.
’’Z [
	vertex_TL
’’[ d
.
’’d e
position
’’e m
.
’’m n
y
’’n o
-
’’p q
m_meshExtents
’’r 
.’’ Ä
min’’Ä É
.’’É Ñ
y’’Ñ Ö
)’’Ö Ü
/’’á à
(’’â ä
m_meshExtents’’ä ó
.’’ó ò
max’’ò õ
.’’õ ú
y’’ú ù
-’’û ü
m_meshExtents’’† ≠
.’’≠ Æ
min’’Æ ±
.’’± ≤
y’’≤ ≥
)’’≥ ¥
;’’¥ µ
characterInfos
÷÷$ 2
[
÷÷2 3
i
÷÷3 4
]
÷÷4 5
.
÷÷5 6
	vertex_TR
÷÷6 ?
.
÷÷? @
uv2
÷÷@ C
.
÷÷C D
y
÷÷D E
=
÷÷F G
characterInfos
÷÷H V
[
÷÷V W
i
÷÷W X
]
÷÷X Y
.
÷÷Y Z
	vertex_TL
÷÷Z c
.
÷÷c d
uv2
÷÷d g
.
÷÷g h
y
÷÷h i
;
÷÷i j
characterInfos
◊◊$ 2
[
◊◊2 3
i
◊◊3 4
]
◊◊4 5
.
◊◊5 6
	vertex_BR
◊◊6 ?
.
◊◊? @
uv2
◊◊@ C
.
◊◊C D
y
◊◊D E
=
◊◊F G
characterInfos
◊◊H V
[
◊◊V W
i
◊◊W X
]
◊◊X Y
.
◊◊Y Z
	vertex_BL
◊◊Z c
.
◊◊c d
uv2
◊◊d g
.
◊◊g h
y
◊◊h i
;
◊◊i j
break
ÿÿ$ )
;
ÿÿ) *
case
⁄⁄  $#
TextureMappingOptions
⁄⁄% :
.
⁄⁄: ;
MatchAspect
⁄⁄; F
:
⁄⁄F G
float
€€$ )
yDelta
€€* 0
=
€€1 2
(
€€3 4
$num
€€4 5
-
€€6 7
(
€€8 9
(
€€9 :
characterInfos
€€: H
[
€€H I
i
€€I J
]
€€J K
.
€€K L
	vertex_BL
€€L U
.
€€U V
uv2
€€V Y
.
€€Y Z
x
€€Z [
+
€€\ ]
characterInfos
€€^ l
[
€€l m
i
€€m n
]
€€n o
.
€€o p
	vertex_TR
€€p y
.
€€y z
uv2
€€z }
.
€€} ~
x
€€~ 
)€€ Ä
/€€Å Ç
characterInfos€€É ë
[€€ë í
i€€í ì
]€€ì î
.€€î ï
aspectRatio€€ï †
)€€† °
)€€° ¢
/€€£ §
$num€€• ¶
;€€¶ ß
characterInfos
››$ 2
[
››2 3
i
››3 4
]
››4 5
.
››5 6
	vertex_BL
››6 ?
.
››? @
uv2
››@ C
.
››C D
y
››D E
=
››F G
yDelta
››H N
+
››O P
(
››Q R
characterInfos
››R `
[
››` a
i
››a b
]
››b c
.
››c d
	vertex_BL
››d m
.
››m n
uv2
››n q
.
››q r
x
››r s
/
››t u
characterInfos››v Ñ
[››Ñ Ö
i››Ö Ü
]››Ü á
.››á à
aspectRatio››à ì
)››ì î
;››î ï
characterInfos
ﬁﬁ$ 2
[
ﬁﬁ2 3
i
ﬁﬁ3 4
]
ﬁﬁ4 5
.
ﬁﬁ5 6
	vertex_TL
ﬁﬁ6 ?
.
ﬁﬁ? @
uv2
ﬁﬁ@ C
.
ﬁﬁC D
y
ﬁﬁD E
=
ﬁﬁF G
yDelta
ﬁﬁH N
+
ﬁﬁO P
(
ﬁﬁQ R
characterInfos
ﬁﬁR `
[
ﬁﬁ` a
i
ﬁﬁa b
]
ﬁﬁb c
.
ﬁﬁc d
	vertex_TR
ﬁﬁd m
.
ﬁﬁm n
uv2
ﬁﬁn q
.
ﬁﬁq r
x
ﬁﬁr s
/
ﬁﬁt u
characterInfosﬁﬁv Ñ
[ﬁﬁÑ Ö
iﬁﬁÖ Ü
]ﬁﬁÜ á
.ﬁﬁá à
aspectRatioﬁﬁà ì
)ﬁﬁì î
;ﬁﬁî ï
characterInfos
ﬂﬂ$ 2
[
ﬂﬂ2 3
i
ﬂﬂ3 4
]
ﬂﬂ4 5
.
ﬂﬂ5 6
	vertex_BR
ﬂﬂ6 ?
.
ﬂﬂ? @
uv2
ﬂﬂ@ C
.
ﬂﬂC D
y
ﬂﬂD E
=
ﬂﬂF G
characterInfos
ﬂﬂH V
[
ﬂﬂV W
i
ﬂﬂW X
]
ﬂﬂX Y
.
ﬂﬂY Z
	vertex_BL
ﬂﬂZ c
.
ﬂﬂc d
uv2
ﬂﬂd g
.
ﬂﬂg h
y
ﬂﬂh i
;
ﬂﬂi j
characterInfos
‡‡$ 2
[
‡‡2 3
i
‡‡3 4
]
‡‡4 5
.
‡‡5 6
	vertex_TR
‡‡6 ?
.
‡‡? @
uv2
‡‡@ C
.
‡‡C D
y
‡‡D E
=
‡‡F G
characterInfos
‡‡H V
[
‡‡V W
i
‡‡W X
]
‡‡X Y
.
‡‡Y Z
	vertex_TL
‡‡Z c
.
‡‡c d
uv2
‡‡d g
.
‡‡g h
y
‡‡h i
;
‡‡i j
break
··$ )
;
··) *
}
‚‚ 
xScale
ÁÁ "
=
ÁÁ# $
characterInfos
ÁÁ% 3
[
ÁÁ3 4
i
ÁÁ4 5
]
ÁÁ5 6
.
ÁÁ6 7
scale
ÁÁ7 <
*
ÁÁ= >
(
ÁÁ? @
$num
ÁÁ@ A
-
ÁÁB C!
m_charWidthAdjDelta
ÁÁD W
)
ÁÁW X
;
ÁÁX Y
if
ËË 
(
ËË  
!
ËË  !
characterInfos
ËË! /
[
ËË/ 0
i
ËË0 1
]
ËË1 2
.
ËË2 3&
isUsingAlternateTypeface
ËË3 K
&&
ËËL N
(
ËËO P
characterInfos
ËËP ^
[
ËË^ _
i
ËË_ `
]
ËË` a
.
ËËa b
style
ËËb g
&
ËËh i

FontStyles
ËËj t
.
ËËt u
Bold
ËËu y
)
ËËy z
==
ËË{ }

FontStylesËË~ à
.ËËà â
BoldËËâ ç
)ËËç é
xScaleËËè ï
*=ËËñ ò
-ËËô ö
$numËËö õ
;ËËõ ú
switch
ÍÍ "
(
ÍÍ# $
canvasRenderMode
ÍÍ$ 4
)
ÍÍ4 5
{
ÎÎ 
case
ÏÏ  $

RenderMode
ÏÏ% /
.
ÏÏ/ 0 
ScreenSpaceOverlay
ÏÏ0 B
:
ÏÏB C
xScale
ÌÌ$ *
*=
ÌÌ+ -
Mathf
ÌÌ. 3
.
ÌÌ3 4
Abs
ÌÌ4 7
(
ÌÌ7 8

lossyScale
ÌÌ8 B
)
ÌÌB C
/
ÌÌD E
canvasScaleFactor
ÌÌF W
;
ÌÌW X
break
ÓÓ$ )
;
ÓÓ) *
case
ÔÔ  $

RenderMode
ÔÔ% /
.
ÔÔ/ 0
ScreenSpaceCamera
ÔÔ0 A
:
ÔÔA B
xScale
$ *
*=
+ -
isCameraAssigned
. >
?
? @
Mathf
A F
.
F G
Abs
G J
(
J K

lossyScale
K U
)
U V
:
W X
$num
Y Z
;
Z [
break
ÒÒ$ )
;
ÒÒ) *
case
ÚÚ  $

RenderMode
ÚÚ% /
.
ÚÚ/ 0

WorldSpace
ÚÚ0 :
:
ÚÚ: ;
xScale
ÛÛ$ *
*=
ÛÛ+ -
Mathf
ÛÛ. 3
.
ÛÛ3 4
Abs
ÛÛ4 7
(
ÛÛ7 8

lossyScale
ÛÛ8 B
)
ÛÛB C
;
ÛÛC D
break
ÙÙ$ )
;
ÙÙ) *
}
ıı 
float
˛˛ !
x0
˛˛" $
=
˛˛% &
characterInfos
˛˛' 5
[
˛˛5 6
i
˛˛6 7
]
˛˛7 8
.
˛˛8 9
	vertex_BL
˛˛9 B
.
˛˛B C
uv2
˛˛C F
.
˛˛F G
x
˛˛G H
;
˛˛H I
float
ˇˇ !
y0
ˇˇ" $
=
ˇˇ% &
characterInfos
ˇˇ' 5
[
ˇˇ5 6
i
ˇˇ6 7
]
ˇˇ7 8
.
ˇˇ8 9
	vertex_BL
ˇˇ9 B
.
ˇˇB C
uv2
ˇˇC F
.
ˇˇF G
y
ˇˇG H
;
ˇˇH I
float
ÄÄ !
x1
ÄÄ" $
=
ÄÄ% &
characterInfos
ÄÄ' 5
[
ÄÄ5 6
i
ÄÄ6 7
]
ÄÄ7 8
.
ÄÄ8 9
	vertex_TR
ÄÄ9 B
.
ÄÄB C
uv2
ÄÄC F
.
ÄÄF G
x
ÄÄG H
;
ÄÄH I
float
ÅÅ !
y1
ÅÅ" $
=
ÅÅ% &
characterInfos
ÅÅ' 5
[
ÅÅ5 6
i
ÅÅ6 7
]
ÅÅ7 8
.
ÅÅ8 9
	vertex_TR
ÅÅ9 B
.
ÅÅB C
uv2
ÅÅC F
.
ÅÅF G
y
ÅÅG H
;
ÅÅH I
float
ÉÉ !
dx
ÉÉ" $
=
ÉÉ% &
(
ÉÉ' (
int
ÉÉ( +
)
ÉÉ+ ,
x0
ÉÉ, .
;
ÉÉ. /
float
ÑÑ !
dy
ÑÑ" $
=
ÑÑ% &
(
ÑÑ' (
int
ÑÑ( +
)
ÑÑ+ ,
y0
ÑÑ, .
;
ÑÑ. /
x0
ÜÜ 
=
ÜÜ  
x0
ÜÜ! #
-
ÜÜ$ %
dx
ÜÜ& (
;
ÜÜ( )
x1
áá 
=
áá  
x1
áá! #
-
áá$ %
dx
áá& (
;
áá( )
y0
àà 
=
àà  
y0
àà! #
-
àà$ %
dy
àà& (
;
àà( )
y1
ââ 
=
ââ  
y1
ââ! #
-
ââ$ %
dy
ââ& (
;
ââ( )
characterInfos
åå *
[
åå* +
i
åå+ ,
]
åå, -
.
åå- .
	vertex_BL
åå. 7
.
åå7 8
uv2
åå8 ;
.
åå; <
x
åå< =
=
åå> ?
PackUV
åå@ F
(
ååF G
x0
ååG I
,
ååI J
y0
ååK M
)
ååM N
;
ååN O
characterInfos
ååP ^
[
åå^ _
i
åå_ `
]
åå` a
.
ååa b
	vertex_BL
ååb k
.
ååk l
uv2
åål o
.
ååo p
y
ååp q
=
åår s
xScale
ååt z
;
ååz {
characterInfos
çç *
[
çç* +
i
çç+ ,
]
çç, -
.
çç- .
	vertex_TL
çç. 7
.
çç7 8
uv2
çç8 ;
.
çç; <
x
çç< =
=
çç> ?
PackUV
çç@ F
(
ççF G
x0
ççG I
,
ççI J
y1
ççK M
)
ççM N
;
ççN O
characterInfos
ççP ^
[
çç^ _
i
çç_ `
]
çç` a
.
çça b
	vertex_TL
ççb k
.
ççk l
uv2
ççl o
.
çço p
y
ççp q
=
ççr s
xScale
ççt z
;
ççz {
characterInfos
éé *
[
éé* +
i
éé+ ,
]
éé, -
.
éé- .
	vertex_TR
éé. 7
.
éé7 8
uv2
éé8 ;
.
éé; <
x
éé< =
=
éé> ?
PackUV
éé@ F
(
ééF G
x1
ééG I
,
ééI J
y1
ééK M
)
ééM N
;
ééN O
characterInfos
ééP ^
[
éé^ _
i
éé_ `
]
éé` a
.
ééa b
	vertex_TR
ééb k
.
éék l
uv2
éél o
.
ééo p
y
éép q
=
éér s
xScale
éét z
;
ééz {
characterInfos
èè *
[
èè* +
i
èè+ ,
]
èè, -
.
èè- .
	vertex_BR
èè. 7
.
èè7 8
uv2
èè8 ;
.
èè; <
x
èè< =
=
èè> ?
PackUV
èè@ F
(
èèF G
x1
èèG I
,
èèI J
y0
èèK M
)
èèM N
;
èèN O
characterInfos
èèP ^
[
èè^ _
i
èè_ `
]
èè` a
.
èèa b
	vertex_BR
èèb k
.
èèk l
uv2
èèl o
.
èèo p
y
èèp q
=
èèr s
xScale
èèt z
;
èèz {
break
ëë !
;
ëë! "
case
îî !
TMP_TextElementType
îî 0
.
îî0 1
Sprite
îî1 7
:
îî7 8
break
ññ !
;
ññ! "
}
óó 
if
õõ 
(
õõ 
i
õõ 
<
õõ $
m_maxVisibleCharacters
õõ 2
&&
õõ3 5
	wordCount
õõ6 ?
<
õõ@ A
m_maxVisibleWords
õõB S
&&
õõT V
currentLine
õõW b
<
õõc d
m_maxVisibleLines
õõe v
&&
õõw y
m_overflowModeõõz à
!=õõâ ã!
TextOverflowModesõõå ù
.õõù û
Pageõõû ¢
)õõ¢ £
{
úú 
characterInfos
ùù &
[
ùù& '
i
ùù' (
]
ùù( )
.
ùù) *
	vertex_BL
ùù* 3
.
ùù3 4
position
ùù4 <
+=
ùù= ?
offset
ùù@ F
;
ùùF G
characterInfos
ûû &
[
ûû& '
i
ûû' (
]
ûû( )
.
ûû) *
	vertex_TL
ûû* 3
.
ûû3 4
position
ûû4 <
+=
ûû= ?
offset
ûû@ F
;
ûûF G
characterInfos
üü &
[
üü& '
i
üü' (
]
üü( )
.
üü) *
	vertex_TR
üü* 3
.
üü3 4
position
üü4 <
+=
üü= ?
offset
üü@ F
;
üüF G
characterInfos
†† &
[
††& '
i
††' (
]
††( )
.
††) *
	vertex_BR
††* 3
.
††3 4
position
††4 <
+=
††= ?
offset
††@ F
;
††F G
}
°° 
else
¢¢ 
if
¢¢ 
(
¢¢ 
i
¢¢ 
<
¢¢  $
m_maxVisibleCharacters
¢¢! 7
&&
¢¢8 :
	wordCount
¢¢; D
<
¢¢E F
m_maxVisibleWords
¢¢G X
&&
¢¢Y [
currentLine
¢¢\ g
<
¢¢h i
m_maxVisibleLines
¢¢j {
&&
¢¢| ~
m_overflowMode¢¢ ç
==¢¢é ê!
TextOverflowModes¢¢ë ¢
.¢¢¢ £
Page¢¢£ ß
&&¢¢® ™
characterInfos¢¢´ π
[¢¢π ∫
i¢¢∫ ª
]¢¢ª º
.¢¢º Ω

pageNumber¢¢Ω «
==¢¢»  
pageToDisplay¢¢À ÿ
)¢¢ÿ Ÿ
{
££ 
characterInfos
§§ &
[
§§& '
i
§§' (
]
§§( )
.
§§) *
	vertex_BL
§§* 3
.
§§3 4
position
§§4 <
+=
§§= ?
offset
§§@ F
;
§§F G
characterInfos
•• &
[
••& '
i
••' (
]
••( )
.
••) *
	vertex_TL
••* 3
.
••3 4
position
••4 <
+=
••= ?
offset
••@ F
;
••F G
characterInfos
¶¶ &
[
¶¶& '
i
¶¶' (
]
¶¶( )
.
¶¶) *
	vertex_TR
¶¶* 3
.
¶¶3 4
position
¶¶4 <
+=
¶¶= ?
offset
¶¶@ F
;
¶¶F G
characterInfos
ßß &
[
ßß& '
i
ßß' (
]
ßß( )
.
ßß) *
	vertex_BR
ßß* 3
.
ßß3 4
position
ßß4 <
+=
ßß= ?
offset
ßß@ F
;
ßßF G
}
®® 
else
©© 
{
™™ 
characterInfos
´´ &
[
´´& '
i
´´' (
]
´´( )
.
´´) *
	vertex_BL
´´* 3
.
´´3 4
position
´´4 <
=
´´= >
Vector3
´´? F
.
´´F G
zero
´´G K
;
´´K L
characterInfos
¨¨ &
[
¨¨& '
i
¨¨' (
]
¨¨( )
.
¨¨) *
	vertex_TL
¨¨* 3
.
¨¨3 4
position
¨¨4 <
=
¨¨= >
Vector3
¨¨? F
.
¨¨F G
zero
¨¨G K
;
¨¨K L
characterInfos
≠≠ &
[
≠≠& '
i
≠≠' (
]
≠≠( )
.
≠≠) *
	vertex_TR
≠≠* 3
.
≠≠3 4
position
≠≠4 <
=
≠≠= >
Vector3
≠≠? F
.
≠≠F G
zero
≠≠G K
;
≠≠K L
characterInfos
ÆÆ &
[
ÆÆ& '
i
ÆÆ' (
]
ÆÆ( )
.
ÆÆ) *
	vertex_BR
ÆÆ* 3
.
ÆÆ3 4
position
ÆÆ4 <
=
ÆÆ= >
Vector3
ÆÆ? F
.
ÆÆF G
zero
ÆÆG K
;
ÆÆK L
characterInfos
ØØ &
[
ØØ& '
i
ØØ' (
]
ØØ( )
.
ØØ) *
	isVisible
ØØ* 3
=
ØØ4 5
false
ØØ6 ;
;
ØØ; <
}
∞∞ 
if
µµ 
(
µµ 
elementType
µµ #
==
µµ$ &!
TMP_TextElementType
µµ' :
.
µµ: ;
	Character
µµ; D
)
µµD E
{
∂∂ (
FillCharacterVertexBuffers
∑∑ 2
(
∑∑2 3
i
∑∑3 4
,
∑∑4 5
vert_index_X4
∑∑6 C
)
∑∑C D
;
∑∑D E
}
∏∏ 
else
ππ 
if
ππ 
(
ππ 
elementType
ππ (
==
ππ) +!
TMP_TextElementType
ππ, ?
.
ππ? @
Sprite
ππ@ F
)
ππF G
{
∫∫ %
FillSpriteVertexBuffers
ªª /
(
ªª/ 0
i
ªª0 1
,
ªª1 2
sprite_index_X4
ªª3 B
)
ªªB C
;
ªªC D
}
ºº 
}
ΩΩ 

m_textInfo
¡¡ 
.
¡¡ 
characterInfo
¡¡ (
[
¡¡( )
i
¡¡) *
]
¡¡* +
.
¡¡+ ,

bottomLeft
¡¡, 6
+=
¡¡7 9
offset
¡¡: @
;
¡¡@ A

m_textInfo
¬¬ 
.
¬¬ 
characterInfo
¬¬ (
[
¬¬( )
i
¬¬) *
]
¬¬* +
.
¬¬+ ,
topLeft
¬¬, 3
+=
¬¬4 6
offset
¬¬7 =
;
¬¬= >

m_textInfo
√√ 
.
√√ 
characterInfo
√√ (
[
√√( )
i
√√) *
]
√√* +
.
√√+ ,
topRight
√√, 4
+=
√√5 7
offset
√√8 >
;
√√> ?

m_textInfo
ƒƒ 
.
ƒƒ 
characterInfo
ƒƒ (
[
ƒƒ( )
i
ƒƒ) *
]
ƒƒ* +
.
ƒƒ+ ,
bottomRight
ƒƒ, 7
+=
ƒƒ8 :
offset
ƒƒ; A
;
ƒƒA B

m_textInfo
∆∆ 
.
∆∆ 
characterInfo
∆∆ (
[
∆∆( )
i
∆∆) *
]
∆∆* +
.
∆∆+ ,
origin
∆∆, 2
+=
∆∆3 5
offset
∆∆6 <
.
∆∆< =
x
∆∆= >
;
∆∆> ?

m_textInfo
«« 
.
«« 
characterInfo
«« (
[
««( )
i
««) *
]
««* +
.
««+ ,
xAdvance
««, 4
+=
««5 7
offset
««8 >
.
««> ?
x
««? @
;
««@ A

m_textInfo
…… 
.
…… 
characterInfo
…… (
[
……( )
i
……) *
]
……* +
.
……+ ,
ascender
……, 4
+=
……5 7
offset
……8 >
.
……> ?
y
……? @
;
……@ A

m_textInfo
   
.
   
characterInfo
   (
[
  ( )
i
  ) *
]
  * +
.
  + ,
	descender
  , 5
+=
  6 8
offset
  9 ?
.
  ? @
y
  @ A
;
  A B

m_textInfo
ÀÀ 
.
ÀÀ 
characterInfo
ÀÀ (
[
ÀÀ( )
i
ÀÀ) *
]
ÀÀ* +
.
ÀÀ+ ,
baseLine
ÀÀ, 4
+=
ÀÀ5 7
offset
ÀÀ8 >
.
ÀÀ> ?
y
ÀÀ? @
;
ÀÀ@ A
if
ŒŒ 
(
ŒŒ  
isCharacterVisible
ŒŒ &
)
ŒŒ& '
{
œœ 
}
““ 
if
÷÷ 
(
÷÷ 
currentLine
÷÷ 
!=
÷÷  "
lastLine
÷÷# +
||
÷÷, .
i
÷÷/ 0
==
÷÷1 3
m_characterCount
÷÷4 D
-
÷÷E F
$num
÷÷G H
)
÷÷H I
{
◊◊ 
if
ŸŸ 
(
ŸŸ 
currentLine
ŸŸ #
!=
ŸŸ$ &
lastLine
ŸŸ' /
)
ŸŸ/ 0
{
⁄⁄ 

m_textInfo
€€ "
.
€€" #
lineInfo
€€# +
[
€€+ ,
lastLine
€€, 4
]
€€4 5
.
€€5 6
baseline
€€6 >
+=
€€? A
offset
€€B H
.
€€H I
y
€€I J
;
€€J K

m_textInfo
‹‹ "
.
‹‹" #
lineInfo
‹‹# +
[
‹‹+ ,
lastLine
‹‹, 4
]
‹‹4 5
.
‹‹5 6
ascender
‹‹6 >
+=
‹‹? A
offset
‹‹B H
.
‹‹H I
y
‹‹I J
;
‹‹J K

m_textInfo
›› "
.
››" #
lineInfo
››# +
[
››+ ,
lastLine
››, 4
]
››4 5
.
››5 6
	descender
››6 ?
+=
››@ B
offset
››C I
.
››I J
y
››J K
;
››K L

m_textInfo
ﬂﬂ "
.
ﬂﬂ" #
lineInfo
ﬂﬂ# +
[
ﬂﬂ+ ,
lastLine
ﬂﬂ, 4
]
ﬂﬂ4 5
.
ﬂﬂ5 6

maxAdvance
ﬂﬂ6 @
+=
ﬂﬂA C
offset
ﬂﬂD J
.
ﬂﬂJ K
x
ﬂﬂK L
;
ﬂﬂL M

m_textInfo
·· "
.
··" #
lineInfo
··# +
[
··+ ,
lastLine
··, 4
]
··4 5
.
··5 6
lineExtents
··6 A
.
··A B
min
··B E
=
··F G
new
··H K
Vector2
··L S
(
··S T

m_textInfo
··T ^
.
··^ _
characterInfo
··_ l
[
··l m

m_textInfo
··m w
.
··w x
lineInfo··x Ä
[··Ä Å
lastLine··Å â
]··â ä
.··ä ã#
firstCharacterIndex··ã û
]··û ü
.··ü †

bottomLeft··† ™
.··™ ´
x··´ ¨
,··¨ ≠

m_textInfo··Æ ∏
.··∏ π
lineInfo··π ¡
[··¡ ¬
lastLine··¬  
]··  À
.··À Ã
	descender··Ã ’
)··’ ÷
;··÷ ◊

m_textInfo
‚‚ "
.
‚‚" #
lineInfo
‚‚# +
[
‚‚+ ,
lastLine
‚‚, 4
]
‚‚4 5
.
‚‚5 6
lineExtents
‚‚6 A
.
‚‚A B
max
‚‚B E
=
‚‚F G
new
‚‚H K
Vector2
‚‚L S
(
‚‚S T

m_textInfo
‚‚T ^
.
‚‚^ _
characterInfo
‚‚_ l
[
‚‚l m

m_textInfo
‚‚m w
.
‚‚w x
lineInfo‚‚x Ä
[‚‚Ä Å
lastLine‚‚Å â
]‚‚â ä
.‚‚ä ã)
lastVisibleCharacterIndex‚‚ã §
]‚‚§ •
.‚‚• ¶
topRight‚‚¶ Æ
.‚‚Æ Ø
x‚‚Ø ∞
,‚‚∞ ±

m_textInfo‚‚≤ º
.‚‚º Ω
lineInfo‚‚Ω ≈
[‚‚≈ ∆
lastLine‚‚∆ Œ
]‚‚Œ œ
.‚‚œ –
ascender‚‚– ÿ
)‚‚ÿ Ÿ
;‚‚Ÿ ⁄
}
„„ 
if
ÊÊ 
(
ÊÊ 
i
ÊÊ 
==
ÊÊ 
m_characterCount
ÊÊ -
-
ÊÊ. /
$num
ÊÊ0 1
)
ÊÊ1 2
{
ÁÁ 

m_textInfo
ËË "
.
ËË" #
lineInfo
ËË# +
[
ËË+ ,
currentLine
ËË, 7
]
ËË7 8
.
ËË8 9
baseline
ËË9 A
+=
ËËB D
offset
ËËE K
.
ËËK L
y
ËËL M
;
ËËM N

m_textInfo
ÈÈ "
.
ÈÈ" #
lineInfo
ÈÈ# +
[
ÈÈ+ ,
currentLine
ÈÈ, 7
]
ÈÈ7 8
.
ÈÈ8 9
ascender
ÈÈ9 A
+=
ÈÈB D
offset
ÈÈE K
.
ÈÈK L
y
ÈÈL M
;
ÈÈM N

m_textInfo
ÍÍ "
.
ÍÍ" #
lineInfo
ÍÍ# +
[
ÍÍ+ ,
currentLine
ÍÍ, 7
]
ÍÍ7 8
.
ÍÍ8 9
	descender
ÍÍ9 B
+=
ÍÍC E
offset
ÍÍF L
.
ÍÍL M
y
ÍÍM N
;
ÍÍN O

m_textInfo
ÏÏ "
.
ÏÏ" #
lineInfo
ÏÏ# +
[
ÏÏ+ ,
currentLine
ÏÏ, 7
]
ÏÏ7 8
.
ÏÏ8 9

maxAdvance
ÏÏ9 C
+=
ÏÏD F
offset
ÏÏG M
.
ÏÏM N
x
ÏÏN O
;
ÏÏO P

m_textInfo
ÓÓ "
.
ÓÓ" #
lineInfo
ÓÓ# +
[
ÓÓ+ ,
currentLine
ÓÓ, 7
]
ÓÓ7 8
.
ÓÓ8 9
lineExtents
ÓÓ9 D
.
ÓÓD E
min
ÓÓE H
=
ÓÓI J
new
ÓÓK N
Vector2
ÓÓO V
(
ÓÓV W

m_textInfo
ÓÓW a
.
ÓÓa b
characterInfo
ÓÓb o
[
ÓÓo p

m_textInfo
ÓÓp z
.
ÓÓz {
lineInfoÓÓ{ É
[ÓÓÉ Ñ
currentLineÓÓÑ è
]ÓÓè ê
.ÓÓê ë#
firstCharacterIndexÓÓë §
]ÓÓ§ •
.ÓÓ• ¶

bottomLeftÓÓ¶ ∞
.ÓÓ∞ ±
xÓÓ± ≤
,ÓÓ≤ ≥

m_textInfoÓÓ¥ æ
.ÓÓæ ø
lineInfoÓÓø «
[ÓÓ« »
currentLineÓÓ» ”
]ÓÓ” ‘
.ÓÓ‘ ’
	descenderÓÓ’ ﬁ
)ÓÓﬁ ﬂ
;ÓÓﬂ ‡

m_textInfo
ÔÔ "
.
ÔÔ" #
lineInfo
ÔÔ# +
[
ÔÔ+ ,
currentLine
ÔÔ, 7
]
ÔÔ7 8
.
ÔÔ8 9
lineExtents
ÔÔ9 D
.
ÔÔD E
max
ÔÔE H
=
ÔÔI J
new
ÔÔK N
Vector2
ÔÔO V
(
ÔÔV W

m_textInfo
ÔÔW a
.
ÔÔa b
characterInfo
ÔÔb o
[
ÔÔo p

m_textInfo
ÔÔp z
.
ÔÔz {
lineInfoÔÔ{ É
[ÔÔÉ Ñ
currentLineÔÔÑ è
]ÔÔè ê
.ÔÔê ë)
lastVisibleCharacterIndexÔÔë ™
]ÔÔ™ ´
.ÔÔ´ ¨
topRightÔÔ¨ ¥
.ÔÔ¥ µ
xÔÔµ ∂
,ÔÔ∂ ∑

m_textInfoÔÔ∏ ¬
.ÔÔ¬ √
lineInfoÔÔ√ À
[ÔÔÀ Ã
currentLineÔÔÃ ◊
]ÔÔ◊ ÿ
.ÔÔÿ Ÿ
ascenderÔÔŸ ·
)ÔÔ· ‚
;ÔÔ‚ „
}
 
}
ÒÒ 
if
˜˜ 
(
˜˜ 
char
˜˜ 
.
˜˜ 
IsLetterOrDigit
˜˜ (
(
˜˜( )
unicode
˜˜) 0
)
˜˜0 1
||
˜˜2 4
unicode
˜˜5 <
==
˜˜= ?
$num
˜˜@ D
||
˜˜E G
unicode
˜˜H O
==
˜˜P R
$num
˜˜S W
||
˜˜X Z
unicode
˜˜[ b
==
˜˜c e
$num
˜˜f l
||
˜˜m o
unicode
˜˜p w
==
˜˜x z
$num˜˜{ Å
)˜˜Å Ç
{
¯¯ 
if
˘˘ 
(
˘˘ 
isStartOfWord
˘˘ %
==
˘˘& (
false
˘˘) .
)
˘˘. /
{
˙˙ 
isStartOfWord
˚˚ %
=
˚˚& '
true
˚˚( ,
;
˚˚, -
wordFirstChar
¸¸ %
=
¸¸& '
i
¸¸( )
;
¸¸) *
}
˝˝ 
if
ÄÄ 
(
ÄÄ 
isStartOfWord
ÄÄ %
&&
ÄÄ& (
i
ÄÄ) *
==
ÄÄ+ -
m_characterCount
ÄÄ. >
-
ÄÄ? @
$num
ÄÄA B
)
ÄÄB C
{
ÅÅ 
int
ÇÇ 
size
ÇÇ  
=
ÇÇ! "

m_textInfo
ÇÇ# -
.
ÇÇ- .
wordInfo
ÇÇ. 6
.
ÇÇ6 7
Length
ÇÇ7 =
;
ÇÇ= >
int
ÉÉ 
index
ÉÉ !
=
ÉÉ" #

m_textInfo
ÉÉ$ .
.
ÉÉ. /
	wordCount
ÉÉ/ 8
;
ÉÉ8 9
if
ÖÖ 
(
ÖÖ 

m_textInfo
ÖÖ &
.
ÖÖ& '
	wordCount
ÖÖ' 0
+
ÖÖ1 2
$num
ÖÖ3 4
>
ÖÖ5 6
size
ÖÖ7 ;
)
ÖÖ; <
TMP_TextInfo
ÜÜ (
.
ÜÜ( )
Resize
ÜÜ) /
(
ÜÜ/ 0
ref
ÜÜ0 3

m_textInfo
ÜÜ4 >
.
ÜÜ> ?
wordInfo
ÜÜ? G
,
ÜÜG H
size
ÜÜI M
+
ÜÜN O
$num
ÜÜP Q
)
ÜÜQ R
;
ÜÜR S
wordLastChar
àà $
=
àà% &
i
àà' (
;
àà( )

m_textInfo
ää "
.
ää" #
wordInfo
ää# +
[
ää+ ,
index
ää, 1
]
ää1 2
.
ää2 3!
firstCharacterIndex
ää3 F
=
ääG H
wordFirstChar
ääI V
;
ääV W

m_textInfo
ãã "
.
ãã" #
wordInfo
ãã# +
[
ãã+ ,
index
ãã, 1
]
ãã1 2
.
ãã2 3 
lastCharacterIndex
ãã3 E
=
ããF G
wordLastChar
ããH T
;
ããT U

m_textInfo
åå "
.
åå" #
wordInfo
åå# +
[
åå+ ,
index
åå, 1
]
åå1 2
.
åå2 3
characterCount
åå3 A
=
ååB C
wordLastChar
ååD P
-
ååQ R
wordFirstChar
ååS `
+
ååa b
$num
ååc d
;
ååd e

m_textInfo
çç "
.
çç" #
wordInfo
çç# +
[
çç+ ,
index
çç, 1
]
çç1 2
.
çç2 3
textComponent
çç3 @
=
ççA B
this
ççC G
;
ççG H
	wordCount
èè !
+=
èè" $
$num
èè% &
;
èè& '

m_textInfo
êê "
.
êê" #
	wordCount
êê# ,
+=
êê- /
$num
êê0 1
;
êê1 2

m_textInfo
ëë "
.
ëë" #
lineInfo
ëë# +
[
ëë+ ,
currentLine
ëë, 7
]
ëë7 8
.
ëë8 9
	wordCount
ëë9 B
+=
ëëC E
$num
ëëF G
;
ëëG H
}
íí 
}
ìì 
else
îî 
if
îî 
(
îî 
isStartOfWord
îî &
||
îî' )
i
îî* +
==
îî, .
$num
îî/ 0
&&
îî1 3
(
îî4 5
!
îî5 6
char
îî6 :
.
îî: ;
IsPunctuation
îî; H
(
îîH I
unicode
îîI P
)
îîP Q
||
îîR T
char
îîU Y
.
îîY Z
IsWhiteSpace
îîZ f
(
îîf g
unicode
îîg n
)
îîn o
||
îîp r
unicode
îîs z
==
îî{ }
$numîî~ Ñ
||îîÖ á
iîîà â
==îîä å 
m_characterCountîîç ù
-îîû ü
$numîî† °
)îî° ¢
)îî¢ £
{
ïï 
if
ññ 
(
ññ 
i
ññ 
>
ññ 
$num
ññ 
&&
ññ  
i
ññ! "
<
ññ# $
characterInfos
ññ% 3
.
ññ3 4
Length
ññ4 :
-
ññ; <
$num
ññ= >
&&
ññ? A
i
ññB C
<
ññD E
m_characterCount
ññF V
&&
ññW Y
(
ññZ [
unicode
ññ[ b
==
ññc e
$num
ññf h
||
ññi k
unicode
ññl s
==
ññt v
$num
ññw {
)
ññ{ |
&&
ññ} 
charññÄ Ñ
.ññÑ Ö
IsLetterOrDigitññÖ î
(ññî ï
characterInfosññï £
[ññ£ §
iññ§ •
-ññ¶ ß
$numññ® ©
]ññ© ™
.ññ™ ´
	characterññ´ ¥
)ññ¥ µ
&&ññ∂ ∏
charññπ Ω
.ññΩ æ
IsLetterOrDigitññæ Õ
(ññÕ Œ
characterInfosññŒ ‹
[ññ‹ ›
iññ› ﬁ
+ññﬂ ‡
$numññ· ‚
]ññ‚ „
.ññ„ ‰
	characterññ‰ Ì
)ññÌ Ó
)ññÓ Ô
{
óó 
}
ôô 
else
öö 
{
õõ 
wordLastChar
úú $
=
úú% &
i
úú' (
==
úú) +
m_characterCount
úú, <
-
úú= >
$num
úú? @
&&
úúA C
char
úúD H
.
úúH I
IsLetterOrDigit
úúI X
(
úúX Y
unicode
úúY `
)
úú` a
?
úúb c
i
úúd e
:
úúf g
i
úúh i
-
úúj k
$num
úúl m
;
úúm n
isStartOfWord
ùù %
=
ùù& '
false
ùù( -
;
ùù- .
int
üü 
size
üü  
=
üü! "

m_textInfo
üü# -
.
üü- .
wordInfo
üü. 6
.
üü6 7
Length
üü7 =
;
üü= >
int
†† 
index
†† !
=
††" #

m_textInfo
††$ .
.
††. /
	wordCount
††/ 8
;
††8 9
if
¢¢ 
(
¢¢ 

m_textInfo
¢¢ &
.
¢¢& '
	wordCount
¢¢' 0
+
¢¢1 2
$num
¢¢3 4
>
¢¢5 6
size
¢¢7 ;
)
¢¢; <
TMP_TextInfo
££ (
.
££( )
Resize
££) /
(
££/ 0
ref
££0 3

m_textInfo
££4 >
.
££> ?
wordInfo
££? G
,
££G H
size
££I M
+
££N O
$num
££P Q
)
££Q R
;
££R S

m_textInfo
•• "
.
••" #
wordInfo
••# +
[
••+ ,
index
••, 1
]
••1 2
.
••2 3!
firstCharacterIndex
••3 F
=
••G H
wordFirstChar
••I V
;
••V W

m_textInfo
¶¶ "
.
¶¶" #
wordInfo
¶¶# +
[
¶¶+ ,
index
¶¶, 1
]
¶¶1 2
.
¶¶2 3 
lastCharacterIndex
¶¶3 E
=
¶¶F G
wordLastChar
¶¶H T
;
¶¶T U

m_textInfo
ßß "
.
ßß" #
wordInfo
ßß# +
[
ßß+ ,
index
ßß, 1
]
ßß1 2
.
ßß2 3
characterCount
ßß3 A
=
ßßB C
wordLastChar
ßßD P
-
ßßQ R
wordFirstChar
ßßS `
+
ßßa b
$num
ßßc d
;
ßßd e

m_textInfo
®® "
.
®®" #
wordInfo
®®# +
[
®®+ ,
index
®®, 1
]
®®1 2
.
®®2 3
textComponent
®®3 @
=
®®A B
this
®®C G
;
®®G H
	wordCount
™™ !
+=
™™" $
$num
™™% &
;
™™& '

m_textInfo
´´ "
.
´´" #
	wordCount
´´# ,
+=
´´- /
$num
´´0 1
;
´´1 2

m_textInfo
¨¨ "
.
¨¨" #
lineInfo
¨¨# +
[
¨¨+ ,
currentLine
¨¨, 7
]
¨¨7 8
.
¨¨8 9
	wordCount
¨¨9 B
+=
¨¨C E
$num
¨¨F G
;
¨¨G H
}
≠≠ 
}
ÆÆ 
bool
µµ 
isUnderline
µµ  
=
µµ! "
(
µµ# $

m_textInfo
µµ$ .
.
µµ. /
characterInfo
µµ/ <
[
µµ< =
i
µµ= >
]
µµ> ?
.
µµ? @
style
µµ@ E
&
µµF G

FontStyles
µµH R
.
µµR S
	Underline
µµS \
)
µµ\ ]
==
µµ^ `

FontStyles
µµa k
.
µµk l
	Underline
µµl u
;
µµu v
if
∂∂ 
(
∂∂ 
isUnderline
∂∂ 
)
∂∂  
{
∑∑ 
bool
∏∏  
isUnderlineVisible
∏∏ +
=
∏∏, -
true
∏∏. 2
;
∏∏2 3
int
ππ 
currentPage
ππ #
=
ππ$ %

m_textInfo
ππ& 0
.
ππ0 1
characterInfo
ππ1 >
[
ππ> ?
i
ππ? @
]
ππ@ A
.
ππA B

pageNumber
ππB L
;
ππL M

m_textInfo
∫∫ 
.
∫∫ 
characterInfo
∫∫ ,
[
∫∫, -
i
∫∫- .
]
∫∫. /
.
∫∫/ 0"
underlineVertexIndex
∫∫0 D
=
∫∫E F
last_vert_index
∫∫G V
;
∫∫V W
if
ºº 
(
ºº 
i
ºº 
>
ºº $
m_maxVisibleCharacters
ºº 2
||
ºº3 5
currentLine
ºº6 A
>
ººB C
m_maxVisibleLines
ººD U
||
ººV X
(
ººY Z
m_overflowMode
ººZ h
==
ººi k
TextOverflowModes
ººl }
.
ºº} ~
Pageºº~ Ç
&&ººÉ Ö
currentPageººÜ ë
+ººí ì
$numººî ï
!=ººñ ò
m_pageToDisplayººô ®
)ºº® ©
)ºº© ™ 
isUnderlineVisible
ΩΩ *
=
ΩΩ+ ,
false
ΩΩ- 2
;
ΩΩ2 3
if
¿¿ 
(
¿¿ 
!
¿¿ 
char
¿¿ 
.
¿¿ 
IsWhiteSpace
¿¿ *
(
¿¿* +
unicode
¿¿+ 2
)
¿¿2 3
&&
¿¿4 6
unicode
¿¿7 >
!=
¿¿? A
$num
¿¿B H
)
¿¿H I
{
¡¡ 
underlineMaxScale
¬¬ )
=
¬¬* +
Mathf
¬¬, 1
.
¬¬1 2
Max
¬¬2 5
(
¬¬5 6
underlineMaxScale
¬¬6 G
,
¬¬G H

m_textInfo
¬¬I S
.
¬¬S T
characterInfo
¬¬T a
[
¬¬a b
i
¬¬b c
]
¬¬c d
.
¬¬d e
scale
¬¬e j
)
¬¬j k
;
¬¬k l
	xScaleMax
√√ !
=
√√" #
Mathf
√√$ )
.
√√) *
Max
√√* -
(
√√- .
	xScaleMax
√√. 7
,
√√7 8
Mathf
√√9 >
.
√√> ?
Abs
√√? B
(
√√B C
xScale
√√C I
)
√√I J
)
√√J K
;
√√K L
underlineBaseLine
ƒƒ )
=
ƒƒ* +
Mathf
ƒƒ, 1
.
ƒƒ1 2
Min
ƒƒ2 5
(
ƒƒ5 6
currentPage
ƒƒ6 A
==
ƒƒB D
lastPage
ƒƒE M
?
ƒƒN O
underlineBaseLine
ƒƒP a
:
ƒƒb c"
k_LargePositiveFloat
ƒƒd x
,
ƒƒx y

m_textInfoƒƒz Ñ
.ƒƒÑ Ö
characterInfoƒƒÖ í
[ƒƒí ì
iƒƒì î
]ƒƒî ï
.ƒƒï ñ
baseLineƒƒñ û
+ƒƒü †
fontƒƒ° •
.ƒƒ• ¶

m_FaceInfoƒƒ¶ ∞
.ƒƒ∞ ±
underlineOffsetƒƒ± ¿
*ƒƒ¡ ¬!
underlineMaxScaleƒƒ√ ‘
)ƒƒ‘ ’
;ƒƒ’ ÷
lastPage
≈≈  
=
≈≈! "
currentPage
≈≈# .
;
≈≈. /
}
∆∆ 
if
»» 
(
»» 
beginUnderline
»» &
==
»»' )
false
»»* /
&&
»»0 2 
isUnderlineVisible
»»3 E
==
»»F H
true
»»I M
&&
»»N P
i
»»Q R
<=
»»S U
lineInfo
»»V ^
.
»»^ _'
lastVisibleCharacterIndex
»»_ x
&&
»»y {
unicode»»| É
!=»»Ñ Ü
$num»»á â
&&»»ä å
unicode»»ç î
!=»»ï ó
$num»»ò ö
&&»»õ ù
unicode»»û •
!=»»¶ ®
$num»»© ´
)»»´ ¨
{
…… 
if
   
(
   
i
   
==
    
lineInfo
  ! )
.
  ) *'
lastVisibleCharacterIndex
  * C
&&
  D F
char
  G K
.
  K L
IsSeparator
  L W
(
  W X
unicode
  X _
)
  _ `
)
  ` a
{
ÀÀ 
}
ÀÀ 
else
ÃÃ 
{
ÕÕ 
beginUnderline
ŒŒ *
=
ŒŒ+ ,
true
ŒŒ- 1
;
ŒŒ1 2!
underlineStartScale
œœ /
=
œœ0 1

m_textInfo
œœ2 <
.
œœ< =
characterInfo
œœ= J
[
œœJ K
i
œœK L
]
œœL M
.
œœM N
scale
œœN S
;
œœS T
if
–– 
(
––  
underlineMaxScale
––  1
==
––2 4
$num
––5 6
)
––6 7
{
—— 
underlineMaxScale
““  1
=
““2 3!
underlineStartScale
““4 G
;
““G H
	xScaleMax
””  )
=
””* +
xScale
””, 2
;
””2 3
}
‘‘ 
underline_start
’’ +
=
’’, -
new
’’. 1
Vector3
’’2 9
(
’’9 :

m_textInfo
’’: D
.
’’D E
characterInfo
’’E R
[
’’R S
i
’’S T
]
’’T U
.
’’U V

bottomLeft
’’V `
.
’’` a
x
’’a b
,
’’b c
underlineBaseLine
’’d u
,
’’u v
$num
’’w x
)
’’x y
;
’’y z
underlineColor
÷÷ *
=
÷÷+ ,

m_textInfo
÷÷- 7
.
÷÷7 8
characterInfo
÷÷8 E
[
÷÷E F
i
÷÷F G
]
÷÷G H
.
÷÷H I
underlineColor
÷÷I W
;
÷÷W X
}
◊◊ 
}
ÿÿ 
if
€€ 
(
€€ 
beginUnderline
€€ &
&&
€€' )
m_characterCount
€€* :
==
€€; =
$num
€€> ?
)
€€? @
{
‹‹ 
beginUnderline
›› &
=
››' (
false
››) .
;
››. /
underline_end
ﬁﬁ %
=
ﬁﬁ& '
new
ﬁﬁ( +
Vector3
ﬁﬁ, 3
(
ﬁﬁ3 4

m_textInfo
ﬁﬁ4 >
.
ﬁﬁ> ?
characterInfo
ﬁﬁ? L
[
ﬁﬁL M
i
ﬁﬁM N
]
ﬁﬁN O
.
ﬁﬁO P
topRight
ﬁﬁP X
.
ﬁﬁX Y
x
ﬁﬁY Z
,
ﬁﬁZ [
underlineBaseLine
ﬁﬁ\ m
,
ﬁﬁm n
$num
ﬁﬁo p
)
ﬁﬁp q
;
ﬁﬁq r
underlineEndScale
ﬂﬂ )
=
ﬂﬂ* +

m_textInfo
ﬂﬂ, 6
.
ﬂﬂ6 7
characterInfo
ﬂﬂ7 D
[
ﬂﬂD E
i
ﬂﬂE F
]
ﬂﬂF G
.
ﬂﬂG H
scale
ﬂﬂH M
;
ﬂﬂM N
DrawUnderlineMesh
·· )
(
··) *
underline_start
··* 9
,
··9 :
underline_end
··; H
,
··H I
ref
··J M
last_vert_index
··N ]
,
··] ^!
underlineStartScale
··_ r
,
··r s 
underlineEndScale··t Ö
,··Ö Ü!
underlineMaxScale··á ò
,··ò ô
	xScaleMax··ö £
,··£ §
underlineColor··• ≥
)··≥ ¥
;··¥ µ
underlineMaxScale
‚‚ )
=
‚‚* +
$num
‚‚, -
;
‚‚- .
	xScaleMax
„„ !
=
„„" #
$num
„„$ %
;
„„% &
underlineBaseLine
‰‰ )
=
‰‰* +"
k_LargePositiveFloat
‰‰, @
;
‰‰@ A
}
ÂÂ 
else
ÊÊ 
if
ÊÊ 
(
ÊÊ 
beginUnderline
ÊÊ +
&&
ÊÊ, .
(
ÊÊ/ 0
i
ÊÊ0 1
==
ÊÊ2 4
lineInfo
ÊÊ5 =
.
ÊÊ= > 
lastCharacterIndex
ÊÊ> P
||
ÊÊQ S
i
ÊÊT U
>=
ÊÊV X
lineInfo
ÊÊY a
.
ÊÊa b'
lastVisibleCharacterIndex
ÊÊb {
)
ÊÊ{ |
)
ÊÊ| }
{
ÁÁ 
if
ÈÈ 
(
ÈÈ 
char
ÈÈ  
.
ÈÈ  !
IsWhiteSpace
ÈÈ! -
(
ÈÈ- .
unicode
ÈÈ. 5
)
ÈÈ5 6
||
ÈÈ7 9
unicode
ÈÈ: A
==
ÈÈB D
$num
ÈÈE K
)
ÈÈK L
{
ÍÍ 
int
ÎÎ '
lastVisibleCharacterIndex
ÎÎ  9
=
ÎÎ: ;
lineInfo
ÎÎ< D
.
ÎÎD E'
lastVisibleCharacterIndex
ÎÎE ^
;
ÎÎ^ _
underline_end
ÏÏ )
=
ÏÏ* +
new
ÏÏ, /
Vector3
ÏÏ0 7
(
ÏÏ7 8

m_textInfo
ÏÏ8 B
.
ÏÏB C
characterInfo
ÏÏC P
[
ÏÏP Q'
lastVisibleCharacterIndex
ÏÏQ j
]
ÏÏj k
.
ÏÏk l
topRight
ÏÏl t
.
ÏÏt u
x
ÏÏu v
,
ÏÏv w 
underlineBaseLineÏÏx â
,ÏÏâ ä
$numÏÏã å
)ÏÏå ç
;ÏÏç é
underlineEndScale
ÌÌ -
=
ÌÌ. /

m_textInfo
ÌÌ0 :
.
ÌÌ: ;
characterInfo
ÌÌ; H
[
ÌÌH I'
lastVisibleCharacterIndex
ÌÌI b
]
ÌÌb c
.
ÌÌc d
scale
ÌÌd i
;
ÌÌi j
}
ÓÓ 
else
ÔÔ 
{
 
underline_end
ÒÒ )
=
ÒÒ* +
new
ÒÒ, /
Vector3
ÒÒ0 7
(
ÒÒ7 8

m_textInfo
ÒÒ8 B
.
ÒÒB C
characterInfo
ÒÒC P
[
ÒÒP Q
i
ÒÒQ R
]
ÒÒR S
.
ÒÒS T
topRight
ÒÒT \
.
ÒÒ\ ]
x
ÒÒ] ^
,
ÒÒ^ _
underlineBaseLine
ÒÒ` q
,
ÒÒq r
$num
ÒÒs t
)
ÒÒt u
;
ÒÒu v
underlineEndScale
ÚÚ -
=
ÚÚ. /

m_textInfo
ÚÚ0 :
.
ÚÚ: ;
characterInfo
ÚÚ; H
[
ÚÚH I
i
ÚÚI J
]
ÚÚJ K
.
ÚÚK L
scale
ÚÚL Q
;
ÚÚQ R
}
ÛÛ 
beginUnderline
ıı &
=
ıı' (
false
ıı) .
;
ıı. /
DrawUnderlineMesh
ˆˆ )
(
ˆˆ) *
underline_start
ˆˆ* 9
,
ˆˆ9 :
underline_end
ˆˆ; H
,
ˆˆH I
ref
ˆˆJ M
last_vert_index
ˆˆN ]
,
ˆˆ] ^!
underlineStartScale
ˆˆ_ r
,
ˆˆr s 
underlineEndScaleˆˆt Ö
,ˆˆÖ Ü!
underlineMaxScaleˆˆá ò
,ˆˆò ô
	xScaleMaxˆˆö £
,ˆˆ£ §
underlineColorˆˆ• ≥
)ˆˆ≥ ¥
;ˆˆ¥ µ
underlineMaxScale
˜˜ )
=
˜˜* +
$num
˜˜, -
;
˜˜- .
	xScaleMax
¯¯ !
=
¯¯" #
$num
¯¯$ %
;
¯¯% &
underlineBaseLine
˘˘ )
=
˘˘* +"
k_LargePositiveFloat
˘˘, @
;
˘˘@ A
}
˙˙ 
else
˚˚ 
if
˚˚ 
(
˚˚ 
beginUnderline
˚˚ +
&&
˚˚, .
!
˚˚/ 0 
isUnderlineVisible
˚˚0 B
)
˚˚B C
{
¸¸ 
beginUnderline
˝˝ &
=
˝˝' (
false
˝˝) .
;
˝˝. /
underline_end
˛˛ %
=
˛˛& '
new
˛˛( +
Vector3
˛˛, 3
(
˛˛3 4

m_textInfo
˛˛4 >
.
˛˛> ?
characterInfo
˛˛? L
[
˛˛L M
i
˛˛M N
-
˛˛O P
$num
˛˛Q R
]
˛˛R S
.
˛˛S T
topRight
˛˛T \
.
˛˛\ ]
x
˛˛] ^
,
˛˛^ _
underlineBaseLine
˛˛` q
,
˛˛q r
$num
˛˛s t
)
˛˛t u
;
˛˛u v
underlineEndScale
ˇˇ )
=
ˇˇ* +

m_textInfo
ˇˇ, 6
.
ˇˇ6 7
characterInfo
ˇˇ7 D
[
ˇˇD E
i
ˇˇE F
-
ˇˇG H
$num
ˇˇI J
]
ˇˇJ K
.
ˇˇK L
scale
ˇˇL Q
;
ˇˇQ R
DrawUnderlineMesh
Å Å  )
(
Å Å ) *
underline_start
Å Å * 9
,
Å Å 9 :
underline_end
Å Å ; H
,
Å Å H I
ref
Å Å J M
last_vert_index
Å Å N ]
,
Å Å ] ^!
underlineStartScale
Å Å _ r
,
Å Å r s 
underlineEndScaleÅ Å t Ö
,Å Å Ö Ü!
underlineMaxScaleÅ Å á ò
,Å Å ò ô
	xScaleMaxÅ Å ö £
,Å Å £ §
underlineColorÅ Å • ≥
)Å Å ≥ ¥
;Å Å ¥ µ
underlineMaxScale
Ç Ç  )
=
Ç Ç * +
$num
Ç Ç , -
;
Ç Ç - .
	xScaleMax
É É  !
=
É É " #
$num
É É $ %
;
É É % &
underlineBaseLine
Ñ Ñ  )
=
Ñ Ñ * +"
k_LargePositiveFloat
Ñ Ñ , @
;
Ñ Ñ @ A
}
Ö Ö  
else
Ü Ü  
if
Ü Ü  
(
Ü Ü  
beginUnderline
Ü Ü  +
&&
Ü Ü , .
i
Ü Ü / 0
<
Ü Ü 1 2
m_characterCount
Ü Ü 3 C
-
Ü Ü D E
$num
Ü Ü F G
&&
Ü Ü H J
!
Ü Ü K L
underlineColor
Ü Ü L Z
.
Ü Ü Z [
Compare
Ü Ü [ b
(
Ü Ü b c

m_textInfo
Ü Ü c m
.
Ü Ü m n
characterInfo
Ü Ü n {
[
Ü Ü { |
i
Ü Ü | }
+
Ü Ü ~ 
$numÜ Ü Ä Å
]Ü Ü Å Ç
.Ü Ü Ç É
underlineColorÜ Ü É ë
)Ü Ü ë í
)Ü Ü í ì
{
á á  
beginUnderline
â â  &
=
â â ' (
false
â â ) .
;
â â . /
underline_end
ä ä  %
=
ä ä & '
new
ä ä ( +
Vector3
ä ä , 3
(
ä ä 3 4

m_textInfo
ä ä 4 >
.
ä ä > ?
characterInfo
ä ä ? L
[
ä ä L M
i
ä ä M N
]
ä ä N O
.
ä ä O P
topRight
ä ä P X
.
ä ä X Y
x
ä ä Y Z
,
ä ä Z [
underlineBaseLine
ä ä \ m
,
ä ä m n
$num
ä ä o p
)
ä ä p q
;
ä ä q r
underlineEndScale
ã ã  )
=
ã ã * +

m_textInfo
ã ã , 6
.
ã ã 6 7
characterInfo
ã ã 7 D
[
ã ã D E
i
ã ã E F
]
ã ã F G
.
ã ã G H
scale
ã ã H M
;
ã ã M N
DrawUnderlineMesh
ç ç  )
(
ç ç ) *
underline_start
ç ç * 9
,
ç ç 9 :
underline_end
ç ç ; H
,
ç ç H I
ref
ç ç J M
last_vert_index
ç ç N ]
,
ç ç ] ^!
underlineStartScale
ç ç _ r
,
ç ç r s 
underlineEndScaleç ç t Ö
,ç ç Ö Ü!
underlineMaxScaleç ç á ò
,ç ç ò ô
	xScaleMaxç ç ö £
,ç ç £ §
underlineColorç ç • ≥
)ç ç ≥ ¥
;ç ç ¥ µ
underlineMaxScale
é é  )
=
é é * +
$num
é é , -
;
é é - .
	xScaleMax
è è  !
=
è è " #
$num
è è $ %
;
è è % &
underlineBaseLine
ê ê  )
=
ê ê * +"
k_LargePositiveFloat
ê ê , @
;
ê ê @ A
}
ë ë  
}
í í  
else
ì ì  
{
î î  
if
ñ ñ  
(
ñ ñ  
beginUnderline
ñ ñ  &
==
ñ ñ ' )
true
ñ ñ * .
)
ñ ñ . /
{
ó ó  
beginUnderline
ò ò  &
=
ò ò ' (
false
ò ò ) .
;
ò ò . /
underline_end
ô ô  %
=
ô ô & '
new
ô ô ( +
Vector3
ô ô , 3
(
ô ô 3 4

m_textInfo
ô ô 4 >
.
ô ô > ?
characterInfo
ô ô ? L
[
ô ô L M
i
ô ô M N
-
ô ô O P
$num
ô ô Q R
]
ô ô R S
.
ô ô S T
topRight
ô ô T \
.
ô ô \ ]
x
ô ô ] ^
,
ô ô ^ _
underlineBaseLine
ô ô ` q
,
ô ô q r
$num
ô ô s t
)
ô ô t u
;
ô ô u v
underlineEndScale
ö ö  )
=
ö ö * +

m_textInfo
ö ö , 6
.
ö ö 6 7
characterInfo
ö ö 7 D
[
ö ö D E
i
ö ö E F
-
ö ö G H
$num
ö ö I J
]
ö ö J K
.
ö ö K L
scale
ö ö L Q
;
ö ö Q R
DrawUnderlineMesh
ú ú  )
(
ú ú ) *
underline_start
ú ú * 9
,
ú ú 9 :
underline_end
ú ú ; H
,
ú ú H I
ref
ú ú J M
last_vert_index
ú ú N ]
,
ú ú ] ^!
underlineStartScale
ú ú _ r
,
ú ú r s 
underlineEndScaleú ú t Ö
,ú ú Ö Ü!
underlineMaxScaleú ú á ò
,ú ú ò ô
	xScaleMaxú ú ö £
,ú ú £ §
underlineColorú ú • ≥
)ú ú ≥ ¥
;ú ú ¥ µ
underlineMaxScale
ù ù  )
=
ù ù * +
$num
ù ù , -
;
ù ù - .
	xScaleMax
û û  !
=
û û " #
$num
û û $ %
;
û û % &
underlineBaseLine
ü ü  )
=
ü ü * +"
k_LargePositiveFloat
ü ü , @
;
ü ü @ A
}
† †  
}
° °  
bool
® ®  
isStrikethrough
® ®  $
=
® ® % &
(
® ® ' (

m_textInfo
® ® ( 2
.
® ® 2 3
characterInfo
® ® 3 @
[
® ® @ A
i
® ® A B
]
® ® B C
.
® ® C D
style
® ® D I
&
® ® J K

FontStyles
® ® L V
.
® ® V W
Strikethrough
® ® W d
)
® ® d e
==
® ® f h

FontStyles
® ® i s
.
® ® s t
Strikethrough® ® t Å
;® ® Å Ç
float
© ©  !
strikethroughOffset
© ©  )
=
© © * +
currentFontAsset
© © , <
.
© © < =

m_FaceInfo
© © = G
.
© © G H!
strikethroughOffset
© © H [
;
© © [ \
if
´ ´  
(
´ ´  
isStrikethrough
´ ´  #
)
´ ´ # $
{
¨ ¨  
bool
≠ ≠  $
isStrikeThroughVisible
≠ ≠  /
=
≠ ≠ 0 1
true
≠ ≠ 2 6
;
≠ ≠ 6 7

m_textInfo
Æ Æ  
.
Æ Æ  
characterInfo
Æ Æ  ,
[
Æ Æ , -
i
Æ Æ - .
]
Æ Æ . /
.
Æ Æ / 0&
strikethroughVertexIndex
Æ Æ 0 H
=
Æ Æ I J
last_vert_index
Æ Æ K Z
;
Æ Æ Z [
if
∞ ∞  
(
∞ ∞  
i
∞ ∞  
>
∞ ∞  $
m_maxVisibleCharacters
∞ ∞  2
||
∞ ∞ 3 5
currentLine
∞ ∞ 6 A
>
∞ ∞ B C
m_maxVisibleLines
∞ ∞ D U
||
∞ ∞ V X
(
∞ ∞ Y Z
m_overflowMode
∞ ∞ Z h
==
∞ ∞ i k
TextOverflowModes
∞ ∞ l }
.
∞ ∞ } ~
Page∞ ∞ ~ Ç
&&∞ ∞ É Ö

m_textInfo∞ ∞ Ü ê
.∞ ∞ ê ë
characterInfo∞ ∞ ë û
[∞ ∞ û ü
i∞ ∞ ü †
]∞ ∞ † °
.∞ ∞ ° ¢

pageNumber∞ ∞ ¢ ¨
+∞ ∞ ≠ Æ
$num∞ ∞ Ø ∞
!=∞ ∞ ± ≥
m_pageToDisplay∞ ∞ ¥ √
)∞ ∞ √ ƒ
)∞ ∞ ƒ ≈$
isStrikeThroughVisible
± ±  .
=
± ± / 0
false
± ± 1 6
;
± ± 6 7
if
≥ ≥  
(
≥ ≥   
beginStrikethrough
≥ ≥  *
==
≥ ≥ + -
false
≥ ≥ . 3
&&
≥ ≥ 4 6$
isStrikeThroughVisible
≥ ≥ 7 M
&&
≥ ≥ N P
i
≥ ≥ Q R
<=
≥ ≥ S U
lineInfo
≥ ≥ V ^
.
≥ ≥ ^ _'
lastVisibleCharacterIndex
≥ ≥ _ x
&&
≥ ≥ y {
unicode≥ ≥ | É
!=≥ ≥ Ñ Ü
$num≥ ≥ á â
&&≥ ≥ ä å
unicode≥ ≥ ç î
!=≥ ≥ ï ó
$num≥ ≥ ò ö
&&≥ ≥ õ ù
unicode≥ ≥ û •
!=≥ ≥ ¶ ®
$num≥ ≥ © ´
)≥ ≥ ´ ¨
{
¥ ¥  
if
µ µ  
(
µ µ  
i
µ µ  
==
µ µ   
lineInfo
µ µ ! )
.
µ µ ) *'
lastVisibleCharacterIndex
µ µ * C
&&
µ µ D F
char
µ µ G K
.
µ µ K L
IsSeparator
µ µ L W
(
µ µ W X
unicode
µ µ X _
)
µ µ _ `
)
µ µ ` a
{
∂ ∂  
}
∂ ∂  
else
∑ ∑  
{
∏ ∏   
beginStrikethrough
π π  .
=
π π / 0
true
π π 1 5
;
π π 5 6$
strikethroughPointSize
∫ ∫  2
=
∫ ∫ 3 4

m_textInfo
∫ ∫ 5 ?
.
∫ ∫ ? @
characterInfo
∫ ∫ @ M
[
∫ ∫ M N
i
∫ ∫ N O
]
∫ ∫ O P
.
∫ ∫ P Q
	pointSize
∫ ∫ Q Z
;
∫ ∫ Z [ 
strikethroughScale
ª ª  .
=
ª ª / 0

m_textInfo
ª ª 1 ;
.
ª ª ; <
characterInfo
ª ª < I
[
ª ª I J
i
ª ª J K
]
ª ª K L
.
ª ª L M
scale
ª ª M R
;
ª ª R S!
strikethrough_start
º º  /
=
º º 0 1
new
º º 2 5
Vector3
º º 6 =
(
º º = >

m_textInfo
º º > H
.
º º H I
characterInfo
º º I V
[
º º V W
i
º º W X
]
º º X Y
.
º º Y Z

bottomLeft
º º Z d
.
º º d e
x
º º e f
,
º º f g

m_textInfo
º º h r
.
º º r s
characterInfoº º s Ä
[º º Ä Å
iº º Å Ç
]º º Ç É
.º º É Ñ
baseLineº º Ñ å
+º º ç é#
strikethroughOffsetº º è ¢
*º º £ §"
strikethroughScaleº º • ∑
,º º ∑ ∏
$numº º π ∫
)º º ∫ ª
;º º ª º 
strikethroughColor
Ω Ω  .
=
Ω Ω / 0

m_textInfo
Ω Ω 1 ;
.
Ω Ω ; <
characterInfo
Ω Ω < I
[
Ω Ω I J
i
Ω Ω J K
]
Ω Ω K L
.
Ω Ω L M 
strikethroughColor
Ω Ω M _
;
Ω Ω _ `#
strikethroughBaseline
æ æ  1
=
æ æ 2 3

m_textInfo
æ æ 4 >
.
æ æ > ?
characterInfo
æ æ ? L
[
æ æ L M
i
æ æ M N
]
æ æ N O
.
æ æ O P
baseLine
æ æ P X
;
æ æ X Y
}
¿ ¿  
}
¡ ¡  
if
ƒ ƒ  
(
ƒ ƒ   
beginStrikethrough
ƒ ƒ  *
&&
ƒ ƒ + -
m_characterCount
ƒ ƒ . >
==
ƒ ƒ ? A
$num
ƒ ƒ B C
)
ƒ ƒ C D
{
≈ ≈   
beginStrikethrough
∆ ∆  *
=
∆ ∆ + ,
false
∆ ∆ - 2
;
∆ ∆ 2 3
strikethrough_end
« «  )
=
« « * +
new
« « , /
Vector3
« « 0 7
(
« « 7 8

m_textInfo
« « 8 B
.
« « B C
characterInfo
« « C P
[
« « P Q
i
« « Q R
]
« « R S
.
« « S T
topRight
« « T \
.
« « \ ]
x
« « ] ^
,
« « ^ _

m_textInfo
« « ` j
.
« « j k
characterInfo
« « k x
[
« « x y
i
« « y z
]
« « z {
.
« « { |
baseLine« « | Ñ
+« « Ö Ü#
strikethroughOffset« « á ö
*« « õ ú"
strikethroughScale« « ù Ø
,« « Ø ∞
$num« « ± ≤
)« « ≤ ≥
;« « ≥ ¥
DrawUnderlineMesh
… …  )
(
… … ) *!
strikethrough_start
… … * =
,
… … = >
strikethrough_end
… … ? P
,
… … P Q
ref
… … R U
last_vert_index
… … V e
,
… … e f 
strikethroughScale
… … g y
,
… … y z!
strikethroughScale… … { ç
,… … ç é"
strikethroughScale… … è °
,… … ° ¢
xScale… … £ ©
,… … © ™"
strikethroughColor… … ´ Ω
)… … Ω æ
;… … æ ø
}
     
else
À À  
if
À À  
(
À À   
beginStrikethrough
À À  /
&&
À À 0 2
i
À À 3 4
==
À À 5 7
lineInfo
À À 8 @
.
À À @ A 
lastCharacterIndex
À À A S
)
À À S T
{
Ã Ã  
if
Œ Œ  
(
Œ Œ  
char
Œ Œ   
.
Œ Œ   !
IsWhiteSpace
Œ Œ ! -
(
Œ Œ - .
unicode
Œ Œ . 5
)
Œ Œ 5 6
||
Œ Œ 7 9
unicode
Œ Œ : A
==
Œ Œ B D
$num
Œ Œ E K
)
Œ Œ K L
{
œ œ  
int
– –  '
lastVisibleCharacterIndex
– –   9
=
– – : ;
lineInfo
– – < D
.
– – D E'
lastVisibleCharacterIndex
– – E ^
;
– – ^ _
strikethrough_end
— —  -
=
— — . /
new
— — 0 3
Vector3
— — 4 ;
(
— — ; <

m_textInfo
— — < F
.
— — F G
characterInfo
— — G T
[
— — T U'
lastVisibleCharacterIndex
— — U n
]
— — n o
.
— — o p
topRight
— — p x
.
— — x y
x
— — y z
,
— — z {

m_textInfo— — | Ü
.— — Ü á
characterInfo— — á î
[— — î ï)
lastVisibleCharacterIndex— — ï Æ
]— — Æ Ø
.— — Ø ∞
baseLine— — ∞ ∏
+— — π ∫#
strikethroughOffset— — ª Œ
*— — œ –"
strikethroughScale— — — „
,— — „ ‰
$num— — Â Ê
)— — Ê Á
;— — Á Ë
}
“ “  
else
” ”  
{
‘ ‘  
strikethrough_end
÷ ÷  -
=
÷ ÷ . /
new
÷ ÷ 0 3
Vector3
÷ ÷ 4 ;
(
÷ ÷ ; <

m_textInfo
÷ ÷ < F
.
÷ ÷ F G
characterInfo
÷ ÷ G T
[
÷ ÷ T U
i
÷ ÷ U V
]
÷ ÷ V W
.
÷ ÷ W X
topRight
÷ ÷ X `
.
÷ ÷ ` a
x
÷ ÷ a b
,
÷ ÷ b c

m_textInfo
÷ ÷ d n
.
÷ ÷ n o
characterInfo
÷ ÷ o |
[
÷ ÷ | }
i
÷ ÷ } ~
]
÷ ÷ ~ 
.÷ ÷  Ä
baseLine÷ ÷ Ä à
+÷ ÷ â ä#
strikethroughOffset÷ ÷ ã û
*÷ ÷ ü †"
strikethroughScale÷ ÷ ° ≥
,÷ ÷ ≥ ¥
$num÷ ÷ µ ∂
)÷ ÷ ∂ ∑
;÷ ÷ ∑ ∏
}
◊ ◊   
beginStrikethrough
Ÿ Ÿ  *
=
Ÿ Ÿ + ,
false
Ÿ Ÿ - 2
;
Ÿ Ÿ 2 3
DrawUnderlineMesh
⁄ ⁄  )
(
⁄ ⁄ ) *!
strikethrough_start
⁄ ⁄ * =
,
⁄ ⁄ = >
strikethrough_end
⁄ ⁄ ? P
,
⁄ ⁄ P Q
ref
⁄ ⁄ R U
last_vert_index
⁄ ⁄ V e
,
⁄ ⁄ e f 
strikethroughScale
⁄ ⁄ g y
,
⁄ ⁄ y z!
strikethroughScale⁄ ⁄ { ç
,⁄ ⁄ ç é"
strikethroughScale⁄ ⁄ è °
,⁄ ⁄ ° ¢
xScale⁄ ⁄ £ ©
,⁄ ⁄ © ™"
strikethroughColor⁄ ⁄ ´ Ω
)⁄ ⁄ Ω æ
;⁄ ⁄ æ ø
}
€ €  
else
‹ ‹  
if
‹ ‹  
(
‹ ‹   
beginStrikethrough
‹ ‹  /
&&
‹ ‹ 0 2
i
‹ ‹ 3 4
<
‹ ‹ 5 6
m_characterCount
‹ ‹ 7 G
&&
‹ ‹ H J
(
‹ ‹ K L

m_textInfo
‹ ‹ L V
.
‹ ‹ V W
characterInfo
‹ ‹ W d
[
‹ ‹ d e
i
‹ ‹ e f
+
‹ ‹ g h
$num
‹ ‹ i j
]
‹ ‹ j k
.
‹ ‹ k l
	pointSize
‹ ‹ l u
!=
‹ ‹ v x%
strikethroughPointSize‹ ‹ y è
||‹ ‹ ê í
!‹ ‹ ì î
TMP_Math‹ ‹ î ú
.‹ ‹ ú ù
Approximately‹ ‹ ù ™
(‹ ‹ ™ ´

m_textInfo‹ ‹ ´ µ
.‹ ‹ µ ∂
characterInfo‹ ‹ ∂ √
[‹ ‹ √ ƒ
i‹ ‹ ƒ ≈
+‹ ‹ ∆ «
$num‹ ‹ » …
]‹ ‹ …  
.‹ ‹   À
baseLine‹ ‹ À ”
+‹ ‹ ‘ ’
offset‹ ‹ ÷ ‹
.‹ ‹ ‹ ›
y‹ ‹ › ﬁ
,‹ ‹ ﬁ ﬂ%
strikethroughBaseline‹ ‹ ‡ ı
)‹ ‹ ı ˆ
)‹ ‹ ˆ ˜
)‹ ‹ ˜ ¯
{
› ›   
beginStrikethrough
ﬂ ﬂ  *
=
ﬂ ﬂ + ,
false
ﬂ ﬂ - 2
;
ﬂ ﬂ 2 3
int
· ·  '
lastVisibleCharacterIndex
· ·  5
=
· · 6 7
lineInfo
· · 8 @
.
· · @ A'
lastVisibleCharacterIndex
· · A Z
;
· · Z [
if
‚ ‚  
(
‚ ‚  
i
‚ ‚  
>
‚ ‚  '
lastVisibleCharacterIndex
‚ ‚   9
)
‚ ‚ 9 :
strikethrough_end
„ „  -
=
„ „ . /
new
„ „ 0 3
Vector3
„ „ 4 ;
(
„ „ ; <

m_textInfo
„ „ < F
.
„ „ F G
characterInfo
„ „ G T
[
„ „ T U'
lastVisibleCharacterIndex
„ „ U n
]
„ „ n o
.
„ „ o p
topRight
„ „ p x
.
„ „ x y
x
„ „ y z
,
„ „ z {

m_textInfo„ „ | Ü
.„ „ Ü á
characterInfo„ „ á î
[„ „ î ï)
lastVisibleCharacterIndex„ „ ï Æ
]„ „ Æ Ø
.„ „ Ø ∞
baseLine„ „ ∞ ∏
+„ „ π ∫#
strikethroughOffset„ „ ª Œ
*„ „ œ –"
strikethroughScale„ „ — „
,„ „ „ ‰
$num„ „ Â Ê
)„ „ Ê Á
;„ „ Á Ë
else
‰ ‰  
strikethrough_end
Â Â  -
=
Â Â . /
new
Â Â 0 3
Vector3
Â Â 4 ;
(
Â Â ; <

m_textInfo
Â Â < F
.
Â Â F G
characterInfo
Â Â G T
[
Â Â T U
i
Â Â U V
]
Â Â V W
.
Â Â W X
topRight
Â Â X `
.
Â Â ` a
x
Â Â a b
,
Â Â b c

m_textInfo
Â Â d n
.
Â Â n o
characterInfo
Â Â o |
[
Â Â | }
i
Â Â } ~
]
Â Â ~ 
.Â Â  Ä
baseLineÂ Â Ä à
+Â Â â ä#
strikethroughOffsetÂ Â ã û
*Â Â ü †"
strikethroughScaleÂ Â ° ≥
,Â Â ≥ ¥
$numÂ Â µ ∂
)Â Â ∂ ∑
;Â Â ∑ ∏
DrawUnderlineMesh
Á Á  )
(
Á Á ) *!
strikethrough_start
Á Á * =
,
Á Á = >
strikethrough_end
Á Á ? P
,
Á Á P Q
ref
Á Á R U
last_vert_index
Á Á V e
,
Á Á e f 
strikethroughScale
Á Á g y
,
Á Á y z!
strikethroughScaleÁ Á { ç
,Á Á ç é"
strikethroughScaleÁ Á è °
,Á Á ° ¢
xScaleÁ Á £ ©
,Á Á © ™"
strikethroughColorÁ Á ´ Ω
)Á Á Ω æ
;Á Á æ ø
}
È È  
else
Í Í  
if
Í Í  
(
Í Í   
beginStrikethrough
Í Í  /
&&
Í Í 0 2
i
Í Í 3 4
<
Í Í 5 6
m_characterCount
Í Í 7 G
&&
Í Í H J
currentFontAsset
Í Í K [
.
Í Í [ \
GetInstanceID
Í Í \ i
(
Í Í i j
)
Í Í j k
!=
Í Í l n
characterInfos
Í Í o }
[
Í Í } ~
i
Í Í ~ 
+Í Í Ä Å
$numÍ Í Ç É
]Í Í É Ñ
.Í Í Ñ Ö
	fontAssetÍ Í Ö é
.Í Í é è
GetInstanceIDÍ Í è ú
(Í Í ú ù
)Í Í ù û
)Í Í û ü
{
Î Î   
beginStrikethrough
Ì Ì  *
=
Ì Ì + ,
false
Ì Ì - 2
;
Ì Ì 2 3
strikethrough_end
Ó Ó  )
=
Ó Ó * +
new
Ó Ó , /
Vector3
Ó Ó 0 7
(
Ó Ó 7 8

m_textInfo
Ó Ó 8 B
.
Ó Ó B C
characterInfo
Ó Ó C P
[
Ó Ó P Q
i
Ó Ó Q R
]
Ó Ó R S
.
Ó Ó S T
topRight
Ó Ó T \
.
Ó Ó \ ]
x
Ó Ó ] ^
,
Ó Ó ^ _

m_textInfo
Ó Ó ` j
.
Ó Ó j k
characterInfo
Ó Ó k x
[
Ó Ó x y
i
Ó Ó y z
]
Ó Ó z {
.
Ó Ó { |
baseLineÓ Ó | Ñ
+Ó Ó Ö Ü#
strikethroughOffsetÓ Ó á ö
*Ó Ó õ ú"
strikethroughScaleÓ Ó ù Ø
,Ó Ó Ø ∞
$numÓ Ó ± ≤
)Ó Ó ≤ ≥
;Ó Ó ≥ ¥
DrawUnderlineMesh
   )
(
  ) *!
strikethrough_start
  * =
,
  = >
strikethrough_end
  ? P
,
  P Q
ref
  R U
last_vert_index
  V e
,
  e f 
strikethroughScale
  g y
,
  y z!
strikethroughScale  { ç
,  ç é"
strikethroughScale  è °
,  ° ¢
xScale  £ ©
,  © ™"
strikethroughColor  ´ Ω
)  Ω æ
;  æ ø
}
Ò Ò  
else
Ú Ú  
if
Ú Ú  
(
Ú Ú   
beginStrikethrough
Ú Ú  /
&&
Ú Ú 0 2
!
Ú Ú 3 4$
isStrikeThroughVisible
Ú Ú 4 J
)
Ú Ú J K
{
Û Û   
beginStrikethrough
ı ı  *
=
ı ı + ,
false
ı ı - 2
;
ı ı 2 3
strikethrough_end
ˆ ˆ  )
=
ˆ ˆ * +
new
ˆ ˆ , /
Vector3
ˆ ˆ 0 7
(
ˆ ˆ 7 8

m_textInfo
ˆ ˆ 8 B
.
ˆ ˆ B C
characterInfo
ˆ ˆ C P
[
ˆ ˆ P Q
i
ˆ ˆ Q R
-
ˆ ˆ S T
$num
ˆ ˆ U V
]
ˆ ˆ V W
.
ˆ ˆ W X
topRight
ˆ ˆ X `
.
ˆ ˆ ` a
x
ˆ ˆ a b
,
ˆ ˆ b c

m_textInfo
ˆ ˆ d n
.
ˆ ˆ n o
characterInfo
ˆ ˆ o |
[
ˆ ˆ | }
i
ˆ ˆ } ~
-ˆ ˆ  Ä
$numˆ ˆ Å Ç
]ˆ ˆ Ç É
.ˆ ˆ É Ñ
baseLineˆ ˆ Ñ å
+ˆ ˆ ç é#
strikethroughOffsetˆ ˆ è ¢
*ˆ ˆ £ §"
strikethroughScaleˆ ˆ • ∑
,ˆ ˆ ∑ ∏
$numˆ ˆ π ∫
)ˆ ˆ ∫ ª
;ˆ ˆ ª º
DrawUnderlineMesh
¯ ¯  )
(
¯ ¯ ) *!
strikethrough_start
¯ ¯ * =
,
¯ ¯ = >
strikethrough_end
¯ ¯ ? P
,
¯ ¯ P Q
ref
¯ ¯ R U
last_vert_index
¯ ¯ V e
,
¯ ¯ e f 
strikethroughScale
¯ ¯ g y
,
¯ ¯ y z!
strikethroughScale¯ ¯ { ç
,¯ ¯ ç é"
strikethroughScale¯ ¯ è °
,¯ ¯ ° ¢
xScale¯ ¯ £ ©
,¯ ¯ © ™"
strikethroughColor¯ ¯ ´ Ω
)¯ ¯ Ω æ
;¯ ¯ æ ø
}
˘ ˘  
}
˙ ˙  
else
˚ ˚  
{
¸ ¸  
if
˛ ˛  
(
˛ ˛   
beginStrikethrough
˛ ˛  *
==
˛ ˛ + -
true
˛ ˛ . 2
)
˛ ˛ 2 3
{
ˇ ˇ   
beginStrikethrough
Ä!Ä! *
=
Ä!Ä!+ ,
false
Ä!Ä!- 2
;
Ä!Ä!2 3
strikethrough_end
Å!Å! )
=
Å!Å!* +
new
Å!Å!, /
Vector3
Å!Å!0 7
(
Å!Å!7 8

m_textInfo
Å!Å!8 B
.
Å!Å!B C
characterInfo
Å!Å!C P
[
Å!Å!P Q
i
Å!Å!Q R
-
Å!Å!S T
$num
Å!Å!U V
]
Å!Å!V W
.
Å!Å!W X
topRight
Å!Å!X `
.
Å!Å!` a
x
Å!Å!a b
,
Å!Å!b c

m_textInfo
Å!Å!d n
.
Å!Å!n o
characterInfo
Å!Å!o |
[
Å!Å!| }
i
Å!Å!} ~
-Å!Å! Ä
$numÅ!Å!Å Ç
]Å!Å!Ç É
.Å!Å!É Ñ
baseLineÅ!Å!Ñ å
+Å!Å!ç é#
strikethroughOffsetÅ!Å!è ¢
*Å!Å!£ §"
strikethroughScaleÅ!Å!• ∑
,Å!Å!∑ ∏
$numÅ!Å!π ∫
)Å!Å!∫ ª
;Å!Å!ª º
DrawUnderlineMesh
É!É! )
(
É!É!) *!
strikethrough_start
É!É!* =
,
É!É!= >
strikethrough_end
É!É!? P
,
É!É!P Q
ref
É!É!R U
last_vert_index
É!É!V e
,
É!É!e f 
strikethroughScale
É!É!g y
,
É!É!y z!
strikethroughScaleÉ!É!{ ç
,É!É!ç é"
strikethroughScaleÉ!É!è °
,É!É!° ¢
xScaleÉ!É!£ ©
,É!É!© ™"
strikethroughColorÉ!É!´ Ω
)É!É!Ω æ
;É!É!æ ø
}
Ñ!Ñ! 
}
Ö!Ö! 
bool
ã!ã! 
isHighlight
ã!ã!  
=
ã!ã!! "
(
ã!ã!# $

m_textInfo
ã!ã!$ .
.
ã!ã!. /
characterInfo
ã!ã!/ <
[
ã!ã!< =
i
ã!ã!= >
]
ã!ã!> ?
.
ã!ã!? @
style
ã!ã!@ E
&
ã!ã!F G

FontStyles
ã!ã!H R
.
ã!ã!R S
	Highlight
ã!ã!S \
)
ã!ã!\ ]
==
ã!ã!^ `

FontStyles
ã!ã!a k
.
ã!ã!k l
	Highlight
ã!ã!l u
;
ã!ã!u v
if
å!å! 
(
å!å! 
isHighlight
å!å! 
)
å!å!  
{
ç!ç! 
bool
é!é!  
isHighlightVisible
é!é! +
=
é!é!, -
true
é!é!. 2
;
é!é!2 3
int
è!è! 
currentPage
è!è! #
=
è!è!$ %

m_textInfo
è!è!& 0
.
è!è!0 1
characterInfo
è!è!1 >
[
è!è!> ?
i
è!è!? @
]
è!è!@ A
.
è!è!A B

pageNumber
è!è!B L
;
è!è!L M
if
ë!ë! 
(
ë!ë! 
i
ë!ë! 
>
ë!ë! $
m_maxVisibleCharacters
ë!ë! 2
||
ë!ë!3 5
currentLine
ë!ë!6 A
>
ë!ë!B C
m_maxVisibleLines
ë!ë!D U
||
ë!ë!V X
(
ë!ë!Y Z
m_overflowMode
ë!ë!Z h
==
ë!ë!i k
TextOverflowModes
ë!ë!l }
.
ë!ë!} ~
Pageë!ë!~ Ç
&&ë!ë!É Ö
currentPageë!ë!Ü ë
+ë!ë!í ì
$numë!ë!î ï
!=ë!ë!ñ ò
m_pageToDisplayë!ë!ô ®
)ë!ë!® ©
)ë!ë!© ™ 
isHighlightVisible
í!í! *
=
í!í!+ ,
false
í!í!- 2
;
í!í!2 3
if
î!î! 
(
î!î! 
beginHighlight
î!î! &
==
î!î!' )
false
î!î!* /
&&
î!î!0 2 
isHighlightVisible
î!î!3 E
==
î!î!F H
true
î!î!I M
&&
î!î!N P
i
î!î!Q R
<=
î!î!S U
lineInfo
î!î!V ^
.
î!î!^ _'
lastVisibleCharacterIndex
î!î!_ x
&&
î!î!y {
unicodeî!î!| É
!=î!î!Ñ Ü
$numî!î!á â
&&î!î!ä å
unicodeî!î!ç î
!=î!î!ï ó
$numî!î!ò ö
&&î!î!õ ù
unicodeî!î!û •
!=î!î!¶ ®
$numî!î!© ´
)î!î!´ ¨
{
ï!ï! 
if
ñ!ñ! 
(
ñ!ñ! 
i
ñ!ñ! 
==
ñ!ñ!  
lineInfo
ñ!ñ!! )
.
ñ!ñ!) *'
lastVisibleCharacterIndex
ñ!ñ!* C
&&
ñ!ñ!D F
char
ñ!ñ!G K
.
ñ!ñ!K L
IsSeparator
ñ!ñ!L W
(
ñ!ñ!W X
unicode
ñ!ñ!X _
)
ñ!ñ!_ `
)
ñ!ñ!` a
{
ó!ó! 
}
ó!ó! 
else
ò!ò! 
{
ô!ô! 
beginHighlight
ö!ö! *
=
ö!ö!+ ,
true
ö!ö!- 1
;
ö!ö!1 2
highlight_start
õ!õ! +
=
õ!õ!, -$
k_LargePositiveVector2
õ!õ!. D
;
õ!õ!D E
highlight_end
ú!ú! )
=
ú!ú!* +$
k_LargeNegativeVector2
ú!ú!, B
;
ú!ú!B C
highlightState
ù!ù! *
=
ù!ù!+ ,

m_textInfo
ù!ù!- 7
.
ù!ù!7 8
characterInfo
ù!ù!8 E
[
ù!ù!E F
i
ù!ù!F G
]
ù!ù!G H
.
ù!ù!H I
highlightState
ù!ù!I W
;
ù!ù!W X
}
û!û! 
}
ü!ü! 
if
°!°! 
(
°!°! 
beginHighlight
°!°! &
)
°!°!& '
{
¢!¢! 
TMP_CharacterInfo
£!£! )
currentCharacter
£!£!* :
=
£!£!; <

m_textInfo
£!£!= G
.
£!£!G H
characterInfo
£!£!H U
[
£!£!U V
i
£!£!V W
]
£!£!W X
;
£!£!X Y
HighlightState
§!§! &
currentState
§!§!' 3
=
§!§!4 5
currentCharacter
§!§!6 F
.
§!§!F G
highlightState
§!§!G U
;
§!§!U V
bool
¶!¶! 
isColorTransition
¶!¶! .
=
¶!¶!/ 0
false
¶!¶!1 6
;
¶!¶!6 7
if
©!©! 
(
©!©! 
highlightState
©!©! *
!=
©!©!+ -
currentCharacter
©!©!. >
.
©!©!> ?
highlightState
©!©!? M
)
©!©!M N
{
™!™! 
highlight_end
¨!¨! )
.
¨!¨!) *
x
¨!¨!* +
=
¨!¨!, -
(
¨!¨!. /
highlight_end
¨!¨!/ <
.
¨!¨!< =
x
¨!¨!= >
-
¨!¨!? @
highlightState
¨!¨!A O
.
¨!¨!O P
padding
¨!¨!P W
.
¨!¨!W X
right
¨!¨!X ]
+
¨!¨!^ _
currentCharacter
¨!¨!` p
.
¨!¨!p q

bottomLeft
¨!¨!q {
.
¨!¨!{ |
x
¨!¨!| }
)
¨!¨!} ~
/¨!¨! Ä
$num¨!¨!Å Ç
;¨!¨!Ç É
highlight_start
Æ!Æ! +
.
Æ!Æ!+ ,
y
Æ!Æ!, -
=
Æ!Æ!. /
Mathf
Æ!Æ!0 5
.
Æ!Æ!5 6
Min
Æ!Æ!6 9
(
Æ!Æ!9 :
highlight_start
Æ!Æ!: I
.
Æ!Æ!I J
y
Æ!Æ!J K
,
Æ!Æ!K L
currentCharacter
Æ!Æ!M ]
.
Æ!Æ!] ^
	descender
Æ!Æ!^ g
)
Æ!Æ!g h
;
Æ!Æ!h i
highlight_end
Ø!Ø! )
.
Ø!Ø!) *
y
Ø!Ø!* +
=
Ø!Ø!, -
Mathf
Ø!Ø!. 3
.
Ø!Ø!3 4
Max
Ø!Ø!4 7
(
Ø!Ø!7 8
highlight_end
Ø!Ø!8 E
.
Ø!Ø!E F
y
Ø!Ø!F G
,
Ø!Ø!G H
currentCharacter
Ø!Ø!I Y
.
Ø!Ø!Y Z
ascender
Ø!Ø!Z b
)
Ø!Ø!b c
;
Ø!Ø!c d
DrawTextHighlight
±!±! -
(
±!±!- .
highlight_start
±!±!. =
,
±!±!= >
highlight_end
±!±!? L
,
±!±!L M
ref
±!±!N Q
last_vert_index
±!±!R a
,
±!±!a b
highlightState
±!±!c q
.
±!±!q r
color
±!±!r w
)
±!±!w x
;
±!±!x y
beginHighlight
≥!≥! *
=
≥!≥!+ ,
true
≥!≥!- 1
;
≥!≥!1 2
highlight_start
¥!¥! +
=
¥!¥!, -
new
¥!¥!. 1
Vector2
¥!¥!2 9
(
¥!¥!9 :
highlight_end
¥!¥!: G
.
¥!¥!G H
x
¥!¥!H I
,
¥!¥!I J
currentCharacter
¥!¥!K [
.
¥!¥![ \
	descender
¥!¥!\ e
-
¥!¥!f g
currentState
¥!¥!h t
.
¥!¥!t u
padding
¥!¥!u |
.
¥!¥!| }
bottom¥!¥!} É
)¥!¥!É Ñ
;¥!¥!Ñ Ö
highlight_end
µ!µ! )
=
µ!µ!* +
new
µ!µ!, /
Vector2
µ!µ!0 7
(
µ!µ!7 8
currentCharacter
µ!µ!8 H
.
µ!µ!H I
topRight
µ!µ!I Q
.
µ!µ!Q R
x
µ!µ!R S
+
µ!µ!T U
currentState
µ!µ!V b
.
µ!µ!b c
padding
µ!µ!c j
.
µ!µ!j k
right
µ!µ!k p
,
µ!µ!p q
currentCharacterµ!µ!r Ç
.µ!µ!Ç É
ascenderµ!µ!É ã
+µ!µ!å ç
currentStateµ!µ!é ö
.µ!µ!ö õ
paddingµ!µ!õ ¢
.µ!µ!¢ £
topµ!µ!£ ¶
)µ!µ!¶ ß
;µ!µ!ß ®
highlightState
∑!∑! *
=
∑!∑!+ ,
currentCharacter
∑!∑!- =
.
∑!∑!= >
highlightState
∑!∑!> L
;
∑!∑!L M
isColorTransition
π!π! -
=
π!π!. /
true
π!π!0 4
;
π!π!4 5
}
∫!∫! 
if
º!º! 
(
º!º! 
!
º!º! 
isColorTransition
º!º! .
)
º!º!. /
{
Ω!Ω! 
highlight_start
ø!ø! +
.
ø!ø!+ ,
x
ø!ø!, -
=
ø!ø!. /
Mathf
ø!ø!0 5
.
ø!ø!5 6
Min
ø!ø!6 9
(
ø!ø!9 :
highlight_start
ø!ø!: I
.
ø!ø!I J
x
ø!ø!J K
,
ø!ø!K L
currentCharacter
ø!ø!M ]
.
ø!ø!] ^

bottomLeft
ø!ø!^ h
.
ø!ø!h i
x
ø!ø!i j
-
ø!ø!k l
highlightState
ø!ø!m {
.
ø!ø!{ |
paddingø!ø!| É
.ø!ø!É Ñ
leftø!ø!Ñ à
)ø!ø!à â
;ø!ø!â ä
highlight_start
¿!¿! +
.
¿!¿!+ ,
y
¿!¿!, -
=
¿!¿!. /
Mathf
¿!¿!0 5
.
¿!¿!5 6
Min
¿!¿!6 9
(
¿!¿!9 :
highlight_start
¿!¿!: I
.
¿!¿!I J
y
¿!¿!J K
,
¿!¿!K L
currentCharacter
¿!¿!M ]
.
¿!¿!] ^
	descender
¿!¿!^ g
-
¿!¿!h i
highlightState
¿!¿!j x
.
¿!¿!x y
padding¿!¿!y Ä
.¿!¿!Ä Å
bottom¿!¿!Å á
)¿!¿!á à
;¿!¿!à â
highlight_end
¬!¬! )
.
¬!¬!) *
x
¬!¬!* +
=
¬!¬!, -
Mathf
¬!¬!. 3
.
¬!¬!3 4
Max
¬!¬!4 7
(
¬!¬!7 8
highlight_end
¬!¬!8 E
.
¬!¬!E F
x
¬!¬!F G
,
¬!¬!G H
currentCharacter
¬!¬!I Y
.
¬!¬!Y Z
topRight
¬!¬!Z b
.
¬!¬!b c
x
¬!¬!c d
+
¬!¬!e f
highlightState
¬!¬!g u
.
¬!¬!u v
padding
¬!¬!v }
.
¬!¬!} ~
right¬!¬!~ É
)¬!¬!É Ñ
;¬!¬!Ñ Ö
highlight_end
√!√! )
.
√!√!) *
y
√!√!* +
=
√!√!, -
Mathf
√!√!. 3
.
√!√!3 4
Max
√!√!4 7
(
√!√!7 8
highlight_end
√!√!8 E
.
√!√!E F
y
√!√!F G
,
√!√!G H
currentCharacter
√!√!I Y
.
√!√!Y Z
ascender
√!√!Z b
+
√!√!c d
highlightState
√!√!e s
.
√!√!s t
padding
√!√!t {
.
√!√!{ |
top
√!√!| 
)√!√! Ä
;√!√!Ä Å
}
ƒ!ƒ! 
}
≈!≈! 
if
»!»! 
(
»!»! 
beginHighlight
»!»! &
&&
»!»!' )
m_characterCount
»!»!* :
==
»!»!; =
$num
»!»!> ?
)
»!»!? @
{
…!…! 
beginHighlight
 ! ! &
=
 ! !' (
false
 ! !) .
;
 ! !. /
DrawTextHighlight
Ã!Ã! )
(
Ã!Ã!) *
highlight_start
Ã!Ã!* 9
,
Ã!Ã!9 :
highlight_end
Ã!Ã!; H
,
Ã!Ã!H I
ref
Ã!Ã!J M
last_vert_index
Ã!Ã!N ]
,
Ã!Ã!] ^
highlightState
Ã!Ã!_ m
.
Ã!Ã!m n
color
Ã!Ã!n s
)
Ã!Ã!s t
;
Ã!Ã!t u
}
Õ!Õ! 
else
Œ!Œ! 
if
Œ!Œ! 
(
Œ!Œ! 
beginHighlight
Œ!Œ! +
&&
Œ!Œ!, .
(
Œ!Œ!/ 0
i
Œ!Œ!0 1
==
Œ!Œ!2 4
lineInfo
Œ!Œ!5 =
.
Œ!Œ!= > 
lastCharacterIndex
Œ!Œ!> P
||
Œ!Œ!Q S
i
Œ!Œ!T U
>=
Œ!Œ!V X
lineInfo
Œ!Œ!Y a
.
Œ!Œ!a b'
lastVisibleCharacterIndex
Œ!Œ!b {
)
Œ!Œ!{ |
)
Œ!Œ!| }
{
œ!œ! 
beginHighlight
–!–! &
=
–!–!' (
false
–!–!) .
;
–!–!. /
DrawTextHighlight
—!—! )
(
—!—!) *
highlight_start
—!—!* 9
,
—!—!9 :
highlight_end
—!—!; H
,
—!—!H I
ref
—!—!J M
last_vert_index
—!—!N ]
,
—!—!] ^
highlightState
—!—!_ m
.
—!—!m n
color
—!—!n s
)
—!—!s t
;
—!—!t u
}
“!“! 
else
”!”! 
if
”!”! 
(
”!”! 
beginHighlight
”!”! +
&&
”!”!, .
!
”!”!/ 0 
isHighlightVisible
”!”!0 B
)
”!”!B C
{
‘!‘! 
beginHighlight
’!’! &
=
’!’!' (
false
’!’!) .
;
’!’!. /
DrawTextHighlight
÷!÷! )
(
÷!÷!) *
highlight_start
÷!÷!* 9
,
÷!÷!9 :
highlight_end
÷!÷!; H
,
÷!÷!H I
ref
÷!÷!J M
last_vert_index
÷!÷!N ]
,
÷!÷!] ^
highlightState
÷!÷!_ m
.
÷!÷!m n
color
÷!÷!n s
)
÷!÷!s t
;
÷!÷!t u
}
◊!◊! 
}
ÿ!ÿ! 
else
Ÿ!Ÿ! 
{
⁄!⁄! 
if
‹!‹! 
(
‹!‹! 
beginHighlight
‹!‹! &
==
‹!‹!' )
true
‹!‹!* .
)
‹!‹!. /
{
›!›! 
beginHighlight
ﬁ!ﬁ! &
=
ﬁ!ﬁ!' (
false
ﬁ!ﬁ!) .
;
ﬁ!ﬁ!. /
DrawTextHighlight
ﬂ!ﬂ! )
(
ﬂ!ﬂ!) *
highlight_start
ﬂ!ﬂ!* 9
,
ﬂ!ﬂ!9 :
highlight_end
ﬂ!ﬂ!; H
,
ﬂ!ﬂ!H I
ref
ﬂ!ﬂ!J M
last_vert_index
ﬂ!ﬂ!N ]
,
ﬂ!ﬂ!] ^
highlightState
ﬂ!ﬂ!_ m
.
ﬂ!ﬂ!m n
color
ﬂ!ﬂ!n s
)
ﬂ!ﬂ!s t
;
ﬂ!ﬂ!t u
}
‡!‡! 
}
·!·! 
lastLine
‰!‰! 
=
‰!‰! 
currentLine
‰!‰! &
;
‰!‰!& '
}
Â!Â! 

m_textInfo
Í!Í! 
.
Í!Í! 
characterCount
Í!Í! %
=
Í!Í!& '
m_characterCount
Í!Í!( 8
;
Í!Í!8 9

m_textInfo
Î!Î! 
.
Î!Î! 
spriteCount
Î!Î! "
=
Î!Î!# $
m_spriteCount
Î!Î!% 2
;
Î!Î!2 3

m_textInfo
Ï!Ï! 
.
Ï!Ï! 
	lineCount
Ï!Ï!  
=
Ï!Ï!! "
	lineCount
Ï!Ï!# ,
;
Ï!Ï!, -

m_textInfo
Ì!Ì! 
.
Ì!Ì! 
	wordCount
Ì!Ì!  
=
Ì!Ì!! "
	wordCount
Ì!Ì!# ,
!=
Ì!Ì!- /
$num
Ì!Ì!0 1
&&
Ì!Ì!2 4
m_characterCount
Ì!Ì!5 E
>
Ì!Ì!F G
$num
Ì!Ì!H I
?
Ì!Ì!J K
	wordCount
Ì!Ì!L U
:
Ì!Ì!V W
$num
Ì!Ì!X Y
;
Ì!Ì!Y Z

m_textInfo
Ó!Ó! 
.
Ó!Ó! 
	pageCount
Ó!Ó!  
=
Ó!Ó!! "
m_pageNumber
Ó!Ó!# /
+
Ó!Ó!0 1
$num
Ó!Ó!2 3
;
Ó!Ó!3 4
if
˚!˚! 
(
˚!˚! 
m_renderMode
˚!˚! 
==
˚!˚! 
TextRenderFlags
˚!˚!  /
.
˚!˚!/ 0
Render
˚!˚!0 6
&&
˚!˚!7 9
IsActive
˚!˚!: B
(
˚!˚!B C
)
˚!˚!C D
)
˚!˚!D E
{
¸!¸! 
OnPreRenderText
˛!˛! 
?
˛!˛!  
.
˛!˛!  !
Invoke
˛!˛!! '
(
˛!˛!' (

m_textInfo
˛!˛!( 2
)
˛!˛!2 3
;
˛!˛!3 4
if
Ç"Ç" 
(
Ç"Ç" 
m_canvas
Ç"Ç" 
.
Ç"Ç" &
additionalShaderChannels
Ç"Ç" 5
!=
Ç"Ç"6 8
(
Ç"Ç"9 :,
AdditionalCanvasShaderChannels
Ç"Ç": X
)
Ç"Ç"X Y
$num
Ç"Ç"Y [
)
Ç"Ç"[ \
m_canvas
É"É" 
.
É"É" &
additionalShaderChannels
É"É" 5
|=
É"É"6 8
(
É"É"9 :,
AdditionalCanvasShaderChannels
É"É": X
)
É"É"X Y
$num
É"É"Y [
;
É"É"[ \
if
Ü"Ü" 
(
Ü"Ü" $
m_geometrySortingOrder
Ü"Ü" *
!=
Ü"Ü"+ - 
VertexSortingOrder
Ü"Ü". @
.
Ü"Ü"@ A
Normal
Ü"Ü"A G
)
Ü"Ü"G H

m_textInfo
á"á" 
.
á"á" 
meshInfo
á"á" '
[
á"á"' (
$num
á"á"( )
]
á"á") *
.
á"á"* +
SortGeometry
á"á"+ 7
(
á"á"7 8 
VertexSortingOrder
á"á"8 J
.
á"á"J K
Reverse
á"á"K R
)
á"á"R S
;
á"á"S T
m_mesh
ä"ä" 
.
ä"ä" 
MarkDynamic
ä"ä" "
(
ä"ä"" #
)
ä"ä"# $
;
ä"ä"$ %
m_mesh
ã"ã" 
.
ã"ã" 
vertices
ã"ã" 
=
ã"ã"  !

m_textInfo
ã"ã"" ,
.
ã"ã", -
meshInfo
ã"ã"- 5
[
ã"ã"5 6
$num
ã"ã"6 7
]
ã"ã"7 8
.
ã"ã"8 9
vertices
ã"ã"9 A
;
ã"ã"A B
m_mesh
å"å" 
.
å"å" 
uv
å"å" 
=
å"å" 

m_textInfo
å"å" &
.
å"å"& '
meshInfo
å"å"' /
[
å"å"/ 0
$num
å"å"0 1
]
å"å"1 2
.
å"å"2 3
uvs0
å"å"3 7
;
å"å"7 8
m_mesh
ç"ç" 
.
ç"ç" 
uv2
ç"ç" 
=
ç"ç" 

m_textInfo
ç"ç" '
.
ç"ç"' (
meshInfo
ç"ç"( 0
[
ç"ç"0 1
$num
ç"ç"1 2
]
ç"ç"2 3
.
ç"ç"3 4
uvs2
ç"ç"4 8
;
ç"ç"8 9
m_mesh
è"è" 
.
è"è" 
colors32
è"è" 
=
è"è"  !

m_textInfo
è"è"" ,
.
è"è", -
meshInfo
è"è"- 5
[
è"è"5 6
$num
è"è"6 7
]
è"è"7 8
.
è"è"8 9
colors32
è"è"9 A
;
è"è"A B
m_mesh
í"í" 
.
í"í" 
RecalculateBounds
í"í" (
(
í"í"( )
)
í"í") *
;
í"í"* +
m_canvasRenderer
ï"ï"  
.
ï"ï"  !
SetMesh
ï"ï"! (
(
ï"ï"( )
m_mesh
ï"ï") /
)
ï"ï"/ 0
;
ï"ï"0 1
Color
ò"ò" 
parentBaseColor
ò"ò" %
=
ò"ò"& '
m_canvasRenderer
ò"ò"( 8
.
ò"ò"8 9
GetColor
ò"ò"9 A
(
ò"ò"A B
)
ò"ò"B C
;
ò"ò"C D
bool
ö"ö" *
isCullTransparentMeshEnabled
ö"ö" 1
=
ö"ö"2 3
m_canvasRenderer
ö"ö"4 D
.
ö"ö"D E!
cullTransparentMesh
ö"ö"E X
;
ö"ö"X Y
for
ú"ú" 
(
ú"ú" 
int
ú"ú" 
i
ú"ú" 
=
ú"ú" 
$num
ú"ú" 
;
ú"ú" 
i
ú"ú"  !
<
ú"ú"" #

m_textInfo
ú"ú"$ .
.
ú"ú". /
materialCount
ú"ú"/ <
;
ú"ú"< =
i
ú"ú"> ?
++
ú"ú"? A
)
ú"ú"A B
{
ù"ù" 

m_textInfo
ü"ü" 
.
ü"ü" 
meshInfo
ü"ü" '
[
ü"ü"' (
i
ü"ü"( )
]
ü"ü") *
.
ü"ü"* +!
ClearUnusedVertices
ü"ü"+ >
(
ü"ü"> ?
)
ü"ü"? @
;
ü"ü"@ A
if
°"°" 
(
°"°" 
m_subTextObjects
°"°" (
[
°"°"( )
i
°"°") *
]
°"°"* +
==
°"°", .
null
°"°"/ 3
)
°"°"3 4
continue
°"°"5 =
;
°"°"= >
if
§"§" 
(
§"§" $
m_geometrySortingOrder
§"§" .
!=
§"§"/ 1 
VertexSortingOrder
§"§"2 D
.
§"§"D E
Normal
§"§"E K
)
§"§"K L

m_textInfo
•"•" "
.
•"•"" #
meshInfo
•"•"# +
[
•"•"+ ,
i
•"•", -
]
•"•"- .
.
•"•". /
SortGeometry
•"•"/ ;
(
•"•"; < 
VertexSortingOrder
•"•"< N
.
•"•"N O
Reverse
•"•"O V
)
•"•"V W
;
•"•"W X
m_subTextObjects
®"®" $
[
®"®"$ %
i
®"®"% &
]
®"®"& '
.
®"®"' (
mesh
®"®"( ,
.
®"®", -
vertices
®"®"- 5
=
®"®"6 7

m_textInfo
®"®"8 B
.
®"®"B C
meshInfo
®"®"C K
[
®"®"K L
i
®"®"L M
]
®"®"M N
.
®"®"N O
vertices
®"®"O W
;
®"®"W X
m_subTextObjects
©"©" $
[
©"©"$ %
i
©"©"% &
]
©"©"& '
.
©"©"' (
mesh
©"©"( ,
.
©"©", -
uv
©"©"- /
=
©"©"0 1

m_textInfo
©"©"2 <
.
©"©"< =
meshInfo
©"©"= E
[
©"©"E F
i
©"©"F G
]
©"©"G H
.
©"©"H I
uvs0
©"©"I M
;
©"©"M N
m_subTextObjects
™"™" $
[
™"™"$ %
i
™"™"% &
]
™"™"& '
.
™"™"' (
mesh
™"™"( ,
.
™"™", -
uv2
™"™"- 0
=
™"™"1 2

m_textInfo
™"™"3 =
.
™"™"= >
meshInfo
™"™"> F
[
™"™"F G
i
™"™"G H
]
™"™"H I
.
™"™"I J
uvs2
™"™"J N
;
™"™"N O
m_subTextObjects
¨"¨" $
[
¨"¨"$ %
i
¨"¨"% &
]
¨"¨"& '
.
¨"¨"' (
mesh
¨"¨"( ,
.
¨"¨", -
colors32
¨"¨"- 5
=
¨"¨"6 7

m_textInfo
¨"¨"8 B
.
¨"¨"B C
meshInfo
¨"¨"C K
[
¨"¨"K L
i
¨"¨"L M
]
¨"¨"M N
.
¨"¨"N O
colors32
¨"¨"O W
;
¨"¨"W X
m_subTextObjects
Æ"Æ" $
[
Æ"Æ"$ %
i
Æ"Æ"% &
]
Æ"Æ"& '
.
Æ"Æ"' (
mesh
Æ"Æ"( ,
.
Æ"Æ", -
RecalculateBounds
Æ"Æ"- >
(
Æ"Æ"> ?
)
Æ"Æ"? @
;
Æ"Æ"@ A
m_subTextObjects
∞"∞" $
[
∞"∞"$ %
i
∞"∞"% &
]
∞"∞"& '
.
∞"∞"' (
canvasRenderer
∞"∞"( 6
.
∞"∞"6 7
SetMesh
∞"∞"7 >
(
∞"∞"> ?
m_subTextObjects
∞"∞"? O
[
∞"∞"O P
i
∞"∞"P Q
]
∞"∞"Q R
.
∞"∞"R S
mesh
∞"∞"S W
)
∞"∞"W X
;
∞"∞"X Y
m_subTextObjects
≥"≥" $
[
≥"≥"$ %
i
≥"≥"% &
]
≥"≥"& '
.
≥"≥"' (
canvasRenderer
≥"≥"( 6
.
≥"≥"6 7
SetColor
≥"≥"7 ?
(
≥"≥"? @
parentBaseColor
≥"≥"@ O
)
≥"≥"O P
;
≥"≥"P Q
m_subTextObjects
∂"∂" $
[
∂"∂"$ %
i
∂"∂"% &
]
∂"∂"& '
.
∂"∂"' (
canvasRenderer
∂"∂"( 6
.
∂"∂"6 7!
cullTransparentMesh
∂"∂"7 J
=
∂"∂"K L*
isCullTransparentMeshEnabled
∂"∂"M i
;
∂"∂"i j
m_subTextObjects
π"π" $
[
π"π"$ %
i
π"π"% &
]
π"π"& '
.
π"π"' (
raycastTarget
π"π"( 5
=
π"π"6 7
this
π"π"8 <
.
π"π"< =
raycastTarget
π"π"= J
;
π"π"J K
}
∫"∫" 
}
ª"ª"  
TMPro_EventManager
æ"æ" 
.
æ"æ" 
ON_TEXT_CHANGED
æ"æ" .
(
æ"æ". /
this
æ"æ"/ 3
)
æ"æ"3 4
;
æ"æ"4 5
}
…"…" 	
	protected
–"–" 
override
–"–" 
Vector3
–"–" "
[
–"–"" #
]
–"–"# $*
GetTextContainerLocalCorners
–"–"% A
(
–"–"A B
)
–"–"B C
{
—"—" 	
if
“"“" 
(
“"“" 
m_rectTransform
“"“" 
==
“"“"  "
null
“"“"# '
)
“"“"' (
m_rectTransform
“"“") 8
=
“"“"9 :
this
“"“"; ?
.
“"“"? @
rectTransform
“"“"@ M
;
“"“"M N
m_rectTransform
‘"‘" 
.
‘"‘" 
GetLocalCorners
‘"‘" +
(
‘"‘"+ ,$
m_RectTransformCorners
‘"‘", B
)
‘"‘"B C
;
‘"‘"C D
return
÷"÷" $
m_RectTransformCorners
÷"÷" )
;
÷"÷") *
}
◊"◊" 	
	protected
ﬁ"ﬁ" 
override
ﬁ"ﬁ" 
void
ﬁ"ﬁ"  
SetActiveSubMeshes
ﬁ"ﬁ"  2
(
ﬁ"ﬁ"2 3
bool
ﬁ"ﬁ"3 7
state
ﬁ"ﬁ"8 =
)
ﬁ"ﬁ"= >
{
ﬂ"ﬂ" 	
for
‡"‡" 
(
‡"‡" 
int
‡"‡" 
i
‡"‡" 
=
‡"‡" 
$num
‡"‡" 
;
‡"‡" 
i
‡"‡" 
<
‡"‡" 
m_subTextObjects
‡"‡"  0
.
‡"‡"0 1
Length
‡"‡"1 7
&&
‡"‡"8 :
m_subTextObjects
‡"‡"; K
[
‡"‡"K L
i
‡"‡"L M
]
‡"‡"M N
!=
‡"‡"O Q
null
‡"‡"R V
;
‡"‡"V W
i
‡"‡"X Y
++
‡"‡"Y [
)
‡"‡"[ \
{
·"·" 
if
‚"‚" 
(
‚"‚" 
m_subTextObjects
‚"‚" $
[
‚"‚"$ %
i
‚"‚"% &
]
‚"‚"& '
.
‚"‚"' (
enabled
‚"‚"( /
!=
‚"‚"0 2
state
‚"‚"3 8
)
‚"‚"8 9
m_subTextObjects
„"„" $
[
„"„"$ %
i
„"„"% &
]
„"„"& '
.
„"„"' (
enabled
„"„"( /
=
„"„"0 1
state
„"„"2 7
;
„"„"7 8
}
‰"‰" 
}
Â"Â" 	
	protected
Î"Î" 
override
Î"Î" 
void
Î"Î" #
DestroySubMeshObjects
Î"Î"  5
(
Î"Î"5 6
)
Î"Î"6 7
{
Ï"Ï" 	
for
Ì"Ì" 
(
Ì"Ì" 
int
Ì"Ì" 
i
Ì"Ì" 
=
Ì"Ì" 
$num
Ì"Ì" 
;
Ì"Ì" 
i
Ì"Ì" 
<
Ì"Ì" 
m_subTextObjects
Ì"Ì"  0
.
Ì"Ì"0 1
Length
Ì"Ì"1 7
&&
Ì"Ì"8 :
m_subTextObjects
Ì"Ì"; K
[
Ì"Ì"K L
i
Ì"Ì"L M
]
Ì"Ì"M N
!=
Ì"Ì"O Q
null
Ì"Ì"R V
;
Ì"Ì"V W
i
Ì"Ì"X Y
++
Ì"Ì"Y [
)
Ì"Ì"[ \
DestroyImmediate
Ó"Ó"  
(
Ó"Ó"  !
m_subTextObjects
Ó"Ó"! 1
[
Ó"Ó"1 2
i
Ó"Ó"2 3
]
Ó"Ó"3 4
)
Ó"Ó"4 5
;
Ó"Ó"5 6
}
Ô"Ô" 	
	protected
ˆ"ˆ" 
override
ˆ"ˆ" 
Bounds
ˆ"ˆ" !
GetCompoundBounds
ˆ"ˆ"" 3
(
ˆ"ˆ"3 4
)
ˆ"ˆ"4 5
{
˜"˜" 	
Bounds
¯"¯" 

mainBounds
¯"¯" 
=
¯"¯" 
m_mesh
¯"¯"  &
.
¯"¯"& '
bounds
¯"¯"' -
;
¯"¯"- .
Vector3
˘"˘" 
min
˘"˘" 
=
˘"˘" 

mainBounds
˘"˘" $
.
˘"˘"$ %
min
˘"˘"% (
;
˘"˘"( )
Vector3
˙"˙" 
max
˙"˙" 
=
˙"˙" 

mainBounds
˙"˙" $
.
˙"˙"$ %
max
˙"˙"% (
;
˙"˙"( )
for
¸"¸" 
(
¸"¸" 
int
¸"¸" 
i
¸"¸" 
=
¸"¸" 
$num
¸"¸" 
;
¸"¸" 
i
¸"¸" 
<
¸"¸" 
m_subTextObjects
¸"¸"  0
.
¸"¸"0 1
Length
¸"¸"1 7
&&
¸"¸"8 :
m_subTextObjects
¸"¸"; K
[
¸"¸"K L
i
¸"¸"L M
]
¸"¸"M N
!=
¸"¸"O Q
null
¸"¸"R V
;
¸"¸"V W
i
¸"¸"X Y
++
¸"¸"Y [
)
¸"¸"[ \
{
˝"˝" 
Bounds
˛"˛" 
	subBounds
˛"˛"  
=
˛"˛"! "
m_subTextObjects
˛"˛"# 3
[
˛"˛"3 4
i
˛"˛"4 5
]
˛"˛"5 6
.
˛"˛"6 7
mesh
˛"˛"7 ;
.
˛"˛"; <
bounds
˛"˛"< B
;
˛"˛"B C
min
ˇ"ˇ" 
.
ˇ"ˇ" 
x
ˇ"ˇ" 
=
ˇ"ˇ" 
min
ˇ"ˇ" 
.
ˇ"ˇ" 
x
ˇ"ˇ" 
<
ˇ"ˇ" 
	subBounds
ˇ"ˇ"  )
.
ˇ"ˇ") *
min
ˇ"ˇ"* -
.
ˇ"ˇ"- .
x
ˇ"ˇ". /
?
ˇ"ˇ"0 1
min
ˇ"ˇ"2 5
.
ˇ"ˇ"5 6
x
ˇ"ˇ"6 7
:
ˇ"ˇ"8 9
	subBounds
ˇ"ˇ": C
.
ˇ"ˇ"C D
min
ˇ"ˇ"D G
.
ˇ"ˇ"G H
x
ˇ"ˇ"H I
;
ˇ"ˇ"I J
min
Ä#Ä# 
.
Ä#Ä# 
y
Ä#Ä# 
=
Ä#Ä# 
min
Ä#Ä# 
.
Ä#Ä# 
y
Ä#Ä# 
<
Ä#Ä# 
	subBounds
Ä#Ä#  )
.
Ä#Ä#) *
min
Ä#Ä#* -
.
Ä#Ä#- .
y
Ä#Ä#. /
?
Ä#Ä#0 1
min
Ä#Ä#2 5
.
Ä#Ä#5 6
y
Ä#Ä#6 7
:
Ä#Ä#8 9
	subBounds
Ä#Ä#: C
.
Ä#Ä#C D
min
Ä#Ä#D G
.
Ä#Ä#G H
y
Ä#Ä#H I
;
Ä#Ä#I J
max
Ç#Ç# 
.
Ç#Ç# 
x
Ç#Ç# 
=
Ç#Ç# 
max
Ç#Ç# 
.
Ç#Ç# 
x
Ç#Ç# 
>
Ç#Ç# 
	subBounds
Ç#Ç#  )
.
Ç#Ç#) *
max
Ç#Ç#* -
.
Ç#Ç#- .
x
Ç#Ç#. /
?
Ç#Ç#0 1
max
Ç#Ç#2 5
.
Ç#Ç#5 6
x
Ç#Ç#6 7
:
Ç#Ç#8 9
	subBounds
Ç#Ç#: C
.
Ç#Ç#C D
max
Ç#Ç#D G
.
Ç#Ç#G H
x
Ç#Ç#H I
;
Ç#Ç#I J
max
É#É# 
.
É#É# 
y
É#É# 
=
É#É# 
max
É#É# 
.
É#É# 
y
É#É# 
>
É#É# 
	subBounds
É#É#  )
.
É#É#) *
max
É#É#* -
.
É#É#- .
y
É#É#. /
?
É#É#0 1
max
É#É#2 5
.
É#É#5 6
y
É#É#6 7
:
É#É#8 9
	subBounds
É#É#: C
.
É#É#C D
max
É#É#D G
.
É#É#G H
y
É#É#H I
;
É#É#I J
}
Ñ#Ñ# 
Vector3
Ü#Ü# 
center
Ü#Ü# 
=
Ü#Ü# 
(
Ü#Ü# 
min
Ü#Ü# !
+
Ü#Ü#" #
max
Ü#Ü#$ '
)
Ü#Ü#' (
/
Ü#Ü#) *
$num
Ü#Ü#+ ,
;
Ü#Ü#, -
Vector2
á#á# 
size
á#á# 
=
á#á# 
max
á#á# 
-
á#á#  
min
á#á#! $
;
á#á#$ %
return
à#à# 
new
à#à# 
Bounds
à#à# 
(
à#à# 
center
à#à# $
,
à#à#$ %
size
à#à#& *
)
à#à#* +
;
à#à#+ ,
}
â#â# 	
internal
ã#ã# 
override
ã#ã# 
Rect
ã#ã# (
GetCanvasSpaceClippingRect
ã#ã# 9
(
ã#ã#9 :
)
ã#ã#: ;
{
å#å# 	
if
ç#ç# 
(
ç#ç# 
m_canvas
ç#ç# 
==
ç#ç# 
null
ç#ç#  
||
ç#ç#! #
m_canvas
ç#ç#$ ,
.
ç#ç#, -

rootCanvas
ç#ç#- 7
==
ç#ç#8 :
null
ç#ç#; ?
||
ç#ç#@ B
m_mesh
ç#ç#C I
==
ç#ç#J L
null
ç#ç#M Q
)
ç#ç#Q R
return
é#é# 
Rect
é#é# 
.
é#é# 
zero
é#é#  
;
é#é#  !
	Transform
ê#ê# !
rootCanvasTransform
ê#ê# )
=
ê#ê#* +
m_canvas
ê#ê#, 4
.
ê#ê#4 5

rootCanvas
ê#ê#5 ?
.
ê#ê#? @
	transform
ê#ê#@ I
;
ê#ê#I J
Bounds
ë#ë# 
compoundBounds
ë#ë# !
=
ë#ë#" #
GetCompoundBounds
ë#ë#$ 5
(
ë#ë#5 6
)
ë#ë#6 7
;
ë#ë#7 8
Vector2
ì#ì# 
position
ì#ì# 
=
ì#ì# !
rootCanvasTransform
ì#ì#  3
.
ì#ì#3 4#
InverseTransformPoint
ì#ì#4 I
(
ì#ì#I J
m_rectTransform
ì#ì#J Y
.
ì#ì#Y Z
position
ì#ì#Z b
)
ì#ì#b c
;
ì#ì#c d
Vector2
ï#ï# 
canvasLossyScale
ï#ï# $
=
ï#ï#% &!
rootCanvasTransform
ï#ï#' :
.
ï#ï#: ;

lossyScale
ï#ï#; E
;
ï#ï#E F
Vector2
ñ#ñ# 

lossyScale
ñ#ñ# 
=
ñ#ñ#  
m_rectTransform
ñ#ñ#! 0
.
ñ#ñ#0 1

lossyScale
ñ#ñ#1 ;
/
ñ#ñ#< =
canvasLossyScale
ñ#ñ#> N
;
ñ#ñ#N O
return
ò#ò# 
new
ò#ò# 
Rect
ò#ò# 
(
ò#ò# 
position
ò#ò# $
+
ò#ò#% &
compoundBounds
ò#ò#' 5
.
ò#ò#5 6
min
ò#ò#6 9
*
ò#ò#: ;

lossyScale
ò#ò#< F
,
ò#ò#F G
compoundBounds
ò#ò#H V
.
ò#ò#V W
size
ò#ò#W [
*
ò#ò#\ ]

lossyScale
ò#ò#^ h
)
ò#ò#h i
;
ò#ò#i j
}
ô#ô# 	
void
ﬁ#ﬁ# 
UpdateSDFScale
ﬁ#ﬁ# 
(
ﬁ#ﬁ# 
float
ﬁ#ﬁ# !

scaleDelta
ﬁ#ﬁ#" ,
)
ﬁ#ﬁ#, -
{
ﬂ#ﬂ# 	
if
‡#‡# 
(
‡#‡# 

scaleDelta
‡#‡# 
==
‡#‡# 
$num
‡#‡# 
||
‡#‡#  "

scaleDelta
‡#‡## -
==
‡#‡#. 0
float
‡#‡#1 6
.
‡#‡#6 7
PositiveInfinity
‡#‡#7 G
||
‡#‡#H J

scaleDelta
‡#‡#K U
==
‡#‡#V X
float
‡#‡#Y ^
.
‡#‡#^ _
NegativeInfinity
‡#‡#_ o
)
‡#‡#o p
{
·#·# %
m_havePropertiesChanged
‚#‚# '
=
‚#‚#( )
true
‚#‚#* .
;
‚#‚#. /
OnPreRenderCanvas
„#„# !
(
„#„#! "
)
„#„#" #
;
„#„## $
return
‰#‰# 
;
‰#‰# 
}
Â#Â# 
for
Á#Á# 
(
Á#Á# 
int
Á#Á# 
materialIndex
Á#Á# "
=
Á#Á## $
$num
Á#Á#% &
;
Á#Á#& '
materialIndex
Á#Á#( 5
<
Á#Á#6 7

m_textInfo
Á#Á#8 B
.
Á#Á#B C
materialCount
Á#Á#C P
;
Á#Á#P Q
materialIndex
Á#Á#R _
++
Á#Á#` b
)
Á#Á#b c
{
Ë#Ë# 
TMP_MeshInfo
È#È# 
meshInfo
È#È# %
=
È#È#& '

m_textInfo
È#È#( 2
.
È#È#2 3
meshInfo
È#È#3 ;
[
È#È#; <
materialIndex
È#È#< I
]
È#È#I J
;
È#È#J K
for
Î#Î# 
(
Î#Î# 
int
Î#Î# 
i
Î#Î# 
=
Î#Î# 
$num
Î#Î# 
;
Î#Î# 
i
Î#Î#  !
<
Î#Î#" #
meshInfo
Î#Î#$ ,
.
Î#Î#, -
uvs2
Î#Î#- 1
.
Î#Î#1 2
Length
Î#Î#2 8
;
Î#Î#8 9
i
Î#Î#: ;
++
Î#Î#; =
)
Î#Î#= >
{
Ï#Ï# 
meshInfo
Ì#Ì# 
.
Ì#Ì# 
uvs2
Ì#Ì# !
[
Ì#Ì#! "
i
Ì#Ì#" #
]
Ì#Ì## $
.
Ì#Ì#$ %
y
Ì#Ì#% &
*=
Ì#Ì#' )
Mathf
Ì#Ì#* /
.
Ì#Ì#/ 0
Abs
Ì#Ì#0 3
(
Ì#Ì#3 4

scaleDelta
Ì#Ì#4 >
)
Ì#Ì#> ?
;
Ì#Ì#? @
}
Ó#Ó# 
}
Ô#Ô# 
for
Ú#Ú# 
(
Ú#Ú# 
int
Ú#Ú# 
i
Ú#Ú# 
=
Ú#Ú# 
$num
Ú#Ú# 
;
Ú#Ú# 
i
Ú#Ú# 
<
Ú#Ú# 

m_textInfo
Ú#Ú#  *
.
Ú#Ú#* +
materialCount
Ú#Ú#+ 8
;
Ú#Ú#8 9
i
Ú#Ú#: ;
++
Ú#Ú#; =
)
Ú#Ú#= >
{
Û#Û# 
if
Ù#Ù# 
(
Ù#Ù# 
i
Ù#Ù# 
==
Ù#Ù# 
$num
Ù#Ù# 
)
Ù#Ù# 
{
ı#ı# 
m_mesh
ˆ#ˆ# 
.
ˆ#ˆ# 
uv2
ˆ#ˆ# 
=
ˆ#ˆ#  

m_textInfo
ˆ#ˆ#! +
.
ˆ#ˆ#+ ,
meshInfo
ˆ#ˆ#, 4
[
ˆ#ˆ#4 5
$num
ˆ#ˆ#5 6
]
ˆ#ˆ#6 7
.
ˆ#ˆ#7 8
uvs2
ˆ#ˆ#8 <
;
ˆ#ˆ#< =
m_canvasRenderer
˜#˜# $
.
˜#˜#$ %
SetMesh
˜#˜#% ,
(
˜#˜#, -
m_mesh
˜#˜#- 3
)
˜#˜#3 4
;
˜#˜#4 5
}
¯#¯# 
else
˘#˘# 
{
˙#˙# 
m_subTextObjects
˚#˚# $
[
˚#˚#$ %
i
˚#˚#% &
]
˚#˚#& '
.
˚#˚#' (
mesh
˚#˚#( ,
.
˚#˚#, -
uv2
˚#˚#- 0
=
˚#˚#1 2

m_textInfo
˚#˚#3 =
.
˚#˚#= >
meshInfo
˚#˚#> F
[
˚#˚#F G
i
˚#˚#G H
]
˚#˚#H I
.
˚#˚#I J
uvs2
˚#˚#J N
;
˚#˚#N O
m_subTextObjects
¸#¸# $
[
¸#¸#$ %
i
¸#¸#% &
]
¸#¸#& '
.
¸#¸#' (
canvasRenderer
¸#¸#( 6
.
¸#¸#6 7
SetMesh
¸#¸#7 >
(
¸#¸#> ?
m_subTextObjects
¸#¸#? O
[
¸#¸#O P
i
¸#¸#P Q
]
¸#¸#Q R
.
¸#¸#R S
mesh
¸#¸#S W
)
¸#¸#W X
;
¸#¸#X Y
}
˝#˝# 
}
˛#˛# 
}
ˇ#ˇ# 	
}
Å$Å$ 
}Ç$Ç$ ‚≥
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_Dropdown.cs
	namespace

 	
TMPro


 
{ 
[ 
AddComponentMenu 
( 
$str 1
,1 2
$num3 5
)5 6
]6 7
[ 
RequireComponent 
( 
typeof 
( 
RectTransform *
)* +
)+ ,
], -
public 

class 
TMP_Dropdown 
: 

Selectable  *
,* + 
IPointerClickHandler, @
,@ A
ISubmitHandlerB P
,P Q
ICancelHandlerR `
{ 
	protected 
internal 
class  
DropdownItem! -
:. /
MonoBehaviour0 =
,= > 
IPointerEnterHandler? S
,S T
ICancelHandlerU c
{ 	
[ 
SerializeField 
] 
private 
TMP_Text 
m_Text #
;# $
[ 
SerializeField 
] 
private 
Image 
m_Image !
;! "
[ 
SerializeField 
] 
private 
RectTransform !
m_RectTransform" 1
;1 2
[   
SerializeField   
]   
private!! 
Toggle!! 
m_Toggle!! #
;!!# $
public## 
TMP_Text## 
text##  
{##! "
get### &
{##' (
return##) /
m_Text##0 6
;##6 7
}##8 9
set##: =
{##> ?
m_Text##@ F
=##G H
value##I N
;##N O
}##P Q
}##R S
public$$ 
Image$$ 
image$$ 
{$$  
get$$! $
{$$% &
return$$' -
m_Image$$. 5
;$$5 6
}$$7 8
set$$9 <
{$$= >
m_Image$$? F
=$$G H
value$$I N
;$$N O
}$$P Q
}$$R S
public%% 
RectTransform%%  
rectTransform%%! .
{%%/ 0
get%%1 4
{%%5 6
return%%7 =
m_RectTransform%%> M
;%%M N
}%%O P
set%%Q T
{%%U V
m_RectTransform%%W f
=%%g h
value%%i n
;%%n o
}%%p q
}%%r s
public&& 
Toggle&& 
toggle&&  
{&&! "
get&&# &
{&&' (
return&&) /
m_Toggle&&0 8
;&&8 9
}&&: ;
set&&< ?
{&&@ A
m_Toggle&&B J
=&&K L
value&&M R
;&&R S
}&&T U
}&&V W
public(( 
virtual(( 
void(( 
OnPointerEnter((  .
(((. /
PointerEventData((/ ?
	eventData((@ I
)((I J
{)) 
EventSystem** 
.** 
current** #
.**# $!
SetSelectedGameObject**$ 9
(**9 :

gameObject**: D
)**D E
;**E F
}++ 
public-- 
virtual-- 
void-- 
OnCancel--  (
(--( )
BaseEventData--) 6
	eventData--7 @
)--@ A
{.. 
TMP_Dropdown// 
dropdown// %
=//& ' 
GetComponentInParent//( <
<//< =
TMP_Dropdown//= I
>//I J
(//J K
)//K L
;//L M
if00 
(00 
dropdown00 
)00 
dropdown11 
.11 
Hide11 !
(11! "
)11" #
;11# $
}22 
}33 	
[55 	
Serializable55	 
]55 
public99 
class99 

OptionData99 
{:: 	
[;; 
SerializeField;; 
];; 
private<< 
string<< 
m_Text<< !
;<<! "
[== 
SerializeField== 
]== 
private>> 
Sprite>> 
m_Image>> "
;>>" #
publicCC 
stringCC 
textCC 
{CC  
getCC! $
{CC% &
returnCC' -
m_TextCC. 4
;CC4 5
}CC6 7
setCC8 ;
{CC< =
m_TextCC> D
=CCE F
valueCCG L
;CCL M
}CCN O
}CCP Q
publicHH 
SpriteHH 
imageHH 
{HH  !
getHH" %
{HH& '
returnHH( .
m_ImageHH/ 6
;HH6 7
}HH8 9
setHH: =
{HH> ?
m_ImageHH@ G
=HHH I
valueHHJ O
;HHO P
}HHQ R
}HHS T
publicJJ 

OptionDataJJ 
(JJ 
)JJ 
{JJ  !
}JJ" #
publicLL 

OptionDataLL 
(LL 
stringLL $
textLL% )
)LL) *
{MM 
thisNN 
.NN 
textNN 
=NN 
textNN  
;NN  !
}OO 
publicQQ 

OptionDataQQ 
(QQ 
SpriteQQ $
imageQQ% *
)QQ* +
{RR 
thisSS 
.SS 
imageSS 
=SS 
imageSS "
;SS" #
}TT 
public[[ 

OptionData[[ 
([[ 
string[[ $
text[[% )
,[[) *
Sprite[[+ 1
image[[2 7
)[[7 8
{\\ 
this]] 
.]] 
text]] 
=]] 
text]]  
;]]  !
this^^ 
.^^ 
image^^ 
=^^ 
image^^ "
;^^" #
}__ 
}`` 	
[bb 	
Serializablebb	 
]bb 
publicii 
classii 
OptionDataListii #
{jj 	
[kk 
SerializeFieldkk 
]kk 
privatell 
Listll 
<ll 

OptionDatall #
>ll# $
	m_Optionsll% .
;ll. /
publicqq 
Listqq 
<qq 

OptionDataqq "
>qq" #
optionsqq$ +
{qq, -
getqq. 1
{qq2 3
returnqq4 :
	m_Optionsqq; D
;qqD E
}qqF G
setqqH K
{qqL M
	m_OptionsqqN W
=qqX Y
valueqqZ _
;qq_ `
}qqa b
}qqc d
publictt 
OptionDataListtt !
(tt! "
)tt" #
{uu 
optionsvv 
=vv 
newvv 
Listvv "
<vv" #

OptionDatavv# -
>vv- .
(vv. /
)vv/ 0
;vv0 1
}ww 
}xx 	
[zz 	
Serializablezz	 
]zz 
public~~ 
class~~ 
DropdownEvent~~ "
:~~# $

UnityEvent~~% /
<~~/ 0
int~~0 3
>~~3 4
{~~5 6
}~~7 8
[
ÅÅ 	
SerializeField
ÅÅ	 
]
ÅÅ 
private
ÇÇ 
RectTransform
ÇÇ 

m_Template
ÇÇ (
;
ÇÇ( )
public
áá 
RectTransform
áá 
template
áá %
{
áá& '
get
áá( +
{
áá, -
return
áá. 4

m_Template
áá5 ?
;
áá? @
}
ááA B
set
ááC F
{
ááG H

m_Template
ááI S
=
ááT U
value
ááV [
;
áá[ \
RefreshShownValue
áá] n
(
áán o
)
ááo p
;
ááp q
}
áár s
}
áát u
[
ää 	
SerializeField
ää	 
]
ää 
private
ãã 
TMP_Text
ãã 
m_CaptionText
ãã &
;
ãã& '
public
êê 
TMP_Text
êê 
captionText
êê #
{
êê$ %
get
êê& )
{
êê* +
return
êê, 2
m_CaptionText
êê3 @
;
êê@ A
}
êêB C
set
êêD G
{
êêH I
m_CaptionText
êêJ W
=
êêX Y
value
êêZ _
;
êê_ `
RefreshShownValue
êêa r
(
êêr s
)
êês t
;
êêt u
}
êêv w
}
êêx y
[
íí 	
SerializeField
íí	 
]
íí 
private
ìì 
Image
ìì 
m_CaptionImage
ìì $
;
ìì$ %
public
òò 
Image
òò 
captionImage
òò !
{
òò" #
get
òò$ '
{
òò( )
return
òò* 0
m_CaptionImage
òò1 ?
;
òò? @
}
òòA B
set
òòC F
{
òòG H
m_CaptionImage
òòI W
=
òòX Y
value
òòZ _
;
òò_ `
RefreshShownValue
òòa r
(
òòr s
)
òòs t
;
òòt u
}
òòv w
}
òòx y
[
öö 	
SerializeField
öö	 
]
öö 
private
õõ 
Graphic
õõ 
m_Placeholder
õõ %
;
õõ% &
public
†† 
Graphic
†† 
placeholder
†† "
{
††# $
get
††% (
{
††) *
return
††+ 1
m_Placeholder
††2 ?
;
††? @
}
††A B
set
††C F
{
††G H
m_Placeholder
††I V
=
††W X
value
††Y ^
;
††^ _
RefreshShownValue
††` q
(
††q r
)
††r s
;
††s t
}
††u v
}
††w x
[
¢¢ 	
Space
¢¢	 
]
¢¢ 
[
§§ 	
SerializeField
§§	 
]
§§ 
private
•• 
TMP_Text
•• 

m_ItemText
•• #
;
••# $
public
™™ 
TMP_Text
™™ 
itemText
™™  
{
™™! "
get
™™# &
{
™™' (
return
™™) /

m_ItemText
™™0 :
;
™™: ;
}
™™< =
set
™™> A
{
™™B C

m_ItemText
™™D N
=
™™O P
value
™™Q V
;
™™V W
RefreshShownValue
™™X i
(
™™i j
)
™™j k
;
™™k l
}
™™m n
}
™™o p
[
¨¨ 	
SerializeField
¨¨	 
]
¨¨ 
private
≠≠ 
Image
≠≠ 
m_ItemImage
≠≠ !
;
≠≠! "
public
≤≤ 
Image
≤≤ 
	itemImage
≤≤ 
{
≤≤  
get
≤≤! $
{
≤≤% &
return
≤≤' -
m_ItemImage
≤≤. 9
;
≤≤9 :
}
≤≤; <
set
≤≤= @
{
≤≤A B
m_ItemImage
≤≤C N
=
≤≤O P
value
≤≤Q V
;
≤≤V W
RefreshShownValue
≤≤X i
(
≤≤i j
)
≤≤j k
;
≤≤k l
}
≤≤m n
}
≤≤o p
[
¥¥ 	
Space
¥¥	 
]
¥¥ 
[
∂∂ 	
SerializeField
∂∂	 
]
∂∂ 
private
∑∑ 
int
∑∑ 
m_Value
∑∑ 
;
∑∑ 
[
ππ 	
Space
ππ	 
]
ππ 
[
ΩΩ 	
SerializeField
ΩΩ	 
]
ΩΩ 
private
ææ 
OptionDataList
ææ 
	m_Options
ææ (
=
ææ) *
new
ææ+ .
OptionDataList
ææ/ =
(
ææ= >
)
ææ> ?
;
ææ? @
public
õõ 
List
õõ 
<
õõ 

OptionData
õõ 
>
õõ 
options
õõ  '
{
úú 	
get
ùù 
{
ùù 
return
ùù 
	m_Options
ùù "
.
ùù" #
options
ùù# *
;
ùù* +
}
ùù, -
set
ûû 
{
ûû 
	m_Options
ûû 
.
ûû 
options
ûû #
=
ûû$ %
value
ûû& +
;
ûû+ ,
RefreshShownValue
ûû- >
(
ûû> ?
)
ûû? @
;
ûû@ A
}
ûûB C
}
üü 	
[
°° 	
Space
°°	 
]
°° 
[
§§ 	
SerializeField
§§	 
]
§§ 
private
•• 
DropdownEvent
•• 
m_OnValueChanged
•• .
=
••/ 0
new
••1 4
DropdownEvent
••5 B
(
••B C
)
••C D
;
••D E
public
–– 
DropdownEvent
–– 
onValueChanged
–– +
{
––, -
get
––. 1
{
––2 3
return
––4 :
m_OnValueChanged
––; K
;
––K L
}
––M N
set
––O R
{
––S T
m_OnValueChanged
––U e
=
––f g
value
––h m
;
––m n
}
––o p
}
––q r
[
““ 	
SerializeField
““	 
]
““ 
private
”” 
float
”” 
m_AlphaFadeSpeed
”” &
=
””' (
$num
””) .
;
””. /
public
ÿÿ 
float
ÿÿ 
alphaFadeSpeed
ÿÿ #
{
ÿÿ$ %
get
ÿÿ& )
{
ÿÿ* +
return
ÿÿ, 2
m_AlphaFadeSpeed
ÿÿ3 C
;
ÿÿC D
}
ÿÿE F
set
ÿÿG J
{
ÿÿK L
m_AlphaFadeSpeed
ÿÿM ]
=
ÿÿ^ _
value
ÿÿ` e
;
ÿÿe f
}
ÿÿg h
}
ÿÿi j
private
⁄⁄ 

GameObject
⁄⁄ 

m_Dropdown
⁄⁄ %
;
⁄⁄% &
private
€€ 

GameObject
€€ 
	m_Blocker
€€ $
;
€€$ %
private
‹‹ 
List
‹‹ 
<
‹‹ 
DropdownItem
‹‹ !
>
‹‹! "
m_Items
‹‹# *
=
‹‹+ ,
new
‹‹- 0
List
‹‹1 5
<
‹‹5 6
DropdownItem
‹‹6 B
>
‹‹B C
(
‹‹C D
)
‹‹D E
;
‹‹E F
private
›› 
TweenRunner
›› 
<
›› 

FloatTween
›› &
>
››& ' 
m_AlphaTweenRunner
››( :
;
››: ;
private
ﬁﬁ 
bool
ﬁﬁ 
validTemplate
ﬁﬁ "
=
ﬁﬁ# $
false
ﬁﬁ% *
;
ﬁﬁ* +
private
ﬂﬂ 
	Coroutine
ﬂﬂ 
m_Coroutine
ﬂﬂ %
=
ﬂﬂ& '
null
ﬂﬂ( ,
;
ﬂﬂ, -
private
·· 
static
·· 

OptionData
·· !
s_NoOptionData
··" 0
=
··1 2
new
··3 6

OptionData
··7 A
(
··A B
)
··B C
;
··C D
public
éé 
int
éé 
value
éé 
{
èè 	
get
êê 
{
ëë 
return
íí 
m_Value
íí 
;
íí 
}
ìì 
set
îî 
{
ïï 
SetValue
ññ 
(
ññ 
value
ññ 
)
ññ 
;
ññ  
}
óó 
}
òò 	
public
ûû 
void
ûû #
SetValueWithoutNotify
ûû )
(
ûû) *
int
ûû* -
input
ûû. 3
)
ûû3 4
{
üü 	
SetValue
†† 
(
†† 
input
†† 
,
†† 
false
†† !
)
††! "
;
††" #
}
°° 	
void
££ 
SetValue
££ 
(
££ 
int
££ 
value
££ 
,
££  
bool
££! %
sendCallback
££& 2
=
££3 4
true
££5 9
)
££9 :
{
§§ 	
if
•• 
(
•• 
Application
•• 
.
•• 
	isPlaying
•• %
&&
••& (
(
••) *
value
••* /
==
••0 2
m_Value
••3 :
||
••; =
options
••> E
.
••E F
Count
••F K
==
••L N
$num
••O P
)
••P Q
)
••Q R
return
¶¶ 
;
¶¶ 
m_Value
®® 
=
®® 
Mathf
®® 
.
®® 
Clamp
®® !
(
®®! "
value
®®" '
,
®®' (
m_Placeholder
®®) 6
?
®®7 8
-
®®9 :
$num
®®: ;
:
®®< =
$num
®®> ?
,
®®? @
options
®®A H
.
®®H I
Count
®®I N
-
®®O P
$num
®®Q R
)
®®R S
;
®®S T
RefreshShownValue
©© 
(
©© 
)
©© 
;
©©  
if
´´ 
(
´´ 
sendCallback
´´ 
)
´´ 
{
¨¨ !
UISystemProfilerApi
ÆÆ #
.
ÆÆ# $
	AddMarker
ÆÆ$ -
(
ÆÆ- .
$str
ÆÆ. >
,
ÆÆ> ?
this
ÆÆ@ D
)
ÆÆD E
;
ÆÆE F
m_OnValueChanged
ØØ  
.
ØØ  !
Invoke
ØØ! '
(
ØØ' (
m_Value
ØØ( /
)
ØØ/ 0
;
ØØ0 1
}
∞∞ 
}
±± 	
public
≥≥ 
bool
≥≥ 

IsExpanded
≥≥ 
{
≥≥  
get
≥≥! $
{
≥≥% &
return
≥≥' -

m_Dropdown
≥≥. 8
!=
≥≥9 ;
null
≥≥< @
;
≥≥@ A
}
≥≥B C
}
≥≥D E
	protected
µµ 
TMP_Dropdown
µµ 
(
µµ 
)
µµ  
{
µµ! "
}
µµ# $
	protected
∑∑ 
override
∑∑ 
void
∑∑ 
Awake
∑∑  %
(
∑∑% &
)
∑∑& '
{
∏∏ 	 
m_AlphaTweenRunner
ææ 
=
ææ  
new
ææ! $
TweenRunner
ææ% 0
<
ææ0 1

FloatTween
ææ1 ;
>
ææ; <
(
ææ< =
)
ææ= >
;
ææ> ? 
m_AlphaTweenRunner
øø 
.
øø 
Init
øø #
(
øø# $
this
øø$ (
)
øø( )
;
øø) *
if
¡¡ 
(
¡¡ 
m_CaptionImage
¡¡ 
)
¡¡ 
m_CaptionImage
¬¬ 
.
¬¬ 
enabled
¬¬ &
=
¬¬' (
(
¬¬) *
m_CaptionImage
¬¬* 8
.
¬¬8 9
sprite
¬¬9 ?
!=
¬¬@ B
null
¬¬C G
)
¬¬G H
;
¬¬H I
if
ƒƒ 
(
ƒƒ 

m_Template
ƒƒ 
)
ƒƒ 

m_Template
≈≈ 
.
≈≈ 

gameObject
≈≈ %
.
≈≈% &
	SetActive
≈≈& /
(
≈≈/ 0
false
≈≈0 5
)
≈≈5 6
;
≈≈6 7
}
∆∆ 	
	protected
»» 
override
»» 
void
»» 
Start
»»  %
(
»»% &
)
»»& '
{
…… 	
base
   
.
   
Start
   
(
   
)
   
;
   
RefreshShownValue
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ  
}
ÕÕ 	
	protected
–– 
override
–– 
void
–– 

OnValidate
––  *
(
––* +
)
––+ ,
{
—— 	
base
““ 
.
““ 

OnValidate
““ 
(
““ 
)
““ 
;
““ 
if
‘‘ 
(
‘‘ 
!
‘‘ 
IsActive
‘‘ 
(
‘‘ 
)
‘‘ 
)
‘‘ 
return
’’ 
;
’’ 
RefreshShownValue
◊◊ 
(
◊◊ 
)
◊◊ 
;
◊◊  
}
ÿÿ 	
	protected
€€ 
override
€€ 
void
€€ 
	OnDisable
€€  )
(
€€) *
)
€€* +
{
‹‹ 	*
ImmediateDestroyDropdownList
ﬁﬁ (
(
ﬁﬁ( )
)
ﬁﬁ) *
;
ﬁﬁ* +
if
‡‡ 
(
‡‡ 
	m_Blocker
‡‡ 
!=
‡‡ 
null
‡‡ !
)
‡‡! "
DestroyBlocker
·· 
(
·· 
	m_Blocker
·· (
)
··( )
;
··) *
	m_Blocker
„„ 
=
„„ 
null
„„ 
;
„„ 
base
ÂÂ 
.
ÂÂ 
	OnDisable
ÂÂ 
(
ÂÂ 
)
ÂÂ 
;
ÂÂ 
}
ÊÊ 	
public
ÓÓ 
void
ÓÓ 
RefreshShownValue
ÓÓ %
(
ÓÓ% &
)
ÓÓ& '
{
ÔÔ 	

OptionData
 
data
 
=
 
s_NoOptionData
 ,
;
, -
if
ÚÚ 
(
ÚÚ 
options
ÚÚ 
.
ÚÚ 
Count
ÚÚ 
>
ÚÚ 
$num
ÚÚ  !
&&
ÚÚ" $
m_Value
ÚÚ% ,
>=
ÚÚ- /
$num
ÚÚ0 1
)
ÚÚ1 2
data
ÛÛ 
=
ÛÛ 
options
ÛÛ 
[
ÛÛ 
Mathf
ÛÛ $
.
ÛÛ$ %
Clamp
ÛÛ% *
(
ÛÛ* +
m_Value
ÛÛ+ 2
,
ÛÛ2 3
$num
ÛÛ4 5
,
ÛÛ5 6
options
ÛÛ7 >
.
ÛÛ> ?
Count
ÛÛ? D
-
ÛÛE F
$num
ÛÛG H
)
ÛÛH I
]
ÛÛI J
;
ÛÛJ K
if
ıı 
(
ıı 
m_CaptionText
ıı 
)
ıı 
{
ˆˆ 
if
˜˜ 
(
˜˜ 
data
˜˜ 
!=
˜˜ 
null
˜˜  
&&
˜˜! #
data
˜˜$ (
.
˜˜( )
text
˜˜) -
!=
˜˜. 0
null
˜˜1 5
)
˜˜5 6
m_CaptionText
¯¯ !
.
¯¯! "
text
¯¯" &
=
¯¯' (
data
¯¯) -
.
¯¯- .
text
¯¯. 2
;
¯¯2 3
else
˘˘ 
m_CaptionText
˙˙ !
.
˙˙! "
text
˙˙" &
=
˙˙' (
$str
˙˙) +
;
˙˙+ ,
}
˚˚ 
if
˝˝ 
(
˝˝ 
m_CaptionImage
˝˝ 
)
˝˝ 
{
˛˛ 
if
ˇˇ 
(
ˇˇ 
data
ˇˇ 
!=
ˇˇ 
null
ˇˇ  
)
ˇˇ  !
m_CaptionImage
ÄÄ "
.
ÄÄ" #
sprite
ÄÄ# )
=
ÄÄ* +
data
ÄÄ, 0
.
ÄÄ0 1
image
ÄÄ1 6
;
ÄÄ6 7
else
ÅÅ 
m_CaptionImage
ÇÇ "
.
ÇÇ" #
sprite
ÇÇ# )
=
ÇÇ* +
null
ÇÇ, 0
;
ÇÇ0 1
m_CaptionImage
ÉÉ 
.
ÉÉ 
enabled
ÉÉ &
=
ÉÉ' (
(
ÉÉ) *
m_CaptionImage
ÉÉ* 8
.
ÉÉ8 9
sprite
ÉÉ9 ?
!=
ÉÉ@ B
null
ÉÉC G
)
ÉÉG H
;
ÉÉH I
}
ÑÑ 
if
ÜÜ 
(
ÜÜ 
m_Placeholder
ÜÜ 
)
ÜÜ 
{
áá 
m_Placeholder
àà 
.
àà 
enabled
àà %
=
àà& '
options
àà( /
.
àà/ 0
Count
àà0 5
==
àà6 8
$num
àà9 :
||
àà; =
m_Value
àà> E
==
ààF H
-
ààI J
$num
ààJ K
;
ààK L
}
ââ 
}
ää 	
public
ìì 
void
ìì 

AddOptions
ìì 
(
ìì 
List
ìì #
<
ìì# $

OptionData
ìì$ .
>
ìì. /
options
ìì0 7
)
ìì7 8
{
îî 	
this
ïï 
.
ïï 
options
ïï 
.
ïï 
AddRange
ïï !
(
ïï! "
options
ïï" )
)
ïï) *
;
ïï* +
RefreshShownValue
ññ 
(
ññ 
)
ññ 
;
ññ  
}
óó 	
public
ºº 
void
ºº 

AddOptions
ºº 
(
ºº 
List
ºº #
<
ºº# $
string
ºº$ *
>
ºº* +
options
ºº, 3
)
ºº3 4
{
ΩΩ 	
for
ææ 
(
ææ 
int
ææ 
i
ææ 
=
ææ 
$num
ææ 
;
ææ 
i
ææ 
<
ææ 
options
ææ  '
.
ææ' (
Count
ææ( -
;
ææ- .
i
ææ/ 0
++
ææ0 2
)
ææ2 3
this
øø 
.
øø 
options
øø 
.
øø 
Add
øø  
(
øø  !
new
øø! $

OptionData
øø% /
(
øø/ 0
options
øø0 7
[
øø7 8
i
øø8 9
]
øø9 :
)
øø: ;
)
øø; <
;
øø< =
RefreshShownValue
¡¡ 
(
¡¡ 
)
¡¡ 
;
¡¡  
}
¬¬ 	
public
ÀÀ 
void
ÀÀ 

AddOptions
ÀÀ 
(
ÀÀ 
List
ÀÀ #
<
ÀÀ# $
Sprite
ÀÀ$ *
>
ÀÀ* +
options
ÀÀ, 3
)
ÀÀ3 4
{
ÃÃ 	
for
ÕÕ 
(
ÕÕ 
int
ÕÕ 
i
ÕÕ 
=
ÕÕ 
$num
ÕÕ 
;
ÕÕ 
i
ÕÕ 
<
ÕÕ 
options
ÕÕ  '
.
ÕÕ' (
Count
ÕÕ( -
;
ÕÕ- .
i
ÕÕ/ 0
++
ÕÕ0 2
)
ÕÕ2 3
this
ŒŒ 
.
ŒŒ 
options
ŒŒ 
.
ŒŒ 
Add
ŒŒ  
(
ŒŒ  !
new
ŒŒ! $

OptionData
ŒŒ% /
(
ŒŒ/ 0
options
ŒŒ0 7
[
ŒŒ7 8
i
ŒŒ8 9
]
ŒŒ9 :
)
ŒŒ: ;
)
ŒŒ; <
;
ŒŒ< =
RefreshShownValue
–– 
(
–– 
)
–– 
;
––  
}
—— 	
public
÷÷ 
void
÷÷ 
ClearOptions
÷÷  
(
÷÷  !
)
÷÷! "
{
◊◊ 	
options
ÿÿ 
.
ÿÿ 
Clear
ÿÿ 
(
ÿÿ 
)
ÿÿ 
;
ÿÿ 
m_Value
ŸŸ 
=
ŸŸ 
m_Placeholder
ŸŸ #
?
ŸŸ$ %
-
ŸŸ& '
$num
ŸŸ' (
:
ŸŸ) *
$num
ŸŸ+ ,
;
ŸŸ, -
RefreshShownValue
⁄⁄ 
(
⁄⁄ 
)
⁄⁄ 
;
⁄⁄  
}
€€ 	
private
›› 
void
›› 
SetupTemplate
›› "
(
››" #
)
››# $
{
ﬁﬁ 	
validTemplate
ﬂﬂ 
=
ﬂﬂ 
false
ﬂﬂ !
;
ﬂﬂ! "
if
·· 
(
·· 
!
·· 

m_Template
·· 
)
·· 
{
‚‚ 
Debug
„„ 
.
„„ 
LogError
„„ 
(
„„ 
$str„„ ∑
,„„∑ ∏
this„„π Ω
)„„Ω æ
;„„æ ø
return
‰‰ 
;
‰‰ 
}
ÂÂ 

GameObject
ÁÁ 

templateGo
ÁÁ !
=
ÁÁ" #

m_Template
ÁÁ$ .
.
ÁÁ. /

gameObject
ÁÁ/ 9
;
ÁÁ9 :

templateGo
ËË 
.
ËË 
	SetActive
ËË  
(
ËË  !
true
ËË! %
)
ËË% &
;
ËË& '
Toggle
ÈÈ 

itemToggle
ÈÈ 
=
ÈÈ 

m_Template
ÈÈ  *
.
ÈÈ* +$
GetComponentInChildren
ÈÈ+ A
<
ÈÈA B
Toggle
ÈÈB H
>
ÈÈH I
(
ÈÈI J
)
ÈÈJ K
;
ÈÈK L
validTemplate
ÎÎ 
=
ÎÎ 
true
ÎÎ  
;
ÎÎ  !
if
ÏÏ 
(
ÏÏ 
!
ÏÏ 

itemToggle
ÏÏ 
||
ÏÏ 

itemToggle
ÏÏ )
.
ÏÏ) *
	transform
ÏÏ* 3
==
ÏÏ4 6
template
ÏÏ7 ?
)
ÏÏ? @
{
ÌÌ 
validTemplate
ÓÓ 
=
ÓÓ 
false
ÓÓ  %
;
ÓÓ% &
Debug
ÔÔ 
.
ÔÔ 
LogError
ÔÔ 
(
ÔÔ 
$strÔÔ õ
,ÔÔõ ú
templateÔÔù •
)ÔÔ• ¶
;ÔÔ¶ ß
}
 
else
ÒÒ 
if
ÒÒ 
(
ÒÒ 
!
ÒÒ 
(
ÒÒ 

itemToggle
ÒÒ !
.
ÒÒ! "
	transform
ÒÒ" +
.
ÒÒ+ ,
parent
ÒÒ, 2
is
ÒÒ3 5
RectTransform
ÒÒ6 C
)
ÒÒC D
)
ÒÒD E
{
ÚÚ 
validTemplate
ÛÛ 
=
ÛÛ 
false
ÛÛ  %
;
ÛÛ% &
Debug
ÙÙ 
.
ÙÙ 
LogError
ÙÙ 
(
ÙÙ 
$strÙÙ •
,ÙÙ• ¶
templateÙÙß Ø
)ÙÙØ ∞
;ÙÙ∞ ±
}
ıı 
else
ˆˆ 
if
ˆˆ 
(
ˆˆ 
itemText
ˆˆ 
!=
ˆˆ  
null
ˆˆ! %
&&
ˆˆ& (
!
ˆˆ) *
itemText
ˆˆ* 2
.
ˆˆ2 3
	transform
ˆˆ3 <
.
ˆˆ< =
	IsChildOf
ˆˆ= F
(
ˆˆF G

itemToggle
ˆˆG Q
.
ˆˆQ R
	transform
ˆˆR [
)
ˆˆ[ \
)
ˆˆ\ ]
{
˜˜ 
validTemplate
¯¯ 
=
¯¯ 
false
¯¯  %
;
¯¯% &
Debug
˘˘ 
.
˘˘ 
LogError
˘˘ 
(
˘˘ 
$str˘˘ Ñ
,˘˘Ñ Ö
template˘˘Ü é
)˘˘é è
;˘˘è ê
}
˙˙ 
else
˚˚ 
if
˚˚ 
(
˚˚ 
	itemImage
˚˚ 
!=
˚˚ !
null
˚˚" &
&&
˚˚' )
!
˚˚* +
	itemImage
˚˚+ 4
.
˚˚4 5
	transform
˚˚5 >
.
˚˚> ?
	IsChildOf
˚˚? H
(
˚˚H I

itemToggle
˚˚I S
.
˚˚S T
	transform
˚˚T ]
)
˚˚] ^
)
˚˚^ _
{
¸¸ 
validTemplate
˝˝ 
=
˝˝ 
false
˝˝  %
;
˝˝% &
Debug
˛˛ 
.
˛˛ 
LogError
˛˛ 
(
˛˛ 
$str˛˛ Ö
,˛˛Ö Ü
template˛˛á è
)˛˛è ê
;˛˛ê ë
}
ˇˇ 
if
ÅÅ 
(
ÅÅ 
!
ÅÅ 
validTemplate
ÅÅ 
)
ÅÅ 
{
ÇÇ 

templateGo
ÉÉ 
.
ÉÉ 
	SetActive
ÉÉ $
(
ÉÉ$ %
false
ÉÉ% *
)
ÉÉ* +
;
ÉÉ+ ,
return
ÑÑ 
;
ÑÑ 
}
ÖÖ 
DropdownItem
áá 
item
áá 
=
áá 

itemToggle
áá  *
.
áá* +

gameObject
áá+ 5
.
áá5 6
AddComponent
áá6 B
<
ááB C
DropdownItem
ááC O
>
ááO P
(
ááP Q
)
ááQ R
;
ááR S
item
àà 
.
àà 
text
àà 
=
àà 

m_ItemText
àà "
;
àà" #
item
ââ 
.
ââ 
image
ââ 
=
ââ 
m_ItemImage
ââ $
;
ââ$ %
item
ää 
.
ää 
toggle
ää 
=
ää 

itemToggle
ää $
;
ää$ %
item
ãã 
.
ãã 
rectTransform
ãã 
=
ãã  
(
ãã! "
RectTransform
ãã" /
)
ãã/ 0

itemToggle
ãã0 :
.
ãã: ;
	transform
ãã; D
;
ããD E
Canvas
éé 
parentCanvas
éé 
=
éé  !
null
éé" &
;
éé& '
	Transform
èè 
parentTransform
èè %
=
èè& '

m_Template
èè( 2
.
èè2 3
parent
èè3 9
;
èè9 :
while
êê 
(
êê 
parentTransform
êê "
!=
êê# %
null
êê& *
)
êê* +
{
ëë 
parentCanvas
íí 
=
íí 
parentTransform
íí .
.
íí. /
GetComponent
íí/ ;
<
íí; <
Canvas
íí< B
>
ííB C
(
ííC D
)
ííD E
;
ííE F
if
ìì 
(
ìì 
parentCanvas
ìì  
!=
ìì! #
null
ìì$ (
)
ìì( )
break
îî 
;
îî 
parentTransform
ññ 
=
ññ  !
parentTransform
ññ" 1
.
ññ1 2
parent
ññ2 8
;
ññ8 9
}
óó 
Canvas
ôô 
popupCanvas
ôô 
=
ôô  
GetOrAddComponent
ôô! 2
<
ôô2 3
Canvas
ôô3 9
>
ôô9 :
(
ôô: ;

templateGo
ôô; E
)
ôôE F
;
ôôF G
popupCanvas
öö 
.
öö 
overrideSorting
öö '
=
öö( )
true
öö* .
;
öö. /
popupCanvas
õõ 
.
õõ 
sortingOrder
õõ $
=
õõ% &
$num
õõ' ,
;
õõ, -
if
ûû 
(
ûû 
parentCanvas
ûû 
!=
ûû 
null
ûû  $
)
ûû$ %
{
üü 
	Component
†† 
[
†† 
]
†† 

components
†† &
=
††' (
parentCanvas
††) 5
.
††5 6
GetComponents
††6 C
<
††C D
BaseRaycaster
††D Q
>
††Q R
(
††R S
)
††S T
;
††T U
for
°° 
(
°° 
int
°° 
i
°° 
=
°° 
$num
°° 
;
°° 
i
°°  !
<
°°" #

components
°°$ .
.
°°. /
Length
°°/ 5
;
°°5 6
i
°°7 8
++
°°8 :
)
°°: ;
{
¢¢ 
Type
££ 
raycasterType
££ &
=
££' (

components
££) 3
[
££3 4
i
££4 5
]
££5 6
.
££6 7
GetType
££7 >
(
££> ?
)
££? @
;
££@ A
if
§§ 
(
§§ 

templateGo
§§ "
.
§§" #
GetComponent
§§# /
(
§§/ 0
raycasterType
§§0 =
)
§§= >
==
§§? A
null
§§B F
)
§§F G
{
•• 

templateGo
¶¶ "
.
¶¶" #
AddComponent
¶¶# /
(
¶¶/ 0
raycasterType
¶¶0 =
)
¶¶= >
;
¶¶> ?
}
ßß 
}
®® 
}
©© 
else
™™ 
{
´´ 
GetOrAddComponent
¨¨ !
<
¨¨! "
GraphicRaycaster
¨¨" 2
>
¨¨2 3
(
¨¨3 4

templateGo
¨¨4 >
)
¨¨> ?
;
¨¨? @
}
≠≠ 
GetOrAddComponent
ØØ 
<
ØØ 
CanvasGroup
ØØ )
>
ØØ) *
(
ØØ* +

templateGo
ØØ+ 5
)
ØØ5 6
;
ØØ6 7

templateGo
∞∞ 
.
∞∞ 
	SetActive
∞∞  
(
∞∞  !
false
∞∞! &
)
∞∞& '
;
∞∞' (
validTemplate
≤≤ 
=
≤≤ 
true
≤≤  
;
≤≤  !
}
≥≥ 	
private
µµ 
static
µµ 
T
µµ 
GetOrAddComponent
µµ *
<
µµ* +
T
µµ+ ,
>
µµ, -
(
µµ- .

GameObject
µµ. 8
go
µµ9 ;
)
µµ; <
where
µµ= B
T
µµC D
:
µµE F
	Component
µµG P
{
∂∂ 	
T
∑∑ 
comp
∑∑ 
=
∑∑ 
go
∑∑ 
.
∑∑ 
GetComponent
∑∑ $
<
∑∑$ %
T
∑∑% &
>
∑∑& '
(
∑∑' (
)
∑∑( )
;
∑∑) *
if
∏∏ 
(
∏∏ 
!
∏∏ 
comp
∏∏ 
)
∏∏ 
comp
ππ 
=
ππ 
go
ππ 
.
ππ 
AddComponent
ππ &
<
ππ& '
T
ππ' (
>
ππ( )
(
ππ) *
)
ππ* +
;
ππ+ ,
return
∫∫ 
comp
∫∫ 
;
∫∫ 
}
ªª 	
public
¡¡ 
virtual
¡¡ 
void
¡¡ 
OnPointerClick
¡¡ *
(
¡¡* +
PointerEventData
¡¡+ ;
	eventData
¡¡< E
)
¡¡E F
{
¬¬ 	
Show
√√ 
(
√√ 
)
√√ 
;
√√ 
}
ƒƒ 	
public
   
virtual
   
void
   
OnSubmit
   $
(
  $ %
BaseEventData
  % 2
	eventData
  3 <
)
  < =
{
ÀÀ 	
Show
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
}
ÕÕ 	
public
÷÷ 
virtual
÷÷ 
void
÷÷ 
OnCancel
÷÷ $
(
÷÷$ %
BaseEventData
÷÷% 2
	eventData
÷÷3 <
)
÷÷< =
{
◊◊ 	
Hide
ÿÿ 
(
ÿÿ 
)
ÿÿ 
;
ÿÿ 
}
ŸŸ 	
public
ÂÂ 
void
ÂÂ 
Show
ÂÂ 
(
ÂÂ 
)
ÂÂ 
{
ÊÊ 	
if
ÁÁ 
(
ÁÁ 
m_Coroutine
ÁÁ 
!=
ÁÁ 
null
ÁÁ #
)
ÁÁ# $
{
ËË 
StopCoroutine
ÈÈ 
(
ÈÈ 
m_Coroutine
ÈÈ )
)
ÈÈ) *
;
ÈÈ* +*
ImmediateDestroyDropdownList
ÍÍ ,
(
ÍÍ, -
)
ÍÍ- .
;
ÍÍ. /
}
ÎÎ 
if
ÌÌ 
(
ÌÌ 
!
ÌÌ 
IsActive
ÌÌ 
(
ÌÌ 
)
ÌÌ 
||
ÌÌ 
!
ÌÌ  
IsInteractable
ÌÌ  .
(
ÌÌ. /
)
ÌÌ/ 0
||
ÌÌ1 3

m_Dropdown
ÌÌ4 >
!=
ÌÌ? A
null
ÌÌB F
)
ÌÌF G
return
ÓÓ 
;
ÓÓ 
var
ÒÒ 
list
ÒÒ 
=
ÒÒ 
TMP_ListPool
ÒÒ #
<
ÒÒ# $
Canvas
ÒÒ$ *
>
ÒÒ* +
.
ÒÒ+ ,
Get
ÒÒ, /
(
ÒÒ/ 0
)
ÒÒ0 1
;
ÒÒ1 2

gameObject
ÚÚ 
.
ÚÚ #
GetComponentsInParent
ÚÚ ,
(
ÚÚ, -
false
ÚÚ- 2
,
ÚÚ2 3
list
ÚÚ4 8
)
ÚÚ8 9
;
ÚÚ9 :
if
ÛÛ 
(
ÛÛ 
list
ÛÛ 
.
ÛÛ 
Count
ÛÛ 
==
ÛÛ 
$num
ÛÛ 
)
ÛÛ  
return
ÙÙ 
;
ÙÙ 
Canvas
ˆˆ 

rootCanvas
ˆˆ 
=
ˆˆ 
list
ˆˆ  $
[
ˆˆ$ %
list
ˆˆ% )
.
ˆˆ) *
Count
ˆˆ* /
-
ˆˆ0 1
$num
ˆˆ2 3
]
ˆˆ3 4
;
ˆˆ4 5
for
˜˜ 
(
˜˜ 
int
˜˜ 
i
˜˜ 
=
˜˜ 
$num
˜˜ 
;
˜˜ 
i
˜˜ 
<
˜˜ 
list
˜˜  $
.
˜˜$ %
Count
˜˜% *
;
˜˜* +
i
˜˜, -
++
˜˜- /
)
˜˜/ 0
{
¯¯ 
if
˘˘ 
(
˘˘ 
list
˘˘ 
[
˘˘ 
i
˘˘ 
]
˘˘ 
.
˘˘ 
isRootCanvas
˘˘ (
)
˘˘( )
{
˙˙ 

rootCanvas
˚˚ 
=
˚˚  
list
˚˚! %
[
˚˚% &
i
˚˚& '
]
˚˚' (
;
˚˚( )
break
¸¸ 
;
¸¸ 
}
˝˝ 
}
˛˛ 
TMP_ListPool
ÄÄ 
<
ÄÄ 
Canvas
ÄÄ 
>
ÄÄ  
.
ÄÄ  !
Release
ÄÄ! (
(
ÄÄ( )
list
ÄÄ) -
)
ÄÄ- .
;
ÄÄ. /
if
ÇÇ 
(
ÇÇ 
!
ÇÇ 
validTemplate
ÇÇ 
)
ÇÇ 
{
ÉÉ 
SetupTemplate
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ  
if
ÖÖ 
(
ÖÖ 
!
ÖÖ 
validTemplate
ÖÖ "
)
ÖÖ" #
return
ÜÜ 
;
ÜÜ 
}
áá 

m_Template
ââ 
.
ââ 

gameObject
ââ !
.
ââ! "
	SetActive
ââ" +
(
ââ+ ,
true
ââ, 0
)
ââ0 1
;
ââ1 2

m_Template
åå 
.
åå 
GetComponent
åå #
<
åå# $
Canvas
åå$ *
>
åå* +
(
åå+ ,
)
åå, -
.
åå- .
sortingLayerID
åå. <
=
åå= >

rootCanvas
åå? I
.
ååI J
sortingLayerID
ååJ X
;
ååX Y

m_Dropdown
èè 
=
èè  
CreateDropdownList
èè +
(
èè+ ,

m_Template
èè, 6
.
èè6 7

gameObject
èè7 A
)
èèA B
;
èèB C

m_Dropdown
êê 
.
êê 
name
êê 
=
êê 
$str
êê -
;
êê- .

m_Dropdown
ëë 
.
ëë 
	SetActive
ëë  
(
ëë  !
true
ëë! %
)
ëë% &
;
ëë& '
RectTransform
îî #
dropdownRectTransform
îî /
=
îî0 1

m_Dropdown
îî2 <
.
îî< =
	transform
îî= F
as
îîG I
RectTransform
îîJ W
;
îîW X#
dropdownRectTransform
ïï !
.
ïï! "
	SetParent
ïï" +
(
ïï+ ,

m_Template
ïï, 6
.
ïï6 7
	transform
ïï7 @
.
ïï@ A
parent
ïïA G
,
ïïG H
false
ïïI N
)
ïïN O
;
ïïO P
DropdownItem
öö 
itemTemplate
öö %
=
öö& '

m_Dropdown
öö( 2
.
öö2 3$
GetComponentInChildren
öö3 I
<
ööI J
DropdownItem
ööJ V
>
ööV W
(
ööW X
)
ööX Y
;
ööY Z

GameObject
úú 
content
úú 
=
úú  
itemTemplate
úú! -
.
úú- .
rectTransform
úú. ;
.
úú; <
parent
úú< B
.
úúB C

gameObject
úúC M
;
úúM N
RectTransform
ùù "
contentRectTransform
ùù .
=
ùù/ 0
content
ùù1 8
.
ùù8 9
	transform
ùù9 B
as
ùùC E
RectTransform
ùùF S
;
ùùS T
itemTemplate
ûû 
.
ûû 
rectTransform
ûû &
.
ûû& '

gameObject
ûû' 1
.
ûû1 2
	SetActive
ûû2 ;
(
ûû; <
true
ûû< @
)
ûû@ A
;
ûûA B
Rect
°° !
dropdownContentRect
°° $
=
°°% &"
contentRectTransform
°°' ;
.
°°; <
rect
°°< @
;
°°@ A
Rect
¢¢ 
itemTemplateRect
¢¢ !
=
¢¢" #
itemTemplate
¢¢$ 0
.
¢¢0 1
rectTransform
¢¢1 >
.
¢¢> ?
rect
¢¢? C
;
¢¢C D
Vector2
•• 
	offsetMin
•• 
=
•• 
itemTemplateRect
••  0
.
••0 1
min
••1 4
-
••5 6!
dropdownContentRect
••7 J
.
••J K
min
••K N
+
••O P
(
••Q R
Vector2
••R Y
)
••Y Z
itemTemplate
••Z f
.
••f g
rectTransform
••g t
.
••t u
localPosition••u Ç
;••Ç É
Vector2
¶¶ 
	offsetMax
¶¶ 
=
¶¶ 
itemTemplateRect
¶¶  0
.
¶¶0 1
max
¶¶1 4
-
¶¶5 6!
dropdownContentRect
¶¶7 J
.
¶¶J K
max
¶¶K N
+
¶¶O P
(
¶¶Q R
Vector2
¶¶R Y
)
¶¶Y Z
itemTemplate
¶¶Z f
.
¶¶f g
rectTransform
¶¶g t
.
¶¶t u
localPosition¶¶u Ç
;¶¶Ç É
Vector2
ßß 
itemSize
ßß 
=
ßß 
itemTemplateRect
ßß /
.
ßß/ 0
size
ßß0 4
;
ßß4 5
m_Items
©© 
.
©© 
Clear
©© 
(
©© 
)
©© 
;
©© 
Toggle
´´ 
prev
´´ 
=
´´ 
null
´´ 
;
´´ 
for
¨¨ 
(
¨¨ 
int
¨¨ 
i
¨¨ 
=
¨¨ 
$num
¨¨ 
;
¨¨ 
i
¨¨ 
<
¨¨ 
options
¨¨  '
.
¨¨' (
Count
¨¨( -
;
¨¨- .
++
¨¨/ 1
i
¨¨1 2
)
¨¨2 3
{
≠≠ 

OptionData
ÆÆ 
data
ÆÆ 
=
ÆÆ  !
options
ÆÆ" )
[
ÆÆ) *
i
ÆÆ* +
]
ÆÆ+ ,
;
ÆÆ, -
DropdownItem
ØØ 
item
ØØ !
=
ØØ" #
AddItem
ØØ$ +
(
ØØ+ ,
data
ØØ, 0
,
ØØ0 1
value
ØØ2 7
==
ØØ8 :
i
ØØ; <
,
ØØ< =
itemTemplate
ØØ> J
,
ØØJ K
m_Items
ØØL S
)
ØØS T
;
ØØT U
if
∞∞ 
(
∞∞ 
item
∞∞ 
==
∞∞ 
null
∞∞  
)
∞∞  !
continue
±± 
;
±± 
item
¥¥ 
.
¥¥ 
toggle
¥¥ 
.
¥¥ 
isOn
¥¥  
=
¥¥! "
value
¥¥# (
==
¥¥) +
i
¥¥, -
;
¥¥- .
item
µµ 
.
µµ 
toggle
µµ 
.
µµ 
onValueChanged
µµ *
.
µµ* +
AddListener
µµ+ 6
(
µµ6 7
x
µµ7 8
=>
µµ9 ;
OnSelectItem
µµ< H
(
µµH I
item
µµI M
.
µµM N
toggle
µµN T
)
µµT U
)
µµU V
;
µµV W
if
∏∏ 
(
∏∏ 
item
∏∏ 
.
∏∏ 
toggle
∏∏ 
.
∏∏  
isOn
∏∏  $
)
∏∏$ %
item
ππ 
.
ππ 
toggle
ππ 
.
ππ  
Select
ππ  &
(
ππ& '
)
ππ' (
;
ππ( )
if
ºº 
(
ºº 
prev
ºº 
!=
ºº 
null
ºº  
)
ºº  !
{
ΩΩ 

Navigation
ææ 
prevNav
ææ &
=
ææ' (
prev
ææ) -
.
ææ- .

navigation
ææ. 8
;
ææ8 9

Navigation
øø 
	toggleNav
øø (
=
øø) *
item
øø+ /
.
øø/ 0
toggle
øø0 6
.
øø6 7

navigation
øø7 A
;
øøA B
prevNav
¿¿ 
.
¿¿ 
mode
¿¿  
=
¿¿! "

Navigation
¿¿# -
.
¿¿- .
Mode
¿¿. 2
.
¿¿2 3
Explicit
¿¿3 ;
;
¿¿; <
	toggleNav
¡¡ 
.
¡¡ 
mode
¡¡ "
=
¡¡# $

Navigation
¡¡% /
.
¡¡/ 0
Mode
¡¡0 4
.
¡¡4 5
Explicit
¡¡5 =
;
¡¡= >
prevNav
√√ 
.
√√ 
selectOnDown
√√ (
=
√√) *
item
√√+ /
.
√√/ 0
toggle
√√0 6
;
√√6 7
prevNav
ƒƒ 
.
ƒƒ 
selectOnRight
ƒƒ )
=
ƒƒ* +
item
ƒƒ, 0
.
ƒƒ0 1
toggle
ƒƒ1 7
;
ƒƒ7 8
	toggleNav
≈≈ 
.
≈≈ 
selectOnLeft
≈≈ *
=
≈≈+ ,
prev
≈≈- 1
;
≈≈1 2
	toggleNav
∆∆ 
.
∆∆ 

selectOnUp
∆∆ (
=
∆∆) *
prev
∆∆+ /
;
∆∆/ 0
prev
»» 
.
»» 

navigation
»» #
=
»»$ %
prevNav
»»& -
;
»»- .
item
…… 
.
…… 
toggle
…… 
.
……  

navigation
……  *
=
……+ ,
	toggleNav
……- 6
;
……6 7
}
   
prev
ÀÀ 
=
ÀÀ 
item
ÀÀ 
.
ÀÀ 
toggle
ÀÀ "
;
ÀÀ" #
}
ÃÃ 
Vector2
œœ 
	sizeDelta
œœ 
=
œœ "
contentRectTransform
œœ  4
.
œœ4 5
	sizeDelta
œœ5 >
;
œœ> ?
	sizeDelta
–– 
.
–– 
y
–– 
=
–– 
itemSize
–– "
.
––" #
y
––# $
*
––% &
m_Items
––' .
.
––. /
Count
––/ 4
+
––5 6
	offsetMin
––7 @
.
––@ A
y
––A B
-
––C D
	offsetMax
––E N
.
––N O
y
––O P
;
––P Q"
contentRectTransform
——  
.
——  !
	sizeDelta
——! *
=
——+ ,
	sizeDelta
——- 6
;
——6 7
float
”” 

extraSpace
”” 
=
”” #
dropdownRectTransform
”” 4
.
””4 5
rect
””5 9
.
””9 :
height
””: @
-
””A B"
contentRectTransform
””C W
.
””W X
rect
””X \
.
””\ ]
height
””] c
;
””c d
if
‘‘ 
(
‘‘ 

extraSpace
‘‘ 
>
‘‘ 
$num
‘‘ 
)
‘‘ #
dropdownRectTransform
’’ %
.
’’% &
	sizeDelta
’’& /
=
’’0 1
new
’’2 5
Vector2
’’6 =
(
’’= >#
dropdownRectTransform
’’> S
.
’’S T
	sizeDelta
’’T ]
.
’’] ^
x
’’^ _
,
’’_ `#
dropdownRectTransform
’’a v
.
’’v w
	sizeDelta’’w Ä
.’’Ä Å
y’’Å Ç
-’’É Ñ

extraSpace’’Ö è
)’’è ê
;’’ê ë
Vector3
⁄⁄ 
[
⁄⁄ 
]
⁄⁄ 
corners
⁄⁄ 
=
⁄⁄ 
new
⁄⁄  #
Vector3
⁄⁄$ +
[
⁄⁄+ ,
$num
⁄⁄, -
]
⁄⁄- .
;
⁄⁄. /#
dropdownRectTransform
€€ !
.
€€! "
GetWorldCorners
€€" 1
(
€€1 2
corners
€€2 9
)
€€9 :
;
€€: ;
RectTransform
›› %
rootCanvasRectTransform
›› 1
=
››2 3

rootCanvas
››4 >
.
››> ?
	transform
››? H
as
››I K
RectTransform
››L Y
;
››Y Z
Rect
ﬁﬁ 
rootCanvasRect
ﬁﬁ 
=
ﬁﬁ  !%
rootCanvasRectTransform
ﬁﬁ" 9
.
ﬁﬁ9 :
rect
ﬁﬁ: >
;
ﬁﬁ> ?
for
ﬂﬂ 
(
ﬂﬂ 
int
ﬂﬂ 
axis
ﬂﬂ 
=
ﬂﬂ 
$num
ﬂﬂ 
;
ﬂﬂ 
axis
ﬂﬂ #
<
ﬂﬂ$ %
$num
ﬂﬂ& '
;
ﬂﬂ' (
axis
ﬂﬂ) -
++
ﬂﬂ- /
)
ﬂﬂ/ 0
{
‡‡ 
bool
·· 
outside
·· 
=
·· 
false
·· $
;
··$ %
for
‚‚ 
(
‚‚ 
int
‚‚ 
i
‚‚ 
=
‚‚ 
$num
‚‚ 
;
‚‚ 
i
‚‚  !
<
‚‚" #
$num
‚‚$ %
;
‚‚% &
i
‚‚' (
++
‚‚( *
)
‚‚* +
{
„„ 
Vector3
‰‰ 
corner
‰‰ "
=
‰‰# $%
rootCanvasRectTransform
‰‰% <
.
‰‰< =#
InverseTransformPoint
‰‰= R
(
‰‰R S
corners
‰‰S Z
[
‰‰Z [
i
‰‰[ \
]
‰‰\ ]
)
‰‰] ^
;
‰‰^ _
if
ÂÂ 
(
ÂÂ 
(
ÂÂ 
corner
ÂÂ 
[
ÂÂ  
axis
ÂÂ  $
]
ÂÂ$ %
<
ÂÂ& '
rootCanvasRect
ÂÂ( 6
.
ÂÂ6 7
min
ÂÂ7 :
[
ÂÂ: ;
axis
ÂÂ; ?
]
ÂÂ? @
&&
ÂÂA C
!
ÂÂD E
Mathf
ÂÂE J
.
ÂÂJ K
Approximately
ÂÂK X
(
ÂÂX Y
corner
ÂÂY _
[
ÂÂ_ `
axis
ÂÂ` d
]
ÂÂd e
,
ÂÂe f
rootCanvasRect
ÂÂg u
.
ÂÂu v
min
ÂÂv y
[
ÂÂy z
axis
ÂÂz ~
]
ÂÂ~ 
)ÂÂ Ä
)ÂÂÄ Å
||ÂÂÇ Ñ
(
ÊÊ 
corner
ÊÊ 
[
ÊÊ  
axis
ÊÊ  $
]
ÊÊ$ %
>
ÊÊ& '
rootCanvasRect
ÊÊ( 6
.
ÊÊ6 7
max
ÊÊ7 :
[
ÊÊ: ;
axis
ÊÊ; ?
]
ÊÊ? @
&&
ÊÊA C
!
ÊÊD E
Mathf
ÊÊE J
.
ÊÊJ K
Approximately
ÊÊK X
(
ÊÊX Y
corner
ÊÊY _
[
ÊÊ_ `
axis
ÊÊ` d
]
ÊÊd e
,
ÊÊe f
rootCanvasRect
ÊÊg u
.
ÊÊu v
max
ÊÊv y
[
ÊÊy z
axis
ÊÊz ~
]
ÊÊ~ 
)ÊÊ Ä
)ÊÊÄ Å
)ÊÊÅ Ç
{
ÁÁ 
outside
ËË 
=
ËË  !
true
ËË" &
;
ËË& '
break
ÈÈ 
;
ÈÈ 
}
ÍÍ 
}
ÎÎ 
if
ÏÏ 
(
ÏÏ 
outside
ÏÏ 
)
ÏÏ "
RectTransformUtility
ÌÌ (
.
ÌÌ( )
FlipLayoutOnAxis
ÌÌ) 9
(
ÌÌ9 :#
dropdownRectTransform
ÌÌ: O
,
ÌÌO P
axis
ÌÌQ U
,
ÌÌU V
false
ÌÌW \
,
ÌÌ\ ]
false
ÌÌ^ c
)
ÌÌc d
;
ÌÌd e
}
ÓÓ 
for
 
(
 
int
 
i
 
=
 
$num
 
;
 
i
 
<
 
m_Items
  '
.
' (
Count
( -
;
- .
i
/ 0
++
0 2
)
2 3
{
ÒÒ 
RectTransform
ÚÚ 
itemRect
ÚÚ &
=
ÚÚ' (
m_Items
ÚÚ) 0
[
ÚÚ0 1
i
ÚÚ1 2
]
ÚÚ2 3
.
ÚÚ3 4
rectTransform
ÚÚ4 A
;
ÚÚA B
itemRect
ÛÛ 
.
ÛÛ 
	anchorMin
ÛÛ "
=
ÛÛ# $
new
ÛÛ% (
Vector2
ÛÛ) 0
(
ÛÛ0 1
itemRect
ÛÛ1 9
.
ÛÛ9 :
	anchorMin
ÛÛ: C
.
ÛÛC D
x
ÛÛD E
,
ÛÛE F
$num
ÛÛG H
)
ÛÛH I
;
ÛÛI J
itemRect
ÙÙ 
.
ÙÙ 
	anchorMax
ÙÙ "
=
ÙÙ# $
new
ÙÙ% (
Vector2
ÙÙ) 0
(
ÙÙ0 1
itemRect
ÙÙ1 9
.
ÙÙ9 :
	anchorMax
ÙÙ: C
.
ÙÙC D
x
ÙÙD E
,
ÙÙE F
$num
ÙÙG H
)
ÙÙH I
;
ÙÙI J
itemRect
ıı 
.
ıı 
anchoredPosition
ıı )
=
ıı* +
new
ıı, /
Vector2
ıı0 7
(
ıı7 8
itemRect
ıı8 @
.
ıı@ A
anchoredPosition
ııA Q
.
ııQ R
x
ııR S
,
ııS T
	offsetMin
ııU ^
.
ıı^ _
y
ıı_ `
+
ııa b
itemSize
ııc k
.
ıık l
y
ııl m
*
ıın o
(
ııp q
m_Items
ııq x
.
ııx y
Count
ııy ~
-ıı Ä
$numııÅ Ç
-ııÉ Ñ
iııÖ Ü
)ııÜ á
+ııà â
itemSizeııä í
.ııí ì
yııì î
*ııï ñ
itemRectııó ü
.ııü †
pivotıı† •
.ıı• ¶
yıı¶ ß
)ııß ®
;ıı® ©
itemRect
ˆˆ 
.
ˆˆ 
	sizeDelta
ˆˆ "
=
ˆˆ# $
new
ˆˆ% (
Vector2
ˆˆ) 0
(
ˆˆ0 1
itemRect
ˆˆ1 9
.
ˆˆ9 :
	sizeDelta
ˆˆ: C
.
ˆˆC D
x
ˆˆD E
,
ˆˆE F
itemSize
ˆˆG O
.
ˆˆO P
y
ˆˆP Q
)
ˆˆQ R
;
ˆˆR S
}
˜˜ 
AlphaFadeList
˙˙ 
(
˙˙ 
m_AlphaFadeSpeed
˙˙ *
,
˙˙* +
$num
˙˙, .
,
˙˙. /
$num
˙˙0 2
)
˙˙2 3
;
˙˙3 4

m_Template
˝˝ 
.
˝˝ 

gameObject
˝˝ !
.
˝˝! "
	SetActive
˝˝" +
(
˝˝+ ,
false
˝˝, 1
)
˝˝1 2
;
˝˝2 3
itemTemplate
˛˛ 
.
˛˛ 

gameObject
˛˛ #
.
˛˛# $
	SetActive
˛˛$ -
(
˛˛- .
false
˛˛. 3
)
˛˛3 4
;
˛˛4 5
	m_Blocker
ÄÄ 
=
ÄÄ 
CreateBlocker
ÄÄ %
(
ÄÄ% &

rootCanvas
ÄÄ& 0
)
ÄÄ0 1
;
ÄÄ1 2
}
ÅÅ 	
	protected
ãã 
virtual
ãã 

GameObject
ãã $
CreateBlocker
ãã% 2
(
ãã2 3
Canvas
ãã3 9

rootCanvas
ãã: D
)
ããD E
{
åå 	

GameObject
éé 
blocker
éé 
=
éé  
new
éé! $

GameObject
éé% /
(
éé/ 0
$str
éé0 9
)
éé9 :
;
éé: ;
RectTransform
ëë 
blockerRect
ëë %
=
ëë& '
blocker
ëë( /
.
ëë/ 0
AddComponent
ëë0 <
<
ëë< =
RectTransform
ëë= J
>
ëëJ K
(
ëëK L
)
ëëL M
;
ëëM N
blockerRect
íí 
.
íí 
	SetParent
íí !
(
íí! "

rootCanvas
íí" ,
.
íí, -
	transform
íí- 6
,
íí6 7
false
íí8 =
)
íí= >
;
íí> ?
blockerRect
ìì 
.
ìì 
	anchorMin
ìì !
=
ìì" #
Vector3
ìì$ +
.
ìì+ ,
zero
ìì, 0
;
ìì0 1
blockerRect
îî 
.
îî 
	anchorMax
îî !
=
îî" #
Vector3
îî$ +
.
îî+ ,
one
îî, /
;
îî/ 0
blockerRect
ïï 
.
ïï 
	sizeDelta
ïï !
=
ïï" #
Vector2
ïï$ +
.
ïï+ ,
zero
ïï, 0
;
ïï0 1
Canvas
òò 
blockerCanvas
òò  
=
òò! "
blocker
òò# *
.
òò* +
AddComponent
òò+ 7
<
òò7 8
Canvas
òò8 >
>
òò> ?
(
òò? @
)
òò@ A
;
òòA B
blockerCanvas
ôô 
.
ôô 
overrideSorting
ôô )
=
ôô* +
true
ôô, 0
;
ôô0 1
Canvas
öö 
dropdownCanvas
öö !
=
öö" #

m_Dropdown
öö$ .
.
öö. /
GetComponent
öö/ ;
<
öö; <
Canvas
öö< B
>
ööB C
(
ööC D
)
ööD E
;
ööE F
blockerCanvas
õõ 
.
õõ 
sortingLayerID
õõ (
=
õõ) *
dropdownCanvas
õõ+ 9
.
õõ9 :
sortingLayerID
õõ: H
;
õõH I
blockerCanvas
úú 
.
úú 
sortingOrder
úú &
=
úú' (
dropdownCanvas
úú) 7
.
úú7 8
sortingOrder
úú8 D
-
úúE F
$num
úúG H
;
úúH I
Canvas
üü 
parentCanvas
üü 
=
üü  !
null
üü" &
;
üü& '
	Transform
†† 
parentTransform
†† %
=
††& '

m_Template
††( 2
.
††2 3
parent
††3 9
;
††9 :
while
°° 
(
°° 
parentTransform
°° "
!=
°°# %
null
°°& *
)
°°* +
{
¢¢ 
parentCanvas
££ 
=
££ 
parentTransform
££ .
.
££. /
GetComponent
££/ ;
<
££; <
Canvas
££< B
>
££B C
(
££C D
)
££D E
;
££E F
if
§§ 
(
§§ 
parentCanvas
§§  
!=
§§! #
null
§§$ (
)
§§( )
break
•• 
;
•• 
parentTransform
ßß 
=
ßß  !
parentTransform
ßß" 1
.
ßß1 2
parent
ßß2 8
;
ßß8 9
}
®® 
if
´´ 
(
´´ 
parentCanvas
´´ 
!=
´´ 
null
´´  $
)
´´$ %
{
¨¨ 
	Component
≠≠ 
[
≠≠ 
]
≠≠ 

components
≠≠ &
=
≠≠' (
parentCanvas
≠≠) 5
.
≠≠5 6
GetComponents
≠≠6 C
<
≠≠C D
BaseRaycaster
≠≠D Q
>
≠≠Q R
(
≠≠R S
)
≠≠S T
;
≠≠T U
for
ÆÆ 
(
ÆÆ 
int
ÆÆ 
i
ÆÆ 
=
ÆÆ 
$num
ÆÆ 
;
ÆÆ 
i
ÆÆ  !
<
ÆÆ" #

components
ÆÆ$ .
.
ÆÆ. /
Length
ÆÆ/ 5
;
ÆÆ5 6
i
ÆÆ7 8
++
ÆÆ8 :
)
ÆÆ: ;
{
ØØ 
Type
∞∞ 
raycasterType
∞∞ &
=
∞∞' (

components
∞∞) 3
[
∞∞3 4
i
∞∞4 5
]
∞∞5 6
.
∞∞6 7
GetType
∞∞7 >
(
∞∞> ?
)
∞∞? @
;
∞∞@ A
if
±± 
(
±± 
blocker
±± 
.
±±  
GetComponent
±±  ,
(
±±, -
raycasterType
±±- :
)
±±: ;
==
±±< >
null
±±? C
)
±±C D
{
≤≤ 
blocker
≥≥ 
.
≥≥  
AddComponent
≥≥  ,
(
≥≥, -
raycasterType
≥≥- :
)
≥≥: ;
;
≥≥; <
}
¥¥ 
}
µµ 
}
∂∂ 
else
∑∑ 
{
∏∏ 
GetOrAddComponent
∫∫ !
<
∫∫! "
GraphicRaycaster
∫∫" 2
>
∫∫2 3
(
∫∫3 4
blocker
∫∫4 ;
)
∫∫; <
;
∫∫< =
}
ªª 
Image
øø 
blockerImage
øø 
=
øø  
blocker
øø! (
.
øø( )
AddComponent
øø) 5
<
øø5 6
Image
øø6 ;
>
øø; <
(
øø< =
)
øø= >
;
øø> ?
blockerImage
¿¿ 
.
¿¿ 
color
¿¿ 
=
¿¿  
Color
¿¿! &
.
¿¿& '
clear
¿¿' ,
;
¿¿, -
Button
√√ 
blockerButton
√√  
=
√√! "
blocker
√√# *
.
√√* +
AddComponent
√√+ 7
<
√√7 8
Button
√√8 >
>
√√> ?
(
√√? @
)
√√@ A
;
√√A B
blockerButton
ƒƒ 
.
ƒƒ 
onClick
ƒƒ !
.
ƒƒ! "
AddListener
ƒƒ" -
(
ƒƒ- .
Hide
ƒƒ. 2
)
ƒƒ2 3
;
ƒƒ3 4
return
∆∆ 
blocker
∆∆ 
;
∆∆ 
}
«« 	
	protected
–– 
virtual
–– 
void
–– 
DestroyBlocker
–– -
(
––- .

GameObject
––. 8
blocker
––9 @
)
––@ A
{
—— 	
Destroy
““ 
(
““ 
blocker
““ 
)
““ 
;
““ 
}
”” 	
	protected
›› 
virtual
›› 

GameObject
›› $ 
CreateDropdownList
››% 7
(
››7 8

GameObject
››8 B
template
››C K
)
››K L
{
ﬁﬁ 	
return
ﬂﬂ 
(
ﬂﬂ 

GameObject
ﬂﬂ 
)
ﬂﬂ 
Instantiate
ﬂﬂ *
(
ﬂﬂ* +
template
ﬂﬂ+ 3
)
ﬂﬂ3 4
;
ﬂﬂ4 5
}
‡‡ 	
	protected
ÈÈ 
virtual
ÈÈ 
void
ÈÈ !
DestroyDropdownList
ÈÈ 2
(
ÈÈ2 3

GameObject
ÈÈ3 =
dropdownList
ÈÈ> J
)
ÈÈJ K
{
ÍÍ 	
Destroy
ÎÎ 
(
ÎÎ 
dropdownList
ÎÎ  
)
ÎÎ  !
;
ÎÎ! "
}
ÏÏ 	
	protected
˜˜ 
virtual
˜˜ 
DropdownItem
˜˜ &

CreateItem
˜˜' 1
(
˜˜1 2
DropdownItem
˜˜2 >
itemTemplate
˜˜? K
)
˜˜K L
{
¯¯ 	
return
˘˘ 
(
˘˘ 
DropdownItem
˘˘  
)
˘˘  !
Instantiate
˘˘! ,
(
˘˘, -
itemTemplate
˘˘- 9
)
˘˘9 :
;
˘˘: ;
}
˙˙ 	
	protected
ÑÑ 
virtual
ÑÑ 
void
ÑÑ 
DestroyItem
ÑÑ *
(
ÑÑ* +
DropdownItem
ÑÑ+ 7
item
ÑÑ8 <
)
ÑÑ< =
{
ÑÑ> ?
}
ÑÑ@ A
private
áá 
DropdownItem
áá 
AddItem
áá $
(
áá$ %

OptionData
áá% /
data
áá0 4
,
áá4 5
bool
áá6 :
selected
áá; C
,
ááC D
DropdownItem
ááE Q
itemTemplate
ááR ^
,
áá^ _
List
áá` d
<
áád e
DropdownItem
ááe q
>
ááq r
items
áás x
)
ááx y
{
àà 	
DropdownItem
ää 
item
ää 
=
ää 

CreateItem
ää  *
(
ää* +
itemTemplate
ää+ 7
)
ää7 8
;
ää8 9
item
ãã 
.
ãã 
rectTransform
ãã 
.
ãã 
	SetParent
ãã (
(
ãã( )
itemTemplate
ãã) 5
.
ãã5 6
rectTransform
ãã6 C
.
ããC D
parent
ããD J
,
ããJ K
false
ããL Q
)
ããQ R
;
ããR S
item
çç 
.
çç 

gameObject
çç 
.
çç 
	SetActive
çç %
(
çç% &
true
çç& *
)
çç* +
;
çç+ ,
item
éé 
.
éé 

gameObject
éé 
.
éé 
name
éé  
=
éé! "
$str
éé# *
+
éé+ ,
items
éé- 2
.
éé2 3
Count
éé3 8
+
éé9 :
(
éé; <
data
éé< @
.
éé@ A
text
ééA E
!=
ééF H
null
ééI M
?
ééN O
$str
ééP T
+
ééU V
data
ééW [
.
éé[ \
text
éé\ `
:
ééa b
$str
ééc e
)
éée f
;
ééf g
if
êê 
(
êê 
item
êê 
.
êê 
toggle
êê 
!=
êê 
null
êê #
)
êê# $
{
ëë 
item
íí 
.
íí 
toggle
íí 
.
íí 
isOn
íí  
=
íí! "
false
íí# (
;
íí( )
}
ìì 
if
ññ 
(
ññ 
item
ññ 
.
ññ 
text
ññ 
)
ññ 
item
óó 
.
óó 
text
óó 
.
óó 
text
óó 
=
óó  
data
óó! %
.
óó% &
text
óó& *
;
óó* +
if
òò 
(
òò 
item
òò 
.
òò 
image
òò 
)
òò 
{
ôô 
item
öö 
.
öö 
image
öö 
.
öö 
sprite
öö !
=
öö" #
data
öö$ (
.
öö( )
image
öö) .
;
öö. /
item
õõ 
.
õõ 
image
õõ 
.
õõ 
enabled
õõ "
=
õõ# $
(
õõ% &
item
õõ& *
.
õõ* +
image
õõ+ 0
.
õõ0 1
sprite
õõ1 7
!=
õõ8 :
null
õõ; ?
)
õõ? @
;
õõ@ A
}
úú 
items
ûû 
.
ûû 
Add
ûû 
(
ûû 
item
ûû 
)
ûû 
;
ûû 
return
üü 
item
üü 
;
üü 
}
†† 	
private
¢¢ 
void
¢¢ 
AlphaFadeList
¢¢ "
(
¢¢" #
float
¢¢# (
duration
¢¢) 1
,
¢¢1 2
float
¢¢3 8
alpha
¢¢9 >
)
¢¢> ?
{
££ 	
CanvasGroup
§§ 
group
§§ 
=
§§ 

m_Dropdown
§§  *
.
§§* +
GetComponent
§§+ 7
<
§§7 8
CanvasGroup
§§8 C
>
§§C D
(
§§D E
)
§§E F
;
§§F G
AlphaFadeList
•• 
(
•• 
duration
•• "
,
••" #
group
••$ )
.
••) *
alpha
••* /
,
••/ 0
alpha
••1 6
)
••6 7
;
••7 8
}
¶¶ 	
private
®® 
void
®® 
AlphaFadeList
®® "
(
®®" #
float
®®# (
duration
®®) 1
,
®®1 2
float
®®3 8
start
®®9 >
,
®®> ?
float
®®@ E
end
®®F I
)
®®I J
{
©© 	
if
™™ 
(
™™ 
end
™™ 
.
™™ 
Equals
™™ 
(
™™ 
start
™™  
)
™™  !
)
™™! "
return
´´ 
;
´´ 

FloatTween
≠≠ 
tween
≠≠ 
=
≠≠ 
new
≠≠ "

FloatTween
≠≠# -
{
≠≠. /
duration
≠≠0 8
=
≠≠9 :
duration
≠≠; C
,
≠≠C D

startValue
≠≠E O
=
≠≠P Q
start
≠≠R W
,
≠≠W X
targetValue
≠≠Y d
=
≠≠e f
end
≠≠g j
}
≠≠k l
;
≠≠l m
tween
ÆÆ 
.
ÆÆ "
AddOnChangedCallback
ÆÆ &
(
ÆÆ& '
SetAlpha
ÆÆ' /
)
ÆÆ/ 0
;
ÆÆ0 1
tween
ØØ 
.
ØØ 
ignoreTimeScale
ØØ !
=
ØØ" #
true
ØØ$ (
;
ØØ( ) 
m_AlphaTweenRunner
∞∞ 
.
∞∞ 

StartTween
∞∞ )
(
∞∞) *
tween
∞∞* /
)
∞∞/ 0
;
∞∞0 1
}
±± 	
private
≥≥ 
void
≥≥ 
SetAlpha
≥≥ 
(
≥≥ 
float
≥≥ #
alpha
≥≥$ )
)
≥≥) *
{
¥¥ 	
if
µµ 
(
µµ 
!
µµ 

m_Dropdown
µµ 
)
µµ 
return
∂∂ 
;
∂∂ 
CanvasGroup
∏∏ 
group
∏∏ 
=
∏∏ 

m_Dropdown
∏∏  *
.
∏∏* +
GetComponent
∏∏+ 7
<
∏∏7 8
CanvasGroup
∏∏8 C
>
∏∏C D
(
∏∏D E
)
∏∏E F
;
∏∏F G
group
ππ 
.
ππ 
alpha
ππ 
=
ππ 
alpha
ππ 
;
ππ  
}
∫∫ 	
public
øø 
void
øø 
Hide
øø 
(
øø 
)
øø 
{
¿¿ 	
if
¡¡ 
(
¡¡ 
m_Coroutine
¡¡ 
==
¡¡ 
null
¡¡ #
)
¡¡# $
{
¬¬ 
if
√√ 
(
√√ 

m_Dropdown
√√ 
!=
√√ !
null
√√" &
)
√√& '
{
ƒƒ 
AlphaFadeList
≈≈ !
(
≈≈! "
m_AlphaFadeSpeed
≈≈" 2
,
≈≈2 3
$num
≈≈4 6
)
≈≈6 7
;
≈≈7 8
if
»» 
(
»» 
IsActive
»»  
(
»»  !
)
»»! "
)
»»" #
m_Coroutine
…… #
=
……$ %
StartCoroutine
……& 4
(
……4 5(
DelayedDestroyDropdownList
……5 O
(
……O P
m_AlphaFadeSpeed
……P `
)
……` a
)
……a b
;
……b c
}
   
if
ÃÃ 
(
ÃÃ 
	m_Blocker
ÃÃ 
!=
ÃÃ  
null
ÃÃ! %
)
ÃÃ% &
DestroyBlocker
ÕÕ "
(
ÕÕ" #
	m_Blocker
ÕÕ# ,
)
ÕÕ, -
;
ÕÕ- .
	m_Blocker
œœ 
=
œœ 
null
œœ  
;
œœ  !
Select
–– 
(
–– 
)
–– 
;
–– 
}
—— 
}
““ 	
private
‘‘ 
IEnumerator
‘‘ (
DelayedDestroyDropdownList
‘‘ 6
(
‘‘6 7
float
‘‘7 <
delay
‘‘= B
)
‘‘B C
{
’’ 	
yield
÷÷ 
return
÷÷ 
new
÷÷ $
WaitForSecondsRealtime
÷÷ 3
(
÷÷3 4
delay
÷÷4 9
)
÷÷9 :
;
÷÷: ;*
ImmediateDestroyDropdownList
◊◊ (
(
◊◊( )
)
◊◊) *
;
◊◊* +
}
ÿÿ 	
private
⁄⁄ 
void
⁄⁄ *
ImmediateDestroyDropdownList
⁄⁄ 1
(
⁄⁄1 2
)
⁄⁄2 3
{
€€ 	
for
‹‹ 
(
‹‹ 
int
‹‹ 
i
‹‹ 
=
‹‹ 
$num
‹‹ 
;
‹‹ 
i
‹‹ 
<
‹‹ 
m_Items
‹‹  '
.
‹‹' (
Count
‹‹( -
;
‹‹- .
i
‹‹/ 0
++
‹‹0 2
)
‹‹2 3
{
›› 
if
ﬁﬁ 
(
ﬁﬁ 
m_Items
ﬁﬁ 
[
ﬁﬁ 
i
ﬁﬁ 
]
ﬁﬁ 
!=
ﬁﬁ !
null
ﬁﬁ" &
)
ﬁﬁ& '
DestroyItem
ﬂﬂ 
(
ﬂﬂ  
m_Items
ﬂﬂ  '
[
ﬂﬂ' (
i
ﬂﬂ( )
]
ﬂﬂ) *
)
ﬂﬂ* +
;
ﬂﬂ+ ,
}
‡‡ 
m_Items
‚‚ 
.
‚‚ 
Clear
‚‚ 
(
‚‚ 
)
‚‚ 
;
‚‚ 
if
‰‰ 
(
‰‰ 

m_Dropdown
‰‰ 
!=
‰‰ 
null
‰‰ "
)
‰‰" #!
DestroyDropdownList
ÂÂ #
(
ÂÂ# $

m_Dropdown
ÂÂ$ .
)
ÂÂ. /
;
ÂÂ/ 0
if
ÁÁ 
(
ÁÁ  
m_AlphaTweenRunner
ÁÁ "
!=
ÁÁ# %
null
ÁÁ& *
)
ÁÁ* + 
m_AlphaTweenRunner
ËË "
.
ËË" #
	StopTween
ËË# ,
(
ËË, -
)
ËË- .
;
ËË. /

m_Dropdown
ÍÍ 
=
ÍÍ 
null
ÍÍ 
;
ÍÍ 
m_Coroutine
ÎÎ 
=
ÎÎ 
null
ÎÎ 
;
ÎÎ 
}
ÏÏ 	
private
ÔÔ 
void
ÔÔ 
OnSelectItem
ÔÔ !
(
ÔÔ! "
Toggle
ÔÔ" (
toggle
ÔÔ) /
)
ÔÔ/ 0
{
 	
if
ÒÒ 
(
ÒÒ 
!
ÒÒ 
toggle
ÒÒ 
.
ÒÒ 
isOn
ÒÒ 
)
ÒÒ 
toggle
ÚÚ 
.
ÚÚ 
isOn
ÚÚ 
=
ÚÚ 
true
ÚÚ "
;
ÚÚ" #
int
ÙÙ 
selectedIndex
ÙÙ 
=
ÙÙ 
-
ÙÙ  !
$num
ÙÙ! "
;
ÙÙ" #
	Transform
ıı 
tr
ıı 
=
ıı 
toggle
ıı !
.
ıı! "
	transform
ıı" +
;
ıı+ ,
	Transform
ˆˆ 
parent
ˆˆ 
=
ˆˆ 
tr
ˆˆ !
.
ˆˆ! "
parent
ˆˆ" (
;
ˆˆ( )
for
˜˜ 
(
˜˜ 
int
˜˜ 
i
˜˜ 
=
˜˜ 
$num
˜˜ 
;
˜˜ 
i
˜˜ 
<
˜˜ 
parent
˜˜  &
.
˜˜& '

childCount
˜˜' 1
;
˜˜1 2
i
˜˜3 4
++
˜˜4 6
)
˜˜6 7
{
¯¯ 
if
˘˘ 
(
˘˘ 
parent
˘˘ 
.
˘˘ 
GetChild
˘˘ #
(
˘˘# $
i
˘˘$ %
)
˘˘% &
==
˘˘' )
tr
˘˘* ,
)
˘˘, -
{
˙˙ 
selectedIndex
¸¸ !
=
¸¸" #
i
¸¸$ %
-
¸¸& '
$num
¸¸( )
;
¸¸) *
break
˝˝ 
;
˝˝ 
}
˛˛ 
}
ˇˇ 
if
Å	Å	 
(
Å	Å	 
selectedIndex
Å	Å	 
<
Å	Å	 
$num
Å	Å	  !
)
Å	Å	! "
return
Ç	Ç	 
;
Ç	Ç	 
value
Ñ	Ñ	 
=
Ñ	Ñ	 
selectedIndex
Ñ	Ñ	 !
;
Ñ	Ñ	! "
Hide
Ö	Ö	 
(
Ö	Ö	 
)
Ö	Ö	 
;
Ö	Ö	 
}
Ü	Ü	 	
}
á	á	 
}à	à	 ÏÒ3
çD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_Text.cs
	namespace 	
TMPro
 
{ 
public 

	interface 
ITextElement !
{ 
Material 
sharedMaterial 
{  !
get" %
;% &
}' (
void 
Rebuild 
( 
CanvasUpdate !
update" (
)( )
;) *
int 
GetInstanceID 
( 
) 
; 
} 
public 

enum  
TextAlignmentOptions $
{ 
TopLeft 
= &
HorizontalAlignmentOptions ,
., -
Left- 1
|2 3$
VerticalAlignmentOptions4 L
.L M
TopM P
,P Q
Top 
= &
HorizontalAlignmentOptions (
.( )
Center) /
|0 1$
VerticalAlignmentOptions2 J
.J K
TopK N
,N O
TopRight 
= &
HorizontalAlignmentOptions -
.- .
Right. 3
|4 5$
VerticalAlignmentOptions6 N
.N O
TopO R
,R S
TopJustified 
= &
HorizontalAlignmentOptions 1
.1 2
	Justified2 ;
|< =$
VerticalAlignmentOptions> V
.V W
TopW Z
,Z [
TopFlush 
= &
HorizontalAlignmentOptions -
.- .
Flush. 3
|4 5$
VerticalAlignmentOptions6 N
.N O
TopO R
,R S
TopGeoAligned 
= &
HorizontalAlignmentOptions 2
.2 3
Geometry3 ;
|< =$
VerticalAlignmentOptions> V
.V W
TopW Z
,Z [
Left!! 
=!! &
HorizontalAlignmentOptions!! )
.!!) *
Left!!* .
|!!/ 0$
VerticalAlignmentOptions!!1 I
.!!I J
Middle!!J P
,!!P Q
Center"" 
="" &
HorizontalAlignmentOptions"" +
.""+ ,
Center"", 2
|""3 4$
VerticalAlignmentOptions""5 M
.""M N
Middle""N T
,""T U
Right## 
=## &
HorizontalAlignmentOptions## *
.##* +
Right##+ 0
|##1 2$
VerticalAlignmentOptions##3 K
.##K L
Middle##L R
,##R S
	Justified$$ 
=$$ &
HorizontalAlignmentOptions$$ .
.$$. /
	Justified$$/ 8
|$$9 :$
VerticalAlignmentOptions$$; S
.$$S T
Middle$$T Z
,$$Z [
Flush%% 
=%% &
HorizontalAlignmentOptions%% *
.%%* +
Flush%%+ 0
|%%1 2$
VerticalAlignmentOptions%%3 K
.%%K L
Middle%%L R
,%%R S
CenterGeoAligned&& 
=&& &
HorizontalAlignmentOptions&& 5
.&&5 6
Geometry&&6 >
|&&? @$
VerticalAlignmentOptions&&A Y
.&&Y Z
Middle&&Z `
,&&` a

BottomLeft(( 
=(( &
HorizontalAlignmentOptions(( /
.((/ 0
Left((0 4
|((5 6$
VerticalAlignmentOptions((7 O
.((O P
Bottom((P V
,((V W
Bottom)) 
=)) &
HorizontalAlignmentOptions)) +
.))+ ,
Center)), 2
|))3 4$
VerticalAlignmentOptions))5 M
.))M N
Bottom))N T
,))T U
BottomRight** 
=** &
HorizontalAlignmentOptions** 0
.**0 1
Right**1 6
|**7 8$
VerticalAlignmentOptions**9 Q
.**Q R
Bottom**R X
,**X Y
BottomJustified++ 
=++ &
HorizontalAlignmentOptions++ 4
.++4 5
	Justified++5 >
|++? @$
VerticalAlignmentOptions++A Y
.++Y Z
Bottom++Z `
,++` a
BottomFlush,, 
=,, &
HorizontalAlignmentOptions,, 0
.,,0 1
Flush,,1 6
|,,7 8$
VerticalAlignmentOptions,,9 Q
.,,Q R
Bottom,,R X
,,,X Y
BottomGeoAligned-- 
=-- &
HorizontalAlignmentOptions-- 5
.--5 6
Geometry--6 >
|--? @$
VerticalAlignmentOptions--A Y
.--Y Z
Bottom--Z `
,--` a
BaselineLeft// 
=// &
HorizontalAlignmentOptions// 1
.//1 2
Left//2 6
|//7 8$
VerticalAlignmentOptions//9 Q
.//Q R
Baseline//R Z
,//Z [
Baseline00 
=00 &
HorizontalAlignmentOptions00 -
.00- .
Center00. 4
|005 6$
VerticalAlignmentOptions007 O
.00O P
Baseline00P X
,00X Y
BaselineRight11 
=11 &
HorizontalAlignmentOptions11 2
.112 3
Right113 8
|119 :$
VerticalAlignmentOptions11; S
.11S T
Baseline11T \
,11\ ]
BaselineJustified22 
=22 &
HorizontalAlignmentOptions22 6
.226 7
	Justified227 @
|22A B$
VerticalAlignmentOptions22C [
.22[ \
Baseline22\ d
,22d e
BaselineFlush33 
=33 &
HorizontalAlignmentOptions33 2
.332 3
Flush333 8
|339 :$
VerticalAlignmentOptions33; S
.33S T
Baseline33T \
,33\ ]
BaselineGeoAligned44 
=44 &
HorizontalAlignmentOptions44 7
.447 8
Geometry448 @
|44A B$
VerticalAlignmentOptions44C [
.44[ \
Baseline44\ d
,44d e
MidlineLeft66 
=66 &
HorizontalAlignmentOptions66 0
.660 1
Left661 5
|666 7$
VerticalAlignmentOptions668 P
.66P Q
Geometry66Q Y
,66Y Z
Midline77 
=77 &
HorizontalAlignmentOptions77 ,
.77, -
Center77- 3
|774 5$
VerticalAlignmentOptions776 N
.77N O
Geometry77O W
,77W X
MidlineRight88 
=88 &
HorizontalAlignmentOptions88 1
.881 2
Right882 7
|888 9$
VerticalAlignmentOptions88: R
.88R S
Geometry88S [
,88[ \
MidlineJustified99 
=99 &
HorizontalAlignmentOptions99 5
.995 6
	Justified996 ?
|99@ A$
VerticalAlignmentOptions99B Z
.99Z [
Geometry99[ c
,99c d
MidlineFlush:: 
=:: &
HorizontalAlignmentOptions:: 1
.::1 2
Flush::2 7
|::8 9$
VerticalAlignmentOptions::: R
.::R S
Geometry::S [
,::[ \
MidlineGeoAligned;; 
=;; &
HorizontalAlignmentOptions;; 6
.;;6 7
Geometry;;7 ?
|;;@ A$
VerticalAlignmentOptions;;B Z
.;;Z [
Geometry;;[ c
,;;c d
CaplineLeft== 
=== &
HorizontalAlignmentOptions== 0
.==0 1
Left==1 5
|==6 7$
VerticalAlignmentOptions==8 P
.==P Q
Capline==Q X
,==X Y
Capline>> 
=>> &
HorizontalAlignmentOptions>> ,
.>>, -
Center>>- 3
|>>4 5$
VerticalAlignmentOptions>>6 N
.>>N O
Capline>>O V
,>>V W
CaplineRight?? 
=?? &
HorizontalAlignmentOptions?? 1
.??1 2
Right??2 7
|??8 9$
VerticalAlignmentOptions??: R
.??R S
Capline??S Z
,??Z [
CaplineJustified@@ 
=@@ &
HorizontalAlignmentOptions@@ 5
.@@5 6
	Justified@@6 ?
|@@@ A$
VerticalAlignmentOptions@@B Z
.@@Z [
Capline@@[ b
,@@b c
CaplineFlushAA 
=AA &
HorizontalAlignmentOptionsAA 1
.AA1 2
FlushAA2 7
|AA8 9$
VerticalAlignmentOptionsAA: R
.AAR S
CaplineAAS Z
,AAZ [
CaplineGeoAlignedBB 
=BB &
HorizontalAlignmentOptionsBB 6
.BB6 7
GeometryBB7 ?
|BB@ A$
VerticalAlignmentOptionsBBB Z
.BBZ [
CaplineBB[ b
,BBb c
	ConvertedDD 
=DD 
$numDD 
}EE 
;EE 
publicJJ 

enumJJ &
HorizontalAlignmentOptionsJJ *
{KK 
LeftLL 
=LL 
$numLL 
,LL 
CenterLL 
=LL 
$numLL  
,LL  !
RightLL" '
=LL( )
$numLL* -
,LL- .
	JustifiedLL/ 8
=LL9 :
$numLL; >
,LL> ?
FlushLL@ E
=LLF G
$numLLH L
,LLL M
GeometryLLN V
=LLW X
$numLLY ]
}MM 
publicRR 

enumRR $
VerticalAlignmentOptionsRR (
{SS 
TopTT 
=TT 
$numTT 
,TT 
MiddleTT 
=TT 
$numTT #
,TT# $
BottomTT% +
=TT, -
$numTT. 3
,TT3 4
BaselineTT5 =
=TT> ?
$numTT@ E
,TTE F
GeometryTTG O
=TTP Q
$numTTR X
,TTX Y
CaplineTTZ a
=TTb c
$numTTd j
,TTj k
}UU 
public[[ 

enum[[ 
TextRenderFlags[[ 
{\\ 

DontRender]] 
=]] 
$num]] 
,]] 
Render^^ 
=^^ 
$num^^ 
}__ 
;__ 
publicaa 

enumaa 
TMP_TextElementTypeaa #
{aa$ %
	Characteraa& /
,aa/ 0
Spriteaa1 7
}aa8 9
;aa9 :
publicbb 

enumbb 
MaskingTypesbb 
{bb 
MaskOffbb &
=bb' (
$numbb) *
,bb* +
MaskHardbb, 4
=bb5 6
$numbb7 8
,bb8 9
MaskSoftbb: B
=bbC D
$numbbE F
}bbG H
;bbH I
publiccc 

enumcc 
TextOverflowModescc !
{cc" #
Overflowcc$ ,
=cc- .
$numcc/ 0
,cc0 1
Ellipsiscc2 :
=cc; <
$numcc= >
,cc> ?
Maskingcc@ G
=ccH I
$numccJ K
,ccK L
TruncateccM U
=ccV W
$numccX Y
,ccY Z

ScrollRectcc[ e
=ccf g
$numcch i
,cci j
Pagecck o
=ccp q
$numccr s
,ccs t
Linkedccu {
=cc| }
$numcc~ 
}
ccÄ Å
;
ccÅ Ç
publicdd 

enumdd 
MaskingOffsetModedd !
{dd" #

Percentagedd$ .
=dd/ 0
$numdd1 2
,dd2 3
Pixeldd4 9
=dd: ;
$numdd< =
}dd> ?
;dd? @
publicee 

enumee !
TextureMappingOptionsee %
{ee& '
	Characteree( 1
=ee2 3
$numee4 5
,ee5 6
Lineee7 ;
=ee< =
$numee> ?
,ee? @
	ParagrapheeA J
=eeK L
$numeeM N
,eeN O
MatchAspecteeP [
=ee\ ]
$numee^ _
}ee` a
;eea b
[gg 
Flagsgg 

]gg
 
publichh 

enumhh 

FontStyleshh 
{hh 
Normalhh #
=hh$ %
$numhh& )
,hh) *
Boldhh+ /
=hh0 1
$numhh2 5
,hh5 6
Italichh7 =
=hh> ?
$numhh@ C
,hhC D
	UnderlinehhE N
=hhO P
$numhhQ T
,hhT U
	LowerCasehhV _
=hh` a
$numhhb e
,hhe f
	UpperCasehhg p
=hhq r
$numhhs w
,hhw x
	SmallCaps	hhy Ç
=
hhÉ Ñ
$num
hhÖ â
,
hhâ ä
Strikethrough
hhã ò
=
hhô ö
$num
hhõ ü
,
hhü †
Superscript
hh° ¨
=
hh≠ Æ
$num
hhØ ≥
,
hh≥ ¥
	Subscript
hhµ æ
=
hhø ¿
$num
hh¡ ∆
,
hh∆ «
	Highlight
hh» —
=
hh“ ”
$num
hh‘ Ÿ
}
hh⁄ €
;
hh€ ‹
publicii 

enumii 

FontWeightii 
{ii 
Thinii !
=ii" #
$numii$ '
,ii' (

ExtraLightii) 3
=ii4 5
$numii6 9
,ii9 :
Lightii; @
=iiA B
$numiiC F
,iiF G
RegulariiH O
=iiP Q
$numiiR U
,iiU V
MediumiiW ]
=ii^ _
$numii` c
,iic d
SemiBoldiie m
=iin o
$numiip s
,iis t
Boldiiu y
=iiz {
$numii| 
,	ii Ä
Heavy
iiÅ Ü
=
iiá à
$num
iiâ å
,
iiå ç
Black
iié ì
=
iiî ï
$num
iiñ ô
}
iiö õ
;
iiõ ú
publicnn 

abstractnn 
classnn 
TMP_Textnn "
:nn# $
MaskableGraphicnn% 4
{oo 
publicss 
virtualss 
stringss 
textss "
{tt 	
getuu 
{uu 
returnuu 
m_textuu 
;uu  
}uu! "
setvv 
{ww 
ifxx 
(xx 
m_textxx 
!=xx 
nullxx "
&&xx# %
valuexx& +
!=xx, .
nullxx/ 3
&&xx4 6
m_textxx7 =
.xx= >
Lengthxx> D
==xxE G
valuexxH M
.xxM N
LengthxxN T
&&xxU W
m_textxxX ^
==xx_ a
valuexxb g
)xxg h
returnyy 
;yy 
m_text{{ 
={{ 
value{{ 
;{{ 
m_inputSource|| 
=|| 
TextInputSources||  0
.||0 1
String||1 7
;||7 8#
m_havePropertiesChanged}} '
=}}( )
true}}* .
;}}. /$
m_isInputParsingRequired~~ (
=~~) *
true~~+ /
;~~/ 0
SetVerticesDirty  
(  !
)! "
;" #
SetLayoutDirty
ÄÄ 
(
ÄÄ 
)
ÄÄ  
;
ÄÄ  !
}
ÅÅ 
}
ÇÇ 	
[
ÉÉ 	
SerializeField
ÉÉ	 
]
ÉÉ 
[
ÑÑ 	
TextArea
ÑÑ	 
(
ÑÑ 
$num
ÑÑ 
,
ÑÑ 
$num
ÑÑ 
)
ÑÑ 
]
ÑÑ 
	protected
ÖÖ 
string
ÖÖ 
m_text
ÖÖ 
;
ÖÖ  
public
ää 
ITextPreprocessor
ää  
textPreprocessor
ää! 1
{
ãã 	
get
åå 
{
åå 
return
åå  
m_TextPreprocessor
åå +
;
åå+ ,
}
åå- .
set
çç 
{
çç  
m_TextPreprocessor
çç $
=
çç% &
value
çç' ,
;
çç, -
}
çç. /
}
éé 	
[
èè 	
SerializeField
èè	 
]
èè 
	protected
êê 
ITextPreprocessor
êê # 
m_TextPreprocessor
êê$ 6
;
êê6 7
public
ïï 
bool
ïï 
isRightToLeftText
ïï %
{
ññ 	
get
óó 
{
óó 
return
óó 
m_isRightToLeft
óó (
;
óó( )
}
óó* +
set
òò 
{
òò 
if
òò 
(
òò 
m_isRightToLeft
òò %
==
òò& (
value
òò) .
)
òò. /
return
òò0 6
;
òò6 7
m_isRightToLeft
òò8 G
=
òòH I
value
òòJ O
;
òòO P%
m_havePropertiesChanged
òòQ h
=
òòi j
true
òòk o
;
òòo p'
m_isInputParsingRequiredòòq â
=òòä ã
trueòòå ê
;òòê ë 
SetVerticesDirtyòòí ¢
(òò¢ £
)òò£ §
;òò§ •
SetLayoutDirtyòò¶ ¥
(òò¥ µ
)òòµ ∂
;òò∂ ∑
}òò∏ π
}
ôô 	
[
öö 	
SerializeField
öö	 
]
öö 
	protected
õõ 
bool
õõ 
m_isRightToLeft
õõ &
=
õõ' (
false
õõ) .
;
õõ. /
public
°° 
TMP_FontAsset
°° 
font
°° !
{
¢¢ 	
get
££ 
{
££ 
return
££ 
m_fontAsset
££ $
;
££$ %
}
££& '
set
§§ 
{
§§ 
if
§§ 
(
§§ 
m_fontAsset
§§ !
==
§§" $
value
§§% *
)
§§* +
return
§§, 2
;
§§2 3
m_fontAsset
§§4 ?
=
§§@ A
value
§§B G
;
§§G H
LoadFontAsset
§§I V
(
§§V W
)
§§W X
;
§§X Y%
m_havePropertiesChanged
§§Z q
=
§§r s
true
§§t x
;
§§x y'
m_isInputParsingRequired§§z í
=§§ì î
true§§ï ô
;§§ô ö 
SetVerticesDirty§§õ ´
(§§´ ¨
)§§¨ ≠
;§§≠ Æ
SetLayoutDirty§§Ø Ω
(§§Ω æ
)§§æ ø
;§§ø ¿
}§§¡ ¬
}
•• 	
[
¶¶ 	
SerializeField
¶¶	 
]
¶¶ 
	protected
ßß 
TMP_FontAsset
ßß 
m_fontAsset
ßß  +
;
ßß+ ,
	protected
®® 
TMP_FontAsset
®®  
m_currentFontAsset
®®  2
;
®®2 3
	protected
©© 
bool
©© 
m_isSDFShader
©© $
;
©©$ %
public
ØØ 
virtual
ØØ 
Material
ØØ  
fontSharedMaterial
ØØ  2
{
∞∞ 	
get
±± 
{
±± 
return
±± 
m_sharedMaterial
±± )
;
±±) *
}
±±+ ,
set
≤≤ 
{
≤≤ 
if
≤≤ 
(
≤≤ 
m_sharedMaterial
≤≤ &
==
≤≤' )
value
≤≤* /
)
≤≤/ 0
return
≤≤1 7
;
≤≤7 8
SetSharedMaterial
≤≤9 J
(
≤≤J K
value
≤≤K P
)
≤≤P Q
;
≤≤Q R%
m_havePropertiesChanged
≤≤S j
=
≤≤k l
true
≤≤m q
;
≤≤q r'
m_isInputParsingRequired≤≤s ã
=≤≤å ç
true≤≤é í
;≤≤í ì 
SetVerticesDirty≤≤î §
(≤≤§ •
)≤≤• ¶
;≤≤¶ ß 
SetMaterialDirty≤≤® ∏
(≤≤∏ π
)≤≤π ∫
;≤≤∫ ª
}≤≤º Ω
}
≥≥ 	
[
¥¥ 	
SerializeField
¥¥	 
]
¥¥ 
	protected
µµ 
Material
µµ 
m_sharedMaterial
µµ +
;
µµ+ ,
	protected
∂∂ 
Material
∂∂ 
m_currentMaterial
∂∂ ,
;
∂∂, -
	protected
∑∑ 
MaterialReference
∑∑ #
[
∑∑# $
]
∑∑$ %"
m_materialReferences
∑∑& :
=
∑∑; <
new
∑∑= @
MaterialReference
∑∑A R
[
∑∑R S
$num
∑∑S U
]
∑∑U V
;
∑∑V W
	protected
∏∏ 

Dictionary
∏∏ 
<
∏∏ 
int
∏∏  
,
∏∏  !
int
∏∏" %
>
∏∏% &,
m_materialReferenceIndexLookup
∏∏' E
=
∏∏F G
new
∏∏H K

Dictionary
∏∏L V
<
∏∏V W
int
∏∏W Z
,
∏∏Z [
int
∏∏\ _
>
∏∏_ `
(
∏∏` a
)
∏∏a b
;
∏∏b c
	protected
∫∫ %
TMP_TextProcessingStack
∫∫ )
<
∫∫) *
MaterialReference
∫∫* ;
>
∫∫; <&
m_materialReferenceStack
∫∫= U
=
∫∫V W
new
∫∫X [%
TMP_TextProcessingStack
∫∫\ s
<
∫∫s t 
MaterialReference∫∫t Ö
>∫∫Ö Ü
(∫∫Ü á
new∫∫á ä!
MaterialReference∫∫ã ú
[∫∫ú ù
$num∫∫ù ü
]∫∫ü †
)∫∫† °
;∫∫° ¢
	protected
ªª 
int
ªª $
m_currentMaterialIndex
ªª ,
;
ªª, -
public
¡¡ 
virtual
¡¡ 
Material
¡¡ 
[
¡¡  
]
¡¡  !!
fontSharedMaterials
¡¡" 5
{
¬¬ 	
get
√√ 
{
√√ 
return
√√  
GetSharedMaterials
√√ +
(
√√+ ,
)
√√, -
;
√√- .
}
√√/ 0
set
ƒƒ 
{
ƒƒ  
SetSharedMaterials
ƒƒ $
(
ƒƒ$ %
value
ƒƒ% *
)
ƒƒ* +
;
ƒƒ+ ,%
m_havePropertiesChanged
ƒƒ- D
=
ƒƒE F
true
ƒƒG K
;
ƒƒK L&
m_isInputParsingRequired
ƒƒM e
=
ƒƒf g
true
ƒƒh l
;
ƒƒl m
SetVerticesDirty
ƒƒn ~
(
ƒƒ~ 
)ƒƒ Ä
;ƒƒÄ Å 
SetMaterialDirtyƒƒÇ í
(ƒƒí ì
)ƒƒì î
;ƒƒî ï
}ƒƒñ ó
}
≈≈ 	
[
∆∆ 	
SerializeField
∆∆	 
]
∆∆ 
	protected
«« 
Material
«« 
[
«« 
]
«« #
m_fontSharedMaterials
«« 2
;
««2 3
public
ÕÕ 
Material
ÕÕ 
fontMaterial
ÕÕ $
{
ŒŒ 	
get
–– 
{
–– 
return
–– 
GetMaterial
–– $
(
––$ %
m_sharedMaterial
––% 5
)
––5 6
;
––6 7
}
––8 9
set
”” 
{
‘‘ 
if
’’ 
(
’’ 
m_sharedMaterial
’’ $
!=
’’% '
null
’’( ,
&&
’’- /
m_sharedMaterial
’’0 @
.
’’@ A
GetInstanceID
’’A N
(
’’N O
)
’’O P
==
’’Q S
value
’’T Y
.
’’Y Z
GetInstanceID
’’Z g
(
’’g h
)
’’h i
)
’’i j
return
’’k q
;
’’q r
m_sharedMaterial
◊◊  
=
◊◊! "
value
◊◊# (
;
◊◊( )
	m_padding
ŸŸ 
=
ŸŸ #
GetPaddingForMaterial
ŸŸ 1
(
ŸŸ1 2
)
ŸŸ2 3
;
ŸŸ3 4%
m_havePropertiesChanged
⁄⁄ '
=
⁄⁄( )
true
⁄⁄* .
;
⁄⁄. /&
m_isInputParsingRequired
€€ (
=
€€) *
true
€€+ /
;
€€/ 0
SetVerticesDirty
››  
(
››  !
)
››! "
;
››" #
SetMaterialDirty
ﬁﬁ  
(
ﬁﬁ  !
)
ﬁﬁ! "
;
ﬁﬁ" #
}
ﬂﬂ 
}
‡‡ 	
[
·· 	
SerializeField
··	 
]
·· 
	protected
‚‚ 
Material
‚‚ 
m_fontMaterial
‚‚ )
;
‚‚) *
public
ËË 
virtual
ËË 
Material
ËË 
[
ËË  
]
ËË  !
fontMaterials
ËË" /
{
ÈÈ 	
get
ÍÍ 
{
ÍÍ 
return
ÍÍ 
GetMaterials
ÍÍ %
(
ÍÍ% &#
m_fontSharedMaterials
ÍÍ& ;
)
ÍÍ; <
;
ÍÍ< =
}
ÍÍ> ?
set
ÏÏ 
{
ÏÏ  
SetSharedMaterials
ÏÏ $
(
ÏÏ$ %
value
ÏÏ% *
)
ÏÏ* +
;
ÏÏ+ ,%
m_havePropertiesChanged
ÏÏ- D
=
ÏÏE F
true
ÏÏG K
;
ÏÏK L&
m_isInputParsingRequired
ÏÏM e
=
ÏÏf g
true
ÏÏh l
;
ÏÏl m
SetVerticesDirty
ÏÏn ~
(
ÏÏ~ 
)ÏÏ Ä
;ÏÏÄ Å 
SetMaterialDirtyÏÏÇ í
(ÏÏí ì
)ÏÏì î
;ÏÏî ï
}ÏÏñ ó
}
ÌÌ 	
[
ÓÓ 	
SerializeField
ÓÓ	 
]
ÓÓ 
	protected
ÔÔ 
Material
ÔÔ 
[
ÔÔ 
]
ÔÔ 
m_fontMaterials
ÔÔ ,
;
ÔÔ, -
	protected
ÒÒ 
bool
ÒÒ 
m_isMaterialDirty
ÒÒ (
;
ÒÒ( )
public
˜˜ 
override
˜˜ 
Color
˜˜ 
color
˜˜ #
{
¯¯ 	
get
˘˘ 
{
˘˘ 
return
˘˘ 
m_fontColor
˘˘ $
;
˘˘$ %
}
˘˘& '
set
˙˙ 
{
˙˙ 
if
˙˙ 
(
˙˙ 
m_fontColor
˙˙ !
==
˙˙" $
value
˙˙% *
)
˙˙* +
return
˙˙, 2
;
˙˙2 3%
m_havePropertiesChanged
˙˙4 K
=
˙˙L M
true
˙˙N R
;
˙˙R S
m_fontColor
˙˙T _
=
˙˙` a
value
˙˙b g
;
˙˙g h
SetVerticesDirty
˙˙i y
(
˙˙y z
)
˙˙z {
;
˙˙{ |
}
˙˙} ~
}
˚˚ 	
[
˝˝ 	
SerializeField
˝˝	 
]
˝˝ 
	protected
˛˛ 
Color32
˛˛ 
m_fontColor32
˛˛ '
=
˛˛( )
Color
˛˛* /
.
˛˛/ 0
white
˛˛0 5
;
˛˛5 6
[
ˇˇ 	
SerializeField
ˇˇ	 
]
ˇˇ 
	protected
ÄÄ 
Color
ÄÄ 
m_fontColor
ÄÄ #
=
ÄÄ$ %
Color
ÄÄ& +
.
ÄÄ+ ,
white
ÄÄ, 1
;
ÄÄ1 2
	protected
ÅÅ 
static
ÅÅ 
Color32
ÅÅ  
s_colorWhite
ÅÅ! -
=
ÅÅ. /
new
ÅÅ0 3
Color32
ÅÅ4 ;
(
ÅÅ; <
$num
ÅÅ< ?
,
ÅÅ? @
$num
ÅÅA D
,
ÅÅD E
$num
ÅÅF I
,
ÅÅI J
$num
ÅÅK N
)
ÅÅN O
;
ÅÅO P
	protected
ÇÇ 
Color32
ÇÇ 
m_underlineColor
ÇÇ *
=
ÇÇ+ ,
s_colorWhite
ÇÇ- 9
;
ÇÇ9 :
	protected
ÉÉ 
Color32
ÉÉ "
m_strikethroughColor
ÉÉ .
=
ÉÉ/ 0
s_colorWhite
ÉÉ1 =
;
ÉÉ= >
public
àà 
float
àà 
alpha
àà 
{
ââ 	
get
ää 
{
ää 
return
ää 
m_fontColor
ää $
.
ää$ %
a
ää% &
;
ää& '
}
ää( )
set
ãã 
{
ãã 
if
ãã 
(
ãã 
m_fontColor
ãã !
.
ãã! "
a
ãã" #
==
ãã$ &
value
ãã' ,
)
ãã, -
return
ãã. 4
;
ãã4 5
m_fontColor
ãã6 A
.
ããA B
a
ããB C
=
ããD E
value
ããF K
;
ããK L%
m_havePropertiesChanged
ããM d
=
ããe f
true
ããg k
;
ããk l
SetVerticesDirty
ããm }
(
ãã} ~
)
ãã~ 
;ãã Ä
}ããÅ Ç
}
åå 	
public
ìì 
bool
ìì "
enableVertexGradient
ìì (
{
îî 	
get
ïï 
{
ïï 
return
ïï $
m_enableVertexGradient
ïï /
;
ïï/ 0
}
ïï1 2
set
ññ 
{
ññ 
if
ññ 
(
ññ $
m_enableVertexGradient
ññ ,
==
ññ- /
value
ññ0 5
)
ññ5 6
return
ññ7 =
;
ññ= >%
m_havePropertiesChanged
ññ? V
=
ññW X
true
ññY ]
;
ññ] ^$
m_enableVertexGradient
ññ_ u
=
ññv w
value
ññx }
;
ññ} ~
SetVerticesDirtyññ è
(ññè ê
)ññê ë
;ññë í
}ññì î
}
óó 	
[
òò 	
SerializeField
òò	 
]
òò 
	protected
ôô 
bool
ôô $
m_enableVertexGradient
ôô -
;
ôô- .
[
õõ 	
SerializeField
õõ	 
]
õõ 
	protected
úú 
	ColorMode
úú 
m_colorMode
úú '
=
úú( )
	ColorMode
úú* 3
.
úú3 4!
FourCornersGradient
úú4 G
;
úúG H
public
¢¢ 
VertexGradient
¢¢ 
colorGradient
¢¢ +
{
££ 	
get
§§ 
{
§§ 
return
§§ !
m_fontColorGradient
§§ ,
;
§§, -
}
§§. /
set
•• 
{
•• %
m_havePropertiesChanged
•• )
=
••* +
true
••, 0
;
••0 1!
m_fontColorGradient
••2 E
=
••F G
value
••H M
;
••M N
SetVerticesDirty
••O _
(
••_ `
)
••` a
;
••a b
}
••c d
}
¶¶ 	
[
ßß 	
SerializeField
ßß	 
]
ßß 
	protected
®® 
VertexGradient
®®  !
m_fontColorGradient
®®! 4
=
®®5 6
new
®®7 :
VertexGradient
®®; I
(
®®I J
Color
®®J O
.
®®O P
white
®®P U
)
®®U V
;
®®V W
public
ÆÆ 
TMP_ColorGradient
ÆÆ  !
colorGradientPreset
ÆÆ! 4
{
ØØ 	
get
∞∞ 
{
∞∞ 
return
∞∞ '
m_fontColorGradientPreset
∞∞ 2
;
∞∞2 3
}
∞∞4 5
set
±± 
{
±± %
m_havePropertiesChanged
±± )
=
±±* +
true
±±, 0
;
±±0 1'
m_fontColorGradientPreset
±±2 K
=
±±L M
value
±±N S
;
±±S T
SetVerticesDirty
±±U e
(
±±e f
)
±±f g
;
±±g h
}
±±i j
}
≤≤ 	
[
≥≥ 	
SerializeField
≥≥	 
]
≥≥ 
	protected
¥¥ 
TMP_ColorGradient
¥¥ #'
m_fontColorGradientPreset
¥¥$ =
;
¥¥= >
public
∫∫ 
TMP_SpriteAsset
∫∫ 
spriteAsset
∫∫ *
{
ªª 	
get
ºº 
{
ºº 
return
ºº 
m_spriteAsset
ºº &
;
ºº& '
}
ºº( )
set
ΩΩ 
{
ΩΩ 
m_spriteAsset
ΩΩ 
=
ΩΩ  !
value
ΩΩ" '
;
ΩΩ' (%
m_havePropertiesChanged
ΩΩ) @
=
ΩΩA B
true
ΩΩC G
;
ΩΩG H&
m_isInputParsingRequired
ΩΩI a
=
ΩΩb c
true
ΩΩd h
;
ΩΩh i
SetVerticesDirty
ΩΩj z
(
ΩΩz {
)
ΩΩ{ |
;
ΩΩ| }
SetLayoutDirtyΩΩ~ å
(ΩΩå ç
)ΩΩç é
;ΩΩé è
}ΩΩê ë
}
ææ 	
[
øø 	
SerializeField
øø	 
]
øø 
	protected
¿¿ 
TMP_SpriteAsset
¿¿ !
m_spriteAsset
¿¿" /
;
¿¿/ 0
public
∆∆ 
bool
∆∆ 
tintAllSprites
∆∆ "
{
«« 	
get
»» 
{
»» 
return
»» 
m_tintAllSprites
»» )
;
»») *
}
»»+ ,
set
…… 
{
…… 
if
…… 
(
…… 
m_tintAllSprites
…… &
==
……' )
value
……* /
)
……/ 0
return
……1 7
;
……7 8
m_tintAllSprites
……9 I
=
……J K
value
……L Q
;
……Q R%
m_havePropertiesChanged
……S j
=
……k l
true
……m q
;
……q r
SetVerticesDirty……s É
(……É Ñ
)……Ñ Ö
;……Ö Ü
}……á à
}
   	
[
ÀÀ 	
SerializeField
ÀÀ	 
]
ÀÀ 
	protected
ÃÃ 
bool
ÃÃ 
m_tintAllSprites
ÃÃ '
;
ÃÃ' (
	protected
ÕÕ 
bool
ÕÕ 
m_tintSprite
ÕÕ #
;
ÕÕ# $
	protected
ŒŒ 
Color32
ŒŒ 
m_spriteColor
ŒŒ '
;
ŒŒ' (
public
”” 
TMP_StyleSheet
”” 

styleSheet
”” (
{
‘‘ 	
get
’’ 
{
’’ 
return
’’ 
m_StyleSheet
’’ %
;
’’% &
}
’’' (
set
÷÷ 
{
÷÷ 
m_StyleSheet
÷÷ 
=
÷÷  
value
÷÷! &
;
÷÷& '%
m_havePropertiesChanged
÷÷( ?
=
÷÷@ A
true
÷÷B F
;
÷÷F G&
m_isInputParsingRequired
÷÷H `
=
÷÷a b
true
÷÷c g
;
÷÷g h
SetVerticesDirty
÷÷i y
(
÷÷y z
)
÷÷z {
;
÷÷{ |
SetLayoutDirty÷÷} ã
(÷÷ã å
)÷÷å ç
;÷÷ç é
}÷÷è ê
}
◊◊ 	
[
ÿÿ 	
SerializeField
ÿÿ	 
]
ÿÿ 
	protected
ŸŸ 
TMP_StyleSheet
ŸŸ  
m_StyleSheet
ŸŸ! -
;
ŸŸ- .
public
ﬁﬁ 
	TMP_Style
ﬁﬁ 
	textStyle
ﬁﬁ "
{
ﬂﬂ 	
get
‡‡ 
{
·· 
m_TextStyle
‚‚ 
=
‚‚ 
GetStyle
‚‚ &
(
‚‚& '!
m_TextStyleHashCode
‚‚' :
)
‚‚: ;
;
‚‚; <
if
‰‰ 
(
‰‰ 
m_TextStyle
‰‰ 
==
‰‰  "
null
‰‰# '
)
‰‰' (
{
ÂÂ 
m_TextStyle
ÊÊ 
=
ÊÊ  !
	TMP_Style
ÊÊ" +
.
ÊÊ+ ,
NormalStyle
ÊÊ, 7
;
ÊÊ7 8!
m_TextStyleHashCode
ÁÁ '
=
ÁÁ( )
m_TextStyle
ÁÁ* 5
.
ÁÁ5 6
hashCode
ÁÁ6 >
;
ÁÁ> ?
}
ËË 
return
ÍÍ 
m_TextStyle
ÍÍ "
;
ÍÍ" #
}
ÎÎ 
set
ÌÌ 
{
ÌÌ 
m_TextStyle
ÌÌ 
=
ÌÌ 
value
ÌÌ  %
;
ÌÌ% &!
m_TextStyleHashCode
ÌÌ' :
=
ÌÌ; <
m_TextStyle
ÌÌ= H
.
ÌÌH I
hashCode
ÌÌI Q
;
ÌÌQ R%
m_havePropertiesChanged
ÌÌS j
=
ÌÌk l
true
ÌÌm q
;
ÌÌq r'
m_isInputParsingRequiredÌÌs ã
=ÌÌå ç
trueÌÌé í
;ÌÌí ì 
SetVerticesDirtyÌÌî §
(ÌÌ§ •
)ÌÌ• ¶
;ÌÌ¶ ß
SetLayoutDirtyÌÌ® ∂
(ÌÌ∂ ∑
)ÌÌ∑ ∏
;ÌÌ∏ π
}ÌÌ∫ ª
}
ÓÓ 	
internal
ÔÔ 
	TMP_Style
ÔÔ 
m_TextStyle
ÔÔ &
;
ÔÔ& '
[
 	
SerializeField
	 
]
 
	protected
ÒÒ 
int
ÒÒ !
m_TextStyleHashCode
ÒÒ )
;
ÒÒ) *
public
ˆˆ 
bool
ˆˆ 
overrideColorTags
ˆˆ %
{
˜˜ 	
get
¯¯ 
{
¯¯ 
return
¯¯ "
m_overrideHtmlColors
¯¯ -
;
¯¯- .
}
¯¯/ 0
set
˘˘ 
{
˘˘ 
if
˘˘ 
(
˘˘ "
m_overrideHtmlColors
˘˘ *
==
˘˘+ -
value
˘˘. 3
)
˘˘3 4
return
˘˘5 ;
;
˘˘; <%
m_havePropertiesChanged
˘˘= T
=
˘˘U V
true
˘˘W [
;
˘˘[ \"
m_overrideHtmlColors
˘˘] q
=
˘˘r s
value
˘˘t y
;
˘˘y z
SetVerticesDirty˘˘{ ã
(˘˘ã å
)˘˘å ç
;˘˘ç é
}˘˘è ê
}
˙˙ 	
[
˚˚ 	
SerializeField
˚˚	 
]
˚˚ 
	protected
¸¸ 
bool
¸¸ "
m_overrideHtmlColors
¸¸ +
=
¸¸, -
false
¸¸. 3
;
¸¸3 4
public
ÇÇ 
Color32
ÇÇ 
	faceColor
ÇÇ  
{
ÉÉ 	
get
ÑÑ 
{
ÖÖ 
if
ÜÜ 
(
ÜÜ 
m_sharedMaterial
ÜÜ $
==
ÜÜ% '
null
ÜÜ( ,
)
ÜÜ, -
return
ÜÜ. 4
m_faceColor
ÜÜ5 @
;
ÜÜ@ A
m_faceColor
àà 
=
àà 
m_sharedMaterial
àà .
.
àà. /
GetColor
àà/ 7
(
àà7 8
ShaderUtilities
àà8 G
.
ààG H
ID_FaceColor
ààH T
)
ààT U
;
ààU V
return
ââ 
m_faceColor
ââ "
;
ââ" #
}
ää 
set
åå 
{
åå 
if
åå 
(
åå 
m_faceColor
åå !
.
åå! "
Compare
åå" )
(
åå) *
value
åå* /
)
åå/ 0
)
åå0 1
return
åå2 8
;
åå8 9
SetFaceColor
åå: F
(
ååF G
value
ååG L
)
ååL M
;
ååM N%
m_havePropertiesChanged
ååO f
=
ååg h
true
ååi m
;
ååm n
m_faceColor
ååo z
=
åå{ |
valueåå} Ç
;ååÇ É 
SetVerticesDirtyååÑ î
(ååî ï
)ååï ñ
;ååñ ó 
SetMaterialDirtyååò ®
(åå® ©
)åå© ™
;åå™ ´
}åå¨ ≠
}
çç 	
[
éé 	
SerializeField
éé	 
]
éé 
	protected
èè 
Color32
èè 
m_faceColor
èè %
=
èè& '
Color
èè( -
.
èè- .
white
èè. 3
;
èè3 4
public
ïï 
Color32
ïï 
outlineColor
ïï #
{
ññ 	
get
óó 
{
òò 
if
ôô 
(
ôô 
m_sharedMaterial
ôô $
==
ôô% '
null
ôô( ,
)
ôô, -
return
ôô. 4
m_outlineColor
ôô5 C
;
ôôC D
m_outlineColor
õõ 
=
õõ  
m_sharedMaterial
õõ! 1
.
õõ1 2
GetColor
õõ2 :
(
õõ: ;
ShaderUtilities
õõ; J
.
õõJ K
ID_OutlineColor
õõK Z
)
õõZ [
;
õõ[ \
return
úú 
m_outlineColor
úú %
;
úú% &
}
ùù 
set
üü 
{
üü 
if
üü 
(
üü 
m_outlineColor
üü $
.
üü$ %
Compare
üü% ,
(
üü, -
value
üü- 2
)
üü2 3
)
üü3 4
return
üü5 ;
;
üü; <
SetOutlineColor
üü= L
(
üüL M
value
üüM R
)
üüR S
;
üüS T%
m_havePropertiesChanged
üüU l
=
üüm n
true
üüo s
;
üüs t
m_outlineColorüüu É
=üüÑ Ö
valueüüÜ ã
;üüã å 
SetVerticesDirtyüüç ù
(üüù û
)üüû ü
;üüü †
}üü° ¢
}
†† 	
	protected
¢¢ 
Color32
¢¢ 
m_outlineColor
¢¢ (
=
¢¢) *
Color
¢¢+ 0
.
¢¢0 1
black
¢¢1 6
;
¢¢6 7
public
®® 
float
®® 
outlineWidth
®® !
{
©© 	
get
™™ 
{
´´ 
if
¨¨ 
(
¨¨ 
m_sharedMaterial
¨¨ $
==
¨¨% '
null
¨¨( ,
)
¨¨, -
return
¨¨. 4
m_outlineWidth
¨¨5 C
;
¨¨C D
m_outlineWidth
ÆÆ 
=
ÆÆ  
m_sharedMaterial
ÆÆ! 1
.
ÆÆ1 2
GetFloat
ÆÆ2 :
(
ÆÆ: ;
ShaderUtilities
ÆÆ; J
.
ÆÆJ K
ID_OutlineWidth
ÆÆK Z
)
ÆÆZ [
;
ÆÆ[ \
return
ØØ 
m_outlineWidth
ØØ %
;
ØØ% &
}
∞∞ 
set
±± 
{
±± 
if
±± 
(
±± 
m_outlineWidth
±± $
==
±±% '
value
±±( -
)
±±- .
return
±±/ 5
;
±±5 6!
SetOutlineThickness
±±7 J
(
±±J K
value
±±K P
)
±±P Q
;
±±Q R%
m_havePropertiesChanged
±±S j
=
±±k l
true
±±m q
;
±±q r
m_outlineWidth±±s Å
=±±Ç É
value±±Ñ â
;±±â ä 
SetVerticesDirty±±ã õ
(±±õ ú
)±±ú ù
;±±ù û
}±±ü †
}
≤≤ 	
	protected
≥≥ 
float
≥≥ 
m_outlineWidth
≥≥ &
=
≥≥' (
$num
≥≥) -
;
≥≥- .
public
ππ 
float
ππ 
fontSize
ππ 
{
∫∫ 	
get
ªª 
{
ªª 
return
ªª 

m_fontSize
ªª #
;
ªª# $
}
ªª% &
set
ºº 
{
ºº 
if
ºº 
(
ºº 

m_fontSize
ºº  
==
ºº! #
value
ºº$ )
)
ºº) *
return
ºº+ 1
;
ºº1 2%
m_havePropertiesChanged
ºº3 J
=
ººK L
true
ººM Q
;
ººQ R

m_fontSize
ººS ]
=
ºº^ _
value
ºº` e
;
ººe f
if
ººg i
(
ººj k
!
ººk l 
m_enableAutoSizing
ººl ~
)
ºº~ 
m_fontSizeBaseººÄ é
=ººè ê

m_fontSizeººë õ
;ººõ ú 
SetVerticesDirtyººù ≠
(ºº≠ Æ
)ººÆ Ø
;ººØ ∞
SetLayoutDirtyºº± ø
(ººø ¿
)ºº¿ ¡
;ºº¡ ¬
}ºº√ ƒ
}
ΩΩ 	
[
ææ 	
SerializeField
ææ	 
]
ææ 
	protected
øø 
float
øø 

m_fontSize
øø "
=
øø# $
$num
øø% '
;
øø' (
	protected
¿¿ 
float
¿¿ 
m_currentFontSize
¿¿ )
;
¿¿) *
[
¡¡ 	
SerializeField
¡¡	 
]
¡¡ 
	protected
¬¬ 
float
¬¬ 
m_fontSizeBase
¬¬ &
=
¬¬' (
$num
¬¬) +
;
¬¬+ ,
	protected
√√ %
TMP_TextProcessingStack
√√ )
<
√√) *
float
√√* /
>
√√/ 0
m_sizeStack
√√1 <
=
√√= >
new
√√? B%
TMP_TextProcessingStack
√√C Z
<
√√Z [
float
√√[ `
>
√√` a
(
√√a b
$num
√√b d
)
√√d e
;
√√e f
public
…… 
float
…… 
	fontScale
…… 
{
   	
get
ÀÀ 
{
ÀÀ 
return
ÀÀ 
m_fontScale
ÀÀ $
;
ÀÀ$ %
}
ÀÀ& '
}
ÃÃ 	
public
““ 

FontWeight
““ 

fontWeight
““ $
{
”” 	
get
‘‘ 
{
‘‘ 
return
‘‘ 
m_fontWeight
‘‘ %
;
‘‘% &
}
‘‘' (
set
’’ 
{
’’ 
if
’’ 
(
’’ 
m_fontWeight
’’ "
==
’’# %
value
’’& +
)
’’+ ,
return
’’- 3
;
’’3 4
m_fontWeight
’’5 A
=
’’B C
value
’’D I
;
’’I J%
m_havePropertiesChanged
’’K b
=
’’c d
true
’’e i
;
’’i j'
m_isInputParsingRequired’’k É
=’’Ñ Ö
true’’Ü ä
;’’ä ã 
SetVerticesDirty’’å ú
(’’ú ù
)’’ù û
;’’û ü
SetLayoutDirty’’† Æ
(’’Æ Ø
)’’Ø ∞
;’’∞ ±
}’’≤ ≥
}
÷÷ 	
[
◊◊ 	
SerializeField
◊◊	 
]
◊◊ 
	protected
ÿÿ 

FontWeight
ÿÿ 
m_fontWeight
ÿÿ )
=
ÿÿ* +

FontWeight
ÿÿ, 6
.
ÿÿ6 7
Regular
ÿÿ7 >
;
ÿÿ> ?
	protected
ŸŸ 

FontWeight
ŸŸ "
m_FontWeightInternal
ŸŸ 1
=
ŸŸ2 3

FontWeight
ŸŸ4 >
.
ŸŸ> ?
Regular
ŸŸ? F
;
ŸŸF G
	protected
⁄⁄ %
TMP_TextProcessingStack
⁄⁄ )
<
⁄⁄) *

FontWeight
⁄⁄* 4
>
⁄⁄4 5
m_FontWeightStack
⁄⁄6 G
=
⁄⁄H I
new
⁄⁄J M%
TMP_TextProcessingStack
⁄⁄N e
<
⁄⁄e f

FontWeight
⁄⁄f p
>
⁄⁄p q
(
⁄⁄q r
$num
⁄⁄r s
)
⁄⁄s t
;
⁄⁄t u
public
ﬂﬂ 
float
ﬂﬂ 
pixelsPerUnit
ﬂﬂ "
{
‡‡ 	
get
·· 
{
‚‚ 
var
„„ 
localCanvas
„„ 
=
„„  !
canvas
„„" (
;
„„( )
if
‰‰ 
(
‰‰ 
!
‰‰ 
localCanvas
‰‰  
)
‰‰  !
return
ÂÂ 
$num
ÂÂ 
;
ÂÂ 
if
ÁÁ 
(
ÁÁ 
!
ÁÁ 
font
ÁÁ 
)
ÁÁ 
return
ËË 
localCanvas
ËË &
.
ËË& '
scaleFactor
ËË' 2
;
ËË2 3
if
ÍÍ 
(
ÍÍ  
m_currentFontAsset
ÍÍ &
==
ÍÍ' )
null
ÍÍ* .
||
ÍÍ/ 1 
m_currentFontAsset
ÍÍ2 D
.
ÍÍD E
faceInfo
ÍÍE M
.
ÍÍM N
	pointSize
ÍÍN W
<=
ÍÍX Z
$num
ÍÍ[ \
||
ÍÍ] _

m_fontSize
ÍÍ` j
<=
ÍÍk m
$num
ÍÍn o
)
ÍÍo p
return
ÎÎ 
$num
ÎÎ 
;
ÎÎ 
return
ÏÏ 

m_fontSize
ÏÏ !
/
ÏÏ" # 
m_currentFontAsset
ÏÏ$ 6
.
ÏÏ6 7
faceInfo
ÏÏ7 ?
.
ÏÏ? @
	pointSize
ÏÏ@ I
;
ÏÏI J
}
ÌÌ 
}
ÓÓ 	
public
ÙÙ 
bool
ÙÙ 
enableAutoSizing
ÙÙ $
{
ıı 	
get
ˆˆ 
{
ˆˆ 
return
ˆˆ  
m_enableAutoSizing
ˆˆ +
;
ˆˆ+ ,
}
ˆˆ- .
set
˜˜ 
{
˜˜ 
if
˜˜ 
(
˜˜  
m_enableAutoSizing
˜˜ (
==
˜˜) +
value
˜˜, 1
)
˜˜1 2
return
˜˜3 9
;
˜˜9 : 
m_enableAutoSizing
˜˜; M
=
˜˜N O
value
˜˜P U
;
˜˜U V
SetVerticesDirty
˜˜W g
(
˜˜g h
)
˜˜h i
;
˜˜i j
SetLayoutDirty
˜˜k y
(
˜˜y z
)
˜˜z {
;
˜˜{ |
}
˜˜} ~
}
¯¯ 	
[
˘˘ 	
SerializeField
˘˘	 
]
˘˘ 
	protected
˙˙ 
bool
˙˙  
m_enableAutoSizing
˙˙ )
;
˙˙) *
	protected
˚˚ 
float
˚˚ 
m_maxFontSize
˚˚ %
;
˚˚% &
	protected
¸¸ 
float
¸¸ 
m_minFontSize
¸¸ %
;
¸¸% &
	protected
˝˝ 
int
˝˝ &
m_AutoSizeIterationCount
˝˝ .
;
˝˝. /
	protected
˛˛ 
int
˛˛ )
m_AutoSizeMaxIterationCount
˛˛ 1
=
˛˛2 3
$num
˛˛4 7
;
˛˛7 8
	protected
ÄÄ 
bool
ÄÄ &
m_IsAutoSizePointSizeSet
ÄÄ /
;
ÄÄ/ 0
public
ÜÜ 
float
ÜÜ 
fontSizeMin
ÜÜ  
{
áá 	
get
àà 
{
àà 
return
àà 
m_fontSizeMin
àà &
;
àà& '
}
àà( )
set
ââ 
{
ââ 
if
ââ 
(
ââ 
m_fontSizeMin
ââ #
==
ââ$ &
value
ââ' ,
)
ââ, -
return
ââ. 4
;
ââ4 5
m_fontSizeMin
ââ6 C
=
ââD E
value
ââF K
;
ââK L
SetVerticesDirty
ââM ]
(
ââ] ^
)
ââ^ _
;
ââ_ `
SetLayoutDirty
ââa o
(
ââo p
)
ââp q
;
ââq r
}
ââs t
}
ää 	
[
ãã 	
SerializeField
ãã	 
]
ãã 
	protected
åå 
float
åå 
m_fontSizeMin
åå %
=
åå& '
$num
åå( )
;
åå) *
public
íí 
float
íí 
fontSizeMax
íí  
{
ìì 	
get
îî 
{
îî 
return
îî 
m_fontSizeMax
îî &
;
îî& '
}
îî( )
set
ïï 
{
ïï 
if
ïï 
(
ïï 
m_fontSizeMax
ïï #
==
ïï$ &
value
ïï' ,
)
ïï, -
return
ïï. 4
;
ïï4 5
m_fontSizeMax
ïï6 C
=
ïïD E
value
ïïF K
;
ïïK L
SetVerticesDirty
ïïM ]
(
ïï] ^
)
ïï^ _
;
ïï_ `
SetLayoutDirty
ïïa o
(
ïïo p
)
ïïp q
;
ïïq r
}
ïïs t
}
ññ 	
[
óó 	
SerializeField
óó	 
]
óó 
	protected
òò 
float
òò 
m_fontSizeMax
òò %
=
òò& '
$num
òò( )
;
òò) *
public
ûû 

FontStyles
ûû 
	fontStyle
ûû #
{
üü 	
get
†† 
{
†† 
return
†† 
m_fontStyle
†† $
;
††$ %
}
††& '
set
°° 
{
°° 
if
°° 
(
°° 
m_fontStyle
°° !
==
°°" $
value
°°% *
)
°°* +
return
°°, 2
;
°°2 3
m_fontStyle
°°4 ?
=
°°@ A
value
°°B G
;
°°G H%
m_havePropertiesChanged
°°I `
=
°°a b
true
°°c g
;
°°g h'
m_isInputParsingRequired°°i Å
=°°Ç É
true°°Ñ à
;°°à â 
SetVerticesDirty°°ä ö
(°°ö õ
)°°õ ú
;°°ú ù
SetLayoutDirty°°û ¨
(°°¨ ≠
)°°≠ Æ
;°°Æ Ø
}°°∞ ±
}
¢¢ 	
[
££ 	
SerializeField
££	 
]
££ 
	protected
§§ 

FontStyles
§§ 
m_fontStyle
§§ (
=
§§) *

FontStyles
§§+ 5
.
§§5 6
Normal
§§6 <
;
§§< =
	protected
•• 

FontStyles
•• !
m_FontStyleInternal
•• 0
=
••1 2

FontStyles
••3 =
.
••= >
Normal
••> D
;
••D E
	protected
¶¶  
TMP_FontStyleStack
¶¶ $
m_fontStyleStack
¶¶% 5
;
¶¶5 6
public
´´ 
bool
´´ 
isUsingBold
´´ 
{
´´  !
get
´´" %
{
´´& '
return
´´( .
m_isUsingBold
´´/ <
;
´´< =
}
´´> ?
}
´´@ A
	protected
¨¨ 
bool
¨¨ 
m_isUsingBold
¨¨ $
=
¨¨% &
false
¨¨' ,
;
¨¨, -
public
±± (
HorizontalAlignmentOptions
±± )!
horizontalAlignment
±±* =
{
≤≤ 	
get
≥≥ 
{
≥≥ 
return
≥≥ #
m_HorizontalAlignment
≥≥ .
;
≥≥. /
}
≥≥0 1
set
¥¥ 
{
µµ 
if
∂∂ 
(
∂∂ #
m_HorizontalAlignment
∂∂ )
==
∂∂* ,
value
∂∂- 2
)
∂∂2 3
return
∑∑ 
;
∑∑ #
m_HorizontalAlignment
ππ %
=
ππ& '
value
ππ( -
;
ππ- .%
m_havePropertiesChanged
ªª '
=
ªª( )
true
ªª* .
;
ªª. /
SetVerticesDirty
ºº  
(
ºº  !
)
ºº! "
;
ºº" #
}
ΩΩ 
}
ææ 	
[
øø 	
SerializeField
øø	 
]
øø 
	protected
¿¿ (
HorizontalAlignmentOptions
¿¿ ,#
m_HorizontalAlignment
¿¿- B
=
¿¿C D(
HorizontalAlignmentOptions
¿¿E _
.
¿¿_ `
Left
¿¿` d
;
¿¿d e
public
≈≈ &
VerticalAlignmentOptions
≈≈ '
verticalAlignment
≈≈( 9
{
∆∆ 	
get
«« 
{
«« 
return
«« !
m_VerticalAlignment
«« ,
;
««, -
}
««. /
set
»» 
{
…… 
if
   
(
   !
m_VerticalAlignment
   '
==
  ( *
value
  + 0
)
  0 1
return
ÀÀ 
;
ÀÀ !
m_VerticalAlignment
ÕÕ #
=
ÕÕ$ %
value
ÕÕ& +
;
ÕÕ+ ,%
m_havePropertiesChanged
œœ '
=
œœ( )
true
œœ* .
;
œœ. /
SetVerticesDirty
––  
(
––  !
)
––! "
;
––" #
}
—— 
}
““ 	
[
”” 	
SerializeField
””	 
]
”” 
	protected
‘‘ &
VerticalAlignmentOptions
‘‘ *!
m_VerticalAlignment
‘‘+ >
=
‘‘? @&
VerticalAlignmentOptions
‘‘A Y
.
‘‘Y Z
Top
‘‘Z ]
;
‘‘] ^
public
ŸŸ "
TextAlignmentOptions
ŸŸ #
	alignment
ŸŸ$ -
{
⁄⁄ 	
get
€€ 
{
€€ 
return
€€ 
(
€€ "
TextAlignmentOptions
€€ .
)
€€. /
(
€€/ 0
(
€€0 1
int
€€1 4
)
€€4 5#
m_HorizontalAlignment
€€5 J
|
€€K L
(
€€M N
int
€€N Q
)
€€Q R!
m_VerticalAlignment
€€R e
)
€€e f
;
€€f g
}
€€h i
set
‹‹ 
{
›› (
HorizontalAlignmentOptions
ﬁﬁ *!
horizontalAlignment
ﬁﬁ+ >
=
ﬁﬁ? @
(
ﬁﬁA B(
HorizontalAlignmentOptions
ﬁﬁB \
)
ﬁﬁ\ ]
(
ﬁﬁ] ^
(
ﬁﬁ^ _
int
ﬁﬁ_ b
)
ﬁﬁb c
value
ﬁﬁc h
&
ﬁﬁi j
$num
ﬁﬁk o
)
ﬁﬁo p
;
ﬁﬁp q&
VerticalAlignmentOptions
ﬂﬂ (
verticalAlignment
ﬂﬂ) :
=
ﬂﬂ; <
(
ﬂﬂ= >&
VerticalAlignmentOptions
ﬂﬂ> V
)
ﬂﬂV W
(
ﬂﬂW X
(
ﬂﬂX Y
int
ﬂﬂY \
)
ﬂﬂ\ ]
value
ﬂﬂ] b
&
ﬂﬂc d
$num
ﬂﬂe k
)
ﬂﬂk l
;
ﬂﬂl m
if
·· 
(
·· #
m_HorizontalAlignment
·· )
==
··* ,!
horizontalAlignment
··- @
&&
··A C!
m_VerticalAlignment
··D W
==
··X Z
verticalAlignment
··[ l
)
··l m
return
‚‚ 
;
‚‚ #
m_HorizontalAlignment
‰‰ %
=
‰‰& '!
horizontalAlignment
‰‰( ;
;
‰‰; <!
m_VerticalAlignment
ÂÂ #
=
ÂÂ$ %
verticalAlignment
ÂÂ& 7
;
ÂÂ7 8%
m_havePropertiesChanged
ÊÊ '
=
ÊÊ( )
true
ÊÊ* .
;
ÊÊ. /
SetVerticesDirty
ÁÁ  
(
ÁÁ  !
)
ÁÁ! "
;
ÁÁ" #
}
ËË 
}
ÈÈ 	
[
ÍÍ 	
SerializeField
ÍÍ	 
]
ÍÍ 
[
ÎÎ 	
UnityEngine
ÎÎ	 
.
ÎÎ 
Serialization
ÎÎ "
.
ÎÎ" #"
FormerlySerializedAs
ÎÎ# 7
(
ÎÎ7 8
$str
ÎÎ8 M
)
ÎÎM N
]
ÎÎN O
	protected
ÏÏ "
TextAlignmentOptions
ÏÏ &
m_textAlignment
ÏÏ' 6
=
ÏÏ7 8"
TextAlignmentOptions
ÏÏ9 M
.
ÏÏM N
	Converted
ÏÏN W
;
ÏÏW X
	protected
ÓÓ (
HorizontalAlignmentOptions
ÓÓ ,!
m_lineJustification
ÓÓ- @
;
ÓÓ@ A
	protected
ÔÔ %
TMP_TextProcessingStack
ÔÔ )
<
ÔÔ) *(
HorizontalAlignmentOptions
ÔÔ* D
>
ÔÔD E&
m_lineJustificationStack
ÔÔF ^
=
ÔÔ_ `
new
ÔÔa d%
TMP_TextProcessingStack
ÔÔe |
<
ÔÔ| })
HorizontalAlignmentOptionsÔÔ} ó
>ÔÔó ò
(ÔÔò ô
newÔÔô ú*
HorizontalAlignmentOptionsÔÔù ∑
[ÔÔ∑ ∏
$numÔÔ∏ ∫
]ÔÔ∫ ª
)ÔÔª º
;ÔÔº Ω
	protected
 
Vector3
 
[
 
]
 )
m_textContainerLocalCorners
 7
=
8 9
new
: =
Vector3
> E
[
E F
$num
F G
]
G H
;
H I
public
ÅÅ 
float
ÅÅ 
characterSpacing
ÅÅ %
{
ÇÇ 	
get
ÉÉ 
{
ÉÉ 
return
ÉÉ  
m_characterSpacing
ÉÉ +
;
ÉÉ+ ,
}
ÉÉ- .
set
ÑÑ 
{
ÑÑ 
if
ÑÑ 
(
ÑÑ  
m_characterSpacing
ÑÑ (
==
ÑÑ) +
value
ÑÑ, 1
)
ÑÑ1 2
return
ÑÑ3 9
;
ÑÑ9 :%
m_havePropertiesChanged
ÑÑ; R
=
ÑÑS T
true
ÑÑU Y
;
ÑÑY Z 
m_characterSpacing
ÑÑ[ m
=
ÑÑn o
value
ÑÑp u
;
ÑÑu v
SetVerticesDirtyÑÑw á
(ÑÑá à
)ÑÑà â
;ÑÑâ ä
SetLayoutDirtyÑÑã ô
(ÑÑô ö
)ÑÑö õ
;ÑÑõ ú
}ÑÑù û
}
ÖÖ 	
[
ÜÜ 	
SerializeField
ÜÜ	 
]
ÜÜ 
	protected
áá 
float
áá  
m_characterSpacing
áá *
=
áá+ ,
$num
áá- .
;
áá. /
	protected
àà 
float
àà 

m_cSpacing
àà "
=
àà# $
$num
àà% &
;
àà& '
	protected
ââ 
float
ââ 
m_monoSpacing
ââ %
=
ââ& '
$num
ââ( )
;
ââ) *
public
éé 
float
éé 
wordSpacing
éé  
{
èè 	
get
êê 
{
êê 
return
êê 
m_wordSpacing
êê &
;
êê& '
}
êê( )
set
ëë 
{
ëë 
if
ëë 
(
ëë 
m_wordSpacing
ëë #
==
ëë$ &
value
ëë' ,
)
ëë, -
return
ëë. 4
;
ëë4 5%
m_havePropertiesChanged
ëë6 M
=
ëëN O
true
ëëP T
;
ëëT U
m_wordSpacing
ëëV c
=
ëëd e
value
ëëf k
;
ëëk l
SetVerticesDirty
ëëm }
(
ëë} ~
)
ëë~ 
;ëë Ä
SetLayoutDirtyëëÅ è
(ëëè ê
)ëëê ë
;ëëë í
}ëëì î
}
íí 	
[
ìì 	
SerializeField
ìì	 
]
ìì 
	protected
îî 
float
îî 
m_wordSpacing
îî %
=
îî& '
$num
îî( )
;
îî) *
public
ôô 
float
ôô 
lineSpacing
ôô  
{
öö 	
get
õõ 
{
õõ 
return
õõ 
m_lineSpacing
õõ &
;
õõ& '
}
õõ( )
set
úú 
{
úú 
if
úú 
(
úú 
m_lineSpacing
úú #
==
úú$ &
value
úú' ,
)
úú, -
return
úú. 4
;
úú4 5%
m_havePropertiesChanged
úú6 M
=
úúN O
true
úúP T
;
úúT U
m_lineSpacing
úúV c
=
úúd e
value
úúf k
;
úúk l
SetVerticesDirty
úúm }
(
úú} ~
)
úú~ 
;úú Ä
SetLayoutDirtyúúÅ è
(úúè ê
)úúê ë
;úúë í
}úúì î
}
ùù 	
[
ûû 	
SerializeField
ûû	 
]
ûû 
	protected
üü 
float
üü 
m_lineSpacing
üü %
=
üü& '
$num
üü( )
;
üü) *
	protected
†† 
float
††  
m_lineSpacingDelta
†† *
=
††+ ,
$num
††- .
;
††. /
	protected
°° 
float
°° 
m_lineHeight
°° $
=
°°% &
TMP_Math
°°' /
.
°°/ 0
FLOAT_UNSET
°°0 ;
;
°°; <
	protected
¢¢ 
bool
¢¢ #
m_IsDrivenLineSpacing
¢¢ ,
;
¢¢, -
public
®® 
float
®® #
lineSpacingAdjustment
®® *
{
©© 	
get
™™ 
{
™™ 
return
™™ 
m_lineSpacingMax
™™ )
;
™™) *
}
™™+ ,
set
´´ 
{
´´ 
if
´´ 
(
´´ 
m_lineSpacingMax
´´ &
==
´´' )
value
´´* /
)
´´/ 0
return
´´1 7
;
´´7 8%
m_havePropertiesChanged
´´9 P
=
´´Q R
true
´´S W
;
´´W X
m_lineSpacingMax
´´Y i
=
´´j k
value
´´l q
;
´´q r
SetVerticesDirty´´s É
(´´É Ñ
)´´Ñ Ö
;´´Ö Ü
SetLayoutDirty´´á ï
(´´ï ñ
)´´ñ ó
;´´ó ò
}´´ô ö
}
¨¨ 	
[
≠≠ 	
SerializeField
≠≠	 
]
≠≠ 
	protected
ÆÆ 
float
ÆÆ 
m_lineSpacingMax
ÆÆ (
=
ÆÆ) *
$num
ÆÆ+ ,
;
ÆÆ, -
public
¥¥ 
float
¥¥ 
paragraphSpacing
¥¥ %
{
µµ 	
get
∂∂ 
{
∂∂ 
return
∂∂  
m_paragraphSpacing
∂∂ +
;
∂∂+ ,
}
∂∂- .
set
∑∑ 
{
∑∑ 
if
∑∑ 
(
∑∑  
m_paragraphSpacing
∑∑ (
==
∑∑) +
value
∑∑, 1
)
∑∑1 2
return
∑∑3 9
;
∑∑9 :%
m_havePropertiesChanged
∑∑; R
=
∑∑S T
true
∑∑U Y
;
∑∑Y Z 
m_paragraphSpacing
∑∑[ m
=
∑∑n o
value
∑∑p u
;
∑∑u v
SetVerticesDirty∑∑w á
(∑∑á à
)∑∑à â
;∑∑â ä
SetLayoutDirty∑∑ã ô
(∑∑ô ö
)∑∑ö õ
;∑∑õ ú
}∑∑ù û
}
∏∏ 	
[
ππ 	
SerializeField
ππ	 
]
ππ 
	protected
∫∫ 
float
∫∫  
m_paragraphSpacing
∫∫ *
=
∫∫+ ,
$num
∫∫- .
;
∫∫. /
public
¿¿ 
float
¿¿ &
characterWidthAdjustment
¿¿ -
{
¡¡ 	
get
¬¬ 
{
¬¬ 
return
¬¬ 
m_charWidthMaxAdj
¬¬ *
;
¬¬* +
}
¬¬, -
set
√√ 
{
√√ 
if
√√ 
(
√√ 
m_charWidthMaxAdj
√√ '
==
√√( *
value
√√+ 0
)
√√0 1
return
√√2 8
;
√√8 9%
m_havePropertiesChanged
√√: Q
=
√√R S
true
√√T X
;
√√X Y
m_charWidthMaxAdj
√√Z k
=
√√l m
value
√√n s
;
√√s t
SetVerticesDirty√√u Ö
(√√Ö Ü
)√√Ü á
;√√á à
SetLayoutDirty√√â ó
(√√ó ò
)√√ò ô
;√√ô ö
}√√õ ú
}
ƒƒ 	
[
≈≈ 	
SerializeField
≈≈	 
]
≈≈ 
	protected
∆∆ 
float
∆∆ 
m_charWidthMaxAdj
∆∆ )
=
∆∆* +
$num
∆∆, .
;
∆∆. /
	protected
«« 
float
«« !
m_charWidthAdjDelta
«« +
=
««, -
$num
««. /
;
««/ 0
public
ÕÕ 
bool
ÕÕ  
enableWordWrapping
ÕÕ &
{
ŒŒ 	
get
œœ 
{
œœ 
return
œœ "
m_enableWordWrapping
œœ -
;
œœ- .
}
œœ/ 0
set
–– 
{
–– 
if
–– 
(
–– "
m_enableWordWrapping
–– *
==
––+ -
value
––. 3
)
––3 4
return
––5 ;
;
––; <%
m_havePropertiesChanged
––= T
=
––U V
true
––W [
;
––[ \&
m_isInputParsingRequired
––] u
=
––v w
true
––x |
;
––| }#
m_enableWordWrapping––~ í
=––ì î
value––ï ö
;––ö õ 
SetVerticesDirty––ú ¨
(––¨ ≠
)––≠ Æ
;––Æ Ø
SetLayoutDirty––∞ æ
(––æ ø
)––ø ¿
;––¿ ¡
}––¬ √
}
—— 	
[
““ 	
SerializeField
““	 
]
““ 
	protected
”” 
bool
”” "
m_enableWordWrapping
”” +
=
””, -
false
””. 3
;
””3 4
	protected
‘‘ 
bool
‘‘ *
m_isCharacterWrappingEnabled
‘‘ 3
=
‘‘4 5
false
‘‘6 ;
;
‘‘; <
	protected
’’ 
bool
’’ "
m_isNonBreakingSpace
’’ +
=
’’, -
false
’’. 3
;
’’3 4
	protected
÷÷ 
bool
÷÷ #
m_isIgnoringAlignment
÷÷ ,
;
÷÷, -
public
€€ 
float
€€  
wordWrappingRatios
€€ '
{
‹‹ 	
get
›› 
{
›› 
return
›› "
m_wordWrappingRatios
›› -
;
››- .
}
››/ 0
set
ﬁﬁ 
{
ﬁﬁ 
if
ﬁﬁ 
(
ﬁﬁ "
m_wordWrappingRatios
ﬁﬁ *
==
ﬁﬁ+ -
value
ﬁﬁ. 3
)
ﬁﬁ3 4
return
ﬁﬁ5 ;
;
ﬁﬁ; <"
m_wordWrappingRatios
ﬁﬁ= Q
=
ﬁﬁR S
value
ﬁﬁT Y
;
ﬁﬁY Z%
m_havePropertiesChanged
ﬁﬁ[ r
=
ﬁﬁs t
true
ﬁﬁu y
;
ﬁﬁy z
SetVerticesDirtyﬁﬁ{ ã
(ﬁﬁã å
)ﬁﬁå ç
;ﬁﬁç é
SetLayoutDirtyﬁﬁè ù
(ﬁﬁù û
)ﬁﬁû ü
;ﬁﬁü †
}ﬁﬁ° ¢
}
ﬂﬂ 	
[
‡‡ 	
SerializeField
‡‡	 
]
‡‡ 
	protected
·· 
float
·· "
m_wordWrappingRatios
·· ,
=
··- .
$num
··/ 3
;
··3 4
public
ÙÙ 
TextOverflowModes
ÙÙ  
overflowMode
ÙÙ! -
{
ıı 	
get
ˆˆ 
{
ˆˆ 
return
ˆˆ 
m_overflowMode
ˆˆ '
;
ˆˆ' (
}
ˆˆ) *
set
˜˜ 
{
˜˜ 
if
˜˜ 
(
˜˜ 
m_overflowMode
˜˜ $
==
˜˜% '
value
˜˜( -
)
˜˜- .
return
˜˜/ 5
;
˜˜5 6
m_overflowMode
˜˜7 E
=
˜˜F G
value
˜˜H M
;
˜˜M N%
m_havePropertiesChanged
˜˜O f
=
˜˜g h
true
˜˜i m
;
˜˜m n
SetVerticesDirty
˜˜o 
(˜˜ Ä
)˜˜Ä Å
;˜˜Å Ç
SetLayoutDirty˜˜É ë
(˜˜ë í
)˜˜í ì
;˜˜ì î
}˜˜ï ñ
}
¯¯ 	
[
˘˘ 	
SerializeField
˘˘	 
]
˘˘ 
	protected
˙˙ 
TextOverflowModes
˙˙ #
m_overflowMode
˙˙$ 2
=
˙˙3 4
TextOverflowModes
˙˙5 F
.
˙˙F G
Overflow
˙˙G O
;
˙˙O P
public
ÄÄ 
bool
ÄÄ 
isTextOverflowing
ÄÄ %
{
ÅÅ 	
get
ÇÇ 
{
ÇÇ 
if
ÇÇ 
(
ÇÇ +
m_firstOverflowCharacterIndex
ÇÇ 3
!=
ÇÇ4 6
-
ÇÇ7 8
$num
ÇÇ8 9
)
ÇÇ9 :
return
ÇÇ; A
true
ÇÇB F
;
ÇÇF G
return
ÇÇH N
false
ÇÇO T
;
ÇÇT U
}
ÇÇV W
}
ÉÉ 	
public
ââ 
int
ââ )
firstOverflowCharacterIndex
ââ .
{
ää 	
get
ãã 
{
ãã 
return
ãã +
m_firstOverflowCharacterIndex
ãã 6
;
ãã6 7
}
ãã8 9
}
åå 	
	protected
éé 
int
éé +
m_firstOverflowCharacterIndex
éé 3
=
éé4 5
-
éé6 7
$num
éé7 8
;
éé8 9
public
îî 
TMP_Text
îî !
linkedTextComponent
îî +
{
ïï 	
get
ññ 
{
ññ 
return
ññ #
m_linkedTextComponent
ññ .
;
ññ. /
}
ññ0 1
set
òò 
{
ôô 
if
öö 
(
öö 
value
öö 
==
öö 
null
öö !
)
öö! "
{
õõ (
ReleaseLinkedTextComponent
ùù .
(
ùù. /#
m_linkedTextComponent
ùù/ D
)
ùùD E
;
ùùE F#
m_linkedTextComponent
üü )
=
üü* +
value
üü, 1
;
üü1 2
}
†† 
else
°° 
if
°° 
(
°° $
IsSelfOrLinkedAncestor
°° /
(
°°/ 0
value
°°0 5
)
°°5 6
)
°°6 7
{
¢¢ 
return
§§ 
;
§§ 
}
•• 
else
¶¶ 
{
ßß (
ReleaseLinkedTextComponent
©© .
(
©©. /#
m_linkedTextComponent
©©/ D
)
©©D E
;
©©E F#
m_linkedTextComponent
´´ )
=
´´* +
value
´´, 1
;
´´1 2#
m_linkedTextComponent
¨¨ )
.
¨¨) *#
parentLinkedComponent
¨¨* ?
=
¨¨@ A
this
¨¨B F
;
¨¨F G
}
≠≠ %
m_havePropertiesChanged
ØØ '
=
ØØ( )
true
ØØ* .
;
ØØ. /
SetVerticesDirty
∞∞  
(
∞∞  !
)
∞∞! "
;
∞∞" #
SetLayoutDirty
±± 
(
±± 
)
±±  
;
±±  !
}
≤≤ 
}
≥≥ 	
[
¥¥ 	
SerializeField
¥¥	 
]
¥¥ 
	protected
µµ 
TMP_Text
µµ #
m_linkedTextComponent
µµ 0
;
µµ0 1
[
∂∂ 	
SerializeField
∂∂	 
]
∂∂ 
internal
∑∑ 
TMP_Text
∑∑ #
parentLinkedComponent
∑∑ /
;
∑∑/ 0
public
ΩΩ 
bool
ΩΩ 
isTextTruncated
ΩΩ #
{
ΩΩ$ %
get
ΩΩ& )
{
ΩΩ* +
return
ΩΩ, 2
m_isTextTruncated
ΩΩ3 D
;
ΩΩD E
}
ΩΩF G
}
ΩΩH I
	protected
øø 
bool
øø 
m_isTextTruncated
øø (
;
øø( )
public
≈≈ 
bool
≈≈ 
enableKerning
≈≈ !
{
∆∆ 	
get
«« 
{
«« 
return
«« 
m_enableKerning
«« (
;
««( )
}
««* +
set
»» 
{
»» 
if
»» 
(
»» 
m_enableKerning
»» %
==
»»& (
value
»») .
)
»». /
return
»»0 6
;
»»6 7%
m_havePropertiesChanged
»»8 O
=
»»P Q
true
»»R V
;
»»V W
m_enableKerning
»»X g
=
»»h i
value
»»j o
;
»»o p
SetVerticesDirty»»q Å
(»»Å Ç
)»»Ç É
;»»É Ñ
SetLayoutDirty»»Ö ì
(»»ì î
)»»î ï
;»»ï ñ
}»»ó ò
}
…… 	
[
   	
SerializeField
  	 
]
   
	protected
ÀÀ 
bool
ÀÀ 
m_enableKerning
ÀÀ &
;
ÀÀ& '
	protected
ÃÃ 
float
ÃÃ 0
"m_GlyphHorizontalAdvanceAdjustment
ÃÃ :
;
ÃÃ: ;
public
—— 
bool
—— 
extraPadding
——  
{
““ 	
get
”” 
{
”” 
return
”” "
m_enableExtraPadding
”” -
;
””- .
}
””/ 0
set
‘‘ 
{
‘‘ 
if
‘‘ 
(
‘‘ "
m_enableExtraPadding
‘‘ *
==
‘‘+ -
value
‘‘. 3
)
‘‘3 4
return
‘‘5 ;
;
‘‘; <%
m_havePropertiesChanged
‘‘= T
=
‘‘U V
true
‘‘W [
;
‘‘[ \"
m_enableExtraPadding
‘‘] q
=
‘‘r s
value
‘‘t y
;
‘‘y z 
UpdateMeshPadding‘‘{ å
(‘‘å ç
)‘‘ç é
;‘‘é è 
SetVerticesDirty‘‘ê †
(‘‘† °
)‘‘° ¢
;‘‘¢ £
}‘‘ª º
}
’’ 	
[
÷÷ 	
SerializeField
÷÷	 
]
÷÷ 
	protected
◊◊ 
bool
◊◊ "
m_enableExtraPadding
◊◊ +
=
◊◊, -
false
◊◊. 3
;
◊◊3 4
[
ÿÿ 	
SerializeField
ÿÿ	 
]
ÿÿ 
	protected
ŸŸ 
bool
ŸŸ "
checkPaddingRequired
ŸŸ +
;
ŸŸ+ ,
public
ﬂﬂ 
bool
ﬂﬂ 
richText
ﬂﬂ 
{
‡‡ 	
get
·· 
{
·· 
return
·· 
m_isRichText
·· %
;
··% &
}
··' (
set
‚‚ 
{
‚‚ 
if
‚‚ 
(
‚‚ 
m_isRichText
‚‚ "
==
‚‚# %
value
‚‚& +
)
‚‚+ ,
return
‚‚- 3
;
‚‚3 4
m_isRichText
‚‚5 A
=
‚‚B C
value
‚‚D I
;
‚‚I J%
m_havePropertiesChanged
‚‚K b
=
‚‚c d
true
‚‚e i
;
‚‚i j'
m_isInputParsingRequired‚‚k É
=‚‚Ñ Ö
true‚‚Ü ä
;‚‚ä ã 
SetVerticesDirty‚‚å ú
(‚‚ú ù
)‚‚ù û
;‚‚û ü
SetLayoutDirty‚‚† Æ
(‚‚Æ Ø
)‚‚Ø ∞
;‚‚∞ ±
}‚‚≤ ≥
}
„„ 	
[
‰‰ 	
SerializeField
‰‰	 
]
‰‰ 
	protected
ÂÂ 
bool
ÂÂ 
m_isRichText
ÂÂ #
=
ÂÂ$ %
true
ÂÂ& *
;
ÂÂ* +
public
ÎÎ 
bool
ÎÎ !
parseCtrlCharacters
ÎÎ '
{
ÏÏ 	
get
ÌÌ 
{
ÌÌ 
return
ÌÌ #
m_parseCtrlCharacters
ÌÌ .
;
ÌÌ. /
}
ÌÌ0 1
set
ÓÓ 
{
ÓÓ 
if
ÓÓ 
(
ÓÓ #
m_parseCtrlCharacters
ÓÓ +
==
ÓÓ, .
value
ÓÓ/ 4
)
ÓÓ4 5
return
ÓÓ6 <
;
ÓÓ< =#
m_parseCtrlCharacters
ÓÓ> S
=
ÓÓT U
value
ÓÓV [
;
ÓÓ[ \%
m_havePropertiesChanged
ÓÓ] t
=
ÓÓu v
true
ÓÓw {
;
ÓÓ{ |'
m_isInputParsingRequiredÓÓ} ï
=ÓÓñ ó
trueÓÓò ú
;ÓÓú ù 
SetVerticesDirtyÓÓû Æ
(ÓÓÆ Ø
)ÓÓØ ∞
;ÓÓ∞ ±
SetLayoutDirtyÓÓ≤ ¿
(ÓÓ¿ ¡
)ÓÓ¡ ¬
;ÓÓ¬ √
}ÓÓƒ ≈
}
ÔÔ 	
[
 	
SerializeField
	 
]
 
	protected
ÒÒ 
bool
ÒÒ #
m_parseCtrlCharacters
ÒÒ ,
=
ÒÒ- .
true
ÒÒ/ 3
;
ÒÒ3 4
public
˜˜ 
bool
˜˜ 
	isOverlay
˜˜ 
{
¯¯ 	
get
˘˘ 
{
˘˘ 
return
˘˘ 
m_isOverlay
˘˘ $
;
˘˘$ %
}
˘˘& '
set
˙˙ 
{
˙˙ 
if
˙˙ 
(
˙˙ 
m_isOverlay
˙˙ !
==
˙˙" $
value
˙˙% *
)
˙˙* +
return
˙˙, 2
;
˙˙2 3
m_isOverlay
˙˙4 ?
=
˙˙@ A
value
˙˙B G
;
˙˙G H
SetShaderDepth
˙˙I W
(
˙˙W X
)
˙˙X Y
;
˙˙Y Z%
m_havePropertiesChanged
˙˙[ r
=
˙˙s t
true
˙˙u y
;
˙˙y z
SetVerticesDirty˙˙{ ã
(˙˙ã å
)˙˙å ç
;˙˙ç é
}˙˙è ê
}
˚˚ 	
	protected
¸¸ 
bool
¸¸ 
m_isOverlay
¸¸ "
=
¸¸# $
false
¸¸% *
;
¸¸* +
public
ÇÇ 
bool
ÇÇ 
isOrthographic
ÇÇ "
{
ÉÉ 	
get
ÑÑ 
{
ÑÑ 
return
ÑÑ 
m_isOrthographic
ÑÑ )
;
ÑÑ) *
}
ÑÑ+ ,
set
ÖÖ 
{
ÖÖ 
if
ÖÖ 
(
ÖÖ 
m_isOrthographic
ÖÖ &
==
ÖÖ' )
value
ÖÖ* /
)
ÖÖ/ 0
return
ÖÖ1 7
;
ÖÖ7 8%
m_havePropertiesChanged
ÖÖ9 P
=
ÖÖQ R
true
ÖÖS W
;
ÖÖW X
m_isOrthographic
ÖÖY i
=
ÖÖj k
value
ÖÖl q
;
ÖÖq r
SetVerticesDirtyÖÖs É
(ÖÖÉ Ñ
)ÖÖÑ Ö
;ÖÖÖ Ü
}ÖÖá à
}
ÜÜ 	
[
áá 	
SerializeField
áá	 
]
áá 
	protected
àà 
bool
àà 
m_isOrthographic
àà '
=
àà( )
false
àà* /
;
àà/ 0
public
éé 
bool
éé 
enableCulling
éé !
{
èè 	
get
êê 
{
êê 
return
êê  
m_isCullingEnabled
êê +
;
êê+ ,
}
êê- .
set
ëë 
{
ëë 
if
ëë 
(
ëë  
m_isCullingEnabled
ëë (
==
ëë) +
value
ëë, 1
)
ëë1 2
return
ëë3 9
;
ëë9 : 
m_isCullingEnabled
ëë; M
=
ëëN O
value
ëëP U
;
ëëU V

SetCulling
ëëW a
(
ëëa b
)
ëëb c
;
ëëc d%
m_havePropertiesChanged
ëëe |
=
ëë} ~
trueëë É
;ëëÉ Ñ
}ëëÖ Ü
}
íí 	
[
ìì 	
SerializeField
ìì	 
]
ìì 
	protected
îî 
bool
îî  
m_isCullingEnabled
îî )
=
îî* +
false
îî, 1
;
îî1 2
	protected
óó 
bool
óó  
m_isMaskingEnabled
óó )
;
óó) *
	protected
òò 
bool
òò "
isMaskUpdateRequired
òò +
;
òò+ ,
public
ùù 
bool
ùù 
ignoreVisibility
ùù $
{
ûû 	
get
üü 
{
üü 
return
üü 
m_ignoreCulling
üü (
;
üü( )
}
üü* +
set
†† 
{
†† 
if
†† 
(
†† 
m_ignoreCulling
†† %
==
††& (
value
††) .
)
††. /
return
††0 6
;
††6 7%
m_havePropertiesChanged
††8 O
=
††P Q
true
††R V
;
††V W
m_ignoreCulling
††X g
=
††h i
value
††j o
;
††o p
}
††q r
}
°° 	
	protected
££ 
bool
££ 
m_ignoreCulling
££ &
=
££' (
true
££) -
;
££- .
public
©© #
TextureMappingOptions
©© $
horizontalMapping
©©% 6
{
™™ 	
get
´´ 
{
´´ 
return
´´ !
m_horizontalMapping
´´ ,
;
´´, -
}
´´. /
set
¨¨ 
{
¨¨ 
if
¨¨ 
(
¨¨ !
m_horizontalMapping
¨¨ )
==
¨¨* ,
value
¨¨- 2
)
¨¨2 3
return
¨¨4 :
;
¨¨: ;%
m_havePropertiesChanged
¨¨< S
=
¨¨T U
true
¨¨V Z
;
¨¨Z [!
m_horizontalMapping
¨¨\ o
=
¨¨p q
value
¨¨r w
;
¨¨w x
SetVerticesDirty¨¨y â
(¨¨â ä
)¨¨ä ã
;¨¨ã å
}¨¨ç é
}
≠≠ 	
[
ÆÆ 	
SerializeField
ÆÆ	 
]
ÆÆ 
	protected
ØØ #
TextureMappingOptions
ØØ '!
m_horizontalMapping
ØØ( ;
=
ØØ< =#
TextureMappingOptions
ØØ> S
.
ØØS T
	Character
ØØT ]
;
ØØ] ^
public
µµ #
TextureMappingOptions
µµ $
verticalMapping
µµ% 4
{
∂∂ 	
get
∑∑ 
{
∑∑ 
return
∑∑ 
m_verticalMapping
∑∑ *
;
∑∑* +
}
∑∑, -
set
∏∏ 
{
∏∏ 
if
∏∏ 
(
∏∏ 
m_verticalMapping
∏∏ '
==
∏∏( *
value
∏∏+ 0
)
∏∏0 1
return
∏∏2 8
;
∏∏8 9%
m_havePropertiesChanged
∏∏: Q
=
∏∏R S
true
∏∏T X
;
∏∏X Y
m_verticalMapping
∏∏Z k
=
∏∏l m
value
∏∏n s
;
∏∏s t
SetVerticesDirty∏∏u Ö
(∏∏Ö Ü
)∏∏Ü á
;∏∏á à
}∏∏â ä
}
ππ 	
[
∫∫ 	
SerializeField
∫∫	 
]
∫∫ 
	protected
ªª #
TextureMappingOptions
ªª '
m_verticalMapping
ªª( 9
=
ªª: ;#
TextureMappingOptions
ªª< Q
.
ªªQ R
	Character
ªªR [
;
ªª[ \
public
ÕÕ 
float
ÕÕ !
mappingUvLineOffset
ÕÕ (
{
ŒŒ 	
get
œœ 
{
œœ 
return
œœ 
m_uvLineOffset
œœ '
;
œœ' (
}
œœ) *
set
–– 
{
–– 
if
–– 
(
–– 
m_uvLineOffset
–– $
==
––% '
value
––( -
)
––- .
return
––/ 5
;
––5 6%
m_havePropertiesChanged
––7 N
=
––O P
true
––Q U
;
––U V
m_uvLineOffset
––W e
=
––f g
value
––h m
;
––m n
SetVerticesDirty
––o 
(–– Ä
)––Ä Å
;––Å Ç
}––É Ñ
}
—— 	
[
““ 	
SerializeField
““	 
]
““ 
	protected
”” 
float
”” 
m_uvLineOffset
”” &
=
””' (
$num
””) -
;
””- .
public
ŸŸ 
TextRenderFlags
ŸŸ 

renderMode
ŸŸ )
{
⁄⁄ 	
get
€€ 
{
€€ 
return
€€ 
m_renderMode
€€ %
;
€€% &
}
€€' (
set
‹‹ 
{
‹‹ 
if
‹‹ 
(
‹‹ 
m_renderMode
‹‹ "
==
‹‹# %
value
‹‹& +
)
‹‹+ ,
return
‹‹- 3
;
‹‹3 4
m_renderMode
‹‹5 A
=
‹‹B C
value
‹‹D I
;
‹‹I J%
m_havePropertiesChanged
‹‹K b
=
‹‹c d
true
‹‹e i
;
‹‹i j
}
‹‹k l
}
›› 	
	protected
ﬁﬁ 
TextRenderFlags
ﬁﬁ !
m_renderMode
ﬁﬁ" .
=
ﬁﬁ/ 0
TextRenderFlags
ﬁﬁ1 @
.
ﬁﬁ@ A
Render
ﬁﬁA G
;
ﬁﬁG H
public
‰‰  
VertexSortingOrder
‰‰ !"
geometrySortingOrder
‰‰" 6
{
ÂÂ 	
get
ÊÊ 
{
ÊÊ 
return
ÊÊ $
m_geometrySortingOrder
ÊÊ /
;
ÊÊ/ 0
}
ÊÊ1 2
set
ËË 
{
ËË $
m_geometrySortingOrder
ËË (
=
ËË) *
value
ËË+ 0
;
ËË0 1%
m_havePropertiesChanged
ËË2 I
=
ËËJ K
true
ËËL P
;
ËËP Q
SetVerticesDirty
ËËR b
(
ËËb c
)
ËËc d
;
ËËd e
}
ËËf g
}
ÍÍ 	
[
ÎÎ 	
SerializeField
ÎÎ	 
]
ÎÎ 
	protected
ÏÏ  
VertexSortingOrder
ÏÏ $$
m_geometrySortingOrder
ÏÏ% ;
;
ÏÏ; <
public
ÚÚ 
bool
ÚÚ %
isTextObjectScaleStatic
ÚÚ +
{
ÛÛ 	
get
ÙÙ 
{
ÙÙ 
return
ÙÙ '
m_IsTextObjectScaleStatic
ÙÙ 2
;
ÙÙ2 3
}
ÙÙ4 5
set
ıı 
{
ˆˆ '
m_IsTextObjectScaleStatic
˜˜ )
=
˜˜* +
value
˜˜, 1
;
˜˜1 2
if
˘˘ 
(
˘˘ '
m_IsTextObjectScaleStatic
˘˘ -
)
˘˘- .
TMP_UpdateManager
˙˙ %
.
˙˙% &+
UnRegisterTextObjectForUpdate
˙˙& C
(
˙˙C D
this
˙˙D H
)
˙˙H I
;
˙˙I J
else
˚˚ 
TMP_UpdateManager
¸¸ %
.
¸¸% &)
RegisterTextObjectForUpdate
¸¸& A
(
¸¸A B
this
¸¸B F
)
¸¸F G
;
¸¸G H
}
˝˝ 
}
˛˛ 	
[
ˇˇ 	
SerializeField
ˇˇ	 
]
ˇˇ 
	protected
ÄÄ 
bool
ÄÄ '
m_IsTextObjectScaleStatic
ÄÄ 0
;
ÄÄ0 1
public
ÜÜ 
bool
ÜÜ +
vertexBufferAutoSizeReduction
ÜÜ 1
{
áá 	
get
àà 
{
àà 
return
àà -
m_VertexBufferAutoSizeReduction
àà 8
;
àà8 9
}
àà: ;
set
ââ 
{
ââ -
m_VertexBufferAutoSizeReduction
ââ 1
=
ââ2 3
value
ââ4 9
;
ââ9 :%
m_havePropertiesChanged
ââ; R
=
ââS T
true
ââU Y
;
ââY Z
SetVerticesDirty
ââ[ k
(
ââk l
)
ââl m
;
ââm n
}
ââo p
}
ää 	
[
ãã 	
SerializeField
ãã	 
]
ãã 
	protected
åå 
bool
åå -
m_VertexBufferAutoSizeReduction
åå 6
=
åå7 8
true
åå9 =
;
åå= >
public
ëë 
int
ëë #
firstVisibleCharacter
ëë (
{
íí 	
get
ìì 
{
ìì 
return
ìì %
m_firstVisibleCharacter
ìì 0
;
ìì0 1
}
ìì2 3
set
îî 
{
îî 
if
îî 
(
îî %
m_firstVisibleCharacter
îî -
==
îî. 0
value
îî1 6
)
îî6 7
return
îî8 >
;
îî> ?%
m_havePropertiesChanged
îî@ W
=
îîX Y
true
îîZ ^
;
îî^ _%
m_firstVisibleCharacter
îî` w
=
îîx y
value
îîz 
;îî Ä 
SetVerticesDirtyîîÅ ë
(îîë í
)îîí ì
;îîì î
}îîï ñ
}
ïï 	
	protected
óó 
int
óó %
m_firstVisibleCharacter
óó -
;
óó- .
public
úú 
int
úú "
maxVisibleCharacters
úú '
{
ùù 	
get
ûû 
{
ûû 
return
ûû $
m_maxVisibleCharacters
ûû /
;
ûû/ 0
}
ûû1 2
set
üü 
{
üü 
if
üü 
(
üü $
m_maxVisibleCharacters
üü ,
==
üü- /
value
üü0 5
)
üü5 6
return
üü7 =
;
üü= >%
m_havePropertiesChanged
üü? V
=
üüW X
true
üüY ]
;
üü] ^$
m_maxVisibleCharacters
üü_ u
=
üüv w
value
üüx }
;
üü} ~
SetVerticesDirtyüü è
(üüè ê
)üüê ë
;üüë í
}üüì î
}
†† 	
	protected
°° 
int
°° $
m_maxVisibleCharacters
°° ,
=
°°- .
$num
°°/ 4
;
°°4 5
public
ßß 
int
ßß 
maxVisibleWords
ßß "
{
®® 	
get
©© 
{
©© 
return
©© 
m_maxVisibleWords
©© *
;
©©* +
}
©©, -
set
™™ 
{
™™ 
if
™™ 
(
™™ 
m_maxVisibleWords
™™ '
==
™™( *
value
™™+ 0
)
™™0 1
return
™™2 8
;
™™8 9%
m_havePropertiesChanged
™™: Q
=
™™R S
true
™™T X
;
™™X Y
m_maxVisibleWords
™™Z k
=
™™l m
value
™™n s
;
™™s t
SetVerticesDirty™™u Ö
(™™Ö Ü
)™™Ü á
;™™á à
}™™â ä
}
´´ 	
	protected
¨¨ 
int
¨¨ 
m_maxVisibleWords
¨¨ '
=
¨¨( )
$num
¨¨* /
;
¨¨/ 0
public
≤≤ 
int
≤≤ 
maxVisibleLines
≤≤ "
{
≥≥ 	
get
¥¥ 
{
¥¥ 
return
¥¥ 
m_maxVisibleLines
¥¥ *
;
¥¥* +
}
¥¥, -
set
µµ 
{
µµ 
if
µµ 
(
µµ 
m_maxVisibleLines
µµ '
==
µµ( *
value
µµ+ 0
)
µµ0 1
return
µµ2 8
;
µµ8 9%
m_havePropertiesChanged
µµ: Q
=
µµR S
true
µµT X
;
µµX Y&
m_isInputParsingRequired
µµZ r
=
µµs t
true
µµu y
;
µµy z 
m_maxVisibleLinesµµ{ å
=µµç é
valueµµè î
;µµî ï 
SetVerticesDirtyµµñ ¶
(µµ¶ ß
)µµß ®
;µµ® ©
}µµ™ ´
}
∂∂ 	
	protected
∑∑ 
int
∑∑ 
m_maxVisibleLines
∑∑ '
=
∑∑( )
$num
∑∑* /
;
∑∑/ 0
public
ΩΩ 
bool
ΩΩ $
useMaxVisibleDescender
ΩΩ *
{
ææ 	
get
øø 
{
øø 
return
øø &
m_useMaxVisibleDescender
øø 1
;
øø1 2
}
øø3 4
set
¿¿ 
{
¿¿ 
if
¿¿ 
(
¿¿ &
m_useMaxVisibleDescender
¿¿ .
==
¿¿/ 1
value
¿¿2 7
)
¿¿7 8
return
¿¿9 ?
;
¿¿? @%
m_havePropertiesChanged
¿¿A X
=
¿¿Y Z
true
¿¿[ _
;
¿¿_ `&
m_isInputParsingRequired
¿¿a y
=
¿¿z {
true¿¿| Ä
;¿¿Ä Å(
m_useMaxVisibleDescender¿¿Ç ö
=¿¿õ ú
value¿¿ù ¢
;¿¿¢ £ 
SetVerticesDirty¿¿§ ¥
(¿¿¥ µ
)¿¿µ ∂
;¿¿∂ ∑
}¿¿∏ π
}
¡¡ 	
[
¬¬ 	
SerializeField
¬¬	 
]
¬¬ 
	protected
√√ 
bool
√√ &
m_useMaxVisibleDescender
√√ /
=
√√0 1
true
√√2 6
;
√√6 7
public
…… 
int
…… 
pageToDisplay
……  
{
   	
get
ÀÀ 
{
ÀÀ 
return
ÀÀ 
m_pageToDisplay
ÀÀ (
;
ÀÀ( )
}
ÀÀ* +
set
ÃÃ 
{
ÃÃ 
if
ÃÃ 
(
ÃÃ 
m_pageToDisplay
ÃÃ %
==
ÃÃ& (
value
ÃÃ) .
)
ÃÃ. /
return
ÃÃ0 6
;
ÃÃ6 7%
m_havePropertiesChanged
ÃÃ8 O
=
ÃÃP Q
true
ÃÃR V
;
ÃÃV W
m_pageToDisplay
ÃÃX g
=
ÃÃh i
value
ÃÃj o
;
ÃÃo p
SetVerticesDirtyÃÃq Å
(ÃÃÅ Ç
)ÃÃÇ É
;ÃÃÉ Ñ
}ÃÃÖ Ü
}
ÕÕ 	
[
ŒŒ 	
SerializeField
ŒŒ	 
]
ŒŒ 
	protected
œœ 
int
œœ 
m_pageToDisplay
œœ %
=
œœ& '
$num
œœ( )
;
œœ) *
	protected
–– 
bool
–– 
m_isNewPage
–– "
=
––# $
false
––% *
;
––* +
public
’’ 
virtual
’’ 
Vector4
’’ 
margin
’’ %
{
÷÷ 	
get
◊◊ 
{
◊◊ 
return
◊◊ 
m_margin
◊◊ !
;
◊◊! "
}
◊◊# $
set
ÿÿ 
{
ÿÿ 
if
ÿÿ 
(
ÿÿ 
m_margin
ÿÿ 
==
ÿÿ !
value
ÿÿ" '
)
ÿÿ' (
return
ÿÿ) /
;
ÿÿ/ 0
m_margin
ÿÿ1 9
=
ÿÿ: ;
value
ÿÿ< A
;
ÿÿA B
ComputeMarginSize
ÿÿC T
(
ÿÿT U
)
ÿÿU V
;
ÿÿV W%
m_havePropertiesChanged
ÿÿX o
=
ÿÿp q
true
ÿÿr v
;
ÿÿv w
SetVerticesDirtyÿÿx à
(ÿÿà â
)ÿÿâ ä
;ÿÿä ã
}ÿÿå ç
}
ŸŸ 	
[
⁄⁄ 	
SerializeField
⁄⁄	 
]
⁄⁄ 
	protected
€€ 
Vector4
€€ 
m_margin
€€ "
=
€€# $
new
€€% (
Vector4
€€) 0
(
€€0 1
$num
€€1 2
,
€€2 3
$num
€€4 5
,
€€5 6
$num
€€7 8
,
€€8 9
$num
€€: ;
)
€€; <
;
€€< =
	protected
‹‹ 
float
‹‹ 
m_marginLeft
‹‹ $
;
‹‹$ %
	protected
›› 
float
›› 
m_marginRight
›› %
;
››% &
	protected
ﬁﬁ 
float
ﬁﬁ 
m_marginWidth
ﬁﬁ %
;
ﬁﬁ% &
	protected
ﬂﬂ 
float
ﬂﬂ 
m_marginHeight
ﬂﬂ &
;
ﬂﬂ& '
	protected
‡‡ 
float
‡‡ 
m_width
‡‡ 
=
‡‡  !
-
‡‡" #
$num
‡‡# $
;
‡‡$ %
public
ÊÊ 
TMP_TextInfo
ÊÊ 
textInfo
ÊÊ $
{
ÁÁ 	
get
ËË 
{
ËË 
return
ËË 

m_textInfo
ËË #
;
ËË# $
}
ËË% &
}
ÈÈ 	
	protected
ÎÎ 
TMP_TextInfo
ÎÎ 

m_textInfo
ÎÎ )
;
ÎÎ) *
public
 
bool
 #
havePropertiesChanged
 )
{
ÒÒ 	
get
ÚÚ 
{
ÚÚ 
return
ÚÚ %
m_havePropertiesChanged
ÚÚ 0
;
ÚÚ0 1
}
ÚÚ2 3
set
ÛÛ 
{
ÛÛ 
if
ÛÛ 
(
ÛÛ %
m_havePropertiesChanged
ÛÛ -
==
ÛÛ. 0
value
ÛÛ1 6
)
ÛÛ6 7
return
ÛÛ8 >
;
ÛÛ> ?%
m_havePropertiesChanged
ÛÛ@ W
=
ÛÛX Y
value
ÛÛZ _
;
ÛÛ_ `&
m_isInputParsingRequired
ÛÛa y
=
ÛÛz {
trueÛÛ| Ä
;ÛÛÄ Å
SetAllDirtyÛÛÇ ç
(ÛÛç é
)ÛÛé è
;ÛÛè ê
}ÛÛë í
}
ÙÙ 	
	protected
ˆˆ 
bool
ˆˆ %
m_havePropertiesChanged
ˆˆ .
;
ˆˆ. /
public
¸¸ 
bool
¸¸ -
isUsingLegacyAnimationComponent
¸¸ 3
{
˝˝ 	
get
˛˛ 
{
˛˛ 
return
˛˛ /
!m_isUsingLegacyAnimationComponent
˛˛ :
;
˛˛: ;
}
˛˛< =
set
ˇˇ 
{
ˇˇ /
!m_isUsingLegacyAnimationComponent
ˇˇ 3
=
ˇˇ4 5
value
ˇˇ6 ;
;
ˇˇ; <
}
ˇˇ= >
}
Ä	Ä	 	
[
Å	Å	 	
SerializeField
Å	Å		 
]
Å	Å	 
	protected
Ç	Ç	 
bool
Ç	Ç	 /
!m_isUsingLegacyAnimationComponent
Ç	Ç	 8
;
Ç	Ç	8 9
public
à	à	 
new
à	à	 
	Transform
à	à	 
	transform
à	à	 &
{
â	â	 	
get
ä	ä	 
{
ã	ã	 
if
å	å	 
(
å	å	 
m_transform
å	å	 
==
å	å	  "
null
å	å	# '
)
å	å	' (
m_transform
ç	ç	 
=
ç	ç	  !
GetComponent
ç	ç	" .
<
ç	ç	. /
	Transform
ç	ç	/ 8
>
ç	ç	8 9
(
ç	ç	9 :
)
ç	ç	: ;
;
ç	ç	; <
return
é	é	 
m_transform
é	é	 "
;
é	é	" #
}
è	è	 
}
ê	ê	 	
	protected
ë	ë	 
	Transform
ë	ë	 
m_transform
ë	ë	 '
;
ë	ë	' (
public
ó	ó	 
new
ó	ó	 
RectTransform
ó	ó	  
rectTransform
ó	ó	! .
{
ò	ò	 	
get
ô	ô	 
{
ö	ö	 
if
õ	õ	 
(
õ	õ	 
m_rectTransform
õ	õ	 #
==
õ	õ	$ &
null
õ	õ	' +
)
õ	õ	+ ,
m_rectTransform
ú	ú	 #
=
ú	ú	$ %
GetComponent
ú	ú	& 2
<
ú	ú	2 3
RectTransform
ú	ú	3 @
>
ú	ú	@ A
(
ú	ú	A B
)
ú	ú	B C
;
ú	ú	C D
return
ù	ù	 
m_rectTransform
ù	ù	 &
;
ù	ù	& '
}
û	û	 
}
ü	ü	 	
	protected
†	†	 
RectTransform
†	†	 
m_rectTransform
†	†	  /
;
†	†	/ 0
	protected
¶	¶	 
Vector2
¶	¶	 )
m_PreviousRectTransformSize
¶	¶	 5
;
¶	¶	5 6
	protected
´	´	 
Vector2
´	´	 %
m_PreviousPivotPosition
´	´	 1
;
´	´	1 2
public
±	±	 
virtual
±	±	 
bool
±	±	 #
autoSizeTextContainer
±	±	 1
{
≤	≤	 	
get
≥	≥	 
;
≥	≥	 
set
¥	¥	 
;
¥	¥	 
}
µ	µ	 	
	protected
∂	∂	 
bool
∂	∂	 %
m_autoSizeTextContainer
∂	∂	 .
;
∂	∂	. /
public
º	º	 
virtual
º	º	 
Mesh
º	º	 
mesh
º	º	  
{
Ω	Ω	 	
get
æ	æ	 
{
æ	æ	 
return
æ	æ	 
m_mesh
æ	æ	 
;
æ	æ	  
}
æ	æ	! "
}
ø	ø	 	
	protected
¿	¿	 
Mesh
¿	¿	 
m_mesh
¿	¿	 
;
¿	¿	 
public
∆	∆	 
bool
∆	∆	 
isVolumetricText
∆	∆	 $
{
«	«	 	
get
»	»	 
{
»	»	 
return
»	»	  
m_isVolumetricText
»	»	 +
;
»	»	+ ,
}
»	»	- .
set
…	…	 
{
…	…	 
if
…	…	 
(
…	…	  
m_isVolumetricText
…	…	 (
==
…	…	) +
value
…	…	, 1
)
…	…	1 2
return
…	…	3 9
;
…	…	9 :%
m_havePropertiesChanged
…	…	; R
=
…	…	S T
value
…	…	U Z
;
…	…	Z [

m_textInfo
…	…	\ f
.
…	…	f g
ResetVertexLayout
…	…	g x
(
…	…	x y
value
…	…	y ~
)
…	…	~ 
;…	…	 Ä(
m_isInputParsingRequired…	…	Å ô
=…	…	ö õ
true…	…	ú †
;…	…	† ° 
SetVerticesDirty…	…	¢ ≤
(…	…	≤ ≥
)…	…	≥ ¥
;…	…	¥ µ
SetLayoutDirty…	…	∂ ƒ
(…	…	ƒ ≈
)…	…	≈ ∆
;…	…	∆ «
}…	…	» …
}
 	 	 	
[
À	À	 	
SerializeField
À	À		 
]
À	À	 
	protected
Ã	Ã	 
bool
Ã	Ã	  
m_isVolumetricText
Ã	Ã	 )
;
Ã	Ã	) *
public
—	—	 
Bounds
—	—	 
bounds
—	—	 
{
“	“	 	
get
”	”	 
{
‘	‘	 
if
’	’	 
(
’	’	 
m_mesh
’	’	 
==
’	’	 
null
’	’	 "
)
’	’	" #
return
’	’	$ *
new
’	’	+ .
Bounds
’	’	/ 5
(
’	’	5 6
)
’	’	6 7
;
’	’	7 8
return
◊	◊	 
GetCompoundBounds
◊	◊	 (
(
◊	◊	( )
)
◊	◊	) *
;
◊	◊	* +
}
ÿ	ÿ	 
}
Ÿ	Ÿ	 	
public
ﬁ	ﬁ	 
Bounds
ﬁ	ﬁ	 

textBounds
ﬁ	ﬁ	  
{
ﬂ	ﬂ	 	
get
‡	‡	 
{
·	·	 
if
‚	‚	 
(
‚	‚	 

m_textInfo
‚	‚	 
==
‚	‚	 !
null
‚	‚	" &
)
‚	‚	& '
return
‚	‚	( .
new
‚	‚	/ 2
Bounds
‚	‚	3 9
(
‚	‚	9 :
)
‚	‚	: ;
;
‚	‚	; <
return
‰	‰	 
GetTextBounds
‰	‰	 $
(
‰	‰	$ %
)
‰	‰	% &
;
‰	‰	& '
}
Â	Â	 
}
Ê	Ê	 	
public
Ì	Ì	 
static
Ì	Ì	 
event
Ì	Ì	 
Func
Ì	Ì	  
<
Ì	Ì	  !
int
Ì	Ì	! $
,
Ì	Ì	$ %
string
Ì	Ì	& ,
,
Ì	Ì	, -
TMP_FontAsset
Ì	Ì	. ;
>
Ì	Ì	; < 
OnFontAssetRequest
Ì	Ì	= O
;
Ì	Ì	O P
public
Ú	Ú	 
static
Ú	Ú	 
event
Ú	Ú	 
Func
Ú	Ú	  
<
Ú	Ú	  !
int
Ú	Ú	! $
,
Ú	Ú	$ %
string
Ú	Ú	& ,
,
Ú	Ú	, -
TMP_SpriteAsset
Ú	Ú	. =
>
Ú	Ú	= >"
OnSpriteAssetRequest
Ú	Ú	? S
;
Ú	Ú	S T
public
˜	˜	 
virtual
˜	˜	 
event
˜	˜	 
Action
˜	˜	 #
<
˜	˜	# $
TMP_TextInfo
˜	˜	$ 0
>
˜	˜	0 1
OnPreRenderText
˜	˜	2 A
=
˜	˜	B C
delegate
˜	˜	D L
{
˜	˜	M N
}
˜	˜	O P
;
˜	˜	P Q
	protected
é
é
  
TMP_SpriteAnimator
é
é
 $
spriteAnimator
é
é
% 3
{
è
è
 	
get
ê
ê
 
{
ë
ë
 
if
í
í
 
(
í
í
 
m_spriteAnimator
í
í
 $
==
í
í
% '
null
í
í
( ,
)
í
í
, -
{
ì
ì
 
m_spriteAnimator
î
î
 $
=
î
î
% &
GetComponent
î
î
' 3
<
î
î
3 4 
TMP_SpriteAnimator
î
î
4 F
>
î
î
F G
(
î
î
G H
)
î
î
H I
;
î
î
I J
if
ï
ï
 
(
ï
ï
 
m_spriteAnimator
ï
ï
 (
==
ï
ï
) +
null
ï
ï
, 0
)
ï
ï
0 1
m_spriteAnimator
ï
ï
2 B
=
ï
ï
C D

gameObject
ï
ï
E O
.
ï
ï
O P
AddComponent
ï
ï
P \
<
ï
ï
\ ] 
TMP_SpriteAnimator
ï
ï
] o
>
ï
ï
o p
(
ï
ï
p q
)
ï
ï
q r
;
ï
ï
r s
}
ñ
ñ
 
return
ò
ò
 
m_spriteAnimator
ò
ò
 '
;
ò
ò
' (
}
ô
ô
 
}
õ
õ
 	
	protected
ù
ù
  
TMP_SpriteAnimator
ù
ù
 $
m_spriteAnimator
ù
ù
% 5
;
ù
ù
5 6
public
¥
¥
 
float
¥
¥
 
flexibleHeight
¥
¥
 #
{
¥
¥
$ %
get
¥
¥
& )
{
¥
¥
* +
return
¥
¥
, 2
m_flexibleHeight
¥
¥
3 C
;
¥
¥
C D
}
¥
¥
E F
}
¥
¥
G H
	protected
µ
µ
 
float
µ
µ
 
m_flexibleHeight
µ
µ
 (
=
µ
µ
) *
-
µ
µ
+ ,
$num
µ
µ
, .
;
µ
µ
. /
public
∫
∫
 
float
∫
∫
 
flexibleWidth
∫
∫
 "
{
∫
∫
# $
get
∫
∫
% (
{
∫
∫
) *
return
∫
∫
+ 1
m_flexibleWidth
∫
∫
2 A
;
∫
∫
A B
}
∫
∫
C D
}
∫
∫
E F
	protected
ª
ª
 
float
ª
ª
 
m_flexibleWidth
ª
ª
 '
=
ª
ª
( )
-
ª
ª
* +
$num
ª
ª
+ -
;
ª
ª
- .
public
¿
¿
 
float
¿
¿
 
minWidth
¿
¿
 
{
¿
¿
 
get
¿
¿
  #
{
¿
¿
$ %
return
¿
¿
& ,

m_minWidth
¿
¿
- 7
;
¿
¿
7 8
}
¿
¿
9 :
}
¿
¿
; <
	protected
¡
¡
 
float
¡
¡
 

m_minWidth
¡
¡
 "
;
¡
¡
" #
public
∆
∆
 
float
∆
∆
 
	minHeight
∆
∆
 
{
∆
∆
  
get
∆
∆
! $
{
∆
∆
% &
return
∆
∆
' -
m_minHeight
∆
∆
. 9
;
∆
∆
9 :
}
∆
∆
; <
}
∆
∆
= >
	protected
«
«
 
float
«
«
 
m_minHeight
«
«
 #
;
«
«
# $
public
Ã
Ã
 
float
Ã
Ã
 
maxWidth
Ã
Ã
 
{
Ã
Ã
 
get
Ã
Ã
  #
{
Ã
Ã
$ %
return
Ã
Ã
& ,

m_maxWidth
Ã
Ã
- 7
;
Ã
Ã
7 8
}
Ã
Ã
9 :
}
Ã
Ã
; <
	protected
Õ
Õ
 
float
Õ
Õ
 

m_maxWidth
Õ
Õ
 "
;
Õ
Õ
" #
public
“
“
 
float
“
“
 
	maxHeight
“
“
 
{
“
“
  
get
“
“
! $
{
“
“
% &
return
“
“
' -
m_maxHeight
“
“
. 9
;
“
“
9 :
}
“
“
; <
}
“
“
= >
	protected
”
”
 
float
”
”
 
m_maxHeight
”
”
 #
;
”
”
# $
	protected
ÿ
ÿ
 
LayoutElement
ÿ
ÿ
 
layoutElement
ÿ
ÿ
  -
{
Ÿ
Ÿ
 	
get
⁄
⁄
 
{
€
€
 
if
‹
‹
 
(
‹
‹
 
m_LayoutElement
‹
‹
 #
==
‹
‹
$ &
null
‹
‹
' +
)
‹
‹
+ ,
{
›
›
 
m_LayoutElement
ﬁ
ﬁ
 #
=
ﬁ
ﬁ
$ %
GetComponent
ﬁ
ﬁ
& 2
<
ﬁ
ﬁ
2 3
LayoutElement
ﬁ
ﬁ
3 @
>
ﬁ
ﬁ
@ A
(
ﬁ
ﬁ
A B
)
ﬁ
ﬁ
B C
;
ﬁ
ﬁ
C D
}
ﬂ
ﬂ
 
return
·
·
 
m_LayoutElement
·
·
 &
;
·
·
& '
}
‚
‚
 
}
„
„
 	
	protected
‰
‰
 
LayoutElement
‰
‰
 
m_LayoutElement
‰
‰
  /
;
‰
‰
/ 0
public
È
È
 
virtual
È
È
 
float
È
È
 
preferredWidth
È
È
 +
{
È
È
, -
get
È
È
. 1
{
È
È
2 3
m_preferredWidth
È
È
4 D
=
È
È
E F
GetPreferredWidth
È
È
G X
(
È
È
X Y
)
È
È
Y Z
;
È
È
Z [
return
È
È
\ b
m_preferredWidth
È
È
c s
;
È
È
s t
}
È
È
u v
}
È
È
w x
	protected
Í
Í
 
float
Í
Í
 
m_preferredWidth
Í
Í
 (
;
Í
Í
( )
	protected
Î
Î
 
float
Î
Î
 
m_renderedWidth
Î
Î
 '
;
Î
Î
' (
	protected
Ï
Ï
 
bool
Ï
Ï
 %
m_isPreferredWidthDirty
Ï
Ï
 .
;
Ï
Ï
. /
public
Ò
Ò
 
virtual
Ò
Ò
 
float
Ò
Ò
 
preferredHeight
Ò
Ò
 ,
{
Ò
Ò
- .
get
Ò
Ò
/ 2
{
Ò
Ò
3 4
m_preferredHeight
Ò
Ò
5 F
=
Ò
Ò
G H 
GetPreferredHeight
Ò
Ò
I [
(
Ò
Ò
[ \
)
Ò
Ò
\ ]
;
Ò
Ò
] ^
return
Ò
Ò
_ e
m_preferredHeight
Ò
Ò
f w
;
Ò
Ò
w x
}
Ò
Ò
y z
}
Ò
Ò
{ |
	protected
Ú
Ú
 
float
Ú
Ú
 
m_preferredHeight
Ú
Ú
 )
;
Ú
Ú
) *
	protected
Û
Û
 
float
Û
Û
 
m_renderedHeight
Û
Û
 (
;
Û
Û
( )
	protected
Ù
Ù
 
bool
Ù
Ù
 &
m_isPreferredHeightDirty
Ù
Ù
 /
;
Ù
Ù
/ 0
	protected
ˆ
ˆ
 
bool
ˆ
ˆ
 ,
m_isCalculatingPreferredValues
ˆ
ˆ
 5
;
ˆ
ˆ
5 6
public
¸
¸
 
virtual
¸
¸
 
float
¸
¸
 
renderedWidth
¸
¸
 *
{
¸
¸
+ ,
get
¸
¸
- 0
{
¸
¸
1 2
return
¸
¸
3 9
GetRenderedWidth
¸
¸
: J
(
¸
¸
J K
)
¸
¸
K L
;
¸
¸
L M
}
¸
¸
N O
}
¸
¸
P Q
public
ÇÇ 
virtual
ÇÇ 
float
ÇÇ 
renderedHeight
ÇÇ +
{
ÇÇ, -
get
ÇÇ. 1
{
ÇÇ2 3
return
ÇÇ4 :
GetRenderedHeight
ÇÇ; L
(
ÇÇL M
)
ÇÇM N
;
ÇÇN O
}
ÇÇP Q
}
ÇÇR S
public
àà 
int
àà 
layoutPriority
àà !
{
àà" #
get
àà$ '
{
àà( )
return
àà* 0
m_layoutPriority
àà1 A
;
ààA B
}
ààC D
}
ààE F
	protected
ââ 
int
ââ 
m_layoutPriority
ââ &
=
ââ' (
$num
ââ) *
;
ââ* +
	protected
ãã 
bool
ãã 
m_isLayoutDirty
ãã &
;
ãã& '
	protected
çç 
bool
çç 
	m_isAwake
çç  
;
çç  !
internal
éé 
bool
éé '
m_isWaitingOnResourceLoad
éé /
;
éé/ 0
internal
êê 
bool
êê &
m_isInputParsingRequired
êê .
=
êê/ 0
false
êê1 6
;
êê6 7
	protected
ôô 
struct
ôô #
CharacterSubstitution
ôô .
{
öö 	
public
õõ 
int
õõ 
index
õõ 
;
õõ 
public
úú 
uint
úú 
unicode
úú 
;
úú  
public
ûû #
CharacterSubstitution
ûû (
(
ûû) *
int
ûû* -
index
ûû. 3
,
ûû3 4
uint
ûû5 9
unicode
ûû: A
)
ûûA B
{
üü 
this
†† 
.
†† 
index
†† 
=
†† 
index
†† "
;
††" #
this
°° 
.
°° 
unicode
°° 
=
°° 
unicode
°° &
;
°°& '
}
¢¢ 
}
££ 	
internal
¶¶ 
enum
¶¶ 
TextInputSources
¶¶ &
{
¶¶' (
Text
¶¶) -
=
¶¶. /
$num
¶¶0 1
,
¶¶1 2
SetText
¶¶3 :
=
¶¶; <
$num
¶¶= >
,
¶¶> ?
SetCharArray
¶¶@ L
=
¶¶M N
$num
¶¶O P
,
¶¶P Q
String
¶¶R X
=
¶¶Y Z
$num
¶¶[ \
}
¶¶] ^
;
¶¶^ _
internal
®® 
TextInputSources
®® !
m_inputSource
®®" /
;
®®/ 0
	protected
™™ 
float
™™ 
m_fontScale
™™ #
;
™™# $
	protected
´´ 
float
´´ #
m_fontScaleMultiplier
´´ -
;
´´- .
	protected
≠≠ 
char
≠≠ 
[
≠≠ 
]
≠≠ 
	m_htmlTag
≠≠ "
=
≠≠# $
new
≠≠% (
char
≠≠) -
[
≠≠- .
$num
≠≠. 1
]
≠≠1 2
;
≠≠2 3
	protected
ÆÆ "
RichTextTagAttribute
ÆÆ &
[
ÆÆ& '
]
ÆÆ' (
m_xmlAttribute
ÆÆ) 7
=
ÆÆ8 9
new
ÆÆ: ="
RichTextTagAttribute
ÆÆ> R
[
ÆÆR S
$num
ÆÆS T
]
ÆÆT U
;
ÆÆU V
	protected
∞∞ 
float
∞∞ 
[
∞∞ 
]
∞∞ (
m_attributeParameterValues
∞∞ 4
=
∞∞5 6
new
∞∞7 :
float
∞∞; @
[
∞∞@ A
$num
∞∞A C
]
∞∞C D
;
∞∞D E
	protected
≤≤ 
float
≤≤ 
tag_LineIndent
≤≤ &
=
≤≤' (
$num
≤≤) *
;
≤≤* +
	protected
≥≥ 
float
≥≥ 

tag_Indent
≥≥ "
=
≥≥# $
$num
≥≥% &
;
≥≥& '
	protected
¥¥ %
TMP_TextProcessingStack
¥¥ )
<
¥¥) *
float
¥¥* /
>
¥¥/ 0
m_indentStack
¥¥1 >
=
¥¥? @
new
¥¥A D%
TMP_TextProcessingStack
¥¥E \
<
¥¥\ ]
float
¥¥] b
>
¥¥b c
(
¥¥c d
new
¥¥d g
float
¥¥h m
[
¥¥m n
$num
¥¥n p
]
¥¥p q
)
¥¥q r
;
¥¥r s
	protected
µµ 
bool
µµ 
tag_NoParsing
µµ $
;
µµ$ %
	protected
∏∏ 
bool
∏∏ 
m_isParsingText
∏∏ &
;
∏∏& '
	protected
ππ 
	Matrix4x4
ππ 

m_FXMatrix
ππ &
;
ππ& '
	protected
∫∫ 
bool
∫∫ 
m_isFXMatrixSet
∫∫ &
;
∫∫& '
	protected
øø 
UnicodeChar
øø 
[
øø 
]
øø %
m_InternalParsingBuffer
øø  7
=
øø8 9
new
øø: =
UnicodeChar
øø> I
[
øøI J
$num
øøJ K
]
øøK L
;
øøL M
	protected
ƒƒ 
int
ƒƒ )
m_InternalParsingBufferSize
ƒƒ 1
;
ƒƒ1 2
	protected
∆∆ 
struct
∆∆ 
UnicodeChar
∆∆ $
{
«« 	
public
»» 
int
»» 
unicode
»» 
;
»» 
public
…… 
int
…… 
stringIndex
…… "
;
……" #
public
   
int
   
length
   
;
   
}
ÀÀ 	
	protected
ÕÕ 
struct
ÕÕ 
SpecialCharacter
ÕÕ )
{
ŒŒ 	
public
œœ 
TMP_Character
œœ  
	character
œœ! *
;
œœ* +
public
–– 
TMP_FontAsset
––  
	fontAsset
––! *
;
––* +
public
—— 
Material
—— 
material
—— $
;
——$ %
public
““ 
int
““ 
materialIndex
““ $
;
““$ %
public
‘‘ 
SpecialCharacter
‘‘ #
(
‘‘# $
TMP_Character
‘‘$ 1
	character
‘‘2 ;
,
‘‘; <
int
‘‘= @
materialIndex
‘‘A N
)
‘‘N O
{
’’ 
this
÷÷ 
.
÷÷ 
	character
÷÷ 
=
÷÷  
	character
÷÷! *
;
÷÷* +
this
◊◊ 
.
◊◊ 
	fontAsset
◊◊ 
=
◊◊  
	character
◊◊! *
.
◊◊* +
	textAsset
◊◊+ 4
as
◊◊5 7
TMP_FontAsset
◊◊8 E
;
◊◊E F
this
ÿÿ 
.
ÿÿ 
material
ÿÿ 
=
ÿÿ 
this
ÿÿ  $
.
ÿÿ$ %
	fontAsset
ÿÿ% .
!=
ÿÿ/ 1
null
ÿÿ2 6
?
ÿÿ7 8
this
ÿÿ9 =
.
ÿÿ= >
	fontAsset
ÿÿ> G
.
ÿÿG H
material
ÿÿH P
:
ÿÿQ R
null
ÿÿS W
;
ÿÿW X
this
ŸŸ 
.
ŸŸ 
materialIndex
ŸŸ "
=
ŸŸ# $
materialIndex
ŸŸ% 2
;
ŸŸ2 3
}
⁄⁄ 
}
€€ 	
private
›› 
TMP_CharacterInfo
›› !
[
››! "
]
››" #%
m_internalCharacterInfo
››$ ;
;
››; <
	protected
ﬁﬁ 
char
ﬁﬁ 
[
ﬁﬁ 
]
ﬁﬁ 
m_input_CharArray
ﬁﬁ *
=
ﬁﬁ+ ,
new
ﬁﬁ- 0
char
ﬁﬁ1 5
[
ﬁﬁ5 6
$num
ﬁﬁ6 9
]
ﬁﬁ9 :
;
ﬁﬁ: ;
private
ﬂﬂ 
int
ﬂﬂ  
m_charArray_Length
ﬂﬂ &
=
ﬂﬂ' (
$num
ﬂﬂ) *
;
ﬂﬂ* +
	protected
‡‡ 
int
‡‡ #
m_totalCharacterCount
‡‡ +
;
‡‡+ ,
	protected
„„ 
WordWrapState
„„ "
m_SavedWordWrapState
„„  4
=
„„5 6
new
„„7 :
WordWrapState
„„; H
(
„„H I
)
„„I J
;
„„J K
	protected
‰‰ 
WordWrapState
‰‰ 
m_SavedLineState
‰‰  0
=
‰‰1 2
new
‰‰3 6
WordWrapState
‰‰7 D
(
‰‰D E
)
‰‰E F
;
‰‰F G
	protected
ÂÂ 
WordWrapState
ÂÂ "
m_SavedEllipsisState
ÂÂ  4
=
ÂÂ5 6
new
ÂÂ7 :
WordWrapState
ÂÂ; H
(
ÂÂH I
)
ÂÂI J
;
ÂÂJ K
	protected
ÊÊ 
WordWrapState
ÊÊ #
m_SavedLastValidState
ÊÊ  5
=
ÊÊ6 7
new
ÊÊ8 ;
WordWrapState
ÊÊ< I
(
ÊÊI J
)
ÊÊJ K
;
ÊÊK L
	protected
ÁÁ 
WordWrapState
ÁÁ '
m_SavedSoftLineBreakState
ÁÁ  9
=
ÁÁ: ;
new
ÁÁ< ?
WordWrapState
ÁÁ@ M
(
ÁÁM N
)
ÁÁN O
;
ÁÁO P
internal
ÍÍ %
TMP_TextProcessingStack
ÍÍ (
<
ÍÍ( )
WordWrapState
ÍÍ) 6
>
ÍÍ6 7/
!m_EllipsisInsertionCandidateStack
ÍÍ8 Y
=
ÍÍZ [
new
ÍÍ\ _%
TMP_TextProcessingStack
ÍÍ` w
<
ÍÍw x
WordWrapStateÍÍx Ö
>ÍÍÖ Ü
(ÍÍÜ á
$numÍÍá à
,ÍÍà â
$numÍÍä ã
)ÍÍã å
;ÍÍå ç
	protected
ÌÌ 
int
ÌÌ 
m_characterCount
ÌÌ &
;
ÌÌ& '
	protected
 
int
 $
m_firstCharacterOfLine
 ,
;
, -
	protected
ÒÒ 
int
ÒÒ +
m_firstVisibleCharacterOfLine
ÒÒ 3
;
ÒÒ3 4
	protected
ÚÚ 
int
ÚÚ #
m_lastCharacterOfLine
ÚÚ +
;
ÚÚ+ ,
	protected
ÛÛ 
int
ÛÛ *
m_lastVisibleCharacterOfLine
ÛÛ 2
;
ÛÛ2 3
	protected
ÙÙ 
int
ÙÙ 
m_lineNumber
ÙÙ "
;
ÙÙ" #
	protected
ıı 
int
ıı )
m_lineVisibleCharacterCount
ıı 1
;
ıı1 2
	protected
ˆˆ 
int
ˆˆ 
m_pageNumber
ˆˆ "
;
ˆˆ" #
	protected
˜˜ 
float
˜˜ 
m_PageAscender
˜˜ &
;
˜˜& '
	protected
¯¯ 
float
¯¯ 
m_maxTextAscender
¯¯ )
;
¯¯) *
	protected
˘˘ 
float
˘˘ 
m_maxCapHeight
˘˘ &
;
˘˘& '
	protected
˙˙ 
float
˙˙ 
m_ElementAscender
˙˙ )
;
˙˙) *
	protected
˚˚ 
float
˚˚  
m_ElementDescender
˚˚ *
;
˚˚* +
	protected
¸¸ 
float
¸¸ 
m_maxLineAscender
¸¸ )
;
¸¸) *
	protected
˝˝ 
float
˝˝  
m_maxLineDescender
˝˝ *
;
˝˝* +
	protected
˛˛ 
float
˛˛ #
m_startOfLineAscender
˛˛ -
;
˛˛- .
	protected
ˇˇ 
float
ˇˇ $
m_startOfLineDescender
ˇˇ .
;
ˇˇ. /
	protected
ÅÅ 
float
ÅÅ 
m_lineOffset
ÅÅ $
;
ÅÅ$ %
	protected
ÇÇ 
Extents
ÇÇ 
m_meshExtents
ÇÇ '
;
ÇÇ' (
	protected
ÜÜ 
Color32
ÜÜ 
m_htmlColor
ÜÜ %
=
ÜÜ& '
new
ÜÜ( +
Color
ÜÜ, 1
(
ÜÜ1 2
$num
ÜÜ2 5
,
ÜÜ5 6
$num
ÜÜ7 :
,
ÜÜ: ;
$num
ÜÜ< ?
,
ÜÜ? @
$num
ÜÜA D
)
ÜÜD E
;
ÜÜE F
	protected
áá %
TMP_TextProcessingStack
áá )
<
áá) *
Color32
áá* 1
>
áá1 2
m_colorStack
áá3 ?
=
áá@ A
new
ááB E%
TMP_TextProcessingStack
ááF ]
<
áá] ^
Color32
áá^ e
>
ááe f
(
ááf g
new
áág j
Color32
áák r
[
áár s
$num
áás u
]
ááu v
)
ááv w
;
ááw x
	protected
àà %
TMP_TextProcessingStack
àà )
<
àà) *
Color32
àà* 1
>
àà1 2#
m_underlineColorStack
àà3 H
=
ààI J
new
ààK N%
TMP_TextProcessingStack
ààO f
<
ààf g
Color32
ààg n
>
ààn o
(
àào p
new
ààp s
Color32
ààt {
[
àà{ |
$num
àà| ~
]
àà~ 
)àà Ä
;ààÄ Å
	protected
ââ %
TMP_TextProcessingStack
ââ )
<
ââ) *
Color32
ââ* 1
>
ââ1 2'
m_strikethroughColorStack
ââ3 L
=
ââM N
new
ââO R%
TMP_TextProcessingStack
ââS j
<
ââj k
Color32
ââk r
>
ââr s
(
ââs t
new
âât w
Color32
ââx 
[ââ Ä
$numââÄ Ç
]ââÇ É
)ââÉ Ñ
;ââÑ Ö
	protected
ää %
TMP_TextProcessingStack
ää )
<
ää) *
HighlightState
ää* 8
>
ää8 9#
m_HighlightStateStack
ää: O
=
ääP Q
new
ääR U%
TMP_TextProcessingStack
ääV m
<
ääm n
HighlightState
ään |
>
ää| }
(
ää} ~
newää~ Å
HighlightStateääÇ ê
[ääê ë
$numääë ì
]ääì î
)ääî ï
;ääï ñ
	protected
åå 
TMP_ColorGradient
åå ##
m_colorGradientPreset
åå$ 9
;
åå9 :
	protected
çç %
TMP_TextProcessingStack
çç )
<
çç) *
TMP_ColorGradient
çç* ;
>
çç; <"
m_colorGradientStack
çç= Q
=
ççR S
new
ççT W%
TMP_TextProcessingStack
ççX o
<
çço p 
TMP_ColorGradientççp Å
>ççÅ Ç
(ççÇ É
newççÉ Ü!
TMP_ColorGradientççá ò
[ççò ô
$numççô õ
]ççõ ú
)ççú ù
;ççù û
	protected
éé 
bool
éé +
m_colorGradientPresetIsTinted
éé 4
;
éé4 5
	protected
êê 
float
êê 
m_tabSpacing
êê $
=
êê% &
$num
êê' (
;
êê( )
	protected
ëë 
float
ëë 
	m_spacing
ëë !
=
ëë" #
$num
ëë$ %
;
ëë% &
	protected
îî %
TMP_TextProcessingStack
îî )
<
îî) *
int
îî* -
>
îî- .
[
îî. /
]
îî/ 0
m_TextStyleStacks
îî1 B
=
îîC D
new
îîE H%
TMP_TextProcessingStack
îîI `
<
îî` a
int
îîa d
>
îîd e
[
îîe f
$num
îîf g
]
îîg h
;
îîh i
	protected
ïï 
int
ïï #
m_TextStyleStackDepth
ïï +
=
ïï, -
$num
ïï. /
;
ïï/ 0
	protected
óó %
TMP_TextProcessingStack
óó )
<
óó) *
int
óó* -
>
óó- . 
m_ItalicAngleStack
óó/ A
=
óóB C
new
óóD G%
TMP_TextProcessingStack
óóH _
<
óó_ `
int
óó` c
>
óóc d
(
óód e
new
óóe h
int
óói l
[
óól m
$num
óóm o
]
óóo p
)
óóp q
;
óóq r
	protected
òò 
int
òò 
m_ItalicAngle
òò #
;
òò# $
	protected
öö %
TMP_TextProcessingStack
öö )
<
öö) *
int
öö* -
>
öö- .
m_actionStack
öö/ <
=
öö= >
new
öö? B%
TMP_TextProcessingStack
ööC Z
<
ööZ [
int
öö[ ^
>
öö^ _
(
öö_ `
new
öö` c
int
ööd g
[
öög h
$num
ööh j
]
ööj k
)
öök l
;
ööl m
	protected
úú 
float
úú 
	m_padding
úú !
=
úú" #
$num
úú$ %
;
úú% &
	protected
ùù 
float
ùù 
m_baselineOffset
ùù (
;
ùù( )
	protected
ûû %
TMP_TextProcessingStack
ûû )
<
ûû) *
float
ûû* /
>
ûû/ 0#
m_baselineOffsetStack
ûû1 F
=
ûûG H
new
ûûI L%
TMP_TextProcessingStack
ûûM d
<
ûûd e
float
ûûe j
>
ûûj k
(
ûûk l
new
ûûl o
float
ûûp u
[
ûûu v
$num
ûûv x
]
ûûx y
)
ûûy z
;
ûûz {
	protected
üü 
float
üü 

m_xAdvance
üü "
;
üü" #
	protected
°° !
TMP_TextElementType
°° %
m_textElementType
°°& 7
;
°°7 8
	protected
¢¢ 
TMP_TextElement
¢¢ !"
m_cached_TextElement
¢¢" 6
;
¢¢6 7
	protected
§§ 
SpecialCharacter
§§ "

m_Ellipsis
§§# -
;
§§- .
	protected
•• 
SpecialCharacter
•• "
m_Underline
••# .
;
••. /
	protected
ßß 
TMP_SpriteAsset
ßß !"
m_defaultSpriteAsset
ßß" 6
;
ßß6 7
	protected
®® 
TMP_SpriteAsset
®® !"
m_currentSpriteAsset
®®" 6
;
®®6 7
	protected
©© 
int
©© 
m_spriteCount
©© #
=
©©$ %
$num
©©& '
;
©©' (
	protected
™™ 
int
™™ 
m_spriteIndex
™™ #
;
™™# $
	protected
´´ 
int
´´ !
m_spriteAnimationID
´´ )
;
´´) *
	protected
±± 
virtual
±± 
void
±± 
LoadFontAsset
±± ,
(
±±, -
)
±±- .
{
±±/ 0
}
±±1 2
	protected
∑∑ 
virtual
∑∑ 
void
∑∑ 
SetSharedMaterial
∑∑ 0
(
∑∑0 1
Material
∑∑1 9
mat
∑∑: =
)
∑∑= >
{
∑∑? @
}
∑∑A B
	protected
ºº 
virtual
ºº 
Material
ºº "
GetMaterial
ºº# .
(
ºº. /
Material
ºº/ 7
mat
ºº8 ;
)
ºº; <
{
ºº= >
return
ºº? E
null
ººF J
;
ººJ K
}
ººL M
	protected
¬¬ 
virtual
¬¬ 
void
¬¬ !
SetFontBaseMaterial
¬¬ 2
(
¬¬2 3
Material
¬¬3 ;
mat
¬¬< ?
)
¬¬? @
{
¬¬A B
}
¬¬C D
	protected
»» 
virtual
»» 
Material
»» "
[
»»" #
]
»»# $ 
GetSharedMaterials
»»% 7
(
»»7 8
)
»»8 9
{
»»: ;
return
»»< B
null
»»C G
;
»»G H
}
»»I J
	protected
ÕÕ 
virtual
ÕÕ 
void
ÕÕ  
SetSharedMaterials
ÕÕ 1
(
ÕÕ1 2
Material
ÕÕ2 :
[
ÕÕ: ;
]
ÕÕ; <
	materials
ÕÕ= F
)
ÕÕF G
{
ÕÕH I
}
ÕÕJ K
	protected
”” 
virtual
”” 
Material
”” "
[
””" #
]
””# $
GetMaterials
””% 1
(
””1 2
Material
””2 :
[
””: ;
]
””; <
mats
””= A
)
””A B
{
””C D
return
””E K
null
””L P
;
””P Q
}
””R S
	protected
‡‡ 
virtual
‡‡ 
Material
‡‡ "$
CreateMaterialInstance
‡‡# 9
(
‡‡9 :
Material
‡‡: B
source
‡‡C I
)
‡‡I J
{
·· 	
Material
‚‚ 
mat
‚‚ 
=
‚‚ 
new
‚‚ 
Material
‚‚ '
(
‚‚' (
source
‚‚( .
)
‚‚. /
;
‚‚/ 0
mat
„„ 
.
„„ 
shaderKeywords
„„ 
=
„„  
source
„„! '
.
„„' (
shaderKeywords
„„( 6
;
„„6 7
mat
‰‰ 
.
‰‰ 
name
‰‰ 
+=
‰‰ 
$str
‰‰ %
;
‰‰% &
return
ÊÊ 
mat
ÊÊ 
;
ÊÊ 
}
ÁÁ 	
	protected
ÈÈ 
void
ÈÈ $
SetVertexColorGradient
ÈÈ -
(
ÈÈ- .
TMP_ColorGradient
ÈÈ. ?
gradient
ÈÈ@ H
)
ÈÈH I
{
ÍÍ 	
if
ÎÎ 
(
ÎÎ 
gradient
ÎÎ 
==
ÎÎ 
null
ÎÎ  
)
ÎÎ  !
return
ÎÎ" (
;
ÎÎ( )!
m_fontColorGradient
ÌÌ 
.
ÌÌ  

bottomLeft
ÌÌ  *
=
ÌÌ+ ,
gradient
ÌÌ- 5
.
ÌÌ5 6

bottomLeft
ÌÌ6 @
;
ÌÌ@ A!
m_fontColorGradient
ÓÓ 
.
ÓÓ  
bottomRight
ÓÓ  +
=
ÓÓ, -
gradient
ÓÓ. 6
.
ÓÓ6 7
bottomRight
ÓÓ7 B
;
ÓÓB C!
m_fontColorGradient
ÔÔ 
.
ÔÔ  
topLeft
ÔÔ  '
=
ÔÔ( )
gradient
ÔÔ* 2
.
ÔÔ2 3
topLeft
ÔÔ3 :
;
ÔÔ: ;!
m_fontColorGradient
 
.
  
topRight
  (
=
) *
gradient
+ 3
.
3 4
topRight
4 <
;
< =
SetVerticesDirty
ÚÚ 
(
ÚÚ 
)
ÚÚ 
;
ÚÚ 
}
ÛÛ 	
	protected
¯¯ 
void
¯¯ !
SetTextSortingOrder
¯¯ *
(
¯¯* + 
VertexSortingOrder
¯¯+ =
order
¯¯> C
)
¯¯C D
{
˘˘ 	
}
˚˚ 	
	protected
ÅÅ 
void
ÅÅ !
SetTextSortingOrder
ÅÅ *
(
ÅÅ* +
int
ÅÅ+ .
[
ÅÅ. /
]
ÅÅ/ 0
order
ÅÅ1 6
)
ÅÅ6 7
{
ÇÇ 	
}
ÑÑ 	
	protected
ää 
virtual
ää 
void
ää 
SetFaceColor
ää +
(
ää+ ,
Color32
ää, 3
color
ää4 9
)
ää9 :
{
ää; <
}
ää= >
	protected
êê 
virtual
êê 
void
êê 
SetOutlineColor
êê .
(
êê. /
Color32
êê/ 6
color
êê7 <
)
êê< =
{
êê> ?
}
êê@ A
	protected
ññ 
virtual
ññ 
void
ññ !
SetOutlineThickness
ññ 2
(
ññ2 3
float
ññ3 8
	thickness
ññ9 B
)
ññB C
{
ññD E
}
ññF G
	protected
õõ 
virtual
õõ 
void
õõ 
SetShaderDepth
õõ -
(
õõ- .
)
õõ. /
{
õõ0 1
}
õõ2 3
	protected
†† 
virtual
†† 
void
†† 

SetCulling
†† )
(
††) *
)
††* +
{
††, -
}
††. /
internal
•• 
virtual
•• 
void
•• 
UpdateCulling
•• +
(
••+ ,
)
••, -
{
••. /
}
••/ 0
	protected
´´ 
virtual
´´ 
float
´´ #
GetPaddingForMaterial
´´  5
(
´´5 6
)
´´6 7
{
¨¨ 	
ShaderUtilities
≠≠ 
.
≠≠ "
GetShaderPropertyIDs
≠≠ 0
(
≠≠0 1
)
≠≠1 2
;
≠≠2 3
if
ØØ 
(
ØØ 
m_sharedMaterial
ØØ  
==
ØØ! #
null
ØØ$ (
)
ØØ( )
return
ØØ* 0
$num
ØØ1 2
;
ØØ2 3
	m_padding
±± 
=
±± 
ShaderUtilities
±± '
.
±±' (

GetPadding
±±( 2
(
±±2 3
m_sharedMaterial
±±3 C
,
±±C D"
m_enableExtraPadding
±±E Y
,
±±Y Z
m_isUsingBold
±±[ h
)
±±h i
;
±±i j 
m_isMaskingEnabled
≤≤ 
=
≤≤  
ShaderUtilities
≤≤! 0
.
≤≤0 1
IsMaskingEnabled
≤≤1 A
(
≤≤A B
m_sharedMaterial
≤≤B R
)
≤≤R S
;
≤≤S T
m_isSDFShader
≥≥ 
=
≥≥ 
m_sharedMaterial
≥≥ ,
.
≥≥, -
HasProperty
≥≥- 8
(
≥≥8 9
ShaderUtilities
≥≥9 H
.
≥≥H I
ID_WeightNormal
≥≥I X
)
≥≥X Y
;
≥≥Y Z
return
µµ 
	m_padding
µµ 
;
µµ 
}
∂∂ 	
	protected
ΩΩ 
virtual
ΩΩ 
float
ΩΩ #
GetPaddingForMaterial
ΩΩ  5
(
ΩΩ5 6
Material
ΩΩ6 >
mat
ΩΩ? B
)
ΩΩB C
{
ææ 	
if
øø 
(
øø 
mat
øø 
==
øø 
null
øø 
)
øø 
return
¿¿ 
$num
¿¿ 
;
¿¿ 
	m_padding
¬¬ 
=
¬¬ 
ShaderUtilities
¬¬ '
.
¬¬' (

GetPadding
¬¬( 2
(
¬¬2 3
mat
¬¬3 6
,
¬¬6 7"
m_enableExtraPadding
¬¬8 L
,
¬¬L M
m_isUsingBold
¬¬N [
)
¬¬[ \
;
¬¬\ ] 
m_isMaskingEnabled
√√ 
=
√√  
ShaderUtilities
√√! 0
.
√√0 1
IsMaskingEnabled
√√1 A
(
√√A B
m_sharedMaterial
√√B R
)
√√R S
;
√√S T
m_isSDFShader
ƒƒ 
=
ƒƒ 
mat
ƒƒ 
.
ƒƒ  
HasProperty
ƒƒ  +
(
ƒƒ+ ,
ShaderUtilities
ƒƒ, ;
.
ƒƒ; <
ID_WeightNormal
ƒƒ< K
)
ƒƒK L
;
ƒƒL M
return
∆∆ 
	m_padding
∆∆ 
;
∆∆ 
}
«« 	
	protected
ŒŒ 
virtual
ŒŒ 
Vector3
ŒŒ !
[
ŒŒ! "
]
ŒŒ" #*
GetTextContainerLocalCorners
ŒŒ$ @
(
ŒŒ@ A
)
ŒŒA B
{
ŒŒC D
return
ŒŒE K
null
ŒŒL P
;
ŒŒP Q
}
ŒŒR S
	protected
““ 
bool
““ !
m_ignoreActiveState
““ *
;
““* +
public
ÿÿ 
virtual
ÿÿ 
void
ÿÿ 
ForceMeshUpdate
ÿÿ +
(
ÿÿ+ ,
bool
ÿÿ, 0
ignoreActiveState
ÿÿ1 B
=
ÿÿC D
false
ÿÿE J
,
ÿÿJ K
bool
ÿÿL P 
forceTextReparsing
ÿÿQ c
=
ÿÿd e
false
ÿÿf k
)
ÿÿk l
{
ÿÿm n
}
ÿÿo p
internal
ÂÂ 
void
ÂÂ 
SetTextInternal
ÂÂ %
(
ÂÂ% &
string
ÂÂ& ,
text
ÂÂ- 1
)
ÂÂ1 2
{
ÊÊ 	
m_text
ÁÁ 
=
ÁÁ 
text
ÁÁ 
;
ÁÁ 
m_renderMode
ËË 
=
ËË 
TextRenderFlags
ËË *
.
ËË* +

DontRender
ËË+ 5
;
ËË5 6&
m_isInputParsingRequired
ÈÈ $
=
ÈÈ% &
true
ÈÈ' +
;
ÈÈ+ ,
ForceMeshUpdate
ÍÍ 
(
ÍÍ 
)
ÍÍ 
;
ÍÍ 
m_renderMode
ÎÎ 
=
ÎÎ 
TextRenderFlags
ÎÎ *
.
ÎÎ* +
Render
ÎÎ+ 1
;
ÎÎ1 2
}
ÏÏ 	
public
˙˙ 
virtual
˙˙ 
void
˙˙ 
UpdateGeometry
˙˙ *
(
˙˙* +
Mesh
˙˙+ /
mesh
˙˙0 4
,
˙˙4 5
int
˙˙6 9
index
˙˙: ?
)
˙˙? @
{
˙˙A B
}
˙˙C D
public
ÄÄ 
virtual
ÄÄ 
void
ÄÄ 
UpdateVertexData
ÄÄ ,
(
ÄÄ, -'
TMP_VertexDataUpdateFlags
ÄÄ- F
flags
ÄÄG L
)
ÄÄL M
{
ÄÄN O
}
ÄÄP Q
public
ÜÜ 
virtual
ÜÜ 
void
ÜÜ 
UpdateVertexData
ÜÜ ,
(
ÜÜ, -
)
ÜÜ- .
{
ÜÜ/ 0
}
ÜÜ1 2
public
çç 
virtual
çç 
void
çç 
SetVertices
çç '
(
çç' (
Vector3
çç( /
[
çç/ 0
]
çç0 1
vertices
çç2 :
)
çç: ;
{
çç< =
}
çç> ?
public
ìì 
virtual
ìì 
void
ìì 
UpdateMeshPadding
ìì -
(
ìì- .
)
ìì. /
{
ìì0 1
}
ìì2 3
public
££ 
override
££ 
void
££ 
CrossFadeColor
££ +
(
££+ ,
Color
££, 1
targetColor
££2 =
,
££= >
float
££? D
duration
££E M
,
££M N
bool
££O S
ignoreTimeScale
££T c
,
££c d
bool
££e i
useAlpha
££j r
)
££r s
{
§§ 	
base
•• 
.
•• 
CrossFadeColor
•• 
(
••  
targetColor
••  +
,
••+ ,
duration
••- 5
,
••5 6
ignoreTimeScale
••7 F
,
••F G
useAlpha
••H P
)
••P Q
;
••Q R$
InternalCrossFadeColor
¶¶ "
(
¶¶" #
targetColor
¶¶# .
,
¶¶. /
duration
¶¶0 8
,
¶¶8 9
ignoreTimeScale
¶¶: I
,
¶¶I J
useAlpha
¶¶K S
)
¶¶S T
;
¶¶T U
}
ßß 	
public
∞∞ 
override
∞∞ 
void
∞∞ 
CrossFadeAlpha
∞∞ +
(
∞∞+ ,
float
∞∞, 1
alpha
∞∞2 7
,
∞∞7 8
float
∞∞9 >
duration
∞∞? G
,
∞∞G H
bool
∞∞I M
ignoreTimeScale
∞∞N ]
)
∞∞] ^
{
±± 	
base
≤≤ 
.
≤≤ 
CrossFadeAlpha
≤≤ 
(
≤≤  
alpha
≤≤  %
,
≤≤% &
duration
≤≤' /
,
≤≤/ 0
ignoreTimeScale
≤≤1 @
)
≤≤@ A
;
≤≤A B$
InternalCrossFadeAlpha
≥≥ "
(
≥≥" #
alpha
≥≥# (
,
≥≥( )
duration
≥≥* 2
,
≥≥2 3
ignoreTimeScale
≥≥4 C
)
≥≥C D
;
≥≥D E
}
¥¥ 	
	protected
øø 
virtual
øø 
void
øø $
InternalCrossFadeColor
øø 5
(
øø5 6
Color
øø6 ;
targetColor
øø< G
,
øøG H
float
øøI N
duration
øøO W
,
øøW X
bool
øøY ]
ignoreTimeScale
øø^ m
,
øøm n
bool
øøo s
useAlpha
øøt |
)
øø| }
{
øø~ 
}øøÄ Å
	protected
»» 
virtual
»» 
void
»» $
InternalCrossFadeAlpha
»» 5
(
»»5 6
float
»»6 ;
alpha
»»< A
,
»»A B
float
»»C H
duration
»»I Q
,
»»Q R
bool
»»S W
ignoreTimeScale
»»X g
)
»»g h
{
»»i j
}
»»k l
	protected
ŒŒ 
void
ŒŒ 
ParseInputText
ŒŒ %
(
ŒŒ% &
)
ŒŒ& '
{
œœ 	&
m_isInputParsingRequired
”” $
=
””% &
false
””' ,
;
””, -
switch
’’ 
(
’’ 
m_inputSource
’’ !
)
’’! "
{
÷÷ 
case
◊◊ 
TextInputSources
◊◊ %
.
◊◊% &
String
◊◊& ,
:
◊◊, -
case
ÿÿ 
TextInputSources
ÿÿ %
.
ÿÿ% &
Text
ÿÿ& *
:
ÿÿ* +
if
ŸŸ 
(
ŸŸ  
m_TextPreprocessor
ŸŸ *
!=
ŸŸ+ -
null
ŸŸ. 2
)
ŸŸ2 3)
m_InternalParsingBufferSize
⁄⁄ 3
=
⁄⁄4 5+
StringToInternalParsingBuffer
⁄⁄6 S
(
⁄⁄S T 
m_TextPreprocessor
⁄⁄T f
.
⁄⁄f g
PreprocessText
⁄⁄g u
(
⁄⁄u v
m_text
⁄⁄v |
)
⁄⁄| }
,
⁄⁄} ~
ref⁄⁄ Ç'
m_InternalParsingBuffer⁄⁄É ö
)⁄⁄ö õ
;⁄⁄õ ú
else
€€ )
m_InternalParsingBufferSize
‹‹ 3
=
‹‹4 5+
StringToInternalParsingBuffer
‹‹6 S
(
‹‹S T
m_text
‹‹T Z
,
‹‹Z [
ref
‹‹\ _%
m_InternalParsingBuffer
‹‹` w
)
‹‹w x
;
‹‹x y
break
›› 
;
›› 
case
ﬁﬁ 
TextInputSources
ﬁﬁ %
.
ﬁﬁ% &
SetText
ﬁﬁ& -
:
ﬁﬁ- .)
m_InternalParsingBufferSize
ﬂﬂ /
=
ﬂﬂ0 1.
 CharArrayToInternalParsingBuffer
ﬂﬂ2 R
(
ﬂﬂR S
m_input_CharArray
ﬂﬂS d
,
ﬂﬂd e
ref
ﬂﬂf i&
m_InternalParsingBufferﬂﬂj Å
)ﬂﬂÅ Ç
;ﬂﬂÇ É
break
‡‡ 
;
‡‡ 
case
·· 
TextInputSources
·· %
.
··% &
SetCharArray
··& 2
:
··2 3
break
‚‚ 
;
‚‚ 
}
„„ 
SetArraySizes
ÂÂ 
(
ÂÂ %
m_InternalParsingBuffer
ÂÂ 1
)
ÂÂ1 2
;
ÂÂ2 3
}
ÁÁ 	
public
ÓÓ 
void
ÓÓ 
SetText
ÓÓ 
(
ÓÓ 
string
ÓÓ "
text
ÓÓ# '
,
ÓÓ' (
bool
ÓÓ) -
syncTextInputBox
ÓÓ. >
=
ÓÓ? @
true
ÓÓA E
)
ÓÓE F
{
ÔÔ 	
this
 
.
 
text
 
=
 
text
 
;
 
}
ÒÒ 	
public
˚˚ 
void
˚˚ 
SetText
˚˚ 
(
˚˚ 
string
˚˚ "
text
˚˚# '
,
˚˚' (
float
˚˚) .
arg0
˚˚/ 3
)
˚˚3 4
{
¸¸ 	
SetText
˝˝ 
(
˝˝ 
text
˝˝ 
,
˝˝ 
arg0
˝˝ 
,
˝˝ 
$num
˝˝  !
,
˝˝! "
$num
˝˝# $
,
˝˝$ %
$num
˝˝& '
,
˝˝' (
$num
˝˝) *
,
˝˝* +
$num
˝˝, -
,
˝˝- .
$num
˝˝/ 0
,
˝˝0 1
$num
˝˝2 3
)
˝˝3 4
;
˝˝4 5
}
˛˛ 	
public
àà 
void
àà 
SetText
àà 
(
àà 
string
àà "
text
àà# '
,
àà' (
float
àà) .
arg0
àà/ 3
,
àà3 4
float
àà5 :
arg1
àà; ?
)
àà? @
{
ââ 	
SetText
ää 
(
ää 
text
ää 
,
ää 
arg0
ää 
,
ää 
arg1
ää  $
,
ää$ %
$num
ää& '
,
ää' (
$num
ää) *
,
ää* +
$num
ää, -
,
ää- .
$num
ää/ 0
,
ää0 1
$num
ää2 3
,
ää3 4
$num
ää5 6
)
ää6 7
;
ää7 8
}
ãã 	
public
ññ 
void
ññ 
SetText
ññ 
(
ññ 
string
ññ "
text
ññ# '
,
ññ' (
float
ññ) .
arg0
ññ/ 3
,
ññ3 4
float
ññ5 :
arg1
ññ; ?
,
ññ? @
float
ññA F
arg2
ññG K
)
ññK L
{
óó 	
SetText
òò 
(
òò 
text
òò 
,
òò 
arg0
òò 
,
òò 
arg1
òò  $
,
òò$ %
arg2
òò& *
,
òò* +
$num
òò, -
,
òò- .
$num
òò/ 0
,
òò0 1
$num
òò2 3
,
òò3 4
$num
òò5 6
,
òò6 7
$num
òò8 9
)
òò9 :
;
òò: ;
}
ôô 	
public
•• 
void
•• 
SetText
•• 
(
•• 
string
•• "
text
••# '
,
••' (
float
••) .
arg0
••/ 3
,
••3 4
float
••5 :
arg1
••; ?
,
••? @
float
••A F
arg2
••G K
,
••K L
float
••M R
arg3
••S W
)
••W X
{
¶¶ 	
SetText
ßß 
(
ßß 
text
ßß 
,
ßß 
arg0
ßß 
,
ßß 
arg1
ßß  $
,
ßß$ %
arg2
ßß& *
,
ßß* +
arg3
ßß, 0
,
ßß0 1
$num
ßß2 3
,
ßß3 4
$num
ßß5 6
,
ßß6 7
$num
ßß8 9
,
ßß9 :
$num
ßß; <
)
ßß< =
;
ßß= >
}
®® 	
public
µµ 
void
µµ 
SetText
µµ 
(
µµ 
string
µµ "
text
µµ# '
,
µµ' (
float
µµ) .
arg0
µµ/ 3
,
µµ3 4
float
µµ5 :
arg1
µµ; ?
,
µµ? @
float
µµA F
arg2
µµG K
,
µµK L
float
µµM R
arg3
µµS W
,
µµW X
float
µµY ^
arg4
µµ_ c
)
µµc d
{
∂∂ 	
SetText
∑∑ 
(
∑∑ 
text
∑∑ 
,
∑∑ 
arg0
∑∑ 
,
∑∑ 
arg1
∑∑  $
,
∑∑$ %
arg2
∑∑& *
,
∑∑* +
arg3
∑∑, 0
,
∑∑0 1
arg4
∑∑2 6
,
∑∑6 7
$num
∑∑8 9
,
∑∑9 :
$num
∑∑; <
,
∑∑< =
$num
∑∑> ?
)
∑∑? @
;
∑∑@ A
}
∏∏ 	
public
∆∆ 
void
∆∆ 
SetText
∆∆ 
(
∆∆ 
string
∆∆ "
text
∆∆# '
,
∆∆' (
float
∆∆) .
arg0
∆∆/ 3
,
∆∆3 4
float
∆∆5 :
arg1
∆∆; ?
,
∆∆? @
float
∆∆A F
arg2
∆∆G K
,
∆∆K L
float
∆∆M R
arg3
∆∆S W
,
∆∆W X
float
∆∆Y ^
arg4
∆∆_ c
,
∆∆c d
float
∆∆e j
arg5
∆∆k o
)
∆∆o p
{
«« 	
SetText
»» 
(
»» 
text
»» 
,
»» 
arg0
»» 
,
»» 
arg1
»»  $
,
»»$ %
arg2
»»& *
,
»»* +
arg3
»», 0
,
»»0 1
arg4
»»2 6
,
»»6 7
arg5
»»8 <
,
»»< =
$num
»»> ?
,
»»? @
$num
»»A B
)
»»B C
;
»»C D
}
…… 	
public
ÿÿ 
void
ÿÿ 
SetText
ÿÿ 
(
ÿÿ 
string
ÿÿ "
text
ÿÿ# '
,
ÿÿ' (
float
ÿÿ) .
arg0
ÿÿ/ 3
,
ÿÿ3 4
float
ÿÿ5 :
arg1
ÿÿ; ?
,
ÿÿ? @
float
ÿÿA F
arg2
ÿÿG K
,
ÿÿK L
float
ÿÿM R
arg3
ÿÿS W
,
ÿÿW X
float
ÿÿY ^
arg4
ÿÿ_ c
,
ÿÿc d
float
ÿÿe j
arg5
ÿÿk o
,
ÿÿo p
float
ÿÿq v
arg6
ÿÿw {
)
ÿÿ{ |
{
ŸŸ 	
SetText
⁄⁄ 
(
⁄⁄ 
text
⁄⁄ 
,
⁄⁄ 
arg0
⁄⁄ 
,
⁄⁄ 
arg1
⁄⁄  $
,
⁄⁄$ %
arg2
⁄⁄& *
,
⁄⁄* +
arg3
⁄⁄, 0
,
⁄⁄0 1
arg4
⁄⁄2 6
,
⁄⁄6 7
arg5
⁄⁄8 <
,
⁄⁄< =
arg6
⁄⁄> B
,
⁄⁄B C
$num
⁄⁄D E
)
⁄⁄E F
;
⁄⁄F G
}
€€ 	
public
ÎÎ 
void
ÎÎ 
SetText
ÎÎ 
(
ÎÎ 
string
ÎÎ "
text
ÎÎ# '
,
ÎÎ' (
float
ÎÎ) .
arg0
ÎÎ/ 3
,
ÎÎ3 4
float
ÎÎ5 :
arg1
ÎÎ; ?
,
ÎÎ? @
float
ÎÎA F
arg2
ÎÎG K
,
ÎÎK L
float
ÎÎM R
arg3
ÎÎS W
,
ÎÎW X
float
ÎÎY ^
arg4
ÎÎ_ c
,
ÎÎc d
float
ÎÎe j
arg5
ÎÎk o
,
ÎÎo p
float
ÎÎq v
arg6
ÎÎw {
,
ÎÎ{ |
floatÎÎ} Ç
arg7ÎÎÉ á
)ÎÎá à
{
ÏÏ 	
int
ÌÌ 
argIndex
ÌÌ 
=
ÌÌ 
$num
ÌÌ 
;
ÌÌ 
int
ÓÓ 
padding
ÓÓ 
=
ÓÓ 
$num
ÓÓ 
;
ÓÓ 
int
ÔÔ 
decimalPrecision
ÔÔ  
=
ÔÔ! "
$num
ÔÔ# $
;
ÔÔ$ %
int
ÒÒ 
readFlag
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
;
ÒÒ 
int
ÛÛ 
	readIndex
ÛÛ 
=
ÛÛ 
$num
ÛÛ 
;
ÛÛ 
int
ÙÙ 

writeIndex
ÙÙ 
=
ÙÙ 
$num
ÙÙ 
;
ÙÙ 
for
ˆˆ 
(
ˆˆ 
;
ˆˆ 
	readIndex
ˆˆ 
<
ˆˆ 
text
ˆˆ #
.
ˆˆ# $
Length
ˆˆ$ *
;
ˆˆ* +
	readIndex
ˆˆ, 5
++
ˆˆ5 7
)
ˆˆ7 8
{
˜˜ 
char
¯¯ 
c
¯¯ 
=
¯¯ 
text
¯¯ 
[
¯¯ 
	readIndex
¯¯ '
]
¯¯' (
;
¯¯( )
if
˙˙ 
(
˙˙ 
c
˙˙ 
==
˙˙ 
$char
˙˙ 
)
˙˙ 
{
˚˚ 
readFlag
¸¸ 
=
¸¸ 
$num
¸¸  
;
¸¸  !
continue
˝˝ 
;
˝˝ 
}
˛˛ 
if
ÄÄ 
(
ÄÄ 
c
ÄÄ 
==
ÄÄ 
$char
ÄÄ 
)
ÄÄ 
{
ÅÅ 
switch
ÉÉ 
(
ÉÉ 
argIndex
ÉÉ $
)
ÉÉ$ %
{
ÑÑ 
case
ÖÖ 
$num
ÖÖ 
:
ÖÖ !
AddFloatToCharArray
ÜÜ /
(
ÜÜ/ 0
arg0
ÜÜ0 4
,
ÜÜ4 5
padding
ÜÜ6 =
,
ÜÜ= >
decimalPrecision
ÜÜ? O
,
ÜÜO P
ref
ÜÜQ T

writeIndex
ÜÜU _
)
ÜÜ_ `
;
ÜÜ` a
break
áá !
;
áá! "
case
àà 
$num
àà 
:
àà !
AddFloatToCharArray
ââ /
(
ââ/ 0
arg1
ââ0 4
,
ââ4 5
padding
ââ6 =
,
ââ= >
decimalPrecision
ââ? O
,
ââO P
ref
ââQ T

writeIndex
ââU _
)
ââ_ `
;
ââ` a
break
ää !
;
ää! "
case
ãã 
$num
ãã 
:
ãã !
AddFloatToCharArray
åå /
(
åå/ 0
arg2
åå0 4
,
åå4 5
padding
åå6 =
,
åå= >
decimalPrecision
åå? O
,
ååO P
ref
ååQ T

writeIndex
ååU _
)
åå_ `
;
åå` a
break
çç !
;
çç! "
case
éé 
$num
éé 
:
éé !
AddFloatToCharArray
èè /
(
èè/ 0
arg3
èè0 4
,
èè4 5
padding
èè6 =
,
èè= >
decimalPrecision
èè? O
,
èèO P
ref
èèQ T

writeIndex
èèU _
)
èè_ `
;
èè` a
break
êê !
;
êê! "
case
ëë 
$num
ëë 
:
ëë !
AddFloatToCharArray
íí /
(
íí/ 0
arg4
íí0 4
,
íí4 5
padding
íí6 =
,
íí= >
decimalPrecision
íí? O
,
ííO P
ref
ííQ T

writeIndex
ííU _
)
íí_ `
;
íí` a
break
ìì !
;
ìì! "
case
îî 
$num
îî 
:
îî !
AddFloatToCharArray
ïï /
(
ïï/ 0
arg5
ïï0 4
,
ïï4 5
padding
ïï6 =
,
ïï= >
decimalPrecision
ïï? O
,
ïïO P
ref
ïïQ T

writeIndex
ïïU _
)
ïï_ `
;
ïï` a
break
ññ !
;
ññ! "
case
óó 
$num
óó 
:
óó !
AddFloatToCharArray
òò /
(
òò/ 0
arg6
òò0 4
,
òò4 5
padding
òò6 =
,
òò= >
decimalPrecision
òò? O
,
òòO P
ref
òòQ T

writeIndex
òòU _
)
òò_ `
;
òò` a
break
ôô !
;
ôô! "
case
öö 
$num
öö 
:
öö !
AddFloatToCharArray
õõ /
(
õõ/ 0
arg7
õõ0 4
,
õõ4 5
padding
õõ6 =
,
õõ= >
decimalPrecision
õõ? O
,
õõO P
ref
õõQ T

writeIndex
õõU _
)
õõ_ `
;
õõ` a
break
úú !
;
úú! "
}
ùù 
argIndex
üü 
=
üü 
$num
üü  
;
üü  !
readFlag
†† 
=
†† 
$num
††  
;
††  !
padding
°° 
=
°° 
$num
°° 
;
°°  
decimalPrecision
¢¢ $
=
¢¢% &
$num
¢¢' (
;
¢¢( )
continue
££ 
;
££ 
}
§§ 
if
ßß 
(
ßß 
readFlag
ßß 
==
ßß 
$num
ßß  !
)
ßß! "
{
®® 
if
©© 
(
©© 
c
©© 
>=
©© 
$char
©©  
&&
©©! #
c
©©$ %
<=
©©& (
$char
©©) ,
)
©©, -
{
™™ 
argIndex
´´  
=
´´! "
c
´´# $
-
´´% &
$num
´´' )
;
´´) *
readFlag
¨¨  
=
¨¨! "
$num
¨¨# $
;
¨¨$ %
continue
≠≠  
;
≠≠  !
}
ÆÆ 
}
ØØ 
if
≤≤ 
(
≤≤ 
readFlag
≤≤ 
==
≤≤ 
$num
≤≤  !
)
≤≤! "
{
≥≥ 
if
µµ 
(
µµ 
c
µµ 
==
µµ 
$char
µµ  
)
µµ  !
continue
∂∂  
;
∂∂  !
if
ππ 
(
ππ 
c
ππ 
==
ππ 
$char
ππ  
)
ππ  !
{
∫∫ 
readFlag
ªª  
=
ªª! "
$num
ªª# $
;
ªª$ %
continue
ºº  
;
ºº  !
}
ΩΩ 
if
øø 
(
øø 
c
øø 
==
øø 
$char
øø  
)
øø  !
{
¿¿ 
continue
¬¬  
;
¬¬  !
}
√√ 
if
≈≈ 
(
≈≈ 
c
≈≈ 
==
≈≈ 
$char
≈≈  
)
≈≈  !
{
∆∆ 
padding
«« 
+=
««  "
$num
««# $
;
««$ %
continue
»»  
;
»»  !
}
…… 
if
ÀÀ 
(
ÀÀ 
c
ÀÀ 
==
ÀÀ 
$char
ÀÀ  
)
ÀÀ  !
{
ÃÃ 
continue
ŒŒ  
;
ŒŒ  !
}
œœ 
if
““ 
(
““ 
c
““ 
>=
““ 
$char
““  
&&
““! #
c
““$ %
<=
““& (
$char
““) ,
)
““, -
{
”” 
decimalPrecision
‘‘ (
=
‘‘) *
c
‘‘+ ,
-
‘‘- .
$num
‘‘/ 1
;
‘‘1 2
continue
’’  
;
’’  !
}
÷÷ 
}
◊◊ 
if
⁄⁄ 
(
⁄⁄ 
readFlag
⁄⁄ 
==
⁄⁄ 
$num
⁄⁄  !
)
⁄⁄! "
{
€€ 
if
‹‹ 
(
‹‹ 
c
‹‹ 
==
‹‹ 
$char
‹‹  
)
‹‹  !
{
›› 
decimalPrecision
ﬁﬁ (
+=
ﬁﬁ) +
$num
ﬁﬁ, -
;
ﬁﬁ- .
continue
ﬂﬂ  
;
ﬂﬂ  !
}
‡‡ 
}
·· 
m_input_CharArray
‰‰ !
[
‰‰! "

writeIndex
‰‰" ,
]
‰‰, -
=
‰‰. /
c
‰‰0 1
;
‰‰1 2

writeIndex
ÂÂ 
+=
ÂÂ 
$num
ÂÂ 
;
ÂÂ  
}
ÊÊ 
m_input_CharArray
ËË 
[
ËË 

writeIndex
ËË (
]
ËË( )
=
ËË* +
(
ËË, -
char
ËË- 1
)
ËË1 2
$num
ËË2 3
;
ËË3 4 
m_charArray_Length
ÈÈ 
=
ÈÈ  

writeIndex
ÈÈ! +
;
ÈÈ+ ,
m_text
ÌÌ 
=
ÌÌ 
new
ÌÌ 
string
ÌÌ 
(
ÌÌ  
m_input_CharArray
ÌÌ  1
,
ÌÌ1 2
$num
ÌÌ3 4
,
ÌÌ4 5

writeIndex
ÌÌ6 @
-
ÌÌA B
$num
ÌÌC D
)
ÌÌD E
;
ÌÌE F
m_inputSource
 
=
 
TextInputSources
 ,
.
, -
SetText
- 4
;
4 5&
m_isInputParsingRequired
ÒÒ $
=
ÒÒ% &
true
ÒÒ' +
;
ÒÒ+ ,%
m_havePropertiesChanged
ÚÚ #
=
ÚÚ$ %
true
ÚÚ& *
;
ÚÚ* +
SetVerticesDirty
ÙÙ 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
SetLayoutDirty
ıı 
(
ıı 
)
ıı 
;
ıı 
}
ˆˆ 	
public
ÄÄ 
void
ÄÄ 
SetText
ÄÄ 
(
ÄÄ 
StringBuilder
ÄÄ )
text
ÄÄ* .
)
ÄÄ. /
{
ÅÅ 	
m_inputSource
ÇÇ 
=
ÇÇ 
TextInputSources
ÇÇ ,
.
ÇÇ, -
SetCharArray
ÇÇ- 9
;
ÇÇ9 :
m_text
ÜÜ 
=
ÜÜ 
text
ÜÜ 
.
ÜÜ 
ToString
ÜÜ "
(
ÜÜ" #
)
ÜÜ# $
;
ÜÜ$ %)
m_InternalParsingBufferSize
ââ '
=
ââ( )2
$StringBuilderToInternalParsingBuffer
ââ* N
(
ââN O
text
ââO S
,
ââS T
ref
ââU X%
m_InternalParsingBuffer
ââY p
)
ââp q
;
ââq r&
m_isInputParsingRequired
ãã $
=
ãã% &
true
ãã' +
;
ãã+ ,%
m_havePropertiesChanged
åå #
=
åå$ %
true
åå& *
;
åå* +
SetVerticesDirty
éé 
(
éé 
)
éé 
;
éé 
SetLayoutDirty
èè 
(
èè 
)
èè 
;
èè 
}
êê 	
public
óó 
void
óó 
SetText
óó 
(
óó 
char
óó  
[
óó  !
]
óó! "
text
óó# '
)
óó' (
{
òò 	
SetCharArray
ôô 
(
ôô 
text
ôô 
)
ôô 
;
ôô 
}
öö 	
public
££ 
void
££ 
SetText
££ 
(
££ 
char
££  
[
££  !
]
££! "
text
££# '
,
££' (
int
££) ,
start
££- 2
,
££2 3
int
££4 7
length
££8 >
)
££> ?
{
§§ 	
SetCharArray
•• 
(
•• 
text
•• 
,
•• 
start
•• $
,
••$ %
length
••& ,
)
••, -
;
••- .
}
¶¶ 	
public
≠≠ 
void
≠≠ 
SetCharArray
≠≠  
(
≠≠  !
char
≠≠! %
[
≠≠% &
]
≠≠& '

sourceText
≠≠( 2
)
≠≠2 3
{
ÆÆ 	
int
ØØ 
characterCount
ØØ 
=
ØØ  

sourceText
ØØ! +
==
ØØ, .
null
ØØ/ 3
?
ØØ4 5
$num
ØØ6 7
:
ØØ8 9

sourceText
ØØ: D
.
ØØD E
Length
ØØE K
;
ØØK L
if
≥≥ 
(
≥≥ 
characterCount
≥≥ 
==
≥≥ !
$num
≥≥" #
)
≥≥# $
m_text
¥¥ 
=
¥¥ 
string
¥¥ 
.
¥¥  
Empty
¥¥  %
;
¥¥% &
else
µµ 
m_text
∂∂ 
=
∂∂ 
new
∂∂ 
string
∂∂ #
(
∂∂# $

sourceText
∂∂$ .
)
∂∂. /
;
∂∂/ 0
if
∫∫ 
(
∫∫ 
characterCount
∫∫ 
==
∫∫ !
$num
∫∫" #
)
∫∫# $
{
ªª %
m_InternalParsingBuffer
ºº '
[
ºº' (
$num
ºº( )
]
ºº) *
.
ºº* +
unicode
ºº+ 2
=
ºº3 4
$num
ºº5 6
;
ºº6 7)
m_InternalParsingBufferSize
ΩΩ +
=
ΩΩ, -
$num
ΩΩ. /
;
ΩΩ/ 0
return
ææ 
;
ææ 
}
øø 
if
¬¬ 
(
¬¬ %
m_InternalParsingBuffer
¬¬ '
.
¬¬' (
Length
¬¬( .
<
¬¬/ 0
characterCount
¬¬1 ?
)
¬¬? @!
ResizeInternalArray
√√ #
(
√√# $
ref
√√$ '%
m_InternalParsingBuffer
√√( ?
,
√√? @
characterCount
√√A O
)
√√O P
;
√√P Q
for
∆∆ 
(
∆∆ 
int
∆∆ 
i
∆∆ 
=
∆∆ 
$num
∆∆ 
;
∆∆ 
i
∆∆ 
<
∆∆ 
m_TextStyleStacks
∆∆  1
.
∆∆1 2
Length
∆∆2 8
;
∆∆8 9
i
∆∆: ;
++
∆∆; =
)
∆∆= >
m_TextStyleStacks
«« !
[
««! "
i
««" #
]
««# $
.
««$ %

SetDefault
««% /
(
««/ 0
$num
««0 1
)
««1 2
;
««2 3#
m_TextStyleStackDepth
…… !
=
……" #
$num
……$ %
;
……% &
int
   

writeIndex
   
=
   
$num
   
;
   
if
ÕÕ 
(
ÕÕ 
	textStyle
ÕÕ 
.
ÕÕ 
hashCode
ÕÕ "
!=
ÕÕ# %
(
ÕÕ& '
int
ÕÕ' *
)
ÕÕ* +
TagHashCode
ÕÕ+ 6
.
ÕÕ6 7
NORMAL
ÕÕ7 =
)
ÕÕ= >#
InsertOpeningStyleTag
ŒŒ %
(
ŒŒ% &
m_TextStyle
ŒŒ& 1
,
ŒŒ1 2
$num
ŒŒ3 4
,
ŒŒ4 5
ref
ŒŒ6 9%
m_InternalParsingBuffer
ŒŒ: Q
,
ŒŒQ R
ref
ŒŒS V

writeIndex
ŒŒW a
)
ŒŒa b
;
ŒŒb c
for
–– 
(
–– 
int
–– 
i
–– 
=
–– 
$num
–– 
;
–– 

sourceText
–– &
!=
––' )
null
––* .
&&
––/ 1
i
––2 3
<
––4 5

sourceText
––6 @
.
––@ A
Length
––A G
;
––G H
i
––I J
++
––J L
)
––L M
{
—— 
if
““ 
(
““ 

sourceText
““ 
[
““ 
i
““  
]
““  !
==
““" $
$num
““% '
&&
““( *
i
““+ ,
<
““- .

sourceText
““/ 9
.
““9 :
Length
““: @
-
““A B
$num
““C D
)
““D E
{
”” 
switch
‘‘ 
(
‘‘ 
(
‘‘ 
int
‘‘  
)
‘‘  !

sourceText
‘‘! +
[
‘‘+ ,
i
‘‘, -
+
‘‘. /
$num
‘‘0 1
]
‘‘1 2
)
‘‘2 3
{
’’ 
case
÷÷ 
$num
÷÷  
:
÷÷  !
if
◊◊ 
(
◊◊  

writeIndex
◊◊  *
==
◊◊+ -%
m_InternalParsingBuffer
◊◊. E
.
◊◊E F
Length
◊◊F L
)
◊◊L M!
ResizeInternalArray
◊◊N a
(
◊◊a b
ref
◊◊b e%
m_InternalParsingBuffer
◊◊f }
)
◊◊} ~
;
◊◊~ %
m_InternalParsingBuffer
ŸŸ 3
[
ŸŸ3 4

writeIndex
ŸŸ4 >
]
ŸŸ> ?
.
ŸŸ? @
unicode
ŸŸ@ G
=
ŸŸH I
$num
ŸŸJ L
;
ŸŸL M
i
⁄⁄ 
+=
⁄⁄  
$num
⁄⁄! "
;
⁄⁄" #

writeIndex
€€ &
+=
€€' )
$num
€€* +
;
€€+ ,
continue
‹‹ $
;
‹‹$ %
case
›› 
$num
››  
:
››  !
if
ﬁﬁ 
(
ﬁﬁ  

writeIndex
ﬁﬁ  *
==
ﬁﬁ+ -%
m_InternalParsingBuffer
ﬁﬁ. E
.
ﬁﬁE F
Length
ﬁﬁF L
)
ﬁﬁL M!
ResizeInternalArray
ﬁﬁN a
(
ﬁﬁa b
ref
ﬁﬁb e%
m_InternalParsingBuffer
ﬁﬁf }
)
ﬁﬁ} ~
;
ﬁﬁ~ %
m_InternalParsingBuffer
‡‡ 3
[
‡‡3 4

writeIndex
‡‡4 >
]
‡‡> ?
.
‡‡? @
unicode
‡‡@ G
=
‡‡H I
$num
‡‡J L
;
‡‡L M
i
·· 
+=
··  
$num
··! "
;
··" #

writeIndex
‚‚ &
+=
‚‚' )
$num
‚‚* +
;
‚‚+ ,
continue
„„ $
;
„„$ %
case
‰‰ 
$num
‰‰  
:
‰‰  !
if
ÂÂ 
(
ÂÂ  

writeIndex
ÂÂ  *
==
ÂÂ+ -%
m_InternalParsingBuffer
ÂÂ. E
.
ÂÂE F
Length
ÂÂF L
)
ÂÂL M!
ResizeInternalArray
ÂÂN a
(
ÂÂa b
ref
ÂÂb e%
m_InternalParsingBuffer
ÂÂf }
)
ÂÂ} ~
;
ÂÂ~ %
m_InternalParsingBuffer
ÁÁ 3
[
ÁÁ3 4

writeIndex
ÁÁ4 >
]
ÁÁ> ?
.
ÁÁ? @
unicode
ÁÁ@ G
=
ÁÁH I
$num
ÁÁJ K
;
ÁÁK L
i
ËË 
+=
ËË  
$num
ËË! "
;
ËË" #

writeIndex
ÈÈ &
+=
ÈÈ' )
$num
ÈÈ* +
;
ÈÈ+ ,
continue
ÍÍ $
;
ÍÍ$ %
case
ÎÎ 
$num
ÎÎ  
:
ÎÎ  !
if
ÏÏ 
(
ÏÏ  

writeIndex
ÏÏ  *
==
ÏÏ+ -%
m_InternalParsingBuffer
ÏÏ. E
.
ÏÏE F
Length
ÏÏF L
)
ÏÏL M!
ResizeInternalArray
ÏÏN a
(
ÏÏa b
ref
ÏÏb e%
m_InternalParsingBuffer
ÏÏf }
)
ÏÏ} ~
;
ÏÏ~ %
m_InternalParsingBuffer
ÓÓ 3
[
ÓÓ3 4

writeIndex
ÓÓ4 >
]
ÓÓ> ?
.
ÓÓ? @
unicode
ÓÓ@ G
=
ÓÓH I
$num
ÓÓJ L
;
ÓÓL M
i
ÔÔ 
+=
ÔÔ  
$num
ÔÔ! "
;
ÔÔ" #

writeIndex
 &
+=
' )
$num
* +
;
+ ,
continue
ÒÒ $
;
ÒÒ$ %
}
ÚÚ 
}
ÛÛ 
if
ˆˆ 
(
ˆˆ 

sourceText
ˆˆ 
[
ˆˆ 
i
ˆˆ  
]
ˆˆ  !
==
ˆˆ" $
$num
ˆˆ% '
)
ˆˆ' (
{
˜˜ 
if
¯¯ 
(
¯¯ 
	IsTagName
¯¯ !
(
¯¯! "
ref
¯¯" %

sourceText
¯¯& 0
,
¯¯0 1
$str
¯¯2 8
,
¯¯8 9
i
¯¯: ;
)
¯¯; <
)
¯¯< =
{
˘˘ 
if
˙˙ 
(
˙˙ 

writeIndex
˙˙ &
==
˙˙' )%
m_InternalParsingBuffer
˙˙* A
.
˙˙A B
Length
˙˙B H
)
˙˙H I!
ResizeInternalArray
˙˙J ]
(
˙˙] ^
ref
˙˙^ a%
m_InternalParsingBuffer
˙˙b y
)
˙˙y z
;
˙˙z {%
m_InternalParsingBuffer
¸¸ /
[
¸¸/ 0

writeIndex
¸¸0 :
]
¸¸: ;
.
¸¸; <
unicode
¸¸< C
=
¸¸D E
$num
¸¸F H
;
¸¸H I

writeIndex
˝˝ "
+=
˝˝# %
$num
˝˝& '
;
˝˝' (
i
˛˛ 
+=
˛˛ 
$num
˛˛ 
;
˛˛ 
continue
ÄÄ  
;
ÄÄ  !
}
ÅÅ 
else
ÇÇ 
if
ÇÇ 
(
ÇÇ 
	IsTagName
ÇÇ &
(
ÇÇ& '
ref
ÇÇ' *

sourceText
ÇÇ+ 5
,
ÇÇ5 6
$str
ÇÇ7 ?
,
ÇÇ? @
i
ÇÇA B
)
ÇÇB C
)
ÇÇC D
{
ÉÉ 
if
ÑÑ 
(
ÑÑ 

writeIndex
ÑÑ &
==
ÑÑ' )%
m_InternalParsingBuffer
ÑÑ* A
.
ÑÑA B
Length
ÑÑB H
)
ÑÑH I!
ResizeInternalArray
ÑÑJ ]
(
ÑÑ] ^
ref
ÑÑ^ a%
m_InternalParsingBuffer
ÑÑb y
)
ÑÑy z
;
ÑÑz {%
m_InternalParsingBuffer
ÜÜ /
[
ÜÜ/ 0

writeIndex
ÜÜ0 :
]
ÜÜ: ;
.
ÜÜ; <
unicode
ÜÜ< C
=
ÜÜD E
$num
ÜÜF I
;
ÜÜI J

writeIndex
áá "
+=
áá# %
$num
áá& '
;
áá' (
i
àà 
+=
àà 
$num
àà 
;
àà 
continue
ää  
;
ää  !
}
ãã 
else
åå 
if
åå 
(
åå 
	IsTagName
åå &
(
åå& '
ref
åå' *

sourceText
åå+ 5
,
åå5 6
$str
åå7 ?
,
åå? @
i
ååA B
)
ååB C
)
ååC D
{
çç 
if
éé 
(
éé 

writeIndex
éé &
==
éé' )%
m_InternalParsingBuffer
éé* A
.
ééA B
Length
ééB H
)
ééH I!
ResizeInternalArray
ééJ ]
(
éé] ^
ref
éé^ a%
m_InternalParsingBuffer
ééb y
)
ééy z
;
ééz {%
m_InternalParsingBuffer
êê /
[
êê/ 0

writeIndex
êê0 :
]
êê: ;
.
êê; <
unicode
êê< C
=
êêD E
$num
êêF L
;
êêL M

writeIndex
ëë "
+=
ëë# %
$num
ëë& '
;
ëë' (
i
íí 
+=
íí 
$num
íí 
;
íí 
continue
îî  
;
îî  !
}
ïï 
else
ññ 
if
ññ 
(
ññ 
	IsTagName
ññ &
(
ññ& '
ref
ññ' *

sourceText
ññ+ 5
,
ññ5 6
$str
ññ7 @
,
ññ@ A
i
ññB C
)
ññC D
)
ññD E
{
óó 
int
òò 
	srcOffset
òò %
;
òò% &
if
ôô 
(
ôô $
ReplaceOpeningStyleTag
ôô 2
(
ôô2 3
ref
ôô3 6

sourceText
ôô7 A
,
ôôA B
i
ôôC D
,
ôôD E
out
ôôF I
	srcOffset
ôôJ S
,
ôôS T
ref
ôôU X%
m_InternalParsingBuffer
ôôY p
,
ôôp q
ref
ôôr u

writeIndexôôv Ä
)ôôÄ Å
)ôôÅ Ç
{
öö 
i
õõ 
=
õõ 
	srcOffset
õõ  )
;
õõ) *
continue
úú $
;
úú$ %
}
ùù 
}
ûû 
else
üü 
if
üü 
(
üü 
	IsTagName
üü &
(
üü& '
ref
üü' *

sourceText
üü+ 5
,
üü5 6
$str
üü7 A
,
üüA B
i
üüC D
)
üüD E
)
üüE F
{
†† $
ReplaceClosingStyleTag
°° .
(
°°. /
ref
°°/ 2

sourceText
°°3 =
,
°°= >
i
°°? @
,
°°@ A
ref
°°B E%
m_InternalParsingBuffer
°°F ]
,
°°] ^
ref
°°_ b

writeIndex
°°c m
)
°°m n
;
°°n o
i
§§ 
+=
§§ 
$num
§§ 
;
§§ 
continue
••  
;
••  !
}
¶¶ 
}
ßß 
if
©© 
(
©© 

writeIndex
©© 
==
©© !%
m_InternalParsingBuffer
©©" 9
.
©©9 :
Length
©©: @
)
©©@ A!
ResizeInternalArray
©©B U
(
©©U V
ref
©©V Y%
m_InternalParsingBuffer
©©Z q
)
©©q r
;
©©r s%
m_InternalParsingBuffer
´´ '
[
´´' (

writeIndex
´´( 2
]
´´2 3
.
´´3 4
unicode
´´4 ;
=
´´< =

sourceText
´´> H
[
´´H I
i
´´I J
]
´´J K
;
´´K L

writeIndex
¨¨ 
+=
¨¨ 
$num
¨¨ 
;
¨¨  
}
≠≠ #
m_TextStyleStackDepth
ØØ !
=
ØØ" #
$num
ØØ$ %
;
ØØ% &
if
≤≤ 
(
≤≤ 
	textStyle
≤≤ 
.
≤≤ 
hashCode
≤≤ "
!=
≤≤# %
(
≤≤& '
int
≤≤' *
)
≤≤* +
TagHashCode
≤≤+ 6
.
≤≤6 7
NORMAL
≤≤7 =
)
≤≤= >#
InsertClosingStyleTag
≥≥ %
(
≥≥% &
ref
≥≥& )%
m_InternalParsingBuffer
≥≥* A
,
≥≥A B
ref
≥≥C F

writeIndex
≥≥G Q
)
≥≥Q R
;
≥≥R S
if
µµ 
(
µµ 

writeIndex
µµ 
==
µµ %
m_InternalParsingBuffer
µµ 5
.
µµ5 6
Length
µµ6 <
)
µµ< =!
ResizeInternalArray
µµ> Q
(
µµQ R
ref
µµR U%
m_InternalParsingBuffer
µµV m
)
µµm n
;
µµn o%
m_InternalParsingBuffer
∑∑ #
[
∑∑# $

writeIndex
∑∑$ .
]
∑∑. /
.
∑∑/ 0
unicode
∑∑0 7
=
∑∑8 9
$num
∑∑: ;
;
∑∑; <)
m_InternalParsingBufferSize
∏∏ '
=
∏∏( )

writeIndex
∏∏* 4
;
∏∏4 5
m_inputSource
∫∫ 
=
∫∫ 
TextInputSources
∫∫ ,
.
∫∫, -
SetCharArray
∫∫- 9
;
∫∫9 :&
m_isInputParsingRequired
ªª $
=
ªª% &
true
ªª' +
;
ªª+ ,%
m_havePropertiesChanged
ºº #
=
ºº$ %
true
ºº& *
;
ºº* +
SetVerticesDirty
ææ 
(
ææ 
)
ææ 
;
ææ 
SetLayoutDirty
øø 
(
øø 
)
øø 
;
øø 
}
¿¿ 	
public
«« 
void
«« 
SetCharArray
««  
(
««  !
char
««! %
[
««% &
]
««& '

sourceText
««( 2
,
««2 3
int
««4 7
start
««8 =
,
««= >
int
««? B
length
««C I
)
««I J
{
»» 	
int
…… 
characterCount
…… 
=
……  
$num
……! "
;
……" #
if
ÃÃ 
(
ÃÃ 

sourceText
ÃÃ 
!=
ÃÃ 
null
ÃÃ "
)
ÃÃ" #
{
ÕÕ 
start
ŒŒ 
=
ŒŒ 
Mathf
ŒŒ 
.
ŒŒ 
Clamp
ŒŒ #
(
ŒŒ# $
start
ŒŒ$ )
,
ŒŒ) *
$num
ŒŒ+ ,
,
ŒŒ, -

sourceText
ŒŒ. 8
.
ŒŒ8 9
Length
ŒŒ9 ?
)
ŒŒ? @
;
ŒŒ@ A
length
œœ 
=
œœ 
Mathf
œœ 
.
œœ 
Clamp
œœ $
(
œœ$ %
length
œœ% +
,
œœ+ ,
$num
œœ- .
,
œœ. /
start
œœ0 5
+
œœ6 7
length
œœ8 >
<
œœ? @

sourceText
œœA K
.
œœK L
Length
œœL R
?
œœS T
length
œœU [
:
œœ\ ]

sourceText
œœ^ h
.
œœh i
Length
œœi o
-
œœp q
start
œœr w
)
œœw x
;
œœx y
characterCount
—— 
=
——  
length
——! '
;
——' (
}
““ 
if
÷÷ 
(
÷÷ 
characterCount
÷÷ 
==
÷÷ !
$num
÷÷" #
)
÷÷# $
m_text
◊◊ 
=
◊◊ 
string
◊◊ 
.
◊◊  
Empty
◊◊  %
;
◊◊% &
else
ÿÿ 
m_text
ŸŸ 
=
ŸŸ 
new
ŸŸ 
string
ŸŸ #
(
ŸŸ# $

sourceText
ŸŸ$ .
,
ŸŸ. /
start
ŸŸ0 5
,
ŸŸ5 6
length
ŸŸ7 =
)
ŸŸ= >
;
ŸŸ> ?
if
›› 
(
›› 
characterCount
›› 
==
›› !
$num
››" #
)
››# $
{
ﬁﬁ %
m_InternalParsingBuffer
ﬂﬂ '
[
ﬂﬂ' (
$num
ﬂﬂ( )
]
ﬂﬂ) *
.
ﬂﬂ* +
unicode
ﬂﬂ+ 2
=
ﬂﬂ3 4
$num
ﬂﬂ5 6
;
ﬂﬂ6 7)
m_InternalParsingBufferSize
‡‡ +
=
‡‡, -
$num
‡‡. /
;
‡‡/ 0
return
·· 
;
·· 
}
‚‚ 
if
ÂÂ 
(
ÂÂ %
m_InternalParsingBuffer
ÂÂ '
.
ÂÂ' (
Length
ÂÂ( .
<
ÂÂ/ 0
characterCount
ÂÂ1 ?
)
ÂÂ? @!
ResizeInternalArray
ÊÊ #
(
ÊÊ# $
ref
ÊÊ$ '%
m_InternalParsingBuffer
ÊÊ( ?
,
ÊÊ? @
characterCount
ÊÊA O
)
ÊÊO P
;
ÊÊP Q
for
ÈÈ 
(
ÈÈ 
int
ÈÈ 
j
ÈÈ 
=
ÈÈ 
$num
ÈÈ 
;
ÈÈ 
j
ÈÈ 
<
ÈÈ 
m_TextStyleStacks
ÈÈ  1
.
ÈÈ1 2
Length
ÈÈ2 8
;
ÈÈ8 9
j
ÈÈ: ;
++
ÈÈ; =
)
ÈÈ= >
m_TextStyleStacks
ÍÍ !
[
ÍÍ! "
j
ÍÍ" #
]
ÍÍ# $
.
ÍÍ$ %

SetDefault
ÍÍ% /
(
ÍÍ/ 0
$num
ÍÍ0 1
)
ÍÍ1 2
;
ÍÍ2 3#
m_TextStyleStackDepth
ÏÏ !
=
ÏÏ" #
$num
ÏÏ$ %
;
ÏÏ% &
int
ÌÌ 

writeIndex
ÌÌ 
=
ÌÌ 
$num
ÌÌ 
;
ÌÌ 
if
 
(
 
	textStyle
 
.
 
hashCode
 "
!=
# %
(
& '
int
' *
)
* +
TagHashCode
+ 6
.
6 7
NORMAL
7 =
)
= >#
InsertOpeningStyleTag
ÒÒ %
(
ÒÒ% &
m_TextStyle
ÒÒ& 1
,
ÒÒ1 2
$num
ÒÒ3 4
,
ÒÒ4 5
ref
ÒÒ6 9%
m_InternalParsingBuffer
ÒÒ: Q
,
ÒÒQ R
ref
ÒÒS V

writeIndex
ÒÒW a
)
ÒÒa b
;
ÒÒb c
int
ÛÛ 
i
ÛÛ 
=
ÛÛ 
start
ÛÛ 
;
ÛÛ 
int
ÙÙ 
end
ÙÙ 
=
ÙÙ 
start
ÙÙ 
+
ÙÙ 
length
ÙÙ $
;
ÙÙ$ %
for
ıı 
(
ıı 
;
ıı 
i
ıı 
<
ıı 
end
ıı 
;
ıı 
i
ıı 
++
ıı 
)
ıı  
{
ˆˆ 
if
˜˜ 
(
˜˜ 

sourceText
˜˜ 
[
˜˜ 
i
˜˜  
]
˜˜  !
==
˜˜" $
$num
˜˜% '
&&
˜˜( *
i
˜˜+ ,
<
˜˜- .
length
˜˜/ 5
-
˜˜6 7
$num
˜˜8 9
)
˜˜9 :
{
¯¯ 
switch
˘˘ 
(
˘˘ 
(
˘˘ 
int
˘˘  
)
˘˘  !

sourceText
˘˘! +
[
˘˘+ ,
i
˘˘, -
+
˘˘. /
$num
˘˘0 1
]
˘˘1 2
)
˘˘2 3
{
˙˙ 
case
˚˚ 
$num
˚˚  
:
˚˚  !
if
¸¸ 
(
¸¸  

writeIndex
¸¸  *
==
¸¸+ -%
m_InternalParsingBuffer
¸¸. E
.
¸¸E F
Length
¸¸F L
)
¸¸L M!
ResizeInternalArray
¸¸N a
(
¸¸a b
ref
¸¸b e%
m_InternalParsingBuffer
¸¸f }
)
¸¸} ~
;
¸¸~ %
m_InternalParsingBuffer
˛˛ 3
[
˛˛3 4

writeIndex
˛˛4 >
]
˛˛> ?
.
˛˛? @
unicode
˛˛@ G
=
˛˛H I
$num
˛˛J L
;
˛˛L M
i
ˇˇ 
+=
ˇˇ  
$num
ˇˇ! "
;
ˇˇ" #

writeIndex
ÄÄ &
+=
ÄÄ' )
$num
ÄÄ* +
;
ÄÄ+ ,
continue
ÅÅ $
;
ÅÅ$ %
case
ÇÇ 
$num
ÇÇ  
:
ÇÇ  !
if
ÉÉ 
(
ÉÉ  

writeIndex
ÉÉ  *
==
ÉÉ+ -%
m_InternalParsingBuffer
ÉÉ. E
.
ÉÉE F
Length
ÉÉF L
)
ÉÉL M!
ResizeInternalArray
ÉÉN a
(
ÉÉa b
ref
ÉÉb e%
m_InternalParsingBuffer
ÉÉf }
)
ÉÉ} ~
;
ÉÉ~ %
m_InternalParsingBuffer
ÖÖ 3
[
ÖÖ3 4

writeIndex
ÖÖ4 >
]
ÖÖ> ?
.
ÖÖ? @
unicode
ÖÖ@ G
=
ÖÖH I
$num
ÖÖJ L
;
ÖÖL M
i
ÜÜ 
+=
ÜÜ  
$num
ÜÜ! "
;
ÜÜ" #

writeIndex
áá &
+=
áá' )
$num
áá* +
;
áá+ ,
continue
àà $
;
àà$ %
case
ââ 
$num
ââ  
:
ââ  !
if
ää 
(
ää  

writeIndex
ää  *
==
ää+ -%
m_InternalParsingBuffer
ää. E
.
ääE F
Length
ääF L
)
ääL M!
ResizeInternalArray
ääN a
(
ääa b
ref
ääb e%
m_InternalParsingBuffer
ääf }
)
ää} ~
;
ää~ %
m_InternalParsingBuffer
åå 3
[
åå3 4

writeIndex
åå4 >
]
åå> ?
.
åå? @
unicode
åå@ G
=
ååH I
$num
ååJ K
;
ååK L
i
çç 
+=
çç  
$num
çç! "
;
çç" #

writeIndex
éé &
+=
éé' )
$num
éé* +
;
éé+ ,
continue
èè $
;
èè$ %
case
êê 
$num
êê  
:
êê  !
if
ëë 
(
ëë  

writeIndex
ëë  *
==
ëë+ -%
m_InternalParsingBuffer
ëë. E
.
ëëE F
Length
ëëF L
)
ëëL M!
ResizeInternalArray
ëëN a
(
ëëa b
ref
ëëb e%
m_InternalParsingBuffer
ëëf }
)
ëë} ~
;
ëë~ %
m_InternalParsingBuffer
ìì 3
[
ìì3 4

writeIndex
ìì4 >
]
ìì> ?
.
ìì? @
unicode
ìì@ G
=
ììH I
$num
ììJ L
;
ììL M
i
îî 
+=
îî  
$num
îî! "
;
îî" #

writeIndex
ïï &
+=
ïï' )
$num
ïï* +
;
ïï+ ,
continue
ññ $
;
ññ$ %
}
óó 
}
òò 
if
õõ 
(
õõ 

sourceText
õõ 
[
õõ 
i
õõ  
]
õõ  !
==
õõ" $
$num
õõ% '
)
õõ' (
{
úú 
if
ùù 
(
ùù 
	IsTagName
ùù !
(
ùù! "
ref
ùù" %

sourceText
ùù& 0
,
ùù0 1
$str
ùù2 8
,
ùù8 9
i
ùù: ;
)
ùù; <
)
ùù< =
{
ûû 
if
üü 
(
üü 

writeIndex
üü &
==
üü' )%
m_InternalParsingBuffer
üü* A
.
üüA B
Length
üüB H
)
üüH I!
ResizeInternalArray
üüJ ]
(
üü] ^
ref
üü^ a%
m_InternalParsingBuffer
üüb y
)
üüy z
;
üüz {%
m_InternalParsingBuffer
°° /
[
°°/ 0

writeIndex
°°0 :
]
°°: ;
.
°°; <
unicode
°°< C
=
°°D E
$num
°°F H
;
°°H I

writeIndex
¢¢ "
+=
¢¢# %
$num
¢¢& '
;
¢¢' (
i
££ 
+=
££ 
$num
££ 
;
££ 
continue
••  
;
••  !
}
¶¶ 
else
ßß 
if
ßß 
(
ßß 
	IsTagName
ßß &
(
ßß& '
ref
ßß' *

sourceText
ßß+ 5
,
ßß5 6
$str
ßß7 ?
,
ßß? @
i
ßßA B
)
ßßB C
)
ßßC D
{
®® 
if
©© 
(
©© 

writeIndex
©© &
==
©©' )%
m_InternalParsingBuffer
©©* A
.
©©A B
Length
©©B H
)
©©H I!
ResizeInternalArray
©©J ]
(
©©] ^
ref
©©^ a%
m_InternalParsingBuffer
©©b y
)
©©y z
;
©©z {%
m_InternalParsingBuffer
´´ /
[
´´/ 0

writeIndex
´´0 :
]
´´: ;
.
´´; <
unicode
´´< C
=
´´D E
$num
´´F I
;
´´I J

writeIndex
¨¨ "
+=
¨¨# %
$num
¨¨& '
;
¨¨' (
i
≠≠ 
+=
≠≠ 
$num
≠≠ 
;
≠≠ 
continue
ØØ  
;
ØØ  !
}
∞∞ 
else
±± 
if
±± 
(
±± 
	IsTagName
±± &
(
±±& '
ref
±±' *

sourceText
±±+ 5
,
±±5 6
$str
±±7 ?
,
±±? @
i
±±A B
)
±±B C
)
±±C D
{
≤≤ 
if
≥≥ 
(
≥≥ 

writeIndex
≥≥ &
==
≥≥' )%
m_InternalParsingBuffer
≥≥* A
.
≥≥A B
Length
≥≥B H
)
≥≥H I!
ResizeInternalArray
≥≥J ]
(
≥≥] ^
ref
≥≥^ a%
m_InternalParsingBuffer
≥≥b y
)
≥≥y z
;
≥≥z {%
m_InternalParsingBuffer
µµ /
[
µµ/ 0

writeIndex
µµ0 :
]
µµ: ;
.
µµ; <
unicode
µµ< C
=
µµD E
$num
µµF L
;
µµL M

writeIndex
∂∂ "
+=
∂∂# %
$num
∂∂& '
;
∂∂' (
i
∑∑ 
+=
∑∑ 
$num
∑∑ 
;
∑∑ 
continue
ππ  
;
ππ  !
}
∫∫ 
else
ªª 
if
ªª 
(
ªª 
	IsTagName
ªª &
(
ªª& '
ref
ªª' *

sourceText
ªª+ 5
,
ªª5 6
$str
ªª7 @
,
ªª@ A
i
ªªB C
)
ªªC D
)
ªªD E
{
ºº 
int
ΩΩ 
	srcOffset
ΩΩ %
;
ΩΩ% &
if
ææ 
(
ææ $
ReplaceOpeningStyleTag
ææ 2
(
ææ2 3
ref
ææ3 6

sourceText
ææ7 A
,
ææA B
i
ææC D
,
ææD E
out
ææF I
	srcOffset
ææJ S
,
ææS T
ref
ææU X%
m_InternalParsingBuffer
ææY p
,
ææp q
ref
æær u

writeIndexææv Ä
)ææÄ Å
)ææÅ Ç
{
øø 
i
¿¿ 
=
¿¿ 
	srcOffset
¿¿  )
;
¿¿) *
continue
¡¡ $
;
¡¡$ %
}
¬¬ 
}
√√ 
else
ƒƒ 
if
ƒƒ 
(
ƒƒ 
	IsTagName
ƒƒ &
(
ƒƒ& '
ref
ƒƒ' *

sourceText
ƒƒ+ 5
,
ƒƒ5 6
$str
ƒƒ7 A
,
ƒƒA B
i
ƒƒC D
)
ƒƒD E
)
ƒƒE F
{
≈≈ $
ReplaceClosingStyleTag
∆∆ .
(
∆∆. /
ref
∆∆/ 2

sourceText
∆∆3 =
,
∆∆= >
i
∆∆? @
,
∆∆@ A
ref
∆∆B E%
m_InternalParsingBuffer
∆∆F ]
,
∆∆] ^
ref
∆∆_ b

writeIndex
∆∆c m
)
∆∆m n
;
∆∆n o
i
…… 
+=
…… 
$num
…… 
;
…… 
continue
    
;
    !
}
ÀÀ 
}
ÃÃ 
if
ŒŒ 
(
ŒŒ 

writeIndex
ŒŒ 
==
ŒŒ !%
m_InternalParsingBuffer
ŒŒ" 9
.
ŒŒ9 :
Length
ŒŒ: @
)
ŒŒ@ A!
ResizeInternalArray
ŒŒB U
(
ŒŒU V
ref
ŒŒV Y%
m_InternalParsingBuffer
ŒŒZ q
)
ŒŒq r
;
ŒŒr s%
m_InternalParsingBuffer
–– '
[
––' (

writeIndex
––( 2
]
––2 3
.
––3 4
unicode
––4 ;
=
––< =

sourceText
––> H
[
––H I
i
––I J
]
––J K
;
––K L

writeIndex
—— 
+=
—— 
$num
—— 
;
——  
}
““ #
m_TextStyleStackDepth
‘‘ !
=
‘‘" #
$num
‘‘$ %
;
‘‘% &
if
◊◊ 
(
◊◊ 
	textStyle
◊◊ 
.
◊◊ 
hashCode
◊◊ "
!=
◊◊# %
(
◊◊& '
int
◊◊' *
)
◊◊* +
TagHashCode
◊◊+ 6
.
◊◊6 7
NORMAL
◊◊7 =
)
◊◊= >#
InsertClosingStyleTag
ÿÿ %
(
ÿÿ% &
ref
ÿÿ& )%
m_InternalParsingBuffer
ÿÿ* A
,
ÿÿA B
ref
ÿÿC F

writeIndex
ÿÿG Q
)
ÿÿQ R
;
ÿÿR S
if
⁄⁄ 
(
⁄⁄ 

writeIndex
⁄⁄ 
==
⁄⁄ %
m_InternalParsingBuffer
⁄⁄ 5
.
⁄⁄5 6
Length
⁄⁄6 <
)
⁄⁄< =!
ResizeInternalArray
⁄⁄> Q
(
⁄⁄Q R
ref
⁄⁄R U%
m_InternalParsingBuffer
⁄⁄V m
)
⁄⁄m n
;
⁄⁄n o%
m_InternalParsingBuffer
‹‹ #
[
‹‹# $

writeIndex
‹‹$ .
]
‹‹. /
.
‹‹/ 0
unicode
‹‹0 7
=
‹‹8 9
$num
‹‹: ;
;
‹‹; <
m_inputSource
ﬁﬁ 
=
ﬁﬁ 
TextInputSources
ﬁﬁ ,
.
ﬁﬁ, -
SetCharArray
ﬁﬁ- 9
;
ﬁﬁ9 :%
m_havePropertiesChanged
ﬂﬂ #
=
ﬂﬂ$ %
true
ﬂﬂ& *
;
ﬂﬂ* +&
m_isInputParsingRequired
‡‡ $
=
‡‡% &
true
‡‡' +
;
‡‡+ ,
SetVerticesDirty
‚‚ 
(
‚‚ 
)
‚‚ 
;
‚‚ 
SetLayoutDirty
„„ 
(
„„ 
)
„„ 
;
„„ 
}
‰‰ 	
public
ÎÎ 
void
ÎÎ 
SetCharArray
ÎÎ  
(
ÎÎ  !
int
ÎÎ! $
[
ÎÎ$ %
]
ÎÎ% &

sourceText
ÎÎ' 1
,
ÎÎ1 2
int
ÎÎ3 6
start
ÎÎ7 <
,
ÎÎ< =
int
ÎÎ> A
length
ÎÎB H
)
ÎÎH I
{
ÏÏ 	
if
ÓÓ 
(
ÓÓ %
m_InternalParsingBuffer
ÓÓ '
==
ÓÓ( *
null
ÓÓ+ /
)
ÓÓ/ 0%
m_InternalParsingBuffer
ÓÓ1 H
=
ÓÓI J
new
ÓÓK N
UnicodeChar
ÓÓO Z
[
ÓÓZ [
$num
ÓÓ[ \
]
ÓÓ\ ]
;
ÓÓ] ^
if
ÚÚ 
(
ÚÚ 

sourceText
ÚÚ 
==
ÚÚ 
null
ÚÚ "
||
ÚÚ# %

sourceText
ÚÚ& 0
.
ÚÚ0 1
Length
ÚÚ1 7
==
ÚÚ8 :
$num
ÚÚ; <
||
ÚÚ= ?
length
ÚÚ@ F
==
ÚÚG I
$num
ÚÚJ K
)
ÚÚK L
{
ÛÛ 
m_text
ÙÙ 
=
ÙÙ 
string
ÙÙ 
.
ÙÙ  
Empty
ÙÙ  %
;
ÙÙ% &
start
ıı 
=
ıı 
$num
ıı 
;
ıı 
length
ˆˆ 
=
ˆˆ 
$num
ˆˆ 
;
ˆˆ 
}
˜˜ 
else
¯¯ 
{
˘˘ 
m_text
˙˙ 
=
˙˙ 

sourceText
˙˙ #
.
˙˙# $
IntToString
˙˙$ /
(
˙˙/ 0
start
˙˙0 5
,
˙˙5 6
length
˙˙7 =
)
˙˙= >
;
˙˙> ?
}
˚˚ 
for
ˇˇ 
(
ˇˇ 
int
ˇˇ 
j
ˇˇ 
=
ˇˇ 
$num
ˇˇ 
;
ˇˇ 
j
ˇˇ 
<
ˇˇ 
m_TextStyleStacks
ˇˇ  1
.
ˇˇ1 2
Length
ˇˇ2 8
;
ˇˇ8 9
j
ˇˇ: ;
++
ˇˇ; =
)
ˇˇ= >
m_TextStyleStacks
ÄÄ !
[
ÄÄ! "
j
ÄÄ" #
]
ÄÄ# $
.
ÄÄ$ %

SetDefault
ÄÄ% /
(
ÄÄ/ 0
$num
ÄÄ0 1
)
ÄÄ1 2
;
ÄÄ2 3#
m_TextStyleStackDepth
ÇÇ !
=
ÇÇ" #
$num
ÇÇ$ %
;
ÇÇ% &
int
ÉÉ 

writeIndex
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
if
ÜÜ 
(
ÜÜ 
	textStyle
ÜÜ 
.
ÜÜ 
hashCode
ÜÜ "
!=
ÜÜ# %
(
ÜÜ& '
int
ÜÜ' *
)
ÜÜ* +
TagHashCode
ÜÜ+ 6
.
ÜÜ6 7
NORMAL
ÜÜ7 =
)
ÜÜ= >#
InsertOpeningStyleTag
áá %
(
áá% &
m_TextStyle
áá& 1
,
áá1 2
$num
áá3 4
,
áá4 5
ref
áá6 9%
m_InternalParsingBuffer
áá: Q
,
ááQ R
ref
ááS V

writeIndex
ááW a
)
ááa b
;
ááb c
int
ââ 
end
ââ 
=
ââ 
start
ââ 
+
ââ 
length
ââ $
;
ââ$ %
for
ää 
(
ää 
int
ää 
i
ää 
=
ää 
start
ää 
;
ää 
i
ää  !
<
ää" #
end
ää$ '
&&
ää( *
i
ää+ ,
<
ää- .

sourceText
ää/ 9
.
ää9 :
Length
ää: @
;
ää@ A
i
ääB C
++
ääC E
)
ääE F
{
ãã 
if
åå 
(
åå 

sourceText
åå 
[
åå 
i
åå  
]
åå  !
==
åå" $
$num
åå% '
&&
åå( *
i
åå+ ,
<
åå- .
length
åå/ 5
-
åå6 7
$num
åå8 9
)
åå9 :
{
çç 
switch
éé 
(
éé 
(
éé 
int
éé  
)
éé  !

sourceText
éé! +
[
éé+ ,
i
éé, -
+
éé. /
$num
éé0 1
]
éé1 2
)
éé2 3
{
èè 
case
êê 
$num
êê  
:
êê  !
if
ëë 
(
ëë  

writeIndex
ëë  *
==
ëë+ -%
m_InternalParsingBuffer
ëë. E
.
ëëE F
Length
ëëF L
)
ëëL M!
ResizeInternalArray
ëëN a
(
ëëa b
ref
ëëb e%
m_InternalParsingBuffer
ëëf }
)
ëë} ~
;
ëë~ %
m_InternalParsingBuffer
ìì 3
[
ìì3 4

writeIndex
ìì4 >
]
ìì> ?
.
ìì? @
unicode
ìì@ G
=
ììH I
$num
ììJ L
;
ììL M
i
îî 
+=
îî  
$num
îî! "
;
îî" #

writeIndex
ïï &
+=
ïï' )
$num
ïï* +
;
ïï+ ,
continue
ññ $
;
ññ$ %
case
óó 
$num
óó  
:
óó  !
if
òò 
(
òò  

writeIndex
òò  *
==
òò+ -%
m_InternalParsingBuffer
òò. E
.
òòE F
Length
òòF L
)
òòL M!
ResizeInternalArray
òòN a
(
òòa b
ref
òòb e%
m_InternalParsingBuffer
òòf }
)
òò} ~
;
òò~ %
m_InternalParsingBuffer
öö 3
[
öö3 4

writeIndex
öö4 >
]
öö> ?
.
öö? @
unicode
öö@ G
=
ööH I
$num
ööJ L
;
ööL M
i
õõ 
+=
õõ  
$num
õõ! "
;
õõ" #

writeIndex
úú &
+=
úú' )
$num
úú* +
;
úú+ ,
continue
ùù $
;
ùù$ %
case
ûû 
$num
ûû  
:
ûû  !
if
üü 
(
üü  

writeIndex
üü  *
==
üü+ -%
m_InternalParsingBuffer
üü. E
.
üüE F
Length
üüF L
)
üüL M!
ResizeInternalArray
üüN a
(
üüa b
ref
üüb e%
m_InternalParsingBuffer
üüf }
)
üü} ~
;
üü~ %
m_InternalParsingBuffer
°° 3
[
°°3 4

writeIndex
°°4 >
]
°°> ?
.
°°? @
unicode
°°@ G
=
°°H I
$num
°°J K
;
°°K L
i
¢¢ 
+=
¢¢  
$num
¢¢! "
;
¢¢" #

writeIndex
££ &
+=
££' )
$num
££* +
;
££+ ,
continue
§§ $
;
§§$ %
case
•• 
$num
••  
:
••  !
if
¶¶ 
(
¶¶  

writeIndex
¶¶  *
==
¶¶+ -%
m_InternalParsingBuffer
¶¶. E
.
¶¶E F
Length
¶¶F L
)
¶¶L M!
ResizeInternalArray
¶¶N a
(
¶¶a b
ref
¶¶b e%
m_InternalParsingBuffer
¶¶f }
)
¶¶} ~
;
¶¶~ %
m_InternalParsingBuffer
®® 3
[
®®3 4

writeIndex
®®4 >
]
®®> ?
.
®®? @
unicode
®®@ G
=
®®H I
$num
®®J L
;
®®L M
i
©© 
+=
©©  
$num
©©! "
;
©©" #

writeIndex
™™ &
+=
™™' )
$num
™™* +
;
™™+ ,
continue
´´ $
;
´´$ %
}
¨¨ 
}
≠≠ 
if
∞∞ 
(
∞∞ 

sourceText
∞∞ 
[
∞∞ 
i
∞∞  
]
∞∞  !
==
∞∞" $
$num
∞∞% '
)
∞∞' (
{
±± 
if
≤≤ 
(
≤≤ 
	IsTagName
≤≤ !
(
≤≤! "
ref
≤≤" %

sourceText
≤≤& 0
,
≤≤0 1
$str
≤≤2 8
,
≤≤8 9
i
≤≤: ;
)
≤≤; <
)
≤≤< =
{
≥≥ 
if
¥¥ 
(
¥¥ 

writeIndex
¥¥ &
==
¥¥' )%
m_InternalParsingBuffer
¥¥* A
.
¥¥A B
Length
¥¥B H
)
¥¥H I!
ResizeInternalArray
¥¥J ]
(
¥¥] ^
ref
¥¥^ a%
m_InternalParsingBuffer
¥¥b y
)
¥¥y z
;
¥¥z {%
m_InternalParsingBuffer
∂∂ /
[
∂∂/ 0

writeIndex
∂∂0 :
]
∂∂: ;
.
∂∂; <
unicode
∂∂< C
=
∂∂D E
$num
∂∂F H
;
∂∂H I

writeIndex
∑∑ "
+=
∑∑# %
$num
∑∑& '
;
∑∑' (
i
∏∏ 
+=
∏∏ 
$num
∏∏ 
;
∏∏ 
continue
∫∫  
;
∫∫  !
}
ªª 
else
ºº 
if
ºº 
(
ºº 
	IsTagName
ºº &
(
ºº& '
ref
ºº' *

sourceText
ºº+ 5
,
ºº5 6
$str
ºº7 ?
,
ºº? @
i
ººA B
)
ººB C
)
ººC D
{
ΩΩ 
if
ææ 
(
ææ 

writeIndex
ææ &
==
ææ' )%
m_InternalParsingBuffer
ææ* A
.
ææA B
Length
ææB H
)
ææH I!
ResizeInternalArray
ææJ ]
(
ææ] ^
ref
ææ^ a%
m_InternalParsingBuffer
ææb y
)
ææy z
;
ææz {%
m_InternalParsingBuffer
¿¿ /
[
¿¿/ 0

writeIndex
¿¿0 :
]
¿¿: ;
.
¿¿; <
unicode
¿¿< C
=
¿¿D E
$num
¿¿F I
;
¿¿I J

writeIndex
¡¡ "
+=
¡¡# %
$num
¡¡& '
;
¡¡' (
i
¬¬ 
+=
¬¬ 
$num
¬¬ 
;
¬¬ 
continue
ƒƒ  
;
ƒƒ  !
}
≈≈ 
else
∆∆ 
if
∆∆ 
(
∆∆ 
	IsTagName
∆∆ &
(
∆∆& '
ref
∆∆' *

sourceText
∆∆+ 5
,
∆∆5 6
$str
∆∆7 ?
,
∆∆? @
i
∆∆A B
)
∆∆B C
)
∆∆C D
{
«« 
if
»» 
(
»» 

writeIndex
»» &
==
»»' )%
m_InternalParsingBuffer
»»* A
.
»»A B
Length
»»B H
)
»»H I!
ResizeInternalArray
»»J ]
(
»»] ^
ref
»»^ a%
m_InternalParsingBuffer
»»b y
)
»»y z
;
»»z {%
m_InternalParsingBuffer
   /
[
  / 0

writeIndex
  0 :
]
  : ;
.
  ; <
unicode
  < C
=
  D E
$num
  F L
;
  L M

writeIndex
ÀÀ "
+=
ÀÀ# %
$num
ÀÀ& '
;
ÀÀ' (
i
ÃÃ 
+=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
continue
ŒŒ  
;
ŒŒ  !
}
œœ 
else
–– 
if
–– 
(
–– 
	IsTagName
–– &
(
––& '
ref
––' *

sourceText
––+ 5
,
––5 6
$str
––7 @
,
––@ A
i
––B C
)
––C D
)
––D E
{
—— 
int
““ 
	srcOffset
““ %
;
““% &
if
”” 
(
”” $
ReplaceOpeningStyleTag
”” 2
(
””2 3
ref
””3 6

sourceText
””7 A
,
””A B
i
””C D
,
””D E
out
””F I
	srcOffset
””J S
,
””S T
ref
””U X%
m_InternalParsingBuffer
””Y p
,
””p q
ref
””r u

writeIndex””v Ä
)””Ä Å
)””Å Ç
{
‘‘ 
i
’’ 
=
’’ 
	srcOffset
’’  )
;
’’) *
continue
÷÷ $
;
÷÷$ %
}
◊◊ 
}
ÿÿ 
else
ŸŸ 
if
ŸŸ 
(
ŸŸ 
	IsTagName
ŸŸ &
(
ŸŸ& '
ref
ŸŸ' *

sourceText
ŸŸ+ 5
,
ŸŸ5 6
$str
ŸŸ7 A
,
ŸŸA B
i
ŸŸC D
)
ŸŸD E
)
ŸŸE F
{
⁄⁄ $
ReplaceClosingStyleTag
€€ .
(
€€. /
ref
€€/ 2

sourceText
€€3 =
,
€€= >
i
€€? @
,
€€@ A
ref
€€B E%
m_InternalParsingBuffer
€€F ]
,
€€] ^
ref
€€_ b

writeIndex
€€c m
)
€€m n
;
€€n o
i
ﬁﬁ 
+=
ﬁﬁ 
$num
ﬁﬁ 
;
ﬁﬁ 
continue
ﬂﬂ  
;
ﬂﬂ  !
}
‡‡ 
}
·· 
if
„„ 
(
„„ 

writeIndex
„„ 
==
„„ !%
m_InternalParsingBuffer
„„" 9
.
„„9 :
Length
„„: @
)
„„@ A!
ResizeInternalArray
„„B U
(
„„U V
ref
„„V Y%
m_InternalParsingBuffer
„„Z q
)
„„q r
;
„„r s%
m_InternalParsingBuffer
ÂÂ '
[
ÂÂ' (

writeIndex
ÂÂ( 2
]
ÂÂ2 3
.
ÂÂ3 4
unicode
ÂÂ4 ;
=
ÂÂ< =

sourceText
ÂÂ> H
[
ÂÂH I
i
ÂÂI J
]
ÂÂJ K
;
ÂÂK L

writeIndex
ÊÊ 
+=
ÊÊ 
$num
ÊÊ 
;
ÊÊ  
}
ÁÁ #
m_TextStyleStackDepth
ÈÈ !
=
ÈÈ" #
$num
ÈÈ$ %
;
ÈÈ% &
if
ÏÏ 
(
ÏÏ 
	textStyle
ÏÏ 
.
ÏÏ 
hashCode
ÏÏ "
!=
ÏÏ# %
(
ÏÏ& '
int
ÏÏ' *
)
ÏÏ* +
TagHashCode
ÏÏ+ 6
.
ÏÏ6 7
NORMAL
ÏÏ7 =
)
ÏÏ= >#
InsertClosingStyleTag
ÌÌ %
(
ÌÌ% &
ref
ÌÌ& )%
m_InternalParsingBuffer
ÌÌ* A
,
ÌÌA B
ref
ÌÌC F

writeIndex
ÌÌG Q
)
ÌÌQ R
;
ÌÌR S
if
ÔÔ 
(
ÔÔ 

writeIndex
ÔÔ 
==
ÔÔ %
m_InternalParsingBuffer
ÔÔ 5
.
ÔÔ5 6
Length
ÔÔ6 <
)
ÔÔ< =!
ResizeInternalArray
ÔÔ> Q
(
ÔÔQ R
ref
ÔÔR U%
m_InternalParsingBuffer
ÔÔV m
)
ÔÔm n
;
ÔÔn o%
m_InternalParsingBuffer
ÒÒ #
[
ÒÒ# $

writeIndex
ÒÒ$ .
]
ÒÒ. /
.
ÒÒ/ 0
unicode
ÒÒ0 7
=
ÒÒ8 9
$num
ÒÒ: ;
;
ÒÒ; <
m_inputSource
ÛÛ 
=
ÛÛ 
TextInputSources
ÛÛ ,
.
ÛÛ, -
SetCharArray
ÛÛ- 9
;
ÛÛ9 :%
m_havePropertiesChanged
ÙÙ #
=
ÙÙ$ %
true
ÙÙ& *
;
ÙÙ* +&
m_isInputParsingRequired
ıı $
=
ıı% &
true
ıı' +
;
ıı+ ,
SetVerticesDirty
˜˜ 
(
˜˜ 
)
˜˜ 
;
˜˜ 
SetLayoutDirty
¯¯ 
(
¯¯ 
)
¯¯ 
;
¯¯ 
}
˘˘ 	
	protected
ÅÅ 
int
ÅÅ .
 CharArrayToInternalParsingBuffer
ÅÅ 6
(
ÅÅ6 7
char
ÅÅ7 ;
[
ÅÅ; <
]
ÅÅ< =

sourceText
ÅÅ> H
,
ÅÅH I
ref
ÅÅJ M
UnicodeChar
ÅÅN Y
[
ÅÅY Z
]
ÅÅZ ["
internalParsingArray
ÅÅ\ p
)
ÅÅp q
{
ÇÇ 	
int
ÉÉ 
characterCount
ÉÉ 
=
ÉÉ  

sourceText
ÉÉ! +
==
ÉÉ, .
null
ÉÉ/ 3
?
ÉÉ4 5
$num
ÉÉ6 7
:
ÉÉ8 9

sourceText
ÉÉ: D
.
ÉÉD E
Length
ÉÉE K
;
ÉÉK L
if
àà 
(
àà 
characterCount
àà 
==
àà !
$num
àà" #
)
àà# $
m_text
ââ 
=
ââ 
string
ââ 
.
ââ  
Empty
ââ  %
;
ââ% &
else
ää 
m_text
ãã 
=
ãã 
new
ãã 
string
ãã #
(
ãã# $

sourceText
ãã$ .
)
ãã. /
;
ãã/ 0
if
èè 
(
èè 
characterCount
èè 
==
èè !
$num
èè" #
)
èè# $
{
êê 
if
ëë 
(
ëë "
internalParsingArray
ëë (
!=
ëë) +
null
ëë, 0
)
ëë0 1"
internalParsingArray
íí (
[
íí( )
$num
íí) *
]
íí* +
.
íí+ ,
unicode
íí, 3
=
íí4 5
$num
íí6 7
;
íí7 8
return
îî 
$num
îî 
;
îî 
}
ïï 
if
òò 
(
òò "
internalParsingArray
òò $
==
òò% '
null
òò( ,
)
òò, -"
internalParsingArray
ôô $
=
ôô% &
new
ôô' *
UnicodeChar
ôô+ 6
[
ôô6 7
characterCount
ôô7 E
]
ôôE F
;
ôôF G
else
öö 
if
öö 
(
öö "
internalParsingArray
öö )
.
öö) *
Length
öö* 0
<
öö1 2
characterCount
öö3 A
)
ööA B!
ResizeInternalArray
õõ #
(
õõ# $
ref
õõ$ '"
internalParsingArray
õõ( <
,
õõ< =
characterCount
õõ> L
)
õõL M
;
õõM N
for
ûû 
(
ûû 
int
ûû 
j
ûû 
=
ûû 
$num
ûû 
;
ûû 
j
ûû 
<
ûû 
m_TextStyleStacks
ûû  1
.
ûû1 2
Length
ûû2 8
;
ûû8 9
j
ûû: ;
++
ûû; =
)
ûû= >
m_TextStyleStacks
üü !
[
üü! "
j
üü" #
]
üü# $
.
üü$ %

SetDefault
üü% /
(
üü/ 0
$num
üü0 1
)
üü1 2
;
üü2 3#
m_TextStyleStackDepth
°° !
=
°°" #
$num
°°$ %
;
°°% &
int
¢¢ 

writeIndex
¢¢ 
=
¢¢ 
$num
¢¢ 
;
¢¢ 
if
•• 
(
•• 
	textStyle
•• 
.
•• 
hashCode
•• "
!=
••# %
(
••& '
int
••' *
)
••* +
TagHashCode
••+ 6
.
••6 7
NORMAL
••7 =
)
••= >#
InsertOpeningStyleTag
¶¶ %
(
¶¶% &
m_TextStyle
¶¶& 1
,
¶¶1 2
$num
¶¶3 4
,
¶¶4 5
ref
¶¶6 9"
internalParsingArray
¶¶: N
,
¶¶N O
ref
¶¶P S

writeIndex
¶¶T ^
)
¶¶^ _
;
¶¶_ `
for
®® 
(
®® 
int
®® 
i
®® 
=
®® 
$num
®® 
;
®® 
i
®® 
<
®®  
m_charArray_Length
®®  2
;
®®2 3
i
®®4 5
++
®®5 7
)
®®7 8
{
©© 
if
´´ 
(
´´ 
char
´´ 
.
´´ 
IsHighSurrogate
´´ (
(
´´( )

sourceText
´´) 3
[
´´3 4
i
´´4 5
]
´´5 6
)
´´6 7
&&
´´8 :
char
´´; ?
.
´´? @
IsLowSurrogate
´´@ N
(
´´N O

sourceText
´´O Y
[
´´Y Z
i
´´Z [
+
´´\ ]
$num
´´^ _
]
´´_ `
)
´´` a
)
´´a b
{
¨¨ 
if
≠≠ 
(
≠≠ 

writeIndex
≠≠ "
==
≠≠# %"
internalParsingArray
≠≠& :
.
≠≠: ;
Length
≠≠; A
)
≠≠A B!
ResizeInternalArray
≠≠C V
(
≠≠V W
ref
≠≠W Z"
internalParsingArray
≠≠[ o
)
≠≠o p
;
≠≠p q"
internalParsingArray
ØØ (
[
ØØ( )

writeIndex
ØØ) 3
]
ØØ3 4
.
ØØ4 5
unicode
ØØ5 <
=
ØØ= >
char
ØØ? C
.
ØØC D
ConvertToUtf32
ØØD R
(
ØØR S

sourceText
ØØS ]
[
ØØ] ^
i
ØØ^ _
]
ØØ_ `
,
ØØ` a

sourceText
ØØb l
[
ØØl m
i
ØØm n
+
ØØo p
$num
ØØq r
]
ØØr s
)
ØØs t
;
ØØt u
i
∞∞ 
+=
∞∞ 
$num
∞∞ 
;
∞∞ 

writeIndex
±± 
+=
±± !
$num
±±" #
;
±±# $
continue
≤≤ 
;
≤≤ 
}
≥≥ 
if
∂∂ 
(
∂∂ 

sourceText
∂∂ 
[
∂∂ 
i
∂∂  
]
∂∂  !
==
∂∂" $
$num
∂∂% '
)
∂∂' (
{
∑∑ 
if
∏∏ 
(
∏∏ 
	IsTagName
∏∏ !
(
∏∏! "
ref
∏∏" %

sourceText
∏∏& 0
,
∏∏0 1
$str
∏∏2 8
,
∏∏8 9
i
∏∏: ;
)
∏∏; <
)
∏∏< =
{
ππ 
if
∫∫ 
(
∫∫ 

writeIndex
∫∫ &
==
∫∫' )"
internalParsingArray
∫∫* >
.
∫∫> ?
Length
∫∫? E
)
∫∫E F!
ResizeInternalArray
∫∫G Z
(
∫∫Z [
ref
∫∫[ ^"
internalParsingArray
∫∫_ s
)
∫∫s t
;
∫∫t u"
internalParsingArray
ºº ,
[
ºº, -

writeIndex
ºº- 7
]
ºº7 8
.
ºº8 9
unicode
ºº9 @
=
ººA B
$num
ººC E
;
ººE F

writeIndex
ΩΩ "
+=
ΩΩ# %
$num
ΩΩ& '
;
ΩΩ' (
i
ææ 
+=
ææ 
$num
ææ 
;
ææ 
continue
¿¿  
;
¿¿  !
}
¡¡ 
else
¬¬ 
if
¬¬ 
(
¬¬ 
	IsTagName
¬¬ &
(
¬¬& '
ref
¬¬' *

sourceText
¬¬+ 5
,
¬¬5 6
$str
¬¬7 ?
,
¬¬? @
i
¬¬A B
)
¬¬B C
)
¬¬C D
{
√√ 
if
ƒƒ 
(
ƒƒ 

writeIndex
ƒƒ &
==
ƒƒ' )"
internalParsingArray
ƒƒ* >
.
ƒƒ> ?
Length
ƒƒ? E
)
ƒƒE F!
ResizeInternalArray
ƒƒG Z
(
ƒƒZ [
ref
ƒƒ[ ^"
internalParsingArray
ƒƒ_ s
)
ƒƒs t
;
ƒƒt u"
internalParsingArray
∆∆ ,
[
∆∆, -

writeIndex
∆∆- 7
]
∆∆7 8
.
∆∆8 9
unicode
∆∆9 @
=
∆∆A B
$num
∆∆C F
;
∆∆F G

writeIndex
«« "
+=
««# %
$num
««& '
;
««' (
i
»» 
+=
»» 
$num
»» 
;
»» 
continue
    
;
    !
}
ÀÀ 
else
ÃÃ 
if
ÃÃ 
(
ÃÃ 
	IsTagName
ÃÃ &
(
ÃÃ& '
ref
ÃÃ' *

sourceText
ÃÃ+ 5
,
ÃÃ5 6
$str
ÃÃ7 ?
,
ÃÃ? @
i
ÃÃA B
)
ÃÃB C
)
ÃÃC D
{
ÕÕ 
if
ŒŒ 
(
ŒŒ 

writeIndex
ŒŒ &
==
ŒŒ' )%
m_InternalParsingBuffer
ŒŒ* A
.
ŒŒA B
Length
ŒŒB H
)
ŒŒH I!
ResizeInternalArray
ŒŒJ ]
(
ŒŒ] ^
ref
ŒŒ^ a%
m_InternalParsingBuffer
ŒŒb y
)
ŒŒy z
;
ŒŒz {%
m_InternalParsingBuffer
–– /
[
––/ 0

writeIndex
––0 :
]
––: ;
.
––; <
unicode
––< C
=
––D E
$num
––F L
;
––L M

writeIndex
—— "
+=
——# %
$num
——& '
;
——' (
i
““ 
+=
““ 
$num
““ 
;
““ 
continue
‘‘  
;
‘‘  !
}
’’ 
else
÷÷ 
if
÷÷ 
(
÷÷ 
	IsTagName
÷÷ &
(
÷÷& '
ref
÷÷' *

sourceText
÷÷+ 5
,
÷÷5 6
$str
÷÷7 @
,
÷÷@ A
i
÷÷B C
)
÷÷C D
)
÷÷D E
{
◊◊ 
int
ÿÿ 
	srcOffset
ÿÿ %
;
ÿÿ% &
if
ŸŸ 
(
ŸŸ $
ReplaceOpeningStyleTag
ŸŸ 2
(
ŸŸ2 3
ref
ŸŸ3 6

sourceText
ŸŸ7 A
,
ŸŸA B
i
ŸŸC D
,
ŸŸD E
out
ŸŸF I
	srcOffset
ŸŸJ S
,
ŸŸS T
ref
ŸŸU X"
internalParsingArray
ŸŸY m
,
ŸŸm n
ref
ŸŸo r

writeIndex
ŸŸs }
)
ŸŸ} ~
)
ŸŸ~ 
{
⁄⁄ 
i
€€ 
=
€€ 
	srcOffset
€€  )
;
€€) *
continue
‹‹ $
;
‹‹$ %
}
›› 
}
ﬁﬁ 
else
ﬂﬂ 
if
ﬂﬂ 
(
ﬂﬂ 
	IsTagName
ﬂﬂ &
(
ﬂﬂ& '
ref
ﬂﬂ' *

sourceText
ﬂﬂ+ 5
,
ﬂﬂ5 6
$str
ﬂﬂ7 A
,
ﬂﬂA B
i
ﬂﬂC D
)
ﬂﬂD E
)
ﬂﬂE F
{
‡‡ $
ReplaceClosingStyleTag
·· .
(
··. /
ref
··/ 2

sourceText
··3 =
,
··= >
i
··? @
,
··@ A
ref
··B E"
internalParsingArray
··F Z
,
··Z [
ref
··\ _

writeIndex
··` j
)
··j k
;
··k l
i
‰‰ 
+=
‰‰ 
$num
‰‰ 
;
‰‰ 
continue
ÂÂ  
;
ÂÂ  !
}
ÊÊ 
}
ÁÁ 
if
ÈÈ 
(
ÈÈ 

writeIndex
ÈÈ 
==
ÈÈ !"
internalParsingArray
ÈÈ" 6
.
ÈÈ6 7
Length
ÈÈ7 =
)
ÈÈ= >!
ResizeInternalArray
ÈÈ? R
(
ÈÈR S
ref
ÈÈS V"
internalParsingArray
ÈÈW k
)
ÈÈk l
;
ÈÈl m"
internalParsingArray
ÎÎ $
[
ÎÎ$ %

writeIndex
ÎÎ% /
]
ÎÎ/ 0
.
ÎÎ0 1
unicode
ÎÎ1 8
=
ÎÎ9 :

sourceText
ÎÎ; E
[
ÎÎE F
i
ÎÎF G
]
ÎÎG H
;
ÎÎH I

writeIndex
ÏÏ 
+=
ÏÏ 
$num
ÏÏ 
;
ÏÏ  
}
ÌÌ #
m_TextStyleStackDepth
ÔÔ !
=
ÔÔ" #
$num
ÔÔ$ %
;
ÔÔ% &
if
ÚÚ 
(
ÚÚ 
	textStyle
ÚÚ 
.
ÚÚ 
hashCode
ÚÚ "
!=
ÚÚ# %
(
ÚÚ& '
int
ÚÚ' *
)
ÚÚ* +
TagHashCode
ÚÚ+ 6
.
ÚÚ6 7
NORMAL
ÚÚ7 =
)
ÚÚ= >#
InsertClosingStyleTag
ÛÛ %
(
ÛÛ% &
ref
ÛÛ& )"
internalParsingArray
ÛÛ* >
,
ÛÛ> ?
ref
ÛÛ@ C

writeIndex
ÛÛD N
)
ÛÛN O
;
ÛÛO P
if
ıı 
(
ıı 

writeIndex
ıı 
==
ıı "
internalParsingArray
ıı 2
.
ıı2 3
Length
ıı3 9
)
ıı9 :!
ResizeInternalArray
ıı; N
(
ııN O
ref
ııO R"
internalParsingArray
ııS g
)
ııg h
;
ııh i"
internalParsingArray
˜˜  
[
˜˜  !

writeIndex
˜˜! +
]
˜˜+ ,
.
˜˜, -
unicode
˜˜- 4
=
˜˜5 6
$num
˜˜7 8
;
˜˜8 9
return
˘˘ 

writeIndex
˘˘ 
;
˘˘ 
}
˙˙ 	
	protected
ÇÇ 
int
ÇÇ +
StringToInternalParsingBuffer
ÇÇ 3
(
ÇÇ3 4
string
ÇÇ4 :

sourceText
ÇÇ; E
,
ÇÇE F
ref
ÇÇG J
UnicodeChar
ÇÇK V
[
ÇÇV W
]
ÇÇW X"
internalParsingArray
ÇÇY m
)
ÇÇm n
{
ÉÉ 	
int
ÑÑ 
characterCount
ÑÑ 
=
ÑÑ  

sourceText
ÑÑ! +
==
ÑÑ, .
null
ÑÑ/ 3
?
ÑÑ4 5
$num
ÑÑ6 7
:
ÑÑ8 9

sourceText
ÑÑ: D
.
ÑÑD E
Length
ÑÑE K
;
ÑÑK L
if
áá 
(
áá 
characterCount
áá 
==
áá !
$num
áá" #
)
áá# $
{
àà 
if
ââ 
(
ââ "
internalParsingArray
ââ (
!=
ââ) +
null
ââ, 0
)
ââ0 1"
internalParsingArray
ää (
[
ää( )
$num
ää) *
]
ää* +
.
ää+ ,
unicode
ää, 3
=
ää4 5
$num
ää6 7
;
ää7 8
return
åå 
$num
åå 
;
åå 
}
çç 
if
êê 
(
êê "
internalParsingArray
êê $
==
êê% '
null
êê( ,
)
êê, -"
internalParsingArray
ëë $
=
ëë% &
new
ëë' *
UnicodeChar
ëë+ 6
[
ëë6 7
characterCount
ëë7 E
]
ëëE F
;
ëëF G
else
íí 
if
íí 
(
íí "
internalParsingArray
íí )
.
íí) *
Length
íí* 0
<
íí1 2
characterCount
íí3 A
)
ííA B!
ResizeInternalArray
ìì #
(
ìì# $
ref
ìì$ '"
internalParsingArray
ìì( <
,
ìì< =
characterCount
ìì> L
)
ììL M
;
ììM N
for
ññ 
(
ññ 
int
ññ 
j
ññ 
=
ññ 
$num
ññ 
;
ññ 
j
ññ 
<
ññ 
m_TextStyleStacks
ññ  1
.
ññ1 2
Length
ññ2 8
;
ññ8 9
j
ññ: ;
++
ññ; =
)
ññ= >
m_TextStyleStacks
óó !
[
óó! "
j
óó" #
]
óó# $
.
óó$ %

SetDefault
óó% /
(
óó/ 0
$num
óó0 1
)
óó1 2
;
óó2 3#
m_TextStyleStackDepth
ôô !
=
ôô" #
$num
ôô$ %
;
ôô% &
int
öö 

writeIndex
öö 
=
öö 
$num
öö 
;
öö 
if
ùù 
(
ùù 
	textStyle
ùù 
.
ùù 
hashCode
ùù "
!=
ùù# %
(
ùù& '
int
ùù' *
)
ùù* +
TagHashCode
ùù+ 6
.
ùù6 7
NORMAL
ùù7 =
)
ùù= >#
InsertOpeningStyleTag
ûû %
(
ûû% &
m_TextStyle
ûû& 1
,
ûû1 2
$num
ûû3 4
,
ûû4 5
ref
ûû6 9"
internalParsingArray
ûû: N
,
ûûN O
ref
ûûP S

writeIndex
ûûT ^
)
ûû^ _
;
ûû_ `
for
†† 
(
†† 
int
†† 
i
†† 
=
†† 
$num
†† 
;
†† 
i
†† 
<
†† 

sourceText
††  *
.
††* +
Length
††+ 1
;
††1 2
i
††3 4
++
††4 6
)
††6 7
{
°° 
if
¢¢ 
(
¢¢ 
m_inputSource
¢¢ !
==
¢¢" $
TextInputSources
¢¢% 5
.
¢¢5 6
Text
¢¢6 :
&&
¢¢; =

sourceText
¢¢> H
[
¢¢H I
i
¢¢I J
]
¢¢J K
==
¢¢L N
$num
¢¢O Q
&&
¢¢R T

sourceText
¢¢U _
.
¢¢_ `
Length
¢¢` f
>
¢¢g h
i
¢¢i j
+
¢¢k l
$num
¢¢m n
)
¢¢n o
{
££ 
switch
§§ 
(
§§ 
(
§§ 
int
§§  
)
§§  !

sourceText
§§! +
[
§§+ ,
i
§§, -
+
§§. /
$num
§§0 1
]
§§1 2
)
§§2 3
{
•• 
case
¶¶ 
$num
¶¶ 
:
¶¶  
if
ßß 
(
ßß  

sourceText
ßß  *
.
ßß* +
Length
ßß+ 1
>
ßß2 3
i
ßß4 5
+
ßß6 7
$num
ßß8 9
)
ßß9 :
{
®® 
if
©©  "
(
©©# $

writeIndex
©©$ .
==
©©/ 1"
internalParsingArray
©©2 F
.
©©F G
Length
©©G M
)
©©M N!
ResizeInternalArray
©©O b
(
©©b c
ref
©©c f"
internalParsingArray
©©g {
)
©©{ |
;
©©| }"
internalParsingArray
´´  4
[
´´4 5

writeIndex
´´5 ?
]
´´? @
.
´´@ A
unicode
´´A H
=
´´I J
GetUTF32
´´K S
(
´´S T

sourceText
´´T ^
,
´´^ _
i
´´` a
+
´´b c
$num
´´d e
)
´´e f
;
´´f g"
internalParsingArray
¨¨  4
[
¨¨4 5

writeIndex
¨¨5 ?
]
¨¨? @
.
¨¨@ A
stringIndex
¨¨A L
=
¨¨M N
i
¨¨O P
;
¨¨P Q"
internalParsingArray
≠≠  4
[
≠≠4 5

writeIndex
≠≠5 ?
]
≠≠? @
.
≠≠@ A
length
≠≠A G
=
≠≠H I
$num
≠≠J L
;
≠≠L M
i
ØØ  !
+=
ØØ" $
$num
ØØ% &
;
ØØ& '

writeIndex
∞∞  *
+=
∞∞+ -
$num
∞∞. /
;
∞∞/ 0
continue
±±  (
;
±±( )
}
≤≤ 
break
≥≥ !
;
≥≥! "
case
¥¥ 
$num
¥¥ 
:
¥¥  
if
µµ 
(
µµ  
!
µµ  !#
m_parseCtrlCharacters
µµ! 6
)
µµ6 7
break
µµ8 =
;
µµ= >
if
∑∑ 
(
∑∑  

sourceText
∑∑  *
.
∑∑* +
Length
∑∑+ 1
<=
∑∑2 4
i
∑∑5 6
+
∑∑7 8
$num
∑∑9 :
)
∑∑: ;
break
∑∑< A
;
∑∑A B
if
ππ 
(
ππ  

writeIndex
ππ  *
+
ππ+ ,
$num
ππ- .
>
ππ/ 0"
internalParsingArray
ππ1 E
.
ππE F
Length
ππF L
)
ππL M!
ResizeInternalArray
ππN a
(
ππa b
ref
ππb e"
internalParsingArray
ππf z
)
ππz {
;
ππ{ |"
internalParsingArray
ªª 0
[
ªª0 1

writeIndex
ªª1 ;
]
ªª; <
.
ªª< =
unicode
ªª= D
=
ªªE F

sourceText
ªªG Q
[
ªªQ R
i
ªªR S
+
ªªT U
$num
ªªV W
]
ªªW X
;
ªªX Y"
internalParsingArray
ºº 0
[
ºº0 1

writeIndex
ºº1 ;
+
ºº< =
$num
ºº> ?
]
ºº? @
.
ºº@ A
unicode
ººA H
=
ººI J

sourceText
ººK U
[
ººU V
i
ººV W
+
ººX Y
$num
ººZ [
]
ºº[ \
;
ºº\ ]
i
ΩΩ 
+=
ΩΩ  
$num
ΩΩ! "
;
ΩΩ" #

writeIndex
ææ &
+=
ææ' )
$num
ææ* +
;
ææ+ ,
continue
øø $
;
øø$ %
case
¿¿ 
$num
¿¿  
:
¿¿  !
if
¡¡ 
(
¡¡  
!
¡¡  !#
m_parseCtrlCharacters
¡¡! 6
)
¡¡6 7
break
¡¡8 =
;
¡¡= >
if
√√ 
(
√√  

writeIndex
√√  *
==
√√+ -"
internalParsingArray
√√. B
.
√√B C
Length
√√C I
)
√√I J!
ResizeInternalArray
√√K ^
(
√√^ _
ref
√√_ b"
internalParsingArray
√√c w
)
√√w x
;
√√x y"
internalParsingArray
≈≈ 0
[
≈≈0 1

writeIndex
≈≈1 ;
]
≈≈; <
.
≈≈< =
unicode
≈≈= D
=
≈≈E F
$num
≈≈G I
;
≈≈I J"
internalParsingArray
∆∆ 0
[
∆∆0 1

writeIndex
∆∆1 ;
]
∆∆; <
.
∆∆< =
stringIndex
∆∆= H
=
∆∆I J
i
∆∆K L
;
∆∆L M"
internalParsingArray
«« 0
[
««0 1

writeIndex
««1 ;
]
««; <
.
««< =
length
««= C
=
««D E
$num
««F G
;
««G H
i
…… 
+=
……  
$num
……! "
;
……" #

writeIndex
   &
+=
  ' )
$num
  * +
;
  + ,
continue
ÀÀ $
;
ÀÀ$ %
case
ÃÃ 
$num
ÃÃ  
:
ÃÃ  !
if
ÕÕ 
(
ÕÕ  
!
ÕÕ  !#
m_parseCtrlCharacters
ÕÕ! 6
)
ÕÕ6 7
break
ÕÕ8 =
;
ÕÕ= >
if
œœ 
(
œœ  

writeIndex
œœ  *
==
œœ+ -"
internalParsingArray
œœ. B
.
œœB C
Length
œœC I
)
œœI J!
ResizeInternalArray
œœK ^
(
œœ^ _
ref
œœ_ b"
internalParsingArray
œœc w
)
œœw x
;
œœx y"
internalParsingArray
—— 0
[
——0 1

writeIndex
——1 ;
]
——; <
.
——< =
unicode
——= D
=
——E F
$num
——G I
;
——I J"
internalParsingArray
““ 0
[
““0 1

writeIndex
““1 ;
]
““; <
.
““< =
stringIndex
““= H
=
““I J
i
““K L
;
““L M"
internalParsingArray
”” 0
[
””0 1

writeIndex
””1 ;
]
””; <
.
””< =
length
””= C
=
””D E
$num
””F G
;
””G H
i
’’ 
+=
’’  
$num
’’! "
;
’’" #

writeIndex
÷÷ &
+=
÷÷' )
$num
÷÷* +
;
÷÷+ ,
continue
◊◊ $
;
◊◊$ %
case
ÿÿ 
$num
ÿÿ  
:
ÿÿ  !
if
ŸŸ 
(
ŸŸ  
!
ŸŸ  !#
m_parseCtrlCharacters
ŸŸ! 6
)
ŸŸ6 7
break
ŸŸ8 =
;
ŸŸ= >
if
€€ 
(
€€  

writeIndex
€€  *
==
€€+ -"
internalParsingArray
€€. B
.
€€B C
Length
€€C I
)
€€I J!
ResizeInternalArray
€€K ^
(
€€^ _
ref
€€_ b"
internalParsingArray
€€c w
)
€€w x
;
€€x y"
internalParsingArray
›› 0
[
››0 1

writeIndex
››1 ;
]
››; <
.
››< =
unicode
››= D
=
››E F
$num
››G H
;
››H I"
internalParsingArray
ﬁﬁ 0
[
ﬁﬁ0 1

writeIndex
ﬁﬁ1 ;
]
ﬁﬁ; <
.
ﬁﬁ< =
stringIndex
ﬁﬁ= H
=
ﬁﬁI J
i
ﬁﬁK L
;
ﬁﬁL M"
internalParsingArray
ﬂﬂ 0
[
ﬂﬂ0 1

writeIndex
ﬂﬂ1 ;
]
ﬂﬂ; <
.
ﬂﬂ< =
length
ﬂﬂ= C
=
ﬂﬂD E
$num
ﬂﬂF G
;
ﬂﬂG H
i
·· 
+=
··  
$num
··! "
;
··" #

writeIndex
‚‚ &
+=
‚‚' )
$num
‚‚* +
;
‚‚+ ,
continue
„„ $
;
„„$ %
case
‰‰ 
$num
‰‰  
:
‰‰  !
if
ÂÂ 
(
ÂÂ  

sourceText
ÂÂ  *
.
ÂÂ* +
Length
ÂÂ+ 1
>
ÂÂ2 3
i
ÂÂ4 5
+
ÂÂ6 7
$num
ÂÂ8 9
)
ÂÂ9 :
{
ÊÊ 
if
ÁÁ  "
(
ÁÁ# $

writeIndex
ÁÁ$ .
==
ÁÁ/ 1"
internalParsingArray
ÁÁ2 F
.
ÁÁF G
Length
ÁÁG M
)
ÁÁM N!
ResizeInternalArray
ÁÁO b
(
ÁÁb c
ref
ÁÁc f"
internalParsingArray
ÁÁg {
)
ÁÁ{ |
;
ÁÁ| }"
internalParsingArray
ÈÈ  4
[
ÈÈ4 5

writeIndex
ÈÈ5 ?
]
ÈÈ? @
.
ÈÈ@ A
unicode
ÈÈA H
=
ÈÈI J
GetUTF16
ÈÈK S
(
ÈÈS T

sourceText
ÈÈT ^
,
ÈÈ^ _
i
ÈÈ` a
+
ÈÈb c
$num
ÈÈd e
)
ÈÈe f
;
ÈÈf g"
internalParsingArray
ÍÍ  4
[
ÍÍ4 5

writeIndex
ÍÍ5 ?
]
ÍÍ? @
.
ÍÍ@ A
stringIndex
ÍÍA L
=
ÍÍM N
i
ÍÍO P
;
ÍÍP Q"
internalParsingArray
ÎÎ  4
[
ÎÎ4 5

writeIndex
ÎÎ5 ?
]
ÎÎ? @
.
ÎÎ@ A
length
ÎÎA G
=
ÎÎH I
$num
ÎÎJ K
;
ÎÎK L
i
ÌÌ  !
+=
ÌÌ" $
$num
ÌÌ% &
;
ÌÌ& '

writeIndex
ÓÓ  *
+=
ÓÓ+ -
$num
ÓÓ. /
;
ÓÓ/ 0
continue
ÔÔ  (
;
ÔÔ( )
}
 
break
ÒÒ !
;
ÒÒ! "
case
ÚÚ 
$num
ÚÚ  
:
ÚÚ  !
if
ÛÛ 
(
ÛÛ  
!
ÛÛ  !#
m_parseCtrlCharacters
ÛÛ! 6
)
ÛÛ6 7
break
ÛÛ8 =
;
ÛÛ= >
if
ıı 
(
ıı  

writeIndex
ıı  *
==
ıı+ -"
internalParsingArray
ıı. B
.
ııB C
Length
ııC I
)
ııI J!
ResizeInternalArray
ııK ^
(
ıı^ _
ref
ıı_ b"
internalParsingArray
ııc w
)
ııw x
;
ııx y"
internalParsingArray
˜˜ 0
[
˜˜0 1

writeIndex
˜˜1 ;
]
˜˜; <
.
˜˜< =
unicode
˜˜= D
=
˜˜E F
$num
˜˜G I
;
˜˜I J"
internalParsingArray
¯¯ 0
[
¯¯0 1

writeIndex
¯¯1 ;
]
¯¯; <
.
¯¯< =
stringIndex
¯¯= H
=
¯¯I J
i
¯¯K L
;
¯¯L M"
internalParsingArray
˘˘ 0
[
˘˘0 1

writeIndex
˘˘1 ;
]
˘˘; <
.
˘˘< =
length
˘˘= C
=
˘˘D E
$num
˘˘F G
;
˘˘G H
i
˚˚ 
+=
˚˚  
$num
˚˚! "
;
˚˚" #

writeIndex
¸¸ &
+=
¸¸' )
$num
¸¸* +
;
¸¸+ ,
continue
˝˝ $
;
˝˝$ %
}
˛˛ 
}
ˇˇ 
if
ÇÇ 
(
ÇÇ 
char
ÇÇ 
.
ÇÇ 
IsHighSurrogate
ÇÇ (
(
ÇÇ( )

sourceText
ÇÇ) 3
[
ÇÇ3 4
i
ÇÇ4 5
]
ÇÇ5 6
)
ÇÇ6 7
&&
ÇÇ8 :
char
ÇÇ; ?
.
ÇÇ? @
IsLowSurrogate
ÇÇ@ N
(
ÇÇN O

sourceText
ÇÇO Y
[
ÇÇY Z
i
ÇÇZ [
+
ÇÇ\ ]
$num
ÇÇ^ _
]
ÇÇ_ `
)
ÇÇ` a
)
ÇÇa b
{
ÉÉ 
if
ÑÑ 
(
ÑÑ 

writeIndex
ÑÑ "
==
ÑÑ# %"
internalParsingArray
ÑÑ& :
.
ÑÑ: ;
Length
ÑÑ; A
)
ÑÑA B!
ResizeInternalArray
ÑÑC V
(
ÑÑV W
ref
ÑÑW Z"
internalParsingArray
ÑÑ[ o
)
ÑÑo p
;
ÑÑp q"
internalParsingArray
ÜÜ (
[
ÜÜ( )

writeIndex
ÜÜ) 3
]
ÜÜ3 4
.
ÜÜ4 5
unicode
ÜÜ5 <
=
ÜÜ= >
char
ÜÜ? C
.
ÜÜC D
ConvertToUtf32
ÜÜD R
(
ÜÜR S

sourceText
ÜÜS ]
[
ÜÜ] ^
i
ÜÜ^ _
]
ÜÜ_ `
,
ÜÜ` a

sourceText
ÜÜb l
[
ÜÜl m
i
ÜÜm n
+
ÜÜo p
$num
ÜÜq r
]
ÜÜr s
)
ÜÜs t
;
ÜÜt u"
internalParsingArray
áá (
[
áá( )

writeIndex
áá) 3
]
áá3 4
.
áá4 5
stringIndex
áá5 @
=
ááA B
i
ááC D
;
ááD E"
internalParsingArray
àà (
[
àà( )

writeIndex
àà) 3
]
àà3 4
.
àà4 5
length
àà5 ;
=
àà< =
$num
àà> ?
;
àà? @
i
ää 
+=
ää 
$num
ää 
;
ää 

writeIndex
ãã 
+=
ãã !
$num
ãã" #
;
ãã# $
continue
åå 
;
åå 
}
çç 
if
êê 
(
êê 

sourceText
êê 
[
êê 
i
êê  
]
êê  !
==
êê" $
$num
êê% '
&&
êê( *
m_isRichText
êê+ 7
)
êê7 8
{
ëë 
if
íí 
(
íí 
	IsTagName
íí !
(
íí! "
ref
íí" %

sourceText
íí& 0
,
íí0 1
$str
íí2 8
,
íí8 9
i
íí: ;
)
íí; <
)
íí< =
{
ìì 
if
îî 
(
îî 

writeIndex
îî &
==
îî' )"
internalParsingArray
îî* >
.
îî> ?
Length
îî? E
)
îîE F!
ResizeInternalArray
îîG Z
(
îîZ [
ref
îî[ ^"
internalParsingArray
îî_ s
)
îîs t
;
îît u"
internalParsingArray
ññ ,
[
ññ, -

writeIndex
ññ- 7
]
ññ7 8
.
ññ8 9
unicode
ññ9 @
=
ññA B
$num
ññC E
;
ññE F"
internalParsingArray
óó ,
[
óó, -

writeIndex
óó- 7
]
óó7 8
.
óó8 9
stringIndex
óó9 D
=
óóE F
i
óóG H
;
óóH I"
internalParsingArray
òò ,
[
òò, -

writeIndex
òò- 7
]
òò7 8
.
òò8 9
length
òò9 ?
=
òò@ A
$num
òòB C
;
òòC D

writeIndex
öö "
+=
öö# %
$num
öö& '
;
öö' (
i
õõ 
+=
õõ 
$num
õõ 
;
õõ 
continue
ùù  
;
ùù  !
}
ûû 
else
üü 
if
üü 
(
üü 
	IsTagName
üü &
(
üü& '
ref
üü' *

sourceText
üü+ 5
,
üü5 6
$str
üü7 ?
,
üü? @
i
üüA B
)
üüB C
)
üüC D
{
†† 
if
°° 
(
°° 

writeIndex
°° &
==
°°' )"
internalParsingArray
°°* >
.
°°> ?
Length
°°? E
)
°°E F!
ResizeInternalArray
°°G Z
(
°°Z [
ref
°°[ ^"
internalParsingArray
°°_ s
)
°°s t
;
°°t u"
internalParsingArray
££ ,
[
££, -

writeIndex
££- 7
]
££7 8
.
££8 9
unicode
££9 @
=
££A B
$num
££C F
;
££F G"
internalParsingArray
§§ ,
[
§§, -

writeIndex
§§- 7
]
§§7 8
.
§§8 9
stringIndex
§§9 D
=
§§E F
i
§§G H
;
§§H I"
internalParsingArray
•• ,
[
••, -

writeIndex
••- 7
]
••7 8
.
••8 9
length
••9 ?
=
••@ A
$num
••B C
;
••C D

writeIndex
ßß "
+=
ßß# %
$num
ßß& '
;
ßß' (
i
®® 
+=
®® 
$num
®® 
;
®® 
continue
™™  
;
™™  !
}
´´ 
else
¨¨ 
if
¨¨ 
(
¨¨ 
	IsTagName
¨¨ &
(
¨¨& '
ref
¨¨' *

sourceText
¨¨+ 5
,
¨¨5 6
$str
¨¨7 ?
,
¨¨? @
i
¨¨A B
)
¨¨B C
)
¨¨C D
{
≠≠ 
if
ÆÆ 
(
ÆÆ 

writeIndex
ÆÆ &
==
ÆÆ' )"
internalParsingArray
ÆÆ* >
.
ÆÆ> ?
Length
ÆÆ? E
)
ÆÆE F!
ResizeInternalArray
ÆÆG Z
(
ÆÆZ [
ref
ÆÆ[ ^"
internalParsingArray
ÆÆ_ s
)
ÆÆs t
;
ÆÆt u"
internalParsingArray
∞∞ ,
[
∞∞, -

writeIndex
∞∞- 7
]
∞∞7 8
.
∞∞8 9
unicode
∞∞9 @
=
∞∞A B
$num
∞∞C I
;
∞∞I J"
internalParsingArray
±± ,
[
±±, -

writeIndex
±±- 7
]
±±7 8
.
±±8 9
stringIndex
±±9 D
=
±±E F
i
±±G H
;
±±H I"
internalParsingArray
≤≤ ,
[
≤≤, -

writeIndex
≤≤- 7
]
≤≤7 8
.
≤≤8 9
length
≤≤9 ?
=
≤≤@ A
$num
≤≤B C
;
≤≤C D

writeIndex
¥¥ "
+=
¥¥# %
$num
¥¥& '
;
¥¥' (
i
µµ 
+=
µµ 
$num
µµ 
;
µµ 
continue
∑∑  
;
∑∑  !
}
∏∏ 
else
ππ 
if
ππ 
(
ππ 
	IsTagName
ππ &
(
ππ& '
ref
ππ' *

sourceText
ππ+ 5
,
ππ5 6
$str
ππ7 @
,
ππ@ A
i
ππB C
)
ππC D
)
ππD E
{
∫∫ 
int
ªª 
	srcOffset
ªª %
;
ªª% &
if
ºº 
(
ºº $
ReplaceOpeningStyleTag
ºº 2
(
ºº2 3
ref
ºº3 6

sourceText
ºº7 A
,
ººA B
i
ººC D
,
ººD E
out
ººF I
	srcOffset
ººJ S
,
ººS T
ref
ººU X"
internalParsingArray
ººY m
,
ººm n
ref
ººo r

writeIndex
ººs }
)
ºº} ~
)
ºº~ 
{
ΩΩ 
i
ææ 
=
ææ 
	srcOffset
ææ  )
;
ææ) *
continue
øø $
;
øø$ %
}
¿¿ 
}
¡¡ 
else
¬¬ 
if
¬¬ 
(
¬¬ 
	IsTagName
¬¬ &
(
¬¬& '
ref
¬¬' *

sourceText
¬¬+ 5
,
¬¬5 6
$str
¬¬7 A
,
¬¬A B
i
¬¬C D
)
¬¬D E
)
¬¬E F
{
√√ $
ReplaceClosingStyleTag
ƒƒ .
(
ƒƒ. /
ref
ƒƒ/ 2

sourceText
ƒƒ3 =
,
ƒƒ= >
i
ƒƒ? @
,
ƒƒ@ A
ref
ƒƒB E"
internalParsingArray
ƒƒF Z
,
ƒƒZ [
ref
ƒƒ\ _

writeIndex
ƒƒ` j
)
ƒƒj k
;
ƒƒk l
i
∆∆ 
+=
∆∆ 
$num
∆∆ 
;
∆∆ 
continue
««  
;
««  !
}
»» 
}
…… 
if
ÀÀ 
(
ÀÀ 

writeIndex
ÀÀ 
==
ÀÀ !"
internalParsingArray
ÀÀ" 6
.
ÀÀ6 7
Length
ÀÀ7 =
)
ÀÀ= >!
ResizeInternalArray
ÀÀ? R
(
ÀÀR S
ref
ÀÀS V"
internalParsingArray
ÀÀW k
)
ÀÀk l
;
ÀÀl m"
internalParsingArray
ÕÕ $
[
ÕÕ$ %

writeIndex
ÕÕ% /
]
ÕÕ/ 0
.
ÕÕ0 1
unicode
ÕÕ1 8
=
ÕÕ9 :

sourceText
ÕÕ; E
[
ÕÕE F
i
ÕÕF G
]
ÕÕG H
;
ÕÕH I"
internalParsingArray
ŒŒ $
[
ŒŒ$ %

writeIndex
ŒŒ% /
]
ŒŒ/ 0
.
ŒŒ0 1
stringIndex
ŒŒ1 <
=
ŒŒ= >

writeIndex
ŒŒ? I
;
ŒŒI J"
internalParsingArray
œœ $
[
œœ$ %

writeIndex
œœ% /
]
œœ/ 0
.
œœ0 1
length
œœ1 7
=
œœ8 9
$num
œœ: ;
;
œœ; <

writeIndex
—— 
+=
—— 
$num
—— 
;
——  
}
““ #
m_TextStyleStackDepth
‘‘ !
=
‘‘" #
$num
‘‘$ %
;
‘‘% &
if
◊◊ 
(
◊◊ 
	textStyle
◊◊ 
.
◊◊ 
hashCode
◊◊ "
!=
◊◊# %
(
◊◊& '
int
◊◊' *
)
◊◊* +
TagHashCode
◊◊+ 6
.
◊◊6 7
NORMAL
◊◊7 =
)
◊◊= >#
InsertClosingStyleTag
ÿÿ %
(
ÿÿ% &
ref
ÿÿ& )"
internalParsingArray
ÿÿ* >
,
ÿÿ> ?
ref
ÿÿ@ C

writeIndex
ÿÿD N
)
ÿÿN O
;
ÿÿO P
if
⁄⁄ 
(
⁄⁄ 

writeIndex
⁄⁄ 
==
⁄⁄ "
internalParsingArray
⁄⁄ 2
.
⁄⁄2 3
Length
⁄⁄3 9
)
⁄⁄9 :!
ResizeInternalArray
⁄⁄; N
(
⁄⁄N O
ref
⁄⁄O R"
internalParsingArray
⁄⁄S g
)
⁄⁄g h
;
⁄⁄h i"
internalParsingArray
‹‹  
[
‹‹  !

writeIndex
‹‹! +
]
‹‹+ ,
.
‹‹, -
unicode
‹‹- 4
=
‹‹5 6
$num
‹‹7 8
;
‹‹8 9
return
›› 

writeIndex
›› 
;
›› 
}
ﬁﬁ 	
	protected
ÊÊ 
int
ÊÊ 2
$StringBuilderToInternalParsingBuffer
ÊÊ :
(
ÊÊ: ;
StringBuilder
ÊÊ; H

sourceText
ÊÊI S
,
ÊÊS T
ref
ÊÊU X
UnicodeChar
ÊÊY d
[
ÊÊd e
]
ÊÊe f"
internalParsingArray
ÊÊg {
)
ÊÊ{ |
{
ÁÁ 	
int
ËË 
characterCount
ËË 
=
ËË  

sourceText
ËË! +
==
ËË, .
null
ËË/ 3
?
ËË4 5
$num
ËË6 7
:
ËË8 9

sourceText
ËË: D
.
ËËD E
Length
ËËE K
;
ËËK L
if
ÌÌ 
(
ÌÌ 
characterCount
ÌÌ 
==
ÌÌ !
$num
ÌÌ" #
)
ÌÌ# $
m_text
ÓÓ 
=
ÓÓ 
string
ÓÓ 
.
ÓÓ  
Empty
ÓÓ  %
;
ÓÓ% &
else
ÔÔ 
m_text
 
=
 

sourceText
 #
.
# $
ToString
$ ,
(
, -
)
- .
;
. /
if
ÙÙ 
(
ÙÙ 
characterCount
ÙÙ 
==
ÙÙ !
$num
ÙÙ" #
)
ÙÙ# $
{
ıı 
if
ˆˆ 
(
ˆˆ "
internalParsingArray
ˆˆ (
!=
ˆˆ) +
null
ˆˆ, 0
)
ˆˆ0 1"
internalParsingArray
˜˜ (
[
˜˜( )
$num
˜˜) *
]
˜˜* +
.
˜˜+ ,
unicode
˜˜, 3
=
˜˜4 5
$num
˜˜6 7
;
˜˜7 8
return
˘˘ 
$num
˘˘ 
;
˘˘ 
}
˙˙ 
if
˝˝ 
(
˝˝ "
internalParsingArray
˝˝ $
==
˝˝% '
null
˝˝( ,
)
˝˝, -"
internalParsingArray
˛˛ $
=
˛˛% &
new
˛˛' *
UnicodeChar
˛˛+ 6
[
˛˛6 7
characterCount
˛˛7 E
]
˛˛E F
;
˛˛F G
else
ˇˇ 
if
ˇˇ 
(
ˇˇ "
internalParsingArray
ˇˇ )
.
ˇˇ) *
Length
ˇˇ* 0
<
ˇˇ1 2
characterCount
ˇˇ3 A
)
ˇˇA B!
ResizeInternalArray
ÄÄ #
(
ÄÄ# $
ref
ÄÄ$ '"
internalParsingArray
ÄÄ( <
,
ÄÄ< =
characterCount
ÄÄ> L
)
ÄÄL M
;
ÄÄM N
for
ÉÉ 
(
ÉÉ 
int
ÉÉ 
j
ÉÉ 
=
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
j
ÉÉ 
<
ÉÉ 
m_TextStyleStacks
ÉÉ  1
.
ÉÉ1 2
Length
ÉÉ2 8
;
ÉÉ8 9
j
ÉÉ: ;
++
ÉÉ; =
)
ÉÉ= >
m_TextStyleStacks
ÑÑ !
[
ÑÑ! "
j
ÑÑ" #
]
ÑÑ# $
.
ÑÑ$ %

SetDefault
ÑÑ% /
(
ÑÑ/ 0
$num
ÑÑ0 1
)
ÑÑ1 2
;
ÑÑ2 3#
m_TextStyleStackDepth
ÜÜ !
=
ÜÜ" #
$num
ÜÜ$ %
;
ÜÜ% &
int
áá 

writeIndex
áá 
=
áá 
$num
áá 
;
áá 
if
ää 
(
ää 
	textStyle
ää 
.
ää 
hashCode
ää "
!=
ää# %
(
ää& '
int
ää' *
)
ää* +
TagHashCode
ää+ 6
.
ää6 7
NORMAL
ää7 =
)
ää= >#
InsertOpeningStyleTag
ãã %
(
ãã% &
m_TextStyle
ãã& 1
,
ãã1 2
$num
ãã3 4
,
ãã4 5
ref
ãã6 9"
internalParsingArray
ãã: N
,
ããN O
ref
ããP S

writeIndex
ããT ^
)
ãã^ _
;
ãã_ `
for
çç 
(
çç 
int
çç 
i
çç 
=
çç 
$num
çç 
;
çç 
i
çç 
<
çç 

sourceText
çç  *
.
çç* +
Length
çç+ 1
;
çç1 2
i
çç3 4
++
çç4 6
)
çç6 7
{
éé 
if
èè 
(
èè #
m_parseCtrlCharacters
èè )
&&
èè* ,

sourceText
èè- 7
[
èè7 8
i
èè8 9
]
èè9 :
==
èè; =
$num
èè> @
&&
èèA C

sourceText
èèD N
.
èèN O
Length
èèO U
>
èèV W
i
èèX Y
+
èèZ [
$num
èè\ ]
)
èè] ^
{
êê 
switch
ëë 
(
ëë 
(
ëë 
int
ëë  
)
ëë  !

sourceText
ëë! +
[
ëë+ ,
i
ëë, -
+
ëë. /
$num
ëë0 1
]
ëë1 2
)
ëë2 3
{
íí 
case
ìì 
$num
ìì 
:
ìì  
if
îî 
(
îî  

sourceText
îî  *
.
îî* +
Length
îî+ 1
>
îî2 3
i
îî4 5
+
îî6 7
$num
îî8 9
)
îî9 :
{
ïï 
if
ññ  "
(
ññ# $

writeIndex
ññ$ .
==
ññ/ 1"
internalParsingArray
ññ2 F
.
ññF G
Length
ññG M
)
ññM N!
ResizeInternalArray
ññO b
(
ññb c
ref
ññc f"
internalParsingArray
ññg {
)
ññ{ |
;
ññ| }"
internalParsingArray
òò  4
[
òò4 5

writeIndex
òò5 ?
]
òò? @
.
òò@ A
unicode
òòA H
=
òòI J
GetUTF32
òòK S
(
òòS T

sourceText
òòT ^
,
òò^ _
i
òò` a
+
òòb c
$num
òòd e
)
òòe f
;
òòf g
i
ôô  !
+=
ôô" $
$num
ôô% &
;
ôô& '

writeIndex
öö  *
+=
öö+ -
$num
öö. /
;
öö/ 0
continue
õõ  (
;
õõ( )
}
úú 
break
ùù !
;
ùù! "
case
ûû 
$num
ûû 
:
ûû  
if
üü 
(
üü  

sourceText
üü  *
.
üü* +
Length
üü+ 1
<=
üü2 4
i
üü5 6
+
üü7 8
$num
üü9 :
)
üü: ;
break
üü< A
;
üüA B
if
°° 
(
°°  

writeIndex
°°  *
+
°°+ ,
$num
°°- .
>
°°/ 0"
internalParsingArray
°°1 E
.
°°E F
Length
°°F L
)
°°L M!
ResizeInternalArray
°°N a
(
°°a b
ref
°°b e"
internalParsingArray
°°f z
)
°°z {
;
°°{ |"
internalParsingArray
££ 0
[
££0 1

writeIndex
££1 ;
]
££; <
.
££< =
unicode
££= D
=
££E F

sourceText
££G Q
[
££Q R
i
££R S
+
££T U
$num
££V W
]
££W X
;
££X Y"
internalParsingArray
§§ 0
[
§§0 1

writeIndex
§§1 ;
+
§§< =
$num
§§> ?
]
§§? @
.
§§@ A
unicode
§§A H
=
§§I J

sourceText
§§K U
[
§§U V
i
§§V W
+
§§X Y
$num
§§Z [
]
§§[ \
;
§§\ ]
i
•• 
+=
••  
$num
••! "
;
••" #

writeIndex
¶¶ &
+=
¶¶' )
$num
¶¶* +
;
¶¶+ ,
continue
ßß $
;
ßß$ %
case
®® 
$num
®®  
:
®®  !
if
©© 
(
©©  

writeIndex
©©  *
==
©©+ -"
internalParsingArray
©©. B
.
©©B C
Length
©©C I
)
©©I J!
ResizeInternalArray
©©K ^
(
©©^ _
ref
©©_ b"
internalParsingArray
©©c w
)
©©w x
;
©©x y"
internalParsingArray
´´ 0
[
´´0 1

writeIndex
´´1 ;
]
´´; <
.
´´< =
unicode
´´= D
=
´´E F
$num
´´G I
;
´´I J
i
¨¨ 
+=
¨¨  
$num
¨¨! "
;
¨¨" #

writeIndex
≠≠ &
+=
≠≠' )
$num
≠≠* +
;
≠≠+ ,
continue
ÆÆ $
;
ÆÆ$ %
case
ØØ 
$num
ØØ  
:
ØØ  !
if
∞∞ 
(
∞∞  

writeIndex
∞∞  *
==
∞∞+ -"
internalParsingArray
∞∞. B
.
∞∞B C
Length
∞∞C I
)
∞∞I J!
ResizeInternalArray
∞∞K ^
(
∞∞^ _
ref
∞∞_ b"
internalParsingArray
∞∞c w
)
∞∞w x
;
∞∞x y"
internalParsingArray
≤≤ 0
[
≤≤0 1

writeIndex
≤≤1 ;
]
≤≤; <
.
≤≤< =
unicode
≤≤= D
=
≤≤E F
$num
≤≤G I
;
≤≤I J
i
≥≥ 
+=
≥≥  
$num
≥≥! "
;
≥≥" #

writeIndex
¥¥ &
+=
¥¥' )
$num
¥¥* +
;
¥¥+ ,
continue
µµ $
;
µµ$ %
case
∂∂ 
$num
∂∂  
:
∂∂  !
if
∑∑ 
(
∑∑  

writeIndex
∑∑  *
==
∑∑+ -"
internalParsingArray
∑∑. B
.
∑∑B C
Length
∑∑C I
)
∑∑I J!
ResizeInternalArray
∑∑K ^
(
∑∑^ _
ref
∑∑_ b"
internalParsingArray
∑∑c w
)
∑∑w x
;
∑∑x y"
internalParsingArray
ππ 0
[
ππ0 1

writeIndex
ππ1 ;
]
ππ; <
.
ππ< =
unicode
ππ= D
=
ππE F
$num
ππG H
;
ππH I
i
∫∫ 
+=
∫∫  
$num
∫∫! "
;
∫∫" #

writeIndex
ªª &
+=
ªª' )
$num
ªª* +
;
ªª+ ,
continue
ºº $
;
ºº$ %
case
ΩΩ 
$num
ΩΩ  
:
ΩΩ  !
if
ææ 
(
ææ  

sourceText
ææ  *
.
ææ* +
Length
ææ+ 1
>
ææ2 3
i
ææ4 5
+
ææ6 7
$num
ææ8 9
)
ææ9 :
{
øø 
if
¿¿  "
(
¿¿# $

writeIndex
¿¿$ .
==
¿¿/ 1"
internalParsingArray
¿¿2 F
.
¿¿F G
Length
¿¿G M
)
¿¿M N!
ResizeInternalArray
¿¿O b
(
¿¿b c
ref
¿¿c f"
internalParsingArray
¿¿g {
)
¿¿{ |
;
¿¿| }"
internalParsingArray
¬¬  4
[
¬¬4 5

writeIndex
¬¬5 ?
]
¬¬? @
.
¬¬@ A
unicode
¬¬A H
=
¬¬I J
GetUTF16
¬¬K S
(
¬¬S T

sourceText
¬¬T ^
,
¬¬^ _
i
¬¬` a
+
¬¬b c
$num
¬¬d e
)
¬¬e f
;
¬¬f g
i
√√  !
+=
√√" $
$num
√√% &
;
√√& '

writeIndex
ƒƒ  *
+=
ƒƒ+ -
$num
ƒƒ. /
;
ƒƒ/ 0
continue
≈≈  (
;
≈≈( )
}
∆∆ 
break
«« !
;
««! "
case
»» 
$num
»»  
:
»»  !
if
…… 
(
……  

writeIndex
……  *
==
……+ -"
internalParsingArray
……. B
.
……B C
Length
……C I
)
……I J!
ResizeInternalArray
……K ^
(
……^ _
ref
……_ b"
internalParsingArray
……c w
)
……w x
;
……x y"
internalParsingArray
ÀÀ 0
[
ÀÀ0 1

writeIndex
ÀÀ1 ;
]
ÀÀ; <
.
ÀÀ< =
unicode
ÀÀ= D
=
ÀÀE F
$num
ÀÀG I
;
ÀÀI J
i
ÃÃ 
+=
ÃÃ  
$num
ÃÃ! "
;
ÃÃ" #

writeIndex
ÕÕ &
+=
ÕÕ' )
$num
ÕÕ* +
;
ÕÕ+ ,
continue
ŒŒ $
;
ŒŒ$ %
}
œœ 
}
–– 
if
”” 
(
”” 
char
”” 
.
”” 
IsHighSurrogate
”” (
(
””( )

sourceText
””) 3
[
””3 4
i
””4 5
]
””5 6
)
””6 7
&&
””8 :
char
””; ?
.
””? @
IsLowSurrogate
””@ N
(
””N O

sourceText
””O Y
[
””Y Z
i
””Z [
+
””\ ]
$num
””^ _
]
””_ `
)
””` a
)
””a b
{
‘‘ 
if
’’ 
(
’’ 

writeIndex
’’ "
==
’’# %"
internalParsingArray
’’& :
.
’’: ;
Length
’’; A
)
’’A B!
ResizeInternalArray
’’C V
(
’’V W
ref
’’W Z"
internalParsingArray
’’[ o
)
’’o p
;
’’p q"
internalParsingArray
◊◊ (
[
◊◊( )

writeIndex
◊◊) 3
]
◊◊3 4
.
◊◊4 5
unicode
◊◊5 <
=
◊◊= >
char
◊◊? C
.
◊◊C D
ConvertToUtf32
◊◊D R
(
◊◊R S

sourceText
◊◊S ]
[
◊◊] ^
i
◊◊^ _
]
◊◊_ `
,
◊◊` a

sourceText
◊◊b l
[
◊◊l m
i
◊◊m n
+
◊◊o p
$num
◊◊q r
]
◊◊r s
)
◊◊s t
;
◊◊t u
i
ÿÿ 
+=
ÿÿ 
$num
ÿÿ 
;
ÿÿ 

writeIndex
ŸŸ 
+=
ŸŸ !
$num
ŸŸ" #
;
ŸŸ# $
continue
⁄⁄ 
;
⁄⁄ 
}
€€ 
if
ﬁﬁ 
(
ﬁﬁ 

sourceText
ﬁﬁ 
[
ﬁﬁ 
i
ﬁﬁ  
]
ﬁﬁ  !
==
ﬁﬁ" $
$num
ﬁﬁ% '
)
ﬁﬁ' (
{
ﬂﬂ 
if
‡‡ 
(
‡‡ 
	IsTagName
‡‡ !
(
‡‡! "
ref
‡‡" %

sourceText
‡‡& 0
,
‡‡0 1
$str
‡‡2 8
,
‡‡8 9
i
‡‡: ;
)
‡‡; <
)
‡‡< =
{
·· 
if
‚‚ 
(
‚‚ 

writeIndex
‚‚ &
==
‚‚' )"
internalParsingArray
‚‚* >
.
‚‚> ?
Length
‚‚? E
)
‚‚E F!
ResizeInternalArray
‚‚G Z
(
‚‚Z [
ref
‚‚[ ^"
internalParsingArray
‚‚_ s
)
‚‚s t
;
‚‚t u"
internalParsingArray
‰‰ ,
[
‰‰, -

writeIndex
‰‰- 7
]
‰‰7 8
.
‰‰8 9
unicode
‰‰9 @
=
‰‰A B
$num
‰‰C E
;
‰‰E F

writeIndex
ÂÂ "
+=
ÂÂ# %
$num
ÂÂ& '
;
ÂÂ' (
i
ÊÊ 
+=
ÊÊ 
$num
ÊÊ 
;
ÊÊ 
continue
ËË  
;
ËË  !
}
ÈÈ 
else
ÍÍ 
if
ÍÍ 
(
ÍÍ 
	IsTagName
ÍÍ &
(
ÍÍ& '
ref
ÍÍ' *

sourceText
ÍÍ+ 5
,
ÍÍ5 6
$str
ÍÍ7 ?
,
ÍÍ? @
i
ÍÍA B
)
ÍÍB C
)
ÍÍC D
{
ÎÎ 
if
ÏÏ 
(
ÏÏ 

writeIndex
ÏÏ &
==
ÏÏ' )"
internalParsingArray
ÏÏ* >
.
ÏÏ> ?
Length
ÏÏ? E
)
ÏÏE F!
ResizeInternalArray
ÏÏG Z
(
ÏÏZ [
ref
ÏÏ[ ^"
internalParsingArray
ÏÏ_ s
)
ÏÏs t
;
ÏÏt u"
internalParsingArray
ÓÓ ,
[
ÓÓ, -

writeIndex
ÓÓ- 7
]
ÓÓ7 8
.
ÓÓ8 9
unicode
ÓÓ9 @
=
ÓÓA B
$num
ÓÓC F
;
ÓÓF G

writeIndex
ÔÔ "
+=
ÔÔ# %
$num
ÔÔ& '
;
ÔÔ' (
i
 
+=
 
$num
 
;
 
continue
ÚÚ  
;
ÚÚ  !
}
ÛÛ 
else
ÙÙ 
if
ÙÙ 
(
ÙÙ 
	IsTagName
ÙÙ &
(
ÙÙ& '
ref
ÙÙ' *

sourceText
ÙÙ+ 5
,
ÙÙ5 6
$str
ÙÙ7 ?
,
ÙÙ? @
i
ÙÙA B
)
ÙÙB C
)
ÙÙC D
{
ıı 
if
ˆˆ 
(
ˆˆ 

writeIndex
ˆˆ &
==
ˆˆ' )"
internalParsingArray
ˆˆ* >
.
ˆˆ> ?
Length
ˆˆ? E
)
ˆˆE F!
ResizeInternalArray
ˆˆG Z
(
ˆˆZ [
ref
ˆˆ[ ^"
internalParsingArray
ˆˆ_ s
)
ˆˆs t
;
ˆˆt u"
internalParsingArray
¯¯ ,
[
¯¯, -

writeIndex
¯¯- 7
]
¯¯7 8
.
¯¯8 9
unicode
¯¯9 @
=
¯¯A B
$num
¯¯C I
;
¯¯I J

writeIndex
˘˘ "
+=
˘˘# %
$num
˘˘& '
;
˘˘' (
i
˙˙ 
+=
˙˙ 
$num
˙˙ 
;
˙˙ 
continue
¸¸  
;
¸¸  !
}
˝˝ 
else
˛˛ 
if
˛˛ 
(
˛˛ 
	IsTagName
˛˛ &
(
˛˛& '
ref
˛˛' *

sourceText
˛˛+ 5
,
˛˛5 6
$str
˛˛7 @
,
˛˛@ A
i
˛˛B C
)
˛˛C D
)
˛˛D E
{
ˇˇ 
int
ÄÄ 
	srcOffset
ÄÄ %
;
ÄÄ% &
if
ÅÅ 
(
ÅÅ $
ReplaceOpeningStyleTag
ÅÅ 2
(
ÅÅ2 3
ref
ÅÅ3 6

sourceText
ÅÅ7 A
,
ÅÅA B
i
ÅÅC D
,
ÅÅD E
out
ÅÅF I
	srcOffset
ÅÅJ S
,
ÅÅS T
ref
ÅÅU X"
internalParsingArray
ÅÅY m
,
ÅÅm n
ref
ÅÅo r

writeIndex
ÅÅs }
)
ÅÅ} ~
)
ÅÅ~ 
{
ÇÇ 
i
ÉÉ 
=
ÉÉ 
	srcOffset
ÉÉ  )
;
ÉÉ) *
continue
ÑÑ $
;
ÑÑ$ %
}
ÖÖ 
}
ÜÜ 
else
áá 
if
áá 
(
áá 
	IsTagName
áá &
(
áá& '
ref
áá' *

sourceText
áá+ 5
,
áá5 6
$str
áá7 A
,
ááA B
i
ááC D
)
ááD E
)
ááE F
{
àà $
ReplaceClosingStyleTag
ââ .
(
ââ. /
ref
ââ/ 2

sourceText
ââ3 =
,
ââ= >
i
ââ? @
,
ââ@ A
ref
ââB E"
internalParsingArray
ââF Z
,
ââZ [
ref
ââ\ _

writeIndex
ââ` j
)
ââj k
;
ââk l
i
åå 
+=
åå 
$num
åå 
;
åå 
continue
çç  
;
çç  !
}
éé 
}
èè 
if
ëë 
(
ëë 

writeIndex
ëë 
==
ëë !"
internalParsingArray
ëë" 6
.
ëë6 7
Length
ëë7 =
)
ëë= >!
ResizeInternalArray
ëë? R
(
ëëR S
ref
ëëS V"
internalParsingArray
ëëW k
)
ëëk l
;
ëël m"
internalParsingArray
ìì $
[
ìì$ %

writeIndex
ìì% /
]
ìì/ 0
.
ìì0 1
unicode
ìì1 8
=
ìì9 :

sourceText
ìì; E
[
ììE F
i
ììF G
]
ììG H
;
ììH I

writeIndex
îî 
+=
îî 
$num
îî 
;
îî  
}
ïï #
m_TextStyleStackDepth
óó !
=
óó" #
$num
óó$ %
;
óó% &
if
öö 
(
öö 
	textStyle
öö 
.
öö 
hashCode
öö "
!=
öö# %
(
öö& '
int
öö' *
)
öö* +
TagHashCode
öö+ 6
.
öö6 7
NORMAL
öö7 =
)
öö= >#
InsertClosingStyleTag
õõ %
(
õõ% &
ref
õõ& )"
internalParsingArray
õõ* >
,
õõ> ?
ref
õõ@ C

writeIndex
õõD N
)
õõN O
;
õõO P
if
ùù 
(
ùù 

writeIndex
ùù 
==
ùù "
internalParsingArray
ùù 2
.
ùù2 3
Length
ùù3 9
)
ùù9 :!
ResizeInternalArray
ùù; N
(
ùùN O
ref
ùùO R"
internalParsingArray
ùùS g
)
ùùg h
;
ùùh i"
internalParsingArray
üü  
[
üü  !

writeIndex
üü! +
]
üü+ ,
.
üü, -
unicode
üü- 4
=
üü5 6
$num
üü7 8
;
üü8 9
return
†† 

writeIndex
†† 
;
†† 
}
°° 	
bool
≠≠ $
ReplaceOpeningStyleTag
≠≠ #
(
≠≠# $
ref
≠≠$ '
string
≠≠( .

sourceText
≠≠/ 9
,
≠≠9 :
int
≠≠; >
srcIndex
≠≠? G
,
≠≠G H
out
≠≠I L
int
≠≠M P
	srcOffset
≠≠Q Z
,
≠≠Z [
ref
≠≠\ _
UnicodeChar
≠≠` k
[
≠≠k l
]
≠≠l m

charBuffer
≠≠n x
,
≠≠x y
ref
≠≠z }
int≠≠~ Å

writeIndex≠≠Ç å
)≠≠å ç
{
ÆÆ 	
int
∞∞ 
hashCode
∞∞ 
=
∞∞ 
GetTagHashCode
∞∞ )
(
∞∞) *
ref
∞∞* -

sourceText
∞∞. 8
,
∞∞8 9
srcIndex
∞∞: B
+
∞∞C D
$num
∞∞E F
,
∞∞F G
out
∞∞H K
	srcOffset
∞∞L U
)
∞∞U V
;
∞∞V W
	TMP_Style
≤≤ 
style
≤≤ 
=
≤≤ 
GetStyle
≤≤ &
(
≤≤& '
hashCode
≤≤' /
)
≤≤/ 0
;
≤≤0 1
if
µµ 
(
µµ 
style
µµ 
==
µµ 
null
µµ 
||
µµ  
	srcOffset
µµ! *
==
µµ+ -
$num
µµ. /
)
µµ/ 0
return
µµ1 7
false
µµ8 =
;
µµ= >#
m_TextStyleStackDepth
∏∏ !
+=
∏∏" $
$num
∏∏% &
;
∏∏& '
m_TextStyleStacks
ªª 
[
ªª #
m_TextStyleStackDepth
ªª 3
]
ªª3 4
.
ªª4 5
Push
ªª5 9
(
ªª9 :
style
ªª: ?
.
ªª? @
hashCode
ªª@ H
)
ªªH I
;
ªªI J
int
ΩΩ 
styleLength
ΩΩ 
=
ΩΩ 
style
ΩΩ #
.
ΩΩ# $"
styleOpeningTagArray
ΩΩ$ 8
.
ΩΩ8 9
Length
ΩΩ9 ?
;
ΩΩ? @
int
¿¿ 
[
¿¿ 
]
¿¿ 
tagDefinition
¿¿ 
=
¿¿  !
style
¿¿" '
.
¿¿' ("
styleOpeningTagArray
¿¿( <
;
¿¿< =
for
¬¬ 
(
¬¬ 
int
¬¬ 
i
¬¬ 
=
¬¬ 
$num
¬¬ 
;
¬¬ 
i
¬¬ 
<
¬¬ 
styleLength
¬¬  +
;
¬¬+ ,
i
¬¬- .
++
¬¬. 0
)
¬¬0 1
{
√√ 
int
ƒƒ 
c
ƒƒ 
=
ƒƒ 
tagDefinition
ƒƒ %
[
ƒƒ% &
i
ƒƒ& '
]
ƒƒ' (
;
ƒƒ( )
if
∆∆ 
(
∆∆ 
c
∆∆ 
==
∆∆ 
$char
∆∆ 
&&
∆∆  
i
∆∆! "
+
∆∆# $
$num
∆∆% &
<
∆∆' (
styleLength
∆∆) 4
)
∆∆4 5
{
«« 
switch
»» 
(
»» 
tagDefinition
»» )
[
»») *
i
»»* +
+
»», -
$num
»». /
]
»»/ 0
)
»»0 1
{
…… 
case
   
$char
   !
:
  ! "
i
ÀÀ 
+=
ÀÀ  
$num
ÀÀ! "
;
ÀÀ" #
break
ÃÃ !
;
ÃÃ! "
case
ÕÕ 
$char
ÕÕ  
:
ÕÕ  !
c
ŒŒ 
=
ŒŒ 
$num
ŒŒ  "
;
ŒŒ" #
i
œœ 
+=
œœ  
$num
œœ! "
;
œœ" #
break
–– !
;
––! "
case
—— 
$char
——  
:
——  !
break
““ !
;
““! "
case
”” 
$char
””  
:
””  !
break
‘‘ !
;
‘‘! "
case
’’ 
$char
’’  
:
’’  !
if
◊◊ 
(
◊◊  
i
◊◊  !
+
◊◊" #
$num
◊◊$ %
<
◊◊& '
styleLength
◊◊( 3
)
◊◊3 4
{
ÿÿ 
c
ŸŸ  !
=
ŸŸ" #
GetUTF16
ŸŸ$ ,
(
ŸŸ, -
tagDefinition
ŸŸ- :
,
ŸŸ: ;
i
ŸŸ< =
+
ŸŸ> ?
$num
ŸŸ@ A
)
ŸŸA B
;
ŸŸB C
i
€€  !
+=
€€" $
$num
€€% &
;
€€& '
}
‹‹ 
break
›› !
;
››! "
case
ﬁﬁ 
$char
ﬁﬁ  
:
ﬁﬁ  !
if
‡‡ 
(
‡‡  
i
‡‡  !
+
‡‡" #
$num
‡‡$ %
<
‡‡& '
styleLength
‡‡( 3
)
‡‡3 4
{
·· 
c
‚‚  !
=
‚‚" #
GetUTF32
‚‚$ ,
(
‚‚, -
tagDefinition
‚‚- :
,
‚‚: ;
i
‚‚< =
+
‚‚> ?
$num
‚‚@ A
)
‚‚A B
;
‚‚B C
i
‰‰  !
+=
‰‰" $
$num
‰‰% &
;
‰‰& '
}
ÂÂ 
break
ÊÊ !
;
ÊÊ! "
}
ÁÁ 
}
ËË 
if
ÍÍ 
(
ÍÍ 
c
ÍÍ 
==
ÍÍ 
$num
ÍÍ 
)
ÍÍ 
{
ÎÎ 
if
ÏÏ 
(
ÏÏ 
	IsTagName
ÏÏ !
(
ÏÏ! "
ref
ÏÏ" %
tagDefinition
ÏÏ& 3
,
ÏÏ3 4
$str
ÏÏ5 ;
,
ÏÏ; <
i
ÏÏ= >
)
ÏÏ> ?
)
ÏÏ? @
{
ÌÌ 
if
ÓÓ 
(
ÓÓ 

writeIndex
ÓÓ &
==
ÓÓ' )

charBuffer
ÓÓ* 4
.
ÓÓ4 5
Length
ÓÓ5 ;
)
ÓÓ; <!
ResizeInternalArray
ÓÓ= P
(
ÓÓP Q
ref
ÓÓQ T

charBuffer
ÓÓU _
)
ÓÓ_ `
;
ÓÓ` a

charBuffer
 "
[
" #

writeIndex
# -
]
- .
.
. /
unicode
/ 6
=
7 8
$num
9 ;
;
; <

writeIndex
ÒÒ "
+=
ÒÒ# %
$num
ÒÒ& '
;
ÒÒ' (
i
ÚÚ 
+=
ÚÚ 
$num
ÚÚ 
;
ÚÚ 
continue
ÙÙ  
;
ÙÙ  !
}
ıı 
else
ˆˆ 
if
ˆˆ 
(
ˆˆ 
	IsTagName
ˆˆ &
(
ˆˆ& '
ref
ˆˆ' *
tagDefinition
ˆˆ+ 8
,
ˆˆ8 9
$str
ˆˆ: B
,
ˆˆB C
i
ˆˆD E
)
ˆˆE F
)
ˆˆF G
{
˜˜ 
if
¯¯ 
(
¯¯ 

writeIndex
¯¯ &
==
¯¯' )

charBuffer
¯¯* 4
.
¯¯4 5
Length
¯¯5 ;
)
¯¯; <!
ResizeInternalArray
¯¯= P
(
¯¯P Q
ref
¯¯Q T

charBuffer
¯¯U _
)
¯¯_ `
;
¯¯` a

charBuffer
˙˙ "
[
˙˙" #

writeIndex
˙˙# -
]
˙˙- .
.
˙˙. /
unicode
˙˙/ 6
=
˙˙7 8
$num
˙˙9 <
;
˙˙< =

writeIndex
˚˚ "
+=
˚˚# %
$num
˚˚& '
;
˚˚' (
i
¸¸ 
+=
¸¸ 
$num
¸¸ 
;
¸¸ 
continue
˛˛  
;
˛˛  !
}
ˇˇ 
else
ÄÄ 
if
ÄÄ 
(
ÄÄ 
	IsTagName
ÄÄ &
(
ÄÄ& '
ref
ÄÄ' *
tagDefinition
ÄÄ+ 8
,
ÄÄ8 9
$str
ÄÄ: B
,
ÄÄB C
i
ÄÄD E
)
ÄÄE F
)
ÄÄF G
{
ÅÅ 
if
ÇÇ 
(
ÇÇ 

writeIndex
ÇÇ &
==
ÇÇ' )

charBuffer
ÇÇ* 4
.
ÇÇ4 5
Length
ÇÇ5 ;
)
ÇÇ; <!
ResizeInternalArray
ÇÇ= P
(
ÇÇP Q
ref
ÇÇQ T

charBuffer
ÇÇU _
)
ÇÇ_ `
;
ÇÇ` a

charBuffer
ÑÑ "
[
ÑÑ" #

writeIndex
ÑÑ# -
]
ÑÑ- .
.
ÑÑ. /
unicode
ÑÑ/ 6
=
ÑÑ7 8
$num
ÑÑ9 ?
;
ÑÑ? @

writeIndex
ÖÖ "
+=
ÖÖ# %
$num
ÖÖ& '
;
ÖÖ' (
i
ÜÜ 
+=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
continue
àà  
;
àà  !
}
ââ 
else
ää 
if
ää 
(
ää 
	IsTagName
ää &
(
ää& '
ref
ää' *
tagDefinition
ää+ 8
,
ää8 9
$str
ää: C
,
ääC D
i
ääE F
)
ääF G
)
ääG H
{
ãã 
int
åå 
offset
åå "
;
åå" #
if
çç 
(
çç $
ReplaceOpeningStyleTag
çç 2
(
çç2 3
ref
çç3 6
tagDefinition
çç7 D
,
ççD E
i
ççF G
,
ççG H
out
ççI L
offset
ççM S
,
ççS T
ref
ççU X

charBuffer
ççY c
,
ççc d
ref
ççe h

writeIndex
ççi s
)
ççs t
)
ççt u
{
éé 
i
èè 
=
èè 
offset
èè  &
;
èè& '
continue
êê $
;
êê$ %
}
ëë 
}
íí 
else
ìì 
if
ìì 
(
ìì 
	IsTagName
ìì &
(
ìì& '
ref
ìì' *
tagDefinition
ìì+ 8
,
ìì8 9
$str
ìì: D
,
ììD E
i
ììF G
)
ììG H
)
ììH I
{
îî $
ReplaceClosingStyleTag
ïï .
(
ïï. /
ref
ïï/ 2
tagDefinition
ïï3 @
,
ïï@ A
i
ïïB C
,
ïïC D
ref
ïïE H

charBuffer
ïïI S
,
ïïS T
ref
ïïU X

writeIndex
ïïY c
)
ïïc d
;
ïïd e
i
òò 
+=
òò 
$num
òò 
;
òò 
continue
ôô  
;
ôô  !
}
öö 
}
õõ 
if
ùù 
(
ùù 

writeIndex
ùù 
==
ùù !

charBuffer
ùù" ,
.
ùù, -
Length
ùù- 3
)
ùù3 4!
ResizeInternalArray
ùù5 H
(
ùùH I
ref
ùùI L

charBuffer
ùùM W
)
ùùW X
;
ùùX Y

charBuffer
üü 
[
üü 

writeIndex
üü %
]
üü% &
.
üü& '
unicode
üü' .
=
üü/ 0
c
üü1 2
;
üü2 3

writeIndex
†† 
+=
†† 
$num
†† 
;
††  
}
°° #
m_TextStyleStackDepth
££ !
-=
££" $
$num
££% &
;
££& '
return
•• 
true
•• 
;
•• 
}
¶¶ 	
bool
≤≤ $
ReplaceOpeningStyleTag
≤≤ #
(
≤≤# $
ref
≤≤$ '
int
≤≤( +
[
≤≤+ ,
]
≤≤, -

sourceText
≤≤. 8
,
≤≤8 9
int
≤≤: =
srcIndex
≤≤> F
,
≤≤F G
out
≤≤H K
int
≤≤L O
	srcOffset
≤≤P Y
,
≤≤Y Z
ref
≤≤[ ^
UnicodeChar
≤≤_ j
[
≤≤j k
]
≤≤k l

charBuffer
≤≤m w
,
≤≤w x
ref
≤≤y |
int≤≤} Ä

writeIndex≤≤Å ã
)≤≤ã å
{
≥≥ 	
int
µµ 
hashCode
µµ 
=
µµ 
GetTagHashCode
µµ )
(
µµ) *
ref
µµ* -

sourceText
µµ. 8
,
µµ8 9
srcIndex
µµ: B
+
µµC D
$num
µµE F
,
µµF G
out
µµH K
	srcOffset
µµL U
)
µµU V
;
µµV W
	TMP_Style
∑∑ 
style
∑∑ 
=
∑∑ 
GetStyle
∑∑ &
(
∑∑& '
hashCode
∑∑' /
)
∑∑/ 0
;
∑∑0 1
if
∫∫ 
(
∫∫ 
style
∫∫ 
==
∫∫ 
null
∫∫ 
||
∫∫  
	srcOffset
∫∫! *
==
∫∫+ -
$num
∫∫. /
)
∫∫/ 0
return
∫∫1 7
false
∫∫8 =
;
∫∫= >#
m_TextStyleStackDepth
ΩΩ !
+=
ΩΩ" $
$num
ΩΩ% &
;
ΩΩ& '
m_TextStyleStacks
¿¿ 
[
¿¿ #
m_TextStyleStackDepth
¿¿ 3
]
¿¿3 4
.
¿¿4 5
Push
¿¿5 9
(
¿¿9 :
style
¿¿: ?
.
¿¿? @
hashCode
¿¿@ H
)
¿¿H I
;
¿¿I J
int
¬¬ 
styleLength
¬¬ 
=
¬¬ 
style
¬¬ #
.
¬¬# $"
styleOpeningTagArray
¬¬$ 8
.
¬¬8 9
Length
¬¬9 ?
;
¬¬? @
int
≈≈ 
[
≈≈ 
]
≈≈ 
tagDefinition
≈≈ 
=
≈≈  !
style
≈≈" '
.
≈≈' ("
styleOpeningTagArray
≈≈( <
;
≈≈< =
for
«« 
(
«« 
int
«« 
i
«« 
=
«« 
$num
«« 
;
«« 
i
«« 
<
«« 
styleLength
««  +
;
««+ ,
i
««- .
++
««. 0
)
««0 1
{
»» 
int
…… 
c
…… 
=
…… 
tagDefinition
…… %
[
……% &
i
……& '
]
……' (
;
……( )
if
ÀÀ 
(
ÀÀ 
c
ÀÀ 
==
ÀÀ 
$char
ÀÀ 
&&
ÀÀ  
i
ÀÀ! "
+
ÀÀ# $
$num
ÀÀ% &
<
ÀÀ' (
styleLength
ÀÀ) 4
)
ÀÀ4 5
{
ÃÃ 
switch
ÕÕ 
(
ÕÕ 
tagDefinition
ÕÕ )
[
ÕÕ) *
i
ÕÕ* +
+
ÕÕ, -
$num
ÕÕ. /
]
ÕÕ/ 0
)
ÕÕ0 1
{
ŒŒ 
case
œœ 
$char
œœ !
:
œœ! "
i
–– 
+=
––  
$num
––! "
;
––" #
break
—— !
;
——! "
case
““ 
$char
““  
:
““  !
c
”” 
=
”” 
$num
””  "
;
””" #
i
‘‘ 
+=
‘‘  
$num
‘‘! "
;
‘‘" #
break
’’ !
;
’’! "
case
÷÷ 
$char
÷÷  
:
÷÷  !
break
◊◊ !
;
◊◊! "
case
ÿÿ 
$char
ÿÿ  
:
ÿÿ  !
break
ŸŸ !
;
ŸŸ! "
case
⁄⁄ 
$char
⁄⁄  
:
⁄⁄  !
if
‹‹ 
(
‹‹  
i
‹‹  !
+
‹‹" #
$num
‹‹$ %
<
‹‹& '
styleLength
‹‹( 3
)
‹‹3 4
{
›› 
c
ﬁﬁ  !
=
ﬁﬁ" #
GetUTF16
ﬁﬁ$ ,
(
ﬁﬁ, -
tagDefinition
ﬁﬁ- :
,
ﬁﬁ: ;
i
ﬁﬁ< =
+
ﬁﬁ> ?
$num
ﬁﬁ@ A
)
ﬁﬁA B
;
ﬁﬁB C
i
‡‡  !
+=
‡‡" $
$num
‡‡% &
;
‡‡& '
}
·· 
break
‚‚ !
;
‚‚! "
case
„„ 
$char
„„  
:
„„  !
if
ÂÂ 
(
ÂÂ  
i
ÂÂ  !
+
ÂÂ" #
$num
ÂÂ$ %
<
ÂÂ& '
styleLength
ÂÂ( 3
)
ÂÂ3 4
{
ÊÊ 
c
ÁÁ  !
=
ÁÁ" #
GetUTF32
ÁÁ$ ,
(
ÁÁ, -
tagDefinition
ÁÁ- :
,
ÁÁ: ;
i
ÁÁ< =
+
ÁÁ> ?
$num
ÁÁ@ A
)
ÁÁA B
;
ÁÁB C
i
ÈÈ  !
+=
ÈÈ" $
$num
ÈÈ% &
;
ÈÈ& '
}
ÍÍ 
break
ÎÎ !
;
ÎÎ! "
}
ÏÏ 
}
ÌÌ 
if
ÔÔ 
(
ÔÔ 
c
ÔÔ 
==
ÔÔ 
$num
ÔÔ 
)
ÔÔ 
{
 
if
ÒÒ 
(
ÒÒ 
	IsTagName
ÒÒ !
(
ÒÒ! "
ref
ÒÒ" %
tagDefinition
ÒÒ& 3
,
ÒÒ3 4
$str
ÒÒ5 ;
,
ÒÒ; <
i
ÒÒ= >
)
ÒÒ> ?
)
ÒÒ? @
{
ÚÚ 
if
ÛÛ 
(
ÛÛ 

writeIndex
ÛÛ &
==
ÛÛ' )

charBuffer
ÛÛ* 4
.
ÛÛ4 5
Length
ÛÛ5 ;
)
ÛÛ; <!
ResizeInternalArray
ÛÛ= P
(
ÛÛP Q
ref
ÛÛQ T

charBuffer
ÛÛU _
)
ÛÛ_ `
;
ÛÛ` a

charBuffer
ıı "
[
ıı" #

writeIndex
ıı# -
]
ıı- .
.
ıı. /
unicode
ıı/ 6
=
ıı7 8
$num
ıı9 ;
;
ıı; <

writeIndex
ˆˆ "
+=
ˆˆ# %
$num
ˆˆ& '
;
ˆˆ' (
i
˜˜ 
+=
˜˜ 
$num
˜˜ 
;
˜˜ 
continue
˘˘  
;
˘˘  !
}
˙˙ 
else
˚˚ 
if
˚˚ 
(
˚˚ 
	IsTagName
˚˚ &
(
˚˚& '
ref
˚˚' *
tagDefinition
˚˚+ 8
,
˚˚8 9
$str
˚˚: B
,
˚˚B C
i
˚˚D E
)
˚˚E F
)
˚˚F G
{
¸¸ 
if
˝˝ 
(
˝˝ 

writeIndex
˝˝ &
==
˝˝' )

charBuffer
˝˝* 4
.
˝˝4 5
Length
˝˝5 ;
)
˝˝; <!
ResizeInternalArray
˝˝= P
(
˝˝P Q
ref
˝˝Q T

charBuffer
˝˝U _
)
˝˝_ `
;
˝˝` a

charBuffer
ˇˇ "
[
ˇˇ" #

writeIndex
ˇˇ# -
]
ˇˇ- .
.
ˇˇ. /
unicode
ˇˇ/ 6
=
ˇˇ7 8
$num
ˇˇ9 <
;
ˇˇ< =

writeIndex
ÄÄ "
+=
ÄÄ# %
$num
ÄÄ& '
;
ÄÄ' (
i
ÅÅ 
+=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
continue
ÉÉ  
;
ÉÉ  !
}
ÑÑ 
else
ÖÖ 
if
ÖÖ 
(
ÖÖ 
	IsTagName
ÖÖ &
(
ÖÖ& '
ref
ÖÖ' *
tagDefinition
ÖÖ+ 8
,
ÖÖ8 9
$str
ÖÖ: B
,
ÖÖB C
i
ÖÖD E
)
ÖÖE F
)
ÖÖF G
{
ÜÜ 
if
áá 
(
áá 

writeIndex
áá &
==
áá' )

charBuffer
áá* 4
.
áá4 5
Length
áá5 ;
)
áá; <!
ResizeInternalArray
áá= P
(
ááP Q
ref
ááQ T

charBuffer
ááU _
)
áá_ `
;
áá` a

charBuffer
ââ "
[
ââ" #

writeIndex
ââ# -
]
ââ- .
.
ââ. /
unicode
ââ/ 6
=
ââ7 8
$num
ââ9 ?
;
ââ? @

writeIndex
ää "
+=
ää# %
$num
ää& '
;
ää' (
i
ãã 
+=
ãã 
$num
ãã 
;
ãã 
continue
çç  
;
çç  !
}
éé 
else
èè 
if
èè 
(
èè 
	IsTagName
èè &
(
èè& '
ref
èè' *
tagDefinition
èè+ 8
,
èè8 9
$str
èè: C
,
èèC D
i
èèE F
)
èèF G
)
èèG H
{
êê 
int
ëë 
offset
ëë "
;
ëë" #
if
íí 
(
íí $
ReplaceOpeningStyleTag
íí 2
(
íí2 3
ref
íí3 6
tagDefinition
íí7 D
,
ííD E
i
ííF G
,
ííG H
out
ííI L
offset
ííM S
,
ííS T
ref
ííU X

charBuffer
ííY c
,
ííc d
ref
ííe h

writeIndex
ííi s
)
íís t
)
íít u
{
ìì 
i
îî 
=
îî 
offset
îî  &
;
îî& '
continue
ïï $
;
ïï$ %
}
ññ 
}
óó 
else
òò 
if
òò 
(
òò 
	IsTagName
òò &
(
òò& '
ref
òò' *
tagDefinition
òò+ 8
,
òò8 9
$str
òò: D
,
òòD E
i
òòF G
)
òòG H
)
òòH I
{
ôô $
ReplaceClosingStyleTag
öö .
(
öö. /
ref
öö/ 2
tagDefinition
öö3 @
,
öö@ A
i
ööB C
,
ööC D
ref
ööE H

charBuffer
ööI S
,
ööS T
ref
ööU X

writeIndex
ööY c
)
ööc d
;
ööd e
i
ùù 
+=
ùù 
$num
ùù 
;
ùù 
continue
ûû  
;
ûû  !
}
üü 
}
†† 
if
¢¢ 
(
¢¢ 

writeIndex
¢¢ 
==
¢¢ !

charBuffer
¢¢" ,
.
¢¢, -
Length
¢¢- 3
)
¢¢3 4!
ResizeInternalArray
¢¢5 H
(
¢¢H I
ref
¢¢I L

charBuffer
¢¢M W
)
¢¢W X
;
¢¢X Y

charBuffer
§§ 
[
§§ 

writeIndex
§§ %
]
§§% &
.
§§& '
unicode
§§' .
=
§§/ 0
c
§§1 2
;
§§2 3

writeIndex
•• 
+=
•• 
$num
•• 
;
••  
}
¶¶ #
m_TextStyleStackDepth
®® !
-=
®®" $
$num
®®% &
;
®®& '
return
™™ 
true
™™ 
;
™™ 
}
´´ 	
bool
∑∑ $
ReplaceOpeningStyleTag
∑∑ #
(
∑∑# $
ref
∑∑$ '
char
∑∑( ,
[
∑∑, -
]
∑∑- .

sourceText
∑∑/ 9
,
∑∑9 :
int
∑∑; >
srcIndex
∑∑? G
,
∑∑G H
out
∑∑I L
int
∑∑M P
	srcOffset
∑∑Q Z
,
∑∑Z [
ref
∑∑\ _
UnicodeChar
∑∑` k
[
∑∑k l
]
∑∑l m

charBuffer
∑∑n x
,
∑∑x y
ref
∑∑z }
int∑∑~ Å

writeIndex∑∑Ç å
)∑∑å ç
{
∏∏ 	
int
∫∫ 
hashCode
∫∫ 
=
∫∫ 
GetTagHashCode
∫∫ )
(
∫∫) *
ref
∫∫* -

sourceText
∫∫. 8
,
∫∫8 9
srcIndex
∫∫: B
+
∫∫C D
$num
∫∫E F
,
∫∫F G
out
∫∫H K
	srcOffset
∫∫L U
)
∫∫U V
;
∫∫V W
	TMP_Style
ºº 
style
ºº 
=
ºº 
GetStyle
ºº &
(
ºº& '
hashCode
ºº' /
)
ºº/ 0
;
ºº0 1
if
øø 
(
øø 
style
øø 
==
øø 
null
øø 
||
øø  
	srcOffset
øø! *
==
øø+ -
$num
øø. /
)
øø/ 0
return
øø1 7
false
øø8 =
;
øø= >#
m_TextStyleStackDepth
¬¬ !
+=
¬¬" $
$num
¬¬% &
;
¬¬& '
m_TextStyleStacks
≈≈ 
[
≈≈ #
m_TextStyleStackDepth
≈≈ 3
]
≈≈3 4
.
≈≈4 5
Push
≈≈5 9
(
≈≈9 :
style
≈≈: ?
.
≈≈? @
hashCode
≈≈@ H
)
≈≈H I
;
≈≈I J
int
«« 
styleLength
«« 
=
«« 
style
«« #
.
««# $"
styleOpeningTagArray
««$ 8
.
««8 9
Length
««9 ?
;
««? @
int
   
[
   
]
   
tagDefinition
   
=
    !
style
  " '
.
  ' ("
styleOpeningTagArray
  ( <
;
  < =
for
ÃÃ 
(
ÃÃ 
int
ÃÃ 
i
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
i
ÃÃ 
<
ÃÃ 
styleLength
ÃÃ  +
;
ÃÃ+ ,
i
ÃÃ- .
++
ÃÃ. 0
)
ÃÃ0 1
{
ÕÕ 
int
ŒŒ 
c
ŒŒ 
=
ŒŒ 
tagDefinition
ŒŒ %
[
ŒŒ% &
i
ŒŒ& '
]
ŒŒ' (
;
ŒŒ( )
if
–– 
(
–– 
c
–– 
==
–– 
$char
–– 
&&
––  
i
––! "
+
––# $
$num
––% &
<
––' (
styleLength
––) 4
)
––4 5
{
—— 
switch
““ 
(
““ 
tagDefinition
““ )
[
““) *
i
““* +
+
““, -
$num
““. /
]
““/ 0
)
““0 1
{
”” 
case
‘‘ 
$char
‘‘ !
:
‘‘! "
i
’’ 
+=
’’  
$num
’’! "
;
’’" #
break
÷÷ !
;
÷÷! "
case
◊◊ 
$char
◊◊  
:
◊◊  !
c
ÿÿ 
=
ÿÿ 
$num
ÿÿ  "
;
ÿÿ" #
i
ŸŸ 
+=
ŸŸ  
$num
ŸŸ! "
;
ŸŸ" #
break
⁄⁄ !
;
⁄⁄! "
case
€€ 
$char
€€  
:
€€  !
break
‹‹ !
;
‹‹! "
case
›› 
$char
››  
:
››  !
break
ﬁﬁ !
;
ﬁﬁ! "
case
ﬂﬂ 
$char
ﬂﬂ  
:
ﬂﬂ  !
if
·· 
(
··  
i
··  !
+
··" #
$num
··$ %
<
··& '
styleLength
··( 3
)
··3 4
{
‚‚ 
c
„„  !
=
„„" #
GetUTF16
„„$ ,
(
„„, -
tagDefinition
„„- :
,
„„: ;
i
„„< =
+
„„> ?
$num
„„@ A
)
„„A B
;
„„B C
i
ÂÂ  !
+=
ÂÂ" $
$num
ÂÂ% &
;
ÂÂ& '
}
ÊÊ 
break
ÁÁ !
;
ÁÁ! "
case
ËË 
$char
ËË  
:
ËË  !
if
ÍÍ 
(
ÍÍ  
i
ÍÍ  !
+
ÍÍ" #
$num
ÍÍ$ %
<
ÍÍ& '
styleLength
ÍÍ( 3
)
ÍÍ3 4
{
ÎÎ 
c
ÏÏ  !
=
ÏÏ" #
GetUTF32
ÏÏ$ ,
(
ÏÏ, -
tagDefinition
ÏÏ- :
,
ÏÏ: ;
i
ÏÏ< =
+
ÏÏ> ?
$num
ÏÏ@ A
)
ÏÏA B
;
ÏÏB C
i
ÓÓ  !
+=
ÓÓ" $
$num
ÓÓ% &
;
ÓÓ& '
}
ÔÔ 
break
 !
;
! "
}
ÒÒ 
}
ÚÚ 
if
ÙÙ 
(
ÙÙ 
c
ÙÙ 
==
ÙÙ 
$num
ÙÙ 
)
ÙÙ 
{
ıı 
if
ˆˆ 
(
ˆˆ 
	IsTagName
ˆˆ !
(
ˆˆ! "
ref
ˆˆ" %
tagDefinition
ˆˆ& 3
,
ˆˆ3 4
$str
ˆˆ5 ;
,
ˆˆ; <
i
ˆˆ= >
)
ˆˆ> ?
)
ˆˆ? @
{
˜˜ 
if
¯¯ 
(
¯¯ 

writeIndex
¯¯ &
==
¯¯' )

charBuffer
¯¯* 4
.
¯¯4 5
Length
¯¯5 ;
)
¯¯; <!
ResizeInternalArray
¯¯= P
(
¯¯P Q
ref
¯¯Q T

charBuffer
¯¯U _
)
¯¯_ `
;
¯¯` a

charBuffer
˙˙ "
[
˙˙" #

writeIndex
˙˙# -
]
˙˙- .
.
˙˙. /
unicode
˙˙/ 6
=
˙˙7 8
$num
˙˙9 ;
;
˙˙; <

writeIndex
˚˚ "
+=
˚˚# %
$num
˚˚& '
;
˚˚' (
i
¸¸ 
+=
¸¸ 
$num
¸¸ 
;
¸¸ 
continue
˛˛  
;
˛˛  !
}
ˇˇ 
else
ÄÄ 
if
ÄÄ 
(
ÄÄ 
	IsTagName
ÄÄ &
(
ÄÄ& '
ref
ÄÄ' *
tagDefinition
ÄÄ+ 8
,
ÄÄ8 9
$str
ÄÄ: B
,
ÄÄB C
i
ÄÄD E
)
ÄÄE F
)
ÄÄF G
{
ÅÅ 
if
ÇÇ 
(
ÇÇ 

writeIndex
ÇÇ &
==
ÇÇ' )

charBuffer
ÇÇ* 4
.
ÇÇ4 5
Length
ÇÇ5 ;
)
ÇÇ; <!
ResizeInternalArray
ÇÇ= P
(
ÇÇP Q
ref
ÇÇQ T

charBuffer
ÇÇU _
)
ÇÇ_ `
;
ÇÇ` a

charBuffer
ÑÑ "
[
ÑÑ" #

writeIndex
ÑÑ# -
]
ÑÑ- .
.
ÑÑ. /
unicode
ÑÑ/ 6
=
ÑÑ7 8
$num
ÑÑ9 <
;
ÑÑ< =

writeIndex
ÖÖ "
+=
ÖÖ# %
$num
ÖÖ& '
;
ÖÖ' (
i
ÜÜ 
+=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
continue
àà  
;
àà  !
}
ââ 
else
ää 
if
ää 
(
ää 
	IsTagName
ää &
(
ää& '
ref
ää' *
tagDefinition
ää+ 8
,
ää8 9
$str
ää: B
,
ääB C
i
ääD E
)
ääE F
)
ääF G
{
ãã 
if
åå 
(
åå 

writeIndex
åå &
==
åå' )

charBuffer
åå* 4
.
åå4 5
Length
åå5 ;
)
åå; <!
ResizeInternalArray
åå= P
(
ååP Q
ref
ååQ T

charBuffer
ååU _
)
åå_ `
;
åå` a

charBuffer
éé "
[
éé" #

writeIndex
éé# -
]
éé- .
.
éé. /
unicode
éé/ 6
=
éé7 8
$num
éé9 ?
;
éé? @

writeIndex
èè "
+=
èè# %
$num
èè& '
;
èè' (
i
êê 
+=
êê 
$num
êê 
;
êê 
continue
íí  
;
íí  !
}
ìì 
else
îî 
if
îî 
(
îî 
	IsTagName
îî &
(
îî& '
ref
îî' *
tagDefinition
îî+ 8
,
îî8 9
$str
îî: C
,
îîC D
i
îîE F
)
îîF G
)
îîG H
{
ïï 
int
ññ 
offset
ññ "
;
ññ" #
if
óó 
(
óó $
ReplaceOpeningStyleTag
óó 2
(
óó2 3
ref
óó3 6
tagDefinition
óó7 D
,
óóD E
i
óóF G
,
óóG H
out
óóI L
offset
óóM S
,
óóS T
ref
óóU X

charBuffer
óóY c
,
óóc d
ref
óóe h

writeIndex
óói s
)
óós t
)
óót u
{
òò 
i
ôô 
=
ôô 
offset
ôô  &
;
ôô& '
continue
öö $
;
öö$ %
}
õõ 
}
úú 
else
ùù 
if
ùù 
(
ùù 
	IsTagName
ùù &
(
ùù& '
ref
ùù' *
tagDefinition
ùù+ 8
,
ùù8 9
$str
ùù: D
,
ùùD E
i
ùùF G
)
ùùG H
)
ùùH I
{
ûû $
ReplaceClosingStyleTag
üü .
(
üü. /
ref
üü/ 2
tagDefinition
üü3 @
,
üü@ A
i
üüB C
,
üüC D
ref
üüE H

charBuffer
üüI S
,
üüS T
ref
üüU X

writeIndex
üüY c
)
üüc d
;
üüd e
i
¢¢ 
+=
¢¢ 
$num
¢¢ 
;
¢¢ 
continue
££  
;
££  !
}
§§ 
}
•• 
if
ßß 
(
ßß 

writeIndex
ßß 
==
ßß !

charBuffer
ßß" ,
.
ßß, -
Length
ßß- 3
)
ßß3 4!
ResizeInternalArray
ßß5 H
(
ßßH I
ref
ßßI L

charBuffer
ßßM W
)
ßßW X
;
ßßX Y

charBuffer
©© 
[
©© 

writeIndex
©© %
]
©©% &
.
©©& '
unicode
©©' .
=
©©/ 0
c
©©1 2
;
©©2 3

writeIndex
™™ 
+=
™™ 
$num
™™ 
;
™™  
}
´´ #
m_TextStyleStackDepth
≠≠ !
-=
≠≠" $
$num
≠≠% &
;
≠≠& '
return
ØØ 
true
ØØ 
;
ØØ 
}
∞∞ 	
bool
ºº $
ReplaceOpeningStyleTag
ºº #
(
ºº# $
ref
ºº$ '
StringBuilder
ºº( 5

sourceText
ºº6 @
,
ºº@ A
int
ººB E
srcIndex
ººF N
,
ººN O
out
ººP S
int
ººT W
	srcOffset
ººX a
,
ººa b
ref
ººc f
UnicodeChar
ººg r
[
ººr s
]
ººs t

charBuffer
ººu 
,ºº Ä
refººÅ Ñ
intººÖ à

writeIndexººâ ì
)ººì î
{
ΩΩ 	
int
øø 
hashCode
øø 
=
øø 
GetTagHashCode
øø )
(
øø) *
ref
øø* -

sourceText
øø. 8
,
øø8 9
srcIndex
øø: B
+
øøC D
$num
øøE F
,
øøF G
out
øøH K
	srcOffset
øøL U
)
øøU V
;
øøV W
	TMP_Style
¡¡ 
style
¡¡ 
=
¡¡ 
GetStyle
¡¡ &
(
¡¡& '
hashCode
¡¡' /
)
¡¡/ 0
;
¡¡0 1
if
ƒƒ 
(
ƒƒ 
style
ƒƒ 
==
ƒƒ 
null
ƒƒ 
||
ƒƒ  
	srcOffset
ƒƒ! *
==
ƒƒ+ -
$num
ƒƒ. /
)
ƒƒ/ 0
return
ƒƒ1 7
false
ƒƒ8 =
;
ƒƒ= >#
m_TextStyleStackDepth
«« !
+=
««" $
$num
««% &
;
««& '
m_TextStyleStacks
   
[
   #
m_TextStyleStackDepth
   3
]
  3 4
.
  4 5
Push
  5 9
(
  9 :
style
  : ?
.
  ? @
hashCode
  @ H
)
  H I
;
  I J
int
ÃÃ 
styleLength
ÃÃ 
=
ÃÃ 
style
ÃÃ #
.
ÃÃ# $"
styleOpeningTagArray
ÃÃ$ 8
.
ÃÃ8 9
Length
ÃÃ9 ?
;
ÃÃ? @
int
œœ 
[
œœ 
]
œœ 
tagDefinition
œœ 
=
œœ  !
style
œœ" '
.
œœ' ("
styleOpeningTagArray
œœ( <
;
œœ< =
for
—— 
(
—— 
int
—— 
i
—— 
=
—— 
$num
—— 
;
—— 
i
—— 
<
—— 
styleLength
——  +
;
——+ ,
i
——- .
++
——. 0
)
——0 1
{
““ 
int
”” 
c
”” 
=
”” 
tagDefinition
”” %
[
””% &
i
””& '
]
””' (
;
””( )
if
’’ 
(
’’ 
c
’’ 
==
’’ 
$char
’’ 
&&
’’  
i
’’! "
+
’’# $
$num
’’% &
<
’’' (
styleLength
’’) 4
)
’’4 5
{
÷÷ 
switch
◊◊ 
(
◊◊ 
tagDefinition
◊◊ )
[
◊◊) *
i
◊◊* +
+
◊◊, -
$num
◊◊. /
]
◊◊/ 0
)
◊◊0 1
{
ÿÿ 
case
ŸŸ 
$char
ŸŸ !
:
ŸŸ! "
i
⁄⁄ 
+=
⁄⁄  
$num
⁄⁄! "
;
⁄⁄" #
break
€€ !
;
€€! "
case
‹‹ 
$char
‹‹  
:
‹‹  !
c
›› 
=
›› 
$num
››  "
;
››" #
i
ﬁﬁ 
+=
ﬁﬁ  
$num
ﬁﬁ! "
;
ﬁﬁ" #
break
ﬂﬂ !
;
ﬂﬂ! "
case
‡‡ 
$char
‡‡  
:
‡‡  !
break
·· !
;
··! "
case
‚‚ 
$char
‚‚  
:
‚‚  !
break
„„ !
;
„„! "
case
‰‰ 
$char
‰‰  
:
‰‰  !
if
ÊÊ 
(
ÊÊ  
i
ÊÊ  !
+
ÊÊ" #
$num
ÊÊ$ %
<
ÊÊ& '
styleLength
ÊÊ( 3
)
ÊÊ3 4
{
ÁÁ 
c
ËË  !
=
ËË" #
GetUTF16
ËË$ ,
(
ËË, -
tagDefinition
ËË- :
,
ËË: ;
i
ËË< =
+
ËË> ?
$num
ËË@ A
)
ËËA B
;
ËËB C
i
ÍÍ  !
+=
ÍÍ" $
$num
ÍÍ% &
;
ÍÍ& '
}
ÎÎ 
break
ÏÏ !
;
ÏÏ! "
case
ÌÌ 
$char
ÌÌ  
:
ÌÌ  !
if
ÔÔ 
(
ÔÔ  
i
ÔÔ  !
+
ÔÔ" #
$num
ÔÔ$ %
<
ÔÔ& '
styleLength
ÔÔ( 3
)
ÔÔ3 4
{
 
c
ÒÒ  !
=
ÒÒ" #
GetUTF32
ÒÒ$ ,
(
ÒÒ, -
tagDefinition
ÒÒ- :
,
ÒÒ: ;
i
ÒÒ< =
+
ÒÒ> ?
$num
ÒÒ@ A
)
ÒÒA B
;
ÒÒB C
i
ÛÛ  !
+=
ÛÛ" $
$num
ÛÛ% &
;
ÛÛ& '
}
ÙÙ 
break
ıı !
;
ıı! "
}
ˆˆ 
}
˜˜ 
if
˘˘ 
(
˘˘ 
c
˘˘ 
==
˘˘ 
$num
˘˘ 
)
˘˘ 
{
˙˙ 
if
˚˚ 
(
˚˚ 
	IsTagName
˚˚ !
(
˚˚! "
ref
˚˚" %
tagDefinition
˚˚& 3
,
˚˚3 4
$str
˚˚5 ;
,
˚˚; <
i
˚˚= >
)
˚˚> ?
)
˚˚? @
{
¸¸ 
if
˝˝ 
(
˝˝ 

writeIndex
˝˝ &
==
˝˝' )

charBuffer
˝˝* 4
.
˝˝4 5
Length
˝˝5 ;
)
˝˝; <!
ResizeInternalArray
˝˝= P
(
˝˝P Q
ref
˝˝Q T

charBuffer
˝˝U _
)
˝˝_ `
;
˝˝` a

charBuffer
ˇˇ "
[
ˇˇ" #

writeIndex
ˇˇ# -
]
ˇˇ- .
.
ˇˇ. /
unicode
ˇˇ/ 6
=
ˇˇ7 8
$num
ˇˇ9 ;
;
ˇˇ; <

writeIndex
ÄÄ "
+=
ÄÄ# %
$num
ÄÄ& '
;
ÄÄ' (
i
ÅÅ 
+=
ÅÅ 
$num
ÅÅ 
;
ÅÅ 
continue
ÉÉ  
;
ÉÉ  !
}
ÑÑ 
else
ÖÖ 
if
ÖÖ 
(
ÖÖ 
	IsTagName
ÖÖ &
(
ÖÖ& '
ref
ÖÖ' *
tagDefinition
ÖÖ+ 8
,
ÖÖ8 9
$str
ÖÖ: B
,
ÖÖB C
i
ÖÖD E
)
ÖÖE F
)
ÖÖF G
{
ÜÜ 
if
áá 
(
áá 

writeIndex
áá &
==
áá' )

charBuffer
áá* 4
.
áá4 5
Length
áá5 ;
)
áá; <!
ResizeInternalArray
áá= P
(
ááP Q
ref
ááQ T

charBuffer
ááU _
)
áá_ `
;
áá` a

charBuffer
ââ "
[
ââ" #

writeIndex
ââ# -
]
ââ- .
.
ââ. /
unicode
ââ/ 6
=
ââ7 8
$num
ââ9 <
;
ââ< =

writeIndex
ää "
+=
ää# %
$num
ää& '
;
ää' (
i
ãã 
+=
ãã 
$num
ãã 
;
ãã 
continue
çç  
;
çç  !
}
éé 
else
èè 
if
èè 
(
èè 
	IsTagName
èè &
(
èè& '
ref
èè' *
tagDefinition
èè+ 8
,
èè8 9
$str
èè: B
,
èèB C
i
èèD E
)
èèE F
)
èèF G
{
êê 
if
ëë 
(
ëë 

writeIndex
ëë &
==
ëë' )

charBuffer
ëë* 4
.
ëë4 5
Length
ëë5 ;
)
ëë; <!
ResizeInternalArray
ëë= P
(
ëëP Q
ref
ëëQ T

charBuffer
ëëU _
)
ëë_ `
;
ëë` a

charBuffer
ìì "
[
ìì" #

writeIndex
ìì# -
]
ìì- .
.
ìì. /
unicode
ìì/ 6
=
ìì7 8
$num
ìì9 ?
;
ìì? @

writeIndex
îî "
+=
îî# %
$num
îî& '
;
îî' (
i
ïï 
+=
ïï 
$num
ïï 
;
ïï 
continue
óó  
;
óó  !
}
òò 
else
ôô 
if
ôô 
(
ôô 
	IsTagName
ôô &
(
ôô& '
ref
ôô' *
tagDefinition
ôô+ 8
,
ôô8 9
$str
ôô: C
,
ôôC D
i
ôôE F
)
ôôF G
)
ôôG H
{
öö 
int
õõ 
offset
õõ "
;
õõ" #
if
úú 
(
úú $
ReplaceOpeningStyleTag
úú 2
(
úú2 3
ref
úú3 6
tagDefinition
úú7 D
,
úúD E
i
úúF G
,
úúG H
out
úúI L
offset
úúM S
,
úúS T
ref
úúU X

charBuffer
úúY c
,
úúc d
ref
úúe h

writeIndex
úúi s
)
úús t
)
úút u
{
ùù 
i
ûû 
=
ûû 
offset
ûû  &
;
ûû& '
continue
üü $
;
üü$ %
}
†† 
}
°° 
else
¢¢ 
if
¢¢ 
(
¢¢ 
	IsTagName
¢¢ &
(
¢¢& '
ref
¢¢' *
tagDefinition
¢¢+ 8
,
¢¢8 9
$str
¢¢: D
,
¢¢D E
i
¢¢F G
)
¢¢G H
)
¢¢H I
{
££ $
ReplaceClosingStyleTag
§§ .
(
§§. /
ref
§§/ 2
tagDefinition
§§3 @
,
§§@ A
i
§§B C
,
§§C D
ref
§§E H

charBuffer
§§I S
,
§§S T
ref
§§U X

writeIndex
§§Y c
)
§§c d
;
§§d e
i
ßß 
+=
ßß 
$num
ßß 
;
ßß 
continue
®®  
;
®®  !
}
©© 
}
™™ 
if
¨¨ 
(
¨¨ 

writeIndex
¨¨ 
==
¨¨ !

charBuffer
¨¨" ,
.
¨¨, -
Length
¨¨- 3
)
¨¨3 4!
ResizeInternalArray
¨¨5 H
(
¨¨H I
ref
¨¨I L

charBuffer
¨¨M W
)
¨¨W X
;
¨¨X Y

charBuffer
ÆÆ 
[
ÆÆ 

writeIndex
ÆÆ %
]
ÆÆ% &
.
ÆÆ& '
unicode
ÆÆ' .
=
ÆÆ/ 0
c
ÆÆ1 2
;
ÆÆ2 3

writeIndex
ØØ 
+=
ØØ 
$num
ØØ 
;
ØØ  
}
∞∞ 
return
≤≤ 
true
≤≤ 
;
≤≤ 
}
≥≥ 	
bool
ææ $
ReplaceClosingStyleTag
ææ #
(
ææ# $
ref
ææ$ '
string
ææ( .

sourceText
ææ/ 9
,
ææ9 :
int
ææ; >
srcIndex
ææ? G
,
ææG H
ref
ææI L
UnicodeChar
ææM X
[
ææX Y
]
ææY Z

charBuffer
ææ[ e
,
ææe f
ref
ææg j
int
ææk n

writeIndex
ææo y
)
ææy z
{
øø 	
int
¡¡ 
hashCode
¡¡ 
=
¡¡ 
m_TextStyleStacks
¡¡ ,
[
¡¡, -#
m_TextStyleStackDepth
¡¡- B
+
¡¡C D
$num
¡¡E F
]
¡¡F G
.
¡¡G H
Pop
¡¡H K
(
¡¡K L
)
¡¡L M
;
¡¡M N
	TMP_Style
¬¬ 
style
¬¬ 
=
¬¬ 
GetStyle
¬¬ &
(
¬¬& '
hashCode
¬¬' /
)
¬¬/ 0
;
¬¬0 1
if
≈≈ 
(
≈≈ 
style
≈≈ 
==
≈≈ 
null
≈≈ 
)
≈≈ 
return
≈≈ %
false
≈≈& +
;
≈≈+ ,#
m_TextStyleStackDepth
»» !
+=
»»" $
$num
»»% &
;
»»& '
int
   
styleLength
   
=
   
style
   #
.
  # $"
styleClosingTagArray
  $ 8
.
  8 9
Length
  9 ?
;
  ? @
int
ÕÕ 
[
ÕÕ 
]
ÕÕ 
tagDefinition
ÕÕ 
=
ÕÕ  !
style
ÕÕ" '
.
ÕÕ' ("
styleClosingTagArray
ÕÕ( <
;
ÕÕ< =
for
œœ 
(
œœ 
int
œœ 
i
œœ 
=
œœ 
$num
œœ 
;
œœ 
i
œœ 
<
œœ 
styleLength
œœ  +
;
œœ+ ,
i
œœ- .
++
œœ. 0
)
œœ0 1
{
–– 
int
—— 
c
—— 
=
—— 
tagDefinition
—— %
[
——% &
i
——& '
]
——' (
;
——( )
if
”” 
(
”” 
c
”” 
==
”” 
$char
”” 
&&
””  
i
””! "
+
””# $
$num
””% &
<
””' (
styleLength
””) 4
)
””4 5
{
‘‘ 
switch
’’ 
(
’’ 
tagDefinition
’’ )
[
’’) *
i
’’* +
+
’’, -
$num
’’. /
]
’’/ 0
)
’’0 1
{
÷÷ 
case
◊◊ 
$char
◊◊ !
:
◊◊! "
i
ÿÿ 
+=
ÿÿ  
$num
ÿÿ! "
;
ÿÿ" #
break
ŸŸ !
;
ŸŸ! "
case
⁄⁄ 
$char
⁄⁄  
:
⁄⁄  !
c
€€ 
=
€€ 
$num
€€  "
;
€€" #
i
‹‹ 
+=
‹‹  
$num
‹‹! "
;
‹‹" #
break
›› !
;
››! "
case
ﬁﬁ 
$char
ﬁﬁ  
:
ﬁﬁ  !
break
ﬂﬂ !
;
ﬂﬂ! "
case
‡‡ 
$char
‡‡  
:
‡‡  !
break
·· !
;
··! "
case
‚‚ 
$char
‚‚  
:
‚‚  !
if
‰‰ 
(
‰‰  
i
‰‰  !
+
‰‰" #
$num
‰‰$ %
<
‰‰& '
styleLength
‰‰( 3
)
‰‰3 4
{
ÂÂ 
c
ÊÊ  !
=
ÊÊ" #
GetUTF16
ÊÊ$ ,
(
ÊÊ, -
tagDefinition
ÊÊ- :
,
ÊÊ: ;
i
ÊÊ< =
+
ÊÊ> ?
$num
ÊÊ@ A
)
ÊÊA B
;
ÊÊB C
i
ËË  !
+=
ËË" $
$num
ËË% &
;
ËË& '
}
ÈÈ 
break
ÍÍ !
;
ÍÍ! "
case
ÎÎ 
$char
ÎÎ  
:
ÎÎ  !
if
ÌÌ 
(
ÌÌ  
i
ÌÌ  !
+
ÌÌ" #
$num
ÌÌ$ %
<
ÌÌ& '
styleLength
ÌÌ( 3
)
ÌÌ3 4
{
ÓÓ 
c
ÔÔ  !
=
ÔÔ" #
GetUTF32
ÔÔ$ ,
(
ÔÔ, -
tagDefinition
ÔÔ- :
,
ÔÔ: ;
i
ÔÔ< =
+
ÔÔ> ?
$num
ÔÔ@ A
)
ÔÔA B
;
ÔÔB C
i
ÒÒ  !
+=
ÒÒ" $
$num
ÒÒ% &
;
ÒÒ& '
}
ÚÚ 
break
ÛÛ !
;
ÛÛ! "
}
ÙÙ 
}
ıı 
if
˜˜ 
(
˜˜ 
c
˜˜ 
==
˜˜ 
$num
˜˜ 
)
˜˜ 
{
¯¯ 
if
˘˘ 
(
˘˘ 
	IsTagName
˘˘ !
(
˘˘! "
ref
˘˘" %
tagDefinition
˘˘& 3
,
˘˘3 4
$str
˘˘5 ;
,
˘˘; <
i
˘˘= >
)
˘˘> ?
)
˘˘? @
{
˙˙ 
if
˚˚ 
(
˚˚ 

writeIndex
˚˚ &
==
˚˚' )

charBuffer
˚˚* 4
.
˚˚4 5
Length
˚˚5 ;
)
˚˚; <!
ResizeInternalArray
˚˚= P
(
˚˚P Q
ref
˚˚Q T

charBuffer
˚˚U _
)
˚˚_ `
;
˚˚` a

charBuffer
˝˝ "
[
˝˝" #

writeIndex
˝˝# -
]
˝˝- .
.
˝˝. /
unicode
˝˝/ 6
=
˝˝7 8
$num
˝˝9 ;
;
˝˝; <

writeIndex
˛˛ "
+=
˛˛# %
$num
˛˛& '
;
˛˛' (
i
ˇˇ 
+=
ˇˇ 
$num
ˇˇ 
;
ˇˇ 
continue
ÅÅ  
;
ÅÅ  !
}
ÇÇ 
else
ÉÉ 
if
ÉÉ 
(
ÉÉ 
	IsTagName
ÉÉ &
(
ÉÉ& '
ref
ÉÉ' *
tagDefinition
ÉÉ+ 8
,
ÉÉ8 9
$str
ÉÉ: B
,
ÉÉB C
i
ÉÉD E
)
ÉÉE F
)
ÉÉF G
{
ÑÑ 
if
ÖÖ 
(
ÖÖ 

writeIndex
ÖÖ &
==
ÖÖ' )

charBuffer
ÖÖ* 4
.
ÖÖ4 5
Length
ÖÖ5 ;
)
ÖÖ; <!
ResizeInternalArray
ÖÖ= P
(
ÖÖP Q
ref
ÖÖQ T

charBuffer
ÖÖU _
)
ÖÖ_ `
;
ÖÖ` a

charBuffer
áá "
[
áá" #

writeIndex
áá# -
]
áá- .
.
áá. /
unicode
áá/ 6
=
áá7 8
$num
áá9 <
;
áá< =

writeIndex
àà "
+=
àà# %
$num
àà& '
;
àà' (
i
ââ 
+=
ââ 
$num
ââ 
;
ââ 
continue
ãã  
;
ãã  !
}
åå 
else
çç 
if
çç 
(
çç 
	IsTagName
çç &
(
çç& '
ref
çç' *
tagDefinition
çç+ 8
,
çç8 9
$str
çç: B
,
ççB C
i
ççD E
)
ççE F
)
ççF G
{
éé 
if
èè 
(
èè 

writeIndex
èè &
==
èè' )

charBuffer
èè* 4
.
èè4 5
Length
èè5 ;
)
èè; <!
ResizeInternalArray
èè= P
(
èèP Q
ref
èèQ T

charBuffer
èèU _
)
èè_ `
;
èè` a

charBuffer
ëë "
[
ëë" #

writeIndex
ëë# -
]
ëë- .
.
ëë. /
unicode
ëë/ 6
=
ëë7 8
$num
ëë9 ?
;
ëë? @

writeIndex
íí "
+=
íí# %
$num
íí& '
;
íí' (
i
ìì 
+=
ìì 
$num
ìì 
;
ìì 
continue
ïï  
;
ïï  !
}
ññ 
else
óó 
if
óó 
(
óó 
	IsTagName
óó &
(
óó& '
ref
óó' *
tagDefinition
óó+ 8
,
óó8 9
$str
óó: C
,
óóC D
i
óóE F
)
óóF G
)
óóG H
{
òò 
int
ôô 
offset
ôô "
;
ôô" #
if
öö 
(
öö $
ReplaceOpeningStyleTag
öö 2
(
öö2 3
ref
öö3 6
tagDefinition
öö7 D
,
ööD E
i
ööF G
,
ööG H
out
ööI L
offset
ööM S
,
ööS T
ref
ööU X

charBuffer
ööY c
,
ööc d
ref
ööe h

writeIndex
ööi s
)
öös t
)
ööt u
{
õõ 
i
úú 
=
úú 
offset
úú  &
;
úú& '
continue
ùù $
;
ùù$ %
}
ûû 
}
üü 
else
†† 
if
†† 
(
†† 
	IsTagName
†† &
(
††& '
ref
††' *
tagDefinition
††+ 8
,
††8 9
$str
††: D
,
††D E
i
††F G
)
††G H
)
††H I
{
°° $
ReplaceClosingStyleTag
¢¢ .
(
¢¢. /
ref
¢¢/ 2
tagDefinition
¢¢3 @
,
¢¢@ A
i
¢¢B C
,
¢¢C D
ref
¢¢E H

charBuffer
¢¢I S
,
¢¢S T
ref
¢¢U X

writeIndex
¢¢Y c
)
¢¢c d
;
¢¢d e
i
§§ 
+=
§§ 
$num
§§ 
;
§§ 
continue
••  
;
••  !
}
¶¶ 
}
ßß 
if
©© 
(
©© 

writeIndex
©© 
==
©© !

charBuffer
©©" ,
.
©©, -
Length
©©- 3
)
©©3 4!
ResizeInternalArray
©©5 H
(
©©H I
ref
©©I L

charBuffer
©©M W
)
©©W X
;
©©X Y

charBuffer
´´ 
[
´´ 

writeIndex
´´ %
]
´´% &
.
´´& '
unicode
´´' .
=
´´/ 0
c
´´1 2
;
´´2 3

writeIndex
¨¨ 
+=
¨¨ 
$num
¨¨ 
;
¨¨  
}
≠≠ #
m_TextStyleStackDepth
ØØ !
-=
ØØ" $
$num
ØØ% &
;
ØØ& '
return
±± 
true
±± 
;
±± 
}
≤≤ 	
bool
ΩΩ $
ReplaceClosingStyleTag
ΩΩ #
(
ΩΩ# $
ref
ΩΩ$ '
int
ΩΩ( +
[
ΩΩ+ ,
]
ΩΩ, -

sourceText
ΩΩ. 8
,
ΩΩ8 9
int
ΩΩ: =
srcIndex
ΩΩ> F
,
ΩΩF G
ref
ΩΩH K
UnicodeChar
ΩΩL W
[
ΩΩW X
]
ΩΩX Y

charBuffer
ΩΩZ d
,
ΩΩd e
ref
ΩΩf i
int
ΩΩj m

writeIndex
ΩΩn x
)
ΩΩx y
{
ææ 	
int
¿¿ 
hashCode
¿¿ 
=
¿¿ 
m_TextStyleStacks
¿¿ ,
[
¿¿, -#
m_TextStyleStackDepth
¿¿- B
+
¿¿C D
$num
¿¿E F
]
¿¿F G
.
¿¿G H
Pop
¿¿H K
(
¿¿K L
)
¿¿L M
;
¿¿M N
	TMP_Style
¡¡ 
style
¡¡ 
=
¡¡ 
GetStyle
¡¡ &
(
¡¡& '
hashCode
¡¡' /
)
¡¡/ 0
;
¡¡0 1
if
ƒƒ 
(
ƒƒ 
style
ƒƒ 
==
ƒƒ 
null
ƒƒ 
)
ƒƒ 
return
ƒƒ %
false
ƒƒ& +
;
ƒƒ+ ,#
m_TextStyleStackDepth
«« !
+=
««" $
$num
««% &
;
««& '
int
…… 
styleLength
…… 
=
…… 
style
…… #
.
……# $"
styleClosingTagArray
……$ 8
.
……8 9
Length
……9 ?
;
……? @
int
ÃÃ 
[
ÃÃ 
]
ÃÃ 
tagDefinition
ÃÃ 
=
ÃÃ  !
style
ÃÃ" '
.
ÃÃ' ("
styleClosingTagArray
ÃÃ( <
;
ÃÃ< =
for
ŒŒ 
(
ŒŒ 
int
ŒŒ 
i
ŒŒ 
=
ŒŒ 
$num
ŒŒ 
;
ŒŒ 
i
ŒŒ 
<
ŒŒ 
styleLength
ŒŒ  +
;
ŒŒ+ ,
i
ŒŒ- .
++
ŒŒ. 0
)
ŒŒ0 1
{
œœ 
int
–– 
c
–– 
=
–– 
tagDefinition
–– %
[
––% &
i
––& '
]
––' (
;
––( )
if
““ 
(
““ 
c
““ 
==
““ 
$char
““ 
&&
““  
i
““! "
+
““# $
$num
““% &
<
““' (
styleLength
““) 4
)
““4 5
{
”” 
switch
‘‘ 
(
‘‘ 
tagDefinition
‘‘ )
[
‘‘) *
i
‘‘* +
+
‘‘, -
$num
‘‘. /
]
‘‘/ 0
)
‘‘0 1
{
’’ 
case
÷÷ 
$char
÷÷ !
:
÷÷! "
i
◊◊ 
+=
◊◊  
$num
◊◊! "
;
◊◊" #
break
ÿÿ !
;
ÿÿ! "
case
ŸŸ 
$char
ŸŸ  
:
ŸŸ  !
c
⁄⁄ 
=
⁄⁄ 
$num
⁄⁄  "
;
⁄⁄" #
i
€€ 
+=
€€  
$num
€€! "
;
€€" #
break
‹‹ !
;
‹‹! "
case
›› 
$char
››  
:
››  !
break
ﬁﬁ !
;
ﬁﬁ! "
case
ﬂﬂ 
$char
ﬂﬂ  
:
ﬂﬂ  !
break
‡‡ !
;
‡‡! "
case
·· 
$char
··  
:
··  !
if
„„ 
(
„„  
i
„„  !
+
„„" #
$num
„„$ %
<
„„& '
styleLength
„„( 3
)
„„3 4
{
‰‰ 
c
ÂÂ  !
=
ÂÂ" #
GetUTF16
ÂÂ$ ,
(
ÂÂ, -
tagDefinition
ÂÂ- :
,
ÂÂ: ;
i
ÂÂ< =
+
ÂÂ> ?
$num
ÂÂ@ A
)
ÂÂA B
;
ÂÂB C
i
ÁÁ  !
+=
ÁÁ" $
$num
ÁÁ% &
;
ÁÁ& '
}
ËË 
break
ÈÈ !
;
ÈÈ! "
case
ÍÍ 
$char
ÍÍ  
:
ÍÍ  !
if
ÏÏ 
(
ÏÏ  
i
ÏÏ  !
+
ÏÏ" #
$num
ÏÏ$ %
<
ÏÏ& '
styleLength
ÏÏ( 3
)
ÏÏ3 4
{
ÌÌ 
c
ÓÓ  !
=
ÓÓ" #
GetUTF32
ÓÓ$ ,
(
ÓÓ, -
tagDefinition
ÓÓ- :
,
ÓÓ: ;
i
ÓÓ< =
+
ÓÓ> ?
$num
ÓÓ@ A
)
ÓÓA B
;
ÓÓB C
i
  !
+=
" $
$num
% &
;
& '
}
ÒÒ 
break
ÚÚ !
;
ÚÚ! "
}
ÛÛ 
}
ÙÙ 
if
ˆˆ 
(
ˆˆ 
c
ˆˆ 
==
ˆˆ 
$num
ˆˆ 
)
ˆˆ 
{
˜˜ 
if
¯¯ 
(
¯¯ 
	IsTagName
¯¯ !
(
¯¯! "
ref
¯¯" %
tagDefinition
¯¯& 3
,
¯¯3 4
$str
¯¯5 ;
,
¯¯; <
i
¯¯= >
)
¯¯> ?
)
¯¯? @
{
˘˘ 
if
˙˙ 
(
˙˙ 

writeIndex
˙˙ &
==
˙˙' )

charBuffer
˙˙* 4
.
˙˙4 5
Length
˙˙5 ;
)
˙˙; <!
ResizeInternalArray
˙˙= P
(
˙˙P Q
ref
˙˙Q T

charBuffer
˙˙U _
)
˙˙_ `
;
˙˙` a

charBuffer
¸¸ "
[
¸¸" #

writeIndex
¸¸# -
]
¸¸- .
.
¸¸. /
unicode
¸¸/ 6
=
¸¸7 8
$num
¸¸9 ;
;
¸¸; <

writeIndex
˝˝ "
+=
˝˝# %
$num
˝˝& '
;
˝˝' (
i
˛˛ 
+=
˛˛ 
$num
˛˛ 
;
˛˛ 
continue
ÄÄ  
;
ÄÄ  !
}
ÅÅ 
else
ÇÇ 
if
ÇÇ 
(
ÇÇ 
	IsTagName
ÇÇ &
(
ÇÇ& '
ref
ÇÇ' *
tagDefinition
ÇÇ+ 8
,
ÇÇ8 9
$str
ÇÇ: B
,
ÇÇB C
i
ÇÇD E
)
ÇÇE F
)
ÇÇF G
{
ÉÉ 
if
ÑÑ 
(
ÑÑ 

writeIndex
ÑÑ &
==
ÑÑ' )

charBuffer
ÑÑ* 4
.
ÑÑ4 5
Length
ÑÑ5 ;
)
ÑÑ; <!
ResizeInternalArray
ÑÑ= P
(
ÑÑP Q
ref
ÑÑQ T

charBuffer
ÑÑU _
)
ÑÑ_ `
;
ÑÑ` a

charBuffer
ÜÜ "
[
ÜÜ" #

writeIndex
ÜÜ# -
]
ÜÜ- .
.
ÜÜ. /
unicode
ÜÜ/ 6
=
ÜÜ7 8
$num
ÜÜ9 <
;
ÜÜ< =

writeIndex
áá "
+=
áá# %
$num
áá& '
;
áá' (
i
àà 
+=
àà 
$num
àà 
;
àà 
continue
ää  
;
ää  !
}
ãã 
else
åå 
if
åå 
(
åå 
	IsTagName
åå &
(
åå& '
ref
åå' *
tagDefinition
åå+ 8
,
åå8 9
$str
åå: B
,
ååB C
i
ååD E
)
ååE F
)
ååF G
{
çç 
if
éé 
(
éé 

writeIndex
éé &
==
éé' )

charBuffer
éé* 4
.
éé4 5
Length
éé5 ;
)
éé; <!
ResizeInternalArray
éé= P
(
ééP Q
ref
ééQ T

charBuffer
ééU _
)
éé_ `
;
éé` a

charBuffer
êê "
[
êê" #

writeIndex
êê# -
]
êê- .
.
êê. /
unicode
êê/ 6
=
êê7 8
$num
êê9 ?
;
êê? @

writeIndex
ëë "
+=
ëë# %
$num
ëë& '
;
ëë' (
i
íí 
+=
íí 
$num
íí 
;
íí 
continue
îî  
;
îî  !
}
ïï 
else
ññ 
if
ññ 
(
ññ 
	IsTagName
ññ &
(
ññ& '
ref
ññ' *
tagDefinition
ññ+ 8
,
ññ8 9
$str
ññ: C
,
ññC D
i
ññE F
)
ññF G
)
ññG H
{
óó 
int
òò 
offset
òò "
;
òò" #
;
òò$ %
if
ôô 
(
ôô $
ReplaceOpeningStyleTag
ôô 2
(
ôô2 3
ref
ôô3 6
tagDefinition
ôô7 D
,
ôôD E
i
ôôF G
,
ôôG H
out
ôôI L
offset
ôôM S
,
ôôS T
ref
ôôU X

charBuffer
ôôY c
,
ôôc d
ref
ôôe h

writeIndex
ôôi s
)
ôôs t
)
ôôt u
{
öö 
i
õõ 
=
õõ 
offset
õõ  &
;
õõ& '
continue
úú $
;
úú$ %
}
ùù 
}
ûû 
else
üü 
if
üü 
(
üü 
	IsTagName
üü &
(
üü& '
ref
üü' *
tagDefinition
üü+ 8
,
üü8 9
$str
üü: D
,
üüD E
i
üüF G
)
üüG H
)
üüH I
{
†† $
ReplaceClosingStyleTag
°° .
(
°°. /
ref
°°/ 2
tagDefinition
°°3 @
,
°°@ A
i
°°B C
,
°°C D
ref
°°E H

charBuffer
°°I S
,
°°S T
ref
°°U X

writeIndex
°°Y c
)
°°c d
;
°°d e
i
§§ 
+=
§§ 
$num
§§ 
;
§§ 
continue
••  
;
••  !
}
¶¶ 
}
ßß 
if
©© 
(
©© 

writeIndex
©© 
==
©© !

charBuffer
©©" ,
.
©©, -
Length
©©- 3
)
©©3 4!
ResizeInternalArray
©©5 H
(
©©H I
ref
©©I L

charBuffer
©©M W
)
©©W X
;
©©X Y

charBuffer
´´ 
[
´´ 

writeIndex
´´ %
]
´´% &
.
´´& '
unicode
´´' .
=
´´/ 0
c
´´1 2
;
´´2 3

writeIndex
¨¨ 
+=
¨¨ 
$num
¨¨ 
;
¨¨  
}
≠≠ #
m_TextStyleStackDepth
ØØ !
-=
ØØ" $
$num
ØØ% &
;
ØØ& '
return
±± 
true
±± 
;
±± 
}
≤≤ 	
bool
ΩΩ $
ReplaceClosingStyleTag
ΩΩ #
(
ΩΩ# $
ref
ΩΩ$ '
char
ΩΩ( ,
[
ΩΩ, -
]
ΩΩ- .

sourceText
ΩΩ/ 9
,
ΩΩ9 :
int
ΩΩ; >
srcIndex
ΩΩ? G
,
ΩΩG H
ref
ΩΩI L
UnicodeChar
ΩΩM X
[
ΩΩX Y
]
ΩΩY Z

charBuffer
ΩΩ[ e
,
ΩΩe f
ref
ΩΩg j
int
ΩΩk n

writeIndex
ΩΩo y
)
ΩΩy z
{
ææ 	
int
¿¿ 
hashCode
¿¿ 
=
¿¿ 
m_TextStyleStacks
¿¿ ,
[
¿¿, -#
m_TextStyleStackDepth
¿¿- B
+
¿¿C D
$num
¿¿E F
]
¿¿F G
.
¿¿G H
Pop
¿¿H K
(
¿¿K L
)
¿¿L M
;
¿¿M N
	TMP_Style
¡¡ 
style
¡¡ 
=
¡¡ 
GetStyle
¡¡ &
(
¡¡& '
hashCode
¡¡' /
)
¡¡/ 0
;
¡¡0 1
if
ƒƒ 
(
ƒƒ 
style
ƒƒ 
==
ƒƒ 
null
ƒƒ 
)
ƒƒ 
return
ƒƒ %
false
ƒƒ& +
;
ƒƒ+ ,#
m_TextStyleStackDepth
«« !
+=
««" $
$num
««% &
;
««& '
int
…… 
styleLength
…… 
=
…… 
style
…… #
.
……# $"
styleClosingTagArray
……$ 8
.
……8 9
Length
……9 ?
;
……? @
int
ÃÃ 
[
ÃÃ 
]
ÃÃ 
tagDefinition
ÃÃ 
=
ÃÃ  !
style
ÃÃ" '
.
ÃÃ' ("
styleClosingTagArray
ÃÃ( <
;
ÃÃ< =
for
ŒŒ 
(
ŒŒ 
int
ŒŒ 
i
ŒŒ 
=
ŒŒ 
$num
ŒŒ 
;
ŒŒ 
i
ŒŒ 
<
ŒŒ 
styleLength
ŒŒ  +
;
ŒŒ+ ,
i
ŒŒ- .
++
ŒŒ. 0
)
ŒŒ0 1
{
œœ 
int
–– 
c
–– 
=
–– 
tagDefinition
–– %
[
––% &
i
––& '
]
––' (
;
––( )
if
““ 
(
““ 
c
““ 
==
““ 
$char
““ 
&&
““  
i
““! "
+
““# $
$num
““% &
<
““' (
styleLength
““) 4
)
““4 5
{
”” 
switch
‘‘ 
(
‘‘ 
tagDefinition
‘‘ )
[
‘‘) *
i
‘‘* +
+
‘‘, -
$num
‘‘. /
]
‘‘/ 0
)
‘‘0 1
{
’’ 
case
÷÷ 
$char
÷÷ !
:
÷÷! "
i
◊◊ 
+=
◊◊  
$num
◊◊! "
;
◊◊" #
break
ÿÿ !
;
ÿÿ! "
case
ŸŸ 
$char
ŸŸ  
:
ŸŸ  !
c
⁄⁄ 
=
⁄⁄ 
$num
⁄⁄  "
;
⁄⁄" #
i
€€ 
+=
€€  
$num
€€! "
;
€€" #
break
‹‹ !
;
‹‹! "
case
›› 
$char
››  
:
››  !
break
ﬁﬁ !
;
ﬁﬁ! "
case
ﬂﬂ 
$char
ﬂﬂ  
:
ﬂﬂ  !
break
‡‡ !
;
‡‡! "
case
·· 
$char
··  
:
··  !
if
„„ 
(
„„  
i
„„  !
+
„„" #
$num
„„$ %
<
„„& '
styleLength
„„( 3
)
„„3 4
{
‰‰ 
c
ÂÂ  !
=
ÂÂ" #
GetUTF16
ÂÂ$ ,
(
ÂÂ, -
tagDefinition
ÂÂ- :
,
ÂÂ: ;
i
ÂÂ< =
+
ÂÂ> ?
$num
ÂÂ@ A
)
ÂÂA B
;
ÂÂB C
i
ÁÁ  !
+=
ÁÁ" $
$num
ÁÁ% &
;
ÁÁ& '
}
ËË 
break
ÈÈ !
;
ÈÈ! "
case
ÍÍ 
$char
ÍÍ  
:
ÍÍ  !
if
ÏÏ 
(
ÏÏ  
i
ÏÏ  !
+
ÏÏ" #
$num
ÏÏ$ %
<
ÏÏ& '
styleLength
ÏÏ( 3
)
ÏÏ3 4
{
ÌÌ 
c
ÓÓ  !
=
ÓÓ" #
GetUTF32
ÓÓ$ ,
(
ÓÓ, -
tagDefinition
ÓÓ- :
,
ÓÓ: ;
i
ÓÓ< =
+
ÓÓ> ?
$num
ÓÓ@ A
)
ÓÓA B
;
ÓÓB C
i
  !
+=
" $
$num
% &
;
& '
}
ÒÒ 
break
ÚÚ !
;
ÚÚ! "
}
ÛÛ 
}
ÙÙ 
if
ˆˆ 
(
ˆˆ 
c
ˆˆ 
==
ˆˆ 
$num
ˆˆ 
)
ˆˆ 
{
˜˜ 
if
¯¯ 
(
¯¯ 
	IsTagName
¯¯ !
(
¯¯! "
ref
¯¯" %
tagDefinition
¯¯& 3
,
¯¯3 4
$str
¯¯5 ;
,
¯¯; <
i
¯¯= >
)
¯¯> ?
)
¯¯? @
{
˘˘ 
if
˙˙ 
(
˙˙ 

writeIndex
˙˙ &
==
˙˙' )

charBuffer
˙˙* 4
.
˙˙4 5
Length
˙˙5 ;
)
˙˙; <!
ResizeInternalArray
˙˙= P
(
˙˙P Q
ref
˙˙Q T

charBuffer
˙˙U _
)
˙˙_ `
;
˙˙` a

charBuffer
¸¸ "
[
¸¸" #

writeIndex
¸¸# -
]
¸¸- .
.
¸¸. /
unicode
¸¸/ 6
=
¸¸7 8
$num
¸¸9 ;
;
¸¸; <

writeIndex
˝˝ "
+=
˝˝# %
$num
˝˝& '
;
˝˝' (
i
˛˛ 
+=
˛˛ 
$num
˛˛ 
;
˛˛ 
continue
Ä Ä   
;
Ä Ä   !
}
Å Å  
else
Ç Ç  
if
Ç Ç  
(
Ç Ç  
	IsTagName
Ç Ç  &
(
Ç Ç & '
ref
Ç Ç ' *
tagDefinition
Ç Ç + 8
,
Ç Ç 8 9
$str
Ç Ç : B
,
Ç Ç B C
i
Ç Ç D E
)
Ç Ç E F
)
Ç Ç F G
{
É É  
if
Ñ Ñ  
(
Ñ Ñ  

writeIndex
Ñ Ñ  &
==
Ñ Ñ ' )

charBuffer
Ñ Ñ * 4
.
Ñ Ñ 4 5
Length
Ñ Ñ 5 ;
)
Ñ Ñ ; <!
ResizeInternalArray
Ñ Ñ = P
(
Ñ Ñ P Q
ref
Ñ Ñ Q T

charBuffer
Ñ Ñ U _
)
Ñ Ñ _ `
;
Ñ Ñ ` a

charBuffer
Ü Ü  "
[
Ü Ü " #

writeIndex
Ü Ü # -
]
Ü Ü - .
.
Ü Ü . /
unicode
Ü Ü / 6
=
Ü Ü 7 8
$num
Ü Ü 9 <
;
Ü Ü < =

writeIndex
á á  "
+=
á á # %
$num
á á & '
;
á á ' (
i
à à  
+=
à à  
$num
à à  
;
à à  
continue
ä ä   
;
ä ä   !
}
ã ã  
else
å å  
if
å å  
(
å å  
	IsTagName
å å  &
(
å å & '
ref
å å ' *
tagDefinition
å å + 8
,
å å 8 9
$str
å å : B
,
å å B C
i
å å D E
)
å å E F
)
å å F G
{
ç ç  
if
é é  
(
é é  

writeIndex
é é  &
==
é é ' )

charBuffer
é é * 4
.
é é 4 5
Length
é é 5 ;
)
é é ; <!
ResizeInternalArray
é é = P
(
é é P Q
ref
é é Q T

charBuffer
é é U _
)
é é _ `
;
é é ` a

charBuffer
ê ê  "
[
ê ê " #

writeIndex
ê ê # -
]
ê ê - .
.
ê ê . /
unicode
ê ê / 6
=
ê ê 7 8
$num
ê ê 9 ?
;
ê ê ? @

writeIndex
ë ë  "
+=
ë ë # %
$num
ë ë & '
;
ë ë ' (
i
í í  
+=
í í  
$num
í í  
;
í í  
continue
î î   
;
î î   !
}
ï ï  
else
ñ ñ  
if
ñ ñ  
(
ñ ñ  
	IsTagName
ñ ñ  &
(
ñ ñ & '
ref
ñ ñ ' *
tagDefinition
ñ ñ + 8
,
ñ ñ 8 9
$str
ñ ñ : C
,
ñ ñ C D
i
ñ ñ E F
)
ñ ñ F G
)
ñ ñ G H
{
ó ó  
int
ò ò  
offset
ò ò  "
;
ò ò " #
if
ô ô  
(
ô ô  $
ReplaceOpeningStyleTag
ô ô  2
(
ô ô 2 3
ref
ô ô 3 6
tagDefinition
ô ô 7 D
,
ô ô D E
i
ô ô F G
,
ô ô G H
out
ô ô I L
offset
ô ô M S
,
ô ô S T
ref
ô ô U X

charBuffer
ô ô Y c
,
ô ô c d
ref
ô ô e h

writeIndex
ô ô i s
)
ô ô s t
)
ô ô t u
{
ö ö  
i
õ õ  
=
õ õ  
offset
õ õ   &
;
õ õ & '
continue
ú ú  $
;
ú ú $ %
}
ù ù  
}
û û  
else
ü ü  
if
ü ü  
(
ü ü  
	IsTagName
ü ü  &
(
ü ü & '
ref
ü ü ' *
tagDefinition
ü ü + 8
,
ü ü 8 9
$str
ü ü : D
,
ü ü D E
i
ü ü F G
)
ü ü G H
)
ü ü H I
{
† †  $
ReplaceClosingStyleTag
° °  .
(
° ° . /
ref
° ° / 2
tagDefinition
° ° 3 @
,
° ° @ A
i
° ° B C
,
° ° C D
ref
° ° E H

charBuffer
° ° I S
,
° ° S T
ref
° ° U X

writeIndex
° ° Y c
)
° ° c d
;
° ° d e
i
§ §  
+=
§ §  
$num
§ §  
;
§ §  
continue
• •   
;
• •   !
}
¶ ¶  
}
ß ß  
if
© ©  
(
© ©  

writeIndex
© ©  
==
© ©  !

charBuffer
© © " ,
.
© © , -
Length
© © - 3
)
© © 3 4!
ResizeInternalArray
© © 5 H
(
© © H I
ref
© © I L

charBuffer
© © M W
)
© © W X
;
© © X Y

charBuffer
´ ´  
[
´ ´  

writeIndex
´ ´  %
]
´ ´ % &
.
´ ´ & '
unicode
´ ´ ' .
=
´ ´ / 0
c
´ ´ 1 2
;
´ ´ 2 3

writeIndex
¨ ¨  
+=
¨ ¨  
$num
¨ ¨  
;
¨ ¨   
}
≠ ≠  #
m_TextStyleStackDepth
Ø Ø  !
-=
Ø Ø " $
$num
Ø Ø % &
;
Ø Ø & '
return
± ±  
true
± ±  
;
± ±  
}
≤ ≤  	
bool
º º  $
ReplaceClosingStyleTag
º º  #
(
º º # $
ref
º º $ '
StringBuilder
º º ( 5

sourceText
º º 6 @
,
º º @ A
int
º º B E
srcIndex
º º F N
,
º º N O
ref
º º P S
UnicodeChar
º º T _
[
º º _ `
]
º º ` a

charBuffer
º º b l
,
º º l m
ref
º º n q
int
º º r u

writeIndexº º v Ä
)º º Ä Å
{
Ω Ω  	
int
ø ø  
hashCode
ø ø  
=
ø ø  
m_TextStyleStacks
ø ø  ,
[
ø ø , -#
m_TextStyleStackDepth
ø ø - B
+
ø ø C D
$num
ø ø E F
]
ø ø F G
.
ø ø G H
Pop
ø ø H K
(
ø ø K L
)
ø ø L M
;
ø ø M N
	TMP_Style
¿ ¿  
style
¿ ¿  
=
¿ ¿  
GetStyle
¿ ¿  &
(
¿ ¿ & '
hashCode
¿ ¿ ' /
)
¿ ¿ / 0
;
¿ ¿ 0 1
if
√ √  
(
√ √  
style
√ √  
==
√ √  
null
√ √  
)
√ √  
return
√ √  %
false
√ √ & +
;
√ √ + ,#
m_TextStyleStackDepth
∆ ∆  !
+=
∆ ∆ " $
$num
∆ ∆ % &
;
∆ ∆ & '
int
» »  
styleLength
» »  
=
» »  
style
» »  #
.
» » # $"
styleClosingTagArray
» » $ 8
.
» » 8 9
Length
» » 9 ?
;
» » ? @
int
À À  
[
À À  
]
À À  
tagDefinition
À À  
=
À À   !
style
À À " '
.
À À ' ("
styleClosingTagArray
À À ( <
;
À À < =
for
Õ Õ  
(
Õ Õ  
int
Õ Õ  
i
Õ Õ  
=
Õ Õ  
$num
Õ Õ  
;
Õ Õ  
i
Õ Õ  
<
Õ Õ  
styleLength
Õ Õ   +
;
Õ Õ + ,
i
Õ Õ - .
++
Õ Õ . 0
)
Õ Õ 0 1
{
Œ Œ  
int
œ œ  
c
œ œ  
=
œ œ  
tagDefinition
œ œ  %
[
œ œ % &
i
œ œ & '
]
œ œ ' (
;
œ œ ( )
if
— —  
(
— —  
c
— —  
==
— —  
$char
— —  
&&
— —   
i
— — ! "
+
— — # $
$num
— — % &
<
— — ' (
styleLength
— — ) 4
)
— — 4 5
{
“ “  
switch
” ”  
(
” ”  
tagDefinition
” ”  )
[
” ” ) *
i
” ” * +
+
” ” , -
$num
” ” . /
]
” ” / 0
)
” ” 0 1
{
‘ ‘  
case
’ ’  
$char
’ ’  !
:
’ ’ ! "
i
÷ ÷  
+=
÷ ÷   
$num
÷ ÷ ! "
;
÷ ÷ " #
break
◊ ◊  !
;
◊ ◊ ! "
case
ÿ ÿ  
$char
ÿ ÿ   
:
ÿ ÿ   !
c
Ÿ Ÿ  
=
Ÿ Ÿ  
$num
Ÿ Ÿ   "
;
Ÿ Ÿ " #
i
⁄ ⁄  
+=
⁄ ⁄   
$num
⁄ ⁄ ! "
;
⁄ ⁄ " #
break
€ €  !
;
€ € ! "
case
‹ ‹  
$char
‹ ‹   
:
‹ ‹   !
break
› ›  !
;
› › ! "
case
ﬁ ﬁ  
$char
ﬁ ﬁ   
:
ﬁ ﬁ   !
break
ﬂ ﬂ  !
;
ﬂ ﬂ ! "
case
‡ ‡  
$char
‡ ‡   
:
‡ ‡   !
if
‚ ‚  
(
‚ ‚   
i
‚ ‚   !
+
‚ ‚ " #
$num
‚ ‚ $ %
<
‚ ‚ & '
styleLength
‚ ‚ ( 3
)
‚ ‚ 3 4
{
„ „  
c
‰ ‰   !
=
‰ ‰ " #
GetUTF16
‰ ‰ $ ,
(
‰ ‰ , -
tagDefinition
‰ ‰ - :
,
‰ ‰ : ;
i
‰ ‰ < =
+
‰ ‰ > ?
$num
‰ ‰ @ A
)
‰ ‰ A B
;
‰ ‰ B C
i
Ê Ê   !
+=
Ê Ê " $
$num
Ê Ê % &
;
Ê Ê & '
}
Á Á  
break
Ë Ë  !
;
Ë Ë ! "
case
È È  
$char
È È   
:
È È   !
if
Î Î  
(
Î Î   
i
Î Î   !
+
Î Î " #
$num
Î Î $ %
<
Î Î & '
styleLength
Î Î ( 3
)
Î Î 3 4
{
Ï Ï  
c
Ì Ì   !
=
Ì Ì " #
GetUTF32
Ì Ì $ ,
(
Ì Ì , -
tagDefinition
Ì Ì - :
,
Ì Ì : ;
i
Ì Ì < =
+
Ì Ì > ?
$num
Ì Ì @ A
)
Ì Ì A B
;
Ì Ì B C
i
Ô Ô   !
+=
Ô Ô " $
$num
Ô Ô % &
;
Ô Ô & '
}
   
break
Ò Ò  !
;
Ò Ò ! "
}
Ú Ú  
}
Û Û  
if
ı ı  
(
ı ı  
c
ı ı  
==
ı ı  
$num
ı ı  
)
ı ı  
{
ˆ ˆ  
if
˜ ˜  
(
˜ ˜  
	IsTagName
˜ ˜  !
(
˜ ˜ ! "
ref
˜ ˜ " %
tagDefinition
˜ ˜ & 3
,
˜ ˜ 3 4
$str
˜ ˜ 5 ;
,
˜ ˜ ; <
i
˜ ˜ = >
)
˜ ˜ > ?
)
˜ ˜ ? @
{
¯ ¯  
if
˘ ˘  
(
˘ ˘  

writeIndex
˘ ˘  &
==
˘ ˘ ' )

charBuffer
˘ ˘ * 4
.
˘ ˘ 4 5
Length
˘ ˘ 5 ;
)
˘ ˘ ; <!
ResizeInternalArray
˘ ˘ = P
(
˘ ˘ P Q
ref
˘ ˘ Q T

charBuffer
˘ ˘ U _
)
˘ ˘ _ `
;
˘ ˘ ` a

charBuffer
˚ ˚  "
[
˚ ˚ " #

writeIndex
˚ ˚ # -
]
˚ ˚ - .
.
˚ ˚ . /
unicode
˚ ˚ / 6
=
˚ ˚ 7 8
$num
˚ ˚ 9 ;
;
˚ ˚ ; <

writeIndex
¸ ¸  "
+=
¸ ¸ # %
$num
¸ ¸ & '
;
¸ ¸ ' (
i
˝ ˝  
+=
˝ ˝  
$num
˝ ˝  
;
˝ ˝  
continue
ˇ ˇ   
;
ˇ ˇ   !
}
Ä!Ä! 
else
Å!Å! 
if
Å!Å! 
(
Å!Å! 
	IsTagName
Å!Å! &
(
Å!Å!& '
ref
Å!Å!' *
tagDefinition
Å!Å!+ 8
,
Å!Å!8 9
$str
Å!Å!: B
,
Å!Å!B C
i
Å!Å!D E
)
Å!Å!E F
)
Å!Å!F G
{
Ç!Ç! 
if
É!É! 
(
É!É! 

writeIndex
É!É! &
==
É!É!' )

charBuffer
É!É!* 4
.
É!É!4 5
Length
É!É!5 ;
)
É!É!; <!
ResizeInternalArray
É!É!= P
(
É!É!P Q
ref
É!É!Q T

charBuffer
É!É!U _
)
É!É!_ `
;
É!É!` a

charBuffer
Ö!Ö! "
[
Ö!Ö!" #

writeIndex
Ö!Ö!# -
]
Ö!Ö!- .
.
Ö!Ö!. /
unicode
Ö!Ö!/ 6
=
Ö!Ö!7 8
$num
Ö!Ö!9 <
;
Ö!Ö!< =

writeIndex
Ü!Ü! "
+=
Ü!Ü!# %
$num
Ü!Ü!& '
;
Ü!Ü!' (
i
á!á! 
+=
á!á! 
$num
á!á! 
;
á!á! 
continue
â!â!  
;
â!â!  !
}
ä!ä! 
else
ã!ã! 
if
ã!ã! 
(
ã!ã! 
	IsTagName
ã!ã! &
(
ã!ã!& '
ref
ã!ã!' *
tagDefinition
ã!ã!+ 8
,
ã!ã!8 9
$str
ã!ã!: B
,
ã!ã!B C
i
ã!ã!D E
)
ã!ã!E F
)
ã!ã!F G
{
å!å! 
if
ç!ç! 
(
ç!ç! 

writeIndex
ç!ç! &
==
ç!ç!' )

charBuffer
ç!ç!* 4
.
ç!ç!4 5
Length
ç!ç!5 ;
)
ç!ç!; <!
ResizeInternalArray
ç!ç!= P
(
ç!ç!P Q
ref
ç!ç!Q T

charBuffer
ç!ç!U _
)
ç!ç!_ `
;
ç!ç!` a

charBuffer
è!è! "
[
è!è!" #

writeIndex
è!è!# -
]
è!è!- .
.
è!è!. /
unicode
è!è!/ 6
=
è!è!7 8
$num
è!è!9 ?
;
è!è!? @

writeIndex
ê!ê! "
+=
ê!ê!# %
$num
ê!ê!& '
;
ê!ê!' (
i
ë!ë! 
+=
ë!ë! 
$num
ë!ë! 
;
ë!ë! 
continue
ì!ì!  
;
ì!ì!  !
}
î!î! 
else
ï!ï! 
if
ï!ï! 
(
ï!ï! 
	IsTagName
ï!ï! &
(
ï!ï!& '
ref
ï!ï!' *
tagDefinition
ï!ï!+ 8
,
ï!ï!8 9
$str
ï!ï!: C
,
ï!ï!C D
i
ï!ï!E F
)
ï!ï!F G
)
ï!ï!G H
{
ñ!ñ! 
int
ó!ó! 
offset
ó!ó! "
;
ó!ó!" #
if
ò!ò! 
(
ò!ò! $
ReplaceOpeningStyleTag
ò!ò! 2
(
ò!ò!2 3
ref
ò!ò!3 6
tagDefinition
ò!ò!7 D
,
ò!ò!D E
i
ò!ò!F G
,
ò!ò!G H
out
ò!ò!I L
offset
ò!ò!M S
,
ò!ò!S T
ref
ò!ò!U X

charBuffer
ò!ò!Y c
,
ò!ò!c d
ref
ò!ò!e h

writeIndex
ò!ò!i s
)
ò!ò!s t
)
ò!ò!t u
{
ô!ô! 
i
ö!ö! 
=
ö!ö! 
offset
ö!ö!  &
;
ö!ö!& '
continue
õ!õ! $
;
õ!õ!$ %
}
ú!ú! 
}
ù!ù! 
else
û!û! 
if
û!û! 
(
û!û! 
	IsTagName
û!û! &
(
û!û!& '
ref
û!û!' *
tagDefinition
û!û!+ 8
,
û!û!8 9
$str
û!û!: D
,
û!û!D E
i
û!û!F G
)
û!û!G H
)
û!û!H I
{
ü!ü! $
ReplaceClosingStyleTag
†!†! .
(
†!†!. /
ref
†!†!/ 2
tagDefinition
†!†!3 @
,
†!†!@ A
i
†!†!B C
,
†!†!C D
ref
†!†!E H

charBuffer
†!†!I S
,
†!†!S T
ref
†!†!U X

writeIndex
†!†!Y c
)
†!†!c d
;
†!†!d e
i
£!£! 
+=
£!£! 
$num
£!£! 
;
£!£! 
continue
§!§!  
;
§!§!  !
}
•!•! 
}
¶!¶! 
if
®!®! 
(
®!®! 

writeIndex
®!®! 
==
®!®! !

charBuffer
®!®!" ,
.
®!®!, -
Length
®!®!- 3
)
®!®!3 4!
ResizeInternalArray
®!®!5 H
(
®!®!H I
ref
®!®!I L

charBuffer
®!®!M W
)
®!®!W X
;
®!®!X Y

charBuffer
™!™! 
[
™!™! 

writeIndex
™!™! %
]
™!™!% &
.
™!™!& '
unicode
™!™!' .
=
™!™!/ 0
c
™!™!1 2
;
™!™!2 3

writeIndex
´!´! 
+=
´!´! 
$num
´!´! 
;
´!´!  
}
¨!¨! #
m_TextStyleStackDepth
Æ!Æ! !
-=
Æ!Æ!" $
$num
Æ!Æ!% &
;
Æ!Æ!& '
return
∞!∞! 
true
∞!∞! 
;
∞!∞! 
}
±!±! 	
	TMP_Style
∏!∏! 
GetStyle
∏!∏! 
(
∏!∏! 
int
∏!∏! 
hashCode
∏!∏! '
)
∏!∏!' (
{
π!π! 	
	TMP_Style
∫!∫! 
style
∫!∫! 
=
∫!∫! 
null
∫!∫! "
;
∫!∫!" #
if
Ω!Ω! 
(
Ω!Ω! 
m_StyleSheet
Ω!Ω! 
!=
Ω!Ω! 
null
Ω!Ω!  $
)
Ω!Ω!$ %
{
æ!æ! 
style
ø!ø! 
=
ø!ø! 
m_StyleSheet
ø!ø! $
.
ø!ø!$ %
GetStyle
ø!ø!% -
(
ø!ø!- .
hashCode
ø!ø!. 6
)
ø!ø!6 7
;
ø!ø!7 8
if
¡!¡! 
(
¡!¡! 
style
¡!¡! 
!=
¡!¡! 
null
¡!¡! !
)
¡!¡!! "
return
¬!¬! 
style
¬!¬!  
;
¬!¬!  !
}
√!√! 
if
≈!≈! 
(
≈!≈! 
TMP_Settings
≈!≈! 
.
≈!≈! 
defaultStyleSheet
≈!≈! .
!=
≈!≈!/ 1
null
≈!≈!2 6
)
≈!≈!6 7
style
∆!∆! 
=
∆!∆! 
TMP_Settings
∆!∆! $
.
∆!∆!$ %
defaultStyleSheet
∆!∆!% 6
.
∆!∆!6 7
GetStyle
∆!∆!7 ?
(
∆!∆!? @
hashCode
∆!∆!@ H
)
∆!∆!H I
;
∆!∆!I J
return
»!»! 
style
»!»! 
;
»!»! 
}
…!…! 	
bool
À!À! #
InsertOpeningStyleTag
À!À! "
(
À!À!" #
	TMP_Style
À!À!# ,
style
À!À!- 2
,
À!À!2 3
int
À!À!4 7
srcIndex
À!À!8 @
,
À!À!@ A
ref
À!À!B E
UnicodeChar
À!À!F Q
[
À!À!Q R
]
À!À!R S

charBuffer
À!À!T ^
,
À!À!^ _
ref
À!À!` c
int
À!À!d g

writeIndex
À!À!h r
)
À!À!r s
{
Ã!Ã! 	
if
Œ!Œ! 
(
Œ!Œ! 
style
Œ!Œ! 
==
Œ!Œ! 
null
Œ!Œ! 
)
Œ!Œ! 
return
Œ!Œ! %
false
Œ!Œ!& +
;
Œ!Œ!+ ,
m_TextStyleStacks
–!–! 
[
–!–! 
$num
–!–! 
]
–!–!  
.
–!–!  !
Push
–!–!! %
(
–!–!% &
style
–!–!& +
.
–!–!+ ,
hashCode
–!–!, 4
)
–!–!4 5
;
–!–!5 6
int
“!“! 
styleLength
“!“! 
=
“!“! 
style
“!“! #
.
“!“!# $"
styleOpeningTagArray
“!“!$ 8
.
“!“!8 9
Length
“!“!9 ?
;
“!“!? @
int
’!’! 
[
’!’! 
]
’!’! 
tagDefinition
’!’! 
=
’!’!  !
style
’!’!" '
.
’!’!' ("
styleOpeningTagArray
’!’!( <
;
’!’!< =
for
◊!◊! 
(
◊!◊! 
int
◊!◊! 
i
◊!◊! 
=
◊!◊! 
$num
◊!◊! 
;
◊!◊! 
i
◊!◊! 
<
◊!◊! 
styleLength
◊!◊!  +
;
◊!◊!+ ,
i
◊!◊!- .
++
◊!◊!. 0
)
◊!◊!0 1
{
ÿ!ÿ! 
int
Ÿ!Ÿ! 
c
Ÿ!Ÿ! 
=
Ÿ!Ÿ! 
tagDefinition
Ÿ!Ÿ! %
[
Ÿ!Ÿ!% &
i
Ÿ!Ÿ!& '
]
Ÿ!Ÿ!' (
;
Ÿ!Ÿ!( )
if
€!€! 
(
€!€! 
c
€!€! 
==
€!€! 
$char
€!€! 
&&
€!€!  
i
€!€!! "
+
€!€!# $
$num
€!€!% &
<
€!€!' (
styleLength
€!€!) 4
)
€!€!4 5
{
‹!‹! 
switch
›!›! 
(
›!›! 
tagDefinition
›!›! )
[
›!›!) *
i
›!›!* +
+
›!›!, -
$num
›!›!. /
]
›!›!/ 0
)
›!›!0 1
{
ﬁ!ﬁ! 
case
ﬂ!ﬂ! 
$char
ﬂ!ﬂ! !
:
ﬂ!ﬂ!! "
i
‡!‡! 
+=
‡!‡!  
$num
‡!‡!! "
;
‡!‡!" #
break
·!·! !
;
·!·!! "
case
‚!‚! 
$char
‚!‚!  
:
‚!‚!  !
c
„!„! 
=
„!„! 
$num
„!„!  "
;
„!„!" #
i
‰!‰! 
+=
‰!‰!  
$num
‰!‰!! "
;
‰!‰!" #
break
Â!Â! !
;
Â!Â!! "
case
Ê!Ê! 
$char
Ê!Ê!  
:
Ê!Ê!  !
break
Á!Á! !
;
Á!Á!! "
case
Ë!Ë! 
$char
Ë!Ë!  
:
Ë!Ë!  !
break
È!È! !
;
È!È!! "
case
Í!Í! 
$char
Í!Í!  
:
Í!Í!  !
if
Ï!Ï! 
(
Ï!Ï!  
i
Ï!Ï!  !
+
Ï!Ï!" #
$num
Ï!Ï!$ %
<
Ï!Ï!& '
styleLength
Ï!Ï!( 3
)
Ï!Ï!3 4
{
Ì!Ì! 
c
Ó!Ó!  !
=
Ó!Ó!" #
GetUTF16
Ó!Ó!$ ,
(
Ó!Ó!, -
tagDefinition
Ó!Ó!- :
,
Ó!Ó!: ;
i
Ó!Ó!< =
+
Ó!Ó!> ?
$num
Ó!Ó!@ A
)
Ó!Ó!A B
;
Ó!Ó!B C
i
!!  !
+=
!!" $
$num
!!% &
;
!!& '
}
Ò!Ò! 
break
Ú!Ú! !
;
Ú!Ú!! "
case
Û!Û! 
$char
Û!Û!  
:
Û!Û!  !
if
ı!ı! 
(
ı!ı!  
i
ı!ı!  !
+
ı!ı!" #
$num
ı!ı!$ %
<
ı!ı!& '
styleLength
ı!ı!( 3
)
ı!ı!3 4
{
ˆ!ˆ! 
c
˜!˜!  !
=
˜!˜!" #
GetUTF32
˜!˜!$ ,
(
˜!˜!, -
tagDefinition
˜!˜!- :
,
˜!˜!: ;
i
˜!˜!< =
+
˜!˜!> ?
$num
˜!˜!@ A
)
˜!˜!A B
;
˜!˜!B C
i
˘!˘!  !
+=
˘!˘!" $
$num
˘!˘!% &
;
˘!˘!& '
}
˙!˙! 
break
˚!˚! !
;
˚!˚!! "
}
¸!¸! 
}
˝!˝! 
if
ˇ!ˇ! 
(
ˇ!ˇ! 
c
ˇ!ˇ! 
==
ˇ!ˇ! 
$num
ˇ!ˇ! 
)
ˇ!ˇ! 
{
Ä"Ä" 
if
Å"Å" 
(
Å"Å" 
	IsTagName
Å"Å" !
(
Å"Å"! "
ref
Å"Å"" %
tagDefinition
Å"Å"& 3
,
Å"Å"3 4
$str
Å"Å"5 ;
,
Å"Å"; <
i
Å"Å"= >
)
Å"Å"> ?
)
Å"Å"? @
{
Ç"Ç" 
if
É"É" 
(
É"É" 

writeIndex
É"É" &
==
É"É"' )

charBuffer
É"É"* 4
.
É"É"4 5
Length
É"É"5 ;
)
É"É"; <!
ResizeInternalArray
É"É"= P
(
É"É"P Q
ref
É"É"Q T

charBuffer
É"É"U _
)
É"É"_ `
;
É"É"` a

charBuffer
Ö"Ö" "
[
Ö"Ö"" #

writeIndex
Ö"Ö"# -
]
Ö"Ö"- .
.
Ö"Ö". /
unicode
Ö"Ö"/ 6
=
Ö"Ö"7 8
$num
Ö"Ö"9 ;
;
Ö"Ö"; <

writeIndex
Ü"Ü" "
+=
Ü"Ü"# %
$num
Ü"Ü"& '
;
Ü"Ü"' (
i
á"á" 
+=
á"á" 
$num
á"á" 
;
á"á" 
continue
â"â"  
;
â"â"  !
}
ä"ä" 
else
ã"ã" 
if
ã"ã" 
(
ã"ã" 
	IsTagName
ã"ã" &
(
ã"ã"& '
ref
ã"ã"' *
tagDefinition
ã"ã"+ 8
,
ã"ã"8 9
$str
ã"ã": B
,
ã"ã"B C
i
ã"ã"D E
)
ã"ã"E F
)
ã"ã"F G
{
å"å" 
if
ç"ç" 
(
ç"ç" 

writeIndex
ç"ç" &
==
ç"ç"' )

charBuffer
ç"ç"* 4
.
ç"ç"4 5
Length
ç"ç"5 ;
)
ç"ç"; <!
ResizeInternalArray
ç"ç"= P
(
ç"ç"P Q
ref
ç"ç"Q T

charBuffer
ç"ç"U _
)
ç"ç"_ `
;
ç"ç"` a

charBuffer
è"è" "
[
è"è"" #

writeIndex
è"è"# -
]
è"è"- .
.
è"è". /
unicode
è"è"/ 6
=
è"è"7 8
$num
è"è"9 <
;
è"è"< =

writeIndex
ê"ê" "
+=
ê"ê"# %
$num
ê"ê"& '
;
ê"ê"' (
i
ë"ë" 
+=
ë"ë" 
$num
ë"ë" 
;
ë"ë" 
continue
ì"ì"  
;
ì"ì"  !
}
î"î" 
else
ï"ï" 
if
ï"ï" 
(
ï"ï" 
	IsTagName
ï"ï" &
(
ï"ï"& '
ref
ï"ï"' *
tagDefinition
ï"ï"+ 8
,
ï"ï"8 9
$str
ï"ï": B
,
ï"ï"B C
i
ï"ï"D E
)
ï"ï"E F
)
ï"ï"F G
{
ñ"ñ" 
if
ó"ó" 
(
ó"ó" 

writeIndex
ó"ó" &
==
ó"ó"' )

charBuffer
ó"ó"* 4
.
ó"ó"4 5
Length
ó"ó"5 ;
)
ó"ó"; <!
ResizeInternalArray
ó"ó"= P
(
ó"ó"P Q
ref
ó"ó"Q T

charBuffer
ó"ó"U _
)
ó"ó"_ `
;
ó"ó"` a

charBuffer
ô"ô" "
[
ô"ô"" #

writeIndex
ô"ô"# -
]
ô"ô"- .
.
ô"ô". /
unicode
ô"ô"/ 6
=
ô"ô"7 8
$num
ô"ô"9 ?
;
ô"ô"? @

writeIndex
ö"ö" "
+=
ö"ö"# %
$num
ö"ö"& '
;
ö"ö"' (
i
õ"õ" 
+=
õ"õ" 
$num
õ"õ" 
;
õ"õ" 
continue
ù"ù"  
;
ù"ù"  !
}
û"û" 
else
ü"ü" 
if
ü"ü" 
(
ü"ü" 
	IsTagName
ü"ü" &
(
ü"ü"& '
ref
ü"ü"' *
tagDefinition
ü"ü"+ 8
,
ü"ü"8 9
$str
ü"ü": C
,
ü"ü"C D
i
ü"ü"E F
)
ü"ü"F G
)
ü"ü"G H
{
†"†" 
int
°"°" 
offset
°"°" "
;
°"°"" #
if
¢"¢" 
(
¢"¢" $
ReplaceOpeningStyleTag
¢"¢" 2
(
¢"¢"2 3
ref
¢"¢"3 6
tagDefinition
¢"¢"7 D
,
¢"¢"D E
i
¢"¢"F G
,
¢"¢"G H
out
¢"¢"I L
offset
¢"¢"M S
,
¢"¢"S T
ref
¢"¢"U X

charBuffer
¢"¢"Y c
,
¢"¢"c d
ref
¢"¢"e h

writeIndex
¢"¢"i s
)
¢"¢"s t
)
¢"¢"t u
{
£"£" 
i
§"§" 
=
§"§" 
offset
§"§"  &
;
§"§"& '
continue
•"•" $
;
•"•"$ %
}
¶"¶" 
}
ß"ß" 
else
®"®" 
if
®"®" 
(
®"®" 
	IsTagName
®"®" &
(
®"®"& '
ref
®"®"' *
tagDefinition
®"®"+ 8
,
®"®"8 9
$str
®"®": D
,
®"®"D E
i
®"®"F G
)
®"®"G H
)
®"®"H I
{
©"©" $
ReplaceClosingStyleTag
™"™" .
(
™"™". /
ref
™"™"/ 2
tagDefinition
™"™"3 @
,
™"™"@ A
i
™"™"B C
,
™"™"C D
ref
™"™"E H

charBuffer
™"™"I S
,
™"™"S T
ref
™"™"U X

writeIndex
™"™"Y c
)
™"™"c d
;
™"™"d e
i
≠"≠" 
+=
≠"≠" 
$num
≠"≠" 
;
≠"≠" 
continue
Æ"Æ"  
;
Æ"Æ"  !
}
Ø"Ø" 
}
∞"∞" 
if
≤"≤" 
(
≤"≤" 

writeIndex
≤"≤" 
==
≤"≤" !

charBuffer
≤"≤"" ,
.
≤"≤", -
Length
≤"≤"- 3
)
≤"≤"3 4!
ResizeInternalArray
≤"≤"5 H
(
≤"≤"H I
ref
≤"≤"I L

charBuffer
≤"≤"M W
)
≤"≤"W X
;
≤"≤"X Y

charBuffer
¥"¥" 
[
¥"¥" 

writeIndex
¥"¥" %
]
¥"¥"% &
.
¥"¥"& '
unicode
¥"¥"' .
=
¥"¥"/ 0
c
¥"¥"1 2
;
¥"¥"2 3

writeIndex
µ"µ" 
+=
µ"µ" 
$num
µ"µ" 
;
µ"µ"  
}
∂"∂" #
m_TextStyleStackDepth
∏"∏" !
=
∏"∏"" #
$num
∏"∏"$ %
;
∏"∏"% &
return
∫"∫" 
true
∫"∫" 
;
∫"∫" 
}
ª"ª" 	
bool
Ω"Ω" #
InsertClosingStyleTag
Ω"Ω" "
(
Ω"Ω"" #
ref
Ω"Ω"# &
UnicodeChar
Ω"Ω"' 2
[
Ω"Ω"2 3
]
Ω"Ω"3 4

charBuffer
Ω"Ω"5 ?
,
Ω"Ω"? @
ref
Ω"Ω"A D
int
Ω"Ω"E H

writeIndex
Ω"Ω"I S
)
Ω"Ω"S T
{
æ"æ" 	
int
¿"¿" 
hashCode
¿"¿" 
=
¿"¿" 
m_TextStyleStacks
¿"¿" ,
[
¿"¿", -
$num
¿"¿"- .
]
¿"¿". /
.
¿"¿"/ 0
Pop
¿"¿"0 3
(
¿"¿"3 4
)
¿"¿"4 5
;
¿"¿"5 6
	TMP_Style
¡"¡" 
style
¡"¡" 
=
¡"¡" 
GetStyle
¡"¡" &
(
¡"¡"& '
hashCode
¡"¡"' /
)
¡"¡"/ 0
;
¡"¡"0 1
int
√"√" 
styleLength
√"√" 
=
√"√" 
style
√"√" #
.
√"√"# $"
styleClosingTagArray
√"√"$ 8
.
√"√"8 9
Length
√"√"9 ?
;
√"√"? @
int
∆"∆" 
[
∆"∆" 
]
∆"∆" 
tagDefinition
∆"∆" 
=
∆"∆"  !
style
∆"∆"" '
.
∆"∆"' ("
styleClosingTagArray
∆"∆"( <
;
∆"∆"< =
for
»"»" 
(
»"»" 
int
»"»" 
i
»"»" 
=
»"»" 
$num
»"»" 
;
»"»" 
i
»"»" 
<
»"»" 
styleLength
»"»"  +
;
»"»"+ ,
i
»"»"- .
++
»"»". 0
)
»"»"0 1
{
…"…" 
int
 " " 
c
 " " 
=
 " " 
tagDefinition
 " " %
[
 " "% &
i
 " "& '
]
 " "' (
;
 " "( )
if
Ã"Ã" 
(
Ã"Ã" 
c
Ã"Ã" 
==
Ã"Ã" 
$char
Ã"Ã" 
&&
Ã"Ã"  
i
Ã"Ã"! "
+
Ã"Ã"# $
$num
Ã"Ã"% &
<
Ã"Ã"' (
styleLength
Ã"Ã") 4
)
Ã"Ã"4 5
{
Õ"Õ" 
switch
Œ"Œ" 
(
Œ"Œ" 
tagDefinition
Œ"Œ" )
[
Œ"Œ") *
i
Œ"Œ"* +
+
Œ"Œ", -
$num
Œ"Œ". /
]
Œ"Œ"/ 0
)
Œ"Œ"0 1
{
œ"œ" 
case
–"–" 
$char
–"–" !
:
–"–"! "
i
—"—" 
+=
—"—"  
$num
—"—"! "
;
—"—"" #
break
“"“" !
;
“"“"! "
case
”"”" 
$char
”"”"  
:
”"”"  !
c
‘"‘" 
=
‘"‘" 
$num
‘"‘"  "
;
‘"‘"" #
i
’"’" 
+=
’"’"  
$num
’"’"! "
;
’"’"" #
break
÷"÷" !
;
÷"÷"! "
case
◊"◊" 
$char
◊"◊"  
:
◊"◊"  !
break
ÿ"ÿ" !
;
ÿ"ÿ"! "
case
Ÿ"Ÿ" 
$char
Ÿ"Ÿ"  
:
Ÿ"Ÿ"  !
break
⁄"⁄" !
;
⁄"⁄"! "
case
€"€" 
$char
€"€"  
:
€"€"  !
if
›"›" 
(
›"›"  
i
›"›"  !
+
›"›"" #
$num
›"›"$ %
<
›"›"& '
styleLength
›"›"( 3
)
›"›"3 4
{
ﬁ"ﬁ" 
c
ﬂ"ﬂ"  !
=
ﬂ"ﬂ"" #
GetUTF16
ﬂ"ﬂ"$ ,
(
ﬂ"ﬂ", -
tagDefinition
ﬂ"ﬂ"- :
,
ﬂ"ﬂ": ;
i
ﬂ"ﬂ"< =
+
ﬂ"ﬂ"> ?
$num
ﬂ"ﬂ"@ A
)
ﬂ"ﬂ"A B
;
ﬂ"ﬂ"B C
i
·"·"  !
+=
·"·"" $
$num
·"·"% &
;
·"·"& '
}
‚"‚" 
break
„"„" !
;
„"„"! "
case
‰"‰" 
$char
‰"‰"  
:
‰"‰"  !
if
Ê"Ê" 
(
Ê"Ê"  
i
Ê"Ê"  !
+
Ê"Ê"" #
$num
Ê"Ê"$ %
<
Ê"Ê"& '
styleLength
Ê"Ê"( 3
)
Ê"Ê"3 4
{
Á"Á" 
c
Ë"Ë"  !
=
Ë"Ë"" #
GetUTF32
Ë"Ë"$ ,
(
Ë"Ë", -
tagDefinition
Ë"Ë"- :
,
Ë"Ë": ;
i
Ë"Ë"< =
+
Ë"Ë"> ?
$num
Ë"Ë"@ A
)
Ë"Ë"A B
;
Ë"Ë"B C
i
Í"Í"  !
+=
Í"Í"" $
$num
Í"Í"% &
;
Í"Í"& '
}
Î"Î" 
break
Ï"Ï" !
;
Ï"Ï"! "
}
Ì"Ì" 
}
Ó"Ó" 
if
Ò"Ò" 
(
Ò"Ò" 
c
Ò"Ò" 
==
Ò"Ò" 
$num
Ò"Ò" 
)
Ò"Ò" 
{
Ú"Ú" 
if
Û"Û" 
(
Û"Û" 
	IsTagName
Û"Û" !
(
Û"Û"! "
ref
Û"Û"" %
tagDefinition
Û"Û"& 3
,
Û"Û"3 4
$str
Û"Û"5 ;
,
Û"Û"; <
i
Û"Û"= >
)
Û"Û"> ?
)
Û"Û"? @
{
Ù"Ù" 
if
ı"ı" 
(
ı"ı" 

writeIndex
ı"ı" &
==
ı"ı"' )

charBuffer
ı"ı"* 4
.
ı"ı"4 5
Length
ı"ı"5 ;
)
ı"ı"; <!
ResizeInternalArray
ı"ı"= P
(
ı"ı"P Q
ref
ı"ı"Q T

charBuffer
ı"ı"U _
)
ı"ı"_ `
;
ı"ı"` a

charBuffer
˜"˜" "
[
˜"˜"" #

writeIndex
˜"˜"# -
]
˜"˜"- .
.
˜"˜". /
unicode
˜"˜"/ 6
=
˜"˜"7 8
$num
˜"˜"9 ;
;
˜"˜"; <

writeIndex
¯"¯" "
+=
¯"¯"# %
$num
¯"¯"& '
;
¯"¯"' (
i
˘"˘" 
+=
˘"˘" 
$num
˘"˘" 
;
˘"˘" 
continue
˚"˚"  
;
˚"˚"  !
}
¸"¸" 
else
˝"˝" 
if
˝"˝" 
(
˝"˝" 
	IsTagName
˝"˝" &
(
˝"˝"& '
ref
˝"˝"' *
tagDefinition
˝"˝"+ 8
,
˝"˝"8 9
$str
˝"˝": B
,
˝"˝"B C
i
˝"˝"D E
)
˝"˝"E F
)
˝"˝"F G
{
˛"˛" 
if
ˇ"ˇ" 
(
ˇ"ˇ" 

writeIndex
ˇ"ˇ" &
==
ˇ"ˇ"' )

charBuffer
ˇ"ˇ"* 4
.
ˇ"ˇ"4 5
Length
ˇ"ˇ"5 ;
)
ˇ"ˇ"; <!
ResizeInternalArray
ˇ"ˇ"= P
(
ˇ"ˇ"P Q
ref
ˇ"ˇ"Q T

charBuffer
ˇ"ˇ"U _
)
ˇ"ˇ"_ `
;
ˇ"ˇ"` a

charBuffer
Å#Å# "
[
Å#Å#" #

writeIndex
Å#Å## -
]
Å#Å#- .
.
Å#Å#. /
unicode
Å#Å#/ 6
=
Å#Å#7 8
$num
Å#Å#9 <
;
Å#Å#< =

writeIndex
Ç#Ç# "
+=
Ç#Ç## %
$num
Ç#Ç#& '
;
Ç#Ç#' (
i
É#É# 
+=
É#É# 
$num
É#É# 
;
É#É# 
continue
Ö#Ö#  
;
Ö#Ö#  !
}
Ü#Ü# 
else
á#á# 
if
á#á# 
(
á#á# 
	IsTagName
á#á# &
(
á#á#& '
ref
á#á#' *
tagDefinition
á#á#+ 8
,
á#á#8 9
$str
á#á#: B
,
á#á#B C
i
á#á#D E
)
á#á#E F
)
á#á#F G
{
à#à# 
if
â#â# 
(
â#â# 

writeIndex
â#â# &
==
â#â#' )

charBuffer
â#â#* 4
.
â#â#4 5
Length
â#â#5 ;
)
â#â#; <!
ResizeInternalArray
â#â#= P
(
â#â#P Q
ref
â#â#Q T

charBuffer
â#â#U _
)
â#â#_ `
;
â#â#` a

charBuffer
ã#ã# "
[
ã#ã#" #

writeIndex
ã#ã## -
]
ã#ã#- .
.
ã#ã#. /
unicode
ã#ã#/ 6
=
ã#ã#7 8
$num
ã#ã#9 ?
;
ã#ã#? @

writeIndex
å#å# "
+=
å#å## %
$num
å#å#& '
;
å#å#' (
i
ç#ç# 
+=
ç#ç# 
$num
ç#ç# 
;
ç#ç# 
continue
è#è#  
;
è#è#  !
}
ê#ê# 
else
ë#ë# 
if
ë#ë# 
(
ë#ë# 
	IsTagName
ë#ë# &
(
ë#ë#& '
ref
ë#ë#' *
tagDefinition
ë#ë#+ 8
,
ë#ë#8 9
$str
ë#ë#: C
,
ë#ë#C D
i
ë#ë#E F
)
ë#ë#F G
)
ë#ë#G H
{
í#í# 
int
ì#ì# 
offset
ì#ì# "
;
ì#ì#" #
if
î#î# 
(
î#î# $
ReplaceOpeningStyleTag
î#î# 2
(
î#î#2 3
ref
î#î#3 6
tagDefinition
î#î#7 D
,
î#î#D E
i
î#î#F G
,
î#î#G H
out
î#î#I L
offset
î#î#M S
,
î#î#S T
ref
î#î#U X

charBuffer
î#î#Y c
,
î#î#c d
ref
î#î#e h

writeIndex
î#î#i s
)
î#î#s t
)
î#î#t u
{
ï#ï# 
i
ñ#ñ# 
=
ñ#ñ# 
offset
ñ#ñ#  &
;
ñ#ñ#& '
continue
ó#ó# $
;
ó#ó#$ %
}
ò#ò# 
}
ô#ô# 
else
ö#ö# 
if
ö#ö# 
(
ö#ö# 
	IsTagName
ö#ö# &
(
ö#ö#& '
ref
ö#ö#' *
tagDefinition
ö#ö#+ 8
,
ö#ö#8 9
$str
ö#ö#: D
,
ö#ö#D E
i
ö#ö#F G
)
ö#ö#G H
)
ö#ö#H I
{
õ#õ# $
ReplaceClosingStyleTag
ú#ú# .
(
ú#ú#. /
ref
ú#ú#/ 2
tagDefinition
ú#ú#3 @
,
ú#ú#@ A
i
ú#ú#B C
,
ú#ú#C D
ref
ú#ú#E H

charBuffer
ú#ú#I S
,
ú#ú#S T
ref
ú#ú#U X

writeIndex
ú#ú#Y c
)
ú#ú#c d
;
ú#ú#d e
i
ü#ü# 
+=
ü#ü# 
$num
ü#ü# 
;
ü#ü# 
continue
†#†#  
;
†#†#  !
}
°#°# 
}
¢#¢# 
if
§#§# 
(
§#§# 

writeIndex
§#§# 
==
§#§# !

charBuffer
§#§#" ,
.
§#§#, -
Length
§#§#- 3
)
§#§#3 4!
ResizeInternalArray
§#§#5 H
(
§#§#H I
ref
§#§#I L

charBuffer
§#§#M W
)
§#§#W X
;
§#§#X Y

charBuffer
¶#¶# 
[
¶#¶# 

writeIndex
¶#¶# %
]
¶#¶#% &
.
¶#¶#& '
unicode
¶#¶#' .
=
¶#¶#/ 0
c
¶#¶#1 2
;
¶#¶#2 3

writeIndex
ß#ß# 
+=
ß#ß# 
$num
ß#ß# 
;
ß#ß#  
}
®#®# #
m_TextStyleStackDepth
™#™# !
=
™#™#" #
$num
™#™#$ %
;
™#™#% &
return
´#´# 
true
´#´# 
;
´#´# 
}
¨#¨# 	
bool
µ#µ# 
	IsTagName
µ#µ# 
(
µ#µ# 
ref
µ#µ# 
string
µ#µ# "
text
µ#µ## '
,
µ#µ#' (
string
µ#µ#) /
tag
µ#µ#0 3
,
µ#µ#3 4
int
µ#µ#5 8
index
µ#µ#9 >
)
µ#µ#> ?
{
∂#∂# 	
if
∑#∑# 
(
∑#∑# 
text
∑#∑# 
.
∑#∑# 
Length
∑#∑# 
<
∑#∑# 
index
∑#∑# #
+
∑#∑#$ %
tag
∑#∑#& )
.
∑#∑#) *
Length
∑#∑#* 0
)
∑#∑#0 1
return
∑#∑#2 8
false
∑#∑#9 >
;
∑#∑#> ?
for
π#π# 
(
π#π# 
int
π#π# 
i
π#π# 
=
π#π# 
$num
π#π# 
;
π#π# 
i
π#π# 
<
π#π# 
tag
π#π#  #
.
π#π## $
Length
π#π#$ *
;
π#π#* +
i
π#π#, -
++
π#π#- /
)
π#π#/ 0
{
∫#∫# 
if
ª#ª# 
(
ª#ª# 
TMP_TextUtilities
ª#ª# %
.
ª#ª#% &
ToUpperFast
ª#ª#& 1
(
ª#ª#1 2
text
ª#ª#2 6
[
ª#ª#6 7
index
ª#ª#7 <
+
ª#ª#= >
i
ª#ª#? @
]
ª#ª#@ A
)
ª#ª#A B
!=
ª#ª#C E
tag
ª#ª#F I
[
ª#ª#I J
i
ª#ª#J K
]
ª#ª#K L
)
ª#ª#L M
return
ª#ª#N T
false
ª#ª#U Z
;
ª#ª#Z [
}
º#º# 
return
æ#æ# 
true
æ#æ# 
;
æ#æ# 
}
ø#ø# 	
bool
»#»# 
	IsTagName
»#»# 
(
»#»# 
ref
»#»# 
char
»#»# 
[
»#»#  
]
»#»#  !
text
»#»#" &
,
»#»#& '
string
»#»#( .
tag
»#»#/ 2
,
»#»#2 3
int
»#»#4 7
index
»#»#8 =
)
»#»#= >
{
…#…# 	
if
 # # 
(
 # # 
text
 # # 
.
 # # 
Length
 # # 
<
 # # 
index
 # # #
+
 # #$ %
tag
 # #& )
.
 # #) *
Length
 # #* 0
)
 # #0 1
return
 # #2 8
false
 # #9 >
;
 # #> ?
for
Ã#Ã# 
(
Ã#Ã# 
int
Ã#Ã# 
i
Ã#Ã# 
=
Ã#Ã# 
$num
Ã#Ã# 
;
Ã#Ã# 
i
Ã#Ã# 
<
Ã#Ã# 
tag
Ã#Ã#  #
.
Ã#Ã## $
Length
Ã#Ã#$ *
;
Ã#Ã#* +
i
Ã#Ã#, -
++
Ã#Ã#- /
)
Ã#Ã#/ 0
{
Õ#Õ# 
if
Œ#Œ# 
(
Œ#Œ# 
TMP_TextUtilities
Œ#Œ# %
.
Œ#Œ#% &
ToUpperFast
Œ#Œ#& 1
(
Œ#Œ#1 2
text
Œ#Œ#2 6
[
Œ#Œ#6 7
index
Œ#Œ#7 <
+
Œ#Œ#= >
i
Œ#Œ#? @
]
Œ#Œ#@ A
)
Œ#Œ#A B
!=
Œ#Œ#C E
tag
Œ#Œ#F I
[
Œ#Œ#I J
i
Œ#Œ#J K
]
Œ#Œ#K L
)
Œ#Œ#L M
return
Œ#Œ#N T
false
Œ#Œ#U Z
;
Œ#Œ#Z [
}
œ#œ# 
return
—#—# 
true
—#—# 
;
—#—# 
}
“#“# 	
bool
€#€# 
	IsTagName
€#€# 
(
€#€# 
ref
€#€# 
int
€#€# 
[
€#€# 
]
€#€#  
text
€#€#! %
,
€#€#% &
string
€#€#' -
tag
€#€#. 1
,
€#€#1 2
int
€#€#3 6
index
€#€#7 <
)
€#€#< =
{
‹#‹# 	
if
›#›# 
(
›#›# 
text
›#›# 
.
›#›# 
Length
›#›# 
<
›#›# 
index
›#›# #
+
›#›#$ %
tag
›#›#& )
.
›#›#) *
Length
›#›#* 0
)
›#›#0 1
return
›#›#2 8
false
›#›#9 >
;
›#›#> ?
for
ﬂ#ﬂ# 
(
ﬂ#ﬂ# 
int
ﬂ#ﬂ# 
i
ﬂ#ﬂ# 
=
ﬂ#ﬂ# 
$num
ﬂ#ﬂ# 
;
ﬂ#ﬂ# 
i
ﬂ#ﬂ# 
<
ﬂ#ﬂ# 
tag
ﬂ#ﬂ#  #
.
ﬂ#ﬂ## $
Length
ﬂ#ﬂ#$ *
;
ﬂ#ﬂ#* +
i
ﬂ#ﬂ#, -
++
ﬂ#ﬂ#- /
)
ﬂ#ﬂ#/ 0
{
‡#‡# 
if
·#·# 
(
·#·# 
TMP_TextUtilities
·#·# %
.
·#·#% &
ToUpperFast
·#·#& 1
(
·#·#1 2
(
·#·#2 3
char
·#·#3 7
)
·#·#7 8
text
·#·#8 <
[
·#·#< =
index
·#·#= B
+
·#·#C D
i
·#·#E F
]
·#·#F G
)
·#·#G H
!=
·#·#I K
tag
·#·#L O
[
·#·#O P
i
·#·#P Q
]
·#·#Q R
)
·#·#R S
return
·#·#T Z
false
·#·#[ `
;
·#·#` a
}
‚#‚# 
return
‰#‰# 
true
‰#‰# 
;
‰#‰# 
}
Â#Â# 	
bool
Ó#Ó# 
	IsTagName
Ó#Ó# 
(
Ó#Ó# 
ref
Ó#Ó# 
StringBuilder
Ó#Ó# (
text
Ó#Ó#) -
,
Ó#Ó#- .
string
Ó#Ó#/ 5
tag
Ó#Ó#6 9
,
Ó#Ó#9 :
int
Ó#Ó#; >
index
Ó#Ó#? D
)
Ó#Ó#D E
{
Ô#Ô# 	
if
## 
(
## 
text
## 
.
## 
Length
## 
<
## 
index
## #
+
##$ %
tag
##& )
.
##) *
Length
##* 0
)
##0 1
return
##2 8
false
##9 >
;
##> ?
for
Ú#Ú# 
(
Ú#Ú# 
int
Ú#Ú# 
i
Ú#Ú# 
=
Ú#Ú# 
$num
Ú#Ú# 
;
Ú#Ú# 
i
Ú#Ú# 
<
Ú#Ú# 
tag
Ú#Ú#  #
.
Ú#Ú## $
Length
Ú#Ú#$ *
;
Ú#Ú#* +
i
Ú#Ú#, -
++
Ú#Ú#- /
)
Ú#Ú#/ 0
{
Û#Û# 
if
Ù#Ù# 
(
Ù#Ù# 
TMP_TextUtilities
Ù#Ù# %
.
Ù#Ù#% &
ToUpperFast
Ù#Ù#& 1
(
Ù#Ù#1 2
text
Ù#Ù#2 6
[
Ù#Ù#6 7
index
Ù#Ù#7 <
+
Ù#Ù#= >
i
Ù#Ù#? @
]
Ù#Ù#@ A
)
Ù#Ù#A B
!=
Ù#Ù#C E
tag
Ù#Ù#F I
[
Ù#Ù#I J
i
Ù#Ù#J K
]
Ù#Ù#K L
)
Ù#Ù#L M
return
Ù#Ù#N T
false
Ù#Ù#U Z
;
Ù#Ù#Z [
}
ı#ı# 
return
˜#˜# 
true
˜#˜# 
;
˜#˜# 
}
¯#¯# 	
int
Å$Å$ 
GetTagHashCode
Å$Å$ 
(
Å$Å$ 
ref
Å$Å$ 
string
Å$Å$ %
text
Å$Å$& *
,
Å$Å$* +
int
Å$Å$, /
index
Å$Å$0 5
,
Å$Å$5 6
out
Å$Å$7 :
int
Å$Å$; >

closeIndex
Å$Å$? I
)
Å$Å$I J
{
Ç$Ç$ 	
int
É$É$ 
hashCode
É$É$ 
=
É$É$ 
$num
É$É$ 
;
É$É$ 

closeIndex
Ñ$Ñ$ 
=
Ñ$Ñ$ 
$num
Ñ$Ñ$ 
;
Ñ$Ñ$ 
for
Ü$Ü$ 
(
Ü$Ü$ 
int
Ü$Ü$ 
i
Ü$Ü$ 
=
Ü$Ü$ 
index
Ü$Ü$ 
;
Ü$Ü$ 
i
Ü$Ü$  !
<
Ü$Ü$" #
text
Ü$Ü$$ (
.
Ü$Ü$( )
Length
Ü$Ü$) /
;
Ü$Ü$/ 0
i
Ü$Ü$1 2
++
Ü$Ü$2 4
)
Ü$Ü$4 5
{
á$á$ 
if
â$â$ 
(
â$â$ 
text
â$â$ 
[
â$â$ 
i
â$â$ 
]
â$â$ 
==
â$â$ 
$num
â$â$ !
)
â$â$! "
continue
â$â$# +
;
â$â$+ ,
if
å$å$ 
(
å$å$ 
text
å$å$ 
[
å$å$ 
i
å$å$ 
]
å$å$ 
==
å$å$ 
$num
å$å$ !
)
å$å$! "
{
å$å$# $

closeIndex
å$å$% /
=
å$å$0 1
i
å$å$2 3
;
å$å$3 4
break
å$å$5 :
;
å$å$: ;
}
å$å$< =
hashCode
é$é$ 
=
é$é$ 
(
é$é$ 
hashCode
é$é$ $
<<
é$é$% '
$num
é$é$( )
)
é$é$) *
+
é$é$+ ,
hashCode
é$é$- 5
^
é$é$6 7&
TMP_TextParsingUtilities
é$é$8 P
.
é$é$P Q
ToUpperASCIIFast
é$é$Q a
(
é$é$a b
text
é$é$b f
[
é$é$f g
i
é$é$g h
]
é$é$h i
)
é$é$i j
;
é$é$j k
}
è$è$ 
return
ë$ë$ 
hashCode
ë$ë$ 
;
ë$ë$ 
}
í$í$ 	
int
õ$õ$ 
GetTagHashCode
õ$õ$ 
(
õ$õ$ 
ref
õ$õ$ 
char
õ$õ$ #
[
õ$õ$# $
]
õ$õ$$ %
text
õ$õ$& *
,
õ$õ$* +
int
õ$õ$, /
index
õ$õ$0 5
,
õ$õ$5 6
out
õ$õ$7 :
int
õ$õ$; >

closeIndex
õ$õ$? I
)
õ$õ$I J
{
ú$ú$ 	
int
ù$ù$ 
hashCode
ù$ù$ 
=
ù$ù$ 
$num
ù$ù$ 
;
ù$ù$ 

closeIndex
û$û$ 
=
û$û$ 
$num
û$û$ 
;
û$û$ 
for
†$†$ 
(
†$†$ 
int
†$†$ 
i
†$†$ 
=
†$†$ 
index
†$†$ 
;
†$†$ 
i
†$†$  !
<
†$†$" #
text
†$†$$ (
.
†$†$( )
Length
†$†$) /
;
†$†$/ 0
i
†$†$1 2
++
†$†$2 4
)
†$†$4 5
{
°$°$ 
if
£$£$ 
(
£$£$ 
text
£$£$ 
[
£$£$ 
i
£$£$ 
]
£$£$ 
==
£$£$ 
$num
£$£$ !
)
£$£$! "
continue
£$£$# +
;
£$£$+ ,
if
¶$¶$ 
(
¶$¶$ 
text
¶$¶$ 
[
¶$¶$ 
i
¶$¶$ 
]
¶$¶$ 
==
¶$¶$ 
$num
¶$¶$ !
)
¶$¶$! "
{
¶$¶$# $

closeIndex
¶$¶$% /
=
¶$¶$0 1
i
¶$¶$2 3
;
¶$¶$3 4
break
¶$¶$5 :
;
¶$¶$: ;
}
¶$¶$< =
hashCode
®$®$ 
=
®$®$ 
(
®$®$ 
hashCode
®$®$ $
<<
®$®$% '
$num
®$®$( )
)
®$®$) *
+
®$®$+ ,
hashCode
®$®$- 5
^
®$®$6 7&
TMP_TextParsingUtilities
®$®$8 P
.
®$®$P Q
ToUpperASCIIFast
®$®$Q a
(
®$®$a b
text
®$®$b f
[
®$®$f g
i
®$®$g h
]
®$®$h i
)
®$®$i j
;
®$®$j k
}
©$©$ 
return
´$´$ 
hashCode
´$´$ 
;
´$´$ 
}
¨$¨$ 	
int
µ$µ$ 
GetTagHashCode
µ$µ$ 
(
µ$µ$ 
ref
µ$µ$ 
int
µ$µ$ "
[
µ$µ$" #
]
µ$µ$# $
text
µ$µ$% )
,
µ$µ$) *
int
µ$µ$+ .
index
µ$µ$/ 4
,
µ$µ$4 5
out
µ$µ$6 9
int
µ$µ$: =

closeIndex
µ$µ$> H
)
µ$µ$H I
{
∂$∂$ 	
int
∑$∑$ 
hashCode
∑$∑$ 
=
∑$∑$ 
$num
∑$∑$ 
;
∑$∑$ 

closeIndex
∏$∏$ 
=
∏$∏$ 
$num
∏$∏$ 
;
∏$∏$ 
for
∫$∫$ 
(
∫$∫$ 
int
∫$∫$ 
i
∫$∫$ 
=
∫$∫$ 
index
∫$∫$ 
;
∫$∫$ 
i
∫$∫$  !
<
∫$∫$" #
text
∫$∫$$ (
.
∫$∫$( )
Length
∫$∫$) /
;
∫$∫$/ 0
i
∫$∫$1 2
++
∫$∫$2 4
)
∫$∫$4 5
{
ª$ª$ 
if
Ω$Ω$ 
(
Ω$Ω$ 
text
Ω$Ω$ 
[
Ω$Ω$ 
i
Ω$Ω$ 
]
Ω$Ω$ 
==
Ω$Ω$ 
$num
Ω$Ω$ !
)
Ω$Ω$! "
continue
Ω$Ω$# +
;
Ω$Ω$+ ,
if
¿$¿$ 
(
¿$¿$ 
text
¿$¿$ 
[
¿$¿$ 
i
¿$¿$ 
]
¿$¿$ 
==
¿$¿$ 
$num
¿$¿$ !
)
¿$¿$! "
{
¿$¿$# $

closeIndex
¿$¿$% /
=
¿$¿$0 1
i
¿$¿$2 3
;
¿$¿$3 4
break
¿$¿$5 :
;
¿$¿$: ;
}
¿$¿$< =
hashCode
¬$¬$ 
=
¬$¬$ 
(
¬$¬$ 
hashCode
¬$¬$ $
<<
¬$¬$% '
$num
¬$¬$( )
)
¬$¬$) *
+
¬$¬$+ ,
hashCode
¬$¬$- 5
^
¬$¬$6 7&
TMP_TextParsingUtilities
¬$¬$8 P
.
¬$¬$P Q
ToUpperASCIIFast
¬$¬$Q a
(
¬$¬$a b
(
¬$¬$b c
char
¬$¬$c g
)
¬$¬$g h
text
¬$¬$h l
[
¬$¬$l m
i
¬$¬$m n
]
¬$¬$n o
)
¬$¬$o p
;
¬$¬$p q
}
√$√$ 
return
≈$≈$ 
hashCode
≈$≈$ 
;
≈$≈$ 
}
∆$∆$ 	
int
œ$œ$ 
GetTagHashCode
œ$œ$ 
(
œ$œ$ 
ref
œ$œ$ 
StringBuilder
œ$œ$ ,
text
œ$œ$- 1
,
œ$œ$1 2
int
œ$œ$3 6
index
œ$œ$7 <
,
œ$œ$< =
out
œ$œ$> A
int
œ$œ$B E

closeIndex
œ$œ$F P
)
œ$œ$P Q
{
–$–$ 	
int
—$—$ 
hashCode
—$—$ 
=
—$—$ 
$num
—$—$ 
;
—$—$ 

closeIndex
“$“$ 
=
“$“$ 
$num
“$“$ 
;
“$“$ 
for
‘$‘$ 
(
‘$‘$ 
int
‘$‘$ 
i
‘$‘$ 
=
‘$‘$ 
index
‘$‘$ 
;
‘$‘$ 
i
‘$‘$  !
<
‘$‘$" #
text
‘$‘$$ (
.
‘$‘$( )
Length
‘$‘$) /
;
‘$‘$/ 0
i
‘$‘$1 2
++
‘$‘$2 4
)
‘$‘$4 5
{
’$’$ 
if
◊$◊$ 
(
◊$◊$ 
text
◊$◊$ 
[
◊$◊$ 
i
◊$◊$ 
]
◊$◊$ 
==
◊$◊$ 
$num
◊$◊$ !
)
◊$◊$! "
continue
◊$◊$# +
;
◊$◊$+ ,
if
⁄$⁄$ 
(
⁄$⁄$ 
text
⁄$⁄$ 
[
⁄$⁄$ 
i
⁄$⁄$ 
]
⁄$⁄$ 
==
⁄$⁄$ 
$num
⁄$⁄$ !
)
⁄$⁄$! "
{
⁄$⁄$# $

closeIndex
⁄$⁄$% /
=
⁄$⁄$0 1
i
⁄$⁄$2 3
;
⁄$⁄$3 4
break
⁄$⁄$5 :
;
⁄$⁄$: ;
}
⁄$⁄$< =
hashCode
‹$‹$ 
=
‹$‹$ 
(
‹$‹$ 
hashCode
‹$‹$ $
<<
‹$‹$% '
$num
‹$‹$( )
)
‹$‹$) *
+
‹$‹$+ ,
hashCode
‹$‹$- 5
^
‹$‹$6 7&
TMP_TextParsingUtilities
‹$‹$8 P
.
‹$‹$P Q
ToUpperASCIIFast
‹$‹$Q a
(
‹$‹$a b
text
‹$‹$b f
[
‹$‹$f g
i
‹$‹$g h
]
‹$‹$h i
)
‹$‹$i j
;
‹$‹$j k
}
›$›$ 
return
ﬂ$ﬂ$ 
hashCode
ﬂ$ﬂ$ 
;
ﬂ$ﬂ$ 
}
‡$‡$ 	
void
Â$Â$ !
ResizeInternalArray
Â$Â$  
<
Â$Â$! "
T
Â$Â$" #
>
Â$Â$# $
(
Â$Â$$ %
ref
Â$Â$% (
T
Â$Â$) *
[
Â$Â$* +
]
Â$Â$+ ,
array
Â$Â$- 2
)
Â$Â$2 3
{
Ê$Ê$ 	
int
Á$Á$ 
size
Á$Á$ 
=
Á$Á$ 
Mathf
Á$Á$ 
.
Á$Á$ 
NextPowerOfTwo
Á$Á$ +
(
Á$Á$+ ,
array
Á$Á$, 1
.
Á$Á$1 2
Length
Á$Á$2 8
+
Á$Á$9 :
$num
Á$Á$; <
)
Á$Á$< =
;
Á$Á$= >
System
È$È$ 
.
È$È$ 
Array
È$È$ 
.
È$È$ 
Resize
È$È$ 
(
È$È$  
ref
È$È$  #
array
È$È$$ )
,
È$È$) *
size
È$È$+ /
)
È$È$/ 0
;
È$È$0 1
}
Í$Í$ 	
void
Ï$Ï$ !
ResizeInternalArray
Ï$Ï$  
<
Ï$Ï$  !
T
Ï$Ï$! "
>
Ï$Ï$" #
(
Ï$Ï$# $
ref
Ï$Ï$$ '
T
Ï$Ï$( )
[
Ï$Ï$) *
]
Ï$Ï$* +
array
Ï$Ï$, 1
,
Ï$Ï$1 2
int
Ï$Ï$3 6
size
Ï$Ï$7 ;
)
Ï$Ï$; <
{
Ì$Ì$ 	
size
Ó$Ó$ 
=
Ó$Ó$ 
Mathf
Ó$Ó$ 
.
Ó$Ó$ 
NextPowerOfTwo
Ó$Ó$ '
(
Ó$Ó$' (
size
Ó$Ó$( ,
+
Ó$Ó$- .
$num
Ó$Ó$/ 0
)
Ó$Ó$0 1
;
Ó$Ó$1 2
System
$$ 
.
$$ 
Array
$$ 
.
$$ 
Resize
$$ 
(
$$  
ref
$$  #
array
$$$ )
,
$$) *
size
$$+ /
)
$$/ 0
;
$$0 1
}
Ò$Ò$ 	
private
Ù$Ù$ 
readonly
Ù$Ù$ 
decimal
Ù$Ù$  
[
Ù$Ù$  !
]
Ù$Ù$! "
k_Power
Ù$Ù$# *
=
Ù$Ù$+ ,
{
Ù$Ù$- .
$num
Ù$Ù$/ 4
,
Ù$Ù$4 5
$num
Ù$Ù$6 ;
,
Ù$Ù$; <
$num
Ù$Ù$= B
,
Ù$Ù$B C
$num
Ù$Ù$D I
,
Ù$Ù$I J
$num
Ù$Ù$K P
,
Ù$Ù$P Q
$num
Ù$Ù$R W
,
Ù$Ù$W X
$num
Ù$Ù$Y ^
,
Ù$Ù$^ _
$num
Ù$Ù$` e
,
Ù$Ù$e f
$num
Ù$Ù$g l
,
Ù$Ù$l m
$num
Ù$Ù$n t
}
Ù$Ù$u v
;
Ù$Ù$v w
void
˜$˜$ !
AddFloatToCharArray
˜$˜$  
(
˜$˜$  !
float
˜$˜$! &
value
˜$˜$' ,
,
˜$˜$, -
int
˜$˜$. 1
padding
˜$˜$2 9
,
˜$˜$9 :
int
˜$˜$; >
	precision
˜$˜$? H
,
˜$˜$H I
ref
˜$˜$J M
int
˜$˜$N Q

writeIndex
˜$˜$R \
)
˜$˜$\ ]
{
¯$¯$ 	
if
˘$˘$ 
(
˘$˘$ 
value
˘$˘$ 
<
˘$˘$ 
$num
˘$˘$ 
)
˘$˘$ 
{
˙$˙$ 
m_input_CharArray
˚$˚$ !
[
˚$˚$! "

writeIndex
˚$˚$" ,
]
˚$˚$, -
=
˚$˚$. /
$char
˚$˚$0 3
;
˚$˚$3 4

writeIndex
¸$¸$ 
+=
¸$¸$ 
$num
¸$¸$ 
;
¸$¸$  
value
˝$˝$ 
=
˝$˝$ 
-
˝$˝$ 
value
˝$˝$ 
;
˝$˝$ 
}
˛$˛$ 
decimal
Å%Å% 
valueD
Å%Å% 
=
Å%Å% 
(
Å%Å% 
decimal
Å%Å% %
)
Å%Å%% &
value
Å%Å%& +
;
Å%Å%+ ,
if
Ñ%Ñ% 
(
Ñ%Ñ% 
padding
Ñ%Ñ% 
==
Ñ%Ñ% 
$num
Ñ%Ñ% 
&&
Ñ%Ñ% 
	precision
Ñ%Ñ%  )
==
Ñ%Ñ%* ,
$num
Ñ%Ñ%- .
)
Ñ%Ñ%. /
	precision
Ö%Ö% 
=
Ö%Ö% 
$num
Ö%Ö% 
;
Ö%Ö% 
else
Ü%Ü% 
valueD
á%á% 
+=
á%á% 
k_Power
á%á% !
[
á%á%! "
Mathf
á%á%" '
.
á%á%' (
Min
á%á%( +
(
á%á%+ ,
$num
á%á%, -
,
á%á%- .
	precision
á%á%/ 8
)
á%á%8 9
]
á%á%9 :
;
á%á%: ;
long
â%â% 
integer
â%â% 
=
â%â% 
(
â%â% 
long
â%â%  
)
â%â%  !
valueD
â%â%! '
;
â%â%' (#
AddIntegerToCharArray
ã%ã% !
(
ã%ã%! "
integer
ã%ã%" )
,
ã%ã%) *
padding
ã%ã%+ 2
,
ã%ã%2 3
ref
ã%ã%4 7

writeIndex
ã%ã%8 B
)
ã%ã%B C
;
ã%ã%C D
if
ç%ç% 
(
ç%ç% 
	precision
ç%ç% 
>
ç%ç% 
$num
ç%ç% 
)
ç%ç% 
{
é%é% 
valueD
è%è% 
-=
è%è% 
integer
è%è% !
;
è%è%! "
if
í%í% 
(
í%í% 
valueD
í%í% 
!=
í%í% 
$num
í%í% 
)
í%í%  
{
ì%ì% 
m_input_CharArray
ï%ï% %
[
ï%ï%% &

writeIndex
ï%ï%& 0
++
ï%ï%0 2
]
ï%ï%2 3
=
ï%ï%4 5
$char
ï%ï%6 9
;
ï%ï%9 :
for
ó%ó% 
(
ó%ó% 
int
ó%ó% 
p
ó%ó% 
=
ó%ó%  
$num
ó%ó%! "
;
ó%ó%" #
p
ó%ó%$ %
<
ó%ó%& '
	precision
ó%ó%( 1
;
ó%ó%1 2
p
ó%ó%3 4
++
ó%ó%4 6
)
ó%ó%6 7
{
ò%ò% 
valueD
ô%ô% 
*=
ô%ô% !
$num
ô%ô%" $
;
ô%ô%$ %
long
ö%ö% 
d
ö%ö% 
=
ö%ö%  
(
ö%ö%! "
long
ö%ö%" &
)
ö%ö%& '
valueD
ö%ö%' -
;
ö%ö%- .
m_input_CharArray
ú%ú% )
[
ú%ú%) *

writeIndex
ú%ú%* 4
++
ú%ú%4 6
]
ú%ú%6 7
=
ú%ú%8 9
(
ú%ú%: ;
char
ú%ú%; ?
)
ú%ú%? @
(
ú%ú%@ A
d
ú%ú%A B
+
ú%ú%C D
$num
ú%ú%E G
)
ú%ú%G H
;
ú%ú%H I
valueD
ù%ù% 
-=
ù%ù% !
d
ù%ù%" #
;
ù%ù%# $
if
ü%ü% 
(
ü%ü% 
valueD
ü%ü% "
==
ü%ü%# %
$num
ü%ü%& '
)
ü%ü%' (
p
†%†% 
=
†%†% 
	precision
†%†%  )
;
†%†%) *
}
°%°% 
}
¢%¢% 
}
£%£% 
}
§%§% 	
void
≠%≠% #
AddIntegerToCharArray
≠%≠% "
(
≠%≠%" #
double
≠%≠%# )
number
≠%≠%* 0
,
≠%≠%0 1
int
≠%≠%2 5
padding
≠%≠%6 =
,
≠%≠%= >
ref
≠%≠%? B
int
≠%≠%C F

writeIndex
≠%≠%G Q
)
≠%≠%Q R
{
Æ%Æ% 	
int
Ø%Ø% 
integralCount
Ø%Ø% 
=
Ø%Ø% 
$num
Ø%Ø%  !
;
Ø%Ø%! "
int
∞%∞% 
i
∞%∞% 
=
∞%∞% 

writeIndex
∞%∞% 
;
∞%∞% 
do
≤%≤% 
{
≥%≥% 
m_input_CharArray
¥%¥% !
[
¥%¥%! "
i
¥%¥%" #
++
¥%¥%# %
]
¥%¥%% &
=
¥%¥%' (
(
¥%¥%) *
char
¥%¥%* .
)
¥%¥%. /
(
¥%¥%/ 0
number
¥%¥%0 6
%
¥%¥%7 8
$num
¥%¥%9 ;
+
¥%¥%< =
$num
¥%¥%> @
)
¥%¥%@ A
;
¥%¥%A B
number
µ%µ% 
/=
µ%µ% 
$num
µ%µ% 
;
µ%µ% 
integralCount
∂%∂% 
+=
∂%∂%  
$num
∂%∂%! "
;
∂%∂%" #
}
∑%∑% 
while
∑%∑% 
(
∑%∑% 
number
∑%∑% 
>
∑%∑% 
$num
∑%∑% $
||
∑%∑%% '
integralCount
∑%∑%( 5
<
∑%∑%6 7
padding
∑%∑%8 ?
)
∑%∑%? @
;
∑%∑%@ A
int
π%π% 
	lastIndex
π%π% 
=
π%π% 
i
π%π% 
;
π%π% 
while
º%º% 
(
º%º% 

writeIndex
º%º% 
+
º%º% 
$num
º%º%  !
<
º%º%" #
i
º%º%$ %
)
º%º%% &
{
Ω%Ω% 
i
æ%æ% 
-=
æ%æ% 
$num
æ%æ% 
;
æ%æ% 
char
ø%ø% 
t
ø%ø% 
=
ø%ø% 
m_input_CharArray
ø%ø% *
[
ø%ø%* +

writeIndex
ø%ø%+ 5
]
ø%ø%5 6
;
ø%ø%6 7
m_input_CharArray
¿%¿% !
[
¿%¿%! "

writeIndex
¿%¿%" ,
]
¿%¿%, -
=
¿%¿%. /
m_input_CharArray
¿%¿%0 A
[
¿%¿%A B
i
¿%¿%B C
]
¿%¿%C D
;
¿%¿%D E
m_input_CharArray
¡%¡% !
[
¡%¡%! "
i
¡%¡%" #
]
¡%¡%# $
=
¡%¡%% &
t
¡%¡%' (
;
¡%¡%( )

writeIndex
¬%¬% 
+=
¬%¬% 
$num
¬%¬% 
;
¬%¬%  
}
√%√% 

writeIndex
ƒ%ƒ% 
=
ƒ%ƒ% 
	lastIndex
ƒ%ƒ% "
;
ƒ%ƒ%" #
}
≈%≈% 	
	protected
Õ%Õ% 
virtual
Õ%Õ% 
int
Õ%Õ% 
SetArraySizes
Õ%Õ% +
(
Õ%Õ%+ ,
UnicodeChar
Õ%Õ%, 7
[
Õ%Õ%7 8
]
Õ%Õ%8 9
unicodeChars
Õ%Õ%: F
)
Õ%Õ%F G
{
Õ%Õ%H I
return
Õ%Õ%J P
$num
Õ%Õ%Q R
;
Õ%Õ%R S
}
Õ%Õ%T U
	protected
”%”% 
virtual
”%”% 
void
”%”% 
GenerateTextMesh
”%”% /
(
”%”%/ 0
)
”%”%0 1
{
”%”%2 3
}
”%”%4 5
public
⁄%⁄% 
Vector2
⁄%⁄%  
GetPreferredValues
⁄%⁄% )
(
⁄%⁄%) *
)
⁄%⁄%* +
{
€%€% 	
if
‹%‹% 
(
‹%‹% &
m_isInputParsingRequired
‹%‹% (
||
‹%‹%) +
m_isTextTruncated
‹%‹%, =
)
‹%‹%= >
{
›%›% ,
m_isCalculatingPreferredValues
ﬁ%ﬁ% .
=
ﬁ%ﬁ%/ 0
true
ﬁ%ﬁ%1 5
;
ﬁ%ﬁ%5 6
ParseInputText
ﬂ%ﬂ% 
(
ﬂ%ﬂ% 
)
ﬂ%ﬂ%  
;
ﬂ%ﬂ%  !
}
‡%‡% 
float
„%„% 
preferredWidth
„%„%  
=
„%„%! "
GetPreferredWidth
„%„%# 4
(
„%„%4 5
)
„%„%5 6
;
„%„%6 7
float
Ê%Ê% 
preferredHeight
Ê%Ê% !
=
Ê%Ê%" # 
GetPreferredHeight
Ê%Ê%$ 6
(
Ê%Ê%6 7
)
Ê%Ê%7 8
;
Ê%Ê%8 9
return
Ë%Ë% 
new
Ë%Ë% 
Vector2
Ë%Ë% 
(
Ë%Ë% 
preferredWidth
Ë%Ë% -
,
Ë%Ë%- .
preferredHeight
Ë%Ë%/ >
)
Ë%Ë%> ?
;
Ë%Ë%? @
}
È%È% 	
public
%% 
Vector2
%%  
GetPreferredValues
%% )
(
%%) *
float
%%* /
width
%%0 5
,
%%5 6
float
%%7 <
height
%%= C
)
%%C D
{
Ò%Ò% 	
if
Ú%Ú% 
(
Ú%Ú% &
m_isInputParsingRequired
Ú%Ú% (
||
Ú%Ú%) +
m_isTextTruncated
Ú%Ú%, =
)
Ú%Ú%= >
{
Û%Û% ,
m_isCalculatingPreferredValues
Ù%Ù% .
=
Ù%Ù%/ 0
true
Ù%Ù%1 5
;
Ù%Ù%5 6
ParseInputText
ı%ı% 
(
ı%ı% 
)
ı%ı%  
;
ı%ı%  !
}
ˆ%ˆ% 
Vector2
¯%¯% 
margin
¯%¯% 
=
¯%¯% 
new
¯%¯%  
Vector2
¯%¯%! (
(
¯%¯%( )
width
¯%¯%) .
,
¯%¯%. /
height
¯%¯%0 6
)
¯%¯%6 7
;
¯%¯%7 8
float
˚%˚% 
preferredWidth
˚%˚%  
=
˚%˚%! "
GetPreferredWidth
˚%˚%# 4
(
˚%˚%4 5
margin
˚%˚%5 ;
)
˚%˚%; <
;
˚%˚%< =
float
˛%˛% 
preferredHeight
˛%˛% !
=
˛%˛%" # 
GetPreferredHeight
˛%˛%$ 6
(
˛%˛%6 7
margin
˛%˛%7 =
)
˛%˛%= >
;
˛%˛%> ?
return
Ä&Ä& 
new
Ä&Ä& 
Vector2
Ä&Ä& 
(
Ä&Ä& 
preferredWidth
Ä&Ä& -
,
Ä&Ä&- .
preferredHeight
Ä&Ä&/ >
)
Ä&Ä&> ?
;
Ä&Ä&? @
}
Å&Å& 	
public
â&â& 
Vector2
â&â&  
GetPreferredValues
â&â& )
(
â&â&) *
string
â&â&* 0
text
â&â&1 5
)
â&â&5 6
{
ä&ä& 	,
m_isCalculatingPreferredValues
ã&ã& *
=
ã&ã&+ ,
true
ã&ã&- 1
;
ã&ã&1 2+
StringToInternalParsingBuffer
ç&ç& )
(
ç&ç&) *
text
ç&ç&* .
,
ç&ç&. /
ref
ç&ç&0 3%
m_InternalParsingBuffer
ç&ç&4 K
)
ç&ç&K L
;
ç&ç&L M
SetArraySizes
é&é& 
(
é&é& %
m_InternalParsingBuffer
é&é& 1
)
é&é&1 2
;
é&é&2 3
Vector2
ê&ê& 
margin
ê&ê& 
=
ê&ê& $
k_LargePositiveVector2
ê&ê& 3
;
ê&ê&3 4
float
ì&ì& 
preferredWidth
ì&ì&  
=
ì&ì&! "
GetPreferredWidth
ì&ì&# 4
(
ì&ì&4 5
margin
ì&ì&5 ;
)
ì&ì&; <
;
ì&ì&< =
float
ñ&ñ& 
preferredHeight
ñ&ñ& !
=
ñ&ñ&" # 
GetPreferredHeight
ñ&ñ&$ 6
(
ñ&ñ&6 7
margin
ñ&ñ&7 =
)
ñ&ñ&= >
;
ñ&ñ&> ?
return
ò&ò& 
new
ò&ò& 
Vector2
ò&ò& 
(
ò&ò& 
preferredWidth
ò&ò& -
,
ò&ò&- .
preferredHeight
ò&ò&/ >
)
ò&ò&> ?
;
ò&ò&? @
}
ô&ô& 	
public
°&°& 
Vector2
°&°&  
GetPreferredValues
°&°& )
(
°&°&) *
string
°&°&* 0
text
°&°&1 5
,
°&°&5 6
float
°&°&7 <
width
°&°&= B
,
°&°&B C
float
°&°&D I
height
°&°&J P
)
°&°&P Q
{
¢&¢& 	,
m_isCalculatingPreferredValues
£&£& *
=
£&£&+ ,
true
£&£&- 1
;
£&£&1 2+
StringToInternalParsingBuffer
•&•& )
(
•&•&) *
text
•&•&* .
,
•&•&. /
ref
•&•&0 3%
m_InternalParsingBuffer
•&•&4 K
)
•&•&K L
;
•&•&L M
SetArraySizes
¶&¶& 
(
¶&¶& %
m_InternalParsingBuffer
¶&¶& 1
)
¶&¶&1 2
;
¶&¶&2 3
Vector2
®&®& 
margin
®&®& 
=
®&®& 
new
®&®&  
Vector2
®&®&! (
(
®&®&( )
width
®&®&) .
,
®&®&. /
height
®&®&0 6
)
®&®&6 7
;
®&®&7 8
float
´&´& 
preferredWidth
´&´&  
=
´&´&! "
GetPreferredWidth
´&´&# 4
(
´&´&4 5
margin
´&´&5 ;
)
´&´&; <
;
´&´&< =
float
Æ&Æ& 
preferredHeight
Æ&Æ& !
=
Æ&Æ&" # 
GetPreferredHeight
Æ&Æ&$ 6
(
Æ&Æ&6 7
margin
Æ&Æ&7 =
)
Æ&Æ&= >
;
Æ&Æ&> ?
return
∞&∞& 
new
∞&∞& 
Vector2
∞&∞& 
(
∞&∞& 
preferredWidth
∞&∞& -
,
∞&∞&- .
preferredHeight
∞&∞&/ >
)
∞&∞&> ?
;
∞&∞&? @
}
±&±& 	
	protected
∏&∏& 
float
∏&∏& 
GetPreferredWidth
∏&∏& )
(
∏&∏&) *
)
∏&∏&* +
{
π&π& 	
if
∫&∫& 
(
∫&∫& 
TMP_Settings
∫&∫& 
.
∫&∫& 
instance
∫&∫& %
==
∫&∫&& (
null
∫&∫&) -
)
∫&∫&- .
return
∫&∫&/ 5
$num
∫&∫&6 7
;
∫&∫&7 8
if
Ω&Ω& 
(
Ω&Ω& 
!
Ω&Ω& %
m_isPreferredWidthDirty
Ω&Ω& (
)
Ω&Ω&( )
return
æ&æ& 
m_preferredWidth
æ&æ& '
;
æ&æ&' (
float
¿&¿& 
fontSize
¿&¿& 
=
¿&¿&  
m_enableAutoSizing
¿&¿& /
?
¿&¿&0 1
m_fontSizeMax
¿&¿&2 ?
:
¿&¿&@ A

m_fontSize
¿&¿&B L
;
¿&¿&L M
m_minFontSize
√&√& 
=
√&√& 
m_fontSizeMin
√&√& )
;
√&√&) *
m_maxFontSize
ƒ&ƒ& 
=
ƒ&ƒ& 
m_fontSizeMax
ƒ&ƒ& )
;
ƒ&ƒ&) *!
m_charWidthAdjDelta
≈&≈& 
=
≈&≈&  !
$num
≈&≈&" #
;
≈&≈&# $
Vector2
»&»& 
margin
»&»& 
=
»&»& $
k_LargePositiveVector2
»&»& 3
;
»&»&3 4
if
 & & 
(
 & & &
m_isInputParsingRequired
 & & (
||
 & &) +
m_isTextTruncated
 & &, =
)
 & &= >
{
À&À& ,
m_isCalculatingPreferredValues
Ã&Ã& .
=
Ã&Ã&/ 0
true
Ã&Ã&1 5
;
Ã&Ã&5 6
ParseInputText
Õ&Õ& 
(
Õ&Õ& 
)
Õ&Õ&  
;
Õ&Õ&  !
}
Œ&Œ& &
m_AutoSizeIterationCount
–&–& $
=
–&–&% &
$num
–&–&' (
;
–&–&( )
float
—&—& 
preferredWidth
—&—&  
=
—&—&! "&
CalculatePreferredValues
—&—&# ;
(
—&—&; <
ref
—&—&< ?
fontSize
—&—&@ H
,
—&—&H I
margin
—&—&J P
,
—&—&P Q
false
—&—&R W
,
—&—&W X
false
—&—&Y ^
)
—&—&^ _
.
—&—&_ `
x
—&—&` a
;
—&—&a b%
m_isPreferredWidthDirty
”&”& #
=
”&”&$ %
false
”&”&& +
;
”&”&+ ,
return
◊&◊& 
preferredWidth
◊&◊& !
;
◊&◊&! "
}
ÿ&ÿ& 	
float
‡&‡& 
GetPreferredWidth
‡&‡& 
(
‡&‡&  
Vector2
‡&‡&  '
margin
‡&‡&( .
)
‡&‡&. /
{
·&·& 	
float
‚&‚& 
fontSize
‚&‚& 
=
‚&‚&  
m_enableAutoSizing
‚&‚& /
?
‚&‚&0 1
m_fontSizeMax
‚&‚&2 ?
:
‚&‚&@ A

m_fontSize
‚&‚&B L
;
‚&‚&L M
m_minFontSize
Â&Â& 
=
Â&Â& 
m_fontSizeMin
Â&Â& )
;
Â&Â&) *
m_maxFontSize
Ê&Ê& 
=
Ê&Ê& 
m_fontSizeMax
Ê&Ê& )
;
Ê&Ê&) *!
m_charWidthAdjDelta
Á&Á& 
=
Á&Á&  !
$num
Á&Á&" #
;
Á&Á&# $&
m_AutoSizeIterationCount
È&È& $
=
È&È&% &
$num
È&È&' (
;
È&È&( )
float
Í&Í& 
preferredWidth
Í&Í&  
=
Í&Í&! "&
CalculatePreferredValues
Í&Í&# ;
(
Í&Í&; <
ref
Í&Í&< ?
fontSize
Í&Í&@ H
,
Í&Í&H I
margin
Í&Í&J P
,
Í&Í&P Q
false
Í&Í&R W
,
Í&Í&W X
false
Í&Í&Y ^
)
Í&Í&^ _
.
Í&Í&_ `
x
Í&Í&` a
;
Í&Í&a b
return
Ó&Ó& 
preferredWidth
Ó&Ó& !
;
Ó&Ó&! "
}
Ô&Ô& 	
	protected
ˆ&ˆ& 
float
ˆ&ˆ&  
GetPreferredHeight
ˆ&ˆ& *
(
ˆ&ˆ&* +
)
ˆ&ˆ&+ ,
{
˜&˜& 	
if
¯&¯& 
(
¯&¯& 
TMP_Settings
¯&¯& 
.
¯&¯& 
instance
¯&¯& %
==
¯&¯&& (
null
¯&¯&) -
)
¯&¯&- .
return
¯&¯&/ 5
$num
¯&¯&6 7
;
¯&¯&7 8
if
˚&˚& 
(
˚&˚& 
!
˚&˚& &
m_isPreferredHeightDirty
˚&˚& )
)
˚&˚&) *
return
¸&¸& 
m_preferredHeight
¸&¸& (
;
¸&¸&( )
float
˛&˛& 
fontSize
˛&˛& 
=
˛&˛&  
m_enableAutoSizing
˛&˛& /
?
˛&˛&0 1
m_fontSizeMax
˛&˛&2 ?
:
˛&˛&@ A

m_fontSize
˛&˛&B L
;
˛&˛&L M
m_minFontSize
Å'Å' 
=
Å'Å' 
m_fontSizeMin
Å'Å' )
;
Å'Å') *
m_maxFontSize
Ç'Ç' 
=
Ç'Ç' 
m_fontSizeMax
Ç'Ç' )
;
Ç'Ç') *!
m_charWidthAdjDelta
É'É' 
=
É'É'  !
$num
É'É'" #
;
É'É'# $
Vector2
Ö'Ö' 
margin
Ö'Ö' 
=
Ö'Ö' 
new
Ö'Ö'  
Vector2
Ö'Ö'! (
(
Ö'Ö'( )
m_marginWidth
Ö'Ö') 6
!=
Ö'Ö'7 9
$num
Ö'Ö': ;
?
Ö'Ö'< =
m_marginWidth
Ö'Ö'> K
:
Ö'Ö'L M"
k_LargePositiveFloat
Ö'Ö'N b
,
Ö'Ö'b c"
k_LargePositiveFloat
Ö'Ö'd x
)
Ö'Ö'x y
;
Ö'Ö'y z
if
á'á' 
(
á'á' &
m_isInputParsingRequired
á'á' (
||
á'á') +
m_isTextTruncated
á'á', =
)
á'á'= >
{
à'à' ,
m_isCalculatingPreferredValues
â'â' .
=
â'â'/ 0
true
â'â'1 5
;
â'â'5 6
ParseInputText
ä'ä' 
(
ä'ä' 
)
ä'ä'  
;
ä'ä'  !
}
ã'ã' &
m_IsAutoSizePointSizeSet
é'é' $
=
é'é'% &
false
é'é'' ,
;
é'é', -&
m_AutoSizeIterationCount
è'è' $
=
è'è'% &
$num
è'è'' (
;
è'è'( )
float
ì'ì' 
preferredHeight
ì'ì' !
=
ì'ì'" #
$num
ì'ì'$ %
;
ì'ì'% &
while
ï'ï' 
(
ï'ï' &
m_IsAutoSizePointSizeSet
ï'ï' +
==
ï'ï', .
false
ï'ï'/ 4
)
ï'ï'4 5
{
ñ'ñ' 
preferredHeight
ó'ó' 
=
ó'ó'  !&
CalculatePreferredValues
ó'ó'" :
(
ó'ó': ;
ref
ó'ó'; >
fontSize
ó'ó'? G
,
ó'ó'G H
margin
ó'ó'I O
,
ó'ó'O P 
m_enableAutoSizing
ó'ó'Q c
,
ó'ó'c d"
m_enableWordWrapping
ó'ó'e y
)
ó'ó'y z
.
ó'ó'z {
y
ó'ó'{ |
;
ó'ó'| }&
m_AutoSizeIterationCount
ò'ò' (
+=
ò'ò') +
$num
ò'ò', -
;
ò'ò'- .
}
ô'ô' &
m_isPreferredHeightDirty
õ'õ' $
=
õ'õ'% &
false
õ'õ'' ,
;
õ'õ', -
return
ü'ü' 
preferredHeight
ü'ü' "
;
ü'ü'" #
}
†'†' 	
float
®'®'  
GetPreferredHeight
®'®'  
(
®'®'  !
Vector2
®'®'! (
margin
®'®') /
)
®'®'/ 0
{
©'©' 	
float
™'™' 
fontSize
™'™' 
=
™'™'  
m_enableAutoSizing
™'™' /
?
™'™'0 1
m_fontSizeMax
™'™'2 ?
:
™'™'@ A

m_fontSize
™'™'B L
;
™'™'L M
m_minFontSize
≠'≠' 
=
≠'≠' 
m_fontSizeMin
≠'≠' )
;
≠'≠') *
m_maxFontSize
Æ'Æ' 
=
Æ'Æ' 
m_fontSizeMax
Æ'Æ' )
;
Æ'Æ') *!
m_charWidthAdjDelta
Ø'Ø' 
=
Ø'Ø'  !
$num
Ø'Ø'" #
;
Ø'Ø'# $&
m_IsAutoSizePointSizeSet
≤'≤' $
=
≤'≤'% &
false
≤'≤'' ,
;
≤'≤', -&
m_AutoSizeIterationCount
≥'≥' $
=
≥'≥'% &
$num
≥'≥'' (
;
≥'≥'( )
float
∑'∑' 
preferredHeight
∑'∑' !
=
∑'∑'" #
$num
∑'∑'$ %
;
∑'∑'% &
while
π'π' 
(
π'π' &
m_IsAutoSizePointSizeSet
π'π' +
==
π'π', .
false
π'π'/ 4
)
π'π'4 5
{
∫'∫' 
preferredHeight
ª'ª' 
=
ª'ª'  !&
CalculatePreferredValues
ª'ª'" :
(
ª'ª': ;
ref
ª'ª'; >
fontSize
ª'ª'? G
,
ª'ª'G H
margin
ª'ª'I O
,
ª'ª'O P 
m_enableAutoSizing
ª'ª'Q c
,
ª'ª'c d"
m_enableWordWrapping
ª'ª'e y
)
ª'ª'y z
.
ª'ª'z {
y
ª'ª'{ |
;
ª'ª'| }&
m_AutoSizeIterationCount
º'º' (
+=
º'º') +
$num
º'º', -
;
º'º'- .
}
Ω'Ω' 
return
¡'¡' 
preferredHeight
¡'¡' "
;
¡'¡'" #
}
¬'¬' 	
public
…'…' 
Vector2
…'…' 
GetRenderedValues
…'…' (
(
…'…'( )
)
…'…') *
{
 ' ' 	
return
À'À' 
GetTextBounds
À'À'  
(
À'À'  !
)
À'À'! "
.
À'À'" #
size
À'À'# '
;
À'À'' (
}
Ã'Ã' 	
public
”'”' 
Vector2
”'”' 
GetRenderedValues
”'”' (
(
”'”'( )
bool
”'”') -#
onlyVisibleCharacters
”'”'. C
)
”'”'C D
{
‘'‘' 	
return
’'’' 
GetTextBounds
’'’'  
(
’'’'  !#
onlyVisibleCharacters
’'’'! 6
)
’'’'6 7
.
’'’'7 8
size
’'’'8 <
;
’'’'< =
}
÷'÷' 	
float
›'›' 
GetRenderedWidth
›'›' 
(
›'›' 
)
›'›'  
{
ﬁ'ﬁ' 	
return
ﬂ'ﬂ' 
GetRenderedValues
ﬂ'ﬂ' $
(
ﬂ'ﬂ'$ %
)
ﬂ'ﬂ'% &
.
ﬂ'ﬂ'& '
x
ﬂ'ﬂ'' (
;
ﬂ'ﬂ'( )
}
‡'‡' 	
	protected
Ê'Ê' 
float
Ê'Ê' 
GetRenderedWidth
Ê'Ê' (
(
Ê'Ê'( )
bool
Ê'Ê') -#
onlyVisibleCharacters
Ê'Ê'. C
)
Ê'Ê'C D
{
Á'Á' 	
return
Ë'Ë' 
GetRenderedValues
Ë'Ë' $
(
Ë'Ë'$ %#
onlyVisibleCharacters
Ë'Ë'% :
)
Ë'Ë': ;
.
Ë'Ë'; <
x
Ë'Ë'< =
;
Ë'Ë'= >
}
È'È' 	
float
Ô'Ô' 
GetRenderedHeight
Ô'Ô' 
(
Ô'Ô'  
)
Ô'Ô'  !
{
'' 	
return
Ò'Ò' 
GetRenderedValues
Ò'Ò' $
(
Ò'Ò'$ %
)
Ò'Ò'% &
.
Ò'Ò'& '
y
Ò'Ò'' (
;
Ò'Ò'( )
}
Ú'Ú' 	
	protected
¯'¯' 
float
¯'¯' 
GetRenderedHeight
¯'¯' )
(
¯'¯') *
bool
¯'¯'* .#
onlyVisibleCharacters
¯'¯'/ D
)
¯'¯'D E
{
˘'˘' 	
return
˙'˙' 
GetRenderedValues
˙'˙' $
(
˙'˙'$ %#
onlyVisibleCharacters
˙'˙'% :
)
˙'˙': ;
.
˙'˙'; <
y
˙'˙'< =
;
˙'˙'= >
}
˚'˚' 	
	protected
Ç(Ç( 
virtual
Ç(Ç( 
Vector2
Ç(Ç( !&
CalculatePreferredValues
Ç(Ç(" :
(
Ç(Ç(: ;
ref
Ç(Ç(; >
float
Ç(Ç(? D
fontSize
Ç(Ç(E M
,
Ç(Ç(M N
Vector2
Ç(Ç(O V

marginSize
Ç(Ç(W a
,
Ç(Ç(a b
bool
Ç(Ç(c g%
isTextAutoSizingEnabled
Ç(Ç(h 
,Ç(Ç( Ä
boolÇ(Ç(Å Ö%
isWordWrappingEnabledÇ(Ç(Ü õ
)Ç(Ç(õ ú
{
É(É( 	
if
â(â( 
(
â(â( 
m_fontAsset
â(â( 
==
â(â( 
null
â(â( #
||
â(â($ &
m_fontAsset
â(â(' 2
.
â(â(2 3"
characterLookupTable
â(â(3 G
==
â(â(H J
null
â(â(K O
)
â(â(O P
{
ä(ä( 
Debug
ã(ã( 
.
ã(ã( 

LogWarning
ã(ã(  
(
ã(ã(  !
$str
ã(ã(! f
+
ã(ã(g h
this
ã(ã(i m
.
ã(ã(m n
GetInstanceID
ã(ã(n {
(
ã(ã({ |
)
ã(ã(| }
)
ã(ã(} ~
;
ã(ã(~ &
m_IsAutoSizePointSizeSet
ç(ç( (
=
ç(ç() *
true
ç(ç(+ /
;
ç(ç(/ 0
return
é(é( 
Vector2
é(é( 
.
é(é( 
zero
é(é( #
;
é(é(# $
}
è(è( 
if
í(í( 
(
í(í( %
m_InternalParsingBuffer
í(í( '
==
í(í(( *
null
í(í(+ /
||
í(í(0 2%
m_InternalParsingBuffer
í(í(3 J
.
í(í(J K
Length
í(í(K Q
==
í(í(R T
$num
í(í(U V
||
í(í(W Y%
m_InternalParsingBuffer
í(í(Z q
[
í(í(q r
$num
í(í(r s
]
í(í(s t
.
í(í(t u
unicode
í(í(u |
==
í(í(} 
(í(í(Ä Å
charí(í(Å Ö
)í(í(Ö Ü
$numí(í(Ü á
)í(í(á à
{
ì(ì( &
m_IsAutoSizePointSizeSet
î(î( (
=
î(î() *
true
î(î(+ /
;
î(î(/ 0
return
ï(ï( 
Vector2
ï(ï( 
.
ï(ï( 
zero
ï(ï( #
;
ï(ï(# $
}
ñ(ñ(  
m_currentFontAsset
ò(ò( 
=
ò(ò(  
m_fontAsset
ò(ò(! ,
;
ò(ò(, -
m_currentMaterial
ô(ô( 
=
ô(ô( 
m_sharedMaterial
ô(ô(  0
;
ô(ô(0 1$
m_currentMaterialIndex
ö(ö( "
=
ö(ö(# $
$num
ö(ö(% &
;
ö(ö(& '&
m_materialReferenceStack
õ(õ( $
.
õ(õ($ %

SetDefault
õ(õ(% /
(
õ(õ(/ 0
new
õ(õ(0 3
MaterialReference
õ(õ(4 E
(
õ(õ(E F
$num
õ(õ(F G
,
õ(õ(G H 
m_currentFontAsset
õ(õ(I [
,
õ(õ([ \
null
õ(õ(] a
,
õ(õ(a b
m_currentMaterial
õ(õ(c t
,
õ(õ(t u
	m_padding
õ(õ(v 
)õ(õ( Ä
)õ(õ(Ä Å
;õ(õ(Å Ç
int
û(û( !
totalCharacterCount
û(û( #
=
û(û($ %#
m_totalCharacterCount
û(û(& ;
;
û(û(; <
if
†(†( 
(
†(†( %
m_internalCharacterInfo
†(†( '
==
†(†(( *
null
†(†(+ /
||
†(†(0 2!
totalCharacterCount
†(†(3 F
>
†(†(G H%
m_internalCharacterInfo
†(†(I `
.
†(†(` a
Length
†(†(a g
)
†(†(g h%
m_internalCharacterInfo
°(°( '
=
°(°(( )
new
°(°(* -
TMP_CharacterInfo
°(°(. ?
[
°(°(? @!
totalCharacterCount
°(°(@ S
>
°(°(T U
$num
°(°(V Z
?
°(°([ \!
totalCharacterCount
°(°(] p
+
°(°(q r
$num
°(°(s v
:
°(°(w x
Mathf
°(°(y ~
.
°(°(~ 
NextPowerOfTwo°(°( ç
(°(°(ç é#
totalCharacterCount°(°(é °
)°(°(° ¢
]°(°(¢ £
;°(°(£ §
float
•(•( 
	baseScale
•(•( 
=
•(•( 
m_fontScale
•(•( )
=
•(•(* +
(
•(•(, -
fontSize
•(•(- 5
/
•(•(6 7
m_fontAsset
•(•(8 C
.
•(•(C D
faceInfo
•(•(D L
.
•(•(L M
	pointSize
•(•(M V
*
•(•(W X
m_fontAsset
•(•(Y d
.
•(•(d e
faceInfo
•(•(e m
.
•(•(m n
scale
•(•(n s
*
•(•(t u
(
•(•(v w
m_isOrthographic•(•(w á
?•(•(à â
$num•(•(ä ã
:•(•(å ç
$num•(•(é í
)•(•(í ì
)•(•(ì î
;•(•(î ï
float
¶(¶( !
currentElementScale
¶(¶( %
=
¶(¶(& '
	baseScale
¶(¶(( 1
;
¶(¶(1 2
float
ß(ß( 
currentEmScale
ß(ß(  
=
ß(ß(! "
fontSize
ß(ß(# +
*
ß(ß(, -
$num
ß(ß(. 3
*
ß(ß(4 5
(
ß(ß(6 7
m_isOrthographic
ß(ß(7 G
?
ß(ß(H I
$num
ß(ß(J K
:
ß(ß(L M
$num
ß(ß(N R
)
ß(ß(R S
;
ß(ß(S T#
m_fontScaleMultiplier
®(®( !
=
®(®(" #
$num
®(®($ %
;
®(®(% &
m_currentFontSize
™(™( 
=
™(™( 
fontSize
™(™(  (
;
™(™(( )
m_sizeStack
´(´( 
.
´(´( 

SetDefault
´(´( "
(
´(´(" #
m_currentFontSize
´(´(# 4
)
´(´(4 5
;
´(´(5 6
float
¨(¨( 
fontSizeDelta
¨(¨( 
=
¨(¨(  !
$num
¨(¨(" #
;
¨(¨(# $!
m_FontStyleInternal
Æ(Æ( 
=
Æ(Æ(  !
m_fontStyle
Æ(Æ(" -
;
Æ(Æ(- .!
m_lineJustification
∞(∞( 
=
∞(∞(  !#
m_HorizontalAlignment
∞(∞(" 7
;
∞(∞(7 8&
m_lineJustificationStack
±(±( $
.
±(±($ %

SetDefault
±(±(% /
(
±(±(/ 0!
m_lineJustification
±(±(0 C
)
±(±(C D
;
±(±(D E
m_baselineOffset
≥(≥( 
=
≥(≥( 
$num
≥(≥(  
;
≥(≥(  !#
m_baselineOffsetStack
¥(¥( !
.
¥(¥(! "
Clear
¥(¥(" '
(
¥(¥(' (
)
¥(¥(( )
;
¥(¥() *
m_lineOffset
∂(∂( 
=
∂(∂( 
$num
∂(∂( 
;
∂(∂( 
m_lineHeight
∑(∑( 
=
∑(∑( 
TMP_Math
∑(∑( #
.
∑(∑(# $
FLOAT_UNSET
∑(∑($ /
;
∑(∑(/ 0
float
∏(∏( 
lineGap
∏(∏( 
=
∏(∏(  
m_currentFontAsset
∏(∏( .
.
∏(∏(. /
faceInfo
∏(∏(/ 7
.
∏(∏(7 8

lineHeight
∏(∏(8 B
-
∏(∏(C D
(
∏(∏(E F 
m_currentFontAsset
∏(∏(F X
.
∏(∏(X Y
faceInfo
∏(∏(Y a
.
∏(∏(a b

ascentLine
∏(∏(b l
-
∏(∏(m n!
m_currentFontAsset∏(∏(o Å
.∏(∏(Å Ç
faceInfo∏(∏(Ç ä
.∏(∏(ä ã
descentLine∏(∏(ã ñ
)∏(∏(ñ ó
;∏(∏(ó ò

m_cSpacing
∫(∫( 
=
∫(∫( 
$num
∫(∫( 
;
∫(∫( 
m_monoSpacing
ª(ª( 
=
ª(ª( 
$num
ª(ª( 
;
ª(ª( 

m_xAdvance
Ω(Ω( 
=
Ω(Ω( 
$num
Ω(Ω( 
;
Ω(Ω( 
float
æ(æ( 
maxXAdvance
æ(æ( 
=
æ(æ( 
$num
æ(æ(  !
;
æ(æ(! "
tag_LineIndent
¿(¿( 
=
¿(¿( 
$num
¿(¿( 
;
¿(¿( 

tag_Indent
¡(¡( 
=
¡(¡( 
$num
¡(¡( 
;
¡(¡( 
m_indentStack
¬(¬( 
.
¬(¬( 

SetDefault
¬(¬( $
(
¬(¬($ %
$num
¬(¬(% &
)
¬(¬(& '
;
¬(¬(' (
tag_NoParsing
√(√( 
=
√(√( 
false
√(√( !
;
√(√(! "
m_characterCount
∆(∆( 
=
∆(∆( 
$num
∆(∆(  
;
∆(∆(  !$
m_firstCharacterOfLine
 ( ( "
=
 ( (# $
$num
 ( (% &
;
 ( (& '
m_maxLineAscender
À(À( 
=
À(À( "
k_LargeNegativeFloat
À(À(  4
;
À(À(4 5 
m_maxLineDescender
Ã(Ã( 
=
Ã(Ã(  "
k_LargePositiveFloat
Ã(Ã(! 5
;
Ã(Ã(5 6
m_lineNumber
Õ(Õ( 
=
Õ(Õ( 
$num
Õ(Õ( 
;
Õ(Õ( #
m_startOfLineAscender
Œ(Œ( !
=
Œ(Œ(" #
$num
Œ(Œ($ %
;
Œ(Œ(% &#
m_IsDrivenLineSpacing
œ(œ( !
=
œ(œ(" #
false
œ(œ($ )
;
œ(œ() *
float
—(—( 
marginWidth
—(—( 
=
—(—( 

marginSize
—(—(  *
.
—(—(* +
x
—(—(+ ,
;
—(—(, -
float
“(“( 
marginHeight
“(“( 
=
“(“(  

marginSize
“(“(! +
.
“(“(+ ,
y
“(“(, -
;
“(“(- .
m_marginLeft
”(”( 
=
”(”( 
$num
”(”( 
;
”(”( 
m_marginRight
‘(‘( 
=
‘(‘( 
$num
‘(‘( 
;
‘(‘( 
float
÷(÷( 
lineMarginLeft
÷(÷(  
=
÷(÷(! "
$num
÷(÷(# $
;
÷(÷($ %
float
◊(◊( 
lineMarginRight
◊(◊( !
=
◊(◊(" #
$num
◊(◊($ %
;
◊(◊(% &
m_width
Ÿ(Ÿ( 
=
Ÿ(Ÿ( 
-
Ÿ(Ÿ( 
$num
Ÿ(Ÿ( 
;
Ÿ(Ÿ( 
float
⁄(⁄( 
widthOfTextArea
⁄(⁄( !
=
⁄(⁄(" #
marginWidth
⁄(⁄($ /
+
⁄(⁄(0 1
$num
⁄(⁄(2 9
-
⁄(⁄(: ;
m_marginLeft
⁄(⁄(< H
-
⁄(⁄(I J
m_marginRight
⁄(⁄(K X
;
⁄(⁄(X Y
float
›(›( 
renderedWidth
›(›( 
=
›(›(  !
$num
›(›(" #
;
›(›(# $
float
ﬁ(ﬁ( 
renderedHeight
ﬁ(ﬁ(  
=
ﬁ(ﬁ(! "
$num
ﬁ(ﬁ(# $
;
ﬁ(ﬁ($ %
float
ﬂ(ﬂ( 
	textWidth
ﬂ(ﬂ( 
=
ﬂ(ﬂ( 
$num
ﬂ(ﬂ( 
;
ﬂ(ﬂ(  ,
m_isCalculatingPreferredValues
‡(‡( *
=
‡(‡(+ ,
true
‡(‡(- 1
;
‡(‡(1 2
m_maxCapHeight
„(„( 
=
„(„( 
$num
„(„( 
;
„(„( 
m_maxTextAscender
‰(‰( 
=
‰(‰( 
$num
‰(‰(  !
;
‰(‰(! " 
m_ElementDescender
Â(Â( 
=
Â(Â(  
$num
Â(Â(! "
;
Â(Â(" #
float
Ê(Ê( !
maxVisibleDescender
Ê(Ê( %
=
Ê(Ê(& '
$num
Ê(Ê(( )
;
Ê(Ê() *
bool
Á(Á( &
isMaxVisibleDescenderSet
Á(Á( )
=
Á(Á(* +
false
Á(Á(, 1
;
Á(Á(1 2
bool
Í(Í( 
isFirstWordOfLine
Í(Í( "
=
Í(Í(# $
true
Í(Í(% )
;
Í(Í() *"
m_isNonBreakingSpace
Î(Î(  
=
Î(Î(! "
false
Î(Î(# (
;
Î(Î(( )
bool
Ì(Ì(  
isLastCharacterCJK
Ì(Ì( #
=
Ì(Ì($ %
false
Ì(Ì(& +
;
Ì(Ì(+ ,#
CharacterSubstitution
(( !#
characterToSubstitute
((" 7
=
((8 9
new
((: =#
CharacterSubstitution
((> S
(
((S T
-
((T U
$num
((U V
,
((V W
$num
((X Y
)
((Y Z
;
((Z [
bool
Ò(Ò( !
isSoftHyphenIgnored
Ò(Ò( $
=
Ò(Ò(% &
false
Ò(Ò(' ,
;
Ò(Ò(, -
WordWrapState
Û(Û( #
internalWordWrapState
Û(Û( /
=
Û(Û(0 1
new
Û(Û(2 5
WordWrapState
Û(Û(6 C
(
Û(Û(C D
)
Û(Û(D E
;
Û(Û(E F
WordWrapState
Ù(Ù( 
internalLineState
Ù(Ù( +
=
Ù(Ù(, -
new
Ù(Ù(. 1
WordWrapState
Ù(Ù(2 ?
(
Ù(Ù(? @
)
Ù(Ù(@ A
;
Ù(Ù(A B
WordWrapState
ı(ı( #
internalSoftLineBreak
ı(ı( /
=
ı(ı(0 1
new
ı(ı(2 5
WordWrapState
ı(ı(6 C
(
ı(ı(C D
)
ı(ı(D E
;
ı(ı(E F&
m_AutoSizeIterationCount
¯(¯( $
+=
¯(¯(% '
$num
¯(¯(( )
;
¯(¯() *
for
˚(˚( 
(
˚(˚( 
int
˚(˚( 
i
˚(˚( 
=
˚(˚( 
$num
˚(˚( 
;
˚(˚( 
i
˚(˚( 
<
˚(˚( %
m_InternalParsingBuffer
˚(˚(  7
.
˚(˚(7 8
Length
˚(˚(8 >
&&
˚(˚(? A%
m_InternalParsingBuffer
˚(˚(B Y
[
˚(˚(Y Z
i
˚(˚(Z [
]
˚(˚([ \
.
˚(˚(\ ]
unicode
˚(˚(] d
!=
˚(˚(e g
$num
˚(˚(h i
;
˚(˚(i j
i
˚(˚(k l
++
˚(˚(l n
)
˚(˚(n o
{
¸(¸( 
int
˝(˝( 
charCode
˝(˝( 
=
˝(˝( %
m_InternalParsingBuffer
˝(˝( 6
[
˝(˝(6 7
i
˝(˝(7 8
]
˝(˝(8 9
.
˝(˝(9 :
unicode
˝(˝(: A
;
˝(˝(A B
if
Å)Å) 
(
Å)Å) 
m_isRichText
Å)Å)  
&&
Å)Å)! #
charCode
Å)Å)$ ,
==
Å)Å)- /
$num
Å)Å)0 2
)
Å)Å)2 3
{
Ç)Ç) 
m_isParsingText
É)É) #
=
É)É)$ %
true
É)É)& *
;
É)É)* +
m_textElementType
Ñ)Ñ) %
=
Ñ)Ñ)& '!
TMP_TextElementType
Ñ)Ñ)( ;
.
Ñ)Ñ); <
	Character
Ñ)Ñ)< E
;
Ñ)Ñ)E F
int
Ö)Ö) 
endTagIndex
Ö)Ö) #
;
Ö)Ö)# $
if
à)à) 
(
à)à) 
ValidateHtmlTag
à)à) '
(
à)à)' (%
m_InternalParsingBuffer
à)à)( ?
,
à)à)? @
i
à)à)A B
+
à)à)C D
$num
à)à)E F
,
à)à)F G
out
à)à)H K
endTagIndex
à)à)L W
)
à)à)W X
)
à)à)X Y
{
â)â) 
i
ä)ä) 
=
ä)ä) 
endTagIndex
ä)ä) '
;
ä)ä)' (
if
ç)ç) 
(
ç)ç) 
m_textElementType
ç)ç) -
==
ç)ç). 0!
TMP_TextElementType
ç)ç)1 D
.
ç)ç)D E
	Character
ç)ç)E N
)
ç)ç)N O
continue
é)é) $
;
é)é)$ %
}
è)è) 
}
ê)ê) 
else
ë)ë) 
{
í)í) 
m_textElementType
ì)ì) %
=
ì)ì)& '

m_textInfo
ì)ì)( 2
.
ì)ì)2 3
characterInfo
ì)ì)3 @
[
ì)ì)@ A
m_characterCount
ì)ì)A Q
]
ì)ì)Q R
.
ì)ì)R S
elementType
ì)ì)S ^
;
ì)ì)^ _$
m_currentMaterialIndex
î)î) *
=
î)î)+ ,

m_textInfo
î)î)- 7
.
î)î)7 8
characterInfo
î)î)8 E
[
î)î)E F
m_characterCount
î)î)F V
]
î)î)V W
.
î)î)W X$
materialReferenceIndex
î)î)X n
;
î)î)n o 
m_currentFontAsset
ï)ï) &
=
ï)ï)' (

m_textInfo
ï)ï)) 3
.
ï)ï)3 4
characterInfo
ï)ï)4 A
[
ï)ï)A B
m_characterCount
ï)ï)B R
]
ï)ï)R S
.
ï)ï)S T
	fontAsset
ï)ï)T ]
;
ï)ï)] ^
}
ñ)ñ) 
int
ô)ô)  
prev_MaterialIndex
ô)ô) &
=
ô)ô)' ($
m_currentMaterialIndex
ô)ô)) ?
;
ô)ô)? @
bool
ö)ö)  
isUsingAltTypeface
ö)ö) '
=
ö)ö)( )

m_textInfo
ö)ö)* 4
.
ö)ö)4 5
characterInfo
ö)ö)5 B
[
ö)ö)B C
m_characterCount
ö)ö)C S
]
ö)ö)S T
.
ö)ö)T U&
isUsingAlternateTypeface
ö)ö)U m
;
ö)ö)m n
m_isParsingText
ú)ú) 
=
ú)ú)  !
false
ú)ú)" '
;
ú)ú)' (
bool
†)†) "
isInjectingCharacter
†)†) )
=
†)†)* +
false
†)†), 1
;
†)†)1 2
if
¢)¢) 
(
¢)¢) #
characterToSubstitute
¢)¢) )
.
¢)¢)) *
index
¢)¢)* /
==
¢)¢)0 2
m_characterCount
¢)¢)3 C
)
¢)¢)C D
{
£)£) 
charCode
§)§) 
=
§)§) 
(
§)§)  
int
§)§)  #
)
§)§)# $#
characterToSubstitute
§)§)$ 9
.
§)§)9 :
unicode
§)§): A
;
§)§)A B
m_textElementType
•)•) %
=
•)•)& '!
TMP_TextElementType
•)•)( ;
.
•)•); <
	Character
•)•)< E
;
•)•)E F"
isInjectingCharacter
¶)¶) (
=
¶)¶)) *
true
¶)¶)+ /
;
¶)¶)/ 0
switch
®)®) 
(
®)®) 
charCode
®)®) $
)
®)®)$ %
{
©)©) 
case
™)™) 
$num
™)™) !
:
™)™)! "%
m_internalCharacterInfo
´)´) 3
[
´)´)3 4
m_characterCount
´)´)4 D
]
´)´)D E
.
´)´)E F
textElement
´)´)F Q
=
´)´)R S 
m_currentFontAsset
´)´)T f
.
´)´)f g"
characterLookupTable
´)´)g {
[
´)´){ |
$num´)´)| Ä
]´)´)Ä Å
;´)´)Å Ç
m_isTextTruncated
¨)¨) -
=
¨)¨). /
true
¨)¨)0 4
;
¨)¨)4 5
break
≠)≠) !
;
≠)≠)! "
case
Æ)Æ) 
$num
Æ)Æ) !
:
Æ)Æ)! "
break
∞)∞) !
;
∞)∞)! "
case
±)±) 
$num
±)±) #
:
±)±)# $%
m_internalCharacterInfo
≤)≤) 3
[
≤)≤)3 4
m_characterCount
≤)≤)4 D
]
≤)≤)D E
.
≤)≤)E F
textElement
≤)≤)F Q
=
≤)≤)R S

m_Ellipsis
≤)≤)T ^
.
≤)≤)^ _
	character
≤)≤)_ h
;
≤)≤)h i
;
≤)≤)j k%
m_internalCharacterInfo
≥)≥) 3
[
≥)≥)3 4
m_characterCount
≥)≥)4 D
]
≥)≥)D E
.
≥)≥)E F
elementType
≥)≥)F Q
=
≥)≥)R S!
TMP_TextElementType
≥)≥)T g
.
≥)≥)g h
	Character
≥)≥)h q
;
≥)≥)q r%
m_internalCharacterInfo
¥)¥) 3
[
¥)¥)3 4
m_characterCount
¥)¥)4 D
]
¥)¥)D E
.
¥)¥)E F
	fontAsset
¥)¥)F O
=
¥)¥)P Q

m_Ellipsis
¥)¥)R \
.
¥)¥)\ ]
	fontAsset
¥)¥)] f
;
¥)¥)f g%
m_internalCharacterInfo
µ)µ) 3
[
µ)µ)3 4
m_characterCount
µ)µ)4 D
]
µ)µ)D E
.
µ)µ)E F
material
µ)µ)F N
=
µ)µ)O P

m_Ellipsis
µ)µ)Q [
.
µ)µ)[ \
material
µ)µ)\ d
;
µ)µ)d e%
m_internalCharacterInfo
∂)∂) 3
[
∂)∂)3 4
m_characterCount
∂)∂)4 D
]
∂)∂)D E
.
∂)∂)E F$
materialReferenceIndex
∂)∂)F \
=
∂)∂)] ^

m_Ellipsis
∂)∂)_ i
.
∂)∂)i j
materialIndex
∂)∂)j w
;
∂)∂)w x
m_isTextTruncated
π)π) -
=
π)π). /
true
π)π)0 4
;
π)π)4 5#
characterToSubstitute
º)º) 1
.
º)º)1 2
index
º)º)2 7
=
º)º)8 9
m_characterCount
º)º): J
+
º)º)K L
$num
º)º)M N
;
º)º)N O#
characterToSubstitute
Ω)Ω) 1
.
Ω)Ω)1 2
unicode
Ω)Ω)2 9
=
Ω)Ω): ;
$num
Ω)Ω)< @
;
Ω)Ω)@ A
break
æ)æ) !
;
æ)æ)! "
}
ø)ø) 
}
¿)¿) 
if
∆)∆) 
(
∆)∆) 
m_characterCount
∆)∆) $
<
∆)∆)% &%
m_firstVisibleCharacter
∆)∆)' >
&&
∆)∆)? A
charCode
∆)∆)B J
!=
∆)∆)K M
$num
∆)∆)N R
)
∆)∆)R S
{
«)«) %
m_internalCharacterInfo
»)») +
[
»)»)+ ,
m_characterCount
»)»), <
]
»)»)< =
.
»)»)= >
	isVisible
»)»)> G
=
»)»)H I
false
»)»)J O
;
»)»)O P%
m_internalCharacterInfo
…)…) +
[
…)…)+ ,
m_characterCount
…)…), <
]
…)…)< =
.
…)…)= >
	character
…)…)> G
=
…)…)H I
(
…)…)J K
char
…)…)K O
)
…)…)O P
$num
…)…)P V
;
…)…)V W%
m_internalCharacterInfo
 ) ) +
[
 ) )+ ,
m_characterCount
 ) ), <
]
 ) )< =
.
 ) )= >

lineNumber
 ) )> H
=
 ) )I J
$num
 ) )K L
;
 ) )L M
m_characterCount
À)À) $
+=
À)À)% '
$num
À)À)( )
;
À)À)) *
continue
Ã)Ã) 
;
Ã)Ã) 
}
Õ)Õ) 
float
‘)‘) !
smallCapsMultiplier
‘)‘) )
=
‘)‘)* +
$num
‘)‘), 0
;
‘)‘)0 1
if
÷)÷) 
(
÷)÷) 
m_textElementType
÷)÷) %
==
÷)÷)& (!
TMP_TextElementType
÷)÷)) <
.
÷)÷)< =
	Character
÷)÷)= F
)
÷)÷)F G
{
◊)◊) 
if
ÿ)ÿ) 
(
ÿ)ÿ) 
(
ÿ)ÿ)\ ]!
m_FontStyleInternal
ÿ)ÿ)] p
&
ÿ)ÿ)q r

FontStyles
ÿ)ÿ)s }
.
ÿ)ÿ)} ~
	UpperCaseÿ)ÿ)~ á
)ÿ)ÿ)á à
==ÿ)ÿ)â ã

FontStylesÿ)ÿ)å ñ
.ÿ)ÿ)ñ ó
	UpperCaseÿ)ÿ)ó †
)ÿ)ÿ)† °
{
Ÿ)Ÿ) 
if
€)€) 
(
€)€) 
char
€)€)  
.
€)€)  !
IsLower
€)€)! (
(
€)€)( )
(
€)€)) *
char
€)€)* .
)
€)€). /
charCode
€)€)/ 7
)
€)€)7 8
)
€)€)8 9
charCode
‹)‹) $
=
‹)‹)% &
char
‹)‹)' +
.
‹)‹)+ ,
ToUpper
‹)‹), 3
(
‹)‹)3 4
(
‹)‹)4 5
char
‹)‹)5 9
)
‹)‹)9 :
charCode
‹)‹): B
)
‹)‹)B C
;
‹)‹)C D
}
ﬁ)ﬁ) 
else
ﬂ)ﬂ) 
if
ﬂ)ﬂ) 
(
ﬂ)ﬂ) 
(
ﬂ)ﬂ)a b!
m_FontStyleInternal
ﬂ)ﬂ)b u
&
ﬂ)ﬂ)v w

FontStylesﬂ)ﬂ)x Ç
.ﬂ)ﬂ)Ç É
	LowerCaseﬂ)ﬂ)É å
)ﬂ)ﬂ)å ç
==ﬂ)ﬂ)é ê

FontStylesﬂ)ﬂ)ë õ
.ﬂ)ﬂ)õ ú
	LowerCaseﬂ)ﬂ)ú •
)ﬂ)ﬂ)• ¶
{
‡)‡) 
if
‚)‚) 
(
‚)‚) 
char
‚)‚)  
.
‚)‚)  !
IsUpper
‚)‚)! (
(
‚)‚)( )
(
‚)‚)) *
char
‚)‚)* .
)
‚)‚). /
charCode
‚)‚)/ 7
)
‚)‚)7 8
)
‚)‚)8 9
charCode
„)„) $
=
„)„)% &
char
„)„)' +
.
„)„)+ ,
ToLower
„)„), 3
(
„)„)3 4
(
„)„)4 5
char
„)„)5 9
)
„)„)9 :
charCode
„)„): B
)
„)„)B C
;
„)„)C D
}
‰)‰) 
else
Â)Â) 
if
Â)Â) 
(
Â)Â) 
(
Â)Â)a b!
m_FontStyleInternal
Â)Â)b u
&
Â)Â)v w

FontStylesÂ)Â)x Ç
.Â)Â)Ç É
	SmallCapsÂ)Â)É å
)Â)Â)å ç
==Â)Â)é ê

FontStylesÂ)Â)ë õ
.Â)Â)õ ú
	SmallCapsÂ)Â)ú •
)Â)Â)• ¶
{
Ê)Ê) 
if
Á)Á) 
(
Á)Á) 
char
Á)Á)  
.
Á)Á)  !
IsLower
Á)Á)! (
(
Á)Á)( )
(
Á)Á)) *
char
Á)Á)* .
)
Á)Á). /
charCode
Á)Á)/ 7
)
Á)Á)7 8
)
Á)Á)8 9
{
Ë)Ë) !
smallCapsMultiplier
È)È) /
=
È)È)0 1
$num
È)È)2 6
;
È)È)6 7
charCode
Í)Í) $
=
Í)Í)% &
char
Í)Í)' +
.
Í)Í)+ ,
ToUpper
Í)Í), 3
(
Í)Í)3 4
(
Í)Í)4 5
char
Í)Í)5 9
)
Í)Í)9 :
charCode
Í)Í): B
)
Í)Í)B C
;
Í)Í)C D
}
Î)Î) 
}
Ï)Ï) 
}
Ì)Ì) 
float
Ù)Ù) 
elementAscentLine
Ù)Ù) '
=
Ù)Ù)( )
$num
Ù)Ù)* +
;
Ù)Ù)+ ,
float
ı)ı)  
elementDescentLine
ı)ı) (
=
ı)ı)) *
$num
ı)ı)+ ,
;
ı)ı), -
if
ˆ)ˆ) 
(
ˆ)ˆ) 
m_textElementType
ˆ)ˆ) %
==
ˆ)ˆ)& (!
TMP_TextElementType
ˆ)ˆ)) <
.
ˆ)ˆ)< =
Sprite
ˆ)ˆ)= C
)
ˆ)ˆ)C D
{
˜)˜) "
m_currentSpriteAsset
˘)˘) (
=
˘)˘)) *

m_textInfo
˘)˘)+ 5
.
˘)˘)5 6
characterInfo
˘)˘)6 C
[
˘)˘)C D
m_characterCount
˘)˘)D T
]
˘)˘)T U
.
˘)˘)U V
spriteAsset
˘)˘)V a
;
˘)˘)a b
m_spriteIndex
˙)˙) !
=
˙)˙)" #

m_textInfo
˙)˙)$ .
.
˙)˙). /
characterInfo
˙)˙)/ <
[
˙)˙)< =
m_characterCount
˙)˙)= M
]
˙)˙)M N
.
˙)˙)N O
spriteIndex
˙)˙)O Z
;
˙)˙)Z [!
TMP_SpriteCharacter
¸)¸) '
sprite
¸)¸)( .
=
¸)¸)/ 0"
m_currentSpriteAsset
¸)¸)1 E
.
¸)¸)E F"
spriteCharacterTable
¸)¸)F Z
[
¸)¸)Z [
m_spriteIndex
¸)¸)[ h
]
¸)¸)h i
;
¸)¸)i j
if
˝)˝) 
(
˝)˝) 
sprite
˝)˝) 
==
˝)˝) !
null
˝)˝)" &
)
˝)˝)& '
continue
˝)˝)( 0
;
˝)˝)0 1
if
Ä*Ä* 
(
Ä*Ä* 
charCode
Ä*Ä*  
==
Ä*Ä*! #
$num
Ä*Ä*$ &
)
Ä*Ä*& '
charCode
Å*Å*  
=
Å*Å*! "
$num
Å*Å*# (
+
Å*Å*) *
m_spriteIndex
Å*Å*+ 8
;
Å*Å*8 9
if
Ñ*Ñ* 
(
Ñ*Ñ* "
m_currentSpriteAsset
Ñ*Ñ* ,
.
Ñ*Ñ*, -
faceInfo
Ñ*Ñ*- 5
.
Ñ*Ñ*5 6
	pointSize
Ñ*Ñ*6 ?
>
Ñ*Ñ*@ A
$num
Ñ*Ñ*B C
)
Ñ*Ñ*C D
{
Ö*Ö* 
float
Ü*Ü* 
spriteScale
Ü*Ü* )
=
Ü*Ü** +
(
Ü*Ü*, -
m_currentFontSize
Ü*Ü*- >
/
Ü*Ü*? @"
m_currentSpriteAsset
Ü*Ü*A U
.
Ü*Ü*U V
faceInfo
Ü*Ü*V ^
.
Ü*Ü*^ _
	pointSize
Ü*Ü*_ h
*
Ü*Ü*i j"
m_currentSpriteAsset
Ü*Ü*k 
.Ü*Ü* Ä
faceInfoÜ*Ü*Ä à
.Ü*Ü*à â
scaleÜ*Ü*â é
*Ü*Ü*è ê
(Ü*Ü*ë í 
m_isOrthographicÜ*Ü*í ¢
?Ü*Ü*£ §
$numÜ*Ü*• ¶
:Ü*Ü*ß ®
$numÜ*Ü*© ≠
)Ü*Ü*≠ Æ
)Ü*Ü*Æ Ø
;Ü*Ü*Ø ∞!
currentElementScale
á*á* +
=
á*á*, -
sprite
á*á*. 4
.
á*á*4 5
scale
á*á*5 :
*
á*á*; <
sprite
á*á*= C
.
á*á*C D
glyph
á*á*D I
.
á*á*I J
scale
á*á*J O
*
á*á*P Q
spriteScale
á*á*R ]
;
á*á*] ^
elementAscentLine
à*à* )
=
à*à** +"
m_currentSpriteAsset
à*à*, @
.
à*à*@ A
faceInfo
à*à*A I
.
à*à*I J

ascentLine
à*à*J T
;
à*à*T U 
elementDescentLine
ä*ä* *
=
ä*ä*+ ,"
m_currentSpriteAsset
ä*ä*- A
.
ä*ä*A B
faceInfo
ä*ä*B J
.
ä*ä*J K
descentLine
ä*ä*K V
;
ä*ä*V W
}
ã*ã* 
else
å*å* 
{
ç*ç* 
float
é*é* 
spriteScale
é*é* )
=
é*é** +
(
é*é*, -
m_currentFontSize
é*é*- >
/
é*é*? @ 
m_currentFontAsset
é*é*A S
.
é*é*S T
faceInfo
é*é*T \
.
é*é*\ ]
	pointSize
é*é*] f
*
é*é*g h 
m_currentFontAsset
é*é*i {
.
é*é*{ |
faceInfoé*é*| Ñ
.é*é*Ñ Ö
scaleé*é*Ö ä
*é*é*ã å
(é*é*ç é 
m_isOrthographicé*é*é û
?é*é*ü †
$numé*é*° ¢
:é*é*£ §
$numé*é*• ©
)é*é*© ™
)é*é*™ ´
;é*é*´ ¨!
currentElementScale
è*è* +
=
è*è*, - 
m_currentFontAsset
è*è*. @
.
è*è*@ A
faceInfo
è*è*A I
.
è*è*I J

ascentLine
è*è*J T
/
è*è*U V
sprite
è*è*W ]
.
è*è*] ^
glyph
è*è*^ c
.
è*è*c d
metrics
è*è*d k
.
è*è*k l
height
è*è*l r
*
è*è*s t
sprite
è*è*u {
.
è*è*{ |
scaleè*è*| Å
*è*è*Ç É
spriteè*è*Ñ ä
.è*è*ä ã
glyphè*è*ã ê
.è*è*ê ë
scaleè*è*ë ñ
*è*è*ó ò
spriteScaleè*è*ô §
;è*è*§ •
float
ê*ê* 

scaleDelta
ê*ê* (
=
ê*ê*) *
spriteScale
ê*ê*+ 6
/
ê*ê*7 8!
currentElementScale
ê*ê*9 L
;
ê*ê*L M
elementAscentLine
ë*ë* )
=
ë*ë** + 
m_currentFontAsset
ë*ë*, >
.
ë*ë*> ?
faceInfo
ë*ë*? G
.
ë*ë*G H

ascentLine
ë*ë*H R
*
ë*ë*S T

scaleDelta
ë*ë*U _
;
ë*ë*_ ` 
elementDescentLine
ì*ì* *
=
ì*ì*+ , 
m_currentFontAsset
ì*ì*- ?
.
ì*ì*? @
faceInfo
ì*ì*@ H
.
ì*ì*H I
descentLine
ì*ì*I T
*
ì*ì*U V

scaleDelta
ì*ì*W a
;
ì*ì*a b
}
î*î* "
m_cached_TextElement
ñ*ñ* (
=
ñ*ñ*) *
sprite
ñ*ñ*+ 1
;
ñ*ñ*1 2%
m_internalCharacterInfo
ò*ò* +
[
ò*ò*+ ,
m_characterCount
ò*ò*, <
]
ò*ò*< =
.
ò*ò*= >
elementType
ò*ò*> I
=
ò*ò*J K!
TMP_TextElementType
ò*ò*L _
.
ò*ò*_ `
Sprite
ò*ò*` f
;
ò*ò*f g%
m_internalCharacterInfo
ô*ô* +
[
ô*ô*+ ,
m_characterCount
ô*ô*, <
]
ô*ô*< =
.
ô*ô*= >
scale
ô*ô*> C
=
ô*ô*D E!
currentElementScale
ô*ô*F Y
;
ô*ô*Y Z$
m_currentMaterialIndex
õ*õ* *
=
õ*õ*+ , 
prev_MaterialIndex
õ*õ*- ?
;
õ*õ*? @
}
ú*ú* 
else
ù*ù* 
if
ù*ù* 
(
ù*ù* 
m_textElementType
ù*ù* *
==
ù*ù*+ -!
TMP_TextElementType
ù*ù*. A
.
ù*ù*A B
	Character
ù*ù*B K
)
ù*ù*K L
{
û*û* "
m_cached_TextElement
ü*ü* (
=
ü*ü*) *

m_textInfo
ü*ü*+ 5
.
ü*ü*5 6
characterInfo
ü*ü*6 C
[
ü*ü*C D
m_characterCount
ü*ü*D T
]
ü*ü*T U
.
ü*ü*U V
textElement
ü*ü*V a
;
ü*ü*a b
if
†*†* 
(
†*†* "
m_cached_TextElement
†*†* ,
==
†*†*- /
null
†*†*0 4
)
†*†*4 5
continue
†*†*6 >
;
†*†*> ?$
m_currentMaterialIndex
¢*¢* *
=
¢*¢*+ ,

m_textInfo
¢*¢*- 7
.
¢*¢*7 8
characterInfo
¢*¢*8 E
[
¢*¢*E F
m_characterCount
¢*¢*F V
]
¢*¢*V W
.
¢*¢*W X$
materialReferenceIndex
¢*¢*X n
;
¢*¢*n o
float
§*§* 
adjustedScale
§*§* '
;
§*§*' (
if
•*•* 
(
•*•* "
isInjectingCharacter
•*•* ,
&&
•*•*- /%
m_InternalParsingBuffer
•*•*0 G
[
•*•*G H
i
•*•*H I
]
•*•*I J
.
•*•*J K
unicode
•*•*K R
==
•*•*S U
$num
•*•*V Z
&&
•*•*[ ]
m_characterCount
•*•*^ n
!=
•*•*o q%
m_firstCharacterOfLine•*•*r à
)•*•*à â
adjustedScale
¶*¶* %
=
¶*¶*& '

m_textInfo
¶*¶*( 2
.
¶*¶*2 3
characterInfo
¶*¶*3 @
[
¶*¶*@ A
m_characterCount
¶*¶*A Q
-
¶*¶*R S
$num
¶*¶*T U
]
¶*¶*U V
.
¶*¶*V W
	pointSize
¶*¶*W `
*
¶*¶*a b!
smallCapsMultiplier
¶*¶*c v
/
¶*¶*w x!
m_currentFontAsset¶*¶*y ã
.¶*¶*ã å

m_FaceInfo¶*¶*å ñ
.¶*¶*ñ ó
	pointSize¶*¶*ó †
*¶*¶*° ¢"
m_currentFontAsset¶*¶*£ µ
.¶*¶*µ ∂

m_FaceInfo¶*¶*∂ ¿
.¶*¶*¿ ¡
scale¶*¶*¡ ∆
*¶*¶*« »
(¶*¶*…   
m_isOrthographic¶*¶*  ⁄
?¶*¶*€ ‹
$num¶*¶*› ﬁ
:¶*¶*ﬂ ‡
$num¶*¶*· Â
)¶*¶*Â Ê
;¶*¶*Ê Á
else
ß*ß* 
adjustedScale
®*®* %
=
®*®*& '
m_currentFontSize
®*®*( 9
*
®*®*: ;!
smallCapsMultiplier
®*®*< O
/
®*®*P Q 
m_currentFontAsset
®*®*R d
.
®*®*d e

m_FaceInfo
®*®*e o
.
®*®*o p
	pointSize
®*®*p y
*
®*®*z {!
m_currentFontAsset®*®*| é
.®*®*é è

m_FaceInfo®*®*è ô
.®*®*ô ö
scale®*®*ö ü
*®*®*† °
(®*®*¢ £ 
m_isOrthographic®*®*£ ≥
?®*®*¥ µ
$num®*®*∂ ∑
:®*®*∏ π
$num®*®*∫ æ
)®*®*æ ø
;®*®*ø ¿
elementAscentLine
™*™* %
=
™*™*& ' 
m_currentFontAsset
™*™*( :
.
™*™*: ;

m_FaceInfo
™*™*; E
.
™*™*E F

ascentLine
™*™*F P
;
™*™*P Q 
elementDescentLine
´*´* &
=
´*´*' ( 
m_currentFontAsset
´*´*) ;
.
´*´*; <

m_FaceInfo
´*´*< F
.
´*´*F G
descentLine
´*´*G R
;
´*´*R S!
currentElementScale
≠*≠* '
=
≠*≠*( )
adjustedScale
≠*≠** 7
*
≠*≠*8 9#
m_fontScaleMultiplier
≠*≠*: O
*
≠*≠*P Q"
m_cached_TextElement
≠*≠*R f
.
≠*≠*f g
scale
≠*≠*g l
;
≠*≠*l m%
m_internalCharacterInfo
∞*∞* +
[
∞*∞*+ ,
m_characterCount
∞*∞*, <
]
∞*∞*< =
.
∞*∞*= >
elementType
∞*∞*> I
=
∞*∞*J K!
TMP_TextElementType
∞*∞*L _
.
∞*∞*_ `
	Character
∞*∞*` i
;
∞*∞*i j
}
±*±* 
float
∑*∑* +
currentElementUnmodifiedScale
∑*∑* 3
=
∑*∑*4 5!
currentElementScale
∑*∑*6 I
;
∑*∑*I J
if
∏*∏* 
(
∏*∏* 
charCode
∏*∏* 
==
∏*∏* 
$num
∏*∏*  $
||
∏*∏*% '
charCode
∏*∏*( 0
==
∏*∏*1 3
$num
∏*∏*4 8
)
∏*∏*8 9!
currentElementScale
π*π* '
=
π*π*( )
$num
π*π** +
;
π*π*+ ,%
m_internalCharacterInfo
æ*æ* '
[
æ*æ*' (
m_characterCount
æ*æ*( 8
]
æ*æ*8 9
.
æ*æ*9 :
	character
æ*æ*: C
=
æ*æ*D E
(
æ*æ*F G
char
æ*æ*G K
)
æ*æ*K L
charCode
æ*æ*L T
;
æ*æ*T U
GlyphMetrics
¡*¡* !
currentGlyphMetrics
¡*¡* 0
=
¡*¡*1 2"
m_cached_TextElement
¡*¡*3 G
.
¡*¡*G H
m_Glyph
¡*¡*H O
.
¡*¡*O P
metrics
¡*¡*P W
;
¡*¡*W X
bool
ƒ*ƒ* 
isWhiteSpace
ƒ*ƒ* !
=
ƒ*ƒ*" #
char
ƒ*ƒ*$ (
.
ƒ*ƒ*( )
IsWhiteSpace
ƒ*ƒ*) 5
(
ƒ*ƒ*5 6
(
ƒ*ƒ*6 7
char
ƒ*ƒ*7 ;
)
ƒ*ƒ*; <
charCode
ƒ*ƒ*< D
)
ƒ*ƒ*D E
;
ƒ*ƒ*E F"
TMP_GlyphValueRecord
…*…* $
glyphAdjustments
…*…*% 5
=
…*…*6 7
new
…*…*8 ;"
TMP_GlyphValueRecord
…*…*< P
(
…*…*P Q
)
…*…*Q R
;
…*…*R S
float
 * * (
characterSpacingAdjustment
 * * 0
=
 * *1 2 
m_characterSpacing
 * *3 E
;
 * *E F0
"m_GlyphHorizontalAdvanceAdjustment
À*À* 2
=
À*À*3 4
$num
À*À*5 6
;
À*À*6 7
if
Ã*Ã* 
(
Ã*Ã* 
m_enableKerning
Ã*Ã* #
)
Ã*Ã*# $
{
Õ*Õ* +
TMP_GlyphPairAdjustmentRecord
Œ*Œ* 1
adjustmentPair
Œ*Œ*2 @
;
Œ*Œ*@ A
uint
œ*œ* 
baseGlyphIndex
œ*œ* '
=
œ*œ*( )"
m_cached_TextElement
œ*œ** >
.
œ*œ*> ?
m_GlyphIndex
œ*œ*? K
;
œ*œ*K L
if
—*—* 
(
—*—* 
m_characterCount
—*—* (
<
—*—*) *!
totalCharacterCount
—*—*+ >
-
—*—*? @
$num
—*—*A B
)
—*—*B C
{
“*“* 
uint
”*”* 
nextGlyphIndex
”*”* +
=
”*”*, -

m_textInfo
”*”*. 8
.
”*”*8 9
characterInfo
”*”*9 F
[
”*”*F G
m_characterCount
”*”*G W
+
”*”*X Y
$num
”*”*Z [
]
”*”*[ \
.
”*”*\ ]
textElement
”*”*] h
.
”*”*h i
m_GlyphIndex
”*”*i u
;
”*”*u v
uint
‘*‘* 
key
‘*‘*  
=
‘*‘*! "
nextGlyphIndex
‘*‘*# 1
<<
‘*‘*2 4
$num
‘*‘*5 7
|
‘*‘*8 9
baseGlyphIndex
‘*‘*: H
;
‘*‘*H I
if
÷*÷* 
(
÷*÷*  
m_currentFontAsset
÷*÷* .
.
÷*÷*. / 
m_FontFeatureTable
÷*÷*/ A
.
÷*÷*A B9
+m_GlyphPairAdjustmentRecordLookupDictionary
÷*÷*B m
.
÷*÷*m n
TryGetValue
÷*÷*n y
(
÷*÷*y z
key
÷*÷*z }
,
÷*÷*} ~
out÷*÷* Ç
adjustmentPair÷*÷*É ë
)÷*÷*ë í
)÷*÷*í ì
{
◊*◊* 
glyphAdjustments
ÿ*ÿ* ,
=
ÿ*ÿ*- .
adjustmentPair
ÿ*ÿ*/ =
.
ÿ*ÿ*= >%
m_FirstAdjustmentRecord
ÿ*ÿ*> U
.
ÿ*ÿ*U V 
m_GlyphValueRecord
ÿ*ÿ*V h
;
ÿ*ÿ*h i(
characterSpacingAdjustment
Ÿ*Ÿ* 6
=
Ÿ*Ÿ*7 8
(
Ÿ*Ÿ*9 :
adjustmentPair
Ÿ*Ÿ*: H
.
Ÿ*Ÿ*H I"
m_FeatureLookupFlags
Ÿ*Ÿ*I ]
&
Ÿ*Ÿ*^ _$
FontFeatureLookupFlags
Ÿ*Ÿ*` v
.
Ÿ*Ÿ*v w'
IgnoreSpacingAdjustmentsŸ*Ÿ*w è
)Ÿ*Ÿ*è ê
==Ÿ*Ÿ*ë ì&
FontFeatureLookupFlagsŸ*Ÿ*î ™
.Ÿ*Ÿ*™ ´(
IgnoreSpacingAdjustmentsŸ*Ÿ*´ √
?Ÿ*Ÿ*ƒ ≈
$numŸ*Ÿ*∆ «
:Ÿ*Ÿ*» …*
characterSpacingAdjustmentŸ*Ÿ*  ‰
;Ÿ*Ÿ*‰ Â
}
⁄*⁄* 
}
€*€* 
if
›*›* 
(
›*›* 
m_characterCount
›*›* (
>=
›*›*) +
$num
›*›*, -
)
›*›*- .
{
ﬁ*ﬁ* 
uint
ﬂ*ﬂ*  
previousGlyphIndex
ﬂ*ﬂ* /
=
ﬂ*ﬂ*0 1

m_textInfo
ﬂ*ﬂ*2 <
.
ﬂ*ﬂ*< =
characterInfo
ﬂ*ﬂ*= J
[
ﬂ*ﬂ*J K
m_characterCount
ﬂ*ﬂ*K [
-
ﬂ*ﬂ*\ ]
$num
ﬂ*ﬂ*^ _
]
ﬂ*ﬂ*_ `
.
ﬂ*ﬂ*` a
textElement
ﬂ*ﬂ*a l
.
ﬂ*ﬂ*l m
m_GlyphIndex
ﬂ*ﬂ*m y
;
ﬂ*ﬂ*y z
uint
‡*‡* 
key
‡*‡*  
=
‡*‡*! "
baseGlyphIndex
‡*‡*# 1
<<
‡*‡*2 4
$num
‡*‡*5 7
|
‡*‡*8 9 
previousGlyphIndex
‡*‡*: L
;
‡*‡*L M
if
‚*‚* 
(
‚*‚*  
m_currentFontAsset
‚*‚* .
.
‚*‚*. / 
m_FontFeatureTable
‚*‚*/ A
.
‚*‚*A B9
+m_GlyphPairAdjustmentRecordLookupDictionary
‚*‚*B m
.
‚*‚*m n
TryGetValue
‚*‚*n y
(
‚*‚*y z
key
‚*‚*z }
,
‚*‚*} ~
out‚*‚* Ç
adjustmentPair‚*‚*É ë
)‚*‚*ë í
)‚*‚*í ì
{
„*„* 
glyphAdjustments
‰*‰* ,
+=
‰*‰*- /
adjustmentPair
‰*‰*0 >
.
‰*‰*> ?&
m_SecondAdjustmentRecord
‰*‰*? W
.
‰*‰*W X 
m_GlyphValueRecord
‰*‰*X j
;
‰*‰*j k(
characterSpacingAdjustment
Â*Â* 6
=
Â*Â*7 8
(
Â*Â*9 :
adjustmentPair
Â*Â*: H
.
Â*Â*H I"
m_FeatureLookupFlags
Â*Â*I ]
&
Â*Â*^ _$
FontFeatureLookupFlags
Â*Â*` v
.
Â*Â*v w'
IgnoreSpacingAdjustmentsÂ*Â*w è
)Â*Â*è ê
==Â*Â*ë ì&
FontFeatureLookupFlagsÂ*Â*î ™
.Â*Â*™ ´(
IgnoreSpacingAdjustmentsÂ*Â*´ √
?Â*Â*ƒ ≈
$numÂ*Â*∆ «
:Â*Â*» …*
characterSpacingAdjustmentÂ*Â*  ‰
;Â*Â*‰ Â
}
Ê*Ê* 
}
Á*Á* 0
"m_GlyphHorizontalAdvanceAdjustment
È*È* 6
=
È*È*7 8
glyphAdjustments
È*È*9 I
.
È*È*I J

m_XAdvance
È*È*J T
;
È*È*T U
}
Í*Í* 
float
¸*¸* 
monoAdvance
¸*¸* !
=
¸*¸*" #
$num
¸*¸*$ %
;
¸*¸*% &
if
˝*˝* 
(
˝*˝* 
m_monoSpacing
˝*˝* !
!=
˝*˝*" $
$num
˝*˝*% &
)
˝*˝*& '
{
˛*˛* 
monoAdvance
ˇ*ˇ* 
=
ˇ*ˇ*  !
(
ˇ*ˇ*" #
m_monoSpacing
ˇ*ˇ*# 0
/
ˇ*ˇ*1 2
$num
ˇ*ˇ*3 4
-
ˇ*ˇ*5 6
(
ˇ*ˇ*7 8"
m_cached_TextElement
ˇ*ˇ*8 L
.
ˇ*ˇ*L M
glyph
ˇ*ˇ*M R
.
ˇ*ˇ*R S
metrics
ˇ*ˇ*S Z
.
ˇ*ˇ*Z [
width
ˇ*ˇ*[ `
/
ˇ*ˇ*a b
$num
ˇ*ˇ*c d
+
ˇ*ˇ*e f"
m_cached_TextElement
ˇ*ˇ*g {
.
ˇ*ˇ*{ |
glyphˇ*ˇ*| Å
.ˇ*ˇ*Å Ç
metricsˇ*ˇ*Ç â
.ˇ*ˇ*â ä"
horizontalBearingXˇ*ˇ*ä ú
)ˇ*ˇ*ú ù
*ˇ*ˇ*û ü#
currentElementScaleˇ*ˇ*† ≥
)ˇ*ˇ*≥ ¥
*ˇ*ˇ*µ ∂
(ˇ*ˇ*∑ ∏
$numˇ*ˇ*∏ π
-ˇ*ˇ*∫ ª#
m_charWidthAdjDeltaˇ*ˇ*º œ
)ˇ*ˇ*œ –
;ˇ*ˇ*– —

m_xAdvance
Ä+Ä+ 
+=
Ä+Ä+ !
monoAdvance
Ä+Ä+" -
;
Ä+Ä+- .
}
Å+Å+ 
float
á+á+ #
boldSpacingAdjustment
á+á+ +
=
á+á+, -
$num
á+á+. /
;
á+á+/ 0
if
à+à+ 
(
à+à+ 
m_textElementType
à+à+ %
==
à+à+& (!
TMP_TextElementType
à+à+) <
.
à+à+< =
	Character
à+à+= F
&&
à+à+G I
!
à+à+J K 
isUsingAltTypeface
à+à+K ]
&&
à+à+^ `
(
à+à+a b
(
à+à+b c!
m_FontStyleInternal
à+à+c v
&
à+à+w x

FontStylesà+à+y É
.à+à+É Ñ
Boldà+à+Ñ à
)à+à+à â
==à+à+ä å

FontStylesà+à+ç ó
.à+à+ó ò
Boldà+à+ò ú
)à+à+ú ù
)à+à+ù û#
boldSpacingAdjustment
â+â+ )
=
â+â+* + 
m_currentFontAsset
â+â+, >
.
â+â+> ?
boldSpacing
â+â+? J
;
â+â+J K%
m_internalCharacterInfo
å+å+ '
[
å+å+' (
m_characterCount
å+å+( 8
]
å+å+8 9
.
å+å+9 :
baseLine
å+å+: B
=
å+å+C D
$num
å+å+E F
-
å+å+G H
m_lineOffset
å+å+I U
+
å+å+V W
m_baselineOffset
å+å+X h
;
å+å+h i
float
ë+ë+ 
elementAscender
ë+ë+ %
=
ë+ë+& '
m_textElementType
ë+ë+( 9
==
ë+ë+: <!
TMP_TextElementType
ë+ë+= P
.
ë+ë+P Q
	Character
ë+ë+Q Z
?
í+í+ 
elementAscentLine
í+í+ '
*
í+í+( )!
currentElementScale
í+í+* =
/
í+í+> ?!
smallCapsMultiplier
í+í+@ S
+
í+í+T U
m_baselineOffset
í+í+V f
:
ì+ì+ 
elementAscentLine
ì+ì+ '
*
ì+ì+( )!
currentElementScale
ì+ì+* =
+
ì+ì+> ?
m_baselineOffset
ì+ì+@ P
;
ì+ì+P Q
float
ñ+ñ+ 
elementDescender
ñ+ñ+ &
=
ñ+ñ+' (
m_textElementType
ñ+ñ+) :
==
ñ+ñ+; =!
TMP_TextElementType
ñ+ñ+> Q
.
ñ+ñ+Q R
	Character
ñ+ñ+R [
?
ó+ó+  
elementDescentLine
ó+ó+ (
*
ó+ó+) *!
currentElementScale
ó+ó++ >
/
ó+ó+? @!
smallCapsMultiplier
ó+ó+A T
+
ó+ó+U V
m_baselineOffset
ó+ó+W g
:
ò+ò+  
elementDescentLine
ò+ò+ (
*
ò+ò+) *!
currentElementScale
ò+ò++ >
+
ò+ò+? @
m_baselineOffset
ò+ò+A Q
;
ò+ò+Q R
float
ö+ö+ 
adjustedAscender
ö+ö+ &
=
ö+ö+' (
elementAscender
ö+ö+) 8
;
ö+ö+8 9
float
õ+õ+ 
adjustedDescender
õ+õ+ '
=
õ+õ+( )
elementDescender
õ+õ+* :
;
õ+õ+: ;
bool
ù+ù+ $
isFirstCharacterOfLine
ù+ù+ +
=
ù+ù+, -
m_characterCount
ù+ù+. >
==
ù+ù+? A$
m_firstCharacterOfLine
ù+ù+B X
;
ù+ù+X Y
if
ü+ü+ 
(
ü+ü+ $
isFirstCharacterOfLine
ü+ü+ *
||
ü+ü++ -
isWhiteSpace
ü+ü+. :
==
ü+ü+; =
false
ü+ü+> C
)
ü+ü+C D
{
†+†+ 
if
¢+¢+ 
(
¢+¢+ 
m_baselineOffset
¢+¢+ (
!=
¢+¢+) +
$num
¢+¢+, -
)
¢+¢+- .
{
£+£+ 
adjustedAscender
§+§+ (
=
§+§+) *
Mathf
§+§++ 0
.
§+§+0 1
Max
§+§+1 4
(
§+§+4 5
(
§+§+5 6
elementAscender
§+§+6 E
-
§+§+F G
m_baselineOffset
§+§+H X
)
§+§+X Y
/
§+§+Z [#
m_fontScaleMultiplier
§+§+\ q
,
§+§+q r
adjustedAscender§+§+s É
)§+§+É Ñ
;§+§+Ñ Ö
adjustedDescender
•+•+ )
=
•+•+* +
Mathf
•+•+, 1
.
•+•+1 2
Min
•+•+2 5
(
•+•+5 6
(
•+•+6 7
elementDescender
•+•+7 G
-
•+•+H I
m_baselineOffset
•+•+J Z
)
•+•+Z [
/
•+•+\ ]#
m_fontScaleMultiplier
•+•+^ s
,
•+•+s t 
adjustedDescender•+•+u Ü
)•+•+Ü á
;•+•+á à
}
¶+¶+ 
m_maxLineAscender
®+®+ %
=
®+®+& '
Mathf
®+®+( -
.
®+®+- .
Max
®+®+. 1
(
®+®+1 2
adjustedAscender
®+®+2 B
,
®+®+B C
m_maxLineAscender
®+®+D U
)
®+®+U V
;
®+®+V W 
m_maxLineDescender
©+©+ &
=
©+©+' (
Mathf
©+©+) .
.
©+©+. /
Min
©+©+/ 2
(
©+©+2 3
adjustedDescender
©+©+3 D
,
©+©+D E 
m_maxLineDescender
©+©+F X
)
©+©+X Y
;
©+©+Y Z
}
™+™+ 
if
≠+≠+ 
(
≠+≠+ $
isFirstCharacterOfLine
≠+≠+ *
||
≠+≠++ -
isWhiteSpace
≠+≠+. :
==
≠+≠+; =
false
≠+≠+> C
)
≠+≠+C D
{
Æ+Æ+ %
m_internalCharacterInfo
Ø+Ø+ +
[
Ø+Ø++ ,
m_characterCount
Ø+Ø+, <
]
Ø+Ø+< =
.
Ø+Ø+= >
adjustedAscender
Ø+Ø+> N
=
Ø+Ø+O P
adjustedAscender
Ø+Ø+Q a
;
Ø+Ø+a b%
m_internalCharacterInfo
∞+∞+ +
[
∞+∞++ ,
m_characterCount
∞+∞+, <
]
∞+∞+< =
.
∞+∞+= >
adjustedDescender
∞+∞+> O
=
∞+∞+P Q
adjustedDescender
∞+∞+R c
;
∞+∞+c d
m_ElementAscender
≤+≤+ %
=
≤+≤+& '%
m_internalCharacterInfo
≤+≤+( ?
[
≤+≤+? @
m_characterCount
≤+≤+@ P
]
≤+≤+P Q
.
≤+≤+Q R
ascender
≤+≤+R Z
=
≤+≤+[ \
elementAscender
≤+≤+] l
-
≤+≤+m n
m_lineOffset
≤+≤+o {
;
≤+≤+{ | 
m_ElementDescender
≥+≥+ &
=
≥+≥+' (%
m_internalCharacterInfo
≥+≥+) @
[
≥+≥+@ A
m_characterCount
≥+≥+A Q
]
≥+≥+Q R
.
≥+≥+R S
	descender
≥+≥+S \
=
≥+≥+] ^
elementDescender
≥+≥+_ o
-
≥+≥+p q
m_lineOffset
≥+≥+r ~
;
≥+≥+~ 
}
¥+¥+ 
else
µ+µ+ 
{
∂+∂+ %
m_internalCharacterInfo
∑+∑+ +
[
∑+∑++ ,
m_characterCount
∑+∑+, <
]
∑+∑+< =
.
∑+∑+= >
adjustedAscender
∑+∑+> N
=
∑+∑+O P
m_maxLineAscender
∑+∑+Q b
;
∑+∑+b c%
m_internalCharacterInfo
∏+∏+ +
[
∏+∏++ ,
m_characterCount
∏+∏+, <
]
∏+∏+< =
.
∏+∏+= >
adjustedDescender
∏+∏+> O
=
∏+∏+P Q 
m_maxLineDescender
∏+∏+R d
;
∏+∏+d e
m_ElementAscender
∫+∫+ %
=
∫+∫+& '%
m_internalCharacterInfo
∫+∫+( ?
[
∫+∫+? @
m_characterCount
∫+∫+@ P
]
∫+∫+P Q
.
∫+∫+Q R
ascender
∫+∫+R Z
=
∫+∫+[ \
m_maxLineAscender
∫+∫+] n
-
∫+∫+o p
m_lineOffset
∫+∫+q }
;
∫+∫+} ~ 
m_ElementDescender
ª+ª+ &
=
ª+ª+' (%
m_internalCharacterInfo
ª+ª+) @
[
ª+ª+@ A
m_characterCount
ª+ª+A Q
]
ª+ª+Q R
.
ª+ª+R S
	descender
ª+ª+S \
=
ª+ª+] ^ 
m_maxLineDescender
ª+ª+_ q
-
ª+ª+r s
m_lineOffsetª+ª+t Ä
;ª+ª+Ä Å
}
º+º+ 
if
ø+ø+ 
(
ø+ø+ 
m_lineNumber
ø+ø+  
==
ø+ø+! #
$num
ø+ø+$ %
||
ø+ø+& (
m_isNewPage
ø+ø+) 4
)
ø+ø+4 5
{
¿+¿+ 
if
¡+¡+ 
(
¡+¡+ $
isFirstCharacterOfLine
¡+¡+ .
||
¡+¡+/ 1
isWhiteSpace
¡+¡+2 >
==
¡+¡+? A
false
¡+¡+B G
)
¡+¡+G H
{
¬+¬+ 
m_maxTextAscender
√+√+ )
=
√+√+* +
m_maxLineAscender
√+√+, =
;
√+√+= >
m_maxCapHeight
ƒ+ƒ+ &
=
ƒ+ƒ+' (
Mathf
ƒ+ƒ+) .
.
ƒ+ƒ+. /
Max
ƒ+ƒ+/ 2
(
ƒ+ƒ+2 3
m_maxCapHeight
ƒ+ƒ+3 A
,
ƒ+ƒ+A B 
m_currentFontAsset
ƒ+ƒ+C U
.
ƒ+ƒ+U V

m_FaceInfo
ƒ+ƒ+V `
.
ƒ+ƒ+` a
capLine
ƒ+ƒ+a h
*
ƒ+ƒ+i j!
currentElementScale
ƒ+ƒ+k ~
/ƒ+ƒ+ Ä#
smallCapsMultiplierƒ+ƒ+Å î
)ƒ+ƒ+î ï
;ƒ+ƒ+ï ñ
}
≈+≈+ 
}
∆+∆+ 
if
…+…+ 
(
…+…+ 
m_lineOffset
…+…+  
==
…+…+! #
$num
…+…+$ %
)
…+…+% &
{
 + + 
if
À+À+ 
(
À+À+ 
!
À+À+ 
isWhiteSpace
À+À+ %
||
À+À+& (
m_characterCount
À+À+) 9
==
À+À+: <$
m_firstCharacterOfLine
À+À+= S
)
À+À+S T
m_PageAscender
Ã+Ã+ &
=
Ã+Ã+' (
m_PageAscender
Ã+Ã+) 7
>
Ã+Ã+8 9
elementAscender
Ã+Ã+: I
?
Ã+Ã+J K
m_PageAscender
Ã+Ã+L Z
:
Ã+Ã+[ \
elementAscender
Ã+Ã+] l
;
Ã+Ã+l m
}
Õ+Õ+ 
bool
–+–+  
isJustifiedOrFlush
–+–+ '
=
–+–+( )
(
–+–+* +!
m_lineJustification
–+–++ >
&
–+–+? @(
HorizontalAlignmentOptions
–+–+A [
.
–+–+[ \
Flush
–+–+\ a
)
–+–+a b
==
–+–+c e)
HorizontalAlignmentOptions–+–+f Ä
.–+–+Ä Å
Flush–+–+Å Ü
||–+–+á â
(–+–+ä ã#
m_lineJustification–+–+ã û
&–+–+ü †*
HorizontalAlignmentOptions–+–+° ª
.–+–+ª º
	Justified–+–+º ≈
)–+–+≈ ∆
==–+–+« …*
HorizontalAlignmentOptions–+–+  ‰
.–+–+‰ Â
	Justified–+–+Â Ó
;–+–+Ó Ô
if
‘+‘+ 
(
‘+‘+ 
charCode
‘+‘+ 
==
‘+‘+ 
$num
‘+‘+  !
||
‘+‘+" $
(
‘+‘+% &
isWhiteSpace
‘+‘+& 2
==
‘+‘+3 5
false
‘+‘+6 ;
&&
‘+‘+< >
charCode
‘+‘+? G
!=
‘+‘+H J
$num
‘+‘+K Q
&&
‘+‘+R T
charCode
‘+‘+U ]
!=
‘+‘+^ `
$num
‘+‘+a e
&&
‘+‘+f h
charCode
‘+‘+i q
!=
‘+‘+r t
$num
‘+‘+u y
)
‘+‘+y z
||
‘+‘+{ }
(
‘+‘+~ 
charCode‘+‘+ á
==‘+‘+à ä
$num‘+‘+ã è
&&‘+‘+ê í#
isSoftHyphenIgnored‘+‘+ì ¶
==‘+‘+ß ©
false‘+‘+™ Ø
)‘+‘+Ø ∞
||‘+‘+± ≥!
m_textElementType‘+‘+¥ ≈
==‘+‘+∆ »#
TMP_TextElementType‘+‘+… ‹
.‘+‘+‹ ›
Sprite‘+‘+› „
)‘+‘+„ ‰
{
’+’+ 
widthOfTextArea
‡+‡+ #
=
‡+‡+$ %
m_width
‡+‡+& -
!=
‡+‡+. 0
-
‡+‡+1 2
$num
‡+‡+2 3
?
‡+‡+4 5
Mathf
‡+‡+6 ;
.
‡+‡+; <
Min
‡+‡+< ?
(
‡+‡+? @
marginWidth
‡+‡+@ K
+
‡+‡+L M
$num
‡+‡+N U
-
‡+‡+V W
m_marginLeft
‡+‡+X d
-
‡+‡+e f
m_marginRight
‡+‡+g t
,
‡+‡+t u
m_width
‡+‡+v }
)
‡+‡+} ~
:‡+‡+ Ä
marginWidth‡+‡+Å å
+‡+‡+ç é
$num‡+‡+è ñ
-‡+‡+ó ò
m_marginLeft‡+‡+ô •
-‡+‡+¶ ß
m_marginRight‡+‡+® µ
;‡+‡+µ ∂
	textWidth
„+„+ 
=
„+„+ 
Mathf
„+„+  %
.
„+„+% &
Abs
„+„+& )
(
„+„+) *

m_xAdvance
„+„+* 4
)
„+„+4 5
+
„+„+6 7!
currentGlyphMetrics
„+„+8 K
.
„+„+K L
horizontalAdvance
„+„+L ]
*
„+„+^ _
(
„+„+` a
$num
„+„+a b
-
„+„+c d!
m_charWidthAdjDelta
„+„+e x
)
„+„+x y
*
„+„+z {
(
„+„+| }
charCode„+„+} Ö
==„+„+Ü à
$num„+„+â ç
?„+„+é è-
currentElementUnmodifiedScale„+„+ê ≠
:„+„+Æ Ø#
currentElementScale„+„+∞ √
)„+„+√ ƒ
;„+„+ƒ ≈
int
Â+Â+ "
testedCharacterCount
Â+Â+ ,
=
Â+Â+- .
m_characterCount
Â+Â+/ ?
;
Â+Â+? @
if
È+È+ 
(
È+È+ 
	textWidth
È+È+ !
>
È+È+" #
widthOfTextArea
È+È+$ 3
*
È+È+4 5
(
È+È+6 7 
isJustifiedOrFlush
È+È+7 I
?
È+È+J K
$num
È+È+L Q
:
È+È+R S
$num
È+È+T X
)
È+È+X Y
)
È+È+Y Z
{
Í+Í+ 
if
Ï+Ï+ 
(
Ï+Ï+ #
isWordWrappingEnabled
Ï+Ï+ 1
&&
Ï+Ï+2 4
m_characterCount
Ï+Ï+5 E
!=
Ï+Ï+F H$
m_firstCharacterOfLine
Ï+Ï+I _
)
Ï+Ï+_ `
{
Ì+Ì+ 
i
Ô+Ô+ 
=
Ô+Ô+ &
RestoreWordWrappingState
Ô+Ô+  8
(
Ô+Ô+8 9
ref
Ô+Ô+9 <#
internalWordWrapState
Ô+Ô+= R
)
Ô+Ô+R S
;
Ô+Ô+S T
if
Û+Û+ 
(
Û+Û+  %
m_internalCharacterInfo
Û+Û+  7
[
Û+Û+7 8
m_characterCount
Û+Û+8 H
-
Û+Û+I J
$num
Û+Û+K L
]
Û+Û+L M
.
Û+Û+M N
	character
Û+Û+N W
==
Û+Û+X Z
$num
Û+Û+[ _
&&
Û+Û+` b!
isSoftHyphenIgnored
Û+Û+c v
==
Û+Û+w y
false
Û+Û+z 
&&Û+Û+Ä Ç
m_overflowModeÛ+Û+É ë
==Û+Û+í î!
TextOverflowModesÛ+Û+ï ¶
.Û+Û+¶ ß
OverflowÛ+Û+ß Ø
)Û+Û+Ø ∞
{
Ù+Ù+ #
characterToSubstitute
ı+ı+  5
.
ı+ı+5 6
index
ı+ı+6 ;
=
ı+ı+< =
m_characterCount
ı+ı+> N
-
ı+ı+O P
$num
ı+ı+Q R
;
ı+ı+R S#
characterToSubstitute
ˆ+ˆ+  5
.
ˆ+ˆ+5 6
unicode
ˆ+ˆ+6 =
=
ˆ+ˆ+> ?
$num
ˆ+ˆ+@ D
;
ˆ+ˆ+D E
i
¯+¯+  !
-=
¯+¯+" $
$num
¯+¯+% &
;
¯+¯+& '
m_characterCount
˘+˘+  0
-=
˘+˘+1 3
$num
˘+˘+4 5
;
˘+˘+5 6
continue
˙+˙+  (
;
˙+˙+( )
}
˚+˚+ !
isSoftHyphenIgnored
˝+˝+ /
=
˝+˝+0 1
false
˝+˝+2 7
;
˝+˝+7 8
if
Ä,Ä, 
(
Ä,Ä,  %
m_internalCharacterInfo
Ä,Ä,  7
[
Ä,Ä,7 8
m_characterCount
Ä,Ä,8 H
]
Ä,Ä,H I
.
Ä,Ä,I J
	character
Ä,Ä,J S
==
Ä,Ä,T V
$num
Ä,Ä,W [
)
Ä,Ä,[ \
{
Å,Å, !
isSoftHyphenIgnored
Ç,Ç,  3
=
Ç,Ç,4 5
true
Ç,Ç,6 :
;
Ç,Ç,: ;
continue
É,É,  (
;
É,É,( )
}
Ñ,Ñ, 
if
â,â, 
(
â,â,  %
isTextAutoSizingEnabled
â,â,  7
&&
â,â,8 :
isFirstWordOfLine
â,â,; L
)
â,â,L M
{
ä,ä, 
if
ç,ç,  "
(
ç,ç,# $!
m_charWidthAdjDelta
ç,ç,$ 7
<
ç,ç,8 9
m_charWidthMaxAdj
ç,ç,: K
/
ç,ç,L M
$num
ç,ç,N Q
&&
ç,ç,R T&
m_AutoSizeIterationCount
ç,ç,U m
<
ç,ç,n o*
m_AutoSizeMaxIterationCountç,ç,p ã
)ç,ç,ã å
{
é,é,  !
float
è,è,$ )
adjustedTextWidth
è,è,* ;
=
è,è,< =
	textWidth
è,è,> G
;
è,è,G H
if
í,í,$ &
(
í,í,' (!
m_charWidthAdjDelta
í,í,( ;
>
í,í,< =
$num
í,í,> ?
)
í,í,? @
adjustedTextWidth
ì,ì,( 9
/=
ì,ì,: <
$num
ì,ì,= ?
-
ì,ì,@ A!
m_charWidthAdjDelta
ì,ì,B U
;
ì,ì,U V
float
ï,ï,$ )
adjustmentDelta
ï,ï,* 9
=
ï,ï,: ;
	textWidth
ï,ï,< E
-
ï,ï,F G
(
ï,ï,H I
widthOfTextArea
ï,ï,I X
-
ï,ï,Y Z
$num
ï,ï,[ b
)
ï,ï,b c
*
ï,ï,d e
(
ï,ï,f g 
isJustifiedOrFlush
ï,ï,g y
?
ï,ï,z {
$numï,ï,| Å
:ï,ï,Ç É
$numï,ï,Ñ à
)ï,ï,à â
;ï,ï,â ä!
m_charWidthAdjDelta
ñ,ñ,$ 7
+=
ñ,ñ,8 :
adjustmentDelta
ñ,ñ,; J
/
ñ,ñ,K L
adjustedTextWidth
ñ,ñ,M ^
;
ñ,ñ,^ _!
m_charWidthAdjDelta
ó,ó,$ 7
=
ó,ó,8 9
Mathf
ó,ó,: ?
.
ó,ó,? @
Min
ó,ó,@ C
(
ó,ó,C D!
m_charWidthAdjDelta
ó,ó,D W
,
ó,ó,W X
m_charWidthMaxAdj
ó,ó,Y j
/
ó,ó,k l
$num
ó,ó,m p
)
ó,ó,p q
;
ó,ó,q r
return
ö,ö,$ *
Vector2
ö,ö,+ 2
.
ö,ö,2 3
zero
ö,ö,3 7
;
ö,ö,7 8
}
õ,õ,  !
if
†,†,  "
(
†,†,# $
fontSize
†,†,$ ,
>
†,†,- .
m_fontSizeMin
†,†,/ <
&&
†,†,= ?&
m_AutoSizeIterationCount
†,†,@ X
<
†,†,Y Z)
m_AutoSizeMaxIterationCount
†,†,[ v
)
†,†,v w
{
°,°,  !
m_maxFontSize
¢,¢,$ 1
=
¢,¢,2 3
fontSize
¢,¢,4 <
;
¢,¢,< =
float
§,§,$ )
	sizeDelta
§,§,* 3
=
§,§,4 5
Mathf
§,§,6 ;
.
§,§,; <
Max
§,§,< ?
(
§,§,? @
(
§,§,@ A
fontSize
§,§,A I
-
§,§,J K
m_minFontSize
§,§,L Y
)
§,§,Y Z
/
§,§,[ \
$num
§,§,] ^
,
§,§,^ _
$num
§,§,` e
)
§,§,e f
;
§,§,f g
fontSize
•,•,$ ,
-=
•,•,- /
	sizeDelta
•,•,0 9
;
•,•,9 :
fontSize
¶,¶,$ ,
=
¶,¶,- .
Mathf
¶,¶,/ 4
.
¶,¶,4 5
Max
¶,¶,5 8
(
¶,¶,8 9
(
¶,¶,9 :
int
¶,¶,: =
)
¶,¶,= >
(
¶,¶,> ?
fontSize
¶,¶,? G
*
¶,¶,H I
$num
¶,¶,J L
+
¶,¶,M N
$num
¶,¶,O S
)
¶,¶,S T
/
¶,¶,U V
$num
¶,¶,W Z
,
¶,¶,Z [
m_fontSizeMin
¶,¶,\ i
)
¶,¶,i j
;
¶,¶,j k
return
©,©,$ *
Vector2
©,©,+ 2
.
©,©,2 3
zero
©,©,3 7
;
©,©,7 8
}
™,™,  !
}
¨,¨, 
float
∞,∞, !%
baselineAdjustmentDelta
∞,∞," 9
=
∞,∞,: ;
m_maxLineAscender
∞,∞,< M
-
∞,∞,N O#
m_startOfLineAscender
∞,∞,P e
;
∞,∞,e f
if
±,±, 
(
±,±,  
m_lineOffset
±,±,  ,
>
±,±,- .
$num
±,±,/ 0
&&
±,±,1 3
Math
±,±,4 8
.
±,±,8 9
Abs
±,±,9 <
(
±,±,< =%
baselineAdjustmentDelta
±,±,= T
)
±,±,T U
>
±,±,V W
$num
±,±,X ]
&&
±,±,^ `#
m_IsDrivenLineSpacing
±,±,a v
==
±,±,w y
false
±,±,z 
&&±,±,Ä Ç
!±,±,É Ñ
m_isNewPage±,±,Ñ è
)±,±,è ê
{
≤,≤,  
m_ElementDescender
¥,¥,  2
-=
¥,¥,3 5%
baselineAdjustmentDelta
¥,¥,6 M
;
¥,¥,M N
m_lineOffset
µ,µ,  ,
+=
µ,µ,- /%
baselineAdjustmentDelta
µ,µ,0 G
;
µ,µ,G H
}
∂,∂, 
float
π,π, !
lineAscender
π,π," .
=
π,π,/ 0
m_maxLineAscender
π,π,1 B
-
π,π,C D
m_lineOffset
π,π,E Q
;
π,π,Q R
float
∫,∫, !
lineDescender
∫,∫," /
=
∫,∫,0 1 
m_maxLineDescender
∫,∫,2 D
-
∫,∫,E F
m_lineOffset
∫,∫,G S
;
∫,∫,S T 
m_ElementDescender
Ω,Ω, .
=
Ω,Ω,/ 0 
m_ElementDescender
Ω,Ω,1 C
<
Ω,Ω,D E
lineDescender
Ω,Ω,F S
?
Ω,Ω,T U 
m_ElementDescender
Ω,Ω,V h
:
Ω,Ω,i j
lineDescender
Ω,Ω,k x
;
Ω,Ω,x y
if
æ,æ, 
(
æ,æ,  
!
æ,æ,  !&
isMaxVisibleDescenderSet
æ,æ,! 9
)
æ,æ,9 :!
maxVisibleDescender
ø,ø,  3
=
ø,ø,4 5 
m_ElementDescender
ø,ø,6 H
;
ø,ø,H I
if
¡,¡, 
(
¡,¡,  &
m_useMaxVisibleDescender
¡,¡,  8
&&
¡,¡,9 ;
(
¡,¡,< =
m_characterCount
¡,¡,= M
>=
¡,¡,N P$
m_maxVisibleCharacters
¡,¡,Q g
||
¡,¡,h j
m_lineNumber
¡,¡,k w
>=
¡,¡,x z 
m_maxVisibleLines¡,¡,{ å
)¡,¡,å ç
)¡,¡,ç é&
isMaxVisibleDescenderSet
¬,¬,  8
=
¬,¬,9 :
true
¬,¬,; ?
;
¬,¬,? @$
m_firstCharacterOfLine
≈,≈, 2
=
≈,≈,3 4
m_characterCount
≈,≈,5 E
;
≈,≈,E F)
m_lineVisibleCharacterCount
∆,∆, 7
=
∆,∆,8 9
$num
∆,∆,: ;
;
∆,∆,; <
renderedWidth
…,…, )
+=
…,…,* ,

m_xAdvance
…,…,- 7
;
…,…,7 8
if
À,À, 
(
À,À,  #
isWordWrappingEnabled
À,À,  5
)
À,À,5 6
renderedHeight
Ã,Ã,  .
=
Ã,Ã,/ 0
m_maxTextAscender
Ã,Ã,1 B
-
Ã,Ã,C D 
m_ElementDescender
Ã,Ã,E W
;
Ã,Ã,W X
else
Õ,Õ,  
renderedHeight
Œ,Œ,  .
=
Œ,Œ,/ 0
Mathf
Œ,Œ,1 6
.
Œ,Œ,6 7
Max
Œ,Œ,7 :
(
Œ,Œ,: ;
renderedHeight
Œ,Œ,; I
,
Œ,Œ,I J
lineAscender
Œ,Œ,K W
-
Œ,Œ,X Y
lineDescender
Œ,Œ,Z g
)
Œ,Œ,g h
;
Œ,Œ,h i#
SaveWordWrappingState
—,—, 1
(
—,—,1 2
ref
—,—,2 5
internalLineState
—,—,6 G
,
—,—,G H
i
—,—,I J
,
—,—,J K
m_characterCount
—,—,L \
-
—,—,] ^
$num
—,—,_ `
)
—,—,` a
;
—,—,a b
m_lineNumber
”,”, (
+=
”,”,) +
$num
”,”,, -
;
”,”,- .
float
’,’, !
ascender
’,’," *
=
’,’,+ ,%
m_internalCharacterInfo
’,’,- D
[
’,’,D E
m_characterCount
’,’,E U
]
’,’,U V
.
’,’,V W
adjustedAscender
’,’,W g
;
’,’,g h
if
ÿ,ÿ, 
(
ÿ,ÿ,  
m_lineHeight
ÿ,ÿ,  ,
==
ÿ,ÿ,- /
TMP_Math
ÿ,ÿ,0 8
.
ÿ,ÿ,8 9
FLOAT_UNSET
ÿ,ÿ,9 D
)
ÿ,ÿ,D E
{
Ÿ,Ÿ, 
m_lineOffset
⁄,⁄,  ,
+=
⁄,⁄,- /
$num
⁄,⁄,0 1
-
⁄,⁄,2 3 
m_maxLineDescender
⁄,⁄,4 F
+
⁄,⁄,G H
ascender
⁄,⁄,I Q
+
⁄,⁄,R S
(
⁄,⁄,T U
lineGap
⁄,⁄,U \
+
⁄,⁄,] ^ 
m_lineSpacingDelta
⁄,⁄,_ q
)
⁄,⁄,q r
*
⁄,⁄,s t
	baseScale
⁄,⁄,u ~
+⁄,⁄, Ä
m_lineSpacing⁄,⁄,Å é
*⁄,⁄,è ê
currentEmScale⁄,⁄,ë ü
;⁄,⁄,ü †#
m_IsDrivenLineSpacing
€,€,  5
=
€,€,6 7
false
€,€,8 =
;
€,€,= >
}
‹,‹, 
else
›,›,  
{
ﬁ,ﬁ, 
m_lineOffset
ﬂ,ﬂ,  ,
+=
ﬂ,ﬂ,- /
m_lineHeight
ﬂ,ﬂ,0 <
+
ﬂ,ﬂ,= >
m_lineSpacing
ﬂ,ﬂ,? L
*
ﬂ,ﬂ,M N
currentEmScale
ﬂ,ﬂ,O ]
;
ﬂ,ﬂ,] ^#
m_IsDrivenLineSpacing
‡,‡,  5
=
‡,‡,6 7
true
‡,‡,8 <
;
‡,‡,< =
}
·,·, 
m_maxLineAscender
„,„, -
=
„,„,. /"
k_LargeNegativeFloat
„,„,0 D
;
„,„,D E 
m_maxLineDescender
‰,‰, .
=
‰,‰,/ 0"
k_LargePositiveFloat
‰,‰,1 E
;
‰,‰,E F#
m_startOfLineAscender
Â,Â, 1
=
Â,Â,2 3
ascender
Â,Â,4 <
;
Â,Â,< =

m_xAdvance
Á,Á, &
=
Á,Á,' (
$num
Á,Á,) *
+
Á,Á,+ ,

tag_Indent
Á,Á,- 7
;
Á,Á,7 8
isFirstWordOfLine
È,È, -
=
È,È,. /
true
È,È,0 4
;
È,È,4 5
continue
Í,Í, $
;
Í,Í,$ %
}
Î,Î, 
}
Ï,Ï, 
lineMarginLeft
Ô,Ô, "
=
Ô,Ô,# $
m_marginLeft
Ô,Ô,% 1
;
Ô,Ô,1 2
lineMarginRight
,, #
=
,,$ %
m_marginRight
,,& 3
;
,,3 4
}
Ú,Ú, 
if
à-à- 
(
à-à- 
charCode
à-à- 
==
à-à- 
$num
à-à-  !
)
à-à-! "
{
â-â- 
float
ä-ä- 
tabSize
ä-ä- !
=
ä-ä-" # 
m_currentFontAsset
ä-ä-$ 6
.
ä-ä-6 7
faceInfo
ä-ä-7 ?
.
ä-ä-? @
tabWidth
ä-ä-@ H
*
ä-ä-I J 
m_currentFontAsset
ä-ä-K ]
.
ä-ä-] ^
tabSize
ä-ä-^ e
*
ä-ä-f g!
currentElementScale
ä-ä-h {
;
ä-ä-{ |
float
ã-ã- 
tabs
ã-ã- 
=
ã-ã-  
Mathf
ã-ã-! &
.
ã-ã-& '
Ceil
ã-ã-' +
(
ã-ã-+ ,

m_xAdvance
ã-ã-, 6
/
ã-ã-7 8
tabSize
ã-ã-9 @
)
ã-ã-@ A
*
ã-ã-B C
tabSize
ã-ã-D K
;
ã-ã-K L

m_xAdvance
å-å- 
=
å-å-  
tabs
å-å-! %
>
å-å-& '

m_xAdvance
å-å-( 2
?
å-å-3 4
tabs
å-å-5 9
:
å-å-: ;

m_xAdvance
å-å-< F
+
å-å-G H
tabSize
å-å-I P
;
å-å-P Q
}
ç-ç- 
else
é-é- 
if
é-é- 
(
é-é- 
m_monoSpacing
é-é- &
!=
é-é-' )
$num
é-é-* +
)
é-é-+ ,
{
è-è- 

m_xAdvance
ê-ê- 
+=
ê-ê- !
(
ê-ê-" #
m_monoSpacing
ê-ê-# 0
-
ê-ê-1 2
monoAdvance
ê-ê-3 >
+
ê-ê-? @
(
ê-ê-A B
(
ê-ê-B C 
m_currentFontAsset
ê-ê-C U
.
ê-ê-U V!
normalSpacingOffset
ê-ê-V i
+
ê-ê-j k)
characterSpacingAdjustmentê-ê-l Ü
)ê-ê-Ü á
*ê-ê-à â
currentEmScaleê-ê-ä ò
)ê-ê-ò ô
+ê-ê-ö õ

m_cSpacingê-ê-ú ¶
)ê-ê-¶ ß
*ê-ê-® ©
(ê-ê-™ ´
$numê-ê-´ ¨
-ê-ê-≠ Æ#
m_charWidthAdjDeltaê-ê-Ø ¬
)ê-ê-¬ √
;ê-ê-√ ƒ
if
í-í- 
(
í-í- 
isWhiteSpace
í-í- $
||
í-í-% '
charCode
í-í-( 0
==
í-í-1 3
$num
í-í-4 :
)
í-í-: ;

m_xAdvance
ì-ì- "
+=
ì-ì-# %
m_wordSpacing
ì-ì-& 3
*
ì-ì-4 5
currentEmScale
ì-ì-6 D
;
ì-ì-D E
}
î-î- 
else
ï-ï- 
{
ñ-ñ- 

m_xAdvance
ó-ó- 
+=
ó-ó- !
(
ó-ó-" #
(
ó-ó-# $!
currentGlyphMetrics
ó-ó-$ 7
.
ó-ó-7 8
horizontalAdvance
ó-ó-8 I
+
ó-ó-J K
glyphAdjustments
ó-ó-L \
.
ó-ó-\ ]
xAdvance
ó-ó-] e
+
ó-ó-f g#
boldSpacingAdjustment
ó-ó-h }
)
ó-ó-} ~
*ó-ó- Ä#
currentElementScaleó-ó-Å î
+ó-ó-ï ñ
(ó-ó-ó ò"
m_currentFontAssetó-ó-ò ™
.ó-ó-™ ´#
normalSpacingOffsetó-ó-´ æ
+ó-ó-ø ¿*
characterSpacingAdjustmentó-ó-¡ €
)ó-ó-€ ‹
*ó-ó-› ﬁ
currentEmScaleó-ó-ﬂ Ì
+ó-ó-Ó Ô

m_cSpacingó-ó- ˙
)ó-ó-˙ ˚
*ó-ó-¸ ˝
(ó-ó-˛ ˇ
$numó-ó-ˇ Ä
-ó-ó-Å Ç#
m_charWidthAdjDeltaó-ó-É ñ
)ó-ó-ñ ó
;ó-ó-ó ò
if
ô-ô- 
(
ô-ô- 
isWhiteSpace
ô-ô- $
||
ô-ô-% '
charCode
ô-ô-( 0
==
ô-ô-1 3
$num
ô-ô-4 :
)
ô-ô-: ;

m_xAdvance
ö-ö- "
+=
ö-ö-# %
m_wordSpacing
ö-ö-& 3
*
ö-ö-4 5
currentEmScale
ö-ö-6 D
;
ö-ö-D E
}
õ-õ- 
if
°-°- 
(
°-°- 
charCode
°-°- 
==
°-°- 
$num
°-°-  "
)
°-°-" #
{
¢-¢- 
maxXAdvance
£-£- 
=
£-£-  !
Mathf
£-£-" '
.
£-£-' (
Max
£-£-( +
(
£-£-+ ,
maxXAdvance
£-£-, 7
,
£-£-7 8
renderedWidth
£-£-9 F
+
£-£-G H

m_xAdvance
£-£-I S
)
£-£-S T
;
£-£-T U
renderedWidth
§-§- !
=
§-§-" #
$num
§-§-$ %
;
§-§-% &

m_xAdvance
•-•- 
=
•-•-  
$num
•-•-! "
+
•-•-# $

tag_Indent
•-•-% /
;
•-•-/ 0
}
¶-¶- 
if
¨-¨- 
(
¨-¨- 
charCode
¨-¨- 
==
¨-¨- 
$num
¨-¨-  "
||
¨-¨-# %
charCode
¨-¨-& .
==
¨-¨-/ 1
$num
¨-¨-2 4
||
¨-¨-5 7
charCode
¨-¨-8 @
==
¨-¨-A C
$num
¨-¨-D H
||
¨-¨-I K
charCode
¨-¨-L T
==
¨-¨-U W
$num
¨-¨-X ^
||
¨-¨-_ a
charCode
¨-¨-b j
==
¨-¨-k m
$num
¨-¨-n t
||
¨-¨-u w
m_characterCount¨-¨-x à
==¨-¨-â ã#
totalCharacterCount¨-¨-å ü
-¨-¨-† °
$num¨-¨-¢ £
)¨-¨-£ §
{
≠-≠- 
float
Ø-Ø- %
baselineAdjustmentDelta
Ø-Ø- 1
=
Ø-Ø-2 3
m_maxLineAscender
Ø-Ø-4 E
-
Ø-Ø-F G#
m_startOfLineAscender
Ø-Ø-H ]
;
Ø-Ø-] ^
if
∞-∞- 
(
∞-∞- 
m_lineOffset
∞-∞- $
>
∞-∞-% &
$num
∞-∞-' (
&&
∞-∞-) +
Math
∞-∞-, 0
.
∞-∞-0 1
Abs
∞-∞-1 4
(
∞-∞-4 5%
baselineAdjustmentDelta
∞-∞-5 L
)
∞-∞-L M
>
∞-∞-N O
$num
∞-∞-P U
&&
∞-∞-V X#
m_IsDrivenLineSpacing
∞-∞-Y n
==
∞-∞-o q
false
∞-∞-r w
&&
∞-∞-x z
!
∞-∞-{ |
m_isNewPage∞-∞-| á
)∞-∞-á à
{
±-±-  
m_ElementDescender
≤-≤- *
-=
≤-≤-+ -%
baselineAdjustmentDelta
≤-≤-. E
;
≤-≤-E F
m_lineOffset
≥-≥- $
+=
≥-≥-% '%
baselineAdjustmentDelta
≥-≥-( ?
;
≥-≥-? @
}
¥-¥- 
m_isNewPage
µ-µ- 
=
µ-µ-  !
false
µ-µ-" '
;
µ-µ-' (
float
π-π- 
lineDescender
π-π- '
=
π-π-( ) 
m_maxLineDescender
π-π-* <
-
π-π-= >
m_lineOffset
π-π-? K
;
π-π-K L 
m_ElementDescender
º-º- &
=
º-º-' ( 
m_ElementDescender
º-º-) ;
<
º-º-< =
lineDescender
º-º-> K
?
º-º-L M 
m_ElementDescender
º-º-N `
:
º-º-a b
lineDescender
º-º-c p
;
º-º-p q
if
ø-ø- 
(
ø-ø- 
m_characterCount
ø-ø- (
==
ø-ø-) +!
totalCharacterCount
ø-ø-, ?
-
ø-ø-@ A
$num
ø-ø-B C
)
ø-ø-C D
renderedWidth
¿-¿- %
=
¿-¿-& '
Mathf
¿-¿-( -
.
¿-¿-- .
Max
¿-¿-. 1
(
¿-¿-1 2
maxXAdvance
¿-¿-2 =
,
¿-¿-= >
renderedWidth
¿-¿-? L
+
¿-¿-M N
	textWidth
¿-¿-O X
+
¿-¿-Y Z
lineMarginLeft
¿-¿-[ i
+
¿-¿-j k
lineMarginRight
¿-¿-l {
)
¿-¿-{ |
;
¿-¿-| }
else
¡-¡- 
{
¬-¬- 
maxXAdvance
√-√- #
=
√-√-$ %
Mathf
√-√-& +
.
√-√-+ ,
Max
√-√-, /
(
√-√-/ 0
maxXAdvance
√-√-0 ;
,
√-√-; <
renderedWidth
√-√-= J
+
√-√-K L
	textWidth
√-√-M V
+
√-√-W X
lineMarginLeft
√-√-Y g
+
√-√-h i
lineMarginRight
√-√-j y
)
√-√-y z
;
√-√-z {
renderedWidth
ƒ-ƒ- %
=
ƒ-ƒ-& '
$num
ƒ-ƒ-( )
;
ƒ-ƒ-) *
}
≈-≈- 
renderedHeight
«-«- "
=
«-«-# $
m_maxTextAscender
«-«-% 6
-
«-«-7 8 
m_ElementDescender
«-«-9 K
;
«-«-K L
if
 - - 
(
 - - 
charCode
 - -  
==
 - -! #
$num
 - -$ &
||
 - -' )
charCode
 - -* 2
==
 - -3 5
$num
 - -6 8
||
 - -9 ;
charCode
 - -< D
==
 - -E G
$num
 - -H L
||
 - -M O
charCode
 - -P X
==
 - -Y [
$num
 - -\ b
||
 - -c e
charCode
 - -f n
==
 - -o q
$num
 - -r x
)
 - -x y
{
À-À- #
SaveWordWrappingState
Õ-Õ- -
(
Õ-Õ-- .
ref
Õ-Õ-. 1
internalLineState
Õ-Õ-2 C
,
Õ-Õ-C D
i
Õ-Õ-E F
,
Õ-Õ-F G
m_characterCount
Õ-Õ-H X
)
Õ-Õ-X Y
;
Õ-Õ-Y Z#
SaveWordWrappingState
œ-œ- -
(
œ-œ-- .
ref
œ-œ-. 1#
internalWordWrapState
œ-œ-2 G
,
œ-œ-G H
i
œ-œ-I J
,
œ-œ-J K
m_characterCount
œ-œ-L \
)
œ-œ-\ ]
;
œ-œ-] ^
m_lineNumber
—-—- $
+=
—-—-% '
$num
—-—-( )
;
—-—-) *$
m_firstCharacterOfLine
“-“- .
=
“-“-/ 0
m_characterCount
“-“-1 A
+
“-“-B C
$num
“-“-D E
;
“-“-E F
float
‘-‘- 
ascender
‘-‘- &
=
‘-‘-' (%
m_internalCharacterInfo
‘-‘-) @
[
‘-‘-@ A
m_characterCount
‘-‘-A Q
]
‘-‘-Q R
.
‘-‘-R S
adjustedAscender
‘-‘-S c
;
‘-‘-c d
if
◊-◊- 
(
◊-◊- 
m_lineHeight
◊-◊- (
==
◊-◊-) +
TMP_Math
◊-◊-, 4
.
◊-◊-4 5
FLOAT_UNSET
◊-◊-5 @
)
◊-◊-@ A
{
ÿ-ÿ- 
float
Ÿ-Ÿ- !
lineOffsetDelta
Ÿ-Ÿ-" 1
=
Ÿ-Ÿ-2 3
$num
Ÿ-Ÿ-4 5
-
Ÿ-Ÿ-6 7 
m_maxLineDescender
Ÿ-Ÿ-8 J
+
Ÿ-Ÿ-K L
ascender
Ÿ-Ÿ-M U
+
Ÿ-Ÿ-V W
(
Ÿ-Ÿ-X Y
lineGap
Ÿ-Ÿ-Y `
+
Ÿ-Ÿ-a b 
m_lineSpacingDelta
Ÿ-Ÿ-c u
)
Ÿ-Ÿ-u v
*
Ÿ-Ÿ-w x
	baseScaleŸ-Ÿ-y Ç
+Ÿ-Ÿ-É Ñ
(Ÿ-Ÿ-Ö Ü
m_lineSpacingŸ-Ÿ-Ü ì
+Ÿ-Ÿ-î ï
(Ÿ-Ÿ-ñ ó
charCodeŸ-Ÿ-ó ü
==Ÿ-Ÿ-† ¢
$numŸ-Ÿ-£ •
||Ÿ-Ÿ-¶ ®
charCodeŸ-Ÿ-© ±
==Ÿ-Ÿ-≤ ¥
$numŸ-Ÿ-µ ª
?Ÿ-Ÿ-º Ω"
m_paragraphSpacingŸ-Ÿ-æ –
:Ÿ-Ÿ-— “
$numŸ-Ÿ-” ‘
)Ÿ-Ÿ-‘ ’
)Ÿ-Ÿ-’ ÷
*Ÿ-Ÿ-◊ ÿ
currentEmScaleŸ-Ÿ-Ÿ Á
;Ÿ-Ÿ-Á Ë
m_lineOffset
⁄-⁄- (
+=
⁄-⁄-) +
lineOffsetDelta
⁄-⁄-, ;
;
⁄-⁄-; <#
m_IsDrivenLineSpacing
€-€- 1
=
€-€-2 3
false
€-€-4 9
;
€-€-9 :
}
‹-‹- 
else
›-›- 
{
ﬁ-ﬁ- 
m_lineOffset
ﬂ-ﬂ- (
+=
ﬂ-ﬂ-) +
m_lineHeight
ﬂ-ﬂ-, 8
+
ﬂ-ﬂ-9 :
(
ﬂ-ﬂ-; <
m_lineSpacing
ﬂ-ﬂ-< I
+
ﬂ-ﬂ-J K
(
ﬂ-ﬂ-L M
charCode
ﬂ-ﬂ-M U
==
ﬂ-ﬂ-V X
$num
ﬂ-ﬂ-Y [
||
ﬂ-ﬂ-\ ^
charCode
ﬂ-ﬂ-_ g
==
ﬂ-ﬂ-h j
$num
ﬂ-ﬂ-k q
?
ﬂ-ﬂ-r s!
m_paragraphSpacingﬂ-ﬂ-t Ü
:ﬂ-ﬂ-á à
$numﬂ-ﬂ-â ä
)ﬂ-ﬂ-ä ã
)ﬂ-ﬂ-ã å
*ﬂ-ﬂ-ç é
currentEmScaleﬂ-ﬂ-è ù
;ﬂ-ﬂ-ù û#
m_IsDrivenLineSpacing
‡-‡- 1
=
‡-‡-2 3
true
‡-‡-4 8
;
‡-‡-8 9
}
·-·- 
m_maxLineAscender
„-„- )
=
„-„-* +"
k_LargeNegativeFloat
„-„-, @
;
„-„-@ A 
m_maxLineDescender
‰-‰- *
=
‰-‰-+ ,"
k_LargePositiveFloat
‰-‰-- A
;
‰-‰-A B#
m_startOfLineAscender
Â-Â- -
=
Â-Â-. /
ascender
Â-Â-0 8
;
Â-Â-8 9

m_xAdvance
Á-Á- "
=
Á-Á-# $
$num
Á-Á-% &
+
Á-Á-' (
tag_LineIndent
Á-Á-) 7
+
Á-Á-8 9

tag_Indent
Á-Á-: D
;
Á-Á-D E
m_characterCount
È-È- (
+=
È-È-) +
$num
È-È-, -
;
È-È-- .
continue
Í-Í-  
;
Í-Í-  !
}
Î-Î- 
if
Ó-Ó- 
(
Ó-Ó- 
charCode
Ó-Ó-  
==
Ó-Ó-! #
$num
Ó-Ó-$ (
)
Ó-Ó-( )
i
Ô-Ô- 
=
Ô-Ô- %
m_InternalParsingBuffer
Ô-Ô- 3
.
Ô-Ô-3 4
Length
Ô-Ô-4 :
;
Ô-Ô-: ;
}
-- 
if
ˆ-ˆ- 
(
ˆ-ˆ- #
isWordWrappingEnabled
ˆ-ˆ- )
||
ˆ-ˆ-* ,
m_overflowMode
ˆ-ˆ-- ;
==
ˆ-ˆ-< >
TextOverflowModes
ˆ-ˆ-? P
.
ˆ-ˆ-P Q
Truncate
ˆ-ˆ-Q Y
||
ˆ-ˆ-Z \
m_overflowMode
ˆ-ˆ-] k
==
ˆ-ˆ-l n 
TextOverflowModesˆ-ˆ-o Ä
.ˆ-ˆ-Ä Å
Ellipsisˆ-ˆ-Å â
)ˆ-ˆ-â ä
{
˜-˜- 
if
¯-¯- 
(
¯-¯- 
(
¯-¯- 
isWhiteSpace
¯-¯- %
||
¯-¯-& (
charCode
¯-¯-) 1
==
¯-¯-2 4
$num
¯-¯-5 ;
||
¯-¯-< >
charCode
¯-¯-? G
==
¯-¯-H J
$num
¯-¯-K O
||
¯-¯-P R
charCode
¯-¯-S [
==
¯-¯-\ ^
$num
¯-¯-_ c
)
¯-¯-c d
&&
¯-¯-e g
!
¯-¯-h i"
m_isNonBreakingSpace
¯-¯-i }
&&¯-¯-~ Ä
charCode¯-¯-Å â
!=¯-¯-ä å
$num¯-¯-ç ë
&&¯-¯-í î
charCode¯-¯-ï ù
!=¯-¯-û †
$num¯-¯-° ß
&&¯-¯-® ™
charCode¯-¯-´ ≥
!=¯-¯-¥ ∂
$num¯-¯-∑ Ω
&&¯-¯-æ ¿
charCode¯-¯-¡ …
!=¯-¯-  Ã
$num¯-¯-Õ ”
&&¯-¯-‘ ÷
charCode¯-¯-◊ ﬂ
!=¯-¯-‡ ‚
$num¯-¯-„ È
)¯-¯-È Í
{
˘-˘- #
SaveWordWrappingState
¸-¸- -
(
¸-¸-- .
ref
¸-¸-. 1#
internalWordWrapState
¸-¸-2 G
,
¸-¸-G H
i
¸-¸-I J
,
¸-¸-J K
m_characterCount
¸-¸-L \
)
¸-¸-\ ]
;
¸-¸-] ^
isFirstWordOfLine
˝-˝- )
=
˝-˝-* +
false
˝-˝-, 1
;
˝-˝-1 2 
isLastCharacterCJK
˛-˛- *
=
˛-˛-+ ,
false
˛-˛-- 2
;
˛-˛-2 3#
internalSoftLineBreak
Å.Å. -
.
Å.Å.- . 
previous_WordBreak
Å.Å.. @
=
Å.Å.A B
-
Å.Å.C D
$num
Å.Å.D E
;
Å.Å.E F
}
Ç.Ç. 
else
Ñ.Ñ. 
if
Ñ.Ñ. 
(
Ñ.Ñ. "
m_isNonBreakingSpace
Ñ.Ñ. 1
==
Ñ.Ñ.2 4
false
Ñ.Ñ.5 :
&&
Ñ.Ñ.; =
(
Ö.Ö. 
(
Ö.Ö. 
charCode
Ö.Ö. '
>
Ö.Ö.( )
$num
Ö.Ö.* 0
&&
Ö.Ö.1 3
charCode
Ö.Ö.4 <
<
Ö.Ö.= >
$num
Ö.Ö.? E
||
Ö.Ö.F H
charCode
Ü.Ü. '
>
Ü.Ü.( )
$num
Ü.Ü.* 0
&&
Ü.Ü.1 3
charCode
Ü.Ü.4 <
<
Ü.Ü.= >
$num
Ü.Ü.? E
||
Ü.Ü.F H
charCode
á.á. '
>
á.á.( )
$num
á.á.* 0
&&
á.á.1 3
charCode
á.á.4 <
<
á.á.= >
$num
á.á.? E
)
á.á.E F
&&
á.á.F H
TMP_Settings
à.à. *
.
à.à.* +.
 useModernHangulLineBreakingRules
à.à.+ K
==
à.à.L N
false
à.à.O T
||
à.à.U W
(
ä.ä. 
charCode
ä.ä. '
>
ä.ä.( )
$num
ä.ä.* 0
&&
ä.ä.1 3
charCode
ä.ä.4 <
<
ä.ä.= >
$num
ä.ä.? E
||
ä.ä.F H
charCode
ã.ã. '
>
ã.ã.( )
$num
ã.ã.* 0
&&
ã.ã.1 3
charCode
ã.ã.4 <
<
ã.ã.= >
$num
ã.ã.? E
||
ã.ã.F H
charCode
å.å. '
>
å.å.( )
$num
å.å.* 0
&&
å.å.1 3
charCode
å.å.4 <
<
å.å.= >
$num
å.å.? E
||
å.å.F H
charCode
ç.ç. '
>
ç.ç.( )
$num
ç.ç.* 0
&&
ç.ç.1 3
charCode
ç.ç.4 <
<
ç.ç.= >
$num
ç.ç.? E
)
ç.ç.E F
)
ç.ç.F G
)
ç.ç.G H
{
é.é. 
bool
è.è.  
isLeadingCharacter
è.è. /
=
è.è.0 1
TMP_Settings
è.è.2 >
.
è.è.> ?
linebreakingRules
è.è.? P
.
è.è.P Q
leadingCharacters
è.è.Q b
.
è.è.b c
ContainsKey
è.è.c n
(
è.è.n o
charCode
è.è.o w
)
è.è.w x
;
è.è.x y
bool
ê.ê. "
isFollowingCharacter
ê.ê. 1
=
ê.ê.2 3
m_characterCount
ê.ê.4 D
<
ê.ê.E F!
totalCharacterCount
ê.ê.G Z
-
ê.ê.[ \
$num
ê.ê.] ^
&&
ê.ê._ a
TMP_Settings
ê.ê.b n
.
ê.ê.n o 
linebreakingRulesê.ê.o Ä
.ê.ê.Ä Å#
followingCharactersê.ê.Å î
.ê.ê.î ï
ContainsKeyê.ê.ï †
(ê.ê.† °'
m_internalCharacterInfoê.ê.° ∏
[ê.ê.∏ π 
m_characterCountê.ê.π …
+ê.ê.  À
$numê.ê.Ã Õ
]ê.ê.Õ Œ
.ê.ê.Œ œ
	characterê.ê.œ ÿ
)ê.ê.ÿ Ÿ
;ê.ê.Ÿ ⁄
if
í.í. 
(
í.í. 
isFirstWordOfLine
í.í. -
||
í.í.. 0 
isLeadingCharacter
í.í.1 C
==
í.í.D F
false
í.í.G L
)
í.í.L M
{
ì.ì. 
if
î.î. 
(
î.î.  "
isFollowingCharacter
î.î.  4
==
î.î.5 7
false
î.î.8 =
)
î.î.= >
{
ï.ï. #
SaveWordWrappingState
ñ.ñ.  5
(
ñ.ñ.5 6
ref
ñ.ñ.6 9#
internalWordWrapState
ñ.ñ.: O
,
ñ.ñ.O P
i
ñ.ñ.Q R
,
ñ.ñ.R S
m_characterCount
ñ.ñ.T d
)
ñ.ñ.d e
;
ñ.ñ.e f
isFirstWordOfLine
ó.ó.  1
=
ó.ó.2 3
false
ó.ó.4 9
;
ó.ó.9 :
}
ò.ò. 
if
ö.ö. 
(
ö.ö.  
isFirstWordOfLine
ö.ö.  1
)
ö.ö.1 2
{
õ.õ. 
if
ù.ù.  "
(
ù.ù.# $
isWhiteSpace
ù.ù.$ 0
)
ù.ù.0 1#
SaveWordWrappingState
û.û.$ 9
(
û.û.9 :
ref
û.û.: =#
internalSoftLineBreak
û.û.> S
,
û.û.S T
i
û.û.U V
,
û.û.V W
m_characterCount
û.û.X h
)
û.û.h i
;
û.û.i j#
SaveWordWrappingState
†.†.  5
(
†.†.5 6
ref
†.†.6 9#
internalWordWrapState
†.†.: O
,
†.†.O P
i
†.†.Q R
,
†.†.R S
m_characterCount
†.†.T d
)
†.†.d e
;
†.†.e f
}
°.°. 
}
¢.¢.  
isLastCharacterCJK
§.§. *
=
§.§.+ ,
true
§.§.- 1
;
§.§.1 2
}
•.•. 
else
¶.¶. 
if
¶.¶. 
(
¶.¶.  
isLastCharacterCJK
¶.¶. /
)
¶.¶./ 0
{
ß.ß. 
bool
®.®.  
isLeadingCharacter
®.®. /
=
®.®.0 1
TMP_Settings
®.®.2 >
.
®.®.> ?
linebreakingRules
®.®.? P
.
®.®.P Q
leadingCharacters
®.®.Q b
.
®.®.b c
ContainsKey
®.®.c n
(
®.®.n o
charCode
®.®.o w
)
®.®.w x
;
®.®.x y
if
™.™. 
(
™.™.  
isLeadingCharacter
™.™. .
==
™.™./ 1
false
™.™.2 7
)
™.™.7 8#
SaveWordWrappingState
´.´. 1
(
´.´.1 2
ref
´.´.2 5#
internalWordWrapState
´.´.6 K
,
´.´.K L
i
´.´.M N
,
´.´.N O
m_characterCount
´.´.P `
)
´.´.` a
;
´.´.a b 
isLastCharacterCJK
≠.≠. *
=
≠.≠.+ ,
false
≠.≠.- 2
;
≠.≠.2 3
}
Æ.Æ. 
else
Ø.Ø. 
if
Ø.Ø. 
(
Ø.Ø. 
isFirstWordOfLine
Ø.Ø. .
)
Ø.Ø.. /
{
∞.∞. 
if
≤.≤. 
(
≤.≤. 
isWhiteSpace
≤.≤. (
||
≤.≤.) +
(
≤.≤., -
charCode
≤.≤.- 5
==
≤.≤.6 8
$num
≤.≤.9 =
&&
≤.≤.> @!
isSoftHyphenIgnored
≤.≤.A T
==
≤.≤.U W
false
≤.≤.X ]
)
≤.≤.] ^
)
≤.≤.^ _#
SaveWordWrappingState
≥.≥. 1
(
≥.≥.1 2
ref
≥.≥.2 5#
internalSoftLineBreak
≥.≥.6 K
,
≥.≥.K L
i
≥.≥.M N
,
≥.≥.N O
m_characterCount
≥.≥.P `
)
≥.≥.` a
;
≥.≥.a b#
SaveWordWrappingState
µ.µ. -
(
µ.µ.- .
ref
µ.µ.. 1#
internalWordWrapState
µ.µ.2 G
,
µ.µ.G H
i
µ.µ.I J
,
µ.µ.J K
m_characterCount
µ.µ.L \
)
µ.µ.\ ]
;
µ.µ.] ^ 
isLastCharacterCJK
∂.∂. *
=
∂.∂.+ ,
false
∂.∂.- 2
;
∂.∂.2 3
}
∑.∑. 
}
∏.∏. 
m_characterCount
ª.ª.  
+=
ª.ª.! #
$num
ª.ª.$ %
;
ª.ª.% &
}
º.º. 
fontSizeDelta
¿.¿. 
=
¿.¿. 
m_maxFontSize
¿.¿. )
-
¿.¿.* +
m_minFontSize
¿.¿., 9
;
¿.¿.9 :
if
¡.¡. 
(
¡.¡. %
isTextAutoSizingEnabled
¡.¡. '
&&
¡.¡.( *
fontSizeDelta
¡.¡.+ 8
>
¡.¡.9 :
$num
¡.¡.; A
&&
¡.¡.B D
fontSize
¡.¡.E M
<
¡.¡.N O
m_fontSizeMax
¡.¡.P ]
&&
¡.¡.^ `&
m_AutoSizeIterationCount
¡.¡.a y
<
¡.¡.z {*
m_AutoSizeMaxIterationCount¡.¡.| ó
)¡.¡.ó ò
{
¬.¬. 
if
ƒ.ƒ. 
(
ƒ.ƒ. !
m_charWidthAdjDelta
ƒ.ƒ. '
<
ƒ.ƒ.( )
m_charWidthMaxAdj
ƒ.ƒ.* ;
/
ƒ.ƒ.< =
$num
ƒ.ƒ.> A
)
ƒ.ƒ.A B!
m_charWidthAdjDelta
≈.≈. '
=
≈.≈.( )
$num
≈.≈.* +
;
≈.≈.+ ,
m_minFontSize
«.«. 
=
«.«. 
fontSize
«.«.  (
;
«.«.( )
float
….…. 
	sizeDelta
….…. 
=
….….  !
Mathf
….…." '
.
….….' (
Max
….….( +
(
….….+ ,
(
….…., -
m_maxFontSize
….….- :
-
….….; <
fontSize
….….= E
)
….….E F
/
….….G H
$num
….….I J
,
….….J K
$num
….….L Q
)
….….Q R
;
….….R S
fontSize
 . . 
+=
 . . 
	sizeDelta
 . . %
;
 . .% &
fontSize
À.À. 
=
À.À. 
Mathf
À.À.  
.
À.À.  !
Min
À.À.! $
(
À.À.$ %
(
À.À.% &
int
À.À.& )
)
À.À.) *
(
À.À.* +
fontSize
À.À.+ 3
*
À.À.4 5
$num
À.À.6 8
+
À.À.9 :
$num
À.À.; ?
)
À.À.? @
/
À.À.A B
$num
À.À.C F
,
À.À.F G
m_fontSizeMax
À.À.H U
)
À.À.U V
;
À.À.V W
return
Œ.Œ. 
Vector2
Œ.Œ. 
.
Œ.Œ. 
zero
Œ.Œ. #
;
Œ.Œ.# $
}
œ.œ. &
m_IsAutoSizePointSizeSet
“.“. $
=
“.“.% &
true
“.“.' +
;
“.“.+ ,,
m_isCalculatingPreferredValues
‘.‘. *
=
‘.‘.+ ,
false
‘.‘.- 2
;
‘.‘.2 3
renderedWidth
◊.◊. 
+=
◊.◊. 
m_margin
◊.◊. %
.
◊.◊.% &
x
◊.◊.& '
>
◊.◊.( )
$num
◊.◊.* +
?
◊.◊., -
m_margin
◊.◊.. 6
.
◊.◊.6 7
x
◊.◊.7 8
:
◊.◊.9 :
$num
◊.◊.; <
;
◊.◊.< =
renderedWidth
ÿ.ÿ. 
+=
ÿ.ÿ. 
m_margin
ÿ.ÿ. %
.
ÿ.ÿ.% &
z
ÿ.ÿ.& '
>
ÿ.ÿ.( )
$num
ÿ.ÿ.* +
?
ÿ.ÿ., -
m_margin
ÿ.ÿ.. 6
.
ÿ.ÿ.6 7
z
ÿ.ÿ.7 8
:
ÿ.ÿ.9 :
$num
ÿ.ÿ.; <
;
ÿ.ÿ.< =
renderedHeight
⁄.⁄. 
+=
⁄.⁄. 
m_margin
⁄.⁄. &
.
⁄.⁄.& '
y
⁄.⁄.' (
>
⁄.⁄.) *
$num
⁄.⁄.+ ,
?
⁄.⁄.- .
m_margin
⁄.⁄./ 7
.
⁄.⁄.7 8
y
⁄.⁄.8 9
:
⁄.⁄.: ;
$num
⁄.⁄.< =
;
⁄.⁄.= >
renderedHeight
€.€. 
+=
€.€. 
m_margin
€.€. &
.
€.€.& '
w
€.€.' (
>
€.€.) *
$num
€.€.+ ,
?
€.€.- .
m_margin
€.€./ 7
.
€.€.7 8
w
€.€.8 9
:
€.€.: ;
$num
€.€.< =
;
€.€.= >
renderedWidth
ﬁ.ﬁ. 
=
ﬁ.ﬁ. 
(
ﬁ.ﬁ. 
int
ﬁ.ﬁ.  
)
ﬁ.ﬁ.  !
(
ﬁ.ﬁ.! "
renderedWidth
ﬁ.ﬁ." /
*
ﬁ.ﬁ.0 1
$num
ﬁ.ﬁ.2 5
+
ﬁ.ﬁ.6 7
$num
ﬁ.ﬁ.8 :
)
ﬁ.ﬁ.: ;
/
ﬁ.ﬁ.< =
$num
ﬁ.ﬁ.> B
;
ﬁ.ﬁ.B C
renderedHeight
ﬂ.ﬂ. 
=
ﬂ.ﬂ. 
(
ﬂ.ﬂ. 
int
ﬂ.ﬂ. !
)
ﬂ.ﬂ.! "
(
ﬂ.ﬂ." #
renderedHeight
ﬂ.ﬂ.# 1
*
ﬂ.ﬂ.2 3
$num
ﬂ.ﬂ.4 7
+
ﬂ.ﬂ.8 9
$num
ﬂ.ﬂ.: <
)
ﬂ.ﬂ.< =
/
ﬂ.ﬂ.> ?
$num
ﬂ.ﬂ.@ D
;
ﬂ.ﬂ.D E
return
‰.‰. 
new
‰.‰. 
Vector2
‰.‰. 
(
‰.‰. 
renderedWidth
‰.‰. ,
,
‰.‰., -
renderedHeight
‰.‰.. <
)
‰.‰.< =
;
‰.‰.= >
}
Â.Â. 	
	protected
Ï.Ï. 
virtual
Ï.Ï. 
Bounds
Ï.Ï.  
GetCompoundBounds
Ï.Ï.! 2
(
Ï.Ï.2 3
)
Ï.Ï.3 4
{
Ï.Ï.5 6
return
Ï.Ï.7 =
new
Ï.Ï.> A
Bounds
Ï.Ï.B H
(
Ï.Ï.H I
)
Ï.Ï.I J
;
Ï.Ï.J K
}
Ï.Ï.L M
internal
Ó.Ó. 
virtual
Ó.Ó. 
Rect
Ó.Ó. (
GetCanvasSpaceClippingRect
Ó.Ó. 8
(
Ó.Ó.8 9
)
Ó.Ó.9 :
{
Ó.Ó.; <
return
Ó.Ó.= C
Rect
Ó.Ó.D H
.
Ó.Ó.H I
zero
Ó.Ó.I M
;
Ó.Ó.M N
}
Ó.Ó.O P
	protected
Ù.Ù. 
Bounds
Ù.Ù. 
GetTextBounds
Ù.Ù. &
(
Ù.Ù.& '
)
Ù.Ù.' (
{
ı.ı. 	
if
ˆ.ˆ. 
(
ˆ.ˆ. 

m_textInfo
ˆ.ˆ. 
==
ˆ.ˆ. 
null
ˆ.ˆ. "
||
ˆ.ˆ.# %

m_textInfo
ˆ.ˆ.& 0
.
ˆ.ˆ.0 1
characterCount
ˆ.ˆ.1 ?
>
ˆ.ˆ.@ A

m_textInfo
ˆ.ˆ.B L
.
ˆ.ˆ.L M
characterInfo
ˆ.ˆ.M Z
.
ˆ.ˆ.Z [
Length
ˆ.ˆ.[ a
)
ˆ.ˆ.a b
return
ˆ.ˆ.c i
new
ˆ.ˆ.j m
Bounds
ˆ.ˆ.n t
(
ˆ.ˆ.t u
)
ˆ.ˆ.u v
;
ˆ.ˆ.v w
Extents
¯.¯. 
extent
¯.¯. 
=
¯.¯. 
new
¯.¯.  
Extents
¯.¯.! (
(
¯.¯.( )$
k_LargePositiveVector2
¯.¯.) ?
,
¯.¯.? @$
k_LargeNegativeVector2
¯.¯.A W
)
¯.¯.W X
;
¯.¯.X Y
for
˙.˙. 
(
˙.˙. 
int
˙.˙. 
i
˙.˙. 
=
˙.˙. 
$num
˙.˙. 
;
˙.˙. 
i
˙.˙. 
<
˙.˙. 

m_textInfo
˙.˙.  *
.
˙.˙.* +
characterCount
˙.˙.+ 9
&&
˙.˙.: <
i
˙.˙.= >
<
˙.˙.? @

m_textInfo
˙.˙.A K
.
˙.˙.K L
characterInfo
˙.˙.L Y
.
˙.˙.Y Z
Length
˙.˙.Z `
;
˙.˙.` a
i
˙.˙.b c
++
˙.˙.c e
)
˙.˙.e f
{
˚.˚. 
if
¸.¸. 
(
¸.¸. 
!
¸.¸. 

m_textInfo
¸.¸. 
.
¸.¸.  
characterInfo
¸.¸.  -
[
¸.¸.- .
i
¸.¸.. /
]
¸.¸./ 0
.
¸.¸.0 1
	isVisible
¸.¸.1 :
)
¸.¸.: ;
continue
¸.¸.< D
;
¸.¸.D E
extent
˛.˛. 
.
˛.˛. 
min
˛.˛. 
.
˛.˛. 
x
˛.˛. 
=
˛.˛. 
Mathf
˛.˛. $
.
˛.˛.$ %
Min
˛.˛.% (
(
˛.˛.( )
extent
˛.˛.) /
.
˛.˛./ 0
min
˛.˛.0 3
.
˛.˛.3 4
x
˛.˛.4 5
,
˛.˛.5 6

m_textInfo
˛.˛.7 A
.
˛.˛.A B
characterInfo
˛.˛.B O
[
˛.˛.O P
i
˛.˛.P Q
]
˛.˛.Q R
.
˛.˛.R S

bottomLeft
˛.˛.S ]
.
˛.˛.] ^
x
˛.˛.^ _
)
˛.˛._ `
;
˛.˛.` a
extent
ˇ.ˇ. 
.
ˇ.ˇ. 
min
ˇ.ˇ. 
.
ˇ.ˇ. 
y
ˇ.ˇ. 
=
ˇ.ˇ. 
Mathf
ˇ.ˇ. $
.
ˇ.ˇ.$ %
Min
ˇ.ˇ.% (
(
ˇ.ˇ.( )
extent
ˇ.ˇ.) /
.
ˇ.ˇ./ 0
min
ˇ.ˇ.0 3
.
ˇ.ˇ.3 4
y
ˇ.ˇ.4 5
,
ˇ.ˇ.5 6

m_textInfo
ˇ.ˇ.7 A
.
ˇ.ˇ.A B
characterInfo
ˇ.ˇ.B O
[
ˇ.ˇ.O P
i
ˇ.ˇ.P Q
]
ˇ.ˇ.Q R
.
ˇ.ˇ.R S
	descender
ˇ.ˇ.S \
)
ˇ.ˇ.\ ]
;
ˇ.ˇ.] ^
extent
Å/Å/ 
.
Å/Å/ 
max
Å/Å/ 
.
Å/Å/ 
x
Å/Å/ 
=
Å/Å/ 
Mathf
Å/Å/ $
.
Å/Å/$ %
Max
Å/Å/% (
(
Å/Å/( )
extent
Å/Å/) /
.
Å/Å// 0
max
Å/Å/0 3
.
Å/Å/3 4
x
Å/Å/4 5
,
Å/Å/5 6

m_textInfo
Å/Å/7 A
.
Å/Å/A B
characterInfo
Å/Å/B O
[
Å/Å/O P
i
Å/Å/P Q
]
Å/Å/Q R
.
Å/Å/R S
xAdvance
Å/Å/S [
)
Å/Å/[ \
;
Å/Å/\ ]
extent
Ç/Ç/ 
.
Ç/Ç/ 
max
Ç/Ç/ 
.
Ç/Ç/ 
y
Ç/Ç/ 
=
Ç/Ç/ 
Mathf
Ç/Ç/ $
.
Ç/Ç/$ %
Max
Ç/Ç/% (
(
Ç/Ç/( )
extent
Ç/Ç/) /
.
Ç/Ç// 0
max
Ç/Ç/0 3
.
Ç/Ç/3 4
y
Ç/Ç/4 5
,
Ç/Ç/5 6

m_textInfo
Ç/Ç/7 A
.
Ç/Ç/A B
characterInfo
Ç/Ç/B O
[
Ç/Ç/O P
i
Ç/Ç/P Q
]
Ç/Ç/Q R
.
Ç/Ç/R S
ascender
Ç/Ç/S [
)
Ç/Ç/[ \
;
Ç/Ç/\ ]
}
É/É/ 
Vector2
Ö/Ö/ 
size
Ö/Ö/ 
;
Ö/Ö/ 
size
Ü/Ü/ 
.
Ü/Ü/ 
x
Ü/Ü/ 
=
Ü/Ü/ 
extent
Ü/Ü/ 
.
Ü/Ü/ 
max
Ü/Ü/ 
.
Ü/Ü/  
x
Ü/Ü/  !
-
Ü/Ü/" #
extent
Ü/Ü/$ *
.
Ü/Ü/* +
min
Ü/Ü/+ .
.
Ü/Ü/. /
x
Ü/Ü// 0
;
Ü/Ü/0 1
size
á/á/ 
.
á/á/ 
y
á/á/ 
=
á/á/ 
extent
á/á/ 
.
á/á/ 
max
á/á/ 
.
á/á/  
y
á/á/  !
-
á/á/" #
extent
á/á/$ *
.
á/á/* +
min
á/á/+ .
.
á/á/. /
y
á/á// 0
;
á/á/0 1
Vector3
â/â/ 
center
â/â/ 
=
â/â/ 
(
â/â/ 
extent
â/â/ $
.
â/â/$ %
min
â/â/% (
+
â/â/) *
extent
â/â/+ 1
.
â/â/1 2
max
â/â/2 5
)
â/â/5 6
/
â/â/7 8
$num
â/â/9 :
;
â/â/: ;
return
ã/ã/ 
new
ã/ã/ 
Bounds
ã/ã/ 
(
ã/ã/ 
center
ã/ã/ $
,
ã/ã/$ %
size
ã/ã/& *
)
ã/ã/* +
;
ã/ã/+ ,
}
å/å/ 	
	protected
î/î/ 
Bounds
î/î/ 
GetTextBounds
î/î/ &
(
î/î/& '
bool
î/î/' +#
onlyVisibleCharacters
î/î/, A
)
î/î/A B
{
ï/ï/ 	
if
ñ/ñ/ 
(
ñ/ñ/ 

m_textInfo
ñ/ñ/ 
==
ñ/ñ/ 
null
ñ/ñ/ "
)
ñ/ñ/" #
return
ñ/ñ/$ *
new
ñ/ñ/+ .
Bounds
ñ/ñ// 5
(
ñ/ñ/5 6
)
ñ/ñ/6 7
;
ñ/ñ/7 8
Extents
ò/ò/ 
extent
ò/ò/ 
=
ò/ò/ 
new
ò/ò/  
Extents
ò/ò/! (
(
ò/ò/( )$
k_LargePositiveVector2
ò/ò/) ?
,
ò/ò/? @$
k_LargeNegativeVector2
ò/ò/A W
)
ò/ò/W X
;
ò/ò/X Y
for
ö/ö/ 
(
ö/ö/ 
int
ö/ö/ 
i
ö/ö/ 
=
ö/ö/ 
$num
ö/ö/ 
;
ö/ö/ 
i
ö/ö/ 
<
ö/ö/ 

m_textInfo
ö/ö/  *
.
ö/ö/* +
characterCount
ö/ö/+ 9
;
ö/ö/9 :
i
ö/ö/; <
++
ö/ö/< >
)
ö/ö/> ?
{
õ/õ/ 
if
ú/ú/ 
(
ú/ú/ 
(
ú/ú/ 
i
ú/ú/ 
>
ú/ú/ "
maxVisibleCharacters
ú/ú/ -
||
ú/ú/. 0

m_textInfo
ú/ú/1 ;
.
ú/ú/; <
characterInfo
ú/ú/< I
[
ú/ú/I J
i
ú/ú/J K
]
ú/ú/K L
.
ú/ú/L M

lineNumber
ú/ú/M W
>
ú/ú/X Y
m_maxVisibleLines
ú/ú/Z k
)
ú/ú/k l
&&
ú/ú/m o$
onlyVisibleCharactersú/ú/p Ö
)ú/ú/Ö Ü
breakú/ú/á å
;ú/ú/å ç
if
û/û/ 
(
û/û/ #
onlyVisibleCharacters
û/û/ )
&&
û/û/* ,
!
û/û/- .

m_textInfo
û/û/. 8
.
û/û/8 9
characterInfo
û/û/9 F
[
û/û/F G
i
û/û/G H
]
û/û/H I
.
û/û/I J
	isVisible
û/û/J S
)
û/û/S T
continue
û/û/U ]
;
û/û/] ^
extent
†/†/ 
.
†/†/ 
min
†/†/ 
.
†/†/ 
x
†/†/ 
=
†/†/ 
Mathf
†/†/ $
.
†/†/$ %
Min
†/†/% (
(
†/†/( )
extent
†/†/) /
.
†/†// 0
min
†/†/0 3
.
†/†/3 4
x
†/†/4 5
,
†/†/5 6

m_textInfo
†/†/7 A
.
†/†/A B
characterInfo
†/†/B O
[
†/†/O P
i
†/†/P Q
]
†/†/Q R
.
†/†/R S
origin
†/†/S Y
)
†/†/Y Z
;
†/†/Z [
extent
°/°/ 
.
°/°/ 
min
°/°/ 
.
°/°/ 
y
°/°/ 
=
°/°/ 
Mathf
°/°/ $
.
°/°/$ %
Min
°/°/% (
(
°/°/( )
extent
°/°/) /
.
°/°// 0
min
°/°/0 3
.
°/°/3 4
y
°/°/4 5
,
°/°/5 6

m_textInfo
°/°/7 A
.
°/°/A B
characterInfo
°/°/B O
[
°/°/O P
i
°/°/P Q
]
°/°/Q R
.
°/°/R S
	descender
°/°/S \
)
°/°/\ ]
;
°/°/] ^
extent
£/£/ 
.
£/£/ 
max
£/£/ 
.
£/£/ 
x
£/£/ 
=
£/£/ 
Mathf
£/£/ $
.
£/£/$ %
Max
£/£/% (
(
£/£/( )
extent
£/£/) /
.
£/£// 0
max
£/£/0 3
.
£/£/3 4
x
£/£/4 5
,
£/£/5 6

m_textInfo
£/£/7 A
.
£/£/A B
characterInfo
£/£/B O
[
£/£/O P
i
£/£/P Q
]
£/£/Q R
.
£/£/R S
xAdvance
£/£/S [
)
£/£/[ \
;
£/£/\ ]
extent
§/§/ 
.
§/§/ 
max
§/§/ 
.
§/§/ 
y
§/§/ 
=
§/§/ 
Mathf
§/§/ $
.
§/§/$ %
Max
§/§/% (
(
§/§/( )
extent
§/§/) /
.
§/§// 0
max
§/§/0 3
.
§/§/3 4
y
§/§/4 5
,
§/§/5 6

m_textInfo
§/§/7 A
.
§/§/A B
characterInfo
§/§/B O
[
§/§/O P
i
§/§/P Q
]
§/§/Q R
.
§/§/R S
ascender
§/§/S [
)
§/§/[ \
;
§/§/\ ]
}
•/•/ 
Vector2
ß/ß/ 
size
ß/ß/ 
;
ß/ß/ 
size
®/®/ 
.
®/®/ 
x
®/®/ 
=
®/®/ 
extent
®/®/ 
.
®/®/ 
max
®/®/ 
.
®/®/  
x
®/®/  !
-
®/®/" #
extent
®/®/$ *
.
®/®/* +
min
®/®/+ .
.
®/®/. /
x
®/®// 0
;
®/®/0 1
size
©/©/ 
.
©/©/ 
y
©/©/ 
=
©/©/ 
extent
©/©/ 
.
©/©/ 
max
©/©/ 
.
©/©/  
y
©/©/  !
-
©/©/" #
extent
©/©/$ *
.
©/©/* +
min
©/©/+ .
.
©/©/. /
y
©/©// 0
;
©/©/0 1
Vector2
´/´/ 
center
´/´/ 
=
´/´/ 
(
´/´/ 
extent
´/´/ $
.
´/´/$ %
min
´/´/% (
+
´/´/) *
extent
´/´/+ 1
.
´/´/1 2
max
´/´/2 5
)
´/´/5 6
/
´/´/7 8
$num
´/´/9 :
;
´/´/: ;
return
≠/≠/ 
new
≠/≠/ 
Bounds
≠/≠/ 
(
≠/≠/ 
center
≠/≠/ $
,
≠/≠/$ %
size
≠/≠/& *
)
≠/≠/* +
;
≠/≠/+ ,
}
Æ/Æ/ 	
	protected
∏/∏/ 
void
∏/∏/ 
AdjustLineOffset
∏/∏/ '
(
∏/∏/' (
int
∏/∏/( +

startIndex
∏/∏/, 6
,
∏/∏/6 7
int
∏/∏/8 ;
endIndex
∏/∏/< D
,
∏/∏/D E
float
∏/∏/F K
offset
∏/∏/L R
)
∏/∏/R S
{
π/π/ 	
Vector3
∫/∫/ 
vertexOffset
∫/∫/  
=
∫/∫/! "
new
∫/∫/# &
Vector3
∫/∫/' .
(
∫/∫/. /
$num
∫/∫// 0
,
∫/∫/0 1
offset
∫/∫/2 8
,
∫/∫/8 9
$num
∫/∫/: ;
)
∫/∫/; <
;
∫/∫/< =
for
º/º/ 
(
º/º/ 
int
º/º/ 
i
º/º/ 
=
º/º/ 

startIndex
º/º/ #
;
º/º/# $
i
º/º/% &
<=
º/º/' )
endIndex
º/º/* 2
;
º/º/2 3
i
º/º/4 5
++
º/º/5 7
)
º/º/7 8
{
Ω/Ω/ 

m_textInfo
æ/æ/ 
.
æ/æ/ 
characterInfo
æ/æ/ (
[
æ/æ/( )
i
æ/æ/) *
]
æ/æ/* +
.
æ/æ/+ ,

bottomLeft
æ/æ/, 6
-=
æ/æ/7 9
vertexOffset
æ/æ/: F
;
æ/æ/F G

m_textInfo
ø/ø/ 
.
ø/ø/ 
characterInfo
ø/ø/ (
[
ø/ø/( )
i
ø/ø/) *
]
ø/ø/* +
.
ø/ø/+ ,
topLeft
ø/ø/, 3
-=
ø/ø/4 6
vertexOffset
ø/ø/7 C
;
ø/ø/C D

m_textInfo
¿/¿/ 
.
¿/¿/ 
characterInfo
¿/¿/ (
[
¿/¿/( )
i
¿/¿/) *
]
¿/¿/* +
.
¿/¿/+ ,
topRight
¿/¿/, 4
-=
¿/¿/5 7
vertexOffset
¿/¿/8 D
;
¿/¿/D E

m_textInfo
¡/¡/ 
.
¡/¡/ 
characterInfo
¡/¡/ (
[
¡/¡/( )
i
¡/¡/) *
]
¡/¡/* +
.
¡/¡/+ ,
bottomRight
¡/¡/, 7
-=
¡/¡/8 :
vertexOffset
¡/¡/; G
;
¡/¡/G H

m_textInfo
√/√/ 
.
√/√/ 
characterInfo
√/√/ (
[
√/√/( )
i
√/√/) *
]
√/√/* +
.
√/√/+ ,
ascender
√/√/, 4
-=
√/√/5 7
vertexOffset
√/√/8 D
.
√/√/D E
y
√/√/E F
;
√/√/F G

m_textInfo
ƒ/ƒ/ 
.
ƒ/ƒ/ 
characterInfo
ƒ/ƒ/ (
[
ƒ/ƒ/( )
i
ƒ/ƒ/) *
]
ƒ/ƒ/* +
.
ƒ/ƒ/+ ,
baseLine
ƒ/ƒ/, 4
-=
ƒ/ƒ/5 7
vertexOffset
ƒ/ƒ/8 D
.
ƒ/ƒ/D E
y
ƒ/ƒ/E F
;
ƒ/ƒ/F G

m_textInfo
≈/≈/ 
.
≈/≈/ 
characterInfo
≈/≈/ (
[
≈/≈/( )
i
≈/≈/) *
]
≈/≈/* +
.
≈/≈/+ ,
	descender
≈/≈/, 5
-=
≈/≈/6 8
vertexOffset
≈/≈/9 E
.
≈/≈/E F
y
≈/≈/F G
;
≈/≈/G H
if
«/«/ 
(
«/«/ 

m_textInfo
«/«/ 
.
«/«/ 
characterInfo
«/«/ ,
[
«/«/, -
i
«/«/- .
]
«/«/. /
.
«/«// 0
	isVisible
«/«/0 9
)
«/«/9 :
{
»/»/ 

m_textInfo
…/…/ 
.
…/…/ 
characterInfo
…/…/ ,
[
…/…/, -
i
…/…/- .
]
…/…/. /
.
…/…// 0
	vertex_BL
…/…/0 9
.
…/…/9 :
position
…/…/: B
-=
…/…/C E
vertexOffset
…/…/F R
;
…/…/R S

m_textInfo
 / / 
.
 / / 
characterInfo
 / / ,
[
 / /, -
i
 / /- .
]
 / /. /
.
 / // 0
	vertex_TL
 / /0 9
.
 / /9 :
position
 / /: B
-=
 / /C E
vertexOffset
 / /F R
;
 / /R S

m_textInfo
À/À/ 
.
À/À/ 
characterInfo
À/À/ ,
[
À/À/, -
i
À/À/- .
]
À/À/. /
.
À/À// 0
	vertex_TR
À/À/0 9
.
À/À/9 :
position
À/À/: B
-=
À/À/C E
vertexOffset
À/À/F R
;
À/À/R S

m_textInfo
Ã/Ã/ 
.
Ã/Ã/ 
characterInfo
Ã/Ã/ ,
[
Ã/Ã/, -
i
Ã/Ã/- .
]
Ã/Ã/. /
.
Ã/Ã// 0
	vertex_BR
Ã/Ã/0 9
.
Ã/Ã/9 :
position
Ã/Ã/: B
-=
Ã/Ã/C E
vertexOffset
Ã/Ã/F R
;
Ã/Ã/R S
}
Õ/Õ/ 
}
Œ/Œ/ 
}
œ/œ/ 	
	protected
÷/÷/ 
void
÷/÷/ 
ResizeLineExtents
÷/÷/ (
(
÷/÷/( )
int
÷/÷/) ,
size
÷/÷/- 1
)
÷/÷/1 2
{
◊/◊/ 	
size
ÿ/ÿ/ 
=
ÿ/ÿ/ 
size
ÿ/ÿ/ 
>
ÿ/ÿ/ 
$num
ÿ/ÿ/ 
?
ÿ/ÿ/  
size
ÿ/ÿ/! %
+
ÿ/ÿ/& '
$num
ÿ/ÿ/( +
:
ÿ/ÿ/, -
Mathf
ÿ/ÿ/. 3
.
ÿ/ÿ/3 4
NextPowerOfTwo
ÿ/ÿ/4 B
(
ÿ/ÿ/B C
size
ÿ/ÿ/C G
+
ÿ/ÿ/H I
$num
ÿ/ÿ/J K
)
ÿ/ÿ/K L
;
ÿ/ÿ/L M
TMP_LineInfo
⁄/⁄/ 
[
⁄/⁄/ 
]
⁄/⁄/ 
temp_lineInfo
⁄/⁄/ (
=
⁄/⁄/) *
new
⁄/⁄/+ .
TMP_LineInfo
⁄/⁄// ;
[
⁄/⁄/; <
size
⁄/⁄/< @
]
⁄/⁄/@ A
;
⁄/⁄/A B
for
€/€/ 
(
€/€/ 
int
€/€/ 
i
€/€/ 
=
€/€/ 
$num
€/€/ 
;
€/€/ 
i
€/€/ 
<
€/€/ 
size
€/€/  $
;
€/€/$ %
i
€/€/& '
++
€/€/' )
)
€/€/) *
{
‹/‹/ 
if
›/›/ 
(
›/›/ 
i
›/›/ 
<
›/›/ 

m_textInfo
›/›/ "
.
›/›/" #
lineInfo
›/›/# +
.
›/›/+ ,
Length
›/›/, 2
)
›/›/2 3
temp_lineInfo
ﬁ/ﬁ/ !
[
ﬁ/ﬁ/! "
i
ﬁ/ﬁ/" #
]
ﬁ/ﬁ/# $
=
ﬁ/ﬁ/% &

m_textInfo
ﬁ/ﬁ/' 1
.
ﬁ/ﬁ/1 2
lineInfo
ﬁ/ﬁ/2 :
[
ﬁ/ﬁ/: ;
i
ﬁ/ﬁ/; <
]
ﬁ/ﬁ/< =
;
ﬁ/ﬁ/= >
else
ﬂ/ﬂ/ 
{
‡/‡/ 
temp_lineInfo
·/·/ !
[
·/·/! "
i
·/·/" #
]
·/·/# $
.
·/·/$ %
lineExtents
·/·/% 0
.
·/·/0 1
min
·/·/1 4
=
·/·/5 6$
k_LargePositiveVector2
·/·/7 M
;
·/·/M N
temp_lineInfo
‚/‚/ !
[
‚/‚/! "
i
‚/‚/" #
]
‚/‚/# $
.
‚/‚/$ %
lineExtents
‚/‚/% 0
.
‚/‚/0 1
max
‚/‚/1 4
=
‚/‚/5 6$
k_LargeNegativeVector2
‚/‚/7 M
;
‚/‚/M N
temp_lineInfo
‰/‰/ !
[
‰/‰/! "
i
‰/‰/" #
]
‰/‰/# $
.
‰/‰/$ %
ascender
‰/‰/% -
=
‰/‰/. /"
k_LargeNegativeFloat
‰/‰/0 D
;
‰/‰/D E
temp_lineInfo
Â/Â/ !
[
Â/Â/! "
i
Â/Â/" #
]
Â/Â/# $
.
Â/Â/$ %
	descender
Â/Â/% .
=
Â/Â// 0"
k_LargePositiveFloat
Â/Â/1 E
;
Â/Â/E F
}
Ê/Ê/ 
}
Á/Á/ 

m_textInfo
È/È/ 
.
È/È/ 
lineInfo
È/È/ 
=
È/È/  !
temp_lineInfo
È/È/" /
;
È/È// 0
}
Í/Í/ 	
	protected
Î/Î/ 
static
Î/Î/ 
Vector2
Î/Î/  $
k_LargePositiveVector2
Î/Î/! 7
=
Î/Î/8 9
new
Î/Î/: =
Vector2
Î/Î/> E
(
Î/Î/E F
TMP_Math
Î/Î/F N
.
Î/Î/N O
INT_MAX
Î/Î/O V
,
Î/Î/V W
TMP_Math
Î/Î/X `
.
Î/Î/` a
INT_MAX
Î/Î/a h
)
Î/Î/h i
;
Î/Î/i j
	protected
Ï/Ï/ 
static
Ï/Ï/ 
Vector2
Ï/Ï/  $
k_LargeNegativeVector2
Ï/Ï/! 7
=
Ï/Ï/8 9
new
Ï/Ï/: =
Vector2
Ï/Ï/> E
(
Ï/Ï/E F
TMP_Math
Ï/Ï/F N
.
Ï/Ï/N O
INT_MIN
Ï/Ï/O V
,
Ï/Ï/V W
TMP_Math
Ï/Ï/X `
.
Ï/Ï/` a
INT_MIN
Ï/Ï/a h
)
Ï/Ï/h i
;
Ï/Ï/i j
	protected
Ì/Ì/ 
static
Ì/Ì/ 
float
Ì/Ì/ "
k_LargePositiveFloat
Ì/Ì/ 3
=
Ì/Ì/4 5
TMP_Math
Ì/Ì/6 >
.
Ì/Ì/> ?
	FLOAT_MAX
Ì/Ì/? H
;
Ì/Ì/H I
	protected
Ó/Ó/ 
static
Ó/Ó/ 
float
Ó/Ó/ "
k_LargeNegativeFloat
Ó/Ó/ 3
=
Ó/Ó/4 5
TMP_Math
Ó/Ó/6 >
.
Ó/Ó/> ?
	FLOAT_MIN
Ó/Ó/? H
;
Ó/Ó/H I
	protected
Ô/Ô/ 
static
Ô/Ô/ 
int
Ô/Ô/  
k_LargePositiveInt
Ô/Ô/ /
=
Ô/Ô/0 1
TMP_Math
Ô/Ô/2 :
.
Ô/Ô/: ;
INT_MAX
Ô/Ô/; B
;
Ô/Ô/B C
	protected
// 
static
// 
int
//  
k_LargeNegativeInt
// /
=
//0 1
TMP_Math
//2 :
.
//: ;
INT_MIN
//; B
;
//B C
public
˜/˜/ 
virtual
˜/˜/ 
TMP_TextInfo
˜/˜/ #
GetTextInfo
˜/˜/$ /
(
˜/˜// 0
string
˜/˜/0 6
text
˜/˜/7 ;
)
˜/˜/; <
{
˜/˜/= >
return
˜/˜/? E
null
˜/˜/F J
;
˜/˜/J K
}
˜/˜/L M
public
˝/˝/ 
virtual
˝/˝/ 
void
˝/˝/ 
ComputeMarginSize
˝/˝/ -
(
˝/˝/- .
)
˝/˝/. /
{
˝/˝/0 1
}
˝/˝/2 3
	protected
≥0≥0 
void
≥0≥0 
InsertNewLine
≥0≥0 $
(
≥0≥0$ %
int
≥0≥0% (
i
≥0≥0) *
,
≥0≥0* +
float
≥0≥0, 1
	baseScale
≥0≥02 ;
,
≥0≥0; <
float
≥0≥0= B!
currentElementScale
≥0≥0C V
,
≥0≥0V W
float
≥0≥0X ]
currentEmScale
≥0≥0^ l
,
≥0≥0l m
float
≥0≥0n s
glyphAdjustment≥0≥0t É
,≥0≥0É Ñ
float≥0≥0Ö ä%
boldSpacingAdjustment≥0≥0ã †
,≥0≥0† °
float≥0≥0¢ ß*
characterSpacingAdjustment≥0≥0® ¬
,≥0≥0¬ √
float≥0≥0ƒ …
width≥0≥0  œ
,≥0≥0œ –
float≥0≥0— ÷
lineGap≥0≥0◊ ﬁ
,≥0≥0ﬁ ﬂ
ref≥0≥0‡ „
bool≥0≥0‰ Ë(
isMaxVisibleDescenderSet≥0≥0È Å
,≥0≥0Å Ç
ref≥0≥0É Ü
float≥0≥0á å#
maxVisibleDescender≥0≥0ç †
)≥0≥0† °
{
¥0¥0 	
float
∂0∂0 %
baselineAdjustmentDelta
∂0∂0 )
=
∂0∂0* +
m_maxLineAscender
∂0∂0, =
-
∂0∂0> ?#
m_startOfLineAscender
∂0∂0@ U
;
∂0∂0U V
if
∑0∑0 
(
∑0∑0 
m_lineOffset
∑0∑0 
>
∑0∑0 
$num
∑0∑0  
&&
∑0∑0! #
Math
∑0∑0$ (
.
∑0∑0( )
Abs
∑0∑0) ,
(
∑0∑0, -%
baselineAdjustmentDelta
∑0∑0- D
)
∑0∑0D E
>
∑0∑0F G
$num
∑0∑0H M
&&
∑0∑0N P#
m_IsDrivenLineSpacing
∑0∑0Q f
==
∑0∑0g i
false
∑0∑0j o
&&
∑0∑0p r
!
∑0∑0s t
m_isNewPage
∑0∑0t 
)∑0∑0 Ä
{
∏0∏0 
AdjustLineOffset
π0π0  
(
π0π0  !$
m_firstCharacterOfLine
π0π0! 7
,
π0π07 8
m_characterCount
π0π09 I
,
π0π0I J%
baselineAdjustmentDelta
π0π0K b
)
π0π0b c
;
π0π0c d 
m_ElementDescender
∫0∫0 "
-=
∫0∫0# %%
baselineAdjustmentDelta
∫0∫0& =
;
∫0∫0= >
m_lineOffset
ª0ª0 
+=
ª0ª0 %
baselineAdjustmentDelta
ª0ª0  7
;
ª0ª07 8
}
º0º0 
float
ø0ø0 
lineAscender
ø0ø0 
=
ø0ø0  
m_maxLineAscender
ø0ø0! 2
-
ø0ø03 4
m_lineOffset
ø0ø05 A
;
ø0ø0A B
float
¿0¿0 
lineDescender
¿0¿0 
=
¿0¿0  ! 
m_maxLineDescender
¿0¿0" 4
-
¿0¿05 6
m_lineOffset
¿0¿07 C
;
¿0¿0C D 
m_ElementDescender
√0√0 
=
√0√0   
m_ElementDescender
√0√0! 3
<
√0√04 5
lineDescender
√0√06 C
?
√0√0D E 
m_ElementDescender
√0√0F X
:
√0√0Y Z
lineDescender
√0√0[ h
;
√0√0h i
if
ƒ0ƒ0 
(
ƒ0ƒ0 
!
ƒ0ƒ0 &
isMaxVisibleDescenderSet
ƒ0ƒ0 )
)
ƒ0ƒ0) *!
maxVisibleDescender
≈0≈0 #
=
≈0≈0$ % 
m_ElementDescender
≈0≈0& 8
;
≈0≈08 9
if
«0«0 
(
«0«0 &
m_useMaxVisibleDescender
«0«0 (
&&
«0«0) +
(
«0«0, -
m_characterCount
«0«0- =
>=
«0«0> @$
m_maxVisibleCharacters
«0«0A W
||
«0«0X Z
m_lineNumber
«0«0[ g
>=
«0«0h j
m_maxVisibleLines
«0«0k |
)
«0«0| }
)
«0«0} ~&
isMaxVisibleDescenderSet
»0»0 (
=
»0»0) *
true
»0»0+ /
;
»0»0/ 0

m_textInfo
À0À0 
.
À0À0 
lineInfo
À0À0 
[
À0À0  
m_lineNumber
À0À0  ,
]
À0À0, -
.
À0À0- .!
firstCharacterIndex
À0À0. A
=
À0À0B C$
m_firstCharacterOfLine
À0À0D Z
;
À0À0Z [

m_textInfo
Ã0Ã0 
.
Ã0Ã0 
lineInfo
Ã0Ã0 
[
Ã0Ã0  
m_lineNumber
Ã0Ã0  ,
]
Ã0Ã0, -
.
Ã0Ã0- .(
firstVisibleCharacterIndex
Ã0Ã0. H
=
Ã0Ã0I J+
m_firstVisibleCharacterOfLine
Ã0Ã0K h
=
Ã0Ã0i j%
m_firstCharacterOfLineÃ0Ã0k Å
>Ã0Ã0Ç É-
m_firstVisibleCharacterOfLineÃ0Ã0Ñ °
?Ã0Ã0¢ £&
m_firstCharacterOfLineÃ0Ã0§ ∫
:Ã0Ã0ª º-
m_firstVisibleCharacterOfLineÃ0Ã0Ω ⁄
;Ã0Ã0⁄ €
int
Õ0Õ0  
lastCharacterIndex
Õ0Õ0 "
=
Õ0Õ0# $

m_textInfo
Õ0Õ0% /
.
Õ0Õ0/ 0
lineInfo
Õ0Õ00 8
[
Õ0Õ08 9
m_lineNumber
Õ0Õ09 E
]
Õ0Õ0E F
.
Õ0Õ0F G 
lastCharacterIndex
Õ0Õ0G Y
=
Õ0Õ0Z [#
m_lastCharacterOfLine
Õ0Õ0\ q
=
Õ0Õ0r s
m_characterCountÕ0Õ0t Ñ
-Õ0Õ0Ö Ü
$numÕ0Õ0á à
>Õ0Õ0â ä
$numÕ0Õ0ã å
?Õ0Õ0ç é 
m_characterCountÕ0Õ0è ü
-Õ0Õ0† °
$numÕ0Õ0¢ £
:Õ0Õ0§ •
$numÕ0Õ0¶ ß
;Õ0Õ0ß ®

m_textInfo
Œ0Œ0 
.
Œ0Œ0 
lineInfo
Œ0Œ0 
[
Œ0Œ0  
m_lineNumber
Œ0Œ0  ,
]
Œ0Œ0, -
.
Œ0Œ0- .'
lastVisibleCharacterIndex
Œ0Œ0. G
=
Œ0Œ0H I*
m_lastVisibleCharacterOfLine
Œ0Œ0J f
=
Œ0Œ0g h+
m_lastVisibleCharacterOfLineŒ0Œ0i Ö
<Œ0Œ0Ü á-
m_firstVisibleCharacterOfLineŒ0Œ0à •
?Œ0Œ0¶ ß-
m_firstVisibleCharacterOfLineŒ0Œ0® ≈
:Œ0Œ0∆ «,
m_lastVisibleCharacterOfLineŒ0Œ0» ‰
;Œ0Œ0‰ Â

m_textInfo
–0–0 
.
–0–0 
lineInfo
–0–0 
[
–0–0  
m_lineNumber
–0–0  ,
]
–0–0, -
.
–0–0- .
characterCount
–0–0. <
=
–0–0= >

m_textInfo
–0–0? I
.
–0–0I J
lineInfo
–0–0J R
[
–0–0R S
m_lineNumber
–0–0S _
]
–0–0_ `
.
–0–0` a 
lastCharacterIndex
–0–0a s
-
–0–0t u

m_textInfo–0–0v Ä
.–0–0Ä Å
lineInfo–0–0Å â
[–0–0â ä
m_lineNumber–0–0ä ñ
]–0–0ñ ó
.–0–0ó ò#
firstCharacterIndex–0–0ò ´
+–0–0¨ ≠
$num–0–0Æ Ø
;–0–0Ø ∞

m_textInfo
—0—0 
.
—0—0 
lineInfo
—0—0 
[
—0—0  
m_lineNumber
—0—0  ,
]
—0—0, -
.
—0—0- .#
visibleCharacterCount
—0—0. C
=
—0—0D E)
m_lineVisibleCharacterCount
—0—0F a
;
—0—0a b

m_textInfo
“0“0 
.
“0“0 
lineInfo
“0“0 
[
“0“0  
m_lineNumber
“0“0  ,
]
“0“0, -
.
“0“0- .
lineExtents
“0“0. 9
.
“0“09 :
min
“0“0: =
=
“0“0> ?
new
“0“0@ C
Vector2
“0“0D K
(
“0“0K L

m_textInfo
“0“0L V
.
“0“0V W
characterInfo
“0“0W d
[
“0“0d e,
m_firstVisibleCharacterOfLine“0“0e Ç
]“0“0Ç É
.“0“0É Ñ

bottomLeft“0“0Ñ é
.“0“0é è
x“0“0è ê
,“0“0ê ë
lineDescender“0“0í ü
)“0“0ü †
;“0“0† °

m_textInfo
”0”0 
.
”0”0 
lineInfo
”0”0 
[
”0”0  
m_lineNumber
”0”0  ,
]
”0”0, -
.
”0”0- .
lineExtents
”0”0. 9
.
”0”09 :
max
”0”0: =
=
”0”0> ?
new
”0”0@ C
Vector2
”0”0D K
(
”0”0K L

m_textInfo
”0”0L V
.
”0”0V W
characterInfo
”0”0W d
[
”0”0d e+
m_lastVisibleCharacterOfLine”0”0e Å
]”0”0Å Ç
.”0”0Ç É
topRight”0”0É ã
.”0”0ã å
x”0”0å ç
,”0”0ç é
lineAscender”0”0è õ
)”0”0õ ú
;”0”0ú ù

m_textInfo
‘0‘0 
.
‘0‘0 
lineInfo
‘0‘0 
[
‘0‘0  
m_lineNumber
‘0‘0  ,
]
‘0‘0, -
.
‘0‘0- .
length
‘0‘0. 4
=
‘0‘05 6

m_textInfo
‘0‘07 A
.
‘0‘0A B
lineInfo
‘0‘0B J
[
‘0‘0J K
m_lineNumber
‘0‘0K W
]
‘0‘0W X
.
‘0‘0X Y
lineExtents
‘0‘0Y d
.
‘0‘0d e
max
‘0‘0e h
.
‘0‘0h i
x
‘0‘0i j
;
‘0‘0j k

m_textInfo
’0’0 
.
’0’0 
lineInfo
’0’0 
[
’0’0  
m_lineNumber
’0’0  ,
]
’0’0, -
.
’0’0- .
width
’0’0. 3
=
’0’04 5
width
’0’06 ;
;
’0’0; <
float
◊0◊0 
maxAdvanceOffset
◊0◊0 "
=
◊0◊0# $
(
◊0◊0% &
(
◊0◊0& '
glyphAdjustment
◊0◊0' 6
+
◊0◊07 8#
boldSpacingAdjustment
◊0◊09 N
)
◊0◊0N O
*
◊0◊0P Q!
currentElementScale
◊0◊0R e
+
◊0◊0f g
(
◊0◊0h i 
m_currentFontAsset
◊0◊0i {
.
◊0◊0{ |"
normalSpacingOffset◊0◊0| è
+◊0◊0ê ë*
characterSpacingAdjustment◊0◊0í ¨
)◊0◊0¨ ≠
*◊0◊0Æ Ø
currentEmScale◊0◊0∞ æ
-◊0◊0ø ¿

m_cSpacing◊0◊0¡ À
)◊0◊0À Ã
*◊0◊0Õ Œ
(◊0◊0œ –
$num◊0◊0– —
-◊0◊0“ ”#
m_charWidthAdjDelta◊0◊0‘ Á
)◊0◊0Á Ë
;◊0◊0Ë È
float
ÿ0ÿ0 '
adjustedHorizontalAdvance
ÿ0ÿ0 +
=
ÿ0ÿ0, -

m_textInfo
ÿ0ÿ0. 8
.
ÿ0ÿ08 9
lineInfo
ÿ0ÿ09 A
[
ÿ0ÿ0A B
m_lineNumber
ÿ0ÿ0B N
]
ÿ0ÿ0N O
.
ÿ0ÿ0O P

maxAdvance
ÿ0ÿ0P Z
=
ÿ0ÿ0[ \

m_textInfo
ÿ0ÿ0] g
.
ÿ0ÿ0g h
characterInfo
ÿ0ÿ0h u
[
ÿ0ÿ0u v+
m_lastVisibleCharacterOfLineÿ0ÿ0v í
]ÿ0ÿ0í ì
.ÿ0ÿ0ì î
xAdvanceÿ0ÿ0î ú
+ÿ0ÿ0ù û
(ÿ0ÿ0ü †
m_isRightToLeftÿ0ÿ0† Ø
?ÿ0ÿ0∞ ± 
maxAdvanceOffsetÿ0ÿ0≤ ¬
:ÿ0ÿ0√ ƒ
-ÿ0ÿ0≈ ∆ 
maxAdvanceOffsetÿ0ÿ0« ◊
)ÿ0ÿ0◊ ÿ
;ÿ0ÿ0ÿ Ÿ

m_textInfo
Ÿ0Ÿ0 
.
Ÿ0Ÿ0 
characterInfo
Ÿ0Ÿ0 $
[
Ÿ0Ÿ0$ % 
lastCharacterIndex
Ÿ0Ÿ0% 7
]
Ÿ0Ÿ07 8
.
Ÿ0Ÿ08 9
xAdvance
Ÿ0Ÿ09 A
=
Ÿ0Ÿ0B C'
adjustedHorizontalAdvance
Ÿ0Ÿ0D ]
;
Ÿ0Ÿ0] ^

m_textInfo
€0€0 
.
€0€0 
lineInfo
€0€0 
[
€0€0  
m_lineNumber
€0€0  ,
]
€0€0, -
.
€0€0- .
baseline
€0€0. 6
=
€0€07 8
$num
€0€09 :
-
€0€0; <
m_lineOffset
€0€0= I
;
€0€0I J

m_textInfo
‹0‹0 
.
‹0‹0 
lineInfo
‹0‹0 
[
‹0‹0  
m_lineNumber
‹0‹0  ,
]
‹0‹0, -
.
‹0‹0- .
ascender
‹0‹0. 6
=
‹0‹07 8
lineAscender
‹0‹09 E
;
‹0‹0E F

m_textInfo
›0›0 
.
›0›0 
lineInfo
›0›0 
[
›0›0  
m_lineNumber
›0›0  ,
]
›0›0, -
.
›0›0- .
	descender
›0›0. 7
=
›0›08 9
lineDescender
›0›0: G
;
›0›0G H

m_textInfo
ﬁ0ﬁ0 
.
ﬁ0ﬁ0 
lineInfo
ﬁ0ﬁ0 
[
ﬁ0ﬁ0  
m_lineNumber
ﬁ0ﬁ0  ,
]
ﬁ0ﬁ0, -
.
ﬁ0ﬁ0- .

lineHeight
ﬁ0ﬁ0. 8
=
ﬁ0ﬁ09 :
lineAscender
ﬁ0ﬁ0; G
-
ﬁ0ﬁ0H I
lineDescender
ﬁ0ﬁ0J W
+
ﬁ0ﬁ0X Y
lineGap
ﬁ0ﬁ0Z a
*
ﬁ0ﬁ0b c
	baseScale
ﬁ0ﬁ0d m
;
ﬁ0ﬁ0m n$
m_firstCharacterOfLine
‡0‡0 "
=
‡0‡0# $
m_characterCount
‡0‡0% 5
;
‡0‡05 6)
m_lineVisibleCharacterCount
·0·0 '
=
·0·0( )
$num
·0·0* +
;
·0·0+ ,#
SaveWordWrappingState
‰0‰0 !
(
‰0‰0! "
ref
‰0‰0" %
m_SavedLineState
‰0‰0& 6
,
‰0‰06 7
i
‰0‰08 9
,
‰0‰09 :
m_characterCount
‰0‰0; K
-
‰0‰0L M
$num
‰0‰0N O
)
‰0‰0O P
;
‰0‰0P Q
m_lineNumber
Ê0Ê0 
+=
Ê0Ê0 
$num
Ê0Ê0 
;
Ê0Ê0 
if
È0È0 
(
È0È0 
m_lineNumber
È0È0 
>=
È0È0 

m_textInfo
È0È0  *
.
È0È0* +
lineInfo
È0È0+ 3
.
È0È03 4
Length
È0È04 :
)
È0È0: ;
ResizeLineExtents
Í0Í0 !
(
Í0Í0! "
m_lineNumber
Í0Í0" .
)
Í0Í0. /
;
Í0Í0/ 0
if
Ì0Ì0 
(
Ì0Ì0 
m_lineHeight
Ì0Ì0 
==
Ì0Ì0 
TMP_Math
Ì0Ì0  (
.
Ì0Ì0( )
FLOAT_UNSET
Ì0Ì0) 4
)
Ì0Ì04 5
{
Ó0Ó0 
float
Ô0Ô0 
ascender
Ô0Ô0 
=
Ô0Ô0  

m_textInfo
Ô0Ô0! +
.
Ô0Ô0+ ,
characterInfo
Ô0Ô0, 9
[
Ô0Ô09 :
m_characterCount
Ô0Ô0: J
]
Ô0Ô0J K
.
Ô0Ô0K L
adjustedAscender
Ô0Ô0L \
;
Ô0Ô0\ ]
float
00 
lineOffsetDelta
00 %
=
00& '
$num
00( )
-
00* + 
m_maxLineDescender
00, >
+
00? @
ascender
00A I
+
00J K
(
00L M
lineGap
00M T
+
00U V 
m_lineSpacingDelta
00W i
)
00i j
*
00k l
	baseScale
00m v
+
00w x
m_lineSpacing00y Ü
*00á à
currentEmScale00â ó
;00ó ò
m_lineOffset
Ò0Ò0 
+=
Ò0Ò0 
lineOffsetDelta
Ò0Ò0  /
;
Ò0Ò0/ 0#
m_startOfLineAscender
Û0Û0 %
=
Û0Û0& '
ascender
Û0Û0( 0
;
Û0Û00 1
}
Ù0Ù0 
else
ı0ı0 
{
ˆ0ˆ0 
m_lineOffset
˜0˜0 
+=
˜0˜0 
m_lineHeight
˜0˜0  ,
+
˜0˜0- .
m_lineSpacing
˜0˜0/ <
*
˜0˜0= >
currentEmScale
˜0˜0? M
;
˜0˜0M N
}
¯0¯0 
m_maxLineAscender
˙0˙0 
=
˙0˙0 "
k_LargeNegativeFloat
˙0˙0  4
;
˙0˙04 5 
m_maxLineDescender
˚0˚0 
=
˚0˚0  "
k_LargePositiveFloat
˚0˚0! 5
;
˚0˚05 6

m_xAdvance
˝0˝0 
=
˝0˝0 
$num
˝0˝0 
+
˝0˝0 

tag_Indent
˝0˝0 '
;
˝0˝0' (
}
˛0˛0 	
	protected
á1á1 
void
á1á1 #
SaveWordWrappingState
á1á1 ,
(
á1á1, -
ref
á1á1- 0
WordWrapState
á1á11 >
state
á1á1? D
,
á1á1D E
int
á1á1F I
index
á1á1J O
,
á1á1O P
int
á1á1Q T
count
á1á1U Z
)
á1á1Z [
{
à1à1 	
state
ä1ä1 
.
ä1ä1 
currentFontAsset
ä1ä1 "
=
ä1ä1# $ 
m_currentFontAsset
ä1ä1% 7
;
ä1ä17 8
state
ã1ã1 
.
ã1ã1  
currentSpriteAsset
ã1ã1 $
=
ã1ã1% &"
m_currentSpriteAsset
ã1ã1' ;
;
ã1ã1; <
state
å1å1 
.
å1å1 
currentMaterial
å1å1 !
=
å1å1" #
m_currentMaterial
å1å1$ 5
;
å1å15 6
state
ç1ç1 
.
ç1ç1 "
currentMaterialIndex
ç1ç1 &
=
ç1ç1' ($
m_currentMaterialIndex
ç1ç1) ?
;
ç1ç1? @
state
è1è1 
.
è1è1  
previous_WordBreak
è1è1 $
=
è1è1% &
index
è1è1' ,
;
è1è1, -
state
ê1ê1 
.
ê1ê1 "
total_CharacterCount
ê1ê1 &
=
ê1ê1' (
count
ê1ê1) .
;
ê1ê1. /
state
ë1ë1 
.
ë1ë1 $
visible_CharacterCount
ë1ë1 (
=
ë1ë1) *)
m_lineVisibleCharacterCount
ë1ë1+ F
;
ë1ë1F G
state
î1î1 
.
î1î1 
visible_LinkCount
î1î1 #
=
î1î1$ %

m_textInfo
î1î1& 0
.
î1î10 1
	linkCount
î1î11 :
;
î1î1: ;
state
ñ1ñ1 
.
ñ1ñ1 !
firstCharacterIndex
ñ1ñ1 %
=
ñ1ñ1& '$
m_firstCharacterOfLine
ñ1ñ1( >
;
ñ1ñ1> ?
state
ó1ó1 
.
ó1ó1 (
firstVisibleCharacterIndex
ó1ó1 ,
=
ó1ó1- .+
m_firstVisibleCharacterOfLine
ó1ó1/ L
;
ó1ó1L M
state
ò1ò1 
.
ò1ò1 "
lastVisibleCharIndex
ò1ò1 &
=
ò1ò1' (*
m_lastVisibleCharacterOfLine
ò1ò1) E
;
ò1ò1E F
state
ö1ö1 
.
ö1ö1 
	fontStyle
ö1ö1 
=
ö1ö1 !
m_FontStyleInternal
ö1ö1 1
;
ö1ö11 2
state
õ1õ1 
.
õ1õ1 
italicAngle
õ1õ1 
=
õ1õ1 
m_ItalicAngle
õ1õ1  -
;
õ1õ1- .
state
ú1ú1 
.
ú1ú1 
	fontScale
ú1ú1 
=
ú1ú1 
m_fontScale
ú1ú1 )
;
ú1ú1) *
state
û1û1 
.
û1û1 !
fontScaleMultiplier
û1û1 %
=
û1û1& '#
m_fontScaleMultiplier
û1û1( =
;
û1û1= >
state
ü1ü1 
.
ü1ü1 
currentFontSize
ü1ü1 !
=
ü1ü1" #
m_currentFontSize
ü1ü1$ 5
;
ü1ü15 6
state
°1°1 
.
°1°1 
xAdvance
°1°1 
=
°1°1 

m_xAdvance
°1°1 '
;
°1°1' (
state
¢1¢1 
.
¢1¢1 
maxCapHeight
¢1¢1 
=
¢1¢1  
m_maxCapHeight
¢1¢1! /
;
¢1¢1/ 0
state
£1£1 
.
£1£1 
maxAscender
£1£1 
=
£1£1 
m_maxTextAscender
£1£1  1
;
£1£11 2
state
§1§1 
.
§1§1 
maxDescender
§1§1 
=
§1§1   
m_ElementDescender
§1§1! 3
;
§1§13 4
state
•1•1 
.
•1•1 !
startOfLineAscender
•1•1 %
=
•1•1& '#
m_startOfLineAscender
•1•1( =
;
•1•1= >
state
¶1¶1 
.
¶1¶1 
maxLineAscender
¶1¶1 !
=
¶1¶1" #
m_maxLineAscender
¶1¶1$ 5
;
¶1¶15 6
state
ß1ß1 
.
ß1ß1 
maxLineDescender
ß1ß1 "
=
ß1ß1# $ 
m_maxLineDescender
ß1ß1% 7
;
ß1ß17 8
state
®1®1 
.
®1®1 
pageAscender
®1®1 
=
®1®1  
m_PageAscender
®1®1! /
;
®1®1/ 0
state
™1™1 
.
™1™1 
preferredWidth
™1™1  
=
™1™1! "
m_preferredWidth
™1™1# 3
;
™1™13 4
state
´1´1 
.
´1´1 
preferredHeight
´1´1 !
=
´1´1" #
m_preferredHeight
´1´1$ 5
;
´1´15 6
state
¨1¨1 
.
¨1¨1 
meshExtents
¨1¨1 
=
¨1¨1 
m_meshExtents
¨1¨1  -
;
¨1¨1- .
state
Æ1Æ1 
.
Æ1Æ1 

lineNumber
Æ1Æ1 
=
Æ1Æ1 
m_lineNumber
Æ1Æ1 +
;
Æ1Æ1+ ,
state
Ø1Ø1 
.
Ø1Ø1 

lineOffset
Ø1Ø1 
=
Ø1Ø1 
m_lineOffset
Ø1Ø1 +
;
Ø1Ø1+ ,
state
∞1∞1 
.
∞1∞1 
baselineOffset
∞1∞1  
=
∞1∞1! "
m_baselineOffset
∞1∞1# 3
;
∞1∞13 4
state
±1±1 
.
±1±1 !
isDrivenLineSpacing
±1±1 %
=
±1±1& '#
m_IsDrivenLineSpacing
±1±1( =
;
±1±1= >
state
≤1≤1 
.
≤1≤1 .
 glyphHorizontalAdvanceAdjustment
≤1≤1 2
=
≤1≤13 40
"m_GlyphHorizontalAdvanceAdjustment
≤1≤15 W
;
≤1≤1W X
state
¥1¥1 
.
¥1¥1 
cSpace
¥1¥1 
=
¥1¥1 

m_cSpacing
¥1¥1 %
;
¥1¥1% &
state
µ1µ1 
.
µ1µ1 
mSpace
µ1µ1 
=
µ1µ1 
m_monoSpacing
µ1µ1 (
;
µ1µ1( )
state
∑1∑1 
.
∑1∑1 !
horizontalAlignment
∑1∑1 %
=
∑1∑1& '!
m_lineJustification
∑1∑1( ;
;
∑1∑1; <
state
∏1∏1 
.
∏1∏1 

marginLeft
∏1∏1 
=
∏1∏1 
m_marginLeft
∏1∏1 +
;
∏1∏1+ ,
state
π1π1 
.
π1π1 
marginRight
π1π1 
=
π1π1 
m_marginRight
π1π1  -
;
π1π1- .
state
ª1ª1 
.
ª1ª1 
vertexColor
ª1ª1 
=
ª1ª1 
m_htmlColor
ª1ª1  +
;
ª1ª1+ ,
state
º1º1 
.
º1º1 
underlineColor
º1º1  
=
º1º1! "
m_underlineColor
º1º1# 3
;
º1º13 4
state
Ω1Ω1 
.
Ω1Ω1  
strikethroughColor
Ω1Ω1 $
=
Ω1Ω1% &"
m_strikethroughColor
Ω1Ω1' ;
;
Ω1Ω1; <
state
ø1ø1 
.
ø1ø1  
isNonBreakingSpace
ø1ø1 $
=
ø1ø1% &"
m_isNonBreakingSpace
ø1ø1' ;
;
ø1ø1; <
state
¿1¿1 
.
¿1¿1 
tagNoParsing
¿1¿1 
=
¿1¿1  
tag_NoParsing
¿1¿1! .
;
¿1¿1. /
state
√1√1 
.
√1√1 
basicStyleStack
√1√1 !
=
√1√1" #
m_fontStyleStack
√1√1$ 4
;
√1√14 5
state
ƒ1ƒ1 
.
ƒ1ƒ1 
italicAngleStack
ƒ1ƒ1 "
=
ƒ1ƒ1# $ 
m_ItalicAngleStack
ƒ1ƒ1% 7
;
ƒ1ƒ17 8
state
≈1≈1 
.
≈1≈1 

colorStack
≈1≈1 
=
≈1≈1 
m_colorStack
≈1≈1 +
;
≈1≈1+ ,
state
∆1∆1 
.
∆1∆1 !
underlineColorStack
∆1∆1 %
=
∆1∆1& '#
m_underlineColorStack
∆1∆1( =
;
∆1∆1= >
state
«1«1 
.
«1«1 %
strikethroughColorStack
«1«1 )
=
«1«1* +'
m_strikethroughColorStack
«1«1, E
;
«1«1E F
state
»1»1 
.
»1»1 !
highlightStateStack
»1»1 %
=
»1»1& '#
m_HighlightStateStack
»1»1( =
;
»1»1= >
state
…1…1 
.
…1…1  
colorGradientStack
…1…1 $
=
…1…1% &"
m_colorGradientStack
…1…1' ;
;
…1…1; <
state
 1 1 
.
 1 1 
	sizeStack
 1 1 
=
 1 1 
m_sizeStack
 1 1 )
;
 1 1) *
state
À1À1 
.
À1À1 
indentStack
À1À1 
=
À1À1 
m_indentStack
À1À1  -
;
À1À1- .
state
Ã1Ã1 
.
Ã1Ã1 
fontWeightStack
Ã1Ã1 !
=
Ã1Ã1" #
m_FontWeightStack
Ã1Ã1$ 5
;
Ã1Ã15 6
state
œ1œ1 
.
œ1œ1 
baselineStack
œ1œ1 
=
œ1œ1  !#
m_baselineOffsetStack
œ1œ1" 7
;
œ1œ17 8
state
–1–1 
.
–1–1 
actionStack
–1–1 
=
–1–1 
m_actionStack
–1–1  -
;
–1–1- .
state
—1—1 
.
—1—1 $
materialReferenceStack
—1—1 (
=
—1—1) *&
m_materialReferenceStack
—1—1+ C
;
—1—1C D
state
“1“1 
.
“1“1 $
lineJustificationStack
“1“1 (
=
“1“1) *&
m_lineJustificationStack
“1“1+ C
;
“1“1C D
state
’1’1 
.
’1’1 
spriteAnimationID
’1’1 #
=
’1’1$ %!
m_spriteAnimationID
’1’1& 9
;
’1’19 :
if
◊1◊1 
(
◊1◊1 
m_lineNumber
◊1◊1 
<
◊1◊1 

m_textInfo
◊1◊1 )
.
◊1◊1) *
lineInfo
◊1◊1* 2
.
◊1◊12 3
Length
◊1◊13 9
)
◊1◊19 :
state
ÿ1ÿ1 
.
ÿ1ÿ1 
lineInfo
ÿ1ÿ1 
=
ÿ1ÿ1  

m_textInfo
ÿ1ÿ1! +
.
ÿ1ÿ1+ ,
lineInfo
ÿ1ÿ1, 4
[
ÿ1ÿ14 5
m_lineNumber
ÿ1ÿ15 A
]
ÿ1ÿ1A B
;
ÿ1ÿ1B C
}
Ÿ1Ÿ1 	
	protected
·1·1 
int
·1·1 &
RestoreWordWrappingState
·1·1 .
(
·1·1. /
ref
·1·1/ 2
WordWrapState
·1·13 @
state
·1·1A F
)
·1·1F G
{
‚1‚1 	
int
„1„1 
index
„1„1 
=
„1„1 
state
„1„1 
.
„1„1  
previous_WordBreak
„1„1 0
;
„1„10 1 
m_currentFontAsset
Ê1Ê1 
=
Ê1Ê1  
state
Ê1Ê1! &
.
Ê1Ê1& '
currentFontAsset
Ê1Ê1' 7
;
Ê1Ê17 8"
m_currentSpriteAsset
Á1Á1  
=
Á1Á1! "
state
Á1Á1# (
.
Á1Á1( ) 
currentSpriteAsset
Á1Á1) ;
;
Á1Á1; <
m_currentMaterial
Ë1Ë1 
=
Ë1Ë1 
state
Ë1Ë1  %
.
Ë1Ë1% &
currentMaterial
Ë1Ë1& 5
;
Ë1Ë15 6$
m_currentMaterialIndex
È1È1 "
=
È1È1# $
state
È1È1% *
.
È1È1* +"
currentMaterialIndex
È1È1+ ?
;
È1È1? @
m_characterCount
Î1Î1 
=
Î1Î1 
state
Î1Î1 $
.
Î1Î1$ %"
total_CharacterCount
Î1Î1% 9
+
Î1Î1: ;
$num
Î1Î1< =
;
Î1Î1= >)
m_lineVisibleCharacterCount
Ï1Ï1 '
=
Ï1Ï1( )
state
Ï1Ï1* /
.
Ï1Ï1/ 0$
visible_CharacterCount
Ï1Ï10 F
;
Ï1Ï1F G

m_textInfo
Ô1Ô1 
.
Ô1Ô1 
	linkCount
Ô1Ô1  
=
Ô1Ô1! "
state
Ô1Ô1# (
.
Ô1Ô1( )
visible_LinkCount
Ô1Ô1) :
;
Ô1Ô1: ;$
m_firstCharacterOfLine
Ò1Ò1 "
=
Ò1Ò1# $
state
Ò1Ò1% *
.
Ò1Ò1* +!
firstCharacterIndex
Ò1Ò1+ >
;
Ò1Ò1> ?+
m_firstVisibleCharacterOfLine
Ú1Ú1 )
=
Ú1Ú1* +
state
Ú1Ú1, 1
.
Ú1Ú11 2(
firstVisibleCharacterIndex
Ú1Ú12 L
;
Ú1Ú1L M*
m_lastVisibleCharacterOfLine
Û1Û1 (
=
Û1Û1) *
state
Û1Û1+ 0
.
Û1Û10 1"
lastVisibleCharIndex
Û1Û11 E
;
Û1Û1E F!
m_FontStyleInternal
ı1ı1 
=
ı1ı1  !
state
ı1ı1" '
.
ı1ı1' (
	fontStyle
ı1ı1( 1
;
ı1ı11 2
m_ItalicAngle
ˆ1ˆ1 
=
ˆ1ˆ1 
state
ˆ1ˆ1 !
.
ˆ1ˆ1! "
italicAngle
ˆ1ˆ1" -
;
ˆ1ˆ1- .
m_fontScale
˜1˜1 
=
˜1˜1 
state
˜1˜1 
.
˜1˜1  
	fontScale
˜1˜1  )
;
˜1˜1) *#
m_fontScaleMultiplier
¯1¯1 !
=
¯1¯1" #
state
¯1¯1$ )
.
¯1¯1) *!
fontScaleMultiplier
¯1¯1* =
;
¯1¯1= >
m_currentFontSize
˙1˙1 
=
˙1˙1 
state
˙1˙1  %
.
˙1˙1% &
currentFontSize
˙1˙1& 5
;
˙1˙15 6

m_xAdvance
¸1¸1 
=
¸1¸1 
state
¸1¸1 
.
¸1¸1 
xAdvance
¸1¸1 '
;
¸1¸1' (
m_maxCapHeight
˝1˝1 
=
˝1˝1 
state
˝1˝1 "
.
˝1˝1" #
maxCapHeight
˝1˝1# /
;
˝1˝1/ 0
m_maxTextAscender
˛1˛1 
=
˛1˛1 
state
˛1˛1  %
.
˛1˛1% &
maxAscender
˛1˛1& 1
;
˛1˛11 2 
m_ElementDescender
ˇ1ˇ1 
=
ˇ1ˇ1  
state
ˇ1ˇ1! &
.
ˇ1ˇ1& '
maxDescender
ˇ1ˇ1' 3
;
ˇ1ˇ13 4#
m_startOfLineAscender
Ä2Ä2 !
=
Ä2Ä2" #
state
Ä2Ä2$ )
.
Ä2Ä2) *!
startOfLineAscender
Ä2Ä2* =
;
Ä2Ä2= >
m_maxLineAscender
Å2Å2 
=
Å2Å2 
state
Å2Å2  %
.
Å2Å2% &
maxLineAscender
Å2Å2& 5
;
Å2Å25 6 
m_maxLineDescender
Ç2Ç2 
=
Ç2Ç2  
state
Ç2Ç2! &
.
Ç2Ç2& '
maxLineDescender
Ç2Ç2' 7
;
Ç2Ç27 8
m_PageAscender
É2É2 
=
É2É2 
state
É2É2 "
.
É2É2" #
pageAscender
É2É2# /
;
É2É2/ 0
m_preferredWidth
Ö2Ö2 
=
Ö2Ö2 
state
Ö2Ö2 $
.
Ö2Ö2$ %
preferredWidth
Ö2Ö2% 3
;
Ö2Ö23 4
m_preferredHeight
Ü2Ü2 
=
Ü2Ü2 
state
Ü2Ü2  %
.
Ü2Ü2% &
preferredHeight
Ü2Ü2& 5
;
Ü2Ü25 6
m_meshExtents
á2á2 
=
á2á2 
state
á2á2 !
.
á2á2! "
meshExtents
á2á2" -
;
á2á2- .
m_lineNumber
â2â2 
=
â2â2 
state
â2â2  
.
â2â2  !

lineNumber
â2â2! +
;
â2â2+ ,
m_lineOffset
ä2ä2 
=
ä2ä2 
state
ä2ä2  
.
ä2ä2  !

lineOffset
ä2ä2! +
;
ä2ä2+ ,
m_baselineOffset
ã2ã2 
=
ã2ã2 
state
ã2ã2 $
.
ã2ã2$ %
baselineOffset
ã2ã2% 3
;
ã2ã23 4#
m_IsDrivenLineSpacing
å2å2 !
=
å2å2" #
state
å2å2$ )
.
å2å2) *!
isDrivenLineSpacing
å2å2* =
;
å2å2= >0
"m_GlyphHorizontalAdvanceAdjustment
ç2ç2 .
=
ç2ç2/ 0
state
ç2ç21 6
.
ç2ç26 7.
 glyphHorizontalAdvanceAdjustment
ç2ç27 W
;
ç2ç2W X

m_cSpacing
è2è2 
=
è2è2 
state
è2è2 
.
è2è2 
cSpace
è2è2 %
;
è2è2% &
m_monoSpacing
ê2ê2 
=
ê2ê2 
state
ê2ê2 !
.
ê2ê2! "
mSpace
ê2ê2" (
;
ê2ê2( )!
m_lineJustification
í2í2 
=
í2í2  !
state
í2í2" '
.
í2í2' (!
horizontalAlignment
í2í2( ;
;
í2í2; <
m_marginLeft
ì2ì2 
=
ì2ì2 
state
ì2ì2  
.
ì2ì2  !

marginLeft
ì2ì2! +
;
ì2ì2+ ,
m_marginRight
î2î2 
=
î2î2 
state
î2î2 !
.
î2î2! "
marginRight
î2î2" -
;
î2î2- .
m_htmlColor
ñ2ñ2 
=
ñ2ñ2 
state
ñ2ñ2 
.
ñ2ñ2  
vertexColor
ñ2ñ2  +
;
ñ2ñ2+ ,
m_underlineColor
ó2ó2 
=
ó2ó2 
state
ó2ó2 $
.
ó2ó2$ %
underlineColor
ó2ó2% 3
;
ó2ó23 4"
m_strikethroughColor
ò2ò2  
=
ò2ò2! "
state
ò2ò2# (
.
ò2ò2( ) 
strikethroughColor
ò2ò2) ;
;
ò2ò2; <"
m_isNonBreakingSpace
ö2ö2  
=
ö2ö2! "
state
ö2ö2# (
.
ö2ö2( ) 
isNonBreakingSpace
ö2ö2) ;
;
ö2ö2; <
tag_NoParsing
õ2õ2 
=
õ2õ2 
state
õ2õ2 !
.
õ2õ2! "
tagNoParsing
õ2õ2" .
;
õ2õ2. /
m_fontStyleStack
û2û2 
=
û2û2 
state
û2û2 $
.
û2û2$ %
basicStyleStack
û2û2% 4
;
û2û24 5 
m_ItalicAngleStack
ü2ü2 
=
ü2ü2  
state
ü2ü2! &
.
ü2ü2& '
italicAngleStack
ü2ü2' 7
;
ü2ü27 8
m_colorStack
†2†2 
=
†2†2 
state
†2†2  
.
†2†2  !

colorStack
†2†2! +
;
†2†2+ ,#
m_underlineColorStack
°2°2 !
=
°2°2" #
state
°2°2$ )
.
°2°2) *!
underlineColorStack
°2°2* =
;
°2°2= >'
m_strikethroughColorStack
¢2¢2 %
=
¢2¢2& '
state
¢2¢2( -
.
¢2¢2- .%
strikethroughColorStack
¢2¢2. E
;
¢2¢2E F#
m_HighlightStateStack
£2£2 !
=
£2£2" #
state
£2£2$ )
.
£2£2) *!
highlightStateStack
£2£2* =
;
£2£2= >"
m_colorGradientStack
§2§2  
=
§2§2! "
state
§2§2# (
.
§2§2( ) 
colorGradientStack
§2§2) ;
;
§2§2; <
m_sizeStack
•2•2 
=
•2•2 
state
•2•2 
.
•2•2  
	sizeStack
•2•2  )
;
•2•2) *
m_indentStack
¶2¶2 
=
¶2¶2 
state
¶2¶2 !
.
¶2¶2! "
indentStack
¶2¶2" -
;
¶2¶2- .
m_FontWeightStack
ß2ß2 
=
ß2ß2 
state
ß2ß2  %
.
ß2ß2% &
fontWeightStack
ß2ß2& 5
;
ß2ß25 6#
m_baselineOffsetStack
™2™2 !
=
™2™2" #
state
™2™2$ )
.
™2™2) *
baselineStack
™2™2* 7
;
™2™27 8
m_actionStack
´2´2 
=
´2´2 
state
´2´2 !
.
´2´2! "
actionStack
´2´2" -
;
´2´2- .&
m_materialReferenceStack
¨2¨2 $
=
¨2¨2% &
state
¨2¨2' ,
.
¨2¨2, -$
materialReferenceStack
¨2¨2- C
;
¨2¨2C D&
m_lineJustificationStack
≠2≠2 $
=
≠2≠2% &
state
≠2≠2' ,
.
≠2≠2, -$
lineJustificationStack
≠2≠2- C
;
≠2≠2C D!
m_spriteAnimationID
∞2∞2 
=
∞2∞2  !
state
∞2∞2" '
.
∞2∞2' (
spriteAnimationID
∞2∞2( 9
;
∞2∞29 :
if
≤2≤2 
(
≤2≤2 
m_lineNumber
≤2≤2 
<
≤2≤2 

m_textInfo
≤2≤2 )
.
≤2≤2) *
lineInfo
≤2≤2* 2
.
≤2≤22 3
Length
≤2≤23 9
)
≤2≤29 :

m_textInfo
≥2≥2 
.
≥2≥2 
lineInfo
≥2≥2 #
[
≥2≥2# $
m_lineNumber
≥2≥2$ 0
]
≥2≥20 1
=
≥2≥22 3
state
≥2≥24 9
.
≥2≥29 :
lineInfo
≥2≥2: B
;
≥2≥2B C
return
µ2µ2 
index
µ2µ2 
;
µ2µ2 
}
∂2∂2 	
	protected
æ2æ2 
virtual
æ2æ2 
void
æ2æ2 !
SaveGlyphVertexInfo
æ2æ2 2
(
æ2æ22 3
float
æ2æ23 8
padding
æ2æ29 @
,
æ2æ2@ A
float
æ2æ2B G
style_padding
æ2æ2H U
,
æ2æ2U V
Color32
æ2æ2W ^
vertexColor
æ2æ2_ j
)
æ2æ2j k
{
ø2ø2 	

m_textInfo
¬2¬2 
.
¬2¬2 
characterInfo
¬2¬2 $
[
¬2¬2$ %
m_characterCount
¬2¬2% 5
]
¬2¬25 6
.
¬2¬26 7
	vertex_BL
¬2¬27 @
.
¬2¬2@ A
position
¬2¬2A I
=
¬2¬2J K

m_textInfo
¬2¬2L V
.
¬2¬2V W
characterInfo
¬2¬2W d
[
¬2¬2d e
m_characterCount
¬2¬2e u
]
¬2¬2u v
.
¬2¬2v w

bottomLeft¬2¬2w Å
;¬2¬2Å Ç

m_textInfo
√2√2 
.
√2√2 
characterInfo
√2√2 $
[
√2√2$ %
m_characterCount
√2√2% 5
]
√2√25 6
.
√2√26 7
	vertex_TL
√2√27 @
.
√2√2@ A
position
√2√2A I
=
√2√2J K

m_textInfo
√2√2L V
.
√2√2V W
characterInfo
√2√2W d
[
√2√2d e
m_characterCount
√2√2e u
]
√2√2u v
.
√2√2v w
topLeft
√2√2w ~
;
√2√2~ 

m_textInfo
ƒ2ƒ2 
.
ƒ2ƒ2 
characterInfo
ƒ2ƒ2 $
[
ƒ2ƒ2$ %
m_characterCount
ƒ2ƒ2% 5
]
ƒ2ƒ25 6
.
ƒ2ƒ26 7
	vertex_TR
ƒ2ƒ27 @
.
ƒ2ƒ2@ A
position
ƒ2ƒ2A I
=
ƒ2ƒ2J K

m_textInfo
ƒ2ƒ2L V
.
ƒ2ƒ2V W
characterInfo
ƒ2ƒ2W d
[
ƒ2ƒ2d e
m_characterCount
ƒ2ƒ2e u
]
ƒ2ƒ2u v
.
ƒ2ƒ2v w
topRight
ƒ2ƒ2w 
;ƒ2ƒ2 Ä

m_textInfo
≈2≈2 
.
≈2≈2 
characterInfo
≈2≈2 $
[
≈2≈2$ %
m_characterCount
≈2≈2% 5
]
≈2≈25 6
.
≈2≈26 7
	vertex_BR
≈2≈27 @
.
≈2≈2@ A
position
≈2≈2A I
=
≈2≈2J K

m_textInfo
≈2≈2L V
.
≈2≈2V W
characterInfo
≈2≈2W d
[
≈2≈2d e
m_characterCount
≈2≈2e u
]
≈2≈2u v
.
≈2≈2v w
bottomRight≈2≈2w Ç
;≈2≈2Ç É
vertexColor
À2À2 
.
À2À2 
a
À2À2 
=
À2À2 
m_fontColor32
À2À2 )
.
À2À2) *
a
À2À2* +
<
À2À2, -
vertexColor
À2À2. 9
.
À2À29 :
a
À2À2: ;
?
À2À2< =
m_fontColor32
À2À2> K
.
À2À2K L
a
À2À2L M
:
À2À2N O
vertexColor
À2À2P [
.
À2À2[ \
a
À2À2\ ]
;
À2À2] ^
if
Œ2Œ2 
(
Œ2Œ2 
!
Œ2Œ2 $
m_enableVertexGradient
Œ2Œ2 '
)
Œ2Œ2' (
{
œ2œ2 

m_textInfo
–2–2 
.
–2–2 
characterInfo
–2–2 (
[
–2–2( )
m_characterCount
–2–2) 9
]
–2–29 :
.
–2–2: ;
	vertex_BL
–2–2; D
.
–2–2D E
color
–2–2E J
=
–2–2K L
vertexColor
–2–2M X
;
–2–2X Y

m_textInfo
—2—2 
.
—2—2 
characterInfo
—2—2 (
[
—2—2( )
m_characterCount
—2—2) 9
]
—2—29 :
.
—2—2: ;
	vertex_TL
—2—2; D
.
—2—2D E
color
—2—2E J
=
—2—2K L
vertexColor
—2—2M X
;
—2—2X Y

m_textInfo
“2“2 
.
“2“2 
characterInfo
“2“2 (
[
“2“2( )
m_characterCount
“2“2) 9
]
“2“29 :
.
“2“2: ;
	vertex_TR
“2“2; D
.
“2“2D E
color
“2“2E J
=
“2“2K L
vertexColor
“2“2M X
;
“2“2X Y

m_textInfo
”2”2 
.
”2”2 
characterInfo
”2”2 (
[
”2”2( )
m_characterCount
”2”2) 9
]
”2”29 :
.
”2”2: ;
	vertex_BR
”2”2; D
.
”2”2D E
color
”2”2E J
=
”2”2K L
vertexColor
”2”2M X
;
”2”2X Y
}
‘2‘2 
else
’2’2 
{
÷2÷2 
if
◊2◊2 
(
◊2◊2 
!
◊2◊2 "
m_overrideHtmlColors
◊2◊2 )
&&
◊2◊2* ,
m_colorStack
◊2◊2- 9
.
◊2◊29 :
index
◊2◊2: ?
>
◊2◊2@ A
$num
◊2◊2B C
)
◊2◊2C D
{
ÿ2ÿ2 

m_textInfo
Ÿ2Ÿ2 
.
Ÿ2Ÿ2 
characterInfo
Ÿ2Ÿ2 ,
[
Ÿ2Ÿ2, -
m_characterCount
Ÿ2Ÿ2- =
]
Ÿ2Ÿ2= >
.
Ÿ2Ÿ2> ?
	vertex_BL
Ÿ2Ÿ2? H
.
Ÿ2Ÿ2H I
color
Ÿ2Ÿ2I N
=
Ÿ2Ÿ2O P
vertexColor
Ÿ2Ÿ2Q \
;
Ÿ2Ÿ2\ ]

m_textInfo
⁄2⁄2 
.
⁄2⁄2 
characterInfo
⁄2⁄2 ,
[
⁄2⁄2, -
m_characterCount
⁄2⁄2- =
]
⁄2⁄2= >
.
⁄2⁄2> ?
	vertex_TL
⁄2⁄2? H
.
⁄2⁄2H I
color
⁄2⁄2I N
=
⁄2⁄2O P
vertexColor
⁄2⁄2Q \
;
⁄2⁄2\ ]

m_textInfo
€2€2 
.
€2€2 
characterInfo
€2€2 ,
[
€2€2, -
m_characterCount
€2€2- =
]
€2€2= >
.
€2€2> ?
	vertex_TR
€2€2? H
.
€2€2H I
color
€2€2I N
=
€2€2O P
vertexColor
€2€2Q \
;
€2€2\ ]

m_textInfo
‹2‹2 
.
‹2‹2 
characterInfo
‹2‹2 ,
[
‹2‹2, -
m_characterCount
‹2‹2- =
]
‹2‹2= >
.
‹2‹2> ?
	vertex_BR
‹2‹2? H
.
‹2‹2H I
color
‹2‹2I N
=
‹2‹2O P
vertexColor
‹2‹2Q \
;
‹2‹2\ ]
}
›2›2 
else
ﬁ2ﬁ2 
{
ﬂ2ﬂ2 
if
·2·2 
(
·2·2 '
m_fontColorGradientPreset
·2·2 1
!=
·2·22 4
null
·2·25 9
)
·2·29 :
{
‚2‚2 

m_textInfo
„2„2 "
.
„2„2" #
characterInfo
„2„2# 0
[
„2„20 1
m_characterCount
„2„21 A
]
„2„2A B
.
„2„2B C
	vertex_BL
„2„2C L
.
„2„2L M
color
„2„2M R
=
„2„2S T'
m_fontColorGradientPreset
„2„2U n
.
„2„2n o

bottomLeft
„2„2o y
*
„2„2z {
vertexColor„2„2| á
;„2„2á à

m_textInfo
‰2‰2 "
.
‰2‰2" #
characterInfo
‰2‰2# 0
[
‰2‰20 1
m_characterCount
‰2‰21 A
]
‰2‰2A B
.
‰2‰2B C
	vertex_TL
‰2‰2C L
.
‰2‰2L M
color
‰2‰2M R
=
‰2‰2S T'
m_fontColorGradientPreset
‰2‰2U n
.
‰2‰2n o
topLeft
‰2‰2o v
*
‰2‰2w x
vertexColor‰2‰2y Ñ
;‰2‰2Ñ Ö

m_textInfo
Â2Â2 "
.
Â2Â2" #
characterInfo
Â2Â2# 0
[
Â2Â20 1
m_characterCount
Â2Â21 A
]
Â2Â2A B
.
Â2Â2B C
	vertex_TR
Â2Â2C L
.
Â2Â2L M
color
Â2Â2M R
=
Â2Â2S T'
m_fontColorGradientPreset
Â2Â2U n
.
Â2Â2n o
topRight
Â2Â2o w
*
Â2Â2x y
vertexColorÂ2Â2z Ö
;Â2Â2Ö Ü

m_textInfo
Ê2Ê2 "
.
Ê2Ê2" #
characterInfo
Ê2Ê2# 0
[
Ê2Ê20 1
m_characterCount
Ê2Ê21 A
]
Ê2Ê2A B
.
Ê2Ê2B C
	vertex_BR
Ê2Ê2C L
.
Ê2Ê2L M
color
Ê2Ê2M R
=
Ê2Ê2S T'
m_fontColorGradientPreset
Ê2Ê2U n
.
Ê2Ê2n o
bottomRight
Ê2Ê2o z
*
Ê2Ê2{ |
vertexColorÊ2Ê2} à
;Ê2Ê2à â
}
Á2Á2 
else
Ë2Ë2 
{
È2È2 

m_textInfo
Í2Í2 "
.
Í2Í2" #
characterInfo
Í2Í2# 0
[
Í2Í20 1
m_characterCount
Í2Í21 A
]
Í2Í2A B
.
Í2Í2B C
	vertex_BL
Í2Í2C L
.
Í2Í2L M
color
Í2Í2M R
=
Í2Í2S T!
m_fontColorGradient
Í2Í2U h
.
Í2Í2h i

bottomLeft
Í2Í2i s
*
Í2Í2t u
vertexColorÍ2Í2v Å
;Í2Í2Å Ç

m_textInfo
Î2Î2 "
.
Î2Î2" #
characterInfo
Î2Î2# 0
[
Î2Î20 1
m_characterCount
Î2Î21 A
]
Î2Î2A B
.
Î2Î2B C
	vertex_TL
Î2Î2C L
.
Î2Î2L M
color
Î2Î2M R
=
Î2Î2S T!
m_fontColorGradient
Î2Î2U h
.
Î2Î2h i
topLeft
Î2Î2i p
*
Î2Î2q r
vertexColor
Î2Î2s ~
;
Î2Î2~ 

m_textInfo
Ï2Ï2 "
.
Ï2Ï2" #
characterInfo
Ï2Ï2# 0
[
Ï2Ï20 1
m_characterCount
Ï2Ï21 A
]
Ï2Ï2A B
.
Ï2Ï2B C
	vertex_TR
Ï2Ï2C L
.
Ï2Ï2L M
color
Ï2Ï2M R
=
Ï2Ï2S T!
m_fontColorGradient
Ï2Ï2U h
.
Ï2Ï2h i
topRight
Ï2Ï2i q
*
Ï2Ï2r s
vertexColor
Ï2Ï2t 
;Ï2Ï2 Ä

m_textInfo
Ì2Ì2 "
.
Ì2Ì2" #
characterInfo
Ì2Ì2# 0
[
Ì2Ì20 1
m_characterCount
Ì2Ì21 A
]
Ì2Ì2A B
.
Ì2Ì2B C
	vertex_BR
Ì2Ì2C L
.
Ì2Ì2L M
color
Ì2Ì2M R
=
Ì2Ì2S T!
m_fontColorGradient
Ì2Ì2U h
.
Ì2Ì2h i
bottomRight
Ì2Ì2i t
*
Ì2Ì2u v
vertexColorÌ2Ì2w Ç
;Ì2Ì2Ç É
}
Ó2Ó2 
}
Ô2Ô2 
}
22 
if
Ú2Ú2 
(
Ú2Ú2 #
m_colorGradientPreset
Ú2Ú2 %
!=
Ú2Ú2& (
null
Ú2Ú2) -
)
Ú2Ú2- .
{
Û2Û2 
if
Ù2Ù2 
(
Ù2Ù2 +
m_colorGradientPresetIsTinted
Ù2Ù2 1
)
Ù2Ù21 2
{
ı2ı2 

m_textInfo
ˆ2ˆ2 
.
ˆ2ˆ2 
characterInfo
ˆ2ˆ2 ,
[
ˆ2ˆ2, -
m_characterCount
ˆ2ˆ2- =
]
ˆ2ˆ2= >
.
ˆ2ˆ2> ?
	vertex_BL
ˆ2ˆ2? H
.
ˆ2ˆ2H I
color
ˆ2ˆ2I N
*=
ˆ2ˆ2O Q#
m_colorGradientPreset
ˆ2ˆ2R g
.
ˆ2ˆ2g h

bottomLeft
ˆ2ˆ2h r
;
ˆ2ˆ2r s

m_textInfo
˜2˜2 
.
˜2˜2 
characterInfo
˜2˜2 ,
[
˜2˜2, -
m_characterCount
˜2˜2- =
]
˜2˜2= >
.
˜2˜2> ?
	vertex_TL
˜2˜2? H
.
˜2˜2H I
color
˜2˜2I N
*=
˜2˜2O Q#
m_colorGradientPreset
˜2˜2R g
.
˜2˜2g h
topLeft
˜2˜2h o
;
˜2˜2o p

m_textInfo
¯2¯2 
.
¯2¯2 
characterInfo
¯2¯2 ,
[
¯2¯2, -
m_characterCount
¯2¯2- =
]
¯2¯2= >
.
¯2¯2> ?
	vertex_TR
¯2¯2? H
.
¯2¯2H I
color
¯2¯2I N
*=
¯2¯2O Q#
m_colorGradientPreset
¯2¯2R g
.
¯2¯2g h
topRight
¯2¯2h p
;
¯2¯2p q

m_textInfo
˘2˘2 
.
˘2˘2 
characterInfo
˘2˘2 ,
[
˘2˘2, -
m_characterCount
˘2˘2- =
]
˘2˘2= >
.
˘2˘2> ?
	vertex_BR
˘2˘2? H
.
˘2˘2H I
color
˘2˘2I N
*=
˘2˘2O Q#
m_colorGradientPreset
˘2˘2R g
.
˘2˘2g h
bottomRight
˘2˘2h s
;
˘2˘2s t
}
˙2˙2 
else
˚2˚2 
{
¸2¸2 

m_textInfo
˝2˝2 
.
˝2˝2 
characterInfo
˝2˝2 ,
[
˝2˝2, -
m_characterCount
˝2˝2- =
]
˝2˝2= >
.
˝2˝2> ?
	vertex_BL
˝2˝2? H
.
˝2˝2H I
color
˝2˝2I N
=
˝2˝2O P#
m_colorGradientPreset
˝2˝2Q f
.
˝2˝2f g

bottomLeft
˝2˝2g q
.
˝2˝2q r
MinAlpha
˝2˝2r z
(
˝2˝2z {
vertexColor˝2˝2{ Ü
)˝2˝2Ü á
;˝2˝2á à

m_textInfo
˛2˛2 
.
˛2˛2 
characterInfo
˛2˛2 ,
[
˛2˛2, -
m_characterCount
˛2˛2- =
]
˛2˛2= >
.
˛2˛2> ?
	vertex_TL
˛2˛2? H
.
˛2˛2H I
color
˛2˛2I N
=
˛2˛2O P#
m_colorGradientPreset
˛2˛2Q f
.
˛2˛2f g
topLeft
˛2˛2g n
.
˛2˛2n o
MinAlpha
˛2˛2o w
(
˛2˛2w x
vertexColor˛2˛2x É
)˛2˛2É Ñ
;˛2˛2Ñ Ö

m_textInfo
ˇ2ˇ2 
.
ˇ2ˇ2 
characterInfo
ˇ2ˇ2 ,
[
ˇ2ˇ2, -
m_characterCount
ˇ2ˇ2- =
]
ˇ2ˇ2= >
.
ˇ2ˇ2> ?
	vertex_TR
ˇ2ˇ2? H
.
ˇ2ˇ2H I
color
ˇ2ˇ2I N
=
ˇ2ˇ2O P#
m_colorGradientPreset
ˇ2ˇ2Q f
.
ˇ2ˇ2f g
topRight
ˇ2ˇ2g o
.
ˇ2ˇ2o p
MinAlpha
ˇ2ˇ2p x
(
ˇ2ˇ2x y
vertexColorˇ2ˇ2y Ñ
)ˇ2ˇ2Ñ Ö
;ˇ2ˇ2Ö Ü

m_textInfo
Ä3Ä3 
.
Ä3Ä3 
characterInfo
Ä3Ä3 ,
[
Ä3Ä3, -
m_characterCount
Ä3Ä3- =
]
Ä3Ä3= >
.
Ä3Ä3> ?
	vertex_BR
Ä3Ä3? H
.
Ä3Ä3H I
color
Ä3Ä3I N
=
Ä3Ä3O P#
m_colorGradientPreset
Ä3Ä3Q f
.
Ä3Ä3f g
bottomRight
Ä3Ä3g r
.
Ä3Ä3r s
MinAlpha
Ä3Ä3s {
(
Ä3Ä3{ |
vertexColorÄ3Ä3| á
)Ä3Ä3á à
;Ä3Ä3à â
}
Å3Å3 
}
Ç3Ç3 
if
Ü3Ü3 
(
Ü3Ü3 
!
Ü3Ü3 
m_isSDFShader
Ü3Ü3 
)
Ü3Ü3 
style_padding
á3á3 
=
á3á3 
$num
á3á3  "
;
á3á3" #
	GlyphRect
ç3ç3 
	glyphRect
ç3ç3 
=
ç3ç3  !"
m_cached_TextElement
ç3ç3" 6
.
ç3ç36 7
m_Glyph
ç3ç37 >
.
ç3ç3> ?
	glyphRect
ç3ç3? H
;
ç3ç3H I
Vector2
è3è3 
uv0
è3è3 
;
è3è3 
uv0
ê3ê3 
.
ê3ê3 
x
ê3ê3 
=
ê3ê3 
(
ê3ê3 
	glyphRect
ê3ê3 
.
ê3ê3 
x
ê3ê3  
-
ê3ê3! "
padding
ê3ê3# *
-
ê3ê3+ ,
style_padding
ê3ê3- :
)
ê3ê3: ;
/
ê3ê3< = 
m_currentFontAsset
ê3ê3> P
.
ê3ê3P Q
m_AtlasWidth
ê3ê3Q ]
;
ê3ê3] ^
uv0
ë3ë3 
.
ë3ë3 
y
ë3ë3 
=
ë3ë3 
(
ë3ë3 
	glyphRect
ë3ë3 
.
ë3ë3 
y
ë3ë3  
-
ë3ë3! "
padding
ë3ë3# *
-
ë3ë3+ ,
style_padding
ë3ë3- :
)
ë3ë3: ;
/
ë3ë3< = 
m_currentFontAsset
ë3ë3> P
.
ë3ë3P Q
m_AtlasHeight
ë3ë3Q ^
;
ë3ë3^ _
Vector2
ì3ì3 
uv1
ì3ì3 
;
ì3ì3 
uv1
î3î3 
.
î3î3 
x
î3î3 
=
î3î3 
uv0
î3î3 
.
î3î3 
x
î3î3 
;
î3î3 
uv1
ï3ï3 
.
ï3ï3 
y
ï3ï3 
=
ï3ï3 
(
ï3ï3 
	glyphRect
ï3ï3 
.
ï3ï3 
y
ï3ï3  
+
ï3ï3! "
padding
ï3ï3# *
+
ï3ï3+ ,
style_padding
ï3ï3- :
+
ï3ï3; <
	glyphRect
ï3ï3= F
.
ï3ï3F G
height
ï3ï3G M
)
ï3ï3M N
/
ï3ï3O P 
m_currentFontAsset
ï3ï3Q c
.
ï3ï3c d
m_AtlasHeight
ï3ï3d q
;
ï3ï3q r
Vector2
ó3ó3 
uv2
ó3ó3 
;
ó3ó3 
uv2
ò3ò3 
.
ò3ò3 
x
ò3ò3 
=
ò3ò3 
(
ò3ò3 
	glyphRect
ò3ò3 
.
ò3ò3 
x
ò3ò3  
+
ò3ò3! "
padding
ò3ò3# *
+
ò3ò3+ ,
style_padding
ò3ò3- :
+
ò3ò3; <
	glyphRect
ò3ò3= F
.
ò3ò3F G
width
ò3ò3G L
)
ò3ò3L M
/
ò3ò3N O 
m_currentFontAsset
ò3ò3P b
.
ò3ò3b c
m_AtlasWidth
ò3ò3c o
;
ò3ò3o p
uv2
ô3ô3 
.
ô3ô3 
y
ô3ô3 
=
ô3ô3 
uv1
ô3ô3 
.
ô3ô3 
y
ô3ô3 
;
ô3ô3 
Vector2
õ3õ3 
uv3
õ3õ3 
;
õ3õ3 
uv3
ú3ú3 
.
ú3ú3 
x
ú3ú3 
=
ú3ú3 
uv2
ú3ú3 
.
ú3ú3 
x
ú3ú3 
;
ú3ú3 
uv3
ù3ù3 
.
ù3ù3 
y
ù3ù3 
=
ù3ù3 
uv0
ù3ù3 
.
ù3ù3 
y
ù3ù3 
;
ù3ù3 

m_textInfo
†3†3 
.
†3†3 
characterInfo
†3†3 $
[
†3†3$ %
m_characterCount
†3†3% 5
]
†3†35 6
.
†3†36 7
	vertex_BL
†3†37 @
.
†3†3@ A
uv
†3†3A C
=
†3†3D E
uv0
†3†3F I
;
†3†3I J

m_textInfo
°3°3 
.
°3°3 
characterInfo
°3°3 $
[
°3°3$ %
m_characterCount
°3°3% 5
]
°3°35 6
.
°3°36 7
	vertex_TL
°3°37 @
.
°3°3@ A
uv
°3°3A C
=
°3°3D E
uv1
°3°3F I
;
°3°3I J

m_textInfo
¢3¢3 
.
¢3¢3 
characterInfo
¢3¢3 $
[
¢3¢3$ %
m_characterCount
¢3¢3% 5
]
¢3¢35 6
.
¢3¢36 7
	vertex_TR
¢3¢37 @
.
¢3¢3@ A
uv
¢3¢3A C
=
¢3¢3D E
uv2
¢3¢3F I
;
¢3¢3I J

m_textInfo
£3£3 
.
£3£3 
characterInfo
£3£3 $
[
£3£3$ %
m_characterCount
£3£3% 5
]
£3£35 6
.
£3£36 7
	vertex_BR
£3£37 @
.
£3£3@ A
uv
£3£3A C
=
£3£3D E
uv3
£3£3F I
;
£3£3I J
}
∂3∂3 	
	protected
ø3ø3 
virtual
ø3ø3 
void
ø3ø3 "
SaveSpriteVertexInfo
ø3ø3 3
(
ø3ø33 4
Color32
ø3ø34 ;
vertexColor
ø3ø3< G
)
ø3ø3G H
{
¿3¿3 	

m_textInfo
√3√3 
.
√3√3 
characterInfo
√3√3 $
[
√3√3$ %
m_characterCount
√3√3% 5
]
√3√35 6
.
√3√36 7
	vertex_BL
√3√37 @
.
√3√3@ A
position
√3√3A I
=
√3√3J K

m_textInfo
√3√3L V
.
√3√3V W
characterInfo
√3√3W d
[
√3√3d e
m_characterCount
√3√3e u
]
√3√3u v
.
√3√3v w

bottomLeft√3√3w Å
;√3√3Å Ç

m_textInfo
ƒ3ƒ3 
.
ƒ3ƒ3 
characterInfo
ƒ3ƒ3 $
[
ƒ3ƒ3$ %
m_characterCount
ƒ3ƒ3% 5
]
ƒ3ƒ35 6
.
ƒ3ƒ36 7
	vertex_TL
ƒ3ƒ37 @
.
ƒ3ƒ3@ A
position
ƒ3ƒ3A I
=
ƒ3ƒ3J K

m_textInfo
ƒ3ƒ3L V
.
ƒ3ƒ3V W
characterInfo
ƒ3ƒ3W d
[
ƒ3ƒ3d e
m_characterCount
ƒ3ƒ3e u
]
ƒ3ƒ3u v
.
ƒ3ƒ3v w
topLeft
ƒ3ƒ3w ~
;
ƒ3ƒ3~ 

m_textInfo
≈3≈3 
.
≈3≈3 
characterInfo
≈3≈3 $
[
≈3≈3$ %
m_characterCount
≈3≈3% 5
]
≈3≈35 6
.
≈3≈36 7
	vertex_TR
≈3≈37 @
.
≈3≈3@ A
position
≈3≈3A I
=
≈3≈3J K

m_textInfo
≈3≈3L V
.
≈3≈3V W
characterInfo
≈3≈3W d
[
≈3≈3d e
m_characterCount
≈3≈3e u
]
≈3≈3u v
.
≈3≈3v w
topRight
≈3≈3w 
;≈3≈3 Ä

m_textInfo
∆3∆3 
.
∆3∆3 
characterInfo
∆3∆3 $
[
∆3∆3$ %
m_characterCount
∆3∆3% 5
]
∆3∆35 6
.
∆3∆36 7
	vertex_BR
∆3∆37 @
.
∆3∆3@ A
position
∆3∆3A I
=
∆3∆3J K

m_textInfo
∆3∆3L V
.
∆3∆3V W
characterInfo
∆3∆3W d
[
∆3∆3d e
m_characterCount
∆3∆3e u
]
∆3∆3u v
.
∆3∆3v w
bottomRight∆3∆3w Ç
;∆3∆3Ç É
if
 3 3 
(
 3 3 
m_tintAllSprites
 3 3  
)
 3 3  !
m_tintSprite
 3 3" .
=
 3 3/ 0
true
 3 31 5
;
 3 35 6
Color32
À3À3 
spriteColor
À3À3 
=
À3À3  !
m_tintSprite
À3À3" .
?
À3À3/ 0
m_spriteColor
À3À31 >
.
À3À3> ?
Multiply
À3À3? G
(
À3À3G H
vertexColor
À3À3H S
)
À3À3S T
:
À3À3U V
m_spriteColor
À3À3W d
;
À3À3d e
spriteColor
Ã3Ã3 
.
Ã3Ã3 
a
Ã3Ã3 
=
Ã3Ã3 
spriteColor
Ã3Ã3 '
.
Ã3Ã3' (
a
Ã3Ã3( )
<
Ã3Ã3* +
m_fontColor32
Ã3Ã3, 9
.
Ã3Ã39 :
a
Ã3Ã3: ;
?
Ã3Ã3< =
spriteColor
Ã3Ã3> I
.
Ã3Ã3I J
a
Ã3Ã3J K
=
Ã3Ã3L M
spriteColor
Ã3Ã3N Y
.
Ã3Ã3Y Z
a
Ã3Ã3Z [
<
Ã3Ã3\ ]
vertexColor
Ã3Ã3^ i
.
Ã3Ã3i j
a
Ã3Ã3j k
?
Ã3Ã3l m
spriteColor
Ã3Ã3n y
.
Ã3Ã3y z
a
Ã3Ã3z {
:
Ã3Ã3| }
vertexColorÃ3Ã3~ â
.Ã3Ã3â ä
aÃ3Ã3ä ã
:Ã3Ã3å ç
m_fontColor32Ã3Ã3é õ
.Ã3Ã3õ ú
aÃ3Ã3ú ù
;Ã3Ã3ù û
Color32
Œ3Œ3 
c0
Œ3Œ3 
=
Œ3Œ3 
spriteColor
Œ3Œ3 $
;
Œ3Œ3$ %
Color32
œ3œ3 
c1
œ3œ3 
=
œ3œ3 
spriteColor
œ3œ3 $
;
œ3œ3$ %
Color32
–3–3 
c2
–3–3 
=
–3–3 
spriteColor
–3–3 $
;
–3–3$ %
Color32
—3—3 
c3
—3—3 
=
—3—3 
spriteColor
—3—3 $
;
—3—3$ %
if
”3”3 
(
”3”3 $
m_enableVertexGradient
”3”3 &
)
”3”3& '
{
‘3‘3 
if
’3’3 
(
’3’3 '
m_fontColorGradientPreset
’3’3 -
!=
’3’3. 0
null
’3’31 5
)
’3’35 6
{
÷3÷3 
c0
◊3◊3 
=
◊3◊3 
m_tintSprite
◊3◊3 %
?
◊3◊3& '
c0
◊3◊3( *
.
◊3◊3* +
Multiply
◊3◊3+ 3
(
◊3◊33 4'
m_fontColorGradientPreset
◊3◊34 M
.
◊3◊3M N

bottomLeft
◊3◊3N X
)
◊3◊3X Y
:
◊3◊3Z [
c0
◊3◊3\ ^
;
◊3◊3^ _
c1
ÿ3ÿ3 
=
ÿ3ÿ3 
m_tintSprite
ÿ3ÿ3 %
?
ÿ3ÿ3& '
c1
ÿ3ÿ3( *
.
ÿ3ÿ3* +
Multiply
ÿ3ÿ3+ 3
(
ÿ3ÿ33 4'
m_fontColorGradientPreset
ÿ3ÿ34 M
.
ÿ3ÿ3M N
topLeft
ÿ3ÿ3N U
)
ÿ3ÿ3U V
:
ÿ3ÿ3W X
c1
ÿ3ÿ3Y [
;
ÿ3ÿ3[ \
c2
Ÿ3Ÿ3 
=
Ÿ3Ÿ3 
m_tintSprite
Ÿ3Ÿ3 %
?
Ÿ3Ÿ3& '
c2
Ÿ3Ÿ3( *
.
Ÿ3Ÿ3* +
Multiply
Ÿ3Ÿ3+ 3
(
Ÿ3Ÿ33 4'
m_fontColorGradientPreset
Ÿ3Ÿ34 M
.
Ÿ3Ÿ3M N
topRight
Ÿ3Ÿ3N V
)
Ÿ3Ÿ3V W
:
Ÿ3Ÿ3X Y
c2
Ÿ3Ÿ3Z \
;
Ÿ3Ÿ3\ ]
c3
⁄3⁄3 
=
⁄3⁄3 
m_tintSprite
⁄3⁄3 %
?
⁄3⁄3& '
c3
⁄3⁄3( *
.
⁄3⁄3* +
Multiply
⁄3⁄3+ 3
(
⁄3⁄33 4'
m_fontColorGradientPreset
⁄3⁄34 M
.
⁄3⁄3M N
bottomRight
⁄3⁄3N Y
)
⁄3⁄3Y Z
:
⁄3⁄3[ \
c3
⁄3⁄3] _
;
⁄3⁄3_ `
}
€3€3 
else
‹3‹3 
{
›3›3 
c0
ﬁ3ﬁ3 
=
ﬁ3ﬁ3 
m_tintSprite
ﬁ3ﬁ3 %
?
ﬁ3ﬁ3& '
c0
ﬁ3ﬁ3( *
.
ﬁ3ﬁ3* +
Multiply
ﬁ3ﬁ3+ 3
(
ﬁ3ﬁ33 4!
m_fontColorGradient
ﬁ3ﬁ34 G
.
ﬁ3ﬁ3G H

bottomLeft
ﬁ3ﬁ3H R
)
ﬁ3ﬁ3R S
:
ﬁ3ﬁ3T U
c0
ﬁ3ﬁ3V X
;
ﬁ3ﬁ3X Y
c1
ﬂ3ﬂ3 
=
ﬂ3ﬂ3 
m_tintSprite
ﬂ3ﬂ3 %
?
ﬂ3ﬂ3& '
c1
ﬂ3ﬂ3( *
.
ﬂ3ﬂ3* +
Multiply
ﬂ3ﬂ3+ 3
(
ﬂ3ﬂ33 4!
m_fontColorGradient
ﬂ3ﬂ34 G
.
ﬂ3ﬂ3G H
topLeft
ﬂ3ﬂ3H O
)
ﬂ3ﬂ3O P
:
ﬂ3ﬂ3Q R
c1
ﬂ3ﬂ3S U
;
ﬂ3ﬂ3U V
c2
‡3‡3 
=
‡3‡3 
m_tintSprite
‡3‡3 %
?
‡3‡3& '
c2
‡3‡3( *
.
‡3‡3* +
Multiply
‡3‡3+ 3
(
‡3‡33 4!
m_fontColorGradient
‡3‡34 G
.
‡3‡3G H
topRight
‡3‡3H P
)
‡3‡3P Q
:
‡3‡3R S
c2
‡3‡3T V
;
‡3‡3V W
c3
·3·3 
=
·3·3 
m_tintSprite
·3·3 %
?
·3·3& '
c3
·3·3( *
.
·3·3* +
Multiply
·3·3+ 3
(
·3·33 4!
m_fontColorGradient
·3·34 G
.
·3·3G H
bottomRight
·3·3H S
)
·3·3S T
:
·3·3U V
c3
·3·3W Y
;
·3·3Y Z
}
‚3‚3 
}
„3„3 
if
Â3Â3 
(
Â3Â3 #
m_colorGradientPreset
Â3Â3 %
!=
Â3Â3& (
null
Â3Â3) -
)
Â3Â3- .
{
Ê3Ê3 
c0
Á3Á3 
=
Á3Á3 
m_tintSprite
Á3Á3 !
?
Á3Á3" #
c0
Á3Á3$ &
.
Á3Á3& '
Multiply
Á3Á3' /
(
Á3Á3/ 0#
m_colorGradientPreset
Á3Á30 E
.
Á3Á3E F

bottomLeft
Á3Á3F P
)
Á3Á3P Q
:
Á3Á3R S
c0
Á3Á3T V
;
Á3Á3V W
c1
Ë3Ë3 
=
Ë3Ë3 
m_tintSprite
Ë3Ë3 !
?
Ë3Ë3" #
c1
Ë3Ë3$ &
.
Ë3Ë3& '
Multiply
Ë3Ë3' /
(
Ë3Ë3/ 0#
m_colorGradientPreset
Ë3Ë30 E
.
Ë3Ë3E F
topLeft
Ë3Ë3F M
)
Ë3Ë3M N
:
Ë3Ë3O P
c1
Ë3Ë3Q S
;
Ë3Ë3S T
c2
È3È3 
=
È3È3 
m_tintSprite
È3È3 !
?
È3È3" #
c2
È3È3$ &
.
È3È3& '
Multiply
È3È3' /
(
È3È3/ 0#
m_colorGradientPreset
È3È30 E
.
È3È3E F
topRight
È3È3F N
)
È3È3N O
:
È3È3P Q
c2
È3È3R T
;
È3È3T U
c3
Í3Í3 
=
Í3Í3 
m_tintSprite
Í3Í3 !
?
Í3Í3" #
c3
Í3Í3$ &
.
Í3Í3& '
Multiply
Í3Í3' /
(
Í3Í3/ 0#
m_colorGradientPreset
Í3Í30 E
.
Í3Í3E F
bottomRight
Í3Í3F Q
)
Í3Í3Q R
:
Í3Í3S T
c3
Í3Í3U W
;
Í3Í3W X
}
Î3Î3 

m_textInfo
Ì3Ì3 
.
Ì3Ì3 
characterInfo
Ì3Ì3 $
[
Ì3Ì3$ %
m_characterCount
Ì3Ì3% 5
]
Ì3Ì35 6
.
Ì3Ì36 7
	vertex_BL
Ì3Ì37 @
.
Ì3Ì3@ A
color
Ì3Ì3A F
=
Ì3Ì3G H
c0
Ì3Ì3I K
;
Ì3Ì3K L

m_textInfo
Ó3Ó3 
.
Ó3Ó3 
characterInfo
Ó3Ó3 $
[
Ó3Ó3$ %
m_characterCount
Ó3Ó3% 5
]
Ó3Ó35 6
.
Ó3Ó36 7
	vertex_TL
Ó3Ó37 @
.
Ó3Ó3@ A
color
Ó3Ó3A F
=
Ó3Ó3G H
c1
Ó3Ó3I K
;
Ó3Ó3K L

m_textInfo
Ô3Ô3 
.
Ô3Ô3 
characterInfo
Ô3Ô3 $
[
Ô3Ô3$ %
m_characterCount
Ô3Ô3% 5
]
Ô3Ô35 6
.
Ô3Ô36 7
	vertex_TR
Ô3Ô37 @
.
Ô3Ô3@ A
color
Ô3Ô3A F
=
Ô3Ô3G H
c2
Ô3Ô3I K
;
Ô3Ô3K L

m_textInfo
33 
.
33 
characterInfo
33 $
[
33$ %
m_characterCount
33% 5
]
335 6
.
336 7
	vertex_BR
337 @
.
33@ A
color
33A F
=
33G H
c3
33I K
;
33K L
	GlyphRect
ı3ı3 
	glyphRect
ı3ı3 
=
ı3ı3  !"
m_cached_TextElement
ı3ı3" 6
.
ı3ı36 7
m_Glyph
ı3ı37 >
.
ı3ı3> ?
	glyphRect
ı3ı3? H
;
ı3ı3H I
Vector2
˜3˜3 
uv0
˜3˜3 
=
˜3˜3 
new
˜3˜3 
Vector2
˜3˜3 %
(
˜3˜3% &
(
˜3˜3& '
float
˜3˜3' ,
)
˜3˜3, -
	glyphRect
˜3˜3- 6
.
˜3˜36 7
x
˜3˜37 8
/
˜3˜39 :"
m_currentSpriteAsset
˜3˜3; O
.
˜3˜3O P
spriteSheet
˜3˜3P [
.
˜3˜3[ \
width
˜3˜3\ a
,
˜3˜3a b
(
˜3˜3c d
float
˜3˜3d i
)
˜3˜3i j
	glyphRect
˜3˜3j s
.
˜3˜3s t
y
˜3˜3t u
/
˜3˜3v w#
m_currentSpriteAsset˜3˜3x å
.˜3˜3å ç
spriteSheet˜3˜3ç ò
.˜3˜3ò ô
height˜3˜3ô ü
)˜3˜3ü †
;˜3˜3† °
Vector2
¯3¯3 
uv1
¯3¯3 
=
¯3¯3 
new
¯3¯3 
Vector2
¯3¯3 %
(
¯3¯3% &
uv0
¯3¯3& )
.
¯3¯3) *
x
¯3¯3* +
,
¯3¯3+ ,
(
¯3¯3- .
float
¯3¯3. 3
)
¯3¯33 4
(
¯3¯34 5
	glyphRect
¯3¯35 >
.
¯3¯3> ?
y
¯3¯3? @
+
¯3¯3A B
	glyphRect
¯3¯3C L
.
¯3¯3L M
height
¯3¯3M S
)
¯3¯3S T
/
¯3¯3U V"
m_currentSpriteAsset
¯3¯3W k
.
¯3¯3k l
spriteSheet
¯3¯3l w
.
¯3¯3w x
height
¯3¯3x ~
)
¯3¯3~ 
;¯3¯3 Ä
Vector2
˘3˘3 
uv2
˘3˘3 
=
˘3˘3 
new
˘3˘3 
Vector2
˘3˘3 %
(
˘3˘3% &
(
˘3˘3& '
float
˘3˘3' ,
)
˘3˘3, -
(
˘3˘3- .
	glyphRect
˘3˘3. 7
.
˘3˘37 8
x
˘3˘38 9
+
˘3˘3: ;
	glyphRect
˘3˘3< E
.
˘3˘3E F
width
˘3˘3F K
)
˘3˘3K L
/
˘3˘3M N"
m_currentSpriteAsset
˘3˘3O c
.
˘3˘3c d
spriteSheet
˘3˘3d o
.
˘3˘3o p
width
˘3˘3p u
,
˘3˘3u v
uv1
˘3˘3w z
.
˘3˘3z {
y
˘3˘3{ |
)
˘3˘3| }
;
˘3˘3} ~
Vector2
˙3˙3 
uv3
˙3˙3 
=
˙3˙3 
new
˙3˙3 
Vector2
˙3˙3 %
(
˙3˙3% &
uv2
˙3˙3& )
.
˙3˙3) *
x
˙3˙3* +
,
˙3˙3+ ,
uv0
˙3˙3- 0
.
˙3˙30 1
y
˙3˙31 2
)
˙3˙32 3
;
˙3˙33 4

m_textInfo
˝3˝3 
.
˝3˝3 
characterInfo
˝3˝3 $
[
˝3˝3$ %
m_characterCount
˝3˝3% 5
]
˝3˝35 6
.
˝3˝36 7
	vertex_BL
˝3˝37 @
.
˝3˝3@ A
uv
˝3˝3A C
=
˝3˝3D E
uv0
˝3˝3F I
;
˝3˝3I J

m_textInfo
˛3˛3 
.
˛3˛3 
characterInfo
˛3˛3 $
[
˛3˛3$ %
m_characterCount
˛3˛3% 5
]
˛3˛35 6
.
˛3˛36 7
	vertex_TL
˛3˛37 @
.
˛3˛3@ A
uv
˛3˛3A C
=
˛3˛3D E
uv1
˛3˛3F I
;
˛3˛3I J

m_textInfo
ˇ3ˇ3 
.
ˇ3ˇ3 
characterInfo
ˇ3ˇ3 $
[
ˇ3ˇ3$ %
m_characterCount
ˇ3ˇ3% 5
]
ˇ3ˇ35 6
.
ˇ3ˇ36 7
	vertex_TR
ˇ3ˇ37 @
.
ˇ3ˇ3@ A
uv
ˇ3ˇ3A C
=
ˇ3ˇ3D E
uv2
ˇ3ˇ3F I
;
ˇ3ˇ3I J

m_textInfo
Ä4Ä4 
.
Ä4Ä4 
characterInfo
Ä4Ä4 $
[
Ä4Ä4$ %
m_characterCount
Ä4Ä4% 5
]
Ä4Ä45 6
.
Ä4Ä46 7
	vertex_BR
Ä4Ä47 @
.
Ä4Ä4@ A
uv
Ä4Ä4A C
=
Ä4Ä4D E
uv3
Ä4Ä4F I
;
Ä4Ä4I J
}
î4î4 	
	protected
ú4ú4 
virtual
ú4ú4 
void
ú4ú4 (
FillCharacterVertexBuffers
ú4ú4 9
(
ú4ú49 :
int
ú4ú4: =
i
ú4ú4> ?
,
ú4ú4? @
int
ú4ú4A D
index_X4
ú4ú4E M
)
ú4ú4M N
{
ù4ù4 	
int
û4û4 
materialIndex
û4û4 
=
û4û4 

m_textInfo
û4û4  *
.
û4û4* +
characterInfo
û4û4+ 8
[
û4û48 9
i
û4û49 :
]
û4û4: ;
.
û4û4; <$
materialReferenceIndex
û4û4< R
;
û4û4R S
index_X4
ü4ü4 
=
ü4ü4 

m_textInfo
ü4ü4 !
.
ü4ü4! "
meshInfo
ü4ü4" *
[
ü4ü4* +
materialIndex
ü4ü4+ 8
]
ü4ü48 9
.
ü4ü49 :
vertexCount
ü4ü4: E
;
ü4ü4E F
if
¢4¢4 
(
¢4¢4 
index_X4
¢4¢4 
>=
¢4¢4 

m_textInfo
¢4¢4 &
.
¢4¢4& '
meshInfo
¢4¢4' /
[
¢4¢4/ 0
materialIndex
¢4¢40 =
]
¢4¢4= >
.
¢4¢4> ?
vertices
¢4¢4? G
.
¢4¢4G H
Length
¢4¢4H N
)
¢4¢4N O

m_textInfo
£4£4 
.
£4£4 
meshInfo
£4£4 #
[
£4£4# $
materialIndex
£4£4$ 1
]
£4£41 2
.
£4£42 3
ResizeMeshInfo
£4£43 A
(
£4£4A B
Mathf
£4£4B G
.
£4£4G H
NextPowerOfTwo
£4£4H V
(
£4£4V W
(
£4£4W X
index_X4
£4£4X `
+
£4£4a b
$num
£4£4c d
)
£4£4d e
/
£4£4f g
$num
£4£4h i
)
£4£4i j
)
£4£4j k
;
£4£4k l
TMP_CharacterInfo
¶4¶4 
[
¶4¶4 
]
¶4¶4  
characterInfoArray
¶4¶4  2
=
¶4¶43 4

m_textInfo
¶4¶45 ?
.
¶4¶4? @
characterInfo
¶4¶4@ M
;
¶4¶4M N

m_textInfo
ß4ß4 
.
ß4ß4 
characterInfo
ß4ß4 $
[
ß4ß4$ %
i
ß4ß4% &
]
ß4ß4& '
.
ß4ß4' (
vertexIndex
ß4ß4( 3
=
ß4ß44 5
index_X4
ß4ß46 >
;
ß4ß4> ?

m_textInfo
™4™4 
.
™4™4 
meshInfo
™4™4 
[
™4™4  
materialIndex
™4™4  -
]
™4™4- .
.
™4™4. /
vertices
™4™4/ 7
[
™4™47 8
$num
™4™48 9
+
™4™4: ;
index_X4
™4™4< D
]
™4™4D E
=
™4™4F G 
characterInfoArray
™4™4H Z
[
™4™4Z [
i
™4™4[ \
]
™4™4\ ]
.
™4™4] ^
	vertex_BL
™4™4^ g
.
™4™4g h
position
™4™4h p
;
™4™4p q

m_textInfo
´4´4 
.
´4´4 
meshInfo
´4´4 
[
´4´4  
materialIndex
´4´4  -
]
´4´4- .
.
´4´4. /
vertices
´4´4/ 7
[
´4´47 8
$num
´4´48 9
+
´4´4: ;
index_X4
´4´4< D
]
´4´4D E
=
´4´4F G 
characterInfoArray
´4´4H Z
[
´4´4Z [
i
´4´4[ \
]
´4´4\ ]
.
´4´4] ^
	vertex_TL
´4´4^ g
.
´4´4g h
position
´4´4h p
;
´4´4p q

m_textInfo
¨4¨4 
.
¨4¨4 
meshInfo
¨4¨4 
[
¨4¨4  
materialIndex
¨4¨4  -
]
¨4¨4- .
.
¨4¨4. /
vertices
¨4¨4/ 7
[
¨4¨47 8
$num
¨4¨48 9
+
¨4¨4: ;
index_X4
¨4¨4< D
]
¨4¨4D E
=
¨4¨4F G 
characterInfoArray
¨4¨4H Z
[
¨4¨4Z [
i
¨4¨4[ \
]
¨4¨4\ ]
.
¨4¨4] ^
	vertex_TR
¨4¨4^ g
.
¨4¨4g h
position
¨4¨4h p
;
¨4¨4p q

m_textInfo
≠4≠4 
.
≠4≠4 
meshInfo
≠4≠4 
[
≠4≠4  
materialIndex
≠4≠4  -
]
≠4≠4- .
.
≠4≠4. /
vertices
≠4≠4/ 7
[
≠4≠47 8
$num
≠4≠48 9
+
≠4≠4: ;
index_X4
≠4≠4< D
]
≠4≠4D E
=
≠4≠4F G 
characterInfoArray
≠4≠4H Z
[
≠4≠4Z [
i
≠4≠4[ \
]
≠4≠4\ ]
.
≠4≠4] ^
	vertex_BR
≠4≠4^ g
.
≠4≠4g h
position
≠4≠4h p
;
≠4≠4p q

m_textInfo
±4±4 
.
±4±4 
meshInfo
±4±4 
[
±4±4  
materialIndex
±4±4  -
]
±4±4- .
.
±4±4. /
uvs0
±4±4/ 3
[
±4±43 4
$num
±4±44 5
+
±4±46 7
index_X4
±4±48 @
]
±4±4@ A
=
±4±4B C 
characterInfoArray
±4±4D V
[
±4±4V W
i
±4±4W X
]
±4±4X Y
.
±4±4Y Z
	vertex_BL
±4±4Z c
.
±4±4c d
uv
±4±4d f
;
±4±4f g

m_textInfo
≤4≤4 
.
≤4≤4 
meshInfo
≤4≤4 
[
≤4≤4  
materialIndex
≤4≤4  -
]
≤4≤4- .
.
≤4≤4. /
uvs0
≤4≤4/ 3
[
≤4≤43 4
$num
≤4≤44 5
+
≤4≤46 7
index_X4
≤4≤48 @
]
≤4≤4@ A
=
≤4≤4B C 
characterInfoArray
≤4≤4D V
[
≤4≤4V W
i
≤4≤4W X
]
≤4≤4X Y
.
≤4≤4Y Z
	vertex_TL
≤4≤4Z c
.
≤4≤4c d
uv
≤4≤4d f
;
≤4≤4f g

m_textInfo
≥4≥4 
.
≥4≥4 
meshInfo
≥4≥4 
[
≥4≥4  
materialIndex
≥4≥4  -
]
≥4≥4- .
.
≥4≥4. /
uvs0
≥4≥4/ 3
[
≥4≥43 4
$num
≥4≥44 5
+
≥4≥46 7
index_X4
≥4≥48 @
]
≥4≥4@ A
=
≥4≥4B C 
characterInfoArray
≥4≥4D V
[
≥4≥4V W
i
≥4≥4W X
]
≥4≥4X Y
.
≥4≥4Y Z
	vertex_TR
≥4≥4Z c
.
≥4≥4c d
uv
≥4≥4d f
;
≥4≥4f g

m_textInfo
¥4¥4 
.
¥4¥4 
meshInfo
¥4¥4 
[
¥4¥4  
materialIndex
¥4¥4  -
]
¥4¥4- .
.
¥4¥4. /
uvs0
¥4¥4/ 3
[
¥4¥43 4
$num
¥4¥44 5
+
¥4¥46 7
index_X4
¥4¥48 @
]
¥4¥4@ A
=
¥4¥4B C 
characterInfoArray
¥4¥4D V
[
¥4¥4V W
i
¥4¥4W X
]
¥4¥4X Y
.
¥4¥4Y Z
	vertex_BR
¥4¥4Z c
.
¥4¥4c d
uv
¥4¥4d f
;
¥4¥4f g

m_textInfo
∏4∏4 
.
∏4∏4 
meshInfo
∏4∏4 
[
∏4∏4  
materialIndex
∏4∏4  -
]
∏4∏4- .
.
∏4∏4. /
uvs2
∏4∏4/ 3
[
∏4∏43 4
$num
∏4∏44 5
+
∏4∏46 7
index_X4
∏4∏48 @
]
∏4∏4@ A
=
∏4∏4B C 
characterInfoArray
∏4∏4D V
[
∏4∏4V W
i
∏4∏4W X
]
∏4∏4X Y
.
∏4∏4Y Z
	vertex_BL
∏4∏4Z c
.
∏4∏4c d
uv2
∏4∏4d g
;
∏4∏4g h

m_textInfo
π4π4 
.
π4π4 
meshInfo
π4π4 
[
π4π4  
materialIndex
π4π4  -
]
π4π4- .
.
π4π4. /
uvs2
π4π4/ 3
[
π4π43 4
$num
π4π44 5
+
π4π46 7
index_X4
π4π48 @
]
π4π4@ A
=
π4π4B C 
characterInfoArray
π4π4D V
[
π4π4V W
i
π4π4W X
]
π4π4X Y
.
π4π4Y Z
	vertex_TL
π4π4Z c
.
π4π4c d
uv2
π4π4d g
;
π4π4g h

m_textInfo
∫4∫4 
.
∫4∫4 
meshInfo
∫4∫4 
[
∫4∫4  
materialIndex
∫4∫4  -
]
∫4∫4- .
.
∫4∫4. /
uvs2
∫4∫4/ 3
[
∫4∫43 4
$num
∫4∫44 5
+
∫4∫46 7
index_X4
∫4∫48 @
]
∫4∫4@ A
=
∫4∫4B C 
characterInfoArray
∫4∫4D V
[
∫4∫4V W
i
∫4∫4W X
]
∫4∫4X Y
.
∫4∫4Y Z
	vertex_TR
∫4∫4Z c
.
∫4∫4c d
uv2
∫4∫4d g
;
∫4∫4g h

m_textInfo
ª4ª4 
.
ª4ª4 
meshInfo
ª4ª4 
[
ª4ª4  
materialIndex
ª4ª4  -
]
ª4ª4- .
.
ª4ª4. /
uvs2
ª4ª4/ 3
[
ª4ª43 4
$num
ª4ª44 5
+
ª4ª46 7
index_X4
ª4ª48 @
]
ª4ª4@ A
=
ª4ª4B C 
characterInfoArray
ª4ª4D V
[
ª4ª4V W
i
ª4ª4W X
]
ª4ª4X Y
.
ª4ª4Y Z
	vertex_BR
ª4ª4Z c
.
ª4ª4c d
uv2
ª4ª4d g
;
ª4ª4g h

m_textInfo
∆4∆4 
.
∆4∆4 
meshInfo
∆4∆4 
[
∆4∆4  
materialIndex
∆4∆4  -
]
∆4∆4- .
.
∆4∆4. /
colors32
∆4∆4/ 7
[
∆4∆47 8
$num
∆4∆48 9
+
∆4∆4: ;
index_X4
∆4∆4< D
]
∆4∆4D E
=
∆4∆4F G 
characterInfoArray
∆4∆4H Z
[
∆4∆4Z [
i
∆4∆4[ \
]
∆4∆4\ ]
.
∆4∆4] ^
	vertex_BL
∆4∆4^ g
.
∆4∆4g h
color
∆4∆4h m
;
∆4∆4m n

m_textInfo
«4«4 
.
«4«4 
meshInfo
«4«4 
[
«4«4  
materialIndex
«4«4  -
]
«4«4- .
.
«4«4. /
colors32
«4«4/ 7
[
«4«47 8
$num
«4«48 9
+
«4«4: ;
index_X4
«4«4< D
]
«4«4D E
=
«4«4F G 
characterInfoArray
«4«4H Z
[
«4«4Z [
i
«4«4[ \
]
«4«4\ ]
.
«4«4] ^
	vertex_TL
«4«4^ g
.
«4«4g h
color
«4«4h m
;
«4«4m n

m_textInfo
»4»4 
.
»4»4 
meshInfo
»4»4 
[
»4»4  
materialIndex
»4»4  -
]
»4»4- .
.
»4»4. /
colors32
»4»4/ 7
[
»4»47 8
$num
»4»48 9
+
»4»4: ;
index_X4
»4»4< D
]
»4»4D E
=
»4»4F G 
characterInfoArray
»4»4H Z
[
»4»4Z [
i
»4»4[ \
]
»4»4\ ]
.
»4»4] ^
	vertex_TR
»4»4^ g
.
»4»4g h
color
»4»4h m
;
»4»4m n

m_textInfo
…4…4 
.
…4…4 
meshInfo
…4…4 
[
…4…4  
materialIndex
…4…4  -
]
…4…4- .
.
…4…4. /
colors32
…4…4/ 7
[
…4…47 8
$num
…4…48 9
+
…4…4: ;
index_X4
…4…4< D
]
…4…4D E
=
…4…4F G 
characterInfoArray
…4…4H Z
[
…4…4Z [
i
…4…4[ \
]
…4…4\ ]
.
…4…4] ^
	vertex_BR
…4…4^ g
.
…4…4g h
color
…4…4h m
;
…4…4m n

m_textInfo
À4À4 
.
À4À4 
meshInfo
À4À4 
[
À4À4  
materialIndex
À4À4  -
]
À4À4- .
.
À4À4. /
vertexCount
À4À4/ :
=
À4À4; <
index_X4
À4À4= E
+
À4À4F G
$num
À4À4H I
;
À4À4I J
}
Ã4Ã4 	
	protected
œ4œ4 
virtual
œ4œ4 
void
œ4œ4 (
FillCharacterVertexBuffers
œ4œ4 9
(
œ4œ49 :
int
œ4œ4: =
i
œ4œ4> ?
,
œ4œ4? @
int
œ4œ4A D
index_X4
œ4œ4E M
,
œ4œ4M N
bool
œ4œ4O S
isVolumetric
œ4œ4T `
)
œ4œ4` a
{
–4–4 	
int
—4—4 
materialIndex
—4—4 
=
—4—4 

m_textInfo
—4—4  *
.
—4—4* +
characterInfo
—4—4+ 8
[
—4—48 9
i
—4—49 :
]
—4—4: ;
.
—4—4; <$
materialReferenceIndex
—4—4< R
;
—4—4R S
index_X4
“4“4 
=
“4“4 

m_textInfo
“4“4 !
.
“4“4! "
meshInfo
“4“4" *
[
“4“4* +
materialIndex
“4“4+ 8
]
“4“48 9
.
“4“49 :
vertexCount
“4“4: E
;
“4“4E F
if
’4’4 
(
’4’4 
index_X4
’4’4 
>=
’4’4 

m_textInfo
’4’4 &
.
’4’4& '
meshInfo
’4’4' /
[
’4’4/ 0
materialIndex
’4’40 =
]
’4’4= >
.
’4’4> ?
vertices
’4’4? G
.
’4’4G H
Length
’4’4H N
)
’4’4N O

m_textInfo
÷4÷4 
.
÷4÷4 
meshInfo
÷4÷4 #
[
÷4÷4# $
materialIndex
÷4÷4$ 1
]
÷4÷41 2
.
÷4÷42 3
ResizeMeshInfo
÷4÷43 A
(
÷4÷4A B
Mathf
÷4÷4B G
.
÷4÷4G H
NextPowerOfTwo
÷4÷4H V
(
÷4÷4V W
(
÷4÷4W X
index_X4
÷4÷4X `
+
÷4÷4a b
(
÷4÷4c d
isVolumetric
÷4÷4d p
?
÷4÷4q r
$num
÷4÷4s t
:
÷4÷4u v
$num
÷4÷4w x
)
÷4÷4x y
)
÷4÷4y z
/
÷4÷4{ |
$num
÷4÷4} ~
)
÷4÷4~ 
)÷4÷4 Ä
;÷4÷4Ä Å
TMP_CharacterInfo
ÿ4ÿ4 
[
ÿ4ÿ4 
]
ÿ4ÿ4  
characterInfoArray
ÿ4ÿ4  2
=
ÿ4ÿ43 4

m_textInfo
ÿ4ÿ45 ?
.
ÿ4ÿ4? @
characterInfo
ÿ4ÿ4@ M
;
ÿ4ÿ4M N

m_textInfo
Ÿ4Ÿ4 
.
Ÿ4Ÿ4 
characterInfo
Ÿ4Ÿ4 $
[
Ÿ4Ÿ4$ %
i
Ÿ4Ÿ4% &
]
Ÿ4Ÿ4& '
.
Ÿ4Ÿ4' (
vertexIndex
Ÿ4Ÿ4( 3
=
Ÿ4Ÿ44 5
index_X4
Ÿ4Ÿ46 >
;
Ÿ4Ÿ4> ?

m_textInfo
‹4‹4 
.
‹4‹4 
meshInfo
‹4‹4 
[
‹4‹4  
materialIndex
‹4‹4  -
]
‹4‹4- .
.
‹4‹4. /
vertices
‹4‹4/ 7
[
‹4‹47 8
$num
‹4‹48 9
+
‹4‹4: ;
index_X4
‹4‹4< D
]
‹4‹4D E
=
‹4‹4F G 
characterInfoArray
‹4‹4H Z
[
‹4‹4Z [
i
‹4‹4[ \
]
‹4‹4\ ]
.
‹4‹4] ^
	vertex_BL
‹4‹4^ g
.
‹4‹4g h
position
‹4‹4h p
;
‹4‹4p q

m_textInfo
›4›4 
.
›4›4 
meshInfo
›4›4 
[
›4›4  
materialIndex
›4›4  -
]
›4›4- .
.
›4›4. /
vertices
›4›4/ 7
[
›4›47 8
$num
›4›48 9
+
›4›4: ;
index_X4
›4›4< D
]
›4›4D E
=
›4›4F G 
characterInfoArray
›4›4H Z
[
›4›4Z [
i
›4›4[ \
]
›4›4\ ]
.
›4›4] ^
	vertex_TL
›4›4^ g
.
›4›4g h
position
›4›4h p
;
›4›4p q

m_textInfo
ﬁ4ﬁ4 
.
ﬁ4ﬁ4 
meshInfo
ﬁ4ﬁ4 
[
ﬁ4ﬁ4  
materialIndex
ﬁ4ﬁ4  -
]
ﬁ4ﬁ4- .
.
ﬁ4ﬁ4. /
vertices
ﬁ4ﬁ4/ 7
[
ﬁ4ﬁ47 8
$num
ﬁ4ﬁ48 9
+
ﬁ4ﬁ4: ;
index_X4
ﬁ4ﬁ4< D
]
ﬁ4ﬁ4D E
=
ﬁ4ﬁ4F G 
characterInfoArray
ﬁ4ﬁ4H Z
[
ﬁ4ﬁ4Z [
i
ﬁ4ﬁ4[ \
]
ﬁ4ﬁ4\ ]
.
ﬁ4ﬁ4] ^
	vertex_TR
ﬁ4ﬁ4^ g
.
ﬁ4ﬁ4g h
position
ﬁ4ﬁ4h p
;
ﬁ4ﬁ4p q

m_textInfo
ﬂ4ﬂ4 
.
ﬂ4ﬂ4 
meshInfo
ﬂ4ﬂ4 
[
ﬂ4ﬂ4  
materialIndex
ﬂ4ﬂ4  -
]
ﬂ4ﬂ4- .
.
ﬂ4ﬂ4. /
vertices
ﬂ4ﬂ4/ 7
[
ﬂ4ﬂ47 8
$num
ﬂ4ﬂ48 9
+
ﬂ4ﬂ4: ;
index_X4
ﬂ4ﬂ4< D
]
ﬂ4ﬂ4D E
=
ﬂ4ﬂ4F G 
characterInfoArray
ﬂ4ﬂ4H Z
[
ﬂ4ﬂ4Z [
i
ﬂ4ﬂ4[ \
]
ﬂ4ﬂ4\ ]
.
ﬂ4ﬂ4] ^
	vertex_BR
ﬂ4ﬂ4^ g
.
ﬂ4ﬂ4g h
position
ﬂ4ﬂ4h p
;
ﬂ4ﬂ4p q
if
·4·4 
(
·4·4 
isVolumetric
·4·4 
)
·4·4 
{
‚4‚4 
Vector3
„4„4 
depth
„4„4 
=
„4„4 
new
„4„4  #
Vector3
„4„4$ +
(
„4„4+ ,
$num
„4„4, -
,
„4„4- .
$num
„4„4/ 0
,
„4„40 1

m_fontSize
„4„42 <
*
„4„4= >
m_fontScale
„4„4? J
)
„4„4J K
;
„4„4K L

m_textInfo
‰4‰4 
.
‰4‰4 
meshInfo
‰4‰4 #
[
‰4‰4# $
materialIndex
‰4‰4$ 1
]
‰4‰41 2
.
‰4‰42 3
vertices
‰4‰43 ;
[
‰4‰4; <
$num
‰4‰4< =
+
‰4‰4> ?
index_X4
‰4‰4@ H
]
‰4‰4H I
=
‰4‰4J K 
characterInfoArray
‰4‰4L ^
[
‰4‰4^ _
i
‰4‰4_ `
]
‰4‰4` a
.
‰4‰4a b
	vertex_BL
‰4‰4b k
.
‰4‰4k l
position
‰4‰4l t
+
‰4‰4u v
depth
‰4‰4w |
;
‰4‰4| }

m_textInfo
Â4Â4 
.
Â4Â4 
meshInfo
Â4Â4 #
[
Â4Â4# $
materialIndex
Â4Â4$ 1
]
Â4Â41 2
.
Â4Â42 3
vertices
Â4Â43 ;
[
Â4Â4; <
$num
Â4Â4< =
+
Â4Â4> ?
index_X4
Â4Â4@ H
]
Â4Â4H I
=
Â4Â4J K 
characterInfoArray
Â4Â4L ^
[
Â4Â4^ _
i
Â4Â4_ `
]
Â4Â4` a
.
Â4Â4a b
	vertex_TL
Â4Â4b k
.
Â4Â4k l
position
Â4Â4l t
+
Â4Â4u v
depth
Â4Â4w |
;
Â4Â4| }

m_textInfo
Ê4Ê4 
.
Ê4Ê4 
meshInfo
Ê4Ê4 #
[
Ê4Ê4# $
materialIndex
Ê4Ê4$ 1
]
Ê4Ê41 2
.
Ê4Ê42 3
vertices
Ê4Ê43 ;
[
Ê4Ê4; <
$num
Ê4Ê4< =
+
Ê4Ê4> ?
index_X4
Ê4Ê4@ H
]
Ê4Ê4H I
=
Ê4Ê4J K 
characterInfoArray
Ê4Ê4L ^
[
Ê4Ê4^ _
i
Ê4Ê4_ `
]
Ê4Ê4` a
.
Ê4Ê4a b
	vertex_TR
Ê4Ê4b k
.
Ê4Ê4k l
position
Ê4Ê4l t
+
Ê4Ê4u v
depth
Ê4Ê4w |
;
Ê4Ê4| }

m_textInfo
Á4Á4 
.
Á4Á4 
meshInfo
Á4Á4 #
[
Á4Á4# $
materialIndex
Á4Á4$ 1
]
Á4Á41 2
.
Á4Á42 3
vertices
Á4Á43 ;
[
Á4Á4; <
$num
Á4Á4< =
+
Á4Á4> ?
index_X4
Á4Á4@ H
]
Á4Á4H I
=
Á4Á4J K 
characterInfoArray
Á4Á4L ^
[
Á4Á4^ _
i
Á4Á4_ `
]
Á4Á4` a
.
Á4Á4a b
	vertex_BR
Á4Á4b k
.
Á4Á4k l
position
Á4Á4l t
+
Á4Á4u v
depth
Á4Á4w |
;
Á4Á4| }
}
Ë4Ë4 

m_textInfo
Î4Î4 
.
Î4Î4 
meshInfo
Î4Î4 
[
Î4Î4  
materialIndex
Î4Î4  -
]
Î4Î4- .
.
Î4Î4. /
uvs0
Î4Î4/ 3
[
Î4Î43 4
$num
Î4Î44 5
+
Î4Î46 7
index_X4
Î4Î48 @
]
Î4Î4@ A
=
Î4Î4B C 
characterInfoArray
Î4Î4D V
[
Î4Î4V W
i
Î4Î4W X
]
Î4Î4X Y
.
Î4Î4Y Z
	vertex_BL
Î4Î4Z c
.
Î4Î4c d
uv
Î4Î4d f
;
Î4Î4f g

m_textInfo
Ï4Ï4 
.
Ï4Ï4 
meshInfo
Ï4Ï4 
[
Ï4Ï4  
materialIndex
Ï4Ï4  -
]
Ï4Ï4- .
.
Ï4Ï4. /
uvs0
Ï4Ï4/ 3
[
Ï4Ï43 4
$num
Ï4Ï44 5
+
Ï4Ï46 7
index_X4
Ï4Ï48 @
]
Ï4Ï4@ A
=
Ï4Ï4B C 
characterInfoArray
Ï4Ï4D V
[
Ï4Ï4V W
i
Ï4Ï4W X
]
Ï4Ï4X Y
.
Ï4Ï4Y Z
	vertex_TL
Ï4Ï4Z c
.
Ï4Ï4c d
uv
Ï4Ï4d f
;
Ï4Ï4f g

m_textInfo
Ì4Ì4 
.
Ì4Ì4 
meshInfo
Ì4Ì4 
[
Ì4Ì4  
materialIndex
Ì4Ì4  -
]
Ì4Ì4- .
.
Ì4Ì4. /
uvs0
Ì4Ì4/ 3
[
Ì4Ì43 4
$num
Ì4Ì44 5
+
Ì4Ì46 7
index_X4
Ì4Ì48 @
]
Ì4Ì4@ A
=
Ì4Ì4B C 
characterInfoArray
Ì4Ì4D V
[
Ì4Ì4V W
i
Ì4Ì4W X
]
Ì4Ì4X Y
.
Ì4Ì4Y Z
	vertex_TR
Ì4Ì4Z c
.
Ì4Ì4c d
uv
Ì4Ì4d f
;
Ì4Ì4f g

m_textInfo
Ó4Ó4 
.
Ó4Ó4 
meshInfo
Ó4Ó4 
[
Ó4Ó4  
materialIndex
Ó4Ó4  -
]
Ó4Ó4- .
.
Ó4Ó4. /
uvs0
Ó4Ó4/ 3
[
Ó4Ó43 4
$num
Ó4Ó44 5
+
Ó4Ó46 7
index_X4
Ó4Ó48 @
]
Ó4Ó4@ A
=
Ó4Ó4B C 
characterInfoArray
Ó4Ó4D V
[
Ó4Ó4V W
i
Ó4Ó4W X
]
Ó4Ó4X Y
.
Ó4Ó4Y Z
	vertex_BR
Ó4Ó4Z c
.
Ó4Ó4c d
uv
Ó4Ó4d f
;
Ó4Ó4f g
if
44 
(
44 
isVolumetric
44 
)
44 
{
Ò4Ò4 

m_textInfo
Ú4Ú4 
.
Ú4Ú4 
meshInfo
Ú4Ú4 #
[
Ú4Ú4# $
materialIndex
Ú4Ú4$ 1
]
Ú4Ú41 2
.
Ú4Ú42 3
uvs0
Ú4Ú43 7
[
Ú4Ú47 8
$num
Ú4Ú48 9
+
Ú4Ú4: ;
index_X4
Ú4Ú4< D
]
Ú4Ú4D E
=
Ú4Ú4F G 
characterInfoArray
Ú4Ú4H Z
[
Ú4Ú4Z [
i
Ú4Ú4[ \
]
Ú4Ú4\ ]
.
Ú4Ú4] ^
	vertex_BL
Ú4Ú4^ g
.
Ú4Ú4g h
uv
Ú4Ú4h j
;
Ú4Ú4j k

m_textInfo
Û4Û4 
.
Û4Û4 
meshInfo
Û4Û4 #
[
Û4Û4# $
materialIndex
Û4Û4$ 1
]
Û4Û41 2
.
Û4Û42 3
uvs0
Û4Û43 7
[
Û4Û47 8
$num
Û4Û48 9
+
Û4Û4: ;
index_X4
Û4Û4< D
]
Û4Û4D E
=
Û4Û4F G 
characterInfoArray
Û4Û4H Z
[
Û4Û4Z [
i
Û4Û4[ \
]
Û4Û4\ ]
.
Û4Û4] ^
	vertex_TL
Û4Û4^ g
.
Û4Û4g h
uv
Û4Û4h j
;
Û4Û4j k

m_textInfo
Ù4Ù4 
.
Ù4Ù4 
meshInfo
Ù4Ù4 #
[
Ù4Ù4# $
materialIndex
Ù4Ù4$ 1
]
Ù4Ù41 2
.
Ù4Ù42 3
uvs0
Ù4Ù43 7
[
Ù4Ù47 8
$num
Ù4Ù48 9
+
Ù4Ù4: ;
index_X4
Ù4Ù4< D
]
Ù4Ù4D E
=
Ù4Ù4F G 
characterInfoArray
Ù4Ù4H Z
[
Ù4Ù4Z [
i
Ù4Ù4[ \
]
Ù4Ù4\ ]
.
Ù4Ù4] ^
	vertex_TR
Ù4Ù4^ g
.
Ù4Ù4g h
uv
Ù4Ù4h j
;
Ù4Ù4j k

m_textInfo
ı4ı4 
.
ı4ı4 
meshInfo
ı4ı4 #
[
ı4ı4# $
materialIndex
ı4ı4$ 1
]
ı4ı41 2
.
ı4ı42 3
uvs0
ı4ı43 7
[
ı4ı47 8
$num
ı4ı48 9
+
ı4ı4: ;
index_X4
ı4ı4< D
]
ı4ı4D E
=
ı4ı4F G 
characterInfoArray
ı4ı4H Z
[
ı4ı4Z [
i
ı4ı4[ \
]
ı4ı4\ ]
.
ı4ı4] ^
	vertex_BR
ı4ı4^ g
.
ı4ı4g h
uv
ı4ı4h j
;
ı4ı4j k
}
ˆ4ˆ4 

m_textInfo
˙4˙4 
.
˙4˙4 
meshInfo
˙4˙4 
[
˙4˙4  
materialIndex
˙4˙4  -
]
˙4˙4- .
.
˙4˙4. /
uvs2
˙4˙4/ 3
[
˙4˙43 4
$num
˙4˙44 5
+
˙4˙46 7
index_X4
˙4˙48 @
]
˙4˙4@ A
=
˙4˙4B C 
characterInfoArray
˙4˙4D V
[
˙4˙4V W
i
˙4˙4W X
]
˙4˙4X Y
.
˙4˙4Y Z
	vertex_BL
˙4˙4Z c
.
˙4˙4c d
uv2
˙4˙4d g
;
˙4˙4g h

m_textInfo
˚4˚4 
.
˚4˚4 
meshInfo
˚4˚4 
[
˚4˚4  
materialIndex
˚4˚4  -
]
˚4˚4- .
.
˚4˚4. /
uvs2
˚4˚4/ 3
[
˚4˚43 4
$num
˚4˚44 5
+
˚4˚46 7
index_X4
˚4˚48 @
]
˚4˚4@ A
=
˚4˚4B C 
characterInfoArray
˚4˚4D V
[
˚4˚4V W
i
˚4˚4W X
]
˚4˚4X Y
.
˚4˚4Y Z
	vertex_TL
˚4˚4Z c
.
˚4˚4c d
uv2
˚4˚4d g
;
˚4˚4g h

m_textInfo
¸4¸4 
.
¸4¸4 
meshInfo
¸4¸4 
[
¸4¸4  
materialIndex
¸4¸4  -
]
¸4¸4- .
.
¸4¸4. /
uvs2
¸4¸4/ 3
[
¸4¸43 4
$num
¸4¸44 5
+
¸4¸46 7
index_X4
¸4¸48 @
]
¸4¸4@ A
=
¸4¸4B C 
characterInfoArray
¸4¸4D V
[
¸4¸4V W
i
¸4¸4W X
]
¸4¸4X Y
.
¸4¸4Y Z
	vertex_TR
¸4¸4Z c
.
¸4¸4c d
uv2
¸4¸4d g
;
¸4¸4g h

m_textInfo
˝4˝4 
.
˝4˝4 
meshInfo
˝4˝4 
[
˝4˝4  
materialIndex
˝4˝4  -
]
˝4˝4- .
.
˝4˝4. /
uvs2
˝4˝4/ 3
[
˝4˝43 4
$num
˝4˝44 5
+
˝4˝46 7
index_X4
˝4˝48 @
]
˝4˝4@ A
=
˝4˝4B C 
characterInfoArray
˝4˝4D V
[
˝4˝4V W
i
˝4˝4W X
]
˝4˝4X Y
.
˝4˝4Y Z
	vertex_BR
˝4˝4Z c
.
˝4˝4c d
uv2
˝4˝4d g
;
˝4˝4g h
if
ˇ4ˇ4 
(
ˇ4ˇ4 
isVolumetric
ˇ4ˇ4 
)
ˇ4ˇ4 
{
Ä5Ä5 

m_textInfo
Å5Å5 
.
Å5Å5 
meshInfo
Å5Å5 #
[
Å5Å5# $
materialIndex
Å5Å5$ 1
]
Å5Å51 2
.
Å5Å52 3
uvs2
Å5Å53 7
[
Å5Å57 8
$num
Å5Å58 9
+
Å5Å5: ;
index_X4
Å5Å5< D
]
Å5Å5D E
=
Å5Å5F G 
characterInfoArray
Å5Å5H Z
[
Å5Å5Z [
i
Å5Å5[ \
]
Å5Å5\ ]
.
Å5Å5] ^
	vertex_BL
Å5Å5^ g
.
Å5Å5g h
uv2
Å5Å5h k
;
Å5Å5k l

m_textInfo
Ç5Ç5 
.
Ç5Ç5 
meshInfo
Ç5Ç5 #
[
Ç5Ç5# $
materialIndex
Ç5Ç5$ 1
]
Ç5Ç51 2
.
Ç5Ç52 3
uvs2
Ç5Ç53 7
[
Ç5Ç57 8
$num
Ç5Ç58 9
+
Ç5Ç5: ;
index_X4
Ç5Ç5< D
]
Ç5Ç5D E
=
Ç5Ç5F G 
characterInfoArray
Ç5Ç5H Z
[
Ç5Ç5Z [
i
Ç5Ç5[ \
]
Ç5Ç5\ ]
.
Ç5Ç5] ^
	vertex_TL
Ç5Ç5^ g
.
Ç5Ç5g h
uv2
Ç5Ç5h k
;
Ç5Ç5k l

m_textInfo
É5É5 
.
É5É5 
meshInfo
É5É5 #
[
É5É5# $
materialIndex
É5É5$ 1
]
É5É51 2
.
É5É52 3
uvs2
É5É53 7
[
É5É57 8
$num
É5É58 9
+
É5É5: ;
index_X4
É5É5< D
]
É5É5D E
=
É5É5F G 
characterInfoArray
É5É5H Z
[
É5É5Z [
i
É5É5[ \
]
É5É5\ ]
.
É5É5] ^
	vertex_TR
É5É5^ g
.
É5É5g h
uv2
É5É5h k
;
É5É5k l

m_textInfo
Ñ5Ñ5 
.
Ñ5Ñ5 
meshInfo
Ñ5Ñ5 #
[
Ñ5Ñ5# $
materialIndex
Ñ5Ñ5$ 1
]
Ñ5Ñ51 2
.
Ñ5Ñ52 3
uvs2
Ñ5Ñ53 7
[
Ñ5Ñ57 8
$num
Ñ5Ñ58 9
+
Ñ5Ñ5: ;
index_X4
Ñ5Ñ5< D
]
Ñ5Ñ5D E
=
Ñ5Ñ5F G 
characterInfoArray
Ñ5Ñ5H Z
[
Ñ5Ñ5Z [
i
Ñ5Ñ5[ \
]
Ñ5Ñ5\ ]
.
Ñ5Ñ5] ^
	vertex_BR
Ñ5Ñ5^ g
.
Ñ5Ñ5g h
uv2
Ñ5Ñ5h k
;
Ñ5Ñ5k l
}
Ö5Ö5 

m_textInfo
ê5ê5 
.
ê5ê5 
meshInfo
ê5ê5 
[
ê5ê5  
materialIndex
ê5ê5  -
]
ê5ê5- .
.
ê5ê5. /
colors32
ê5ê5/ 7
[
ê5ê57 8
$num
ê5ê58 9
+
ê5ê5: ;
index_X4
ê5ê5< D
]
ê5ê5D E
=
ê5ê5F G 
characterInfoArray
ê5ê5H Z
[
ê5ê5Z [
i
ê5ê5[ \
]
ê5ê5\ ]
.
ê5ê5] ^
	vertex_BL
ê5ê5^ g
.
ê5ê5g h
color
ê5ê5h m
;
ê5ê5m n

m_textInfo
ë5ë5 
.
ë5ë5 
meshInfo
ë5ë5 
[
ë5ë5  
materialIndex
ë5ë5  -
]
ë5ë5- .
.
ë5ë5. /
colors32
ë5ë5/ 7
[
ë5ë57 8
$num
ë5ë58 9
+
ë5ë5: ;
index_X4
ë5ë5< D
]
ë5ë5D E
=
ë5ë5F G 
characterInfoArray
ë5ë5H Z
[
ë5ë5Z [
i
ë5ë5[ \
]
ë5ë5\ ]
.
ë5ë5] ^
	vertex_TL
ë5ë5^ g
.
ë5ë5g h
color
ë5ë5h m
;
ë5ë5m n

m_textInfo
í5í5 
.
í5í5 
meshInfo
í5í5 
[
í5í5  
materialIndex
í5í5  -
]
í5í5- .
.
í5í5. /
colors32
í5í5/ 7
[
í5í57 8
$num
í5í58 9
+
í5í5: ;
index_X4
í5í5< D
]
í5í5D E
=
í5í5F G 
characterInfoArray
í5í5H Z
[
í5í5Z [
i
í5í5[ \
]
í5í5\ ]
.
í5í5] ^
	vertex_TR
í5í5^ g
.
í5í5g h
color
í5í5h m
;
í5í5m n

m_textInfo
ì5ì5 
.
ì5ì5 
meshInfo
ì5ì5 
[
ì5ì5  
materialIndex
ì5ì5  -
]
ì5ì5- .
.
ì5ì5. /
colors32
ì5ì5/ 7
[
ì5ì57 8
$num
ì5ì58 9
+
ì5ì5: ;
index_X4
ì5ì5< D
]
ì5ì5D E
=
ì5ì5F G 
characterInfoArray
ì5ì5H Z
[
ì5ì5Z [
i
ì5ì5[ \
]
ì5ì5\ ]
.
ì5ì5] ^
	vertex_BR
ì5ì5^ g
.
ì5ì5g h
color
ì5ì5h m
;
ì5ì5m n
if
ï5ï5 
(
ï5ï5 
isVolumetric
ï5ï5 
)
ï5ï5 
{
ñ5ñ5 
Color32
ó5ó5 
	backColor
ó5ó5 !
=
ó5ó5" #
new
ó5ó5$ '
Color32
ó5ó5( /
(
ó5ó5/ 0
$num
ó5ó50 3
,
ó5ó53 4
$num
ó5ó55 8
,
ó5ó58 9
$num
ó5ó5: =
,
ó5ó5= >
$num
ó5ó5? B
)
ó5ó5B C
;
ó5ó5C D

m_textInfo
ò5ò5 
.
ò5ò5 
meshInfo
ò5ò5 #
[
ò5ò5# $
materialIndex
ò5ò5$ 1
]
ò5ò51 2
.
ò5ò52 3
colors32
ò5ò53 ;
[
ò5ò5; <
$num
ò5ò5< =
+
ò5ò5> ?
index_X4
ò5ò5@ H
]
ò5ò5H I
=
ò5ò5J K
	backColor
ò5ò5L U
;
ò5ò5U V

m_textInfo
ô5ô5 
.
ô5ô5 
meshInfo
ô5ô5 #
[
ô5ô5# $
materialIndex
ô5ô5$ 1
]
ô5ô51 2
.
ô5ô52 3
colors32
ô5ô53 ;
[
ô5ô5; <
$num
ô5ô5< =
+
ô5ô5> ?
index_X4
ô5ô5@ H
]
ô5ô5H I
=
ô5ô5J K
	backColor
ô5ô5L U
;
ô5ô5U V

m_textInfo
ö5ö5 
.
ö5ö5 
meshInfo
ö5ö5 #
[
ö5ö5# $
materialIndex
ö5ö5$ 1
]
ö5ö51 2
.
ö5ö52 3
colors32
ö5ö53 ;
[
ö5ö5; <
$num
ö5ö5< =
+
ö5ö5> ?
index_X4
ö5ö5@ H
]
ö5ö5H I
=
ö5ö5J K
	backColor
ö5ö5L U
;
ö5ö5U V

m_textInfo
õ5õ5 
.
õ5õ5 
meshInfo
õ5õ5 #
[
õ5õ5# $
materialIndex
õ5õ5$ 1
]
õ5õ51 2
.
õ5õ52 3
colors32
õ5õ53 ;
[
õ5õ5; <
$num
õ5õ5< =
+
õ5õ5> ?
index_X4
õ5õ5@ H
]
õ5õ5H I
=
õ5õ5J K
	backColor
õ5õ5L U
;
õ5õ5U V
}
ú5ú5 

m_textInfo
û5û5 
.
û5û5 
meshInfo
û5û5 
[
û5û5  
materialIndex
û5û5  -
]
û5û5- .
.
û5û5. /
vertexCount
û5û5/ :
=
û5û5; <
index_X4
û5û5= E
+
û5û5F G
(
û5û5H I
!
û5û5I J
isVolumetric
û5û5J V
?
û5û5W X
$num
û5û5Y Z
:
û5û5[ \
$num
û5û5] ^
)
û5û5^ _
;
û5û5_ `
}
ü5ü5 	
	protected
ß5ß5 
virtual
ß5ß5 
void
ß5ß5 %
FillSpriteVertexBuffers
ß5ß5 6
(
ß5ß56 7
int
ß5ß57 :
i
ß5ß5; <
,
ß5ß5< =
int
ß5ß5> A
index_X4
ß5ß5B J
)
ß5ß5J K
{
®5®5 	
int
©5©5 
materialIndex
©5©5 
=
©5©5 

m_textInfo
©5©5  *
.
©5©5* +
characterInfo
©5©5+ 8
[
©5©58 9
i
©5©59 :
]
©5©5: ;
.
©5©5; <$
materialReferenceIndex
©5©5< R
;
©5©5R S
index_X4
™5™5 
=
™5™5 

m_textInfo
™5™5 !
.
™5™5! "
meshInfo
™5™5" *
[
™5™5* +
materialIndex
™5™5+ 8
]
™5™58 9
.
™5™59 :
vertexCount
™5™5: E
;
™5™5E F
if
≠5≠5 
(
≠5≠5 
index_X4
≠5≠5 
>=
≠5≠5 

m_textInfo
≠5≠5 &
.
≠5≠5& '
meshInfo
≠5≠5' /
[
≠5≠5/ 0
materialIndex
≠5≠50 =
]
≠5≠5= >
.
≠5≠5> ?
vertices
≠5≠5? G
.
≠5≠5G H
Length
≠5≠5H N
)
≠5≠5N O

m_textInfo
Æ5Æ5 
.
Æ5Æ5 
meshInfo
Æ5Æ5 #
[
Æ5Æ5# $
materialIndex
Æ5Æ5$ 1
]
Æ5Æ51 2
.
Æ5Æ52 3
ResizeMeshInfo
Æ5Æ53 A
(
Æ5Æ5A B
Mathf
Æ5Æ5B G
.
Æ5Æ5G H
NextPowerOfTwo
Æ5Æ5H V
(
Æ5Æ5V W
(
Æ5Æ5W X
index_X4
Æ5Æ5X `
+
Æ5Æ5a b
$num
Æ5Æ5c d
)
Æ5Æ5d e
/
Æ5Æ5f g
$num
Æ5Æ5h i
)
Æ5Æ5i j
)
Æ5Æ5j k
;
Æ5Æ5k l
TMP_CharacterInfo
∞5∞5 
[
∞5∞5 
]
∞5∞5  
characterInfoArray
∞5∞5  2
=
∞5∞53 4

m_textInfo
∞5∞55 ?
.
∞5∞5? @
characterInfo
∞5∞5@ M
;
∞5∞5M N

m_textInfo
±5±5 
.
±5±5 
characterInfo
±5±5 $
[
±5±5$ %
i
±5±5% &
]
±5±5& '
.
±5±5' (
vertexIndex
±5±5( 3
=
±5±54 5
index_X4
±5±56 >
;
±5±5> ?

m_textInfo
¥5¥5 
.
¥5¥5 
meshInfo
¥5¥5 
[
¥5¥5  
materialIndex
¥5¥5  -
]
¥5¥5- .
.
¥5¥5. /
vertices
¥5¥5/ 7
[
¥5¥57 8
$num
¥5¥58 9
+
¥5¥5: ;
index_X4
¥5¥5< D
]
¥5¥5D E
=
¥5¥5F G 
characterInfoArray
¥5¥5H Z
[
¥5¥5Z [
i
¥5¥5[ \
]
¥5¥5\ ]
.
¥5¥5] ^
	vertex_BL
¥5¥5^ g
.
¥5¥5g h
position
¥5¥5h p
;
¥5¥5p q

m_textInfo
µ5µ5 
.
µ5µ5 
meshInfo
µ5µ5 
[
µ5µ5  
materialIndex
µ5µ5  -
]
µ5µ5- .
.
µ5µ5. /
vertices
µ5µ5/ 7
[
µ5µ57 8
$num
µ5µ58 9
+
µ5µ5: ;
index_X4
µ5µ5< D
]
µ5µ5D E
=
µ5µ5F G 
characterInfoArray
µ5µ5H Z
[
µ5µ5Z [
i
µ5µ5[ \
]
µ5µ5\ ]
.
µ5µ5] ^
	vertex_TL
µ5µ5^ g
.
µ5µ5g h
position
µ5µ5h p
;
µ5µ5p q

m_textInfo
∂5∂5 
.
∂5∂5 
meshInfo
∂5∂5 
[
∂5∂5  
materialIndex
∂5∂5  -
]
∂5∂5- .
.
∂5∂5. /
vertices
∂5∂5/ 7
[
∂5∂57 8
$num
∂5∂58 9
+
∂5∂5: ;
index_X4
∂5∂5< D
]
∂5∂5D E
=
∂5∂5F G 
characterInfoArray
∂5∂5H Z
[
∂5∂5Z [
i
∂5∂5[ \
]
∂5∂5\ ]
.
∂5∂5] ^
	vertex_TR
∂5∂5^ g
.
∂5∂5g h
position
∂5∂5h p
;
∂5∂5p q

m_textInfo
∑5∑5 
.
∑5∑5 
meshInfo
∑5∑5 
[
∑5∑5  
materialIndex
∑5∑5  -
]
∑5∑5- .
.
∑5∑5. /
vertices
∑5∑5/ 7
[
∑5∑57 8
$num
∑5∑58 9
+
∑5∑5: ;
index_X4
∑5∑5< D
]
∑5∑5D E
=
∑5∑5F G 
characterInfoArray
∑5∑5H Z
[
∑5∑5Z [
i
∑5∑5[ \
]
∑5∑5\ ]
.
∑5∑5] ^
	vertex_BR
∑5∑5^ g
.
∑5∑5g h
position
∑5∑5h p
;
∑5∑5p q

m_textInfo
ª5ª5 
.
ª5ª5 
meshInfo
ª5ª5 
[
ª5ª5  
materialIndex
ª5ª5  -
]
ª5ª5- .
.
ª5ª5. /
uvs0
ª5ª5/ 3
[
ª5ª53 4
$num
ª5ª54 5
+
ª5ª56 7
index_X4
ª5ª58 @
]
ª5ª5@ A
=
ª5ª5B C 
characterInfoArray
ª5ª5D V
[
ª5ª5V W
i
ª5ª5W X
]
ª5ª5X Y
.
ª5ª5Y Z
	vertex_BL
ª5ª5Z c
.
ª5ª5c d
uv
ª5ª5d f
;
ª5ª5f g

m_textInfo
º5º5 
.
º5º5 
meshInfo
º5º5 
[
º5º5  
materialIndex
º5º5  -
]
º5º5- .
.
º5º5. /
uvs0
º5º5/ 3
[
º5º53 4
$num
º5º54 5
+
º5º56 7
index_X4
º5º58 @
]
º5º5@ A
=
º5º5B C 
characterInfoArray
º5º5D V
[
º5º5V W
i
º5º5W X
]
º5º5X Y
.
º5º5Y Z
	vertex_TL
º5º5Z c
.
º5º5c d
uv
º5º5d f
;
º5º5f g

m_textInfo
Ω5Ω5 
.
Ω5Ω5 
meshInfo
Ω5Ω5 
[
Ω5Ω5  
materialIndex
Ω5Ω5  -
]
Ω5Ω5- .
.
Ω5Ω5. /
uvs0
Ω5Ω5/ 3
[
Ω5Ω53 4
$num
Ω5Ω54 5
+
Ω5Ω56 7
index_X4
Ω5Ω58 @
]
Ω5Ω5@ A
=
Ω5Ω5B C 
characterInfoArray
Ω5Ω5D V
[
Ω5Ω5V W
i
Ω5Ω5W X
]
Ω5Ω5X Y
.
Ω5Ω5Y Z
	vertex_TR
Ω5Ω5Z c
.
Ω5Ω5c d
uv
Ω5Ω5d f
;
Ω5Ω5f g

m_textInfo
æ5æ5 
.
æ5æ5 
meshInfo
æ5æ5 
[
æ5æ5  
materialIndex
æ5æ5  -
]
æ5æ5- .
.
æ5æ5. /
uvs0
æ5æ5/ 3
[
æ5æ53 4
$num
æ5æ54 5
+
æ5æ56 7
index_X4
æ5æ58 @
]
æ5æ5@ A
=
æ5æ5B C 
characterInfoArray
æ5æ5D V
[
æ5æ5V W
i
æ5æ5W X
]
æ5æ5X Y
.
æ5æ5Y Z
	vertex_BR
æ5æ5Z c
.
æ5æ5c d
uv
æ5æ5d f
;
æ5æ5f g

m_textInfo
¬5¬5 
.
¬5¬5 
meshInfo
¬5¬5 
[
¬5¬5  
materialIndex
¬5¬5  -
]
¬5¬5- .
.
¬5¬5. /
uvs2
¬5¬5/ 3
[
¬5¬53 4
$num
¬5¬54 5
+
¬5¬56 7
index_X4
¬5¬58 @
]
¬5¬5@ A
=
¬5¬5B C 
characterInfoArray
¬5¬5D V
[
¬5¬5V W
i
¬5¬5W X
]
¬5¬5X Y
.
¬5¬5Y Z
	vertex_BL
¬5¬5Z c
.
¬5¬5c d
uv2
¬5¬5d g
;
¬5¬5g h

m_textInfo
√5√5 
.
√5√5 
meshInfo
√5√5 
[
√5√5  
materialIndex
√5√5  -
]
√5√5- .
.
√5√5. /
uvs2
√5√5/ 3
[
√5√53 4
$num
√5√54 5
+
√5√56 7
index_X4
√5√58 @
]
√5√5@ A
=
√5√5B C 
characterInfoArray
√5√5D V
[
√5√5V W
i
√5√5W X
]
√5√5X Y
.
√5√5Y Z
	vertex_TL
√5√5Z c
.
√5√5c d
uv2
√5√5d g
;
√5√5g h

m_textInfo
ƒ5ƒ5 
.
ƒ5ƒ5 
meshInfo
ƒ5ƒ5 
[
ƒ5ƒ5  
materialIndex
ƒ5ƒ5  -
]
ƒ5ƒ5- .
.
ƒ5ƒ5. /
uvs2
ƒ5ƒ5/ 3
[
ƒ5ƒ53 4
$num
ƒ5ƒ54 5
+
ƒ5ƒ56 7
index_X4
ƒ5ƒ58 @
]
ƒ5ƒ5@ A
=
ƒ5ƒ5B C 
characterInfoArray
ƒ5ƒ5D V
[
ƒ5ƒ5V W
i
ƒ5ƒ5W X
]
ƒ5ƒ5X Y
.
ƒ5ƒ5Y Z
	vertex_TR
ƒ5ƒ5Z c
.
ƒ5ƒ5c d
uv2
ƒ5ƒ5d g
;
ƒ5ƒ5g h

m_textInfo
≈5≈5 
.
≈5≈5 
meshInfo
≈5≈5 
[
≈5≈5  
materialIndex
≈5≈5  -
]
≈5≈5- .
.
≈5≈5. /
uvs2
≈5≈5/ 3
[
≈5≈53 4
$num
≈5≈54 5
+
≈5≈56 7
index_X4
≈5≈58 @
]
≈5≈5@ A
=
≈5≈5B C 
characterInfoArray
≈5≈5D V
[
≈5≈5V W
i
≈5≈5W X
]
≈5≈5X Y
.
≈5≈5Y Z
	vertex_BR
≈5≈5Z c
.
≈5≈5c d
uv2
≈5≈5d g
;
≈5≈5g h

m_textInfo
–5–5 
.
–5–5 
meshInfo
–5–5 
[
–5–5  
materialIndex
–5–5  -
]
–5–5- .
.
–5–5. /
colors32
–5–5/ 7
[
–5–57 8
$num
–5–58 9
+
–5–5: ;
index_X4
–5–5< D
]
–5–5D E
=
–5–5F G 
characterInfoArray
–5–5H Z
[
–5–5Z [
i
–5–5[ \
]
–5–5\ ]
.
–5–5] ^
	vertex_BL
–5–5^ g
.
–5–5g h
color
–5–5h m
;
–5–5m n

m_textInfo
—5—5 
.
—5—5 
meshInfo
—5—5 
[
—5—5  
materialIndex
—5—5  -
]
—5—5- .
.
—5—5. /
colors32
—5—5/ 7
[
—5—57 8
$num
—5—58 9
+
—5—5: ;
index_X4
—5—5< D
]
—5—5D E
=
—5—5F G 
characterInfoArray
—5—5H Z
[
—5—5Z [
i
—5—5[ \
]
—5—5\ ]
.
—5—5] ^
	vertex_TL
—5—5^ g
.
—5—5g h
color
—5—5h m
;
—5—5m n

m_textInfo
“5“5 
.
“5“5 
meshInfo
“5“5 
[
“5“5  
materialIndex
“5“5  -
]
“5“5- .
.
“5“5. /
colors32
“5“5/ 7
[
“5“57 8
$num
“5“58 9
+
“5“5: ;
index_X4
“5“5< D
]
“5“5D E
=
“5“5F G 
characterInfoArray
“5“5H Z
[
“5“5Z [
i
“5“5[ \
]
“5“5\ ]
.
“5“5] ^
	vertex_TR
“5“5^ g
.
“5“5g h
color
“5“5h m
;
“5“5m n

m_textInfo
”5”5 
.
”5”5 
meshInfo
”5”5 
[
”5”5  
materialIndex
”5”5  -
]
”5”5- .
.
”5”5. /
colors32
”5”5/ 7
[
”5”57 8
$num
”5”58 9
+
”5”5: ;
index_X4
”5”5< D
]
”5”5D E
=
”5”5F G 
characterInfoArray
”5”5H Z
[
”5”5Z [
i
”5”5[ \
]
”5”5\ ]
.
”5”5] ^
	vertex_BR
”5”5^ g
.
”5”5g h
color
”5”5h m
;
”5”5m n

m_textInfo
’5’5 
.
’5’5 
meshInfo
’5’5 
[
’5’5  
materialIndex
’5’5  -
]
’5’5- .
.
’5’5. /
vertexCount
’5’5/ :
=
’5’5; <
index_X4
’5’5= E
+
’5’5F G
$num
’5’5H I
;
’5’5I J
}
÷5÷5 	
	protected
‚5‚5 
virtual
‚5‚5 
void
‚5‚5 
DrawUnderlineMesh
‚5‚5 0
(
‚5‚50 1
Vector3
‚5‚51 8
start
‚5‚59 >
,
‚5‚5> ?
Vector3
‚5‚5@ G
end
‚5‚5H K
,
‚5‚5K L
ref
‚5‚5M P
int
‚5‚5Q T
index
‚5‚5U Z
,
‚5‚5Z [
float
‚5‚5\ a

startScale
‚5‚5b l
,
‚5‚5l m
float
‚5‚5n s
endScale
‚5‚5t |
,
‚5‚5| }
float‚5‚5~ É
maxScale‚5‚5Ñ å
,‚5‚5å ç
float‚5‚5é ì
sdfScale‚5‚5î ú
,‚5‚5ú ù
Color32‚5‚5û •
underlineColor‚5‚5¶ ¥
)‚5‚5¥ µ
{
„5„5 	*
GetUnderlineSpecialCharacter
Â5Â5 (
(
Â5Â5( )
m_fontAsset
Â5Â5) 4
)
Â5Â54 5
;
Â5Â55 6
if
Á5Á5 
(
Á5Á5 
m_Underline
Á5Á5 
.
Á5Á5 
	character
Á5Á5 %
==
Á5Á5& (
null
Á5Á5) -
)
Á5Á5- .
{
Ë5Ë5 
if
È5È5 
(
È5È5 
!
È5È5 
TMP_Settings
È5È5 !
.
È5È5! "
warningsDisabled
È5È5" 2
)
È5È52 3
Debug
Í5Í5 
.
Í5Í5 

LogWarning
Í5Í5 $
(
Í5Í5$ %
$strÍ5Í5% Ñ
,Í5Í5Ñ Ö
thisÍ5Í5Ü ä
)Í5Í5ä ã
;Í5Í5ã å
return
Ï5Ï5 
;
Ï5Ï5 
}
Ì5Ì5 
int
Ô5Ô5 $
underlineMaterialIndex
Ô5Ô5 &
=
Ô5Ô5' (
m_Underline
Ô5Ô5) 4
.
Ô5Ô54 5
materialIndex
Ô5Ô55 B
;
Ô5Ô5B C
int
Ò5Ò5 
verticesCount
Ò5Ò5 
=
Ò5Ò5 
index
Ò5Ò5  %
+
Ò5Ò5& '
$num
Ò5Ò5( *
;
Ò5Ò5* +
if
Ù5Ù5 
(
Ù5Ù5 
verticesCount
Ù5Ù5 
>
Ù5Ù5 

m_textInfo
Ù5Ù5  *
.
Ù5Ù5* +
meshInfo
Ù5Ù5+ 3
[
Ù5Ù53 4$
underlineMaterialIndex
Ù5Ù54 J
]
Ù5Ù5J K
.
Ù5Ù5K L
vertices
Ù5Ù5L T
.
Ù5Ù5T U
Length
Ù5Ù5U [
)
Ù5Ù5[ \
{
ı5ı5 

m_textInfo
˜5˜5 
.
˜5˜5 
meshInfo
˜5˜5 #
[
˜5˜5# $$
underlineMaterialIndex
˜5˜5$ :
]
˜5˜5: ;
.
˜5˜5; <
ResizeMeshInfo
˜5˜5< J
(
˜5˜5J K
verticesCount
˜5˜5K X
/
˜5˜5Y Z
$num
˜5˜5[ \
)
˜5˜5\ ]
;
˜5˜5] ^
}
¯5¯5 
start
˚5˚5 
.
˚5˚5 
y
˚5˚5 
=
˚5˚5 
Mathf
˚5˚5 
.
˚5˚5 
Min
˚5˚5 
(
˚5˚5  
start
˚5˚5  %
.
˚5˚5% &
y
˚5˚5& '
,
˚5˚5' (
end
˚5˚5) ,
.
˚5˚5, -
y
˚5˚5- .
)
˚5˚5. /
;
˚5˚5/ 0
end
¸5¸5 
.
¸5¸5 
y
¸5¸5 
=
¸5¸5 
Mathf
¸5¸5 
.
¸5¸5 
Min
¸5¸5 
(
¸5¸5 
start
¸5¸5 #
.
¸5¸5# $
y
¸5¸5$ %
,
¸5¸5% &
end
¸5¸5' *
.
¸5¸5* +
y
¸5¸5+ ,
)
¸5¸5, -
;
¸5¸5- .
GlyphMetrics
˛5˛5 #
underlineGlyphMetrics
˛5˛5 .
=
˛5˛5/ 0
m_Underline
˛5˛51 <
.
˛5˛5< =
	character
˛5˛5= F
.
˛5˛5F G
glyph
˛5˛5G L
.
˛5˛5L M
metrics
˛5˛5M T
;
˛5˛5T U
	GlyphRect
ˇ5ˇ5  
underlineGlyphRect
ˇ5ˇ5 (
=
ˇ5ˇ5) *
m_Underline
ˇ5ˇ5+ 6
.
ˇ5ˇ56 7
	character
ˇ5ˇ57 @
.
ˇ5ˇ5@ A
glyph
ˇ5ˇ5A F
.
ˇ5ˇ5F G
	glyphRect
ˇ5ˇ5G P
;
ˇ5ˇ5P Q
float
Å6Å6 
segmentWidth
Å6Å6 
=
Å6Å6  #
underlineGlyphMetrics
Å6Å6! 6
.
Å6Å66 7
width
Å6Å67 <
/
Å6Å6= >
$num
Å6Å6? @
*
Å6Å6A B
maxScale
Å6Å6C K
;
Å6Å6K L
if
É6É6 
(
É6É6 
end
É6É6 
.
É6É6 
x
É6É6 
-
É6É6 
start
É6É6 
.
É6É6 
x
É6É6 
<
É6É6  !#
underlineGlyphMetrics
É6É6" 7
.
É6É67 8
width
É6É68 =
*
É6É6> ?
maxScale
É6É6@ H
)
É6É6H I
{
Ñ6Ñ6 
segmentWidth
Ö6Ö6 
=
Ö6Ö6 
(
Ö6Ö6  
end
Ö6Ö6  #
.
Ö6Ö6# $
x
Ö6Ö6$ %
-
Ö6Ö6& '
start
Ö6Ö6( -
.
Ö6Ö6- .
x
Ö6Ö6. /
)
Ö6Ö6/ 0
/
Ö6Ö61 2
$num
Ö6Ö63 5
;
Ö6Ö65 6
}
Ü6Ü6 
float
à6à6 
startPadding
à6à6 
=
à6à6  
	m_padding
à6à6! *
*
à6à6+ ,

startScale
à6à6- 7
/
à6à68 9
maxScale
à6à6: B
;
à6à6B C
float
â6â6 

endPadding
â6â6 
=
â6â6 
	m_padding
â6â6 (
*
â6â6) *
endScale
â6â6+ 3
/
â6â64 5
maxScale
â6â66 >
;
â6â6> ?
float
ã6ã6  
underlineThickness
ã6ã6 $
=
ã6ã6% &
m_Underline
ã6ã6' 2
.
ã6ã62 3
	fontAsset
ã6ã63 <
.
ã6ã6< =
faceInfo
ã6ã6= E
.
ã6ã6E F 
underlineThickness
ã6ã6F X
;
ã6ã6X Y
Vector3
è6è6 
[
è6è6 
]
è6è6 
vertices
è6è6 
=
è6è6  

m_textInfo
è6è6! +
.
è6è6+ ,
meshInfo
è6è6, 4
[
è6è64 5$
underlineMaterialIndex
è6è65 K
]
è6è6K L
.
è6è6L M
vertices
è6è6M U
;
è6è6U V
vertices
í6í6 
[
í6í6 
index
í6í6 
+
í6í6 
$num
í6í6 
]
í6í6 
=
í6í6  !
start
í6í6" '
+
í6í6( )
new
í6í6* -
Vector3
í6í6. 5
(
í6í65 6
$num
í6í66 7
,
í6í67 8
$num
í6í69 :
-
í6í6; <
(
í6í6= > 
underlineThickness
í6í6> P
+
í6í6Q R
	m_padding
í6í6S \
)
í6í6\ ]
*
í6í6^ _
maxScale
í6í6` h
,
í6í6h i
$num
í6í6j k
)
í6í6k l
;
í6í6l m
vertices
ì6ì6 
[
ì6ì6 
index
ì6ì6 
+
ì6ì6 
$num
ì6ì6 
]
ì6ì6 
=
ì6ì6  !
start
ì6ì6" '
+
ì6ì6( )
new
ì6ì6* -
Vector3
ì6ì6. 5
(
ì6ì65 6
$num
ì6ì66 7
,
ì6ì67 8
	m_padding
ì6ì69 B
*
ì6ì6C D
maxScale
ì6ì6E M
,
ì6ì6M N
$num
ì6ì6O P
)
ì6ì6P Q
;
ì6ì6Q R
vertices
î6î6 
[
î6î6 
index
î6î6 
+
î6î6 
$num
î6î6 
]
î6î6 
=
î6î6  !
vertices
î6î6" *
[
î6î6* +
index
î6î6+ 0
+
î6î61 2
$num
î6î63 4
]
î6î64 5
+
î6î66 7
new
î6î68 ;
Vector3
î6î6< C
(
î6î6C D
segmentWidth
î6î6D P
,
î6î6P Q
$num
î6î6R S
,
î6î6S T
$num
î6î6U V
)
î6î6V W
;
î6î6W X
vertices
ï6ï6 
[
ï6ï6 
index
ï6ï6 
+
ï6ï6 
$num
ï6ï6 
]
ï6ï6 
=
ï6ï6  !
vertices
ï6ï6" *
[
ï6ï6* +
index
ï6ï6+ 0
+
ï6ï61 2
$num
ï6ï63 4
]
ï6ï64 5
+
ï6ï66 7
new
ï6ï68 ;
Vector3
ï6ï6< C
(
ï6ï6C D
segmentWidth
ï6ï6D P
,
ï6ï6P Q
$num
ï6ï6R S
,
ï6ï6S T
$num
ï6ï6U V
)
ï6ï6V W
;
ï6ï6W X
vertices
ò6ò6 
[
ò6ò6 
index
ò6ò6 
+
ò6ò6 
$num
ò6ò6 
]
ò6ò6 
=
ò6ò6  !
vertices
ò6ò6" *
[
ò6ò6* +
index
ò6ò6+ 0
+
ò6ò61 2
$num
ò6ò63 4
]
ò6ò64 5
;
ò6ò65 6
vertices
ô6ô6 
[
ô6ô6 
index
ô6ô6 
+
ô6ô6 
$num
ô6ô6 
]
ô6ô6 
=
ô6ô6  !
vertices
ô6ô6" *
[
ô6ô6* +
index
ô6ô6+ 0
+
ô6ô61 2
$num
ô6ô63 4
]
ô6ô64 5
;
ô6ô65 6
vertices
ö6ö6 
[
ö6ö6 
index
ö6ö6 
+
ö6ö6 
$num
ö6ö6 
]
ö6ö6 
=
ö6ö6  !
end
ö6ö6" %
+
ö6ö6& '
new
ö6ö6( +
Vector3
ö6ö6, 3
(
ö6ö63 4
-
ö6ö64 5
segmentWidth
ö6ö65 A
,
ö6ö6A B
	m_padding
ö6ö6C L
*
ö6ö6M N
maxScale
ö6ö6O W
,
ö6ö6W X
$num
ö6ö6Y Z
)
ö6ö6Z [
;
ö6ö6[ \
vertices
õ6õ6 
[
õ6õ6 
index
õ6õ6 
+
õ6õ6 
$num
õ6õ6 
]
õ6õ6 
=
õ6õ6  !
end
õ6õ6" %
+
õ6õ6& '
new
õ6õ6( +
Vector3
õ6õ6, 3
(
õ6õ63 4
-
õ6õ64 5
segmentWidth
õ6õ65 A
,
õ6õ6A B
-
õ6õ6C D
(
õ6õ6D E 
underlineThickness
õ6õ6E W
+
õ6õ6X Y
	m_padding
õ6õ6Z c
)
õ6õ6c d
*
õ6õ6e f
maxScale
õ6õ6g o
,
õ6õ6o p
$num
õ6õ6q r
)
õ6õ6r s
;
õ6õ6s t
vertices
û6û6 
[
û6û6 
index
û6û6 
+
û6û6 
$num
û6û6 
]
û6û6 
=
û6û6  !
vertices
û6û6" *
[
û6û6* +
index
û6û6+ 0
+
û6û61 2
$num
û6û63 4
]
û6û64 5
;
û6û65 6
vertices
ü6ü6 
[
ü6ü6 
index
ü6ü6 
+
ü6ü6 
$num
ü6ü6 
]
ü6ü6 
=
ü6ü6  !
vertices
ü6ü6" *
[
ü6ü6* +
index
ü6ü6+ 0
+
ü6ü61 2
$num
ü6ü63 4
]
ü6ü64 5
;
ü6ü65 6
vertices
†6†6 
[
†6†6 
index
†6†6 
+
†6†6 
$num
†6†6 
]
†6†6  
=
†6†6! "
end
†6†6# &
+
†6†6' (
new
†6†6) ,
Vector3
†6†6- 4
(
†6†64 5
$num
†6†65 6
,
†6†66 7
	m_padding
†6†68 A
*
†6†6B C
maxScale
†6†6D L
,
†6†6L M
$num
†6†6N O
)
†6†6O P
;
†6†6P Q
vertices
°6°6 
[
°6°6 
index
°6°6 
+
°6°6 
$num
°6°6 
]
°6°6  
=
°6°6! "
end
°6°6# &
+
°6°6' (
new
°6°6) ,
Vector3
°6°6- 4
(
°6°64 5
$num
°6°65 6
,
°6°66 7
-
°6°68 9
(
°6°69 : 
underlineThickness
°6°6: L
+
°6°6M N
	m_padding
°6°6O X
)
°6°6X Y
*
°6°6Z [
maxScale
°6°6\ d
,
°6°6d e
$num
°6°6f g
)
°6°6g h
;
°6°6h i
Vector2
¶6¶6 
[
¶6¶6 
]
¶6¶6 
uvs0
¶6¶6 
=
¶6¶6 

m_textInfo
¶6¶6 '
.
¶6¶6' (
meshInfo
¶6¶6( 0
[
¶6¶60 1$
underlineMaterialIndex
¶6¶61 G
]
¶6¶6G H
.
¶6¶6H I
uvs0
¶6¶6I M
;
¶6¶6M N
int
®6®6 

atlasWidth
®6®6 
=
®6®6 
m_Underline
®6®6 (
.
®6®6( )
	fontAsset
®6®6) 2
.
®6®62 3

atlasWidth
®6®63 =
;
®6®6= >
int
©6©6 
atlasHeight
©6©6 
=
©6©6 
m_Underline
©6©6 )
.
©6©6) *
	fontAsset
©6©6* 3
.
©6©63 4
atlasHeight
©6©64 ?
;
©6©6? @
Vector2
¨6¨6 
uv0
¨6¨6 
=
¨6¨6 
new
¨6¨6 
Vector2
¨6¨6 %
(
¨6¨6% &
(
¨6¨6& ' 
underlineGlyphRect
¨6¨6' 9
.
¨6¨69 :
x
¨6¨6: ;
-
¨6¨6< =
startPadding
¨6¨6> J
)
¨6¨6J K
/
¨6¨6L M

atlasWidth
¨6¨6N X
,
¨6¨6X Y
(
¨6¨6Z [ 
underlineGlyphRect
¨6¨6[ m
.
¨6¨6m n
y
¨6¨6n o
-
¨6¨6p q
	m_padding
¨6¨6r {
)
¨6¨6{ |
/
¨6¨6} ~
atlasHeight¨6¨6 ä
)¨6¨6ä ã
;¨6¨6ã å
Vector2
≠6≠6 
uv1
≠6≠6 
=
≠6≠6 
new
≠6≠6 
Vector2
≠6≠6 %
(
≠6≠6% &
uv0
≠6≠6& )
.
≠6≠6) *
x
≠6≠6* +
,
≠6≠6+ ,
(
≠6≠6- . 
underlineGlyphRect
≠6≠6. @
.
≠6≠6@ A
y
≠6≠6A B
+
≠6≠6C D 
underlineGlyphRect
≠6≠6E W
.
≠6≠6W X
height
≠6≠6X ^
+
≠6≠6_ `
	m_padding
≠6≠6a j
)
≠6≠6j k
/
≠6≠6l m
atlasHeight
≠6≠6n y
)
≠6≠6y z
;
≠6≠6z {
Vector2
Æ6Æ6 
uv2
Æ6Æ6 
=
Æ6Æ6 
new
Æ6Æ6 
Vector2
Æ6Æ6 %
(
Æ6Æ6% &
(
Æ6Æ6& ' 
underlineGlyphRect
Æ6Æ6' 9
.
Æ6Æ69 :
x
Æ6Æ6: ;
-
Æ6Æ6< =
startPadding
Æ6Æ6> J
+
Æ6Æ6K L
(
Æ6Æ6M N
float
Æ6Æ6N S
)
Æ6Æ6S T 
underlineGlyphRect
Æ6Æ6T f
.
Æ6Æ6f g
width
Æ6Æ6g l
/
Æ6Æ6m n
$num
Æ6Æ6o p
)
Æ6Æ6p q
/
Æ6Æ6r s

atlasWidth
Æ6Æ6t ~
,
Æ6Æ6~ 
uv1Æ6Æ6Ä É
.Æ6Æ6É Ñ
yÆ6Æ6Ñ Ö
)Æ6Æ6Ö Ü
;Æ6Æ6Ü á
Vector2
Ø6Ø6 
uv3
Ø6Ø6 
=
Ø6Ø6 
new
Ø6Ø6 
Vector2
Ø6Ø6 %
(
Ø6Ø6% &
uv2
Ø6Ø6& )
.
Ø6Ø6) *
x
Ø6Ø6* +
,
Ø6Ø6+ ,
uv0
Ø6Ø6- 0
.
Ø6Ø60 1
y
Ø6Ø61 2
)
Ø6Ø62 3
;
Ø6Ø63 4
Vector2
∞6∞6 
uv4
∞6∞6 
=
∞6∞6 
new
∞6∞6 
Vector2
∞6∞6 %
(
∞6∞6% &
(
∞6∞6& ' 
underlineGlyphRect
∞6∞6' 9
.
∞6∞69 :
x
∞6∞6: ;
+
∞6∞6< =

endPadding
∞6∞6> H
+
∞6∞6I J
(
∞6∞6K L
float
∞6∞6L Q
)
∞6∞6Q R 
underlineGlyphRect
∞6∞6R d
.
∞6∞6d e
width
∞6∞6e j
/
∞6∞6k l
$num
∞6∞6m n
)
∞6∞6n o
/
∞6∞6p q

atlasWidth
∞6∞6r |
,
∞6∞6| }
uv1∞6∞6~ Å
.∞6∞6Å Ç
y∞6∞6Ç É
)∞6∞6É Ñ
;∞6∞6Ñ Ö
Vector2
±6±6 
uv5
±6±6 
=
±6±6 
new
±6±6 
Vector2
±6±6 %
(
±6±6% &
uv4
±6±6& )
.
±6±6) *
x
±6±6* +
,
±6±6+ ,
uv0
±6±6- 0
.
±6±60 1
y
±6±61 2
)
±6±62 3
;
±6±63 4
Vector2
≤6≤6 
uv6
≤6≤6 
=
≤6≤6 
new
≤6≤6 
Vector2
≤6≤6 %
(
≤6≤6% &
(
≤6≤6& ' 
underlineGlyphRect
≤6≤6' 9
.
≤6≤69 :
x
≤6≤6: ;
+
≤6≤6< =

endPadding
≤6≤6> H
+
≤6≤6I J 
underlineGlyphRect
≤6≤6K ]
.
≤6≤6] ^
width
≤6≤6^ c
)
≤6≤6c d
/
≤6≤6e f

atlasWidth
≤6≤6g q
,
≤6≤6q r
uv1
≤6≤6s v
.
≤6≤6v w
y
≤6≤6w x
)
≤6≤6x y
;
≤6≤6y z
Vector2
≥6≥6 
uv7
≥6≥6 
=
≥6≥6 
new
≥6≥6 
Vector2
≥6≥6 %
(
≥6≥6% &
uv6
≥6≥6& )
.
≥6≥6) *
x
≥6≥6* +
,
≥6≥6+ ,
uv0
≥6≥6- 0
.
≥6≥60 1
y
≥6≥61 2
)
≥6≥62 3
;
≥6≥63 4
uvs0
∂6∂6 
[
∂6∂6 
$num
∂6∂6 
+
∂6∂6 
index
∂6∂6 
]
∂6∂6 
=
∂6∂6 
uv0
∂6∂6 !
;
∂6∂6! "
uvs0
∑6∑6 
[
∑6∑6 
$num
∑6∑6 
+
∑6∑6 
index
∑6∑6 
]
∑6∑6 
=
∑6∑6 
uv1
∑6∑6 !
;
∑6∑6! "
uvs0
∏6∏6 
[
∏6∏6 
$num
∏6∏6 
+
∏6∏6 
index
∏6∏6 
]
∏6∏6 
=
∏6∏6 
uv2
∏6∏6 !
;
∏6∏6! "
uvs0
π6π6 
[
π6π6 
$num
π6π6 
+
π6π6 
index
π6π6 
]
π6π6 
=
π6π6 
uv3
π6π6 !
;
π6π6! "
uvs0
º6º6 
[
º6º6 
$num
º6º6 
+
º6º6 
index
º6º6 
]
º6º6 
=
º6º6 
new
º6º6 !
Vector2
º6º6" )
(
º6º6) *
uv2
º6º6* -
.
º6º6- .
x
º6º6. /
-
º6º60 1
uv2
º6º62 5
.
º6º65 6
x
º6º66 7
*
º6º68 9
$num
º6º6: @
,
º6º6@ A
uv0
º6º6B E
.
º6º6E F
y
º6º6F G
)
º6º6G H
;
º6º6H I
uvs0
Ω6Ω6 
[
Ω6Ω6 
$num
Ω6Ω6 
+
Ω6Ω6 
index
Ω6Ω6 
]
Ω6Ω6 
=
Ω6Ω6 
new
Ω6Ω6 !
Vector2
Ω6Ω6" )
(
Ω6Ω6) *
uv2
Ω6Ω6* -
.
Ω6Ω6- .
x
Ω6Ω6. /
-
Ω6Ω60 1
uv2
Ω6Ω62 5
.
Ω6Ω65 6
x
Ω6Ω66 7
*
Ω6Ω68 9
$num
Ω6Ω6: @
,
Ω6Ω6@ A
uv1
Ω6Ω6B E
.
Ω6Ω6E F
y
Ω6Ω6F G
)
Ω6Ω6G H
;
Ω6Ω6H I
uvs0
æ6æ6 
[
æ6æ6 
$num
æ6æ6 
+
æ6æ6 
index
æ6æ6 
]
æ6æ6 
=
æ6æ6 
new
æ6æ6 !
Vector2
æ6æ6" )
(
æ6æ6) *
uv2
æ6æ6* -
.
æ6æ6- .
x
æ6æ6. /
+
æ6æ60 1
uv2
æ6æ62 5
.
æ6æ65 6
x
æ6æ66 7
*
æ6æ68 9
$num
æ6æ6: @
,
æ6æ6@ A
uv1
æ6æ6B E
.
æ6æ6E F
y
æ6æ6F G
)
æ6æ6G H
;
æ6æ6H I
uvs0
ø6ø6 
[
ø6ø6 
$num
ø6ø6 
+
ø6ø6 
index
ø6ø6 
]
ø6ø6 
=
ø6ø6 
new
ø6ø6 !
Vector2
ø6ø6" )
(
ø6ø6) *
uv2
ø6ø6* -
.
ø6ø6- .
x
ø6ø6. /
+
ø6ø60 1
uv2
ø6ø62 5
.
ø6ø65 6
x
ø6ø66 7
*
ø6ø68 9
$num
ø6ø6: @
,
ø6ø6@ A
uv0
ø6ø6B E
.
ø6ø6E F
y
ø6ø6F G
)
ø6ø6G H
;
ø6ø6H I
uvs0
¬6¬6 
[
¬6¬6 
$num
¬6¬6 
+
¬6¬6 
index
¬6¬6 
]
¬6¬6 
=
¬6¬6 
uv5
¬6¬6 !
;
¬6¬6! "
uvs0
√6√6 
[
√6√6 
$num
√6√6 
+
√6√6 
index
√6√6 
]
√6√6 
=
√6√6 
uv4
√6√6 !
;
√6√6! "
uvs0
ƒ6ƒ6 
[
ƒ6ƒ6 
$num
ƒ6ƒ6 
+
ƒ6ƒ6 
index
ƒ6ƒ6 
]
ƒ6ƒ6 
=
ƒ6ƒ6 
uv6
ƒ6ƒ6 "
;
ƒ6ƒ6" #
uvs0
≈6≈6 
[
≈6≈6 
$num
≈6≈6 
+
≈6≈6 
index
≈6≈6 
]
≈6≈6 
=
≈6≈6 
uv7
≈6≈6 "
;
≈6≈6" #
float
À6À6 
min_UvX
À6À6 
=
À6À6 
$num
À6À6 
;
À6À6 
float
Ã6Ã6 
max_UvX
Ã6Ã6 
=
Ã6Ã6 
(
Ã6Ã6 
vertices
Ã6Ã6 %
[
Ã6Ã6% &
index
Ã6Ã6& +
+
Ã6Ã6, -
$num
Ã6Ã6. /
]
Ã6Ã6/ 0
.
Ã6Ã60 1
x
Ã6Ã61 2
-
Ã6Ã63 4
start
Ã6Ã65 :
.
Ã6Ã6: ;
x
Ã6Ã6; <
)
Ã6Ã6< =
/
Ã6Ã6> ?
(
Ã6Ã6@ A
end
Ã6Ã6A D
.
Ã6Ã6D E
x
Ã6Ã6E F
-
Ã6Ã6G H
start
Ã6Ã6I N
.
Ã6Ã6N O
x
Ã6Ã6O P
)
Ã6Ã6P Q
;
Ã6Ã6Q R
float
œ6œ6 
xScale
œ6œ6 
=
œ6œ6 
Mathf
œ6œ6  
.
œ6œ6  !
Abs
œ6œ6! $
(
œ6œ6$ %
sdfScale
œ6œ6% -
)
œ6œ6- .
;
œ6œ6. /
Vector2
—6—6 
[
—6—6 
]
—6—6 
uvs2
—6—6 
=
—6—6 

m_textInfo
—6—6 '
.
—6—6' (
meshInfo
—6—6( 0
[
—6—60 1$
underlineMaterialIndex
—6—61 G
]
—6—6G H
.
—6—6H I
uvs2
—6—6I M
;
—6—6M N
uvs2
”6”6 
[
”6”6 
$num
”6”6 
+
”6”6 
index
”6”6 
]
”6”6 
=
”6”6 
PackUV
”6”6 $
(
”6”6$ %
$num
”6”6% &
,
”6”6& '
$num
”6”6( )
,
”6”6) *
xScale
”6”6+ 1
)
”6”61 2
;
”6”62 3
uvs2
‘6‘6 
[
‘6‘6 
$num
‘6‘6 
+
‘6‘6 
index
‘6‘6 
]
‘6‘6 
=
‘6‘6 
PackUV
‘6‘6 $
(
‘6‘6$ %
$num
‘6‘6% &
,
‘6‘6& '
$num
‘6‘6( )
,
‘6‘6) *
xScale
‘6‘6+ 1
)
‘6‘61 2
;
‘6‘62 3
uvs2
’6’6 
[
’6’6 
$num
’6’6 
+
’6’6 
index
’6’6 
]
’6’6 
=
’6’6 
PackUV
’6’6 $
(
’6’6$ %
max_UvX
’6’6% ,
,
’6’6, -
$num
’6’6. /
,
’6’6/ 0
xScale
’6’61 7
)
’6’67 8
;
’6’68 9
uvs2
÷6÷6 
[
÷6÷6 
$num
÷6÷6 
+
÷6÷6 
index
÷6÷6 
]
÷6÷6 
=
÷6÷6 
PackUV
÷6÷6 $
(
÷6÷6$ %
max_UvX
÷6÷6% ,
,
÷6÷6, -
$num
÷6÷6. /
,
÷6÷6/ 0
xScale
÷6÷61 7
)
÷6÷67 8
;
÷6÷68 9
min_UvX
ÿ6ÿ6 
=
ÿ6ÿ6 
(
ÿ6ÿ6 
vertices
ÿ6ÿ6 
[
ÿ6ÿ6  
index
ÿ6ÿ6  %
+
ÿ6ÿ6& '
$num
ÿ6ÿ6( )
]
ÿ6ÿ6) *
.
ÿ6ÿ6* +
x
ÿ6ÿ6+ ,
-
ÿ6ÿ6- .
start
ÿ6ÿ6/ 4
.
ÿ6ÿ64 5
x
ÿ6ÿ65 6
)
ÿ6ÿ66 7
/
ÿ6ÿ68 9
(
ÿ6ÿ6: ;
end
ÿ6ÿ6; >
.
ÿ6ÿ6> ?
x
ÿ6ÿ6? @
-
ÿ6ÿ6A B
start
ÿ6ÿ6C H
.
ÿ6ÿ6H I
x
ÿ6ÿ6I J
)
ÿ6ÿ6J K
;
ÿ6ÿ6K L
max_UvX
Ÿ6Ÿ6 
=
Ÿ6Ÿ6 
(
Ÿ6Ÿ6 
vertices
Ÿ6Ÿ6 
[
Ÿ6Ÿ6  
index
Ÿ6Ÿ6  %
+
Ÿ6Ÿ6& '
$num
Ÿ6Ÿ6( )
]
Ÿ6Ÿ6) *
.
Ÿ6Ÿ6* +
x
Ÿ6Ÿ6+ ,
-
Ÿ6Ÿ6- .
start
Ÿ6Ÿ6/ 4
.
Ÿ6Ÿ64 5
x
Ÿ6Ÿ65 6
)
Ÿ6Ÿ66 7
/
Ÿ6Ÿ68 9
(
Ÿ6Ÿ6: ;
end
Ÿ6Ÿ6; >
.
Ÿ6Ÿ6> ?
x
Ÿ6Ÿ6? @
-
Ÿ6Ÿ6A B
start
Ÿ6Ÿ6C H
.
Ÿ6Ÿ6H I
x
Ÿ6Ÿ6I J
)
Ÿ6Ÿ6J K
;
Ÿ6Ÿ6K L
uvs2
€6€6 
[
€6€6 
$num
€6€6 
+
€6€6 
index
€6€6 
]
€6€6 
=
€6€6 
PackUV
€6€6 $
(
€6€6$ %
min_UvX
€6€6% ,
,
€6€6, -
$num
€6€6. /
,
€6€6/ 0
xScale
€6€61 7
)
€6€67 8
;
€6€68 9
uvs2
‹6‹6 
[
‹6‹6 
$num
‹6‹6 
+
‹6‹6 
index
‹6‹6 
]
‹6‹6 
=
‹6‹6 
PackUV
‹6‹6 $
(
‹6‹6$ %
min_UvX
‹6‹6% ,
,
‹6‹6, -
$num
‹6‹6. /
,
‹6‹6/ 0
xScale
‹6‹61 7
)
‹6‹67 8
;
‹6‹68 9
uvs2
›6›6 
[
›6›6 
$num
›6›6 
+
›6›6 
index
›6›6 
]
›6›6 
=
›6›6 
PackUV
›6›6 $
(
›6›6$ %
max_UvX
›6›6% ,
,
›6›6, -
$num
›6›6. /
,
›6›6/ 0
xScale
›6›61 7
)
›6›67 8
;
›6›68 9
uvs2
ﬁ6ﬁ6 
[
ﬁ6ﬁ6 
$num
ﬁ6ﬁ6 
+
ﬁ6ﬁ6 
index
ﬁ6ﬁ6 
]
ﬁ6ﬁ6 
=
ﬁ6ﬁ6 
PackUV
ﬁ6ﬁ6 $
(
ﬁ6ﬁ6$ %
max_UvX
ﬁ6ﬁ6% ,
,
ﬁ6ﬁ6, -
$num
ﬁ6ﬁ6. /
,
ﬁ6ﬁ6/ 0
xScale
ﬁ6ﬁ61 7
)
ﬁ6ﬁ67 8
;
ﬁ6ﬁ68 9
min_UvX
‡6‡6 
=
‡6‡6 
(
‡6‡6 
vertices
‡6‡6 
[
‡6‡6  
index
‡6‡6  %
+
‡6‡6& '
$num
‡6‡6( )
]
‡6‡6) *
.
‡6‡6* +
x
‡6‡6+ ,
-
‡6‡6- .
start
‡6‡6/ 4
.
‡6‡64 5
x
‡6‡65 6
)
‡6‡66 7
/
‡6‡68 9
(
‡6‡6: ;
end
‡6‡6; >
.
‡6‡6> ?
x
‡6‡6? @
-
‡6‡6A B
start
‡6‡6C H
.
‡6‡6H I
x
‡6‡6I J
)
‡6‡6J K
;
‡6‡6K L
uvs2
‚6‚6 
[
‚6‚6 
$num
‚6‚6 
+
‚6‚6 
index
‚6‚6 
]
‚6‚6 
=
‚6‚6 
PackUV
‚6‚6 $
(
‚6‚6$ %
min_UvX
‚6‚6% ,
,
‚6‚6, -
$num
‚6‚6. /
,
‚6‚6/ 0
xScale
‚6‚61 7
)
‚6‚67 8
;
‚6‚68 9
uvs2
„6„6 
[
„6„6 
$num
„6„6 
+
„6„6 
index
„6„6 
]
„6„6 
=
„6„6 
PackUV
„6„6 $
(
„6„6$ %
min_UvX
„6„6% ,
,
„6„6, -
$num
„6„6. /
,
„6„6/ 0
xScale
„6„61 7
)
„6„67 8
;
„6„68 9
uvs2
‰6‰6 
[
‰6‰6 
$num
‰6‰6 
+
‰6‰6 
index
‰6‰6 
]
‰6‰6 
=
‰6‰6 
PackUV
‰6‰6 %
(
‰6‰6% &
$num
‰6‰6& '
,
‰6‰6' (
$num
‰6‰6) *
,
‰6‰6* +
xScale
‰6‰6, 2
)
‰6‰62 3
;
‰6‰63 4
uvs2
Â6Â6 
[
Â6Â6 
$num
Â6Â6 
+
Â6Â6 
index
Â6Â6 
]
Â6Â6 
=
Â6Â6 
PackUV
Â6Â6 %
(
Â6Â6% &
$num
Â6Â6& '
,
Â6Â6' (
$num
Â6Â6) *
,
Â6Â6* +
xScale
Â6Â6, 2
)
Â6Â62 3
;
Â6Â63 4
underlineColor
Î6Î6 
.
Î6Î6 
a
Î6Î6 
=
Î6Î6 
m_fontColor32
Î6Î6 ,
.
Î6Î6, -
a
Î6Î6- .
<
Î6Î6/ 0
underlineColor
Î6Î61 ?
.
Î6Î6? @
a
Î6Î6@ A
?
Î6Î6B C
m_fontColor32
Î6Î6D Q
.
Î6Î6Q R
a
Î6Î6R S
:
Î6Î6T U
underlineColor
Î6Î6V d
.
Î6Î6d e
a
Î6Î6e f
;
Î6Î6f g
Color32
Ì6Ì6 
[
Ì6Ì6 
]
Ì6Ì6 
colors32
Ì6Ì6 
=
Ì6Ì6  

m_textInfo
Ì6Ì6! +
.
Ì6Ì6+ ,
meshInfo
Ì6Ì6, 4
[
Ì6Ì64 5$
underlineMaterialIndex
Ì6Ì65 K
]
Ì6Ì6K L
.
Ì6Ì6L M
colors32
Ì6Ì6M U
;
Ì6Ì6U V
colors32
Ó6Ó6 
[
Ó6Ó6 
$num
Ó6Ó6 
+
Ó6Ó6 
index
Ó6Ó6 
]
Ó6Ó6 
=
Ó6Ó6  !
underlineColor
Ó6Ó6" 0
;
Ó6Ó60 1
colors32
Ô6Ô6 
[
Ô6Ô6 
$num
Ô6Ô6 
+
Ô6Ô6 
index
Ô6Ô6 
]
Ô6Ô6 
=
Ô6Ô6  !
underlineColor
Ô6Ô6" 0
;
Ô6Ô60 1
colors32
66 
[
66 
$num
66 
+
66 
index
66 
]
66 
=
66  !
underlineColor
66" 0
;
660 1
colors32
Ò6Ò6 
[
Ò6Ò6 
$num
Ò6Ò6 
+
Ò6Ò6 
index
Ò6Ò6 
]
Ò6Ò6 
=
Ò6Ò6  !
underlineColor
Ò6Ò6" 0
;
Ò6Ò60 1
colors32
Û6Û6 
[
Û6Û6 
$num
Û6Û6 
+
Û6Û6 
index
Û6Û6 
]
Û6Û6 
=
Û6Û6  !
underlineColor
Û6Û6" 0
;
Û6Û60 1
colors32
Ù6Ù6 
[
Ù6Ù6 
$num
Ù6Ù6 
+
Ù6Ù6 
index
Ù6Ù6 
]
Ù6Ù6 
=
Ù6Ù6  !
underlineColor
Ù6Ù6" 0
;
Ù6Ù60 1
colors32
ı6ı6 
[
ı6ı6 
$num
ı6ı6 
+
ı6ı6 
index
ı6ı6 
]
ı6ı6 
=
ı6ı6  !
underlineColor
ı6ı6" 0
;
ı6ı60 1
colors32
ˆ6ˆ6 
[
ˆ6ˆ6 
$num
ˆ6ˆ6 
+
ˆ6ˆ6 
index
ˆ6ˆ6 
]
ˆ6ˆ6 
=
ˆ6ˆ6  !
underlineColor
ˆ6ˆ6" 0
;
ˆ6ˆ60 1
colors32
¯6¯6 
[
¯6¯6 
$num
¯6¯6 
+
¯6¯6 
index
¯6¯6 
]
¯6¯6 
=
¯6¯6  !
underlineColor
¯6¯6" 0
;
¯6¯60 1
colors32
˘6˘6 
[
˘6˘6 
$num
˘6˘6 
+
˘6˘6 
index
˘6˘6 
]
˘6˘6 
=
˘6˘6  !
underlineColor
˘6˘6" 0
;
˘6˘60 1
colors32
˙6˙6 
[
˙6˙6 
$num
˙6˙6 
+
˙6˙6 
index
˙6˙6 
]
˙6˙6  
=
˙6˙6! "
underlineColor
˙6˙6# 1
;
˙6˙61 2
colors32
˚6˚6 
[
˚6˚6 
$num
˚6˚6 
+
˚6˚6 
index
˚6˚6 
]
˚6˚6  
=
˚6˚6! "
underlineColor
˚6˚6# 1
;
˚6˚61 2
index
˛6˛6 
+=
˛6˛6 
$num
˛6˛6 
;
˛6˛6 
}
ˇ6ˇ6 	
	protected
Ç7Ç7 
virtual
Ç7Ç7 
void
Ç7Ç7 
DrawTextHighlight
Ç7Ç7 0
(
Ç7Ç70 1
Vector3
Ç7Ç71 8
start
Ç7Ç79 >
,
Ç7Ç7> ?
Vector3
Ç7Ç7@ G
end
Ç7Ç7H K
,
Ç7Ç7K L
ref
Ç7Ç7M P
int
Ç7Ç7Q T
index
Ç7Ç7U Z
,
Ç7Ç7Z [
Color32
Ç7Ç7\ c
highlightColor
Ç7Ç7d r
)
Ç7Ç7r s
{
É7É7 	
if
Ñ7Ñ7 
(
Ñ7Ñ7 
m_Underline
Ñ7Ñ7 
.
Ñ7Ñ7 
	character
Ñ7Ñ7 %
==
Ñ7Ñ7& (
null
Ñ7Ñ7) -
)
Ñ7Ñ7- .
{
Ö7Ö7 *
GetUnderlineSpecialCharacter
Ü7Ü7 ,
(
Ü7Ü7, -
m_fontAsset
Ü7Ü7- 8
)
Ü7Ü78 9
;
Ü7Ü79 :
if
à7à7 
(
à7à7 
m_Underline
à7à7 
.
à7à7  
	character
à7à7  )
==
à7à7* ,
null
à7à7- 1
)
à7à71 2
{
â7â7 
if
ä7ä7 
(
ä7ä7 
!
ä7ä7 
TMP_Settings
ä7ä7 %
.
ä7ä7% &
warningsDisabled
ä7ä7& 6
)
ä7ä76 7
Debug
ã7ã7 
.
ã7ã7 

LogWarning
ã7ã7 (
(
ã7ã7( )
$strã7ã7) à
,ã7ã7à â
thisã7ã7ä é
)ã7ã7é è
;ã7ã7è ê
return
ç7ç7 
;
ç7ç7 
}
é7é7 
}
è7è7 
int
ë7ë7 $
underlineMaterialIndex
ë7ë7 &
=
ë7ë7' (
m_Underline
ë7ë7) 4
.
ë7ë74 5
materialIndex
ë7ë75 B
;
ë7ë7B C
int
ì7ì7 
verticesCount
ì7ì7 
=
ì7ì7 
index
ì7ì7  %
+
ì7ì7& '
$num
ì7ì7( )
;
ì7ì7) *
if
ñ7ñ7 
(
ñ7ñ7 
verticesCount
ñ7ñ7 
>
ñ7ñ7 

m_textInfo
ñ7ñ7  *
.
ñ7ñ7* +
meshInfo
ñ7ñ7+ 3
[
ñ7ñ73 4$
underlineMaterialIndex
ñ7ñ74 J
]
ñ7ñ7J K
.
ñ7ñ7K L
vertices
ñ7ñ7L T
.
ñ7ñ7T U
Length
ñ7ñ7U [
)
ñ7ñ7[ \
{
ó7ó7 

m_textInfo
ô7ô7 
.
ô7ô7 
meshInfo
ô7ô7 #
[
ô7ô7# $$
underlineMaterialIndex
ô7ô7$ :
]
ô7ô7: ;
.
ô7ô7; <
ResizeMeshInfo
ô7ô7< J
(
ô7ô7J K
verticesCount
ô7ô7K X
/
ô7ô7Y Z
$num
ô7ô7[ \
)
ô7ô7\ ]
;
ô7ô7] ^
}
ö7ö7 
Vector3
û7û7 
[
û7û7 
]
û7û7 
vertices
û7û7 
=
û7û7  

m_textInfo
û7û7! +
.
û7û7+ ,
meshInfo
û7û7, 4
[
û7û74 5$
underlineMaterialIndex
û7û75 K
]
û7û7K L
.
û7û7L M
vertices
û7û7M U
;
û7û7U V
vertices
°7°7 
[
°7°7 
index
°7°7 
+
°7°7 
$num
°7°7 
]
°7°7 
=
°7°7  !
start
°7°7" '
;
°7°7' (
vertices
¢7¢7 
[
¢7¢7 
index
¢7¢7 
+
¢7¢7 
$num
¢7¢7 
]
¢7¢7 
=
¢7¢7  !
new
¢7¢7" %
Vector3
¢7¢7& -
(
¢7¢7- .
start
¢7¢7. 3
.
¢7¢73 4
x
¢7¢74 5
,
¢7¢75 6
end
¢7¢77 :
.
¢7¢7: ;
y
¢7¢7; <
,
¢7¢7< =
$num
¢7¢7> ?
)
¢7¢7? @
;
¢7¢7@ A
vertices
£7£7 
[
£7£7 
index
£7£7 
+
£7£7 
$num
£7£7 
]
£7£7 
=
£7£7  !
end
£7£7" %
;
£7£7% &
vertices
§7§7 
[
§7§7 
index
§7§7 
+
§7§7 
$num
§7§7 
]
§7§7 
=
§7§7  !
new
§7§7" %
Vector3
§7§7& -
(
§7§7- .
end
§7§7. 1
.
§7§71 2
x
§7§72 3
,
§7§73 4
start
§7§75 :
.
§7§7: ;
y
§7§7; <
,
§7§7< =
$num
§7§7> ?
)
§7§7? @
;
§7§7@ A
Vector2
©7©7 
[
©7©7 
]
©7©7 
uvs0
©7©7 
=
©7©7 

m_textInfo
©7©7 '
.
©7©7' (
meshInfo
©7©7( 0
[
©7©70 1$
underlineMaterialIndex
©7©71 G
]
©7©7G H
.
©7©7H I
uvs0
©7©7I M
;
©7©7M N
int
´7´7 

atlasWidth
´7´7 
=
´7´7 
m_Underline
´7´7 (
.
´7´7( )
	fontAsset
´7´7) 2
.
´7´72 3

atlasWidth
´7´73 =
;
´7´7= >
int
¨7¨7 
atlasHeight
¨7¨7 
=
¨7¨7 
m_Underline
¨7¨7 )
.
¨7¨7) *
	fontAsset
¨7¨7* 3
.
¨7¨73 4
atlasHeight
¨7¨74 ?
;
¨7¨7? @
	GlyphRect
≠7≠7 
	glyphRect
≠7≠7 
=
≠7≠7  !
m_Underline
≠7≠7" -
.
≠7≠7- .
	character
≠7≠7. 7
.
≠7≠77 8
glyph
≠7≠78 =
.
≠7≠7= >
	glyphRect
≠7≠7> G
;
≠7≠7G H
Vector2
∞7∞7 
uv0
∞7∞7 
=
∞7∞7 
new
∞7∞7 
Vector2
∞7∞7 %
(
∞7∞7% &
(
∞7∞7& '
(
∞7∞7' (
float
∞7∞7( -
)
∞7∞7- .
	glyphRect
∞7∞7. 7
.
∞7∞77 8
x
∞7∞78 9
+
∞7∞7: ;
	glyphRect
∞7∞7< E
.
∞7∞7E F
width
∞7∞7F K
/
∞7∞7L M
$num
∞7∞7N O
)
∞7∞7O P
/
∞7∞7Q R

atlasWidth
∞7∞7S ]
,
∞7∞7] ^
(
∞7∞7_ `
	glyphRect
∞7∞7` i
.
∞7∞7i j
y
∞7∞7j k
+
∞7∞7l m
(
∞7∞7n o
float
∞7∞7o t
)
∞7∞7t u
	glyphRect
∞7∞7u ~
.
∞7∞7~ 
height∞7∞7 Ö
/∞7∞7Ü á
$num∞7∞7à â
)∞7∞7â ä
/∞7∞7ã å
atlasHeight∞7∞7ç ò
)∞7∞7ò ô
;∞7∞7ô ö
uvs0
≥7≥7 
[
≥7≥7 
$num
≥7≥7 
+
≥7≥7 
index
≥7≥7 
]
≥7≥7 
=
≥7≥7 
uv0
≥7≥7 !
;
≥7≥7! "
uvs0
¥7¥7 
[
¥7¥7 
$num
¥7¥7 
+
¥7¥7 
index
¥7¥7 
]
¥7¥7 
=
¥7¥7 
uv0
¥7¥7 !
;
¥7¥7! "
uvs0
µ7µ7 
[
µ7µ7 
$num
µ7µ7 
+
µ7µ7 
index
µ7µ7 
]
µ7µ7 
=
µ7µ7 
uv0
µ7µ7 !
;
µ7µ7! "
uvs0
∂7∂7 
[
∂7∂7 
$num
∂7∂7 
+
∂7∂7 
index
∂7∂7 
]
∂7∂7 
=
∂7∂7 
uv0
∂7∂7 !
;
∂7∂7! "
Vector2
ª7ª7 
[
ª7ª7 
]
ª7ª7 
uvs2
ª7ª7 
=
ª7ª7 

m_textInfo
ª7ª7 '
.
ª7ª7' (
meshInfo
ª7ª7( 0
[
ª7ª70 1$
underlineMaterialIndex
ª7ª71 G
]
ª7ª7G H
.
ª7ª7H I
uvs2
ª7ª7I M
;
ª7ª7M N
Vector2
º7º7 
customUV
º7º7 
=
º7º7 
new
º7º7 "
Vector2
º7º7# *
(
º7º7* +
$num
º7º7+ ,
,
º7º7, -
$num
º7º7. /
)
º7º7/ 0
;
º7º70 1
uvs2
Ω7Ω7 
[
Ω7Ω7 
$num
Ω7Ω7 
+
Ω7Ω7 
index
Ω7Ω7 
]
Ω7Ω7 
=
Ω7Ω7 
customUV
Ω7Ω7 &
;
Ω7Ω7& '
uvs2
æ7æ7 
[
æ7æ7 
$num
æ7æ7 
+
æ7æ7 
index
æ7æ7 
]
æ7æ7 
=
æ7æ7 
customUV
æ7æ7 &
;
æ7æ7& '
uvs2
ø7ø7 
[
ø7ø7 
$num
ø7ø7 
+
ø7ø7 
index
ø7ø7 
]
ø7ø7 
=
ø7ø7 
customUV
ø7ø7 &
;
ø7ø7& '
uvs2
¿7¿7 
[
¿7¿7 
$num
¿7¿7 
+
¿7¿7 
index
¿7¿7 
]
¿7¿7 
=
¿7¿7 
customUV
¿7¿7 &
;
¿7¿7& '
highlightColor
∆7∆7 
.
∆7∆7 
a
∆7∆7 
=
∆7∆7 
m_fontColor32
∆7∆7 ,
.
∆7∆7, -
a
∆7∆7- .
<
∆7∆7/ 0
highlightColor
∆7∆71 ?
.
∆7∆7? @
a
∆7∆7@ A
?
∆7∆7B C
m_fontColor32
∆7∆7D Q
.
∆7∆7Q R
a
∆7∆7R S
:
∆7∆7T U
highlightColor
∆7∆7V d
.
∆7∆7d e
a
∆7∆7e f
;
∆7∆7f g
Color32
»7»7 
[
»7»7 
]
»7»7 
colors32
»7»7 
=
»7»7  

m_textInfo
»7»7! +
.
»7»7+ ,
meshInfo
»7»7, 4
[
»7»74 5$
underlineMaterialIndex
»7»75 K
]
»7»7K L
.
»7»7L M
colors32
»7»7M U
;
»7»7U V
colors32
…7…7 
[
…7…7 
$num
…7…7 
+
…7…7 
index
…7…7 
]
…7…7 
=
…7…7  !
highlightColor
…7…7" 0
;
…7…70 1
colors32
 7 7 
[
 7 7 
$num
 7 7 
+
 7 7 
index
 7 7 
]
 7 7 
=
 7 7  !
highlightColor
 7 7" 0
;
 7 70 1
colors32
À7À7 
[
À7À7 
$num
À7À7 
+
À7À7 
index
À7À7 
]
À7À7 
=
À7À7  !
highlightColor
À7À7" 0
;
À7À70 1
colors32
Ã7Ã7 
[
Ã7Ã7 
$num
Ã7Ã7 
+
Ã7Ã7 
index
Ã7Ã7 
]
Ã7Ã7 
=
Ã7Ã7  !
highlightColor
Ã7Ã7" 0
;
Ã7Ã70 1
index
œ7œ7 
+=
œ7œ7 
$num
œ7œ7 
;
œ7œ7 
}
–7–7 	
	protected
÷7÷7 
void
÷7÷7 !
LoadDefaultSettings
÷7÷7 *
(
÷7÷7* +
)
÷7÷7+ ,
{
◊7◊7 	
if
ÿ7ÿ7 
(
ÿ7ÿ7 
m_fontAsset
ÿ7ÿ7 
==
ÿ7ÿ7 
null
ÿ7ÿ7 #
||
ÿ7ÿ7$ &'
m_isWaitingOnResourceLoad
ÿ7ÿ7' @
)
ÿ7ÿ7@ A
{
Ÿ7Ÿ7 
m_rectTransform
⁄7⁄7 
=
⁄7⁄7  !
this
⁄7⁄7" &
.
⁄7⁄7& '
rectTransform
⁄7⁄7' 4
;
⁄7⁄74 5
if
‹7‹7 
(
‹7‹7 
TMP_Settings
‹7‹7  
.
‹7‹7  !#
autoSizeTextContainer
‹7‹7! 6
)
‹7‹76 7
{
›7›7 #
autoSizeTextContainer
ﬁ7ﬁ7 )
=
ﬁ7ﬁ7* +
true
ﬁ7ﬁ7, 0
;
ﬁ7ﬁ70 1
}
ﬂ7ﬂ7 
else
‡7‡7 
{
·7·7 
if
‚7‚7 
(
‚7‚7 
GetType
‚7‚7 
(
‚7‚7  
)
‚7‚7  !
==
‚7‚7" $
typeof
‚7‚7% +
(
‚7‚7+ ,
TextMeshPro
‚7‚7, 7
)
‚7‚77 8
)
‚7‚78 9
{
„7„7 
if
‰7‰7 
(
‰7‰7 
m_rectTransform
‰7‰7 +
.
‰7‰7+ ,
	sizeDelta
‰7‰7, 5
==
‰7‰76 8
new
‰7‰79 <
Vector2
‰7‰7= D
(
‰7‰7D E
$num
‰7‰7E H
,
‰7‰7H I
$num
‰7‰7J M
)
‰7‰7M N
)
‰7‰7N O
m_rectTransform
Â7Â7 +
.
Â7Â7+ ,
	sizeDelta
Â7Â7, 5
=
Â7Â76 7
TMP_Settings
Â7Â78 D
.
Â7Â7D E1
#defaultTextMeshProTextContainerSize
Â7Â7E h
;
Â7Â7h i
}
Ê7Ê7 
else
Á7Á7 
{
Ë7Ë7 
if
È7È7 
(
È7È7 
m_rectTransform
È7È7 +
.
È7È7+ ,
	sizeDelta
È7È7, 5
==
È7È76 8
new
È7È79 <
Vector2
È7È7= D
(
È7È7D E
$num
È7È7E H
,
È7È7H I
$num
È7È7J M
)
È7È7M N
)
È7È7N O
m_rectTransform
Í7Í7 +
.
Í7Í7+ ,
	sizeDelta
Í7Í7, 5
=
Í7Í76 7
TMP_Settings
Í7Í78 D
.
Í7Í7D E3
%defaultTextMeshProUITextContainerSize
Í7Í7E j
;
Í7Í7j k
}
Î7Î7 
}
Ì7Ì7 "
m_enableWordWrapping
Ô7Ô7 $
=
Ô7Ô7% &
TMP_Settings
Ô7Ô7' 3
.
Ô7Ô73 4 
enableWordWrapping
Ô7Ô74 F
;
Ô7Ô7F G
m_enableKerning
77 
=
77  !
TMP_Settings
77" .
.
77. /
enableKerning
77/ <
;
77< ="
m_enableExtraPadding
Ò7Ò7 $
=
Ò7Ò7% &
TMP_Settings
Ò7Ò7' 3
.
Ò7Ò73 4 
enableExtraPadding
Ò7Ò74 F
;
Ò7Ò7F G
m_tintAllSprites
Ú7Ú7  
=
Ú7Ú7! "
TMP_Settings
Ú7Ú7# /
.
Ú7Ú7/ 0"
enableTintAllSprites
Ú7Ú70 D
;
Ú7Ú7D E#
m_parseCtrlCharacters
Û7Û7 %
=
Û7Û7& '
TMP_Settings
Û7Û7( 4
.
Û7Û74 5)
enableParseEscapeCharacters
Û7Û75 P
;
Û7Û7P Q

m_fontSize
Ù7Ù7 
=
Ù7Ù7 
m_fontSizeBase
Ù7Ù7 +
=
Ù7Ù7, -
TMP_Settings
Ù7Ù7. :
.
Ù7Ù7: ;
defaultFontSize
Ù7Ù7; J
;
Ù7Ù7J K
m_fontSizeMin
ı7ı7 
=
ı7ı7 

m_fontSize
ı7ı7  *
*
ı7ı7+ ,
TMP_Settings
ı7ı7- 9
.
ı7ı79 :+
defaultTextAutoSizingMinRatio
ı7ı7: W
;
ı7ı7W X
m_fontSizeMax
ˆ7ˆ7 
=
ˆ7ˆ7 

m_fontSize
ˆ7ˆ7  *
*
ˆ7ˆ7+ ,
TMP_Settings
ˆ7ˆ7- 9
.
ˆ7ˆ79 :+
defaultTextAutoSizingMaxRatio
ˆ7ˆ7: W
;
ˆ7ˆ7W X'
m_isWaitingOnResourceLoad
˜7˜7 )
=
˜7˜7* +
false
˜7˜7, 1
;
˜7˜71 2
raycastTarget
¯7¯7 
=
¯7¯7 
TMP_Settings
¯7¯7  ,
.
¯7¯7, -!
enableRaycastTarget
¯7¯7- @
;
¯7¯7@ A'
m_IsTextObjectScaleStatic
˘7˘7 )
=
˘7˘7* +
TMP_Settings
˘7˘7, 8
.
˘7˘78 9%
isTextObjectScaleStatic
˘7˘79 P
;
˘7˘7P Q
}
˙7˙7 
else
˚7˚7 
if
˚7˚7 
(
˚7˚7 
(
˚7˚7 
int
˚7˚7 
)
˚7˚7 
m_textAlignment
˚7˚7 )
<
˚7˚7* +
$num
˚7˚7, 0
)
˚7˚70 1
{
¸7¸7 
m_textAlignment
˛7˛7 
=
˛7˛7  !
TMP_Compatibility
˛7˛7" 3
.
˛7˛73 4,
ConvertTextAlignmentEnumValues
˛7˛74 R
(
˛7˛7R S
m_textAlignment
˛7˛7S b
)
˛7˛7b c
;
˛7˛7c d
}
ˇ7ˇ7 
if
Ç8Ç8 
(
Ç8Ç8 
m_textAlignment
Ç8Ç8 
!=
Ç8Ç8  ""
TextAlignmentOptions
Ç8Ç8# 7
.
Ç8Ç87 8
	Converted
Ç8Ç88 A
)
Ç8Ç8A B
{
É8É8 #
m_HorizontalAlignment
Ñ8Ñ8 %
=
Ñ8Ñ8& '
(
Ñ8Ñ8( )(
HorizontalAlignmentOptions
Ñ8Ñ8) C
)
Ñ8Ñ8C D
(
Ñ8Ñ8D E
(
Ñ8Ñ8E F
int
Ñ8Ñ8F I
)
Ñ8Ñ8I J
m_textAlignment
Ñ8Ñ8J Y
&
Ñ8Ñ8Z [
$num
Ñ8Ñ8\ `
)
Ñ8Ñ8` a
;
Ñ8Ñ8a b!
m_VerticalAlignment
Ö8Ö8 #
=
Ö8Ö8$ %
(
Ö8Ö8& '&
VerticalAlignmentOptions
Ö8Ö8' ?
)
Ö8Ö8? @
(
Ö8Ö8@ A
(
Ö8Ö8A B
int
Ö8Ö8B E
)
Ö8Ö8E F
m_textAlignment
Ö8Ö8F U
&
Ö8Ö8V W
$num
Ö8Ö8X ^
)
Ö8Ö8^ _
;
Ö8Ö8_ `
m_textAlignment
Ü8Ü8 
=
Ü8Ü8  !"
TextAlignmentOptions
Ü8Ü8" 6
.
Ü8Ü86 7
	Converted
Ü8Ü87 @
;
Ü8Ü8@ A
}
á8á8 
}
à8à8 	
	protected
è8è8 
void
è8è8 "
GetSpecialCharacters
è8è8 +
(
è8è8+ ,
TMP_FontAsset
è8è8, 9
	fontAsset
è8è8: C
)
è8è8C D
{
ê8ê8 	)
GetEllipsisSpecialCharacter
ë8ë8 '
(
ë8ë8' (
	fontAsset
ë8ë8( 1
)
ë8ë81 2
;
ë8ë82 3*
GetUnderlineSpecialCharacter
ì8ì8 (
(
ì8ì8( )
	fontAsset
ì8ì8) 2
)
ì8ì82 3
;
ì8ì83 4
}
î8î8 	
	protected
ó8ó8 
void
ó8ó8 )
GetEllipsisSpecialCharacter
ó8ó8 2
(
ó8ó82 3
TMP_FontAsset
ó8ó83 @
	fontAsset
ó8ó8A J
)
ó8ó8J K
{
ò8ò8 	
bool
ô8ô8 (
isUsingAlternativeTypeface
ô8ô8 +
;
ô8ô8+ ,
TMP_Character
ú8ú8 
	character
ú8ú8 #
=
ú8ú8$ %$
TMP_FontAssetUtilities
ú8ú8& <
.
ú8ú8< ='
GetCharacterFromFontAsset
ú8ú8= V
(
ú8ú8V W
$num
ú8ú8W ]
,
ú8ú8] ^
	fontAsset
ú8ú8_ h
,
ú8ú8h i
false
ú8ú8j o
,
ú8ú8o p"
m_FontStyleInternalú8ú8q Ñ
,ú8ú8Ñ Ö$
m_FontWeightInternalú8ú8Ü ö
,ú8ú8ö õ
outú8ú8ú ü*
isUsingAlternativeTypefaceú8ú8† ∫
)ú8ú8∫ ª
;ú8ú8ª º
if
û8û8 
(
û8û8 
	character
û8û8 
==
û8û8 
null
û8û8 !
)
û8û8! "
{
ü8ü8 
if
°8°8 
(
°8°8 
	fontAsset
°8°8 
.
°8°8 &
m_FallbackFontAssetTable
°8°8 6
!=
°8°87 9
null
°8°8: >
&&
°8°8? A
	fontAsset
°8°8B K
.
°8°8K L&
m_FallbackFontAssetTable
°8°8L d
.
°8°8d e
Count
°8°8e j
>
°8°8k l
$num
°8°8m n
)
°8°8n o
	character
¢8¢8 
=
¢8¢8 $
TMP_FontAssetUtilities
¢8¢8  6
.
¢8¢86 7(
GetCharacterFromFontAssets
¢8¢87 Q
(
¢8¢8Q R
$num
¢8¢8R X
,
¢8¢8X Y
	fontAsset
¢8¢8Z c
,
¢8¢8c d
	fontAsset
¢8¢8e n
.
¢8¢8n o'
m_FallbackFontAssetTable¢8¢8o á
,¢8¢8á à
true¢8¢8â ç
,¢8¢8ç é#
m_FontStyleInternal¢8¢8è ¢
,¢8¢8¢ £$
m_FontWeightInternal¢8¢8§ ∏
,¢8¢8∏ π
out¢8¢8∫ Ω*
isUsingAlternativeTypeface¢8¢8æ ÿ
)¢8¢8ÿ Ÿ
;¢8¢8Ÿ ⁄
}
£8£8 
if
¶8¶8 
(
¶8¶8 
	character
¶8¶8 
==
¶8¶8 
null
¶8¶8 !
)
¶8¶8! "
{
ß8ß8 
if
®8®8 
(
®8®8 
TMP_Settings
®8®8  
.
®8®8  ! 
fallbackFontAssets
®8®8! 3
!=
®8®84 6
null
®8®87 ;
&&
®8®8< >
TMP_Settings
®8®8? K
.
®8®8K L 
fallbackFontAssets
®8®8L ^
.
®8®8^ _
Count
®8®8_ d
>
®8®8e f
$num
®8®8g h
)
®8®8h i
	character
©8©8 
=
©8©8 $
TMP_FontAssetUtilities
©8©8  6
.
©8©86 7(
GetCharacterFromFontAssets
©8©87 Q
(
©8©8Q R
$num
©8©8R X
,
©8©8X Y
	fontAsset
©8©8Z c
,
©8©8c d
TMP_Settings
©8©8e q
.
©8©8q r!
fallbackFontAssets©8©8r Ñ
,©8©8Ñ Ö
true©8©8Ü ä
,©8©8ä ã#
m_FontStyleInternal©8©8å ü
,©8©8ü †$
m_FontWeightInternal©8©8° µ
,©8©8µ ∂
out©8©8∑ ∫*
isUsingAlternativeTypeface©8©8ª ’
)©8©8’ ÷
;©8©8÷ ◊
}
™8™8 
if
≠8≠8 
(
≠8≠8 
	character
≠8≠8 
==
≠8≠8 
null
≠8≠8 !
)
≠8≠8! "
{
Æ8Æ8 
if
Ø8Ø8 
(
Ø8Ø8 
TMP_Settings
Ø8Ø8  
.
Ø8Ø8  !
defaultFontAsset
Ø8Ø8! 1
!=
Ø8Ø82 4
null
Ø8Ø85 9
)
Ø8Ø89 :
	character
∞8∞8 
=
∞8∞8 $
TMP_FontAssetUtilities
∞8∞8  6
.
∞8∞86 7'
GetCharacterFromFontAsset
∞8∞87 P
(
∞8∞8P Q
$num
∞8∞8Q W
,
∞8∞8W X
TMP_Settings
∞8∞8Y e
.
∞8∞8e f
defaultFontAsset
∞8∞8f v
,
∞8∞8v w
true
∞8∞8x |
,
∞8∞8| }"
m_FontStyleInternal∞8∞8~ ë
,∞8∞8ë í$
m_FontWeightInternal∞8∞8ì ß
,∞8∞8ß ®
out∞8∞8© ¨*
isUsingAlternativeTypeface∞8∞8≠ «
)∞8∞8« »
;∞8∞8» …
}
±8±8 
if
≥8≥8 
(
≥8≥8 
	character
≥8≥8 
!=
≥8≥8 
null
≥8≥8 !
)
≥8≥8! "

m_Ellipsis
¥8¥8 
=
¥8¥8 
new
¥8¥8  
SpecialCharacter
¥8¥8! 1
(
¥8¥81 2
	character
¥8¥82 ;
,
¥8¥8; <
$num
¥8¥8= >
)
¥8¥8> ?
;
¥8¥8? @
}
µ8µ8 	
	protected
∏8∏8 
void
∏8∏8 *
GetUnderlineSpecialCharacter
∏8∏8 3
(
∏8∏83 4
TMP_FontAsset
∏8∏84 A
	fontAsset
∏8∏8B K
)
∏8∏8K L
{
π8π8 	
bool
∫8∫8 (
isUsingAlternativeTypeface
∫8∫8 +
;
∫8∫8+ ,
TMP_Character
Ω8Ω8 
	character
Ω8Ω8 #
=
Ω8Ω8$ %$
TMP_FontAssetUtilities
Ω8Ω8& <
.
Ω8Ω8< ='
GetCharacterFromFontAsset
Ω8Ω8= V
(
Ω8Ω8V W
$num
Ω8Ω8W [
,
Ω8Ω8[ \
	fontAsset
Ω8Ω8] f
,
Ω8Ω8f g
false
Ω8Ω8h m
,
Ω8Ω8m n

FontStyles
Ω8Ω8o y
.
Ω8Ω8y z
NormalΩ8Ω8z Ä
,Ω8Ω8Ä Å

FontWeightΩ8Ω8Ç å
.Ω8Ω8å ç
RegularΩ8Ω8ç î
,Ω8Ω8î ï
outΩ8Ω8ñ ô*
isUsingAlternativeTypefaceΩ8Ω8ö ¥
)Ω8Ω8¥ µ
;Ω8Ω8µ ∂
if
÷8÷8 
(
÷8÷8 
	character
÷8÷8 
!=
÷8÷8 
null
÷8÷8 !
)
÷8÷8! "
{
◊8◊8 
m_Underline
ÿ8ÿ8 
=
ÿ8ÿ8 
new
ÿ8ÿ8 !
SpecialCharacter
ÿ8ÿ8" 2
(
ÿ8ÿ82 3
	character
ÿ8ÿ83 <
,
ÿ8ÿ8< =
$num
ÿ8ÿ8> ?
)
ÿ8ÿ8? @
;
ÿ8ÿ8@ A
}
Ÿ8Ÿ8 
else
⁄8⁄8 
{
€8€8 
if
‹8‹8 
(
‹8‹8 
!
‹8‹8 
TMP_Settings
‹8‹8 !
.
‹8‹8! "
warningsDisabled
‹8‹8" 2
)
‹8‹82 3
Debug
›8›8 
.
›8›8 

LogWarning
›8›8 $
(
›8›8$ %
$str
›8›8% h
+
›8›8i j
	fontAsset
›8›8k t
.
›8›8t u
name
›8›8u y
+
›8›8z {
$str›8›8| Ä
,›8›8Ä Å
this›8›8Ç Ü
)›8›8Ü á
;›8›8á à
}
ﬁ8ﬁ8 
}
ﬂ8ﬂ8 	
	protected
È8È8 
void
È8È8 %
ReplaceTagWithCharacter
È8È8 .
(
È8È8. /
int
È8È8/ 2
[
È8È82 3
]
È8È83 4
chars
È8È85 :
,
È8È8: ;
int
È8È8< ?
insertionIndex
È8È8@ N
,
È8È8N O
int
È8È8P S
	tagLength
È8È8T ]
,
È8È8] ^
char
È8È8_ c
c
È8È8d e
)
È8È8e f
{
Í8Í8 	
chars
Î8Î8 
[
Î8Î8 
insertionIndex
Î8Î8  
]
Î8Î8  !
=
Î8Î8" #
c
Î8Î8$ %
;
Î8Î8% &
for
Ì8Ì8 
(
Ì8Ì8 
int
Ì8Ì8 
i
Ì8Ì8 
=
Ì8Ì8 
insertionIndex
Ì8Ì8 '
+
Ì8Ì8( )
	tagLength
Ì8Ì8* 3
;
Ì8Ì83 4
i
Ì8Ì85 6
<
Ì8Ì87 8
chars
Ì8Ì89 >
.
Ì8Ì8> ?
Length
Ì8Ì8? E
;
Ì8Ì8E F
i
Ì8Ì8G H
++
Ì8Ì8H J
)
Ì8Ì8J K
{
Ó8Ó8 
chars
Ô8Ô8 
[
Ô8Ô8 
i
Ô8Ô8 
-
Ô8Ô8 
$num
Ô8Ô8 
]
Ô8Ô8 
=
Ô8Ô8 
chars
Ô8Ô8 $
[
Ô8Ô8$ %
i
Ô8Ô8% &
]
Ô8Ô8& '
;
Ô8Ô8' (
}
88 
}
Ò8Ò8 	
	protected
Ü9Ü9 
TMP_FontAsset
Ü9Ü9 #
GetFontAssetForWeight
Ü9Ü9  5
(
Ü9Ü95 6
int
Ü9Ü96 9

fontWeight
Ü9Ü9: D
)
Ü9Ü9D E
{
á9á9 	
bool
à9à9 
isItalic
à9à9 
=
à9à9 
(
à9à9 !
m_FontStyleInternal
à9à9 0
&
à9à91 2

FontStyles
à9à93 =
.
à9à9= >
Italic
à9à9> D
)
à9à9D E
==
à9à9F H

FontStyles
à9à9I S
.
à9à9S T
Italic
à9à9T Z
||
à9à9[ ]
(
à9à9^ _
m_fontStyle
à9à9_ j
&
à9à9k l

FontStyles
à9à9m w
.
à9à9w x
Italic
à9à9x ~
)
à9à9~ 
==à9à9Ä Ç

FontStylesà9à9É ç
.à9à9ç é
Italicà9à9é î
;à9à9î ï
TMP_FontAsset
ä9ä9 
	fontAsset
ä9ä9 #
=
ä9ä9$ %
null
ä9ä9& *
;
ä9ä9* +
int
å9å9 
weightIndex
å9å9 
=
å9å9 

fontWeight
å9å9 (
/
å9å9) *
$num
å9å9+ .
;
å9å9. /
if
é9é9 
(
é9é9 
isItalic
é9é9 
)
é9é9 
	fontAsset
è9è9 
=
è9è9  
m_currentFontAsset
è9è9 .
.
è9è9. /
fontWeightTable
è9è9/ >
[
è9è9> ?
weightIndex
è9è9? J
]
è9è9J K
.
è9è9K L
italicTypeface
è9è9L Z
;
è9è9Z [
else
ê9ê9 
	fontAsset
ë9ë9 
=
ë9ë9  
m_currentFontAsset
ë9ë9 .
.
ë9ë9. /
fontWeightTable
ë9ë9/ >
[
ë9ë9> ?
weightIndex
ë9ë9? J
]
ë9ë9J K
.
ë9ë9K L
regularTypeface
ë9ë9L [
;
ë9ë9[ \
return
ì9ì9 
	fontAsset
ì9ì9 
;
ì9ì9 
}
î9î9 	
internal
ñ9ñ9 
TMP_TextElement
ñ9ñ9  
GetTextElement
ñ9ñ9! /
(
ñ9ñ9/ 0
uint
ñ9ñ90 4
unicode
ñ9ñ95 <
,
ñ9ñ9< =
TMP_FontAsset
ñ9ñ9> K
	fontAsset
ñ9ñ9L U
,
ñ9ñ9U V

FontStyles
ñ9ñ9W a
	fontStyle
ñ9ñ9b k
,
ñ9ñ9k l

FontWeight
ñ9ñ9m w

fontWeightñ9ñ9x Ç
,ñ9ñ9Ç É
outñ9ñ9Ñ á
boolñ9ñ9à å*
isUsingAlternativeTypefaceñ9ñ9ç ß
)ñ9ñ9ß ®
{
ó9ó9 	
TMP_Character
ò9ò9 
	character
ò9ò9 #
=
ò9ò9$ %$
TMP_FontAssetUtilities
ò9ò9& <
.
ò9ò9< ='
GetCharacterFromFontAsset
ò9ò9= V
(
ò9ò9V W
unicode
ò9ò9W ^
,
ò9ò9^ _
	fontAsset
ò9ò9` i
,
ò9ò9i j
false
ò9ò9k p
,
ò9ò9p q
	fontStyle
ò9ò9r {
,
ò9ò9{ |

fontWeightò9ò9} á
,ò9ò9á à
outò9ò9â å*
isUsingAlternativeTypefaceò9ò9ç ß
)ò9ò9ß ®
;ò9ò9® ©
if
ö9ö9 
(
ö9ö9 
	character
ö9ö9 
!=
ö9ö9 
null
ö9ö9 !
)
ö9ö9! "
return
õ9õ9 
	character
õ9õ9  
;
õ9õ9  !
if
û9û9 
(
û9û9 
	fontAsset
û9û9 
.
û9û9 &
m_FallbackFontAssetTable
û9û9 2
!=
û9û93 5
null
û9û96 :
&&
û9û9; =
	fontAsset
û9û9> G
.
û9û9G H&
m_FallbackFontAssetTable
û9û9H `
.
û9û9` a
Count
û9û9a f
>
û9û9g h
$num
û9û9i j
)
û9û9j k
	character
ü9ü9 
=
ü9ü9 $
TMP_FontAssetUtilities
ü9ü9 2
.
ü9ü92 3(
GetCharacterFromFontAssets
ü9ü93 M
(
ü9ü9M N
unicode
ü9ü9N U
,
ü9ü9U V
	fontAsset
ü9ü9W `
,
ü9ü9` a
	fontAsset
ü9ü9b k
.
ü9ü9k l'
m_FallbackFontAssetTableü9ü9l Ñ
,ü9ü9Ñ Ö
trueü9ü9Ü ä
,ü9ü9ä ã
	fontStyleü9ü9å ï
,ü9ü9ï ñ

fontWeightü9ü9ó °
,ü9ü9° ¢
outü9ü9£ ¶*
isUsingAlternativeTypefaceü9ü9ß ¡
)ü9ü9¡ ¬
;ü9ü9¬ √
if
°9°9 
(
°9°9 
	character
°9°9 
!=
°9°9 
null
°9°9 !
)
°9°9! "
{
¢9¢9 
return
¶9¶9 
	character
¶9¶9  
;
¶9¶9  !
}
ß9ß9 
if
™9™9 
(
™9™9 
	fontAsset
™9™9 
.
™9™9 

instanceID
™9™9 $
!=
™9™9% '
m_fontAsset
™9™9( 3
.
™9™93 4

instanceID
™9™94 >
)
™9™9> ?
{
´9´9 
	character
≠9≠9 
=
≠9≠9 $
TMP_FontAssetUtilities
≠9≠9 2
.
≠9≠92 3'
GetCharacterFromFontAsset
≠9≠93 L
(
≠9≠9L M
unicode
≠9≠9M T
,
≠9≠9T U
m_fontAsset
≠9≠9V a
,
≠9≠9a b
false
≠9≠9c h
,
≠9≠9h i
	fontStyle
≠9≠9j s
,
≠9≠9s t

fontWeight
≠9≠9u 
,≠9≠9 Ä
out≠9≠9Å Ñ*
isUsingAlternativeTypeface≠9≠9Ö ü
)≠9≠9ü †
;≠9≠9† °
if
∞9∞9 
(
∞9∞9 
	character
∞9∞9 
!=
∞9∞9  
null
∞9∞9! %
)
∞9∞9% &
{
±9±9 $
m_currentMaterialIndex
≤9≤9 *
=
≤9≤9+ ,
$num
≤9≤9- .
;
≤9≤9. /
m_currentMaterial
≥9≥9 %
=
≥9≥9& '"
m_materialReferences
≥9≥9( <
[
≥9≥9< =
$num
≥9≥9= >
]
≥9≥9> ?
.
≥9≥9? @
material
≥9≥9@ H
;
≥9≥9H I
return
∏9∏9 
	character
∏9∏9 $
;
∏9∏9$ %
}
π9π9 
if
º9º9 
(
º9º9 
m_fontAsset
º9º9 
.
º9º9  &
m_FallbackFontAssetTable
º9º9  8
!=
º9º99 ;
null
º9º9< @
&&
º9º9A C
m_fontAsset
º9º9D O
.
º9º9O P&
m_FallbackFontAssetTable
º9º9P h
.
º9º9h i
Count
º9º9i n
>
º9º9o p
$num
º9º9q r
)
º9º9r s
	character
Ω9Ω9 
=
Ω9Ω9 $
TMP_FontAssetUtilities
Ω9Ω9  6
.
Ω9Ω96 7(
GetCharacterFromFontAssets
Ω9Ω97 Q
(
Ω9Ω9Q R
unicode
Ω9Ω9R Y
,
Ω9Ω9Y Z
	fontAsset
Ω9Ω9[ d
,
Ω9Ω9d e
m_fontAsset
Ω9Ω9f q
.
Ω9Ω9q r'
m_FallbackFontAssetTableΩ9Ω9r ä
,Ω9Ω9ä ã
trueΩ9Ω9å ê
,Ω9Ω9ê ë
	fontStyleΩ9Ω9í õ
,Ω9Ω9õ ú

fontWeightΩ9Ω9ù ß
,Ω9Ω9ß ®
outΩ9Ω9© ¨*
isUsingAlternativeTypefaceΩ9Ω9≠ «
)Ω9Ω9« »
;Ω9Ω9» …
if
ø9ø9 
(
ø9ø9 
	character
ø9ø9 
!=
ø9ø9  
null
ø9ø9! %
)
ø9ø9% &
{
¿9¿9 
return
ƒ9ƒ9 
	character
ƒ9ƒ9 $
;
ƒ9ƒ9$ %
}
≈9≈9 
}
∆9∆9 
if
…9…9 
(
…9…9 
m_spriteAsset
…9…9 
!=
…9…9  
null
…9…9! %
)
…9…9% &
{
 9 9 !
TMP_SpriteCharacter
À9À9 #
spriteCharacter
À9À9$ 3
=
À9À94 5$
TMP_FontAssetUtilities
À9À96 L
.
À9À9L M/
!GetSpriteCharacterFromSpriteAsset
À9À9M n
(
À9À9n o
unicode
À9À9o v
,
À9À9v w
m_spriteAssetÀ9À9x Ö
,À9À9Ö Ü
trueÀ9À9á ã
)À9À9ã å
;À9À9å ç
if
Õ9Õ9 
(
Õ9Õ9 
spriteCharacter
Õ9Õ9 #
!=
Õ9Õ9$ &
null
Õ9Õ9' +
)
Õ9Õ9+ ,
return
Œ9Œ9 
spriteCharacter
Œ9Œ9 *
;
Œ9Œ9* +
}
œ9œ9 
if
“9“9 
(
“9“9 
TMP_Settings
“9“9 
.
“9“9  
fallbackFontAssets
“9“9 /
!=
“9“90 2
null
“9“93 7
&&
“9“98 :
TMP_Settings
“9“9; G
.
“9“9G H 
fallbackFontAssets
“9“9H Z
.
“9“9Z [
Count
“9“9[ `
>
“9“9a b
$num
“9“9c d
)
“9“9d e
	character
”9”9 
=
”9”9 $
TMP_FontAssetUtilities
”9”9 2
.
”9”92 3(
GetCharacterFromFontAssets
”9”93 M
(
”9”9M N
unicode
”9”9N U
,
”9”9U V
	fontAsset
”9”9W `
,
”9”9` a
TMP_Settings
”9”9b n
.
”9”9n o!
fallbackFontAssets”9”9o Å
,”9”9Å Ç
true”9”9É á
,”9”9á à
	fontStyle”9”9â í
,”9”9í ì

fontWeight”9”9î û
,”9”9û ü
out”9”9† £*
isUsingAlternativeTypeface”9”9§ æ
)”9”9æ ø
;”9”9ø ¿
if
’9’9 
(
’9’9 
	character
’9’9 
!=
’9’9 
null
’9’9 !
)
’9’9! "
{
÷9÷9 
return
⁄9⁄9 
	character
⁄9⁄9  
;
⁄9⁄9  !
}
€9€9 
if
ﬁ9ﬁ9 
(
ﬁ9ﬁ9 
TMP_Settings
ﬁ9ﬁ9 
.
ﬁ9ﬁ9 
defaultFontAsset
ﬁ9ﬁ9 -
!=
ﬁ9ﬁ9. 0
null
ﬁ9ﬁ91 5
)
ﬁ9ﬁ95 6
	character
ﬂ9ﬂ9 
=
ﬂ9ﬂ9 $
TMP_FontAssetUtilities
ﬂ9ﬂ9 2
.
ﬂ9ﬂ92 3'
GetCharacterFromFontAsset
ﬂ9ﬂ93 L
(
ﬂ9ﬂ9L M
unicode
ﬂ9ﬂ9M T
,
ﬂ9ﬂ9T U
TMP_Settings
ﬂ9ﬂ9V b
.
ﬂ9ﬂ9b c
defaultFontAsset
ﬂ9ﬂ9c s
,
ﬂ9ﬂ9s t
true
ﬂ9ﬂ9u y
,
ﬂ9ﬂ9y z
	fontStyleﬂ9ﬂ9{ Ñ
,ﬂ9ﬂ9Ñ Ö

fontWeightﬂ9ﬂ9Ü ê
,ﬂ9ﬂ9ê ë
outﬂ9ﬂ9í ï*
isUsingAlternativeTypefaceﬂ9ﬂ9ñ ∞
)ﬂ9ﬂ9∞ ±
;ﬂ9ﬂ9± ≤
if
·9·9 
(
·9·9 
	character
·9·9 
!=
·9·9 
null
·9·9 !
)
·9·9! "
{
‚9‚9 
return
Ê9Ê9 
	character
Ê9Ê9  
;
Ê9Ê9  !
}
Á9Á9 
if
Í9Í9 
(
Í9Í9 
TMP_Settings
Í9Í9 
.
Í9Í9  
defaultSpriteAsset
Í9Í9 /
!=
Í9Í90 2
null
Í9Í93 7
)
Í9Í97 8
{
Î9Î9 !
TMP_SpriteCharacter
Ï9Ï9 #
spriteCharacter
Ï9Ï9$ 3
=
Ï9Ï94 5$
TMP_FontAssetUtilities
Ï9Ï96 L
.
Ï9Ï9L M/
!GetSpriteCharacterFromSpriteAsset
Ï9Ï9M n
(
Ï9Ï9n o
unicode
Ï9Ï9o v
,
Ï9Ï9v w
TMP_SettingsÏ9Ï9x Ñ
.Ï9Ï9Ñ Ö"
defaultSpriteAssetÏ9Ï9Ö ó
,Ï9Ï9ó ò
trueÏ9Ï9ô ù
)Ï9Ï9ù û
;Ï9Ï9û ü
if
Ó9Ó9 
(
Ó9Ó9 
spriteCharacter
Ó9Ó9 #
!=
Ó9Ó9$ &
null
Ó9Ó9' +
)
Ó9Ó9+ ,
return
Ô9Ô9 
spriteCharacter
Ô9Ô9 *
;
Ô9Ô9* +
}
99 
return
Ú9Ú9 
null
Ú9Ú9 
;
Ú9Ú9 
}
Û9Û9 	
	protected
˙9˙9 
virtual
˙9˙9 
void
˙9˙9  
SetActiveSubMeshes
˙9˙9 1
(
˙9˙91 2
bool
˙9˙92 6
state
˙9˙97 <
)
˙9˙9< =
{
˙9˙9> ?
}
˙9˙9@ A
	protected
Ä:Ä: 
virtual
Ä:Ä: 
void
Ä:Ä: #
DestroySubMeshObjects
Ä:Ä: 4
(
Ä:Ä:4 5
)
Ä:Ä:5 6
{
Ä:Ä:7 8
}
Ä:Ä:9 :
public
Ü:Ü: 
virtual
Ü:Ü: 
void
Ü:Ü: 
	ClearMesh
Ü:Ü: %
(
Ü:Ü:% &
)
Ü:Ü:& '
{
Ü:Ü:( )
}
Ü:Ü:* +
public
å:å: 
virtual
å:å: 
void
å:å: 
	ClearMesh
å:å: %
(
å:å:% &
bool
å:å:& *
uploadGeometry
å:å:+ 9
)
å:å:9 :
{
å:å:; <
}
å:å:= >
public
ì:ì: 
virtual
ì:ì: 
string
ì:ì: 
GetParsedText
ì:ì: +
(
ì:ì:+ ,
)
ì:ì:, -
{
î:î: 	
if
ï:ï: 
(
ï:ï: 

m_textInfo
ï:ï: 
==
ï:ï: 
null
ï:ï: "
)
ï:ï:" #
return
ñ:ñ: 
string
ñ:ñ: 
.
ñ:ñ: 
Empty
ñ:ñ: #
;
ñ:ñ:# $
int
ò:ò: 
characterCount
ò:ò: 
=
ò:ò:  

m_textInfo
ò:ò:! +
.
ò:ò:+ ,
characterCount
ò:ò:, :
;
ò:ò:: ;
char
õ:õ: 
[
õ:õ: 
]
õ:õ: 
buffer
õ:õ: 
=
õ:õ: 
new
õ:õ: 
char
õ:õ:  $
[
õ:õ:$ %
characterCount
õ:õ:% 3
]
õ:õ:3 4
;
õ:õ:4 5
for
ù:ù: 
(
ù:ù: 
int
ù:ù: 
i
ù:ù: 
=
ù:ù: 
$num
ù:ù: 
;
ù:ù: 
i
ù:ù: 
<
ù:ù: 
characterCount
ù:ù:  .
&&
ù:ù:/ 1
i
ù:ù:2 3
<
ù:ù:4 5

m_textInfo
ù:ù:6 @
.
ù:ù:@ A
characterInfo
ù:ù:A N
.
ù:ù:N O
Length
ù:ù:O U
;
ù:ù:U V
i
ù:ù:W X
++
ù:ù:X Z
)
ù:ù:Z [
{
û:û: 
buffer
ü:ü: 
[
ü:ü: 
i
ü:ü: 
]
ü:ü: 
=
ü:ü: 

m_textInfo
ü:ü: &
.
ü:ü:& '
characterInfo
ü:ü:' 4
[
ü:ü:4 5
i
ü:ü:5 6
]
ü:ü:6 7
.
ü:ü:7 8
	character
ü:ü:8 A
;
ü:ü:A B
}
†:†: 
return
¢:¢: 
new
¢:¢: 
string
¢:¢: 
(
¢:¢: 
buffer
¢:¢: $
)
¢:¢:$ %
;
¢:¢:% &
}
£:£: 	
internal
¶:¶: 
bool
¶:¶: $
IsSelfOrLinkedAncestor
¶:¶: ,
(
¶:¶:, -
TMP_Text
¶:¶:- 5!
targetTextComponent
¶:¶:6 I
)
¶:¶:I J
{
ß:ß: 	
if
®:®: 
(
®:®: !
targetTextComponent
®:®: #
==
®:®:$ &
null
®:®:' +
)
®:®:+ ,
return
©:©: 
true
©:©: 
;
©:©: 
if
´:´: 
(
´:´: #
parentLinkedComponent
´:´: %
!=
´:´:& (
null
´:´:) -
)
´:´:- .
{
¨:¨: 
if
≠:≠: 
(
≠:≠: #
parentLinkedComponent
≠:≠: )
.
≠:≠:) *$
IsSelfOrLinkedAncestor
≠:≠:* @
(
≠:≠:@ A!
targetTextComponent
≠:≠:A T
)
≠:≠:T U
)
≠:≠:U V
return
Æ:Æ: 
true
Æ:Æ: 
;
Æ:Æ:  
}
Ø:Ø: 
if
±:±: 
(
±:±: 
this
±:±: 
.
±:±: 
GetInstanceID
±:±: "
(
±:±:" #
)
±:±:# $
==
±:±:% '!
targetTextComponent
±:±:( ;
.
±:±:; <
GetInstanceID
±:±:< I
(
±:±:I J
)
±:±:J K
)
±:±:K L
return
≤:≤: 
true
≤:≤: 
;
≤:≤: 
return
¥:¥: 
false
¥:¥: 
;
¥:¥: 
}
µ:µ: 	
internal
∑:∑: 
void
∑:∑: (
ReleaseLinkedTextComponent
∑:∑: 0
(
∑:∑:0 1
TMP_Text
∑:∑:1 9!
targetTextComponent
∑:∑:: M
)
∑:∑:M N
{
∏:∏: 	
if
π:π: 
(
π:π: !
targetTextComponent
π:π: #
==
π:π:$ &
null
π:π:' +
)
π:π:+ ,
return
∫:∫: 
;
∫:∫: 
TMP_Text
º:º: "
childLinkedComponent
º:º: )
=
º:º:* +!
targetTextComponent
º:º:, ?
.
º:º:? @!
linkedTextComponent
º:º:@ S
;
º:º:S T
if
æ:æ: 
(
æ:æ: "
childLinkedComponent
æ:æ: $
!=
æ:æ:% '
null
æ:æ:( ,
)
æ:æ:, -(
ReleaseLinkedTextComponent
ø:ø: *
(
ø:ø:* +"
childLinkedComponent
ø:ø:+ ?
)
ø:ø:? @
;
ø:ø:@ A!
targetTextComponent
¡:¡: 
.
¡:¡:  
text
¡:¡:  $
=
¡:¡:% &
string
¡:¡:' -
.
¡:¡:- .
Empty
¡:¡:. 3
;
¡:¡:3 4!
targetTextComponent
¬:¬: 
.
¬:¬:  #
firstVisibleCharacter
¬:¬:  5
=
¬:¬:6 7
$num
¬:¬:8 9
;
¬:¬:9 :!
targetTextComponent
√:√: 
.
√:√:  !
linkedTextComponent
√:√:  3
=
√:√:4 5
null
√:√:6 :
;
√:√:: ;!
targetTextComponent
ƒ:ƒ: 
.
ƒ:ƒ:  #
parentLinkedComponent
ƒ:ƒ:  5
=
ƒ:ƒ:6 7
null
ƒ:ƒ:8 <
;
ƒ:ƒ:< =
}
≈:≈: 	
	protected
„:„: 
Vector2
„:„: 
PackUV
„:„:  
(
„:„:  !
float
„:„:! &
x
„:„:' (
,
„:„:( )
float
„:„:* /
y
„:„:0 1
,
„:„:1 2
float
„:„:3 8
scale
„:„:9 >
)
„:„:> ?
{
‰:‰: 	
Vector2
Â:Â: 
output
Â:Â: 
;
Â:Â: 
output
Á:Á: 
.
Á:Á: 
x
Á:Á: 
=
Á:Á: 
(
Á:Á: 
int
Á:Á: 
)
Á:Á: 
(
Á:Á: 
x
Á:Á: 
*
Á:Á:  
$num
Á:Á:! $
)
Á:Á:$ %
;
Á:Á:% &
output
Ë:Ë: 
.
Ë:Ë: 
y
Ë:Ë: 
=
Ë:Ë: 
(
Ë:Ë: 
int
Ë:Ë: 
)
Ë:Ë: 
(
Ë:Ë: 
y
Ë:Ë: 
*
Ë:Ë:  
$num
Ë:Ë:! $
)
Ë:Ë:$ %
;
Ë:Ë:% &
output
Í:Í: 
.
Í:Í: 
x
Í:Í: 
=
Í:Í: 
(
Í:Í: 
output
Í:Í: 
.
Í:Í: 
x
Í:Í:  
*
Í:Í:! "
$num
Í:Í:# '
)
Í:Í:' (
+
Í:Í:) *
output
Í:Í:+ 1
.
Í:Í:1 2
y
Í:Í:2 3
;
Í:Í:3 4
output
Î:Î: 
.
Î:Î: 
y
Î:Î: 
=
Î:Î: 
scale
Î:Î: 
;
Î:Î: 
return
Ì:Ì: 
output
Ì:Ì: 
;
Ì:Ì: 
}
Ó:Ó: 	
	protected
˜:˜: 
float
˜:˜: 
PackUV
˜:˜: 
(
˜:˜: 
float
˜:˜: $
x
˜:˜:% &
,
˜:˜:& '
float
˜:˜:( -
y
˜:˜:. /
)
˜:˜:/ 0
{
¯:¯: 	
double
˘:˘: 
x0
˘:˘: 
=
˘:˘: 
(
˘:˘: 
int
˘:˘: 
)
˘:˘: 
(
˘:˘: 
x
˘:˘: 
*
˘:˘:  !
$num
˘:˘:" %
)
˘:˘:% &
;
˘:˘:& '
double
˙:˙: 
y0
˙:˙: 
=
˙:˙: 
(
˙:˙: 
int
˙:˙: 
)
˙:˙: 
(
˙:˙: 
y
˙:˙: 
*
˙:˙:  !
$num
˙:˙:" %
)
˙:˙:% &
;
˙:˙:& '
return
¸:¸: 
(
¸:¸: 
float
¸:¸: 
)
¸:¸: 
(
¸:¸: 
(
¸:¸: 
x0
¸:¸: 
*
¸:¸:  
$num
¸:¸:! %
)
¸:¸:% &
+
¸:¸:' (
y0
¸:¸:) +
)
¸:¸:+ ,
;
¸:¸:, -
}
˝:˝: 	
internal
É;É; 
virtual
É;É; 
void
É;É; 
InternalUpdate
É;É; ,
(
É;É;, -
)
É;É;- .
{
É;É;/ 0
}
É;É;1 2
	protected
¨;¨; 
int
¨;¨; 
HexToInt
¨;¨; 
(
¨;¨; 
char
¨;¨; #
hex
¨;¨;$ '
)
¨;¨;' (
{
≠;≠; 	
switch
Æ;Æ; 
(
Æ;Æ; 
hex
Æ;Æ; 
)
Æ;Æ; 
{
Ø;Ø; 
case
∞;∞; 
$char
∞;∞; 
:
∞;∞; 
return
∞;∞;  
$num
∞;∞;! "
;
∞;∞;" #
case
±;±; 
$char
±;±; 
:
±;±; 
return
±;±;  
$num
±;±;! "
;
±;±;" #
case
≤;≤; 
$char
≤;≤; 
:
≤;≤; 
return
≤;≤;  
$num
≤;≤;! "
;
≤;≤;" #
case
≥;≥; 
$char
≥;≥; 
:
≥;≥; 
return
≥;≥;  
$num
≥;≥;! "
;
≥;≥;" #
case
¥;¥; 
$char
¥;¥; 
:
¥;¥; 
return
¥;¥;  
$num
¥;¥;! "
;
¥;¥;" #
case
µ;µ; 
$char
µ;µ; 
:
µ;µ; 
return
µ;µ;  
$num
µ;µ;! "
;
µ;µ;" #
case
∂;∂; 
$char
∂;∂; 
:
∂;∂; 
return
∂;∂;  
$num
∂;∂;! "
;
∂;∂;" #
case
∑;∑; 
$char
∑;∑; 
:
∑;∑; 
return
∑;∑;  
$num
∑;∑;! "
;
∑;∑;" #
case
∏;∏; 
$char
∏;∏; 
:
∏;∏; 
return
∏;∏;  
$num
∏;∏;! "
;
∏;∏;" #
case
π;π; 
$char
π;π; 
:
π;π; 
return
π;π;  
$num
π;π;! "
;
π;π;" #
case
∫;∫; 
$char
∫;∫; 
:
∫;∫; 
return
∫;∫;  
$num
∫;∫;! #
;
∫;∫;# $
case
ª;ª; 
$char
ª;ª; 
:
ª;ª; 
return
ª;ª;  
$num
ª;ª;! #
;
ª;ª;# $
case
º;º; 
$char
º;º; 
:
º;º; 
return
º;º;  
$num
º;º;! #
;
º;º;# $
case
Ω;Ω; 
$char
Ω;Ω; 
:
Ω;Ω; 
return
Ω;Ω;  
$num
Ω;Ω;! #
;
Ω;Ω;# $
case
æ;æ; 
$char
æ;æ; 
:
æ;æ; 
return
æ;æ;  
$num
æ;æ;! #
;
æ;æ;# $
case
ø;ø; 
$char
ø;ø; 
:
ø;ø; 
return
ø;ø;  
$num
ø;ø;! #
;
ø;ø;# $
case
¿;¿; 
$char
¿;¿; 
:
¿;¿; 
return
¿;¿;  
$num
¿;¿;! #
;
¿;¿;# $
case
¡;¡; 
$char
¡;¡; 
:
¡;¡; 
return
¡;¡;  
$num
¡;¡;! #
;
¡;¡;# $
case
¬;¬; 
$char
¬;¬; 
:
¬;¬; 
return
¬;¬;  
$num
¬;¬;! #
;
¬;¬;# $
case
√;√; 
$char
√;√; 
:
√;√; 
return
√;√;  
$num
√;√;! #
;
√;√;# $
case
ƒ;ƒ; 
$char
ƒ;ƒ; 
:
ƒ;ƒ; 
return
ƒ;ƒ;  
$num
ƒ;ƒ;! #
;
ƒ;ƒ;# $
case
≈;≈; 
$char
≈;≈; 
:
≈;≈; 
return
≈;≈;  
$num
≈;≈;! #
;
≈;≈;# $
}
∆;∆; 
return
«;«; 
$num
«;«; 
;
«;«; 
}
»;»; 	
	protected
–;–; 
int
–;–; 
GetUTF16
–;–; 
(
–;–; 
string
–;–; %
text
–;–;& *
,
–;–;* +
int
–;–;, /
i
–;–;0 1
)
–;–;1 2
{
—;—; 	
int
“;“; 
unicode
“;“; 
=
“;“; 
$num
“;“; 
;
“;“; 
unicode
”;”; 
+=
”;”; 
HexToInt
”;”; 
(
”;”;  
text
”;”;  $
[
”;”;$ %
i
”;”;% &
]
”;”;& '
)
”;”;' (
<<
”;”;) +
$num
”;”;, .
;
”;”;. /
unicode
‘;‘; 
+=
‘;‘; 
HexToInt
‘;‘; 
(
‘;‘;  
text
‘;‘;  $
[
‘;‘;$ %
i
‘;‘;% &
+
‘;‘;' (
$num
‘;‘;) *
]
‘;‘;* +
)
‘;‘;+ ,
<<
‘;‘;- /
$num
‘;‘;0 1
;
‘;‘;1 2
unicode
’;’; 
+=
’;’; 
HexToInt
’;’; 
(
’;’;  
text
’;’;  $
[
’;’;$ %
i
’;’;% &
+
’;’;' (
$num
’;’;) *
]
’;’;* +
)
’;’;+ ,
<<
’;’;- /
$num
’;’;0 1
;
’;’;1 2
unicode
÷;÷; 
+=
÷;÷; 
HexToInt
÷;÷; 
(
÷;÷;  
text
÷;÷;  $
[
÷;÷;$ %
i
÷;÷;% &
+
÷;÷;' (
$num
÷;÷;) *
]
÷;÷;* +
)
÷;÷;+ ,
;
÷;÷;, -
return
◊;◊; 
unicode
◊;◊; 
;
◊;◊; 
}
ÿ;ÿ; 	
	protected
⁄;⁄; 
int
⁄;⁄; 
GetUTF16
⁄;⁄; 
(
⁄;⁄; 
int
⁄;⁄; "
[
⁄;⁄;" #
]
⁄;⁄;# $
text
⁄;⁄;% )
,
⁄;⁄;) *
int
⁄;⁄;+ .
i
⁄;⁄;/ 0
)
⁄;⁄;0 1
{
€;€; 	
int
‹;‹; 
unicode
‹;‹; 
=
‹;‹; 
$num
‹;‹; 
;
‹;‹; 
unicode
›;›; 
+=
›;›; 
HexToInt
›;›; 
(
›;›;  
(
›;›;  !
char
›;›;! %
)
›;›;% &
text
›;›;& *
[
›;›;* +
i
›;›;+ ,
]
›;›;, -
)
›;›;- .
<<
›;›;/ 1
$num
›;›;2 4
;
›;›;4 5
unicode
ﬁ;ﬁ; 
+=
ﬁ;ﬁ; 
HexToInt
ﬁ;ﬁ; 
(
ﬁ;ﬁ;  
(
ﬁ;ﬁ;  !
char
ﬁ;ﬁ;! %
)
ﬁ;ﬁ;% &
text
ﬁ;ﬁ;& *
[
ﬁ;ﬁ;* +
i
ﬁ;ﬁ;+ ,
+
ﬁ;ﬁ;- .
$num
ﬁ;ﬁ;/ 0
]
ﬁ;ﬁ;0 1
)
ﬁ;ﬁ;1 2
<<
ﬁ;ﬁ;3 5
$num
ﬁ;ﬁ;6 7
;
ﬁ;ﬁ;7 8
unicode
ﬂ;ﬂ; 
+=
ﬂ;ﬂ; 
HexToInt
ﬂ;ﬂ; 
(
ﬂ;ﬂ;  
(
ﬂ;ﬂ;  !
char
ﬂ;ﬂ;! %
)
ﬂ;ﬂ;% &
text
ﬂ;ﬂ;& *
[
ﬂ;ﬂ;* +
i
ﬂ;ﬂ;+ ,
+
ﬂ;ﬂ;- .
$num
ﬂ;ﬂ;/ 0
]
ﬂ;ﬂ;0 1
)
ﬂ;ﬂ;1 2
<<
ﬂ;ﬂ;3 5
$num
ﬂ;ﬂ;6 7
;
ﬂ;ﬂ;7 8
unicode
‡;‡; 
+=
‡;‡; 
HexToInt
‡;‡; 
(
‡;‡;  
(
‡;‡;  !
char
‡;‡;! %
)
‡;‡;% &
text
‡;‡;& *
[
‡;‡;* +
i
‡;‡;+ ,
+
‡;‡;- .
$num
‡;‡;/ 0
]
‡;‡;0 1
)
‡;‡;1 2
;
‡;‡;2 3
return
·;·; 
unicode
·;·; 
;
·;·; 
}
‚;‚; 	
	protected
È;È; 
int
È;È; 
GetUTF16
È;È; 
(
È;È; 
StringBuilder
È;È; ,
text
È;È;- 1
,
È;È;1 2
int
È;È;3 6
i
È;È;7 8
)
È;È;8 9
{
Í;Í; 	
int
Î;Î; 
unicode
Î;Î; 
=
Î;Î; 
$num
Î;Î; 
;
Î;Î; 
unicode
Ï;Ï; 
+=
Ï;Ï; 
HexToInt
Ï;Ï; 
(
Ï;Ï;  
text
Ï;Ï;  $
[
Ï;Ï;$ %
i
Ï;Ï;% &
]
Ï;Ï;& '
)
Ï;Ï;' (
<<
Ï;Ï;) +
$num
Ï;Ï;, .
;
Ï;Ï;. /
unicode
Ì;Ì; 
+=
Ì;Ì; 
HexToInt
Ì;Ì; 
(
Ì;Ì;  
text
Ì;Ì;  $
[
Ì;Ì;$ %
i
Ì;Ì;% &
+
Ì;Ì;' (
$num
Ì;Ì;) *
]
Ì;Ì;* +
)
Ì;Ì;+ ,
<<
Ì;Ì;- /
$num
Ì;Ì;0 1
;
Ì;Ì;1 2
unicode
Ó;Ó; 
+=
Ó;Ó; 
HexToInt
Ó;Ó; 
(
Ó;Ó;  
text
Ó;Ó;  $
[
Ó;Ó;$ %
i
Ó;Ó;% &
+
Ó;Ó;' (
$num
Ó;Ó;) *
]
Ó;Ó;* +
)
Ó;Ó;+ ,
<<
Ó;Ó;- /
$num
Ó;Ó;0 1
;
Ó;Ó;1 2
unicode
Ô;Ô; 
+=
Ô;Ô; 
HexToInt
Ô;Ô; 
(
Ô;Ô;  
text
Ô;Ô;  $
[
Ô;Ô;$ %
i
Ô;Ô;% &
+
Ô;Ô;' (
$num
Ô;Ô;) *
]
Ô;Ô;* +
)
Ô;Ô;+ ,
;
Ô;Ô;, -
return
;; 
unicode
;; 
;
;; 
}
Ò;Ò; 	
	protected
˘;˘; 
int
˘;˘; 
GetUTF32
˘;˘; 
(
˘;˘; 
string
˘;˘; %
text
˘;˘;& *
,
˘;˘;* +
int
˘;˘;, /
i
˘;˘;0 1
)
˘;˘;1 2
{
˙;˙; 	
int
˚;˚; 
unicode
˚;˚; 
=
˚;˚; 
$num
˚;˚; 
;
˚;˚; 
unicode
¸;¸; 
+=
¸;¸; 
HexToInt
¸;¸; 
(
¸;¸;  
text
¸;¸;  $
[
¸;¸;$ %
i
¸;¸;% &
]
¸;¸;& '
)
¸;¸;' (
<<
¸;¸;) +
$num
¸;¸;, .
;
¸;¸;. /
unicode
˝;˝; 
+=
˝;˝; 
HexToInt
˝;˝; 
(
˝;˝;  
text
˝;˝;  $
[
˝;˝;$ %
i
˝;˝;% &
+
˝;˝;' (
$num
˝;˝;) *
]
˝;˝;* +
)
˝;˝;+ ,
<<
˝;˝;- /
$num
˝;˝;0 2
;
˝;˝;2 3
unicode
˛;˛; 
+=
˛;˛; 
HexToInt
˛;˛; 
(
˛;˛;  
text
˛;˛;  $
[
˛;˛;$ %
i
˛;˛;% &
+
˛;˛;' (
$num
˛;˛;) *
]
˛;˛;* +
)
˛;˛;+ ,
<<
˛;˛;- /
$num
˛;˛;0 2
;
˛;˛;2 3
unicode
ˇ;ˇ; 
+=
ˇ;ˇ; 
HexToInt
ˇ;ˇ; 
(
ˇ;ˇ;  
text
ˇ;ˇ;  $
[
ˇ;ˇ;$ %
i
ˇ;ˇ;% &
+
ˇ;ˇ;' (
$num
ˇ;ˇ;) *
]
ˇ;ˇ;* +
)
ˇ;ˇ;+ ,
<<
ˇ;ˇ;- /
$num
ˇ;ˇ;0 2
;
ˇ;ˇ;2 3
unicode
Ä<Ä< 
+=
Ä<Ä< 
HexToInt
Ä<Ä< 
(
Ä<Ä<  
text
Ä<Ä<  $
[
Ä<Ä<$ %
i
Ä<Ä<% &
+
Ä<Ä<' (
$num
Ä<Ä<) *
]
Ä<Ä<* +
)
Ä<Ä<+ ,
<<
Ä<Ä<- /
$num
Ä<Ä<0 2
;
Ä<Ä<2 3
unicode
Å<Å< 
+=
Å<Å< 
HexToInt
Å<Å< 
(
Å<Å<  
text
Å<Å<  $
[
Å<Å<$ %
i
Å<Å<% &
+
Å<Å<' (
$num
Å<Å<) *
]
Å<Å<* +
)
Å<Å<+ ,
<<
Å<Å<- /
$num
Å<Å<0 1
;
Å<Å<1 2
unicode
Ç<Ç< 
+=
Ç<Ç< 
HexToInt
Ç<Ç< 
(
Ç<Ç<  
text
Ç<Ç<  $
[
Ç<Ç<$ %
i
Ç<Ç<% &
+
Ç<Ç<' (
$num
Ç<Ç<) *
]
Ç<Ç<* +
)
Ç<Ç<+ ,
<<
Ç<Ç<- /
$num
Ç<Ç<0 1
;
Ç<Ç<1 2
unicode
É<É< 
+=
É<É< 
HexToInt
É<É< 
(
É<É<  
text
É<É<  $
[
É<É<$ %
i
É<É<% &
+
É<É<' (
$num
É<É<) *
]
É<É<* +
)
É<É<+ ,
;
É<É<, -
return
Ñ<Ñ< 
unicode
Ñ<Ñ< 
;
Ñ<Ñ< 
}
Ö<Ö< 	
	protected
á<á< 
int
á<á< 
GetUTF32
á<á< 
(
á<á< 
int
á<á< "
[
á<á<" #
]
á<á<# $
text
á<á<% )
,
á<á<) *
int
á<á<+ .
i
á<á</ 0
)
á<á<0 1
{
à<à< 	
int
â<â< 
unicode
â<â< 
=
â<â< 
$num
â<â< 
;
â<â< 
unicode
ä<ä< 
+=
ä<ä< 
HexToInt
ä<ä< 
(
ä<ä<  
(
ä<ä<  !
char
ä<ä<! %
)
ä<ä<% &
text
ä<ä<& *
[
ä<ä<* +
i
ä<ä<+ ,
]
ä<ä<, -
)
ä<ä<- .
<<
ä<ä</ 1
$num
ä<ä<2 4
;
ä<ä<4 5
unicode
ã<ã< 
+=
ã<ã< 
HexToInt
ã<ã< 
(
ã<ã<  
(
ã<ã<  !
char
ã<ã<! %
)
ã<ã<% &
text
ã<ã<& *
[
ã<ã<* +
i
ã<ã<+ ,
+
ã<ã<- .
$num
ã<ã</ 0
]
ã<ã<0 1
)
ã<ã<1 2
<<
ã<ã<3 5
$num
ã<ã<6 8
;
ã<ã<8 9
unicode
å<å< 
+=
å<å< 
HexToInt
å<å< 
(
å<å<  
(
å<å<  !
char
å<å<! %
)
å<å<% &
text
å<å<& *
[
å<å<* +
i
å<å<+ ,
+
å<å<- .
$num
å<å</ 0
]
å<å<0 1
)
å<å<1 2
<<
å<å<3 5
$num
å<å<6 8
;
å<å<8 9
unicode
ç<ç< 
+=
ç<ç< 
HexToInt
ç<ç< 
(
ç<ç<  
(
ç<ç<  !
char
ç<ç<! %
)
ç<ç<% &
text
ç<ç<& *
[
ç<ç<* +
i
ç<ç<+ ,
+
ç<ç<- .
$num
ç<ç</ 0
]
ç<ç<0 1
)
ç<ç<1 2
<<
ç<ç<3 5
$num
ç<ç<6 8
;
ç<ç<8 9
unicode
é<é< 
+=
é<é< 
HexToInt
é<é< 
(
é<é<  
(
é<é<  !
char
é<é<! %
)
é<é<% &
text
é<é<& *
[
é<é<* +
i
é<é<+ ,
+
é<é<- .
$num
é<é</ 0
]
é<é<0 1
)
é<é<1 2
<<
é<é<3 5
$num
é<é<6 8
;
é<é<8 9
unicode
è<è< 
+=
è<è< 
HexToInt
è<è< 
(
è<è<  
(
è<è<  !
char
è<è<! %
)
è<è<% &
text
è<è<& *
[
è<è<* +
i
è<è<+ ,
+
è<è<- .
$num
è<è</ 0
]
è<è<0 1
)
è<è<1 2
<<
è<è<3 5
$num
è<è<6 7
;
è<è<7 8
unicode
ê<ê< 
+=
ê<ê< 
HexToInt
ê<ê< 
(
ê<ê<  
(
ê<ê<  !
char
ê<ê<! %
)
ê<ê<% &
text
ê<ê<& *
[
ê<ê<* +
i
ê<ê<+ ,
+
ê<ê<- .
$num
ê<ê</ 0
]
ê<ê<0 1
)
ê<ê<1 2
<<
ê<ê<3 5
$num
ê<ê<6 7
;
ê<ê<7 8
unicode
ë<ë< 
+=
ë<ë< 
HexToInt
ë<ë< 
(
ë<ë<  
(
ë<ë<  !
char
ë<ë<! %
)
ë<ë<% &
text
ë<ë<& *
[
ë<ë<* +
i
ë<ë<+ ,
+
ë<ë<- .
$num
ë<ë</ 0
]
ë<ë<0 1
)
ë<ë<1 2
;
ë<ë<2 3
return
í<í< 
unicode
í<í< 
;
í<í< 
}
ì<ì< 	
	protected
ö<ö< 
int
ö<ö< 
GetUTF32
ö<ö< 
(
ö<ö< 
StringBuilder
ö<ö< ,
text
ö<ö<- 1
,
ö<ö<1 2
int
ö<ö<3 6
i
ö<ö<7 8
)
ö<ö<8 9
{
õ<õ< 	
int
ú<ú< 
unicode
ú<ú< 
=
ú<ú< 
$num
ú<ú< 
;
ú<ú< 
unicode
ù<ù< 
+=
ù<ù< 
HexToInt
ù<ù< 
(
ù<ù<  
text
ù<ù<  $
[
ù<ù<$ %
i
ù<ù<% &
]
ù<ù<& '
)
ù<ù<' (
<<
ù<ù<) +
$num
ù<ù<, .
;
ù<ù<. /
unicode
û<û< 
+=
û<û< 
HexToInt
û<û< 
(
û<û<  
text
û<û<  $
[
û<û<$ %
i
û<û<% &
+
û<û<' (
$num
û<û<) *
]
û<û<* +
)
û<û<+ ,
<<
û<û<- /
$num
û<û<0 2
;
û<û<2 3
unicode
ü<ü< 
+=
ü<ü< 
HexToInt
ü<ü< 
(
ü<ü<  
text
ü<ü<  $
[
ü<ü<$ %
i
ü<ü<% &
+
ü<ü<' (
$num
ü<ü<) *
]
ü<ü<* +
)
ü<ü<+ ,
<<
ü<ü<- /
$num
ü<ü<0 2
;
ü<ü<2 3
unicode
†<†< 
+=
†<†< 
HexToInt
†<†< 
(
†<†<  
text
†<†<  $
[
†<†<$ %
i
†<†<% &
+
†<†<' (
$num
†<†<) *
]
†<†<* +
)
†<†<+ ,
<<
†<†<- /
$num
†<†<0 2
;
†<†<2 3
unicode
°<°< 
+=
°<°< 
HexToInt
°<°< 
(
°<°<  
text
°<°<  $
[
°<°<$ %
i
°<°<% &
+
°<°<' (
$num
°<°<) *
]
°<°<* +
)
°<°<+ ,
<<
°<°<- /
$num
°<°<0 2
;
°<°<2 3
unicode
¢<¢< 
+=
¢<¢< 
HexToInt
¢<¢< 
(
¢<¢<  
text
¢<¢<  $
[
¢<¢<$ %
i
¢<¢<% &
+
¢<¢<' (
$num
¢<¢<) *
]
¢<¢<* +
)
¢<¢<+ ,
<<
¢<¢<- /
$num
¢<¢<0 1
;
¢<¢<1 2
unicode
£<£< 
+=
£<£< 
HexToInt
£<£< 
(
£<£<  
text
£<£<  $
[
£<£<$ %
i
£<£<% &
+
£<£<' (
$num
£<£<) *
]
£<£<* +
)
£<£<+ ,
<<
£<£<- /
$num
£<£<0 1
;
£<£<1 2
unicode
§<§< 
+=
§<§< 
HexToInt
§<§< 
(
§<§<  
text
§<§<  $
[
§<§<$ %
i
§<§<% &
+
§<§<' (
$num
§<§<) *
]
§<§<* +
)
§<§<+ ,
;
§<§<, -
return
•<•< 
unicode
•<•< 
;
•<•< 
}
¶<¶< 	
	protected
Ø<Ø< 
Color32
Ø<Ø< 
HexCharsToColor
Ø<Ø< )
(
Ø<Ø<) *
char
Ø<Ø<* .
[
Ø<Ø<. /
]
Ø<Ø</ 0
hexChars
Ø<Ø<1 9
,
Ø<Ø<9 :
int
Ø<Ø<; >
tagCount
Ø<Ø<? G
)
Ø<Ø<G H
{
∞<∞< 	
if
±<±< 
(
±<±< 
tagCount
±<±< 
==
±<±< 
$num
±<±< 
)
±<±< 
{
≤<≤< 
byte
≥<≥< 
r
≥<≥< 
=
≥<≥< 
(
≥<≥< 
byte
≥<≥< 
)
≥<≥< 
(
≥<≥<  
HexToInt
≥<≥<  (
(
≥<≥<( )
hexChars
≥<≥<) 1
[
≥<≥<1 2
$num
≥<≥<2 3
]
≥<≥<3 4
)
≥<≥<4 5
*
≥<≥<6 7
$num
≥<≥<8 :
+
≥<≥<; <
HexToInt
≥<≥<= E
(
≥<≥<E F
hexChars
≥<≥<F N
[
≥<≥<N O
$num
≥<≥<O P
]
≥<≥<P Q
)
≥<≥<Q R
)
≥<≥<R S
;
≥<≥<S T
byte
¥<¥< 
g
¥<¥< 
=
¥<¥< 
(
¥<¥< 
byte
¥<¥< 
)
¥<¥< 
(
¥<¥<  
HexToInt
¥<¥<  (
(
¥<¥<( )
hexChars
¥<¥<) 1
[
¥<¥<1 2
$num
¥<¥<2 3
]
¥<¥<3 4
)
¥<¥<4 5
*
¥<¥<6 7
$num
¥<¥<8 :
+
¥<¥<; <
HexToInt
¥<¥<= E
(
¥<¥<E F
hexChars
¥<¥<F N
[
¥<¥<N O
$num
¥<¥<O P
]
¥<¥<P Q
)
¥<¥<Q R
)
¥<¥<R S
;
¥<¥<S T
byte
µ<µ< 
b
µ<µ< 
=
µ<µ< 
(
µ<µ< 
byte
µ<µ< 
)
µ<µ< 
(
µ<µ<  
HexToInt
µ<µ<  (
(
µ<µ<( )
hexChars
µ<µ<) 1
[
µ<µ<1 2
$num
µ<µ<2 3
]
µ<µ<3 4
)
µ<µ<4 5
*
µ<µ<6 7
$num
µ<µ<8 :
+
µ<µ<; <
HexToInt
µ<µ<= E
(
µ<µ<E F
hexChars
µ<µ<F N
[
µ<µ<N O
$num
µ<µ<O P
]
µ<µ<P Q
)
µ<µ<Q R
)
µ<µ<R S
;
µ<µ<S T
return
∑<∑< 
new
∑<∑< 
Color32
∑<∑< "
(
∑<∑<" #
r
∑<∑<# $
,
∑<∑<$ %
g
∑<∑<& '
,
∑<∑<' (
b
∑<∑<) *
,
∑<∑<* +
$num
∑<∑<, /
)
∑<∑</ 0
;
∑<∑<0 1
}
∏<∏< 
else
π<π< 
if
π<π< 
(
π<π< 
tagCount
π<π< 
==
π<π<  
$num
π<π<! "
)
π<π<" #
{
∫<∫< 
byte
ª<ª< 
r
ª<ª< 
=
ª<ª< 
(
ª<ª< 
byte
ª<ª< 
)
ª<ª< 
(
ª<ª<  
HexToInt
ª<ª<  (
(
ª<ª<( )
hexChars
ª<ª<) 1
[
ª<ª<1 2
$num
ª<ª<2 3
]
ª<ª<3 4
)
ª<ª<4 5
*
ª<ª<6 7
$num
ª<ª<8 :
+
ª<ª<; <
HexToInt
ª<ª<= E
(
ª<ª<E F
hexChars
ª<ª<F N
[
ª<ª<N O
$num
ª<ª<O P
]
ª<ª<P Q
)
ª<ª<Q R
)
ª<ª<R S
;
ª<ª<S T
byte
º<º< 
g
º<º< 
=
º<º< 
(
º<º< 
byte
º<º< 
)
º<º< 
(
º<º<  
HexToInt
º<º<  (
(
º<º<( )
hexChars
º<º<) 1
[
º<º<1 2
$num
º<º<2 3
]
º<º<3 4
)
º<º<4 5
*
º<º<6 7
$num
º<º<8 :
+
º<º<; <
HexToInt
º<º<= E
(
º<º<E F
hexChars
º<º<F N
[
º<º<N O
$num
º<º<O P
]
º<º<P Q
)
º<º<Q R
)
º<º<R S
;
º<º<S T
byte
Ω<Ω< 
b
Ω<Ω< 
=
Ω<Ω< 
(
Ω<Ω< 
byte
Ω<Ω< 
)
Ω<Ω< 
(
Ω<Ω<  
HexToInt
Ω<Ω<  (
(
Ω<Ω<( )
hexChars
Ω<Ω<) 1
[
Ω<Ω<1 2
$num
Ω<Ω<2 3
]
Ω<Ω<3 4
)
Ω<Ω<4 5
*
Ω<Ω<6 7
$num
Ω<Ω<8 :
+
Ω<Ω<; <
HexToInt
Ω<Ω<= E
(
Ω<Ω<E F
hexChars
Ω<Ω<F N
[
Ω<Ω<N O
$num
Ω<Ω<O P
]
Ω<Ω<P Q
)
Ω<Ω<Q R
)
Ω<Ω<R S
;
Ω<Ω<S T
byte
æ<æ< 
a
æ<æ< 
=
æ<æ< 
(
æ<æ< 
byte
æ<æ< 
)
æ<æ< 
(
æ<æ<  
HexToInt
æ<æ<  (
(
æ<æ<( )
hexChars
æ<æ<) 1
[
æ<æ<1 2
$num
æ<æ<2 3
]
æ<æ<3 4
)
æ<æ<4 5
*
æ<æ<6 7
$num
æ<æ<8 :
+
æ<æ<; <
HexToInt
æ<æ<= E
(
æ<æ<E F
hexChars
æ<æ<F N
[
æ<æ<N O
$num
æ<æ<O P
]
æ<æ<P Q
)
æ<æ<Q R
)
æ<æ<R S
;
æ<æ<S T
return
¿<¿< 
new
¿<¿< 
Color32
¿<¿< "
(
¿<¿<" #
r
¿<¿<# $
,
¿<¿<$ %
g
¿<¿<& '
,
¿<¿<' (
b
¿<¿<) *
,
¿<¿<* +
a
¿<¿<, -
)
¿<¿<- .
;
¿<¿<. /
}
¡<¡< 
else
¬<¬< 
if
¬<¬< 
(
¬<¬< 
tagCount
¬<¬< 
==
¬<¬<  
$num
¬<¬<! "
)
¬<¬<" #
{
√<√< 
byte
ƒ<ƒ< 
r
ƒ<ƒ< 
=
ƒ<ƒ< 
(
ƒ<ƒ< 
byte
ƒ<ƒ< 
)
ƒ<ƒ< 
(
ƒ<ƒ<  
HexToInt
ƒ<ƒ<  (
(
ƒ<ƒ<( )
hexChars
ƒ<ƒ<) 1
[
ƒ<ƒ<1 2
$num
ƒ<ƒ<2 3
]
ƒ<ƒ<3 4
)
ƒ<ƒ<4 5
*
ƒ<ƒ<6 7
$num
ƒ<ƒ<8 :
+
ƒ<ƒ<; <
HexToInt
ƒ<ƒ<= E
(
ƒ<ƒ<E F
hexChars
ƒ<ƒ<F N
[
ƒ<ƒ<N O
$num
ƒ<ƒ<O P
]
ƒ<ƒ<P Q
)
ƒ<ƒ<Q R
)
ƒ<ƒ<R S
;
ƒ<ƒ<S T
byte
≈<≈< 
g
≈<≈< 
=
≈<≈< 
(
≈<≈< 
byte
≈<≈< 
)
≈<≈< 
(
≈<≈<  
HexToInt
≈<≈<  (
(
≈<≈<( )
hexChars
≈<≈<) 1
[
≈<≈<1 2
$num
≈<≈<2 3
]
≈<≈<3 4
)
≈<≈<4 5
*
≈<≈<6 7
$num
≈<≈<8 :
+
≈<≈<; <
HexToInt
≈<≈<= E
(
≈<≈<E F
hexChars
≈<≈<F N
[
≈<≈<N O
$num
≈<≈<O P
]
≈<≈<P Q
)
≈<≈<Q R
)
≈<≈<R S
;
≈<≈<S T
byte
∆<∆< 
b
∆<∆< 
=
∆<∆< 
(
∆<∆< 
byte
∆<∆< 
)
∆<∆< 
(
∆<∆<  
HexToInt
∆<∆<  (
(
∆<∆<( )
hexChars
∆<∆<) 1
[
∆<∆<1 2
$num
∆<∆<2 3
]
∆<∆<3 4
)
∆<∆<4 5
*
∆<∆<6 7
$num
∆<∆<8 :
+
∆<∆<; <
HexToInt
∆<∆<= E
(
∆<∆<E F
hexChars
∆<∆<F N
[
∆<∆<N O
$num
∆<∆<O P
]
∆<∆<P Q
)
∆<∆<Q R
)
∆<∆<R S
;
∆<∆<S T
return
»<»< 
new
»<»< 
Color32
»<»< "
(
»<»<" #
r
»<»<# $
,
»<»<$ %
g
»<»<& '
,
»<»<' (
b
»<»<) *
,
»<»<* +
$num
»<»<, /
)
»<»</ 0
;
»<»<0 1
}
…<…< 
else
 < < 
if
 < < 
(
 < < 
tagCount
 < < 
==
 < <  
$num
 < <! "
)
 < <" #
{
À<À< 
byte
Ã<Ã< 
r
Ã<Ã< 
=
Ã<Ã< 
(
Ã<Ã< 
byte
Ã<Ã< 
)
Ã<Ã< 
(
Ã<Ã<  
HexToInt
Ã<Ã<  (
(
Ã<Ã<( )
hexChars
Ã<Ã<) 1
[
Ã<Ã<1 2
$num
Ã<Ã<2 3
]
Ã<Ã<3 4
)
Ã<Ã<4 5
*
Ã<Ã<6 7
$num
Ã<Ã<8 :
+
Ã<Ã<; <
HexToInt
Ã<Ã<= E
(
Ã<Ã<E F
hexChars
Ã<Ã<F N
[
Ã<Ã<N O
$num
Ã<Ã<O P
]
Ã<Ã<P Q
)
Ã<Ã<Q R
)
Ã<Ã<R S
;
Ã<Ã<S T
byte
Õ<Õ< 
g
Õ<Õ< 
=
Õ<Õ< 
(
Õ<Õ< 
byte
Õ<Õ< 
)
Õ<Õ< 
(
Õ<Õ<  
HexToInt
Õ<Õ<  (
(
Õ<Õ<( )
hexChars
Õ<Õ<) 1
[
Õ<Õ<1 2
$num
Õ<Õ<2 3
]
Õ<Õ<3 4
)
Õ<Õ<4 5
*
Õ<Õ<6 7
$num
Õ<Õ<8 :
+
Õ<Õ<; <
HexToInt
Õ<Õ<= E
(
Õ<Õ<E F
hexChars
Õ<Õ<F N
[
Õ<Õ<N O
$num
Õ<Õ<O P
]
Õ<Õ<P Q
)
Õ<Õ<Q R
)
Õ<Õ<R S
;
Õ<Õ<S T
byte
Œ<Œ< 
b
Œ<Œ< 
=
Œ<Œ< 
(
Œ<Œ< 
byte
Œ<Œ< 
)
Œ<Œ< 
(
Œ<Œ<  
HexToInt
Œ<Œ<  (
(
Œ<Œ<( )
hexChars
Œ<Œ<) 1
[
Œ<Œ<1 2
$num
Œ<Œ<2 3
]
Œ<Œ<3 4
)
Œ<Œ<4 5
*
Œ<Œ<6 7
$num
Œ<Œ<8 :
+
Œ<Œ<; <
HexToInt
Œ<Œ<= E
(
Œ<Œ<E F
hexChars
Œ<Œ<F N
[
Œ<Œ<N O
$num
Œ<Œ<O P
]
Œ<Œ<P Q
)
Œ<Œ<Q R
)
Œ<Œ<R S
;
Œ<Œ<S T
byte
œ<œ< 
a
œ<œ< 
=
œ<œ< 
(
œ<œ< 
byte
œ<œ< 
)
œ<œ< 
(
œ<œ<  
HexToInt
œ<œ<  (
(
œ<œ<( )
hexChars
œ<œ<) 1
[
œ<œ<1 2
$num
œ<œ<2 3
]
œ<œ<3 4
)
œ<œ<4 5
*
œ<œ<6 7
$num
œ<œ<8 :
+
œ<œ<; <
HexToInt
œ<œ<= E
(
œ<œ<E F
hexChars
œ<œ<F N
[
œ<œ<N O
$num
œ<œ<O P
]
œ<œ<P Q
)
œ<œ<Q R
)
œ<œ<R S
;
œ<œ<S T
return
—<—< 
new
—<—< 
Color32
—<—< "
(
—<—<" #
r
—<—<# $
,
—<—<$ %
g
—<—<& '
,
—<—<' (
b
—<—<) *
,
—<—<* +
a
—<—<, -
)
—<—<- .
;
—<—<. /
}
“<“< 
else
”<”< 
if
”<”< 
(
”<”< 
tagCount
”<”< 
==
”<”<  
$num
”<”<! #
)
”<”<# $
{
‘<‘< 
byte
’<’< 
r
’<’< 
=
’<’< 
(
’<’< 
byte
’<’< 
)
’<’< 
(
’<’<  
HexToInt
’<’<  (
(
’<’<( )
hexChars
’<’<) 1
[
’<’<1 2
$num
’<’<2 3
]
’<’<3 4
)
’<’<4 5
*
’<’<6 7
$num
’<’<8 :
+
’<’<; <
HexToInt
’<’<= E
(
’<’<E F
hexChars
’<’<F N
[
’<’<N O
$num
’<’<O P
]
’<’<P Q
)
’<’<Q R
)
’<’<R S
;
’<’<S T
byte
÷<÷< 
g
÷<÷< 
=
÷<÷< 
(
÷<÷< 
byte
÷<÷< 
)
÷<÷< 
(
÷<÷<  
HexToInt
÷<÷<  (
(
÷<÷<( )
hexChars
÷<÷<) 1
[
÷<÷<1 2
$num
÷<÷<2 3
]
÷<÷<3 4
)
÷<÷<4 5
*
÷<÷<6 7
$num
÷<÷<8 :
+
÷<÷<; <
HexToInt
÷<÷<= E
(
÷<÷<E F
hexChars
÷<÷<F N
[
÷<÷<N O
$num
÷<÷<O P
]
÷<÷<P Q
)
÷<÷<Q R
)
÷<÷<R S
;
÷<÷<S T
byte
◊<◊< 
b
◊<◊< 
=
◊<◊< 
(
◊<◊< 
byte
◊<◊< 
)
◊<◊< 
(
◊<◊<  
HexToInt
◊<◊<  (
(
◊<◊<( )
hexChars
◊<◊<) 1
[
◊<◊<1 2
$num
◊<◊<2 3
]
◊<◊<3 4
)
◊<◊<4 5
*
◊<◊<6 7
$num
◊<◊<8 :
+
◊<◊<; <
HexToInt
◊<◊<= E
(
◊<◊<E F
hexChars
◊<◊<F N
[
◊<◊<N O
$num
◊<◊<O P
]
◊<◊<P Q
)
◊<◊<Q R
)
◊<◊<R S
;
◊<◊<S T
return
Ÿ<Ÿ< 
new
Ÿ<Ÿ< 
Color32
Ÿ<Ÿ< "
(
Ÿ<Ÿ<" #
r
Ÿ<Ÿ<# $
,
Ÿ<Ÿ<$ %
g
Ÿ<Ÿ<& '
,
Ÿ<Ÿ<' (
b
Ÿ<Ÿ<) *
,
Ÿ<Ÿ<* +
$num
Ÿ<Ÿ<, /
)
Ÿ<Ÿ</ 0
;
Ÿ<Ÿ<0 1
}
⁄<⁄< 
else
€<€< 
if
€<€< 
(
€<€< 
tagCount
€<€< 
==
€<€<  
$num
€<€<! #
)
€<€<# $
{
‹<‹< 
byte
›<›< 
r
›<›< 
=
›<›< 
(
›<›< 
byte
›<›< 
)
›<›< 
(
›<›<  
HexToInt
›<›<  (
(
›<›<( )
hexChars
›<›<) 1
[
›<›<1 2
$num
›<›<2 3
]
›<›<3 4
)
›<›<4 5
*
›<›<6 7
$num
›<›<8 :
+
›<›<; <
HexToInt
›<›<= E
(
›<›<E F
hexChars
›<›<F N
[
›<›<N O
$num
›<›<O P
]
›<›<P Q
)
›<›<Q R
)
›<›<R S
;
›<›<S T
byte
ﬁ<ﬁ< 
g
ﬁ<ﬁ< 
=
ﬁ<ﬁ< 
(
ﬁ<ﬁ< 
byte
ﬁ<ﬁ< 
)
ﬁ<ﬁ< 
(
ﬁ<ﬁ<  
HexToInt
ﬁ<ﬁ<  (
(
ﬁ<ﬁ<( )
hexChars
ﬁ<ﬁ<) 1
[
ﬁ<ﬁ<1 2
$num
ﬁ<ﬁ<2 3
]
ﬁ<ﬁ<3 4
)
ﬁ<ﬁ<4 5
*
ﬁ<ﬁ<6 7
$num
ﬁ<ﬁ<8 :
+
ﬁ<ﬁ<; <
HexToInt
ﬁ<ﬁ<= E
(
ﬁ<ﬁ<E F
hexChars
ﬁ<ﬁ<F N
[
ﬁ<ﬁ<N O
$num
ﬁ<ﬁ<O P
]
ﬁ<ﬁ<P Q
)
ﬁ<ﬁ<Q R
)
ﬁ<ﬁ<R S
;
ﬁ<ﬁ<S T
byte
ﬂ<ﬂ< 
b
ﬂ<ﬂ< 
=
ﬂ<ﬂ< 
(
ﬂ<ﬂ< 
byte
ﬂ<ﬂ< 
)
ﬂ<ﬂ< 
(
ﬂ<ﬂ<  
HexToInt
ﬂ<ﬂ<  (
(
ﬂ<ﬂ<( )
hexChars
ﬂ<ﬂ<) 1
[
ﬂ<ﬂ<1 2
$num
ﬂ<ﬂ<2 3
]
ﬂ<ﬂ<3 4
)
ﬂ<ﬂ<4 5
*
ﬂ<ﬂ<6 7
$num
ﬂ<ﬂ<8 :
+
ﬂ<ﬂ<; <
HexToInt
ﬂ<ﬂ<= E
(
ﬂ<ﬂ<E F
hexChars
ﬂ<ﬂ<F N
[
ﬂ<ﬂ<N O
$num
ﬂ<ﬂ<O P
]
ﬂ<ﬂ<P Q
)
ﬂ<ﬂ<Q R
)
ﬂ<ﬂ<R S
;
ﬂ<ﬂ<S T
byte
‡<‡< 
a
‡<‡< 
=
‡<‡< 
(
‡<‡< 
byte
‡<‡< 
)
‡<‡< 
(
‡<‡<  
HexToInt
‡<‡<  (
(
‡<‡<( )
hexChars
‡<‡<) 1
[
‡<‡<1 2
$num
‡<‡<2 4
]
‡<‡<4 5
)
‡<‡<5 6
*
‡<‡<7 8
$num
‡<‡<9 ;
+
‡<‡<< =
HexToInt
‡<‡<> F
(
‡<‡<F G
hexChars
‡<‡<G O
[
‡<‡<O P
$num
‡<‡<P R
]
‡<‡<R S
)
‡<‡<S T
)
‡<‡<T U
;
‡<‡<U V
return
‚<‚< 
new
‚<‚< 
Color32
‚<‚< "
(
‚<‚<" #
r
‚<‚<# $
,
‚<‚<$ %
g
‚<‚<& '
,
‚<‚<' (
b
‚<‚<) *
,
‚<‚<* +
a
‚<‚<, -
)
‚<‚<- .
;
‚<‚<. /
}
„<„< 
else
‰<‰< 
if
‰<‰< 
(
‰<‰< 
tagCount
‰<‰< 
==
‰<‰<  
$num
‰<‰<! #
)
‰<‰<# $
{
Â<Â< 
byte
Ê<Ê< 
r
Ê<Ê< 
=
Ê<Ê< 
(
Ê<Ê< 
byte
Ê<Ê< 
)
Ê<Ê< 
(
Ê<Ê<  
HexToInt
Ê<Ê<  (
(
Ê<Ê<( )
hexChars
Ê<Ê<) 1
[
Ê<Ê<1 2
$num
Ê<Ê<2 3
]
Ê<Ê<3 4
)
Ê<Ê<4 5
*
Ê<Ê<6 7
$num
Ê<Ê<8 :
+
Ê<Ê<; <
HexToInt
Ê<Ê<= E
(
Ê<Ê<E F
hexChars
Ê<Ê<F N
[
Ê<Ê<N O
$num
Ê<Ê<O P
]
Ê<Ê<P Q
)
Ê<Ê<Q R
)
Ê<Ê<R S
;
Ê<Ê<S T
byte
Á<Á< 
g
Á<Á< 
=
Á<Á< 
(
Á<Á< 
byte
Á<Á< 
)
Á<Á< 
(
Á<Á<  
HexToInt
Á<Á<  (
(
Á<Á<( )
hexChars
Á<Á<) 1
[
Á<Á<1 2
$num
Á<Á<2 3
]
Á<Á<3 4
)
Á<Á<4 5
*
Á<Á<6 7
$num
Á<Á<8 :
+
Á<Á<; <
HexToInt
Á<Á<= E
(
Á<Á<E F
hexChars
Á<Á<F N
[
Á<Á<N O
$num
Á<Á<O Q
]
Á<Á<Q R
)
Á<Á<R S
)
Á<Á<S T
;
Á<Á<T U
byte
Ë<Ë< 
b
Ë<Ë< 
=
Ë<Ë< 
(
Ë<Ë< 
byte
Ë<Ë< 
)
Ë<Ë< 
(
Ë<Ë<  
HexToInt
Ë<Ë<  (
(
Ë<Ë<( )
hexChars
Ë<Ë<) 1
[
Ë<Ë<1 2
$num
Ë<Ë<2 4
]
Ë<Ë<4 5
)
Ë<Ë<5 6
*
Ë<Ë<7 8
$num
Ë<Ë<9 ;
+
Ë<Ë<< =
HexToInt
Ë<Ë<> F
(
Ë<Ë<F G
hexChars
Ë<Ë<G O
[
Ë<Ë<O P
$num
Ë<Ë<P R
]
Ë<Ë<R S
)
Ë<Ë<S T
)
Ë<Ë<T U
;
Ë<Ë<U V
return
Í<Í< 
new
Í<Í< 
Color32
Í<Í< "
(
Í<Í<" #
r
Í<Í<# $
,
Í<Í<$ %
g
Í<Í<& '
,
Í<Í<' (
b
Í<Í<) *
,
Í<Í<* +
$num
Í<Í<, /
)
Í<Í</ 0
;
Í<Í<0 1
}
Î<Î< 
else
Ï<Ï< 
if
Ï<Ï< 
(
Ï<Ï< 
tagCount
Ï<Ï< 
==
Ï<Ï<  
$num
Ï<Ï<! #
)
Ï<Ï<# $
{
Ì<Ì< 
byte
Ó<Ó< 
r
Ó<Ó< 
=
Ó<Ó< 
(
Ó<Ó< 
byte
Ó<Ó< 
)
Ó<Ó< 
(
Ó<Ó<  
HexToInt
Ó<Ó<  (
(
Ó<Ó<( )
hexChars
Ó<Ó<) 1
[
Ó<Ó<1 2
$num
Ó<Ó<2 3
]
Ó<Ó<3 4
)
Ó<Ó<4 5
*
Ó<Ó<6 7
$num
Ó<Ó<8 :
+
Ó<Ó<; <
HexToInt
Ó<Ó<= E
(
Ó<Ó<E F
hexChars
Ó<Ó<F N
[
Ó<Ó<N O
$num
Ó<Ó<O P
]
Ó<Ó<P Q
)
Ó<Ó<Q R
)
Ó<Ó<R S
;
Ó<Ó<S T
byte
Ô<Ô< 
g
Ô<Ô< 
=
Ô<Ô< 
(
Ô<Ô< 
byte
Ô<Ô< 
)
Ô<Ô< 
(
Ô<Ô<  
HexToInt
Ô<Ô<  (
(
Ô<Ô<( )
hexChars
Ô<Ô<) 1
[
Ô<Ô<1 2
$num
Ô<Ô<2 3
]
Ô<Ô<3 4
)
Ô<Ô<4 5
*
Ô<Ô<6 7
$num
Ô<Ô<8 :
+
Ô<Ô<; <
HexToInt
Ô<Ô<= E
(
Ô<Ô<E F
hexChars
Ô<Ô<F N
[
Ô<Ô<N O
$num
Ô<Ô<O Q
]
Ô<Ô<Q R
)
Ô<Ô<R S
)
Ô<Ô<S T
;
Ô<Ô<T U
byte
<< 
b
<< 
=
<< 
(
<< 
byte
<< 
)
<< 
(
<<  
HexToInt
<<  (
(
<<( )
hexChars
<<) 1
[
<<1 2
$num
<<2 4
]
<<4 5
)
<<5 6
*
<<7 8
$num
<<9 ;
+
<<< =
HexToInt
<<> F
(
<<F G
hexChars
<<G O
[
<<O P
$num
<<P R
]
<<R S
)
<<S T
)
<<T U
;
<<U V
byte
Ò<Ò< 
a
Ò<Ò< 
=
Ò<Ò< 
(
Ò<Ò< 
byte
Ò<Ò< 
)
Ò<Ò< 
(
Ò<Ò<  
HexToInt
Ò<Ò<  (
(
Ò<Ò<( )
hexChars
Ò<Ò<) 1
[
Ò<Ò<1 2
$num
Ò<Ò<2 4
]
Ò<Ò<4 5
)
Ò<Ò<5 6
*
Ò<Ò<7 8
$num
Ò<Ò<9 ;
+
Ò<Ò<< =
HexToInt
Ò<Ò<> F
(
Ò<Ò<F G
hexChars
Ò<Ò<G O
[
Ò<Ò<O P
$num
Ò<Ò<P R
]
Ò<Ò<R S
)
Ò<Ò<S T
)
Ò<Ò<T U
;
Ò<Ò<U V
return
Û<Û< 
new
Û<Û< 
Color32
Û<Û< "
(
Û<Û<" #
r
Û<Û<# $
,
Û<Û<$ %
g
Û<Û<& '
,
Û<Û<' (
b
Û<Û<) *
,
Û<Û<* +
a
Û<Û<, -
)
Û<Û<- .
;
Û<Û<. /
}
Ù<Ù< 
return
ˆ<ˆ< 
new
ˆ<ˆ< 
Color32
ˆ<ˆ< 
(
ˆ<ˆ< 
$num
ˆ<ˆ< "
,
ˆ<ˆ<" #
$num
ˆ<ˆ<$ '
,
ˆ<ˆ<' (
$num
ˆ<ˆ<) ,
,
ˆ<ˆ<, -
$num
ˆ<ˆ<. 1
)
ˆ<ˆ<1 2
;
ˆ<ˆ<2 3
}
˜<˜< 	
	protected
Å=Å= 
Color32
Å=Å= 
HexCharsToColor
Å=Å= )
(
Å=Å=) *
char
Å=Å=* .
[
Å=Å=. /
]
Å=Å=/ 0
hexChars
Å=Å=1 9
,
Å=Å=9 :
int
Å=Å=; >

startIndex
Å=Å=? I
,
Å=Å=I J
int
Å=Å=K N
length
Å=Å=O U
)
Å=Å=U V
{
Ç=Ç= 	
if
É=É= 
(
É=É= 
length
É=É= 
==
É=É= 
$num
É=É= 
)
É=É= 
{
Ñ=Ñ= 
byte
Ö=Ö= 
r
Ö=Ö= 
=
Ö=Ö= 
(
Ö=Ö= 
byte
Ö=Ö= 
)
Ö=Ö= 
(
Ö=Ö=  
HexToInt
Ö=Ö=  (
(
Ö=Ö=( )
hexChars
Ö=Ö=) 1
[
Ö=Ö=1 2

startIndex
Ö=Ö=2 <
+
Ö=Ö== >
$num
Ö=Ö=? @
]
Ö=Ö=@ A
)
Ö=Ö=A B
*
Ö=Ö=C D
$num
Ö=Ö=E G
+
Ö=Ö=H I
HexToInt
Ö=Ö=J R
(
Ö=Ö=R S
hexChars
Ö=Ö=S [
[
Ö=Ö=[ \

startIndex
Ö=Ö=\ f
+
Ö=Ö=g h
$num
Ö=Ö=i j
]
Ö=Ö=j k
)
Ö=Ö=k l
)
Ö=Ö=l m
;
Ö=Ö=m n
byte
Ü=Ü= 
g
Ü=Ü= 
=
Ü=Ü= 
(
Ü=Ü= 
byte
Ü=Ü= 
)
Ü=Ü= 
(
Ü=Ü=  
HexToInt
Ü=Ü=  (
(
Ü=Ü=( )
hexChars
Ü=Ü=) 1
[
Ü=Ü=1 2

startIndex
Ü=Ü=2 <
+
Ü=Ü== >
$num
Ü=Ü=? @
]
Ü=Ü=@ A
)
Ü=Ü=A B
*
Ü=Ü=C D
$num
Ü=Ü=E G
+
Ü=Ü=H I
HexToInt
Ü=Ü=J R
(
Ü=Ü=R S
hexChars
Ü=Ü=S [
[
Ü=Ü=[ \

startIndex
Ü=Ü=\ f
+
Ü=Ü=g h
$num
Ü=Ü=i j
]
Ü=Ü=j k
)
Ü=Ü=k l
)
Ü=Ü=l m
;
Ü=Ü=m n
byte
á=á= 
b
á=á= 
=
á=á= 
(
á=á= 
byte
á=á= 
)
á=á= 
(
á=á=  
HexToInt
á=á=  (
(
á=á=( )
hexChars
á=á=) 1
[
á=á=1 2

startIndex
á=á=2 <
+
á=á== >
$num
á=á=? @
]
á=á=@ A
)
á=á=A B
*
á=á=C D
$num
á=á=E G
+
á=á=H I
HexToInt
á=á=J R
(
á=á=R S
hexChars
á=á=S [
[
á=á=[ \

startIndex
á=á=\ f
+
á=á=g h
$num
á=á=i j
]
á=á=j k
)
á=á=k l
)
á=á=l m
;
á=á=m n
return
â=â= 
new
â=â= 
Color32
â=â= "
(
â=â=" #
r
â=â=# $
,
â=â=$ %
g
â=â=& '
,
â=â=' (
b
â=â=) *
,
â=â=* +
$num
â=â=, /
)
â=â=/ 0
;
â=â=0 1
}
ä=ä= 
else
ã=ã= 
if
ã=ã= 
(
ã=ã= 
length
ã=ã= 
==
ã=ã= 
$num
ã=ã=  
)
ã=ã=  !
{
å=å= 
byte
ç=ç= 
r
ç=ç= 
=
ç=ç= 
(
ç=ç= 
byte
ç=ç= 
)
ç=ç= 
(
ç=ç=  
HexToInt
ç=ç=  (
(
ç=ç=( )
hexChars
ç=ç=) 1
[
ç=ç=1 2

startIndex
ç=ç=2 <
+
ç=ç== >
$num
ç=ç=? @
]
ç=ç=@ A
)
ç=ç=A B
*
ç=ç=C D
$num
ç=ç=E G
+
ç=ç=H I
HexToInt
ç=ç=J R
(
ç=ç=R S
hexChars
ç=ç=S [
[
ç=ç=[ \

startIndex
ç=ç=\ f
+
ç=ç=g h
$num
ç=ç=i j
]
ç=ç=j k
)
ç=ç=k l
)
ç=ç=l m
;
ç=ç=m n
byte
é=é= 
g
é=é= 
=
é=é= 
(
é=é= 
byte
é=é= 
)
é=é= 
(
é=é=  
HexToInt
é=é=  (
(
é=é=( )
hexChars
é=é=) 1
[
é=é=1 2

startIndex
é=é=2 <
+
é=é== >
$num
é=é=? @
]
é=é=@ A
)
é=é=A B
*
é=é=C D
$num
é=é=E G
+
é=é=H I
HexToInt
é=é=J R
(
é=é=R S
hexChars
é=é=S [
[
é=é=[ \

startIndex
é=é=\ f
+
é=é=g h
$num
é=é=i j
]
é=é=j k
)
é=é=k l
)
é=é=l m
;
é=é=m n
byte
è=è= 
b
è=è= 
=
è=è= 
(
è=è= 
byte
è=è= 
)
è=è= 
(
è=è=  
HexToInt
è=è=  (
(
è=è=( )
hexChars
è=è=) 1
[
è=è=1 2

startIndex
è=è=2 <
+
è=è== >
$num
è=è=? @
]
è=è=@ A
)
è=è=A B
*
è=è=C D
$num
è=è=E G
+
è=è=H I
HexToInt
è=è=J R
(
è=è=R S
hexChars
è=è=S [
[
è=è=[ \

startIndex
è=è=\ f
+
è=è=g h
$num
è=è=i j
]
è=è=j k
)
è=è=k l
)
è=è=l m
;
è=è=m n
byte
ê=ê= 
a
ê=ê= 
=
ê=ê= 
(
ê=ê= 
byte
ê=ê= 
)
ê=ê= 
(
ê=ê=  
HexToInt
ê=ê=  (
(
ê=ê=( )
hexChars
ê=ê=) 1
[
ê=ê=1 2

startIndex
ê=ê=2 <
+
ê=ê== >
$num
ê=ê=? @
]
ê=ê=@ A
)
ê=ê=A B
*
ê=ê=C D
$num
ê=ê=E G
+
ê=ê=H I
HexToInt
ê=ê=J R
(
ê=ê=R S
hexChars
ê=ê=S [
[
ê=ê=[ \

startIndex
ê=ê=\ f
+
ê=ê=g h
$num
ê=ê=i j
]
ê=ê=j k
)
ê=ê=k l
)
ê=ê=l m
;
ê=ê=m n
return
í=í= 
new
í=í= 
Color32
í=í= "
(
í=í=" #
r
í=í=# $
,
í=í=$ %
g
í=í=& '
,
í=í=' (
b
í=í=) *
,
í=í=* +
a
í=í=, -
)
í=í=- .
;
í=í=. /
}
ì=ì= 
return
ï=ï= 
s_colorWhite
ï=ï= 
;
ï=ï=  
}
ñ=ñ= 	
int
°=°= $
GetAttributeParameters
°=°= "
(
°=°=" #
char
°=°=# '
[
°=°=' (
]
°=°=( )
chars
°=°=* /
,
°=°=/ 0
int
°=°=1 4

startIndex
°=°=5 ?
,
°=°=? @
int
°=°=A D
length
°=°=E K
,
°=°=K L
ref
°=°=M P
float
°=°=Q V
[
°=°=V W
]
°=°=W X

parameters
°=°=Y c
)
°=°=c d
{
¢=¢= 	
int
£=£= 
endIndex
£=£= 
=
£=£= 

startIndex
£=£= %
;
£=£=% &
int
§=§= 
attributeCount
§=§= 
=
§=§=  
$num
§=§=! "
;
§=§=" #
while
¶=¶= 
(
¶=¶= 
endIndex
¶=¶= 
<
¶=¶= 

startIndex
¶=¶= (
+
¶=¶=) *
length
¶=¶=+ 1
)
¶=¶=1 2
{
ß=ß= 

parameters
®=®= 
[
®=®= 
attributeCount
®=®= )
]
®=®=) *
=
®=®=+ ,
ConvertToFloat
®=®=- ;
(
®=®=; <
chars
®=®=< A
,
®=®=A B

startIndex
®=®=C M
,
®=®=M N
length
®=®=O U
,
®=®=U V
out
®=®=W Z
endIndex
®=®=[ c
)
®=®=c d
;
®=®=d e
length
™=™= 
-=
™=™= 
(
™=™= 
endIndex
™=™= #
-
™=™=$ %

startIndex
™=™=& 0
)
™=™=0 1
+
™=™=2 3
$num
™=™=4 5
;
™=™=5 6

startIndex
´=´= 
=
´=´= 
endIndex
´=´= %
+
´=´=& '
$num
´=´=( )
;
´=´=) *
attributeCount
≠=≠= 
+=
≠=≠= !
$num
≠=≠=" #
;
≠=≠=# $
}
Æ=Æ= 
return
∞=∞= 
attributeCount
∞=∞= !
;
∞=∞=! "
}
±=±= 	
	protected
ª=ª= 
float
ª=ª= 
ConvertToFloat
ª=ª= &
(
ª=ª=& '
char
ª=ª=' +
[
ª=ª=+ ,
]
ª=ª=, -
chars
ª=ª=. 3
,
ª=ª=3 4
int
ª=ª=5 8

startIndex
ª=ª=9 C
,
ª=ª=C D
int
ª=ª=E H
length
ª=ª=I O
)
ª=ª=O P
{
º=º= 	
int
Ω=Ω= 
	lastIndex
Ω=Ω= 
;
Ω=Ω= 
return
ø=ø= 
ConvertToFloat
ø=ø= !
(
ø=ø=! "
chars
ø=ø=" '
,
ø=ø=' (

startIndex
ø=ø=) 3
,
ø=ø=3 4
length
ø=ø=5 ;
,
ø=ø=; <
out
ø=ø== @
	lastIndex
ø=ø=A J
)
ø=ø=J K
;
ø=ø=K L
}
¿=¿= 	
	protected
À=À= 
float
À=À= 
ConvertToFloat
À=À= &
(
À=À=& '
char
À=À=' +
[
À=À=+ ,
]
À=À=, -
chars
À=À=. 3
,
À=À=3 4
int
À=À=5 8

startIndex
À=À=9 C
,
À=À=C D
int
À=À=E H
length
À=À=I O
,
À=À=O P
out
À=À=Q T
int
À=À=U X
	lastIndex
À=À=Y b
)
À=À=b c
{
Ã=Ã= 	
if
Õ=Õ= 
(
Õ=Õ= 

startIndex
Õ=Õ= 
==
Õ=Õ= 
$num
Õ=Õ= 
)
Õ=Õ=  
{
Œ=Œ= 
	lastIndex
œ=œ= 
=
œ=œ= 
$num
œ=œ= 
;
œ=œ= 
return
–=–= 
Int16
–=–= 
.
–=–= 
MinValue
–=–= %
;
–=–=% &
}
—=—= 
int
”=”= 
endIndex
”=”= 
=
”=”= 

startIndex
”=”= %
+
”=”=& '
length
”=”=( .
;
”=”=. /
bool
’=’= 
isIntegerValue
’=’= 
=
’=’=  !
true
’=’=" &
;
’=’=& '
float
÷=÷= $
decimalPointMultiplier
÷=÷= (
=
÷=÷=) *
$num
÷=÷=+ ,
;
÷=÷=, -
int
Ÿ=Ÿ= !
valueSignMultiplier
Ÿ=Ÿ= #
=
Ÿ=Ÿ=$ %
$num
Ÿ=Ÿ=& '
;
Ÿ=Ÿ=' (
if
⁄=⁄= 
(
⁄=⁄= 
chars
⁄=⁄= 
[
⁄=⁄= 

startIndex
⁄=⁄=  
]
⁄=⁄=  !
==
⁄=⁄=" $
$char
⁄=⁄=% (
)
⁄=⁄=( )
{
€=€= !
valueSignMultiplier
‹=‹= #
=
‹=‹=$ %
$num
‹=‹=& '
;
‹=‹=' (

startIndex
›=›= 
+=
›=›= 
$num
›=›= 
;
›=›=  
}
ﬁ=ﬁ= 
else
ﬂ=ﬂ= 
if
ﬂ=ﬂ= 
(
ﬂ=ﬂ= 
chars
ﬂ=ﬂ= 
[
ﬂ=ﬂ= 

startIndex
ﬂ=ﬂ= %
]
ﬂ=ﬂ=% &
==
ﬂ=ﬂ=' )
$char
ﬂ=ﬂ=* -
)
ﬂ=ﬂ=- .
{
‡=‡= !
valueSignMultiplier
·=·= #
=
·=·=$ %
-
·=·=& '
$num
·=·=' (
;
·=·=( )

startIndex
‚=‚= 
+=
‚=‚= 
$num
‚=‚= 
;
‚=‚=  
}
„=„= 
float
Â=Â= 
value
Â=Â= 
=
Â=Â= 
$num
Â=Â= 
;
Â=Â= 
for
Á=Á= 
(
Á=Á= 
int
Á=Á= 
i
Á=Á= 
=
Á=Á= 

startIndex
Á=Á= #
;
Á=Á=# $
i
Á=Á=% &
<
Á=Á=' (
endIndex
Á=Á=) 1
;
Á=Á=1 2
i
Á=Á=3 4
++
Á=Á=4 6
)
Á=Á=6 7
{
Ë=Ë= 
uint
È=È= 
c
È=È= 
=
È=È= 
chars
È=È= 
[
È=È= 
i
È=È=  
]
È=È=  !
;
È=È=! "
if
Î=Î= 
(
Î=Î= 
c
Î=Î= 
>=
Î=Î= 
$char
Î=Î= 
&&
Î=Î= 
c
Î=Î=  !
<=
Î=Î=" $
$char
Î=Î=% (
||
Î=Î=) +
c
Î=Î=, -
==
Î=Î=. 0
$char
Î=Î=1 4
)
Î=Î=4 5
{
Ï=Ï= 
if
Ì=Ì= 
(
Ì=Ì= 
c
Ì=Ì= 
==
Ì=Ì= 
$char
Ì=Ì=  
)
Ì=Ì=  !
{
Ó=Ó= 
isIntegerValue
Ô=Ô= &
=
Ô=Ô=' (
false
Ô=Ô=) .
;
Ô=Ô=. /$
decimalPointMultiplier
== .
=
==/ 0
$num
==1 5
;
==5 6
continue
Ò=Ò=  
;
Ò=Ò=  !
}
Ú=Ú= 
if
ı=ı= 
(
ı=ı= 
isIntegerValue
ı=ı= &
)
ı=ı=& '
value
ˆ=ˆ= 
=
ˆ=ˆ= 
value
ˆ=ˆ=  %
*
ˆ=ˆ=& '
$num
ˆ=ˆ=( *
+
ˆ=ˆ=+ ,
(
ˆ=ˆ=- .
c
ˆ=ˆ=. /
-
ˆ=ˆ=0 1
$num
ˆ=ˆ=2 4
)
ˆ=ˆ=4 5
*
ˆ=ˆ=6 7!
valueSignMultiplier
ˆ=ˆ=8 K
;
ˆ=ˆ=K L
else
˜=˜= 
{
¯=¯= 
value
˘=˘= 
=
˘=˘= 
value
˘=˘=  %
+
˘=˘=& '
(
˘=˘=( )
c
˘=˘=) *
-
˘=˘=+ ,
$num
˘=˘=- /
)
˘=˘=/ 0
*
˘=˘=1 2$
decimalPointMultiplier
˘=˘=3 I
*
˘=˘=J K!
valueSignMultiplier
˘=˘=L _
;
˘=˘=_ `$
decimalPointMultiplier
˙=˙= .
*=
˙=˙=/ 1
$num
˙=˙=2 6
;
˙=˙=6 7
}
˚=˚= 
continue
˝=˝= 
;
˝=˝= 
}
˛=˛= 
else
ˇ=ˇ= 
if
ˇ=ˇ= 
(
ˇ=ˇ= 
c
ˇ=ˇ= 
==
ˇ=ˇ= 
$char
ˇ=ˇ= !
)
ˇ=ˇ=! "
{
Ä>Ä> 
if
Å>Å> 
(
Å>Å> 
i
Å>Å> 
+
Å>Å> 
$num
Å>Å> 
<
Å>Å> 
endIndex
Å>Å>  (
&&
Å>Å>) +
chars
Å>Å>, 1
[
Å>Å>1 2
i
Å>Å>2 3
+
Å>Å>4 5
$num
Å>Å>6 7
]
Å>Å>7 8
==
Å>Å>9 ;
$char
Å>Å>< ?
)
Å>Å>? @
	lastIndex
Ç>Ç> !
=
Ç>Ç>" #
i
Ç>Ç>$ %
+
Ç>Ç>& '
$num
Ç>Ç>( )
;
Ç>Ç>) *
else
É>É> 
	lastIndex
Ñ>Ñ> !
=
Ñ>Ñ>" #
i
Ñ>Ñ>$ %
;
Ñ>Ñ>% &
if
á>á> 
(
á>á> 
value
á>á> 
>
á>á> 
$num
á>á>  %
)
á>á>% &
return
à>à> 
Int16
à>à> $
.
à>à>$ %
MinValue
à>à>% -
;
à>à>- .
return
ä>ä> 
value
ä>ä>  
;
ä>ä>  !
}
ã>ã> 
}
å>å> 
	lastIndex
é>é> 
=
é>é> 
endIndex
é>é>  
;
é>é>  !
if
ë>ë> 
(
ë>ë> 
value
ë>ë> 
>
ë>ë> 
$num
ë>ë> 
)
ë>ë> 
return
í>í> 
Int16
í>í> 
.
í>í> 
MinValue
í>í> %
;
í>í>% &
return
î>î> 
value
î>î> 
;
î>î> 
}
ï>ï> 	
	protected
ü>ü> 
bool
ü>ü> 
ValidateHtmlTag
ü>ü> &
(
ü>ü>& '
UnicodeChar
ü>ü>' 2
[
ü>ü>2 3
]
ü>ü>3 4
chars
ü>ü>5 :
,
ü>ü>: ;
int
ü>ü>< ?

startIndex
ü>ü>@ J
,
ü>ü>J K
out
ü>ü>L O
int
ü>ü>P S
endIndex
ü>ü>T \
)
ü>ü>\ ]
{
†>†> 	
int
°>°> 
tagCharCount
°>°> 
=
°>°> 
$num
°>°>  
;
°>°>  !
byte
¢>¢> 
attributeFlag
¢>¢> 
=
¢>¢>  
$num
¢>¢>! "
;
¢>¢>" #
int
§>§> 
attributeIndex
§>§> 
=
§>§>  
$num
§>§>! "
;
§>§>" #
m_xmlAttribute
•>•> 
[
•>•> 
attributeIndex
•>•> )
]
•>•>) *
.
•>•>* +
nameHashCode
•>•>+ 7
=
•>•>8 9
$num
•>•>: ;
;
•>•>; <
m_xmlAttribute
¶>¶> 
[
¶>¶> 
attributeIndex
¶>¶> )
]
¶>¶>) *
.
¶>¶>* +
valueHashCode
¶>¶>+ 8
=
¶>¶>9 :
$num
¶>¶>; <
;
¶>¶>< =
m_xmlAttribute
ß>ß> 
[
ß>ß> 
attributeIndex
ß>ß> )
]
ß>ß>) *
.
ß>ß>* +
valueStartIndex
ß>ß>+ :
=
ß>ß>; <
$num
ß>ß>= >
;
ß>ß>> ?
m_xmlAttribute
®>®> 
[
®>®> 
attributeIndex
®>®> )
]
®>®>) *
.
®>®>* +
valueLength
®>®>+ 6
=
®>®>7 8
$num
®>®>9 :
;
®>®>: ;
TagValueType
©>©> 
tagValueType
©>©> %
=
©>©>& '
m_xmlAttribute
©>©>( 6
[
©>©>6 7
attributeIndex
©>©>7 E
]
©>©>E F
.
©>©>F G
	valueType
©>©>G P
=
©>©>Q R
TagValueType
©>©>S _
.
©>©>_ `
None
©>©>` d
;
©>©>d e
TagUnitType
™>™> 
tagUnitType
™>™> #
=
™>™>$ %
m_xmlAttribute
™>™>& 4
[
™>™>4 5
attributeIndex
™>™>5 C
]
™>™>C D
.
™>™>D E
unitType
™>™>E M
=
™>™>N O
TagUnitType
™>™>P [
.
™>™>[ \
Pixels
™>™>\ b
;
™>™>b c
m_xmlAttribute
≠>≠> 
[
≠>≠> 
$num
≠>≠> 
]
≠>≠> 
.
≠>≠> 
nameHashCode
≠>≠> *
=
≠>≠>+ ,
$num
≠>≠>- .
;
≠>≠>. /
m_xmlAttribute
Æ>Æ> 
[
Æ>Æ> 
$num
Æ>Æ> 
]
Æ>Æ> 
.
Æ>Æ> 
nameHashCode
Æ>Æ> *
=
Æ>Æ>+ ,
$num
Æ>Æ>- .
;
Æ>Æ>. /
m_xmlAttribute
Ø>Ø> 
[
Ø>Ø> 
$num
Ø>Ø> 
]
Ø>Ø> 
.
Ø>Ø> 
nameHashCode
Ø>Ø> *
=
Ø>Ø>+ ,
$num
Ø>Ø>- .
;
Ø>Ø>. /
m_xmlAttribute
∞>∞> 
[
∞>∞> 
$num
∞>∞> 
]
∞>∞> 
.
∞>∞> 
nameHashCode
∞>∞> *
=
∞>∞>+ ,
$num
∞>∞>- .
;
∞>∞>. /
endIndex
≤>≤> 
=
≤>≤> 

startIndex
≤>≤> !
;
≤>≤>! "
bool
≥>≥> 
isTagSet
≥>≥> 
=
≥>≥> 
false
≥>≥> !
;
≥>≥>! "
bool
¥>¥> 
isValidHtmlTag
¥>¥> 
=
¥>¥>  !
false
¥>¥>" '
;
¥>¥>' (
for
∂>∂> 
(
∂>∂> 
int
∂>∂> 
i
∂>∂> 
=
∂>∂> 

startIndex
∂>∂> #
;
∂>∂># $
i
∂>∂>% &
<
∂>∂>' (
chars
∂>∂>) .
.
∂>∂>. /
Length
∂>∂>/ 5
&&
∂>∂>6 8
chars
∂>∂>9 >
[
∂>∂>> ?
i
∂>∂>? @
]
∂>∂>@ A
.
∂>∂>A B
unicode
∂>∂>B I
!=
∂>∂>J L
$num
∂>∂>M N
&&
∂>∂>O Q
tagCharCount
∂>∂>R ^
<
∂>∂>_ `
	m_htmlTag
∂>∂>a j
.
∂>∂>j k
Length
∂>∂>k q
&&
∂>∂>r t
chars
∂>∂>u z
[
∂>∂>z {
i
∂>∂>{ |
]
∂>∂>| }
.
∂>∂>} ~
unicode∂>∂>~ Ö
!=∂>∂>Ü à
$char∂>∂>â å
;∂>∂>å ç
i∂>∂>é è
++∂>∂>è ë
)∂>∂>ë í
{
∑>∑> 
int
∏>∏> 
unicode
∏>∏> 
=
∏>∏> 
chars
∏>∏> #
[
∏>∏># $
i
∏>∏>$ %
]
∏>∏>% &
.
∏>∏>& '
unicode
∏>∏>' .
;
∏>∏>. /
if
∫>∫> 
(
∫>∫> 
unicode
∫>∫> 
==
∫>∫> 
$char
∫>∫> "
)
∫>∫>" #
{
ª>ª> 
isValidHtmlTag
º>º> "
=
º>º># $
true
º>º>% )
;
º>º>) *
endIndex
Ω>Ω> 
=
Ω>Ω> 
i
Ω>Ω>  
;
Ω>Ω>  !
	m_htmlTag
æ>æ> 
[
æ>æ> 
tagCharCount
æ>æ> *
]
æ>æ>* +
=
æ>æ>, -
(
æ>æ>. /
char
æ>æ>/ 3
)
æ>æ>3 4
$num
æ>æ>4 5
;
æ>æ>5 6
break
ø>ø> 
;
ø>ø> 
}
¿>¿> 
	m_htmlTag
¬>¬> 
[
¬>¬> 
tagCharCount
¬>¬> &
]
¬>¬>& '
=
¬>¬>( )
(
¬>¬>* +
char
¬>¬>+ /
)
¬>¬>/ 0
unicode
¬>¬>0 7
;
¬>¬>7 8
tagCharCount
√>√> 
+=
√>√> 
$num
√>√>  !
;
√>√>! "
if
≈>≈> 
(
≈>≈> 
attributeFlag
≈>≈> !
==
≈>≈>" $
$num
≈>≈>% &
)
≈>≈>& '
{
∆>∆> 
if
«>«> 
(
«>«> 
tagValueType
«>«> $
==
«>«>% '
TagValueType
«>«>( 4
.
«>«>4 5
None
«>«>5 9
)
«>«>9 :
{
»>»> 
if
 > > 
(
 > > 
unicode
 > > #
==
 > >$ &
$char
 > >' *
||
 > >+ -
unicode
 > >. 5
==
 > >6 8
$char
 > >9 <
||
 > >= ?
unicode
 > >@ G
==
 > >H J
$char
 > >K N
||
 > >O Q
(
 > >R S
unicode
 > >S Z
>=
 > >[ ]
$char
 > >^ a
&&
 > >b d
unicode
 > >e l
<=
 > >m o
$char
 > >p s
)
 > >s t
)
 > >t u
{
À>À> 
tagUnitType
Ã>Ã> '
=
Ã>Ã>( )
TagUnitType
Ã>Ã>* 5
.
Ã>Ã>5 6
Pixels
Ã>Ã>6 <
;
Ã>Ã>< =
tagValueType
Õ>Õ> (
=
Õ>Õ>) *
m_xmlAttribute
Õ>Õ>+ 9
[
Õ>Õ>9 :
attributeIndex
Õ>Õ>: H
]
Õ>Õ>H I
.
Õ>Õ>I J
	valueType
Õ>Õ>J S
=
Õ>Õ>T U
TagValueType
Õ>Õ>V b
.
Õ>Õ>b c
NumericalValue
Õ>Õ>c q
;
Õ>Õ>q r
m_xmlAttribute
Œ>Œ> *
[
Œ>Œ>* +
attributeIndex
Œ>Œ>+ 9
]
Œ>Œ>9 :
.
Œ>Œ>: ;
valueStartIndex
Œ>Œ>; J
=
Œ>Œ>K L
tagCharCount
Œ>Œ>M Y
-
Œ>Œ>Z [
$num
Œ>Œ>\ ]
;
Œ>Œ>] ^
m_xmlAttribute
œ>œ> *
[
œ>œ>* +
attributeIndex
œ>œ>+ 9
]
œ>œ>9 :
.
œ>œ>: ;
valueLength
œ>œ>; F
+=
œ>œ>G I
$num
œ>œ>J K
;
œ>œ>K L
}
–>–> 
else
—>—> 
if
—>—> 
(
—>—>  !
unicode
—>—>! (
==
—>—>) +
$char
—>—>, /
)
—>—>/ 0
{
“>“> 
tagUnitType
”>”> '
=
”>”>( )
TagUnitType
”>”>* 5
.
”>”>5 6
Pixels
”>”>6 <
;
”>”>< =
tagValueType
‘>‘> (
=
‘>‘>) *
m_xmlAttribute
‘>‘>+ 9
[
‘>‘>9 :
attributeIndex
‘>‘>: H
]
‘>‘>H I
.
‘>‘>I J
	valueType
‘>‘>J S
=
‘>‘>T U
TagValueType
‘>‘>V b
.
‘>‘>b c

ColorValue
‘>‘>c m
;
‘>‘>m n
m_xmlAttribute
’>’> *
[
’>’>* +
attributeIndex
’>’>+ 9
]
’>’>9 :
.
’>’>: ;
valueStartIndex
’>’>; J
=
’>’>K L
tagCharCount
’>’>M Y
-
’>’>Z [
$num
’>’>\ ]
;
’>’>] ^
m_xmlAttribute
÷>÷> *
[
÷>÷>* +
attributeIndex
÷>÷>+ 9
]
÷>÷>9 :
.
÷>÷>: ;
valueLength
÷>÷>; F
+=
÷>÷>G I
$num
÷>÷>J K
;
÷>÷>K L
}
◊>◊> 
else
ÿ>ÿ> 
if
ÿ>ÿ> 
(
ÿ>ÿ>  !
unicode
ÿ>ÿ>! (
==
ÿ>ÿ>) +
$char
ÿ>ÿ>, /
)
ÿ>ÿ>/ 0
{
Ÿ>Ÿ> 
tagUnitType
⁄>⁄> '
=
⁄>⁄>( )
TagUnitType
⁄>⁄>* 5
.
⁄>⁄>5 6
Pixels
⁄>⁄>6 <
;
⁄>⁄>< =
tagValueType
€>€> (
=
€>€>) *
m_xmlAttribute
€>€>+ 9
[
€>€>9 :
attributeIndex
€>€>: H
]
€>€>H I
.
€>€>I J
	valueType
€>€>J S
=
€>€>T U
TagValueType
€>€>V b
.
€>€>b c
StringValue
€>€>c n
;
€>€>n o
m_xmlAttribute
‹>‹> *
[
‹>‹>* +
attributeIndex
‹>‹>+ 9
]
‹>‹>9 :
.
‹>‹>: ;
valueStartIndex
‹>‹>; J
=
‹>‹>K L
tagCharCount
‹>‹>M Y
;
‹>‹>Y Z
}
›>›> 
else
ﬁ>ﬁ> 
{
ﬂ>ﬂ> 
tagUnitType
‡>‡> '
=
‡>‡>( )
TagUnitType
‡>‡>* 5
.
‡>‡>5 6
Pixels
‡>‡>6 <
;
‡>‡>< =
tagValueType
·>·> (
=
·>·>) *
m_xmlAttribute
·>·>+ 9
[
·>·>9 :
attributeIndex
·>·>: H
]
·>·>H I
.
·>·>I J
	valueType
·>·>J S
=
·>·>T U
TagValueType
·>·>V b
.
·>·>b c
StringValue
·>·>c n
;
·>·>n o
m_xmlAttribute
‚>‚> *
[
‚>‚>* +
attributeIndex
‚>‚>+ 9
]
‚>‚>9 :
.
‚>‚>: ;
valueStartIndex
‚>‚>; J
=
‚>‚>K L
tagCharCount
‚>‚>M Y
-
‚>‚>Z [
$num
‚>‚>\ ]
;
‚>‚>] ^
m_xmlAttribute
„>„> *
[
„>„>* +
attributeIndex
„>„>+ 9
]
„>„>9 :
.
„>„>: ;
valueHashCode
„>„>; H
=
„>„>I J
(
„>„>K L
m_xmlAttribute
„>„>L Z
[
„>„>Z [
attributeIndex
„>„>[ i
]
„>„>i j
.
„>„>j k
valueHashCode
„>„>k x
<<
„>„>y {
$num
„>„>| }
)
„>„>} ~
+„>„> Ä
m_xmlAttribute„>„>Å è
[„>„>è ê
attributeIndex„>„>ê û
]„>„>û ü
.„>„>ü †
valueHashCode„>„>† ≠
^„>„>Æ Ø
unicode„>„>∞ ∑
;„>„>∑ ∏
m_xmlAttribute
‰>‰> *
[
‰>‰>* +
attributeIndex
‰>‰>+ 9
]
‰>‰>9 :
.
‰>‰>: ;
valueLength
‰>‰>; F
+=
‰>‰>G I
$num
‰>‰>J K
;
‰>‰>K L
}
Â>Â> 
}
Ê>Ê> 
else
Á>Á> 
{
Ë>Ë> 
if
È>È> 
(
È>È> 
tagValueType
È>È> (
==
È>È>) +
TagValueType
È>È>, 8
.
È>È>8 9
NumericalValue
È>È>9 G
)
È>È>G H
{
Í>Í> 
if
Ï>Ï> 
(
Ï>Ï>  
unicode
Ï>Ï>  '
==
Ï>Ï>( *
$char
Ï>Ï>+ .
||
Ï>Ï>/ 1
unicode
Ï>Ï>2 9
==
Ï>Ï>: <
$char
Ï>Ï>= @
||
Ï>Ï>A C
unicode
Ï>Ï>D K
==
Ï>Ï>L N
$char
Ï>Ï>O R
||
Ï>Ï>S U
unicode
Ï>Ï>V ]
==
Ï>Ï>^ `
$char
Ï>Ï>a d
)
Ï>Ï>d e
{
Ì>Ì> 
attributeFlag
Ó>Ó>  -
=
Ó>Ó>. /
$num
Ó>Ó>0 1
;
Ó>Ó>1 2
tagValueType
Ô>Ô>  ,
=
Ô>Ô>- .
TagValueType
Ô>Ô>/ ;
.
Ô>Ô>; <
None
Ô>Ô>< @
;
Ô>Ô>@ A
switch
Ò>Ò>  &
(
Ò>Ò>' (
unicode
Ò>Ò>( /
)
Ò>Ò>/ 0
{
Ú>Ú>  !
case
Û>Û>$ (
$char
Û>Û>) ,
:
Û>Û>, -
m_xmlAttribute
Ù>Ù>( 6
[
Ù>Ù>6 7
attributeIndex
Ù>Ù>7 E
]
Ù>Ù>E F
.
Ù>Ù>F G
unitType
Ù>Ù>G O
=
Ù>Ù>P Q
tagUnitType
Ù>Ù>R ]
=
Ù>Ù>^ _
TagUnitType
Ù>Ù>` k
.
Ù>Ù>k l
	FontUnits
Ù>Ù>l u
;
Ù>Ù>u v
break
ı>ı>( -
;
ı>ı>- .
case
ˆ>ˆ>$ (
$char
ˆ>ˆ>) ,
:
ˆ>ˆ>, -
m_xmlAttribute
˜>˜>( 6
[
˜>˜>6 7
attributeIndex
˜>˜>7 E
]
˜>˜>E F
.
˜>˜>F G
unitType
˜>˜>G O
=
˜>˜>P Q
tagUnitType
˜>˜>R ]
=
˜>˜>^ _
TagUnitType
˜>˜>` k
.
˜>˜>k l

Percentage
˜>˜>l v
;
˜>˜>v w
break
¯>¯>( -
;
¯>¯>- .
default
˘>˘>$ +
:
˘>˘>+ ,
m_xmlAttribute
˙>˙>( 6
[
˙>˙>6 7
attributeIndex
˙>˙>7 E
]
˙>˙>E F
.
˙>˙>F G
unitType
˙>˙>G O
=
˙>˙>P Q
tagUnitType
˙>˙>R ]
=
˙>˙>^ _
TagUnitType
˙>˙>` k
.
˙>˙>k l
Pixels
˙>˙>l r
;
˙>˙>r s
break
˚>˚>( -
;
˚>˚>- .
}
¸>¸>  !
attributeIndex
˛>˛>  .
+=
˛>˛>/ 1
$num
˛>˛>2 3
;
˛>˛>3 4
m_xmlAttribute
ˇ>ˇ>  .
[
ˇ>ˇ>. /
attributeIndex
ˇ>ˇ>/ =
]
ˇ>ˇ>= >
.
ˇ>ˇ>> ?
nameHashCode
ˇ>ˇ>? K
=
ˇ>ˇ>L M
$num
ˇ>ˇ>N O
;
ˇ>ˇ>O P
m_xmlAttribute
Ä?Ä?  .
[
Ä?Ä?. /
attributeIndex
Ä?Ä?/ =
]
Ä?Ä?= >
.
Ä?Ä?> ?
valueHashCode
Ä?Ä?? L
=
Ä?Ä?M N
$num
Ä?Ä?O P
;
Ä?Ä?P Q
m_xmlAttribute
Å?Å?  .
[
Å?Å?. /
attributeIndex
Å?Å?/ =
]
Å?Å?= >
.
Å?Å?> ?
	valueType
Å?Å?? H
=
Å?Å?I J
TagValueType
Å?Å?K W
.
Å?Å?W X
None
Å?Å?X \
;
Å?Å?\ ]
m_xmlAttribute
Ç?Ç?  .
[
Ç?Ç?. /
attributeIndex
Ç?Ç?/ =
]
Ç?Ç?= >
.
Ç?Ç?> ?
unitType
Ç?Ç?? G
=
Ç?Ç?H I
TagUnitType
Ç?Ç?J U
.
Ç?Ç?U V
Pixels
Ç?Ç?V \
;
Ç?Ç?\ ]
m_xmlAttribute
É?É?  .
[
É?É?. /
attributeIndex
É?É?/ =
]
É?É?= >
.
É?É?> ?
valueStartIndex
É?É?? N
=
É?É?O P
$num
É?É?Q R
;
É?É?R S
m_xmlAttribute
Ñ?Ñ?  .
[
Ñ?Ñ?. /
attributeIndex
Ñ?Ñ?/ =
]
Ñ?Ñ?= >
.
Ñ?Ñ?> ?
valueLength
Ñ?Ñ?? J
=
Ñ?Ñ?K L
$num
Ñ?Ñ?M N
;
Ñ?Ñ?N O
}
Ü?Ü? 
else
á?á?  
if
á?á?! #
(
á?á?$ %
attributeFlag
á?á?% 2
!=
á?á?3 5
$num
á?á?6 7
)
á?á?7 8
{
à?à? 
m_xmlAttribute
â?â?  .
[
â?â?. /
attributeIndex
â?â?/ =
]
â?â?= >
.
â?â?> ?
valueLength
â?â?? J
+=
â?â?K M
$num
â?â?N O
;
â?â?O P
}
ä?ä? 
}
ã?ã? 
else
å?å? 
if
å?å? 
(
å?å?  !
tagValueType
å?å?! -
==
å?å?. 0
TagValueType
å?å?1 =
.
å?å?= >

ColorValue
å?å?> H
)
å?å?H I
{
ç?ç? 
if
é?é? 
(
é?é?  
unicode
é?é?  '
!=
é?é?( *
$char
é?é?+ .
)
é?é?. /
{
è?è? 
m_xmlAttribute
ê?ê?  .
[
ê?ê?. /
attributeIndex
ê?ê?/ =
]
ê?ê?= >
.
ê?ê?> ?
valueLength
ê?ê?? J
+=
ê?ê?K M
$num
ê?ê?N O
;
ê?ê?O P
}
ë?ë? 
else
í?í?  
{
ì?ì? 
attributeFlag
î?î?  -
=
î?î?. /
$num
î?î?0 1
;
î?î?1 2
tagValueType
ï?ï?  ,
=
ï?ï?- .
TagValueType
ï?ï?/ ;
.
ï?ï?; <
None
ï?ï?< @
;
ï?ï?@ A
tagUnitType
ñ?ñ?  +
=
ñ?ñ?, -
TagUnitType
ñ?ñ?. 9
.
ñ?ñ?9 :
Pixels
ñ?ñ?: @
;
ñ?ñ?@ A
attributeIndex
ó?ó?  .
+=
ó?ó?/ 1
$num
ó?ó?2 3
;
ó?ó?3 4
m_xmlAttribute
ò?ò?  .
[
ò?ò?. /
attributeIndex
ò?ò?/ =
]
ò?ò?= >
.
ò?ò?> ?
nameHashCode
ò?ò?? K
=
ò?ò?L M
$num
ò?ò?N O
;
ò?ò?O P
m_xmlAttribute
ô?ô?  .
[
ô?ô?. /
attributeIndex
ô?ô?/ =
]
ô?ô?= >
.
ô?ô?> ?
	valueType
ô?ô?? H
=
ô?ô?I J
TagValueType
ô?ô?K W
.
ô?ô?W X
None
ô?ô?X \
;
ô?ô?\ ]
m_xmlAttribute
ö?ö?  .
[
ö?ö?. /
attributeIndex
ö?ö?/ =
]
ö?ö?= >
.
ö?ö?> ?
unitType
ö?ö?? G
=
ö?ö?H I
TagUnitType
ö?ö?J U
.
ö?ö?U V
Pixels
ö?ö?V \
;
ö?ö?\ ]
m_xmlAttribute
õ?õ?  .
[
õ?õ?. /
attributeIndex
õ?õ?/ =
]
õ?õ?= >
.
õ?õ?> ?
valueHashCode
õ?õ?? L
=
õ?õ?M N
$num
õ?õ?O P
;
õ?õ?P Q
m_xmlAttribute
ú?ú?  .
[
ú?ú?. /
attributeIndex
ú?ú?/ =
]
ú?ú?= >
.
ú?ú?> ?
valueStartIndex
ú?ú?? N
=
ú?ú?O P
$num
ú?ú?Q R
;
ú?ú?R S
m_xmlAttribute
ù?ù?  .
[
ù?ù?. /
attributeIndex
ù?ù?/ =
]
ù?ù?= >
.
ù?ù?> ?
valueLength
ù?ù?? J
=
ù?ù?K L
$num
ù?ù?M N
;
ù?ù?N O
}
û?û? 
}
ü?ü? 
else
†?†? 
if
†?†? 
(
†?†?  !
tagValueType
†?†?! -
==
†?†?. 0
TagValueType
†?†?1 =
.
†?†?= >
StringValue
†?†?> I
)
†?†?I J
{
°?°? 
if
£?£? 
(
£?£?  
unicode
£?£?  '
!=
£?£?( *
$char
£?£?+ .
)
£?£?. /
{
§?§? 
m_xmlAttribute
•?•?  .
[
•?•?. /
attributeIndex
•?•?/ =
]
•?•?= >
.
•?•?> ?
valueHashCode
•?•?? L
=
•?•?M N
(
•?•?O P
m_xmlAttribute
•?•?P ^
[
•?•?^ _
attributeIndex
•?•?_ m
]
•?•?m n
.
•?•?n o
valueHashCode
•?•?o |
<<
•?•?} 
$num•?•?Ä Å
)•?•?Å Ç
+•?•?É Ñ
m_xmlAttribute•?•?Ö ì
[•?•?ì î
attributeIndex•?•?î ¢
]•?•?¢ £
.•?•?£ §
valueHashCode•?•?§ ±
^•?•?≤ ≥
unicode•?•?¥ ª
;•?•?ª º
m_xmlAttribute
¶?¶?  .
[
¶?¶?. /
attributeIndex
¶?¶?/ =
]
¶?¶?= >
.
¶?¶?> ?
valueLength
¶?¶?? J
+=
¶?¶?K M
$num
¶?¶?N O
;
¶?¶?O P
}
ß?ß? 
else
®?®?  
{
©?©? 
attributeFlag
™?™?  -
=
™?™?. /
$num
™?™?0 1
;
™?™?1 2
tagValueType
´?´?  ,
=
´?´?- .
TagValueType
´?´?/ ;
.
´?´?; <
None
´?´?< @
;
´?´?@ A
tagUnitType
¨?¨?  +
=
¨?¨?, -
TagUnitType
¨?¨?. 9
.
¨?¨?9 :
Pixels
¨?¨?: @
;
¨?¨?@ A
attributeIndex
≠?≠?  .
+=
≠?≠?/ 1
$num
≠?≠?2 3
;
≠?≠?3 4
m_xmlAttribute
Æ?Æ?  .
[
Æ?Æ?. /
attributeIndex
Æ?Æ?/ =
]
Æ?Æ?= >
.
Æ?Æ?> ?
nameHashCode
Æ?Æ?? K
=
Æ?Æ?L M
$num
Æ?Æ?N O
;
Æ?Æ?O P
m_xmlAttribute
Ø?Ø?  .
[
Ø?Ø?. /
attributeIndex
Ø?Ø?/ =
]
Ø?Ø?= >
.
Ø?Ø?> ?
	valueType
Ø?Ø?? H
=
Ø?Ø?I J
TagValueType
Ø?Ø?K W
.
Ø?Ø?W X
None
Ø?Ø?X \
;
Ø?Ø?\ ]
m_xmlAttribute
∞?∞?  .
[
∞?∞?. /
attributeIndex
∞?∞?/ =
]
∞?∞?= >
.
∞?∞?> ?
unitType
∞?∞?? G
=
∞?∞?H I
TagUnitType
∞?∞?J U
.
∞?∞?U V
Pixels
∞?∞?V \
;
∞?∞?\ ]
m_xmlAttribute
±?±?  .
[
±?±?. /
attributeIndex
±?±?/ =
]
±?±?= >
.
±?±?> ?
valueHashCode
±?±?? L
=
±?±?M N
$num
±?±?O P
;
±?±?P Q
m_xmlAttribute
≤?≤?  .
[
≤?≤?. /
attributeIndex
≤?≤?/ =
]
≤?≤?= >
.
≤?≤?> ?
valueStartIndex
≤?≤?? N
=
≤?≤?O P
$num
≤?≤?Q R
;
≤?≤?R S
m_xmlAttribute
≥?≥?  .
[
≥?≥?. /
attributeIndex
≥?≥?/ =
]
≥?≥?= >
.
≥?≥?> ?
valueLength
≥?≥?? J
=
≥?≥?K L
$num
≥?≥?M N
;
≥?≥?N O
}
¥?¥? 
}
µ?µ? 
}
∂?∂? 
}
∑?∑? 
if
∫?∫? 
(
∫?∫? 
unicode
∫?∫? 
==
∫?∫? 
$char
∫?∫? "
)
∫?∫?" #
attributeFlag
ª?ª? !
=
ª?ª?" #
$num
ª?ª?$ %
;
ª?ª?% &
if
æ?æ? 
(
æ?æ? 
attributeFlag
æ?æ? !
==
æ?æ?" $
$num
æ?æ?% &
&&
æ?æ?' )
unicode
æ?æ?* 1
==
æ?æ?2 4
$char
æ?æ?5 8
)
æ?æ?8 9
{
ø?ø? 
if
¿?¿? 
(
¿?¿? 
isTagSet
¿?¿?  
)
¿?¿?  !
return
¿?¿?" (
false
¿?¿?) .
;
¿?¿?. /
isTagSet
¬?¬? 
=
¬?¬? 
true
¬?¬? #
;
¬?¬?# $
attributeFlag
√?√? !
=
√?√?" #
$num
√?√?$ %
;
√?√?% &
tagValueType
≈?≈?  
=
≈?≈?! "
TagValueType
≈?≈?# /
.
≈?≈?/ 0
None
≈?≈?0 4
;
≈?≈?4 5
tagUnitType
∆?∆? 
=
∆?∆?  !
TagUnitType
∆?∆?" -
.
∆?∆?- .
Pixels
∆?∆?. 4
;
∆?∆?4 5
attributeIndex
«?«? "
+=
«?«?# %
$num
«?«?& '
;
«?«?' (
m_xmlAttribute
»?»? "
[
»?»?" #
attributeIndex
»?»?# 1
]
»?»?1 2
.
»?»?2 3
nameHashCode
»?»?3 ?
=
»?»?@ A
$num
»?»?B C
;
»?»?C D
m_xmlAttribute
…?…? "
[
…?…?" #
attributeIndex
…?…?# 1
]
…?…?1 2
.
…?…?2 3
	valueType
…?…?3 <
=
…?…?= >
TagValueType
…?…?? K
.
…?…?K L
None
…?…?L P
;
…?…?P Q
m_xmlAttribute
 ? ? "
[
 ? ?" #
attributeIndex
 ? ?# 1
]
 ? ?1 2
.
 ? ?2 3
unitType
 ? ?3 ;
=
 ? ?< =
TagUnitType
 ? ?> I
.
 ? ?I J
Pixels
 ? ?J P
;
 ? ?P Q
m_xmlAttribute
À?À? "
[
À?À?" #
attributeIndex
À?À?# 1
]
À?À?1 2
.
À?À?2 3
valueHashCode
À?À?3 @
=
À?À?A B
$num
À?À?C D
;
À?À?D E
m_xmlAttribute
Ã?Ã? "
[
Ã?Ã?" #
attributeIndex
Ã?Ã?# 1
]
Ã?Ã?1 2
.
Ã?Ã?2 3
valueStartIndex
Ã?Ã?3 B
=
Ã?Ã?C D
$num
Ã?Ã?E F
;
Ã?Ã?F G
m_xmlAttribute
Õ?Õ? "
[
Õ?Õ?" #
attributeIndex
Õ?Õ?# 1
]
Õ?Õ?1 2
.
Õ?Õ?2 3
valueLength
Õ?Õ?3 >
=
Õ?Õ?? @
$num
Õ?Õ?A B
;
Õ?Õ?B C
}
Œ?Œ? 
if
–?–? 
(
–?–? 
attributeFlag
–?–? !
==
–?–?" $
$num
–?–?% &
)
–?–?& '
m_xmlAttribute
—?—? "
[
—?—?" #
attributeIndex
—?—?# 1
]
—?—?1 2
.
—?—?2 3
nameHashCode
—?—?3 ?
=
—?—?@ A
(
—?—?B C
m_xmlAttribute
—?—?C Q
[
—?—?Q R
attributeIndex
—?—?R `
]
—?—?` a
.
—?—?a b
nameHashCode
—?—?b n
<<
—?—?o q
$num
—?—?r s
)
—?—?s t
-
—?—?u v
m_xmlAttribute—?—?w Ö
[—?—?Ö Ü
attributeIndex—?—?Ü î
]—?—?î ï
.—?—?ï ñ
nameHashCode—?—?ñ ¢
+—?—?£ §
unicode—?—?• ¨
;—?—?¨ ≠
if
”?”? 
(
”?”? 
attributeFlag
”?”? !
==
”?”?" $
$num
”?”?% &
&&
”?”?' )
unicode
”?”?* 1
==
”?”?2 4
$char
”?”?5 8
)
”?”?8 9
attributeFlag
‘?‘? !
=
‘?‘?" #
$num
‘?‘?$ %
;
‘?‘?% &
}
÷?÷? 
if
ÿ?ÿ? 
(
ÿ?ÿ? 
!
ÿ?ÿ? 
isValidHtmlTag
ÿ?ÿ? 
)
ÿ?ÿ?  
{
Ÿ?Ÿ? 
return
⁄?⁄? 
false
⁄?⁄? 
;
⁄?⁄? 
}
€?€? 
if
‰?‰? 
(
‰?‰? 
tag_NoParsing
‰?‰? 
&&
‰?‰?  
(
‰?‰?! "
m_xmlAttribute
‰?‰?" 0
[
‰?‰?0 1
$num
‰?‰?1 2
]
‰?‰?2 3
.
‰?‰?3 4
nameHashCode
‰?‰?4 @
!=
‰?‰?A C
$num
‰?‰?D L
&&
‰?‰?M O
m_xmlAttribute
‰?‰?P ^
[
‰?‰?^ _
$num
‰?‰?_ `
]
‰?‰?` a
.
‰?‰?a b
nameHashCode
‰?‰?b n
!=
‰?‰?o q
$num
‰?‰?r z
)
‰?‰?z {
)
‰?‰?{ |
return
Â?Â? 
false
Â?Â? 
;
Â?Â? 
else
Ê?Ê? 
if
Ê?Ê? 
(
Ê?Ê? 
m_xmlAttribute
Ê?Ê? #
[
Ê?Ê?# $
$num
Ê?Ê?$ %
]
Ê?Ê?% &
.
Ê?Ê?& '
nameHashCode
Ê?Ê?' 3
==
Ê?Ê?4 6
$num
Ê?Ê?7 ?
||
Ê?Ê?@ B
m_xmlAttribute
Ê?Ê?C Q
[
Ê?Ê?Q R
$num
Ê?Ê?R S
]
Ê?Ê?S T
.
Ê?Ê?T U
nameHashCode
Ê?Ê?U a
==
Ê?Ê?b d
$num
Ê?Ê?e m
)
Ê?Ê?m n
{
Á?Á? 
tag_NoParsing
Ë?Ë? 
=
Ë?Ë? 
false
Ë?Ë?  %
;
Ë?Ë?% &
return
È?È? 
true
È?È? 
;
È?È? 
}
Í?Í? 
if
Ì?Ì? 
(
Ì?Ì? 
	m_htmlTag
Ì?Ì? 
[
Ì?Ì? 
$num
Ì?Ì? 
]
Ì?Ì? 
==
Ì?Ì? 
$num
Ì?Ì?  "
&&
Ì?Ì?# %
tagCharCount
Ì?Ì?& 2
==
Ì?Ì?3 5
$num
Ì?Ì?6 7
)
Ì?Ì?7 8
{
Ó?Ó? 
m_htmlColor
Ô?Ô? 
=
Ô?Ô? 
HexCharsToColor
Ô?Ô? -
(
Ô?Ô?- .
	m_htmlTag
Ô?Ô?. 7
,
Ô?Ô?7 8
tagCharCount
Ô?Ô?9 E
)
Ô?Ô?E F
;
Ô?Ô?F G
m_colorStack
?? 
.
?? 
Add
??  
(
??  !
m_htmlColor
??! ,
)
??, -
;
??- .
return
Ò?Ò? 
true
Ò?Ò? 
;
Ò?Ò? 
}
Ú?Ú? 
else
Ù?Ù? 
if
Ù?Ù? 
(
Ù?Ù? 
	m_htmlTag
Ù?Ù? 
[
Ù?Ù? 
$num
Ù?Ù?  
]
Ù?Ù?  !
==
Ù?Ù?" $
$num
Ù?Ù?% '
&&
Ù?Ù?( *
tagCharCount
Ù?Ù?+ 7
==
Ù?Ù?8 :
$num
Ù?Ù?; <
)
Ù?Ù?< =
{
ı?ı? 
m_htmlColor
ˆ?ˆ? 
=
ˆ?ˆ? 
HexCharsToColor
ˆ?ˆ? -
(
ˆ?ˆ?- .
	m_htmlTag
ˆ?ˆ?. 7
,
ˆ?ˆ?7 8
tagCharCount
ˆ?ˆ?9 E
)
ˆ?ˆ?E F
;
ˆ?ˆ?F G
m_colorStack
˜?˜? 
.
˜?˜? 
Add
˜?˜?  
(
˜?˜?  !
m_htmlColor
˜?˜?! ,
)
˜?˜?, -
;
˜?˜?- .
return
¯?¯? 
true
¯?¯? 
;
¯?¯? 
}
˘?˘? 
else
˚?˚? 
if
˚?˚? 
(
˚?˚? 
	m_htmlTag
˚?˚? 
[
˚?˚? 
$num
˚?˚?  
]
˚?˚?  !
==
˚?˚?" $
$num
˚?˚?% '
&&
˚?˚?( *
tagCharCount
˚?˚?+ 7
==
˚?˚?8 :
$num
˚?˚?; <
)
˚?˚?< =
{
¸?¸? 
m_htmlColor
˝?˝? 
=
˝?˝? 
HexCharsToColor
˝?˝? -
(
˝?˝?- .
	m_htmlTag
˝?˝?. 7
,
˝?˝?7 8
tagCharCount
˝?˝?9 E
)
˝?˝?E F
;
˝?˝?F G
m_colorStack
˛?˛? 
.
˛?˛? 
Add
˛?˛?  
(
˛?˛?  !
m_htmlColor
˛?˛?! ,
)
˛?˛?, -
;
˛?˛?- .
return
ˇ?ˇ? 
true
ˇ?ˇ? 
;
ˇ?ˇ? 
}
Ä@Ä@ 
else
Ç@Ç@ 
if
Ç@Ç@ 
(
Ç@Ç@ 
	m_htmlTag
Ç@Ç@ 
[
Ç@Ç@ 
$num
Ç@Ç@  
]
Ç@Ç@  !
==
Ç@Ç@" $
$num
Ç@Ç@% '
&&
Ç@Ç@( *
tagCharCount
Ç@Ç@+ 7
==
Ç@Ç@8 :
$num
Ç@Ç@; <
)
Ç@Ç@< =
{
É@É@ 
m_htmlColor
Ñ@Ñ@ 
=
Ñ@Ñ@ 
HexCharsToColor
Ñ@Ñ@ -
(
Ñ@Ñ@- .
	m_htmlTag
Ñ@Ñ@. 7
,
Ñ@Ñ@7 8
tagCharCount
Ñ@Ñ@9 E
)
Ñ@Ñ@E F
;
Ñ@Ñ@F G
m_colorStack
Ö@Ö@ 
.
Ö@Ö@ 
Add
Ö@Ö@  
(
Ö@Ö@  !
m_htmlColor
Ö@Ö@! ,
)
Ö@Ö@, -
;
Ö@Ö@- .
return
Ü@Ü@ 
true
Ü@Ü@ 
;
Ü@Ü@ 
}
á@á@ 
else
à@à@ 
{
â@â@ 
float
ä@ä@ 
value
ä@ä@ 
=
ä@ä@ 
$num
ä@ä@ 
;
ä@ä@  
switch
å@å@ 
(
å@å@ 
m_xmlAttribute
å@å@ &
[
å@å@& '
$num
å@å@' (
]
å@å@( )
.
å@å@) *
nameHashCode
å@å@* 6
)
å@å@6 7
{
ç@ç@ 
case
é@é@ 
$num
é@é@ 
:
é@é@ 
case
è@è@ 
$num
è@è@ 
:
è@è@ !
m_FontStyleInternal
ê@ê@ +
|=
ê@ê@, .

FontStyles
ê@ê@/ 9
.
ê@ê@9 :
Bold
ê@ê@: >
;
ê@ê@> ?
m_fontStyleStack
ë@ë@ (
.
ë@ë@( )
Add
ë@ë@) ,
(
ë@ë@, -

FontStyles
ë@ë@- 7
.
ë@ë@7 8
Bold
ë@ë@8 <
)
ë@ë@< =
;
ë@ë@= >"
m_FontWeightInternal
ì@ì@ ,
=
ì@ì@- .

FontWeight
ì@ì@/ 9
.
ì@ì@9 :
Bold
ì@ì@: >
;
ì@ì@> ?
return
î@î@ 
true
î@î@ #
;
î@î@# $
case
ï@ï@ 
$num
ï@ï@ 
:
ï@ï@ 
case
ñ@ñ@ 
$num
ñ@ñ@ 
:
ñ@ñ@ 
if
ó@ó@ 
(
ó@ó@ 
(
ó@ó@ 
m_fontStyle
ó@ó@ (
&
ó@ó@) *

FontStyles
ó@ó@+ 5
.
ó@ó@5 6
Bold
ó@ó@6 :
)
ó@ó@: ;
!=
ó@ó@< >

FontStyles
ó@ó@? I
.
ó@ó@I J
Bold
ó@ó@J N
)
ó@ó@N O
{
ò@ò@ 
if
ô@ô@ 
(
ô@ô@  
m_fontStyleStack
ô@ô@  0
.
ô@ô@0 1
Remove
ô@ô@1 7
(
ô@ô@7 8

FontStyles
ô@ô@8 B
.
ô@ô@B C
Bold
ô@ô@C G
)
ô@ô@G H
==
ô@ô@I K
$num
ô@ô@L M
)
ô@ô@M N
{
ö@ö@ !
m_FontStyleInternal
õ@õ@  3
&=
õ@õ@4 6
~
õ@õ@7 8

FontStyles
õ@õ@8 B
.
õ@õ@B C
Bold
õ@õ@C G
;
õ@õ@G H"
m_FontWeightInternal
ú@ú@  4
=
ú@ú@5 6
m_FontWeightStack
ú@ú@7 H
.
ú@ú@H I
Peek
ú@ú@I M
(
ú@ú@M N
)
ú@ú@N O
;
ú@ú@O P
}
ù@ù@ 
}
û@û@ 
return
ü@ü@ 
true
ü@ü@ #
;
ü@ü@# $
case
†@†@ 
$num
†@†@ 
:
†@†@ 
case
°@°@ 
$num
°@°@ 
:
°@°@ !
m_FontStyleInternal
¢@¢@ +
|=
¢@¢@, .

FontStyles
¢@¢@/ 9
.
¢@¢@9 :
Italic
¢@¢@: @
;
¢@¢@@ A
m_fontStyleStack
£@£@ (
.
£@£@( )
Add
£@£@) ,
(
£@£@, -

FontStyles
£@£@- 7
.
£@£@7 8
Italic
£@£@8 >
)
£@£@> ?
;
£@£@? @
if
•@•@ 
(
•@•@ 
m_xmlAttribute
•@•@ *
[
•@•@* +
$num
•@•@+ ,
]
•@•@, -
.
•@•@- .
nameHashCode
•@•@. :
==
•@•@; =
$num
•@•@> D
||
•@•@E G
m_xmlAttribute
•@•@H V
[
•@•@V W
$num
•@•@W X
]
•@•@X Y
.
•@•@Y Z
nameHashCode
•@•@Z f
==
•@•@g i
$num
•@•@j p
)
•@•@p q
{
¶@¶@ 
m_ItalicAngle
ß@ß@ )
=
ß@ß@* +
(
ß@ß@, -
int
ß@ß@- 0
)
ß@ß@0 1
ConvertToFloat
ß@ß@1 ?
(
ß@ß@? @
	m_htmlTag
ß@ß@@ I
,
ß@ß@I J
m_xmlAttribute
ß@ß@K Y
[
ß@ß@Y Z
$num
ß@ß@Z [
]
ß@ß@[ \
.
ß@ß@\ ]
valueStartIndex
ß@ß@] l
,
ß@ß@l m
m_xmlAttribute
ß@ß@n |
[
ß@ß@| }
$num
ß@ß@} ~
]
ß@ß@~ 
.ß@ß@ Ä
valueLengthß@ß@Ä ã
)ß@ß@ã å
;ß@ß@å ç
if
™@™@ 
(
™@™@  
m_ItalicAngle
™@™@  -
<
™@™@. /
-
™@™@0 1
$num
™@™@1 4
||
™@™@5 7
m_ItalicAngle
™@™@8 E
>
™@™@F G
$num
™@™@H K
)
™@™@K L
return
™@™@M S
false
™@™@T Y
;
™@™@Y Z
}
´@´@ 
else
¨@¨@ 
m_ItalicAngle
≠@≠@ )
=
≠@≠@* + 
m_currentFontAsset
≠@≠@, >
.
≠@≠@> ?
italicStyle
≠@≠@? J
;
≠@≠@J K 
m_ItalicAngleStack
Ø@Ø@ *
.
Ø@Ø@* +
Add
Ø@Ø@+ .
(
Ø@Ø@. /
m_ItalicAngle
Ø@Ø@/ <
)
Ø@Ø@< =
;
Ø@Ø@= >
return
±@±@ 
true
±@±@ #
;
±@±@# $
case
≤@≤@ 
$num
≤@≤@ 
:
≤@≤@ 
case
≥@≥@ 
$num
≥@≥@ 
:
≥@≥@ 
if
¥@¥@ 
(
¥@¥@ 
(
¥@¥@ 
m_fontStyle
¥@¥@ (
&
¥@¥@) *

FontStyles
¥@¥@+ 5
.
¥@¥@5 6
Italic
¥@¥@6 <
)
¥@¥@< =
!=
¥@¥@> @

FontStyles
¥@¥@A K
.
¥@¥@K L
Italic
¥@¥@L R
)
¥@¥@R S
{
µ@µ@ 
m_ItalicAngle
∂@∂@ )
=
∂@∂@* + 
m_ItalicAngleStack
∂@∂@, >
.
∂@∂@> ?
Remove
∂@∂@? E
(
∂@∂@E F
)
∂@∂@F G
;
∂@∂@G H
if
∏@∏@ 
(
∏@∏@  
m_fontStyleStack
∏@∏@  0
.
∏@∏@0 1
Remove
∏@∏@1 7
(
∏@∏@7 8

FontStyles
∏@∏@8 B
.
∏@∏@B C
Italic
∏@∏@C I
)
∏@∏@I J
==
∏@∏@K M
$num
∏@∏@N O
)
∏@∏@O P!
m_FontStyleInternal
π@π@  3
&=
π@π@4 6
~
π@π@7 8

FontStyles
π@π@8 B
.
π@π@B C
Italic
π@π@C I
;
π@π@I J
}
∫@∫@ 
return
ª@ª@ 
true
ª@ª@ #
;
ª@ª@# $
case
º@º@ 
$num
º@º@ 
:
º@º@ 
case
Ω@Ω@ 
$num
Ω@Ω@ 
:
Ω@Ω@ !
m_FontStyleInternal
æ@æ@ +
|=
æ@æ@, .

FontStyles
æ@æ@/ 9
.
æ@æ@9 :
Strikethrough
æ@æ@: G
;
æ@æ@G H
m_fontStyleStack
ø@ø@ (
.
ø@ø@( )
Add
ø@ø@) ,
(
ø@ø@, -

FontStyles
ø@ø@- 7
.
ø@ø@7 8
Strikethrough
ø@ø@8 E
)
ø@ø@E F
;
ø@ø@F G
if
¡@¡@ 
(
¡@¡@ 
m_xmlAttribute
¡@¡@ *
[
¡@¡@* +
$num
¡@¡@+ ,
]
¡@¡@, -
.
¡@¡@- .
nameHashCode
¡@¡@. :
==
¡@¡@; =
$num
¡@¡@> D
||
¡@¡@E G
m_xmlAttribute
¡@¡@H V
[
¡@¡@V W
$num
¡@¡@W X
]
¡@¡@X Y
.
¡@¡@Y Z
nameHashCode
¡@¡@Z f
==
¡@¡@g i
$num
¡@¡@j p
)
¡@¡@p q
{
¬@¬@ "
m_strikethroughColor
√@√@ 0
=
√@√@1 2
HexCharsToColor
√@√@3 B
(
√@√@B C
	m_htmlTag
√@√@C L
,
√@√@L M
m_xmlAttribute
√@√@N \
[
√@√@\ ]
$num
√@√@] ^
]
√@√@^ _
.
√@√@_ `
valueStartIndex
√@√@` o
,
√@√@o p
m_xmlAttribute
√@√@q 
[√@√@ Ä
$num√@√@Ä Å
]√@√@Å Ç
.√@√@Ç É
valueLength√@√@É é
)√@√@é è
;√@√@è ê"
m_strikethroughColor
ƒ@ƒ@ 0
.
ƒ@ƒ@0 1
a
ƒ@ƒ@1 2
=
ƒ@ƒ@3 4
m_htmlColor
ƒ@ƒ@5 @
.
ƒ@ƒ@@ A
a
ƒ@ƒ@A B
<
ƒ@ƒ@C D"
m_strikethroughColor
ƒ@ƒ@E Y
.
ƒ@ƒ@Y Z
a
ƒ@ƒ@Z [
?
ƒ@ƒ@\ ]
(
ƒ@ƒ@^ _
byte
ƒ@ƒ@_ c
)
ƒ@ƒ@c d
(
ƒ@ƒ@d e
m_htmlColor
ƒ@ƒ@e p
.
ƒ@ƒ@p q
a
ƒ@ƒ@q r
)
ƒ@ƒ@r s
:
ƒ@ƒ@t u
(
ƒ@ƒ@v w
byte
ƒ@ƒ@w {
)
ƒ@ƒ@{ |
(
ƒ@ƒ@| }#
m_strikethroughColorƒ@ƒ@} ë
.ƒ@ƒ@í ì
aƒ@ƒ@ì î
)ƒ@ƒ@î ï
;ƒ@ƒ@ï ñ
}
≈@≈@ 
else
∆@∆@ "
m_strikethroughColor
«@«@ 0
=
«@«@1 2
m_htmlColor
«@«@3 >
;
«@«@> ?'
m_strikethroughColorStack
…@…@ 1
.
…@…@1 2
Add
…@…@2 5
(
…@…@5 6"
m_strikethroughColor
…@…@6 J
)
…@…@J K
;
…@…@K L
return
À@À@ 
true
À@À@ #
;
À@À@# $
case
Ã@Ã@ 
$num
Ã@Ã@ 
:
Ã@Ã@ 
case
Õ@Õ@ 
$num
Õ@Õ@ 
:
Õ@Õ@ 
if
Œ@Œ@ 
(
Œ@Œ@ 
(
Œ@Œ@ 
m_fontStyle
Œ@Œ@ (
&
Œ@Œ@) *

FontStyles
Œ@Œ@+ 5
.
Œ@Œ@5 6
Strikethrough
Œ@Œ@6 C
)
Œ@Œ@C D
!=
Œ@Œ@E G

FontStyles
Œ@Œ@H R
.
Œ@Œ@R S
Strikethrough
Œ@Œ@S `
)
Œ@Œ@` a
{
œ@œ@ 
if
–@–@ 
(
–@–@  
m_fontStyleStack
–@–@  0
.
–@–@0 1
Remove
–@–@1 7
(
–@–@7 8

FontStyles
–@–@8 B
.
–@–@B C
Strikethrough
–@–@C P
)
–@–@P Q
==
–@–@R T
$num
–@–@U V
)
–@–@V W!
m_FontStyleInternal
—@—@  3
&=
—@—@4 6
~
—@—@7 8

FontStyles
—@—@8 B
.
—@—@B C
Strikethrough
—@—@C P
;
—@—@P Q
}
“@“@ "
m_strikethroughColor
‘@‘@ ,
=
‘@‘@- .'
m_strikethroughColorStack
‘@‘@/ H
.
‘@‘@H I
Remove
‘@‘@I O
(
‘@‘@O P
)
‘@‘@P Q
;
‘@‘@Q R
return
’@’@ 
true
’@’@ #
;
’@’@# $
case
÷@÷@ 
$num
÷@÷@ 
:
÷@÷@ 
case
◊@◊@ 
$num
◊@◊@ 
:
◊@◊@ !
m_FontStyleInternal
ÿ@ÿ@ +
|=
ÿ@ÿ@, .

FontStyles
ÿ@ÿ@/ 9
.
ÿ@ÿ@9 :
	Underline
ÿ@ÿ@: C
;
ÿ@ÿ@C D
m_fontStyleStack
Ÿ@Ÿ@ (
.
Ÿ@Ÿ@( )
Add
Ÿ@Ÿ@) ,
(
Ÿ@Ÿ@, -

FontStyles
Ÿ@Ÿ@- 7
.
Ÿ@Ÿ@7 8
	Underline
Ÿ@Ÿ@8 A
)
Ÿ@Ÿ@A B
;
Ÿ@Ÿ@B C
if
€@€@ 
(
€@€@ 
m_xmlAttribute
€@€@ *
[
€@€@* +
$num
€@€@+ ,
]
€@€@, -
.
€@€@- .
nameHashCode
€@€@. :
==
€@€@; =
$num
€@€@> D
||
€@€@E G
m_xmlAttribute
€@€@H V
[
€@€@V W
$num
€@€@W X
]
€@€@X Y
.
€@€@Y Z
nameHashCode
€@€@Z f
==
€@€@g i
$num
€@€@j p
)
€@€@p q
{
‹@‹@ 
m_underlineColor
›@›@ ,
=
›@›@- .
HexCharsToColor
›@›@/ >
(
›@›@> ?
	m_htmlTag
›@›@? H
,
›@›@H I
m_xmlAttribute
›@›@J X
[
›@›@X Y
$num
›@›@Y Z
]
›@›@Z [
.
›@›@[ \
valueStartIndex
›@›@\ k
,
›@›@k l
m_xmlAttribute
›@›@m {
[
›@›@{ |
$num
›@›@| }
]
›@›@} ~
.
›@›@~ 
valueLength›@›@ ä
)›@›@ä ã
;›@›@ã å
m_underlineColor
ﬁ@ﬁ@ ,
.
ﬁ@ﬁ@, -
a
ﬁ@ﬁ@- .
=
ﬁ@ﬁ@/ 0
m_htmlColor
ﬁ@ﬁ@1 <
.
ﬁ@ﬁ@< =
a
ﬁ@ﬁ@= >
<
ﬁ@ﬁ@? @
m_underlineColor
ﬁ@ﬁ@A Q
.
ﬁ@ﬁ@Q R
a
ﬁ@ﬁ@R S
?
ﬁ@ﬁ@T U
(
ﬁ@ﬁ@V W
byte
ﬁ@ﬁ@W [
)
ﬁ@ﬁ@[ \
(
ﬁ@ﬁ@\ ]
m_htmlColor
ﬁ@ﬁ@] h
.
ﬁ@ﬁ@h i
a
ﬁ@ﬁ@i j
)
ﬁ@ﬁ@j k
:
ﬁ@ﬁ@l m
(
ﬁ@ﬁ@n o
byte
ﬁ@ﬁ@o s
)
ﬁ@ﬁ@s t
(
ﬁ@ﬁ@t u
m_underlineColorﬁ@ﬁ@u Ö
.ﬁ@ﬁ@Ö Ü
aﬁ@ﬁ@Ü á
)ﬁ@ﬁ@á à
;ﬁ@ﬁ@à â
}
ﬂ@ﬂ@ 
else
‡@‡@ 
m_underlineColor
·@·@ ,
=
·@·@- .
m_htmlColor
·@·@/ :
;
·@·@: ;#
m_underlineColorStack
„@„@ -
.
„@„@- .
Add
„@„@. 1
(
„@„@1 2
m_underlineColor
„@„@2 B
)
„@„@B C
;
„@„@C D
return
Â@Â@ 
true
Â@Â@ #
;
Â@Â@# $
case
Ê@Ê@ 
$num
Ê@Ê@ 
:
Ê@Ê@ 
case
Á@Á@ 
$num
Á@Á@ 
:
Á@Á@ 
if
Ë@Ë@ 
(
Ë@Ë@ 
(
Ë@Ë@ 
m_fontStyle
Ë@Ë@ (
&
Ë@Ë@) *

FontStyles
Ë@Ë@+ 5
.
Ë@Ë@5 6
	Underline
Ë@Ë@6 ?
)
Ë@Ë@? @
!=
Ë@Ë@A C

FontStyles
Ë@Ë@D N
.
Ë@Ë@N O
	Underline
Ë@Ë@O X
)
Ë@Ë@X Y
{
È@È@ 
m_underlineColor
Í@Í@ ,
=
Í@Í@- .#
m_underlineColorStack
Í@Í@/ D
.
Í@Í@D E
Remove
Í@Í@E K
(
Í@Í@K L
)
Í@Í@L M
;
Í@Í@M N
if
Ï@Ï@ 
(
Ï@Ï@  
m_fontStyleStack
Ï@Ï@  0
.
Ï@Ï@0 1
Remove
Ï@Ï@1 7
(
Ï@Ï@7 8

FontStyles
Ï@Ï@8 B
.
Ï@Ï@B C
	Underline
Ï@Ï@C L
)
Ï@Ï@L M
==
Ï@Ï@N P
$num
Ï@Ï@Q R
)
Ï@Ï@R S!
m_FontStyleInternal
Ì@Ì@  3
&=
Ì@Ì@4 6
~
Ì@Ì@7 8

FontStyles
Ì@Ì@8 B
.
Ì@Ì@B C
	Underline
Ì@Ì@C L
;
Ì@Ì@L M
}
Ó@Ó@ 
m_underlineColor
@@ (
=
@@) *#
m_underlineColorStack
@@+ @
.
@@@ A
Remove
@@A G
(
@@G H
)
@@H I
;
@@I J
return
Ò@Ò@ 
true
Ò@Ò@ #
;
Ò@Ò@# $
case
Ú@Ú@ 
$num
Ú@Ú@ 
:
Ú@Ú@ 
case
Û@Û@ 
$num
Û@Û@ 
:
Û@Û@ !
m_FontStyleInternal
Ù@Ù@ +
|=
Ù@Ù@, .

FontStyles
Ù@Ù@/ 9
.
Ù@Ù@9 :
	Highlight
Ù@Ù@: C
;
Ù@Ù@C D
m_fontStyleStack
ı@ı@ (
.
ı@ı@( )
Add
ı@ı@) ,
(
ı@ı@, -

FontStyles
ı@ı@- 7
.
ı@ı@7 8
	Highlight
ı@ı@8 A
)
ı@ı@A B
;
ı@ı@B C
Color32
˜@˜@ 
highlightColor
˜@˜@  .
=
˜@˜@/ 0
new
˜@˜@1 4
Color32
˜@˜@5 <
(
˜@˜@< =
$num
˜@˜@= @
,
˜@˜@@ A
$num
˜@˜@B E
,
˜@˜@E F
$num
˜@˜@G H
,
˜@˜@H I
$num
˜@˜@J L
)
˜@˜@L M
;
˜@˜@M N

TMP_Offset
¯@¯@ "
highlightPadding
¯@¯@# 3
=
¯@¯@4 5

TMP_Offset
¯@¯@6 @
.
¯@¯@@ A
zero
¯@¯@A E
;
¯@¯@E F
for
˚@˚@ 
(
˚@˚@ 
int
˚@˚@  
i
˚@˚@! "
=
˚@˚@# $
$num
˚@˚@% &
;
˚@˚@& '
i
˚@˚@( )
<
˚@˚@* +
m_xmlAttribute
˚@˚@, :
.
˚@˚@: ;
Length
˚@˚@; A
&&
˚@˚@B D
m_xmlAttribute
˚@˚@E S
[
˚@˚@S T
i
˚@˚@T U
]
˚@˚@U V
.
˚@˚@V W
nameHashCode
˚@˚@W c
!=
˚@˚@d f
$num
˚@˚@g h
;
˚@˚@h i
i
˚@˚@j k
++
˚@˚@k m
)
˚@˚@m n
{
¸@¸@ 
int
˝@˝@ 
nameHashCode
˝@˝@  ,
=
˝@˝@- .
m_xmlAttribute
˝@˝@/ =
[
˝@˝@= >
i
˝@˝@> ?
]
˝@˝@? @
.
˝@˝@@ A
nameHashCode
˝@˝@A M
;
˝@˝@M N
switch
ˇ@ˇ@ "
(
ˇ@ˇ@# $
nameHashCode
ˇ@ˇ@$ 0
)
ˇ@ˇ@0 1
{
ÄAÄA 
case
ÇAÇA  $
$num
ÇAÇA% *
:
ÇAÇA* +
case
ÉAÉA  $
$num
ÉAÉA% *
:
ÉAÉA* +
if
ÑAÑA$ &
(
ÑAÑA' (
m_xmlAttribute
ÑAÑA( 6
[
ÑAÑA6 7
i
ÑAÑA7 8
]
ÑAÑA8 9
.
ÑAÑA9 :
	valueType
ÑAÑA: C
==
ÑAÑAD F
TagValueType
ÑAÑAG S
.
ÑAÑAS T

ColorValue
ÑAÑAT ^
)
ÑAÑA^ _
highlightColor
ÖAÖA( 6
=
ÖAÖA7 8
HexCharsToColor
ÖAÖA9 H
(
ÖAÖAH I
	m_htmlTag
ÖAÖAI R
,
ÖAÖAR S
m_xmlAttribute
ÖAÖAT b
[
ÖAÖAb c
$num
ÖAÖAc d
]
ÖAÖAd e
.
ÖAÖAe f
valueStartIndex
ÖAÖAf u
,
ÖAÖAu v
m_xmlAttributeÖAÖAw Ö
[ÖAÖAÖ Ü
$numÖAÖAÜ á
]ÖAÖAá à
.ÖAÖAà â
valueLengthÖAÖAâ î
)ÖAÖAî ï
;ÖAÖAï ñ
break
ÜAÜA$ )
;
ÜAÜA) *
case
âAâA  $
$num
âAâA% +
:
âAâA+ ,
highlightColor
äAäA$ 2
=
äAäA3 4
HexCharsToColor
äAäA5 D
(
äAäAD E
	m_htmlTag
äAäAE N
,
äAäAN O
m_xmlAttribute
äAäAP ^
[
äAäA^ _
i
äAäA_ `
]
äAäA` a
.
äAäAa b
valueStartIndex
äAäAb q
,
äAäAq r
m_xmlAttributeäAäAs Å
[äAäAÅ Ç
iäAäAÇ É
]äAäAÉ Ñ
.äAäAÑ Ö
valueLengthäAäAÖ ê
)äAäAê ë
;äAäAë í
break
ãAãA$ )
;
ãAãA) *
case
éAéA  $
$num
éAéA% -
:
éAéA- .
int
èAèA$ '

paramCount
èAèA( 2
=
èAèA3 4$
GetAttributeParameters
èAèA5 K
(
èAèAK L
	m_htmlTag
èAèAL U
,
èAèAU V
m_xmlAttribute
èAèAW e
[
èAèAe f
i
èAèAf g
]
èAèAg h
.
èAèAh i
valueStartIndex
èAèAi x
,
èAèAx y
m_xmlAttributeèAèAz à
[èAèAà â
ièAèAâ ä
]èAèAä ã
.èAèAã å
valueLengthèAèAå ó
,èAèAó ò
refèAèAô ú*
m_attributeParameterValuesèAèAù ∑
)èAèA∑ ∏
;èAèA∏ π
if
êAêA$ &
(
êAêA' (

paramCount
êAêA( 2
!=
êAêA3 5
$num
êAêA6 7
)
êAêA7 8
return
êAêA9 ?
false
êAêA@ E
;
êAêAE F
highlightPadding
íAíA$ 4
=
íAíA5 6
new
íAíA7 :

TMP_Offset
íAíA; E
(
íAíAE F(
m_attributeParameterValues
íAíAF `
[
íAíA` a
$num
íAíAa b
]
íAíAb c
,
íAíAc d(
m_attributeParameterValues
íAíAe 
[íAíA Ä
$numíAíAÄ Å
]íAíAÅ Ç
,íAíAÇ É*
m_attributeParameterValuesíAíAÑ û
[íAíAû ü
$numíAíAü †
]íAíA† °
,íAíA° ¢*
m_attributeParameterValuesíAíA£ Ω
[íAíAΩ æ
$numíAíAæ ø
]íAíAø ¿
)íAíA¿ ¡
;íAíA¡ ¬
highlightPadding
ìAìA$ 4
*=
ìAìA5 7

m_fontSize
ìAìA8 B
*
ìAìAC D
$num
ìAìAE J
*
ìAìAK L
(
ìAìAM N
m_isOrthographic
ìAìAN ^
?
ìAìA_ `
$num
ìAìAa b
:
ìAìAc d
$num
ìAìAe i
)
ìAìAi j
;
ìAìAj k
break
îAîA$ )
;
îAîA) *
}
ïAïA 
}
ñAñA 
highlightColor
òAòA &
.
òAòA& '
a
òAòA' (
=
òAòA) *
m_htmlColor
òAòA+ 6
.
òAòA6 7
a
òAòA7 8
<
òAòA9 :
highlightColor
òAòA; I
.
òAòAI J
a
òAòAJ K
?
òAòAL M
(
òAòAN O
byte
òAòAO S
)
òAòAS T
(
òAòAT U
m_htmlColor
òAòAU `
.
òAòA` a
a
òAòAa b
)
òAòAb c
:
òAòAd e
(
òAòAf g
byte
òAòAg k
)
òAòAk l
(
òAòAl m
highlightColor
òAòAm {
.
òAòA{ |
a
òAòA| }
)
òAòA} ~
;
òAòA~ 
HighlightState
öAöA &
state
öAöA' ,
=
öAöA- .
new
öAöA/ 2
HighlightState
öAöA3 A
(
öAöAA B
highlightColor
öAöAB P
,
öAöAP Q
highlightPadding
öAöAR b
)
öAöAb c
;
öAöAc d#
m_HighlightStateStack
õAõA -
.
õAõA- .
Push
õAõA. 2
(
õAõA2 3
state
õAõA3 8
)
õAõA8 9
;
õAõA9 :
return
ùAùA 
true
ùAùA #
;
ùAùA# $
case
ûAûA 
$num
ûAûA 
:
ûAûA  
case
üAüA 
$num
üAüA 
:
üAüA  
if
†A†A 
(
†A†A 
(
†A†A 
m_fontStyle
†A†A (
&
†A†A) *

FontStyles
†A†A+ 5
.
†A†A5 6
	Highlight
†A†A6 ?
)
†A†A? @
!=
†A†AA C

FontStyles
†A†AD N
.
†A†AN O
	Highlight
†A†AO X
)
†A†AX Y
{
°A°A #
m_HighlightStateStack
¢A¢A 1
.
¢A¢A1 2
Remove
¢A¢A2 8
(
¢A¢A8 9
)
¢A¢A9 :
;
¢A¢A: ;
if
§A§A 
(
§A§A  
m_fontStyleStack
§A§A  0
.
§A§A0 1
Remove
§A§A1 7
(
§A§A7 8

FontStyles
§A§A8 B
.
§A§AB C
	Highlight
§A§AC L
)
§A§AL M
==
§A§AN P
$num
§A§AQ R
)
§A§AR S!
m_FontStyleInternal
•A•A  3
&=
•A•A4 6
~
•A•A7 8

FontStyles
•A•A8 B
.
•A•AB C
	Highlight
•A•AC L
;
•A•AL M
}
¶A¶A 
return
ßAßA 
true
ßAßA #
;
ßAßA# $
case
®A®A 
$num
®A®A 
:
®A®A 
case
©A©A 
$num
©A©A 
:
©A©A #
m_fontScaleMultiplier
™A™A -
*=
™A™A. 0 
m_currentFontAsset
™A™A1 C
.
™A™AC D
faceInfo
™A™AD L
.
™A™AL M
subscriptSize
™A™AM Z
>
™A™A[ \
$num
™A™A] ^
?
™A™A_ ` 
m_currentFontAsset
™A™Aa s
.
™A™As t
faceInfo
™A™At |
.
™A™A| }
subscriptSize™A™A} ä
:™A™Aã å
$num™A™Aç é
;™A™Aé è#
m_baselineOffsetStack
´A´A -
.
´A´A- .
Push
´A´A. 2
(
´A´A2 3
m_baselineOffset
´A´A3 C
)
´A´AC D
;
´A´AD E
m_baselineOffset
¨A¨A (
+=
¨A¨A) + 
m_currentFontAsset
¨A¨A, >
.
¨A¨A> ?
faceInfo
¨A¨A? G
.
¨A¨AG H
subscriptOffset
¨A¨AH W
*
¨A¨AX Y
m_fontScale
¨A¨AZ e
*
¨A¨Af g#
m_fontScaleMultiplier
¨A¨Ah }
;
¨A¨A} ~
m_fontStyleStack
ÆAÆA (
.
ÆAÆA( )
Add
ÆAÆA) ,
(
ÆAÆA, -

FontStyles
ÆAÆA- 7
.
ÆAÆA7 8
	Subscript
ÆAÆA8 A
)
ÆAÆAA B
;
ÆAÆAB C!
m_FontStyleInternal
ØAØA +
|=
ØAØA, .

FontStyles
ØAØA/ 9
.
ØAØA9 :
	Subscript
ØAØA: C
;
ØAØAC D
return
∞A∞A 
true
∞A∞A #
;
∞A∞A# $
case
±A±A 
$num
±A±A 
:
±A±A 
case
≤A≤A 
$num
≤A≤A 
:
≤A≤A 
if
≥A≥A 
(
≥A≥A 
(
≥A≥A !
m_FontStyleInternal
≥A≥A 0
&
≥A≥A1 2

FontStyles
≥A≥A3 =
.
≥A≥A= >
	Subscript
≥A≥A> G
)
≥A≥AG H
==
≥A≥AI K

FontStyles
≥A≥AL V
.
≥A≥AV W
	Subscript
≥A≥AW `
)
≥A≥A` a
{
¥A¥A 
if
µAµA 
(
µAµA  #
m_fontScaleMultiplier
µAµA  5
<
µAµA6 7
$num
µAµA8 9
)
µAµA9 :
{
∂A∂A 
m_baselineOffset
∏A∏A  0
=
∏A∏A1 2#
m_baselineOffsetStack
∏A∏A3 H
.
∏A∏AH I
Pop
∏A∏AI L
(
∏A∏AL M
)
∏A∏AM N
;
∏A∏AN O#
m_fontScaleMultiplier
πAπA  5
/=
πAπA6 8 
m_currentFontAsset
πAπA9 K
.
πAπAK L
faceInfo
πAπAL T
.
πAπAT U
subscriptSize
πAπAU b
>
πAπAc d
$num
πAπAe f
?
πAπAg h 
m_currentFontAsset
πAπAi {
.
πAπA{ |
faceInfoπAπA| Ñ
.πAπAÑ Ö
subscriptSizeπAπAÖ í
:πAπAì î
$numπAπAï ñ
;πAπAñ ó
}
∫A∫A 
if
ºAºA 
(
ºAºA  
m_fontStyleStack
ºAºA  0
.
ºAºA0 1
Remove
ºAºA1 7
(
ºAºA7 8

FontStyles
ºAºA8 B
.
ºAºAB C
	Subscript
ºAºAC L
)
ºAºAL M
==
ºAºAN P
$num
ºAºAQ R
)
ºAºAR S!
m_FontStyleInternal
ΩAΩA  3
&=
ΩAΩA4 6
~
ΩAΩA7 8

FontStyles
ΩAΩA8 B
.
ΩAΩAB C
	Subscript
ΩAΩAC L
;
ΩAΩAL M
}
æAæA 
return
øAøA 
true
øAøA #
;
øAøA# $
case
¿A¿A 
$num
¿A¿A 
:
¿A¿A 
case
¡A¡A 
$num
¡A¡A 
:
¡A¡A #
m_fontScaleMultiplier
¬A¬A -
*=
¬A¬A. 0 
m_currentFontAsset
¬A¬A1 C
.
¬A¬AC D
faceInfo
¬A¬AD L
.
¬A¬AL M
superscriptSize
¬A¬AM \
>
¬A¬A] ^
$num
¬A¬A_ `
?
¬A¬Aa b 
m_currentFontAsset
¬A¬Ac u
.
¬A¬Au v
faceInfo
¬A¬Av ~
.
¬A¬A~ 
superscriptSize¬A¬A é
:¬A¬Aè ê
$num¬A¬Aë í
;¬A¬Aí ì#
m_baselineOffsetStack
√A√A -
.
√A√A- .
Push
√A√A. 2
(
√A√A2 3
m_baselineOffset
√A√A3 C
)
√A√AC D
;
√A√AD E
m_baselineOffset
ƒAƒA (
+=
ƒAƒA) + 
m_currentFontAsset
ƒAƒA, >
.
ƒAƒA> ?
faceInfo
ƒAƒA? G
.
ƒAƒAG H
superscriptOffset
ƒAƒAH Y
*
ƒAƒAZ [
m_fontScale
ƒAƒA\ g
*
ƒAƒAh i#
m_fontScaleMultiplier
ƒAƒAj 
;ƒAƒA Ä
m_fontStyleStack
∆A∆A (
.
∆A∆A( )
Add
∆A∆A) ,
(
∆A∆A, -

FontStyles
∆A∆A- 7
.
∆A∆A7 8
Superscript
∆A∆A8 C
)
∆A∆AC D
;
∆A∆AD E!
m_FontStyleInternal
«A«A +
|=
«A«A, .

FontStyles
«A«A/ 9
.
«A«A9 :
Superscript
«A«A: E
;
«A«AE F
return
»A»A 
true
»A»A #
;
»A»A# $
case
…A…A 
$num
…A…A 
:
…A…A 
case
 A A 
$num
 A A 
:
 A A 
if
ÀAÀA 
(
ÀAÀA 
(
ÀAÀA !
m_FontStyleInternal
ÀAÀA 0
&
ÀAÀA1 2

FontStyles
ÀAÀA3 =
.
ÀAÀA= >
Superscript
ÀAÀA> I
)
ÀAÀAI J
==
ÀAÀAK M

FontStyles
ÀAÀAN X
.
ÀAÀAX Y
Superscript
ÀAÀAY d
)
ÀAÀAd e
{
ÃAÃA 
if
ÕAÕA 
(
ÕAÕA  #
m_fontScaleMultiplier
ÕAÕA  5
<
ÕAÕA6 7
$num
ÕAÕA8 9
)
ÕAÕA9 :
{
ŒAŒA 
m_baselineOffset
–A–A  0
=
–A–A1 2#
m_baselineOffsetStack
–A–A3 H
.
–A–AH I
Pop
–A–AI L
(
–A–AL M
)
–A–AM N
;
–A–AN O#
m_fontScaleMultiplier
—A—A  5
/=
—A—A6 8 
m_currentFontAsset
—A—A9 K
.
—A—AK L
faceInfo
—A—AL T
.
—A—AT U
superscriptSize
—A—AU d
>
—A—Ae f
$num
—A—Ag h
?
—A—Ai j 
m_currentFontAsset
—A—Ak }
.
—A—A} ~
faceInfo—A—A~ Ü
.—A—AÜ á
superscriptSize—A—Aá ñ
:—A—Aó ò
$num—A—Aô ö
;—A—Aö õ
}
“A“A 
if
‘A‘A 
(
‘A‘A  
m_fontStyleStack
‘A‘A  0
.
‘A‘A0 1
Remove
‘A‘A1 7
(
‘A‘A7 8

FontStyles
‘A‘A8 B
.
‘A‘AB C
Superscript
‘A‘AC N
)
‘A‘AN O
==
‘A‘AP R
$num
‘A‘AS T
)
‘A‘AT U!
m_FontStyleInternal
’A’A  3
&=
’A’A4 6
~
’A’A7 8

FontStyles
’A’A8 B
.
’A’AB C
Superscript
’A’AC N
;
’A’AN O
}
÷A÷A 
return
◊A◊A 
true
◊A◊A #
;
◊A◊A# $
case
ÿAÿA 
-
ÿAÿA 
$num
ÿAÿA #
:
ÿAÿA# $
case
ŸAŸA 
$num
ŸAŸA #
:
ŸAŸA# $
value
⁄A⁄A 
=
⁄A⁄A 
ConvertToFloat
⁄A⁄A  .
(
⁄A⁄A. /
	m_htmlTag
⁄A⁄A/ 8
,
⁄A⁄A8 9
m_xmlAttribute
⁄A⁄A: H
[
⁄A⁄AH I
$num
⁄A⁄AI J
]
⁄A⁄AJ K
.
⁄A⁄AK L
valueStartIndex
⁄A⁄AL [
,
⁄A⁄A[ \
m_xmlAttribute
⁄A⁄A] k
[
⁄A⁄Ak l
$num
⁄A⁄Al m
]
⁄A⁄Am n
.
⁄A⁄An o
valueLength
⁄A⁄Ao z
)
⁄A⁄Az {
;
⁄A⁄A{ |
if
›A›A 
(
›A›A 
value
›A›A !
==
›A›A" $
Int16
›A›A% *
.
›A›A* +
MinValue
›A›A+ 3
)
›A›A3 4
return
›A›A5 ;
false
›A›A< A
;
›A›AA B
switch
ﬂAﬂA 
(
ﬂAﬂA  
(
ﬂAﬂA  !
int
ﬂAﬂA! $
)
ﬂAﬂA$ %
value
ﬂAﬂA% *
)
ﬂAﬂA* +
{
‡A‡A 
case
·A·A  
$num
·A·A! $
:
·A·A$ %"
m_FontWeightInternal
‚A‚A  4
=
‚A‚A5 6

FontWeight
‚A‚A7 A
.
‚A‚AA B
Thin
‚A‚AB F
;
‚A‚AF G
break
„A„A  %
;
„A„A% &
case
‰A‰A  
$num
‰A‰A! $
:
‰A‰A$ %"
m_FontWeightInternal
ÂAÂA  4
=
ÂAÂA5 6

FontWeight
ÂAÂA7 A
.
ÂAÂAA B

ExtraLight
ÂAÂAB L
;
ÂAÂAL M
break
ÊAÊA  %
;
ÊAÊA% &
case
ÁAÁA  
$num
ÁAÁA! $
:
ÁAÁA$ %"
m_FontWeightInternal
ËAËA  4
=
ËAËA5 6

FontWeight
ËAËA7 A
.
ËAËAA B
Light
ËAËAB G
;
ËAËAG H
break
ÈAÈA  %
;
ÈAÈA% &
case
ÍAÍA  
$num
ÍAÍA! $
:
ÍAÍA$ %"
m_FontWeightInternal
ÎAÎA  4
=
ÎAÎA5 6

FontWeight
ÎAÎA7 A
.
ÎAÎAA B
Regular
ÎAÎAB I
;
ÎAÎAI J
break
ÏAÏA  %
;
ÏAÏA% &
case
ÌAÌA  
$num
ÌAÌA! $
:
ÌAÌA$ %"
m_FontWeightInternal
ÓAÓA  4
=
ÓAÓA5 6

FontWeight
ÓAÓA7 A
.
ÓAÓAA B
Medium
ÓAÓAB H
;
ÓAÓAH I
break
ÔAÔA  %
;
ÔAÔA% &
case
AA  
$num
AA! $
:
AA$ %"
m_FontWeightInternal
ÒAÒA  4
=
ÒAÒA5 6

FontWeight
ÒAÒA7 A
.
ÒAÒAA B
SemiBold
ÒAÒAB J
;
ÒAÒAJ K
break
ÚAÚA  %
;
ÚAÚA% &
case
ÛAÛA  
$num
ÛAÛA! $
:
ÛAÛA$ %"
m_FontWeightInternal
ÙAÙA  4
=
ÙAÙA5 6

FontWeight
ÙAÙA7 A
.
ÙAÙAA B
Bold
ÙAÙAB F
;
ÙAÙAF G
break
ıAıA  %
;
ıAıA% &
case
ˆAˆA  
$num
ˆAˆA! $
:
ˆAˆA$ %"
m_FontWeightInternal
˜A˜A  4
=
˜A˜A5 6

FontWeight
˜A˜A7 A
.
˜A˜AA B
Heavy
˜A˜AB G
;
˜A˜AG H
break
¯A¯A  %
;
¯A¯A% &
case
˘A˘A  
$num
˘A˘A! $
:
˘A˘A$ %"
m_FontWeightInternal
˙A˙A  4
=
˙A˙A5 6

FontWeight
˙A˙A7 A
.
˙A˙AA B
Black
˙A˙AB G
;
˙A˙AG H
break
˚A˚A  %
;
˚A˚A% &
}
¸A¸A 
m_FontWeightStack
˛A˛A )
.
˛A˛A) *
Add
˛A˛A* -
(
˛A˛A- ."
m_FontWeightInternal
˛A˛A. B
)
˛A˛AB C
;
˛A˛AC D
return
ÄBÄB 
true
ÄBÄB #
;
ÄBÄB# $
case
ÅBÅB 
-
ÅBÅB 
$num
ÅBÅB $
:
ÅBÅB$ %
case
ÇBÇB 
$num
ÇBÇB "
:
ÇBÇB" #
m_FontWeightStack
ÉBÉB )
.
ÉBÉB) *
Remove
ÉBÉB* 0
(
ÉBÉB0 1
)
ÉBÉB1 2
;
ÉBÉB2 3
if
ÖBÖB 
(
ÖBÖB !
m_FontStyleInternal
ÖBÖB /
==
ÖBÖB0 2

FontStyles
ÖBÖB3 =
.
ÖBÖB= >
Bold
ÖBÖB> B
)
ÖBÖBB C"
m_FontWeightInternal
ÜBÜB 0
=
ÜBÜB1 2

FontWeight
ÜBÜB3 =
.
ÜBÜB= >
Bold
ÜBÜB> B
;
ÜBÜBB C
else
áBáB "
m_FontWeightInternal
àBàB 0
=
àBàB1 2
m_FontWeightStack
àBàB3 D
.
àBàBD E
Peek
àBàBE I
(
àBàBI J
)
àBàBJ K
;
àBàBK L
return
äBäB 
true
äBäB #
;
äBäB# $
case
ãBãB 
$num
ãBãB 
:
ãBãB 
case
åBåB 
$num
åBåB 
:
åBåB 
value
çBçB 
=
çBçB 
ConvertToFloat
çBçB  .
(
çBçB. /
	m_htmlTag
çBçB/ 8
,
çBçB8 9
m_xmlAttribute
çBçB: H
[
çBçBH I
$num
çBçBI J
]
çBçBJ K
.
çBçBK L
valueStartIndex
çBçBL [
,
çBçB[ \
m_xmlAttribute
çBçB] k
[
çBçBk l
$num
çBçBl m
]
çBçBm n
.
çBçBn o
valueLength
çBçBo z
)
çBçBz {
;
çBçB{ |
if
êBêB 
(
êBêB 
value
êBêB !
==
êBêB" $
Int16
êBêB% *
.
êBêB* +
MinValue
êBêB+ 3
)
êBêB3 4
return
êBêB5 ;
false
êBêB< A
;
êBêBA B
switch
íBíB 
(
íBíB  
tagUnitType
íBíB  +
)
íBíB+ ,
{
ìBìB 
case
îBîB  
TagUnitType
îBîB! ,
.
îBîB, -
Pixels
îBîB- 3
:
îBîB3 4

m_xAdvance
ïBïB  *
=
ïBïB+ ,
value
ïBïB- 2
*
ïBïB3 4
(
ïBïB5 6
m_isOrthographic
ïBïB6 F
?
ïBïBG H
$num
ïBïBI M
:
ïBïBN O
$num
ïBïBP T
)
ïBïBT U
;
ïBïBU V
return
óBóB  &
true
óBóB' +
;
óBóB+ ,
case
òBòB  
TagUnitType
òBòB! ,
.
òBòB, -
	FontUnits
òBòB- 6
:
òBòB6 7

m_xAdvance
ôBôB  *
=
ôBôB+ ,
value
ôBôB- 2
*
ôBôB3 4
m_currentFontSize
ôBôB5 F
*
ôBôBG H
(
ôBôBI J
m_isOrthographic
ôBôBJ Z
?
ôBôB[ \
$num
ôBôB] a
:
ôBôBb c
$num
ôBôBd h
)
ôBôBh i
;
ôBôBi j
return
õBõB  &
true
õBõB' +
;
õBõB+ ,
case
úBúB  
TagUnitType
úBúB! ,
.
úBúB, -

Percentage
úBúB- 7
:
úBúB7 8

m_xAdvance
ùBùB  *
=
ùBùB+ ,
m_marginWidth
ùBùB- :
*
ùBùB; <
value
ùBùB= B
/
ùBùBC D
$num
ùBùBE H
;
ùBùBH I
return
üBüB  &
true
üBüB' +
;
üBüB+ ,
}
†B†B 
return
°B°B 
false
°B°B $
;
°B°B$ %
case
¢B¢B 
$num
¢B¢B 
:
¢B¢B 
case
£B£B 
$num
£B£B 
:
£B£B #
m_isIgnoringAlignment
§B§B -
=
§B§B. /
false
§B§B0 5
;
§B§B5 6
return
•B•B 
true
•B•B #
;
•B•B# $
case
¶B¶B 
$num
¶B¶B !
:
¶B¶B! "
case
ßBßB 
$num
ßBßB !
:
ßBßB! "
value
®B®B 
=
®B®B 
ConvertToFloat
®B®B  .
(
®B®B. /
	m_htmlTag
®B®B/ 8
,
®B®B8 9
m_xmlAttribute
®B®B: H
[
®B®BH I
$num
®B®BI J
]
®B®BJ K
.
®B®BK L
valueStartIndex
®B®BL [
,
®B®B[ \
m_xmlAttribute
®B®B] k
[
®B®Bk l
$num
®B®Bl m
]
®B®Bm n
.
®B®Bn o
valueLength
®B®Bo z
)
®B®Bz {
;
®B®B{ |
if
´B´B 
(
´B´B 
value
´B´B !
==
´B´B" $
Int16
´B´B% *
.
´B´B* +
MinValue
´B´B+ 3
)
´B´B3 4
return
´B´B5 ;
false
´B´B< A
;
´B´BA B
switch
≠B≠B 
(
≠B≠B  
tagUnitType
≠B≠B  +
)
≠B≠B+ ,
{
ÆBÆB 
case
ØBØB  
TagUnitType
ØBØB! ,
.
ØBØB, -
Pixels
ØBØB- 3
:
ØBØB3 4
m_baselineOffset
∞B∞B  0
=
∞B∞B1 2
value
∞B∞B3 8
*
∞B∞B9 :
(
∞B∞B; <
m_isOrthographic
∞B∞B< L
?
∞B∞BM N
$num
∞B∞BO P
:
∞B∞BQ R
$num
∞B∞BS W
)
∞B∞BW X
;
∞B∞BX Y
return
±B±B  &
true
±B±B' +
;
±B±B+ ,
case
≤B≤B  
TagUnitType
≤B≤B! ,
.
≤B≤B, -
	FontUnits
≤B≤B- 6
:
≤B≤B6 7
m_baselineOffset
≥B≥B  0
=
≥B≥B1 2
value
≥B≥B3 8
*
≥B≥B9 :
(
≥B≥B; <
m_isOrthographic
≥B≥B< L
?
≥B≥BM N
$num
≥B≥BO P
:
≥B≥BQ R
$num
≥B≥BS W
)
≥B≥BW X
*
≥B≥BY Z
m_currentFontSize
≥B≥B[ l
;
≥B≥Bl m
return
¥B¥B  &
true
¥B¥B' +
;
¥B¥B+ ,
case
µBµB  
TagUnitType
µBµB! ,
.
µBµB, -

Percentage
µBµB- 7
:
µBµB7 8
return
∑B∑B  &
false
∑B∑B' ,
;
∑B∑B, -
}
∏B∏B 
return
πBπB 
false
πBπB $
;
πBπB$ %
case
∫B∫B 
$num
∫B∫B !
:
∫B∫B! "
case
ªBªB 
$num
ªBªB !
:
ªBªB! "
m_baselineOffset
ºBºB (
=
ºBºB) *
$num
ºBºB+ ,
;
ºBºB, -
return
ΩBΩB 
true
ΩBΩB #
;
ΩBΩB# $
case
æBæB 
$num
æBæB 
:
æBæB 
case
øBøB 
$num
øBøB 
:
øBøB 
if
¡B¡B 
(
¡B¡B 
m_overflowMode
¡B¡B *
==
¡B¡B+ -
TextOverflowModes
¡B¡B. ?
.
¡B¡B? @
Page
¡B¡B@ D
)
¡B¡BD E
{
¬B¬B 

m_xAdvance
√B√B &
=
√B√B' (
$num
√B√B) *
+
√B√B+ ,
tag_LineIndent
√B√B- ;
+
√B√B< =

tag_Indent
√B√B> H
;
√B√BH I
m_lineOffset
ƒBƒB (
=
ƒBƒB) *
$num
ƒBƒB+ ,
;
ƒBƒB, -
m_pageNumber
≈B≈B (
+=
≈B≈B) +
$num
≈B≈B, -
;
≈B≈B- .
m_isNewPage
∆B∆B '
=
∆B∆B( )
true
∆B∆B* .
;
∆B∆B. /
}
«B«B 
return
»B»B 
true
»B»B #
;
»B»B# $
case
ŒBŒB 
$num
ŒBŒB 
:
ŒBŒB 
case
œBœB 
$num
œBœB 
:
œBœB "
m_isNonBreakingSpace
–B–B ,
=
–B–B- .
true
–B–B/ 3
;
–B–B3 4
return
—B—B 
true
—B—B #
;
—B—B# $
case
“B“B 
$num
“B“B 
:
“B“B  
case
”B”B 
$num
”B”B 
:
”B”B  "
m_isNonBreakingSpace
‘B‘B ,
=
‘B‘B- .
false
‘B‘B/ 4
;
‘B‘B4 5
return
’B’B 
true
’B’B #
;
’B’B# $
case
÷B÷B 
$num
÷B÷B 
:
÷B÷B 
case
◊B◊B 
$num
◊B◊B 
:
◊B◊B 
value
ÿBÿB 
=
ÿBÿB 
ConvertToFloat
ÿBÿB  .
(
ÿBÿB. /
	m_htmlTag
ÿBÿB/ 8
,
ÿBÿB8 9
m_xmlAttribute
ÿBÿB: H
[
ÿBÿBH I
$num
ÿBÿBI J
]
ÿBÿBJ K
.
ÿBÿBK L
valueStartIndex
ÿBÿBL [
,
ÿBÿB[ \
m_xmlAttribute
ÿBÿB] k
[
ÿBÿBk l
$num
ÿBÿBl m
]
ÿBÿBm n
.
ÿBÿBn o
valueLength
ÿBÿBo z
)
ÿBÿBz {
;
ÿBÿB{ |
if
€B€B 
(
€B€B 
value
€B€B !
==
€B€B" $
Int16
€B€B% *
.
€B€B* +
MinValue
€B€B+ 3
)
€B€B3 4
return
€B€B5 ;
false
€B€B< A
;
€B€BA B
switch
›B›B 
(
›B›B  
tagUnitType
›B›B  +
)
›B›B+ ,
{
ﬁBﬁB 
case
ﬂBﬂB  
TagUnitType
ﬂBﬂB! ,
.
ﬂBﬂB, -
Pixels
ﬂBﬂB- 3
:
ﬂBﬂB3 4
if
‡B‡B  "
(
‡B‡B# $
	m_htmlTag
‡B‡B$ -
[
‡B‡B- .
$num
‡B‡B. /
]
‡B‡B/ 0
==
‡B‡B1 3
$num
‡B‡B4 6
)
‡B‡B6 7
{
·B·B  !
m_currentFontSize
‚B‚B$ 5
=
‚B‚B6 7

m_fontSize
‚B‚B8 B
+
‚B‚BC D
value
‚B‚BE J
;
‚B‚BJ K
m_sizeStack
„B„B$ /
.
„B„B/ 0
Add
„B„B0 3
(
„B„B3 4
m_currentFontSize
„B„B4 E
)
„B„BE F
;
„B„BF G
m_fontScale
‰B‰B$ /
=
‰B‰B0 1
(
‰B‰B2 3
m_currentFontSize
‰B‰B3 D
/
‰B‰BE F 
m_currentFontAsset
‰B‰BG Y
.
‰B‰BY Z
faceInfo
‰B‰BZ b
.
‰B‰Bb c
	pointSize
‰B‰Bc l
*
‰B‰Bm n!
m_currentFontAsset‰B‰Bo Å
.‰B‰BÅ Ç
faceInfo‰B‰BÇ ä
.‰B‰Bä ã
scale‰B‰Bã ê
*‰B‰Bë í
(‰B‰Bì î 
m_isOrthographic‰B‰Bî §
?‰B‰B• ¶
$num‰B‰Bß ®
:‰B‰B© ™
$num‰B‰B´ Ø
)‰B‰BØ ∞
)‰B‰B∞ ±
;‰B‰B± ≤
return
ÂBÂB$ *
true
ÂBÂB+ /
;
ÂBÂB/ 0
}
ÊBÊB  !
else
ÁBÁB  $
if
ÁBÁB% '
(
ÁBÁB( )
	m_htmlTag
ÁBÁB) 2
[
ÁBÁB2 3
$num
ÁBÁB3 4
]
ÁBÁB4 5
==
ÁBÁB6 8
$num
ÁBÁB9 ;
)
ÁBÁB; <
{
ËBËB  !
m_currentFontSize
ÈBÈB$ 5
=
ÈBÈB6 7

m_fontSize
ÈBÈB8 B
+
ÈBÈBC D
value
ÈBÈBE J
;
ÈBÈBJ K
m_sizeStack
ÍBÍB$ /
.
ÍBÍB/ 0
Add
ÍBÍB0 3
(
ÍBÍB3 4
m_currentFontSize
ÍBÍB4 E
)
ÍBÍBE F
;
ÍBÍBF G
m_fontScale
ÎBÎB$ /
=
ÎBÎB0 1
(
ÎBÎB2 3
m_currentFontSize
ÎBÎB3 D
/
ÎBÎBE F 
m_currentFontAsset
ÎBÎBG Y
.
ÎBÎBY Z
faceInfo
ÎBÎBZ b
.
ÎBÎBb c
	pointSize
ÎBÎBc l
*
ÎBÎBm n!
m_currentFontAssetÎBÎBo Å
.ÎBÎBÅ Ç
faceInfoÎBÎBÇ ä
.ÎBÎBä ã
scaleÎBÎBã ê
*ÎBÎBë í
(ÎBÎBì î 
m_isOrthographicÎBÎBî §
?ÎBÎB• ¶
$numÎBÎBß ®
:ÎBÎB© ™
$numÎBÎB´ Ø
)ÎBÎBØ ∞
)ÎBÎB∞ ±
;ÎBÎB± ≤
return
ÏBÏB$ *
true
ÏBÏB+ /
;
ÏBÏB/ 0
}
ÌBÌB  !
else
ÓBÓB  $
{
ÔBÔB  !
m_currentFontSize
BB$ 5
=
BB6 7
value
BB8 =
;
BB= >
m_sizeStack
ÒBÒB$ /
.
ÒBÒB/ 0
Add
ÒBÒB0 3
(
ÒBÒB3 4
m_currentFontSize
ÒBÒB4 E
)
ÒBÒBE F
;
ÒBÒBF G
m_fontScale
ÚBÚB$ /
=
ÚBÚB0 1
(
ÚBÚB2 3
m_currentFontSize
ÚBÚB3 D
/
ÚBÚBE F 
m_currentFontAsset
ÚBÚBG Y
.
ÚBÚBY Z
faceInfo
ÚBÚBZ b
.
ÚBÚBb c
	pointSize
ÚBÚBc l
*
ÚBÚBm n!
m_currentFontAssetÚBÚBo Å
.ÚBÚBÅ Ç
faceInfoÚBÚBÇ ä
.ÚBÚBä ã
scaleÚBÚBã ê
*ÚBÚBë í
(ÚBÚBì î 
m_isOrthographicÚBÚBî §
?ÚBÚB• ¶
$numÚBÚBß ®
:ÚBÚB© ™
$numÚBÚB´ Ø
)ÚBÚBØ ∞
)ÚBÚB∞ ±
;ÚBÚB± ≤
return
ÛBÛB$ *
true
ÛBÛB+ /
;
ÛBÛB/ 0
}
ÙBÙB  !
case
ıBıB  
TagUnitType
ıBıB! ,
.
ıBıB, -
	FontUnits
ıBıB- 6
:
ıBıB6 7
m_currentFontSize
ˆBˆB  1
=
ˆBˆB2 3

m_fontSize
ˆBˆB4 >
*
ˆBˆB? @
value
ˆBˆBA F
;
ˆBˆBF G
m_sizeStack
˜B˜B  +
.
˜B˜B+ ,
Add
˜B˜B, /
(
˜B˜B/ 0
m_currentFontSize
˜B˜B0 A
)
˜B˜BA B
;
˜B˜BB C
m_fontScale
¯B¯B  +
=
¯B¯B, -
(
¯B¯B. /
m_currentFontSize
¯B¯B/ @
/
¯B¯BA B 
m_currentFontAsset
¯B¯BC U
.
¯B¯BU V
faceInfo
¯B¯BV ^
.
¯B¯B^ _
	pointSize
¯B¯B_ h
*
¯B¯Bi j 
m_currentFontAsset
¯B¯Bk }
.
¯B¯B} ~
faceInfo¯B¯B~ Ü
.¯B¯BÜ á
scale¯B¯Bá å
*¯B¯Bç é
(¯B¯Bè ê 
m_isOrthographic¯B¯Bê †
?¯B¯B° ¢
$num¯B¯B£ §
:¯B¯B• ¶
$num¯B¯Bß ´
)¯B¯B´ ¨
)¯B¯B¨ ≠
;¯B¯B≠ Æ
return
˘B˘B  &
true
˘B˘B' +
;
˘B˘B+ ,
case
˙B˙B  
TagUnitType
˙B˙B! ,
.
˙B˙B, -

Percentage
˙B˙B- 7
:
˙B˙B7 8
m_currentFontSize
˚B˚B  1
=
˚B˚B2 3

m_fontSize
˚B˚B4 >
*
˚B˚B? @
value
˚B˚BA F
/
˚B˚BG H
$num
˚B˚BI L
;
˚B˚BL M
m_sizeStack
¸B¸B  +
.
¸B¸B+ ,
Add
¸B¸B, /
(
¸B¸B/ 0
m_currentFontSize
¸B¸B0 A
)
¸B¸BA B
;
¸B¸BB C
m_fontScale
˝B˝B  +
=
˝B˝B, -
(
˝B˝B. /
m_currentFontSize
˝B˝B/ @
/
˝B˝BA B 
m_currentFontAsset
˝B˝BC U
.
˝B˝BU V
faceInfo
˝B˝BV ^
.
˝B˝B^ _
	pointSize
˝B˝B_ h
*
˝B˝Bi j 
m_currentFontAsset
˝B˝Bk }
.
˝B˝B} ~
faceInfo˝B˝B~ Ü
.˝B˝BÜ á
scale˝B˝Bá å
*˝B˝Bç é
(˝B˝Bè ê 
m_isOrthographic˝B˝Bê †
?˝B˝B° ¢
$num˝B˝B£ §
:˝B˝B• ¶
$num˝B˝Bß ´
)˝B˝B´ ¨
)˝B˝B¨ ≠
;˝B˝B≠ Æ
return
˛B˛B  &
true
˛B˛B' +
;
˛B˛B+ ,
}
ˇBˇB 
return
ÄCÄC 
false
ÄCÄC $
;
ÄCÄC$ %
case
ÅCÅC 
$num
ÅCÅC 
:
ÅCÅC  
case
ÇCÇC 
$num
ÇCÇC 
:
ÇCÇC  
m_currentFontSize
ÉCÉC )
=
ÉCÉC* +
m_sizeStack
ÉCÉC, 7
.
ÉCÉC7 8
Remove
ÉCÉC8 >
(
ÉCÉC> ?
)
ÉCÉC? @
;
ÉCÉC@ A
m_fontScale
ÑCÑC #
=
ÑCÑC$ %
(
ÑCÑC& '
m_currentFontSize
ÑCÑC' 8
/
ÑCÑC9 : 
m_currentFontAsset
ÑCÑC; M
.
ÑCÑCM N
faceInfo
ÑCÑCN V
.
ÑCÑCV W
	pointSize
ÑCÑCW `
*
ÑCÑCa b 
m_currentFontAsset
ÑCÑCc u
.
ÑCÑCu v
faceInfo
ÑCÑCv ~
.
ÑCÑC~ 
scaleÑCÑC Ñ
*ÑCÑCÖ Ü
(ÑCÑCá à 
m_isOrthographicÑCÑCà ò
?ÑCÑCô ö
$numÑCÑCõ ú
:ÑCÑCù û
$numÑCÑCü £
)ÑCÑC£ §
)ÑCÑC§ •
;ÑCÑC• ¶
return
ÖCÖC 
true
ÖCÖC #
;
ÖCÖC# $
case
ÜCÜC 
$num
ÜCÜC 
:
ÜCÜC 
case
áCáC 
$num
áCáC 
:
áCáC 
int
àCàC 
fontHashCode
àCàC (
=
àCàC) *
m_xmlAttribute
àCàC+ 9
[
àCàC9 :
$num
àCàC: ;
]
àCàC; <
.
àCàC< =
valueHashCode
àCàC= J
;
àCàCJ K
int
âCâC '
materialAttributeHashCode
âCâC 5
=
âCâC6 7
m_xmlAttribute
âCâC8 F
[
âCâCF G
$num
âCâCG H
]
âCâCH I
.
âCâCI J
nameHashCode
âCâCJ V
;
âCâCV W
int
äCäC 
materialHashCode
äCäC ,
=
äCäC- .
m_xmlAttribute
äCäC/ =
[
äCäC= >
$num
äCäC> ?
]
äCäC? @
.
äCäC@ A
valueHashCode
äCäCA N
;
äCäCN O
if
çCçC 
(
çCçC 
fontHashCode
çCçC (
==
çCçC) +
$num
çCçC, 5
||
çCçC6 8
fontHashCode
çCçC9 E
==
çCçCF H
$num
çCçCI R
)
çCçCR S
{
éCéC  
m_currentFontAsset
èCèC .
=
èCèC/ 0"
m_materialReferences
èCèC1 E
[
èCèCE F
$num
èCèCF G
]
èCèCG H
.
èCèCH I
	fontAsset
èCèCI R
;
èCèCR S
m_currentMaterial
êCêC -
=
êCêC. /"
m_materialReferences
êCêC0 D
[
êCêCD E
$num
êCêCE F
]
êCêCF G
.
êCêCG H
material
êCêCH P
;
êCêCP Q$
m_currentMaterialIndex
ëCëC 2
=
ëCëC3 4
$num
ëCëC5 6
;
ëCëC6 7
m_fontScale
îCîC '
=
îCîC( )
(
îCîC* +
m_currentFontSize
îCîC+ <
/
îCîC= > 
m_currentFontAsset
îCîC? Q
.
îCîCQ R
faceInfo
îCîCR Z
.
îCîCZ [
	pointSize
îCîC[ d
*
îCîCe f 
m_currentFontAsset
îCîCg y
.
îCîCy z
faceInfoîCîCz Ç
.îCîCÇ É
scaleîCîCÉ à
*îCîCâ ä
(îCîCã å 
m_isOrthographicîCîCå ú
?îCîCù û
$numîCîCü †
:îCîC° ¢
$numîCîC£ ß
)îCîCß ®
)îCîC® ©
;îCîC© ™&
m_materialReferenceStack
ñCñC 4
.
ñCñC4 5
Add
ñCñC5 8
(
ñCñC8 9"
m_materialReferences
ñCñC9 M
[
ñCñCM N
$num
ñCñCN O
]
ñCñCO P
)
ñCñCP Q
;
ñCñCQ R
return
òCòC "
true
òCòC# '
;
òCòC' (
}
ôCôC 
TMP_FontAsset
õCõC %
tempFont
õCõC& .
;
õCõC. /
Material
úCúC  
tempMaterial
úCúC! -
;
úCúC- .&
MaterialReferenceManager
¢C¢C 0
.
¢C¢C0 1
TryGetFontAsset
¢C¢C1 @
(
¢C¢C@ A
fontHashCode
¢C¢CA M
,
¢C¢CM N
out
¢C¢CO R
tempFont
¢C¢CS [
)
¢C¢C[ \
;
¢C¢C\ ]
if
•C•C 
(
•C•C 
tempFont
•C•C $
==
•C•C% '
null
•C•C( ,
)
•C•C, -
{
¶C¶C 
tempFont
®C®C $
=
®C®C% & 
OnFontAssetRequest
®C®C' 9
?
®C®C9 :
.
®C®C: ;
Invoke
®C®C; A
(
®C®CA B
fontHashCode
®C®CB N
,
®C®CN O
new
®C®CP S
string
®C®CT Z
(
®C®CZ [
	m_htmlTag
®C®C[ d
,
®C®Cd e
m_xmlAttribute
®C®Cf t
[
®C®Ct u
$num
®C®Cu v
]
®C®Cv w
.
®C®Cw x
valueStartIndex®C®Cx á
,®C®Cá à
m_xmlAttribute®C®Câ ó
[®C®Có ò
$num®C®Cò ô
]®C®Cô ö
.®C®Cö õ
valueLength®C®Cõ ¶
)®C®C¶ ß
)®C®Cß ®
;®C®C® ©
if
™C™C 
(
™C™C  
tempFont
™C™C  (
==
™C™C) +
null
™C™C, 0
)
™C™C0 1
{
´C´C 
tempFont
≠C≠C  (
=
≠C≠C) *
	Resources
≠C≠C+ 4
.
≠C≠C4 5
Load
≠C≠C5 9
<
≠C≠C9 :
TMP_FontAsset
≠C≠C: G
>
≠C≠CG H
(
≠C≠CH I
TMP_Settings
≠C≠CI U
.
≠C≠CU V"
defaultFontAssetPath
≠C≠CV j
+
≠C≠Ck l
new
≠C≠Cm p
string
≠C≠Cq w
(
≠C≠Cw x
	m_htmlTag≠C≠Cx Å
,≠C≠CÅ Ç
m_xmlAttribute≠C≠CÉ ë
[≠C≠Cë í
$num≠C≠Cí ì
]≠C≠Cì î
.≠C≠Cî ï
valueStartIndex≠C≠Cï §
,≠C≠C§ •
m_xmlAttribute≠C≠C¶ ¥
[≠C≠C¥ µ
$num≠C≠Cµ ∂
]≠C≠C∂ ∑
.≠C≠C∑ ∏
valueLength≠C≠C∏ √
)≠C≠C√ ƒ
)≠C≠Cƒ ≈
;≠C≠C≈ ∆
}
ÆCÆC 
if
∞C∞C 
(
∞C∞C  
tempFont
∞C∞C  (
==
∞C∞C) +
null
∞C∞C, 0
)
∞C∞C0 1
return
±C±C  &
false
±C±C' ,
;
±C±C, -&
MaterialReferenceManager
¥C¥C 4
.
¥C¥C4 5
AddFontAsset
¥C¥C5 A
(
¥C¥CA B
tempFont
¥C¥CB J
)
¥C¥CJ K
;
¥C¥CK L
}
µCµC 
if
∏C∏C 
(
∏C∏C '
materialAttributeHashCode
∏C∏C 5
==
∏C∏C6 8
$num
∏C∏C9 :
&&
∏C∏C; =
materialHashCode
∏C∏C> N
==
∏C∏CO Q
$num
∏C∏CR S
)
∏C∏CS T
{
πCπC 
m_currentMaterial
ªCªC -
=
ªCªC. /
tempFont
ªCªC0 8
.
ªCªC8 9
material
ªCªC9 A
;
ªCªCA B$
m_currentMaterialIndex
ΩCΩC 2
=
ΩCΩC3 4
MaterialReference
ΩCΩC5 F
.
ΩCΩCF G"
AddMaterialReference
ΩCΩCG [
(
ΩCΩC[ \
m_currentMaterial
ΩCΩC\ m
,
ΩCΩCm n
tempFont
ΩCΩCo w
,
ΩCΩCw x#
m_materialReferencesΩCΩCy ç
,ΩCΩCç é.
m_materialReferenceIndexLookupΩCΩCè ≠
)ΩCΩC≠ Æ
;ΩCΩCÆ Ø&
m_materialReferenceStack
øCøC 4
.
øCøC4 5
Add
øCøC5 8
(
øCøC8 9"
m_materialReferences
øCøC9 M
[
øCøCM N$
m_currentMaterialIndex
øCøCN d
]
øCøCd e
)
øCøCe f
;
øCøCf g
}
¿C¿C 
else
¡C¡C 
if
¡C¡C 
(
¡C¡C  !'
materialAttributeHashCode
¡C¡C! :
==
¡C¡C; =
$num
¡C¡C> G
||
¡C¡CH J'
materialAttributeHashCode
¡C¡CK d
==
¡C¡Ce g
$num
¡C¡Ch p
)
¡C¡Cp q
{
¬C¬C 
if
√C√C 
(
√C√C  &
MaterialReferenceManager
√C√C  8
.
√C√C8 9
TryGetMaterial
√C√C9 G
(
√C√CG H
materialHashCode
√C√CH X
,
√C√CX Y
out
√C√CZ ]
tempMaterial
√C√C^ j
)
√C√Cj k
)
√C√Ck l
{
ƒCƒC 
m_currentMaterial
≈C≈C  1
=
≈C≈C2 3
tempMaterial
≈C≈C4 @
;
≈C≈C@ A$
m_currentMaterialIndex
«C«C  6
=
«C«C7 8
MaterialReference
«C«C9 J
.
«C«CJ K"
AddMaterialReference
«C«CK _
(
«C«C_ `
m_currentMaterial
«C«C` q
,
«C«Cq r
tempFont
«C«Cs {
,
«C«C{ |#
m_materialReferences«C«C} ë
,«C«Cë í.
m_materialReferenceIndexLookup«C«Cì ±
)«C«C± ≤
;«C«C≤ ≥&
m_materialReferenceStack
…C…C  8
.
…C…C8 9
Add
…C…C9 <
(
…C…C< ="
m_materialReferences
…C…C= Q
[
…C…CQ R$
m_currentMaterialIndex
…C…CR h
]
…C…Ch i
)
…C…Ci j
;
…C…Cj k
}
 C C 
else
ÀCÀC  
{
ÃCÃC 
tempMaterial
ŒCŒC  ,
=
ŒCŒC- .
	Resources
ŒCŒC/ 8
.
ŒCŒC8 9
Load
ŒCŒC9 =
<
ŒCŒC= >
Material
ŒCŒC> F
>
ŒCŒCF G
(
ŒCŒCG H
TMP_Settings
ŒCŒCH T
.
ŒCŒCT U"
defaultFontAssetPath
ŒCŒCU i
+
ŒCŒCj k
new
ŒCŒCl o
string
ŒCŒCp v
(
ŒCŒCv w
	m_htmlTagŒCŒCw Ä
,ŒCŒCÄ Å
m_xmlAttributeŒCŒCÇ ê
[ŒCŒCê ë
$numŒCŒCë í
]ŒCŒCí ì
.ŒCŒCì î
valueStartIndexŒCŒCî £
,ŒCŒC£ §
m_xmlAttributeŒCŒC• ≥
[ŒCŒC≥ ¥
$numŒCŒC¥ µ
]ŒCŒCµ ∂
.ŒCŒC∂ ∑
valueLengthŒCŒC∑ ¬
)ŒCŒC¬ √
)ŒCŒC√ ƒ
;ŒCŒCƒ ≈
if
–C–C  "
(
–C–C# $
tempMaterial
–C–C$ 0
==
–C–C1 3
null
–C–C4 8
)
–C–C8 9
return
—C—C$ *
false
—C—C+ 0
;
—C—C0 1&
MaterialReferenceManager
‘C‘C  8
.
‘C‘C8 9
AddFontMaterial
‘C‘C9 H
(
‘C‘CH I
materialHashCode
‘C‘CI Y
,
‘C‘CY Z
tempMaterial
‘C‘C[ g
)
‘C‘Cg h
;
‘C‘Ch i
m_currentMaterial
÷C÷C  1
=
÷C÷C2 3
tempMaterial
÷C÷C4 @
;
÷C÷C@ A$
m_currentMaterialIndex
ÿCÿC  6
=
ÿCÿC7 8
MaterialReference
ÿCÿC9 J
.
ÿCÿCJ K"
AddMaterialReference
ÿCÿCK _
(
ÿCÿC_ `
m_currentMaterial
ÿCÿC` q
,
ÿCÿCq r
tempFont
ÿCÿCs {
,
ÿCÿC{ |#
m_materialReferencesÿCÿC} ë
,ÿCÿCë í.
m_materialReferenceIndexLookupÿCÿCì ±
)ÿCÿC± ≤
;ÿCÿC≤ ≥&
m_materialReferenceStack
⁄C⁄C  8
.
⁄C⁄C8 9
Add
⁄C⁄C9 <
(
⁄C⁄C< ="
m_materialReferences
⁄C⁄C= Q
[
⁄C⁄CQ R$
m_currentMaterialIndex
⁄C⁄CR h
]
⁄C⁄Ch i
)
⁄C⁄Ci j
;
⁄C⁄Cj k
}
€C€C 
}
‹C‹C 
else
›C›C 
return
ﬁCﬁC "
false
ﬁCﬁC# (
;
ﬁCﬁC( ) 
m_currentFontAsset
‡C‡C *
=
‡C‡C+ ,
tempFont
‡C‡C- 5
;
‡C‡C5 6
m_fontScale
·C·C #
=
·C·C$ %
(
·C·C& '
m_currentFontSize
·C·C' 8
/
·C·C9 : 
m_currentFontAsset
·C·C; M
.
·C·CM N
faceInfo
·C·CN V
.
·C·CV W
	pointSize
·C·CW `
*
·C·Ca b 
m_currentFontAsset
·C·Cc u
.
·C·Cu v
faceInfo
·C·Cv ~
.
·C·C~ 
scale·C·C Ñ
*·C·CÖ Ü
(·C·Cá à 
m_isOrthographic·C·Cà ò
?·C·Cô ö
$num·C·Cõ ú
:·C·Cù û
$num·C·Cü £
)·C·C£ §
)·C·C§ •
;·C·C• ¶
return
„C„C 
true
„C„C #
;
„C„C# $
case
‰C‰C 
$num
‰C‰C 
:
‰C‰C  
case
ÂCÂC 
$num
ÂCÂC 
:
ÂCÂC  
{
ÊCÊC 
MaterialReference
ÁCÁC -
materialReference
ÁCÁC. ?
=
ÁCÁC@ A&
m_materialReferenceStack
ÁCÁCB Z
.
ÁCÁCZ [
Remove
ÁCÁC[ a
(
ÁCÁCa b
)
ÁCÁCb c
;
ÁCÁCc d 
m_currentFontAsset
ÈCÈC .
=
ÈCÈC/ 0
materialReference
ÈCÈC1 B
.
ÈCÈCB C
	fontAsset
ÈCÈCC L
;
ÈCÈCL M
m_currentMaterial
ÍCÍC -
=
ÍCÍC. /
materialReference
ÍCÍC0 A
.
ÍCÍCA B
material
ÍCÍCB J
;
ÍCÍCJ K$
m_currentMaterialIndex
ÎCÎC 2
=
ÎCÎC3 4
materialReference
ÎCÎC5 F
.
ÎCÎCF G
index
ÎCÎCG L
;
ÎCÎCL M
m_fontScale
ÌCÌC '
=
ÌCÌC( )
(
ÌCÌC* +
m_currentFontSize
ÌCÌC+ <
/
ÌCÌC= > 
m_currentFontAsset
ÌCÌC? Q
.
ÌCÌCQ R
faceInfo
ÌCÌCR Z
.
ÌCÌCZ [
	pointSize
ÌCÌC[ d
*
ÌCÌCe f 
m_currentFontAsset
ÌCÌCg y
.
ÌCÌCy z
faceInfoÌCÌCz Ç
.ÌCÌCÇ É
scaleÌCÌCÉ à
*ÌCÌCâ ä
(ÌCÌCã å 
m_isOrthographicÌCÌCå ú
?ÌCÌCù û
$numÌCÌCü †
:ÌCÌC° ¢
$numÌCÌC£ ß
)ÌCÌCß ®
)ÌCÌC® ©
;ÌCÌC© ™
return
ÔCÔC "
true
ÔCÔC# '
;
ÔCÔC' (
}
CC 
case
ÒCÒC 
$num
ÒCÒC "
:
ÒCÒC" #
case
ÚCÚC 
$num
ÚCÚC !
:
ÚCÚC! "
materialHashCode
ÛCÛC (
=
ÛCÛC) *
m_xmlAttribute
ÛCÛC+ 9
[
ÛCÛC9 :
$num
ÛCÛC: ;
]
ÛCÛC; <
.
ÛCÛC< =
valueHashCode
ÛCÛC= J
;
ÛCÛCJ K
if
ˆCˆC 
(
ˆCˆC 
materialHashCode
ˆCˆC ,
==
ˆCˆC- /
$num
ˆCˆC0 9
||
ˆCˆC: <
materialHashCode
ˆCˆC= M
==
ˆCˆCN P
$num
ˆCˆCQ Z
)
ˆCˆCZ [
{
˜C˜C 
m_currentMaterial
˚C˚C -
=
˚C˚C. /"
m_materialReferences
˚C˚C0 D
[
˚C˚CD E
$num
˚C˚CE F
]
˚C˚CF G
.
˚C˚CG H
material
˚C˚CH P
;
˚C˚CP Q$
m_currentMaterialIndex
¸C¸C 2
=
¸C¸C3 4
$num
¸C¸C5 6
;
¸C¸C6 7&
m_materialReferenceStack
˛C˛C 4
.
˛C˛C4 5
Add
˛C˛C5 8
(
˛C˛C8 9"
m_materialReferences
˛C˛C9 M
[
˛C˛CM N
$num
˛C˛CN O
]
˛C˛CO P
)
˛C˛CP Q
;
˛C˛CQ R
return
ÄDÄD "
true
ÄDÄD# '
;
ÄDÄD' (
}
ÅDÅD 
if
ÖDÖD 
(
ÖDÖD &
MaterialReferenceManager
ÖDÖD 4
.
ÖDÖD4 5
TryGetMaterial
ÖDÖD5 C
(
ÖDÖDC D
materialHashCode
ÖDÖDD T
,
ÖDÖDT U
out
ÖDÖDV Y
tempMaterial
ÖDÖDZ f
)
ÖDÖDf g
)
ÖDÖDg h
{
ÜDÜD 
m_currentMaterial
äDäD -
=
äDäD. /
tempMaterial
äDäD0 <
;
äDäD< =$
m_currentMaterialIndex
åDåD 2
=
åDåD3 4
MaterialReference
åDåD5 F
.
åDåDF G"
AddMaterialReference
åDåDG [
(
åDåD[ \
m_currentMaterial
åDåD\ m
,
åDåDm n!
m_currentFontAssetåDåDo Å
,åDåDÅ Ç$
m_materialReferencesåDåDÉ ó
,åDåDó ò.
m_materialReferenceIndexLookupåDåDô ∑
)åDåD∑ ∏
;åDåD∏ π&
m_materialReferenceStack
éDéD 4
.
éDéD4 5
Add
éDéD5 8
(
éDéD8 9"
m_materialReferences
éDéD9 M
[
éDéDM N$
m_currentMaterialIndex
éDéDN d
]
éDéDd e
)
éDéDe f
;
éDéDf g
}
èDèD 
else
êDêD 
{
ëDëD 
tempMaterial
ìDìD (
=
ìDìD) *
	Resources
ìDìD+ 4
.
ìDìD4 5
Load
ìDìD5 9
<
ìDìD9 :
Material
ìDìD: B
>
ìDìDB C
(
ìDìDC D
TMP_Settings
ìDìDD P
.
ìDìDP Q"
defaultFontAssetPath
ìDìDQ e
+
ìDìDf g
new
ìDìDh k
string
ìDìDl r
(
ìDìDr s
	m_htmlTag
ìDìDs |
,
ìDìD| }
m_xmlAttributeìDìD~ å
[ìDìDå ç
$numìDìDç é
]ìDìDé è
.ìDìDè ê
valueStartIndexìDìDê ü
,ìDìDü †
m_xmlAttributeìDìD° Ø
[ìDìDØ ∞
$numìDìD∞ ±
]ìDìD± ≤
.ìDìD≤ ≥
valueLengthìDìD≥ æ
)ìDìDæ ø
)ìDìDø ¿
;ìDìD¿ ¡
if
ïDïD 
(
ïDïD  
tempMaterial
ïDïD  ,
==
ïDïD- /
null
ïDïD0 4
)
ïDïD4 5
return
ñDñD  &
false
ñDñD' ,
;
ñDñD, -&
MaterialReferenceManager
úDúD 4
.
úDúD4 5
AddFontMaterial
úDúD5 D
(
úDúDD E
materialHashCode
úDúDE U
,
úDúDU V
tempMaterial
úDúDW c
)
úDúDc d
;
úDúDd e
m_currentMaterial
ûDûD -
=
ûDûD. /
tempMaterial
ûDûD0 <
;
ûDûD< =$
m_currentMaterialIndex
†D†D 2
=
†D†D3 4
MaterialReference
†D†D5 F
.
†D†DF G"
AddMaterialReference
†D†DG [
(
†D†D[ \
m_currentMaterial
†D†D\ m
,
†D†Dm n!
m_currentFontAsset†D†Do Å
,†D†DÇ É$
m_materialReferences†D†DÑ ò
,†D†Dò ô.
m_materialReferenceIndexLookup†D†Dö ∏
)†D†D∏ π
;†D†Dπ ∫&
m_materialReferenceStack
¢D¢D 4
.
¢D¢D4 5
Add
¢D¢D5 8
(
¢D¢D8 9"
m_materialReferences
¢D¢D9 M
[
¢D¢DM N$
m_currentMaterialIndex
¢D¢DN d
]
¢D¢Dd e
)
¢D¢De f
;
¢D¢Df g
}
£D£D 
return
§D§D 
true
§D§D #
;
§D§D# $
case
•D•D 
$num
•D•D "
:
•D•D" #
case
¶D¶D 
$num
¶D¶D "
:
¶D¶D" #
{
ßDßD 
MaterialReference
´D´D -
materialReference
´D´D. ?
=
´D´D@ A&
m_materialReferenceStack
´D´DB Z
.
´D´DZ [
Remove
´D´D[ a
(
´D´Da b
)
´D´Db c
;
´D´Dc d
m_currentMaterial
≠D≠D -
=
≠D≠D. /
materialReference
≠D≠D0 A
.
≠D≠DA B
material
≠D≠DB J
;
≠D≠DJ K$
m_currentMaterialIndex
ÆDÆD 2
=
ÆDÆD3 4
materialReference
ÆDÆD5 F
.
ÆDÆDF G
index
ÆDÆDG L
;
ÆDÆDL M
return
∞D∞D "
true
∞D∞D# '
;
∞D∞D' (
}
±D±D 
case
≤D≤D 
$num
≤D≤D 
:
≤D≤D  
case
≥D≥D 
$num
≥D≥D 
:
≥D≥D  
value
¥D¥D 
=
¥D¥D 
ConvertToFloat
¥D¥D  .
(
¥D¥D. /
	m_htmlTag
¥D¥D/ 8
,
¥D¥D8 9
m_xmlAttribute
¥D¥D: H
[
¥D¥DH I
$num
¥D¥DI J
]
¥D¥DJ K
.
¥D¥DK L
valueStartIndex
¥D¥DL [
,
¥D¥D[ \
m_xmlAttribute
¥D¥D] k
[
¥D¥Dk l
$num
¥D¥Dl m
]
¥D¥Dm n
.
¥D¥Dn o
valueLength
¥D¥Do z
)
¥D¥Dz {
;
¥D¥D{ |
if
∑D∑D 
(
∑D∑D 
value
∑D∑D !
==
∑D∑D" $
Int16
∑D∑D% *
.
∑D∑D* +
MinValue
∑D∑D+ 3
)
∑D∑D3 4
return
∑D∑D5 ;
false
∑D∑D< A
;
∑D∑DA B
switch
πDπD 
(
πDπD  
tagUnitType
πDπD  +
)
πDπD+ ,
{
∫D∫D 
case
ªDªD  
TagUnitType
ªDªD! ,
.
ªDªD, -
Pixels
ªDªD- 3
:
ªDªD3 4

m_xAdvance
ºDºD  *
+=
ºDºD+ -
value
ºDºD. 3
*
ºDºD4 5
(
ºDºD6 7
m_isOrthographic
ºDºD7 G
?
ºDºDH I
$num
ºDºDJ K
:
ºDºDL M
$num
ºDºDN R
)
ºDºDR S
;
ºDºDS T
return
ΩDΩD  &
true
ΩDΩD' +
;
ΩDΩD+ ,
case
æDæD  
TagUnitType
æDæD! ,
.
æDæD, -
	FontUnits
æDæD- 6
:
æDæD6 7

m_xAdvance
øDøD  *
+=
øDøD+ -
value
øDøD. 3
*
øDøD4 5
(
øDøD6 7
m_isOrthographic
øDøD7 G
?
øDøDH I
$num
øDøDJ K
:
øDøDL M
$num
øDøDN R
)
øDøDR S
*
øDøDT U
m_currentFontSize
øDøDV g
;
øDøDg h
return
¿D¿D  &
true
¿D¿D' +
;
¿D¿D+ ,
case
¡D¡D  
TagUnitType
¡D¡D! ,
.
¡D¡D, -

Percentage
¡D¡D- 7
:
¡D¡D7 8
return
√D√D  &
false
√D√D' ,
;
√D√D, -
}
ƒDƒD 
return
≈D≈D 
false
≈D≈D $
;
≈D≈D$ %
case
∆D∆D 
$num
∆D∆D 
:
∆D∆D  
case
«D«D 
$num
«D«D 
:
«D«D  
if
»D»D 
(
»D»D 
m_xmlAttribute
»D»D *
[
»D»D* +
$num
»D»D+ ,
]
»D»D, -
.
»D»D- .
valueLength
»D»D. 9
!=
»D»D: <
$num
»D»D= >
)
»D»D> ?
return
»D»D@ F
false
»D»DG L
;
»D»DL M
m_htmlColor
 D D #
.
 D D# $
a
 D D$ %
=
 D D& '
(
 D D( )
byte
 D D) -
)
 D D- .
(
 D D. /
HexToInt
 D D/ 7
(
 D D7 8
	m_htmlTag
 D D8 A
[
 D DA B
$num
 D DB C
]
 D DC D
)
 D DD E
*
 D DF G
$num
 D DH J
+
 D DK L
HexToInt
 D DM U
(
 D DU V
	m_htmlTag
 D DV _
[
 D D_ `
$num
 D D` a
]
 D Da b
)
 D Db c
)
 D Dc d
;
 D Dd e
return
ÀDÀD 
true
ÀDÀD #
;
ÀDÀD# $
case
ÕDÕD 
$num
ÕDÕD  
:
ÕDÕD  !
return
ŒDŒD 
false
ŒDŒD $
;
ŒDŒD$ %
case
œDœD 
$num
œDœD 
:
œDœD 
return
–D–D 
true
–D–D #
;
–D–D# $
case
—D—D 
$num
—D—D 
:
—D—D 
case
“D“D 
$num
“D“D 
:
“D“D 
if
”D”D 
(
”D”D 
m_isParsingText
”D”D +
&&
”D”D, .
!
”D”D/ 0,
m_isCalculatingPreferredValues
”D”D0 N
)
”D”DN O
{
‘D‘D 
int
’D’D 
index
’D’D  %
=
’D’D& '

m_textInfo
’D’D( 2
.
’D’D2 3
	linkCount
’D’D3 <
;
’D’D< =
if
◊D◊D 
(
◊D◊D  
index
◊D◊D  %
+
◊D◊D& '
$num
◊D◊D( )
>
◊D◊D* +

m_textInfo
◊D◊D, 6
.
◊D◊D6 7
linkInfo
◊D◊D7 ?
.
◊D◊D? @
Length
◊D◊D@ F
)
◊D◊DF G
TMP_TextInfo
ÿDÿD  ,
.
ÿDÿD, -
Resize
ÿDÿD- 3
(
ÿDÿD3 4
ref
ÿDÿD4 7

m_textInfo
ÿDÿD8 B
.
ÿDÿDB C
linkInfo
ÿDÿDC K
,
ÿDÿDK L
index
ÿDÿDM R
+
ÿDÿDS T
$num
ÿDÿDU V
)
ÿDÿDV W
;
ÿDÿDW X

m_textInfo
⁄D⁄D &
.
⁄D⁄D& '
linkInfo
⁄D⁄D' /
[
⁄D⁄D/ 0
index
⁄D⁄D0 5
]
⁄D⁄D5 6
.
⁄D⁄D6 7
textComponent
⁄D⁄D7 D
=
⁄D⁄DE F
this
⁄D⁄DG K
;
⁄D⁄DK L

m_textInfo
€D€D &
.
€D€D& '
linkInfo
€D€D' /
[
€D€D/ 0
index
€D€D0 5
]
€D€D5 6
.
€D€D6 7
hashCode
€D€D7 ?
=
€D€D@ A
m_xmlAttribute
€D€DB P
[
€D€DP Q
$num
€D€DQ R
]
€D€DR S
.
€D€DS T
valueHashCode
€D€DT a
;
€D€Da b

m_textInfo
‹D‹D &
.
‹D‹D& '
linkInfo
‹D‹D' /
[
‹D‹D/ 0
index
‹D‹D0 5
]
‹D‹D5 6
.
‹D‹D6 7)
linkTextfirstCharacterIndex
‹D‹D7 R
=
‹D‹DS T
m_characterCount
‹D‹DU e
;
‹D‹De f

m_textInfo
ﬁDﬁD &
.
ﬁDﬁD& '
linkInfo
ﬁDﬁD' /
[
ﬁDﬁD/ 0
index
ﬁDﬁD0 5
]
ﬁDﬁD5 6
.
ﬁDﬁD6 7'
linkIdFirstCharacterIndex
ﬁDﬁD7 P
=
ﬁDﬁDQ R

startIndex
ﬁDﬁDS ]
+
ﬁDﬁD^ _
m_xmlAttribute
ﬁDﬁD` n
[
ﬁDﬁDn o
$num
ﬁDﬁDo p
]
ﬁDﬁDp q
.
ﬁDﬁDq r
valueStartIndexﬁDﬁDr Å
;ﬁDﬁDÅ Ç

m_textInfo
ﬂDﬂD &
.
ﬂDﬂD& '
linkInfo
ﬂDﬂD' /
[
ﬂDﬂD/ 0
index
ﬂDﬂD0 5
]
ﬂDﬂD5 6
.
ﬂDﬂD6 7
linkIdLength
ﬂDﬂD7 C
=
ﬂDﬂDD E
m_xmlAttribute
ﬂDﬂDF T
[
ﬂDﬂDT U
$num
ﬂDﬂDU V
]
ﬂDﬂDV W
.
ﬂDﬂDW X
valueLength
ﬂDﬂDX c
;
ﬂDﬂDc d

m_textInfo
‡D‡D &
.
‡D‡D& '
linkInfo
‡D‡D' /
[
‡D‡D/ 0
index
‡D‡D0 5
]
‡D‡D5 6
.
‡D‡D6 7
	SetLinkID
‡D‡D7 @
(
‡D‡D@ A
	m_htmlTag
‡D‡DA J
,
‡D‡DJ K
m_xmlAttribute
‡D‡DL Z
[
‡D‡DZ [
$num
‡D‡D[ \
]
‡D‡D\ ]
.
‡D‡D] ^
valueStartIndex
‡D‡D^ m
,
‡D‡Dm n
m_xmlAttribute
‡D‡Do }
[
‡D‡D} ~
$num
‡D‡D~ 
]‡D‡D Ä
.‡D‡DÄ Å
valueLength‡D‡DÅ å
)‡D‡Då ç
;‡D‡Dç é
}
·D·D 
return
‚D‚D 
true
‚D‚D #
;
‚D‚D# $
case
„D„D 
$num
„D„D 
:
„D„D  
case
‰D‰D 
$num
‰D‰D 
:
‰D‰D  
if
ÂDÂD 
(
ÂDÂD 
m_isParsingText
ÂDÂD +
&&
ÂDÂD, .
!
ÂDÂD/ 0,
m_isCalculatingPreferredValues
ÂDÂD0 N
)
ÂDÂDN O
{
ÊDÊD 
if
ÁDÁD 
(
ÁDÁD  

m_textInfo
ÁDÁD  *
.
ÁDÁD* +
	linkCount
ÁDÁD+ 4
<
ÁDÁD5 6

m_textInfo
ÁDÁD7 A
.
ÁDÁDA B
linkInfo
ÁDÁDB J
.
ÁDÁDJ K
Length
ÁDÁDK Q
)
ÁDÁDQ R
{
ËDËD 

m_textInfo
ÈDÈD  *
.
ÈDÈD* +
linkInfo
ÈDÈD+ 3
[
ÈDÈD3 4

m_textInfo
ÈDÈD4 >
.
ÈDÈD> ?
	linkCount
ÈDÈD? H
]
ÈDÈDH I
.
ÈDÈDI J
linkTextLength
ÈDÈDJ X
=
ÈDÈDY Z
m_characterCount
ÈDÈD[ k
-
ÈDÈDl m

m_textInfo
ÈDÈDn x
.
ÈDÈDx y
linkInfoÈDÈDy Å
[ÈDÈDÅ Ç

m_textInfoÈDÈDÇ å
.ÈDÈDå ç
	linkCountÈDÈDç ñ
]ÈDÈDñ ó
.ÈDÈDó ò+
linkTextfirstCharacterIndexÈDÈDò ≥
;ÈDÈD≥ ¥

m_textInfo
ÎDÎD  *
.
ÎDÎD* +
	linkCount
ÎDÎD+ 4
+=
ÎDÎD5 7
$num
ÎDÎD8 9
;
ÎDÎD9 :
}
ÏDÏD 
}
ÌDÌD 
return
ÓDÓD 
true
ÓDÓD #
;
ÓDÓD# $
case
ÔDÔD 
$num
ÔDÔD 
:
ÔDÔD  
case
DD 
$num
DD 
:
DD  
switch
ÒDÒD 
(
ÒDÒD  
m_xmlAttribute
ÒDÒD  .
[
ÒDÒD. /
$num
ÒDÒD/ 0
]
ÒDÒD0 1
.
ÒDÒD1 2
valueHashCode
ÒDÒD2 ?
)
ÒDÒD? @
{
ÚDÚD 
case
ÛDÛD  
$num
ÛDÛD! (
:
ÛDÛD( )!
m_lineJustification
ÙDÙD  3
=
ÙDÙD4 5(
HorizontalAlignmentOptions
ÙDÙD6 P
.
ÙDÙDP Q
Left
ÙDÙDQ U
;
ÙDÙDU V&
m_lineJustificationStack
ıDıD  8
.
ıDıD8 9
Add
ıDıD9 <
(
ıDıD< =!
m_lineJustification
ıDıD= P
)
ıDıDP Q
;
ıDıDQ R
return
ˆDˆD  &
true
ˆDˆD' +
;
ˆDˆD+ ,
case
˜D˜D  
$num
˜D˜D! *
:
˜D˜D* +!
m_lineJustification
¯D¯D  3
=
¯D¯D4 5(
HorizontalAlignmentOptions
¯D¯D6 P
.
¯D¯DP Q
Right
¯D¯DQ V
;
¯D¯DV W&
m_lineJustificationStack
˘D˘D  8
.
˘D˘D8 9
Add
˘D˘D9 <
(
˘D˘D< =!
m_lineJustification
˘D˘D= P
)
˘D˘DP Q
;
˘D˘DQ R
return
˙D˙D  &
true
˙D˙D' +
;
˙D˙D+ ,
case
˚D˚D  
-
˚D˚D! "
$num
˚D˚D" +
:
˚D˚D+ ,!
m_lineJustification
¸D¸D  3
=
¸D¸D4 5(
HorizontalAlignmentOptions
¸D¸D6 P
.
¸D¸DP Q
Center
¸D¸DQ W
;
¸D¸DW X&
m_lineJustificationStack
˝D˝D  8
.
˝D˝D8 9
Add
˝D˝D9 <
(
˝D˝D< =!
m_lineJustification
˝D˝D= P
)
˝D˝DP Q
;
˝D˝DQ R
return
˛D˛D  &
true
˛D˛D' +
;
˛D˛D+ ,
case
ˇDˇD  
-
ˇDˇD! "
$num
ˇDˇD" +
:
ˇDˇD+ ,!
m_lineJustification
ÄEÄE  3
=
ÄEÄE4 5(
HorizontalAlignmentOptions
ÄEÄE6 P
.
ÄEÄEP Q
	Justified
ÄEÄEQ Z
;
ÄEÄEZ [&
m_lineJustificationStack
ÅEÅE  8
.
ÅEÅE8 9
Add
ÅEÅE9 <
(
ÅEÅE< =!
m_lineJustification
ÅEÅE= P
)
ÅEÅEP Q
;
ÅEÅEQ R
return
ÇEÇE  &
true
ÇEÇE' +
;
ÇEÇE+ ,
case
ÉEÉE  
$num
ÉEÉE! *
:
ÉEÉE* +!
m_lineJustification
ÑEÑE  3
=
ÑEÑE4 5(
HorizontalAlignmentOptions
ÑEÑE6 P
.
ÑEÑEP Q
Flush
ÑEÑEQ V
;
ÑEÑEV W&
m_lineJustificationStack
ÖEÖE  8
.
ÖEÖE8 9
Add
ÖEÖE9 <
(
ÖEÖE< =!
m_lineJustification
ÖEÖE= P
)
ÖEÖEP Q
;
ÖEÖEQ R
return
ÜEÜE  &
true
ÜEÜE' +
;
ÜEÜE+ ,
}
áEáE 
return
àEàE 
false
àEàE $
;
àEàE$ %
case
âEâE 
$num
âEâE  
:
âEâE  !
case
äEäE 
$num
äEäE 
:
äEäE  !
m_lineJustification
ãEãE +
=
ãEãE, -&
m_lineJustificationStack
ãEãE. F
.
ãEãEF G
Remove
ãEãEG M
(
ãEãEM N
)
ãEãEN O
;
ãEãEO P
return
åEåE 
true
åEåE #
;
åEåE# $
case
çEçE 
$num
çEçE 
:
çEçE  
case
éEéE 
$num
éEéE 
:
éEéE  
value
èEèE 
=
èEèE 
ConvertToFloat
èEèE  .
(
èEèE. /
	m_htmlTag
èEèE/ 8
,
èEèE8 9
m_xmlAttribute
èEèE: H
[
èEèEH I
$num
èEèEI J
]
èEèEJ K
.
èEèEK L
valueStartIndex
èEèEL [
,
èEèE[ \
m_xmlAttribute
èEèE] k
[
èEèEk l
$num
èEèEl m
]
èEèEm n
.
èEèEn o
valueLength
èEèEo z
)
èEèEz {
;
èEèE{ |
if
íEíE 
(
íEíE 
value
íEíE !
==
íEíE" $
Int16
íEíE% *
.
íEíE* +
MinValue
íEíE+ 3
)
íEíE3 4
return
íEíE5 ;
false
íEíE< A
;
íEíEA B
switch
îEîE 
(
îEîE  
tagUnitType
îEîE  +
)
îEîE+ ,
{
ïEïE 
case
ñEñE  
TagUnitType
ñEñE! ,
.
ñEñE, -
Pixels
ñEñE- 3
:
ñEñE3 4
m_width
óEóE  '
=
óEóE( )
value
óEóE* /
*
óEóE0 1
(
óEóE2 3
m_isOrthographic
óEóE3 C
?
óEóED E
$num
óEóEF G
:
óEóEH I
$num
óEóEJ N
)
óEóEN O
;
óEóEO P
break
òEòE  %
;
òEòE% &
case
ôEôE  
TagUnitType
ôEôE! ,
.
ôEôE, -
	FontUnits
ôEôE- 6
:
ôEôE6 7
return
öEöE  &
false
öEöE' ,
;
öEöE, -
case
úEúE  
TagUnitType
úEúE! ,
.
úEúE, -

Percentage
úEúE- 7
:
úEúE7 8
m_width
ùEùE  '
=
ùEùE( )
m_marginWidth
ùEùE* 7
*
ùEùE8 9
value
ùEùE: ?
/
ùEùE@ A
$num
ùEùEB E
;
ùEùEE F
break
ûEûE  %
;
ûEûE% &
}
üEüE 
return
†E†E 
true
†E†E #
;
†E†E# $
case
°E°E 
$num
°E°E  
:
°E°E  !
case
¢E¢E 
$num
¢E¢E  
:
¢E¢E  !
m_width
£E£E 
=
£E£E  !
-
£E£E" #
$num
£E£E# $
;
£E£E$ %
return
§E§E 
true
§E§E #
;
§E§E# $
case
ÃEÃE 
$num
ÃEÃE 
:
ÃEÃE  
case
ÕEÕE 
$num
ÕEÕE 
:
ÕEÕE  
if
œEœE 
(
œEœE 
	m_htmlTag
œEœE %
[
œEœE% &
$num
œEœE& '
]
œEœE' (
==
œEœE) +
$num
œEœE, .
&&
œEœE/ 1
tagCharCount
œEœE2 >
==
œEœE? A
$num
œEœEB D
)
œEœED E
{
–E–E 
m_htmlColor
—E—E '
=
—E—E( )
HexCharsToColor
—E—E* 9
(
—E—E9 :
	m_htmlTag
—E—E: C
,
—E—EC D
tagCharCount
—E—EE Q
)
—E—EQ R
;
—E—ER S
m_colorStack
“E“E (
.
“E“E( )
Add
“E“E) ,
(
“E“E, -
m_htmlColor
“E“E- 8
)
“E“E8 9
;
“E“E9 :
return
”E”E "
true
”E”E# '
;
”E”E' (
}
‘E‘E 
else
÷E÷E 
if
÷E÷E 
(
÷E÷E  !
	m_htmlTag
÷E÷E! *
[
÷E÷E* +
$num
÷E÷E+ ,
]
÷E÷E, -
==
÷E÷E. 0
$num
÷E÷E1 3
&&
÷E÷E4 6
tagCharCount
÷E÷E7 C
==
÷E÷ED F
$num
÷E÷EG I
)
÷E÷EI J
{
◊E◊E 
m_htmlColor
ÿEÿE '
=
ÿEÿE( )
HexCharsToColor
ÿEÿE* 9
(
ÿEÿE9 :
	m_htmlTag
ÿEÿE: C
,
ÿEÿEC D
tagCharCount
ÿEÿEE Q
)
ÿEÿEQ R
;
ÿEÿER S
m_colorStack
ŸEŸE (
.
ŸEŸE( )
Add
ŸEŸE) ,
(
ŸEŸE, -
m_htmlColor
ŸEŸE- 8
)
ŸEŸE8 9
;
ŸEŸE9 :
return
⁄E⁄E "
true
⁄E⁄E# '
;
⁄E⁄E' (
}
€E€E 
if
›E›E 
(
›E›E 
	m_htmlTag
›E›E %
[
›E›E% &
$num
›E›E& '
]
›E›E' (
==
›E›E) +
$num
›E›E, .
&&
›E›E/ 1
tagCharCount
›E›E2 >
==
›E›E? A
$num
›E›EB D
)
›E›ED E
{
ﬁEﬁE 
m_htmlColor
ﬂEﬂE '
=
ﬂEﬂE( )
HexCharsToColor
ﬂEﬂE* 9
(
ﬂEﬂE9 :
	m_htmlTag
ﬂEﬂE: C
,
ﬂEﬂEC D
tagCharCount
ﬂEﬂEE Q
)
ﬂEﬂEQ R
;
ﬂEﬂER S
m_colorStack
‡E‡E (
.
‡E‡E( )
Add
‡E‡E) ,
(
‡E‡E, -
m_htmlColor
‡E‡E- 8
)
‡E‡E8 9
;
‡E‡E9 :
return
·E·E "
true
·E·E# '
;
·E·E' (
}
‚E‚E 
else
‰E‰E 
if
‰E‰E 
(
‰E‰E  !
	m_htmlTag
‰E‰E! *
[
‰E‰E* +
$num
‰E‰E+ ,
]
‰E‰E, -
==
‰E‰E. 0
$num
‰E‰E1 3
&&
‰E‰E4 6
tagCharCount
‰E‰E7 C
==
‰E‰ED F
$num
‰E‰EG I
)
‰E‰EI J
{
ÂEÂE 
m_htmlColor
ÊEÊE '
=
ÊEÊE( )
HexCharsToColor
ÊEÊE* 9
(
ÊEÊE9 :
	m_htmlTag
ÊEÊE: C
,
ÊEÊEC D
tagCharCount
ÊEÊEE Q
)
ÊEÊEQ R
;
ÊEÊER S
m_colorStack
ÁEÁE (
.
ÁEÁE( )
Add
ÁEÁE) ,
(
ÁEÁE, -
m_htmlColor
ÁEÁE- 8
)
ÁEÁE8 9
;
ÁEÁE9 :
return
ËEËE "
true
ËEËE# '
;
ËEËE' (
}
ÈEÈE 
switch
ÏEÏE 
(
ÏEÏE  
m_xmlAttribute
ÏEÏE  .
[
ÏEÏE. /
$num
ÏEÏE/ 0
]
ÏEÏE0 1
.
ÏEÏE1 2
valueHashCode
ÏEÏE2 ?
)
ÏEÏE? @
{
ÌEÌE 
case
ÓEÓE  
$num
ÓEÓE! '
:
ÓEÓE' (
m_htmlColor
ÔEÔE  +
=
ÔEÔE, -
Color
ÔEÔE. 3
.
ÔEÔE3 4
red
ÔEÔE4 7
;
ÔEÔE7 8
m_colorStack
EE  ,
.
EE, -
Add
EE- 0
(
EE0 1
m_htmlColor
EE1 <
)
EE< =
;
EE= >
return
ÒEÒE  &
true
ÒEÒE' +
;
ÒEÒE+ ,
case
ÚEÚE  
-
ÚEÚE! "
$num
ÚEÚE" +
:
ÚEÚE+ ,
m_htmlColor
ÛEÛE  +
=
ÛEÛE, -
new
ÛEÛE. 1
Color32
ÛEÛE2 9
(
ÛEÛE9 :
$num
ÛEÛE: =
,
ÛEÛE= >
$num
ÛEÛE? B
,
ÛEÛEB C
$num
ÛEÛED G
,
ÛEÛEG H
$num
ÛEÛEI L
)
ÛEÛEL M
;
ÛEÛEM N
m_colorStack
ÙEÙE  ,
.
ÙEÙE, -
Add
ÙEÙE- 0
(
ÙEÙE0 1
m_htmlColor
ÙEÙE1 <
)
ÙEÙE< =
;
ÙEÙE= >
return
ıEıE  &
true
ıEıE' +
;
ıEıE+ ,
case
ˆEˆE  
$num
ˆEˆE! (
:
ˆEˆE( )
m_htmlColor
˜E˜E  +
=
˜E˜E, -
Color
˜E˜E. 3
.
˜E˜E3 4
blue
˜E˜E4 8
;
˜E˜E8 9
m_colorStack
¯E¯E  ,
.
¯E¯E, -
Add
¯E¯E- 0
(
¯E¯E0 1
m_htmlColor
¯E¯E1 <
)
¯E¯E< =
;
¯E¯E= >
return
˘E˘E  &
true
˘E˘E' +
;
˘E˘E+ ,
case
˙E˙E  
$num
˙E˙E! (
:
˙E˙E( )
m_htmlColor
˚E˚E  +
=
˚E˚E, -
new
˚E˚E. 1
Color32
˚E˚E2 9
(
˚E˚E9 :
$num
˚E˚E: =
,
˚E˚E= >
$num
˚E˚E? B
,
˚E˚EB C
$num
˚E˚ED G
,
˚E˚EG H
$num
˚E˚EI L
)
˚E˚EL M
;
˚E˚EM N
m_colorStack
¸E¸E  ,
.
¸E¸E, -
Add
¸E¸E- 0
(
¸E¸E0 1
m_htmlColor
¸E¸E1 <
)
¸E¸E< =
;
¸E¸E= >
return
˝E˝E  &
true
˝E˝E' +
;
˝E˝E+ ,
case
˛E˛E  
$num
˛E˛E! *
:
˛E˛E* +
m_htmlColor
ˇEˇE  +
=
ˇEˇE, -
Color
ˇEˇE. 3
.
ˇEˇE3 4
black
ˇEˇE4 9
;
ˇEˇE9 :
m_colorStack
ÄFÄF  ,
.
ÄFÄF, -
Add
ÄFÄF- 0
(
ÄFÄF0 1
m_htmlColor
ÄFÄF1 <
)
ÄFÄF< =
;
ÄFÄF= >
return
ÅFÅF  &
true
ÅFÅF' +
;
ÅFÅF+ ,
case
ÇFÇF  
$num
ÇFÇF! *
:
ÇFÇF* +
m_htmlColor
ÉFÉF  +
=
ÉFÉF, -
Color
ÉFÉF. 3
.
ÉFÉF3 4
green
ÉFÉF4 9
;
ÉFÉF9 :
m_colorStack
ÑFÑF  ,
.
ÑFÑF, -
Add
ÑFÑF- 0
(
ÑFÑF0 1
m_htmlColor
ÑFÑF1 <
)
ÑFÑF< =
;
ÑFÑF= >
return
ÖFÖF  &
true
ÖFÖF' +
;
ÖFÖF+ ,
case
ÜFÜF  
$num
ÜFÜF! *
:
ÜFÜF* +
m_htmlColor
áFáF  +
=
áFáF, -
Color
áFáF. 3
.
áFáF3 4
white
áFáF4 9
;
áFáF9 :
m_colorStack
àFàF  ,
.
àFàF, -
Add
àFàF- 0
(
àFàF0 1
m_htmlColor
àFàF1 <
)
àFàF< =
;
àFàF= >
return
âFâF  &
true
âFâF' +
;
âFâF+ ,
case
äFäF  
$num
äFäF! )
:
äFäF) *
m_htmlColor
ãFãF  +
=
ãFãF, -
new
ãFãF. 1
Color32
ãFãF2 9
(
ãFãF9 :
$num
ãFãF: =
,
ãFãF= >
$num
ãFãF? B
,
ãFãFB C
$num
ãFãFD E
,
ãFãFE F
$num
ãFãFG J
)
ãFãFJ K
;
ãFãFK L
m_colorStack
åFåF  ,
.
åFåF, -
Add
åFåF- 0
(
åFåF0 1
m_htmlColor
åFåF1 <
)
åFåF< =
;
åFåF= >
return
çFçF  &
true
çFçF' +
;
çFçF+ ,
case
éFéF  
-
éFéF! "
$num
éFéF" *
:
éFéF* +
m_htmlColor
èFèF  +
=
èFèF, -
new
èFèF. 1
Color32
èFèF2 9
(
èFèF9 :
$num
èFèF: =
,
èFèF= >
$num
èFèF? A
,
èFèFA B
$num
èFèFC F
,
èFèFF G
$num
èFèFH K
)
èFèFK L
;
èFèFL M
m_colorStack
êFêF  ,
.
êFêF, -
Add
êFêF- 0
(
êFêF0 1
m_htmlColor
êFêF1 <
)
êFêF< =
;
êFêF= >
return
ëFëF  &
true
ëFëF' +
;
ëFëF+ ,
case
íFíF  
$num
íFíF! *
:
íFíF* +
m_htmlColor
ìFìF  +
=
ìFìF, -
Color
ìFìF. 3
.
ìFìF3 4
yellow
ìFìF4 :
;
ìFìF: ;
m_colorStack
îFîF  ,
.
îFîF, -
Add
îFîF- 0
(
îFîF0 1
m_htmlColor
îFîF1 <
)
îFîF< =
;
îFîF= >
return
ïFïF  &
true
ïFïF' +
;
ïFïF+ ,
}
ñFñF 
return
óFóF 
false
óFóF $
;
óFóF$ %
case
ôFôF 
$num
ôFôF "
:
ôFôF" #
case
öFöF 
$num
öFöF !
:
öFöF! "
int
õFõF $
gradientPresetHashCode
õFõF 2
=
õFõF3 4
m_xmlAttribute
õFõF5 C
[
õFõFC D
$num
õFõFD E
]
õFõFE F
.
õFõFF G
valueHashCode
õFõFG T
;
õFõFT U
TMP_ColorGradient
úFúF )%
tempColorGradientPreset
úFúF* A
;
úFúFA B
if
üFüF 
(
üFüF &
MaterialReferenceManager
üFüF 4
.
üFüF4 5'
TryGetColorGradientPreset
üFüF5 N
(
üFüFN O$
gradientPresetHashCode
üFüFO e
,
üFüFe f
out
üFüFg j&
tempColorGradientPresetüFüFk Ç
)üFüFÇ É
)üFüFÉ Ñ
{
†F†F #
m_colorGradientPreset
°F°F 1
=
°F°F2 3%
tempColorGradientPreset
°F°F4 K
;
°F°FK L
}
¢F¢F 
else
£F£F 
{
§F§F 
if
¶F¶F 
(
¶F¶F  %
tempColorGradientPreset
¶F¶F  7
==
¶F¶F8 :
null
¶F¶F; ?
)
¶F¶F? @
{
ßFßF %
tempColorGradientPreset
®F®F  7
=
®F®F8 9
	Resources
®F®F: C
.
®F®FC D
Load
®F®FD H
<
®F®FH I
TMP_ColorGradient
®F®FI Z
>
®F®FZ [
(
®F®F[ \
TMP_Settings
®F®F\ h
.
®F®Fh i.
defaultColorGradientPresetsPath®F®Fi à
+®F®Fâ ä
new®F®Fã é
string®F®Fè ï
(®F®Fï ñ
	m_htmlTag®F®Fñ ü
,®F®Fü †
m_xmlAttribute®F®F° Ø
[®F®FØ ∞
$num®F®F∞ ±
]®F®F± ≤
.®F®F≤ ≥
valueStartIndex®F®F≥ ¬
,®F®F¬ √
m_xmlAttribute®F®Fƒ “
[®F®F“ ”
$num®F®F” ‘
]®F®F‘ ’
.®F®F’ ÷
valueLength®F®F÷ ·
)®F®F· ‚
)®F®F‚ „
;®F®F„ ‰
}
©F©F 
if
´F´F 
(
´F´F  %
tempColorGradientPreset
´F´F  7
==
´F´F8 :
null
´F´F; ?
)
´F´F? @
return
¨F¨F  &
false
¨F¨F' ,
;
¨F¨F, -&
MaterialReferenceManager
ÆFÆF 4
.
ÆFÆF4 5$
AddColorGradientPreset
ÆFÆF5 K
(
ÆFÆFK L$
gradientPresetHashCode
ÆFÆFL b
,
ÆFÆFb c%
tempColorGradientPreset
ÆFÆFd {
)
ÆFÆF{ |
;
ÆFÆF| }#
m_colorGradientPreset
ØFØF 1
=
ØFØF2 3%
tempColorGradientPreset
ØFØF4 K
;
ØFØFK L
}
∞F∞F +
m_colorGradientPresetIsTinted
≤F≤F 5
=
≤F≤F6 7
false
≤F≤F8 =
;
≤F≤F= >
for
µFµF 
(
µFµF 
int
µFµF  
i
µFµF! "
=
µFµF# $
$num
µFµF% &
;
µFµF& '
i
µFµF( )
<
µFµF* +
m_xmlAttribute
µFµF, :
.
µFµF: ;
Length
µFµF; A
&&
µFµFB D
m_xmlAttribute
µFµFE S
[
µFµFS T
i
µFµFT U
]
µFµFU V
.
µFµFV W
nameHashCode
µFµFW c
!=
µFµFd f
$num
µFµFg h
;
µFµFh i
i
µFµFj k
++
µFµFk m
)
µFµFm n
{
∂F∂F 
int
∏F∏F 
nameHashCode
∏F∏F  ,
=
∏F∏F- .
m_xmlAttribute
∏F∏F/ =
[
∏F∏F= >
i
∏F∏F> ?
]
∏F∏F? @
.
∏F∏F@ A
nameHashCode
∏F∏FA M
;
∏F∏FM N
switch
∫F∫F "
(
∫F∫F# $
nameHashCode
∫F∫F$ 0
)
∫F∫F0 1
{
ªFªF 
case
ºFºF  $
$num
ºFºF% *
:
ºFºF* +
case
ΩFΩF  $
$num
ΩFΩF% *
:
ΩFΩF* ++
m_colorGradientPresetIsTinted
æFæF$ A
=
æFæFB C
ConvertToFloat
æFæFD R
(
æFæFR S
	m_htmlTag
æFæFS \
,
æFæF\ ]
m_xmlAttribute
æFæF^ l
[
æFæFl m
i
æFæFm n
]
æFæFn o
.
æFæFo p
valueStartIndex
æFæFp 
,æFæF Ä
m_xmlAttributeæFæFÅ è
[æFæFè ê
iæFæFê ë
]æFæFë í
.æFæFí ì
valueLengthæFæFì û
)æFæFû ü
!=æFæF† ¢
$numæFæF£ §
;æFæF§ •
break
øFøF$ )
;
øFøF) *
}
¿F¿F 
}
¡F¡F "
m_colorGradientStack
√F√F ,
.
√F√F, -
Add
√F√F- 0
(
√F√F0 1#
m_colorGradientPreset
√F√F1 F
)
√F√FF G
;
√F√FG H
return
«F«F 
true
«F«F #
;
«F«F# $
case
…F…F 
$num
…F…F "
:
…F…F" #
case
 F F 
$num
 F F "
:
 F F" ##
m_colorGradientPreset
ÀFÀF -
=
ÀFÀF. /"
m_colorGradientStack
ÀFÀF0 D
.
ÀFÀFD E
Remove
ÀFÀFE K
(
ÀFÀFK L
)
ÀFÀFL M
;
ÀFÀFM N
return
ÃFÃF 
true
ÃFÃF #
;
ÃFÃF# $
case
ŒFŒF 
$num
ŒFŒF  
:
ŒFŒF  !
case
œFœF 
$num
œFœF  
:
œFœF  !
value
–F–F 
=
–F–F 
ConvertToFloat
–F–F  .
(
–F–F. /
	m_htmlTag
–F–F/ 8
,
–F–F8 9
m_xmlAttribute
–F–F: H
[
–F–FH I
$num
–F–FI J
]
–F–FJ K
.
–F–FK L
valueStartIndex
–F–FL [
,
–F–F[ \
m_xmlAttribute
–F–F] k
[
–F–Fk l
$num
–F–Fl m
]
–F–Fm n
.
–F–Fn o
valueLength
–F–Fo z
)
–F–Fz {
;
–F–F{ |
if
”F”F 
(
”F”F 
value
”F”F !
==
”F”F" $
Int16
”F”F% *
.
”F”F* +
MinValue
”F”F+ 3
)
”F”F3 4
return
”F”F5 ;
false
”F”F< A
;
”F”FA B
switch
’F’F 
(
’F’F  
tagUnitType
’F’F  +
)
’F’F+ ,
{
÷F÷F 
case
◊F◊F  
TagUnitType
◊F◊F! ,
.
◊F◊F, -
Pixels
◊F◊F- 3
:
◊F◊F3 4

m_cSpacing
ÿFÿF  *
=
ÿFÿF+ ,
value
ÿFÿF- 2
*
ÿFÿF3 4
(
ÿFÿF5 6
m_isOrthographic
ÿFÿF6 F
?
ÿFÿFG H
$num
ÿFÿFI J
:
ÿFÿFK L
$num
ÿFÿFM Q
)
ÿFÿFQ R
;
ÿFÿFR S
break
ŸFŸF  %
;
ŸFŸF% &
case
⁄F⁄F  
TagUnitType
⁄F⁄F! ,
.
⁄F⁄F, -
	FontUnits
⁄F⁄F- 6
:
⁄F⁄F6 7

m_cSpacing
€F€F  *
=
€F€F+ ,
value
€F€F- 2
*
€F€F3 4
(
€F€F5 6
m_isOrthographic
€F€F6 F
?
€F€FG H
$num
€F€FI J
:
€F€FK L
$num
€F€FM Q
)
€F€FQ R
*
€F€FS T
m_currentFontSize
€F€FU f
;
€F€Ff g
break
‹F‹F  %
;
‹F‹F% &
case
›F›F  
TagUnitType
›F›F! ,
.
›F›F, -

Percentage
›F›F- 7
:
›F›F7 8
return
ﬁFﬁF  &
false
ﬁFﬁF' ,
;
ﬁFﬁF, -
}
ﬂFﬂF 
return
‡F‡F 
true
‡F‡F #
;
‡F‡F# $
case
·F·F 
$num
·F·F  
:
·F·F  !
case
‚F‚F 
$num
‚F‚F  
:
‚F‚F  !
if
„F„F 
(
„F„F 
!
„F„F 
m_isParsingText
„F„F ,
)
„F„F, -
return
„F„F. 4
true
„F„F5 9
;
„F„F9 :
if
ÊFÊF 
(
ÊFÊF 
m_characterCount
ÊFÊF ,
>
ÊFÊF- .
$num
ÊFÊF/ 0
)
ÊFÊF0 1
{
ÁFÁF 

m_xAdvance
ËFËF &
-=
ËFËF' )

m_cSpacing
ËFËF* 4
;
ËFËF4 5

m_textInfo
ÈFÈF &
.
ÈFÈF& '
characterInfo
ÈFÈF' 4
[
ÈFÈF4 5
m_characterCount
ÈFÈF5 E
-
ÈFÈFF G
$num
ÈFÈFH I
]
ÈFÈFI J
.
ÈFÈFJ K
xAdvance
ÈFÈFK S
=
ÈFÈFT U

m_xAdvance
ÈFÈFV `
;
ÈFÈF` a
}
ÍFÍF 

m_cSpacing
ÎFÎF "
=
ÎFÎF# $
$num
ÎFÎF% &
;
ÎFÎF& '
return
ÏFÏF 
true
ÏFÏF #
;
ÏFÏF# $
case
ÌFÌF 
$num
ÌFÌF  
:
ÌFÌF  !
case
ÓFÓF 
$num
ÓFÓF  
:
ÓFÓF  !
value
ÔFÔF 
=
ÔFÔF 
ConvertToFloat
ÔFÔF  .
(
ÔFÔF. /
	m_htmlTag
ÔFÔF/ 8
,
ÔFÔF8 9
m_xmlAttribute
ÔFÔF: H
[
ÔFÔFH I
$num
ÔFÔFI J
]
ÔFÔFJ K
.
ÔFÔFK L
valueStartIndex
ÔFÔFL [
,
ÔFÔF[ \
m_xmlAttribute
ÔFÔF] k
[
ÔFÔFk l
$num
ÔFÔFl m
]
ÔFÔFm n
.
ÔFÔFn o
valueLength
ÔFÔFo z
)
ÔFÔFz {
;
ÔFÔF{ |
if
ÚFÚF 
(
ÚFÚF 
value
ÚFÚF !
==
ÚFÚF" $
Int16
ÚFÚF% *
.
ÚFÚF* +
MinValue
ÚFÚF+ 3
)
ÚFÚF3 4
return
ÚFÚF5 ;
false
ÚFÚF< A
;
ÚFÚFA B
switch
ÙFÙF 
(
ÙFÙF  
tagUnitType
ÙFÙF  +
)
ÙFÙF+ ,
{
ıFıF 
case
ˆFˆF  
TagUnitType
ˆFˆF! ,
.
ˆFˆF, -
Pixels
ˆFˆF- 3
:
ˆFˆF3 4
m_monoSpacing
˜F˜F  -
=
˜F˜F. /
value
˜F˜F0 5
*
˜F˜F6 7
(
˜F˜F8 9
m_isOrthographic
˜F˜F9 I
?
˜F˜FJ K
$num
˜F˜FL M
:
˜F˜FN O
$num
˜F˜FP T
)
˜F˜FT U
;
˜F˜FU V
break
¯F¯F  %
;
¯F¯F% &
case
˘F˘F  
TagUnitType
˘F˘F! ,
.
˘F˘F, -
	FontUnits
˘F˘F- 6
:
˘F˘F6 7
m_monoSpacing
˙F˙F  -
=
˙F˙F. /
value
˙F˙F0 5
*
˙F˙F6 7
(
˙F˙F8 9
m_isOrthographic
˙F˙F9 I
?
˙F˙FJ K
$num
˙F˙FL M
:
˙F˙FN O
$num
˙F˙FP T
)
˙F˙FT U
*
˙F˙FV W
m_currentFontSize
˙F˙FX i
;
˙F˙Fi j
break
˚F˚F  %
;
˚F˚F% &
case
¸F¸F  
TagUnitType
¸F¸F! ,
.
¸F¸F, -

Percentage
¸F¸F- 7
:
¸F¸F7 8
return
˝F˝F  &
false
˝F˝F' ,
;
˝F˝F, -
}
˛F˛F 
return
ˇFˇF 
true
ˇFˇF #
;
ˇFˇF# $
case
ÄGÄG 
$num
ÄGÄG  
:
ÄGÄG  !
case
ÅGÅG 
$num
ÅGÅG  
:
ÅGÅG  !
m_monoSpacing
ÇGÇG %
=
ÇGÇG& '
$num
ÇGÇG( )
;
ÇGÇG) *
return
ÉGÉG 
true
ÉGÉG #
;
ÉGÉG# $
case
ÑGÑG 
$num
ÑGÑG 
:
ÑGÑG  
return
ÖGÖG 
false
ÖGÖG $
;
ÖGÖG$ %
case
ÜGÜG 
$num
ÜGÜG  
:
ÜGÜG  !
case
áGáG 
$num
áGáG 
:
áGáG  
m_htmlColor
àGàG #
=
àGàG$ %
m_colorStack
àGàG& 2
.
àGàG2 3
Remove
àGàG3 9
(
àGàG9 :
)
àGàG: ;
;
àGàG; <
return
âGâG 
true
âGâG #
;
âGâG# $
case
äGäG 
$num
äGäG  
:
äGäG  !
case
ãGãG 
$num
ãGãG  
:
ãGãG  !
value
åGåG 
=
åGåG 
ConvertToFloat
åGåG  .
(
åGåG. /
	m_htmlTag
åGåG/ 8
,
åGåG8 9
m_xmlAttribute
åGåG: H
[
åGåGH I
$num
åGåGI J
]
åGåGJ K
.
åGåGK L
valueStartIndex
åGåGL [
,
åGåG[ \
m_xmlAttribute
åGåG] k
[
åGåGk l
$num
åGåGl m
]
åGåGm n
.
åGåGn o
valueLength
åGåGo z
)
åGåGz {
;
åGåG{ |
if
èGèG 
(
èGèG 
value
èGèG !
==
èGèG" $
Int16
èGèG% *
.
èGèG* +
MinValue
èGèG+ 3
)
èGèG3 4
return
èGèG5 ;
false
èGèG< A
;
èGèGA B
switch
ëGëG 
(
ëGëG  
tagUnitType
ëGëG  +
)
ëGëG+ ,
{
íGíG 
case
ìGìG  
TagUnitType
ìGìG! ,
.
ìGìG, -
Pixels
ìGìG- 3
:
ìGìG3 4

tag_Indent
îGîG  *
=
îGîG+ ,
value
îGîG- 2
*
îGîG3 4
(
îGîG5 6
m_isOrthographic
îGîG6 F
?
îGîGG H
$num
îGîGI J
:
îGîGK L
$num
îGîGM Q
)
îGîGQ R
;
îGîGR S
break
ïGïG  %
;
ïGïG% &
case
ñGñG  
TagUnitType
ñGñG! ,
.
ñGñG, -
	FontUnits
ñGñG- 6
:
ñGñG6 7

tag_Indent
óGóG  *
=
óGóG+ ,
value
óGóG- 2
*
óGóG3 4
(
óGóG5 6
m_isOrthographic
óGóG6 F
?
óGóGG H
$num
óGóGI J
:
óGóGK L
$num
óGóGM Q
)
óGóGQ R
*
óGóGS T
m_currentFontSize
óGóGU f
;
óGóGf g
break
òGòG  %
;
òGòG% &
case
ôGôG  
TagUnitType
ôGôG! ,
.
ôGôG, -

Percentage
ôGôG- 7
:
ôGôG7 8

tag_Indent
öGöG  *
=
öGöG+ ,
m_marginWidth
öGöG- :
*
öGöG; <
value
öGöG= B
/
öGöGC D
$num
öGöGE H
;
öGöGH I
break
õGõG  %
;
õGõG% &
}
úGúG 
m_indentStack
ùGùG %
.
ùGùG% &
Add
ùGùG& )
(
ùGùG) *

tag_Indent
ùGùG* 4
)
ùGùG4 5
;
ùGùG5 6

m_xAdvance
üGüG "
=
üGüG# $

tag_Indent
üGüG% /
;
üGüG/ 0
return
†G†G 
true
†G†G #
;
†G†G# $
case
°G°G 
$num
°G°G  
:
°G°G  !
case
¢G¢G 
$num
¢G¢G  
:
¢G¢G  !

tag_Indent
£G£G "
=
£G£G# $
m_indentStack
£G£G% 2
.
£G£G2 3
Remove
£G£G3 9
(
£G£G9 :
)
£G£G: ;
;
£G£G; <
return
•G•G 
true
•G•G #
;
•G•G# $
case
¶G¶G 
$num
¶G¶G #
:
¶G¶G# $
case
ßGßG 
-
ßGßG 
$num
ßGßG #
:
ßGßG# $
value
®G®G 
=
®G®G 
ConvertToFloat
®G®G  .
(
®G®G. /
	m_htmlTag
®G®G/ 8
,
®G®G8 9
m_xmlAttribute
®G®G: H
[
®G®GH I
$num
®G®GI J
]
®G®GJ K
.
®G®GK L
valueStartIndex
®G®GL [
,
®G®G[ \
m_xmlAttribute
®G®G] k
[
®G®Gk l
$num
®G®Gl m
]
®G®Gm n
.
®G®Gn o
valueLength
®G®Go z
)
®G®Gz {
;
®G®G{ |
if
´G´G 
(
´G´G 
value
´G´G !
==
´G´G" $
Int16
´G´G% *
.
´G´G* +
MinValue
´G´G+ 3
)
´G´G3 4
return
´G´G5 ;
false
´G´G< A
;
´G´GA B
switch
≠G≠G 
(
≠G≠G  
tagUnitType
≠G≠G  +
)
≠G≠G+ ,
{
ÆGÆG 
case
ØGØG  
TagUnitType
ØGØG! ,
.
ØGØG, -
Pixels
ØGØG- 3
:
ØGØG3 4
tag_LineIndent
∞G∞G  .
=
∞G∞G/ 0
value
∞G∞G1 6
*
∞G∞G7 8
(
∞G∞G9 :
m_isOrthographic
∞G∞G: J
?
∞G∞GK L
$num
∞G∞GM N
:
∞G∞GO P
$num
∞G∞GQ U
)
∞G∞GU V
;
∞G∞GV W
break
±G±G  %
;
±G±G% &
case
≤G≤G  
TagUnitType
≤G≤G! ,
.
≤G≤G, -
	FontUnits
≤G≤G- 6
:
≤G≤G6 7
tag_LineIndent
≥G≥G  .
=
≥G≥G/ 0
value
≥G≥G1 6
*
≥G≥G7 8
(
≥G≥G9 :
m_isOrthographic
≥G≥G: J
?
≥G≥GK L
$num
≥G≥GM N
:
≥G≥GO P
$num
≥G≥GQ U
)
≥G≥GU V
*
≥G≥GW X
m_currentFontSize
≥G≥GY j
;
≥G≥Gj k
break
¥G¥G  %
;
¥G¥G% &
case
µGµG  
TagUnitType
µGµG! ,
.
µGµG, -

Percentage
µGµG- 7
:
µGµG7 8
tag_LineIndent
∂G∂G  .
=
∂G∂G/ 0
m_marginWidth
∂G∂G1 >
*
∂G∂G? @
value
∂G∂GA F
/
∂G∂GG H
$num
∂G∂GI L
;
∂G∂GL M
break
∑G∑G  %
;
∑G∑G% &
}
∏G∏G 

m_xAdvance
∫G∫G "
+=
∫G∫G# %
tag_LineIndent
∫G∫G& 4
;
∫G∫G4 5
return
ªGªG 
true
ªGªG #
;
ªGªG# $
case
ºGºG 
-
ºGºG 
$num
ºGºG #
:
ºGºG# $
case
ΩGΩG 
$num
ΩGΩG #
:
ΩGΩG# $
tag_LineIndent
æGæG &
=
æGæG' (
$num
æGæG) *
;
æGæG* +
return
øGøG 
true
øGøG #
;
øGøG# $
case
¿G¿G 
$num
¿G¿G  
:
¿G¿G  !
case
¡G¡G 
$num
¡G¡G  
:
¡G¡G  !
int
¬G¬G !
spriteAssetHashCode
¬G¬G /
=
¬G¬G0 1
m_xmlAttribute
¬G¬G2 @
[
¬G¬G@ A
$num
¬G¬GA B
]
¬G¬GB C
.
¬G¬GC D
valueHashCode
¬G¬GD Q
;
¬G¬GQ R
TMP_SpriteAsset
√G√G '
tempSpriteAsset
√G√G( 7
;
√G√G7 8
m_spriteIndex
ƒGƒG %
=
ƒGƒG& '
-
ƒGƒG( )
$num
ƒGƒG) *
;
ƒGƒG* +
if
«G«G 
(
«G«G 
m_xmlAttribute
«G«G *
[
«G«G* +
$num
«G«G+ ,
]
«G«G, -
.
«G«G- .
	valueType
«G«G. 7
==
«G«G8 :
TagValueType
«G«G; G
.
«G«GG H
None
«G«GH L
||
«G«GM O
m_xmlAttribute
«G«GP ^
[
«G«G^ _
$num
«G«G_ `
]
«G«G` a
.
«G«Ga b
	valueType
«G«Gb k
==
«G«Gl n
TagValueType
«G«Go {
.
«G«G{ |
NumericalValue«G«G| ä
)«G«Gä ã
{
»G»G 
if
 G G 
(
 G G  
m_spriteAsset
 G G  -
!=
 G G. 0
null
 G G1 5
)
 G G5 6
{
ÀGÀG "
m_currentSpriteAsset
ÃGÃG  4
=
ÃGÃG5 6
m_spriteAsset
ÃGÃG7 D
;
ÃGÃGD E
}
ÕGÕG 
else
ŒGŒG  
if
ŒGŒG! #
(
ŒGŒG$ %"
m_defaultSpriteAsset
ŒGŒG% 9
!=
ŒGŒG: <
null
ŒGŒG= A
)
ŒGŒGA B
{
œGœG "
m_currentSpriteAsset
–G–G  4
=
–G–G5 6"
m_defaultSpriteAsset
–G–G7 K
;
–G–GK L
}
—G—G 
else
“G“G  
if
“G“G! #
(
“G“G$ %"
m_defaultSpriteAsset
“G“G% 9
==
“G“G: <
null
“G“G= A
)
“G“GA B
{
”G”G 
if
‘G‘G  "
(
‘G‘G# $
TMP_Settings
‘G‘G$ 0
.
‘G‘G0 1 
defaultSpriteAsset
‘G‘G1 C
!=
‘G‘GD F
null
‘G‘GG K
)
‘G‘GK L"
m_defaultSpriteAsset
’G’G$ 8
=
’G’G9 :
TMP_Settings
’G’G; G
.
’G’GG H 
defaultSpriteAsset
’G’GH Z
;
’G’GZ [
else
÷G÷G  $"
m_defaultSpriteAsset
◊G◊G$ 8
=
◊G◊G9 :
	Resources
◊G◊G; D
.
◊G◊GD E
Load
◊G◊GE I
<
◊G◊GI J
TMP_SpriteAsset
◊G◊GJ Y
>
◊G◊GY Z
(
◊G◊GZ [
$str
◊G◊G[ 
)◊G◊G Ä
;◊G◊GÄ Å"
m_currentSpriteAsset
ŸGŸG  4
=
ŸGŸG5 6"
m_defaultSpriteAsset
ŸGŸG7 K
;
ŸGŸGK L
}
⁄G⁄G 
if
›G›G 
(
›G›G  "
m_currentSpriteAsset
›G›G  4
==
›G›G5 7
null
›G›G8 <
)
›G›G< =
return
ﬁGﬁG  &
false
ﬁGﬁG' ,
;
ﬁGﬁG, -
}
ﬂGﬂG 
else
‡G‡G 
{
·G·G 
if
„G„G 
(
„G„G  &
MaterialReferenceManager
„G„G  8
.
„G„G8 9
TryGetSpriteAsset
„G„G9 J
(
„G„GJ K!
spriteAssetHashCode
„G„GK ^
,
„G„G^ _
out
„G„G` c
tempSpriteAsset
„G„Gd s
)
„G„Gs t
)
„G„Gt u
{
‰G‰G "
m_currentSpriteAsset
ÂGÂG  4
=
ÂGÂG5 6
tempSpriteAsset
ÂGÂG7 F
;
ÂGÂGF G
}
ÊGÊG 
else
ÁGÁG  
{
ËGËG 
if
ÍGÍG  "
(
ÍGÍG# $
tempSpriteAsset
ÍGÍG$ 3
==
ÍGÍG4 6
null
ÍGÍG7 ;
)
ÍGÍG; <
{
ÎGÎG  !
tempSpriteAsset
ÌGÌG$ 3
=
ÌGÌG4 5"
OnSpriteAssetRequest
ÌGÌG6 J
?
ÌGÌGJ K
.
ÌGÌGK L
Invoke
ÌGÌGL R
(
ÌGÌGR S!
spriteAssetHashCode
ÌGÌGS f
,
ÌGÌGf g
new
ÌGÌGh k
string
ÌGÌGl r
(
ÌGÌGr s
	m_htmlTag
ÌGÌGs |
,
ÌGÌG| }
m_xmlAttributeÌGÌG~ å
[ÌGÌGå ç
$numÌGÌGç é
]ÌGÌGé è
.ÌGÌGè ê
valueStartIndexÌGÌGê ü
,ÌGÌGü †
m_xmlAttributeÌGÌG° Ø
[ÌGÌGØ ∞
$numÌGÌG∞ ±
]ÌGÌG± ≤
.ÌGÌG≤ ≥
valueLengthÌGÌG≥ æ
)ÌGÌGæ ø
)ÌGÌGø ¿
;ÌGÌG¿ ¡
if
ÔGÔG$ &
(
ÔGÔG' (
tempSpriteAsset
ÔGÔG( 7
==
ÔGÔG8 :
null
ÔGÔG; ?
)
ÔGÔG? @
tempSpriteAsset
GG( 7
=
GG8 9
	Resources
GG: C
.
GGC D
Load
GGD H
<
GGH I
TMP_SpriteAsset
GGI X
>
GGX Y
(
GGY Z
TMP_Settings
GGZ f
.
GGf g$
defaultSpriteAssetPath
GGg }
+
GG~ 
newGGÄ É
stringGGÑ ä
(GGä ã
	m_htmlTagGGã î
,GGî ï
m_xmlAttributeGGñ §
[GG§ •
$numGG• ¶
]GG¶ ß
.GGß ®
valueStartIndexGG® ∑
,GG∑ ∏
m_xmlAttributeGGπ «
[GG« »
$numGG» …
]GG…  
.GG  À
valueLengthGGÀ ÷
)GG÷ ◊
)GG◊ ÿ
;GGÿ Ÿ
}
ÒGÒG  !
if
ÛGÛG  "
(
ÛGÛG# $
tempSpriteAsset
ÛGÛG$ 3
==
ÛGÛG4 6
null
ÛGÛG7 ;
)
ÛGÛG; <
return
ÙGÙG$ *
false
ÙGÙG+ 0
;
ÙGÙG0 1&
MaterialReferenceManager
˜G˜G  8
.
˜G˜G8 9
AddSpriteAsset
˜G˜G9 G
(
˜G˜GG H!
spriteAssetHashCode
˜G˜GH [
,
˜G˜G[ \
tempSpriteAsset
˜G˜G] l
)
˜G˜Gl m
;
˜G˜Gm n"
m_currentSpriteAsset
¯G¯G  4
=
¯G¯G5 6
tempSpriteAsset
¯G¯G7 F
;
¯G¯GF G
}
˘G˘G 
}
˙G˙G 
if
˝G˝G 
(
˝G˝G 
m_xmlAttribute
˝G˝G *
[
˝G˝G* +
$num
˝G˝G+ ,
]
˝G˝G, -
.
˝G˝G- .
	valueType
˝G˝G. 7
==
˝G˝G8 :
TagValueType
˝G˝G; G
.
˝G˝GG H
NumericalValue
˝G˝GH V
)
˝G˝GV W
{
˛G˛G 
int
ˇGˇG 
index
ˇGˇG  %
=
ˇGˇG& '
(
ˇGˇG( )
int
ˇGˇG) ,
)
ˇGˇG, -
ConvertToFloat
ˇGˇG- ;
(
ˇGˇG; <
	m_htmlTag
ˇGˇG< E
,
ˇGˇGE F
m_xmlAttribute
ˇGˇGG U
[
ˇGˇGU V
$num
ˇGˇGV W
]
ˇGˇGW X
.
ˇGˇGX Y
valueStartIndex
ˇGˇGY h
,
ˇGˇGh i
m_xmlAttribute
ˇGˇGj x
[
ˇGˇGx y
$num
ˇGˇGy z
]
ˇGˇGz {
.
ˇGˇG{ |
valueLengthˇGˇG| á
)ˇGˇGá à
;ˇGˇGà â
if
ÇHÇH 
(
ÇHÇH  
index
ÇHÇH  %
==
ÇHÇH& (
Int16
ÇHÇH) .
.
ÇHÇH. /
MinValue
ÇHÇH/ 7
)
ÇHÇH7 8
return
ÇHÇH9 ?
false
ÇHÇH@ E
;
ÇHÇHE F
if
ÖHÖH 
(
ÖHÖH  
index
ÖHÖH  %
>
ÖHÖH& '"
m_currentSpriteAsset
ÖHÖH( <
.
ÖHÖH< ="
spriteCharacterTable
ÖHÖH= Q
.
ÖHÖHQ R
Count
ÖHÖHR W
-
ÖHÖHX Y
$num
ÖHÖHZ [
)
ÖHÖH[ \
return
ÖHÖH] c
false
ÖHÖHd i
;
ÖHÖHi j
m_spriteIndex
áHáH )
=
áHáH* +
index
áHáH, 1
;
áHáH1 2
}
àHàH 
m_spriteColor
äHäH %
=
äHäH& '
s_colorWhite
äHäH( 4
;
äHäH4 5
m_tintSprite
ãHãH $
=
ãHãH% &
false
ãHãH' ,
;
ãHãH, -
for
éHéH 
(
éHéH 
int
éHéH  
i
éHéH! "
=
éHéH# $
$num
éHéH% &
;
éHéH& '
i
éHéH( )
<
éHéH* +
m_xmlAttribute
éHéH, :
.
éHéH: ;
Length
éHéH; A
&&
éHéHB D
m_xmlAttribute
éHéHE S
[
éHéHS T
i
éHéHT U
]
éHéHU V
.
éHéHV W
nameHashCode
éHéHW c
!=
éHéHd f
$num
éHéHg h
;
éHéHh i
i
éHéHj k
++
éHéHk m
)
éHéHm n
{
èHèH 
int
ëHëH 
nameHashCode
ëHëH  ,
=
ëHëH- .
m_xmlAttribute
ëHëH/ =
[
ëHëH= >
i
ëHëH> ?
]
ëHëH? @
.
ëHëH@ A
nameHashCode
ëHëHA M
;
ëHëHM N
int
íHíH 
index
íHíH  %
=
íHíH& '
$num
íHíH( )
;
íHíH) *
switch
îHîH "
(
îHîH# $
nameHashCode
îHîH$ 0
)
îHîH0 1
{
ïHïH 
case
ñHñH  $
$num
ñHñH% *
:
ñHñH* +
case
óHóH  $
$num
óHóH% *
:
óHóH* +"
m_currentSpriteAsset
òHòH$ 8
=
òHòH9 :
TMP_SpriteAsset
òHòH; J
.
òHòHJ K'
SearchForSpriteByHashCode
òHòHK d
(
òHòHd e"
m_currentSpriteAsset
òHòHe y
,
òHòHy z
m_xmlAttributeòHòH{ â
[òHòHâ ä
iòHòHä ã
]òHòHã å
.òHòHå ç
valueHashCodeòHòHç ö
,òHòHö õ
trueòHòHú †
,òHòH† °
outòHòH¢ •
indexòHòH¶ ´
)òHòH´ ¨
;òHòH¨ ≠
if
ôHôH$ &
(
ôHôH' (
index
ôHôH( -
==
ôHôH. 0
-
ôHôH1 2
$num
ôHôH2 3
)
ôHôH3 4
return
ôHôH5 ;
false
ôHôH< A
;
ôHôHA B
m_spriteIndex
õHõH$ 1
=
õHõH2 3
index
õHõH4 9
;
õHõH9 :
break
úHúH$ )
;
úHúH) *
case
ùHùH  $
$num
ùHùH% +
:
ùHùH+ ,
case
ûHûH  $
$num
ûHûH% +
:
ûHûH+ ,
index
üHüH$ )
=
üHüH* +
(
üHüH, -
int
üHüH- 0
)
üHüH0 1
ConvertToFloat
üHüH1 ?
(
üHüH? @
	m_htmlTag
üHüH@ I
,
üHüHI J
m_xmlAttribute
üHüHK Y
[
üHüHY Z
$num
üHüHZ [
]
üHüH[ \
.
üHüH\ ]
valueStartIndex
üHüH] l
,
üHüHl m
m_xmlAttribute
üHüHn |
[
üHüH| }
$num
üHüH} ~
]
üHüH~ 
.üHüH Ä
valueLengthüHüHÄ ã
)üHüHã å
;üHüHå ç
if
¢H¢H$ &
(
¢H¢H' (
index
¢H¢H( -
==
¢H¢H. 0
Int16
¢H¢H1 6
.
¢H¢H6 7
MinValue
¢H¢H7 ?
)
¢H¢H? @
return
¢H¢HA G
false
¢H¢HH M
;
¢H¢HM N
if
•H•H$ &
(
•H•H' (
index
•H•H( -
>
•H•H. /"
m_currentSpriteAsset
•H•H0 D
.
•H•HD E"
spriteCharacterTable
•H•HE Y
.
•H•HY Z
Count
•H•HZ _
-
•H•H` a
$num
•H•Hb c
)
•H•Hc d
return
•H•He k
false
•H•Hl q
;
•H•Hq r
m_spriteIndex
ßHßH$ 1
=
ßHßH2 3
index
ßHßH4 9
;
ßHßH9 :
break
®H®H$ )
;
®H®H) *
case
©H©H  $
$num
©H©H% *
:
©H©H* +
case
™H™H  $
$num
™H™H% *
:
™H™H* +
m_tintSprite
´H´H$ 0
=
´H´H1 2
ConvertToFloat
´H´H3 A
(
´H´HA B
	m_htmlTag
´H´HB K
,
´H´HK L
m_xmlAttribute
´H´HM [
[
´H´H[ \
i
´H´H\ ]
]
´H´H] ^
.
´H´H^ _
valueStartIndex
´H´H_ n
,
´H´Hn o
m_xmlAttribute
´H´Hp ~
[
´H´H~ 
i´H´H Ä
]´H´HÄ Å
.´H´HÅ Ç
valueLength´H´HÇ ç
)´H´Hç é
!=´H´Hè ë
$num´H´Hí ì
;´H´Hì î
break
¨H¨H$ )
;
¨H¨H) *
case
≠H≠H  $
$num
≠H≠H% +
:
≠H≠H+ ,
case
ÆHÆH  $
$num
ÆHÆH% +
:
ÆHÆH+ ,
m_spriteColor
ØHØH$ 1
=
ØHØH2 3
HexCharsToColor
ØHØH4 C
(
ØHØHC D
	m_htmlTag
ØHØHD M
,
ØHØHM N
m_xmlAttribute
ØHØHO ]
[
ØHØH] ^
i
ØHØH^ _
]
ØHØH_ `
.
ØHØH` a
valueStartIndex
ØHØHa p
,
ØHØHp q
m_xmlAttributeØHØHr Ä
[ØHØHÄ Å
iØHØHÅ Ç
]ØHØHÇ É
.ØHØHÉ Ñ
valueLengthØHØHÑ è
)ØHØHè ê
;ØHØHê ë
break
∞H∞H$ )
;
∞H∞H) *
case
±H±H  $
$num
±H±H% *
:
±H±H* +
case
≤H≤H  $
$num
≤H≤H% *
:
≤H≤H* +
int
¥H¥H$ '

paramCount
¥H¥H( 2
=
¥H¥H3 4$
GetAttributeParameters
¥H¥H5 K
(
¥H¥HK L
	m_htmlTag
¥H¥HL U
,
¥H¥HU V
m_xmlAttribute
¥H¥HW e
[
¥H¥He f
i
¥H¥Hf g
]
¥H¥Hg h
.
¥H¥Hh i
valueStartIndex
¥H¥Hi x
,
¥H¥Hx y
m_xmlAttribute¥H¥Hz à
[¥H¥Hà â
i¥H¥Hâ ä
]¥H¥Hä ã
.¥H¥Hã å
valueLength¥H¥Hå ó
,¥H¥Hó ò
ref¥H¥Hô ú*
m_attributeParameterValues¥H¥Hù ∑
)¥H¥H∑ ∏
;¥H¥H∏ π
if
µHµH$ &
(
µHµH' (

paramCount
µHµH( 2
!=
µHµH3 5
$num
µHµH6 7
)
µHµH7 8
return
µHµH9 ?
false
µHµH@ E
;
µHµHE F
m_spriteIndex
∑H∑H$ 1
=
∑H∑H2 3
(
∑H∑H4 5
int
∑H∑H5 8
)
∑H∑H8 9(
m_attributeParameterValues
∑H∑H9 S
[
∑H∑HS T
$num
∑H∑HT U
]
∑H∑HU V
;
∑H∑HV W
if
πHπH$ &
(
πHπH' (
m_isParsingText
πHπH( 7
)
πHπH7 8
{
∫H∫H$ %
spriteAnimator
øHøH( 6
.
øHøH6 7
DoSpriteAnimation
øHøH7 H
(
øHøHH I
m_characterCount
øHøHI Y
,
øHøHY Z"
m_currentSpriteAsset
øHøH[ o
,
øHøHo p
m_spriteIndex
øHøHq ~
,
øHøH~ 
(øHøHÄ Å
intøHøHÅ Ñ
)øHøHÑ Ö*
m_attributeParameterValuesøHøHÖ ü
[øHøHü †
$numøHøH† °
]øHøH° ¢
,øHøH¢ £
(øHøH§ •
intøHøH• ®
)øHøH® ©*
m_attributeParameterValuesøHøH© √
[øHøH√ ƒ
$numøHøHƒ ≈
]øHøH≈ ∆
)øHøH∆ «
;øHøH« »
}
¿H¿H$ %
break
¬H¬H$ )
;
¬H¬H) *
default
«H«H  '
:
«H«H' (
if
»H»H$ &
(
»H»H' (
nameHashCode
»H»H( 4
!=
»H»H5 7
$num
»H»H8 ?
&&
»H»H@ B
nameHashCode
»H»HC O
!=
»H»HP R
$num
»H»HS Z
)
»H»HZ [
return
…H…H( .
false
…H…H/ 4
;
…H…H4 5
break
 H H$ )
;
 H H) *
}
ÀHÀH 
}
ÃHÃH 
if
ŒHŒH 
(
ŒHŒH 
m_spriteIndex
ŒHŒH )
==
ŒHŒH* ,
-
ŒHŒH- .
$num
ŒHŒH. /
)
ŒHŒH/ 0
return
ŒHŒH1 7
false
ŒHŒH8 =
;
ŒHŒH= >$
m_currentMaterialIndex
—H—H .
=
—H—H/ 0
MaterialReference
—H—H1 B
.
—H—HB C"
AddMaterialReference
—H—HC W
(
—H—HW X"
m_currentSpriteAsset
—H—HX l
.
—H—Hl m
material
—H—Hm u
,
—H—Hu v#
m_currentSpriteAsset—H—Hw ã
,—H—Hã å$
m_materialReferences—H—Hç °
,—H—H° ¢.
m_materialReferenceIndexLookup—H—H£ ¡
)—H—H¡ ¬
;—H—H¬ √
m_textElementType
”H”H )
=
”H”H* +!
TMP_TextElementType
”H”H, ?
.
”H”H? @
Sprite
”H”H@ F
;
”H”HF G
return
‘H‘H 
true
‘H‘H #
;
‘H‘H# $
case
’H’H 
$num
’H’H "
:
’H’H" #
case
÷H÷H 
$num
÷H÷H "
:
÷H÷H" #!
m_FontStyleInternal
◊H◊H +
|=
◊H◊H, .

FontStyles
◊H◊H/ 9
.
◊H◊H9 :
	LowerCase
◊H◊H: C
;
◊H◊HC D
m_fontStyleStack
ÿHÿH (
.
ÿHÿH( )
Add
ÿHÿH) ,
(
ÿHÿH, -

FontStyles
ÿHÿH- 7
.
ÿHÿH7 8
	LowerCase
ÿHÿH8 A
)
ÿHÿHA B
;
ÿHÿHB C
return
ŸHŸH 
true
ŸHŸH #
;
ŸHŸH# $
case
⁄H⁄H 
-
⁄H⁄H 
$num
⁄H⁄H $
:
⁄H⁄H$ %
case
€H€H 
-
€H€H 
$num
€H€H $
:
€H€H$ %
if
‹H‹H 
(
‹H‹H 
(
‹H‹H 
m_fontStyle
‹H‹H (
&
‹H‹H) *

FontStyles
‹H‹H+ 5
.
‹H‹H5 6
	LowerCase
‹H‹H6 ?
)
‹H‹H? @
!=
‹H‹HA C

FontStyles
‹H‹HD N
.
‹H‹HN O
	LowerCase
‹H‹HO X
)
‹H‹HX Y
{
›H›H 
if
ﬁHﬁH 
(
ﬁHﬁH  
m_fontStyleStack
ﬁHﬁH  0
.
ﬁHﬁH0 1
Remove
ﬁHﬁH1 7
(
ﬁHﬁH7 8

FontStyles
ﬁHﬁH8 B
.
ﬁHﬁHB C
	LowerCase
ﬁHﬁHC L
)
ﬁHﬁHL M
==
ﬁHﬁHN P
$num
ﬁHﬁHQ R
)
ﬁHﬁHR S!
m_FontStyleInternal
ﬂHﬂH  3
&=
ﬂHﬂH4 6
~
ﬂHﬂH7 8

FontStyles
ﬂHﬂH8 B
.
ﬂHﬂHB C
	LowerCase
ﬂHﬂHC L
;
ﬂHﬂHL M
}
‡H‡H 
return
·H·H 
true
·H·H #
;
·H·H# $
case
‚H‚H 
$num
‚H‚H !
:
‚H‚H! "
case
„H„H 
$num
„H„H  
:
„H„H  !
case
‰H‰H 
$num
‰H‰H "
:
‰H‰H" #
case
ÂHÂH 
$num
ÂHÂH "
:
ÂHÂH" #!
m_FontStyleInternal
ÊHÊH +
|=
ÊHÊH, .

FontStyles
ÊHÊH/ 9
.
ÊHÊH9 :
	UpperCase
ÊHÊH: C
;
ÊHÊHC D
m_fontStyleStack
ÁHÁH (
.
ÁHÁH( )
Add
ÁHÁH) ,
(
ÁHÁH, -

FontStyles
ÁHÁH- 7
.
ÁHÁH7 8
	UpperCase
ÁHÁH8 A
)
ÁHÁHA B
;
ÁHÁHB C
return
ËHËH 
true
ËHËH #
;
ËHËH# $
case
ÈHÈH 
$num
ÈHÈH !
:
ÈHÈH! "
case
ÍHÍH 
$num
ÍHÍH !
:
ÍHÍH! "
case
ÎHÎH 
-
ÎHÎH 
$num
ÎHÎH $
:
ÎHÎH$ %
case
ÏHÏH 
-
ÏHÏH 
$num
ÏHÏH $
:
ÏHÏH$ %
if
ÌHÌH 
(
ÌHÌH 
(
ÌHÌH 
m_fontStyle
ÌHÌH (
&
ÌHÌH) *

FontStyles
ÌHÌH+ 5
.
ÌHÌH5 6
	UpperCase
ÌHÌH6 ?
)
ÌHÌH? @
!=
ÌHÌHA C

FontStyles
ÌHÌHD N
.
ÌHÌHN O
	UpperCase
ÌHÌHO X
)
ÌHÌHX Y
{
ÓHÓH 
if
ÔHÔH 
(
ÔHÔH  
m_fontStyleStack
ÔHÔH  0
.
ÔHÔH0 1
Remove
ÔHÔH1 7
(
ÔHÔH7 8

FontStyles
ÔHÔH8 B
.
ÔHÔHB C
	UpperCase
ÔHÔHC L
)
ÔHÔHL M
==
ÔHÔHN P
$num
ÔHÔHQ R
)
ÔHÔHR S!
m_FontStyleInternal
HH  3
&=
HH4 6
~
HH7 8

FontStyles
HH8 B
.
HHB C
	UpperCase
HHC L
;
HHL M
}
ÒHÒH 
return
ÚHÚH 
true
ÚHÚH #
;
ÚHÚH# $
case
ÛHÛH 
$num
ÛHÛH "
:
ÛHÛH" #
case
ÙHÙH 
$num
ÙHÙH "
:
ÙHÙH" #!
m_FontStyleInternal
ıHıH +
|=
ıHıH, .

FontStyles
ıHıH/ 9
.
ıHıH9 :
	SmallCaps
ıHıH: C
;
ıHıHC D
m_fontStyleStack
ˆHˆH (
.
ˆHˆH( )
Add
ˆHˆH) ,
(
ˆHˆH, -

FontStyles
ˆHˆH- 7
.
ˆHˆH7 8
	SmallCaps
ˆHˆH8 A
)
ˆHˆHA B
;
ˆHˆHB C
return
˜H˜H 
true
˜H˜H #
;
˜H˜H# $
case
¯H¯H 
-
¯H¯H 
$num
¯H¯H $
:
¯H¯H$ %
case
˘H˘H 
-
˘H˘H 
$num
˘H˘H $
:
˘H˘H$ %
if
˙H˙H 
(
˙H˙H 
(
˙H˙H 
m_fontStyle
˙H˙H (
&
˙H˙H) *

FontStyles
˙H˙H+ 5
.
˙H˙H5 6
	SmallCaps
˙H˙H6 ?
)
˙H˙H? @
!=
˙H˙HA C

FontStyles
˙H˙HD N
.
˙H˙HN O
	SmallCaps
˙H˙HO X
)
˙H˙HX Y
{
˚H˚H 
if
¸H¸H 
(
¸H¸H  
m_fontStyleStack
¸H¸H  0
.
¸H¸H0 1
Remove
¸H¸H1 7
(
¸H¸H7 8

FontStyles
¸H¸H8 B
.
¸H¸HB C
	SmallCaps
¸H¸HC L
)
¸H¸HL M
==
¸H¸HN P
$num
¸H¸HQ R
)
¸H¸HR S!
m_FontStyleInternal
˝H˝H  3
&=
˝H˝H4 6
~
˝H˝H7 8

FontStyles
˝H˝H8 B
.
˝H˝HB C
	SmallCaps
˝H˝HC L
;
˝H˝HL M
}
˛H˛H 
return
ˇHˇH 
true
ˇHˇH #
;
ˇHˇH# $
case
ÄIÄI 
$num
ÄIÄI  
:
ÄIÄI  !
case
ÅIÅI 
$num
ÅIÅI  
:
ÅIÅI  !
switch
ÉIÉI 
(
ÉIÉI  
m_xmlAttribute
ÉIÉI  .
[
ÉIÉI. /
$num
ÉIÉI/ 0
]
ÉIÉI0 1
.
ÉIÉI1 2
	valueType
ÉIÉI2 ;
)
ÉIÉI; <
{
ÑIÑI 
case
ÖIÖI  
TagValueType
ÖIÖI! -
.
ÖIÖI- .
NumericalValue
ÖIÖI. <
:
ÖIÖI< =
value
ÜIÜI  %
=
ÜIÜI& '
ConvertToFloat
ÜIÜI( 6
(
ÜIÜI6 7
	m_htmlTag
ÜIÜI7 @
,
ÜIÜI@ A
m_xmlAttribute
ÜIÜIB P
[
ÜIÜIP Q
$num
ÜIÜIQ R
]
ÜIÜIR S
.
ÜIÜIS T
valueStartIndex
ÜIÜIT c
,
ÜIÜIc d
m_xmlAttribute
ÜIÜIe s
[
ÜIÜIs t
$num
ÜIÜIt u
]
ÜIÜIu v
.
ÜIÜIv w
valueLengthÜIÜIw Ç
)ÜIÜIÇ É
;ÜIÜIÉ Ñ
if
âIâI  "
(
âIâI# $
value
âIâI$ )
==
âIâI* ,
Int16
âIâI- 2
.
âIâI2 3
MinValue
âIâI3 ;
)
âIâI; <
return
âIâI= C
false
âIâID I
;
âIâII J
switch
åIåI  &
(
åIåI' (
tagUnitType
åIåI( 3
)
åIåI3 4
{
çIçI  !
case
éIéI$ (
TagUnitType
éIéI) 4
.
éIéI4 5
Pixels
éIéI5 ;
:
éIéI; <
m_marginLeft
èIèI( 4
=
èIèI5 6
value
èIèI7 <
*
èIèI= >
(
èIèI? @
m_isOrthographic
èIèI@ P
?
èIèIQ R
$num
èIèIS T
:
èIèIU V
$num
èIèIW [
)
èIèI[ \
;
èIèI\ ]
break
êIêI( -
;
êIêI- .
case
ëIëI$ (
TagUnitType
ëIëI) 4
.
ëIëI4 5
	FontUnits
ëIëI5 >
:
ëIëI> ?
m_marginLeft
íIíI( 4
=
íIíI5 6
value
íIíI7 <
*
íIíI= >
(
íIíI? @
m_isOrthographic
íIíI@ P
?
íIíIQ R
$num
íIíIS T
:
íIíIU V
$num
íIíIW [
)
íIíI[ \
*
íIíI] ^
m_currentFontSize
íIíI_ p
;
íIíIp q
break
ìIìI( -
;
ìIìI- .
case
îIîI$ (
TagUnitType
îIîI) 4
.
îIîI4 5

Percentage
îIîI5 ?
:
îIîI? @
m_marginLeft
ïIïI( 4
=
ïIïI5 6
(
ïIïI7 8
m_marginWidth
ïIïI8 E
-
ïIïIF G
(
ïIïIH I
m_width
ïIïII P
!=
ïIïIQ S
-
ïIïIT U
$num
ïIïIU V
?
ïIïIW X
m_width
ïIïIY `
:
ïIïIa b
$num
ïIïIc d
)
ïIïId e
)
ïIïIe f
*
ïIïIg h
value
ïIïIi n
/
ïIïIo p
$num
ïIïIq t
;
ïIïIt u
break
ñIñI( -
;
ñIñI- .
}
óIóI  !
m_marginLeft
òIòI  ,
=
òIòI- .
m_marginLeft
òIòI/ ;
>=
òIòI< >
$num
òIòI? @
?
òIòIA B
m_marginLeft
òIòIC O
:
òIòIP Q
$num
òIòIR S
;
òIòIS T
m_marginRight
ôIôI  -
=
ôIôI. /
m_marginLeft
ôIôI0 <
;
ôIôI< =
return
öIöI  &
true
öIöI' +
;
öIöI+ ,
case
úIúI  
TagValueType
úIúI! -
.
úIúI- .
None
úIúI. 2
:
úIúI2 3
for
ùIùI  #
(
ùIùI$ %
int
ùIùI% (
i
ùIùI) *
=
ùIùI+ ,
$num
ùIùI- .
;
ùIùI. /
i
ùIùI0 1
<
ùIùI2 3
m_xmlAttribute
ùIùI4 B
.
ùIùIB C
Length
ùIùIC I
&&
ùIùIJ L
m_xmlAttribute
ùIùIM [
[
ùIùI[ \
i
ùIùI\ ]
]
ùIùI] ^
.
ùIùI^ _
nameHashCode
ùIùI_ k
!=
ùIùIl n
$num
ùIùIo p
;
ùIùIp q
i
ùIùIr s
++
ùIùIs u
)
ùIùIu v
{
ûIûI  !
int
†I†I$ '
nameHashCode
†I†I( 4
=
†I†I5 6
m_xmlAttribute
†I†I7 E
[
†I†IE F
i
†I†IF G
]
†I†IG H
.
†I†IH I
nameHashCode
†I†II U
;
†I†IU V
switch
¢I¢I$ *
(
¢I¢I+ ,
nameHashCode
¢I¢I, 8
)
¢I¢I8 9
{
£I£I$ %
case
§I§I( ,
$num
§I§I- 2
:
§I§I2 3
value
•I•I, 1
=
•I•I2 3
ConvertToFloat
•I•I4 B
(
•I•IB C
	m_htmlTag
•I•IC L
,
•I•IL M
m_xmlAttribute
•I•IN \
[
•I•I\ ]
i
•I•I] ^
]
•I•I^ _
.
•I•I_ `
valueStartIndex
•I•I` o
,
•I•Io p
m_xmlAttribute
•I•Iq 
[•I•I Ä
i•I•IÄ Å
]•I•IÅ Ç
.•I•IÇ É
valueLength•I•IÉ é
)•I•Ié è
;•I•Iè ê
if
®I®I, .
(
®I®I/ 0
value
®I®I0 5
==
®I®I6 8
Int16
®I®I9 >
.
®I®I> ?
MinValue
®I®I? G
)
®I®IG H
return
®I®II O
false
®I®IP U
;
®I®IU V
switch
™I™I, 2
(
™I™I3 4
m_xmlAttribute
™I™I4 B
[
™I™IB C
i
™I™IC D
]
™I™ID E
.
™I™IE F
unitType
™I™IF N
)
™I™IN O
{
´I´I, -
case
¨I¨I0 4
TagUnitType
¨I¨I5 @
.
¨I¨I@ A
Pixels
¨I¨IA G
:
¨I¨IG H
m_marginLeft
≠I≠I4 @
=
≠I≠IA B
value
≠I≠IC H
*
≠I≠II J
(
≠I≠IK L
m_isOrthographic
≠I≠IL \
?
≠I≠I] ^
$num
≠I≠I_ `
:
≠I≠Ia b
$num
≠I≠Ic g
)
≠I≠Ig h
;
≠I≠Ih i
break
ÆIÆI4 9
;
ÆIÆI9 :
case
ØIØI0 4
TagUnitType
ØIØI5 @
.
ØIØI@ A
	FontUnits
ØIØIA J
:
ØIØIJ K
m_marginLeft
∞I∞I4 @
=
∞I∞IA B
value
∞I∞IC H
*
∞I∞II J
(
∞I∞IK L
m_isOrthographic
∞I∞IL \
?
∞I∞I] ^
$num
∞I∞I_ `
:
∞I∞Ia b
$num
∞I∞Ic g
)
∞I∞Ig h
*
∞I∞Ii j
m_currentFontSize
∞I∞Ik |
;
∞I∞I| }
break
±I±I4 9
;
±I±I9 :
case
≤I≤I0 4
TagUnitType
≤I≤I5 @
.
≤I≤I@ A

Percentage
≤I≤IA K
:
≤I≤IK L
m_marginLeft
≥I≥I4 @
=
≥I≥IA B
(
≥I≥IC D
m_marginWidth
≥I≥ID Q
-
≥I≥IR S
(
≥I≥IT U
m_width
≥I≥IU \
!=
≥I≥I] _
-
≥I≥I` a
$num
≥I≥Ia b
?
≥I≥Ic d
m_width
≥I≥Ie l
:
≥I≥Im n
$num
≥I≥Io p
)
≥I≥Ip q
)
≥I≥Iq r
*
≥I≥Is t
value
≥I≥Iu z
/
≥I≥I{ |
$num≥I≥I} Ä
;≥I≥IÄ Å
break
¥I¥I4 9
;
¥I¥I9 :
}
µIµI, -
m_marginLeft
∂I∂I, 8
=
∂I∂I9 :
m_marginLeft
∂I∂I; G
>=
∂I∂IH J
$num
∂I∂IK L
?
∂I∂IM N
m_marginLeft
∂I∂IO [
:
∂I∂I\ ]
$num
∂I∂I^ _
;
∂I∂I_ `
break
∑I∑I, 1
;
∑I∑I1 2
case
πIπI( ,
$num
πIπI- 3
:
πIπI3 4
value
∫I∫I, 1
=
∫I∫I2 3
ConvertToFloat
∫I∫I4 B
(
∫I∫IB C
	m_htmlTag
∫I∫IC L
,
∫I∫IL M
m_xmlAttribute
∫I∫IN \
[
∫I∫I\ ]
i
∫I∫I] ^
]
∫I∫I^ _
.
∫I∫I_ `
valueStartIndex
∫I∫I` o
,
∫I∫Io p
m_xmlAttribute
∫I∫Iq 
[∫I∫I Ä
i∫I∫IÄ Å
]∫I∫IÅ Ç
.∫I∫IÇ É
valueLength∫I∫IÉ é
)∫I∫Ié è
;∫I∫Iè ê
if
ΩIΩI, .
(
ΩIΩI/ 0
value
ΩIΩI0 5
==
ΩIΩI6 8
Int16
ΩIΩI9 >
.
ΩIΩI> ?
MinValue
ΩIΩI? G
)
ΩIΩIG H
return
ΩIΩII O
false
ΩIΩIP U
;
ΩIΩIU V
switch
øIøI, 2
(
øIøI3 4
m_xmlAttribute
øIøI4 B
[
øIøIB C
i
øIøIC D
]
øIøID E
.
øIøIE F
unitType
øIøIF N
)
øIøIN O
{
¿I¿I, -
case
¡I¡I0 4
TagUnitType
¡I¡I5 @
.
¡I¡I@ A
Pixels
¡I¡IA G
:
¡I¡IG H
m_marginRight
¬I¬I4 A
=
¬I¬IB C
value
¬I¬ID I
*
¬I¬IJ K
(
¬I¬IL M
m_isOrthographic
¬I¬IM ]
?
¬I¬I^ _
$num
¬I¬I` a
:
¬I¬Ib c
$num
¬I¬Id h
)
¬I¬Ih i
;
¬I¬Ii j
break
√I√I4 9
;
√I√I9 :
case
ƒIƒI0 4
TagUnitType
ƒIƒI5 @
.
ƒIƒI@ A
	FontUnits
ƒIƒIA J
:
ƒIƒIJ K
m_marginRight
≈I≈I4 A
=
≈I≈IB C
value
≈I≈ID I
*
≈I≈IJ K
(
≈I≈IL M
m_isOrthographic
≈I≈IM ]
?
≈I≈I^ _
$num
≈I≈I` a
:
≈I≈Ib c
$num
≈I≈Id h
)
≈I≈Ih i
*
≈I≈Ij k
m_currentFontSize
≈I≈Il }
;
≈I≈I} ~
break
∆I∆I4 9
;
∆I∆I9 :
case
«I«I0 4
TagUnitType
«I«I5 @
.
«I«I@ A

Percentage
«I«IA K
:
«I«IK L
m_marginRight
»I»I4 A
=
»I»IB C
(
»I»ID E
m_marginWidth
»I»IE R
-
»I»IS T
(
»I»IU V
m_width
»I»IV ]
!=
»I»I^ `
-
»I»Ia b
$num
»I»Ib c
?
»I»Id e
m_width
»I»If m
:
»I»In o
$num
»I»Ip q
)
»I»Iq r
)
»I»Ir s
*
»I»It u
value
»I»Iv {
/
»I»I| }
$num»I»I~ Å
;»I»IÅ Ç
break
…I…I4 9
;
…I…I9 :
}
 I I, -
m_marginRight
ÀIÀI, 9
=
ÀIÀI: ;
m_marginRight
ÀIÀI< I
>=
ÀIÀIJ L
$num
ÀIÀIM N
?
ÀIÀIO P
m_marginRight
ÀIÀIQ ^
:
ÀIÀI_ `
$num
ÀIÀIa b
;
ÀIÀIb c
break
ÃIÃI, 1
;
ÃIÃI1 2
}
ÕIÕI$ %
}
ŒIŒI  !
return
œIœI  &
true
œIœI' +
;
œIœI+ ,
}
–I–I 
return
“I“I 
false
“I“I $
;
“I“I$ %
case
”I”I 
$num
”I”I  
:
”I”I  !
case
‘I‘I 
$num
‘I‘I  
:
‘I‘I  !
m_marginLeft
’I’I $
=
’I’I% &
$num
’I’I' (
;
’I’I( )
m_marginRight
÷I÷I %
=
÷I÷I& '
$num
÷I÷I( )
;
÷I÷I) *
return
◊I◊I 
true
◊I◊I #
;
◊I◊I# $
case
ÿIÿI 
$num
ÿIÿI #
:
ÿIÿI# $
case
ŸIŸI 
-
ŸIŸI 
$num
ŸIŸI #
:
ŸIŸI# $
value
⁄I⁄I 
=
⁄I⁄I 
ConvertToFloat
⁄I⁄I  .
(
⁄I⁄I. /
	m_htmlTag
⁄I⁄I/ 8
,
⁄I⁄I8 9
m_xmlAttribute
⁄I⁄I: H
[
⁄I⁄IH I
$num
⁄I⁄II J
]
⁄I⁄IJ K
.
⁄I⁄IK L
valueStartIndex
⁄I⁄IL [
,
⁄I⁄I[ \
m_xmlAttribute
⁄I⁄I] k
[
⁄I⁄Ik l
$num
⁄I⁄Il m
]
⁄I⁄Im n
.
⁄I⁄In o
valueLength
⁄I⁄Io z
)
⁄I⁄Iz {
;
⁄I⁄I{ |
if
›I›I 
(
›I›I 
value
›I›I !
==
›I›I" $
Int16
›I›I% *
.
›I›I* +
MinValue
›I›I+ 3
)
›I›I3 4
return
›I›I5 ;
false
›I›I< A
;
›I›IA B
switch
ﬂIﬂI 
(
ﬂIﬂI  
tagUnitType
ﬂIﬂI  +
)
ﬂIﬂI+ ,
{
‡I‡I 
case
·I·I  
TagUnitType
·I·I! ,
.
·I·I, -
Pixels
·I·I- 3
:
·I·I3 4
m_marginLeft
‚I‚I  ,
=
‚I‚I- .
value
‚I‚I/ 4
*
‚I‚I5 6
(
‚I‚I7 8
m_isOrthographic
‚I‚I8 H
?
‚I‚II J
$num
‚I‚IK L
:
‚I‚IM N
$num
‚I‚IO S
)
‚I‚IS T
;
‚I‚IT U
break
„I„I  %
;
„I„I% &
case
‰I‰I  
TagUnitType
‰I‰I! ,
.
‰I‰I, -
	FontUnits
‰I‰I- 6
:
‰I‰I6 7
m_marginLeft
ÂIÂI  ,
=
ÂIÂI- .
value
ÂIÂI/ 4
*
ÂIÂI5 6
(
ÂIÂI7 8
m_isOrthographic
ÂIÂI8 H
?
ÂIÂII J
$num
ÂIÂIK L
:
ÂIÂIM N
$num
ÂIÂIO S
)
ÂIÂIS T
*
ÂIÂIU V
m_currentFontSize
ÂIÂIW h
;
ÂIÂIh i
break
ÊIÊI  %
;
ÊIÊI% &
case
ÁIÁI  
TagUnitType
ÁIÁI! ,
.
ÁIÁI, -

Percentage
ÁIÁI- 7
:
ÁIÁI7 8
m_marginLeft
ËIËI  ,
=
ËIËI- .
(
ËIËI/ 0
m_marginWidth
ËIËI0 =
-
ËIËI> ?
(
ËIËI@ A
m_width
ËIËIA H
!=
ËIËII K
-
ËIËIL M
$num
ËIËIM N
?
ËIËIO P
m_width
ËIËIQ X
:
ËIËIY Z
$num
ËIËI[ \
)
ËIËI\ ]
)
ËIËI] ^
*
ËIËI_ `
value
ËIËIa f
/
ËIËIg h
$num
ËIËIi l
;
ËIËIl m
break
ÈIÈI  %
;
ÈIÈI% &
}
ÍIÍI 
m_marginLeft
ÎIÎI $
=
ÎIÎI% &
m_marginLeft
ÎIÎI' 3
>=
ÎIÎI4 6
$num
ÎIÎI7 8
?
ÎIÎI9 :
m_marginLeft
ÎIÎI; G
:
ÎIÎIH I
$num
ÎIÎIJ K
;
ÎIÎIK L
return
ÏIÏI 
true
ÏIÏI #
;
ÏIÏI# $
case
ÌIÌI 
-
ÌIÌI 
$num
ÌIÌI #
:
ÌIÌI# $
case
ÓIÓI 
-
ÓIÓI 
$num
ÓIÓI $
:
ÓIÓI$ %
value
ÔIÔI 
=
ÔIÔI 
ConvertToFloat
ÔIÔI  .
(
ÔIÔI. /
	m_htmlTag
ÔIÔI/ 8
,
ÔIÔI8 9
m_xmlAttribute
ÔIÔI: H
[
ÔIÔIH I
$num
ÔIÔII J
]
ÔIÔIJ K
.
ÔIÔIK L
valueStartIndex
ÔIÔIL [
,
ÔIÔI[ \
m_xmlAttribute
ÔIÔI] k
[
ÔIÔIk l
$num
ÔIÔIl m
]
ÔIÔIm n
.
ÔIÔIn o
valueLength
ÔIÔIo z
)
ÔIÔIz {
;
ÔIÔI{ |
if
ÚIÚI 
(
ÚIÚI 
value
ÚIÚI !
==
ÚIÚI" $
Int16
ÚIÚI% *
.
ÚIÚI* +
MinValue
ÚIÚI+ 3
)
ÚIÚI3 4
return
ÚIÚI5 ;
false
ÚIÚI< A
;
ÚIÚIA B
switch
ÙIÙI 
(
ÙIÙI  
tagUnitType
ÙIÙI  +
)
ÙIÙI+ ,
{
ıIıI 
case
ˆIˆI  
TagUnitType
ˆIˆI! ,
.
ˆIˆI, -
Pixels
ˆIˆI- 3
:
ˆIˆI3 4
m_marginRight
˜I˜I  -
=
˜I˜I. /
value
˜I˜I0 5
*
˜I˜I6 7
(
˜I˜I8 9
m_isOrthographic
˜I˜I9 I
?
˜I˜IJ K
$num
˜I˜IL M
:
˜I˜IN O
$num
˜I˜IP T
)
˜I˜IT U
;
˜I˜IU V
break
¯I¯I  %
;
¯I¯I% &
case
˘I˘I  
TagUnitType
˘I˘I! ,
.
˘I˘I, -
	FontUnits
˘I˘I- 6
:
˘I˘I6 7
m_marginRight
˙I˙I  -
=
˙I˙I. /
value
˙I˙I0 5
*
˙I˙I6 7
(
˙I˙I8 9
m_isOrthographic
˙I˙I9 I
?
˙I˙IJ K
$num
˙I˙IL M
:
˙I˙IN O
$num
˙I˙IP T
)
˙I˙IT U
*
˙I˙IV W
m_currentFontSize
˙I˙IX i
;
˙I˙Ii j
break
˚I˚I  %
;
˚I˚I% &
case
¸I¸I  
TagUnitType
¸I¸I! ,
.
¸I¸I, -

Percentage
¸I¸I- 7
:
¸I¸I7 8
m_marginRight
˝I˝I  -
=
˝I˝I. /
(
˝I˝I0 1
m_marginWidth
˝I˝I1 >
-
˝I˝I? @
(
˝I˝IA B
m_width
˝I˝IB I
!=
˝I˝IJ L
-
˝I˝IM N
$num
˝I˝IN O
?
˝I˝IP Q
m_width
˝I˝IR Y
:
˝I˝IZ [
$num
˝I˝I\ ]
)
˝I˝I] ^
)
˝I˝I^ _
*
˝I˝I` a
value
˝I˝Ib g
/
˝I˝Ih i
$num
˝I˝Ij m
;
˝I˝Im n
break
˛I˛I  %
;
˛I˛I% &
}
ˇIˇI 
m_marginRight
ÄJÄJ %
=
ÄJÄJ& '
m_marginRight
ÄJÄJ( 5
>=
ÄJÄJ6 8
$num
ÄJÄJ9 :
?
ÄJÄJ; <
m_marginRight
ÄJÄJ= J
:
ÄJÄJK L
$num
ÄJÄJM N
;
ÄJÄJN O
return
ÅJÅJ 
true
ÅJÅJ #
;
ÅJÅJ# $
case
ÇJÇJ 
$num
ÇJÇJ #
:
ÇJÇJ# $
case
ÉJÉJ 
-
ÉJÉJ 
$num
ÉJÉJ #
:
ÉJÉJ# $
value
ÑJÑJ 
=
ÑJÑJ 
ConvertToFloat
ÑJÑJ  .
(
ÑJÑJ. /
	m_htmlTag
ÑJÑJ/ 8
,
ÑJÑJ8 9
m_xmlAttribute
ÑJÑJ: H
[
ÑJÑJH I
$num
ÑJÑJI J
]
ÑJÑJJ K
.
ÑJÑJK L
valueStartIndex
ÑJÑJL [
,
ÑJÑJ[ \
m_xmlAttribute
ÑJÑJ] k
[
ÑJÑJk l
$num
ÑJÑJl m
]
ÑJÑJm n
.
ÑJÑJn o
valueLength
ÑJÑJo z
)
ÑJÑJz {
;
ÑJÑJ{ |
if
áJáJ 
(
áJáJ 
value
áJáJ !
==
áJáJ" $
Int16
áJáJ% *
.
áJáJ* +
MinValue
áJáJ+ 3
)
áJáJ3 4
return
áJáJ5 ;
false
áJáJ< A
;
áJáJA B
switch
âJâJ 
(
âJâJ  
tagUnitType
âJâJ  +
)
âJâJ+ ,
{
äJäJ 
case
ãJãJ  
TagUnitType
ãJãJ! ,
.
ãJãJ, -
Pixels
ãJãJ- 3
:
ãJãJ3 4
m_lineHeight
åJåJ  ,
=
åJåJ- .
value
åJåJ/ 4
*
åJåJ5 6
(
åJåJ7 8
m_isOrthographic
åJåJ8 H
?
åJåJI J
$num
åJåJK L
:
åJåJM N
$num
åJåJO S
)
åJåJS T
;
åJåJT U
break
çJçJ  %
;
çJçJ% &
case
éJéJ  
TagUnitType
éJéJ! ,
.
éJéJ, -
	FontUnits
éJéJ- 6
:
éJéJ6 7
m_lineHeight
èJèJ  ,
=
èJèJ- .
value
èJèJ/ 4
*
èJèJ5 6
(
èJèJ7 8
m_isOrthographic
èJèJ8 H
?
èJèJI J
$num
èJèJK L
:
èJèJM N
$num
èJèJO S
)
èJèJS T
*
èJèJU V
m_currentFontSize
èJèJW h
;
èJèJh i
break
êJêJ  %
;
êJêJ% &
case
ëJëJ  
TagUnitType
ëJëJ! ,
.
ëJëJ, -

Percentage
ëJëJ- 7
:
ëJëJ7 8
m_lineHeight
íJíJ  ,
=
íJíJ- .
m_fontAsset
íJíJ/ :
.
íJíJ: ;
faceInfo
íJíJ; C
.
íJíJC D

lineHeight
íJíJD N
*
íJíJO P
value
íJíJQ V
/
íJíJW X
$num
íJíJY \
*
íJíJ] ^
m_fontScale
íJíJ_ j
;
íJíJj k
break
ìJìJ  %
;
ìJìJ% &
}
îJîJ 
return
ïJïJ 
true
ïJïJ #
;
ïJïJ# $
case
ñJñJ 
-
ñJñJ 
$num
ñJñJ #
:
ñJñJ# $
case
óJóJ 
$num
óJóJ #
:
óJóJ# $
m_lineHeight
òJòJ $
=
òJòJ% &
TMP_Math
òJòJ' /
.
òJòJ/ 0
FLOAT_UNSET
òJòJ0 ;
;
òJòJ; <
return
ôJôJ 
true
ôJôJ #
;
ôJôJ# $
case
öJöJ 
$num
öJöJ !
:
öJöJ! "
case
õJõJ 
$num
õJõJ !
:
õJõJ! "
tag_NoParsing
úJúJ %
=
úJúJ& '
true
úJúJ( ,
;
úJúJ, -
return
ùJùJ 
true
ùJùJ #
;
ùJùJ# $
case
ûJûJ 
$num
ûJûJ  
:
ûJûJ  !
case
üJüJ 
$num
üJüJ  
:
üJüJ  !
int
†J†J 
actionID
†J†J $
=
†J†J% &
m_xmlAttribute
†J†J' 5
[
†J†J5 6
$num
†J†J6 7
]
†J†J7 8
.
†J†J8 9
valueHashCode
†J†J9 F
;
†J†JF G
if
¢J¢J 
(
¢J¢J 
m_isParsingText
¢J¢J +
)
¢J¢J+ ,
{
£J£J 
m_actionStack
§J§J )
.
§J§J) *
Add
§J§J* -
(
§J§J- .
actionID
§J§J. 6
)
§J§J6 7
;
§J§J7 8
Debug
¶J¶J !
.
¶J¶J! "
Log
¶J¶J" %
(
¶J¶J% &
$str
¶J¶J& 4
+
¶J¶J5 6
actionID
¶J¶J7 ?
+
¶J¶J@ A
$str
¶J¶JB ]
+
¶J¶J^ _
m_characterCount
¶J¶J` p
)
¶J¶Jp q
;
¶J¶Jq r
}
©J©J 
return
ÆJÆJ 
true
ÆJÆJ #
;
ÆJÆJ# $
case
ØJØJ 
$num
ØJØJ  
:
ØJØJ  !
case
∞J∞J 
$num
∞J∞J  
:
∞J∞J  !
if
±J±J 
(
±J±J 
m_isParsingText
±J±J +
)
±J±J+ ,
{
≤J≤J 
Debug
≥J≥J !
.
≥J≥J! "
Log
≥J≥J" %
(
≥J≥J% &
$str
≥J≥J& 4
+
≥J≥J5 6
m_actionStack
≥J≥J7 D
.
≥J≥JD E
CurrentItem
≥J≥JE P
(
≥J≥JP Q
)
≥J≥JQ R
+
≥J≥JS T
$str
≥J≥JU o
+
≥J≥Jp q
(
≥J≥Jr s
m_characterCount≥J≥Js É
-≥J≥JÑ Ö
$num≥J≥JÜ á
)≥J≥Já à
)≥J≥Jà â
;≥J≥Jâ ä
}
¥J¥J 
m_actionStack
∂J∂J %
.
∂J∂J% &
Remove
∂J∂J& ,
(
∂J∂J, -
)
∂J∂J- .
;
∂J∂J. /
return
∑J∑J 
true
∑J∑J #
;
∑J∑J# $
case
∏J∏J 
$num
∏J∏J 
:
∏J∏J  
case
πJπJ 
$num
πJπJ 
:
πJπJ  
value
∫J∫J 
=
∫J∫J 
ConvertToFloat
∫J∫J  .
(
∫J∫J. /
	m_htmlTag
∫J∫J/ 8
,
∫J∫J8 9
m_xmlAttribute
∫J∫J: H
[
∫J∫JH I
$num
∫J∫JI J
]
∫J∫JJ K
.
∫J∫JK L
valueStartIndex
∫J∫JL [
,
∫J∫J[ \
m_xmlAttribute
∫J∫J] k
[
∫J∫Jk l
$num
∫J∫Jl m
]
∫J∫Jm n
.
∫J∫Jn o
valueLength
∫J∫Jo z
)
∫J∫Jz {
;
∫J∫J{ |
if
ΩJΩJ 
(
ΩJΩJ 
value
ΩJΩJ !
==
ΩJΩJ" $
Int16
ΩJΩJ% *
.
ΩJΩJ* +
MinValue
ΩJΩJ+ 3
)
ΩJΩJ3 4
return
ΩJΩJ5 ;
false
ΩJΩJ< A
;
ΩJΩJA B

m_FXMatrix
øJøJ "
=
øJøJ# $
	Matrix4x4
øJøJ% .
.
øJøJ. /
TRS
øJøJ/ 2
(
øJøJ2 3
Vector3
øJøJ3 :
.
øJøJ: ;
zero
øJøJ; ?
,
øJøJ? @

Quaternion
øJøJA K
.
øJøJK L
identity
øJøJL T
,
øJøJT U
new
øJøJV Y
Vector3
øJøJZ a
(
øJøJa b
value
øJøJb g
,
øJøJg h
$num
øJøJi j
,
øJøJj k
$num
øJøJl m
)
øJøJm n
)
øJøJn o
;
øJøJo p
m_isFXMatrixSet
¿J¿J '
=
¿J¿J( )
true
¿J¿J* .
;
¿J¿J. /
return
¬J¬J 
true
¬J¬J #
;
¬J¬J# $
case
√J√J 
$num
√J√J  
:
√J√J  !
case
ƒJƒJ 
$num
ƒJƒJ  
:
ƒJƒJ  !
m_isFXMatrixSet
≈J≈J '
=
≈J≈J( )
false
≈J≈J* /
;
≈J≈J/ 0
return
∆J∆J 
true
∆J∆J #
;
∆J∆J# $
case
«J«J 
$num
«J«J  
:
«J«J  !
case
»J»J 
$num
»J»J  
:
»J»J  !
value
ÀJÀJ 
=
ÀJÀJ 
ConvertToFloat
ÀJÀJ  .
(
ÀJÀJ. /
	m_htmlTag
ÀJÀJ/ 8
,
ÀJÀJ8 9
m_xmlAttribute
ÀJÀJ: H
[
ÀJÀJH I
$num
ÀJÀJI J
]
ÀJÀJJ K
.
ÀJÀJK L
valueStartIndex
ÀJÀJL [
,
ÀJÀJ[ \
m_xmlAttribute
ÀJÀJ] k
[
ÀJÀJk l
$num
ÀJÀJl m
]
ÀJÀJm n
.
ÀJÀJn o
valueLength
ÀJÀJo z
)
ÀJÀJz {
;
ÀJÀJ{ |
if
ŒJŒJ 
(
ŒJŒJ 
value
ŒJŒJ !
==
ŒJŒJ" $
Int16
ŒJŒJ% *
.
ŒJŒJ* +
MinValue
ŒJŒJ+ 3
)
ŒJŒJ3 4
return
ŒJŒJ5 ;
false
ŒJŒJ< A
;
ŒJŒJA B

m_FXMatrix
–J–J "
=
–J–J# $
	Matrix4x4
–J–J% .
.
–J–J. /
TRS
–J–J/ 2
(
–J–J2 3
Vector3
–J–J3 :
.
–J–J: ;
zero
–J–J; ?
,
–J–J? @

Quaternion
–J–JA K
.
–J–JK L
Euler
–J–JL Q
(
–J–JQ R
$num
–J–JR S
,
–J–JS T
$num
–J–JU V
,
–J–JV W
value
–J–JX ]
)
–J–J] ^
,
–J–J^ _
Vector3
–J–J` g
.
–J–Jg h
one
–J–Jh k
)
–J–Jk l
;
–J–Jl m
m_isFXMatrixSet
—J—J '
=
—J—J( )
true
—J—J* .
;
—J—J. /
return
”J”J 
true
”J”J #
;
”J”J# $
case
‘J‘J 
$num
‘J‘J  
:
‘J‘J  !
case
’J’J 
$num
’J’J  
:
’J’J  !
m_isFXMatrixSet
÷J÷J '
=
÷J÷J( )
false
÷J÷J* /
;
÷J÷J/ 0
return
◊J◊J 
true
◊J◊J #
;
◊J◊J# $
case
ÿJÿJ 
$num
ÿJÿJ 
:
ÿJÿJ  
case
ŸJŸJ 
$num
ŸJŸJ 
:
ŸJŸJ  
return
JJ 
false
JJ $
;
JJ$ %
case
ÒJÒJ 
$num
ÒJÒJ  
:
ÒJÒJ  !
case
ÚJÚJ 
$num
ÚJÚJ  
:
ÚJÚJ  !
return
ÛJÛJ 
true
ÛJÛJ #
;
ÛJÛJ# $
case
ÙJÙJ 
$num
ÙJÙJ 
:
ÙJÙJ 
case
ıJıJ 
$num
ıJıJ 
:
ıJıJ 
return
ˆJˆJ 
true
ˆJˆJ #
;
ˆJˆJ# $
case
˜J˜J 
$num
˜J˜J 
:
˜J˜J 
case
¯J¯J 
$num
¯J¯J 
:
¯J¯J 
return
˘J˘J 
true
˘J˘J #
;
˘J˘J# $
case
˙J˙J 
$num
˙J˙J 
:
˙J˙J 
case
˚J˚J 
$num
˚J˚J 
:
˚J˚J 
return
˝J˝J 
true
˝J˝J #
;
˝J˝J# $
case
˛J˛J 
$num
˛J˛J 
:
˛J˛J 
case
ˇJˇJ 
$num
ˇJˇJ 
:
ˇJˇJ 
return
ÄKÄK 
true
ÄKÄK #
;
ÄKÄK# $
case
ÅKÅK 
$num
ÅKÅK 
:
ÅKÅK 
case
ÇKÇK 
$num
ÇKÇK 
:
ÇKÇK 
return
¨K¨K 
false
¨K¨K $
;
¨K¨K$ %
case
≠K≠K 
$num
≠K≠K 
:
≠K≠K 
case
ÆKÆK 
$num
ÆKÆK 
:
ÆKÆK 
return
ØKØK 
false
ØKØK $
;
ØKØK$ %
}
∞K∞K 
}
±K±K 
return
µKµK 
false
µKµK 
;
µKµK 
}
∂K∂K 	
}
∑K∑K 
}∏K∏K  
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_SelectionCaret.cs
	namespace 	
TMPro
 
{ 
[

 
RequireComponent

 
(

 
typeof

 
(

 
CanvasRenderer

 +
)

+ ,
)

, -
]

- .
public 

class 
TMP_SelectionCaret #
:$ %
MaskableGraphic& 5
{ 
public 
override 
void 
Cull !
(! "
Rect" &
clipRect' /
,/ 0
bool1 5
	validRect6 ?
)? @
{ 	
if 
( 
	validRect 
) 
{ 
canvasRenderer 
. 
cull #
=$ %
false& +
;+ , 
CanvasUpdateRegistry $
.$ %2
&RegisterCanvasElementForGraphicRebuild% K
(K L
thisL P
)P Q
;Q R
return 
; 
} 
base 
. 
Cull 
( 
clipRect 
, 
	validRect  )
)) *
;* +
} 	
	protected   
override   
void   
UpdateGeometry    .
(  . /
)  / 0
{!! 	
}## 	
}$$ 
}%% »m
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_SpriteAnimator.cs
	namespace 	
TMPro
 
{ 
[ %
DisallowMultipleComponent 
] 
public		 

class		 
TMP_SpriteAnimator		 #
:		$ %
MonoBehaviour		& 3
{

 
private 

Dictionary 
< 
int 
, 
bool  $
>$ %
m_animations& 2
=3 4
new5 8

Dictionary9 C
<C D
intD G
,G H
boolI M
>M N
(N O
$numO Q
)Q R
;R S
private 
TMP_Text 
m_TextComponent (
;( )
void 
Awake 
( 
) 
{ 	
m_TextComponent 
= 
GetComponent *
<* +
TMP_Text+ 3
>3 4
(4 5
)5 6
;6 7
} 	
void 
OnEnable 
( 
) 
{ 	
} 	
void 
	OnDisable 
( 
) 
{   	
}"" 	
public%% 
void%% 
StopAllAnimations%% %
(%%% &
)%%& '
{&& 	
StopAllCoroutines'' 
('' 
)'' 
;''  
m_animations(( 
.(( 
Clear(( 
((( 
)((  
;((  !
})) 	
public-- 
void-- 
DoSpriteAnimation-- %
(--% &
int--& )
currentCharacter--* :
,--: ;
TMP_SpriteAsset--< K
spriteAsset--L W
,--W X
int--Y \
start--] b
,--b c
int--d g
end--h k
,--k l
int--m p
	framerate--q z
)--z {
{.. 	
bool// 
	isPlaying// 
;// 
if22 
(22 
!22 
m_animations22 
.22 
TryGetValue22 )
(22) *
currentCharacter22* :
,22: ;
out22< ?
	isPlaying22@ I
)22I J
)22J K
{33 
StartCoroutine44 
(44 %
DoSpriteAnimationInternal44 8
(448 9
currentCharacter449 I
,44I J
spriteAsset44K V
,44V W
start44X ]
,44] ^
end44_ b
,44b c
	framerate44d m
)44m n
)44n o
;44o p
m_animations55 
.55 
Add55  
(55  !
currentCharacter55! 1
,551 2
true553 7
)557 8
;558 9
}66 
}77 	
IEnumerator:: %
DoSpriteAnimationInternal:: -
(::- .
int::. 1
currentCharacter::2 B
,::B C
TMP_SpriteAsset::D S
spriteAsset::T _
,::_ `
int::a d
start::e j
,::j k
int::l o
end::p s
,::s t
int::u x
	framerate	::y Ç
)
::Ç É
{;; 	
if<< 
(<< 
m_TextComponent<< 
==<<  "
null<<# '
)<<' (
yield<<) .
break<</ 4
;<<4 5
yield?? 
return?? 
null?? 
;?? 
intAA 
currentFrameAA 
=AA 
startAA $
;AA$ %
ifDD 
(DD 
endDD 
>DD 
spriteAssetDD !
.DD! " 
spriteCharacterTableDD" 6
.DD6 7
CountDD7 <
)DD< =
endEE 
=EE 
spriteAssetEE !
.EE! " 
spriteCharacterTableEE" 6
.EE6 7
CountEE7 <
-EE= >
$numEE? @
;EE@ A
TMP_CharacterInfoHH 
charInfoHH &
=HH' (
m_TextComponentHH) 8
.HH8 9
textInfoHH9 A
.HHA B
characterInfoHHB O
[HHO P
currentCharacterHHP `
]HH` a
;HHa b
intJJ 
materialIndexJJ 
=JJ 
charInfoJJ  (
.JJ( )"
materialReferenceIndexJJ) ?
;JJ? @
intKK 
vertexIndexKK 
=KK 
charInfoKK &
.KK& '
vertexIndexKK' 2
;KK2 3
TMP_MeshInfoMM 
meshInfoMM !
=MM" #
m_TextComponentMM$ 3
.MM3 4
textInfoMM4 <
.MM< =
meshInfoMM= E
[MME F
materialIndexMMF S
]MMS T
;MMT U
floatOO 
elapsedTimeOO 
=OO 
$numOO  !
;OO! "
floatPP 

targetTimePP 
=PP 
$numPP !
/PP" #
MathfPP$ )
.PP) *
AbsPP* -
(PP- .
	frameratePP. 7
)PP7 8
;PP8 9
whileRR 
(RR 
trueRR 
)RR 
{SS 
ifTT 
(TT 
elapsedTimeTT 
>TT  !

targetTimeTT" ,
)TT, -
{UU 
elapsedTimeVV 
=VV  !
$numVV" #
;VV# $
TMP_SpriteCharacterYY '
spriteCharacterYY( 7
=YY8 9
spriteAssetYY: E
.YYE F 
spriteCharacterTableYYF Z
[YYZ [
currentFrameYY[ g
]YYg h
;YYh i
Vector3\\ 
[\\ 
]\\ 
vertices\\ &
=\\' (
meshInfo\\) 1
.\\1 2
vertices\\2 :
;\\: ;
Vector2^^ 
origin^^ "
=^^# $
new^^% (
Vector2^^) 0
(^^0 1
charInfo^^1 9
.^^9 :
origin^^: @
,^^@ A
charInfo^^B J
.^^J K
baseLine^^K S
)^^S T
;^^T U
float__ 
spriteScale__ %
=__& '
charInfo__( 0
.__0 1
	fontAsset__1 :
.__: ;
faceInfo__; C
.__C D

ascentLine__D N
/__O P
spriteCharacter__Q `
.__` a
glyph__a f
.__f g
metrics__g n
.__n o
height__o u
*__v w
spriteCharacter	__x á
.
__á à
scale
__à ç
*
__é è
charInfo
__ê ò
.
__ò ô
scale
__ô û
;
__û ü
Vector3aa 
blaa 
=aa  
newaa! $
Vector3aa% ,
(aa, -
originaa- 3
.aa3 4
xaa4 5
+aa6 7
spriteCharacteraa8 G
.aaG H
glyphaaH M
.aaM N
metricsaaN U
.aaU V
horizontalBearingXaaV h
*aai j
spriteScaleaak v
,aav w
originaax ~
.aa~ 
y	aa Ä
+
aaÅ Ç
(
aaÉ Ñ
spriteCharacter
aaÑ ì
.
aaì î
glyph
aaî ô
.
aaô ö
metrics
aaö °
.
aa° ¢ 
horizontalBearingY
aa¢ ¥
-
aaµ ∂
spriteCharacter
aa∑ ∆
.
aa∆ «
glyph
aa« Ã
.
aaÃ Õ
metrics
aaÕ ‘
.
aa‘ ’
height
aa’ €
)
aa€ ‹
*
aa› ﬁ
spriteScale
aaﬂ Í
)
aaÍ Î
;
aaÎ Ï
Vector3bb 
tlbb 
=bb  
newbb! $
Vector3bb% ,
(bb, -
blbb- /
.bb/ 0
xbb0 1
,bb1 2
originbb3 9
.bb9 :
ybb: ;
+bb< =
spriteCharacterbb> M
.bbM N
glyphbbN S
.bbS T
metricsbbT [
.bb[ \
horizontalBearingYbb\ n
*bbo p
spriteScalebbq |
)bb| }
;bb} ~
Vector3cc 
trcc 
=cc  
newcc! $
Vector3cc% ,
(cc, -
origincc- 3
.cc3 4
xcc4 5
+cc6 7
(cc8 9
spriteCharactercc9 H
.ccH I
glyphccI N
.ccN O
metricsccO V
.ccV W
horizontalBearingXccW i
+ccj k
spriteCharacterccl {
.cc{ |
glyph	cc| Å
.
ccÅ Ç
metrics
ccÇ â
.
ccâ ä
width
ccä è
)
ccè ê
*
ccë í
spriteScale
ccì û
,
ccû ü
tl
cc† ¢
.
cc¢ £
y
cc£ §
)
cc§ •
;
cc• ¶
Vector3dd 
brdd 
=dd  
newdd! $
Vector3dd% ,
(dd, -
trdd- /
.dd/ 0
xdd0 1
,dd1 2
bldd3 5
.dd5 6
ydd6 7
)dd7 8
;dd8 9
verticesff 
[ff 
vertexIndexff (
+ff) *
$numff+ ,
]ff, -
=ff. /
blff0 2
;ff2 3
verticesgg 
[gg 
vertexIndexgg (
+gg) *
$numgg+ ,
]gg, -
=gg. /
tlgg0 2
;gg2 3
verticeshh 
[hh 
vertexIndexhh (
+hh) *
$numhh+ ,
]hh, -
=hh. /
trhh0 2
;hh2 3
verticesii 
[ii 
vertexIndexii (
+ii) *
$numii+ ,
]ii, -
=ii. /
brii0 2
;ii2 3
Vector2ll 
[ll 
]ll 
uvs0ll "
=ll# $
meshInfoll% -
.ll- .
uvs0ll. 2
;ll2 3
Vector2nn 
uv0nn 
=nn  !
newnn" %
Vector2nn& -
(nn- .
(nn. /
floatnn/ 4
)nn4 5
spriteCharacternn5 D
.nnD E
glyphnnE J
.nnJ K
	glyphRectnnK T
.nnT U
xnnU V
/nnW X
spriteAssetnnY d
.nnd e
spriteSheetnne p
.nnp q
widthnnq v
,nnv w
(nnx y
floatnny ~
)nn~ 
spriteCharacter	nn é
.
nné è
glyph
nnè î
.
nnî ï
	glyphRect
nnï û
.
nnû ü
y
nnü †
/
nn° ¢
spriteAsset
nn£ Æ
.
nnÆ Ø
spriteSheet
nnØ ∫
.
nn∫ ª
height
nnª ¡
)
nn¡ ¬
;
nn¬ √
Vector2oo 
uv1oo 
=oo  !
newoo" %
Vector2oo& -
(oo- .
uv0oo. 1
.oo1 2
xoo2 3
,oo3 4
(oo5 6
floatoo6 ;
)oo; <
(oo< =
spriteCharacteroo= L
.ooL M
glyphooM R
.ooR S
	glyphRectooS \
.oo\ ]
yoo] ^
+oo_ `
spriteCharacterooa p
.oop q
glyphooq v
.oov w
	glyphRect	oow Ä
.
ooÄ Å
height
ooÅ á
)
ooá à
/
ooâ ä
spriteAsset
ooã ñ
.
ooñ ó
spriteSheet
ooó ¢
.
oo¢ £
height
oo£ ©
)
oo© ™
;
oo™ ´
Vector2pp 
uv2pp 
=pp  !
newpp" %
Vector2pp& -
(pp- .
(pp. /
floatpp/ 4
)pp4 5
(pp5 6
spriteCharacterpp6 E
.ppE F
glyphppF K
.ppK L
	glyphRectppL U
.ppU V
xppV W
+ppX Y
spriteCharacterppZ i
.ppi j
glyphppj o
.ppo p
	glyphRectppp y
.ppy z
widthppz 
)	pp Ä
/
ppÅ Ç
spriteAsset
ppÉ é
.
ppé è
spriteSheet
ppè ö
.
ppö õ
width
ppõ †
,
pp† °
uv1
pp¢ •
.
pp• ¶
y
pp¶ ß
)
ppß ®
;
pp® ©
Vector2qq 
uv3qq 
=qq  !
newqq" %
Vector2qq& -
(qq- .
uv2qq. 1
.qq1 2
xqq2 3
,qq3 4
uv0qq5 8
.qq8 9
yqq9 :
)qq: ;
;qq; <
uvs0ss 
[ss 
vertexIndexss $
+ss% &
$numss' (
]ss( )
=ss* +
uv0ss, /
;ss/ 0
uvs0tt 
[tt 
vertexIndextt $
+tt% &
$numtt' (
]tt( )
=tt* +
uv1tt, /
;tt/ 0
uvs0uu 
[uu 
vertexIndexuu $
+uu% &
$numuu' (
]uu( )
=uu* +
uv2uu, /
;uu/ 0
uvs0vv 
[vv 
vertexIndexvv $
+vv% &
$numvv' (
]vv( )
=vv* +
uv3vv, /
;vv/ 0
meshInfoyy 
.yy 
meshyy !
.yy! "
verticesyy" *
=yy+ ,
verticesyy- 5
;yy5 6
meshInfozz 
.zz 
meshzz !
.zz! "
uvzz" $
=zz% &
uvs0zz' +
;zz+ ,
m_TextComponent{{ #
.{{# $
UpdateGeometry{{$ 2
({{2 3
meshInfo{{3 ;
.{{; <
mesh{{< @
,{{@ A
materialIndex{{B O
){{O P
;{{P Q
if~~ 
(~~ 
	framerate~~ !
>~~" #
$num~~$ %
)~~% &
{ 
if
ÄÄ 
(
ÄÄ 
currentFrame
ÄÄ (
<
ÄÄ) *
end
ÄÄ+ .
)
ÄÄ. /
currentFrame
ÅÅ (
+=
ÅÅ) +
$num
ÅÅ, -
;
ÅÅ- .
else
ÇÇ 
currentFrame
ÉÉ (
=
ÉÉ) *
start
ÉÉ+ 0
;
ÉÉ0 1
}
ÑÑ 
else
ÖÖ 
{
ÜÜ 
if
áá 
(
áá 
currentFrame
áá (
>
áá) *
start
áá+ 0
)
áá0 1
currentFrame
àà (
-=
àà) +
$num
àà, -
;
àà- .
else
ââ 
currentFrame
ää (
=
ää) *
end
ää+ .
;
ää. /
}
ãã 
}
åå 
elapsedTime
éé 
+=
éé 
Time
éé #
.
éé# $
	deltaTime
éé$ -
;
éé- .
yield
êê 
return
êê 
null
êê !
;
êê! "
}
ëë 
}
íí 	
}
îî 
}ïï ò$
°D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_SpriteAssetImportFormats.cs
	namespace 	
TMPro
 
.  
SpriteAssetUtilities $
{ 
public 

enum $
SpriteAssetImportFormats (
{) *
None+ /
=0 1
$num2 3
,3 4"
TexturePackerJsonArray5 K
=L M
$numN Q
}R S
;S T
public		 

class		 #
TexturePacker_JsonArray		 (
{

 
[ 	
System	 
. 
Serializable 
] 
public 
struct 
SpriteFrame !
{ 	
public 
float 
x 
; 
public 
float 
y 
; 
public 
float 
w 
; 
public 
float 
h 
; 
public 
override 
string "
ToString# +
(+ ,
), -
{ 
string 
s 
= 
$str  
+! "
x# $
.$ %
ToString% -
(- .
$str. 2
)2 3
+4 5
$str6 <
+= >
y? @
.@ A
ToStringA I
(I J
$strJ N
)N O
+P Q
$strR X
+Y Z
h[ \
.\ ]
ToString] e
(e f
$strf j
)j k
+l m
$strn t
+u v
ww x
.x y
ToString	y Å
(
Å Ç
$str
Ç Ü
)
Ü á
;
á à
return 
s 
; 
} 
} 	
[ 	
System	 
. 
Serializable 
] 
public 
struct 

SpriteSize  
{ 	
public 
float 
w 
; 
public 
float 
h 
; 
public   
override   
string   "
ToString  # +
(  + ,
)  , -
{!! 
string"" 
s"" 
="" 
$str""  
+""! "
w""# $
.""$ %
ToString""% -
(""- .
$str"". 2
)""2 3
+""4 5
$str""6 <
+""= >
h""? @
.""@ A
ToString""A I
(""I J
$str""J N
)""N O
;""O P
return## 
s## 
;## 
}$$ 
}%% 	
['' 	
System''	 
.'' 
Serializable'' 
]'' 
public(( 
struct(( 
Frame(( 
{)) 	
public** 
string** 
filename** "
;**" #
public++ 
SpriteFrame++ 
frame++ $
;++$ %
public,, 
bool,, 
rotated,, 
;,,  
public-- 
bool-- 
trimmed-- 
;--  
public.. 
SpriteFrame.. 
spriteSourceSize.. /
;../ 0
public// 

SpriteSize// 

sourceSize// (
;//( )
public00 
Vector200 
pivot00  
;00  !
}11 	
[33 	
System33	 
.33 
Serializable33 
]33 
public44 
struct44 
Meta44 
{55 	
public66 
string66 
app66 
;66 
public77 
string77 
version77 !
;77! "
public88 
string88 
image88 
;88  
public99 
string99 
format99  
;99  !
public:: 

SpriteSize:: 
size:: "
;::" #
public;; 
float;; 
scale;; 
;;; 
public<< 
string<< 
smartupdate<< %
;<<% &
}== 	
[?? 	
System??	 
.?? 
Serializable?? 
]?? 
public@@ 
class@@ 
SpriteDataObject@@ %
{AA 	
publicBB 
ListBB 
<BB 
FrameBB 
>BB 
framesBB %
;BB% &
publicCC 
MetaCC 
metaCC 
;CC 
}DD 	
}EE 
}FF öt
èD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\FastAction.cs
	namespace 	
TMPro
 
{ 
public 

class 

FastAction 
{		 

LinkedList 
< 
System 
. 
Action  
>  !
	delegates" +
=, -
new. 1

LinkedList2 <
<< =
System= C
.C D
ActionD J
>J K
(K L
)L M
;M N

Dictionary 
< 
System 
. 
Action  
,  !
LinkedListNode" 0
<0 1
System1 7
.7 8
Action8 >
>> ?
>? @
lookupA G
=H I
newJ M

DictionaryN X
<X Y
SystemY _
._ `
Action` f
,f g
LinkedListNodeh v
<v w
Systemw }
.} ~
Action	~ Ñ
>
Ñ Ö
>
Ö Ü
(
Ü á
)
á à
;
à â
public 
void 
Add 
( 
System 
. 
Action %
rhs& )
)) *
{ 	
if 
( 
lookup 
. 
ContainsKey "
(" #
rhs# &
)& '
)' (
return) /
;/ 0
lookup 
[ 
rhs 
] 
= 
	delegates #
.# $
AddLast$ +
(+ ,
rhs, /
)/ 0
;0 1
} 	
public 
void 
Remove 
( 
System !
.! "
Action" (
rhs) ,
), -
{ 	
LinkedListNode 
< 
System !
.! "
Action" (
>( )
node* .
;. /
if 
( 
lookup 
. 
TryGetValue "
(" #
rhs# &
,& '
out( +
node, 0
)0 1
)1 2
{ 
lookup 
. 
Remove 
( 
rhs !
)! "
;" #
	delegates 
. 
Remove  
(  !
node! %
)% &
;& '
} 
} 	
public   
void   
Call   
(   
)   
{!! 	
var"" 
node"" 
="" 
	delegates""  
.""  !
First""! &
;""& '
while## 
(## 
node## 
!=## 
null## 
)##  
{$$ 
node%% 
.%% 
Value%% 
(%% 
)%% 
;%% 
node&& 
=&& 
node&& 
.&& 
Next&&  
;&&  !
}'' 
}(( 	
})) 
public,, 

class,, 

FastAction,, 
<,, 
A,, 
>,, 
{-- 

LinkedList// 
<// 
System// 
.// 
Action//  
<//  !
A//! "
>//" #
>//# $
	delegates//% .
=/// 0
new//1 4

LinkedList//5 ?
<//? @
System//@ F
.//F G
Action//G M
<//M N
A//N O
>//O P
>//P Q
(//Q R
)//R S
;//S T

Dictionary11 
<11 
System11 
.11 
Action11  
<11  !
A11! "
>11" #
,11# $
LinkedListNode11% 3
<113 4
System114 :
.11: ;
Action11; A
<11A B
A11B C
>11C D
>11D E
>11E F
lookup11G M
=11N O
new11P S

Dictionary11T ^
<11^ _
System11_ e
.11e f
Action11f l
<11l m
A11m n
>11n o
,11o p
LinkedListNode11q 
<	11 Ä
System
11Ä Ü
.
11Ü á
Action
11á ç
<
11ç é
A
11é è
>
11è ê
>
11ê ë
>
11ë í
(
11í ì
)
11ì î
;
11î ï
public33 
void33 
Add33 
(33 
System33 
.33 
Action33 %
<33% &
A33& '
>33' (
rhs33) ,
)33, -
{44 	
if55 
(55 
lookup55 
.55 
ContainsKey55 "
(55" #
rhs55# &
)55& '
)55' (
return55) /
;55/ 0
lookup77 
[77 
rhs77 
]77 
=77 
	delegates77 #
.77# $
AddLast77$ +
(77+ ,
rhs77, /
)77/ 0
;770 1
}88 	
public:: 
void:: 
Remove:: 
(:: 
System:: !
.::! "
Action::" (
<::( )
A::) *
>::* +
rhs::, /
)::/ 0
{;; 	
LinkedListNode<< 
<<< 
System<< !
.<<! "
Action<<" (
<<<( )
A<<) *
><<* +
><<+ ,
node<<- 1
;<<1 2
if== 
(== 
lookup== 
.== 
TryGetValue== "
(==" #
rhs==# &
,==& '
out==( +
node==, 0
)==0 1
)==1 2
{>> 
lookup?? 
.?? 
Remove?? 
(?? 
rhs?? !
)??! "
;??" #
	delegates@@ 
.@@ 
Remove@@  
(@@  !
node@@! %
)@@% &
;@@& '
}AA 
}BB 	
publicDD 
voidDD 
CallDD 
(DD 
ADD 
aDD 
)DD 
{EE 	
varFF 
nodeFF 
=FF 
	delegatesFF  
.FF  !
FirstFF! &
;FF& '
whileGG 
(GG 
nodeGG 
!=GG 
nullGG 
)GG  
{HH 
nodeII 
.II 
ValueII 
(II 
aII 
)II 
;II 
nodeJJ 
=JJ 
nodeJJ 
.JJ 
NextJJ  
;JJ  !
}KK 
}LL 	
}MM 
publicPP 

classPP 

FastActionPP 
<PP 
APP 
,PP 
BPP  
>PP  !
{QQ 

LinkedListSS 
<SS 
SystemSS 
.SS 
ActionSS  
<SS  !
ASS! "
,SS" #
BSS$ %
>SS% &
>SS& '
	delegatesSS( 1
=SS2 3
newSS4 7

LinkedListSS8 B
<SSB C
SystemSSC I
.SSI J
ActionSSJ P
<SSP Q
ASSQ R
,SSR S
BSST U
>SSU V
>SSV W
(SSW X
)SSX Y
;SSY Z

DictionaryUU 
<UU 
SystemUU 
.UU 
ActionUU  
<UU  !
AUU! "
,UU" #
BUU$ %
>UU% &
,UU& '
LinkedListNodeUU( 6
<UU6 7
SystemUU7 =
.UU= >
ActionUU> D
<UUD E
AUUE F
,UUF G
BUUH I
>UUI J
>UUJ K
>UUK L
lookupUUM S
=UUT U
newUUV Y

DictionaryUUZ d
<UUd e
SystemUUe k
.UUk l
ActionUUl r
<UUr s
AUUs t
,UUt u
BUUv w
>UUw x
,UUx y
LinkedListNode	UUz à
<
UUà â
System
UUâ è
.
UUè ê
Action
UUê ñ
<
UUñ ó
A
UUó ò
,
UUò ô
B
UUö õ
>
UUõ ú
>
UUú ù
>
UUù û
(
UUû ü
)
UUü †
;
UU† °
publicWW 
voidWW 
AddWW 
(WW 
SystemWW 
.WW 
ActionWW %
<WW% &
AWW& '
,WW' (
BWW) *
>WW* +
rhsWW, /
)WW/ 0
{XX 	
ifYY 
(YY 
lookupYY 
.YY 
ContainsKeyYY "
(YY" #
rhsYY# &
)YY& '
)YY' (
returnYY) /
;YY/ 0
lookup[[ 
[[[ 
rhs[[ 
][[ 
=[[ 
	delegates[[ #
.[[# $
AddLast[[$ +
([[+ ,
rhs[[, /
)[[/ 0
;[[0 1
}\\ 	
public^^ 
void^^ 
Remove^^ 
(^^ 
System^^ !
.^^! "
Action^^" (
<^^( )
A^^) *
,^^* +
B^^, -
>^^- .
rhs^^/ 2
)^^2 3
{__ 	
LinkedListNode`` 
<`` 
System`` !
.``! "
Action``" (
<``( )
A``) *
,``* +
B``, -
>``- .
>``. /
node``0 4
;``4 5
ifaa 
(aa 
lookupaa 
.aa 
TryGetValueaa "
(aa" #
rhsaa# &
,aa& '
outaa( +
nodeaa, 0
)aa0 1
)aa1 2
{bb 
lookupcc 
.cc 
Removecc 
(cc 
rhscc !
)cc! "
;cc" #
	delegatesdd 
.dd 
Removedd  
(dd  !
nodedd! %
)dd% &
;dd& '
}ee 
}ff 	
publichh 
voidhh 
Callhh 
(hh 
Ahh 
ahh 
,hh 
Bhh 
bhh  !
)hh! "
{ii 	
varjj 
nodejj 
=jj 
	delegatesjj  
.jj  !
Firstjj! &
;jj& '
whilekk 
(kk 
nodekk 
!=kk 
nullkk 
)kk  
{ll 
nodemm 
.mm 
Valuemm 
(mm 
amm 
,mm 
bmm 
)mm  
;mm  !
nodenn 
=nn 
nodenn 
.nn 
Nextnn  
;nn  !
}oo 
}pp 	
}qq 
publictt 

classtt 

FastActiontt 
<tt 
Att 
,tt 
Btt  
,tt  !
Ctt" #
>tt# $
{uu 

LinkedListww 
<ww 
Systemww 
.ww 
Actionww  
<ww  !
Aww! "
,ww" #
Bww$ %
,ww% &
Cww' (
>ww( )
>ww) *
	delegatesww+ 4
=ww5 6
newww7 :

LinkedListww; E
<wwE F
SystemwwF L
.wwL M
ActionwwM S
<wwS T
AwwT U
,wwU V
BwwW X
,wwX Y
CwwZ [
>ww[ \
>ww\ ]
(ww] ^
)ww^ _
;ww_ `

Dictionaryyy 
<yy 
Systemyy 
.yy 
Actionyy  
<yy  !
Ayy! "
,yy" #
Byy$ %
,yy% &
Cyy' (
>yy( )
,yy) *
LinkedListNodeyy+ 9
<yy9 :
Systemyy: @
.yy@ A
ActionyyA G
<yyG H
AyyH I
,yyI J
ByyK L
,yyL M
CyyN O
>yyO P
>yyP Q
>yyQ R
lookupyyS Y
=yyZ [
newyy\ _

Dictionaryyy` j
<yyj k
Systemyyk q
.yyq r
Actionyyr x
<yyx y
Ayyy z
,yyz {
Byy| }
,yy} ~
C	yy Ä
>
yyÄ Å
,
yyÅ Ç
LinkedListNode
yyÉ ë
<
yyë í
System
yyí ò
.
yyò ô
Action
yyô ü
<
yyü †
A
yy† °
,
yy° ¢
B
yy£ §
,
yy§ •
C
yy¶ ß
>
yyß ®
>
yy® ©
>
yy© ™
(
yy™ ´
)
yy´ ¨
;
yy¨ ≠
public{{ 
void{{ 
Add{{ 
({{ 
System{{ 
.{{ 
Action{{ %
<{{% &
A{{& '
,{{' (
B{{) *
,{{* +
C{{, -
>{{- .
rhs{{/ 2
){{2 3
{|| 	
if}} 
(}} 
lookup}} 
.}} 
ContainsKey}} "
(}}" #
rhs}}# &
)}}& '
)}}' (
return}}) /
;}}/ 0
lookup 
[ 
rhs 
] 
= 
	delegates #
.# $
AddLast$ +
(+ ,
rhs, /
)/ 0
;0 1
}
ÄÄ 	
public
ÇÇ 
void
ÇÇ 
Remove
ÇÇ 
(
ÇÇ 
System
ÇÇ !
.
ÇÇ! "
Action
ÇÇ" (
<
ÇÇ( )
A
ÇÇ) *
,
ÇÇ* +
B
ÇÇ, -
,
ÇÇ- .
C
ÇÇ/ 0
>
ÇÇ0 1
rhs
ÇÇ2 5
)
ÇÇ5 6
{
ÉÉ 	
LinkedListNode
ÑÑ 
<
ÑÑ 
System
ÑÑ !
.
ÑÑ! "
Action
ÑÑ" (
<
ÑÑ( )
A
ÑÑ) *
,
ÑÑ* +
B
ÑÑ, -
,
ÑÑ- .
C
ÑÑ/ 0
>
ÑÑ0 1
>
ÑÑ1 2
node
ÑÑ3 7
;
ÑÑ7 8
if
ÖÖ 
(
ÖÖ 
lookup
ÖÖ 
.
ÖÖ 
TryGetValue
ÖÖ "
(
ÖÖ" #
rhs
ÖÖ# &
,
ÖÖ& '
out
ÖÖ( +
node
ÖÖ, 0
)
ÖÖ0 1
)
ÖÖ1 2
{
ÜÜ 
lookup
áá 
.
áá 
Remove
áá 
(
áá 
rhs
áá !
)
áá! "
;
áá" #
	delegates
àà 
.
àà 
Remove
àà  
(
àà  !
node
àà! %
)
àà% &
;
àà& '
}
ââ 
}
ää 	
public
åå 
void
åå 
Call
åå 
(
åå 
A
åå 
a
åå 
,
åå 
B
åå 
b
åå  !
,
åå! "
C
åå# $
c
åå% &
)
åå& '
{
çç 	
var
éé 
node
éé 
=
éé 
	delegates
éé  
.
éé  !
First
éé! &
;
éé& '
while
èè 
(
èè 
node
èè 
!=
èè 
null
èè 
)
èè  
{
êê 
node
ëë 
.
ëë 
Value
ëë 
(
ëë 
a
ëë 
,
ëë 
b
ëë 
,
ëë  
c
ëë! "
)
ëë" #
;
ëë# $
node
íí 
=
íí 
node
íí 
.
íí 
Next
íí  
;
íí  !
}
ìì 
}
îî 	
}
ïï 
}ññ ˘˘
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_FontAssetCommon.cs
	namespace 	
TMPro
 
{ 
[ 
Serializable 
] 
public 

class 
FaceInfo_Legacy  
{ 
public 
string 
Name 
; 
public 
float 
	PointSize 
; 
public 
float 
Scale 
; 
public 
int 
CharacterCount !
;! "
public 
float 

LineHeight 
;  
public 
float 
Baseline 
; 
public 
float 
Ascender 
; 
public 
float 
	CapHeight 
; 
public 
float 
	Descender 
; 
public 
float 

CenterLine 
;  
public   
float   
SuperscriptOffset   &
;  & '
public!! 
float!! 
SubscriptOffset!! $
;!!$ %
public"" 
float"" 
SubSize"" 
;"" 
public$$ 
float$$ 
	Underline$$ 
;$$ 
public%% 
float%% 
UnderlineThickness%% '
;%%' (
public'' 
float'' 
strikethrough'' "
;''" #
public(( 
float(( "
strikethroughThickness(( +
;((+ ,
public** 
float** 
TabWidth** 
;** 
public,, 
float,, 
Padding,, 
;,, 
public-- 
float-- 

AtlasWidth-- 
;--  
public.. 
float.. 
AtlasHeight..  
;..  !
}// 
[33 
Serializable33 
]33 
public44 

class44 
	TMP_Glyph44 
:44 "
TMP_TextElement_Legacy44 3
{55 
public;; 
static;; 
	TMP_Glyph;; 
Clone;;  %
(;;% &
	TMP_Glyph;;& /
source;;0 6
);;6 7
{<< 	
	TMP_Glyph== 
copy== 
=== 
new==  
	TMP_Glyph==! *
(==* +
)==+ ,
;==, -
copy?? 
.?? 
id?? 
=?? 
source?? 
.?? 
id?? 
;??  
copy@@ 
.@@ 
x@@ 
=@@ 
source@@ 
.@@ 
x@@ 
;@@ 
copyAA 
.AA 
yAA 
=AA 
sourceAA 
.AA 
yAA 
;AA 
copyBB 
.BB 
widthBB 
=BB 
sourceBB 
.BB  
widthBB  %
;BB% &
copyCC 
.CC 
heightCC 
=CC 
sourceCC  
.CC  !
heightCC! '
;CC' (
copyDD 
.DD 
xOffsetDD 
=DD 
sourceDD !
.DD! "
xOffsetDD" )
;DD) *
copyEE 
.EE 
yOffsetEE 
=EE 
sourceEE !
.EE! "
yOffsetEE" )
;EE) *
copyFF 
.FF 
xAdvanceFF 
=FF 
sourceFF "
.FF" #
xAdvanceFF# +
;FF+ ,
copyGG 
.GG 
scaleGG 
=GG 
sourceGG 
.GG  
scaleGG  %
;GG% &
returnII 
copyII 
;II 
}JJ 	
}KK 
[OO 
SerializableOO 
]OO 
publicPP 

structPP %
FontAssetCreationSettingsPP +
{QQ 
publicRR 
stringRR 
sourceFontFileNameRR (
;RR( )
publicSS 
stringSS 
sourceFontFileGUIDSS (
;SS( )
publicTT 
intTT !
pointSizeSamplingModeTT (
;TT( )
publicUU 
intUU 
	pointSizeUU 
;UU 
publicVV 
intVV 
paddingVV 
;VV 
publicWW 
intWW 
packingModeWW 
;WW 
publicXX 
intXX 

atlasWidthXX 
;XX 
publicYY 
intYY 
atlasHeightYY 
;YY 
publicZZ 
intZZ %
characterSetSelectionModeZZ ,
;ZZ, -
public[[ 
string[[ 
characterSequence[[ '
;[[' (
public\\ 
string\\ #
referencedFontAssetGUID\\ -
;\\- .
public]] 
string]] #
referencedTextAssetGUID]] -
;]]- .
public^^ 
int^^ 
	fontStyle^^ 
;^^ 
public__ 
float__ 
fontStyleModifier__ &
;__& '
public`` 
int`` 

renderMode`` 
;`` 
publicaa 
boolaa 
includeFontFeaturesaa '
;aa' (
internalcc %
FontAssetCreationSettingscc *
(cc* +
stringcc+ 1
sourceFontFileGUIDcc2 D
,ccD E
intccF I
	pointSizeccJ S
,ccS T
intccU X!
pointSizeSamplingModeccY n
,ccn o
intccp s
paddingcct {
,cc{ |
int	cc} Ä
packingMode
ccÅ å
,
ccå ç
int
ccé ë

atlasWidth
ccí ú
,
ccú ù
int
ccû °
atlasHeight
cc¢ ≠
,
cc≠ Æ
int
ccØ ≤$
characterSelectionMode
cc≥ …
,
cc…  
string
ccÀ —
characterSet
cc“ ﬁ
,
ccﬁ ﬂ
int
cc‡ „

renderMode
cc‰ Ó
)
ccÓ Ô
{dd 	
thisee 
.ee 
sourceFontFileNameee #
=ee$ %
stringee& ,
.ee, -
Emptyee- 2
;ee2 3
thisff 
.ff 
sourceFontFileGUIDff #
=ff$ %
sourceFontFileGUIDff& 8
;ff8 9
thisgg 
.gg 
	pointSizegg 
=gg 
	pointSizegg &
;gg& '
thishh 
.hh !
pointSizeSamplingModehh &
=hh' (!
pointSizeSamplingModehh) >
;hh> ?
thisii 
.ii 
paddingii 
=ii 
paddingii "
;ii" #
thisjj 
.jj 
packingModejj 
=jj 
packingModejj *
;jj* +
thiskk 
.kk 

atlasWidthkk 
=kk 

atlasWidthkk (
;kk( )
thisll 
.ll 
atlasHeightll 
=ll 
atlasHeightll *
;ll* +
thismm 
.mm 
characterSequencemm "
=mm# $
characterSetmm% 1
;mm1 2
thisnn 
.nn %
characterSetSelectionModenn *
=nn+ ,"
characterSelectionModenn- C
;nnC D
thisoo 
.oo 

renderModeoo 
=oo 

renderModeoo (
;oo( )
thisqq 
.qq #
referencedFontAssetGUIDqq (
=qq) *
stringqq+ 1
.qq1 2
Emptyqq2 7
;qq7 8
thisrr 
.rr #
referencedTextAssetGUIDrr (
=rr) *
stringrr+ 1
.rr1 2
Emptyrr2 7
;rr7 8
thisss 
.ss 
	fontStyless 
=ss 
$numss 
;ss 
thistt 
.tt 
fontStyleModifiertt "
=tt# $
$numtt% &
;tt& '
thisuu 
.uu 
includeFontFeaturesuu $
=uu% &
falseuu' ,
;uu, -
}vv 	
}ww 
[|| 
Serializable|| 
]|| 
public}} 

struct}} 
TMP_FontWeightPair}} $
{~~ 
public 
TMP_FontAsset 
regularTypeface ,
;, -
public
ÄÄ 
TMP_FontAsset
ÄÄ 
italicTypeface
ÄÄ +
;
ÄÄ+ ,
}
ÅÅ 
public
ÑÑ 

struct
ÑÑ 
KerningPairKey
ÑÑ  
{
ÖÖ 
public
ÜÜ 
uint
ÜÜ 

ascii_Left
ÜÜ 
;
ÜÜ 
public
áá 
uint
áá 
ascii_Right
áá 
;
áá  
public
àà 
uint
àà 
key
àà 
;
àà 
public
ää 
KerningPairKey
ää 
(
ää 
uint
ää "

ascii_left
ää# -
,
ää- .
uint
ää/ 3
ascii_right
ää4 ?
)
ää? @
{
ãã 	

ascii_Left
åå 
=
åå 

ascii_left
åå #
;
åå# $
ascii_Right
çç 
=
çç 
ascii_right
çç %
;
çç% &
key
éé 
=
éé 
(
éé 
ascii_right
éé 
<<
éé !
$num
éé" $
)
éé$ %
+
éé& '

ascii_left
éé( 2
;
éé2 3
}
èè 	
}
êê 
[
ïï 
Serializable
ïï 
]
ïï 
public
ññ 

struct
ññ %
GlyphValueRecord_Legacy
ññ )
{
óó 
public
òò 
float
òò 

xPlacement
òò 
;
òò  
public
ôô 
float
ôô 

yPlacement
ôô 
;
ôô  
public
öö 
float
öö 
xAdvance
öö 
;
öö 
public
õõ 
float
õõ 
yAdvance
õõ 
;
õõ 
internal
ùù %
GlyphValueRecord_Legacy
ùù (
(
ùù( )
UnityEngine
ùù) 4
.
ùù4 5
TextCore
ùù5 =
.
ùù= >
LowLevel
ùù> F
.
ùùF G
GlyphValueRecord
ùùG W
valueRecord
ùùX c
)
ùùc d
{
ûû 	
this
üü 
.
üü 

xPlacement
üü 
=
üü 
valueRecord
üü )
.
üü) *

xPlacement
üü* 4
;
üü4 5
this
†† 
.
†† 

yPlacement
†† 
=
†† 
valueRecord
†† )
.
††) *

yPlacement
††* 4
;
††4 5
this
°° 
.
°° 
xAdvance
°° 
=
°° 
valueRecord
°° '
.
°°' (
xAdvance
°°( 0
;
°°0 1
this
¢¢ 
.
¢¢ 
yAdvance
¢¢ 
=
¢¢ 
valueRecord
¢¢ '
.
¢¢' (
yAdvance
¢¢( 0
;
¢¢0 1
}
££ 	
public
•• 
static
•• %
GlyphValueRecord_Legacy
•• -
operator
••. 6
+
••7 8
(
••8 9%
GlyphValueRecord_Legacy
••9 P
a
••Q R
,
••R S%
GlyphValueRecord_Legacy
••T k
b
••l m
)
••m n
{
¶¶ 	%
GlyphValueRecord_Legacy
ßß #
c
ßß$ %
;
ßß% &
c
®® 
.
®® 

xPlacement
®® 
=
®® 
a
®® 
.
®® 

xPlacement
®® '
+
®®( )
b
®®* +
.
®®+ ,

xPlacement
®®, 6
;
®®6 7
c
©© 
.
©© 

yPlacement
©© 
=
©© 
a
©© 
.
©© 

yPlacement
©© '
+
©©( )
b
©©* +
.
©©+ ,

yPlacement
©©, 6
;
©©6 7
c
™™ 
.
™™ 
xAdvance
™™ 
=
™™ 
a
™™ 
.
™™ 
xAdvance
™™ #
+
™™$ %
b
™™& '
.
™™' (
xAdvance
™™( 0
;
™™0 1
c
´´ 
.
´´ 
yAdvance
´´ 
=
´´ 
a
´´ 
.
´´ 
yAdvance
´´ #
+
´´$ %
b
´´& '
.
´´' (
yAdvance
´´( 0
;
´´0 1
return
≠≠ 
c
≠≠ 
;
≠≠ 
}
ÆÆ 	
}
ØØ 
[
±± 
Serializable
±± 
]
±± 
public
≤≤ 

class
≤≤ 
KerningPair
≤≤ 
{
≥≥ 
public
∑∑ 
uint
∑∑ 

firstGlyph
∑∑ 
{
∏∏ 	
get
ππ 
{
ππ 
return
ππ 
m_FirstGlyph
ππ %
;
ππ% &
}
ππ' (
set
∫∫ 
{
∫∫ 
m_FirstGlyph
∫∫ 
=
∫∫  
value
∫∫! &
;
∫∫& '
}
∫∫( )
}
ªª 	
[
ºº 	"
FormerlySerializedAs
ºº	 
(
ºº 
$str
ºº *
)
ºº* +
]
ºº+ ,
[
ΩΩ 	
SerializeField
ΩΩ	 
]
ΩΩ 
private
ææ 
uint
ææ 
m_FirstGlyph
ææ !
;
ææ! "
public
√√ %
GlyphValueRecord_Legacy
√√ &#
firstGlyphAdjustments
√√' <
{
ƒƒ 	
get
≈≈ 
{
≈≈ 
return
≈≈ %
m_FirstGlyphAdjustments
≈≈ 0
;
≈≈0 1
}
≈≈2 3
}
∆∆ 	
[
«« 	
SerializeField
««	 
]
«« 
private
»» %
GlyphValueRecord_Legacy
»» '%
m_FirstGlyphAdjustments
»»( ?
;
»»? @
public
ÕÕ 
uint
ÕÕ 
secondGlyph
ÕÕ 
{
ŒŒ 	
get
œœ 
{
œœ 
return
œœ 
m_SecondGlyph
œœ &
;
œœ& '
}
œœ( )
set
–– 
{
–– 
m_SecondGlyph
–– 
=
––  !
value
––" '
;
––' (
}
––) *
}
—— 	
[
““ 	"
FormerlySerializedAs
““	 
(
““ 
$str
““ +
)
““+ ,
]
““, -
[
”” 	
SerializeField
””	 
]
”” 
private
‘‘ 
uint
‘‘ 
m_SecondGlyph
‘‘ "
;
‘‘" #
public
ŸŸ %
GlyphValueRecord_Legacy
ŸŸ &$
secondGlyphAdjustments
ŸŸ' =
{
⁄⁄ 	
get
€€ 
{
€€ 
return
€€ &
m_SecondGlyphAdjustments
€€ 1
;
€€1 2
}
€€3 4
}
‹‹ 	
[
›› 	
SerializeField
››	 
]
›› 
private
ﬁﬁ %
GlyphValueRecord_Legacy
ﬁﬁ '&
m_SecondGlyphAdjustments
ﬁﬁ( @
;
ﬁﬁ@ A
[
‡‡ 	"
FormerlySerializedAs
‡‡	 
(
‡‡ 
$str
‡‡ .
)
‡‡. /
]
‡‡/ 0
public
·· 
float
·· 
xOffset
·· 
;
·· 
internal
„„ 
static
„„ 
KerningPair
„„ #
empty
„„$ )
=
„„* +
new
„„, /
KerningPair
„„0 ;
(
„„; <
$num
„„< =
,
„„= >
new
„„? B%
GlyphValueRecord_Legacy
„„C Z
(
„„Z [
)
„„[ \
,
„„\ ]
$num
„„^ _
,
„„_ `
new
„„a d%
GlyphValueRecord_Legacy
„„e |
(
„„| }
)
„„} ~
)
„„~ 
;„„ Ä
public
ÈÈ 
bool
ÈÈ &
ignoreSpacingAdjustments
ÈÈ ,
{
ÍÍ 	
get
ÎÎ 
{
ÎÎ 
return
ÎÎ (
m_IgnoreSpacingAdjustments
ÎÎ 3
;
ÎÎ3 4
}
ÎÎ5 6
}
ÏÏ 	
[
ÌÌ 	
SerializeField
ÌÌ	 
]
ÌÌ 
private
ÓÓ 
bool
ÓÓ (
m_IgnoreSpacingAdjustments
ÓÓ /
=
ÓÓ0 1
false
ÓÓ2 7
;
ÓÓ7 8
public
 
KerningPair
 
(
 
)
 
{
ÒÒ 	
m_FirstGlyph
ÚÚ 
=
ÚÚ 
$num
ÚÚ 
;
ÚÚ %
m_FirstGlyphAdjustments
ÛÛ #
=
ÛÛ$ %
new
ÛÛ& )%
GlyphValueRecord_Legacy
ÛÛ* A
(
ÛÛA B
)
ÛÛB C
;
ÛÛC D
m_SecondGlyph
ıı 
=
ıı 
$num
ıı 
;
ıı &
m_SecondGlyphAdjustments
ˆˆ $
=
ˆˆ% &
new
ˆˆ' *%
GlyphValueRecord_Legacy
ˆˆ+ B
(
ˆˆB C
)
ˆˆC D
;
ˆˆD E
}
˜˜ 	
public
˘˘ 
KerningPair
˘˘ 
(
˘˘ 
uint
˘˘ 
left
˘˘  $
,
˘˘$ %
uint
˘˘& *
right
˘˘+ 0
,
˘˘0 1
float
˘˘2 7
offset
˘˘8 >
)
˘˘> ?
{
˙˙ 	

firstGlyph
˚˚ 
=
˚˚ 
left
˚˚ 
;
˚˚ 
m_SecondGlyph
¸¸ 
=
¸¸ 
right
¸¸ !
;
¸¸! "
xOffset
˝˝ 
=
˝˝ 
offset
˝˝ 
;
˝˝ 
}
˛˛ 	
public
ÄÄ 
KerningPair
ÄÄ 
(
ÄÄ 
uint
ÄÄ 

firstGlyph
ÄÄ  *
,
ÄÄ* +%
GlyphValueRecord_Legacy
ÄÄ, C#
firstGlyphAdjustments
ÄÄD Y
,
ÄÄY Z
uint
ÄÄ[ _
secondGlyph
ÄÄ` k
,
ÄÄk l&
GlyphValueRecord_LegacyÄÄm Ñ&
secondGlyphAdjustmentsÄÄÖ õ
)ÄÄõ ú
{
ÅÅ 	
m_FirstGlyph
ÇÇ 
=
ÇÇ 

firstGlyph
ÇÇ %
;
ÇÇ% &%
m_FirstGlyphAdjustments
ÉÉ #
=
ÉÉ$ %#
firstGlyphAdjustments
ÉÉ& ;
;
ÉÉ; <
m_SecondGlyph
ÑÑ 
=
ÑÑ 
secondGlyph
ÑÑ '
;
ÑÑ' (&
m_SecondGlyphAdjustments
ÖÖ $
=
ÖÖ% &$
secondGlyphAdjustments
ÖÖ' =
;
ÖÖ= >
}
ÜÜ 	
internal
àà 
void
àà &
ConvertLegacyKerningData
àà .
(
àà. /
)
àà/ 0
{
ââ 	%
m_FirstGlyphAdjustments
ää #
.
ää# $
xAdvance
ää$ ,
=
ää- .
xOffset
ää/ 6
;
ää6 7
}
åå 	
}
éé 
[
êê 
Serializable
êê 
]
êê 
public
ëë 

class
ëë 
KerningTable
ëë 
{
íí 
public
ìì 
List
ìì 
<
ìì 
KerningPair
ìì 
>
ìì  
kerningPairs
ìì! -
;
ìì- .
public
ïï 
KerningTable
ïï 
(
ïï 
)
ïï 
{
ññ 	
kerningPairs
óó 
=
óó 
new
óó 
List
óó #
<
óó# $
KerningPair
óó$ /
>
óó/ 0
(
óó0 1
)
óó1 2
;
óó2 3
}
òò 	
public
õõ 
void
õõ 
AddKerningPair
õõ "
(
õõ" #
)
õõ# $
{
úú 	
if
ùù 
(
ùù 
kerningPairs
ùù 
.
ùù 
Count
ùù "
==
ùù# %
$num
ùù& '
)
ùù' (
{
ûû 
kerningPairs
üü 
.
üü 
Add
üü  
(
üü  !
new
üü! $
KerningPair
üü% 0
(
üü0 1
$num
üü1 2
,
üü2 3
$num
üü4 5
,
üü5 6
$num
üü7 8
)
üü8 9
)
üü9 :
;
üü: ;
}
†† 
else
°° 
{
¢¢ 
uint
££ 
left
££ 
=
££ 
kerningPairs
££ (
.
££( )
Last
££) -
(
££- .
)
££. /
.
££/ 0

firstGlyph
££0 :
;
££: ;
uint
§§ 
right
§§ 
=
§§ 
kerningPairs
§§ )
.
§§) *
Last
§§* .
(
§§. /
)
§§/ 0
.
§§0 1
secondGlyph
§§1 <
;
§§< =
float
•• 
xoffset
•• 
=
•• 
kerningPairs
••  ,
.
••, -
Last
••- 1
(
••1 2
)
••2 3
.
••3 4
xOffset
••4 ;
;
••; <
kerningPairs
ßß 
.
ßß 
Add
ßß  
(
ßß  !
new
ßß! $
KerningPair
ßß% 0
(
ßß0 1
left
ßß1 5
,
ßß5 6
right
ßß7 <
,
ßß< =
xoffset
ßß> E
)
ßßE F
)
ßßF G
;
ßßG H
}
®® 
}
©© 	
public
≥≥ 
int
≥≥ 
AddKerningPair
≥≥ !
(
≥≥! "
uint
≥≥" &
first
≥≥' ,
,
≥≥, -
uint
≥≥. 2
second
≥≥3 9
,
≥≥9 :
float
≥≥; @
offset
≥≥A G
)
≥≥G H
{
¥¥ 	
int
µµ 
index
µµ 
=
µµ 
kerningPairs
µµ $
.
µµ$ %
	FindIndex
µµ% .
(
µµ. /
item
µµ/ 3
=>
µµ4 6
item
µµ7 ;
.
µµ; <

firstGlyph
µµ< F
==
µµG I
first
µµJ O
&&
µµP R
item
µµS W
.
µµW X
secondGlyph
µµX c
==
µµd f
second
µµg m
)
µµm n
;
µµn o
if
∑∑ 
(
∑∑ 
index
∑∑ 
==
∑∑ 
-
∑∑ 
$num
∑∑ 
)
∑∑ 
{
∏∏ 
kerningPairs
ππ 
.
ππ 
Add
ππ  
(
ππ  !
new
ππ! $
KerningPair
ππ% 0
(
ππ0 1
first
ππ1 6
,
ππ6 7
second
ππ8 >
,
ππ> ?
offset
ππ@ F
)
ππF G
)
ππG H
;
ππH I
return
∫∫ 
$num
∫∫ 
;
∫∫ 
}
ªª 
return
ææ 
-
ææ 
$num
ææ 
;
ææ 
}
øø 	
public
…… 
int
…… *
AddGlyphPairAdjustmentRecord
…… /
(
……/ 0
uint
……0 4
first
……5 :
,
……: ;%
GlyphValueRecord_Legacy
……< S
firstAdjustments
……T d
,
……d e
uint
……f j
second
……k q
,
……q r&
GlyphValueRecord_Legacy……s ä!
secondAdjustments……ã ú
)……ú ù
{
   	
int
ÀÀ 
index
ÀÀ 
=
ÀÀ 
kerningPairs
ÀÀ $
.
ÀÀ$ %
	FindIndex
ÀÀ% .
(
ÀÀ. /
item
ÀÀ/ 3
=>
ÀÀ4 6
item
ÀÀ7 ;
.
ÀÀ; <

firstGlyph
ÀÀ< F
==
ÀÀG I
first
ÀÀJ O
&&
ÀÀP R
item
ÀÀS W
.
ÀÀW X
secondGlyph
ÀÀX c
==
ÀÀd f
second
ÀÀg m
)
ÀÀm n
;
ÀÀn o
if
ÕÕ 
(
ÕÕ 
index
ÕÕ 
==
ÕÕ 
-
ÕÕ 
$num
ÕÕ 
)
ÕÕ 
{
ŒŒ 
kerningPairs
œœ 
.
œœ 
Add
œœ  
(
œœ  !
new
œœ! $
KerningPair
œœ% 0
(
œœ0 1
first
œœ1 6
,
œœ6 7
firstAdjustments
œœ8 H
,
œœH I
second
œœJ P
,
œœP Q
secondAdjustments
œœR c
)
œœc d
)
œœd e
;
œœe f
return
–– 
$num
–– 
;
–– 
}
—— 
return
‘‘ 
-
‘‘ 
$num
‘‘ 
;
‘‘ 
}
’’ 	
public
◊◊ 
void
◊◊ 
RemoveKerningPair
◊◊ %
(
◊◊% &
int
◊◊& )
left
◊◊* .
,
◊◊. /
int
◊◊0 3
right
◊◊4 9
)
◊◊9 :
{
ÿÿ 	
int
ŸŸ 
index
ŸŸ 
=
ŸŸ 
kerningPairs
ŸŸ $
.
ŸŸ$ %
	FindIndex
ŸŸ% .
(
ŸŸ. /
item
ŸŸ/ 3
=>
ŸŸ4 6
item
ŸŸ7 ;
.
ŸŸ; <

firstGlyph
ŸŸ< F
==
ŸŸG I
left
ŸŸJ N
&&
ŸŸO Q
item
ŸŸR V
.
ŸŸV W
secondGlyph
ŸŸW b
==
ŸŸc e
right
ŸŸf k
)
ŸŸk l
;
ŸŸl m
if
€€ 
(
€€ 
index
€€ 
!=
€€ 
-
€€ 
$num
€€ 
)
€€ 
kerningPairs
‹‹ 
.
‹‹ 
RemoveAt
‹‹ %
(
‹‹% &
index
‹‹& +
)
‹‹+ ,
;
‹‹, -
}
›› 	
public
‡‡ 
void
‡‡ 
RemoveKerningPair
‡‡ %
(
‡‡% &
int
‡‡& )
index
‡‡* /
)
‡‡/ 0
{
·· 	
kerningPairs
‚‚ 
.
‚‚ 
RemoveAt
‚‚ !
(
‚‚! "
index
‚‚" '
)
‚‚' (
;
‚‚( )
}
„„ 	
public
ÊÊ 
void
ÊÊ 
SortKerningPairs
ÊÊ $
(
ÊÊ$ %
)
ÊÊ% &
{
ÁÁ 	
if
ÈÈ 
(
ÈÈ 
kerningPairs
ÈÈ 
.
ÈÈ 
Count
ÈÈ "
>
ÈÈ# $
$num
ÈÈ% &
)
ÈÈ& '
kerningPairs
ÍÍ 
=
ÍÍ 
kerningPairs
ÍÍ +
.
ÍÍ+ ,
OrderBy
ÍÍ, 3
(
ÍÍ3 4
s
ÍÍ4 5
=>
ÍÍ6 8
s
ÍÍ9 :
.
ÍÍ: ;

firstGlyph
ÍÍ; E
)
ÍÍE F
.
ÍÍF G
ThenBy
ÍÍG M
(
ÍÍM N
s
ÍÍN O
=>
ÍÍP R
s
ÍÍS T
.
ÍÍT U
secondGlyph
ÍÍU `
)
ÍÍ` a
.
ÍÍa b
ToList
ÍÍb h
(
ÍÍh i
)
ÍÍi j
;
ÍÍj k
}
ÎÎ 	
}
ÏÏ 
public
ÔÔ 

static
ÔÔ 
class
ÔÔ 
TMP_FontUtilities
ÔÔ )
{
 
private
ÒÒ 
static
ÒÒ 
List
ÒÒ 
<
ÒÒ 
int
ÒÒ 
>
ÒÒ  "
k_searchedFontAssets
ÒÒ! 5
;
ÒÒ5 6
public
˙˙ 
static
˙˙ 
TMP_FontAsset
˙˙ # 
SearchForCharacter
˙˙$ 6
(
˙˙6 7
TMP_FontAsset
˙˙7 D
font
˙˙E I
,
˙˙I J
uint
˙˙K O
unicode
˙˙P W
,
˙˙W X
out
˙˙Y \
TMP_Character
˙˙] j
	character
˙˙k t
)
˙˙t u
{
˚˚ 	
if
¸¸ 
(
¸¸ "
k_searchedFontAssets
¸¸ $
==
¸¸% '
null
¸¸( ,
)
¸¸, -"
k_searchedFontAssets
˝˝ $
=
˝˝% &
new
˝˝' *
List
˝˝+ /
<
˝˝/ 0
int
˝˝0 3
>
˝˝3 4
(
˝˝4 5
)
˝˝5 6
;
˝˝6 7"
k_searchedFontAssets
ˇˇ  
.
ˇˇ  !
Clear
ˇˇ! &
(
ˇˇ& '
)
ˇˇ' (
;
ˇˇ( )
return
ÅÅ (
SearchForCharacterInternal
ÅÅ -
(
ÅÅ- .
font
ÅÅ. 2
,
ÅÅ2 3
unicode
ÅÅ4 ;
,
ÅÅ; <
out
ÅÅ= @
	character
ÅÅA J
)
ÅÅJ K
;
ÅÅK L
}
ÇÇ 	
public
åå 
static
åå 
TMP_FontAsset
åå # 
SearchForCharacter
åå$ 6
(
åå6 7
List
åå7 ;
<
åå; <
TMP_FontAsset
åå< I
>
ååI J
fonts
ååK P
,
ååP Q
uint
ååR V
unicode
ååW ^
,
åå^ _
out
åå` c
TMP_Character
ååd q
	character
åår {
)
åå{ |
{
çç 	
return
éé (
SearchForCharacterInternal
éé -
(
éé- .
fonts
éé. 3
,
éé3 4
unicode
éé5 <
,
éé< =
out
éé> A
	character
ééB K
)
ééK L
;
ééL M
}
èè 	
private
íí 
static
íí 
TMP_FontAsset
íí $(
SearchForCharacterInternal
íí% ?
(
íí? @
TMP_FontAsset
íí@ M
font
ííN R
,
ííR S
uint
ííT X
unicode
ííY `
,
íí` a
out
ííb e
TMP_Character
ííf s
	character
íít }
)
íí} ~
{
ìì 	
	character
îî 
=
îî 
null
îî 
;
îî 
if
ññ 
(
ññ 
font
ññ 
==
ññ 
null
ññ 
)
ññ 
return
ññ $
null
ññ% )
;
ññ) *
if
òò 
(
òò 
font
òò 
.
òò "
characterLookupTable
òò )
.
òò) *
TryGetValue
òò* 5
(
òò5 6
unicode
òò6 =
,
òò= >
out
òò? B
	character
òòC L
)
òòL M
)
òòM N
{
ôô 
return
öö 
font
öö 
;
öö 
}
õõ 
else
úú 
if
úú 
(
úú 
font
úú 
.
úú $
fallbackFontAssetTable
úú 0
!=
úú1 3
null
úú4 8
&&
úú9 ;
font
úú< @
.
úú@ A$
fallbackFontAssetTable
úúA W
.
úúW X
Count
úúX ]
>
úú^ _
$num
úú` a
)
úúa b
{
ùù 
for
ûû 
(
ûû 
int
ûû 
i
ûû 
=
ûû 
$num
ûû 
;
ûû 
i
ûû  !
<
ûû" #
font
ûû$ (
.
ûû( )$
fallbackFontAssetTable
ûû) ?
.
ûû? @
Count
ûû@ E
&&
ûûF H
	character
ûûI R
==
ûûS U
null
ûûV Z
;
ûûZ [
i
ûû\ ]
++
ûû] _
)
ûû_ `
{
üü 
TMP_FontAsset
†† !
temp
††" &
=
††' (
font
††) -
.
††- .$
fallbackFontAssetTable
††. D
[
††D E
i
††E F
]
††F G
;
††G H
if
°° 
(
°° 
temp
°° 
==
°° 
null
°°  $
)
°°$ %
continue
°°& .
;
°°. /
int
££ 
id
££ 
=
££ 
temp
££ !
.
££! "
GetInstanceID
££" /
(
££/ 0
)
££0 1
;
££1 2
if
¶¶ 
(
¶¶ "
k_searchedFontAssets
¶¶ ,
.
¶¶, -
Contains
¶¶- 5
(
¶¶5 6
id
¶¶6 8
)
¶¶8 9
)
¶¶9 :
continue
¶¶; C
;
¶¶C D"
k_searchedFontAssets
©© (
.
©©( )
Add
©©) ,
(
©©, -
id
©©- /
)
©©/ 0
;
©©0 1
temp
´´ 
=
´´ (
SearchForCharacterInternal
´´ 5
(
´´5 6
temp
´´6 :
,
´´: ;
unicode
´´< C
,
´´C D
out
´´E H
	character
´´I R
)
´´R S
;
´´S T
if
≠≠ 
(
≠≠ 
temp
≠≠ 
!=
≠≠ 
null
≠≠  $
)
≠≠$ %
return
ÆÆ 
temp
ÆÆ #
;
ÆÆ# $
}
ØØ 
}
∞∞ 
return
≤≤ 
null
≤≤ 
;
≤≤ 
}
≥≥ 	
private
∂∂ 
static
∂∂ 
TMP_FontAsset
∂∂ $(
SearchForCharacterInternal
∂∂% ?
(
∂∂? @
List
∂∂@ D
<
∂∂D E
TMP_FontAsset
∂∂E R
>
∂∂R S
fonts
∂∂T Y
,
∂∂Y Z
uint
∂∂[ _
unicode
∂∂` g
,
∂∂g h
out
∂∂i l
TMP_Character
∂∂m z
	character∂∂{ Ñ
)∂∂Ñ Ö
{
∑∑ 	
	character
∏∏ 
=
∏∏ 
null
∏∏ 
;
∏∏ 
if
∫∫ 
(
∫∫ 
fonts
∫∫ 
!=
∫∫ 
null
∫∫ 
&&
∫∫  
fonts
∫∫! &
.
∫∫& '
Count
∫∫' ,
>
∫∫- .
$num
∫∫/ 0
)
∫∫0 1
{
ªª 
for
ºº 
(
ºº 
int
ºº 
i
ºº 
=
ºº 
$num
ºº 
;
ºº 
i
ºº  !
<
ºº" #
fonts
ºº$ )
.
ºº) *
Count
ºº* /
;
ºº/ 0
i
ºº1 2
++
ºº2 4
)
ºº4 5
{
ΩΩ 
TMP_FontAsset
ææ !
	fontAsset
ææ" +
=
ææ, -(
SearchForCharacterInternal
ææ. H
(
ææH I
fonts
ææI N
[
ææN O
i
ææO P
]
ææP Q
,
ææQ R
unicode
ææS Z
,
ææZ [
out
ææ\ _
	character
ææ` i
)
ææi j
;
ææj k
if
¿¿ 
(
¿¿ 
	fontAsset
¿¿ !
!=
¿¿" $
null
¿¿% )
)
¿¿) *
return
¡¡ 
	fontAsset
¡¡ (
;
¡¡( )
}
¬¬ 
}
√√ 
return
≈≈ 
null
≈≈ 
;
≈≈ 
}
∆∆ 	
}
«« 
}»» ﬁ¿
êD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TextMeshPro.cs
	namespace 	
TMPro
 
{ 
[ %
DisallowMultipleComponent 
] 
[		 
RequireComponent		 
(		 
typeof		 
(		 
MeshRenderer		 )
)		) *
)		* +
]		+ ,
[

 
AddComponentMenu

 
(

 
$str

 /
)

/ 0
]

0 1
[ 
ExecuteAlways 
] 
[ 
HelpURL 
( 
$str J
)J K
]K L
public 

partial 
class 
TextMeshPro $
:% &
TMP_Text' /
,/ 0
ILayoutElement1 ?
{ 
public 
int 
sortingLayerID !
{ 	
get 
{ 
if 
( 
renderer 
== 
null  $
)$ %
return 
$num 
; 
return 

m_renderer !
.! "
sortingLayerID" 0
;0 1
} 
set 
{ 
if 
( 
renderer 
== 
null  $
)$ %
return   
;   

m_renderer"" 
."" 
sortingLayerID"" )
=""* +
value"", 1
;""1 2
_SortingLayerID## 
=##  !
value##" '
;##' (
}$$ 
}%% 	
[&& 	
SerializeField&&	 
]&& 
internal'' 
int'' 
_SortingLayerID'' $
;''$ %
public,, 
int,, 
sortingOrder,, 
{-- 	
get.. 
{// 
if00 
(00 
renderer00 
==00 
null00  $
)00$ %
return11 
$num11 
;11 
return33 

m_renderer33 !
.33! "
sortingOrder33" .
;33. /
}44 
set55 
{66 
if77 
(77 
renderer77 
==77 
null77  $
)77$ %
return88 
;88 

m_renderer:: 
.:: 
sortingOrder:: '
=::( )
value::* /
;::/ 0
_SortingOrder;; 
=;; 
value;;  %
;;;% &
}<< 
}== 	
[>> 	
SerializeField>>	 
]>> 
internal?? 
int?? 
_SortingOrder?? "
;??" #
publicDD 
overrideDD 
boolDD !
autoSizeTextContainerDD 2
{EE 	
getFF 
{FF 
returnFF #
m_autoSizeTextContainerFF 0
;FF0 1
}FF2 3
setHH 
{HH 
ifHH 
(HH #
m_autoSizeTextContainerHH -
==HH. 0
valueHH1 6
)HH6 7
returnHH8 >
;HH> ?#
m_autoSizeTextContainerHH@ W
=HHX Y
valueHHZ _
;HH_ `
ifHHa c
(HHd e#
m_autoSizeTextContainerHHe |
)HH| }
{HH~ 
TMP_UpdateManager
HHÄ ë
.
HHë í1
#RegisterTextElementForLayoutRebuild
HHí µ
(
HHµ ∂
this
HH∂ ∫
)
HH∫ ª
;
HHª º
SetLayoutDirty
HHΩ À
(
HHÀ Ã
)
HHÃ Õ
;
HHÕ Œ
}
HHœ –
}
HH— “
}II 	
[OO 	
ObsoleteOO	 
(OO 
$strOO U
)OOU V
]OOV W
publicPP 
TextContainerPP 
textContainerPP *
{QQ 	
getRR 
{SS 
returnTT 
nullTT 
;TT 
}UU 
}VV 	
public\\ 
new\\ 
	Transform\\ 
	transform\\ &
{]] 	
get^^ 
{__ 
if`` 
(`` 
m_transform`` 
==``  "
null``# '
)``' (
m_transformaa 
=aa  !
GetComponentaa" .
<aa. /
	Transformaa/ 8
>aa8 9
(aa9 :
)aa: ;
;aa; <
returncc 
m_transformcc "
;cc" #
}dd 
}ee 	
publicll 
Rendererll 
rendererll  
{mm 	
getnn 
{oo 
ifpp 
(pp 

m_rendererpp 
==pp !
nullpp" &
)pp& '

m_rendererqq 
=qq  
GetComponentqq! -
<qq- .
Rendererqq. 6
>qq6 7
(qq7 8
)qq8 9
;qq9 :
returnss 

m_rendererss !
;ss! "
}tt 
}uu 	
public{{ 
override{{ 
Mesh{{ 
mesh{{ !
{|| 	
get}} 
{~~ 
if 
( 
m_mesh 
== 
null "
)" #
{
ÄÄ 
m_mesh
ÅÅ 
=
ÅÅ 
new
ÅÅ  
Mesh
ÅÅ! %
(
ÅÅ% &
)
ÅÅ& '
;
ÅÅ' (
m_mesh
ÇÇ 
.
ÇÇ 
	hideFlags
ÇÇ $
=
ÇÇ% &
	HideFlags
ÇÇ' 0
.
ÇÇ0 1
HideAndDontSave
ÇÇ1 @
;
ÇÇ@ A
}
ÉÉ 
return
ÖÖ 
m_mesh
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}
áá 	
public
åå 

MeshFilter
åå 

meshFilter
åå $
{
çç 	
get
éé 
{
èè 
if
êê 
(
êê 
m_meshFilter
êê  
==
êê! #
null
êê$ (
)
êê( )
{
ëë 
m_meshFilter
íí  
=
íí! "
GetComponent
íí# /
<
íí/ 0

MeshFilter
íí0 :
>
íí: ;
(
íí; <
)
íí< =
;
íí= >
if
îî 
(
îî 
m_meshFilter
îî $
==
îî% '
null
îî( ,
)
îî, -
{
ïï 
m_meshFilter
ññ $
=
ññ% &

gameObject
ññ' 1
.
ññ1 2
AddComponent
ññ2 >
<
ññ> ?

MeshFilter
ññ? I
>
ññI J
(
ññJ K
)
ññK L
;
ññL M
m_meshFilter
óó $
.
óó$ %
	hideFlags
óó% .
=
óó/ 0
	HideFlags
óó1 :
.
óó: ;
HideInInspector
óó; J
|
óóK L
	HideFlags
óóM V
.
óóV W
HideAndDontSave
óóW f
;
óóf g
}
òò 
}
ôô 
return
õõ 
m_meshFilter
õõ #
;
õõ# $
}
úú 
}
ùù 	
public
££ 
MaskingTypes
££ 
maskType
££ $
{
§§ 	
get
•• 
{
•• 
return
•• 

m_maskType
•• #
;
••# $
}
••% &
set
¶¶ 
{
¶¶ 

m_maskType
¶¶ 
=
¶¶ 
value
¶¶ $
;
¶¶$ %
SetMask
¶¶& -
(
¶¶- .

m_maskType
¶¶. 8
)
¶¶8 9
;
¶¶9 :
}
¶¶; <
}
ßß 	
public
ØØ 
void
ØØ 
SetMask
ØØ 
(
ØØ 
MaskingTypes
ØØ (
type
ØØ) -
,
ØØ- .
Vector4
ØØ/ 6

maskCoords
ØØ7 A
)
ØØA B
{
∞∞ 	
SetMask
±± 
(
±± 
type
±± 
)
±± 
;
±±  
SetMaskCoordinates
≥≥ 
(
≥≥ 

maskCoords
≥≥ )
)
≥≥) *
;
≥≥* +
}
¥¥ 	
public
ΩΩ 
void
ΩΩ 
SetMask
ΩΩ 
(
ΩΩ 
MaskingTypes
ΩΩ (
type
ΩΩ) -
,
ΩΩ- .
Vector4
ΩΩ/ 6

maskCoords
ΩΩ7 A
,
ΩΩA B
float
ΩΩC H
	softnessX
ΩΩI R
,
ΩΩR S
float
ΩΩT Y
	softnessY
ΩΩZ c
)
ΩΩc d
{
ææ 	
SetMask
øø 
(
øø 
type
øø 
)
øø 
;
øø  
SetMaskCoordinates
¡¡ 
(
¡¡ 

maskCoords
¡¡ )
,
¡¡) *
	softnessX
¡¡+ 4
,
¡¡4 5
	softnessY
¡¡6 ?
)
¡¡? @
;
¡¡@ A
}
¬¬ 	
public
»» 
override
»» 
void
»» 
SetVerticesDirty
»» -
(
»»- .
)
»». /
{
…… 	
if
ÃÃ 
(
ÃÃ 
this
ÃÃ 
==
ÃÃ 
null
ÃÃ 
||
ÃÃ 
!
ÃÃ  !
this
ÃÃ! %
.
ÃÃ% &
IsActive
ÃÃ& .
(
ÃÃ. /
)
ÃÃ/ 0
)
ÃÃ0 1
return
ÕÕ 
;
ÕÕ 
TMP_UpdateManager
œœ 
.
œœ 2
$RegisterTextElementForGraphicRebuild
œœ B
(
œœB C
this
œœC G
)
œœG H
;
œœH I
}
–– 	
public
÷÷ 
override
÷÷ 
void
÷÷ 
SetLayoutDirty
÷÷ +
(
÷÷+ ,
)
÷÷, -
{
◊◊ 	%
m_isPreferredWidthDirty
ÿÿ #
=
ÿÿ$ %
true
ÿÿ& *
;
ÿÿ* +&
m_isPreferredHeightDirty
ŸŸ $
=
ŸŸ% &
true
ŸŸ' +
;
ŸŸ+ ,
if
€€ 
(
€€ 
this
€€ 
==
€€ 
null
€€ 
||
€€ 
!
€€  !
this
€€! %
.
€€% &
IsActive
€€& .
(
€€. /
)
€€/ 0
)
€€0 1
return
‹‹ 
;
‹‹ 
LayoutRebuilder
ﬁﬁ 
.
ﬁﬁ "
MarkLayoutForRebuild
ﬁﬁ 0
(
ﬁﬁ0 1
this
ﬁﬁ1 5
.
ﬁﬁ5 6
rectTransform
ﬁﬁ6 C
)
ﬁﬁC D
;
ﬁﬁD E
m_isLayoutDirty
‡‡ 
=
‡‡ 
true
‡‡ "
;
‡‡" #
}
·· 	
public
ÁÁ 
override
ÁÁ 
void
ÁÁ 
SetMaterialDirty
ÁÁ -
(
ÁÁ- .
)
ÁÁ. /
{
ËË 	
UpdateMaterial
ÔÔ 
(
ÔÔ 
)
ÔÔ 
;
ÔÔ 
}
ÒÒ 	
public
˜˜ 
override
˜˜ 
void
˜˜ 
SetAllDirty
˜˜ (
(
˜˜( )
)
˜˜) *
{
¯¯ 	&
m_isInputParsingRequired
˘˘ $
=
˘˘% &
true
˘˘' +
;
˘˘+ ,
SetLayoutDirty
˚˚ 
(
˚˚ 
)
˚˚ 
;
˚˚ 
SetVerticesDirty
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
SetMaterialDirty
˝˝ 
(
˝˝ 
)
˝˝ 
;
˝˝ 
}
˛˛ 	
public
ÖÖ 
override
ÖÖ 
void
ÖÖ 
Rebuild
ÖÖ $
(
ÖÖ$ %
CanvasUpdate
ÖÖ% 1
update
ÖÖ2 8
)
ÖÖ8 9
{
ÜÜ 	
if
áá 
(
áá 
this
áá 
==
áá 
null
áá 
)
áá 
return
áá $
;
áá$ %
if
ââ 
(
ââ 
update
ââ 
==
ââ 
CanvasUpdate
ââ &
.
ââ& '
	Prelayout
ââ' 0
)
ââ0 1
{
ää 
if
ãã 
(
ãã %
m_autoSizeTextContainer
ãã +
)
ãã+ ,
{
åå 
m_rectTransform
çç #
.
çç# $
	sizeDelta
çç$ -
=
çç. / 
GetPreferredValues
çç0 B
(
ççB C
Mathf
ççC H
.
ççH I
Infinity
ççI Q
,
ççQ R
Mathf
ççS X
.
ççX Y
Infinity
ççY a
)
çça b
;
ççb c
}
éé 
}
èè 
else
êê 
if
êê 
(
êê 
update
êê 
==
êê 
CanvasUpdate
êê +
.
êê+ ,
	PreRender
êê, 5
)
êê5 6
{
ëë 
this
íí 
.
íí 
OnPreRenderObject
íí &
(
íí& '
)
íí' (
;
íí( )
if
îî 
(
îî 
!
îî 
m_isMaterialDirty
îî &
)
îî& '
return
îî( .
;
îî. /
UpdateMaterial
ññ 
(
ññ 
)
ññ  
;
ññ  !
m_isMaterialDirty
óó !
=
óó" #
false
óó$ )
;
óó) *
}
òò 
}
ôô 	
	protected
üü 
override
üü 
void
üü 
UpdateMaterial
üü  .
(
üü. /
)
üü/ 0
{
†† 	
if
¶¶ 
(
¶¶ 
renderer
¶¶ 
==
¶¶ 
null
¶¶  
||
¶¶! #
m_sharedMaterial
¶¶$ 4
==
¶¶5 7
null
¶¶8 <
)
¶¶< =
return
ßß 
;
ßß 
if
™™ 
(
™™ 

m_renderer
™™ 
.
™™ 
sharedMaterial
™™ )
==
™™* ,
null
™™- 1
||
™™2 4

m_renderer
™™5 ?
.
™™? @
sharedMaterial
™™@ N
.
™™N O
GetInstanceID
™™O \
(
™™\ ]
)
™™] ^
!=
™™_ a
m_sharedMaterial
™™b r
.
™™r s
GetInstanceID™™s Ä
(™™Ä Å
)™™Å Ç
)™™Ç É

m_renderer
´´ 
.
´´ 
sharedMaterial
´´ )
=
´´* +
m_sharedMaterial
´´, <
;
´´< =
}
¨¨ 	
public
≤≤ 
override
≤≤ 
void
≤≤ 
UpdateMeshPadding
≤≤ .
(
≤≤. /
)
≤≤/ 0
{
≥≥ 	
	m_padding
¥¥ 
=
¥¥ 
ShaderUtilities
¥¥ '
.
¥¥' (

GetPadding
¥¥( 2
(
¥¥2 3
m_sharedMaterial
¥¥3 C
,
¥¥C D"
m_enableExtraPadding
¥¥E Y
,
¥¥Y Z
m_isUsingBold
¥¥[ h
)
¥¥h i
;
¥¥i j 
m_isMaskingEnabled
µµ 
=
µµ  
ShaderUtilities
µµ! 0
.
µµ0 1
IsMaskingEnabled
µµ1 A
(
µµA B
m_sharedMaterial
µµB R
)
µµR S
;
µµS T%
m_havePropertiesChanged
∂∂ #
=
∂∂$ %
true
∂∂& *
;
∂∂* +"
checkPaddingRequired
∑∑  
=
∑∑! "
false
∑∑# (
;
∑∑( )
if
∫∫ 
(
∫∫ 

m_textInfo
∫∫ 
==
∫∫ 
null
∫∫ "
)
∫∫" #
return
∫∫$ *
;
∫∫* +
for
ΩΩ 
(
ΩΩ 
int
ΩΩ 
i
ΩΩ 
=
ΩΩ 
$num
ΩΩ 
;
ΩΩ 
i
ΩΩ 
<
ΩΩ 

m_textInfo
ΩΩ  *
.
ΩΩ* +
materialCount
ΩΩ+ 8
;
ΩΩ8 9
i
ΩΩ: ;
++
ΩΩ; =
)
ΩΩ= >
m_subTextObjects
ææ  
[
ææ  !
i
ææ! "
]
ææ" #
.
ææ# $
UpdateMeshPadding
ææ$ 5
(
ææ5 6"
m_enableExtraPadding
ææ6 J
,
ææJ K
m_isUsingBold
ææL Y
)
ææY Z
;
ææZ [
}
øø 	
public
«« 
override
«« 
void
«« 
ForceMeshUpdate
«« ,
(
««, -
bool
««- 1
ignoreActiveState
««2 C
=
««D E
false
««F K
,
««K L
bool
««M Q 
forceTextReparsing
««R d
=
««e f
false
««g l
)
««l m
{
»» 	%
m_havePropertiesChanged
…… #
=
……$ %
true
……& *
;
……* +!
m_ignoreActiveState
   
=
    !
ignoreActiveState
  " 3
;
  3 4&
m_isInputParsingRequired
ÀÀ $
=
ÀÀ% &&
m_isInputParsingRequired
ÀÀ' ?
?
ÀÀ@ A
true
ÀÀB F
:
ÀÀG H 
forceTextReparsing
ÀÀI [
;
ÀÀ[ \
OnPreRenderObject
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ  
}
ÕÕ 	
public
’’ 
override
’’ 
TMP_TextInfo
’’ $
GetTextInfo
’’% 0
(
’’0 1
string
’’1 7
text
’’8 <
)
’’< =
{
÷÷ 	+
StringToInternalParsingBuffer
◊◊ )
(
◊◊) *
text
◊◊* .
,
◊◊. /
ref
◊◊0 3%
m_InternalParsingBuffer
◊◊4 K
)
◊◊K L
;
◊◊L M
SetArraySizes
ÿÿ 
(
ÿÿ %
m_InternalParsingBuffer
ÿÿ 1
)
ÿÿ1 2
;
ÿÿ2 3
m_renderMode
⁄⁄ 
=
⁄⁄ 
TextRenderFlags
⁄⁄ *
.
⁄⁄* +

DontRender
⁄⁄+ 5
;
⁄⁄5 6
ComputeMarginSize
‹‹ 
(
‹‹ 
)
‹‹ 
;
‹‹  
GenerateTextMesh
ﬁﬁ 
(
ﬁﬁ 
)
ﬁﬁ 
;
ﬁﬁ 
m_renderMode
‡‡ 
=
‡‡ 
TextRenderFlags
‡‡ *
.
‡‡* +
Render
‡‡+ 1
;
‡‡1 2
return
‚‚ 
this
‚‚ 
.
‚‚ 
textInfo
‚‚  
;
‚‚  !
}
„„ 	
public
ÈÈ 
override
ÈÈ 
void
ÈÈ 
	ClearMesh
ÈÈ &
(
ÈÈ& '
bool
ÈÈ' +

updateMesh
ÈÈ, 6
)
ÈÈ6 7
{
ÍÍ 	
if
ÎÎ 
(
ÎÎ 

m_textInfo
ÎÎ 
.
ÎÎ 
meshInfo
ÎÎ #
[
ÎÎ# $
$num
ÎÎ$ %
]
ÎÎ% &
.
ÎÎ& '
mesh
ÎÎ' +
==
ÎÎ, .
null
ÎÎ/ 3
)
ÎÎ3 4

m_textInfo
ÎÎ5 ?
.
ÎÎ? @
meshInfo
ÎÎ@ H
[
ÎÎH I
$num
ÎÎI J
]
ÎÎJ K
.
ÎÎK L
mesh
ÎÎL P
=
ÎÎQ R
m_mesh
ÎÎS Y
;
ÎÎY Z

m_textInfo
ÌÌ 
.
ÌÌ 
ClearMeshInfo
ÌÌ $
(
ÌÌ$ %

updateMesh
ÌÌ% /
)
ÌÌ/ 0
;
ÌÌ0 1
}
ÓÓ 	
public
ÙÙ 
override
ÙÙ 
event
ÙÙ 
Action
ÙÙ $
<
ÙÙ$ %
TMP_TextInfo
ÙÙ% 1
>
ÙÙ1 2
OnPreRenderText
ÙÙ3 B
;
ÙÙB C
public
¸¸ 
override
¸¸ 
void
¸¸ 
UpdateGeometry
¸¸ +
(
¸¸+ ,
Mesh
¸¸, 0
mesh
¸¸1 5
,
¸¸5 6
int
¸¸7 :
index
¸¸; @
)
¸¸@ A
{
˝˝ 	
mesh
˛˛ 
.
˛˛ 
RecalculateBounds
˛˛ "
(
˛˛" #
)
˛˛# $
;
˛˛$ %
}
ˇˇ 	
public
ÖÖ 
override
ÖÖ 
void
ÖÖ 
UpdateVertexData
ÖÖ -
(
ÖÖ- .'
TMP_VertexDataUpdateFlags
ÖÖ. G
flags
ÖÖH M
)
ÖÖM N
{
ÜÜ 	
int
áá 
materialCount
áá 
=
áá 

m_textInfo
áá  *
.
áá* +
materialCount
áá+ 8
;
áá8 9
for
ââ 
(
ââ 
int
ââ 
i
ââ 
=
ââ 
$num
ââ 
;
ââ 
i
ââ 
<
ââ 
materialCount
ââ  -
;
ââ- .
i
ââ/ 0
++
ââ0 2
)
ââ2 3
{
ää 
Mesh
ãã 
mesh
ãã 
;
ãã 
if
çç 
(
çç 
i
çç 
==
çç 
$num
çç 
)
çç 
mesh
éé 
=
éé 
m_mesh
éé !
;
éé! "
else
èè 
{
êê 
mesh
ïï 
=
ïï 
m_subTextObjects
ïï +
[
ïï+ ,
i
ïï, -
]
ïï- .
.
ïï. /
mesh
ïï/ 3
;
ïï3 4
}
ññ 
if
öö 
(
öö 
(
öö 
flags
öö 
&
öö '
TMP_VertexDataUpdateFlags
öö 6
.
öö6 7
Vertices
öö7 ?
)
öö? @
==
ööA C'
TMP_VertexDataUpdateFlags
ööD ]
.
öö] ^
Vertices
öö^ f
)
ööf g
mesh
õõ 
.
õõ 
vertices
õõ !
=
õõ" #

m_textInfo
õõ$ .
.
õõ. /
meshInfo
õõ/ 7
[
õõ7 8
i
õõ8 9
]
õõ9 :
.
õõ: ;
vertices
õõ; C
;
õõC D
if
ùù 
(
ùù 
(
ùù 
flags
ùù 
&
ùù '
TMP_VertexDataUpdateFlags
ùù 6
.
ùù6 7
Uv0
ùù7 :
)
ùù: ;
==
ùù< >'
TMP_VertexDataUpdateFlags
ùù? X
.
ùùX Y
Uv0
ùùY \
)
ùù\ ]
mesh
ûû 
.
ûû 
uv
ûû 
=
ûû 

m_textInfo
ûû (
.
ûû( )
meshInfo
ûû) 1
[
ûû1 2
i
ûû2 3
]
ûû3 4
.
ûû4 5
uvs0
ûû5 9
;
ûû9 :
if
†† 
(
†† 
(
†† 
flags
†† 
&
†† '
TMP_VertexDataUpdateFlags
†† 6
.
††6 7
Uv2
††7 :
)
††: ;
==
††< >'
TMP_VertexDataUpdateFlags
††? X
.
††X Y
Uv2
††Y \
)
††\ ]
mesh
°° 
.
°° 
uv2
°° 
=
°° 

m_textInfo
°° )
.
°°) *
meshInfo
°°* 2
[
°°2 3
i
°°3 4
]
°°4 5
.
°°5 6
uvs2
°°6 :
;
°°: ;
if
¶¶ 
(
¶¶ 
(
¶¶ 
flags
¶¶ 
&
¶¶ '
TMP_VertexDataUpdateFlags
¶¶ 6
.
¶¶6 7
Colors32
¶¶7 ?
)
¶¶? @
==
¶¶A C'
TMP_VertexDataUpdateFlags
¶¶D ]
.
¶¶] ^
Colors32
¶¶^ f
)
¶¶f g
mesh
ßß 
.
ßß 
colors32
ßß !
=
ßß" #

m_textInfo
ßß$ .
.
ßß. /
meshInfo
ßß/ 7
[
ßß7 8
i
ßß8 9
]
ßß9 :
.
ßß: ;
colors32
ßß; C
;
ßßC D
mesh
©© 
.
©© 
RecalculateBounds
©© &
(
©©& '
)
©©' (
;
©©( )
}
™™ 
}
´´ 	
public
±± 
override
±± 
void
±± 
UpdateVertexData
±± -
(
±±- .
)
±±. /
{
≤≤ 	
int
≥≥ 
materialCount
≥≥ 
=
≥≥ 

m_textInfo
≥≥  *
.
≥≥* +
materialCount
≥≥+ 8
;
≥≥8 9
for
µµ 
(
µµ 
int
µµ 
i
µµ 
=
µµ 
$num
µµ 
;
µµ 
i
µµ 
<
µµ 
materialCount
µµ  -
;
µµ- .
i
µµ/ 0
++
µµ0 2
)
µµ2 3
{
∂∂ 
Mesh
∑∑ 
mesh
∑∑ 
;
∑∑ 
if
ππ 
(
ππ 
i
ππ 
==
ππ 
$num
ππ 
)
ππ 
mesh
∫∫ 
=
∫∫ 
m_mesh
∫∫ !
;
∫∫! "
else
ªª 
{
ºº 

m_textInfo
ææ 
.
ææ 
meshInfo
ææ '
[
ææ' (
i
ææ( )
]
ææ) *
.
ææ* +!
ClearUnusedVertices
ææ+ >
(
ææ> ?
)
ææ? @
;
ææ@ A
mesh
¿¿ 
=
¿¿ 
m_subTextObjects
¿¿ +
[
¿¿+ ,
i
¿¿, -
]
¿¿- .
.
¿¿. /
mesh
¿¿/ 3
;
¿¿3 4
}
¡¡ 
mesh
≈≈ 
.
≈≈ 
vertices
≈≈ 
=
≈≈ 

m_textInfo
≈≈  *
.
≈≈* +
meshInfo
≈≈+ 3
[
≈≈3 4
i
≈≈4 5
]
≈≈5 6
.
≈≈6 7
vertices
≈≈7 ?
;
≈≈? @
mesh
∆∆ 
.
∆∆ 
uv
∆∆ 
=
∆∆ 

m_textInfo
∆∆ $
.
∆∆$ %
meshInfo
∆∆% -
[
∆∆- .
i
∆∆. /
]
∆∆/ 0
.
∆∆0 1
uvs0
∆∆1 5
;
∆∆5 6
mesh
«« 
.
«« 
uv2
«« 
=
«« 

m_textInfo
«« %
.
««% &
meshInfo
««& .
[
««. /
i
««/ 0
]
««0 1
.
««1 2
uvs2
««2 6
;
««6 7
mesh
…… 
.
…… 
colors32
…… 
=
…… 

m_textInfo
……  *
.
……* +
meshInfo
……+ 3
[
……3 4
i
……4 5
]
……5 6
.
……6 7
colors32
……7 ?
;
……? @
mesh
ÀÀ 
.
ÀÀ 
RecalculateBounds
ÀÀ &
(
ÀÀ& '
)
ÀÀ' (
;
ÀÀ( )
}
ÃÃ 
}
ÕÕ 	
public
œœ 
void
œœ 
UpdateFontAsset
œœ #
(
œœ# $
)
œœ$ %
{
–– 	
LoadFontAsset
—— 
(
—— 
)
—— 
;
—— 
}
““ 	
private
’’ 
bool
’’ #
m_currentAutoSizeMode
’’ *
;
’’* +
public
ÿÿ 
void
ÿÿ ,
CalculateLayoutInputHorizontal
ÿÿ 2
(
ÿÿ2 3
)
ÿÿ3 4
{
ÿÿ5 6
}
ÿÿ7 8
public
⁄⁄ 
void
⁄⁄ *
CalculateLayoutInputVertical
⁄⁄ 0
(
⁄⁄0 1
)
⁄⁄1 2
{
⁄⁄3 4
}
⁄⁄5 6
}
€€ 
}‹‹ é
èD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_Sprite.cs
	namespace 	
TMPro
 
{ 
[ 
Serializable 
] 
public 

class 

TMP_Sprite 
: "
TMP_TextElement_Legacy 4
{ 
public 
string 
name 
; 
public 
int 
hashCode 
; 
public 
int 
unicode 
; 
public 
Vector2 
pivot 
; 
public 
Sprite 
sprite 
; 
} 
} õ∑
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_TextInfo.cs
	namespace 	
TMPro
 
{ 
[ 
Serializable 
] 
public 

class 
TMP_TextInfo 
{ 
internal 
static 
Vector2 $
k_InfinityVectorPositive  8
=9 :
new; >
Vector2? F
(F G
$numG L
,L M
$numN S
)S T
;T U
internal 
static 
Vector2 $
k_InfinityVectorNegative  8
=9 :
new; >
Vector2? F
(F G
-G H
$numH M
,M N
-O P
$numP U
)U V
;V W
public 
TMP_Text 
textComponent %
;% &
public 
int 
characterCount !
;! "
public 
int 
spriteCount 
; 
public 
int 

spaceCount 
; 
public 
int 
	wordCount 
; 
public 
int 
	linkCount 
; 
public 
int 
	lineCount 
; 
public 
int 
	pageCount 
; 
public 
int 
materialCount  
;  !
public 
TMP_CharacterInfo  
[  !
]! "
characterInfo# 0
;0 1
public 
TMP_WordInfo 
[ 
] 
wordInfo &
;& '
public   
TMP_LinkInfo   
[   
]   
linkInfo   &
;  & '
public!! 
TMP_LineInfo!! 
[!! 
]!! 
lineInfo!! &
;!!& '
public"" 
TMP_PageInfo"" 
["" 
]"" 
pageInfo"" &
;""& '
public## 
TMP_MeshInfo## 
[## 
]## 
meshInfo## &
;##& '
private%% 
TMP_MeshInfo%% 
[%% 
]%% 
m_CachedMeshInfo%% /
;%%/ 0
public(( 
TMP_TextInfo(( 
((( 
)(( 
{)) 	
characterInfo** 
=** 
new** 
TMP_CharacterInfo**  1
[**1 2
$num**2 3
]**3 4
;**4 5
wordInfo++ 
=++ 
new++ 
TMP_WordInfo++ '
[++' (
$num++( *
]++* +
;+++ ,
linkInfo,, 
=,, 
new,, 
TMP_LinkInfo,, '
[,,' (
$num,,( )
],,) *
;,,* +
lineInfo-- 
=-- 
new-- 
TMP_LineInfo-- '
[--' (
$num--( )
]--) *
;--* +
pageInfo.. 
=.. 
new.. 
TMP_PageInfo.. '
[..' (
$num..( )
]..) *
;..* +
meshInfo00 
=00 
new00 
TMP_MeshInfo00 '
[00' (
$num00( )
]00) *
;00* +
}11 	
internal33 
TMP_TextInfo33 
(33 
int33 !
characterCount33" 0
)330 1
{44 	
characterInfo55 
=55 
new55 
TMP_CharacterInfo55  1
[551 2
characterCount552 @
]55@ A
;55A B
wordInfo66 
=66 
new66 
TMP_WordInfo66 '
[66' (
$num66( *
]66* +
;66+ ,
linkInfo77 
=77 
new77 
TMP_LinkInfo77 '
[77' (
$num77( )
]77) *
;77* +
lineInfo88 
=88 
new88 
TMP_LineInfo88 '
[88' (
$num88( )
]88) *
;88* +
pageInfo99 
=99 
new99 
TMP_PageInfo99 '
[99' (
$num99( )
]99) *
;99* +
meshInfo;; 
=;; 
new;; 
TMP_MeshInfo;; '
[;;' (
$num;;( )
];;) *
;;;* +
}<< 	
public>> 
TMP_TextInfo>> 
(>> 
TMP_Text>> $
textComponent>>% 2
)>>2 3
{?? 	
this@@ 
.@@ 
textComponent@@ 
=@@  
textComponent@@! .
;@@. /
characterInfoBB 
=BB 
newBB 
TMP_CharacterInfoBB  1
[BB1 2
$numBB2 3
]BB3 4
;BB4 5
wordInfoDD 
=DD 
newDD 
TMP_WordInfoDD '
[DD' (
$numDD( )
]DD) *
;DD* +
linkInfoEE 
=EE 
newEE 
TMP_LinkInfoEE '
[EE' (
$numEE( )
]EE) *
;EE* +
lineInfoGG 
=GG 
newGG 
TMP_LineInfoGG '
[GG' (
$numGG( )
]GG) *
;GG* +
pageInfoHH 
=HH 
newHH 
TMP_PageInfoHH '
[HH' (
$numHH( )
]HH) *
;HH* +
meshInfoJJ 
=JJ 
newJJ 
TMP_MeshInfoJJ '
[JJ' (
$numJJ( )
]JJ) *
;JJ* +
meshInfoKK 
[KK 
$numKK 
]KK 
.KK 
meshKK 
=KK 
textComponentKK ,
.KK, -
meshKK- 1
;KK1 2
materialCountLL 
=LL 
$numLL 
;LL 
}MM 	
publicSS 
voidSS 
ClearSS 
(SS 
)SS 
{TT 	
characterCountUU 
=UU 
$numUU 
;UU 

spaceCountVV 
=VV 
$numVV 
;VV 
	wordCountWW 
=WW 
$numWW 
;WW 
	linkCountXX 
=XX 
$numXX 
;XX 
	lineCountYY 
=YY 
$numYY 
;YY 
	pageCountZZ 
=ZZ 
$numZZ 
;ZZ 
spriteCount[[ 
=[[ 
$num[[ 
;[[ 
for]] 
(]] 
int]] 
i]] 
=]] 
$num]] 
;]] 
i]] 
<]] 
this]]  $
.]]$ %
meshInfo]]% -
.]]- .
Length]]. 4
;]]4 5
i]]6 7
++]]7 9
)]]9 :
{^^ 
this__ 
.__ 
meshInfo__ 
[__ 
i__ 
]__  
.__  !
vertexCount__! ,
=__- .
$num__/ 0
;__0 1
}`` 
}aa 	
publicgg 
voidgg 
ClearMeshInfogg !
(gg! "
boolgg" &

updateMeshgg' 1
)gg1 2
{hh 	
forii 
(ii 
intii 
iii 
=ii 
$numii 
;ii 
iii 
<ii 
thisii  $
.ii$ %
meshInfoii% -
.ii- .
Lengthii. 4
;ii4 5
iii6 7
++ii7 9
)ii9 :
thisjj 
.jj 
meshInfojj 
[jj 
ijj 
]jj  
.jj  !
Clearjj! &
(jj& '

updateMeshjj' 1
)jj1 2
;jj2 3
}kk 	
publicqq 
voidqq 
ClearAllMeshInfoqq $
(qq$ %
)qq% &
{rr 	
forss 
(ss 
intss 
iss 
=ss 
$numss 
;ss 
iss 
<ss 
thisss  $
.ss$ %
meshInfoss% -
.ss- .
Lengthss. 4
;ss4 5
iss6 7
++ss7 9
)ss9 :
thistt 
.tt 
meshInfott 
[tt 
itt 
]tt  
.tt  !
Cleartt! &
(tt& '
truett' +
)tt+ ,
;tt, -
}uu 	
public{{ 
void{{ 
ResetVertexLayout{{ %
({{% &
bool{{& *
isVolumetric{{+ 7
){{7 8
{|| 	
for}} 
(}} 
int}} 
i}} 
=}} 
$num}} 
;}} 
i}} 
<}} 
this}}  $
.}}$ %
meshInfo}}% -
.}}- .
Length}}. 4
;}}4 5
i}}6 7
++}}7 9
)}}9 :
this~~ 
.~~ 
meshInfo~~ 
[~~ 
i~~ 
]~~  
.~~  !
ResizeMeshInfo~~! /
(~~/ 0
$num~~0 1
,~~1 2
isVolumetric~~3 ?
)~~? @
;~~@ A
} 	
public
ÜÜ 
void
ÜÜ !
ClearUnusedVertices
ÜÜ '
(
ÜÜ' (
MaterialReference
ÜÜ( 9
[
ÜÜ9 :
]
ÜÜ: ;
	materials
ÜÜ< E
)
ÜÜE F
{
áá 	
for
àà 
(
àà 
int
àà 
i
àà 
=
àà 
$num
àà 
;
àà 
i
àà 
<
àà 
meshInfo
àà  (
.
àà( )
Length
àà) /
;
àà/ 0
i
àà1 2
++
àà2 4
)
àà4 5
{
ââ 
int
ää 
start
ää 
=
ää 
$num
ää 
;
ää 
meshInfo
ãã 
[
ãã 
i
ãã 
]
ãã 
.
ãã !
ClearUnusedVertices
ãã /
(
ãã/ 0
start
ãã0 5
)
ãã5 6
;
ãã6 7
}
åå 
}
çç 	
public
ìì 
void
ìì 
ClearLineInfo
ìì !
(
ìì! "
)
ìì" #
{
îî 	
if
ïï 
(
ïï 
this
ïï 
.
ïï 
lineInfo
ïï 
==
ïï  
null
ïï! %
)
ïï% &
this
ññ 
.
ññ 
lineInfo
ññ 
=
ññ 
new
ññ  #
TMP_LineInfo
ññ$ 0
[
ññ0 1
$num
ññ1 2
]
ññ2 3
;
ññ3 4
int
òò 
length
òò 
=
òò 
this
òò 
.
òò 
lineInfo
òò &
.
òò& '
Length
òò' -
;
òò- .
for
öö 
(
öö 
int
öö 
i
öö 
=
öö 
$num
öö 
;
öö 
i
öö 
<
öö 
length
öö  &
;
öö& '
i
öö( )
++
öö) +
)
öö+ ,
{
õõ 
this
úú 
.
úú 
lineInfo
úú 
[
úú 
i
úú 
]
úú  
.
úú  !
characterCount
úú! /
=
úú0 1
$num
úú2 3
;
úú3 4
this
ùù 
.
ùù 
lineInfo
ùù 
[
ùù 
i
ùù 
]
ùù  
.
ùù  !

spaceCount
ùù! +
=
ùù, -
$num
ùù. /
;
ùù/ 0
this
ûû 
.
ûû 
lineInfo
ûû 
[
ûû 
i
ûû 
]
ûû  
.
ûû  !
	wordCount
ûû! *
=
ûû+ ,
$num
ûû- .
;
ûû. /
this
üü 
.
üü 
lineInfo
üü 
[
üü 
i
üü 
]
üü  
.
üü  !#
controlCharacterCount
üü! 6
=
üü7 8
$num
üü9 :
;
üü: ;
this
†† 
.
†† 
lineInfo
†† 
[
†† 
i
†† 
]
††  
.
††  !
width
††! &
=
††' (
$num
††) *
;
††* +
this
¢¢ 
.
¢¢ 
lineInfo
¢¢ 
[
¢¢ 
i
¢¢ 
]
¢¢  
.
¢¢  !
ascender
¢¢! )
=
¢¢* +&
k_InfinityVectorNegative
¢¢, D
.
¢¢D E
x
¢¢E F
;
¢¢F G
this
££ 
.
££ 
lineInfo
££ 
[
££ 
i
££ 
]
££  
.
££  !
	descender
££! *
=
££+ ,&
k_InfinityVectorPositive
££- E
.
££E F
x
££F G
;
££G H
this
•• 
.
•• 
lineInfo
•• 
[
•• 
i
•• 
]
••  
.
••  !

marginLeft
••! +
=
••, -
$num
••. /
;
••/ 0
this
¶¶ 
.
¶¶ 
lineInfo
¶¶ 
[
¶¶ 
i
¶¶ 
]
¶¶  
.
¶¶  !
marginRight
¶¶! ,
=
¶¶- .
$num
¶¶/ 0
;
¶¶0 1
this
®® 
.
®® 
lineInfo
®® 
[
®® 
i
®® 
]
®®  
.
®®  !
lineExtents
®®! ,
.
®®, -
min
®®- 0
=
®®1 2&
k_InfinityVectorPositive
®®3 K
;
®®K L
this
©© 
.
©© 
lineInfo
©© 
[
©© 
i
©© 
]
©©  
.
©©  !
lineExtents
©©! ,
.
©©, -
max
©©- 0
=
©©1 2&
k_InfinityVectorNegative
©©3 K
;
©©K L
this
´´ 
.
´´ 
lineInfo
´´ 
[
´´ 
i
´´ 
]
´´  
.
´´  !

maxAdvance
´´! +
=
´´, -
$num
´´. /
;
´´/ 0
}
≠≠ 
}
ÆÆ 	
internal
∞∞ 
void
∞∞ 
ClearPageInfo
∞∞ #
(
∞∞# $
)
∞∞$ %
{
±± 	
if
≤≤ 
(
≤≤ 
this
≤≤ 
.
≤≤ 
pageInfo
≤≤ 
==
≤≤  
null
≤≤! %
)
≤≤% &
this
≥≥ 
.
≥≥ 
pageInfo
≥≥ 
=
≥≥ 
new
≥≥  #
TMP_PageInfo
≥≥$ 0
[
≥≥0 1
$num
≥≥1 2
]
≥≥2 3
;
≥≥3 4
int
µµ 
length
µµ 
=
µµ 
this
µµ 
.
µµ 
pageInfo
µµ &
.
µµ& '
Length
µµ' -
;
µµ- .
for
∑∑ 
(
∑∑ 
int
∑∑ 
i
∑∑ 
=
∑∑ 
$num
∑∑ 
;
∑∑ 
i
∑∑ 
<
∑∑ 
length
∑∑  &
;
∑∑& '
i
∑∑( )
++
∑∑) +
)
∑∑+ ,
{
∏∏ 
this
ππ 
.
ππ 
pageInfo
ππ 
[
ππ 
i
ππ 
]
ππ  
.
ππ  !!
firstCharacterIndex
ππ! 4
=
ππ5 6
$num
ππ7 8
;
ππ8 9
this
∫∫ 
.
∫∫ 
pageInfo
∫∫ 
[
∫∫ 
i
∫∫ 
]
∫∫  
.
∫∫  ! 
lastCharacterIndex
∫∫! 3
=
∫∫4 5
$num
∫∫6 7
;
∫∫7 8
this
ªª 
.
ªª 
pageInfo
ªª 
[
ªª 
i
ªª 
]
ªª  
.
ªª  !
ascender
ªª! )
=
ªª* +
-
ªª, -
$num
ªª- 2
;
ªª2 3
this
ºº 
.
ºº 
pageInfo
ºº 
[
ºº 
i
ºº 
]
ºº  
.
ºº  !
baseLine
ºº! )
=
ºº* +
$num
ºº, -
;
ºº- .
this
ΩΩ 
.
ΩΩ 
pageInfo
ΩΩ 
[
ΩΩ 
i
ΩΩ 
]
ΩΩ  
.
ΩΩ  !
	descender
ΩΩ! *
=
ΩΩ+ ,
$num
ΩΩ- 2
;
ΩΩ2 3
}
ææ 
}
øø 	
public
∆∆ 
TMP_MeshInfo
∆∆ 
[
∆∆ 
]
∆∆ $
CopyMeshInfoVertexData
∆∆ 4
(
∆∆4 5
)
∆∆5 6
{
«« 	
if
»» 
(
»» 
m_CachedMeshInfo
»»  
==
»»! #
null
»»$ (
||
»») +
m_CachedMeshInfo
»», <
.
»»< =
Length
»»= C
!=
»»D F
meshInfo
»»G O
.
»»O P
Length
»»P V
)
»»V W
{
…… 
m_CachedMeshInfo
    
=
  ! "
new
  # &
TMP_MeshInfo
  ' 3
[
  3 4
meshInfo
  4 <
.
  < =
Length
  = C
]
  C D
;
  D E
for
ÕÕ 
(
ÕÕ 
int
ÕÕ 
i
ÕÕ 
=
ÕÕ 
$num
ÕÕ 
;
ÕÕ 
i
ÕÕ  !
<
ÕÕ" #
m_CachedMeshInfo
ÕÕ$ 4
.
ÕÕ4 5
Length
ÕÕ5 ;
;
ÕÕ; <
i
ÕÕ= >
++
ÕÕ> @
)
ÕÕ@ A
{
ŒŒ 
int
œœ 
length
œœ 
=
œœ  
meshInfo
œœ! )
[
œœ) *
i
œœ* +
]
œœ+ ,
.
œœ, -
vertices
œœ- 5
.
œœ5 6
Length
œœ6 <
;
œœ< =
m_CachedMeshInfo
—— $
[
——$ %
i
——% &
]
——& '
.
——' (
vertices
——( 0
=
——1 2
new
——3 6
Vector3
——7 >
[
——> ?
length
——? E
]
——E F
;
——F G
m_CachedMeshInfo
““ $
[
““$ %
i
““% &
]
““& '
.
““' (
uvs0
““( ,
=
““- .
new
““/ 2
Vector2
““3 :
[
““: ;
length
““; A
]
““A B
;
““B C
m_CachedMeshInfo
”” $
[
””$ %
i
””% &
]
””& '
.
””' (
uvs2
””( ,
=
””- .
new
””/ 2
Vector2
””3 :
[
””: ;
length
””; A
]
””A B
;
””B C
m_CachedMeshInfo
‘‘ $
[
‘‘$ %
i
‘‘% &
]
‘‘& '
.
‘‘' (
colors32
‘‘( 0
=
‘‘1 2
new
‘‘3 6
Color32
‘‘7 >
[
‘‘> ?
length
‘‘? E
]
‘‘E F
;
‘‘F G
}
ŸŸ 
}
⁄⁄ 
for
‹‹ 
(
‹‹ 
int
‹‹ 
i
‹‹ 
=
‹‹ 
$num
‹‹ 
;
‹‹ 
i
‹‹ 
<
‹‹ 
m_CachedMeshInfo
‹‹  0
.
‹‹0 1
Length
‹‹1 7
;
‹‹7 8
i
‹‹9 :
++
‹‹: <
)
‹‹< =
{
›› 
int
ﬁﬁ 
length
ﬁﬁ 
=
ﬁﬁ 
meshInfo
ﬁﬁ %
[
ﬁﬁ% &
i
ﬁﬁ& '
]
ﬁﬁ' (
.
ﬁﬁ( )
vertices
ﬁﬁ) 1
.
ﬁﬁ1 2
Length
ﬁﬁ2 8
;
ﬁﬁ8 9
if
‡‡ 
(
‡‡ 
m_CachedMeshInfo
‡‡ $
[
‡‡$ %
i
‡‡% &
]
‡‡& '
.
‡‡' (
vertices
‡‡( 0
.
‡‡0 1
Length
‡‡1 7
!=
‡‡8 :
length
‡‡; A
)
‡‡A B
{
·· 
m_CachedMeshInfo
‚‚ $
[
‚‚$ %
i
‚‚% &
]
‚‚& '
.
‚‚' (
vertices
‚‚( 0
=
‚‚1 2
new
‚‚3 6
Vector3
‚‚7 >
[
‚‚> ?
length
‚‚? E
]
‚‚E F
;
‚‚F G
m_CachedMeshInfo
„„ $
[
„„$ %
i
„„% &
]
„„& '
.
„„' (
uvs0
„„( ,
=
„„- .
new
„„/ 2
Vector2
„„3 :
[
„„: ;
length
„„; A
]
„„A B
;
„„B C
m_CachedMeshInfo
‰‰ $
[
‰‰$ %
i
‰‰% &
]
‰‰& '
.
‰‰' (
uvs2
‰‰( ,
=
‰‰- .
new
‰‰/ 2
Vector2
‰‰3 :
[
‰‰: ;
length
‰‰; A
]
‰‰A B
;
‰‰B C
m_CachedMeshInfo
ÂÂ $
[
ÂÂ$ %
i
ÂÂ% &
]
ÂÂ& '
.
ÂÂ' (
colors32
ÂÂ( 0
=
ÂÂ1 2
new
ÂÂ3 6
Color32
ÂÂ7 >
[
ÂÂ> ?
length
ÂÂ? E
]
ÂÂE F
;
ÂÂF G
}
ÍÍ 
Array
ÓÓ 
.
ÓÓ 
Copy
ÓÓ 
(
ÓÓ 
meshInfo
ÓÓ #
[
ÓÓ# $
i
ÓÓ$ %
]
ÓÓ% &
.
ÓÓ& '
vertices
ÓÓ' /
,
ÓÓ/ 0
m_CachedMeshInfo
ÓÓ1 A
[
ÓÓA B
i
ÓÓB C
]
ÓÓC D
.
ÓÓD E
vertices
ÓÓE M
,
ÓÓM N
length
ÓÓO U
)
ÓÓU V
;
ÓÓV W
Array
ÔÔ 
.
ÔÔ 
Copy
ÔÔ 
(
ÔÔ 
meshInfo
ÔÔ #
[
ÔÔ# $
i
ÔÔ$ %
]
ÔÔ% &
.
ÔÔ& '
uvs0
ÔÔ' +
,
ÔÔ+ ,
m_CachedMeshInfo
ÔÔ- =
[
ÔÔ= >
i
ÔÔ> ?
]
ÔÔ? @
.
ÔÔ@ A
uvs0
ÔÔA E
,
ÔÔE F
length
ÔÔG M
)
ÔÔM N
;
ÔÔN O
Array
 
.
 
Copy
 
(
 
meshInfo
 #
[
# $
i
$ %
]
% &
.
& '
uvs2
' +
,
+ ,
m_CachedMeshInfo
- =
[
= >
i
> ?
]
? @
.
@ A
uvs2
A E
,
E F
length
G M
)
M N
;
N O
Array
ÒÒ 
.
ÒÒ 
Copy
ÒÒ 
(
ÒÒ 
meshInfo
ÒÒ #
[
ÒÒ# $
i
ÒÒ$ %
]
ÒÒ% &
.
ÒÒ& '
colors32
ÒÒ' /
,
ÒÒ/ 0
m_CachedMeshInfo
ÒÒ1 A
[
ÒÒA B
i
ÒÒB C
]
ÒÒC D
.
ÒÒD E
colors32
ÒÒE M
,
ÒÒM N
length
ÒÒO U
)
ÒÒU V
;
ÒÒV W
}
ˆˆ 
return
¯¯ 
m_CachedMeshInfo
¯¯ #
;
¯¯# $
}
˘˘ 	
public
ÉÉ 
static
ÉÉ 
void
ÉÉ 
Resize
ÉÉ !
<
ÉÉ! "
T
ÉÉ" #
>
ÉÉ# $
(
ÉÉ% &
ref
ÉÉ& )
T
ÉÉ* +
[
ÉÉ+ ,
]
ÉÉ, -
array
ÉÉ. 3
,
ÉÉ3 4
int
ÉÉ5 8
size
ÉÉ9 =
)
ÉÉ= >
{
ÑÑ 	
int
ÜÜ 
newSize
ÜÜ 
=
ÜÜ 
size
ÜÜ 
>
ÜÜ  
$num
ÜÜ! %
?
ÜÜ& '
size
ÜÜ( ,
+
ÜÜ- .
$num
ÜÜ/ 2
:
ÜÜ3 4
Mathf
ÜÜ5 :
.
ÜÜ: ;
NextPowerOfTwo
ÜÜ; I
(
ÜÜI J
size
ÜÜJ N
)
ÜÜN O
;
ÜÜO P
Array
àà 
.
àà 
Resize
àà 
(
àà 
ref
àà 
array
àà "
,
àà" #
newSize
àà$ +
)
àà+ ,
;
àà, -
}
ââ 	
public
ìì 
static
ìì 
void
ìì 
Resize
ìì !
<
ìì! "
T
ìì" #
>
ìì# $
(
ìì$ %
ref
ìì% (
T
ìì) *
[
ìì* +
]
ìì+ ,
array
ìì- 2
,
ìì2 3
int
ìì4 7
size
ìì8 <
,
ìì< =
bool
ìì> B
isBlockAllocated
ììC S
)
ììS T
{
îî 	
if
ïï 
(
ïï 
isBlockAllocated
ïï  
)
ïï  !
size
ïï" &
=
ïï' (
size
ïï) -
>
ïï. /
$num
ïï0 4
?
ïï5 6
size
ïï7 ;
+
ïï< =
$num
ïï> A
:
ïïB C
Mathf
ïïD I
.
ïïI J
NextPowerOfTwo
ïïJ X
(
ïïX Y
size
ïïY ]
)
ïï] ^
;
ïï^ _
if
óó 
(
óó 
size
óó 
==
óó 
array
óó 
.
óó 
Length
óó $
)
óó$ %
return
óó& ,
;
óó, -
Array
õõ 
.
õõ 
Resize
õõ 
(
õõ 
ref
õõ 
array
õõ "
,
õõ" #
size
õõ$ (
)
õõ( )
;
õõ) *
}
úú 	
}
ûû 
}üü ¸Z
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_RichTextTagsCommon.cs
	namespace 	
TMPro
 
{ 
internal

 
enum

 
TagHashCode

 
:

 
int

  #
{ 
BOLD 
= 
$num 
, 

SLASH_BOLD 
= 
$num 
, 
ITALIC 
= 
$num 
, 
SLASH_ITALIC 
= 
$num 
, 
	UNDERLINE 
= 
$num 
, 
SLASH_UNDERLINE 
= 
$num 
, 
STRIKETHROUGH 
= 
$num 
, 
SLASH_STRIKETHROUGH 
= 
$num "
," #
MARK 
= 
$num 
, 

SLASH_MARK 
= 
$num 
, 
	SUBSCRIPT 
= 
$num 
, 
SLASH_SUBSCRIPT 
= 
$num !
,! "
SUPERSCRIPT 
= 
$num 
, 
SLASH_SUPERSCRIPT 
= 
$num #
,# $
COLOR 
= 
$num 
, 
SLASH_COLOR 
= 
$num  
,  !
ALPHA 
= 
$num 
, 
A 	
=
 
$num 
, 
SLASH_A 
= 
$num 
, 
SIZE   
=   
$num   
,   

SLASH_SIZE!! 
=!! 
$num!! 
,!! 
SPRITE"" 
="" 
-"" 
$num"" 
,"" 
BR## 

=## 
$num## 
,## 
NO_BREAK$$ 
=$$ 
$num$$ 
,$$ 
SLASH_NO_BREAK%% 
=%% 
$num%% !
,%%! "
STYLE&& 
=&& 
$num&& 
,&& 
SLASH_STYLE'' 
='' 
$num''  
,''  !
FONT(( 
=(( 
$num(( 
,(( 

SLASH_FONT)) 
=)) 
$num)) 
,)) 
SLASH_MATERIAL** 
=** 
-** 
$num** $
,**$ %
LINK++ 
=++ 
$num++ 
,++ 

SLASH_LINK,, 
=,, 
$num,, 
,,, 
FONT_WEIGHT-- 
=-- 
--- 
$num-- !
,--! "
SLASH_FONT_WEIGHT.. 
=.. 
-.. 
$num.. &
,..& '
NO_PARSE// 
=// 
-// 
$num// 
,// 
SLASH_NO_PARSE00 
=00 
-00 
$num00 #
,00# $
POSITION11 
=11 
$num11 
,11 
SLASH_POSITION22 
=22 
$num22  
,22  !
VERTICAL_OFFSET33 
=33 
$num33 $
,33$ %!
SLASH_VERTICAL_OFFSET44 
=44 
-44  !
$num44! )
,44) *
SPACE55 
=55 
$num55 
,55 
SLASH_SPACE66 
=66 
$num66  
,66  !
PAGE77 
=77 
$num77 
,77 

SLASH_PAGE88 
=88 
$num88 
,88 
ALIGN99 
=99 
$num99 
,99 
SLASH_ALIGN:: 
=:: 
$num::  
,::  !
WIDTH;; 
=;; 
$num;; 
,;; 
SLASH_WIDTH<< 
=<< 
$num<<  
,<<  !
GRADIENT== 
=== 
-== 
$num== 
,== 
SLASH_GRADIENT>> 
=>> 
->> 
$num>> $
,>>$ %
CHARACTER_SPACE?? 
=?? 
-?? 
$num?? %
,??% &!
SLASH_CHARACTER_SPACE@@ 
=@@ 
-@@  !
$num@@! +
,@@+ ,
	MONOSPACEAA 
=AA 
-AA 
$numAA 
,AA  
SLASH_MONOSPACEBB 
=BB 
-BB 
$numBB %
,BB% &
CLASSCC 
=CC 
$numCC 
,CC 
INDENTDD 
=DD 
-DD 
$numDD 
,DD 
SLASH_INDENTEE 
=EE 
-EE 
$numEE "
,EE" #
LINE_INDENTFF 
=FF 
-FF 
$numFF  
,FF  !
SLASH_LINE_INDENTGG 
=GG 
$numGG $
,GG$ %
MARGINHH 
=HH 
-HH 
$numHH 
,HH 
SLASH_MARGINII 
=II 
-II 
$numII "
,II" #
MARGIN_LEFTJJ 
=JJ 
-JJ 
$numJJ  
,JJ  !
MARGIN_RIGHTKK 
=KK 
-KK 
$numKK !
,KK! "
LINE_HEIGHTLL 
=LL 
-LL 
$numLL  
,LL  !
SLASH_LINE_HEIGHTMM 
=MM 
$numMM %
,MM% &
ACTIONNN 
=NN 
-NN 
$numNN 
,NN 
SLASH_ACTIONOO 
=OO 
-OO 
$numOO "
,OO" #
SCALEPP 
=PP 
$numPP 
,PP 
SLASH_SCALEQQ 
=QQ 
$numQQ  
,QQ  !
ROTATERR 
=RR 
-RR 
$numRR 
,RR 
SLASH_ROTATESS 
=SS 
-SS 
$numSS !
,SS! "
	LOWERCASEUU 
=UU 
-UU 
$numUU 
,UU  
SLASH_LOWERCASEVV 
=VV 
-VV 
$numVV %
,VV% &
ALLCAPSWW 
=WW 
$numWW 
,WW 
SLASH_ALLCAPSXX 
=XX 
-XX 
$numXX "
,XX" #
	UPPERCASEYY 
=YY 
-YY 
$numYY 
,YY 
SLASH_UPPERCASEZZ 
=ZZ 
-ZZ 
$numZZ $
,ZZ$ %
	SMALLCAPS[[ 
=[[ 
-[[ 
$num[[ 
,[[ 
SLASH_SMALLCAPS\\ 
=\\ 
$num\\ #
,\\# $
LIGA__ 
=__ 
$num__ 
,__ 

SLASH_LIGA`` 
=`` 
$num`` 
,`` 
FRACaa 
=aa 
$numaa 
,aa 

SLASH_FRACbb 
=bb 
$numbb 
,bb 
NAMEee 
=ee 
$numee 
,ee 
INDEXff 
=ff 
$numff 
,ff 
TINTgg 
=gg 
$numgg 
,gg 
ANIMhh 
=hh 
$numhh 
,hh 
MATERIALii 
=ii 
$numii 
,ii 
HREFjj 
=jj 
$numjj 
,jj 
REDmm 
=mm 
$nummm 
,mm 
GREENnn 
=nn 
$numnn 
,nn 
BLUEoo 
=oo 
$numoo 
,oo 
YELLOWpp 
=pp 
-pp 
$numpp 
,pp 
ORANGEqq 
=qq 
-qq 
$numqq 
,qq 
BLACKrr 
=rr 
$numrr 
,rr 
WHITEss 
=ss 
$numss 
,ss 
PURPLEtt 
=tt 
-tt 
$numtt 
,tt 
LEFTww 
=ww 
$numww 
,ww 
RIGHTxx 
=xx 
$numxx 
,xx 
CENTERyy 
=yy 
-yy 
$numyy 
,yy 
	JUSTIFIEDzz 
=zz 
$numzz 
,zz 
FLUSH{{ 
={{ 
$num{{ 
,{{ 
PLUS~~ 
=~~ 
$num~~ 
,~~ 
MINUS 
= 
$num 
, 
PX
ÄÄ 

=
ÄÄ 
$num
ÄÄ 
,
ÄÄ 
PLUS_PX
ÅÅ 
=
ÅÅ 
$num
ÅÅ 
,
ÅÅ 
MINUS_PX
ÇÇ 
=
ÇÇ 
$num
ÇÇ 
,
ÇÇ 
EM
ÉÉ 

=
ÉÉ 
$num
ÉÉ 
,
ÉÉ 
PLUS_EM
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
,
ÑÑ 
MINUS_EM
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
,
ÖÖ 
PCT
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
,
ÜÜ 
PLUS_PCT
áá 
=
áá 
$num
áá 
,
áá 
	MINUS_PCT
àà 
=
àà 
$num
àà 
,
àà 

PERCENTAGE
ââ 
=
ââ 
$num
ââ 
,
ââ 
PLUS_PERCENTAGE
ää 
=
ää 
$num
ää 
,
ää 
MINUS_PERCENTAGE
ãã 
=
ãã 
$num
ãã 
,
ãã  
TRUE
çç 
=
çç 
$num
çç 
,
çç 
FALSE
éé 
=
éé 
$num
éé 
,
éé 
NORMAL
êê 
=
êê 
-
êê 
$num
êê 
,
êê 
DEFAULT
ëë 
=
ëë 
-
ëë 
$num
ëë 
,
ëë 
}
íí 
public
óó 

enum
óó 
TagValueType
óó 
{
òò 
None
ôô 
=
ôô 
$num
ôô 
,
ôô 
NumericalValue
öö 
=
öö 
$num
öö 
,
öö 
StringValue
õõ 
=
õõ 
$num
õõ 
,
õõ 

ColorValue
úú 
=
úú 
$num
úú 
,
úú 
}
ùù 
public
üü 

enum
üü 
TagUnitType
üü 
{
†† 
Pixels
°° 
=
°° 
$num
°° 
,
°° 
	FontUnits
¢¢ 
=
¢¢ 
$num
¢¢ 
,
¢¢ 

Percentage
££ 
=
££ 
$num
££ 
,
££ 
}
§§ 
internal
©© 
enum
©© 
Unicode
©© 
:
©© 
uint
©©  
{
™™ 
SPACE
´´ 
=
´´ 
$num
´´ 
,
´´ 
DOUBLE_QUOTE
¨¨ 
=
¨¨ 
$num
¨¨ 
,
¨¨ 
NUMBER_SIGN
≠≠ 
=
≠≠ 
$num
≠≠ 
,
≠≠ 

PERCENTAGE
ÆÆ 
=
ÆÆ 
$num
ÆÆ 
,
ÆÆ 
PLUS
ØØ 
=
ØØ 
$num
ØØ 
,
ØØ 
MINUS
∞∞ 
=
∞∞ 
$num
∞∞ 
,
∞∞ 
PERIOD
±± 
=
±± 
$num
±± 
,
±± 
HYPHEN_MINUS
≥≥ 
=
≥≥ 
$num
≥≥ 
,
≥≥ 
SOFT_HYPHEN
¥¥ 
=
¥¥ 
$num
¥¥ 
,
¥¥ 
HYPHEN
µµ 
=
µµ 
$num
µµ 
,
µµ !
NON_BREAKING_HYPHEN
∂∂ 
=
∂∂ 
$num
∂∂ $
,
∂∂$ %
ZERO_WIDTH_SPACE
∑∑ 
=
∑∑ 
$num
∑∑ !
,
∑∑! "$
RIGHT_SINGLE_QUOTATION
∏∏ 
=
∏∏  
$num
∏∏! '
,
∏∏' (

APOSTROPHE
ππ 
=
ππ 
$num
ππ 
,
ππ 
WORD_JOINER
∫∫ 
=
∫∫ 
$num
∫∫ 
,
∫∫ 
}
ªª 
}ºº ±t
†D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_PackageResourceImporter.cs
	namespace		 	
TMPro		
 
{

 
[ 
System 
. 
Serializable 
] 
public 

class '
TMP_PackageResourceImporter ,
{ 
bool (
m_EssentialResourcesImported )
;) *
bool 0
$m_ExamplesAndExtrasResourcesImported 1
;1 2
internal 
bool !
m_IsImportingExamples +
;+ ,
public '
TMP_PackageResourceImporter *
(* +
)+ ,
{- .
}/ 0
public 
void 
	OnDestroy 
( 
) 
{ 	
} 	
public 
void 
OnGUI 
( 
) 
{ 	(
m_EssentialResourcesImported (
=) *
File+ /
./ 0
Exists0 6
(6 7
$str7 i
)i j
;j k0
$m_ExamplesAndExtrasResourcesImported 0
=1 2
	Directory3 <
.< =
Exists= C
(C D
$strD k
)k l
;l m
	GUILayout 
. 
BeginVertical #
(# $
)$ %
;% &
{ 
	GUILayout!! 
.!! 
BeginVertical!! '
(!!' (
EditorStyles!!( 4
.!!4 5
helpBox!!5 <
)!!< =
;!!= >
{"" 
	GUILayout## 
.## 
Label## #
(### $
$str##$ 4
,##4 5
EditorStyles##6 B
.##B C
	boldLabel##C L
)##L M
;##M N
	GUILayout$$ 
.$$ 
Label$$ #
($$# $
$str	$$$ õ
,
$$õ ú
new
$$ù †
GUIStyle
$$° ©
(
$$© ™
EditorStyles
$$™ ∂
.
$$∂ ∑
label
$$∑ º
)
$$º Ω
{
$$æ ø
wordWrap
$$¿ »
=
$$…  
true
$$À œ
}
$$– —
)
$$“ ”
;
$$” ‘
	GUILayout%% 
.%% 
Space%% #
(%%# $
$num%%$ &
)%%& '
;%%' (
GUI'' 
.'' 
enabled'' 
=''  !
!''" #(
m_EssentialResourcesImported''# ?
;''? @
if(( 
((( 
	GUILayout(( !
.((! "
Button((" (
(((( )
$str(() @
)((@ A
)((A B
{)) 
AssetDatabase** %
.**% &"
importPackageCompleted**& <
+=**= ?
ImportCallback**@ N
;**N O
string,, 
packageFullPath,, .
=,,/ 0
GetPackageFullPath,,1 C
(,,C D
),,D E
;,,E F
AssetDatabase-- %
.--% &
ImportPackage--& 3
(--3 4
packageFullPath--4 C
+--D E
$str--F 
,	-- Ä
false
--Å Ü
)
--Ü á
;
--á à
}.. 
	GUILayout// 
.// 
Space// #
(//# $
$num//$ &
)//& '
;//' (
GUI00 
.00 
enabled00 
=00  !
true00" &
;00& '
}11 
	GUILayout22 
.22 
EndVertical22 %
(22% &
)22& '
;22' (
	GUILayout55 
.55 
BeginVertical55 '
(55' (
EditorStyles55( 4
.554 5
helpBox555 <
)55< =
;55= >
{66 
	GUILayout77 
.77 
Label77 #
(77# $
$str77$ ;
,77; <
EditorStyles77= I
.77I J
	boldLabel77J S
)77S T
;77T U
	GUILayout88 
.88 
Label88 #
(88# $
$str	88$ †
,
88† °
new
88¢ •
GUIStyle
88¶ Æ
(
88Æ Ø
EditorStyles
88Ø ª
.
88ª º
label
88º ¡
)
88¡ ¬
{
88√ ƒ
wordWrap
88≈ Õ
=
88Œ œ
true
88– ‘
}
88’ ÷
)
88÷ ◊
;
88◊ ÿ
	GUILayout99 
.99 
Space99 #
(99# $
$num99$ &
)99& '
;99' (
GUI;; 
.;; 
enabled;; 
=;;  !(
m_EssentialResourcesImported;;" >
&&;;? A
!;;B C0
$m_ExamplesAndExtrasResourcesImported;;C g
;;;g h
if<< 
(<< 
	GUILayout<< !
.<<! "
Button<<" (
(<<( )
$str<<) G
)<<G H
)<<H I
{== !
m_IsImportingExamples?? -
=??. /
true??0 4
;??4 5
varDD 
packageFullPathDD +
=DD, -
GetPackageFullPathDD. @
(DD@ A
)DDA B
;DDB C
AssetDatabaseEE %
.EE% &
ImportPackageEE& 3
(EE3 4
packageFullPathEE4 C
+EED E
$strEEF }
,EE} ~
false	EE Ñ
)
EEÑ Ö
;
EEÖ Ü
}FF 
	GUILayoutGG 
.GG 
SpaceGG #
(GG# $
$numGG$ &
)GG& '
;GG' (
GUIHH 
.HH 
enabledHH 
=HH  !
trueHH" &
;HH& '
}II 
	GUILayoutJJ 
.JJ 
EndVerticalJJ %
(JJ% &
)JJ& '
;JJ' (
}KK 
	GUILayoutLL 
.LL 
EndVerticalLL !
(LL! "
)LL" #
;LL# $
	GUILayoutMM 
.MM 
SpaceMM 
(MM 
$numMM 
)MM 
;MM  
}NN 	
internalPP 
voidPP *
RegisterResourceImportCallbackPP 4
(PP4 5
)PP5 6
{QQ 	
AssetDatabaseRR 
.RR "
importPackageCompletedRR 0
+=RR1 3
ImportCallbackRR4 B
;RRB C
}SS 	
voidYY 
ImportCallbackYY 
(YY 
stringYY "
packageNameYY# .
)YY. /
{ZZ 	
if[[ 
([[ 
packageName[[ 
==[[ 
$str[[ 8
)[[8 9
{\\ (
m_EssentialResourcesImported]] ,
=]]- .
true]]/ 3
;]]3 4
TMPro_EventManager^^ "
.^^" #
ON_RESOURCES_LOADED^^# 6
(^^6 7
)^^7 8
;^^8 9
SettingsServiceaa 
.aa  )
NotifySettingsProviderChangedaa  =
(aa= >
)aa> ?
;aa? @
}cc 
elsedd 
ifdd 
(dd 
packageNamedd  
==dd! #
$strdd$ ;
)dd; <
{ee 0
$m_ExamplesAndExtrasResourcesImportedff 4
=ff5 6
trueff7 ;
;ff; <!
m_IsImportingExamplesgg %
=gg& '
falsegg( -
;gg- .
}ii 
Debugkk 
.kk 
Logkk 
(kk 
$strkk 
+kk 
packageNamekk '
+kk( )
$strkk* A
)kkA B
;kkB C
AssetDatabasemm 
.mm "
importPackageCompletedmm 0
-=mm1 3
ImportCallbackmm4 B
;mmB C
}nn 	
staticpp 
stringpp 
GetPackageFullPathpp (
(pp( )
)pp) *
{qq 	
stringss 
packagePathss 
=ss  
Pathss! %
.ss% &
GetFullPathss& 1
(ss1 2
$strss2 R
)ssR S
;ssS T
iftt 
(tt 
	Directorytt 
.tt 
Existstt  
(tt  !
packagePathtt! ,
)tt, -
)tt- .
{uu 
returnvv 
packagePathvv "
;vv" #
}ww 
packagePathyy 
=yy 
Pathyy 
.yy 
GetFullPathyy *
(yy* +
$stryy+ 6
)yy6 7
;yy7 8
ifzz 
(zz 
	Directoryzz 
.zz 
Existszz  
(zz  !
packagePathzz! ,
)zz, -
)zz- .
{{{ 
if}} 
(}} 
	Directory}} 
.}} 
Exists}} $
(}}$ %
packagePath}}% 0
+}}1 2
$str}}3 l
)}}l m
)}}m n
{~~ 
return 
packagePath &
+' (
$str) Q
;Q R
}
ÄÄ 
if
ÉÉ 
(
ÉÉ 
	Directory
ÉÉ 
.
ÉÉ 
Exists
ÉÉ $
(
ÉÉ$ %
packagePath
ÉÉ% 0
+
ÉÉ1 2
$str
ÉÉ3 Z
)
ÉÉZ [
)
ÉÉ[ \
{
ÑÑ 
return
ÖÖ 
packagePath
ÖÖ &
+
ÖÖ' (
$str
ÖÖ) ?
;
ÖÖ? @
}
ÜÜ 
string
ââ 
[
ââ 
]
ââ 
matchingPaths
ââ &
=
ââ' (
	Directory
ââ) 2
.
ââ2 3
GetDirectories
ââ3 A
(
ââA B
packagePath
ââB M
,
ââM N
$str
ââO ]
,
ââ] ^
SearchOption
ââ_ k
.
ââk l
AllDirectories
ââl z
)
ââz {
;
ââ{ |
string
ää 
path
ää 
=
ää 
ValidateLocation
ää .
(
ää. /
matchingPaths
ää/ <
,
ää< =
packagePath
ää> I
)
ääI J
;
ääJ K
if
ãã 
(
ãã 
path
ãã 
!=
ãã 
null
ãã  
)
ãã  !
return
ãã" (
packagePath
ãã) 4
+
ãã5 6
path
ãã7 ;
;
ãã; <
}
åå 
return
éé 
null
éé 
;
éé 
}
èè 	
static
ëë 
string
ëë 
ValidateLocation
ëë &
(
ëë& '
string
ëë' -
[
ëë- .
]
ëë. /
paths
ëë0 5
,
ëë5 6
string
ëë7 =
projectPath
ëë> I
)
ëëI J
{
íí 	
for
ìì 
(
ìì 
int
ìì 
i
ìì 
=
ìì 
$num
ìì 
;
ìì 
i
ìì 
<
ìì 
paths
ìì  %
.
ìì% &
Length
ìì& ,
;
ìì, -
i
ìì. /
++
ìì/ 1
)
ìì1 2
{
îî 
if
ññ 
(
ññ 
	Directory
ññ 
.
ññ 
Exists
ññ $
(
ññ$ %
paths
ññ% *
[
ññ* +
i
ññ+ ,
]
ññ, -
+
ññ. /
$str
ññ0 C
)
ññC D
)
ññD E
{
óó 
string
òò 

folderPath
òò %
=
òò& '
paths
òò( -
[
òò- .
i
òò. /
]
òò/ 0
.
òò0 1
Replace
òò1 8
(
òò8 9
projectPath
òò9 D
,
òòD E
$str
òòF H
)
òòH I
;
òòI J

folderPath
ôô 
=
ôô  

folderPath
ôô! +
.
ôô+ ,
	TrimStart
ôô, 5
(
ôô5 6
$char
ôô6 :
,
ôô: ;
$char
ôô< ?
)
ôô? @
;
ôô@ A
return
öö 

folderPath
öö %
;
öö% &
}
õõ 
}
úú 
return
ûû 
null
ûû 
;
ûû 
}
üü 	
}
†† 
public
¢¢ 

class
¢¢ /
!TMP_PackageResourceImporterWindow
¢¢ 2
:
¢¢3 4
EditorWindow
¢¢5 A
{
££ 
[
§§ 	
SerializeField
§§	 
]
§§ )
TMP_PackageResourceImporter
•• # 
m_ResourceImporter
••$ 6
;
••6 7
static
ßß /
!TMP_PackageResourceImporterWindow
ßß 0
m_ImporterWindow
ßß1 A
;
ßßA B
public
©© 
static
©© 
void
©© '
ShowPackageImporterWindow
©© 4
(
©©4 5
)
©©5 6
{
™™ 	
if
´´ 
(
´´ 
m_ImporterWindow
´´  
==
´´! #
null
´´$ (
)
´´( )
{
¨¨ 
m_ImporterWindow
≠≠  
=
≠≠! "
	GetWindow
≠≠# ,
<
≠≠, -/
!TMP_PackageResourceImporterWindow
≠≠- N
>
≠≠N O
(
≠≠O P
)
≠≠P Q
;
≠≠Q R
m_ImporterWindow
ÆÆ  
.
ÆÆ  !
titleContent
ÆÆ! -
=
ÆÆ. /
new
ÆÆ0 3

GUIContent
ÆÆ4 >
(
ÆÆ> ?
$str
ÆÆ? M
)
ÆÆM N
;
ÆÆN O
}
ØØ 
m_ImporterWindow
±± 
.
±± 
Focus
±± "
(
±±" #
)
±±# $
;
±±$ %
}
≤≤ 	
void
¥¥ 
OnEnable
¥¥ 
(
¥¥ 
)
¥¥ 
{
µµ 	!
SetEditorWindowSize
∑∑ 
(
∑∑  
)
∑∑  !
;
∑∑! "
if
ππ 
(
ππ  
m_ResourceImporter
ππ "
==
ππ# %
null
ππ& *
)
ππ* + 
m_ResourceImporter
∫∫ "
=
∫∫# $
new
∫∫% ()
TMP_PackageResourceImporter
∫∫) D
(
∫∫D E
)
∫∫E F
;
∫∫F G
if
ºº 
(
ºº  
m_ResourceImporter
ºº "
.
ºº" ##
m_IsImportingExamples
ºº# 8
)
ºº8 9 
m_ResourceImporter
ΩΩ "
.
ΩΩ" #,
RegisterResourceImportCallback
ΩΩ# A
(
ΩΩA B
)
ΩΩB C
;
ΩΩC D
}
ææ 	
void
¿¿ 
	OnDestroy
¿¿ 
(
¿¿ 
)
¿¿ 
{
¡¡ 	 
m_ResourceImporter
¬¬ 
.
¬¬ 
	OnDestroy
¬¬ (
(
¬¬( )
)
¬¬) *
;
¬¬* +
}
√√ 	
void
≈≈ 
OnGUI
≈≈ 
(
≈≈ 
)
≈≈ 
{
∆∆ 	 
m_ResourceImporter
«« 
.
«« 
OnGUI
«« $
(
««$ %
)
««% &
;
««& '
}
»» 	
void
   
OnInspectorUpdate
   
(
   
)
    
{
ÀÀ 	
Repaint
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
}
ÕÕ 	
void
““ !
SetEditorWindowSize
““  
(
““  !
)
““! "
{
”” 	
EditorWindow
‘‘ 
editorWindow
‘‘ %
=
‘‘& '
this
‘‘( ,
;
‘‘, -
Vector2
÷÷ 

windowSize
÷÷ 
=
÷÷  
new
÷÷! $
Vector2
÷÷% ,
(
÷÷, -
$num
÷÷- 0
,
÷÷0 1
$num
÷÷2 5
)
÷÷5 6
;
÷÷6 7
editorWindow
◊◊ 
.
◊◊ 
minSize
◊◊  
=
◊◊! "

windowSize
◊◊# -
;
◊◊- .
editorWindow
ÿÿ 
.
ÿÿ 
maxSize
ÿÿ  
=
ÿÿ! "

windowSize
ÿÿ# -
;
ÿÿ- .
}
ŸŸ 	
}
⁄⁄ 
}‹‹ Ö
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_ColorGradient.cs
	namespace 	
TMPro
 
{ 
public 

enum 
	ColorMode 
{ 
Single 
, 
HorizontalGradient		 
,		 
VerticalGradient

 
,

 
FourCornersGradient 
} 
[ 
System 
. 
Serializable 
] 
[ &
ExcludeFromPresetAttribute 4
]4 5
public 

class 
TMP_ColorGradient "
:# $
ScriptableObject% 5
{ 
public 
	ColorMode 
	colorMode "
=# $
	ColorMode% .
.. /
FourCornersGradient/ B
;B C
public 
Color 
topLeft 
; 
public 
Color 
topRight 
; 
public 
Color 

bottomLeft 
;  
public 
Color 
bottomRight  
;  !
const 
	ColorMode 
k_DefaultColorMode *
=+ ,
	ColorMode- 6
.6 7
FourCornersGradient7 J
;J K
static 
readonly 
Color 
k_DefaultColor ,
=- .
Color/ 4
.4 5
white5 :
;: ;
public 
TMP_ColorGradient  
(  !
)! "
{ 	
	colorMode   
=   
k_DefaultColorMode   *
;  * +
topLeft!! 
=!! 
k_DefaultColor!! $
;!!$ %
topRight"" 
="" 
k_DefaultColor"" %
;""% &

bottomLeft## 
=## 
k_DefaultColor## '
;##' (
bottomRight$$ 
=$$ 
k_DefaultColor$$ (
;$$( )
}%% 	
public++ 
TMP_ColorGradient++  
(++  !
Color++! &
color++' ,
)++, -
{,, 	
	colorMode-- 
=-- 
k_DefaultColorMode-- *
;--* +
topLeft.. 
=.. 
color.. 
;.. 
topRight// 
=// 
color// 
;// 

bottomLeft00 
=00 
color00 
;00 
bottomRight11 
=11 
color11 
;11  
}22 	
public;; 
TMP_ColorGradient;;  
(;;  !
Color;;! &
color0;;' -
,;;- .
Color;;/ 4
color1;;5 ;
,;;; <
Color;;= B
color2;;C I
,;;I J
Color;;K P
color3;;Q W
);;W X
{<< 	
	colorMode== 
=== 
k_DefaultColorMode== *
;==* +
this>> 
.>> 
topLeft>> 
=>> 
color0>> !
;>>! "
this?? 
.?? 
topRight?? 
=?? 
color1?? "
;??" #
this@@ 
.@@ 

bottomLeft@@ 
=@@ 
color2@@ $
;@@$ %
thisAA 
.AA 
bottomRightAA 
=AA 
color3AA %
;AA% &
}BB 	
}CC 
}DD •æ
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_Settings.cs
	namespace 	
TMPro
 
{		 
[ 
System 
. 
Serializable 
] 
[ &
ExcludeFromPresetAttribute 4
]4 5
public 

class 
TMP_Settings 
: 
ScriptableObject  0
{ 
private 
static 
TMP_Settings #

s_Instance$ .
;. /
public 
static 
string 
version $
{ 	
get 
{ 
return 
$str  
;  !
}" #
} 	
public## 
static## 
bool## 
enableWordWrapping## -
{$$ 	
get%% 
{%% 
return%% 
instance%% !
.%%! " 
m_enableWordWrapping%%" 6
;%%6 7
}%%8 9
}&& 	
['' 	
SerializeField''	 
]'' 
private(( 
bool((  
m_enableWordWrapping(( )
;(() *
public-- 
static-- 
bool-- 
enableKerning-- (
{.. 	
get// 
{// 
return// 
instance// !
.//! "
m_enableKerning//" 1
;//1 2
}//3 4
}00 	
[11 	
SerializeField11	 
]11 
private22 
bool22 
m_enableKerning22 $
;22$ %
public77 
static77 
bool77 
enableExtraPadding77 -
{88 	
get99 
{99 
return99 
instance99 !
.99! " 
m_enableExtraPadding99" 6
;996 7
}998 9
}:: 	
[;; 	
SerializeField;;	 
];; 
private<< 
bool<<  
m_enableExtraPadding<< )
;<<) *
publicAA 
staticAA 
boolAA  
enableTintAllSpritesAA /
{BB 	
getCC 
{CC 
returnCC 
instanceCC !
.CC! ""
m_enableTintAllSpritesCC" 8
;CC8 9
}CC: ;
}DD 	
[EE 	
SerializeFieldEE	 
]EE 
privateFF 
boolFF "
m_enableTintAllSpritesFF +
;FF+ ,
publicKK 
staticKK 
boolKK '
enableParseEscapeCharactersKK 6
{LL 	
getMM 
{MM 
returnMM 
instanceMM !
.MM! ")
m_enableParseEscapeCharactersMM" ?
;MM? @
}MMA B
}NN 	
[OO 	
SerializeFieldOO	 
]OO 
privatePP 
boolPP )
m_enableParseEscapeCharactersPP 2
;PP2 3
publicUU 
staticUU 
boolUU 
enableRaycastTargetUU .
{VV 	
getWW 
{WW 
returnWW 
instanceWW !
.WW! "!
m_EnableRaycastTargetWW" 7
;WW7 8
}WW9 :
}XX 	
[YY 	
SerializeFieldYY	 
]YY 
privateZZ 
boolZZ !
m_EnableRaycastTargetZZ *
=ZZ+ ,
trueZZ- 1
;ZZ1 2
public__ 
static__ 
bool__ $
getFontFeaturesAtRuntime__ 3
{`` 	
getaa 
{aa 
returnaa 
instanceaa !
.aa! "&
m_GetFontFeaturesAtRuntimeaa" <
;aa< =
}aa> ?
}bb 	
[cc 	
SerializeFieldcc	 
]cc 
privatedd 
booldd &
m_GetFontFeaturesAtRuntimedd /
=dd0 1
truedd2 6
;dd6 7
publicii 
staticii 
intii !
missingGlyphCharacterii /
{jj 	
getkk 
{kk 
returnkk 
instancekk !
.kk! "#
m_missingGlyphCharacterkk" 9
;kk9 :
}kk; <
setll 
{ll 
instancell 
.ll #
m_missingGlyphCharacterll 2
=ll3 4
valuell5 :
;ll: ;
}ll< =
}mm 	
[nn 	
SerializeFieldnn	 
]nn 
privateoo 
intoo #
m_missingGlyphCharacteroo +
;oo+ ,
publictt 
statictt 
booltt 
warningsDisabledtt +
{uu 	
getvv 
{vv 
returnvv 
instancevv !
.vv! "
m_warningsDisabledvv" 4
;vv4 5
}vv6 7
}ww 	
[xx 	
SerializeFieldxx	 
]xx 
privateyy 
boolyy 
m_warningsDisabledyy '
;yy' (
public~~ 
static~~ 
TMP_FontAsset~~ #
defaultFontAsset~~$ 4
{ 	
get
ÄÄ 
{
ÄÄ 
return
ÄÄ 
instance
ÄÄ !
.
ÄÄ! " 
m_defaultFontAsset
ÄÄ" 4
;
ÄÄ4 5
}
ÄÄ6 7
}
ÅÅ 	
[
ÇÇ 	
SerializeField
ÇÇ	 
]
ÇÇ 
private
ÉÉ 
TMP_FontAsset
ÉÉ  
m_defaultFontAsset
ÉÉ 0
;
ÉÉ0 1
public
àà 
static
àà 
string
àà "
defaultFontAssetPath
àà 1
{
ââ 	
get
ää 
{
ää 
return
ää 
instance
ää !
.
ää! "$
m_defaultFontAssetPath
ää" 8
;
ää8 9
}
ää: ;
}
ãã 	
[
åå 	
SerializeField
åå	 
]
åå 
private
çç 
string
çç $
m_defaultFontAssetPath
çç -
;
çç- .
public
íí 
static
íí 
float
íí 
defaultFontSize
íí +
{
ìì 	
get
îî 
{
îî 
return
îî 
instance
îî !
.
îî! "
m_defaultFontSize
îî" 3
;
îî3 4
}
îî5 6
}
ïï 	
[
ññ 	
SerializeField
ññ	 
]
ññ 
private
óó 
float
óó 
m_defaultFontSize
óó '
;
óó' (
public
úú 
static
úú 
float
úú +
defaultTextAutoSizingMinRatio
úú 9
{
ùù 	
get
ûû 
{
ûû 
return
ûû 
instance
ûû !
.
ûû! "'
m_defaultAutoSizeMinRatio
ûû" ;
;
ûû; <
}
ûû= >
}
üü 	
[
†† 	
SerializeField
††	 
]
†† 
private
°° 
float
°° '
m_defaultAutoSizeMinRatio
°° /
;
°°/ 0
public
¶¶ 
static
¶¶ 
float
¶¶ +
defaultTextAutoSizingMaxRatio
¶¶ 9
{
ßß 	
get
®® 
{
®® 
return
®® 
instance
®® !
.
®®! "'
m_defaultAutoSizeMaxRatio
®®" ;
;
®®; <
}
®®= >
}
©© 	
[
™™ 	
SerializeField
™™	 
]
™™ 
private
´´ 
float
´´ '
m_defaultAutoSizeMaxRatio
´´ /
;
´´/ 0
public
∞∞ 
static
∞∞ 
Vector2
∞∞ 1
#defaultTextMeshProTextContainerSize
∞∞ A
{
±± 	
get
≤≤ 
{
≤≤ 
return
≤≤ 
instance
≤≤ !
.
≤≤! "3
%m_defaultTextMeshProTextContainerSize
≤≤" G
;
≤≤G H
}
≤≤I J
}
≥≥ 	
[
¥¥ 	
SerializeField
¥¥	 
]
¥¥ 
private
µµ 
Vector2
µµ 3
%m_defaultTextMeshProTextContainerSize
µµ =
;
µµ= >
public
∫∫ 
static
∫∫ 
Vector2
∫∫ 3
%defaultTextMeshProUITextContainerSize
∫∫ C
{
ªª 	
get
ºº 
{
ºº 
return
ºº 
instance
ºº !
.
ºº! "5
'm_defaultTextMeshProUITextContainerSize
ºº" I
;
ººI J
}
ººK L
}
ΩΩ 	
[
ææ 	
SerializeField
ææ	 
]
ææ 
private
øø 
Vector2
øø 5
'm_defaultTextMeshProUITextContainerSize
øø ?
;
øø? @
public
ƒƒ 
static
ƒƒ 
bool
ƒƒ #
autoSizeTextContainer
ƒƒ 0
{
≈≈ 	
get
∆∆ 
{
∆∆ 
return
∆∆ 
instance
∆∆ !
.
∆∆! "%
m_autoSizeTextContainer
∆∆" 9
;
∆∆9 :
}
∆∆; <
}
«« 	
[
»» 	
SerializeField
»»	 
]
»» 
private
…… 
bool
…… %
m_autoSizeTextContainer
…… ,
;
……, -
public
ŒŒ 
static
ŒŒ 
bool
ŒŒ %
isTextObjectScaleStatic
ŒŒ 2
{
œœ 	
get
–– 
{
–– 
return
–– 
instance
–– !
.
––! "'
m_IsTextObjectScaleStatic
––" ;
;
––; <
}
––= >
set
—— 
{
—— 
instance
—— 
.
—— '
m_IsTextObjectScaleStatic
—— 4
=
——5 6
value
——7 <
;
——< =
}
——> ?
}
““ 	
[
”” 	
SerializeField
””	 
]
”” 
private
‘‘ 
bool
‘‘ '
m_IsTextObjectScaleStatic
‘‘ .
;
‘‘. /
public
⁄⁄ 
static
⁄⁄ 
List
⁄⁄ 
<
⁄⁄ 
TMP_FontAsset
⁄⁄ (
>
⁄⁄( ) 
fallbackFontAssets
⁄⁄* <
{
€€ 	
get
‹‹ 
{
‹‹ 
return
‹‹ 
instance
‹‹ !
.
‹‹! ""
m_fallbackFontAssets
‹‹" 6
;
‹‹6 7
}
‹‹8 9
}
›› 	
[
ﬁﬁ 	
SerializeField
ﬁﬁ	 
]
ﬁﬁ 
private
ﬂﬂ 
List
ﬂﬂ 
<
ﬂﬂ 
TMP_FontAsset
ﬂﬂ "
>
ﬂﬂ" #"
m_fallbackFontAssets
ﬂﬂ$ 8
;
ﬂﬂ8 9
public
‰‰ 
static
‰‰ 
bool
‰‰ !
matchMaterialPreset
‰‰ .
{
ÂÂ 	
get
ÊÊ 
{
ÊÊ 
return
ÊÊ 
instance
ÊÊ !
.
ÊÊ! "#
m_matchMaterialPreset
ÊÊ" 7
;
ÊÊ7 8
}
ÊÊ9 :
}
ÁÁ 	
[
ËË 	
SerializeField
ËË	 
]
ËË 
private
ÈÈ 
bool
ÈÈ #
m_matchMaterialPreset
ÈÈ *
;
ÈÈ* +
public
ÓÓ 
static
ÓÓ 
TMP_SpriteAsset
ÓÓ % 
defaultSpriteAsset
ÓÓ& 8
{
ÔÔ 	
get
 
{
 
return
 
instance
 !
.
! ""
m_defaultSpriteAsset
" 6
;
6 7
}
8 9
}
ÒÒ 	
[
ÚÚ 	
SerializeField
ÚÚ	 
]
ÚÚ 
private
ÛÛ 
TMP_SpriteAsset
ÛÛ "
m_defaultSpriteAsset
ÛÛ  4
;
ÛÛ4 5
public
¯¯ 
static
¯¯ 
string
¯¯ $
defaultSpriteAssetPath
¯¯ 3
{
˘˘ 	
get
˙˙ 
{
˙˙ 
return
˙˙ 
instance
˙˙ !
.
˙˙! "&
m_defaultSpriteAssetPath
˙˙" :
;
˙˙: ;
}
˙˙< =
}
˚˚ 	
[
¸¸ 	
SerializeField
¸¸	 
]
¸¸ 
private
˝˝ 
string
˝˝ &
m_defaultSpriteAssetPath
˝˝ /
;
˝˝/ 0
public
ÇÇ 
static
ÇÇ 
bool
ÇÇ  
enableEmojiSupport
ÇÇ -
{
ÉÉ 	
get
ÑÑ 
{
ÑÑ 
return
ÑÑ 
instance
ÑÑ !
.
ÑÑ! ""
m_enableEmojiSupport
ÑÑ" 6
;
ÑÑ6 7
}
ÑÑ8 9
set
ÖÖ 
{
ÖÖ 
instance
ÖÖ 
.
ÖÖ "
m_enableEmojiSupport
ÖÖ /
=
ÖÖ0 1
value
ÖÖ2 7
;
ÖÖ7 8
}
ÖÖ9 :
}
ÜÜ 	
[
áá 	
SerializeField
áá	 
]
áá 
private
àà 
bool
àà "
m_enableEmojiSupport
àà )
;
àà) *
public
çç 
static
çç 
uint
çç +
missingCharacterSpriteUnicode
çç 8
{
éé 	
get
èè 
{
èè 
return
èè 
instance
èè !
.
èè! "-
m_MissingCharacterSpriteUnicode
èè" A
;
èèA B
}
èèC D
set
êê 
{
êê 
instance
êê 
.
êê -
m_MissingCharacterSpriteUnicode
êê :
=
êê; <
value
êê= B
;
êêB C
}
êêD E
}
ëë 	
[
íí 	
SerializeField
íí	 
]
íí 
private
ìì 
uint
ìì -
m_MissingCharacterSpriteUnicode
ìì 4
;
ìì4 5
public
££ 
static
££ 
string
££ -
defaultColorGradientPresetsPath
££ <
{
§§ 	
get
•• 
{
•• 
return
•• 
instance
•• !
.
••! "/
!m_defaultColorGradientPresetsPath
••" C
;
••C D
}
••E F
}
¶¶ 	
[
ßß 	
SerializeField
ßß	 
]
ßß 
private
®® 
string
®® /
!m_defaultColorGradientPresetsPath
®® 8
;
®®8 9
public
≠≠ 
static
≠≠ 
TMP_StyleSheet
≠≠ $
defaultStyleSheet
≠≠% 6
{
ÆÆ 	
get
ØØ 
{
ØØ 
return
ØØ 
instance
ØØ !
.
ØØ! "!
m_defaultStyleSheet
ØØ" 5
;
ØØ5 6
}
ØØ7 8
}
∞∞ 	
[
±± 	
SerializeField
±±	 
]
±± 
private
≤≤ 
TMP_StyleSheet
≤≤ !
m_defaultStyleSheet
≤≤ 2
;
≤≤2 3
public
∑∑ 
static
∑∑ 
string
∑∑ %
styleSheetsResourcePath
∑∑ 4
{
∏∏ 	
get
ππ 
{
ππ 
return
ππ 
instance
ππ !
.
ππ! "'
m_StyleSheetsResourcePath
ππ" ;
;
ππ; <
}
ππ= >
}
∫∫ 	
[
ªª 	
SerializeField
ªª	 
]
ªª 
private
ºº 
string
ºº '
m_StyleSheetsResourcePath
ºº 0
;
ºº0 1
public
¡¡ 
static
¡¡ 
	TextAsset
¡¡ 
leadingCharacters
¡¡  1
{
¬¬ 	
get
√√ 
{
√√ 
return
√√ 
instance
√√ !
.
√√! "!
m_leadingCharacters
√√" 5
;
√√5 6
}
√√7 8
}
ƒƒ 	
[
≈≈ 	
SerializeField
≈≈	 
]
≈≈ 
private
∆∆ 
	TextAsset
∆∆ !
m_leadingCharacters
∆∆ -
;
∆∆- .
public
ÀÀ 
static
ÀÀ 
	TextAsset
ÀÀ !
followingCharacters
ÀÀ  3
{
ÃÃ 	
get
ÕÕ 
{
ÕÕ 
return
ÕÕ 
instance
ÕÕ !
.
ÕÕ! "#
m_followingCharacters
ÕÕ" 7
;
ÕÕ7 8
}
ÕÕ9 :
}
ŒŒ 	
[
œœ 	
SerializeField
œœ	 
]
œœ 
private
–– 
	TextAsset
–– #
m_followingCharacters
–– /
;
––/ 0
public
’’ 
static
’’ 
LineBreakingTable
’’ '
linebreakingRules
’’( 9
{
÷÷ 	
get
◊◊ 
{
ÿÿ 
if
ŸŸ 
(
ŸŸ 
instance
ŸŸ 
.
ŸŸ !
m_linebreakingRules
ŸŸ 0
==
ŸŸ1 3
null
ŸŸ4 8
)
ŸŸ8 9#
LoadLinebreakingRules
⁄⁄ )
(
⁄⁄) *
)
⁄⁄* +
;
⁄⁄+ ,
return
‹‹ 
instance
‹‹ 
.
‹‹  !
m_linebreakingRules
‹‹  3
;
‹‹3 4
}
›› 
}
ﬁﬁ 	
[
ﬂﬂ 	
SerializeField
ﬂﬂ	 
]
ﬂﬂ 
private
‡‡ 
LineBreakingTable
‡‡ !!
m_linebreakingRules
‡‡" 5
;
‡‡5 6
public
ıı 
static
ıı 
bool
ıı .
 useModernHangulLineBreakingRules
ıı ;
{
ˆˆ 	
get
˜˜ 
{
˜˜ 
return
˜˜ 
instance
˜˜ !
.
˜˜! "0
"m_UseModernHangulLineBreakingRules
˜˜" D
;
˜˜D E
}
˜˜F G
set
¯¯ 
{
¯¯ 
instance
¯¯ 
.
¯¯ 0
"m_UseModernHangulLineBreakingRules
¯¯ =
=
¯¯> ?
value
¯¯@ E
;
¯¯E F
}
¯¯G H
}
˘˘ 	
[
˙˙ 	
SerializeField
˙˙	 
]
˙˙ 
private
˚˚ 
bool
˚˚ 0
"m_UseModernHangulLineBreakingRules
˚˚ 7
;
˚˚7 8
public
ÄÄ 
static
ÄÄ 
TMP_Settings
ÄÄ "
instance
ÄÄ# +
{
ÅÅ 	
get
ÇÇ 
{
ÉÉ 
if
ÑÑ 
(
ÑÑ 
TMP_Settings
ÑÑ  
.
ÑÑ  !

s_Instance
ÑÑ! +
==
ÑÑ, .
null
ÑÑ/ 3
)
ÑÑ3 4
{
ÖÖ 
TMP_Settings
ÜÜ  
.
ÜÜ  !

s_Instance
ÜÜ! +
=
ÜÜ, -
	Resources
ÜÜ. 7
.
ÜÜ7 8
Load
ÜÜ8 <
<
ÜÜ< =
TMP_Settings
ÜÜ= I
>
ÜÜI J
(
ÜÜJ K
$str
ÜÜK Y
)
ÜÜY Z
;
ÜÜZ [
if
ää 
(
ää 
TMP_Settings
ää $
.
ää$ %

s_Instance
ää% /
==
ää0 2
null
ää3 7
)
ää7 8
{
ãã /
!TMP_PackageResourceImporterWindow
çç 9
.
çç9 :'
ShowPackageImporterWindow
çç: S
(
ççS T
)
ççT U
;
ççU V
}
éé 
}
êê 
return
íí 
TMP_Settings
íí #
.
íí# $

s_Instance
íí$ .
;
íí. /
}
ìì 
}
îî 	
public
õõ 
static
õõ 
TMP_Settings
õõ "!
LoadDefaultSettings
õõ# 6
(
õõ6 7
)
õõ7 8
{
úú 	
if
ùù 
(
ùù 

s_Instance
ùù 
==
ùù 
null
ùù "
)
ùù" #
{
ûû 
TMP_Settings
†† 
settings
†† %
=
††& '
	Resources
††( 1
.
††1 2
Load
††2 6
<
††6 7
TMP_Settings
††7 C
>
††C D
(
††D E
$str
††E S
)
††S T
;
††T U
if
°° 
(
°° 
settings
°° 
!=
°° 
null
°°  $
)
°°$ %

s_Instance
¢¢ 
=
¢¢  
settings
¢¢! )
;
¢¢) *
}
££ 
return
•• 

s_Instance
•• 
;
•• 
}
¶¶ 	
public
≠≠ 
static
≠≠ 
TMP_Settings
≠≠ "
GetSettings
≠≠# .
(
≠≠. /
)
≠≠/ 0
{
ÆÆ 	
if
ØØ 
(
ØØ 
TMP_Settings
ØØ 
.
ØØ 
instance
ØØ %
==
ØØ& (
null
ØØ) -
)
ØØ- .
return
ØØ/ 5
null
ØØ6 :
;
ØØ: ;
return
±± 
TMP_Settings
±± 
.
±±  
instance
±±  (
;
±±( )
}
≤≤ 	
public
ππ 
static
ππ 
TMP_FontAsset
ππ #
GetFontAsset
ππ$ 0
(
ππ0 1
)
ππ1 2
{
∫∫ 	
if
ªª 
(
ªª 
TMP_Settings
ªª 
.
ªª 
instance
ªª %
==
ªª& (
null
ªª) -
)
ªª- .
return
ªª/ 5
null
ªª6 :
;
ªª: ;
return
ΩΩ 
TMP_Settings
ΩΩ 
.
ΩΩ  
instance
ΩΩ  (
.
ΩΩ( ) 
m_defaultFontAsset
ΩΩ) ;
;
ΩΩ; <
}
ææ 	
public
≈≈ 
static
≈≈ 
TMP_SpriteAsset
≈≈ %
GetSpriteAsset
≈≈& 4
(
≈≈4 5
)
≈≈5 6
{
∆∆ 	
if
«« 
(
«« 
TMP_Settings
«« 
.
«« 
instance
«« %
==
««& (
null
««) -
)
««- .
return
««/ 5
null
««6 :
;
««: ;
return
…… 
TMP_Settings
…… 
.
……  
instance
……  (
.
……( )"
m_defaultSpriteAsset
……) =
;
……= >
}
   	
public
—— 
static
—— 
TMP_StyleSheet
—— $
GetStyleSheet
——% 2
(
——2 3
)
——3 4
{
““ 	
if
”” 
(
”” 
TMP_Settings
”” 
.
”” 
instance
”” %
==
””& (
null
””) -
)
””- .
return
””/ 5
null
””6 :
;
””: ;
return
’’ 
TMP_Settings
’’ 
.
’’  
instance
’’  (
.
’’( )!
m_defaultStyleSheet
’’) <
;
’’< =
}
÷÷ 	
public
ŸŸ 
static
ŸŸ 
void
ŸŸ #
LoadLinebreakingRules
ŸŸ 0
(
ŸŸ0 1
)
ŸŸ1 2
{
⁄⁄ 	
if
›› 
(
›› 
TMP_Settings
›› 
.
›› 
instance
›› %
==
››& (
null
››) -
)
››- .
return
››/ 5
;
››5 6
if
ﬂﬂ 
(
ﬂﬂ 

s_Instance
ﬂﬂ 
.
ﬂﬂ !
m_linebreakingRules
ﬂﬂ .
==
ﬂﬂ/ 1
null
ﬂﬂ2 6
)
ﬂﬂ6 7

s_Instance
‡‡ 
.
‡‡ !
m_linebreakingRules
‡‡ .
=
‡‡/ 0
new
‡‡1 4
LineBreakingTable
‡‡5 F
(
‡‡F G
)
‡‡G H
;
‡‡H I

s_Instance
‚‚ 
.
‚‚ !
m_linebreakingRules
‚‚ *
.
‚‚* +
leadingCharacters
‚‚+ <
=
‚‚= >
GetCharacters
‚‚? L
(
‚‚L M

s_Instance
‚‚M W
.
‚‚W X!
m_leadingCharacters
‚‚X k
)
‚‚k l
;
‚‚l m

s_Instance
„„ 
.
„„ !
m_linebreakingRules
„„ *
.
„„* +!
followingCharacters
„„+ >
=
„„? @
GetCharacters
„„A N
(
„„N O

s_Instance
„„O Y
.
„„Y Z#
m_followingCharacters
„„Z o
)
„„o p
;
„„p q
}
‰‰ 	
private
ÏÏ 
static
ÏÏ 

Dictionary
ÏÏ !
<
ÏÏ! "
int
ÏÏ" %
,
ÏÏ% &
char
ÏÏ' +
>
ÏÏ+ ,
GetCharacters
ÏÏ- :
(
ÏÏ: ;
	TextAsset
ÏÏ; D
file
ÏÏE I
)
ÏÏI J
{
ÌÌ 	

Dictionary
ÓÓ 
<
ÓÓ 
int
ÓÓ 
,
ÓÓ 
char
ÓÓ  
>
ÓÓ  !
dict
ÓÓ" &
=
ÓÓ' (
new
ÓÓ) ,

Dictionary
ÓÓ- 7
<
ÓÓ7 8
int
ÓÓ8 ;
,
ÓÓ; <
char
ÓÓ= A
>
ÓÓA B
(
ÓÓB C
)
ÓÓC D
;
ÓÓD E
string
ÔÔ 
text
ÔÔ 
=
ÔÔ 
file
ÔÔ 
.
ÔÔ 
text
ÔÔ #
;
ÔÔ# $
for
ÒÒ 
(
ÒÒ 
int
ÒÒ 
i
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
;
ÒÒ 
i
ÒÒ 
<
ÒÒ 
text
ÒÒ  $
.
ÒÒ$ %
Length
ÒÒ% +
;
ÒÒ+ ,
i
ÒÒ- .
++
ÒÒ. 0
)
ÒÒ0 1
{
ÚÚ 
char
ÛÛ 
c
ÛÛ 
=
ÛÛ 
text
ÛÛ 
[
ÛÛ 
i
ÛÛ 
]
ÛÛ  
;
ÛÛ  !
if
ıı 
(
ıı 
dict
ıı 
.
ıı 
ContainsKey
ıı $
(
ıı$ %
(
ıı% &
int
ıı& )
)
ıı) *
c
ıı* +
)
ıı+ ,
==
ıı- /
false
ıı0 5
)
ıı5 6
{
ˆˆ 
dict
˜˜ 
.
˜˜ 
Add
˜˜ 
(
˜˜ 
(
˜˜ 
int
˜˜ !
)
˜˜! "
c
˜˜" #
,
˜˜# $
c
˜˜% &
)
˜˜& '
;
˜˜' (
}
˘˘ 
}
¸¸ 
return
˛˛ 
dict
˛˛ 
;
˛˛ 
}
ˇˇ 	
public
ÇÇ 
class
ÇÇ 
LineBreakingTable
ÇÇ &
{
ÉÉ 	
public
ÑÑ 

Dictionary
ÑÑ 
<
ÑÑ 
int
ÑÑ !
,
ÑÑ! "
char
ÑÑ# '
>
ÑÑ' (
leadingCharacters
ÑÑ) :
;
ÑÑ: ;
public
ÖÖ 

Dictionary
ÖÖ 
<
ÖÖ 
int
ÖÖ !
,
ÖÖ! "
char
ÖÖ# '
>
ÖÖ' (!
followingCharacters
ÖÖ) <
;
ÖÖ< =
}
ÜÜ 	
}
áá 
}àà ŸS
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMPro_EventManager.cs
	namespace 	
TMPro
 
{ 
public 

enum 0
$Compute_DistanceTransform_EventTypes 4
{5 6

Processing7 A
,A B
	CompletedC L
}M N
;N O
public

 

static

 
class

 
TMPro_EventManager

 *
{ 
public 
static 
readonly 

FastAction )
<) *
object* 0
,0 1 
Compute_DT_EventArgs2 F
>F G
COMPUTE_DT_EVENTH X
=Y Z
new[ ^

FastAction_ i
<i j
objectj p
,p q!
Compute_DT_EventArgs	r Ü
>
Ü á
(
á à
)
à â
;
â ä
public 
static 
readonly 

FastAction )
<) *
bool* .
,. /
Material0 8
>8 9#
MATERIAL_PROPERTY_EVENT: Q
=R S
newT W

FastActionX b
<b c
boolc g
,g h
Materiali q
>q r
(r s
)s t
;t u
public 
static 
readonly 

FastAction )
<) *
bool* .
,. /
Object0 6
>6 7
FONT_PROPERTY_EVENT8 K
=L M
newN Q

FastActionR \
<\ ]
bool] a
,a b
Objectc i
>i j
(j k
)k l
;l m
public 
static 
readonly 

FastAction )
<) *
bool* .
,. /
Object0 6
>6 7'
SPRITE_ASSET_PROPERTY_EVENT8 S
=T U
newV Y

FastActionZ d
<d e
boole i
,i j
Objectk q
>q r
(r s
)s t
;t u
public 
static 
readonly 

FastAction )
<) *
bool* .
,. /
Object0 6
>6 7&
TEXTMESHPRO_PROPERTY_EVENT8 R
=S T
newU X

FastActionY c
<c d
boold h
,h i
Objectj p
>p q
(q r
)r s
;s t
public 
static 
readonly 

FastAction )
<) *

GameObject* 4
,4 5
Material6 >
,> ?
Material@ H
>H I(
DRAG_AND_DROP_MATERIAL_EVENTJ f
=g h
newi l

FastActionm w
<w x

GameObject	x Ç
,
Ç É
Material
Ñ å
,
å ç
Material
é ñ
>
ñ ó
(
ó ò
)
ò ô
;
ô ö
public 
static 
readonly 

FastAction )
<) *
bool* .
>. /%
TEXT_STYLE_PROPERTY_EVENT0 I
=J K
newL O

FastActionP Z
<Z [
bool[ _
>_ `
(` a
)a b
;b c
public 
static 
readonly 

FastAction )
<) *
Object* 0
>0 1)
COLOR_GRADIENT_PROPERTY_EVENT2 O
=P Q
newR U

FastActionV `
<` a
Objecta g
>g h
(h i
)i j
;j k
public 
static 
readonly 

FastAction )'
TMP_SETTINGS_PROPERTY_EVENT* E
=F G
newH K

FastActionL V
(V W
)W X
;X Y
public 
static 
readonly 

FastAction )
RESOURCE_LOAD_EVENT* =
=> ?
new@ C

FastActionD N
(N O
)O P
;P Q
public!! 
static!! 
readonly!! 

FastAction!! )
<!!) *
bool!!* .
,!!. /
Object!!0 6
>!!6 7+
TEXTMESHPRO_UGUI_PROPERTY_EVENT!!8 W
=!!X Y
new!!Z ]

FastAction!!^ h
<!!h i
bool!!i m
,!!m n
Object!!o u
>!!u v
(!!v w
)!!w x
;!!x y
public## 
static## 
readonly## 

FastAction## )
<##) *
Object##* 0
>##0 1
TEXT_CHANGED_EVENT##2 D
=##E F
new##G J

FastAction##K U
<##U V
Object##V \
>##\ ]
(##] ^
)##^ _
;##_ `
public'' 
static'' 
void'' (
ON_MATERIAL_PROPERTY_CHANGED'' 7
(''7 8
bool''8 <
	isChanged''= F
,''F G
Material''H P
mat''Q T
)''T U
{(( 	#
MATERIAL_PROPERTY_EVENT)) #
.))# $
Call))$ (
())( )
	isChanged))) 2
,))2 3
mat))4 7
)))7 8
;))8 9
}** 	
public,, 
static,, 
void,, $
ON_FONT_PROPERTY_CHANGED,, 3
(,,3 4
bool,,4 8
	isChanged,,9 B
,,,B C
Object,,D J
obj,,K N
),,N O
{-- 	
FONT_PROPERTY_EVENT.. 
...  
Call..  $
(..$ %
	isChanged..% .
,... /
obj..0 3
)..3 4
;..4 5
}// 	
public11 
static11 
void11 ,
 ON_SPRITE_ASSET_PROPERTY_CHANGED11 ;
(11; <
bool11< @
	isChanged11A J
,11J K
Object11L R
obj11S V
)11V W
{22 	'
SPRITE_ASSET_PROPERTY_EVENT33 '
.33' (
Call33( ,
(33, -
	isChanged33- 6
,336 7
obj338 ;
)33; <
;33< =
}44 	
public66 
static66 
void66 +
ON_TEXTMESHPRO_PROPERTY_CHANGED66 :
(66: ;
bool66; ?
	isChanged66@ I
,66I J
Object66K Q
obj66R U
)66U V
{77 	&
TEXTMESHPRO_PROPERTY_EVENT88 &
.88& '
Call88' +
(88+ ,
	isChanged88, 5
,885 6
obj887 :
)88: ;
;88; <
}99 	
public;; 
static;; 
void;; -
!ON_DRAG_AND_DROP_MATERIAL_CHANGED;; <
(;;< =

GameObject;;= G
sender;;H N
,;;N O
Material;;P X
currentMaterial;;Y h
,;;h i
Material;;j r
newMaterial;;s ~
);;~ 
{<< 	(
DRAG_AND_DROP_MATERIAL_EVENT== (
.==( )
Call==) -
(==- .
sender==. 4
,==4 5
currentMaterial==6 E
,==E F
newMaterial==G R
)==R S
;==S T
}>> 	
public@@ 
static@@ 
void@@ *
ON_TEXT_STYLE_PROPERTY_CHANGED@@ 9
(@@9 :
bool@@: >
	isChanged@@? H
)@@H I
{AA 	%
TEXT_STYLE_PROPERTY_EVENTBB %
.BB% &
CallBB& *
(BB* +
	isChangedBB+ 4
)BB4 5
;BB5 6
}CC 	
publicEE 
staticEE 
voidEE .
"ON_COLOR_GRADIENT_PROPERTY_CHANGEDEE =
(EE= >
ObjectEE> D
objEEE H
)EEH I
{FF 	)
COLOR_GRADIENT_PROPERTY_EVENTGG )
.GG) *
CallGG* .
(GG. /
objGG/ 2
)GG2 3
;GG3 4
}HH 	
publicKK 
staticKK 
voidKK 
ON_TEXT_CHANGEDKK *
(KK* +
ObjectKK+ 1
objKK2 5
)KK5 6
{LL 	
TEXT_CHANGED_EVENTMM 
.MM 
CallMM #
(MM# $
objMM$ '
)MM' (
;MM( )
}NN 	
publicPP 
staticPP 
voidPP #
ON_TMP_SETTINGS_CHANGEDPP 2
(PP2 3
)PP3 4
{QQ 	'
TMP_SETTINGS_PROPERTY_EVENTRR '
.RR' (
CallRR( ,
(RR, -
)RR- .
;RR. /
}SS 	
publicUU 
staticUU 
voidUU 
ON_RESOURCES_LOADEDUU .
(UU. /
)UU/ 0
{VV 	
RESOURCE_LOAD_EVENTWW 
.WW  
CallWW  $
(WW$ %
)WW% &
;WW& '
}XX 	
publicZZ 
staticZZ 
voidZZ 0
$ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGEDZZ ?
(ZZ? @
boolZZ@ D
	isChangedZZE N
,ZZN O
ObjectZZP V
objZZW Z
)ZZZ [
{[[ 	+
TEXTMESHPRO_UGUI_PROPERTY_EVENT\\ +
.\\+ ,
Call\\, 0
(\\0 1
	isChanged\\1 :
,\\: ;
obj\\< ?
)\\? @
;\\@ A
}]] 	
publicjj 
staticjj 
voidjj 
ON_COMPUTE_DT_EVENTjj .
(jj. /
objectjj/ 5
Senderjj6 <
,jj< = 
Compute_DT_EventArgsjj> R
ejjS T
)jjT U
{kk 	
COMPUTE_DT_EVENTll 
.ll 
Callll !
(ll! "
Senderll" (
,ll( )
ell* +
)ll+ ,
;ll, -
}mm 	
}nn 
publicqq 

classqq  
Compute_DT_EventArgsqq %
{rr 
publicss 0
$Compute_DistanceTransform_EventTypesss 3
	EventTypess4 =
;ss= >
publictt 
floattt 
ProgressPercentagett '
;tt' (
publicuu 
Coloruu 
[uu 
]uu 
Colorsuu 
;uu 
publicxx  
Compute_DT_EventArgsxx #
(xx# $0
$Compute_DistanceTransform_EventTypesxx$ H
typexxI M
,xxM N
floatxxO T
progressxxU ]
)xx] ^
{yy 	
	EventTypezz 
=zz 
typezz 
;zz 
ProgressPercentage{{ 
={{  
progress{{! )
;{{) *
}|| 	
public~~  
Compute_DT_EventArgs~~ #
(~~# $0
$Compute_DistanceTransform_EventTypes~~$ H
type~~I M
,~~M N
Color~~O T
[~~T U
]~~U V
colors~~W ]
)~~] ^
{ 	
	EventType
ÄÄ 
=
ÄÄ 
type
ÄÄ 
;
ÄÄ 
Colors
ÅÅ 
=
ÅÅ 
colors
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
}
ÑÑ 
}ÜÜ Î‡
íD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_SubMeshUI.cs
	namespace

 	
TMPro


 
{ 
[ 
ExecuteAlways 
] 
[ 
RequireComponent 
( 
typeof 
( 
CanvasRenderer +
)+ ,
), -
]- .
public 

class 
TMP_SubMeshUI 
:  
MaskableGraphic! 0
{ 
public 
TMP_FontAsset 
	fontAsset &
{ 	
get 
{ 
return 
m_fontAsset $
;$ %
}& '
set 
{ 
m_fontAsset 
= 
value  %
;% &
}' (
} 	
[ 	
SerializeField	 
] 
private 
TMP_FontAsset 
m_fontAsset )
;) *
public 
TMP_SpriteAsset 
spriteAsset *
{   	
get!! 
{!! 
return!! 
m_spriteAsset!! &
;!!& '
}!!( )
set"" 
{"" 
m_spriteAsset"" 
=""  !
value""" '
;""' (
}"") *
}## 	
[$$ 	
SerializeField$$	 
]$$ 
private%% 
TMP_SpriteAsset%% 
m_spriteAsset%%  -
;%%- .
public++ 
override++ 
Texture++ 
mainTexture++  +
{,, 	
get-- 
{.. 
if// 
(// 
this// 
.// 
sharedMaterial// '
!=//( *
null//+ /
)/// 0
return00 
this00 
.00  
sharedMaterial00  .
.00. /

GetTexture00/ 9
(009 :
ShaderUtilities00: I
.00I J

ID_MainTex00J T
)00T U
;00U V
return22 
null22 
;22 
}33 
}44 	
public:: 
override:: 
Material::  
material::! )
{;; 	
get== 
{== 
return== 
GetMaterial== $
(==$ %
m_sharedMaterial==% 5
)==5 6
;==6 7
}==8 9
set@@ 
{AA 
ifBB 
(BB 
m_sharedMaterialBB $
!=BB% '
nullBB( ,
&&BB- /
m_sharedMaterialBB0 @
.BB@ A
GetInstanceIDBBA N
(BBN O
)BBO P
==BBQ S
valueBBT Y
.BBY Z
GetInstanceIDBBZ g
(BBg h
)BBh i
)BBi j
returnCC 
;CC 
m_sharedMaterialEE  
=EE! "

m_materialEE# -
=EE. /
valueEE0 5
;EE5 6
	m_paddingGG 
=GG !
GetPaddingForMaterialGG 1
(GG1 2
)GG2 3
;GG3 4
SetVerticesDirtyII  
(II  !
)II! "
;II" #
SetMaterialDirtyJJ  
(JJ  !
)JJ! "
;JJ" #
}KK 
}LL 	
[MM 	
SerializeFieldMM	 
]MM 
privateNN 
MaterialNN 

m_materialNN #
;NN# $
publicTT 
MaterialTT 
sharedMaterialTT &
{UU 	
getVV 
{VV 
returnVV 
m_sharedMaterialVV )
;VV) *
}VV+ ,
setWW 
{WW 
SetSharedMaterialWW #
(WW# $
valueWW$ )
)WW) *
;WW* +
}WW, -
}XX 	
[YY 	
SerializeFieldYY	 
]YY 
privateZZ 
MaterialZZ 
m_sharedMaterialZZ )
;ZZ) *
public`` 
Material`` 
fallbackMaterial`` (
{aa 	
getbb 
{bb 
returnbb 
m_fallbackMaterialbb +
;bb+ ,
}bb- .
setcc 
{dd 
ifee 
(ee 
m_fallbackMaterialee &
==ee' )
valueee* /
)ee/ 0
returnee1 7
;ee7 8
ifgg 
(gg 
m_fallbackMaterialgg &
!=gg' )
nullgg* .
&&gg/ 1
m_fallbackMaterialgg2 D
!=ggE G
valueggH M
)ggM N
TMP_MaterialManagerhh '
.hh' (#
ReleaseFallbackMaterialhh( ?
(hh? @
m_fallbackMaterialhh@ R
)hhR S
;hhS T
m_fallbackMaterialjj "
=jj# $
valuejj% *
;jj* +
TMP_MaterialManagerkk #
.kk# $(
AddFallbackMaterialReferencekk$ @
(kk@ A
m_fallbackMaterialkkA S
)kkS T
;kkT U
SetSharedMaterialmm !
(mm! "
m_fallbackMaterialmm" 4
)mm4 5
;mm5 6
}nn 
}oo 	
privatepp 
Materialpp 
m_fallbackMaterialpp +
;pp+ ,
publicvv 
Materialvv "
fallbackSourceMaterialvv .
{ww 	
getxx 
{xx 
returnxx $
m_fallbackSourceMaterialxx 1
;xx1 2
}xx3 4
setyy 
{yy $
m_fallbackSourceMaterialyy *
=yy+ ,
valueyy- 2
;yy2 3
}yy4 5
}zz 	
private{{ 
Material{{ $
m_fallbackSourceMaterial{{ 1
;{{1 2
public
ÅÅ 
override
ÅÅ 
Material
ÅÅ  "
materialForRendering
ÅÅ! 5
{
ÇÇ 	
get
ÉÉ 
{
ÑÑ 
return
ÖÖ !
TMP_MaterialManager
ÖÖ *
.
ÖÖ* +%
GetMaterialForRendering
ÖÖ+ B
(
ÖÖB C
this
ÖÖC G
,
ÖÖG H
m_sharedMaterial
ÖÖI Y
)
ÖÖY Z
;
ÖÖZ [
}
ÜÜ 
}
áá 	
public
çç 
bool
çç 
isDefaultMaterial
çç %
{
éé 	
get
èè 
{
èè 
return
èè !
m_isDefaultMaterial
èè ,
;
èè, -
}
èè. /
set
êê 
{
êê !
m_isDefaultMaterial
êê %
=
êê& '
value
êê( -
;
êê- .
}
êê/ 0
}
ëë 	
[
íí 	
SerializeField
íí	 
]
íí 
private
ìì 
bool
ìì !
m_isDefaultMaterial
ìì (
;
ìì( )
public
ôô 
float
ôô 
padding
ôô 
{
öö 	
get
õõ 
{
õõ 
return
õõ 
	m_padding
õõ "
;
õõ" #
}
õõ$ %
set
úú 
{
úú 
	m_padding
úú 
=
úú 
value
úú #
;
úú# $
}
úú% &
}
ùù 	
[
ûû 	
SerializeField
ûû	 
]
ûû 
private
üü 
float
üü 
	m_padding
üü 
;
üü  
public
•• 
Mesh
•• 
mesh
•• 
{
¶¶ 	
get
ßß 
{
®® 
if
©© 
(
©© 
m_mesh
©© 
==
©© 
null
©© "
)
©©" #
{
™™ 
m_mesh
´´ 
=
´´ 
new
´´  
Mesh
´´! %
(
´´% &
)
´´& '
;
´´' (
m_mesh
¨¨ 
.
¨¨ 
	hideFlags
¨¨ $
=
¨¨% &
	HideFlags
¨¨' 0
.
¨¨0 1
HideAndDontSave
¨¨1 @
;
¨¨@ A
}
≠≠ 
return
ØØ 
m_mesh
ØØ 
;
ØØ 
}
∞∞ 
set
±± 
{
±± 
m_mesh
±± 
=
±± 
value
±±  
;
±±  !
}
±±" #
}
≤≤ 	
private
≥≥ 
Mesh
≥≥ 
m_mesh
≥≥ 
;
≥≥ 
public
ππ 
TMP_Text
ππ 
textComponent
ππ %
{
∫∫ 	
get
ªª 
{
ºº 
if
ΩΩ 
(
ΩΩ 
m_TextComponent
ΩΩ #
==
ΩΩ$ &
null
ΩΩ' +
)
ΩΩ+ ,
m_TextComponent
ææ #
=
ææ$ %"
GetComponentInParent
ææ& :
<
ææ: ;
TextMeshProUGUI
ææ; J
>
ææJ K
(
ææK L
)
ææL M
;
ææM N
return
¿¿ 
m_TextComponent
¿¿ &
;
¿¿& '
}
¡¡ 
}
¬¬ 	
[
√√ 	
SerializeField
√√	 
]
√√ 
private
ƒƒ 
TextMeshProUGUI
ƒƒ 
m_TextComponent
ƒƒ  /
;
ƒƒ/ 0
[
«« 	
System
««	 
.
«« 
NonSerialized
«« 
]
«« 
private
»» 
bool
»» %
m_isRegisteredForEvents
»» ,
;
»», -
private
…… 
bool
…… 
m_materialDirty
…… $
;
……$ %
[
   	
SerializeField
  	 
]
   
private
ÀÀ 
int
ÀÀ &
m_materialReferenceIndex
ÀÀ ,
;
ÀÀ, -
public
’’ 
static
’’ 
TMP_SubMeshUI
’’ #
AddSubTextObject
’’$ 4
(
’’4 5
TextMeshProUGUI
’’5 D
textComponent
’’E R
,
’’R S
MaterialReference
’’T e
materialReference
’’f w
)
’’w x
{
÷÷ 	

GameObject
◊◊ 
go
◊◊ 
=
◊◊ 
new
◊◊ 

GameObject
◊◊  *
(
◊◊* +
$str
◊◊+ ?
+
◊◊@ A
materialReference
◊◊B S
.
◊◊S T
material
◊◊T \
.
◊◊\ ]
name
◊◊] a
+
◊◊b c
$str
◊◊d g
,
◊◊g h
typeof
◊◊i o
(
◊◊o p
RectTransform
◊◊p }
)
◊◊} ~
)
◊◊~ 
;◊◊ Ä
go
ÿÿ 
.
ÿÿ 
	hideFlags
ÿÿ 
=
ÿÿ 
	HideFlags
ÿÿ $
.
ÿÿ$ %
DontSave
ÿÿ% -
;
ÿÿ- .
go
⁄⁄ 
.
⁄⁄ 
	transform
⁄⁄ 
.
⁄⁄ 
	SetParent
⁄⁄ "
(
⁄⁄" #
textComponent
⁄⁄# 0
.
⁄⁄0 1
	transform
⁄⁄1 :
,
⁄⁄: ;
false
⁄⁄< A
)
⁄⁄A B
;
⁄⁄B C
go
€€ 
.
€€ 
	transform
€€ 
.
€€ 
SetAsFirstSibling
€€ *
(
€€* +
)
€€+ ,
;
€€, -
go
‹‹ 
.
‹‹ 
layer
‹‹ 
=
‹‹ 
textComponent
‹‹ $
.
‹‹$ %

gameObject
‹‹% /
.
‹‹/ 0
layer
‹‹0 5
;
‹‹5 6
RectTransform
ﬁﬁ 
rectTransform
ﬁﬁ '
=
ﬁﬁ( )
go
ﬁﬁ* ,
.
ﬁﬁ, -
GetComponent
ﬁﬁ- 9
<
ﬁﬁ9 :
RectTransform
ﬁﬁ: G
>
ﬁﬁG H
(
ﬁﬁH I
)
ﬁﬁI J
;
ﬁﬁJ K
rectTransform
ﬂﬂ 
.
ﬂﬂ 
	anchorMin
ﬂﬂ #
=
ﬂﬂ$ %
Vector2
ﬂﬂ& -
.
ﬂﬂ- .
zero
ﬂﬂ. 2
;
ﬂﬂ2 3
rectTransform
‡‡ 
.
‡‡ 
	anchorMax
‡‡ #
=
‡‡$ %
Vector2
‡‡& -
.
‡‡- .
one
‡‡. 1
;
‡‡1 2
rectTransform
·· 
.
·· 
	sizeDelta
·· #
=
··$ %
Vector2
··& -
.
··- .
zero
··. 2
;
··2 3
rectTransform
‚‚ 
.
‚‚ 
pivot
‚‚ 
=
‚‚  !
textComponent
‚‚" /
.
‚‚/ 0
rectTransform
‚‚0 =
.
‚‚= >
pivot
‚‚> C
;
‚‚C D
LayoutElement
‰‰ 
layoutElement
‰‰ '
=
‰‰( )
go
‰‰* ,
.
‰‰, -
AddComponent
‰‰- 9
<
‰‰9 :
LayoutElement
‰‰: G
>
‰‰G H
(
‰‰H I
)
‰‰I J
;
‰‰J K
layoutElement
ÂÂ 
.
ÂÂ 
ignoreLayout
ÂÂ &
=
ÂÂ' (
true
ÂÂ) -
;
ÂÂ- .
TMP_SubMeshUI
ÁÁ 
subMesh
ÁÁ !
=
ÁÁ" #
go
ÁÁ$ &
.
ÁÁ& '
AddComponent
ÁÁ' 3
<
ÁÁ3 4
TMP_SubMeshUI
ÁÁ4 A
>
ÁÁA B
(
ÁÁB C
)
ÁÁC D
;
ÁÁD E
subMesh
ÍÍ 
.
ÍÍ 
m_TextComponent
ÍÍ #
=
ÍÍ$ %
textComponent
ÍÍ& 3
;
ÍÍ3 4
subMesh
ÏÏ 
.
ÏÏ &
m_materialReferenceIndex
ÏÏ ,
=
ÏÏ- .
materialReference
ÏÏ/ @
.
ÏÏ@ A
index
ÏÏA F
;
ÏÏF G
subMesh
ÌÌ 
.
ÌÌ 
m_fontAsset
ÌÌ 
=
ÌÌ  !
materialReference
ÌÌ" 3
.
ÌÌ3 4
	fontAsset
ÌÌ4 =
;
ÌÌ= >
subMesh
ÓÓ 
.
ÓÓ 
m_spriteAsset
ÓÓ !
=
ÓÓ" #
materialReference
ÓÓ$ 5
.
ÓÓ5 6
spriteAsset
ÓÓ6 A
;
ÓÓA B
subMesh
ÔÔ 
.
ÔÔ !
m_isDefaultMaterial
ÔÔ '
=
ÔÔ( )
materialReference
ÔÔ* ;
.
ÔÔ; <
isDefaultMaterial
ÔÔ< M
;
ÔÔM N
subMesh
 
.
 
SetSharedMaterial
 %
(
% &
materialReference
& 7
.
7 8
material
8 @
)
@ A
;
A B
return
ÚÚ 
subMesh
ÚÚ 
;
ÚÚ 
}
ÛÛ 	
	protected
˙˙ 
override
˙˙ 
void
˙˙ 
OnEnable
˙˙  (
(
˙˙( )
)
˙˙) *
{
˚˚ 	
if
ˇˇ 
(
ˇˇ 
!
ˇˇ %
m_isRegisteredForEvents
ˇˇ (
)
ˇˇ( )
{
ÄÄ  
TMPro_EventManager
ÉÉ "
.
ÉÉ" #%
MATERIAL_PROPERTY_EVENT
ÉÉ# :
.
ÉÉ: ;
Add
ÉÉ; >
(
ÉÉ> ?*
ON_MATERIAL_PROPERTY_CHANGED
ÉÉ? [
)
ÉÉ[ \
;
ÉÉ\ ] 
TMPro_EventManager
ÑÑ "
.
ÑÑ" #!
FONT_PROPERTY_EVENT
ÑÑ# 6
.
ÑÑ6 7
Add
ÑÑ7 :
(
ÑÑ: ;&
ON_FONT_PROPERTY_CHANGED
ÑÑ; S
)
ÑÑS T
;
ÑÑT U 
TMPro_EventManager
ÜÜ "
.
ÜÜ" #*
DRAG_AND_DROP_MATERIAL_EVENT
ÜÜ# ?
.
ÜÜ? @
Add
ÜÜ@ C
(
ÜÜC D'
ON_DRAG_AND_DROP_MATERIAL
ÜÜD ]
)
ÜÜ] ^
;
ÜÜ^ _ 
TMPro_EventManager
àà "
.
àà" #)
SPRITE_ASSET_PROPERTY_EVENT
àà# >
.
àà> ?
Add
àà? B
(
ààB C.
 ON_SPRITE_ASSET_PROPERTY_CHANGED
ààC c
)
ààc d
;
ààd e%
m_isRegisteredForEvents
åå '
=
åå( )
true
åå* .
;
åå. /
}
çç 
if
êê 
(
êê 
	hideFlags
êê 
!=
êê 
	HideFlags
êê &
.
êê& '
DontSave
êê' /
)
êê/ 0
	hideFlags
ëë 
=
ëë 
	HideFlags
ëë %
.
ëë% &
DontSave
ëë& .
;
ëë. /(
m_ShouldRecalculateStencil
ìì &
=
ìì' (
true
ìì) -
;
ìì- .!
RecalculateClipping
îî 
(
îî  
)
îî  !
;
îî! " 
RecalculateMasking
ïï 
(
ïï 
)
ïï  
;
ïï  !
}
òò 	
	protected
õõ 
override
õõ 
void
õõ 
	OnDisable
õõ  )
(
õõ) *
)
õõ* +
{
úú 	
base
ûû 
.
ûû 
	OnDisable
ûû 
(
ûû 
)
ûû 
;
ûû 
if
¶¶ 
(
¶¶  
m_fallbackMaterial
¶¶ "
!=
¶¶# %
null
¶¶& *
)
¶¶* +
{
ßß !
TMP_MaterialManager
®® #
.
®®# $%
ReleaseFallbackMaterial
®®$ ;
(
®®; < 
m_fallbackMaterial
®®< N
)
®®N O
;
®®O P 
m_fallbackMaterial
©© "
=
©©# $
null
©©% )
;
©©) *
}
™™ 
}
´´ 	
	protected
ÆÆ 
override
ÆÆ 
void
ÆÆ 
	OnDestroy
ÆÆ  )
(
ÆÆ) *
)
ÆÆ* +
{
ØØ 	
if
≥≥ 
(
≥≥ 
m_mesh
≥≥ 
!=
≥≥ 
null
≥≥ 
)
≥≥ 
DestroyImmediate
≥≥  0
(
≥≥0 1
m_mesh
≥≥1 7
)
≥≥7 8
;
≥≥8 9
if
µµ 
(
µµ 
m_MaskMaterial
µµ 
!=
µµ !
null
µµ" &
)
µµ& '!
TMP_MaterialManager
∂∂ #
.
∂∂# $$
ReleaseStencilMaterial
∂∂$ :
(
∂∂: ;
m_MaskMaterial
∂∂; I
)
∂∂I J
;
∂∂J K
if
∏∏ 
(
∏∏  
m_fallbackMaterial
∏∏ "
!=
∏∏# %
null
∏∏& *
)
∏∏* +
{
ππ !
TMP_MaterialManager
∫∫ #
.
∫∫# $%
ReleaseFallbackMaterial
∫∫$ ;
(
∫∫; < 
m_fallbackMaterial
∫∫< N
)
∫∫N O
;
∫∫O P 
m_fallbackMaterial
ªª "
=
ªª# $
null
ªª% )
;
ªª) *
}
ºº  
TMPro_EventManager
¿¿ 
.
¿¿ %
MATERIAL_PROPERTY_EVENT
¿¿ 6
.
¿¿6 7
Remove
¿¿7 =
(
¿¿= >*
ON_MATERIAL_PROPERTY_CHANGED
¿¿> Z
)
¿¿Z [
;
¿¿[ \ 
TMPro_EventManager
¡¡ 
.
¡¡ !
FONT_PROPERTY_EVENT
¡¡ 2
.
¡¡2 3
Remove
¡¡3 9
(
¡¡9 :&
ON_FONT_PROPERTY_CHANGED
¡¡: R
)
¡¡R S
;
¡¡S T 
TMPro_EventManager
√√ 
.
√√ *
DRAG_AND_DROP_MATERIAL_EVENT
√√ ;
.
√√; <
Remove
√√< B
(
√√B C'
ON_DRAG_AND_DROP_MATERIAL
√√C \
)
√√\ ]
;
√√] ^ 
TMPro_EventManager
≈≈ 
.
≈≈ )
SPRITE_ASSET_PROPERTY_EVENT
≈≈ :
.
≈≈: ;
Remove
≈≈; A
(
≈≈A B.
 ON_SPRITE_ASSET_PROPERTY_CHANGED
≈≈B b
)
≈≈b c
;
≈≈c d%
m_isRegisteredForEvents
…… #
=
……$ %
false
……& +
;
……+ ,!
RecalculateClipping
ÀÀ 
(
ÀÀ  
)
ÀÀ  !
;
ÀÀ! "
m_TextComponent
ŒŒ 
.
ŒŒ #
havePropertiesChanged
ŒŒ 1
=
ŒŒ2 3
true
ŒŒ4 8
;
ŒŒ8 9
m_TextComponent
œœ 
.
œœ 
SetAllDirty
œœ '
(
œœ' (
)
œœ( )
;
œœ) *
}
–– 	
void
÷÷ *
ON_MATERIAL_PROPERTY_CHANGED
÷÷ )
(
÷÷) *
bool
÷÷* .
	isChanged
÷÷/ 8
,
÷÷8 9
Material
÷÷: B
mat
÷÷C F
)
÷÷F G
{
◊◊ 	
if
ŸŸ 
(
ŸŸ 
m_sharedMaterial
ŸŸ  
==
ŸŸ! #
null
ŸŸ$ (
)
ŸŸ( )
return
⁄⁄ 
;
⁄⁄ 
int
‹‹ 
targetMaterialID
‹‹  
=
‹‹! "
mat
‹‹# &
.
‹‹& '
GetInstanceID
‹‹' 4
(
‹‹4 5
)
‹‹5 6
;
‹‹6 7
int
›› 
sharedMaterialID
››  
=
››! "
m_sharedMaterial
››# 3
.
››3 4
GetInstanceID
››4 A
(
››A B
)
››B C
;
››C D
int
ﬁﬁ 
maskingMaterialID
ﬁﬁ !
=
ﬁﬁ" #
m_MaskMaterial
ﬁﬁ$ 2
==
ﬁﬁ3 5
null
ﬁﬁ6 :
?
ﬁﬁ; <
$num
ﬁﬁ= >
:
ﬁﬁ? @
m_MaskMaterial
ﬁﬁA O
.
ﬁﬁO P
GetInstanceID
ﬁﬁP ]
(
ﬁﬁ] ^
)
ﬁﬁ^ _
;
ﬁﬁ_ `
int
ﬂﬂ &
fallbackSourceMaterialID
ﬂﬂ (
=
ﬂﬂ) *&
m_fallbackSourceMaterial
ﬂﬂ+ C
==
ﬂﬂD F
null
ﬂﬂG K
?
ﬂﬂL M
$num
ﬂﬂN O
:
ﬂﬂP Q&
m_fallbackSourceMaterial
ﬂﬂR j
.
ﬂﬂj k
GetInstanceID
ﬂﬂk x
(
ﬂﬂx y
)
ﬂﬂy z
;
ﬂﬂz {
bool
‚‚ !
hasCullModeProperty
‚‚ $
=
‚‚% &
m_sharedMaterial
‚‚' 7
.
‚‚7 8
HasProperty
‚‚8 C
(
‚‚C D
ShaderUtilities
‚‚D S
.
‚‚S T 
ShaderTag_CullMode
‚‚T f
)
‚‚f g
;
‚‚g h
float
„„ 
cullMode
„„ 
=
„„ 
$num
„„ 
;
„„ 
if
ÂÂ 
(
ÂÂ !
hasCullModeProperty
ÂÂ #
)
ÂÂ# $
{
ÊÊ 
cullMode
ÁÁ 
=
ÁÁ 
textComponent
ÁÁ (
.
ÁÁ( ) 
fontSharedMaterial
ÁÁ) ;
.
ÁÁ; <
GetFloat
ÁÁ< D
(
ÁÁD E
ShaderUtilities
ÁÁE T
.
ÁÁT U 
ShaderTag_CullMode
ÁÁU g
)
ÁÁg h
;
ÁÁh i
m_sharedMaterial
ËË  
.
ËË  !
SetFloat
ËË! )
(
ËË) *
ShaderUtilities
ËË* 9
.
ËË9 : 
ShaderTag_CullMode
ËË: L
,
ËËL M
cullMode
ËËN V
)
ËËV W
;
ËËW X
}
ÈÈ 
if
ÏÏ 
(
ÏÏ  
m_fallbackMaterial
ÏÏ "
!=
ÏÏ# %
null
ÏÏ& *
&&
ÏÏ+ -&
fallbackSourceMaterialID
ÏÏ. F
==
ÏÏG I
targetMaterialID
ÏÏJ Z
&&
ÏÏ[ ]
TMP_Settings
ÏÏ^ j
.
ÏÏj k!
matchMaterialPreset
ÏÏk ~
)
ÏÏ~ 
{
ÌÌ !
TMP_MaterialManager
ÓÓ #
.
ÓÓ# $*
CopyMaterialPresetProperties
ÓÓ$ @
(
ÓÓ@ A
mat
ÓÓA D
,
ÓÓD E 
m_fallbackMaterial
ÓÓF X
)
ÓÓX Y
;
ÓÓY Z 
m_fallbackMaterial
ÒÒ "
.
ÒÒ" #
SetFloat
ÒÒ# +
(
ÒÒ+ ,
ShaderUtilities
ÒÒ, ;
.
ÒÒ; < 
ShaderTag_CullMode
ÒÒ< N
,
ÒÒN O
cullMode
ÒÒP X
)
ÒÒX Y
;
ÒÒY Z
}
ÚÚ 
if
ıı 
(
ıı 
m_MaskMaterial
ıı 
!=
ıı !
null
ıı" &
)
ıı& '
{
ˆˆ 
UnityEditor
˜˜ 
.
˜˜ 
Undo
˜˜  
.
˜˜  !
RecordObject
˜˜! -
(
˜˜- .
m_MaskMaterial
˜˜. <
,
˜˜< =
$str
˜˜> Y
)
˜˜Y Z
;
˜˜Z [
UnityEditor
¯¯ 
.
¯¯ 
Undo
¯¯  
.
¯¯  !
RecordObject
¯¯! -
(
¯¯- .
m_sharedMaterial
¯¯. >
,
¯¯> ?
$str
¯¯@ [
)
¯¯[ \
;
¯¯\ ]
if
˙˙ 
(
˙˙ 
targetMaterialID
˙˙ $
==
˙˙% '
sharedMaterialID
˙˙( 8
)
˙˙8 9
{
˚˚ 
float
˝˝ 
	stencilID
˝˝ #
=
˝˝$ %
m_MaskMaterial
˝˝& 4
.
˝˝4 5
GetFloat
˝˝5 =
(
˝˝= >
ShaderUtilities
˝˝> M
.
˝˝M N
ID_StencilID
˝˝N Z
)
˝˝Z [
;
˝˝[ \
float
˛˛ 
stencilComp
˛˛ %
=
˛˛& '
m_MaskMaterial
˛˛( 6
.
˛˛6 7
GetFloat
˛˛7 ?
(
˛˛? @
ShaderUtilities
˛˛@ O
.
˛˛O P
ID_StencilComp
˛˛P ^
)
˛˛^ _
;
˛˛_ `
m_MaskMaterial
ˇˇ "
.
ˇˇ" #(
CopyPropertiesFromMaterial
ˇˇ# =
(
ˇˇ= >
mat
ˇˇ> A
)
ˇˇA B
;
ˇˇB C
m_MaskMaterial
ÄÄ "
.
ÄÄ" #
shaderKeywords
ÄÄ# 1
=
ÄÄ2 3
mat
ÄÄ4 7
.
ÄÄ7 8
shaderKeywords
ÄÄ8 F
;
ÄÄF G
m_MaskMaterial
ÇÇ "
.
ÇÇ" #
SetFloat
ÇÇ# +
(
ÇÇ+ ,
ShaderUtilities
ÇÇ, ;
.
ÇÇ; <
ID_StencilID
ÇÇ< H
,
ÇÇH I
	stencilID
ÇÇJ S
)
ÇÇS T
;
ÇÇT U
m_MaskMaterial
ÉÉ "
.
ÉÉ" #
SetFloat
ÉÉ# +
(
ÉÉ+ ,
ShaderUtilities
ÉÉ, ;
.
ÉÉ; <
ID_StencilComp
ÉÉ< J
,
ÉÉJ K
stencilComp
ÉÉL W
)
ÉÉW X
;
ÉÉX Y
}
ÑÑ 
else
ÖÖ 
if
ÖÖ 
(
ÖÖ 
targetMaterialID
ÖÖ )
==
ÖÖ* ,
maskingMaterialID
ÖÖ- >
)
ÖÖ> ?
{
ÜÜ #
GetPaddingForMaterial
àà )
(
àà) *
mat
àà* -
)
àà- .
;
àà. /
m_sharedMaterial
ää $
.
ää$ %(
CopyPropertiesFromMaterial
ää% ?
(
ää? @
mat
ää@ C
)
ääC D
;
ääD E
m_sharedMaterial
ãã $
.
ãã$ %
shaderKeywords
ãã% 3
=
ãã4 5
mat
ãã6 9
.
ãã9 :
shaderKeywords
ãã: H
;
ããH I
m_sharedMaterial
åå $
.
åå$ %
SetFloat
åå% -
(
åå- .
ShaderUtilities
åå. =
.
åå= >
ID_StencilID
åå> J
,
ååJ K
$num
ååL M
)
ååM N
;
ååN O
m_sharedMaterial
çç $
.
çç$ %
SetFloat
çç% -
(
çç- .
ShaderUtilities
çç. =
.
çç= >
ID_StencilComp
çç> L
,
ççL M
$num
ççN O
)
ççO P
;
ççP Q
}
éé 
else
èè 
if
èè 
(
èè &
fallbackSourceMaterialID
èè 1
==
èè2 4
targetMaterialID
èè5 E
)
èèE F
{
êê 
float
ëë 
	stencilID
ëë #
=
ëë$ %
m_MaskMaterial
ëë& 4
.
ëë4 5
GetFloat
ëë5 =
(
ëë= >
ShaderUtilities
ëë> M
.
ëëM N
ID_StencilID
ëëN Z
)
ëëZ [
;
ëë[ \
float
íí 
stencilComp
íí %
=
íí& '
m_MaskMaterial
íí( 6
.
íí6 7
GetFloat
íí7 ?
(
íí? @
ShaderUtilities
íí@ O
.
ííO P
ID_StencilComp
ííP ^
)
íí^ _
;
íí_ `
m_MaskMaterial
ìì "
.
ìì" #(
CopyPropertiesFromMaterial
ìì# =
(
ìì= > 
m_fallbackMaterial
ìì> P
)
ììP Q
;
ììQ R
m_MaskMaterial
îî "
.
îî" #
shaderKeywords
îî# 1
=
îî2 3 
m_fallbackMaterial
îî4 F
.
îîF G
shaderKeywords
îîG U
;
îîU V
m_MaskMaterial
ññ "
.
ññ" #
SetFloat
ññ# +
(
ññ+ ,
ShaderUtilities
ññ, ;
.
ññ; <
ID_StencilID
ññ< H
,
ññH I
	stencilID
ññJ S
)
ññS T
;
ññT U
m_MaskMaterial
óó "
.
óó" #
SetFloat
óó# +
(
óó+ ,
ShaderUtilities
óó, ;
.
óó; <
ID_StencilComp
óó< J
,
óóJ K
stencilComp
óóL W
)
óóW X
;
óóX Y
}
òò 
if
õõ 
(
õõ !
hasCullModeProperty
õõ '
)
õõ' (
m_MaskMaterial
úú "
.
úú" #
SetFloat
úú# +
(
úú+ ,
ShaderUtilities
úú, ;
.
úú; < 
ShaderTag_CullMode
úú< N
,
úúN O
cullMode
úúP X
)
úúX Y
;
úúY Z
}
ùù 
	m_padding
üü 
=
üü #
GetPaddingForMaterial
üü -
(
üü- .
)
üü. /
;
üü/ 0
SetVerticesDirty
°° 
(
°° 
)
°° 
;
°° (
m_ShouldRecalculateStencil
¢¢ &
=
¢¢' (
true
¢¢) -
;
¢¢- .!
RecalculateClipping
££ 
(
££  
)
££  !
;
££! " 
RecalculateMasking
§§ 
(
§§ 
)
§§  
;
§§  !
}
•• 	
void
©© '
ON_DRAG_AND_DROP_MATERIAL
©© &
(
©©& '

GameObject
©©' 1
obj
©©2 5
,
©©5 6
Material
©©7 ?
currentMaterial
©©@ O
,
©©O P
Material
©©Q Y
newMaterial
©©Z e
)
©©e f
{
™™ 	
if
≠≠ 
(
≠≠ 
obj
≠≠ 
==
≠≠ 

gameObject
≠≠ !
||
≠≠" $
UnityEditor
≠≠% 0
.
≠≠0 1
PrefabUtility
≠≠1 >
.
≠≠> ?.
 GetCorrespondingObjectFromSource
≠≠? _
(
≠≠_ `

gameObject
≠≠` j
)
≠≠j k
==
≠≠l n
obj
≠≠o r
)
≠≠r s
{
±± 
if
≤≤ 
(
≤≤ 
!
≤≤ !
m_isDefaultMaterial
≤≤ (
)
≤≤( )
return
≤≤* 0
;
≤≤0 1
UnityEditor
∑∑ 
.
∑∑ 
Undo
∑∑  
.
∑∑  !
RecordObject
∑∑! -
(
∑∑- .
this
∑∑. 2
,
∑∑2 3
$str
∑∑4 I
)
∑∑I J
;
∑∑J K
UnityEditor
∏∏ 
.
∏∏ 
Undo
∏∏  
.
∏∏  !
RecordObject
∏∏! -
(
∏∏- .
canvasRenderer
∏∏. <
,
∏∏< =
$str
∏∏> S
)
∏∏S T
;
∏∏T U
SetSharedMaterial
∫∫ !
(
∫∫! "
newMaterial
∫∫" -
)
∫∫- .
;
∫∫. /
m_TextComponent
ªª 
.
ªª  #
havePropertiesChanged
ªª  5
=
ªª6 7
true
ªª8 <
;
ªª< =
}
ºº 
}
ΩΩ 	
void
¿¿ .
 ON_SPRITE_ASSET_PROPERTY_CHANGED
¿¿ -
(
¿¿- .
bool
¿¿. 2
	isChanged
¿¿3 <
,
¿¿< =
UnityEngine
¿¿> I
.
¿¿I J
Object
¿¿J P
obj
¿¿Q T
)
¿¿T U
{
¡¡ 	
if
ƒƒ 
(
ƒƒ 
m_TextComponent
ƒƒ 
!=
ƒƒ  "
null
ƒƒ# '
)
ƒƒ' (
{
≈≈ 
m_TextComponent
∆∆ 
.
∆∆  #
havePropertiesChanged
∆∆  5
=
∆∆6 7
true
∆∆8 <
;
∆∆< =
}
»» 
}
ÀÀ 	
void
ŒŒ &
ON_FONT_PROPERTY_CHANGED
ŒŒ %
(
ŒŒ% &
bool
ŒŒ& *
	isChanged
ŒŒ+ 4
,
ŒŒ4 5
Object
ŒŒ6 <
	fontAsset
ŒŒ= F
)
ŒŒF G
{
œœ 	
if
–– 
(
–– 
m_fontAsset
–– 
!=
–– 
null
–– #
&&
––$ &
	fontAsset
––' 0
.
––0 1
GetInstanceID
––1 >
(
––> ?
)
––? @
==
––A C
m_fontAsset
––D O
.
––O P
GetInstanceID
––P ]
(
––] ^
)
––^ _
)
––_ `
{
—— 
if
”” 
(
””  
m_fallbackMaterial
”” &
!=
””' )
null
””* .
)
””. /
{
‘‘ 
if
’’ 
(
’’ 
TMP_Settings
’’ $
.
’’$ %!
matchMaterialPreset
’’% 8
)
’’8 9
{
÷÷ !
TMP_MaterialManager
◊◊ +
.
◊◊+ ,%
ReleaseFallbackMaterial
◊◊, C
(
◊◊C D 
m_fallbackMaterial
◊◊D V
)
◊◊V W
;
◊◊W X!
TMP_MaterialManager
ÿÿ +
.
ÿÿ+ ,&
CleanupFallbackMaterials
ÿÿ, D
(
ÿÿD E
)
ÿÿE F
;
ÿÿF G
}
ŸŸ 
}
⁄⁄ 
}
€€ 
}
‹‹ 	
void
·· %
ON_TMP_SETTINGS_CHANGED
·· $
(
··$ %
)
··% &
{
‚‚ 	
}
ÊÊ 	
	protected
ÏÏ 
override
ÏÏ 
void
ÏÏ &
OnTransformParentChanged
ÏÏ  8
(
ÏÏ8 9
)
ÏÏ9 :
{
ÌÌ 	
if
ÓÓ 
(
ÓÓ 
!
ÓÓ 
this
ÓÓ 
.
ÓÓ 
IsActive
ÓÓ 
(
ÓÓ 
)
ÓÓ  
)
ÓÓ  !
return
ÔÔ 
;
ÔÔ (
m_ShouldRecalculateStencil
ÒÒ &
=
ÒÒ' (
true
ÒÒ) -
;
ÒÒ- .!
RecalculateClipping
ÚÚ 
(
ÚÚ  
)
ÚÚ  !
;
ÚÚ! " 
RecalculateMasking
ÛÛ 
(
ÛÛ 
)
ÛÛ  
;
ÛÛ  !
}
ÙÙ 	
public
¸¸ 
override
¸¸ 
Material
¸¸  !
GetModifiedMaterial
¸¸! 4
(
¸¸4 5
Material
¸¸5 =
baseMaterial
¸¸> J
)
¸¸J K
{
˝˝ 	
Material
˛˛ 
mat
˛˛ 
=
˛˛ 
baseMaterial
˛˛ '
;
˛˛' (
if
ÄÄ 
(
ÄÄ (
m_ShouldRecalculateStencil
ÄÄ *
)
ÄÄ* +
{
ÅÅ 
var
ÇÇ 

rootCanvas
ÇÇ 
=
ÇÇ  
MaskUtilities
ÇÇ! .
.
ÇÇ. /(
FindRootSortOverrideCanvas
ÇÇ/ I
(
ÇÇI J
	transform
ÇÇJ S
)
ÇÇS T
;
ÇÇT U
m_StencilValue
ÉÉ 
=
ÉÉ  
maskable
ÉÉ! )
?
ÉÉ* +
MaskUtilities
ÉÉ, 9
.
ÉÉ9 :
GetStencilDepth
ÉÉ: I
(
ÉÉI J
	transform
ÉÉJ S
,
ÉÉS T

rootCanvas
ÉÉU _
)
ÉÉ_ `
:
ÉÉa b
$num
ÉÉc d
;
ÉÉd e(
m_ShouldRecalculateStencil
ÑÑ *
=
ÑÑ+ ,
false
ÑÑ- 2
;
ÑÑ2 3
}
ÖÖ 
if
áá 
(
áá 
m_StencilValue
áá 
>
áá  
$num
áá! "
)
áá" #
{
àà 
var
ââ 
maskMat
ââ 
=
ââ 
StencilMaterial
ââ -
.
ââ- .
Add
ââ. 1
(
ââ1 2
mat
ââ2 5
,
ââ5 6
(
ââ7 8
$num
ââ8 9
<<
ââ: <
m_StencilValue
ââ= K
)
ââK L
-
ââM N
$num
ââO P
,
ââP Q
	StencilOp
ââR [
.
ââ[ \
Keep
ââ\ `
,
ââ` a
CompareFunction
ââb q
.
ââq r
Equal
ââr w
,
ââw x
ColorWriteMaskâây á
.ââá à
Allââà ã
,ââã å
(ââç é
$numââé è
<<ââê í
m_StencilValueââì °
)ââ° ¢
-ââ£ §
$numââ• ¶
,ââ¶ ß
$numââ® ©
)ââ© ™
;ââ™ ´
StencilMaterial
ää 
.
ää  
Remove
ää  &
(
ää& '
m_MaskMaterial
ää' 5
)
ää5 6
;
ää6 7
m_MaskMaterial
ãã 
=
ãã  
maskMat
ãã! (
;
ãã( )
mat
åå 
=
åå 
m_MaskMaterial
åå $
;
åå$ %
}
çç 
return
èè 
mat
èè 
;
èè 
}
êê 	
public
óó 
float
óó #
GetPaddingForMaterial
óó *
(
óó* +
)
óó+ ,
{
òò 	
float
ôô 
padding
ôô 
=
ôô 
ShaderUtilities
ôô +
.
ôô+ ,

GetPadding
ôô, 6
(
ôô6 7
m_sharedMaterial
ôô7 G
,
ôôG H
m_TextComponent
ôôI X
.
ôôX Y
extraPadding
ôôY e
,
ôôe f
m_TextComponent
ôôg v
.
ôôv w
isUsingBoldôôw Ç
)ôôÇ É
;ôôÉ Ñ
return
õõ 
padding
õõ 
;
õõ 
}
úú 	
public
££ 
float
££ #
GetPaddingForMaterial
££ *
(
££* +
Material
££+ 3
mat
££4 7
)
££7 8
{
§§ 	
float
•• 
padding
•• 
=
•• 
ShaderUtilities
•• +
.
••+ ,

GetPadding
••, 6
(
••6 7
mat
••7 :
,
••: ;
m_TextComponent
••< K
.
••K L
extraPadding
••L X
,
••X Y
m_TextComponent
••Z i
.
••i j
isUsingBold
••j u
)
••u v
;
••v w
return
ßß 
padding
ßß 
;
ßß 
}
®® 	
public
∞∞ 
void
∞∞ 
UpdateMeshPadding
∞∞ %
(
∞∞% &
bool
∞∞& *
isExtraPadding
∞∞+ 9
,
∞∞9 :
bool
∞∞; ?
isUsingBold
∞∞@ K
)
∞∞K L
{
±± 	
	m_padding
≤≤ 
=
≤≤ 
ShaderUtilities
≤≤ '
.
≤≤' (

GetPadding
≤≤( 2
(
≤≤2 3
m_sharedMaterial
≤≤3 C
,
≤≤C D
isExtraPadding
≤≤E S
,
≤≤S T
isUsingBold
≤≤U `
)
≤≤` a
;
≤≤a b
}
≥≥ 	
public
ππ 
override
ππ 
void
ππ 
SetAllDirty
ππ (
(
ππ( )
)
ππ) *
{
∫∫ 	
}
ææ 	
public
ƒƒ 
override
ƒƒ 
void
ƒƒ 
SetVerticesDirty
ƒƒ -
(
ƒƒ- .
)
ƒƒ. /
{
≈≈ 	
if
∆∆ 
(
∆∆ 
!
∆∆ 
this
∆∆ 
.
∆∆ 
IsActive
∆∆ 
(
∆∆ 
)
∆∆  
)
∆∆  !
return
«« 
;
«« 
if
   
(
   
m_TextComponent
   
!=
    "
null
  # '
)
  ' (
{
ÀÀ 
m_TextComponent
ÃÃ 
.
ÃÃ  #
havePropertiesChanged
ÃÃ  5
=
ÃÃ6 7
true
ÃÃ8 <
;
ÃÃ< =
m_TextComponent
ÕÕ 
.
ÕÕ  
SetVerticesDirty
ÕÕ  0
(
ÕÕ0 1
)
ÕÕ1 2
;
ÕÕ2 3
}
ŒŒ 
}
œœ 	
public
’’ 
override
’’ 
void
’’ 
SetLayoutDirty
’’ +
(
’’+ ,
)
’’, -
{
÷÷ 	
}
ÿÿ 	
public
ﬁﬁ 
override
ﬁﬁ 
void
ﬁﬁ 
SetMaterialDirty
ﬁﬁ -
(
ﬁﬁ- .
)
ﬁﬁ. /
{
ﬂﬂ 	
m_materialDirty
ÂÂ 
=
ÂÂ 
true
ÂÂ "
;
ÂÂ" #
UpdateMaterial
ÁÁ 
(
ÁÁ 
)
ÁÁ 
;
ÁÁ 
if
ÈÈ 
(
ÈÈ '
m_OnDirtyMaterialCallback
ÈÈ )
!=
ÈÈ* ,
null
ÈÈ- 1
)
ÈÈ1 2'
m_OnDirtyMaterialCallback
ÍÍ )
(
ÍÍ) *
)
ÍÍ* +
;
ÍÍ+ ,
}
 	
public
ˆˆ 
void
ˆˆ 
SetPivotDirty
ˆˆ !
(
ˆˆ! "
)
ˆˆ" #
{
˜˜ 	
if
¯¯ 
(
¯¯ 
!
¯¯ 
this
¯¯ 
.
¯¯ 
IsActive
¯¯ 
(
¯¯ 
)
¯¯  
)
¯¯  !
return
˘˘ 
;
˘˘ 
this
˚˚ 
.
˚˚ 
rectTransform
˚˚ 
.
˚˚ 
pivot
˚˚ $
=
˚˚% &
m_TextComponent
˚˚' 6
.
˚˚6 7
rectTransform
˚˚7 D
.
˚˚D E
pivot
˚˚E J
;
˚˚J K
}
¸¸ 	
	Transform
˛˛ $
GetRootCanvasTransform
˛˛ (
(
˛˛( )
)
˛˛) *
{
ˇˇ 	
if
ÄÄ 
(
ÄÄ #
m_RootCanvasTransform
ÄÄ %
==
ÄÄ& (
null
ÄÄ) -
)
ÄÄ- .#
m_RootCanvasTransform
ÅÅ %
=
ÅÅ& '
m_TextComponent
ÅÅ( 7
.
ÅÅ7 8
canvas
ÅÅ8 >
.
ÅÅ> ?

rootCanvas
ÅÅ? I
.
ÅÅI J
	transform
ÅÅJ S
;
ÅÅS T
return
ÉÉ #
m_RootCanvasTransform
ÉÉ (
;
ÉÉ( )
}
ÑÑ 	
private
ÖÖ 
	Transform
ÖÖ #
m_RootCanvasTransform
ÖÖ /
;
ÖÖ/ 0
public
åå 
override
åå 
void
åå 
Cull
åå !
(
åå! "
Rect
åå" &
clipRect
åå' /
,
åå/ 0
bool
åå1 5
	validRect
åå6 ?
)
åå? @
{
çç 	
}
èè 	
	protected
ïï 
override
ïï 
void
ïï 
UpdateGeometry
ïï  .
(
ïï. /
)
ïï/ 0
{
ññ 	
}
ôô 	
public
†† 
override
†† 
void
†† 
Rebuild
†† $
(
††$ %
CanvasUpdate
††% 1
update
††2 8
)
††8 9
{
°° 	
if
¢¢ 
(
¢¢ 
update
¢¢ 
==
¢¢ 
CanvasUpdate
¢¢ &
.
¢¢& '
	PreRender
¢¢' 0
)
¢¢0 1
{
££ 
if
§§ 
(
§§ 
!
§§ 
m_materialDirty
§§ $
)
§§$ %
return
§§& ,
;
§§, -
UpdateMaterial
¶¶ 
(
¶¶ 
)
¶¶  
;
¶¶  !
m_materialDirty
ßß 
=
ßß  !
false
ßß" '
;
ßß' (
}
®® 
}
©© 	
public
ØØ 
void
ØØ 
RefreshMaterial
ØØ #
(
ØØ# $
)
ØØ$ %
{
∞∞ 	
UpdateMaterial
±± 
(
±± 
)
±± 
;
±± 
}
≤≤ 	
	protected
∏∏ 
override
∏∏ 
void
∏∏ 
UpdateMaterial
∏∏  .
(
∏∏. /
)
∏∏/ 0
{
ππ 	
if
ºº 
(
ºº 
m_sharedMaterial
ºº  
==
ºº! #
null
ºº$ (
)
ºº( )
return
ΩΩ 
;
ΩΩ 
if
¬¬ 
(
¬¬ 
m_sharedMaterial
¬¬  
.
¬¬  !
HasProperty
¬¬! ,
(
¬¬, -
ShaderUtilities
¬¬- <
.
¬¬< = 
ShaderTag_CullMode
¬¬= O
)
¬¬O P
)
¬¬P Q
{
√√ 
float
ƒƒ 
cullMode
ƒƒ 
=
ƒƒ  
textComponent
ƒƒ! .
.
ƒƒ. / 
fontSharedMaterial
ƒƒ/ A
.
ƒƒA B
GetFloat
ƒƒB J
(
ƒƒJ K
ShaderUtilities
ƒƒK Z
.
ƒƒZ [ 
ShaderTag_CullMode
ƒƒ[ m
)
ƒƒm n
;
ƒƒn o
m_sharedMaterial
≈≈  
.
≈≈  !
SetFloat
≈≈! )
(
≈≈) *
ShaderUtilities
≈≈* 9
.
≈≈9 : 
ShaderTag_CullMode
≈≈: L
,
≈≈L M
cullMode
≈≈N V
)
≈≈V W
;
≈≈W X
}
∆∆ 
canvasRenderer
»» 
.
»» 
materialCount
»» (
=
»») *
$num
»»+ ,
;
»», -
canvasRenderer
…… 
.
…… 
SetMaterial
…… &
(
……& '"
materialForRendering
……' ;
,
……; <
$num
……= >
)
……> ?
;
……? @
if
ÕÕ 
(
ÕÕ 
m_sharedMaterial
ÕÕ  
!=
ÕÕ! #
null
ÕÕ$ (
&&
ÕÕ) +

gameObject
ÕÕ, 6
.
ÕÕ6 7
name
ÕÕ7 ;
!=
ÕÕ< >
$str
ÕÕ? P
+
ÕÕQ R
m_sharedMaterial
ÕÕS c
.
ÕÕc d
name
ÕÕd h
+
ÕÕi j
$str
ÕÕk n
)
ÕÕn o

gameObject
ŒŒ 
.
ŒŒ 
name
ŒŒ 
=
ŒŒ  !
$str
ŒŒ" 3
+
ŒŒ4 5
m_sharedMaterial
ŒŒ6 F
.
ŒŒF G
name
ŒŒG K
+
ŒŒL M
$str
ŒŒN Q
;
ŒŒQ R
}
–– 	
public
◊◊ 
override
◊◊ 
void
◊◊ !
RecalculateClipping
◊◊ 0
(
◊◊0 1
)
◊◊1 2
{
ÿÿ 	
base
⁄⁄ 
.
⁄⁄ !
RecalculateClipping
⁄⁄ $
(
⁄⁄$ %
)
⁄⁄% &
;
⁄⁄& '
}
€€ 	
Material
ÔÔ 
GetMaterial
ÔÔ 
(
ÔÔ 
)
ÔÔ 
{
 	
return
˝˝ 
m_sharedMaterial
˝˝ #
;
˝˝# $
}
˛˛ 	
Material
ÇÇ 
GetMaterial
ÇÇ 
(
ÇÇ 
Material
ÇÇ %
mat
ÇÇ& )
)
ÇÇ) *
{
ÉÉ 	
if
ää 
(
ää 

m_material
ää 
==
ää 
null
ää "
||
ää# %

m_material
ää& 0
.
ää0 1
GetInstanceID
ää1 >
(
ää> ?
)
ää? @
!=
ääA C
mat
ääD G
.
ääG H
GetInstanceID
ääH U
(
ääU V
)
ääV W
)
ääW X

m_material
ãã 
=
ãã $
CreateMaterialInstance
ãã 3
(
ãã3 4
mat
ãã4 7
)
ãã7 8
;
ãã8 9
m_sharedMaterial
çç 
=
çç 

m_material
çç )
;
çç) *
	m_padding
êê 
=
êê #
GetPaddingForMaterial
êê -
(
êê- .
)
êê. /
;
êê/ 0
SetVerticesDirty
íí 
(
íí 
)
íí 
;
íí 
SetMaterialDirty
ìì 
(
ìì 
)
ìì 
;
ìì 
return
ïï 
m_sharedMaterial
ïï #
;
ïï# $
}
ññ 	
Material
ûû $
CreateMaterialInstance
ûû '
(
ûû' (
Material
ûû( 0
source
ûû1 7
)
ûû7 8
{
üü 	
Material
†† 
mat
†† 
=
†† 
new
†† 
Material
†† '
(
††' (
source
††( .
)
††. /
;
††/ 0
mat
°° 
.
°° 
shaderKeywords
°° 
=
°°  
source
°°! '
.
°°' (
shaderKeywords
°°( 6
;
°°6 7
mat
¢¢ 
.
¢¢ 
name
¢¢ 
+=
¢¢ 
$str
¢¢ %
;
¢¢% &
return
§§ 
mat
§§ 
;
§§ 
}
•• 	
Material
¨¨ 
GetSharedMaterial
¨¨ "
(
¨¨" #
)
¨¨# $
{
≠≠ 	
return
±± 
canvasRenderer
±± !
.
±±! "
GetMaterial
±±" -
(
±±- .
)
±±. /
;
±±/ 0
}
≤≤ 	
void
ππ 
SetSharedMaterial
ππ 
(
ππ 
Material
ππ '
mat
ππ( +
)
ππ+ ,
{
∫∫ 	
m_sharedMaterial
ææ 
=
ææ 
mat
ææ "
;
ææ" #

m_Material
øø 
=
øø 
m_sharedMaterial
øø )
;
øø) *
	m_padding
∆∆ 
=
∆∆ #
GetPaddingForMaterial
∆∆ -
(
∆∆- .
)
∆∆. /
;
∆∆/ 0
SetMaterialDirty
…… 
(
…… 
)
…… 
;
…… 
}
œœ 	
}
–– 
}—— ÇÅ
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_UpdateManager.cs
	namespace 	
TMPro
 
{ 
public

 

class

 
TMP_UpdateManager

 "
{ 
private 
static 
TMP_UpdateManager (

s_Instance) 3
;3 4
private 
readonly 
HashSet  
<  !
int! $
>$ %
m_LayoutQueueLookup& 9
=: ;
new< ?
HashSet@ G
<G H
intH K
>K L
(L M
)M N
;N O
private 
readonly 
List 
< 
TMP_Text &
>& ' 
m_LayoutRebuildQueue( <
== >
new? B
ListC G
<G H
TMP_TextH P
>P Q
(Q R
)R S
;S T
private 
readonly 
HashSet  
<  !
int! $
>$ % 
m_GraphicQueueLookup& :
=; <
new= @
HashSetA H
<H I
intI L
>L M
(M N
)N O
;O P
private 
readonly 
List 
< 
TMP_Text &
>& '!
m_GraphicRebuildQueue( =
=> ?
new@ C
ListD H
<H I
TMP_TextI Q
>Q R
(R S
)S T
;T U
private 
readonly 
HashSet  
<  !
int! $
>$ %"
m_InternalUpdateLookup& <
== >
new? B
HashSetC J
<J K
intK N
>N O
(O P
)P Q
;Q R
private 
readonly 
List 
< 
TMP_Text &
>& '!
m_InternalUpdateQueue( =
=> ?
new@ C
ListD H
<H I
TMP_TextI Q
>Q R
(R S
)S T
;T U
private 
readonly 
HashSet  
<  !
int! $
>$ %!
m_CullingUpdateLookup& ;
=< =
new> A
HashSetB I
<I J
intJ M
>M N
(N O
)O P
;P Q
private 
readonly 
List 
< 
TMP_Text &
>& ' 
m_CullingUpdateQueue( <
== >
new? B
ListC G
<G H
TMP_TextH P
>P Q
(Q R
)R S
;S T
static 
TMP_UpdateManager  
instance! )
{ 	
get   
{!! 
if"" 
("" 

s_Instance"" 
=="" !
null""" &
)""& '

s_Instance## 
=##  
new##! $
TMP_UpdateManager##% 6
(##6 7
)##7 8
;##8 9
return%% 

s_Instance%% !
;%%! "
}&& 
}'' 	
TMP_UpdateManager,, 
(,, 
),, 
{-- 	
Canvas.. 
... 
willRenderCanvases.. %
+=..& (

DoRebuilds..) 3
;..3 4
}// 	
internal55 
static55 
void55 '
RegisterTextObjectForUpdate55 8
(558 9
TMP_Text559 A

textObject55B L
)55L M
{66 	
Profiler77 
.77 
BeginSample77  
(77  !
$str77! B
)77B C
;77C D
instance99 
.99 /
#InternalRegisterTextObjectForUpdate99 8
(998 9

textObject999 C
)99C D
;99D E
Profiler;; 
.;; 
	EndSample;; 
(;; 
);;  
;;;  !
}<< 	
private>> 
void>> /
#InternalRegisterTextObjectForUpdate>> 8
(>>8 9
TMP_Text>>9 A

textObject>>B L
)>>L M
{?? 	
int@@ 
id@@ 
=@@ 

textObject@@ 
.@@  
GetInstanceID@@  -
(@@- .
)@@. /
;@@/ 0
ifBB 
(BB "
m_InternalUpdateLookupBB &
.BB& '
ContainsBB' /
(BB/ 0
idBB0 2
)BB2 3
)BB3 4
returnCC 
;CC "
m_InternalUpdateLookupEE "
.EE" #
AddEE# &
(EE& '
idEE' )
)EE) *
;EE* +!
m_InternalUpdateQueueFF !
.FF! "
AddFF" %
(FF% &

textObjectFF& 0
)FF0 1
;FF1 2
}GG 	
publicMM 
staticMM 
voidMM /
#RegisterTextElementForLayoutRebuildMM >
(MM> ?
TMP_TextMM? G
elementMMH O
)MMO P
{NN 	
instanceOO 
.OO 7
+InternalRegisterTextElementForLayoutRebuildOO @
(OO@ A
elementOOA H
)OOH I
;OOI J
}PP 	
privateRR 
voidRR 7
+InternalRegisterTextElementForLayoutRebuildRR @
(RR@ A
TMP_TextRRA I
elementRRJ Q
)RRQ R
{SS 	
intTT 
idTT 
=TT 
elementTT 
.TT 
GetInstanceIDTT *
(TT* +
)TT+ ,
;TT, -
ifVV 
(VV 
m_LayoutQueueLookupVV #
.VV# $
ContainsVV$ ,
(VV, -
idVV- /
)VV/ 0
)VV0 1
returnWW 
;WW 
m_LayoutQueueLookupYY 
.YY  
AddYY  #
(YY# $
idYY$ &
)YY& '
;YY' ( 
m_LayoutRebuildQueueZZ  
.ZZ  !
AddZZ! $
(ZZ$ %
elementZZ% ,
)ZZ, -
;ZZ- .
}[[ 	
publicaa 
staticaa 
voidaa 0
$RegisterTextElementForGraphicRebuildaa ?
(aa? @
TMP_Textaa@ H
elementaaI P
)aaP Q
{bb 	
Profilercc 
.cc 
BeginSamplecc  
(cc  !
$strcc! K
)ccK L
;ccL M
instanceee 
.ee 8
,InternalRegisterTextElementForGraphicRebuildee A
(eeA B
elementeeB I
)eeI J
;eeJ K
Profilergg 
.gg 
	EndSamplegg 
(gg 
)gg  
;gg  !
}hh 	
privatejj 
voidjj 8
,InternalRegisterTextElementForGraphicRebuildjj A
(jjA B
TMP_TextjjB J
elementjjK R
)jjR S
{kk 	
intll 
idll 
=ll 
elementll 
.ll 
GetInstanceIDll *
(ll* +
)ll+ ,
;ll, -
ifnn 
(nn  
m_GraphicQueueLookupnn $
.nn$ %
Containsnn% -
(nn- .
idnn. 0
)nn0 1
)nn1 2
returnoo 
;oo  
m_GraphicQueueLookupqq  
.qq  !
Addqq! $
(qq$ %
idqq% '
)qq' (
;qq( )!
m_GraphicRebuildQueuerr !
.rr! "
Addrr" %
(rr% &
elementrr& -
)rr- .
;rr. /
}ss 	
publicuu 
staticuu 
voiduu /
#RegisterTextElementForCullingUpdateuu >
(uu> ?
TMP_Textuu? G
elementuuH O
)uuO P
{vv 	
Profilerww 
.ww 
BeginSampleww  
(ww  !
$strww! J
)wwJ K
;wwK L
instanceyy 
.yy 7
+InternalRegisterTextElementForCullingUpdateyy @
(yy@ A
elementyyA H
)yyH I
;yyI J
Profiler{{ 
.{{ 
	EndSample{{ 
({{ 
){{  
;{{  !
}|| 	
private~~ 
void~~ 7
+InternalRegisterTextElementForCullingUpdate~~ @
(~~@ A
TMP_Text~~A I
element~~J Q
)~~Q R
{ 	
int
ÄÄ 
id
ÄÄ 
=
ÄÄ 
element
ÄÄ 
.
ÄÄ 
GetInstanceID
ÄÄ *
(
ÄÄ* +
)
ÄÄ+ ,
;
ÄÄ, -
if
ÇÇ 
(
ÇÇ #
m_CullingUpdateLookup
ÇÇ %
.
ÇÇ% &
Contains
ÇÇ& .
(
ÇÇ. /
id
ÇÇ/ 1
)
ÇÇ1 2
)
ÇÇ2 3
return
ÉÉ 
;
ÉÉ #
m_CullingUpdateLookup
ÖÖ !
.
ÖÖ! "
Add
ÖÖ" %
(
ÖÖ% &
id
ÖÖ& (
)
ÖÖ( )
;
ÖÖ) *"
m_CullingUpdateQueue
ÜÜ  
.
ÜÜ  !
Add
ÜÜ! $
(
ÜÜ$ %
element
ÜÜ% ,
)
ÜÜ, -
;
ÜÜ- .
}
áá 	
void
åå 
OnCameraPreCull
åå 
(
åå 
)
åå 
{
çç 	

DoRebuilds
éé 
(
éé 
)
éé 
;
éé 
}
èè 	
void
îî 

DoRebuilds
îî 
(
îî 
)
îî 
{
ïï 	
for
óó 
(
óó 
int
óó 
i
óó 
=
óó 
$num
óó 
;
óó 
i
óó 
<
óó #
m_InternalUpdateQueue
óó  5
.
óó5 6
Count
óó6 ;
;
óó; <
i
óó= >
++
óó> @
)
óó@ A
{
òò #
m_InternalUpdateQueue
ôô %
[
ôô% &
i
ôô& '
]
ôô' (
.
ôô( )
InternalUpdate
ôô) 7
(
ôô7 8
)
ôô8 9
;
ôô9 :
}
öö 
for
ùù 
(
ùù 
int
ùù 
i
ùù 
=
ùù 
$num
ùù 
;
ùù 
i
ùù 
<
ùù "
m_LayoutRebuildQueue
ùù  4
.
ùù4 5
Count
ùù5 :
;
ùù: ;
i
ùù< =
++
ùù= ?
)
ùù? @
{
ûû "
m_LayoutRebuildQueue
üü $
[
üü$ %
i
üü% &
]
üü& '
.
üü' (
Rebuild
üü( /
(
üü/ 0
CanvasUpdate
üü0 <
.
üü< =
	Prelayout
üü= F
)
üüF G
;
üüG H
}
†† 
if
¢¢ 
(
¢¢ "
m_LayoutRebuildQueue
¢¢ $
.
¢¢$ %
Count
¢¢% *
>
¢¢+ ,
$num
¢¢- .
)
¢¢. /
{
££ "
m_LayoutRebuildQueue
§§ $
.
§§$ %
Clear
§§% *
(
§§* +
)
§§+ ,
;
§§, -!
m_LayoutQueueLookup
•• #
.
••# $
Clear
••$ )
(
••) *
)
••* +
;
••+ ,
}
¶¶ 
for
©© 
(
©© 
int
©© 
i
©© 
=
©© 
$num
©© 
;
©© 
i
©© 
<
©© #
m_GraphicRebuildQueue
©©  5
.
©©5 6
Count
©©6 ;
;
©©; <
i
©©= >
++
©©> @
)
©©@ A
{
™™ #
m_GraphicRebuildQueue
´´ %
[
´´% &
i
´´& '
]
´´' (
.
´´( )
Rebuild
´´) 0
(
´´0 1
CanvasUpdate
´´1 =
.
´´= >
	PreRender
´´> G
)
´´G H
;
´´H I
}
¨¨ 
if
ØØ 
(
ØØ #
m_GraphicRebuildQueue
ØØ %
.
ØØ% &
Count
ØØ& +
>
ØØ, -
$num
ØØ. /
)
ØØ/ 0
{
∞∞ #
m_GraphicRebuildQueue
±± %
.
±±% &
Clear
±±& +
(
±±+ ,
)
±±, -
;
±±- ."
m_GraphicQueueLookup
≤≤ $
.
≤≤$ %
Clear
≤≤% *
(
≤≤* +
)
≤≤+ ,
;
≤≤, -
}
≥≥ 
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂ 
$num
∂∂ 
;
∂∂ 
i
∂∂ 
<
∂∂ "
m_CullingUpdateQueue
∂∂  4
.
∂∂4 5
Count
∂∂5 :
;
∂∂: ;
i
∂∂< =
++
∂∂= ?
)
∂∂? @
{
∑∑ "
m_CullingUpdateQueue
∏∏ $
[
∏∏$ %
i
∏∏% &
]
∏∏& '
.
∏∏' (
UpdateCulling
∏∏( 5
(
∏∏5 6
)
∏∏6 7
;
∏∏7 8
}
ππ 
if
ºº 
(
ºº "
m_CullingUpdateQueue
ºº $
.
ºº$ %
Count
ºº% *
>
ºº+ ,
$num
ºº- .
)
ºº. /
{
ΩΩ "
m_CullingUpdateQueue
ææ $
.
ææ$ %
Clear
ææ% *
(
ææ* +
)
ææ+ ,
;
ææ, -#
m_CullingUpdateLookup
øø %
.
øø% &
Clear
øø& +
(
øø+ ,
)
øø, -
;
øø- .
}
¿¿ 
}
¡¡ 	
internal
√√ 
static
√√ 
void
√√ +
UnRegisterTextObjectForUpdate
√√ :
(
√√: ;
TMP_Text
√√; C

textObject
√√D N
)
√√N O
{
ƒƒ 	
Profiler
≈≈ 
.
≈≈ 
BeginSample
≈≈  
(
≈≈  !
$str
≈≈! D
)
≈≈D E
;
≈≈E F
instance
«« 
.
«« 3
%InternalUnRegisterTextObjectForUpdate
«« :
(
««: ;

textObject
««; E
)
««E F
;
««F G
Profiler
…… 
.
…… 
	EndSample
…… 
(
…… 
)
……  
;
……  !
}
   	
public
–– 
static
–– 
void
–– -
UnRegisterTextElementForRebuild
–– :
(
––: ;
TMP_Text
––; C
element
––D K
)
––K L
{
—— 	
instance
““ 
.
““ <
.InternalUnRegisterTextElementForGraphicRebuild
““ C
(
““C D
element
““D K
)
““K L
;
““L M
instance
”” 
.
”” ;
-InternalUnRegisterTextElementForLayoutRebuild
”” B
(
””B C
element
””C J
)
””J K
;
””K L
instance
‘‘ 
.
‘‘ 3
%InternalUnRegisterTextObjectForUpdate
‘‘ :
(
‘‘: ;
element
‘‘; B
)
‘‘B C
;
‘‘C D
}
’’ 	
private
◊◊ 
void
◊◊ <
.InternalUnRegisterTextElementForGraphicRebuild
◊◊ C
(
◊◊C D
TMP_Text
◊◊D L
element
◊◊M T
)
◊◊T U
{
ÿÿ 	
Profiler
ŸŸ 
.
ŸŸ 
BeginSample
ŸŸ  
(
ŸŸ  !
$str
ŸŸ! U
)
ŸŸU V
;
ŸŸV W
int
€€ 
id
€€ 
=
€€ 
element
€€ 
.
€€ 
GetInstanceID
€€ *
(
€€* +
)
€€+ ,
;
€€, -#
m_GraphicRebuildQueue
›› !
.
››! "
Remove
››" (
(
››( )
element
››) 0
)
››0 1
;
››1 2"
m_GraphicQueueLookup
ﬁﬁ  
.
ﬁﬁ  !
Remove
ﬁﬁ! '
(
ﬁﬁ' (
id
ﬁﬁ( *
)
ﬁﬁ* +
;
ﬁﬁ+ ,
Profiler
‡‡ 
.
‡‡ 
	EndSample
‡‡ 
(
‡‡ 
)
‡‡  
;
‡‡  !
}
·· 	
private
„„ 
void
„„ ;
-InternalUnRegisterTextElementForLayoutRebuild
„„ B
(
„„B C
TMP_Text
„„C K
element
„„L S
)
„„S T
{
‰‰ 	
int
ÂÂ 
id
ÂÂ 
=
ÂÂ 
element
ÂÂ 
.
ÂÂ 
GetInstanceID
ÂÂ *
(
ÂÂ* +
)
ÂÂ+ ,
;
ÂÂ, -"
m_LayoutRebuildQueue
ÁÁ  
.
ÁÁ  !
Remove
ÁÁ! '
(
ÁÁ' (
element
ÁÁ( /
)
ÁÁ/ 0
;
ÁÁ0 1!
m_LayoutQueueLookup
ËË 
.
ËË  
Remove
ËË  &
(
ËË& '
id
ËË' )
)
ËË) *
;
ËË* +
}
ÈÈ 	
private
ÎÎ 
void
ÎÎ 3
%InternalUnRegisterTextObjectForUpdate
ÎÎ :
(
ÎÎ: ;
TMP_Text
ÎÎ; C

textObject
ÎÎD N
)
ÎÎN O
{
ÏÏ 	
int
ÌÌ 
id
ÌÌ 
=
ÌÌ 

textObject
ÌÌ 
.
ÌÌ  
GetInstanceID
ÌÌ  -
(
ÌÌ- .
)
ÌÌ. /
;
ÌÌ/ 0#
m_InternalUpdateQueue
ÔÔ !
.
ÔÔ! "
Remove
ÔÔ" (
(
ÔÔ( )

textObject
ÔÔ) 3
)
ÔÔ3 4
;
ÔÔ4 5$
m_InternalUpdateLookup
 "
.
" #
Remove
# )
(
) *
id
* ,
)
, -
;
- .
}
ÒÒ 	
}
ÚÚ 
}ÛÛ œ
íD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_Character.cs
	namespace 	
TMPro
 
{ 
[		 
Serializable		 
]		 
public

 

class

 
TMP_Character

 
:

  
TMP_TextElement

! 0
{ 
public 
TMP_Character 
( 
) 
{ 	
m_ElementType 
= 
TextElementType +
.+ ,
	Character, 5
;5 6
this 
. 
scale 
= 
$num 
; 
} 	
public 
TMP_Character 
( 
uint !
unicode" )
,) *
Glyph+ 0
glyph1 6
)6 7
{ 	
m_ElementType 
= 
TextElementType +
.+ ,
	Character, 5
;5 6
this 
. 
unicode 
= 
unicode "
;" #
this 
. 
	textAsset 
= 
null !
;! "
this   
.   
glyph   
=   
glyph   
;   
this!! 
.!! 

glyphIndex!! 
=!! 
glyph!! #
.!!# $
index!!$ )
;!!) *
this"" 
."" 
scale"" 
="" 
$num"" 
;"" 
}## 	
public++ 
TMP_Character++ 
(++ 
uint++ !
unicode++" )
,++) *
TMP_FontAsset+++ 8
	fontAsset++9 B
,++B C
Glyph++D I
glyph++J O
)++O P
{,, 	
m_ElementType-- 
=-- 
TextElementType-- +
.--+ ,
	Character--, 5
;--5 6
this// 
.// 
unicode// 
=// 
unicode// "
;//" #
this00 
.00 
	textAsset00 
=00 
	fontAsset00 &
;00& '
this11 
.11 
glyph11 
=11 
glyph11 
;11 
this22 
.22 

glyphIndex22 
=22 
glyph22 #
.22# $
index22$ )
;22) *
this33 
.33 
scale33 
=33 
$num33 
;33 
}44 	
internal;; 
TMP_Character;; 
(;; 
uint;; #
unicode;;$ +
,;;+ ,
uint;;- 1

glyphIndex;;2 <
);;< =
{<< 	
m_ElementType== 
=== 
TextElementType== +
.==+ ,
	Character==, 5
;==5 6
this?? 
.?? 
unicode?? 
=?? 
unicode?? "
;??" #
this@@ 
.@@ 
	textAsset@@ 
=@@ 
null@@ !
;@@! "
thisAA 
.AA 
glyphAA 
=AA 
nullAA 
;AA 
thisBB 
.BB 

glyphIndexBB 
=BB 

glyphIndexBB (
;BB( )
thisCC 
.CC 
scaleCC 
=CC 
$numCC 
;CC 
}DD 	
}EE 
}FF ö«
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_SpriteAsset.cs
	namespace 	
TMPro
 
{ 
[		 &
ExcludeFromPresetAttribute		 
]		  
public

 

class

 
TMP_SpriteAsset

  
:

! "
	TMP_Asset

# ,
{ 
internal 

Dictionary 
< 
int 
,  
int! $
>$ %
m_NameLookup& 2
;2 3
internal 

Dictionary 
< 
uint  
,  !
int" %
>% &
m_GlyphIndexLookup' 9
;9 :
public 
string 
version 
{ 	
get 
{ 
return 
	m_Version "
;" #
}$ %
internal 
set 
{ 
	m_Version $
=% &
value' ,
;, -
}. /
} 	
[ 	
SerializeField	 
] 
private 
string 
	m_Version  
;  !
public 
FaceInfo 
faceInfo  
{ 	
get   
{   
return   

m_FaceInfo   #
;  # $
}  % &
internal!! 
set!! 
{!! 

m_FaceInfo!! %
=!!& '
value!!( -
;!!- .
}!!/ 0
}"" 	
[## 	
SerializeField##	 
]## 
internal$$ 
FaceInfo$$ 

m_FaceInfo$$ $
;$$$ %
public'' 
Texture'' 
spriteSheet'' "
;''" #
public,, 
List,, 
<,, 
TMP_SpriteCharacter,, '
>,,' ( 
spriteCharacterTable,,) =
{-- 	
get.. 
{// 
if00 
(00 
m_GlyphIndexLookup00 &
==00' )
null00* .
)00. /
UpdateLookupTables11 &
(11& '
)11' (
;11( )
return33 "
m_SpriteCharacterTable33 -
;33- .
}44 
internal55 
set55 
{55 "
m_SpriteCharacterTable55 1
=552 3
value554 9
;559 :
}55; <
}66 	
[77 	
SerializeField77	 
]77 
private88 
List88 
<88 
TMP_SpriteCharacter88 (
>88( )"
m_SpriteCharacterTable88* @
=88A B
new88C F
List88G K
<88K L
TMP_SpriteCharacter88L _
>88_ `
(88` a
)88a b
;88b c
public>> 

Dictionary>> 
<>> 
uint>> 
,>> 
TMP_SpriteCharacter>>  3
>>>3 4&
spriteCharacterLookupTable>>5 O
{?? 	
get@@ 
{AA 
ifBB 
(BB #
m_SpriteCharacterLookupBB +
==BB, .
nullBB/ 3
)BB3 4
UpdateLookupTablesCC &
(CC& '
)CC' (
;CC( )
returnEE #
m_SpriteCharacterLookupEE .
;EE. /
}FF 
internalGG 
setGG 
{GG #
m_SpriteCharacterLookupGG 2
=GG3 4
valueGG5 :
;GG: ;
}GG< =
}HH 	
internalII 

DictionaryII 
<II 
uintII  
,II  !
TMP_SpriteCharacterII" 5
>II5 6#
m_SpriteCharacterLookupII7 N
;IIN O
publicKK 
ListKK 
<KK 
TMP_SpriteGlyphKK #
>KK# $
spriteGlyphTableKK% 5
{LL 	
getMM 
{MM 
returnMM 
m_SpriteGlyphTableMM +
;MM+ ,
}MM- .
internalNN 
setNN 
{NN 
m_SpriteGlyphTableNN -
=NN. /
valueNN0 5
;NN5 6
}NN7 8
}OO 	
[PP 	
SerializeFieldPP	 
]PP 
privateQQ 
ListQQ 
<QQ 
TMP_SpriteGlyphQQ $
>QQ$ %
m_SpriteGlyphTableQQ& 8
=QQ9 :
newQQ; >
ListQQ? C
<QQC D
TMP_SpriteGlyphQQD S
>QQS T
(QQT U
)QQU V
;QQV W
internalSS 

DictionarySS 
<SS 
uintSS  
,SS  !
TMP_SpriteGlyphSS" 1
>SS1 2
m_SpriteGlyphLookupSS3 F
;SSF G
publicVV 
ListVV 
<VV 

TMP_SpriteVV 
>VV 
spriteInfoListVV  .
;VV. /
[[[ 	
SerializeField[[	 
][[ 
public\\ 
List\\ 
<\\ 
TMP_SpriteAsset\\ #
>\\# $ 
fallbackSpriteAssets\\% 9
;\\9 :
internal^^ 
bool^^ ,
 m_IsSpriteAssetLookupTablesDirty^^ 6
=^^7 8
false^^9 >
;^^> ?
voidaa 
Awakeaa 
(aa 
)aa 
{bb 	
ifdd 
(dd 
thisdd 
.dd 
materialdd 
!=dd  
nulldd! %
&&dd& (
stringdd) /
.dd/ 0
IsNullOrEmptydd0 =
(dd= >
	m_Versiondd> G
)ddG H
)ddH I
UpgradeSpriteAssetee "
(ee" #
)ee# $
;ee$ %
}ff 	
Materialmm $
GetDefaultSpriteMaterialmm )
(mm) *
)mm* +
{nn 	
ShaderUtilitiespp 
.pp  
GetShaderPropertyIDspp 0
(pp0 1
)pp1 2
;pp2 3
Shaderss 
shaderss 
=ss 
Shaderss "
.ss" #
Findss# '
(ss' (
$strss( <
)ss< =
;ss= >
Materialtt 
tempMaterialtt !
=tt" #
newtt$ '
Materialtt( 0
(tt0 1
shadertt1 7
)tt7 8
;tt8 9
tempMaterialuu 
.uu 

SetTextureuu #
(uu# $
ShaderUtilitiesuu$ 3
.uu3 4

ID_MainTexuu4 >
,uu> ?
spriteSheetuu@ K
)uuK L
;uuL M
tempMaterialvv 
.vv 
	hideFlagsvv "
=vv# $
	HideFlagsvv% .
.vv. /
HideInHierarchyvv/ >
;vv> ?
UnityEditoryy 
.yy 
AssetDatabaseyy %
.yy% &
AddObjectToAssetyy& 6
(yy6 7
tempMaterialyy7 C
,yyC D
thisyyE I
)yyI J
;yyJ K
UnityEditorzz 
.zz 
AssetDatabasezz %
.zz% &
ImportAssetzz& 1
(zz1 2
UnityEditorzz2 =
.zz= >
AssetDatabasezz> K
.zzK L
GetAssetPathzzL X
(zzX Y
thiszzY ]
)zz] ^
)zz^ _
;zz_ `
return~~ 
tempMaterial~~ 
;~~  
} 	
public
ÜÜ 
void
ÜÜ  
UpdateLookupTables
ÜÜ &
(
ÜÜ& '
)
ÜÜ' (
{
áá 	
if
ãã 
(
ãã 
this
ãã 
.
ãã 
material
ãã 
!=
ãã  
null
ãã! %
&&
ãã& (
string
ãã) /
.
ãã/ 0
IsNullOrEmpty
ãã0 =
(
ãã= >
	m_Version
ãã> G
)
ããG H
)
ããH I 
UpgradeSpriteAsset
åå "
(
åå" #
)
åå# $
;
åå$ %
if
èè 
(
èè  
m_GlyphIndexLookup
èè "
==
èè# %
null
èè& *
)
èè* + 
m_GlyphIndexLookup
êê "
=
êê# $
new
êê% (

Dictionary
êê) 3
<
êê3 4
uint
êê4 8
,
êê8 9
int
êê: =
>
êê= >
(
êê> ?
)
êê? @
;
êê@ A
else
ëë  
m_GlyphIndexLookup
íí "
.
íí" #
Clear
íí# (
(
íí( )
)
íí) *
;
íí* +
if
ïï 
(
ïï !
m_SpriteGlyphLookup
ïï #
==
ïï$ &
null
ïï' +
)
ïï+ ,!
m_SpriteGlyphLookup
ññ #
=
ññ$ %
new
ññ& )

Dictionary
ññ* 4
<
ññ4 5
uint
ññ5 9
,
ññ9 :
TMP_SpriteGlyph
ññ; J
>
ññJ K
(
ññK L
)
ññL M
;
ññM N
else
óó !
m_SpriteGlyphLookup
òò #
.
òò# $
Clear
òò$ )
(
òò) *
)
òò* +
;
òò+ ,
for
õõ 
(
õõ 
int
õõ 
i
õõ 
=
õõ 
$num
õõ 
;
õõ 
i
õõ 
<
õõ  
m_SpriteGlyphTable
õõ  2
.
õõ2 3
Count
õõ3 8
;
õõ8 9
i
õõ: ;
++
õõ; =
)
õõ= >
{
úú 
TMP_SpriteGlyph
ùù 
spriteGlyph
ùù  +
=
ùù, - 
m_SpriteGlyphTable
ùù. @
[
ùù@ A
i
ùùA B
]
ùùB C
;
ùùC D
uint
ûû 

glyphIndex
ûû 
=
ûû  !
spriteGlyph
ûû" -
.
ûû- .
index
ûû. 3
;
ûû3 4
if
†† 
(
††  
m_GlyphIndexLookup
†† &
.
††& '
ContainsKey
††' 2
(
††2 3

glyphIndex
††3 =
)
††= >
==
††? A
false
††B G
)
††G H 
m_GlyphIndexLookup
°° &
.
°°& '
Add
°°' *
(
°°* +

glyphIndex
°°+ 5
,
°°5 6
i
°°7 8
)
°°8 9
;
°°9 :
if
££ 
(
££ !
m_SpriteGlyphLookup
££ '
.
££' (
ContainsKey
££( 3
(
££3 4

glyphIndex
££4 >
)
££> ?
==
££@ B
false
££C H
)
££H I!
m_SpriteGlyphLookup
§§ '
.
§§' (
Add
§§( +
(
§§+ ,

glyphIndex
§§, 6
,
§§6 7
spriteGlyph
§§8 C
)
§§C D
;
§§D E
}
•• 
if
®® 
(
®® 
m_NameLookup
®® 
==
®® 
null
®®  $
)
®®$ %
m_NameLookup
©© 
=
©© 
new
©© "

Dictionary
©©# -
<
©©- .
int
©©. 1
,
©©1 2
int
©©3 6
>
©©6 7
(
©©7 8
)
©©8 9
;
©©9 :
else
™™ 
m_NameLookup
´´ 
.
´´ 
Clear
´´ "
(
´´" #
)
´´# $
;
´´$ %
if
ØØ 
(
ØØ %
m_SpriteCharacterLookup
ØØ '
==
ØØ( *
null
ØØ+ /
)
ØØ/ 0%
m_SpriteCharacterLookup
∞∞ '
=
∞∞( )
new
∞∞* -

Dictionary
∞∞. 8
<
∞∞8 9
uint
∞∞9 =
,
∞∞= >!
TMP_SpriteCharacter
∞∞? R
>
∞∞R S
(
∞∞S T
)
∞∞T U
;
∞∞U V
else
±± %
m_SpriteCharacterLookup
≤≤ '
.
≤≤' (
Clear
≤≤( -
(
≤≤- .
)
≤≤. /
;
≤≤/ 0
for
∂∂ 
(
∂∂ 
int
∂∂ 
i
∂∂ 
=
∂∂ 
$num
∂∂ 
;
∂∂ 
i
∂∂ 
<
∂∂ $
m_SpriteCharacterTable
∂∂  6
.
∂∂6 7
Count
∂∂7 <
;
∂∂< =
i
∂∂> ?
++
∂∂? A
)
∂∂A B
{
∑∑ !
TMP_SpriteCharacter
∏∏ #
spriteCharacter
∏∏$ 3
=
∏∏4 5$
m_SpriteCharacterTable
∏∏6 L
[
∏∏L M
i
∏∏M N
]
∏∏N O
;
∏∏O P
if
ªª 
(
ªª 
spriteCharacter
ªª #
==
ªª$ &
null
ªª' +
)
ªª+ ,
continue
ºº 
;
ºº 
uint
ææ 

glyphIndex
ææ 
=
ææ  !
spriteCharacter
ææ" 1
.
ææ1 2

glyphIndex
ææ2 <
;
ææ< =
if
¡¡ 
(
¡¡ !
m_SpriteGlyphLookup
¡¡ '
.
¡¡' (
ContainsKey
¡¡( 3
(
¡¡3 4

glyphIndex
¡¡4 >
)
¡¡> ?
==
¡¡@ B
false
¡¡C H
)
¡¡H I
continue
¬¬ 
;
¬¬ 
spriteCharacter
≈≈ 
.
≈≈  
glyph
≈≈  %
=
≈≈& '!
m_SpriteGlyphLookup
≈≈( ;
[
≈≈; <

glyphIndex
≈≈< F
]
≈≈F G
;
≈≈G H
spriteCharacter
∆∆ 
.
∆∆  
	textAsset
∆∆  )
=
∆∆* +
this
∆∆, 0
;
∆∆0 1
int
»» 
nameHashCode
»»  
=
»»! "$
m_SpriteCharacterTable
»»# 9
[
»»9 :
i
»»: ;
]
»»; <
.
»»< =
hashCode
»»= E
;
»»E F
if
   
(
   
m_NameLookup
    
.
    !
ContainsKey
  ! ,
(
  , -
nameHashCode
  - 9
)
  9 :
==
  ; =
false
  > C
)
  C D
m_NameLookup
ÀÀ  
.
ÀÀ  !
Add
ÀÀ! $
(
ÀÀ$ %
nameHashCode
ÀÀ% 1
,
ÀÀ1 2
i
ÀÀ3 4
)
ÀÀ4 5
;
ÀÀ5 6
uint
ÕÕ 
unicode
ÕÕ 
=
ÕÕ $
m_SpriteCharacterTable
ÕÕ 5
[
ÕÕ5 6
i
ÕÕ6 7
]
ÕÕ7 8
.
ÕÕ8 9
unicode
ÕÕ9 @
;
ÕÕ@ A
if
œœ 
(
œœ 
unicode
œœ 
!=
œœ 
$num
œœ %
&&
œœ& (%
m_SpriteCharacterLookup
œœ) @
.
œœ@ A
ContainsKey
œœA L
(
œœL M
unicode
œœM T
)
œœT U
==
œœV X
false
œœY ^
)
œœ^ _%
m_SpriteCharacterLookup
–– +
.
––+ ,
Add
––, /
(
––/ 0
unicode
––0 7
,
––7 8
spriteCharacter
––9 H
)
––H I
;
––I J
}
—— .
 m_IsSpriteAssetLookupTablesDirty
”” ,
=
””- .
false
””/ 4
;
””4 5
}
‘‘ 	
public
‹‹ 
int
‹‹ (
GetSpriteIndexFromHashcode
‹‹ -
(
‹‹- .
int
‹‹. 1
hashCode
‹‹2 :
)
‹‹: ;
{
›› 	
if
ﬁﬁ 
(
ﬁﬁ 
m_NameLookup
ﬁﬁ 
==
ﬁﬁ 
null
ﬁﬁ  $
)
ﬁﬁ$ % 
UpdateLookupTables
ﬂﬂ "
(
ﬂﬂ" #
)
ﬂﬂ# $
;
ﬂﬂ$ %
int
·· 
index
·· 
;
·· 
if
„„ 
(
„„ 
m_NameLookup
„„ 
.
„„ 
TryGetValue
„„ (
(
„„( )
hashCode
„„) 1
,
„„1 2
out
„„3 6
index
„„7 <
)
„„< =
)
„„= >
return
‰‰ 
index
‰‰ 
;
‰‰ 
return
ÊÊ 
-
ÊÊ 
$num
ÊÊ 
;
ÊÊ 
}
ÁÁ 	
public
ÔÔ 
int
ÔÔ '
GetSpriteIndexFromUnicode
ÔÔ ,
(
ÔÔ- .
uint
ÔÔ. 2
unicode
ÔÔ3 :
)
ÔÔ: ;
{
 	
if
ÒÒ 
(
ÒÒ %
m_SpriteCharacterLookup
ÒÒ '
==
ÒÒ( *
null
ÒÒ+ /
)
ÒÒ/ 0 
UpdateLookupTables
ÚÚ "
(
ÚÚ" #
)
ÚÚ# $
;
ÚÚ$ %!
TMP_SpriteCharacter
ÙÙ 
spriteCharacter
ÙÙ  /
;
ÙÙ/ 0
if
ˆˆ 
(
ˆˆ %
m_SpriteCharacterLookup
ˆˆ '
.
ˆˆ' (
TryGetValue
ˆˆ( 3
(
ˆˆ3 4
unicode
ˆˆ4 ;
,
ˆˆ; <
out
ˆˆ= @
spriteCharacter
ˆˆA P
)
ˆˆP Q
)
ˆˆQ R
return
˜˜ 
(
˜˜ 
int
˜˜ 
)
˜˜ 
spriteCharacter
˜˜ +
.
˜˜+ ,

glyphIndex
˜˜, 6
;
˜˜6 7
return
˘˘ 
-
˘˘ 
$num
˘˘ 
;
˘˘ 
}
˙˙ 	
public
ÇÇ 
int
ÇÇ $
GetSpriteIndexFromName
ÇÇ )
(
ÇÇ* +
string
ÇÇ+ 1
name
ÇÇ2 6
)
ÇÇ6 7
{
ÉÉ 	
if
ÑÑ 
(
ÑÑ 
m_NameLookup
ÑÑ 
==
ÑÑ 
null
ÑÑ  $
)
ÑÑ$ % 
UpdateLookupTables
ÖÖ "
(
ÖÖ" #
)
ÖÖ# $
;
ÖÖ$ %
int
áá 
hashCode
áá 
=
áá 
TMP_TextUtilities
áá ,
.
áá, -
GetSimpleHashCode
áá- >
(
áá> ?
name
áá? C
)
ááC D
;
ááD E
return
ââ (
GetSpriteIndexFromHashcode
ââ -
(
ââ- .
hashCode
ââ. 6
)
ââ6 7
;
ââ7 8
}
ää 	
private
êê 
static
êê 
HashSet
êê 
<
êê 
int
êê "
>
êê" #$
k_searchedSpriteAssets
êê$ :
;
êê: ;
public
ôô 
static
ôô 
TMP_SpriteAsset
ôô %&
SearchForSpriteByUnicode
ôô& >
(
ôô> ?
TMP_SpriteAsset
ôô? N
spriteAsset
ôôO Z
,
ôôZ [
uint
ôô\ `
unicode
ôôa h
,
ôôh i
bool
ôôj n
includeFallbacks
ôôo 
,ôô Ä
outôôÅ Ñ
intôôÖ à
spriteIndexôôâ î
)ôôî ï
{
öö 	
if
úú 
(
úú 
spriteAsset
úú 
==
úú 
null
úú #
)
úú# $
{
úú% &
spriteIndex
úú' 2
=
úú3 4
-
úú5 6
$num
úú6 7
;
úú7 8
return
úú9 ?
null
úú@ D
;
úúD E
}
úúF G
spriteIndex
üü 
=
üü 
spriteAsset
üü %
.
üü% &'
GetSpriteIndexFromUnicode
üü& ?
(
üü? @
unicode
üü@ G
)
üüG H
;
üüH I
if
†† 
(
†† 
spriteIndex
†† 
!=
†† 
-
††  
$num
††  !
)
††! "
return
°° 
spriteAsset
°° "
;
°°" #
if
§§ 
(
§§ $
k_searchedSpriteAssets
§§ &
==
§§' )
null
§§* .
)
§§. /$
k_searchedSpriteAssets
•• &
=
••' (
new
••) ,
HashSet
••- 4
<
••4 5
int
••5 8
>
••8 9
(
••9 :
)
••: ;
;
••; <
else
¶¶ $
k_searchedSpriteAssets
ßß &
.
ßß& '
Clear
ßß' ,
(
ßß, -
)
ßß- .
;
ßß. /
int
™™ 
id
™™ 
=
™™ 
spriteAsset
™™  
.
™™  !
GetInstanceID
™™! .
(
™™. /
)
™™/ 0
;
™™0 1$
k_searchedSpriteAssets
´´ "
.
´´" #
Add
´´# &
(
´´& '
id
´´' )
)
´´) *
;
´´* +
if
ÆÆ 
(
ÆÆ 
includeFallbacks
ÆÆ  
&&
ÆÆ! #
spriteAsset
ÆÆ$ /
.
ÆÆ/ 0"
fallbackSpriteAssets
ÆÆ0 D
!=
ÆÆE G
null
ÆÆH L
&&
ÆÆM O
spriteAsset
ÆÆP [
.
ÆÆ[ \"
fallbackSpriteAssets
ÆÆ\ p
.
ÆÆp q
Count
ÆÆq v
>
ÆÆw x
$num
ÆÆy z
)
ÆÆz {
return
ØØ .
 SearchForSpriteByUnicodeInternal
ØØ 7
(
ØØ7 8
spriteAsset
ØØ8 C
.
ØØC D"
fallbackSpriteAssets
ØØD X
,
ØØX Y
unicode
ØØZ a
,
ØØa b
true
ØØc g
,
ØØg h
out
ØØi l
spriteIndex
ØØm x
)
ØØx y
;
ØØy z
if
≤≤ 
(
≤≤ 
includeFallbacks
≤≤  
&&
≤≤! #
TMP_Settings
≤≤$ 0
.
≤≤0 1 
defaultSpriteAsset
≤≤1 C
!=
≤≤D F
null
≤≤G K
)
≤≤K L
return
≥≥ .
 SearchForSpriteByUnicodeInternal
≥≥ 7
(
≥≥7 8
TMP_Settings
≥≥8 D
.
≥≥D E 
defaultSpriteAsset
≥≥E W
,
≥≥W X
unicode
≥≥Y `
,
≥≥` a
true
≥≥b f
,
≥≥f g
out
≥≥h k
spriteIndex
≥≥l w
)
≥≥w x
;
≥≥x y
spriteIndex
µµ 
=
µµ 
-
µµ 
$num
µµ 
;
µµ 
return
∂∂ 
null
∂∂ 
;
∂∂ 
}
∑∑ 	
private
¬¬ 
static
¬¬ 
TMP_SpriteAsset
¬¬ &.
 SearchForSpriteByUnicodeInternal
¬¬' G
(
¬¬G H
List
¬¬H L
<
¬¬L M
TMP_SpriteAsset
¬¬M \
>
¬¬\ ]
spriteAssets
¬¬^ j
,
¬¬j k
uint
¬¬l p
unicode
¬¬q x
,
¬¬x y
bool
¬¬z ~
includeFallbacks¬¬ è
,¬¬è ê
out¬¬ë î
int¬¬ï ò
spriteIndex¬¬ô §
)¬¬§ •
{
√√ 	
for
ƒƒ 
(
ƒƒ 
int
ƒƒ 
i
ƒƒ 
=
ƒƒ 
$num
ƒƒ 
;
ƒƒ 
i
ƒƒ 
<
ƒƒ 
spriteAssets
ƒƒ  ,
.
ƒƒ, -
Count
ƒƒ- 2
;
ƒƒ2 3
i
ƒƒ4 5
++
ƒƒ5 7
)
ƒƒ7 8
{
≈≈ 
TMP_SpriteAsset
∆∆ 
temp
∆∆  $
=
∆∆% &
spriteAssets
∆∆' 3
[
∆∆3 4
i
∆∆4 5
]
∆∆5 6
;
∆∆6 7
if
«« 
(
«« 
temp
«« 
==
«« 
null
««  
)
««  !
continue
««" *
;
««* +
int
…… 
id
…… 
=
…… 
temp
…… 
.
…… 
GetInstanceID
…… +
(
……+ ,
)
……, -
;
……- .
if
ÃÃ 
(
ÃÃ $
k_searchedSpriteAssets
ÃÃ *
.
ÃÃ* +
Add
ÃÃ+ .
(
ÃÃ. /
id
ÃÃ/ 1
)
ÃÃ1 2
==
ÃÃ3 5
false
ÃÃ6 ;
)
ÃÃ; <
continue
ÕÕ 
;
ÕÕ 
temp
œœ 
=
œœ .
 SearchForSpriteByUnicodeInternal
œœ 7
(
œœ7 8
temp
œœ8 <
,
œœ< =
unicode
œœ> E
,
œœE F
includeFallbacks
œœG W
,
œœW X
out
œœY \
spriteIndex
œœ] h
)
œœh i
;
œœi j
if
—— 
(
—— 
temp
—— 
!=
—— 
null
——  
)
——  !
return
““ 
temp
““ 
;
““  
}
”” 
spriteIndex
’’ 
=
’’ 
-
’’ 
$num
’’ 
;
’’ 
return
÷÷ 
null
÷÷ 
;
÷÷ 
}
◊◊ 	
private
‚‚ 
static
‚‚ 
TMP_SpriteAsset
‚‚ &.
 SearchForSpriteByUnicodeInternal
‚‚' G
(
‚‚G H
TMP_SpriteAsset
‚‚H W
spriteAsset
‚‚X c
,
‚‚c d
uint
‚‚e i
unicode
‚‚j q
,
‚‚q r
bool
‚‚s w
includeFallbacks‚‚x à
,‚‚à â
out‚‚ä ç
int‚‚é ë
spriteIndex‚‚í ù
)‚‚ù û
{
„„ 	
spriteIndex
ÂÂ 
=
ÂÂ 
spriteAsset
ÂÂ %
.
ÂÂ% &'
GetSpriteIndexFromUnicode
ÂÂ& ?
(
ÂÂ? @
unicode
ÂÂ@ G
)
ÂÂG H
;
ÂÂH I
if
ÁÁ 
(
ÁÁ 
spriteIndex
ÁÁ 
!=
ÁÁ 
-
ÁÁ  
$num
ÁÁ  !
)
ÁÁ! "
return
ËË 
spriteAsset
ËË "
;
ËË" #
if
ÍÍ 
(
ÍÍ 
includeFallbacks
ÍÍ  
&&
ÍÍ! #
spriteAsset
ÍÍ$ /
.
ÍÍ/ 0"
fallbackSpriteAssets
ÍÍ0 D
!=
ÍÍE G
null
ÍÍH L
&&
ÍÍM O
spriteAsset
ÍÍP [
.
ÍÍ[ \"
fallbackSpriteAssets
ÍÍ\ p
.
ÍÍp q
Count
ÍÍq v
>
ÍÍw x
$num
ÍÍy z
)
ÍÍz {
return
ÎÎ .
 SearchForSpriteByUnicodeInternal
ÎÎ 7
(
ÎÎ7 8
spriteAsset
ÎÎ8 C
.
ÎÎC D"
fallbackSpriteAssets
ÎÎD X
,
ÎÎX Y
unicode
ÎÎZ a
,
ÎÎa b
true
ÎÎc g
,
ÎÎg h
out
ÎÎi l
spriteIndex
ÎÎm x
)
ÎÎx y
;
ÎÎy z
spriteIndex
ÌÌ 
=
ÌÌ 
-
ÌÌ 
$num
ÌÌ 
;
ÌÌ 
return
ÓÓ 
null
ÓÓ 
;
ÓÓ 
}
ÔÔ 	
public
˙˙ 
static
˙˙ 
TMP_SpriteAsset
˙˙ %'
SearchForSpriteByHashCode
˙˙& ?
(
˙˙? @
TMP_SpriteAsset
˙˙@ O
spriteAsset
˙˙P [
,
˙˙[ \
int
˙˙] `
hashCode
˙˙a i
,
˙˙i j
bool
˙˙k o
includeFallbacks˙˙p Ä
,˙˙Ä Å
out˙˙Ç Ö
int˙˙Ü â
spriteIndex˙˙ä ï
)˙˙ï ñ
{
˚˚ 	
if
˝˝ 
(
˝˝ 
spriteAsset
˝˝ 
==
˝˝ 
null
˝˝ #
)
˝˝# $
{
˝˝% &
spriteIndex
˝˝' 2
=
˝˝3 4
-
˝˝5 6
$num
˝˝6 7
;
˝˝7 8
return
˝˝9 ?
null
˝˝@ D
;
˝˝D E
}
˝˝F G
spriteIndex
ˇˇ 
=
ˇˇ 
spriteAsset
ˇˇ %
.
ˇˇ% &(
GetSpriteIndexFromHashcode
ˇˇ& @
(
ˇˇ@ A
hashCode
ˇˇA I
)
ˇˇI J
;
ˇˇJ K
if
ÄÄ 
(
ÄÄ 
spriteIndex
ÄÄ 
!=
ÄÄ 
-
ÄÄ  
$num
ÄÄ  !
)
ÄÄ! "
return
ÅÅ 
spriteAsset
ÅÅ "
;
ÅÅ" #
if
ÑÑ 
(
ÑÑ $
k_searchedSpriteAssets
ÑÑ &
==
ÑÑ' )
null
ÑÑ* .
)
ÑÑ. /$
k_searchedSpriteAssets
ÖÖ &
=
ÖÖ' (
new
ÖÖ) ,
HashSet
ÖÖ- 4
<
ÖÖ4 5
int
ÖÖ5 8
>
ÖÖ8 9
(
ÖÖ9 :
)
ÖÖ: ;
;
ÖÖ; <
else
ÜÜ $
k_searchedSpriteAssets
áá &
.
áá& '
Clear
áá' ,
(
áá, -
)
áá- .
;
áá. /
int
ââ 
id
ââ 
=
ââ 
spriteAsset
ââ  
.
ââ  !

instanceID
ââ! +
;
ââ+ ,$
k_searchedSpriteAssets
åå "
.
åå" #
Add
åå# &
(
åå& '
id
åå' )
)
åå) *
;
åå* +
TMP_SpriteAsset
éé 
tempSpriteAsset
éé +
;
éé+ ,
if
ëë 
(
ëë 
includeFallbacks
ëë  
&&
ëë! #
spriteAsset
ëë$ /
.
ëë/ 0"
fallbackSpriteAssets
ëë0 D
!=
ëëE G
null
ëëH L
&&
ëëM O
spriteAsset
ëëP [
.
ëë[ \"
fallbackSpriteAssets
ëë\ p
.
ëëp q
Count
ëëq v
>
ëëw x
$num
ëëy z
)
ëëz {
{
íí 
tempSpriteAsset
ìì 
=
ìì  !/
!SearchForSpriteByHashCodeInternal
ìì" C
(
ììC D
spriteAsset
ììD O
.
ììO P"
fallbackSpriteAssets
ììP d
,
ììd e
hashCode
ììf n
,
ììn o
true
ììp t
,
ììt u
out
ììv y
spriteIndexììz Ö
)ììÖ Ü
;ììÜ á
if
ïï 
(
ïï 
spriteIndex
ïï 
!=
ïï  "
-
ïï# $
$num
ïï$ %
)
ïï% &
return
ññ 
tempSpriteAsset
ññ *
;
ññ* +
}
óó 
if
öö 
(
öö 
includeFallbacks
öö  
&&
öö! #
TMP_Settings
öö$ 0
.
öö0 1 
defaultSpriteAsset
öö1 C
!=
ööD F
null
ööG K
)
ööK L
{
õõ 
tempSpriteAsset
úú 
=
úú  !/
!SearchForSpriteByHashCodeInternal
úú" C
(
úúC D
TMP_Settings
úúD P
.
úúP Q 
defaultSpriteAsset
úúQ c
,
úúc d
hashCode
úúe m
,
úúm n
true
úúo s
,
úús t
out
úúu x
spriteIndexúúy Ñ
)úúÑ Ö
;úúÖ Ü
if
ûû 
(
ûû 
spriteIndex
ûû 
!=
ûû  "
-
ûû# $
$num
ûû$ %
)
ûû% &
return
üü 
tempSpriteAsset
üü *
;
üü* +
}
†† $
k_searchedSpriteAssets
££ "
.
££" #
Clear
££# (
(
££( )
)
££) *
;
££* +
uint
•• +
missingSpriteCharacterUnicode
•• .
=
••/ 0
TMP_Settings
••1 =
.
••= >+
missingCharacterSpriteUnicode
••> [
;
••[ \
spriteIndex
®® 
=
®® 
spriteAsset
®® %
.
®®% &'
GetSpriteIndexFromUnicode
®®& ?
(
®®? @+
missingSpriteCharacterUnicode
®®@ ]
)
®®] ^
;
®®^ _
if
©© 
(
©© 
spriteIndex
©© 
!=
©© 
-
©©  
$num
©©  !
)
©©! "
return
™™ 
spriteAsset
™™ "
;
™™" #$
k_searchedSpriteAssets
≠≠ "
.
≠≠" #
Add
≠≠# &
(
≠≠& '
id
≠≠' )
)
≠≠) *
;
≠≠* +
if
∞∞ 
(
∞∞ 
includeFallbacks
∞∞  
&&
∞∞! #
spriteAsset
∞∞$ /
.
∞∞/ 0"
fallbackSpriteAssets
∞∞0 D
!=
∞∞E G
null
∞∞H L
&&
∞∞M O
spriteAsset
∞∞P [
.
∞∞[ \"
fallbackSpriteAssets
∞∞\ p
.
∞∞p q
Count
∞∞q v
>
∞∞w x
$num
∞∞y z
)
∞∞z {
{
±± 
tempSpriteAsset
≤≤ 
=
≤≤  !.
 SearchForSpriteByUnicodeInternal
≤≤" B
(
≤≤B C
spriteAsset
≤≤C N
.
≤≤N O"
fallbackSpriteAssets
≤≤O c
,
≤≤c d,
missingSpriteCharacterUnicode≤≤e Ç
,≤≤Ç É
true≤≤Ñ à
,≤≤à â
out≤≤ä ç
spriteIndex≤≤é ô
)≤≤ô ö
;≤≤ö õ
if
¥¥ 
(
¥¥ 
spriteIndex
¥¥ 
!=
¥¥  "
-
¥¥# $
$num
¥¥$ %
)
¥¥% &
return
µµ 
tempSpriteAsset
µµ *
;
µµ* +
}
∂∂ 
if
ππ 
(
ππ 
includeFallbacks
ππ  
&&
ππ! #
TMP_Settings
ππ$ 0
.
ππ0 1 
defaultSpriteAsset
ππ1 C
!=
ππD F
null
ππG K
)
ππK L
{
∫∫ 
tempSpriteAsset
ªª 
=
ªª  !.
 SearchForSpriteByUnicodeInternal
ªª" B
(
ªªB C
TMP_Settings
ªªC O
.
ªªO P 
defaultSpriteAsset
ªªP b
,
ªªb c,
missingSpriteCharacterUnicodeªªd Å
,ªªÅ Ç
trueªªÉ á
,ªªá à
outªªâ å
spriteIndexªªç ò
)ªªò ô
;ªªô ö
if
ºº 
(
ºº 
spriteIndex
ºº 
!=
ºº  "
-
ºº# $
$num
ºº$ %
)
ºº% &
return
ΩΩ 
tempSpriteAsset
ΩΩ *
;
ΩΩ* +
}
ææ 
spriteIndex
¿¿ 
=
¿¿ 
-
¿¿ 
$num
¿¿ 
;
¿¿ 
return
¡¡ 
null
¡¡ 
;
¡¡ 
}
¬¬ 	
private
ÕÕ 
static
ÕÕ 
TMP_SpriteAsset
ÕÕ &/
!SearchForSpriteByHashCodeInternal
ÕÕ' H
(
ÕÕH I
List
ÕÕI M
<
ÕÕM N
TMP_SpriteAsset
ÕÕN ]
>
ÕÕ] ^
spriteAssets
ÕÕ_ k
,
ÕÕk l
int
ÕÕm p
hashCode
ÕÕq y
,
ÕÕy z
bool
ÕÕ{ 
searchFallbacksÕÕÄ è
,ÕÕè ê
outÕÕë î
intÕÕï ò
spriteIndexÕÕô §
)ÕÕ§ •
{
ŒŒ 	
for
–– 
(
–– 
int
–– 
i
–– 
=
–– 
$num
–– 
;
–– 
i
–– 
<
–– 
spriteAssets
––  ,
.
––, -
Count
––- 2
;
––2 3
i
––4 5
++
––5 7
)
––7 8
{
—— 
TMP_SpriteAsset
““ 
temp
““  $
=
““% &
spriteAssets
““' 3
[
““3 4
i
““4 5
]
““5 6
;
““6 7
if
”” 
(
”” 
temp
”” 
==
”” 
null
””  
)
””  !
continue
””" *
;
””* +
int
’’ 
id
’’ 
=
’’ 
temp
’’ 
.
’’ 

instanceID
’’ (
;
’’( )
if
ÿÿ 
(
ÿÿ $
k_searchedSpriteAssets
ÿÿ *
.
ÿÿ* +
Add
ÿÿ+ .
(
ÿÿ. /
id
ÿÿ/ 1
)
ÿÿ1 2
==
ÿÿ3 5
false
ÿÿ6 ;
)
ÿÿ; <
continue
ŸŸ 
;
ŸŸ 
temp
€€ 
=
€€ /
!SearchForSpriteByHashCodeInternal
€€ 8
(
€€8 9
temp
€€9 =
,
€€= >
hashCode
€€? G
,
€€G H
searchFallbacks
€€I X
,
€€X Y
out
€€Z ]
spriteIndex
€€^ i
)
€€i j
;
€€j k
if
›› 
(
›› 
temp
›› 
!=
›› 
null
››  
)
››  !
return
ﬁﬁ 
temp
ﬁﬁ 
;
ﬁﬁ  
}
ﬂﬂ 
spriteIndex
·· 
=
·· 
-
·· 
$num
·· 
;
·· 
return
‚‚ 
null
‚‚ 
;
‚‚ 
}
„„ 	
private
ÓÓ 
static
ÓÓ 
TMP_SpriteAsset
ÓÓ &/
!SearchForSpriteByHashCodeInternal
ÓÓ' H
(
ÓÓH I
TMP_SpriteAsset
ÓÓI X
spriteAsset
ÓÓY d
,
ÓÓd e
int
ÓÓf i
hashCode
ÓÓj r
,
ÓÓr s
bool
ÓÓt x
searchFallbacksÓÓy à
,ÓÓà â
outÓÓä ç
intÓÓé ë
spriteIndexÓÓí ù
)ÓÓù û
{
ÔÔ 	
spriteIndex
ÒÒ 
=
ÒÒ 
spriteAsset
ÒÒ %
.
ÒÒ% &(
GetSpriteIndexFromHashcode
ÒÒ& @
(
ÒÒ@ A
hashCode
ÒÒA I
)
ÒÒI J
;
ÒÒJ K
if
ÚÚ 
(
ÚÚ 
spriteIndex
ÚÚ 
!=
ÚÚ 
-
ÚÚ  
$num
ÚÚ  !
)
ÚÚ! "
return
ÛÛ 
spriteAsset
ÛÛ "
;
ÛÛ" #
if
ıı 
(
ıı 
searchFallbacks
ıı 
&&
ıı  "
spriteAsset
ıı# .
.
ıı. /"
fallbackSpriteAssets
ıı/ C
!=
ııD F
null
ııG K
&&
ııL N
spriteAsset
ııO Z
.
ııZ ["
fallbackSpriteAssets
ıı[ o
.
ııo p
Count
ııp u
>
ııv w
$num
ııx y
)
ııy z
return
ˆˆ /
!SearchForSpriteByHashCodeInternal
ˆˆ 8
(
ˆˆ8 9
spriteAsset
ˆˆ9 D
.
ˆˆD E"
fallbackSpriteAssets
ˆˆE Y
,
ˆˆY Z
hashCode
ˆˆ[ c
,
ˆˆc d
true
ˆˆe i
,
ˆˆi j
out
ˆˆk n
spriteIndex
ˆˆo z
)
ˆˆz {
;
ˆˆ{ |
spriteIndex
¯¯ 
=
¯¯ 
-
¯¯ 
$num
¯¯ 
;
¯¯ 
return
˘˘ 
null
˘˘ 
;
˘˘ 
}
˙˙ 	
public
ÄÄ 
void
ÄÄ 
SortGlyphTable
ÄÄ "
(
ÄÄ" #
)
ÄÄ# $
{
ÅÅ 	
if
ÇÇ 
(
ÇÇ  
m_SpriteGlyphTable
ÇÇ "
==
ÇÇ# %
null
ÇÇ& *
||
ÇÇ+ - 
m_SpriteGlyphTable
ÇÇ. @
.
ÇÇ@ A
Count
ÇÇA F
==
ÇÇG I
$num
ÇÇJ K
)
ÇÇK L
return
ÇÇM S
;
ÇÇS T 
m_SpriteGlyphTable
ÑÑ 
=
ÑÑ   
m_SpriteGlyphTable
ÑÑ! 3
.
ÑÑ3 4
OrderBy
ÑÑ4 ;
(
ÑÑ; <
item
ÑÑ< @
=>
ÑÑA C
item
ÑÑD H
.
ÑÑH I
index
ÑÑI N
)
ÑÑN O
.
ÑÑO P
ToList
ÑÑP V
(
ÑÑV W
)
ÑÑW X
;
ÑÑX Y
}
ÖÖ 	
internal
ää 
void
ää  
SortCharacterTable
ää (
(
ää( )
)
ää) *
{
ãã 	
if
åå 
(
åå $
m_SpriteCharacterTable
åå &
!=
åå' )
null
åå* .
&&
åå/ 1$
m_SpriteCharacterTable
åå2 H
.
ååH I
Count
ååI N
>
ååO P
$num
ååQ R
)
ååR S$
m_SpriteCharacterTable
çç &
=
çç' ($
m_SpriteCharacterTable
çç) ?
.
çç? @
OrderBy
çç@ G
(
ççG H
c
ççH I
=>
ççJ L
c
ççM N
.
ççN O
unicode
ççO V
)
ççV W
.
ççW X
ToList
ççX ^
(
çç^ _
)
çç_ `
;
çç` a
}
éé 	
internal
ìì 
void
ìì )
SortGlyphAndCharacterTables
ìì 1
(
ìì1 2
)
ìì2 3
{
îî 	
SortGlyphTable
ïï 
(
ïï 
)
ïï 
;
ïï  
SortCharacterTable
ññ 
(
ññ 
)
ññ  
;
ññ  !
}
óó 	
private
ùù 
void
ùù  
UpgradeSpriteAsset
ùù '
(
ùù' (
)
ùù( )
{
ûû 	
	m_Version
üü 
=
üü 
$str
üü 
;
üü  
Debug
°° 
.
°° 
Log
°° 
(
°° 
$str
°° 0
+
°°1 2
this
°°3 7
.
°°7 8
name
°°8 <
+
°°= >
$str
°°? N
+
°°O P
	m_Version
°°Q Z
+
°°[ \
$str
°°] `
,
°°` a
this
°°b f
)
°°f g
;
°°g h$
m_SpriteCharacterTable
§§ "
.
§§" #
Clear
§§# (
(
§§( )
)
§§) *
;
§§* + 
m_SpriteGlyphTable
•• 
.
•• 
Clear
•• $
(
••$ %
)
••% &
;
••& '
for
ßß 
(
ßß 
int
ßß 
i
ßß 
=
ßß 
$num
ßß 
;
ßß 
i
ßß 
<
ßß 
spriteInfoList
ßß  .
.
ßß. /
Count
ßß/ 4
;
ßß4 5
i
ßß6 7
++
ßß7 9
)
ßß9 :
{
®® 

TMP_Sprite
©© 
	oldSprite
©© $
=
©©% &
spriteInfoList
©©' 5
[
©©5 6
i
©©6 7
]
©©7 8
;
©©8 9
TMP_SpriteGlyph
´´ 
spriteGlyph
´´  +
=
´´, -
new
´´. 1
TMP_SpriteGlyph
´´2 A
(
´´A B
)
´´B C
;
´´C D
spriteGlyph
¨¨ 
.
¨¨ 
index
¨¨ !
=
¨¨" #
(
¨¨$ %
uint
¨¨% )
)
¨¨) *
i
¨¨* +
;
¨¨+ ,
spriteGlyph
≠≠ 
.
≠≠ 
sprite
≠≠ "
=
≠≠# $
	oldSprite
≠≠% .
.
≠≠. /
sprite
≠≠/ 5
;
≠≠5 6
spriteGlyph
ÆÆ 
.
ÆÆ 
metrics
ÆÆ #
=
ÆÆ$ %
new
ÆÆ& )
GlyphMetrics
ÆÆ* 6
(
ÆÆ6 7
	oldSprite
ÆÆ7 @
.
ÆÆ@ A
width
ÆÆA F
,
ÆÆF G
	oldSprite
ÆÆH Q
.
ÆÆQ R
height
ÆÆR X
,
ÆÆX Y
	oldSprite
ÆÆZ c
.
ÆÆc d
xOffset
ÆÆd k
,
ÆÆk l
	oldSprite
ÆÆm v
.
ÆÆv w
yOffset
ÆÆw ~
,
ÆÆ~ 
	oldSpriteÆÆÄ â
.ÆÆâ ä
xAdvanceÆÆä í
)ÆÆí ì
;ÆÆì î
spriteGlyph
ØØ 
.
ØØ 
	glyphRect
ØØ %
=
ØØ& '
new
ØØ( +
	GlyphRect
ØØ, 5
(
ØØ5 6
(
ØØ6 7
int
ØØ7 :
)
ØØ: ;
	oldSprite
ØØ; D
.
ØØD E
x
ØØE F
,
ØØF G
(
ØØH I
int
ØØI L
)
ØØL M
	oldSprite
ØØM V
.
ØØV W
y
ØØW X
,
ØØX Y
(
ØØZ [
int
ØØ[ ^
)
ØØ^ _
	oldSprite
ØØ_ h
.
ØØh i
width
ØØi n
,
ØØn o
(
ØØp q
int
ØØq t
)
ØØt u
	oldSprite
ØØu ~
.
ØØ~ 
heightØØ Ö
)ØØÖ Ü
;ØØÜ á
spriteGlyph
±± 
.
±± 
scale
±± !
=
±±" #
$num
±±$ (
;
±±( )
spriteGlyph
≤≤ 
.
≤≤ 

atlasIndex
≤≤ &
=
≤≤' (
$num
≤≤) *
;
≤≤* + 
m_SpriteGlyphTable
¥¥ "
.
¥¥" #
Add
¥¥# &
(
¥¥& '
spriteGlyph
¥¥' 2
)
¥¥2 3
;
¥¥3 4!
TMP_SpriteCharacter
∂∂ #
spriteCharacter
∂∂$ 3
=
∂∂4 5
new
∂∂6 9!
TMP_SpriteCharacter
∂∂: M
(
∂∂M N
)
∂∂N O
;
∂∂O P
spriteCharacter
∑∑ 
.
∑∑  
glyph
∑∑  %
=
∑∑& '
spriteGlyph
∑∑( 3
;
∑∑3 4
spriteCharacter
∏∏ 
.
∏∏  
unicode
∏∏  '
=
∏∏( )
	oldSprite
∏∏* 3
.
∏∏3 4
unicode
∏∏4 ;
==
∏∏< >
$num
∏∏? B
?
∏∏C D
$num
∏∏E K
:
∏∏L M
(
∏∏N O
uint
∏∏O S
)
∏∏S T
	oldSprite
∏∏T ]
.
∏∏] ^
unicode
∏∏^ e
;
∏∏e f
spriteCharacter
ππ 
.
ππ  
name
ππ  $
=
ππ% &
	oldSprite
ππ' 0
.
ππ0 1
name
ππ1 5
;
ππ5 6
spriteCharacter
∫∫ 
.
∫∫  
scale
∫∫  %
=
∫∫& '
	oldSprite
∫∫( 1
.
∫∫1 2
scale
∫∫2 7
;
∫∫7 8$
m_SpriteCharacterTable
ºº &
.
ºº& '
Add
ºº' *
(
ºº* +
spriteCharacter
ºº+ :
)
ºº: ;
;
ºº; <
}
ΩΩ  
UpdateLookupTables
¬¬ 
(
¬¬ 
)
¬¬  
;
¬¬  !
UnityEditor
≈≈ 
.
≈≈ 
EditorUtility
≈≈ %
.
≈≈% &
SetDirty
≈≈& .
(
≈≈. /
this
≈≈/ 3
)
≈≈3 4
;
≈≈4 5
UnityEditor
∆∆ 
.
∆∆ 
AssetDatabase
∆∆ %
.
∆∆% &

SaveAssets
∆∆& 0
(
∆∆0 1
)
∆∆1 2
;
∆∆2 3
}
»» 	
}
   
}ÀÀ ç
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_TextElement_Legacy.cs
	namespace 	
TMPro
 
{ 
[ 
Serializable 
] 
public 

class "
TMP_TextElement_Legacy '
{ 
public 
int 
id 
; 
public 
float 
x 
; 
public 
float 
y 
; 
public 
float 
width 
; 
public 
float 
height 
; 
public 
float 
xOffset 
; 
public 
float 
yOffset 
; 
public 
float 
xAdvance 
; 
public 
float 
scale 
; 
} 
} ¨ 
ùD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\MaterialReferenceManager.cs
	namespace 	
TMPro
 
{ 
public		 

class		 $
MaterialReferenceManager		 )
{

 
private 
static $
MaterialReferenceManager /

s_Instance0 :
;: ;
private 

Dictionary 
< 
int 
, 
Material  (
>( ))
m_FontMaterialReferenceLookup* G
=H I
newJ M

DictionaryN X
<X Y
intY \
,\ ]
Material^ f
>f g
(g h
)h i
;i j
private 

Dictionary 
< 
int 
, 
TMP_FontAsset  -
>- .&
m_FontAssetReferenceLookup/ I
=J K
newL O

DictionaryP Z
<Z [
int[ ^
,^ _
TMP_FontAsset` m
>m n
(n o
)o p
;p q
private 

Dictionary 
< 
int 
, 
TMP_SpriteAsset  /
>/ 0(
m_SpriteAssetReferenceLookup1 M
=N O
newP S

DictionaryT ^
<^ _
int_ b
,b c
TMP_SpriteAssetd s
>s t
(t u
)u v
;v w
private 

Dictionary 
< 
int 
, 
TMP_ColorGradient  1
>1 2*
m_ColorGradientReferenceLookup3 Q
=R S
newT W

DictionaryX b
<b c
intc f
,f g
TMP_ColorGradienth y
>y z
(z {
){ |
;| }
public 
static $
MaterialReferenceManager .
instance/ 7
{ 	
get 
{ 
if 
( $
MaterialReferenceManager ,
., -

s_Instance- 7
==8 :
null; ?
)? @$
MaterialReferenceManager ,
., -

s_Instance- 7
=8 9
new: =$
MaterialReferenceManager> V
(V W
)W X
;X Y
return $
MaterialReferenceManager /
./ 0

s_Instance0 :
;: ;
} 
} 	
public'' 
static'' 
void'' 
AddFontAsset'' '
(''' (
TMP_FontAsset''( 5
	fontAsset''6 ?
)''? @
{(( 	$
MaterialReferenceManager)) $
.))$ %
instance))% -
.))- . 
AddFontAssetInternal)). B
())B C
	fontAsset))C L
)))L M
;))M N
}** 	
private00 
void00  
AddFontAssetInternal00 )
(00) *
TMP_FontAsset00* 7
	fontAsset008 A
)00A B
{11 	
if22 
(22 &
m_FontAssetReferenceLookup22 *
.22* +
ContainsKey22+ 6
(226 7
	fontAsset227 @
.22@ A
hashCode22A I
)22I J
)22J K
return22L R
;22R S&
m_FontAssetReferenceLookup55 &
.55& '
Add55' *
(55* +
	fontAsset55+ 4
.554 5
hashCode555 =
,55= >
	fontAsset55? H
)55H I
;55I J)
m_FontMaterialReferenceLookup88 )
.88) *
Add88* -
(88- .
	fontAsset88. 7
.887 8
materialHashCode888 H
,88H I
	fontAsset88J S
.88S T
material88T \
)88\ ]
;88] ^
}99 	
publicBB 
staticBB 
voidBB 
AddSpriteAssetBB )
(BB) *
TMP_SpriteAssetBB* 9
spriteAssetBB: E
)BBE F
{CC 	$
MaterialReferenceManagerDD $
.DD$ %
instanceDD% -
.DD- ."
AddSpriteAssetInternalDD. D
(DDD E
spriteAssetDDE P
)DDP Q
;DDQ R
}EE 	
privateLL 
voidLL "
AddSpriteAssetInternalLL +
(LL+ ,
TMP_SpriteAssetLL, ;
spriteAssetLL< G
)LLG H
{MM 	
ifNN 
(NN (
m_SpriteAssetReferenceLookupNN ,
.NN, -
ContainsKeyNN- 8
(NN8 9
spriteAssetNN9 D
.NND E
hashCodeNNE M
)NNM N
)NNN O
returnNNP V
;NNV W(
m_SpriteAssetReferenceLookupQQ (
.QQ( )
AddQQ) ,
(QQ, -
spriteAssetQQ- 8
.QQ8 9
hashCodeQQ9 A
,QQA B
spriteAssetQQC N
)QQN O
;QQO P)
m_FontMaterialReferenceLookupTT )
.TT) *
AddTT* -
(TT- .
spriteAssetTT. 9
.TT9 :
hashCodeTT: B
,TTB C
spriteAssetTTD O
.TTO P
materialTTP X
)TTX Y
;TTY Z
}UU 	
public\\ 
static\\ 
void\\ 
AddSpriteAsset\\ )
(\\) *
int\\* -
hashCode\\. 6
,\\6 7
TMP_SpriteAsset\\8 G
spriteAsset\\H S
)\\S T
{]] 	$
MaterialReferenceManager^^ $
.^^$ %
instance^^% -
.^^- ."
AddSpriteAssetInternal^^. D
(^^D E
hashCode^^E M
,^^M N
spriteAsset^^O Z
)^^Z [
;^^[ \
}__ 	
privateff 
voidff "
AddSpriteAssetInternalff +
(ff+ ,
intff, /
hashCodeff0 8
,ff8 9
TMP_SpriteAssetff: I
spriteAssetffJ U
)ffU V
{gg 	
ifhh 
(hh (
m_SpriteAssetReferenceLookuphh ,
.hh, -
ContainsKeyhh- 8
(hh8 9
hashCodehh9 A
)hhA B
)hhB C
returnhhD J
;hhJ K(
m_SpriteAssetReferenceLookupkk (
.kk( )
Addkk) ,
(kk, -
hashCodekk- 5
,kk5 6
spriteAssetkk7 B
)kkB C
;kkC D)
m_FontMaterialReferenceLookupnn )
.nn) *
Addnn* -
(nn- .
hashCodenn. 6
,nn6 7
spriteAssetnn8 C
.nnC D
materialnnD L
)nnL M
;nnM N
ifqq 
(qq 
spriteAssetqq 
.qq 
hashCodeqq $
==qq% '
$numqq( )
)qq) *
spriteAssetqq+ 6
.qq6 7
hashCodeqq7 ?
=qq@ A
hashCodeqqB J
;qqJ K
}rr 	
publiczz 
staticzz 
voidzz 
AddFontMaterialzz *
(zz* +
intzz+ .
hashCodezz/ 7
,zz7 8
Materialzz9 A
materialzzB J
)zzJ K
{{{ 	$
MaterialReferenceManager|| $
.||$ %
instance||% -
.||- .#
AddFontMaterialInternal||. E
(||E F
hashCode||F N
,||N O
material||P X
)||X Y
;||Y Z
}}} 	
private
ÑÑ 
void
ÑÑ %
AddFontMaterialInternal
ÑÑ ,
(
ÑÑ, -
int
ÑÑ- 0
hashCode
ÑÑ1 9
,
ÑÑ9 :
Material
ÑÑ; C
material
ÑÑD L
)
ÑÑL M
{
ÖÖ 	+
m_FontMaterialReferenceLookup
àà )
.
àà) *
Add
àà* -
(
àà- .
hashCode
àà. 6
,
àà6 7
material
àà8 @
)
àà@ A
;
ààA B
}
ââ 	
public
ëë 
static
ëë 
void
ëë $
AddColorGradientPreset
ëë 1
(
ëë1 2
int
ëë2 5
hashCode
ëë6 >
,
ëë> ?
TMP_ColorGradient
ëë@ Q
spriteAsset
ëëR ]
)
ëë] ^
{
íí 	&
MaterialReferenceManager
ìì $
.
ìì$ %
instance
ìì% -
.
ìì- .-
AddColorGradientPreset_Internal
ìì. M
(
ììM N
hashCode
ììN V
,
ììV W
spriteAsset
ììX c
)
ììc d
;
ììd e
}
îî 	
private
õõ 
void
õõ -
AddColorGradientPreset_Internal
õõ 4
(
õõ4 5
int
õõ5 8
hashCode
õõ9 A
,
õõA B
TMP_ColorGradient
õõC T
spriteAsset
õõU `
)
õõ` a
{
úú 	
if
ùù 
(
ùù ,
m_ColorGradientReferenceLookup
ùù .
.
ùù. /
ContainsKey
ùù/ :
(
ùù: ;
hashCode
ùù; C
)
ùùC D
)
ùùD E
return
ùùF L
;
ùùL M,
m_ColorGradientReferenceLookup
†† *
.
††* +
Add
††+ .
(
††. /
hashCode
††/ 7
,
††7 8
spriteAsset
††9 D
)
††D E
;
††E F
}
°° 	
public
˜˜ 
bool
˜˜ 
Contains
˜˜ 
(
˜˜ 
TMP_FontAsset
˜˜ *
font
˜˜+ /
)
˜˜/ 0
{
¯¯ 	
if
˘˘ 
(
˘˘ (
m_FontAssetReferenceLookup
˘˘ *
.
˘˘* +
ContainsKey
˘˘+ 6
(
˘˘6 7
font
˘˘7 ;
.
˘˘; <
hashCode
˘˘< D
)
˘˘D E
)
˘˘E F
return
˙˙ 
true
˙˙ 
;
˙˙ 
return
¸¸ 
false
¸¸ 
;
¸¸ 
}
˝˝ 	
public
ÖÖ 
bool
ÖÖ 
Contains
ÖÖ 
(
ÖÖ 
TMP_SpriteAsset
ÖÖ ,
sprite
ÖÖ- 3
)
ÖÖ3 4
{
ÜÜ 	
if
áá 
(
áá (
m_FontAssetReferenceLookup
áá *
.
áá* +
ContainsKey
áá+ 6
(
áá6 7
sprite
áá7 =
.
áá= >
hashCode
áá> F
)
ááF G
)
ááG H
return
àà 
true
àà 
;
àà 
return
ää 
false
ää 
;
ää 
}
ãã 	
public
ïï 
static
ïï 
bool
ïï 
TryGetFontAsset
ïï *
(
ïï* +
int
ïï+ .
hashCode
ïï/ 7
,
ïï7 8
out
ïï9 <
TMP_FontAsset
ïï= J
	fontAsset
ïïK T
)
ïïT U
{
ññ 	
return
óó &
MaterialReferenceManager
óó +
.
óó+ ,
instance
óó, 4
.
óó4 5%
TryGetFontAssetInternal
óó5 L
(
óóL M
hashCode
óóM U
,
óóU V
out
óóW Z
	fontAsset
óó[ d
)
óód e
;
óóe f
}
òò 	
private
†† 
bool
†† %
TryGetFontAssetInternal
†† ,
(
††, -
int
††- 0
hashCode
††1 9
,
††9 :
out
††; >
TMP_FontAsset
††? L
	fontAsset
††M V
)
††V W
{
°° 	
	fontAsset
¢¢ 
=
¢¢ 
null
¢¢ 
;
¢¢ 
if
§§ 
(
§§ (
m_FontAssetReferenceLookup
§§ *
.
§§* +
TryGetValue
§§+ 6
(
§§6 7
hashCode
§§7 ?
,
§§? @
out
§§A D
	fontAsset
§§E N
)
§§N O
)
§§O P
{
•• 
return
¶¶ 
true
¶¶ 
;
¶¶ 
}
ßß 
return
©© 
false
©© 
;
©© 
}
™™ 	
public
¥¥ 
static
¥¥ 
bool
¥¥ 
TryGetSpriteAsset
¥¥ ,
(
¥¥, -
int
¥¥- 0
hashCode
¥¥1 9
,
¥¥9 :
out
¥¥; >
TMP_SpriteAsset
¥¥? N
spriteAsset
¥¥O Z
)
¥¥Z [
{
µµ 	
return
∂∂ &
MaterialReferenceManager
∂∂ +
.
∂∂+ ,
instance
∂∂, 4
.
∂∂4 5'
TryGetSpriteAssetInternal
∂∂5 N
(
∂∂N O
hashCode
∂∂O W
,
∂∂W X
out
∂∂Y \
spriteAsset
∂∂] h
)
∂∂h i
;
∂∂i j
}
∑∑ 	
private
øø 
bool
øø '
TryGetSpriteAssetInternal
øø .
(
øø. /
int
øø/ 2
hashCode
øø3 ;
,
øø; <
out
øø= @
TMP_SpriteAsset
øøA P
spriteAsset
øøQ \
)
øø\ ]
{
¿¿ 	
spriteAsset
¡¡ 
=
¡¡ 
null
¡¡ 
;
¡¡ 
if
√√ 
(
√√ *
m_SpriteAssetReferenceLookup
√√ ,
.
√√, -
TryGetValue
√√- 8
(
√√8 9
hashCode
√√9 A
,
√√A B
out
√√C F
spriteAsset
√√G R
)
√√R S
)
√√S T
{
ƒƒ 
return
≈≈ 
true
≈≈ 
;
≈≈ 
}
∆∆ 
return
»» 
false
»» 
;
»» 
}
…… 	
public
““ 
static
““ 
bool
““ '
TryGetColorGradientPreset
““ 4
(
““4 5
int
““5 8
hashCode
““9 A
,
““A B
out
““C F
TMP_ColorGradient
““G X
gradientPreset
““Y g
)
““g h
{
”” 	
return
‘‘ &
MaterialReferenceManager
‘‘ +
.
‘‘+ ,
instance
‘‘, 4
.
‘‘4 5/
!TryGetColorGradientPresetInternal
‘‘5 V
(
‘‘V W
hashCode
‘‘W _
,
‘‘_ `
out
‘‘a d
gradientPreset
‘‘e s
)
‘‘s t
;
‘‘t u
}
’’ 	
private
›› 
bool
›› /
!TryGetColorGradientPresetInternal
›› 6
(
››6 7
int
››7 :
hashCode
››; C
,
››C D
out
››E H
TMP_ColorGradient
››I Z
gradientPreset
››[ i
)
››i j
{
ﬁﬁ 	
gradientPreset
ﬂﬂ 
=
ﬂﬂ 
null
ﬂﬂ !
;
ﬂﬂ! "
if
·· 
(
·· ,
m_ColorGradientReferenceLookup
·· .
.
··. /
TryGetValue
··/ :
(
··: ;
hashCode
··; C
,
··C D
out
··E H
gradientPreset
··I W
)
··W X
)
··X Y
{
‚‚ 
return
„„ 
true
„„ 
;
„„ 
}
‰‰ 
return
ÊÊ 
false
ÊÊ 
;
ÊÊ 
}
ÁÁ 	
public
 
static
 
bool
 
TryGetMaterial
 )
(
) *
int
* -
hashCode
. 6
,
6 7
out
8 ;
Material
< D
material
E M
)
M N
{
ÒÒ 	
return
ÚÚ &
MaterialReferenceManager
ÚÚ +
.
ÚÚ+ ,
instance
ÚÚ, 4
.
ÚÚ4 5$
TryGetMaterialInternal
ÚÚ5 K
(
ÚÚK L
hashCode
ÚÚL T
,
ÚÚT U
out
ÚÚV Y
material
ÚÚZ b
)
ÚÚb c
;
ÚÚc d
}
ÛÛ 	
private
˚˚ 
bool
˚˚ $
TryGetMaterialInternal
˚˚ +
(
˚˚+ ,
int
˚˚, /
hashCode
˚˚0 8
,
˚˚8 9
out
˚˚: =
Material
˚˚> F
material
˚˚G O
)
˚˚O P
{
¸¸ 	
material
˝˝ 
=
˝˝ 
null
˝˝ 
;
˝˝ 
if
ˇˇ 
(
ˇˇ +
m_FontMaterialReferenceLookup
ˇˇ -
.
ˇˇ- .
TryGetValue
ˇˇ. 9
(
ˇˇ9 :
hashCode
ˇˇ: B
,
ˇˇB C
out
ˇˇD G
material
ˇˇH P
)
ˇˇP Q
)
ˇˇQ R
{
ÄÄ 
return
ÅÅ 
true
ÅÅ 
;
ÅÅ 
}
ÇÇ 
return
ÑÑ 
false
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
}
ÅÅ 
public
ÑÑ 

struct
ÑÑ #
TMP_MaterialReference
ÑÑ '
{
ÖÖ 
public
ÜÜ 
Material
ÜÜ 
material
ÜÜ  
;
ÜÜ  !
public
áá 
int
áá 
referenceCount
áá !
;
áá! "
}
àà 
public
ãã 

struct
ãã 
MaterialReference
ãã #
{
åå 
public
éé 
int
éé 
index
éé 
;
éé 
public
èè 
TMP_FontAsset
èè 
	fontAsset
èè &
;
èè& '
public
êê 
TMP_SpriteAsset
êê 
spriteAsset
êê *
;
êê* +
public
ëë 
Material
ëë 
material
ëë  
;
ëë  !
public
íí 
bool
íí 
isDefaultMaterial
íí %
;
íí% &
public
ìì 
bool
ìì  
isFallbackMaterial
ìì &
;
ìì& '
public
îî 
Material
îî 
fallbackMaterial
îî (
;
îî( )
public
ïï 
float
ïï 
padding
ïï 
;
ïï 
public
ññ 
int
ññ 
referenceCount
ññ !
;
ññ! "
public
°° 
MaterialReference
°°  
(
°°  !
int
°°! $
index
°°% *
,
°°* +
TMP_FontAsset
°°, 9
	fontAsset
°°: C
,
°°C D
TMP_SpriteAsset
°°E T
spriteAsset
°°U `
,
°°` a
Material
°°b j
material
°°k s
,
°°s t
float
°°u z
padding°°{ Ç
)°°Ç É
{
¢¢ 	
this
££ 
.
££ 
index
££ 
=
££ 
index
££ 
;
££ 
this
§§ 
.
§§ 
	fontAsset
§§ 
=
§§ 
	fontAsset
§§ &
;
§§& '
this
•• 
.
•• 
spriteAsset
•• 
=
•• 
spriteAsset
•• *
;
••* +
this
¶¶ 
.
¶¶ 
material
¶¶ 
=
¶¶ 
material
¶¶ $
;
¶¶$ %
this
ßß 
.
ßß 
isDefaultMaterial
ßß "
=
ßß# $
material
ßß% -
.
ßß- .
GetInstanceID
ßß. ;
(
ßß; <
)
ßß< =
==
ßß> @
	fontAsset
ßßA J
.
ßßJ K
material
ßßK S
.
ßßS T
GetInstanceID
ßßT a
(
ßßa b
)
ßßb c
?
ßßd e
true
ßßf j
:
ßßk l
false
ßßm r
;
ßßr s
this
®® 
.
®®  
isFallbackMaterial
®® #
=
®®$ %
false
®®& +
;
®®+ ,
this
©© 
.
©© 
fallbackMaterial
©© !
=
©©" #
null
©©$ (
;
©©( )
this
™™ 
.
™™ 
padding
™™ 
=
™™ 
padding
™™ "
;
™™" #
this
´´ 
.
´´ 
referenceCount
´´ 
=
´´  !
$num
´´" #
;
´´# $
}
¨¨ 	
public
µµ 
static
µµ 
bool
µµ 
Contains
µµ #
(
µµ# $
MaterialReference
µµ$ 5
[
µµ5 6
]
µµ6 7 
materialReferences
µµ8 J
,
µµJ K
TMP_FontAsset
µµL Y
	fontAsset
µµZ c
)
µµc d
{
∂∂ 	
int
∑∑ 
id
∑∑ 
=
∑∑ 
	fontAsset
∑∑ 
.
∑∑ 
GetInstanceID
∑∑ ,
(
∑∑, -
)
∑∑- .
;
∑∑. /
for
ππ 
(
ππ 
int
ππ 
i
ππ 
=
ππ 
$num
ππ 
;
ππ 
i
ππ 
<
ππ  
materialReferences
ππ  2
.
ππ2 3
Length
ππ3 9
&&
ππ: < 
materialReferences
ππ= O
[
ππO P
i
ππP Q
]
ππQ R
.
ππR S
	fontAsset
ππS \
!=
ππ] _
null
ππ` d
;
ππd e
i
ππf g
++
ππg i
)
ππi j
{
∫∫ 
if
ªª 
(
ªª  
materialReferences
ªª &
[
ªª& '
i
ªª' (
]
ªª( )
.
ªª) *
	fontAsset
ªª* 3
.
ªª3 4
GetInstanceID
ªª4 A
(
ªªA B
)
ªªB C
==
ªªD F
id
ªªG I
)
ªªI J
return
ºº 
true
ºº 
;
ºº  
}
ΩΩ 
return
øø 
false
øø 
;
øø 
}
¿¿ 	
public
ÀÀ 
static
ÀÀ 
int
ÀÀ "
AddMaterialReference
ÀÀ .
(
ÀÀ. /
Material
ÀÀ/ 7
material
ÀÀ8 @
,
ÀÀ@ A
TMP_FontAsset
ÀÀB O
	fontAsset
ÀÀP Y
,
ÀÀY Z
MaterialReference
ÀÀ[ l
[
ÀÀl m
]
ÀÀm n!
materialReferencesÀÀo Å
,ÀÀÅ Ç

DictionaryÀÀÉ ç
<ÀÀç é
intÀÀé ë
,ÀÀë í
intÀÀì ñ
>ÀÀñ ó,
materialReferenceIndexLookupÀÀò ¥
)ÀÀ¥ µ
{
ÃÃ 	
int
ÕÕ 

materialID
ÕÕ 
=
ÕÕ 
material
ÕÕ %
.
ÕÕ% &
GetInstanceID
ÕÕ& 3
(
ÕÕ3 4
)
ÕÕ4 5
;
ÕÕ5 6
int
ŒŒ 
index
ŒŒ 
;
ŒŒ 
if
–– 
(
–– *
materialReferenceIndexLookup
–– ,
.
––, -
TryGetValue
––- 8
(
––8 9

materialID
––9 C
,
––C D
out
––E H
index
––I N
)
––N O
)
––O P
{
—— 
return
““ 
index
““ 
;
““ 
}
”” 
else
‘‘ 
{
’’ 
index
÷÷ 
=
÷÷ *
materialReferenceIndexLookup
÷÷ 4
.
÷÷4 5
Count
÷÷5 :
;
÷÷: ;*
materialReferenceIndexLookup
ŸŸ ,
[
ŸŸ, -

materialID
ŸŸ- 7
]
ŸŸ7 8
=
ŸŸ9 :
index
ŸŸ; @
;
ŸŸ@ A 
materialReferences
€€ "
[
€€" #
index
€€# (
]
€€( )
.
€€) *
index
€€* /
=
€€0 1
index
€€2 7
;
€€7 8 
materialReferences
‹‹ "
[
‹‹" #
index
‹‹# (
]
‹‹( )
.
‹‹) *
	fontAsset
‹‹* 3
=
‹‹4 5
	fontAsset
‹‹6 ?
;
‹‹? @ 
materialReferences
›› "
[
››" #
index
››# (
]
››( )
.
››) *
spriteAsset
››* 5
=
››6 7
null
››8 <
;
››< = 
materialReferences
ﬁﬁ "
[
ﬁﬁ" #
index
ﬁﬁ# (
]
ﬁﬁ( )
.
ﬁﬁ) *
material
ﬁﬁ* 2
=
ﬁﬁ3 4
material
ﬁﬁ5 =
;
ﬁﬁ= > 
materialReferences
ﬂﬂ "
[
ﬂﬂ" #
index
ﬂﬂ# (
]
ﬂﬂ( )
.
ﬂﬂ) *
isDefaultMaterial
ﬂﬂ* ;
=
ﬂﬂ< =

materialID
ﬂﬂ> H
==
ﬂﬂI K
	fontAsset
ﬂﬂL U
.
ﬂﬂU V
material
ﬂﬂV ^
.
ﬂﬂ^ _
GetInstanceID
ﬂﬂ_ l
(
ﬂﬂl m
)
ﬂﬂm n
?
ﬂﬂo p
true
ﬂﬂq u
:
ﬂﬂv w
false
ﬂﬂx }
;
ﬂﬂ} ~ 
materialReferences
·· "
[
··" #
index
··# (
]
··( )
.
··) *
referenceCount
··* 8
=
··9 :
$num
··; <
;
··< =
return
„„ 
index
„„ 
;
„„ 
}
‰‰ 
}
ÂÂ 	
public
 
static
 
int
 "
AddMaterialReference
 .
(
. /
Material
/ 7
material
8 @
,
@ A
TMP_SpriteAsset
B Q
spriteAsset
R ]
,
] ^
MaterialReference
_ p
[
p q
]
q r!
materialReferencess Ö
,Ö Ü

Dictionaryá ë
<ë í
intí ï
,ï ñ
intó ö
>ö õ,
materialReferenceIndexLookupú ∏
)∏ π
{
ÒÒ 	
int
ÚÚ 

materialID
ÚÚ 
=
ÚÚ 
material
ÚÚ %
.
ÚÚ% &
GetInstanceID
ÚÚ& 3
(
ÚÚ3 4
)
ÚÚ4 5
;
ÚÚ5 6
int
ÛÛ 
index
ÛÛ 
;
ÛÛ 
if
ıı 
(
ıı *
materialReferenceIndexLookup
ıı ,
.
ıı, -
TryGetValue
ıı- 8
(
ıı8 9

materialID
ıı9 C
,
ııC D
out
ııE H
index
ııI N
)
ııN O
)
ııO P
{
ˆˆ 
return
˜˜ 
index
˜˜ 
;
˜˜ 
}
¯¯ 
else
˘˘ 
{
˙˙ 
index
˚˚ 
=
˚˚ *
materialReferenceIndexLookup
˚˚ 4
.
˚˚4 5
Count
˚˚5 :
;
˚˚: ;*
materialReferenceIndexLookup
˛˛ ,
[
˛˛, -

materialID
˛˛- 7
]
˛˛7 8
=
˛˛9 :
index
˛˛; @
;
˛˛@ A 
materialReferences
ÄÄ "
[
ÄÄ" #
index
ÄÄ# (
]
ÄÄ( )
.
ÄÄ) *
index
ÄÄ* /
=
ÄÄ0 1
index
ÄÄ2 7
;
ÄÄ7 8 
materialReferences
ÅÅ "
[
ÅÅ" #
index
ÅÅ# (
]
ÅÅ( )
.
ÅÅ) *
	fontAsset
ÅÅ* 3
=
ÅÅ4 5 
materialReferences
ÅÅ6 H
[
ÅÅH I
$num
ÅÅI J
]
ÅÅJ K
.
ÅÅK L
	fontAsset
ÅÅL U
;
ÅÅU V 
materialReferences
ÇÇ "
[
ÇÇ" #
index
ÇÇ# (
]
ÇÇ( )
.
ÇÇ) *
spriteAsset
ÇÇ* 5
=
ÇÇ6 7
spriteAsset
ÇÇ8 C
;
ÇÇC D 
materialReferences
ÉÉ "
[
ÉÉ" #
index
ÉÉ# (
]
ÉÉ( )
.
ÉÉ) *
material
ÉÉ* 2
=
ÉÉ3 4
material
ÉÉ5 =
;
ÉÉ= > 
materialReferences
ÑÑ "
[
ÑÑ" #
index
ÑÑ# (
]
ÑÑ( )
.
ÑÑ) *
isDefaultMaterial
ÑÑ* ;
=
ÑÑ< =
true
ÑÑ> B
;
ÑÑB C 
materialReferences
ÜÜ "
[
ÜÜ" #
index
ÜÜ# (
]
ÜÜ( )
.
ÜÜ) *
referenceCount
ÜÜ* 8
=
ÜÜ9 :
$num
ÜÜ; <
;
ÜÜ< =
return
àà 
index
àà 
;
àà 
}
ââ 
}
ää 	
}
ãã 
}åå ﬂ˚
ìD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_InputField.cs
	namespace 	
TMPro
 
{ 
[ 
AddComponentMenu 
( 
$str 4
,4 5
$num6 8
)8 9
]9 :
public 

class 
TMP_InputField 
:  !

Selectable" ,
,, -"
IUpdateSelectedHandler 
, 
IBeginDragHandler 
, 
IDragHandler 
, 
IEndDragHandler 
,  
IPointerClickHandler 
, 
ISubmitHandler 
, 
ICanvasElement 
, 
ILayoutElement 
, 
IScrollHandler 
{   
public## 
enum## 
ContentType## 
{$$ 	
Standard%% 
,%% 
Autocorrected&& 
,&& 
IntegerNumber'' 
,'' 
DecimalNumber(( 
,(( 
Alphanumeric)) 
,)) 
Name** 
,** 
EmailAddress++ 
,++ 
Password,, 
,,, 
Pin-- 
,-- 
Custom.. 
}// 	
public11 
enum11 
	InputType11 
{22 	
Standard33 
,33 
AutoCorrect44 
,44 
Password55 
,55 
}66 	
public88 
enum88 
CharacterValidation88 '
{99 	
None:: 
,:: 
Digit;; 
,;; 
Integer<< 
,<< 
Decimal== 
,== 
Alphanumeric>> 
,>> 
Name?? 
,?? 
Regex@@ 
,@@ 
EmailAddressAA 
,AA 
CustomValidatorBB 
}CC 	
publicEE 
enumEE 
LineTypeEE 
{FF 	

SingleLineGG 
,GG 
MultiLineSubmitHH 
,HH 
MultiLineNewlineII 
}JJ 	
publicLL 
delegateLL 
charLL 
OnValidateInputLL ,
(LL, -
stringLL- 3
textLL4 8
,LL8 9
intLL: =
	charIndexLL> G
,LLG H
charLLI M
	addedCharLLN W
)LLW X
;LLX Y
[NN 	
SerializableNN	 
]NN 
publicOO 
classOO 
SubmitEventOO  
:OO! "

UnityEventOO# -
<OO- .
stringOO. 4
>OO4 5
{OO6 7
}OO8 9
[QQ 	
SerializableQQ	 
]QQ 
publicRR 
classRR 
OnChangeEventRR "
:RR# $

UnityEventRR% /
<RR/ 0
stringRR0 6
>RR6 7
{RR8 9
}RR: ;
[TT 	
SerializableTT	 
]TT 
publicUU 
classUU 
SelectionEventUU #
:UU$ %

UnityEventUU& 0
<UU0 1
stringUU1 7
>UU7 8
{UU9 :
}UU; <
[WW 	
SerializableWW	 
]WW 
publicXX 
classXX 
TextSelectionEventXX '
:XX( )

UnityEventXX* 4
<XX4 5
stringXX5 ;
,XX; <
intXX= @
,XX@ A
intXXB E
>XXE F
{XXG H
}XXI J
[ZZ 	
SerializableZZ	 
]ZZ 
public[[ 
class[[ $
TouchScreenKeyboardEvent[[ -
:[[. /

UnityEvent[[0 :
<[[: ;
TouchScreenKeyboard[[; N
.[[N O
Status[[O U
>[[U V
{[[W X
}[[Y Z
	protected]] 
TouchScreenKeyboard]] %
m_SoftKeyboard]]& 4
;]]4 5
static^^ 
private^^ 
readonly^^ 
char^^  $
[^^$ %
]^^% &
kSeparators^^' 2
=^^3 4
{^^5 6
$char^^7 :
,^^: ;
$char^^< ?
,^^? @
$char^^A D
,^^D E
$char^^F J
,^^J K
$char^^L P
,^^P Q
$char^^R V
}^^W X
;^^X Y
	protectedee 
RectTransformee 
m_RectTransformee  /
;ee/ 0
[gg 	
SerializeFieldgg	 
]gg 
	protectedhh 
RectTransformhh 
m_TextViewporthh  .
;hh. /
	protectedjj 

RectMask2Djj #
m_TextComponentRectMaskjj 4
;jj4 5
	protectedll 

RectMask2Dll "
m_TextViewportRectMaskll 3
;ll3 4
privatemm 
Rectmm  
m_CachedViewportRectmm )
;mm) *
[oo 	
SerializeFieldoo	 
]oo 
	protectedpp 
TMP_Textpp 
m_TextComponentpp *
;pp* +
	protectedrr 
RectTransformrr (
m_TextComponentRectTransformrr  <
;rr< =
[tt 	
SerializeFieldtt	 
]tt 
	protecteduu 
Graphicuu 
m_Placeholderuu '
;uu' (
[ww 	
SerializeFieldww	 
]ww 
	protectedxx 
	Scrollbarxx 
m_VerticalScrollbarxx /
;xx/ 0
[zz 	
SerializeFieldzz	 
]zz 
	protected{{ %
TMP_ScrollbarEventHandler{{ ++
m_VerticalScrollbarEventHandler{{, K
;{{K L
private~~ 
bool~~ (
m_IsDrivenByLayoutComponents~~ 1
=~~2 3
false~~4 9
;~~9 :
[ 	
SerializeField	 
] 
private
ÄÄ 
LayoutGroup
ÄÄ 
m_LayoutGroup
ÄÄ )
;
ÄÄ) *
private
ÖÖ 
float
ÖÖ 
m_ScrollPosition
ÖÖ &
;
ÖÖ& '
[
ää 	
SerializeField
ää	 
]
ää 
	protected
ãã 
float
ãã !
m_ScrollSensitivity
ãã +
=
ãã, -
$num
ãã. 2
;
ãã2 3
[
êê 	
SerializeField
êê	 
]
êê 
private
ëë 
ContentType
ëë 
m_ContentType
ëë )
=
ëë* +
ContentType
ëë, 7
.
ëë7 8
Standard
ëë8 @
;
ëë@ A
[
ññ 	
SerializeField
ññ	 
]
ññ 
private
óó 
	InputType
óó 
m_InputType
óó %
=
óó& '
	InputType
óó( 1
.
óó1 2
Standard
óó2 :
;
óó: ;
[
úú 	
SerializeField
úú	 
]
úú 
private
ùù 
char
ùù 
m_AsteriskChar
ùù #
=
ùù$ %
$char
ùù& )
;
ùù) *
[
¢¢ 	
SerializeField
¢¢	 
]
¢¢ 
private
££ %
TouchScreenKeyboardType
££ '
m_KeyboardType
££( 6
=
££7 8%
TouchScreenKeyboardType
££9 P
.
££P Q
Default
££Q X
;
££X Y
[
•• 	
SerializeField
••	 
]
•• 
private
¶¶ 
LineType
¶¶ 

m_LineType
¶¶ #
=
¶¶$ %
LineType
¶¶& .
.
¶¶. /

SingleLine
¶¶/ 9
;
¶¶9 :
[
´´ 	
SerializeField
´´	 
]
´´ 
private
¨¨ 
bool
¨¨ 
m_HideMobileInput
¨¨ &
=
¨¨' (
false
¨¨) .
;
¨¨. /
[
±± 	
SerializeField
±±	 
]
±± 
private
≤≤ 
bool
≤≤  
m_HideSoftKeyboard
≤≤ '
=
≤≤( )
false
≤≤* /
;
≤≤/ 0
[
∑∑ 	
SerializeField
∑∑	 
]
∑∑ 
private
∏∏ !
CharacterValidation
∏∏ ##
m_CharacterValidation
∏∏$ 9
=
∏∏: ;!
CharacterValidation
∏∏< O
.
∏∏O P
None
∏∏P T
;
∏∏T U
[
ΩΩ 	
SerializeField
ΩΩ	 
]
ΩΩ 
private
ææ 
string
ææ 
m_RegexValue
ææ #
=
ææ$ %
string
ææ& ,
.
ææ, -
Empty
ææ- 2
;
ææ2 3
[
√√ 	
SerializeField
√√	 
]
√√ 
private
ƒƒ 
float
ƒƒ 
m_GlobalPointSize
ƒƒ '
=
ƒƒ( )
$num
ƒƒ* ,
;
ƒƒ, -
[
…… 	
SerializeField
……	 
]
…… 
private
   
int
   
m_CharacterLimit
   $
=
  % &
$num
  ' (
;
  ( )
[
œœ 	
SerializeField
œœ	 
]
œœ 
private
–– 
SubmitEvent
–– 
m_OnEndEdit
–– '
=
––( )
new
––* -
SubmitEvent
––. 9
(
––9 :
)
––: ;
;
––; <
[
’’ 	
SerializeField
’’	 
]
’’ 
private
÷÷ 
SubmitEvent
÷÷ 

m_OnSubmit
÷÷ &
=
÷÷' (
new
÷÷) ,
SubmitEvent
÷÷- 8
(
÷÷8 9
)
÷÷9 :
;
÷÷: ;
[
€€ 	
SerializeField
€€	 
]
€€ 
private
‹‹ 
SelectionEvent
‹‹ 

m_OnSelect
‹‹ )
=
‹‹* +
new
‹‹, /
SelectionEvent
‹‹0 >
(
‹‹> ?
)
‹‹? @
;
‹‹@ A
[
·· 	
SerializeField
··	 
]
·· 
private
‚‚ 
SelectionEvent
‚‚ 
m_OnDeselect
‚‚ +
=
‚‚, -
new
‚‚. 1
SelectionEvent
‚‚2 @
(
‚‚@ A
)
‚‚A B
;
‚‚B C
[
ÁÁ 	
SerializeField
ÁÁ	 
]
ÁÁ 
private
ËË  
TextSelectionEvent
ËË "
m_OnTextSelection
ËË# 4
=
ËË5 6
new
ËË7 : 
TextSelectionEvent
ËË; M
(
ËËM N
)
ËËN O
;
ËËO P
[
ÌÌ 	
SerializeField
ÌÌ	 
]
ÌÌ 
private
ÓÓ  
TextSelectionEvent
ÓÓ ""
m_OnEndTextSelection
ÓÓ# 7
=
ÓÓ8 9
new
ÓÓ: = 
TextSelectionEvent
ÓÓ> P
(
ÓÓP Q
)
ÓÓQ R
;
ÓÓR S
[
ÛÛ 	
SerializeField
ÛÛ	 
]
ÛÛ 
private
ÙÙ 
OnChangeEvent
ÙÙ 
m_OnValueChanged
ÙÙ .
=
ÙÙ/ 0
new
ÙÙ1 4
OnChangeEvent
ÙÙ5 B
(
ÙÙB C
)
ÙÙC D
;
ÙÙD E
[
˘˘ 	
SerializeField
˘˘	 
]
˘˘ 
private
˙˙ &
TouchScreenKeyboardEvent
˙˙ (2
$m_OnTouchScreenKeyboardStatusChanged
˙˙) M
=
˙˙N O
new
˙˙P S&
TouchScreenKeyboardEvent
˙˙T l
(
˙˙l m
)
˙˙m n
;
˙˙n o
[
ˇˇ 	
SerializeField
ˇˇ	 
]
ˇˇ 
private
ÄÄ 
OnValidateInput
ÄÄ 
m_OnValidateInput
ÄÄ  1
;
ÄÄ1 2
[
ÇÇ 	
SerializeField
ÇÇ	 
]
ÇÇ 
private
ÉÉ 
Color
ÉÉ 
m_CaretColor
ÉÉ "
=
ÉÉ# $
new
ÉÉ% (
Color
ÉÉ) .
(
ÉÉ. /
$num
ÉÉ/ 2
/
ÉÉ3 4
$num
ÉÉ5 9
,
ÉÉ9 :
$num
ÉÉ; >
/
ÉÉ? @
$num
ÉÉA E
,
ÉÉE F
$num
ÉÉG J
/
ÉÉK L
$num
ÉÉM Q
,
ÉÉQ R
$num
ÉÉS U
)
ÉÉU V
;
ÉÉV W
[
ÖÖ 	
SerializeField
ÖÖ	 
]
ÖÖ 
private
ÜÜ 
bool
ÜÜ  
m_CustomCaretColor
ÜÜ '
=
ÜÜ( )
false
ÜÜ* /
;
ÜÜ/ 0
[
àà 	
SerializeField
àà	 
]
àà 
private
ââ 
Color
ââ 
m_SelectionColor
ââ &
=
ââ' (
new
ââ) ,
Color
ââ- 2
(
ââ2 3
$num
ââ3 7
/
ââ8 9
$num
ââ: >
,
ââ> ?
$num
ââ@ D
/
ââE F
$num
ââG K
,
ââK L
$num
ââM Q
/
ââR S
$num
ââT X
,
ââX Y
$num
ââZ ^
/
ââ_ `
$num
ââa e
)
ââe f
;
ââf g
[
èè 	
SerializeField
èè	 
]
èè 
[
êê 	
TextArea
êê	 
(
êê 
$num
êê 
,
êê 
$num
êê 
)
êê 
]
êê 
	protected
ëë 
string
ëë 
m_Text
ëë 
=
ëë  !
string
ëë" (
.
ëë( )
Empty
ëë) .
;
ëë. /
[
ìì 	
SerializeField
ìì	 
]
ìì 
[
îî 	
Range
îî	 
(
îî 
$num
îî 
,
îî 
$num
îî 
)
îî 
]
îî 
private
ïï 
float
ïï 
m_CaretBlinkRate
ïï &
=
ïï' (
$num
ïï) .
;
ïï. /
[
óó 	
SerializeField
óó	 
]
óó 
[
òò 	
Range
òò	 
(
òò 
$num
òò 
,
òò 
$num
òò 
)
òò 
]
òò 
private
ôô 
int
ôô 
m_CaretWidth
ôô  
=
ôô! "
$num
ôô# $
;
ôô$ %
[
õõ 	
SerializeField
õõ	 
]
õõ 
private
úú 
bool
úú 

m_ReadOnly
úú 
=
úú  !
false
úú" '
;
úú' (
[
ûû 	
SerializeField
ûû	 
]
ûû 
private
üü 
bool
üü 

m_RichText
üü 
=
üü  !
true
üü" &
;
üü& '
	protected
££ 
int
££ 
m_StringPosition
££ &
=
££' (
$num
££) *
;
££* +
	protected
§§ 
int
§§ $
m_StringSelectPosition
§§ ,
=
§§- .
$num
§§/ 0
;
§§0 1
	protected
•• 
int
•• 
m_CaretPosition
•• %
=
••& '
$num
••( )
;
••) *
	protected
¶¶ 
int
¶¶ #
m_CaretSelectPosition
¶¶ +
=
¶¶, -
$num
¶¶. /
;
¶¶/ 0
private
®® 
RectTransform
®® 
caretRectTrans
®® ,
=
®®- .
null
®®/ 3
;
®®3 4
	protected
©© 
UIVertex
©© 
[
©© 
]
©© 
m_CursorVerts
©© *
=
©©+ ,
null
©©- 1
;
©©1 2
private
™™ 
CanvasRenderer
™™ #
m_CachedInputRenderer
™™ 4
;
™™4 5
private
´´ 
Vector2
´´ 
m_LastPosition
´´ &
;
´´& '
[
≠≠ 	
NonSerialized
≠≠	 
]
≠≠ 
	protected
ÆÆ 
Mesh
ÆÆ 
m_Mesh
ÆÆ 
;
ÆÆ 
private
ØØ 
bool
ØØ 
m_AllowInput
ØØ !
=
ØØ" #
false
ØØ$ )
;
ØØ) *
private
±± 
bool
±± (
m_ShouldActivateNextUpdate
±± /
=
±±0 1
false
±±2 7
;
±±7 8
private
≤≤ 
bool
≤≤ 
m_UpdateDrag
≤≤ !
=
≤≤" #
false
≤≤$ )
;
≤≤) *
private
≥≥ 
bool
≥≥ '
m_DragPositionOutOfBounds
≥≥ .
=
≥≥/ 0
false
≥≥1 6
;
≥≥6 7
private
¥¥ 
const
¥¥ 
float
¥¥ 
kHScrollSpeed
¥¥ )
=
¥¥* +
$num
¥¥, 1
;
¥¥1 2
private
µµ 
const
µµ 
float
µµ 
kVScrollSpeed
µµ )
=
µµ* +
$num
µµ, 1
;
µµ1 2
	protected
∂∂ 
bool
∂∂ 
m_CaretVisible
∂∂ %
;
∂∂% &
private
∑∑ 
	Coroutine
∑∑ 
m_BlinkCoroutine
∑∑ *
=
∑∑+ ,
null
∑∑- 1
;
∑∑1 2
private
∏∏ 
float
∏∏ 
m_BlinkStartTime
∏∏ &
=
∏∏' (
$num
∏∏) -
;
∏∏- .
private
ππ 
	Coroutine
ππ 
m_DragCoroutine
ππ )
=
ππ* +
null
ππ, 0
;
ππ0 1
private
∫∫ 
string
∫∫ 
m_OriginalText
∫∫ %
=
∫∫& '
$str
∫∫( *
;
∫∫* +
private
ªª 
bool
ªª 
m_WasCanceled
ªª "
=
ªª# $
false
ªª% *
;
ªª* +
private
ºº 
bool
ºº &
m_HasDoneFocusTransition
ºº -
=
ºº. /
false
ºº0 5
;
ºº5 6
private
ΩΩ $
WaitForSecondsRealtime
ΩΩ &&
m_WaitForSecondsRealtime
ΩΩ' ?
;
ΩΩ? @
private
ææ 
bool
ææ 
m_PreventCallback
ææ &
=
ææ' (
false
ææ) .
;
ææ. /
private
¿¿ 
bool
¿¿ 1
#m_TouchKeyboardAllowsInPlaceEditing
¿¿ 8
=
¿¿9 :
false
¿¿; @
;
¿¿@ A
private
¬¬ 
bool
¬¬ -
m_IsTextComponentUpdateRequired
¬¬ 4
=
¬¬5 6
false
¬¬7 <
;
¬¬< =
private
√√ 
bool
√√ )
m_IsScrollbarUpdateRequired
√√ 0
=
√√1 2
false
√√3 8
;
√√8 9
private
ƒƒ 
bool
ƒƒ )
m_IsUpdatingScrollbarValues
ƒƒ 0
=
ƒƒ1 2
false
ƒƒ3 8
;
ƒƒ8 9
private
∆∆ 
bool
∆∆ "
m_isLastKeyBackspace
∆∆ )
=
∆∆* +
false
∆∆, 1
;
∆∆1 2
private
«« 
float
«« )
m_PointerDownClickStartTime
«« 1
;
««1 2
private
»» 
float
»»  
m_KeyDownStartTime
»» (
;
»»( )
private
…… 
float
……  
m_DoubleClickDelay
…… (
=
……) *
$num
……+ /
;
……/ 0
const
ÃÃ 
string
ÃÃ %
kEmailSpecialCharacters
ÃÃ ,
=
ÃÃ- .
$str
ÃÃ/ D
;
ÃÃD E
private
ŒŒ 
	BaseInput
ŒŒ 
inputSystem
ŒŒ %
{
œœ 	
get
–– 
{
—— 
if
““ 
(
““ 
EventSystem
““ 
.
““  
current
““  '
&&
““( *
EventSystem
““+ 6
.
““6 7
current
““7 >
.
““> ? 
currentInputModule
““? Q
)
““Q R
return
”” 
EventSystem
”” &
.
””& '
current
””' .
.
””. / 
currentInputModule
””/ A
.
””A B
input
””B G
;
””G H
return
‘‘ 
null
‘‘ 
;
‘‘ 
}
’’ 
}
÷÷ 	
private
ÿÿ 
string
ÿÿ 
compositionString
ÿÿ (
{
ŸŸ 	
get
⁄⁄ 
{
⁄⁄ 
return
⁄⁄ 
inputSystem
⁄⁄ $
!=
⁄⁄% '
null
⁄⁄( ,
?
⁄⁄- .
inputSystem
⁄⁄/ :
.
⁄⁄: ;
compositionString
⁄⁄; L
:
⁄⁄M N
Input
⁄⁄O T
.
⁄⁄T U
compositionString
⁄⁄U f
;
⁄⁄f g
}
⁄⁄h i
}
€€ 	
private
‹‹ 
bool
‹‹ #
m_IsCompositionActive
‹‹ *
=
‹‹+ ,
false
‹‹- 2
;
‹‹2 3
private
›› 
bool
›› -
m_ShouldUpdateIMEWindowPosition
›› 4
=
››5 6
false
››7 <
;
››< =
private
ﬁﬁ 
int
ﬁﬁ (
m_PreviousIMEInsertionLine
ﬁﬁ .
=
ﬁﬁ/ 0
$num
ﬁﬁ1 2
;
ﬁﬁ2 3
private
‡‡ 
int
‡‡ 
compositionLength
‡‡ %
{
·· 	
get
‚‚ 
{
„„ 
if
‰‰ 
(
‰‰ 

m_ReadOnly
‰‰ 
)
‰‰ 
return
ÂÂ 
$num
ÂÂ 
;
ÂÂ 
return
ÁÁ 
compositionString
ÁÁ (
.
ÁÁ( )
Length
ÁÁ) /
;
ÁÁ/ 0
}
ËË 
}
ÈÈ 	
	protected
ÌÌ 
TMP_InputField
ÌÌ  
(
ÌÌ  !
)
ÌÌ! "
{
ÓÓ 	&
SetTextComponentWrapMode
ÔÔ $
(
ÔÔ$ %
)
ÔÔ% &
;
ÔÔ& '
}
 	
	protected
ÚÚ 
Mesh
ÚÚ 
mesh
ÚÚ 
{
ÛÛ 	
get
ÙÙ 
{
ıı 
if
ˆˆ 
(
ˆˆ 
m_Mesh
ˆˆ 
==
ˆˆ 
null
ˆˆ "
)
ˆˆ" #
m_Mesh
˜˜ 
=
˜˜ 
new
˜˜  
Mesh
˜˜! %
(
˜˜% &
)
˜˜& '
;
˜˜' (
return
¯¯ 
m_Mesh
¯¯ 
;
¯¯ 
}
˘˘ 
}
˙˙ 	
public
ˇˇ 
bool
ˇˇ #
shouldHideMobileInput
ˇˇ )
{
ÄÄ 	
get
ÅÅ 
{
ÇÇ 
switch
ÉÉ 
(
ÉÉ 
Application
ÉÉ #
.
ÉÉ# $
platform
ÉÉ$ ,
)
ÉÉ, -
{
ÑÑ 
case
ÖÖ 
RuntimePlatform
ÖÖ (
.
ÖÖ( )
Android
ÖÖ) 0
:
ÖÖ0 1
case
ÜÜ 
RuntimePlatform
ÜÜ (
.
ÜÜ( )
IPhonePlayer
ÜÜ) 5
:
ÜÜ5 6
case
áá 
RuntimePlatform
áá (
.
áá( )
tvOS
áá) -
:
áá- .
return
àà 
m_HideMobileInput
àà 0
;
àà0 1
default
ââ 
:
ââ 
return
ää 
true
ää #
;
ää# $
}
ãã 
}
åå 
set
éé 
{
èè 
switch
êê 
(
êê 
Application
êê "
.
êê" #
platform
êê# +
)
êê+ ,
{
ëë 
case
íí 
RuntimePlatform
íí (
.
íí( )
Android
íí) 0
:
íí0 1
case
ìì 
RuntimePlatform
ìì (
.
ìì( )
IPhonePlayer
ìì) 5
:
ìì5 6
case
îî 
RuntimePlatform
îî (
.
îî( )
tvOS
îî) -
:
îî- . 
SetPropertyUtility
ïï *
.
ïï* +
	SetStruct
ïï+ 4
(
ïï4 5
ref
ïï5 8
m_HideMobileInput
ïï9 J
,
ïïJ K
value
ïïL Q
)
ïïQ R
;
ïïR S
break
ññ 
;
ññ 
default
óó 
:
óó 
m_HideMobileInput
òò )
=
òò* +
true
òò, 0
;
òò0 1
break
ôô 
;
ôô 
}
öö 
}
õõ 
}
úú 	
public
ûû 
bool
ûû $
shouldHideSoftKeyboard
ûû *
{
üü 	
get
†† 
{
°° 
switch
¢¢ 
(
¢¢ 
Application
¢¢ #
.
¢¢# $
platform
¢¢$ ,
)
¢¢, -
{
££ 
case
§§ 
RuntimePlatform
§§ (
.
§§( )
Android
§§) 0
:
§§0 1
case
•• 
RuntimePlatform
•• (
.
••( )
IPhonePlayer
••) 5
:
••5 6
case
¶¶ 
RuntimePlatform
¶¶ (
.
¶¶( )
tvOS
¶¶) -
:
¶¶- .
case
ßß 
RuntimePlatform
ßß (
.
ßß( )
WSAPlayerX86
ßß) 5
:
ßß5 6
case
®® 
RuntimePlatform
®® (
.
®®( )
WSAPlayerX64
®®) 5
:
®®5 6
case
©© 
RuntimePlatform
©© (
.
©©( )
WSAPlayerARM
©©) 5
:
©©5 6
case
™™ 
RuntimePlatform
™™ (
.
™™( )
Stadia
™™) /
:
™™/ 0
case
´´ 
RuntimePlatform
´´ (
.
´´( )
Switch
´´) /
:
´´/ 0
return
¨¨  
m_HideSoftKeyboard
¨¨ 1
;
¨¨1 2
default
≠≠ 
:
≠≠ 
return
ÆÆ 
true
ÆÆ #
;
ÆÆ# $
}
ØØ 
}
∞∞ 
set
≤≤ 
{
≥≥ 
switch
¥¥ 
(
¥¥ 
Application
¥¥ #
.
¥¥# $
platform
¥¥$ ,
)
¥¥, -
{
µµ 
case
∂∂ 
RuntimePlatform
∂∂ (
.
∂∂( )
Android
∂∂) 0
:
∂∂0 1
case
∑∑ 
RuntimePlatform
∑∑ (
.
∑∑( )
IPhonePlayer
∑∑) 5
:
∑∑5 6
case
∏∏ 
RuntimePlatform
∏∏ (
.
∏∏( )
tvOS
∏∏) -
:
∏∏- .
case
ππ 
RuntimePlatform
ππ (
.
ππ( )
WSAPlayerX86
ππ) 5
:
ππ5 6
case
∫∫ 
RuntimePlatform
∫∫ (
.
∫∫( )
WSAPlayerX64
∫∫) 5
:
∫∫5 6
case
ªª 
RuntimePlatform
ªª (
.
ªª( )
WSAPlayerARM
ªª) 5
:
ªª5 6
case
ºº 
RuntimePlatform
ºº (
.
ºº( )
Stadia
ºº) /
:
ºº/ 0
case
ΩΩ 
RuntimePlatform
ΩΩ (
.
ΩΩ( )
Switch
ΩΩ) /
:
ΩΩ/ 0 
SetPropertyUtility
ææ *
.
ææ* +
	SetStruct
ææ+ 4
(
ææ4 5
ref
ææ5 8 
m_HideSoftKeyboard
ææ9 K
,
ææK L
value
ææM R
)
ææR S
;
ææS T
break
øø 
;
øø 
default
¿¿ 
:
¿¿  
m_HideSoftKeyboard
¡¡ *
=
¡¡+ ,
true
¡¡- 1
;
¡¡1 2
break
¬¬ 
;
¬¬ 
}
√√ 
if
≈≈ 
(
≈≈  
m_HideSoftKeyboard
≈≈ &
==
≈≈' )
true
≈≈* .
&&
≈≈/ 1
m_SoftKeyboard
≈≈2 @
!=
≈≈A C
null
≈≈D H
&&
≈≈I K!
TouchScreenKeyboard
≈≈L _
.
≈≈_ `
isSupported
≈≈` k
&&
≈≈l n
m_SoftKeyboard
≈≈o }
.
≈≈} ~
active≈≈~ Ñ
)≈≈Ñ Ö
{
∆∆ 
m_SoftKeyboard
«« "
.
««" #
active
««# )
=
««* +
false
««, 1
;
««1 2
m_SoftKeyboard
»» "
=
»»# $
null
»»% )
;
»») *
}
…… 
}
   
}
ÀÀ 	
private
ÕÕ 
bool
ÕÕ #
isKeyboardUsingEvents
ÕÕ *
(
ÕÕ* +
)
ÕÕ+ ,
{
ŒŒ 	
switch
œœ 
(
œœ 
Application
œœ 
.
œœ  
platform
œœ  (
)
œœ( )
{
–– 
case
—— 
RuntimePlatform
—— $
.
——$ %
Android
——% ,
:
——, -
case
““ 
RuntimePlatform
““ $
.
““$ %
IPhonePlayer
““% 1
:
““1 2
case
”” 
RuntimePlatform
”” $
.
””$ %
tvOS
””% )
:
””) *
case
‘‘ 
RuntimePlatform
‘‘ $
.
‘‘$ %
Switch
‘‘% +
:
‘‘+ ,
return
’’ 
false
’’  
;
’’  !
default
÷÷ 
:
÷÷ 
return
◊◊ 
true
◊◊ 
;
◊◊  
}
ÿÿ 
}
ŸŸ 	
public
ÚÚ 
string
ÚÚ 
text
ÚÚ 
{
ÛÛ 	
get
ÙÙ 
{
ıı 
return
ˆˆ 
m_Text
ˆˆ 
;
ˆˆ 
}
˜˜ 
set
¯¯ 
{
˘˘ 
SetText
˙˙ 
(
˙˙ 
value
˙˙ 
)
˙˙ 
;
˙˙ 
}
˚˚ 
}
¸¸ 	
public
ÅÅ 
void
ÅÅ "
SetTextWithoutNotify
ÅÅ (
(
ÅÅ( )
string
ÅÅ) /
input
ÅÅ0 5
)
ÅÅ5 6
{
ÇÇ 	
SetText
ÉÉ 
(
ÉÉ 
input
ÉÉ 
,
ÉÉ 
false
ÉÉ  
)
ÉÉ  !
;
ÉÉ! "
}
ÑÑ 	
void
ÜÜ 
SetText
ÜÜ 
(
ÜÜ 
string
ÜÜ 
value
ÜÜ !
,
ÜÜ! "
bool
ÜÜ# '
sendCallback
ÜÜ( 4
=
ÜÜ5 6
true
ÜÜ7 ;
)
ÜÜ; <
{
áá 	
if
àà 
(
àà 
this
àà 
.
àà 
text
àà 
==
àà 
value
àà "
)
àà" #
return
ââ 
;
ââ 
if
ãã 
(
ãã 
value
ãã 
==
ãã 
null
ãã 
)
ãã 
value
åå 
=
åå 
$str
åå 
;
åå 
value
éé 
=
éé 
value
éé 
.
éé 
Replace
éé !
(
éé! "
$str
éé" &
,
éé& '
string
éé( .
.
éé. /
Empty
éé/ 4
)
éé4 5
;
éé5 6
m_Text
êê 
=
êê 
value
êê 
;
êê 
if
´´ 
(
´´ 
!
´´ 
Application
´´ 
.
´´ 
	isPlaying
´´ &
)
´´& '
{
¨¨ .
 SendOnValueChangedAndUpdateLabel
≠≠ 0
(
≠≠0 1
)
≠≠1 2
;
≠≠2 3
return
ÆÆ 
;
ÆÆ 
}
ØØ 
if
≤≤ 
(
≤≤ 
m_SoftKeyboard
≤≤ 
!=
≤≤ !
null
≤≤" &
)
≤≤& '
m_SoftKeyboard
≥≥ 
.
≥≥ 
text
≥≥ #
=
≥≥$ %
m_Text
≥≥& ,
;
≥≥, -
if
µµ 
(
µµ 
m_StringPosition
µµ  
>
µµ! "
m_Text
µµ# )
.
µµ) *
Length
µµ* 0
)
µµ0 1
m_StringPosition
∂∂  
=
∂∂! "$
m_StringSelectPosition
∂∂# 9
=
∂∂: ;
m_Text
∂∂< B
.
∂∂B C
Length
∂∂C I
;
∂∂I J
else
∑∑ 
if
∑∑ 
(
∑∑ $
m_StringSelectPosition
∑∑ +
>
∑∑, -
m_Text
∑∑. 4
.
∑∑4 5
Length
∑∑5 ;
)
∑∑; <$
m_StringSelectPosition
∏∏ &
=
∏∏' (
m_Text
∏∏) /
.
∏∏/ 0
Length
∏∏0 6
;
∏∏6 72
$AdjustTextPositionRelativeToViewport
ªª 0
(
ªª0 1
$num
ªª1 2
)
ªª2 3
;
ªª3 4,
m_forceRectTransformAdjustment
ΩΩ *
=
ΩΩ+ ,
true
ΩΩ- 1
;
ΩΩ1 2-
m_IsTextComponentUpdateRequired
øø +
=
øø, -
true
øø. 2
;
øø2 3
UpdateLabel
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿ 
if
¬¬ 
(
¬¬ 
sendCallback
¬¬ 
)
¬¬  
SendOnValueChanged
√√ "
(
√√" #
)
√√# $
;
√√$ %
}
ƒƒ 	
public
«« 
bool
«« 
	isFocused
«« 
{
»» 	
get
…… 
{
…… 
return
…… 
m_AllowInput
…… %
;
……% &
}
……' (
}
   	
public
ÃÃ 
float
ÃÃ 
caretBlinkRate
ÃÃ #
{
ÕÕ 	
get
ŒŒ 
{
ŒŒ 
return
ŒŒ 
m_CaretBlinkRate
ŒŒ )
;
ŒŒ) *
}
ŒŒ+ ,
set
œœ 
{
–– 
if
—— 
(
——  
SetPropertyUtility
—— &
.
——& '
	SetStruct
——' 0
(
——0 1
ref
——1 4
m_CaretBlinkRate
——5 E
,
——E F
value
——G L
)
——L M
)
——M N
{
““ 
if
”” 
(
”” 
m_AllowInput
”” $
)
””$ %
SetCaretActive
‘‘ &
(
‘‘& '
)
‘‘' (
;
‘‘( )
}
’’ 
}
÷÷ 
}
◊◊ 	
public
ŸŸ 
int
ŸŸ 

caretWidth
ŸŸ 
{
ŸŸ 
get
ŸŸ  #
{
ŸŸ$ %
return
ŸŸ& ,
m_CaretWidth
ŸŸ- 9
;
ŸŸ9 :
}
ŸŸ; <
set
ŸŸ= @
{
ŸŸA B
if
ŸŸC E
(
ŸŸF G 
SetPropertyUtility
ŸŸG Y
.
ŸŸY Z
	SetStruct
ŸŸZ c
(
ŸŸc d
ref
ŸŸd g
m_CaretWidth
ŸŸh t
,
ŸŸt u
value
ŸŸv {
)
ŸŸ{ |
)
ŸŸ| }"
MarkGeometryAsDirtyŸŸ~ ë
(ŸŸë í
)ŸŸí ì
;ŸŸì î
}ŸŸï ñ
}ŸŸó ò
public
€€ 
RectTransform
€€ 
textViewport
€€ )
{
€€* +
get
€€, /
{
€€0 1
return
€€2 8
m_TextViewport
€€9 G
;
€€G H
}
€€I J
set
€€K N
{
€€O P 
SetPropertyUtility
€€Q c
.
€€c d
SetClass
€€d l
(
€€l m
ref
€€m p
m_TextViewport
€€q 
,€€ Ä
value€€Å Ü
)€€Ü á
;€€á à
}€€â ä
}€€ã å
public
›› 
TMP_Text
›› 
textComponent
›› %
{
ﬁﬁ 	
get
ﬂﬂ 
{
ﬂﬂ 
return
ﬂﬂ 
m_TextComponent
ﬂﬂ (
;
ﬂﬂ( )
}
ﬂﬂ* +
set
‡‡ 
{
·· 
if
‚‚ 
(
‚‚  
SetPropertyUtility
‚‚ &
.
‚‚& '
SetClass
‚‚' /
(
‚‚/ 0
ref
‚‚0 3
m_TextComponent
‚‚4 C
,
‚‚C D
value
‚‚E J
)
‚‚J K
)
‚‚K L
{
„„ &
SetTextComponentWrapMode
‰‰ ,
(
‰‰, -
)
‰‰- .
;
‰‰. /
}
ÂÂ 
}
ÊÊ 
}
ÁÁ 	
public
ÎÎ 
Graphic
ÎÎ 
placeholder
ÎÎ "
{
ÎÎ# $
get
ÎÎ% (
{
ÎÎ) *
return
ÎÎ+ 1
m_Placeholder
ÎÎ2 ?
;
ÎÎ? @
}
ÎÎA B
set
ÎÎC F
{
ÎÎG H 
SetPropertyUtility
ÎÎI [
.
ÎÎ[ \
SetClass
ÎÎ\ d
(
ÎÎd e
ref
ÎÎe h
m_Placeholder
ÎÎi v
,
ÎÎv w
value
ÎÎx }
)
ÎÎ} ~
;
ÎÎ~ 
}ÎÎÄ Å
}ÎÎÇ É
public
ÌÌ 
	Scrollbar
ÌÌ 
verticalScrollbar
ÌÌ *
{
ÓÓ 	
get
ÔÔ 
{
ÔÔ 
return
ÔÔ !
m_VerticalScrollbar
ÔÔ ,
;
ÔÔ, -
}
ÔÔ. /
set
 
{
ÒÒ 
if
ÚÚ 
(
ÚÚ !
m_VerticalScrollbar
ÚÚ '
!=
ÚÚ( *
null
ÚÚ+ /
)
ÚÚ/ 0!
m_VerticalScrollbar
ÛÛ '
.
ÛÛ' (
onValueChanged
ÛÛ( 6
.
ÛÛ6 7
RemoveListener
ÛÛ7 E
(
ÛÛE F$
OnScrollbarValueChange
ÛÛF \
)
ÛÛ\ ]
;
ÛÛ] ^ 
SetPropertyUtility
ıı "
.
ıı" #
SetClass
ıı# +
(
ıı+ ,
ref
ıı, /!
m_VerticalScrollbar
ıı0 C
,
ııC D
value
ııE J
)
ııJ K
;
ııK L
if
˜˜ 
(
˜˜ !
m_VerticalScrollbar
˜˜ '
)
˜˜' (
{
¯¯ !
m_VerticalScrollbar
˘˘ '
.
˘˘' (
onValueChanged
˘˘( 6
.
˘˘6 7
AddListener
˘˘7 B
(
˘˘B C$
OnScrollbarValueChange
˘˘C Y
)
˘˘Y Z
;
˘˘Z [
}
˚˚ 
}
¸¸ 
}
˝˝ 	
public
ˇˇ 
float
ˇˇ 
scrollSensitivity
ˇˇ &
{
ˇˇ' (
get
ˇˇ) ,
{
ˇˇ- .
return
ˇˇ/ 5!
m_ScrollSensitivity
ˇˇ6 I
;
ˇˇI J
}
ˇˇK L
set
ˇˇM P
{
ˇˇQ R
if
ˇˇS U
(
ˇˇV W 
SetPropertyUtility
ˇˇW i
.
ˇˇi j
	SetStruct
ˇˇj s
(
ˇˇs t
ref
ˇˇt w"
m_ScrollSensitivityˇˇx ã
,ˇˇã å
valueˇˇç í
)ˇˇí ì
)ˇˇì î#
MarkGeometryAsDirtyˇˇï ®
(ˇˇ® ©
)ˇˇ© ™
;ˇˇ™ ´
}ˇˇ¨ ≠
}ˇˇÆ Ø
public
ÅÅ 
Color
ÅÅ 

caretColor
ÅÅ 
{
ÅÅ  !
get
ÅÅ" %
{
ÅÅ& '
return
ÅÅ( .
customCaretColor
ÅÅ/ ?
?
ÅÅ@ A
m_CaretColor
ÅÅB N
:
ÅÅO P
textComponent
ÅÅQ ^
.
ÅÅ^ _
color
ÅÅ_ d
;
ÅÅd e
}
ÅÅf g
set
ÅÅh k
{
ÅÅl m
if
ÅÅn p
(
ÅÅq r!
SetPropertyUtilityÅÅr Ñ
.ÅÅÑ Ö
SetColorÅÅÖ ç
(ÅÅç é
refÅÅé ë
m_CaretColorÅÅí û
,ÅÅû ü
valueÅÅ† •
)ÅÅ• ¶
)ÅÅ¶ ß#
MarkGeometryAsDirtyÅÅ® ª
(ÅÅª º
)ÅÅº Ω
;ÅÅΩ æ
}ÅÅø ¿
}ÅÅ¡ ¬
public
ÉÉ 
bool
ÉÉ 
customCaretColor
ÉÉ $
{
ÉÉ% &
get
ÉÉ' *
{
ÉÉ+ ,
return
ÉÉ- 3 
m_CustomCaretColor
ÉÉ4 F
;
ÉÉF G
}
ÉÉH I
set
ÉÉJ M
{
ÉÉN O
if
ÉÉP R
(
ÉÉS T 
m_CustomCaretColor
ÉÉT f
!=
ÉÉg i
value
ÉÉj o
)
ÉÉo p
{
ÉÉq r!
m_CustomCaretColorÉÉs Ö
=ÉÉÜ á
valueÉÉà ç
;ÉÉç é#
MarkGeometryAsDirtyÉÉè ¢
(ÉÉ¢ £
)ÉÉ£ §
;ÉÉ§ •
}ÉÉ¶ ß
}ÉÉ® ©
}ÉÉ™ ´
public
ÖÖ 
Color
ÖÖ 
selectionColor
ÖÖ #
{
ÖÖ$ %
get
ÖÖ& )
{
ÖÖ* +
return
ÖÖ, 2
m_SelectionColor
ÖÖ3 C
;
ÖÖC D
}
ÖÖE F
set
ÖÖG J
{
ÖÖK L
if
ÖÖM O
(
ÖÖP Q 
SetPropertyUtility
ÖÖQ c
.
ÖÖc d
SetColor
ÖÖd l
(
ÖÖl m
ref
ÖÖm p
m_SelectionColorÖÖq Å
,ÖÖÅ Ç
valueÖÖÉ à
)ÖÖà â
)ÖÖâ ä#
MarkGeometryAsDirtyÖÖã û
(ÖÖû ü
)ÖÖü †
;ÖÖ† °
}ÖÖ¢ £
}ÖÖ§ •
public
áá 
SubmitEvent
áá 
	onEndEdit
áá $
{
áá% &
get
áá' *
{
áá+ ,
return
áá- 3
m_OnEndEdit
áá4 ?
;
áá? @
}
ááA B
set
ááC F
{
ááG H 
SetPropertyUtility
ááI [
.
áá[ \
SetClass
áá\ d
(
áád e
ref
ááe h
m_OnEndEdit
áái t
,
áát u
value
ááv {
)
áá{ |
;
áá| }
}
áá~ 
}ááÄ Å
public
ââ 
SubmitEvent
ââ 
onSubmit
ââ #
{
ââ$ %
get
ââ& )
{
ââ* +
return
ââ, 2

m_OnSubmit
ââ3 =
;
ââ= >
}
ââ? @
set
ââA D
{
ââE F 
SetPropertyUtility
ââG Y
.
ââY Z
SetClass
ââZ b
(
ââb c
ref
ââc f

m_OnSubmit
ââg q
,
ââq r
value
ââs x
)
ââx y
;
âây z
}
ââ{ |
}
ââ} ~
public
ãã 
SelectionEvent
ãã 
onSelect
ãã &
{
ãã' (
get
ãã) ,
{
ãã- .
return
ãã/ 5

m_OnSelect
ãã6 @
;
ãã@ A
}
ããB C
set
ããD G
{
ããH I 
SetPropertyUtility
ããJ \
.
ãã\ ]
SetClass
ãã] e
(
ããe f
ref
ããf i

m_OnSelect
ããj t
,
ããt u
value
ããv {
)
ãã{ |
;
ãã| }
}
ãã~ 
}ããÄ Å
public
çç 
SelectionEvent
çç 

onDeselect
çç (
{
çç) *
get
çç+ .
{
çç/ 0
return
çç1 7
m_OnDeselect
çç8 D
;
ççD E
}
ççF G
set
ççH K
{
ççL M 
SetPropertyUtility
ççN `
.
çç` a
SetClass
çça i
(
ççi j
ref
ççj m
m_OnDeselect
ççn z
,
ççz {
valueçç| Å
)ççÅ Ç
;ççÇ É
}ççÑ Ö
}ççÜ á
public
èè  
TextSelectionEvent
èè !
onTextSelection
èè" 1
{
èè2 3
get
èè4 7
{
èè8 9
return
èè: @
m_OnTextSelection
èèA R
;
èèR S
}
èèT U
set
èèV Y
{
èèZ [ 
SetPropertyUtility
èè\ n
.
èèn o
SetClass
èèo w
(
èèw x
ref
èèx { 
m_OnTextSelectionèè| ç
,èèç é
valueèèè î
)èèî ï
;èèï ñ
}èèó ò
}èèô ö
public
ëë  
TextSelectionEvent
ëë ! 
onEndTextSelection
ëë" 4
{
ëë5 6
get
ëë7 :
{
ëë; <
return
ëë= C"
m_OnEndTextSelection
ëëD X
;
ëëX Y
}
ëëZ [
set
ëë\ _
{
ëë` a 
SetPropertyUtility
ëëb t
.
ëët u
SetClass
ëëu }
(
ëë} ~
refëë~ Å$
m_OnEndTextSelectionëëÇ ñ
,ëëñ ó
valueëëò ù
)ëëù û
;ëëû ü
}ëë† °
}ëë¢ £
public
ìì 
OnChangeEvent
ìì 
onValueChanged
ìì +
{
ìì, -
get
ìì. 1
{
ìì2 3
return
ìì4 :
m_OnValueChanged
ìì; K
;
ììK L
}
ììM N
set
ììO R
{
ììS T 
SetPropertyUtility
ììU g
.
ììg h
SetClass
ììh p
(
ììp q
ref
ììq t
m_OnValueChangedììu Ö
,ììÖ Ü
valueììá å
)ììå ç
;ììç é
}ììè ê
}ììë í
public
ïï &
TouchScreenKeyboardEvent
ïï '0
"onTouchScreenKeyboardStatusChanged
ïï( J
{
ïïK L
get
ïïM P
{
ïïQ R
return
ïïS Y2
$m_OnTouchScreenKeyboardStatusChanged
ïïZ ~
;
ïï~ 
}ïïÄ Å
setïïÇ Ö
{ïïÜ á"
SetPropertyUtilityïïà ö
.ïïö õ
SetClassïïõ £
(ïï£ §
refïï§ ß4
$m_OnTouchScreenKeyboardStatusChangedïï® Ã
,ïïÃ Õ
valueïïŒ ”
)ïï” ‘
;ïï‘ ’
}ïï÷ ◊
}ïïÿ Ÿ
public
óó 
OnValidateInput
óó 
onValidateInput
óó .
{
óó/ 0
get
óó1 4
{
óó5 6
return
óó7 =
m_OnValidateInput
óó> O
;
óóO P
}
óóQ R
set
óóS V
{
óóW X 
SetPropertyUtility
óóY k
.
óók l
SetClass
óól t
(
óót u
ref
óóu x 
m_OnValidateInputóóy ä
,óóä ã
valueóóå ë
)óóë í
;óóí ì
}óóî ï
}óóñ ó
public
ôô 
int
ôô 
characterLimit
ôô !
{
öö 	
get
õõ 
{
õõ 
return
õõ 
m_CharacterLimit
õõ )
;
õõ) *
}
õõ+ ,
set
úú 
{
ùù 
if
ûû 
(
ûû  
SetPropertyUtility
ûû &
.
ûû& '
	SetStruct
ûû' 0
(
ûû0 1
ref
ûû1 4
m_CharacterLimit
ûû5 E
,
ûûE F
Math
ûûG K
.
ûûK L
Max
ûûL O
(
ûûO P
$num
ûûP Q
,
ûûQ R
value
ûûS X
)
ûûX Y
)
ûûY Z
)
ûûZ [
{
üü 
UpdateLabel
†† 
(
††  
)
††  !
;
††! "
if
°° 
(
°° 
m_SoftKeyboard
°° &
!=
°°' )
null
°°* .
)
°°. /
m_SoftKeyboard
¢¢ &
.
¢¢& '
characterLimit
¢¢' 5
=
¢¢6 7
value
¢¢8 =
;
¢¢= >
}
££ 
}
§§ 
}
•• 	
public
¨¨ 
float
¨¨ 
	pointSize
¨¨ 
{
≠≠ 	
get
ÆÆ 
{
ÆÆ 
return
ÆÆ 
m_GlobalPointSize
ÆÆ *
;
ÆÆ* +
}
ÆÆ, -
set
ØØ 
{
∞∞ 
if
±± 
(
±±  
SetPropertyUtility
±± &
.
±±& '
	SetStruct
±±' 0
(
±±0 1
ref
±±1 4
m_GlobalPointSize
±±5 F
,
±±F G
Math
±±H L
.
±±L M
Max
±±M P
(
±±P Q
$num
±±Q R
,
±±R S
value
±±T Y
)
±±Y Z
)
±±Z [
)
±±[ \
{
≤≤  
SetGlobalPointSize
≥≥ &
(
≥≥& '
m_GlobalPointSize
≥≥' 8
)
≥≥8 9
;
≥≥9 :
UpdateLabel
¥¥ 
(
¥¥  
)
¥¥  !
;
¥¥! "
}
µµ 
}
∂∂ 
}
∑∑ 	
public
ºº 
TMP_FontAsset
ºº 
	fontAsset
ºº &
{
ΩΩ 	
get
ææ 
{
ææ 
return
ææ 
m_GlobalFontAsset
ææ *
;
ææ* +
}
ææ, -
set
øø 
{
¿¿ 
if
¡¡ 
(
¡¡  
SetPropertyUtility
¡¡ &
.
¡¡& '
SetClass
¡¡' /
(
¡¡/ 0
ref
¡¡0 3
m_GlobalFontAsset
¡¡4 E
,
¡¡E F
value
¡¡G L
)
¡¡L M
)
¡¡M N
{
¬¬  
SetGlobalFontAsset
√√ &
(
√√& '
m_GlobalFontAsset
√√' 8
)
√√8 9
;
√√9 :
UpdateLabel
ƒƒ 
(
ƒƒ  
)
ƒƒ  !
;
ƒƒ! "
}
≈≈ 
}
∆∆ 
}
«« 	
[
»» 	
SerializeField
»»	 
]
»» 
	protected
…… 
TMP_FontAsset
…… 
m_GlobalFontAsset
……  1
;
……1 2
public
ŒŒ 
bool
ŒŒ 
onFocusSelectAll
ŒŒ $
{
œœ 	
get
–– 
{
–– 
return
––  
m_OnFocusSelectAll
–– +
;
––+ ,
}
––- .
set
—— 
{
——  
m_OnFocusSelectAll
—— $
=
——% &
value
——' ,
;
——, -
}
——. /
}
““ 	
[
”” 	
SerializeField
””	 
]
”” 
	protected
‘‘ 
bool
‘‘  
m_OnFocusSelectAll
‘‘ )
=
‘‘* +
true
‘‘, 0
;
‘‘0 1
	protected
’’ 
bool
’’ 
m_isSelectAll
’’ $
;
’’$ %
public
⁄⁄ 
bool
⁄⁄ !
resetOnDeActivation
⁄⁄ '
{
€€ 	
get
‹‹ 
{
‹‹ 
return
‹‹ #
m_ResetOnDeActivation
‹‹ .
;
‹‹. /
}
‹‹0 1
set
›› 
{
›› #
m_ResetOnDeActivation
›› '
=
››( )
value
››* /
;
››/ 0
}
››1 2
}
ﬁﬁ 	
[
ﬂﬂ 	
SerializeField
ﬂﬂ	 
]
ﬂﬂ 
	protected
‡‡ 
bool
‡‡ #
m_ResetOnDeActivation
‡‡ ,
=
‡‡- .
true
‡‡/ 3
;
‡‡3 4
private
·· 
bool
·· $
m_SelectionStillActive
·· +
=
··, -
false
··. 3
;
··3 4
private
‚‚ 
bool
‚‚  
m_ReleaseSelection
‚‚ '
=
‚‚( )
false
‚‚* /
;
‚‚/ 0
private
‰‰ 

GameObject
‰‰ (
m_PreviouslySelectedObject
‰‰ 5
;
‰‰5 6
public
ÈÈ 
bool
ÈÈ )
restoreOriginalTextOnEscape
ÈÈ /
{
ÍÍ 	
get
ÎÎ 
{
ÎÎ 
return
ÎÎ +
m_RestoreOriginalTextOnEscape
ÎÎ 6
;
ÎÎ6 7
}
ÎÎ8 9
set
ÏÏ 
{
ÏÏ +
m_RestoreOriginalTextOnEscape
ÏÏ /
=
ÏÏ0 1
value
ÏÏ2 7
;
ÏÏ7 8
}
ÏÏ9 :
}
ÌÌ 	
[
ÓÓ 	
SerializeField
ÓÓ	 
]
ÓÓ 
private
ÔÔ 
bool
ÔÔ +
m_RestoreOriginalTextOnEscape
ÔÔ 2
=
ÔÔ3 4
true
ÔÔ5 9
;
ÔÔ9 :
public
ÙÙ 
bool
ÙÙ &
isRichTextEditingAllowed
ÙÙ ,
{
ıı 	
get
ˆˆ 
{
ˆˆ 
return
ˆˆ (
m_isRichTextEditingAllowed
ˆˆ 3
;
ˆˆ3 4
}
ˆˆ5 6
set
˜˜ 
{
˜˜ (
m_isRichTextEditingAllowed
˜˜ ,
=
˜˜- .
value
˜˜/ 4
;
˜˜4 5
}
˜˜6 7
}
¯¯ 	
[
˘˘ 	
SerializeField
˘˘	 
]
˘˘ 
	protected
˙˙ 
bool
˙˙ (
m_isRichTextEditingAllowed
˙˙ 1
=
˙˙2 3
false
˙˙4 9
;
˙˙9 :
public
˛˛ 
ContentType
˛˛ 
contentType
˛˛ &
{
˛˛' (
get
˛˛) ,
{
˛˛- .
return
˛˛/ 5
m_ContentType
˛˛6 C
;
˛˛C D
}
˛˛E F
set
˛˛G J
{
˛˛K L
if
˛˛M O
(
˛˛P Q 
SetPropertyUtility
˛˛Q c
.
˛˛c d
	SetStruct
˛˛d m
(
˛˛m n
ref
˛˛n q
m_ContentType
˛˛r 
,˛˛ Ä
value˛˛Å Ü
)˛˛Ü á
)˛˛á à"
EnforceContentType˛˛â õ
(˛˛õ ú
)˛˛ú ù
;˛˛ù û
}˛˛ü †
}˛˛° ¢
public
ÄÄ 
LineType
ÄÄ 
lineType
ÄÄ  
{
ÅÅ 	
get
ÇÇ 
{
ÇÇ 
return
ÇÇ 

m_LineType
ÇÇ #
;
ÇÇ# $
}
ÇÇ% &
set
ÉÉ 
{
ÑÑ 
if
ÖÖ 
(
ÖÖ  
SetPropertyUtility
ÖÖ &
.
ÖÖ& '
	SetStruct
ÖÖ' 0
(
ÖÖ0 1
ref
ÖÖ1 4

m_LineType
ÖÖ5 ?
,
ÖÖ? @
value
ÖÖA F
)
ÖÖF G
)
ÖÖG H
{
ÜÜ +
SetToCustomIfContentTypeIsNot
áá 1
(
áá1 2
ContentType
áá2 =
.
áá= >
Standard
áá> F
,
ááF G
ContentType
ááH S
.
ááS T
Autocorrected
ááT a
)
ááa b
;
ááb c&
SetTextComponentWrapMode
àà ,
(
àà, -
)
àà- .
;
àà. /
}
ââ 
}
ää 
}
ãã 	
public
êê 
int
êê 
	lineLimit
êê 
{
ëë 	
get
íí 
{
íí 
return
íí 
m_LineLimit
íí $
;
íí$ %
}
íí& '
set
ìì 
{
îî 
if
ïï 
(
ïï 

m_LineType
ïï 
==
ïï !
LineType
ïï" *
.
ïï* +

SingleLine
ïï+ 5
)
ïï5 6
m_LineLimit
ññ 
=
ññ  !
$num
ññ" #
;
ññ# $
else
óó  
SetPropertyUtility
òò &
.
òò& '
	SetStruct
òò' 0
(
òò0 1
ref
òò1 4
m_LineLimit
òò5 @
,
òò@ A
value
òòB G
)
òòG H
;
òòH I
}
öö 
}
õõ 	
[
úú 	
SerializeField
úú	 
]
úú 
	protected
ùù 
int
ùù 
m_LineLimit
ùù !
=
ùù" #
$num
ùù$ %
;
ùù% &
public
üü 
	InputType
üü 
	inputType
üü "
{
üü# $
get
üü% (
{
üü) *
return
üü+ 1
m_InputType
üü2 =
;
üü= >
}
üü? @
set
üüA D
{
üüE F
if
üüG I
(
üüJ K 
SetPropertyUtility
üüK ]
.
üü] ^
	SetStruct
üü^ g
(
üüg h
ref
üüh k
m_InputType
üül w
,
üüw x
value
üüy ~
)
üü~ 
)üü Ä
SetToCustomüüÅ å
(üüå ç
)üüç é
;üüé è
}üüê ë
}üüí ì
public
°° %
TouchScreenKeyboardType
°° &
keyboardType
°°' 3
{
¢¢ 	
get
££ 
{
££ 
return
££ 
m_KeyboardType
££ '
;
££' (
}
££) *
set
§§ 
{
•• 
if
¶¶ 
(
¶¶  
SetPropertyUtility
¶¶ &
.
¶¶& '
	SetStruct
¶¶' 0
(
¶¶0 1
ref
¶¶1 4
m_KeyboardType
¶¶5 C
,
¶¶C D
value
¶¶E J
)
¶¶J K
)
¶¶K L
SetToCustom
ßß 
(
ßß  
)
ßß  !
;
ßß! "
}
®® 
}
©© 	
public
´´ !
CharacterValidation
´´ "!
characterValidation
´´# 6
{
´´7 8
get
´´9 <
{
´´= >
return
´´? E#
m_CharacterValidation
´´F [
;
´´[ \
}
´´] ^
set
´´_ b
{
´´c d
if
´´e g
(
´´h i 
SetPropertyUtility
´´i {
.
´´{ |
	SetStruct´´| Ö
(´´Ö Ü
ref´´Ü â%
m_CharacterValidation´´ä ü
,´´ü †
value´´° ¶
)´´¶ ß
)´´ß ®
SetToCustom´´© ¥
(´´¥ µ
)´´µ ∂
;´´∂ ∑
}´´∏ π
}´´∫ ª
public
∞∞  
TMP_InputValidator
∞∞ !
inputValidator
∞∞" 0
{
±± 	
get
≤≤ 
{
≤≤ 
return
≤≤ 
m_InputValidator
≤≤ )
;
≤≤) *
}
≤≤+ ,
set
≥≥ 
{
≥≥ 
if
≥≥ 
(
≥≥  
SetPropertyUtility
≥≥ )
.
≥≥) *
SetClass
≥≥* 2
(
≥≥2 3
ref
≥≥3 6
m_InputValidator
≥≥7 G
,
≥≥G H
value
≥≥I N
)
≥≥N O
)
≥≥O P
SetToCustom
≥≥Q \
(
≥≥\ ]!
CharacterValidation
≥≥] p
.
≥≥p q
CustomValidator≥≥q Ä
)≥≥Ä Å
;≥≥Å Ç
}≥≥É Ñ
}
¥¥ 	
[
µµ 	
SerializeField
µµ	 
]
µµ 
	protected
∂∂  
TMP_InputValidator
∂∂ $
m_InputValidator
∂∂% 5
=
∂∂6 7
null
∂∂8 <
;
∂∂< =
public
∏∏ 
bool
∏∏ 
readOnly
∏∏ 
{
∏∏ 
get
∏∏ "
{
∏∏# $
return
∏∏% +

m_ReadOnly
∏∏, 6
;
∏∏6 7
}
∏∏8 9
set
∏∏: =
{
∏∏> ?

m_ReadOnly
∏∏@ J
=
∏∏K L
value
∏∏M R
;
∏∏R S
}
∏∏T U
}
∏∏V W
public
∫∫ 
bool
∫∫ 
richText
∫∫ 
{
∫∫ 
get
∫∫ "
{
∫∫# $
return
∫∫% +

m_RichText
∫∫, 6
;
∫∫6 7
}
∫∫8 9
set
∫∫: =
{
∫∫> ?

m_RichText
∫∫@ J
=
∫∫K L
value
∫∫M R
;
∫∫R S*
SetTextComponentRichTextMode
∫∫T p
(
∫∫p q
)
∫∫q r
;
∫∫r s
}
∫∫t u
}
∫∫v w
public
ΩΩ 
bool
ΩΩ 
	multiLine
ΩΩ 
{
ΩΩ 
get
ΩΩ  #
{
ΩΩ$ %
return
ΩΩ& ,

m_LineType
ΩΩ- 7
==
ΩΩ8 :
LineType
ΩΩ; C
.
ΩΩC D
MultiLineNewline
ΩΩD T
||
ΩΩU W
lineType
ΩΩX `
==
ΩΩa c
LineType
ΩΩd l
.
ΩΩl m
MultiLineSubmit
ΩΩm |
;
ΩΩ| }
}
ΩΩ~ 
}ΩΩÄ Å
public
øø 
char
øø 
asteriskChar
øø  
{
øø! "
get
øø# &
{
øø' (
return
øø) /
m_AsteriskChar
øø0 >
;
øø> ?
}
øø@ A
set
øøB E
{
øøF G
if
øøH J
(
øøK L 
SetPropertyUtility
øøL ^
.
øø^ _
	SetStruct
øø_ h
(
øøh i
ref
øøi l
m_AsteriskChar
øøm {
,
øø{ |
valueøø} Ç
)øøÇ É
)øøÉ Ñ
UpdateLabeløøÖ ê
(øøê ë
)øøë í
;øøí ì
}øøî ï
}øøñ ó
public
¿¿ 
bool
¿¿ 
wasCanceled
¿¿ 
{
¿¿  !
get
¿¿" %
{
¿¿& '
return
¿¿( .
m_WasCanceled
¿¿/ <
;
¿¿< =
}
¿¿> ?
}
¿¿@ A
	protected
√√ 
void
√√ 
ClampStringPos
√√ %
(
√√% &
ref
√√& )
int
√√* -
pos
√√. 1
)
√√1 2
{
ƒƒ 	
if
≈≈ 
(
≈≈ 
pos
≈≈ 
<
≈≈ 
$num
≈≈ 
)
≈≈ 
pos
∆∆ 
=
∆∆ 
$num
∆∆ 
;
∆∆ 
else
«« 
if
«« 
(
«« 
pos
«« 
>
«« 
text
«« 
.
««  
Length
««  &
)
««& '
pos
»» 
=
»» 
text
»» 
.
»» 
Length
»» !
;
»»! "
}
…… 	
	protected
ÀÀ 
void
ÀÀ 
ClampCaretPos
ÀÀ $
(
ÀÀ$ %
ref
ÀÀ% (
int
ÀÀ) ,
pos
ÀÀ- 0
)
ÀÀ0 1
{
ÃÃ 	
if
ÕÕ 
(
ÕÕ 
pos
ÕÕ 
<
ÕÕ 
$num
ÕÕ 
)
ÕÕ 
pos
ŒŒ 
=
ŒŒ 
$num
ŒŒ 
;
ŒŒ 
else
œœ 
if
œœ 
(
œœ 
pos
œœ 
>
œœ 
m_TextComponent
œœ *
.
œœ* +
textInfo
œœ+ 3
.
œœ3 4
characterCount
œœ4 B
-
œœC D
$num
œœE F
)
œœF G
pos
–– 
=
–– 
m_TextComponent
–– %
.
––% &
textInfo
––& .
.
––. /
characterCount
––/ =
-
––> ?
$num
––@ A
;
––A B
}
—— 	
	protected
ÿÿ 
int
ÿÿ #
caretPositionInternal
ÿÿ +
{
ÿÿ, -
get
ÿÿ. 1
{
ÿÿ2 3
return
ÿÿ4 :
m_CaretPosition
ÿÿ; J
+
ÿÿK L
compositionLength
ÿÿM ^
;
ÿÿ^ _
}
ÿÿ` a
set
ÿÿb e
{
ÿÿf g
m_CaretPosition
ÿÿh w
=
ÿÿx y
value
ÿÿz 
;ÿÿ Ä
ClampCaretPosÿÿÅ é
(ÿÿé è
refÿÿè í
m_CaretPositionÿÿì ¢
)ÿÿ¢ £
;ÿÿ£ §
}ÿÿ• ¶
}ÿÿß ®
	protected
ŸŸ 
int
ŸŸ $
stringPositionInternal
ŸŸ ,
{
ŸŸ- .
get
ŸŸ/ 2
{
ŸŸ3 4
return
ŸŸ5 ;
m_StringPosition
ŸŸ< L
+
ŸŸM N
compositionLength
ŸŸO `
;
ŸŸ` a
}
ŸŸb c
set
ŸŸd g
{
ŸŸh i
m_StringPosition
ŸŸj z
=
ŸŸ{ |
valueŸŸ} Ç
;ŸŸÇ É
ClampStringPosŸŸÑ í
(ŸŸí ì
refŸŸì ñ 
m_StringPositionŸŸó ß
)ŸŸß ®
;ŸŸ® ©
}ŸŸ™ ´
}ŸŸ¨ ≠
	protected
€€ 
int
€€ )
caretSelectPositionInternal
€€ 1
{
€€2 3
get
€€4 7
{
€€8 9
return
€€: @#
m_CaretSelectPosition
€€A V
+
€€W X
compositionLength
€€Y j
;
€€j k
}
€€l m
set
€€n q
{
€€r s$
m_CaretSelectPosition€€t â
=€€ä ã
value€€å ë
;€€ë í
ClampCaretPos€€ì †
(€€† °
ref€€° §%
m_CaretSelectPosition€€• ∫
)€€∫ ª
;€€ª º
}€€Ω æ
}€€ø ¿
	protected
‹‹ 
int
‹‹ *
stringSelectPositionInternal
‹‹ 2
{
‹‹3 4
get
‹‹5 8
{
‹‹9 :
return
‹‹; A$
m_StringSelectPosition
‹‹B X
+
‹‹Y Z
compositionLength
‹‹[ l
;
‹‹l m
}
‹‹n o
set
‹‹p s
{
‹‹t u%
m_StringSelectPosition‹‹v å
=‹‹ç é
value‹‹è î
;‹‹î ï
ClampStringPos‹‹ñ §
(‹‹§ •
ref‹‹• ®&
m_StringSelectPosition‹‹© ø
)‹‹ø ¿
;‹‹¿ ¡
}‹‹¬ √
}‹‹ƒ ≈
private
ﬁﬁ 
bool
ﬁﬁ 
hasSelection
ﬁﬁ !
{
ﬁﬁ" #
get
ﬁﬁ$ '
{
ﬁﬁ( )
return
ﬁﬁ* 0$
stringPositionInternal
ﬁﬁ1 G
!=
ﬁﬁH J*
stringSelectPositionInternal
ﬁﬁK g
;
ﬁﬁg h
}
ﬁﬁi j
}
ﬁﬁk l
private
ﬂﬂ 
bool
ﬂﬂ 
m_isSelected
ﬂﬂ !
;
ﬂﬂ! "
private
‡‡ 
bool
‡‡ %
m_IsStringPositionDirty
‡‡ ,
;
‡‡, -
private
·· 
bool
·· $
m_IsCaretPositionDirty
·· +
;
··+ ,
private
‚‚ 
bool
‚‚ ,
m_forceRectTransformAdjustment
‚‚ 3
;
‚‚3 4
public
ËË 
int
ËË 
caretPosition
ËË  
{
ÈÈ 	
get
ÍÍ 
{
ÍÍ 
return
ÍÍ )
caretSelectPositionInternal
ÍÍ 4
;
ÍÍ4 5
}
ÍÍ6 7
set
ÎÎ 
{
ÎÎ %
selectionAnchorPosition
ÎÎ )
=
ÎÎ* +
value
ÎÎ, 1
;
ÎÎ1 2$
selectionFocusPosition
ÎÎ3 I
=
ÎÎJ K
value
ÎÎL Q
;
ÎÎQ R%
m_IsStringPositionDirty
ÎÎS j
=
ÎÎk l
true
ÎÎm q
;
ÎÎq r
}
ÎÎs t
}
ÏÏ 	
public
ÚÚ 
int
ÚÚ %
selectionAnchorPosition
ÚÚ *
{
ÛÛ 	
get
ÙÙ 
{
ıı 
return
ˆˆ #
caretPositionInternal
ˆˆ ,
;
ˆˆ, -
}
˜˜ 
set
˘˘ 
{
˙˙ 
if
˚˚ 
(
˚˚ 
compositionLength
˚˚ %
!=
˚˚& (
$num
˚˚) *
)
˚˚* +
return
¸¸ 
;
¸¸ #
caretPositionInternal
˛˛ %
=
˛˛& '
value
˛˛( -
;
˛˛- .%
m_IsStringPositionDirty
ˇˇ '
=
ˇˇ( )
true
ˇˇ* .
;
ˇˇ. /
}
ÄÄ 
}
ÅÅ 	
public
áá 
int
áá $
selectionFocusPosition
áá )
{
àà 	
get
ââ 
{
ää 
return
ãã )
caretSelectPositionInternal
ãã 2
;
ãã2 3
}
åå 
set
çç 
{
éé 
if
èè 
(
èè 
compositionLength
èè %
!=
èè& (
$num
èè) *
)
èè* +
return
êê 
;
êê )
caretSelectPositionInternal
íí +
=
íí, -
value
íí. 3
;
íí3 4%
m_IsStringPositionDirty
ìì '
=
ìì( )
true
ìì* .
;
ìì. /
}
îî 
}
ïï 	
public
õõ 
int
õõ 
stringPosition
õõ !
{
úú 	
get
ùù 
{
ùù 
return
ùù *
stringSelectPositionInternal
ùù 5
;
ùù5 6
}
ùù7 8
set
ûû 
{
ûû +
selectionStringAnchorPosition
ûû /
=
ûû0 1
value
ûû2 7
;
ûû7 8*
selectionStringFocusPosition
ûû9 U
=
ûûV W
value
ûûX ]
;
ûû] ^$
m_IsCaretPositionDirty
ûû_ u
=
ûûv w
true
ûûx |
;
ûû| }
}
ûû~ 
}
üü 	
public
•• 
int
•• +
selectionStringAnchorPosition
•• 0
{
¶¶ 	
get
ßß 
{
®® 
return
©© $
stringPositionInternal
©© -
;
©©- .
}
™™ 
set
¨¨ 
{
≠≠ 
if
ÆÆ 
(
ÆÆ 
compositionLength
ÆÆ %
!=
ÆÆ& (
$num
ÆÆ) *
)
ÆÆ* +
return
ØØ 
;
ØØ $
stringPositionInternal
±± &
=
±±' (
value
±±) .
;
±±. /$
m_IsCaretPositionDirty
≤≤ &
=
≤≤' (
true
≤≤) -
;
≤≤- .
}
≥≥ 
}
¥¥ 	
public
∫∫ 
int
∫∫ *
selectionStringFocusPosition
∫∫ /
{
ªª 	
get
ºº 
{
ΩΩ 
return
ææ *
stringSelectPositionInternal
ææ 3
;
ææ3 4
}
øø 
set
¿¿ 
{
¡¡ 
if
¬¬ 
(
¬¬ 
compositionLength
¬¬ %
!=
¬¬& (
$num
¬¬) *
)
¬¬* +
return
√√ 
;
√√ *
stringSelectPositionInternal
≈≈ ,
=
≈≈- .
value
≈≈/ 4
;
≈≈4 5$
m_IsCaretPositionDirty
∆∆ &
=
∆∆' (
true
∆∆) -
;
∆∆- .
}
«« 
}
»» 	
	protected
ŒŒ 
override
ŒŒ 
void
ŒŒ 

OnValidate
ŒŒ  *
(
ŒŒ* +
)
ŒŒ+ ,
{
œœ 	
base
–– 
.
–– 

OnValidate
–– 
(
–– 
)
–– 
;
––  
EnforceContentType
—— 
(
—— 
)
——  
;
——  !
m_CharacterLimit
”” 
=
”” 
Math
”” #
.
””# $
Max
””$ '
(
””' (
$num
””( )
,
””) *
m_CharacterLimit
””+ ;
)
””; <
;
””< =
if
÷÷ 
(
÷÷ 
!
÷÷ 
IsActive
÷÷ 
(
÷÷ 
)
÷÷ 
)
÷÷ 
return
◊◊ 
;
◊◊ *
SetTextComponentRichTextMode
ŸŸ (
(
ŸŸ( )
)
ŸŸ) *
;
ŸŸ* +
UpdateLabel
€€ 
(
€€ 
)
€€ 
;
€€ 
if
›› 
(
›› 
m_AllowInput
›› 
)
›› 
SetCaretActive
ﬁﬁ 
(
ﬁﬁ 
)
ﬁﬁ  
;
ﬁﬁ  !
}
ﬂﬂ 	
	protected
‚‚ 
override
‚‚ 
void
‚‚ 
OnEnable
‚‚  (
(
‚‚( )
)
‚‚) *
{
„„ 	
base
ÊÊ 
.
ÊÊ 
OnEnable
ÊÊ 
(
ÊÊ 
)
ÊÊ 
;
ÊÊ 
if
ËË 
(
ËË 
m_Text
ËË 
==
ËË 
null
ËË 
)
ËË 
m_Text
ÈÈ 
=
ÈÈ 
string
ÈÈ 
.
ÈÈ  
Empty
ÈÈ  %
;
ÈÈ% &
ILayoutController
ÏÏ 
layoutController
ÏÏ .
=
ÏÏ/ 0
GetComponent
ÏÏ1 =
<
ÏÏ= >
ILayoutController
ÏÏ> O
>
ÏÏO P
(
ÏÏP Q
)
ÏÏQ R
;
ÏÏR S
if
ÓÓ 
(
ÓÓ 
layoutController
ÓÓ  
!=
ÓÓ! #
null
ÓÓ$ (
)
ÓÓ( )
{
ÔÔ *
m_IsDrivenByLayoutComponents
 ,
=
- .
true
/ 3
;
3 4
m_LayoutGroup
ÒÒ 
=
ÒÒ 
GetComponent
ÒÒ  ,
<
ÒÒ, -
LayoutGroup
ÒÒ- 8
>
ÒÒ8 9
(
ÒÒ9 :
)
ÒÒ: ;
;
ÒÒ; <
}
ÚÚ 
else
ÛÛ *
m_IsDrivenByLayoutComponents
ÙÙ ,
=
ÙÙ- .
false
ÙÙ/ 4
;
ÙÙ4 5
if
ˆˆ 
(
ˆˆ 
Application
ˆˆ 
.
ˆˆ 
	isPlaying
ˆˆ %
)
ˆˆ% &
{
˜˜ 
if
¯¯ 
(
¯¯ #
m_CachedInputRenderer
¯¯ )
==
¯¯* ,
null
¯¯- 1
&&
¯¯2 4
m_TextComponent
¯¯5 D
!=
¯¯E G
null
¯¯H L
)
¯¯L M
{
˘˘ 

GameObject
˙˙ 
go
˙˙ !
=
˙˙" #
new
˙˙$ '

GameObject
˙˙( 2
(
˙˙2 3
$str
˙˙3 :
,
˙˙: ;
typeof
˙˙< B
(
˙˙B C 
TMP_SelectionCaret
˙˙C U
)
˙˙U V
)
˙˙V W
;
˙˙W X
go
¸¸ 
.
¸¸ 
	hideFlags
¸¸  
=
¸¸! "
	HideFlags
¸¸# ,
.
¸¸, -
DontSave
¸¸- 5
;
¸¸5 6
go
˝˝ 
.
˝˝ 
	transform
˝˝  
.
˝˝  !
	SetParent
˝˝! *
(
˝˝* +
m_TextComponent
˝˝+ :
.
˝˝: ;
	transform
˝˝; D
.
˝˝D E
parent
˝˝E K
)
˝˝K L
;
˝˝L M
go
˛˛ 
.
˛˛ 
	transform
˛˛  
.
˛˛  !
SetAsFirstSibling
˛˛! 2
(
˛˛2 3
)
˛˛3 4
;
˛˛4 5
go
ˇˇ 
.
ˇˇ 
layer
ˇˇ 
=
ˇˇ 

gameObject
ˇˇ )
.
ˇˇ) *
layer
ˇˇ* /
;
ˇˇ/ 0
caretRectTrans
ÅÅ "
=
ÅÅ# $
go
ÅÅ% '
.
ÅÅ' (
GetComponent
ÅÅ( 4
<
ÅÅ4 5
RectTransform
ÅÅ5 B
>
ÅÅB C
(
ÅÅC D
)
ÅÅD E
;
ÅÅE F#
m_CachedInputRenderer
ÇÇ )
=
ÇÇ* +
go
ÇÇ, .
.
ÇÇ. /
GetComponent
ÇÇ/ ;
<
ÇÇ; <
CanvasRenderer
ÇÇ< J
>
ÇÇJ K
(
ÇÇK L
)
ÇÇL M
;
ÇÇM N#
m_CachedInputRenderer
ÉÉ )
.
ÉÉ) *
SetMaterial
ÉÉ* 5
(
ÉÉ5 6
Graphic
ÉÉ6 =
.
ÉÉ= >$
defaultGraphicMaterial
ÉÉ> T
,
ÉÉT U
	Texture2D
ÉÉV _
.
ÉÉ_ `
whiteTexture
ÉÉ` l
)
ÉÉl m
;
ÉÉm n
go
ÜÜ 
.
ÜÜ 
AddComponent
ÜÜ #
<
ÜÜ# $
LayoutElement
ÜÜ$ 1
>
ÜÜ1 2
(
ÜÜ2 3
)
ÜÜ3 4
.
ÜÜ4 5
ignoreLayout
ÜÜ5 A
=
ÜÜB C
true
ÜÜD H
;
ÜÜH I'
AssignPositioningIfNeeded
àà -
(
àà- .
)
àà. /
;
àà/ 0
}
ââ 
}
ää 
m_RectTransform
åå 
=
åå 
GetComponent
åå *
<
åå* +
RectTransform
åå+ 8
>
åå8 9
(
åå9 :
)
åå: ;
;
åå; <
if
èè 
(
èè 
m_TextViewport
èè 
!=
èè !
null
èè" &
)
èè& '
{
êê $
m_TextViewportRectMask
ëë &
=
ëë' (
m_TextViewport
ëë) 7
.
ëë7 8
GetComponent
ëë8 D
<
ëëD E

RectMask2D
ëëE O
>
ëëO P
(
ëëP Q
)
ëëQ R
;
ëëR S
UpdateMaskRegions
ìì !
(
ìì! "
)
ìì" #
;
ìì# $
}
îî 
if
óó 
(
óó #
m_CachedInputRenderer
óó %
!=
óó& (
null
óó) -
)
óó- .#
m_CachedInputRenderer
òò %
.
òò% &
SetMaterial
òò& 1
(
òò1 2
Graphic
òò2 9
.
òò9 :$
defaultGraphicMaterial
òò: P
,
òòP Q
	Texture2D
òòR [
.
òò[ \
whiteTexture
òò\ h
)
òòh i
;
òòi j
if
öö 
(
öö 
m_TextComponent
öö 
!=
öö  "
null
öö# '
)
öö' (
{
õõ 
m_TextComponent
úú 
.
úú  +
RegisterDirtyVerticesCallback
úú  =
(
úú= >!
MarkGeometryAsDirty
úú> Q
)
úúQ R
;
úúR S
m_TextComponent
ùù 
.
ùù  +
RegisterDirtyVerticesCallback
ùù  =
(
ùù= >
UpdateLabel
ùù> I
)
ùùI J
;
ùùJ K
if
†† 
(
†† !
m_VerticalScrollbar
†† '
!=
††( *
null
††+ /
)
††/ 0
{
°° !
m_VerticalScrollbar
¢¢ '
.
¢¢' (
onValueChanged
¢¢( 6
.
¢¢6 7
AddListener
¢¢7 B
(
¢¢B C$
OnScrollbarValueChange
¢¢C Y
)
¢¢Y Z
;
¢¢Z [
}
££ 
UpdateLabel
•• 
(
•• 
)
•• 
;
•• 
}
¶¶  
TMPro_EventManager
©© 
.
©©  
TEXT_CHANGED_EVENT
©© 1
.
©©1 2
Add
©©2 5
(
©©5 6
ON_TEXT_CHANGED
©©6 E
)
©©E F
;
©©F G
}
™™ 	
	protected
¨¨ 
override
¨¨ 
void
¨¨ 
	OnDisable
¨¨  )
(
¨¨) *
)
¨¨* +
{
≠≠ 	
m_BlinkCoroutine
ØØ 
=
ØØ 
null
ØØ #
;
ØØ# $"
DeactivateInputField
±±  
(
±±  !
)
±±! "
;
±±" #
if
≤≤ 
(
≤≤ 
m_TextComponent
≤≤ 
!=
≤≤  "
null
≤≤# '
)
≤≤' (
{
≥≥ 
m_TextComponent
¥¥ 
.
¥¥  -
UnregisterDirtyVerticesCallback
¥¥  ?
(
¥¥? @!
MarkGeometryAsDirty
¥¥@ S
)
¥¥S T
;
¥¥T U
m_TextComponent
µµ 
.
µµ  -
UnregisterDirtyVerticesCallback
µµ  ?
(
µµ? @
UpdateLabel
µµ@ K
)
µµK L
;
µµL M
if
∑∑ 
(
∑∑ !
m_VerticalScrollbar
∑∑ '
!=
∑∑( *
null
∑∑+ /
)
∑∑/ 0!
m_VerticalScrollbar
∏∏ '
.
∏∏' (
onValueChanged
∏∏( 6
.
∏∏6 7
RemoveListener
∏∏7 E
(
∏∏E F$
OnScrollbarValueChange
∏∏F \
)
∏∏\ ]
;
∏∏] ^
}
∫∫ "
CanvasUpdateRegistry
ªª  
.
ªª  !/
!UnRegisterCanvasElementForRebuild
ªª! B
(
ªªB C
this
ªªC G
)
ªªG H
;
ªªH I
if
ææ 
(
ææ #
m_CachedInputRenderer
ææ %
!=
ææ& (
null
ææ) -
)
ææ- .#
m_CachedInputRenderer
øø %
.
øø% &
Clear
øø& +
(
øø+ ,
)
øø, -
;
øø- .
if
¡¡ 
(
¡¡ 
m_Mesh
¡¡ 
!=
¡¡ 
null
¡¡ 
)
¡¡ 
DestroyImmediate
¬¬  
(
¬¬  !
m_Mesh
¬¬! '
)
¬¬' (
;
¬¬( )
m_Mesh
ƒƒ 
=
ƒƒ 
null
ƒƒ 
;
ƒƒ  
TMPro_EventManager
«« 
.
««  
TEXT_CHANGED_EVENT
«« 1
.
««1 2
Remove
««2 8
(
««8 9
ON_TEXT_CHANGED
««9 H
)
««H I
;
««I J
base
…… 
.
…… 
	OnDisable
…… 
(
…… 
)
…… 
;
…… 
}
   	
private
—— 
void
—— 
ON_TEXT_CHANGED
—— $
(
——$ %
UnityEngine
——% 0
.
——0 1
Object
——1 7
obj
——8 ;
)
——; <
{
““ 	
if
”” 
(
”” 
obj
”” 
==
”” 
m_TextComponent
”” &
&&
””' )
Application
””* 5
.
””5 6
	isPlaying
””6 ?
&&
””@ B
compositionLength
””C T
==
””U W
$num
””X Y
)
””Y Z
{
‘‘ #
caretPositionInternal
’’ %
=
’’& '-
GetCaretPositionFromStringIndex
’’( G
(
’’G H$
stringPositionInternal
’’H ^
)
’’^ _
;
’’_ `)
caretSelectPositionInternal
÷÷ +
=
÷÷, --
GetCaretPositionFromStringIndex
÷÷. M
(
÷÷M N*
stringSelectPositionInternal
÷÷N j
)
÷÷j k
;
÷÷k l
}
€€ 
}
‹‹ 	
IEnumerator
ﬂﬂ 

CaretBlink
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ  
{
‡‡ 	
m_CaretVisible
‚‚ 
=
‚‚ 
true
‚‚ !
;
‚‚! "
yield
„„ 
return
„„ 
null
„„ 
;
„„ 
while
ÂÂ 
(
ÂÂ 
(
ÂÂ 
	isFocused
ÂÂ 
||
ÂÂ  $
m_SelectionStillActive
ÂÂ! 7
)
ÂÂ7 8
&&
ÂÂ9 ;
m_CaretBlinkRate
ÂÂ< L
>
ÂÂM N
$num
ÂÂO P
)
ÂÂP Q
{
ÊÊ 
float
ËË 
blinkPeriod
ËË !
=
ËË" #
$num
ËË$ &
/
ËË' (
m_CaretBlinkRate
ËË) 9
;
ËË9 :
bool
ÎÎ 

blinkState
ÎÎ 
=
ÎÎ  !
(
ÎÎ" #
Time
ÎÎ# '
.
ÎÎ' (
unscaledTime
ÎÎ( 4
-
ÎÎ5 6
m_BlinkStartTime
ÎÎ7 G
)
ÎÎG H
%
ÎÎI J
blinkPeriod
ÎÎK V
<
ÎÎW X
blinkPeriod
ÎÎY d
/
ÎÎe f
$num
ÎÎg h
;
ÎÎh i
if
ÏÏ 
(
ÏÏ 
m_CaretVisible
ÏÏ "
!=
ÏÏ# %

blinkState
ÏÏ& 0
)
ÏÏ0 1
{
ÌÌ 
m_CaretVisible
ÓÓ "
=
ÓÓ# $

blinkState
ÓÓ% /
;
ÓÓ/ 0
if
ÔÔ 
(
ÔÔ 
!
ÔÔ 
hasSelection
ÔÔ %
)
ÔÔ% &!
MarkGeometryAsDirty
 +
(
+ ,
)
, -
;
- .
}
ÒÒ 
yield
ÙÙ 
return
ÙÙ 
null
ÙÙ !
;
ÙÙ! "
}
ıı 
m_BlinkCoroutine
ˆˆ 
=
ˆˆ 
null
ˆˆ #
;
ˆˆ# $
}
˜˜ 	
void
˘˘ 
SetCaretVisible
˘˘ 
(
˘˘ 
)
˘˘ 
{
˙˙ 	
if
˚˚ 
(
˚˚ 
!
˚˚ 
m_AllowInput
˚˚ 
)
˚˚ 
return
¸¸ 
;
¸¸ 
m_CaretVisible
˛˛ 
=
˛˛ 
true
˛˛ !
;
˛˛! "
m_BlinkStartTime
ˇˇ 
=
ˇˇ 
Time
ˇˇ #
.
ˇˇ# $
unscaledTime
ˇˇ$ 0
;
ˇˇ0 1
SetCaretActive
Ä	Ä	 
(
Ä	Ä	 
)
Ä	Ä	 
;
Ä	Ä	 
}
Å	Å	 	
void
Ö	Ö	 
SetCaretActive
Ö	Ö	 
(
Ö	Ö	 
)
Ö	Ö	 
{
Ü	Ü	 	
if
á	á	 
(
á	á	 
!
á	á	 
m_AllowInput
á	á	 
)
á	á	 
return
à	à	 
;
à	à	 
if
ä	ä	 
(
ä	ä	 
m_CaretBlinkRate
ä	ä	  
>
ä	ä	! "
$num
ä	ä	# '
)
ä	ä	' (
{
ã	ã	 
if
å	å	 
(
å	å	 
m_BlinkCoroutine
å	å	 $
==
å	å	% '
null
å	å	( ,
)
å	å	, -
m_BlinkCoroutine
ç	ç	 $
=
ç	ç	% &
StartCoroutine
ç	ç	' 5
(
ç	ç	5 6

CaretBlink
ç	ç	6 @
(
ç	ç	@ A
)
ç	ç	A B
)
ç	ç	B C
;
ç	ç	C D
}
é	é	 
else
è	è	 
{
ê	ê	 
m_CaretVisible
ë	ë	 
=
ë	ë	  
true
ë	ë	! %
;
ë	ë	% &
}
í	í	 
}
ì	ì	 	
	protected
ï	ï	 
void
ï	ï	 
OnFocus
ï	ï	 
(
ï	ï	 
)
ï	ï	  
{
ñ	ñ	 	
if
ó	ó	 
(
ó	ó	  
m_OnFocusSelectAll
ó	ó	 "
)
ó	ó	" #
	SelectAll
ò	ò	 
(
ò	ò	 
)
ò	ò	 
;
ò	ò	 
}
ô	ô	 	
	protected
õ	õ	 
void
õ	õ	 
	SelectAll
õ	õ	  
(
õ	õ	  !
)
õ	õ	! "
{
ú	ú	 	
m_isSelectAll
ù	ù	 
=
ù	ù	 
true
ù	ù	  
;
ù	ù	  !$
stringPositionInternal
û	û	 "
=
û	û	# $
text
û	û	% )
.
û	û	) *
Length
û	û	* 0
;
û	û	0 1*
stringSelectPositionInternal
ü	ü	 (
=
ü	ü	) *
$num
ü	ü	+ ,
;
ü	ü	, -
}
†	†	 	
public
¶	¶	 
void
¶	¶	 
MoveTextEnd
¶	¶	 
(
¶	¶	  
bool
¶	¶	  $
shift
¶	¶	% *
)
¶	¶	* +
{
ß	ß	 	
if
®	®	 
(
®	®	 (
m_isRichTextEditingAllowed
®	®	 *
)
®	®	* +
{
©	©	 
int
™	™	 
position
™	™	 
=
™	™	 
text
™	™	 #
.
™	™	# $
Length
™	™	$ *
;
™	™	* +
if
¨	¨	 
(
¨	¨	 
shift
¨	¨	 
)
¨	¨	 
{
≠	≠	 *
stringSelectPositionInternal
Æ	Æ	 0
=
Æ	Æ	1 2
position
Æ	Æ	3 ;
;
Æ	Æ	; <
}
Ø	Ø	 
else
∞	∞	 
{
±	±	 $
stringPositionInternal
≤	≤	 *
=
≤	≤	+ ,
position
≤	≤	- 5
;
≤	≤	5 6*
stringSelectPositionInternal
≥	≥	 0
=
≥	≥	1 2$
stringPositionInternal
≥	≥	3 I
;
≥	≥	I J
}
¥	¥	 
}
µ	µ	 
else
∂	∂	 
{
∑	∑	 
int
∏	∏	 
position
∏	∏	 
=
∏	∏	 
m_TextComponent
∏	∏	 .
.
∏	∏	. /
textInfo
∏	∏	/ 7
.
∏	∏	7 8
characterCount
∏	∏	8 F
-
∏	∏	G H
$num
∏	∏	I J
;
∏	∏	J K
if
∫	∫	 
(
∫	∫	 
shift
∫	∫	 
)
∫	∫	 
{
ª	ª	 )
caretSelectPositionInternal
º	º	 /
=
º	º	0 1
position
º	º	2 :
;
º	º	: ;*
stringSelectPositionInternal
Ω	Ω	 0
=
Ω	Ω	1 2-
GetStringIndexFromCaretPosition
Ω	Ω	3 R
(
Ω	Ω	R S
position
Ω	Ω	S [
)
Ω	Ω	[ \
;
Ω	Ω	\ ]
}
æ	æ	 
else
ø	ø	 
{
¿	¿	 #
caretPositionInternal
¡	¡	 )
=
¡	¡	* +)
caretSelectPositionInternal
¡	¡	, G
=
¡	¡	H I
position
¡	¡	J R
;
¡	¡	R S*
stringSelectPositionInternal
¬	¬	 0
=
¬	¬	1 2$
stringPositionInternal
¬	¬	3 I
=
¬	¬	J K-
GetStringIndexFromCaretPosition
¬	¬	L k
(
¬	¬	k l
position
¬	¬	l t
)
¬	¬	t u
;
¬	¬	u v
}
√	√	 
}
ƒ	ƒ	 
UpdateLabel
∆	∆	 
(
∆	∆	 
)
∆	∆	 
;
∆	∆	 
}
«	«	 	
public
Õ	Õ	 
void
Õ	Õ	 
MoveTextStart
Õ	Õ	 !
(
Õ	Õ	! "
bool
Õ	Õ	" &
shift
Õ	Õ	' ,
)
Õ	Õ	, -
{
Œ	Œ	 	
if
œ	œ	 
(
œ	œ	 (
m_isRichTextEditingAllowed
œ	œ	 *
)
œ	œ	* +
{
–	–	 
int
—	—	 
position
—	—	 
=
—	—	 
$num
—	—	  
;
—	—	  !
if
”	”	 
(
”	”	 
shift
”	”	 
)
”	”	 
{
‘	‘	 *
stringSelectPositionInternal
’	’	 0
=
’	’	1 2
position
’	’	3 ;
;
’	’	; <
}
÷	÷	 
else
◊	◊	 
{
ÿ	ÿ	 $
stringPositionInternal
Ÿ	Ÿ	 *
=
Ÿ	Ÿ	+ ,
position
Ÿ	Ÿ	- 5
;
Ÿ	Ÿ	5 6*
stringSelectPositionInternal
⁄	⁄	 0
=
⁄	⁄	1 2$
stringPositionInternal
⁄	⁄	3 I
;
⁄	⁄	I J
}
€	€	 
}
‹	‹	 
else
›	›	 
{
ﬁ	ﬁ	 
int
ﬂ	ﬂ	 
position
ﬂ	ﬂ	 
=
ﬂ	ﬂ	 
$num
ﬂ	ﬂ	  
;
ﬂ	ﬂ	  !
if
·	·	 
(
·	·	 
shift
·	·	 
)
·	·	 
{
‚	‚	 )
caretSelectPositionInternal
„	„	 /
=
„	„	0 1
position
„	„	2 :
;
„	„	: ;*
stringSelectPositionInternal
‰	‰	 0
=
‰	‰	1 2-
GetStringIndexFromCaretPosition
‰	‰	3 R
(
‰	‰	R S
position
‰	‰	S [
)
‰	‰	[ \
;
‰	‰	\ ]
}
Â	Â	 
else
Ê	Ê	 
{
Á	Á	 #
caretPositionInternal
Ë	Ë	 )
=
Ë	Ë	* +)
caretSelectPositionInternal
Ë	Ë	, G
=
Ë	Ë	H I
position
Ë	Ë	J R
;
Ë	Ë	R S*
stringSelectPositionInternal
È	È	 0
=
È	È	1 2$
stringPositionInternal
È	È	3 I
=
È	È	J K-
GetStringIndexFromCaretPosition
È	È	L k
(
È	È	k l
position
È	È	l t
)
È	È	t u
;
È	È	u v
}
Í	Í	 
}
Î	Î	 
UpdateLabel
Ì	Ì	 
(
Ì	Ì	 
)
Ì	Ì	 
;
Ì	Ì	 
}
Ó	Ó	 	
public
ı	ı	 
void
ı	ı	 
MoveToEndOfLine
ı	ı	 #
(
ı	ı	# $
bool
ı	ı	$ (
shift
ı	ı	) .
,
ı	ı	. /
bool
ı	ı	0 4
ctrl
ı	ı	5 9
)
ı	ı	9 :
{
ˆ	ˆ	 	
int
¯	¯	 
currentLine
¯	¯	 
=
¯	¯	 
m_TextComponent
¯	¯	 -
.
¯	¯	- .
textInfo
¯	¯	. 6
.
¯	¯	6 7
characterInfo
¯	¯	7 D
[
¯	¯	D E#
caretPositionInternal
¯	¯	E Z
]
¯	¯	Z [
.
¯	¯	[ \

lineNumber
¯	¯	\ f
;
¯	¯	f g
int
˚	˚	 
characterIndex
˚	˚	 
=
˚	˚	  
ctrl
˚	˚	! %
==
˚	˚	& (
true
˚	˚	) -
?
˚	˚	. /
m_TextComponent
˚	˚	0 ?
.
˚	˚	? @
textInfo
˚	˚	@ H
.
˚	˚	H I
characterCount
˚	˚	I W
-
˚	˚	X Y
$num
˚	˚	Z [
:
˚	˚	\ ]
m_TextComponent
˚	˚	^ m
.
˚	˚	m n
textInfo
˚	˚	n v
.
˚	˚	v w
lineInfo
˚	˚	w 
[˚	˚	 Ä
currentLine˚	˚	Ä ã
]˚	˚	ã å
.˚	˚	å ç"
lastCharacterIndex˚	˚	ç ü
;˚	˚	ü †
int
˝	˝	 
position
˝	˝	 
=
˝	˝	 
m_TextComponent
˝	˝	 *
.
˝	˝	* +
textInfo
˝	˝	+ 3
.
˝	˝	3 4
characterInfo
˝	˝	4 A
[
˝	˝	A B
characterIndex
˝	˝	B P
]
˝	˝	P Q
.
˝	˝	Q R
index
˝	˝	R W
;
˝	˝	W X
if
ˇ	ˇ	 
(
ˇ	ˇ	 
shift
ˇ	ˇ	 
)
ˇ	ˇ	 
{
Ä
Ä
 *
stringSelectPositionInternal
Å
Å
 ,
=
Å
Å
- .
position
Å
Å
/ 7
;
Å
Å
7 8)
caretSelectPositionInternal
É
É
 +
=
É
É
, -
characterIndex
É
É
. <
;
É
É
< =
}
Ñ
Ñ
 
else
Ö
Ö
 
{
Ü
Ü
 $
stringPositionInternal
á
á
 &
=
á
á
' (
position
á
á
) 1
;
á
á
1 2*
stringSelectPositionInternal
à
à
 ,
=
à
à
- .$
stringPositionInternal
à
à
/ E
;
à
à
E F)
caretSelectPositionInternal
ä
ä
 +
=
ä
ä
, -#
caretPositionInternal
ä
ä
. C
=
ä
ä
D E
characterIndex
ä
ä
F T
;
ä
ä
T U
}
ã
ã
 
UpdateLabel
ç
ç
 
(
ç
ç
 
)
ç
ç
 
;
ç
ç
 
}
é
é
 	
public
î
î
 
void
î
î
 
MoveToStartOfLine
î
î
 %
(
î
î
% &
bool
î
î
& *
shift
î
î
+ 0
,
î
î
0 1
bool
î
î
2 6
ctrl
î
î
7 ;
)
î
î
; <
{
ï
ï
 	
int
ó
ó
 
currentLine
ó
ó
 
=
ó
ó
 
m_TextComponent
ó
ó
 -
.
ó
ó
- .
textInfo
ó
ó
. 6
.
ó
ó
6 7
characterInfo
ó
ó
7 D
[
ó
ó
D E#
caretPositionInternal
ó
ó
E Z
]
ó
ó
Z [
.
ó
ó
[ \

lineNumber
ó
ó
\ f
;
ó
ó
f g
int
ö
ö
 
characterIndex
ö
ö
 
=
ö
ö
  
ctrl
ö
ö
! %
==
ö
ö
& (
true
ö
ö
) -
?
ö
ö
. /
$num
ö
ö
0 1
:
ö
ö
2 3
m_TextComponent
ö
ö
4 C
.
ö
ö
C D
textInfo
ö
ö
D L
.
ö
ö
L M
lineInfo
ö
ö
M U
[
ö
ö
U V
currentLine
ö
ö
V a
]
ö
ö
a b
.
ö
ö
b c!
firstCharacterIndex
ö
ö
c v
;
ö
ö
v w
int
ú
ú
 
position
ú
ú
 
=
ú
ú
 
$num
ú
ú
 
;
ú
ú
 
if
ù
ù
 
(
ù
ù
 
characterIndex
ù
ù
 
>
ù
ù
  
$num
ù
ù
! "
)
ù
ù
" #
position
û
û
 
=
û
û
 
m_TextComponent
û
û
 *
.
û
û
* +
textInfo
û
û
+ 3
.
û
û
3 4
characterInfo
û
û
4 A
[
û
û
A B
characterIndex
û
û
B P
-
û
û
Q R
$num
û
û
S T
]
û
û
T U
.
û
û
U V
index
û
û
V [
+
û
û
\ ]
m_TextComponent
û
û
^ m
.
û
û
m n
textInfo
û
û
n v
.
û
û
v w
characterInfoû
û
w Ñ
[û
û
Ñ Ö
characterIndexû
û
Ö ì
-û
û
î ï
$numû
û
ñ ó
]û
û
ó ò
.û
û
ò ô
stringLengthû
û
ô •
;û
û
• ¶
if
†
†
 
(
†
†
 
shift
†
†
 
)
†
†
 
{
°
°
 *
stringSelectPositionInternal
¢
¢
 ,
=
¢
¢
- .
position
¢
¢
/ 7
;
¢
¢
7 8)
caretSelectPositionInternal
§
§
 +
=
§
§
, -
characterIndex
§
§
. <
;
§
§
< =
}
•
•
 
else
¶
¶
 
{
ß
ß
 $
stringPositionInternal
®
®
 &
=
®
®
' (
position
®
®
) 1
;
®
®
1 2*
stringSelectPositionInternal
©
©
 ,
=
©
©
- .$
stringPositionInternal
©
©
/ E
;
©
©
E F)
caretSelectPositionInternal
´
´
 +
=
´
´
, -#
caretPositionInternal
´
´
. C
=
´
´
D E
characterIndex
´
´
F T
;
´
´
T U
}
¨
¨
 
UpdateLabel
Æ
Æ
 
(
Æ
Æ
 
)
Æ
Æ
 
;
Æ
Æ
 
}
Ø
Ø
 	
static
≤
≤
 
string
≤
≤
 
	clipboard
≤
≤
 
{
≥
≥
 	
get
¥
¥
 
{
µ
µ
 
return
∂
∂
 

GUIUtility
∂
∂
 !
.
∂
∂
! "
systemCopyBuffer
∂
∂
" 2
;
∂
∂
2 3
}
∑
∑
 
set
∏
∏
 
{
π
π
 

GUIUtility
∫
∫
 
.
∫
∫
 
systemCopyBuffer
∫
∫
 +
=
∫
∫
, -
value
∫
∫
. 3
;
∫
∫
3 4
}
ª
ª
 
}
º
º
 	
private
æ
æ
 
bool
æ
æ
 
InPlaceEditing
æ
æ
 #
(
æ
æ
# $
)
æ
æ
$ %
{
ø
ø
 	
if
¿
¿
 
(
¿
¿
 1
#m_TouchKeyboardAllowsInPlaceEditing
¿
¿
 3
||
¿
¿
4 6
(
¿
¿
7 8!
TouchScreenKeyboard
¿
¿
8 K
.
¿
¿
K L
isSupported
¿
¿
L W
&&
¿
¿
X Z
(
¿
¿
[ \
Application
¿
¿
\ g
.
¿
¿
g h
platform
¿
¿
h p
==
¿
¿
q s
RuntimePlatform¿
¿
t É
.¿
¿
É Ñ
WSAPlayerX86¿
¿
Ñ ê
||¿
¿
ë ì
Application¿
¿
î ü
.¿
¿
ü †
platform¿
¿
† ®
==¿
¿
© ´
RuntimePlatform¿
¿
¨ ª
.¿
¿
ª º
WSAPlayerX64¿
¿
º »
||¿
¿
… À
Application¿
¿
Ã ◊
.¿
¿
◊ ÿ
platform¿
¿
ÿ ‡
==¿
¿
· „
RuntimePlatform¿
¿
‰ Û
.¿
¿
Û Ù
WSAPlayerARM¿
¿
Ù Ä
)¿
¿
Ä Å
)¿
¿
Å Ç
)¿
¿
Ç É
return
¡
¡
 
true
¡
¡
 
;
¡
¡
 
if
√
√
 
(
√
√
 !
TouchScreenKeyboard
√
√
 #
.
√
√
# $
isSupported
√
√
$ /
&&
√
√
0 2$
shouldHideSoftKeyboard
√
√
3 I
)
√
√
I J
return
ƒ
ƒ
 
true
ƒ
ƒ
 
;
ƒ
ƒ
 
if
∆
∆
 
(
∆
∆
 !
TouchScreenKeyboard
∆
∆
 #
.
∆
∆
# $
isSupported
∆
∆
$ /
&&
∆
∆
0 2$
shouldHideSoftKeyboard
∆
∆
3 I
==
∆
∆
J L
false
∆
∆
M R
&&
∆
∆
S U#
shouldHideMobileInput
∆
∆
V k
==
∆
∆
l n
false
∆
∆
o t
)
∆
∆
t u
return
«
«
 
false
«
«
 
;
«
«
 
return
…
…
 
true
…
…
 
;
…
…
 
}
 
 
 	
void
Ã
Ã
 .
 UpdateStringPositionFromKeyboard
Ã
Ã
 -
(
Ã
Ã
- .
)
Ã
Ã
. /
{
Õ
Õ
 	
var
œ
œ
 
selectionRange
œ
œ
 
=
œ
œ
  
m_SoftKeyboard
œ
œ
! /
.
œ
œ
/ 0
	selection
œ
œ
0 9
;
œ
œ
9 :
var
‘
‘
 
selectionStart
‘
‘
 
=
‘
‘
  
selectionRange
‘
‘
! /
.
‘
‘
/ 0
start
‘
‘
0 5
;
‘
‘
5 6
var
’
’
 
selectionEnd
’
’
 
=
’
’
 
selectionRange
’
’
 -
.
’
’
- .
end
’
’
. 1
;
’
’
1 2
var
◊
◊
 #
stringPositionChanged
◊
◊
 %
=
◊
◊
& '
false
◊
◊
( -
;
◊
◊
- .
if
Ÿ
Ÿ
 
(
Ÿ
Ÿ
 $
stringPositionInternal
Ÿ
Ÿ
 &
!=
Ÿ
Ÿ
' )
selectionStart
Ÿ
Ÿ
* 8
)
Ÿ
Ÿ
8 9
{
⁄
⁄
 #
stringPositionChanged
€
€
 %
=
€
€
& '
true
€
€
( ,
;
€
€
, -$
stringPositionInternal
‹
‹
 &
=
‹
‹
' (
selectionStart
‹
‹
) 7
;
‹
‹
7 8#
caretPositionInternal
ﬁ
ﬁ
 %
=
ﬁ
ﬁ
& '-
GetCaretPositionFromStringIndex
ﬁ
ﬁ
( G
(
ﬁ
ﬁ
G H$
stringPositionInternal
ﬁ
ﬁ
H ^
)
ﬁ
ﬁ
^ _
;
ﬁ
ﬁ
_ `
}
ﬂ
ﬂ
 
if
·
·
 
(
·
·
 *
stringSelectPositionInternal
·
·
 ,
!=
·
·
- /
selectionEnd
·
·
0 <
)
·
·
< =
{
‚
‚
 *
stringSelectPositionInternal
„
„
 ,
=
„
„
- .
selectionEnd
„
„
/ ;
;
„
„
; <#
stringPositionChanged
‰
‰
 %
=
‰
‰
& '
true
‰
‰
( ,
;
‰
‰
, -)
caretSelectPositionInternal
Ê
Ê
 +
=
Ê
Ê
, --
GetCaretPositionFromStringIndex
Ê
Ê
. M
(
Ê
Ê
M N*
stringSelectPositionInternal
Ê
Ê
N j
)
Ê
Ê
j k
;
Ê
Ê
k l
}
Á
Á
 
if
È
È
 
(
È
È
 #
stringPositionChanged
È
È
 %
)
È
È
% &
{
Í
Í
 
m_BlinkStartTime
Î
Î
  
=
Î
Î
! "
Time
Î
Î
# '
.
Î
Î
' (
unscaledTime
Î
Î
( 4
;
Î
Î
4 5
UpdateLabel
Ì
Ì
 
(
Ì
Ì
 
)
Ì
Ì
 
;
Ì
Ì
 
}
Ó
Ó
 
}
Ô
Ô
 	
	protected
ı
ı
 
virtual
ı
ı
 
void
ı
ı
 

LateUpdate
ı
ı
 )
(
ı
ı
) *
)
ı
ı
* +
{
ˆ
ˆ
 	
if
¯
¯
 
(
¯
¯
 (
m_ShouldActivateNextUpdate
¯
¯
 *
)
¯
¯
* +
{
˘
˘
 
if
˙
˙
 
(
˙
˙
 
!
˙
˙
 
	isFocused
˙
˙
 
)
˙
˙
 
{
˚
˚
 (
ActivateInputFieldInternal
¸
¸
 .
(
¸
¸
. /
)
¸
¸
/ 0
;
¸
¸
0 1(
m_ShouldActivateNextUpdate
˝
˝
 .
=
˝
˝
/ 0
false
˝
˝
1 6
;
˝
˝
6 7
return
˛
˛
 
;
˛
˛
 
}
ˇ
ˇ
 (
m_ShouldActivateNextUpdate
ÇÇ *
=
ÇÇ+ ,
false
ÇÇ- 2
;
ÇÇ2 3
}
ÉÉ 
if
ÜÜ 
(
ÜÜ )
m_IsScrollbarUpdateRequired
ÜÜ +
)
ÜÜ+ ,
{
áá 
UpdateScrollbar
àà 
(
àà  
)
àà  !
;
àà! ")
m_IsScrollbarUpdateRequired
ââ +
=
ââ, -
false
ââ. 3
;
ââ3 4
}
ää 
if
çç 
(
çç 
!
çç 
	isFocused
çç 
&&
çç $
m_SelectionStillActive
çç 4
)
çç4 5
{
éé 

GameObject
èè 
selectedObject
èè )
=
èè* +
EventSystem
èè, 7
.
èè7 8
current
èè8 ?
!=
èè@ B
null
èèC G
?
èèH I
EventSystem
èèJ U
.
èèU V
current
èèV ]
.
èè] ^'
currentSelectedGameObject
èè^ w
:
èèx y
null
èèz ~
;
èè~ 
if
ëë 
(
ëë 
selectedObject
ëë "
==
ëë# %
null
ëë& *
&&
ëë+ -#
m_ResetOnDeActivation
ëë. C
)
ëëC D
{
íí 
ReleaseSelection
ìì $
(
ìì$ %
)
ìì% &
;
ìì& '
return
îî 
;
îî 
}
ïï 
if
óó 
(
óó 
selectedObject
óó "
!=
óó# %
null
óó& *
&&
óó+ -
selectedObject
óó. <
!=
óó= ?
this
óó@ D
.
óóD E

gameObject
óóE O
)
óóO P
{
òò 
if
ôô 
(
ôô 
selectedObject
ôô &
==
ôô' )(
m_PreviouslySelectedObject
ôô* D
)
ôôD E
return
öö 
;
öö (
m_PreviouslySelectedObject
úú .
=
úú/ 0
selectedObject
úú1 ?
;
úú? @
if
üü 
(
üü !
m_VerticalScrollbar
üü +
&&
üü, .
selectedObject
üü/ =
==
üü> @!
m_VerticalScrollbar
üüA T
.
üüT U

gameObject
üüU _
)
üü_ `
{
†† 
return
¢¢ 
;
¢¢ 
}
££ 
if
¶¶ 
(
¶¶ #
m_ResetOnDeActivation
¶¶ -
)
¶¶- .
{
ßß 
ReleaseSelection
®® (
(
®®( )
)
®®) *
;
®®* +
return
©© 
;
©© 
}
™™ 
if
≠≠ 
(
≠≠ 
selectedObject
≠≠ &
.
≠≠& '
GetComponent
≠≠' 3
<
≠≠3 4
TMP_InputField
≠≠4 B
>
≠≠B C
(
≠≠C D
)
≠≠D E
!=
≠≠F H
null
≠≠I M
)
≠≠M N
ReleaseSelection
ÆÆ (
(
ÆÆ( )
)
ÆÆ) *
;
ÆÆ* +
return
∞∞ 
;
∞∞ 
}
±± 
if
¥¥ 
(
¥¥ 
m_ProcessingEvent
¥¥ %
!=
¥¥& (
null
¥¥) -
&&
¥¥. 0
m_ProcessingEvent
¥¥1 B
.
¥¥B C
rawType
¥¥C J
==
¥¥K M
	EventType
¥¥N W
.
¥¥W X
	MouseDown
¥¥X a
&&
¥¥b d
m_ProcessingEvent
¥¥e v
.
¥¥v w
button
¥¥w }
==¥¥~ Ä
$num¥¥Å Ç
)¥¥Ç É
{
µµ 
bool
∑∑ 
isDoubleClick
∑∑ &
=
∑∑' (
false
∑∑) .
;
∑∑. /
float
∏∏ 
	timeStamp
∏∏ #
=
∏∏$ %
Time
∏∏& *
.
∏∏* +
unscaledTime
∏∏+ 7
;
∏∏7 8
if
∫∫ 
(
∫∫  
m_KeyDownStartTime
∫∫ *
+
∫∫+ , 
m_DoubleClickDelay
∫∫- ?
>
∫∫@ A
	timeStamp
∫∫B K
)
∫∫K L
isDoubleClick
ªª %
=
ªª& '
true
ªª( ,
;
ªª, - 
m_KeyDownStartTime
ΩΩ &
=
ΩΩ' (
	timeStamp
ΩΩ) 2
;
ΩΩ2 3
if
øø 
(
øø 
isDoubleClick
øø %
)
øø% &
{
¿¿ 
ReleaseSelection
»» (
(
»»( )
)
»») *
;
»»* +
return
   
;
   
}
ÀÀ 
}
ÃÃ 
}
ËË 
UpdateMaskRegions
ÍÍ 
(
ÍÍ 
)
ÍÍ 
;
ÍÍ  
if
ÏÏ 
(
ÏÏ 
InPlaceEditing
ÏÏ 
(
ÏÏ 
)
ÏÏ  
&&
ÏÏ! ##
isKeyboardUsingEvents
ÏÏ$ 9
(
ÏÏ9 :
)
ÏÏ: ;
||
ÏÏ< >
!
ÏÏ? @
	isFocused
ÏÏ@ I
)
ÏÏI J
{
ÌÌ 
return
ÓÓ 
;
ÓÓ 
}
ÔÔ '
AssignPositioningIfNeeded
ÒÒ %
(
ÒÒ% &
)
ÒÒ& '
;
ÒÒ' (
if
ÛÛ 
(
ÛÛ 
m_SoftKeyboard
ÛÛ 
==
ÛÛ !
null
ÛÛ" &
||
ÛÛ' )
m_SoftKeyboard
ÛÛ* 8
.
ÛÛ8 9
status
ÛÛ9 ?
!=
ÛÛ@ B!
TouchScreenKeyboard
ÛÛC V
.
ÛÛV W
Status
ÛÛW ]
.
ÛÛ] ^
Visible
ÛÛ^ e
)
ÛÛe f
{
ÙÙ 
if
ıı 
(
ıı 
m_SoftKeyboard
ıı "
!=
ıı# %
null
ıı& *
)
ıı* +
{
ˆˆ 
if
˜˜ 
(
˜˜ 
!
˜˜ 

m_ReadOnly
˜˜ #
)
˜˜# $
text
¯¯ 
=
¯¯ 
m_SoftKeyboard
¯¯ -
.
¯¯- .
text
¯¯. 2
;
¯¯2 3
if
˙˙ 
(
˙˙ 
m_SoftKeyboard
˙˙ &
.
˙˙& '
status
˙˙' -
==
˙˙. 0!
TouchScreenKeyboard
˙˙1 D
.
˙˙D E
Status
˙˙E K
.
˙˙K L
	LostFocus
˙˙L U
)
˙˙U V2
$SendTouchScreenKeyboardStatusChanged
˚˚ <
(
˚˚< =
)
˚˚= >
;
˚˚> ?
if
˝˝ 
(
˝˝ 
m_SoftKeyboard
˝˝ &
.
˝˝& '
status
˝˝' -
==
˝˝. 0!
TouchScreenKeyboard
˝˝1 D
.
˝˝D E
Status
˝˝E K
.
˝˝K L
Canceled
˝˝L T
)
˝˝T U
{
˛˛  
m_ReleaseSelection
ˇˇ *
=
ˇˇ+ ,
true
ˇˇ- 1
;
ˇˇ1 2
m_WasCanceled
ÄÄ %
=
ÄÄ& '
true
ÄÄ( ,
;
ÄÄ, -2
$SendTouchScreenKeyboardStatusChanged
ÅÅ <
(
ÅÅ< =
)
ÅÅ= >
;
ÅÅ> ?
}
ÇÇ 
if
ÑÑ 
(
ÑÑ 
m_SoftKeyboard
ÑÑ &
.
ÑÑ& '
status
ÑÑ' -
==
ÑÑ. 0!
TouchScreenKeyboard
ÑÑ1 D
.
ÑÑD E
Status
ÑÑE K
.
ÑÑK L
Done
ÑÑL P
)
ÑÑP Q
{
ÖÖ  
m_ReleaseSelection
ÜÜ *
=
ÜÜ+ ,
true
ÜÜ- 1
;
ÜÜ1 2
OnSubmit
áá  
(
áá  !
null
áá! %
)
áá% &
;
áá& '2
$SendTouchScreenKeyboardStatusChanged
àà <
(
àà< =
)
àà= >
;
àà> ?
}
ââ 
}
ää 

OnDeselect
åå 
(
åå 
null
åå 
)
åå  
;
åå  !
return
çç 
;
çç 
}
éé 
string
êê 
val
êê 
=
êê 
m_SoftKeyboard
êê '
.
êê' (
text
êê( ,
;
êê, -
if
íí 
(
íí 
m_Text
íí 
!=
íí 
val
íí 
)
íí 
{
ìì 
if
îî 
(
îî 

m_ReadOnly
îî 
)
îî 
{
ïï 
m_SoftKeyboard
ññ "
.
ññ" #
text
ññ# '
=
ññ( )
m_Text
ññ* 0
;
ññ0 1
}
óó 
else
òò 
{
ôô 
m_Text
öö 
=
öö 
$str
öö 
;
öö  
for
úú 
(
úú 
int
úú 
i
úú 
=
úú  
$num
úú! "
;
úú" #
i
úú$ %
<
úú& '
val
úú( +
.
úú+ ,
Length
úú, 2
;
úú2 3
++
úú4 6
i
úú6 7
)
úú7 8
{
ùù 
char
ûû 
c
ûû 
=
ûû  
val
ûû! $
[
ûû$ %
i
ûû% &
]
ûû& '
;
ûû' (
if
†† 
(
†† 
c
†† 
==
††  
$char
††! %
||
††& (
(
††) *
int
††* -
)
††- .
c
††. /
==
††0 2
$num
††3 4
)
††4 5
c
°° 
=
°° 
$char
°°  $
;
°°$ %
if
££ 
(
££ 
onValidateInput
££ +
!=
££, .
null
££/ 3
)
££3 4
c
§§ 
=
§§ 
onValidateInput
§§  /
(
§§/ 0
m_Text
§§0 6
,
§§6 7
m_Text
§§8 >
.
§§> ?
Length
§§? E
,
§§E F
c
§§G H
)
§§H I
;
§§I J
else
•• 
if
•• 
(
••  !!
characterValidation
••! 4
!=
••5 7!
CharacterValidation
••8 K
.
••K L
None
••L P
)
••P Q
c
¶¶ 
=
¶¶ 
Validate
¶¶  (
(
¶¶( )
m_Text
¶¶) /
,
¶¶/ 0
m_Text
¶¶1 7
.
¶¶7 8
Length
¶¶8 >
,
¶¶> ?
c
¶¶@ A
)
¶¶A B
;
¶¶B C
if
®® 
(
®® 
lineType
®® $
==
®®% '
LineType
®®( 0
.
®®0 1
MultiLineSubmit
®®1 @
&&
®®A C
c
®®D E
==
®®F H
$char
®®I M
)
®®M N
{
©© 
m_SoftKeyboard
™™ *
.
™™* +
text
™™+ /
=
™™0 1
m_Text
™™2 8
;
™™8 9
OnSubmit
¨¨ $
(
¨¨$ %
null
¨¨% )
)
¨¨) *
;
¨¨* +

OnDeselect
≠≠ &
(
≠≠& '
null
≠≠' +
)
≠≠+ ,
;
≠≠, -
return
ÆÆ "
;
ÆÆ" #
}
ØØ 
if
±± 
(
±± 
c
±± 
!=
±±  
$num
±±! "
)
±±" #
m_Text
≤≤ "
+=
≤≤# %
c
≤≤& '
;
≤≤' (
}
≥≥ 
if
µµ 
(
µµ 
characterLimit
µµ &
>
µµ' (
$num
µµ) *
&&
µµ+ -
m_Text
µµ. 4
.
µµ4 5
Length
µµ5 ;
>
µµ< =
characterLimit
µµ> L
)
µµL M
m_Text
∂∂ 
=
∂∂  
m_Text
∂∂! '
.
∂∂' (
	Substring
∂∂( 1
(
∂∂1 2
$num
∂∂2 3
,
∂∂3 4
characterLimit
∂∂5 C
)
∂∂C D
;
∂∂D E.
 UpdateStringPositionFromKeyboard
∏∏ 4
(
∏∏4 5
)
∏∏5 6
;
∏∏6 7
if
ºº 
(
ºº 
m_Text
ºº 
!=
ºº !
val
ºº" %
)
ºº% &
m_SoftKeyboard
ΩΩ &
.
ΩΩ& '
text
ΩΩ' +
=
ΩΩ, -
m_Text
ΩΩ. 4
;
ΩΩ4 5.
 SendOnValueChangedAndUpdateLabel
øø 4
(
øø4 5
)
øø5 6
;
øø6 7
}
¿¿ 
}
¡¡ 
else
¬¬ 
if
¬¬ 
(
¬¬ 
m_HideMobileInput
¬¬ &
&&
¬¬' )
Application
¬¬* 5
.
¬¬5 6
platform
¬¬6 >
==
¬¬? A
RuntimePlatform
¬¬B Q
.
¬¬Q R
Android
¬¬R Y
)
¬¬Y Z
{
√√ .
 UpdateStringPositionFromKeyboard
ƒƒ 0
(
ƒƒ0 1
)
ƒƒ1 2
;
ƒƒ2 3
}
≈≈ 
if
—— 
(
—— 
m_SoftKeyboard
—— 
.
—— 
status
—— %
!=
——& (!
TouchScreenKeyboard
——) <
.
——< =
Status
——= C
.
——C D
Visible
——D K
)
——K L
{
““ 
if
”” 
(
”” 
m_SoftKeyboard
”” "
.
””" #
status
””# )
==
””* ,!
TouchScreenKeyboard
””- @
.
””@ A
Status
””A G
.
””G H
Canceled
””H P
)
””P Q
m_WasCanceled
‘‘ !
=
‘‘" #
true
‘‘$ (
;
‘‘( )

OnDeselect
÷÷ 
(
÷÷ 
null
÷÷ 
)
÷÷  
;
÷÷  !
}
◊◊ 
}
ÿÿ 	
private
€€ 
bool
€€ 
MayDrag
€€ 
(
€€ 
PointerEventData
€€ -
	eventData
€€. 7
)
€€7 8
{
‹‹ 	
return
›› 
IsActive
›› 
(
›› 
)
›› 
&&
››  
IsInteractable
ﬁﬁ !
(
ﬁﬁ! "
)
ﬁﬁ" #
&&
ﬁﬁ$ &
	eventData
ﬂﬂ 
.
ﬂﬂ 
button
ﬂﬂ #
==
ﬂﬂ$ &
PointerEventData
ﬂﬂ' 7
.
ﬂﬂ7 8
InputButton
ﬂﬂ8 C
.
ﬂﬂC D
Left
ﬂﬂD H
&&
ﬂﬂI K
m_TextComponent
‡‡ "
!=
‡‡# %
null
‡‡& *
&&
‡‡+ -
(
·· 
m_SoftKeyboard
·· "
==
··# %
null
··& *
||
··+ -$
shouldHideSoftKeyboard
··. D
||
··E G#
shouldHideMobileInput
··H ]
)
··] ^
;
··^ _
}
‚‚ 	
public
‰‰ 
virtual
‰‰ 
void
‰‰ 
OnBeginDrag
‰‰ '
(
‰‰' (
PointerEventData
‰‰( 8
	eventData
‰‰9 B
)
‰‰B C
{
ÂÂ 	
if
ÊÊ 
(
ÊÊ 
!
ÊÊ 
MayDrag
ÊÊ 
(
ÊÊ 
	eventData
ÊÊ "
)
ÊÊ" #
)
ÊÊ# $
return
ÁÁ 
;
ÁÁ 
m_UpdateDrag
ÈÈ 
=
ÈÈ 
true
ÈÈ 
;
ÈÈ  
}
ÍÍ 	
public
ÏÏ 
virtual
ÏÏ 
void
ÏÏ 
OnDrag
ÏÏ "
(
ÏÏ" #
PointerEventData
ÏÏ# 3
	eventData
ÏÏ4 =
)
ÏÏ= >
{
ÌÌ 	
if
ÓÓ 
(
ÓÓ 
!
ÓÓ 
MayDrag
ÓÓ 
(
ÓÓ 
	eventData
ÓÓ "
)
ÓÓ" #
)
ÓÓ# $
return
ÔÔ 
;
ÔÔ 
CaretPosition
ÒÒ 
insertionSide
ÒÒ '
;
ÒÒ' (
int
ÛÛ 
insertionIndex
ÛÛ 
=
ÛÛ  
TMP_TextUtilities
ÛÛ! 2
.
ÛÛ2 3(
GetCursorIndexFromPosition
ÛÛ3 M
(
ÛÛM N
m_TextComponent
ÛÛN ]
,
ÛÛ] ^
	eventData
ÛÛ_ h
.
ÛÛh i
position
ÛÛi q
,
ÛÛq r
	eventData
ÛÛs |
.
ÛÛ| }
pressEventCameraÛÛ} ç
,ÛÛç é
outÛÛè í
insertionSideÛÛì †
)ÛÛ† °
;ÛÛ° ¢
if
ıı 
(
ıı (
m_isRichTextEditingAllowed
ıı *
)
ıı* +
{
ˆˆ 
if
˜˜ 
(
˜˜ 
insertionSide
˜˜ !
==
˜˜" $
CaretPosition
˜˜% 2
.
˜˜2 3
Left
˜˜3 7
)
˜˜7 8
{
¯¯ *
stringSelectPositionInternal
˘˘ 0
=
˘˘1 2
m_TextComponent
˘˘3 B
.
˘˘B C
textInfo
˘˘C K
.
˘˘K L
characterInfo
˘˘L Y
[
˘˘Y Z
insertionIndex
˘˘Z h
]
˘˘h i
.
˘˘i j
index
˘˘j o
;
˘˘o p
}
˙˙ 
else
˚˚ 
if
˚˚ 
(
˚˚ 
insertionSide
˚˚ &
==
˚˚' )
CaretPosition
˚˚* 7
.
˚˚7 8
Right
˚˚8 =
)
˚˚= >
{
¸¸ *
stringSelectPositionInternal
˝˝ 0
=
˝˝1 2
m_TextComponent
˝˝3 B
.
˝˝B C
textInfo
˝˝C K
.
˝˝K L
characterInfo
˝˝L Y
[
˝˝Y Z
insertionIndex
˝˝Z h
]
˝˝h i
.
˝˝i j
index
˝˝j o
+
˝˝p q
m_TextComponent˝˝r Å
.˝˝Å Ç
textInfo˝˝Ç ä
.˝˝ä ã
characterInfo˝˝ã ò
[˝˝ò ô
insertionIndex˝˝ô ß
]˝˝ß ®
.˝˝® ©
stringLength˝˝© µ
;˝˝µ ∂
}
˛˛ 
}
ˇˇ 
else
ÄÄ 
{
ÅÅ 
if
ÇÇ 
(
ÇÇ 
insertionSide
ÇÇ !
==
ÇÇ" $
CaretPosition
ÇÇ% 2
.
ÇÇ2 3
Left
ÇÇ3 7
)
ÇÇ7 8
{
ÉÉ *
stringSelectPositionInternal
ÑÑ 0
=
ÑÑ1 2
insertionIndex
ÑÑ3 A
==
ÑÑB D
$num
ÑÑE F
?
ÖÖ 
m_TextComponent
ÖÖ )
.
ÖÖ) *
textInfo
ÖÖ* 2
.
ÖÖ2 3
characterInfo
ÖÖ3 @
[
ÖÖ@ A
$num
ÖÖA B
]
ÖÖB C
.
ÖÖC D
index
ÖÖD I
:
ÜÜ 
m_TextComponent
ÜÜ )
.
ÜÜ) *
textInfo
ÜÜ* 2
.
ÜÜ2 3
characterInfo
ÜÜ3 @
[
ÜÜ@ A
insertionIndex
ÜÜA O
-
ÜÜP Q
$num
ÜÜR S
]
ÜÜS T
.
ÜÜT U
index
ÜÜU Z
+
ÜÜ[ \
m_TextComponent
ÜÜ] l
.
ÜÜl m
textInfo
ÜÜm u
.
ÜÜu v
characterInfoÜÜv É
[ÜÜÉ Ñ
insertionIndexÜÜÑ í
-ÜÜì î
$numÜÜï ñ
]ÜÜñ ó
.ÜÜó ò
stringLengthÜÜò §
;ÜÜ§ •
}
áá 
else
àà 
if
àà 
(
àà 
insertionSide
àà &
==
àà' )
CaretPosition
àà* 7
.
àà7 8
Right
àà8 =
)
àà= >
{
ââ *
stringSelectPositionInternal
ää 0
=
ää1 2
m_TextComponent
ää3 B
.
ääB C
textInfo
ääC K
.
ääK L
characterInfo
ääL Y
[
ääY Z
insertionIndex
ääZ h
]
ääh i
.
ääi j
index
ääj o
+
ääp q
m_TextComponentäär Å
.ääÅ Ç
textInfoääÇ ä
.äää ã
characterInfoääã ò
[ääò ô
insertionIndexääô ß
]ääß ®
.ää® ©
stringLengthää© µ
;ääµ ∂
}
ãã 
}
åå )
caretSelectPositionInternal
éé '
=
éé( )-
GetCaretPositionFromStringIndex
éé* I
(
ééI J*
stringSelectPositionInternal
ééJ f
)
ééf g
;
éég h!
MarkGeometryAsDirty
êê 
(
êê  
)
êê  !
;
êê! "'
m_DragPositionOutOfBounds
íí %
=
íí& '
!
íí( )"
RectTransformUtility
íí) =
.
íí= >*
RectangleContainsScreenPoint
íí> Z
(
ííZ [
textViewport
íí[ g
,
ííg h
	eventData
ííi r
.
íír s
position
íís {
,
íí{ |
	eventDataíí} Ü
.ííÜ á 
pressEventCameraííá ó
)ííó ò
;ííò ô
if
ìì 
(
ìì '
m_DragPositionOutOfBounds
ìì )
&&
ìì* ,
m_DragCoroutine
ìì- <
==
ìì= ?
null
ìì@ D
)
ììD E
m_DragCoroutine
îî 
=
îî  !
StartCoroutine
îî" 0
(
îî0 1"
MouseDragOutsideRect
îî1 E
(
îîE F
	eventData
îîF O
)
îîO P
)
îîP Q
;
îîQ R
	eventData
ññ 
.
ññ 
Use
ññ 
(
ññ 
)
ññ 
;
ññ 
}
õõ 	
IEnumerator
ùù "
MouseDragOutsideRect
ùù (
(
ùù( )
PointerEventData
ùù) 9
	eventData
ùù: C
)
ùùC D
{
ûû 	
while
üü 
(
üü 
m_UpdateDrag
üü 
&&
üü  "'
m_DragPositionOutOfBounds
üü# <
)
üü< =
{
†† 
Vector2
°° 
localMousePos
°° %
;
°°% &"
RectTransformUtility
££ $
.
££$ %0
"ScreenPointToLocalPointInRectangle
££% G
(
££G H
textViewport
££H T
,
££T U
	eventData
££V _
.
££_ `
position
££` h
,
££h i
	eventData
££j s
.
££s t
pressEventCamera££t Ñ
,££Ñ Ö
out££Ü â
localMousePos££ä ó
)££ó ò
;££ò ô
Rect
•• 
rect
•• 
=
•• 
textViewport
•• (
.
••( )
rect
••) -
;
••- .
if
ßß 
(
ßß 
	multiLine
ßß 
)
ßß 
{
®® 
if
©© 
(
©© 
localMousePos
©© %
.
©©% &
y
©©& '
>
©©( )
rect
©©* .
.
©©. /
yMax
©©/ 3
)
©©3 4
MoveUp
™™ 
(
™™ 
true
™™ #
,
™™# $
true
™™% )
)
™™) *
;
™™* +
else
´´ 
if
´´ 
(
´´ 
localMousePos
´´ *
.
´´* +
y
´´+ ,
<
´´- .
rect
´´/ 3
.
´´3 4
yMin
´´4 8
)
´´8 9
MoveDown
¨¨  
(
¨¨  !
true
¨¨! %
,
¨¨% &
true
¨¨' +
)
¨¨+ ,
;
¨¨, -
}
≠≠ 
else
ÆÆ 
{
ØØ 
if
∞∞ 
(
∞∞ 
localMousePos
∞∞ %
.
∞∞% &
x
∞∞& '
<
∞∞( )
rect
∞∞* .
.
∞∞. /
xMin
∞∞/ 3
)
∞∞3 4
MoveLeft
±±  
(
±±  !
true
±±! %
,
±±% &
false
±±' ,
)
±±, -
;
±±- .
else
≤≤ 
if
≤≤ 
(
≤≤ 
localMousePos
≤≤ *
.
≤≤* +
x
≤≤+ ,
>
≤≤- .
rect
≤≤/ 3
.
≤≤3 4
xMax
≤≤4 8
)
≤≤8 9
	MoveRight
≥≥ !
(
≥≥! "
true
≥≥" &
,
≥≥& '
false
≥≥( -
)
≥≥- .
;
≥≥. /
}
¥¥ 
UpdateLabel
∂∂ 
(
∂∂ 
)
∂∂ 
;
∂∂ 
float
∏∏ 
delay
∏∏ 
=
∏∏ 
	multiLine
∏∏ '
?
∏∏( )
kVScrollSpeed
∏∏* 7
:
∏∏8 9
kHScrollSpeed
∏∏: G
;
∏∏G H
if
∫∫ 
(
∫∫ &
m_WaitForSecondsRealtime
∫∫ ,
==
∫∫- /
null
∫∫0 4
)
∫∫4 5&
m_WaitForSecondsRealtime
ªª ,
=
ªª- .
new
ªª/ 2$
WaitForSecondsRealtime
ªª3 I
(
ªªI J
delay
ªªJ O
)
ªªO P
;
ªªP Q
else
ºº &
m_WaitForSecondsRealtime
ΩΩ ,
.
ΩΩ, -
waitTime
ΩΩ- 5
=
ΩΩ6 7
delay
ΩΩ8 =
;
ΩΩ= >
yield
øø 
return
øø &
m_WaitForSecondsRealtime
øø 5
;
øø5 6
}
¿¿ 
m_DragCoroutine
¡¡ 
=
¡¡ 
null
¡¡ "
;
¡¡" #
}
¬¬ 	
public
ƒƒ 
virtual
ƒƒ 
void
ƒƒ 
	OnEndDrag
ƒƒ %
(
ƒƒ% &
PointerEventData
ƒƒ& 6
	eventData
ƒƒ7 @
)
ƒƒ@ A
{
≈≈ 	
if
∆∆ 
(
∆∆ 
!
∆∆ 
MayDrag
∆∆ 
(
∆∆ 
	eventData
∆∆ "
)
∆∆" #
)
∆∆# $
return
«« 
;
«« 
m_UpdateDrag
…… 
=
…… 
false
……  
;
……  !
}
   	
public
ÃÃ 
override
ÃÃ 
void
ÃÃ 
OnPointerDown
ÃÃ *
(
ÃÃ* +
PointerEventData
ÃÃ+ ;
	eventData
ÃÃ< E
)
ÃÃE F
{
ÕÕ 	
if
ŒŒ 
(
ŒŒ 
!
ŒŒ 
MayDrag
ŒŒ 
(
ŒŒ 
	eventData
ŒŒ "
)
ŒŒ" #
)
ŒŒ# $
return
œœ 
;
œœ 
EventSystem
—— 
.
—— 
current
—— 
.
——  #
SetSelectedGameObject
——  5
(
——5 6

gameObject
——6 @
,
——@ A
	eventData
——B K
)
——K L
;
——L M
bool
”” 
hadFocusBefore
”” 
=
””  !
m_AllowInput
””" .
;
””. /
base
‘‘ 
.
‘‘ 
OnPointerDown
‘‘ 
(
‘‘ 
	eventData
‘‘ (
)
‘‘( )
;
‘‘) *
if
÷÷ 
(
÷÷ 
InPlaceEditing
÷÷ 
(
÷÷ 
)
÷÷  
==
÷÷! #
false
÷÷$ )
)
÷÷) *
{
◊◊ 
if
ÿÿ 
(
ÿÿ 
m_SoftKeyboard
ÿÿ "
==
ÿÿ# %
null
ÿÿ& *
||
ÿÿ+ -
!
ÿÿ. /
m_SoftKeyboard
ÿÿ/ =
.
ÿÿ= >
active
ÿÿ> D
)
ÿÿD E
{
ŸŸ 
OnSelect
⁄⁄ 
(
⁄⁄ 
	eventData
⁄⁄ &
)
⁄⁄& '
;
⁄⁄' (
return
€€ 
;
€€ 
}
‹‹ 
}
›› 
Event
‡‡ 
.
‡‡ 
PopEvent
‡‡ 
(
‡‡ 
m_ProcessingEvent
‡‡ ,
)
‡‡, -
;
‡‡- .
bool
·· 
shift
·· 
=
·· 
m_ProcessingEvent
·· *
!=
··+ -
null
··. 2
&&
··3 5
(
··6 7
m_ProcessingEvent
··7 H
.
··H I
	modifiers
··I R
&
··S T
EventModifiers
··U c
.
··c d
Shift
··d i
)
··i j
!=
··k m
$num
··n o
;
··o p
bool
ÁÁ 
isDoubleClick
ÁÁ 
=
ÁÁ  
false
ÁÁ! &
;
ÁÁ& '
float
ËË 
	timeStamp
ËË 
=
ËË 
Time
ËË "
.
ËË" #
unscaledTime
ËË# /
;
ËË/ 0
if
ÍÍ 
(
ÍÍ )
m_PointerDownClickStartTime
ÍÍ +
+
ÍÍ, - 
m_DoubleClickDelay
ÍÍ. @
>
ÍÍA B
	timeStamp
ÍÍC L
)
ÍÍL M
isDoubleClick
ÎÎ 
=
ÎÎ 
true
ÎÎ  $
;
ÎÎ$ %)
m_PointerDownClickStartTime
ÌÌ '
=
ÌÌ( )
	timeStamp
ÌÌ* 3
;
ÌÌ3 4
if
ÒÒ 
(
ÒÒ 
hadFocusBefore
ÒÒ 
||
ÒÒ !
!
ÒÒ" # 
m_OnFocusSelectAll
ÒÒ# 5
)
ÒÒ5 6
{
ÚÚ 
CaretPosition
ÛÛ 
insertionSide
ÛÛ +
;
ÛÛ+ ,
int
ıı 
insertionIndex
ıı "
=
ıı# $
TMP_TextUtilities
ıı% 6
.
ıı6 7(
GetCursorIndexFromPosition
ıı7 Q
(
ııQ R
m_TextComponent
ııR a
,
ııa b
	eventData
ııc l
.
ııl m
position
ıım u
,
ııu v
	eventDataııw Ä
.ııÄ Å 
pressEventCameraııÅ ë
,ııë í
outııì ñ
insertionSideııó §
)ıı§ •
;ıı• ¶
if
˜˜ 
(
˜˜ 
shift
˜˜ 
)
˜˜ 
{
¯¯ 
if
˘˘ 
(
˘˘ (
m_isRichTextEditingAllowed
˘˘ 2
)
˘˘2 3
{
˙˙ 
if
˚˚ 
(
˚˚ 
insertionSide
˚˚ )
==
˚˚* ,
CaretPosition
˚˚- :
.
˚˚: ;
Left
˚˚; ?
)
˚˚? @
{
¸¸ *
stringSelectPositionInternal
˝˝ 8
=
˝˝9 :
m_TextComponent
˝˝; J
.
˝˝J K
textInfo
˝˝K S
.
˝˝S T
characterInfo
˝˝T a
[
˝˝a b
insertionIndex
˝˝b p
]
˝˝p q
.
˝˝q r
index
˝˝r w
;
˝˝w x
}
˛˛ 
else
ˇˇ 
if
ˇˇ 
(
ˇˇ  !
insertionSide
ˇˇ! .
==
ˇˇ/ 1
CaretPosition
ˇˇ2 ?
.
ˇˇ? @
Right
ˇˇ@ E
)
ˇˇE F
{
ÄÄ *
stringSelectPositionInternal
ÅÅ 8
=
ÅÅ9 :
m_TextComponent
ÅÅ; J
.
ÅÅJ K
textInfo
ÅÅK S
.
ÅÅS T
characterInfo
ÅÅT a
[
ÅÅa b
insertionIndex
ÅÅb p
]
ÅÅp q
.
ÅÅq r
index
ÅÅr w
+
ÅÅx y
m_TextComponentÅÅz â
.ÅÅâ ä
textInfoÅÅä í
.ÅÅí ì
characterInfoÅÅì †
[ÅÅ† °
insertionIndexÅÅ° Ø
]ÅÅØ ∞
.ÅÅ∞ ±
stringLengthÅÅ± Ω
;ÅÅΩ æ
}
ÇÇ 
}
ÉÉ 
else
ÑÑ 
{
ÖÖ 
if
ÜÜ 
(
ÜÜ 
insertionSide
ÜÜ )
==
ÜÜ* ,
CaretPosition
ÜÜ- :
.
ÜÜ: ;
Left
ÜÜ; ?
)
ÜÜ? @
{
áá *
stringSelectPositionInternal
àà 8
=
àà9 :
insertionIndex
àà; I
==
ààJ L
$num
ààM N
?
ââ  !
m_TextComponent
ââ" 1
.
ââ1 2
textInfo
ââ2 :
.
ââ: ;
characterInfo
ââ; H
[
ââH I
$num
ââI J
]
ââJ K
.
ââK L
index
ââL Q
:
ää  !
m_TextComponent
ää" 1
.
ää1 2
textInfo
ää2 :
.
ää: ;
characterInfo
ää; H
[
ääH I
insertionIndex
ääI W
-
ääX Y
$num
ääZ [
]
ää[ \
.
ää\ ]
index
ää] b
+
ääc d
m_TextComponent
ääe t
.
äät u
textInfo
ääu }
.
ää} ~
characterInfoää~ ã
[ääã å
insertionIndexääå ö
-ääõ ú
$numääù û
]ääû ü
.ääü †
stringLengthää† ¨
;ää¨ ≠
}
ãã 
else
åå 
if
åå 
(
åå  !
insertionSide
åå! .
==
åå/ 1
CaretPosition
åå2 ?
.
åå? @
Right
åå@ E
)
ååE F
{
çç *
stringSelectPositionInternal
éé 8
=
éé9 :
m_TextComponent
éé; J
.
ééJ K
textInfo
ééK S
.
ééS T
characterInfo
ééT a
[
ééa b
insertionIndex
ééb p
]
éép q
.
ééq r
index
éér w
+
ééx y
m_TextComponentééz â
.ééâ ä
textInfoééä í
.ééí ì
characterInfoééì †
[éé† °
insertionIndexéé° Ø
]ééØ ∞
.éé∞ ±
stringLengthéé± Ω
;ééΩ æ
}
èè 
}
êê 
}
ëë 
else
íí 
{
ìì 
if
îî 
(
îî (
m_isRichTextEditingAllowed
îî 2
)
îî2 3
{
ïï 
if
ññ 
(
ññ 
insertionSide
ññ )
==
ññ* ,
CaretPosition
ññ- :
.
ññ: ;
Left
ññ; ?
)
ññ? @
{
óó $
stringPositionInternal
òò 2
=
òò3 4*
stringSelectPositionInternal
òò5 Q
=
òòR S
m_TextComponent
òòT c
.
òòc d
textInfo
òòd l
.
òòl m
characterInfo
òòm z
[
òòz {
insertionIndexòò{ â
]òòâ ä
.òòä ã
indexòòã ê
;òòê ë
}
ôô 
else
öö 
if
öö 
(
öö  !
insertionSide
öö! .
==
öö/ 1
CaretPosition
öö2 ?
.
öö? @
Right
öö@ E
)
ööE F
{
õõ $
stringPositionInternal
úú 2
=
úú3 4*
stringSelectPositionInternal
úú5 Q
=
úúR S
m_TextComponent
úúT c
.
úúc d
textInfo
úúd l
.
úúl m
characterInfo
úúm z
[
úúz {
insertionIndexúú{ â
]úúâ ä
.úúä ã
indexúúã ê
+úúë í
m_TextComponentúúì ¢
.úú¢ £
textInfoúú£ ´
.úú´ ¨
characterInfoúú¨ π
[úúπ ∫
insertionIndexúú∫ »
]úú» …
.úú…  
stringLengthúú  ÷
;úú÷ ◊
}
ùù 
}
ûû 
else
üü 
{
†† 
if
°° 
(
°° 
insertionSide
°° )
==
°°* ,
CaretPosition
°°- :
.
°°: ;
Left
°°; ?
)
°°? @
{
¢¢ $
stringPositionInternal
££ 2
=
££3 4*
stringSelectPositionInternal
££5 Q
=
££R S
insertionIndex
££T b
==
££c e
$num
££f g
?
§§  !
m_TextComponent
§§" 1
.
§§1 2
textInfo
§§2 :
.
§§: ;
characterInfo
§§; H
[
§§H I
$num
§§I J
]
§§J K
.
§§K L
index
§§L Q
:
••  !
m_TextComponent
••" 1
.
••1 2
textInfo
••2 :
.
••: ;
characterInfo
••; H
[
••H I
insertionIndex
••I W
-
••X Y
$num
••Z [
]
••[ \
.
••\ ]
index
••] b
+
••c d
m_TextComponent
••e t
.
••t u
textInfo
••u }
.
••} ~
characterInfo••~ ã
[••ã å
insertionIndex••å ö
-••õ ú
$num••ù û
]••û ü
.••ü †
stringLength••† ¨
;••¨ ≠
}
¶¶ 
else
ßß 
if
ßß 
(
ßß  !
insertionSide
ßß! .
==
ßß/ 1
CaretPosition
ßß2 ?
.
ßß? @
Right
ßß@ E
)
ßßE F
{
®® $
stringPositionInternal
©© 2
=
©©3 4*
stringSelectPositionInternal
©©5 Q
=
©©R S
m_TextComponent
©©T c
.
©©c d
textInfo
©©d l
.
©©l m
characterInfo
©©m z
[
©©z {
insertionIndex©©{ â
]©©â ä
.©©ä ã
index©©ã ê
+©©ë í
m_TextComponent©©ì ¢
.©©¢ £
textInfo©©£ ´
.©©´ ¨
characterInfo©©¨ π
[©©π ∫
insertionIndex©©∫ »
]©©» …
.©©…  
stringLength©©  ÷
;©©÷ ◊
}
™™ 
}
´´ 
}
¨¨ 
if
ØØ 
(
ØØ 
isDoubleClick
ØØ !
)
ØØ! "
{
∞∞ 
int
±± 
	wordIndex
±± !
=
±±" #
TMP_TextUtilities
±±$ 5
.
±±5 6"
FindIntersectingWord
±±6 J
(
±±J K
m_TextComponent
±±K Z
,
±±Z [
	eventData
±±\ e
.
±±e f
position
±±f n
,
±±n o
	eventData
±±p y
.
±±y z
pressEventCamera±±z ä
)±±ä ã
;±±ã å
if
≥≥ 
(
≥≥ 
	wordIndex
≥≥ !
!=
≥≥" $
-
≥≥% &
$num
≥≥& '
)
≥≥' (
{
¥¥ #
caretPositionInternal
∏∏ -
=
∏∏. /
m_TextComponent
∏∏0 ?
.
∏∏? @
textInfo
∏∏@ H
.
∏∏H I
wordInfo
∏∏I Q
[
∏∏Q R
	wordIndex
∏∏R [
]
∏∏[ \
.
∏∏\ ]!
firstCharacterIndex
∏∏] p
;
∏∏p q)
caretSelectPositionInternal
ππ 3
=
ππ4 5
m_TextComponent
ππ6 E
.
ππE F
textInfo
ππF N
.
ππN O
wordInfo
ππO W
[
ππW X
	wordIndex
ππX a
]
ππa b
.
ππb c 
lastCharacterIndex
ππc u
+
ππv w
$num
ππx y
;
ππy z$
stringPositionInternal
ªª .
=
ªª/ 0
m_TextComponent
ªª1 @
.
ªª@ A
textInfo
ªªA I
.
ªªI J
characterInfo
ªªJ W
[
ªªW X#
caretPositionInternal
ªªX m
]
ªªm n
.
ªªn o
index
ªªo t
;
ªªt u*
stringSelectPositionInternal
ºº 4
=
ºº5 6
m_TextComponent
ºº7 F
.
ººF G
textInfo
ººG O
.
ººO P
characterInfo
ººP ]
[
ºº] ^)
caretSelectPositionInternal
ºº^ y
-
ººz {
$num
ºº| }
]
ºº} ~
.
ºº~ 
indexºº Ñ
+ººÖ Ü
m_TextComponentººá ñ
.ººñ ó
textInfoººó ü
.ººü †
characterInfoºº† ≠
[ºº≠ Æ+
caretSelectPositionInternalººÆ …
-ºº  À
$numººÃ Õ
]ººÕ Œ
.ººŒ œ
stringLengthººœ €
;ºº€ ‹
}
ΩΩ 
else
ææ 
{
øø #
caretPositionInternal
¡¡ -
=
¡¡. /
insertionIndex
¡¡0 >
;
¡¡> ?)
caretSelectPositionInternal
¬¬ 3
=
¬¬4 5#
caretPositionInternal
¬¬6 K
+
¬¬L M
$num
¬¬N O
;
¬¬O P$
stringPositionInternal
ƒƒ .
=
ƒƒ/ 0
m_TextComponent
ƒƒ1 @
.
ƒƒ@ A
textInfo
ƒƒA I
.
ƒƒI J
characterInfo
ƒƒJ W
[
ƒƒW X
insertionIndex
ƒƒX f
]
ƒƒf g
.
ƒƒg h
index
ƒƒh m
;
ƒƒm n*
stringSelectPositionInternal
≈≈ 4
=
≈≈5 6$
stringPositionInternal
≈≈7 M
+
≈≈N O
m_TextComponent
≈≈P _
.
≈≈_ `
textInfo
≈≈` h
.
≈≈h i
characterInfo
≈≈i v
[
≈≈v w
insertionIndex≈≈w Ö
]≈≈Ö Ü
.≈≈Ü á
stringLength≈≈á ì
;≈≈ì î
}
∆∆ 
}
«« 
else
»» 
{
…… #
caretPositionInternal
   )
=
  * +)
caretSelectPositionInternal
  , G
=
  H I-
GetCaretPositionFromStringIndex
  J i
(
  i j%
stringPositionInternal  j Ä
)  Ä Å
;  Å Ç
}
ÀÀ 
m_isSelectAll
ÕÕ 
=
ÕÕ 
false
ÕÕ  %
;
ÕÕ% &
}
ŒŒ 
UpdateLabel
–– 
(
–– 
)
–– 
;
–– 
	eventData
—— 
.
—— 
Use
—— 
(
—— 
)
—— 
;
—— 
}
÷÷ 	
	protected
ÿÿ 
enum
ÿÿ 
	EditState
ÿÿ  
{
ŸŸ 	
Continue
⁄⁄ 
,
⁄⁄ 
Finish
€€ 
}
‹‹ 	
	protected
ﬁﬁ 
	EditState
ﬁﬁ 

KeyPressed
ﬁﬁ &
(
ﬁﬁ& '
Event
ﬁﬁ' ,
evt
ﬁﬁ- 0
)
ﬁﬁ0 1
{
ﬂﬂ 	
var
‡‡ #
currentEventModifiers
‡‡ %
=
‡‡& '
evt
‡‡( +
.
‡‡+ ,
	modifiers
‡‡, 5
;
‡‡5 6
bool
·· 
ctrl
·· 
=
·· 

SystemInfo
·· "
.
··" ##
operatingSystemFamily
··# 8
==
··9 ;#
OperatingSystemFamily
··< Q
.
··Q R
MacOSX
··R X
?
··Y Z
(
··[ \#
currentEventModifiers
··\ q
&
··r s
EventModifiers··t Ç
.··Ç É
Command··É ä
)··ä ã
!=··å é
$num··è ê
:··ë í
(··ì î%
currentEventModifiers··î ©
&··™ ´
EventModifiers··¨ ∫
.··∫ ª
Control··ª ¬
)··¬ √
!=··ƒ ∆
$num··« »
;··» …
bool
‚‚ 
shift
‚‚ 
=
‚‚ 
(
‚‚ #
currentEventModifiers
‚‚ /
&
‚‚0 1
EventModifiers
‚‚2 @
.
‚‚@ A
Shift
‚‚A F
)
‚‚F G
!=
‚‚H J
$num
‚‚K L
;
‚‚L M
bool
„„ 
alt
„„ 
=
„„ 
(
„„ #
currentEventModifiers
„„ -
&
„„. /
EventModifiers
„„0 >
.
„„> ?
Alt
„„? B
)
„„B C
!=
„„D F
$num
„„G H
;
„„H I
bool
‰‰ 
ctrlOnly
‰‰ 
=
‰‰ 
ctrl
‰‰  
&&
‰‰! #
!
‰‰$ %
alt
‰‰% (
&&
‰‰) +
!
‰‰, -
shift
‰‰- 2
;
‰‰2 3
switch
ÊÊ 
(
ÊÊ 
evt
ÊÊ 
.
ÊÊ 
keyCode
ÊÊ 
)
ÊÊ  
{
ÁÁ 
case
ËË 
KeyCode
ËË 
.
ËË 
	Backspace
ËË &
:
ËË& '
{
ÈÈ 
	Backspace
ÍÍ !
(
ÍÍ! "
)
ÍÍ" #
;
ÍÍ# $
return
ÎÎ 
	EditState
ÎÎ (
.
ÎÎ( )
Continue
ÎÎ) 1
;
ÎÎ1 2
}
ÏÏ 
case
ÓÓ 
KeyCode
ÓÓ 
.
ÓÓ 
Delete
ÓÓ #
:
ÓÓ# $
{
ÔÔ 
	DeleteKey
 !
(
! "
)
" #
;
# $
return
ÒÒ 
	EditState
ÒÒ (
.
ÒÒ( )
Continue
ÒÒ) 1
;
ÒÒ1 2
}
ÚÚ 
case
ÙÙ 
KeyCode
ÙÙ 
.
ÙÙ 
Home
ÙÙ !
:
ÙÙ! "
{
ıı 
MoveToStartOfLine
ˆˆ )
(
ˆˆ) *
shift
ˆˆ* /
,
ˆˆ/ 0
ctrl
ˆˆ1 5
)
ˆˆ5 6
;
ˆˆ6 7
return
˜˜ 
	EditState
˜˜ (
.
˜˜( )
Continue
˜˜) 1
;
˜˜1 2
}
¯¯ 
case
˙˙ 
KeyCode
˙˙ 
.
˙˙ 
End
˙˙  
:
˙˙  !
{
˚˚ 
MoveToEndOfLine
¸¸ '
(
¸¸' (
shift
¸¸( -
,
¸¸- .
ctrl
¸¸/ 3
)
¸¸3 4
;
¸¸4 5
return
˝˝ 
	EditState
˝˝ (
.
˝˝( )
Continue
˝˝) 1
;
˝˝1 2
}
˛˛ 
case
ÅÅ 
KeyCode
ÅÅ 
.
ÅÅ 
A
ÅÅ 
:
ÅÅ 
{
ÇÇ 
if
ÉÉ 
(
ÉÉ 
ctrlOnly
ÉÉ $
)
ÉÉ$ %
{
ÑÑ 
	SelectAll
ÖÖ %
(
ÖÖ% &
)
ÖÖ& '
;
ÖÖ' (
return
ÜÜ "
	EditState
ÜÜ# ,
.
ÜÜ, -
Continue
ÜÜ- 5
;
ÜÜ5 6
}
áá 
break
àà 
;
àà 
}
ââ 
case
åå 
KeyCode
åå 
.
åå 
C
åå 
:
åå 
{
çç 
if
éé 
(
éé 
ctrlOnly
éé $
)
éé$ %
{
èè 
if
êê 
(
êê  
	inputType
êê  )
!=
êê* ,
	InputType
êê- 6
.
êê6 7
Password
êê7 ?
)
êê? @
	clipboard
ëë  )
=
ëë* +
GetSelectedString
ëë, =
(
ëë= >
)
ëë> ?
;
ëë? @
else
íí  
	clipboard
ìì  )
=
ìì* +
$str
ìì, .
;
ìì. /
return
îî "
	EditState
îî# ,
.
îî, -
Continue
îî- 5
;
îî5 6
}
ïï 
break
ññ 
;
ññ 
}
óó 
case
öö 
KeyCode
öö 
.
öö 
V
öö 
:
öö 
{
õõ 
if
úú 
(
úú 
ctrlOnly
úú $
)
úú$ %
{
ùù 
Append
ûû "
(
ûû" #
	clipboard
ûû# ,
)
ûû, -
;
ûû- .
return
üü "
	EditState
üü# ,
.
üü, -
Continue
üü- 5
;
üü5 6
}
†† 
break
°° 
;
°° 
}
¢¢ 
case
•• 
KeyCode
•• 
.
•• 
X
•• 
:
•• 
{
¶¶ 
if
ßß 
(
ßß 
ctrlOnly
ßß $
)
ßß$ %
{
®® 
if
©© 
(
©©  
	inputType
©©  )
!=
©©* ,
	InputType
©©- 6
.
©©6 7
Password
©©7 ?
)
©©? @
	clipboard
™™  )
=
™™* +
GetSelectedString
™™, =
(
™™= >
)
™™> ?
;
™™? @
else
´´  
	clipboard
¨¨  )
=
¨¨* +
$str
¨¨, .
;
¨¨. /
Delete
≠≠ "
(
≠≠" #
)
≠≠# $
;
≠≠$ %0
"UpdateTouchKeyboardFromEditChanges
ÆÆ >
(
ÆÆ> ?
)
ÆÆ? @
;
ÆÆ@ A.
 SendOnValueChangedAndUpdateLabel
ØØ <
(
ØØ< =
)
ØØ= >
;
ØØ> ?
return
∞∞ "
	EditState
∞∞# ,
.
∞∞, -
Continue
∞∞- 5
;
∞∞5 6
}
±± 
break
≤≤ 
;
≤≤ 
}
≥≥ 
case
µµ 
KeyCode
µµ 
.
µµ 
	LeftArrow
µµ &
:
µµ& '
{
∂∂ 
MoveLeft
∑∑  
(
∑∑  !
shift
∑∑! &
,
∑∑& '
ctrl
∑∑( ,
)
∑∑, -
;
∑∑- .
return
∏∏ 
	EditState
∏∏ (
.
∏∏( )
Continue
∏∏) 1
;
∏∏1 2
}
ππ 
case
ªª 
KeyCode
ªª 
.
ªª 

RightArrow
ªª '
:
ªª' (
{
ºº 
	MoveRight
ΩΩ !
(
ΩΩ! "
shift
ΩΩ" '
,
ΩΩ' (
ctrl
ΩΩ) -
)
ΩΩ- .
;
ΩΩ. /
return
ææ 
	EditState
ææ (
.
ææ( )
Continue
ææ) 1
;
ææ1 2
}
øø 
case
¡¡ 
KeyCode
¡¡ 
.
¡¡ 
UpArrow
¡¡ $
:
¡¡$ %
{
¬¬ 
MoveUp
√√ 
(
√√ 
shift
√√ $
)
√√$ %
;
√√% &
return
ƒƒ 
	EditState
ƒƒ (
.
ƒƒ( )
Continue
ƒƒ) 1
;
ƒƒ1 2
}
≈≈ 
case
«« 
KeyCode
«« 
.
«« 
	DownArrow
«« &
:
««& '
{
»» 
MoveDown
……  
(
……  !
shift
……! &
)
……& '
;
……' (
return
   
	EditState
   (
.
  ( )
Continue
  ) 1
;
  1 2
}
ÀÀ 
case
ÕÕ 
KeyCode
ÕÕ 
.
ÕÕ 
PageUp
ÕÕ #
:
ÕÕ# $
{
ŒŒ 

MovePageUp
œœ "
(
œœ" #
shift
œœ# (
)
œœ( )
;
œœ) *
return
–– 
	EditState
–– (
.
––( )
Continue
––) 1
;
––1 2
}
—— 
case
”” 
KeyCode
”” 
.
”” 
PageDown
”” %
:
””% &
{
‘‘ 
MovePageDown
’’ $
(
’’$ %
shift
’’% *
)
’’* +
;
’’+ ,
return
÷÷ 
	EditState
÷÷ (
.
÷÷( )
Continue
÷÷) 1
;
÷÷1 2
}
◊◊ 
case
⁄⁄ 
KeyCode
⁄⁄ 
.
⁄⁄ 
Return
⁄⁄ #
:
⁄⁄# $
case
€€ 
KeyCode
€€ 
.
€€ 
KeypadEnter
€€ (
:
€€( )
{
‹‹ 
if
›› 
(
›› 
lineType
›› $
!=
››% '
LineType
››( 0
.
››0 1
MultiLineNewline
››1 A
)
››A B
{
ﬁﬁ  
m_ReleaseSelection
ﬂﬂ .
=
ﬂﬂ/ 0
true
ﬂﬂ1 5
;
ﬂﬂ5 6
return
‡‡ "
	EditState
‡‡# ,
.
‡‡, -
Finish
‡‡- 3
;
‡‡3 4
}
·· 
break
‚‚ 
;
‚‚ 
}
„„ 
case
ÂÂ 
KeyCode
ÂÂ 
.
ÂÂ 
Escape
ÂÂ #
:
ÂÂ# $
{
ÊÊ  
m_ReleaseSelection
ÁÁ *
=
ÁÁ+ ,
true
ÁÁ- 1
;
ÁÁ1 2
m_WasCanceled
ËË %
=
ËË& '
true
ËË( ,
;
ËË, -
return
ÈÈ 
	EditState
ÈÈ (
.
ÈÈ( )
Finish
ÈÈ) /
;
ÈÈ/ 0
}
ÍÍ 
}
ÎÎ 
char
ÌÌ 
c
ÌÌ 
=
ÌÌ 
evt
ÌÌ 
.
ÌÌ 
	character
ÌÌ "
;
ÌÌ" #
if
 
(
 
!
 
	multiLine
 
&&
 
(
 
c
  
==
! #
$char
$ (
||
) +
c
, -
==
. 0
$char
1 5
||
6 8
c
9 :
==
; =
$num
> @
)
@ A
)
A B
return
ÒÒ 
	EditState
ÒÒ  
.
ÒÒ  !
Continue
ÒÒ! )
;
ÒÒ) *
if
ÙÙ 
(
ÙÙ 
c
ÙÙ 
==
ÙÙ 
$char
ÙÙ 
||
ÙÙ 
(
ÙÙ 
int
ÙÙ !
)
ÙÙ! "
c
ÙÙ" #
==
ÙÙ$ &
$num
ÙÙ' (
)
ÙÙ( )
c
ıı 
=
ıı 
$char
ıı 
;
ıı 
if
¯¯ 
(
¯¯ 
shift
¯¯ 
&&
¯¯ 
c
¯¯ 
==
¯¯ 
$char
¯¯ "
)
¯¯" #
c
˘˘ 
=
˘˘ 
$char
˘˘ 
;
˘˘ 
if
˚˚ 
(
˚˚ 
IsValidChar
˚˚ 
(
˚˚ 
c
˚˚ 
)
˚˚ 
)
˚˚ 
{
¸¸ 
Append
˝˝ 
(
˝˝ 
c
˝˝ 
)
˝˝ 
;
˝˝ 
}
˛˛ 
if
ÄÄ 
(
ÄÄ 
c
ÄÄ 
==
ÄÄ 
$num
ÄÄ 
)
ÄÄ 
{
ÅÅ 
if
ÇÇ 
(
ÇÇ 
compositionLength
ÇÇ %
>
ÇÇ& '
$num
ÇÇ( )
)
ÇÇ) *
{
ÉÉ 
UpdateLabel
ÑÑ 
(
ÑÑ  
)
ÑÑ  !
;
ÑÑ! "
}
ÖÖ 
}
ÜÜ 
return
áá 
	EditState
áá 
.
áá 
Continue
áá %
;
áá% &
}
àà 	
	protected
ää 
virtual
ää 
bool
ää 
IsValidChar
ää *
(
ää* +
char
ää+ /
c
ää0 1
)
ää1 2
{
ãã 	
if
çç 
(
çç 
c
çç 
==
çç 
$num
çç 
)
çç 
return
éé 
false
éé 
;
éé 
if
ëë 
(
ëë 
c
ëë 
==
ëë 
$num
ëë 
)
ëë 
return
íí 
false
íí 
;
íí 
if
ïï 
(
ïï 
c
ïï 
==
ïï 
$char
ïï 
||
ïï 
c
ïï 
==
ïï !
$char
ïï" &
)
ïï& '
return
ññ 
true
ññ 
;
ññ 
return
òò 
true
òò 
;
òò 
}
úú 	
private
°° 
Event
°° 
m_ProcessingEvent
°° '
=
°°( )
new
°°* -
Event
°°. 3
(
°°3 4
)
°°4 5
;
°°5 6
public
££ 
void
££ 
ProcessEvent
££  
(
££  !
Event
££! &
e
££' (
)
££( )
{
§§ 	

KeyPressed
•• 
(
•• 
e
•• 
)
•• 
;
•• 
}
¶¶ 	
public
≠≠ 
virtual
≠≠ 
void
≠≠ 
OnUpdateSelected
≠≠ ,
(
≠≠, -
BaseEventData
≠≠- :
	eventData
≠≠; D
)
≠≠D E
{
ÆÆ 	
if
ØØ 
(
ØØ 
!
ØØ 
	isFocused
ØØ 
)
ØØ 
return
∞∞ 
;
∞∞ 
bool
≤≤ 
consumedEvent
≤≤ 
=
≤≤  
false
≤≤! &
;
≤≤& '
	EditState
≥≥ 
shouldContinue
≥≥ $
;
≥≥$ %
while
µµ 
(
µµ 
Event
µµ 
.
µµ 
PopEvent
µµ !
(
µµ! "
m_ProcessingEvent
µµ" 3
)
µµ3 4
)
µµ4 5
{
∂∂ 
switch
ππ 
(
ππ 
m_ProcessingEvent
ππ )
.
ππ) *
rawType
ππ* 1
)
ππ1 2
{
∫∫ 
case
ªª 
	EventType
ªª "
.
ªª" #
KeyUp
ªª# (
:
ªª( )
break
ææ 
;
ææ 
case
¡¡ 
	EventType
¡¡ "
.
¡¡" #
KeyDown
¡¡# *
:
¡¡* +
consumedEvent
¬¬ %
=
¬¬& '
true
¬¬( ,
;
¬¬, -
if
≈≈ 
(
≈≈ #
m_IsCompositionActive
≈≈ 1
&&
≈≈2 4
compositionLength
≈≈5 F
==
≈≈G I
$num
≈≈J K
)
≈≈K L
{
∆∆ 
if
”” 
(
””  
m_ProcessingEvent
””  1
.
””1 2
	character
””2 ;
==
””< >
$num
””? @
&&
””A C
m_ProcessingEvent
””D U
.
””U V
	modifiers
””V _
==
””` b
EventModifiers
””c q
.
””q r
None
””r v
)
””v w
break
‘‘  %
;
‘‘% &
}
’’ 
shouldContinue
◊◊ &
=
◊◊' (

KeyPressed
◊◊) 3
(
◊◊3 4
m_ProcessingEvent
◊◊4 E
)
◊◊E F
;
◊◊F G
if
ÿÿ 
(
ÿÿ 
shouldContinue
ÿÿ *
==
ÿÿ+ -
	EditState
ÿÿ. 7
.
ÿÿ7 8
Finish
ÿÿ8 >
)
ÿÿ> ?
{
ŸŸ 
SendOnSubmit
⁄⁄ (
(
⁄⁄( )
)
⁄⁄) *
;
⁄⁄* +"
DeactivateInputField
€€ 0
(
€€0 1
)
€€1 2
;
€€2 3
break
‹‹ !
;
‹‹! "
}
›› -
m_IsTextComponentUpdateRequired
ﬂﬂ 7
=
ﬂﬂ8 9
true
ﬂﬂ: >
;
ﬂﬂ> ?
UpdateLabel
‡‡ #
(
‡‡# $
)
‡‡$ %
;
‡‡% &
break
‚‚ 
;
‚‚ 
case
‰‰ 
	EventType
‰‰ "
.
‰‰" #
ValidateCommand
‰‰# 2
:
‰‰2 3
case
ÂÂ 
	EventType
ÂÂ "
.
ÂÂ" #
ExecuteCommand
ÂÂ# 1
:
ÂÂ1 2
switch
ÊÊ 
(
ÊÊ  
m_ProcessingEvent
ÊÊ  1
.
ÊÊ1 2
commandName
ÊÊ2 =
)
ÊÊ= >
{
ÁÁ 
case
ËË  
$str
ËË! ,
:
ËË, -
	SelectAll
ÈÈ  )
(
ÈÈ) *
)
ÈÈ* +
;
ÈÈ+ ,
consumedEvent
ÍÍ  -
=
ÍÍ. /
true
ÍÍ0 4
;
ÍÍ4 5
break
ÎÎ  %
;
ÎÎ% &
}
ÏÏ 
break
ÌÌ 
;
ÌÌ 
}
ÓÓ 
}
ÔÔ 
if
ÒÒ 
(
ÒÒ 
consumedEvent
ÒÒ 
)
ÒÒ 
UpdateLabel
ÚÚ 
(
ÚÚ 
)
ÚÚ 
;
ÚÚ 
	eventData
ÙÙ 
.
ÙÙ 
Use
ÙÙ 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
}
ıı 	
public
¸¸ 
virtual
¸¸ 
void
¸¸ 
OnScroll
¸¸ $
(
¸¸$ %
PointerEventData
¸¸% 5
	eventData
¸¸6 ?
)
¸¸? @
{
˝˝ 	
if
ˇˇ 
(
ˇˇ 

m_LineType
ˇˇ 
==
ˇˇ 
LineType
ˇˇ &
.
ˇˇ& '

SingleLine
ˇˇ' 1
)
ˇˇ1 2
return
ÄÄ 
;
ÄÄ 
if
ÇÇ 
(
ÇÇ 
m_TextComponent
ÇÇ 
.
ÇÇ  
preferredHeight
ÇÇ  /
<
ÇÇ0 1
m_TextViewport
ÇÇ2 @
.
ÇÇ@ A
rect
ÇÇA E
.
ÇÇE F
height
ÇÇF L
)
ÇÇL M
return
ÉÉ 
;
ÉÉ 
float
ÖÖ 
scrollDirection
ÖÖ !
=
ÖÖ" #
-
ÖÖ$ %
	eventData
ÖÖ% .
.
ÖÖ. /
scrollDelta
ÖÖ/ :
.
ÖÖ: ;
y
ÖÖ; <
;
ÖÖ< =
m_ScrollPosition
áá 
=
áá 
m_ScrollPosition
áá /
+
áá0 1
(
áá2 3
$num
áá3 5
/
áá6 7
m_TextComponent
áá8 G
.
ááG H
textInfo
ááH P
.
ááP Q
	lineCount
ááQ Z
)
ááZ [
*
áá\ ]
scrollDirection
áá^ m
*
áán o"
m_ScrollSensitivityááp É
;ááÉ Ñ
m_ScrollPosition
ââ 
=
ââ 
Mathf
ââ $
.
ââ$ %
Clamp01
ââ% ,
(
ââ, -
m_ScrollPosition
ââ- =
)
ââ= >
;
ââ> ?2
$AdjustTextPositionRelativeToViewport
ãã 0
(
ãã0 1
m_ScrollPosition
ãã1 A
)
ããA B
;
ããB C
if
çç 
(
çç !
m_VerticalScrollbar
çç #
)
çç# $
{
éé )
m_IsUpdatingScrollbarValues
èè +
=
èè, -
true
èè. 2
;
èè2 3!
m_VerticalScrollbar
êê #
.
êê# $
value
êê$ )
=
êê* +
m_ScrollPosition
êê, <
;
êê< =
}
ëë 
}
îî 	
private
óó 
string
óó 
GetSelectedString
óó (
(
óó( )
)
óó) *
{
òò 	
if
ôô 
(
ôô 
!
ôô 
hasSelection
ôô 
)
ôô 
return
öö 
$str
öö 
;
öö 
int
úú 
startPos
úú 
=
úú $
stringPositionInternal
úú 1
;
úú1 2
int
ùù 
endPos
ùù 
=
ùù *
stringSelectPositionInternal
ùù 5
;
ùù5 6
if
†† 
(
†† 
startPos
†† 
>
†† 
endPos
†† !
)
††! "
{
°° 
int
¢¢ 
temp
¢¢ 
=
¢¢ 
startPos
¢¢ #
;
¢¢# $
startPos
££ 
=
££ 
endPos
££ !
;
££! "
endPos
§§ 
=
§§ 
temp
§§ 
;
§§ 
}
•• 
return
≠≠ 
text
≠≠ 
.
≠≠ 
	Substring
≠≠ !
(
≠≠! "
startPos
≠≠" *
,
≠≠* +
endPos
≠≠, 2
-
≠≠3 4
startPos
≠≠5 =
)
≠≠= >
;
≠≠> ?
}
ÆÆ 	
private
∞∞ 
int
∞∞ 
FindNextWordBegin
∞∞ %
(
∞∞% &
)
∞∞& '
{
±± 	
if
≤≤ 
(
≤≤ *
stringSelectPositionInternal
≤≤ ,
+
≤≤- .
$num
≤≤/ 0
>=
≤≤1 3
text
≤≤4 8
.
≤≤8 9
Length
≤≤9 ?
)
≤≤? @
return
≥≥ 
text
≥≥ 
.
≥≥ 
Length
≥≥ "
;
≥≥" #
int
µµ 
spaceLoc
µµ 
=
µµ 
text
µµ 
.
µµ  

IndexOfAny
µµ  *
(
µµ* +
kSeparators
µµ+ 6
,
µµ6 7*
stringSelectPositionInternal
µµ8 T
+
µµU V
$num
µµW X
)
µµX Y
;
µµY Z
if
∑∑ 
(
∑∑ 
spaceLoc
∑∑ 
==
∑∑ 
-
∑∑ 
$num
∑∑ 
)
∑∑ 
spaceLoc
∏∏ 
=
∏∏ 
text
∏∏ 
.
∏∏  
Length
∏∏  &
;
∏∏& '
else
ππ 
spaceLoc
∫∫ 
++
∫∫ 
;
∫∫ 
return
ºº 
spaceLoc
ºº 
;
ºº 
}
ΩΩ 	
private
øø 
void
øø 
	MoveRight
øø 
(
øø 
bool
øø #
shift
øø$ )
,
øø) *
bool
øø+ /
ctrl
øø0 4
)
øø4 5
{
¿¿ 	
if
¡¡ 
(
¡¡ 
hasSelection
¡¡ 
&&
¡¡ 
!
¡¡  !
shift
¡¡! &
)
¡¡& '
{
¬¬ $
stringPositionInternal
≈≈ &
=
≈≈' (*
stringSelectPositionInternal
≈≈) E
=
≈≈F G
Mathf
≈≈H M
.
≈≈M N
Max
≈≈N Q
(
≈≈Q R$
stringPositionInternal
≈≈R h
,
≈≈h i+
stringSelectPositionInternal≈≈j Ü
)≈≈Ü á
;≈≈á à#
caretPositionInternal
∆∆ %
=
∆∆& ')
caretSelectPositionInternal
∆∆( C
=
∆∆D E-
GetCaretPositionFromStringIndex
∆∆F e
(
∆∆e f+
stringSelectPositionInternal∆∆f Ç
)∆∆Ç É
;∆∆É Ñ
return
ÀÀ 
;
ÀÀ 
}
ÃÃ 
int
ŒŒ 
position
ŒŒ 
;
ŒŒ 
if
œœ 
(
œœ 
ctrl
œœ 
)
œœ 
position
–– 
=
–– 
FindNextWordBegin
–– ,
(
––, -
)
––- .
;
––. /
else
—— 
{
““ 
if
”” 
(
”” (
m_isRichTextEditingAllowed
”” .
)
””. /
{
‘‘ 
if
÷÷ 
(
÷÷ *
stringSelectPositionInternal
÷÷ 4
<
÷÷5 6
text
÷÷7 ;
.
÷÷; <
Length
÷÷< B
&&
÷÷C E
char
÷÷F J
.
÷÷J K
IsHighSurrogate
÷÷K Z
(
÷÷Z [
text
÷÷[ _
[
÷÷_ `*
stringSelectPositionInternal
÷÷` |
]
÷÷| }
)
÷÷} ~
)
÷÷~ 
position
◊◊  
=
◊◊! "*
stringSelectPositionInternal
◊◊# ?
+
◊◊@ A
$num
◊◊B C
;
◊◊C D
else
ÿÿ 
position
ŸŸ  
=
ŸŸ! "*
stringSelectPositionInternal
ŸŸ# ?
+
ŸŸ@ A
$num
ŸŸB C
;
ŸŸC D
}
⁄⁄ 
else
€€ 
{
‹‹ 
position
›› 
=
›› 
m_TextComponent
›› .
.
››. /
textInfo
››/ 7
.
››7 8
characterInfo
››8 E
[
››E F)
caretSelectPositionInternal
››F a
]
››a b
.
››b c
index
››c h
+
››i j
m_TextComponent
››k z
.
››z {
textInfo››{ É
.››É Ñ
characterInfo››Ñ ë
[››ë í+
caretSelectPositionInternal››í ≠
]››≠ Æ
.››Æ Ø
stringLength››Ø ª
;››ª º
}
ﬁﬁ 
}
‡‡ 
if
‚‚ 
(
‚‚ 
shift
‚‚ 
)
‚‚ 
{
„„ *
stringSelectPositionInternal
‰‰ ,
=
‰‰- .
position
‰‰/ 7
;
‰‰7 8)
caretSelectPositionInternal
ÂÂ +
=
ÂÂ, --
GetCaretPositionFromStringIndex
ÂÂ. M
(
ÂÂM N*
stringSelectPositionInternal
ÂÂN j
)
ÂÂj k
;
ÂÂk l
}
ÊÊ 
else
ÁÁ 
{
ËË *
stringSelectPositionInternal
ÈÈ ,
=
ÈÈ- .$
stringPositionInternal
ÈÈ/ E
=
ÈÈF G
position
ÈÈH P
;
ÈÈP Q
if
ÏÏ 
(
ÏÏ $
stringPositionInternal
ÏÏ *
>=
ÏÏ+ -
m_TextComponent
ÏÏ. =
.
ÏÏ= >
textInfo
ÏÏ> F
.
ÏÏF G
characterInfo
ÏÏG T
[
ÏÏT U#
caretPositionInternal
ÏÏU j
]
ÏÏj k
.
ÏÏk l
index
ÏÏl q
+
ÏÏr s
m_TextComponentÏÏt É
.ÏÏÉ Ñ
textInfoÏÏÑ å
.ÏÏå ç
characterInfoÏÏç ö
[ÏÏö õ%
caretPositionInternalÏÏõ ∞
]ÏÏ∞ ±
.ÏÏ± ≤
stringLengthÏÏ≤ æ
)ÏÏæ ø)
caretSelectPositionInternal
ÌÌ /
=
ÌÌ0 1#
caretPositionInternal
ÌÌ2 G
=
ÌÌH I-
GetCaretPositionFromStringIndex
ÌÌJ i
(
ÌÌi j+
stringSelectPositionInternalÌÌj Ü
)ÌÌÜ á
;ÌÌá à
}
ÓÓ 
}
ÛÛ 	
private
ıı 
int
ıı 
FindPrevWordBegin
ıı %
(
ıı% &
)
ıı& '
{
ˆˆ 	
if
˜˜ 
(
˜˜ *
stringSelectPositionInternal
˜˜ ,
-
˜˜- .
$num
˜˜/ 0
<
˜˜1 2
$num
˜˜3 4
)
˜˜4 5
return
¯¯ 
$num
¯¯ 
;
¯¯ 
int
˙˙ 
spaceLoc
˙˙ 
=
˙˙ 
text
˙˙ 
.
˙˙  
LastIndexOfAny
˙˙  .
(
˙˙. /
kSeparators
˙˙/ :
,
˙˙: ;*
stringSelectPositionInternal
˙˙< X
-
˙˙Y Z
$num
˙˙[ \
)
˙˙\ ]
;
˙˙] ^
if
¸¸ 
(
¸¸ 
spaceLoc
¸¸ 
==
¸¸ 
-
¸¸ 
$num
¸¸ 
)
¸¸ 
spaceLoc
˝˝ 
=
˝˝ 
$num
˝˝ 
;
˝˝ 
else
˛˛ 
spaceLoc
ˇˇ 
++
ˇˇ 
;
ˇˇ 
return
ÅÅ 
spaceLoc
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
private
ÑÑ 
void
ÑÑ 
MoveLeft
ÑÑ 
(
ÑÑ 
bool
ÑÑ "
shift
ÑÑ# (
,
ÑÑ( )
bool
ÑÑ* .
ctrl
ÑÑ/ 3
)
ÑÑ3 4
{
ÖÖ 	
if
ÜÜ 
(
ÜÜ 
hasSelection
ÜÜ 
&&
ÜÜ 
!
ÜÜ  !
shift
ÜÜ! &
)
ÜÜ& '
{
áá $
stringPositionInternal
ää &
=
ää' (*
stringSelectPositionInternal
ää) E
=
ääF G
Mathf
ääH M
.
ääM N
Min
ääN Q
(
ääQ R$
stringPositionInternal
ääR h
,
ääh i+
stringSelectPositionInternalääj Ü
)ääÜ á
;ääá à#
caretPositionInternal
ãã %
=
ãã& ')
caretSelectPositionInternal
ãã( C
=
ããD E-
GetCaretPositionFromStringIndex
ããF e
(
ããe f+
stringSelectPositionInternalããf Ç
)ããÇ É
;ããÉ Ñ
return
êê 
;
êê 
}
ëë 
int
ìì 
position
ìì 
;
ìì 
if
îî 
(
îî 
ctrl
îî 
)
îî 
position
ïï 
=
ïï 
FindPrevWordBegin
ïï ,
(
ïï, -
)
ïï- .
;
ïï. /
else
ññ 
{
óó 
if
òò 
(
òò (
m_isRichTextEditingAllowed
òò .
)
òò. /
{
ôô 
if
õõ 
(
õõ *
stringSelectPositionInternal
õõ 4
>
õõ5 6
$num
õõ7 8
&&
õõ9 ;
char
õõ< @
.
õõ@ A
IsLowSurrogate
õõA O
(
õõO P
text
õõP T
[
õõT U*
stringSelectPositionInternal
õõU q
-
õõr s
$num
õõt u
]
õõu v
)
õõv w
)
õõw x
position
úú  
=
úú! "*
stringSelectPositionInternal
úú# ?
-
úú@ A
$num
úúB C
;
úúC D
else
ùù 
position
ûû  
=
ûû! "*
stringSelectPositionInternal
ûû$ @
-
ûûA B
$num
ûûC D
;
ûûD E
}
üü 
else
†† 
{
°° 
position
££ 
=
££ )
caretSelectPositionInternal
££ :
<
££; <
$num
££= >
?
§§ 
m_TextComponent
§§ )
.
§§) *
textInfo
§§* 2
.
§§2 3
characterInfo
§§3 @
[
§§@ A
$num
§§A B
]
§§B C
.
§§C D
index
§§D I
:
•• 
m_TextComponent
•• )
.
••) *
textInfo
••* 2
.
••2 3
characterInfo
••3 @
[
••@ A)
caretSelectPositionInternal
••A \
-
••] ^
$num
••_ `
]
••` a
.
••a b
index
••b g
+
••h i
m_TextComponent
••j y
.
••y z
textInfo••z Ç
.••Ç É
characterInfo••É ê
[••ê ë+
caretSelectPositionInternal••ë ¨
-••≠ Æ
$num••Ø ∞
]••∞ ±
.••± ≤
stringLength••≤ æ
;••æ ø
}
¶¶ 
}
ßß 
if
©© 
(
©© 
shift
©© 
)
©© 
{
™™ *
stringSelectPositionInternal
´´ ,
=
´´- .
position
´´/ 7
;
´´7 8)
caretSelectPositionInternal
¨¨ +
=
¨¨, --
GetCaretPositionFromStringIndex
¨¨. M
(
¨¨M N*
stringSelectPositionInternal
¨¨N j
)
¨¨j k
;
¨¨k l
}
≠≠ 
else
ÆÆ 
{
ØØ *
stringSelectPositionInternal
∞∞ ,
=
∞∞- .$
stringPositionInternal
∞∞/ E
=
∞∞F G
position
∞∞H P
;
∞∞P Q
if
≥≥ 
(
≥≥ #
caretPositionInternal
≥≥ )
>
≥≥* +
$num
≥≥, -
&&
≥≥. 0$
stringPositionInternal
≥≥1 G
<=
≥≥H J
m_TextComponent
≥≥K Z
.
≥≥Z [
textInfo
≥≥[ c
.
≥≥c d
characterInfo
≥≥d q
[
≥≥q r$
caretPositionInternal≥≥r á
-≥≥à â
$num≥≥ä ã
]≥≥ã å
.≥≥å ç
index≥≥ç í
)≥≥í ì)
caretSelectPositionInternal
¥¥ /
=
¥¥0 1#
caretPositionInternal
¥¥2 G
=
¥¥H I-
GetCaretPositionFromStringIndex
¥¥J i
(
¥¥i j+
stringSelectPositionInternal¥¥j Ü
)¥¥Ü á
;¥¥á à
}
µµ 
}
∫∫ 	
private
ΩΩ 
int
ΩΩ %
LineUpCharacterPosition
ΩΩ +
(
ΩΩ+ ,
int
ΩΩ, /
originalPos
ΩΩ0 ;
,
ΩΩ; <
bool
ΩΩ= A
goToFirstChar
ΩΩB O
)
ΩΩO P
{
ææ 	
if
øø 
(
øø 
originalPos
øø 
>=
øø 
m_TextComponent
øø .
.
øø. /
textInfo
øø/ 7
.
øø7 8
characterCount
øø8 F
)
øøF G
originalPos
¿¿ 
-=
¿¿ 
$num
¿¿  
;
¿¿  !
TMP_CharacterInfo
¬¬ 

originChar
¬¬ (
=
¬¬) *
m_TextComponent
¬¬+ :
.
¬¬: ;
textInfo
¬¬; C
.
¬¬C D
characterInfo
¬¬D Q
[
¬¬Q R
originalPos
¬¬R ]
]
¬¬] ^
;
¬¬^ _
int
√√ 

originLine
√√ 
=
√√ 

originChar
√√ '
.
√√' (

lineNumber
√√( 2
;
√√2 3
if
∆∆ 
(
∆∆ 

originLine
∆∆ 
-
∆∆ 
$num
∆∆ 
<
∆∆  
$num
∆∆! "
)
∆∆" #
return
«« 
goToFirstChar
«« $
?
««% &
$num
««' (
:
««) *
originalPos
««+ 6
;
««6 7
int
…… 

endCharIdx
…… 
=
…… 
m_TextComponent
…… ,
.
……, -
textInfo
……- 5
.
……5 6
lineInfo
……6 >
[
……> ?

originLine
……? I
]
……I J
.
……J K!
firstCharacterIndex
……K ^
-
……_ `
$num
……a b
;
……b c
int
ÀÀ 
closest
ÀÀ 
=
ÀÀ 
-
ÀÀ 
$num
ÀÀ 
;
ÀÀ 
float
ÃÃ 
distance
ÃÃ 
=
ÃÃ 
TMP_Math
ÃÃ %
.
ÃÃ% &
	FLOAT_MAX
ÃÃ& /
;
ÃÃ/ 0
float
ÕÕ 
range
ÕÕ 
=
ÕÕ 
$num
ÕÕ 
;
ÕÕ 
for
œœ 
(
œœ 
int
œœ 
i
œœ 
=
œœ 
m_TextComponent
œœ (
.
œœ( )
textInfo
œœ) 1
.
œœ1 2
lineInfo
œœ2 :
[
œœ: ;

originLine
œœ; E
-
œœF G
$num
œœH I
]
œœI J
.
œœJ K!
firstCharacterIndex
œœK ^
;
œœ^ _
i
œœ` a
<
œœb c

endCharIdx
œœd n
;
œœn o
++
œœp r
i
œœr s
)
œœs t
{
–– 
TMP_CharacterInfo
—— !
currentChar
——" -
=
——. /
m_TextComponent
——0 ?
.
——? @
textInfo
——@ H
.
——H I
characterInfo
——I V
[
——V W
i
——W X
]
——X Y
;
——Y Z
float
”” 
d
”” 
=
”” 

originChar
”” $
.
””$ %
origin
””% +
-
””, -
currentChar
””. 9
.
””9 :
origin
””: @
;
””@ A
float
‘‘ 
r
‘‘ 
=
‘‘ 
d
‘‘ 
/
‘‘ 
(
‘‘ 
currentChar
‘‘ *
.
‘‘* +
xAdvance
‘‘+ 3
-
‘‘4 5
currentChar
‘‘6 A
.
‘‘A B
origin
‘‘B H
)
‘‘H I
;
‘‘I J
if
÷÷ 
(
÷÷ 
r
÷÷ 
>=
÷÷ 
$num
÷÷ 
&&
÷÷ 
r
÷÷ 
<=
÷÷  "
$num
÷÷# $
)
÷÷$ %
{
◊◊ 
if
ÿÿ 
(
ÿÿ 
r
ÿÿ 
<
ÿÿ 
$num
ÿÿ  
)
ÿÿ  !
return
ŸŸ 
i
ŸŸ  
;
ŸŸ  !
else
⁄⁄ 
return
€€ 
i
€€  
+
€€! "
$num
€€# $
;
€€$ %
}
‹‹ 
d
ﬁﬁ 
=
ﬁﬁ 
Mathf
ﬁﬁ 
.
ﬁﬁ 
Abs
ﬁﬁ 
(
ﬁﬁ 
d
ﬁﬁ 
)
ﬁﬁ  
;
ﬁﬁ  !
if
‡‡ 
(
‡‡ 
d
‡‡ 
<
‡‡ 
distance
‡‡  
)
‡‡  !
{
·· 
closest
‚‚ 
=
‚‚ 
i
‚‚ 
;
‚‚  
distance
„„ 
=
„„ 
d
„„  
;
„„  !
range
‰‰ 
=
‰‰ 
r
‰‰ 
;
‰‰ 
}
ÂÂ 
}
ÊÊ 
if
ËË 
(
ËË 
closest
ËË 
==
ËË 
-
ËË 
$num
ËË 
)
ËË 
return
ËË %

endCharIdx
ËË& 0
;
ËË0 1
if
ÏÏ 
(
ÏÏ 
range
ÏÏ 
<
ÏÏ 
$num
ÏÏ 
)
ÏÏ 
return
ÌÌ 
closest
ÌÌ 
;
ÌÌ 
else
ÓÓ 
return
ÔÔ 
closest
ÔÔ 
+
ÔÔ  
$num
ÔÔ! "
;
ÔÔ" #
}
 	
private
ÛÛ 
int
ÛÛ '
LineDownCharacterPosition
ÛÛ -
(
ÛÛ- .
int
ÛÛ. 1
originalPos
ÛÛ2 =
,
ÛÛ= >
bool
ÛÛ? C
goToLastChar
ÛÛD P
)
ÛÛP Q
{
ÙÙ 	
if
ıı 
(
ıı 
originalPos
ıı 
>=
ıı 
m_TextComponent
ıı .
.
ıı. /
textInfo
ıı/ 7
.
ıı7 8
characterCount
ıı8 F
)
ııF G
return
ˆˆ 
m_TextComponent
ˆˆ &
.
ˆˆ& '
textInfo
ˆˆ' /
.
ˆˆ/ 0
characterCount
ˆˆ0 >
-
ˆˆ? @
$num
ˆˆA B
;
ˆˆB C
TMP_CharacterInfo
¯¯ 

originChar
¯¯ (
=
¯¯) *
m_TextComponent
¯¯+ :
.
¯¯: ;
textInfo
¯¯; C
.
¯¯C D
characterInfo
¯¯D Q
[
¯¯Q R
originalPos
¯¯R ]
]
¯¯] ^
;
¯¯^ _
int
˘˘ 

originLine
˘˘ 
=
˘˘ 

originChar
˘˘ '
.
˘˘' (

lineNumber
˘˘( 2
;
˘˘2 3
if
¸¸ 
(
¸¸ 

originLine
¸¸ 
+
¸¸ 
$num
¸¸ 
>=
¸¸ !
m_TextComponent
¸¸" 1
.
¸¸1 2
textInfo
¸¸2 :
.
¸¸: ;
	lineCount
¸¸; D
)
¸¸D E
return
˝˝ 
goToLastChar
˝˝ #
?
˝˝$ %
m_TextComponent
˝˝& 5
.
˝˝5 6
textInfo
˝˝6 >
.
˝˝> ?
characterCount
˝˝? M
-
˝˝N O
$num
˝˝P Q
:
˝˝R S
originalPos
˝˝T _
;
˝˝_ `
int
ÄÄ 

endCharIdx
ÄÄ 
=
ÄÄ 
m_TextComponent
ÄÄ ,
.
ÄÄ, -
textInfo
ÄÄ- 5
.
ÄÄ5 6
lineInfo
ÄÄ6 >
[
ÄÄ> ?

originLine
ÄÄ? I
+
ÄÄJ K
$num
ÄÄL M
]
ÄÄM N
.
ÄÄN O 
lastCharacterIndex
ÄÄO a
;
ÄÄa b
int
ÇÇ 
closest
ÇÇ 
=
ÇÇ 
-
ÇÇ 
$num
ÇÇ 
;
ÇÇ 
float
ÉÉ 
distance
ÉÉ 
=
ÉÉ 
TMP_Math
ÉÉ %
.
ÉÉ% &
	FLOAT_MAX
ÉÉ& /
;
ÉÉ/ 0
float
ÑÑ 
range
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
i
ÜÜ 
=
ÜÜ 
m_TextComponent
ÜÜ (
.
ÜÜ( )
textInfo
ÜÜ) 1
.
ÜÜ1 2
lineInfo
ÜÜ2 :
[
ÜÜ: ;

originLine
ÜÜ; E
+
ÜÜF G
$num
ÜÜH I
]
ÜÜI J
.
ÜÜJ K!
firstCharacterIndex
ÜÜK ^
;
ÜÜ^ _
i
ÜÜ` a
<
ÜÜb c

endCharIdx
ÜÜd n
;
ÜÜn o
++
ÜÜp r
i
ÜÜr s
)
ÜÜs t
{
áá 
TMP_CharacterInfo
àà !
currentChar
àà" -
=
àà. /
m_TextComponent
àà0 ?
.
àà? @
textInfo
àà@ H
.
ààH I
characterInfo
ààI V
[
ààV W
i
ààW X
]
ààX Y
;
ààY Z
float
ää 
d
ää 
=
ää 

originChar
ää $
.
ää$ %
origin
ää% +
-
ää, -
currentChar
ää. 9
.
ää9 :
origin
ää: @
;
ää@ A
float
ãã 
r
ãã 
=
ãã 
d
ãã 
/
ãã 
(
ãã 
currentChar
ãã *
.
ãã* +
xAdvance
ãã+ 3
-
ãã4 5
currentChar
ãã6 A
.
ããA B
origin
ããB H
)
ããH I
;
ããI J
if
çç 
(
çç 
r
çç 
>=
çç 
$num
çç 
&&
çç 
r
çç 
<=
çç  "
$num
çç# $
)
çç$ %
{
éé 
if
èè 
(
èè 
r
èè 
<
èè 
$num
èè  
)
èè  !
return
êê 
i
êê  
;
êê  !
else
ëë 
return
íí 
i
íí  
+
íí! "
$num
íí# $
;
íí$ %
}
ìì 
d
ïï 
=
ïï 
Mathf
ïï 
.
ïï 
Abs
ïï 
(
ïï 
d
ïï 
)
ïï  
;
ïï  !
if
óó 
(
óó 
d
óó 
<
óó 
distance
óó  
)
óó  !
{
òò 
closest
ôô 
=
ôô 
i
ôô 
;
ôô  
distance
öö 
=
öö 
d
öö  
;
öö  !
range
õõ 
=
õõ 
r
õõ 
;
õõ 
}
úú 
}
ùù 
if
üü 
(
üü 
closest
üü 
==
üü 
-
üü 
$num
üü 
)
üü 
return
üü %

endCharIdx
üü& 0
;
üü0 1
if
££ 
(
££ 
range
££ 
<
££ 
$num
££ 
)
££ 
return
§§ 
closest
§§ 
;
§§ 
else
•• 
return
¶¶ 
closest
¶¶ 
+
¶¶  
$num
¶¶! "
;
¶¶" #
}
ßß 	
private
™™	 
int
™™ %
PageUpCharacterPosition
™™ ,
(
™™, -
int
™™- 0
originalPos
™™1 <
,
™™< =
bool
™™> B
goToFirstChar
™™C P
)
™™P Q
{
´´ 	
if
¨¨ 
(
¨¨ 
originalPos
¨¨ 
>=
¨¨ 
m_TextComponent
¨¨ .
.
¨¨. /
textInfo
¨¨/ 7
.
¨¨7 8
characterCount
¨¨8 F
)
¨¨F G
originalPos
≠≠ 
-=
≠≠ 
$num
≠≠  
;
≠≠  !
TMP_CharacterInfo
ØØ 

originChar
ØØ (
=
ØØ) *
m_TextComponent
ØØ+ :
.
ØØ: ;
textInfo
ØØ; C
.
ØØC D
characterInfo
ØØD Q
[
ØØQ R
originalPos
ØØR ]
]
ØØ] ^
;
ØØ^ _
int
∞∞ 

originLine
∞∞ 
=
∞∞ 

originChar
∞∞ '
.
∞∞' (

lineNumber
∞∞( 2
;
∞∞2 3
if
≥≥ 
(
≥≥ 

originLine
≥≥ 
-
≥≥ 
$num
≥≥ 
<
≥≥  
$num
≥≥! "
)
≥≥" #
return
¥¥ 
goToFirstChar
¥¥ $
?
¥¥% &
$num
¥¥' (
:
¥¥) *
originalPos
¥¥+ 6
;
¥¥6 7
float
∂∂ 
viewportHeight
∂∂  
=
∂∂! "
m_TextViewport
∂∂# 1
.
∂∂1 2
rect
∂∂2 6
.
∂∂6 7
height
∂∂7 =
;
∂∂= >
int
∏∏ 
newLine
∏∏ 
=
∏∏ 

originLine
∏∏ $
-
∏∏% &
$num
∏∏' (
;
∏∏( )
for
∫∫ 
(
∫∫ 
;
∫∫ 
newLine
∫∫ 
>
∫∫ 
$num
∫∫ 
;
∫∫ 
newLine
∫∫  '
--
∫∫' )
)
∫∫) *
{
ªª 
if
ºº 
(
ºº 
m_TextComponent
ºº #
.
ºº# $
textInfo
ºº$ ,
.
ºº, -
lineInfo
ºº- 5
[
ºº5 6
newLine
ºº6 =
]
ºº= >
.
ºº> ?
baseline
ºº? G
>
ººH I
m_TextComponent
ººJ Y
.
ººY Z
textInfo
ººZ b
.
ººb c
lineInfo
ººc k
[
ººk l

originLine
ººl v
]
ººv w
.
ººw x
baselineººx Ä
+ººÅ Ç
viewportHeightººÉ ë
)ººë í
break
ΩΩ 
;
ΩΩ 
}
ææ 
int
¿¿ 

endCharIdx
¿¿ 
=
¿¿ 
m_TextComponent
¿¿ ,
.
¿¿, -
textInfo
¿¿- 5
.
¿¿5 6
lineInfo
¿¿6 >
[
¿¿> ?
newLine
¿¿? F
]
¿¿F G
.
¿¿G H 
lastCharacterIndex
¿¿H Z
;
¿¿Z [
int
¬¬ 
closest
¬¬ 
=
¬¬ 
-
¬¬ 
$num
¬¬ 
;
¬¬ 
float
√√ 
distance
√√ 
=
√√ 
TMP_Math
√√ %
.
√√% &
	FLOAT_MAX
√√& /
;
√√/ 0
float
ƒƒ 
range
ƒƒ 
=
ƒƒ 
$num
ƒƒ 
;
ƒƒ 
for
∆∆ 
(
∆∆ 
int
∆∆ 
i
∆∆ 
=
∆∆ 
m_TextComponent
∆∆ (
.
∆∆( )
textInfo
∆∆) 1
.
∆∆1 2
lineInfo
∆∆2 :
[
∆∆: ;
newLine
∆∆; B
]
∆∆B C
.
∆∆C D!
firstCharacterIndex
∆∆D W
;
∆∆W X
i
∆∆Y Z
<
∆∆[ \

endCharIdx
∆∆] g
;
∆∆g h
++
∆∆i k
i
∆∆k l
)
∆∆l m
{
«« 
TMP_CharacterInfo
»» !
currentChar
»»" -
=
»». /
m_TextComponent
»»0 ?
.
»»? @
textInfo
»»@ H
.
»»H I
characterInfo
»»I V
[
»»V W
i
»»W X
]
»»X Y
;
»»Y Z
float
   
d
   
=
   

originChar
   $
.
  $ %
origin
  % +
-
  , -
currentChar
  . 9
.
  9 :
origin
  : @
;
  @ A
float
ÀÀ 
r
ÀÀ 
=
ÀÀ 
d
ÀÀ 
/
ÀÀ 
(
ÀÀ 
currentChar
ÀÀ *
.
ÀÀ* +
xAdvance
ÀÀ+ 3
-
ÀÀ4 5
currentChar
ÀÀ6 A
.
ÀÀA B
origin
ÀÀB H
)
ÀÀH I
;
ÀÀI J
if
ÕÕ 
(
ÕÕ 
r
ÕÕ 
>=
ÕÕ 
$num
ÕÕ 
&&
ÕÕ 
r
ÕÕ 
<=
ÕÕ  "
$num
ÕÕ# $
)
ÕÕ$ %
{
ŒŒ 
if
œœ 
(
œœ 
r
œœ 
<
œœ 
$num
œœ  
)
œœ  !
return
–– 
i
––  
;
––  !
else
—— 
return
““ 
i
““  
+
““! "
$num
““# $
;
““$ %
}
”” 
d
’’ 
=
’’ 
Mathf
’’ 
.
’’ 
Abs
’’ 
(
’’ 
d
’’ 
)
’’  
;
’’  !
if
◊◊ 
(
◊◊ 
d
◊◊ 
<
◊◊ 
distance
◊◊  
)
◊◊  !
{
ÿÿ 
closest
ŸŸ 
=
ŸŸ 
i
ŸŸ 
;
ŸŸ  
distance
⁄⁄ 
=
⁄⁄ 
d
⁄⁄  
;
⁄⁄  !
range
€€ 
=
€€ 
r
€€ 
;
€€ 
}
‹‹ 
}
›› 
if
ﬂﬂ 
(
ﬂﬂ 
closest
ﬂﬂ 
==
ﬂﬂ 
-
ﬂﬂ 
$num
ﬂﬂ 
)
ﬂﬂ 
return
ﬂﬂ %

endCharIdx
ﬂﬂ& 0
;
ﬂﬂ0 1
if
„„ 
(
„„ 
range
„„ 
<
„„ 
$num
„„ 
)
„„ 
return
‰‰ 
closest
‰‰ 
;
‰‰ 
else
ÂÂ 
return
ÊÊ 
closest
ÊÊ 
+
ÊÊ  
$num
ÊÊ! "
;
ÊÊ" #
}
ÁÁ 	
private
ÍÍ	 
int
ÍÍ '
PageDownCharacterPosition
ÍÍ .
(
ÍÍ. /
int
ÍÍ/ 2
originalPos
ÍÍ3 >
,
ÍÍ> ?
bool
ÍÍ@ D
goToLastChar
ÍÍE Q
)
ÍÍQ R
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ 
originalPos
ÏÏ 
>=
ÏÏ 
m_TextComponent
ÏÏ .
.
ÏÏ. /
textInfo
ÏÏ/ 7
.
ÏÏ7 8
characterCount
ÏÏ8 F
)
ÏÏF G
return
ÌÌ 
m_TextComponent
ÌÌ &
.
ÌÌ& '
textInfo
ÌÌ' /
.
ÌÌ/ 0
characterCount
ÌÌ0 >
-
ÌÌ? @
$num
ÌÌA B
;
ÌÌB C
TMP_CharacterInfo
ÔÔ 

originChar
ÔÔ (
=
ÔÔ) *
m_TextComponent
ÔÔ+ :
.
ÔÔ: ;
textInfo
ÔÔ; C
.
ÔÔC D
characterInfo
ÔÔD Q
[
ÔÔQ R
originalPos
ÔÔR ]
]
ÔÔ] ^
;
ÔÔ^ _
int
 

originLine
 
=
 

originChar
 '
.
' (

lineNumber
( 2
;
2 3
if
ÛÛ 
(
ÛÛ 

originLine
ÛÛ 
+
ÛÛ 
$num
ÛÛ 
>=
ÛÛ !
m_TextComponent
ÛÛ" 1
.
ÛÛ1 2
textInfo
ÛÛ2 :
.
ÛÛ: ;
	lineCount
ÛÛ; D
)
ÛÛD E
return
ÙÙ 
goToLastChar
ÙÙ #
?
ÙÙ$ %
m_TextComponent
ÙÙ& 5
.
ÙÙ5 6
textInfo
ÙÙ6 >
.
ÙÙ> ?
characterCount
ÙÙ? M
-
ÙÙN O
$num
ÙÙP Q
:
ÙÙR S
originalPos
ÙÙT _
;
ÙÙ_ `
float
ˆˆ 
viewportHeight
ˆˆ  
=
ˆˆ! "
m_TextViewport
ˆˆ# 1
.
ˆˆ1 2
rect
ˆˆ2 6
.
ˆˆ6 7
height
ˆˆ7 =
;
ˆˆ= >
int
¯¯ 
newLine
¯¯ 
=
¯¯ 

originLine
¯¯ $
+
¯¯% &
$num
¯¯' (
;
¯¯( )
for
˙˙ 
(
˙˙ 
;
˙˙ 
newLine
˙˙ 
<
˙˙ 
m_TextComponent
˙˙ ,
.
˙˙, -
textInfo
˙˙- 5
.
˙˙5 6
	lineCount
˙˙6 ?
-
˙˙@ A
$num
˙˙B C
;
˙˙C D
newLine
˙˙E L
++
˙˙L N
)
˙˙N O
{
˚˚ 
if
¸¸ 
(
¸¸ 
m_TextComponent
¸¸ #
.
¸¸# $
textInfo
¸¸$ ,
.
¸¸, -
lineInfo
¸¸- 5
[
¸¸5 6
newLine
¸¸6 =
]
¸¸= >
.
¸¸> ?
baseline
¸¸? G
<
¸¸H I
m_TextComponent
¸¸J Y
.
¸¸Y Z
textInfo
¸¸Z b
.
¸¸b c
lineInfo
¸¸c k
[
¸¸k l

originLine
¸¸l v
]
¸¸v w
.
¸¸w x
baseline¸¸x Ä
-¸¸Å Ç
viewportHeight¸¸É ë
)¸¸ë í
break
˝˝ 
;
˝˝ 
}
˛˛ 
int
ÅÅ 

endCharIdx
ÅÅ 
=
ÅÅ 
m_TextComponent
ÅÅ ,
.
ÅÅ, -
textInfo
ÅÅ- 5
.
ÅÅ5 6
lineInfo
ÅÅ6 >
[
ÅÅ> ?
newLine
ÅÅ? F
]
ÅÅF G
.
ÅÅG H 
lastCharacterIndex
ÅÅH Z
;
ÅÅZ [
int
ÉÉ 
closest
ÉÉ 
=
ÉÉ 
-
ÉÉ 
$num
ÉÉ 
;
ÉÉ 
float
ÑÑ 
distance
ÑÑ 
=
ÑÑ 
TMP_Math
ÑÑ %
.
ÑÑ% &
	FLOAT_MAX
ÑÑ& /
;
ÑÑ/ 0
float
ÖÖ 
range
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
for
áá 
(
áá 
int
áá 
i
áá 
=
áá 
m_TextComponent
áá (
.
áá( )
textInfo
áá) 1
.
áá1 2
lineInfo
áá2 :
[
áá: ;
newLine
áá; B
]
ááB C
.
ááC D!
firstCharacterIndex
ááD W
;
ááW X
i
ááY Z
<
áá[ \

endCharIdx
áá] g
;
áág h
++
áái k
i
áák l
)
áál m
{
àà 
TMP_CharacterInfo
ââ !
currentChar
ââ" -
=
ââ. /
m_TextComponent
ââ0 ?
.
ââ? @
textInfo
ââ@ H
.
ââH I
characterInfo
ââI V
[
ââV W
i
ââW X
]
ââX Y
;
ââY Z
float
ãã 
d
ãã 
=
ãã 

originChar
ãã $
.
ãã$ %
origin
ãã% +
-
ãã, -
currentChar
ãã. 9
.
ãã9 :
origin
ãã: @
;
ãã@ A
float
åå 
r
åå 
=
åå 
d
åå 
/
åå 
(
åå 
currentChar
åå *
.
åå* +
xAdvance
åå+ 3
-
åå4 5
currentChar
åå6 A
.
ååA B
origin
ååB H
)
ååH I
;
ååI J
if
éé 
(
éé 
r
éé 
>=
éé 
$num
éé 
&&
éé 
r
éé 
<=
éé  "
$num
éé# $
)
éé$ %
{
èè 
if
êê 
(
êê 
r
êê 
<
êê 
$num
êê  
)
êê  !
return
ëë 
i
ëë  
;
ëë  !
else
íí 
return
ìì 
i
ìì  
+
ìì! "
$num
ìì# $
;
ìì$ %
}
îî 
d
ññ 
=
ññ 
Mathf
ññ 
.
ññ 
Abs
ññ 
(
ññ 
d
ññ 
)
ññ  
;
ññ  !
if
òò 
(
òò 
d
òò 
<
òò 
distance
òò  
)
òò  !
{
ôô 
closest
öö 
=
öö 
i
öö 
;
öö  
distance
õõ 
=
õõ 
d
õõ  
;
õõ  !
range
úú 
=
úú 
r
úú 
;
úú 
}
ùù 
}
ûû 
if
†† 
(
†† 
closest
†† 
==
†† 
-
†† 
$num
†† 
)
†† 
return
†† %

endCharIdx
††& 0
;
††0 1
if
¢¢ 
(
¢¢ 
range
¢¢ 
<
¢¢ 
$num
¢¢ 
)
¢¢ 
return
££ 
closest
££ 
;
££ 
else
§§ 
return
•• 
closest
•• 
+
••  
$num
••! "
;
••" #
}
¶¶ 	
private
©© 
void
©© 
MoveDown
©© 
(
©© 
bool
©© "
shift
©©# (
)
©©( )
{
™™ 	
MoveDown
´´ 
(
´´ 
shift
´´ 
,
´´ 
true
´´  
)
´´  !
;
´´! "
}
¨¨ 	
private
ØØ 
void
ØØ 
MoveDown
ØØ 
(
ØØ 
bool
ØØ "
shift
ØØ# (
,
ØØ( )
bool
ØØ* .
goToLastChar
ØØ/ ;
)
ØØ; <
{
∞∞ 	
if
±± 
(
±± 
hasSelection
±± 
&&
±± 
!
±±  !
shift
±±! &
)
±±& '
{
≤≤ #
caretPositionInternal
µµ %
=
µµ& ')
caretSelectPositionInternal
µµ( C
=
µµD E
Mathf
µµF K
.
µµK L
Max
µµL O
(
µµO P#
caretPositionInternal
µµP e
,
µµe f*
caretSelectPositionInternalµµg Ç
)µµÇ É
;µµÉ Ñ
}
∂∂ 
int
∏∏ 
position
∏∏ 
=
∏∏ 
	multiLine
∏∏ $
?
∏∏% &'
LineDownCharacterPosition
∏∏' @
(
∏∏@ A)
caretSelectPositionInternal
∏∏A \
,
∏∏\ ]
goToLastChar
∏∏^ j
)
∏∏j k
:
∏∏l m
m_TextComponent
∏∏n }
.
∏∏} ~
textInfo∏∏~ Ü
.∏∏Ü á
characterCount∏∏á ï
-∏∏ñ ó
$num∏∏ò ô
;∏∏ô ö
if
∫∫ 
(
∫∫ 
shift
∫∫ 
)
∫∫ 
{
ªª )
caretSelectPositionInternal
ºº +
=
ºº, -
position
ºº. 6
;
ºº6 7*
stringSelectPositionInternal
ΩΩ ,
=
ΩΩ- .-
GetStringIndexFromCaretPosition
ΩΩ/ N
(
ΩΩN O)
caretSelectPositionInternal
ΩΩO j
)
ΩΩj k
;
ΩΩk l
}
ææ 
else
øø 
{
¿¿ )
caretSelectPositionInternal
¡¡ +
=
¡¡, -#
caretPositionInternal
¡¡. C
=
¡¡D E
position
¡¡F N
;
¡¡N O*
stringSelectPositionInternal
¬¬ ,
=
¬¬- .$
stringPositionInternal
¬¬/ E
=
¬¬F G-
GetStringIndexFromCaretPosition
¬¬H g
(
¬¬g h*
caretSelectPositionInternal¬¬h É
)¬¬É Ñ
;¬¬Ñ Ö
}
√√ 
}
»» 	
private
   
void
   
MoveUp
   
(
   
bool
    
shift
  ! &
)
  & '
{
ÀÀ 	
MoveUp
ÃÃ 
(
ÃÃ 
shift
ÃÃ 
,
ÃÃ 
true
ÃÃ 
)
ÃÃ 
;
ÃÃ  
}
ÕÕ 	
private
–– 
void
–– 
MoveUp
–– 
(
–– 
bool
––  
shift
––! &
,
––& '
bool
––( ,
goToFirstChar
––- :
)
––: ;
{
—— 	
if
““ 
(
““ 
hasSelection
““ 
&&
““ 
!
““  !
shift
““! &
)
““& '
{
”” #
caretPositionInternal
÷÷ %
=
÷÷& ')
caretSelectPositionInternal
÷÷( C
=
÷÷D E
Mathf
÷÷F K
.
÷÷K L
Min
÷÷L O
(
÷÷O P#
caretPositionInternal
÷÷P e
,
÷÷e f*
caretSelectPositionInternal÷÷g Ç
)÷÷Ç É
;÷÷É Ñ
}
◊◊ 
int
ŸŸ 
position
ŸŸ 
=
ŸŸ 
	multiLine
ŸŸ $
?
ŸŸ% &%
LineUpCharacterPosition
ŸŸ' >
(
ŸŸ> ?)
caretSelectPositionInternal
ŸŸ? Z
,
ŸŸZ [
goToFirstChar
ŸŸ\ i
)
ŸŸi j
:
ŸŸk l
$num
ŸŸm n
;
ŸŸn o
if
€€ 
(
€€ 
shift
€€ 
)
€€ 
{
‹‹ )
caretSelectPositionInternal
›› +
=
››, -
position
››. 6
;
››6 7*
stringSelectPositionInternal
ﬁﬁ ,
=
ﬁﬁ- .-
GetStringIndexFromCaretPosition
ﬁﬁ/ N
(
ﬁﬁN O)
caretSelectPositionInternal
ﬁﬁO j
)
ﬁﬁj k
;
ﬁﬁk l
}
ﬂﬂ 
else
‡‡ 
{
·· )
caretSelectPositionInternal
‚‚ +
=
‚‚, -#
caretPositionInternal
‚‚. C
=
‚‚D E
position
‚‚F N
;
‚‚N O*
stringSelectPositionInternal
„„ ,
=
„„- .$
stringPositionInternal
„„/ E
=
„„F G-
GetStringIndexFromCaretPosition
„„H g
(
„„g h*
caretSelectPositionInternal„„h É
)„„É Ñ
;„„Ñ Ö
}
‰‰ 
}
ÈÈ 	
private
ÏÏ 
void
ÏÏ 

MovePageUp
ÏÏ 
(
ÏÏ  
bool
ÏÏ  $
shift
ÏÏ% *
)
ÏÏ* +
{
ÌÌ 	

MovePageUp
ÓÓ 
(
ÓÓ 
shift
ÓÓ 
,
ÓÓ 
true
ÓÓ "
)
ÓÓ" #
;
ÓÓ# $
}
ÔÔ 	
private
ÒÒ 
void
ÒÒ 

MovePageUp
ÒÒ 
(
ÒÒ  
bool
ÒÒ  $
shift
ÒÒ% *
,
ÒÒ* +
bool
ÒÒ, 0
goToFirstChar
ÒÒ1 >
)
ÒÒ> ?
{
ÚÚ 	
if
ÛÛ 
(
ÛÛ 
hasSelection
ÛÛ 
&&
ÛÛ 
!
ÛÛ  !
shift
ÛÛ! &
)
ÛÛ& '
{
ÙÙ #
caretPositionInternal
˜˜ %
=
˜˜& ')
caretSelectPositionInternal
˜˜( C
=
˜˜D E
Mathf
˜˜F K
.
˜˜K L
Min
˜˜L O
(
˜˜O P#
caretPositionInternal
˜˜P e
,
˜˜e f*
caretSelectPositionInternal˜˜g Ç
)˜˜Ç É
;˜˜É Ñ
}
¯¯ 
int
˙˙ 
position
˙˙ 
=
˙˙ 
	multiLine
˙˙ $
?
˙˙% &%
PageUpCharacterPosition
˙˙' >
(
˙˙> ?)
caretSelectPositionInternal
˙˙? Z
,
˙˙Z [
goToFirstChar
˙˙\ i
)
˙˙i j
:
˙˙k l
$num
˙˙m n
;
˙˙n o
if
¸¸ 
(
¸¸ 
shift
¸¸ 
)
¸¸ 
{
˝˝ )
caretSelectPositionInternal
˛˛ +
=
˛˛, -
position
˛˛. 6
;
˛˛6 7*
stringSelectPositionInternal
ˇˇ ,
=
ˇˇ- .-
GetStringIndexFromCaretPosition
ˇˇ/ N
(
ˇˇN O)
caretSelectPositionInternal
ˇˇO j
)
ˇˇj k
;
ˇˇk l
}
ÄÄ 
else
ÅÅ 
{
ÇÇ )
caretSelectPositionInternal
ÉÉ +
=
ÉÉ, -#
caretPositionInternal
ÉÉ. C
=
ÉÉD E
position
ÉÉF N
;
ÉÉN O*
stringSelectPositionInternal
ÑÑ ,
=
ÑÑ- .$
stringPositionInternal
ÑÑ/ E
=
ÑÑF G-
GetStringIndexFromCaretPosition
ÑÑH g
(
ÑÑg h*
caretSelectPositionInternalÑÑh É
)ÑÑÉ Ñ
;ÑÑÑ Ö
}
ÖÖ 
if
çç 
(
çç 

m_LineType
çç 
!=
çç 
LineType
çç &
.
çç& '

SingleLine
çç' 1
)
çç1 2
{
éé 
float
èè 
offset
èè 
=
èè 
m_TextViewport
èè -
.
èè- .
rect
èè. 2
.
èè2 3
height
èè3 9
;
èè9 :
float
ëë 
topTextBounds
ëë #
=
ëë$ %
m_TextComponent
ëë& 5
.
ëë5 6
rectTransform
ëë6 C
.
ëëC D
position
ëëD L
.
ëëL M
y
ëëM N
+
ëëO P
m_TextComponent
ëëQ `
.
ëë` a

textBounds
ëëa k
.
ëëk l
max
ëël o
.
ëëo p
y
ëëp q
;
ëëq r
float
íí 
topViewportBounds
íí '
=
íí( )
m_TextViewport
íí* 8
.
íí8 9
position
íí9 A
.
ííA B
y
ííB C
+
ííD E
m_TextViewport
ííF T
.
ííT U
rect
ííU Y
.
ííY Z
yMax
ííZ ^
;
íí^ _
offset
îî 
=
îî 
topViewportBounds
îî *
>
îî+ ,
topTextBounds
îî- :
+
îî; <
offset
îî= C
?
îîD E
offset
îîF L
:
îîM N
topViewportBounds
îîO `
-
îîa b
topTextBounds
îîc p
;
îîp q
m_TextComponent
ññ 
.
ññ  
rectTransform
ññ  -
.
ññ- .
anchoredPosition
ññ. >
+=
ññ? A
new
ññB E
Vector2
ññF M
(
ññM N
$num
ññN O
,
ññO P
offset
ññQ W
)
ññW X
;
ññX Y'
AssignPositioningIfNeeded
óó )
(
óó) *
)
óó* +
;
óó+ ,)
m_IsScrollbarUpdateRequired
òò +
=
òò, -
true
òò. 2
;
òò2 3
}
ôô 
}
üü 	
private
¢¢ 
void
¢¢ 
MovePageDown
¢¢ !
(
¢¢! "
bool
¢¢" &
shift
¢¢' ,
)
¢¢, -
{
££ 	
MovePageDown
§§ 
(
§§ 
shift
§§ 
,
§§ 
true
§§  $
)
§§$ %
;
§§% &
}
•• 	
private
ßß 
void
ßß 
MovePageDown
ßß !
(
ßß! "
bool
ßß" &
shift
ßß' ,
,
ßß, -
bool
ßß. 2
goToLastChar
ßß3 ?
)
ßß? @
{
®® 	
if
©© 
(
©© 
hasSelection
©© 
&&
©©  
!
©©! "
shift
©©" '
)
©©' (
{
™™ #
caretPositionInternal
≠≠ %
=
≠≠& ')
caretSelectPositionInternal
≠≠( C
=
≠≠D E
Mathf
≠≠F K
.
≠≠K L
Max
≠≠L O
(
≠≠O P#
caretPositionInternal
≠≠P e
,
≠≠e f*
caretSelectPositionInternal≠≠g Ç
)≠≠Ç É
;≠≠É Ñ
}
ÆÆ 
int
∞∞ 
position
∞∞ 
=
∞∞ 
	multiLine
∞∞ $
?
∞∞% &'
PageDownCharacterPosition
∞∞' @
(
∞∞@ A)
caretSelectPositionInternal
∞∞A \
,
∞∞\ ]
goToLastChar
∞∞^ j
)
∞∞j k
:
∞∞l m
m_TextComponent
∞∞n }
.
∞∞} ~
textInfo∞∞~ Ü
.∞∞Ü á
characterCount∞∞á ï
-∞∞ñ ó
$num∞∞ò ô
;∞∞ô ö
if
≤≤ 
(
≤≤ 
shift
≤≤ 
)
≤≤ 
{
≥≥ )
caretSelectPositionInternal
¥¥ +
=
¥¥, -
position
¥¥. 6
;
¥¥6 7*
stringSelectPositionInternal
µµ ,
=
µµ- .-
GetStringIndexFromCaretPosition
µµ/ N
(
µµN O)
caretSelectPositionInternal
µµO j
)
µµj k
;
µµk l
}
∂∂ 
else
∑∑ 
{
∏∏ )
caretSelectPositionInternal
ππ +
=
ππ, -#
caretPositionInternal
ππ. C
=
ππD E
position
ππF N
;
ππN O*
stringSelectPositionInternal
∫∫ ,
=
∫∫- .$
stringPositionInternal
∫∫/ E
=
∫∫F G-
GetStringIndexFromCaretPosition
∫∫H g
(
∫∫g h*
caretSelectPositionInternal∫∫h É
)∫∫É Ñ
;∫∫Ñ Ö
}
ªª 
if
¬¬ 
(
¬¬ 

m_LineType
¬¬ 
!=
¬¬ 
LineType
¬¬ &
.
¬¬& '

SingleLine
¬¬' 1
)
¬¬1 2
{
√√ 
float
ƒƒ 
offset
ƒƒ 
=
ƒƒ 
m_TextViewport
ƒƒ -
.
ƒƒ- .
rect
ƒƒ. 2
.
ƒƒ2 3
height
ƒƒ3 9
;
ƒƒ9 :
float
∆∆ 
bottomTextBounds
∆∆ &
=
∆∆' (
m_TextComponent
∆∆) 8
.
∆∆8 9
rectTransform
∆∆9 F
.
∆∆F G
position
∆∆G O
.
∆∆O P
y
∆∆P Q
+
∆∆R S
m_TextComponent
∆∆T c
.
∆∆c d

textBounds
∆∆d n
.
∆∆n o
min
∆∆o r
.
∆∆r s
y
∆∆s t
;
∆∆t u
float
«« "
bottomViewportBounds
«« *
=
««+ ,
m_TextViewport
««- ;
.
««; <
position
««< D
.
««D E
y
««E F
+
««G H
m_TextViewport
««I W
.
««W X
rect
««X \
.
««\ ]
yMin
««] a
;
««a b
offset
…… 
=
…… "
bottomViewportBounds
…… -
>
……. /
bottomTextBounds
……0 @
+
……A B
offset
……C I
?
……J K
offset
……L R
:
……S T"
bottomViewportBounds
……U i
-
……j k
bottomTextBounds
……l |
;
……| }
m_TextComponent
ÀÀ 
.
ÀÀ  
rectTransform
ÀÀ  -
.
ÀÀ- .
anchoredPosition
ÀÀ. >
+=
ÀÀ? A
new
ÀÀB E
Vector2
ÀÀF M
(
ÀÀM N
$num
ÀÀN O
,
ÀÀO P
offset
ÀÀQ W
)
ÀÀW X
;
ÀÀX Y'
AssignPositioningIfNeeded
ÃÃ )
(
ÃÃ) *
)
ÃÃ* +
;
ÃÃ+ ,)
m_IsScrollbarUpdateRequired
ÕÕ +
=
ÕÕ, -
true
ÕÕ. 2
;
ÕÕ2 3
}
ŒŒ 
}
‘‘ 	
private
÷÷ 
void
÷÷ 
Delete
÷÷ 
(
÷÷ 
)
÷÷ 
{
◊◊ 	
if
ÿÿ 
(
ÿÿ 

m_ReadOnly
ÿÿ 
)
ÿÿ 
return
ŸŸ 
;
ŸŸ 
if
€€ 
(
€€ 
m_StringPosition
€€  
==
€€! #$
m_StringSelectPosition
€€$ :
)
€€: ;
return
‹‹ 
;
‹‹ 
if
ﬁﬁ 
(
ﬁﬁ (
m_isRichTextEditingAllowed
ﬁﬁ *
||
ﬁﬁ+ -
m_isSelectAll
ﬁﬁ. ;
)
ﬁﬁ; <
{
ﬂﬂ 
if
·· 
(
·· 
m_StringPosition
·· $
<
··% &$
m_StringSelectPosition
··' =
)
··= >
{
‚‚ 
m_Text
„„ 
=
„„ 
text
„„ !
.
„„! "
Remove
„„" (
(
„„( )
m_StringPosition
„„) 9
,
„„9 :$
m_StringSelectPosition
„„; Q
-
„„R S
m_StringPosition
„„T d
)
„„d e
;
„„e f$
m_StringSelectPosition
‰‰ *
=
‰‰+ ,
m_StringPosition
‰‰- =
;
‰‰= >
}
ÂÂ 
else
ÊÊ 
{
ÁÁ 
m_Text
ËË 
=
ËË 
text
ËË !
.
ËË! "
Remove
ËË" (
(
ËË( )$
m_StringSelectPosition
ËË) ?
,
ËË? @
m_StringPosition
ËËA Q
-
ËËR S$
m_StringSelectPosition
ËËT j
)
ËËj k
;
ËËk l
m_StringPosition
ÈÈ $
=
ÈÈ% &$
m_StringSelectPosition
ÈÈ' =
;
ÈÈ= >
}
ÍÍ 
m_isSelectAll
ÏÏ 
=
ÏÏ 
false
ÏÏ  %
;
ÏÏ% &
}
ÌÌ 
else
ÓÓ 
{
ÔÔ 
if
 
(
 
m_CaretPosition
 #
<
$ %#
m_CaretSelectPosition
& ;
)
; <
{
ÒÒ 
m_StringPosition
ÚÚ $
=
ÚÚ% &
m_TextComponent
ÚÚ' 6
.
ÚÚ6 7
textInfo
ÚÚ7 ?
.
ÚÚ? @
characterInfo
ÚÚ@ M
[
ÚÚM N
m_CaretPosition
ÚÚN ]
]
ÚÚ] ^
.
ÚÚ^ _
index
ÚÚ_ d
;
ÚÚd e$
m_StringSelectPosition
ÛÛ *
=
ÛÛ+ ,
m_TextComponent
ÛÛ- <
.
ÛÛ< =
textInfo
ÛÛ= E
.
ÛÛE F
characterInfo
ÛÛF S
[
ÛÛS T#
m_CaretSelectPosition
ÛÛT i
-
ÛÛj k
$num
ÛÛl m
]
ÛÛm n
.
ÛÛn o
index
ÛÛo t
+
ÛÛu v
m_TextComponentÛÛw Ü
.ÛÛÜ á
textInfoÛÛá è
.ÛÛè ê
characterInfoÛÛê ù
[ÛÛù û%
m_CaretSelectPositionÛÛû ≥
-ÛÛ¥ µ
$numÛÛ∂ ∑
]ÛÛ∑ ∏
.ÛÛ∏ π
stringLengthÛÛπ ≈
;ÛÛ≈ ∆
m_Text
ıı 
=
ıı 
text
ıı !
.
ıı! "
Remove
ıı" (
(
ıı( )
m_StringPosition
ıı) 9
,
ıı9 :$
m_StringSelectPosition
ıı; Q
-
ııR S
m_StringPosition
ııT d
)
ııd e
;
ııe f$
m_StringSelectPosition
˜˜ *
=
˜˜+ ,
m_StringPosition
˜˜- =
;
˜˜= >#
m_CaretSelectPosition
¯¯ )
=
¯¯* +
m_CaretPosition
¯¯, ;
;
¯¯; <
}
˘˘ 
else
˙˙ 
{
˚˚ 
m_StringPosition
¸¸ $
=
¸¸% &
m_TextComponent
¸¸' 6
.
¸¸6 7
textInfo
¸¸7 ?
.
¸¸? @
characterInfo
¸¸@ M
[
¸¸M N
m_CaretPosition
¸¸N ]
-
¸¸^ _
$num
¸¸` a
]
¸¸a b
.
¸¸b c
index
¸¸c h
+
¸¸i j
m_TextComponent
¸¸k z
.
¸¸z {
textInfo¸¸{ É
.¸¸É Ñ
characterInfo¸¸Ñ ë
[¸¸ë í
m_CaretPosition¸¸í °
-¸¸¢ £
$num¸¸§ •
]¸¸• ¶
.¸¸¶ ß
stringLength¸¸ß ≥
;¸¸≥ ¥$
m_StringSelectPosition
˝˝ *
=
˝˝+ ,
m_TextComponent
˝˝- <
.
˝˝< =
textInfo
˝˝= E
.
˝˝E F
characterInfo
˝˝F S
[
˝˝S T#
m_CaretSelectPosition
˝˝T i
]
˝˝i j
.
˝˝j k
index
˝˝k p
;
˝˝p q
m_Text
ˇˇ 
=
ˇˇ 
text
ˇˇ !
.
ˇˇ! "
Remove
ˇˇ" (
(
ˇˇ( )$
m_StringSelectPosition
ˇˇ) ?
,
ˇˇ? @
m_StringPosition
ˇˇA Q
-
ˇˇR S$
m_StringSelectPosition
ˇˇT j
)
ˇˇj k
;
ˇˇk l
m_StringPosition
ÅÅ $
=
ÅÅ% &$
m_StringSelectPosition
ÅÅ' =
;
ÅÅ= >
m_CaretPosition
ÇÇ #
=
ÇÇ$ %#
m_CaretSelectPosition
ÇÇ& ;
;
ÇÇ; <
}
ÉÉ 
}
ÑÑ 
}
ââ 	
private
éé 
void
éé 
	DeleteKey
éé 
(
éé 
)
éé  
{
èè 	
if
êê 
(
êê 

m_ReadOnly
êê 
)
êê 
return
ëë 
;
ëë 
if
ìì 
(
ìì 
hasSelection
ìì 
)
ìì 
{
îî "
m_isLastKeyBackspace
ïï $
=
ïï% &
true
ïï' +
;
ïï+ ,
Delete
óó 
(
óó 
)
óó 
;
óó 0
"UpdateTouchKeyboardFromEditChanges
òò 2
(
òò2 3
)
òò3 4
;
òò4 5.
 SendOnValueChangedAndUpdateLabel
ôô 0
(
ôô0 1
)
ôô1 2
;
ôô2 3
}
öö 
else
õõ 
{
úú 
if
ùù 
(
ùù (
m_isRichTextEditingAllowed
ùù .
)
ùù. /
{
ûû 
if
üü 
(
üü $
stringPositionInternal
üü .
<
üü/ 0
text
üü1 5
.
üü5 6
Length
üü6 <
)
üü< =
{
†† 
if
¢¢ 
(
¢¢ 
char
¢¢  
.
¢¢  !
IsHighSurrogate
¢¢! 0
(
¢¢0 1
text
¢¢1 5
[
¢¢5 6$
stringPositionInternal
¢¢6 L
]
¢¢L M
)
¢¢M N
)
¢¢N O
m_Text
££ "
=
££# $
text
££% )
.
££) *
Remove
££* 0
(
££0 1$
stringPositionInternal
££1 G
,
££G H
$num
££I J
)
££J K
;
££K L
else
§§ 
m_Text
•• "
=
••# $
text
••% )
.
••) *
Remove
••* 0
(
••0 1$
stringPositionInternal
••1 G
,
••G H
$num
••I J
)
••J K
;
••K L"
m_isLastKeyBackspace
ßß ,
=
ßß- .
true
ßß/ 3
;
ßß3 40
"UpdateTouchKeyboardFromEditChanges
©© :
(
©©: ;
)
©©; <
;
©©< =.
 SendOnValueChangedAndUpdateLabel
™™ 8
(
™™8 9
)
™™9 :
;
™™: ;
}
´´ 
}
¨¨ 
else
≠≠ 
{
ÆÆ 
if
ØØ 
(
ØØ #
caretPositionInternal
ØØ -
<
ØØ. /
m_TextComponent
ØØ0 ?
.
ØØ? @
textInfo
ØØ@ H
.
ØØH I
characterCount
ØØI W
-
ØØX Y
$num
ØØZ [
)
ØØ[ \
{
∞∞ 
int
±± (
numberOfCharactersToRemove
±± 6
=
±±7 8
m_TextComponent
±±9 H
.
±±H I
textInfo
±±I Q
.
±±Q R
characterInfo
±±R _
[
±±_ `#
caretPositionInternal
±±` u
]
±±u v
.
±±v w
stringLength±±w É
;±±É Ñ
int
¥¥ )
nextCharacterStringPosition
¥¥ 7
=
¥¥8 9
m_TextComponent
¥¥: I
.
¥¥I J
textInfo
¥¥J R
.
¥¥R S
characterInfo
¥¥S `
[
¥¥` a#
caretPositionInternal
¥¥a v
]
¥¥v w
.
¥¥w x
index
¥¥x }
;
¥¥} ~
m_Text
∂∂ 
=
∂∂  
text
∂∂! %
.
∂∂% &
Remove
∂∂& ,
(
∂∂, -)
nextCharacterStringPosition
∂∂- H
,
∂∂H I(
numberOfCharactersToRemove
∂∂J d
)
∂∂d e
;
∂∂e f"
m_isLastKeyBackspace
∏∏ ,
=
∏∏- .
true
∏∏/ 3
;
∏∏3 4.
 SendOnValueChangedAndUpdateLabel
∫∫ 8
(
∫∫8 9
)
∫∫9 :
;
∫∫: ;
}
ªª 
}
ºº 
}
ΩΩ 
}
¬¬ 	
private
«« 
void
«« 
	Backspace
«« 
(
«« 
)
««  
{
»» 	
if
…… 
(
…… 

m_ReadOnly
…… 
)
…… 
return
   
;
   
if
ÃÃ 
(
ÃÃ 
hasSelection
ÃÃ 
)
ÃÃ 
{
ÕÕ "
m_isLastKeyBackspace
ŒŒ $
=
ŒŒ% &
true
ŒŒ' +
;
ŒŒ+ ,
Delete
–– 
(
–– 
)
–– 
;
–– 0
"UpdateTouchKeyboardFromEditChanges
—— 2
(
——2 3
)
——3 4
;
——4 5.
 SendOnValueChangedAndUpdateLabel
““ 0
(
““0 1
)
““1 2
;
““2 3
}
”” 
else
‘‘ 
{
’’ 
if
÷÷ 
(
÷÷ (
m_isRichTextEditingAllowed
÷÷ .
)
÷÷. /
{
◊◊ 
if
ÿÿ 
(
ÿÿ $
stringPositionInternal
ÿÿ .
>
ÿÿ/ 0
$num
ÿÿ1 2
)
ÿÿ2 3
{
ŸŸ 
int
⁄⁄ (
numberOfCharactersToRemove
⁄⁄ 6
=
⁄⁄7 8
$num
⁄⁄9 :
;
⁄⁄: ;
if
›› 
(
›› 
char
››  
.
››  !
IsLowSurrogate
››! /
(
››/ 0
text
››0 4
[
››4 5$
stringPositionInternal
››5 K
-
››L M
$num
››N O
]
››O P
)
››P Q
)
››Q R(
numberOfCharactersToRemove
ﬁﬁ 6
=
ﬁﬁ7 8
$num
ﬁﬁ9 :
;
ﬁﬁ: ;*
stringSelectPositionInternal
‡‡ 4
=
‡‡5 6$
stringPositionInternal
‡‡7 M
=
‡‡N O$
stringPositionInternal
‡‡P f
-
‡‡g h)
numberOfCharactersToRemove‡‡i É
;‡‡É Ñ
m_Text
‚‚ 
=
‚‚  
text
‚‚! %
.
‚‚% &
Remove
‚‚& ,
(
‚‚, -$
stringPositionInternal
‚‚- C
,
‚‚C D(
numberOfCharactersToRemove
‚‚E _
)
‚‚_ `
;
‚‚` a)
caretSelectPositionInternal
‰‰ 3
=
‰‰4 5#
caretPositionInternal
‰‰6 K
=
‰‰L M#
caretPositionInternal
‰‰N c
-
‰‰d e
$num
‰‰f g
;
‰‰g h"
m_isLastKeyBackspace
ÊÊ ,
=
ÊÊ- .
true
ÊÊ/ 3
;
ÊÊ3 40
"UpdateTouchKeyboardFromEditChanges
ËË :
(
ËË: ;
)
ËË; <
;
ËË< =.
 SendOnValueChangedAndUpdateLabel
ÈÈ 8
(
ÈÈ8 9
)
ÈÈ9 :
;
ÈÈ: ;
}
ÍÍ 
}
ÎÎ 
else
ÏÏ 
{
ÌÌ 
if
ÓÓ 
(
ÓÓ #
caretPositionInternal
ÓÓ -
>
ÓÓ. /
$num
ÓÓ0 1
)
ÓÓ1 2
{
ÔÔ 
int
 (
numberOfCharactersToRemove
 6
=
7 8
m_TextComponent
9 H
.
H I
textInfo
I Q
.
Q R
characterInfo
R _
[
_ `#
caretPositionInternal
` u
-
v w
$num
x y
]
y z
.
z {
stringLength{ á
;á à
m_Text
ÛÛ 
=
ÛÛ  
text
ÛÛ! %
.
ÛÛ% &
Remove
ÛÛ& ,
(
ÛÛ, -
m_TextComponent
ÛÛ- <
.
ÛÛ< =
textInfo
ÛÛ= E
.
ÛÛE F
characterInfo
ÛÛF S
[
ÛÛS T#
caretPositionInternal
ÛÛT i
-
ÛÛj k
$num
ÛÛl m
]
ÛÛm n
.
ÛÛn o
index
ÛÛo t
,
ÛÛt u)
numberOfCharactersToRemoveÛÛv ê
)ÛÛê ë
;ÛÛë í*
stringSelectPositionInternal
ˆˆ 4
=
ˆˆ5 6$
stringPositionInternal
ˆˆ7 M
=
ˆˆN O#
caretPositionInternal
ˆˆP e
<
ˆˆf g
$num
ˆˆh i
?
˜˜ 
m_TextComponent
˜˜ -
.
˜˜- .
textInfo
˜˜. 6
.
˜˜6 7
characterInfo
˜˜7 D
[
˜˜D E
$num
˜˜E F
]
˜˜F G
.
˜˜G H
index
˜˜H M
:
¯¯ 
m_TextComponent
¯¯ -
.
¯¯- .
textInfo
¯¯. 6
.
¯¯6 7
characterInfo
¯¯7 D
[
¯¯D E#
caretPositionInternal
¯¯E Z
-
¯¯[ \
$num
¯¯] ^
]
¯¯^ _
.
¯¯_ `
index
¯¯` e
+
¯¯f g
m_TextComponent
¯¯h w
.
¯¯w x
textInfo¯¯x Ä
.¯¯Ä Å
characterInfo¯¯Å é
[¯¯é è%
caretPositionInternal¯¯è §
-¯¯• ¶
$num¯¯ß ®
]¯¯® ©
.¯¯© ™
stringLength¯¯™ ∂
;¯¯∂ ∑)
caretSelectPositionInternal
˙˙ 3
=
˙˙4 5#
caretPositionInternal
˙˙6 K
=
˙˙L M#
caretPositionInternal
˙˙N c
-
˙˙d e
$num
˙˙f g
;
˙˙g h
}
˚˚ "
m_isLastKeyBackspace
˝˝ (
=
˝˝) *
true
˝˝+ /
;
˝˝/ 00
"UpdateTouchKeyboardFromEditChanges
ˇˇ 6
(
ˇˇ6 7
)
ˇˇ7 8
;
ˇˇ8 9.
 SendOnValueChangedAndUpdateLabel
ÄÄ 4
(
ÄÄ4 5
)
ÄÄ5 6
;
ÄÄ6 7
}
ÅÅ 
}
ÉÉ 
}
àà 	
	protected
éé 
virtual
éé 
void
éé 
Append
éé %
(
éé% &
string
éé& ,
input
éé- 2
)
éé2 3
{
èè 	
if
êê 
(
êê 

m_ReadOnly
êê 
)
êê 
return
ëë 
;
ëë 
if
ìì 
(
ìì 
InPlaceEditing
ìì 
(
ìì 
)
ìì  
==
ìì! #
false
ìì$ )
)
ìì) *
return
îî 
;
îî 
for
ññ 
(
ññ 
int
ññ 
i
ññ 
=
ññ 
$num
ññ 
,
ññ 
imax
ññ  
=
ññ! "
input
ññ# (
.
ññ( )
Length
ññ) /
;
ññ/ 0
i
ññ1 2
<
ññ3 4
imax
ññ5 9
;
ññ9 :
++
ññ; =
i
ññ= >
)
ññ> ?
{
óó 
char
òò 
c
òò 
=
òò 
input
òò 
[
òò 
i
òò  
]
òò  !
;
òò! "
if
öö 
(
öö 
c
öö 
>=
öö 
$char
öö 
||
öö 
c
öö  !
==
öö" $
$char
öö% )
||
öö* ,
c
öö- .
==
öö/ 1
$char
öö2 6
||
öö7 9
c
öö: ;
==
öö< >
$num
öö? A
||
ööB D
c
ööE F
==
ööG I
$char
ööJ N
)
ööN O
{
õõ 
Append
úú 
(
úú 
c
úú 
)
úú 
;
úú 
}
ùù 
}
ûû 
}
üü 	
	protected
°° 
virtual
°° 
void
°° 
Append
°° %
(
°°% &
char
°°& *
input
°°+ 0
)
°°0 1
{
¢¢ 	
if
££ 
(
££ 

m_ReadOnly
££ 
)
££ 
return
§§ 
;
§§ 
if
¶¶ 
(
¶¶ 
InPlaceEditing
¶¶ 
(
¶¶ 
)
¶¶  
==
¶¶! #
false
¶¶$ )
)
¶¶) *
return
ßß 
;
ßß 
if
™™ 
(
™™ 
onValidateInput
™™ 
!=
™™  "
null
™™# '
)
™™' (
input
´´ 
=
´´ 
onValidateInput
´´ '
(
´´' (
text
´´( ,
,
´´, -$
stringPositionInternal
´´. D
,
´´D E
input
´´F K
)
´´K L
;
´´L M
else
¨¨ 
if
¨¨ 
(
¨¨ !
characterValidation
¨¨ (
==
¨¨) +!
CharacterValidation
¨¨, ?
.
¨¨? @
CustomValidator
¨¨@ O
)
¨¨O P
{
≠≠ 
input
ÆÆ 
=
ÆÆ 
Validate
ÆÆ  
(
ÆÆ  !
text
ÆÆ! %
,
ÆÆ% &$
stringPositionInternal
ÆÆ' =
,
ÆÆ= >
input
ÆÆ? D
)
ÆÆD E
;
ÆÆE F
if
∞∞ 
(
∞∞ 
input
∞∞ 
==
∞∞ 
$num
∞∞ 
)
∞∞ 
return
∞∞  &
;
∞∞& ' 
SendOnValueChanged
≤≤ "
(
≤≤" #
)
≤≤# $
;
≤≤$ %
UpdateLabel
≥≥ 
(
≥≥ 
)
≥≥ 
;
≥≥ 
return
µµ 
;
µµ 
}
∂∂ 
else
∑∑ 
if
∑∑ 
(
∑∑ !
characterValidation
∑∑ (
!=
∑∑) +!
CharacterValidation
∑∑, ?
.
∑∑? @
None
∑∑@ D
)
∑∑D E
input
∏∏ 
=
∏∏ 
Validate
∏∏  
(
∏∏  !
text
∏∏! %
,
∏∏% &$
stringPositionInternal
∏∏' =
,
∏∏= >
input
∏∏? D
)
∏∏D E
;
∏∏E F
if
ªª 
(
ªª 
input
ªª 
==
ªª 
$num
ªª 
)
ªª 
return
ºº 
;
ºº 
Insert
øø 
(
øø 
input
øø 
)
øø 
;
øø 
}
¿¿ 	
private
ƒƒ 
void
ƒƒ 
Insert
ƒƒ 
(
ƒƒ 
char
ƒƒ  
c
ƒƒ! "
)
ƒƒ" #
{
≈≈ 	
if
∆∆ 
(
∆∆ 

m_ReadOnly
∆∆ 
)
∆∆ 
return
«« 
;
«« 
string
ÀÀ 
replaceString
ÀÀ  
=
ÀÀ! "
c
ÀÀ# $
.
ÀÀ$ %
ToString
ÀÀ% -
(
ÀÀ- .
)
ÀÀ. /
;
ÀÀ/ 0
Delete
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
if
œœ 
(
œœ 
characterLimit
œœ 
>
œœ  
$num
œœ! "
&&
œœ# %
text
œœ& *
.
œœ* +
Length
œœ+ 1
>=
œœ2 4
characterLimit
œœ5 C
)
œœC D
return
–– 
;
–– 
m_Text
““ 
=
““ 
text
““ 
.
““ 
Insert
““  
(
““  !
m_StringPosition
““! 1
,
““1 2
replaceString
““3 @
)
““@ A
;
““A B
if
‘‘ 
(
‘‘ 
!
‘‘ 
char
‘‘ 
.
‘‘ 
IsHighSurrogate
‘‘ %
(
‘‘% &
c
‘‘& '
)
‘‘' (
)
‘‘( )#
m_CaretSelectPosition
’’ %
=
’’& '
m_CaretPosition
’’( 7
+=
’’8 :
$num
’’; <
;
’’< =$
m_StringSelectPosition
◊◊ "
=
◊◊# $
m_StringPosition
◊◊% 5
+=
◊◊6 8
$num
◊◊9 :
;
◊◊: ;0
"UpdateTouchKeyboardFromEditChanges
ŸŸ .
(
ŸŸ. /
)
ŸŸ/ 0
;
ŸŸ0 1 
SendOnValueChanged
⁄⁄ 
(
⁄⁄ 
)
⁄⁄  
;
⁄⁄  !
}
ﬂﬂ 	
private
·· 
void
·· 0
"UpdateTouchKeyboardFromEditChanges
·· 7
(
··7 8
)
··8 9
{
‚‚ 	
if
ÂÂ 
(
ÂÂ 
m_SoftKeyboard
ÂÂ 
!=
ÂÂ !
null
ÂÂ" &
&&
ÂÂ' )
InPlaceEditing
ÂÂ* 8
(
ÂÂ8 9
)
ÂÂ9 :
)
ÂÂ: ;
{
ÊÊ 
m_SoftKeyboard
ÁÁ 
.
ÁÁ 
text
ÁÁ #
=
ÁÁ$ %
m_Text
ÁÁ& ,
;
ÁÁ, -
}
ËË 
}
ÈÈ 	
private
ÎÎ 
void
ÎÎ .
 SendOnValueChangedAndUpdateLabel
ÎÎ 5
(
ÎÎ5 6
)
ÎÎ6 7
{
ÏÏ 	
UpdateLabel
ÌÌ 
(
ÌÌ 
)
ÌÌ 
;
ÌÌ  
SendOnValueChanged
ÓÓ 
(
ÓÓ 
)
ÓÓ  
;
ÓÓ  !
}
ÔÔ 	
private
ÒÒ 
void
ÒÒ  
SendOnValueChanged
ÒÒ '
(
ÒÒ' (
)
ÒÒ( )
{
ÚÚ 	
if
ÛÛ 
(
ÛÛ 
onValueChanged
ÛÛ 
!=
ÛÛ !
null
ÛÛ" &
)
ÛÛ& '
onValueChanged
ÙÙ 
.
ÙÙ 
Invoke
ÙÙ %
(
ÙÙ% &
text
ÙÙ& *
)
ÙÙ* +
;
ÙÙ+ ,
}
ıı 	
	protected
˚˚ 
void
˚˚ 
SendOnEndEdit
˚˚ $
(
˚˚$ %
)
˚˚% &
{
¸¸ 	
if
˝˝ 
(
˝˝ 
	onEndEdit
˝˝ 
!=
˝˝ 
null
˝˝ !
)
˝˝! "
	onEndEdit
˛˛ 
.
˛˛ 
Invoke
˛˛  
(
˛˛  !
m_Text
˛˛! '
)
˛˛' (
;
˛˛( )
}
ˇˇ 	
	protected
ÅÅ 
void
ÅÅ 
SendOnSubmit
ÅÅ #
(
ÅÅ# $
)
ÅÅ$ %
{
ÇÇ 	
if
ÉÉ 
(
ÉÉ 
onSubmit
ÉÉ 
!=
ÉÉ 
null
ÉÉ  
)
ÉÉ  !
onSubmit
ÑÑ 
.
ÑÑ 
Invoke
ÑÑ 
(
ÑÑ  
m_Text
ÑÑ  &
)
ÑÑ& '
;
ÑÑ' (
}
ÖÖ 	
	protected
áá 
void
áá 
SendOnFocus
áá "
(
áá" #
)
áá# $
{
àà 	
if
ââ 
(
ââ 
onSelect
ââ 
!=
ââ 
null
ââ  
)
ââ  !
onSelect
ää 
.
ää 
Invoke
ää 
(
ää  
m_Text
ää  &
)
ää& '
;
ää' (
}
ãã 	
	protected
çç 
void
çç 
SendOnFocusLost
çç &
(
çç& '
)
çç' (
{
éé 	
if
èè 
(
èè 

onDeselect
èè 
!=
èè 
null
èè "
)
èè" #

onDeselect
êê 
.
êê 
Invoke
êê !
(
êê! "
m_Text
êê" (
)
êê( )
;
êê) *
}
ëë 	
	protected
ìì 
void
ìì !
SendOnTextSelection
ìì *
(
ìì* +
)
ìì+ ,
{
îî 	
m_isSelected
ïï 
=
ïï 
true
ïï 
;
ïï  
if
óó 
(
óó 
onTextSelection
óó 
!=
óó  "
null
óó# '
)
óó' (
onTextSelection
òò 
.
òò  
Invoke
òò  &
(
òò& '
m_Text
òò' -
,
òò- .$
stringPositionInternal
òò/ E
,
òòE F*
stringSelectPositionInternal
òòG c
)
òòc d
;
òòd e
}
ôô 	
	protected
õõ 
void
õõ $
SendOnEndTextSelection
õõ -
(
õõ- .
)
õõ. /
{
úú 	
if
ùù 
(
ùù 
!
ùù 
m_isSelected
ùù 
)
ùù 
return
ùù %
;
ùù% &
if
üü 
(
üü  
onEndTextSelection
üü "
!=
üü# %
null
üü& *
)
üü* + 
onEndTextSelection
†† "
.
††" #
Invoke
††# )
(
††) *
m_Text
††* 0
,
††0 1$
stringPositionInternal
††2 H
,
††H I*
stringSelectPositionInternal
††J f
)
††f g
;
††g h
m_isSelected
¢¢ 
=
¢¢ 
false
¢¢  
;
¢¢  !
}
££ 	
	protected
•• 
void
•• 2
$SendTouchScreenKeyboardStatusChanged
•• ;
(
••; <
)
••< =
{
¶¶ 	
if
ßß 
(
ßß 0
"onTouchScreenKeyboardStatusChanged
ßß 2
!=
ßß3 5
null
ßß6 :
)
ßß: ;0
"onTouchScreenKeyboardStatusChanged
®® 2
.
®®2 3
Invoke
®®3 9
(
®®9 :
m_SoftKeyboard
®®: H
.
®®H I
status
®®I O
)
®®O P
;
®®P Q
}
©© 	
	protected
∞∞ 
void
∞∞ 
UpdateLabel
∞∞ "
(
∞∞" #
)
∞∞# $
{
±± 	
if
≤≤ 
(
≤≤ 
m_TextComponent
≤≤ 
!=
≤≤  "
null
≤≤# '
&&
≤≤( *
m_TextComponent
≤≤+ :
.
≤≤: ;
font
≤≤; ?
!=
≤≤@ B
null
≤≤C G
&&
≤≤H J
m_PreventCallback
≤≤K \
==
≤≤] _
false
≤≤` e
)
≤≤e f
{
≥≥ 
m_PreventCallback
µµ !
=
µµ" #
true
µµ$ (
;
µµ( )
string
∑∑ 
fullText
∑∑ 
;
∑∑  
if
∏∏ 
(
∏∏ 
compositionLength
∏∏ %
>
∏∏& '
$num
∏∏( )
&&
∏∏* ,

m_ReadOnly
∏∏- 7
==
∏∏8 :
false
∏∏; @
)
∏∏@ A
{
ππ 
Delete
ΩΩ 
(
ΩΩ 
)
ΩΩ 
;
ΩΩ 
if
øø 
(
øø 

m_RichText
øø "
)
øø" #
fullText
¿¿  
=
¿¿! "
text
¿¿# '
.
¿¿' (
	Substring
¿¿( 1
(
¿¿1 2
$num
¿¿2 3
,
¿¿3 4
m_StringPosition
¿¿5 E
)
¿¿E F
+
¿¿G H
$str
¿¿J O
+
¿¿P Q
compositionString
¿¿R c
+
¿¿d e
$str
¿¿f l
+
¿¿m n
text
¿¿o s
.
¿¿s t
	Substring
¿¿t }
(
¿¿} ~
m_StringPosition¿¿~ é
)¿¿é è
;¿¿è ê
else
¡¡ 
fullText
¬¬  
=
¬¬! "
text
¬¬# '
.
¬¬' (
	Substring
¬¬( 1
(
¬¬1 2
$num
¬¬2 3
,
¬¬3 4
m_StringPosition
¬¬5 E
)
¬¬E F
+
¬¬G H
compositionString
¬¬J [
+
¬¬\ ]
text
¬¬^ b
.
¬¬b c
	Substring
¬¬c l
(
¬¬l m
m_StringPosition
¬¬m }
)
¬¬} ~
;
¬¬~ #
m_IsCompositionActive
ƒƒ )
=
ƒƒ* +
true
ƒƒ, 0
;
ƒƒ0 1
}
«« 
else
»» 
{
…… 
fullText
   
=
   
text
   #
;
  # $#
m_IsCompositionActive
ÀÀ )
=
ÀÀ* +
false
ÀÀ, 1
;
ÀÀ1 2-
m_ShouldUpdateIMEWindowPosition
ÃÃ 3
=
ÃÃ4 5
true
ÃÃ6 :
;
ÃÃ: ;
}
ŒŒ 
string
““ 
	processed
““  
;
““  !
if
”” 
(
”” 
	inputType
”” 
==
””  
	InputType
””! *
.
””* +
Password
””+ 3
)
””3 4
	processed
‘‘ 
=
‘‘ 
new
‘‘  #
string
‘‘$ *
(
‘‘* +
asteriskChar
‘‘+ 7
,
‘‘7 8
fullText
‘‘9 A
.
‘‘A B
Length
‘‘B H
)
‘‘H I
;
‘‘I J
else
’’ 
	processed
÷÷ 
=
÷÷ 
fullText
÷÷  (
;
÷÷( )
bool
ÿÿ 
isEmpty
ÿÿ 
=
ÿÿ 
string
ÿÿ %
.
ÿÿ% &
IsNullOrEmpty
ÿÿ& 3
(
ÿÿ3 4
fullText
ÿÿ4 <
)
ÿÿ< =
;
ÿÿ= >
if
⁄⁄ 
(
⁄⁄ 
m_Placeholder
⁄⁄ !
!=
⁄⁄" $
null
⁄⁄% )
)
⁄⁄) *
m_Placeholder
€€ !
.
€€! "
enabled
€€" )
=
€€* +
isEmpty
€€, 3
;
€€3 4
if
›› 
(
›› 
!
›› 
isEmpty
›› 
&&
›› 

m_ReadOnly
››  *
==
››+ -
false
››. 3
)
››3 4
{
ﬁﬁ 
SetCaretVisible
ﬂﬂ #
(
ﬂﬂ# $
)
ﬂﬂ$ %
;
ﬂﬂ% &
}
‡‡ 
m_TextComponent
‚‚ 
.
‚‚  
text
‚‚  $
=
‚‚% &
	processed
‚‚' 0
+
‚‚1 2
$str
‚‚3 ;
;
‚‚; <
if
ÂÂ 
(
ÂÂ *
m_IsDrivenByLayoutComponents
ÂÂ 0
)
ÂÂ0 1
LayoutRebuilder
ÊÊ #
.
ÊÊ# $"
MarkLayoutForRebuild
ÊÊ$ 8
(
ÊÊ8 9
m_RectTransform
ÊÊ9 H
)
ÊÊH I
;
ÊÊI J
if
ÈÈ 
(
ÈÈ 
m_LineLimit
ÈÈ 
>
ÈÈ  !
$num
ÈÈ" #
)
ÈÈ# $
{
ÍÍ 
m_TextComponent
ÎÎ #
.
ÎÎ# $
ForceMeshUpdate
ÎÎ$ 3
(
ÎÎ3 4
)
ÎÎ4 5
;
ÎÎ5 6
if
ÓÓ 
(
ÓÓ 
m_TextComponent
ÓÓ '
.
ÓÓ' (
textInfo
ÓÓ( 0
.
ÓÓ0 1
	lineCount
ÓÓ1 :
>
ÓÓ; <
m_LineLimit
ÓÓ= H
)
ÓÓH I
{
ÔÔ 
int
 %
lastValidCharacterIndex
 3
=
4 5
m_TextComponent
6 E
.
E F
textInfo
F N
.
N O
lineInfo
O W
[
W X
m_LineLimit
X c
-
d e
$num
f g
]
g h
.
h i 
lastCharacterIndex
i {
;
{ |
int
ÒÒ "
characterStringIndex
ÒÒ 0
=
ÒÒ1 2
m_TextComponent
ÒÒ3 B
.
ÒÒB C
textInfo
ÒÒC K
.
ÒÒK L
characterInfo
ÒÒL Y
[
ÒÒY Z%
lastValidCharacterIndex
ÒÒZ q
]
ÒÒq r
.
ÒÒr s
index
ÒÒs x
+
ÒÒy z
m_TextComponentÒÒ{ ä
.ÒÒä ã
textInfoÒÒã ì
.ÒÒì î
characterInfoÒÒî °
[ÒÒ° ¢'
lastValidCharacterIndexÒÒ¢ π
]ÒÒπ ∫
.ÒÒ∫ ª
stringLengthÒÒª «
;ÒÒ« »
text
ÚÚ 
=
ÚÚ 
	processed
ÚÚ (
.
ÚÚ( )
Remove
ÚÚ) /
(
ÚÚ/ 0"
characterStringIndex
ÚÚ0 D
,
ÚÚD E
	processed
ÚÚF O
.
ÚÚO P
Length
ÚÚP V
-
ÚÚW X"
characterStringIndex
ÚÚY m
)
ÚÚm n
;
ÚÚn o
m_TextComponent
ÛÛ '
.
ÛÛ' (
text
ÛÛ( ,
=
ÛÛ- .
text
ÛÛ/ 3
+
ÛÛ4 5
$str
ÛÛ6 >
;
ÛÛ> ?
}
ÙÙ 
}
ıı 
if
˜˜ 
(
˜˜ -
m_IsTextComponentUpdateRequired
˜˜ 3
)
˜˜3 4
{
¯¯ -
m_IsTextComponentUpdateRequired
˘˘ 3
=
˘˘4 5
false
˘˘6 ;
;
˘˘; <
m_TextComponent
˙˙ #
.
˙˙# $
ForceMeshUpdate
˙˙$ 3
(
˙˙3 4
)
˙˙4 5
;
˙˙5 6
}
˚˚ !
MarkGeometryAsDirty
˝˝ #
(
˝˝# $
)
˝˝$ %
;
˝˝% &)
m_IsScrollbarUpdateRequired
ÄÄ +
=
ÄÄ, -
true
ÄÄ. 2
;
ÄÄ2 3
m_PreventCallback
ÇÇ !
=
ÇÇ" #
false
ÇÇ$ )
;
ÇÇ) *
}
ÉÉ 
}
ÑÑ 	
void
ÜÜ 
UpdateScrollbar
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 	
if
ââ 
(
ââ !
m_VerticalScrollbar
ââ #
)
ââ# $
{
ää 
float
ãã 
size
ãã 
=
ãã 
m_TextViewport
ãã +
.
ãã+ ,
rect
ãã, 0
.
ãã0 1
height
ãã1 7
/
ãã8 9
m_TextComponent
ãã: I
.
ããI J
preferredHeight
ããJ Y
;
ããY Z)
m_IsUpdatingScrollbarValues
çç +
=
çç, -
true
çç. 2
;
çç2 3!
m_VerticalScrollbar
èè #
.
èè# $
size
èè$ (
=
èè) *
size
èè+ /
;
èè/ 0
m_ScrollPosition
ëë  
=
ëë! "!
m_VerticalScrollbar
ëë# 6
.
ëë6 7
value
ëë7 <
=
ëë= >
m_TextComponent
ëë? N
.
ëëN O
rectTransform
ëëO \
.
ëë\ ]
anchoredPosition
ëë] m
.
ëëm n
y
ëën o
/
ëëp q
(
ëër s
m_TextComponentëës Ç
.ëëÇ É
preferredHeightëëÉ í
-ëëì î
m_TextViewportëëï £
.ëë£ §
rectëë§ ®
.ëë® ©
heightëë© Ø
)ëëØ ∞
;ëë∞ ±
}
ññ 
}
óó 	
void
ûû $
OnScrollbarValueChange
ûû #
(
ûû# $
float
ûû$ )
value
ûû* /
)
ûû/ 0
{
üü 	
if
†† 
(
†† )
m_IsUpdatingScrollbarValues
†† +
)
††+ ,
{
††- .)
m_IsUpdatingScrollbarValues
††/ J
=
††K L
false
††M R
;
††R S
return
††T Z
;
††Z [
}
††\ ]
if
¢¢ 
(
¢¢ 
value
¢¢ 
<
¢¢ 
$num
¢¢ 
||
¢¢ 
value
¢¢ "
>
¢¢# $
$num
¢¢% &
)
¢¢& '
return
¢¢( .
;
¢¢. /2
$AdjustTextPositionRelativeToViewport
§§ 0
(
§§0 1
value
§§1 6
)
§§6 7
;
§§7 8
m_ScrollPosition
¶¶ 
=
¶¶ 
value
¶¶ $
;
¶¶$ %
}
©© 	
void
´´ 
UpdateMaskRegions
´´ 
(
´´ 
)
´´  
{
¨¨ 	
}
«« 	
void
ÕÕ 2
$AdjustTextPositionRelativeToViewport
ÕÕ 1
(
ÕÕ2 3
float
ÕÕ3 8
relativePosition
ÕÕ9 I
)
ÕÕI J
{
ŒŒ 	
if
œœ 
(
œœ 
m_TextViewport
œœ 
==
œœ !
null
œœ" &
)
œœ& '
return
–– 
;
–– 
TMP_TextInfo
““ 
textInfo
““ !
=
““" #
m_TextComponent
““$ 3
.
““3 4
textInfo
““4 <
;
““< =
if
’’ 
(
’’ 
textInfo
’’ 
==
’’ 
null
’’  
||
’’! #
textInfo
’’$ ,
.
’’, -
lineInfo
’’- 5
==
’’6 8
null
’’9 =
||
’’> @
textInfo
’’A I
.
’’I J
	lineCount
’’J S
==
’’T V
$num
’’W X
||
’’Y [
textInfo
’’\ d
.
’’d e
	lineCount
’’e n
>
’’o p
textInfo
’’q y
.
’’y z
lineInfo’’z Ç
.’’Ç É
Length’’É â
)’’â ä
return’’ã ë
;’’ë í
m_TextComponent
◊◊ 
.
◊◊ 
rectTransform
◊◊ )
.
◊◊) *
anchoredPosition
◊◊* :
=
◊◊; <
new
◊◊= @
Vector2
◊◊A H
(
◊◊H I
m_TextComponent
◊◊I X
.
◊◊X Y
rectTransform
◊◊Y f
.
◊◊f g
anchoredPosition
◊◊g w
.
◊◊w x
x
◊◊x y
,
◊◊y z
(
◊◊{ |
m_TextComponent◊◊| ã
.◊◊ã å
preferredHeight◊◊å õ
-◊◊ú ù
m_TextViewport◊◊û ¨
.◊◊¨ ≠
rect◊◊≠ ±
.◊◊± ≤
height◊◊≤ ∏
)◊◊∏ π
*◊◊∫ ª 
relativePosition◊◊º Ã
)◊◊Ã Õ
;◊◊Õ Œ'
AssignPositioningIfNeeded
ŸŸ %
(
ŸŸ% &
)
ŸŸ& '
;
ŸŸ' (
}
‹‹ 	
private
ﬂﬂ 
int
ﬂﬂ -
GetCaretPositionFromStringIndex
ﬂﬂ 3
(
ﬂﬂ3 4
int
ﬂﬂ4 7
stringIndex
ﬂﬂ8 C
)
ﬂﬂC D
{
‡‡ 	
int
·· 
count
·· 
=
·· 
m_TextComponent
·· '
.
··' (
textInfo
··( 0
.
··0 1
characterCount
··1 ?
;
··? @
for
„„ 
(
„„ 
int
„„ 
i
„„ 
=
„„ 
$num
„„ 
;
„„ 
i
„„ 
<
„„ 
count
„„  %
;
„„% &
i
„„' (
++
„„( *
)
„„* +
{
‰‰ 
if
ÂÂ 
(
ÂÂ 
m_TextComponent
ÂÂ #
.
ÂÂ# $
textInfo
ÂÂ$ ,
.
ÂÂ, -
characterInfo
ÂÂ- :
[
ÂÂ: ;
i
ÂÂ; <
]
ÂÂ< =
.
ÂÂ= >
index
ÂÂ> C
>=
ÂÂD F
stringIndex
ÂÂG R
)
ÂÂR S
return
ÊÊ 
i
ÊÊ 
;
ÊÊ 
}
ÁÁ 
return
ÈÈ 
count
ÈÈ 
;
ÈÈ 
}
ÍÍ 	
private
ÒÒ 
int
ÒÒ 0
"GetMinCaretPositionFromStringIndex
ÒÒ 6
(
ÒÒ6 7
int
ÒÒ7 :
stringIndex
ÒÒ; F
)
ÒÒF G
{
ÚÚ 	
int
ÛÛ 
count
ÛÛ 
=
ÛÛ 
m_TextComponent
ÛÛ '
.
ÛÛ' (
textInfo
ÛÛ( 0
.
ÛÛ0 1
characterCount
ÛÛ1 ?
;
ÛÛ? @
for
ıı 
(
ıı 
int
ıı 
i
ıı 
=
ıı 
$num
ıı 
;
ıı 
i
ıı 
<
ıı 
count
ıı  %
;
ıı% &
i
ıı' (
++
ıı( *
)
ıı* +
{
ˆˆ 
if
˜˜ 
(
˜˜ 
stringIndex
˜˜ 
<
˜˜  !
m_TextComponent
˜˜" 1
.
˜˜1 2
textInfo
˜˜2 :
.
˜˜: ;
characterInfo
˜˜; H
[
˜˜H I
i
˜˜I J
]
˜˜J K
.
˜˜K L
index
˜˜L Q
+
˜˜R S
m_TextComponent
˜˜T c
.
˜˜c d
textInfo
˜˜d l
.
˜˜l m
characterInfo
˜˜m z
[
˜˜z {
i
˜˜{ |
]
˜˜| }
.
˜˜} ~
stringLength˜˜~ ä
)˜˜ä ã
return
¯¯ 
i
¯¯ 
;
¯¯ 
}
˘˘ 
return
˚˚ 
count
˚˚ 
;
˚˚ 
}
¸¸ 	
private
ÉÉ 
int
ÉÉ 0
"GetMaxCaretPositionFromStringIndex
ÉÉ 6
(
ÉÉ6 7
int
ÉÉ7 :
stringIndex
ÉÉ; F
)
ÉÉF G
{
ÑÑ 	
int
ÖÖ 
count
ÖÖ 
=
ÖÖ 
m_TextComponent
ÖÖ '
.
ÖÖ' (
textInfo
ÖÖ( 0
.
ÖÖ0 1
characterCount
ÖÖ1 ?
;
ÖÖ? @
for
áá 
(
áá 
int
áá 
i
áá 
=
áá 
$num
áá 
;
áá 
i
áá 
<
áá 
count
áá  %
;
áá% &
i
áá' (
++
áá( *
)
áá* +
{
àà 
if
ââ 
(
ââ 
m_TextComponent
ââ #
.
ââ# $
textInfo
ââ$ ,
.
ââ, -
characterInfo
ââ- :
[
ââ: ;
i
ââ; <
]
ââ< =
.
ââ= >
index
ââ> C
>=
ââD F
stringIndex
ââG R
)
ââR S
return
ää 
i
ää 
;
ää 
}
ãã 
return
çç 
count
çç 
;
çç 
}
éé 	
private
êê 
int
êê -
GetStringIndexFromCaretPosition
êê 3
(
êê3 4
int
êê4 7
caretPosition
êê8 E
)
êêE F
{
ëë 	
ClampCaretPos
ìì 
(
ìì 
ref
ìì 
caretPosition
ìì +
)
ìì+ ,
;
ìì, -
return
ïï 
m_TextComponent
ïï "
.
ïï" #
textInfo
ïï# +
.
ïï+ ,
characterInfo
ïï, 9
[
ïï9 :
caretPosition
ïï: G
]
ïïG H
.
ïïH I
index
ïïI N
;
ïïN O
}
ññ 	
public
ôô 
void
ôô 
ForceLabelUpdate
ôô $
(
ôô$ %
)
ôô% &
{
öö 	
UpdateLabel
õõ 
(
õõ 
)
õõ 
;
õõ 
}
úú 	
private
ûû 
void
ûû !
MarkGeometryAsDirty
ûû (
(
ûû( )
)
ûû) *
{
üü 	
if
°° 
(
°° 
!
°° 
Application
°° 
.
°° 
	isPlaying
°° &
||
°°' )
UnityEditor
°°* 5
.
°°5 6
PrefabUtility
°°6 C
.
°°C D!
IsPartOfPrefabAsset
°°D W
(
°°W X
this
°°X \
)
°°\ ]
)
°°] ^
return
¢¢ 
;
¢¢ "
CanvasUpdateRegistry
••  
.
••  !4
&RegisterCanvasElementForGraphicRebuild
••! G
(
••G H
this
••H L
)
••L M
;
••M N
}
¶¶ 	
public
®® 
virtual
®® 
void
®® 
Rebuild
®® #
(
®®# $
CanvasUpdate
®®$ 0
update
®®1 7
)
®®7 8
{
©© 	
switch
™™ 
(
™™ 
update
™™ 
)
™™ 
{
´´ 
case
¨¨ 
CanvasUpdate
¨¨ !
.
¨¨! "
LatePreRender
¨¨" /
:
¨¨/ 0
UpdateGeometry
≠≠ "
(
≠≠" #
)
≠≠# $
;
≠≠$ %
break
ÆÆ 
;
ÆÆ 
}
ØØ 
}
∞∞ 	
public
≤≤ 
virtual
≤≤ 
void
≤≤ 
LayoutComplete
≤≤ *
(
≤≤* +
)
≤≤+ ,
{
≥≥ 	
}
≥≥
 
public
µµ 
virtual
µµ 
void
µµ #
GraphicUpdateComplete
µµ 1
(
µµ1 2
)
µµ2 3
{
∂∂ 	
}
∂∂
 
private
∏∏ 
void
∏∏ 
UpdateGeometry
∏∏ #
(
∏∏# $
)
∏∏$ %
{
ππ 	
if
ªª 
(
ªª 
!
ªª 
Application
ªª 
.
ªª 
	isPlaying
ªª &
)
ªª& '
return
ºº 
;
ºº 
if
¿¿ 
(
¿¿ 
InPlaceEditing
¿¿ 
(
¿¿ 
)
¿¿  
==
¿¿! #
false
¿¿$ )
)
¿¿) *
return
¡¡ 
;
¡¡ 
if
√√ 
(
√√ #
m_CachedInputRenderer
√√ %
==
√√& (
null
√√) -
)
√√- .
return
ƒƒ 
;
ƒƒ 
	OnFillVBO
∆∆ 
(
∆∆ 
mesh
∆∆ 
)
∆∆ 
;
∆∆ #
m_CachedInputRenderer
»» !
.
»»! "
SetMesh
»»" )
(
»») *
mesh
»»* .
)
»». /
;
»»/ 0
}
…… 	
private
œœ 
void
œœ '
AssignPositioningIfNeeded
œœ .
(
œœ. /
)
œœ/ 0
{
–– 	
if
—— 
(
—— 
m_TextComponent
—— 
!=
——  "
null
——# '
&&
——( *
caretRectTrans
——+ 9
!=
——: <
null
——= A
&&
——B D
(
““ 
caretRectTrans
““ 
.
““  
localPosition
““  -
!=
““. 0
m_TextComponent
““1 @
.
““@ A
rectTransform
““A N
.
““N O
localPosition
““O \
||
““] _
caretRectTrans
”” 
.
””  
localRotation
””  -
!=
””. 0
m_TextComponent
””1 @
.
””@ A
rectTransform
””A N
.
””N O
localRotation
””O \
||
””] _
caretRectTrans
‘‘ 
.
‘‘  

localScale
‘‘  *
!=
‘‘+ -
m_TextComponent
‘‘. =
.
‘‘= >
rectTransform
‘‘> K
.
‘‘K L

localScale
‘‘L V
||
‘‘W Y
caretRectTrans
’’ 
.
’’  
	anchorMin
’’  )
!=
’’* ,
m_TextComponent
’’- <
.
’’< =
rectTransform
’’= J
.
’’J K
	anchorMin
’’K T
||
’’U W
caretRectTrans
÷÷ 
.
÷÷  
	anchorMax
÷÷  )
!=
÷÷* ,
m_TextComponent
÷÷- <
.
÷÷< =
rectTransform
÷÷= J
.
÷÷J K
	anchorMax
÷÷K T
||
÷÷U W
caretRectTrans
◊◊ 
.
◊◊  
anchoredPosition
◊◊  0
!=
◊◊1 3
m_TextComponent
◊◊4 C
.
◊◊C D
rectTransform
◊◊D Q
.
◊◊Q R
anchoredPosition
◊◊R b
||
◊◊c e
caretRectTrans
ÿÿ 
.
ÿÿ  
	sizeDelta
ÿÿ  )
!=
ÿÿ* ,
m_TextComponent
ÿÿ- <
.
ÿÿ< =
rectTransform
ÿÿ= J
.
ÿÿJ K
	sizeDelta
ÿÿK T
||
ÿÿU W
caretRectTrans
ŸŸ 
.
ŸŸ  
pivot
ŸŸ  %
!=
ŸŸ& (
m_TextComponent
ŸŸ) 8
.
ŸŸ8 9
rectTransform
ŸŸ9 F
.
ŸŸF G
pivot
ŸŸG L
)
ŸŸL M
)
ŸŸM N
{
⁄⁄ 
caretRectTrans
€€ 
.
€€ 
localPosition
€€ ,
=
€€- .
m_TextComponent
€€/ >
.
€€> ?
rectTransform
€€? L
.
€€L M
localPosition
€€M Z
;
€€Z [
caretRectTrans
‹‹ 
.
‹‹ 
localRotation
‹‹ ,
=
‹‹- .
m_TextComponent
‹‹/ >
.
‹‹> ?
rectTransform
‹‹? L
.
‹‹L M
localRotation
‹‹M Z
;
‹‹Z [
caretRectTrans
›› 
.
›› 

localScale
›› )
=
››* +
m_TextComponent
››, ;
.
››; <
rectTransform
››< I
.
››I J

localScale
››J T
;
››T U
caretRectTrans
ﬁﬁ 
.
ﬁﬁ 
	anchorMin
ﬁﬁ (
=
ﬁﬁ) *
m_TextComponent
ﬁﬁ+ :
.
ﬁﬁ: ;
rectTransform
ﬁﬁ; H
.
ﬁﬁH I
	anchorMin
ﬁﬁI R
;
ﬁﬁR S
caretRectTrans
ﬂﬂ 
.
ﬂﬂ 
	anchorMax
ﬂﬂ (
=
ﬂﬂ) *
m_TextComponent
ﬂﬂ+ :
.
ﬂﬂ: ;
rectTransform
ﬂﬂ; H
.
ﬂﬂH I
	anchorMax
ﬂﬂI R
;
ﬂﬂR S
caretRectTrans
‡‡ 
.
‡‡ 
anchoredPosition
‡‡ /
=
‡‡0 1
m_TextComponent
‡‡2 A
.
‡‡A B
rectTransform
‡‡B O
.
‡‡O P
anchoredPosition
‡‡P `
;
‡‡` a
caretRectTrans
·· 
.
·· 
	sizeDelta
·· (
=
··) *
m_TextComponent
··+ :
.
··: ;
rectTransform
··; H
.
··H I
	sizeDelta
··I R
;
··R S
caretRectTrans
‚‚ 
.
‚‚ 
pivot
‚‚ $
=
‚‚% &
m_TextComponent
‚‚' 6
.
‚‚6 7
rectTransform
‚‚7 D
.
‚‚D E
pivot
‚‚E J
;
‚‚J K
}
„„ 
}
‰‰ 	
private
ÁÁ 
void
ÁÁ 
	OnFillVBO
ÁÁ 
(
ÁÁ 
Mesh
ÁÁ #
vbo
ÁÁ$ '
)
ÁÁ' (
{
ËË 	
using
ÈÈ 
(
ÈÈ 
var
ÈÈ 
helper
ÈÈ 
=
ÈÈ 
new
ÈÈ  #
VertexHelper
ÈÈ$ 0
(
ÈÈ0 1
)
ÈÈ1 2
)
ÈÈ2 3
{
ÍÍ 
if
ÎÎ 
(
ÎÎ 
!
ÎÎ 
	isFocused
ÎÎ 
&&
ÎÎ !
!
ÎÎ" #$
m_SelectionStillActive
ÎÎ# 9
)
ÎÎ9 :
{
ÏÏ 
helper
ÌÌ 
.
ÌÌ 
FillMesh
ÌÌ #
(
ÌÌ# $
vbo
ÌÌ$ '
)
ÌÌ' (
;
ÌÌ( )
return
ÓÓ 
;
ÓÓ 
}
ÔÔ 
if
ÒÒ 
(
ÒÒ %
m_IsStringPositionDirty
ÒÒ +
)
ÒÒ+ ,
{
ÚÚ $
stringPositionInternal
ÛÛ *
=
ÛÛ+ ,-
GetStringIndexFromCaretPosition
ÛÛ- L
(
ÛÛL M
m_CaretPosition
ÛÛM \
)
ÛÛ\ ]
;
ÛÛ] ^*
stringSelectPositionInternal
ÙÙ 0
=
ÙÙ1 2-
GetStringIndexFromCaretPosition
ÙÙ3 R
(
ÙÙR S#
m_CaretSelectPosition
ÙÙS h
)
ÙÙh i
;
ÙÙi j%
m_IsStringPositionDirty
ıı +
=
ıı, -
false
ıı. 3
;
ıı3 4
}
ˆˆ 
if
¯¯ 
(
¯¯ $
m_IsCaretPositionDirty
¯¯ *
)
¯¯* +
{
˘˘ #
caretPositionInternal
˙˙ )
=
˙˙* +-
GetCaretPositionFromStringIndex
˙˙, K
(
˙˙K L$
stringPositionInternal
˙˙L b
)
˙˙b c
;
˙˙c d)
caretSelectPositionInternal
˚˚ /
=
˚˚0 1-
GetCaretPositionFromStringIndex
˚˚2 Q
(
˚˚Q R*
stringSelectPositionInternal
˚˚R n
)
˚˚n o
;
˚˚o p$
m_IsCaretPositionDirty
¸¸ *
=
¸¸+ ,
false
¸¸- 2
;
¸¸2 3
}
˝˝ 
if
ˇˇ 
(
ˇˇ 
!
ˇˇ 
hasSelection
ˇˇ !
&&
ˇˇ" $
!
ˇˇ% &

m_ReadOnly
ˇˇ& 0
)
ˇˇ0 1
{
ÄÄ 
GenerateCaret
ÅÅ !
(
ÅÅ! "
helper
ÅÅ" (
,
ÅÅ( )
Vector2
ÅÅ* 1
.
ÅÅ1 2
zero
ÅÅ2 6
)
ÅÅ6 7
;
ÅÅ7 8$
SendOnEndTextSelection
ÇÇ *
(
ÇÇ* +
)
ÇÇ+ ,
;
ÇÇ, -
}
ÉÉ 
else
ÑÑ 
{
ÖÖ  
GenerateHightlight
ÜÜ &
(
ÜÜ& '
helper
ÜÜ' -
,
ÜÜ- .
Vector2
ÜÜ/ 6
.
ÜÜ6 7
zero
ÜÜ7 ;
)
ÜÜ; <
;
ÜÜ< =!
SendOnTextSelection
áá '
(
áá' (
)
áá( )
;
áá) *
}
àà 
helper
ää 
.
ää 
FillMesh
ää 
(
ää  
vbo
ää  #
)
ää# $
;
ää$ %
}
ãã 
}
åå 	
private
èè 
void
èè 
GenerateCaret
èè "
(
èè" #
VertexHelper
èè# /
vbo
èè0 3
,
èè3 4
Vector2
èè5 <
roundingOffset
èè= K
)
èèK L
{
êê 	
if
ëë 
(
ëë 
m_CaretVisible
ëë 
==
ëë !
false
ëë" '
)
ëë' (
return
íí 
;
íí 
if
îî 
(
îî 
m_CursorVerts
îî 
==
îî  
null
îî! %
)
îî% &
{
ïï 
CreateCursorVerts
ññ !
(
ññ! "
)
ññ" #
;
ññ# $
}
óó 
float
ôô 
width
ôô 
=
ôô 
m_CaretWidth
ôô &
;
ôô& '
Vector2
ùù 
startPosition
ùù !
=
ùù" #
Vector2
ùù$ +
.
ùù+ ,
zero
ùù, 0
;
ùù0 1
float
ûû 
height
ûû 
=
ûû 
$num
ûû 
;
ûû 
TMP_CharacterInfo
üü 
currentCharacter
üü .
;
üü. /
if
¢¢ 
(
¢¢ #
caretPositionInternal
¢¢ %
>=
¢¢& (
m_TextComponent
¢¢) 8
.
¢¢8 9
textInfo
¢¢9 A
.
¢¢A B
characterInfo
¢¢B O
.
¢¢O P
Length
¢¢P V
)
¢¢V W
return
££ 
;
££ 
int
•• 
currentLine
•• 
=
•• 
m_TextComponent
•• -
.
••- .
textInfo
••. 6
.
••6 7
characterInfo
••7 D
[
••D E#
caretPositionInternal
••E Z
]
••Z [
.
••[ \

lineNumber
••\ f
;
••f g
if
®® 
(
®® #
caretPositionInternal
®® %
==
®®& (
m_TextComponent
®®) 8
.
®®8 9
textInfo
®®9 A
.
®®A B
lineInfo
®®B J
[
®®J K
currentLine
®®K V
]
®®V W
.
®®W X!
firstCharacterIndex
®®X k
)
®®k l
{
©© 
currentCharacter
™™  
=
™™! "
m_TextComponent
™™# 2
.
™™2 3
textInfo
™™3 ;
.
™™; <
characterInfo
™™< I
[
™™I J#
caretPositionInternal
™™J _
]
™™_ `
;
™™` a
height
´´ 
=
´´ 
currentCharacter
´´ )
.
´´) *
ascender
´´* 2
-
´´3 4
currentCharacter
´´5 E
.
´´E F
	descender
´´F O
;
´´O P
if
≠≠ 
(
≠≠ 
m_TextComponent
≠≠ #
.
≠≠# $
verticalAlignment
≠≠$ 5
==
≠≠6 8&
VerticalAlignmentOptions
≠≠9 Q
.
≠≠Q R
Geometry
≠≠R Z
)
≠≠Z [
startPosition
ÆÆ !
=
ÆÆ" #
new
ÆÆ$ '
Vector2
ÆÆ( /
(
ÆÆ/ 0
currentCharacter
ÆÆ0 @
.
ÆÆ@ A
origin
ÆÆA G
,
ÆÆG H
$num
ÆÆI J
-
ÆÆK L
height
ÆÆM S
/
ÆÆT U
$num
ÆÆV W
)
ÆÆW X
;
ÆÆX Y
else
ØØ 
startPosition
∞∞ !
=
∞∞" #
new
∞∞$ '
Vector2
∞∞( /
(
∞∞/ 0
currentCharacter
∞∞0 @
.
∞∞@ A
origin
∞∞A G
,
∞∞G H
currentCharacter
∞∞I Y
.
∞∞Y Z
	descender
∞∞Z c
)
∞∞c d
;
∞∞d e
}
±± 
else
≤≤ 
{
≥≥ 
currentCharacter
¥¥  
=
¥¥! "
m_TextComponent
¥¥# 2
.
¥¥2 3
textInfo
¥¥3 ;
.
¥¥; <
characterInfo
¥¥< I
[
¥¥I J#
caretPositionInternal
¥¥J _
-
¥¥` a
$num
¥¥b c
]
¥¥c d
;
¥¥d e
height
µµ 
=
µµ 
currentCharacter
µµ )
.
µµ) *
ascender
µµ* 2
-
µµ3 4
currentCharacter
µµ5 E
.
µµE F
	descender
µµF O
;
µµO P
if
∑∑ 
(
∑∑ 
m_TextComponent
∑∑ #
.
∑∑# $
verticalAlignment
∑∑$ 5
==
∑∑6 8&
VerticalAlignmentOptions
∑∑9 Q
.
∑∑Q R
Geometry
∑∑R Z
)
∑∑Z [
startPosition
∏∏ !
=
∏∏" #
new
∏∏$ '
Vector2
∏∏( /
(
∏∏/ 0
currentCharacter
∏∏0 @
.
∏∏@ A
xAdvance
∏∏A I
,
∏∏I J
$num
∏∏K L
-
∏∏M N
height
∏∏O U
/
∏∏V W
$num
∏∏X Y
)
∏∏Y Z
;
∏∏Z [
else
ππ 
startPosition
∫∫ !
=
∫∫" #
new
∫∫$ '
Vector2
∫∫( /
(
∫∫/ 0
currentCharacter
∫∫0 @
.
∫∫@ A
xAdvance
∫∫A I
,
∫∫I J
currentCharacter
∫∫K [
.
∫∫[ \
	descender
∫∫\ e
)
∫∫e f
;
∫∫f g
}
ºº 
if
ææ 
(
ææ 
m_SoftKeyboard
ææ 
!=
ææ !
null
ææ" &
)
ææ& '
{
øø 
int
¿¿ 
selectionStart
¿¿ "
=
¿¿# $
m_StringPosition
¿¿% 5
;
¿¿5 6
int
¡¡ &
softKeyboardStringLength
¡¡ ,
=
¡¡- .
m_SoftKeyboard
¡¡/ =
.
¡¡= >
text
¡¡> B
==
¡¡C E
null
¡¡F J
?
¡¡K L
$num
¡¡M N
:
¡¡O P
m_SoftKeyboard
¡¡Q _
.
¡¡_ `
text
¡¡` d
.
¡¡d e
Length
¡¡e k
;
¡¡k l
if
√√ 
(
√√ 
selectionStart
√√ "
<
√√# $
$num
√√% &
)
√√& '
selectionStart
ƒƒ "
=
ƒƒ# $
$num
ƒƒ% &
;
ƒƒ& '
if
∆∆ 
(
∆∆ 
selectionStart
∆∆ "
>
∆∆# $&
softKeyboardStringLength
∆∆% =
)
∆∆= >
selectionStart
«« "
=
««# $&
softKeyboardStringLength
««% =
;
««= >
m_SoftKeyboard
…… 
.
…… 
	selection
…… (
=
……) *
new
……+ .
RangeInt
……/ 7
(
……7 8
selectionStart
……8 F
,
……F G
$num
……H I
)
……I J
;
……J K
}
   
if
ÕÕ 
(
ÕÕ 
	isFocused
ÕÕ 
&&
ÕÕ 
startPosition
ÕÕ *
!=
ÕÕ+ -
m_LastPosition
ÕÕ. <
||
ÕÕ= ?,
m_forceRectTransformAdjustment
ÕÕ@ ^
||
ÕÕ_ a"
m_isLastKeyBackspace
ÕÕb v
)
ÕÕv w3
%AdjustRectTransformRelativeToViewport
ŒŒ 5
(
ŒŒ5 6
startPosition
ŒŒ6 C
,
ŒŒC D
height
ŒŒE K
,
ŒŒK L
currentCharacter
ŒŒM ]
.
ŒŒ] ^
	isVisible
ŒŒ^ g
)
ŒŒg h
;
ŒŒh i
m_LastPosition
–– 
=
–– 
startPosition
–– *
;
––* +
float
”” 
top
”” 
=
”” 
startPosition
”” %
.
””% &
y
””& '
+
””( )
height
””* 0
;
””0 1
float
‘‘ 
bottom
‘‘ 
=
‘‘ 
top
‘‘ 
-
‘‘  
height
‘‘! '
;
‘‘' (
float
◊◊ 
scale
◊◊ 
=
◊◊ 
m_TextComponent
◊◊ )
.
◊◊) *
canvas
◊◊* 0
.
◊◊0 1
scaleFactor
◊◊1 <
;
◊◊< =
m_CursorVerts
ŸŸ 
[
ŸŸ 
$num
ŸŸ 
]
ŸŸ 
.
ŸŸ 
position
ŸŸ %
=
ŸŸ& '
new
ŸŸ( +
Vector3
ŸŸ, 3
(
ŸŸ3 4
startPosition
ŸŸ4 A
.
ŸŸA B
x
ŸŸB C
,
ŸŸC D
bottom
ŸŸE K
,
ŸŸK L
$num
ŸŸM Q
)
ŸŸQ R
;
ŸŸR S
m_CursorVerts
⁄⁄ 
[
⁄⁄ 
$num
⁄⁄ 
]
⁄⁄ 
.
⁄⁄ 
position
⁄⁄ %
=
⁄⁄& '
new
⁄⁄( +
Vector3
⁄⁄, 3
(
⁄⁄3 4
startPosition
⁄⁄4 A
.
⁄⁄A B
x
⁄⁄B C
,
⁄⁄C D
top
⁄⁄E H
,
⁄⁄H I
$num
⁄⁄J N
)
⁄⁄N O
;
⁄⁄O P
m_CursorVerts
€€ 
[
€€ 
$num
€€ 
]
€€ 
.
€€ 
position
€€ %
=
€€& '
new
€€( +
Vector3
€€, 3
(
€€3 4
startPosition
€€4 A
.
€€A B
x
€€B C
+
€€D E
width
€€F K
,
€€K L
top
€€M P
,
€€P Q
$num
€€R V
)
€€V W
;
€€W X
m_CursorVerts
‹‹ 
[
‹‹ 
$num
‹‹ 
]
‹‹ 
.
‹‹ 
position
‹‹ %
=
‹‹& '
new
‹‹( +
Vector3
‹‹, 3
(
‹‹3 4
startPosition
‹‹4 A
.
‹‹A B
x
‹‹B C
+
‹‹D E
width
‹‹F K
,
‹‹K L
bottom
‹‹M S
,
‹‹S T
$num
‹‹U Y
)
‹‹Y Z
;
‹‹Z [
m_CursorVerts
ﬂﬂ 
[
ﬂﬂ 
$num
ﬂﬂ 
]
ﬂﬂ 
.
ﬂﬂ 
color
ﬂﬂ "
=
ﬂﬂ# $

caretColor
ﬂﬂ% /
;
ﬂﬂ/ 0
m_CursorVerts
‡‡ 
[
‡‡ 
$num
‡‡ 
]
‡‡ 
.
‡‡ 
color
‡‡ "
=
‡‡# $

caretColor
‡‡% /
;
‡‡/ 0
m_CursorVerts
·· 
[
·· 
$num
·· 
]
·· 
.
·· 
color
·· "
=
··# $

caretColor
··% /
;
··/ 0
m_CursorVerts
‚‚ 
[
‚‚ 
$num
‚‚ 
]
‚‚ 
.
‚‚ 
color
‚‚ "
=
‚‚# $

caretColor
‚‚% /
;
‚‚/ 0
vbo
‰‰ 
.
‰‰ 
AddUIVertexQuad
‰‰ 
(
‰‰  
m_CursorVerts
‰‰  -
)
‰‰- .
;
‰‰. /
if
ÁÁ 
(
ÁÁ -
m_ShouldUpdateIMEWindowPosition
ÁÁ /
||
ÁÁ0 2
currentLine
ÁÁ3 >
!=
ÁÁ? A(
m_PreviousIMEInsertionLine
ÁÁB \
)
ÁÁ\ ]
{
ËË -
m_ShouldUpdateIMEWindowPosition
ÈÈ /
=
ÈÈ0 1
false
ÈÈ2 7
;
ÈÈ7 8(
m_PreviousIMEInsertionLine
ÍÍ *
=
ÍÍ+ ,
currentLine
ÍÍ- 8
;
ÍÍ8 9
Camera
ÌÌ 
	cameraRef
ÌÌ  
;
ÌÌ  !
if
ÓÓ 
(
ÓÓ 
m_TextComponent
ÓÓ #
.
ÓÓ# $
canvas
ÓÓ$ *
.
ÓÓ* +

renderMode
ÓÓ+ 5
==
ÓÓ6 8

RenderMode
ÓÓ9 C
.
ÓÓC D 
ScreenSpaceOverlay
ÓÓD V
)
ÓÓV W
	cameraRef
ÔÔ 
=
ÔÔ 
null
ÔÔ  $
;
ÔÔ$ %
else
 
	cameraRef
ÒÒ 
=
ÒÒ 
m_TextComponent
ÒÒ  /
.
ÒÒ/ 0
canvas
ÒÒ0 6
.
ÒÒ6 7
worldCamera
ÒÒ7 B
;
ÒÒB C
Vector3
ÛÛ 
cursorPosition
ÛÛ &
=
ÛÛ' (#
m_CachedInputRenderer
ÛÛ) >
.
ÛÛ> ?

gameObject
ÛÛ? I
.
ÛÛI J
	transform
ÛÛJ S
.
ÛÛS T
TransformPoint
ÛÛT b
(
ÛÛb c
m_CursorVerts
ÛÛc p
[
ÛÛp q
$num
ÛÛq r
]
ÛÛr s
.
ÛÛs t
position
ÛÛt |
)
ÛÛ| }
;
ÛÛ} ~
Vector2
ÙÙ 
screenPosition
ÙÙ &
=
ÙÙ' ("
RectTransformUtility
ÙÙ) =
.
ÙÙ= > 
WorldToScreenPoint
ÙÙ> P
(
ÙÙP Q
	cameraRef
ÙÙQ Z
,
ÙÙZ [
cursorPosition
ÙÙ\ j
)
ÙÙj k
;
ÙÙk l
screenPosition
ıı 
.
ıı 
y
ıı  
=
ıı! "
Screen
ıı# )
.
ıı) *
height
ıı* 0
-
ıı1 2
screenPosition
ıı3 A
.
ııA B
y
ııB C
;
ııC D
if
˜˜ 
(
˜˜ 
inputSystem
˜˜ 
!=
˜˜  "
null
˜˜# '
)
˜˜' (
inputSystem
¯¯ 
.
¯¯  "
compositionCursorPos
¯¯  4
=
¯¯5 6
screenPosition
¯¯7 E
;
¯¯E F
}
˚˚ 
}
ÄÄ 	
private
ÉÉ 
void
ÉÉ 
CreateCursorVerts
ÉÉ &
(
ÉÉ& '
)
ÉÉ' (
{
ÑÑ 	
m_CursorVerts
ÖÖ 
=
ÖÖ 
new
ÖÖ 
UIVertex
ÖÖ  (
[
ÖÖ( )
$num
ÖÖ) *
]
ÖÖ* +
;
ÖÖ+ ,
for
áá 
(
áá 
int
áá 
i
áá 
=
áá 
$num
áá 
;
áá 
i
áá 
<
áá 
m_CursorVerts
áá  -
.
áá- .
Length
áá. 4
;
áá4 5
i
áá6 7
++
áá7 9
)
áá9 :
{
àà 
m_CursorVerts
ââ 
[
ââ 
i
ââ 
]
ââ  
=
ââ! "
UIVertex
ââ# +
.
ââ+ ,

simpleVert
ââ, 6
;
ââ6 7
m_CursorVerts
ää 
[
ää 
i
ää 
]
ää  
.
ää  !
uv0
ää! $
=
ää% &
Vector2
ää' .
.
ää. /
zero
ää/ 3
;
ää3 4
}
ãã 
}
åå 	
private
èè 
void
èè  
GenerateHightlight
èè '
(
èè' (
VertexHelper
èè( 4
vbo
èè5 8
,
èè8 9
Vector2
èè: A
roundingOffset
èèB P
)
èèP Q
{
êê 	
UpdateMaskRegions
íí 
(
íí 
)
íí 
;
íí  
TMP_TextInfo
òò 
textInfo
òò !
=
òò" #
m_TextComponent
òò$ 3
.
òò3 4
textInfo
òò4 <
;
òò< =
m_CaretPosition
öö 
=
öö -
GetCaretPositionFromStringIndex
öö =
(
öö= >$
stringPositionInternal
öö> T
)
ööT U
;
ööU V#
m_CaretSelectPosition
õõ !
=
õõ" #-
GetCaretPositionFromStringIndex
õõ$ C
(
õõC D*
stringSelectPositionInternal
õõD `
)
õõ` a
;
õõa b
if
ùù 
(
ùù 
m_SoftKeyboard
ùù 
!=
ùù !
null
ùù" &
)
ùù& '
{
ûû 
int
üü 
stringPosition
üü "
=
üü# $
m_CaretPosition
üü% 4
<
üü5 6#
m_CaretSelectPosition
üü7 L
?
üüM N
textInfo
üüO W
.
üüW X
characterInfo
üüX e
[
üüe f
m_CaretPosition
üüf u
]
üüu v
.
üüv w
index
üüw |
:
üü} ~
textInfoüü á
.üüá à
characterInfoüüà ï
[üüï ñ%
m_CaretSelectPositionüüñ ´
]üü´ ¨
.üü¨ ≠
indexüü≠ ≤
;üü≤ ≥
int
†† 
length
†† 
=
†† 
m_CaretPosition
†† ,
<
††- .#
m_CaretSelectPosition
††/ D
?
††E F*
stringSelectPositionInternal
††G c
-
††d e
stringPosition
††f t
:
††u v%
stringPositionInternal††w ç
-††é è
stringPosition††ê û
;††û ü
m_SoftKeyboard
°° 
.
°° 
	selection
°° (
=
°°) *
new
°°+ .
RangeInt
°°/ 7
(
°°7 8
stringPosition
°°8 F
,
°°F G
length
°°H N
)
°°N O
;
°°O P
}
¢¢ 
Vector2
•• 
caretPosition
•• !
;
••! "
float
¶¶ 
height
¶¶ 
=
¶¶ 
$num
¶¶ 
;
¶¶ 
if
ßß 
(
ßß #
m_CaretSelectPosition
ßß %
<
ßß& '
textInfo
ßß( 0
.
ßß0 1
characterCount
ßß1 ?
)
ßß? @
{
®® 
caretPosition
©© 
=
©© 
new
©©  #
Vector2
©©$ +
(
©©+ ,
textInfo
©©, 4
.
©©4 5
characterInfo
©©5 B
[
©©B C#
m_CaretSelectPosition
©©C X
]
©©X Y
.
©©Y Z
origin
©©Z `
,
©©` a
textInfo
©©b j
.
©©j k
characterInfo
©©k x
[
©©x y$
m_CaretSelectPosition©©y é
]©©é è
.©©è ê
	descender©©ê ô
)©©ô ö
;©©ö õ
height
™™ 
=
™™ 
textInfo
™™ !
.
™™! "
characterInfo
™™" /
[
™™/ 0#
m_CaretSelectPosition
™™0 E
]
™™E F
.
™™F G
ascender
™™G O
-
™™P Q
textInfo
™™R Z
.
™™Z [
characterInfo
™™[ h
[
™™h i#
m_CaretSelectPosition
™™i ~
]
™™~ 
.™™ Ä
	descender™™Ä â
;™™â ä
}
´´ 
else
¨¨ 
{
≠≠ 
caretPosition
ÆÆ 
=
ÆÆ 
new
ÆÆ  #
Vector2
ÆÆ$ +
(
ÆÆ+ ,
textInfo
ÆÆ, 4
.
ÆÆ4 5
characterInfo
ÆÆ5 B
[
ÆÆB C#
m_CaretSelectPosition
ÆÆC X
-
ÆÆY Z
$num
ÆÆ[ \
]
ÆÆ\ ]
.
ÆÆ] ^
xAdvance
ÆÆ^ f
,
ÆÆf g
textInfo
ÆÆh p
.
ÆÆp q
characterInfo
ÆÆq ~
[
ÆÆ~ $
m_CaretSelectPositionÆÆ î
-ÆÆï ñ
$numÆÆó ò
]ÆÆò ô
.ÆÆô ö
	descenderÆÆö £
)ÆÆ£ §
;ÆÆ§ •
height
ØØ 
=
ØØ 
textInfo
ØØ !
.
ØØ! "
characterInfo
ØØ" /
[
ØØ/ 0#
m_CaretSelectPosition
ØØ0 E
-
ØØF G
$num
ØØH I
]
ØØI J
.
ØØJ K
ascender
ØØK S
-
ØØT U
textInfo
ØØV ^
.
ØØ^ _
characterInfo
ØØ_ l
[
ØØl m$
m_CaretSelectPositionØØm Ç
-ØØÉ Ñ
$numØØÖ Ü
]ØØÜ á
.ØØá à
	descenderØØà ë
;ØØë í
}
∞∞ 3
%AdjustRectTransformRelativeToViewport
¥¥ 1
(
¥¥1 2
caretPosition
¥¥2 ?
,
¥¥? @
height
¥¥A G
,
¥¥G H
true
¥¥I M
)
¥¥M N
;
¥¥N O
int
∂∂ 
	startChar
∂∂ 
=
∂∂ 
Mathf
∂∂ !
.
∂∂! "
Max
∂∂" %
(
∂∂% &
$num
∂∂& '
,
∂∂' (
m_CaretPosition
∂∂) 8
)
∂∂8 9
;
∂∂9 :
int
∑∑ 
endChar
∑∑ 
=
∑∑ 
Mathf
∑∑ 
.
∑∑  
Max
∑∑  #
(
∑∑# $
$num
∑∑$ %
,
∑∑% &#
m_CaretSelectPosition
∑∑' <
)
∑∑< =
;
∑∑= >
if
∫∫ 
(
∫∫ 
	startChar
∫∫ 
>
∫∫ 
endChar
∫∫ #
)
∫∫# $
{
ªª 
int
ºº 
temp
ºº 
=
ºº 
	startChar
ºº $
;
ºº$ %
	startChar
ΩΩ 
=
ΩΩ 
endChar
ΩΩ #
;
ΩΩ# $
endChar
ææ 
=
ææ 
temp
ææ 
;
ææ 
}
øø 
endChar
¡¡ 
-=
¡¡ 
$num
¡¡ 
;
¡¡ 
int
∆∆ 
currentLineIndex
∆∆  
=
∆∆! "
textInfo
∆∆# +
.
∆∆+ ,
characterInfo
∆∆, 9
[
∆∆9 :
	startChar
∆∆: C
]
∆∆C D
.
∆∆D E

lineNumber
∆∆E O
;
∆∆O P
int
«« 
nextLineStartIdx
««  
=
««! "
textInfo
««# +
.
««+ ,
lineInfo
««, 4
[
««4 5
currentLineIndex
««5 E
]
««E F
.
««F G 
lastCharacterIndex
««G Y
;
««Y Z
UIVertex
…… 
vert
…… 
=
…… 
UIVertex
…… $
.
……$ %

simpleVert
……% /
;
……/ 0
vert
   
.
   
uv0
   
=
   
Vector2
   
.
   
zero
   #
;
  # $
vert
ÀÀ 
.
ÀÀ 
color
ÀÀ 
=
ÀÀ 
selectionColor
ÀÀ '
;
ÀÀ' (
int
ÕÕ 
currentChar
ÕÕ 
=
ÕÕ 
	startChar
ÕÕ '
;
ÕÕ' (
while
ŒŒ 
(
ŒŒ 
currentChar
ŒŒ 
<=
ŒŒ !
endChar
ŒŒ" )
&&
ŒŒ* ,
currentChar
ŒŒ- 8
<
ŒŒ9 :
textInfo
ŒŒ; C
.
ŒŒC D
characterCount
ŒŒD R
)
ŒŒR S
{
œœ 
if
–– 
(
–– 
currentChar
–– 
==
––  "
nextLineStartIdx
––# 3
||
––4 6
currentChar
––7 B
==
––C E
endChar
––F M
)
––M N
{
—— 
TMP_CharacterInfo
““ %
startCharInfo
““& 3
=
““4 5
textInfo
““6 >
.
““> ?
characterInfo
““? L
[
““L M
	startChar
““M V
]
““V W
;
““W X
TMP_CharacterInfo
”” %
endCharInfo
””& 1
=
””2 3
textInfo
””4 <
.
””< =
characterInfo
””= J
[
””J K
currentChar
””K V
]
””V W
;
””W X
if
÷÷ 
(
÷÷ 
currentChar
÷÷ #
>
÷÷$ %
$num
÷÷& '
&&
÷÷( *
endCharInfo
÷÷+ 6
.
÷÷6 7
	character
÷÷7 @
==
÷÷A C
$num
÷÷D F
&&
÷÷G I
textInfo
÷÷J R
.
÷÷R S
characterInfo
÷÷S `
[
÷÷` a
currentChar
÷÷a l
-
÷÷m n
$num
÷÷o p
]
÷÷p q
.
÷÷q r
	character
÷÷r {
==
÷÷| ~
$num÷÷ Å
)÷÷Å Ç
endCharInfo
◊◊ #
=
◊◊$ %
textInfo
◊◊& .
.
◊◊. /
characterInfo
◊◊/ <
[
◊◊< =
currentChar
◊◊= H
-
◊◊I J
$num
◊◊K L
]
◊◊L M
;
◊◊M N
Vector2
ŸŸ 
startPosition
ŸŸ )
=
ŸŸ* +
new
ŸŸ, /
Vector2
ŸŸ0 7
(
ŸŸ7 8
startCharInfo
ŸŸ8 E
.
ŸŸE F
origin
ŸŸF L
,
ŸŸL M
textInfo
ŸŸN V
.
ŸŸV W
lineInfo
ŸŸW _
[
ŸŸ_ `
currentLineIndex
ŸŸ` p
]
ŸŸp q
.
ŸŸq r
ascender
ŸŸr z
)
ŸŸz {
;
ŸŸ{ |
Vector2
⁄⁄ 
endPosition
⁄⁄ '
=
⁄⁄( )
new
⁄⁄* -
Vector2
⁄⁄. 5
(
⁄⁄5 6
endCharInfo
⁄⁄6 A
.
⁄⁄A B
xAdvance
⁄⁄B J
,
⁄⁄J K
textInfo
⁄⁄L T
.
⁄⁄T U
lineInfo
⁄⁄U ]
[
⁄⁄] ^
currentLineIndex
⁄⁄^ n
]
⁄⁄n o
.
⁄⁄o p
	descender
⁄⁄p y
)
⁄⁄y z
;
⁄⁄z {
var
‹‹ 

startIndex
‹‹ "
=
‹‹# $
vbo
‹‹% (
.
‹‹( )
currentVertCount
‹‹) 9
;
‹‹9 :
vert
›› 
.
›› 
position
›› !
=
››" #
new
››$ '
Vector3
››( /
(
››/ 0
startPosition
››0 =
.
››= >
x
››> ?
,
››? @
endPosition
››A L
.
››L M
y
››M N
,
››N O
$num
››P T
)
››T U
;
››U V
vbo
ﬁﬁ 
.
ﬁﬁ 
AddVert
ﬁﬁ 
(
ﬁﬁ  
vert
ﬁﬁ  $
)
ﬁﬁ$ %
;
ﬁﬁ% &
vert
‡‡ 
.
‡‡ 
position
‡‡ !
=
‡‡" #
new
‡‡$ '
Vector3
‡‡( /
(
‡‡/ 0
endPosition
‡‡0 ;
.
‡‡; <
x
‡‡< =
,
‡‡= >
endPosition
‡‡? J
.
‡‡J K
y
‡‡K L
,
‡‡L M
$num
‡‡N R
)
‡‡R S
;
‡‡S T
vbo
·· 
.
·· 
AddVert
·· 
(
··  
vert
··  $
)
··$ %
;
··% &
vert
„„ 
.
„„ 
position
„„ !
=
„„" #
new
„„$ '
Vector3
„„( /
(
„„/ 0
endPosition
„„0 ;
.
„„; <
x
„„< =
,
„„= >
startPosition
„„? L
.
„„L M
y
„„M N
,
„„N O
$num
„„P T
)
„„T U
;
„„U V
vbo
‰‰ 
.
‰‰ 
AddVert
‰‰ 
(
‰‰  
vert
‰‰  $
)
‰‰$ %
;
‰‰% &
vert
ÊÊ 
.
ÊÊ 
position
ÊÊ !
=
ÊÊ" #
new
ÊÊ$ '
Vector3
ÊÊ( /
(
ÊÊ/ 0
startPosition
ÊÊ0 =
.
ÊÊ= >
x
ÊÊ> ?
,
ÊÊ? @
startPosition
ÊÊA N
.
ÊÊN O
y
ÊÊO P
,
ÊÊP Q
$num
ÊÊR V
)
ÊÊV W
;
ÊÊW X
vbo
ÁÁ 
.
ÁÁ 
AddVert
ÁÁ 
(
ÁÁ  
vert
ÁÁ  $
)
ÁÁ$ %
;
ÁÁ% &
vbo
ÈÈ 
.
ÈÈ 
AddTriangle
ÈÈ #
(
ÈÈ# $

startIndex
ÈÈ$ .
,
ÈÈ. /

startIndex
ÈÈ0 :
+
ÈÈ; <
$num
ÈÈ= >
,
ÈÈ> ?

startIndex
ÈÈ@ J
+
ÈÈK L
$num
ÈÈM N
)
ÈÈN O
;
ÈÈO P
vbo
ÍÍ 
.
ÍÍ 
AddTriangle
ÍÍ #
(
ÍÍ# $

startIndex
ÍÍ$ .
+
ÍÍ/ 0
$num
ÍÍ1 2
,
ÍÍ2 3

startIndex
ÍÍ4 >
+
ÍÍ? @
$num
ÍÍA B
,
ÍÍB C

startIndex
ÍÍD N
+
ÍÍO P
$num
ÍÍQ R
)
ÍÍR S
;
ÍÍS T
	startChar
ÏÏ 
=
ÏÏ 
currentChar
ÏÏ  +
+
ÏÏ, -
$num
ÏÏ. /
;
ÏÏ/ 0
currentLineIndex
ÌÌ $
++
ÌÌ$ &
;
ÌÌ& '
if
ÔÔ 
(
ÔÔ 
currentLineIndex
ÔÔ (
<
ÔÔ) *
textInfo
ÔÔ+ 3
.
ÔÔ3 4
	lineCount
ÔÔ4 =
)
ÔÔ= >
nextLineStartIdx
 (
=
) *
textInfo
+ 3
.
3 4
lineInfo
4 <
[
< =
currentLineIndex
= M
]
M N
.
N O 
lastCharacterIndex
O a
;
a b
}
ÒÒ 
currentChar
ÚÚ 
++
ÚÚ 
;
ÚÚ 
}
ÛÛ )
m_IsScrollbarUpdateRequired
ˆˆ '
=
ˆˆ( )
true
ˆˆ* .
;
ˆˆ. /
}
˚˚ 	
private
ÑÑ 
void
ÑÑ 3
%AdjustRectTransformRelativeToViewport
ÑÑ :
(
ÑÑ: ;
Vector2
ÑÑ; B
startPosition
ÑÑC P
,
ÑÑP Q
float
ÑÑR W
height
ÑÑX ^
,
ÑÑ^ _
bool
ÑÑ` d
isCharVisible
ÑÑe r
)
ÑÑr s
{
ÖÖ 	
if
àà 
(
àà 
m_TextViewport
àà 
==
àà !
null
àà" &
)
àà& '
return
ââ 
;
ââ 
Vector3
ãã 
localPosition
ãã !
=
ãã" #
	transform
ãã$ -
.
ãã- .
localPosition
ãã. ;
;
ãã; <
Vector3
åå (
textComponentLocalPosition
åå .
=
åå/ 0
m_TextComponent
åå1 @
.
åå@ A
rectTransform
ååA N
.
ååN O
localPosition
ååO \
;
åå\ ]
Vector3
çç '
textViewportLocalPosition
çç -
=
çç. /
m_TextViewport
çç0 >
.
çç> ?
localPosition
çç? L
;
ççL M
Rect
éé 
textViewportRect
éé !
=
éé" #
m_TextViewport
éé$ 2
.
éé2 3
rect
éé3 7
;
éé7 8
Vector2
êê 
caretPosition
êê !
=
êê" #
new
êê$ '
Vector2
êê( /
(
êê/ 0
startPosition
êê0 =
.
êê= >
x
êê> ?
+
êê@ A(
textComponentLocalPosition
êêB \
.
êê\ ]
x
êê] ^
+
êê_ `'
textViewportLocalPosition
êêa z
.
êêz {
x
êê{ |
+
êê} ~
localPositionêê å
.êêå ç
xêêç é
,êêé è
startPositionêêê ù
.êêù û
yêêû ü
+êê† °*
textComponentLocalPositionêê¢ º
.êêº Ω
yêêΩ æ
+êêø ¿)
textViewportLocalPositionêê¡ ⁄
.êê⁄ €
yêê€ ‹
+êê› ﬁ
localPositionêêﬂ Ï
.êêÏ Ì
yêêÌ Ó
)êêÓ Ô
;êêÔ 
Rect
ëë 
viewportWSRect
ëë 
=
ëë  !
new
ëë" %
Rect
ëë& *
(
ëë* +
localPosition
ëë+ 8
.
ëë8 9
x
ëë9 :
+
ëë; <'
textViewportLocalPosition
ëë= V
.
ëëV W
x
ëëW X
+
ëëY Z
textViewportRect
ëë[ k
.
ëëk l
x
ëël m
,
ëëm n
localPosition
ëëo |
.
ëë| }
y
ëë} ~
+ëë Ä)
textViewportLocalPositionëëÅ ö
.ëëö õ
yëëõ ú
+ëëù û 
textViewportRectëëü Ø
.ëëØ ∞
yëë∞ ±
,ëë± ≤ 
textViewportRectëë≥ √
.ëë√ ƒ
widthëëƒ …
,ëë…   
textViewportRectëëÀ €
.ëë€ ‹
heightëë‹ ‚
)ëë‚ „
;ëë„ ‰
float
îî 
rightOffset
îî 
=
îî 
viewportWSRect
îî  .
.
îî. /
xMax
îî/ 3
-
îî4 5
(
îî6 7
caretPosition
îî7 D
.
îîD E
x
îîE F
+
îîG H
m_TextComponent
îîI X
.
îîX Y
margin
îîY _
.
îî_ `
z
îî` a
+
îîb c
m_CaretWidth
îîd p
)
îîp q
;
îîq r
if
ïï 
(
ïï 
rightOffset
ïï 
<
ïï 
$num
ïï  
)
ïï  !
{
ññ 
if
óó 
(
óó 
!
óó 
	multiLine
óó 
||
óó !
(
óó" #
	multiLine
óó# ,
&&
óó- /
isCharVisible
óó0 =
)
óó= >
)
óó> ?
{
òò 
m_TextComponent
öö #
.
öö# $
rectTransform
öö$ 1
.
öö1 2
anchoredPosition
öö2 B
+=
ööC E
new
ööF I
Vector2
ööJ Q
(
ööQ R
rightOffset
ööR ]
,
öö] ^
$num
öö_ `
)
öö` a
;
ööa b'
AssignPositioningIfNeeded
úú -
(
úú- .
)
úú. /
;
úú/ 0
}
ùù 
}
ûû 
float
†† 

leftOffset
†† 
=
†† 
(
††  
caretPosition
††  -
.
††- .
x
††. /
-
††0 1
m_TextComponent
††2 A
.
††A B
margin
††B H
.
††H I
x
††I J
)
††J K
-
††L M
viewportWSRect
††N \
.
††\ ]
xMin
††] a
;
††a b
if
°° 
(
°° 

leftOffset
°° 
<
°° 
$num
°° 
)
°°  
{
¢¢ 
m_TextComponent
§§ 
.
§§  
rectTransform
§§  -
.
§§- .
anchoredPosition
§§. >
+=
§§? A
new
§§B E
Vector2
§§F M
(
§§M N
-
§§N O

leftOffset
§§O Y
,
§§Y Z
$num
§§[ \
)
§§\ ]
;
§§] ^'
AssignPositioningIfNeeded
•• )
(
••) *
)
••* +
;
••+ ,
}
¶¶ 
if
©© 
(
©© 

m_LineType
©© 
!=
©© 
LineType
©© &
.
©©& '

SingleLine
©©' 1
)
©©1 2
{
™™ 
float
´´ 
	topOffset
´´ 
=
´´  !
viewportWSRect
´´" 0
.
´´0 1
yMax
´´1 5
-
´´6 7
(
´´8 9
caretPosition
´´9 F
.
´´F G
y
´´G H
+
´´I J
height
´´K Q
)
´´Q R
;
´´R S
if
¨¨ 
(
¨¨ 
	topOffset
¨¨ 
<
¨¨ 
-
¨¨  !
$num
¨¨! (
)
¨¨( )
{
≠≠ 
m_TextComponent
ØØ #
.
ØØ# $
rectTransform
ØØ$ 1
.
ØØ1 2
anchoredPosition
ØØ2 B
+=
ØØC E
new
ØØF I
Vector2
ØØJ Q
(
ØØQ R
$num
ØØR S
,
ØØS T
	topOffset
ØØU ^
)
ØØ^ _
;
ØØ_ `'
AssignPositioningIfNeeded
∞∞ -
(
∞∞- .
)
∞∞. /
;
∞∞/ 0)
m_IsScrollbarUpdateRequired
±± /
=
±±0 1
true
±±2 6
;
±±6 7
}
≤≤ 
float
¥¥ 
bottomOffset
¥¥ "
=
¥¥# $
caretPosition
¥¥% 2
.
¥¥2 3
y
¥¥3 4
-
¥¥5 6
viewportWSRect
¥¥7 E
.
¥¥E F
yMin
¥¥F J
;
¥¥J K
if
µµ 
(
µµ 
bottomOffset
µµ  
<
µµ! "
$num
µµ# %
)
µµ% &
{
∂∂ 
m_TextComponent
∏∏ #
.
∏∏# $
rectTransform
∏∏$ 1
.
∏∏1 2
anchoredPosition
∏∏2 B
-=
∏∏C E
new
∏∏F I
Vector2
∏∏J Q
(
∏∏Q R
$num
∏∏R S
,
∏∏S T
bottomOffset
∏∏U a
)
∏∏a b
;
∏∏b c'
AssignPositioningIfNeeded
ππ -
(
ππ- .
)
ππ. /
;
ππ/ 0)
m_IsScrollbarUpdateRequired
∫∫ /
=
∫∫0 1
true
∫∫2 6
;
∫∫6 7
}
ªª 
}
ºº 
if
øø 
(
øø "
m_isLastKeyBackspace
øø $
)
øø$ %
{
¿¿ 
float
¡¡ 
anchoredPositionX
¡¡ '
=
¡¡( )
m_TextComponent
¡¡* 9
.
¡¡9 :
rectTransform
¡¡: G
.
¡¡G H
anchoredPosition
¡¡H X
.
¡¡X Y
x
¡¡Y Z
;
¡¡Z [
float
√√ 
firstCharPosition
√√ '
=
√√( )
localPosition
√√* 7
.
√√7 8
x
√√8 9
+
√√: ;'
textViewportLocalPosition
√√< U
.
√√U V
x
√√V W
+
√√X Y(
textComponentLocalPosition
√√Z t
.
√√t u
x
√√u v
+
√√w x
m_TextComponent√√y à
.√√à â
textInfo√√â ë
.√√ë í
characterInfo√√í ü
[√√ü †
$num√√† °
]√√° ¢
.√√¢ £
origin√√£ ©
-√√™ ´
m_TextComponent√√¨ ª
.√√ª º
margin√√º ¬
.√√¬ √
x√√√ ƒ
;√√ƒ ≈
float
ƒƒ 
lastCharPosition
ƒƒ &
=
ƒƒ' (
localPosition
ƒƒ) 6
.
ƒƒ6 7
x
ƒƒ7 8
+
ƒƒ9 :'
textViewportLocalPosition
ƒƒ; T
.
ƒƒT U
x
ƒƒU V
+
ƒƒW X(
textComponentLocalPosition
ƒƒY s
.
ƒƒs t
x
ƒƒt u
+
ƒƒv w
m_TextComponentƒƒx á
.ƒƒá à
textInfoƒƒà ê
.ƒƒê ë
characterInfoƒƒë û
[ƒƒû ü
m_TextComponentƒƒü Æ
.ƒƒÆ Ø
textInfoƒƒØ ∑
.ƒƒ∑ ∏
characterCountƒƒ∏ ∆
-ƒƒ« »
$numƒƒ…  
]ƒƒ  À
.ƒƒÀ Ã
originƒƒÃ “
+ƒƒ” ‘
m_TextComponentƒƒ’ ‰
.ƒƒ‰ Â
marginƒƒÂ Î
.ƒƒÎ Ï
zƒƒÏ Ì
+ƒƒÓ Ô
m_CaretWidthƒƒ ¸
;ƒƒ¸ ˝
if
∆∆ 
(
∆∆ 
anchoredPositionX
∆∆ %
>
∆∆& '
$num
∆∆( /
&&
∆∆0 2
firstCharPosition
∆∆3 D
>
∆∆E F
viewportWSRect
∆∆G U
.
∆∆U V
xMin
∆∆V Z
)
∆∆Z [
{
«« 
float
»» 
offset
»»  
=
»»! "
viewportWSRect
»»# 1
.
»»1 2
xMin
»»2 6
-
»»7 8
firstCharPosition
»»9 J
;
»»J K
if
   
(
   
anchoredPositionX
   )
<
  * +
-
  , -
offset
  - 3
)
  3 4
offset
ÀÀ 
=
ÀÀ  
-
ÀÀ! "
anchoredPositionX
ÀÀ" 3
;
ÀÀ3 4
m_TextComponent
ÕÕ #
.
ÕÕ# $
rectTransform
ÕÕ$ 1
.
ÕÕ1 2
anchoredPosition
ÕÕ2 B
+=
ÕÕC E
new
ÕÕF I
Vector2
ÕÕJ Q
(
ÕÕQ R
offset
ÕÕR X
,
ÕÕX Y
$num
ÕÕZ [
)
ÕÕ[ \
;
ÕÕ\ ]'
AssignPositioningIfNeeded
ŒŒ -
(
ŒŒ- .
)
ŒŒ. /
;
ŒŒ/ 0
}
œœ 
else
–– 
if
–– 
(
–– 
anchoredPositionX
–– *
<
––+ ,
-
––- .
$num
––. 5
&&
––6 8
lastCharPosition
––9 I
<
––J K
viewportWSRect
––L Z
.
––Z [
xMax
––[ _
)
––_ `
{
—— 
float
““ 
offset
““  
=
““! "
viewportWSRect
““# 1
.
““1 2
xMax
““2 6
-
““7 8
lastCharPosition
““9 I
;
““I J
if
‘‘ 
(
‘‘ 
-
‘‘ 
anchoredPositionX
‘‘ *
<
‘‘+ ,
offset
‘‘- 3
)
‘‘3 4
offset
’’ 
=
’’  
-
’’! "
anchoredPositionX
’’" 3
;
’’3 4
m_TextComponent
◊◊ #
.
◊◊# $
rectTransform
◊◊$ 1
.
◊◊1 2
anchoredPosition
◊◊2 B
+=
◊◊C E
new
◊◊F I
Vector2
◊◊J Q
(
◊◊Q R
offset
◊◊R X
,
◊◊X Y
$num
◊◊Z [
)
◊◊[ \
;
◊◊\ ]'
AssignPositioningIfNeeded
ÿÿ -
(
ÿÿ- .
)
ÿÿ. /
;
ÿÿ/ 0
}
ŸŸ "
m_isLastKeyBackspace
€€ $
=
€€% &
false
€€' ,
;
€€, -
}
‹‹ ,
m_forceRectTransformAdjustment
ﬁﬁ *
=
ﬁﬁ+ ,
false
ﬁﬁ- 2
;
ﬁﬁ2 3
}
ﬂﬂ 	
	protected
‰‰ 
char
‰‰ 
Validate
‰‰ 
(
‰‰  
string
‰‰  &
text
‰‰' +
,
‰‰+ ,
int
‰‰- 0
pos
‰‰1 4
,
‰‰4 5
char
‰‰6 :
ch
‰‰; =
)
‰‰= >
{
ÂÂ 	
if
ÁÁ 
(
ÁÁ !
characterValidation
ÁÁ #
==
ÁÁ$ &!
CharacterValidation
ÁÁ' :
.
ÁÁ: ;
None
ÁÁ; ?
||
ÁÁ@ B
!
ÁÁC D
enabled
ÁÁD K
)
ÁÁK L
return
ËË 
ch
ËË 
;
ËË 
if
ÍÍ 
(
ÍÍ !
characterValidation
ÍÍ #
==
ÍÍ$ &!
CharacterValidation
ÍÍ' :
.
ÍÍ: ;
Integer
ÍÍ; B
||
ÍÍC E!
characterValidation
ÍÍF Y
==
ÍÍZ \!
CharacterValidation
ÍÍ] p
.
ÍÍp q
Decimal
ÍÍq x
)
ÍÍx y
{
ÎÎ 
bool
ÌÌ 
cursorBeforeDash
ÌÌ %
=
ÌÌ& '
(
ÌÌ( )
pos
ÌÌ) ,
==
ÌÌ- /
$num
ÌÌ0 1
&&
ÌÌ2 4
text
ÌÌ5 9
.
ÌÌ9 :
Length
ÌÌ: @
>
ÌÌA B
$num
ÌÌC D
&&
ÌÌE G
text
ÌÌH L
[
ÌÌL M
$num
ÌÌM N
]
ÌÌN O
==
ÌÌP R
$char
ÌÌS V
)
ÌÌV W
;
ÌÌW X
bool
ÓÓ 
selectionAtStart
ÓÓ %
=
ÓÓ& '$
stringPositionInternal
ÓÓ( >
==
ÓÓ? A
$num
ÓÓB C
||
ÓÓD F*
stringSelectPositionInternal
ÓÓG c
==
ÓÓd f
$num
ÓÓg h
;
ÓÓh i
if
ÔÔ 
(
ÔÔ 
!
ÔÔ 
cursorBeforeDash
ÔÔ %
)
ÔÔ% &
{
 
if
ÒÒ 
(
ÒÒ 
ch
ÒÒ 
>=
ÒÒ 
$char
ÒÒ !
&&
ÒÒ" $
ch
ÒÒ% '
<=
ÒÒ( *
$char
ÒÒ+ .
)
ÒÒ. /
return
ÒÒ0 6
ch
ÒÒ7 9
;
ÒÒ9 :
if
ÚÚ 
(
ÚÚ 
ch
ÚÚ 
==
ÚÚ 
$char
ÚÚ !
&&
ÚÚ" $
(
ÚÚ% &
pos
ÚÚ& )
==
ÚÚ* ,
$num
ÚÚ- .
||
ÚÚ/ 1
selectionAtStart
ÚÚ2 B
)
ÚÚB C
)
ÚÚC D
return
ÚÚE K
ch
ÚÚL N
;
ÚÚN O
var
ÙÙ 
	separator
ÙÙ !
=
ÙÙ" #
Thread
ÙÙ$ *
.
ÙÙ* +
CurrentThread
ÙÙ+ 8
.
ÙÙ8 9
CurrentCulture
ÙÙ9 G
.
ÙÙG H
NumberFormat
ÙÙH T
.
ÙÙT U$
NumberDecimalSeparator
ÙÙU k
;
ÙÙk l
if
ıı 
(
ıı 
ch
ıı 
==
ıı 
Convert
ıı %
.
ıı% &
ToChar
ıı& ,
(
ıı, -
	separator
ıı- 6
)
ıı6 7
&&
ıı8 :!
characterValidation
ıı; N
==
ııO Q!
CharacterValidation
ııR e
.
ııe f
Decimal
ııf m
&&
ıın p
!
ııq r
text
ıır v
.
ııv w
Contains
ııw 
(ıı Ä
	separatorııÄ â
)ııâ ä
)ııä ã
returnııå í
chııì ï
;ııï ñ
}
ˆˆ 
}
˜˜ 
else
¯¯ 
if
¯¯ 
(
¯¯ !
characterValidation
¯¯ (
==
¯¯) +!
CharacterValidation
¯¯, ?
.
¯¯? @
Digit
¯¯@ E
)
¯¯E F
{
˘˘ 
if
˙˙ 
(
˙˙ 
ch
˙˙ 
>=
˙˙ 
$char
˙˙ 
&&
˙˙  
ch
˙˙! #
<=
˙˙$ &
$char
˙˙' *
)
˙˙* +
return
˙˙, 2
ch
˙˙3 5
;
˙˙5 6
}
˚˚ 
else
¸¸ 
if
¸¸ 
(
¸¸ !
characterValidation
¸¸ (
==
¸¸) +!
CharacterValidation
¸¸, ?
.
¸¸? @
Alphanumeric
¸¸@ L
)
¸¸L M
{
˝˝ 
if
ˇˇ 
(
ˇˇ 
ch
ˇˇ 
>=
ˇˇ 
$char
ˇˇ 
&&
ˇˇ  
ch
ˇˇ! #
<=
ˇˇ$ &
$char
ˇˇ' *
)
ˇˇ* +
return
ˇˇ, 2
ch
ˇˇ3 5
;
ˇˇ5 6
if
ÄÄ 
(
ÄÄ 
ch
ÄÄ 
>=
ÄÄ 
$char
ÄÄ 
&&
ÄÄ  
ch
ÄÄ! #
<=
ÄÄ$ &
$char
ÄÄ' *
)
ÄÄ* +
return
ÄÄ, 2
ch
ÄÄ3 5
;
ÄÄ5 6
if
ÅÅ 
(
ÅÅ 
ch
ÅÅ 
>=
ÅÅ 
$char
ÅÅ 
&&
ÅÅ  
ch
ÅÅ! #
<=
ÅÅ$ &
$char
ÅÅ' *
)
ÅÅ* +
return
ÅÅ, 2
ch
ÅÅ3 5
;
ÅÅ5 6
}
ÇÇ 
else
ÉÉ 
if
ÉÉ 
(
ÉÉ !
characterValidation
ÉÉ (
==
ÉÉ) +!
CharacterValidation
ÉÉ, ?
.
ÉÉ? @
Name
ÉÉ@ D
)
ÉÉD E
{
ÑÑ 
char
ÖÖ 
lastChar
ÖÖ 
=
ÖÖ 
(
ÖÖ  !
text
ÖÖ! %
.
ÖÖ% &
Length
ÖÖ& ,
>
ÖÖ- .
$num
ÖÖ/ 0
)
ÖÖ0 1
?
ÖÖ2 3
text
ÖÖ4 8
[
ÖÖ8 9
Mathf
ÖÖ9 >
.
ÖÖ> ?
Clamp
ÖÖ? D
(
ÖÖD E
pos
ÖÖE H
,
ÖÖH I
$num
ÖÖJ K
,
ÖÖK L
text
ÖÖM Q
.
ÖÖQ R
Length
ÖÖR X
-
ÖÖY Z
$num
ÖÖ[ \
)
ÖÖ\ ]
]
ÖÖ] ^
:
ÖÖ_ `
$char
ÖÖa d
;
ÖÖd e
char
ÜÜ 
nextChar
ÜÜ 
=
ÜÜ 
(
ÜÜ  !
text
ÜÜ! %
.
ÜÜ% &
Length
ÜÜ& ,
>
ÜÜ- .
$num
ÜÜ/ 0
)
ÜÜ0 1
?
ÜÜ2 3
text
ÜÜ4 8
[
ÜÜ8 9
Mathf
ÜÜ9 >
.
ÜÜ> ?
Clamp
ÜÜ? D
(
ÜÜD E
pos
ÜÜE H
+
ÜÜI J
$num
ÜÜK L
,
ÜÜL M
$num
ÜÜN O
,
ÜÜO P
text
ÜÜQ U
.
ÜÜU V
Length
ÜÜV \
-
ÜÜ] ^
$num
ÜÜ_ `
)
ÜÜ` a
]
ÜÜa b
:
ÜÜc d
$char
ÜÜe i
;
ÜÜi j
if
àà 
(
àà 
char
àà 
.
àà 
IsLetter
àà !
(
àà! "
ch
àà" $
)
àà$ %
)
àà% &
{
ââ 
if
ãã 
(
ãã 
char
ãã 
.
ãã 
IsLower
ãã $
(
ãã$ %
ch
ãã% '
)
ãã' (
&&
ãã) +
lastChar
ãã, 4
==
ãã5 7
$char
ãã8 ;
)
ãã; <
return
åå 
char
åå #
.
åå# $
ToUpper
åå$ +
(
åå+ ,
ch
åå, .
)
åå. /
;
åå/ 0
if
èè 
(
èè 
char
èè 
.
èè 
IsUpper
èè $
(
èè$ %
ch
èè% '
)
èè' (
&&
èè) +
lastChar
èè, 4
!=
èè5 7
$char
èè8 ;
&&
èè< >
lastChar
èè? G
!=
èèH J
$char
èèK O
)
èèO P
return
êê 
char
êê #
.
êê# $
ToLower
êê$ +
(
êê+ ,
ch
êê, .
)
êê. /
;
êê/ 0
return
îî 
ch
îî 
;
îî 
}
ïï 
else
ññ 
if
ññ 
(
ññ 
ch
ññ 
==
ññ 
$char
ññ #
)
ññ# $
{
óó 
if
ôô 
(
ôô 
lastChar
ôô  
!=
ôô! #
$char
ôô$ '
&&
ôô( *
lastChar
ôô+ 3
!=
ôô4 6
$char
ôô7 ;
&&
ôô< >
nextChar
ôô? G
!=
ôôH J
$char
ôôK O
&&
ôôP R
!
ôôS T
text
ôôT X
.
ôôX Y
Contains
ôôY a
(
ôôa b
$str
ôôb e
)
ôôe f
)
ôôf g
return
öö 
ch
öö !
;
öö! "
}
õõ 
else
úú 
if
úú 
(
úú 
ch
úú 
==
úú 
$char
úú "
)
úú" #
{
ùù 
if
üü 
(
üü 
lastChar
üü  
!=
üü! #
$char
üü$ '
&&
üü( *
lastChar
üü+ 3
!=
üü4 6
$char
üü7 ;
&&
üü< >
nextChar
üü? G
!=
üüH J
$char
üüK N
&&
üüO Q
nextChar
üüR Z
!=
üü[ ]
$char
üü^ b
)
üüb c
return
†† 
ch
†† !
;
††! "
}
°° 
}
¢¢ 
else
££ 
if
££ 
(
££ !
characterValidation
££ (
==
££) +!
CharacterValidation
££, ?
.
££? @
EmailAddress
££@ L
)
££L M
{
§§ 
if
¨¨ 
(
¨¨ 
ch
¨¨ 
>=
¨¨ 
$char
¨¨ 
&&
¨¨  
ch
¨¨! #
<=
¨¨$ &
$char
¨¨' *
)
¨¨* +
return
¨¨, 2
ch
¨¨3 5
;
¨¨5 6
if
≠≠ 
(
≠≠ 
ch
≠≠ 
>=
≠≠ 
$char
≠≠ 
&&
≠≠  
ch
≠≠! #
<=
≠≠$ &
$char
≠≠' *
)
≠≠* +
return
≠≠, 2
ch
≠≠3 5
;
≠≠5 6
if
ÆÆ 
(
ÆÆ 
ch
ÆÆ 
>=
ÆÆ 
$char
ÆÆ 
&&
ÆÆ  
ch
ÆÆ! #
<=
ÆÆ$ &
$char
ÆÆ' *
)
ÆÆ* +
return
ÆÆ, 2
ch
ÆÆ3 5
;
ÆÆ5 6
if
ØØ 
(
ØØ 
ch
ØØ 
==
ØØ 
$char
ØØ 
&&
ØØ  
text
ØØ! %
.
ØØ% &
IndexOf
ØØ& -
(
ØØ- .
$char
ØØ. 1
)
ØØ1 2
==
ØØ3 5
-
ØØ6 7
$num
ØØ7 8
)
ØØ8 9
return
ØØ: @
ch
ØØA C
;
ØØC D
if
∞∞ 
(
∞∞ %
kEmailSpecialCharacters
∞∞ +
.
∞∞+ ,
IndexOf
∞∞, 3
(
∞∞3 4
ch
∞∞4 6
)
∞∞6 7
!=
∞∞8 :
-
∞∞; <
$num
∞∞< =
)
∞∞= >
return
∞∞? E
ch
∞∞F H
;
∞∞H I
if
±± 
(
±± 
ch
±± 
==
±± 
$char
±± 
)
±± 
{
≤≤ 
char
≥≥ 
lastChar
≥≥ !
=
≥≥" #
(
≥≥$ %
text
≥≥% )
.
≥≥) *
Length
≥≥* 0
>
≥≥1 2
$num
≥≥3 4
)
≥≥4 5
?
≥≥6 7
text
≥≥8 <
[
≥≥< =
Mathf
≥≥= B
.
≥≥B C
Clamp
≥≥C H
(
≥≥H I
pos
≥≥I L
,
≥≥L M
$num
≥≥N O
,
≥≥O P
text
≥≥Q U
.
≥≥U V
Length
≥≥V \
-
≥≥] ^
$num
≥≥_ `
)
≥≥` a
]
≥≥a b
:
≥≥c d
$char
≥≥e h
;
≥≥h i
char
¥¥ 
nextChar
¥¥ !
=
¥¥" #
(
¥¥$ %
text
¥¥% )
.
¥¥) *
Length
¥¥* 0
>
¥¥1 2
$num
¥¥3 4
)
¥¥4 5
?
¥¥6 7
text
¥¥8 <
[
¥¥< =
Mathf
¥¥= B
.
¥¥B C
Clamp
¥¥C H
(
¥¥H I
pos
¥¥I L
+
¥¥M N
$num
¥¥O P
,
¥¥P Q
$num
¥¥R S
,
¥¥S T
text
¥¥U Y
.
¥¥Y Z
Length
¥¥Z `
-
¥¥a b
$num
¥¥c d
)
¥¥d e
]
¥¥e f
:
¥¥g h
$char
¥¥i m
;
¥¥m n
if
µµ 
(
µµ 
lastChar
µµ  
!=
µµ! #
$char
µµ$ '
&&
µµ( *
nextChar
µµ+ 3
!=
µµ4 6
$char
µµ7 :
)
µµ: ;
return
∂∂ 
ch
∂∂ !
;
∂∂! "
}
∑∑ 
}
∏∏ 
else
ππ 
if
ππ 
(
ππ !
characterValidation
ππ (
==
ππ) +!
CharacterValidation
ππ, ?
.
ππ? @
Regex
ππ@ E
)
ππE F
{
∫∫ 
if
ºº 
(
ºº 
Regex
ºº 
.
ºº 
IsMatch
ºº !
(
ºº! "
ch
ºº" $
.
ºº$ %
ToString
ºº% -
(
ºº- .
)
ºº. /
,
ºº/ 0
m_RegexValue
ºº1 =
)
ºº= >
)
ºº> ?
{
ΩΩ 
return
ææ 
ch
ææ 
;
ææ 
}
øø 
}
¿¿ 
else
¡¡ 
if
¡¡ 
(
¡¡ !
characterValidation
¡¡ (
==
¡¡) +!
CharacterValidation
¡¡, ?
.
¡¡? @
CustomValidator
¡¡@ O
)
¡¡O P
{
¬¬ 
if
√√ 
(
√√ 
m_InputValidator
√√ $
!=
√√% '
null
√√( ,
)
√√, -
{
ƒƒ 
char
≈≈ 
c
≈≈ 
=
≈≈ 
m_InputValidator
≈≈ -
.
≈≈- .
Validate
≈≈. 6
(
≈≈6 7
ref
≈≈7 :
text
≈≈; ?
,
≈≈? @
ref
≈≈A D
pos
≈≈E H
,
≈≈H I
ch
≈≈J L
)
≈≈L M
;
≈≈M N
m_Text
∆∆ 
=
∆∆ 
text
∆∆ !
;
∆∆! "*
stringSelectPositionInternal
«« 0
=
««1 2$
stringPositionInternal
««3 I
=
««J K
pos
««L O
;
««O P
return
»» 
c
»» 
;
»» 
}
…… 
}
   
return
ÀÀ 
(
ÀÀ 
char
ÀÀ 
)
ÀÀ 
$num
ÀÀ 
;
ÀÀ 
}
ÃÃ 	
public
ŒŒ 
void
ŒŒ  
ActivateInputField
ŒŒ &
(
ŒŒ& '
)
ŒŒ' (
{
œœ 	
if
–– 
(
–– 
m_TextComponent
–– 
==
––  "
null
––# '
||
––( *
m_TextComponent
––+ :
.
––: ;
font
––; ?
==
––@ B
null
––C G
||
––H J
!
––K L
IsActive
––L T
(
––T U
)
––U V
||
––W Y
!
––Z [
IsInteractable
––[ i
(
––i j
)
––j k
)
––k l
return
—— 
;
—— 
if
”” 
(
”” 
	isFocused
”” 
)
”” 
{
‘‘ 
if
’’ 
(
’’ 
m_SoftKeyboard
’’ "
!=
’’# %
null
’’& *
&&
’’+ -
!
’’. /
m_SoftKeyboard
’’/ =
.
’’= >
active
’’> D
)
’’D E
{
÷÷ 
m_SoftKeyboard
◊◊ "
.
◊◊" #
active
◊◊# )
=
◊◊* +
true
◊◊, 0
;
◊◊0 1
m_SoftKeyboard
ÿÿ "
.
ÿÿ" #
text
ÿÿ# '
=
ÿÿ( )
m_Text
ÿÿ* 0
;
ÿÿ0 1
}
ŸŸ 
}
⁄⁄ (
m_ShouldActivateNextUpdate
‹‹ &
=
‹‹' (
true
‹‹) -
;
‹‹- .
}
›› 	
private
ﬂﬂ 
void
ﬂﬂ (
ActivateInputFieldInternal
ﬂﬂ /
(
ﬂﬂ/ 0
)
ﬂﬂ0 1
{
‡‡ 	
if
·· 
(
·· 
EventSystem
·· 
.
·· 
current
·· #
==
··$ &
null
··' +
)
··+ ,
return
‚‚ 
;
‚‚ 
if
‰‰ 
(
‰‰ 
EventSystem
‰‰ 
.
‰‰ 
current
‰‰ #
.
‰‰# $'
currentSelectedGameObject
‰‰$ =
!=
‰‰> @

gameObject
‰‰A K
)
‰‰K L
EventSystem
ÂÂ 
.
ÂÂ 
current
ÂÂ #
.
ÂÂ# $#
SetSelectedGameObject
ÂÂ$ 9
(
ÂÂ9 :

gameObject
ÂÂ: D
)
ÂÂD E
;
ÂÂE F
if
ÁÁ 
(
ÁÁ !
TouchScreenKeyboard
ÁÁ #
.
ÁÁ# $
isSupported
ÁÁ$ /
&&
ÁÁ0 2$
shouldHideSoftKeyboard
ÁÁ3 I
==
ÁÁJ L
false
ÁÁM R
)
ÁÁR S
{
ËË 
if
ÈÈ 
(
ÈÈ 
inputSystem
ÈÈ 
!=
ÈÈ  "
null
ÈÈ# '
&&
ÈÈ( *
inputSystem
ÈÈ+ 6
.
ÈÈ6 7
touchSupported
ÈÈ7 E
)
ÈÈE F
{
ÍÍ !
TouchScreenKeyboard
ÎÎ '
.
ÎÎ' (
	hideInput
ÎÎ( 1
=
ÎÎ2 3#
shouldHideMobileInput
ÎÎ4 I
;
ÎÎI J
}
ÏÏ 
if
ÓÓ 
(
ÓÓ $
shouldHideSoftKeyboard
ÓÓ *
==
ÓÓ+ -
false
ÓÓ. 3
&&
ÓÓ4 6

m_ReadOnly
ÓÓ7 A
==
ÓÓB D
false
ÓÓE J
)
ÓÓJ K
{
ÔÔ 
m_SoftKeyboard
 "
=
# $
(
% &
	inputType
& /
==
0 2
	InputType
3 <
.
< =
Password
= E
)
E F
?
G H!
TouchScreenKeyboard
ÒÒ +
.
ÒÒ+ ,
Open
ÒÒ, 0
(
ÒÒ0 1
m_Text
ÒÒ1 7
,
ÒÒ7 8
keyboardType
ÒÒ9 E
,
ÒÒE F
false
ÒÒG L
,
ÒÒL M
	multiLine
ÒÒN W
,
ÒÒW X
true
ÒÒY ]
,
ÒÒ] ^
false
ÒÒ_ d
,
ÒÒd e
$str
ÒÒf h
,
ÒÒh i
characterLimit
ÒÒj x
)
ÒÒx y
:
ÒÒz {!
TouchScreenKeyboard
ÚÚ +
.
ÚÚ+ ,
Open
ÚÚ, 0
(
ÚÚ0 1
m_Text
ÚÚ1 7
,
ÚÚ7 8
keyboardType
ÚÚ9 E
,
ÚÚE F
	inputType
ÚÚG P
==
ÚÚQ S
	InputType
ÚÚT ]
.
ÚÚ] ^
AutoCorrect
ÚÚ^ i
,
ÚÚi j
	multiLine
ÚÚk t
,
ÚÚt u
false
ÚÚv {
,
ÚÚ{ |
falseÚÚ} Ç
,ÚÚÇ É
$strÚÚÑ Ü
,ÚÚÜ á
characterLimitÚÚà ñ
)ÚÚñ ó
;ÚÚó ò
OnFocus
ÙÙ 
(
ÙÙ 
)
ÙÙ 
;
ÙÙ 
if
¯¯ 
(
¯¯ 
m_SoftKeyboard
¯¯ &
!=
¯¯' )
null
¯¯* .
)
¯¯. /
{
˘˘ 
int
˙˙ 
length
˙˙ "
=
˙˙# $$
stringPositionInternal
˙˙% ;
<
˙˙< =*
stringSelectPositionInternal
˙˙> Z
?
˙˙[ \*
stringSelectPositionInternal
˙˙] y
-
˙˙z {%
stringPositionInternal˙˙| í
:˙˙ì î&
stringPositionInternal˙˙ï ´
-˙˙¨ ≠,
stringSelectPositionInternal˙˙Æ  
;˙˙  À
m_SoftKeyboard
˚˚ &
.
˚˚& '
	selection
˚˚' 0
=
˚˚1 2
new
˚˚3 6
RangeInt
˚˚7 ?
(
˚˚? @$
stringPositionInternal
˚˚@ V
<
˚˚W X*
stringSelectPositionInternal
˚˚Y u
?
˚˚v w%
stringPositionInternal˚˚x é
:˚˚è ê,
stringSelectPositionInternal˚˚ë ≠
,˚˚≠ Æ
length˚˚Ø µ
)˚˚µ ∂
;˚˚∂ ∑
}
¸¸ 
}
˛˛ 1
#m_TouchKeyboardAllowsInPlaceEditing
ÉÉ 3
=
ÉÉ4 5!
TouchScreenKeyboard
ÉÉ6 I
.
ÉÉI J%
isInPlaceEditingAllowed
ÉÉJ a
;
ÉÉa b
}
ÖÖ 
else
ÜÜ 
{
áá 
if
àà 
(
àà 
!
àà !
TouchScreenKeyboard
àà (
.
àà( )
isSupported
àà) 4
&&
àà5 7

m_ReadOnly
àà8 B
==
ààC E
false
ààF K
&&
ààL N
inputSystem
ààO Z
!=
àà[ ]
null
àà^ b
)
ààb c
inputSystem
ââ 
.
ââ   
imeCompositionMode
ââ  2
=
ââ3 4 
IMECompositionMode
ââ5 G
.
ââG H
On
ââH J
;
ââJ K
OnFocus
ãã 
(
ãã 
)
ãã 
;
ãã 
}
åå 
m_AllowInput
éé 
=
éé 
true
éé 
;
éé  
m_OriginalText
èè 
=
èè 
text
èè !
;
èè! "
m_WasCanceled
êê 
=
êê 
false
êê !
;
êê! "
SetCaretVisible
ëë 
(
ëë 
)
ëë 
;
ëë 
UpdateLabel
íí 
(
íí 
)
íí 
;
íí 
}
ìì 	
public
ïï 
override
ïï 
void
ïï 
OnSelect
ïï %
(
ïï% &
BaseEventData
ïï& 3
	eventData
ïï4 =
)
ïï= >
{
ññ 	
base
ôô 
.
ôô 
OnSelect
ôô 
(
ôô 
	eventData
ôô #
)
ôô# $
;
ôô$ %
SendOnFocus
öö 
(
öö 
)
öö 
;
öö  
ActivateInputField
úú 
(
úú 
)
úú  
;
úú  !
}
ùù 	
public
üü 
virtual
üü 
void
üü 
OnPointerClick
üü *
(
üü* +
PointerEventData
üü+ ;
	eventData
üü< E
)
üüE F
{
†† 	
if
££ 
(
££ 
	eventData
££ 
.
££ 
button
££  
!=
££! #
PointerEventData
££$ 4
.
££4 5
InputButton
££5 @
.
££@ A
Left
££A E
)
££E F
return
§§ 
;
§§  
ActivateInputField
¶¶ 
(
¶¶ 
)
¶¶  
;
¶¶  !
}
ßß 	
public
©© 
void
©© 
OnControlClick
©© "
(
©©" #
)
©©# $
{
™™ 	
}
¨¨ 	
public
ÆÆ 
void
ÆÆ 
ReleaseSelection
ÆÆ $
(
ÆÆ$ %
)
ÆÆ% &
{
ØØ 	$
m_SelectionStillActive
∞∞ "
=
∞∞# $
false
∞∞% *
;
∞∞* + 
m_ReleaseSelection
±± 
=
±±  
false
±±! &
;
±±& '(
m_PreviouslySelectedObject
≤≤ &
=
≤≤' (
null
≤≤) -
;
≤≤- .!
MarkGeometryAsDirty
¥¥ 
(
¥¥  
)
¥¥  !
;
¥¥! "
SendOnEndEdit
∂∂ 
(
∂∂ 
)
∂∂ 
;
∂∂ $
SendOnEndTextSelection
∑∑ "
(
∑∑" #
)
∑∑# $
;
∑∑$ %
}
∏∏ 	
public
∫∫ 
void
∫∫ "
DeactivateInputField
∫∫ (
(
∫∫( )
bool
∫∫) -
clearSelection
∫∫. <
=
∫∫= >
false
∫∫? D
)
∫∫D E
{
ªª 	
if
øø 
(
øø 
!
øø 
m_AllowInput
øø 
)
øø 
return
¿¿ 
;
¿¿ &
m_HasDoneFocusTransition
¬¬ $
=
¬¬% &
false
¬¬' ,
;
¬¬, -
m_AllowInput
√√ 
=
√√ 
false
√√  
;
√√  !
if
≈≈ 
(
≈≈ 
m_Placeholder
≈≈ 
!=
≈≈  
null
≈≈! %
)
≈≈% &
m_Placeholder
∆∆ 
.
∆∆ 
enabled
∆∆ %
=
∆∆& '
string
∆∆( .
.
∆∆. /
IsNullOrEmpty
∆∆/ <
(
∆∆< =
m_Text
∆∆= C
)
∆∆C D
;
∆∆D E
if
»» 
(
»» 
m_TextComponent
»» 
!=
»»  "
null
»»# '
&&
»»( *
IsInteractable
»»+ 9
(
»»9 :
)
»»: ;
)
»»; <
{
…… 
if
   
(
   
m_WasCanceled
   !
&&
  " $+
m_RestoreOriginalTextOnEscape
  % B
)
  B C
text
ÀÀ 
=
ÀÀ 
m_OriginalText
ÀÀ )
;
ÀÀ) *
if
ÕÕ 
(
ÕÕ 
m_SoftKeyboard
ÕÕ "
!=
ÕÕ# %
null
ÕÕ& *
)
ÕÕ* +
{
ŒŒ 
m_SoftKeyboard
œœ "
.
œœ" #
active
œœ# )
=
œœ* +
false
œœ, 1
;
œœ1 2
m_SoftKeyboard
–– "
=
––# $
null
––% )
;
––) *
}
—— $
m_SelectionStillActive
”” &
=
””' (
true
””) -
;
””- .
if
’’ 
(
’’ #
m_ResetOnDeActivation
’’ )
||
’’* , 
m_ReleaseSelection
’’- ?
)
’’? @
{
÷÷ 
if
€€ 
(
€€ !
m_VerticalScrollbar
€€ +
==
€€, .
null
€€/ 3
)
€€3 4
ReleaseSelection
‹‹ (
(
‹‹( )
)
‹‹) *
;
‹‹* +
}
›› 
if
ﬂﬂ 
(
ﬂﬂ 
inputSystem
ﬂﬂ 
!=
ﬂﬂ  "
null
ﬂﬂ# '
)
ﬂﬂ' (
inputSystem
‡‡ 
.
‡‡   
imeCompositionMode
‡‡  2
=
‡‡3 4 
IMECompositionMode
‡‡5 G
.
‡‡G H
Auto
‡‡H L
;
‡‡L M
}
·· !
MarkGeometryAsDirty
„„ 
(
„„  
)
„„  !
;
„„! ")
m_IsScrollbarUpdateRequired
ÊÊ '
=
ÊÊ( )
true
ÊÊ* .
;
ÊÊ. /
}
ÁÁ 	
public
ÈÈ 
override
ÈÈ 
void
ÈÈ 

OnDeselect
ÈÈ '
(
ÈÈ' (
BaseEventData
ÈÈ( 5
	eventData
ÈÈ6 ?
)
ÈÈ? @
{
ÍÍ 	"
DeactivateInputField
ÎÎ  
(
ÎÎ  !
)
ÎÎ! "
;
ÎÎ" #
base
ÌÌ 
.
ÌÌ 

OnDeselect
ÌÌ 
(
ÌÌ 
	eventData
ÌÌ %
)
ÌÌ% &
;
ÌÌ& '
SendOnFocusLost
ÓÓ 
(
ÓÓ 
)
ÓÓ 
;
ÓÓ 
}
ÔÔ 	
public
ÒÒ 
virtual
ÒÒ 
void
ÒÒ 
OnSubmit
ÒÒ $
(
ÒÒ$ %
BaseEventData
ÒÒ% 2
	eventData
ÒÒ3 <
)
ÒÒ< =
{
ÚÚ 	
if
ıı 
(
ıı 
!
ıı 
IsActive
ıı 
(
ıı 
)
ıı 
||
ıı 
!
ıı  
IsInteractable
ıı  .
(
ıı. /
)
ıı/ 0
)
ıı0 1
return
ˆˆ 
;
ˆˆ 
if
¯¯ 
(
¯¯ 
!
¯¯ 
	isFocused
¯¯ 
)
¯¯ (
m_ShouldActivateNextUpdate
˘˘ *
=
˘˘+ ,
true
˘˘- 1
;
˘˘1 2
SendOnSubmit
˚˚ 
(
˚˚ 
)
˚˚ 
;
˚˚ 
}
¸¸ 	
private
Ñ Ñ  
void
Ñ Ñ   
EnforceContentType
Ñ Ñ  '
(
Ñ Ñ ' (
)
Ñ Ñ ( )
{
Ö Ö  	
switch
Ü Ü  
(
Ü Ü  
contentType
Ü Ü  
)
Ü Ü   
{
á á  
case
à à  
ContentType
à à   
.
à à   !
Standard
à à ! )
:
à à ) *
{
â â  
m_InputType
ã ã  #
=
ã ã $ %
	InputType
ã ã & /
.
ã ã / 0
Standard
ã ã 0 8
;
ã ã 8 9
m_KeyboardType
å å  &
=
å å ' (%
TouchScreenKeyboardType
å å ) @
.
å å @ A
Default
å å A H
;
å å H I#
m_CharacterValidation
ç ç  -
=
ç ç . /!
CharacterValidation
ç ç 0 C
.
ç ç C D
None
ç ç D H
;
ç ç H I
break
é é  
;
é é  
}
è è  
case
ê ê  
ContentType
ê ê   
.
ê ê   !
Autocorrected
ê ê ! .
:
ê ê . /
{
ë ë  
m_InputType
ì ì  #
=
ì ì $ %
	InputType
ì ì & /
.
ì ì / 0
AutoCorrect
ì ì 0 ;
;
ì ì ; <
m_KeyboardType
î î  &
=
î î ' (%
TouchScreenKeyboardType
î î ) @
.
î î @ A
Default
î î A H
;
î î H I#
m_CharacterValidation
ï ï  -
=
ï ï . /!
CharacterValidation
ï ï 0 C
.
ï ï C D
None
ï ï D H
;
ï ï H I
break
ñ ñ  
;
ñ ñ  
}
ó ó  
case
ò ò  
ContentType
ò ò   
.
ò ò   !
IntegerNumber
ò ò ! .
:
ò ò . /
{
ô ô  

m_LineType
ö ö  "
=
ö ö # $
LineType
ö ö % -
.
ö ö - .

SingleLine
ö ö . 8
;
ö ö 8 9
m_InputType
õ õ  #
=
õ õ $ %
	InputType
õ õ & /
.
õ õ / 0
Standard
õ õ 0 8
;
õ õ 8 9
m_KeyboardType
ú ú  &
=
ú ú ' (%
TouchScreenKeyboardType
ú ú ) @
.
ú ú @ A
	NumberPad
ú ú A J
;
ú ú J K#
m_CharacterValidation
ù ù  -
=
ù ù . /!
CharacterValidation
ù ù 0 C
.
ù ù C D
Integer
ù ù D K
;
ù ù K L
break
û û  
;
û û  
}
ü ü  
case
† †  
ContentType
† †   
.
† †   !
DecimalNumber
† † ! .
:
† † . /
{
° °  

m_LineType
¢ ¢  "
=
¢ ¢ # $
LineType
¢ ¢ % -
.
¢ ¢ - .

SingleLine
¢ ¢ . 8
;
¢ ¢ 8 9
m_InputType
£ £  #
=
£ £ $ %
	InputType
£ £ & /
.
£ £ / 0
Standard
£ £ 0 8
;
£ £ 8 9
m_KeyboardType
§ §  &
=
§ § ' (%
TouchScreenKeyboardType
§ § ) @
.
§ § @ A#
NumbersAndPunctuation
§ § A V
;
§ § V W#
m_CharacterValidation
• •  -
=
• • . /!
CharacterValidation
• • 0 C
.
• • C D
Decimal
• • D K
;
• • K L
break
¶ ¶  
;
¶ ¶  
}
ß ß  
case
® ®  
ContentType
® ®   
.
® ®   !
Alphanumeric
® ® ! -
:
® ® - .
{
© ©  

m_LineType
™ ™  "
=
™ ™ # $
LineType
™ ™ % -
.
™ ™ - .

SingleLine
™ ™ . 8
;
™ ™ 8 9
m_InputType
´ ´  #
=
´ ´ $ %
	InputType
´ ´ & /
.
´ ´ / 0
Standard
´ ´ 0 8
;
´ ´ 8 9
m_KeyboardType
¨ ¨  &
=
¨ ¨ ' (%
TouchScreenKeyboardType
¨ ¨ ) @
.
¨ ¨ @ A
ASCIICapable
¨ ¨ A M
;
¨ ¨ M N#
m_CharacterValidation
≠ ≠  -
=
≠ ≠ . /!
CharacterValidation
≠ ≠ 0 C
.
≠ ≠ C D
Alphanumeric
≠ ≠ D P
;
≠ ≠ P Q
break
Æ Æ  
;
Æ Æ  
}
Ø Ø  
case
∞ ∞  
ContentType
∞ ∞   
.
∞ ∞   !
Name
∞ ∞ ! %
:
∞ ∞ % &
{
± ±  

m_LineType
≤ ≤  "
=
≤ ≤ # $
LineType
≤ ≤ % -
.
≤ ≤ - .

SingleLine
≤ ≤ . 8
;
≤ ≤ 8 9
m_InputType
≥ ≥  #
=
≥ ≥ $ %
	InputType
≥ ≥ & /
.
≥ ≥ / 0
Standard
≥ ≥ 0 8
;
≥ ≥ 8 9
m_KeyboardType
¥ ¥  &
=
¥ ¥ ' (%
TouchScreenKeyboardType
¥ ¥ ) @
.
¥ ¥ @ A
Default
¥ ¥ A H
;
¥ ¥ H I#
m_CharacterValidation
µ µ  -
=
µ µ . /!
CharacterValidation
µ µ 0 C
.
µ µ C D
Name
µ µ D H
;
µ µ H I
break
∂ ∂  
;
∂ ∂  
}
∑ ∑  
case
∏ ∏  
ContentType
∏ ∏   
.
∏ ∏   !
EmailAddress
∏ ∏ ! -
:
∏ ∏ - .
{
π π  

m_LineType
∫ ∫  "
=
∫ ∫ # $
LineType
∫ ∫ % -
.
∫ ∫ - .

SingleLine
∫ ∫ . 8
;
∫ ∫ 8 9
m_InputType
ª ª  #
=
ª ª $ %
	InputType
ª ª & /
.
ª ª / 0
Standard
ª ª 0 8
;
ª ª 8 9
m_KeyboardType
º º  &
=
º º ' (%
TouchScreenKeyboardType
º º ) @
.
º º @ A
EmailAddress
º º A M
;
º º M N#
m_CharacterValidation
Ω Ω  -
=
Ω Ω . /!
CharacterValidation
Ω Ω 0 C
.
Ω Ω C D
EmailAddress
Ω Ω D P
;
Ω Ω P Q
break
æ æ  
;
æ æ  
}
ø ø  
case
¿ ¿  
ContentType
¿ ¿   
.
¿ ¿   !
Password
¿ ¿ ! )
:
¿ ¿ ) *
{
¡ ¡  

m_LineType
¬ ¬  "
=
¬ ¬ # $
LineType
¬ ¬ % -
.
¬ ¬ - .

SingleLine
¬ ¬ . 8
;
¬ ¬ 8 9
m_InputType
√ √  #
=
√ √ $ %
	InputType
√ √ & /
.
√ √ / 0
Password
√ √ 0 8
;
√ √ 8 9
m_KeyboardType
ƒ ƒ  &
=
ƒ ƒ ' (%
TouchScreenKeyboardType
ƒ ƒ ) @
.
ƒ ƒ @ A
Default
ƒ ƒ A H
;
ƒ ƒ H I#
m_CharacterValidation
≈ ≈  -
=
≈ ≈ . /!
CharacterValidation
≈ ≈ 0 C
.
≈ ≈ C D
None
≈ ≈ D H
;
≈ ≈ H I
break
∆ ∆  
;
∆ ∆  
}
« «  
case
» »  
ContentType
» »   
.
» »   !
Pin
» » ! $
:
» » $ %
{
… …  

m_LineType
     "
=
    # $
LineType
    % -
.
    - .

SingleLine
    . 8
;
    8 9
m_InputType
À À  #
=
À À $ %
	InputType
À À & /
.
À À / 0
Password
À À 0 8
;
À À 8 9
m_KeyboardType
Ã Ã  &
=
Ã Ã ' (%
TouchScreenKeyboardType
Ã Ã ) @
.
Ã Ã @ A
	NumberPad
Ã Ã A J
;
Ã Ã J K#
m_CharacterValidation
Õ Õ  -
=
Õ Õ . /!
CharacterValidation
Õ Õ 0 C
.
Õ Õ C D
Digit
Õ Õ D I
;
Õ Õ I J
break
Œ Œ  
;
Œ Œ  
}
œ œ  
default
– –  
:
– –  
{
— —  
break
” ”  
;
” ”  
}
‘ ‘  
}
’ ’  &
SetTextComponentWrapMode
◊ ◊  $
(
◊ ◊ $ %
)
◊ ◊ % &
;
◊ ◊ & '
}
ÿ ÿ  	
void
⁄ ⁄  &
SetTextComponentWrapMode
⁄ ⁄  %
(
⁄ ⁄ % &
)
⁄ ⁄ & '
{
€ €  	
if
‹ ‹  
(
‹ ‹  
m_TextComponent
‹ ‹  
==
‹ ‹   "
null
‹ ‹ # '
)
‹ ‹ ' (
return
› ›  
;
› ›  
if
ﬂ ﬂ  
(
ﬂ ﬂ  
	multiLine
ﬂ ﬂ  
)
ﬂ ﬂ  
m_TextComponent
‡ ‡  
.
‡ ‡    
enableWordWrapping
‡ ‡   2
=
‡ ‡ 3 4
true
‡ ‡ 5 9
;
‡ ‡ 9 :
else
· ·  
m_TextComponent
‚ ‚  
.
‚ ‚    
enableWordWrapping
‚ ‚   2
=
‚ ‚ 3 4
false
‚ ‚ 5 :
;
‚ ‚ : ;
}
„ „  	
void
Ê Ê  *
SetTextComponentRichTextMode
Ê Ê  )
(
Ê Ê ) *
)
Ê Ê * +
{
Á Á  	
if
Ë Ë  
(
Ë Ë  
m_TextComponent
Ë Ë  
==
Ë Ë   "
null
Ë Ë # '
)
Ë Ë ' (
return
È È  
;
È È  
m_TextComponent
Î Î  
.
Î Î  
richText
Î Î  $
=
Î Î % &

m_RichText
Î Î ' 1
;
Î Î 1 2
}
Ï Ï  	
void
Ó Ó  +
SetToCustomIfContentTypeIsNot
Ó Ó  *
(
Ó Ó * +
params
Ó Ó + 1
ContentType
Ó Ó 2 =
[
Ó Ó = >
]
Ó Ó > ?!
allowedContentTypes
Ó Ó @ S
)
Ó Ó S T
{
Ô Ô  	
if
   
(
   
contentType
   
==
   
ContentType
   *
.
  * +
Custom
  + 1
)
  1 2
return
Ò Ò  
;
Ò Ò  
for
Û Û  
(
Û Û  
int
Û Û  
i
Û Û  
=
Û Û  
$num
Û Û  
;
Û Û  
i
Û Û  
<
Û Û  !
allowedContentTypes
Û Û   3
.
Û Û 3 4
Length
Û Û 4 :
;
Û Û : ;
i
Û Û < =
++
Û Û = ?
)
Û Û ? @
if
Ù Ù  
(
Ù Ù  
contentType
Ù Ù  
==
Ù Ù   "!
allowedContentTypes
Ù Ù # 6
[
Ù Ù 6 7
i
Ù Ù 7 8
]
Ù Ù 8 9
)
Ù Ù 9 :
return
ı ı  
;
ı ı  
contentType
˜ ˜  
=
˜ ˜  
ContentType
˜ ˜  %
.
˜ ˜ % &
Custom
˜ ˜ & ,
;
˜ ˜ , -
}
¯ ¯  	
void
˙ ˙  
SetToCustom
˙ ˙  
(
˙ ˙  
)
˙ ˙  
{
˚ ˚  	
if
¸ ¸  
(
¸ ¸  
contentType
¸ ¸  
==
¸ ¸  
ContentType
¸ ¸  *
.
¸ ¸ * +
Custom
¸ ¸ + 1
)
¸ ¸ 1 2
return
˝ ˝  
;
˝ ˝  
contentType
ˇ ˇ  
=
ˇ ˇ  
ContentType
ˇ ˇ  %
.
ˇ ˇ % &
Custom
ˇ ˇ & ,
;
ˇ ˇ , -
}
Ä!Ä! 	
void
Ç!Ç! 
SetToCustom
Ç!Ç! 
(
Ç!Ç! !
CharacterValidation
Ç!Ç! ,!
characterValidation
Ç!Ç!- @
)
Ç!Ç!@ A
{
É!É! 	
if
Ñ!Ñ! 
(
Ñ!Ñ! 
contentType
Ñ!Ñ! 
==
Ñ!Ñ! 
ContentType
Ñ!Ñ! *
.
Ñ!Ñ!* +
Custom
Ñ!Ñ!+ 1
)
Ñ!Ñ!1 2
{
Ö!Ö! !
characterValidation
Ü!Ü! #
=
Ü!Ü!$ %!
CharacterValidation
Ü!Ü!& 9
.
Ü!Ü!9 :
CustomValidator
Ü!Ü!: I
;
Ü!Ü!I J
return
á!á! 
;
á!á! 
}
à!à! 
contentType
ä!ä! 
=
ä!ä! 
ContentType
ä!ä! %
.
ä!ä!% &
Custom
ä!ä!& ,
;
ä!ä!, -!
characterValidation
ã!ã! 
=
ã!ã!  !!
CharacterValidation
ã!ã!" 5
.
ã!ã!5 6
CustomValidator
ã!ã!6 E
;
ã!ã!E F
}
å!å! 	
	protected
è!è! 
override
è!è! 
void
è!è! 
DoStateTransition
è!è!  1
(
è!è!1 2
SelectionState
è!è!2 @
state
è!è!A F
,
è!è!F G
bool
è!è!H L
instant
è!è!M T
)
è!è!T U
{
ê!ê! 	
if
ë!ë! 
(
ë!ë! &
m_HasDoneFocusTransition
ë!ë! (
)
ë!ë!( )
state
í!í! 
=
í!í! 
SelectionState
í!í! &
.
í!í!& '
Selected
í!í!' /
;
í!í!/ 0
else
ì!ì! 
if
ì!ì! 
(
ì!ì! 
state
ì!ì! 
==
ì!ì! 
SelectionState
ì!ì! ,
.
ì!ì!, -
Pressed
ì!ì!- 4
)
ì!ì!4 5&
m_HasDoneFocusTransition
î!î! (
=
î!î!) *
true
î!î!+ /
;
î!î!/ 0
base
ñ!ñ! 
.
ñ!ñ! 
DoStateTransition
ñ!ñ! "
(
ñ!ñ!" #
state
ñ!ñ!# (
,
ñ!ñ!( )
instant
ñ!ñ!* 1
)
ñ!ñ!1 2
;
ñ!ñ!2 3
}
ó!ó! 	
public
ù!ù! 
virtual
ù!ù! 
void
ù!ù! ,
CalculateLayoutInputHorizontal
ù!ù! :
(
ù!ù!: ;
)
ù!ù!; <
{
û!û! 	
}
û!û!
 
public
£!£! 
virtual
£!£! 
void
£!£! *
CalculateLayoutInputVertical
£!£! 8
(
£!£!8 9
)
£!£!9 :
{
§!§! 	
}
§!§!
 
public
©!©! 
virtual
©!©! 
float
©!©! 
minWidth
©!©! %
{
©!©!& '
get
©!©!( +
{
©!©!, -
return
©!©!. 4
$num
©!©!5 6
;
©!©!6 7
}
©!©!8 9
}
©!©!: ;
public
Æ!Æ! 
virtual
Æ!Æ! 
float
Æ!Æ! 
preferredWidth
Æ!Æ! +
{
Ø!Ø! 	
get
∞!∞! 
{
±!±! 
if
≤!≤! 
(
≤!≤! 
textComponent
≤!≤! !
==
≤!≤!" $
null
≤!≤!% )
)
≤!≤!) *
return
≥!≥! 
$num
≥!≥! 
;
≥!≥! 
float
µ!µ! 
horizontalPadding
µ!µ! '
=
µ!µ!( )
$num
µ!µ!* +
;
µ!µ!+ ,
if
∑!∑! 
(
∑!∑! 
m_LayoutGroup
∑!∑! !
!=
∑!∑!" $
null
∑!∑!% )
)
∑!∑!) *
horizontalPadding
∏!∏! %
=
∏!∏!& '
m_LayoutGroup
∏!∏!( 5
.
∏!∏!5 6
padding
∏!∏!6 =
.
∏!∏!= >

horizontal
∏!∏!> H
;
∏!∏!H I
if
∫!∫! 
(
∫!∫! 
m_TextViewport
∫!∫! "
!=
∫!∫!# %
null
∫!∫!& *
)
∫!∫!* +
horizontalPadding
ª!ª! %
+=
ª!ª!& (
m_TextViewport
ª!ª!) 7
.
ª!ª!7 8
	offsetMin
ª!ª!8 A
.
ª!ª!A B
x
ª!ª!B C
-
ª!ª!D E
m_TextViewport
ª!ª!F T
.
ª!ª!T U
	offsetMax
ª!ª!U ^
.
ª!ª!^ _
x
ª!ª!_ `
;
ª!ª!` a
return
Ω!Ω! 
m_TextComponent
Ω!Ω! &
.
Ω!Ω!& '
preferredWidth
Ω!Ω!' 5
+
Ω!Ω!6 7
horizontalPadding
Ω!Ω!8 I
;
Ω!Ω!I J
}
æ!æ! 
}
ø!ø! 	
public
ƒ!ƒ! 
virtual
ƒ!ƒ! 
float
ƒ!ƒ! 
flexibleWidth
ƒ!ƒ! *
{
ƒ!ƒ!+ ,
get
ƒ!ƒ!- 0
{
ƒ!ƒ!1 2
return
ƒ!ƒ!3 9
-
ƒ!ƒ!: ;
$num
ƒ!ƒ!; <
;
ƒ!ƒ!< =
}
ƒ!ƒ!> ?
}
ƒ!ƒ!@ A
public
…!…! 
virtual
…!…! 
float
…!…! 
	minHeight
…!…! &
{
…!…!' (
get
…!…!) ,
{
…!…!- .
return
…!…!/ 5
$num
…!…!6 7
;
…!…!7 8
}
…!…!9 :
}
…!…!; <
public
Œ!Œ! 
virtual
Œ!Œ! 
float
Œ!Œ! 
preferredHeight
Œ!Œ! ,
{
œ!œ! 	
get
–!–! 
{
—!—! 
if
“!“! 
(
“!“! 
textComponent
“!“! !
==
“!“!" $
null
“!“!% )
)
“!“!) *
return
”!”! 
$num
”!”! 
;
”!”! 
float
’!’! 
verticalPadding
’!’! %
=
’!’!& '
$num
’!’!( )
;
’!’!) *
if
◊!◊! 
(
◊!◊! 
m_LayoutGroup
◊!◊! !
!=
◊!◊!" $
null
◊!◊!% )
)
◊!◊!) *
verticalPadding
ÿ!ÿ! #
=
ÿ!ÿ!$ %
m_LayoutGroup
ÿ!ÿ!& 3
.
ÿ!ÿ!3 4
padding
ÿ!ÿ!4 ;
.
ÿ!ÿ!; <
vertical
ÿ!ÿ!< D
;
ÿ!ÿ!D E
if
⁄!⁄! 
(
⁄!⁄! 
m_TextViewport
⁄!⁄! "
!=
⁄!⁄!# %
null
⁄!⁄!& *
)
⁄!⁄!* +
verticalPadding
€!€! #
+=
€!€!$ &
m_TextViewport
€!€!' 5
.
€!€!5 6
	offsetMin
€!€!6 ?
.
€!€!? @
y
€!€!@ A
-
€!€!B C
m_TextViewport
€!€!D R
.
€!€!R S
	offsetMax
€!€!S \
.
€!€!\ ]
y
€!€!] ^
;
€!€!^ _
return
›!›! 
m_TextComponent
›!›! &
.
›!›!& '
preferredHeight
›!›!' 6
+
›!›!7 8
verticalPadding
›!›!9 H
;
›!›!H I
}
ﬁ!ﬁ! 
}
ﬂ!ﬂ! 	
public
‰!‰! 
virtual
‰!‰! 
float
‰!‰! 
flexibleHeight
‰!‰! +
{
‰!‰!, -
get
‰!‰!. 1
{
‰!‰!2 3
return
‰!‰!4 :
-
‰!‰!; <
$num
‰!‰!< =
;
‰!‰!= >
}
‰!‰!? @
}
‰!‰!A B
public
È!È! 
virtual
È!È! 
int
È!È! 
layoutPriority
È!È! )
{
È!È!* +
get
È!È!, /
{
È!È!0 1
return
È!È!2 8
$num
È!È!9 :
;
È!È!: ;
}
È!È!< =
}
È!È!> ?
public
!! 
void
!!  
SetGlobalPointSize
!! &
(
!!& '
float
!!' ,
	pointSize
!!- 6
)
!!6 7
{
Ò!Ò! 	
TMP_Text
Ú!Ú! &
placeholderTextComponent
Ú!Ú! -
=
Ú!Ú!. /
m_Placeholder
Ú!Ú!0 =
as
Ú!Ú!> @
TMP_Text
Ú!Ú!A I
;
Ú!Ú!I J
if
Ù!Ù! 
(
Ù!Ù! &
placeholderTextComponent
Ù!Ù! (
!=
Ù!Ù!) +
null
Ù!Ù!, 0
)
Ù!Ù!0 1&
placeholderTextComponent
Ù!Ù!2 J
.
Ù!Ù!J K
fontSize
Ù!Ù!K S
=
Ù!Ù!T U
	pointSize
Ù!Ù!V _
;
Ù!Ù!_ `
textComponent
ı!ı! 
.
ı!ı! 
fontSize
ı!ı! "
=
ı!ı!# $
	pointSize
ı!ı!% .
;
ı!ı!. /
}
ˆ!ˆ! 	
public
¸!¸! 
void
¸!¸!  
SetGlobalFontAsset
¸!¸! &
(
¸!¸!& '
TMP_FontAsset
¸!¸!' 4
	fontAsset
¸!¸!5 >
)
¸!¸!> ?
{
˝!˝! 	
TMP_Text
˛!˛! &
placeholderTextComponent
˛!˛! -
=
˛!˛!. /
m_Placeholder
˛!˛!0 =
as
˛!˛!> @
TMP_Text
˛!˛!A I
;
˛!˛!I J
if
Ä"Ä" 
(
Ä"Ä" &
placeholderTextComponent
Ä"Ä" (
!=
Ä"Ä") +
null
Ä"Ä", 0
)
Ä"Ä"0 1&
placeholderTextComponent
Ä"Ä"2 J
.
Ä"Ä"J K
font
Ä"Ä"K O
=
Ä"Ä"P Q
	fontAsset
Ä"Ä"R [
;
Ä"Ä"[ \
textComponent
Å"Å" 
.
Å"Å" 
font
Å"Å" 
=
Å"Å"  
	fontAsset
Å"Å"! *
;
Å"Å"* +
}
É"É" 	
}
Ö"Ö" 
static
à"à" 

class
à"à"  
SetPropertyUtility
à"à" #
{
â"â" 
public
ä"ä" 
static
ä"ä" 
bool
ä"ä" 
SetColor
ä"ä" #
(
ä"ä"# $
ref
ä"ä"$ '
Color
ä"ä"( -
currentValue
ä"ä". :
,
ä"ä": ;
Color
ä"ä"< A
newValue
ä"ä"B J
)
ä"ä"J K
{
ã"ã" 	
if
å"å" 
(
å"å" 
currentValue
å"å" 
.
å"å" 
r
å"å" 
==
å"å" !
newValue
å"å"" *
.
å"å"* +
r
å"å"+ ,
&&
å"å"- /
currentValue
å"å"0 <
.
å"å"< =
g
å"å"= >
==
å"å"? A
newValue
å"å"B J
.
å"å"J K
g
å"å"K L
&&
å"å"M O
currentValue
å"å"P \
.
å"å"\ ]
b
å"å"] ^
==
å"å"_ a
newValue
å"å"b j
.
å"å"j k
b
å"å"k l
&&
å"å"m o
currentValue
å"å"p |
.
å"å"| }
a
å"å"} ~
==å"å" Å
newValueå"å"Ç ä
.å"å"ä ã
aå"å"ã å
)å"å"å ç
return
ç"ç" 
false
ç"ç" 
;
ç"ç" 
currentValue
è"è" 
=
è"è" 
newValue
è"è" #
;
è"è"# $
return
ê"ê" 
true
ê"ê" 
;
ê"ê" 
}
ë"ë" 	
public
ì"ì" 
static
ì"ì" 
bool
ì"ì"  
SetEquatableStruct
ì"ì" -
<
ì"ì"- .
T
ì"ì". /
>
ì"ì"/ 0
(
ì"ì"0 1
ref
ì"ì"1 4
T
ì"ì"5 6
currentValue
ì"ì"7 C
,
ì"ì"C D
T
ì"ì"E F
newValue
ì"ì"G O
)
ì"ì"O P
where
ì"ì"Q V
T
ì"ì"W X
:
ì"ì"Y Z

IEquatable
ì"ì"[ e
<
ì"ì"e f
T
ì"ì"f g
>
ì"ì"g h
{
î"î" 	
if
ï"ï" 
(
ï"ï" 
currentValue
ï"ï" 
.
ï"ï" 
Equals
ï"ï" #
(
ï"ï"# $
newValue
ï"ï"$ ,
)
ï"ï", -
)
ï"ï"- .
return
ñ"ñ" 
false
ñ"ñ" 
;
ñ"ñ" 
currentValue
ò"ò" 
=
ò"ò" 
newValue
ò"ò" #
;
ò"ò"# $
return
ô"ô" 
true
ô"ô" 
;
ô"ô" 
}
ö"ö" 	
public
ú"ú" 
static
ú"ú" 
bool
ú"ú" 
	SetStruct
ú"ú" $
<
ú"ú"$ %
T
ú"ú"% &
>
ú"ú"& '
(
ú"ú"' (
ref
ú"ú"( +
T
ú"ú", -
currentValue
ú"ú". :
,
ú"ú": ;
T
ú"ú"< =
newValue
ú"ú"> F
)
ú"ú"F G
where
ú"ú"H M
T
ú"ú"N O
:
ú"ú"P Q
struct
ú"ú"R X
{
ù"ù" 	
if
û"û" 
(
û"û" 
currentValue
û"û" 
.
û"û" 
Equals
û"û" #
(
û"û"# $
newValue
û"û"$ ,
)
û"û", -
)
û"û"- .
return
ü"ü" 
false
ü"ü" 
;
ü"ü" 
currentValue
°"°" 
=
°"°" 
newValue
°"°" #
;
°"°"# $
return
¢"¢" 
true
¢"¢" 
;
¢"¢" 
}
£"£" 	
public
•"•" 
static
•"•" 
bool
•"•" 
SetClass
•"•" #
<
•"•"# $
T
•"•"$ %
>
•"•"% &
(
•"•"& '
ref
•"•"' *
T
•"•"+ ,
currentValue
•"•"- 9
,
•"•"9 :
T
•"•"; <
newValue
•"•"= E
)
•"•"E F
where
•"•"G L
T
•"•"M N
:
•"•"O P
class
•"•"Q V
{
¶"¶" 	
if
ß"ß" 
(
ß"ß" 
(
ß"ß" 
currentValue
ß"ß" 
==
ß"ß"  
null
ß"ß"! %
&&
ß"ß"& (
newValue
ß"ß") 1
==
ß"ß"2 4
null
ß"ß"5 9
)
ß"ß"9 :
||
ß"ß"; =
(
ß"ß"> ?
currentValue
ß"ß"? K
!=
ß"ß"L N
null
ß"ß"O S
&&
ß"ß"T V
currentValue
ß"ß"W c
.
ß"ß"c d
Equals
ß"ß"d j
(
ß"ß"j k
newValue
ß"ß"k s
)
ß"ß"s t
)
ß"ß"t u
)
ß"ß"u v
return
®"®" 
false
®"®" 
;
®"®" 
currentValue
™"™" 
=
™"™" 
newValue
™"™" #
;
™"™"# $
return
´"´" 
true
´"´" 
;
´"´" 
}
¨"¨" 	
}
≠"≠" 
}Æ"Æ" ∞Ì
íD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_FontAsset.cs
	namespace 	
TMPro
 
{ 
public 

enum 
AtlasPopulationMode #
{ 
Static 
= 
$num 
, 
Dynamic 
= 
$num 
, 
} 
[ 
Serializable 
] 
[ &
ExcludeFromPresetAttribute -
]- .
public 

class 
TMP_FontAsset 
:  
	TMP_Asset! *
{ 
public 
string 
version 
{   	
get!! 
{!! 
return!! 
	m_Version!! "
;!!" #
}!!$ %
internal"" 
set"" 
{"" 
	m_Version"" $
=""% &
value""' ,
;"", -
}"". /
}## 	
[$$ 	
SerializeField$$	 
]$$ 
private%% 
string%% 
	m_Version%%  
;%%  !
[** 	
SerializeField**	 
]** 
internal++ 
string++  
m_SourceFontFileGUID++ ,
;++, -
[11 	
SerializeField11	 
]11 
internal22 
Font22 &
m_SourceFontFile_EditorRef22 0
;220 1
public88 
Font88 
sourceFontFile88 "
{99 	
get:: 
{:: 
return:: 
m_SourceFontFile:: )
;::) *
}::+ ,
internal;; 
set;; 
{;; 
m_SourceFontFile;; +
=;;, -
value;;. 3
;;;3 4
};;5 6
}<< 	
[== 	
SerializeField==	 
]== 
private>> 
Font>> 
m_SourceFontFile>> %
;>>% &
public@@ 
AtlasPopulationMode@@ "
atlasPopulationMode@@# 6
{AA 	
getBB 
{BB 
returnBB !
m_AtlasPopulationModeBB .
;BB. /
}BB0 1
setDD 
{EE !
m_AtlasPopulationModeFF %
=FF& '
valueFF( -
;FF- .
ifII 
(II !
m_AtlasPopulationModeII )
==II* ,
AtlasPopulationModeII- @
.II@ A
StaticIIA G
)IIG H
m_SourceFontFileJJ $
=JJ% &
nullJJ' +
;JJ+ ,
elseKK 
ifKK 
(KK !
m_AtlasPopulationModeKK .
==KK/ 1
AtlasPopulationModeKK2 E
.KKE F
DynamicKKF M
)KKM N
m_SourceFontFileLL $
=LL% &&
m_SourceFontFile_EditorRefLL' A
;LLA B
}NN 
}OO 	
[PP 	
SerializeFieldPP	 
]PP 
privateQQ 
AtlasPopulationModeQQ #!
m_AtlasPopulationModeQQ$ 9
;QQ9 :
publicWW 
FaceInfoWW 
faceInfoWW  
{XX 	
getYY 
{YY 
returnYY 

m_FaceInfoYY #
;YY# $
}YY% &
setZZ 
{ZZ 

m_FaceInfoZZ 
=ZZ 
valueZZ $
;ZZ$ %
}ZZ& '
}[[ 	
[\\ 	
SerializeField\\	 
]\\ 
internal]] 
FaceInfo]] 

m_FaceInfo]] $
;]]$ %
publiccc 
Listcc 
<cc 
Glyphcc 
>cc 

glyphTablecc %
{dd 	
getee 
{ee 
returnee 
m_GlyphTableee %
;ee% &
}ee' (
internalff 
setff 
{ff 
m_GlyphTableff '
=ff( )
valueff* /
;ff/ 0
}ff1 2
}gg 	
[hh 	
SerializeFieldhh	 
]hh 
internalii 
Listii 
<ii 
Glyphii 
>ii 
m_GlyphTableii )
=ii* +
newii, /
Listii0 4
<ii4 5
Glyphii5 :
>ii: ;
(ii; <
)ii< =
;ii= >
publicnn 

Dictionarynn 
<nn 
uintnn 
,nn 
Glyphnn  %
>nn% &
glyphLookupTablenn' 7
{oo 	
getpp 
{qq 
ifrr 
(rr #
m_GlyphLookupDictionaryrr +
==rr, .
nullrr/ 3
)rr3 4#
ReadFontAssetDefinitionss +
(ss+ ,
)ss, -
;ss- .
returnuu #
m_GlyphLookupDictionaryuu .
;uu. /
}vv 
}ww 	
internalxx 

Dictionaryxx 
<xx 
uintxx  
,xx  !
Glyphxx" '
>xx' (#
m_GlyphLookupDictionaryxx) @
;xx@ A
public~~ 
List~~ 
<~~ 
TMP_Character~~ !
>~~! "
characterTable~~# 1
{ 	
get
ÄÄ 
{
ÄÄ 
return
ÄÄ 
m_CharacterTable
ÄÄ )
;
ÄÄ) *
}
ÄÄ+ ,
internal
ÅÅ 
set
ÅÅ 
{
ÅÅ 
m_CharacterTable
ÅÅ +
=
ÅÅ, -
value
ÅÅ. 3
;
ÅÅ3 4
}
ÅÅ5 6
}
ÇÇ 	
[
ÉÉ 	
SerializeField
ÉÉ	 
]
ÉÉ 
internal
ÑÑ 
List
ÑÑ 
<
ÑÑ 
TMP_Character
ÑÑ #
>
ÑÑ# $
m_CharacterTable
ÑÑ% 5
=
ÑÑ6 7
new
ÑÑ8 ;
List
ÑÑ< @
<
ÑÑ@ A
TMP_Character
ÑÑA N
>
ÑÑN O
(
ÑÑO P
)
ÑÑP Q
;
ÑÑQ R
public
ââ 

Dictionary
ââ 
<
ââ 
uint
ââ 
,
ââ 
TMP_Character
ââ  -
>
ââ- ."
characterLookupTable
ââ/ C
{
ää 	
get
ãã 
{
åå 
if
çç 
(
çç )
m_CharacterLookupDictionary
çç /
==
çç0 2
null
çç3 7
)
çç7 8%
ReadFontAssetDefinition
éé +
(
éé+ ,
)
éé, -
;
éé- .
return
ëë )
m_CharacterLookupDictionary
ëë 2
;
ëë2 3
}
íí 
}
ìì 	
internal
îî 

Dictionary
îî 
<
îî 
uint
îî  
,
îî  !
TMP_Character
îî" /
>
îî/ 0)
m_CharacterLookupDictionary
îî1 L
;
îîL M
public
¶¶ 
	Texture2D
¶¶ 
atlasTexture
¶¶ %
{
ßß 	
get
®® 
{
©© 
if
™™ 
(
™™ 
m_AtlasTexture
™™ "
==
™™# %
null
™™& *
)
™™* +
{
´´ 
m_AtlasTexture
¨¨ "
=
¨¨# $
atlasTextures
¨¨% 2
[
¨¨2 3
$num
¨¨3 4
]
¨¨4 5
;
¨¨5 6
}
≠≠ 
return
ØØ 
m_AtlasTexture
ØØ %
;
ØØ% &
}
∞∞ 
}
±± 	
internal
≤≤ 
	Texture2D
≤≤ 
m_AtlasTexture
≤≤ )
;
≤≤) *
public
∑∑ 
	Texture2D
∑∑ 
[
∑∑ 
]
∑∑ 
atlasTextures
∑∑ (
{
∏∏ 	
get
ππ 
{
∫∫ 
if
ªª 
(
ªª 
m_AtlasTextures
ªª #
==
ªª$ &
null
ªª' +
)
ªª+ ,
{
ºº 
}
ææ 
return
√√ 
m_AtlasTextures
√√ &
;
√√& '
}
ƒƒ 
set
∆∆ 
{
«« 
m_AtlasTextures
»» 
=
»»  !
value
»»" '
;
»»' (
}
…… 
}
   	
[
ÀÀ 	
SerializeField
ÀÀ	 
]
ÀÀ 
internal
ÃÃ 
	Texture2D
ÃÃ 
[
ÃÃ 
]
ÃÃ 
m_AtlasTextures
ÃÃ ,
;
ÃÃ, -
[
—— 	
SerializeField
——	 
]
—— 
internal
““ 
int
““ !
m_AtlasTextureIndex
““ (
;
““( )
public
◊◊ 
int
◊◊ 
atlasTextureCount
◊◊ $
{
◊◊% &
get
◊◊' *
{
◊◊+ ,
return
◊◊- 3!
m_AtlasTextureIndex
◊◊4 G
+
◊◊H I
$num
◊◊J K
;
◊◊K L
}
◊◊M N
}
◊◊O P
public
‹‹ 
bool
‹‹ )
isMultiAtlasTexturesEnabled
‹‹ /
{
›› 	
get
ﬁﬁ 
{
ﬁﬁ 
return
ﬁﬁ +
m_IsMultiAtlasTexturesEnabled
ﬁﬁ 6
;
ﬁﬁ6 7
}
ﬁﬁ8 9
set
ﬂﬂ 
{
ﬂﬂ +
m_IsMultiAtlasTexturesEnabled
ﬂﬂ /
=
ﬂﬂ0 1
value
ﬂﬂ2 7
;
ﬂﬂ7 8
}
ﬂﬂ9 :
}
‡‡ 	
[
‚‚ 	
SerializeField
‚‚	 
]
‚‚ 
private
„„ 
bool
„„ +
m_IsMultiAtlasTexturesEnabled
„„ 2
;
„„2 3
internal
ËË 
List
ËË 
<
ËË 
	GlyphRect
ËË 
>
ËË  
usedGlyphRects
ËË! /
{
ÈÈ 	
get
ÍÍ 
{
ÍÍ 
return
ÍÍ 
m_UsedGlyphRects
ÍÍ )
;
ÍÍ) *
}
ÍÍ+ ,
set
ÎÎ 
{
ÎÎ 
m_UsedGlyphRects
ÎÎ "
=
ÎÎ# $
value
ÎÎ% *
;
ÎÎ* +
}
ÎÎ, -
}
ÏÏ 	
[
ÌÌ 	
SerializeField
ÌÌ	 
]
ÌÌ 
private
ÓÓ 
List
ÓÓ 
<
ÓÓ 
	GlyphRect
ÓÓ 
>
ÓÓ 
m_UsedGlyphRects
ÓÓ  0
;
ÓÓ0 1
internal
ÛÛ 
List
ÛÛ 
<
ÛÛ 
	GlyphRect
ÛÛ 
>
ÛÛ  
freeGlyphRects
ÛÛ! /
{
ÙÙ 	
get
ıı 
{
ıı 
return
ıı 
m_FreeGlyphRects
ıı )
;
ıı) *
}
ıı+ ,
set
ˆˆ 
{
ˆˆ 
m_FreeGlyphRects
ˆˆ "
=
ˆˆ# $
value
ˆˆ% *
;
ˆˆ* +
}
ˆˆ, -
}
˜˜ 	
[
¯¯ 	
SerializeField
¯¯	 
]
¯¯ 
private
˘˘ 
List
˘˘ 
<
˘˘ 
	GlyphRect
˘˘ 
>
˘˘ 
m_FreeGlyphRects
˘˘  0
;
˘˘0 1
[
ˇˇ 
Obsolete
ˇˇ 
(
ˇˇ 
$strˇˇ Ñ
)ˇˇÑ Ö
]ˇˇÖ Ü
public
ÄÄ 
FaceInfo_Legacy
ÄÄ 
fontInfo
ÄÄ '
{
ÅÅ 	
get
ÇÇ 
{
ÇÇ 
return
ÇÇ 

m_fontInfo
ÇÇ #
;
ÇÇ# $
}
ÇÇ% &
}
ÉÉ 	
[
ÖÖ 	
SerializeField
ÖÖ	 
]
ÖÖ 
private
ÜÜ 
FaceInfo_Legacy
ÜÜ 

m_fontInfo
ÜÜ  *
=
ÜÜ+ ,
null
ÜÜ- 1
;
ÜÜ1 2
[
ãã 	
SerializeField
ãã	 
]
ãã 
public
åå 
	Texture2D
åå 
atlas
åå 
;
åå 
public
ëë 
int
ëë 

atlasWidth
ëë 
{
íí 	
get
ìì 
{
ìì 
return
ìì 
m_AtlasWidth
ìì %
;
ìì% &
}
ìì' (
internal
îî 
set
îî 
{
îî 
m_AtlasWidth
îî '
=
îî( )
value
îî* /
;
îî/ 0
}
îî1 2
}
ïï 	
[
ññ 	
SerializeField
ññ	 
]
ññ 
internal
óó 
int
óó 
m_AtlasWidth
óó !
;
óó! "
public
úú 
int
úú 
atlasHeight
úú 
{
ùù 	
get
ûû 
{
ûû 
return
ûû 
m_AtlasHeight
ûû &
;
ûû& '
}
ûû( )
internal
üü 
set
üü 
{
üü 
m_AtlasHeight
üü (
=
üü) *
value
üü+ 0
;
üü0 1
}
üü2 3
}
†† 	
[
°° 	
SerializeField
°°	 
]
°° 
internal
¢¢ 
int
¢¢ 
m_AtlasHeight
¢¢ "
;
¢¢" #
public
ßß 
int
ßß 
atlasPadding
ßß 
{
®® 	
get
©© 
{
©© 
return
©© 
m_AtlasPadding
©© '
;
©©' (
}
©©) *
internal
™™ 
set
™™ 
{
™™ 
m_AtlasPadding
™™ )
=
™™* +
value
™™, 1
;
™™1 2
}
™™3 4
}
´´ 	
[
¨¨ 	
SerializeField
¨¨	 
]
¨¨ 
internal
≠≠ 
int
≠≠ 
m_AtlasPadding
≠≠ #
;
≠≠# $
public
ØØ 
GlyphRenderMode
ØØ 
atlasRenderMode
ØØ .
{
∞∞ 	
get
±± 
{
±± 
return
±± 
m_AtlasRenderMode
±± *
;
±±* +
}
±±, -
internal
≤≤ 
set
≤≤ 
{
≤≤ 
m_AtlasRenderMode
≤≤ ,
=
≤≤- .
value
≤≤/ 4
;
≤≤4 5
}
≤≤6 7
}
≥≥ 	
[
¥¥ 	
SerializeField
¥¥	 
]
¥¥ 
internal
µµ 
GlyphRenderMode
µµ  
m_AtlasRenderMode
µµ! 2
;
µµ2 3
[
∏∏ 	
SerializeField
∏∏	 
]
∏∏ 
internal
ππ 
List
ππ 
<
ππ 
	TMP_Glyph
ππ 
>
ππ  
m_glyphInfoList
ππ! 0
;
ππ0 1
[
ªª 	
SerializeField
ªª	 
]
ªª 
[
ºº 	"
FormerlySerializedAs
ºº	 
(
ºº 
$str
ºº -
)
ºº- .
]
ºº. /
internal
ΩΩ 
KerningTable
ΩΩ 
m_KerningTable
ΩΩ ,
=
ΩΩ- .
new
ΩΩ/ 2
KerningTable
ΩΩ3 ?
(
ΩΩ? @
)
ΩΩ@ A
;
ΩΩA B
public
¬¬ "
TMP_FontFeatureTable
¬¬ #
fontFeatureTable
¬¬$ 4
{
√√ 	
get
ƒƒ 
{
ƒƒ 
return
ƒƒ  
m_FontFeatureTable
ƒƒ +
;
ƒƒ+ ,
}
ƒƒ- .
internal
≈≈ 
set
≈≈ 
{
≈≈  
m_FontFeatureTable
≈≈ -
=
≈≈. /
value
≈≈0 5
;
≈≈5 6
}
≈≈7 8
}
∆∆ 	
[
«« 	
SerializeField
««	 
]
«« 
internal
»» "
TMP_FontFeatureTable
»» % 
m_FontFeatureTable
»»& 8
=
»»9 :
new
»»; >"
TMP_FontFeatureTable
»»? S
(
»»S T
)
»»T U
;
»»U V
[
ÀÀ 	
SerializeField
ÀÀ	 
]
ÀÀ 
private
ÕÕ 
List
ÕÕ 
<
ÕÕ 
TMP_FontAsset
ÕÕ "
>
ÕÕ" # 
fallbackFontAssets
ÕÕ$ 6
;
ÕÕ6 7
public
““ 
List
““ 
<
““ 
TMP_FontAsset
““ !
>
““! "$
fallbackFontAssetTable
““# 9
{
”” 	
get
‘‘ 
{
‘‘ 
return
‘‘ &
m_FallbackFontAssetTable
‘‘ 1
;
‘‘1 2
}
‘‘3 4
set
’’ 
{
’’ &
m_FallbackFontAssetTable
’’ *
=
’’+ ,
value
’’- 2
;
’’2 3
}
’’4 5
}
÷÷ 	
[
◊◊ 	
SerializeField
◊◊	 
]
◊◊ 
internal
ÿÿ 
List
ÿÿ 
<
ÿÿ 
TMP_FontAsset
ÿÿ #
>
ÿÿ# $&
m_FallbackFontAssetTable
ÿÿ% =
;
ÿÿ= >
public
›› '
FontAssetCreationSettings
›› (
creationSettings
››) 9
{
ﬁﬁ 	
get
ﬂﬂ 
{
ﬂﬂ 
return
ﬂﬂ  
m_CreationSettings
ﬂﬂ +
;
ﬂﬂ+ ,
}
ﬂﬂ- .
set
‡‡ 
{
‡‡  
m_CreationSettings
‡‡ $
=
‡‡% &
value
‡‡' ,
;
‡‡, -
}
‡‡. /
}
·· 	
[
‚‚ 	
SerializeField
‚‚	 
]
‚‚ 
internal
„„ '
FontAssetCreationSettings
„„ * 
m_CreationSettings
„„+ =
;
„„= >
public
ËË  
TMP_FontWeightPair
ËË !
[
ËË! "
]
ËË" #
fontWeightTable
ËË$ 3
{
ÈÈ 	
get
ÍÍ 
{
ÍÍ 
return
ÍÍ 
m_FontWeightTable
ÍÍ *
;
ÍÍ* +
}
ÍÍ, -
internal
ÎÎ 
set
ÎÎ 
{
ÎÎ 
m_FontWeightTable
ÎÎ ,
=
ÎÎ- .
value
ÎÎ/ 4
;
ÎÎ4 5
}
ÎÎ6 7
}
ÏÏ 	
[
ÌÌ 	
SerializeField
ÌÌ	 
]
ÌÌ 
private
ÓÓ  
TMP_FontWeightPair
ÓÓ "
[
ÓÓ" #
]
ÓÓ# $
m_FontWeightTable
ÓÓ% 6
=
ÓÓ7 8
new
ÓÓ9 < 
TMP_FontWeightPair
ÓÓ= O
[
ÓÓO P
$num
ÓÓP R
]
ÓÓR S
;
ÓÓS T
[
ıı 	
SerializeField
ıı	 
]
ıı 
private
ˆˆ  
TMP_FontWeightPair
ˆˆ "
[
ˆˆ" #
]
ˆˆ# $
fontWeights
ˆˆ% 0
=
ˆˆ1 2
null
ˆˆ3 7
;
ˆˆ7 8
public
˝˝ 
float
˝˝ 
normalStyle
˝˝  
=
˝˝! "
$num
˝˝# $
;
˝˝$ %
public
ÇÇ 
float
ÇÇ !
normalSpacingOffset
ÇÇ (
=
ÇÇ) *
$num
ÇÇ+ ,
;
ÇÇ, -
public
áá 
float
áá 
	boldStyle
áá 
=
áá  
$num
áá! &
;
áá& '
public
åå 
float
åå 
boldSpacing
åå  
=
åå! "
$num
åå# %
;
åå% &
public
ëë 
byte
ëë 
italicStyle
ëë 
=
ëë  !
$num
ëë" $
;
ëë$ %
public
ìì 
byte
ìì 
tabSize
ìì 
=
ìì 
$num
ìì  
;
ìì  !
internal
ïï 
bool
ïï *
IsFontAssetLookupTablesDirty
ïï 2
;
ïï2 3
public
úú 
static
úú 
TMP_FontAsset
úú #
CreateFontAsset
úú$ 3
(
úú3 4
Font
úú4 8
font
úú9 =
)
úú= >
{
ùù 	
return
ûû 
CreateFontAsset
ûû "
(
ûû" #
font
ûû# '
,
ûû' (
$num
ûû) +
,
ûû+ ,
$num
ûû- .
,
ûû. /
GlyphRenderMode
ûû0 ?
.
ûû? @
SDFAA
ûû@ E
,
ûûE F
$num
ûûG K
,
ûûK L
$num
ûûM Q
,
ûûQ R!
AtlasPopulationMode
ûûS f
.
ûûf g
Dynamic
ûûg n
)
ûûn o
;
ûûo p
}
üü 	
public
¨¨ 
static
¨¨ 
TMP_FontAsset
¨¨ #
CreateFontAsset
¨¨$ 3
(
¨¨3 4
Font
¨¨4 8
font
¨¨9 =
,
¨¨= >
int
¨¨? B
samplingPointSize
¨¨C T
,
¨¨T U
int
¨¨V Y
atlasPadding
¨¨Z f
,
¨¨f g
GlyphRenderMode
¨¨h w

renderMode¨¨x Ç
,¨¨Ç É
int¨¨Ñ á

atlasWidth¨¨à í
,¨¨í ì
int¨¨î ó
atlasHeight¨¨ò £
,¨¨£ §#
AtlasPopulationMode¨¨• ∏#
atlasPopulationMode¨¨π Ã
=¨¨Õ Œ#
AtlasPopulationMode¨¨œ ‚
.¨¨‚ „
Dynamic¨¨„ Í
,¨¨Í Î
bool¨¨Ï '
enableMultiAtlasSupport¨¨Ò à
=¨¨â ä
true¨¨ã è
)¨¨è ê
{
≠≠ 	

FontEngine
ØØ 
.
ØØ "
InitializeFontEngine
ØØ +
(
ØØ+ ,
)
ØØ, -
;
ØØ- .
if
≤≤ 
(
≤≤ 

FontEngine
≤≤ 
.
≤≤ 
LoadFontFace
≤≤ '
(
≤≤' (
font
≤≤( ,
,
≤≤, -
samplingPointSize
≤≤. ?
)
≤≤? @
!=
≤≤A C
FontEngineError
≤≤D S
.
≤≤S T
Success
≤≤T [
)
≤≤[ \
{
≥≥ 
Debug
¥¥ 
.
¥¥ 

LogWarning
¥¥  
(
¥¥  !
$str
¥¥! A
+
¥¥B C
font
¥¥D H
.
¥¥H I
name
¥¥I M
+
¥¥N O
$str¥¥P ú
,¥¥ú ù
font¥¥û ¢
)¥¥¢ £
;¥¥£ §
return
µµ 
null
µµ 
;
µµ 
}
∂∂ 
TMP_FontAsset
ππ 
	fontAsset
ππ #
=
ππ$ %
ScriptableObject
ππ& 6
.
ππ6 7
CreateInstance
ππ7 E
<
ππE F
TMP_FontAsset
ππF S
>
ππS T
(
ππT U
)
ππU V
;
ππV W
	fontAsset
ªª 
.
ªª 
	m_Version
ªª 
=
ªª  !
$str
ªª" )
;
ªª) *
	fontAsset
ºº 
.
ºº 
faceInfo
ºº 
=
ºº  

FontEngine
ºº! +
.
ºº+ ,
GetFaceInfo
ºº, 7
(
ºº7 8
)
ºº8 9
;
ºº9 :
if
øø 
(
øø !
atlasPopulationMode
øø #
==
øø$ &!
AtlasPopulationMode
øø' :
.
øø: ;
Dynamic
øø; B
)
øøB C
	fontAsset
¿¿ 
.
¿¿ 
sourceFontFile
¿¿ (
=
¿¿) *
font
¿¿+ /
;
¿¿/ 0
string
ƒƒ 
guid
ƒƒ 
;
ƒƒ 
long
≈≈ 
localID
≈≈ 
;
≈≈ 
UnityEditor
«« 
.
«« 
AssetDatabase
«« %
.
««% &.
 TryGetGUIDAndLocalFileIdentifier
««& F
(
««F G
font
««G K
,
««K L
out
««M P
guid
««Q U
,
««U V
out
««W Z
localID
««[ b
)
««b c
;
««c d
	fontAsset
»» 
.
»» "
m_SourceFontFileGUID
»» *
=
»»+ ,
guid
»»- 1
;
»»1 2
	fontAsset
…… 
.
…… (
m_SourceFontFile_EditorRef
…… 0
=
……1 2
font
……3 7
;
……7 8
	fontAsset
ÃÃ 
.
ÃÃ !
atlasPopulationMode
ÃÃ )
=
ÃÃ* +!
atlasPopulationMode
ÃÃ, ?
;
ÃÃ? @
	fontAsset
ŒŒ 
.
ŒŒ 

atlasWidth
ŒŒ  
=
ŒŒ! "

atlasWidth
ŒŒ# -
;
ŒŒ- .
	fontAsset
œœ 
.
œœ 
atlasHeight
œœ !
=
œœ" #
atlasHeight
œœ$ /
;
œœ/ 0
	fontAsset
–– 
.
–– 
atlasPadding
–– "
=
––# $
atlasPadding
––% 1
;
––1 2
	fontAsset
—— 
.
—— 
atlasRenderMode
—— %
=
——& '

renderMode
——( 2
;
——2 3
	fontAsset
‘‘ 
.
‘‘ 
atlasTextures
‘‘ #
=
‘‘$ %
new
‘‘& )
	Texture2D
‘‘* 3
[
‘‘3 4
$num
‘‘4 5
]
‘‘5 6
;
‘‘6 7
	Texture2D
◊◊ 
texture
◊◊ 
=
◊◊ 
new
◊◊  #
	Texture2D
◊◊$ -
(
◊◊- .
$num
◊◊. /
,
◊◊/ 0
$num
◊◊1 2
,
◊◊2 3
TextureFormat
◊◊4 A
.
◊◊A B
Alpha8
◊◊B H
,
◊◊H I
false
◊◊J O
)
◊◊O P
;
◊◊P Q
	fontAsset
⁄⁄ 
.
⁄⁄ 
atlasTextures
⁄⁄ #
[
⁄⁄# $
$num
⁄⁄$ %
]
⁄⁄% &
=
⁄⁄' (
texture
⁄⁄) 0
;
⁄⁄0 1
	fontAsset
‹‹ 
.
‹‹ )
isMultiAtlasTexturesEnabled
‹‹ 1
=
‹‹2 3%
enableMultiAtlasSupport
‹‹4 K
;
‹‹K L
int
ﬂﬂ 
packingModifier
ﬂﬂ 
;
ﬂﬂ  
if
‡‡ 
(
‡‡ 
(
‡‡ 
(
‡‡ 
GlyphRasterModes
‡‡ "
)
‡‡" #

renderMode
‡‡# -
&
‡‡. /
GlyphRasterModes
‡‡0 @
.
‡‡@ A 
RASTER_MODE_BITMAP
‡‡A S
)
‡‡S T
==
‡‡U W
GlyphRasterModes
‡‡X h
.
‡‡h i 
RASTER_MODE_BITMAP
‡‡i {
)
‡‡{ |
{
·· 
packingModifier
‚‚ 
=
‚‚  !
$num
‚‚" #
;
‚‚# $
Material
ÂÂ 
tmp_material
ÂÂ %
=
ÂÂ& '
new
ÂÂ( +
Material
ÂÂ, 4
(
ÂÂ4 5
ShaderUtilities
ÂÂ5 D
.
ÂÂD E$
ShaderRef_MobileBitmap
ÂÂE [
)
ÂÂ[ \
;
ÂÂ\ ]
tmp_material
ËË 
.
ËË 

SetTexture
ËË '
(
ËË' (
ShaderUtilities
ËË( 7
.
ËË7 8

ID_MainTex
ËË8 B
,
ËËB C
texture
ËËD K
)
ËËK L
;
ËËL M
tmp_material
ÈÈ 
.
ÈÈ 
SetFloat
ÈÈ %
(
ÈÈ% &
ShaderUtilities
ÈÈ& 5
.
ÈÈ5 6
ID_TextureWidth
ÈÈ6 E
,
ÈÈE F

atlasWidth
ÈÈG Q
)
ÈÈQ R
;
ÈÈR S
tmp_material
ÍÍ 
.
ÍÍ 
SetFloat
ÍÍ %
(
ÍÍ% &
ShaderUtilities
ÍÍ& 5
.
ÍÍ5 6
ID_TextureHeight
ÍÍ6 F
,
ÍÍF G
atlasHeight
ÍÍH S
)
ÍÍS T
;
ÍÍT U
	fontAsset
ÏÏ 
.
ÏÏ 
material
ÏÏ "
=
ÏÏ# $
tmp_material
ÏÏ% 1
;
ÏÏ1 2
}
ÌÌ 
else
ÓÓ 
{
ÔÔ 
packingModifier
 
=
  !
$num
" #
;
# $
Material
ÛÛ 
tmp_material
ÛÛ %
=
ÛÛ& '
new
ÛÛ( +
Material
ÛÛ, 4
(
ÛÛ4 5
ShaderUtilities
ÛÛ5 D
.
ÛÛD E!
ShaderRef_MobileSDF
ÛÛE X
)
ÛÛX Y
;
ÛÛY Z
tmp_material
ˆˆ 
.
ˆˆ 

SetTexture
ˆˆ '
(
ˆˆ' (
ShaderUtilities
ˆˆ( 7
.
ˆˆ7 8

ID_MainTex
ˆˆ8 B
,
ˆˆB C
texture
ˆˆD K
)
ˆˆK L
;
ˆˆL M
tmp_material
˜˜ 
.
˜˜ 
SetFloat
˜˜ %
(
˜˜% &
ShaderUtilities
˜˜& 5
.
˜˜5 6
ID_TextureWidth
˜˜6 E
,
˜˜E F

atlasWidth
˜˜G Q
)
˜˜Q R
;
˜˜R S
tmp_material
¯¯ 
.
¯¯ 
SetFloat
¯¯ %
(
¯¯% &
ShaderUtilities
¯¯& 5
.
¯¯5 6
ID_TextureHeight
¯¯6 F
,
¯¯F G
atlasHeight
¯¯H S
)
¯¯S T
;
¯¯T U
tmp_material
˙˙ 
.
˙˙ 
SetFloat
˙˙ %
(
˙˙% &
ShaderUtilities
˙˙& 5
.
˙˙5 6
ID_GradientScale
˙˙6 F
,
˙˙F G
atlasPadding
˙˙H T
+
˙˙U V
packingModifier
˙˙W f
)
˙˙f g
;
˙˙g h
tmp_material
¸¸ 
.
¸¸ 
SetFloat
¸¸ %
(
¸¸% &
ShaderUtilities
¸¸& 5
.
¸¸5 6
ID_WeightNormal
¸¸6 E
,
¸¸E F
	fontAsset
¸¸G P
.
¸¸P Q
normalStyle
¸¸Q \
)
¸¸\ ]
;
¸¸] ^
tmp_material
˝˝ 
.
˝˝ 
SetFloat
˝˝ %
(
˝˝% &
ShaderUtilities
˝˝& 5
.
˝˝5 6
ID_WeightBold
˝˝6 C
,
˝˝C D
	fontAsset
˝˝E N
.
˝˝N O
	boldStyle
˝˝O X
)
˝˝X Y
;
˝˝Y Z
	fontAsset
ˇˇ 
.
ˇˇ 
material
ˇˇ "
=
ˇˇ# $
tmp_material
ˇˇ% 1
;
ˇˇ1 2
}
ÄÄ 
	fontAsset
ÇÇ 
.
ÇÇ 
freeGlyphRects
ÇÇ $
=
ÇÇ% &
new
ÇÇ' *
List
ÇÇ+ /
<
ÇÇ/ 0
	GlyphRect
ÇÇ0 9
>
ÇÇ9 :
(
ÇÇ: ;
$num
ÇÇ; <
)
ÇÇ< =
{
ÇÇ> ?
new
ÇÇ@ C
	GlyphRect
ÇÇD M
(
ÇÇM N
$num
ÇÇN O
,
ÇÇO P
$num
ÇÇQ R
,
ÇÇR S

atlasWidth
ÇÇT ^
-
ÇÇ_ `
packingModifier
ÇÇa p
,
ÇÇp q
atlasHeight
ÇÇr }
-
ÇÇ~ 
packingModifierÇÇÄ è
)ÇÇè ê
}ÇÇë í
;ÇÇí ì
	fontAsset
ÉÉ 
.
ÉÉ 
usedGlyphRects
ÉÉ $
=
ÉÉ% &
new
ÉÉ' *
List
ÉÉ+ /
<
ÉÉ/ 0
	GlyphRect
ÉÉ0 9
>
ÉÉ9 :
(
ÉÉ: ;
$num
ÉÉ; <
)
ÉÉ< =
;
ÉÉ= >
	fontAsset
áá 
.
áá %
ReadFontAssetDefinition
áá -
(
áá- .
)
áá. /
;
áá/ 0
return
ââ 
	fontAsset
ââ 
;
ââ 
}
ää 	
void
çç 
Awake
çç 
(
çç 
)
çç 
{
éé 	
if
êê 
(
êê 
this
êê 
.
êê 
material
êê 
!=
êê  
null
êê! %
&&
êê& (
string
êê) /
.
êê/ 0
IsNullOrEmpty
êê0 =
(
êê= >
	m_Version
êê> G
)
êêG H
)
êêH I
UpgradeFontAsset
ëë  
(
ëë  !
)
ëë! "
;
ëë" #
}
íí 	
private
ïï 
void
ïï 

OnValidate
ïï 
(
ïï  
)
ïï  !
{
ññ 	
if
òò 
(
òò )
m_CharacterLookupDictionary
òò +
==
òò, .
null
òò/ 3
||
òò4 6%
m_GlyphLookupDictionary
òò7 N
==
òòO Q
null
òòR V
)
òòV W%
ReadFontAssetDefinition
ôô '
(
ôô' (
)
ôô( )
;
ôô) *
}
öö 	
private
ùù 
static
ùù 
string
ùù %
s_DefaultMaterialSuffix
ùù 5
=
ùù6 7
$str
ùù8 I
;
ùùI J
public
üü 
void
üü %
ReadFontAssetDefinition
üü +
(
üü+ ,
)
üü, -
{
†† 	
Profiler
°° 
.
°° 
BeginSample
°°  
(
°°  !
$str
°°! >
)
°°> ?
;
°°? @
if
¶¶ 
(
¶¶ 
this
¶¶ 
.
¶¶ 
material
¶¶ 
!=
¶¶  
null
¶¶! %
&&
¶¶& (
string
¶¶) /
.
¶¶/ 0
IsNullOrEmpty
¶¶0 =
(
¶¶= >
	m_Version
¶¶> G
)
¶¶G H
)
¶¶H I
UpgradeFontAsset
ßß  
(
ßß  !
)
ßß! "
;
ßß" #.
 InitializeDictionaryLookupTables
™™ ,
(
™™, -
)
™™- .
;
™™. /4
&AddSynthesizedCharactersAndFaceMetrics
≠≠ 2
(
≠≠2 3
)
≠≠3 4
;
≠≠4 5
if
∞∞ 
(
∞∞ 

m_FaceInfo
∞∞ 
.
∞∞ 
scale
∞∞  
==
∞∞! #
$num
∞∞$ %
)
∞∞% &

m_FaceInfo
±± 
.
±± 
scale
±±  
=
±±! "
$num
±±# '
;
±±' (
if
¥¥ 
(
¥¥ 

m_FaceInfo
¥¥ 
.
¥¥ !
strikethroughOffset
¥¥ .
==
¥¥/ 1
$num
¥¥2 3
)
¥¥3 4

m_FaceInfo
µµ 
.
µµ !
strikethroughOffset
µµ .
=
µµ/ 0

m_FaceInfo
µµ1 ;
.
µµ; <
capLine
µµ< C
/
µµD E
$num
µµF J
;
µµJ K
if
∏∏ 
(
∏∏ 
m_AtlasPadding
∏∏ 
==
∏∏ !
$num
∏∏" #
)
∏∏# $
{
ππ 
if
∫∫ 
(
∫∫ 
material
∫∫ 
.
∫∫ 
HasProperty
∫∫ (
(
∫∫( )
ShaderUtilities
∫∫) 8
.
∫∫8 9
ID_GradientScale
∫∫9 I
)
∫∫I J
)
∫∫J K
m_AtlasPadding
ªª "
=
ªª# $
(
ªª% &
int
ªª& )
)
ªª) *
material
ªª* 2
.
ªª2 3
GetFloat
ªª3 ;
(
ªª; <
ShaderUtilities
ªª< K
.
ªªK L
ID_GradientScale
ªªL \
)
ªª\ ]
-
ªª^ _
$num
ªª` a
;
ªªa b
}
ºº 
hashCode
øø 
=
øø 
TMP_TextUtilities
øø (
.
øø( )
GetSimpleHashCode
øø) :
(
øø: ;
this
øø; ?
.
øø? @
name
øø@ D
)
øøD E
;
øøE F
materialHashCode
¬¬ 
=
¬¬ 
TMP_TextUtilities
¬¬ 0
.
¬¬0 1
GetSimpleHashCode
¬¬1 B
(
¬¬B C
this
¬¬C G
.
¬¬G H
name
¬¬H L
+
¬¬M N%
s_DefaultMaterialSuffix
¬¬O f
)
¬¬f g
;
¬¬g h*
IsFontAssetLookupTablesDirty
«« (
=
««) *
false
««+ 0
;
««0 1
Profiler
…… 
.
…… 
	EndSample
…… 
(
…… 
)
……  
;
……  !
}
   	
internal
–– 
void
–– .
 InitializeDictionaryLookupTables
–– 6
(
––6 7
)
––7 8
{
—— 	-
InitializeGlyphLookupDictionary
”” +
(
””+ ,
)
””, -
;
””- .1
#InitializeCharacterLookupDictionary
÷÷ /
(
÷÷/ 0
)
÷÷0 1
;
÷÷1 2B
4InitializeGlyphPaidAdjustmentRecordsLookupDictionary
ŸŸ @
(
ŸŸ@ A
)
ŸŸA B
;
ŸŸB C
}
⁄⁄ 	
internal
‹‹ 
void
‹‹ -
InitializeGlyphLookupDictionary
‹‹ 5
(
‹‹5 6
)
‹‹6 7
{
›› 	
if
ﬂﬂ 
(
ﬂﬂ %
m_GlyphLookupDictionary
ﬂﬂ '
==
ﬂﬂ( *
null
ﬂﬂ+ /
)
ﬂﬂ/ 0%
m_GlyphLookupDictionary
‡‡ '
=
‡‡( )
new
‡‡* -

Dictionary
‡‡. 8
<
‡‡8 9
uint
‡‡9 =
,
‡‡= >
Glyph
‡‡? D
>
‡‡D E
(
‡‡E F
)
‡‡F G
;
‡‡G H
else
·· %
m_GlyphLookupDictionary
‚‚ '
.
‚‚' (
Clear
‚‚( -
(
‚‚- .
)
‚‚. /
;
‚‚/ 0
if
ÂÂ 
(
ÂÂ 
m_GlyphIndexList
ÂÂ  
==
ÂÂ! #
null
ÂÂ$ (
)
ÂÂ( )
m_GlyphIndexList
ÊÊ  
=
ÊÊ! "
new
ÊÊ# &
List
ÊÊ' +
<
ÊÊ+ ,
uint
ÊÊ, 0
>
ÊÊ0 1
(
ÊÊ1 2
)
ÊÊ2 3
;
ÊÊ3 4
else
ÁÁ 
m_GlyphIndexList
ËË  
.
ËË  !
Clear
ËË! &
(
ËË& '
)
ËË' (
;
ËË( )
if
ÎÎ 
(
ÎÎ (
m_GlyphIndexListNewlyAdded
ÎÎ *
==
ÎÎ+ -
null
ÎÎ. 2
)
ÎÎ2 3(
m_GlyphIndexListNewlyAdded
ÏÏ *
=
ÏÏ+ ,
new
ÏÏ- 0
List
ÏÏ1 5
<
ÏÏ5 6
uint
ÏÏ6 :
>
ÏÏ: ;
(
ÏÏ; <
)
ÏÏ< =
;
ÏÏ= >
else
ÌÌ (
m_GlyphIndexListNewlyAdded
ÓÓ *
.
ÓÓ* +
Clear
ÓÓ+ 0
(
ÓÓ0 1
)
ÓÓ1 2
;
ÓÓ2 3
int
ÒÒ 

glyphCount
ÒÒ 
=
ÒÒ 
m_GlyphTable
ÒÒ )
.
ÒÒ) *
Count
ÒÒ* /
;
ÒÒ/ 0
for
ÙÙ 
(
ÙÙ 
int
ÙÙ 
i
ÙÙ 
=
ÙÙ 
$num
ÙÙ 
;
ÙÙ 
i
ÙÙ 
<
ÙÙ 

glyphCount
ÙÙ  *
;
ÙÙ* +
i
ÙÙ, -
++
ÙÙ- /
)
ÙÙ/ 0
{
ıı 
Glyph
ˆˆ 
glyph
ˆˆ 
=
ˆˆ 
m_GlyphTable
ˆˆ *
[
ˆˆ* +
i
ˆˆ+ ,
]
ˆˆ, -
;
ˆˆ- .
uint
¯¯ 
index
¯¯ 
=
¯¯ 
glyph
¯¯ "
.
¯¯" #
index
¯¯# (
;
¯¯( )
if
˚˚ 
(
˚˚ %
m_GlyphLookupDictionary
˚˚ +
.
˚˚+ ,
ContainsKey
˚˚, 7
(
˚˚7 8
index
˚˚8 =
)
˚˚= >
==
˚˚? A
false
˚˚B G
)
˚˚G H
{
¸¸ %
m_GlyphLookupDictionary
˝˝ +
.
˝˝+ ,
Add
˝˝, /
(
˝˝/ 0
index
˝˝0 5
,
˝˝5 6
glyph
˝˝7 <
)
˝˝< =
;
˝˝= >
m_GlyphIndexList
˛˛ $
.
˛˛$ %
Add
˛˛% (
(
˛˛( )
index
˛˛) .
)
˛˛. /
;
˛˛/ 0
}
ˇˇ 
}
ÄÄ 
}
ÅÅ 	
internal
ÉÉ 
void
ÉÉ 1
#InitializeCharacterLookupDictionary
ÉÉ 9
(
ÉÉ9 :
)
ÉÉ: ;
{
ÑÑ 	
if
ÜÜ 
(
ÜÜ )
m_CharacterLookupDictionary
ÜÜ +
==
ÜÜ, .
null
ÜÜ/ 3
)
ÜÜ3 4)
m_CharacterLookupDictionary
áá +
=
áá, -
new
áá. 1

Dictionary
áá2 <
<
áá< =
uint
áá= A
,
ááA B
TMP_Character
ááC P
>
ááP Q
(
ááQ R
)
ááR S
;
ááS T
else
àà )
m_CharacterLookupDictionary
ââ +
.
ââ+ ,
Clear
ââ, 1
(
ââ1 2
)
ââ2 3
;
ââ3 4
for
åå 
(
åå 
int
åå 
i
åå 
=
åå 
$num
åå 
;
åå 
i
åå 
<
åå 
m_CharacterTable
åå  0
.
åå0 1
Count
åå1 6
;
åå6 7
i
åå8 9
++
åå9 ;
)
åå; <
{
çç 
TMP_Character
éé 
	character
éé '
=
éé( )
m_CharacterTable
éé* :
[
éé: ;
i
éé; <
]
éé< =
;
éé= >
uint
êê 
unicode
êê 
=
êê 
	character
êê (
.
êê( )
unicode
êê) 0
;
êê0 1
uint
ëë 

glyphIndex
ëë 
=
ëë  !
	character
ëë" +
.
ëë+ ,

glyphIndex
ëë, 6
;
ëë6 7
if
îî 
(
îî )
m_CharacterLookupDictionary
îî /
.
îî/ 0
ContainsKey
îî0 ;
(
îî; <
unicode
îî< C
)
îîC D
==
îîE G
false
îîH M
)
îîM N
{
ïï )
m_CharacterLookupDictionary
ññ /
.
ññ/ 0
Add
ññ0 3
(
ññ3 4
unicode
ññ4 ;
,
ññ; <
	character
ññ= F
)
ññF G
;
ññG H
	character
óó 
.
óó 
	textAsset
óó '
=
óó( )
this
óó* .
;
óó. /
	character
òò 
.
òò 
glyph
òò #
=
òò$ %%
m_GlyphLookupDictionary
òò& =
[
òò= >

glyphIndex
òò> H
]
òòH I
;
òòI J
}
ôô 
}
öö 
if
ùù 
(
ùù '
FallbackSearchQueryLookup
ùù )
==
ùù* ,
null
ùù- 1
)
ùù1 2'
FallbackSearchQueryLookup
ûû )
=
ûû* +
new
ûû, /
HashSet
ûû0 7
<
ûû7 8
int
ûû8 ;
>
ûû; <
(
ûû< =
)
ûû= >
;
ûû> ?
else
üü '
FallbackSearchQueryLookup
†† )
.
††) *
Clear
††* /
(
††/ 0
)
††0 1
;
††1 2
}
°° 	
internal
££ 
void
££ B
4InitializeGlyphPaidAdjustmentRecordsLookupDictionary
££ J
(
££J K
)
££K L
{
§§ 	
if
¶¶ 
(
¶¶ 
m_KerningTable
¶¶ 
!=
¶¶ !
null
¶¶" &
&&
¶¶' )
m_KerningTable
¶¶* 8
.
¶¶8 9
kerningPairs
¶¶9 E
!=
¶¶F H
null
¶¶I M
&&
¶¶N P
m_KerningTable
¶¶Q _
.
¶¶_ `
kerningPairs
¶¶` l
.
¶¶l m
Count
¶¶m r
>
¶¶s t
$num
¶¶u v
)
¶¶v w;
-UpgradeGlyphAdjustmentTableToFontFeatureTable
ßß =
(
ßß= >
)
ßß> ?
;
ßß? @
if
™™ 
(
™™  
m_FontFeatureTable
™™ "
.
™™" #9
+m_GlyphPairAdjustmentRecordLookupDictionary
™™# N
==
™™O Q
null
™™R V
)
™™V W 
m_FontFeatureTable
´´ "
.
´´" #9
+m_GlyphPairAdjustmentRecordLookupDictionary
´´# N
=
´´O P
new
´´Q T

Dictionary
´´U _
<
´´_ `
uint
´´` d
,
´´d e,
TMP_GlyphPairAdjustmentRecord´´f É
>´´É Ñ
(´´Ñ Ö
)´´Ö Ü
;´´Ü á
else
¨¨  
m_FontFeatureTable
≠≠ "
.
≠≠" #9
+m_GlyphPairAdjustmentRecordLookupDictionary
≠≠# N
.
≠≠N O
Clear
≠≠O T
(
≠≠T U
)
≠≠U V
;
≠≠V W
List
ØØ 
<
ØØ +
TMP_GlyphPairAdjustmentRecord
ØØ .
>
ØØ. /(
glyphPairAdjustmentRecords
ØØ0 J
=
ØØK L 
m_FontFeatureTable
ØØM _
.
ØØ_ `*
m_GlyphPairAdjustmentRecords
ØØ` |
;
ØØ| }
if
∞∞ 
(
∞∞ (
glyphPairAdjustmentRecords
∞∞ *
!=
∞∞+ -
null
∞∞. 2
)
∞∞2 3
{
±± 
for
≤≤ 
(
≤≤ 
int
≤≤ 
i
≤≤ 
=
≤≤ 
$num
≤≤ 
;
≤≤ 
i
≤≤  !
<
≤≤" #(
glyphPairAdjustmentRecords
≤≤$ >
.
≤≤> ?
Count
≤≤? D
;
≤≤D E
i
≤≤F G
++
≤≤G I
)
≤≤I J
{
≥≥ +
TMP_GlyphPairAdjustmentRecord
¥¥ 1
record
¥¥2 8
=
¥¥9 :(
glyphPairAdjustmentRecords
¥¥; U
[
¥¥U V
i
¥¥V W
]
¥¥W X
;
¥¥X Y
uint
∂∂ 
key
∂∂ 
=
∂∂ 
new
∂∂ "
GlyphPairKey
∂∂# /
(
∂∂/ 0
record
∂∂0 6
)
∂∂6 7
.
∂∂7 8
key
∂∂8 ;
;
∂∂; <
if
∏∏ 
(
∏∏ 
!
∏∏  
m_FontFeatureTable
∏∏ +
.
∏∏+ ,9
+m_GlyphPairAdjustmentRecordLookupDictionary
∏∏, W
.
∏∏W X
ContainsKey
∏∏X c
(
∏∏c d
key
∏∏d g
)
∏∏g h
)
∏∏h i 
m_FontFeatureTable
ππ *
.
ππ* +9
+m_GlyphPairAdjustmentRecordLookupDictionary
ππ+ V
.
ππV W
Add
ππW Z
(
ππZ [
key
ππ[ ^
,
ππ^ _
record
ππ` f
)
ππf g
;
ππg h
}
∫∫ 
}
ªª 
}
ºº 	
internal
ææ 
void
ææ 4
&AddSynthesizedCharactersAndFaceMetrics
ææ <
(
ææ< =
)
ææ= >
{
øø 	
Profiler
¿¿ 
.
¿¿ 
BeginSample
¿¿  
(
¿¿  !
$str
¿¿! ?
)
¿¿? @
;
¿¿@ A
if
¬¬ 
(
¬¬ #
m_AtlasPopulationMode
¬¬ %
==
¬¬& (!
AtlasPopulationMode
¬¬) <
.
¬¬< =
Dynamic
¬¬= D
)
¬¬D E

FontEngine
√√ 
.
√√ 
LoadFontFace
√√ '
(
√√' (
sourceFontFile
√√( 6
,
√√6 7

m_FaceInfo
√√8 B
.
√√B C
	pointSize
√√C L
)
√√L M
;
√√M N%
AddSynthesizedCharacter
…… #
(
……# $
$num
……$ (
,
……( )
true
……* .
)
……. /
;
……/ 0%
AddSynthesizedCharacter
ÃÃ #
(
ÃÃ# $
$num
ÃÃ$ (
,
ÃÃ( )
true
ÃÃ* .
)
ÃÃ. /
;
ÃÃ/ 0%
AddSynthesizedCharacter
œœ #
(
œœ# $
$num
œœ$ (
)
œœ( )
;
œœ) *%
AddSynthesizedCharacter
““ #
(
““# $
$num
““$ (
)
““( )
;
““) *%
AddSynthesizedCharacter
’’ #
(
’’# $
$num
’’$ (
)
’’( )
;
’’) *%
AddSynthesizedCharacter
ÿÿ #
(
ÿÿ# $
$num
ÿÿ$ *
)
ÿÿ* +
;
ÿÿ+ ,%
AddSynthesizedCharacter
€€ #
(
€€# $
$num
€€$ *
)
€€* +
;
€€+ ,%
AddSynthesizedCharacter
ﬁﬁ #
(
ﬁﬁ# $
$num
ﬁﬁ$ *
)
ﬁﬁ* +
;
ﬁﬁ+ ,%
AddSynthesizedCharacter
·· #
(
··# $
$num
··$ *
)
··* +
;
··+ ,%
AddSynthesizedCharacter
‰‰ #
(
‰‰# $
$num
‰‰$ *
)
‰‰* +
;
‰‰+ ,%
AddSynthesizedCharacter
ÁÁ #
(
ÁÁ# $
$num
ÁÁ$ *
)
ÁÁ* +
;
ÁÁ+ ,%
AddSynthesizedCharacter
ÍÍ #
(
ÍÍ# $
$num
ÍÍ$ *
)
ÍÍ* +
;
ÍÍ+ ,
if
ÌÌ 
(
ÌÌ 

m_FaceInfo
ÌÌ 
.
ÌÌ 
capLine
ÌÌ "
==
ÌÌ# %
$num
ÌÌ& '
&&
ÌÌ( *)
m_CharacterLookupDictionary
ÌÌ+ F
.
ÌÌF G
ContainsKey
ÌÌG R
(
ÌÌR S
$char
ÌÌS V
)
ÌÌV W
)
ÌÌW X
{
ÓÓ 
uint
ÔÔ 

glyphIndex
ÔÔ 
=
ÔÔ  !)
m_CharacterLookupDictionary
ÔÔ" =
[
ÔÔ= >
$char
ÔÔ> A
]
ÔÔA B
.
ÔÔB C

glyphIndex
ÔÔC M
;
ÔÔM N

m_FaceInfo
 
.
 
capLine
 "
=
# $%
m_GlyphLookupDictionary
% <
[
< =

glyphIndex
= G
]
G H
.
H I
metrics
I P
.
P Q 
horizontalBearingY
Q c
;
c d
}
ÒÒ 
if
ÙÙ 
(
ÙÙ 

m_FaceInfo
ÙÙ 
.
ÙÙ 
meanLine
ÙÙ #
==
ÙÙ$ &
$num
ÙÙ' (
&&
ÙÙ) +)
m_CharacterLookupDictionary
ÙÙ, G
.
ÙÙG H
ContainsKey
ÙÙH S
(
ÙÙS T
$char
ÙÙT W
)
ÙÙW X
)
ÙÙX Y
{
ıı 
uint
ˆˆ 

glyphIndex
ˆˆ 
=
ˆˆ  !)
m_CharacterLookupDictionary
ˆˆ" =
[
ˆˆ= >
$char
ˆˆ> A
]
ˆˆA B
.
ˆˆB C

glyphIndex
ˆˆC M
;
ˆˆM N

m_FaceInfo
˜˜ 
.
˜˜ 
meanLine
˜˜ #
=
˜˜$ %%
m_GlyphLookupDictionary
˜˜& =
[
˜˜= >

glyphIndex
˜˜> H
]
˜˜H I
.
˜˜I J
metrics
˜˜J Q
.
˜˜Q R 
horizontalBearingY
˜˜R d
;
˜˜d e
}
¯¯ 
Profiler
˙˙ 
.
˙˙ 
	EndSample
˙˙ 
(
˙˙ 
)
˙˙  
;
˙˙  !
}
˚˚ 	
void
˝˝ %
AddSynthesizedCharacter
˝˝ $
(
˝˝$ %
uint
˝˝% )
unicode
˝˝* 1
,
˝˝1 2
bool
˝˝3 7
addImmediately
˝˝8 F
=
˝˝G H
false
˝˝I N
)
˝˝N O
{
˛˛ 	
if
ÄÄ 
(
ÄÄ )
m_CharacterLookupDictionary
ÄÄ +
.
ÄÄ+ ,
ContainsKey
ÄÄ, 7
(
ÄÄ7 8
unicode
ÄÄ8 ?
)
ÄÄ? @
)
ÄÄ@ A
return
ÅÅ 
;
ÅÅ 
Glyph
ÉÉ 
glyph
ÉÉ 
;
ÉÉ 
if
ÖÖ 
(
ÖÖ #
m_AtlasPopulationMode
ÖÖ %
==
ÖÖ& (!
AtlasPopulationMode
ÖÖ) <
.
ÖÖ< =
Dynamic
ÖÖ= D
)
ÖÖD E
{
ÜÜ 
if
àà 
(
àà 

FontEngine
àà 
.
àà 
GetGlyphIndex
àà ,
(
àà, -
unicode
àà- 4
)
àà4 5
!=
àà6 8
$num
àà9 :
)
àà: ;
{
ââ 
if
ää 
(
ää 
addImmediately
ää &
==
ää' )
false
ää* /
)
ää/ 0
return
ãã 
;
ãã 
GlyphLoadFlags
èè "
glyphLoadFlags
èè# 1
=
èè2 3
(
èè4 5
(
èè5 6
GlyphRasterModes
èè6 F
)
èèF G
m_AtlasRenderMode
èèG X
&
èèY Z
GlyphRasterModes
èè[ k
.
èèk l%
RASTER_MODE_NO_HINTINGèèl Ç
)èèÇ É
==èèÑ Ü 
GlyphRasterModesèèá ó
.èèó ò&
RASTER_MODE_NO_HINTINGèèò Æ
?
êê 
GlyphLoadFlags
êê (
.
êê( )
LOAD_NO_BITMAP
êê) 7
|
êê8 9
GlyphLoadFlags
êê: H
.
êêH I
LOAD_NO_HINTING
êêI X
:
ëë 
GlyphLoadFlags
ëë (
.
ëë( )
LOAD_NO_BITMAP
ëë) 7
;
ëë7 8
if
ìì 
(
ìì 

FontEngine
ìì "
.
ìì" #)
TryGetGlyphWithUnicodeValue
ìì# >
(
ìì> ?
unicode
ìì? F
,
ììF G
glyphLoadFlags
ììH V
,
ììV W
out
ììX [
glyph
ìì\ a
)
ììa b
)
ììb c)
m_CharacterLookupDictionary
îî 3
.
îî3 4
Add
îî4 7
(
îî7 8
unicode
îî8 ?
,
îî? @
new
îîA D
TMP_Character
îîE R
(
îîR S
unicode
îîS Z
,
îîZ [
this
îî\ `
,
îî` a
glyph
îîb g
)
îîg h
)
îîh i
;
îîi j
return
ññ 
;
ññ 
}
óó 
}
òò 
glyph
ùù 
=
ùù 
new
ùù 
Glyph
ùù 
(
ùù 
$num
ùù 
,
ùù  
new
ùù! $
GlyphMetrics
ùù% 1
(
ùù1 2
$num
ùù2 3
,
ùù3 4
$num
ùù5 6
,
ùù6 7
$num
ùù8 9
,
ùù9 :
$num
ùù; <
,
ùù< =
$num
ùù> ?
)
ùù? @
,
ùù@ A
	GlyphRect
ùùB K
.
ùùK L
zero
ùùL P
,
ùùP Q
$num
ùùR V
,
ùùV W
$num
ùùX Y
)
ùùY Z
;
ùùZ [)
m_CharacterLookupDictionary
ûû '
.
ûû' (
Add
ûû( +
(
ûû+ ,
unicode
ûû, 3
,
ûû3 4
new
ûû5 8
TMP_Character
ûû9 F
(
ûûF G
unicode
ûûG N
,
ûûN O
this
ûûP T
,
ûûT U
glyph
ûûV [
)
ûû[ \
)
ûû\ ]
;
ûû] ^
}
üü 	
internal
°° 
HashSet
°° 
<
°° 
int
°° 
>
°° '
FallbackSearchQueryLookup
°° 7
=
°°8 9
new
°°: =
HashSet
°°> E
<
°°E F
int
°°F I
>
°°I J
(
°°J K
)
°°K L
;
°°L M
internal
££ 
void
££ '
AddCharacterToLookupCache
££ /
(
££/ 0
uint
££0 4
unicode
££5 <
,
££< =
TMP_Character
££> K
	character
££L U
)
££U V
{
§§ 	)
m_CharacterLookupDictionary
•• '
.
••' (
Add
••( +
(
••+ ,
unicode
••, 3
,
••3 4
	character
••5 >
)
••> ?
;
••? @'
FallbackSearchQueryLookup
®® %
.
®®% &
Add
®®& )
(
®®) *
	character
®®* 3
.
®®3 4
	textAsset
®®4 =
.
®®= >

instanceID
®®> H
)
®®H I
;
®®I J
}
©© 	
internal
ÆÆ 
void
ÆÆ  
SortCharacterTable
ÆÆ (
(
ÆÆ( )
)
ÆÆ) *
{
ØØ 	
if
∞∞ 
(
∞∞ 
m_CharacterTable
∞∞  
!=
∞∞! #
null
∞∞$ (
&&
∞∞) +
m_CharacterTable
∞∞, <
.
∞∞< =
Count
∞∞= B
>
∞∞C D
$num
∞∞E F
)
∞∞F G
m_CharacterTable
±±  
=
±±! "
m_CharacterTable
±±# 3
.
±±3 4
OrderBy
±±4 ;
(
±±; <
c
±±< =
=>
±±> @
c
±±A B
.
±±B C
unicode
±±C J
)
±±J K
.
±±K L
ToList
±±L R
(
±±R S
)
±±S T
;
±±T U
}
≤≤ 	
internal
∑∑ 
void
∑∑ 
SortGlyphTable
∑∑ $
(
∑∑$ %
)
∑∑% &
{
∏∏ 	
if
ππ 
(
ππ 
m_GlyphTable
ππ 
!=
ππ 
null
ππ  $
&&
ππ% '
m_GlyphTable
ππ( 4
.
ππ4 5
Count
ππ5 :
>
ππ; <
$num
ππ= >
)
ππ> ?
m_GlyphTable
∫∫ 
=
∫∫ 
m_GlyphTable
∫∫ +
.
∫∫+ ,
OrderBy
∫∫, 3
(
∫∫3 4
c
∫∫4 5
=>
∫∫6 8
c
∫∫9 :
.
∫∫: ;
index
∫∫; @
)
∫∫@ A
.
∫∫A B
ToList
∫∫B H
(
∫∫H I
)
∫∫I J
;
∫∫J K
}
ªª 	
internal
ΩΩ 
void
ΩΩ "
SortFontFeatureTable
ΩΩ *
(
ΩΩ* +
)
ΩΩ+ ,
{
ææ 	 
m_FontFeatureTable
øø 
.
øø ,
SortGlyphPairAdjustmentRecords
øø =
(
øø= >
)
øø> ?
;
øø? @
}
¿¿ 	
internal
≈≈ 
void
≈≈ 
SortAllTables
≈≈ #
(
≈≈# $
)
≈≈$ %
{
∆∆ 	
SortGlyphTable
«« 
(
«« 
)
«« 
;
««  
SortCharacterTable
»» 
(
»» 
)
»»  
;
»»  !"
SortFontFeatureTable
……  
(
……  !
)
……! "
;
……" #
}
   	
private
œœ 
static
œœ 
HashSet
œœ 
<
œœ 
int
œœ "
>
œœ" #'
k_SearchedFontAssetLookup
œœ$ =
;
œœ= >
public
÷÷ 
bool
÷÷ 
HasCharacter
÷÷  
(
÷÷  !
int
÷÷! $
	character
÷÷% .
)
÷÷. /
{
◊◊ 	
if
ÿÿ 
(
ÿÿ )
m_CharacterLookupDictionary
ÿÿ +
==
ÿÿ, .
null
ÿÿ/ 3
)
ÿÿ3 4
return
ŸŸ 
false
ŸŸ 
;
ŸŸ 
if
€€ 
(
€€ )
m_CharacterLookupDictionary
€€ +
.
€€+ ,
ContainsKey
€€, 7
(
€€7 8
(
€€8 9
uint
€€9 =
)
€€= >
	character
€€> G
)
€€G H
)
€€H I
return
‹‹ 
true
‹‹ 
;
‹‹ 
return
ﬁﬁ 
false
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 	
public
ËË 
bool
ËË 
HasCharacter
ËË  
(
ËË  !
char
ËË! %
	character
ËË& /
,
ËË/ 0
bool
ËË1 5
searchFallbacks
ËË6 E
=
ËËF G
false
ËËH M
,
ËËM N
bool
ËËO S
tryAddCharacter
ËËT c
=
ËËd e
false
ËËf k
)
ËËk l
{
ÈÈ 	
if
ÎÎ 
(
ÎÎ )
m_CharacterLookupDictionary
ÎÎ +
==
ÎÎ, .
null
ÎÎ/ 3
)
ÎÎ3 4
{
ÏÏ %
ReadFontAssetDefinition
ÌÌ '
(
ÌÌ' (
)
ÌÌ( )
;
ÌÌ) *
if
ÔÔ 
(
ÔÔ )
m_CharacterLookupDictionary
ÔÔ /
==
ÔÔ0 2
null
ÔÔ3 7
)
ÔÔ7 8
return
 
false
  
;
  !
}
ÒÒ 
if
ÙÙ 
(
ÙÙ )
m_CharacterLookupDictionary
ÙÙ +
.
ÙÙ+ ,
ContainsKey
ÙÙ, 7
(
ÙÙ7 8
	character
ÙÙ8 A
)
ÙÙA B
)
ÙÙB C
return
ıı 
true
ıı 
;
ıı 
if
¯¯ 
(
¯¯ 
tryAddCharacter
¯¯ 
&&
¯¯  "#
m_AtlasPopulationMode
¯¯# 8
==
¯¯9 ;!
AtlasPopulationMode
¯¯< O
.
¯¯O P
Dynamic
¯¯P W
)
¯¯W X
{
˘˘ 
TMP_Character
˙˙ 
returnedCharacter
˙˙ /
;
˙˙/ 0
if
¸¸ 
(
¸¸ %
TryAddCharacterInternal
¸¸ +
(
¸¸+ ,
	character
¸¸, 5
,
¸¸5 6
out
¸¸7 :
returnedCharacter
¸¸; L
)
¸¸L M
)
¸¸M N
return
˝˝ 
true
˝˝ 
;
˝˝  
}
˛˛ 
if
ÄÄ 
(
ÄÄ 
searchFallbacks
ÄÄ 
)
ÄÄ  
{
ÅÅ 
if
ÉÉ 
(
ÉÉ '
k_SearchedFontAssetLookup
ÉÉ -
==
ÉÉ. 0
null
ÉÉ1 5
)
ÉÉ5 6'
k_SearchedFontAssetLookup
ÑÑ -
=
ÑÑ. /
new
ÑÑ0 3
HashSet
ÑÑ4 ;
<
ÑÑ; <
int
ÑÑ< ?
>
ÑÑ? @
(
ÑÑ@ A
)
ÑÑA B
;
ÑÑB C
else
ÖÖ '
k_SearchedFontAssetLookup
ÜÜ -
.
ÜÜ- .
Clear
ÜÜ. 3
(
ÜÜ3 4
)
ÜÜ4 5
;
ÜÜ5 6'
k_SearchedFontAssetLookup
ââ )
.
ââ) *
Add
ââ* -
(
ââ- .
GetInstanceID
ââ. ;
(
ââ; <
)
ââ< =
)
ââ= >
;
ââ> ?
if
åå 
(
åå $
fallbackFontAssetTable
åå *
!=
åå+ -
null
åå. 2
&&
åå3 5$
fallbackFontAssetTable
åå6 L
.
ååL M
Count
ååM R
>
ååS T
$num
ååU V
)
ååV W
{
çç 
for
éé 
(
éé 
int
éé 
i
éé 
=
éé  
$num
éé! "
;
éé" #
i
éé$ %
<
éé& '$
fallbackFontAssetTable
éé( >
.
éé> ?
Count
éé? D
&&
ééE G$
fallbackFontAssetTable
ééH ^
[
éé^ _
i
éé_ `
]
éé` a
!=
ééb d
null
éée i
;
ééi j
i
éék l
++
éél n
)
één o
{
èè 
TMP_FontAsset
êê %
fallback
êê& .
=
êê/ 0$
fallbackFontAssetTable
êê1 G
[
êêG H
i
êêH I
]
êêI J
;
êêJ K
int
ëë 

fallbackID
ëë &
=
ëë' (
fallback
ëë) 1
.
ëë1 2
GetInstanceID
ëë2 ?
(
ëë? @
)
ëë@ A
;
ëëA B
if
îî 
(
îî '
k_SearchedFontAssetLookup
îî 5
.
îî5 6
Add
îî6 9
(
îî9 :

fallbackID
îî: D
)
îîD E
)
îîE F
{
ïï 
if
ññ 
(
ññ  
fallback
ññ  (
.
ññ( )#
HasCharacter_Internal
ññ) >
(
ññ> ?
	character
ññ? H
,
ññH I
true
ññJ N
,
ññN O
tryAddCharacter
ññP _
)
ññ_ `
)
ññ` a
return
óó  &
true
óó' +
;
óó+ ,
}
òò 
}
ôô 
}
öö 
if
ùù 
(
ùù 
TMP_Settings
ùù  
.
ùù  ! 
fallbackFontAssets
ùù! 3
!=
ùù4 6
null
ùù7 ;
&&
ùù< >
TMP_Settings
ùù? K
.
ùùK L 
fallbackFontAssets
ùùL ^
.
ùù^ _
Count
ùù_ d
>
ùùe f
$num
ùùg h
)
ùùh i
{
ûû 
for
üü 
(
üü 
int
üü 
i
üü 
=
üü  
$num
üü! "
;
üü" #
i
üü$ %
<
üü& '
TMP_Settings
üü( 4
.
üü4 5 
fallbackFontAssets
üü5 G
.
üüG H
Count
üüH M
&&
üüN P
TMP_Settings
üüQ ]
.
üü] ^ 
fallbackFontAssets
üü^ p
[
üüp q
i
üüq r
]
üür s
!=
üüt v
null
üüw {
;
üü{ |
i
üü} ~
++üü~ Ä
)üüÄ Å
{
†† 
TMP_FontAsset
°° %
fallback
°°& .
=
°°/ 0
TMP_Settings
°°1 =
.
°°= > 
fallbackFontAssets
°°> P
[
°°P Q
i
°°Q R
]
°°R S
;
°°S T
int
¢¢ 

fallbackID
¢¢ &
=
¢¢' (
fallback
¢¢) 1
.
¢¢1 2
GetInstanceID
¢¢2 ?
(
¢¢? @
)
¢¢@ A
;
¢¢A B
if
•• 
(
•• '
k_SearchedFontAssetLookup
•• 5
.
••5 6
Add
••6 9
(
••9 :

fallbackID
••: D
)
••D E
)
••E F
{
¶¶ 
if
ßß 
(
ßß  
fallback
ßß  (
.
ßß( )#
HasCharacter_Internal
ßß) >
(
ßß> ?
	character
ßß? H
,
ßßH I
true
ßßJ N
,
ßßN O
tryAddCharacter
ßßP _
)
ßß_ `
)
ßß` a
return
®®  &
true
®®' +
;
®®+ ,
}
©© 
}
™™ 
}
´´ 
if
ÆÆ 
(
ÆÆ 
TMP_Settings
ÆÆ  
.
ÆÆ  !
defaultFontAsset
ÆÆ! 1
!=
ÆÆ2 4
null
ÆÆ5 9
)
ÆÆ9 :
{
ØØ 
TMP_FontAsset
∞∞ !
fallback
∞∞" *
=
∞∞+ ,
TMP_Settings
∞∞- 9
.
∞∞9 :
defaultFontAsset
∞∞: J
;
∞∞J K
int
±± 

fallbackID
±± "
=
±±# $
fallback
±±% -
.
±±- .
GetInstanceID
±±. ;
(
±±; <
)
±±< =
;
±±= >
if
¥¥ 
(
¥¥ '
k_SearchedFontAssetLookup
¥¥ 1
.
¥¥1 2
Add
¥¥2 5
(
¥¥5 6

fallbackID
¥¥6 @
)
¥¥@ A
)
¥¥A B
{
µµ 
if
∂∂ 
(
∂∂ 
fallback
∂∂ $
.
∂∂$ %#
HasCharacter_Internal
∂∂% :
(
∂∂: ;
	character
∂∂; D
,
∂∂D E
true
∂∂F J
,
∂∂J K
tryAddCharacter
∂∂L [
)
∂∂[ \
)
∂∂\ ]
return
∑∑ "
true
∑∑# '
;
∑∑' (
}
∏∏ 
}
ππ 
}
∫∫ 
return
ºº 
false
ºº 
;
ºº 
}
ΩΩ 	
bool
»» #
HasCharacter_Internal
»» "
(
»»" #
uint
»»# '
	character
»»( 1
,
»»1 2
bool
»»3 7
searchFallbacks
»»8 G
=
»»H I
false
»»J O
,
»»O P
bool
»»Q U
tryAddCharacter
»»V e
=
»»f g
false
»»h m
)
»»m n
{
…… 	
if
ÀÀ 
(
ÀÀ )
m_CharacterLookupDictionary
ÀÀ +
==
ÀÀ, .
null
ÀÀ/ 3
)
ÀÀ3 4
{
ÃÃ %
ReadFontAssetDefinition
ÕÕ '
(
ÕÕ' (
)
ÕÕ( )
;
ÕÕ) *
if
œœ 
(
œœ )
m_CharacterLookupDictionary
œœ /
==
œœ0 2
null
œœ3 7
)
œœ7 8
return
–– 
false
––  
;
––  !
}
—— 
if
‘‘ 
(
‘‘ )
m_CharacterLookupDictionary
‘‘ +
.
‘‘+ ,
ContainsKey
‘‘, 7
(
‘‘7 8
	character
‘‘8 A
)
‘‘A B
)
‘‘B C
return
’’ 
true
’’ 
;
’’ 
if
ÿÿ 
(
ÿÿ 
tryAddCharacter
ÿÿ 
&&
ÿÿ  "!
atlasPopulationMode
ÿÿ# 6
==
ÿÿ7 9!
AtlasPopulationMode
ÿÿ: M
.
ÿÿM N
Dynamic
ÿÿN U
)
ÿÿU V
{
ŸŸ 
TMP_Character
⁄⁄ 
returnedCharacter
⁄⁄ /
;
⁄⁄/ 0
if
‹‹ 
(
‹‹ %
TryAddCharacterInternal
‹‹ +
(
‹‹+ ,
	character
‹‹, 5
,
‹‹5 6
out
‹‹7 :
returnedCharacter
‹‹; L
)
‹‹L M
)
‹‹M N
return
›› 
true
›› 
;
››  
}
ﬁﬁ 
if
‡‡ 
(
‡‡ 
searchFallbacks
‡‡ 
)
‡‡  
{
·· 
if
„„ 
(
„„ $
fallbackFontAssetTable
„„ *
==
„„+ -
null
„„. 2
||
„„3 5$
fallbackFontAssetTable
„„6 L
.
„„L M
Count
„„M R
==
„„S U
$num
„„V W
)
„„W X
return
‰‰ 
false
‰‰  
;
‰‰  !
for
ÊÊ 
(
ÊÊ 
int
ÊÊ 
i
ÊÊ 
=
ÊÊ 
$num
ÊÊ 
;
ÊÊ 
i
ÊÊ  !
<
ÊÊ" #$
fallbackFontAssetTable
ÊÊ$ :
.
ÊÊ: ;
Count
ÊÊ; @
&&
ÊÊA C$
fallbackFontAssetTable
ÊÊD Z
[
ÊÊZ [
i
ÊÊ[ \
]
ÊÊ\ ]
!=
ÊÊ^ `
null
ÊÊa e
;
ÊÊe f
i
ÊÊg h
++
ÊÊh j
)
ÊÊj k
{
ÁÁ 
TMP_FontAsset
ËË !
fallback
ËË" *
=
ËË+ ,$
fallbackFontAssetTable
ËË- C
[
ËËC D
i
ËËD E
]
ËËE F
;
ËËF G
int
ÈÈ 

fallbackID
ÈÈ "
=
ÈÈ# $
fallback
ÈÈ% -
.
ÈÈ- .
GetInstanceID
ÈÈ. ;
(
ÈÈ; <
)
ÈÈ< =
;
ÈÈ= >
if
ÏÏ 
(
ÏÏ '
k_SearchedFontAssetLookup
ÏÏ 1
.
ÏÏ1 2
Add
ÏÏ2 5
(
ÏÏ5 6

fallbackID
ÏÏ6 @
)
ÏÏ@ A
)
ÏÏA B
{
ÌÌ 
if
ÓÓ 
(
ÓÓ 
fallback
ÓÓ $
.
ÓÓ$ %#
HasCharacter_Internal
ÓÓ% :
(
ÓÓ: ;
	character
ÓÓ; D
,
ÓÓD E
true
ÓÓF J
,
ÓÓJ K
tryAddCharacter
ÓÓL [
)
ÓÓ[ \
)
ÓÓ\ ]
return
ÔÔ "
true
ÔÔ# '
;
ÔÔ' (
}
 
}
ÒÒ 
}
ÚÚ 
return
ÙÙ 
false
ÙÙ 
;
ÙÙ 
}
ıı 	
public
˛˛ 
bool
˛˛ 
HasCharacters
˛˛ !
(
˛˛! "
string
˛˛" (
text
˛˛) -
,
˛˛- .
out
˛˛/ 2
List
˛˛3 7
<
˛˛7 8
char
˛˛8 <
>
˛˛< =
missingCharacters
˛˛> O
)
˛˛O P
{
ˇˇ 	
if
ÄÄ 
(
ÄÄ )
m_CharacterLookupDictionary
ÄÄ +
==
ÄÄ, .
null
ÄÄ/ 3
)
ÄÄ3 4
{
ÅÅ 
missingCharacters
ÇÇ !
=
ÇÇ" #
null
ÇÇ$ (
;
ÇÇ( )
return
ÉÉ 
false
ÉÉ 
;
ÉÉ 
}
ÑÑ 
missingCharacters
ÜÜ 
=
ÜÜ 
new
ÜÜ  #
List
ÜÜ$ (
<
ÜÜ( )
char
ÜÜ) -
>
ÜÜ- .
(
ÜÜ. /
)
ÜÜ/ 0
;
ÜÜ0 1
for
àà 
(
àà 
int
àà 
i
àà 
=
àà 
$num
àà 
;
àà 
i
àà 
<
àà 
text
àà  $
.
àà$ %
Length
àà% +
;
àà+ ,
i
àà- .
++
àà. 0
)
àà0 1
{
ââ 
if
ää 
(
ää 
!
ää )
m_CharacterLookupDictionary
ää 0
.
ää0 1
ContainsKey
ää1 <
(
ää< =
text
ää= A
[
ääA B
i
ääB C
]
ääC D
)
ääD E
)
ääE F
missingCharacters
ãã %
.
ãã% &
Add
ãã& )
(
ãã) *
text
ãã* .
[
ãã. /
i
ãã/ 0
]
ãã0 1
)
ãã1 2
;
ãã2 3
}
åå 
if
éé 
(
éé 
missingCharacters
éé !
.
éé! "
Count
éé" '
==
éé( *
$num
éé+ ,
)
éé, -
return
èè 
true
èè 
;
èè 
return
ëë 
false
ëë 
;
ëë 
}
íí 	
public
úú 
bool
úú 
HasCharacters
úú !
(
úú! "
string
úú" (
text
úú) -
,
úú- .
out
úú/ 2
uint
úú3 7
[
úú7 8
]
úú8 9
missingCharacters
úú: K
,
úúK L
bool
úúM Q
searchFallbacks
úúR a
=
úúb c
false
úúd i
,
úúi j
bool
úúk o
tryAddCharacter
úúp 
=úúÄ Å
falseúúÇ á
)úúá à
{
ùù 	
missingCharacters
ûû 
=
ûû 
null
ûû  $
;
ûû$ %
if
°° 
(
°° )
m_CharacterLookupDictionary
°° +
==
°°, .
null
°°/ 3
)
°°3 4
{
¢¢ %
ReadFontAssetDefinition
££ '
(
££' (
)
££( )
;
££) *
if
•• 
(
•• )
m_CharacterLookupDictionary
•• /
==
••0 2
null
••3 7
)
••7 8
return
¶¶ 
false
¶¶  
;
¶¶  !
}
ßß $
s_MissingCharacterList
™™ "
.
™™" #
Clear
™™# (
(
™™( )
)
™™) *
;
™™* +
for
¨¨ 
(
¨¨ 
int
¨¨ 
i
¨¨ 
=
¨¨ 
$num
¨¨ 
;
¨¨ 
i
¨¨ 
<
¨¨ 
text
¨¨  $
.
¨¨$ %
Length
¨¨% +
;
¨¨+ ,
i
¨¨- .
++
¨¨. 0
)
¨¨0 1
{
≠≠ 
bool
ÆÆ  
isMissingCharacter
ÆÆ '
=
ÆÆ( )
true
ÆÆ* .
;
ÆÆ. /
uint
ØØ 
	character
ØØ 
=
ØØ  
text
ØØ! %
[
ØØ% &
i
ØØ& '
]
ØØ' (
;
ØØ( )
if
±± 
(
±± )
m_CharacterLookupDictionary
±± /
.
±±/ 0
ContainsKey
±±0 ;
(
±±; <
	character
±±< E
)
±±E F
)
±±F G
continue
≤≤ 
;
≤≤ 
if
µµ 
(
µµ 
tryAddCharacter
µµ #
&&
µµ$ &!
atlasPopulationMode
µµ' :
==
µµ; =!
AtlasPopulationMode
µµ> Q
.
µµQ R
Dynamic
µµR Y
)
µµY Z
{
∂∂ 
TMP_Character
∑∑ !
returnedCharacter
∑∑" 3
;
∑∑3 4
if
ππ 
(
ππ %
TryAddCharacterInternal
ππ /
(
ππ/ 0
	character
ππ0 9
,
ππ9 :
out
ππ; >
returnedCharacter
ππ? P
)
ππP Q
)
ππQ R
continue
∫∫  
;
∫∫  !
}
ªª 
if
ΩΩ 
(
ΩΩ 
searchFallbacks
ΩΩ #
)
ΩΩ# $
{
ææ 
if
¿¿ 
(
¿¿ '
k_SearchedFontAssetLookup
¿¿ 1
==
¿¿2 4
null
¿¿5 9
)
¿¿9 :'
k_SearchedFontAssetLookup
¡¡ 1
=
¡¡2 3
new
¡¡4 7
HashSet
¡¡8 ?
<
¡¡? @
int
¡¡@ C
>
¡¡C D
(
¡¡D E
)
¡¡E F
;
¡¡F G
else
¬¬ '
k_SearchedFontAssetLookup
√√ 1
.
√√1 2
Clear
√√2 7
(
√√7 8
)
√√8 9
;
√√9 :'
k_SearchedFontAssetLookup
∆∆ -
.
∆∆- .
Add
∆∆. 1
(
∆∆1 2
GetInstanceID
∆∆2 ?
(
∆∆? @
)
∆∆@ A
)
∆∆A B
;
∆∆B C
if
…… 
(
…… $
fallbackFontAssetTable
…… .
!=
……/ 1
null
……2 6
&&
……7 9$
fallbackFontAssetTable
……: P
.
……P Q
Count
……Q V
>
……W X
$num
……Y Z
)
……Z [
{
   
for
ÀÀ 
(
ÀÀ 
int
ÀÀ  
j
ÀÀ! "
=
ÀÀ# $
$num
ÀÀ% &
;
ÀÀ& '
j
ÀÀ( )
<
ÀÀ* +$
fallbackFontAssetTable
ÀÀ, B
.
ÀÀB C
Count
ÀÀC H
&&
ÀÀI K$
fallbackFontAssetTable
ÀÀL b
[
ÀÀb c
j
ÀÀc d
]
ÀÀd e
!=
ÀÀf h
null
ÀÀi m
;
ÀÀm n
j
ÀÀo p
++
ÀÀp r
)
ÀÀr s
{
ÃÃ 
TMP_FontAsset
ÕÕ )
fallback
ÕÕ* 2
=
ÕÕ3 4$
fallbackFontAssetTable
ÕÕ5 K
[
ÕÕK L
j
ÕÕL M
]
ÕÕM N
;
ÕÕN O
int
ŒŒ 

fallbackID
ŒŒ  *
=
ŒŒ+ ,
fallback
ŒŒ- 5
.
ŒŒ5 6
GetInstanceID
ŒŒ6 C
(
ŒŒC D
)
ŒŒD E
;
ŒŒE F
if
—— 
(
——  '
k_SearchedFontAssetLookup
——  9
.
——9 :
Add
——: =
(
——= >

fallbackID
——> H
)
——H I
)
——I J
{
““ 
if
””  "
(
””# $
fallback
””$ ,
.
””, -#
HasCharacter_Internal
””- B
(
””B C
	character
””C L
,
””L M
true
””N R
,
””R S
tryAddCharacter
””T c
)
””c d
==
””e g
false
””h m
)
””m n
continue
‘‘$ ,
;
‘‘, - 
isMissingCharacter
÷÷  2
=
÷÷3 4
false
÷÷5 :
;
÷÷: ;
break
◊◊  %
;
◊◊% &
}
ÿÿ 
}
ŸŸ 
}
⁄⁄ 
if
›› 
(
››  
isMissingCharacter
›› *
&&
››+ -
TMP_Settings
››. :
.
››: ; 
fallbackFontAssets
››; M
!=
››N P
null
››Q U
&&
››V X
TMP_Settings
››Y e
.
››e f 
fallbackFontAssets
››f x
.
››x y
Count
››y ~
>›› Ä
$num››Å Ç
)››Ç É
{
ﬁﬁ 
for
ﬂﬂ 
(
ﬂﬂ 
int
ﬂﬂ  
j
ﬂﬂ! "
=
ﬂﬂ# $
$num
ﬂﬂ% &
;
ﬂﬂ& '
j
ﬂﬂ( )
<
ﬂﬂ* +
TMP_Settings
ﬂﬂ, 8
.
ﬂﬂ8 9 
fallbackFontAssets
ﬂﬂ9 K
.
ﬂﬂK L
Count
ﬂﬂL Q
&&
ﬂﬂR T
TMP_Settings
ﬂﬂU a
.
ﬂﬂa b 
fallbackFontAssets
ﬂﬂb t
[
ﬂﬂt u
j
ﬂﬂu v
]
ﬂﬂv w
!=
ﬂﬂx z
null
ﬂﬂ{ 
;ﬂﬂ Ä
jﬂﬂÅ Ç
++ﬂﬂÇ Ñ
)ﬂﬂÑ Ö
{
‡‡ 
TMP_FontAsset
·· )
fallback
··* 2
=
··3 4
TMP_Settings
··5 A
.
··A B 
fallbackFontAssets
··B T
[
··T U
j
··U V
]
··V W
;
··W X
int
‚‚ 

fallbackID
‚‚  *
=
‚‚+ ,
fallback
‚‚- 5
.
‚‚5 6
GetInstanceID
‚‚6 C
(
‚‚C D
)
‚‚D E
;
‚‚E F
if
ÂÂ 
(
ÂÂ  '
k_SearchedFontAssetLookup
ÂÂ  9
.
ÂÂ9 :
Add
ÂÂ: =
(
ÂÂ= >

fallbackID
ÂÂ> H
)
ÂÂH I
)
ÂÂI J
{
ÊÊ 
if
ÁÁ  "
(
ÁÁ# $
fallback
ÁÁ$ ,
.
ÁÁ, -#
HasCharacter_Internal
ÁÁ- B
(
ÁÁB C
	character
ÁÁC L
,
ÁÁL M
true
ÁÁN R
,
ÁÁR S
tryAddCharacter
ÁÁT c
)
ÁÁc d
==
ÁÁe g
false
ÁÁh m
)
ÁÁm n
continue
ËË$ ,
;
ËË, - 
isMissingCharacter
ÍÍ  2
=
ÍÍ3 4
false
ÍÍ5 :
;
ÍÍ: ;
break
ÎÎ  %
;
ÎÎ% &
}
ÏÏ 
}
ÌÌ 
}
ÓÓ 
if
ÒÒ 
(
ÒÒ  
isMissingCharacter
ÒÒ *
&&
ÒÒ+ -
TMP_Settings
ÒÒ. :
.
ÒÒ: ;
defaultFontAsset
ÒÒ; K
!=
ÒÒL N
null
ÒÒO S
)
ÒÒS T
{
ÚÚ 
TMP_FontAsset
ÛÛ %
fallback
ÛÛ& .
=
ÛÛ/ 0
TMP_Settings
ÛÛ1 =
.
ÛÛ= >
defaultFontAsset
ÛÛ> N
;
ÛÛN O
int
ÙÙ 

fallbackID
ÙÙ &
=
ÙÙ' (
fallback
ÙÙ) 1
.
ÙÙ1 2
GetInstanceID
ÙÙ2 ?
(
ÙÙ? @
)
ÙÙ@ A
;
ÙÙA B
if
˜˜ 
(
˜˜ '
k_SearchedFontAssetLookup
˜˜ 5
.
˜˜5 6
Add
˜˜6 9
(
˜˜9 :

fallbackID
˜˜: D
)
˜˜D E
)
˜˜E F
{
¯¯ 
if
˘˘ 
(
˘˘  
fallback
˘˘  (
.
˘˘( )#
HasCharacter_Internal
˘˘) >
(
˘˘> ?
	character
˘˘? H
,
˘˘H I
true
˘˘J N
,
˘˘N O
tryAddCharacter
˘˘P _
)
˘˘_ `
)
˘˘` a 
isMissingCharacter
˙˙  2
=
˙˙3 4
false
˙˙5 :
;
˙˙: ;
}
˚˚ 
}
¸¸ 
}
˝˝ 
if
ˇˇ 
(
ˇˇ  
isMissingCharacter
ˇˇ &
)
ˇˇ& '$
s_MissingCharacterList
Ä	Ä	 *
.
Ä	Ä	* +
Add
Ä	Ä	+ .
(
Ä	Ä	. /
	character
Ä	Ä	/ 8
)
Ä	Ä	8 9
;
Ä	Ä	9 :
}
Å	Å	 
if
É	É	 
(
É	É	 $
s_MissingCharacterList
É	É	 &
.
É	É	& '
Count
É	É	' ,
>
É	É	- .
$num
É	É	/ 0
)
É	É	0 1
{
Ñ	Ñ	 
missingCharacters
Ö	Ö	 !
=
Ö	Ö	" #$
s_MissingCharacterList
Ö	Ö	$ :
.
Ö	Ö	: ;
ToArray
Ö	Ö	; B
(
Ö	Ö	B C
)
Ö	Ö	C D
;
Ö	Ö	D E
return
Ü	Ü	 
false
Ü	Ü	 
;
Ü	Ü	 
}
á	á	 
return
â	â	 
true
â	â	 
;
â	â	 
}
ä	ä	 	
public
í	í	 
bool
í	í	 
HasCharacters
í	í	 !
(
í	í	! "
string
í	í	" (
text
í	í	) -
)
í	í	- .
{
ì	ì	 	
if
î	î	 
(
î	î	 )
m_CharacterLookupDictionary
î	î	 +
==
î	î	, .
null
î	î	/ 3
)
î	î	3 4
return
ï	ï	 
false
ï	ï	 
;
ï	ï	 
for
ó	ó	 
(
ó	ó	 
int
ó	ó	 
i
ó	ó	 
=
ó	ó	 
$num
ó	ó	 
;
ó	ó	 
i
ó	ó	 
<
ó	ó	 
text
ó	ó	  $
.
ó	ó	$ %
Length
ó	ó	% +
;
ó	ó	+ ,
i
ó	ó	- .
++
ó	ó	. 0
)
ó	ó	0 1
{
ò	ò	 
if
ô	ô	 
(
ô	ô	 
!
ô	ô	 )
m_CharacterLookupDictionary
ô	ô	 0
.
ô	ô	0 1
ContainsKey
ô	ô	1 <
(
ô	ô	< =
text
ô	ô	= A
[
ô	ô	A B
i
ô	ô	B C
]
ô	ô	C D
)
ô	ô	D E
)
ô	ô	E F
return
ö	ö	 
false
ö	ö	  
;
ö	ö	  !
}
õ	õ	 
return
ù	ù	 
true
ù	ù	 
;
ù	ù	 
}
û	û	 	
public
¶	¶	 
static
¶	¶	 
string
¶	¶	 
GetCharacters
¶	¶	 *
(
¶	¶	* +
TMP_FontAsset
¶	¶	+ 8
	fontAsset
¶	¶	9 B
)
¶	¶	B C
{
ß	ß	 	
string
®	®	 

characters
®	®	 
=
®	®	 
string
®	®	  &
.
®	®	& '
Empty
®	®	' ,
;
®	®	, -
for
™	™	 
(
™	™	 
int
™	™	 
i
™	™	 
=
™	™	 
$num
™	™	 
;
™	™	 
i
™	™	 
<
™	™	 
	fontAsset
™	™	  )
.
™	™	) *
characterTable
™	™	* 8
.
™	™	8 9
Count
™	™	9 >
;
™	™	> ?
i
™	™	@ A
++
™	™	A C
)
™	™	C D
{
´	´	 

characters
¨	¨	 
+=
¨	¨	 
(
¨	¨	 
char
¨	¨	 #
)
¨	¨	# $
	fontAsset
¨	¨	$ -
.
¨	¨	- .
characterTable
¨	¨	. <
[
¨	¨	< =
i
¨	¨	= >
]
¨	¨	> ?
.
¨	¨	? @
unicode
¨	¨	@ G
;
¨	¨	G H
}
≠	≠	 
return
Ø	Ø	 

characters
Ø	Ø	 
;
Ø	Ø	 
}
∞	∞	 	
public
∏	∏	 
static
∏	∏	 
int
∏	∏	 
[
∏	∏	 
]
∏	∏	  
GetCharactersArray
∏	∏	 .
(
∏	∏	. /
TMP_FontAsset
∏	∏	/ <
	fontAsset
∏	∏	= F
)
∏	∏	F G
{
π	π	 	
int
∫	∫	 
[
∫	∫	 
]
∫	∫	 

characters
∫	∫	 
=
∫	∫	 
new
∫	∫	 "
int
∫	∫	# &
[
∫	∫	& '
	fontAsset
∫	∫	' 0
.
∫	∫	0 1
characterTable
∫	∫	1 ?
.
∫	∫	? @
Count
∫	∫	@ E
]
∫	∫	E F
;
∫	∫	F G
for
º	º	 
(
º	º	 
int
º	º	 
i
º	º	 
=
º	º	 
$num
º	º	 
;
º	º	 
i
º	º	 
<
º	º	 
	fontAsset
º	º	  )
.
º	º	) *
characterTable
º	º	* 8
.
º	º	8 9
Count
º	º	9 >
;
º	º	> ?
i
º	º	@ A
++
º	º	A C
)
º	º	C D
{
Ω	Ω	 

characters
æ	æ	 
[
æ	æ	 
i
æ	æ	 
]
æ	æ	 
=
æ	æ	 
(
æ	æ	  !
int
æ	æ	! $
)
æ	æ	$ %
	fontAsset
æ	æ	% .
.
æ	æ	. /
characterTable
æ	æ	/ =
[
æ	æ	= >
i
æ	æ	> ?
]
æ	æ	? @
.
æ	æ	@ A
unicode
æ	æ	A H
;
æ	æ	H I
}
ø	ø	 
return
¡	¡	 

characters
¡	¡	 
;
¡	¡	 
}
¬	¬	 	
internal
…	…	 
uint
…	…	 
GetGlyphIndex
…	…	 #
(
…	…	# $
uint
…	…	$ (
unicode
…	…	) 0
)
…	…	0 1
{
 	 	 	
if
Ã	Ã	 
(
Ã	Ã	 )
m_CharacterLookupDictionary
Ã	Ã	 +
.
Ã	Ã	+ ,
ContainsKey
Ã	Ã	, 7
(
Ã	Ã	7 8
unicode
Ã	Ã	8 ?
)
Ã	Ã	? @
)
Ã	Ã	@ A
return
Õ	Õ	 )
m_CharacterLookupDictionary
Õ	Õ	 2
[
Õ	Õ	2 3
unicode
Õ	Õ	3 :
]
Õ	Õ	: ;
.
Õ	Õ	; <

glyphIndex
Õ	Õ	< F
;
Õ	Õ	F G
if
–	–	 
(
–	–	 

FontEngine
–	–	 
.
–	–	 
LoadFontFace
–	–	 '
(
–	–	' (
sourceFontFile
–	–	( 6
,
–	–	6 7

m_FaceInfo
–	–	8 B
.
–	–	B C
	pointSize
–	–	C L
)
–	–	L M
!=
–	–	N P
FontEngineError
–	–	Q `
.
–	–	` a
Success
–	–	a h
)
–	–	h i
return
—	—	 
$num
—	—	 
;
—	—	 
return
”	”	 

FontEngine
”	”	 
.
”	”	 
GetGlyphIndex
”	”	 +
(
”	”	+ ,
unicode
”	”	, 3
)
”	”	3 4
;
”	”	4 5
}
‘	‘	 	
private
‹	‹	 
static
‹	‹	 
List
‹	‹	 
<
‹	‹	 
TMP_FontAsset
‹	‹	 )
>
‹	‹	) *2
$k_FontAssets_FontFeaturesUpdateQueue
‹	‹	+ O
=
‹	‹	P Q
new
‹	‹	R U
List
‹	‹	V Z
<
‹	‹	Z [
TMP_FontAsset
‹	‹	[ h
>
‹	‹	h i
(
‹	‹	i j
)
‹	‹	j k
;
‹	‹	k l
private
›	›	 
static
›	›	 
HashSet
›	›	 
<
›	›	 
int
›	›	 "
>
›	›	" #8
*k_FontAssets_FontFeaturesUpdateQueueLookup
›	›	$ N
=
›	›	O P
new
›	›	Q T
HashSet
›	›	U \
<
›	›	\ ]
int
›	›	] `
>
›	›	` a
(
›	›	a b
)
›	›	b c
;
›	›	c d
private
ﬂ	ﬂ	 
static
ﬂ	ﬂ	 
List
ﬂ	ﬂ	 
<
ﬂ	ﬂ	 
TMP_FontAsset
ﬂ	ﬂ	 )
>
ﬂ	ﬂ	) *3
%k_FontAssets_AtlasTexturesUpdateQueue
ﬂ	ﬂ	+ P
=
ﬂ	ﬂ	Q R
new
ﬂ	ﬂ	S V
List
ﬂ	ﬂ	W [
<
ﬂ	ﬂ	[ \
TMP_FontAsset
ﬂ	ﬂ	\ i
>
ﬂ	ﬂ	i j
(
ﬂ	ﬂ	j k
)
ﬂ	ﬂ	k l
;
ﬂ	ﬂ	l m
private
‡	‡	 
static
‡	‡	 
HashSet
‡	‡	 
<
‡	‡	 
int
‡	‡	 "
>
‡	‡	" #9
+k_FontAssets_AtlasTexturesUpdateQueueLookup
‡	‡	$ O
=
‡	‡	P Q
new
‡	‡	R U
HashSet
‡	‡	V ]
<
‡	‡	] ^
int
‡	‡	^ a
>
‡	‡	a b
(
‡	‡	b c
)
‡	‡	c d
;
‡	‡	d e
internal
Ê	Ê	 
static
Ê	Ê	 
void
Ê	Ê	 3
%RegisterFontAssetForFontFeatureUpdate
Ê	Ê	 B
(
Ê	Ê	B C
TMP_FontAsset
Ê	Ê	C P
	fontAsset
Ê	Ê	Q Z
)
Ê	Ê	Z [
{
Á	Á	 	
int
Ë	Ë	 

instanceID
Ë	Ë	 
=
Ë	Ë	 
	fontAsset
Ë	Ë	 &
.
Ë	Ë	& '

instanceID
Ë	Ë	' 1
;
Ë	Ë	1 2
if
Í	Í	 
(
Í	Í	 8
*k_FontAssets_FontFeaturesUpdateQueueLookup
Í	Í	 :
.
Í	Í	: ;
Add
Í	Í	; >
(
Í	Í	> ?

instanceID
Í	Í	? I
)
Í	Í	I J
)
Í	Í	J K2
$k_FontAssets_FontFeaturesUpdateQueue
Î	Î	 4
.
Î	Î	4 5
Add
Î	Î	5 8
(
Î	Î	8 9
	fontAsset
Î	Î	9 B
)
Î	Î	B C
;
Î	Î	C D
}
Ï	Ï	 	
internal
Ú	Ú	 
static
Ú	Ú	 
void
Ú	Ú	 4
&UpdateFontFeaturesForFontAssetsInQueue
Ú	Ú	 C
(
Ú	Ú	C D
)
Ú	Ú	D E
{
Û	Û	 	
int
Ù	Ù	 
count
Ù	Ù	 
=
Ù	Ù	 2
$k_FontAssets_FontFeaturesUpdateQueue
Ù	Ù	 <
.
Ù	Ù	< =
Count
Ù	Ù	= B
;
Ù	Ù	B C
for
ˆ	ˆ	 
(
ˆ	ˆ	 
int
ˆ	ˆ	 
i
ˆ	ˆ	 
=
ˆ	ˆ	 
$num
ˆ	ˆ	 
;
ˆ	ˆ	 
i
ˆ	ˆ	 
<
ˆ	ˆ	 
count
ˆ	ˆ	  %
;
ˆ	ˆ	% &
i
ˆ	ˆ	' (
++
ˆ	ˆ	( *
)
ˆ	ˆ	* +2
$k_FontAssets_FontFeaturesUpdateQueue
˜	˜	 4
[
˜	˜	4 5
i
˜	˜	5 6
]
˜	˜	6 7
.
˜	˜	7 8*
UpdateGlyphAdjustmentRecords
˜	˜	8 T
(
˜	˜	T U
)
˜	˜	U V
;
˜	˜	V W
if
˘	˘	 
(
˘	˘	 
count
˘	˘	 
>
˘	˘	 
$num
˘	˘	 
)
˘	˘	 
{
˙	˙	 2
$k_FontAssets_FontFeaturesUpdateQueue
˚	˚	 4
.
˚	˚	4 5
Clear
˚	˚	5 :
(
˚	˚	: ;
)
˚	˚	; <
;
˚	˚	< =8
*k_FontAssets_FontFeaturesUpdateQueueLookup
¸	¸	 :
.
¸	¸	: ;
Clear
¸	¸	; @
(
¸	¸	@ A
)
¸	¸	A B
;
¸	¸	B C
}
˝	˝	 
}
˛	˛	 	
internal
Ñ
Ñ
 
static
Ñ
Ñ
 
void
Ñ
Ñ
 4
&RegisterFontAssetForAtlasTextureUpdate
Ñ
Ñ
 C
(
Ñ
Ñ
C D
TMP_FontAsset
Ñ
Ñ
D Q
	fontAsset
Ñ
Ñ
R [
)
Ñ
Ñ
[ \
{
Ö
Ö
 	
int
Ü
Ü
 

instanceID
Ü
Ü
 
=
Ü
Ü
 
	fontAsset
Ü
Ü
 &
.
Ü
Ü
& '

instanceID
Ü
Ü
' 1
;
Ü
Ü
1 2
if
à
à
 
(
à
à
 9
+k_FontAssets_AtlasTexturesUpdateQueueLookup
à
à
 ;
.
à
à
; <
Add
à
à
< ?
(
à
à
? @

instanceID
à
à
@ J
)
à
à
J K
)
à
à
K L3
%k_FontAssets_AtlasTexturesUpdateQueue
â
â
 5
.
â
â
5 6
Add
â
â
6 9
(
â
â
9 :
	fontAsset
â
â
: C
)
â
â
C D
;
â
â
D E
}
ä
ä
 	
internal
è
è
 
static
è
è
 
void
è
è
 5
'UpdateAtlasTexturesForFontAssetsInQueue
è
è
 D
(
è
è
D E
)
è
è
E F
{
ê
ê
 	
int
ë
ë
 
count
ë
ë
 
=
ë
ë
 9
+k_FontAssets_AtlasTexturesUpdateQueueLookup
ë
ë
 C
.
ë
ë
C D
Count
ë
ë
D I
;
ë
ë
I J
for
ì
ì
 
(
ì
ì
 
int
ì
ì
 
i
ì
ì
 
=
ì
ì
 
$num
ì
ì
 
;
ì
ì
 
i
ì
ì
 
<
ì
ì
 
count
ì
ì
  %
;
ì
ì
% &
i
ì
ì
' (
++
ì
ì
( *
)
ì
ì
* +3
%k_FontAssets_AtlasTexturesUpdateQueue
î
î
 5
[
î
î
5 6
i
î
î
6 7
]
î
î
7 8
.
î
î
8 9)
TryAddGlyphsToAtlasTextures
î
î
9 T
(
î
î
T U
)
î
î
U V
;
î
î
V W
if
ñ
ñ
 
(
ñ
ñ
 
count
ñ
ñ
 
>
ñ
ñ
 
$num
ñ
ñ
 
)
ñ
ñ
 
{
ó
ó
 3
%k_FontAssets_AtlasTexturesUpdateQueue
ò
ò
 5
.
ò
ò
5 6
Clear
ò
ò
6 ;
(
ò
ò
; <
)
ò
ò
< =
;
ò
ò
= >9
+k_FontAssets_AtlasTexturesUpdateQueueLookup
ô
ô
 ;
.
ô
ô
; <
Clear
ô
ô
< A
(
ô
ô
A B
)
ô
ô
B C
;
ô
ô
C D
}
ö
ö
 
}
õ
õ
 	
private
•
•
 
List
•
•
 
<
•
•
 
Glyph
•
•
 
>
•
•
 
m_GlyphsToRender
•
•
 ,
=
•
•
- .
new
•
•
/ 2
List
•
•
3 7
<
•
•
7 8
Glyph
•
•
8 =
>
•
•
= >
(
•
•
> ?
)
•
•
? @
;
•
•
@ A
private
™
™
 
List
™
™
 
<
™
™
 
Glyph
™
™
 
>
™
™
 
m_GlyphsRendered
™
™
 ,
=
™
™
- .
new
™
™
/ 2
List
™
™
3 7
<
™
™
7 8
Glyph
™
™
8 =
>
™
™
= >
(
™
™
> ?
)
™
™
? @
;
™
™
@ A
private
Ø
Ø
 
List
Ø
Ø
 
<
Ø
Ø
 
uint
Ø
Ø
 
>
Ø
Ø
 
m_GlyphIndexList
Ø
Ø
 +
=
Ø
Ø
, -
new
Ø
Ø
. 1
List
Ø
Ø
2 6
<
Ø
Ø
6 7
uint
Ø
Ø
7 ;
>
Ø
Ø
; <
(
Ø
Ø
< =
)
Ø
Ø
= >
;
Ø
Ø
> ?
private
µ
µ
 
List
µ
µ
 
<
µ
µ
 
uint
µ
µ
 
>
µ
µ
 (
m_GlyphIndexListNewlyAdded
µ
µ
 5
=
µ
µ
6 7
new
µ
µ
8 ;
List
µ
µ
< @
<
µ
µ
@ A
uint
µ
µ
A E
>
µ
µ
E F
(
µ
µ
F G
)
µ
µ
G H
;
µ
µ
H I
internal
∫
∫
 
List
∫
∫
 
<
∫
∫
 
uint
∫
∫
 
>
∫
∫
 
m_GlyphsToAdd
∫
∫
 )
=
∫
∫
* +
new
∫
∫
, /
List
∫
∫
0 4
<
∫
∫
4 5
uint
∫
∫
5 9
>
∫
∫
9 :
(
∫
∫
: ;
)
∫
∫
; <
;
∫
∫
< =
internal
ª
ª
 
HashSet
ª
ª
 
<
ª
ª
 
uint
ª
ª
 
>
ª
ª
 !
m_GlyphsToAddLookup
ª
ª
 2
=
ª
ª
3 4
new
ª
ª
5 8
HashSet
ª
ª
9 @
<
ª
ª
@ A
uint
ª
ª
A E
>
ª
ª
E F
(
ª
ª
F G
)
ª
ª
G H
;
ª
ª
H I
internal
Ω
Ω
 
List
Ω
Ω
 
<
Ω
Ω
 
TMP_Character
Ω
Ω
 #
>
Ω
Ω
# $
m_CharactersToAdd
Ω
Ω
% 6
=
Ω
Ω
7 8
new
Ω
Ω
9 <
List
Ω
Ω
= A
<
Ω
Ω
A B
TMP_Character
Ω
Ω
B O
>
Ω
Ω
O P
(
Ω
Ω
P Q
)
Ω
Ω
Q R
;
Ω
Ω
R S
internal
æ
æ
 
HashSet
æ
æ
 
<
æ
æ
 
uint
æ
æ
 
>
æ
æ
 %
m_CharactersToAddLookup
æ
æ
 6
=
æ
æ
7 8
new
æ
æ
9 <
HashSet
æ
æ
= D
<
æ
æ
D E
uint
æ
æ
E I
>
æ
æ
I J
(
æ
æ
J K
)
æ
æ
K L
;
æ
æ
L M
internal
√
√
 
List
√
√
 
<
√
√
 
uint
√
√
 
>
√
√
 $
s_MissingCharacterList
√
√
 2
=
√
√
3 4
new
√
√
5 8
List
√
√
9 =
<
√
√
= >
uint
√
√
> B
>
√
√
B C
(
√
√
C D
)
√
√
D E
;
√
√
E F
internal
»
»
 
HashSet
»
»
 
<
»
»
 
uint
»
»
 
>
»
»
 +
m_MissingUnicodesFromFontFile
»
»
 <
=
»
»
= >
new
»
»
? B
HashSet
»
»
C J
<
»
»
J K
uint
»
»
K O
>
»
»
O P
(
»
»
P Q
)
»
»
Q R
;
»
»
R S
internal
Õ
Õ
 
static
Õ
Õ
 
uint
Õ
Õ
 
[
Õ
Õ
 
]
Õ
Õ
 
k_GlyphIndexArray
Õ
Õ
 0
;
Õ
Õ
0 1
public
’
’
 
bool
’
’
 
TryAddCharacters
’
’
 $
(
’
’
$ %
uint
’
’
% )
[
’
’
) *
]
’
’
* +
unicodes
’
’
, 4
,
’
’
4 5
bool
’
’
6 :!
includeFontFeatures
’
’
; N
=
’
’
O P
false
’
’
Q V
)
’
’
V W
{
÷
÷
 	
uint
◊
◊
 
[
◊
◊
 
]
◊
◊
 
missingUnicodes
◊
◊
 "
;
◊
◊
" #
return
Ÿ
Ÿ
 
TryAddCharacters
Ÿ
Ÿ
 #
(
Ÿ
Ÿ
# $
unicodes
Ÿ
Ÿ
$ ,
,
Ÿ
Ÿ
, -
out
Ÿ
Ÿ
. 1
missingUnicodes
Ÿ
Ÿ
2 A
,
Ÿ
Ÿ
A B!
includeFontFeatures
Ÿ
Ÿ
C V
)
Ÿ
Ÿ
V W
;
Ÿ
Ÿ
W X
}
⁄
⁄
 	
public
„
„
 
bool
„
„
 
TryAddCharacters
„
„
 $
(
„
„
$ %
uint
„
„
% )
[
„
„
) *
]
„
„
* +
unicodes
„
„
, 4
,
„
„
4 5
out
„
„
6 9
uint
„
„
: >
[
„
„
> ?
]
„
„
? @
missingUnicodes
„
„
A P
,
„
„
P Q
bool
„
„
R V!
includeFontFeatures
„
„
W j
=
„
„
k l
false
„
„
m r
)
„
„
r s
{
‰
‰
 	
Profiler
Â
Â
 
.
Â
Â
 
BeginSample
Â
Â
  
(
Â
Â
  !
$str
Â
Â
! 7
)
Â
Â
7 8
;
Â
Â
8 9
if
Ë
Ë
 
(
Ë
Ë
 
unicodes
Ë
Ë
 
==
Ë
Ë
 
null
Ë
Ë
  
||
Ë
Ë
! #
unicodes
Ë
Ë
$ ,
.
Ë
Ë
, -
Length
Ë
Ë
- 3
==
Ë
Ë
4 6
$num
Ë
Ë
7 8
||
Ë
Ë
9 ;#
m_AtlasPopulationMode
Ë
Ë
< Q
==
Ë
Ë
R T!
AtlasPopulationMode
Ë
Ë
U h
.
Ë
Ë
h i
Static
Ë
Ë
i o
)
Ë
Ë
o p
{
È
È
 
if
Í
Í
 
(
Í
Í
 #
m_AtlasPopulationMode
Í
Í
 )
==
Í
Í
* ,!
AtlasPopulationMode
Í
Í
- @
.
Í
Í
@ A
Static
Í
Í
A G
)
Í
Í
G H
Debug
Î
Î
 
.
Î
Î
 

LogWarning
Î
Î
 $
(
Î
Î
$ %
$str
Î
Î
% O
+
Î
Î
P Q
this
Î
Î
R V
.
Î
Î
V W
name
Î
Î
W [
+
Î
Î
\ ]
$strÎ
Î
^ ì
,Î
Î
ì î
thisÎ
Î
ï ô
)Î
Î
ô ö
;Î
Î
ö õ
else
Ï
Ï
 
Debug
Ì
Ì
 
.
Ì
Ì
 

LogWarning
Ì
Ì
 $
(
Ì
Ì
$ %
$str
Ì
Ì
% O
+
Ì
Ì
P Q
this
Ì
Ì
R V
.
Ì
Ì
V W
name
Ì
Ì
W [
+
Ì
Ì
\ ]
$strÌ
Ì
^ ï
,Ì
Ì
ï ñ
thisÌ
Ì
ó õ
)Ì
Ì
õ ú
;Ì
Ì
ú ù
missingUnicodes
Ô
Ô
 
=
Ô
Ô
  !
unicodes
Ô
Ô
" *
.
Ô
Ô
* +
ToArray
Ô
Ô
+ 2
(
Ô
Ô
2 3
)
Ô
Ô
3 4
;
Ô
Ô
4 5
Profiler


 
.


 
	EndSample


 "
(


" #
)


# $
;


$ %
return
Ò
Ò
 
false
Ò
Ò
 
;
Ò
Ò
 
}
Ú
Ú
 
if
ı
ı
 
(
ı
ı
 

FontEngine
ı
ı
 
.
ı
ı
 
LoadFontFace
ı
ı
 '
(
ı
ı
' (
m_SourceFontFile
ı
ı
( 8
,
ı
ı
8 9

m_FaceInfo
ı
ı
: D
.
ı
ı
D E
	pointSize
ı
ı
E N
)
ı
ı
N O
!=
ı
ı
P R
FontEngineError
ı
ı
S b
.
ı
ı
b c
Success
ı
ı
c j
)
ı
ı
j k
{
ˆ
ˆ
 
missingUnicodes
˜
˜
 
=
˜
˜
  !
unicodes
˜
˜
" *
.
˜
˜
* +
ToArray
˜
˜
+ 2
(
˜
˜
2 3
)
˜
˜
3 4
;
˜
˜
4 5
Profiler
¯
¯
 
.
¯
¯
 
	EndSample
¯
¯
 "
(
¯
¯
" #
)
¯
¯
# $
;
¯
¯
$ %
return
˘
˘
 
false
˘
˘
 
;
˘
˘
 
}
˙
˙
 
if
˝
˝
 
(
˝
˝
 )
m_CharacterLookupDictionary
˝
˝
 +
==
˝
˝
, .
null
˝
˝
/ 3
||
˝
˝
4 6%
m_GlyphLookupDictionary
˝
˝
7 N
==
˝
˝
O Q
null
˝
˝
R V
)
˝
˝
V W%
ReadFontAssetDefinition
˛
˛
 '
(
˛
˛
' (
)
˛
˛
( )
;
˛
˛
) *
m_GlyphsToAdd
ÅÅ 
.
ÅÅ 
Clear
ÅÅ 
(
ÅÅ  
)
ÅÅ  !
;
ÅÅ! "!
m_GlyphsToAddLookup
ÇÇ 
.
ÇÇ  
Clear
ÇÇ  %
(
ÇÇ% &
)
ÇÇ& '
;
ÇÇ' (
m_CharactersToAdd
ÉÉ 
.
ÉÉ 
Clear
ÉÉ #
(
ÉÉ# $
)
ÉÉ$ %
;
ÉÉ% &%
m_CharactersToAddLookup
ÑÑ #
.
ÑÑ# $
Clear
ÑÑ$ )
(
ÑÑ) *
)
ÑÑ* +
;
ÑÑ+ ,$
s_MissingCharacterList
ÖÖ "
.
ÖÖ" #
Clear
ÖÖ# (
(
ÖÖ( )
)
ÖÖ) *
;
ÖÖ* +
bool
áá !
isMissingCharacters
áá $
=
áá% &
false
áá' ,
;
áá, -
int
àà 
unicodeCount
àà 
=
àà 
unicodes
àà '
.
àà' (
Length
àà( .
;
àà. /
for
ää 
(
ää 
int
ää 
i
ää 
=
ää 
$num
ää 
;
ää 
i
ää 
<
ää 
unicodeCount
ää  ,
;
ää, -
i
ää. /
++
ää/ 1
)
ää1 2
{
ãã 
uint
åå 
unicode
åå 
=
åå 
unicodes
åå '
[
åå' (
i
åå( )
]
åå) *
;
åå* +
if
èè 
(
èè )
m_CharacterLookupDictionary
èè /
.
èè/ 0
ContainsKey
èè0 ;
(
èè; <
unicode
èè< C
)
èèC D
)
èèD E
continue
êê 
;
êê 
uint
ìì 

glyphIndex
ìì 
=
ìì  !

FontEngine
ìì" ,
.
ìì, -
GetGlyphIndex
ìì- :
(
ìì: ;
unicode
ìì; B
)
ììB C
;
ììC D
if
ññ 
(
ññ 

glyphIndex
ññ 
==
ññ !
$num
ññ" #
)
ññ# $
{
óó 
switch
ôô 
(
ôô 
unicode
ôô #
)
ôô# $
{
öö 
case
õõ 
$num
õõ !
:
õõ! "

glyphIndex
ùù &
=
ùù' (

FontEngine
ùù) 3
.
ùù3 4
GetGlyphIndex
ùù4 A
(
ùùA B
$num
ùùB F
)
ùùF G
;
ùùG H
break
ûû !
;
ûû! "
case
üü 
$num
üü !
:
üü! "
case
†† 
$num
†† #
:
††# $

glyphIndex
¢¢ &
=
¢¢' (

FontEngine
¢¢) 3
.
¢¢3 4
GetGlyphIndex
¢¢4 A
(
¢¢A B
$num
¢¢B F
)
¢¢F G
;
¢¢G H
break
££ !
;
££! "
}
§§ 
if
ßß 
(
ßß 

glyphIndex
ßß "
==
ßß# %
$num
ßß& '
)
ßß' (
{
®® $
s_MissingCharacterList
™™ .
.
™™. /
Add
™™/ 2
(
™™2 3
unicode
™™3 :
)
™™: ;
;
™™; <!
isMissingCharacters
¨¨ +
=
¨¨, -
true
¨¨. 2
;
¨¨2 3
continue
≠≠  
;
≠≠  !
}
ÆÆ 
}
ØØ 
TMP_Character
±± 
	character
±± '
=
±±( )
new
±±* -
TMP_Character
±±. ;
(
±±; <
unicode
±±< C
,
±±C D

glyphIndex
±±E O
)
±±O P
;
±±P Q
if
¥¥ 
(
¥¥ %
m_GlyphLookupDictionary
¥¥ +
.
¥¥+ ,
ContainsKey
¥¥, 7
(
¥¥7 8

glyphIndex
¥¥8 B
)
¥¥B C
)
¥¥C D
{
µµ 
	character
∑∑ 
.
∑∑ 
glyph
∑∑ #
=
∑∑$ %%
m_GlyphLookupDictionary
∑∑& =
[
∑∑= >

glyphIndex
∑∑> H
]
∑∑H I
;
∑∑I J
	character
∏∏ 
.
∏∏ 
	textAsset
∏∏ '
=
∏∏( )
this
∏∏* .
;
∏∏. /
m_CharacterTable
∫∫ $
.
∫∫$ %
Add
∫∫% (
(
∫∫( )
	character
∫∫) 2
)
∫∫2 3
;
∫∫3 4)
m_CharacterLookupDictionary
ªª /
.
ªª/ 0
Add
ªª0 3
(
ªª3 4
unicode
ªª4 ;
,
ªª; <
	character
ªª= F
)
ªªF G
;
ªªG H
continue
ºº 
;
ºº 
}
ΩΩ 
if
¿¿ 
(
¿¿ !
m_GlyphsToAddLookup
¿¿ '
.
¿¿' (
Add
¿¿( +
(
¿¿+ ,

glyphIndex
¿¿, 6
)
¿¿6 7
)
¿¿7 8
m_GlyphsToAdd
¡¡ !
.
¡¡! "
Add
¡¡" %
(
¡¡% &

glyphIndex
¡¡& 0
)
¡¡0 1
;
¡¡1 2
if
ƒƒ 
(
ƒƒ %
m_CharactersToAddLookup
ƒƒ +
.
ƒƒ+ ,
Add
ƒƒ, /
(
ƒƒ/ 0
unicode
ƒƒ0 7
)
ƒƒ7 8
)
ƒƒ8 9
m_CharactersToAdd
≈≈ %
.
≈≈% &
Add
≈≈& )
(
≈≈) *
	character
≈≈* 3
)
≈≈3 4
;
≈≈4 5
}
∆∆ 
if
»» 
(
»» 
m_GlyphsToAdd
»» 
.
»» 
Count
»» #
==
»»$ &
$num
»»' (
)
»»( )
{
…… 
missingUnicodes
ÀÀ 
=
ÀÀ  !
unicodes
ÀÀ" *
;
ÀÀ* +
Profiler
ÃÃ 
.
ÃÃ 
	EndSample
ÃÃ "
(
ÃÃ" #
)
ÃÃ# $
;
ÃÃ$ %
return
ÕÕ 
false
ÕÕ 
;
ÕÕ 
}
ŒŒ 
if
—— 
(
—— 
m_AtlasTextures
—— 
[
——  !
m_AtlasTextureIndex
——  3
]
——3 4
.
——4 5
width
——5 :
==
——; =
$num
——> ?
||
——@ B
m_AtlasTextures
——C R
[
——R S!
m_AtlasTextureIndex
——S f
]
——f g
.
——g h
height
——h n
==
——o q
$num
——r s
)
——s t
{
““ 
m_AtlasTextures
”” 
[
””  !
m_AtlasTextureIndex
””  3
]
””3 4
.
””4 5
Resize
””5 ;
(
””; <
m_AtlasWidth
””< H
,
””H I
m_AtlasHeight
””J W
)
””W X
;
””X Y

FontEngine
‘‘ 
.
‘‘ 
ResetAtlasTexture
‘‘ ,
(
‘‘, -
m_AtlasTextures
‘‘- <
[
‘‘< =!
m_AtlasTextureIndex
‘‘= P
]
‘‘P Q
)
‘‘Q R
;
‘‘R S
}
’’ 
Glyph
◊◊ 
[
◊◊ 
]
◊◊ 
glyphs
◊◊ 
;
◊◊ 
bool
ÿÿ %
allGlyphsAddedToTexture
ÿÿ (
=
ÿÿ) *

FontEngine
ÿÿ+ 5
.
ÿÿ5 6#
TryAddGlyphsToTexture
ÿÿ6 K
(
ÿÿK L
m_GlyphsToAdd
ÿÿL Y
,
ÿÿY Z
m_AtlasPadding
ÿÿ[ i
,
ÿÿi j
GlyphPackingMode
ÿÿk {
.
ÿÿ{ |
BestShortSideFitÿÿ| å
,ÿÿå ç 
m_FreeGlyphRectsÿÿé û
,ÿÿû ü 
m_UsedGlyphRectsÿÿ† ∞
,ÿÿ∞ ±!
m_AtlasRenderModeÿÿ≤ √
,ÿÿ√ ƒ
m_AtlasTexturesÿÿ≈ ‘
[ÿÿ‘ ’#
m_AtlasTextureIndexÿÿ’ Ë
]ÿÿË È
,ÿÿÈ Í
outÿÿÎ Ó
glyphsÿÿÔ ı
)ÿÿı ˆ
;ÿÿˆ ˜
for
€€ 
(
€€ 
int
€€ 
i
€€ 
=
€€ 
$num
€€ 
;
€€ 
i
€€ 
<
€€ 
glyphs
€€  &
.
€€& '
Length
€€' -
&&
€€. 0
glyphs
€€1 7
[
€€7 8
i
€€8 9
]
€€9 :
!=
€€; =
null
€€> B
;
€€B C
i
€€D E
++
€€E G
)
€€G H
{
‹‹ 
Glyph
›› 
glyph
›› 
=
›› 
glyphs
›› $
[
››$ %
i
››% &
]
››& '
;
››' (
uint
ﬁﬁ 

glyphIndex
ﬁﬁ 
=
ﬁﬁ  !
glyph
ﬁﬁ" '
.
ﬁﬁ' (
index
ﬁﬁ( -
;
ﬁﬁ- .
glyph
‡‡ 
.
‡‡ 

atlasIndex
‡‡  
=
‡‡! "!
m_AtlasTextureIndex
‡‡# 6
;
‡‡6 7
m_GlyphTable
„„ 
.
„„ 
Add
„„  
(
„„  !
glyph
„„! &
)
„„& '
;
„„' (%
m_GlyphLookupDictionary
‰‰ '
.
‰‰' (
Add
‰‰( +
(
‰‰+ ,

glyphIndex
‰‰, 6
,
‰‰6 7
glyph
‰‰8 =
)
‰‰= >
;
‰‰> ?(
m_GlyphIndexListNewlyAdded
ÊÊ *
.
ÊÊ* +
Add
ÊÊ+ .
(
ÊÊ. /

glyphIndex
ÊÊ/ 9
)
ÊÊ9 :
;
ÊÊ: ;
m_GlyphIndexList
ÁÁ  
.
ÁÁ  !
Add
ÁÁ! $
(
ÁÁ$ %

glyphIndex
ÁÁ% /
)
ÁÁ/ 0
;
ÁÁ0 1
}
ËË 
m_GlyphsToAdd
ÎÎ 
.
ÎÎ 
Clear
ÎÎ 
(
ÎÎ  
)
ÎÎ  !
;
ÎÎ! "
for
ÓÓ 
(
ÓÓ 
int
ÓÓ 
i
ÓÓ 
=
ÓÓ 
$num
ÓÓ 
;
ÓÓ 
i
ÓÓ 
<
ÓÓ 
m_CharactersToAdd
ÓÓ  1
.
ÓÓ1 2
Count
ÓÓ2 7
;
ÓÓ7 8
i
ÓÓ9 :
++
ÓÓ: <
)
ÓÓ< =
{
ÔÔ 
TMP_Character
 
	character
 '
=
( )
m_CharactersToAdd
* ;
[
; <
i
< =
]
= >
;
> ?
Glyph
ÒÒ 
glyph
ÒÒ 
;
ÒÒ 
if
ÛÛ 
(
ÛÛ %
m_GlyphLookupDictionary
ÛÛ +
.
ÛÛ+ ,
TryGetValue
ÛÛ, 7
(
ÛÛ7 8
	character
ÛÛ8 A
.
ÛÛA B

glyphIndex
ÛÛB L
,
ÛÛL M
out
ÛÛN Q
glyph
ÛÛR W
)
ÛÛW X
==
ÛÛY [
false
ÛÛ\ a
)
ÛÛa b
{
ÙÙ 
m_GlyphsToAdd
ıı !
.
ıı! "
Add
ıı" %
(
ıı% &
	character
ıı& /
.
ıı/ 0

glyphIndex
ıı0 :
)
ıı: ;
;
ıı; <
continue
ˆˆ 
;
ˆˆ 
}
˜˜ 
	character
˙˙ 
.
˙˙ 
glyph
˙˙ 
=
˙˙  !
glyph
˙˙" '
;
˙˙' (
	character
˚˚ 
.
˚˚ 
	textAsset
˚˚ #
=
˚˚$ %
this
˚˚& *
;
˚˚* +
m_CharacterTable
˝˝  
.
˝˝  !
Add
˝˝! $
(
˝˝$ %
	character
˝˝% .
)
˝˝. /
;
˝˝/ 0)
m_CharacterLookupDictionary
˛˛ +
.
˛˛+ ,
Add
˛˛, /
(
˛˛/ 0
	character
˛˛0 9
.
˛˛9 :
unicode
˛˛: A
,
˛˛A B
	character
˛˛C L
)
˛˛L M
;
˛˛M N
m_CharactersToAdd
ÅÅ !
.
ÅÅ! "
RemoveAt
ÅÅ" *
(
ÅÅ* +
i
ÅÅ+ ,
)
ÅÅ, -
;
ÅÅ- .
i
ÇÇ 
-=
ÇÇ 
$num
ÇÇ 
;
ÇÇ 
}
ÉÉ 
if
ÜÜ 
(
ÜÜ +
m_IsMultiAtlasTexturesEnabled
ÜÜ -
&&
ÜÜ. 0%
allGlyphsAddedToTexture
ÜÜ1 H
==
ÜÜI K
false
ÜÜL Q
)
ÜÜQ R
{
áá 
while
àà 
(
àà %
allGlyphsAddedToTexture
àà .
==
àà/ 1
false
àà2 7
)
àà7 8%
allGlyphsAddedToTexture
ââ +
=
ââ, -+
TryAddGlyphsToNewAtlasTexture
ââ. K
(
ââK L
)
ââL M
;
ââM N
}
ää 
if
çç 
(
çç !
includeFontFeatures
çç #
)
çç# $*
UpdateGlyphAdjustmentRecords
éé ,
(
éé, -
)
éé- .
;
éé. /
if
íí 
(
íí 
UnityEditor
íí 
.
íí 
EditorUtility
íí )
.
íí) *
IsPersistent
íí* 6
(
íí6 7
this
íí7 ;
)
íí; <
)
íí< =
{
ìì '
TMP_EditorResourceManager
îî )
.
îî) *'
RegisterResourceForUpdate
îî* C
(
îîC D
this
îîD H
)
îîH I
;
îîI J
}
ïï 
for
ôô 
(
ôô 
int
ôô 
i
ôô 
=
ôô 
$num
ôô 
;
ôô 
i
ôô 
<
ôô 
m_CharactersToAdd
ôô  1
.
ôô1 2
Count
ôô2 7
;
ôô7 8
i
ôô9 :
++
ôô: <
)
ôô< =
{
öö 
TMP_Character
õõ 
	character
õõ '
=
õõ( )
m_CharactersToAdd
õõ* ;
[
õõ; <
i
õõ< =
]
õõ= >
;
õõ> ?$
s_MissingCharacterList
úú &
.
úú& '
Add
úú' *
(
úú* +
	character
úú+ 4
.
úú4 5
unicode
úú5 <
)
úú< =
;
úú= >
}
ùù 
missingUnicodes
üü 
=
üü 
null
üü "
;
üü" #
if
°° 
(
°° $
s_MissingCharacterList
°° &
.
°°& '
Count
°°' ,
>
°°- .
$num
°°/ 0
)
°°0 1
missingUnicodes
¢¢ 
=
¢¢  !$
s_MissingCharacterList
¢¢" 8
.
¢¢8 9
ToArray
¢¢9 @
(
¢¢@ A
)
¢¢A B
;
¢¢B C
Profiler
§§ 
.
§§ 
	EndSample
§§ 
(
§§ 
)
§§  
;
§§  !
return
¶¶ %
allGlyphsAddedToTexture
¶¶ *
&&
¶¶+ -
!
¶¶. /!
isMissingCharacters
¶¶/ B
;
¶¶B C
}
ßß 	
public
ØØ 
bool
ØØ 
TryAddCharacters
ØØ $
(
ØØ$ %
string
ØØ% +

characters
ØØ, 6
,
ØØ6 7
bool
ØØ8 <!
includeFontFeatures
ØØ= P
=
ØØQ R
false
ØØS X
)
ØØX Y
{
∞∞ 	
string
±± 
missingCharacters
±± $
;
±±$ %
return
≥≥ 
TryAddCharacters
≥≥ #
(
≥≥# $

characters
≥≥$ .
,
≥≥. /
out
≥≥0 3
missingCharacters
≥≥4 E
,
≥≥E F!
includeFontFeatures
≥≥G Z
)
≥≥Z [
;
≥≥[ \
}
¥¥ 	
public
ææ 
bool
ææ 
TryAddCharacters
ææ $
(
ææ$ %
string
ææ% +

characters
ææ, 6
,
ææ6 7
out
ææ8 ;
string
ææ< B
missingCharacters
ææC T
,
ææT U
bool
ææV Z!
includeFontFeatures
ææ[ n
=
ææo p
false
ææq v
)
ææv w
{
øø 	
Profiler
¿¿ 
.
¿¿ 
BeginSample
¿¿  
(
¿¿  !
$str
¿¿! 7
)
¿¿7 8
;
¿¿8 9
if
√√ 
(
√√ 
string
√√ 
.
√√ 
IsNullOrEmpty
√√ $
(
√√$ %

characters
√√% /
)
√√/ 0
||
√√1 3#
m_AtlasPopulationMode
√√4 I
==
√√J L!
AtlasPopulationMode
√√M `
.
√√` a
Static
√√a g
)
√√g h
{
ƒƒ 
if
≈≈ 
(
≈≈ #
m_AtlasPopulationMode
≈≈ )
==
≈≈* ,!
AtlasPopulationMode
≈≈- @
.
≈≈@ A
Static
≈≈A G
)
≈≈G H
Debug
∆∆ 
.
∆∆ 

LogWarning
∆∆ $
(
∆∆$ %
$str
∆∆% O
+
∆∆P Q
this
∆∆R V
.
∆∆V W
name
∆∆W [
+
∆∆\ ]
$str∆∆^ ì
,∆∆ì î
this∆∆ï ô
)∆∆ô ö
;∆∆ö õ
else
«« 
{
»» 
Debug
…… 
.
…… 

LogWarning
…… $
(
……$ %
$str
……% O
+
……P Q
this
……R V
.
……V W
name
……W [
+
……\ ]
$str……^ ó
,……ó ò
this……ô ù
)……ù û
;……û ü
}
   
missingCharacters
ÃÃ !
=
ÃÃ" #

characters
ÃÃ$ .
;
ÃÃ. /
Profiler
ÕÕ 
.
ÕÕ 
	EndSample
ÕÕ "
(
ÕÕ" #
)
ÕÕ# $
;
ÕÕ$ %
return
ŒŒ 
false
ŒŒ 
;
ŒŒ 
}
œœ 
if
““ 
(
““ 

FontEngine
““ 
.
““ 
LoadFontFace
““ '
(
““' (
m_SourceFontFile
““( 8
,
““8 9

m_FaceInfo
““: D
.
““D E
	pointSize
““E N
)
““N O
!=
““P R
FontEngineError
““S b
.
““b c
Success
““c j
)
““j k
{
”” 
missingCharacters
‘‘ !
=
‘‘" #

characters
‘‘$ .
;
‘‘. /
Profiler
’’ 
.
’’ 
	EndSample
’’ "
(
’’" #
)
’’# $
;
’’$ %
return
÷÷ 
false
÷÷ 
;
÷÷ 
}
◊◊ 
if
⁄⁄ 
(
⁄⁄ )
m_CharacterLookupDictionary
⁄⁄ +
==
⁄⁄, .
null
⁄⁄/ 3
||
⁄⁄4 6%
m_GlyphLookupDictionary
⁄⁄7 N
==
⁄⁄O Q
null
⁄⁄R V
)
⁄⁄V W%
ReadFontAssetDefinition
€€ '
(
€€' (
)
€€( )
;
€€) *
m_GlyphsToAdd
ﬁﬁ 
.
ﬁﬁ 
Clear
ﬁﬁ 
(
ﬁﬁ  
)
ﬁﬁ  !
;
ﬁﬁ! "!
m_GlyphsToAddLookup
ﬂﬂ 
.
ﬂﬂ  
Clear
ﬂﬂ  %
(
ﬂﬂ% &
)
ﬂﬂ& '
;
ﬂﬂ' (
m_CharactersToAdd
‡‡ 
.
‡‡ 
Clear
‡‡ #
(
‡‡# $
)
‡‡$ %
;
‡‡% &%
m_CharactersToAddLookup
·· #
.
··# $
Clear
··$ )
(
··) *
)
··* +
;
··+ ,$
s_MissingCharacterList
‚‚ "
.
‚‚" #
Clear
‚‚# (
(
‚‚( )
)
‚‚) *
;
‚‚* +
bool
‰‰ !
isMissingCharacters
‰‰ $
=
‰‰% &
false
‰‰' ,
;
‰‰, -
int
ÂÂ 
characterCount
ÂÂ 
=
ÂÂ  

characters
ÂÂ! +
.
ÂÂ+ ,
Length
ÂÂ, 2
;
ÂÂ2 3
for
ËË 
(
ËË 
int
ËË 
i
ËË 
=
ËË 
$num
ËË 
;
ËË 
i
ËË 
<
ËË 
characterCount
ËË  .
;
ËË. /
i
ËË0 1
++
ËË1 3
)
ËË3 4
{
ÈÈ 
uint
ÍÍ 
unicode
ÍÍ 
=
ÍÍ 

characters
ÍÍ )
[
ÍÍ) *
i
ÍÍ* +
]
ÍÍ+ ,
;
ÍÍ, -
if
ÌÌ 
(
ÌÌ )
m_CharacterLookupDictionary
ÌÌ /
.
ÌÌ/ 0
ContainsKey
ÌÌ0 ;
(
ÌÌ; <
unicode
ÌÌ< C
)
ÌÌC D
)
ÌÌD E
continue
ÓÓ 
;
ÓÓ 
uint
ÒÒ 

glyphIndex
ÒÒ 
=
ÒÒ  !

FontEngine
ÒÒ" ,
.
ÒÒ, -
GetGlyphIndex
ÒÒ- :
(
ÒÒ: ;
unicode
ÒÒ; B
)
ÒÒB C
;
ÒÒC D
if
ÙÙ 
(
ÙÙ 

glyphIndex
ÙÙ 
==
ÙÙ !
$num
ÙÙ" #
)
ÙÙ# $
{
ıı 
switch
˜˜ 
(
˜˜ 
unicode
˜˜ #
)
˜˜# $
{
¯¯ 
case
˘˘ 
$num
˘˘ !
:
˘˘! "

glyphIndex
˚˚ &
=
˚˚' (

FontEngine
˚˚) 3
.
˚˚3 4
GetGlyphIndex
˚˚4 A
(
˚˚A B
$num
˚˚B F
)
˚˚F G
;
˚˚G H
break
¸¸ !
;
¸¸! "
case
˝˝ 
$num
˝˝ !
:
˝˝! "
case
˛˛ 
$num
˛˛ #
:
˛˛# $

glyphIndex
ÄÄ &
=
ÄÄ' (

FontEngine
ÄÄ) 3
.
ÄÄ3 4
GetGlyphIndex
ÄÄ4 A
(
ÄÄA B
$num
ÄÄB F
)
ÄÄF G
;
ÄÄG H
break
ÅÅ !
;
ÅÅ! "
}
ÇÇ 
if
ÖÖ 
(
ÖÖ 

glyphIndex
ÖÖ "
==
ÖÖ# %
$num
ÖÖ& '
)
ÖÖ' (
{
ÜÜ $
s_MissingCharacterList
àà .
.
àà. /
Add
àà/ 2
(
àà2 3
unicode
àà3 :
)
àà: ;
;
àà; <!
isMissingCharacters
ää +
=
ää, -
true
ää. 2
;
ää2 3
continue
ãã  
;
ãã  !
}
åå 
}
çç 
TMP_Character
èè 
	character
èè '
=
èè( )
new
èè* -
TMP_Character
èè. ;
(
èè; <
unicode
èè< C
,
èèC D

glyphIndex
èèE O
)
èèO P
;
èèP Q
if
íí 
(
íí %
m_GlyphLookupDictionary
íí +
.
íí+ ,
ContainsKey
íí, 7
(
íí7 8

glyphIndex
íí8 B
)
ííB C
)
ííC D
{
ìì 
	character
ïï 
.
ïï 
glyph
ïï #
=
ïï$ %%
m_GlyphLookupDictionary
ïï& =
[
ïï= >

glyphIndex
ïï> H
]
ïïH I
;
ïïI J
	character
ññ 
.
ññ 
	textAsset
ññ '
=
ññ( )
this
ññ* .
;
ññ. /
m_CharacterTable
òò $
.
òò$ %
Add
òò% (
(
òò( )
	character
òò) 2
)
òò2 3
;
òò3 4)
m_CharacterLookupDictionary
ôô /
.
ôô/ 0
Add
ôô0 3
(
ôô3 4
unicode
ôô4 ;
,
ôô; <
	character
ôô= F
)
ôôF G
;
ôôG H
continue
öö 
;
öö 
}
õõ 
if
ûû 
(
ûû !
m_GlyphsToAddLookup
ûû '
.
ûû' (
Add
ûû( +
(
ûû+ ,

glyphIndex
ûû, 6
)
ûû6 7
)
ûû7 8
m_GlyphsToAdd
üü !
.
üü! "
Add
üü" %
(
üü% &

glyphIndex
üü& 0
)
üü0 1
;
üü1 2
if
¢¢ 
(
¢¢ %
m_CharactersToAddLookup
¢¢ +
.
¢¢+ ,
Add
¢¢, /
(
¢¢/ 0
unicode
¢¢0 7
)
¢¢7 8
)
¢¢8 9
m_CharactersToAdd
££ %
.
££% &
Add
££& )
(
££) *
	character
££* 3
)
££3 4
;
££4 5
}
§§ 
if
¶¶ 
(
¶¶ 
m_GlyphsToAdd
¶¶ 
.
¶¶ 
Count
¶¶ #
==
¶¶$ &
$num
¶¶' (
)
¶¶( )
{
ßß 
missingCharacters
®® !
=
®®" #

characters
®®$ .
;
®®. /
Profiler
©© 
.
©© 
	EndSample
©© "
(
©©" #
)
©©# $
;
©©$ %
return
™™ 
false
™™ 
;
™™ 
}
´´ 
if
ÆÆ 
(
ÆÆ 
m_AtlasTextures
ÆÆ 
[
ÆÆ  !
m_AtlasTextureIndex
ÆÆ  3
]
ÆÆ3 4
.
ÆÆ4 5
width
ÆÆ5 :
==
ÆÆ; =
$num
ÆÆ> ?
||
ÆÆ@ B
m_AtlasTextures
ÆÆC R
[
ÆÆR S!
m_AtlasTextureIndex
ÆÆS f
]
ÆÆf g
.
ÆÆg h
height
ÆÆh n
==
ÆÆo q
$num
ÆÆr s
)
ÆÆs t
{
ØØ 
m_AtlasTextures
±± 
[
±±  !
m_AtlasTextureIndex
±±  3
]
±±3 4
.
±±4 5
Resize
±±5 ;
(
±±; <
m_AtlasWidth
±±< H
,
±±H I
m_AtlasHeight
±±J W
)
±±W X
;
±±X Y

FontEngine
≤≤ 
.
≤≤ 
ResetAtlasTexture
≤≤ ,
(
≤≤, -
m_AtlasTextures
≤≤- <
[
≤≤< =!
m_AtlasTextureIndex
≤≤= P
]
≤≤P Q
)
≤≤Q R
;
≤≤R S
}
≥≥ 
Glyph
µµ 
[
µµ 
]
µµ 
glyphs
µµ 
;
µµ 
bool
∑∑ %
allGlyphsAddedToTexture
∑∑ (
=
∑∑) *

FontEngine
∑∑+ 5
.
∑∑5 6#
TryAddGlyphsToTexture
∑∑6 K
(
∑∑K L
m_GlyphsToAdd
∑∑L Y
,
∑∑Y Z
m_AtlasPadding
∑∑[ i
,
∑∑i j
GlyphPackingMode
∑∑k {
.
∑∑{ |
BestShortSideFit∑∑| å
,∑∑å ç 
m_FreeGlyphRects∑∑é û
,∑∑û ü 
m_UsedGlyphRects∑∑† ∞
,∑∑∞ ±!
m_AtlasRenderMode∑∑≤ √
,∑∑√ ƒ
m_AtlasTextures∑∑≈ ‘
[∑∑‘ ’#
m_AtlasTextureIndex∑∑’ Ë
]∑∑Ë È
,∑∑È Í
out∑∑Î Ó
glyphs∑∑Ô ı
)∑∑ı ˆ
;∑∑ˆ ˜
for
ππ 
(
ππ 
int
ππ 
i
ππ 
=
ππ 
$num
ππ 
;
ππ 
i
ππ 
<
ππ 
glyphs
ππ  &
.
ππ& '
Length
ππ' -
&&
ππ. 0
glyphs
ππ1 7
[
ππ7 8
i
ππ8 9
]
ππ9 :
!=
ππ; =
null
ππ> B
;
ππB C
i
ππD E
++
ππE G
)
ππG H
{
∫∫ 
Glyph
ªª 
glyph
ªª 
=
ªª 
glyphs
ªª $
[
ªª$ %
i
ªª% &
]
ªª& '
;
ªª' (
uint
ºº 

glyphIndex
ºº 
=
ºº  !
glyph
ºº" '
.
ºº' (
index
ºº( -
;
ºº- .
glyph
ææ 
.
ææ 

atlasIndex
ææ  
=
ææ! "!
m_AtlasTextureIndex
ææ# 6
;
ææ6 7
m_GlyphTable
¡¡ 
.
¡¡ 
Add
¡¡  
(
¡¡  !
glyph
¡¡! &
)
¡¡& '
;
¡¡' (%
m_GlyphLookupDictionary
¬¬ '
.
¬¬' (
Add
¬¬( +
(
¬¬+ ,

glyphIndex
¬¬, 6
,
¬¬6 7
glyph
¬¬8 =
)
¬¬= >
;
¬¬> ?(
m_GlyphIndexListNewlyAdded
ƒƒ *
.
ƒƒ* +
Add
ƒƒ+ .
(
ƒƒ. /

glyphIndex
ƒƒ/ 9
)
ƒƒ9 :
;
ƒƒ: ;
m_GlyphIndexList
≈≈  
.
≈≈  !
Add
≈≈! $
(
≈≈$ %

glyphIndex
≈≈% /
)
≈≈/ 0
;
≈≈0 1
}
∆∆ 
m_GlyphsToAdd
…… 
.
…… 
Clear
…… 
(
……  
)
……  !
;
……! "
for
ÃÃ 
(
ÃÃ 
int
ÃÃ 
i
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
i
ÃÃ 
<
ÃÃ 
m_CharactersToAdd
ÃÃ  1
.
ÃÃ1 2
Count
ÃÃ2 7
;
ÃÃ7 8
i
ÃÃ9 :
++
ÃÃ: <
)
ÃÃ< =
{
ÕÕ 
TMP_Character
ŒŒ 
	character
ŒŒ '
=
ŒŒ( )
m_CharactersToAdd
ŒŒ* ;
[
ŒŒ; <
i
ŒŒ< =
]
ŒŒ= >
;
ŒŒ> ?
Glyph
œœ 
glyph
œœ 
;
œœ 
if
—— 
(
—— %
m_GlyphLookupDictionary
—— +
.
——+ ,
TryGetValue
——, 7
(
——7 8
	character
——8 A
.
——A B

glyphIndex
——B L
,
——L M
out
——N Q
glyph
——R W
)
——W X
==
——Y [
false
——\ a
)
——a b
{
““ 
m_GlyphsToAdd
”” !
.
””! "
Add
””" %
(
””% &
	character
””& /
.
””/ 0

glyphIndex
””0 :
)
””: ;
;
””; <
continue
‘‘ 
;
‘‘ 
}
’’ 
	character
ÿÿ 
.
ÿÿ 
glyph
ÿÿ 
=
ÿÿ  !
glyph
ÿÿ" '
;
ÿÿ' (
	character
ŸŸ 
.
ŸŸ 
	textAsset
ŸŸ #
=
ŸŸ$ %
this
ŸŸ& *
;
ŸŸ* +
m_CharacterTable
€€  
.
€€  !
Add
€€! $
(
€€$ %
	character
€€% .
)
€€. /
;
€€/ 0)
m_CharacterLookupDictionary
‹‹ +
.
‹‹+ ,
Add
‹‹, /
(
‹‹/ 0
	character
‹‹0 9
.
‹‹9 :
unicode
‹‹: A
,
‹‹A B
	character
‹‹C L
)
‹‹L M
;
‹‹M N
m_CharactersToAdd
ﬂﬂ !
.
ﬂﬂ! "
RemoveAt
ﬂﬂ" *
(
ﬂﬂ* +
i
ﬂﬂ+ ,
)
ﬂﬂ, -
;
ﬂﬂ- .
i
‡‡ 
-=
‡‡ 
$num
‡‡ 
;
‡‡ 
}
·· 
if
‰‰ 
(
‰‰ +
m_IsMultiAtlasTexturesEnabled
‰‰ -
&&
‰‰. 0%
allGlyphsAddedToTexture
‰‰1 H
==
‰‰I K
false
‰‰L Q
)
‰‰Q R
{
ÂÂ 
while
ÊÊ 
(
ÊÊ %
allGlyphsAddedToTexture
ÊÊ .
==
ÊÊ/ 1
false
ÊÊ2 7
)
ÊÊ7 8%
allGlyphsAddedToTexture
ÁÁ +
=
ÁÁ, -+
TryAddGlyphsToNewAtlasTexture
ÁÁ. K
(
ÁÁK L
)
ÁÁL M
;
ÁÁM N
}
ËË 
if
ÎÎ 
(
ÎÎ !
includeFontFeatures
ÎÎ #
)
ÎÎ# $*
UpdateGlyphAdjustmentRecords
ÏÏ ,
(
ÏÏ, -
)
ÏÏ- .
;
ÏÏ. /
if
 
(
 
UnityEditor
 
.
 
EditorUtility
 )
.
) *
IsPersistent
* 6
(
6 7
this
7 ;
)
; <
)
< =
{
ÒÒ '
TMP_EditorResourceManager
ÚÚ )
.
ÚÚ) *'
RegisterResourceForUpdate
ÚÚ* C
(
ÚÚC D
this
ÚÚD H
)
ÚÚH I
;
ÚÚI J
}
ÛÛ 
missingCharacters
ˆˆ 
=
ˆˆ 
string
ˆˆ  &
.
ˆˆ& '
Empty
ˆˆ' ,
;
ˆˆ, -
for
˘˘ 
(
˘˘ 
int
˘˘ 
i
˘˘ 
=
˘˘ 
$num
˘˘ 
;
˘˘ 
i
˘˘ 
<
˘˘ 
m_CharactersToAdd
˘˘  1
.
˘˘1 2
Count
˘˘2 7
;
˘˘7 8
i
˘˘9 :
++
˘˘: <
)
˘˘< =
{
˙˙ 
TMP_Character
˚˚ 
	character
˚˚ '
=
˚˚( )
m_CharactersToAdd
˚˚* ;
[
˚˚; <
i
˚˚< =
]
˚˚= >
;
˚˚> ?$
s_MissingCharacterList
¸¸ &
.
¸¸& '
Add
¸¸' *
(
¸¸* +
	character
¸¸+ 4
.
¸¸4 5
unicode
¸¸5 <
)
¸¸< =
;
¸¸= >
}
˝˝ 
if
ˇˇ 
(
ˇˇ $
s_MissingCharacterList
ˇˇ &
.
ˇˇ& '
Count
ˇˇ' ,
>
ˇˇ- .
$num
ˇˇ/ 0
)
ˇˇ0 1
missingCharacters
ÄÄ !
=
ÄÄ" #$
s_MissingCharacterList
ÄÄ$ :
.
ÄÄ: ;
UintToString
ÄÄ; G
(
ÄÄG H
)
ÄÄH I
;
ÄÄI J
Profiler
ÇÇ 
.
ÇÇ 
	EndSample
ÇÇ 
(
ÇÇ 
)
ÇÇ  
;
ÇÇ  !
return
ÉÉ %
allGlyphsAddedToTexture
ÉÉ *
&&
ÉÉ+ -
!
ÉÉ. /!
isMissingCharacters
ÉÉ/ B
;
ÉÉB C
}
ÑÑ 	
internal
õõ 
bool
õõ %
TryAddCharacterInternal
õõ -
(
õõ- .
uint
õõ. 2
unicode
õõ3 :
,
õõ: ;
out
õõ< ?
TMP_Character
õõ@ M
	character
õõN W
)
õõW X
{
úú 	
Profiler
ùù 
.
ùù 
BeginSample
ùù  
(
ùù  !
$str
ùù! 6
)
ùù6 7
;
ùù7 8
	character
üü 
=
üü 
null
üü 
;
üü 
if
¢¢ 
(
¢¢ +
m_MissingUnicodesFromFontFile
¢¢ -
.
¢¢- .
Contains
¢¢. 6
(
¢¢6 7
unicode
¢¢7 >
)
¢¢> ?
)
¢¢? @
{
££ 
Profiler
§§ 
.
§§ 
	EndSample
§§ "
(
§§" #
)
§§# $
;
§§$ %
return
¶¶ 
false
¶¶ 
;
¶¶ 
}
ßß 
if
™™ 
(
™™ 

FontEngine
™™ 
.
™™ 
LoadFontFace
™™ '
(
™™' (
sourceFontFile
™™( 6
,
™™6 7

m_FaceInfo
™™8 B
.
™™B C
	pointSize
™™C L
)
™™L M
!=
™™N P
FontEngineError
™™Q `
.
™™` a
Success
™™a h
)
™™h i
return
´´ 
false
´´ 
;
´´ 
uint
≠≠ 

glyphIndex
≠≠ 
=
≠≠ 

FontEngine
≠≠ (
.
≠≠( )
GetGlyphIndex
≠≠) 6
(
≠≠6 7
unicode
≠≠7 >
)
≠≠> ?
;
≠≠? @
if
ÆÆ 
(
ÆÆ 

glyphIndex
ÆÆ 
==
ÆÆ 
$num
ÆÆ 
)
ÆÆ  
{
ØØ 
switch
±± 
(
±± 
unicode
±± 
)
±±  
{
≤≤ 
case
≥≥ 
$num
≥≥ 
:
≥≥ 

glyphIndex
µµ "
=
µµ# $

FontEngine
µµ% /
.
µµ/ 0
GetGlyphIndex
µµ0 =
(
µµ= >
$num
µµ> B
)
µµB C
;
µµC D
break
∂∂ 
;
∂∂ 
case
∑∑ 
$num
∑∑ 
:
∑∑ 
case
∏∏ 
$num
∏∏ 
:
∏∏  

glyphIndex
∫∫ "
=
∫∫# $

FontEngine
∫∫% /
.
∫∫/ 0
GetGlyphIndex
∫∫0 =
(
∫∫= >
$num
∫∫> B
)
∫∫B C
;
∫∫C D
break
ªª 
;
ªª 
}
ºº 
if
øø 
(
øø 

glyphIndex
øø 
==
øø !
$num
øø" #
)
øø# $
{
¿¿ +
m_MissingUnicodesFromFontFile
¡¡ 1
.
¡¡1 2
Add
¡¡2 5
(
¡¡5 6
unicode
¡¡6 =
)
¡¡= >
;
¡¡> ?
Profiler
√√ 
.
√√ 
	EndSample
√√ &
(
√√& '
)
√√' (
;
√√( )
return
ƒƒ 
false
ƒƒ  
;
ƒƒ  !
}
≈≈ 
}
∆∆ 
if
…… 
(
…… %
m_GlyphLookupDictionary
…… '
.
……' (
ContainsKey
……( 3
(
……3 4

glyphIndex
……4 >
)
……> ?
)
……? @
{
   
	character
ÀÀ 
=
ÀÀ 
new
ÀÀ 
TMP_Character
ÀÀ  -
(
ÀÀ- .
unicode
ÀÀ. 5
,
ÀÀ5 6
this
ÀÀ7 ;
,
ÀÀ; <%
m_GlyphLookupDictionary
ÀÀ= T
[
ÀÀT U

glyphIndex
ÀÀU _
]
ÀÀ_ `
)
ÀÀ` a
;
ÀÀa b
m_CharacterTable
ÃÃ  
.
ÃÃ  !
Add
ÃÃ! $
(
ÃÃ$ %
	character
ÃÃ% .
)
ÃÃ. /
;
ÃÃ/ 0)
m_CharacterLookupDictionary
ÕÕ +
.
ÕÕ+ ,
Add
ÕÕ, /
(
ÕÕ/ 0
unicode
ÕÕ0 7
,
ÕÕ7 8
	character
ÕÕ9 B
)
ÕÕB C
;
ÕÕC D
if
‘‘ 
(
‘‘ 
UnityEditor
‘‘ 
.
‘‘  
EditorUtility
‘‘  -
.
‘‘- .
IsPersistent
‘‘. :
(
‘‘: ;
this
‘‘; ?
)
‘‘? @
)
‘‘@ A
{
’’ '
TMP_EditorResourceManager
÷÷ -
.
÷÷- .'
RegisterResourceForUpdate
÷÷. G
(
÷÷G H
this
÷÷H L
)
÷÷L M
;
÷÷M N
}
◊◊ 
Profiler
⁄⁄ 
.
⁄⁄ 
	EndSample
⁄⁄ "
(
⁄⁄" #
)
⁄⁄# $
;
⁄⁄$ %
return
‹‹ 
true
‹‹ 
;
‹‹ 
}
›› 
Glyph
ﬂﬂ 
glyph
ﬂﬂ 
=
ﬂﬂ 
null
ﬂﬂ 
;
ﬂﬂ 
if
ˇˇ 
(
ˇˇ 
m_AtlasTextures
ˇˇ 
[
ˇˇ  !
m_AtlasTextureIndex
ˇˇ  3
]
ˇˇ3 4
.
ˇˇ4 5
width
ˇˇ5 :
==
ˇˇ; =
$num
ˇˇ> ?
||
ˇˇ@ B
m_AtlasTextures
ˇˇC R
[
ˇˇR S!
m_AtlasTextureIndex
ˇˇS f
]
ˇˇf g
.
ˇˇg h
height
ˇˇh n
==
ˇˇo q
$num
ˇˇr s
)
ˇˇs t
{
ÄÄ 
if
ÇÇ 
(
ÇÇ 
m_AtlasTextures
ÇÇ #
[
ÇÇ# $!
m_AtlasTextureIndex
ÇÇ$ 7
]
ÇÇ7 8
.
ÇÇ8 9

isReadable
ÇÇ9 C
==
ÇÇD F
false
ÇÇG L
)
ÇÇL M
{
ÉÉ 
Debug
ÑÑ 
.
ÑÑ 

LogWarning
ÑÑ $
(
ÑÑ$ %
$str
ÑÑ% \
+
ÑÑ] ^
this
ÑÑ_ c
.
ÑÑc d
name
ÑÑd h
+
ÑÑi j
$strÑÑk ô
+ÑÑö õ
m_AtlasTexturesÑÑú ´
[ÑÑ´ ¨#
m_AtlasTextureIndexÑÑ¨ ø
]ÑÑø ¿
.ÑÑ¿ ¡
nameÑÑ¡ ≈
+ÑÑ∆ «
$strÑÑ» ’
,ÑÑ’ ÷
m_AtlasTexturesÑÑ◊ Ê
[ÑÑÊ Á#
m_AtlasTextureIndexÑÑÁ ˙
]ÑÑ˙ ˚
)ÑÑ˚ ¸
;ÑÑ¸ ˝
Profiler
ÜÜ 
.
ÜÜ 
	EndSample
ÜÜ &
(
ÜÜ& '
)
ÜÜ' (
;
ÜÜ( )
return
àà 
false
àà  
;
àà  !
}
ââ 
m_AtlasTextures
ãã 
[
ãã  !
m_AtlasTextureIndex
ãã  3
]
ãã3 4
.
ãã4 5
Resize
ãã5 ;
(
ãã; <
m_AtlasWidth
ãã< H
,
ããH I
m_AtlasHeight
ããJ W
)
ããW X
;
ããX Y

FontEngine
åå 
.
åå 
ResetAtlasTexture
åå ,
(
åå, -
m_AtlasTextures
åå- <
[
åå< =!
m_AtlasTextureIndex
åå= P
]
ååP Q
)
ååQ R
;
ååR S
}
çç 
if
êê 
(
êê 

FontEngine
êê 
.
êê "
TryAddGlyphToTexture
êê /
(
êê/ 0

glyphIndex
êê0 :
,
êê: ;
m_AtlasPadding
êê< J
,
êêJ K
GlyphPackingMode
êêL \
.
êê\ ]
BestShortSideFit
êê] m
,
êêm n
m_FreeGlyphRects
êêo 
,êê Ä 
m_UsedGlyphRectsêêÅ ë
,êêë í!
m_AtlasRenderModeêêì §
,êê§ •
m_AtlasTexturesêê¶ µ
[êêµ ∂#
m_AtlasTextureIndexêê∂ …
]êê…  
,êê  À
outêêÃ œ
glyphêê– ’
)êê’ ÷
)êê÷ ◊
{
ëë 
glyph
ìì 
.
ìì 

atlasIndex
ìì  
=
ìì! "!
m_AtlasTextureIndex
ìì# 6
;
ìì6 7
m_GlyphTable
ññ 
.
ññ 
Add
ññ  
(
ññ  !
glyph
ññ! &
)
ññ& '
;
ññ' (%
m_GlyphLookupDictionary
óó '
.
óó' (
Add
óó( +
(
óó+ ,

glyphIndex
óó, 6
,
óó6 7
glyph
óó8 =
)
óó= >
;
óó> ?
	character
öö 
=
öö 
new
öö 
TMP_Character
öö  -
(
öö- .
unicode
öö. 5
,
öö5 6
this
öö7 ;
,
öö; <
glyph
öö= B
)
ööB C
;
ööC D
m_CharacterTable
õõ  
.
õõ  !
Add
õõ! $
(
õõ$ %
	character
õõ% .
)
õõ. /
;
õõ/ 0)
m_CharacterLookupDictionary
úú +
.
úú+ ,
Add
úú, /
(
úú/ 0
unicode
úú0 7
,
úú7 8
	character
úú9 B
)
úúB C
;
úúC D
m_GlyphIndexList
ûû  
.
ûû  !
Add
ûû! $
(
ûû$ %

glyphIndex
ûû% /
)
ûû/ 0
;
ûû0 1(
m_GlyphIndexListNewlyAdded
üü *
.
üü* +
Add
üü+ .
(
üü. /

glyphIndex
üü/ 9
)
üü9 :
;
üü: ;
if
°° 
(
°° 
TMP_Settings
°°  
.
°°  !&
getFontFeaturesAtRuntime
°°! 9
)
°°9 :3
%RegisterFontAssetForFontFeatureUpdate
¢¢ 9
(
¢¢9 :
this
¢¢: >
)
¢¢> ?
;
¢¢? @
if
©© 
(
©© 
UnityEditor
©© 
.
©©  
EditorUtility
©©  -
.
©©- .
IsPersistent
©©. :
(
©©: ;
this
©©; ?
)
©©? @
)
©©@ A
{
™™ '
TMP_EditorResourceManager
´´ -
.
´´- .'
RegisterResourceForUpdate
´´. G
(
´´G H
this
´´H L
)
´´L M
;
´´M N
}
¨¨ 
Profiler
ØØ 
.
ØØ 
	EndSample
ØØ "
(
ØØ" #
)
ØØ# $
;
ØØ$ %
return
±± 
true
±± 
;
±± 
}
≤≤ 
if
µµ 
(
µµ +
m_IsMultiAtlasTexturesEnabled
µµ -
)
µµ- .
{
∂∂ "
SetupNewAtlasTexture
∏∏ $
(
∏∏$ %
)
∏∏% &
;
∏∏& '
if
ªª 
(
ªª 

FontEngine
ªª 
.
ªª "
TryAddGlyphToTexture
ªª 3
(
ªª3 4

glyphIndex
ªª4 >
,
ªª> ?
m_AtlasPadding
ªª@ N
,
ªªN O
GlyphPackingMode
ªªP `
.
ªª` a
BestShortSideFit
ªªa q
,
ªªq r
m_FreeGlyphRectsªªs É
,ªªÉ Ñ 
m_UsedGlyphRectsªªÖ ï
,ªªï ñ!
m_AtlasRenderModeªªó ®
,ªª® ©
m_AtlasTexturesªª™ π
[ªªπ ∫#
m_AtlasTextureIndexªª∫ Õ
]ªªÕ Œ
,ªªŒ œ
outªª– ”
glyphªª‘ Ÿ
)ªªŸ ⁄
)ªª⁄ €
{
ºº 
glyph
ææ 
.
ææ 

atlasIndex
ææ $
=
ææ% &!
m_AtlasTextureIndex
ææ' :
;
ææ: ;
m_GlyphTable
¡¡  
.
¡¡  !
Add
¡¡! $
(
¡¡$ %
glyph
¡¡% *
)
¡¡* +
;
¡¡+ ,%
m_GlyphLookupDictionary
¬¬ +
.
¬¬+ ,
Add
¬¬, /
(
¬¬/ 0

glyphIndex
¬¬0 :
,
¬¬: ;
glyph
¬¬< A
)
¬¬A B
;
¬¬B C
	character
≈≈ 
=
≈≈ 
new
≈≈  #
TMP_Character
≈≈$ 1
(
≈≈1 2
unicode
≈≈2 9
,
≈≈9 :
this
≈≈; ?
,
≈≈? @
glyph
≈≈A F
)
≈≈F G
;
≈≈G H
m_CharacterTable
∆∆ $
.
∆∆$ %
Add
∆∆% (
(
∆∆( )
	character
∆∆) 2
)
∆∆2 3
;
∆∆3 4)
m_CharacterLookupDictionary
«« /
.
««/ 0
Add
««0 3
(
««3 4
unicode
««4 ;
,
««; <
	character
««= F
)
««F G
;
««G H
m_GlyphIndexList
…… $
.
……$ %
Add
……% (
(
……( )

glyphIndex
……) 3
)
……3 4
;
……4 5(
m_GlyphIndexListNewlyAdded
   .
.
  . /
Add
  / 2
(
  2 3

glyphIndex
  3 =
)
  = >
;
  > ?
if
ÃÃ 
(
ÃÃ 
TMP_Settings
ÃÃ $
.
ÃÃ$ %&
getFontFeaturesAtRuntime
ÃÃ% =
)
ÃÃ= >3
%RegisterFontAssetForFontFeatureUpdate
ÕÕ =
(
ÕÕ= >
this
ÕÕ> B
)
ÕÕB C
;
ÕÕC D
if
—— 
(
—— 
UnityEditor
—— #
.
——# $
EditorUtility
——$ 1
.
——1 2
IsPersistent
——2 >
(
——> ?
this
——? C
)
——C D
)
——D E
{
““ '
TMP_EditorResourceManager
”” 1
.
””1 2'
RegisterResourceForUpdate
””2 K
(
””K L
this
””L P
)
””P Q
;
””Q R
}
‘‘ 
Profiler
◊◊ 
.
◊◊ 
	EndSample
◊◊ &
(
◊◊& '
)
◊◊' (
;
◊◊( )
return
ŸŸ 
true
ŸŸ 
;
ŸŸ  
}
⁄⁄ 
}
€€ 
Profiler
›› 
.
›› 
	EndSample
›› 
(
›› 
)
››  
;
››  !
return
ﬂﬂ 
false
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
internal
„„ 
bool
„„ 6
(TryGetCharacter_and_QueueRenderToTexture
„„ >
(
„„> ?
uint
„„? C
unicode
„„D K
,
„„K L
out
„„M P
TMP_Character
„„Q ^
	character
„„_ h
)
„„h i
{
‰‰ 	
Profiler
ÂÂ 
.
ÂÂ 
BeginSample
ÂÂ  
(
ÂÂ  !
$str
ÂÂ! 6
)
ÂÂ6 7
;
ÂÂ7 8
	character
ÁÁ 
=
ÁÁ 
null
ÁÁ 
;
ÁÁ 
if
ÍÍ 
(
ÍÍ +
m_MissingUnicodesFromFontFile
ÍÍ -
.
ÍÍ- .
Contains
ÍÍ. 6
(
ÍÍ6 7
unicode
ÍÍ7 >
)
ÍÍ> ?
)
ÍÍ? @
{
ÎÎ 
Profiler
ÏÏ 
.
ÏÏ 
	EndSample
ÏÏ "
(
ÏÏ" #
)
ÏÏ# $
;
ÏÏ$ %
return
ÓÓ 
false
ÓÓ 
;
ÓÓ 
}
ÔÔ 
if
ÚÚ 
(
ÚÚ 

FontEngine
ÚÚ 
.
ÚÚ 
LoadFontFace
ÚÚ '
(
ÚÚ' (
sourceFontFile
ÚÚ( 6
,
ÚÚ6 7

m_FaceInfo
ÚÚ8 B
.
ÚÚB C
	pointSize
ÚÚC L
)
ÚÚL M
!=
ÚÚN P
FontEngineError
ÚÚQ `
.
ÚÚ` a
Success
ÚÚa h
)
ÚÚh i
return
ÛÛ 
false
ÛÛ 
;
ÛÛ 
uint
ıı 

glyphIndex
ıı 
=
ıı 

FontEngine
ıı (
.
ıı( )
GetGlyphIndex
ıı) 6
(
ıı6 7
unicode
ıı7 >
)
ıı> ?
;
ıı? @
if
ˆˆ 
(
ˆˆ 

glyphIndex
ˆˆ 
==
ˆˆ 
$num
ˆˆ 
)
ˆˆ  
{
˜˜ 
switch
˘˘ 
(
˘˘ 
unicode
˘˘ 
)
˘˘  
{
˙˙ 
case
˚˚ 
$num
˚˚ 
:
˚˚ 

glyphIndex
˝˝ "
=
˝˝# $

FontEngine
˝˝% /
.
˝˝/ 0
GetGlyphIndex
˝˝0 =
(
˝˝= >
$num
˝˝> B
)
˝˝B C
;
˝˝C D
break
˛˛ 
;
˛˛ 
case
ˇˇ 
$num
ˇˇ 
:
ˇˇ 
case
ÄÄ 
$num
ÄÄ 
:
ÄÄ  

glyphIndex
ÇÇ "
=
ÇÇ# $

FontEngine
ÇÇ% /
.
ÇÇ/ 0
GetGlyphIndex
ÇÇ0 =
(
ÇÇ= >
$num
ÇÇ> B
)
ÇÇB C
;
ÇÇC D
break
ÉÉ 
;
ÉÉ 
}
ÑÑ 
if
áá 
(
áá 

glyphIndex
áá 
==
áá !
$num
áá" #
)
áá# $
{
àà +
m_MissingUnicodesFromFontFile
ââ 1
.
ââ1 2
Add
ââ2 5
(
ââ5 6
unicode
ââ6 =
)
ââ= >
;
ââ> ?
Profiler
ãã 
.
ãã 
	EndSample
ãã &
(
ãã& '
)
ãã' (
;
ãã( )
return
åå 
false
åå  
;
åå  !
}
çç 
}
éé 
if
ëë 
(
ëë %
m_GlyphLookupDictionary
ëë '
.
ëë' (
ContainsKey
ëë( 3
(
ëë3 4

glyphIndex
ëë4 >
)
ëë> ?
)
ëë? @
{
íí 
	character
ìì 
=
ìì 
new
ìì 
TMP_Character
ìì  -
(
ìì- .
unicode
ìì. 5
,
ìì5 6
this
ìì7 ;
,
ìì; <%
m_GlyphLookupDictionary
ìì= T
[
ììT U

glyphIndex
ììU _
]
ìì_ `
)
ìì` a
;
ììa b
m_CharacterTable
îî  
.
îî  !
Add
îî! $
(
îî$ %
	character
îî% .
)
îî. /
;
îî/ 0)
m_CharacterLookupDictionary
ïï +
.
ïï+ ,
Add
ïï, /
(
ïï/ 0
unicode
ïï0 7
,
ïï7 8
	character
ïï9 B
)
ïïB C
;
ïïC D
if
úú 
(
úú 
UnityEditor
úú 
.
úú  
EditorUtility
úú  -
.
úú- .
IsPersistent
úú. :
(
úú: ;
this
úú; ?
)
úú? @
)
úú@ A
{
ùù '
TMP_EditorResourceManager
ûû -
.
ûû- .'
RegisterResourceForUpdate
ûû. G
(
ûûG H
this
ûûH L
)
ûûL M
;
ûûM N
}
üü 
Profiler
¢¢ 
.
¢¢ 
	EndSample
¢¢ "
(
¢¢" #
)
¢¢# $
;
¢¢$ %
return
§§ 
true
§§ 
;
§§ 
}
•• 
GlyphLoadFlags
ßß 
glyphLoadFlags
ßß )
=
ßß* +
(
ßß, -
GlyphRasterModes
ßß- =
.
ßß= >$
RASTER_MODE_NO_HINTING
ßß> T
&
ßßU V
(
ßßW X
GlyphRasterModes
ßßX h
)
ßßh i
m_AtlasRenderMode
ßßi z
)
ßßz {
==
ßß| ~
GlyphRasterModesßß è
.ßßè ê&
RASTER_MODE_NO_HINTINGßßê ¶
?
®® 
GlyphLoadFlags
®®  
.
®®  !
LOAD_NO_BITMAP
®®! /
|
®®0 1
GlyphLoadFlags
®®2 @
.
®®@ A
LOAD_NO_HINTING
®®A P
:
©© 
GlyphLoadFlags
©©  
.
©©  !
LOAD_NO_BITMAP
©©! /
;
©©/ 0
Glyph
´´ 
glyph
´´ 
=
´´ 
null
´´ 
;
´´ 
if
≠≠ 
(
≠≠ 

FontEngine
≠≠ 
.
≠≠ '
TryGetGlyphWithIndexValue
≠≠ 4
(
≠≠4 5

glyphIndex
≠≠5 ?
,
≠≠? @
glyphLoadFlags
≠≠A O
,
≠≠O P
out
≠≠Q T
glyph
≠≠U Z
)
≠≠Z [
)
≠≠[ \
{
ÆÆ 
m_GlyphTable
∞∞ 
.
∞∞ 
Add
∞∞  
(
∞∞  !
glyph
∞∞! &
)
∞∞& '
;
∞∞' (%
m_GlyphLookupDictionary
±± '
.
±±' (
Add
±±( +
(
±±+ ,

glyphIndex
±±, 6
,
±±6 7
glyph
±±8 =
)
±±= >
;
±±> ?
	character
¥¥ 
=
¥¥ 
new
¥¥ 
TMP_Character
¥¥  -
(
¥¥- .
unicode
¥¥. 5
,
¥¥5 6
this
¥¥7 ;
,
¥¥; <
glyph
¥¥= B
)
¥¥B C
;
¥¥C D
m_CharacterTable
µµ  
.
µµ  !
Add
µµ! $
(
µµ$ %
	character
µµ% .
)
µµ. /
;
µµ/ 0)
m_CharacterLookupDictionary
∂∂ +
.
∂∂+ ,
Add
∂∂, /
(
∂∂/ 0
unicode
∂∂0 7
,
∂∂7 8
	character
∂∂9 B
)
∂∂B C
;
∂∂C D
m_GlyphIndexList
∏∏  
.
∏∏  !
Add
∏∏! $
(
∏∏$ %

glyphIndex
∏∏% /
)
∏∏/ 0
;
∏∏0 1(
m_GlyphIndexListNewlyAdded
ππ *
.
ππ* +
Add
ππ+ .
(
ππ. /

glyphIndex
ππ/ 9
)
ππ9 :
;
ππ: ;
if
ªª 
(
ªª 
TMP_Settings
ªª  
.
ªª  !&
getFontFeaturesAtRuntime
ªª! 9
)
ªª9 :3
%RegisterFontAssetForFontFeatureUpdate
ºº 9
(
ºº9 :
this
ºº: >
)
ºº> ?
;
ºº? @
m_GlyphsToRender
øø  
.
øø  !
Add
øø! $
(
øø$ %
glyph
øø% *
)
øø* +
;
øø+ ,4
&RegisterFontAssetForAtlasTextureUpdate
¬¬ 6
(
¬¬6 7
this
¬¬7 ;
)
¬¬; <
;
¬¬< =
if
…… 
(
…… 
UnityEditor
…… 
.
……  
EditorUtility
……  -
.
……- .
IsPersistent
……. :
(
……: ;
this
……; ?
)
……? @
)
……@ A
{
   '
TMP_EditorResourceManager
ÀÀ -
.
ÀÀ- .'
RegisterResourceForUpdate
ÀÀ. G
(
ÀÀG H
this
ÀÀH L
)
ÀÀL M
;
ÀÀM N
}
ÃÃ 
Profiler
œœ 
.
œœ 
	EndSample
œœ "
(
œœ" #
)
œœ# $
;
œœ$ %
return
—— 
true
—— 
;
—— 
}
““ 
Profiler
‘‘ 
.
‘‘ 
	EndSample
‘‘ 
(
‘‘ 
)
‘‘  
;
‘‘  !
return
÷÷ 
false
÷÷ 
;
÷÷ 
}
◊◊ 	
internal
‹‹ 
void
‹‹ )
TryAddGlyphsToAtlasTextures
‹‹ 1
(
‹‹1 2
)
‹‹2 3
{
›› 	
}
çç 	
bool
îî +
TryAddGlyphsToNewAtlasTexture
îî *
(
îî* +
)
îî+ ,
{
ïï 	"
SetupNewAtlasTexture
óó  
(
óó  !
)
óó! "
;
óó" #
Glyph
ôô 
[
ôô 
]
ôô 
glyphs
ôô 
;
ôô 
bool
úú %
allGlyphsAddedToTexture
úú (
=
úú) *

FontEngine
úú+ 5
.
úú5 6#
TryAddGlyphsToTexture
úú6 K
(
úúK L
m_GlyphsToAdd
úúL Y
,
úúY Z
m_AtlasPadding
úú[ i
,
úúi j
GlyphPackingMode
úúk {
.
úú{ |
BestShortSideFitúú| å
,úúå ç 
m_FreeGlyphRectsúúé û
,úúû ü 
m_UsedGlyphRectsúú† ∞
,úú∞ ±!
m_AtlasRenderModeúú≤ √
,úú√ ƒ
m_AtlasTexturesúú≈ ‘
[úú‘ ’#
m_AtlasTextureIndexúú’ Ë
]úúË È
,úúÈ Í
outúúÎ Ó
glyphsúúÔ ı
)úúı ˆ
;úúˆ ˜
for
üü 
(
üü 
int
üü 
i
üü 
=
üü 
$num
üü 
;
üü 
i
üü 
<
üü 
glyphs
üü  &
.
üü& '
Length
üü' -
&&
üü. 0
glyphs
üü1 7
[
üü7 8
i
üü8 9
]
üü9 :
!=
üü; =
null
üü> B
;
üüB C
i
üüD E
++
üüE G
)
üüG H
{
†† 
Glyph
°° 
glyph
°° 
=
°° 
glyphs
°° $
[
°°$ %
i
°°% &
]
°°& '
;
°°' (
uint
¢¢ 

glyphIndex
¢¢ 
=
¢¢  !
glyph
¢¢" '
.
¢¢' (
index
¢¢( -
;
¢¢- .
glyph
§§ 
.
§§ 

atlasIndex
§§  
=
§§! "!
m_AtlasTextureIndex
§§# 6
;
§§6 7
m_GlyphTable
ßß 
.
ßß 
Add
ßß  
(
ßß  !
glyph
ßß! &
)
ßß& '
;
ßß' (%
m_GlyphLookupDictionary
®® '
.
®®' (
Add
®®( +
(
®®+ ,

glyphIndex
®®, 6
,
®®6 7
glyph
®®8 =
)
®®= >
;
®®> ?(
m_GlyphIndexListNewlyAdded
™™ *
.
™™* +
Add
™™+ .
(
™™. /

glyphIndex
™™/ 9
)
™™9 :
;
™™: ;
m_GlyphIndexList
´´  
.
´´  !
Add
´´! $
(
´´$ %

glyphIndex
´´% /
)
´´/ 0
;
´´0 1
}
¨¨ 
m_GlyphsToAdd
ØØ 
.
ØØ 
Clear
ØØ 
(
ØØ  
)
ØØ  !
;
ØØ! "
for
≤≤ 
(
≤≤ 
int
≤≤ 
i
≤≤ 
=
≤≤ 
$num
≤≤ 
;
≤≤ 
i
≤≤ 
<
≤≤ 
m_CharactersToAdd
≤≤  1
.
≤≤1 2
Count
≤≤2 7
;
≤≤7 8
i
≤≤9 :
++
≤≤: <
)
≤≤< =
{
≥≥ 
TMP_Character
¥¥ 
	character
¥¥ '
=
¥¥( )
m_CharactersToAdd
¥¥* ;
[
¥¥; <
i
¥¥< =
]
¥¥= >
;
¥¥> ?
Glyph
µµ 
glyph
µµ 
;
µµ 
if
∑∑ 
(
∑∑ %
m_GlyphLookupDictionary
∑∑ +
.
∑∑+ ,
TryGetValue
∑∑, 7
(
∑∑7 8
	character
∑∑8 A
.
∑∑A B

glyphIndex
∑∑B L
,
∑∑L M
out
∑∑N Q
glyph
∑∑R W
)
∑∑W X
==
∑∑Y [
false
∑∑\ a
)
∑∑a b
{
∏∏ 
m_GlyphsToAdd
ππ !
.
ππ! "
Add
ππ" %
(
ππ% &
	character
ππ& /
.
ππ/ 0

glyphIndex
ππ0 :
)
ππ: ;
;
ππ; <
continue
∫∫ 
;
∫∫ 
}
ªª 
	character
ææ 
.
ææ 
glyph
ææ 
=
ææ  !
glyph
ææ" '
;
ææ' (
	character
øø 
.
øø 
	textAsset
øø #
=
øø$ %
this
øø& *
;
øø* +
m_CharacterTable
¡¡  
.
¡¡  !
Add
¡¡! $
(
¡¡$ %
	character
¡¡% .
)
¡¡. /
;
¡¡/ 0)
m_CharacterLookupDictionary
¬¬ +
.
¬¬+ ,
Add
¬¬, /
(
¬¬/ 0
	character
¬¬0 9
.
¬¬9 :
unicode
¬¬: A
,
¬¬A B
	character
¬¬C L
)
¬¬L M
;
¬¬M N
m_CharactersToAdd
≈≈ !
.
≈≈! "
RemoveAt
≈≈" *
(
≈≈* +
i
≈≈+ ,
)
≈≈, -
;
≈≈- .
i
∆∆ 
-=
∆∆ 
$num
∆∆ 
;
∆∆ 
}
«« 
return
…… %
allGlyphsAddedToTexture
…… *
;
……* +
}
   	
void
–– "
SetupNewAtlasTexture
–– !
(
––! "
)
––" #
{
—— 	!
m_AtlasTextureIndex
““ 
+=
““  "
$num
““# $
;
““$ %
if
’’ 
(
’’ 
m_AtlasTextures
’’ 
.
’’  
Length
’’  &
==
’’' )!
m_AtlasTextureIndex
’’* =
)
’’= >
Array
÷÷ 
.
÷÷ 
Resize
÷÷ 
(
÷÷ 
ref
÷÷  
m_AtlasTextures
÷÷! 0
,
÷÷0 1
m_AtlasTextures
÷÷2 A
.
÷÷A B
Length
÷÷B H
*
÷÷I J
$num
÷÷K L
)
÷÷L M
;
÷÷M N
m_AtlasTextures
ŸŸ 
[
ŸŸ !
m_AtlasTextureIndex
ŸŸ /
]
ŸŸ/ 0
=
ŸŸ1 2
new
ŸŸ3 6
	Texture2D
ŸŸ7 @
(
ŸŸ@ A
m_AtlasWidth
ŸŸA M
,
ŸŸM N
m_AtlasHeight
ŸŸO \
,
ŸŸ\ ]
TextureFormat
ŸŸ^ k
.
ŸŸk l
Alpha8
ŸŸl r
,
ŸŸr s
false
ŸŸt y
)
ŸŸy z
;
ŸŸz {

FontEngine
⁄⁄ 
.
⁄⁄ 
ResetAtlasTexture
⁄⁄ (
(
⁄⁄( )
m_AtlasTextures
⁄⁄) 8
[
⁄⁄8 9!
m_AtlasTextureIndex
⁄⁄9 L
]
⁄⁄L M
)
⁄⁄M N
;
⁄⁄N O
int
›› 
packingModifier
›› 
=
››  !
(
››" #
(
››# $
GlyphRasterModes
››$ 4
)
››4 5
m_AtlasRenderMode
››5 F
&
››G H
GlyphRasterModes
››I Y
.
››Y Z 
RASTER_MODE_BITMAP
››Z l
)
››l m
==
››n p
GlyphRasterModes››q Å
.››Å Ç"
RASTER_MODE_BITMAP››Ç î
?››ï ñ
$num››ó ò
:››ô ö
$num››õ ú
;››ú ù
m_FreeGlyphRects
ﬁﬁ 
.
ﬁﬁ 
Clear
ﬁﬁ "
(
ﬁﬁ" #
)
ﬁﬁ# $
;
ﬁﬁ$ %
m_FreeGlyphRects
ﬂﬂ 
.
ﬂﬂ 
Add
ﬂﬂ  
(
ﬂﬂ  !
new
ﬂﬂ! $
	GlyphRect
ﬂﬂ% .
(
ﬂﬂ. /
$num
ﬂﬂ/ 0
,
ﬂﬂ0 1
$num
ﬂﬂ2 3
,
ﬂﬂ3 4
m_AtlasWidth
ﬂﬂ5 A
-
ﬂﬂB C
packingModifier
ﬂﬂD S
,
ﬂﬂS T
m_AtlasHeight
ﬂﬂU b
-
ﬂﬂc d
packingModifier
ﬂﬂe t
)
ﬂﬂt u
)
ﬂﬂu v
;
ﬂﬂv w
m_UsedGlyphRects
‡‡ 
.
‡‡ 
Clear
‡‡ "
(
‡‡" #
)
‡‡# $
;
‡‡$ %
if
‰‰ 
(
‰‰ 
UnityEditor
‰‰ 
.
‰‰ 
EditorUtility
‰‰ )
.
‰‰) *
IsPersistent
‰‰* 6
(
‰‰6 7
this
‰‰7 ;
)
‰‰; <
)
‰‰< =
{
ÂÂ 
	Texture2D
ÊÊ 
tex
ÊÊ 
=
ÊÊ 
m_AtlasTextures
ÊÊ  /
[
ÊÊ/ 0!
m_AtlasTextureIndex
ÊÊ0 C
]
ÊÊC D
;
ÊÊD E
tex
ÁÁ 
.
ÁÁ 
name
ÁÁ 
=
ÁÁ 
m_AtlasTexture
ÁÁ )
.
ÁÁ) *
name
ÁÁ* .
+
ÁÁ/ 0
$str
ÁÁ1 4
+
ÁÁ5 6!
m_AtlasTextureIndex
ÁÁ7 J
;
ÁÁJ K
UnityEditor
ÈÈ 
.
ÈÈ 
AssetDatabase
ÈÈ )
.
ÈÈ) *
AddObjectToAsset
ÈÈ* :
(
ÈÈ: ;
m_AtlasTextures
ÈÈ; J
[
ÈÈJ K!
m_AtlasTextureIndex
ÈÈK ^
]
ÈÈ^ _
,
ÈÈ_ `
this
ÈÈa e
)
ÈÈe f
;
ÈÈf g'
TMP_EditorResourceManager
ÍÍ )
.
ÍÍ) *)
RegisterResourceForReimport
ÍÍ* E
(
ÍÍE F
this
ÍÍF J
)
ÍÍJ K
;
ÍÍK L
}
ÎÎ 
}
ÌÌ 	
internal
ÛÛ 
void
ÛÛ  
UpdateAtlasTexture
ÛÛ (
(
ÛÛ( )
)
ÛÛ) *
{
ÙÙ 	
if
ˆˆ 
(
ˆˆ 
m_GlyphsToRender
ˆˆ  
.
ˆˆ  !
Count
ˆˆ! &
==
ˆˆ' )
$num
ˆˆ* +
)
ˆˆ+ ,
return
˜˜ 
;
˜˜ 
if
ÅÅ 
(
ÅÅ 
m_AtlasTextures
ÅÅ 
[
ÅÅ  !
m_AtlasTextureIndex
ÅÅ  3
]
ÅÅ3 4
.
ÅÅ4 5
width
ÅÅ5 :
==
ÅÅ; =
$num
ÅÅ> ?
||
ÅÅ@ B
m_AtlasTextures
ÅÅC R
[
ÅÅR S!
m_AtlasTextureIndex
ÅÅS f
]
ÅÅf g
.
ÅÅg h
height
ÅÅh n
==
ÅÅo q
$num
ÅÅr s
)
ÅÅs t
{
ÇÇ 
m_AtlasTextures
ÑÑ 
[
ÑÑ  !
m_AtlasTextureIndex
ÑÑ  3
]
ÑÑ3 4
.
ÑÑ4 5
Resize
ÑÑ5 ;
(
ÑÑ; <
m_AtlasWidth
ÑÑ< H
,
ÑÑH I
m_AtlasHeight
ÑÑJ W
)
ÑÑW X
;
ÑÑX Y

FontEngine
ÖÖ 
.
ÖÖ 
ResetAtlasTexture
ÖÖ ,
(
ÖÖ, -
m_AtlasTextures
ÖÖ- <
[
ÖÖ< =!
m_AtlasTextureIndex
ÖÖ= P
]
ÖÖP Q
)
ÖÖQ R
;
ÖÖR S
}
ÜÜ 
m_AtlasTextures
ãã 
[
ãã !
m_AtlasTextureIndex
ãã /
]
ãã/ 0
.
ãã0 1
Apply
ãã1 6
(
ãã6 7
false
ãã7 <
,
ãã< =
false
ãã> C
)
ããC D
;
ããD E'
TMP_EditorResourceManager
≤≤ %
.
≤≤% &'
RegisterResourceForUpdate
≤≤& ?
(
≤≤? @
this
≤≤@ D
)
≤≤D E
;
≤≤E F
}
¥¥ 	
internal
ππ 
void
ππ *
UpdateGlyphAdjustmentRecords
ππ 2
(
ππ2 3
)
ππ3 4
{
∫∫ 	
Profiler
ªª 
.
ªª 
BeginSample
ªª  
(
ªª  !
$str
ªª! C
)
ªªC D
;
ªªD E!
CopyListDataToArray
ææ 
(
ææ  
m_GlyphIndexList
ææ  0
,
ææ0 1
ref
ææ2 5
k_GlyphIndexArray
ææ6 G
)
ææG H
;
ææH I'
GlyphPairAdjustmentRecord
¡¡ %
[
¡¡% &
]
¡¡& '#
pairAdjustmentRecords
¡¡( =
=
¡¡> ?

FontEngine
¡¡@ J
.
¡¡J K)
GetGlyphPairAdjustmentTable
¡¡K f
(
¡¡f g
k_GlyphIndexArray
¡¡g x
)
¡¡x y
;
¡¡y z(
m_GlyphIndexListNewlyAdded
∆∆ &
.
∆∆& '
Clear
∆∆' ,
(
∆∆, -
)
∆∆- .
;
∆∆. /
if
»» 
(
»» #
pairAdjustmentRecords
»» %
==
»»& (
null
»») -
||
»». 0#
pairAdjustmentRecords
»»1 F
.
»»F G
Length
»»G M
==
»»N P
$num
»»Q R
)
»»R S
{
…… 
Profiler
   
.
   
	EndSample
   "
(
  " #
)
  # $
;
  $ %
return
ÀÀ 
;
ÀÀ 
}
ÃÃ 
if
ŒŒ 
(
ŒŒ  
m_FontFeatureTable
ŒŒ "
==
ŒŒ# %
null
ŒŒ& *
)
ŒŒ* + 
m_FontFeatureTable
œœ "
=
œœ# $
new
œœ% ("
TMP_FontFeatureTable
œœ) =
(
œœ= >
)
œœ> ?
;
œœ? @
for
—— 
(
—— 
int
—— 
i
—— 
=
—— 
$num
—— 
;
—— 
i
—— 
<
—— #
pairAdjustmentRecords
——  5
.
——5 6
Length
——6 <
&&
——= ?#
pairAdjustmentRecords
——@ U
[
——U V
i
——V W
]
——W X
.
——X Y#
firstAdjustmentRecord
——Y n
.
——n o

glyphIndex
——o y
!=
——z |
$num
——} ~
;
——~ 
i——Ä Å
++——Å É
)——É Ñ
{
““ 
uint
”” 
pairKey
”” 
=
”” #
pairAdjustmentRecords
”” 4
[
””4 5
i
””5 6
]
””6 7
.
””7 8$
secondAdjustmentRecord
””8 N
.
””N O

glyphIndex
””O Y
<<
””Z \
$num
””] _
|
””` a#
pairAdjustmentRecords
””b w
[
””w x
i
””x y
]
””y z
.
””z {$
firstAdjustmentRecord””{ ê
.””ê ë

glyphIndex””ë õ
;””õ ú
if
÷÷ 
(
÷÷  
m_FontFeatureTable
÷÷ &
.
÷÷& '9
+m_GlyphPairAdjustmentRecordLookupDictionary
÷÷' R
.
÷÷R S
ContainsKey
÷÷S ^
(
÷÷^ _
pairKey
÷÷_ f
)
÷÷f g
)
÷÷g h
continue
◊◊ 
;
◊◊ +
TMP_GlyphPairAdjustmentRecord
ŸŸ -
record
ŸŸ. 4
=
ŸŸ5 6
new
ŸŸ7 :+
TMP_GlyphPairAdjustmentRecord
ŸŸ; X
(
ŸŸX Y#
pairAdjustmentRecords
ŸŸY n
[
ŸŸn o
i
ŸŸo p
]
ŸŸp q
)
ŸŸq r
;
ŸŸr s 
m_FontFeatureTable
€€ "
.
€€" #*
m_GlyphPairAdjustmentRecords
€€# ?
.
€€? @
Add
€€@ C
(
€€C D
record
€€D J
)
€€J K
;
€€K L 
m_FontFeatureTable
‹‹ "
.
‹‹" #9
+m_GlyphPairAdjustmentRecordLookupDictionary
‹‹# N
.
‹‹N O
Add
‹‹O R
(
‹‹R S
pairKey
‹‹S Z
,
‹‹Z [
record
‹‹\ b
)
‹‹b c
;
‹‹c d
}
›› 
Profiler
ﬂﬂ 
.
ﬂﬂ 
	EndSample
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ  
;
ﬂﬂ  !
}
‡‡ 	
internal
ÊÊ 
void
ÊÊ *
UpdateGlyphAdjustmentRecords
ÊÊ 2
(
ÊÊ2 3
uint
ÊÊ3 7
[
ÊÊ7 8
]
ÊÊ8 9
glyphIndexes
ÊÊ: F
)
ÊÊF G
{
ÁÁ 	
Profiler
ËË 
.
ËË 
BeginSample
ËË  
(
ËË  !
$str
ËË! C
)
ËËC D
;
ËËD E'
GlyphPairAdjustmentRecord
ÎÎ %
[
ÎÎ% &
]
ÎÎ& '#
pairAdjustmentRecords
ÎÎ( =
=
ÎÎ> ?

FontEngine
ÎÎ@ J
.
ÎÎJ K)
GetGlyphPairAdjustmentTable
ÎÎK f
(
ÎÎf g
glyphIndexes
ÎÎg s
)
ÎÎs t
;
ÎÎt u
if
 
(
 #
pairAdjustmentRecords
 %
==
& (
null
) -
||
. 0#
pairAdjustmentRecords
1 F
.
F G
Length
G M
==
N P
$num
Q R
)
R S
{
ÒÒ 
Profiler
ÚÚ 
.
ÚÚ 
	EndSample
ÚÚ "
(
ÚÚ" #
)
ÚÚ# $
;
ÚÚ$ %
return
ÛÛ 
;
ÛÛ 
}
ÙÙ 
if
ˆˆ 
(
ˆˆ  
m_FontFeatureTable
ˆˆ "
==
ˆˆ# %
null
ˆˆ& *
)
ˆˆ* + 
m_FontFeatureTable
˜˜ "
=
˜˜# $
new
˜˜% ("
TMP_FontFeatureTable
˜˜) =
(
˜˜= >
)
˜˜> ?
;
˜˜? @
for
˘˘ 
(
˘˘ 
int
˘˘ 
i
˘˘ 
=
˘˘ 
$num
˘˘ 
;
˘˘ 
i
˘˘ 
<
˘˘ #
pairAdjustmentRecords
˘˘  5
.
˘˘5 6
Length
˘˘6 <
&&
˘˘= ?#
pairAdjustmentRecords
˘˘@ U
[
˘˘U V
i
˘˘V W
]
˘˘W X
.
˘˘X Y#
firstAdjustmentRecord
˘˘Y n
.
˘˘n o

glyphIndex
˘˘o y
!=
˘˘z |
$num
˘˘} ~
;
˘˘~ 
i˘˘Ä Å
++˘˘Å É
)˘˘É Ñ
{
˙˙ 
uint
˚˚ 
pairKey
˚˚ 
=
˚˚ #
pairAdjustmentRecords
˚˚ 4
[
˚˚4 5
i
˚˚5 6
]
˚˚6 7
.
˚˚7 8$
secondAdjustmentRecord
˚˚8 N
.
˚˚N O

glyphIndex
˚˚O Y
<<
˚˚Z \
$num
˚˚] _
|
˚˚` a#
pairAdjustmentRecords
˚˚b w
[
˚˚w x
i
˚˚x y
]
˚˚y z
.
˚˚z {$
firstAdjustmentRecord˚˚{ ê
.˚˚ê ë

glyphIndex˚˚ë õ
;˚˚õ ú
if
˛˛ 
(
˛˛  
m_FontFeatureTable
˛˛ &
.
˛˛& '9
+m_GlyphPairAdjustmentRecordLookupDictionary
˛˛' R
.
˛˛R S
ContainsKey
˛˛S ^
(
˛˛^ _
pairKey
˛˛_ f
)
˛˛f g
)
˛˛g h
continue
ˇˇ 
;
ˇˇ +
TMP_GlyphPairAdjustmentRecord
ÅÅ -
record
ÅÅ. 4
=
ÅÅ5 6
new
ÅÅ7 :+
TMP_GlyphPairAdjustmentRecord
ÅÅ; X
(
ÅÅX Y#
pairAdjustmentRecords
ÅÅY n
[
ÅÅn o
i
ÅÅo p
]
ÅÅp q
)
ÅÅq r
;
ÅÅr s 
m_FontFeatureTable
ÉÉ "
.
ÉÉ" #*
m_GlyphPairAdjustmentRecords
ÉÉ# ?
.
ÉÉ? @
Add
ÉÉ@ C
(
ÉÉC D
record
ÉÉD J
)
ÉÉJ K
;
ÉÉK L 
m_FontFeatureTable
ÑÑ "
.
ÑÑ" #9
+m_GlyphPairAdjustmentRecordLookupDictionary
ÑÑ# N
.
ÑÑN O
Add
ÑÑO R
(
ÑÑR S
pairKey
ÑÑS Z
,
ÑÑZ [
record
ÑÑ\ b
)
ÑÑb c
;
ÑÑc d
}
ÖÖ 
Profiler
áá 
.
áá 
	EndSample
áá 
(
áá 
)
áá  
;
áá  !
}
àà 	
internal
éé 
void
éé *
UpdateGlyphAdjustmentRecords
éé 2
(
éé2 3
List
éé3 7
<
éé7 8
uint
éé8 <
>
éé< =
glyphIndexes
éé> J
)
ééJ K
{
èè 	
}
∑∑ 	
internal
ææ 
void
ææ *
UpdateGlyphAdjustmentRecords
ææ 2
(
ææ2 3
List
ææ3 7
<
ææ7 8
uint
ææ8 <
>
ææ< =
newGlyphIndexes
ææ> M
,
ææM N
List
ææO S
<
ææS T
uint
ææT X
>
ææX Y
allGlyphIndexes
ææZ i
)
ææi j
{
øø 	
}
ÊÊ 	
void
ÓÓ !
CopyListDataToArray
ÓÓ  
<
ÓÓ  !
T
ÓÓ! "
>
ÓÓ" #
(
ÓÓ# $
List
ÓÓ$ (
<
ÓÓ( )
T
ÓÓ) *
>
ÓÓ* +
srcList
ÓÓ, 3
,
ÓÓ3 4
ref
ÓÓ5 8
T
ÓÓ9 :
[
ÓÓ: ;
]
ÓÓ; <
dstArray
ÓÓ= E
)
ÓÓE F
{
ÔÔ 	
int
 
size
 
=
 
srcList
 
.
 
Count
 $
;
$ %
if
ÛÛ 
(
ÛÛ 
dstArray
ÛÛ 
==
ÛÛ 
null
ÛÛ  
)
ÛÛ  !
dstArray
ÙÙ 
=
ÙÙ 
new
ÙÙ 
T
ÙÙ  
[
ÙÙ  !
size
ÙÙ! %
]
ÙÙ% &
;
ÙÙ& '
else
ıı 
Array
ˆˆ 
.
ˆˆ 
Resize
ˆˆ 
(
ˆˆ 
ref
ˆˆ  
dstArray
ˆˆ! )
,
ˆˆ) *
size
ˆˆ+ /
)
ˆˆ/ 0
;
ˆˆ0 1
for
¯¯ 
(
¯¯ 
int
¯¯ 
i
¯¯ 
=
¯¯ 
$num
¯¯ 
;
¯¯ 
i
¯¯ 
<
¯¯ 
size
¯¯  $
;
¯¯$ %
i
¯¯& '
++
¯¯' )
)
¯¯) *
dstArray
˘˘ 
[
˘˘ 
i
˘˘ 
]
˘˘ 
=
˘˘ 
srcList
˘˘ %
[
˘˘% &
i
˘˘& '
]
˘˘' (
;
˘˘( )
}
˙˙ 	
public
ÅÅ 
void
ÅÅ  
ClearFontAssetData
ÅÅ &
(
ÅÅ& '
bool
ÅÅ' + 
setAtlasSizeToZero
ÅÅ, >
=
ÅÅ? @
false
ÅÅA F
)
ÅÅF G
{
ÇÇ 	
Profiler
ÉÉ 
.
ÉÉ 
BeginSample
ÉÉ  
(
ÉÉ  !
$str
ÉÉ! 9
)
ÉÉ9 :
;
ÉÉ: ;"
ClearFontAssetTables
ãã  
(
ãã  !
)
ãã! "
;
ãã" # 
ClearAtlasTextures
éé 
(
éé  
setAtlasSizeToZero
éé 1
)
éé1 2
;
éé2 3%
ReadFontAssetDefinition
êê #
(
êê# $
)
êê$ %
;
êê% &'
TMP_EditorResourceManager
ññ %
.
ññ% &'
RegisterResourceForUpdate
ññ& ?
(
ññ? @
this
ññ@ D
)
ññD E
;
ññE F
Profiler
ôô 
.
ôô 
	EndSample
ôô 
(
ôô 
)
ôô  
;
ôô  !
}
öö 	
internal
üü 
void
üü !
UpdateFontAssetData
üü )
(
üü) *
)
üü* +
{
†† 	
Profiler
°° 
.
°° 
BeginSample
°°  
(
°°  !
$str
°°! :
)
°°: ;
;
°°; <
uint
§§ 
[
§§ 
]
§§ 
unicodeCharacters
§§ $
=
§§% &
new
§§' *
uint
§§+ /
[
§§/ 0
m_CharacterTable
§§0 @
.
§§@ A
Count
§§A F
]
§§F G
;
§§G H
for
¶¶ 
(
¶¶ 
int
¶¶ 
i
¶¶ 
=
¶¶ 
$num
¶¶ 
;
¶¶ 
i
¶¶ 
<
¶¶ 
m_CharacterTable
¶¶  0
.
¶¶0 1
Count
¶¶1 6
;
¶¶6 7
i
¶¶8 9
++
¶¶9 ;
)
¶¶; <
unicodeCharacters
ßß !
[
ßß! "
i
ßß" #
]
ßß# $
=
ßß% &
m_CharacterTable
ßß' 7
[
ßß7 8
i
ßß8 9
]
ßß9 :
.
ßß: ;
unicode
ßß; B
;
ßßB C"
ClearFontAssetTables
™™  
(
™™  !
)
™™! "
;
™™" # 
ClearAtlasTextures
≠≠ 
(
≠≠ 
true
≠≠ #
)
≠≠# $
;
≠≠$ %%
ReadFontAssetDefinition
ØØ #
(
ØØ# $
)
ØØ$ %
;
ØØ% &
if
¥¥ 
(
¥¥ 
unicodeCharacters
¥¥ !
.
¥¥! "
Length
¥¥" (
>
¥¥) *
$num
¥¥+ ,
)
¥¥, -
TryAddCharacters
µµ  
(
µµ  !
unicodeCharacters
µµ! 2
,
µµ2 3
true
µµ4 8
)
µµ8 9
;
µµ9 :
Profiler
∑∑ 
.
∑∑ 
	EndSample
∑∑ 
(
∑∑ 
)
∑∑  
;
∑∑  !
}
∏∏ 	
internal
ΩΩ 
void
ΩΩ "
ClearFontAssetTables
ΩΩ *
(
ΩΩ* +
)
ΩΩ+ ,
{
ææ 	
if
¿¿ 
(
¿¿ 
m_GlyphTable
¿¿ 
!=
¿¿ 
null
¿¿  $
)
¿¿$ %
m_GlyphTable
¡¡ 
.
¡¡ 
Clear
¡¡ "
(
¡¡" #
)
¡¡# $
;
¡¡$ %
if
√√ 
(
√√ 
m_CharacterTable
√√  
!=
√√! #
null
√√$ (
)
√√( )
m_CharacterTable
ƒƒ  
.
ƒƒ  !
Clear
ƒƒ! &
(
ƒƒ& '
)
ƒƒ' (
;
ƒƒ( )
if
«« 
(
«« 
m_UsedGlyphRects
««  
!=
««! #
null
««$ (
)
««( )
m_UsedGlyphRects
»»  
.
»»  !
Clear
»»! &
(
»»& '
)
»»' (
;
»»( )
if
   
(
   
m_FreeGlyphRects
    
!=
  ! #
null
  $ (
)
  ( )
{
ÀÀ 
int
ÃÃ 
packingModifier
ÃÃ #
=
ÃÃ$ %
(
ÃÃ& '
(
ÃÃ' (
GlyphRasterModes
ÃÃ( 8
)
ÃÃ8 9
m_AtlasRenderMode
ÃÃ9 J
&
ÃÃK L
GlyphRasterModes
ÃÃM ]
.
ÃÃ] ^ 
RASTER_MODE_BITMAP
ÃÃ^ p
)
ÃÃp q
==
ÃÃr t
GlyphRasterModesÃÃu Ö
.ÃÃÖ Ü"
RASTER_MODE_BITMAPÃÃÜ ò
?ÃÃô ö
$numÃÃõ ú
:ÃÃù û
$numÃÃü †
;ÃÃ† °
m_FreeGlyphRects
ÕÕ  
.
ÕÕ  !
Clear
ÕÕ! &
(
ÕÕ& '
)
ÕÕ' (
;
ÕÕ( )
m_FreeGlyphRects
ŒŒ  
.
ŒŒ  !
Add
ŒŒ! $
(
ŒŒ$ %
new
ŒŒ% (
	GlyphRect
ŒŒ) 2
(
ŒŒ2 3
$num
ŒŒ3 4
,
ŒŒ4 5
$num
ŒŒ6 7
,
ŒŒ7 8
m_AtlasWidth
ŒŒ9 E
-
ŒŒF G
packingModifier
ŒŒH W
,
ŒŒW X
m_AtlasHeight
ŒŒY f
-
ŒŒg h
packingModifier
ŒŒi x
)
ŒŒx y
)
ŒŒy z
;
ŒŒz {
}
œœ 
if
—— 
(
—— 
m_GlyphsToRender
——  
!=
——! #
null
——$ (
)
——( )
m_GlyphsToRender
““  
.
““  !
Clear
““! &
(
““& '
)
““' (
;
““( )
if
‘‘ 
(
‘‘ 
m_GlyphsRendered
‘‘  
!=
‘‘! #
null
‘‘$ (
)
‘‘( )
m_GlyphsRendered
’’  
.
’’  !
Clear
’’! &
(
’’& '
)
’’' (
;
’’( )
if
ÿÿ 
(
ÿÿ  
m_FontFeatureTable
ÿÿ "
!=
ÿÿ# %
null
ÿÿ& *
&&
ÿÿ+ - 
m_FontFeatureTable
ÿÿ. @
.
ÿÿ@ A*
m_GlyphPairAdjustmentRecords
ÿÿA ]
!=
ÿÿ^ `
null
ÿÿa e
)
ÿÿe f 
m_FontFeatureTable
ŸŸ "
.
ŸŸ" #(
glyphPairAdjustmentRecords
ŸŸ# =
.
ŸŸ= >
Clear
ŸŸ> C
(
ŸŸC D
)
ŸŸD E
;
ŸŸE F
}
⁄⁄ 	
internal
‡‡ 
void
‡‡  
ClearAtlasTextures
‡‡ (
(
‡‡( )
bool
‡‡) - 
setAtlasSizeToZero
‡‡. @
=
‡‡A B
false
‡‡C H
)
‡‡H I
{
·· 	!
m_AtlasTextureIndex
‚‚ 
=
‚‚  !
$num
‚‚" #
;
‚‚# $
if
ÂÂ 
(
ÂÂ 
m_AtlasTextures
ÂÂ 
==
ÂÂ  "
null
ÂÂ# '
)
ÂÂ' (
return
ÊÊ 
;
ÊÊ 
for
ÈÈ 
(
ÈÈ 
int
ÈÈ 
i
ÈÈ 
=
ÈÈ 
$num
ÈÈ 
;
ÈÈ 
i
ÈÈ 
<
ÈÈ 
m_AtlasTextures
ÈÈ  /
.
ÈÈ/ 0
Length
ÈÈ0 6
;
ÈÈ6 7
i
ÈÈ8 9
++
ÈÈ9 ;
)
ÈÈ; <
{
ÍÍ 
	Texture2D
ÎÎ 
texture
ÎÎ !
=
ÎÎ" #
m_AtlasTextures
ÎÎ$ 3
[
ÎÎ3 4
i
ÎÎ4 5
]
ÎÎ5 6
;
ÎÎ6 7
if
ÌÌ 
(
ÌÌ 
i
ÌÌ 
>
ÌÌ 
$num
ÌÌ 
&&
ÌÌ 
texture
ÌÌ $
!=
ÌÌ% '
null
ÌÌ( ,
)
ÌÌ, -
{
ÓÓ 
DestroyImmediate
ÔÔ $
(
ÔÔ$ %
texture
ÔÔ% ,
,
ÔÔ, -
true
ÔÔ. 2
)
ÔÔ2 3
;
ÔÔ3 4
if
ÚÚ 
(
ÚÚ 
UnityEditor
ÚÚ #
.
ÚÚ# $
EditorUtility
ÚÚ$ 1
.
ÚÚ1 2
IsPersistent
ÚÚ2 >
(
ÚÚ> ?
this
ÚÚ? C
)
ÚÚC D
)
ÚÚD E'
TMP_EditorResourceManager
ÛÛ 1
.
ÛÛ1 2)
RegisterResourceForReimport
ÛÛ2 M
(
ÛÛM N
this
ÛÛN R
)
ÛÛR S
;
ÛÛS T
}
ıı 
if
˜˜ 
(
˜˜ 
texture
˜˜ 
==
˜˜ 
null
˜˜ #
)
˜˜# $
continue
¯¯ 
;
¯¯ 
if
˚˚ 
(
˚˚ 
m_AtlasTextures
˚˚ #
[
˚˚# $
i
˚˚$ %
]
˚˚% &
.
˚˚& '

isReadable
˚˚' 1
==
˚˚2 4
false
˚˚5 :
)
˚˚: ;
{
¸¸ '
FontEngineEditorUtilities
˛˛ -
.
˛˛- .'
SetAtlasTextureIsReadable
˛˛. G
(
˛˛G H
m_AtlasTextures
˛˛H W
[
˛˛W X
i
˛˛X Y
]
˛˛Y Z
,
˛˛Z [
true
˛˛\ `
)
˛˛` a
;
˛˛a b
}
ÄÄ 
if
ÇÇ 
(
ÇÇ  
setAtlasSizeToZero
ÇÇ &
)
ÇÇ& '
{
ÉÉ 
texture
ÑÑ 
.
ÑÑ 
Resize
ÑÑ "
(
ÑÑ" #
$num
ÑÑ# $
,
ÑÑ$ %
$num
ÑÑ& '
,
ÑÑ' (
TextureFormat
ÑÑ) 6
.
ÑÑ6 7
Alpha8
ÑÑ7 =
,
ÑÑ= >
false
ÑÑ? D
)
ÑÑD E
;
ÑÑE F
}
ÖÖ 
else
ÜÜ 
if
ÜÜ 
(
ÜÜ 
texture
ÜÜ  
.
ÜÜ  !
width
ÜÜ! &
!=
ÜÜ' )
m_AtlasWidth
ÜÜ* 6
||
ÜÜ7 9
texture
ÜÜ: A
.
ÜÜA B
height
ÜÜB H
!=
ÜÜI K
m_AtlasHeight
ÜÜL Y
)
ÜÜY Z
{
áá 
texture
àà 
.
àà 
Resize
àà "
(
àà" #
m_AtlasWidth
àà# /
,
àà/ 0
m_AtlasHeight
àà1 >
,
àà> ?
TextureFormat
àà@ M
.
ààM N
Alpha8
ààN T
,
ààT U
false
ààV [
)
àà[ \
;
àà\ ]
}
ââ 

FontEngine
åå 
.
åå 
ResetAtlasTexture
åå ,
(
åå, -
texture
åå- 4
)
åå4 5
;
åå5 6
texture
çç 
.
çç 
Apply
çç 
(
çç 
)
çç 
;
çç  
if
èè 
(
èè 
i
èè 
==
èè 
$num
èè 
)
èè 
m_AtlasTexture
êê "
=
êê# $
texture
êê% ,
;
êê, -
m_AtlasTextures
íí 
[
íí  
i
íí  !
]
íí! "
=
íí# $
texture
íí% ,
;
íí, -
}
ìì 
}
îî 	
internal
ôô 
void
ôô 
UpgradeFontAsset
ôô &
(
ôô& '
)
ôô' (
{
öö 	
	m_Version
õõ 
=
õõ 
$str
õõ 
;
õõ  
Debug
ùù 
.
ùù 
Log
ùù 
(
ùù 
$str
ùù .
+
ùù/ 0
this
ùù1 5
.
ùù5 6
name
ùù6 :
+
ùù; <
$str
ùù= L
+
ùùM N
	m_Version
ùùO X
+
ùùY Z
$str
ùù[ ^
,
ùù^ _
this
ùù` d
)
ùùd e
;
ùùe f

m_FaceInfo
üü 
.
üü 

familyName
üü !
=
üü" #

m_fontInfo
üü$ .
.
üü. /
Name
üü/ 3
;
üü3 4

m_FaceInfo
†† 
.
†† 
	styleName
††  
=
††! "
string
††# )
.
††) *
Empty
††* /
;
††/ 0

m_FaceInfo
¢¢ 
.
¢¢ 
	pointSize
¢¢  
=
¢¢! "
(
¢¢# $
int
¢¢$ '
)
¢¢' (

m_fontInfo
¢¢( 2
.
¢¢2 3
	PointSize
¢¢3 <
;
¢¢< =

m_FaceInfo
££ 
.
££ 
scale
££ 
=
££ 

m_fontInfo
££ )
.
££) *
Scale
££* /
;
££/ 0

m_FaceInfo
•• 
.
•• 

lineHeight
•• !
=
••" #

m_fontInfo
••$ .
.
••. /

LineHeight
••/ 9
;
••9 :

m_FaceInfo
¶¶ 
.
¶¶ 

ascentLine
¶¶ !
=
¶¶" #

m_fontInfo
¶¶$ .
.
¶¶. /
Ascender
¶¶/ 7
;
¶¶7 8

m_FaceInfo
ßß 
.
ßß 
capLine
ßß 
=
ßß  

m_fontInfo
ßß! +
.
ßß+ ,
	CapHeight
ßß, 5
;
ßß5 6

m_FaceInfo
®® 
.
®® 
meanLine
®® 
=
®®  !

m_fontInfo
®®" ,
.
®®, -

CenterLine
®®- 7
;
®®7 8

m_FaceInfo
©© 
.
©© 
baseline
©© 
=
©©  !

m_fontInfo
©©" ,
.
©©, -
Baseline
©©- 5
;
©©5 6

m_FaceInfo
™™ 
.
™™ 
descentLine
™™ "
=
™™# $

m_fontInfo
™™% /
.
™™/ 0
	Descender
™™0 9
;
™™9 :

m_FaceInfo
¨¨ 
.
¨¨ 
superscriptOffset
¨¨ (
=
¨¨) *

m_fontInfo
¨¨+ 5
.
¨¨5 6
SuperscriptOffset
¨¨6 G
;
¨¨G H

m_FaceInfo
≠≠ 
.
≠≠ 
superscriptSize
≠≠ &
=
≠≠' (

m_fontInfo
≠≠) 3
.
≠≠3 4
SubSize
≠≠4 ;
;
≠≠; <

m_FaceInfo
ÆÆ 
.
ÆÆ 
subscriptOffset
ÆÆ &
=
ÆÆ' (

m_fontInfo
ÆÆ) 3
.
ÆÆ3 4
SubscriptOffset
ÆÆ4 C
;
ÆÆC D

m_FaceInfo
ØØ 
.
ØØ 
subscriptSize
ØØ $
=
ØØ% &

m_fontInfo
ØØ' 1
.
ØØ1 2
SubSize
ØØ2 9
;
ØØ9 :

m_FaceInfo
±± 
.
±± 
underlineOffset
±± &
=
±±' (

m_fontInfo
±±) 3
.
±±3 4
	Underline
±±4 =
;
±±= >

m_FaceInfo
≤≤ 
.
≤≤  
underlineThickness
≤≤ )
=
≤≤* +

m_fontInfo
≤≤, 6
.
≤≤6 7 
UnderlineThickness
≤≤7 I
;
≤≤I J

m_FaceInfo
≥≥ 
.
≥≥ !
strikethroughOffset
≥≥ *
=
≥≥+ ,

m_fontInfo
≥≥- 7
.
≥≥7 8
strikethrough
≥≥8 E
;
≥≥E F

m_FaceInfo
¥¥ 
.
¥¥ $
strikethroughThickness
¥¥ -
=
¥¥. /

m_fontInfo
¥¥0 :
.
¥¥: ;$
strikethroughThickness
¥¥; Q
;
¥¥Q R

m_FaceInfo
∂∂ 
.
∂∂ 
tabWidth
∂∂ 
=
∂∂  !

m_fontInfo
∂∂" ,
.
∂∂, -
TabWidth
∂∂- 5
;
∂∂5 6
if
∏∏ 
(
∏∏ 
m_AtlasTextures
∏∏ 
==
∏∏  "
null
∏∏# '
||
∏∏( *
m_AtlasTextures
∏∏+ :
.
∏∏: ;
Length
∏∏; A
==
∏∏B D
$num
∏∏E F
)
∏∏F G
m_AtlasTextures
ππ 
=
ππ  !
new
ππ" %
	Texture2D
ππ& /
[
ππ/ 0
$num
ππ0 1
]
ππ1 2
;
ππ2 3
m_AtlasTextures
ªª 
[
ªª 
$num
ªª 
]
ªª 
=
ªª  
atlas
ªª! &
;
ªª& '
m_AtlasWidth
øø 
=
øø 
(
øø 
int
øø 
)
øø  

m_fontInfo
øø  *
.
øø* +

AtlasWidth
øø+ 5
;
øø5 6
m_AtlasHeight
¿¿ 
=
¿¿ 
(
¿¿ 
int
¿¿  
)
¿¿  !

m_fontInfo
¿¿! +
.
¿¿+ ,
AtlasHeight
¿¿, 7
;
¿¿7 8
m_AtlasPadding
¡¡ 
=
¡¡ 
(
¡¡ 
int
¡¡ !
)
¡¡! "

m_fontInfo
¡¡" ,
.
¡¡, -
Padding
¡¡- 4
;
¡¡4 5
switch
√√ 
(
√√  
m_CreationSettings
√√ %
.
√√% &

renderMode
√√& 0
)
√√0 1
{
ƒƒ 
case
≈≈ 
$num
≈≈ 
:
≈≈ 
m_AtlasRenderMode
∆∆ %
=
∆∆& '
GlyphRenderMode
∆∆( 7
.
∆∆7 8
SMOOTH_HINTED
∆∆8 E
;
∆∆E F
break
«« 
;
«« 
case
»» 
$num
»» 
:
»» 
m_AtlasRenderMode
…… %
=
……& '
GlyphRenderMode
……( 7
.
……7 8
SMOOTH
……8 >
;
……> ?
break
   
;
   
case
ÀÀ 
$num
ÀÀ 
:
ÀÀ 
m_AtlasRenderMode
ÃÃ %
=
ÃÃ& '
GlyphRenderMode
ÃÃ( 7
.
ÃÃ7 8
RASTER_HINTED
ÃÃ8 E
;
ÃÃE F
break
ÕÕ 
;
ÕÕ 
case
ŒŒ 
$num
ŒŒ 
:
ŒŒ 
m_AtlasRenderMode
œœ %
=
œœ& '
GlyphRenderMode
œœ( 7
.
œœ7 8
RASTER
œœ8 >
;
œœ> ?
break
–– 
;
–– 
case
—— 
$num
—— 
:
—— 
m_AtlasRenderMode
““ %
=
““& '
GlyphRenderMode
““( 7
.
““7 8
SDF16
““8 =
;
““= >
break
”” 
;
”” 
case
‘‘ 
$num
‘‘ 
:
‘‘ 
m_AtlasRenderMode
’’ %
=
’’& '
GlyphRenderMode
’’( 7
.
’’7 8
SDF32
’’8 =
;
’’= >
break
÷÷ 
;
÷÷ 
}
◊◊ 
if
‹‹ 
(
‹‹ 
fontWeights
‹‹ 
!=
‹‹ 
null
‹‹ #
&&
‹‹$ &
fontWeights
‹‹' 2
.
‹‹2 3
Length
‹‹3 9
>
‹‹: ;
$num
‹‹< =
)
‹‹= >
{
›› 
m_FontWeightTable
ﬁﬁ !
[
ﬁﬁ! "
$num
ﬁﬁ" #
]
ﬁﬁ# $
=
ﬁﬁ% &
fontWeights
ﬁﬁ' 2
[
ﬁﬁ2 3
$num
ﬁﬁ3 4
]
ﬁﬁ4 5
;
ﬁﬁ5 6
m_FontWeightTable
ﬂﬂ !
[
ﬂﬂ! "
$num
ﬂﬂ" #
]
ﬂﬂ# $
=
ﬂﬂ% &
fontWeights
ﬂﬂ' 2
[
ﬂﬂ2 3
$num
ﬂﬂ3 4
]
ﬂﬂ4 5
;
ﬂﬂ5 6
}
„„ 
if
ÊÊ 
(
ÊÊ  
fallbackFontAssets
ÊÊ "
!=
ÊÊ# %
null
ÊÊ& *
&&
ÊÊ+ - 
fallbackFontAssets
ÊÊ. @
.
ÊÊ@ A
Count
ÊÊA F
>
ÊÊG H
$num
ÊÊI J
)
ÊÊJ K
{
ÁÁ 
if
ËË 
(
ËË &
m_FallbackFontAssetTable
ËË ,
==
ËË- /
null
ËË0 4
)
ËË4 5&
m_FallbackFontAssetTable
ÈÈ ,
=
ÈÈ- .
new
ÈÈ/ 2
List
ÈÈ3 7
<
ÈÈ7 8
TMP_FontAsset
ÈÈ8 E
>
ÈÈE F
(
ÈÈF G 
fallbackFontAssets
ÈÈG Y
.
ÈÈY Z
Count
ÈÈZ _
)
ÈÈ_ `
;
ÈÈ` a
for
ÎÎ 
(
ÎÎ 
int
ÎÎ 
i
ÎÎ 
=
ÎÎ 
$num
ÎÎ 
;
ÎÎ 
i
ÎÎ  !
<
ÎÎ" # 
fallbackFontAssets
ÎÎ$ 6
.
ÎÎ6 7
Count
ÎÎ7 <
;
ÎÎ< =
i
ÎÎ> ?
++
ÎÎ? A
)
ÎÎA B&
m_FallbackFontAssetTable
ÏÏ ,
.
ÏÏ, -
Add
ÏÏ- 0
(
ÏÏ0 1 
fallbackFontAssets
ÏÏ1 C
[
ÏÏC D
i
ÏÏD E
]
ÏÏE F
)
ÏÏF G
;
ÏÏG H
}
 
if
ÛÛ 
(
ÛÛ  
m_CreationSettings
ÛÛ "
.
ÛÛ" # 
sourceFontFileGUID
ÛÛ# 5
!=
ÛÛ6 8
null
ÛÛ9 =
||
ÛÛ> @ 
m_CreationSettings
ÛÛA S
.
ÛÛS T 
sourceFontFileGUID
ÛÛT f
!=
ÛÛg i
string
ÛÛj p
.
ÛÛp q
Empty
ÛÛq v
)
ÛÛv w
{
ÙÙ "
m_SourceFontFileGUID
ıı $
=
ıı% & 
m_CreationSettings
ıı' 9
.
ıı9 : 
sourceFontFileGUID
ıı: L
;
ııL M
}
ˆˆ 
else
˜˜ 
{
¯¯ 
Debug
˘˘ 
.
˘˘ 

LogWarning
˘˘  
(
˘˘  !
$str
˘˘! /
+
˘˘0 1
this
˘˘2 6
.
˘˘6 7
name
˘˘7 ;
+
˘˘< =
$str˘˘> Ô
,˘˘Ô 
this˘˘Ò ı
)˘˘ı ˆ
;˘˘ˆ ˜
}
˙˙ 
m_GlyphTable
˝˝ 
.
˝˝ 
Clear
˝˝ 
(
˝˝ 
)
˝˝  
;
˝˝  !
m_CharacterTable
˛˛ 
.
˛˛ 
Clear
˛˛ "
(
˛˛" #
)
˛˛# $
;
˛˛$ %
bool
åå %
isSpaceCharacterPresent
åå (
=
åå) *
false
åå+ 0
;
åå0 1
for
çç 
(
çç 
int
çç 
i
çç 
=
çç 
$num
çç 
;
çç 
i
çç 
<
çç 
m_glyphInfoList
çç  /
.
çç/ 0
Count
çç0 5
;
çç5 6
i
çç7 8
++
çç8 :
)
çç: ;
{
éé 
	TMP_Glyph
èè 
oldGlyph
èè "
=
èè# $
m_glyphInfoList
èè% 4
[
èè4 5
i
èè5 6
]
èè6 7
;
èè7 8
Glyph
ëë 
glyph
ëë 
=
ëë 
new
ëë !
Glyph
ëë" '
(
ëë' (
)
ëë( )
;
ëë) *
uint
ìì 

glyphIndex
ìì 
=
ìì  !
(
ìì" #
uint
ìì# '
)
ìì' (
i
ìì( )
+
ìì* +
$num
ìì, -
;
ìì- .
glyph
öö 
.
öö 
index
öö 
=
öö 

glyphIndex
öö (
;
öö( )
glyph
õõ 
.
õõ 
	glyphRect
õõ 
=
õõ  !
new
õõ" %
	GlyphRect
õõ& /
(
õõ/ 0
(
õõ0 1
int
õõ1 4
)
õõ4 5
oldGlyph
õõ5 =
.
õõ= >
x
õõ> ?
,
õõ? @
m_AtlasHeight
õõA N
-
õõO P
(
õõQ R
int
õõR U
)
õõU V
(
õõV W
oldGlyph
õõW _
.
õõ_ `
y
õõ` a
+
õõb c
oldGlyph
õõd l
.
õõl m
height
õõm s
+
õõt u
$num
õõv z
)
õõz {
,
õõ{ |
(
õõ} ~
intõõ~ Å
)õõÅ Ç
(õõÇ É
oldGlyphõõÉ ã
.õõã å
widthõõå ë
+õõí ì
$numõõî ò
)õõò ô
,õõô ö
(õõõ ú
intõõú ü
)õõü †
(õõ† °
oldGlyphõõ° ©
.õõ© ™
heightõõ™ ∞
+õõ± ≤
$numõõ≥ ∑
)õõ∑ ∏
)õõ∏ π
;õõπ ∫
glyph
úú 
.
úú 
metrics
úú 
=
úú 
new
úú  #
GlyphMetrics
úú$ 0
(
úú0 1
oldGlyph
úú1 9
.
úú9 :
width
úú: ?
,
úú? @
oldGlyph
úúA I
.
úúI J
height
úúJ P
,
úúP Q
oldGlyph
úúR Z
.
úúZ [
xOffset
úú[ b
,
úúb c
oldGlyph
úúd l
.
úúl m
yOffset
úúm t
,
úút u
oldGlyph
úúv ~
.
úú~ 
xAdvanceúú á
)úúá à
;úúà â
glyph
ùù 
.
ùù 
scale
ùù 
=
ùù 
oldGlyph
ùù &
.
ùù& '
scale
ùù' ,
;
ùù, -
glyph
ûû 
.
ûû 

atlasIndex
ûû  
=
ûû! "
$num
ûû# $
;
ûû$ %
m_GlyphTable
†† 
.
†† 
Add
††  
(
††  !
glyph
††! &
)
††& '
;
††' (
TMP_Character
¢¢ 
	character
¢¢ '
=
¢¢( )
new
¢¢* -
TMP_Character
¢¢. ;
(
¢¢; <
(
¢¢< =
uint
¢¢= A
)
¢¢A B
oldGlyph
¢¢B J
.
¢¢J K
id
¢¢K M
,
¢¢M N
this
¢¢O S
,
¢¢S T
glyph
¢¢U Z
)
¢¢Z [
;
¢¢[ \
if
§§ 
(
§§ 
oldGlyph
§§ 
.
§§ 
id
§§ 
==
§§  "
$num
§§# %
)
§§% &%
isSpaceCharacterPresent
•• +
=
••, -
true
••. 2
;
••2 3
m_CharacterTable
ßß  
.
ßß  !
Add
ßß! $
(
ßß$ %
	character
ßß% .
)
ßß. /
;
ßß/ 0
}
®® 
if
´´ 
(
´´ 
!
´´ %
isSpaceCharacterPresent
´´ (
)
´´( )
{
¨¨ 
Debug
≠≠ 
.
≠≠ 
Log
≠≠ 
(
≠≠ 
$str
≠≠ 4
+
≠≠5 6
this
≠≠7 ;
.
≠≠; <
name
≠≠< @
+
≠≠A B
$str
≠≠C F
)
≠≠F G
;
≠≠G H
Glyph
ÆÆ 
glyph
ÆÆ 
=
ÆÆ 
new
ÆÆ !
Glyph
ÆÆ" '
(
ÆÆ' (
$num
ÆÆ( )
,
ÆÆ) *
new
ÆÆ+ .
GlyphMetrics
ÆÆ/ ;
(
ÆÆ; <
$num
ÆÆ< =
,
ÆÆ= >
$num
ÆÆ? @
,
ÆÆ@ A
$num
ÆÆB C
,
ÆÆC D
$num
ÆÆE F
,
ÆÆF G

m_FaceInfo
ÆÆH R
.
ÆÆR S

ascentLine
ÆÆS ]
/
ÆÆ^ _
$num
ÆÆ` a
)
ÆÆa b
,
ÆÆb c
	GlyphRect
ÆÆd m
.
ÆÆm n
zero
ÆÆn r
,
ÆÆr s
$num
ÆÆt x
,
ÆÆx y
$num
ÆÆz {
)
ÆÆ{ |
;
ÆÆ| }
m_GlyphTable
ØØ 
.
ØØ 
Add
ØØ  
(
ØØ  !
glyph
ØØ! &
)
ØØ& '
;
ØØ' (
m_CharacterTable
∞∞  
.
∞∞  !
Add
∞∞! $
(
∞∞$ %
new
∞∞% (
TMP_Character
∞∞) 6
(
∞∞6 7
$num
∞∞7 9
,
∞∞9 :
this
∞∞; ?
,
∞∞? @
glyph
∞∞A F
)
∞∞F G
)
∞∞G H
;
∞∞H I
}
±± %
ReadFontAssetDefinition
∂∂ #
(
∂∂# $
)
∂∂$ %
;
∂∂% &
if
ªª 
(
ªª 
UnityEditor
ªª 
.
ªª 
EditorUtility
ªª )
.
ªª) *
IsPersistent
ªª* 6
(
ªª6 7
this
ªª7 ;
)
ªª; <
)
ªª< =
{
ºº '
TMP_EditorResourceManager
ΩΩ )
.
ΩΩ) *'
RegisterResourceForUpdate
ΩΩ* C
(
ΩΩC D
this
ΩΩD H
)
ΩΩH I
;
ΩΩI J
}
ææ 
}
¿¿ 	
void
≈≈ ;
-UpgradeGlyphAdjustmentTableToFontFeatureTable
≈≈ :
(
≈≈: ;
)
≈≈; <
{
∆∆ 	
Debug
«« 
.
«« 
Log
«« 
(
«« 
$str
«« .
+
««/ 0
this
««1 5
.
««5 6
name
««6 :
+
««; <
$str
««= X
,
««X Y
this
««Z ^
)
««^ _
;
««_ `
if
…… 
(
……  
m_FontFeatureTable
…… "
==
……# %
null
……& *
)
……* + 
m_FontFeatureTable
   "
=
  # $
new
  % ("
TMP_FontFeatureTable
  ) =
(
  = >
)
  > ?
;
  ? @
int
ÃÃ 
	pairCount
ÃÃ 
=
ÃÃ 
m_KerningTable
ÃÃ *
.
ÃÃ* +
kerningPairs
ÃÃ+ 7
.
ÃÃ7 8
Count
ÃÃ8 =
;
ÃÃ= > 
m_FontFeatureTable
ŒŒ 
.
ŒŒ *
m_GlyphPairAdjustmentRecords
ŒŒ ;
=
ŒŒ< =
new
ŒŒ> A
List
ŒŒB F
<
ŒŒF G+
TMP_GlyphPairAdjustmentRecord
ŒŒG d
>
ŒŒd e
(
ŒŒe f
	pairCount
ŒŒf o
)
ŒŒo p
;
ŒŒp q
for
–– 
(
–– 
int
–– 
i
–– 
=
–– 
$num
–– 
;
–– 
i
–– 
<
–– 
	pairCount
––  )
;
––) *
i
––+ ,
++
––, .
)
––. /
{
—— 
KerningPair
““ 
pair
““  
=
““! "
m_KerningTable
““# 1
.
““1 2
kerningPairs
““2 >
[
““> ?
i
““? @
]
““@ A
;
““A B
uint
‘‘ 
firstGlyphIndex
‘‘ $
=
‘‘% &
$num
‘‘' (
;
‘‘( )
TMP_Character
’’ 
firstCharacter
’’ ,
;
’’, -
if
◊◊ 
(
◊◊ )
m_CharacterLookupDictionary
◊◊ /
.
◊◊/ 0
TryGetValue
◊◊0 ;
(
◊◊; <
pair
◊◊< @
.
◊◊@ A

firstGlyph
◊◊A K
,
◊◊K L
out
◊◊M P
firstCharacter
◊◊Q _
)
◊◊_ `
)
◊◊` a
firstGlyphIndex
ÿÿ #
=
ÿÿ$ %
firstCharacter
ÿÿ& 4
.
ÿÿ4 5

glyphIndex
ÿÿ5 ?
;
ÿÿ? @
uint
⁄⁄ 
secondGlyphIndex
⁄⁄ %
=
⁄⁄& '
$num
⁄⁄( )
;
⁄⁄) *
TMP_Character
€€ 
secondCharacter
€€ -
;
€€- .
if
›› 
(
›› )
m_CharacterLookupDictionary
›› /
.
››/ 0
TryGetValue
››0 ;
(
››; <
pair
››< @
.
››@ A
secondGlyph
››A L
,
››L M
out
››N Q
secondCharacter
››R a
)
››a b
)
››b c
secondGlyphIndex
ﬁﬁ $
=
ﬁﬁ% &
secondCharacter
ﬁﬁ' 6
.
ﬁﬁ6 7

glyphIndex
ﬁﬁ7 A
;
ﬁﬁA B'
TMP_GlyphAdjustmentRecord
‡‡ )#
firstAdjustmentRecord
‡‡* ?
=
‡‡@ A
new
‡‡B E'
TMP_GlyphAdjustmentRecord
‡‡F _
(
‡‡_ `
firstGlyphIndex
‡‡` o
,
‡‡o p
new
‡‡q t#
TMP_GlyphValueRecord‡‡u â
(‡‡â ä
pair‡‡ä é
.‡‡é è%
firstGlyphAdjustments‡‡è §
.‡‡§ •

xPlacement‡‡• Ø
,‡‡Ø ∞
pair‡‡± µ
.‡‡µ ∂%
firstGlyphAdjustments‡‡∂ À
.‡‡À Ã

yPlacement‡‡Ã ÷
,‡‡÷ ◊
pair‡‡ÿ ‹
.‡‡‹ ›%
firstGlyphAdjustments‡‡› Ú
.‡‡Ú Û
xAdvance‡‡Û ˚
,‡‡˚ ¸
pair‡‡˝ Å
.‡‡Å Ç%
firstGlyphAdjustments‡‡Ç ó
.‡‡ó ò
yAdvance‡‡ò †
)‡‡† °
)‡‡° ¢
;‡‡¢ £'
TMP_GlyphAdjustmentRecord
·· )$
secondAdjustmentRecord
··* @
=
··A B
new
··C F'
TMP_GlyphAdjustmentRecord
··G `
(
··` a
secondGlyphIndex
··a q
,
··q r
new
··s v#
TMP_GlyphValueRecord··w ã
(··ã å
pair··å ê
.··ê ë&
secondGlyphAdjustments··ë ß
.··ß ®

xPlacement··® ≤
,··≤ ≥
pair··¥ ∏
.··∏ π&
secondGlyphAdjustments··π œ
.··œ –

yPlacement··– ⁄
,··⁄ €
pair··‹ ‡
.··‡ ·&
secondGlyphAdjustments··· ˜
.··˜ ¯
xAdvance··¯ Ä
,··Ä Å
pair··Ç Ü
.··Ü á&
secondGlyphAdjustments··á ù
.··ù û
yAdvance··û ¶
)··¶ ß
)··ß ®
;··® ©+
TMP_GlyphPairAdjustmentRecord
‚‚ -
record
‚‚. 4
=
‚‚5 6
new
‚‚7 :+
TMP_GlyphPairAdjustmentRecord
‚‚; X
(
‚‚X Y#
firstAdjustmentRecord
‚‚Y n
,
‚‚n o%
secondAdjustmentRecord‚‚p Ü
)‚‚Ü á
;‚‚á à 
m_FontFeatureTable
‰‰ "
.
‰‰" #*
m_GlyphPairAdjustmentRecords
‰‰# ?
.
‰‰? @
Add
‰‰@ C
(
‰‰C D
record
‰‰D J
)
‰‰J K
;
‰‰K L
}
ÂÂ 
m_KerningTable
ËË 
.
ËË 
kerningPairs
ËË '
=
ËË( )
null
ËË* .
;
ËË. /
m_KerningTable
ÈÈ 
=
ÈÈ 
null
ÈÈ !
;
ÈÈ! "
if
ÏÏ 
(
ÏÏ 
UnityEditor
ÏÏ 
.
ÏÏ 
EditorUtility
ÏÏ )
.
ÏÏ) *
IsPersistent
ÏÏ* 6
(
ÏÏ6 7
this
ÏÏ7 ;
)
ÏÏ; <
)
ÏÏ< =
{
ÌÌ '
TMP_EditorResourceManager
ÓÓ )
.
ÓÓ) *'
RegisterResourceForUpdate
ÓÓ* C
(
ÓÓC D
this
ÓÓD H
)
ÓÓH I
;
ÓÓI J
}
ÔÔ 
}
ÒÒ 	
}
ÛÛ 
}ÙÙ ˝µ
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMPro_ExtensionMethods.cs
	namespace 	
TMPro
 
{ 
public 

static 
class "
TMPro_ExtensionMethods .
{		 
public 
static 
string 
ArrayToString *
(* +
this+ /
char0 4
[4 5
]5 6
chars7 <
)< =
{ 	
string 
s 
= 
string 
. 
Empty #
;# $
for 
( 
int 
i 
= 
$num 
; 
i 
< 
chars  %
.% &
Length& ,
&&- /
chars0 5
[5 6
i6 7
]7 8
!=9 ;
$num< =
;= >
i? @
++@ B
)B C
{ 
s 
+= 
chars 
[ 
i 
] 
; 
} 
return 
s 
; 
} 	
public 
static 
string 
IntToString (
(( )
this) -
int. 1
[1 2
]2 3
unicodes4 <
)< =
{ 	
char 
[ 
] 
chars 
= 
new 
char #
[# $
unicodes$ ,
., -
Length- 3
]3 4
;4 5
for 
( 
int 
i 
= 
$num 
; 
i 
< 
unicodes  (
.( )
Length) /
;/ 0
i1 2
++2 4
)4 5
{ 
chars 
[ 
i 
] 
= 
( 
char  
)  !
unicodes! )
[) *
i* +
]+ ,
;, -
} 
return   
new   
string   
(   
chars   #
)  # $
;  $ %
}!! 	
internal## 
static## 
string## 
UintToString## +
(##+ ,
this##, 0
List##1 5
<##5 6
uint##6 :
>##: ;
unicodes##< D
)##D E
{$$ 	
char%% 
[%% 
]%% 
chars%% 
=%% 
new%% 
char%% #
[%%# $
unicodes%%$ ,
.%%, -
Count%%- 2
]%%2 3
;%%3 4
for'' 
('' 
int'' 
i'' 
='' 
$num'' 
;'' 
i'' 
<'' 
unicodes''  (
.''( )
Count'') .
;''. /
i''0 1
++''1 3
)''3 4
{(( 
chars)) 
[)) 
i)) 
])) 
=)) 
()) 
char))  
)))  !
unicodes))! )
[))) *
i))* +
]))+ ,
;)), -
}** 
return,, 
new,, 
string,, 
(,, 
chars,, #
),,# $
;,,$ %
}-- 	
public// 
static// 
string// 
IntToString// (
(//( )
this//) -
int//. 1
[//1 2
]//2 3
unicodes//4 <
,//< =
int//> A
start//B G
,//G H
int//I L
length//M S
)//S T
{00 	
if11 
(11 
start11 
>11 
unicodes11  
.11  !
Length11! '
)11' (
return22 
string22 
.22 
Empty22 #
;22# $
int44 
end44 
=44 
Mathf44 
.44 
Min44 
(44  
start44  %
+44& '
length44( .
,44. /
unicodes440 8
.448 9
Length449 ?
)44? @
;44@ A
char66 
[66 
]66 
chars66 
=66 
new66 
char66 #
[66# $
end66$ '
-66( )
start66* /
]66/ 0
;660 1
int88 

writeIndex88 
=88 
$num88 
;88 
for:: 
(:: 
int:: 
i:: 
=:: 
start:: 
;:: 
i::  !
<::" #
end::$ '
;::' (
i::) *
++::* ,
)::, -
{;; 
chars<< 
[<< 

writeIndex<<  
++<<  "
]<<" #
=<<$ %
(<<& '
char<<' +
)<<+ ,
unicodes<<, 4
[<<4 5
i<<5 6
]<<6 7
;<<7 8
}== 
return?? 
new?? 
string?? 
(?? 
chars?? #
)??# $
;??$ %
}@@ 	
publicCC 
staticCC 
intCC 
FindInstanceIDCC (
<CC) *
TCC* +
>CC+ ,
(CC- .
thisCC. 2
ListCC3 7
<CC7 8
TCC8 9
>CC9 :
listCC; ?
,CC? @
TCCA B
targetCCC I
)CCI J
whereCCK P
TCCQ R
:CCS T
ObjectCCU [
{DD 	
intEE 
targetIDEE 
=EE 
targetEE !
.EE! "
GetInstanceIDEE" /
(EE/ 0
)EE0 1
;EE1 2
forGG 
(GG 
intGG 
iGG 
=GG 
$numGG 
;GG 
iGG 
<GG 
listGG  $
.GG$ %
CountGG% *
;GG* +
iGG, -
++GG- /
)GG/ 0
{HH 
ifII 
(II 
listII 
[II 
iII 
]II 
.II 
GetInstanceIDII )
(II) *
)II* +
==II, .
targetIDII/ 7
)II7 8
returnJJ 
iJJ 
;JJ 
}KK 
returnLL 
-LL 
$numLL 
;LL 
}MM 	
publicPP 
staticPP 
boolPP 
ComparePP "
(PP" #
thisPP# '
Color32PP( /
aPP0 1
,PP1 2
Color32PP3 :
bPP; <
)PP< =
{QQ 	
returnRR 
aRR 
.RR 
rRR 
==RR 
bRR 
.RR 
rRR 
&&RR  
aRR! "
.RR" #
gRR# $
==RR% '
bRR( )
.RR) *
gRR* +
&&RR, .
aRR/ 0
.RR0 1
bRR1 2
==RR3 5
bRR6 7
.RR7 8
bRR8 9
&&RR: <
aRR= >
.RR> ?
aRR? @
==RRA C
bRRD E
.RRE F
aRRF G
;RRG H
}SS 	
publicUU 
staticUU	 
boolUU 

CompareRGBUU 
(UU  
thisUU  $
Color32UU% ,
aUU- .
,UU. /
Color32UU0 7
bUU8 9
)UU9 :
{VV 
returnWW 	
aWW
 
.WW 
rWW 
==WW 
bWW 
.WW 
rWW 
&&WW 
aWW 
.WW 
gWW 
==WW 
bWW  
.WW  !
gWW! "
&&WW# %
aWW& '
.WW' (
bWW( )
==WW* ,
bWW- .
.WW. /
bWW/ 0
;WW0 1
}XX 
publicZZ 
staticZZ	 
boolZZ 
CompareZZ 
(ZZ 
thisZZ !
ColorZZ" '
aZZ( )
,ZZ) *
ColorZZ+ 0
bZZ1 2
)ZZ2 3
{[[ 	
return\\ 
a\\ 
.\\ 
r\\ 
==\\ 
b\\ 
.\\ 
r\\ 
&&\\  
a\\! "
.\\" #
g\\# $
==\\% '
b\\( )
.\\) *
g\\* +
&&\\, .
a\\/ 0
.\\0 1
b\\1 2
==\\3 5
b\\6 7
.\\7 8
b\\8 9
&&\\: <
a\\= >
.\\> ?
a\\? @
==\\A C
b\\D E
.\\E F
a\\F G
;\\G H
}]] 	
public`` 
static``	 
bool`` 

CompareRGB`` 
(``  
this``  $
Color``% *
a``+ ,
,``, -
Color``. 3
b``4 5
)``5 6
{aa 
returnbb 	
abb
 
.bb 
rbb 
==bb 
bbb 
.bb 
rbb 
&&bb 
abb 
.bb 
gbb 
==bb 
bbb  
.bb  !
gbb! "
&&bb# %
abb& '
.bb' (
bbb( )
==bb* ,
bbb- .
.bb. /
bbb/ 0
;bb0 1
}cc 
publicff 
staticff 
Color32ff 
Multiplyff &
(ff' (
thisff( ,
Color32ff- 4
c1ff5 7
,ff7 8
Color32ff9 @
c2ffA C
)ffC D
{gg 	
bytehh 
rhh 
=hh 
(hh 
bytehh 
)hh 
(hh 
(hh 
c1hh 
.hh  
rhh  !
/hh" #
$numhh$ (
)hh( )
*hh* +
(hh, -
c2hh- /
.hh/ 0
rhh0 1
/hh2 3
$numhh4 8
)hh8 9
*hh: ;
$numhh< ?
)hh? @
;hh@ A
byteii 
gii 
=ii 
(ii 
byteii 
)ii 
(ii 
(ii 
c1ii 
.ii  
gii  !
/ii" #
$numii$ (
)ii( )
*ii* +
(ii, -
c2ii- /
.ii/ 0
gii0 1
/ii2 3
$numii4 8
)ii8 9
*ii: ;
$numii< ?
)ii? @
;ii@ A
bytejj 
bjj 
=jj 
(jj 
bytejj 
)jj 
(jj 
(jj 
c1jj 
.jj  
bjj  !
/jj" #
$numjj$ (
)jj( )
*jj* +
(jj, -
c2jj- /
.jj/ 0
bjj0 1
/jj2 3
$numjj4 8
)jj8 9
*jj: ;
$numjj< ?
)jj? @
;jj@ A
bytekk 
akk 
=kk 
(kk 
bytekk 
)kk 
(kk 
(kk 
c1kk 
.kk  
akk  !
/kk" #
$numkk$ (
)kk( )
*kk* +
(kk, -
c2kk- /
.kk/ 0
akk0 1
/kk2 3
$numkk4 8
)kk8 9
*kk: ;
$numkk< ?
)kk? @
;kk@ A
returnmm 
newmm 
Color32mm 
(mm 
rmm  
,mm  !
gmm" #
,mm# $
bmm% &
,mm& '
amm( )
)mm) *
;mm* +
}nn 	
publicqq 
staticqq 
Color32qq 
Tintqq "
(qq# $
thisqq$ (
Color32qq) 0
c1qq1 3
,qq3 4
Color32qq5 <
c2qq= ?
)qq? @
{rr 	
bytess 
rss 
=ss 
(ss 
bytess 
)ss 
(ss 
(ss 
c1ss 
.ss  
rss  !
/ss" #
$numss$ (
)ss( )
*ss* +
(ss, -
c2ss- /
.ss/ 0
rss0 1
/ss2 3
$numss4 8
)ss8 9
*ss: ;
$numss< ?
)ss? @
;ss@ A
bytett 
gtt 
=tt 
(tt 
bytett 
)tt 
(tt 
(tt 
c1tt 
.tt  
gtt  !
/tt" #
$numtt$ (
)tt( )
*tt* +
(tt, -
c2tt- /
.tt/ 0
gtt0 1
/tt2 3
$numtt4 8
)tt8 9
*tt: ;
$numtt< ?
)tt? @
;tt@ A
byteuu 
buu 
=uu 
(uu 
byteuu 
)uu 
(uu 
(uu 
c1uu 
.uu  
buu  !
/uu" #
$numuu$ (
)uu( )
*uu* +
(uu, -
c2uu- /
.uu/ 0
buu0 1
/uu2 3
$numuu4 8
)uu8 9
*uu: ;
$numuu< ?
)uu? @
;uu@ A
bytevv 
avv 
=vv 
(vv 
bytevv 
)vv 
(vv 
(vv 
c1vv 
.vv  
avv  !
/vv" #
$numvv$ (
)vv( )
*vv* +
(vv, -
c2vv- /
.vv/ 0
avv0 1
/vv2 3
$numvv4 8
)vv8 9
*vv: ;
$numvv< ?
)vv? @
;vv@ A
returnxx 
newxx 
Color32xx 
(xx 
rxx  
,xx  !
gxx" #
,xx# $
bxx% &
,xx& '
axx( )
)xx) *
;xx* +
}yy 	
public{{ 
static{{ 
Color32{{ 
Tint{{ "
({{" #
this{{# '
Color32{{( /
c1{{0 2
,{{2 3
float{{4 9
tint{{: >
){{> ?
{|| 	
byte}} 
r}} 
=}} 
(}} 
byte}} 
)}} 
(}} 
Mathf}} !
.}}! "
Clamp}}" '
(}}' (
c1}}( *
.}}* +
r}}+ ,
/}}- .
$num}}/ 3
*}}4 5
tint}}6 :
*}}; <
$num}}= @
,}}@ A
$num}}B C
,}}C D
$num}}E H
)}}H I
)}}I J
;}}J K
byte~~ 
g~~ 
=~~ 
(~~ 
byte~~ 
)~~ 
(~~ 
Mathf~~ !
.~~! "
Clamp~~" '
(~~' (
c1~~( *
.~~* +
g~~+ ,
/~~- .
$num~~/ 3
*~~4 5
tint~~6 :
*~~; <
$num~~= @
,~~@ A
$num~~B C
,~~C D
$num~~E H
)~~H I
)~~I J
;~~J K
byte 
b 
= 
( 
byte 
) 
( 
Mathf !
.! "
Clamp" '
(' (
c1( *
.* +
b+ ,
/- .
$num/ 3
*4 5
tint6 :
*; <
$num= @
,@ A
$numB C
,C D
$numE H
)H I
)I J
;J K
byte
ÄÄ 
a
ÄÄ 
=
ÄÄ 
(
ÄÄ 
byte
ÄÄ 
)
ÄÄ 
(
ÄÄ 
Mathf
ÄÄ !
.
ÄÄ! "
Clamp
ÄÄ" '
(
ÄÄ' (
c1
ÄÄ( *
.
ÄÄ* +
a
ÄÄ+ ,
/
ÄÄ- .
$num
ÄÄ/ 3
*
ÄÄ4 5
tint
ÄÄ6 :
*
ÄÄ; <
$num
ÄÄ= @
,
ÄÄ@ A
$num
ÄÄB C
,
ÄÄC D
$num
ÄÄE H
)
ÄÄH I
)
ÄÄI J
;
ÄÄJ K
return
ÇÇ 
new
ÇÇ 
Color32
ÇÇ 
(
ÇÇ 
r
ÇÇ  
,
ÇÇ  !
g
ÇÇ" #
,
ÇÇ# $
b
ÇÇ% &
,
ÇÇ& '
a
ÇÇ( )
)
ÇÇ) *
;
ÇÇ* +
}
ÉÉ 	
public
ÖÖ 
static
ÖÖ 
Color
ÖÖ 
MinAlpha
ÖÖ $
(
ÖÖ$ %
this
ÖÖ% )
Color
ÖÖ* /
c1
ÖÖ0 2
,
ÖÖ2 3
Color
ÖÖ4 9
c2
ÖÖ: <
)
ÖÖ< =
{
ÜÜ 	
float
áá 
a
áá 
=
áá 
c1
áá 
.
áá 
a
áá 
<
áá 
c2
áá 
.
áá  
a
áá  !
?
áá" #
c1
áá$ &
.
áá& '
a
áá' (
:
áá) *
c2
áá+ -
.
áá- .
a
áá. /
;
áá/ 0
return
ââ 
new
ââ 
Color
ââ 
(
ââ 
c1
ââ 
.
ââ  
r
ââ  !
,
ââ! "
c1
ââ# %
.
ââ% &
g
ââ& '
,
ââ' (
c1
ââ) +
.
ââ+ ,
b
ââ, -
,
ââ- .
a
ââ/ 0
)
ââ0 1
;
ââ1 2
}
ää 	
public
çç 
static
çç 
bool
çç 
Compare
çç "
(
çç" #
this
çç# '
Vector3
çç( /
v1
çç0 2
,
çç2 3
Vector3
çç4 ;
v2
çç< >
,
çç> ?
int
çç@ C
accuracy
ççD L
)
ççL M
{
éé 	
bool
èè 
x
èè 
=
èè 
(
èè 
int
èè 
)
èè 
(
èè 
v1
èè 
.
èè 
x
èè 
*
èè  !
accuracy
èè" *
)
èè* +
==
èè, .
(
èè/ 0
int
èè0 3
)
èè3 4
(
èè4 5
v2
èè5 7
.
èè7 8
x
èè8 9
*
èè: ;
accuracy
èè< D
)
èèD E
;
èèE F
bool
êê 
y
êê 
=
êê 
(
êê 
int
êê 
)
êê 
(
êê 
v1
êê 
.
êê 
y
êê 
*
êê  !
accuracy
êê" *
)
êê* +
==
êê, .
(
êê/ 0
int
êê0 3
)
êê3 4
(
êê4 5
v2
êê5 7
.
êê7 8
y
êê8 9
*
êê: ;
accuracy
êê< D
)
êêD E
;
êêE F
bool
ëë 
z
ëë 
=
ëë 
(
ëë 
int
ëë 
)
ëë 
(
ëë 
v1
ëë 
.
ëë 
z
ëë 
*
ëë  !
accuracy
ëë" *
)
ëë* +
==
ëë, .
(
ëë/ 0
int
ëë0 3
)
ëë3 4
(
ëë4 5
v2
ëë5 7
.
ëë7 8
z
ëë8 9
*
ëë: ;
accuracy
ëë< D
)
ëëD E
;
ëëE F
return
ìì 
x
ìì 
&&
ìì 
y
ìì 
&&
ìì 
z
ìì 
;
ìì 
}
îî 	
public
ññ 
static
ññ 
bool
ññ 
Compare
ññ "
(
ññ" #
this
ññ# '

Quaternion
ññ( 2
q1
ññ3 5
,
ññ5 6

Quaternion
ññ7 A
q2
ññB D
,
ññD E
int
ññF I
accuracy
ññJ R
)
ññR S
{
óó 	
bool
òò 
x
òò 
=
òò 
(
òò 
int
òò 
)
òò 
(
òò 
q1
òò 
.
òò 
x
òò 
*
òò  !
accuracy
òò" *
)
òò* +
==
òò, .
(
òò/ 0
int
òò0 3
)
òò3 4
(
òò4 5
q2
òò5 7
.
òò7 8
x
òò8 9
*
òò: ;
accuracy
òò< D
)
òòD E
;
òòE F
bool
ôô 
y
ôô 
=
ôô 
(
ôô 
int
ôô 
)
ôô 
(
ôô 
q1
ôô 
.
ôô 
y
ôô 
*
ôô  !
accuracy
ôô" *
)
ôô* +
==
ôô, .
(
ôô/ 0
int
ôô0 3
)
ôô3 4
(
ôô4 5
q2
ôô5 7
.
ôô7 8
y
ôô8 9
*
ôô: ;
accuracy
ôô< D
)
ôôD E
;
ôôE F
bool
öö 
z
öö 
=
öö 
(
öö 
int
öö 
)
öö 
(
öö 
q1
öö 
.
öö 
z
öö 
*
öö  !
accuracy
öö" *
)
öö* +
==
öö, .
(
öö/ 0
int
öö0 3
)
öö3 4
(
öö4 5
q2
öö5 7
.
öö7 8
z
öö8 9
*
öö: ;
accuracy
öö< D
)
ööD E
;
ööE F
bool
õõ 
w
õõ 
=
õõ 
(
õõ 
int
õõ 
)
õõ 
(
õõ 
q1
õõ 
.
õõ 
w
õõ 
*
õõ  !
accuracy
õõ" *
)
õõ* +
==
õõ, .
(
õõ/ 0
int
õõ0 3
)
õõ3 4
(
õõ4 5
q2
õõ5 7
.
õõ7 8
w
õõ8 9
*
õõ: ;
accuracy
õõ< D
)
õõD E
;
õõE F
return
ùù 
x
ùù 
&&
ùù 
y
ùù 
&&
ùù 
z
ùù 
&&
ùù !
w
ùù" #
;
ùù# $
}
ûû 	
}
ﬂﬂ 
public
·· 

static
·· 
class
·· 
TMP_Math
··  
{
‚‚ 
public
„„ 
const
„„ 
float
„„ 
	FLOAT_MAX
„„ $
=
„„% &
$num
„„' ,
;
„„, -
public
‰‰ 
const
‰‰ 
float
‰‰ 
	FLOAT_MIN
‰‰ $
=
‰‰% &
-
‰‰' (
$num
‰‰( -
;
‰‰- .
public
ÂÂ 
const
ÂÂ 
int
ÂÂ 
INT_MAX
ÂÂ  
=
ÂÂ! "
$num
ÂÂ# -
;
ÂÂ- .
public
ÊÊ 
const
ÊÊ 
int
ÊÊ 
INT_MIN
ÊÊ  
=
ÊÊ! "
-
ÊÊ# $
$num
ÊÊ$ .
;
ÊÊ. /
public
ËË 
const
ËË 
float
ËË 
FLOAT_UNSET
ËË &
=
ËË' (
-
ËË) *
$num
ËË* /
;
ËË/ 0
public
ÈÈ 
const
ÈÈ 
int
ÈÈ 
	INT_UNSET
ÈÈ "
=
ÈÈ# $
-
ÈÈ% &
$num
ÈÈ& +
;
ÈÈ+ ,
public
ÎÎ 
static
ÎÎ 
Vector2
ÎÎ 
	MAX_16BIT
ÎÎ '
=
ÎÎ( )
new
ÎÎ* -
Vector2
ÎÎ. 5
(
ÎÎ5 6
	FLOAT_MAX
ÎÎ6 ?
,
ÎÎ? @
	FLOAT_MAX
ÎÎA J
)
ÎÎJ K
;
ÎÎK L
public
ÏÏ 
static
ÏÏ 
Vector2
ÏÏ 
	MIN_16BIT
ÏÏ '
=
ÏÏ( )
new
ÏÏ* -
Vector2
ÏÏ. 5
(
ÏÏ5 6
	FLOAT_MIN
ÏÏ6 ?
,
ÏÏ? @
	FLOAT_MIN
ÏÏA J
)
ÏÏJ K
;
ÏÏK L
public
ÓÓ 
static
ÓÓ 
bool
ÓÓ 
Approximately
ÓÓ (
(
ÓÓ( )
float
ÓÓ) .
a
ÓÓ/ 0
,
ÓÓ0 1
float
ÓÓ2 7
b
ÓÓ8 9
)
ÓÓ9 :
{
ÔÔ 	
return
 
(
 
b
 
-
 
$num
 
)
  
<
! "
a
# $
&&
% '
a
( )
<
* +
(
, -
b
- .
+
/ 0
$num
1 8
)
8 9
;
9 :
}
ÒÒ 	
public
ÛÛ 
static
ÛÛ 
int
ÛÛ 
Mod
ÛÛ 
(
ÛÛ 
int
ÛÛ !
a
ÛÛ" #
,
ÛÛ# $
int
ÛÛ% (
b
ÛÛ) *
)
ÛÛ* +
{
ÙÙ 	
int
ıı 
r
ıı 
=
ıı 
a
ıı 
%
ıı 
b
ıı 
;
ıı 
return
ˆˆ 
r
ˆˆ 
<
ˆˆ 
$num
ˆˆ 
?
ˆˆ 
r
ˆˆ 
+
ˆˆ 
b
ˆˆ  
:
ˆˆ! "
r
ˆˆ# $
;
ˆˆ$ %
}
˜˜ 	
}
¯¯ 
}˘˘ Ç"
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_SpriteCharacter.cs
	namespace 	
TMPro
 
{ 
[		 
Serializable		 
]		 
public

 

class

 
TMP_SpriteCharacter

 $
:

% &
TMP_TextElement

' 6
{ 
public 
string 
name 
{ 	
get 
{ 
return 
m_Name 
;  
}! "
set 
{ 
if 
( 
value 
== 
m_Name #
)# $
return 
; 
m_Name 
= 
value 
; 

m_HashCode 
= $
TMP_TextParsingUtilities 5
.5 6$
GetHashCodeCaseSensitive6 N
(N O
m_NameO U
)U V
;V W
} 
} 	
public   
int   
hashCode   
{   
get   !
{  " #
return  $ *

m_HashCode  + 5
;  5 6
}  7 8
}  9 :
['' 	
SerializeField''	 
]'' 
private(( 
string(( 
m_Name(( 
;(( 
[** 	
SerializeField**	 
]** 
private++ 
int++ 

m_HashCode++ 
;++ 
public55 
TMP_SpriteCharacter55 "
(55" #
)55# $
{66 	
m_ElementType77 
=77 
TextElementType77 +
.77+ ,
Sprite77, 2
;772 3
}88 	
public?? 
TMP_SpriteCharacter?? "
(??" #
uint??# '
unicode??( /
,??/ 0
TMP_SpriteGlyph??1 @
glyph??A F
)??F G
{@@ 	
m_ElementTypeAA 
=AA 
TextElementTypeAA +
.AA+ ,
SpriteAA, 2
;AA2 3
thisCC 
.CC 
unicodeCC 
=CC 
unicodeCC "
;CC" #
thisDD 
.DD 

glyphIndexDD 
=DD 
glyphDD #
.DD# $
indexDD$ )
;DD) *
thisEE 
.EE 
glyphEE 
=EE 
glyphEE 
;EE 
thisFF 
.FF 
scaleFF 
=FF 
$numFF 
;FF 
}GG 	
publicOO 
TMP_SpriteCharacterOO "
(OO" #
uintOO# '
unicodeOO( /
,OO/ 0
TMP_SpriteAssetOO1 @
spriteAssetOOA L
,OOL M
TMP_SpriteGlyphOON ]
glyphOO^ c
)OOc d
{PP 	
m_ElementTypeQQ 
=QQ 
TextElementTypeQQ +
.QQ+ ,
SpriteQQ, 2
;QQ2 3
thisSS 
.SS 
unicodeSS 
=SS 
unicodeSS "
;SS" #
thisTT 
.TT 
	textAssetTT 
=TT 
spriteAssetTT (
;TT( )
thisUU 
.UU 
glyphUU 
=UU 
glyphUU 
;UU 
thisVV 
.VV 

glyphIndexVV 
=VV 
glyphVV #
.VV# $
indexVV$ )
;VV) *
thisWW 
.WW 
scaleWW 
=WW 
$numWW 
;WW 
}XX 	
internal__ 
TMP_SpriteCharacter__ $
(__$ %
uint__% )
unicode__* 1
,__1 2
uint__3 7

glyphIndex__8 B
)__B C
{`` 	
m_ElementTypeaa 
=aa 
TextElementTypeaa +
.aa+ ,
Spriteaa, 2
;aa2 3
thiscc 
.cc 
unicodecc 
=cc 
unicodecc "
;cc" #
thisdd 
.dd 
	textAssetdd 
=dd 
nulldd !
;dd! "
thisee 
.ee 
glyphee 
=ee 
nullee 
;ee 
thisff 
.ff 

glyphIndexff 
=ff 

glyphIndexff (
;ff( )
thisgg 
.gg 
scalegg 
=gg 
$numgg 
;gg 
}hh 	
}ii 
}jj ⁄ˆ
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_MaterialManager.cs
	namespace		 	
TMPro		
 
{

 
public 

static 
class 
TMP_MaterialManager +
{ 
private 
static 
List 
< 
MaskingMaterial +
>+ ,
m_materialList- ;
=< =
new> A
ListB F
<F G
MaskingMaterialG V
>V W
(W X
)X Y
;Y Z
private 
static 

Dictionary !
<! "
long" &
,& '
FallbackMaterial( 8
>8 9
m_fallbackMaterials: M
=N O
newP S

DictionaryT ^
<^ _
long_ c
,c d
FallbackMateriale u
>u v
(v w
)w x
;x y
private 
static 

Dictionary !
<! "
int" %
,% &
long' +
>+ ,$
m_fallbackMaterialLookup- E
=F G
newH K

DictionaryL V
<V W
intW Z
,Z [
long\ `
>` a
(a b
)b c
;c d
private 
static 
List 
< 
FallbackMaterial ,
>, -!
m_fallbackCleanupList. C
=D E
newF I
ListJ N
<N O
FallbackMaterialO _
>_ `
(` a
)a b
;b c
private 
static 
bool 
isFallbackListDirty /
;/ 0
static 
TMP_MaterialManager "
(" #
)# $
{ 	
Camera 
. 
onPreRender 
+= !
new" %
Camera& ,
., -
CameraCallback- ;
(; <
OnPreRender< G
)G H
;H I
Canvas 
. 
willRenderCanvases %
+=& (
new) ,
Canvas- 3
.3 4
WillRenderCanvases4 F
(F G
OnPreRenderCanvasG X
)X Y
;Y Z
} 	
static 
void 
OnPreRender 
(  
Camera  &
cam' *
)* +
{ 	
if 
( 
isFallbackListDirty #
)# $
{   $
CleanupFallbackMaterials"" (
(""( )
)"") *
;""* +
isFallbackListDirty## #
=##$ %
false##& +
;##+ ,
}$$ 
}%% 	
static'' 
void'' 
OnPreRenderCanvas'' %
(''% &
)''& '
{(( 	
if)) 
()) 
isFallbackListDirty)) #
)))# $
{** $
CleanupFallbackMaterials,, (
(,,( )
),,) *
;,,* +
isFallbackListDirty-- #
=--$ %
false--& +
;--+ ,
}.. 
}// 	
public77 
static77 
Material77 
GetStencilMaterial77 1
(771 2
Material772 :
baseMaterial77; G
,77G H
int77I L
	stencilID77M V
)77V W
{88 	
if:: 
(:: 
!:: 
baseMaterial:: 
.:: 
HasProperty:: )
(::) *
ShaderUtilities::* 9
.::9 :
ID_StencilID::: F
)::F G
)::G H
{;; 
Debug<< 
.<< 

LogWarning<<  
(<<  !
$str	<<! ñ
)
<<ñ ó
;
<<ó ò
return== 
baseMaterial== #
;==# $
}>> 
int@@ 
baseMaterialID@@ 
=@@  
baseMaterial@@! -
.@@- .
GetInstanceID@@. ;
(@@; <
)@@< =
;@@= >
forCC 
(CC 
intCC 
iCC 
=CC 
$numCC 
;CC 
iCC 
<CC 
m_materialListCC  .
.CC. /
CountCC/ 4
;CC4 5
iCC6 7
++CC7 9
)CC9 :
{DD 
ifEE 
(EE 
m_materialListEE "
[EE" #
iEE# $
]EE$ %
.EE% &
baseMaterialEE& 2
.EE2 3
GetInstanceIDEE3 @
(EE@ A
)EEA B
==EEC E
baseMaterialIDEEF T
&&EEU W
m_materialListEEX f
[EEf g
iEEg h
]EEh i
.EEi j
	stencilIDEEj s
==EEt v
	stencilID	EEw Ä
)
EEÄ Å
{FF 
m_materialListGG "
[GG" #
iGG# $
]GG$ %
.GG% &
countGG& +
+=GG, .
$numGG/ 0
;GG0 1
returnMM 
m_materialListMM )
[MM) *
iMM* +
]MM+ ,
.MM, -
stencilMaterialMM- <
;MM< =
}NN 
}OO 
MaterialSS 
stencilMaterialSS $
;SS$ %
stencilMaterialVV 
=VV 
newVV !
MaterialVV" *
(VV* +
baseMaterialVV+ 7
)VV7 8
;VV8 9
stencilMaterialWW 
.WW 
	hideFlagsWW %
=WW& '
	HideFlagsWW( 1
.WW1 2
HideAndDontSaveWW2 A
;WWA B
stencilMaterialZZ 
.ZZ  
nameZZ  $
+=ZZ% '
$strZZ( 6
+ZZ7 8
	stencilIDZZ9 B
;ZZB C
stencilMaterial]] 
.]] 
shaderKeywords]] *
=]]+ ,
baseMaterial]]- 9
.]]9 :
shaderKeywords]]: H
;]]H I
ShaderUtilities`` 
.``  
GetShaderPropertyIDs`` 0
(``0 1
)``1 2
;``2 3
stencilMaterialaa 
.aa 
SetFloataa $
(aa$ %
ShaderUtilitiesaa% 4
.aa4 5
ID_StencilIDaa5 A
,aaA B
	stencilIDaaC L
)aaL M
;aaM N
stencilMaterialcc 
.cc 
SetFloatcc $
(cc$ %
ShaderUtilitiescc% 4
.cc4 5
ID_StencilCompcc5 C
,ccC D
$numccE F
)ccF G
;ccG H
MaskingMaterialgg 
tempgg  
=gg! "
newgg# &
MaskingMaterialgg' 6
(gg6 7
)gg7 8
;gg8 9
temphh 
.hh 
baseMaterialhh 
=hh 
baseMaterialhh  ,
;hh, -
tempii 
.ii 
stencilMaterialii  
=ii! "
stencilMaterialii# 2
;ii2 3
tempjj 
.jj 
	stencilIDjj 
=jj 
	stencilIDjj &
;jj& '
tempkk 
.kk 
countkk 
=kk 
$numkk 
;kk 
m_materialListmm 
.mm 
Addmm 
(mm 
tempmm #
)mm# $
;mm$ %
returnss 
stencilMaterialss "
;ss" #
}tt 	
public{{ 
static{{ 
void{{ "
ReleaseStencilMaterial{{ 1
({{1 2
Material{{2 :
stencilMaterial{{; J
){{J K
{|| 	
int}} 
stencilMaterialID}} !
=}}" #
stencilMaterial}}$ 3
.}}3 4
GetInstanceID}}4 A
(}}A B
)}}B C
;}}C D
for 
( 
int 
i 
= 
$num 
; 
i 
< 
m_materialList  .
.. /
Count/ 4
;4 5
i6 7
++7 9
)9 :
{
ÄÄ 
if
ÅÅ 
(
ÅÅ 
m_materialList
ÅÅ "
[
ÅÅ" #
i
ÅÅ# $
]
ÅÅ$ %
.
ÅÅ% &
stencilMaterial
ÅÅ& 5
.
ÅÅ5 6
GetInstanceID
ÅÅ6 C
(
ÅÅC D
)
ÅÅD E
==
ÅÅF H
stencilMaterialID
ÅÅI Z
)
ÅÅZ [
{
ÇÇ 
if
ÉÉ 
(
ÉÉ 
m_materialList
ÉÉ &
[
ÉÉ& '
i
ÉÉ' (
]
ÉÉ( )
.
ÉÉ) *
count
ÉÉ* /
>
ÉÉ0 1
$num
ÉÉ2 3
)
ÉÉ3 4
m_materialList
ÑÑ &
[
ÑÑ& '
i
ÑÑ' (
]
ÑÑ( )
.
ÑÑ) *
count
ÑÑ* /
-=
ÑÑ0 2
$num
ÑÑ3 4
;
ÑÑ4 5
else
ÖÖ 
{
ÜÜ 
Object
áá 
.
áá 
DestroyImmediate
áá /
(
áá/ 0
m_materialList
áá0 >
[
áá> ?
i
áá? @
]
áá@ A
.
ááA B
stencilMaterial
ááB Q
)
ááQ R
;
ááR S
m_materialList
àà &
.
àà& '
RemoveAt
àà' /
(
àà/ 0
i
àà0 1
)
àà1 2
;
àà2 3
stencilMaterial
ââ '
=
ââ( )
null
ââ* .
;
ââ. /
}
ää 
break
åå 
;
åå 
}
çç 
}
éé 
}
îî 	
public
òò 
static
òò 
Material
òò 
GetBaseMaterial
òò .
(
òò. /
Material
òò/ 7
stencilMaterial
òò8 G
)
òòG H
{
ôô 	
int
õõ 
index
õõ 
=
õõ 
m_materialList
õõ &
.
õõ& '
	FindIndex
õõ' 0
(
õõ0 1
item
õõ1 5
=>
õõ6 8
item
õõ9 =
.
õõ= >
stencilMaterial
õõ> M
==
õõN P
stencilMaterial
õõQ `
)
õõ` a
;
õõa b
if
ùù 
(
ùù 
index
ùù 
==
ùù 
-
ùù 
$num
ùù 
)
ùù 
return
ûû 
null
ûû 
;
ûû 
else
üü 
return
†† 
m_materialList
†† %
[
††% &
index
††& +
]
††+ ,
.
††, -
baseMaterial
††- 9
;
††9 :
}
¢¢ 	
public
´´ 
static
´´ 
Material
´´ 

SetStencil
´´ )
(
´´) *
Material
´´* 2
material
´´3 ;
,
´´; <
int
´´= @
	stencilID
´´A J
)
´´J K
{
¨¨ 	
material
≠≠ 
.
≠≠ 
SetFloat
≠≠ 
(
≠≠ 
ShaderUtilities
≠≠ -
.
≠≠- .
ID_StencilID
≠≠. :
,
≠≠: ;
	stencilID
≠≠< E
)
≠≠E F
;
≠≠F G
if
ØØ 
(
ØØ 
	stencilID
ØØ 
==
ØØ 
$num
ØØ 
)
ØØ 
material
∞∞ 
.
∞∞ 
SetFloat
∞∞ !
(
∞∞! "
ShaderUtilities
∞∞" 1
.
∞∞1 2
ID_StencilComp
∞∞2 @
,
∞∞@ A
$num
∞∞B C
)
∞∞C D
;
∞∞D E
else
±± 
material
≤≤ 
.
≤≤ 
SetFloat
≤≤ !
(
≤≤! "
ShaderUtilities
≤≤" 1
.
≤≤1 2
ID_StencilComp
≤≤2 @
,
≤≤@ A
$num
≤≤B C
)
≤≤C D
;
≤≤D E
return
¥¥ 
material
¥¥ 
;
¥¥ 
}
µµ 	
public
∏∏ 
static
∏∏ 
void
∏∏  
AddMaskingMaterial
∏∏ -
(
∏∏- .
Material
∏∏. 6
baseMaterial
∏∏7 C
,
∏∏C D
Material
∏∏E M
stencilMaterial
∏∏N ]
,
∏∏] ^
int
∏∏_ b
	stencilID
∏∏c l
)
∏∏l m
{
ππ 	
int
ªª 
index
ªª 
=
ªª 
m_materialList
ªª &
.
ªª& '
	FindIndex
ªª' 0
(
ªª0 1
item
ªª1 5
=>
ªª6 8
item
ªª9 =
.
ªª= >
stencilMaterial
ªª> M
==
ªªN P
stencilMaterial
ªªQ `
)
ªª` a
;
ªªa b
if
ΩΩ 
(
ΩΩ 
index
ΩΩ 
==
ΩΩ 
-
ΩΩ 
$num
ΩΩ 
)
ΩΩ 
{
ææ 
MaskingMaterial
øø 
temp
øø  $
=
øø% &
new
øø' *
MaskingMaterial
øø+ :
(
øø: ;
)
øø; <
;
øø< =
temp
¿¿ 
.
¿¿ 
baseMaterial
¿¿ !
=
¿¿" #
baseMaterial
¿¿$ 0
;
¿¿0 1
temp
¡¡ 
.
¡¡ 
stencilMaterial
¡¡ $
=
¡¡% &
stencilMaterial
¡¡' 6
;
¡¡6 7
temp
¬¬ 
.
¬¬ 
	stencilID
¬¬ 
=
¬¬  
	stencilID
¬¬! *
;
¬¬* +
temp
√√ 
.
√√ 
count
√√ 
=
√√ 
$num
√√ 
;
√√ 
m_materialList
≈≈ 
.
≈≈ 
Add
≈≈ "
(
≈≈" #
temp
≈≈# '
)
≈≈' (
;
≈≈( )
}
∆∆ 
else
«« 
{
»» 
stencilMaterial
…… 
=
……  !
m_materialList
……" 0
[
……0 1
index
……1 6
]
……6 7
.
……7 8
stencilMaterial
……8 G
;
……G H
m_materialList
   
[
   
index
   $
]
  $ %
.
  % &
count
  & +
+=
  , .
$num
  / 0
;
  0 1
}
ÀÀ 
}
ÃÃ 	
public
–– 
static
–– 
void
–– #
RemoveStencilMaterial
–– 0
(
––0 1
Material
––1 9
stencilMaterial
––: I
)
––I J
{
—— 	
int
”” 
index
”” 
=
”” 
m_materialList
”” &
.
””& '
	FindIndex
””' 0
(
””0 1
item
””1 5
=>
””6 8
item
””9 =
.
””= >
stencilMaterial
””> M
==
””N P
stencilMaterial
””Q `
)
””` a
;
””a b
if
’’ 
(
’’ 
index
’’ 
!=
’’ 
-
’’ 
$num
’’ 
)
’’ 
{
÷÷ 
m_materialList
◊◊ 
.
◊◊ 
RemoveAt
◊◊ '
(
◊◊' (
index
◊◊( -
)
◊◊- .
;
◊◊. /
}
ÿÿ 
}
›› 	
public
·· 
static
·· 
void
·· !
ReleaseBaseMaterial
·· .
(
··. /
Material
··/ 7
baseMaterial
··8 D
)
··D E
{
‚‚ 	
int
‰‰ 
index
‰‰ 
=
‰‰ 
m_materialList
‰‰ &
.
‰‰& '
	FindIndex
‰‰' 0
(
‰‰0 1
item
‰‰1 5
=>
‰‰6 8
item
‰‰9 =
.
‰‰= >
baseMaterial
‰‰> J
==
‰‰K M
baseMaterial
‰‰N Z
)
‰‰Z [
;
‰‰[ \
if
ÊÊ 
(
ÊÊ 
index
ÊÊ 
==
ÊÊ 
-
ÊÊ 
$num
ÊÊ 
)
ÊÊ 
{
ÁÁ 
Debug
ËË 
.
ËË 
Log
ËË 
(
ËË 
$str
ËË ;
+
ËË< =
baseMaterial
ËË> J
.
ËËJ K
name
ËËK O
)
ËËO P
;
ËËP Q
}
ÈÈ 
else
ÍÍ 
{
ÎÎ 
if
ÏÏ 
(
ÏÏ 
m_materialList
ÏÏ "
[
ÏÏ" #
index
ÏÏ# (
]
ÏÏ( )
.
ÏÏ) *
count
ÏÏ* /
>
ÏÏ0 1
$num
ÏÏ2 3
)
ÏÏ3 4
{
ÌÌ 
m_materialList
ÓÓ "
[
ÓÓ" #
index
ÓÓ# (
]
ÓÓ( )
.
ÓÓ) *
count
ÓÓ* /
-=
ÓÓ0 2
$num
ÓÓ3 4
;
ÓÓ4 5
Debug
ÔÔ 
.
ÔÔ 
Log
ÔÔ 
(
ÔÔ 
$str
ÔÔ 9
+
ÔÔ: ;
m_materialList
ÔÔ< J
[
ÔÔJ K
index
ÔÔK P
]
ÔÔP Q
.
ÔÔQ R
stencilMaterial
ÔÔR a
.
ÔÔa b
name
ÔÔb f
+
ÔÔg h
$str
ÔÔi w
+
ÔÔx y
m_materialListÔÔz à
[ÔÔà â
indexÔÔâ é
]ÔÔé è
.ÔÔè ê
countÔÔê ï
+ÔÔñ ó
$strÔÔò ´
)ÔÔ´ ¨
;ÔÔ¨ ≠
}
 
else
ÒÒ 
{
ÚÚ 
Debug
ÛÛ 
.
ÛÛ 
Log
ÛÛ 
(
ÛÛ 
$str
ÛÛ :
+
ÛÛ; <
m_materialList
ÛÛ= K
[
ÛÛK L
index
ÛÛL Q
]
ÛÛQ R
.
ÛÛR S
stencilMaterial
ÛÛS b
.
ÛÛb c
name
ÛÛc g
+
ÛÛh i
$str
ÛÛj u
+
ÛÛv w
m_materialListÛÛx Ü
[ÛÛÜ á
indexÛÛá å
]ÛÛå ç
.ÛÛç é
stencilMaterialÛÛé ù
.ÛÛù û
GetInstanceIDÛÛû ´
(ÛÛ´ ¨
)ÛÛ¨ ≠
)ÛÛ≠ Æ
;ÛÛÆ Ø
Object
ÙÙ 
.
ÙÙ 
DestroyImmediate
ÙÙ +
(
ÙÙ+ ,
m_materialList
ÙÙ, :
[
ÙÙ: ;
index
ÙÙ; @
]
ÙÙ@ A
.
ÙÙA B
stencilMaterial
ÙÙB Q
)
ÙÙQ R
;
ÙÙR S
m_materialList
ıı "
.
ıı" #
RemoveAt
ıı# +
(
ıı+ ,
index
ıı, 1
)
ıı1 2
;
ıı2 3
}
ˆˆ 
}
˜˜ 
}
¸¸ 	
public
ˇˇ 
static
ˇˇ 
void
ˇˇ 
ClearMaterials
ˇˇ )
(
ˇˇ) *
)
ˇˇ* +
{
ÄÄ 	
if
ÅÅ 
(
ÅÅ 
m_materialList
ÅÅ 
.
ÅÅ 
Count
ÅÅ $
==
ÅÅ% '
$num
ÅÅ( )
)
ÅÅ) *
{
ÇÇ 
Debug
ÉÉ 
.
ÉÉ 
Log
ÉÉ 
(
ÉÉ 
$str
ÉÉ C
)
ÉÉC D
;
ÉÉD E
return
ÑÑ 
;
ÑÑ 
}
ÖÖ 
for
áá 
(
áá 
int
áá 
i
áá 
=
áá 
$num
áá 
;
áá 
i
áá 
<
áá 
m_materialList
áá  .
.
áá. /
Count
áá/ 4
;
áá4 5
i
áá6 7
++
áá7 9
)
áá9 :
{
àà 
Material
ää 
stencilMaterial
ää (
=
ää) *
m_materialList
ää+ 9
[
ää9 :
i
ää: ;
]
ää; <
.
ää< =
stencilMaterial
ää= L
;
ääL M
Object
åå 
.
åå 
DestroyImmediate
åå '
(
åå' (
stencilMaterial
åå( 7
)
åå7 8
;
åå8 9
m_materialList
çç 
.
çç 
RemoveAt
çç '
(
çç' (
i
çç( )
)
çç) *
;
çç* +
}
éé 
}
èè 	
public
óó 
static
óó 
int
óó 
GetStencilID
óó &
(
óó& '

GameObject
óó' 1
obj
óó2 5
)
óó5 6
{
òò 	
var
õõ 
count
õõ 
=
õõ 
$num
õõ 
;
õõ 
var
ùù 
	transform
ùù 
=
ùù 
obj
ùù 
.
ùù  
	transform
ùù  )
;
ùù) *
var
ûû 
	stopAfter
ûû 
=
ûû (
FindRootSortOverrideCanvas
ûû 6
(
ûû6 7
	transform
ûû7 @
)
ûû@ A
;
ûûA B
if
üü 
(
üü 
	transform
üü 
==
üü 
	stopAfter
üü &
)
üü& '
return
†† 
count
†† 
;
†† 
var
¢¢ 
t
¢¢ 
=
¢¢ 
	transform
¢¢ 
.
¢¢ 
parent
¢¢ $
;
¢¢$ %
var
££ 

components
££ 
=
££ 
TMP_ListPool
££ )
<
££) *
Mask
££* .
>
££. /
.
££/ 0
Get
££0 3
(
££3 4
)
££4 5
;
££5 6
while
§§ 
(
§§ 
t
§§ 
!=
§§ 
null
§§ 
)
§§ 
{
•• 
t
¶¶ 
.
¶¶ 
GetComponents
¶¶ 
<
¶¶  
Mask
¶¶  $
>
¶¶$ %
(
¶¶% &

components
¶¶& 0
)
¶¶0 1
;
¶¶1 2
for
ßß 
(
ßß 
var
ßß 
i
ßß 
=
ßß 
$num
ßß 
;
ßß 
i
ßß  !
<
ßß" #

components
ßß$ .
.
ßß. /
Count
ßß/ 4
;
ßß4 5
++
ßß6 8
i
ßß8 9
)
ßß9 :
{
®® 
var
©© 
mask
©© 
=
©© 

components
©© )
[
©©) *
i
©©* +
]
©©+ ,
;
©©, -
if
™™ 
(
™™ 
mask
™™ 
!=
™™ 
null
™™  $
&&
™™% '
mask
™™( ,
.
™™, -
MaskEnabled
™™- 8
(
™™8 9
)
™™9 :
&&
™™; =
mask
™™> B
.
™™B C
graphic
™™C J
.
™™J K
IsActive
™™K S
(
™™S T
)
™™T U
)
™™U V
{
´´ 
++
¨¨ 
count
¨¨ 
;
¨¨  
break
≠≠ 
;
≠≠ 
}
ÆÆ 
}
ØØ 
if
±± 
(
±± 
t
±± 
==
±± 
	stopAfter
±± "
)
±±" #
break
≤≤ 
;
≤≤ 
t
¥¥ 
=
¥¥ 
t
¥¥ 
.
¥¥ 
parent
¥¥ 
;
¥¥ 
}
µµ 
TMP_ListPool
∂∂ 
<
∂∂ 
Mask
∂∂ 
>
∂∂ 
.
∂∂ 
Release
∂∂ &
(
∂∂& '

components
∂∂' 1
)
∂∂1 2
;
∂∂2 3
return
∏∏ 
Mathf
∏∏ 
.
∏∏ 
Min
∏∏ 
(
∏∏ 
(
∏∏ 
$num
∏∏ 
<<
∏∏  "
count
∏∏# (
)
∏∏( )
-
∏∏* +
$num
∏∏, -
,
∏∏- .
$num
∏∏/ 2
)
∏∏2 3
;
∏∏3 4
}
ππ 	
public
ºº 
static
ºº 
Material
ºº %
GetMaterialForRendering
ºº 6
(
ºº6 7
MaskableGraphic
ºº7 F
graphic
ººG N
,
ººN O
Material
ººP X
baseMaterial
ººY e
)
ººe f
{
ΩΩ 	
if
ææ 
(
ææ 
baseMaterial
ææ 
==
ææ 
null
ææ  $
)
ææ$ %
return
øø 
null
øø 
;
øø 
var
¡¡ 
	modifiers
¡¡ 
=
¡¡ 
TMP_ListPool
¡¡ (
<
¡¡( )
IMaterialModifier
¡¡) :
>
¡¡: ;
.
¡¡; <
Get
¡¡< ?
(
¡¡? @
)
¡¡@ A
;
¡¡A B
graphic
¬¬ 
.
¬¬ 
GetComponents
¬¬ !
(
¬¬! "
	modifiers
¬¬" +
)
¬¬+ ,
;
¬¬, -
var
ƒƒ 
result
ƒƒ 
=
ƒƒ 
baseMaterial
ƒƒ %
;
ƒƒ% &
for
≈≈ 
(
≈≈ 
int
≈≈ 
i
≈≈ 
=
≈≈ 
$num
≈≈ 
;
≈≈ 
i
≈≈ 
<
≈≈ 
	modifiers
≈≈  )
.
≈≈) *
Count
≈≈* /
;
≈≈/ 0
i
≈≈1 2
++
≈≈2 4
)
≈≈4 5
result
∆∆ 
=
∆∆ 
	modifiers
∆∆ "
[
∆∆" #
i
∆∆# $
]
∆∆$ %
.
∆∆% &!
GetModifiedMaterial
∆∆& 9
(
∆∆9 :
result
∆∆: @
)
∆∆@ A
;
∆∆A B
TMP_ListPool
»» 
<
»» 
IMaterialModifier
»» *
>
»»* +
.
»»+ ,
Release
»», 3
(
»»3 4
	modifiers
»»4 =
)
»»= >
;
»»> ?
return
   
result
   
;
   
}
ÀÀ 	
private
ÕÕ 
static
ÕÕ 
	Transform
ÕÕ  (
FindRootSortOverrideCanvas
ÕÕ! ;
(
ÕÕ; <
	Transform
ÕÕ< E
start
ÕÕF K
)
ÕÕK L
{
ŒŒ 	
var
—— 

canvasList
—— 
=
—— 
TMP_ListPool
—— )
<
——) *
Canvas
——* 0
>
——0 1
.
——1 2
Get
——2 5
(
——5 6
)
——6 7
;
——7 8
start
““ 
.
““ #
GetComponentsInParent
““ '
(
““' (
false
““( -
,
““- .

canvasList
““/ 9
)
““9 :
;
““: ;
Canvas
”” 
canvas
”” 
=
”” 
null
””  
;
””  !
for
’’ 
(
’’ 
int
’’ 
i
’’ 
=
’’ 
$num
’’ 
;
’’ 
i
’’ 
<
’’ 

canvasList
’’  *
.
’’* +
Count
’’+ 0
;
’’0 1
++
’’2 4
i
’’4 5
)
’’5 6
{
÷÷ 
canvas
◊◊ 
=
◊◊ 

canvasList
◊◊ #
[
◊◊# $
i
◊◊$ %
]
◊◊% &
;
◊◊& '
if
⁄⁄ 
(
⁄⁄ 
canvas
⁄⁄ 
.
⁄⁄ 
overrideSorting
⁄⁄ *
)
⁄⁄* +
break
€€ 
;
€€ 
}
‹‹ 
TMP_ListPool
›› 
<
›› 
Canvas
›› 
>
››  
.
››  !
Release
››! (
(
››( )

canvasList
››) 3
)
››3 4
;
››4 5
return
ﬂﬂ 
canvas
ﬂﬂ 
!=
ﬂﬂ 
null
ﬂﬂ !
?
ﬂﬂ" #
canvas
ﬂﬂ$ *
.
ﬂﬂ* +
	transform
ﬂﬂ+ 4
:
ﬂﬂ5 6
null
ﬂﬂ7 ;
;
ﬂﬂ; <
}
‡‡ 	
internal
„„ 
static
„„ 
Material
„„  !
GetFallbackMaterial
„„! 4
(
„„4 5
TMP_FontAsset
„„5 B
	fontAsset
„„C L
,
„„L M
Material
„„N V
sourceMaterial
„„W e
,
„„e f
int
„„g j

atlasIndex
„„k u
)
„„u v
{
‰‰ 	
int
ÂÂ 
sourceMaterialID
ÂÂ  
=
ÂÂ! "
sourceMaterial
ÂÂ# 1
.
ÂÂ1 2
GetInstanceID
ÂÂ2 ?
(
ÂÂ? @
)
ÂÂ@ A
;
ÂÂA B
Texture
ÊÊ 
tex
ÊÊ 
=
ÊÊ 
	fontAsset
ÊÊ #
.
ÊÊ# $
atlasTextures
ÊÊ$ 1
[
ÊÊ1 2

atlasIndex
ÊÊ2 <
]
ÊÊ< =
;
ÊÊ= >
int
ÁÁ 
texID
ÁÁ 
=
ÁÁ 
tex
ÁÁ 
.
ÁÁ 
GetInstanceID
ÁÁ )
(
ÁÁ) *
)
ÁÁ* +
;
ÁÁ+ ,
long
ËË 
key
ËË 
=
ËË 
(
ËË 
long
ËË 
)
ËË 
sourceMaterialID
ËË -
<<
ËË. 0
$num
ËË1 3
|
ËË4 5
(
ËË6 7
long
ËË7 ;
)
ËË; <
(
ËË< =
uint
ËË= A
)
ËËA B
texID
ËËB G
;
ËËG H
FallbackMaterial
ÈÈ 
fallback
ÈÈ %
;
ÈÈ% &
if
ÎÎ 
(
ÎÎ !
m_fallbackMaterials
ÎÎ #
.
ÎÎ# $
TryGetValue
ÎÎ$ /
(
ÎÎ/ 0
key
ÎÎ0 3
,
ÎÎ3 4
out
ÎÎ5 8
fallback
ÎÎ9 A
)
ÎÎA B
)
ÎÎB C
return
ÏÏ 
fallback
ÏÏ 
.
ÏÏ  
fallbackMaterial
ÏÏ  0
;
ÏÏ0 1
Material
ÔÔ 
fallbackMaterial
ÔÔ %
=
ÔÔ& '
new
ÔÔ( +
Material
ÔÔ, 4
(
ÔÔ4 5
sourceMaterial
ÔÔ5 C
)
ÔÔC D
;
ÔÔD E
fallbackMaterial
 
.
 

SetTexture
 '
(
' (
ShaderUtilities
( 7
.
7 8

ID_MainTex
8 B
,
B C
tex
D G
)
G H
;
H I
fallbackMaterial
ÚÚ 
.
ÚÚ 
	hideFlags
ÚÚ &
=
ÚÚ' (
	HideFlags
ÚÚ) 2
.
ÚÚ2 3
HideAndDontSave
ÚÚ3 B
;
ÚÚB C
fallbackMaterial
ıı  
.
ıı  !
name
ıı! %
+=
ıı& (
$str
ıı) .
+
ıı/ 0
tex
ıı1 4
.
ıı4 5
name
ıı5 9
;
ıı9 :
fallback
¯¯ 
=
¯¯ 
new
¯¯ 
FallbackMaterial
¯¯ +
(
¯¯+ ,
)
¯¯, -
;
¯¯- .
fallback
˘˘ 
.
˘˘ 
baseID
˘˘ 
=
˘˘ 
sourceMaterialID
˘˘ .
;
˘˘. /
fallback
˙˙ 
.
˙˙ 
baseMaterial
˙˙ !
=
˙˙" #
	fontAsset
˙˙$ -
.
˙˙- .
material
˙˙. 6
;
˙˙6 7
fallback
˚˚ 
.
˚˚ 

fallbackID
˚˚ 
=
˚˚  !
key
˚˚" %
;
˚˚% &
fallback
¸¸ 
.
¸¸ 
fallbackMaterial
¸¸ %
=
¸¸& '
fallbackMaterial
¸¸( 8
;
¸¸8 9
fallback
˝˝ 
.
˝˝ 
count
˝˝ 
=
˝˝ 
$num
˝˝ 
;
˝˝ !
m_fallbackMaterials
ˇˇ 
.
ˇˇ  
Add
ˇˇ  #
(
ˇˇ# $
key
ˇˇ$ '
,
ˇˇ' (
fallback
ˇˇ) 1
)
ˇˇ1 2
;
ˇˇ2 3&
m_fallbackMaterialLookup
ÄÄ $
.
ÄÄ$ %
Add
ÄÄ% (
(
ÄÄ( )
fallbackMaterial
ÄÄ) 9
.
ÄÄ9 :
GetInstanceID
ÄÄ: G
(
ÄÄG H
)
ÄÄH I
,
ÄÄI J
key
ÄÄK N
)
ÄÄN O
;
ÄÄO P
return
ÜÜ 
fallbackMaterial
ÜÜ #
;
ÜÜ# $
}
áá 	
public
ëë 
static
ëë 
Material
ëë !
GetFallbackMaterial
ëë 2
(
ëë3 4
Material
ëë4 <
sourceMaterial
ëë= K
,
ëëK L
Material
ëëM U
targetMaterial
ëëV d
)
ëëd e
{
íí 	
int
ìì 
sourceID
ìì 
=
ìì 
sourceMaterial
ìì )
.
ìì) *
GetInstanceID
ìì* 7
(
ìì7 8
)
ìì8 9
;
ìì9 :
Texture
îî 
tex
îî 
=
îî 
targetMaterial
îî (
.
îî( )

GetTexture
îî) 3
(
îî3 4
ShaderUtilities
îî4 C
.
îîC D

ID_MainTex
îîD N
)
îîN O
;
îîO P
int
ïï 
texID
ïï 
=
ïï 
tex
ïï 
.
ïï 
GetInstanceID
ïï )
(
ïï) *
)
ïï* +
;
ïï+ ,
long
ññ 
key
ññ 
=
ññ 
(
ññ 
long
ññ 
)
ññ 
sourceID
ññ %
<<
ññ& (
$num
ññ) +
|
ññ, -
(
ññ. /
long
ññ/ 3
)
ññ3 4
(
ññ4 5
uint
ññ5 9
)
ññ9 :
texID
ññ: ?
;
ññ? @
FallbackMaterial
óó 
fallback
óó %
;
óó% &
if
ôô 
(
ôô !
m_fallbackMaterials
ôô #
.
ôô# $
TryGetValue
ôô$ /
(
ôô/ 0
key
ôô0 3
,
ôô3 4
out
ôô5 8
fallback
ôô9 A
)
ôôA B
)
ôôB C
{
öö 
return
úú 
fallback
úú 
.
úú  
fallbackMaterial
úú  0
;
úú0 1
}
ùù 
Material
†† 
fallbackMaterial
†† %
=
††& '
null
††( ,
;
††, -
if
°° 
(
°° 
sourceMaterial
°° 
.
°° 
HasProperty
°° *
(
°°* +
ShaderUtilities
°°+ :
.
°°: ;
ID_GradientScale
°°; K
)
°°K L
&&
°°M O
targetMaterial
°°P ^
.
°°^ _
HasProperty
°°_ j
(
°°j k
ShaderUtilities
°°k z
.
°°z {
ID_GradientScale°°{ ã
)°°ã å
)°°å ç
{
¢¢ 
fallbackMaterial
££  
=
££! "
new
££# &
Material
££' /
(
££/ 0
sourceMaterial
££0 >
)
££> ?
;
££? @
fallbackMaterial
§§  
.
§§  !
	hideFlags
§§! *
=
§§+ ,
	HideFlags
§§- 6
.
§§6 7
HideAndDontSave
§§7 F
;
§§F G
fallbackMaterial
ßß  
.
ßß  !
name
ßß! %
+=
ßß& (
$str
ßß) .
+
ßß/ 0
tex
ßß1 4
.
ßß4 5
name
ßß5 9
;
ßß9 :
fallbackMaterial
´´  
.
´´  !

SetTexture
´´! +
(
´´+ ,
ShaderUtilities
´´, ;
.
´´; <

ID_MainTex
´´< F
,
´´F G
tex
´´H K
)
´´K L
;
´´L M
fallbackMaterial
≠≠  
.
≠≠  !
SetFloat
≠≠! )
(
≠≠) *
ShaderUtilities
≠≠* 9
.
≠≠9 :
ID_GradientScale
≠≠: J
,
≠≠J K
targetMaterial
≠≠L Z
.
≠≠Z [
GetFloat
≠≠[ c
(
≠≠c d
ShaderUtilities
≠≠d s
.
≠≠s t
ID_GradientScale≠≠t Ñ
)≠≠Ñ Ö
)≠≠Ö Ü
;≠≠Ü á
fallbackMaterial
ÆÆ  
.
ÆÆ  !
SetFloat
ÆÆ! )
(
ÆÆ) *
ShaderUtilities
ÆÆ* 9
.
ÆÆ9 :
ID_TextureWidth
ÆÆ: I
,
ÆÆI J
targetMaterial
ÆÆK Y
.
ÆÆY Z
GetFloat
ÆÆZ b
(
ÆÆb c
ShaderUtilities
ÆÆc r
.
ÆÆr s
ID_TextureWidthÆÆs Ç
)ÆÆÇ É
)ÆÆÉ Ñ
;ÆÆÑ Ö
fallbackMaterial
ØØ  
.
ØØ  !
SetFloat
ØØ! )
(
ØØ) *
ShaderUtilities
ØØ* 9
.
ØØ9 :
ID_TextureHeight
ØØ: J
,
ØØJ K
targetMaterial
ØØL Z
.
ØØZ [
GetFloat
ØØ[ c
(
ØØc d
ShaderUtilities
ØØd s
.
ØØs t
ID_TextureHeightØØt Ñ
)ØØÑ Ö
)ØØÖ Ü
;ØØÜ á
fallbackMaterial
∞∞  
.
∞∞  !
SetFloat
∞∞! )
(
∞∞) *
ShaderUtilities
∞∞* 9
.
∞∞9 :
ID_WeightNormal
∞∞: I
,
∞∞I J
targetMaterial
∞∞K Y
.
∞∞Y Z
GetFloat
∞∞Z b
(
∞∞b c
ShaderUtilities
∞∞c r
.
∞∞r s
ID_WeightNormal∞∞s Ç
)∞∞Ç É
)∞∞É Ñ
;∞∞Ñ Ö
fallbackMaterial
±±  
.
±±  !
SetFloat
±±! )
(
±±) *
ShaderUtilities
±±* 9
.
±±9 :
ID_WeightBold
±±: G
,
±±G H
targetMaterial
±±I W
.
±±W X
GetFloat
±±X `
(
±±` a
ShaderUtilities
±±a p
.
±±p q
ID_WeightBold
±±q ~
)
±±~ 
)±± Ä
;±±Ä Å
}
≤≤ 
else
≥≥ 
{
¥¥ 
fallbackMaterial
µµ  
=
µµ! "
new
µµ# &
Material
µµ' /
(
µµ/ 0
targetMaterial
µµ0 >
)
µµ> ?
;
µµ? @
}
∂∂ 
fallback
∏∏ 
=
∏∏ 
new
∏∏ 
FallbackMaterial
∏∏ +
(
∏∏+ ,
)
∏∏, -
;
∏∏- .
fallback
ππ 
.
ππ 
baseID
ππ 
=
ππ 
sourceID
ππ &
;
ππ& '
fallback
∫∫ 
.
∫∫ 
baseMaterial
∫∫ !
=
∫∫" #
sourceMaterial
∫∫$ 2
;
∫∫2 3
fallback
ªª 
.
ªª 

fallbackID
ªª 
=
ªª  !
key
ªª" %
;
ªª% &
fallback
ºº 
.
ºº 
fallbackMaterial
ºº %
=
ºº& '
fallbackMaterial
ºº( 8
;
ºº8 9
fallback
ΩΩ 
.
ΩΩ 
count
ΩΩ 
=
ΩΩ 
$num
ΩΩ 
;
ΩΩ !
m_fallbackMaterials
øø 
.
øø  
Add
øø  #
(
øø# $
key
øø$ '
,
øø' (
fallback
øø) 1
)
øø1 2
;
øø2 3&
m_fallbackMaterialLookup
¿¿ $
.
¿¿$ %
Add
¿¿% (
(
¿¿( )
fallbackMaterial
¿¿) 9
.
¿¿9 :
GetInstanceID
¿¿: G
(
¿¿G H
)
¿¿H I
,
¿¿I J
key
¿¿K N
)
¿¿N O
;
¿¿O P
return
∆∆ 
fallbackMaterial
∆∆ #
;
∆∆# $
}
«« 	
public
ŒŒ 
static
ŒŒ 
void
ŒŒ *
AddFallbackMaterialReference
ŒŒ 7
(
ŒŒ7 8
Material
ŒŒ8 @
targetMaterial
ŒŒA O
)
ŒŒO P
{
œœ 	
if
–– 
(
–– 
targetMaterial
–– 
==
–– !
null
––" &
)
––& '
return
––( .
;
––. /
int
““ 
sourceID
““ 
=
““ 
targetMaterial
““ )
.
““) *
GetInstanceID
““* 7
(
““7 8
)
““8 9
;
““9 :
long
”” 
key
”” 
;
”” 
FallbackMaterial
‘‘ 
fallback
‘‘ %
;
‘‘% &
if
◊◊ 
(
◊◊ &
m_fallbackMaterialLookup
◊◊ (
.
◊◊( )
TryGetValue
◊◊) 4
(
◊◊4 5
sourceID
◊◊5 =
,
◊◊= >
out
◊◊? B
key
◊◊C F
)
◊◊F G
)
◊◊G H
{
ÿÿ 
if
ŸŸ 
(
ŸŸ !
m_fallbackMaterials
ŸŸ '
.
ŸŸ' (
TryGetValue
ŸŸ( 3
(
ŸŸ3 4
key
ŸŸ4 7
,
ŸŸ7 8
out
ŸŸ9 <
fallback
ŸŸ= E
)
ŸŸE F
)
ŸŸF G
{
⁄⁄ 
fallback
‹‹ 
.
‹‹ 
count
‹‹ "
+=
‹‹# %
$num
‹‹& '
;
‹‹' (
}
›› 
}
ﬁﬁ 
}
ﬂﬂ 	
public
ÊÊ 
static
ÊÊ 
void
ÊÊ -
RemoveFallbackMaterialReference
ÊÊ :
(
ÊÊ: ;
Material
ÊÊ; C
targetMaterial
ÊÊD R
)
ÊÊR S
{
ÁÁ 	
if
ËË 
(
ËË 
targetMaterial
ËË 
==
ËË !
null
ËË" &
)
ËË& '
return
ËË( .
;
ËË. /
int
ÍÍ 
sourceID
ÍÍ 
=
ÍÍ 
targetMaterial
ÍÍ )
.
ÍÍ) *
GetInstanceID
ÍÍ* 7
(
ÍÍ7 8
)
ÍÍ8 9
;
ÍÍ9 :
long
ÎÎ 
key
ÎÎ 
;
ÎÎ 
FallbackMaterial
ÏÏ 
fallback
ÏÏ %
;
ÏÏ% &
if
ÔÔ 
(
ÔÔ &
m_fallbackMaterialLookup
ÔÔ (
.
ÔÔ( )
TryGetValue
ÔÔ) 4
(
ÔÔ4 5
sourceID
ÔÔ5 =
,
ÔÔ= >
out
ÔÔ? B
key
ÔÔC F
)
ÔÔF G
)
ÔÔG H
{
 
if
ÒÒ 
(
ÒÒ !
m_fallbackMaterials
ÒÒ '
.
ÒÒ' (
TryGetValue
ÒÒ( 3
(
ÒÒ3 4
key
ÒÒ4 7
,
ÒÒ7 8
out
ÒÒ9 <
fallback
ÒÒ= E
)
ÒÒE F
)
ÒÒF G
{
ÚÚ 
fallback
ÛÛ 
.
ÛÛ 
count
ÛÛ "
-=
ÛÛ# %
$num
ÛÛ& '
;
ÛÛ' (
if
ıı 
(
ıı 
fallback
ıı  
.
ıı  !
count
ıı! &
<
ıı' (
$num
ıı) *
)
ıı* +#
m_fallbackCleanupList
ˆˆ -
.
ˆˆ- .
Add
ˆˆ. 1
(
ˆˆ1 2
fallback
ˆˆ2 :
)
ˆˆ: ;
;
ˆˆ; <
}
˜˜ 
}
¯¯ 
}
˘˘ 	
public
ˇˇ 
static
ˇˇ 
void
ˇˇ &
CleanupFallbackMaterials
ˇˇ 3
(
ˇˇ3 4
)
ˇˇ4 5
{
ÄÄ 	
if
ÇÇ 
(
ÇÇ #
m_fallbackCleanupList
ÇÇ %
.
ÇÇ% &
Count
ÇÇ& +
==
ÇÇ, .
$num
ÇÇ/ 0
)
ÇÇ0 1
return
ÇÇ2 8
;
ÇÇ8 9
for
ÑÑ 
(
ÑÑ 
int
ÑÑ 
i
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
;
ÑÑ 
i
ÑÑ 
<
ÑÑ #
m_fallbackCleanupList
ÑÑ  5
.
ÑÑ5 6
Count
ÑÑ6 ;
;
ÑÑ; <
i
ÑÑ= >
++
ÑÑ> @
)
ÑÑ@ A
{
ÖÖ 
FallbackMaterial
ÜÜ  
fallback
ÜÜ! )
=
ÜÜ* +#
m_fallbackCleanupList
ÜÜ, A
[
ÜÜA B
i
ÜÜB C
]
ÜÜC D
;
ÜÜD E
if
àà 
(
àà 
fallback
àà 
.
àà 
count
àà "
<
àà# $
$num
àà% &
)
àà& '
{
ââ 
Material
åå 
mat
åå  
=
åå! "
fallback
åå# +
.
åå+ ,
fallbackMaterial
åå, <
;
åå< =!
m_fallbackMaterials
çç '
.
çç' (
Remove
çç( .
(
çç. /
fallback
çç/ 7
.
çç7 8

fallbackID
çç8 B
)
ççB C
;
ççC D&
m_fallbackMaterialLookup
éé ,
.
éé, -
Remove
éé- 3
(
éé3 4
mat
éé4 7
.
éé7 8
GetInstanceID
éé8 E
(
ééE F
)
ééF G
)
ééG H
;
ééH I
Object
èè 
.
èè 
DestroyImmediate
èè +
(
èè+ ,
mat
èè, /
)
èè/ 0
;
èè0 1
mat
êê 
=
êê 
null
êê 
;
êê 
}
ëë 
}
íí #
m_fallbackCleanupList
îî !
.
îî! "
Clear
îî" '
(
îî' (
)
îî( )
;
îî) *
}
ïï 	
public
úú 
static
úú 
void
úú %
ReleaseFallbackMaterial
úú 2
(
úú2 3
Material
úú3 ;
fallackMaterial
úú< K
)
úúK L
{
ùù 	
if
ûû 
(
ûû 
fallackMaterial
ûû 
==
ûû  "
null
ûû# '
)
ûû' (
return
ûû) /
;
ûû/ 0
int
†† 

materialID
†† 
=
†† 
fallackMaterial
†† ,
.
††, -
GetInstanceID
††- :
(
††: ;
)
††; <
;
††< =
long
°° 
key
°° 
;
°° 
FallbackMaterial
¢¢ 
fallback
¢¢ %
;
¢¢% &
if
§§ 
(
§§ &
m_fallbackMaterialLookup
§§ (
.
§§( )
TryGetValue
§§) 4
(
§§4 5

materialID
§§5 ?
,
§§? @
out
§§A D
key
§§E H
)
§§H I
)
§§I J
{
•• 
if
¶¶ 
(
¶¶ !
m_fallbackMaterials
¶¶ '
.
¶¶' (
TryGetValue
¶¶( 3
(
¶¶3 4
key
¶¶4 7
,
¶¶7 8
out
¶¶9 <
fallback
¶¶= E
)
¶¶E F
)
¶¶F G
{
ßß 
fallback
™™ 
.
™™ 
count
™™ "
-=
™™# %
$num
™™& '
;
™™' (
if
¨¨ 
(
¨¨ 
fallback
¨¨  
.
¨¨  !
count
¨¨! &
<
¨¨' (
$num
¨¨) *
)
¨¨* +#
m_fallbackCleanupList
≠≠ -
.
≠≠- .
Add
≠≠. 1
(
≠≠1 2
fallback
≠≠2 :
)
≠≠: ;
;
≠≠; <
}
ÆÆ 
}
ØØ !
isFallbackListDirty
±± 
=
±±  !
true
±±" &
;
±±& '
}
∂∂ 	
private
ππ 
class
ππ 
FallbackMaterial
ππ &
{
∫∫ 	
public
ªª 
int
ªª 
baseID
ªª 
;
ªª 
public
ºº 
Material
ºº 
baseMaterial
ºº (
;
ºº( )
public
ΩΩ 
long
ΩΩ 

fallbackID
ΩΩ "
;
ΩΩ" #
public
ææ 
Material
ææ 
fallbackMaterial
ææ ,
;
ææ, -
public
øø 
int
øø 
count
øø 
;
øø 
}
¿¿ 	
private
√√ 
class
√√ 
MaskingMaterial
√√ %
{
ƒƒ 	
public
≈≈ 
Material
≈≈ 
baseMaterial
≈≈ (
;
≈≈( )
public
∆∆ 
Material
∆∆ 
stencilMaterial
∆∆ +
;
∆∆+ ,
public
«« 
int
«« 
count
«« 
;
«« 
public
»» 
int
»» 
	stencilID
»»  
;
»»  !
}
…… 	
public
—— 
static
—— 
void
—— *
CopyMaterialPresetProperties
—— 7
(
——7 8
Material
——8 @
source
——A G
,
——G H
Material
——I Q
destination
——R ]
)
——] ^
{
““ 	
if
”” 
(
”” 
!
”” 
source
”” 
.
”” 
HasProperty
”” #
(
””# $
ShaderUtilities
””$ 3
.
””3 4
ID_GradientScale
””4 D
)
””D E
||
””F H
!
””I J
destination
””J U
.
””U V
HasProperty
””V a
(
””a b
ShaderUtilities
””b q
.
””q r
ID_GradientScale””r Ç
)””Ç É
)””É Ñ
return
‘‘ 
;
‘‘ 
Texture
◊◊ 
dst_texture
◊◊ 
=
◊◊  !
destination
◊◊" -
.
◊◊- .

GetTexture
◊◊. 8
(
◊◊8 9
ShaderUtilities
◊◊9 H
.
◊◊H I

ID_MainTex
◊◊I S
)
◊◊S T
;
◊◊T U
float
ÿÿ 
dst_gradientScale
ÿÿ #
=
ÿÿ$ %
destination
ÿÿ& 1
.
ÿÿ1 2
GetFloat
ÿÿ2 :
(
ÿÿ: ;
ShaderUtilities
ÿÿ; J
.
ÿÿJ K
ID_GradientScale
ÿÿK [
)
ÿÿ[ \
;
ÿÿ\ ]
float
ŸŸ 
dst_texWidth
ŸŸ 
=
ŸŸ  
destination
ŸŸ! ,
.
ŸŸ, -
GetFloat
ŸŸ- 5
(
ŸŸ5 6
ShaderUtilities
ŸŸ6 E
.
ŸŸE F
ID_TextureWidth
ŸŸF U
)
ŸŸU V
;
ŸŸV W
float
⁄⁄ 
dst_texHeight
⁄⁄ 
=
⁄⁄  !
destination
⁄⁄" -
.
⁄⁄- .
GetFloat
⁄⁄. 6
(
⁄⁄6 7
ShaderUtilities
⁄⁄7 F
.
⁄⁄F G
ID_TextureHeight
⁄⁄G W
)
⁄⁄W X
;
⁄⁄X Y
float
€€ 
dst_weightNormal
€€ "
=
€€# $
destination
€€% 0
.
€€0 1
GetFloat
€€1 9
(
€€9 :
ShaderUtilities
€€: I
.
€€I J
ID_WeightNormal
€€J Y
)
€€Y Z
;
€€Z [
float
‹‹ 
dst_weightBold
‹‹  
=
‹‹! "
destination
‹‹# .
.
‹‹. /
GetFloat
‹‹/ 7
(
‹‹7 8
ShaderUtilities
‹‹8 G
.
‹‹G H
ID_WeightBold
‹‹H U
)
‹‹U V
;
‹‹V W
destination
ﬂﬂ 
.
ﬂﬂ (
CopyPropertiesFromMaterial
ﬂﬂ 2
(
ﬂﬂ2 3
source
ﬂﬂ3 9
)
ﬂﬂ9 :
;
ﬂﬂ: ;
destination
‚‚ 
.
‚‚ 
shaderKeywords
‚‚ &
=
‚‚' (
source
‚‚) /
.
‚‚/ 0
shaderKeywords
‚‚0 >
;
‚‚> ?
destination
ÂÂ 
.
ÂÂ 

SetTexture
ÂÂ "
(
ÂÂ" #
ShaderUtilities
ÂÂ# 2
.
ÂÂ2 3

ID_MainTex
ÂÂ3 =
,
ÂÂ= >
dst_texture
ÂÂ? J
)
ÂÂJ K
;
ÂÂK L
destination
ÊÊ 
.
ÊÊ 
SetFloat
ÊÊ  
(
ÊÊ  !
ShaderUtilities
ÊÊ! 0
.
ÊÊ0 1
ID_GradientScale
ÊÊ1 A
,
ÊÊA B
dst_gradientScale
ÊÊC T
)
ÊÊT U
;
ÊÊU V
destination
ÁÁ 
.
ÁÁ 
SetFloat
ÁÁ  
(
ÁÁ  !
ShaderUtilities
ÁÁ! 0
.
ÁÁ0 1
ID_TextureWidth
ÁÁ1 @
,
ÁÁ@ A
dst_texWidth
ÁÁB N
)
ÁÁN O
;
ÁÁO P
destination
ËË 
.
ËË 
SetFloat
ËË  
(
ËË  !
ShaderUtilities
ËË! 0
.
ËË0 1
ID_TextureHeight
ËË1 A
,
ËËA B
dst_texHeight
ËËC P
)
ËËP Q
;
ËËQ R
destination
ÈÈ 
.
ÈÈ 
SetFloat
ÈÈ  
(
ÈÈ  !
ShaderUtilities
ÈÈ! 0
.
ÈÈ0 1
ID_WeightNormal
ÈÈ1 @
,
ÈÈ@ A
dst_weightNormal
ÈÈB R
)
ÈÈR S
;
ÈÈS T
destination
ÍÍ 
.
ÍÍ 
SetFloat
ÍÍ  
(
ÍÍ  !
ShaderUtilities
ÍÍ! 0
.
ÍÍ0 1
ID_WeightBold
ÍÍ1 >
,
ÍÍ> ?
dst_weightBold
ÍÍ@ N
)
ÍÍN O
;
ÍÍO P
}
ÎÎ 	
}
ûû 
}†† π0
éD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_Style.cs
	namespace 	
TMPro
 
{ 
[ 
System 
. 
Serializable 
] 
public		 

class		 
	TMP_Style		 
{

 
public 
static 
	TMP_Style 
NormalStyle  +
{ 	
get 
{ 
if 
( 
k_NormalStyle !
==" $
null% )
)) *
k_NormalStyle !
=" #
new$ '
	TMP_Style( 1
(1 2
$str2 :
,: ;
string< B
.B C
EmptyC H
,H I
stringJ P
.P Q
EmptyQ V
)V W
;W X
return 
k_NormalStyle $
;$ %
} 
} 	
internal 
static 
	TMP_Style !
k_NormalStyle" /
;/ 0
public 
string 
name 
{ 	
get
 
{ 
return 
m_Name 
; 
}  
set! $
{% &
if' )
(* +
value+ 0
!=1 3
m_Name4 :
): ;
m_Name< B
=C D
valueE J
;J K
}L M
}N O
public"" 
int"" 
hashCode"" 
{## 	
get##
 
{## 
return## 

m_HashCode## !
;##! "
}### $
set##% (
{##) *
if##+ -
(##. /
value##/ 4
!=##5 7

m_HashCode##8 B
)##B C

m_HashCode##D N
=##O P
value##Q V
;##V W
}##X Y
}##Z [
public(( 
string(( "
styleOpeningDefinition(( ,
{)) 	
get))
 
{)) 
return)) 
m_OpeningDefinition)) *
;))* +
})), -
})). /
public.. 
string.. "
styleClosingDefinition.. ,
{// 	
get//
 
{// 
return// 
m_ClosingDefinition// *
;//* +
}//, -
}//. /
public22 
int22 
[22 
]22  
styleOpeningTagArray22 )
{33 	
get33
 
{33 
return33 
m_OpeningTagArray33 (
;33( )
}33* +
}33, -
public66 
int66 
[66 
]66  
styleClosingTagArray66 )
{77 	
get77
 
{77 
return77 
m_ClosingTagArray77 (
;77( )
}77* +
}77, -
[;; 	
SerializeField;;	 
];; 
private<< 
string<< 
m_Name<< 
;<< 
[>> 	
SerializeField>>	 
]>> 
private?? 
int?? 

m_HashCode?? 
;?? 
[AA 	
SerializeFieldAA	 
]AA 
privateBB 
stringBB 
m_OpeningDefinitionBB *
;BB* +
[DD 	
SerializeFieldDD	 
]DD 
privateEE 
stringEE 
m_ClosingDefinitionEE *
;EE* +
[GG 	
SerializeFieldGG	 
]GG 
privateHH 
intHH 
[HH 
]HH 
m_OpeningTagArrayHH '
;HH' (
[JJ 	
SerializeFieldJJ	 
]JJ 
privateKK 
intKK 
[KK 
]KK 
m_ClosingTagArrayKK '
;KK' (
internalTT 
	TMP_StyleTT 
(TT 
stringTT !
	styleNameTT" +
,TT+ ,
stringTT- 3"
styleOpeningDefinitionTT4 J
,TTJ K
stringTTL R"
styleClosingDefinitionTTS i
)TTi j
{UU 	
m_NameVV 
=VV 
	styleNameVV 
;VV 

m_HashCodeWW 
=WW $
TMP_TextParsingUtilitiesWW 1
.WW1 2
GetHashCodeWW2 =
(WW= >
	styleNameWW> G
)WWG H
;WWH I
m_OpeningDefinitionXX 
=XX  !"
styleOpeningDefinitionXX" 8
;XX8 9
m_ClosingDefinitionYY 
=YY  !"
styleClosingDefinitionYY" 8
;YY8 9
RefreshStyle[[ 
([[ 
)[[ 
;[[ 
}\\ 	
publicbb 
voidbb 
RefreshStylebb  
(bb  !
)bb! "
{cc 	

m_HashCodedd 
=dd $
TMP_TextParsingUtilitiesdd 1
.dd1 2
GetHashCodedd2 =
(dd= >
m_Namedd> D
)ddD E
;ddE F
m_OpeningTagArrayff 
=ff 
newff  #
intff$ '
[ff' (
m_OpeningDefinitionff( ;
.ff; <
Lengthff< B
]ffB C
;ffC D
forgg 
(gg 
intgg 
igg 
=gg 
$numgg 
;gg 
igg 
<gg 
m_OpeningDefinitiongg  3
.gg3 4
Lengthgg4 :
;gg: ;
igg< =
++gg= ?
)gg? @
m_OpeningTagArrayhh !
[hh! "
ihh" #
]hh# $
=hh% &
m_OpeningDefinitionhh' :
[hh: ;
ihh; <
]hh< =
;hh= >
m_ClosingTagArrayjj 
=jj 
newjj  #
intjj$ '
[jj' (
m_ClosingDefinitionjj( ;
.jj; <
Lengthjj< B
]jjB C
;jjC D
forkk 
(kk 
intkk 
ikk 
=kk 
$numkk 
;kk 
ikk 
<kk 
m_ClosingDefinitionkk  3
.kk3 4
Lengthkk4 :
;kk: ;
ikk< =
++kk= ?
)kk? @
m_ClosingTagArrayll !
[ll! "
ill" #
]ll# $
=ll% &
m_ClosingDefinitionll' :
[ll: ;
ill; <
]ll< =
;ll= >
}mm 	
}oo 
}pp Ä¢
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TextMeshProUGUI.cs
	namespace

 	
TMPro


 
{ 
[ %
DisallowMultipleComponent 
] 
[ 
RequireComponent 
( 
typeof 
( 
RectTransform *
)* +
)+ ,
], -
[ 
RequireComponent 
( 
typeof 
( 
CanvasRenderer +
)+ ,
), -
]- .
[ 
AddComponentMenu 
( 
$str 2
,2 3
$num4 6
)6 7
]7 8
[ 
ExecuteAlways 
] 
[ 
HelpURL 
( 
$str J
)J K
]K L
public 

partial 
class 
TextMeshProUGUI (
:) *
TMP_Text+ 3
,3 4
ILayoutElement5 C
{ 
public 
override 
Material   
materialForRendering! 5
{ 	
get 
{ 
return 
TMP_MaterialManager ,
., -#
GetMaterialForRendering- D
(D E
thisE I
,I J
m_sharedMaterialK [
)[ \
;\ ]
}^ _
} 	
public   
override   
bool   !
autoSizeTextContainer   2
{!! 	
get"" 
{"" 
return"" #
m_autoSizeTextContainer"" 0
;""0 1
}""2 3
set$$ 
{$$ 
if$$ 
($$ #
m_autoSizeTextContainer$$ -
==$$. 0
value$$1 6
)$$6 7
return$$8 >
;$$> ?#
m_autoSizeTextContainer$$@ W
=$$X Y
value$$Z _
;$$_ `
if$$a c
($$d e#
m_autoSizeTextContainer$$e |
)$$| }
{$$~ "
CanvasUpdateRegistry
$$Ä î
.
$$î ï3
%RegisterCanvasElementForLayoutRebuild
$$ï ∫
(
$$∫ ª
this
$$ª ø
)
$$ø ¿
;
$$¿ ¡
SetLayoutDirty
$$¬ –
(
$$– —
)
$$— “
;
$$“ ”
}
$$‘ ’
}
$$÷ ◊
}%% 	
public++ 
override++ 
Mesh++ 
mesh++ !
{,, 	
get-- 
{-- 
return-- 
m_mesh-- 
;--  
}--! "
}.. 	
public44 
new44 
CanvasRenderer44 !
canvasRenderer44" 0
{55 	
get66 
{77 
if88 
(88 
m_canvasRenderer88 $
==88% '
null88( ,
)88, -
m_canvasRenderer88. >
=88? @
GetComponent88A M
<88M N
CanvasRenderer88N \
>88\ ]
(88] ^
)88^ _
;88_ `
return:: 
m_canvasRenderer:: '
;::' (
};; 
}<< 	
privateMM 
boolMM  
m_isRebuildingLayoutMM )
=MM* +
falseMM, 1
;MM1 2
privateNN 
	CoroutineNN #
m_DelayedGraphicRebuildNN 1
;NN1 2
privateOO 
	CoroutineOO $
m_DelayedMaterialRebuildOO 2
;OO2 3
publicTT 
voidTT *
CalculateLayoutInputHorizontalTT 2
(TT2 3
)TT3 4
{UU 	
}WW 	
public]] 
void]] (
CalculateLayoutInputVertical]] 0
(]]0 1
)]]1 2
{^^ 	
}`` 	
publiccc 
overridecc 
voidcc 
SetVerticesDirtycc -
(cc- .
)cc. /
{dd 	
ifee 
(ee 
thisee 
==ee 
nullee 
||ee 
!ee  !
thisee! %
.ee% &
IsActiveee& .
(ee. /
)ee/ 0
)ee0 1
returnff 
;ff 
ifhh 
(hh  
CanvasUpdateRegistryhh $
.hh$ % 
IsRebuildingGraphicshh% 9
(hh9 :
)hh: ;
)hh; <
{ii 
ifjj 
(jj #
m_DelayedGraphicRebuildjj +
==jj, .
nulljj/ 3
)jj3 4#
m_DelayedGraphicRebuildkk +
=kk, -
StartCoroutinekk. <
(kk< =!
DelayedGraphicRebuildkk= R
(kkR S
)kkS T
)kkT U
;kkU V
returnmm 
;mm 
}nn  
CanvasUpdateRegistrypp  
.pp  !2
&RegisterCanvasElementForGraphicRebuildpp! G
(ppG H
(ppH I
ICanvasElementppI W
)ppW X
thisppX \
)pp\ ]
;pp] ^
ifrr 
(rr "
m_OnDirtyVertsCallbackrr &
!=rr' )
nullrr* .
)rr. /"
m_OnDirtyVertsCallbackss &
(ss& '
)ss' (
;ss( )
}tt 	
publiczz 
overridezz 
voidzz 
SetLayoutDirtyzz +
(zz+ ,
)zz, -
{{{ 	#
m_isPreferredWidthDirty|| #
=||$ %
true||& *
;||* +$
m_isPreferredHeightDirty}} $
=}}% &
true}}' +
;}}+ ,
if 
( 
this 
== 
null 
|| 
!  !
this! %
.% &
IsActive& .
(. /
)/ 0
)0 1
return
ÄÄ 
;
ÄÄ 
LayoutRebuilder
ÇÇ 
.
ÇÇ "
MarkLayoutForRebuild
ÇÇ 0
(
ÇÇ0 1
this
ÇÇ1 5
.
ÇÇ5 6
rectTransform
ÇÇ6 C
)
ÇÇC D
;
ÇÇD E
m_isLayoutDirty
ÑÑ 
=
ÑÑ 
true
ÑÑ "
;
ÑÑ" #
if
ÜÜ 
(
ÜÜ %
m_OnDirtyLayoutCallback
ÜÜ '
!=
ÜÜ( *
null
ÜÜ+ /
)
ÜÜ/ 0%
m_OnDirtyLayoutCallback
áá '
(
áá' (
)
áá( )
;
áá) *
}
àà 	
public
éé 
override
éé 
void
éé 
SetMaterialDirty
éé -
(
éé- .
)
éé. /
{
èè 	
if
êê 
(
êê 
this
êê 
==
êê 
null
êê 
||
êê 
!
êê  !
this
êê! %
.
êê% &
IsActive
êê& .
(
êê. /
)
êê/ 0
)
êê0 1
return
ëë 
;
ëë 
if
ìì 
(
ìì "
CanvasUpdateRegistry
ìì $
.
ìì$ %"
IsRebuildingGraphics
ìì% 9
(
ìì9 :
)
ìì: ;
)
ìì; <
{
îî 
if
ïï 
(
ïï &
m_DelayedMaterialRebuild
ïï ,
==
ïï- /
null
ïï0 4
)
ïï4 5&
m_DelayedMaterialRebuild
ññ ,
=
ññ- .
StartCoroutine
ññ/ =
(
ññ= >$
DelayedMaterialRebuild
ññ> T
(
ññT U
)
ññU V
)
ññV W
;
ññW X
return
òò 
;
òò 
}
ôô 
m_isMaterialDirty
õõ 
=
õõ 
true
õõ  $
;
õõ$ %"
CanvasUpdateRegistry
úú  
.
úú  !4
&RegisterCanvasElementForGraphicRebuild
úú! G
(
úúG H
(
úúH I
ICanvasElement
úúI W
)
úúW X
this
úúX \
)
úú\ ]
;
úú] ^
if
ûû 
(
ûû '
m_OnDirtyMaterialCallback
ûû )
!=
ûû* ,
null
ûû- 1
)
ûû1 2'
m_OnDirtyMaterialCallback
üü )
(
üü) *
)
üü* +
;
üü+ ,
}
†† 	
public
¶¶ 
override
¶¶ 
void
¶¶ 
SetAllDirty
¶¶ (
(
¶¶( )
)
¶¶) *
{
ßß 	&
m_isInputParsingRequired
®® $
=
®®% &
true
®®' +
;
®®+ ,
SetLayoutDirty
™™ 
(
™™ 
)
™™ 
;
™™ 
SetVerticesDirty
´´ 
(
´´ 
)
´´ 
;
´´ 
SetMaterialDirty
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
}
≠≠ 	
IEnumerator
¥¥ #
DelayedGraphicRebuild
¥¥ )
(
¥¥) *
)
¥¥* +
{
µµ 	
yield
∂∂ 
return
∂∂ 
null
∂∂ 
;
∂∂ "
CanvasUpdateRegistry
∏∏  
.
∏∏  !4
&RegisterCanvasElementForGraphicRebuild
∏∏! G
(
∏∏G H
this
∏∏H L
)
∏∏L M
;
∏∏M N
if
∫∫ 
(
∫∫ $
m_OnDirtyVertsCallback
∫∫ &
!=
∫∫' )
null
∫∫* .
)
∫∫. /$
m_OnDirtyVertsCallback
ªª &
(
ªª& '
)
ªª' (
;
ªª( )
}
ºº 	
IEnumerator
√√ $
DelayedMaterialRebuild
√√ *
(
√√* +
)
√√+ ,
{
ƒƒ 	
yield
≈≈ 
return
≈≈ 
null
≈≈ 
;
≈≈ 
m_isMaterialDirty
«« 
=
«« 
true
««  $
;
««$ %"
CanvasUpdateRegistry
»»  
.
»»  !4
&RegisterCanvasElementForGraphicRebuild
»»! G
(
»»G H
this
»»H L
)
»»L M
;
»»M N
if
   
(
   '
m_OnDirtyMaterialCallback
   )
!=
  * ,
null
  - 1
)
  1 2'
m_OnDirtyMaterialCallback
ÀÀ )
(
ÀÀ) *
)
ÀÀ* +
;
ÀÀ+ ,
}
ÃÃ 	
public
”” 
override
”” 
void
”” 
Rebuild
”” $
(
””$ %
CanvasUpdate
””% 1
update
””2 8
)
””8 9
{
‘‘ 	
if
’’ 
(
’’ 
this
’’ 
==
’’ 
null
’’ 
)
’’ 
return
’’ $
;
’’$ %
if
◊◊ 
(
◊◊ 
update
◊◊ 
==
◊◊ 
CanvasUpdate
◊◊ &
.
◊◊& '
	Prelayout
◊◊' 0
)
◊◊0 1
{
ÿÿ 
if
ŸŸ 
(
ŸŸ %
m_autoSizeTextContainer
ŸŸ +
)
ŸŸ+ ,
{
⁄⁄ 
m_rectTransform
€€ #
.
€€# $
	sizeDelta
€€$ -
=
€€. / 
GetPreferredValues
€€0 B
(
€€B C
Mathf
€€C H
.
€€H I
Infinity
€€I Q
,
€€Q R
Mathf
€€S X
.
€€X Y
Infinity
€€Y a
)
€€a b
;
€€b c
}
‹‹ 
}
›› 
else
ﬁﬁ 
if
ﬁﬁ 
(
ﬁﬁ 
update
ﬁﬁ 
==
ﬁﬁ 
CanvasUpdate
ﬁﬁ +
.
ﬁﬁ+ ,
	PreRender
ﬁﬁ, 5
)
ﬁﬁ5 6
{
ﬂﬂ 
OnPreRenderCanvas
‡‡ !
(
‡‡! "
)
‡‡" #
;
‡‡# $
if
‚‚ 
(
‚‚ 
!
‚‚ 
m_isMaterialDirty
‚‚ &
)
‚‚& '
return
‚‚( .
;
‚‚. /
UpdateMaterial
‰‰ 
(
‰‰ 
)
‰‰  
;
‰‰  !
m_isMaterialDirty
ÂÂ !
=
ÂÂ" #
false
ÂÂ$ )
;
ÂÂ) *
}
ÊÊ 
}
ÁÁ 	
private
ÌÌ 
void
ÌÌ "
UpdateSubObjectPivot
ÌÌ )
(
ÌÌ) *
)
ÌÌ* +
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ 

m_textInfo
ÔÔ 
==
ÔÔ 
null
ÔÔ "
)
ÔÔ" #
return
ÔÔ$ *
;
ÔÔ* +
for
ÒÒ 
(
ÒÒ 
int
ÒÒ 
i
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
;
ÒÒ 
i
ÒÒ 
<
ÒÒ 
m_subTextObjects
ÒÒ  0
.
ÒÒ0 1
Length
ÒÒ1 7
&&
ÒÒ8 :
m_subTextObjects
ÒÒ; K
[
ÒÒK L
i
ÒÒL M
]
ÒÒM N
!=
ÒÒO Q
null
ÒÒR V
;
ÒÒV W
i
ÒÒX Y
++
ÒÒY [
)
ÒÒ[ \
{
ÚÚ 
m_subTextObjects
ÛÛ  
[
ÛÛ  !
i
ÛÛ! "
]
ÛÛ" #
.
ÛÛ# $
SetPivotDirty
ÛÛ$ 1
(
ÛÛ1 2
)
ÛÛ2 3
;
ÛÛ3 4
}
ÙÙ 
}
ˆˆ 	
public
˛˛ 
override
˛˛ 
Material
˛˛  !
GetModifiedMaterial
˛˛! 4
(
˛˛4 5
Material
˛˛5 =
baseMaterial
˛˛> J
)
˛˛J K
{
ˇˇ 	
Material
ÄÄ 
mat
ÄÄ 
=
ÄÄ 
baseMaterial
ÄÄ '
;
ÄÄ' (
if
ÇÇ 
(
ÇÇ (
m_ShouldRecalculateStencil
ÇÇ *
)
ÇÇ* +
{
ÉÉ 
var
ÑÑ 

rootCanvas
ÑÑ 
=
ÑÑ  
MaskUtilities
ÑÑ! .
.
ÑÑ. /(
FindRootSortOverrideCanvas
ÑÑ/ I
(
ÑÑI J
	transform
ÑÑJ S
)
ÑÑS T
;
ÑÑT U
m_StencilValue
ÖÖ 
=
ÖÖ  
maskable
ÖÖ! )
?
ÖÖ* +
MaskUtilities
ÖÖ, 9
.
ÖÖ9 :
GetStencilDepth
ÖÖ: I
(
ÖÖI J
	transform
ÖÖJ S
,
ÖÖS T

rootCanvas
ÖÖU _
)
ÖÖ_ `
:
ÖÖa b
$num
ÖÖc d
;
ÖÖd e(
m_ShouldRecalculateStencil
ÜÜ *
=
ÜÜ+ ,
false
ÜÜ- 2
;
ÜÜ2 3
}
áá 
if
ââ 
(
ââ 
m_StencilValue
ââ 
>
ââ  
$num
ââ! "
)
ââ" #
{
ää 
var
ãã 
maskMat
ãã 
=
ãã 
StencilMaterial
ãã -
.
ãã- .
Add
ãã. 1
(
ãã1 2
mat
ãã2 5
,
ãã5 6
(
ãã7 8
$num
ãã8 9
<<
ãã: <
m_StencilValue
ãã= K
)
ããK L
-
ããM N
$num
ããO P
,
ããP Q
	StencilOp
ããR [
.
ãã[ \
Keep
ãã\ `
,
ãã` a
CompareFunction
ããb q
.
ããq r
Equal
ããr w
,
ããw x
ColorWriteMaskããy á
.ããá à
Allããà ã
,ããã å
(ããç é
$numããé è
<<ããê í
m_StencilValueããì °
)ãã° ¢
-ãã£ §
$numãã• ¶
,ãã¶ ß
$numãã® ©
)ãã© ™
;ãã™ ´
StencilMaterial
åå 
.
åå  
Remove
åå  &
(
åå& '
m_MaskMaterial
åå' 5
)
åå5 6
;
åå6 7
m_MaskMaterial
çç 
=
çç  
maskMat
çç! (
;
çç( )
mat
éé 
=
éé 
m_MaskMaterial
éé $
;
éé$ %
}
èè 
return
ëë 
mat
ëë 
;
ëë 
}
íí 	
	protected
òò 
override
òò 
void
òò 
UpdateMaterial
òò  .
(
òò. /
)
òò/ 0
{
ôô 	
if
üü 
(
üü 
m_sharedMaterial
üü  
==
üü! #
null
üü$ (
||
üü) +
canvasRenderer
üü, :
==
üü; =
null
üü> B
)
üüB C
return
üüD J
;
üüJ K
m_canvasRenderer
°° 
.
°° 
materialCount
°° *
=
°°+ ,
$num
°°- .
;
°°. /
m_canvasRenderer
¢¢ 
.
¢¢ 
SetMaterial
¢¢ (
(
¢¢( )"
materialForRendering
¢¢) =
,
¢¢= >
$num
¢¢? @
)
¢¢@ A
;
¢¢A B
}
§§ 	
public
ªª 
Vector4
ªª 

maskOffset
ªª !
{
ºº 	
get
ΩΩ 
{
ΩΩ 
return
ΩΩ 
m_maskOffset
ΩΩ %
;
ΩΩ% &
}
ΩΩ' (
set
ææ 
{
ææ 
m_maskOffset
ææ 
=
ææ  
value
ææ! &
;
ææ& '

UpdateMask
ææ( 2
(
ææ2 3
)
ææ3 4
;
ææ4 5%
m_havePropertiesChanged
ææ6 M
=
ææN O
true
ææP T
;
ææT U
}
ææV W
}
øø 	
public
”” 
override
”” 
void
”” !
RecalculateClipping
”” 0
(
””0 1
)
””1 2
{
‘‘ 	
base
◊◊ 
.
◊◊ !
RecalculateClipping
◊◊ $
(
◊◊$ %
)
◊◊% &
;
◊◊& '
}
ÿÿ 	
public
ıı 
override
ıı 
void
ıı 
Cull
ıı !
(
ıı! "
Rect
ıı" &
clipRect
ıı' /
,
ıı/ 0
bool
ıı1 5
	validRect
ıı6 ?
)
ıı? @
{
ˆˆ 	
if
¯¯ 
(
¯¯ 
m_isLayoutDirty
¯¯ 
)
¯¯  
{
˘˘ 
TMP_UpdateManager
˙˙ !
.
˙˙! "1
#RegisterTextElementForCullingUpdate
˙˙" E
(
˙˙E F
this
˙˙F J
)
˙˙J K
;
˙˙K L

m_ClipRect
˚˚ 
=
˚˚ 
clipRect
˚˚ %
;
˚˚% &
m_ValidRect
¸¸ 
=
¸¸ 
	validRect
¸¸ '
;
¸¸' (
return
˝˝ 
;
˝˝ 
}
˛˛ 
Rect
ÅÅ 
rect
ÅÅ 
=
ÅÅ (
GetCanvasSpaceClippingRect
ÅÅ 2
(
ÅÅ2 3
)
ÅÅ3 4
;
ÅÅ4 5
if
ÑÑ 
(
ÑÑ 
rect
ÑÑ 
.
ÑÑ 
width
ÑÑ 
==
ÑÑ 
$num
ÑÑ 
||
ÑÑ  "
rect
ÑÑ# '
.
ÑÑ' (
height
ÑÑ( .
==
ÑÑ/ 1
$num
ÑÑ2 3
)
ÑÑ3 4
return
ÖÖ 
;
ÖÖ 
var
áá 
cull
áá 
=
áá 
!
áá 
	validRect
áá !
||
áá" $
!
áá% &
clipRect
áá& .
.
áá. /
Overlaps
áá/ 7
(
áá7 8
rect
áá8 <
,
áá< =
true
áá> B
)
ááB C
;
ááC D
if
àà 
(
àà 
m_canvasRenderer
àà  
.
àà  !
cull
àà! %
!=
àà& (
cull
àà) -
)
àà- .
{
ââ 
m_canvasRenderer
ää  
.
ää  !
cull
ää! %
=
ää& '
cull
ää( ,
;
ää, - 
onCullStateChanged
ãã "
.
ãã" #
Invoke
ãã# )
(
ãã) *
cull
ãã* .
)
ãã. /
;
ãã/ 0
OnCullingChanged
åå  
(
åå  !
)
åå! "
;
åå" #
for
èè 
(
èè 
int
èè 
i
èè 
=
èè 
$num
èè 
;
èè 
i
èè  !
<
èè" #
m_subTextObjects
èè$ 4
.
èè4 5
Length
èè5 ;
&&
èè< >
m_subTextObjects
èè? O
[
èèO P
i
èèP Q
]
èèQ R
!=
èèS U
null
èèV Z
;
èèZ [
i
èè\ ]
++
èè] _
)
èè_ `
{
êê 
m_subTextObjects
ëë $
[
ëë$ %
i
ëë% &
]
ëë& '
.
ëë' (
canvasRenderer
ëë( 6
.
ëë6 7
cull
ëë7 ;
=
ëë< =
cull
ëë> B
;
ëëB C
}
íí 
}
ìì 
}
îî 	
private
ññ 
Rect
ññ 

m_ClipRect
ññ 
;
ññ  
private
óó 
bool
óó 
m_ValidRect
óó  
;
óó  !
internal
úú 
override
úú 
void
úú 
UpdateCulling
úú ,
(
úú, -
)
úú- .
{
ùù 	
Rect
üü 
rect
üü 
=
üü (
GetCanvasSpaceClippingRect
üü 2
(
üü2 3
)
üü3 4
;
üü4 5
if
¢¢ 
(
¢¢ 
rect
¢¢ 
.
¢¢ 
width
¢¢ 
==
¢¢ 
$num
¢¢ 
||
¢¢  "
rect
¢¢# '
.
¢¢' (
height
¢¢( .
==
¢¢/ 1
$num
¢¢2 3
)
¢¢3 4
return
££ 
;
££ 
var
•• 
cull
•• 
=
•• 
!
•• 
m_ValidRect
•• #
||
••$ &
!
••' (

m_ClipRect
••( 2
.
••2 3
Overlaps
••3 ;
(
••; <
rect
••< @
,
••@ A
true
••B F
)
••F G
;
••G H
if
¶¶ 
(
¶¶ 
m_canvasRenderer
¶¶  
.
¶¶  !
cull
¶¶! %
!=
¶¶& (
cull
¶¶) -
)
¶¶- .
{
ßß 
m_canvasRenderer
®®  
.
®®  !
cull
®®! %
=
®®& '
cull
®®( ,
;
®®, - 
onCullStateChanged
©© "
.
©©" #
Invoke
©©# )
(
©©) *
cull
©©* .
)
©©. /
;
©©/ 0
OnCullingChanged
™™  
(
™™  !
)
™™! "
;
™™" #
for
≠≠ 
(
≠≠ 
int
≠≠ 
i
≠≠ 
=
≠≠ 
$num
≠≠ 
;
≠≠ 
i
≠≠  !
<
≠≠" #
m_subTextObjects
≠≠$ 4
.
≠≠4 5
Length
≠≠5 ;
&&
≠≠< >
m_subTextObjects
≠≠? O
[
≠≠O P
i
≠≠P Q
]
≠≠Q R
!=
≠≠S U
null
≠≠V Z
;
≠≠Z [
i
≠≠\ ]
++
≠≠] _
)
≠≠_ `
{
ÆÆ 
m_subTextObjects
ØØ $
[
ØØ$ %
i
ØØ% &
]
ØØ& '
.
ØØ' (
canvasRenderer
ØØ( 6
.
ØØ6 7
cull
ØØ7 ;
=
ØØ< =
cull
ØØ> B
;
ØØB C
}
∞∞ 
}
±± 
}
≤≤ 	
public
‰‰ 
override
‰‰ 
void
‰‰ 
UpdateMeshPadding
‰‰ .
(
‰‰. /
)
‰‰/ 0
{
ÂÂ 	
	m_padding
ÊÊ 
=
ÊÊ 
ShaderUtilities
ÊÊ '
.
ÊÊ' (

GetPadding
ÊÊ( 2
(
ÊÊ2 3
m_sharedMaterial
ÊÊ3 C
,
ÊÊC D"
m_enableExtraPadding
ÊÊE Y
,
ÊÊY Z
m_isUsingBold
ÊÊ[ h
)
ÊÊh i
;
ÊÊi j 
m_isMaskingEnabled
ÁÁ 
=
ÁÁ  
ShaderUtilities
ÁÁ! 0
.
ÁÁ0 1
IsMaskingEnabled
ÁÁ1 A
(
ÁÁA B
m_sharedMaterial
ÁÁB R
)
ÁÁR S
;
ÁÁS T%
m_havePropertiesChanged
ËË #
=
ËË$ %
true
ËË& *
;
ËË* +"
checkPaddingRequired
ÈÈ  
=
ÈÈ! "
false
ÈÈ# (
;
ÈÈ( )
if
ÏÏ 
(
ÏÏ 

m_textInfo
ÏÏ 
==
ÏÏ 
null
ÏÏ "
)
ÏÏ" #
return
ÏÏ$ *
;
ÏÏ* +
for
ÔÔ 
(
ÔÔ 
int
ÔÔ 
i
ÔÔ 
=
ÔÔ 
$num
ÔÔ 
;
ÔÔ 
i
ÔÔ 
<
ÔÔ 

m_textInfo
ÔÔ  *
.
ÔÔ* +
materialCount
ÔÔ+ 8
;
ÔÔ8 9
i
ÔÔ: ;
++
ÔÔ; =
)
ÔÔ= >
m_subTextObjects
  
[
  !
i
! "
]
" #
.
# $
UpdateMeshPadding
$ 5
(
5 6"
m_enableExtraPadding
6 J
,
J K
m_isUsingBold
L Y
)
Y Z
;
Z [
}
ÒÒ 	
	protected
˚˚ 
override
˚˚ 
void
˚˚ $
InternalCrossFadeColor
˚˚  6
(
˚˚6 7
Color
˚˚7 <
targetColor
˚˚= H
,
˚˚H I
float
˚˚J O
duration
˚˚P X
,
˚˚X Y
bool
˚˚Z ^
ignoreTimeScale
˚˚_ n
,
˚˚n o
bool
˚˚p t
useAlpha
˚˚u }
)
˚˚} ~
{
¸¸ 	
if
˝˝ 
(
˝˝ 

m_textInfo
˝˝ 
==
˝˝ 
null
˝˝ "
)
˝˝" #
return
˛˛ 
;
˛˛ 
int
ÄÄ 
materialCount
ÄÄ 
=
ÄÄ 

m_textInfo
ÄÄ  *
.
ÄÄ* +
materialCount
ÄÄ+ 8
;
ÄÄ8 9
for
ÇÇ 
(
ÇÇ 
int
ÇÇ 
i
ÇÇ 
=
ÇÇ 
$num
ÇÇ 
;
ÇÇ 
i
ÇÇ 
<
ÇÇ 
materialCount
ÇÇ  -
;
ÇÇ- .
i
ÇÇ/ 0
++
ÇÇ0 2
)
ÇÇ2 3
{
ÉÉ 
m_subTextObjects
ÑÑ  
[
ÑÑ  !
i
ÑÑ! "
]
ÑÑ" #
.
ÑÑ# $
CrossFadeColor
ÑÑ$ 2
(
ÑÑ2 3
targetColor
ÑÑ3 >
,
ÑÑ> ?
duration
ÑÑ@ H
,
ÑÑH I
ignoreTimeScale
ÑÑJ Y
,
ÑÑY Z
useAlpha
ÑÑ[ c
)
ÑÑc d
;
ÑÑd e
}
ÖÖ 
}
ÜÜ 	
	protected
èè 
override
èè 
void
èè $
InternalCrossFadeAlpha
èè  6
(
èè6 7
float
èè7 <
alpha
èè= B
,
èèB C
float
èèD I
duration
èèJ R
,
èèR S
bool
èèT X
ignoreTimeScale
èèY h
)
èèh i
{
êê 	
if
ëë 
(
ëë 

m_textInfo
ëë 
==
ëë 
null
ëë "
)
ëë" #
return
íí 
;
íí 
int
îî 
materialCount
îî 
=
îî 

m_textInfo
îî  *
.
îî* +
materialCount
îî+ 8
;
îî8 9
for
ññ 
(
ññ 
int
ññ 
i
ññ 
=
ññ 
$num
ññ 
;
ññ 
i
ññ 
<
ññ 
materialCount
ññ  -
;
ññ- .
i
ññ/ 0
++
ññ0 2
)
ññ2 3
{
óó 
m_subTextObjects
òò  
[
òò  !
i
òò! "
]
òò" #
.
òò# $
CrossFadeAlpha
òò$ 2
(
òò2 3
alpha
òò3 8
,
òò8 9
duration
òò: B
,
òòB C
ignoreTimeScale
òòD S
)
òòS T
;
òòT U
}
ôô 
}
öö 	
public
¢¢ 
override
¢¢ 
void
¢¢ 
ForceMeshUpdate
¢¢ ,
(
¢¢, -
bool
¢¢- 1
ignoreActiveState
¢¢2 C
=
¢¢D E
false
¢¢F K
,
¢¢K L
bool
¢¢M Q 
forceTextReparsing
¢¢R d
=
¢¢e f
false
¢¢g l
)
¢¢l m
{
££ 	%
m_havePropertiesChanged
§§ #
=
§§$ %
true
§§& *
;
§§* +!
m_ignoreActiveState
•• 
=
••  !
ignoreActiveState
••" 3
;
••3 4&
m_isInputParsingRequired
¶¶ $
=
¶¶% &&
m_isInputParsingRequired
¶¶' ?
?
¶¶@ A
true
¶¶B F
:
¶¶G H 
forceTextReparsing
¶¶I [
;
¶¶[ \
if
©© 
(
©© 
m_canvas
©© 
==
©© 
null
©©  
)
©©  !
m_canvas
™™ 
=
™™ "
GetComponentInParent
™™ /
<
™™/ 0
Canvas
™™0 6
>
™™6 7
(
™™7 8
)
™™8 9
;
™™9 :
OnPreRenderCanvas
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨  
}
≠≠ 	
public
µµ 
override
µµ 
TMP_TextInfo
µµ $
GetTextInfo
µµ% 0
(
µµ0 1
string
µµ1 7
text
µµ8 <
)
µµ< =
{
∂∂ 	+
StringToInternalParsingBuffer
∑∑ )
(
∑∑) *
text
∑∑* .
,
∑∑. /
ref
∑∑0 3%
m_InternalParsingBuffer
∑∑4 K
)
∑∑K L
;
∑∑L M
SetArraySizes
∏∏ 
(
∏∏ %
m_InternalParsingBuffer
∏∏ 1
)
∏∏1 2
;
∏∏2 3
m_renderMode
∫∫ 
=
∫∫ 
TextRenderFlags
∫∫ *
.
∫∫* +

DontRender
∫∫+ 5
;
∫∫5 6
ComputeMarginSize
ºº 
(
ºº 
)
ºº 
;
ºº  
if
øø 
(
øø 
m_canvas
øø 
==
øø 
null
øø  
)
øø  !
m_canvas
øø" *
=
øø+ ,
this
øø- 1
.
øø1 2
canvas
øø2 8
;
øø8 9
GenerateTextMesh
¡¡ 
(
¡¡ 
)
¡¡ 
;
¡¡ 
m_renderMode
√√ 
=
√√ 
TextRenderFlags
√√ *
.
√√* +
Render
√√+ 1
;
√√1 2
return
≈≈ 
this
≈≈ 
.
≈≈ 
textInfo
≈≈  
;
≈≈  !
}
∆∆ 	
public
ÃÃ 
override
ÃÃ 
void
ÃÃ 
	ClearMesh
ÃÃ &
(
ÃÃ& '
)
ÃÃ' (
{
ÕÕ 	
m_canvasRenderer
ŒŒ 
.
ŒŒ 
SetMesh
ŒŒ $
(
ŒŒ$ %
null
ŒŒ% )
)
ŒŒ) *
;
ŒŒ* +
for
–– 
(
–– 
int
–– 
i
–– 
=
–– 
$num
–– 
;
–– 
i
–– 
<
–– 
m_subTextObjects
––  0
.
––0 1
Length
––1 7
&&
––8 :
m_subTextObjects
––; K
[
––K L
i
––L M
]
––M N
!=
––O Q
null
––R V
;
––V W
i
––X Y
++
––Y [
)
––[ \
m_subTextObjects
——  
[
——  !
i
——! "
]
——" #
.
——# $
canvasRenderer
——$ 2
.
——2 3
SetMesh
——3 :
(
——: ;
null
——; ?
)
——? @
;
——@ A
}
’’ 	
public
€€ 
override
€€ 
event
€€ 
Action
€€ $
<
€€$ %
TMP_TextInfo
€€% 1
>
€€1 2
OnPreRenderText
€€3 B
;
€€B C
public
„„ 
override
„„ 
void
„„ 
UpdateGeometry
„„ +
(
„„+ ,
Mesh
„„, 0
mesh
„„1 5
,
„„5 6
int
„„7 :
index
„„; @
)
„„@ A
{
‰‰ 	
mesh
ÂÂ 
.
ÂÂ 
RecalculateBounds
ÂÂ "
(
ÂÂ" #
)
ÂÂ# $
;
ÂÂ$ %
if
ÁÁ 
(
ÁÁ 
index
ÁÁ 
==
ÁÁ 
$num
ÁÁ 
)
ÁÁ 
{
ËË 
m_canvasRenderer
ÈÈ  
.
ÈÈ  !
SetMesh
ÈÈ! (
(
ÈÈ( )
mesh
ÈÈ) -
)
ÈÈ- .
;
ÈÈ. /
}
ÍÍ 
else
ÎÎ 
{
ÏÏ 
m_subTextObjects
ÌÌ  
[
ÌÌ  !
index
ÌÌ! &
]
ÌÌ& '
.
ÌÌ' (
canvasRenderer
ÌÌ( 6
.
ÌÌ6 7
SetMesh
ÌÌ7 >
(
ÌÌ> ?
mesh
ÌÌ? C
)
ÌÌC D
;
ÌÌD E
}
ÓÓ 
}
ÔÔ 	
public
ıı 
override
ıı 
void
ıı 
UpdateVertexData
ıı -
(
ıı- .'
TMP_VertexDataUpdateFlags
ıı. G
flags
ııH M
)
ııM N
{
ˆˆ 	
int
˜˜ 
materialCount
˜˜ 
=
˜˜ 

m_textInfo
˜˜  *
.
˜˜* +
materialCount
˜˜+ 8
;
˜˜8 9
for
˘˘ 
(
˘˘ 
int
˘˘ 
i
˘˘ 
=
˘˘ 
$num
˘˘ 
;
˘˘ 
i
˘˘ 
<
˘˘ 
materialCount
˘˘  -
;
˘˘- .
i
˘˘/ 0
++
˘˘0 2
)
˘˘2 3
{
˙˙ 
Mesh
˚˚ 
mesh
˚˚ 
;
˚˚ 
if
˝˝ 
(
˝˝ 
i
˝˝ 
==
˝˝ 
$num
˝˝ 
)
˝˝ 
mesh
˛˛ 
=
˛˛ 
m_mesh
˛˛ !
;
˛˛! "
else
ˇˇ 
{
ÄÄ 
mesh
ÖÖ 
=
ÖÖ 
m_subTextObjects
ÖÖ +
[
ÖÖ+ ,
i
ÖÖ, -
]
ÖÖ- .
.
ÖÖ. /
mesh
ÖÖ/ 3
;
ÖÖ3 4
}
ÜÜ 
if
àà 
(
àà 
(
àà 
flags
àà 
&
àà '
TMP_VertexDataUpdateFlags
àà 6
.
àà6 7
Vertices
àà7 ?
)
àà? @
==
ààA C'
TMP_VertexDataUpdateFlags
ààD ]
.
àà] ^
Vertices
àà^ f
)
ààf g
mesh
ââ 
.
ââ 
vertices
ââ !
=
ââ" #

m_textInfo
ââ$ .
.
ââ. /
meshInfo
ââ/ 7
[
ââ7 8
i
ââ8 9
]
ââ9 :
.
ââ: ;
vertices
ââ; C
;
ââC D
if
ãã 
(
ãã 
(
ãã 
flags
ãã 
&
ãã '
TMP_VertexDataUpdateFlags
ãã 6
.
ãã6 7
Uv0
ãã7 :
)
ãã: ;
==
ãã< >'
TMP_VertexDataUpdateFlags
ãã? X
.
ããX Y
Uv0
ããY \
)
ãã\ ]
mesh
åå 
.
åå 
uv
åå 
=
åå 

m_textInfo
åå (
.
åå( )
meshInfo
åå) 1
[
åå1 2
i
åå2 3
]
åå3 4
.
åå4 5
uvs0
åå5 9
;
åå9 :
if
éé 
(
éé 
(
éé 
flags
éé 
&
éé '
TMP_VertexDataUpdateFlags
éé 6
.
éé6 7
Uv2
éé7 :
)
éé: ;
==
éé< >'
TMP_VertexDataUpdateFlags
éé? X
.
ééX Y
Uv2
ééY \
)
éé\ ]
mesh
èè 
.
èè 
uv2
èè 
=
èè 

m_textInfo
èè )
.
èè) *
meshInfo
èè* 2
[
èè2 3
i
èè3 4
]
èè4 5
.
èè5 6
uvs2
èè6 :
;
èè: ;
if
îî 
(
îî 
(
îî 
flags
îî 
&
îî '
TMP_VertexDataUpdateFlags
îî 6
.
îî6 7
Colors32
îî7 ?
)
îî? @
==
îîA C'
TMP_VertexDataUpdateFlags
îîD ]
.
îî] ^
Colors32
îî^ f
)
îîf g
mesh
ïï 
.
ïï 
colors32
ïï !
=
ïï" #

m_textInfo
ïï$ .
.
ïï. /
meshInfo
ïï/ 7
[
ïï7 8
i
ïï8 9
]
ïï9 :
.
ïï: ;
colors32
ïï; C
;
ïïC D
mesh
óó 
.
óó 
RecalculateBounds
óó &
(
óó& '
)
óó' (
;
óó( )
if
ôô 
(
ôô 
i
ôô 
==
ôô 
$num
ôô 
)
ôô 
m_canvasRenderer
öö $
.
öö$ %
SetMesh
öö% ,
(
öö, -
mesh
öö- 1
)
öö1 2
;
öö2 3
else
õõ 
m_subTextObjects
úú $
[
úú$ %
i
úú% &
]
úú& '
.
úú' (
canvasRenderer
úú( 6
.
úú6 7
SetMesh
úú7 >
(
úú> ?
mesh
úú? C
)
úúC D
;
úúD E
}
ùù 
}
ûû 	
public
§§ 
override
§§ 
void
§§ 
UpdateVertexData
§§ -
(
§§- .
)
§§. /
{
•• 	
int
¶¶ 
materialCount
¶¶ 
=
¶¶ 

m_textInfo
¶¶  *
.
¶¶* +
materialCount
¶¶+ 8
;
¶¶8 9
for
®® 
(
®® 
int
®® 
i
®® 
=
®® 
$num
®® 
;
®® 
i
®® 
<
®® 
materialCount
®®  -
;
®®- .
i
®®/ 0
++
®®0 2
)
®®2 3
{
©© 
Mesh
™™ 
mesh
™™ 
;
™™ 
if
¨¨ 
(
¨¨ 
i
¨¨ 
==
¨¨ 
$num
¨¨ 
)
¨¨ 
mesh
≠≠ 
=
≠≠ 
m_mesh
≠≠ !
;
≠≠! "
else
ÆÆ 
{
ØØ 

m_textInfo
±± 
.
±± 
meshInfo
±± '
[
±±' (
i
±±( )
]
±±) *
.
±±* +!
ClearUnusedVertices
±±+ >
(
±±> ?
)
±±? @
;
±±@ A
mesh
≥≥ 
=
≥≥ 
m_subTextObjects
≥≥ +
[
≥≥+ ,
i
≥≥, -
]
≥≥- .
.
≥≥. /
mesh
≥≥/ 3
;
≥≥3 4
}
¥¥ 
mesh
∑∑ 
.
∑∑ 
vertices
∑∑ 
=
∑∑ 

m_textInfo
∑∑  *
.
∑∑* +
meshInfo
∑∑+ 3
[
∑∑3 4
i
∑∑4 5
]
∑∑5 6
.
∑∑6 7
vertices
∑∑7 ?
;
∑∑? @
mesh
∏∏ 
.
∏∏ 
uv
∏∏ 
=
∏∏ 

m_textInfo
∏∏ $
.
∏∏$ %
meshInfo
∏∏% -
[
∏∏- .
i
∏∏. /
]
∏∏/ 0
.
∏∏0 1
uvs0
∏∏1 5
;
∏∏5 6
mesh
ππ 
.
ππ 
uv2
ππ 
=
ππ 

m_textInfo
ππ %
.
ππ% &
meshInfo
ππ& .
[
ππ. /
i
ππ/ 0
]
ππ0 1
.
ππ1 2
uvs2
ππ2 6
;
ππ6 7
mesh
ªª 
.
ªª 
colors32
ªª 
=
ªª 

m_textInfo
ªª  *
.
ªª* +
meshInfo
ªª+ 3
[
ªª3 4
i
ªª4 5
]
ªª5 6
.
ªª6 7
colors32
ªª7 ?
;
ªª? @
mesh
ΩΩ 
.
ΩΩ 
RecalculateBounds
ΩΩ &
(
ΩΩ& '
)
ΩΩ' (
;
ΩΩ( )
if
øø 
(
øø 
i
øø 
==
øø 
$num
øø 
)
øø 
m_canvasRenderer
¿¿ $
.
¿¿$ %
SetMesh
¿¿% ,
(
¿¿, -
mesh
¿¿- 1
)
¿¿1 2
;
¿¿2 3
else
¡¡ 
m_subTextObjects
¬¬ $
[
¬¬$ %
i
¬¬% &
]
¬¬& '
.
¬¬' (
canvasRenderer
¬¬( 6
.
¬¬6 7
SetMesh
¬¬7 >
(
¬¬> ?
mesh
¬¬? C
)
¬¬C D
;
¬¬D E
}
√√ 
}
ƒƒ 	
public
«« 
void
«« 
UpdateFontAsset
«« #
(
««# $
)
««$ %
{
»» 	
LoadFontAsset
…… 
(
…… 
)
…… 
;
…… 
}
   	
}
ÃÃ 
}ÕÕ ´
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_ListPool.cs
	namespace 	
TMPro
 
{ 
internal 
static 
class 
TMP_ListPool &
<& '
T' (
>( )
{ 
private		 
static		 
readonly		 
TMP_ObjectPool		  .
<		. /
List		/ 3
<		3 4
T		4 5
>		5 6
>		6 7

s_ListPool		8 B
=		C D
new		E H
TMP_ObjectPool		I W
<		W X
List		X \
<		\ ]
T		] ^
>		^ _
>		_ `
(		` a
null		a e
,		e f
l		g h
=>		i k
l		l m
.		m n
Clear		n s
(		s t
)		t u
)		u v
;		v w
public 
static 
List 
< 
T 
> 
Get !
(! "
)" #
{ 	
return 

s_ListPool 
. 
Get !
(! "
)" #
;# $
} 	
public 
static 
void 
Release "
(" #
List# '
<' (
T( )
>) *
	toRelease+ 4
)4 5
{ 	

s_ListPool 
. 
Release 
( 
	toRelease (
)( )
;) *
} 	
} 
} ãW
ûD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_EditorResourceManager.cs
	namespace 	
TMPro
 
{		 
public

 

class

 %
TMP_EditorResourceManager

 *
{ 
private 
static %
TMP_EditorResourceManager 0

s_Instance1 ;
;; <
private 
readonly 
List 
< 
Object $
>$ %
m_ObjectUpdateQueue& 9
=: ;
new< ?
List@ D
<D E
ObjectE K
>K L
(L M
)M N
;N O
private 
HashSet 
< 
int 
> %
m_ObjectUpdateQueueLookup 6
=7 8
new9 <
HashSet= D
<D E
intE H
>H I
(I J
)J K
;K L
private 
readonly 
List 
< 
Object $
>$ %!
m_ObjectReImportQueue& ;
=< =
new> A
ListB F
<F G
ObjectG M
>M N
(N O
)O P
;P Q
private 
HashSet 
< 
int 
> '
m_ObjectReImportQueueLookup 8
=9 :
new; >
HashSet? F
<F G
intG J
>J K
(K L
)L M
;M N
private 
readonly 
List 
< 
TMP_FontAsset +
>+ ,-
!m_FontAssetDefinitionRefreshQueue- N
=O P
newQ T
ListU Y
<Y Z
TMP_FontAssetZ g
>g h
(h i
)i j
;j k
private 
HashSet 
< 
int 
> 3
'm_FontAssetDefinitionRefreshQueueLookup D
=E F
newG J
HashSetK R
<R S
intS V
>V W
(W X
)X Y
;Y Z
public 
static %
TMP_EditorResourceManager /
instance0 8
{ 	
get 
{ 
if 
( 

s_Instance 
== !
null" &
)& '

s_Instance 
=  
new! $%
TMP_EditorResourceManager% >
(> ?
)? @
;@ A
return!! 

s_Instance!! !
;!!! "
}"" 
}## 	
private(( %
TMP_EditorResourceManager(( )
((() *
)((* +
{)) 	
Camera** 
.** 
onPostRender** 
+=**  "
OnCameraPostRender**# 5
;**5 6
}++ 	
void.. 
OnCameraPostRender.. 
(..  
Camera..  &
cam..' *
)..* +
{// 	
if11 
(11 
cam11 
.11 

cameraType11 
==11 !

CameraType11" ,
.11, -
Preview11- 4
)114 5
return22 
;22 
	DoUpdates44 
(44 
)44 
;44 
}55 	
internal;; 
static;; 
void;; '
RegisterResourceForReimport;; 8
(;;8 9
Object;;9 ?
obj;;@ C
);;C D
{<< 	
instance== 
.== /
#InternalRegisterResourceForReimport== 8
(==8 9
obj==9 <
)==< =
;=== >
}>> 	
private@@ 
void@@ /
#InternalRegisterResourceForReimport@@ 8
(@@8 9
Object@@9 ?
obj@@@ C
)@@C D
{AA 	
intBB 
idBB 
=BB 
objBB 
.BB 
GetInstanceIDBB &
(BB& '
)BB' (
;BB( )
ifDD 
(DD '
m_ObjectReImportQueueLookupDD +
.DD+ ,
ContainsDD, 4
(DD4 5
idDD5 7
)DD7 8
)DD8 9
returnEE 
;EE '
m_ObjectReImportQueueLookupGG '
.GG' (
AddGG( +
(GG+ ,
idGG, .
)GG. /
;GG/ 0!
m_ObjectReImportQueueHH !
.HH! "
AddHH" %
(HH% &
objHH& )
)HH) *
;HH* +
}II 	
internalOO 
staticOO 
voidOO %
RegisterResourceForUpdateOO 6
(OO6 7
ObjectOO7 =
objOO> A
)OOA B
{PP 	
instanceQQ 
.QQ -
!InternalRegisterResourceForUpdateQQ 6
(QQ6 7
objQQ7 :
)QQ: ;
;QQ; <
}RR 	
privateTT 
voidTT -
!InternalRegisterResourceForUpdateTT 6
(TT6 7
ObjectTT7 =
objTT> A
)TTA B
{UU 	
intVV 
idVV 
=VV 
objVV 
.VV 
GetInstanceIDVV &
(VV& '
)VV' (
;VV( )
ifXX 
(XX %
m_ObjectUpdateQueueLookupXX )
.XX) *
ContainsXX* 2
(XX2 3
idXX3 5
)XX5 6
)XX6 7
returnYY 
;YY %
m_ObjectUpdateQueueLookup[[ %
.[[% &
Add[[& )
([[) *
id[[* ,
)[[, -
;[[- .
m_ObjectUpdateQueue\\ 
.\\  
Add\\  #
(\\# $
obj\\$ '
)\\' (
;\\( )
}]] 	
internalcc 
staticcc 
voidcc 1
%RegisterFontAssetForDefinitionRefreshcc B
(ccB C
TMP_FontAssetccC P
	fontAssetccQ Z
)ccZ [
{dd 	
instanceee 
.ee 9
-InternalRegisterFontAssetForDefinitionRefreshee B
(eeB C
	fontAsseteeC L
)eeL M
;eeM N
}ff 	
privatehh 
voidhh 9
-InternalRegisterFontAssetForDefinitionRefreshhh B
(hhB C
TMP_FontAssethhC P
	fontAssethhQ Z
)hhZ [
{ii 	
intjj 
idjj 
=jj 
	fontAssetjj 
.jj 
GetInstanceIDjj ,
(jj, -
)jj- .
;jj. /
ifll 
(ll 3
'm_FontAssetDefinitionRefreshQueueLookupll 7
.ll7 8
Containsll8 @
(ll@ A
idllA C
)llC D
)llD E
returnmm 
;mm 3
'm_FontAssetDefinitionRefreshQueueLookupoo 3
.oo3 4
Addoo4 7
(oo7 8
idoo8 :
)oo: ;
;oo; <-
!m_FontAssetDefinitionRefreshQueuepp -
.pp- .
Addpp. 1
(pp1 2
	fontAssetpp2 ;
)pp; <
;pp< =
}qq 	
voidtt 
	DoUpdatestt 
(tt 
)tt 
{uu 	
intww 
objUpdateCountww 
=ww  
m_ObjectUpdateQueueww! 4
.ww4 5
Countww5 :
;ww: ;
foryy 
(yy 
intyy 
iyy 
=yy 
$numyy 
;yy 
iyy 
<yy 
objUpdateCountyy  .
;yy. /
iyy0 1
++yy1 3
)yy3 4
{zz 
Object{{ 
obj{{ 
={{ 
m_ObjectUpdateQueue{{ 0
[{{0 1
i{{1 2
]{{2 3
;{{3 4
if|| 
(|| 
obj|| 
!=|| 
null|| 
)||  
{}} 
EditorUtility~~ !
.~~! "
SetDirty~~" *
(~~* +
obj~~+ .
)~~. /
;~~/ 0
} 
}
ÄÄ 
if
ÇÇ 
(
ÇÇ 
objUpdateCount
ÇÇ 
>
ÇÇ  
$num
ÇÇ! "
)
ÇÇ" #
{
ÉÉ !
m_ObjectUpdateQueue
áá #
.
áá# $
Clear
áá$ )
(
áá) *
)
áá* +
;
áá+ ,'
m_ObjectUpdateQueueLookup
àà )
.
àà) *
Clear
àà* /
(
àà/ 0
)
àà0 1
;
àà1 2
}
ââ 
int
åå 
objReImportCount
åå  
=
åå! "#
m_ObjectReImportQueue
åå# 8
.
åå8 9
Count
åå9 >
;
åå> ?
for
éé 
(
éé 
int
éé 
i
éé 
=
éé 
$num
éé 
;
éé 
i
éé 
<
éé 
objReImportCount
éé  0
;
éé0 1
i
éé2 3
++
éé3 5
)
éé5 6
{
èè 
Object
êê 
obj
êê 
=
êê #
m_ObjectReImportQueue
êê 2
[
êê2 3
i
êê3 4
]
êê4 5
;
êê5 6
if
ëë 
(
ëë 
obj
ëë 
!=
ëë 
null
ëë 
)
ëë  
{
íí 
AssetDatabase
îî !
.
îî! "
ImportAsset
îî" -
(
îî- .
AssetDatabase
îî. ;
.
îî; <
GetAssetPath
îî< H
(
îîH I
obj
îîI L
)
îîL M
)
îîM N
;
îîN O
}
ïï 
}
ññ 
if
òò 
(
òò 
objReImportCount
òò  
>
òò! "
$num
òò# $
)
òò$ %
{
ôô #
m_ObjectReImportQueue
öö %
.
öö% &
Clear
öö& +
(
öö+ ,
)
öö, -
;
öö- .)
m_ObjectReImportQueueLookup
õõ +
.
õõ+ ,
Clear
õõ, 1
(
õõ1 2
)
õõ2 3
;
õõ3 4
}
úú 
for
üü 
(
üü 
int
üü 
i
üü 
=
üü 
$num
üü 
;
üü 
i
üü 
<
üü /
!m_FontAssetDefinitionRefreshQueue
üü  A
.
üüA B
Count
üüB G
;
üüG H
i
üüI J
++
üüJ L
)
üüL M
{
†† 
TMP_FontAsset
°° 
	fontAsset
°° '
=
°°( )/
!m_FontAssetDefinitionRefreshQueue
°°* K
[
°°K L
i
°°L M
]
°°M N
;
°°N O
if
££ 
(
££ 
	fontAsset
££ 
!=
££  
null
££! %
)
££% &
{
§§ 
	fontAsset
•• 
.
•• %
ReadFontAssetDefinition
•• 5
(
••5 6
)
••6 7
;
••7 8 
TMPro_EventManager
¶¶ &
.
¶¶& '&
ON_FONT_PROPERTY_CHANGED
¶¶' ?
(
¶¶? @
true
¶¶@ D
,
¶¶D E
	fontAsset
¶¶F O
)
¶¶O P
;
¶¶P Q
}
ßß 
}
®® 
if
™™ 
(
™™ /
!m_FontAssetDefinitionRefreshQueue
™™ 1
.
™™1 2
Count
™™2 7
>
™™8 9
$num
™™: ;
)
™™; <
{
´´ /
!m_FontAssetDefinitionRefreshQueue
¨¨ 1
.
¨¨1 2
Clear
¨¨2 7
(
¨¨7 8
)
¨¨8 9
;
¨¨9 :5
'm_FontAssetDefinitionRefreshQueueLookup
≠≠ 7
.
≠≠7 8
Clear
≠≠8 =
(
≠≠= >
)
≠≠> ?
;
≠≠? @
}
ÆÆ 
}
ØØ 	
}
±± 
}≤≤ –
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_TextElement.cs
	namespace 	
TMPro
 
{ 
public 

enum 
TextElementType 
:  !
byte" &
{ 
	Character		 
=		 
$num		 
,		 
Sprite

 
=

 
$num

 
,

 
} 
[ 
Serializable 
] 
public 

class 
TMP_TextElement  
{ 
public 
TextElementType 
elementType *
{+ ,
get- 0
{1 2
return3 9
m_ElementType: G
;G H
}I J
}K L
public 
uint 
unicode 
{ 
get !
{" #
return$ *
	m_Unicode+ 4
;4 5
}6 7
set8 ;
{< =
	m_Unicode> G
=H I
valueJ O
;O P
}Q R
}S T
public   
	TMP_Asset   
	textAsset   "
{  # $
get  % (
{  ) *
return  + 1
m_TextAsset  2 =
;  = >
}  ? @
set  A D
{  E F
m_TextAsset  G R
=  S T
value  U Z
;  Z [
}  \ ]
}  ^ _
public%% 
Glyph%% 
glyph%% 
{%% 
get%%  
{%%! "
return%%# )
m_Glyph%%* 1
;%%1 2
}%%3 4
set%%5 8
{%%9 :
m_Glyph%%; B
=%%C D
value%%E J
;%%J K
}%%L M
}%%N O
public** 
uint** 

glyphIndex** 
{**  
get**! $
{**% &
return**' -
m_GlyphIndex**. :
;**: ;
}**< =
set**> A
{**B C
m_GlyphIndex**D P
=**Q R
value**S X
;**X Y
}**Z [
}**\ ]
public// 
float// 
scale// 
{// 
get//  
{//! "
return//# )
m_Scale//* 1
;//1 2
}//3 4
set//5 8
{//9 :
m_Scale//; B
=//C D
value//E J
;//J K
}//L M
}//N O
[55 	
SerializeField55	 
]55 
	protected66 
TextElementType66 !
m_ElementType66" /
;66/ 0
[88 	
SerializeField88	 
]88 
internal99 
uint99 
	m_Unicode99 
;99  
internal;; 
	TMP_Asset;; 
m_TextAsset;; &
;;;& '
internal== 
Glyph== 
m_Glyph== 
;== 
[?? 	
SerializeField??	 
]?? 
internal@@ 
uint@@ 
m_GlyphIndex@@ "
;@@" #
[BB 	
SerializeFieldBB	 
]BB 
internalCC 
floatCC 
m_ScaleCC 
;CC 
}DD 
}EE ®s
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_CoroutineTween.cs
	namespace 	
TMPro
 
{ 
internal 
	interface 
ITweenValue "
{ 
void 

TweenValue 
( 
float 
floatPercentage -
)- .
;. /
bool 
ignoreTimeScale 
{ 
get "
;" #
}$ %
float 
duration 
{ 
get 
; 
} 
bool 
ValidTarget 
( 
) 
; 
} 
internal 
struct 

ColorTween 
:  
ITweenValue! ,
{ 
public 
enum 
ColorTweenMode "
{ 	
All 
, 
RGB 
, 
Alpha 
} 	
public   
class   
ColorTweenCallback   '
:  ( )

UnityEvent  * 4
<  4 5
Color  5 :
>  : ;
{  < =
}  > ?
private"" 
ColorTweenCallback"" "
m_Target""# +
;""+ ,
private## 
Color## 
m_StartColor## "
;##" #
private$$ 
Color$$ 
m_TargetColor$$ #
;$$# $
private%% 
ColorTweenMode%% 
m_TweenMode%% *
;%%* +
private'' 
float'' 

m_Duration''  
;''  !
private(( 
bool(( 
m_IgnoreTimeScale(( &
;((& '
public** 
Color** 

startColor** 
{++ 	
get,, 
{,, 
return,, 
m_StartColor,, %
;,,% &
},,' (
set-- 
{-- 
m_StartColor-- 
=--  
value--! &
;--& '
}--( )
}.. 	
public00 
Color00 
targetColor00  
{11 	
get22 
{22 
return22 
m_TargetColor22 &
;22& '
}22( )
set33 
{33 
m_TargetColor33 
=33  !
value33" '
;33' (
}33) *
}44 	
public66 
ColorTweenMode66 
	tweenMode66 '
{77 	
get88 
{88 
return88 
m_TweenMode88 $
;88$ %
}88& '
set99 
{99 
m_TweenMode99 
=99 
value99  %
;99% &
}99' (
}:: 	
public<< 
float<< 
duration<< 
{== 	
get>> 
{>> 
return>> 

m_Duration>> #
;>># $
}>>% &
set?? 
{?? 

m_Duration?? 
=?? 
value?? $
;??$ %
}??& '
}@@ 	
publicBB 
boolBB 
ignoreTimeScaleBB #
{CC 	
getDD 
{DD 
returnDD 
m_IgnoreTimeScaleDD *
;DD* +
}DD, -
setEE 
{EE 
m_IgnoreTimeScaleEE #
=EE$ %
valueEE& +
;EE+ ,
}EE- .
}FF 	
publicHH 
voidHH 

TweenValueHH 
(HH 
floatHH $
floatPercentageHH% 4
)HH4 5
{II 	
ifJJ 
(JJ 
!JJ 
ValidTargetJJ 
(JJ 
)JJ 
)JJ 
returnKK 
;KK 
varMM 
newColorMM 
=MM 
ColorMM  
.MM  !
LerpMM! %
(MM% &
m_StartColorMM& 2
,MM2 3
m_TargetColorMM4 A
,MMA B
floatPercentageMMC R
)MMR S
;MMS T
ifOO 
(OO 
m_TweenModeOO 
==OO 
ColorTweenModeOO -
.OO- .
AlphaOO. 3
)OO3 4
{PP 
newColorQQ 
.QQ 
rQQ 
=QQ 
m_StartColorQQ )
.QQ) *
rQQ* +
;QQ+ ,
newColorRR 
.RR 
gRR 
=RR 
m_StartColorRR )
.RR) *
gRR* +
;RR+ ,
newColorSS 
.SS 
bSS 
=SS 
m_StartColorSS )
.SS) *
bSS* +
;SS+ ,
}TT 
elseUU 
ifUU 
(UU 
m_TweenModeUU  
==UU! #
ColorTweenModeUU$ 2
.UU2 3
RGBUU3 6
)UU6 7
{VV 
newColorWW 
.WW 
aWW 
=WW 
m_StartColorWW )
.WW) *
aWW* +
;WW+ ,
}XX 
m_TargetYY 
.YY 
InvokeYY 
(YY 
newColorYY $
)YY$ %
;YY% &
}ZZ 	
public\\ 
void\\  
AddOnChangedCallback\\ (
(\\( )
UnityAction\\) 4
<\\4 5
Color\\5 :
>\\: ;
callback\\< D
)\\D E
{]] 	
if^^ 
(^^ 
m_Target^^ 
==^^ 
null^^  
)^^  !
m_Target__ 
=__ 
new__ 
ColorTweenCallback__ 1
(__1 2
)__2 3
;__3 4
m_Targetaa 
.aa 
AddListeneraa  
(aa  !
callbackaa! )
)aa) *
;aa* +
}bb 	
publicdd 
booldd 
GetIgnoreTimescaledd &
(dd& '
)dd' (
{ee 	
returnff 
m_IgnoreTimeScaleff $
;ff$ %
}gg 	
publicii 
floatii 
GetDurationii  
(ii  !
)ii! "
{jj 	
returnkk 

m_Durationkk 
;kk 
}ll 	
publicnn 
boolnn 
ValidTargetnn 
(nn  
)nn  !
{oo 	
returnpp 
m_Targetpp 
!=pp 
nullpp #
;pp# $
}qq 	
}rr 
internalww 
structww 

FloatTweenww 
:ww  
ITweenValueww! ,
{xx 
publicyy 
classyy 
FloatTweenCallbackyy '
:yy( )

UnityEventyy* 4
<yy4 5
floatyy5 :
>yy: ;
{yy< =
}yy> ?
private{{ 
FloatTweenCallback{{ "
m_Target{{# +
;{{+ ,
private|| 
float|| 
m_StartValue|| "
;||" #
private}} 
float}} 
m_TargetValue}} #
;}}# $
private 
float 

m_Duration  
;  !
private
ÄÄ 
bool
ÄÄ 
m_IgnoreTimeScale
ÄÄ &
;
ÄÄ& '
public
ÇÇ 
float
ÇÇ 

startValue
ÇÇ 
{
ÉÉ 	
get
ÑÑ 
{
ÑÑ 
return
ÑÑ 
m_StartValue
ÑÑ %
;
ÑÑ% &
}
ÑÑ' (
set
ÖÖ 
{
ÖÖ 
m_StartValue
ÖÖ 
=
ÖÖ  
value
ÖÖ! &
;
ÖÖ& '
}
ÖÖ( )
}
ÜÜ 	
public
àà 
float
àà 
targetValue
àà  
{
ââ 	
get
ää 
{
ää 
return
ää 
m_TargetValue
ää &
;
ää& '
}
ää( )
set
ãã 
{
ãã 
m_TargetValue
ãã 
=
ãã  !
value
ãã" '
;
ãã' (
}
ãã) *
}
åå 	
public
éé 
float
éé 
duration
éé 
{
èè 	
get
êê 
{
êê 
return
êê 

m_Duration
êê #
;
êê# $
}
êê% &
set
ëë 
{
ëë 

m_Duration
ëë 
=
ëë 
value
ëë $
;
ëë$ %
}
ëë& '
}
íí 	
public
îî 
bool
îî 
ignoreTimeScale
îî #
{
ïï 	
get
ññ 
{
ññ 
return
ññ 
m_IgnoreTimeScale
ññ *
;
ññ* +
}
ññ, -
set
óó 
{
óó 
m_IgnoreTimeScale
óó #
=
óó$ %
value
óó& +
;
óó+ ,
}
óó- .
}
òò 	
public
öö 
void
öö 

TweenValue
öö 
(
öö 
float
öö $
floatPercentage
öö% 4
)
öö4 5
{
õõ 	
if
úú 
(
úú 
!
úú 
ValidTarget
úú 
(
úú 
)
úú 
)
úú 
return
ùù 
;
ùù 
var
üü 
newValue
üü 
=
üü 
Mathf
üü  
.
üü  !
Lerp
üü! %
(
üü% &
m_StartValue
üü& 2
,
üü2 3
m_TargetValue
üü4 A
,
üüA B
floatPercentage
üüC R
)
üüR S
;
üüS T
m_Target
†† 
.
†† 
Invoke
†† 
(
†† 
newValue
†† $
)
††$ %
;
††% &
}
°° 	
public
££ 
void
££ "
AddOnChangedCallback
££ (
(
££( )
UnityAction
££) 4
<
££4 5
float
££5 :
>
££: ;
callback
££< D
)
££D E
{
§§ 	
if
•• 
(
•• 
m_Target
•• 
==
•• 
null
••  
)
••  !
m_Target
¶¶ 
=
¶¶ 
new
¶¶  
FloatTweenCallback
¶¶ 1
(
¶¶1 2
)
¶¶2 3
;
¶¶3 4
m_Target
®® 
.
®® 
AddListener
®®  
(
®®  !
callback
®®! )
)
®®) *
;
®®* +
}
©© 	
public
´´ 
bool
´´  
GetIgnoreTimescale
´´ &
(
´´& '
)
´´' (
{
¨¨ 	
return
≠≠ 
m_IgnoreTimeScale
≠≠ $
;
≠≠$ %
}
ÆÆ 	
public
∞∞ 
float
∞∞ 
GetDuration
∞∞  
(
∞∞  !
)
∞∞! "
{
±± 	
return
≤≤ 

m_Duration
≤≤ 
;
≤≤ 
}
≥≥ 	
public
µµ 
bool
µµ 
ValidTarget
µµ 
(
µµ  
)
µµ  !
{
∂∂ 	
return
∑∑ 
m_Target
∑∑ 
!=
∑∑ 
null
∑∑ #
;
∑∑# $
}
∏∏ 	
}
ππ 
internal
ææ 
class
ææ 
TweenRunner
ææ 
<
ææ 
T
ææ  
>
ææ  !
where
ææ" '
T
ææ( )
:
ææ* +
struct
ææ, 2
,
ææ2 3
ITweenValue
ææ4 ?
{
øø 
	protected
¿¿ 
MonoBehaviour
¿¿ "
m_CoroutineContainer
¿¿  4
;
¿¿4 5
	protected
¡¡ 
IEnumerator
¡¡ 
m_Tween
¡¡ %
;
¡¡% &
private
ƒƒ 
static
ƒƒ 
IEnumerator
ƒƒ "
Start
ƒƒ# (
(
ƒƒ( )
T
ƒƒ) *
	tweenInfo
ƒƒ+ 4
)
ƒƒ4 5
{
≈≈ 	
if
∆∆ 
(
∆∆ 
!
∆∆ 
	tweenInfo
∆∆ 
.
∆∆ 
ValidTarget
∆∆ &
(
∆∆& '
)
∆∆' (
)
∆∆( )
yield
«« 
break
«« 
;
«« 
var
…… 
elapsedTime
…… 
=
…… 
$num
…… "
;
……" #
while
   
(
   
elapsedTime
   
<
    
	tweenInfo
  ! *
.
  * +
duration
  + 3
)
  3 4
{
ÀÀ 
elapsedTime
ÃÃ 
+=
ÃÃ 
	tweenInfo
ÃÃ (
.
ÃÃ( )
ignoreTimeScale
ÃÃ) 8
?
ÃÃ9 :
Time
ÃÃ; ?
.
ÃÃ? @
unscaledDeltaTime
ÃÃ@ Q
:
ÃÃR S
Time
ÃÃT X
.
ÃÃX Y
	deltaTime
ÃÃY b
;
ÃÃb c
var
ÕÕ 

percentage
ÕÕ 
=
ÕÕ  
Mathf
ÕÕ! &
.
ÕÕ& '
Clamp01
ÕÕ' .
(
ÕÕ. /
elapsedTime
ÕÕ/ :
/
ÕÕ; <
	tweenInfo
ÕÕ= F
.
ÕÕF G
duration
ÕÕG O
)
ÕÕO P
;
ÕÕP Q
	tweenInfo
ŒŒ 
.
ŒŒ 

TweenValue
ŒŒ $
(
ŒŒ$ %

percentage
ŒŒ% /
)
ŒŒ/ 0
;
ŒŒ0 1
yield
œœ 
return
œœ 
null
œœ !
;
œœ! "
}
–– 
	tweenInfo
—— 
.
—— 

TweenValue
——  
(
——  !
$num
——! %
)
——% &
;
——& '
}
““ 	
public
‘‘ 
void
‘‘ 
Init
‘‘ 
(
‘‘ 
MonoBehaviour
‘‘ & 
coroutineContainer
‘‘' 9
)
‘‘9 :
{
’’ 	"
m_CoroutineContainer
÷÷  
=
÷÷! " 
coroutineContainer
÷÷# 5
;
÷÷5 6
}
◊◊ 	
public
ŸŸ 
void
ŸŸ 

StartTween
ŸŸ 
(
ŸŸ 
T
ŸŸ  
info
ŸŸ! %
)
ŸŸ% &
{
⁄⁄ 	
if
€€ 
(
€€ "
m_CoroutineContainer
€€ $
==
€€% '
null
€€( ,
)
€€, -
{
‹‹ 
Debug
›› 
.
›› 

LogWarning
››  
(
››  !
$str
››! e
)
››e f
;
››f g
return
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 
	StopTween
·· 
(
·· 
)
·· 
;
·· 
if
„„ 
(
„„ 
!
„„ "
m_CoroutineContainer
„„ %
.
„„% &

gameObject
„„& 0
.
„„0 1
activeInHierarchy
„„1 B
)
„„B C
{
‰‰ 
info
ÂÂ 
.
ÂÂ 

TweenValue
ÂÂ 
(
ÂÂ  
$num
ÂÂ  $
)
ÂÂ$ %
;
ÂÂ% &
return
ÊÊ 
;
ÊÊ 
}
ÁÁ 
m_Tween
ÈÈ 
=
ÈÈ 
Start
ÈÈ 
(
ÈÈ 
info
ÈÈ  
)
ÈÈ  !
;
ÈÈ! ""
m_CoroutineContainer
ÍÍ  
.
ÍÍ  !
StartCoroutine
ÍÍ! /
(
ÍÍ/ 0
m_Tween
ÍÍ0 7
)
ÍÍ7 8
;
ÍÍ8 9
}
ÎÎ 	
public
ÌÌ 
void
ÌÌ 
	StopTween
ÌÌ 
(
ÌÌ 
)
ÌÌ 
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ 
m_Tween
ÔÔ 
!=
ÔÔ 
null
ÔÔ 
)
ÔÔ  
{
 "
m_CoroutineContainer
ÒÒ $
.
ÒÒ$ %
StopCoroutine
ÒÒ% 2
(
ÒÒ2 3
m_Tween
ÒÒ3 :
)
ÒÒ: ;
;
ÒÒ; <
m_Tween
ÚÚ 
=
ÚÚ 
null
ÚÚ 
;
ÚÚ 
}
ÛÛ 
}
ÙÙ 	
}
ıı 
}ˆˆ ›§
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_MeshInfo.cs
	namespace 	
TMPro
 
{		 
public

 

enum

 
VertexSortingOrder

 "
{

# $
Normal

% +
,

+ ,
Reverse

- 4
}

5 6
;

6 7
public 

struct 
TMP_MeshInfo 
{ 
private 
static 
readonly 
Color32  '
s_DefaultColor( 6
=7 8
new9 <
Color32= D
(D E
byteE I
.I J
MaxValueJ R
,R S
byteT X
.X Y
MaxValueY a
,a b
bytec g
.g h
MaxValueh p
,p q
byter v
.v w
MaxValuew 
)	 Ä
;
Ä Å
private 
static 
readonly 
Vector3  '
s_DefaultNormal( 7
=8 9
new: =
Vector3> E
(E F
$numF J
,J K
$numL P
,P Q
-R S
$numS U
)U V
;V W
private 
static 
readonly 
Vector4  '
s_DefaultTangent( 8
=9 :
new; >
Vector4? F
(F G
-G H
$numH J
,J K
$numL P
,P Q
$numR V
,V W
$numX Z
)Z [
;[ \
private 
static 
readonly 
Bounds  &
s_DefaultBounds' 6
=7 8
new9 <
Bounds= C
(C D
)D E
;E F
public 
Mesh 
mesh 
; 
public 
int 
vertexCount 
; 
public 
Vector3 
[ 
] 
vertices !
;! "
public 
Vector3 
[ 
] 
normals  
;  !
public 
Vector4 
[ 
] 
tangents !
;! "
public 
Vector2 
[ 
] 
uvs0 
; 
public 
Vector2 
[ 
] 
uvs2 
; 
public   
Color32   
[   
]   
colors32   !
;  ! "
public!! 
int!! 
[!! 
]!! 
	triangles!! 
;!! 
public## 
Material## 
material##  
;##  !
public++ 
TMP_MeshInfo++ 
(++ 
Mesh++  
mesh++! %
,++% &
int++' *
size+++ /
)++/ 0
{,, 	
if11 
(11 
mesh11 
==11 
null11 
)11 
mesh22 
=22 
new22 
Mesh22 
(22  
)22  !
;22! "
else33 
mesh44 
.44 
Clear44 
(44 
)44 
;44 
this66 
.66 
mesh66 
=66 
mesh66 
;66 
size99 
=99 
Mathf99 
.99 
Min99 
(99 
size99 !
,99! "
$num99# (
)99( )
;99) *
int;; 
sizeX4;; 
=;; 
size;; 
*;; 
$num;;  !
;;;! "
int<< 
sizeX6<< 
=<< 
size<< 
*<< 
$num<<  !
;<<! "
this>> 
.>> 
vertexCount>> 
=>> 
$num>>  
;>>  !
this@@ 
.@@ 
vertices@@ 
=@@ 
new@@ 
Vector3@@  '
[@@' (
sizeX4@@( .
]@@. /
;@@/ 0
thisAA 
.AA 
uvs0AA 
=AA 
newAA 
Vector2AA #
[AA# $
sizeX4AA$ *
]AA* +
;AA+ ,
thisBB 
.BB 
uvs2BB 
=BB 
newBB 
Vector2BB #
[BB# $
sizeX4BB$ *
]BB* +
;BB+ ,
thisDD 
.DD 
colors32DD 
=DD 
newDD 
Color32DD  '
[DD' (
sizeX4DD( .
]DD. /
;DD/ 0
thisFF 
.FF 
normalsFF 
=FF 
newFF 
Vector3FF &
[FF& '
sizeX4FF' -
]FF- .
;FF. /
thisGG 
.GG 
tangentsGG 
=GG 
newGG 
Vector4GG  '
[GG' (
sizeX4GG( .
]GG. /
;GG/ 0
thisII 
.II 
	trianglesII 
=II 
newII  
intII! $
[II$ %
sizeX6II% +
]II+ ,
;II, -
intKK 
index_X6KK 
=KK 
$numKK 
;KK 
intLL 
index_X4LL 
=LL 
$numLL 
;LL 
whileMM 
(MM 
index_X4MM 
/MM 
$numMM 
<MM  !
sizeMM" &
)MM& '
{NN 
forOO 
(OO 
intOO 
iOO 
=OO 
$numOO 
;OO 
iOO  !
<OO" #
$numOO$ %
;OO% &
iOO' (
++OO( *
)OO* +
{PP 
thisQQ 
.QQ 
verticesQQ !
[QQ! "
index_X4QQ" *
+QQ+ ,
iQQ- .
]QQ. /
=QQ0 1
Vector3QQ2 9
.QQ9 :
zeroQQ: >
;QQ> ?
thisRR 
.RR 
uvs0RR 
[RR 
index_X4RR &
+RR' (
iRR) *
]RR* +
=RR, -
Vector2RR. 5
.RR5 6
zeroRR6 :
;RR: ;
thisSS 
.SS 
uvs2SS 
[SS 
index_X4SS &
+SS' (
iSS) *
]SS* +
=SS, -
Vector2SS. 5
.SS5 6
zeroSS6 :
;SS: ;
thisUU 
.UU 
colors32UU !
[UU! "
index_X4UU" *
+UU+ ,
iUU- .
]UU. /
=UU0 1
s_DefaultColorUU2 @
;UU@ A
thisVV 
.VV 
normalsVV  
[VV  !
index_X4VV! )
+VV* +
iVV, -
]VV- .
=VV/ 0
s_DefaultNormalVV1 @
;VV@ A
thisWW 
.WW 
tangentsWW !
[WW! "
index_X4WW" *
+WW+ ,
iWW- .
]WW. /
=WW0 1
s_DefaultTangentWW2 B
;WWB C
}XX 
thisZZ 
.ZZ 
	trianglesZZ 
[ZZ 
index_X6ZZ '
+ZZ( )
$numZZ* +
]ZZ+ ,
=ZZ- .
index_X4ZZ/ 7
+ZZ8 9
$numZZ: ;
;ZZ; <
this[[ 
.[[ 
	triangles[[ 
[[[ 
index_X6[[ '
+[[( )
$num[[* +
][[+ ,
=[[- .
index_X4[[/ 7
+[[8 9
$num[[: ;
;[[; <
this\\ 
.\\ 
	triangles\\ 
[\\ 
index_X6\\ '
+\\( )
$num\\* +
]\\+ ,
=\\- .
index_X4\\/ 7
+\\8 9
$num\\: ;
;\\; <
this]] 
.]] 
	triangles]] 
[]] 
index_X6]] '
+]]( )
$num]]* +
]]]+ ,
=]]- .
index_X4]]/ 7
+]]8 9
$num]]: ;
;]]; <
this^^ 
.^^ 
	triangles^^ 
[^^ 
index_X6^^ '
+^^( )
$num^^* +
]^^+ ,
=^^- .
index_X4^^/ 7
+^^8 9
$num^^: ;
;^^; <
this__ 
.__ 
	triangles__ 
[__ 
index_X6__ '
+__( )
$num__* +
]__+ ,
=__- .
index_X4__/ 7
+__8 9
$num__: ;
;__; <
index_X4aa 
+=aa 
$numaa 
;aa 
index_X6bb 
+=bb 
$numbb 
;bb 
}cc 
thisff 
.ff 
meshff 
.ff 
verticesff 
=ff  
thisff! %
.ff% &
verticesff& .
;ff. /
thisgg 
.gg 
meshgg 
.gg 
normalsgg 
=gg 
thisgg  $
.gg$ %
normalsgg% ,
;gg, -
thishh 
.hh 
meshhh 
.hh 
tangentshh 
=hh  
thishh! %
.hh% &
tangentshh& .
;hh. /
thisii 
.ii 
meshii 
.ii 
	trianglesii 
=ii  !
thisii" &
.ii& '
	trianglesii' 0
;ii0 1
thisjj 
.jj 
meshjj 
.jj 
boundsjj 
=jj 
s_DefaultBoundsjj .
;jj. /
thiskk 
.kk 
materialkk 
=kk 
nullkk  
;kk  !
}ll 	
publicuu 
TMP_MeshInfouu 
(uu 
Meshuu  
meshuu! %
,uu% &
intuu' *
sizeuu+ /
,uu/ 0
booluu1 5
isVolumetricuu6 B
)uuB C
{vv 	
if{{ 
({{ 
mesh{{ 
=={{ 
null{{ 
){{ 
mesh|| 
=|| 
new|| 
Mesh|| 
(||  
)||  !
;||! "
else}} 
mesh~~ 
.~~ 
Clear~~ 
(~~ 
)~~ 
;~~ 
this
ÄÄ 
.
ÄÄ 
mesh
ÄÄ 
=
ÄÄ 
mesh
ÄÄ 
;
ÄÄ 
int
ÇÇ 
s0
ÇÇ 
=
ÇÇ 
!
ÇÇ 
isVolumetric
ÇÇ "
?
ÇÇ# $
$num
ÇÇ% &
:
ÇÇ' (
$num
ÇÇ) *
;
ÇÇ* +
int
ÉÉ 
s1
ÉÉ 
=
ÉÉ 
!
ÉÉ 
isVolumetric
ÉÉ "
?
ÉÉ# $
$num
ÉÉ% &
:
ÉÉ' (
$num
ÉÉ) +
;
ÉÉ+ ,
size
ÜÜ 
=
ÜÜ 
Mathf
ÜÜ 
.
ÜÜ 
Min
ÜÜ 
(
ÜÜ 
size
ÜÜ !
,
ÜÜ! "
$num
ÜÜ# (
/
ÜÜ) *
s0
ÜÜ+ -
)
ÜÜ- .
;
ÜÜ. /
int
àà 
	size_x_s0
àà 
=
àà 
size
àà  
*
àà! "
s0
àà# %
;
àà% &
int
ââ 
	size_x_s1
ââ 
=
ââ 
size
ââ  
*
ââ! "
s1
ââ# %
;
ââ% &
this
ãã 
.
ãã 
vertexCount
ãã 
=
ãã 
$num
ãã  
;
ãã  !
this
çç 
.
çç 
vertices
çç 
=
çç 
new
çç 
Vector3
çç  '
[
çç' (
	size_x_s0
çç( 1
]
çç1 2
;
çç2 3
this
éé 
.
éé 
uvs0
éé 
=
éé 
new
éé 
Vector2
éé #
[
éé# $
	size_x_s0
éé$ -
]
éé- .
;
éé. /
this
èè 
.
èè 
uvs2
èè 
=
èè 
new
èè 
Vector2
èè #
[
èè# $
	size_x_s0
èè$ -
]
èè- .
;
èè. /
this
ëë 
.
ëë 
colors32
ëë 
=
ëë 
new
ëë 
Color32
ëë  '
[
ëë' (
	size_x_s0
ëë( 1
]
ëë1 2
;
ëë2 3
this
ìì 
.
ìì 
normals
ìì 
=
ìì 
new
ìì 
Vector3
ìì &
[
ìì& '
	size_x_s0
ìì' 0
]
ìì0 1
;
ìì1 2
this
îî 
.
îî 
tangents
îî 
=
îî 
new
îî 
Vector4
îî  '
[
îî' (
	size_x_s0
îî( 1
]
îî1 2
;
îî2 3
this
ññ 
.
ññ 
	triangles
ññ 
=
ññ 
new
ññ  
int
ññ! $
[
ññ$ %
	size_x_s1
ññ% .
]
ññ. /
;
ññ/ 0
int
òò 

index_x_s0
òò 
=
òò 
$num
òò 
;
òò 
int
ôô 

index_x_s1
ôô 
=
ôô 
$num
ôô 
;
ôô 
while
öö 
(
öö 

index_x_s0
öö 
/
öö 
s0
öö  "
<
öö# $
size
öö% )
)
öö) *
{
õõ 
for
úú 
(
úú 
int
úú 
i
úú 
=
úú 
$num
úú 
;
úú 
i
úú  !
<
úú" #
s0
úú$ &
;
úú& '
i
úú( )
++
úú) +
)
úú+ ,
{
ùù 
this
ûû 
.
ûû 
vertices
ûû !
[
ûû! "

index_x_s0
ûû" ,
+
ûû- .
i
ûû/ 0
]
ûû0 1
=
ûû2 3
Vector3
ûû4 ;
.
ûû; <
zero
ûû< @
;
ûû@ A
this
üü 
.
üü 
uvs0
üü 
[
üü 

index_x_s0
üü (
+
üü) *
i
üü+ ,
]
üü, -
=
üü. /
Vector2
üü0 7
.
üü7 8
zero
üü8 <
;
üü< =
this
†† 
.
†† 
uvs2
†† 
[
†† 

index_x_s0
†† (
+
††) *
i
††+ ,
]
††, -
=
††. /
Vector2
††0 7
.
††7 8
zero
††8 <
;
††< =
this
¢¢ 
.
¢¢ 
colors32
¢¢ !
[
¢¢! "

index_x_s0
¢¢" ,
+
¢¢- .
i
¢¢/ 0
]
¢¢0 1
=
¢¢2 3
s_DefaultColor
¢¢4 B
;
¢¢B C
this
££ 
.
££ 
normals
££  
[
££  !

index_x_s0
££! +
+
££, -
i
££. /
]
££/ 0
=
££1 2
s_DefaultNormal
££3 B
;
££B C
this
§§ 
.
§§ 
tangents
§§ !
[
§§! "

index_x_s0
§§" ,
+
§§- .
i
§§/ 0
]
§§0 1
=
§§2 3
s_DefaultTangent
§§4 D
;
§§D E
}
•• 
this
®® 
.
®® 
	triangles
®® 
[
®® 

index_x_s1
®® )
+
®®* +
$num
®®, -
]
®®- .
=
®®/ 0

index_x_s0
®®1 ;
+
®®< =
$num
®®> ?
;
®®? @
this
©© 
.
©© 
	triangles
©© 
[
©© 

index_x_s1
©© )
+
©©* +
$num
©©, -
]
©©- .
=
©©/ 0

index_x_s0
©©1 ;
+
©©< =
$num
©©> ?
;
©©? @
this
™™ 
.
™™ 
	triangles
™™ 
[
™™ 

index_x_s1
™™ )
+
™™* +
$num
™™, -
]
™™- .
=
™™/ 0

index_x_s0
™™1 ;
+
™™< =
$num
™™> ?
;
™™? @
this
´´ 
.
´´ 
	triangles
´´ 
[
´´ 

index_x_s1
´´ )
+
´´* +
$num
´´, -
]
´´- .
=
´´/ 0

index_x_s0
´´1 ;
+
´´< =
$num
´´> ?
;
´´? @
this
¨¨ 
.
¨¨ 
	triangles
¨¨ 
[
¨¨ 

index_x_s1
¨¨ )
+
¨¨* +
$num
¨¨, -
]
¨¨- .
=
¨¨/ 0

index_x_s0
¨¨1 ;
+
¨¨< =
$num
¨¨> ?
;
¨¨? @
this
≠≠ 
.
≠≠ 
	triangles
≠≠ 
[
≠≠ 

index_x_s1
≠≠ )
+
≠≠* +
$num
≠≠, -
]
≠≠- .
=
≠≠/ 0

index_x_s0
≠≠1 ;
+
≠≠< =
$num
≠≠> ?
;
≠≠? @
if
ØØ 
(
ØØ 
isVolumetric
ØØ  
)
ØØ  !
{
∞∞ 
this
≤≤ 
.
≤≤ 
	triangles
≤≤ "
[
≤≤" #

index_x_s1
≤≤# -
+
≤≤. /
$num
≤≤0 1
]
≤≤1 2
=
≤≤3 4

index_x_s0
≤≤5 ?
+
≤≤@ A
$num
≤≤B C
;
≤≤C D
this
≥≥ 
.
≥≥ 
	triangles
≥≥ "
[
≥≥" #

index_x_s1
≥≥# -
+
≥≥. /
$num
≥≥0 1
]
≥≥1 2
=
≥≥3 4

index_x_s0
≥≥5 ?
+
≥≥@ A
$num
≥≥B C
;
≥≥C D
this
¥¥ 
.
¥¥ 
	triangles
¥¥ "
[
¥¥" #

index_x_s1
¥¥# -
+
¥¥. /
$num
¥¥0 1
]
¥¥1 2
=
¥¥3 4

index_x_s0
¥¥5 ?
+
¥¥@ A
$num
¥¥B C
;
¥¥C D
this
µµ 
.
µµ 
	triangles
µµ "
[
µµ" #

index_x_s1
µµ# -
+
µµ. /
$num
µµ0 1
]
µµ1 2
=
µµ3 4

index_x_s0
µµ5 ?
+
µµ@ A
$num
µµB C
;
µµC D
this
∂∂ 
.
∂∂ 
	triangles
∂∂ "
[
∂∂" #

index_x_s1
∂∂# -
+
∂∂. /
$num
∂∂0 2
]
∂∂2 3
=
∂∂4 5

index_x_s0
∂∂6 @
+
∂∂A B
$num
∂∂C D
;
∂∂D E
this
∑∑ 
.
∑∑ 
	triangles
∑∑ "
[
∑∑" #

index_x_s1
∑∑# -
+
∑∑. /
$num
∑∑0 2
]
∑∑2 3
=
∑∑4 5

index_x_s0
∑∑6 @
+
∑∑A B
$num
∑∑C D
;
∑∑D E
this
∫∫ 
.
∫∫ 
	triangles
∫∫ "
[
∫∫" #

index_x_s1
∫∫# -
+
∫∫. /
$num
∫∫0 2
]
∫∫2 3
=
∫∫4 5

index_x_s0
∫∫6 @
+
∫∫A B
$num
∫∫C D
;
∫∫D E
this
ªª 
.
ªª 
	triangles
ªª "
[
ªª" #

index_x_s1
ªª# -
+
ªª. /
$num
ªª0 2
]
ªª2 3
=
ªª4 5

index_x_s0
ªª6 @
+
ªªA B
$num
ªªC D
;
ªªD E
this
ºº 
.
ºº 
	triangles
ºº "
[
ºº" #

index_x_s1
ºº# -
+
ºº. /
$num
ºº0 2
]
ºº2 3
=
ºº4 5

index_x_s0
ºº6 @
+
ººA B
$num
ººC D
;
ººD E
this
ΩΩ 
.
ΩΩ 
	triangles
ΩΩ "
[
ΩΩ" #

index_x_s1
ΩΩ# -
+
ΩΩ. /
$num
ΩΩ0 2
]
ΩΩ2 3
=
ΩΩ4 5

index_x_s0
ΩΩ6 @
+
ΩΩA B
$num
ΩΩC D
;
ΩΩD E
this
ææ 
.
ææ 
	triangles
ææ "
[
ææ" #

index_x_s1
ææ# -
+
ææ. /
$num
ææ0 2
]
ææ2 3
=
ææ4 5

index_x_s0
ææ6 @
+
ææA B
$num
ææC D
;
ææD E
this
øø 
.
øø 
	triangles
øø "
[
øø" #

index_x_s1
øø# -
+
øø. /
$num
øø0 2
]
øø2 3
=
øø4 5

index_x_s0
øø6 @
+
øøA B
$num
øøC D
;
øøD E
this
¬¬ 
.
¬¬ 
	triangles
¬¬ "
[
¬¬" #

index_x_s1
¬¬# -
+
¬¬. /
$num
¬¬0 2
]
¬¬2 3
=
¬¬4 5

index_x_s0
¬¬6 @
+
¬¬A B
$num
¬¬C D
;
¬¬D E
this
√√ 
.
√√ 
	triangles
√√ "
[
√√" #

index_x_s1
√√# -
+
√√. /
$num
√√0 2
]
√√2 3
=
√√4 5

index_x_s0
√√6 @
+
√√A B
$num
√√C D
;
√√D E
this
ƒƒ 
.
ƒƒ 
	triangles
ƒƒ "
[
ƒƒ" #

index_x_s1
ƒƒ# -
+
ƒƒ. /
$num
ƒƒ0 2
]
ƒƒ2 3
=
ƒƒ4 5

index_x_s0
ƒƒ6 @
+
ƒƒA B
$num
ƒƒC D
;
ƒƒD E
this
≈≈ 
.
≈≈ 
	triangles
≈≈ "
[
≈≈" #

index_x_s1
≈≈# -
+
≈≈. /
$num
≈≈0 2
]
≈≈2 3
=
≈≈4 5

index_x_s0
≈≈6 @
+
≈≈A B
$num
≈≈C D
;
≈≈D E
this
∆∆ 
.
∆∆ 
	triangles
∆∆ "
[
∆∆" #

index_x_s1
∆∆# -
+
∆∆. /
$num
∆∆0 2
]
∆∆2 3
=
∆∆4 5

index_x_s0
∆∆6 @
+
∆∆A B
$num
∆∆C D
;
∆∆D E
this
«« 
.
«« 
	triangles
«« "
[
««" #

index_x_s1
««# -
+
««. /
$num
««0 2
]
««2 3
=
««4 5

index_x_s0
««6 @
+
««A B
$num
««C D
;
««D E
this
   
.
   
	triangles
   "
[
  " #

index_x_s1
  # -
+
  . /
$num
  0 2
]
  2 3
=
  4 5

index_x_s0
  6 @
+
  A B
$num
  C D
;
  D E
this
ÀÀ 
.
ÀÀ 
	triangles
ÀÀ "
[
ÀÀ" #

index_x_s1
ÀÀ# -
+
ÀÀ. /
$num
ÀÀ0 2
]
ÀÀ2 3
=
ÀÀ4 5

index_x_s0
ÀÀ6 @
+
ÀÀA B
$num
ÀÀC D
;
ÀÀD E
this
ÃÃ 
.
ÃÃ 
	triangles
ÃÃ "
[
ÃÃ" #

index_x_s1
ÃÃ# -
+
ÃÃ. /
$num
ÃÃ0 2
]
ÃÃ2 3
=
ÃÃ4 5

index_x_s0
ÃÃ6 @
+
ÃÃA B
$num
ÃÃC D
;
ÃÃD E
this
ÕÕ 
.
ÕÕ 
	triangles
ÕÕ "
[
ÕÕ" #

index_x_s1
ÕÕ# -
+
ÕÕ. /
$num
ÕÕ0 2
]
ÕÕ2 3
=
ÕÕ4 5

index_x_s0
ÕÕ6 @
+
ÕÕA B
$num
ÕÕC D
;
ÕÕD E
this
ŒŒ 
.
ŒŒ 
	triangles
ŒŒ "
[
ŒŒ" #

index_x_s1
ŒŒ# -
+
ŒŒ. /
$num
ŒŒ0 2
]
ŒŒ2 3
=
ŒŒ4 5

index_x_s0
ŒŒ6 @
+
ŒŒA B
$num
ŒŒC D
;
ŒŒD E
this
œœ 
.
œœ 
	triangles
œœ "
[
œœ" #

index_x_s1
œœ# -
+
œœ. /
$num
œœ0 2
]
œœ2 3
=
œœ4 5

index_x_s0
œœ6 @
+
œœA B
$num
œœC D
;
œœD E
this
““ 
.
““ 
	triangles
““ "
[
““" #

index_x_s1
““# -
+
““. /
$num
““0 2
]
““2 3
=
““4 5

index_x_s0
““6 @
+
““A B
$num
““C D
;
““D E
this
”” 
.
”” 
	triangles
”” "
[
””" #

index_x_s1
””# -
+
””. /
$num
””0 2
]
””2 3
=
””4 5

index_x_s0
””6 @
+
””A B
$num
””C D
;
””D E
this
‘‘ 
.
‘‘ 
	triangles
‘‘ "
[
‘‘" #

index_x_s1
‘‘# -
+
‘‘. /
$num
‘‘0 2
]
‘‘2 3
=
‘‘4 5

index_x_s0
‘‘6 @
+
‘‘A B
$num
‘‘C D
;
‘‘D E
this
’’ 
.
’’ 
	triangles
’’ "
[
’’" #

index_x_s1
’’# -
+
’’. /
$num
’’0 2
]
’’2 3
=
’’4 5

index_x_s0
’’6 @
+
’’A B
$num
’’C D
;
’’D E
this
÷÷ 
.
÷÷ 
	triangles
÷÷ "
[
÷÷" #

index_x_s1
÷÷# -
+
÷÷. /
$num
÷÷0 2
]
÷÷2 3
=
÷÷4 5

index_x_s0
÷÷6 @
+
÷÷A B
$num
÷÷C D
;
÷÷D E
this
◊◊ 
.
◊◊ 
	triangles
◊◊ "
[
◊◊" #

index_x_s1
◊◊# -
+
◊◊. /
$num
◊◊0 2
]
◊◊2 3
=
◊◊4 5

index_x_s0
◊◊6 @
+
◊◊A B
$num
◊◊C D
;
◊◊D E
}
ÿÿ 

index_x_s0
⁄⁄ 
+=
⁄⁄ 
s0
⁄⁄  
;
⁄⁄  !

index_x_s1
€€ 
+=
€€ 
s1
€€  
;
€€  !
}
‹‹ 
this
ﬂﬂ 
.
ﬂﬂ 
mesh
ﬂﬂ 
.
ﬂﬂ 
vertices
ﬂﬂ 
=
ﬂﬂ  
this
ﬂﬂ! %
.
ﬂﬂ% &
vertices
ﬂﬂ& .
;
ﬂﬂ. /
this
‡‡ 
.
‡‡ 
mesh
‡‡ 
.
‡‡ 
normals
‡‡ 
=
‡‡ 
this
‡‡  $
.
‡‡$ %
normals
‡‡% ,
;
‡‡, -
this
·· 
.
·· 
mesh
·· 
.
·· 
tangents
·· 
=
··  
this
··! %
.
··% &
tangents
··& .
;
··. /
this
‚‚ 
.
‚‚ 
mesh
‚‚ 
.
‚‚ 
	triangles
‚‚ 
=
‚‚  !
this
‚‚" &
.
‚‚& '
	triangles
‚‚' 0
;
‚‚0 1
this
„„ 
.
„„ 
mesh
„„ 
.
„„ 
bounds
„„ 
=
„„ 
s_DefaultBounds
„„ .
;
„„. /
this
‰‰ 
.
‰‰ 
material
‰‰ 
=
‰‰ 
null
‰‰  
;
‰‰  !
}
ÂÂ 	
public
ÌÌ 
void
ÌÌ 
ResizeMeshInfo
ÌÌ "
(
ÌÌ" #
int
ÌÌ# &
size
ÌÌ' +
)
ÌÌ+ ,
{
ÓÓ 	
size
 
=
 
Mathf
 
.
 
Min
 
(
 
size
 !
,
! "
$num
# (
)
( )
;
) *
int
ÚÚ 
size_X4
ÚÚ 
=
ÚÚ 
size
ÚÚ 
*
ÚÚ  
$num
ÚÚ! "
;
ÚÚ" #
int
ÛÛ 
size_X6
ÛÛ 
=
ÛÛ 
size
ÛÛ 
*
ÛÛ  
$num
ÛÛ! "
;
ÛÛ" #
int
ıı 
previousSize
ıı 
=
ıı 
this
ıı #
.
ıı# $
vertices
ıı$ ,
.
ıı, -
Length
ıı- 3
/
ıı4 5
$num
ıı6 7
;
ıı7 8
Array
˜˜ 
.
˜˜ 
Resize
˜˜ 
(
˜˜ 
ref
˜˜ 
this
˜˜ !
.
˜˜! "
vertices
˜˜" *
,
˜˜* +
size_X4
˜˜, 3
)
˜˜3 4
;
˜˜4 5
Array
¯¯ 
.
¯¯ 
Resize
¯¯ 
(
¯¯ 
ref
¯¯ 
this
¯¯ !
.
¯¯! "
normals
¯¯" )
,
¯¯) *
size_X4
¯¯+ 2
)
¯¯2 3
;
¯¯3 4
Array
˘˘ 
.
˘˘ 
Resize
˘˘ 
(
˘˘ 
ref
˘˘ 
this
˘˘ !
.
˘˘! "
tangents
˘˘" *
,
˘˘* +
size_X4
˘˘, 3
)
˘˘3 4
;
˘˘4 5
Array
˚˚ 
.
˚˚ 
Resize
˚˚ 
(
˚˚ 
ref
˚˚ 
this
˚˚ !
.
˚˚! "
uvs0
˚˚" &
,
˚˚& '
size_X4
˚˚( /
)
˚˚/ 0
;
˚˚0 1
Array
¸¸ 
.
¸¸ 
Resize
¸¸ 
(
¸¸ 
ref
¸¸ 
this
¸¸ !
.
¸¸! "
uvs2
¸¸" &
,
¸¸& '
size_X4
¸¸( /
)
¸¸/ 0
;
¸¸0 1
Array
ˇˇ 
.
ˇˇ 
Resize
ˇˇ 
(
ˇˇ 
ref
ˇˇ 
this
ˇˇ !
.
ˇˇ! "
colors32
ˇˇ" *
,
ˇˇ* +
size_X4
ˇˇ, 3
)
ˇˇ3 4
;
ˇˇ4 5
Array
ÅÅ 
.
ÅÅ 
Resize
ÅÅ 
(
ÅÅ 
ref
ÅÅ 
this
ÅÅ !
.
ÅÅ! "
	triangles
ÅÅ" +
,
ÅÅ+ ,
size_X6
ÅÅ- 4
)
ÅÅ4 5
;
ÅÅ5 6
if
ÖÖ 
(
ÖÖ 
size
ÖÖ 
<=
ÖÖ 
previousSize
ÖÖ $
)
ÖÖ$ %
{
ÜÜ 
this
áá 
.
áá 
mesh
áá 
.
áá 
	triangles
áá #
=
áá$ %
this
áá& *
.
áá* +
	triangles
áá+ 4
;
áá4 5
this
àà 
.
àà 
mesh
àà 
.
àà 
vertices
àà "
=
àà# $
this
àà% )
.
àà) *
vertices
àà* 2
;
àà2 3
this
ââ 
.
ââ 
mesh
ââ 
.
ââ 
normals
ââ !
=
ââ" #
this
ââ$ (
.
ââ( )
normals
ââ) 0
;
ââ0 1
this
ää 
.
ää 
mesh
ää 
.
ää 
tangents
ää "
=
ää# $
this
ää% )
.
ää) *
tangents
ää* 2
;
ää2 3
return
åå 
;
åå 
}
çç 
for
èè 
(
èè 
int
èè 
i
èè 
=
èè 
previousSize
èè %
;
èè% &
i
èè' (
<
èè) *
size
èè+ /
;
èè/ 0
i
èè1 2
++
èè2 4
)
èè4 5
{
êê 
int
ëë 
index_X4
ëë 
=
ëë 
i
ëë  
*
ëë! "
$num
ëë# $
;
ëë$ %
int
íí 
index_X6
íí 
=
íí 
i
íí  
*
íí! "
$num
íí# $
;
íí$ %
this
îî 
.
îî 
normals
îî 
[
îî 
$num
îî 
+
îî  
index_X4
îî! )
]
îî) *
=
îî+ ,
s_DefaultNormal
îî- <
;
îî< =
this
ïï 
.
ïï 
normals
ïï 
[
ïï 
$num
ïï 
+
ïï  
index_X4
ïï! )
]
ïï) *
=
ïï+ ,
s_DefaultNormal
ïï- <
;
ïï< =
this
ññ 
.
ññ 
normals
ññ 
[
ññ 
$num
ññ 
+
ññ  
index_X4
ññ! )
]
ññ) *
=
ññ+ ,
s_DefaultNormal
ññ- <
;
ññ< =
this
óó 
.
óó 
normals
óó 
[
óó 
$num
óó 
+
óó  
index_X4
óó! )
]
óó) *
=
óó+ ,
s_DefaultNormal
óó- <
;
óó< =
this
ôô 
.
ôô 
tangents
ôô 
[
ôô 
$num
ôô 
+
ôô  !
index_X4
ôô" *
]
ôô* +
=
ôô, -
s_DefaultTangent
ôô. >
;
ôô> ?
this
öö 
.
öö 
tangents
öö 
[
öö 
$num
öö 
+
öö  !
index_X4
öö" *
]
öö* +
=
öö, -
s_DefaultTangent
öö. >
;
öö> ?
this
õõ 
.
õõ 
tangents
õõ 
[
õõ 
$num
õõ 
+
õõ  !
index_X4
õõ" *
]
õõ* +
=
õõ, -
s_DefaultTangent
õõ. >
;
õõ> ?
this
úú 
.
úú 
tangents
úú 
[
úú 
$num
úú 
+
úú  !
index_X4
úú" *
]
úú* +
=
úú, -
s_DefaultTangent
úú. >
;
úú> ?
this
üü 
.
üü 
	triangles
üü 
[
üü 
$num
üü  
+
üü! "
index_X6
üü# +
]
üü+ ,
=
üü- .
$num
üü/ 0
+
üü1 2
index_X4
üü3 ;
;
üü; <
this
†† 
.
†† 
	triangles
†† 
[
†† 
$num
††  
+
††! "
index_X6
††# +
]
††+ ,
=
††- .
$num
††/ 0
+
††1 2
index_X4
††3 ;
;
††; <
this
°° 
.
°° 
	triangles
°° 
[
°° 
$num
°°  
+
°°! "
index_X6
°°# +
]
°°+ ,
=
°°- .
$num
°°/ 0
+
°°1 2
index_X4
°°3 ;
;
°°; <
this
¢¢ 
.
¢¢ 
	triangles
¢¢ 
[
¢¢ 
$num
¢¢  
+
¢¢! "
index_X6
¢¢# +
]
¢¢+ ,
=
¢¢- .
$num
¢¢/ 0
+
¢¢1 2
index_X4
¢¢3 ;
;
¢¢; <
this
££ 
.
££ 
	triangles
££ 
[
££ 
$num
££  
+
££! "
index_X6
££# +
]
££+ ,
=
££- .
$num
££/ 0
+
££1 2
index_X4
££3 ;
;
££; <
this
§§ 
.
§§ 
	triangles
§§ 
[
§§ 
$num
§§  
+
§§! "
index_X6
§§# +
]
§§+ ,
=
§§- .
$num
§§/ 0
+
§§1 2
index_X4
§§3 ;
;
§§; <
}
•• 
this
ßß 
.
ßß 
mesh
ßß 
.
ßß 
vertices
ßß 
=
ßß  
this
ßß! %
.
ßß% &
vertices
ßß& .
;
ßß. /
this
®® 
.
®® 
mesh
®® 
.
®® 
normals
®® 
=
®® 
this
®®  $
.
®®$ %
normals
®®% ,
;
®®, -
this
©© 
.
©© 
mesh
©© 
.
©© 
tangents
©© 
=
©©  
this
©©! %
.
©©% &
tangents
©©& .
;
©©. /
this
™™ 
.
™™ 
mesh
™™ 
.
™™ 
	triangles
™™ 
=
™™  !
this
™™" &
.
™™& '
	triangles
™™' 0
;
™™0 1
}
´´ 	
public
≥≥ 
void
≥≥ 
ResizeMeshInfo
≥≥ "
(
≥≥" #
int
≥≥# &
size
≥≥' +
,
≥≥+ ,
bool
≥≥- 1
isVolumetric
≥≥2 >
)
≥≥> ?
{
¥¥ 	
int
µµ 
s0
µµ 
=
µµ 
!
µµ 
isVolumetric
µµ "
?
µµ# $
$num
µµ% &
:
µµ' (
$num
µµ) *
;
µµ* +
int
∂∂ 
s1
∂∂ 
=
∂∂ 
!
∂∂ 
isVolumetric
∂∂ "
?
∂∂# $
$num
∂∂% &
:
∂∂' (
$num
∂∂) +
;
∂∂+ ,
size
ππ 
=
ππ 
Mathf
ππ 
.
ππ 
Min
ππ 
(
ππ 
size
ππ !
,
ππ! "
$num
ππ# (
/
ππ) *
s0
ππ+ -
)
ππ- .
;
ππ. /
int
ªª 
size_X4
ªª 
=
ªª 
size
ªª 
*
ªª  
s0
ªª! #
;
ªª# $
int
ºº 
size_X6
ºº 
=
ºº 
size
ºº 
*
ºº  
s1
ºº! #
;
ºº# $
int
ææ 
previousSize
ææ 
=
ææ 
this
ææ #
.
ææ# $
vertices
ææ$ ,
.
ææ, -
Length
ææ- 3
/
ææ4 5
s0
ææ6 8
;
ææ8 9
Array
¿¿ 
.
¿¿ 
Resize
¿¿ 
(
¿¿ 
ref
¿¿ 
this
¿¿ !
.
¿¿! "
vertices
¿¿" *
,
¿¿* +
size_X4
¿¿, 3
)
¿¿3 4
;
¿¿4 5
Array
¡¡ 
.
¡¡ 
Resize
¡¡ 
(
¡¡ 
ref
¡¡ 
this
¡¡ !
.
¡¡! "
normals
¡¡" )
,
¡¡) *
size_X4
¡¡+ 2
)
¡¡2 3
;
¡¡3 4
Array
¬¬ 
.
¬¬ 
Resize
¬¬ 
(
¬¬ 
ref
¬¬ 
this
¬¬ !
.
¬¬! "
tangents
¬¬" *
,
¬¬* +
size_X4
¬¬, 3
)
¬¬3 4
;
¬¬4 5
Array
ƒƒ 
.
ƒƒ 
Resize
ƒƒ 
(
ƒƒ 
ref
ƒƒ 
this
ƒƒ !
.
ƒƒ! "
uvs0
ƒƒ" &
,
ƒƒ& '
size_X4
ƒƒ( /
)
ƒƒ/ 0
;
ƒƒ0 1
Array
≈≈ 
.
≈≈ 
Resize
≈≈ 
(
≈≈ 
ref
≈≈ 
this
≈≈ !
.
≈≈! "
uvs2
≈≈" &
,
≈≈& '
size_X4
≈≈( /
)
≈≈/ 0
;
≈≈0 1
Array
»» 
.
»» 
Resize
»» 
(
»» 
ref
»» 
this
»» !
.
»»! "
colors32
»»" *
,
»»* +
size_X4
»», 3
)
»»3 4
;
»»4 5
Array
   
.
   
Resize
   
(
   
ref
   
this
   !
.
  ! "
	triangles
  " +
,
  + ,
size_X6
  - 4
)
  4 5
;
  5 6
if
ŒŒ 
(
ŒŒ 
size
ŒŒ 
<=
ŒŒ 
previousSize
ŒŒ $
)
ŒŒ$ %
{
œœ 
this
–– 
.
–– 
mesh
–– 
.
–– 
	triangles
–– #
=
––$ %
this
––& *
.
––* +
	triangles
––+ 4
;
––4 5
this
—— 
.
—— 
mesh
—— 
.
—— 
vertices
—— "
=
——# $
this
——% )
.
——) *
vertices
——* 2
;
——2 3
this
““ 
.
““ 
mesh
““ 
.
““ 
normals
““ !
=
““" #
this
““$ (
.
““( )
normals
““) 0
;
““0 1
this
”” 
.
”” 
mesh
”” 
.
”” 
tangents
”” "
=
””# $
this
””% )
.
””) *
tangents
””* 2
;
””2 3
return
’’ 
;
’’ 
}
÷÷ 
for
ÿÿ 
(
ÿÿ 
int
ÿÿ 
i
ÿÿ 
=
ÿÿ 
previousSize
ÿÿ %
;
ÿÿ% &
i
ÿÿ' (
<
ÿÿ) *
size
ÿÿ+ /
;
ÿÿ/ 0
i
ÿÿ1 2
++
ÿÿ2 4
)
ÿÿ4 5
{
ŸŸ 
int
⁄⁄ 
index_X4
⁄⁄ 
=
⁄⁄ 
i
⁄⁄  
*
⁄⁄! "
s0
⁄⁄# %
;
⁄⁄% &
int
€€ 
index_X6
€€ 
=
€€ 
i
€€  
*
€€! "
s1
€€# %
;
€€% &
this
›› 
.
›› 
normals
›› 
[
›› 
$num
›› 
+
››  
index_X4
››! )
]
››) *
=
››+ ,
s_DefaultNormal
››- <
;
››< =
this
ﬁﬁ 
.
ﬁﬁ 
normals
ﬁﬁ 
[
ﬁﬁ 
$num
ﬁﬁ 
+
ﬁﬁ  
index_X4
ﬁﬁ! )
]
ﬁﬁ) *
=
ﬁﬁ+ ,
s_DefaultNormal
ﬁﬁ- <
;
ﬁﬁ< =
this
ﬂﬂ 
.
ﬂﬂ 
normals
ﬂﬂ 
[
ﬂﬂ 
$num
ﬂﬂ 
+
ﬂﬂ  
index_X4
ﬂﬂ! )
]
ﬂﬂ) *
=
ﬂﬂ+ ,
s_DefaultNormal
ﬂﬂ- <
;
ﬂﬂ< =
this
‡‡ 
.
‡‡ 
normals
‡‡ 
[
‡‡ 
$num
‡‡ 
+
‡‡  
index_X4
‡‡! )
]
‡‡) *
=
‡‡+ ,
s_DefaultNormal
‡‡- <
;
‡‡< =
this
‚‚ 
.
‚‚ 
tangents
‚‚ 
[
‚‚ 
$num
‚‚ 
+
‚‚  !
index_X4
‚‚" *
]
‚‚* +
=
‚‚, -
s_DefaultTangent
‚‚. >
;
‚‚> ?
this
„„ 
.
„„ 
tangents
„„ 
[
„„ 
$num
„„ 
+
„„  !
index_X4
„„" *
]
„„* +
=
„„, -
s_DefaultTangent
„„. >
;
„„> ?
this
‰‰ 
.
‰‰ 
tangents
‰‰ 
[
‰‰ 
$num
‰‰ 
+
‰‰  !
index_X4
‰‰" *
]
‰‰* +
=
‰‰, -
s_DefaultTangent
‰‰. >
;
‰‰> ?
this
ÂÂ 
.
ÂÂ 
tangents
ÂÂ 
[
ÂÂ 
$num
ÂÂ 
+
ÂÂ  !
index_X4
ÂÂ" *
]
ÂÂ* +
=
ÂÂ, -
s_DefaultTangent
ÂÂ. >
;
ÂÂ> ?
if
ÁÁ 
(
ÁÁ 
isVolumetric
ÁÁ  
)
ÁÁ  !
{
ËË 
this
ÈÈ 
.
ÈÈ 
normals
ÈÈ  
[
ÈÈ  !
$num
ÈÈ! "
+
ÈÈ# $
index_X4
ÈÈ% -
]
ÈÈ- .
=
ÈÈ/ 0
s_DefaultNormal
ÈÈ1 @
;
ÈÈ@ A
this
ÍÍ 
.
ÍÍ 
normals
ÍÍ  
[
ÍÍ  !
$num
ÍÍ! "
+
ÍÍ# $
index_X4
ÍÍ% -
]
ÍÍ- .
=
ÍÍ/ 0
s_DefaultNormal
ÍÍ1 @
;
ÍÍ@ A
this
ÎÎ 
.
ÎÎ 
normals
ÎÎ  
[
ÎÎ  !
$num
ÎÎ! "
+
ÎÎ# $
index_X4
ÎÎ% -
]
ÎÎ- .
=
ÎÎ/ 0
s_DefaultNormal
ÎÎ1 @
;
ÎÎ@ A
this
ÏÏ 
.
ÏÏ 
normals
ÏÏ  
[
ÏÏ  !
$num
ÏÏ! "
+
ÏÏ# $
index_X4
ÏÏ% -
]
ÏÏ- .
=
ÏÏ/ 0
s_DefaultNormal
ÏÏ1 @
;
ÏÏ@ A
this
ÓÓ 
.
ÓÓ 
tangents
ÓÓ !
[
ÓÓ! "
$num
ÓÓ" #
+
ÓÓ$ %
index_X4
ÓÓ& .
]
ÓÓ. /
=
ÓÓ0 1
s_DefaultTangent
ÓÓ2 B
;
ÓÓB C
this
ÔÔ 
.
ÔÔ 
tangents
ÔÔ !
[
ÔÔ! "
$num
ÔÔ" #
+
ÔÔ$ %
index_X4
ÔÔ& .
]
ÔÔ. /
=
ÔÔ0 1
s_DefaultTangent
ÔÔ2 B
;
ÔÔB C
this
 
.
 
tangents
 !
[
! "
$num
" #
+
$ %
index_X4
& .
]
. /
=
0 1
s_DefaultTangent
2 B
;
B C
this
ÒÒ 
.
ÒÒ 
tangents
ÒÒ !
[
ÒÒ! "
$num
ÒÒ" #
+
ÒÒ$ %
index_X4
ÒÒ& .
]
ÒÒ. /
=
ÒÒ0 1
s_DefaultTangent
ÒÒ2 B
;
ÒÒB C
}
ÚÚ 
this
ıı 
.
ıı 
	triangles
ıı 
[
ıı 
$num
ıı  
+
ıı! "
index_X6
ıı# +
]
ıı+ ,
=
ıı- .
$num
ıı/ 0
+
ıı1 2
index_X4
ıı3 ;
;
ıı; <
this
ˆˆ 
.
ˆˆ 
	triangles
ˆˆ 
[
ˆˆ 
$num
ˆˆ  
+
ˆˆ! "
index_X6
ˆˆ# +
]
ˆˆ+ ,
=
ˆˆ- .
$num
ˆˆ/ 0
+
ˆˆ1 2
index_X4
ˆˆ3 ;
;
ˆˆ; <
this
˜˜ 
.
˜˜ 
	triangles
˜˜ 
[
˜˜ 
$num
˜˜  
+
˜˜! "
index_X6
˜˜# +
]
˜˜+ ,
=
˜˜- .
$num
˜˜/ 0
+
˜˜1 2
index_X4
˜˜3 ;
;
˜˜; <
this
¯¯ 
.
¯¯ 
	triangles
¯¯ 
[
¯¯ 
$num
¯¯  
+
¯¯! "
index_X6
¯¯# +
]
¯¯+ ,
=
¯¯- .
$num
¯¯/ 0
+
¯¯1 2
index_X4
¯¯3 ;
;
¯¯; <
this
˘˘ 
.
˘˘ 
	triangles
˘˘ 
[
˘˘ 
$num
˘˘  
+
˘˘! "
index_X6
˘˘# +
]
˘˘+ ,
=
˘˘- .
$num
˘˘/ 0
+
˘˘1 2
index_X4
˘˘3 ;
;
˘˘; <
this
˙˙ 
.
˙˙ 
	triangles
˙˙ 
[
˙˙ 
$num
˙˙  
+
˙˙! "
index_X6
˙˙# +
]
˙˙+ ,
=
˙˙- .
$num
˙˙/ 0
+
˙˙1 2
index_X4
˙˙3 ;
;
˙˙; <
if
¸¸ 
(
¸¸ 
isVolumetric
¸¸  
)
¸¸  !
{
˝˝ 
this
ˇˇ 
.
ˇˇ 
	triangles
ˇˇ "
[
ˇˇ" #
index_X6
ˇˇ# +
+
ˇˇ, -
$num
ˇˇ. /
]
ˇˇ/ 0
=
ˇˇ1 2
index_X4
ˇˇ3 ;
+
ˇˇ< =
$num
ˇˇ> ?
;
ˇˇ? @
this
ÄÄ 
.
ÄÄ 
	triangles
ÄÄ "
[
ÄÄ" #
index_X6
ÄÄ# +
+
ÄÄ, -
$num
ÄÄ. /
]
ÄÄ/ 0
=
ÄÄ1 2
index_X4
ÄÄ3 ;
+
ÄÄ< =
$num
ÄÄ> ?
;
ÄÄ? @
this
ÅÅ 
.
ÅÅ 
	triangles
ÅÅ "
[
ÅÅ" #
index_X6
ÅÅ# +
+
ÅÅ, -
$num
ÅÅ. /
]
ÅÅ/ 0
=
ÅÅ1 2
index_X4
ÅÅ3 ;
+
ÅÅ< =
$num
ÅÅ> ?
;
ÅÅ? @
this
ÇÇ 
.
ÇÇ 
	triangles
ÇÇ "
[
ÇÇ" #
index_X6
ÇÇ# +
+
ÇÇ, -
$num
ÇÇ. /
]
ÇÇ/ 0
=
ÇÇ1 2
index_X4
ÇÇ3 ;
+
ÇÇ< =
$num
ÇÇ> ?
;
ÇÇ? @
this
ÉÉ 
.
ÉÉ 
	triangles
ÉÉ "
[
ÉÉ" #
index_X6
ÉÉ# +
+
ÉÉ, -
$num
ÉÉ. 0
]
ÉÉ0 1
=
ÉÉ2 3
index_X4
ÉÉ4 <
+
ÉÉ= >
$num
ÉÉ? @
;
ÉÉ@ A
this
ÑÑ 
.
ÑÑ 
	triangles
ÑÑ "
[
ÑÑ" #
index_X6
ÑÑ# +
+
ÑÑ, -
$num
ÑÑ. 0
]
ÑÑ0 1
=
ÑÑ2 3
index_X4
ÑÑ4 <
+
ÑÑ= >
$num
ÑÑ? @
;
ÑÑ@ A
this
áá 
.
áá 
	triangles
áá "
[
áá" #
index_X6
áá# +
+
áá, -
$num
áá. 0
]
áá0 1
=
áá2 3
index_X4
áá4 <
+
áá= >
$num
áá? @
;
áá@ A
this
àà 
.
àà 
	triangles
àà "
[
àà" #
index_X6
àà# +
+
àà, -
$num
àà. 0
]
àà0 1
=
àà2 3
index_X4
àà4 <
+
àà= >
$num
àà? @
;
àà@ A
this
ââ 
.
ââ 
	triangles
ââ "
[
ââ" #
index_X6
ââ# +
+
ââ, -
$num
ââ. 0
]
ââ0 1
=
ââ2 3
index_X4
ââ4 <
+
ââ= >
$num
ââ? @
;
ââ@ A
this
ää 
.
ää 
	triangles
ää "
[
ää" #
index_X6
ää# +
+
ää, -
$num
ää. 0
]
ää0 1
=
ää2 3
index_X4
ää4 <
+
ää= >
$num
ää? @
;
ää@ A
this
ãã 
.
ãã 
	triangles
ãã "
[
ãã" #
index_X6
ãã# +
+
ãã, -
$num
ãã. 0
]
ãã0 1
=
ãã2 3
index_X4
ãã4 <
+
ãã= >
$num
ãã? @
;
ãã@ A
this
åå 
.
åå 
	triangles
åå "
[
åå" #
index_X6
åå# +
+
åå, -
$num
åå. 0
]
åå0 1
=
åå2 3
index_X4
åå4 <
+
åå= >
$num
åå? @
;
åå@ A
this
èè 
.
èè 
	triangles
èè "
[
èè" #
index_X6
èè# +
+
èè, -
$num
èè. 0
]
èè0 1
=
èè2 3
index_X4
èè4 <
+
èè= >
$num
èè? @
;
èè@ A
this
êê 
.
êê 
	triangles
êê "
[
êê" #
index_X6
êê# +
+
êê, -
$num
êê. 0
]
êê0 1
=
êê2 3
index_X4
êê4 <
+
êê= >
$num
êê? @
;
êê@ A
this
ëë 
.
ëë 
	triangles
ëë "
[
ëë" #
index_X6
ëë# +
+
ëë, -
$num
ëë. 0
]
ëë0 1
=
ëë2 3
index_X4
ëë4 <
+
ëë= >
$num
ëë? @
;
ëë@ A
this
íí 
.
íí 
	triangles
íí "
[
íí" #
index_X6
íí# +
+
íí, -
$num
íí. 0
]
íí0 1
=
íí2 3
index_X4
íí4 <
+
íí= >
$num
íí? @
;
íí@ A
this
ìì 
.
ìì 
	triangles
ìì "
[
ìì" #
index_X6
ìì# +
+
ìì, -
$num
ìì. 0
]
ìì0 1
=
ìì2 3
index_X4
ìì4 <
+
ìì= >
$num
ìì? @
;
ìì@ A
this
îî 
.
îî 
	triangles
îî "
[
îî" #
index_X6
îî# +
+
îî, -
$num
îî. 0
]
îî0 1
=
îî2 3
index_X4
îî4 <
+
îî= >
$num
îî? @
;
îî@ A
this
óó 
.
óó 
	triangles
óó "
[
óó" #
index_X6
óó# +
+
óó, -
$num
óó. 0
]
óó0 1
=
óó2 3
index_X4
óó4 <
+
óó= >
$num
óó? @
;
óó@ A
this
òò 
.
òò 
	triangles
òò "
[
òò" #
index_X6
òò# +
+
òò, -
$num
òò. 0
]
òò0 1
=
òò2 3
index_X4
òò4 <
+
òò= >
$num
òò? @
;
òò@ A
this
ôô 
.
ôô 
	triangles
ôô "
[
ôô" #
index_X6
ôô# +
+
ôô, -
$num
ôô. 0
]
ôô0 1
=
ôô2 3
index_X4
ôô4 <
+
ôô= >
$num
ôô? @
;
ôô@ A
this
öö 
.
öö 
	triangles
öö "
[
öö" #
index_X6
öö# +
+
öö, -
$num
öö. 0
]
öö0 1
=
öö2 3
index_X4
öö4 <
+
öö= >
$num
öö? @
;
öö@ A
this
õõ 
.
õõ 
	triangles
õõ "
[
õõ" #
index_X6
õõ# +
+
õõ, -
$num
õõ. 0
]
õõ0 1
=
õõ2 3
index_X4
õõ4 <
+
õõ= >
$num
õõ? @
;
õõ@ A
this
úú 
.
úú 
	triangles
úú "
[
úú" #
index_X6
úú# +
+
úú, -
$num
úú. 0
]
úú0 1
=
úú2 3
index_X4
úú4 <
+
úú= >
$num
úú? @
;
úú@ A
this
üü 
.
üü 
	triangles
üü "
[
üü" #
index_X6
üü# +
+
üü, -
$num
üü. 0
]
üü0 1
=
üü2 3
index_X4
üü4 <
+
üü= >
$num
üü? @
;
üü@ A
this
†† 
.
†† 
	triangles
†† "
[
††" #
index_X6
††# +
+
††, -
$num
††. 0
]
††0 1
=
††2 3
index_X4
††4 <
+
††= >
$num
††? @
;
††@ A
this
°° 
.
°° 
	triangles
°° "
[
°°" #
index_X6
°°# +
+
°°, -
$num
°°. 0
]
°°0 1
=
°°2 3
index_X4
°°4 <
+
°°= >
$num
°°? @
;
°°@ A
this
¢¢ 
.
¢¢ 
	triangles
¢¢ "
[
¢¢" #
index_X6
¢¢# +
+
¢¢, -
$num
¢¢. 0
]
¢¢0 1
=
¢¢2 3
index_X4
¢¢4 <
+
¢¢= >
$num
¢¢? @
;
¢¢@ A
this
££ 
.
££ 
	triangles
££ "
[
££" #
index_X6
££# +
+
££, -
$num
££. 0
]
££0 1
=
££2 3
index_X4
££4 <
+
££= >
$num
££? @
;
££@ A
this
§§ 
.
§§ 
	triangles
§§ "
[
§§" #
index_X6
§§# +
+
§§, -
$num
§§. 0
]
§§0 1
=
§§2 3
index_X4
§§4 <
+
§§= >
$num
§§? @
;
§§@ A
}
•• 
}
¶¶ 
this
®® 
.
®® 
mesh
®® 
.
®® 
vertices
®® 
=
®®  
this
®®! %
.
®®% &
vertices
®®& .
;
®®. /
this
©© 
.
©© 
mesh
©© 
.
©© 
normals
©© 
=
©© 
this
©©  $
.
©©$ %
normals
©©% ,
;
©©, -
this
™™ 
.
™™ 
mesh
™™ 
.
™™ 
tangents
™™ 
=
™™  
this
™™! %
.
™™% &
tangents
™™& .
;
™™. /
this
´´ 
.
´´ 
mesh
´´ 
.
´´ 
	triangles
´´ 
=
´´  !
this
´´" &
.
´´& '
	triangles
´´' 0
;
´´0 1
}
¨¨ 	
public
≤≤ 
void
≤≤ 
Clear
≤≤ 
(
≤≤ 
)
≤≤ 
{
≥≥ 	
if
¥¥ 
(
¥¥ 
this
¥¥ 
.
¥¥ 
vertices
¥¥ 
==
¥¥  
null
¥¥! %
)
¥¥% &
return
¥¥' -
;
¥¥- .
Array
∂∂ 
.
∂∂ 
Clear
∂∂ 
(
∂∂ 
this
∂∂ 
.
∂∂ 
vertices
∂∂ %
,
∂∂% &
$num
∂∂' (
,
∂∂( )
this
∂∂* .
.
∂∂. /
vertices
∂∂/ 7
.
∂∂7 8
Length
∂∂8 >
)
∂∂> ?
;
∂∂? @
this
∑∑ 
.
∑∑ 
vertexCount
∑∑ 
=
∑∑ 
$num
∑∑  
;
∑∑  !
if
ππ 
(
ππ 
this
ππ 
.
ππ 
mesh
ππ 
!=
ππ 
null
ππ !
)
ππ! "
this
∫∫ 
.
∫∫ 
mesh
∫∫ 
.
∫∫ 
vertices
∫∫ "
=
∫∫# $
this
∫∫% )
.
∫∫) *
vertices
∫∫* 2
;
∫∫2 3
}
ªª 	
public
¡¡ 
void
¡¡ 
Clear
¡¡ 
(
¡¡ 
bool
¡¡ 
uploadChanges
¡¡ ,
)
¡¡, -
{
¬¬ 	
if
√√ 
(
√√ 
this
√√ 
.
√√ 
vertices
√√ 
==
√√  
null
√√! %
)
√√% &
return
√√' -
;
√√- .
Array
≈≈ 
.
≈≈ 
Clear
≈≈ 
(
≈≈ 
this
≈≈ 
.
≈≈ 
vertices
≈≈ %
,
≈≈% &
$num
≈≈' (
,
≈≈( )
this
≈≈* .
.
≈≈. /
vertices
≈≈/ 7
.
≈≈7 8
Length
≈≈8 >
)
≈≈> ?
;
≈≈? @
this
∆∆ 
.
∆∆ 
vertexCount
∆∆ 
=
∆∆ 
$num
∆∆  
;
∆∆  !
if
»» 
(
»» 
uploadChanges
»» 
&&
»»  
this
»»! %
.
»»% &
mesh
»»& *
!=
»»+ -
null
»». 2
)
»»2 3
this
…… 
.
…… 
mesh
…… 
.
…… 
vertices
…… "
=
……# $
this
……% )
.
……) *
vertices
……* 2
;
……2 3
if
ÀÀ 
(
ÀÀ 
this
ÀÀ 
.
ÀÀ 
mesh
ÀÀ 
!=
ÀÀ 
null
ÀÀ !
)
ÀÀ! "
this
ÃÃ 
.
ÃÃ 
mesh
ÃÃ 
.
ÃÃ 
bounds
ÃÃ  
=
ÃÃ! "
s_DefaultBounds
ÃÃ# 2
;
ÃÃ2 3
}
ÕÕ 	
public
”” 
void
”” !
ClearUnusedVertices
”” '
(
””' (
)
””( )
{
‘‘ 	
int
’’ 
length
’’ 
=
’’ 
vertices
’’ !
.
’’! "
Length
’’" (
-
’’) *
vertexCount
’’+ 6
;
’’6 7
if
◊◊ 
(
◊◊ 
length
◊◊ 
>
◊◊ 
$num
◊◊ 
)
◊◊ 
Array
ÿÿ 
.
ÿÿ 
Clear
ÿÿ 
(
ÿÿ 
vertices
ÿÿ $
,
ÿÿ$ %
vertexCount
ÿÿ& 1
,
ÿÿ1 2
length
ÿÿ3 9
)
ÿÿ9 :
;
ÿÿ: ;
}
ŸŸ 	
public
‡‡ 
void
‡‡ !
ClearUnusedVertices
‡‡ '
(
‡‡' (
int
‡‡( +

startIndex
‡‡, 6
)
‡‡6 7
{
·· 	
int
‚‚ 
length
‚‚ 
=
‚‚ 
this
‚‚ 
.
‚‚ 
vertices
‚‚ &
.
‚‚& '
Length
‚‚' -
-
‚‚. /

startIndex
‚‚0 :
;
‚‚: ;
if
‰‰ 
(
‰‰ 
length
‰‰ 
>
‰‰ 
$num
‰‰ 
)
‰‰ 
Array
ÂÂ 
.
ÂÂ 
Clear
ÂÂ 
(
ÂÂ 
this
ÂÂ  
.
ÂÂ  !
vertices
ÂÂ! )
,
ÂÂ) *

startIndex
ÂÂ+ 5
,
ÂÂ5 6
length
ÂÂ7 =
)
ÂÂ= >
;
ÂÂ> ?
}
ÊÊ 	
public
ÌÌ 
void
ÌÌ !
ClearUnusedVertices
ÌÌ '
(
ÌÌ' (
int
ÌÌ( +

startIndex
ÌÌ, 6
,
ÌÌ6 7
bool
ÌÌ8 <

updateMesh
ÌÌ= G
)
ÌÌG H
{
ÓÓ 	
int
ÔÔ 
length
ÔÔ 
=
ÔÔ 
this
ÔÔ 
.
ÔÔ 
vertices
ÔÔ &
.
ÔÔ& '
Length
ÔÔ' -
-
ÔÔ. /

startIndex
ÔÔ0 :
;
ÔÔ: ;
if
ÒÒ 
(
ÒÒ 
length
ÒÒ 
>
ÒÒ 
$num
ÒÒ 
)
ÒÒ 
Array
ÚÚ 
.
ÚÚ 
Clear
ÚÚ 
(
ÚÚ 
this
ÚÚ  
.
ÚÚ  !
vertices
ÚÚ! )
,
ÚÚ) *

startIndex
ÚÚ+ 5
,
ÚÚ5 6
length
ÚÚ7 =
)
ÚÚ= >
;
ÚÚ> ?
if
ÙÙ 
(
ÙÙ 

updateMesh
ÙÙ 
&&
ÙÙ 
mesh
ÙÙ "
!=
ÙÙ# %
null
ÙÙ& *
)
ÙÙ* +
this
ıı 
.
ıı 
mesh
ıı 
.
ıı 
vertices
ıı "
=
ıı# $
this
ıı% )
.
ıı) *
vertices
ıı* 2
;
ıı2 3
}
ˆˆ 	
public
˘˘ 
void
˘˘ 
SortGeometry
˘˘  
(
˘˘! " 
VertexSortingOrder
˘˘" 4
order
˘˘5 :
)
˘˘: ;
{
˙˙ 	
switch
˚˚ 
(
˚˚ 
order
˚˚ 
)
˚˚ 
{
¸¸ 
case
˝˝  
VertexSortingOrder
˝˝ '
.
˝˝' (
Normal
˝˝( .
:
˝˝. /
break
ˇˇ 
;
ˇˇ 
case
ÄÄ  
VertexSortingOrder
ÄÄ '
.
ÄÄ' (
Reverse
ÄÄ( /
:
ÄÄ/ 0
int
ÅÅ 
size
ÅÅ 
=
ÅÅ 
vertexCount
ÅÅ *
/
ÅÅ+ ,
$num
ÅÅ- .
;
ÅÅ. /
for
ÇÇ 
(
ÇÇ 
int
ÇÇ 
i
ÇÇ 
=
ÇÇ  
$num
ÇÇ! "
;
ÇÇ" #
i
ÇÇ$ %
<
ÇÇ& '
size
ÇÇ( ,
;
ÇÇ, -
i
ÇÇ. /
++
ÇÇ/ 1
)
ÇÇ1 2
{
ÉÉ 
int
ÑÑ 
src
ÑÑ 
=
ÑÑ  !
i
ÑÑ" #
*
ÑÑ$ %
$num
ÑÑ& '
;
ÑÑ' (
int
ÖÖ 
dst
ÖÖ 
=
ÖÖ  !
(
ÖÖ" #
size
ÖÖ# '
-
ÖÖ( )
i
ÖÖ* +
-
ÖÖ, -
$num
ÖÖ. /
)
ÖÖ/ 0
*
ÖÖ1 2
$num
ÖÖ3 4
;
ÖÖ4 5
if
áá 
(
áá 
src
áá 
<
áá  !
dst
áá" %
)
áá% &
SwapVertexData
àà *
(
àà* +
src
àà+ .
,
àà. /
dst
àà0 3
)
àà3 4
;
àà4 5
}
ää 
break
ãã 
;
ãã 
}
èè 
}
êê 	
public
óó 
void
óó 
SortGeometry
óó  
(
óó  !
IList
óó! &
<
óó& '
int
óó' *
>
óó* +
sortingOrder
óó, 8
)
óó8 9
{
òò 	
int
öö 

indexCount
öö 
=
öö 
sortingOrder
öö )
.
öö) *
Count
öö* /
;
öö/ 0
if
úú 
(
úú 

indexCount
úú 
*
úú 
$num
úú 
>
úú  
vertices
úú! )
.
úú) *
Length
úú* 0
)
úú0 1
return
úú2 8
;
úú8 9
int
ûû 
	src_index
ûû 
;
ûû 
for
†† 
(
†† 
int
†† 
	dst_index
†† 
=
††  
$num
††! "
;
††" #
	dst_index
††$ -
<
††. /

indexCount
††0 :
;
††: ;
	dst_index
††< E
++
††E G
)
††G H
{
°° 
	src_index
¢¢ 
=
¢¢ 
sortingOrder
¢¢ (
[
¢¢( )
	dst_index
¢¢) 2
]
¢¢2 3
;
¢¢3 4
while
§§ 
(
§§ 
	src_index
§§  
<
§§! "
	dst_index
§§# ,
)
§§, -
{
•• 
	src_index
¶¶ 
=
¶¶ 
sortingOrder
¶¶  ,
[
¶¶, -
	src_index
¶¶- 6
]
¶¶6 7
;
¶¶7 8
}
ßß 
if
™™ 
(
™™ 
	src_index
™™ 
!=
™™  
	dst_index
™™! *
)
™™* +
SwapVertexData
´´ "
(
´´" #
	src_index
´´# ,
*
´´- .
$num
´´/ 0
,
´´0 1
	dst_index
´´2 ;
*
´´< =
$num
´´> ?
)
´´? @
;
´´@ A
}
ÆÆ 
}
ØØ 	
public
∑∑ 
void
∑∑ 
SwapVertexData
∑∑ "
(
∑∑" #
int
∑∑# &
src
∑∑' *
,
∑∑* +
int
∑∑, /
dst
∑∑0 3
)
∑∑3 4
{
∏∏ 	
int
ππ 
	src_Index
ππ 
=
ππ 
src
ππ 
;
ππ  
int
∫∫ 
	dst_Index
∫∫ 
=
∫∫ 
dst
∫∫ 
;
∫∫  
Vector3
ΩΩ 
vertex
ΩΩ 
;
ΩΩ 
vertex
ææ 
=
ææ 
vertices
ææ 
[
ææ 
	dst_Index
ææ '
+
ææ( )
$num
ææ* +
]
ææ+ ,
;
ææ, -
vertices
øø 
[
øø 
	dst_Index
øø 
+
øø  
$num
øø! "
]
øø" #
=
øø$ %
vertices
øø& .
[
øø. /
	src_Index
øø/ 8
+
øø9 :
$num
øø; <
]
øø< =
;
øø= >
vertices
¿¿ 
[
¿¿ 
	src_Index
¿¿ 
+
¿¿  
$num
¿¿! "
]
¿¿" #
=
¿¿$ %
vertex
¿¿& ,
;
¿¿, -
vertex
¬¬ 
=
¬¬ 
vertices
¬¬ 
[
¬¬ 
	dst_Index
¬¬ '
+
¬¬( )
$num
¬¬* +
]
¬¬+ ,
;
¬¬, -
vertices
√√ 
[
√√ 
	dst_Index
√√ 
+
√√  
$num
√√! "
]
√√" #
=
√√$ %
vertices
√√& .
[
√√. /
	src_Index
√√/ 8
+
√√9 :
$num
√√; <
]
√√< =
;
√√= >
vertices
ƒƒ 
[
ƒƒ 
	src_Index
ƒƒ 
+
ƒƒ  
$num
ƒƒ! "
]
ƒƒ" #
=
ƒƒ$ %
vertex
ƒƒ& ,
;
ƒƒ, -
vertex
∆∆ 
=
∆∆ 
vertices
∆∆ 
[
∆∆ 
	dst_Index
∆∆ '
+
∆∆( )
$num
∆∆* +
]
∆∆+ ,
;
∆∆, -
vertices
«« 
[
«« 
	dst_Index
«« 
+
««  
$num
««! "
]
««" #
=
««$ %
vertices
««& .
[
««. /
	src_Index
««/ 8
+
««9 :
$num
««; <
]
««< =
;
««= >
vertices
»» 
[
»» 
	src_Index
»» 
+
»»  
$num
»»! "
]
»»" #
=
»»$ %
vertex
»»& ,
;
»», -
vertex
   
=
   
vertices
   
[
   
	dst_Index
   '
+
  ( )
$num
  * +
]
  + ,
;
  , -
vertices
ÀÀ 
[
ÀÀ 
	dst_Index
ÀÀ 
+
ÀÀ  
$num
ÀÀ! "
]
ÀÀ" #
=
ÀÀ$ %
vertices
ÀÀ& .
[
ÀÀ. /
	src_Index
ÀÀ/ 8
+
ÀÀ9 :
$num
ÀÀ; <
]
ÀÀ< =
;
ÀÀ= >
vertices
ÃÃ 
[
ÃÃ 
	src_Index
ÃÃ 
+
ÃÃ  
$num
ÃÃ! "
]
ÃÃ" #
=
ÃÃ$ %
vertex
ÃÃ& ,
;
ÃÃ, -
Vector2
–– 
uvs
–– 
;
–– 
uvs
—— 
=
—— 
uvs0
—— 
[
—— 
	dst_Index
——  
+
——! "
$num
——# $
]
——$ %
;
——% &
uvs0
““ 
[
““ 
	dst_Index
““ 
+
““ 
$num
““ 
]
““ 
=
““  !
uvs0
““" &
[
““& '
	src_Index
““' 0
+
““1 2
$num
““3 4
]
““4 5
;
““5 6
uvs0
”” 
[
”” 
	src_Index
”” 
+
”” 
$num
”” 
]
”” 
=
””  !
uvs
””" %
;
””% &
uvs
’’ 
=
’’ 
uvs0
’’ 
[
’’ 
	dst_Index
’’  
+
’’! "
$num
’’# $
]
’’$ %
;
’’% &
uvs0
÷÷ 
[
÷÷ 
	dst_Index
÷÷ 
+
÷÷ 
$num
÷÷ 
]
÷÷ 
=
÷÷  !
uvs0
÷÷" &
[
÷÷& '
	src_Index
÷÷' 0
+
÷÷1 2
$num
÷÷3 4
]
÷÷4 5
;
÷÷5 6
uvs0
◊◊ 
[
◊◊ 
	src_Index
◊◊ 
+
◊◊ 
$num
◊◊ 
]
◊◊ 
=
◊◊  !
uvs
◊◊" %
;
◊◊% &
uvs
ŸŸ 
=
ŸŸ 
uvs0
ŸŸ 
[
ŸŸ 
	dst_Index
ŸŸ  
+
ŸŸ! "
$num
ŸŸ# $
]
ŸŸ$ %
;
ŸŸ% &
uvs0
⁄⁄ 
[
⁄⁄ 
	dst_Index
⁄⁄ 
+
⁄⁄ 
$num
⁄⁄ 
]
⁄⁄ 
=
⁄⁄  !
uvs0
⁄⁄" &
[
⁄⁄& '
	src_Index
⁄⁄' 0
+
⁄⁄1 2
$num
⁄⁄3 4
]
⁄⁄4 5
;
⁄⁄5 6
uvs0
€€ 
[
€€ 
	src_Index
€€ 
+
€€ 
$num
€€ 
]
€€ 
=
€€  !
uvs
€€" %
;
€€% &
uvs
›› 
=
›› 
uvs0
›› 
[
›› 
	dst_Index
››  
+
››! "
$num
››# $
]
››$ %
;
››% &
uvs0
ﬁﬁ 
[
ﬁﬁ 
	dst_Index
ﬁﬁ 
+
ﬁﬁ 
$num
ﬁﬁ 
]
ﬁﬁ 
=
ﬁﬁ  !
uvs0
ﬁﬁ" &
[
ﬁﬁ& '
	src_Index
ﬁﬁ' 0
+
ﬁﬁ1 2
$num
ﬁﬁ3 4
]
ﬁﬁ4 5
;
ﬁﬁ5 6
uvs0
ﬂﬂ 
[
ﬂﬂ 
	src_Index
ﬂﬂ 
+
ﬂﬂ 
$num
ﬂﬂ 
]
ﬂﬂ 
=
ﬂﬂ  !
uvs
ﬂﬂ" %
;
ﬂﬂ% &
uvs
‚‚ 
=
‚‚ 
uvs2
‚‚ 
[
‚‚ 
	dst_Index
‚‚  
+
‚‚! "
$num
‚‚# $
]
‚‚$ %
;
‚‚% &
uvs2
„„ 
[
„„ 
	dst_Index
„„ 
+
„„ 
$num
„„ 
]
„„ 
=
„„  !
uvs2
„„" &
[
„„& '
	src_Index
„„' 0
+
„„1 2
$num
„„3 4
]
„„4 5
;
„„5 6
uvs2
‰‰ 
[
‰‰ 
	src_Index
‰‰ 
+
‰‰ 
$num
‰‰ 
]
‰‰ 
=
‰‰  !
uvs
‰‰" %
;
‰‰% &
uvs
ÊÊ 
=
ÊÊ 
uvs2
ÊÊ 
[
ÊÊ 
	dst_Index
ÊÊ  
+
ÊÊ! "
$num
ÊÊ# $
]
ÊÊ$ %
;
ÊÊ% &
uvs2
ÁÁ 
[
ÁÁ 
	dst_Index
ÁÁ 
+
ÁÁ 
$num
ÁÁ 
]
ÁÁ 
=
ÁÁ  !
uvs2
ÁÁ" &
[
ÁÁ& '
	src_Index
ÁÁ' 0
+
ÁÁ1 2
$num
ÁÁ3 4
]
ÁÁ4 5
;
ÁÁ5 6
uvs2
ËË 
[
ËË 
	src_Index
ËË 
+
ËË 
$num
ËË 
]
ËË 
=
ËË  !
uvs
ËË" %
;
ËË% &
uvs
ÍÍ 
=
ÍÍ 
uvs2
ÍÍ 
[
ÍÍ 
	dst_Index
ÍÍ  
+
ÍÍ! "
$num
ÍÍ# $
]
ÍÍ$ %
;
ÍÍ% &
uvs2
ÎÎ 
[
ÎÎ 
	dst_Index
ÎÎ 
+
ÎÎ 
$num
ÎÎ 
]
ÎÎ 
=
ÎÎ  !
uvs2
ÎÎ" &
[
ÎÎ& '
	src_Index
ÎÎ' 0
+
ÎÎ1 2
$num
ÎÎ3 4
]
ÎÎ4 5
;
ÎÎ5 6
uvs2
ÏÏ 
[
ÏÏ 
	src_Index
ÏÏ 
+
ÏÏ 
$num
ÏÏ 
]
ÏÏ 
=
ÏÏ  !
uvs
ÏÏ" %
;
ÏÏ% &
uvs
ÓÓ 
=
ÓÓ 
uvs2
ÓÓ 
[
ÓÓ 
	dst_Index
ÓÓ  
+
ÓÓ! "
$num
ÓÓ# $
]
ÓÓ$ %
;
ÓÓ% &
uvs2
ÔÔ 
[
ÔÔ 
	dst_Index
ÔÔ 
+
ÔÔ 
$num
ÔÔ 
]
ÔÔ 
=
ÔÔ  !
uvs2
ÔÔ" &
[
ÔÔ& '
	src_Index
ÔÔ' 0
+
ÔÔ1 2
$num
ÔÔ3 4
]
ÔÔ4 5
;
ÔÔ5 6
uvs2
 
[
 
	src_Index
 
+
 
$num
 
]
 
=
  !
uvs
" %
;
% &
Color32
ÛÛ 
color
ÛÛ 
;
ÛÛ 
color
ÙÙ 
=
ÙÙ 
colors32
ÙÙ 
[
ÙÙ 
	dst_Index
ÙÙ &
+
ÙÙ' (
$num
ÙÙ) *
]
ÙÙ* +
;
ÙÙ+ ,
colors32
ıı 
[
ıı 
	dst_Index
ıı 
+
ıı  
$num
ıı! "
]
ıı" #
=
ıı$ %
colors32
ıı& .
[
ıı. /
	src_Index
ıı/ 8
+
ıı9 :
$num
ıı; <
]
ıı< =
;
ıı= >
colors32
ˆˆ 
[
ˆˆ 
	src_Index
ˆˆ 
+
ˆˆ  
$num
ˆˆ! "
]
ˆˆ" #
=
ˆˆ$ %
color
ˆˆ& +
;
ˆˆ+ ,
color
¯¯ 
=
¯¯ 
colors32
¯¯ 
[
¯¯ 
	dst_Index
¯¯ &
+
¯¯' (
$num
¯¯) *
]
¯¯* +
;
¯¯+ ,
colors32
˘˘ 
[
˘˘ 
	dst_Index
˘˘ 
+
˘˘  
$num
˘˘! "
]
˘˘" #
=
˘˘$ %
colors32
˘˘& .
[
˘˘. /
	src_Index
˘˘/ 8
+
˘˘9 :
$num
˘˘; <
]
˘˘< =
;
˘˘= >
colors32
˙˙ 
[
˙˙ 
	src_Index
˙˙ 
+
˙˙  
$num
˙˙! "
]
˙˙" #
=
˙˙$ %
color
˙˙& +
;
˙˙+ ,
color
¸¸ 
=
¸¸ 
colors32
¸¸ 
[
¸¸ 
	dst_Index
¸¸ &
+
¸¸' (
$num
¸¸) *
]
¸¸* +
;
¸¸+ ,
colors32
˝˝ 
[
˝˝ 
	dst_Index
˝˝ 
+
˝˝  
$num
˝˝! "
]
˝˝" #
=
˝˝$ %
colors32
˝˝& .
[
˝˝. /
	src_Index
˝˝/ 8
+
˝˝9 :
$num
˝˝; <
]
˝˝< =
;
˝˝= >
colors32
˛˛ 
[
˛˛ 
	src_Index
˛˛ 
+
˛˛  
$num
˛˛! "
]
˛˛" #
=
˛˛$ %
color
˛˛& +
;
˛˛+ ,
color
ÄÄ 
=
ÄÄ 
colors32
ÄÄ 
[
ÄÄ 
	dst_Index
ÄÄ &
+
ÄÄ' (
$num
ÄÄ) *
]
ÄÄ* +
;
ÄÄ+ ,
colors32
ÅÅ 
[
ÅÅ 
	dst_Index
ÅÅ 
+
ÅÅ  
$num
ÅÅ! "
]
ÅÅ" #
=
ÅÅ$ %
colors32
ÅÅ& .
[
ÅÅ. /
	src_Index
ÅÅ/ 8
+
ÅÅ9 :
$num
ÅÅ; <
]
ÅÅ< =
;
ÅÅ= >
colors32
ÇÇ 
[
ÇÇ 
	src_Index
ÇÇ 
+
ÇÇ  
$num
ÇÇ! "
]
ÇÇ" #
=
ÇÇ$ %
color
ÇÇ& +
;
ÇÇ+ ,
}
ÉÉ 	
}
üü 
}†† ¬
ìD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_ObjectPool.cs
	namespace 	
TMPro
 
{ 
internal		 
class		 
TMP_ObjectPool		 !
<		! "
T		" #
>		# $
where		% *
T		+ ,
:		- .
new		/ 2
(		2 3
)		3 4
{

 
private 
readonly 
Stack 
< 
T  
>  !
m_Stack" )
=* +
new, /
Stack0 5
<5 6
T6 7
>7 8
(8 9
)9 :
;: ;
private 
readonly 
UnityAction $
<$ %
T% &
>& '
m_ActionOnGet( 5
;5 6
private 
readonly 
UnityAction $
<$ %
T% &
>& '
m_ActionOnRelease( 9
;9 :
public 
int 
countAll 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
public 
int 
countActive 
{  
get! $
{% &
return' -
countAll. 6
-7 8
countInactive9 F
;F G
}H I
}J K
public 
int 
countInactive  
{! "
get# &
{' (
return) /
m_Stack0 7
.7 8
Count8 =
;= >
}? @
}A B
public 
TMP_ObjectPool 
( 
UnityAction )
<) *
T* +
>+ ,
actionOnGet- 8
,8 9
UnityAction: E
<E F
TF G
>G H
actionOnReleaseI X
)X Y
{ 	
m_ActionOnGet 
= 
actionOnGet '
;' (
m_ActionOnRelease 
= 
actionOnRelease  /
;/ 0
} 	
public 
T 
Get 
( 
) 
{ 	
T 
element 
; 
if 
( 
m_Stack 
. 
Count 
==  
$num! "
)" #
{ 
element 
= 
new 
T 
(  
)  !
;! "
countAll 
++ 
; 
}   
else!! 
{"" 
element## 
=## 
m_Stack## !
.##! "
Pop##" %
(##% &
)##& '
;##' (
}$$ 
if%% 
(%% 
m_ActionOnGet%% 
!=%%  
null%%! %
)%%% &
m_ActionOnGet&& 
(&& 
element&& %
)&&% &
;&&& '
return'' 
element'' 
;'' 
}(( 	
public** 
void** 
Release** 
(** 
T** 
element** %
)**% &
{++ 	
if,, 
(,, 
m_Stack,, 
.,, 
Count,, 
>,, 
$num,,  !
&&,," $
ReferenceEquals,,% 4
(,,4 5
m_Stack,,5 <
.,,< =
Peek,,= A
(,,A B
),,B C
,,,C D
element,,E L
),,L M
),,M N
Debug-- 
.-- 
LogError-- 
(-- 
$str-- k
)--k l
;--l m
if.. 
(.. 
m_ActionOnRelease.. !
!=.." $
null..% )
)..) *
m_ActionOnRelease// !
(//! "
element//" )
)//) *
;//* +
m_Stack00 
.00 
Push00 
(00 
element00  
)00  !
;00! "
}11 	
}22 
}33 ïQ
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_UpdateRegistery.cs
	namespace 	
TMPro
 
{		 
public 

class 
TMP_UpdateRegistry #
{ 
private 
static 
TMP_UpdateRegistry )

s_Instance* 4
;4 5
private 
readonly 
List 
< 
ICanvasElement ,
>, - 
m_LayoutRebuildQueue. B
=C D
newE H
ListI M
<M N
ICanvasElementN \
>\ ]
(] ^
)^ _
;_ `
private 
HashSet 
< 
int 
> 
m_LayoutQueueLookup 0
=1 2
new3 6
HashSet7 >
<> ?
int? B
>B C
(C D
)D E
;E F
private 
readonly 
List 
< 
ICanvasElement ,
>, -!
m_GraphicRebuildQueue. C
=D E
newF I
ListJ N
<N O
ICanvasElementO ]
>] ^
(^ _
)_ `
;` a
private 
HashSet 
< 
int 
>  
m_GraphicQueueLookup 1
=2 3
new4 7
HashSet8 ?
<? @
int@ C
>C D
(D E
)E F
;F G
public 
static 
TMP_UpdateRegistry (
instance) 1
{ 	
get 
{   
if!! 
(!! 
TMP_UpdateRegistry!! &
.!!& '

s_Instance!!' 1
==!!2 4
null!!5 9
)!!9 :
TMP_UpdateRegistry"" &
.""& '

s_Instance""' 1
=""2 3
new""4 7
TMP_UpdateRegistry""8 J
(""J K
)""K L
;""L M
return## 
TMP_UpdateRegistry## )
.##) *

s_Instance##* 4
;##4 5
}$$ 
}%% 	
	protected++ 
TMP_UpdateRegistry++ $
(++$ %
)++% &
{,, 	
Canvas.. 
... 
willRenderCanvases.. %
+=..& (1
%PerformUpdateForCanvasRendererObjects..) N
;..N O
}// 	
public66 
static66 
void66 1
%RegisterCanvasElementForLayoutRebuild66 @
(66@ A
ICanvasElement66A O
element66P W
)66W X
{77 	
TMP_UpdateRegistry88 
.88 
instance88 '
.88' (9
-InternalRegisterCanvasElementForLayoutRebuild88( U
(88U V
element88V ]
)88] ^
;88^ _
}99 	
private;; 
bool;; 9
-InternalRegisterCanvasElementForLayoutRebuild;; B
(;;B C
ICanvasElement;;C Q
element;;R Y
);;Y Z
{<< 	
int== 
id== 
=== 
(== 
element== 
as==  
Object==! '
)==' (
.==( )
GetInstanceID==) 6
(==6 7
)==7 8
;==8 9
if?? 
(?? 
m_LayoutQueueLookup?? #
.??# $
Contains??$ ,
(??, -
id??- /
)??/ 0
)??0 1
return@@ 
false@@ 
;@@ 
m_LayoutQueueLookupBB 
.BB  
AddBB  #
(BB# $
idBB$ &
)BB& '
;BB' ( 
m_LayoutRebuildQueueCC  
.CC  !
AddCC! $
(CC$ %
elementCC% ,
)CC, -
;CC- .
returnEE 
trueEE 
;EE 
}FF 	
publicMM 
staticMM 
voidMM 2
&RegisterCanvasElementForGraphicRebuildMM A
(MMA B
ICanvasElementMMB P
elementMMQ X
)MMX Y
{NN 	
TMP_UpdateRegistryOO 
.OO 
instanceOO '
.OO' (:
.InternalRegisterCanvasElementForGraphicRebuildOO( V
(OOV W
elementOOW ^
)OO^ _
;OO_ `
}PP 	
privateRR 
boolRR :
.InternalRegisterCanvasElementForGraphicRebuildRR C
(RRC D
ICanvasElementRRD R
elementRRS Z
)RRZ [
{SS 	
intTT 
idTT 
=TT 
(TT 
elementTT 
asTT  
ObjectTT! '
)TT' (
.TT( )
GetInstanceIDTT) 6
(TT6 7
)TT7 8
;TT8 9
ifVV 
(VV  
m_GraphicQueueLookupVV $
.VV$ %
ContainsVV% -
(VV- .
idVV. 0
)VV0 1
)VV1 2
returnWW 
falseWW 
;WW  
m_GraphicQueueLookupYY  
.YY  !
AddYY! $
(YY$ %
idYY% '
)YY' (
;YY( )!
m_GraphicRebuildQueueZZ !
.ZZ! "
AddZZ" %
(ZZ% &
elementZZ& -
)ZZ- .
;ZZ. /
return\\ 
true\\ 
;\\ 
}]] 	
privatecc 
voidcc 1
%PerformUpdateForCanvasRendererObjectscc :
(cc: ;
)cc; <
{dd 	
forii 
(ii 
intii 
indexii 
=ii 
$numii 
;ii 
indexii  %
<ii& ' 
m_LayoutRebuildQueueii( <
.ii< =
Countii= B
;iiB C
indexiiD I
++iiI K
)iiK L
{jj 
ICanvasElementkk 
elementkk &
=kk' (
TMP_UpdateRegistrykk) ;
.kk; <
instancekk< D
.kkD E 
m_LayoutRebuildQueuekkE Y
[kkY Z
indexkkZ _
]kk_ `
;kk` a
elementmm 
.mm 
Rebuildmm 
(mm  
CanvasUpdatemm  ,
.mm, -
	Prelayoutmm- 6
)mm6 7
;mm7 8
}nn 
ifpp 
(pp  
m_LayoutRebuildQueuepp $
.pp$ %
Countpp% *
>pp+ ,
$numpp- .
)pp. /
{qq  
m_LayoutRebuildQueuerr $
.rr$ %
Clearrr% *
(rr* +
)rr+ ,
;rr, -
m_LayoutQueueLookupss #
.ss# $
Clearss$ )
(ss) *
)ss* +
;ss+ ,
}tt 
forzz 
(zz 
intzz 
indexzz 
=zz 
$numzz 
;zz 
indexzz  %
<zz& '!
m_GraphicRebuildQueuezz( =
.zz= >
Countzz> C
;zzC D
indexzzE J
++zzJ L
)zzL M
{{{ 
ICanvasElement|| 
element|| &
=||' (
TMP_UpdateRegistry||) ;
.||; <
instance||< D
.||D E!
m_GraphicRebuildQueue||E Z
[||Z [
index||[ `
]||` a
;||a b
element~~ 
.~~ 
Rebuild~~ 
(~~  
CanvasUpdate~~  ,
.~~, -
	PreRender~~- 6
)~~6 7
;~~7 8
} 
if
ÇÇ 
(
ÇÇ #
m_GraphicRebuildQueue
ÇÇ %
.
ÇÇ% &
Count
ÇÇ& +
>
ÇÇ, -
$num
ÇÇ. /
)
ÇÇ/ 0
{
ÉÉ #
m_GraphicRebuildQueue
ÑÑ %
.
ÑÑ% &
Clear
ÑÑ& +
(
ÑÑ+ ,
)
ÑÑ, -
;
ÑÑ- ."
m_GraphicQueueLookup
ÖÖ $
.
ÖÖ$ %
Clear
ÖÖ% *
(
ÖÖ* +
)
ÖÖ+ ,
;
ÖÖ, -
}
ÜÜ 
}
áá 	
private
çç 
void
çç 1
#PerformUpdateForMeshRendererObjects
çç 8
(
çç8 9
)
çç9 :
{
éé 	
Debug
èè 
.
èè 
Log
èè 
(
èè 
$str
èè ?
)
èè? @
;
èè@ A
}
êê 	
public
óó 
static
óó 
void
óó /
!UnRegisterCanvasElementForRebuild
óó <
(
óó< =
ICanvasElement
óó= K
element
óóL S
)
óóS T
{
òò 	 
TMP_UpdateRegistry
ôô 
.
ôô 
instance
ôô '
.
ôô' (=
/InternalUnRegisterCanvasElementForLayoutRebuild
ôô( W
(
ôôW X
element
ôôX _
)
ôô_ `
;
ôô` a 
TMP_UpdateRegistry
öö 
.
öö 
instance
öö '
.
öö' (>
0InternalUnRegisterCanvasElementForGraphicRebuild
öö( X
(
ööX Y
element
ööY `
)
öö` a
;
ööa b
}
õõ 	
private
ûû 
void
ûû =
/InternalUnRegisterCanvasElementForLayoutRebuild
ûû D
(
ûûD E
ICanvasElement
ûûE S
element
ûûT [
)
ûû[ \
{
üü 	
int
†† 
id
†† 
=
†† 
(
†† 
element
†† 
as
††  
Object
††! '
)
††' (
.
††( )
GetInstanceID
††) 6
(
††6 7
)
††7 8
;
††8 9 
TMP_UpdateRegistry
££ 
.
££ 
instance
££ '
.
££' ("
m_LayoutRebuildQueue
££( <
.
££< =
Remove
££= C
(
££C D
element
££D K
)
££K L
;
££L M"
m_GraphicQueueLookup
§§  
.
§§  !
Remove
§§! '
(
§§' (
id
§§( *
)
§§* +
;
§§+ ,
}
•• 	
private
®® 
void
®® >
0InternalUnRegisterCanvasElementForGraphicRebuild
®® E
(
®®E F
ICanvasElement
®®F T
element
®®U \
)
®®\ ]
{
©© 	
int
™™ 
id
™™ 
=
™™ 
(
™™ 
element
™™ 
as
™™  
Object
™™! '
)
™™' (
.
™™( )
GetInstanceID
™™) 6
(
™™6 7
)
™™7 8
;
™™8 9 
TMP_UpdateRegistry
≠≠ 
.
≠≠ 
instance
≠≠ '
.
≠≠' (#
m_GraphicRebuildQueue
≠≠( =
.
≠≠= >
Remove
≠≠> D
(
≠≠D E
element
≠≠E L
)
≠≠L M
;
≠≠M N!
m_LayoutQueueLookup
ÆÆ 
.
ÆÆ  
Remove
ÆÆ  &
(
ÆÆ& '
id
ÆÆ' )
)
ÆÆ) *
;
ÆÆ* +
}
ØØ 	
}
∞∞ 
}±± §%
ôD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_ResourcesManager.cs
	namespace 	
TMPro
 
{ 
public 

class 
TMP_ResourceManager $
{ 
private 
static 
readonly 
TMP_ResourceManager  3

s_instance4 >
=? @
newA D
TMP_ResourceManagerE X
(X Y
)Y Z
;Z [
static 
TMP_ResourceManager "
(" #
)# $
{% &
}' (
private 
static 
TMP_Settings #
s_TextSettings$ 2
;2 3
internal 
static 
TMP_Settings $
GetTextSettings% 4
(4 5
)5 6
{ 	
if 
( 
s_TextSettings 
== !
null" &
)& '
{ 
s_TextSettings 
=  
	Resources! *
.* +
Load+ /
</ 0
TMP_Settings0 <
>< =
(= >
$str> L
)L M
;M N
if 
( 
s_TextSettings "
==# %
null& *
)* +
{   -
!TMP_PackageResourceImporterWindow"" 5
.""5 6%
ShowPackageImporterWindow""6 O
(""O P
)""P Q
;""Q R
}## 
}%% 
return'' 
s_TextSettings'' !
;''! "
}(( 	
private.. 
static.. 
readonly.. 
List..  $
<..$ %
TMP_FontAsset..% 2
>..2 3!
s_FontAssetReferences..4 I
=..J K
new..L O
List..P T
<..T U
TMP_FontAsset..U b
>..b c
(..c d
)..d e
;..e f
private// 
static// 
readonly// 

Dictionary//  *
<//* +
int//+ .
,//. /
TMP_FontAsset//0 =
>//= >&
s_FontAssetReferenceLookup//? Y
=//Z [
new//\ _

Dictionary//` j
<//j k
int//k n
,//n o
TMP_FontAsset//p }
>//} ~
(//~ 
)	// Ä
;
//Ä Å
public55 
static55 
void55 
AddFontAsset55 '
(55' (
TMP_FontAsset55( 5
	fontAsset556 ?
)55? @
{66 	
int77 
hashcode77 
=77 
	fontAsset77 $
.77$ %
hashCode77% -
;77- .
if99 
(99 &
s_FontAssetReferenceLookup99 *
.99* +
ContainsKey99+ 6
(996 7
hashcode997 ?
)99? @
)99@ A
return:: 
;:: !
s_FontAssetReferences<< !
.<<! "
Add<<" %
(<<% &
	fontAsset<<& /
)<</ 0
;<<0 1&
s_FontAssetReferenceLookup== &
.==& '
Add==' *
(==* +
hashcode==+ 3
,==3 4
	fontAsset==5 >
)==> ?
;==? @
}>> 	
publicFF 
staticFF 
boolFF 
TryGetFontAssetFF *
(FF* +
intFF+ .
hashcodeFF/ 7
,FF7 8
outFF9 <
TMP_FontAssetFF= J
	fontAssetFFK T
)FFT U
{GG 	
	fontAssetHH 
=HH 
nullHH 
;HH 
returnJJ &
s_FontAssetReferenceLookupJJ -
.JJ- .
TryGetValueJJ. 9
(JJ9 :
hashcodeJJ: B
,JJB C
outJJD G
	fontAssetJJH Q
)JJQ R
;JJR S
}KK 	
internalNN 
staticNN 
voidNN !
RebuildFontAssetCacheNN 2
(NN2 3
intNN3 6

instanceIDNN7 A
)NNA B
{OO 	
forQQ 
(QQ 
intQQ 
iQQ 
=QQ 
$numQQ 
;QQ 
iQQ 
<QQ !
s_FontAssetReferencesQQ  5
.QQ5 6
CountQQ6 ;
;QQ; <
iQQ= >
++QQ> @
)QQ@ A
{RR 
TMP_FontAssetSS 
	fontAssetSS '
=SS( )!
s_FontAssetReferencesSS* ?
[SS? @
iSS@ A
]SSA B
;SSB C
ifUU 
(UU 
	fontAssetUU 
.UU %
FallbackSearchQueryLookupUU 7
.UU7 8
ContainsUU8 @
(UU@ A

instanceIDUUA K
)UUK L
)UUL M
	fontAssetVV 
.VV #
ReadFontAssetDefinitionVV 5
(VV5 6
)VV6 7
;VV7 8
}WW 
}XX 	
}YY 
}ZZ ÊÖ
êD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_SubMesh.cs
	namespace 	
TMPro
 
{		 
[

 
RequireComponent

 
(

 
typeof

 
(

 
MeshRenderer

 )
)

) *
)

* +
]

+ ,
[ 
ExecuteAlways 
] 
public 

class 
TMP_SubMesh 
: 
MonoBehaviour ,
{ 
public 
TMP_FontAsset 
	fontAsset &
{ 	
get 
{ 
return 
m_fontAsset $
;$ %
}& '
set 
{ 
m_fontAsset 
= 
value  %
;% &
}' (
} 	
[ 	
SerializeField	 
] 
private 
TMP_FontAsset 
m_fontAsset )
;) *
public 
TMP_SpriteAsset 
spriteAsset *
{ 	
get 
{ 
return 
m_spriteAsset &
;& '
}( )
set   
{   
m_spriteAsset   
=    !
value  " '
;  ' (
}  ) *
}!! 	
["" 	
SerializeField""	 
]"" 
private## 
TMP_SpriteAsset## 
m_spriteAsset##  -
;##- .
public)) 
Material)) 
material))  
{** 	
get,, 
{,, 
return,, 
GetMaterial,, $
(,,$ %
m_sharedMaterial,,% 5
),,5 6
;,,6 7
},,8 9
set// 
{00 
if11 
(11 
m_sharedMaterial11 $
.11$ %
GetInstanceID11% 2
(112 3
)113 4
==115 7
value118 =
.11= >
GetInstanceID11> K
(11K L
)11L M
)11M N
return22 
;22 
m_sharedMaterial44  
=44! "

m_material44# -
=44. /
value440 5
;445 6
	m_padding66 
=66 !
GetPaddingForMaterial66 1
(661 2
)662 3
;663 4
SetVerticesDirty88  
(88  !
)88! "
;88" #
SetMaterialDirty99  
(99  !
)99! "
;99" #
}:: 
};; 	
[<< 	
SerializeField<<	 
]<< 
private== 
Material== 

m_material== #
;==# $
publicCC 
MaterialCC 
sharedMaterialCC &
{DD 	
getEE 
{EE 
returnEE 
m_sharedMaterialEE )
;EE) *
}EE+ ,
setFF 
{FF 
SetSharedMaterialFF #
(FF# $
valueFF$ )
)FF) *
;FF* +
}FF, -
}GG 	
[HH 	
SerializeFieldHH	 
]HH 
privateII 
MaterialII 
m_sharedMaterialII )
;II) *
publicOO 
MaterialOO 
fallbackMaterialOO (
{PP 	
getQQ 
{QQ 
returnQQ 
m_fallbackMaterialQQ +
;QQ+ ,
}QQ- .
setRR 
{SS 
ifTT 
(TT 
m_fallbackMaterialTT &
==TT' )
valueTT* /
)TT/ 0
returnTT1 7
;TT7 8
ifVV 
(VV 
m_fallbackMaterialVV &
!=VV' )
nullVV* .
&&VV/ 1
m_fallbackMaterialVV2 D
!=VVE G
valueVVH M
)VVM N
TMP_MaterialManagerWW '
.WW' (#
ReleaseFallbackMaterialWW( ?
(WW? @
m_fallbackMaterialWW@ R
)WWR S
;WWS T
m_fallbackMaterialYY "
=YY# $
valueYY% *
;YY* +
TMP_MaterialManagerZZ #
.ZZ# $(
AddFallbackMaterialReferenceZZ$ @
(ZZ@ A
m_fallbackMaterialZZA S
)ZZS T
;ZZT U
SetSharedMaterial\\ !
(\\! "
m_fallbackMaterial\\" 4
)\\4 5
;\\5 6
}]] 
}^^ 	
private__ 
Material__ 
m_fallbackMaterial__ +
;__+ ,
publicee 
Materialee "
fallbackSourceMaterialee .
{ff 	
getgg 
{gg 
returngg $
m_fallbackSourceMaterialgg 1
;gg1 2
}gg3 4
sethh 
{hh $
m_fallbackSourceMaterialhh *
=hh+ ,
valuehh- 2
;hh2 3
}hh4 5
}ii 	
privatejj 
Materialjj $
m_fallbackSourceMaterialjj 1
;jj1 2
publicpp 
boolpp 
isDefaultMaterialpp %
{qq 	
getrr 
{rr 
returnrr 
m_isDefaultMaterialrr ,
;rr, -
}rr. /
setss 
{ss 
m_isDefaultMaterialss %
=ss& '
valuess( -
;ss- .
}ss/ 0
}tt 	
[uu 	
SerializeFielduu	 
]uu 
privatevv 
boolvv 
m_isDefaultMaterialvv (
;vv( )
public|| 
float|| 
padding|| 
{}} 	
get~~ 
{~~ 
return~~ 
	m_padding~~ "
;~~" #
}~~$ %
set 
{ 
	m_padding 
= 
value #
;# $
}% &
}
ÄÄ 	
[
ÅÅ 	
SerializeField
ÅÅ	 
]
ÅÅ 
private
ÇÇ 
float
ÇÇ 
	m_padding
ÇÇ 
;
ÇÇ  
public
àà 
new
àà 
Renderer
àà 
renderer
àà $
{
ââ 	
get
ää 
{
ää 
if
ää 
(
ää 

m_renderer
ää  
==
ää! #
null
ää$ (
)
ää( )

m_renderer
ää* 4
=
ää5 6
GetComponent
ää7 C
<
ääC D
Renderer
ääD L
>
ääL M
(
ääM N
)
ääN O
;
ääO P
return
åå 

m_renderer
åå !
;
åå! "
}
çç 
}
éé 	
[
èè 	
SerializeField
èè	 
]
èè 
private
êê 
Renderer
êê 

m_renderer
êê #
;
êê# $
public
ññ 

MeshFilter
ññ 

meshFilter
ññ $
{
óó 	
get
òò 
{
ôô 
if
öö 
(
öö 
m_meshFilter
öö  
==
öö! #
null
öö$ (
)
öö( )
{
õõ 
m_meshFilter
úú  
=
úú! "
GetComponent
úú# /
<
úú/ 0

MeshFilter
úú0 :
>
úú: ;
(
úú; <
)
úú< =
;
úú= >
if
ûû 
(
ûû 
m_meshFilter
ûû $
==
ûû% '
null
ûû( ,
)
ûû, -
{
üü 
m_meshFilter
†† $
=
††% &

gameObject
††' 1
.
††1 2
AddComponent
††2 >
<
††> ?

MeshFilter
††? I
>
††I J
(
††J K
)
††K L
;
††L M
m_meshFilter
°° $
.
°°$ %
	hideFlags
°°% .
=
°°/ 0
	HideFlags
°°1 :
.
°°: ;
HideInInspector
°°; J
|
°°K L
	HideFlags
°°M V
.
°°V W
HideAndDontSave
°°W f
;
°°f g
}
¢¢ 
}
££ 
return
•• 
m_meshFilter
•• #
;
••# $
}
¶¶ 
}
ßß 	
private
®® 

MeshFilter
®® 
m_meshFilter
®® '
;
®®' (
public
ÆÆ 
Mesh
ÆÆ 
mesh
ÆÆ 
{
ØØ 	
get
∞∞ 
{
±± 
if
≤≤ 
(
≤≤ 
m_mesh
≤≤ 
==
≤≤ 
null
≤≤ "
)
≤≤" #
{
≥≥ 
m_mesh
¥¥ 
=
¥¥ 
new
¥¥  
Mesh
¥¥! %
(
¥¥% &
)
¥¥& '
;
¥¥' (
m_mesh
µµ 
.
µµ 
	hideFlags
µµ $
=
µµ% &
	HideFlags
µµ' 0
.
µµ0 1
HideAndDontSave
µµ1 @
;
µµ@ A
}
∂∂ 
return
∏∏ 
m_mesh
∏∏ 
;
∏∏ 
}
ππ 
set
∫∫ 
{
∫∫ 
m_mesh
∫∫ 
=
∫∫ 
value
∫∫  
;
∫∫  !
}
∫∫" #
}
ªª 	
private
ºº 
Mesh
ºº 
m_mesh
ºº 
;
ºº 
public
⁄⁄ 
TMP_Text
⁄⁄ 
textComponent
⁄⁄ %
{
€€ 	
get
‹‹ 
{
›› 
if
ﬁﬁ 
(
ﬁﬁ 
m_TextComponent
ﬁﬁ #
==
ﬁﬁ$ &
null
ﬁﬁ' +
)
ﬁﬁ+ ,
m_TextComponent
ﬂﬂ #
=
ﬂﬂ$ %"
GetComponentInParent
ﬂﬂ& :
<
ﬂﬂ: ;
TextMeshPro
ﬂﬂ; F
>
ﬂﬂF G
(
ﬂﬂG H
)
ﬂﬂH I
;
ﬂﬂI J
return
·· 
m_TextComponent
·· &
;
··& '
}
‚‚ 
}
„„ 	
[
‰‰ 	
SerializeField
‰‰	 
]
‰‰ 
private
ÂÂ 
TextMeshPro
ÂÂ 
m_TextComponent
ÂÂ +
;
ÂÂ+ ,
[
ÁÁ 	
NonSerialized
ÁÁ	 
]
ÁÁ 
private
ËË 
bool
ËË %
m_isRegisteredForEvents
ËË ,
;
ËË, -
public
ÎÎ 
static
ÎÎ 
TMP_SubMesh
ÎÎ !
AddSubTextObject
ÎÎ" 2
(
ÎÎ2 3
TextMeshPro
ÎÎ3 >
textComponent
ÎÎ? L
,
ÎÎL M
MaterialReference
ÎÎN _
materialReference
ÎÎ` q
)
ÎÎq r
{
ÏÏ 	

GameObject
ÌÌ 
go
ÌÌ 
=
ÌÌ 
new
ÌÌ 

GameObject
ÌÌ  *
(
ÌÌ* +
$str
ÌÌ+ :
+
ÌÌ; <
materialReference
ÌÌ= N
.
ÌÌN O
material
ÌÌO W
.
ÌÌW X
name
ÌÌX \
+
ÌÌ] ^
$str
ÌÌ_ b
,
ÌÌb c
typeof
ÌÌd j
(
ÌÌj k
TMP_SubMesh
ÌÌk v
)
ÌÌv w
)
ÌÌw x
;
ÌÌx y
go
ÓÓ 
.
ÓÓ 
	hideFlags
ÓÓ 
=
ÓÓ 
	HideFlags
ÓÓ $
.
ÓÓ$ %
DontSave
ÓÓ% -
;
ÓÓ- .
TMP_SubMesh
 
subMesh
 
=
  !
go
" $
.
$ %
GetComponent
% 1
<
1 2
TMP_SubMesh
2 =
>
= >
(
> ?
)
? @
;
@ A
go
ÚÚ 
.
ÚÚ 
	transform
ÚÚ 
.
ÚÚ 
	SetParent
ÚÚ "
(
ÚÚ" #
textComponent
ÚÚ# 0
.
ÚÚ0 1
	transform
ÚÚ1 :
,
ÚÚ: ;
false
ÚÚ< A
)
ÚÚA B
;
ÚÚB C
go
ÛÛ 
.
ÛÛ 
	transform
ÛÛ 
.
ÛÛ 
localPosition
ÛÛ &
=
ÛÛ' (
Vector3
ÛÛ) 0
.
ÛÛ0 1
zero
ÛÛ1 5
;
ÛÛ5 6
go
ÙÙ 
.
ÙÙ 
	transform
ÙÙ 
.
ÙÙ 
localRotation
ÙÙ &
=
ÙÙ' (

Quaternion
ÙÙ) 3
.
ÙÙ3 4
identity
ÙÙ4 <
;
ÙÙ< =
go
ıı 
.
ıı 
	transform
ıı 
.
ıı 

localScale
ıı #
=
ıı$ %
Vector3
ıı& -
.
ıı- .
one
ıı. 1
;
ıı1 2
go
ˆˆ 
.
ˆˆ 
layer
ˆˆ 
=
ˆˆ 
textComponent
ˆˆ $
.
ˆˆ$ %

gameObject
ˆˆ% /
.
ˆˆ/ 0
layer
ˆˆ0 5
;
ˆˆ5 6
subMesh
¯¯ 
.
¯¯ 
m_TextComponent
¯¯ #
=
¯¯$ %
textComponent
¯¯& 3
;
¯¯3 4
subMesh
˘˘ 
.
˘˘ 
m_fontAsset
˘˘ 
=
˘˘  !
materialReference
˘˘" 3
.
˘˘3 4
	fontAsset
˘˘4 =
;
˘˘= >
subMesh
˙˙ 
.
˙˙ 
m_spriteAsset
˙˙ !
=
˙˙" #
materialReference
˙˙$ 5
.
˙˙5 6
spriteAsset
˙˙6 A
;
˙˙A B
subMesh
˚˚ 
.
˚˚ !
m_isDefaultMaterial
˚˚ '
=
˚˚( )
materialReference
˚˚* ;
.
˚˚; <
isDefaultMaterial
˚˚< M
;
˚˚M N
subMesh
¸¸ 
.
¸¸ 
SetSharedMaterial
¸¸ %
(
¸¸% &
materialReference
¸¸& 7
.
¸¸7 8
material
¸¸8 @
)
¸¸@ A
;
¸¸A B
subMesh
˛˛ 
.
˛˛ 
renderer
˛˛ 
.
˛˛ 
sortingLayerID
˛˛ +
=
˛˛, -
textComponent
˛˛. ;
.
˛˛; <
renderer
˛˛< D
.
˛˛D E
sortingLayerID
˛˛E S
;
˛˛S T
subMesh
ˇˇ 
.
ˇˇ 
renderer
ˇˇ 
.
ˇˇ 
sortingOrder
ˇˇ )
=
ˇˇ* +
textComponent
ˇˇ, 9
.
ˇˇ9 :
renderer
ˇˇ: B
.
ˇˇB C
sortingOrder
ˇˇC O
;
ˇˇO P
return
ÅÅ 
subMesh
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
void
ÖÖ 
OnEnable
ÖÖ 
(
ÖÖ 
)
ÖÖ 
{
ÜÜ 	
if
ää 
(
ää 
!
ää %
m_isRegisteredForEvents
ää (
)
ää( )
{
ãã  
TMPro_EventManager
çç "
.
çç" #%
MATERIAL_PROPERTY_EVENT
çç# :
.
çç: ;
Add
çç; >
(
çç> ?*
ON_MATERIAL_PROPERTY_CHANGED
çç? [
)
çç[ \
;
çç\ ] 
TMPro_EventManager
éé "
.
éé" #!
FONT_PROPERTY_EVENT
éé# 6
.
éé6 7
Add
éé7 :
(
éé: ;&
ON_FONT_PROPERTY_CHANGED
éé; S
)
ééS T
;
ééT U 
TMPro_EventManager
êê "
.
êê" #*
DRAG_AND_DROP_MATERIAL_EVENT
êê# ?
.
êê? @
Add
êê@ C
(
êêC D'
ON_DRAG_AND_DROP_MATERIAL
êêD ]
)
êê] ^
;
êê^ _ 
TMPro_EventManager
íí "
.
íí" #)
SPRITE_ASSET_PROPERTY_EVENT
íí# >
.
íí> ?
Add
íí? B
(
ííB C.
 ON_SPRITE_ASSET_PROPERTY_CHANGED
ííC c
)
ííc d
;
ííd e%
m_isRegisteredForEvents
ññ '
=
ññ( )
true
ññ* .
;
ññ. /
}
óó 
if
öö 
(
öö 
	hideFlags
öö 
!=
öö 
	HideFlags
öö &
.
öö& '
DontSave
öö' /
)
öö/ 0
	hideFlags
õõ 
=
õõ 
	HideFlags
õõ %
.
õõ% &
DontSave
õõ& .
;
õõ. /

meshFilter
ûû 
.
ûû 

sharedMesh
ûû !
=
ûû" #
mesh
ûû$ (
;
ûû( )
if
°° 
(
°° 
m_sharedMaterial
°°  
!=
°°! #
null
°°$ (
)
°°( )
m_sharedMaterial
¢¢  
.
¢¢  !
	SetVector
¢¢! *
(
¢¢* +
ShaderUtilities
¢¢+ :
.
¢¢: ;
ID_ClipRect
¢¢; F
,
¢¢F G
new
¢¢H K
Vector4
¢¢L S
(
¢¢S T
-
¢¢T U
$num
¢¢U Z
,
¢¢Z [
-
¢¢\ ]
$num
¢¢] b
,
¢¢b c
$num
¢¢d i
,
¢¢i j
$num
¢¢k p
)
¢¢p q
)
¢¢q r
;
¢¢r s
}
££ 	
void
¶¶ 
	OnDisable
¶¶ 
(
¶¶ 
)
¶¶ 
{
ßß 	
m_meshFilter
´´ 
.
´´ 

sharedMesh
´´ #
=
´´$ %
null
´´& *
;
´´* +
if
≠≠ 
(
≠≠  
m_fallbackMaterial
≠≠ "
!=
≠≠# %
null
≠≠& *
)
≠≠* +
{
ÆÆ !
TMP_MaterialManager
ØØ #
.
ØØ# $%
ReleaseFallbackMaterial
ØØ$ ;
(
ØØ; < 
m_fallbackMaterial
ØØ< N
)
ØØN O
;
ØØO P 
m_fallbackMaterial
∞∞ "
=
∞∞# $
null
∞∞% )
;
∞∞) *
}
±± 
}
≤≤ 	
void
µµ 
	OnDestroy
µµ 
(
µµ 
)
µµ 
{
∂∂ 	
if
∫∫ 
(
∫∫ 
m_mesh
∫∫ 
!=
∫∫ 
null
∫∫ 
)
∫∫ 
DestroyImmediate
∫∫  0
(
∫∫0 1
m_mesh
∫∫1 7
)
∫∫7 8
;
∫∫8 9
if
ºº 
(
ºº  
m_fallbackMaterial
ºº "
!=
ºº# %
null
ºº& *
)
ºº* +
{
ΩΩ !
TMP_MaterialManager
ææ #
.
ææ# $%
ReleaseFallbackMaterial
ææ$ ;
(
ææ; < 
m_fallbackMaterial
ææ< N
)
ææN O
;
ææO P 
m_fallbackMaterial
øø "
=
øø# $
null
øø% )
;
øø) *
}
¿¿  
TMPro_EventManager
ƒƒ 
.
ƒƒ %
MATERIAL_PROPERTY_EVENT
ƒƒ 6
.
ƒƒ6 7
Remove
ƒƒ7 =
(
ƒƒ= >*
ON_MATERIAL_PROPERTY_CHANGED
ƒƒ> Z
)
ƒƒZ [
;
ƒƒ[ \ 
TMPro_EventManager
≈≈ 
.
≈≈ !
FONT_PROPERTY_EVENT
≈≈ 2
.
≈≈2 3
Remove
≈≈3 9
(
≈≈9 :&
ON_FONT_PROPERTY_CHANGED
≈≈: R
)
≈≈R S
;
≈≈S T 
TMPro_EventManager
«« 
.
«« *
DRAG_AND_DROP_MATERIAL_EVENT
«« ;
.
««; <
Remove
««< B
(
««B C'
ON_DRAG_AND_DROP_MATERIAL
««C \
)
««\ ]
;
««] ^ 
TMPro_EventManager
…… 
.
…… )
SPRITE_ASSET_PROPERTY_EVENT
…… :
.
……: ;
Remove
……; A
(
……A B.
 ON_SPRITE_ASSET_PROPERTY_CHANGED
……B b
)
……b c
;
……c d%
m_isRegisteredForEvents
ÃÃ #
=
ÃÃ$ %
false
ÃÃ& +
;
ÃÃ+ ,
m_TextComponent
œœ 
.
œœ #
havePropertiesChanged
œœ 1
=
œœ2 3
true
œœ4 8
;
œœ8 9
m_TextComponent
–– 
.
–– 
SetAllDirty
–– '
(
––' (
)
––( )
;
––) *
}
—— 	
void
◊◊ *
ON_MATERIAL_PROPERTY_CHANGED
◊◊ )
(
◊◊) *
bool
◊◊* .
	isChanged
◊◊/ 8
,
◊◊8 9
Material
◊◊: B
mat
◊◊C F
)
◊◊F G
{
ÿÿ 	
if
⁄⁄ 
(
⁄⁄ 
m_sharedMaterial
⁄⁄  
==
⁄⁄! #
null
⁄⁄$ (
)
⁄⁄( )
return
€€ 
;
€€ 
int
›› 
targetMaterialID
››  
=
››! "
mat
››# &
.
››& '
GetInstanceID
››' 4
(
››4 5
)
››5 6
;
››6 7
int
ﬁﬁ 
sharedMaterialID
ﬁﬁ  
=
ﬁﬁ! "
m_sharedMaterial
ﬁﬁ# 3
.
ﬁﬁ3 4
GetInstanceID
ﬁﬁ4 A
(
ﬁﬁA B
)
ﬁﬁB C
;
ﬁﬁC D
int
ﬂﬂ &
fallbackSourceMaterialID
ﬂﬂ (
=
ﬂﬂ) *&
m_fallbackSourceMaterial
ﬂﬂ+ C
==
ﬂﬂD F
null
ﬂﬂG K
?
ﬂﬂL M
$num
ﬂﬂN O
:
ﬂﬂP Q&
m_fallbackSourceMaterial
ﬂﬂR j
.
ﬂﬂj k
GetInstanceID
ﬂﬂk x
(
ﬂﬂx y
)
ﬂﬂy z
;
ﬂﬂz {
bool
‚‚ !
hasCullModeProperty
‚‚ $
=
‚‚% &
m_sharedMaterial
‚‚' 7
.
‚‚7 8
HasProperty
‚‚8 C
(
‚‚C D
ShaderUtilities
‚‚D S
.
‚‚S T 
ShaderTag_CullMode
‚‚T f
)
‚‚f g
;
‚‚g h
float
„„ 
cullMode
„„ 
=
„„ 
$num
„„ 
;
„„ 
if
ÂÂ 
(
ÂÂ !
hasCullModeProperty
ÂÂ #
)
ÂÂ# $
{
ÊÊ 
cullMode
ÁÁ 
=
ÁÁ 
textComponent
ÁÁ (
.
ÁÁ( ) 
fontSharedMaterial
ÁÁ) ;
.
ÁÁ; <
GetFloat
ÁÁ< D
(
ÁÁD E
ShaderUtilities
ÁÁE T
.
ÁÁT U 
ShaderTag_CullMode
ÁÁU g
)
ÁÁg h
;
ÁÁh i
m_sharedMaterial
ËË  
.
ËË  !
SetFloat
ËË! )
(
ËË) *
ShaderUtilities
ËË* 9
.
ËË9 : 
ShaderTag_CullMode
ËË: L
,
ËËL M
cullMode
ËËN V
)
ËËV W
;
ËËW X
}
ÈÈ 
if
ÏÏ 
(
ÏÏ 
targetMaterialID
ÏÏ  
!=
ÏÏ! #
sharedMaterialID
ÏÏ$ 4
)
ÏÏ4 5
{
ÌÌ 
if
ÔÔ 
(
ÔÔ  
m_fallbackMaterial
ÔÔ &
!=
ÔÔ' )
null
ÔÔ* .
&&
ÔÔ/ 1&
fallbackSourceMaterialID
ÔÔ2 J
==
ÔÔK M
targetMaterialID
ÔÔN ^
&&
ÔÔ_ a
TMP_Settings
ÔÔb n
.
ÔÔn o"
matchMaterialPresetÔÔo Ç
)ÔÔÇ É
{
 !
TMP_MaterialManager
ÒÒ '
.
ÒÒ' (*
CopyMaterialPresetProperties
ÒÒ( D
(
ÒÒD E
mat
ÒÒE H
,
ÒÒH I 
m_fallbackMaterial
ÒÒJ \
)
ÒÒ\ ]
;
ÒÒ] ^
if
ÙÙ 
(
ÙÙ !
hasCullModeProperty
ÙÙ +
)
ÙÙ+ , 
m_fallbackMaterial
ıı *
.
ıı* +
SetFloat
ıı+ 3
(
ıı3 4
ShaderUtilities
ıı4 C
.
ııC D 
ShaderTag_CullMode
ııD V
,
ııV W
cullMode
ııX `
)
ıı` a
;
ııa b
}
ˆˆ 
else
˜˜ 
return
¯¯ 
;
¯¯ 
}
˘˘ 
	m_padding
˚˚ 
=
˚˚ #
GetPaddingForMaterial
˚˚ -
(
˚˚- .
)
˚˚. /
;
˚˚/ 0
m_TextComponent
˝˝ 
.
˝˝ #
havePropertiesChanged
˝˝ 1
=
˝˝2 3
true
˝˝4 8
;
˝˝8 9
m_TextComponent
˛˛ 
.
˛˛ 
SetVerticesDirty
˛˛ ,
(
˛˛, -
)
˛˛- .
;
˛˛. /
}
ˇˇ 	
void
ÉÉ '
ON_DRAG_AND_DROP_MATERIAL
ÉÉ &
(
ÉÉ& '

GameObject
ÉÉ' 1
obj
ÉÉ2 5
,
ÉÉ5 6
Material
ÉÉ7 ?
currentMaterial
ÉÉ@ O
,
ÉÉO P
Material
ÉÉQ Y
newMaterial
ÉÉZ e
)
ÉÉe f
{
ÑÑ 	
if
áá 
(
áá 
obj
áá 
==
áá 

gameObject
áá !
||
áá" $
UnityEditor
áá% 0
.
áá0 1
PrefabUtility
áá1 >
.
áá> ?.
 GetCorrespondingObjectFromSource
áá? _
(
áá_ `

gameObject
áá` j
)
ááj k
==
áál n
obj
ááo r
)
áár s
{
ãã 
if
åå 
(
åå 
!
åå !
m_isDefaultMaterial
åå (
)
åå( )
return
åå* 0
;
åå0 1
if
èè 
(
èè 

m_renderer
èè 
==
èè !
null
èè" &
)
èè& '

m_renderer
èè( 2
=
èè3 4
GetComponent
èè5 A
<
èèA B
Renderer
èèB J
>
èèJ K
(
èèK L
)
èèL M
;
èèM N
UnityEditor
ëë 
.
ëë 
Undo
ëë  
.
ëë  !
RecordObject
ëë! -
(
ëë- .
this
ëë. 2
,
ëë2 3
$str
ëë4 I
)
ëëI J
;
ëëJ K
UnityEditor
íí 
.
íí 
Undo
íí  
.
íí  !
RecordObject
íí! -
(
íí- .

m_renderer
íí. 8
,
íí8 9
$str
íí: O
)
ííO P
;
ííP Q
SetSharedMaterial
îî !
(
îî! "
newMaterial
îî" -
)
îî- .
;
îî. /
m_TextComponent
ïï 
.
ïï  #
havePropertiesChanged
ïï  5
=
ïï6 7
true
ïï8 <
;
ïï< =
}
ññ 
}
óó 	
void
õõ .
 ON_SPRITE_ASSET_PROPERTY_CHANGED
õõ -
(
õõ- .
bool
õõ. 2
	isChanged
õõ3 <
,
õõ< =
UnityEngine
õõ> I
.
õõI J
Object
õõJ P
obj
õõQ T
)
õõT U
{
úú 	
if
üü 
(
üü 
m_TextComponent
üü 
!=
üü  "
null
üü# '
)
üü' (
{
†† 
m_TextComponent
°° 
.
°°  #
havePropertiesChanged
°°  5
=
°°6 7
true
°°8 <
;
°°< =
}
££ 
}
¶¶ 	
void
©© &
ON_FONT_PROPERTY_CHANGED
©© %
(
©©% &
bool
©©& *
	isChanged
©©+ 4
,
©©4 5
Object
©©6 <
	fontAsset
©©= F
)
©©F G
{
™™ 	
if
´´ 
(
´´ 
m_fontAsset
´´ 
!=
´´ 
null
´´ #
&&
´´$ &
	fontAsset
´´' 0
.
´´0 1
GetInstanceID
´´1 >
(
´´> ?
)
´´? @
==
´´A C
m_fontAsset
´´D O
.
´´O P
GetInstanceID
´´P ]
(
´´] ^
)
´´^ _
)
´´_ `
{
¨¨ 
if
ÆÆ 
(
ÆÆ  
m_fallbackMaterial
ÆÆ &
!=
ÆÆ' )
null
ÆÆ* .
)
ÆÆ. /
{
ØØ 
if
∞∞ 
(
∞∞ 
TMP_Settings
∞∞ $
.
∞∞$ %!
matchMaterialPreset
∞∞% 8
)
∞∞8 9
{
±± !
TMP_MaterialManager
≤≤ +
.
≤≤+ ,%
ReleaseFallbackMaterial
≤≤, C
(
≤≤C D 
m_fallbackMaterial
≤≤D V
)
≤≤V W
;
≤≤W X!
TMP_MaterialManager
≥≥ +
.
≥≥+ ,&
CleanupFallbackMaterials
≥≥, D
(
≥≥D E
)
≥≥E F
;
≥≥F G
}
¥¥ 
}
µµ 
}
∂∂ 
}
∑∑ 	
void
ºº %
ON_TMP_SETTINGS_CHANGED
ºº $
(
ºº$ %
)
ºº% &
{
ΩΩ 	
}
¡¡ 	
public
≈≈ 
void
≈≈ 
DestroySelf
≈≈ 
(
≈≈  
)
≈≈  !
{
∆∆ 	
Destroy
«« 
(
«« 
this
«« 
.
«« 

gameObject
«« #
,
««# $
$num
««% '
)
««' (
;
««( )
}
»» 	
Material
ÀÀ 
GetMaterial
ÀÀ 
(
ÀÀ 
Material
ÀÀ %
mat
ÀÀ& )
)
ÀÀ) *
{
ÃÃ 	
if
œœ 
(
œœ 

m_renderer
œœ 
==
œœ 
null
œœ "
)
œœ" #

m_renderer
–– 
=
–– 
GetComponent
–– )
<
––) *
Renderer
––* 2
>
––2 3
(
––3 4
)
––4 5
;
––5 6
if
”” 
(
”” 

m_material
”” 
==
”” 
null
”” "
||
””# %

m_material
””& 0
.
””0 1
GetInstanceID
””1 >
(
””> ?
)
””? @
!=
””A C
mat
””D G
.
””G H
GetInstanceID
””H U
(
””U V
)
””V W
)
””W X

m_material
‘‘ 
=
‘‘ $
CreateMaterialInstance
‘‘ 3
(
‘‘3 4
mat
‘‘4 7
)
‘‘7 8
;
‘‘8 9
m_sharedMaterial
÷÷ 
=
÷÷ 

m_material
÷÷ )
;
÷÷) *
	m_padding
ŸŸ 
=
ŸŸ #
GetPaddingForMaterial
ŸŸ -
(
ŸŸ- .
)
ŸŸ. /
;
ŸŸ/ 0
SetVerticesDirty
€€ 
(
€€ 
)
€€ 
;
€€ 
SetMaterialDirty
‹‹ 
(
‹‹ 
)
‹‹ 
;
‹‹ 
return
ﬁﬁ 
m_sharedMaterial
ﬁﬁ #
;
ﬁﬁ# $
}
ﬂﬂ 	
Material
ÁÁ $
CreateMaterialInstance
ÁÁ '
(
ÁÁ' (
Material
ÁÁ( 0
source
ÁÁ1 7
)
ÁÁ7 8
{
ËË 	
Material
ÈÈ 
mat
ÈÈ 
=
ÈÈ 
new
ÈÈ 
Material
ÈÈ '
(
ÈÈ' (
source
ÈÈ( .
)
ÈÈ. /
;
ÈÈ/ 0
mat
ÍÍ 
.
ÍÍ 
shaderKeywords
ÍÍ 
=
ÍÍ  
source
ÍÍ! '
.
ÍÍ' (
shaderKeywords
ÍÍ( 6
;
ÍÍ6 7
mat
ÎÎ 
.
ÎÎ 
name
ÎÎ 
+=
ÎÎ 
$str
ÎÎ %
;
ÎÎ% &
return
ÌÌ 
mat
ÌÌ 
;
ÌÌ 
}
ÓÓ 	
Material
ıı 
GetSharedMaterial
ıı "
(
ıı" #
)
ıı# $
{
ˆˆ 	
if
˜˜ 
(
˜˜ 

m_renderer
˜˜ 
==
˜˜ 
null
˜˜ "
)
˜˜" #

m_renderer
¯¯ 
=
¯¯ 
GetComponent
¯¯ )
<
¯¯) *
Renderer
¯¯* 2
>
¯¯2 3
(
¯¯3 4
)
¯¯4 5
;
¯¯5 6
return
˙˙ 

m_renderer
˙˙ 
.
˙˙ 
sharedMaterial
˙˙ ,
;
˙˙, -
}
˚˚ 	
void
ÇÇ 
SetSharedMaterial
ÇÇ 
(
ÇÇ 
Material
ÇÇ '
mat
ÇÇ( +
)
ÇÇ+ ,
{
ÉÉ 	
m_sharedMaterial
áá 
=
áá 
mat
áá "
;
áá" #
	m_padding
ää 
=
ää #
GetPaddingForMaterial
ää -
(
ää- .
)
ää. /
;
ää/ 0
SetMaterialDirty
åå 
(
åå 
)
åå 
;
åå 
if
èè 
(
èè 
m_sharedMaterial
èè  
!=
èè! #
null
èè$ (
)
èè( )

gameObject
êê 
.
êê 
name
êê 
=
êê  !
$str
êê" 1
+
êê2 3
m_sharedMaterial
êê4 D
.
êêD E
name
êêE I
+
êêJ K
$str
êêL O
;
êêO P
}
íí 	
public
ôô 
float
ôô #
GetPaddingForMaterial
ôô *
(
ôô* +
)
ôô+ ,
{
öö 	
float
õõ 
padding
õõ 
=
õõ 
ShaderUtilities
õõ +
.
õõ+ ,

GetPadding
õõ, 6
(
õõ6 7
m_sharedMaterial
õõ7 G
,
õõG H
m_TextComponent
õõI X
.
õõX Y
extraPadding
õõY e
,
õõe f
m_TextComponent
õõg v
.
õõv w
isUsingBoldõõw Ç
)õõÇ É
;õõÉ Ñ
return
ùù 
padding
ùù 
;
ùù 
}
ûû 	
public
¶¶ 
void
¶¶ 
UpdateMeshPadding
¶¶ %
(
¶¶% &
bool
¶¶& *
isExtraPadding
¶¶+ 9
,
¶¶9 :
bool
¶¶; ?
isUsingBold
¶¶@ K
)
¶¶K L
{
ßß 	
	m_padding
®® 
=
®® 
ShaderUtilities
®® '
.
®®' (

GetPadding
®®( 2
(
®®2 3
m_sharedMaterial
®®3 C
,
®®C D
isExtraPadding
®®E S
,
®®S T
isUsingBold
®®U `
)
®®` a
;
®®a b
}
©© 	
public
ØØ 
void
ØØ 
SetVerticesDirty
ØØ $
(
ØØ$ %
)
ØØ% &
{
∞∞ 	
if
±± 
(
±± 
!
±± 
this
±± 
.
±± 
enabled
±± 
)
±± 
return
≤≤ 
;
≤≤ 
if
µµ 
(
µµ 
m_TextComponent
µµ 
!=
µµ  "
null
µµ# '
)
µµ' (
{
∂∂ 
m_TextComponent
∑∑ 
.
∑∑  #
havePropertiesChanged
∑∑  5
=
∑∑6 7
true
∑∑8 <
;
∑∑< =
m_TextComponent
∏∏ 
.
∏∏  
SetVerticesDirty
∏∏  0
(
∏∏0 1
)
∏∏1 2
;
∏∏2 3
}
ππ 
}
∫∫ 	
public
¿¿ 
void
¿¿ 
SetMaterialDirty
¿¿ $
(
¿¿$ %
)
¿¿% &
{
¡¡ 	
UpdateMaterial
≈≈ 
(
≈≈ 
)
≈≈ 
;
≈≈ 
}
…… 	
	protected
œœ 
void
œœ 
UpdateMaterial
œœ %
(
œœ% &
)
œœ& '
{
–– 	
if
”” 
(
”” 
renderer
”” 
==
”” 
null
””  
||
””! #
m_sharedMaterial
””$ 4
==
””5 7
null
””8 <
)
””< =
return
””> D
;
””D E

m_renderer
’’ 
.
’’ 
sharedMaterial
’’ %
=
’’& '
m_sharedMaterial
’’( 8
;
’’8 9
if
ÿÿ 
(
ÿÿ 
m_sharedMaterial
ÿÿ  
.
ÿÿ  !
HasProperty
ÿÿ! ,
(
ÿÿ, -
ShaderUtilities
ÿÿ- <
.
ÿÿ< = 
ShaderTag_CullMode
ÿÿ= O
)
ÿÿO P
)
ÿÿP Q
{
ŸŸ 
float
⁄⁄ 
cullMode
⁄⁄ 
=
⁄⁄  
textComponent
⁄⁄! .
.
⁄⁄. / 
fontSharedMaterial
⁄⁄/ A
.
⁄⁄A B
GetFloat
⁄⁄B J
(
⁄⁄J K
ShaderUtilities
⁄⁄K Z
.
⁄⁄Z [ 
ShaderTag_CullMode
⁄⁄[ m
)
⁄⁄m n
;
⁄⁄n o
m_sharedMaterial
€€  
.
€€  !
SetFloat
€€! )
(
€€) *
ShaderUtilities
€€* 9
.
€€9 : 
ShaderTag_CullMode
€€: L
,
€€L M
cullMode
€€N V
)
€€V W
;
€€W X
}
‹‹ 
if
ﬂﬂ 
(
ﬂﬂ 
m_sharedMaterial
ﬂﬂ  
!=
ﬂﬂ! #
null
ﬂﬂ$ (
&&
ﬂﬂ) +

gameObject
ﬂﬂ, 6
.
ﬂﬂ6 7
name
ﬂﬂ7 ;
!=
ﬂﬂ< >
$str
ﬂﬂ? N
+
ﬂﬂO P
m_sharedMaterial
ﬂﬂQ a
.
ﬂﬂa b
name
ﬂﬂb f
+
ﬂﬂg h
$str
ﬂﬂi l
)
ﬂﬂl m

gameObject
‡‡ 
.
‡‡ 
name
‡‡ 
=
‡‡  !
$str
‡‡" 1
+
‡‡2 3
m_sharedMaterial
‡‡4 D
.
‡‡D E
name
‡‡E I
+
‡‡J K
$str
‡‡L O
;
‡‡O P
}
‚‚ 	
}
˝˝ 
}˛˛ à
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_InputValidator.cs
	namespace 	
TMPro
 
{ 
[

 
System

 
.

 
Serializable

 
]

 
public 

abstract 
class 
TMP_InputValidator ,
:- .
ScriptableObject/ ?
{ 
public 
abstract 
char 
Validate %
(% &
ref& )
string* 0
text1 5
,5 6
ref7 :
int; >
pos? B
,B C
charD H
chI K
)K L
;L M
} 
} ÿ
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\AssemblyInfo.cs
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str .
). /
]/ 0
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str 6
)6 7
]7 8
[		 
assembly		 	
:			 

InternalsVisibleTo		 
(		 
$str		 5
)		5 6
]		6 7
[

 
assembly

 	
:

	 

InternalsVisibleTo

 
(

 
$str

 8
)

8 9
]

9 :Ü	
éD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_Asset.cs
	namespace 	
TMPro
 
{ 
[ 
Serializable 
] 
public		 

abstract		 
class		 
	TMP_Asset		 #
:		$ %
ScriptableObject		& 6
{

 
public 
int 

instanceID 
{ 	
get 
{ 
if 
( 
m_InstanceID  
==! #
$num$ %
)% &
m_InstanceID  
=! "
GetInstanceID# 0
(0 1
)1 2
;2 3
return 
m_InstanceID #
;# $
} 
} 	
private 
int 
m_InstanceID  
;  !
public 
int 
hashCode 
; 
public"" 
Material"" 
material""  
;""  !
public'' 
int'' 
materialHashCode'' #
;''# $
})) 
}** ë
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_LineInfo.cs
	namespace 	
TMPro
 
{ 
public 

struct 
TMP_LineInfo 
{ 
internal		 
int		 !
controlCharacterCount		 *
;		* +
public 
int 
characterCount !
;! "
public 
int !
visibleCharacterCount (
;( )
public 
int 

spaceCount 
; 
public 
int 
	wordCount 
; 
public 
int 
firstCharacterIndex &
;& '
public 
int &
firstVisibleCharacterIndex -
;- .
public 
int 
lastCharacterIndex %
;% &
public 
int %
lastVisibleCharacterIndex ,
;, -
public 
float 
length 
; 
public 
float 

lineHeight 
;  
public 
float 
ascender 
; 
public 
float 
baseline 
; 
public 
float 
	descender 
; 
public 
float 

maxAdvance 
;  
public 
float 
width 
; 
public 
float 

marginLeft 
;  
public 
float 
marginRight  
;  !
public &
HorizontalAlignmentOptions )
	alignment* 3
;3 4
public   
Extents   
lineExtents   "
;  " #
}22 
}33 á≈
íD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TextContainer.cs
	namespace 	
TMPro
 
{ 
public		 

enum		  
TextContainerAnchors		 $
{		% &
TopLeft		' .
=		/ 0
$num		1 2
,		2 3
Top		4 7
=		8 9
$num		: ;
,		; <
TopRight		= E
=		F G
$num		H I
,		I J
Left		K O
=		P Q
$num		R S
,		S T
Middle		U [
=		\ ]
$num		^ _
,		_ `
Right		a f
=		g h
$num		i j
,		j k

BottomLeft		l v
=		w x
$num		y z
,		z {
Bottom			| Ç
=
		É Ñ
$num
		Ö Ü
,
		Ü á
BottomRight
		à ì
=
		î ï
$num
		ñ ó
,
		ó ò
Custom
		ô ü
=
		† °
$num
		¢ £
}
		§ •
;
		• ¶
[ 
RequireComponent 
( 
typeof 
( 
RectTransform *
)* +
)+ ,
], -
public 

class 
TextContainer 
:  
UIBehaviour! ,
{ 
public 
bool 

hasChanged 
{ 	
get 
{ 
return 
m_hasChanged %
;% &
}' (
set 
{ 
m_hasChanged 
=  
value! &
;& '
}( )
} 	
private 
bool 
m_hasChanged !
;! "
public 
Vector2 
pivot 
{ 	
get 
{ 
return 
m_pivot  
;  !
}" #
set 
{ 
if7 9
(: ;
m_pivot; B
!=C E
valueF K
)K L
{M N
m_pivotO V
=W X
valueY ^
;^ _
m_anchorPosition` p
=q r
GetAnchorPosition	s Ñ
(
Ñ Ö
m_pivot
Ö å
)
å ç
;
ç é
m_hasChanged
è õ
=
ú ù
true
û ¢
;
¢ £ 
OnContainerChanged
§ ∂
(
∂ ∑
)
∑ ∏
;
∏ π
}
∫ ª
}
º Ω
}   	
[!! 	
SerializeField!!	 
]!! 
private"" 
Vector2"" 
m_pivot"" 
;""  
public%%  
TextContainerAnchors%% #
anchorPosition%%$ 2
{&& 	
get'' 
{'' 
return'' 
m_anchorPosition'' )
;'') *
}''+ ,
set(( 
{(( 
if((8 :
(((; <
m_anchorPosition((< L
!=((M O
value((P U
)((U V
{((W X
m_anchorPosition((Y i
=((j k
value((l q
;((q r
m_pivot((s z
=(({ |
GetPivot	((} Ö
(
((Ö Ü
m_anchorPosition
((Ü ñ
)
((ñ ó
;
((ó ò
m_hasChanged
((ô •
=
((¶ ß
true
((® ¨
;
((¨ ≠ 
OnContainerChanged
((Æ ¿
(
((¿ ¡
)
((¡ ¬
;
((¬ √
}
((ƒ ≈
}
((∆ «
})) 	
[** 	
SerializeField**	 
]** 
private++  
TextContainerAnchors++ $
m_anchorPosition++% 5
=++6 7 
TextContainerAnchors++8 L
.++L M
Middle++M S
;++S T
public// 
Rect// 
rect// 
{00 	
get11 
{11 
return11 
m_rect11 
;11  
}11! "
set22 
{22 
if22; =
(22> ?
m_rect22? E
!=22F H
value22I N
)22N O
{22P Q
m_rect22R X
=22Y Z
value22[ `
;22` a
m_hasChanged
22ô •
=
22¶ ß
true
22® ¨
;
22¨ ≠ 
OnContainerChanged
22Æ ¿
(
22¿ ¡
)
22¡ ¬
;
22¬ √
}
22ƒ ≈
}
22∆ «
}33 	
[44 	
SerializeField44	 
]44 
private55 
Rect55 
m_rect55 
;55 
public88 
Vector288 
size88 
{99 	
get:: 
{:: 
return:: 
new:: 
Vector2:: $
(::$ %
m_rect::% +
.::+ ,
width::, 1
,::1 2
m_rect::3 9
.::9 :
height::: @
)::@ A
;::A B
}::C D
set;; 
{;; 
if;;6 8
(;;9 :
new;;: =
Vector2;;> E
(;;E F
m_rect;;F L
.;;L M
width;;M R
,;;R S
m_rect;;T Z
.;;Z [
height;;[ a
);;a b
!=;;c e
value;;f k
);;k l
{;;m n
SetRect;;o v
(;;v w
value;;w |
);;| }
;;;} ~
m_hasChanged	;; ã
=
;;å ç
true
;;é í
;
;;í ì
m_isDefaultWidth
;;î §
=
;;• ¶
false
;;ß ¨
;
;;¨ ≠
m_isDefaultHeight
;;Æ ø
=
;;¿ ¡
false
;;¬ «
;
;;« » 
OnContainerChanged
;;… €
(
;;€ ‹
)
;;‹ ›
;
;;› ﬁ
}
;;ﬂ ‡
}
;;· ‚
}<< 	
public@@ 
float@@ 
width@@ 
{AA 	
getBB 
{BB 
returnBB 
m_rectBB 
.BB  
widthBB  %
;BB% &
}BB' (
setCC 
{CC 
SetRectCC7 >
(CC> ?
newCC? B
Vector2CCC J
(CCJ K
valueCCK P
,CCP Q
m_rectCCR X
.CCX Y
heightCCY _
)CC_ `
)CC` a
;CCa b
m_hasChangedCCc o
=CCp q
trueCCr v
;CCv w
m_isDefaultWidth	CCx à
=
CCâ ä
false
CCã ê
;
CCê ë 
OnContainerChanged
CCí §
(
CC§ •
)
CC• ¶
;
CC¶ ß
}
CC® ©
}DD 	
publicHH 
floatHH 
heightHH 
{II 	
getJJ 
{JJ 
returnJJ 
m_rectJJ 
.JJ  
heightJJ  &
;JJ& '
}JJ( )
setKK 
{KK 
SetRectKK 
(KK 
newKK 
Vector2KK %
(KK% &
m_rectKK& ,
.KK, -
widthKK- 2
,KK2 3
valueKK4 9
)KK9 :
)KK: ;
;KK; <
m_hasChangedKK= I
=KKJ K
trueKKL P
;KKP Q
m_isDefaultHeightKKR c
=KKd e
falseKKf k
;KKk l
OnContainerChangedKKm 
(	KK Ä
)
KKÄ Å
;
KKÅ Ç
}
KKÉ Ñ
}LL 	
publicPP 
boolPP 
isDefaultWidthPP "
{QQ 	
getRR 
{RR 
returnRR 
m_isDefaultWidthRR )
;RR) *
}RR+ ,
}SS 	
privateTT 
boolTT 
m_isDefaultWidthTT %
;TT% &
publicWW 
boolWW 
isDefaultHeightWW #
{XX 	
getYY 
{YY 
returnYY 
m_isDefaultHeightYY *
;YY* +
}YY, -
}ZZ 	
private[[ 
bool[[ 
m_isDefaultHeight[[ &
;[[& '
public^^ 
bool^^ 
isAutoFitting^^ !
{__ 	
get`` 
{`` 
return`` 
m_isAutoFitting`` (
;``( )
}``* +
setaa 
{aa 
m_isAutoFittingaa !
=aa" #
valueaa$ )
;aa) *
}aa+ ,
}bb 	
privatecc 
boolcc 
m_isAutoFittingcc $
=cc% &
falsecc' ,
;cc, -
publicgg 
Vector3gg 
[gg 
]gg 
cornersgg  
{hh 	
getii 
{ii 
returnii 
	m_cornersii "
;ii" #
}ii$ %
}jj 	
privatekk 
Vector3kk 
[kk 
]kk 
	m_cornerskk #
=kk$ %
newkk& )
Vector3kk* 1
[kk1 2
$numkk2 3
]kk3 4
;kk4 5
publicnn 
Vector3nn 
[nn 
]nn 
worldCornersnn %
{oo 	
getpp 
{pp 
returnpp 
m_worldCornerspp '
;pp' (
}pp) *
}qq 	
privaterr 
Vector3rr 
[rr 
]rr 
m_worldCornersrr (
=rr) *
newrr+ .
Vector3rr/ 6
[rr6 7
$numrr7 8
]rr8 9
;rr9 :
public}} 
Vector4}} 
margins}} 
{~~ 	
get 
{ 
return 
	m_margins "
;" #
}$ %
set
ÄÄ 
{
ÄÄ 
if
ÄÄ 
(
ÄÄ 
	m_margins
ÄÄ 
!=
ÄÄ  "
value
ÄÄ# (
)
ÄÄ( )
{
ÄÄ* +
	m_margins
ÄÄT ]
=
ÄÄ^ _
value
ÄÄ` e
;
ÄÄe f
m_hasChanged
ÄÄg s
=
ÄÄt u
true
ÄÄv z
;
ÄÄz {!
OnContainerChangedÄÄ| é
(ÄÄé è
)ÄÄè ê
;ÄÄê ë
}ÄÄí ì
}ÄÄî ï
}
ÅÅ 	
[
ÇÇ 	
SerializeField
ÇÇ	 
]
ÇÇ 
private
ÉÉ 
Vector4
ÉÉ 
	m_margins
ÉÉ !
;
ÉÉ! "
public
ââ 
RectTransform
ââ 
rectTransform
ââ *
{
ää 	
get
ãã 
{
åå 
if
çç 
(
çç 
m_rectTransform
çç #
==
çç$ &
null
çç' +
)
çç+ ,
m_rectTransform
çç- <
=
çç= >
GetComponent
çç? K
<
ççK L
RectTransform
ççL Y
>
ççY Z
(
ççZ [
)
çç[ \
;
çç\ ]
return
èè 
m_rectTransform
èè &
;
èè& '
}
êê 
}
ëë 	
private
íí 
RectTransform
íí 
m_rectTransform
íí -
;
íí- .
private
óó 
static
óó 
Vector2
óó 
k_defaultSize
óó ,
=
óó- .
new
óó/ 2
Vector2
óó3 :
(
óó: ;
$num
óó; >
,
óó> ?
$num
óó@ C
)
óóC D
;
óóD E
public
ùù 
TextMeshPro
ùù 
textMeshPro
ùù &
{
ûû 	
get
üü 
{
†† 
if
°° 
(
°° 
m_textMeshPro
°° !
==
°°" $
null
°°% )
)
°°) *
m_textMeshPro
°°+ 8
=
°°9 :
GetComponent
°°; G
<
°°G H
TextMeshPro
°°H S
>
°°S T
(
°°T U
)
°°U V
;
°°V W
return
¢¢ 
m_textMeshPro
¢¢ $
;
¢¢$ %
}
££ 
}
§§ 	
private
•• 
TextMeshPro
•• 
m_textMeshPro
•• )
;
••) *
	protected
®® 
override
®® 
void
®® 
Awake
®®  %
(
®®% &
)
®®& '
{
©© 	
Debug
™™ 
.
™™ 

LogWarning
™™ 
(
™™ 
$str
™™ l
+
™™m n

gameObject
™™o y
.
™™y z
name
™™z ~
+™™ Ä
$str™™Å Ö
,™™Ö Ü
this™™á ã
)™™ã å
;™™å ç
return
¨¨ 
;
¨¨ 
}
≠≠ 	
	protected
≥≥ 
override
≥≥ 
void
≥≥ 
OnEnable
≥≥  (
(
≥≥( )
)
≥≥) *
{
¥¥ 	 
OnContainerChanged
∑∑ 
(
∑∑ 
)
∑∑  
;
∑∑  !
}
∏∏ 	
	protected
ææ 
override
ææ 
void
ææ 
	OnDisable
ææ  )
(
ææ) *
)
ææ* +
{
øø 	
}
¡¡ 	
void
««  
OnContainerChanged
«« 
(
««  
)
««  !
{
»» 	
UpdateCorners
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
if
ŒŒ 
(
ŒŒ 
this
ŒŒ 
.
ŒŒ 
m_rectTransform
ŒŒ $
!=
ŒŒ% '
null
ŒŒ( ,
)
ŒŒ, -
{
œœ 
m_rectTransform
–– 
.
––  
	sizeDelta
––  )
=
––* +
this
––, 0
.
––0 1
size
––1 5
;
––5 6
m_rectTransform
—— 
.
——  

hasChanged
——  *
=
——+ ,
true
——- 1
;
——1 2
}
““ 
if
‘‘ 
(
‘‘ 
this
‘‘ 
.
‘‘ 
textMeshPro
‘‘  
!=
‘‘! #
null
‘‘$ (
)
‘‘( )
{
’’ 
m_textMeshPro
÷÷ 
.
÷÷ 
SetVerticesDirty
÷÷ .
(
÷÷. /
)
÷÷/ 0
;
÷÷0 1
m_textMeshPro
◊◊ 
.
◊◊ 
margin
◊◊ $
=
◊◊% &
	m_margins
◊◊' 0
;
◊◊0 1
}
ÿÿ 
}
ŸŸ 	
	protected
‡‡ 
override
‡‡ 
void
‡‡ 

OnValidate
‡‡  *
(
‡‡* +
)
‡‡+ ,
{
·· 	
m_hasChanged
„„ 
=
„„ 
true
„„ 
;
„„   
OnContainerChanged
‰‰ 
(
‰‰ 
)
‰‰  
;
‰‰  !
}
ÂÂ 	
	protected
˜˜ 
override
˜˜ 
void
˜˜ -
OnRectTransformDimensionsChange
˜˜  ?
(
˜˜? @
)
˜˜@ A
{
¯¯ 	
if
˙˙ 
(
˙˙ 
this
˙˙ 
.
˙˙ 
rectTransform
˙˙ "
==
˙˙# %
null
˙˙& *
)
˙˙* +
m_rectTransform
˙˙, ;
=
˙˙< =

gameObject
˙˙> H
.
˙˙H I
AddComponent
˙˙I U
<
˙˙U V
RectTransform
˙˙V c
>
˙˙c d
(
˙˙d e
)
˙˙e f
;
˙˙f g
if
¸¸ 
(
¸¸ 
m_rectTransform
¸¸ 
.
¸¸  
	sizeDelta
¸¸  )
!=
¸¸* ,
k_defaultSize
¸¸- :
)
¸¸: ;
this
˝˝ 
.
˝˝ 
size
˝˝ 
=
˝˝ 
m_rectTransform
˝˝ +
.
˝˝+ ,
	sizeDelta
˝˝, 5
;
˝˝5 6
pivot
ˇˇ 
=
ˇˇ 
m_rectTransform
ˇˇ #
.
ˇˇ# $
pivot
ˇˇ$ )
;
ˇˇ) *
m_hasChanged
ÅÅ 
=
ÅÅ 
true
ÅÅ 
;
ÅÅ   
OnContainerChanged
ÇÇ 
(
ÇÇ 
)
ÇÇ  
;
ÇÇ  !
}
ÉÉ 	
private
ÜÜ 
void
ÜÜ 
SetRect
ÜÜ 
(
ÜÜ 
Vector2
ÜÜ $
size
ÜÜ% )
)
ÜÜ) *
{
áá 	
m_rect
àà 
=
àà 
new
àà 
Rect
àà 
(
àà 
m_rect
àà $
.
àà$ %
x
àà% &
,
àà& '
m_rect
àà( .
.
àà. /
y
àà/ 0
,
àà0 1
size
àà2 6
.
àà6 7
x
àà7 8
,
àà8 9
size
àà: >
.
àà> ?
y
àà? @
)
àà@ A
;
ààA B
}
ää 	
private
åå 
void
åå 
UpdateCorners
åå "
(
åå" #
)
åå# $
{
çç 	
	m_corners
éé 
[
éé 
$num
éé 
]
éé 
=
éé 
new
éé 
Vector3
éé &
(
éé& '
-
éé' (
m_pivot
éé( /
.
éé/ 0
x
éé0 1
*
éé2 3
m_rect
éé4 :
.
éé: ;
width
éé; @
,
éé@ A
(
ééB C
-
ééC D
m_pivot
ééE L
.
ééL M
y
ééM N
)
ééN O
*
ééP Q
m_rect
ééR X
.
ééX Y
height
ééY _
)
éé_ `
;
éé` a
	m_corners
èè 
[
èè 
$num
èè 
]
èè 
=
èè 
new
èè 
Vector3
èè &
(
èè& '
-
èè' (
m_pivot
èè( /
.
èè/ 0
x
èè0 1
*
èè2 3
m_rect
èè4 :
.
èè: ;
width
èè; @
,
èè@ A
(
èèB C
$num
èèC D
-
èèE F
m_pivot
èèG N
.
èèN O
y
èèO P
)
èèP Q
*
èèR S
m_rect
èèT Z
.
èèZ [
height
èè[ a
)
èèa b
;
èèb c
	m_corners
êê 
[
êê 
$num
êê 
]
êê 
=
êê 
new
êê 
Vector3
êê &
(
êê& '
(
êê' (
$num
êê( )
-
êê* +
m_pivot
êê, 3
.
êê3 4
x
êê4 5
)
êê5 6
*
êê7 8
m_rect
êê9 ?
.
êê? @
width
êê@ E
,
êêE F
(
êêG H
$num
êêH I
-
êêJ K
m_pivot
êêL S
.
êêS T
y
êêT U
)
êêU V
*
êêW X
m_rect
êêY _
.
êê_ `
height
êê` f
)
êêf g
;
êêg h
	m_corners
ëë 
[
ëë 
$num
ëë 
]
ëë 
=
ëë 
new
ëë 
Vector3
ëë &
(
ëë& '
(
ëë' (
$num
ëë( )
-
ëë* +
m_pivot
ëë, 3
.
ëë3 4
x
ëë4 5
)
ëë5 6
*
ëë7 8
m_rect
ëë9 ?
.
ëë? @
width
ëë@ E
,
ëëE F
(
ëëG H
-
ëëH I
m_pivot
ëëJ Q
.
ëëQ R
y
ëëR S
)
ëëS T
*
ëëU V
m_rect
ëëW ]
.
ëë] ^
height
ëë^ d
)
ëëd e
;
ëëe f
if
îî 
(
îî 
m_rectTransform
îî 
!=
îî  "
null
îî# '
)
îî' (
m_rectTransform
ïï 
.
ïï  
pivot
ïï  %
=
ïï& '
m_pivot
ïï( /
;
ïï/ 0
}
ññ 	
Vector2
∞∞ 
GetPivot
∞∞ 
(
∞∞ "
TextContainerAnchors
∞∞ -
anchor
∞∞. 4
)
∞∞4 5
{
±± 	
Vector2
≤≤ 
pivot
≤≤ 
=
≤≤ 
Vector2
≤≤ #
.
≤≤# $
zero
≤≤$ (
;
≤≤( )
switch
¥¥ 
(
¥¥ 
anchor
¥¥ 
)
¥¥ 
{
µµ 
case
∂∂ "
TextContainerAnchors
∂∂ )
.
∂∂) *
TopLeft
∂∂* 1
:
∂∂1 2
pivot
∑∑ 
=
∑∑ 
new
∑∑ 
Vector2
∑∑  '
(
∑∑' (
$num
∑∑( )
,
∑∑) *
$num
∑∑+ ,
)
∑∑, -
;
∑∑- .
break
∏∏ 
;
∏∏ 
case
ππ "
TextContainerAnchors
ππ )
.
ππ) *
Top
ππ* -
:
ππ- .
pivot
∫∫ 
=
∫∫ 
new
∫∫ 
Vector2
∫∫  '
(
∫∫' (
$num
∫∫( ,
,
∫∫, -
$num
∫∫. /
)
∫∫/ 0
;
∫∫0 1
break
ªª 
;
ªª 
case
ºº "
TextContainerAnchors
ºº )
.
ºº) *
TopRight
ºº* 2
:
ºº2 3
pivot
ΩΩ 
=
ΩΩ 
new
ΩΩ 
Vector2
ΩΩ  '
(
ΩΩ' (
$num
ΩΩ( )
,
ΩΩ) *
$num
ΩΩ+ ,
)
ΩΩ, -
;
ΩΩ- .
break
ææ 
;
ææ 
case
øø "
TextContainerAnchors
øø )
.
øø) *
Left
øø* .
:
øø. /
pivot
¿¿ 
=
¿¿ 
new
¿¿ 
Vector2
¿¿  '
(
¿¿' (
$num
¿¿( )
,
¿¿) *
$num
¿¿+ /
)
¿¿/ 0
;
¿¿0 1
break
¡¡ 
;
¡¡ 
case
¬¬ "
TextContainerAnchors
¬¬ )
.
¬¬) *
Middle
¬¬* 0
:
¬¬0 1
pivot
√√ 
=
√√ 
new
√√ 
Vector2
√√  '
(
√√' (
$num
√√( ,
,
√√, -
$num
√√. 2
)
√√2 3
;
√√3 4
break
ƒƒ 
;
ƒƒ 
case
≈≈ "
TextContainerAnchors
≈≈ )
.
≈≈) *
Right
≈≈* /
:
≈≈/ 0
pivot
∆∆ 
=
∆∆ 
new
∆∆ 
Vector2
∆∆  '
(
∆∆' (
$num
∆∆( )
,
∆∆) *
$num
∆∆+ /
)
∆∆/ 0
;
∆∆0 1
break
«« 
;
«« 
case
»» "
TextContainerAnchors
»» )
.
»») *

BottomLeft
»»* 4
:
»»4 5
pivot
…… 
=
…… 
new
…… 
Vector2
……  '
(
……' (
$num
……( )
,
……) *
$num
……+ ,
)
……, -
;
……- .
break
   
;
   
case
ÀÀ "
TextContainerAnchors
ÀÀ )
.
ÀÀ) *
Bottom
ÀÀ* 0
:
ÀÀ0 1
pivot
ÃÃ 
=
ÃÃ 
new
ÃÃ 
Vector2
ÃÃ  '
(
ÃÃ' (
$num
ÃÃ( ,
,
ÃÃ, -
$num
ÃÃ. /
)
ÃÃ/ 0
;
ÃÃ0 1
break
ÕÕ 
;
ÕÕ 
case
ŒŒ "
TextContainerAnchors
ŒŒ )
.
ŒŒ) *
BottomRight
ŒŒ* 5
:
ŒŒ5 6
pivot
œœ 
=
œœ 
new
œœ 
Vector2
œœ  '
(
œœ' (
$num
œœ( )
,
œœ) *
$num
œœ+ ,
)
œœ, -
;
œœ- .
break
–– 
;
–– 
}
—— 
return
”” 
pivot
”” 
;
”” 
}
‘‘ 	"
TextContainerAnchors
ÿÿ 
GetAnchorPosition
ÿÿ .
(
ÿÿ. /
Vector2
ÿÿ/ 6
pivot
ÿÿ7 <
)
ÿÿ< =
{
ŸŸ 	
if
€€ 
(
€€ 
pivot
€€ 
==
€€ 
new
€€ 
Vector2
€€ $
(
€€$ %
$num
€€% &
,
€€& '
$num
€€( )
)
€€) *
)
€€* +
return
‹‹ "
TextContainerAnchors
‹‹ +
.
‹‹+ ,
TopLeft
‹‹, 3
;
‹‹3 4
else
›› 
if
›› 
(
›› 
pivot
›› 
==
›› 
new
›› !
Vector2
››" )
(
››) *
$num
››* .
,
››. /
$num
››0 1
)
››1 2
)
››2 3
return
ﬁﬁ "
TextContainerAnchors
ﬁﬁ +
.
ﬁﬁ+ ,
Top
ﬁﬁ, /
;
ﬁﬁ/ 0
else
ﬂﬂ 
if
ﬂﬂ 
(
ﬂﬂ 
pivot
ﬂﬂ 
==
ﬂﬂ 
new
ﬂﬂ !
Vector2
ﬂﬂ" )
(
ﬂﬂ) *
$num
ﬂﬂ* ,
,
ﬂﬂ, -
$num
ﬂﬂ. /
)
ﬂﬂ/ 0
)
ﬂﬂ0 1
return
‡‡ "
TextContainerAnchors
‡‡ +
.
‡‡+ ,
TopRight
‡‡, 4
;
‡‡4 5
else
·· 
if
·· 
(
·· 
pivot
·· 
==
·· 
new
·· !
Vector2
··" )
(
··) *
$num
··* +
,
··+ ,
$num
··- 1
)
··1 2
)
··2 3
return
‚‚ "
TextContainerAnchors
‚‚ +
.
‚‚+ ,
Left
‚‚, 0
;
‚‚0 1
else
„„ 
if
„„ 
(
„„ 
pivot
„„ 
==
„„ 
new
„„ !
Vector2
„„" )
(
„„) *
$num
„„* .
,
„„. /
$num
„„0 4
)
„„4 5
)
„„5 6
return
‰‰ "
TextContainerAnchors
‰‰ +
.
‰‰+ ,
Middle
‰‰, 2
;
‰‰2 3
else
ÂÂ 
if
ÂÂ 
(
ÂÂ 
pivot
ÂÂ 
==
ÂÂ 
new
ÂÂ !
Vector2
ÂÂ" )
(
ÂÂ) *
$num
ÂÂ* +
,
ÂÂ+ ,
$num
ÂÂ- 1
)
ÂÂ1 2
)
ÂÂ2 3
return
ÊÊ "
TextContainerAnchors
ÊÊ +
.
ÊÊ+ ,
Right
ÊÊ, 1
;
ÊÊ1 2
else
ÁÁ 
if
ÁÁ 
(
ÁÁ 
pivot
ÁÁ 
==
ÁÁ 
new
ÁÁ !
Vector2
ÁÁ" )
(
ÁÁ) *
$num
ÁÁ* +
,
ÁÁ+ ,
$num
ÁÁ- .
)
ÁÁ. /
)
ÁÁ/ 0
return
ËË "
TextContainerAnchors
ËË +
.
ËË+ ,

BottomLeft
ËË, 6
;
ËË6 7
else
ÈÈ 
if
ÈÈ 
(
ÈÈ 
pivot
ÈÈ 
==
ÈÈ 
new
ÈÈ !
Vector2
ÈÈ" )
(
ÈÈ) *
$num
ÈÈ* .
,
ÈÈ. /
$num
ÈÈ0 1
)
ÈÈ1 2
)
ÈÈ2 3
return
ÍÍ "
TextContainerAnchors
ÍÍ +
.
ÍÍ+ ,
Bottom
ÍÍ, 2
;
ÍÍ2 3
else
ÎÎ 
if
ÎÎ 
(
ÎÎ 
pivot
ÎÎ 
==
ÎÎ 
new
ÎÎ !
Vector2
ÎÎ" )
(
ÎÎ) *
$num
ÎÎ* +
,
ÎÎ+ ,
$num
ÎÎ- .
)
ÎÎ. /
)
ÎÎ/ 0
return
ÏÏ "
TextContainerAnchors
ÏÏ +
.
ÏÏ+ ,
BottomRight
ÏÏ, 7
;
ÏÏ7 8
else
ÌÌ 
return
ÓÓ "
TextContainerAnchors
ÓÓ +
.
ÓÓ+ ,
Custom
ÓÓ, 2
;
ÓÓ2 3
}
 	
}
ÒÒ 
}ÚÚ é(
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_Compatibility.cs
	namespace 	
TMPro
 
{ 
public 

static 
class 
TMP_Compatibility )
{		 
public

 
enum

 
AnchorPositions

 #
{

$ %
TopLeft

& -
,

- .
Top

/ 2
,

2 3
TopRight

4 <
,

< =
Left

> B
,

B C
Center

D J
,

J K
Right

L Q
,

Q R

BottomLeft

S ]
,

] ^
Bottom

_ e
,

e f
BottomRight

g r
,

r s
BaseLine

t |
,

| }
None	

~ Ç
}


É Ñ
;


Ñ Ö
public 
static  
TextAlignmentOptions **
ConvertTextAlignmentEnumValues+ I
(I J 
TextAlignmentOptionsJ ^
oldValue_ g
)g h
{ 	
switch 
( 
( 
int 
) 
oldValue !
)! "
{ 
case 
$num 
: 
return  
TextAlignmentOptions /
./ 0
TopLeft0 7
;7 8
case 
$num 
: 
return  
TextAlignmentOptions /
./ 0
Top0 3
;3 4
case 
$num 
: 
return  
TextAlignmentOptions /
./ 0
TopRight0 8
;8 9
case 
$num 
: 
return  
TextAlignmentOptions /
./ 0
TopJustified0 <
;< =
case 
$num 
: 
return  
TextAlignmentOptions /
./ 0
Left0 4
;4 5
case 
$num 
: 
return    
TextAlignmentOptions   /
.  / 0
Center  0 6
;  6 7
case!! 
$num!! 
:!! 
return""  
TextAlignmentOptions"" /
.""/ 0
Right""0 5
;""5 6
case## 
$num## 
:## 
return$$  
TextAlignmentOptions$$ /
.$$/ 0
	Justified$$0 9
;$$9 :
case%% 
$num%% 
:%% 
return&&  
TextAlignmentOptions&& /
.&&/ 0

BottomLeft&&0 :
;&&: ;
case'' 
$num'' 
:'' 
return((  
TextAlignmentOptions(( /
.((/ 0
Bottom((0 6
;((6 7
case)) 
$num)) 
:)) 
return**  
TextAlignmentOptions** /
.**/ 0
BottomRight**0 ;
;**; <
case++ 
$num++ 
:++ 
return,,  
TextAlignmentOptions,, /
.,,/ 0
BottomJustified,,0 ?
;,,? @
case-- 
$num-- 
:-- 
return..  
TextAlignmentOptions.. /
.../ 0
BaselineLeft..0 <
;..< =
case// 
$num// 
:// 
return00  
TextAlignmentOptions00 /
.00/ 0
Baseline000 8
;008 9
case11 
$num11 
:11 
return22  
TextAlignmentOptions22 /
.22/ 0
BaselineRight220 =
;22= >
case33 
$num33 
:33 
return44  
TextAlignmentOptions44 /
.44/ 0
BaselineJustified440 A
;44A B
case55 
$num55 
:55 
return66  
TextAlignmentOptions66 /
.66/ 0
MidlineLeft660 ;
;66; <
case77 
$num77 
:77 
return88  
TextAlignmentOptions88 /
.88/ 0
Midline880 7
;887 8
case99 
$num99 
:99 
return::  
TextAlignmentOptions:: /
.::/ 0
MidlineRight::0 <
;::< =
case;; 
$num;; 
:;; 
return<<  
TextAlignmentOptions<< /
.<</ 0
MidlineJustified<<0 @
;<<@ A
case== 
$num== 
:== 
return>>  
TextAlignmentOptions>> /
.>>/ 0
CaplineLeft>>0 ;
;>>; <
case?? 
$num?? 
:?? 
return@@  
TextAlignmentOptions@@ /
.@@/ 0
Capline@@0 7
;@@7 8
caseAA 
$numAA 
:AA 
returnBB  
TextAlignmentOptionsBB /
.BB/ 0
CaplineRightBB0 <
;BB< =
caseCC 
$numCC 
:CC 
returnDD  
TextAlignmentOptionsDD /
.DD/ 0
CaplineJustifiedDD0 @
;DD@ A
}EE 
returnGG  
TextAlignmentOptionsGG '
.GG' (
TopLeftGG( /
;GG/ 0
}HH 	
}II 
}JJ õ-
ùD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_TextParsingUtilities.cs
	namespace 	
TMPro
 
{ 
public 

class $
TMP_TextParsingUtilities )
{ 
private		 
static		 
readonly		 $
TMP_TextParsingUtilities		  8

s_Instance		9 C
=		D E
new		F I$
TMP_TextParsingUtilities		J b
(		b c
)		c d
;		d e
static $
TMP_TextParsingUtilities '
(' (
)( )
{* +
}, -
public 
static $
TMP_TextParsingUtilities .
instance/ 7
{ 	
get 
{ 
return 

s_Instance #
;# $
}% &
} 	
public 
static 
int 
GetHashCode %
(% &
string& ,
s- .
). /
{ 	
int 
hashCode 
= 
$num 
; 
for!! 
(!! 
int!! 
i!! 
=!! 
$num!! 
;!! 
i!! 
<!! 
s!!  !
.!!! "
Length!!" (
;!!( )
i!!* +
++!!+ -
)!!- .
hashCode"" 
="" 
("" 
("" 
hashCode"" %
<<""& (
$num"") *
)""* +
+"", -
hashCode"". 6
)""6 7
^""8 9
ToUpperASCIIFast"": J
(""J K
s""K L
[""L M
i""M N
]""N O
)""O P
;""P Q
return$$ 
hashCode$$ 
;$$ 
}%% 	
public'' 
static'' 
int'' $
GetHashCodeCaseSensitive'' 2
(''2 3
string''3 9
s'': ;
)''; <
{(( 	
int)) 
hashCode)) 
=)) 
$num)) 
;)) 
for++ 
(++ 
int++ 
i++ 
=++ 
$num++ 
;++ 
i++ 
<++ 
s++  !
.++! "
Length++" (
;++( )
i++* +
+++++ -
)++- .
hashCode,, 
=,, 
(,, 
(,, 
hashCode,, %
<<,,& (
$num,,) *
),,* +
+,,, -
hashCode,,. 6
),,6 7
^,,8 9
s,,: ;
[,,; <
i,,< =
],,= >
;,,> ?
return.. 
hashCode.. 
;.. 
}// 	
const55 
string55 
k_LookupStringL55 $
=55% &
$str	55' ©
;
55© ™
const:: 
string:: 
k_LookupStringU:: $
=::% &
$str	::' ©
;
::© ™
publicAA 
staticAA 
charAA 
ToLowerASCIIFastAA +
(AA+ ,
charAA, 0
cAA1 2
)AA2 3
{BB 	
ifCC 
(CC 
cCC 
>CC 
k_LookupStringLCC #
.CC# $
LengthCC$ *
-CC+ ,
$numCC- .
)CC. /
returnDD 
cDD 
;DD 
returnFF 
k_LookupStringLFF "
[FF" #
cFF# $
]FF$ %
;FF% &
}GG 	
publicNN 
staticNN 
charNN 
ToUpperASCIIFastNN +
(NN+ ,
charNN, 0
cNN1 2
)NN2 3
{OO 	
ifPP 
(PP 
cPP 
>PP 
k_LookupStringUPP #
.PP# $
LengthPP$ *
-PP+ ,
$numPP- .
)PP. /
returnQQ 
cQQ 
;QQ 
returnSS 
k_LookupStringUSS "
[SS" #
cSS# $
]SS$ %
;SS% &
}TT 	
public[[ 
static[[ 
uint[[ 
ToUpperASCIIFast[[ +
([[+ ,
uint[[, 0
c[[1 2
)[[2 3
{\\ 	
if]] 
(]] 
c]] 
>]] 
k_LookupStringU]] #
.]]# $
Length]]$ *
-]]+ ,
$num]]- .
)]]. /
return^^ 
c^^ 
;^^ 
return`` 
k_LookupStringU`` "
[``" #
(``# $
int``$ '
)``' (
c``( )
]``) *
;``* +
}aa 	
publichh 
statichh 
uinthh 
ToLowerASCIIFasthh +
(hh+ ,
uinthh, 0
chh1 2
)hh2 3
{ii 	
ifjj 
(jj 
cjj 
>jj 
k_LookupStringLjj #
.jj# $
Lengthjj$ *
-jj+ ,
$numjj- .
)jj. /
returnkk 
ckk 
;kk 
returnmm 
k_LookupStringLmm "
[mm" #
(mm# $
intmm$ '
)mm' (
cmm( )
]mm) *
;mm* +
}nn 	
publicww 
staticww 
boolww 
IsHighSurrogateww *
(ww* +
uintww+ /
cww0 1
)ww1 2
{xx 	
returnyy 
cyy 
>yy 
$numyy 
&&yy  
cyy! "
<yy# $
$numyy% +
;yy+ ,
}zz 	
public
ÇÇ 
static
ÇÇ 
bool
ÇÇ 
IsLowSurrogate
ÇÇ )
(
ÇÇ) *
uint
ÇÇ* .
c
ÇÇ/ 0
)
ÇÇ0 1
{
ÉÉ 	
return
ÑÑ 
c
ÑÑ 
>
ÑÑ 
$num
ÑÑ 
&&
ÑÑ  
c
ÑÑ! "
<
ÑÑ# $
$num
ÑÑ% +
;
ÑÑ+ ,
}
ÖÖ 	
}
áá 
}àà ÆÜ
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_DefaultControls.cs
	namespace

 	
TMPro


 
{ 
public 

static 
class 
TMP_DefaultControls +
{ 
public 
struct 
	Resources 
{ 	
public 
Sprite 
standard "
;" #
public 
Sprite 

background $
;$ %
public 
Sprite 

inputField $
;$ %
public 
Sprite 
knob 
; 
public 
Sprite 
	checkmark #
;# $
public 
Sprite 
dropdown "
;" #
public 
Sprite 
mask 
; 
} 	
private 
const 
float 
kWidth "
=# $
$num% )
;) *
private 
const 
float 
kThickHeight (
=) *
$num+ .
;. /
private 
const 
float 
kThinHeight '
=( )
$num* -
;- .
private 
static 
Vector2 
s_TextElementSize 0
=1 2
new3 6
Vector27 >
(> ?
$num? C
,C D
$numE I
)I J
;J K
private 
static 
Vector2 
s_ThickElementSize 1
=2 3
new4 7
Vector28 ?
(? @
kWidth@ F
,F G
kThickHeightH T
)T U
;U V
private 
static 
Vector2 
s_ThinElementSize 0
=1 2
new3 6
Vector27 >
(> ?
kWidth? E
,E F
kThinHeightG R
)R S
;S T
private!! 
static!! 
Color!! $
s_DefaultSelectableColor!! 5
=!!6 7
new!!8 ;
Color!!< A
(!!A B
$num!!B D
,!!D E
$num!!F H
,!!H I
$num!!J L
,!!L M
$num!!N P
)!!P Q
;!!Q R
private## 
static## 
Color## 
s_TextColor## (
=##) *
new##+ .
Color##/ 4
(##4 5
$num##5 8
/##9 :
$num##; ?
,##? @
$num##A D
/##E F
$num##G K
,##K L
$num##M P
/##Q R
$num##S W
,##W X
$num##Y [
)##[ \
;##\ ]
private&& 
static&& 

GameObject&& !
CreateUIElementRoot&&" 5
(&&5 6
string&&6 <
name&&= A
,&&A B
Vector2&&C J
size&&K O
)&&O P
{'' 	

GameObject(( 
child(( 
=(( 
new(( "

GameObject((# -
(((- .
name((. 2
)((2 3
;((3 4
RectTransform)) 
rectTransform)) '
=))( )
child))* /
.))/ 0
AddComponent))0 <
<))< =
RectTransform))= J
>))J K
())K L
)))L M
;))M N
rectTransform** 
.** 
	sizeDelta** #
=**$ %
size**& *
;*** +
return++ 
child++ 
;++ 
},, 	
static.. 

GameObject.. 
CreateUIObject.. (
(..( )
string..) /
name..0 4
,..4 5

GameObject..6 @
parent..A G
)..G H
{// 	

GameObject00 
go00 
=00 
new00 

GameObject00  *
(00* +
name00+ /
)00/ 0
;000 1
go11 
.11 
AddComponent11 
<11 
RectTransform11 )
>11) *
(11* +
)11+ ,
;11, -
SetParentAndAlign22 
(22 
go22  
,22  !
parent22" (
)22( )
;22) *
return33 
go33 
;33 
}44 	
private66 
static66 
void66  
SetDefaultTextValues66 0
(660 1
TMP_Text661 9
lbl66: =
)66= >
{77 	
lbl;; 
.;; 
color;; 
=;; 
s_TextColor;; #
;;;# $
lbl<< 
.<< 
fontSize<< 
=<< 
$num<< 
;<< 
}== 	
private?? 
static?? 
void?? +
SetDefaultColorTransitionValues?? ;
(??; <

Selectable??< F
slider??G M
)??M N
{@@ 	

ColorBlockAA 
colorsAA 
=AA 
sliderAA  &
.AA& '
colorsAA' -
;AA- .
colorsBB 
.BB 
highlightedColorBB #
=BB$ %
newBB& )
ColorBB* /
(BB/ 0
$numBB0 6
,BB6 7
$numBB8 >
,BB> ?
$numBB@ F
)BBF G
;BBG H
colorsCC 
.CC 
pressedColorCC 
=CC  !
newCC" %
ColorCC& +
(CC+ ,
$numCC, 2
,CC2 3
$numCC4 :
,CC: ;
$numCC< B
)CCB C
;CCC D
colorsDD 
.DD 
disabledColorDD  
=DD! "
newDD# &
ColorDD' ,
(DD, -
$numDD- 3
,DD3 4
$numDD5 ;
,DD; <
$numDD= C
)DDC D
;DDD E
}EE 	
privateGG 
staticGG 
voidGG 
SetParentAndAlignGG -
(GG- .

GameObjectGG. 8
childGG9 >
,GG> ?

GameObjectGG@ J
parentGGK Q
)GGQ R
{HH 	
ifII 
(II 
parentII 
==II 
nullII 
)II 
returnJJ 
;JJ 
childLL 
.LL 
	transformLL 
.LL 
	SetParentLL %
(LL% &
parentLL& ,
.LL, -
	transformLL- 6
,LL6 7
falseLL8 =
)LL= >
;LL> ?
SetLayerRecursivelyMM 
(MM  
childMM  %
,MM% &
parentMM' -
.MM- .
layerMM. 3
)MM3 4
;MM4 5
}NN 	
privatePP 
staticPP 
voidPP 
SetLayerRecursivelyPP /
(PP/ 0

GameObjectPP0 :
goPP; =
,PP= >
intPP? B
layerPPC H
)PPH I
{QQ 	
goRR 
.RR 
layerRR 
=RR 
layerRR 
;RR 
	TransformSS 
tSS 
=SS 
goSS 
.SS 
	transformSS &
;SS& '
forTT 
(TT 
intTT 
iTT 
=TT 
$numTT 
;TT 
iTT 
<TT 
tTT  !
.TT! "

childCountTT" ,
;TT, -
iTT. /
++TT/ 1
)TT1 2
SetLayerRecursivelyUU #
(UU# $
tUU$ %
.UU% &
GetChildUU& .
(UU. /
iUU/ 0
)UU0 1
.UU1 2

gameObjectUU2 <
,UU< =
layerUU> C
)UUC D
;UUD E
}VV 	
publicZZ 
staticZZ 

GameObjectZZ  
CreateScrollbarZZ! 0
(ZZ0 1
	ResourcesZZ1 :
	resourcesZZ; D
)ZZD E
{[[ 	

GameObject]] 
scrollbarRoot]] $
=]]% &
CreateUIElementRoot]]' :
(]]: ;
$str]]; F
,]]F G
s_ThinElementSize]]H Y
)]]Y Z
;]]Z [

GameObject__ 

sliderArea__ !
=__" #
CreateUIObject__$ 2
(__2 3
$str__3 A
,__A B
scrollbarRoot__C P
)__P Q
;__Q R

GameObject`` 
handle`` 
=`` 
CreateUIObject``  .
(``. /
$str``/ 7
,``7 8

sliderArea``9 C
)``C D
;``D E
Imagebb 
bgImagebb 
=bb 
scrollbarRootbb )
.bb) *
AddComponentbb* 6
<bb6 7
Imagebb7 <
>bb< =
(bb= >
)bb> ?
;bb? @
bgImagecc 
.cc 
spritecc 
=cc 
	resourcescc &
.cc& '

backgroundcc' 1
;cc1 2
bgImagedd 
.dd 
typedd 
=dd 
Imagedd  
.dd  !
Typedd! %
.dd% &
Sliceddd& ,
;dd, -
bgImageee 
.ee 
coloree 
=ee $
s_DefaultSelectableColoree 4
;ee4 5
Imagegg 
handleImagegg 
=gg 
handlegg  &
.gg& '
AddComponentgg' 3
<gg3 4
Imagegg4 9
>gg9 :
(gg: ;
)gg; <
;gg< =
handleImagehh 
.hh 
spritehh 
=hh  
	resourceshh! *
.hh* +
standardhh+ 3
;hh3 4
handleImageii 
.ii 
typeii 
=ii 
Imageii $
.ii$ %
Typeii% )
.ii) *
Slicedii* 0
;ii0 1
handleImagejj 
.jj 
colorjj 
=jj $
s_DefaultSelectableColorjj  8
;jj8 9
RectTransformll 
sliderAreaRectll (
=ll) *

sliderAreall+ 5
.ll5 6
GetComponentll6 B
<llB C
RectTransformllC P
>llP Q
(llQ R
)llR S
;llS T
sliderAreaRectmm 
.mm 
	sizeDeltamm $
=mm% &
newmm' *
Vector2mm+ 2
(mm2 3
-mm3 4
$nummm4 6
,mm6 7
-mm8 9
$nummm9 ;
)mm; <
;mm< =
sliderAreaRectnn 
.nn 
	anchorMinnn $
=nn% &
Vector2nn' .
.nn. /
zeronn/ 3
;nn3 4
sliderAreaRectoo 
.oo 
	anchorMaxoo $
=oo% &
Vector2oo' .
.oo. /
oneoo/ 2
;oo2 3
RectTransformqq 

handleRectqq $
=qq% &
handleqq' -
.qq- .
GetComponentqq. :
<qq: ;
RectTransformqq; H
>qqH I
(qqI J
)qqJ K
;qqK L

handleRectrr 
.rr 
	sizeDeltarr  
=rr! "
newrr# &
Vector2rr' .
(rr. /
$numrr/ 1
,rr1 2
$numrr3 5
)rr5 6
;rr6 7
	Scrollbartt 
	scrollbartt 
=tt  !
scrollbarRoottt" /
.tt/ 0
AddComponenttt0 <
<tt< =
	Scrollbartt= F
>ttF G
(ttG H
)ttH I
;ttI J
	scrollbaruu 
.uu 

handleRectuu  
=uu! "

handleRectuu# -
;uu- .
	scrollbarvv 
.vv 
targetGraphicvv #
=vv$ %
handleImagevv& 1
;vv1 2+
SetDefaultColorTransitionValuesww +
(ww+ ,
	scrollbarww, 5
)ww5 6
;ww6 7
returnyy 
scrollbarRootyy  
;yy  !
}zz 	
public|| 
static|| 

GameObject||  
CreateButton||! -
(||- .
	Resources||. 7
	resources||8 A
)||A B
{}} 	

GameObject~~ 

buttonRoot~~ !
=~~" #
CreateUIElementRoot~~$ 7
(~~7 8
$str~~8 @
,~~@ A
s_ThickElementSize~~B T
)~~T U
;~~U V

GameObject
ÄÄ 
	childText
ÄÄ  
=
ÄÄ! "
new
ÄÄ# &

GameObject
ÄÄ' 1
(
ÄÄ1 2
$str
ÄÄ2 >
)
ÄÄ> ?
;
ÄÄ? @
	childText
ÅÅ 
.
ÅÅ 
AddComponent
ÅÅ "
<
ÅÅ" #
RectTransform
ÅÅ# 0
>
ÅÅ0 1
(
ÅÅ1 2
)
ÅÅ2 3
;
ÅÅ3 4
SetParentAndAlign
ÇÇ 
(
ÇÇ 
	childText
ÇÇ '
,
ÇÇ' (

buttonRoot
ÇÇ) 3
)
ÇÇ3 4
;
ÇÇ4 5
Image
ÑÑ 
image
ÑÑ 
=
ÑÑ 

buttonRoot
ÑÑ $
.
ÑÑ$ %
AddComponent
ÑÑ% 1
<
ÑÑ1 2
Image
ÑÑ2 7
>
ÑÑ7 8
(
ÑÑ8 9
)
ÑÑ9 :
;
ÑÑ: ;
image
ÖÖ 
.
ÖÖ 
sprite
ÖÖ 
=
ÖÖ 
	resources
ÖÖ $
.
ÖÖ$ %
standard
ÖÖ% -
;
ÖÖ- .
image
ÜÜ 
.
ÜÜ 
type
ÜÜ 
=
ÜÜ 
Image
ÜÜ 
.
ÜÜ 
Type
ÜÜ #
.
ÜÜ# $
Sliced
ÜÜ$ *
;
ÜÜ* +
image
áá 
.
áá 
color
áá 
=
áá &
s_DefaultSelectableColor
áá 2
;
áá2 3
Button
ââ 
bt
ââ 
=
ââ 

buttonRoot
ââ "
.
ââ" #
AddComponent
ââ# /
<
ââ/ 0
Button
ââ0 6
>
ââ6 7
(
ââ7 8
)
ââ8 9
;
ââ9 :-
SetDefaultColorTransitionValues
ää +
(
ää+ ,
bt
ää, .
)
ää. /
;
ää/ 0
TextMeshProUGUI
åå 
text
åå  
=
åå! "
	childText
åå# ,
.
åå, -
AddComponent
åå- 9
<
åå9 :
TextMeshProUGUI
åå: I
>
ååI J
(
ååJ K
)
ååK L
;
ååL M
text
çç 
.
çç 
text
çç 
=
çç 
$str
çç  
;
çç  !
text
éé 
.
éé 
	alignment
éé 
=
éé "
TextAlignmentOptions
éé 1
.
éé1 2
Center
éé2 8
;
éé8 9"
SetDefaultTextValues
èè  
(
èè  !
text
èè! %
)
èè% &
;
èè& '
RectTransform
ëë 
textRectTransform
ëë +
=
ëë, -
	childText
ëë. 7
.
ëë7 8
GetComponent
ëë8 D
<
ëëD E
RectTransform
ëëE R
>
ëëR S
(
ëëS T
)
ëëT U
;
ëëU V
textRectTransform
íí 
.
íí 
	anchorMin
íí '
=
íí( )
Vector2
íí* 1
.
íí1 2
zero
íí2 6
;
íí6 7
textRectTransform
ìì 
.
ìì 
	anchorMax
ìì '
=
ìì( )
Vector2
ìì* 1
.
ìì1 2
one
ìì2 5
;
ìì5 6
textRectTransform
îî 
.
îî 
	sizeDelta
îî '
=
îî( )
Vector2
îî* 1
.
îî1 2
zero
îî2 6
;
îî6 7
return
ññ 

buttonRoot
ññ 
;
ññ 
}
óó 	
public
ôô 
static
ôô 

GameObject
ôô  

CreateText
ôô! +
(
ôô+ ,
	Resources
ôô, 5
	resources
ôô6 ?
)
ôô? @
{
öö 	

GameObject
õõ 
go
õõ 
=
õõ 
null
õõ  
;
õõ  !
go
ùù 
=
ùù 
ObjectFactory
ùù "
.
ùù" #
CreateGameObject
ùù# 3
(
ùù3 4
$str
ùù4 @
)
ùù@ A
;
ùùA B
TextMeshProUGUI
¢¢ 
textComponent
¢¢ )
=
¢¢* +
null
¢¢, 0
;
¢¢0 1
textComponent
§§ 
=
§§ 
ObjectFactory
§§  -
.
§§- .
AddComponent
§§. :
<
§§: ;
TextMeshProUGUI
§§; J
>
§§J K
(
§§K L
go
§§L N
)
§§N O
;
§§O P
return
©© 
go
©© 
;
©© 
}
™™ 	
public
≠≠ 
static
≠≠ 

GameObject
≠≠  
CreateInputField
≠≠! 1
(
≠≠1 2
	Resources
≠≠2 ;
	resources
≠≠< E
)
≠≠E F
{
ÆÆ 	

GameObject
ØØ 
root
ØØ 
=
ØØ !
CreateUIElementRoot
ØØ 1
(
ØØ1 2
$str
ØØ2 D
,
ØØD E 
s_ThickElementSize
ØØF X
)
ØØX Y
;
ØØY Z

GameObject
±± 
textArea
±± 
=
±±  !
CreateUIObject
±±" 0
(
±±0 1
$str
±±1 <
,
±±< =
root
±±> B
)
±±B C
;
±±C D

GameObject
≤≤ 
childPlaceholder
≤≤ '
=
≤≤( )
CreateUIObject
≤≤* 8
(
≤≤8 9
$str
≤≤9 F
,
≤≤F G
textArea
≤≤H P
)
≤≤P Q
;
≤≤Q R

GameObject
≥≥ 
	childText
≥≥  
=
≥≥! "
CreateUIObject
≥≥# 1
(
≥≥1 2
$str
≥≥2 8
,
≥≥8 9
textArea
≥≥: B
)
≥≥B C
;
≥≥C D
Image
µµ 
image
µµ 
=
µµ 
root
µµ 
.
µµ 
AddComponent
µµ +
<
µµ+ ,
Image
µµ, 1
>
µµ1 2
(
µµ2 3
)
µµ3 4
;
µµ4 5
image
∂∂ 
.
∂∂ 
sprite
∂∂ 
=
∂∂ 
	resources
∂∂ $
.
∂∂$ %

inputField
∂∂% /
;
∂∂/ 0
image
∑∑ 
.
∑∑ 
type
∑∑ 
=
∑∑ 
Image
∑∑ 
.
∑∑ 
Type
∑∑ #
.
∑∑# $
Sliced
∑∑$ *
;
∑∑* +
image
∏∏ 
.
∏∏ 
color
∏∏ 
=
∏∏ &
s_DefaultSelectableColor
∏∏ 2
;
∏∏2 3
TMP_InputField
∫∫ 

inputField
∫∫ %
=
∫∫& '
root
∫∫( ,
.
∫∫, -
AddComponent
∫∫- 9
<
∫∫9 :
TMP_InputField
∫∫: H
>
∫∫H I
(
∫∫I J
)
∫∫J K
;
∫∫K L-
SetDefaultColorTransitionValues
ªª +
(
ªª+ ,

inputField
ªª, 6
)
ªª6 7
;
ªª7 8

RectMask2D
ææ 
rectMask
ææ 
=
ææ  !
textArea
ææ" *
.
ææ* +
AddComponent
ææ+ 7
<
ææ7 8

RectMask2D
ææ8 B
>
ææB C
(
ææC D
)
ææD E
;
ææE F
rectMask
øø 
.
øø 
padding
øø 
=
øø 
new
øø "
Vector4
øø# *
(
øø* +
-
øø+ ,
$num
øø, -
,
øø- .
-
øø/ 0
$num
øø0 1
,
øø1 2
-
øø3 4
$num
øø4 5
,
øø5 6
-
øø7 8
$num
øø8 9
)
øø9 :
;
øø: ;
RectTransform
¡¡ #
textAreaRectTransform
¡¡ /
=
¡¡0 1
textArea
¡¡2 :
.
¡¡: ;
GetComponent
¡¡; G
<
¡¡G H
RectTransform
¡¡H U
>
¡¡U V
(
¡¡V W
)
¡¡W X
;
¡¡X Y#
textAreaRectTransform
¬¬ !
.
¬¬! "
	anchorMin
¬¬" +
=
¬¬, -
Vector2
¬¬. 5
.
¬¬5 6
zero
¬¬6 :
;
¬¬: ;#
textAreaRectTransform
√√ !
.
√√! "
	anchorMax
√√" +
=
√√, -
Vector2
√√. 5
.
√√5 6
one
√√6 9
;
√√9 :#
textAreaRectTransform
ƒƒ !
.
ƒƒ! "
	sizeDelta
ƒƒ" +
=
ƒƒ, -
Vector2
ƒƒ. 5
.
ƒƒ5 6
zero
ƒƒ6 :
;
ƒƒ: ;#
textAreaRectTransform
≈≈ !
.
≈≈! "
	offsetMin
≈≈" +
=
≈≈, -
new
≈≈. 1
Vector2
≈≈2 9
(
≈≈9 :
$num
≈≈: <
,
≈≈< =
$num
≈≈> ?
)
≈≈? @
;
≈≈@ A#
textAreaRectTransform
∆∆ !
.
∆∆! "
	offsetMax
∆∆" +
=
∆∆, -
new
∆∆. 1
Vector2
∆∆2 9
(
∆∆9 :
-
∆∆: ;
$num
∆∆; =
,
∆∆= >
-
∆∆? @
$num
∆∆@ A
)
∆∆A B
;
∆∆B C
TextMeshProUGUI
…… 
text
……  
=
……! "
	childText
……# ,
.
……, -
AddComponent
……- 9
<
……9 :
TextMeshProUGUI
……: I
>
……I J
(
……J K
)
……K L
;
……L M
text
   
.
   
text
   
=
   
$str
   
;
   
text
ÀÀ 
.
ÀÀ  
enableWordWrapping
ÀÀ #
=
ÀÀ$ %
false
ÀÀ& +
;
ÀÀ+ ,
text
ÃÃ 
.
ÃÃ 
extraPadding
ÃÃ 
=
ÃÃ 
true
ÃÃ  $
;
ÃÃ$ %
text
ÕÕ 
.
ÕÕ 
richText
ÕÕ 
=
ÕÕ 
true
ÕÕ  
;
ÕÕ  !"
SetDefaultTextValues
ŒŒ  
(
ŒŒ  !
text
ŒŒ! %
)
ŒŒ% &
;
ŒŒ& '
TextMeshProUGUI
–– 
placeholder
–– '
=
––( )
childPlaceholder
––* :
.
––: ;
AddComponent
––; G
<
––G H
TextMeshProUGUI
––H W
>
––W X
(
––X Y
)
––Y Z
;
––Z [
placeholder
—— 
.
—— 
text
—— 
=
—— 
$str
—— .
;
——. /
placeholder
““ 
.
““ 
fontSize
““  
=
““! "
$num
““# %
;
““% &
placeholder
”” 
.
”” 
	fontStyle
”” !
=
””" #

FontStyles
””$ .
.
””. /
Italic
””/ 5
;
””5 6
placeholder
‘‘ 
.
‘‘  
enableWordWrapping
‘‘ *
=
‘‘+ ,
false
‘‘- 2
;
‘‘2 3
placeholder
’’ 
.
’’ 
extraPadding
’’ $
=
’’% &
true
’’' +
;
’’+ ,
Color
ÿÿ 
placeholderColor
ÿÿ "
=
ÿÿ# $
text
ÿÿ% )
.
ÿÿ) *
color
ÿÿ* /
;
ÿÿ/ 0
placeholderColor
ŸŸ 
.
ŸŸ 
a
ŸŸ 
*=
ŸŸ !
$num
ŸŸ" &
;
ŸŸ& '
placeholder
⁄⁄ 
.
⁄⁄ 
color
⁄⁄ 
=
⁄⁄ 
placeholderColor
⁄⁄  0
;
⁄⁄0 1
placeholder
›› 
.
›› 

gameObject
›› "
.
››" #
AddComponent
››# /
<
››/ 0
LayoutElement
››0 =
>
››= >
(
››> ?
)
››? @
.
››@ A
ignoreLayout
››A M
=
››N O
true
››P T
;
››T U
RectTransform
ﬂﬂ 
textRectTransform
ﬂﬂ +
=
ﬂﬂ, -
	childText
ﬂﬂ. 7
.
ﬂﬂ7 8
GetComponent
ﬂﬂ8 D
<
ﬂﬂD E
RectTransform
ﬂﬂE R
>
ﬂﬂR S
(
ﬂﬂS T
)
ﬂﬂT U
;
ﬂﬂU V
textRectTransform
‡‡ 
.
‡‡ 
	anchorMin
‡‡ '
=
‡‡( )
Vector2
‡‡* 1
.
‡‡1 2
zero
‡‡2 6
;
‡‡6 7
textRectTransform
·· 
.
·· 
	anchorMax
·· '
=
··( )
Vector2
··* 1
.
··1 2
one
··2 5
;
··5 6
textRectTransform
‚‚ 
.
‚‚ 
	sizeDelta
‚‚ '
=
‚‚( )
Vector2
‚‚* 1
.
‚‚1 2
zero
‚‚2 6
;
‚‚6 7
textRectTransform
„„ 
.
„„ 
	offsetMin
„„ '
=
„„( )
new
„„* -
Vector2
„„. 5
(
„„5 6
$num
„„6 7
,
„„7 8
$num
„„9 :
)
„„: ;
;
„„; <
textRectTransform
‰‰ 
.
‰‰ 
	offsetMax
‰‰ '
=
‰‰( )
new
‰‰* -
Vector2
‰‰. 5
(
‰‰5 6
$num
‰‰6 7
,
‰‰7 8
$num
‰‰9 :
)
‰‰: ;
;
‰‰; <
RectTransform
ÊÊ &
placeholderRectTransform
ÊÊ 2
=
ÊÊ3 4
childPlaceholder
ÊÊ5 E
.
ÊÊE F
GetComponent
ÊÊF R
<
ÊÊR S
RectTransform
ÊÊS `
>
ÊÊ` a
(
ÊÊa b
)
ÊÊb c
;
ÊÊc d&
placeholderRectTransform
ÁÁ $
.
ÁÁ$ %
	anchorMin
ÁÁ% .
=
ÁÁ/ 0
Vector2
ÁÁ1 8
.
ÁÁ8 9
zero
ÁÁ9 =
;
ÁÁ= >&
placeholderRectTransform
ËË $
.
ËË$ %
	anchorMax
ËË% .
=
ËË/ 0
Vector2
ËË1 8
.
ËË8 9
one
ËË9 <
;
ËË< =&
placeholderRectTransform
ÈÈ $
.
ÈÈ$ %
	sizeDelta
ÈÈ% .
=
ÈÈ/ 0
Vector2
ÈÈ1 8
.
ÈÈ8 9
zero
ÈÈ9 =
;
ÈÈ= >&
placeholderRectTransform
ÍÍ $
.
ÍÍ$ %
	offsetMin
ÍÍ% .
=
ÍÍ/ 0
new
ÍÍ1 4
Vector2
ÍÍ5 <
(
ÍÍ< =
$num
ÍÍ= >
,
ÍÍ> ?
$num
ÍÍ@ A
)
ÍÍA B
;
ÍÍB C&
placeholderRectTransform
ÎÎ $
.
ÎÎ$ %
	offsetMax
ÎÎ% .
=
ÎÎ/ 0
new
ÎÎ1 4
Vector2
ÎÎ5 <
(
ÎÎ< =
$num
ÎÎ= >
,
ÎÎ> ?
$num
ÎÎ@ A
)
ÎÎA B
;
ÎÎB C

inputField
ÌÌ 
.
ÌÌ 
textViewport
ÌÌ #
=
ÌÌ$ %#
textAreaRectTransform
ÌÌ& ;
;
ÌÌ; <

inputField
ÓÓ 
.
ÓÓ 
textComponent
ÓÓ $
=
ÓÓ% &
text
ÓÓ' +
;
ÓÓ+ ,

inputField
ÔÔ 
.
ÔÔ 
placeholder
ÔÔ "
=
ÔÔ# $
placeholder
ÔÔ% 0
;
ÔÔ0 1

inputField
 
.
 
	fontAsset
  
=
! "
text
# '
.
' (
font
( ,
;
, -
return
ÚÚ 
root
ÚÚ 
;
ÚÚ 
}
ÛÛ 	
public
ıı 
static
ıı 

GameObject
ıı  
CreateDropdown
ıı! /
(
ıı/ 0
	Resources
ıı0 9
	resources
ıı: C
)
ııC D
{
ˆˆ 	

GameObject
˜˜ 
root
˜˜ 
=
˜˜ !
CreateUIElementRoot
˜˜ 1
(
˜˜1 2
$str
˜˜2 <
,
˜˜< = 
s_ThickElementSize
˜˜> P
)
˜˜P Q
;
˜˜Q R

GameObject
˘˘ 
label
˘˘ 
=
˘˘ 
CreateUIObject
˘˘ -
(
˘˘- .
$str
˘˘. 5
,
˘˘5 6
root
˘˘7 ;
)
˘˘; <
;
˘˘< =

GameObject
˙˙ 
arrow
˙˙ 
=
˙˙ 
CreateUIObject
˙˙ -
(
˙˙- .
$str
˙˙. 5
,
˙˙5 6
root
˙˙7 ;
)
˙˙; <
;
˙˙< =

GameObject
˚˚ 
template
˚˚ 
=
˚˚  !
CreateUIObject
˚˚" 0
(
˚˚0 1
$str
˚˚1 ;
,
˚˚; <
root
˚˚= A
)
˚˚A B
;
˚˚B C

GameObject
¸¸ 
viewport
¸¸ 
=
¸¸  !
CreateUIObject
¸¸" 0
(
¸¸0 1
$str
¸¸1 ;
,
¸¸; <
template
¸¸= E
)
¸¸E F
;
¸¸F G

GameObject
˝˝ 
content
˝˝ 
=
˝˝  
CreateUIObject
˝˝! /
(
˝˝/ 0
$str
˝˝0 9
,
˝˝9 :
viewport
˝˝; C
)
˝˝C D
;
˝˝D E

GameObject
˛˛ 
item
˛˛ 
=
˛˛ 
CreateUIObject
˛˛ ,
(
˛˛, -
$str
˛˛- 3
,
˛˛3 4
content
˛˛5 <
)
˛˛< =
;
˛˛= >

GameObject
ˇˇ 
itemBackground
ˇˇ %
=
ˇˇ& '
CreateUIObject
ˇˇ( 6
(
ˇˇ6 7
$str
ˇˇ7 H
,
ˇˇH I
item
ˇˇJ N
)
ˇˇN O
;
ˇˇO P

GameObject
ÄÄ 
itemCheckmark
ÄÄ $
=
ÄÄ% &
CreateUIObject
ÄÄ' 5
(
ÄÄ5 6
$str
ÄÄ6 F
,
ÄÄF G
item
ÄÄH L
)
ÄÄL M
;
ÄÄM N

GameObject
ÅÅ 
	itemLabel
ÅÅ  
=
ÅÅ! "
CreateUIObject
ÅÅ# 1
(
ÅÅ1 2
$str
ÅÅ2 >
,
ÅÅ> ?
item
ÅÅ@ D
)
ÅÅD E
;
ÅÅE F

GameObject
ÖÖ 
	scrollbar
ÖÖ  
=
ÖÖ! "
CreateScrollbar
ÖÖ# 2
(
ÖÖ2 3
	resources
ÖÖ3 <
)
ÖÖ< =
;
ÖÖ= >
	scrollbar
ÜÜ 
.
ÜÜ 
name
ÜÜ 
=
ÜÜ 
$str
ÜÜ (
;
ÜÜ( )
SetParentAndAlign
áá 
(
áá 
	scrollbar
áá '
,
áá' (
template
áá) 1
)
áá1 2
;
áá2 3
	Scrollbar
ââ  
scrollbarScrollbar
ââ (
=
ââ) *
	scrollbar
ââ+ 4
.
ââ4 5
GetComponent
ââ5 A
<
ââA B
	Scrollbar
ââB K
>
ââK L
(
ââL M
)
ââM N
;
ââN O 
scrollbarScrollbar
ää 
.
ää 
SetDirection
ää +
(
ää+ ,
	Scrollbar
ää, 5
.
ää5 6
	Direction
ää6 ?
.
ää? @
BottomToTop
ää@ K
,
ääK L
true
ääM Q
)
ääQ R
;
ääR S
RectTransform
åå 
vScrollbarRT
åå &
=
åå' (
	scrollbar
åå) 2
.
åå2 3
GetComponent
åå3 ?
<
åå? @
RectTransform
åå@ M
>
ååM N
(
ååN O
)
ååO P
;
ååP Q
vScrollbarRT
çç 
.
çç 
	anchorMin
çç "
=
çç# $
Vector2
çç% ,
.
çç, -
right
çç- 2
;
çç2 3
vScrollbarRT
éé 
.
éé 
	anchorMax
éé "
=
éé# $
Vector2
éé% ,
.
éé, -
one
éé- 0
;
éé0 1
vScrollbarRT
èè 
.
èè 
pivot
èè 
=
èè  
Vector2
èè! (
.
èè( )
one
èè) ,
;
èè, -
vScrollbarRT
êê 
.
êê 
	sizeDelta
êê "
=
êê# $
new
êê% (
Vector2
êê) 0
(
êê0 1
vScrollbarRT
êê1 =
.
êê= >
	sizeDelta
êê> G
.
êêG H
x
êêH I
,
êêI J
$num
êêK L
)
êêL M
;
êêM N
TextMeshProUGUI
îî 
itemLabelText
îî )
=
îî* +
	itemLabel
îî, 5
.
îî5 6
AddComponent
îî6 B
<
îîB C
TextMeshProUGUI
îîC R
>
îîR S
(
îîS T
)
îîT U
;
îîU V"
SetDefaultTextValues
ïï  
(
ïï  !
itemLabelText
ïï! .
)
ïï. /
;
ïï/ 0
itemLabelText
ññ 
.
ññ 
	alignment
ññ #
=
ññ$ %"
TextAlignmentOptions
ññ& :
.
ññ: ;
Left
ññ; ?
;
ññ? @
Image
òò !
itemBackgroundImage
òò %
=
òò& '
itemBackground
òò( 6
.
òò6 7
AddComponent
òò7 C
<
òòC D
Image
òòD I
>
òòI J
(
òòJ K
)
òòK L
;
òòL M!
itemBackgroundImage
ôô 
.
ôô  
color
ôô  %
=
ôô& '
new
ôô( +
Color32
ôô, 3
(
ôô3 4
$num
ôô4 7
,
ôô7 8
$num
ôô9 <
,
ôô< =
$num
ôô> A
,
ôôA B
$num
ôôC F
)
ôôF G
;
ôôG H
Image
õõ  
itemCheckmarkImage
õõ $
=
õõ% &
itemCheckmark
õõ' 4
.
õõ4 5
AddComponent
õõ5 A
<
õõA B
Image
õõB G
>
õõG H
(
õõH I
)
õõI J
;
õõJ K 
itemCheckmarkImage
úú 
.
úú 
sprite
úú %
=
úú& '
	resources
úú( 1
.
úú1 2
	checkmark
úú2 ;
;
úú; <
Toggle
ûû 

itemToggle
ûû 
=
ûû 
item
ûû  $
.
ûû$ %
AddComponent
ûû% 1
<
ûû1 2
Toggle
ûû2 8
>
ûû8 9
(
ûû9 :
)
ûû: ;
;
ûû; <

itemToggle
üü 
.
üü 
targetGraphic
üü $
=
üü% &!
itemBackgroundImage
üü' :
;
üü: ;

itemToggle
†† 
.
†† 
graphic
†† 
=
††   
itemCheckmarkImage
††! 3
;
††3 4

itemToggle
°° 
.
°° 
isOn
°° 
=
°° 
true
°° "
;
°°" #
Image
•• 
templateImage
•• 
=
••  !
template
••" *
.
••* +
AddComponent
••+ 7
<
••7 8
Image
••8 =
>
••= >
(
••> ?
)
••? @
;
••@ A
templateImage
¶¶ 
.
¶¶ 
sprite
¶¶  
=
¶¶! "
	resources
¶¶# ,
.
¶¶, -
standard
¶¶- 5
;
¶¶5 6
templateImage
ßß 
.
ßß 
type
ßß 
=
ßß  
Image
ßß! &
.
ßß& '
Type
ßß' +
.
ßß+ ,
Sliced
ßß, 2
;
ßß2 3

ScrollRect
©©  
templateScrollRect
©© )
=
©©* +
template
©©, 4
.
©©4 5
AddComponent
©©5 A
<
©©A B

ScrollRect
©©B L
>
©©L M
(
©©M N
)
©©N O
;
©©O P 
templateScrollRect
™™ 
.
™™ 
content
™™ &
=
™™' (
(
™™) *
RectTransform
™™* 7
)
™™7 8
content
™™8 ?
.
™™? @
	transform
™™@ I
;
™™I J 
templateScrollRect
´´ 
.
´´ 
viewport
´´ '
=
´´( )
(
´´* +
RectTransform
´´+ 8
)
´´8 9
viewport
´´9 A
.
´´A B
	transform
´´B K
;
´´K L 
templateScrollRect
¨¨ 
.
¨¨ 

horizontal
¨¨ )
=
¨¨* +
false
¨¨, 1
;
¨¨1 2 
templateScrollRect
≠≠ 
.
≠≠ 
movementType
≠≠ +
=
≠≠, -

ScrollRect
≠≠. 8
.
≠≠8 9
MovementType
≠≠9 E
.
≠≠E F
Clamped
≠≠F M
;
≠≠M N 
templateScrollRect
ÆÆ 
.
ÆÆ 
verticalScrollbar
ÆÆ 0
=
ÆÆ1 2 
scrollbarScrollbar
ÆÆ3 E
;
ÆÆE F 
templateScrollRect
ØØ 
.
ØØ )
verticalScrollbarVisibility
ØØ :
=
ØØ; <

ScrollRect
ØØ= G
.
ØØG H!
ScrollbarVisibility
ØØH [
.
ØØ[ \'
AutoHideAndExpandViewport
ØØ\ u
;
ØØu v 
templateScrollRect
∞∞ 
.
∞∞ &
verticalScrollbarSpacing
∞∞ 7
=
∞∞8 9
-
∞∞: ;
$num
∞∞; <
;
∞∞< =
Mask
≤≤ 
scrollRectMask
≤≤ 
=
≤≤  !
viewport
≤≤" *
.
≤≤* +
AddComponent
≤≤+ 7
<
≤≤7 8
Mask
≤≤8 <
>
≤≤< =
(
≤≤= >
)
≤≤> ?
;
≤≤? @
scrollRectMask
≥≥ 
.
≥≥ 
showMaskGraphic
≥≥ *
=
≥≥+ ,
false
≥≥- 2
;
≥≥2 3
Image
µµ 
viewportImage
µµ 
=
µµ  !
viewport
µµ" *
.
µµ* +
AddComponent
µµ+ 7
<
µµ7 8
Image
µµ8 =
>
µµ= >
(
µµ> ?
)
µµ? @
;
µµ@ A
viewportImage
∂∂ 
.
∂∂ 
sprite
∂∂  
=
∂∂! "
	resources
∂∂# ,
.
∂∂, -
mask
∂∂- 1
;
∂∂1 2
viewportImage
∑∑ 
.
∑∑ 
type
∑∑ 
=
∑∑  
Image
∑∑! &
.
∑∑& '
Type
∑∑' +
.
∑∑+ ,
Sliced
∑∑, 2
;
∑∑2 3
TextMeshProUGUI
ªª 
	labelText
ªª %
=
ªª& '
label
ªª( -
.
ªª- .
AddComponent
ªª. :
<
ªª: ;
TextMeshProUGUI
ªª; J
>
ªªJ K
(
ªªK L
)
ªªL M
;
ªªM N"
SetDefaultTextValues
ºº  
(
ºº  !
	labelText
ºº! *
)
ºº* +
;
ºº+ ,
	labelText
ΩΩ 
.
ΩΩ 
	alignment
ΩΩ 
=
ΩΩ  !"
TextAlignmentOptions
ΩΩ" 6
.
ΩΩ6 7
Left
ΩΩ7 ;
;
ΩΩ; <
Image
øø 

arrowImage
øø 
=
øø 
arrow
øø $
.
øø$ %
AddComponent
øø% 1
<
øø1 2
Image
øø2 7
>
øø7 8
(
øø8 9
)
øø9 :
;
øø: ;

arrowImage
¿¿ 
.
¿¿ 
sprite
¿¿ 
=
¿¿ 
	resources
¿¿  )
.
¿¿) *
dropdown
¿¿* 2
;
¿¿2 3
Image
¬¬ 
backgroundImage
¬¬ !
=
¬¬" #
root
¬¬$ (
.
¬¬( )
AddComponent
¬¬) 5
<
¬¬5 6
Image
¬¬6 ;
>
¬¬; <
(
¬¬< =
)
¬¬= >
;
¬¬> ?
backgroundImage
√√ 
.
√√ 
sprite
√√ "
=
√√# $
	resources
√√% .
.
√√. /
standard
√√/ 7
;
√√7 8
backgroundImage
ƒƒ 
.
ƒƒ 
color
ƒƒ !
=
ƒƒ" #&
s_DefaultSelectableColor
ƒƒ$ <
;
ƒƒ< =
backgroundImage
≈≈ 
.
≈≈ 
type
≈≈  
=
≈≈! "
Image
≈≈# (
.
≈≈( )
Type
≈≈) -
.
≈≈- .
Sliced
≈≈. 4
;
≈≈4 5
TMP_Dropdown
«« 
dropdown
«« !
=
««" #
root
««$ (
.
««( )
AddComponent
««) 5
<
««5 6
TMP_Dropdown
««6 B
>
««B C
(
««C D
)
««D E
;
««E F
dropdown
»» 
.
»» 
targetGraphic
»» "
=
»»# $
backgroundImage
»»% 4
;
»»4 5-
SetDefaultColorTransitionValues
…… +
(
……+ ,
dropdown
……, 4
)
……4 5
;
……5 6
dropdown
   
.
   
template
   
=
   
template
    (
.
  ( )
GetComponent
  ) 5
<
  5 6
RectTransform
  6 C
>
  C D
(
  D E
)
  E F
;
  F G
dropdown
ÀÀ 
.
ÀÀ 
captionText
ÀÀ  
=
ÀÀ! "
	labelText
ÀÀ# ,
;
ÀÀ, -
dropdown
ÃÃ 
.
ÃÃ 
itemText
ÃÃ 
=
ÃÃ 
itemLabelText
ÃÃ  -
;
ÃÃ- .
itemLabelText
œœ 
.
œœ 
text
œœ 
=
œœ  
$str
œœ! +
;
œœ+ ,
dropdown
–– 
.
–– 
options
–– 
.
–– 
Add
––  
(
––  !
new
––! $
TMP_Dropdown
––% 1
.
––1 2

OptionData
––2 <
{
––= >
text
––> B
=
––C D
$str
––E O
}
––P Q
)
––Q R
;
––R S
dropdown
—— 
.
—— 
options
—— 
.
—— 
Add
——  
(
——  !
new
——! $
TMP_Dropdown
——% 1
.
——1 2

OptionData
——2 <
{
——= >
text
——> B
=
——C D
$str
——E O
}
——P Q
)
——Q R
;
——R S
dropdown
““ 
.
““ 
options
““ 
.
““ 
Add
““  
(
““  !
new
““! $
TMP_Dropdown
““% 1
.
““1 2

OptionData
““2 <
{
““= >
text
““> B
=
““C D
$str
““E O
}
““P Q
)
““Q R
;
““R S
dropdown
”” 
.
”” 
RefreshShownValue
”” &
(
””& '
)
””' (
;
””( )
RectTransform
◊◊ 
labelRT
◊◊ !
=
◊◊" #
label
◊◊$ )
.
◊◊) *
GetComponent
◊◊* 6
<
◊◊6 7
RectTransform
◊◊7 D
>
◊◊D E
(
◊◊E F
)
◊◊F G
;
◊◊G H
labelRT
ÿÿ 
.
ÿÿ 
	anchorMin
ÿÿ 
=
ÿÿ 
Vector2
ÿÿ  '
.
ÿÿ' (
zero
ÿÿ( ,
;
ÿÿ, -
labelRT
ŸŸ 
.
ŸŸ 
	anchorMax
ŸŸ 
=
ŸŸ 
Vector2
ŸŸ  '
.
ŸŸ' (
one
ŸŸ( +
;
ŸŸ+ ,
labelRT
⁄⁄ 
.
⁄⁄ 
	offsetMin
⁄⁄ 
=
⁄⁄ 
new
⁄⁄  #
Vector2
⁄⁄$ +
(
⁄⁄+ ,
$num
⁄⁄, .
,
⁄⁄. /
$num
⁄⁄0 1
)
⁄⁄1 2
;
⁄⁄2 3
labelRT
€€ 
.
€€ 
	offsetMax
€€ 
=
€€ 
new
€€  #
Vector2
€€$ +
(
€€+ ,
-
€€, -
$num
€€- /
,
€€/ 0
-
€€1 2
$num
€€2 3
)
€€3 4
;
€€4 5
RectTransform
›› 
arrowRT
›› !
=
››" #
arrow
››$ )
.
››) *
GetComponent
››* 6
<
››6 7
RectTransform
››7 D
>
››D E
(
››E F
)
››F G
;
››G H
arrowRT
ﬁﬁ 
.
ﬁﬁ 
	anchorMin
ﬁﬁ 
=
ﬁﬁ 
new
ﬁﬁ  #
Vector2
ﬁﬁ$ +
(
ﬁﬁ+ ,
$num
ﬁﬁ, -
,
ﬁﬁ- .
$num
ﬁﬁ/ 3
)
ﬁﬁ3 4
;
ﬁﬁ4 5
arrowRT
ﬂﬂ 
.
ﬂﬂ 
	anchorMax
ﬂﬂ 
=
ﬂﬂ 
new
ﬂﬂ  #
Vector2
ﬂﬂ$ +
(
ﬂﬂ+ ,
$num
ﬂﬂ, -
,
ﬂﬂ- .
$num
ﬂﬂ/ 3
)
ﬂﬂ3 4
;
ﬂﬂ4 5
arrowRT
‡‡ 
.
‡‡ 
	sizeDelta
‡‡ 
=
‡‡ 
new
‡‡  #
Vector2
‡‡$ +
(
‡‡+ ,
$num
‡‡, .
,
‡‡. /
$num
‡‡0 2
)
‡‡2 3
;
‡‡3 4
arrowRT
·· 
.
·· 
anchoredPosition
·· $
=
··% &
new
··' *
Vector2
··+ 2
(
··2 3
-
··3 4
$num
··4 6
,
··6 7
$num
··8 9
)
··9 :
;
··: ;
RectTransform
„„ 

templateRT
„„ $
=
„„% &
template
„„' /
.
„„/ 0
GetComponent
„„0 <
<
„„< =
RectTransform
„„= J
>
„„J K
(
„„K L
)
„„L M
;
„„M N

templateRT
‰‰ 
.
‰‰ 
	anchorMin
‰‰  
=
‰‰! "
new
‰‰# &
Vector2
‰‰' .
(
‰‰. /
$num
‰‰/ 0
,
‰‰0 1
$num
‰‰2 3
)
‰‰3 4
;
‰‰4 5

templateRT
ÂÂ 
.
ÂÂ 
	anchorMax
ÂÂ  
=
ÂÂ! "
new
ÂÂ# &
Vector2
ÂÂ' .
(
ÂÂ. /
$num
ÂÂ/ 0
,
ÂÂ0 1
$num
ÂÂ2 3
)
ÂÂ3 4
;
ÂÂ4 5

templateRT
ÊÊ 
.
ÊÊ 
pivot
ÊÊ 
=
ÊÊ 
new
ÊÊ "
Vector2
ÊÊ# *
(
ÊÊ* +
$num
ÊÊ+ /
,
ÊÊ/ 0
$num
ÊÊ1 2
)
ÊÊ2 3
;
ÊÊ3 4

templateRT
ÁÁ 
.
ÁÁ 
anchoredPosition
ÁÁ '
=
ÁÁ( )
new
ÁÁ* -
Vector2
ÁÁ. 5
(
ÁÁ5 6
$num
ÁÁ6 7
,
ÁÁ7 8
$num
ÁÁ9 :
)
ÁÁ: ;
;
ÁÁ; <

templateRT
ËË 
.
ËË 
	sizeDelta
ËË  
=
ËË! "
new
ËË# &
Vector2
ËË' .
(
ËË. /
$num
ËË/ 0
,
ËË0 1
$num
ËË2 5
)
ËË5 6
;
ËË6 7
RectTransform
ÍÍ 

viewportRT
ÍÍ $
=
ÍÍ% &
viewport
ÍÍ' /
.
ÍÍ/ 0
GetComponent
ÍÍ0 <
<
ÍÍ< =
RectTransform
ÍÍ= J
>
ÍÍJ K
(
ÍÍK L
)
ÍÍL M
;
ÍÍM N

viewportRT
ÎÎ 
.
ÎÎ 
	anchorMin
ÎÎ  
=
ÎÎ! "
new
ÎÎ# &
Vector2
ÎÎ' .
(
ÎÎ. /
$num
ÎÎ/ 0
,
ÎÎ0 1
$num
ÎÎ2 3
)
ÎÎ3 4
;
ÎÎ4 5

viewportRT
ÏÏ 
.
ÏÏ 
	anchorMax
ÏÏ  
=
ÏÏ! "
new
ÏÏ# &
Vector2
ÏÏ' .
(
ÏÏ. /
$num
ÏÏ/ 0
,
ÏÏ0 1
$num
ÏÏ2 3
)
ÏÏ3 4
;
ÏÏ4 5

viewportRT
ÌÌ 
.
ÌÌ 
	sizeDelta
ÌÌ  
=
ÌÌ! "
new
ÌÌ# &
Vector2
ÌÌ' .
(
ÌÌ. /
-
ÌÌ/ 0
$num
ÌÌ0 2
,
ÌÌ2 3
$num
ÌÌ4 5
)
ÌÌ5 6
;
ÌÌ6 7

viewportRT
ÓÓ 
.
ÓÓ 
pivot
ÓÓ 
=
ÓÓ 
new
ÓÓ "
Vector2
ÓÓ# *
(
ÓÓ* +
$num
ÓÓ+ ,
,
ÓÓ, -
$num
ÓÓ. /
)
ÓÓ/ 0
;
ÓÓ0 1
RectTransform
 
	contentRT
 #
=
$ %
content
& -
.
- .
GetComponent
. :
<
: ;
RectTransform
; H
>
H I
(
I J
)
J K
;
K L
	contentRT
ÒÒ 
.
ÒÒ 
	anchorMin
ÒÒ 
=
ÒÒ  !
new
ÒÒ" %
Vector2
ÒÒ& -
(
ÒÒ- .
$num
ÒÒ. 0
,
ÒÒ0 1
$num
ÒÒ2 3
)
ÒÒ3 4
;
ÒÒ4 5
	contentRT
ÚÚ 
.
ÚÚ 
	anchorMax
ÚÚ 
=
ÚÚ  !
new
ÚÚ" %
Vector2
ÚÚ& -
(
ÚÚ- .
$num
ÚÚ. 0
,
ÚÚ0 1
$num
ÚÚ2 3
)
ÚÚ3 4
;
ÚÚ4 5
	contentRT
ÛÛ 
.
ÛÛ 
pivot
ÛÛ 
=
ÛÛ 
new
ÛÛ !
Vector2
ÛÛ" )
(
ÛÛ) *
$num
ÛÛ* .
,
ÛÛ. /
$num
ÛÛ0 1
)
ÛÛ1 2
;
ÛÛ2 3
	contentRT
ÙÙ 
.
ÙÙ 
anchoredPosition
ÙÙ &
=
ÙÙ' (
new
ÙÙ) ,
Vector2
ÙÙ- 4
(
ÙÙ4 5
$num
ÙÙ5 6
,
ÙÙ6 7
$num
ÙÙ8 9
)
ÙÙ9 :
;
ÙÙ: ;
	contentRT
ıı 
.
ıı 
	sizeDelta
ıı 
=
ıı  !
new
ıı" %
Vector2
ıı& -
(
ıı- .
$num
ıı. /
,
ıı/ 0
$num
ıı1 3
)
ıı3 4
;
ıı4 5
RectTransform
˜˜ 
itemRT
˜˜  
=
˜˜! "
item
˜˜# '
.
˜˜' (
GetComponent
˜˜( 4
<
˜˜4 5
RectTransform
˜˜5 B
>
˜˜B C
(
˜˜C D
)
˜˜D E
;
˜˜E F
itemRT
¯¯ 
.
¯¯ 
	anchorMin
¯¯ 
=
¯¯ 
new
¯¯ "
Vector2
¯¯# *
(
¯¯* +
$num
¯¯+ ,
,
¯¯, -
$num
¯¯. 2
)
¯¯2 3
;
¯¯3 4
itemRT
˘˘ 
.
˘˘ 
	anchorMax
˘˘ 
=
˘˘ 
new
˘˘ "
Vector2
˘˘# *
(
˘˘* +
$num
˘˘+ ,
,
˘˘, -
$num
˘˘. 2
)
˘˘2 3
;
˘˘3 4
itemRT
˙˙ 
.
˙˙ 
	sizeDelta
˙˙ 
=
˙˙ 
new
˙˙ "
Vector2
˙˙# *
(
˙˙* +
$num
˙˙+ ,
,
˙˙, -
$num
˙˙. 0
)
˙˙0 1
;
˙˙1 2
RectTransform
¸¸ 
itemBackgroundRT
¸¸ *
=
¸¸+ ,
itemBackground
¸¸- ;
.
¸¸; <
GetComponent
¸¸< H
<
¸¸H I
RectTransform
¸¸I V
>
¸¸V W
(
¸¸W X
)
¸¸X Y
;
¸¸Y Z
itemBackgroundRT
˝˝ 
.
˝˝ 
	anchorMin
˝˝ &
=
˝˝' (
Vector2
˝˝) 0
.
˝˝0 1
zero
˝˝1 5
;
˝˝5 6
itemBackgroundRT
˛˛ 
.
˛˛ 
	anchorMax
˛˛ &
=
˛˛' (
Vector2
˛˛) 0
.
˛˛0 1
one
˛˛1 4
;
˛˛4 5
itemBackgroundRT
ˇˇ 
.
ˇˇ 
	sizeDelta
ˇˇ &
=
ˇˇ' (
Vector2
ˇˇ) 0
.
ˇˇ0 1
zero
ˇˇ1 5
;
ˇˇ5 6
RectTransform
ÅÅ 
itemCheckmarkRT
ÅÅ )
=
ÅÅ* +
itemCheckmark
ÅÅ, 9
.
ÅÅ9 :
GetComponent
ÅÅ: F
<
ÅÅF G
RectTransform
ÅÅG T
>
ÅÅT U
(
ÅÅU V
)
ÅÅV W
;
ÅÅW X
itemCheckmarkRT
ÇÇ 
.
ÇÇ 
	anchorMin
ÇÇ %
=
ÇÇ& '
new
ÇÇ( +
Vector2
ÇÇ, 3
(
ÇÇ3 4
$num
ÇÇ4 5
,
ÇÇ5 6
$num
ÇÇ7 ;
)
ÇÇ; <
;
ÇÇ< =
itemCheckmarkRT
ÉÉ 
.
ÉÉ 
	anchorMax
ÉÉ %
=
ÉÉ& '
new
ÉÉ( +
Vector2
ÉÉ, 3
(
ÉÉ3 4
$num
ÉÉ4 5
,
ÉÉ5 6
$num
ÉÉ7 ;
)
ÉÉ; <
;
ÉÉ< =
itemCheckmarkRT
ÑÑ 
.
ÑÑ 
	sizeDelta
ÑÑ %
=
ÑÑ& '
new
ÑÑ( +
Vector2
ÑÑ, 3
(
ÑÑ3 4
$num
ÑÑ4 6
,
ÑÑ6 7
$num
ÑÑ8 :
)
ÑÑ: ;
;
ÑÑ; <
itemCheckmarkRT
ÖÖ 
.
ÖÖ 
anchoredPosition
ÖÖ ,
=
ÖÖ- .
new
ÖÖ/ 2
Vector2
ÖÖ3 :
(
ÖÖ: ;
$num
ÖÖ; =
,
ÖÖ= >
$num
ÖÖ? @
)
ÖÖ@ A
;
ÖÖA B
RectTransform
áá 
itemLabelRT
áá %
=
áá& '
	itemLabel
áá( 1
.
áá1 2
GetComponent
áá2 >
<
áá> ?
RectTransform
áá? L
>
ááL M
(
ááM N
)
ááN O
;
ááO P
itemLabelRT
àà 
.
àà 
	anchorMin
àà !
=
àà" #
Vector2
àà$ +
.
àà+ ,
zero
àà, 0
;
àà0 1
itemLabelRT
ââ 
.
ââ 
	anchorMax
ââ !
=
ââ" #
Vector2
ââ$ +
.
ââ+ ,
one
ââ, /
;
ââ/ 0
itemLabelRT
ää 
.
ää 
	offsetMin
ää !
=
ää" #
new
ää$ '
Vector2
ää( /
(
ää/ 0
$num
ää0 2
,
ää2 3
$num
ää4 5
)
ää5 6
;
ää6 7
itemLabelRT
ãã 
.
ãã 
	offsetMax
ãã !
=
ãã" #
new
ãã$ '
Vector2
ãã( /
(
ãã/ 0
-
ãã0 1
$num
ãã1 3
,
ãã3 4
-
ãã5 6
$num
ãã6 7
)
ãã7 8
;
ãã8 9
template
çç 
.
çç 
	SetActive
çç 
(
çç 
false
çç $
)
çç$ %
;
çç% &
return
èè 
root
èè 
;
èè 
}
êê 	
}
ëë 
}íí ˙Â
íD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMPro_Private.cs
	namespace 	
TMPro
 
{ 
public 

partial 
class 
TextMeshPro $
{ 
[ 	
SerializeField	 
] 
private 
bool !
m_hasFontAssetChanged *
=+ ,
false- 2
;2 3
float !
m_previousLossyScaleY #
=$ %
-& '
$num' (
;( )
[ 	
SerializeField	 
] 
private 
Renderer 

m_renderer #
;# $
private 

MeshFilter 
m_meshFilter '
;' (
private 
bool 
m_isFirstAllocation (
;( )
private   
int   
m_max_characters   $
=  % &
$num  ' (
;  ( )
private!! 
int!! 
m_max_numberOfLines!! '
=!!( )
$num!!* +
;!!+ ,
private## 
TMP_SubMesh## 
[## 
]## 
m_subTextObjects## .
=##/ 0
new##1 4
TMP_SubMesh##5 @
[##@ A
$num##A B
]##B C
;##C D
['' 	
SerializeField''	 
]'' 
private(( 
MaskingTypes(( 

m_maskType(( '
;((' (
private++ 
	Matrix4x4++ 
m_EnvMapMatrix++ (
=++) *
new+++ .
	Matrix4x4++/ 8
(++8 9
)++9 :
;++: ;
private.. 
Vector3.. 
[.. 
].. "
m_RectTransformCorners.. 0
=..1 2
new..3 6
Vector3..7 >
[..> ?
$num..? @
]..@ A
;..A B
[00 	
NonSerialized00	 
]00 
private11 
bool11 #
m_isRegisteredForEvents11 ,
;11, -
	protected44 
override44 
void44 
Awake44  %
(44% &
)44& '
{55 	
if:: 
(:: 
TMP_Settings:: 
.:: 
instance:: %
==::& (
null::) -
)::- .
{;; 
if<< 
(<< %
m_isWaitingOnResourceLoad<< -
==<<. 0
false<<1 6
)<<6 7
TMPro_EventManager== &
.==& '
RESOURCE_LOAD_EVENT==' :
.==: ;
Add==; >
(==> ?
ON_RESOURCES_LOADED==? R
)==R S
;==S T%
m_isWaitingOnResourceLoad?? )
=??* +
true??, 0
;??0 1
return@@ 
;@@ 
}AA 

m_rendererEE 
=EE 
GetComponentEE %
<EE% &
RendererEE& .
>EE. /
(EE/ 0
)EE0 1
;EE1 2
ifFF 
(FF 

m_rendererFF 
==FF 
nullFF "
)FF" #

m_rendererGG 
=GG 

gameObjectGG '
.GG' (
AddComponentGG( 4
<GG4 5
RendererGG5 =
>GG= >
(GG> ?
)GG? @
;GG@ A
CanvasRendererJJ 
canvasRendererJJ )
=JJ* +
GetComponentJJ, 8
<JJ8 9
CanvasRendererJJ9 G
>JJG H
(JJH I
)JJI J
;JJJ K
ifKK 
(KK 
canvasRendererKK 
!=KK !
nullKK" &
)KK& '
{LL 
DebugMM 
.MM 
LogMM 
(MM 
$strMM [
,MM[ \
thisMM] a
)MMa b
;MMb c
DestroyImmediateNN  
(NN  !
canvasRendererNN! /
)NN/ 0
;NN0 1
}OO 
m_rectTransformRR 
=RR 
thisRR "
.RR" #
rectTransformRR# 0
;RR0 1
m_transformUU 
=UU 
thisUU 
.UU 
	transformUU (
;UU( )
m_meshFilterXX 
=XX 
GetComponentXX '
<XX' (

MeshFilterXX( 2
>XX2 3
(XX3 4
)XX4 5
;XX5 6
ifYY 
(YY 
m_meshFilterYY 
==YY 
nullYY  $
)YY$ %
m_meshFilterZZ 
=ZZ 

gameObjectZZ )
.ZZ) *
AddComponentZZ* 6
<ZZ6 7

MeshFilterZZ7 A
>ZZA B
(ZZB C
)ZZC D
;ZZD E
if]] 
(]] 
m_mesh]] 
==]] 
null]] 
)]] 
{^^ 
m_mesh__ 
=__ 
new__ 
Mesh__ !
(__! "
)__" #
;__# $
m_mesh`` 
.`` 
	hideFlags``  
=``! "
	HideFlags``# ,
.``, -
HideAndDontSave``- <
;``< =
m_meshbb 
.bb 
namebb 
=bb 
$strbb 0
;bb0 1
m_meshFilterdd 
.dd 

sharedMeshdd '
=dd( )
m_meshdd* 0
;dd0 1

m_textInfogg 
=gg 
newgg  
TMP_TextInfogg! -
(gg- .
thisgg. 2
)gg2 3
;gg3 4
}hh 
m_meshFilterii 
.ii 
	hideFlagsii "
=ii# $
	HideFlagsii% .
.ii. /
HideInInspectorii/ >
|ii? @
	HideFlagsiiA J
.iiJ K
HideAndDontSaveiiK Z
;iiZ [
LoadDefaultSettingsll 
(ll  
)ll  !
;ll! "
LoadFontAssetoo 
(oo 
)oo 
;oo 
ifrr 
(rr #
m_InternalParsingBufferrr '
==rr( *
nullrr+ /
)rr/ 0#
m_InternalParsingBufferss '
=ss( )
newss* -
UnicodeCharss. 9
[ss9 :
m_max_charactersss: J
]ssJ K
;ssK L 
m_cached_TextElementuu  
=uu! "
newuu# &
TMP_Characteruu' 4
(uu4 5
)uu5 6
;uu6 7
m_isFirstAllocationvv 
=vv  !
truevv" &
;vv& '
TMP_SubMeshyy 
[yy 
]yy 
subTextObjectsyy (
=yy) *#
GetComponentsInChildrenyy+ B
<yyB C
TMP_SubMeshyyC N
>yyN O
(yyO P
)yyP Q
;yyQ R
ifzz 
(zz 
subTextObjectszz 
.zz 
Lengthzz %
>zz& '
$numzz( )
)zz) *
{{{ 
for|| 
(|| 
int|| 
i|| 
=|| 
$num|| 
;|| 
i||  !
<||" #
subTextObjects||$ 2
.||2 3
Length||3 9
;||9 :
i||; <
++||< >
)||> ?
m_subTextObjects}} $
[}}$ %
i}}% &
+}}' (
$num}}) *
]}}* +
=}}, -
subTextObjects}}. <
[}}< =
i}}= >
]}}> ?
;}}? @
}~~ &
m_isInputParsingRequired
ÅÅ $
=
ÅÅ% &
true
ÅÅ' +
;
ÅÅ+ ,%
m_havePropertiesChanged
ÇÇ #
=
ÇÇ$ %
true
ÇÇ& *
;
ÇÇ* +
	m_isAwake
ÑÑ 
=
ÑÑ 
true
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
	protected
àà 
override
àà 
void
àà 
OnEnable
àà  (
(
àà( )
)
àà) *
{
ââ 	
if
çç 
(
çç 
	m_isAwake
çç 
==
çç 
false
çç "
)
çç" #
return
éé 
;
éé 
if
ëë 
(
ëë 
!
ëë %
m_isRegisteredForEvents
ëë (
)
ëë( )
{
íí  
TMPro_EventManager
îî "
.
îî" #%
MATERIAL_PROPERTY_EVENT
îî# :
.
îî: ;
Add
îî; >
(
îî> ?*
ON_MATERIAL_PROPERTY_CHANGED
îî? [
)
îî[ \
;
îî\ ] 
TMPro_EventManager
ïï "
.
ïï" #!
FONT_PROPERTY_EVENT
ïï# 6
.
ïï6 7
Add
ïï7 :
(
ïï: ;&
ON_FONT_PROPERTY_CHANGED
ïï; S
)
ïïS T
;
ïïT U 
TMPro_EventManager
ññ "
.
ññ" #(
TEXTMESHPRO_PROPERTY_EVENT
ññ# =
.
ññ= >
Add
ññ> A
(
ññA B-
ON_TEXTMESHPRO_PROPERTY_CHANGED
ññB a
)
ñña b
;
ññb c 
TMPro_EventManager
óó "
.
óó" #*
DRAG_AND_DROP_MATERIAL_EVENT
óó# ?
.
óó? @
Add
óó@ C
(
óóC D'
ON_DRAG_AND_DROP_MATERIAL
óóD ]
)
óó] ^
;
óó^ _ 
TMPro_EventManager
òò "
.
òò" #'
TEXT_STYLE_PROPERTY_EVENT
òò# <
.
òò< =
Add
òò= @
(
òò@ A#
ON_TEXT_STYLE_CHANGED
òòA V
)
òòV W
;
òòW X 
TMPro_EventManager
ôô "
.
ôô" #+
COLOR_GRADIENT_PROPERTY_EVENT
ôô# @
.
ôô@ A
Add
ôôA D
(
ôôD E'
ON_COLOR_GRADIENT_CHANGED
ôôE ^
)
ôô^ _
;
ôô_ ` 
TMPro_EventManager
öö "
.
öö" #)
TMP_SETTINGS_PROPERTY_EVENT
öö# >
.
öö> ?
Add
öö? B
(
ööB C%
ON_TMP_SETTINGS_CHANGED
ööC Z
)
ööZ [
;
öö[ \
UnityEditor
úú 
.
úú 
PrefabUtility
úú )
.
úú) *#
prefabInstanceUpdated
úú* ?
+=
úú@ B$
OnPrefabInstanceUpdate
úúC Y
;
úúY Z%
m_isRegisteredForEvents
ûû '
=
ûû( )
true
ûû* .
;
ûû. /
}
üü 
if
¢¢ 
(
¢¢ '
m_IsTextObjectScaleStatic
¢¢ )
==
¢¢* ,
false
¢¢- 2
)
¢¢2 3
TMP_UpdateManager
££ !
.
££! ")
RegisterTextObjectForUpdate
££" =
(
££= >
this
££> B
)
££B C
;
££C D

meshFilter
•• 
.
•• 

sharedMesh
•• !
=
••" #
mesh
••$ (
;
••( ) 
SetActiveSubMeshes
¶¶ 
(
¶¶ 
true
¶¶ #
)
¶¶# $
;
¶¶$ %
ComputeMarginSize
©© 
(
©© 
)
©© 
;
©©  &
m_isInputParsingRequired
´´ $
=
´´% &
true
´´' +
;
´´+ ,
SetAllDirty
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
}
ØØ 	
	protected
≤≤ 
override
≤≤ 
void
≤≤ 
	OnDisable
≤≤  )
(
≤≤) *
)
≤≤* +
{
≥≥ 	
if
∑∑ 
(
∑∑ 
	m_isAwake
∑∑ 
==
∑∑ 
false
∑∑ "
)
∑∑" #
return
∏∏ 
;
∏∏ 
TMP_UpdateManager
∫∫ 
.
∫∫ -
UnRegisterTextElementForRebuild
∫∫ =
(
∫∫= >
this
∫∫> B
)
∫∫B C
;
∫∫C D
TMP_UpdateManager
ªª 
.
ªª +
UnRegisterTextObjectForUpdate
ªª ;
(
ªª; <
this
ªª< @
)
ªª@ A
;
ªªA B

meshFilter
ΩΩ 
.
ΩΩ 

sharedMesh
ΩΩ !
=
ΩΩ" #
null
ΩΩ$ (
;
ΩΩ( ) 
SetActiveSubMeshes
ææ 
(
ææ 
false
ææ $
)
ææ$ %
;
ææ% &
}
øø 	
	protected
¬¬ 
override
¬¬ 
void
¬¬ 
	OnDestroy
¬¬  )
(
¬¬) *
)
¬¬* +
{
√√ 	
if
«« 
(
«« 
m_mesh
«« 
!=
«« 
null
«« 
)
«« 
DestroyImmediate
»»  
(
»»  !
m_mesh
»»! '
)
»»' (
;
»»( ) 
TMPro_EventManager
ÃÃ 
.
ÃÃ %
MATERIAL_PROPERTY_EVENT
ÃÃ 6
.
ÃÃ6 7
Remove
ÃÃ7 =
(
ÃÃ= >*
ON_MATERIAL_PROPERTY_CHANGED
ÃÃ> Z
)
ÃÃZ [
;
ÃÃ[ \ 
TMPro_EventManager
ÕÕ 
.
ÕÕ !
FONT_PROPERTY_EVENT
ÕÕ 2
.
ÕÕ2 3
Remove
ÕÕ3 9
(
ÕÕ9 :&
ON_FONT_PROPERTY_CHANGED
ÕÕ: R
)
ÕÕR S
;
ÕÕS T 
TMPro_EventManager
ŒŒ 
.
ŒŒ (
TEXTMESHPRO_PROPERTY_EVENT
ŒŒ 9
.
ŒŒ9 :
Remove
ŒŒ: @
(
ŒŒ@ A-
ON_TEXTMESHPRO_PROPERTY_CHANGED
ŒŒA `
)
ŒŒ` a
;
ŒŒa b 
TMPro_EventManager
œœ 
.
œœ *
DRAG_AND_DROP_MATERIAL_EVENT
œœ ;
.
œœ; <
Remove
œœ< B
(
œœB C'
ON_DRAG_AND_DROP_MATERIAL
œœC \
)
œœ\ ]
;
œœ] ^ 
TMPro_EventManager
–– 
.
–– '
TEXT_STYLE_PROPERTY_EVENT
–– 8
.
––8 9
Remove
––9 ?
(
––? @#
ON_TEXT_STYLE_CHANGED
––@ U
)
––U V
;
––V W 
TMPro_EventManager
—— 
.
—— +
COLOR_GRADIENT_PROPERTY_EVENT
—— <
.
——< =
Remove
——= C
(
——C D'
ON_COLOR_GRADIENT_CHANGED
——D ]
)
——] ^
;
——^ _ 
TMPro_EventManager
““ 
.
““ )
TMP_SETTINGS_PROPERTY_EVENT
““ :
.
““: ;
Remove
““; A
(
““A B%
ON_TMP_SETTINGS_CHANGED
““B Y
)
““Y Z
;
““Z [ 
TMPro_EventManager
”” 
.
”” !
RESOURCE_LOAD_EVENT
”” 2
.
””2 3
Remove
””3 9
(
””9 :!
ON_RESOURCES_LOADED
””: M
)
””M N
;
””N O
UnityEditor
’’ 
.
’’ 
PrefabUtility
’’ %
.
’’% &#
prefabInstanceUpdated
’’& ;
-=
’’< >$
OnPrefabInstanceUpdate
’’? U
;
’’U V%
m_isRegisteredForEvents
ÿÿ #
=
ÿÿ$ %
false
ÿÿ& +
;
ÿÿ+ ,
TMP_UpdateManager
ŸŸ 
.
ŸŸ -
UnRegisterTextElementForRebuild
ŸŸ =
(
ŸŸ= >
this
ŸŸ> B
)
ŸŸB C
;
ŸŸC D
TMP_UpdateManager
⁄⁄ 
.
⁄⁄ +
UnRegisterTextObjectForUpdate
⁄⁄ ;
(
⁄⁄; <
this
⁄⁄< @
)
⁄⁄@ A
;
⁄⁄A B
}
€€ 	
	protected
ﬂﬂ 
override
ﬂﬂ 
void
ﬂﬂ 
Reset
ﬂﬂ  %
(
ﬂﬂ% &
)
ﬂﬂ& '
{
‡‡ 	
if
‰‰ 
(
‰‰ 
	m_isAwake
‰‰ 
==
‰‰ 
false
‰‰ "
)
‰‰" #
return
ÂÂ 
;
ÂÂ 
if
ÁÁ 
(
ÁÁ 
m_mesh
ÁÁ 
!=
ÁÁ 
null
ÁÁ 
)
ÁÁ 
DestroyImmediate
ËË  
(
ËË  !
m_mesh
ËË! '
)
ËË' (
;
ËË( )
Awake
ÍÍ 
(
ÍÍ 
)
ÍÍ 
;
ÍÍ 
}
ÎÎ 	
	protected
ÓÓ 
override
ÓÓ 
void
ÓÓ 

OnValidate
ÓÓ  *
(
ÓÓ* +
)
ÓÓ+ ,
{
ÔÔ 	
if
ÚÚ 
(
ÚÚ 
	m_isAwake
ÚÚ 
==
ÚÚ 
false
ÚÚ "
)
ÚÚ" #
return
ÛÛ 
;
ÛÛ 
if
ıı 
(
ıı 

meshFilter
ıı 
!=
ıı 
null
ıı "
&&
ıı# %
m_meshFilter
ıı& 2
.
ıı2 3
	hideFlags
ıı3 <
!=
ıı= ?
(
ıı@ A
	HideFlags
ııA J
.
ııJ K
HideInInspector
ııK Z
|
ıı[ \
	HideFlags
ıı] f
.
ııf g
HideAndDontSave
ııg v
)
ııv w
)
ııw x
m_meshFilter
ˆˆ 
.
ˆˆ 
	hideFlags
ˆˆ &
=
ˆˆ' (
	HideFlags
ˆˆ) 2
.
ˆˆ2 3
HideInInspector
ˆˆ3 B
|
ˆˆC D
	HideFlags
ˆˆE N
.
ˆˆN O
HideAndDontSave
ˆˆO ^
;
ˆˆ^ _
if
˚˚ 
(
˚˚ 
m_fontAsset
˚˚ 
==
˚˚ 
null
˚˚ #
||
˚˚$ &#
m_hasFontAssetChanged
˚˚' <
)
˚˚< =
{
¸¸ 
LoadFontAsset
˝˝ 
(
˝˝ 
)
˝˝ 
;
˝˝  #
m_hasFontAssetChanged
˛˛ %
=
˛˛& '
false
˛˛( -
;
˛˛- .
}
ˇˇ 
	m_padding
ÅÅ 
=
ÅÅ #
GetPaddingForMaterial
ÅÅ -
(
ÅÅ- .
)
ÅÅ. /
;
ÅÅ/ 0
ComputeMarginSize
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ  &
m_isInputParsingRequired
ÑÑ $
=
ÑÑ% &
true
ÑÑ' +
;
ÑÑ+ ,
m_inputSource
ÖÖ 
=
ÖÖ 
TextInputSources
ÖÖ ,
.
ÖÖ, -
Text
ÖÖ- 1
;
ÖÖ1 2%
m_havePropertiesChanged
ÜÜ #
=
ÜÜ$ %
true
ÜÜ& *
;
ÜÜ* +%
m_isPreferredWidthDirty
áá #
=
áá$ %
true
áá& *
;
áá* +&
m_isPreferredHeightDirty
àà $
=
àà% &
true
àà' +
;
àà+ ,
SetAllDirty
ää 
(
ää 
)
ää 
;
ää 
}
ãã 	
private
çç 
void
çç 
OnBecameVisible
çç $
(
çç$ %
)
çç% &
{
éé 	-
SetActiveSubTextObjectRenderers
êê +
(
êê+ ,
true
êê, 0
)
êê0 1
;
êê1 2
}
ëë 	
private
ìì 
void
ìì 
OnBecameInvisible
ìì &
(
ìì& '
)
ìì' (
{
îî 	-
SetActiveSubTextObjectRenderers
ïï +
(
ïï+ ,
false
ïï, 1
)
ïï1 2
;
ïï2 3
}
ññ 	
void
ùù $
OnPrefabInstanceUpdate
ùù #
(
ùù# $

GameObject
ùù$ .
go
ùù/ 1
)
ùù1 2
{
ûû 	
if
†† 
(
†† 
this
†† 
==
†† 
null
†† 
)
†† 
{
°° 
UnityEditor
¢¢ 
.
¢¢ 
PrefabUtility
¢¢ )
.
¢¢) *#
prefabInstanceUpdated
¢¢* ?
-=
¢¢@ B$
OnPrefabInstanceUpdate
¢¢C Y
;
¢¢Y Z
return
££ 
;
££ 
}
§§ 
if
¶¶ 
(
¶¶ 
go
¶¶ 
==
¶¶ 
this
¶¶ 
.
¶¶ 

gameObject
¶¶ %
)
¶¶% &
{
ßß 
TMP_SubMesh
®® 
[
®® 
]
®® 
subTextObjects
®® ,
=
®®- .%
GetComponentsInChildren
®®/ F
<
®®F G
TMP_SubMesh
®®G R
>
®®R S
(
®®S T
)
®®T U
;
®®U V
if
©© 
(
©© 
subTextObjects
©© "
.
©©" #
Length
©©# )
>
©©* +
$num
©©, -
)
©©- .
{
™™ 
for
´´ 
(
´´ 
int
´´ 
i
´´ 
=
´´  
$num
´´! "
;
´´" #
i
´´$ %
<
´´& '
subTextObjects
´´( 6
.
´´6 7
Length
´´7 =
;
´´= >
i
´´? @
++
´´@ B
)
´´B C
m_subTextObjects
¨¨ (
[
¨¨( )
i
¨¨) *
+
¨¨+ ,
$num
¨¨- .
]
¨¨. /
=
¨¨0 1
subTextObjects
¨¨2 @
[
¨¨@ A
i
¨¨A B
]
¨¨B C
;
¨¨C D
}
≠≠ 
}
ÆÆ 
}
ØØ 	
void
≥≥ !
ON_RESOURCES_LOADED
≥≥  
(
≥≥  !
)
≥≥! "
{
¥¥ 	 
TMPro_EventManager
µµ 
.
µµ !
RESOURCE_LOAD_EVENT
µµ 2
.
µµ2 3
Remove
µµ3 9
(
µµ9 :!
ON_RESOURCES_LOADED
µµ: M
)
µµM N
;
µµN O
if
∑∑ 
(
∑∑ 
this
∑∑ 
==
∑∑ 
null
∑∑ 
)
∑∑ 
return
∏∏ 
;
∏∏ 
Awake
∫∫ 
(
∫∫ 
)
∫∫ 
;
∫∫ 
OnEnable
ªª 
(
ªª 
)
ªª 
;
ªª 
}
ºº 	
void
¿¿ *
ON_MATERIAL_PROPERTY_CHANGED
¿¿ )
(
¿¿) *
bool
¿¿* .
	isChanged
¿¿/ 8
,
¿¿8 9
Material
¿¿: B
mat
¿¿C F
)
¿¿F G
{
¡¡ 	
if
ƒƒ 
(
ƒƒ 

m_renderer
ƒƒ 
.
ƒƒ 
sharedMaterial
ƒƒ )
==
ƒƒ* ,
null
ƒƒ- 1
)
ƒƒ1 2
{
≈≈ 
if
∆∆ 
(
∆∆ 
m_fontAsset
∆∆ 
!=
∆∆  "
null
∆∆# '
)
∆∆' (
{
«« 

m_renderer
»» 
.
»» 
sharedMaterial
»» -
=
»». /
m_fontAsset
»»0 ;
.
»»; <
material
»»< D
;
»»D E
Debug
…… 
.
…… 

LogWarning
…… $
(
……$ %
$str
……% C
+
……D E
name
……F J
+
……K L
$str
……M Q
+
……R S
m_fontAsset
……T _
.
……_ `
material
……` h
.
……h i
name
……i m
+
……n o
$str……p Ä
,……Ä Å
this……Ç Ü
)……Ü á
;……á à
}
   
else
ÀÀ 
Debug
ÃÃ 
.
ÃÃ 

LogWarning
ÃÃ $
(
ÃÃ$ %
$str
ÃÃ% A
+
ÃÃB C
name
ÃÃD H
+
ÃÃI J
$str
ÃÃK j
,
ÃÃj k
this
ÃÃl p
)
ÃÃp q
;
ÃÃq r
}
ÕÕ 
if
÷÷ 
(
÷÷ 

m_renderer
÷÷ 
.
÷÷ 
sharedMaterial
÷÷ )
!=
÷÷* ,
m_sharedMaterial
÷÷- =
)
÷÷= >
{
◊◊ 
m_sharedMaterial
ŸŸ  
=
ŸŸ! "

m_renderer
ŸŸ# -
.
ŸŸ- .
sharedMaterial
ŸŸ. <
;
ŸŸ< =
}
⁄⁄ 
	m_padding
‹‹ 
=
‹‹ #
GetPaddingForMaterial
‹‹ -
(
‹‹- .
)
‹‹. /
;
‹‹/ 0

UpdateMask
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ  
UpdateEnvMapMatrix
‡‡ 
(
‡‡ 
)
‡‡  
;
‡‡  !%
m_havePropertiesChanged
·· #
=
··$ %
true
··& *
;
··* +
SetVerticesDirty
„„ 
(
„„ 
)
„„ 
;
„„ 
}
‰‰ 	
void
ËË &
ON_FONT_PROPERTY_CHANGED
ËË %
(
ËË% &
bool
ËË& *
	isChanged
ËË+ 4
,
ËË4 5
Object
ËË6 <
	fontAsset
ËË= F
)
ËËF G
{
ÈÈ 	
if
ÏÏ 
(
ÏÏ 
MaterialReference
ÏÏ !
.
ÏÏ! "
Contains
ÏÏ" *
(
ÏÏ* +"
m_materialReferences
ÏÏ+ ?
,
ÏÏ? @
(
ÏÏA B
TMP_FontAsset
ÏÏB O
)
ÏÏO P
	fontAsset
ÏÏP Y
)
ÏÏY Z
)
ÏÏZ [
{
ÌÌ &
m_isInputParsingRequired
ÔÔ (
=
ÔÔ) *
true
ÔÔ+ /
;
ÔÔ/ 0%
m_havePropertiesChanged
 '
=
( )
true
* .
;
. /
UpdateMeshPadding
ÚÚ !
(
ÚÚ! "
)
ÚÚ" #
;
ÚÚ# $
SetMaterialDirty
ÙÙ  
(
ÙÙ  !
)
ÙÙ! "
;
ÙÙ" #
SetVerticesDirty
ıı  
(
ıı  !
)
ıı! "
;
ıı" #
}
ˆˆ 
}
˜˜ 	
void
˚˚ -
ON_TEXTMESHPRO_PROPERTY_CHANGED
˚˚ ,
(
˚˚, -
bool
˚˚- 1
	isChanged
˚˚2 ;
,
˚˚; <
Object
˚˚= C
textComponent
˚˚D Q
)
˚˚Q R
{
¸¸ 	
if
˝˝ 
(
˝˝ 
textComponent
˝˝ 
==
˝˝  
this
˝˝! %
)
˝˝% &
{
˛˛ %
m_havePropertiesChanged
ÄÄ '
=
ÄÄ( )
true
ÄÄ* .
;
ÄÄ. /&
m_isInputParsingRequired
ÅÅ (
=
ÅÅ) *
true
ÅÅ+ /
;
ÅÅ/ 0
	m_padding
ÉÉ 
=
ÉÉ #
GetPaddingForMaterial
ÉÉ 1
(
ÉÉ1 2
)
ÉÉ2 3
;
ÉÉ3 4
ComputeMarginSize
ÑÑ !
(
ÑÑ! "
)
ÑÑ" #
;
ÑÑ# $
SetVerticesDirty
ÜÜ  
(
ÜÜ  !
)
ÜÜ! "
;
ÜÜ" #
}
áá 
}
àà 	
void
åå '
ON_DRAG_AND_DROP_MATERIAL
åå &
(
åå& '

GameObject
åå' 1
obj
åå2 5
,
åå5 6
Material
åå7 ?
currentMaterial
åå@ O
,
ååO P
Material
ååQ Y
newMaterial
ååZ e
)
ååe f
{
çç 	
if
íí 
(
íí 
obj
íí 
==
íí 

gameObject
íí !
||
íí" $
UnityEditor
íí% 0
.
íí0 1
PrefabUtility
íí1 >
.
íí> ?.
 GetCorrespondingObjectFromSource
íí? _
(
íí_ `

gameObject
íí` j
)
ííj k
==
ííl n
obj
íío r
)
íír s
{
ññ 
UnityEditor
óó 
.
óó 
Undo
óó  
.
óó  !
RecordObject
óó! -
(
óó- .
this
óó. 2
,
óó2 3
$str
óó4 I
)
óóI J
;
óóJ K
UnityEditor
òò 
.
òò 
Undo
òò  
.
òò  !
RecordObject
òò! -
(
òò- .

m_renderer
òò. 8
,
òò8 9
$str
òò: O
)
òòO P
;
òòP Q
m_sharedMaterial
öö  
=
öö! "
newMaterial
öö# .
;
öö. /
	m_padding
úú 
=
úú #
GetPaddingForMaterial
úú 1
(
úú1 2
)
úú2 3
;
úú3 4%
m_havePropertiesChanged
ùù '
=
ùù( )
true
ùù* .
;
ùù. /
SetVerticesDirty
üü  
(
üü  !
)
üü! "
;
üü" #
SetMaterialDirty
††  
(
††  !
)
††! "
;
††" #
}
°° 
}
¢¢ 	
void
¶¶ #
ON_TEXT_STYLE_CHANGED
¶¶ "
(
¶¶" #
bool
¶¶# '
	isChanged
¶¶( 1
)
¶¶1 2
{
ßß 	%
m_havePropertiesChanged
®® #
=
®®$ %
true
®®& *
;
®®* +&
m_isInputParsingRequired
©© $
=
©©% &
true
©©' +
;
©©+ ,
SetVerticesDirty
´´ 
(
´´ 
)
´´ 
;
´´ 
}
¨¨ 	
void
≥≥ '
ON_COLOR_GRADIENT_CHANGED
≥≥ &
(
≥≥& '
Object
≥≥' -
gradient
≥≥. 6
)
≥≥6 7
{
¥¥ 	%
m_havePropertiesChanged
µµ #
=
µµ$ %
true
µµ& *
;
µµ* +
SetVerticesDirty
∑∑ 
(
∑∑ 
)
∑∑ 
;
∑∑ 
}
∏∏ 	
void
ææ %
ON_TMP_SETTINGS_CHANGED
ææ $
(
ææ$ %
)
ææ% &
{
øø 	"
m_defaultSpriteAsset
¿¿  
=
¿¿! "
null
¿¿# '
;
¿¿' (%
m_havePropertiesChanged
¡¡ #
=
¡¡$ %
true
¡¡& *
;
¡¡* +&
m_isInputParsingRequired
¬¬ $
=
¬¬% &
true
¬¬' +
;
¬¬+ ,
SetAllDirty
ƒƒ 
(
ƒƒ 
)
ƒƒ 
;
ƒƒ 
}
≈≈ 	
	protected
   
override
   
void
   
LoadFontAsset
    -
(
  - .
)
  . /
{
ÀÀ 	
ShaderUtilities
ŒŒ 
.
ŒŒ "
GetShaderPropertyIDs
ŒŒ 0
(
ŒŒ0 1
)
ŒŒ1 2
;
ŒŒ2 3
if
–– 
(
–– 
m_fontAsset
–– 
==
–– 
null
–– #
)
––# $
{
—— 
if
““ 
(
““ 
TMP_Settings
““  
.
““  !
defaultFontAsset
““! 1
!=
““2 4
null
““5 9
)
““9 :
m_fontAsset
”” 
=
””  !
TMP_Settings
””! -
.
””- .
defaultFontAsset
””. >
;
””> ?
else
‘‘ 
m_fontAsset
’’ 
=
’’  !
	Resources
’’" +
.
’’+ ,
Load
’’, 0
<
’’0 1
TMP_FontAsset
’’1 >
>
’’> ?
(
’’? @
$str
’’@ f
)
’’f g
;
’’g h
if
◊◊ 
(
◊◊ 
m_fontAsset
◊◊ 
==
◊◊  "
null
◊◊# '
)
◊◊' (
{
ÿÿ 
Debug
ŸŸ 
.
ŸŸ 

LogWarning
ŸŸ $
(
ŸŸ$ %
$str
ŸŸ% {
+
ŸŸ| }

gameObjectŸŸ~ à
.ŸŸà â
nameŸŸâ ç
+ŸŸé è
$strŸŸê ì
,ŸŸì î
thisŸŸï ô
)ŸŸô ö
;ŸŸö õ
return
⁄⁄ 
;
⁄⁄ 
}
€€ 
if
›› 
(
›› 
m_fontAsset
›› 
.
››  "
characterLookupTable
››  4
==
››5 7
null
››8 <
)
››< =
{
ﬁﬁ 
Debug
ﬂﬂ 
.
ﬂﬂ 
Log
ﬂﬂ 
(
ﬂﬂ 
$str
ﬂﬂ 3
)
ﬂﬂ3 4
;
ﬂﬂ4 5
}
‡‡ 
m_sharedMaterial
‚‚  
=
‚‚! "
m_fontAsset
‚‚# .
.
‚‚. /
material
‚‚/ 7
;
‚‚7 8
m_sharedMaterial
„„  
.
„„  !
SetFloat
„„! )
(
„„) *
$str
„„* 5
,
„„5 6
$num
„„7 8
)
„„8 9
;
„„9 :
m_sharedMaterial
‰‰  
.
‰‰  !
SetFloat
‰‰! )
(
‰‰) *
ShaderUtilities
‰‰* 9
.
‰‰9 :!
ShaderTag_ZTestMode
‰‰: M
,
‰‰M N
$num
‰‰O P
)
‰‰P Q
;
‰‰Q R

m_renderer
ÊÊ 
.
ÊÊ 
receiveShadows
ÊÊ )
=
ÊÊ* +
false
ÊÊ, 1
;
ÊÊ1 2

m_renderer
ÁÁ 
.
ÁÁ 
shadowCastingMode
ÁÁ ,
=
ÁÁ- .
UnityEngine
ÁÁ/ :
.
ÁÁ: ;
	Rendering
ÁÁ; D
.
ÁÁD E
ShadowCastingMode
ÁÁE V
.
ÁÁV W
Off
ÁÁW Z
;
ÁÁZ [
}
ËË 
else
ÈÈ 
{
ÍÍ 
if
ÎÎ 
(
ÎÎ 
m_fontAsset
ÎÎ 
.
ÎÎ  "
characterLookupTable
ÎÎ  4
==
ÎÎ5 7
null
ÎÎ8 <
)
ÎÎ< =
m_fontAsset
ÏÏ 
.
ÏÏ  %
ReadFontAssetDefinition
ÏÏ  7
(
ÏÏ7 8
)
ÏÏ8 9
;
ÏÏ9 :
if
ÔÔ 
(
ÔÔ 
m_sharedMaterial
ÔÔ $
==
ÔÔ% '
null
ÔÔ( ,
||
ÔÔ- /
m_sharedMaterial
ÔÔ0 @
.
ÔÔ@ A

GetTexture
ÔÔA K
(
ÔÔK L
ShaderUtilities
ÔÔL [
.
ÔÔ[ \

ID_MainTex
ÔÔ\ f
)
ÔÔf g
==
ÔÔh j
null
ÔÔk o
||
ÔÔp r
m_fontAsset
ÔÔs ~
.
ÔÔ~ 
atlasTextureÔÔ ã
.ÔÔã å
GetInstanceIDÔÔå ô
(ÔÔô ö
)ÔÔö õ
!=ÔÔú û 
m_sharedMaterialÔÔü Ø
.ÔÔØ ∞

GetTextureÔÔ∞ ∫
(ÔÔ∫ ª
ShaderUtilitiesÔÔª  
.ÔÔ  À

ID_MainTexÔÔÀ ’
)ÔÔ’ ÷
.ÔÔ÷ ◊
GetInstanceIDÔÔ◊ ‰
(ÔÔ‰ Â
)ÔÔÂ Ê
)ÔÔÊ Á
{
 
if
ÒÒ 
(
ÒÒ 
m_fontAsset
ÒÒ #
.
ÒÒ# $
material
ÒÒ$ ,
==
ÒÒ- /
null
ÒÒ0 4
)
ÒÒ4 5
Debug
ÚÚ 
.
ÚÚ 

LogWarning
ÚÚ (
(
ÚÚ( )
$str
ÚÚ) T
+
ÚÚU V
m_fontAsset
ÚÚW b
.
ÚÚb c
name
ÚÚc g
+
ÚÚh i
$str
ÚÚj y
+
ÚÚz {

gameObjectÚÚ| Ü
.ÚÚÜ á
nameÚÚá ã
+ÚÚå ç
$strÚÚé ú
,ÚÚú ù
thisÚÚû ¢
)ÚÚ¢ £
;ÚÚ£ §
else
ÛÛ 
m_sharedMaterial
ÙÙ (
=
ÙÙ) *
m_fontAsset
ÙÙ+ 6
.
ÙÙ6 7
material
ÙÙ7 ?
;
ÙÙ? @
}
ıı 
m_sharedMaterial
˜˜  
.
˜˜  !
SetFloat
˜˜! )
(
˜˜) *
ShaderUtilities
˜˜* 9
.
˜˜9 :!
ShaderTag_ZTestMode
˜˜: M
,
˜˜M N
$num
˜˜O P
)
˜˜P Q
;
˜˜Q R
if
˙˙ 
(
˙˙ 
m_sharedMaterial
˙˙ $
.
˙˙$ %
	passCount
˙˙% .
==
˙˙/ 1
$num
˙˙2 3
)
˙˙3 4
{
˚˚ 

m_renderer
¸¸ 
.
¸¸ 
receiveShadows
¸¸ -
=
¸¸. /
false
¸¸0 5
;
¸¸5 6

m_renderer
˝˝ 
.
˝˝ 
shadowCastingMode
˝˝ 0
=
˝˝1 2
UnityEngine
˝˝3 >
.
˝˝> ?
	Rendering
˝˝? H
.
˝˝H I
ShadowCastingMode
˝˝I Z
.
˝˝Z [
Off
˝˝[ ^
;
˝˝^ _
}
˛˛ 
}
ÄÄ 
	m_padding
ÇÇ 
=
ÇÇ #
GetPaddingForMaterial
ÇÇ -
(
ÇÇ- .
)
ÇÇ. /
;
ÇÇ/ 0 
m_isMaskingEnabled
ÉÉ 
=
ÉÉ  
ShaderUtilities
ÉÉ! 0
.
ÉÉ0 1
IsMaskingEnabled
ÉÉ1 A
(
ÉÉA B
m_sharedMaterial
ÉÉB R
)
ÉÉR S
;
ÉÉS T"
GetSpecialCharacters
ÜÜ  
(
ÜÜ  !
m_fontAsset
ÜÜ! ,
)
ÜÜ, -
;
ÜÜ- .
SetMaterialDirty
àà 
(
àà 
)
àà 
;
àà 
}
ââ 	
void
åå  
UpdateEnvMapMatrix
åå 
(
åå  
)
åå  !
{
çç 	
if
éé 
(
éé 
!
éé 
m_sharedMaterial
éé !
.
éé! "
HasProperty
éé" -
(
éé- .
ShaderUtilities
éé. =
.
éé= >
	ID_EnvMap
éé> G
)
ééG H
||
ééI K
m_sharedMaterial
ééL \
.
éé\ ]

GetTexture
éé] g
(
éég h
ShaderUtilities
ééh w
.
ééw x
	ID_EnvMapééx Å
)ééÅ Ç
==ééÉ Ö
nullééÜ ä
)ééä ã
return
èè 
;
èè 
Vector3
íí 
rotation
íí 
=
íí 
m_sharedMaterial
íí /
.
íí/ 0
	GetVector
íí0 9
(
íí9 :
ShaderUtilities
íí: I
.
ííI J"
ID_EnvMatrixRotation
ííJ ^
)
íí^ _
;
íí_ `
m_EnvMapMatrix
ìì 
=
ìì 
	Matrix4x4
ìì &
.
ìì& '
TRS
ìì' *
(
ìì* +
Vector3
ìì+ 2
.
ìì2 3
zero
ìì3 7
,
ìì7 8

Quaternion
ìì9 C
.
ììC D
Euler
ììD I
(
ììI J
rotation
ììJ R
)
ììR S
,
ììS T
Vector3
ììU \
.
ìì\ ]
one
ìì] `
)
ìì` a
;
ììa b
m_sharedMaterial
ïï 
.
ïï 
	SetMatrix
ïï &
(
ïï& '
ShaderUtilities
ïï' 6
.
ïï6 7
ID_EnvMatrix
ïï7 C
,
ïïC D
m_EnvMapMatrix
ïïE S
)
ïïS T
;
ïïT U
}
ññ 	
void
öö 
SetMask
öö 
(
öö 
MaskingTypes
öö !
maskType
öö" *
)
öö* +
{
õõ 	
switch
úú 
(
úú 
maskType
úú 
)
úú 
{
ùù 
case
ûû 
MaskingTypes
ûû !
.
ûû! "
MaskOff
ûû" )
:
ûû) *
m_sharedMaterial
üü $
.
üü$ %
DisableKeyword
üü% 3
(
üü3 4
ShaderUtilities
üü4 C
.
üüC D
Keyword_MASK_SOFT
üüD U
)
üüU V
;
üüV W
m_sharedMaterial
†† $
.
††$ %
DisableKeyword
††% 3
(
††3 4
ShaderUtilities
††4 C
.
††C D
Keyword_MASK_HARD
††D U
)
††U V
;
††V W
m_sharedMaterial
°° $
.
°°$ %
DisableKeyword
°°% 3
(
°°3 4
ShaderUtilities
°°4 C
.
°°C D
Keyword_MASK_TEX
°°D T
)
°°T U
;
°°U V
break
¢¢ 
;
¢¢ 
case
££ 
MaskingTypes
££ !
.
££! "
MaskSoft
££" *
:
££* +
m_sharedMaterial
§§ $
.
§§$ %
EnableKeyword
§§% 2
(
§§2 3
ShaderUtilities
§§3 B
.
§§B C
Keyword_MASK_SOFT
§§C T
)
§§T U
;
§§U V
m_sharedMaterial
•• $
.
••$ %
DisableKeyword
••% 3
(
••3 4
ShaderUtilities
••4 C
.
••C D
Keyword_MASK_HARD
••D U
)
••U V
;
••V W
m_sharedMaterial
¶¶ $
.
¶¶$ %
DisableKeyword
¶¶% 3
(
¶¶3 4
ShaderUtilities
¶¶4 C
.
¶¶C D
Keyword_MASK_TEX
¶¶D T
)
¶¶T U
;
¶¶U V
break
ßß 
;
ßß 
case
®® 
MaskingTypes
®® !
.
®®! "
MaskHard
®®" *
:
®®* +
m_sharedMaterial
©© $
.
©©$ %
EnableKeyword
©©% 2
(
©©2 3
ShaderUtilities
©©3 B
.
©©B C
Keyword_MASK_HARD
©©C T
)
©©T U
;
©©U V
m_sharedMaterial
™™ $
.
™™$ %
DisableKeyword
™™% 3
(
™™3 4
ShaderUtilities
™™4 C
.
™™C D
Keyword_MASK_SOFT
™™D U
)
™™U V
;
™™V W
m_sharedMaterial
´´ $
.
´´$ %
DisableKeyword
´´% 3
(
´´3 4
ShaderUtilities
´´4 C
.
´´C D
Keyword_MASK_TEX
´´D T
)
´´T U
;
´´U V
break
¨¨ 
;
¨¨ 
}
≤≤ 
}
≥≥ 	
void
∑∑  
SetMaskCoordinates
∑∑ 
(
∑∑  
Vector4
∑∑  '
coords
∑∑( .
)
∑∑. /
{
∏∏ 	
m_sharedMaterial
ππ 
.
ππ 
	SetVector
ππ &
(
ππ& '
ShaderUtilities
ππ' 6
.
ππ6 7
ID_ClipRect
ππ7 B
,
ππB C
coords
ππD J
)
ππJ K
;
ππK L
}
∫∫ 	
void
ΩΩ  
SetMaskCoordinates
ΩΩ 
(
ΩΩ  
Vector4
ΩΩ  '
coords
ΩΩ( .
,
ΩΩ. /
float
ΩΩ0 5
softX
ΩΩ6 ;
,
ΩΩ; <
float
ΩΩ= B
softY
ΩΩC H
)
ΩΩH I
{
ææ 	
m_sharedMaterial
øø 
.
øø 
	SetVector
øø &
(
øø& '
ShaderUtilities
øø' 6
.
øø6 7
ID_ClipRect
øø7 B
,
øøB C
coords
øøD J
)
øøJ K
;
øøK L
m_sharedMaterial
¿¿ 
.
¿¿ 
SetFloat
¿¿ %
(
¿¿% &
ShaderUtilities
¿¿& 5
.
¿¿5 6
ID_MaskSoftnessX
¿¿6 F
,
¿¿F G
softX
¿¿H M
)
¿¿M N
;
¿¿N O
m_sharedMaterial
¡¡ 
.
¡¡ 
SetFloat
¡¡ %
(
¡¡% &
ShaderUtilities
¡¡& 5
.
¡¡5 6
ID_MaskSoftnessY
¡¡6 F
,
¡¡F G
softY
¡¡H M
)
¡¡M N
;
¡¡N O
}
¬¬ 	
void
«« 
EnableMasking
«« 
(
«« 
)
«« 
{
»» 	
if
…… 
(
…… 
m_sharedMaterial
……  
.
……  !
HasProperty
……! ,
(
……, -
ShaderUtilities
……- <
.
……< =
ID_ClipRect
……= H
)
……H I
)
……I J
{
   
m_sharedMaterial
ÀÀ  
.
ÀÀ  !
EnableKeyword
ÀÀ! .
(
ÀÀ. /
ShaderUtilities
ÀÀ/ >
.
ÀÀ> ?
Keyword_MASK_SOFT
ÀÀ? P
)
ÀÀP Q
;
ÀÀQ R
m_sharedMaterial
ÃÃ  
.
ÃÃ  !
DisableKeyword
ÃÃ! /
(
ÃÃ/ 0
ShaderUtilities
ÃÃ0 ?
.
ÃÃ? @
Keyword_MASK_HARD
ÃÃ@ Q
)
ÃÃQ R
;
ÃÃR S
m_sharedMaterial
ÕÕ  
.
ÕÕ  !
DisableKeyword
ÕÕ! /
(
ÕÕ/ 0
ShaderUtilities
ÕÕ0 ?
.
ÕÕ? @
Keyword_MASK_TEX
ÕÕ@ P
)
ÕÕP Q
;
ÕÕQ R 
m_isMaskingEnabled
œœ "
=
œœ# $
true
œœ% )
;
œœ) *

UpdateMask
–– 
(
–– 
)
–– 
;
–– 
}
—— 
}
““ 	
void
÷÷ 
DisableMasking
÷÷ 
(
÷÷ 
)
÷÷ 
{
◊◊ 	
if
ÿÿ 
(
ÿÿ 
m_sharedMaterial
ÿÿ  
.
ÿÿ  !
HasProperty
ÿÿ! ,
(
ÿÿ, -
ShaderUtilities
ÿÿ- <
.
ÿÿ< =
ID_ClipRect
ÿÿ= H
)
ÿÿH I
)
ÿÿI J
{
ŸŸ 
m_sharedMaterial
⁄⁄  
.
⁄⁄  !
DisableKeyword
⁄⁄! /
(
⁄⁄/ 0
ShaderUtilities
⁄⁄0 ?
.
⁄⁄? @
Keyword_MASK_SOFT
⁄⁄@ Q
)
⁄⁄Q R
;
⁄⁄R S
m_sharedMaterial
€€  
.
€€  !
DisableKeyword
€€! /
(
€€/ 0
ShaderUtilities
€€0 ?
.
€€? @
Keyword_MASK_HARD
€€@ Q
)
€€Q R
;
€€R S
m_sharedMaterial
‹‹  
.
‹‹  !
DisableKeyword
‹‹! /
(
‹‹/ 0
ShaderUtilities
‹‹0 ?
.
‹‹? @
Keyword_MASK_TEX
‹‹@ P
)
‹‹P Q
;
‹‹Q R 
m_isMaskingEnabled
ﬁﬁ "
=
ﬁﬁ# $
false
ﬁﬁ% *
;
ﬁﬁ* +

UpdateMask
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 
}
·· 	
void
‰‰ 

UpdateMask
‰‰ 
(
‰‰ 
)
‰‰ 
{
ÂÂ 	
if
ËË 
(
ËË 
!
ËË  
m_isMaskingEnabled
ËË #
)
ËË# $
{
ÈÈ 
return
ÓÓ 
;
ÓÓ 
}
ÔÔ 
if
ÒÒ 
(
ÒÒ  
m_isMaskingEnabled
ÒÒ "
&&
ÒÒ# %
m_fontMaterial
ÒÒ& 4
==
ÒÒ5 7
null
ÒÒ8 <
)
ÒÒ< =
{
ÚÚ $
CreateMaterialInstance
ÛÛ &
(
ÛÛ& '
)
ÛÛ' (
;
ÛÛ( )
}
ÙÙ 
}
´´ 	
	protected
ØØ 
override
ØØ 
Material
ØØ #
GetMaterial
ØØ$ /
(
ØØ/ 0
Material
ØØ0 8
mat
ØØ9 <
)
ØØ< =
{
∞∞ 	
if
∑∑ 
(
∑∑ 
m_fontMaterial
∑∑ 
==
∑∑ !
null
∑∑" &
||
∑∑' )
m_fontMaterial
∑∑* 8
.
∑∑8 9
GetInstanceID
∑∑9 F
(
∑∑F G
)
∑∑G H
!=
∑∑I K
mat
∑∑L O
.
∑∑O P
GetInstanceID
∑∑P ]
(
∑∑] ^
)
∑∑^ _
)
∑∑_ `
m_fontMaterial
∏∏ 
=
∏∏  $
CreateMaterialInstance
∏∏! 7
(
∏∏7 8
mat
∏∏8 ;
)
∏∏; <
;
∏∏< =
m_sharedMaterial
∫∫ 
=
∫∫ 
m_fontMaterial
∫∫ -
;
∫∫- .
	m_padding
ºº 
=
ºº #
GetPaddingForMaterial
ºº -
(
ºº- .
)
ºº. /
;
ºº/ 0
SetVerticesDirty
ææ 
(
ææ 
)
ææ 
;
ææ 
SetMaterialDirty
øø 
(
øø 
)
øø 
;
øø 
return
¡¡ 
m_sharedMaterial
¡¡ #
;
¡¡# $
}
¬¬ 	
	protected
…… 
override
…… 
Material
…… #
[
……# $
]
……$ %
GetMaterials
……& 2
(
……2 3
Material
……3 ;
[
……; <
]
……< =
mats
……> B
)
……B C
{
   	
int
ÀÀ 
materialCount
ÀÀ 
=
ÀÀ 

m_textInfo
ÀÀ  *
.
ÀÀ* +
materialCount
ÀÀ+ 8
;
ÀÀ8 9
if
ÕÕ 
(
ÕÕ 
m_fontMaterials
ÕÕ 
==
ÕÕ  "
null
ÕÕ# '
)
ÕÕ' (
m_fontMaterials
ŒŒ 
=
ŒŒ  !
new
ŒŒ" %
Material
ŒŒ& .
[
ŒŒ. /
materialCount
ŒŒ/ <
]
ŒŒ< =
;
ŒŒ= >
else
œœ 
if
œœ 
(
œœ 
m_fontMaterials
œœ $
.
œœ$ %
Length
œœ% +
!=
œœ, .
materialCount
œœ/ <
)
œœ< =
TMP_TextInfo
–– 
.
–– 
Resize
–– #
(
––# $
ref
––$ '
m_fontMaterials
––( 7
,
––7 8
materialCount
––9 F
,
––F G
false
––H M
)
––M N
;
––N O
for
”” 
(
”” 
int
”” 
i
”” 
=
”” 
$num
”” 
;
”” 
i
”” 
<
”” 
materialCount
””  -
;
””- .
i
””/ 0
++
””0 2
)
””2 3
{
‘‘ 
if
’’ 
(
’’ 
i
’’ 
==
’’ 
$num
’’ 
)
’’ 
m_fontMaterials
÷÷ #
[
÷÷# $
i
÷÷$ %
]
÷÷% &
=
÷÷' (
fontMaterial
÷÷) 5
;
÷÷5 6
else
◊◊ 
m_fontMaterials
ÿÿ #
[
ÿÿ# $
i
ÿÿ$ %
]
ÿÿ% &
=
ÿÿ' (
m_subTextObjects
ÿÿ) 9
[
ÿÿ9 :
i
ÿÿ: ;
]
ÿÿ; <
.
ÿÿ< =
material
ÿÿ= E
;
ÿÿE F
}
ŸŸ #
m_fontSharedMaterials
€€ !
=
€€" #
m_fontMaterials
€€$ 3
;
€€3 4
return
›› 
m_fontMaterials
›› "
;
››" #
}
ﬁﬁ 	
	protected
‚‚ 
override
‚‚ 
void
‚‚ 
SetSharedMaterial
‚‚  1
(
‚‚1 2
Material
‚‚2 :
mat
‚‚; >
)
‚‚> ?
{
„„ 	
m_sharedMaterial
ÈÈ 
=
ÈÈ 
mat
ÈÈ "
;
ÈÈ" #
	m_padding
ÎÎ 
=
ÎÎ #
GetPaddingForMaterial
ÎÎ -
(
ÎÎ- .
)
ÎÎ. /
;
ÎÎ/ 0
SetMaterialDirty
ÌÌ 
(
ÌÌ 
)
ÌÌ 
;
ÌÌ 
}
ÓÓ 	
	protected
ıı 
override
ıı 
Material
ıı #
[
ıı# $
]
ıı$ % 
GetSharedMaterials
ıı& 8
(
ıı8 9
)
ıı9 :
{
ˆˆ 	
int
˜˜ 
materialCount
˜˜ 
=
˜˜ 

m_textInfo
˜˜  *
.
˜˜* +
materialCount
˜˜+ 8
;
˜˜8 9
if
˘˘ 
(
˘˘ #
m_fontSharedMaterials
˘˘ %
==
˘˘& (
null
˘˘) -
)
˘˘- .#
m_fontSharedMaterials
˙˙ %
=
˙˙& '
new
˙˙( +
Material
˙˙, 4
[
˙˙4 5
materialCount
˙˙5 B
]
˙˙B C
;
˙˙C D
else
˚˚ 
if
˚˚ 
(
˚˚ #
m_fontSharedMaterials
˚˚ *
.
˚˚* +
Length
˚˚+ 1
!=
˚˚2 4
materialCount
˚˚5 B
)
˚˚B C
TMP_TextInfo
¸¸ 
.
¸¸ 
Resize
¸¸ #
(
¸¸# $
ref
¸¸$ '#
m_fontSharedMaterials
¸¸( =
,
¸¸= >
materialCount
¸¸? L
,
¸¸L M
false
¸¸N S
)
¸¸S T
;
¸¸T U
for
˛˛ 
(
˛˛ 
int
˛˛ 
i
˛˛ 
=
˛˛ 
$num
˛˛ 
;
˛˛ 
i
˛˛ 
<
˛˛ 
materialCount
˛˛  -
;
˛˛- .
i
˛˛/ 0
++
˛˛0 2
)
˛˛2 3
{
ˇˇ 
if
ÄÄ 
(
ÄÄ 
i
ÄÄ 
==
ÄÄ 
$num
ÄÄ 
)
ÄÄ #
m_fontSharedMaterials
ÅÅ )
[
ÅÅ) *
i
ÅÅ* +
]
ÅÅ+ ,
=
ÅÅ- .
m_sharedMaterial
ÅÅ/ ?
;
ÅÅ? @
else
ÇÇ #
m_fontSharedMaterials
ÉÉ )
[
ÉÉ) *
i
ÉÉ* +
]
ÉÉ+ ,
=
ÉÉ- .
m_subTextObjects
ÉÉ/ ?
[
ÉÉ? @
i
ÉÉ@ A
]
ÉÉA B
.
ÉÉB C
sharedMaterial
ÉÉC Q
;
ÉÉQ R
}
ÑÑ 
return
ÜÜ #
m_fontSharedMaterials
ÜÜ (
;
ÜÜ( )
}
áá 	
	protected
çç 
override
çç 
void
çç  
SetSharedMaterials
çç  2
(
çç2 3
Material
çç3 ;
[
çç; <
]
çç< =
	materials
çç> G
)
ççG H
{
éé 	
int
èè 
materialCount
èè 
=
èè 

m_textInfo
èè  *
.
èè* +
materialCount
èè+ 8
;
èè8 9
if
íí 
(
íí #
m_fontSharedMaterials
íí %
==
íí& (
null
íí) -
)
íí- .#
m_fontSharedMaterials
ìì %
=
ìì& '
new
ìì( +
Material
ìì, 4
[
ìì4 5
materialCount
ìì5 B
]
ììB C
;
ììC D
else
îî 
if
îî 
(
îî #
m_fontSharedMaterials
îî *
.
îî* +
Length
îî+ 1
!=
îî2 4
materialCount
îî5 B
)
îîB C
TMP_TextInfo
ïï 
.
ïï 
Resize
ïï #
(
ïï# $
ref
ïï$ '#
m_fontSharedMaterials
ïï( =
,
ïï= >
materialCount
ïï? L
,
ïïL M
false
ïïN S
)
ïïS T
;
ïïT U
for
òò 
(
òò 
int
òò 
i
òò 
=
òò 
$num
òò 
;
òò 
i
òò 
<
òò 
materialCount
òò  -
;
òò- .
i
òò/ 0
++
òò0 2
)
òò2 3
{
ôô 
Texture
öö 
mat_MainTex
öö #
=
öö$ %
	materials
öö& /
[
öö/ 0
i
öö0 1
]
öö1 2
.
öö2 3

GetTexture
öö3 =
(
öö= >
ShaderUtilities
öö> M
.
ööM N

ID_MainTex
ööN X
)
ööX Y
;
ööY Z
if
úú 
(
úú 
i
úú 
==
úú 
$num
úú 
)
úú 
{
ùù 
if
üü 
(
üü 
mat_MainTex
üü $
==
üü% '
null
üü( ,
||
üü- /
mat_MainTex
üü0 ;
.
üü; <
GetInstanceID
üü< I
(
üüI J
)
üüJ K
!=
üüL N
m_sharedMaterial
üüO _
.
üü_ `

GetTexture
üü` j
(
üüj k
ShaderUtilities
üük z
.
üüz {

ID_MainTexüü{ Ö
)üüÖ Ü
.üüÜ á
GetInstanceIDüüá î
(üüî ï
)üüï ñ
)üüñ ó
continue
††  
;
††  !
m_sharedMaterial
¢¢ $
=
¢¢% &#
m_fontSharedMaterials
¢¢' <
[
¢¢< =
i
¢¢= >
]
¢¢> ?
=
¢¢@ A
	materials
¢¢B K
[
¢¢K L
i
¢¢L M
]
¢¢M N
;
¢¢N O
	m_padding
££ 
=
££ #
GetPaddingForMaterial
££  5
(
££5 6
m_sharedMaterial
££6 F
)
££F G
;
££G H
}
§§ 
else
•• 
{
¶¶ 
if
®® 
(
®® 
mat_MainTex
®® #
==
®®$ &
null
®®' +
||
®®, .
mat_MainTex
®®/ :
.
®®: ;
GetInstanceID
®®; H
(
®®H I
)
®®I J
!=
®®K M
m_subTextObjects
®®N ^
[
®®^ _
i
®®_ `
]
®®` a
.
®®a b
sharedMaterial
®®b p
.
®®p q

GetTexture
®®q {
(
®®{ |
ShaderUtilities®®| ã
.®®ã å

ID_MainTex®®å ñ
)®®ñ ó
.®®ó ò
GetInstanceID®®ò •
(®®• ¶
)®®¶ ß
)®®ß ®
continue
©©  
;
©©  !
if
¨¨ 
(
¨¨ 
m_subTextObjects
¨¨ (
[
¨¨( )
i
¨¨) *
]
¨¨* +
.
¨¨+ ,
isDefaultMaterial
¨¨, =
)
¨¨= >
m_subTextObjects
≠≠ (
[
≠≠( )
i
≠≠) *
]
≠≠* +
.
≠≠+ ,
sharedMaterial
≠≠, :
=
≠≠; <#
m_fontSharedMaterials
≠≠= R
[
≠≠R S
i
≠≠S T
]
≠≠T U
=
≠≠V W
	materials
≠≠X a
[
≠≠a b
i
≠≠b c
]
≠≠c d
;
≠≠d e
}
ÆÆ 
}
ØØ 
}
∞∞ 	
	protected
¥¥ 
override
¥¥ 
void
¥¥ !
SetOutlineThickness
¥¥  3
(
¥¥3 4
float
¥¥4 9
	thickness
¥¥: C
)
¥¥C D
{
µµ 	
	thickness
∂∂ 
=
∂∂ 
Mathf
∂∂ 
.
∂∂ 
Clamp01
∂∂ %
(
∂∂% &
	thickness
∂∂& /
)
∂∂/ 0
;
∂∂0 1

m_renderer
∑∑ 
.
∑∑ 
material
∑∑ 
.
∑∑  
SetFloat
∑∑  (
(
∑∑( )
ShaderUtilities
∑∑) 8
.
∑∑8 9
ID_OutlineWidth
∑∑9 H
,
∑∑H I
	thickness
∑∑J S
)
∑∑S T
;
∑∑T U
if
ππ 
(
ππ 
m_fontMaterial
ππ 
==
ππ !
null
ππ" &
)
ππ& '
m_fontMaterial
∫∫ 
=
∫∫  

m_renderer
∫∫! +
.
∫∫+ ,
material
∫∫, 4
;
∫∫4 5
m_fontMaterial
ºº 
=
ºº 

m_renderer
ºº '
.
ºº' (
material
ºº( 0
;
ºº0 1
m_sharedMaterial
ΩΩ 
=
ΩΩ 
m_fontMaterial
ΩΩ -
;
ΩΩ- .
	m_padding
ææ 
=
ææ #
GetPaddingForMaterial
ææ -
(
ææ- .
)
ææ. /
;
ææ/ 0
}
øø 	
	protected
√√ 
override
√√ 
void
√√ 
SetFaceColor
√√  ,
(
√√, -
Color32
√√- 4
color
√√5 :
)
√√: ;
{
ƒƒ 	

m_renderer
≈≈ 
.
≈≈ 
material
≈≈ 
.
≈≈  
SetColor
≈≈  (
(
≈≈( )
ShaderUtilities
≈≈) 8
.
≈≈8 9
ID_FaceColor
≈≈9 E
,
≈≈E F
color
≈≈G L
)
≈≈L M
;
≈≈M N
if
«« 
(
«« 
m_fontMaterial
«« 
==
«« !
null
««" &
)
««& '
m_fontMaterial
»» 
=
»»  

m_renderer
»»! +
.
»»+ ,
material
»», 4
;
»»4 5
m_sharedMaterial
   
=
   
m_fontMaterial
   -
;
  - .
}
ÀÀ 	
	protected
œœ 
override
œœ 
void
œœ 
SetOutlineColor
œœ  /
(
œœ/ 0
Color32
œœ0 7
color
œœ8 =
)
œœ= >
{
–– 	

m_renderer
—— 
.
—— 
material
—— 
.
——  
SetColor
——  (
(
——( )
ShaderUtilities
——) 8
.
——8 9
ID_OutlineColor
——9 H
,
——H I
color
——J O
)
——O P
;
——P Q
if
”” 
(
”” 
m_fontMaterial
”” 
==
”” !
null
””" &
)
””& '
m_fontMaterial
‘‘ 
=
‘‘  

m_renderer
‘‘! +
.
‘‘+ ,
material
‘‘, 4
;
‘‘4 5
m_sharedMaterial
◊◊ 
=
◊◊ 
m_fontMaterial
◊◊ -
;
◊◊- .
}
ÿÿ 	
void
‹‹ $
CreateMaterialInstance
‹‹ #
(
‹‹# $
)
‹‹$ %
{
›› 	
Material
ﬁﬁ 
mat
ﬁﬁ 
=
ﬁﬁ 
new
ﬁﬁ 
Material
ﬁﬁ '
(
ﬁﬁ' (
m_sharedMaterial
ﬁﬁ( 8
)
ﬁﬁ8 9
;
ﬁﬁ9 :
mat
ﬂﬂ 
.
ﬂﬂ 
shaderKeywords
ﬂﬂ 
=
ﬂﬂ  
m_sharedMaterial
ﬂﬂ! 1
.
ﬂﬂ1 2
shaderKeywords
ﬂﬂ2 @
;
ﬂﬂ@ A
mat
‚‚ 
.
‚‚ 
name
‚‚ 
+=
‚‚ 
$str
‚‚ #
;
‚‚# $
m_fontMaterial
‰‰ 
=
‰‰ 
mat
‰‰  
;
‰‰  !
}
ÂÂ 	
	protected
ÈÈ 
override
ÈÈ 
void
ÈÈ 
SetShaderDepth
ÈÈ  .
(
ÈÈ. /
)
ÈÈ/ 0
{
ÍÍ 	
if
ÎÎ 
(
ÎÎ 
m_isOverlay
ÎÎ 
)
ÎÎ 
{
ÏÏ 
m_sharedMaterial
ÓÓ  
.
ÓÓ  !
SetFloat
ÓÓ! )
(
ÓÓ) *
ShaderUtilities
ÓÓ* 9
.
ÓÓ9 :!
ShaderTag_ZTestMode
ÓÓ: M
,
ÓÓM N
$num
ÓÓO P
)
ÓÓP Q
;
ÓÓQ R

m_renderer
 
.
 
material
 #
.
# $
renderQueue
$ /
=
0 1
$num
2 6
;
6 7
m_sharedMaterial
ÚÚ  
=
ÚÚ! "

m_renderer
ÚÚ# -
.
ÚÚ- .
material
ÚÚ. 6
;
ÚÚ6 7
}
ÙÙ 
else
ıı 
{
ˆˆ 
m_sharedMaterial
¯¯  
.
¯¯  !
SetFloat
¯¯! )
(
¯¯) *
ShaderUtilities
¯¯* 9
.
¯¯9 :!
ShaderTag_ZTestMode
¯¯: M
,
¯¯M N
$num
¯¯O P
)
¯¯P Q
;
¯¯Q R

m_renderer
˘˘ 
.
˘˘ 
material
˘˘ #
.
˘˘# $
renderQueue
˘˘$ /
=
˘˘0 1
-
˘˘2 3
$num
˘˘3 4
;
˘˘4 5
m_sharedMaterial
˚˚  
=
˚˚! "

m_renderer
˚˚# -
.
˚˚- .
material
˚˚. 6
;
˚˚6 7
}
˝˝ 
}
˛˛ 	
	protected
ÇÇ 
override
ÇÇ 
void
ÇÇ 

SetCulling
ÇÇ  *
(
ÇÇ* +
)
ÇÇ+ ,
{
ÉÉ 	
if
ÑÑ 
(
ÑÑ  
m_isCullingEnabled
ÑÑ "
)
ÑÑ" #
{
ÖÖ 

m_renderer
ÜÜ 
.
ÜÜ 
material
ÜÜ #
.
ÜÜ# $
SetFloat
ÜÜ$ ,
(
ÜÜ, -
$str
ÜÜ- 8
,
ÜÜ8 9
$num
ÜÜ: ;
)
ÜÜ; <
;
ÜÜ< =
for
àà 
(
àà 
int
àà 
i
àà 
=
àà 
$num
àà 
;
àà 
i
àà  !
<
àà" #
m_subTextObjects
àà$ 4
.
àà4 5
Length
àà5 ;
&&
àà< >
m_subTextObjects
àà? O
[
ààO P
i
ààP Q
]
ààQ R
!=
ààS U
null
ààV Z
;
ààZ [
i
àà\ ]
++
àà] _
)
àà_ `
{
ââ 
Renderer
ää 
renderer
ää %
=
ää& '
m_subTextObjects
ää( 8
[
ää8 9
i
ää9 :
]
ää: ;
.
ää; <
renderer
ää< D
;
ääD E
if
åå 
(
åå 
renderer
åå  
!=
åå! #
null
åå$ (
)
åå( )
{
çç 
renderer
éé  
.
éé  !
material
éé! )
.
éé) *
SetFloat
éé* 2
(
éé2 3
ShaderUtilities
éé3 B
.
ééB C 
ShaderTag_CullMode
ééC U
,
ééU V
$num
ééW X
)
ééX Y
;
ééY Z
}
èè 
}
êê 
}
ëë 
else
íí 
{
ìì 

m_renderer
îî 
.
îî 
material
îî #
.
îî# $
SetFloat
îî$ ,
(
îî, -
$str
îî- 8
,
îî8 9
$num
îî: ;
)
îî; <
;
îî< =
for
ññ 
(
ññ 
int
ññ 
i
ññ 
=
ññ 
$num
ññ 
;
ññ 
i
ññ  !
<
ññ" #
m_subTextObjects
ññ$ 4
.
ññ4 5
Length
ññ5 ;
&&
ññ< >
m_subTextObjects
ññ? O
[
ññO P
i
ññP Q
]
ññQ R
!=
ññS U
null
ññV Z
;
ññZ [
i
ññ\ ]
++
ññ] _
)
ññ_ `
{
óó 
Renderer
òò 
renderer
òò %
=
òò& '
m_subTextObjects
òò( 8
[
òò8 9
i
òò9 :
]
òò: ;
.
òò; <
renderer
òò< D
;
òòD E
if
öö 
(
öö 
renderer
öö  
!=
öö! #
null
öö$ (
)
öö( )
{
õõ 
renderer
úú  
.
úú  !
material
úú! )
.
úú) *
SetFloat
úú* 2
(
úú2 3
ShaderUtilities
úú3 B
.
úúB C 
ShaderTag_CullMode
úúC U
,
úúU V
$num
úúW X
)
úúX Y
;
úúY Z
}
ùù 
}
ûû 
}
üü 
}
†† 	
void
§§ &
SetPerspectiveCorrection
§§ %
(
§§% &
)
§§& '
{
•• 	
if
¶¶ 
(
¶¶ 
m_isOrthographic
¶¶  
)
¶¶  !
m_sharedMaterial
ßß  
.
ßß  !
SetFloat
ßß! )
(
ßß) *
ShaderUtilities
ßß* 9
.
ßß9 :"
ID_PerspectiveFilter
ßß: N
,
ßßN O
$num
ßßP T
)
ßßT U
;
ßßU V
else
®® 
m_sharedMaterial
©©  
.
©©  !
SetFloat
©©! )
(
©©) *
ShaderUtilities
©©* 9
.
©©9 :"
ID_PerspectiveFilter
©©: N
,
©©N O
$num
©©P V
)
©©V W
;
©©W X
}
™™ 	
	protected
ÆÆ 
override
ÆÆ 
int
ÆÆ 
SetArraySizes
ÆÆ ,
(
ÆÆ, -
UnicodeChar
ÆÆ- 8
[
ÆÆ8 9
]
ÆÆ9 :
unicodeChars
ÆÆ; G
)
ÆÆG H
{
ØØ 	
int
µµ 
spriteCount
µµ 
=
µµ 
$num
µµ 
;
µµ  #
m_totalCharacterCount
∑∑ !
=
∑∑" #
$num
∑∑$ %
;
∑∑% &
m_isUsingBold
∏∏ 
=
∏∏ 
false
∏∏ !
;
∏∏! "
m_isParsingText
ππ 
=
ππ 
false
ππ #
;
ππ# $
tag_NoParsing
∫∫ 
=
∫∫ 
false
∫∫ !
;
∫∫! "!
m_FontStyleInternal
ªª 
=
ªª  !
m_fontStyle
ªª" -
;
ªª- .
m_fontStyleStack
ºº 
.
ºº 
Clear
ºº "
(
ºº" #
)
ºº# $
;
ºº$ %"
m_FontWeightInternal
ææ  
=
ææ! "
(
ææ# $!
m_FontStyleInternal
ææ$ 7
&
ææ8 9

FontStyles
ææ: D
.
ææD E
Bold
ææE I
)
ææI J
==
ææK M

FontStyles
ææN X
.
ææX Y
Bold
ææY ]
?
ææ^ _

FontWeight
ææ` j
.
ææj k
Bold
ææk o
:
ææp q
m_fontWeight
æær ~
;
ææ~ 
m_FontWeightStack
øø 
.
øø 

SetDefault
øø (
(
øø( )"
m_FontWeightInternal
øø) =
)
øø= >
;
øø> ? 
m_currentFontAsset
¡¡ 
=
¡¡  
m_fontAsset
¡¡! ,
;
¡¡, -
m_currentMaterial
¬¬ 
=
¬¬ 
m_sharedMaterial
¬¬  0
;
¬¬0 1$
m_currentMaterialIndex
√√ "
=
√√# $
$num
√√% &
;
√√& '&
m_materialReferenceStack
≈≈ $
.
≈≈$ %

SetDefault
≈≈% /
(
≈≈/ 0
new
≈≈0 3
MaterialReference
≈≈4 E
(
≈≈E F$
m_currentMaterialIndex
≈≈F \
,
≈≈\ ] 
m_currentFontAsset
≈≈^ p
,
≈≈p q
null
≈≈r v
,
≈≈v w 
m_currentMaterial≈≈x â
,≈≈â ä
	m_padding≈≈ã î
)≈≈î ï
)≈≈ï ñ
;≈≈ñ ó,
m_materialReferenceIndexLookup
«« *
.
««* +
Clear
««+ 0
(
««0 1
)
««1 2
;
««2 3
MaterialReference
»» 
.
»» "
AddMaterialReference
»» 2
(
»»2 3
m_currentMaterial
»»3 D
,
»»D E 
m_currentFontAsset
»»F X
,
»»X Y"
m_materialReferences
»»Z n
,
»»n o-
m_materialReferenceIndexLookup»»p é
)»»é è
;»»è ê
if
ÀÀ 
(
ÀÀ 

m_textInfo
ÀÀ 
==
ÀÀ 
null
ÀÀ "
)
ÀÀ" #

m_textInfo
ÃÃ 
=
ÃÃ 
new
ÃÃ  
TMP_TextInfo
ÃÃ! -
(
ÃÃ- .)
m_InternalParsingBufferSize
ÃÃ. I
)
ÃÃI J
;
ÃÃJ K
else
ÕÕ 
if
ÕÕ 
(
ÕÕ 

m_textInfo
ÕÕ 
.
ÕÕ  
characterInfo
ÕÕ  -
.
ÕÕ- .
Length
ÕÕ. 4
<
ÕÕ5 6)
m_InternalParsingBufferSize
ÕÕ7 R
)
ÕÕR S
TMP_TextInfo
ŒŒ 
.
ŒŒ 
Resize
ŒŒ #
(
ŒŒ# $
ref
ŒŒ$ '

m_textInfo
ŒŒ( 2
.
ŒŒ2 3
characterInfo
ŒŒ3 @
,
ŒŒ@ A)
m_InternalParsingBufferSize
ŒŒB ]
,
ŒŒ] ^
false
ŒŒ_ d
)
ŒŒd e
;
ŒŒe f
m_textElementType
–– 
=
–– !
TMP_TextElementType
––  3
.
––3 4
	Character
––4 =
;
––= >
if
ÈÈ 
(
ÈÈ 
m_overflowMode
ÈÈ 
==
ÈÈ !
TextOverflowModes
ÈÈ" 3
.
ÈÈ3 4
Ellipsis
ÈÈ4 <
)
ÈÈ< =
{
ÍÍ )
GetEllipsisSpecialCharacter
ÎÎ +
(
ÎÎ+ , 
m_currentFontAsset
ÎÎ, >
)
ÎÎ> ?
;
ÎÎ? @
if
ÌÌ 
(
ÌÌ 

m_Ellipsis
ÌÌ 
.
ÌÌ 
	character
ÌÌ (
!=
ÌÌ) +
null
ÌÌ, 0
)
ÌÌ0 1
{
ÓÓ 
if
ÔÔ 
(
ÔÔ 

m_Ellipsis
ÔÔ "
.
ÔÔ" #
	fontAsset
ÔÔ# ,
.
ÔÔ, -
GetInstanceID
ÔÔ- :
(
ÔÔ: ;
)
ÔÔ; <
!=
ÔÔ= ? 
m_currentFontAsset
ÔÔ@ R
.
ÔÔR S
GetInstanceID
ÔÔS `
(
ÔÔ` a
)
ÔÔa b
)
ÔÔb c
{
 
if
ÒÒ 
(
ÒÒ 
TMP_Settings
ÒÒ (
.
ÒÒ( )!
matchMaterialPreset
ÒÒ) <
&&
ÒÒ= ?
m_currentMaterial
ÒÒ@ Q
.
ÒÒQ R
GetInstanceID
ÒÒR _
(
ÒÒ_ `
)
ÒÒ` a
!=
ÒÒb d

m_Ellipsis
ÒÒe o
.
ÒÒo p
	fontAsset
ÒÒp y
.
ÒÒy z
materialÒÒz Ç
.ÒÒÇ É
GetInstanceIDÒÒÉ ê
(ÒÒê ë
)ÒÒë í
)ÒÒí ì

m_Ellipsis
ÚÚ &
.
ÚÚ& '
material
ÚÚ' /
=
ÚÚ0 1!
TMP_MaterialManager
ÚÚ2 E
.
ÚÚE F!
GetFallbackMaterial
ÚÚF Y
(
ÚÚY Z
m_currentMaterial
ÚÚZ k
,
ÚÚk l

m_Ellipsis
ÚÚm w
.
ÚÚw x
	fontAssetÚÚx Å
.ÚÚÅ Ç
materialÚÚÇ ä
)ÚÚä ã
;ÚÚã å
else
ÛÛ 

m_Ellipsis
ÙÙ &
.
ÙÙ& '
material
ÙÙ' /
=
ÙÙ0 1

m_Ellipsis
ÙÙ2 <
.
ÙÙ< =
	fontAsset
ÙÙ= F
.
ÙÙF G
material
ÙÙG O
;
ÙÙO P

m_Ellipsis
ˆˆ "
.
ˆˆ" #
materialIndex
ˆˆ# 0
=
ˆˆ1 2
MaterialReference
ˆˆ3 D
.
ˆˆD E"
AddMaterialReference
ˆˆE Y
(
ˆˆY Z

m_Ellipsis
ˆˆZ d
.
ˆˆd e
material
ˆˆe m
,
ˆˆm n

m_Ellipsis
ˆˆo y
.
ˆˆy z
	fontAssetˆˆz É
,ˆˆÉ Ñ$
m_materialReferencesˆˆÖ ô
,ˆˆô ö.
m_materialReferenceIndexLookupˆˆõ π
)ˆˆπ ∫
;ˆˆ∫ ª"
m_materialReferences
˜˜ ,
[
˜˜, -

m_Ellipsis
˜˜- 7
.
˜˜7 8
materialIndex
˜˜8 E
]
˜˜E F
.
˜˜F G
referenceCount
˜˜G U
=
˜˜V W
$num
˜˜X Y
;
˜˜Y Z
}
¯¯ 
}
˘˘ 
else
˙˙ 
{
˚˚ 
m_overflowMode
¸¸ "
=
¸¸# $
TextOverflowModes
¸¸% 6
.
¸¸6 7
Truncate
¸¸7 ?
;
¸¸? @
if
˛˛ 
(
˛˛ 
!
˛˛ 
TMP_Settings
˛˛ %
.
˛˛% &
warningsDisabled
˛˛& 6
)
˛˛6 7
Debug
ˇˇ 
.
ˇˇ 

LogWarning
ˇˇ (
(
ˇˇ( )
$str
ˇˇ) k
+
ˇˇl m!
m_currentFontAssetˇˇn Ä
.ˇˇÄ Å
nameˇˇÅ Ö
+ˇˇÜ á
$strˇˇà —
,ˇˇ— “
thisˇˇ” ◊
)ˇˇ◊ ÿ
;ˇˇÿ Ÿ
}
ÄÄ 
}
ÅÅ 
if
ÜÜ 
(
ÜÜ #
m_linkedTextComponent
ÜÜ %
!=
ÜÜ& (
null
ÜÜ) -
&&
ÜÜ. 0
!
ÜÜ1 2,
m_isCalculatingPreferredValues
ÜÜ2 P
)
ÜÜP Q#
m_linkedTextComponent
áá %
.
áá% &
text
áá& *
=
áá+ ,
string
áá- 3
.
áá3 4
Empty
áá4 9
;
áá9 :
for
ää 
(
ää 
int
ää 
i
ää 
=
ää 
$num
ää 
;
ää 
i
ää 
<
ää 
unicodeChars
ää  ,
.
ää, -
Length
ää- 3
&&
ää4 6
unicodeChars
ää7 C
[
ääC D
i
ääD E
]
ääE F
.
ääF G
unicode
ääG N
!=
ääO Q
$num
ääR S
;
ääS T
i
ääU V
++
ääV X
)
ääX Y
{
ãã 
if
çç 
(
çç 

m_textInfo
çç 
.
çç 
characterInfo
çç ,
==
çç- /
null
çç0 4
||
çç5 7#
m_totalCharacterCount
çç8 M
>=
ççN P

m_textInfo
ççQ [
.
çç[ \
characterInfo
çç\ i
.
ççi j
Length
ççj p
)
ççp q
TMP_TextInfo
éé  
.
éé  !
Resize
éé! '
(
éé' (
ref
éé( +

m_textInfo
éé, 6
.
éé6 7
characterInfo
éé7 D
,
ééD E#
m_totalCharacterCount
ééF [
+
éé\ ]
$num
éé^ _
,
éé_ `
true
ééa e
)
éée f
;
ééf g
int
êê 
unicode
êê 
=
êê 
unicodeChars
êê *
[
êê* +
i
êê+ ,
]
êê, -
.
êê- .
unicode
êê. 5
;
êê5 6
if
îî 
(
îî 
m_isRichText
îî  
&&
îî! #
unicode
îî$ +
==
îî, .
$num
îî/ 1
)
îî1 2
{
ïï 
int
ññ  
prev_MaterialIndex
ññ *
=
ññ+ ,$
m_currentMaterialIndex
ññ- C
;
ññC D
int
óó 
endTagIndex
óó #
;
óó# $
if
öö 
(
öö 
ValidateHtmlTag
öö '
(
öö' (
unicodeChars
öö( 4
,
öö4 5
i
öö6 7
+
öö8 9
$num
öö: ;
,
öö; <
out
öö= @
endTagIndex
ööA L
)
ööL M
)
ööM N
{
õõ 
int
úú 
tagStartIndex
úú )
=
úú* +
unicodeChars
úú, 8
[
úú8 9
i
úú9 :
]
úú: ;
.
úú; <
stringIndex
úú< G
;
úúG H
i
ùù 
=
ùù 
endTagIndex
ùù '
;
ùù' (
if
üü 
(
üü 
(
üü !
m_FontStyleInternal
üü 0
&
üü1 2

FontStyles
üü3 =
.
üü= >
Bold
üü> B
)
üüB C
==
üüD F

FontStyles
üüG Q
.
üüQ R
Bold
üüR V
)
üüV W
m_isUsingBold
†† )
=
††* +
true
††, 0
;
††0 1
if
¢¢ 
(
¢¢ 
m_textElementType
¢¢ -
==
¢¢. 0!
TMP_TextElementType
¢¢1 D
.
¢¢D E
Sprite
¢¢E K
)
¢¢K L
{
££ "
m_materialReferences
§§ 0
[
§§0 1$
m_currentMaterialIndex
§§1 G
]
§§G H
.
§§H I
referenceCount
§§I W
+=
§§X Z
$num
§§[ \
;
§§\ ]

m_textInfo
¶¶ &
.
¶¶& '
characterInfo
¶¶' 4
[
¶¶4 5#
m_totalCharacterCount
¶¶5 J
]
¶¶J K
.
¶¶K L
	character
¶¶L U
=
¶¶V W
(
¶¶X Y
char
¶¶Y ]
)
¶¶] ^
(
¶¶^ _
$num
¶¶_ d
+
¶¶e f
m_spriteIndex
¶¶g t
)
¶¶t u
;
¶¶u v

m_textInfo
ßß &
.
ßß& '
characterInfo
ßß' 4
[
ßß4 5#
m_totalCharacterCount
ßß5 J
]
ßßJ K
.
ßßK L
spriteIndex
ßßL W
=
ßßX Y
m_spriteIndex
ßßZ g
;
ßßg h

m_textInfo
®® &
.
®®& '
characterInfo
®®' 4
[
®®4 5#
m_totalCharacterCount
®®5 J
]
®®J K
.
®®K L
	fontAsset
®®L U
=
®®V W 
m_currentFontAsset
®®X j
;
®®j k

m_textInfo
©© &
.
©©& '
characterInfo
©©' 4
[
©©4 5#
m_totalCharacterCount
©©5 J
]
©©J K
.
©©K L
spriteAsset
©©L W
=
©©X Y"
m_currentSpriteAsset
©©Z n
;
©©n o

m_textInfo
™™ &
.
™™& '
characterInfo
™™' 4
[
™™4 5#
m_totalCharacterCount
™™5 J
]
™™J K
.
™™K L$
materialReferenceIndex
™™L b
=
™™c d$
m_currentMaterialIndex
™™e {
;
™™{ |

m_textInfo
´´ &
.
´´& '
characterInfo
´´' 4
[
´´4 5#
m_totalCharacterCount
´´5 J
]
´´J K
.
´´K L
textElement
´´L W
=
´´X Y"
m_currentSpriteAsset
´´Z n
.
´´n o#
spriteCharacterTable´´o É
[´´É Ñ
m_spriteIndex´´Ñ ë
]´´ë í
;´´í ì

m_textInfo
¨¨ &
.
¨¨& '
characterInfo
¨¨' 4
[
¨¨4 5#
m_totalCharacterCount
¨¨5 J
]
¨¨J K
.
¨¨K L
elementType
¨¨L W
=
¨¨X Y
m_textElementType
¨¨Z k
;
¨¨k l

m_textInfo
≠≠ &
.
≠≠& '
characterInfo
≠≠' 4
[
≠≠4 5#
m_totalCharacterCount
≠≠5 J
]
≠≠J K
.
≠≠K L
index
≠≠L Q
=
≠≠R S
tagStartIndex
≠≠T a
;
≠≠a b

m_textInfo
ÆÆ &
.
ÆÆ& '
characterInfo
ÆÆ' 4
[
ÆÆ4 5#
m_totalCharacterCount
ÆÆ5 J
]
ÆÆJ K
.
ÆÆK L
stringLength
ÆÆL X
=
ÆÆY Z
unicodeChars
ÆÆ[ g
[
ÆÆg h
i
ÆÆh i
]
ÆÆi j
.
ÆÆj k
stringIndex
ÆÆk v
-
ÆÆw x
tagStartIndexÆÆy Ü
+ÆÆá à
$numÆÆâ ä
;ÆÆä ã
m_textElementType
±± -
=
±±. /!
TMP_TextElementType
±±0 C
.
±±C D
	Character
±±D M
;
±±M N$
m_currentMaterialIndex
≤≤ 2
=
≤≤3 4 
prev_MaterialIndex
≤≤5 G
;
≤≤G H
spriteCount
¥¥ '
+=
¥¥( *
$num
¥¥+ ,
;
¥¥, -#
m_totalCharacterCount
µµ 1
+=
µµ2 4
$num
µµ5 6
;
µµ6 7
}
∂∂ 
continue
∏∏  
;
∏∏  !
}
ππ 
}
∫∫ 
bool
ΩΩ (
isUsingAlternativeTypeface
ΩΩ /
=
ΩΩ0 1
false
ΩΩ2 7
;
ΩΩ7 8
bool
ææ 2
$isUsingFallbackOrAlternativeTypeface
ææ 9
=
ææ: ;
false
ææ< A
;
ææA B
TMP_FontAsset
¿¿ 
prev_fontAsset
¿¿ ,
=
¿¿- . 
m_currentFontAsset
¿¿/ A
;
¿¿A B
Material
¡¡ 
prev_material
¡¡ &
=
¡¡' (
m_currentMaterial
¡¡) :
;
¡¡: ;
int
¬¬  
prev_materialIndex
¬¬ &
=
¬¬' ($
m_currentMaterialIndex
¬¬) ?
;
¬¬? @
if
∆∆ 
(
∆∆ 
m_textElementType
∆∆ %
==
∆∆& (!
TMP_TextElementType
∆∆) <
.
∆∆< =
	Character
∆∆= F
)
∆∆F G
{
«« 
if
»» 
(
»» 
(
»» !
m_FontStyleInternal
»» ,
&
»»- .

FontStyles
»»/ 9
.
»»9 :
	UpperCase
»»: C
)
»»C D
==
»»E G

FontStyles
»»H R
.
»»R S
	UpperCase
»»S \
)
»»\ ]
{
…… 
if
ÀÀ 
(
ÀÀ 
char
ÀÀ  
.
ÀÀ  !
IsLower
ÀÀ! (
(
ÀÀ( )
(
ÀÀ) *
char
ÀÀ* .
)
ÀÀ. /
unicode
ÀÀ/ 6
)
ÀÀ6 7
)
ÀÀ7 8
unicode
ÃÃ #
=
ÃÃ$ %
char
ÃÃ& *
.
ÃÃ* +
ToUpper
ÃÃ+ 2
(
ÃÃ2 3
(
ÃÃ3 4
char
ÃÃ4 8
)
ÃÃ8 9
unicode
ÃÃ9 @
)
ÃÃ@ A
;
ÃÃA B
}
ŒŒ 
else
œœ 
if
œœ 
(
œœ 
(
œœ !
m_FontStyleInternal
œœ 1
&
œœ2 3

FontStyles
œœ4 >
.
œœ> ?
	LowerCase
œœ? H
)
œœH I
==
œœJ L

FontStyles
œœM W
.
œœW X
	LowerCase
œœX a
)
œœa b
{
–– 
if
““ 
(
““ 
char
““  
.
““  !
IsUpper
““! (
(
““( )
(
““) *
char
““* .
)
““. /
unicode
““/ 6
)
““6 7
)
““7 8
unicode
”” #
=
””$ %
char
””& *
.
””* +
ToLower
””+ 2
(
””2 3
(
””3 4
char
””4 8
)
””8 9
unicode
””9 @
)
””@ A
;
””A B
}
‘‘ 
else
’’ 
if
’’ 
(
’’ 
(
’’ !
m_FontStyleInternal
’’ 1
&
’’2 3

FontStyles
’’4 >
.
’’> ?
	SmallCaps
’’? H
)
’’H I
==
’’J L

FontStyles
’’M W
.
’’W X
	SmallCaps
’’X a
)
’’a b
{
÷÷ 
if
ÿÿ 
(
ÿÿ 
char
ÿÿ  
.
ÿÿ  !
IsLower
ÿÿ! (
(
ÿÿ( )
(
ÿÿ) *
char
ÿÿ* .
)
ÿÿ. /
unicode
ÿÿ/ 6
)
ÿÿ6 7
)
ÿÿ7 8
unicode
ŸŸ #
=
ŸŸ$ %
char
ŸŸ& *
.
ŸŸ* +
ToUpper
ŸŸ+ 2
(
ŸŸ2 3
(
ŸŸ3 4
char
ŸŸ4 8
)
ŸŸ8 9
unicode
ŸŸ9 @
)
ŸŸ@ A
;
ŸŸA B
}
⁄⁄ 
}
€€ 
TMP_TextElement
‡‡ 
	character
‡‡  )
=
‡‡* +
GetTextElement
‡‡, :
(
‡‡: ;
(
‡‡; <
uint
‡‡< @
)
‡‡@ A
unicode
‡‡A H
,
‡‡H I 
m_currentFontAsset
‡‡J \
,
‡‡\ ]!
m_FontStyleInternal
‡‡^ q
,
‡‡q r#
m_FontWeightInternal‡‡s á
,‡‡á à
out‡‡â å*
isUsingAlternativeTypeface‡‡ç ß
)‡‡ß ®
;‡‡® ©
if
ÙÙ 
(
ÙÙ 
	character
ÙÙ 
==
ÙÙ  
null
ÙÙ! %
)
ÙÙ% &
{
ıı 
int
˜˜ 
srcGlyph
˜˜  
=
˜˜! "
unicode
˜˜# *
;
˜˜* +
unicode
˙˙ 
=
˙˙ 
unicodeChars
˙˙ *
[
˙˙* +
i
˙˙+ ,
]
˙˙, -
.
˙˙- .
unicode
˙˙. 5
=
˙˙6 7
TMP_Settings
˙˙8 D
.
˙˙D E#
missingGlyphCharacter
˙˙E Z
==
˙˙[ ]
$num
˙˙^ _
?
˙˙` a
$num
˙˙b f
:
˙˙g h
TMP_Settings
˙˙i u
.
˙˙u v$
missingGlyphCharacter˙˙v ã
;˙˙ã å
	character
˝˝ 
=
˝˝ $
TMP_FontAssetUtilities
˝˝  6
.
˝˝6 7'
GetCharacterFromFontAsset
˝˝7 P
(
˝˝P Q
(
˝˝Q R
uint
˝˝R V
)
˝˝V W
unicode
˝˝W ^
,
˝˝^ _ 
m_currentFontAsset
˝˝` r
,
˝˝r s
true
˝˝t x
,
˝˝x y"
m_FontStyleInternal˝˝z ç
,˝˝ç é$
m_FontWeightInternal˝˝è £
,˝˝£ §
out˝˝• ®*
isUsingAlternativeTypeface˝˝© √
)˝˝√ ƒ
;˝˝ƒ ≈
if
ˇˇ 
(
ˇˇ 
	character
ˇˇ !
==
ˇˇ" $
null
ˇˇ% )
)
ˇˇ) *
{
Ä	Ä	 
if
Ç	Ç	 
(
Ç	Ç	 
TMP_Settings
Ç	Ç	 (
.
Ç	Ç	( ) 
fallbackFontAssets
Ç	Ç	) ;
!=
Ç	Ç	< >
null
Ç	Ç	? C
&&
Ç	Ç	D F
TMP_Settings
Ç	Ç	G S
.
Ç	Ç	S T 
fallbackFontAssets
Ç	Ç	T f
.
Ç	Ç	f g
Count
Ç	Ç	g l
>
Ç	Ç	m n
$num
Ç	Ç	o p
)
Ç	Ç	p q
	character
É	É	 %
=
É	É	& '$
TMP_FontAssetUtilities
É	É	( >
.
É	É	> ?(
GetCharacterFromFontAssets
É	É	? Y
(
É	É	Y Z
(
É	É	Z [
uint
É	É	[ _
)
É	É	_ `
unicode
É	É	` g
,
É	É	g h 
m_currentFontAsset
É	É	i {
,
É	É	{ |
TMP_SettingsÉ	É	} â
.É	É	â ä"
fallbackFontAssetsÉ	É	ä ú
,É	É	ú ù
trueÉ	É	û ¢
,É	É	¢ £#
m_FontStyleInternalÉ	É	§ ∑
,É	É	∑ ∏$
m_FontWeightInternalÉ	É	π Õ
,É	É	Õ Œ
outÉ	É	œ “*
isUsingAlternativeTypefaceÉ	É	” Ì
)É	É	Ì Ó
;É	É	Ó Ô
}
Ñ	Ñ	 
if
Ü	Ü	 
(
Ü	Ü	 
	character
Ü	Ü	 !
==
Ü	Ü	" $
null
Ü	Ü	% )
)
Ü	Ü	) *
{
á	á	 
if
â	â	 
(
â	â	 
TMP_Settings
â	â	 (
.
â	â	( )
defaultFontAsset
â	â	) 9
!=
â	â	: <
null
â	â	= A
)
â	â	A B
	character
ä	ä	 %
=
ä	ä	& '$
TMP_FontAssetUtilities
ä	ä	( >
.
ä	ä	> ?'
GetCharacterFromFontAsset
ä	ä	? X
(
ä	ä	X Y
(
ä	ä	Y Z
uint
ä	ä	Z ^
)
ä	ä	^ _
unicode
ä	ä	_ f
,
ä	ä	f g
TMP_Settings
ä	ä	h t
.
ä	ä	t u
defaultFontAssetä	ä	u Ö
,ä	ä	Ö Ü
trueä	ä	á ã
,ä	ä	ã å#
m_FontStyleInternalä	ä	ç †
,ä	ä	† °$
m_FontWeightInternalä	ä	¢ ∂
,ä	ä	∂ ∑
outä	ä	∏ ª*
isUsingAlternativeTypefaceä	ä	º ÷
)ä	ä	÷ ◊
;ä	ä	◊ ÿ
}
ã	ã	 
if
ç	ç	 
(
ç	ç	 
	character
ç	ç	 !
==
ç	ç	" $
null
ç	ç	% )
)
ç	ç	) *
{
é	é	 
unicode
ê	ê	 
=
ê	ê	  !
unicodeChars
ê	ê	" .
[
ê	ê	. /
i
ê	ê	/ 0
]
ê	ê	0 1
.
ê	ê	1 2
unicode
ê	ê	2 9
=
ê	ê	: ;
$num
ê	ê	< >
;
ê	ê	> ?
	character
ë	ë	 !
=
ë	ë	" #$
TMP_FontAssetUtilities
ë	ë	$ :
.
ë	ë	: ;'
GetCharacterFromFontAsset
ë	ë	; T
(
ë	ë	T U
(
ë	ë	U V
uint
ë	ë	V Z
)
ë	ë	Z [
unicode
ë	ë	[ b
,
ë	ë	b c 
m_currentFontAsset
ë	ë	d v
,
ë	ë	v w
true
ë	ë	x |
,
ë	ë	| }"
m_FontStyleInternalë	ë	~ ë
,ë	ë	ë í$
m_FontWeightInternalë	ë	ì ß
,ë	ë	ß ®
outë	ë	© ¨*
isUsingAlternativeTypefaceë	ë	≠ «
)ë	ë	« »
;ë	ë	» …
}
í	í	 
if
î	î	 
(
î	î	 
	character
î	î	 !
==
î	î	" $
null
î	î	% )
)
î	î	) *
{
ï	ï	 
unicode
ó	ó	 
=
ó	ó	  !
unicodeChars
ó	ó	" .
[
ó	ó	. /
i
ó	ó	/ 0
]
ó	ó	0 1
.
ó	ó	1 2
unicode
ó	ó	2 9
=
ó	ó	: ;
$num
ó	ó	< @
;
ó	ó	@ A
	character
ò	ò	 !
=
ò	ò	" #$
TMP_FontAssetUtilities
ò	ò	$ :
.
ò	ò	: ;'
GetCharacterFromFontAsset
ò	ò	; T
(
ò	ò	T U
(
ò	ò	U V
uint
ò	ò	V Z
)
ò	ò	Z [
unicode
ò	ò	[ b
,
ò	ò	b c 
m_currentFontAsset
ò	ò	d v
,
ò	ò	v w
true
ò	ò	x |
,
ò	ò	| }"
m_FontStyleInternalò	ò	~ ë
,ò	ò	ë í$
m_FontWeightInternalò	ò	ì ß
,ò	ò	ß ®
outò	ò	© ¨*
isUsingAlternativeTypefaceò	ò	≠ «
)ò	ò	« »
;ò	ò	» …
}
ô	ô	 
if
õ	õ	 
(
õ	õ	 
!
õ	õ	 
TMP_Settings
õ	õ	 %
.
õ	õ	% &
warningsDisabled
õ	õ	& 6
)
õ	õ	6 7
{
ú	ú	 
string
ù	ù	 
formattedWarning
ù	ù	 /
=
ù	ù	0 1
srcGlyph
ù	ù	2 :
>
ù	ù	; <
$num
ù	ù	= C
?
û	û	 
string
û	û	 $
.
û	û	$ %
Format
û	û	% +
(
û	û	+ ,
$strû	û	, ﬂ
,û	û	ﬂ ‡
srcGlyphû	û	· È
,û	û	È Í
m_fontAssetû	û	Î ˆ
.û	û	ˆ ˜
nameû	û	˜ ˚
,û	û	˚ ¸
	characterû	û	˝ Ü
.û	û	Ü á
unicodeû	û	á é
,û	û	é è
thisû	û	ê î
.û	û	î ï
nameû	û	ï ô
)û	û	ô ö
:
ü	ü	 
string
ü	ü	 $
.
ü	ü	$ %
Format
ü	ü	% +
(
ü	ü	+ ,
$strü	ü	, ﬂ
,ü	ü	ﬂ ‡
srcGlyphü	ü	· È
,ü	ü	È Í
m_fontAssetü	ü	Î ˆ
.ü	ü	ˆ ˜
nameü	ü	˜ ˚
,ü	ü	˚ ¸
	characterü	ü	˝ Ü
.ü	ü	Ü á
unicodeü	ü	á é
,ü	ü	é è
thisü	ü	ê î
.ü	ü	î ï
nameü	ü	ï ô
)ü	ü	ô ö
;ü	ü	ö õ
Debug
°	°	 
.
°	°	 

LogWarning
°	°	 (
(
°	°	( )
formattedWarning
°	°	) 9
,
°	°	9 :
this
°	°	; ?
)
°	°	? @
;
°	°	@ A
}
¢	¢	 
}
£	£	 
if
•	•	 
(
•	•	 
	character
•	•	 
.
•	•	 
elementType
•	•	 )
==
•	•	* ,
TextElementType
•	•	- <
.
•	•	< =
	Character
•	•	= F
)
•	•	F G
{
¶	¶	 
if
ß	ß	 
(
ß	ß	 
	character
ß	ß	 !
.
ß	ß	! "
	textAsset
ß	ß	" +
.
ß	ß	+ ,

instanceID
ß	ß	, 6
!=
ß	ß	7 9 
m_currentFontAsset
ß	ß	: L
.
ß	ß	L M

instanceID
ß	ß	M W
)
ß	ß	W X
{
®	®	 2
$isUsingFallbackOrAlternativeTypeface
©	©	 <
=
©	©	= >
true
©	©	? C
;
©	©	C D 
m_currentFontAsset
™	™	 *
=
™	™	+ ,
	character
™	™	- 6
.
™	™	6 7
	textAsset
™	™	7 @
as
™	™	A C
TMP_FontAsset
™	™	D Q
;
™	™	Q R
}
¨	¨	 
}
≠	≠	 

m_textInfo
±	±	 
.
±	±	 
characterInfo
±	±	 (
[
±	±	( )#
m_totalCharacterCount
±	±	) >
]
±	±	> ?
.
±	±	? @
elementType
±	±	@ K
=
±	±	L M!
TMP_TextElementType
±	±	N a
.
±	±	a b
	Character
±	±	b k
;
±	±	k l

m_textInfo
≤	≤	 
.
≤	≤	 
characterInfo
≤	≤	 (
[
≤	≤	( )#
m_totalCharacterCount
≤	≤	) >
]
≤	≤	> ?
.
≤	≤	? @
textElement
≤	≤	@ K
=
≤	≤	L M
	character
≤	≤	N W
;
≤	≤	W X

m_textInfo
≥	≥	 
.
≥	≥	 
characterInfo
≥	≥	 (
[
≥	≥	( )#
m_totalCharacterCount
≥	≥	) >
]
≥	≥	> ?
.
≥	≥	? @&
isUsingAlternateTypeface
≥	≥	@ X
=
≥	≥	Y Z(
isUsingAlternativeTypeface
≥	≥	[ u
;
≥	≥	u v

m_textInfo
¥	¥	 
.
¥	¥	 
characterInfo
¥	¥	 (
[
¥	¥	( )#
m_totalCharacterCount
¥	¥	) >
]
¥	¥	> ?
.
¥	¥	? @
	character
¥	¥	@ I
=
¥	¥	J K
(
¥	¥	L M
char
¥	¥	M Q
)
¥	¥	Q R
unicode
¥	¥	R Y
;
¥	¥	Y Z

m_textInfo
µ	µ	 
.
µ	µ	 
characterInfo
µ	µ	 (
[
µ	µ	( )#
m_totalCharacterCount
µ	µ	) >
]
µ	µ	> ?
.
µ	µ	? @
index
µ	µ	@ E
=
µ	µ	F G
unicodeChars
µ	µ	H T
[
µ	µ	T U
i
µ	µ	U V
]
µ	µ	V W
.
µ	µ	W X
stringIndex
µ	µ	X c
;
µ	µ	c d

m_textInfo
∂	∂	 
.
∂	∂	 
characterInfo
∂	∂	 (
[
∂	∂	( )#
m_totalCharacterCount
∂	∂	) >
]
∂	∂	> ?
.
∂	∂	? @
stringLength
∂	∂	@ L
=
∂	∂	M N
unicodeChars
∂	∂	O [
[
∂	∂	[ \
i
∂	∂	\ ]
]
∂	∂	] ^
.
∂	∂	^ _
length
∂	∂	_ e
;
∂	∂	e f

m_textInfo
∑	∑	 
.
∑	∑	 
characterInfo
∑	∑	 (
[
∑	∑	( )#
m_totalCharacterCount
∑	∑	) >
]
∑	∑	> ?
.
∑	∑	? @
	fontAsset
∑	∑	@ I
=
∑	∑	J K 
m_currentFontAsset
∑	∑	L ^
;
∑	∑	^ _
if
∫	∫	 
(
∫	∫	 
	character
∫	∫	 
.
∫	∫	 
elementType
∫	∫	 )
==
∫	∫	* ,
TextElementType
∫	∫	- <
.
∫	∫	< =
Sprite
∫	∫	= C
)
∫	∫	C D
{
ª	ª	 
TMP_SpriteAsset
º	º	 #
spriteAssetRef
º	º	$ 2
=
º	º	3 4
	character
º	º	5 >
.
º	º	> ?
	textAsset
º	º	? H
as
º	º	I K
TMP_SpriteAsset
º	º	L [
;
º	º	[ \$
m_currentMaterialIndex
Ω	Ω	 *
=
Ω	Ω	+ ,
MaterialReference
Ω	Ω	- >
.
Ω	Ω	> ?"
AddMaterialReference
Ω	Ω	? S
(
Ω	Ω	S T
spriteAssetRef
Ω	Ω	T b
.
Ω	Ω	b c
material
Ω	Ω	c k
,
Ω	Ω	k l
spriteAssetRef
Ω	Ω	m {
,
Ω	Ω	{ |#
m_materialReferencesΩ	Ω	} ë
,Ω	Ω	ë í.
m_materialReferenceIndexLookupΩ	Ω	ì ±
)Ω	Ω	± ≤
;Ω	Ω	≤ ≥"
m_materialReferences
æ	æ	 (
[
æ	æ	( )$
m_currentMaterialIndex
æ	æ	) ?
]
æ	æ	? @
.
æ	æ	@ A
referenceCount
æ	æ	A O
+=
æ	æ	P R
$num
æ	æ	S T
;
æ	æ	T U

m_textInfo
¿	¿	 
.
¿	¿	 
characterInfo
¿	¿	 ,
[
¿	¿	, -#
m_totalCharacterCount
¿	¿	- B
]
¿	¿	B C
.
¿	¿	C D
elementType
¿	¿	D O
=
¿	¿	P Q!
TMP_TextElementType
¿	¿	R e
.
¿	¿	e f
Sprite
¿	¿	f l
;
¿	¿	l m

m_textInfo
¡	¡	 
.
¡	¡	 
characterInfo
¡	¡	 ,
[
¡	¡	, -#
m_totalCharacterCount
¡	¡	- B
]
¡	¡	B C
.
¡	¡	C D$
materialReferenceIndex
¡	¡	D Z
=
¡	¡	[ \$
m_currentMaterialIndex
¡	¡	] s
;
¡	¡	s t

m_textInfo
¬	¬	 
.
¬	¬	 
characterInfo
¬	¬	 ,
[
¬	¬	, -#
m_totalCharacterCount
¬	¬	- B
]
¬	¬	B C
.
¬	¬	C D
spriteAsset
¬	¬	D O
=
¬	¬	P Q
spriteAssetRef
¬	¬	R `
;
¬	¬	` a

m_textInfo
√	√	 
.
√	√	 
characterInfo
√	√	 ,
[
√	√	, -#
m_totalCharacterCount
√	√	- B
]
√	√	B C
.
√	√	C D
spriteIndex
√	√	D O
=
√	√	P Q
(
√	√	R S
int
√	√	S V
)
√	√	V W
	character
√	√	W `
.
√	√	` a

glyphIndex
√	√	a k
;
√	√	k l
m_textElementType
∆	∆	 %
=
∆	∆	& '!
TMP_TextElementType
∆	∆	( ;
.
∆	∆	; <
	Character
∆	∆	< E
;
∆	∆	E F$
m_currentMaterialIndex
«	«	 *
=
«	«	+ , 
prev_materialIndex
«	«	- ?
;
«	«	? @
spriteCount
…	…	 
+=
…	…	  "
$num
…	…	# $
;
…	…	$ %#
m_totalCharacterCount
 	 	 )
+=
 	 	* ,
$num
 	 	- .
;
 	 	. /
continue
Ã	Ã	 
;
Ã	Ã	 
}
Õ	Õ	 
if
œ	œ	 
(
œ	œ	 2
$isUsingFallbackOrAlternativeTypeface
œ	œ	 8
&&
œ	œ	9 ; 
m_currentFontAsset
œ	œ	< N
.
œ	œ	N O

instanceID
œ	œ	O Y
!=
œ	œ	Z \
m_fontAsset
œ	œ	] h
.
œ	œ	h i

instanceID
œ	œ	i s
)
œ	œ	s t
{
–	–	 
if
“	“	 
(
“	“	 
TMP_Settings
“	“	 $
.
“	“	$ %!
matchMaterialPreset
“	“	% 8
)
“	“	8 9
m_currentMaterial
”	”	 )
=
”	”	* +!
TMP_MaterialManager
”	”	, ?
.
”	”	? @!
GetFallbackMaterial
”	”	@ S
(
”	”	S T
m_currentMaterial
”	”	T e
,
”	”	e f 
m_currentFontAsset
”	”	g y
.
”	”	y z
material”	”	z Ç
)”	”	Ç É
;”	”	É Ñ
else
‘	‘	 
m_currentMaterial
’	’	 )
=
’	’	* + 
m_currentFontAsset
’	’	, >
.
’	’	> ?
material
’	’	? G
;
’	’	G H$
m_currentMaterialIndex
◊	◊	 *
=
◊	◊	+ ,
MaterialReference
◊	◊	- >
.
◊	◊	> ?"
AddMaterialReference
◊	◊	? S
(
◊	◊	S T
m_currentMaterial
◊	◊	T e
,
◊	◊	e f 
m_currentFontAsset
◊	◊	g y
,
◊	◊	y z#
m_materialReferences◊	◊	{ è
,◊	◊	è ê.
m_materialReferenceIndexLookup◊	◊	ë Ø
)◊	◊	Ø ∞
;◊	◊	∞ ±
}
ÿ	ÿ	 
if
€	€	 
(
€	€	 
	character
€	€	 
!=
€	€	  
null
€	€	! %
&&
€	€	& (
	character
€	€	) 2
.
€	€	2 3
glyph
€	€	3 8
.
€	€	8 9

atlasIndex
€	€	9 C
>
€	€	D E
$num
€	€	F G
)
€	€	G H
{
‹	‹	 
m_currentMaterial
›	›	 %
=
›	›	& '!
TMP_MaterialManager
›	›	( ;
.
›	›	; <!
GetFallbackMaterial
›	›	< O
(
›	›	O P 
m_currentFontAsset
›	›	P b
,
›	›	b c
m_currentMaterial
›	›	d u
,
›	›	u v
	character›	›	w Ä
.›	›	Ä Å
glyph›	›	Å Ü
.›	›	Ü á

atlasIndex›	›	á ë
)›	›	ë í
;›	›	í ì$
m_currentMaterialIndex
ﬂ	ﬂ	 *
=
ﬂ	ﬂ	+ ,
MaterialReference
ﬂ	ﬂ	- >
.
ﬂ	ﬂ	> ?"
AddMaterialReference
ﬂ	ﬂ	? S
(
ﬂ	ﬂ	S T
m_currentMaterial
ﬂ	ﬂ	T e
,
ﬂ	ﬂ	e f 
m_currentFontAsset
ﬂ	ﬂ	g y
,
ﬂ	ﬂ	y z#
m_materialReferencesﬂ	ﬂ	{ è
,ﬂ	ﬂ	è ê.
m_materialReferenceIndexLookupﬂ	ﬂ	ë Ø
)ﬂ	ﬂ	Ø ∞
;ﬂ	ﬂ	∞ ±2
$isUsingFallbackOrAlternativeTypeface
·	·	 8
=
·	·	9 :
true
·	·	; ?
;
·	·	? @
}
‚	‚	 
if
‰	‰	 
(
‰	‰	 
!
‰	‰	 
char
‰	‰	 
.
‰	‰	 
IsWhiteSpace
‰	‰	 &
(
‰	‰	& '
(
‰	‰	' (
char
‰	‰	( ,
)
‰	‰	, -
unicode
‰	‰	- 4
)
‰	‰	4 5
&&
‰	‰	6 8
unicode
‰	‰	9 @
!=
‰	‰	A C
$num
‰	‰	D J
)
‰	‰	J K
{
Â	Â	 
if
Á	Á	 
(
Á	Á	 "
m_materialReferences
Á	Á	 ,
[
Á	Á	, -$
m_currentMaterialIndex
Á	Á	- C
]
Á	Á	C D
.
Á	Á	D E
referenceCount
Á	Á	E S
<
Á	Á	T U
$num
Á	Á	V [
)
Á	Á	[ \"
m_materialReferences
Ë	Ë	 ,
[
Ë	Ë	, -$
m_currentMaterialIndex
Ë	Ë	- C
]
Ë	Ë	C D
.
Ë	Ë	D E
referenceCount
Ë	Ë	E S
+=
Ë	Ë	T V
$num
Ë	Ë	W X
;
Ë	Ë	X Y
else
È	È	 
{
Í	Í	 $
m_currentMaterialIndex
Î	Î	 .
=
Î	Î	/ 0
MaterialReference
Î	Î	1 B
.
Î	Î	B C"
AddMaterialReference
Î	Î	C W
(
Î	Î	W X
new
Î	Î	X [
Material
Î	Î	\ d
(
Î	Î	d e
m_currentMaterial
Î	Î	e v
)
Î	Î	v w
,
Î	Î	w x!
m_currentFontAssetÎ	Î	y ã
,Î	Î	ã å$
m_materialReferencesÎ	Î	ç °
,Î	Î	° ¢.
m_materialReferenceIndexLookupÎ	Î	£ ¡
)Î	Î	¡ ¬
;Î	Î	¬ √"
m_materialReferences
Ï	Ï	 ,
[
Ï	Ï	, -$
m_currentMaterialIndex
Ï	Ï	- C
]
Ï	Ï	C D
.
Ï	Ï	D E
referenceCount
Ï	Ï	E S
+=
Ï	Ï	T V
$num
Ï	Ï	W X
;
Ï	Ï	X Y
}
Ì	Ì	 
}
Ó	Ó	 

m_textInfo
		 
.
		 
characterInfo
		 (
[
		( )#
m_totalCharacterCount
		) >
]
		> ?
.
		? @
material
		@ H
=
		I J
m_currentMaterial
		K \
;
		\ ]

m_textInfo
Ò	Ò	 
.
Ò	Ò	 
characterInfo
Ò	Ò	 (
[
Ò	Ò	( )#
m_totalCharacterCount
Ò	Ò	) >
]
Ò	Ò	> ?
.
Ò	Ò	? @$
materialReferenceIndex
Ò	Ò	@ V
=
Ò	Ò	W X$
m_currentMaterialIndex
Ò	Ò	Y o
;
Ò	Ò	o p"
m_materialReferences
Ú	Ú	 $
[
Ú	Ú	$ %$
m_currentMaterialIndex
Ú	Ú	% ;
]
Ú	Ú	; <
.
Ú	Ú	< = 
isFallbackMaterial
Ú	Ú	= O
=
Ú	Ú	P Q2
$isUsingFallbackOrAlternativeTypeface
Ú	Ú	R v
;
Ú	Ú	v w
if
ı	ı	 
(
ı	ı	 2
$isUsingFallbackOrAlternativeTypeface
ı	ı	 8
)
ı	ı	8 9
{
ˆ	ˆ	 "
m_materialReferences
˜	˜	 (
[
˜	˜	( )$
m_currentMaterialIndex
˜	˜	) ?
]
˜	˜	? @
.
˜	˜	@ A
fallbackMaterial
˜	˜	A Q
=
˜	˜	R S
prev_material
˜	˜	T a
;
˜	˜	a b 
m_currentFontAsset
¯	¯	 &
=
¯	¯	' (
prev_fontAsset
¯	¯	) 7
;
¯	¯	7 8
m_currentMaterial
˘	˘	 %
=
˘	˘	& '
prev_material
˘	˘	( 5
;
˘	˘	5 6$
m_currentMaterialIndex
˙	˙	 *
=
˙	˙	+ , 
prev_materialIndex
˙	˙	- ?
;
˙	˙	? @
}
˚	˚	 #
m_totalCharacterCount
˝	˝	 %
+=
˝	˝	& (
$num
˝	˝	) *
;
˝	˝	* +
}
˛	˛	 
if
Å
Å
 
(
Å
Å
 ,
m_isCalculatingPreferredValues
Å
Å
 .
)
Å
Å
. /
{
Ç
Ç
 ,
m_isCalculatingPreferredValues
É
É
 .
=
É
É
/ 0
false
É
É
1 6
;
É
É
6 7&
m_isInputParsingRequired
Ñ
Ñ
 (
=
Ñ
Ñ
) *
true
Ñ
Ñ
+ /
;
Ñ
Ñ
/ 0
return
Ö
Ö
 #
m_totalCharacterCount
Ö
Ö
 ,
;
Ö
Ö
, -
}
Ü
Ü
 

m_textInfo
â
â
 
.
â
â
 
spriteCount
â
â
 "
=
â
â
# $
spriteCount
â
â
% 0
;
â
â
0 1
int
ä
ä
 
materialCount
ä
ä
 
=
ä
ä
 

m_textInfo
ä
ä
  *
.
ä
ä
* +
materialCount
ä
ä
+ 8
=
ä
ä
9 :,
m_materialReferenceIndexLookup
ä
ä
; Y
.
ä
ä
Y Z
Count
ä
ä
Z _
;
ä
ä
_ `
if
ç
ç
 
(
ç
ç
 
materialCount
ç
ç
 
>
ç
ç
 

m_textInfo
ç
ç
  *
.
ç
ç
* +
meshInfo
ç
ç
+ 3
.
ç
ç
3 4
Length
ç
ç
4 :
)
ç
ç
: ;
TMP_TextInfo
é
é
 
.
é
é
 
Resize
é
é
 #
(
é
é
# $
ref
é
é
$ '

m_textInfo
é
é
( 2
.
é
é
2 3
meshInfo
é
é
3 ;
,
é
é
; <
materialCount
é
é
= J
,
é
é
J K
false
é
é
L Q
)
é
é
Q R
;
é
é
R S
if
ë
ë
 
(
ë
ë
 
materialCount
ë
ë
 
>
ë
ë
 
m_subTextObjects
ë
ë
  0
.
ë
ë
0 1
Length
ë
ë
1 7
)
ë
ë
7 8
TMP_TextInfo
í
í
 
.
í
í
 
Resize
í
í
 #
(
í
í
# $
ref
í
í
$ '
m_subTextObjects
í
í
( 8
,
í
í
8 9
Mathf
í
í
: ?
.
í
í
? @
NextPowerOfTwo
í
í
@ N
(
í
í
N O
materialCount
í
í
O \
+
í
í
] ^
$num
í
í
_ `
)
í
í
` a
)
í
í
a b
;
í
í
b c
if
ï
ï
 
(
ï
ï
 

m_textInfo
ï
ï
 
.
ï
ï
 
characterInfo
ï
ï
 (
.
ï
ï
( )
Length
ï
ï
) /
-
ï
ï
0 1#
m_totalCharacterCount
ï
ï
2 G
>
ï
ï
H I
$num
ï
ï
J M
)
ï
ï
M N
TMP_TextInfo
ñ
ñ
 
.
ñ
ñ
 
Resize
ñ
ñ
 #
(
ñ
ñ
# $
ref
ñ
ñ
$ '

m_textInfo
ñ
ñ
( 2
.
ñ
ñ
2 3
characterInfo
ñ
ñ
3 @
,
ñ
ñ
@ A
Mathf
ñ
ñ
B G
.
ñ
ñ
G H
Max
ñ
ñ
H K
(
ñ
ñ
K L#
m_totalCharacterCount
ñ
ñ
L a
+
ñ
ñ
b c
$num
ñ
ñ
d e
,
ñ
ñ
e f
$num
ñ
ñ
g j
)
ñ
ñ
j k
,
ñ
ñ
k l
true
ñ
ñ
m q
)
ñ
ñ
q r
;
ñ
ñ
r s
for
ö
ö
 
(
ö
ö
 
int
ö
ö
 
i
ö
ö
 
=
ö
ö
 
$num
ö
ö
 
;
ö
ö
 
i
ö
ö
 
<
ö
ö
 
materialCount
ö
ö
  -
;
ö
ö
- .
i
ö
ö
/ 0
++
ö
ö
0 2
)
ö
ö
2 3
{
õ
õ
 
if
ù
ù
 
(
ù
ù
 
i
ù
ù
 
>
ù
ù
 
$num
ù
ù
 
)
ù
ù
 
{
û
û
 
if
ü
ü
 
(
ü
ü
 
m_subTextObjects
ü
ü
 (
[
ü
ü
( )
i
ü
ü
) *
]
ü
ü
* +
==
ü
ü
, .
null
ü
ü
/ 3
)
ü
ü
3 4
{
†
†
 
m_subTextObjects
°
°
 (
[
°
°
( )
i
°
°
) *
]
°
°
* +
=
°
°
, -
TMP_SubMesh
°
°
. 9
.
°
°
9 :
AddSubTextObject
°
°
: J
(
°
°
J K
this
°
°
K O
,
°
°
O P"
m_materialReferences
°
°
Q e
[
°
°
e f
i
°
°
f g
]
°
°
g h
)
°
°
h i
;
°
°
i j

m_textInfo
§
§
 "
.
§
§
" #
meshInfo
§
§
# +
[
§
§
+ ,
i
§
§
, -
]
§
§
- .
.
§
§
. /
vertices
§
§
/ 7
=
§
§
8 9
null
§
§
: >
;
§
§
> ?
}
•
•
 
if
™
™
 
(
™
™
 
m_subTextObjects
™
™
 (
[
™
™
( )
i
™
™
) *
]
™
™
* +
.
™
™
+ ,
sharedMaterial
™
™
, :
==
™
™
; =
null
™
™
> B
||
™
™
C E
m_subTextObjects
™
™
F V
[
™
™
V W
i
™
™
W X
]
™
™
X Y
.
™
™
Y Z
sharedMaterial
™
™
Z h
.
™
™
h i
GetInstanceID
™
™
i v
(
™
™
v w
)
™
™
w x
!=
™
™
y {#
m_materialReferences™
™
| ê
[™
™
ê ë
i™
™
ë í
]™
™
í ì
.™
™
ì î
material™
™
î ú
.™
™
ú ù
GetInstanceID™
™
ù ™
(™
™
™ ´
)™
™
´ ¨
)™
™
¨ ≠
{
´
´
 
m_subTextObjects
¨
¨
 (
[
¨
¨
( )
i
¨
¨
) *
]
¨
¨
* +
.
¨
¨
+ ,
sharedMaterial
¨
¨
, :
=
¨
¨
; <"
m_materialReferences
¨
¨
= Q
[
¨
¨
Q R
i
¨
¨
R S
]
¨
¨
S T
.
¨
¨
T U
material
¨
¨
U ]
;
¨
¨
] ^
m_subTextObjects
≠
≠
 (
[
≠
≠
( )
i
≠
≠
) *
]
≠
≠
* +
.
≠
≠
+ ,
	fontAsset
≠
≠
, 5
=
≠
≠
6 7"
m_materialReferences
≠
≠
8 L
[
≠
≠
L M
i
≠
≠
M N
]
≠
≠
N O
.
≠
≠
O P
	fontAsset
≠
≠
P Y
;
≠
≠
Y Z
m_subTextObjects
Æ
Æ
 (
[
Æ
Æ
( )
i
Æ
Æ
) *
]
Æ
Æ
* +
.
Æ
Æ
+ ,
spriteAsset
Æ
Æ
, 7
=
Æ
Æ
8 9"
m_materialReferences
Æ
Æ
: N
[
Æ
Æ
N O
i
Æ
Æ
O P
]
Æ
Æ
P Q
.
Æ
Æ
Q R
spriteAsset
Æ
Æ
R ]
;
Æ
Æ
] ^
}
Ø
Ø
 
if
≤
≤
 
(
≤
≤
 "
m_materialReferences
≤
≤
 ,
[
≤
≤
, -
i
≤
≤
- .
]
≤
≤
. /
.
≤
≤
/ 0 
isFallbackMaterial
≤
≤
0 B
)
≤
≤
B C
{
≥
≥
 
m_subTextObjects
¥
¥
 (
[
¥
¥
( )
i
¥
¥
) *
]
¥
¥
* +
.
¥
¥
+ ,
fallbackMaterial
¥
¥
, <
=
¥
¥
= >"
m_materialReferences
¥
¥
? S
[
¥
¥
S T
i
¥
¥
T U
]
¥
¥
U V
.
¥
¥
V W
material
¥
¥
W _
;
¥
¥
_ `
m_subTextObjects
µ
µ
 (
[
µ
µ
( )
i
µ
µ
) *
]
µ
µ
* +
.
µ
µ
+ ,$
fallbackSourceMaterial
µ
µ
, B
=
µ
µ
C D"
m_materialReferences
µ
µ
E Y
[
µ
µ
Y Z
i
µ
µ
Z [
]
µ
µ
[ \
.
µ
µ
\ ]
fallbackMaterial
µ
µ
] m
;
µ
µ
m n
}
∂
∂
 
}
∑
∑
 
int
π
π
 
referenceCount
π
π
 "
=
π
π
# $"
m_materialReferences
π
π
% 9
[
π
π
9 :
i
π
π
: ;
]
π
π
; <
.
π
π
< =
referenceCount
π
π
= K
;
π
π
K L
if
º
º
 
(
º
º
 

m_textInfo
º
º
 
.
º
º
 
meshInfo
º
º
 '
[
º
º
' (
i
º
º
( )
]
º
º
) *
.
º
º
* +
vertices
º
º
+ 3
==
º
º
4 6
null
º
º
7 ;
||
º
º
< >

m_textInfo
º
º
? I
.
º
º
I J
meshInfo
º
º
J R
[
º
º
R S
i
º
º
S T
]
º
º
T U
.
º
º
U V
vertices
º
º
V ^
.
º
º
^ _
Length
º
º
_ e
<
º
º
f g
referenceCount
º
º
h v
*
º
º
w x
(
º
º
y z
!
º
º
z {!
m_isVolumetricTextº
º
{ ç
?º
º
é è
$numº
º
ê ë
:º
º
í ì
$numº
º
î ï
)º
º
ï ñ
)º
º
ñ ó
{
Ω
Ω
 
if
æ
æ
 
(
æ
æ
 

m_textInfo
æ
æ
 "
.
æ
æ
" #
meshInfo
æ
æ
# +
[
æ
æ
+ ,
i
æ
æ
, -
]
æ
æ
- .
.
æ
æ
. /
vertices
æ
æ
/ 7
==
æ
æ
8 :
null
æ
æ
; ?
)
æ
æ
? @
{
ø
ø
 
if
¿
¿
 
(
¿
¿
 
i
¿
¿
 
==
¿
¿
  
$num
¿
¿
! "
)
¿
¿
" #

m_textInfo
¡
¡
 &
.
¡
¡
& '
meshInfo
¡
¡
' /
[
¡
¡
/ 0
i
¡
¡
0 1
]
¡
¡
1 2
=
¡
¡
3 4
new
¡
¡
5 8
TMP_MeshInfo
¡
¡
9 E
(
¡
¡
E F
m_mesh
¡
¡
F L
,
¡
¡
L M
referenceCount
¡
¡
N \
+
¡
¡
] ^
$num
¡
¡
_ `
,
¡
¡
` a 
m_isVolumetricText
¡
¡
b t
)
¡
¡
t u
;
¡
¡
u v
else
¬
¬
 

m_textInfo
√
√
 &
.
√
√
& '
meshInfo
√
√
' /
[
√
√
/ 0
i
√
√
0 1
]
√
√
1 2
=
√
√
3 4
new
√
√
5 8
TMP_MeshInfo
√
√
9 E
(
√
√
E F
m_subTextObjects
√
√
F V
[
√
√
V W
i
√
√
W X
]
√
√
X Y
.
√
√
Y Z
mesh
√
√
Z ^
,
√
√
^ _
referenceCount
√
√
` n
+
√
√
o p
$num
√
√
q r
,
√
√
r s!
m_isVolumetricText√
√
t Ü
)√
√
Ü á
;√
√
á à
}
ƒ
ƒ
 
else
≈
≈
 

m_textInfo
∆
∆
 "
.
∆
∆
" #
meshInfo
∆
∆
# +
[
∆
∆
+ ,
i
∆
∆
, -
]
∆
∆
- .
.
∆
∆
. /
ResizeMeshInfo
∆
∆
/ =
(
∆
∆
= >
referenceCount
∆
∆
> L
>
∆
∆
M N
$num
∆
∆
O S
?
∆
∆
T U
referenceCount
∆
∆
V d
+
∆
∆
e f
$num
∆
∆
g j
:
∆
∆
k l
Mathf
∆
∆
m r
.
∆
∆
r s
NextPowerOfTwo∆
∆
s Å
(∆
∆
Å Ç
referenceCount∆
∆
Ç ê
+∆
∆
ë í
$num∆
∆
ì î
)∆
∆
î ï
,∆
∆
ï ñ"
m_isVolumetricText∆
∆
ó ©
)∆
∆
© ™
;∆
∆
™ ´
}
«
«
 
else
»
»
 
if
»
»
 
(
»
»
 -
m_VertexBufferAutoSizeReduction
»
»
 8
&&
»
»
9 ;
referenceCount
»
»
< J
>
»
»
K L
$num
»
»
M N
&&
»
»
O Q

m_textInfo
»
»
R \
.
»
»
\ ]
meshInfo
»
»
] e
[
»
»
e f
i
»
»
f g
]
»
»
g h
.
»
»
h i
vertices
»
»
i q
.
»
»
q r
Length
»
»
r x
-
»
»
y z
referenceCount»
»
{ â
*»
»
ä ã
(»
»
å ç
!»
»
ç é"
m_isVolumetricText»
»
é †
?»
»
° ¢
$num»
»
£ §
:»
»
• ¶
$num»
»
ß ®
)»
»
® ©
>»
»
™ ´
$num»
»
¨ ∞
)»
»
∞ ±
{
…
…
 

m_textInfo
Ã
Ã
 
.
Ã
Ã
 
meshInfo
Ã
Ã
 '
[
Ã
Ã
' (
i
Ã
Ã
( )
]
Ã
Ã
) *
.
Ã
Ã
* +
ResizeMeshInfo
Ã
Ã
+ 9
(
Ã
Ã
9 :
referenceCount
Ã
Ã
: H
>
Ã
Ã
I J
$num
Ã
Ã
K O
?
Ã
Ã
P Q
referenceCount
Ã
Ã
R `
+
Ã
Ã
a b
$num
Ã
Ã
c f
:
Ã
Ã
g h
Mathf
Ã
Ã
i n
.
Ã
Ã
n o
NextPowerOfTwo
Ã
Ã
o }
(
Ã
Ã
} ~
referenceCountÃ
Ã
~ å
+Ã
Ã
ç é
$numÃ
Ã
è ê
)Ã
Ã
ê ë
,Ã
Ã
ë í"
m_isVolumetricTextÃ
Ã
ì •
)Ã
Ã
• ¶
;Ã
Ã
¶ ß
}
Õ
Õ
 

m_textInfo
–
–
 
.
–
–
 
meshInfo
–
–
 #
[
–
–
# $
i
–
–
$ %
]
–
–
% &
.
–
–
& '
material
–
–
' /
=
–
–
0 1"
m_materialReferences
–
–
2 F
[
–
–
F G
i
–
–
G H
]
–
–
H I
.
–
–
I J
material
–
–
J R
;
–
–
R S
}
—
—
 
for
÷
÷
 
(
÷
÷
 
int
÷
÷
 
i
÷
÷
 
=
÷
÷
 
materialCount
÷
÷
 &
;
÷
÷
& '
i
÷
÷
( )
<
÷
÷
* +
m_subTextObjects
÷
÷
, <
.
÷
÷
< =
Length
÷
÷
= C
&&
÷
÷
D F
m_subTextObjects
÷
÷
G W
[
÷
÷
W X
i
÷
÷
X Y
]
÷
÷
Y Z
!=
÷
÷
[ ]
null
÷
÷
^ b
;
÷
÷
b c
i
÷
÷
d e
++
÷
÷
e g
)
÷
÷
g h
{
◊
◊
 
if
ÿ
ÿ
 
(
ÿ
ÿ
 
i
ÿ
ÿ
 
<
ÿ
ÿ
 

m_textInfo
ÿ
ÿ
 "
.
ÿ
ÿ
" #
meshInfo
ÿ
ÿ
# +
.
ÿ
ÿ
+ ,
Length
ÿ
ÿ
, 2
)
ÿ
ÿ
2 3

m_textInfo
Ÿ
Ÿ
 
.
Ÿ
Ÿ
 
meshInfo
Ÿ
Ÿ
 '
[
Ÿ
Ÿ
' (
i
Ÿ
Ÿ
( )
]
Ÿ
Ÿ
) *
.
Ÿ
Ÿ
* +!
ClearUnusedVertices
Ÿ
Ÿ
+ >
(
Ÿ
Ÿ
> ?
$num
Ÿ
Ÿ
? @
,
Ÿ
Ÿ
@ A
true
Ÿ
Ÿ
B F
)
Ÿ
Ÿ
F G
;
Ÿ
Ÿ
G H
}
‹
‹
 
return
‚
‚
 #
m_totalCharacterCount
‚
‚
 (
;
‚
‚
( )
}
„
„
 	
public
Ò
Ò
 
override
Ò
Ò
 
void
Ò
Ò
 
ComputeMarginSize
Ò
Ò
 .
(
Ò
Ò
. /
)
Ò
Ò
/ 0
{
Ú
Ú
 	
if
Û
Û
 
(
Û
Û
 
this
Û
Û
 
.
Û
Û
 
rectTransform
Û
Û
 "
!=
Û
Û
# %
null
Û
Û
& *
)
Û
Û
* +
{
Ù
Ù
 
Rect
ˆ
ˆ
 
rect
ˆ
ˆ
 
=
ˆ
ˆ
 
m_rectTransform
ˆ
ˆ
 +
.
ˆ
ˆ
+ ,
rect
ˆ
ˆ
, 0
;
ˆ
ˆ
0 1
m_marginWidth
¯
¯
 
=
¯
¯
 
rect
¯
¯
  $
.
¯
¯
$ %
width
¯
¯
% *
-
¯
¯
+ ,
m_margin
¯
¯
- 5
.
¯
¯
5 6
x
¯
¯
6 7
-
¯
¯
8 9
m_margin
¯
¯
: B
.
¯
¯
B C
z
¯
¯
C D
;
¯
¯
D E
m_marginHeight
˘
˘
 
=
˘
˘
  
rect
˘
˘
! %
.
˘
˘
% &
height
˘
˘
& ,
-
˘
˘
- .
m_margin
˘
˘
/ 7
.
˘
˘
7 8
y
˘
˘
8 9
-
˘
˘
: ;
m_margin
˘
˘
< D
.
˘
˘
D E
w
˘
˘
E F
;
˘
˘
F G)
m_PreviousRectTransformSize
¸
¸
 +
=
¸
¸
, -
rect
¸
¸
. 2
.
¸
¸
2 3
size
¸
¸
3 7
;
¸
¸
7 8%
m_PreviousPivotPosition
˝
˝
 '
=
˝
˝
( )
m_rectTransform
˝
˝
* 9
.
˝
˝
9 :
pivot
˝
˝
: ?
;
˝
˝
? @$
m_RectTransformCorners
ÄÄ &
=
ÄÄ' (*
GetTextContainerLocalCorners
ÄÄ) E
(
ÄÄE F
)
ÄÄF G
;
ÄÄG H
}
ÅÅ 
}
ÇÇ 	
	protected
ÖÖ 
override
ÖÖ 
void
ÖÖ +
OnDidApplyAnimationProperties
ÖÖ  =
(
ÖÖ= >
)
ÖÖ> ?
{
ÜÜ 	%
m_havePropertiesChanged
àà #
=
àà$ %
true
àà& *
;
àà* +"
isMaskUpdateRequired
ââ  
=
ââ! "
true
ââ# '
;
ââ' (
SetVerticesDirty
ãã 
(
ãã 
)
ãã 
;
ãã 
}
åå 	
	protected
èè 
override
èè 
void
èè &
OnTransformParentChanged
èè  8
(
èè8 9
)
èè9 :
{
êê 	
SetVerticesDirty
îî 
(
îî 
)
îî 
;
îî 
SetLayoutDirty
ïï 
(
ïï 
)
ïï 
;
ïï 
}
ññ 	
	protected
ôô 
override
ôô 
void
ôô -
OnRectTransformDimensionsChange
ôô  ?
(
ôô? @
)
ôô@ A
{
öö 	
if
ûû 
(
ûû 
rectTransform
ûû 
!=
ûû  
null
ûû! %
&&
ûû& (
Mathf
üü 
.
üü 
Abs
üü 
(
üü 
m_rectTransform
üü )
.
üü) *
rect
üü* .
.
üü. /
width
üü/ 4
-
üü5 6)
m_PreviousRectTransformSize
üü7 R
.
üüR S
x
üüS T
)
üüT U
<
üüV W
$num
üüX _
&&
üü` b
Mathf
üüc h
.
üüh i
Abs
üüi l
(
üül m
m_rectTransform
üüm |
.
üü| }
rectüü} Å
.üüÅ Ç
heightüüÇ à
-üüâ ä+
m_PreviousRectTransformSizeüüã ¶
.üü¶ ß
yüüß ®
)üü® ©
<üü™ ´
$numüü¨ ≥
&&üü¥ ∂
Mathf
†† 
.
†† 
Abs
†† 
(
†† 
m_rectTransform
†† )
.
††) *
pivot
††* /
.
††/ 0
x
††0 1
-
††2 3%
m_PreviousPivotPosition
††4 K
.
††K L
x
††L M
)
††M N
<
††O P
$num
††Q X
&&
††Y [
Mathf
††\ a
.
††a b
Abs
††b e
(
††e f
m_rectTransform
††f u
.
††u v
pivot
††v {
.
††{ |
y
††| }
-
††~ '
m_PreviousPivotPosition††Ä ó
.††ó ò
y††ò ô
)††ô ö
<††õ ú
$num††ù §
)††§ •
{
°° 
return
¢¢ 
;
¢¢ 
}
££ 
ComputeMarginSize
•• 
(
•• 
)
•• 
;
••  
SetVerticesDirty
ßß 
(
ßß 
)
ßß 
;
ßß 
SetLayoutDirty
®® 
(
®® 
)
®® 
;
®® 
}
©© 	
internal
ØØ 
override
ØØ 
void
ØØ 
InternalUpdate
ØØ -
(
ØØ- .
)
ØØ. /
{
∞∞ 	
if
≤≤ 
(
≤≤ %
m_havePropertiesChanged
≤≤ '
==
≤≤( *
false
≤≤+ 0
)
≤≤0 1
{
≥≥ 
float
¥¥ 
lossyScaleY
¥¥ !
=
¥¥" #
m_rectTransform
¥¥$ 3
.
¥¥3 4

lossyScale
¥¥4 >
.
¥¥> ?
y
¥¥? @
;
¥¥@ A
if
∏∏ 
(
∏∏ 
Mathf
∏∏ 
.
∏∏ 
Abs
∏∏ 
(
∏∏ 
lossyScaleY
∏∏ )
-
∏∏* +#
m_previousLossyScaleY
∏∏, A
)
∏∏A B
>
∏∏C D
$num
∏∏E L
&&
∏∏M O%
m_InternalParsingBuffer
∏∏P g
[
∏∏g h
$num
∏∏h i
]
∏∏i j
.
∏∏j k
unicode
∏∏k r
!=
∏∏s u
$num
∏∏v w
)
∏∏w x
{
ππ 
float
∫∫ 

scaleDelta
∫∫ $
=
∫∫% &
lossyScaleY
∫∫' 2
/
∫∫3 4#
m_previousLossyScaleY
∫∫5 J
;
∫∫J K
UpdateSDFScale
ºº "
(
ºº" #

scaleDelta
ºº# -
)
ºº- .
;
ºº. /#
m_previousLossyScaleY
ææ )
=
ææ* +
lossyScaleY
ææ, 7
;
ææ7 8
}
øø 
}
¿¿ 
if
√√ 
(
√√ /
!m_isUsingLegacyAnimationComponent
√√ 1
)
√√1 2
{
ƒƒ %
m_havePropertiesChanged
∆∆ '
=
∆∆( )
true
∆∆* .
;
∆∆. /
OnPreRenderObject
«« !
(
««! "
)
««" #
;
««# $
}
»» 
}
…… 	
void
œœ 
OnPreRenderObject
œœ 
(
œœ 
)
œœ  
{
–– 	
if
”” 
(
”” 
!
”” 
	m_isAwake
”” 
||
”” 
(
”” 
this
”” #
.
””# $
IsActive
””$ ,
(
””, -
)
””- .
==
””/ 1
false
””2 7
&&
””8 :!
m_ignoreActiveState
””; N
==
””O Q
false
””R W
)
””W X
)
””X Y
return
””Z `
;
””` a
if
÷÷ 
(
÷÷ 
m_fontAsset
÷÷ 
==
÷÷ 
null
÷÷ #
)
÷÷# $
{
◊◊ 
Debug
ÿÿ 
.
ÿÿ 

LogWarning
ÿÿ  
(
ÿÿ  !
$str
ÿÿ! F
+
ÿÿG H
	transform
ÿÿI R
.
ÿÿR S
name
ÿÿS W
+
ÿÿX Y
$str
ÿÿZ h
,
ÿÿh i
this
ÿÿj n
)
ÿÿn o
;
ÿÿo p
return
ŸŸ 
;
ŸŸ 
}
⁄⁄ 
if
‚‚ 
(
‚‚ %
m_havePropertiesChanged
‚‚ '
||
‚‚( *
m_isLayoutDirty
‚‚+ :
)
‚‚: ;
{
„„ 
if
ÊÊ 
(
ÊÊ "
isMaskUpdateRequired
ÊÊ (
)
ÊÊ( )
{
ÁÁ 

UpdateMask
ËË 
(
ËË 
)
ËË  
;
ËË  !"
isMaskUpdateRequired
ÈÈ (
=
ÈÈ) *
false
ÈÈ+ 0
;
ÈÈ0 1
}
ÍÍ 
if
ÌÌ 
(
ÌÌ "
checkPaddingRequired
ÌÌ (
)
ÌÌ( )
UpdateMeshPadding
ÓÓ %
(
ÓÓ% &
)
ÓÓ& '
;
ÓÓ' (
if
ÒÒ 
(
ÒÒ &
m_isInputParsingRequired
ÒÒ ,
||
ÒÒ- /
m_isTextTruncated
ÒÒ0 A
)
ÒÒA B
{
ÚÚ 
ParseInputText
˜˜ "
(
˜˜" #
)
˜˜# $
;
˜˜$ %
TMP_FontAsset
˘˘ !
.
˘˘! "4
&UpdateFontFeaturesForFontAssetsInQueue
˘˘" H
(
˘˘H I
)
˘˘I J
;
˘˘J K
}
˛˛ 
if
ÅÅ 
(
ÅÅ  
m_enableAutoSizing
ÅÅ &
)
ÅÅ& '

m_fontSize
ÇÇ 
=
ÇÇ  
Mathf
ÇÇ! &
.
ÇÇ& '
Clamp
ÇÇ' ,
(
ÇÇ, -
m_fontSizeBase
ÇÇ- ;
,
ÇÇ; <
m_fontSizeMin
ÇÇ= J
,
ÇÇJ K
m_fontSizeMax
ÇÇL Y
)
ÇÇY Z
;
ÇÇZ [
m_maxFontSize
ÑÑ 
=
ÑÑ 
m_fontSizeMax
ÑÑ  -
;
ÑÑ- .
m_minFontSize
ÖÖ 
=
ÖÖ 
m_fontSizeMin
ÖÖ  -
;
ÖÖ- . 
m_lineSpacingDelta
ÜÜ "
=
ÜÜ# $
$num
ÜÜ% &
;
ÜÜ& '!
m_charWidthAdjDelta
áá #
=
áá$ %
$num
áá& '
;
áá' (
m_isTextTruncated
ââ !
=
ââ" #
false
ââ$ )
;
ââ) *%
m_havePropertiesChanged
ãã '
=
ãã( )
false
ãã* /
;
ãã/ 0
m_isLayoutDirty
åå 
=
åå  !
false
åå" '
;
åå' (!
m_ignoreActiveState
çç #
=
çç$ %
false
çç& +
;
çç+ ,&
m_IsAutoSizePointSizeSet
êê (
=
êê) *
false
êê+ 0
;
êê0 1&
m_AutoSizeIterationCount
ëë (
=
ëë) *
$num
ëë+ ,
;
ëë, -
while
ïï 
(
ïï &
m_IsAutoSizePointSizeSet
ïï /
==
ïï0 2
false
ïï3 8
)
ïï8 9
{
ññ 
GenerateTextMesh
óó $
(
óó$ %
)
óó% &
;
óó& '&
m_AutoSizeIterationCount
òò ,
+=
òò- /
$num
òò0 1
;
òò1 2
}
ôô 
}
öö 
}
õõ 	
	protected
°° 
override
°° 
void
°° 
GenerateTextMesh
°°  0
(
°°0 1
)
°°1 2
{
¢¢ 	
if
©© 
(
©© 
m_fontAsset
©© 
==
©© 
null
©© #
||
©©$ &
m_fontAsset
©©' 2
.
©©2 3"
characterLookupTable
©©3 G
==
©©H J
null
©©K O
)
©©O P
{
™™ 
Debug
´´ 
.
´´ 

LogWarning
´´  
(
´´  !
$str
´´! f
+
´´g h
this
´´i m
.
´´m n
GetInstanceID
´´n {
(
´´{ |
)
´´| }
)
´´} ~
;
´´~ &
m_IsAutoSizePointSizeSet
¨¨ (
=
¨¨) *
true
¨¨+ /
;
¨¨/ 0
return
≠≠ 
;
≠≠ 
}
ÆÆ 
if
±± 
(
±± 

m_textInfo
±± 
!=
±± 
null
±± "
)
±±" #

m_textInfo
≤≤ 
.
≤≤ 
Clear
≤≤  
(
≤≤  !
)
≤≤! "
;
≤≤" #
if
µµ 
(
µµ %
m_InternalParsingBuffer
µµ '
==
µµ( *
null
µµ+ /
||
µµ0 2%
m_InternalParsingBuffer
µµ3 J
.
µµJ K
Length
µµK Q
==
µµR T
$num
µµU V
||
µµW Y%
m_InternalParsingBuffer
µµZ q
[
µµq r
$num
µµr s
]
µµs t
.
µµt u
unicode
µµu |
==
µµ} 
$numµµÄ Å
)µµÅ Ç
{
∂∂ 
	ClearMesh
∏∏ 
(
∏∏ 
true
∏∏ 
)
∏∏ 
;
∏∏  
m_preferredWidth
∫∫  
=
∫∫! "
$num
∫∫# $
;
∫∫$ %
m_preferredHeight
ªª !
=
ªª" #
$num
ªª$ %
;
ªª% & 
TMPro_EventManager
ææ "
.
ææ" #
ON_TEXT_CHANGED
ææ# 2
(
ææ2 3
this
ææ3 7
)
ææ7 8
;
ææ8 9&
m_IsAutoSizePointSizeSet
øø (
=
øø) *
true
øø+ /
;
øø/ 0
return
¿¿ 
;
¿¿ 
}
¡¡  
m_currentFontAsset
√√ 
=
√√  
m_fontAsset
√√! ,
;
√√, -
m_currentMaterial
ƒƒ 
=
ƒƒ 
m_sharedMaterial
ƒƒ  0
;
ƒƒ0 1$
m_currentMaterialIndex
≈≈ "
=
≈≈# $
$num
≈≈% &
;
≈≈& '&
m_materialReferenceStack
∆∆ $
.
∆∆$ %

SetDefault
∆∆% /
(
∆∆/ 0
new
∆∆0 3
MaterialReference
∆∆4 E
(
∆∆E F$
m_currentMaterialIndex
∆∆F \
,
∆∆\ ] 
m_currentFontAsset
∆∆^ p
,
∆∆p q
null
∆∆r v
,
∆∆v w 
m_currentMaterial∆∆x â
,∆∆â ä
	m_padding∆∆ã î
)∆∆î ï
)∆∆ï ñ
;∆∆ñ ó"
m_currentSpriteAsset
»»  
=
»»! "
m_spriteAsset
»»# 0
;
»»0 1
if
ÀÀ 
(
ÀÀ 
m_spriteAnimator
ÀÀ  
!=
ÀÀ! #
null
ÀÀ$ (
)
ÀÀ( )
m_spriteAnimator
ÃÃ  
.
ÃÃ  !
StopAllAnimations
ÃÃ! 2
(
ÃÃ2 3
)
ÃÃ3 4
;
ÃÃ4 5
int
œœ !
totalCharacterCount
œœ #
=
œœ$ %#
m_totalCharacterCount
œœ& ;
;
œœ; <
float
”” 
	baseScale
”” 
=
”” 
m_fontScale
”” )
=
””* +
(
””, -

m_fontSize
””- 7
/
””8 9
m_fontAsset
””: E
.
””E F

m_FaceInfo
””F P
.
””P Q
	pointSize
””Q Z
*
””[ \
m_fontAsset
””] h
.
””h i

m_FaceInfo
””i s
.
””s t
scale
””t y
*
””z {
(
””| }
m_isOrthographic””} ç
?””é è
$num””ê ë
:””í ì
$num””î ò
)””ò ô
)””ô ö
;””ö õ
float
‘‘ !
currentElementScale
‘‘ %
=
‘‘& '
	baseScale
‘‘( 1
;
‘‘1 2
float
’’ 
currentEmScale
’’  
=
’’! "

m_fontSize
’’# -
*
’’. /
$num
’’0 5
*
’’6 7
(
’’8 9
m_isOrthographic
’’9 I
?
’’J K
$num
’’L M
:
’’N O
$num
’’P T
)
’’T U
;
’’U V#
m_fontScaleMultiplier
÷÷ !
=
÷÷" #
$num
÷÷$ %
;
÷÷% &
m_currentFontSize
ÿÿ 
=
ÿÿ 

m_fontSize
ÿÿ  *
;
ÿÿ* +
m_sizeStack
ŸŸ 
.
ŸŸ 

SetDefault
ŸŸ "
(
ŸŸ" #
m_currentFontSize
ŸŸ# 4
)
ŸŸ4 5
;
ŸŸ5 6
float
⁄⁄ 
fontSizeDelta
⁄⁄ 
=
⁄⁄  !
$num
⁄⁄" #
;
⁄⁄# $
int
‹‹ 
charCode
‹‹ 
=
‹‹ 
$num
‹‹ 
;
‹‹ !
m_FontStyleInternal
ﬁﬁ 
=
ﬁﬁ  !
m_fontStyle
ﬁﬁ" -
;
ﬁﬁ- ."
m_FontWeightInternal
ﬂﬂ  
=
ﬂﬂ! "
(
ﬂﬂ# $!
m_FontStyleInternal
ﬂﬂ$ 7
&
ﬂﬂ8 9

FontStyles
ﬂﬂ: D
.
ﬂﬂD E
Bold
ﬂﬂE I
)
ﬂﬂI J
==
ﬂﬂK M

FontStyles
ﬂﬂN X
.
ﬂﬂX Y
Bold
ﬂﬂY ]
?
ﬂﬂ^ _

FontWeight
ﬂﬂ` j
.
ﬂﬂj k
Bold
ﬂﬂk o
:
ﬂﬂp q
m_fontWeight
ﬂﬂr ~
;
ﬂﬂ~ 
m_FontWeightStack
‡‡ 
.
‡‡ 

SetDefault
‡‡ (
(
‡‡( )"
m_FontWeightInternal
‡‡) =
)
‡‡= >
;
‡‡> ?
m_fontStyleStack
·· 
.
·· 
Clear
·· "
(
··" #
)
··# $
;
··$ %!
m_lineJustification
„„ 
=
„„  !#
m_HorizontalAlignment
„„" 7
;
„„7 8&
m_lineJustificationStack
‰‰ $
.
‰‰$ %

SetDefault
‰‰% /
(
‰‰/ 0!
m_lineJustification
‰‰0 C
)
‰‰C D
;
‰‰D E
float
ÊÊ 
padding
ÊÊ 
=
ÊÊ 
$num
ÊÊ 
;
ÊÊ 
float
ÁÁ 
style_padding
ÁÁ 
=
ÁÁ  !
$num
ÁÁ" #
;
ÁÁ# $
float
ËË #
boldSpacingAdjustment
ËË '
=
ËË( )
$num
ËË* +
;
ËË+ ,
m_baselineOffset
ÎÎ 
=
ÎÎ 
$num
ÎÎ  
;
ÎÎ  !#
m_baselineOffsetStack
ÏÏ !
.
ÏÏ! "
Clear
ÏÏ" '
(
ÏÏ' (
)
ÏÏ( )
;
ÏÏ) *
bool
ÔÔ 
beginUnderline
ÔÔ 
=
ÔÔ  !
false
ÔÔ" '
;
ÔÔ' (
Vector3
 
underline_start
 #
=
$ %
Vector3
& -
.
- .
zero
. 2
;
2 3
Vector3
ÒÒ 
underline_end
ÒÒ !
=
ÒÒ" #
Vector3
ÒÒ$ +
.
ÒÒ+ ,
zero
ÒÒ, 0
;
ÒÒ0 1
bool
ÙÙ  
beginStrikethrough
ÙÙ #
=
ÙÙ$ %
false
ÙÙ& +
;
ÙÙ+ ,
Vector3
ıı !
strikethrough_start
ıı '
=
ıı( )
Vector3
ıı* 1
.
ıı1 2
zero
ıı2 6
;
ıı6 7
Vector3
ˆˆ 
strikethrough_end
ˆˆ %
=
ˆˆ& '
Vector3
ˆˆ( /
.
ˆˆ/ 0
zero
ˆˆ0 4
;
ˆˆ4 5
bool
˘˘ 
beginHighlight
˘˘ 
=
˘˘  !
false
˘˘" '
;
˘˘' (
Vector3
˙˙ 
highlight_start
˙˙ #
=
˙˙$ %
Vector3
˙˙& -
.
˙˙- .
zero
˙˙. 2
;
˙˙2 3
Vector3
˚˚ 
highlight_end
˚˚ !
=
˚˚" #
Vector3
˚˚$ +
.
˚˚+ ,
zero
˚˚, 0
;
˚˚0 1
m_fontColor32
˝˝ 
=
˝˝ 
m_fontColor
˝˝ '
;
˝˝' (
Color32
˛˛ 
vertexColor
˛˛ 
;
˛˛  
m_htmlColor
ˇˇ 
=
ˇˇ 
m_fontColor32
ˇˇ '
;
ˇˇ' (
m_underlineColor
ÄÄ 
=
ÄÄ 
m_htmlColor
ÄÄ *
;
ÄÄ* +"
m_strikethroughColor
ÅÅ  
=
ÅÅ! "
m_htmlColor
ÅÅ# .
;
ÅÅ. /
m_colorStack
ÉÉ 
.
ÉÉ 

SetDefault
ÉÉ #
(
ÉÉ# $
m_htmlColor
ÉÉ$ /
)
ÉÉ/ 0
;
ÉÉ0 1#
m_underlineColorStack
ÑÑ !
.
ÑÑ! "

SetDefault
ÑÑ" ,
(
ÑÑ, -
m_htmlColor
ÑÑ- 8
)
ÑÑ8 9
;
ÑÑ9 :'
m_strikethroughColorStack
ÖÖ %
.
ÖÖ% &

SetDefault
ÖÖ& 0
(
ÖÖ0 1
m_htmlColor
ÖÖ1 <
)
ÖÖ< =
;
ÖÖ= >#
m_HighlightStateStack
ÜÜ !
.
ÜÜ! "

SetDefault
ÜÜ" ,
(
ÜÜ, -
new
ÜÜ- 0
HighlightState
ÜÜ1 ?
(
ÜÜ? @
m_htmlColor
ÜÜ@ K
,
ÜÜK L

TMP_Offset
ÜÜM W
.
ÜÜW X
zero
ÜÜX \
)
ÜÜ\ ]
)
ÜÜ] ^
;
ÜÜ^ _#
m_colorGradientPreset
àà !
=
àà" #
null
àà$ (
;
àà( )"
m_colorGradientStack
ââ  
.
ââ  !

SetDefault
ââ! +
(
ââ+ ,
null
ââ, 0
)
ââ0 1
;
ââ1 2
m_ItalicAngle
ãã 
=
ãã  
m_currentFontAsset
ãã .
.
ãã. /
italicStyle
ãã/ :
;
ãã: ; 
m_ItalicAngleStack
åå 
.
åå 

SetDefault
åå )
(
åå) *
m_ItalicAngle
åå* 7
)
åå7 8
;
åå8 9
m_actionStack
íí 
.
íí 
Clear
íí 
(
íí  
)
íí  !
;
íí! "
m_isFXMatrixSet
îî 
=
îî 
false
îî #
;
îî# $
m_lineOffset
ññ 
=
ññ 
$num
ññ 
;
ññ 
m_lineHeight
óó 
=
óó 
TMP_Math
óó #
.
óó# $
FLOAT_UNSET
óó$ /
;
óó/ 0
float
òò 
lineGap
òò 
=
òò  
m_currentFontAsset
òò .
.
òò. /

m_FaceInfo
òò/ 9
.
òò9 :

lineHeight
òò: D
-
òòE F
(
òòG H 
m_currentFontAsset
òòH Z
.
òòZ [

m_FaceInfo
òò[ e
.
òòe f

ascentLine
òòf p
-
òòq r!
m_currentFontAssetòòs Ö
.òòÖ Ü

m_FaceInfoòòÜ ê
.òòê ë
descentLineòòë ú
)òòú ù
;òòù û

m_cSpacing
öö 
=
öö 
$num
öö 
;
öö 
m_monoSpacing
õõ 
=
õõ 
$num
õõ 
;
õõ 

m_xAdvance
úú 
=
úú 
$num
úú 
;
úú 
tag_LineIndent
ûû 
=
ûû 
$num
ûû 
;
ûû 

tag_Indent
üü 
=
üü 
$num
üü 
;
üü 
m_indentStack
†† 
.
†† 

SetDefault
†† $
(
††$ %
$num
††% &
)
††& '
;
††' (
tag_NoParsing
°° 
=
°° 
false
°° !
;
°°! "
m_characterCount
§§ 
=
§§ 
$num
§§  
;
§§  !$
m_firstCharacterOfLine
ßß "
=
ßß# $%
m_firstVisibleCharacter
ßß% <
;
ßß< =#
m_lastCharacterOfLine
®® !
=
®®" #
$num
®®$ %
;
®®% &+
m_firstVisibleCharacterOfLine
©© )
=
©©* +
$num
©©, -
;
©©- .*
m_lastVisibleCharacterOfLine
™™ (
=
™™) *
$num
™™+ ,
;
™™, -
m_maxLineAscender
´´ 
=
´´ "
k_LargeNegativeFloat
´´  4
;
´´4 5 
m_maxLineDescender
¨¨ 
=
¨¨  "
k_LargePositiveFloat
¨¨! 5
;
¨¨5 6
m_lineNumber
≠≠ 
=
≠≠ 
$num
≠≠ 
;
≠≠ #
m_startOfLineAscender
ÆÆ !
=
ÆÆ" #
$num
ÆÆ$ %
;
ÆÆ% &$
m_startOfLineDescender
ØØ "
=
ØØ# $
$num
ØØ% &
;
ØØ& ')
m_lineVisibleCharacterCount
∞∞ '
=
∞∞( )
$num
∞∞* +
;
∞∞+ ,
bool
±± 
isStartOfNewLine
±± !
=
±±" #
true
±±$ (
;
±±( )#
m_IsDrivenLineSpacing
≤≤ !
=
≤≤" #
false
≤≤$ )
;
≤≤) *+
m_firstOverflowCharacterIndex
≥≥ )
=
≥≥* +
-
≥≥, -
$num
≥≥- .
;
≥≥. /
m_pageNumber
µµ 
=
µµ 
$num
µµ 
;
µµ 
int
∂∂ 
pageToDisplay
∂∂ 
=
∂∂ 
Mathf
∂∂  %
.
∂∂% &
Clamp
∂∂& +
(
∂∂+ ,
m_pageToDisplay
∂∂, ;
-
∂∂< =
$num
∂∂> ?
,
∂∂? @
$num
∂∂A B
,
∂∂B C

m_textInfo
∂∂D N
.
∂∂N O
pageInfo
∂∂O W
.
∂∂W X
Length
∂∂X ^
-
∂∂_ `
$num
∂∂a b
)
∂∂b c
;
∂∂c d

m_textInfo
∑∑ 
.
∑∑ 
ClearPageInfo
∑∑ $
(
∑∑$ %
)
∑∑% &
;
∑∑& '
Vector4
ππ 
margins
ππ 
=
ππ 
m_margin
ππ &
;
ππ& '
float
∫∫ 
marginWidth
∫∫ 
=
∫∫ 
m_marginWidth
∫∫  -
>
∫∫. /
$num
∫∫0 1
?
∫∫2 3
m_marginWidth
∫∫4 A
:
∫∫B C
$num
∫∫D E
;
∫∫E F
float
ªª 
marginHeight
ªª 
=
ªª  
m_marginHeight
ªª! /
>
ªª0 1
$num
ªª2 3
?
ªª4 5
m_marginHeight
ªª6 D
:
ªªE F
$num
ªªG H
;
ªªH I
m_marginLeft
ºº 
=
ºº 
$num
ºº 
;
ºº 
m_marginRight
ΩΩ 
=
ΩΩ 
$num
ΩΩ 
;
ΩΩ 
m_width
ææ 
=
ææ 
-
ææ 
$num
ææ 
;
ææ 
float
øø 
widthOfTextArea
øø !
=
øø" #
marginWidth
øø$ /
+
øø0 1
$num
øø2 9
-
øø: ;
m_marginLeft
øø< H
-
øøI J
m_marginRight
øøK X
;
øøX Y
m_meshExtents
¬¬ 
.
¬¬ 
min
¬¬ 
=
¬¬ $
k_LargePositiveVector2
¬¬  6
;
¬¬6 7
m_meshExtents
√√ 
.
√√ 
max
√√ 
=
√√ $
k_LargeNegativeVector2
√√  6
;
√√6 7

m_textInfo
∆∆ 
.
∆∆ 
ClearLineInfo
∆∆ $
(
∆∆$ %
)
∆∆% &
;
∆∆& '
m_maxCapHeight
…… 
=
…… 
$num
…… 
;
…… 
m_maxTextAscender
   
=
   
$num
    !
;
  ! " 
m_ElementDescender
ÀÀ 
=
ÀÀ  
$num
ÀÀ! "
;
ÀÀ" #
m_PageAscender
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
float
ÕÕ !
maxVisibleDescender
ÕÕ %
=
ÕÕ& '
$num
ÕÕ( )
;
ÕÕ) *
bool
ŒŒ &
isMaxVisibleDescenderSet
ŒŒ )
=
ŒŒ* +
false
ŒŒ, 1
;
ŒŒ1 2
m_isNewPage
œœ 
=
œœ 
false
œœ 
;
œœ  
bool
““ 
isFirstWordOfLine
““ "
=
““# $
true
““% )
;
““) *"
m_isNonBreakingSpace
””  
=
””! "
false
””# (
;
””( )
bool
‘‘ $
ignoreNonBreakingSpace
‘‘ '
=
‘‘( )
false
‘‘* /
;
‘‘/ 0
int
÷÷ 
lastSoftLineBreak
÷÷ !
=
÷÷" #
$num
÷÷$ %
;
÷÷% &#
CharacterSubstitution
ÿÿ !#
characterToSubstitute
ÿÿ" 7
=
ÿÿ8 9
new
ÿÿ: =#
CharacterSubstitution
ÿÿ> S
(
ÿÿS T
-
ÿÿT U
$num
ÿÿU V
,
ÿÿV W
$num
ÿÿX Y
)
ÿÿY Z
;
ÿÿZ [
bool
ŸŸ !
isSoftHyphenIgnored
ŸŸ $
=
ŸŸ% &
false
ŸŸ' ,
;
ŸŸ, -
bool
⁄⁄ "
isInjectingCharacter
⁄⁄ %
=
⁄⁄& '
false
⁄⁄( -
;
⁄⁄- .#
SaveWordWrappingState
›› !
(
››! "
ref
››" %"
m_SavedWordWrapState
››& :
,
››: ;
-
››< =
$num
››= >
,
››> ?
-
››@ A
$num
››A B
)
››B C
;
››C D#
SaveWordWrappingState
ﬁﬁ !
(
ﬁﬁ! "
ref
ﬁﬁ" %
m_SavedLineState
ﬁﬁ& 6
,
ﬁﬁ6 7
-
ﬁﬁ8 9
$num
ﬁﬁ9 :
,
ﬁﬁ: ;
-
ﬁﬁ< =
$num
ﬁﬁ= >
)
ﬁﬁ> ?
;
ﬁﬁ? @#
SaveWordWrappingState
ﬂﬂ !
(
ﬂﬂ! "
ref
ﬂﬂ" %"
m_SavedEllipsisState
ﬂﬂ& :
,
ﬂﬂ: ;
-
ﬂﬂ< =
$num
ﬂﬂ= >
,
ﬂﬂ> ?
-
ﬂﬂ@ A
$num
ﬂﬂA B
)
ﬂﬂB C
;
ﬂﬂC D#
SaveWordWrappingState
‡‡ !
(
‡‡! "
ref
‡‡" %#
m_SavedLastValidState
‡‡& ;
,
‡‡; <
-
‡‡= >
$num
‡‡> ?
,
‡‡? @
-
‡‡A B
$num
‡‡B C
)
‡‡C D
;
‡‡D E#
SaveWordWrappingState
·· !
(
··! "
ref
··" %'
m_SavedSoftLineBreakState
··& ?
,
··? @
-
··A B
$num
··B C
,
··C D
-
··E F
$num
··F G
)
··G H
;
··H I/
!m_EllipsisInsertionCandidateStack
„„ -
.
„„- .
Clear
„„. 3
(
„„3 4
)
„„4 5
;
„„5 6
int
ÊÊ 
restoreCount
ÊÊ 
=
ÊÊ 
$num
ÊÊ  
;
ÊÊ  !
for
ÌÌ 
(
ÌÌ 
int
ÌÌ 
i
ÌÌ 
=
ÌÌ 
$num
ÌÌ 
;
ÌÌ 
i
ÌÌ 
<
ÌÌ %
m_InternalParsingBuffer
ÌÌ  7
.
ÌÌ7 8
Length
ÌÌ8 >
&&
ÌÌ? A%
m_InternalParsingBuffer
ÌÌB Y
[
ÌÌY Z
i
ÌÌZ [
]
ÌÌ[ \
.
ÌÌ\ ]
unicode
ÌÌ] d
!=
ÌÌe g
$num
ÌÌh i
;
ÌÌi j
i
ÌÌk l
++
ÌÌl n
)
ÌÌn o
{
ÓÓ 
charCode
ÔÔ 
=
ÔÔ %
m_InternalParsingBuffer
ÔÔ 2
[
ÔÔ2 3
i
ÔÔ3 4
]
ÔÔ4 5
.
ÔÔ5 6
unicode
ÔÔ6 =
;
ÔÔ= >
if
ÒÒ 
(
ÒÒ 
restoreCount
ÒÒ  
>
ÒÒ! "
$num
ÒÒ# $
)
ÒÒ$ %
{
ÚÚ 
Debug
ÛÛ 
.
ÛÛ 
LogError
ÛÛ "
(
ÛÛ" #
$str
ÛÛ# ]
+
ÛÛ^ _
charCode
ÛÛ` h
+
ÛÛi j
$str
ÛÛk v
+
ÛÛw x
i
ÛÛy z
)
ÛÛz {
;
ÛÛ{ |#
characterToSubstitute
ÙÙ )
.
ÙÙ) *
index
ÙÙ* /
=
ÙÙ0 1
m_characterCount
ÙÙ2 B
;
ÙÙB C#
characterToSubstitute
ıı )
.
ıı) *
unicode
ıı* 1
=
ıı2 3
$num
ıı4 8
;
ıı8 9
}
ˆˆ 
if
˙˙ 
(
˙˙ 
m_isRichText
˙˙  
&&
˙˙! #
charCode
˙˙$ ,
==
˙˙- /
$num
˙˙0 2
)
˙˙2 3
{
˚˚ 
m_isParsingText
ÄÄ #
=
ÄÄ$ %
true
ÄÄ& *
;
ÄÄ* +
m_textElementType
ÅÅ %
=
ÅÅ& '!
TMP_TextElementType
ÅÅ( ;
.
ÅÅ; <
	Character
ÅÅ< E
;
ÅÅE F
int
ÇÇ 
endTagIndex
ÇÇ #
;
ÇÇ# $
if
ÖÖ 
(
ÖÖ 
ValidateHtmlTag
ÖÖ '
(
ÖÖ' (%
m_InternalParsingBuffer
ÖÖ( ?
,
ÖÖ? @
i
ÖÖA B
+
ÖÖC D
$num
ÖÖE F
,
ÖÖF G
out
ÖÖH K
endTagIndex
ÖÖL W
)
ÖÖW X
)
ÖÖX Y
{
ÜÜ 
i
áá 
=
áá 
endTagIndex
áá '
;
áá' (
if
ää 
(
ää 
m_textElementType
ää -
==
ää. 0!
TMP_TextElementType
ää1 D
.
ääD E
	Character
ääE N
)
ääN O
{
ãã 
continue
êê $
;
êê$ %
}
ëë 
}
íí 
}
óó 
else
òò 
{
ôô 
m_textElementType
öö %
=
öö& '

m_textInfo
öö( 2
.
öö2 3
characterInfo
öö3 @
[
öö@ A
m_characterCount
ööA Q
]
ööQ R
.
ööR S
elementType
ööS ^
;
öö^ _$
m_currentMaterialIndex
õõ *
=
õõ+ ,

m_textInfo
õõ- 7
.
õõ7 8
characterInfo
õõ8 E
[
õõE F
m_characterCount
õõF V
]
õõV W
.
õõW X$
materialReferenceIndex
õõX n
;
õõn o 
m_currentFontAsset
úú &
=
úú' (

m_textInfo
úú) 3
.
úú3 4
characterInfo
úú4 A
[
úúA B
m_characterCount
úúB R
]
úúR S
.
úúS T
	fontAsset
úúT ]
;
úú] ^
}
ùù 
int
†† #
previousMaterialIndex
†† )
=
††* +$
m_currentMaterialIndex
††, B
;
††B C
bool
°°  
isUsingAltTypeface
°° '
=
°°( )

m_textInfo
°°* 4
.
°°4 5
characterInfo
°°5 B
[
°°B C
m_characterCount
°°C S
]
°°S T
.
°°T U&
isUsingAlternateTypeface
°°U m
;
°°m n
m_isParsingText
££ 
=
££  !
false
££" '
;
££' ("
isInjectingCharacter
ßß $
=
ßß% &
false
ßß' ,
;
ßß, -
if
©© 
(
©© #
characterToSubstitute
©© )
.
©©) *
index
©©* /
==
©©0 2
m_characterCount
©©3 C
)
©©C D
{
™™ 
charCode
´´ 
=
´´ 
(
´´  
int
´´  #
)
´´# $#
characterToSubstitute
´´$ 9
.
´´9 :
unicode
´´: A
;
´´A B
m_textElementType
¨¨ %
=
¨¨& '!
TMP_TextElementType
¨¨( ;
.
¨¨; <
	Character
¨¨< E
;
¨¨E F"
isInjectingCharacter
≠≠ (
=
≠≠) *
true
≠≠+ /
;
≠≠/ 0
switch
ØØ 
(
ØØ 
charCode
ØØ $
)
ØØ$ %
{
∞∞ 
case
±± 
$num
±± !
:
±±! "

m_textInfo
≤≤ &
.
≤≤& '
characterInfo
≤≤' 4
[
≤≤4 5
m_characterCount
≤≤5 E
]
≤≤E F
.
≤≤F G
textElement
≤≤G R
=
≤≤S T 
m_currentFontAsset
≤≤U g
.
≤≤g h"
characterLookupTable
≤≤h |
[
≤≤| }
$num≤≤} Å
]≤≤Å Ç
;≤≤Ç É
m_isTextTruncated
≥≥ -
=
≥≥. /
true
≥≥0 4
;
≥≥4 5
break
¥¥ !
;
¥¥! "
case
µµ 
$num
µµ !
:
µµ! "
break
∑∑ !
;
∑∑! "
case
∏∏ 
$num
∏∏ #
:
∏∏# $

m_textInfo
ππ &
.
ππ& '
characterInfo
ππ' 4
[
ππ4 5
m_characterCount
ππ5 E
]
ππE F
.
ππF G
textElement
ππG R
=
ππS T

m_Ellipsis
ππU _
.
ππ_ `
	character
ππ` i
;
ππi j

m_textInfo
∫∫ &
.
∫∫& '
characterInfo
∫∫' 4
[
∫∫4 5
m_characterCount
∫∫5 E
]
∫∫E F
.
∫∫F G
elementType
∫∫G R
=
∫∫S T!
TMP_TextElementType
∫∫U h
.
∫∫h i
	Character
∫∫i r
;
∫∫r s

m_textInfo
ªª &
.
ªª& '
characterInfo
ªª' 4
[
ªª4 5
m_characterCount
ªª5 E
]
ªªE F
.
ªªF G
	fontAsset
ªªG P
=
ªªQ R

m_Ellipsis
ªªS ]
.
ªª] ^
	fontAsset
ªª^ g
;
ªªg h

m_textInfo
ºº &
.
ºº& '
characterInfo
ºº' 4
[
ºº4 5
m_characterCount
ºº5 E
]
ººE F
.
ººF G
material
ººG O
=
ººP Q

m_Ellipsis
ººR \
.
ºº\ ]
material
ºº] e
;
ººe f

m_textInfo
ΩΩ &
.
ΩΩ& '
characterInfo
ΩΩ' 4
[
ΩΩ4 5
m_characterCount
ΩΩ5 E
]
ΩΩE F
.
ΩΩF G$
materialReferenceIndex
ΩΩG ]
=
ΩΩ^ _

m_Ellipsis
ΩΩ` j
.
ΩΩj k
materialIndex
ΩΩk x
;
ΩΩx y
m_isTextTruncated
¿¿ -
=
¿¿. /
true
¿¿0 4
;
¿¿4 5#
characterToSubstitute
√√ 1
.
√√1 2
index
√√2 7
=
√√8 9
m_characterCount
√√: J
+
√√K L
$num
√√M N
;
√√N O#
characterToSubstitute
ƒƒ 1
.
ƒƒ1 2
unicode
ƒƒ2 9
=
ƒƒ: ;
$num
ƒƒ< @
;
ƒƒ@ A
break
≈≈ !
;
≈≈! "
}
∆∆ 
}
«« 
if
ÕÕ 
(
ÕÕ 
m_characterCount
ÕÕ $
<
ÕÕ% &%
m_firstVisibleCharacter
ÕÕ' >
&&
ÕÕ? A
charCode
ÕÕB J
!=
ÕÕK M
$num
ÕÕN R
)
ÕÕR S
{
ŒŒ 

m_textInfo
œœ 
.
œœ 
characterInfo
œœ ,
[
œœ, -
m_characterCount
œœ- =
]
œœ= >
.
œœ> ?
	isVisible
œœ? H
=
œœI J
false
œœK P
;
œœP Q

m_textInfo
–– 
.
–– 
characterInfo
–– ,
[
––, -
m_characterCount
––- =
]
––= >
.
––> ?
	character
––? H
=
––I J
(
––K L
char
––L P
)
––P Q
$num
––Q W
;
––W X

m_textInfo
—— 
.
—— 
characterInfo
—— ,
[
——, -
m_characterCount
——- =
]
——= >
.
——> ?

lineNumber
——? I
=
——J K
$num
——L M
;
——M N
m_characterCount
““ $
+=
““% '
$num
““( )
;
““) *
continue
”” 
;
”” 
}
‘‘ 
float
€€ !
smallCapsMultiplier
€€ )
=
€€* +
$num
€€, 0
;
€€0 1
if
›› 
(
›› 
m_textElementType
›› %
==
››& (!
TMP_TextElementType
››) <
.
››< =
	Character
››= F
)
››F G
{
ﬁﬁ 
if
ﬂﬂ 
(
ﬂﬂ 
(
ﬂﬂ !
m_FontStyleInternal
ﬂﬂ ,
&
ﬂﬂ- .

FontStyles
ﬂﬂ/ 9
.
ﬂﬂ9 :
	UpperCase
ﬂﬂ: C
)
ﬂﬂC D
==
ﬂﬂE G

FontStyles
ﬂﬂH R
.
ﬂﬂR S
	UpperCase
ﬂﬂS \
)
ﬂﬂ\ ]
{
‡‡ 
if
‚‚ 
(
‚‚ 
char
‚‚  
.
‚‚  !
IsLower
‚‚! (
(
‚‚( )
(
‚‚) *
char
‚‚* .
)
‚‚. /
charCode
‚‚/ 7
)
‚‚7 8
)
‚‚8 9
charCode
„„ $
=
„„% &
char
„„' +
.
„„+ ,
ToUpper
„„, 3
(
„„3 4
(
„„4 5
char
„„5 9
)
„„9 :
charCode
„„: B
)
„„B C
;
„„C D
}
ÂÂ 
else
ÊÊ 
if
ÊÊ 
(
ÊÊ 
(
ÊÊ !
m_FontStyleInternal
ÊÊ 1
&
ÊÊ2 3

FontStyles
ÊÊ4 >
.
ÊÊ> ?
	LowerCase
ÊÊ? H
)
ÊÊH I
==
ÊÊJ L

FontStyles
ÊÊM W
.
ÊÊW X
	LowerCase
ÊÊX a
)
ÊÊa b
{
ÁÁ 
if
ÈÈ 
(
ÈÈ 
char
ÈÈ  
.
ÈÈ  !
IsUpper
ÈÈ! (
(
ÈÈ( )
(
ÈÈ) *
char
ÈÈ* .
)
ÈÈ. /
charCode
ÈÈ/ 7
)
ÈÈ7 8
)
ÈÈ8 9
charCode
ÍÍ $
=
ÍÍ% &
char
ÍÍ' +
.
ÍÍ+ ,
ToLower
ÍÍ, 3
(
ÍÍ3 4
(
ÍÍ4 5
char
ÍÍ5 9
)
ÍÍ9 :
charCode
ÍÍ: B
)
ÍÍB C
;
ÍÍC D
}
ÎÎ 
else
ÏÏ 
if
ÏÏ 
(
ÏÏ 
(
ÏÏ !
m_FontStyleInternal
ÏÏ 1
&
ÏÏ2 3

FontStyles
ÏÏ4 >
.
ÏÏ> ?
	SmallCaps
ÏÏ? H
)
ÏÏH I
==
ÏÏJ L

FontStyles
ÏÏM W
.
ÏÏW X
	SmallCaps
ÏÏX a
)
ÏÏa b
{
ÌÌ 
if
ÓÓ 
(
ÓÓ 
char
ÓÓ  
.
ÓÓ  !
IsLower
ÓÓ! (
(
ÓÓ( )
(
ÓÓ) *
char
ÓÓ* .
)
ÓÓ. /
charCode
ÓÓ/ 7
)
ÓÓ7 8
)
ÓÓ8 9
{
ÔÔ !
smallCapsMultiplier
 /
=
0 1
$num
2 6
;
6 7
charCode
ÒÒ $
=
ÒÒ% &
char
ÒÒ' +
.
ÒÒ+ ,
ToUpper
ÒÒ, 3
(
ÒÒ3 4
(
ÒÒ4 5
char
ÒÒ5 9
)
ÒÒ9 :
charCode
ÒÒ: B
)
ÒÒB C
;
ÒÒC D
}
ÚÚ 
}
ÛÛ 
}
ÙÙ 
float
˝˝ 
baselineOffset
˝˝ $
=
˝˝% &
$num
˝˝' (
;
˝˝( )
float
˛˛ 
elementAscentLine
˛˛ '
=
˛˛( )
$num
˛˛* +
;
˛˛+ ,
float
ˇˇ  
elementDescentLine
ˇˇ (
=
ˇˇ) *
$num
ˇˇ+ ,
;
ˇˇ, -
if
ÄÄ 
(
ÄÄ 
m_textElementType
ÄÄ %
==
ÄÄ& (!
TMP_TextElementType
ÄÄ) <
.
ÄÄ< =
Sprite
ÄÄ= C
)
ÄÄC D
{
ÅÅ "
m_currentSpriteAsset
ÉÉ (
=
ÉÉ) *

m_textInfo
ÉÉ+ 5
.
ÉÉ5 6
characterInfo
ÉÉ6 C
[
ÉÉC D
m_characterCount
ÉÉD T
]
ÉÉT U
.
ÉÉU V
spriteAsset
ÉÉV a
;
ÉÉa b
m_spriteIndex
ÑÑ !
=
ÑÑ" #

m_textInfo
ÑÑ$ .
.
ÑÑ. /
characterInfo
ÑÑ/ <
[
ÑÑ< =
m_characterCount
ÑÑ= M
]
ÑÑM N
.
ÑÑN O
spriteIndex
ÑÑO Z
;
ÑÑZ [!
TMP_SpriteCharacter
ÜÜ '
sprite
ÜÜ( .
=
ÜÜ/ 0"
m_currentSpriteAsset
ÜÜ1 E
.
ÜÜE F"
spriteCharacterTable
ÜÜF Z
[
ÜÜZ [
m_spriteIndex
ÜÜ[ h
]
ÜÜh i
;
ÜÜi j
if
áá 
(
áá 
sprite
áá 
==
áá !
null
áá" &
)
áá& '
continue
áá( 0
;
áá0 1
if
ää 
(
ää 
charCode
ää  
==
ää! #
$num
ää$ &
)
ää& '
charCode
ãã  
=
ãã! "
$num
ãã# (
+
ãã) *
m_spriteIndex
ãã+ 8
;
ãã8 9
else
åå 
m_spriteColor
çç %
=
çç& '
s_colorWhite
çç( 4
;
çç4 5
if
êê 
(
êê "
m_currentSpriteAsset
êê ,
.
êê, -

m_FaceInfo
êê- 7
.
êê7 8
	pointSize
êê8 A
>
êêB C
$num
êêD E
)
êêE F
{
ëë 
float
íí 
spriteScale
íí )
=
íí* +
m_currentFontSize
íí, =
/
íí> ?"
m_currentSpriteAsset
íí@ T
.
ííT U

m_FaceInfo
ííU _
.
íí_ `
	pointSize
íí` i
*
ííj k#
m_currentSpriteAssetííl Ä
.ííÄ Å

m_FaceInfoííÅ ã
.ííã å
scaleííå ë
*ííí ì
(ííî ï 
m_isOrthographicííï •
?íí¶ ß
$numíí® ©
:íí™ ´
$numíí¨ ∞
)íí∞ ±
;íí± ≤!
currentElementScale
ìì +
=
ìì, -
sprite
ìì. 4
.
ìì4 5
m_Scale
ìì5 <
*
ìì= >
sprite
ìì? E
.
ììE F
m_Glyph
ììF M
.
ììM N
scale
ììN S
*
ììT U
spriteScale
ììV a
;
ììa b
elementAscentLine
îî )
=
îî* +"
m_currentSpriteAsset
îî, @
.
îî@ A

m_FaceInfo
îîA K
.
îîK L

ascentLine
îîL V
;
îîV W
baselineOffset
ïï &
=
ïï' ("
m_currentSpriteAsset
ïï) =
.
ïï= >

m_FaceInfo
ïï> H
.
ïïH I
baseline
ïïI Q
*
ïïR S
m_fontScale
ïïT _
*
ïï` a#
m_fontScaleMultiplier
ïïb w
*
ïïx y#
m_currentSpriteAssetïïz é
.ïïé è

m_FaceInfoïïè ô
.ïïô ö
scaleïïö ü
;ïïü † 
elementDescentLine
ññ *
=
ññ+ ,"
m_currentSpriteAsset
ññ- A
.
ññA B

m_FaceInfo
ññB L
.
ññL M
descentLine
ññM X
;
ññX Y
}
óó 
else
òò 
{
ôô 
float
öö 
spriteScale
öö )
=
öö* +
m_currentFontSize
öö, =
/
öö> ? 
m_currentFontAsset
öö@ R
.
ööR S

m_FaceInfo
ööS ]
.
öö] ^
	pointSize
öö^ g
*
ööh i 
m_currentFontAsset
ööj |
.
öö| }

m_FaceInfoöö} á
.ööá à
scaleööà ç
*ööé è
(ööê ë 
m_isOrthographicööë °
?öö¢ £
$numöö§ •
:öö¶ ß
$numöö® ¨
)öö¨ ≠
;öö≠ Æ!
currentElementScale
õõ +
=
õõ, - 
m_currentFontAsset
õõ. @
.
õõ@ A

m_FaceInfo
õõA K
.
õõK L

ascentLine
õõL V
/
õõW X
sprite
õõY _
.
õõ_ `
m_Glyph
õõ` g
.
õõg h
metrics
õõh o
.
õõo p
height
õõp v
*
õõw x
sprite
õõy 
.õõ Ä
m_ScaleõõÄ á
*õõà â
spriteõõä ê
.õõê ë
m_Glyphõõë ò
.õõò ô
scaleõõô û
*õõü †
spriteScaleõõ° ¨
;õõ¨ ≠
float
úú 

scaleDelta
úú (
=
úú) *
spriteScale
úú+ 6
/
úú7 8!
currentElementScale
úú9 L
;
úúL M
elementAscentLine
ùù )
=
ùù* + 
m_currentFontAsset
ùù, >
.
ùù> ?

m_FaceInfo
ùù? I
.
ùùI J

ascentLine
ùùJ T
*
ùùU V

scaleDelta
ùùW a
;
ùùa b
baselineOffset
ûû &
=
ûû' ( 
m_currentFontAsset
ûû) ;
.
ûû; <

m_FaceInfo
ûû< F
.
ûûF G
baseline
ûûG O
*
ûûP Q
m_fontScale
ûûR ]
*
ûû^ _#
m_fontScaleMultiplier
ûû` u
*
ûûv w!
m_currentFontAssetûûx ä
.ûûä ã

m_FaceInfoûûã ï
.ûûï ñ
scaleûûñ õ
;ûûõ ú 
elementDescentLine
üü *
=
üü+ , 
m_currentFontAsset
üü- ?
.
üü? @

m_FaceInfo
üü@ J
.
üüJ K
descentLine
üüK V
*
üüW X

scaleDelta
üüY c
;
üüc d
}
†† "
m_cached_TextElement
¢¢ (
=
¢¢) *
sprite
¢¢+ 1
;
¢¢1 2

m_textInfo
§§ 
.
§§ 
characterInfo
§§ ,
[
§§, -
m_characterCount
§§- =
]
§§= >
.
§§> ?
elementType
§§? J
=
§§K L!
TMP_TextElementType
§§M `
.
§§` a
Sprite
§§a g
;
§§g h

m_textInfo
•• 
.
•• 
characterInfo
•• ,
[
••, -
m_characterCount
••- =
]
••= >
.
••> ?
scale
••? D
=
••E F!
currentElementScale
••G Z
;
••Z [

m_textInfo
¶¶ 
.
¶¶ 
characterInfo
¶¶ ,
[
¶¶, -
m_characterCount
¶¶- =
]
¶¶= >
.
¶¶> ?
spriteAsset
¶¶? J
=
¶¶K L"
m_currentSpriteAsset
¶¶M a
;
¶¶a b

m_textInfo
ßß 
.
ßß 
characterInfo
ßß ,
[
ßß, -
m_characterCount
ßß- =
]
ßß= >
.
ßß> ?
	fontAsset
ßß? H
=
ßßI J 
m_currentFontAsset
ßßK ]
;
ßß] ^

m_textInfo
®® 
.
®® 
characterInfo
®® ,
[
®®, -
m_characterCount
®®- =
]
®®= >
.
®®> ?$
materialReferenceIndex
®®? U
=
®®V W$
m_currentMaterialIndex
®®X n
;
®®n o$
m_currentMaterialIndex
™™ *
=
™™+ ,#
previousMaterialIndex
™™- B
;
™™B C
padding
¨¨ 
=
¨¨ 
$num
¨¨ 
;
¨¨  
}
≠≠ 
else
ÆÆ 
if
ÆÆ 
(
ÆÆ 
m_textElementType
ÆÆ *
==
ÆÆ+ -!
TMP_TextElementType
ÆÆ. A
.
ÆÆA B
	Character
ÆÆB K
)
ÆÆK L
{
ØØ "
m_cached_TextElement
∞∞ (
=
∞∞) *

m_textInfo
∞∞+ 5
.
∞∞5 6
characterInfo
∞∞6 C
[
∞∞C D
m_characterCount
∞∞D T
]
∞∞T U
.
∞∞U V
textElement
∞∞V a
;
∞∞a b
if
±± 
(
±± "
m_cached_TextElement
±± ,
==
±±- /
null
±±0 4
)
±±4 5
continue
±±6 >
;
±±> ? 
m_currentFontAsset
≥≥ &
=
≥≥' (

m_textInfo
≥≥) 3
.
≥≥3 4
characterInfo
≥≥4 A
[
≥≥A B
m_characterCount
≥≥B R
]
≥≥R S
.
≥≥S T
	fontAsset
≥≥T ]
;
≥≥] ^
m_currentMaterial
¥¥ %
=
¥¥& '

m_textInfo
¥¥( 2
.
¥¥2 3
characterInfo
¥¥3 @
[
¥¥@ A
m_characterCount
¥¥A Q
]
¥¥Q R
.
¥¥R S
material
¥¥S [
;
¥¥[ \$
m_currentMaterialIndex
µµ *
=
µµ+ ,

m_textInfo
µµ- 7
.
µµ7 8
characterInfo
µµ8 E
[
µµE F
m_characterCount
µµF V
]
µµV W
.
µµW X$
materialReferenceIndex
µµX n
;
µµn o
float
∏∏ 
adjustedScale
∏∏ '
;
∏∏' (
if
ππ 
(
ππ "
isInjectingCharacter
ππ ,
&&
ππ- /%
m_InternalParsingBuffer
ππ0 G
[
ππG H
i
ππH I
]
ππI J
.
ππJ K
unicode
ππK R
==
ππS U
$num
ππV Z
&&
ππ[ ]
m_characterCount
ππ^ n
!=
ππo q%
m_firstCharacterOfLineππr à
)ππà â
adjustedScale
∫∫ %
=
∫∫& '

m_textInfo
∫∫( 2
.
∫∫2 3
characterInfo
∫∫3 @
[
∫∫@ A
m_characterCount
∫∫A Q
-
∫∫R S
$num
∫∫T U
]
∫∫U V
.
∫∫V W
	pointSize
∫∫W `
*
∫∫a b!
smallCapsMultiplier
∫∫c v
/
∫∫w x!
m_currentFontAsset∫∫y ã
.∫∫ã å

m_FaceInfo∫∫å ñ
.∫∫ñ ó
	pointSize∫∫ó †
*∫∫° ¢"
m_currentFontAsset∫∫£ µ
.∫∫µ ∂

m_FaceInfo∫∫∂ ¿
.∫∫¿ ¡
scale∫∫¡ ∆
*∫∫« »
(∫∫…   
m_isOrthographic∫∫  ⁄
?∫∫€ ‹
$num∫∫› ﬁ
:∫∫ﬂ ‡
$num∫∫· Â
)∫∫Â Ê
;∫∫Ê Á
else
ªª 
adjustedScale
ºº %
=
ºº& '
m_currentFontSize
ºº( 9
*
ºº: ;!
smallCapsMultiplier
ºº< O
/
ººP Q 
m_currentFontAsset
ººR d
.
ººd e

m_FaceInfo
ººe o
.
ººo p
	pointSize
ººp y
*
ººz {!
m_currentFontAssetºº| é
.ººé è

m_FaceInfoººè ô
.ººô ö
scaleººö ü
*ºº† °
(ºº¢ £ 
m_isOrthographicºº£ ≥
?ºº¥ µ
$numºº∂ ∑
:ºº∏ π
$numºº∫ æ
)ººæ ø
;ººø ¿
elementAscentLine
ææ %
=
ææ& ' 
m_currentFontAsset
ææ( :
.
ææ: ;

m_FaceInfo
ææ; E
.
ææE F

ascentLine
ææF P
;
ææP Q 
elementDescentLine
øø &
=
øø' ( 
m_currentFontAsset
øø) ;
.
øø; <

m_FaceInfo
øø< F
.
øøF G
descentLine
øøG R
;
øøR S!
currentElementScale
¡¡ '
=
¡¡( )
adjustedScale
¡¡* 7
*
¡¡8 9#
m_fontScaleMultiplier
¡¡: O
*
¡¡P Q"
m_cached_TextElement
¡¡R f
.
¡¡f g
m_Scale
¡¡g n
*
¡¡o p#
m_cached_TextElement¡¡q Ö
.¡¡Ö Ü
m_Glyph¡¡Ü ç
.¡¡ç é
scale¡¡é ì
;¡¡ì î
baselineOffset
¬¬ "
=
¬¬# $ 
m_currentFontAsset
¬¬% 7
.
¬¬7 8

m_FaceInfo
¬¬8 B
.
¬¬B C
baseline
¬¬C K
*
¬¬L M
adjustedScale
¬¬N [
*
¬¬\ ]#
m_fontScaleMultiplier
¬¬^ s
*
¬¬t u!
m_currentFontAsset¬¬v à
.¬¬à â

m_FaceInfo¬¬â ì
.¬¬ì î
scale¬¬î ô
;¬¬ô ö

m_textInfo
ƒƒ 
.
ƒƒ 
characterInfo
ƒƒ ,
[
ƒƒ, -
m_characterCount
ƒƒ- =
]
ƒƒ= >
.
ƒƒ> ?
elementType
ƒƒ? J
=
ƒƒK L!
TMP_TextElementType
ƒƒM `
.
ƒƒ` a
	Character
ƒƒa j
;
ƒƒj k

m_textInfo
≈≈ 
.
≈≈ 
characterInfo
≈≈ ,
[
≈≈, -
m_characterCount
≈≈- =
]
≈≈= >
.
≈≈> ?
scale
≈≈? D
=
≈≈E F!
currentElementScale
≈≈G Z
;
≈≈Z [
padding
«« 
=
«« $
m_currentMaterialIndex
«« 4
==
««5 7
$num
««8 9
?
««: ;
	m_padding
««< E
:
««F G
m_subTextObjects
««H X
[
««X Y$
m_currentMaterialIndex
««Y o
]
««o p
.
««p q
padding
««q x
;
««x y
}
»» 
float
—— +
currentElementUnmodifiedScale
—— 3
=
——4 5!
currentElementScale
——6 I
;
——I J
if
““ 
(
““ 
charCode
““ 
==
““ 
$num
““  $
||
““% '
charCode
““( 0
==
““1 3
$num
““4 8
)
““8 9!
currentElementScale
”” '
=
””( )
$num
””* +
;
””+ ,

m_textInfo
ÿÿ 
.
ÿÿ 
characterInfo
ÿÿ (
[
ÿÿ( )
m_characterCount
ÿÿ) 9
]
ÿÿ9 :
.
ÿÿ: ;
	character
ÿÿ; D
=
ÿÿE F
(
ÿÿG H
char
ÿÿH L
)
ÿÿL M
charCode
ÿÿM U
;
ÿÿU V

m_textInfo
ŸŸ 
.
ŸŸ 
characterInfo
ŸŸ (
[
ŸŸ( )
m_characterCount
ŸŸ) 9
]
ŸŸ9 :
.
ŸŸ: ;
	pointSize
ŸŸ; D
=
ŸŸE F
m_currentFontSize
ŸŸG X
;
ŸŸX Y

m_textInfo
⁄⁄ 
.
⁄⁄ 
characterInfo
⁄⁄ (
[
⁄⁄( )
m_characterCount
⁄⁄) 9
]
⁄⁄9 :
.
⁄⁄: ;
color
⁄⁄; @
=
⁄⁄A B
m_htmlColor
⁄⁄C N
;
⁄⁄N O

m_textInfo
€€ 
.
€€ 
characterInfo
€€ (
[
€€( )
m_characterCount
€€) 9
]
€€9 :
.
€€: ;
underlineColor
€€; I
=
€€J K
m_underlineColor
€€L \
;
€€\ ]

m_textInfo
‹‹ 
.
‹‹ 
characterInfo
‹‹ (
[
‹‹( )
m_characterCount
‹‹) 9
]
‹‹9 :
.
‹‹: ; 
strikethroughColor
‹‹; M
=
‹‹N O"
m_strikethroughColor
‹‹P d
;
‹‹d e

m_textInfo
›› 
.
›› 
characterInfo
›› (
[
››( )
m_characterCount
››) 9
]
››9 :
.
››: ;
highlightState
››; I
=
››J K#
m_HighlightStateStack
››L a
.
››a b
current
››b i
;
››i j

m_textInfo
ﬁﬁ 
.
ﬁﬁ 
characterInfo
ﬁﬁ (
[
ﬁﬁ( )
m_characterCount
ﬁﬁ) 9
]
ﬁﬁ9 :
.
ﬁﬁ: ;
style
ﬁﬁ; @
=
ﬁﬁA B!
m_FontStyleInternal
ﬁﬁC V
;
ﬁﬁV W
GlyphMetrics
·· !
currentGlyphMetrics
·· 0
=
··1 2"
m_cached_TextElement
··3 G
.
··G H
m_Glyph
··H O
.
··O P
metrics
··P W
;
··W X
bool
‰‰ 
isWhiteSpace
‰‰ !
=
‰‰" #
char
‰‰$ (
.
‰‰( )
IsWhiteSpace
‰‰) 5
(
‰‰5 6
(
‰‰6 7
char
‰‰7 ;
)
‰‰; <
charCode
‰‰< D
)
‰‰D E
;
‰‰E F"
TMP_GlyphValueRecord
ÈÈ $
glyphAdjustments
ÈÈ% 5
=
ÈÈ6 7
new
ÈÈ8 ;"
TMP_GlyphValueRecord
ÈÈ< P
(
ÈÈP Q
)
ÈÈQ R
;
ÈÈR S
float
ÍÍ (
characterSpacingAdjustment
ÍÍ 0
=
ÍÍ1 2 
m_characterSpacing
ÍÍ3 E
;
ÍÍE F0
"m_GlyphHorizontalAdvanceAdjustment
ÎÎ 2
=
ÎÎ3 4
$num
ÎÎ5 6
;
ÎÎ6 7
if
ÏÏ 
(
ÏÏ 
m_enableKerning
ÏÏ #
)
ÏÏ# $
{
ÌÌ +
TMP_GlyphPairAdjustmentRecord
ÚÚ 1
adjustmentPair
ÚÚ2 @
;
ÚÚ@ A
uint
ÛÛ 
baseGlyphIndex
ÛÛ '
=
ÛÛ( )"
m_cached_TextElement
ÛÛ* >
.
ÛÛ> ?
m_GlyphIndex
ÛÛ? K
;
ÛÛK L
if
ıı 
(
ıı 
m_characterCount
ıı (
<
ıı) *!
totalCharacterCount
ıı+ >
-
ıı? @
$num
ııA B
)
ııB C
{
ˆˆ 
uint
˜˜ 
nextGlyphIndex
˜˜ +
=
˜˜, -

m_textInfo
˜˜. 8
.
˜˜8 9
characterInfo
˜˜9 F
[
˜˜F G
m_characterCount
˜˜G W
+
˜˜X Y
$num
˜˜Z [
]
˜˜[ \
.
˜˜\ ]
textElement
˜˜] h
.
˜˜h i
m_GlyphIndex
˜˜i u
;
˜˜u v
uint
¯¯ 
key
¯¯  
=
¯¯! "
nextGlyphIndex
¯¯# 1
<<
¯¯2 4
$num
¯¯5 7
|
¯¯8 9
baseGlyphIndex
¯¯: H
;
¯¯H I
if
˙˙ 
(
˙˙  
m_currentFontAsset
˙˙ .
.
˙˙. / 
m_FontFeatureTable
˙˙/ A
.
˙˙A B9
+m_GlyphPairAdjustmentRecordLookupDictionary
˙˙B m
.
˙˙m n
TryGetValue
˙˙n y
(
˙˙y z
key
˙˙z }
,
˙˙} ~
out˙˙ Ç
adjustmentPair˙˙É ë
)˙˙ë í
)˙˙í ì
{
˚˚ 
glyphAdjustments
¸¸ ,
=
¸¸- .
adjustmentPair
¸¸/ =
.
¸¸= >%
m_FirstAdjustmentRecord
¸¸> U
.
¸¸U V 
m_GlyphValueRecord
¸¸V h
;
¸¸h i(
characterSpacingAdjustment
˝˝ 6
=
˝˝7 8
(
˝˝9 :
adjustmentPair
˝˝: H
.
˝˝H I"
m_FeatureLookupFlags
˝˝I ]
&
˝˝^ _$
FontFeatureLookupFlags
˝˝` v
.
˝˝v w'
IgnoreSpacingAdjustments˝˝w è
)˝˝è ê
==˝˝ë ì&
FontFeatureLookupFlags˝˝î ™
.˝˝™ ´(
IgnoreSpacingAdjustments˝˝´ √
?˝˝ƒ ≈
$num˝˝∆ «
:˝˝» …*
characterSpacingAdjustment˝˝  ‰
;˝˝‰ Â
}
˛˛ 
}
ˇˇ 
if
ÅÅ 
(
ÅÅ 
m_characterCount
ÅÅ (
>=
ÅÅ) +
$num
ÅÅ, -
)
ÅÅ- .
{
ÇÇ 
uint
ÉÉ  
previousGlyphIndex
ÉÉ /
=
ÉÉ0 1

m_textInfo
ÉÉ2 <
.
ÉÉ< =
characterInfo
ÉÉ= J
[
ÉÉJ K
m_characterCount
ÉÉK [
-
ÉÉ\ ]
$num
ÉÉ^ _
]
ÉÉ_ `
.
ÉÉ` a
textElement
ÉÉa l
.
ÉÉl m
m_GlyphIndex
ÉÉm y
;
ÉÉy z
uint
ÑÑ 
key
ÑÑ  
=
ÑÑ! "
baseGlyphIndex
ÑÑ# 1
<<
ÑÑ2 4
$num
ÑÑ5 7
|
ÑÑ8 9 
previousGlyphIndex
ÑÑ: L
;
ÑÑL M
if
ÜÜ 
(
ÜÜ  
m_currentFontAsset
ÜÜ .
.
ÜÜ. / 
m_FontFeatureTable
ÜÜ/ A
.
ÜÜA B9
+m_GlyphPairAdjustmentRecordLookupDictionary
ÜÜB m
.
ÜÜm n
TryGetValue
ÜÜn y
(
ÜÜy z
key
ÜÜz }
,
ÜÜ} ~
outÜÜ Ç
adjustmentPairÜÜÉ ë
)ÜÜë í
)ÜÜí ì
{
áá 
glyphAdjustments
àà ,
+=
àà- /
adjustmentPair
àà0 >
.
àà> ?&
m_SecondAdjustmentRecord
àà? W
.
ààW X 
m_GlyphValueRecord
ààX j
;
ààj k(
characterSpacingAdjustment
ââ 6
=
ââ7 8
(
ââ9 :
adjustmentPair
ââ: H
.
ââH I"
m_FeatureLookupFlags
ââI ]
&
ââ^ _$
FontFeatureLookupFlags
ââ` v
.
ââv w'
IgnoreSpacingAdjustmentsââw è
)ââè ê
==ââë ì&
FontFeatureLookupFlagsââî ™
.ââ™ ´(
IgnoreSpacingAdjustmentsââ´ √
?ââƒ ≈
$numââ∆ «
:ââ» …*
characterSpacingAdjustmentââ  ‰
;ââ‰ Â
}
ää 
}
ãã 0
"m_GlyphHorizontalAdvanceAdjustment
çç 6
=
çç7 8
glyphAdjustments
çç9 I
.
ççI J

m_XAdvance
ççJ T
;
ççT U
}
íí 
if
òò 
(
òò 
m_isRightToLeft
òò #
)
òò# $
{
ôô 

m_xAdvance
öö 
-=
öö !!
currentGlyphMetrics
öö" 5
.
öö5 6
horizontalAdvance
öö6 G
*
ööH I
(
ööJ K
$num
ööK L
-
ööM N!
m_charWidthAdjDelta
ööO b
)
ööb c
*
ööd e!
currentElementScale
ööf y
;
ööy z
if
úú 
(
úú 
isWhiteSpace
úú $
||
úú% '
charCode
úú( 0
==
úú1 3
$num
úú4 :
)
úú: ;

m_xAdvance
ùù "
-=
ùù# %
m_wordSpacing
ùù& 3
*
ùù4 5
currentEmScale
ùù6 D
;
ùùD E
}
ûû 
float
§§ 
monoAdvance
§§ !
=
§§" #
$num
§§$ %
;
§§% &
if
•• 
(
•• 
m_monoSpacing
•• !
!=
••" $
$num
••% &
)
••& '
{
¶¶ 
monoAdvance
ßß 
=
ßß  !
(
ßß" #
m_monoSpacing
ßß# 0
/
ßß1 2
$num
ßß3 4
-
ßß5 6
(
ßß7 8!
currentGlyphMetrics
ßß8 K
.
ßßK L
width
ßßL Q
/
ßßR S
$num
ßßT U
+
ßßV W!
currentGlyphMetrics
ßßX k
.
ßßk l 
horizontalBearingX
ßßl ~
)
ßß~ 
*ßßÄ Å#
currentElementScaleßßÇ ï
)ßßï ñ
*ßßó ò
(ßßô ö
$numßßö õ
-ßßú ù#
m_charWidthAdjDeltaßßû ±
)ßß± ≤
;ßß≤ ≥

m_xAdvance
®® 
+=
®® !
monoAdvance
®®" -
;
®®- .
}
©© 
if
ØØ 
(
ØØ 
m_textElementType
ØØ %
==
ØØ& (!
TMP_TextElementType
ØØ) <
.
ØØ< =
	Character
ØØ= F
&&
ØØG I
!
ØØJ K 
isUsingAltTypeface
ØØK ]
&&
ØØ^ `
(
ØØa b
(
ØØb c!
m_FontStyleInternal
ØØc v
&
ØØw x

FontStylesØØy É
.ØØÉ Ñ
BoldØØÑ à
)ØØà â
==ØØä å

FontStylesØØç ó
.ØØó ò
BoldØØò ú
)ØØú ù
)ØØù û
{
∞∞ 
if
±± 
(
±± 
m_currentMaterial
±± )
!=
±±* ,
null
±±- 1
&&
±±2 4
m_currentMaterial
±±5 F
.
±±F G
HasProperty
±±G R
(
±±R S
ShaderUtilities
±±S b
.
±±b c
ID_GradientScale
±±c s
)
±±s t
)
±±t u
{
≤≤ 
float
≥≥ 
gradientScale
≥≥ +
=
≥≥, -
m_currentMaterial
≥≥. ?
.
≥≥? @
GetFloat
≥≥@ H
(
≥≥H I
ShaderUtilities
≥≥I X
.
≥≥X Y
ID_GradientScale
≥≥Y i
)
≥≥i j
;
≥≥j k
style_padding
¥¥ %
=
¥¥& ' 
m_currentFontAsset
¥¥( :
.
¥¥: ;
	boldStyle
¥¥; D
/
¥¥E F
$num
¥¥G K
*
¥¥L M
gradientScale
¥¥N [
*
¥¥\ ]
m_currentMaterial
¥¥^ o
.
¥¥o p
GetFloat
¥¥p x
(
¥¥x y
ShaderUtilities¥¥y à
.¥¥à â
ID_ScaleRatio_A¥¥â ò
)¥¥ò ô
;¥¥ô ö
if
∑∑ 
(
∑∑ 
style_padding
∑∑ )
+
∑∑* +
padding
∑∑, 3
>
∑∑4 5
gradientScale
∑∑6 C
)
∑∑C D
padding
∏∏ #
=
∏∏$ %
gradientScale
∏∏& 3
-
∏∏4 5
style_padding
∏∏6 C
;
∏∏C D
}
ππ 
else
∫∫ 
style_padding
ªª %
=
ªª& '
$num
ªª( )
;
ªª) *#
boldSpacingAdjustment
ΩΩ )
=
ΩΩ* + 
m_currentFontAsset
ΩΩ, >
.
ΩΩ> ?
boldSpacing
ΩΩ? J
;
ΩΩJ K
}
ææ 
else
øø 
{
¿¿ 
if
¡¡ 
(
¡¡ 
m_currentMaterial
¡¡ )
!=
¡¡* ,
null
¡¡- 1
&&
¡¡2 4
m_currentMaterial
¡¡5 F
.
¡¡F G
HasProperty
¡¡G R
(
¡¡R S
ShaderUtilities
¡¡S b
.
¡¡b c
ID_GradientScale
¡¡c s
)
¡¡s t
)
¡¡t u
{
¬¬ 
float
√√ 
gradientScale
√√ +
=
√√, -
m_currentMaterial
√√. ?
.
√√? @
GetFloat
√√@ H
(
√√H I
ShaderUtilities
√√I X
.
√√X Y
ID_GradientScale
√√Y i
)
√√i j
;
√√j k
style_padding
ƒƒ %
=
ƒƒ& ' 
m_currentFontAsset
ƒƒ( :
.
ƒƒ: ;
normalStyle
ƒƒ; F
/
ƒƒG H
$num
ƒƒI M
*
ƒƒN O
gradientScale
ƒƒP ]
*
ƒƒ^ _
m_currentMaterial
ƒƒ` q
.
ƒƒq r
GetFloat
ƒƒr z
(
ƒƒz {
ShaderUtilitiesƒƒ{ ä
.ƒƒä ã
ID_ScaleRatio_Aƒƒã ö
)ƒƒö õ
;ƒƒõ ú
if
«« 
(
«« 
style_padding
«« )
+
««* +
padding
««, 3
>
««4 5
gradientScale
««6 C
)
««C D
padding
»» #
=
»»$ %
gradientScale
»»& 3
-
»»4 5
style_padding
»»6 C
;
»»C D
}
…… 
else
   
style_padding
ÀÀ %
=
ÀÀ& '
$num
ÀÀ( )
;
ÀÀ) *#
boldSpacingAdjustment
ÕÕ )
=
ÕÕ* +
$num
ÕÕ, -
;
ÕÕ- .
}
ŒŒ 
Vector3
◊◊ 
top_left
◊◊  
;
◊◊  !
top_left
ÿÿ 
.
ÿÿ 
x
ÿÿ 
=
ÿÿ 

m_xAdvance
ÿÿ '
+
ÿÿ( )
(
ÿÿ* +
(
ÿÿ+ ,!
currentGlyphMetrics
ÿÿ, ?
.
ÿÿ? @ 
horizontalBearingX
ÿÿ@ R
-
ÿÿS T
padding
ÿÿU \
-
ÿÿ] ^
style_padding
ÿÿ_ l
+
ÿÿm n
glyphAdjustments
ÿÿo 
.ÿÿ Ä
m_XPlacementÿÿÄ å
)ÿÿå ç
*ÿÿé è#
currentElementScaleÿÿê £
*ÿÿ§ •
(ÿÿ¶ ß
$numÿÿß ®
-ÿÿ© ™#
m_charWidthAdjDeltaÿÿ´ æ
)ÿÿæ ø
)ÿÿø ¿
;ÿÿ¿ ¡
top_left
ŸŸ 
.
ŸŸ 
y
ŸŸ 
=
ŸŸ 
baselineOffset
ŸŸ +
+
ŸŸ, -
(
ŸŸ. /!
currentGlyphMetrics
ŸŸ/ B
.
ŸŸB C 
horizontalBearingY
ŸŸC U
+
ŸŸV W
padding
ŸŸX _
+
ŸŸ` a
glyphAdjustments
ŸŸb r
.
ŸŸr s
m_YPlacement
ŸŸs 
)ŸŸ Ä
*ŸŸÅ Ç#
currentElementScaleŸŸÉ ñ
-ŸŸó ò
m_lineOffsetŸŸô •
+ŸŸ¶ ß 
m_baselineOffsetŸŸ® ∏
;ŸŸ∏ π
top_left
⁄⁄ 
.
⁄⁄ 
z
⁄⁄ 
=
⁄⁄ 
$num
⁄⁄ 
;
⁄⁄ 
Vector3
‹‹ 
bottom_left
‹‹ #
;
‹‹# $
bottom_left
›› 
.
›› 
x
›› 
=
›› 
top_left
››  (
.
››( )
x
››) *
;
››* +
bottom_left
ﬁﬁ 
.
ﬁﬁ 
y
ﬁﬁ 
=
ﬁﬁ 
top_left
ﬁﬁ  (
.
ﬁﬁ( )
y
ﬁﬁ) *
-
ﬁﬁ+ ,
(
ﬁﬁ- .
(
ﬁﬁ. /!
currentGlyphMetrics
ﬁﬁ/ B
.
ﬁﬁB C
height
ﬁﬁC I
+
ﬁﬁJ K
padding
ﬁﬁL S
*
ﬁﬁT U
$num
ﬁﬁV W
)
ﬁﬁW X
*
ﬁﬁY Z!
currentElementScale
ﬁﬁ[ n
)
ﬁﬁn o
;
ﬁﬁo p
bottom_left
ﬂﬂ 
.
ﬂﬂ 
z
ﬂﬂ 
=
ﬂﬂ 
$num
ﬂﬂ  !
;
ﬂﬂ! "
Vector3
·· 
	top_right
·· !
;
··! "
	top_right
‚‚ 
.
‚‚ 
x
‚‚ 
=
‚‚ 
bottom_left
‚‚ )
.
‚‚) *
x
‚‚* +
+
‚‚, -
(
‚‚. /
(
‚‚/ 0!
currentGlyphMetrics
‚‚0 C
.
‚‚C D
width
‚‚D I
+
‚‚J K
padding
‚‚L S
*
‚‚T U
$num
‚‚V W
+
‚‚X Y
style_padding
‚‚Z g
*
‚‚h i
$num
‚‚j k
)
‚‚k l
*
‚‚m n"
currentElementScale‚‚o Ç
*‚‚É Ñ
(‚‚Ö Ü
$num‚‚Ü á
-‚‚à â#
m_charWidthAdjDelta‚‚ä ù
)‚‚ù û
)‚‚û ü
;‚‚ü †
	top_right
„„ 
.
„„ 
y
„„ 
=
„„ 
top_left
„„ &
.
„„& '
y
„„' (
;
„„( )
	top_right
‰‰ 
.
‰‰ 
z
‰‰ 
=
‰‰ 
$num
‰‰ 
;
‰‰  
Vector3
ÊÊ 
bottom_right
ÊÊ $
;
ÊÊ$ %
bottom_right
ÁÁ 
.
ÁÁ 
x
ÁÁ 
=
ÁÁ  
	top_right
ÁÁ! *
.
ÁÁ* +
x
ÁÁ+ ,
;
ÁÁ, -
bottom_right
ËË 
.
ËË 
y
ËË 
=
ËË  
bottom_left
ËË! ,
.
ËË, -
y
ËË- .
;
ËË. /
bottom_right
ÈÈ 
.
ÈÈ 
z
ÈÈ 
=
ÈÈ  
$num
ÈÈ! "
;
ÈÈ" #
if
ÛÛ 
(
ÛÛ 
m_textElementType
ÛÛ %
==
ÛÛ& (!
TMP_TextElementType
ÛÛ) <
.
ÛÛ< =
	Character
ÛÛ= F
&&
ÛÛG I
!
ÛÛJ K 
isUsingAltTypeface
ÛÛK ]
&&
ÛÛ^ `
(
ÛÛa b
(
ÛÛb c!
m_FontStyleInternal
ÛÛc v
&
ÛÛw x

FontStylesÛÛy É
.ÛÛÉ Ñ
ItalicÛÛÑ ä
)ÛÛä ã
==ÛÛå é

FontStylesÛÛè ô
.ÛÛô ö
ItalicÛÛö †
)ÛÛ† °
)ÛÛ° ¢
{
ÙÙ 
float
ˆˆ 
shear_value
ˆˆ %
=
ˆˆ& '
m_ItalicAngle
ˆˆ( 5
*
ˆˆ6 7
$num
ˆˆ8 =
;
ˆˆ= >
Vector3
˜˜ 
topShear
˜˜ $
=
˜˜% &
new
˜˜' *
Vector3
˜˜+ 2
(
˜˜2 3
shear_value
˜˜3 >
*
˜˜? @
(
˜˜A B
(
˜˜B C!
currentGlyphMetrics
˜˜C V
.
˜˜V W 
horizontalBearingY
˜˜W i
+
˜˜j k
padding
˜˜l s
+
˜˜t u
style_padding˜˜v É
)˜˜É Ñ
*˜˜Ö Ü#
currentElementScale˜˜á ö
)˜˜ö õ
,˜˜õ ú
$num˜˜ù û
,˜˜û ü
$num˜˜† °
)˜˜° ¢
;˜˜¢ £
Vector3
¯¯ 
bottomShear
¯¯ '
=
¯¯( )
new
¯¯* -
Vector3
¯¯. 5
(
¯¯5 6
shear_value
¯¯6 A
*
¯¯B C
(
¯¯D E
(
¯¯E F
(
¯¯F G!
currentGlyphMetrics
¯¯G Z
.
¯¯Z [ 
horizontalBearingY
¯¯[ m
-
¯¯n o"
currentGlyphMetrics¯¯p É
.¯¯É Ñ
height¯¯Ñ ä
-¯¯ã å
padding¯¯ç î
-¯¯ï ñ
style_padding¯¯ó §
)¯¯§ •
)¯¯• ¶
*¯¯ß ®#
currentElementScale¯¯© º
)¯¯º Ω
,¯¯Ω æ
$num¯¯ø ¿
,¯¯¿ ¡
$num¯¯¬ √
)¯¯√ ƒ
;¯¯ƒ ≈
Vector3
˙˙ 
shearAdjustment
˙˙ +
=
˙˙, -
new
˙˙. 1
Vector3
˙˙2 9
(
˙˙9 :
(
˙˙: ;
topShear
˙˙; C
.
˙˙C D
x
˙˙D E
-
˙˙F G
bottomShear
˙˙H S
.
˙˙S T
x
˙˙T U
)
˙˙U V
/
˙˙W X
$num
˙˙Y Z
,
˙˙Z [
$num
˙˙\ ]
,
˙˙] ^
$num
˙˙_ `
)
˙˙` a
;
˙˙a b
top_left
¸¸ 
=
¸¸ 
top_left
¸¸ '
+
¸¸( )
topShear
¸¸* 2
-
¸¸3 4
shearAdjustment
¸¸5 D
;
¸¸D E
bottom_left
˝˝ 
=
˝˝  !
bottom_left
˝˝" -
+
˝˝. /
bottomShear
˝˝0 ;
-
˝˝< =
shearAdjustment
˝˝> M
;
˝˝M N
	top_right
˛˛ 
=
˛˛ 
	top_right
˛˛  )
+
˛˛* +
topShear
˛˛, 4
-
˛˛5 6
shearAdjustment
˛˛7 F
;
˛˛F G
bottom_right
ˇˇ  
=
ˇˇ! "
bottom_right
ˇˇ# /
+
ˇˇ0 1
bottomShear
ˇˇ2 =
-
ˇˇ> ?
shearAdjustment
ˇˇ@ O
;
ˇˇO P
}
ÄÄ 
if
ÜÜ 
(
ÜÜ 
m_isFXMatrixSet
ÜÜ #
)
ÜÜ# $
{
áá 
if
ââ 
(
ââ 

m_FXMatrix
ââ "
.
ââ" #

lossyScale
ââ# -
.
ââ- .
x
ââ. /
!=
ââ0 2
$num
ââ3 4
)
ââ4 5
{
ää 
}
èè 
Vector3
ëë 
positionOffset
ëë *
=
ëë+ ,
(
ëë- .
	top_right
ëë. 7
+
ëë8 9
bottom_left
ëë: E
)
ëëE F
/
ëëG H
$num
ëëI J
;
ëëJ K
top_left
ìì 
=
ìì 

m_FXMatrix
ìì )
.
ìì) *
MultiplyPoint3x4
ìì* :
(
ìì: ;
top_left
ìì; C
-
ììD E
positionOffset
ììF T
)
ììT U
+
ììV W
positionOffset
ììX f
;
ììf g
bottom_left
îî 
=
îî  !

m_FXMatrix
îî" ,
.
îî, -
MultiplyPoint3x4
îî- =
(
îî= >
bottom_left
îî> I
-
îîJ K
positionOffset
îîL Z
)
îîZ [
+
îî\ ]
positionOffset
îî^ l
;
îîl m
	top_right
ïï 
=
ïï 

m_FXMatrix
ïï  *
.
ïï* +
MultiplyPoint3x4
ïï+ ;
(
ïï; <
	top_right
ïï< E
-
ïïF G
positionOffset
ïïH V
)
ïïV W
+
ïïX Y
positionOffset
ïïZ h
;
ïïh i
bottom_right
ññ  
=
ññ! "

m_FXMatrix
ññ# -
.
ññ- .
MultiplyPoint3x4
ññ. >
(
ññ> ?
bottom_right
ññ? K
-
ññL M
positionOffset
ññN \
)
ññ\ ]
+
ññ^ _
positionOffset
ññ` n
;
ññn o
}
óó 

m_textInfo
úú 
.
úú 
characterInfo
úú (
[
úú( )
m_characterCount
úú) 9
]
úú9 :
.
úú: ;

bottomLeft
úú; E
=
úúF G
bottom_left
úúH S
;
úúS T

m_textInfo
ùù 
.
ùù 
characterInfo
ùù (
[
ùù( )
m_characterCount
ùù) 9
]
ùù9 :
.
ùù: ;
topLeft
ùù; B
=
ùùC D
top_left
ùùE M
;
ùùM N

m_textInfo
ûû 
.
ûû 
characterInfo
ûû (
[
ûû( )
m_characterCount
ûû) 9
]
ûû9 :
.
ûû: ;
topRight
ûû; C
=
ûûD E
	top_right
ûûF O
;
ûûO P

m_textInfo
üü 
.
üü 
characterInfo
üü (
[
üü( )
m_characterCount
üü) 9
]
üü9 :
.
üü: ;
bottomRight
üü; F
=
üüG H
bottom_right
üüI U
;
üüU V

m_textInfo
°° 
.
°° 
characterInfo
°° (
[
°°( )
m_characterCount
°°) 9
]
°°9 :
.
°°: ;
origin
°°; A
=
°°B C

m_xAdvance
°°D N
;
°°N O

m_textInfo
¢¢ 
.
¢¢ 
characterInfo
¢¢ (
[
¢¢( )
m_characterCount
¢¢) 9
]
¢¢9 :
.
¢¢: ;
baseLine
¢¢; C
=
¢¢D E
baselineOffset
¢¢F T
-
¢¢U V
m_lineOffset
¢¢W c
+
¢¢d e
m_baselineOffset
¢¢f v
;
¢¢v w

m_textInfo
££ 
.
££ 
characterInfo
££ (
[
££( )
m_characterCount
££) 9
]
££9 :
.
££: ;
aspectRatio
££; F
=
££G H
(
££I J
	top_right
££J S
.
££S T
x
££T U
-
££V W
bottom_left
££X c
.
££c d
x
££d e
)
££e f
/
££g h
(
££i j
top_left
££j r
.
££r s
y
££s t
-
££u v
bottom_left££w Ç
.££Ç É
y££É Ñ
)££Ñ Ö
;££Ö Ü
float
¨¨ 
elementAscender
¨¨ %
=
¨¨& '
m_textElementType
¨¨( 9
==
¨¨: <!
TMP_TextElementType
¨¨= P
.
¨¨P Q
	Character
¨¨Q Z
?
≠≠ 
elementAscentLine
≠≠ '
*
≠≠( )!
currentElementScale
≠≠* =
/
≠≠> ?!
smallCapsMultiplier
≠≠@ S
+
≠≠T U
m_baselineOffset
≠≠V f
:
ÆÆ 
elementAscentLine
ÆÆ '
*
ÆÆ( )!
currentElementScale
ÆÆ* =
+
ÆÆ> ?
m_baselineOffset
ÆÆ@ P
;
ÆÆP Q
float
±± 
elementDescender
±± &
=
±±' (
m_textElementType
±±) :
==
±±; =!
TMP_TextElementType
±±> Q
.
±±Q R
	Character
±±R [
?
≤≤  
elementDescentLine
≤≤ (
*
≤≤) *!
currentElementScale
≤≤+ >
/
≤≤? @!
smallCapsMultiplier
≤≤A T
+
≤≤U V
m_baselineOffset
≤≤W g
:
≥≥  
elementDescentLine
≥≥ (
*
≥≥) *!
currentElementScale
≥≥+ >
+
≥≥? @
m_baselineOffset
≥≥A Q
;
≥≥Q R
float
µµ 
adjustedAscender
µµ &
=
µµ' (
elementAscender
µµ) 8
;
µµ8 9
float
∂∂ 
adjustedDescender
∂∂ '
=
∂∂( )
elementDescender
∂∂* :
;
∂∂: ;
bool
∏∏ $
isFirstCharacterOfLine
∏∏ +
=
∏∏, -
m_characterCount
∏∏. >
==
∏∏? A$
m_firstCharacterOfLine
∏∏B X
;
∏∏X Y
if
∫∫ 
(
∫∫ $
isFirstCharacterOfLine
∫∫ *
||
∫∫+ -
isWhiteSpace
∫∫. :
==
∫∫; =
false
∫∫> C
)
∫∫C D
{
ªª 
if
ΩΩ 
(
ΩΩ 
m_baselineOffset
ΩΩ (
!=
ΩΩ) +
$num
ΩΩ, -
)
ΩΩ- .
{
ææ 
adjustedAscender
øø (
=
øø) *
Mathf
øø+ 0
.
øø0 1
Max
øø1 4
(
øø4 5
(
øø5 6
elementAscender
øø6 E
-
øøF G
m_baselineOffset
øøH X
)
øøX Y
/
øøZ [#
m_fontScaleMultiplier
øø\ q
,
øøq r
adjustedAscenderøøs É
)øøÉ Ñ
;øøÑ Ö
adjustedDescender
¿¿ )
=
¿¿* +
Mathf
¿¿, 1
.
¿¿1 2
Min
¿¿2 5
(
¿¿5 6
(
¿¿6 7
elementDescender
¿¿7 G
-
¿¿H I
m_baselineOffset
¿¿J Z
)
¿¿Z [
/
¿¿\ ]#
m_fontScaleMultiplier
¿¿^ s
,
¿¿s t 
adjustedDescender¿¿u Ü
)¿¿Ü á
;¿¿á à
}
¡¡ 
m_maxLineAscender
√√ %
=
√√& '
Mathf
√√( -
.
√√- .
Max
√√. 1
(
√√1 2
adjustedAscender
√√2 B
,
√√B C
m_maxLineAscender
√√D U
)
√√U V
;
√√V W 
m_maxLineDescender
ƒƒ &
=
ƒƒ' (
Mathf
ƒƒ) .
.
ƒƒ. /
Min
ƒƒ/ 2
(
ƒƒ2 3
adjustedDescender
ƒƒ3 D
,
ƒƒD E 
m_maxLineDescender
ƒƒF X
)
ƒƒX Y
;
ƒƒY Z
}
≈≈ 
if
»» 
(
»» $
isFirstCharacterOfLine
»» *
||
»»+ -
isWhiteSpace
»». :
==
»»; =
false
»»> C
)
»»C D
{
…… 

m_textInfo
   
.
   
characterInfo
   ,
[
  , -
m_characterCount
  - =
]
  = >
.
  > ?
adjustedAscender
  ? O
=
  P Q
adjustedAscender
  R b
;
  b c

m_textInfo
ÀÀ 
.
ÀÀ 
characterInfo
ÀÀ ,
[
ÀÀ, -
m_characterCount
ÀÀ- =
]
ÀÀ= >
.
ÀÀ> ?
adjustedDescender
ÀÀ? P
=
ÀÀQ R
adjustedDescender
ÀÀS d
;
ÀÀd e
m_ElementAscender
ÕÕ %
=
ÕÕ& '

m_textInfo
ÕÕ( 2
.
ÕÕ2 3
characterInfo
ÕÕ3 @
[
ÕÕ@ A
m_characterCount
ÕÕA Q
]
ÕÕQ R
.
ÕÕR S
ascender
ÕÕS [
=
ÕÕ\ ]
elementAscender
ÕÕ^ m
-
ÕÕn o
m_lineOffset
ÕÕp |
;
ÕÕ| } 
m_ElementDescender
ŒŒ &
=
ŒŒ' (

m_textInfo
ŒŒ) 3
.
ŒŒ3 4
characterInfo
ŒŒ4 A
[
ŒŒA B
m_characterCount
ŒŒB R
]
ŒŒR S
.
ŒŒS T
	descender
ŒŒT ]
=
ŒŒ^ _
elementDescender
ŒŒ` p
-
ŒŒq r
m_lineOffset
ŒŒs 
;ŒŒ Ä
}
œœ 
else
–– 
{
—— 

m_textInfo
““ 
.
““ 
characterInfo
““ ,
[
““, -
m_characterCount
““- =
]
““= >
.
““> ?
adjustedAscender
““? O
=
““P Q
m_maxLineAscender
““R c
;
““c d

m_textInfo
”” 
.
”” 
characterInfo
”” ,
[
””, -
m_characterCount
””- =
]
””= >
.
””> ?
adjustedDescender
””? P
=
””Q R 
m_maxLineDescender
””S e
;
””e f
m_ElementAscender
’’ %
=
’’& '

m_textInfo
’’( 2
.
’’2 3
characterInfo
’’3 @
[
’’@ A
m_characterCount
’’A Q
]
’’Q R
.
’’R S
ascender
’’S [
=
’’\ ]
m_maxLineAscender
’’^ o
-
’’p q
m_lineOffset
’’r ~
;
’’~  
m_ElementDescender
÷÷ &
=
÷÷' (

m_textInfo
÷÷) 3
.
÷÷3 4
characterInfo
÷÷4 A
[
÷÷A B
m_characterCount
÷÷B R
]
÷÷R S
.
÷÷S T
	descender
÷÷T ]
=
÷÷^ _ 
m_maxLineDescender
÷÷` r
-
÷÷s t
m_lineOffset÷÷u Å
;÷÷Å Ç
}
◊◊ 
if
⁄⁄ 
(
⁄⁄ 
m_lineNumber
⁄⁄  
==
⁄⁄! #
$num
⁄⁄$ %
||
⁄⁄& (
m_isNewPage
⁄⁄) 4
)
⁄⁄4 5
{
€€ 
if
‹‹ 
(
‹‹ $
isFirstCharacterOfLine
‹‹ .
||
‹‹/ 1
isWhiteSpace
‹‹2 >
==
‹‹? A
false
‹‹B G
)
‹‹G H
{
›› 
m_maxTextAscender
ﬁﬁ )
=
ﬁﬁ* +
m_maxLineAscender
ﬁﬁ, =
;
ﬁﬁ= >
m_maxCapHeight
ﬂﬂ &
=
ﬂﬂ' (
Mathf
ﬂﬂ) .
.
ﬂﬂ. /
Max
ﬂﬂ/ 2
(
ﬂﬂ2 3
m_maxCapHeight
ﬂﬂ3 A
,
ﬂﬂA B 
m_currentFontAsset
ﬂﬂC U
.
ﬂﬂU V

m_FaceInfo
ﬂﬂV `
.
ﬂﬂ` a
capLine
ﬂﬂa h
*
ﬂﬂi j!
currentElementScale
ﬂﬂk ~
/ﬂﬂ Ä#
smallCapsMultiplierﬂﬂÅ î
)ﬂﬂî ï
;ﬂﬂï ñ
}
‡‡ 
}
·· 
if
‰‰ 
(
‰‰ 
m_lineOffset
‰‰  
==
‰‰! #
$num
‰‰$ %
)
‰‰% &
{
ÂÂ 
if
ÊÊ 
(
ÊÊ $
isFirstCharacterOfLine
ÊÊ .
||
ÊÊ/ 1
isWhiteSpace
ÊÊ2 >
==
ÊÊ? A
false
ÊÊB G
)
ÊÊG H
m_PageAscender
ÁÁ &
=
ÁÁ' (
m_PageAscender
ÁÁ) 7
>
ÁÁ8 9
elementAscender
ÁÁ: I
?
ÁÁJ K
m_PageAscender
ÁÁL Z
:
ÁÁ[ \
elementAscender
ÁÁ] l
;
ÁÁl m
}
ËË 

m_textInfo
 
.
 
characterInfo
 (
[
( )
m_characterCount
) 9
]
9 :
.
: ;
	isVisible
; D
=
E F
false
G L
;
L M
bool
ÚÚ  
isJustifiedOrFlush
ÚÚ '
=
ÚÚ( )
(
ÚÚ* +!
m_lineJustification
ÚÚ+ >
&
ÚÚ? @(
HorizontalAlignmentOptions
ÚÚA [
.
ÚÚ[ \
Flush
ÚÚ\ a
)
ÚÚa b
==
ÚÚc e)
HorizontalAlignmentOptionsÚÚf Ä
.ÚÚÄ Å
FlushÚÚÅ Ü
||ÚÚá â
(ÚÚä ã#
m_lineJustificationÚÚã û
&ÚÚü †*
HorizontalAlignmentOptionsÚÚ° ª
.ÚÚª º
	JustifiedÚÚº ≈
)ÚÚ≈ ∆
==ÚÚ« …*
HorizontalAlignmentOptionsÚÚ  ‰
.ÚÚ‰ Â
	JustifiedÚÚÂ Ó
;ÚÚÓ Ô
if
ˆˆ 
(
ˆˆ 
charCode
ˆˆ 
==
ˆˆ 
$num
ˆˆ  !
||
ˆˆ" $
(
ˆˆ% &
isWhiteSpace
ˆˆ& 2
==
ˆˆ3 5
false
ˆˆ6 ;
&&
ˆˆ< >
charCode
ˆˆ? G
!=
ˆˆH J
$num
ˆˆK Q
&&
ˆˆR T
charCode
ˆˆU ]
!=
ˆˆ^ `
$num
ˆˆa e
&&
ˆˆf h
charCode
ˆˆi q
!=
ˆˆr t
$num
ˆˆu y
)
ˆˆy z
||
ˆˆ{ }
(
ˆˆ~ 
charCodeˆˆ á
==ˆˆà ä
$numˆˆã è
&&ˆˆê í#
isSoftHyphenIgnoredˆˆì ¶
==ˆˆß ©
falseˆˆ™ Ø
)ˆˆØ ∞
||ˆˆ± ≥!
m_textElementTypeˆˆ¥ ≈
==ˆˆ∆ »#
TMP_TextElementTypeˆˆ… ‹
.ˆˆ‹ ›
Spriteˆˆ› „
)ˆˆ„ ‰
{
˜˜ 

m_textInfo
¸¸ 
.
¸¸ 
characterInfo
¸¸ ,
[
¸¸, -
m_characterCount
¸¸- =
]
¸¸= >
.
¸¸> ?
	isVisible
¸¸? H
=
¸¸I J
true
¸¸K O
;
¸¸O P
float
°° 

marginLeft
°° $
=
°°% &
m_marginLeft
°°' 3
;
°°3 4
float
¢¢ 
marginRight
¢¢ %
=
¢¢& '
m_marginRight
¢¢( 5
;
¢¢5 6
if
•• 
(
•• "
isInjectingCharacter
•• ,
)
••, -
{
¶¶ 

marginLeft
ßß "
=
ßß# $

m_textInfo
ßß% /
.
ßß/ 0
lineInfo
ßß0 8
[
ßß8 9
m_lineNumber
ßß9 E
]
ßßE F
.
ßßF G

marginLeft
ßßG Q
;
ßßQ R
marginRight
®® #
=
®®$ %

m_textInfo
®®& 0
.
®®0 1
lineInfo
®®1 9
[
®®9 :
m_lineNumber
®®: F
]
®®F G
.
®®G H
marginRight
®®H S
;
®®S T
}
©© 
widthOfTextArea
´´ #
=
´´$ %
m_width
´´& -
!=
´´. 0
-
´´1 2
$num
´´2 3
?
´´4 5
Mathf
´´6 ;
.
´´; <
Min
´´< ?
(
´´? @
marginWidth
´´@ K
+
´´L M
$num
´´N U
-
´´V W

marginLeft
´´X b
-
´´c d
marginRight
´´e p
,
´´p q
m_width
´´r y
)
´´y z
:
´´{ |
marginWidth´´} à
+´´â ä
$num´´ã í
-´´ì î

marginLeft´´ï ü
-´´† °
marginRight´´¢ ≠
;´´≠ Æ
float
ÆÆ 
	textWidth
ÆÆ #
=
ÆÆ$ %
Mathf
ÆÆ& +
.
ÆÆ+ ,
Abs
ÆÆ, /
(
ÆÆ/ 0

m_xAdvance
ÆÆ0 :
)
ÆÆ: ;
+
ÆÆ< =
(
ÆÆ> ?
!
ÆÆ? @
m_isRightToLeft
ÆÆ@ O
?
ÆÆP Q!
currentGlyphMetrics
ÆÆR e
.
ÆÆe f
horizontalAdvance
ÆÆf w
:
ÆÆx y
$num
ÆÆz {
)
ÆÆ{ |
*
ÆÆ} ~
(ÆÆ Ä
$numÆÆÄ Å
-ÆÆÇ É#
m_charWidthAdjDeltaÆÆÑ ó
)ÆÆó ò
*ÆÆô ö
(ÆÆõ ú
charCodeÆÆú §
==ÆÆ• ß
$numÆÆ® ¨
?ÆÆ≠ Æ-
currentElementUnmodifiedScaleÆÆØ Ã
:ÆÆÕ Œ#
currentElementScaleÆÆœ ‚
)ÆÆ‚ „
;ÆÆ„ ‰
float
ØØ 

textHeight
ØØ $
=
ØØ% &
m_maxTextAscender
ØØ' 8
-
ØØ9 :
(
ØØ; < 
m_maxLineDescender
ØØ< N
-
ØØO P
m_lineOffset
ØØQ ]
)
ØØ] ^
+
ØØ_ `
(
ØØa b
m_lineOffset
ØØb n
>
ØØo p
$num
ØØq r
&&
ØØs u$
m_IsDrivenLineSpacingØØv ã
==ØØå é
falseØØè î
?ØØï ñ!
m_maxLineAscenderØØó ®
-ØØ© ™%
m_startOfLineAscenderØØ´ ¿
:ØØ¡ ¬
$numØØ√ ƒ
)ØØƒ ≈
;ØØ≈ ∆
int
±± "
testedCharacterCount
±± ,
=
±±- .
m_characterCount
±±/ ?
;
±±? @
if
µµ 
(
µµ 

textHeight
µµ "
>
µµ# $
marginHeight
µµ% 1
+
µµ2 3
$num
µµ4 ;
)
µµ; <
{
∂∂ 
if
∏∏ 
(
∏∏ +
m_firstOverflowCharacterIndex
∏∏ 9
==
∏∏: <
-
∏∏= >
$num
∏∏> ?
)
∏∏? @+
m_firstOverflowCharacterIndex
ππ 9
=
ππ: ;
m_characterCount
ππ< L
;
ππL M
if
ºº 
(
ºº  
m_enableAutoSizing
ºº .
)
ºº. /
{
ΩΩ 
if
¿¿ 
(
¿¿   
m_lineSpacingDelta
¿¿  2
>
¿¿3 4
m_lineSpacingMax
¿¿5 E
&&
¿¿F H
m_lineOffset
¿¿I U
>
¿¿V W
$num
¿¿X Y
&&
¿¿Z \&
m_AutoSizeIterationCount
¿¿] u
<
¿¿v w*
m_AutoSizeMaxIterationCount¿¿x ì
)¿¿ì î
{
¡¡ 
float
¬¬  %
adjustmentDelta
¬¬& 5
=
¬¬6 7
(
¬¬8 9
marginHeight
¬¬9 E
-
¬¬F G

textHeight
¬¬H R
)
¬¬R S
/
¬¬T U
m_lineNumber
¬¬V b
;
¬¬b c 
m_lineSpacingDelta
ƒƒ  2
=
ƒƒ3 4
Mathf
ƒƒ5 :
.
ƒƒ: ;
Max
ƒƒ; >
(
ƒƒ> ? 
m_lineSpacingDelta
ƒƒ? Q
+
ƒƒR S
adjustmentDelta
ƒƒT c
/
ƒƒd e
	baseScale
ƒƒf o
,
ƒƒo p
m_lineSpacingMaxƒƒq Å
)ƒƒÅ Ç
;ƒƒÇ É
return
««  &
;
««& '
}
»» 
if
ŒŒ 
(
ŒŒ  

m_fontSize
ŒŒ  *
>
ŒŒ+ ,
m_fontSizeMin
ŒŒ- :
&&
ŒŒ; =&
m_AutoSizeIterationCount
ŒŒ> V
<
ŒŒW X)
m_AutoSizeMaxIterationCount
ŒŒY t
)
ŒŒt u
{
œœ 
m_maxFontSize
––  -
=
––. /

m_fontSize
––0 :
;
––: ;
float
““  %
	sizeDelta
““& /
=
““0 1
Mathf
““2 7
.
““7 8
Max
““8 ;
(
““; <
(
““< =

m_fontSize
““= G
-
““H I
m_minFontSize
““J W
)
““W X
/
““Y Z
$num
““[ \
,
““\ ]
$num
““^ c
)
““c d
;
““d e

m_fontSize
””  *
-=
””+ -
	sizeDelta
””. 7
;
””7 8

m_fontSize
‘‘  *
=
‘‘+ ,
Mathf
‘‘- 2
.
‘‘2 3
Max
‘‘3 6
(
‘‘6 7
(
‘‘7 8
int
‘‘8 ;
)
‘‘; <
(
‘‘< =

m_fontSize
‘‘= G
*
‘‘H I
$num
‘‘J L
+
‘‘M N
$num
‘‘O S
)
‘‘S T
/
‘‘U V
$num
‘‘W Z
,
‘‘Z [
m_fontSizeMin
‘‘\ i
)
‘‘i j
;
‘‘j k
return
◊◊  &
;
◊◊& '
}
ÿÿ 
}
⁄⁄ 
switch
›› 
(
››  
m_overflowMode
››  .
)
››. /
{
ﬁﬁ 
case
ﬂﬂ  
TextOverflowModes
ﬂﬂ! 2
.
ﬂﬂ2 3
Overflow
ﬂﬂ3 ;
:
ﬂﬂ; <
case
‡‡  
TextOverflowModes
‡‡! 2
.
‡‡2 3

ScrollRect
‡‡3 =
:
‡‡= >
case
··  
TextOverflowModes
··! 2
.
··2 3
Masking
··3 :
:
··: ;
break
„„  %
;
„„% &
case
ÂÂ  
TextOverflowModes
ÂÂ! 2
.
ÂÂ2 3
Truncate
ÂÂ3 ;
:
ÂÂ; <
i
ÊÊ  !
=
ÊÊ" #&
RestoreWordWrappingState
ÊÊ$ <
(
ÊÊ< =
ref
ÊÊ= @#
m_SavedLastValidState
ÊÊA V
)
ÊÊV W
;
ÊÊW X#
characterToSubstitute
ËË  5
.
ËË5 6
index
ËË6 ;
=
ËË< ="
testedCharacterCount
ËË> R
;
ËËR S#
characterToSubstitute
ÈÈ  5
.
ÈÈ5 6
unicode
ÈÈ6 =
=
ÈÈ> ?
$num
ÈÈ@ D
;
ÈÈD E
continue
ÍÍ  (
;
ÍÍ( )
case
ÏÏ  
TextOverflowModes
ÏÏ! 2
.
ÏÏ2 3
Ellipsis
ÏÏ3 ;
:
ÏÏ; <
if
ÌÌ  "
(
ÌÌ# $/
!m_EllipsisInsertionCandidateStack
ÌÌ$ E
.
ÌÌE F
Count
ÌÌF K
==
ÌÌL N
$num
ÌÌO P
)
ÌÌP Q
{
ÓÓ  !
i
ÔÔ$ %
=
ÔÔ& '
-
ÔÔ( )
$num
ÔÔ) *
;
ÔÔ* +
m_characterCount
$ 4
=
5 6
$num
7 8
;
8 9#
characterToSubstitute
ÒÒ$ 9
.
ÒÒ9 :
index
ÒÒ: ?
=
ÒÒ@ A
$num
ÒÒB C
;
ÒÒC D#
characterToSubstitute
ÚÚ$ 9
.
ÚÚ9 :
unicode
ÚÚ: A
=
ÚÚB C
$num
ÚÚD H
;
ÚÚH I$
m_firstCharacterOfLine
ÛÛ$ :
=
ÛÛ; <
$num
ÛÛ= >
;
ÛÛ> ?
continue
ÙÙ$ ,
;
ÙÙ, -
}
ıı  !
var
˜˜  #
ellipsisState
˜˜$ 1
=
˜˜2 3/
!m_EllipsisInsertionCandidateStack
˜˜4 U
.
˜˜U V
Pop
˜˜V Y
(
˜˜Y Z
)
˜˜Z [
;
˜˜[ \
i
¯¯  !
=
¯¯" #&
RestoreWordWrappingState
¯¯$ <
(
¯¯< =
ref
¯¯= @
ellipsisState
¯¯A N
)
¯¯N O
;
¯¯O P
i
˙˙  !
-=
˙˙" $
$num
˙˙% &
;
˙˙& '
m_characterCount
˚˚  0
-=
˚˚1 3
$num
˚˚4 5
;
˚˚5 6#
characterToSubstitute
¸¸  5
.
¸¸5 6
index
¸¸6 ;
=
¸¸< =
m_characterCount
¸¸> N
;
¸¸N O#
characterToSubstitute
˝˝  5
.
˝˝5 6
unicode
˝˝6 =
=
˝˝> ?
$num
˝˝@ F
;
˝˝F G
restoreCount
ˇˇ  ,
+=
ˇˇ- /
$num
ˇˇ0 1
;
ˇˇ1 2
continue
ÄÄ  (
;
ÄÄ( )
case
ÇÇ  
TextOverflowModes
ÇÇ! 2
.
ÇÇ2 3
Linked
ÇÇ3 9
:
ÇÇ9 :
i
ÉÉ  !
=
ÉÉ" #&
RestoreWordWrappingState
ÉÉ$ <
(
ÉÉ< =
ref
ÉÉ= @#
m_SavedLastValidState
ÉÉA V
)
ÉÉV W
;
ÉÉW X
if
ÖÖ  "
(
ÖÖ# $#
m_linkedTextComponent
ÖÖ$ 9
!=
ÖÖ: <
null
ÖÖ= A
)
ÖÖA B
{
ÜÜ  !#
m_linkedTextComponent
áá$ 9
.
áá9 :
text
áá: >
=
áá? @
text
ááA E
;
ááE F#
m_linkedTextComponent
àà$ 9
.
àà9 :#
firstVisibleCharacter
àà: O
=
ààP Q
m_characterCount
ààR b
;
ààb c#
m_linkedTextComponent
ââ$ 9
.
ââ9 :
ForceMeshUpdate
ââ: I
(
ââI J
)
ââJ K
;
ââK L
m_isTextTruncated
ãã$ 5
=
ãã6 7
true
ãã8 <
;
ãã< =
}
åå  !#
characterToSubstitute
èè  5
.
èè5 6
index
èè6 ;
=
èè< ="
testedCharacterCount
èè> R
;
èèR S#
characterToSubstitute
êê  5
.
êê5 6
unicode
êê6 =
=
êê> ?
$num
êê@ D
;
êêD E
continue
ëë  (
;
ëë( )
case
ìì  
TextOverflowModes
ìì! 2
.
ìì2 3
Page
ìì3 7
:
ìì7 8
if
ïï  "
(
ïï# $
i
ïï$ %
<
ïï& '
$num
ïï( )
||
ïï* ,"
testedCharacterCount
ïï- A
==
ïïB D
$num
ïïE F
)
ïïF G
{
ññ  !
i
óó$ %
=
óó& '
-
óó( )
$num
óó) *
;
óó* +
m_characterCount
òò$ 4
=
òò5 6
$num
òò7 8
;
òò8 9#
characterToSubstitute
ôô$ 9
.
ôô9 :
index
ôô: ?
=
ôô@ A
$num
ôôB C
;
ôôC D#
characterToSubstitute
öö$ 9
.
öö9 :
unicode
öö: A
=
ööB C
$num
ööD H
;
ööH I
continue
õõ$ ,
;
õõ, -
}
úú  !
else
ùù  $
if
ùù% '
(
ùù( )
m_maxLineAscender
ùù) :
-
ùù; < 
m_maxLineDescender
ùù= O
>
ùùP Q
marginHeight
ùùR ^
+
ùù_ `
$num
ùùa h
)
ùùh i
{
ûû  !
i
°°$ %
=
°°& '&
RestoreWordWrappingState
°°( @
(
°°@ A
ref
°°A D
m_SavedLineState
°°E U
)
°°U V
;
°°V W#
characterToSubstitute
££$ 9
.
££9 :
index
££: ?
=
££@ A"
testedCharacterCount
££B V
;
££V W#
characterToSubstitute
§§$ 9
.
§§9 :
unicode
§§: A
=
§§B C
$num
§§D H
;
§§H I
continue
••$ ,
;
••, -
}
¶¶  !
i
©©  !
=
©©" #&
RestoreWordWrappingState
©©$ <
(
©©< =
ref
©©= @
m_SavedLineState
©©A Q
)
©©Q R
;
©©R S
m_isNewPage
´´  +
=
´´, -
true
´´. 2
;
´´2 3$
m_firstCharacterOfLine
¨¨  6
=
¨¨7 8
m_characterCount
¨¨9 I
;
¨¨I J
m_maxLineAscender
≠≠  1
=
≠≠2 3"
k_LargeNegativeFloat
≠≠4 H
;
≠≠H I 
m_maxLineDescender
ÆÆ  2
=
ÆÆ3 4"
k_LargePositiveFloat
ÆÆ5 I
;
ÆÆI J#
m_startOfLineAscender
ØØ  5
=
ØØ6 7
$num
ØØ8 9
;
ØØ9 :

m_xAdvance
±±  *
=
±±+ ,
$num
±±- .
+
±±/ 0

tag_Indent
±±1 ;
;
±±; <
m_lineOffset
≤≤  ,
=
≤≤- .
$num
≤≤/ 0
;
≤≤0 1
m_maxTextAscender
≥≥  1
=
≥≥2 3
$num
≥≥4 5
;
≥≥5 6
m_PageAscender
¥¥  .
=
¥¥/ 0
$num
¥¥1 2
;
¥¥2 3
m_lineNumber
µµ  ,
+=
µµ- /
$num
µµ0 1
;
µµ1 2
m_pageNumber
∂∂  ,
+=
∂∂- /
$num
∂∂0 1
;
∂∂1 2
continue
ππ  (
;
ππ( )
}
∫∫ 
}
ªª 
if
¡¡ 
(
¡¡ 
	textWidth
¡¡ !
>
¡¡" #
widthOfTextArea
¡¡$ 3
*
¡¡4 5
(
¡¡6 7 
isJustifiedOrFlush
¡¡7 I
?
¡¡J K
$num
¡¡L Q
:
¡¡R S
$num
¡¡T X
)
¡¡X Y
)
¡¡Y Z
{
¬¬ 
if
»» 
(
»» "
m_enableWordWrapping
»» 0
&&
»»1 3
m_characterCount
»»4 D
!=
»»E G$
m_firstCharacterOfLine
»»H ^
)
»»^ _
{
…… 
i
ÀÀ 
=
ÀÀ &
RestoreWordWrappingState
ÀÀ  8
(
ÀÀ8 9
ref
ÀÀ9 <"
m_SavedWordWrapState
ÀÀ= Q
)
ÀÀQ R
;
ÀÀR S
float
ŒŒ !
lineOffsetDelta
ŒŒ" 1
=
ŒŒ2 3
$num
ŒŒ4 5
;
ŒŒ5 6
if
œœ 
(
œœ  
m_lineHeight
œœ  ,
==
œœ- /
TMP_Math
œœ0 8
.
œœ8 9
FLOAT_UNSET
œœ9 D
)
œœD E
{
–– 
float
——  %
ascender
——& .
=
——/ 0

m_textInfo
——1 ;
.
——; <
characterInfo
——< I
[
——I J
m_characterCount
——J Z
]
——Z [
.
——[ \
adjustedAscender
——\ l
;
——l m
lineOffsetDelta
““  /
=
““0 1
(
““2 3
m_lineOffset
““3 ?
>
““@ A
$num
““B C
&&
““D F#
m_IsDrivenLineSpacing
““G \
==
““] _
false
““` e
?
““f g
m_maxLineAscender
““h y
-
““z {$
m_startOfLineAscender““| ë
:““í ì
$num““î ï
)““ï ñ
-““ó ò"
m_maxLineDescender““ô ´
+““¨ ≠
ascender““Æ ∂
+““∑ ∏
(““π ∫
lineGap““∫ ¡
+““¬ √"
m_lineSpacingDelta““ƒ ÷
)““÷ ◊
*““ÿ Ÿ
	baseScale““⁄ „
+““‰ Â
m_lineSpacing““Ê Û
*““Ù ı
currentEmScale““ˆ Ñ
;““Ñ Ö
}
”” 
else
‘‘  
{
’’ 
lineOffsetDelta
÷÷  /
=
÷÷0 1
m_lineHeight
÷÷2 >
+
÷÷? @
m_lineSpacing
÷÷A N
*
÷÷O P
currentEmScale
÷÷Q _
;
÷÷_ `#
m_IsDrivenLineSpacing
◊◊  5
=
◊◊6 7
true
◊◊8 <
;
◊◊< =
}
ÿÿ 
float
€€ !
newTextHeight
€€" /
=
€€0 1
m_maxTextAscender
€€2 C
+
€€D E
lineOffsetDelta
€€F U
+
€€V W
m_lineOffset
€€X d
-
€€e f

m_textInfo
€€g q
.
€€q r
characterInfo
€€r 
[€€ Ä 
m_characterCount€€Ä ê
]€€ê ë
.€€ë í!
adjustedDescender€€í £
;€€£ §
if
ﬂﬂ 
(
ﬂﬂ  

m_textInfo
ﬂﬂ  *
.
ﬂﬂ* +
characterInfo
ﬂﬂ+ 8
[
ﬂﬂ8 9
m_characterCount
ﬂﬂ9 I
-
ﬂﬂJ K
$num
ﬂﬂL M
]
ﬂﬂM N
.
ﬂﬂN O
	character
ﬂﬂO X
==
ﬂﬂY [
$num
ﬂﬂ\ `
&&
ﬂﬂa c!
isSoftHyphenIgnored
ﬂﬂd w
==
ﬂﬂx z
falseﬂﬂ{ Ä
)ﬂﬂÄ Å
{
‡‡ 
if
‚‚  "
(
‚‚# $
m_overflowMode
‚‚$ 2
==
‚‚3 5
TextOverflowModes
‚‚6 G
.
‚‚G H
Overflow
‚‚H P
||
‚‚Q S
newTextHeight
‚‚T a
<
‚‚b c
marginHeight
‚‚d p
+
‚‚q r
$num
‚‚s z
)
‚‚z {
{
„„  !#
characterToSubstitute
‰‰$ 9
.
‰‰9 :
index
‰‰: ?
=
‰‰@ A
m_characterCount
‰‰B R
-
‰‰S T
$num
‰‰U V
;
‰‰V W#
characterToSubstitute
ÂÂ$ 9
.
ÂÂ9 :
unicode
ÂÂ: A
=
ÂÂB C
$num
ÂÂD H
;
ÂÂH I
i
ÁÁ$ %
-=
ÁÁ& (
$num
ÁÁ) *
;
ÁÁ* +
m_characterCount
ËË$ 4
-=
ËË5 7
$num
ËË8 9
;
ËË9 :
continue
ÈÈ$ ,
;
ÈÈ, -
}
ÍÍ  !
}
ÎÎ !
isSoftHyphenIgnored
ÌÌ /
=
ÌÌ0 1
false
ÌÌ2 7
;
ÌÌ7 8
if
 
(
  

m_textInfo
  *
.
* +
characterInfo
+ 8
[
8 9
m_characterCount
9 I
]
I J
.
J K
	character
K T
==
U W
$num
X \
)
\ ]
{
ÒÒ !
isSoftHyphenIgnored
ÚÚ  3
=
ÚÚ4 5
true
ÚÚ6 :
;
ÚÚ: ;
continue
ÛÛ  (
;
ÛÛ( )
}
ÙÙ 
if
¯¯ 
(
¯¯   
m_enableAutoSizing
¯¯  2
&&
¯¯3 5
isFirstWordOfLine
¯¯6 G
)
¯¯G H
{
˘˘ 
if
¸¸  "
(
¸¸# $!
m_charWidthAdjDelta
¸¸$ 7
<
¸¸8 9
m_charWidthMaxAdj
¸¸: K
/
¸¸L M
$num
¸¸N Q
&&
¸¸R T&
m_AutoSizeIterationCount
¸¸U m
<
¸¸n o*
m_AutoSizeMaxIterationCount¸¸p ã
)¸¸ã å
{
˝˝  !
float
˛˛$ )
adjustedTextWidth
˛˛* ;
=
˛˛< =
	textWidth
˛˛> G
;
˛˛G H
if
ÅÅ$ &
(
ÅÅ' (!
m_charWidthAdjDelta
ÅÅ( ;
>
ÅÅ< =
$num
ÅÅ> ?
)
ÅÅ? @
adjustedTextWidth
ÇÇ( 9
/=
ÇÇ: <
$num
ÇÇ= ?
-
ÇÇ@ A!
m_charWidthAdjDelta
ÇÇB U
;
ÇÇU V
float
ÑÑ$ )
adjustmentDelta
ÑÑ* 9
=
ÑÑ: ;
	textWidth
ÑÑ< E
-
ÑÑF G
(
ÑÑH I
widthOfTextArea
ÑÑI X
-
ÑÑY Z
$num
ÑÑ[ b
)
ÑÑb c
*
ÑÑd e
(
ÑÑf g 
isJustifiedOrFlush
ÑÑg y
?
ÑÑz {
$numÑÑ| Å
:ÑÑÇ É
$numÑÑÑ à
)ÑÑà â
;ÑÑâ ä!
m_charWidthAdjDelta
ÖÖ$ 7
+=
ÖÖ8 :
adjustmentDelta
ÖÖ; J
/
ÖÖK L
adjustedTextWidth
ÖÖM ^
;
ÖÖ^ _!
m_charWidthAdjDelta
ÜÜ$ 7
=
ÜÜ8 9
Mathf
ÜÜ: ?
.
ÜÜ? @
Min
ÜÜ@ C
(
ÜÜC D!
m_charWidthAdjDelta
ÜÜD W
,
ÜÜW X
m_charWidthMaxAdj
ÜÜY j
/
ÜÜk l
$num
ÜÜm p
)
ÜÜp q
;
ÜÜq r
return
ââ$ *
;
ââ* +
}
ää  !
if
èè  "
(
èè# $

m_fontSize
èè$ .
>
èè/ 0
m_fontSizeMin
èè1 >
&&
èè? A&
m_AutoSizeIterationCount
èèB Z
<
èè[ \)
m_AutoSizeMaxIterationCount
èè] x
)
èèx y
{
êê  !
m_maxFontSize
ëë$ 1
=
ëë2 3

m_fontSize
ëë4 >
;
ëë> ?
float
ìì$ )
	sizeDelta
ìì* 3
=
ìì4 5
Mathf
ìì6 ;
.
ìì; <
Max
ìì< ?
(
ìì? @
(
ìì@ A

m_fontSize
ììA K
-
ììL M
m_minFontSize
ììN [
)
ìì[ \
/
ìì] ^
$num
ìì_ `
,
ìì` a
$num
ììb g
)
ììg h
;
ììh i

m_fontSize
îî$ .
-=
îî/ 1
	sizeDelta
îî2 ;
;
îî; <

m_fontSize
ïï$ .
=
ïï/ 0
Mathf
ïï1 6
.
ïï6 7
Max
ïï7 :
(
ïï: ;
(
ïï; <
int
ïï< ?
)
ïï? @
(
ïï@ A

m_fontSize
ïïA K
*
ïïL M
$num
ïïN P
+
ïïQ R
$num
ïïS W
)
ïïW X
/
ïïY Z
$num
ïï[ ^
,
ïï^ _
m_fontSizeMin
ïï` m
)
ïïm n
;
ïïn o
return
òò$ *
;
òò* +
}
ôô  !
}
õõ 
int
üü (
savedSoftLineBreakingSpace
üü  :
=
üü; <'
m_SavedSoftLineBreakState
üü= V
.
üüV W 
previous_WordBreak
üüW i
;
üüi j
if
†† 
(
††  
isFirstWordOfLine
††  1
&&
††2 4(
savedSoftLineBreakingSpace
††5 O
!=
††P R
-
††S T
$num
††T U
)
††U V
{
°° 
if
¢¢  "
(
¢¢# $(
savedSoftLineBreakingSpace
¢¢$ >
!=
¢¢? A
lastSoftLineBreak
¢¢B S
)
¢¢S T
{
££  !
i
§§$ %
=
§§& '&
RestoreWordWrappingState
§§( @
(
§§@ A
ref
§§A D'
m_SavedSoftLineBreakState
§§E ^
)
§§^ _
;
§§_ `
lastSoftLineBreak
••$ 5
=
••6 7(
savedSoftLineBreakingSpace
••8 R
;
••R S
if
®®$ &
(
®®' (

m_textInfo
®®( 2
.
®®2 3
characterInfo
®®3 @
[
®®@ A
m_characterCount
®®A Q
-
®®R S
$num
®®T U
]
®®U V
.
®®V W
	character
®®W `
==
®®a c
$num
®®d h
)
®®h i
{
©©$ %#
characterToSubstitute
™™( =
.
™™= >
index
™™> C
=
™™D E
m_characterCount
™™F V
-
™™W X
$num
™™Y Z
;
™™Z [#
characterToSubstitute
´´( =
.
´´= >
unicode
´´> E
=
´´F G
$num
´´H L
;
´´L M
i
≠≠( )
-=
≠≠* ,
$num
≠≠- .
;
≠≠. /
m_characterCount
ÆÆ( 8
-=
ÆÆ9 ;
$num
ÆÆ< =
;
ÆÆ= >
continue
ØØ( 0
;
ØØ0 1
}
∞∞$ %
}
±±  !
}
≤≤ 
if
µµ 
(
µµ  
newTextHeight
µµ  -
>
µµ. /
marginHeight
µµ0 <
+
µµ= >
$num
µµ? F
)
µµF G
{
∂∂ 
if
∏∏  "
(
∏∏# $+
m_firstOverflowCharacterIndex
∏∏$ A
==
∏∏B D
-
∏∏E F
$num
∏∏F G
)
∏∏G H+
m_firstOverflowCharacterIndex
ππ$ A
=
ππB C
m_characterCount
ππD T
;
ππT U
if
ºº  "
(
ºº# $ 
m_enableAutoSizing
ºº$ 6
)
ºº6 7
{
ΩΩ  !
if
¿¿$ &
(
¿¿' ( 
m_lineSpacingDelta
¿¿( :
>
¿¿; <
m_lineSpacingMax
¿¿= M
&&
¿¿N P&
m_AutoSizeIterationCount
¿¿Q i
<
¿¿j k*
m_AutoSizeMaxIterationCount¿¿l á
)¿¿á à
{
¡¡$ %
float
¬¬( -
adjustmentDelta
¬¬. =
=
¬¬> ?
(
¬¬@ A
marginHeight
¬¬A M
-
¬¬N O
newTextHeight
¬¬P ]
)
¬¬] ^
/
¬¬_ `
(
¬¬a b
m_lineNumber
¬¬b n
+
¬¬o p
$num
¬¬q r
)
¬¬r s
;
¬¬s t 
m_lineSpacingDelta
ƒƒ( :
=
ƒƒ; <
Mathf
ƒƒ= B
.
ƒƒB C
Max
ƒƒC F
(
ƒƒF G 
m_lineSpacingDelta
ƒƒG Y
+
ƒƒZ [
adjustmentDelta
ƒƒ\ k
/
ƒƒl m
	baseScale
ƒƒn w
,
ƒƒw x
m_lineSpacingMaxƒƒy â
)ƒƒâ ä
;ƒƒä ã
return
««( .
;
««. /
}
»»$ %
if
ÕÕ$ &
(
ÕÕ' (!
m_charWidthAdjDelta
ÕÕ( ;
<
ÕÕ< =
m_charWidthMaxAdj
ÕÕ> O
/
ÕÕP Q
$num
ÕÕR U
&&
ÕÕV X&
m_AutoSizeIterationCount
ÕÕY q
<
ÕÕr s*
m_AutoSizeMaxIterationCountÕÕt è
)ÕÕè ê
{
ŒŒ$ %
float
œœ( -
adjustedTextWidth
œœ. ?
=
œœ@ A
	textWidth
œœB K
;
œœK L
if
““( *
(
““+ ,!
m_charWidthAdjDelta
““, ?
>
““@ A
$num
““B C
)
““C D
adjustedTextWidth
””, =
/=
””> @
$num
””A C
-
””D E!
m_charWidthAdjDelta
””F Y
;
””Y Z
float
’’( -
adjustmentDelta
’’. =
=
’’> ?
	textWidth
’’@ I
-
’’J K
(
’’L M
widthOfTextArea
’’M \
-
’’] ^
$num
’’_ f
)
’’f g
*
’’h i
(
’’j k 
isJustifiedOrFlush
’’k }
?
’’~ 
$num’’Ä Ö
:’’Ü á
$num’’à å
)’’å ç
;’’ç é!
m_charWidthAdjDelta
÷÷( ;
+=
÷÷< >
adjustmentDelta
÷÷? N
/
÷÷O P
adjustedTextWidth
÷÷Q b
;
÷÷b c!
m_charWidthAdjDelta
◊◊( ;
=
◊◊< =
Mathf
◊◊> C
.
◊◊C D
Min
◊◊D G
(
◊◊G H!
m_charWidthAdjDelta
◊◊H [
,
◊◊[ \
m_charWidthMaxAdj
◊◊] n
/
◊◊o p
$num
◊◊q t
)
◊◊t u
;
◊◊u v
return
⁄⁄( .
;
⁄⁄. /
}
€€$ %
if
‡‡$ &
(
‡‡' (

m_fontSize
‡‡( 2
>
‡‡3 4
m_fontSizeMin
‡‡5 B
&&
‡‡C E&
m_AutoSizeIterationCount
‡‡F ^
<
‡‡_ `)
m_AutoSizeMaxIterationCount
‡‡a |
)
‡‡| }
{
··$ %
m_maxFontSize
‚‚( 5
=
‚‚6 7

m_fontSize
‚‚8 B
;
‚‚B C
float
‰‰( -
	sizeDelta
‰‰. 7
=
‰‰8 9
Mathf
‰‰: ?
.
‰‰? @
Max
‰‰@ C
(
‰‰C D
(
‰‰D E

m_fontSize
‰‰E O
-
‰‰P Q
m_minFontSize
‰‰R _
)
‰‰_ `
/
‰‰a b
$num
‰‰c d
,
‰‰d e
$num
‰‰f k
)
‰‰k l
;
‰‰l m

m_fontSize
ÂÂ( 2
-=
ÂÂ3 5
	sizeDelta
ÂÂ6 ?
;
ÂÂ? @

m_fontSize
ÊÊ( 2
=
ÊÊ3 4
Mathf
ÊÊ5 :
.
ÊÊ: ;
Max
ÊÊ; >
(
ÊÊ> ?
(
ÊÊ? @
int
ÊÊ@ C
)
ÊÊC D
(
ÊÊD E

m_fontSize
ÊÊE O
*
ÊÊP Q
$num
ÊÊR T
+
ÊÊU V
$num
ÊÊW [
)
ÊÊ[ \
/
ÊÊ] ^
$num
ÊÊ_ b
,
ÊÊb c
m_fontSizeMin
ÊÊd q
)
ÊÊq r
;
ÊÊr s
return
ÈÈ( .
;
ÈÈ. /
}
ÍÍ$ %
}
ÏÏ  !
switch
ÔÔ  &
(
ÔÔ' (
m_overflowMode
ÔÔ( 6
)
ÔÔ6 7
{
  !
case
ÒÒ$ (
TextOverflowModes
ÒÒ) :
.
ÒÒ: ;
Overflow
ÒÒ; C
:
ÒÒC D
case
ÚÚ$ (
TextOverflowModes
ÚÚ) :
.
ÚÚ: ;

ScrollRect
ÚÚ; E
:
ÚÚE F
case
ÛÛ$ (
TextOverflowModes
ÛÛ) :
.
ÛÛ: ;
Masking
ÛÛ; B
:
ÛÛB C
InsertNewLine
¯¯( 5
(
¯¯5 6
i
¯¯6 7
,
¯¯7 8
	baseScale
¯¯9 B
,
¯¯B C!
currentElementScale
¯¯D W
,
¯¯W X
currentEmScale
¯¯Y g
,
¯¯g h1
"m_GlyphHorizontalAdvanceAdjustment¯¯i ã
,¯¯ã å%
boldSpacingAdjustment¯¯ç ¢
,¯¯¢ £*
characterSpacingAdjustment¯¯§ æ
,¯¯æ ø
widthOfTextArea¯¯¿ œ
,¯¯œ –
lineGap¯¯— ÿ
,¯¯ÿ Ÿ
ref¯¯⁄ ›(
isMaxVisibleDescenderSet¯¯ﬁ ˆ
,¯¯ˆ ˜
ref¯¯¯ ˚#
maxVisibleDescender¯¯¸ è
)¯¯è ê
;¯¯ê ë
isStartOfNewLine
˘˘( 8
=
˘˘9 :
true
˘˘; ?
;
˘˘? @
isFirstWordOfLine
˙˙( 9
=
˙˙: ;
true
˙˙< @
;
˙˙@ A
continue
áá( 0
;
áá0 1
case
ââ$ (
TextOverflowModes
ââ) :
.
ââ: ;
Truncate
ââ; C
:
ââC D
i
ää( )
=
ää* +&
RestoreWordWrappingState
ää, D
(
ääD E
ref
ääE H#
m_SavedLastValidState
ääI ^
)
ää^ _
;
ää_ `#
characterToSubstitute
åå( =
.
åå= >
index
åå> C
=
ååD E"
testedCharacterCount
ååF Z
;
ååZ [#
characterToSubstitute
çç( =
.
çç= >
unicode
çç> E
=
ççF G
$num
ççH L
;
ççL M
continue
éé( 0
;
éé0 1
case
êê$ (
TextOverflowModes
êê) :
.
êê: ;
Ellipsis
êê; C
:
êêC D
if
ëë( *
(
ëë+ ,/
!m_EllipsisInsertionCandidateStack
ëë, M
.
ëëM N
Count
ëëN S
==
ëëT V
$num
ëëW X
)
ëëX Y
{
íí( )
i
ìì, -
=
ìì. /
-
ìì0 1
$num
ìì1 2
;
ìì2 3
m_characterCount
îî, <
=
îî= >
$num
îî? @
;
îî@ A#
characterToSubstitute
ïï, A
.
ïïA B
index
ïïB G
=
ïïH I
$num
ïïJ K
;
ïïK L#
characterToSubstitute
ññ, A
.
ññA B
unicode
ññB I
=
ññJ K
$num
ññL P
;
ññP Q$
m_firstCharacterOfLine
óó, B
=
óóC D
$num
óóE F
;
óóF G
continue
òò, 4
;
òò4 5
}
ôô( )
var
õõ( +
ellipsisState
õõ, 9
=
õõ: ;/
!m_EllipsisInsertionCandidateStack
õõ< ]
.
õõ] ^
Pop
õõ^ a
(
õõa b
)
õõb c
;
õõc d
i
úú( )
=
úú* +&
RestoreWordWrappingState
úú, D
(
úúD E
ref
úúE H
ellipsisState
úúI V
)
úúV W
;
úúW X
i
ûû( )
-=
ûû* ,
$num
ûû- .
;
ûû. /
m_characterCount
üü( 8
-=
üü9 ;
$num
üü< =
;
üü= >#
characterToSubstitute
††( =
.
††= >
index
††> C
=
††D E
m_characterCount
††F V
;
††V W#
characterToSubstitute
°°( =
.
°°= >
unicode
°°> E
=
°°F G
$num
°°H N
;
°°N O
restoreCount
££( 4
+=
££5 7
$num
££8 9
;
££9 :
continue
§§( 0
;
§§0 1
case
¶¶$ (
TextOverflowModes
¶¶) :
.
¶¶: ;
Linked
¶¶; A
:
¶¶A B
if
ßß( *
(
ßß+ ,#
m_linkedTextComponent
ßß, A
!=
ßßB D
null
ßßE I
)
ßßI J
{
®®( )#
m_linkedTextComponent
©©, A
.
©©A B
text
©©B F
=
©©G H
text
©©I M
;
©©M N#
m_linkedTextComponent
™™, A
.
™™A B#
firstVisibleCharacter
™™B W
=
™™X Y
m_characterCount
™™Z j
;
™™j k#
m_linkedTextComponent
´´, A
.
´´A B
ForceMeshUpdate
´´B Q
(
´´Q R
)
´´R S
;
´´S T
m_isTextTruncated
≠≠, =
=
≠≠> ?
true
≠≠@ D
;
≠≠D E
}
ÆÆ( )#
characterToSubstitute
±±( =
.
±±= >
index
±±> C
=
±±D E
m_characterCount
±±F V
;
±±V W#
characterToSubstitute
≤≤( =
.
≤≤= >
unicode
≤≤> E
=
≤≤F G
$num
≤≤H L
;
≤≤L M
continue
≥≥( 0
;
≥≥0 1
case
µµ$ (
TextOverflowModes
µµ) :
.
µµ: ;
Page
µµ; ?
:
µµ? @
m_isNewPage
∑∑( 3
=
∑∑4 5
true
∑∑6 :
;
∑∑: ;
InsertNewLine
ππ( 5
(
ππ5 6
i
ππ6 7
,
ππ7 8
	baseScale
ππ9 B
,
ππB C!
currentElementScale
ππD W
,
ππW X
currentEmScale
ππZ h
,
ππh i1
"m_GlyphHorizontalAdvanceAdjustmentππj å
,ππå ç%
boldSpacingAdjustmentππé £
,ππ£ §*
characterSpacingAdjustmentππ• ø
,ππø ¿
widthOfTextAreaππ¡ –
,ππ– —
lineGapππ“ Ÿ
,ππŸ ⁄
refππ€ ﬁ(
isMaxVisibleDescenderSetππﬂ ˜
,ππ˜ ¯
refππ˘ ¸#
maxVisibleDescenderππ˝ ê
)ππê ë
;ππë í#
m_startOfLineAscender
ªª( =
=
ªª> ?
$num
ªª@ A
;
ªªA B
m_lineOffset
ºº( 4
=
ºº5 6
$num
ºº7 8
;
ºº8 9
m_maxTextAscender
ΩΩ( 9
=
ΩΩ: ;
$num
ΩΩ< =
;
ΩΩ= >
m_PageAscender
ææ( 6
=
ææ7 8
$num
ææ9 :
;
ææ: ;
m_pageNumber
øø( 4
+=
øø5 7
$num
øø8 9
;
øø9 :
isStartOfNewLine
¡¡( 8
=
¡¡9 :
true
¡¡; ?
;
¡¡? @
isFirstWordOfLine
¬¬( 9
=
¬¬: ;
true
¬¬< @
;
¬¬@ A
continue
√√( 0
;
√√0 1
}
ƒƒ  !
}
≈≈ 
else
∆∆  
{
«« 
InsertNewLine
ÂÂ  -
(
ÂÂ- .
i
ÂÂ. /
,
ÂÂ/ 0
	baseScale
ÂÂ1 :
,
ÂÂ: ;!
currentElementScale
ÂÂ< O
,
ÂÂO P
currentEmScale
ÂÂQ _
,
ÂÂ_ `1
"m_GlyphHorizontalAdvanceAdjustmentÂÂa É
,ÂÂÉ Ñ%
boldSpacingAdjustmentÂÂÖ ö
,ÂÂö õ*
characterSpacingAdjustmentÂÂú ∂
,ÂÂ∂ ∑
widthOfTextAreaÂÂ∏ «
,ÂÂ« »
lineGapÂÂ… –
,ÂÂ– —
refÂÂ“ ’(
isMaxVisibleDescenderSetÂÂ÷ Ó
,ÂÂÓ Ô
refÂÂ Û#
maxVisibleDescenderÂÂÙ á
)ÂÂá à
;ÂÂà â
isStartOfNewLine
ÊÊ  0
=
ÊÊ1 2
true
ÊÊ3 7
;
ÊÊ7 8
isFirstWordOfLine
ÁÁ  1
=
ÁÁ2 3
true
ÁÁ4 8
;
ÁÁ8 9
continue
ÛÛ  (
;
ÛÛ( )
}
ÙÙ 
}
ıı 
else
ˆˆ 
{
˜˜ 
if
¯¯ 
(
¯¯   
m_enableAutoSizing
¯¯  2
&&
¯¯3 5&
m_AutoSizeIterationCount
¯¯6 N
<
¯¯O P)
m_AutoSizeMaxIterationCount
¯¯Q l
)
¯¯l m
{
˘˘ 
if
¸¸  "
(
¸¸# $!
m_charWidthAdjDelta
¸¸$ 7
<
¸¸8 9
m_charWidthMaxAdj
¸¸: K
/
¸¸L M
$num
¸¸N Q
)
¸¸Q R
{
˝˝  !
float
˛˛$ )
adjustedTextWidth
˛˛* ;
=
˛˛< =
	textWidth
˛˛> G
;
˛˛G H
if
ÅÅ$ &
(
ÅÅ' (!
m_charWidthAdjDelta
ÅÅ( ;
>
ÅÅ< =
$num
ÅÅ> ?
)
ÅÅ? @
adjustedTextWidth
ÇÇ( 9
/=
ÇÇ: <
$num
ÇÇ= ?
-
ÇÇ@ A!
m_charWidthAdjDelta
ÇÇB U
;
ÇÇU V
float
ÑÑ$ )
adjustmentDelta
ÑÑ* 9
=
ÑÑ: ;
	textWidth
ÑÑ< E
-
ÑÑF G
(
ÑÑH I
widthOfTextArea
ÑÑI X
-
ÑÑY Z
$num
ÑÑ[ b
)
ÑÑb c
*
ÑÑd e
(
ÑÑf g 
isJustifiedOrFlush
ÑÑg y
?
ÑÑz {
$numÑÑ| Å
:ÑÑÇ É
$numÑÑÑ à
)ÑÑà â
;ÑÑâ ä!
m_charWidthAdjDelta
ÖÖ$ 7
+=
ÖÖ8 :
adjustmentDelta
ÖÖ; J
/
ÖÖK L
adjustedTextWidth
ÖÖM ^
;
ÖÖ^ _!
m_charWidthAdjDelta
ÜÜ$ 7
=
ÜÜ8 9
Mathf
ÜÜ: ?
.
ÜÜ? @
Min
ÜÜ@ C
(
ÜÜC D!
m_charWidthAdjDelta
ÜÜD W
,
ÜÜW X
m_charWidthMaxAdj
ÜÜY j
/
ÜÜk l
$num
ÜÜm p
)
ÜÜp q
;
ÜÜq r
return
ââ$ *
;
ââ* +
}
ää  !
if
èè  "
(
èè# $

m_fontSize
èè$ .
>
èè/ 0
m_fontSizeMin
èè1 >
)
èè> ?
{
êê  !
m_maxFontSize
ïï$ 1
=
ïï2 3

m_fontSize
ïï4 >
;
ïï> ?
float
óó$ )
	sizeDelta
óó* 3
=
óó4 5
Mathf
óó6 ;
.
óó; <
Max
óó< ?
(
óó? @
(
óó@ A

m_fontSize
óóA K
-
óóL M
m_minFontSize
óóN [
)
óó[ \
/
óó] ^
$num
óó_ `
,
óó` a
$num
óób g
)
óóg h
;
óóh i

m_fontSize
òò$ .
-=
òò/ 1
	sizeDelta
òò2 ;
;
òò; <

m_fontSize
ôô$ .
=
ôô/ 0
Mathf
ôô1 6
.
ôô6 7
Max
ôô7 :
(
ôô: ;
(
ôô; <
int
ôô< ?
)
ôô? @
(
ôô@ A

m_fontSize
ôôA K
*
ôôL M
$num
ôôN P
+
ôôQ R
$num
ôôS W
)
ôôW X
/
ôôY Z
$num
ôô[ ^
,
ôô^ _
m_fontSizeMin
ôô` m
)
ôôm n
;
ôôn o
return
úú$ *
;
úú* +
}
ùù  !
}
†† 
switch
££ "
(
££# $
m_overflowMode
££$ 2
)
££2 3
{
§§ 
case
••  $
TextOverflowModes
••% 6
.
••6 7
Overflow
••7 ?
:
••? @
case
¶¶  $
TextOverflowModes
¶¶% 6
.
¶¶6 7

ScrollRect
¶¶7 A
:
¶¶A B
case
ßß  $
TextOverflowModes
ßß% 6
.
ßß6 7
Masking
ßß7 >
:
ßß> ?
break
©©$ )
;
©©) *
case
´´  $
TextOverflowModes
´´% 6
.
´´6 7
Truncate
´´7 ?
:
´´? @
i
¨¨$ %
=
¨¨& '&
RestoreWordWrappingState
¨¨( @
(
¨¨@ A
ref
¨¨A D"
m_SavedWordWrapState
¨¨E Y
)
¨¨Y Z
;
¨¨Z [#
characterToSubstitute
ÆÆ$ 9
.
ÆÆ9 :
index
ÆÆ: ?
=
ÆÆ@ A"
testedCharacterCount
ÆÆB V
;
ÆÆV W#
characterToSubstitute
ØØ$ 9
.
ØØ9 :
unicode
ØØ: A
=
ØØB C
$num
ØØD H
;
ØØH I
continue
∞∞$ ,
;
∞∞, -
case
≤≤  $
TextOverflowModes
≤≤% 6
.
≤≤6 7
Ellipsis
≤≤7 ?
:
≤≤? @
if
≥≥$ &
(
≥≥' (/
!m_EllipsisInsertionCandidateStack
≥≥( I
.
≥≥I J
Count
≥≥J O
==
≥≥P R
$num
≥≥S T
)
≥≥T U
{
¥¥$ %
i
µµ( )
=
µµ* +
-
µµ, -
$num
µµ- .
;
µµ. /
m_characterCount
∂∂( 8
=
∂∂9 :
$num
∂∂; <
;
∂∂< =#
characterToSubstitute
∑∑( =
.
∑∑= >
index
∑∑> C
=
∑∑D E
$num
∑∑F G
;
∑∑G H#
characterToSubstitute
∏∏( =
.
∏∏= >
unicode
∏∏> E
=
∏∏F G
$num
∏∏H L
;
∏∏L M$
m_firstCharacterOfLine
ππ( >
=
ππ? @
$num
ππA B
;
ππB C
continue
∫∫( 0
;
∫∫0 1
}
ªª$ %
var
ΩΩ$ '
ellipsisState
ΩΩ( 5
=
ΩΩ6 7/
!m_EllipsisInsertionCandidateStack
ΩΩ8 Y
.
ΩΩY Z
Pop
ΩΩZ ]
(
ΩΩ] ^
)
ΩΩ^ _
;
ΩΩ_ `
i
ææ$ %
=
ææ& '&
RestoreWordWrappingState
ææ( @
(
ææ@ A
ref
ææA D
ellipsisState
ææE R
)
ææR S
;
ææS T
i
¿¿$ %
-=
¿¿& (
$num
¿¿) *
;
¿¿* +
m_characterCount
¡¡$ 4
-=
¡¡5 7
$num
¡¡8 9
;
¡¡9 :#
characterToSubstitute
¬¬$ 9
.
¬¬9 :
index
¬¬: ?
=
¬¬@ A
m_characterCount
¬¬B R
;
¬¬R S#
characterToSubstitute
√√$ 9
.
√√9 :
unicode
√√: A
=
√√B C
$num
√√D J
;
√√J K
restoreCount
≈≈$ 0
+=
≈≈1 3
$num
≈≈4 5
;
≈≈5 6
continue
∆∆$ ,
;
∆∆, -
case
»»  $
TextOverflowModes
»»% 6
.
»»6 7
Linked
»»7 =
:
»»= >
i
……$ %
=
……& '&
RestoreWordWrappingState
……( @
(
……@ A
ref
……A D"
m_SavedWordWrapState
……E Y
)
……Y Z
;
……Z [
if
ÀÀ$ &
(
ÀÀ' (#
m_linkedTextComponent
ÀÀ( =
!=
ÀÀ> @
null
ÀÀA E
)
ÀÀE F
{
ÃÃ$ %#
m_linkedTextComponent
ÕÕ( =
.
ÕÕ= >
text
ÕÕ> B
=
ÕÕC D
text
ÕÕE I
;
ÕÕI J#
m_linkedTextComponent
ŒŒ( =
.
ŒŒ= >#
firstVisibleCharacter
ŒŒ> S
=
ŒŒT U
m_characterCount
ŒŒV f
;
ŒŒf g#
m_linkedTextComponent
œœ( =
.
œœ= >
ForceMeshUpdate
œœ> M
(
œœM N
)
œœN O
;
œœO P
m_isTextTruncated
——( 9
=
——: ;
true
——< @
;
——@ A
}
““$ %#
characterToSubstitute
’’$ 9
.
’’9 :
index
’’: ?
=
’’@ A
m_characterCount
’’B R
;
’’R S#
characterToSubstitute
÷÷$ 9
.
÷÷9 :
unicode
÷÷: A
=
÷÷B C
$num
÷÷D H
;
÷÷H I
continue
◊◊$ ,
;
◊◊, -
}
ÿÿ 
}
⁄⁄ 
}
‡‡ 
if
ÂÂ 
(
ÂÂ 
charCode
ÂÂ  
==
ÂÂ! #
$num
ÂÂ$ %
)
ÂÂ% &
{
ÊÊ 

m_textInfo
ÁÁ "
.
ÁÁ" #
characterInfo
ÁÁ# 0
[
ÁÁ0 1
m_characterCount
ÁÁ1 A
]
ÁÁA B
.
ÁÁB C
	isVisible
ÁÁC L
=
ÁÁM N
false
ÁÁO T
;
ÁÁT U*
m_lastVisibleCharacterOfLine
ËË 4
=
ËË5 6
m_characterCount
ËË7 G
;
ËËG H

m_textInfo
ÈÈ "
.
ÈÈ" #
lineInfo
ÈÈ# +
[
ÈÈ+ ,
m_lineNumber
ÈÈ, 8
]
ÈÈ8 9
.
ÈÈ9 :

spaceCount
ÈÈ: D
+=
ÈÈE G
$num
ÈÈH I
;
ÈÈI J

m_textInfo
ÍÍ "
.
ÍÍ" #

spaceCount
ÍÍ# -
+=
ÍÍ. 0
$num
ÍÍ1 2
;
ÍÍ2 3
}
ÎÎ 
else
ÏÏ 
if
ÏÏ 
(
ÏÏ 
charCode
ÏÏ %
==
ÏÏ& (
$num
ÏÏ) -
)
ÏÏ- .
{
ÌÌ 

m_textInfo
ÓÓ "
.
ÓÓ" #
characterInfo
ÓÓ# 0
[
ÓÓ0 1
m_characterCount
ÓÓ1 A
]
ÓÓA B
.
ÓÓB C
	isVisible
ÓÓC L
=
ÓÓM N
false
ÓÓO T
;
ÓÓT U
}
ÔÔ 
else
 
{
ÒÒ 
if
ÛÛ 
(
ÛÛ "
m_overrideHtmlColors
ÛÛ 0
)
ÛÛ0 1
vertexColor
ÙÙ '
=
ÙÙ( )
m_fontColor32
ÙÙ* 7
;
ÙÙ7 8
else
ıı 
vertexColor
ˆˆ '
=
ˆˆ( )
m_htmlColor
ˆˆ* 5
;
ˆˆ5 6
if
¸¸ 
(
¸¸ 
m_textElementType
¸¸ -
==
¸¸. 0!
TMP_TextElementType
¸¸1 D
.
¸¸D E
	Character
¸¸E N
)
¸¸N O
{
˝˝ !
SaveGlyphVertexInfo
ˇˇ /
(
ˇˇ/ 0
padding
ˇˇ0 7
,
ˇˇ7 8
style_padding
ˇˇ9 F
,
ˇˇF G
vertexColor
ˇˇH S
)
ˇˇS T
;
ˇˇT U
}
ÄÄ 
else
ÅÅ 
if
ÅÅ 
(
ÅÅ  !
m_textElementType
ÅÅ! 2
==
ÅÅ3 5!
TMP_TextElementType
ÅÅ6 I
.
ÅÅI J
Sprite
ÅÅJ P
)
ÅÅP Q
{
ÇÇ "
SaveSpriteVertexInfo
ÉÉ 0
(
ÉÉ0 1
vertexColor
ÉÉ1 <
)
ÉÉ< =
;
ÉÉ= >
}
ÑÑ 
if
ââ 
(
ââ 
isStartOfNewLine
ââ ,
)
ââ, -
{
ää 
isStartOfNewLine
ãã ,
=
ãã- .
false
ãã/ 4
;
ãã4 5+
m_firstVisibleCharacterOfLine
åå 9
=
åå: ;
m_characterCount
åå< L
;
ååL M
}
çç )
m_lineVisibleCharacterCount
èè 3
+=
èè4 6
$num
èè7 8
;
èè8 9*
m_lastVisibleCharacterOfLine
êê 4
=
êê5 6
m_characterCount
êê7 G
;
êêG H

m_textInfo
ëë "
.
ëë" #
lineInfo
ëë# +
[
ëë+ ,
m_lineNumber
ëë, 8
]
ëë8 9
.
ëë9 :

marginLeft
ëë: D
=
ëëE F

marginLeft
ëëG Q
;
ëëQ R

m_textInfo
íí "
.
íí" #
lineInfo
íí# +
[
íí+ ,
m_lineNumber
íí, 8
]
íí8 9
.
íí9 :
marginRight
íí: E
=
ííF G
marginRight
ííH S
;
ííS T
}
ìì 
}
òò 
else
ôô 
{
öö 
if
°° 
(
°° 
(
°° 
charCode
°° !
==
°°" $
$num
°°% '
||
°°( *
charCode
°°+ 3
==
°°4 6
$num
°°7 9
||
°°: <
charCode
°°= E
==
°°F H
$num
°°I M
||
°°N P
charCode
°°Q Y
==
°°Z \
$num
°°] c
||
°°d f
charCode
°°g o
==
°°p r
$num
°°s y
||
°°z |
charCode°°} Ö
==°°Ü à
$num°°â è
||°°ê í
char°°ì ó
.°°ó ò
IsSeparator°°ò £
(°°£ §
(°°§ •
char°°• ©
)°°© ™
charCode°°™ ≤
)°°≤ ≥
)°°≥ ¥
&&°°µ ∑
charCode°°∏ ¿
!=°°¡ √
$num°°ƒ »
&&°°… À
charCode°°Ã ‘
!=°°’ ◊
$num°°ÿ ﬁ
&&°°ﬂ ·
charCode°°‚ Í
!=°°Î Ì
$num°°Ó Ù
)°°Ù ı
{
¢¢ 

m_textInfo
££ "
.
££" #
lineInfo
££# +
[
££+ ,
m_lineNumber
££, 8
]
££8 9
.
££9 :

spaceCount
££: D
+=
££E G
$num
££H I
;
££I J

m_textInfo
§§ "
.
§§" #

spaceCount
§§# -
+=
§§. 0
$num
§§1 2
;
§§2 3
}
•• 
if
ßß 
(
ßß 
charCode
ßß  
==
ßß! #
$num
ßß$ (
)
ßß( )

m_textInfo
®® "
.
®®" #
lineInfo
®®# +
[
®®+ ,
m_lineNumber
®®, 8
]
®®8 9
.
®®9 :#
controlCharacterCount
®®: O
+=
®®P R
$num
®®S T
;
®®T U
}
≠≠ 
if
≥≥ 
(
≥≥ 
m_overflowMode
≥≥ "
==
≥≥# %
TextOverflowModes
≥≥& 7
.
≥≥7 8
Ellipsis
≥≥8 @
&&
≥≥A C
(
≥≥D E"
isInjectingCharacter
≥≥E Y
==
≥≥Z \
false
≥≥] b
||
≥≥c e
charCode
≥≥f n
==
≥≥o q
$num
≥≥r v
)
≥≥v w
)
≥≥w x
{
¥¥ 
float
µµ 
	fontScale
µµ #
=
µµ$ %
m_currentFontSize
µµ& 7
/
µµ8 9

m_Ellipsis
µµ: D
.
µµD E
	fontAsset
µµE N
.
µµN O

m_FaceInfo
µµO Y
.
µµY Z
	pointSize
µµZ c
*
µµd e

m_Ellipsis
µµf p
.
µµp q
	fontAsset
µµq z
.
µµz {

m_FaceInfoµµ{ Ö
.µµÖ Ü
scaleµµÜ ã
*µµå ç
(µµé è 
m_isOrthographicµµè ü
?µµ† °
$numµµ¢ £
:µµ§ •
$numµµ¶ ™
)µµ™ ´
;µµ´ ¨
float
∂∂ 
scale
∂∂ 
=
∂∂  !
	fontScale
∂∂" +
*
∂∂, -#
m_fontScaleMultiplier
∂∂. C
*
∂∂D E

m_Ellipsis
∂∂F P
.
∂∂P Q
	character
∂∂Q Z
.
∂∂Z [
m_Scale
∂∂[ b
*
∂∂c d

m_Ellipsis
∂∂e o
.
∂∂o p
	character
∂∂p y
.
∂∂y z
m_Glyph∂∂z Å
.∂∂Å Ç
scale∂∂Ç á
;∂∂á à
float
∑∑ 

marginLeft
∑∑ $
=
∑∑% &
m_marginLeft
∑∑' 3
;
∑∑3 4
float
∏∏ 
marginRight
∏∏ %
=
∏∏& '
m_marginRight
∏∏( 5
;
∏∏5 6
if
ªª 
(
ªª 
charCode
ªª  
==
ªª! #
$num
ªª$ (
&&
ªª) +
m_characterCount
ªª, <
!=
ªª= ?$
m_firstCharacterOfLine
ªª@ V
)
ªªV W
{
ºº 
	fontScale
ΩΩ !
=
ΩΩ" #

m_textInfo
ΩΩ$ .
.
ΩΩ. /
characterInfo
ΩΩ/ <
[
ΩΩ< =
m_characterCount
ΩΩ= M
-
ΩΩN O
$num
ΩΩP Q
]
ΩΩQ R
.
ΩΩR S
	pointSize
ΩΩS \
/
ΩΩ] ^

m_Ellipsis
ΩΩ_ i
.
ΩΩi j
	fontAsset
ΩΩj s
.
ΩΩs t

m_FaceInfo
ΩΩt ~
.
ΩΩ~ 
	pointSizeΩΩ à
*ΩΩâ ä

m_EllipsisΩΩã ï
.ΩΩï ñ
	fontAssetΩΩñ ü
.ΩΩü †

m_FaceInfoΩΩ† ™
.ΩΩ™ ´
scaleΩΩ´ ∞
*ΩΩ± ≤
(ΩΩ≥ ¥ 
m_isOrthographicΩΩ¥ ƒ
?ΩΩ≈ ∆
$numΩΩ« »
:ΩΩ…  
$numΩΩÀ œ
)ΩΩœ –
;ΩΩ– —
scale
ææ 
=
ææ 
	fontScale
ææ  )
*
ææ* +#
m_fontScaleMultiplier
ææ, A
*
ææB C

m_Ellipsis
ææD N
.
ææN O
	character
ææO X
.
ææX Y
m_Scale
ææY `
*
ææa b

m_Ellipsis
ææc m
.
ææm n
	character
ææn w
.
ææw x
m_Glyph
ææx 
.ææ Ä
scaleææÄ Ö
;ææÖ Ü

marginLeft
øø "
=
øø# $

m_textInfo
øø% /
.
øø/ 0
lineInfo
øø0 8
[
øø8 9
m_lineNumber
øø9 E
]
øøE F
.
øøF G

marginLeft
øøG Q
;
øøQ R
marginRight
¿¿ #
=
¿¿$ %

m_textInfo
¿¿& 0
.
¿¿0 1
lineInfo
¿¿1 9
[
¿¿9 :
m_lineNumber
¿¿: F
]
¿¿F G
.
¿¿G H
marginRight
¿¿H S
;
¿¿S T
}
¡¡ 
float
√√ 

textHeight
√√ $
=
√√% &
m_maxTextAscender
√√' 8
-
√√9 :
(
√√; < 
m_maxLineDescender
√√< N
-
√√O P
m_lineOffset
√√Q ]
)
√√] ^
+
√√_ `
(
√√a b
m_lineOffset
√√b n
>
√√o p
$num
√√q r
&&
√√s u$
m_IsDrivenLineSpacing√√v ã
==√√å é
false√√è î
?√√ï ñ!
m_maxLineAscender√√ó ®
-√√© ™%
m_startOfLineAscender√√´ ¿
:√√¡ ¬
$num√√√ ƒ
)√√ƒ ≈
;√√≈ ∆
float
ƒƒ 
	textWidth
ƒƒ #
=
ƒƒ$ %
Mathf
ƒƒ& +
.
ƒƒ+ ,
Abs
ƒƒ, /
(
ƒƒ/ 0

m_xAdvance
ƒƒ0 :
)
ƒƒ: ;
+
ƒƒ< =
(
ƒƒ> ?
!
ƒƒ? @
m_isRightToLeft
ƒƒ@ O
?
ƒƒP Q

m_Ellipsis
ƒƒR \
.
ƒƒ\ ]
	character
ƒƒ] f
.
ƒƒf g
m_Glyph
ƒƒg n
.
ƒƒn o
metrics
ƒƒo v
.
ƒƒv w 
horizontalAdvanceƒƒw à
:ƒƒâ ä
$numƒƒã å
)ƒƒå ç
*ƒƒé è
(ƒƒê ë
$numƒƒë í
-ƒƒì î#
m_charWidthAdjDeltaƒƒï ®
)ƒƒ® ©
*ƒƒ™ ´
scaleƒƒ¨ ±
;ƒƒ± ≤
float
≈≈ (
widthOfTextAreaForEllipsis
≈≈ 4
=
≈≈5 6
m_width
≈≈7 >
!=
≈≈? A
-
≈≈B C
$num
≈≈C D
?
≈≈E F
Mathf
≈≈G L
.
≈≈L M
Min
≈≈M P
(
≈≈P Q
marginWidth
≈≈Q \
+
≈≈] ^
$num
≈≈_ f
-
≈≈g h

marginLeft
≈≈i s
-
≈≈t u
marginRight≈≈v Å
,≈≈Å Ç
m_width≈≈É ä
)≈≈ä ã
:≈≈å ç
marginWidth≈≈é ô
+≈≈ö õ
$num≈≈ú £
-≈≈§ •

marginLeft≈≈¶ ∞
-≈≈± ≤
marginRight≈≈≥ æ
;≈≈æ ø
if
«« 
(
«« 
	textWidth
«« !
<
««" #(
widthOfTextAreaForEllipsis
««$ >
*
««? @
(
««A B 
isJustifiedOrFlush
««B T
?
««U V
$num
««W \
:
««] ^
$num
««_ c
)
««c d
&&
««e g

textHeight
««h r
<
««s t
marginHeight««u Å
+««Ç É
$num««Ñ ã
)««ã å
{
»» #
SaveWordWrappingState
…… -
(
……- .
ref
……. 1"
m_SavedEllipsisState
……2 F
,
……F G
i
……H I
,
……I J
m_characterCount
……K [
)
……[ \
;
……\ ]/
!m_EllipsisInsertionCandidateStack
   9
.
  9 :
Push
  : >
(
  > ?"
m_SavedEllipsisState
  ? S
)
  S T
;
  T U
}
ÀÀ 
}
ÃÃ 

m_textInfo
““ 
.
““ 
characterInfo
““ (
[
““( )
m_characterCount
““) 9
]
““9 :
.
““: ;

lineNumber
““; E
=
““F G
m_lineNumber
““H T
;
““T U

m_textInfo
”” 
.
”” 
characterInfo
”” (
[
””( )
m_characterCount
””) 9
]
””9 :
.
””: ;

pageNumber
””; E
=
””F G
m_pageNumber
””H T
;
””T U
if
’’ 
(
’’ 
charCode
’’ 
!=
’’ 
$num
’’  "
&&
’’# %
charCode
’’& .
!=
’’/ 1
$num
’’2 4
&&
’’5 7
charCode
’’8 @
!=
’’A C
$num
’’D F
&&
’’G I"
isInjectingCharacter
’’J ^
==
’’_ a
false
’’b g
||’’Ç Ñ

m_textInfo’’Ö è
.’’è ê
lineInfo’’ê ò
[’’ò ô
m_lineNumber’’ô •
]’’• ¶
.’’¶ ß
characterCount’’ß µ
==’’∂ ∏
$num’’π ∫
)’’∫ ª

m_textInfo
÷÷ 
.
÷÷ 
lineInfo
÷÷ '
[
÷÷' (
m_lineNumber
÷÷( 4
]
÷÷4 5
.
÷÷5 6
	alignment
÷÷6 ?
=
÷÷@ A!
m_lineJustification
÷÷B U
;
÷÷U V
if
ﬂﬂ 
(
ﬂﬂ 
charCode
ﬂﬂ 
==
ﬂﬂ 
$num
ﬂﬂ  !
)
ﬂﬂ! "
{
‡‡ 
float
·· 
tabSize
·· !
=
··" # 
m_currentFontAsset
··$ 6
.
··6 7

m_FaceInfo
··7 A
.
··A B
tabWidth
··B J
*
··K L 
m_currentFontAsset
··M _
.
··_ `
tabSize
··` g
*
··h i!
currentElementScale
··j }
;
··} ~
float
‚‚ 
tabs
‚‚ 
=
‚‚  
Mathf
‚‚! &
.
‚‚& '
Ceil
‚‚' +
(
‚‚+ ,

m_xAdvance
‚‚, 6
/
‚‚7 8
tabSize
‚‚9 @
)
‚‚@ A
*
‚‚B C
tabSize
‚‚D K
;
‚‚K L

m_xAdvance
„„ 
=
„„  
tabs
„„! %
>
„„& '

m_xAdvance
„„( 2
?
„„3 4
tabs
„„5 9
:
„„: ;

m_xAdvance
„„< F
+
„„G H
tabSize
„„I P
;
„„P Q
}
‰‰ 
else
ÂÂ 
if
ÂÂ 
(
ÂÂ 
m_monoSpacing
ÂÂ &
!=
ÂÂ' )
$num
ÂÂ* +
)
ÂÂ+ ,
{
ÊÊ 

m_xAdvance
ÁÁ 
+=
ÁÁ !
(
ÁÁ" #
m_monoSpacing
ÁÁ# 0
-
ÁÁ1 2
monoAdvance
ÁÁ3 >
+
ÁÁ? @
(
ÁÁA B
(
ÁÁB C 
m_currentFontAsset
ÁÁC U
.
ÁÁU V!
normalSpacingOffset
ÁÁV i
+
ÁÁj k)
characterSpacingAdjustmentÁÁl Ü
)ÁÁÜ á
*ÁÁà â
currentEmScaleÁÁä ò
)ÁÁò ô
+ÁÁö õ

m_cSpacingÁÁú ¶
)ÁÁ¶ ß
*ÁÁ® ©
(ÁÁ™ ´
$numÁÁ´ ¨
-ÁÁ≠ Æ#
m_charWidthAdjDeltaÁÁØ ¬
)ÁÁ¬ √
;ÁÁ√ ƒ
if
ÈÈ 
(
ÈÈ 
isWhiteSpace
ÈÈ $
||
ÈÈ% '
charCode
ÈÈ( 0
==
ÈÈ1 3
$num
ÈÈ4 :
)
ÈÈ: ;

m_xAdvance
ÍÍ "
+=
ÍÍ# %
m_wordSpacing
ÍÍ& 3
*
ÍÍ4 5
currentEmScale
ÍÍ6 D
;
ÍÍD E
}
ÎÎ 
else
ÏÏ 
if
ÏÏ 
(
ÏÏ 
m_isRightToLeft
ÏÏ (
)
ÏÏ( )
{
ÌÌ 

m_xAdvance
ÓÓ 
-=
ÓÓ !
(
ÓÓ" #
(
ÓÓ# $
(
ÓÓ$ %
glyphAdjustments
ÓÓ% 5
.
ÓÓ5 6

m_XAdvance
ÓÓ6 @
+
ÓÓA B#
boldSpacingAdjustment
ÓÓC X
)
ÓÓX Y
*
ÓÓZ [!
currentElementScale
ÓÓ\ o
+
ÓÓp q
(
ÓÓr s!
m_currentFontAssetÓÓs Ö
.ÓÓÖ Ü#
normalSpacingOffsetÓÓÜ ô
+ÓÓö õ*
characterSpacingAdjustmentÓÓú ∂
)ÓÓ∂ ∑
*ÓÓ∏ π
currentEmScaleÓÓ∫ »
+ÓÓ…  

m_cSpacingÓÓÀ ’
)ÓÓ’ ÷
*ÓÓ◊ ÿ
(ÓÓŸ ⁄
$numÓÓ⁄ €
-ÓÓ‹ ›#
m_charWidthAdjDeltaÓÓﬁ Ò
)ÓÓÒ Ú
)ÓÓÚ Û
;ÓÓÛ Ù
if
 
(
 
isWhiteSpace
 $
||
% '
charCode
( 0
==
1 3
$num
4 :
)
: ;

m_xAdvance
ÒÒ "
-=
ÒÒ# %
m_wordSpacing
ÒÒ& 3
*
ÒÒ4 5
currentEmScale
ÒÒ6 D
;
ÒÒD E
}
ÚÚ 
else
ÛÛ 
{
ÙÙ 
float
ıı 
scaleFXMultiplier
ıı +
=
ıı, -
$num
ıı. /
;
ıı/ 0
if
ˆˆ 
(
ˆˆ 
m_isFXMatrixSet
ˆˆ '
)
ˆˆ' (
scaleFXMultiplier
ˆˆ) :
=
ˆˆ; <

m_FXMatrix
ˆˆ= G
.
ˆˆG H

lossyScale
ˆˆH R
.
ˆˆR S
x
ˆˆS T
;
ˆˆT U

m_xAdvance
¯¯ 
+=
¯¯ !
(
¯¯" #
(
¯¯# $!
currentGlyphMetrics
¯¯$ 7
.
¯¯7 8
horizontalAdvance
¯¯8 I
*
¯¯J K
scaleFXMultiplier
¯¯L ]
+
¯¯^ _
glyphAdjustments
¯¯` p
.
¯¯p q

m_XAdvance
¯¯q {
+
¯¯| }$
boldSpacingAdjustment¯¯~ ì
)¯¯ì î
*¯¯ï ñ#
currentElementScale¯¯ó ™
+¯¯´ ¨
(¯¯≠ Æ"
m_currentFontAsset¯¯Æ ¿
.¯¯¿ ¡#
normalSpacingOffset¯¯¡ ‘
+¯¯’ ÷*
characterSpacingAdjustment¯¯◊ Ò
)¯¯Ò Ú
*¯¯Û Ù
currentEmScale¯¯ı É
+¯¯Ñ Ö

m_cSpacing¯¯Ü ê
)¯¯ê ë
*¯¯í ì
(¯¯î ï
$num¯¯ï ñ
-¯¯ó ò#
m_charWidthAdjDelta¯¯ô ¨
)¯¯¨ ≠
;¯¯≠ Æ
if
˙˙ 
(
˙˙ 
isWhiteSpace
˙˙ $
||
˙˙% '
charCode
˙˙( 0
==
˙˙1 3
$num
˙˙4 :
)
˙˙: ;

m_xAdvance
˚˚ "
+=
˚˚# %
m_wordSpacing
˚˚& 3
*
˚˚4 5
currentEmScale
˚˚6 D
;
˚˚D E
}
¸¸ 

m_textInfo
ˇˇ 
.
ˇˇ 
characterInfo
ˇˇ (
[
ˇˇ( )
m_characterCount
ˇˇ) 9
]
ˇˇ9 :
.
ˇˇ: ;
xAdvance
ˇˇ; C
=
ˇˇD E

m_xAdvance
ˇˇF P
;
ˇˇP Q
if
àà 
(
àà 
charCode
àà 
==
àà 
$num
àà  "
)
àà" #
{
ââ 

m_xAdvance
éé 
=
éé  
$num
éé! "
+
éé# $

tag_Indent
éé% /
;
éé/ 0
}
ìì 
if
ôô 
(
ôô 
charCode
ôô 
==
ôô 
$num
ôô  "
||
ôô# %
charCode
ôô& .
==
ôô/ 1
$num
ôô2 4
||
ôô5 7
charCode
ôô8 @
==
ôôA C
$num
ôôD H
||
ôôI K
charCode
ôôL T
==
ôôU W
$num
ôôX ^
||
ôô_ a
charCode
ôôb j
==
ôôk m
$num
ôôn t
||
ôôu w
(
ôôx y
charCodeôôy Å
==ôôÇ Ñ
$numôôÖ â
&&ôôä å$
isInjectingCharacterôôç °
)ôô° ¢
||ôô£ • 
m_characterCountôô¶ ∂
==ôô∑ π#
totalCharacterCountôô∫ Õ
-ôôŒ œ
$numôô– —
)ôô— “
{
öö 
float
†† %
baselineAdjustmentDelta
†† 1
=
††2 3
m_maxLineAscender
††4 E
-
††F G#
m_startOfLineAscender
††H ]
;
††] ^
if
°° 
(
°° 
m_lineOffset
°° $
>
°°% &
$num
°°' (
&&
°°) +
Math
°°, 0
.
°°0 1
Abs
°°1 4
(
°°4 5%
baselineAdjustmentDelta
°°5 L
)
°°L M
>
°°N O
$num
°°P U
&&
°°V X#
m_IsDrivenLineSpacing
°°Y n
==
°°o q
false
°°r w
&&
°°x z
!
°°{ |
m_isNewPage°°| á
)°°á à
{
¢¢ 
AdjustLineOffset
§§ (
(
§§( )$
m_firstCharacterOfLine
§§) ?
,
§§? @
m_characterCount
§§A Q
,
§§Q R%
baselineAdjustmentDelta
§§S j
)
§§j k
;
§§k l 
m_ElementDescender
•• *
-=
••+ -%
baselineAdjustmentDelta
••. E
;
••E F
m_lineOffset
¶¶ $
+=
¶¶% '%
baselineAdjustmentDelta
¶¶( ?
;
¶¶? @
if
©© 
(
©© "
m_SavedEllipsisState
©© 0
.
©©0 1

lineNumber
©©1 ;
==
©©< >
m_lineNumber
©©? K
)
©©K L
{
™™ "
m_SavedEllipsisState
´´ 0
=
´´1 2/
!m_EllipsisInsertionCandidateStack
´´3 T
.
´´T U
Pop
´´U X
(
´´X Y
)
´´Y Z
;
´´Z ["
m_SavedEllipsisState
¨¨ 0
.
¨¨0 1!
startOfLineAscender
¨¨1 D
+=
¨¨E G%
baselineAdjustmentDelta
¨¨H _
;
¨¨_ `"
m_SavedEllipsisState
≠≠ 0
.
≠≠0 1

lineOffset
≠≠1 ;
+=
≠≠< >%
baselineAdjustmentDelta
≠≠? V
;
≠≠V W/
!m_EllipsisInsertionCandidateStack
ÆÆ =
.
ÆÆ= >
Push
ÆÆ> B
(
ÆÆB C"
m_SavedEllipsisState
ÆÆC W
)
ÆÆW X
;
ÆÆX Y
}
ØØ 
}
∞∞ 
m_isNewPage
±± 
=
±±  !
false
±±" '
;
±±' (
float
¥¥ 
lineAscender
¥¥ &
=
¥¥' (
m_maxLineAscender
¥¥) :
-
¥¥; <
m_lineOffset
¥¥= I
;
¥¥I J
float
µµ 
lineDescender
µµ '
=
µµ( ) 
m_maxLineDescender
µµ* <
-
µµ= >
m_lineOffset
µµ? K
;
µµK L 
m_ElementDescender
∏∏ &
=
∏∏' ( 
m_ElementDescender
∏∏) ;
<
∏∏< =
lineDescender
∏∏> K
?
∏∏L M 
m_ElementDescender
∏∏N `
:
∏∏a b
lineDescender
∏∏c p
;
∏∏p q
if
ππ 
(
ππ 
!
ππ &
isMaxVisibleDescenderSet
ππ 1
)
ππ1 2!
maxVisibleDescender
∫∫ +
=
∫∫, - 
m_ElementDescender
∫∫. @
;
∫∫@ A
if
ºº 
(
ºº &
m_useMaxVisibleDescender
ºº 0
&&
ºº1 3
(
ºº4 5
m_characterCount
ºº5 E
>=
ººF H$
m_maxVisibleCharacters
ººI _
||
ºº` b
m_lineNumber
ººc o
>=
ººp r 
m_maxVisibleLinesººs Ñ
)ººÑ Ö
)ººÖ Ü&
isMaxVisibleDescenderSet
ΩΩ 0
=
ΩΩ1 2
true
ΩΩ3 7
;
ΩΩ7 8

m_textInfo
¿¿ 
.
¿¿ 
lineInfo
¿¿ '
[
¿¿' (
m_lineNumber
¿¿( 4
]
¿¿4 5
.
¿¿5 6!
firstCharacterIndex
¿¿6 I
=
¿¿J K$
m_firstCharacterOfLine
¿¿L b
;
¿¿b c

m_textInfo
¡¡ 
.
¡¡ 
lineInfo
¡¡ '
[
¡¡' (
m_lineNumber
¡¡( 4
]
¡¡4 5
.
¡¡5 6(
firstVisibleCharacterIndex
¡¡6 P
=
¡¡Q R+
m_firstVisibleCharacterOfLine
¡¡S p
=
¡¡q r%
m_firstCharacterOfLine¡¡s â
>¡¡ä ã-
m_firstVisibleCharacterOfLine¡¡å ©
?¡¡™ ´&
m_firstCharacterOfLine¡¡¨ ¬
:¡¡√ ƒ-
m_firstVisibleCharacterOfLine¡¡≈ ‚
;¡¡‚ „

m_textInfo
¬¬ 
.
¬¬ 
lineInfo
¬¬ '
[
¬¬' (
m_lineNumber
¬¬( 4
]
¬¬4 5
.
¬¬5 6 
lastCharacterIndex
¬¬6 H
=
¬¬I J#
m_lastCharacterOfLine
¬¬K `
=
¬¬a b
m_characterCount
¬¬c s
;
¬¬s t

m_textInfo
√√ 
.
√√ 
lineInfo
√√ '
[
√√' (
m_lineNumber
√√( 4
]
√√4 5
.
√√5 6'
lastVisibleCharacterIndex
√√6 O
=
√√P Q*
m_lastVisibleCharacterOfLine
√√R n
=
√√o p+
m_lastVisibleCharacterOfLine√√q ç
<√√é è-
m_firstVisibleCharacterOfLine√√ê ≠
?√√Æ Ø-
m_firstVisibleCharacterOfLine√√∞ Õ
:√√Œ œ,
m_lastVisibleCharacterOfLine√√– Ï
;√√Ï Ì

m_textInfo
≈≈ 
.
≈≈ 
lineInfo
≈≈ '
[
≈≈' (
m_lineNumber
≈≈( 4
]
≈≈4 5
.
≈≈5 6
characterCount
≈≈6 D
=
≈≈E F

m_textInfo
≈≈G Q
.
≈≈Q R
lineInfo
≈≈R Z
[
≈≈Z [
m_lineNumber
≈≈[ g
]
≈≈g h
.
≈≈h i 
lastCharacterIndex
≈≈i {
-
≈≈| }

m_textInfo≈≈~ à
.≈≈à â
lineInfo≈≈â ë
[≈≈ë í
m_lineNumber≈≈í û
]≈≈û ü
.≈≈ü †#
firstCharacterIndex≈≈† ≥
+≈≈¥ µ
$num≈≈∂ ∑
;≈≈∑ ∏

m_textInfo
∆∆ 
.
∆∆ 
lineInfo
∆∆ '
[
∆∆' (
m_lineNumber
∆∆( 4
]
∆∆4 5
.
∆∆5 6#
visibleCharacterCount
∆∆6 K
=
∆∆L M)
m_lineVisibleCharacterCount
∆∆N i
;
∆∆i j

m_textInfo
«« 
.
«« 
lineInfo
«« '
[
««' (
m_lineNumber
««( 4
]
««4 5
.
««5 6
lineExtents
««6 A
.
««A B
min
««B E
=
««F G
new
««H K
Vector2
««L S
(
««S T

m_textInfo
««T ^
.
««^ _
characterInfo
««_ l
[
««l m,
m_firstVisibleCharacterOfLine««m ä
]««ä ã
.««ã å

bottomLeft««å ñ
.««ñ ó
x««ó ò
,««ò ô
lineDescender««ö ß
)««ß ®
;««® ©

m_textInfo
»» 
.
»» 
lineInfo
»» '
[
»»' (
m_lineNumber
»»( 4
]
»»4 5
.
»»5 6
lineExtents
»»6 A
.
»»A B
max
»»B E
=
»»F G
new
»»H K
Vector2
»»L S
(
»»S T

m_textInfo
»»T ^
.
»»^ _
characterInfo
»»_ l
[
»»l m+
m_lastVisibleCharacterOfLine»»m â
]»»â ä
.»»ä ã
topRight»»ã ì
.»»ì î
x»»î ï
,»»ï ñ
lineAscender»»ó £
)»»£ §
;»»§ •

m_textInfo
…… 
.
…… 
lineInfo
…… '
[
……' (
m_lineNumber
……( 4
]
……4 5
.
……5 6
length
……6 <
=
……= >

m_textInfo
……? I
.
……I J
lineInfo
……J R
[
……R S
m_lineNumber
……S _
]
……_ `
.
……` a
lineExtents
……a l
.
……l m
max
……m p
.
……p q
x
……q r
-
……s t
(
……u v
padding
……v }
*
……~ #
currentElementScale……Ä ì
)……ì î
;……î ï

m_textInfo
   
.
   
lineInfo
   '
[
  ' (
m_lineNumber
  ( 4
]
  4 5
.
  5 6
width
  6 ;
=
  < =
widthOfTextArea
  > M
;
  M N
if
ÃÃ 
(
ÃÃ 

m_textInfo
ÃÃ "
.
ÃÃ" #
lineInfo
ÃÃ# +
[
ÃÃ+ ,
m_lineNumber
ÃÃ, 8
]
ÃÃ8 9
.
ÃÃ9 :
characterCount
ÃÃ: H
==
ÃÃI K
$num
ÃÃL M
)
ÃÃM N

m_textInfo
ÕÕ "
.
ÕÕ" #
lineInfo
ÕÕ# +
[
ÕÕ+ ,
m_lineNumber
ÕÕ, 8
]
ÕÕ8 9
.
ÕÕ9 :
	alignment
ÕÕ: C
=
ÕÕD E!
m_lineJustification
ÕÕF Y
;
ÕÕY Z
float
œœ 
maxAdvanceOffset
œœ *
=
œœ+ ,
(
œœ- .#
boldSpacingAdjustment
œœ. C
*
œœD E!
currentElementScale
œœF Y
+
œœZ [
(
œœ\ ] 
m_currentFontAsset
œœ] o
.
œœo p"
normalSpacingOffsetœœp É
+œœÑ Ö*
characterSpacingAdjustmentœœÜ †
)œœ† °
*œœ¢ £
currentEmScaleœœ§ ≤
-œœ≥ ¥

m_cSpacingœœµ ø
)œœø ¿
*œœ¡ ¬
(œœ√ ƒ
$numœœƒ ≈
-œœ∆ «#
m_charWidthAdjDeltaœœ» €
)œœ€ ‹
;œœ‹ ›
if
–– 
(
–– 

m_textInfo
–– "
.
––" #
characterInfo
––# 0
[
––0 1*
m_lastVisibleCharacterOfLine
––1 M
]
––M N
.
––N O
	isVisible
––O X
)
––X Y

m_textInfo
—— "
.
——" #
lineInfo
——# +
[
——+ ,
m_lineNumber
——, 8
]
——8 9
.
——9 :

maxAdvance
——: D
=
——E F

m_textInfo
——G Q
.
——Q R
characterInfo
——R _
[
——_ `*
m_lastVisibleCharacterOfLine
——` |
]
——| }
.
——} ~
xAdvance——~ Ü
+——á à
(——â ä
m_isRightToLeft——ä ô
?——ö õ 
maxAdvanceOffset——ú ¨
:——≠ Æ
-——Ø ∞ 
maxAdvanceOffset——± ¡
)——¡ ¬
;——¬ √
else
““ 

m_textInfo
”” "
.
””" #
lineInfo
””# +
[
””+ ,
m_lineNumber
””, 8
]
””8 9
.
””9 :

maxAdvance
””: D
=
””E F

m_textInfo
””G Q
.
””Q R
characterInfo
””R _
[
””_ `#
m_lastCharacterOfLine
””` u
]
””u v
.
””v w
xAdvance
””w 
+””Ä Å
(””Ç É
m_isRightToLeft””É í
?””ì î 
maxAdvanceOffset””ï •
:””¶ ß
-””® © 
maxAdvanceOffset””™ ∫
)””∫ ª
;””ª º

m_textInfo
’’ 
.
’’ 
lineInfo
’’ '
[
’’' (
m_lineNumber
’’( 4
]
’’4 5
.
’’5 6
baseline
’’6 >
=
’’? @
$num
’’A B
-
’’C D
m_lineOffset
’’E Q
;
’’Q R

m_textInfo
÷÷ 
.
÷÷ 
lineInfo
÷÷ '
[
÷÷' (
m_lineNumber
÷÷( 4
]
÷÷4 5
.
÷÷5 6
ascender
÷÷6 >
=
÷÷? @
lineAscender
÷÷A M
;
÷÷M N

m_textInfo
◊◊ 
.
◊◊ 
lineInfo
◊◊ '
[
◊◊' (
m_lineNumber
◊◊( 4
]
◊◊4 5
.
◊◊5 6
	descender
◊◊6 ?
=
◊◊@ A
lineDescender
◊◊B O
;
◊◊O P

m_textInfo
ÿÿ 
.
ÿÿ 
lineInfo
ÿÿ '
[
ÿÿ' (
m_lineNumber
ÿÿ( 4
]
ÿÿ4 5
.
ÿÿ5 6

lineHeight
ÿÿ6 @
=
ÿÿA B
lineAscender
ÿÿC O
-
ÿÿP Q
lineDescender
ÿÿR _
+
ÿÿ` a
lineGap
ÿÿb i
*
ÿÿj k
	baseScale
ÿÿl u
;
ÿÿu v
if
€€ 
(
€€ 
charCode
€€  
==
€€! #
$num
€€$ &
||
€€' )
charCode
€€* 2
==
€€3 5
$num
€€6 8
||
€€9 ;
charCode
€€< D
==
€€E G
$num
€€H L
||
€€M O
charCode
€€P X
==
€€Y [
$num
€€\ b
||
€€c e
charCode
€€f n
==
€€o q
$num
€€r x
)
€€x y
{
‹‹ #
SaveWordWrappingState
ﬁﬁ -
(
ﬁﬁ- .
ref
ﬁﬁ. 1
m_SavedLineState
ﬁﬁ2 B
,
ﬁﬁB C
i
ﬁﬁD E
,
ﬁﬁE F
m_characterCount
ﬁﬁG W
)
ﬁﬁW X
;
ﬁﬁX Y
m_lineNumber
‡‡ $
+=
‡‡% '
$num
‡‡( )
;
‡‡) *
isStartOfNewLine
·· (
=
··) *
true
··+ /
;
··/ 0$
ignoreNonBreakingSpace
‚‚ .
=
‚‚/ 0
false
‚‚1 6
;
‚‚6 7
isFirstWordOfLine
„„ )
=
„„* +
true
„„, 0
;
„„0 1$
m_firstCharacterOfLine
ÂÂ .
=
ÂÂ/ 0
m_characterCount
ÂÂ1 A
+
ÂÂB C
$num
ÂÂD E
;
ÂÂE F)
m_lineVisibleCharacterCount
ÊÊ 3
=
ÊÊ4 5
$num
ÊÊ6 7
;
ÊÊ7 8
if
ÈÈ 
(
ÈÈ 
m_lineNumber
ÈÈ (
>=
ÈÈ) +

m_textInfo
ÈÈ, 6
.
ÈÈ6 7
lineInfo
ÈÈ7 ?
.
ÈÈ? @
Length
ÈÈ@ F
)
ÈÈF G
ResizeLineExtents
ÍÍ -
(
ÍÍ- .
m_lineNumber
ÍÍ. :
)
ÍÍ: ;
;
ÍÍ; <
float
ÏÏ !
lastVisibleAscender
ÏÏ 1
=
ÏÏ2 3

m_textInfo
ÏÏ4 >
.
ÏÏ> ?
characterInfo
ÏÏ? L
[
ÏÏL M
m_characterCount
ÏÏM ]
]
ÏÏ] ^
.
ÏÏ^ _
adjustedAscender
ÏÏ_ o
;
ÏÏo p
if
ÔÔ 
(
ÔÔ 
m_lineHeight
ÔÔ (
==
ÔÔ) +
TMP_Math
ÔÔ, 4
.
ÔÔ4 5
FLOAT_UNSET
ÔÔ5 @
)
ÔÔ@ A
{
 
float
ÒÒ !
lineOffsetDelta
ÒÒ" 1
=
ÒÒ2 3
$num
ÒÒ4 5
-
ÒÒ6 7 
m_maxLineDescender
ÒÒ8 J
+
ÒÒK L!
lastVisibleAscender
ÒÒM `
+
ÒÒa b
(
ÒÒc d
lineGap
ÒÒd k
+
ÒÒl m!
m_lineSpacingDeltaÒÒn Ä
)ÒÒÄ Å
*ÒÒÇ É
	baseScaleÒÒÑ ç
+ÒÒé è
(ÒÒê ë
m_lineSpacingÒÒë û
+ÒÒü †
(ÒÒ° ¢
charCodeÒÒ¢ ™
==ÒÒ´ ≠
$numÒÒÆ ∞
||ÒÒ± ≥
charCodeÒÒ¥ º
==ÒÒΩ ø
$numÒÒ¿ ∆
?ÒÒ« »"
m_paragraphSpacingÒÒ… €
:ÒÒ‹ ›
$numÒÒﬁ ﬂ
)ÒÒﬂ ‡
)ÒÒ‡ ·
*ÒÒ‚ „
currentEmScaleÒÒ‰ Ú
;ÒÒÚ Û
m_lineOffset
ÚÚ (
+=
ÚÚ) +
lineOffsetDelta
ÚÚ, ;
;
ÚÚ; <#
m_IsDrivenLineSpacing
ÛÛ 1
=
ÛÛ2 3
false
ÛÛ4 9
;
ÛÛ9 :
}
ÙÙ 
else
ıı 
{
ˆˆ 
m_lineOffset
˜˜ (
+=
˜˜) +
m_lineHeight
˜˜, 8
+
˜˜9 :
(
˜˜; <
m_lineSpacing
˜˜< I
+
˜˜J K
(
˜˜L M
charCode
˜˜M U
==
˜˜V X
$num
˜˜Y [
||
˜˜\ ^
charCode
˜˜_ g
==
˜˜h j
$num
˜˜k q
?
˜˜r s!
m_paragraphSpacing˜˜t Ü
:˜˜á à
$num˜˜â ä
)˜˜ä ã
)˜˜ã å
*˜˜ç é
currentEmScale˜˜è ù
;˜˜ù û#
m_IsDrivenLineSpacing
¯¯ 1
=
¯¯2 3
true
¯¯4 8
;
¯¯8 9
}
˘˘ 
m_maxLineAscender
˚˚ )
=
˚˚* +"
k_LargeNegativeFloat
˚˚, @
;
˚˚@ A 
m_maxLineDescender
¸¸ *
=
¸¸+ ,"
k_LargePositiveFloat
¸¸- A
;
¸¸A B#
m_startOfLineAscender
˝˝ -
=
˝˝. /!
lastVisibleAscender
˝˝0 C
;
˝˝C D

m_xAdvance
ˇˇ "
=
ˇˇ# $
$num
ˇˇ% &
+
ˇˇ' (
tag_LineIndent
ˇˇ) 7
+
ˇˇ8 9

tag_Indent
ˇˇ: D
;
ˇˇD E#
SaveWordWrappingState
ÅÅ -
(
ÅÅ- .
ref
ÅÅ. 1"
m_SavedWordWrapState
ÅÅ2 F
,
ÅÅF G
i
ÅÅH I
,
ÅÅI J
m_characterCount
ÅÅK [
)
ÅÅ[ \
;
ÅÅ\ ]#
SaveWordWrappingState
ÇÇ -
(
ÇÇ- .
ref
ÇÇ. 1#
m_SavedLastValidState
ÇÇ2 G
,
ÇÇG H
i
ÇÇI J
,
ÇÇJ K
m_characterCount
ÇÇL \
)
ÇÇ\ ]
;
ÇÇ] ^
m_characterCount
ÑÑ (
+=
ÑÑ) +
$num
ÑÑ, -
;
ÑÑ- .
continue
ää  
;
ää  !
}
ãã 
if
éé 
(
éé 
charCode
éé  
==
éé! #
$num
éé$ (
)
éé( )
i
èè 
=
èè %
m_InternalParsingBuffer
èè 3
.
èè3 4
Length
èè4 :
;
èè: ;
}
îî 
if
ûû 
(
ûû 

m_textInfo
ûû 
.
ûû 
characterInfo
ûû ,
[
ûû, -
m_characterCount
ûû- =
]
ûû= >
.
ûû> ?
	isVisible
ûû? H
)
ûûH I
{
üü 
m_meshExtents
†† !
.
††! "
min
††" %
.
††% &
x
††& '
=
††( )
Mathf
††* /
.
††/ 0
Min
††0 3
(
††3 4
m_meshExtents
††4 A
.
††A B
min
††B E
.
††E F
x
††F G
,
††G H

m_textInfo
††I S
.
††S T
characterInfo
††T a
[
††a b
m_characterCount
††b r
]
††r s
.
††s t

bottomLeft
††t ~
.
††~ 
x†† Ä
)††Ä Å
;††Å Ç
m_meshExtents
°° !
.
°°! "
min
°°" %
.
°°% &
y
°°& '
=
°°( )
Mathf
°°* /
.
°°/ 0
Min
°°0 3
(
°°3 4
m_meshExtents
°°4 A
.
°°A B
min
°°B E
.
°°E F
y
°°F G
,
°°G H

m_textInfo
°°I S
.
°°S T
characterInfo
°°T a
[
°°a b
m_characterCount
°°b r
]
°°r s
.
°°s t

bottomLeft
°°t ~
.
°°~ 
y°° Ä
)°°Ä Å
;°°Å Ç
m_meshExtents
££ !
.
££! "
max
££" %
.
££% &
x
££& '
=
££( )
Mathf
££* /
.
££/ 0
Max
££0 3
(
££3 4
m_meshExtents
££4 A
.
££A B
max
££B E
.
££E F
x
££F G
,
££G H

m_textInfo
££I S
.
££S T
characterInfo
££T a
[
££a b
m_characterCount
££b r
]
££r s
.
££s t
topRight
££t |
.
££| }
x
££} ~
)
££~ 
;££ Ä
m_meshExtents
§§ !
.
§§! "
max
§§" %
.
§§% &
y
§§& '
=
§§( )
Mathf
§§* /
.
§§/ 0
Max
§§0 3
(
§§3 4
m_meshExtents
§§4 A
.
§§A B
max
§§B E
.
§§E F
y
§§F G
,
§§G H

m_textInfo
§§I S
.
§§S T
characterInfo
§§T a
[
§§a b
m_characterCount
§§b r
]
§§r s
.
§§s t
topRight
§§t |
.
§§| }
y
§§} ~
)
§§~ 
;§§ Ä
}
®® 
if
¨¨ 
(
¨¨ 
m_overflowMode
¨¨ "
==
¨¨# %
TextOverflowModes
¨¨& 7
.
¨¨7 8
Page
¨¨8 <
&&
¨¨= ?
charCode
¨¨@ H
!=
¨¨I K
$num
¨¨L N
&&
¨¨O Q
charCode
¨¨R Z
!=
¨¨[ ]
$num
¨¨^ `
&&
¨¨a c
charCode
¨¨d l
!=
¨¨m o
$num
¨¨p r
&&
¨¨s u
charCode
¨¨v ~
!=¨¨ Å
$num¨¨Ç à
&&¨¨â ã
charCode¨¨å î
!=¨¨ï ó
$num¨¨ò û
)¨¨û ü
{
≠≠ 
if
ØØ 
(
ØØ 
m_pageNumber
ØØ $
+
ØØ% &
$num
ØØ' (
>
ØØ) *

m_textInfo
ØØ+ 5
.
ØØ5 6
pageInfo
ØØ6 >
.
ØØ> ?
Length
ØØ? E
)
ØØE F
TMP_TextInfo
∞∞ $
.
∞∞$ %
Resize
∞∞% +
(
∞∞+ ,
ref
∞∞, /

m_textInfo
∞∞0 :
.
∞∞: ;
pageInfo
∞∞; C
,
∞∞C D
m_pageNumber
∞∞E Q
+
∞∞R S
$num
∞∞T U
,
∞∞U V
true
∞∞W [
)
∞∞[ \
;
∞∞\ ]

m_textInfo
≤≤ 
.
≤≤ 
pageInfo
≤≤ '
[
≤≤' (
m_pageNumber
≤≤( 4
]
≤≤4 5
.
≤≤5 6
ascender
≤≤6 >
=
≤≤? @
m_PageAscender
≤≤A O
;
≤≤O P

m_textInfo
≥≥ 
.
≥≥ 
pageInfo
≥≥ '
[
≥≥' (
m_pageNumber
≥≥( 4
]
≥≥4 5
.
≥≥5 6
	descender
≥≥6 ?
=
≥≥@ A 
m_ElementDescender
≥≥B T
<
≥≥U V

m_textInfo
≥≥W a
.
≥≥a b
pageInfo
≥≥b j
[
≥≥j k
m_pageNumber
≥≥k w
]
≥≥w x
.
≥≥x y
	descender≥≥y Ç
?
¥¥  
m_ElementDescender
¥¥ ,
:
µµ 

m_textInfo
µµ $
.
µµ$ %
pageInfo
µµ% -
[
µµ- .
m_pageNumber
µµ. :
]
µµ: ;
.
µµ; <
	descender
µµ< E
;
µµE F
if
∑∑ 
(
∑∑ 
m_pageNumber
∑∑ $
==
∑∑% '
$num
∑∑( )
&&
∑∑* ,
m_characterCount
∑∑- =
==
∑∑> @
$num
∑∑A B
)
∑∑B C

m_textInfo
∏∏ "
.
∏∏" #
pageInfo
∏∏# +
[
∏∏+ ,
m_pageNumber
∏∏, 8
]
∏∏8 9
.
∏∏9 :!
firstCharacterIndex
∏∏: M
=
∏∏N O
m_characterCount
∏∏P `
;
∏∏` a
else
ππ 
if
ππ 
(
ππ 
m_characterCount
ππ -
>
ππ. /
$num
ππ0 1
&&
ππ2 4
m_pageNumber
ππ5 A
!=
ππB D

m_textInfo
ππE O
.
ππO P
characterInfo
ππP ]
[
ππ] ^
m_characterCount
ππ^ n
-
ππo p
$num
ππq r
]
ππr s
.
ππs t

pageNumber
ππt ~
)
ππ~ 
{
∫∫ 

m_textInfo
ªª "
.
ªª" #
pageInfo
ªª# +
[
ªª+ ,
m_pageNumber
ªª, 8
-
ªª9 :
$num
ªª; <
]
ªª< =
.
ªª= > 
lastCharacterIndex
ªª> P
=
ªªQ R
m_characterCount
ªªS c
-
ªªd e
$num
ªªf g
;
ªªg h

m_textInfo
ºº "
.
ºº" #
pageInfo
ºº# +
[
ºº+ ,
m_pageNumber
ºº, 8
]
ºº8 9
.
ºº9 :!
firstCharacterIndex
ºº: M
=
ººN O
m_characterCount
ººP `
;
ºº` a
}
ΩΩ 
else
ææ 
if
ææ 
(
ææ 
m_characterCount
ææ -
==
ææ. 0!
totalCharacterCount
ææ1 D
-
ææE F
$num
ææG H
)
ææH I

m_textInfo
øø "
.
øø" #
pageInfo
øø# +
[
øø+ ,
m_pageNumber
øø, 8
]
øø8 9
.
øø9 : 
lastCharacterIndex
øø: L
=
øøM N
m_characterCount
øøO _
;
øø_ `
}
¿¿ 
if
…… 
(
…… "
m_enableWordWrapping
…… (
||
……) +
m_overflowMode
……, :
==
……; =
TextOverflowModes
……> O
.
……O P
Truncate
……P X
||
……Y [
m_overflowMode
……\ j
==
……k m
TextOverflowModes
……n 
.…… Ä
Ellipsis……Ä à
||……â ã
m_overflowMode……å ö
==……õ ù!
TextOverflowModes……û Ø
.……Ø ∞
Linked……∞ ∂
)……∂ ∑
{
   
if
œœ 
(
œœ 
(
œœ 
isWhiteSpace
œœ %
||
œœ& (
charCode
œœ) 1
==
œœ2 4
$num
œœ5 ;
||
œœ< >
charCode
œœ? G
==
œœH J
$num
œœK O
||
œœP R
charCode
œœS [
==
œœ\ ^
$num
œœ_ c
)
œœc d
&&
œœe g
(
œœh i
!
œœi j"
m_isNonBreakingSpace
œœj ~
||œœ Å&
ignoreNonBreakingSpaceœœÇ ò
)œœò ô
&&œœö ú
charCodeœœù •
!=œœ¶ ®
$numœœ© ≠
&&œœÆ ∞
charCodeœœ± π
!=œœ∫ º
$numœœΩ √
&&œœƒ ∆
charCodeœœ« œ
!=œœ– “
$numœœ” Ÿ
&&œœ⁄ ‹
charCodeœœ› Â
!=œœÊ Ë
$numœœÈ Ô
&&œœ Ú
charCodeœœÛ ˚
!=œœ¸ ˛
$numœœˇ Ö
)œœÖ Ü
{
–– #
SaveWordWrappingState
”” -
(
””- .
ref
””. 1"
m_SavedWordWrapState
””2 F
,
””F G
i
””H I
,
””I J
m_characterCount
””K [
)
””[ \
;
””\ ]
isFirstWordOfLine
‘‘ )
=
‘‘* +
false
‘‘, 1
;
‘‘1 2'
m_SavedSoftLineBreakState
ÿÿ 1
.
ÿÿ1 2 
previous_WordBreak
ÿÿ2 D
=
ÿÿE F
-
ÿÿG H
$num
ÿÿH I
;
ÿÿI J
}
ŸŸ 
else
€€ 
if
€€ 
(
€€ "
m_isNonBreakingSpace
€€ 1
==
€€2 4
false
€€5 :
&&
€€; =
(
‹‹ 
(
‹‹ 
charCode
‹‹ '
>
‹‹( )
$num
‹‹* 0
&&
‹‹1 3
charCode
‹‹4 <
<
‹‹= >
$num
‹‹? E
||
‹‹F H
charCode
›› '
>
››( )
$num
››* 0
&&
››1 3
charCode
››4 <
<
››= >
$num
››? E
||
››F H
charCode
ﬁﬁ '
>
ﬁﬁ( )
$num
ﬁﬁ* 0
&&
ﬁﬁ1 3
charCode
ﬁﬁ4 <
<
ﬁﬁ= >
$num
ﬁﬁ? E
)
ﬁﬁE F
&&
ﬁﬁF H
TMP_Settings
ﬂﬂ *
.
ﬂﬂ* +.
 useModernHangulLineBreakingRules
ﬂﬂ+ K
==
ﬂﬂL N
false
ﬂﬂO T
||
ﬂﬂU W
(
·· 
charCode
·· '
>
··( )
$num
··* 0
&&
··1 3
charCode
··4 <
<
··= >
$num
··? E
||
··F H
charCode
‚‚ '
>
‚‚( )
$num
‚‚* 0
&&
‚‚1 3
charCode
‚‚4 <
<
‚‚= >
$num
‚‚? E
||
‚‚F H
charCode
„„ '
>
„„( )
$num
„„* 0
&&
„„1 3
charCode
„„4 <
<
„„= >
$num
„„? E
||
„„F H
charCode
‰‰ '
>
‰‰( )
$num
‰‰* 0
&&
‰‰1 3
charCode
‰‰4 <
<
‰‰= >
$num
‰‰? E
)
‰‰E F
)
‰‰F G
)
‰‰G H
{
ÂÂ 
bool
ÊÊ '
isCurrentLeadingCharacter
ÊÊ 6
=
ÊÊ7 8
TMP_Settings
ÊÊ9 E
.
ÊÊE F
linebreakingRules
ÊÊF W
.
ÊÊW X
leadingCharacters
ÊÊX i
.
ÊÊi j
ContainsKey
ÊÊj u
(
ÊÊu v
charCode
ÊÊv ~
)
ÊÊ~ 
;ÊÊ Ä
bool
ÁÁ &
isNextFollowingCharacter
ÁÁ 5
=
ÁÁ6 7
m_characterCount
ÁÁ8 H
<
ÁÁI J!
totalCharacterCount
ÁÁK ^
-
ÁÁ_ `
$num
ÁÁa b
&&
ÁÁc e
TMP_Settings
ÁÁf r
.
ÁÁr s 
linebreakingRulesÁÁs Ñ
.ÁÁÑ Ö#
followingCharactersÁÁÖ ò
.ÁÁò ô
ContainsKeyÁÁô §
(ÁÁ§ •

m_textInfoÁÁ• Ø
.ÁÁØ ∞
characterInfoÁÁ∞ Ω
[ÁÁΩ æ 
m_characterCountÁÁæ Œ
+ÁÁœ –
$numÁÁ— “
]ÁÁ“ ”
.ÁÁ” ‘
	characterÁÁ‘ ›
)ÁÁ› ﬁ
;ÁÁﬁ ﬂ
if
ÈÈ 
(
ÈÈ '
isCurrentLeadingCharacter
ÈÈ 5
==
ÈÈ6 8
false
ÈÈ9 >
)
ÈÈ> ?
{
ÍÍ 
if
ÎÎ 
(
ÎÎ  &
isNextFollowingCharacter
ÎÎ  8
==
ÎÎ9 ;
false
ÎÎ< A
)
ÎÎA B
{
ÏÏ #
SaveWordWrappingState
ÌÌ  5
(
ÌÌ5 6
ref
ÌÌ6 9"
m_SavedWordWrapState
ÌÌ: N
,
ÌÌN O
i
ÌÌP Q
,
ÌÌQ R
m_characterCount
ÌÌS c
)
ÌÌc d
;
ÌÌd e
isFirstWordOfLine
ÓÓ  1
=
ÓÓ2 3
false
ÓÓ4 9
;
ÓÓ9 :
}
ÔÔ 
if
ÒÒ 
(
ÒÒ  
isFirstWordOfLine
ÒÒ  1
)
ÒÒ1 2
{
ÚÚ 
if
ÙÙ  "
(
ÙÙ# $
isWhiteSpace
ÙÙ$ 0
)
ÙÙ0 1#
SaveWordWrappingState
ıı$ 9
(
ıı9 :
ref
ıı: ='
m_SavedSoftLineBreakState
ıı> W
,
ııW X
i
ııY Z
,
ııZ [
m_characterCount
ıı\ l
)
ııl m
;
ıım n#
SaveWordWrappingState
˜˜  5
(
˜˜5 6
ref
˜˜6 9"
m_SavedWordWrapState
˜˜: N
,
˜˜N O
i
˜˜P Q
,
˜˜Q R
m_characterCount
˜˜S c
)
˜˜c d
;
˜˜d e
}
¯¯ 
}
˘˘ 
else
˙˙ 
{
˚˚ 
if
¸¸ 
(
¸¸  
isFirstWordOfLine
¸¸  1
&&
¸¸2 4$
isFirstCharacterOfLine
¸¸5 K
)
¸¸K L
{
˝˝ 
if
ˇˇ  "
(
ˇˇ# $
isWhiteSpace
ˇˇ$ 0
)
ˇˇ0 1#
SaveWordWrappingState
ÄÄ$ 9
(
ÄÄ9 :
ref
ÄÄ: ='
m_SavedSoftLineBreakState
ÄÄ> W
,
ÄÄW X
i
ÄÄY Z
,
ÄÄZ [
m_characterCount
ÄÄ\ l
)
ÄÄl m
;
ÄÄm n#
SaveWordWrappingState
ÇÇ  5
(
ÇÇ5 6
ref
ÇÇ6 9"
m_SavedWordWrapState
ÇÇ: N
,
ÇÇN O
i
ÇÇP Q
,
ÇÇQ R
m_characterCount
ÇÇS c
)
ÇÇc d
;
ÇÇd e
}
ÉÉ 
}
ÑÑ 
}
áá 
else
àà 
if
àà 
(
àà 
isFirstWordOfLine
àà .
)
àà. /
{
ââ 
if
ãã 
(
ãã 
isWhiteSpace
ãã (
||
ãã) +
(
ãã, -
charCode
ãã- 5
==
ãã6 8
$num
ãã9 =
&&
ãã> @!
isSoftHyphenIgnored
ããA T
==
ããU W
false
ããX ]
)
ãã] ^
)
ãã^ _#
SaveWordWrappingState
åå 1
(
åå1 2
ref
åå2 5'
m_SavedSoftLineBreakState
åå6 O
,
ååO P
i
ååQ R
,
ååR S
m_characterCount
ååT d
)
ååd e
;
ååe f#
SaveWordWrappingState
éé -
(
éé- .
ref
éé. 1"
m_SavedWordWrapState
éé2 F
,
ééF G
i
ééH I
,
ééI J
m_characterCount
ééK [
)
éé[ \
;
éé\ ]
}
êê 
}
ïï #
SaveWordWrappingState
òò %
(
òò% &
ref
òò& )#
m_SavedLastValidState
òò* ?
,
òò? @
i
òòA B
,
òòB C
m_characterCount
òòD T
)
òòT U
;
òòU V
m_characterCount
öö  
+=
öö! #
$num
öö$ %
;
öö% &
}
õõ 
fontSizeDelta
üü 
=
üü 
m_maxFontSize
üü )
-
üü* +
m_minFontSize
üü, 9
;
üü9 :
if
†† 
(
††  
m_enableAutoSizing
††7 I
&&
††J L
fontSizeDelta
††M Z
>
††[ \
$num
††] c
&&
††d f

m_fontSize
††g q
<
††r s
m_fontSizeMax††t Å
&&††Ç Ñ(
m_AutoSizeIterationCount††Ö ù
<††û ü+
m_AutoSizeMaxIterationCount††† ª
)††ª º
{
°° 
if
££ 
(
££ !
m_charWidthAdjDelta
££ '
<
££( )
m_charWidthMaxAdj
££* ;
/
££< =
$num
££> A
)
££A B!
m_charWidthAdjDelta
§§ '
=
§§( )
$num
§§* +
;
§§+ ,
m_minFontSize
¶¶ 
=
¶¶ 

m_fontSize
¶¶  *
;
¶¶* +
float
®® 
	sizeDelta
®® 
=
®®  !
Mathf
®®" '
.
®®' (
Max
®®( +
(
®®+ ,
(
®®, -
m_maxFontSize
®®- :
-
®®; <

m_fontSize
®®= G
)
®®G H
/
®®I J
$num
®®K L
,
®®L M
$num
®®N S
)
®®S T
;
®®T U

m_fontSize
©© 
+=
©© 
	sizeDelta
©© '
;
©©' (

m_fontSize
™™ 
=
™™ 
Mathf
™™ "
.
™™" #
Min
™™# &
(
™™& '
(
™™' (
int
™™( +
)
™™+ ,
(
™™, -

m_fontSize
™™- 7
*
™™8 9
$num
™™: <
+
™™= >
$num
™™? C
)
™™C D
/
™™E F
$num
™™G J
,
™™J K
m_fontSizeMax
™™L Y
)
™™Y Z
;
™™Z [
return
≠≠ 
;
≠≠ 
}
ÆÆ &
m_IsAutoSizePointSizeSet
±± $
=
±±% &
true
±±' +
;
±±+ ,
if
≥≥ 
(
≥≥ &
m_AutoSizeIterationCount
≥≥ (
>=
≥≥) +)
m_AutoSizeMaxIterationCount
≥≥, G
)
≥≥G H
Debug
¥¥ 
.
¥¥ 
Log
¥¥ 
(
¥¥ 
$str
¥¥ 7
+
¥¥8 9&
m_AutoSizeIterationCount
¥¥: R
+
¥¥S T
$str
¥¥U k
+
¥¥l m

m_fontSize
¥¥n x
)
¥¥x y
;
¥¥y z
if
∑∑ 
(
∑∑ 
m_characterCount
∑∑  
==
∑∑! #
$num
∑∑$ %
||
∑∑& (
(
∑∑) *
m_characterCount
∑∑* :
==
∑∑; =
$num
∑∑> ?
&&
∑∑@ B
charCode
∑∑C K
==
∑∑L N
$num
∑∑O S
)
∑∑S T
)
∑∑T U
{
∏∏ 
	ClearMesh
ππ 
(
ππ 
true
ππ 
)
ππ 
;
ππ   
TMPro_EventManager
ºº "
.
ºº" #
ON_TEXT_CHANGED
ºº# 2
(
ºº2 3
this
ºº3 7
)
ºº7 8
;
ºº8 9
return
ΩΩ 
;
ΩΩ 
}
ææ 
int
»» 
last_vert_index
»» 
=
»»  !"
m_materialReferences
»»" 6
[
»»6 7
m_Underline
»»7 B
.
»»B C
materialIndex
»»C P
]
»»P Q
.
»»Q R
referenceCount
»»R `
*
»»a b
(
»»c d
!
»»d e 
m_isVolumetricText
»»e w
?
»»x y
$num
»»z {
:
»»| }
$num
»»~ 
)»» Ä
;»»Ä Å

m_textInfo
ÀÀ 
.
ÀÀ 
meshInfo
ÀÀ 
[
ÀÀ  
$num
ÀÀ  !
]
ÀÀ! "
.
ÀÀ" #
Clear
ÀÀ# (
(
ÀÀ( )
false
ÀÀ) .
)
ÀÀ. /
;
ÀÀ/ 0
Vector3
œœ 
anchorOffset
œœ  
=
œœ! "
Vector3
œœ# *
.
œœ* +
zero
œœ+ /
;
œœ/ 0
Vector3
–– 
[
–– 
]
–– 
corners
–– 
=
–– $
m_RectTransformCorners
––  6
;
––6 7
switch
”” 
(
”” !
m_VerticalAlignment
”” '
)
””' (
{
‘‘ 
case
÷÷ &
VerticalAlignmentOptions
÷÷ -
.
÷÷- .
Top
÷÷. 1
:
÷÷1 2
if
◊◊ 
(
◊◊ 
m_overflowMode
◊◊ &
!=
◊◊' )
TextOverflowModes
◊◊* ;
.
◊◊; <
Page
◊◊< @
)
◊◊@ A
anchorOffset
ÿÿ $
=
ÿÿ% &
corners
ÿÿ' .
[
ÿÿ. /
$num
ÿÿ/ 0
]
ÿÿ0 1
+
ÿÿ2 3
new
ÿÿ4 7
Vector3
ÿÿ8 ?
(
ÿÿ? @
$num
ÿÿ@ A
+
ÿÿB C
margins
ÿÿD K
.
ÿÿK L
x
ÿÿL M
,
ÿÿM N
$num
ÿÿO P
-
ÿÿQ R
m_maxTextAscender
ÿÿS d
-
ÿÿe f
margins
ÿÿg n
.
ÿÿn o
y
ÿÿo p
,
ÿÿp q
$num
ÿÿr s
)
ÿÿs t
;
ÿÿt u
else
ŸŸ 
anchorOffset
⁄⁄ $
=
⁄⁄% &
corners
⁄⁄' .
[
⁄⁄. /
$num
⁄⁄/ 0
]
⁄⁄0 1
+
⁄⁄2 3
new
⁄⁄4 7
Vector3
⁄⁄8 ?
(
⁄⁄? @
$num
⁄⁄@ A
+
⁄⁄B C
margins
⁄⁄D K
.
⁄⁄K L
x
⁄⁄L M
,
⁄⁄M N
$num
⁄⁄O P
-
⁄⁄Q R

m_textInfo
⁄⁄S ]
.
⁄⁄] ^
pageInfo
⁄⁄^ f
[
⁄⁄f g
pageToDisplay
⁄⁄g t
]
⁄⁄t u
.
⁄⁄u v
ascender
⁄⁄v ~
-⁄⁄ Ä
margins⁄⁄Å à
.⁄⁄à â
y⁄⁄â ä
,⁄⁄ä ã
$num⁄⁄å ç
)⁄⁄ç é
;⁄⁄é è
break
€€ 
;
€€ 
case
ﬁﬁ &
VerticalAlignmentOptions
ﬁﬁ -
.
ﬁﬁ- .
Middle
ﬁﬁ. 4
:
ﬁﬁ4 5
if
ﬂﬂ 
(
ﬂﬂ 
m_overflowMode
ﬂﬂ &
!=
ﬂﬂ' )
TextOverflowModes
ﬂﬂ* ;
.
ﬂﬂ; <
Page
ﬂﬂ< @
)
ﬂﬂ@ A
anchorOffset
‡‡ $
=
‡‡% &
(
‡‡' (
corners
‡‡( /
[
‡‡/ 0
$num
‡‡0 1
]
‡‡1 2
+
‡‡3 4
corners
‡‡5 <
[
‡‡< =
$num
‡‡= >
]
‡‡> ?
)
‡‡? @
/
‡‡A B
$num
‡‡C D
+
‡‡E F
new
‡‡G J
Vector3
‡‡K R
(
‡‡R S
$num
‡‡S T
+
‡‡U V
margins
‡‡W ^
.
‡‡^ _
x
‡‡_ `
,
‡‡` a
$num
‡‡b c
-
‡‡d e
(
‡‡f g
m_maxTextAscender
‡‡g x
+
‡‡y z
margins‡‡{ Ç
.‡‡Ç É
y‡‡É Ñ
+‡‡Ö Ü#
maxVisibleDescender‡‡á ö
-‡‡õ ú
margins‡‡ù §
.‡‡§ •
w‡‡• ¶
)‡‡¶ ß
/‡‡® ©
$num‡‡™ ´
,‡‡´ ¨
$num‡‡≠ Æ
)‡‡Æ Ø
;‡‡Ø ∞
else
·· 
anchorOffset
‚‚ $
=
‚‚% &
(
‚‚' (
corners
‚‚( /
[
‚‚/ 0
$num
‚‚0 1
]
‚‚1 2
+
‚‚3 4
corners
‚‚5 <
[
‚‚< =
$num
‚‚= >
]
‚‚> ?
)
‚‚? @
/
‚‚A B
$num
‚‚C D
+
‚‚E F
new
‚‚G J
Vector3
‚‚K R
(
‚‚R S
$num
‚‚S T
+
‚‚U V
margins
‚‚W ^
.
‚‚^ _
x
‚‚_ `
,
‚‚` a
$num
‚‚b c
-
‚‚d e
(
‚‚f g

m_textInfo
‚‚g q
.
‚‚q r
pageInfo
‚‚r z
[
‚‚z {
pageToDisplay‚‚{ à
]‚‚à â
.‚‚â ä
ascender‚‚ä í
+‚‚ì î
margins‚‚ï ú
.‚‚ú ù
y‚‚ù û
+‚‚ü †

m_textInfo‚‚° ´
.‚‚´ ¨
pageInfo‚‚¨ ¥
[‚‚¥ µ
pageToDisplay‚‚µ ¬
]‚‚¬ √
.‚‚√ ƒ
	descender‚‚ƒ Õ
-‚‚Œ œ
margins‚‚– ◊
.‚‚◊ ÿ
w‚‚ÿ Ÿ
)‚‚Ÿ ⁄
/‚‚€ ‹
$num‚‚› ﬁ
,‚‚ﬁ ﬂ
$num‚‚‡ ·
)‚‚· ‚
;‚‚‚ „
break
„„ 
;
„„ 
case
ÊÊ &
VerticalAlignmentOptions
ÊÊ -
.
ÊÊ- .
Bottom
ÊÊ. 4
:
ÊÊ4 5
if
ÁÁ 
(
ÁÁ 
m_overflowMode
ÁÁ &
!=
ÁÁ' )
TextOverflowModes
ÁÁ* ;
.
ÁÁ; <
Page
ÁÁ< @
)
ÁÁ@ A
anchorOffset
ËË $
=
ËË% &
corners
ËË' .
[
ËË. /
$num
ËË/ 0
]
ËË0 1
+
ËË2 3
new
ËË4 7
Vector3
ËË8 ?
(
ËË? @
$num
ËË@ A
+
ËËB C
margins
ËËD K
.
ËËK L
x
ËËL M
,
ËËM N
$num
ËËO P
-
ËËQ R!
maxVisibleDescender
ËËS f
+
ËËg h
margins
ËËi p
.
ËËp q
w
ËËq r
,
ËËr s
$num
ËËt u
)
ËËu v
;
ËËv w
else
ÈÈ 
anchorOffset
ÍÍ $
=
ÍÍ% &
corners
ÍÍ' .
[
ÍÍ. /
$num
ÍÍ/ 0
]
ÍÍ0 1
+
ÍÍ2 3
new
ÍÍ4 7
Vector3
ÍÍ8 ?
(
ÍÍ? @
$num
ÍÍ@ A
+
ÍÍB C
margins
ÍÍD K
.
ÍÍK L
x
ÍÍL M
,
ÍÍM N
$num
ÍÍO P
-
ÍÍQ R

m_textInfo
ÍÍS ]
.
ÍÍ] ^
pageInfo
ÍÍ^ f
[
ÍÍf g
pageToDisplay
ÍÍg t
]
ÍÍt u
.
ÍÍu v
	descender
ÍÍv 
+ÍÍÄ Å
marginsÍÍÇ â
.ÍÍâ ä
wÍÍä ã
,ÍÍã å
$numÍÍç é
)ÍÍé è
;ÍÍè ê
break
ÎÎ 
;
ÎÎ 
case
ÓÓ &
VerticalAlignmentOptions
ÓÓ -
.
ÓÓ- .
Baseline
ÓÓ. 6
:
ÓÓ6 7
anchorOffset
ÔÔ  
=
ÔÔ! "
(
ÔÔ# $
corners
ÔÔ$ +
[
ÔÔ+ ,
$num
ÔÔ, -
]
ÔÔ- .
+
ÔÔ/ 0
corners
ÔÔ1 8
[
ÔÔ8 9
$num
ÔÔ9 :
]
ÔÔ: ;
)
ÔÔ; <
/
ÔÔ= >
$num
ÔÔ? @
+
ÔÔA B
new
ÔÔC F
Vector3
ÔÔG N
(
ÔÔN O
$num
ÔÔO P
+
ÔÔQ R
margins
ÔÔS Z
.
ÔÔZ [
x
ÔÔ[ \
,
ÔÔ\ ]
$num
ÔÔ^ _
,
ÔÔ_ `
$num
ÔÔa b
)
ÔÔb c
;
ÔÔc d
break
 
;
 
case
ÛÛ &
VerticalAlignmentOptions
ÛÛ -
.
ÛÛ- .
Geometry
ÛÛ. 6
:
ÛÛ6 7
anchorOffset
ÙÙ  
=
ÙÙ! "
(
ÙÙ# $
corners
ÙÙ$ +
[
ÙÙ+ ,
$num
ÙÙ, -
]
ÙÙ- .
+
ÙÙ/ 0
corners
ÙÙ1 8
[
ÙÙ8 9
$num
ÙÙ9 :
]
ÙÙ: ;
)
ÙÙ; <
/
ÙÙ= >
$num
ÙÙ? @
+
ÙÙA B
new
ÙÙC F
Vector3
ÙÙG N
(
ÙÙN O
$num
ÙÙO P
+
ÙÙQ R
margins
ÙÙS Z
.
ÙÙZ [
x
ÙÙ[ \
,
ÙÙ\ ]
$num
ÙÙ^ _
-
ÙÙ` a
(
ÙÙb c
m_meshExtents
ÙÙc p
.
ÙÙp q
max
ÙÙq t
.
ÙÙt u
y
ÙÙu v
+
ÙÙw x
marginsÙÙy Ä
.ÙÙÄ Å
yÙÙÅ Ç
+ÙÙÉ Ñ
m_meshExtentsÙÙÖ í
.ÙÙí ì
minÙÙì ñ
.ÙÙñ ó
yÙÙó ò
-ÙÙô ö
marginsÙÙõ ¢
.ÙÙ¢ £
wÙÙ£ §
)ÙÙ§ •
/ÙÙ¶ ß
$numÙÙ® ©
,ÙÙ© ™
$numÙÙ´ ¨
)ÙÙ¨ ≠
;ÙÙ≠ Æ
break
ıı 
;
ıı 
case
¯¯ &
VerticalAlignmentOptions
¯¯ -
.
¯¯- .
Capline
¯¯. 5
:
¯¯5 6
anchorOffset
˘˘  
=
˘˘! "
(
˘˘# $
corners
˘˘$ +
[
˘˘+ ,
$num
˘˘, -
]
˘˘- .
+
˘˘/ 0
corners
˘˘1 8
[
˘˘8 9
$num
˘˘9 :
]
˘˘: ;
)
˘˘; <
/
˘˘= >
$num
˘˘? @
+
˘˘A B
new
˘˘C F
Vector3
˘˘G N
(
˘˘N O
$num
˘˘O P
+
˘˘Q R
margins
˘˘S Z
.
˘˘Z [
x
˘˘[ \
,
˘˘\ ]
$num
˘˘^ _
-
˘˘` a
(
˘˘b c
m_maxCapHeight
˘˘c q
-
˘˘r s
margins
˘˘t {
.
˘˘{ |
y
˘˘| }
-
˘˘~ 
margins˘˘Ä á
.˘˘á à
w˘˘à â
)˘˘â ä
/˘˘ã å
$num˘˘ç é
,˘˘é è
$num˘˘ê ë
)˘˘ë í
;˘˘í ì
break
˙˙ 
;
˙˙ 
}
˚˚ 
Vector3
ÄÄ !
justificationOffset
ÄÄ '
=
ÄÄ( )
Vector3
ÄÄ* 1
.
ÄÄ1 2
zero
ÄÄ2 6
;
ÄÄ6 7
Vector3
ÅÅ 
offset
ÅÅ 
=
ÅÅ 
Vector3
ÅÅ $
.
ÅÅ$ %
zero
ÅÅ% )
;
ÅÅ) *
int
ÇÇ 
vert_index_X4
ÇÇ 
=
ÇÇ 
$num
ÇÇ  !
;
ÇÇ! "
int
ÉÉ 
sprite_index_X4
ÉÉ 
=
ÉÉ  !
$num
ÉÉ" #
;
ÉÉ# $
int
ÖÖ 
	wordCount
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
int
ÜÜ 
	lineCount
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
int
áá 
lastLine
áá 
=
áá 
$num
áá 
;
áá 
bool
àà 
isFirstSeperator
àà !
=
àà" #
false
àà$ )
;
àà) *
bool
ää 
isStartOfWord
ää 
=
ää  
false
ää! &
;
ää& '
int
ãã 
wordFirstChar
ãã 
=
ãã 
$num
ãã  !
;
ãã! "
int
åå 
wordLastChar
åå 
=
åå 
$num
åå  
;
åå  !
float
èè 

lossyScale
èè 
=
èè #
m_previousLossyScaleY
èè 4
=
èè5 6
this
èè7 ;
.
èè; <
	transform
èè< E
.
èèE F

lossyScale
èèF P
.
èèP Q
y
èèQ R
;
èèR S
Color32
ëë 
underlineColor
ëë "
=
ëë# $
Color
ëë% *
.
ëë* +
white
ëë+ 0
;
ëë0 1
Color32
íí  
strikethroughColor
íí &
=
íí' (
Color
íí) .
.
íí. /
white
íí/ 4
;
íí4 5
HighlightState
ìì 
highlightState
ìì )
=
ìì* +
new
ìì, /
HighlightState
ìì0 >
(
ìì> ?
new
ìì? B
Color32
ììC J
(
ììJ K
$num
ììK N
,
ììN O
$num
ììP S
,
ììS T
$num
ììU V
,
ììV W
$num
ììX Z
)
ììZ [
,
ìì[ \

TMP_Offset
ìì] g
.
ììg h
zero
ììh l
)
ììl m
;
ììm n
float
îî 
xScale
îî 
=
îî 
$num
îî 
;
îî 
float
ïï 
	xScaleMax
ïï 
=
ïï 
$num
ïï 
;
ïï  
float
ññ !
underlineStartScale
ññ %
=
ññ& '
$num
ññ( )
;
ññ) *
float
óó 
underlineEndScale
óó #
=
óó$ %
$num
óó& '
;
óó' (
float
òò 
underlineMaxScale
òò #
=
òò$ %
$num
òò& '
;
òò' (
float
ôô 
underlineBaseLine
ôô #
=
ôô$ %"
k_LargePositiveFloat
ôô& :
;
ôô: ;
int
öö 
lastPage
öö 
=
öö 
$num
öö 
;
öö 
float
úú $
strikethroughPointSize
úú (
=
úú) *
$num
úú+ ,
;
úú, -
float
ùù  
strikethroughScale
ùù $
=
ùù% &
$num
ùù' (
;
ùù( )
float
ûû #
strikethroughBaseline
ûû '
=
ûû( )
$num
ûû* +
;
ûû+ ,
TMP_CharacterInfo
†† 
[
†† 
]
†† 
characterInfos
††  .
=
††/ 0

m_textInfo
††1 ;
.
††; <
characterInfo
††< I
;
††I J
for
¢¢ 
(
¢¢ 
int
¢¢ 
i
¢¢ 
=
¢¢ 
$num
¢¢ 
;
¢¢ 
i
¢¢ 
<
¢¢ 
m_characterCount
¢¢  0
;
¢¢0 1
i
¢¢2 3
++
¢¢3 5
)
¢¢5 6
{
££ 
TMP_FontAsset
§§ 
currentFontAsset
§§ .
=
§§/ 0
characterInfos
§§1 ?
[
§§? @
i
§§@ A
]
§§A B
.
§§B C
	fontAsset
§§C L
;
§§L M
char
¶¶ 
unicode
¶¶ 
=
¶¶ 
characterInfos
¶¶ -
[
¶¶- .
i
¶¶. /
]
¶¶/ 0
.
¶¶0 1
	character
¶¶1 :
;
¶¶: ;
int
®® 
currentLine
®® 
=
®®  !
characterInfos
®®" 0
[
®®0 1
i
®®1 2
]
®®2 3
.
®®3 4

lineNumber
®®4 >
;
®®> ?
TMP_LineInfo
©© 
lineInfo
©© %
=
©©& '

m_textInfo
©©( 2
.
©©2 3
lineInfo
©©3 ;
[
©©; <
currentLine
©©< G
]
©©G H
;
©©H I
	lineCount
™™ 
=
™™ 
currentLine
™™ '
+
™™( )
$num
™™* +
;
™™+ ,(
HorizontalAlignmentOptions
¨¨ *
lineAlignment
¨¨+ 8
=
¨¨9 :
lineInfo
¨¨; C
.
¨¨C D
	alignment
¨¨D M
;
¨¨M N
switch
∞∞ 
(
∞∞ 
lineAlignment
∞∞ %
)
∞∞% &
{
±± 
case
≤≤ (
HorizontalAlignmentOptions
≤≤ 3
.
≤≤3 4
Left
≤≤4 8
:
≤≤8 9
if
≥≥ 
(
≥≥ 
!
≥≥ 
m_isRightToLeft
≥≥ ,
)
≥≥, -!
justificationOffset
¥¥ /
=
¥¥0 1
new
¥¥2 5
Vector3
¥¥6 =
(
¥¥= >
$num
¥¥> ?
+
¥¥@ A
lineInfo
¥¥B J
.
¥¥J K

marginLeft
¥¥K U
,
¥¥U V
$num
¥¥W X
,
¥¥X Y
$num
¥¥Z [
)
¥¥[ \
;
¥¥\ ]
else
µµ !
justificationOffset
∂∂ /
=
∂∂0 1
new
∂∂2 5
Vector3
∂∂6 =
(
∂∂= >
$num
∂∂> ?
-
∂∂@ A
lineInfo
∂∂B J
.
∂∂J K

maxAdvance
∂∂K U
,
∂∂U V
$num
∂∂W X
,
∂∂X Y
$num
∂∂Z [
)
∂∂[ \
;
∂∂\ ]
break
∑∑ 
;
∑∑ 
case
ππ (
HorizontalAlignmentOptions
ππ 3
.
ππ3 4
Center
ππ4 :
:
ππ: ;!
justificationOffset
∫∫ +
=
∫∫, -
new
∫∫. 1
Vector3
∫∫2 9
(
∫∫9 :
lineInfo
∫∫: B
.
∫∫B C

marginLeft
∫∫C M
+
∫∫N O
lineInfo
∫∫P X
.
∫∫X Y
width
∫∫Y ^
/
∫∫_ `
$num
∫∫a b
-
∫∫c d
lineInfo
∫∫e m
.
∫∫m n

maxAdvance
∫∫n x
/
∫∫y z
$num
∫∫{ |
,
∫∫| }
$num
∫∫~ 
,∫∫ Ä
$num∫∫Å Ç
)∫∫Ç É
;∫∫É Ñ
break
ªª 
;
ªª 
case
ΩΩ (
HorizontalAlignmentOptions
ΩΩ 3
.
ΩΩ3 4
Geometry
ΩΩ4 <
:
ΩΩ< =!
justificationOffset
ææ +
=
ææ, -
new
ææ. 1
Vector3
ææ2 9
(
ææ9 :
lineInfo
ææ: B
.
ææB C

marginLeft
ææC M
+
ææN O
lineInfo
ææP X
.
ææX Y
width
ææY ^
/
ææ_ `
$num
ææa b
-
ææc d
(
ææe f
lineInfo
ææf n
.
ææn o
lineExtents
ææo z
.
ææz {
min
ææ{ ~
.
ææ~ 
xææ Ä
+ææÅ Ç
lineInfoææÉ ã
.ææã å
lineExtentsææå ó
.ææó ò
maxææò õ
.ææõ ú
xææú ù
)ææù û
/ææü †
$numææ° ¢
,ææ¢ £
$numææ§ •
,ææ• ¶
$numææß ®
)ææ® ©
;ææ© ™
break
øø 
;
øø 
case
¡¡ (
HorizontalAlignmentOptions
¡¡ 3
.
¡¡3 4
Right
¡¡4 9
:
¡¡9 :
if
¬¬ 
(
¬¬ 
!
¬¬ 
m_isRightToLeft
¬¬ ,
)
¬¬, -!
justificationOffset
√√ /
=
√√0 1
new
√√2 5
Vector3
√√6 =
(
√√= >
lineInfo
√√> F
.
√√F G

marginLeft
√√G Q
+
√√R S
lineInfo
√√T \
.
√√\ ]
width
√√] b
-
√√c d
lineInfo
√√e m
.
√√m n

maxAdvance
√√n x
,
√√x y
$num
√√z {
,
√√{ |
$num
√√} ~
)
√√~ 
;√√ Ä
else
ƒƒ !
justificationOffset
≈≈ /
=
≈≈0 1
new
≈≈2 5
Vector3
≈≈6 =
(
≈≈= >
lineInfo
≈≈> F
.
≈≈F G

marginLeft
≈≈G Q
+
≈≈R S
lineInfo
≈≈T \
.
≈≈\ ]
width
≈≈] b
,
≈≈b c
$num
≈≈d e
,
≈≈e f
$num
≈≈g h
)
≈≈h i
;
≈≈i j
break
∆∆ 
;
∆∆ 
case
»» (
HorizontalAlignmentOptions
»» 3
.
»»3 4
	Justified
»»4 =
:
»»= >
case
…… (
HorizontalAlignmentOptions
…… 3
.
……3 4
Flush
……4 9
:
……9 :
if
ÀÀ 
(
ÀÀ 
unicode
ÀÀ #
==
ÀÀ$ &
$num
ÀÀ' +
||
ÀÀ, .
unicode
ÀÀ/ 6
==
ÀÀ7 9
$num
ÀÀ: >
||
ÀÀ? A
unicode
ÀÀB I
==
ÀÀJ L
$num
ÀÀM S
||
ÀÀT V
unicode
ÀÀW ^
==
ÀÀ_ a
$num
ÀÀb h
||
ÀÀi k
unicode
ÀÀl s
==
ÀÀt v
$num
ÀÀw {
)
ÀÀ{ |
breakÀÀ} Ç
;ÀÀÇ É
char
ÕÕ #
lastCharOfCurrentLine
ÕÕ 2
=
ÕÕ3 4
characterInfos
ÕÕ5 C
[
ÕÕC D
lineInfo
ÕÕD L
.
ÕÕL M 
lastCharacterIndex
ÕÕM _
]
ÕÕ_ `
.
ÕÕ` a
	character
ÕÕa j
;
ÕÕj k
bool
ŒŒ 
isFlush
ŒŒ $
=
ŒŒ% &
(
ŒŒ' (
lineAlignment
ŒŒ( 5
&
ŒŒ6 7(
HorizontalAlignmentOptions
ŒŒ8 R
.
ŒŒR S
Flush
ŒŒS X
)
ŒŒX Y
==
ŒŒZ \(
HorizontalAlignmentOptions
ŒŒ] w
.
ŒŒw x
Flush
ŒŒx }
;
ŒŒ} ~
if
““ 
(
““ 
char
““  
.
““  !
	IsControl
““! *
(
““* +#
lastCharOfCurrentLine
““+ @
)
““@ A
==
““B D
false
““E J
&&
““K M
currentLine
““N Y
<
““Z [
m_lineNumber
““\ h
||
““i k
isFlush
““l s
||
““t v
lineInfo
““w 
.““ Ä

maxAdvance““Ä ä
>““ã å
lineInfo““ç ï
.““ï ñ
width““ñ õ
)““õ ú
{
”” 
if
’’ 
(
’’  
currentLine
’’  +
!=
’’, .
lastLine
’’/ 7
||
’’8 :
i
’’; <
==
’’= ?
$num
’’@ A
||
’’s u
i
’’v w
==
’’x z&
m_firstVisibleCharacter’’{ í
)’’í ì
{
÷÷ 
if
◊◊  "
(
◊◊# $
!
◊◊$ %
m_isRightToLeft
◊◊% 4
)
◊◊4 5!
justificationOffset
ÿÿ$ 7
=
ÿÿ8 9
new
ÿÿ: =
Vector3
ÿÿ> E
(
ÿÿE F
lineInfo
ÿÿF N
.
ÿÿN O

marginLeft
ÿÿO Y
,
ÿÿY Z
$num
ÿÿ[ \
,
ÿÿ\ ]
$num
ÿÿ^ _
)
ÿÿ_ `
;
ÿÿ` a
else
ŸŸ  $!
justificationOffset
⁄⁄$ 7
=
⁄⁄8 9
new
⁄⁄: =
Vector3
⁄⁄> E
(
⁄⁄E F
lineInfo
⁄⁄F N
.
⁄⁄N O

marginLeft
⁄⁄O Y
+
⁄⁄Z [
lineInfo
⁄⁄\ d
.
⁄⁄d e
width
⁄⁄e j
,
⁄⁄j k
$num
⁄⁄l m
,
⁄⁄m n
$num
⁄⁄o p
)
⁄⁄p q
;
⁄⁄q r
if
‹‹  "
(
‹‹# $
char
‹‹$ (
.
‹‹( )
IsSeparator
‹‹) 4
(
‹‹4 5
unicode
‹‹5 <
)
‹‹< =
)
‹‹= >
isFirstSeperator
››$ 4
=
››5 6
true
››7 ;
;
››; <
else
ﬁﬁ  $
isFirstSeperator
ﬂﬂ$ 4
=
ﬂﬂ5 6
false
ﬂﬂ7 <
;
ﬂﬂ< =
}
‡‡ 
else
··  
{
‚‚ 
float
„„  %
gap
„„& )
=
„„* +
!
„„, -
m_isRightToLeft
„„- <
?
„„= >
lineInfo
„„? G
.
„„G H
width
„„H M
-
„„N O
lineInfo
„„P X
.
„„X Y

maxAdvance
„„Y c
:
„„d e
lineInfo
„„f n
.
„„n o
width
„„o t
+
„„u v
lineInfo
„„w 
.„„ Ä

maxAdvance„„Ä ä
;„„ä ã
int
ÂÂ  #
visibleCount
ÂÂ$ 0
=
ÂÂ1 2
lineInfo
ÂÂ3 ;
.
ÂÂ; <#
visibleCharacterCount
ÂÂ< Q
-
ÂÂR S
$num
ÂÂT U
+
ÂÂV W
lineInfo
ÂÂX `
.
ÂÂ` a#
controlCharacterCount
ÂÂa v
;
ÂÂv w
int
ËË  #
spaces
ËË$ *
=
ËË+ ,
(
ËË- .
characterInfos
ËË. <
[
ËË< =
lineInfo
ËË= E
.
ËËE F 
lastCharacterIndex
ËËF X
]
ËËX Y
.
ËËY Z
	isVisible
ËËZ c
?
ËËd e
lineInfo
ËËf n
.
ËËn o

spaceCount
ËËo y
:
ËËz {
lineInfoËË| Ñ
.ËËÑ Ö

spaceCountËËÖ è
-ËËê ë
$numËËí ì
)ËËì î
-ËËï ñ
lineInfoËËó ü
.ËËü †%
controlCharacterCountËË† µ
;ËËµ ∂
if
ÍÍ  "
(
ÍÍ# $
isFirstSeperator
ÍÍ$ 4
)
ÍÍ4 5
{
ÍÍ6 7
spaces
ÍÍ8 >
-=
ÍÍ? A
$num
ÍÍB C
;
ÍÍC D
visibleCount
ÍÍE Q
+=
ÍÍR T
$num
ÍÍU V
;
ÍÍV W
}
ÍÍX Y
float
ÏÏ  %
ratio
ÏÏ& +
=
ÏÏ, -
spaces
ÏÏ. 4
>
ÏÏ5 6
$num
ÏÏ7 8
?
ÏÏ9 :"
m_wordWrappingRatios
ÏÏ; O
:
ÏÏP Q
$num
ÏÏR S
;
ÏÏS T
if
ÓÓ  "
(
ÓÓ# $
spaces
ÓÓ$ *
<
ÓÓ+ ,
$num
ÓÓ- .
)
ÓÓ. /
spaces
ÓÓ0 6
=
ÓÓ7 8
$num
ÓÓ9 :
;
ÓÓ: ;
if
  "
(
# $
unicode
$ +
!=
, .
$num
/ 3
&&
4 6
(
7 8
unicode
8 ?
==
@ B
$num
C D
||
E G
char
H L
.
L M
IsSeparator
M X
(
X Y
(
Y Z
char
Z ^
)
^ _
unicode
_ f
)
f g
)
g h
)
h i
{
ÒÒ  !
if
ÚÚ$ &
(
ÚÚ' (
!
ÚÚ( )
m_isRightToLeft
ÚÚ) 8
)
ÚÚ8 9!
justificationOffset
ÛÛ( ;
+=
ÛÛ< >
new
ÛÛ? B
Vector3
ÛÛC J
(
ÛÛJ K
gap
ÛÛK N
*
ÛÛO P
(
ÛÛQ R
$num
ÛÛR S
-
ÛÛT U
ratio
ÛÛV [
)
ÛÛ[ \
/
ÛÛ] ^
spaces
ÛÛ_ e
,
ÛÛe f
$num
ÛÛg h
,
ÛÛh i
$num
ÛÛj k
)
ÛÛk l
;
ÛÛl m
else
ÙÙ$ (!
justificationOffset
ıı( ;
-=
ıı< >
new
ıı? B
Vector3
ııC J
(
ııJ K
gap
ııK N
*
ııO P
(
ııQ R
$num
ııR S
-
ııT U
ratio
ııV [
)
ıı[ \
/
ıı] ^
spaces
ıı_ e
,
ııe f
$num
ııg h
,
ııh i
$num
ııj k
)
ıık l
;
ııl m
}
ˆˆ  !
else
˜˜  $
{
¯¯  !
if
˘˘$ &
(
˘˘' (
!
˘˘( )
m_isRightToLeft
˘˘) 8
)
˘˘8 9!
justificationOffset
˙˙( ;
+=
˙˙< >
new
˙˙? B
Vector3
˙˙C J
(
˙˙J K
gap
˙˙K N
*
˙˙O P
ratio
˙˙Q V
/
˙˙W X
visibleCount
˙˙Y e
,
˙˙e f
$num
˙˙g h
,
˙˙h i
$num
˙˙j k
)
˙˙k l
;
˙˙l m
else
˚˚$ (!
justificationOffset
¸¸( ;
-=
¸¸< >
new
¸¸? B
Vector3
¸¸C J
(
¸¸J K
gap
¸¸K N
*
¸¸O P
ratio
¸¸Q V
/
¸¸W X
visibleCount
¸¸Y e
,
¸¸e f
$num
¸¸g h
,
¸¸h i
$num
¸¸j k
)
¸¸k l
;
¸¸l m
}
˝˝  !
}
˛˛ 
}
ˇˇ 
else
ÄÄ 
{
ÅÅ 
if
ÇÇ 
(
ÇÇ  
!
ÇÇ  !
m_isRightToLeft
ÇÇ! 0
)
ÇÇ0 1!
justificationOffset
ÉÉ  3
=
ÉÉ4 5
new
ÉÉ6 9
Vector3
ÉÉ: A
(
ÉÉA B
lineInfo
ÉÉB J
.
ÉÉJ K

marginLeft
ÉÉK U
,
ÉÉU V
$num
ÉÉW X
,
ÉÉX Y
$num
ÉÉZ [
)
ÉÉ[ \
;
ÉÉ\ ]
else
ÑÑ  !
justificationOffset
ÖÖ  3
=
ÖÖ4 5
new
ÖÖ6 9
Vector3
ÖÖ: A
(
ÖÖA B
lineInfo
ÖÖB J
.
ÖÖJ K

marginLeft
ÖÖK U
+
ÖÖV W
lineInfo
ÖÖX `
.
ÖÖ` a
width
ÖÖa f
,
ÖÖf g
$num
ÖÖh i
,
ÖÖi j
$num
ÖÖk l
)
ÖÖl m
;
ÖÖm n
}
ÜÜ 
break
àà 
;
àà 
}
ââ 
offset
åå 
=
åå 
anchorOffset
åå %
+
åå& '!
justificationOffset
åå( ;
;
åå; <
bool
êê  
isCharacterVisible
êê '
=
êê( )
characterInfos
êê* 8
[
êê8 9
i
êê9 :
]
êê: ;
.
êê; <
	isVisible
êê< E
;
êêE F
if
ëë 
(
ëë  
isCharacterVisible
ëë &
)
ëë& '
{
íí !
TMP_TextElementType
ìì '
elementType
ìì( 3
=
ìì4 5
characterInfos
ìì6 D
[
ììD E
i
ììE F
]
ììF G
.
ììG H
elementType
ììH S
;
ììS T
switch
îî 
(
îî 
elementType
îî '
)
îî' (
{
ïï 
case
óó !
TMP_TextElementType
óó 0
.
óó0 1
	Character
óó1 :
:
óó: ;
Extents
òò #
lineExtents
òò$ /
=
òò0 1
lineInfo
òò2 :
.
òò: ;
lineExtents
òò; F
;
òòF G
float
ôô !
uvOffset
ôô" *
=
ôô+ ,
(
ôô- .
m_uvLineOffset
ôô. <
*
ôô= >
currentLine
ôô? J
)
ôôJ K
%
ôôL M
$num
ôôN O
;
ôôO P
switch
ùù "
(
ùù# $!
m_horizontalMapping
ùù$ 7
)
ùù7 8
{
ûû 
case
üü  $#
TextureMappingOptions
üü% :
.
üü: ;
	Character
üü; D
:
üüD E
characterInfos
††$ 2
[
††2 3
i
††3 4
]
††4 5
.
††5 6
	vertex_BL
††6 ?
.
††? @
uv2
††@ C
.
††C D
x
††D E
=
††F G
$num
††H I
;
††I J
characterInfos
°°$ 2
[
°°2 3
i
°°3 4
]
°°4 5
.
°°5 6
	vertex_TL
°°6 ?
.
°°? @
uv2
°°@ C
.
°°C D
x
°°D E
=
°°F G
$num
°°H I
;
°°I J
characterInfos
¢¢$ 2
[
¢¢2 3
i
¢¢3 4
]
¢¢4 5
.
¢¢5 6
	vertex_TR
¢¢6 ?
.
¢¢? @
uv2
¢¢@ C
.
¢¢C D
x
¢¢D E
=
¢¢F G
$num
¢¢H I
;
¢¢I J
characterInfos
££$ 2
[
££2 3
i
££3 4
]
££4 5
.
££5 6
	vertex_BR
££6 ?
.
££? @
uv2
££@ C
.
££C D
x
££D E
=
££F G
$num
££H I
;
££I J
break
§§$ )
;
§§) *
case
¶¶  $#
TextureMappingOptions
¶¶% :
.
¶¶: ;
Line
¶¶; ?
:
¶¶? @
if
ßß$ &
(
ßß' (
m_textAlignment
ßß( 7
!=
ßß8 :"
TextAlignmentOptions
ßß; O
.
ßßO P
	Justified
ßßP Y
)
ßßY Z
{
®®$ %
characterInfos
©©( 6
[
©©6 7
i
©©7 8
]
©©8 9
.
©©9 :
	vertex_BL
©©: C
.
©©C D
uv2
©©D G
.
©©G H
x
©©H I
=
©©J K
(
©©L M
characterInfos
©©M [
[
©©[ \
i
©©\ ]
]
©©] ^
.
©©^ _
	vertex_BL
©©_ h
.
©©h i
position
©©i q
.
©©q r
x
©©r s
-
©©t u
lineExtents©©v Å
.©©Å Ç
min©©Ç Ö
.©©Ö Ü
x©©Ü á
)©©á à
/©©â ä
(©©ã å
lineExtents©©å ó
.©©ó ò
max©©ò õ
.©©õ ú
x©©ú ù
-©©û ü
lineExtents©©† ´
.©©´ ¨
min©©¨ Ø
.©©Ø ∞
x©©∞ ±
)©©± ≤
+©©≥ ¥
uvOffset©©µ Ω
;©©Ω æ
characterInfos
™™( 6
[
™™6 7
i
™™7 8
]
™™8 9
.
™™9 :
	vertex_TL
™™: C
.
™™C D
uv2
™™D G
.
™™G H
x
™™H I
=
™™J K
(
™™L M
characterInfos
™™M [
[
™™[ \
i
™™\ ]
]
™™] ^
.
™™^ _
	vertex_TL
™™_ h
.
™™h i
position
™™i q
.
™™q r
x
™™r s
-
™™t u
lineExtents™™v Å
.™™Å Ç
min™™Ç Ö
.™™Ö Ü
x™™Ü á
)™™á à
/™™â ä
(™™ã å
lineExtents™™å ó
.™™ó ò
max™™ò õ
.™™õ ú
x™™ú ù
-™™û ü
lineExtents™™† ´
.™™´ ¨
min™™¨ Ø
.™™Ø ∞
x™™∞ ±
)™™± ≤
+™™≥ ¥
uvOffset™™µ Ω
;™™Ω æ
characterInfos
´´( 6
[
´´6 7
i
´´7 8
]
´´8 9
.
´´9 :
	vertex_TR
´´: C
.
´´C D
uv2
´´D G
.
´´G H
x
´´H I
=
´´J K
(
´´L M
characterInfos
´´M [
[
´´[ \
i
´´\ ]
]
´´] ^
.
´´^ _
	vertex_TR
´´_ h
.
´´h i
position
´´i q
.
´´q r
x
´´r s
-
´´t u
lineExtents´´v Å
.´´Å Ç
min´´Ç Ö
.´´Ö Ü
x´´Ü á
)´´á à
/´´â ä
(´´ã å
lineExtents´´å ó
.´´ó ò
max´´ò õ
.´´õ ú
x´´ú ù
-´´û ü
lineExtents´´† ´
.´´´ ¨
min´´¨ Ø
.´´Ø ∞
x´´∞ ±
)´´± ≤
+´´≥ ¥
uvOffset´´µ Ω
;´´Ω æ
characterInfos
¨¨( 6
[
¨¨6 7
i
¨¨7 8
]
¨¨8 9
.
¨¨9 :
	vertex_BR
¨¨: C
.
¨¨C D
uv2
¨¨D G
.
¨¨G H
x
¨¨H I
=
¨¨J K
(
¨¨L M
characterInfos
¨¨M [
[
¨¨[ \
i
¨¨\ ]
]
¨¨] ^
.
¨¨^ _
	vertex_BR
¨¨_ h
.
¨¨h i
position
¨¨i q
.
¨¨q r
x
¨¨r s
-
¨¨t u
lineExtents¨¨v Å
.¨¨Å Ç
min¨¨Ç Ö
.¨¨Ö Ü
x¨¨Ü á
)¨¨á à
/¨¨â ä
(¨¨ã å
lineExtents¨¨å ó
.¨¨ó ò
max¨¨ò õ
.¨¨õ ú
x¨¨ú ù
-¨¨û ü
lineExtents¨¨† ´
.¨¨´ ¨
min¨¨¨ Ø
.¨¨Ø ∞
x¨¨∞ ±
)¨¨± ≤
+¨¨≥ ¥
uvOffset¨¨µ Ω
;¨¨Ω æ
break
≠≠( -
;
≠≠- .
}
ÆÆ$ %
else
ØØ$ (
{
∞∞$ %
characterInfos
±±( 6
[
±±6 7
i
±±7 8
]
±±8 9
.
±±9 :
	vertex_BL
±±: C
.
±±C D
uv2
±±D G
.
±±G H
x
±±H I
=
±±J K
(
±±L M
characterInfos
±±M [
[
±±[ \
i
±±\ ]
]
±±] ^
.
±±^ _
	vertex_BL
±±_ h
.
±±h i
position
±±i q
.
±±q r
x
±±r s
+
±±t u"
justificationOffset±±v â
.±±â ä
x±±ä ã
-±±å ç
m_meshExtents±±é õ
.±±õ ú
min±±ú ü
.±±ü †
x±±† °
)±±° ¢
/±±£ §
(±±• ¶
m_meshExtents±±¶ ≥
.±±≥ ¥
max±±¥ ∑
.±±∑ ∏
x±±∏ π
-±±∫ ª
m_meshExtents±±º …
.±±…  
min±±  Õ
.±±Õ Œ
x±±Œ œ
)±±œ –
+±±— “
uvOffset±±” €
;±±€ ‹
characterInfos
≤≤( 6
[
≤≤6 7
i
≤≤7 8
]
≤≤8 9
.
≤≤9 :
	vertex_TL
≤≤: C
.
≤≤C D
uv2
≤≤D G
.
≤≤G H
x
≤≤H I
=
≤≤J K
(
≤≤L M
characterInfos
≤≤M [
[
≤≤[ \
i
≤≤\ ]
]
≤≤] ^
.
≤≤^ _
	vertex_TL
≤≤_ h
.
≤≤h i
position
≤≤i q
.
≤≤q r
x
≤≤r s
+
≤≤t u"
justificationOffset≤≤v â
.≤≤â ä
x≤≤ä ã
-≤≤å ç
m_meshExtents≤≤é õ
.≤≤õ ú
min≤≤ú ü
.≤≤ü †
x≤≤† °
)≤≤° ¢
/≤≤£ §
(≤≤• ¶
m_meshExtents≤≤¶ ≥
.≤≤≥ ¥
max≤≤¥ ∑
.≤≤∑ ∏
x≤≤∏ π
-≤≤∫ ª
m_meshExtents≤≤º …
.≤≤…  
min≤≤  Õ
.≤≤Õ Œ
x≤≤Œ œ
)≤≤œ –
+≤≤— “
uvOffset≤≤” €
;≤≤€ ‹
characterInfos
≥≥( 6
[
≥≥6 7
i
≥≥7 8
]
≥≥8 9
.
≥≥9 :
	vertex_TR
≥≥: C
.
≥≥C D
uv2
≥≥D G
.
≥≥G H
x
≥≥H I
=
≥≥J K
(
≥≥L M
characterInfos
≥≥M [
[
≥≥[ \
i
≥≥\ ]
]
≥≥] ^
.
≥≥^ _
	vertex_TR
≥≥_ h
.
≥≥h i
position
≥≥i q
.
≥≥q r
x
≥≥r s
+
≥≥t u"
justificationOffset≥≥v â
.≥≥â ä
x≥≥ä ã
-≥≥å ç
m_meshExtents≥≥é õ
.≥≥õ ú
min≥≥ú ü
.≥≥ü †
x≥≥† °
)≥≥° ¢
/≥≥£ §
(≥≥• ¶
m_meshExtents≥≥¶ ≥
.≥≥≥ ¥
max≥≥¥ ∑
.≥≥∑ ∏
x≥≥∏ π
-≥≥∫ ª
m_meshExtents≥≥º …
.≥≥…  
min≥≥  Õ
.≥≥Õ Œ
x≥≥Œ œ
)≥≥œ –
+≥≥— “
uvOffset≥≥” €
;≥≥€ ‹
characterInfos
¥¥( 6
[
¥¥6 7
i
¥¥7 8
]
¥¥8 9
.
¥¥9 :
	vertex_BR
¥¥: C
.
¥¥C D
uv2
¥¥D G
.
¥¥G H
x
¥¥H I
=
¥¥J K
(
¥¥L M
characterInfos
¥¥M [
[
¥¥[ \
i
¥¥\ ]
]
¥¥] ^
.
¥¥^ _
	vertex_BR
¥¥_ h
.
¥¥h i
position
¥¥i q
.
¥¥q r
x
¥¥r s
+
¥¥t u"
justificationOffset¥¥v â
.¥¥â ä
x¥¥ä ã
-¥¥å ç
m_meshExtents¥¥é õ
.¥¥õ ú
min¥¥ú ü
.¥¥ü †
x¥¥† °
)¥¥° ¢
/¥¥£ §
(¥¥• ¶
m_meshExtents¥¥¶ ≥
.¥¥≥ ¥
max¥¥¥ ∑
.¥¥∑ ∏
x¥¥∏ π
-¥¥∫ ª
m_meshExtents¥¥º …
.¥¥…  
min¥¥  Õ
.¥¥Õ Œ
x¥¥Œ œ
)¥¥œ –
+¥¥— “
uvOffset¥¥” €
;¥¥€ ‹
break
µµ( -
;
µµ- .
}
∂∂$ %
case
∏∏  $#
TextureMappingOptions
∏∏% :
.
∏∏: ;
	Paragraph
∏∏; D
:
∏∏D E
characterInfos
ππ$ 2
[
ππ2 3
i
ππ3 4
]
ππ4 5
.
ππ5 6
	vertex_BL
ππ6 ?
.
ππ? @
uv2
ππ@ C
.
ππC D
x
ππD E
=
ππF G
(
ππH I
characterInfos
ππI W
[
ππW X
i
ππX Y
]
ππY Z
.
ππZ [
	vertex_BL
ππ[ d
.
ππd e
position
ππe m
.
ππm n
x
ππn o
+
ππp q"
justificationOffsetππr Ö
.ππÖ Ü
xππÜ á
-ππà â
m_meshExtentsππä ó
.ππó ò
minππò õ
.ππõ ú
xππú ù
)ππù û
/ππü †
(ππ° ¢
m_meshExtentsππ¢ Ø
.ππØ ∞
maxππ∞ ≥
.ππ≥ ¥
xππ¥ µ
-ππ∂ ∑
m_meshExtentsππ∏ ≈
.ππ≈ ∆
minππ∆ …
.ππ…  
xππ  À
)ππÀ Ã
+ππÕ Œ
uvOffsetππœ ◊
;ππ◊ ÿ
characterInfos
∫∫$ 2
[
∫∫2 3
i
∫∫3 4
]
∫∫4 5
.
∫∫5 6
	vertex_TL
∫∫6 ?
.
∫∫? @
uv2
∫∫@ C
.
∫∫C D
x
∫∫D E
=
∫∫F G
(
∫∫H I
characterInfos
∫∫I W
[
∫∫W X
i
∫∫X Y
]
∫∫Y Z
.
∫∫Z [
	vertex_TL
∫∫[ d
.
∫∫d e
position
∫∫e m
.
∫∫m n
x
∫∫n o
+
∫∫p q"
justificationOffset∫∫r Ö
.∫∫Ö Ü
x∫∫Ü á
-∫∫à â
m_meshExtents∫∫ä ó
.∫∫ó ò
min∫∫ò õ
.∫∫õ ú
x∫∫ú ù
)∫∫ù û
/∫∫ü †
(∫∫° ¢
m_meshExtents∫∫¢ Ø
.∫∫Ø ∞
max∫∫∞ ≥
.∫∫≥ ¥
x∫∫¥ µ
-∫∫∂ ∑
m_meshExtents∫∫∏ ≈
.∫∫≈ ∆
min∫∫∆ …
.∫∫…  
x∫∫  À
)∫∫À Ã
+∫∫Õ Œ
uvOffset∫∫œ ◊
;∫∫◊ ÿ
characterInfos
ªª$ 2
[
ªª2 3
i
ªª3 4
]
ªª4 5
.
ªª5 6
	vertex_TR
ªª6 ?
.
ªª? @
uv2
ªª@ C
.
ªªC D
x
ªªD E
=
ªªF G
(
ªªH I
characterInfos
ªªI W
[
ªªW X
i
ªªX Y
]
ªªY Z
.
ªªZ [
	vertex_TR
ªª[ d
.
ªªd e
position
ªªe m
.
ªªm n
x
ªªn o
+
ªªp q"
justificationOffsetªªr Ö
.ªªÖ Ü
xªªÜ á
-ªªà â
m_meshExtentsªªä ó
.ªªó ò
minªªò õ
.ªªõ ú
xªªú ù
)ªªù û
/ªªü †
(ªª° ¢
m_meshExtentsªª¢ Ø
.ªªØ ∞
maxªª∞ ≥
.ªª≥ ¥
xªª¥ µ
-ªª∂ ∑
m_meshExtentsªª∏ ≈
.ªª≈ ∆
minªª∆ …
.ªª…  
xªª  À
)ªªÀ Ã
+ªªÕ Œ
uvOffsetªªœ ◊
;ªª◊ ÿ
characterInfos
ºº$ 2
[
ºº2 3
i
ºº3 4
]
ºº4 5
.
ºº5 6
	vertex_BR
ºº6 ?
.
ºº? @
uv2
ºº@ C
.
ººC D
x
ººD E
=
ººF G
(
ººH I
characterInfos
ººI W
[
ººW X
i
ººX Y
]
ººY Z
.
ººZ [
	vertex_BR
ºº[ d
.
ººd e
position
ººe m
.
ººm n
x
ººn o
+
ººp q"
justificationOffsetººr Ö
.ººÖ Ü
xººÜ á
-ººà â
m_meshExtentsººä ó
.ººó ò
minººò õ
.ººõ ú
xººú ù
)ººù û
/ººü †
(ºº° ¢
m_meshExtentsºº¢ Ø
.ººØ ∞
maxºº∞ ≥
.ºº≥ ¥
xºº¥ µ
-ºº∂ ∑
m_meshExtentsºº∏ ≈
.ºº≈ ∆
minºº∆ …
.ºº…  
xºº  À
)ººÀ Ã
+ººÕ Œ
uvOffsetººœ ◊
;ºº◊ ÿ
break
ΩΩ$ )
;
ΩΩ) *
case
øø  $#
TextureMappingOptions
øø% :
.
øø: ;
MatchAspect
øø; F
:
øøF G
switch
¡¡$ *
(
¡¡+ ,
m_verticalMapping
¡¡, =
)
¡¡= >
{
¬¬$ %
case
√√( ,#
TextureMappingOptions
√√- B
.
√√B C
	Character
√√C L
:
√√L M
characterInfos
ƒƒ, :
[
ƒƒ: ;
i
ƒƒ; <
]
ƒƒ< =
.
ƒƒ= >
	vertex_BL
ƒƒ> G
.
ƒƒG H
uv2
ƒƒH K
.
ƒƒK L
y
ƒƒL M
=
ƒƒN O
$num
ƒƒP Q
;
ƒƒQ R
characterInfos
≈≈, :
[
≈≈: ;
i
≈≈; <
]
≈≈< =
.
≈≈= >
	vertex_TL
≈≈> G
.
≈≈G H
uv2
≈≈H K
.
≈≈K L
y
≈≈L M
=
≈≈N O
$num
≈≈P Q
;
≈≈Q R
characterInfos
∆∆, :
[
∆∆: ;
i
∆∆; <
]
∆∆< =
.
∆∆= >
	vertex_TR
∆∆> G
.
∆∆G H
uv2
∆∆H K
.
∆∆K L
y
∆∆L M
=
∆∆N O
$num
∆∆P Q
;
∆∆Q R
characterInfos
««, :
[
««: ;
i
««; <
]
««< =
.
««= >
	vertex_BR
««> G
.
««G H
uv2
««H K
.
««K L
y
««L M
=
««N O
$num
««P Q
;
««Q R
break
»», 1
;
»»1 2
case
  ( ,#
TextureMappingOptions
  - B
.
  B C
Line
  C G
:
  G H
characterInfos
ÀÀ, :
[
ÀÀ: ;
i
ÀÀ; <
]
ÀÀ< =
.
ÀÀ= >
	vertex_BL
ÀÀ> G
.
ÀÀG H
uv2
ÀÀH K
.
ÀÀK L
y
ÀÀL M
=
ÀÀN O
(
ÀÀP Q
characterInfos
ÀÀQ _
[
ÀÀ_ `
i
ÀÀ` a
]
ÀÀa b
.
ÀÀb c
	vertex_BL
ÀÀc l
.
ÀÀl m
position
ÀÀm u
.
ÀÀu v
y
ÀÀv w
-
ÀÀx y
lineExtentsÀÀz Ö
.ÀÀÖ Ü
minÀÀÜ â
.ÀÀâ ä
yÀÀä ã
)ÀÀã å
/ÀÀç é
(ÀÀè ê
lineExtentsÀÀê õ
.ÀÀõ ú
maxÀÀú ü
.ÀÀü †
yÀÀ† °
-ÀÀ¢ £
lineExtentsÀÀ§ Ø
.ÀÀØ ∞
minÀÀ∞ ≥
.ÀÀ≥ ¥
yÀÀ¥ µ
)ÀÀµ ∂
+ÀÀ∑ ∏
uvOffsetÀÀπ ¡
;ÀÀ¡ ¬
characterInfos
ÃÃ, :
[
ÃÃ: ;
i
ÃÃ; <
]
ÃÃ< =
.
ÃÃ= >
	vertex_TL
ÃÃ> G
.
ÃÃG H
uv2
ÃÃH K
.
ÃÃK L
y
ÃÃL M
=
ÃÃN O
(
ÃÃP Q
characterInfos
ÃÃQ _
[
ÃÃ_ `
i
ÃÃ` a
]
ÃÃa b
.
ÃÃb c
	vertex_TL
ÃÃc l
.
ÃÃl m
position
ÃÃm u
.
ÃÃu v
y
ÃÃv w
-
ÃÃx y
lineExtentsÃÃz Ö
.ÃÃÖ Ü
minÃÃÜ â
.ÃÃâ ä
yÃÃä ã
)ÃÃã å
/ÃÃç é
(ÃÃè ê
lineExtentsÃÃê õ
.ÃÃõ ú
maxÃÃú ü
.ÃÃü †
yÃÃ† °
-ÃÃ¢ £
lineExtentsÃÃ§ Ø
.ÃÃØ ∞
minÃÃ∞ ≥
.ÃÃ≥ ¥
yÃÃ¥ µ
)ÃÃµ ∂
+ÃÃ∑ ∏
uvOffsetÃÃπ ¡
;ÃÃ¡ ¬
characterInfos
ÕÕ, :
[
ÕÕ: ;
i
ÕÕ; <
]
ÕÕ< =
.
ÕÕ= >
	vertex_TR
ÕÕ> G
.
ÕÕG H
uv2
ÕÕH K
.
ÕÕK L
y
ÕÕL M
=
ÕÕN O
characterInfos
ÕÕP ^
[
ÕÕ^ _
i
ÕÕ_ `
]
ÕÕ` a
.
ÕÕa b
	vertex_BL
ÕÕb k
.
ÕÕk l
uv2
ÕÕl o
.
ÕÕo p
y
ÕÕp q
;
ÕÕq r
characterInfos
ŒŒ, :
[
ŒŒ: ;
i
ŒŒ; <
]
ŒŒ< =
.
ŒŒ= >
	vertex_BR
ŒŒ> G
.
ŒŒG H
uv2
ŒŒH K
.
ŒŒK L
y
ŒŒL M
=
ŒŒN O
characterInfos
ŒŒP ^
[
ŒŒ^ _
i
ŒŒ_ `
]
ŒŒ` a
.
ŒŒa b
	vertex_TL
ŒŒb k
.
ŒŒk l
uv2
ŒŒl o
.
ŒŒo p
y
ŒŒp q
;
ŒŒq r
break
œœ, 1
;
œœ1 2
case
——( ,#
TextureMappingOptions
——- B
.
——B C
	Paragraph
——C L
:
——L M
characterInfos
““, :
[
““: ;
i
““; <
]
““< =
.
““= >
	vertex_BL
““> G
.
““G H
uv2
““H K
.
““K L
y
““L M
=
““N O
(
““P Q
characterInfos
““Q _
[
““_ `
i
““` a
]
““a b
.
““b c
	vertex_BL
““c l
.
““l m
position
““m u
.
““u v
y
““v w
-
““x y
m_meshExtents““z á
.““á à
min““à ã
.““ã å
y““å ç
)““ç é
/““è ê
(““ë í
m_meshExtents““í ü
.““ü †
max““† £
.““£ §
y““§ •
-““¶ ß
m_meshExtents““® µ
.““µ ∂
min““∂ π
.““π ∫
y““∫ ª
)““ª º
+““Ω æ
uvOffset““ø «
;““« »
characterInfos
””, :
[
””: ;
i
””; <
]
””< =
.
””= >
	vertex_TL
””> G
.
””G H
uv2
””H K
.
””K L
y
””L M
=
””N O
(
””P Q
characterInfos
””Q _
[
””_ `
i
””` a
]
””a b
.
””b c
	vertex_TL
””c l
.
””l m
position
””m u
.
””u v
y
””v w
-
””x y
m_meshExtents””z á
.””á à
min””à ã
.””ã å
y””å ç
)””ç é
/””è ê
(””ë í
m_meshExtents””í ü
.””ü †
max””† £
.””£ §
y””§ •
-””¶ ß
m_meshExtents””® µ
.””µ ∂
min””∂ π
.””π ∫
y””∫ ª
)””ª º
+””Ω æ
uvOffset””ø «
;””« »
characterInfos
‘‘, :
[
‘‘: ;
i
‘‘; <
]
‘‘< =
.
‘‘= >
	vertex_TR
‘‘> G
.
‘‘G H
uv2
‘‘H K
.
‘‘K L
y
‘‘L M
=
‘‘N O
characterInfos
‘‘P ^
[
‘‘^ _
i
‘‘_ `
]
‘‘` a
.
‘‘a b
	vertex_BL
‘‘b k
.
‘‘k l
uv2
‘‘l o
.
‘‘o p
y
‘‘p q
;
‘‘q r
characterInfos
’’, :
[
’’: ;
i
’’; <
]
’’< =
.
’’= >
	vertex_BR
’’> G
.
’’G H
uv2
’’H K
.
’’K L
y
’’L M
=
’’N O
characterInfos
’’P ^
[
’’^ _
i
’’_ `
]
’’` a
.
’’a b
	vertex_TL
’’b k
.
’’k l
uv2
’’l o
.
’’o p
y
’’p q
;
’’q r
break
÷÷, 1
;
÷÷1 2
case
ÿÿ( ,#
TextureMappingOptions
ÿÿ- B
.
ÿÿB C
MatchAspect
ÿÿC N
:
ÿÿN O
Debug
ŸŸ, 1
.
ŸŸ1 2
Log
ŸŸ2 5
(
ŸŸ5 6
$str
ŸŸ6 g
)
ŸŸg h
;
ŸŸh i
break
⁄⁄, 1
;
⁄⁄1 2
}
€€$ %
float
ﬁﬁ$ )
xDelta
ﬁﬁ* 0
=
ﬁﬁ1 2
(
ﬁﬁ3 4
$num
ﬁﬁ4 5
-
ﬁﬁ6 7
(
ﬁﬁ8 9
(
ﬁﬁ9 :
characterInfos
ﬁﬁ: H
[
ﬁﬁH I
i
ﬁﬁI J
]
ﬁﬁJ K
.
ﬁﬁK L
	vertex_BL
ﬁﬁL U
.
ﬁﬁU V
uv2
ﬁﬁV Y
.
ﬁﬁY Z
y
ﬁﬁZ [
+
ﬁﬁ\ ]
characterInfos
ﬁﬁ^ l
[
ﬁﬁl m
i
ﬁﬁm n
]
ﬁﬁn o
.
ﬁﬁo p
	vertex_TL
ﬁﬁp y
.
ﬁﬁy z
uv2
ﬁﬁz }
.
ﬁﬁ} ~
y
ﬁﬁ~ 
)ﬁﬁ Ä
*ﬁﬁÅ Ç
characterInfosﬁﬁÉ ë
[ﬁﬁë í
iﬁﬁí ì
]ﬁﬁì î
.ﬁﬁî ï
aspectRatioﬁﬁï †
)ﬁﬁ† °
)ﬁﬁ° ¢
/ﬁﬁ£ §
$numﬁﬁ• ¶
;ﬁﬁ¶ ß
characterInfos
‡‡$ 2
[
‡‡2 3
i
‡‡3 4
]
‡‡4 5
.
‡‡5 6
	vertex_BL
‡‡6 ?
.
‡‡? @
uv2
‡‡@ C
.
‡‡C D
x
‡‡D E
=
‡‡F G
(
‡‡H I
characterInfos
‡‡I W
[
‡‡W X
i
‡‡X Y
]
‡‡Y Z
.
‡‡Z [
	vertex_BL
‡‡[ d
.
‡‡d e
uv2
‡‡e h
.
‡‡h i
y
‡‡i j
*
‡‡k l
characterInfos
‡‡m {
[
‡‡{ |
i
‡‡| }
]
‡‡} ~
.
‡‡~ 
aspectRatio‡‡ ä
)‡‡ä ã
+‡‡å ç
xDelta‡‡é î
+‡‡ï ñ
uvOffset‡‡ó ü
;‡‡ü †
characterInfos
··$ 2
[
··2 3
i
··3 4
]
··4 5
.
··5 6
	vertex_TL
··6 ?
.
··? @
uv2
··@ C
.
··C D
x
··D E
=
··F G
characterInfos
··H V
[
··V W
i
··W X
]
··X Y
.
··Y Z
	vertex_BL
··Z c
.
··c d
uv2
··d g
.
··g h
x
··h i
;
··i j
characterInfos
‚‚$ 2
[
‚‚2 3
i
‚‚3 4
]
‚‚4 5
.
‚‚5 6
	vertex_TR
‚‚6 ?
.
‚‚? @
uv2
‚‚@ C
.
‚‚C D
x
‚‚D E
=
‚‚F G
(
‚‚H I
characterInfos
‚‚I W
[
‚‚W X
i
‚‚X Y
]
‚‚Y Z
.
‚‚Z [
	vertex_TL
‚‚[ d
.
‚‚d e
uv2
‚‚e h
.
‚‚h i
y
‚‚i j
*
‚‚k l
characterInfos
‚‚m {
[
‚‚{ |
i
‚‚| }
]
‚‚} ~
.
‚‚~ 
aspectRatio‚‚ ä
)‚‚ä ã
+‚‚å ç
xDelta‚‚é î
+‚‚ï ñ
uvOffset‚‚ó ü
;‚‚ü †
characterInfos
„„$ 2
[
„„2 3
i
„„3 4
]
„„4 5
.
„„5 6
	vertex_BR
„„6 ?
.
„„? @
uv2
„„@ C
.
„„C D
x
„„D E
=
„„F G
characterInfos
„„H V
[
„„V W
i
„„W X
]
„„X Y
.
„„Y Z
	vertex_TR
„„Z c
.
„„c d
uv2
„„d g
.
„„g h
x
„„h i
;
„„i j
break
‰‰$ )
;
‰‰) *
}
ÂÂ 
switch
ÁÁ "
(
ÁÁ# $
m_verticalMapping
ÁÁ$ 5
)
ÁÁ5 6
{
ËË 
case
ÈÈ  $#
TextureMappingOptions
ÈÈ% :
.
ÈÈ: ;
	Character
ÈÈ; D
:
ÈÈD E
characterInfos
ÍÍ$ 2
[
ÍÍ2 3
i
ÍÍ3 4
]
ÍÍ4 5
.
ÍÍ5 6
	vertex_BL
ÍÍ6 ?
.
ÍÍ? @
uv2
ÍÍ@ C
.
ÍÍC D
y
ÍÍD E
=
ÍÍF G
$num
ÍÍH I
;
ÍÍI J
characterInfos
ÎÎ$ 2
[
ÎÎ2 3
i
ÎÎ3 4
]
ÎÎ4 5
.
ÎÎ5 6
	vertex_TL
ÎÎ6 ?
.
ÎÎ? @
uv2
ÎÎ@ C
.
ÎÎC D
y
ÎÎD E
=
ÎÎF G
$num
ÎÎH I
;
ÎÎI J
characterInfos
ÏÏ$ 2
[
ÏÏ2 3
i
ÏÏ3 4
]
ÏÏ4 5
.
ÏÏ5 6
	vertex_TR
ÏÏ6 ?
.
ÏÏ? @
uv2
ÏÏ@ C
.
ÏÏC D
y
ÏÏD E
=
ÏÏF G
$num
ÏÏH I
;
ÏÏI J
characterInfos
ÌÌ$ 2
[
ÌÌ2 3
i
ÌÌ3 4
]
ÌÌ4 5
.
ÌÌ5 6
	vertex_BR
ÌÌ6 ?
.
ÌÌ? @
uv2
ÌÌ@ C
.
ÌÌC D
y
ÌÌD E
=
ÌÌF G
$num
ÌÌH I
;
ÌÌI J
break
ÓÓ$ )
;
ÓÓ) *
case
  $#
TextureMappingOptions
% :
.
: ;
Line
; ?
:
? @
characterInfos
ÒÒ$ 2
[
ÒÒ2 3
i
ÒÒ3 4
]
ÒÒ4 5
.
ÒÒ5 6
	vertex_BL
ÒÒ6 ?
.
ÒÒ? @
uv2
ÒÒ@ C
.
ÒÒC D
y
ÒÒD E
=
ÒÒF G
(
ÒÒH I
characterInfos
ÒÒI W
[
ÒÒW X
i
ÒÒX Y
]
ÒÒY Z
.
ÒÒZ [
	vertex_BL
ÒÒ[ d
.
ÒÒd e
position
ÒÒe m
.
ÒÒm n
y
ÒÒn o
-
ÒÒp q
lineInfo
ÒÒr z
.
ÒÒz {
	descenderÒÒ{ Ñ
)ÒÒÑ Ö
/ÒÒÜ á
(ÒÒà â
lineInfoÒÒâ ë
.ÒÒë í
ascenderÒÒí ö
-ÒÒõ ú
lineInfoÒÒù •
.ÒÒ• ¶
	descenderÒÒ¶ Ø
)ÒÒØ ∞
;ÒÒ∞ ±
characterInfos
ÚÚ$ 2
[
ÚÚ2 3
i
ÚÚ3 4
]
ÚÚ4 5
.
ÚÚ5 6
	vertex_TL
ÚÚ6 ?
.
ÚÚ? @
uv2
ÚÚ@ C
.
ÚÚC D
y
ÚÚD E
=
ÚÚF G
(
ÚÚH I
characterInfos
ÚÚI W
[
ÚÚW X
i
ÚÚX Y
]
ÚÚY Z
.
ÚÚZ [
	vertex_TL
ÚÚ[ d
.
ÚÚd e
position
ÚÚe m
.
ÚÚm n
y
ÚÚn o
-
ÚÚp q
lineInfo
ÚÚr z
.
ÚÚz {
	descenderÚÚ{ Ñ
)ÚÚÑ Ö
/ÚÚÜ á
(ÚÚà â
lineInfoÚÚâ ë
.ÚÚë í
ascenderÚÚí ö
-ÚÚõ ú
lineInfoÚÚù •
.ÚÚ• ¶
	descenderÚÚ¶ Ø
)ÚÚØ ∞
;ÚÚ∞ ±
characterInfos
ÛÛ$ 2
[
ÛÛ2 3
i
ÛÛ3 4
]
ÛÛ4 5
.
ÛÛ5 6
	vertex_TR
ÛÛ6 ?
.
ÛÛ? @
uv2
ÛÛ@ C
.
ÛÛC D
y
ÛÛD E
=
ÛÛF G
characterInfos
ÛÛH V
[
ÛÛV W
i
ÛÛW X
]
ÛÛX Y
.
ÛÛY Z
	vertex_TL
ÛÛZ c
.
ÛÛc d
uv2
ÛÛd g
.
ÛÛg h
y
ÛÛh i
;
ÛÛi j
characterInfos
ÙÙ$ 2
[
ÙÙ2 3
i
ÙÙ3 4
]
ÙÙ4 5
.
ÙÙ5 6
	vertex_BR
ÙÙ6 ?
.
ÙÙ? @
uv2
ÙÙ@ C
.
ÙÙC D
y
ÙÙD E
=
ÙÙF G
characterInfos
ÙÙH V
[
ÙÙV W
i
ÙÙW X
]
ÙÙX Y
.
ÙÙY Z
	vertex_BL
ÙÙZ c
.
ÙÙc d
uv2
ÙÙd g
.
ÙÙg h
y
ÙÙh i
;
ÙÙi j
break
ıı$ )
;
ıı) *
case
˜˜  $#
TextureMappingOptions
˜˜% :
.
˜˜: ;
	Paragraph
˜˜; D
:
˜˜D E
characterInfos
¯¯$ 2
[
¯¯2 3
i
¯¯3 4
]
¯¯4 5
.
¯¯5 6
	vertex_BL
¯¯6 ?
.
¯¯? @
uv2
¯¯@ C
.
¯¯C D
y
¯¯D E
=
¯¯F G
(
¯¯H I
characterInfos
¯¯I W
[
¯¯W X
i
¯¯X Y
]
¯¯Y Z
.
¯¯Z [
	vertex_BL
¯¯[ d
.
¯¯d e
position
¯¯e m
.
¯¯m n
y
¯¯n o
-
¯¯p q
m_meshExtents
¯¯r 
.¯¯ Ä
min¯¯Ä É
.¯¯É Ñ
y¯¯Ñ Ö
)¯¯Ö Ü
/¯¯á à
(¯¯â ä
m_meshExtents¯¯ä ó
.¯¯ó ò
max¯¯ò õ
.¯¯õ ú
y¯¯ú ù
-¯¯û ü
m_meshExtents¯¯† ≠
.¯¯≠ Æ
min¯¯Æ ±
.¯¯± ≤
y¯¯≤ ≥
)¯¯≥ ¥
;¯¯¥ µ
characterInfos
˘˘$ 2
[
˘˘2 3
i
˘˘3 4
]
˘˘4 5
.
˘˘5 6
	vertex_TL
˘˘6 ?
.
˘˘? @
uv2
˘˘@ C
.
˘˘C D
y
˘˘D E
=
˘˘F G
(
˘˘H I
characterInfos
˘˘I W
[
˘˘W X
i
˘˘X Y
]
˘˘Y Z
.
˘˘Z [
	vertex_TL
˘˘[ d
.
˘˘d e
position
˘˘e m
.
˘˘m n
y
˘˘n o
-
˘˘p q
m_meshExtents
˘˘r 
.˘˘ Ä
min˘˘Ä É
.˘˘É Ñ
y˘˘Ñ Ö
)˘˘Ö Ü
/˘˘á à
(˘˘â ä
m_meshExtents˘˘ä ó
.˘˘ó ò
max˘˘ò õ
.˘˘õ ú
y˘˘ú ù
-˘˘û ü
m_meshExtents˘˘† ≠
.˘˘≠ Æ
min˘˘Æ ±
.˘˘± ≤
y˘˘≤ ≥
)˘˘≥ ¥
;˘˘¥ µ
characterInfos
˙˙$ 2
[
˙˙2 3
i
˙˙3 4
]
˙˙4 5
.
˙˙5 6
	vertex_TR
˙˙6 ?
.
˙˙? @
uv2
˙˙@ C
.
˙˙C D
y
˙˙D E
=
˙˙F G
characterInfos
˙˙H V
[
˙˙V W
i
˙˙W X
]
˙˙X Y
.
˙˙Y Z
	vertex_TL
˙˙Z c
.
˙˙c d
uv2
˙˙d g
.
˙˙g h
y
˙˙h i
;
˙˙i j
characterInfos
˚˚$ 2
[
˚˚2 3
i
˚˚3 4
]
˚˚4 5
.
˚˚5 6
	vertex_BR
˚˚6 ?
.
˚˚? @
uv2
˚˚@ C
.
˚˚C D
y
˚˚D E
=
˚˚F G
characterInfos
˚˚H V
[
˚˚V W
i
˚˚W X
]
˚˚X Y
.
˚˚Y Z
	vertex_BL
˚˚Z c
.
˚˚c d
uv2
˚˚d g
.
˚˚g h
y
˚˚h i
;
˚˚i j
break
¸¸$ )
;
¸¸) *
case
˛˛  $#
TextureMappingOptions
˛˛% :
.
˛˛: ;
MatchAspect
˛˛; F
:
˛˛F G
float
ˇˇ$ )
yDelta
ˇˇ* 0
=
ˇˇ1 2
(
ˇˇ3 4
$num
ˇˇ4 5
-
ˇˇ6 7
(
ˇˇ8 9
(
ˇˇ9 :
characterInfos
ˇˇ: H
[
ˇˇH I
i
ˇˇI J
]
ˇˇJ K
.
ˇˇK L
	vertex_BL
ˇˇL U
.
ˇˇU V
uv2
ˇˇV Y
.
ˇˇY Z
x
ˇˇZ [
+
ˇˇ\ ]
characterInfos
ˇˇ^ l
[
ˇˇl m
i
ˇˇm n
]
ˇˇn o
.
ˇˇo p
	vertex_TR
ˇˇp y
.
ˇˇy z
uv2
ˇˇz }
.
ˇˇ} ~
x
ˇˇ~ 
)ˇˇ Ä
/ˇˇÅ Ç
characterInfosˇˇÉ ë
[ˇˇë í
iˇˇí ì
]ˇˇì î
.ˇˇî ï
aspectRatioˇˇï †
)ˇˇ† °
)ˇˇ° ¢
/ˇˇ£ §
$numˇˇ• ¶
;ˇˇ¶ ß
characterInfos
ÅÅ$ 2
[
ÅÅ2 3
i
ÅÅ3 4
]
ÅÅ4 5
.
ÅÅ5 6
	vertex_BL
ÅÅ6 ?
.
ÅÅ? @
uv2
ÅÅ@ C
.
ÅÅC D
y
ÅÅD E
=
ÅÅF G
yDelta
ÅÅH N
+
ÅÅO P
(
ÅÅQ R
characterInfos
ÅÅR `
[
ÅÅ` a
i
ÅÅa b
]
ÅÅb c
.
ÅÅc d
	vertex_BL
ÅÅd m
.
ÅÅm n
uv2
ÅÅn q
.
ÅÅq r
x
ÅÅr s
/
ÅÅt u
characterInfosÅÅv Ñ
[ÅÅÑ Ö
iÅÅÖ Ü
]ÅÅÜ á
.ÅÅá à
aspectRatioÅÅà ì
)ÅÅì î
;ÅÅî ï
characterInfos
ÇÇ$ 2
[
ÇÇ2 3
i
ÇÇ3 4
]
ÇÇ4 5
.
ÇÇ5 6
	vertex_TL
ÇÇ6 ?
.
ÇÇ? @
uv2
ÇÇ@ C
.
ÇÇC D
y
ÇÇD E
=
ÇÇF G
yDelta
ÇÇH N
+
ÇÇO P
(
ÇÇQ R
characterInfos
ÇÇR `
[
ÇÇ` a
i
ÇÇa b
]
ÇÇb c
.
ÇÇc d
	vertex_TR
ÇÇd m
.
ÇÇm n
uv2
ÇÇn q
.
ÇÇq r
x
ÇÇr s
/
ÇÇt u
characterInfosÇÇv Ñ
[ÇÇÑ Ö
iÇÇÖ Ü
]ÇÇÜ á
.ÇÇá à
aspectRatioÇÇà ì
)ÇÇì î
;ÇÇî ï
characterInfos
ÉÉ$ 2
[
ÉÉ2 3
i
ÉÉ3 4
]
ÉÉ4 5
.
ÉÉ5 6
	vertex_BR
ÉÉ6 ?
.
ÉÉ? @
uv2
ÉÉ@ C
.
ÉÉC D
y
ÉÉD E
=
ÉÉF G
characterInfos
ÉÉH V
[
ÉÉV W
i
ÉÉW X
]
ÉÉX Y
.
ÉÉY Z
	vertex_BL
ÉÉZ c
.
ÉÉc d
uv2
ÉÉd g
.
ÉÉg h
y
ÉÉh i
;
ÉÉi j
characterInfos
ÑÑ$ 2
[
ÑÑ2 3
i
ÑÑ3 4
]
ÑÑ4 5
.
ÑÑ5 6
	vertex_TR
ÑÑ6 ?
.
ÑÑ? @
uv2
ÑÑ@ C
.
ÑÑC D
y
ÑÑD E
=
ÑÑF G
characterInfos
ÑÑH V
[
ÑÑV W
i
ÑÑW X
]
ÑÑX Y
.
ÑÑY Z
	vertex_TL
ÑÑZ c
.
ÑÑc d
uv2
ÑÑd g
.
ÑÑg h
y
ÑÑh i
;
ÑÑi j
break
ÖÖ$ )
;
ÖÖ) *
}
ÜÜ 
xScale
ãã "
=
ãã# $
characterInfos
ãã% 3
[
ãã3 4
i
ãã4 5
]
ãã5 6
.
ãã6 7
scale
ãã7 <
*
ãã= >
Mathf
ãã? D
.
ããD E
Abs
ããE H
(
ããH I

lossyScale
ããI S
)
ããS T
*
ããU V
(
ããW X
$num
ããX Y
-
ããZ [!
m_charWidthAdjDelta
ãã\ o
)
ãão p
;
ããp q
if
åå 
(
åå  
!
åå  !
characterInfos
åå! /
[
åå/ 0
i
åå0 1
]
åå1 2
.
åå2 3&
isUsingAlternateTypeface
åå3 K
&&
ååL N
(
ååO P
characterInfos
ååP ^
[
åå^ _
i
åå_ `
]
åå` a
.
ååa b
style
ååb g
&
ååh i

FontStyles
ååj t
.
ååt u
Bold
ååu y
)
ååy z
==
åå{ }

FontStylesåå~ à
.ååà â
Boldååâ ç
)ååç é
xScaleååè ï
*=ååñ ò
-ååô ö
$numååö õ
;ååõ ú
float
ïï !
x0
ïï" $
=
ïï% &
characterInfos
ïï' 5
[
ïï5 6
i
ïï6 7
]
ïï7 8
.
ïï8 9
	vertex_BL
ïï9 B
.
ïïB C
uv2
ïïC F
.
ïïF G
x
ïïG H
;
ïïH I
float
ññ !
y0
ññ" $
=
ññ% &
characterInfos
ññ' 5
[
ññ5 6
i
ññ6 7
]
ññ7 8
.
ññ8 9
	vertex_BL
ññ9 B
.
ññB C
uv2
ññC F
.
ññF G
y
ññG H
;
ññH I
float
óó !
x1
óó" $
=
óó% &
characterInfos
óó' 5
[
óó5 6
i
óó6 7
]
óó7 8
.
óó8 9
	vertex_TR
óó9 B
.
óóB C
uv2
óóC F
.
óóF G
x
óóG H
;
óóH I
float
òò !
y1
òò" $
=
òò% &
characterInfos
òò' 5
[
òò5 6
i
òò6 7
]
òò7 8
.
òò8 9
	vertex_TR
òò9 B
.
òòB C
uv2
òòC F
.
òòF G
y
òòG H
;
òòH I
float
öö !
dx
öö" $
=
öö% &
(
öö' (
int
öö( +
)
öö+ ,
x0
öö, .
;
öö. /
float
õõ !
dy
õõ" $
=
õõ% &
(
õõ' (
int
õõ( +
)
õõ+ ,
y0
õõ, .
;
õõ. /
x0
ùù 
=
ùù  
x0
ùù! #
-
ùù$ %
dx
ùù& (
;
ùù( )
x1
ûû 
=
ûû  
x1
ûû! #
-
ûû$ %
dx
ûû& (
;
ûû( )
y0
üü 
=
üü  
y0
üü! #
-
üü$ %
dy
üü& (
;
üü( )
y1
†† 
=
††  
y1
††! #
-
††$ %
dy
††& (
;
††( )
characterInfos
££ *
[
££* +
i
££+ ,
]
££, -
.
££- .
	vertex_BL
££. 7
.
££7 8
uv2
££8 ;
.
££; <
x
££< =
=
££> ?
PackUV
££@ F
(
££F G
x0
££G I
,
££I J
y0
££K M
)
££M N
;
££N O
characterInfos
££P ^
[
££^ _
i
££_ `
]
££` a
.
££a b
	vertex_BL
££b k
.
££k l
uv2
££l o
.
££o p
y
££p q
=
££r s
xScale
££t z
;
££z {
characterInfos
§§ *
[
§§* +
i
§§+ ,
]
§§, -
.
§§- .
	vertex_TL
§§. 7
.
§§7 8
uv2
§§8 ;
.
§§; <
x
§§< =
=
§§> ?
PackUV
§§@ F
(
§§F G
x0
§§G I
,
§§I J
y1
§§K M
)
§§M N
;
§§N O
characterInfos
§§P ^
[
§§^ _
i
§§_ `
]
§§` a
.
§§a b
	vertex_TL
§§b k
.
§§k l
uv2
§§l o
.
§§o p
y
§§p q
=
§§r s
xScale
§§t z
;
§§z {
characterInfos
•• *
[
••* +
i
••+ ,
]
••, -
.
••- .
	vertex_TR
••. 7
.
••7 8
uv2
••8 ;
.
••; <
x
••< =
=
••> ?
PackUV
••@ F
(
••F G
x1
••G I
,
••I J
y1
••K M
)
••M N
;
••N O
characterInfos
••P ^
[
••^ _
i
••_ `
]
••` a
.
••a b
	vertex_TR
••b k
.
••k l
uv2
••l o
.
••o p
y
••p q
=
••r s
xScale
••t z
;
••z {
characterInfos
¶¶ *
[
¶¶* +
i
¶¶+ ,
]
¶¶, -
.
¶¶- .
	vertex_BR
¶¶. 7
.
¶¶7 8
uv2
¶¶8 ;
.
¶¶; <
x
¶¶< =
=
¶¶> ?
PackUV
¶¶@ F
(
¶¶F G
x1
¶¶G I
,
¶¶I J
y0
¶¶K M
)
¶¶M N
;
¶¶N O
characterInfos
¶¶P ^
[
¶¶^ _
i
¶¶_ `
]
¶¶` a
.
¶¶a b
	vertex_BR
¶¶b k
.
¶¶k l
uv2
¶¶l o
.
¶¶o p
y
¶¶p q
=
¶¶r s
xScale
¶¶t z
;
¶¶z {
break
®® !
;
®®! "
case
´´ !
TMP_TextElementType
´´ 0
.
´´0 1
Sprite
´´1 7
:
´´7 8
break
≠≠ !
;
≠≠! "
}
ÆÆ 
if
≤≤ 
(
≤≤ 
i
≤≤ 
<
≤≤ $
m_maxVisibleCharacters
≤≤ 2
&&
≤≤3 5
	wordCount
≤≤6 ?
<
≤≤@ A
m_maxVisibleWords
≤≤B S
&&
≤≤T V
currentLine
≤≤W b
<
≤≤c d
m_maxVisibleLines
≤≤e v
&&
≤≤w y
m_overflowMode≤≤z à
!=≤≤â ã!
TextOverflowModes≤≤å ù
.≤≤ù û
Page≤≤û ¢
)≤≤¢ £
{
≥≥ 
characterInfos
¥¥ &
[
¥¥& '
i
¥¥' (
]
¥¥( )
.
¥¥) *
	vertex_BL
¥¥* 3
.
¥¥3 4
position
¥¥4 <
+=
¥¥= ?
offset
¥¥@ F
;
¥¥F G
characterInfos
µµ &
[
µµ& '
i
µµ' (
]
µµ( )
.
µµ) *
	vertex_TL
µµ* 3
.
µµ3 4
position
µµ4 <
+=
µµ= ?
offset
µµ@ F
;
µµF G
characterInfos
∂∂ &
[
∂∂& '
i
∂∂' (
]
∂∂( )
.
∂∂) *
	vertex_TR
∂∂* 3
.
∂∂3 4
position
∂∂4 <
+=
∂∂= ?
offset
∂∂@ F
;
∂∂F G
characterInfos
∑∑ &
[
∑∑& '
i
∑∑' (
]
∑∑( )
.
∑∑) *
	vertex_BR
∑∑* 3
.
∑∑3 4
position
∑∑4 <
+=
∑∑= ?
offset
∑∑@ F
;
∑∑F G
}
∏∏ 
else
ππ 
if
ππ 
(
ππ 
i
ππ 
<
ππ  $
m_maxVisibleCharacters
ππ! 7
&&
ππ8 :
	wordCount
ππ; D
<
ππE F
m_maxVisibleWords
ππG X
&&
ππY [
currentLine
ππ\ g
<
ππh i
m_maxVisibleLines
ππj {
&&
ππ| ~
m_overflowModeππ ç
==ππé ê!
TextOverflowModesππë ¢
.ππ¢ £
Pageππ£ ß
&&ππ® ™
characterInfosππ´ π
[πππ ∫
iππ∫ ª
]ππª º
.ππº Ω

pageNumberππΩ «
==ππ»  
pageToDisplayππÀ ÿ
)ππÿ Ÿ
{
∫∫ 
characterInfos
ªª &
[
ªª& '
i
ªª' (
]
ªª( )
.
ªª) *
	vertex_BL
ªª* 3
.
ªª3 4
position
ªª4 <
+=
ªª= ?
offset
ªª@ F
;
ªªF G
characterInfos
ºº &
[
ºº& '
i
ºº' (
]
ºº( )
.
ºº) *
	vertex_TL
ºº* 3
.
ºº3 4
position
ºº4 <
+=
ºº= ?
offset
ºº@ F
;
ººF G
characterInfos
ΩΩ &
[
ΩΩ& '
i
ΩΩ' (
]
ΩΩ( )
.
ΩΩ) *
	vertex_TR
ΩΩ* 3
.
ΩΩ3 4
position
ΩΩ4 <
+=
ΩΩ= ?
offset
ΩΩ@ F
;
ΩΩF G
characterInfos
ææ &
[
ææ& '
i
ææ' (
]
ææ( )
.
ææ) *
	vertex_BR
ææ* 3
.
ææ3 4
position
ææ4 <
+=
ææ= ?
offset
ææ@ F
;
ææF G
}
øø 
else
¿¿ 
{
¡¡ 
characterInfos
¬¬ &
[
¬¬& '
i
¬¬' (
]
¬¬( )
.
¬¬) *
	vertex_BL
¬¬* 3
.
¬¬3 4
position
¬¬4 <
=
¬¬= >
Vector3
¬¬? F
.
¬¬F G
zero
¬¬G K
;
¬¬K L
characterInfos
√√ &
[
√√& '
i
√√' (
]
√√( )
.
√√) *
	vertex_TL
√√* 3
.
√√3 4
position
√√4 <
=
√√= >
Vector3
√√? F
.
√√F G
zero
√√G K
;
√√K L
characterInfos
ƒƒ &
[
ƒƒ& '
i
ƒƒ' (
]
ƒƒ( )
.
ƒƒ) *
	vertex_TR
ƒƒ* 3
.
ƒƒ3 4
position
ƒƒ4 <
=
ƒƒ= >
Vector3
ƒƒ? F
.
ƒƒF G
zero
ƒƒG K
;
ƒƒK L
characterInfos
≈≈ &
[
≈≈& '
i
≈≈' (
]
≈≈( )
.
≈≈) *
	vertex_BR
≈≈* 3
.
≈≈3 4
position
≈≈4 <
=
≈≈= >
Vector3
≈≈? F
.
≈≈F G
zero
≈≈G K
;
≈≈K L
characterInfos
∆∆ &
[
∆∆& '
i
∆∆' (
]
∆∆( )
.
∆∆) *
	isVisible
∆∆* 3
=
∆∆4 5
false
∆∆6 ;
;
∆∆; <
}
«« 
if
ÃÃ 
(
ÃÃ 
elementType
ÃÃ #
==
ÃÃ$ &!
TMP_TextElementType
ÃÃ' :
.
ÃÃ: ;
	Character
ÃÃ; D
)
ÃÃD E
{
ÕÕ (
FillCharacterVertexBuffers
ŒŒ 2
(
ŒŒ2 3
i
ŒŒ3 4
,
ŒŒ4 5
vert_index_X4
ŒŒ6 C
,
ŒŒC D 
m_isVolumetricText
ŒŒE W
)
ŒŒW X
;
ŒŒX Y
}
œœ 
else
–– 
if
–– 
(
–– 
elementType
–– (
==
––) +!
TMP_TextElementType
––, ?
.
––? @
Sprite
––@ F
)
––F G
{
—— %
FillSpriteVertexBuffers
““ /
(
““/ 0
i
““0 1
,
““1 2
sprite_index_X4
““3 B
)
““B C
;
““C D
}
”” 
}
‘‘ 

m_textInfo
ÿÿ 
.
ÿÿ 
characterInfo
ÿÿ (
[
ÿÿ( )
i
ÿÿ) *
]
ÿÿ* +
.
ÿÿ+ ,

bottomLeft
ÿÿ, 6
+=
ÿÿ7 9
offset
ÿÿ: @
;
ÿÿ@ A

m_textInfo
ŸŸ 
.
ŸŸ 
characterInfo
ŸŸ (
[
ŸŸ( )
i
ŸŸ) *
]
ŸŸ* +
.
ŸŸ+ ,
topLeft
ŸŸ, 3
+=
ŸŸ4 6
offset
ŸŸ7 =
;
ŸŸ= >

m_textInfo
⁄⁄ 
.
⁄⁄ 
characterInfo
⁄⁄ (
[
⁄⁄( )
i
⁄⁄) *
]
⁄⁄* +
.
⁄⁄+ ,
topRight
⁄⁄, 4
+=
⁄⁄5 7
offset
⁄⁄8 >
;
⁄⁄> ?

m_textInfo
€€ 
.
€€ 
characterInfo
€€ (
[
€€( )
i
€€) *
]
€€* +
.
€€+ ,
bottomRight
€€, 7
+=
€€8 :
offset
€€; A
;
€€A B

m_textInfo
›› 
.
›› 
characterInfo
›› (
[
››( )
i
››) *
]
››* +
.
››+ ,
origin
››, 2
+=
››3 5
offset
››6 <
.
››< =
x
››= >
;
››> ?

m_textInfo
ﬁﬁ 
.
ﬁﬁ 
characterInfo
ﬁﬁ (
[
ﬁﬁ( )
i
ﬁﬁ) *
]
ﬁﬁ* +
.
ﬁﬁ+ ,
xAdvance
ﬁﬁ, 4
+=
ﬁﬁ5 7
offset
ﬁﬁ8 >
.
ﬁﬁ> ?
x
ﬁﬁ? @
;
ﬁﬁ@ A

m_textInfo
‡‡ 
.
‡‡ 
characterInfo
‡‡ (
[
‡‡( )
i
‡‡) *
]
‡‡* +
.
‡‡+ ,
ascender
‡‡, 4
+=
‡‡5 7
offset
‡‡8 >
.
‡‡> ?
y
‡‡? @
;
‡‡@ A

m_textInfo
·· 
.
·· 
characterInfo
·· (
[
··( )
i
··) *
]
··* +
.
··+ ,
	descender
··, 5
+=
··6 8
offset
··9 ?
.
··? @
y
··@ A
;
··A B

m_textInfo
‚‚ 
.
‚‚ 
characterInfo
‚‚ (
[
‚‚( )
i
‚‚) *
]
‚‚* +
.
‚‚+ ,
baseLine
‚‚, 4
+=
‚‚5 7
offset
‚‚8 >
.
‚‚> ?
y
‚‚? @
;
‚‚@ A
if
ÂÂ 
(
ÂÂ  
isCharacterVisible
ÂÂ &
)
ÂÂ& '
{
ÊÊ 
}
ÈÈ 
if
ÌÌ 
(
ÌÌ 
currentLine
ÌÌ 
!=
ÌÌ  "
lastLine
ÌÌ# +
||
ÌÌ, .
i
ÌÌ/ 0
==
ÌÌ1 3
m_characterCount
ÌÌ4 D
-
ÌÌE F
$num
ÌÌG H
)
ÌÌH I
{
ÓÓ 
if
 
(
 
currentLine
 #
!=
$ &
lastLine
' /
)
/ 0
{
ÒÒ 

m_textInfo
ÚÚ "
.
ÚÚ" #
lineInfo
ÚÚ# +
[
ÚÚ+ ,
lastLine
ÚÚ, 4
]
ÚÚ4 5
.
ÚÚ5 6
baseline
ÚÚ6 >
+=
ÚÚ? A
offset
ÚÚB H
.
ÚÚH I
y
ÚÚI J
;
ÚÚJ K

m_textInfo
ÛÛ "
.
ÛÛ" #
lineInfo
ÛÛ# +
[
ÛÛ+ ,
lastLine
ÛÛ, 4
]
ÛÛ4 5
.
ÛÛ5 6
ascender
ÛÛ6 >
+=
ÛÛ? A
offset
ÛÛB H
.
ÛÛH I
y
ÛÛI J
;
ÛÛJ K

m_textInfo
ÙÙ "
.
ÙÙ" #
lineInfo
ÙÙ# +
[
ÙÙ+ ,
lastLine
ÙÙ, 4
]
ÙÙ4 5
.
ÙÙ5 6
	descender
ÙÙ6 ?
+=
ÙÙ@ B
offset
ÙÙC I
.
ÙÙI J
y
ÙÙJ K
;
ÙÙK L

m_textInfo
ˆˆ "
.
ˆˆ" #
lineInfo
ˆˆ# +
[
ˆˆ+ ,
lastLine
ˆˆ, 4
]
ˆˆ4 5
.
ˆˆ5 6

maxAdvance
ˆˆ6 @
+=
ˆˆA C
offset
ˆˆD J
.
ˆˆJ K
x
ˆˆK L
;
ˆˆL M

m_textInfo
¯¯ "
.
¯¯" #
lineInfo
¯¯# +
[
¯¯+ ,
lastLine
¯¯, 4
]
¯¯4 5
.
¯¯5 6
lineExtents
¯¯6 A
.
¯¯A B
min
¯¯B E
=
¯¯F G
new
¯¯H K
Vector2
¯¯L S
(
¯¯S T

m_textInfo
¯¯T ^
.
¯¯^ _
characterInfo
¯¯_ l
[
¯¯l m

m_textInfo
¯¯m w
.
¯¯w x
lineInfo¯¯x Ä
[¯¯Ä Å
lastLine¯¯Å â
]¯¯â ä
.¯¯ä ã#
firstCharacterIndex¯¯ã û
]¯¯û ü
.¯¯ü †

bottomLeft¯¯† ™
.¯¯™ ´
x¯¯´ ¨
,¯¯¨ ≠

m_textInfo¯¯Æ ∏
.¯¯∏ π
lineInfo¯¯π ¡
[¯¯¡ ¬
lastLine¯¯¬  
]¯¯  À
.¯¯À Ã
	descender¯¯Ã ’
)¯¯’ ÷
;¯¯÷ ◊

m_textInfo
˘˘ "
.
˘˘" #
lineInfo
˘˘# +
[
˘˘+ ,
lastLine
˘˘, 4
]
˘˘4 5
.
˘˘5 6
lineExtents
˘˘6 A
.
˘˘A B
max
˘˘B E
=
˘˘F G
new
˘˘H K
Vector2
˘˘L S
(
˘˘S T

m_textInfo
˘˘T ^
.
˘˘^ _
characterInfo
˘˘_ l
[
˘˘l m

m_textInfo
˘˘m w
.
˘˘w x
lineInfo˘˘x Ä
[˘˘Ä Å
lastLine˘˘Å â
]˘˘â ä
.˘˘ä ã)
lastVisibleCharacterIndex˘˘ã §
]˘˘§ •
.˘˘• ¶
topRight˘˘¶ Æ
.˘˘Æ Ø
x˘˘Ø ∞
,˘˘∞ ±

m_textInfo˘˘≤ º
.˘˘º Ω
lineInfo˘˘Ω ≈
[˘˘≈ ∆
lastLine˘˘∆ Œ
]˘˘Œ œ
.˘˘œ –
ascender˘˘– ÿ
)˘˘ÿ Ÿ
;˘˘Ÿ ⁄
}
˙˙ 
if
˝˝ 
(
˝˝ 
i
˝˝ 
==
˝˝ 
m_characterCount
˝˝ -
-
˝˝. /
$num
˝˝0 1
)
˝˝1 2
{
˛˛ 

m_textInfo
ˇˇ "
.
ˇˇ" #
lineInfo
ˇˇ# +
[
ˇˇ+ ,
currentLine
ˇˇ, 7
]
ˇˇ7 8
.
ˇˇ8 9
baseline
ˇˇ9 A
+=
ˇˇB D
offset
ˇˇE K
.
ˇˇK L
y
ˇˇL M
;
ˇˇM N

m_textInfo
ÄÄ "
.
ÄÄ" #
lineInfo
ÄÄ# +
[
ÄÄ+ ,
currentLine
ÄÄ, 7
]
ÄÄ7 8
.
ÄÄ8 9
ascender
ÄÄ9 A
+=
ÄÄB D
offset
ÄÄE K
.
ÄÄK L
y
ÄÄL M
;
ÄÄM N

m_textInfo
ÅÅ "
.
ÅÅ" #
lineInfo
ÅÅ# +
[
ÅÅ+ ,
currentLine
ÅÅ, 7
]
ÅÅ7 8
.
ÅÅ8 9
	descender
ÅÅ9 B
+=
ÅÅC E
offset
ÅÅF L
.
ÅÅL M
y
ÅÅM N
;
ÅÅN O

m_textInfo
ÉÉ "
.
ÉÉ" #
lineInfo
ÉÉ# +
[
ÉÉ+ ,
currentLine
ÉÉ, 7
]
ÉÉ7 8
.
ÉÉ8 9

maxAdvance
ÉÉ9 C
+=
ÉÉD F
offset
ÉÉG M
.
ÉÉM N
x
ÉÉN O
;
ÉÉO P

m_textInfo
ÖÖ "
.
ÖÖ" #
lineInfo
ÖÖ# +
[
ÖÖ+ ,
currentLine
ÖÖ, 7
]
ÖÖ7 8
.
ÖÖ8 9
lineExtents
ÖÖ9 D
.
ÖÖD E
min
ÖÖE H
=
ÖÖI J
new
ÖÖK N
Vector2
ÖÖO V
(
ÖÖV W

m_textInfo
ÖÖW a
.
ÖÖa b
characterInfo
ÖÖb o
[
ÖÖo p

m_textInfo
ÖÖp z
.
ÖÖz {
lineInfoÖÖ{ É
[ÖÖÉ Ñ
currentLineÖÖÑ è
]ÖÖè ê
.ÖÖê ë#
firstCharacterIndexÖÖë §
]ÖÖ§ •
.ÖÖ• ¶

bottomLeftÖÖ¶ ∞
.ÖÖ∞ ±
xÖÖ± ≤
,ÖÖ≤ ≥

m_textInfoÖÖ¥ æ
.ÖÖæ ø
lineInfoÖÖø «
[ÖÖ« »
currentLineÖÖ» ”
]ÖÖ” ‘
.ÖÖ‘ ’
	descenderÖÖ’ ﬁ
)ÖÖﬁ ﬂ
;ÖÖﬂ ‡

m_textInfo
ÜÜ "
.
ÜÜ" #
lineInfo
ÜÜ# +
[
ÜÜ+ ,
currentLine
ÜÜ, 7
]
ÜÜ7 8
.
ÜÜ8 9
lineExtents
ÜÜ9 D
.
ÜÜD E
max
ÜÜE H
=
ÜÜI J
new
ÜÜK N
Vector2
ÜÜO V
(
ÜÜV W

m_textInfo
ÜÜW a
.
ÜÜa b
characterInfo
ÜÜb o
[
ÜÜo p

m_textInfo
ÜÜp z
.
ÜÜz {
lineInfoÜÜ{ É
[ÜÜÉ Ñ
currentLineÜÜÑ è
]ÜÜè ê
.ÜÜê ë)
lastVisibleCharacterIndexÜÜë ™
]ÜÜ™ ´
.ÜÜ´ ¨
topRightÜÜ¨ ¥
.ÜÜ¥ µ
xÜÜµ ∂
,ÜÜ∂ ∑

m_textInfoÜÜ∏ ¬
.ÜÜ¬ √
lineInfoÜÜ√ À
[ÜÜÀ Ã
currentLineÜÜÃ ◊
]ÜÜ◊ ÿ
.ÜÜÿ Ÿ
ascenderÜÜŸ ·
)ÜÜ· ‚
;ÜÜ‚ „
}
áá 
}
àà 
if
éé 
(
éé 
char
éé 
.
éé 
IsLetterOrDigit
éé (
(
éé( )
unicode
éé) 0
)
éé0 1
||
éé2 4
unicode
éé5 <
==
éé= ?
$num
éé@ D
||
ééE G
unicode
ééH O
==
ééP R
$num
ééS W
||
ééX Z
unicode
éé[ b
==
ééc e
$num
ééf l
||
éém o
unicode
éép w
==
ééx z
$numéé{ Å
)ééÅ Ç
{
èè 
if
êê 
(
êê 
isStartOfWord
êê %
==
êê& (
false
êê) .
)
êê. /
{
ëë 
isStartOfWord
íí %
=
íí& '
true
íí( ,
;
íí, -
wordFirstChar
ìì %
=
ìì& '
i
ìì( )
;
ìì) *
}
îî 
if
óó 
(
óó 
isStartOfWord
óó %
&&
óó& (
i
óó) *
==
óó+ -
m_characterCount
óó. >
-
óó? @
$num
óóA B
)
óóB C
{
òò 
int
ôô 
size
ôô  
=
ôô! "

m_textInfo
ôô# -
.
ôô- .
wordInfo
ôô. 6
.
ôô6 7
Length
ôô7 =
;
ôô= >
int
öö 
index
öö !
=
öö" #

m_textInfo
öö$ .
.
öö. /
	wordCount
öö/ 8
;
öö8 9
if
úú 
(
úú 

m_textInfo
úú &
.
úú& '
	wordCount
úú' 0
+
úú1 2
$num
úú3 4
>
úú5 6
size
úú7 ;
)
úú; <
TMP_TextInfo
ùù (
.
ùù( )
Resize
ùù) /
(
ùù/ 0
ref
ùù0 3

m_textInfo
ùù4 >
.
ùù> ?
wordInfo
ùù? G
,
ùùG H
size
ùùI M
+
ùùN O
$num
ùùP Q
)
ùùQ R
;
ùùR S
wordLastChar
üü $
=
üü% &
i
üü' (
;
üü( )

m_textInfo
°° "
.
°°" #
wordInfo
°°# +
[
°°+ ,
index
°°, 1
]
°°1 2
.
°°2 3!
firstCharacterIndex
°°3 F
=
°°G H
wordFirstChar
°°I V
;
°°V W

m_textInfo
¢¢ "
.
¢¢" #
wordInfo
¢¢# +
[
¢¢+ ,
index
¢¢, 1
]
¢¢1 2
.
¢¢2 3 
lastCharacterIndex
¢¢3 E
=
¢¢F G
wordLastChar
¢¢H T
;
¢¢T U

m_textInfo
££ "
.
££" #
wordInfo
££# +
[
££+ ,
index
££, 1
]
££1 2
.
££2 3
characterCount
££3 A
=
££B C
wordLastChar
££D P
-
££Q R
wordFirstChar
££S `
+
££a b
$num
££c d
;
££d e

m_textInfo
§§ "
.
§§" #
wordInfo
§§# +
[
§§+ ,
index
§§, 1
]
§§1 2
.
§§2 3
textComponent
§§3 @
=
§§A B
this
§§C G
;
§§G H
	wordCount
¶¶ !
+=
¶¶" $
$num
¶¶% &
;
¶¶& '

m_textInfo
ßß "
.
ßß" #
	wordCount
ßß# ,
+=
ßß- /
$num
ßß0 1
;
ßß1 2

m_textInfo
®® "
.
®®" #
lineInfo
®®# +
[
®®+ ,
currentLine
®®, 7
]
®®7 8
.
®®8 9
	wordCount
®®9 B
+=
®®C E
$num
®®F G
;
®®G H
}
©© 
}
™™ 
else
´´ 
if
´´ 
(
´´ 
isStartOfWord
´´ &
||
´´' )
i
´´* +
==
´´, .
$num
´´/ 0
&&
´´1 3
(
´´4 5
!
´´5 6
char
´´6 :
.
´´: ;
IsPunctuation
´´; H
(
´´H I
unicode
´´I P
)
´´P Q
||
´´R T
char
´´U Y
.
´´Y Z
IsWhiteSpace
´´Z f
(
´´f g
unicode
´´g n
)
´´n o
||
´´p r
unicode
´´s z
==
´´{ }
$num´´~ Ñ
||´´Ö á
i´´à â
==´´ä å 
m_characterCount´´ç ù
-´´û ü
$num´´† °
)´´° ¢
)´´¢ £
{
¨¨ 
if
≠≠ 
(
≠≠ 
i
≠≠ 
>
≠≠ 
$num
≠≠ 
&&
≠≠  
i
≠≠! "
<
≠≠# $
characterInfos
≠≠% 3
.
≠≠3 4
Length
≠≠4 :
-
≠≠; <
$num
≠≠= >
&&
≠≠? A
i
≠≠B C
<
≠≠D E
m_characterCount
≠≠F V
&&
≠≠W Y
(
≠≠Z [
unicode
≠≠[ b
==
≠≠c e
$num
≠≠f h
||
≠≠i k
unicode
≠≠l s
==
≠≠t v
$num
≠≠w {
)
≠≠{ |
&&
≠≠} 
char≠≠Ä Ñ
.≠≠Ñ Ö
IsLetterOrDigit≠≠Ö î
(≠≠î ï
characterInfos≠≠ï £
[≠≠£ §
i≠≠§ •
-≠≠¶ ß
$num≠≠® ©
]≠≠© ™
.≠≠™ ´
	character≠≠´ ¥
)≠≠¥ µ
&&≠≠∂ ∏
char≠≠π Ω
.≠≠Ω æ
IsLetterOrDigit≠≠æ Õ
(≠≠Õ Œ
characterInfos≠≠Œ ‹
[≠≠‹ ›
i≠≠› ﬁ
+≠≠ﬂ ‡
$num≠≠· ‚
]≠≠‚ „
.≠≠„ ‰
	character≠≠‰ Ì
)≠≠Ì Ó
)≠≠Ó Ô
{
ÆÆ 
}
∞∞ 
else
±± 
{
≤≤ 
wordLastChar
≥≥ $
=
≥≥% &
i
≥≥' (
==
≥≥) +
m_characterCount
≥≥, <
-
≥≥= >
$num
≥≥? @
&&
≥≥A C
char
≥≥D H
.
≥≥H I
IsLetterOrDigit
≥≥I X
(
≥≥X Y
unicode
≥≥Y `
)
≥≥` a
?
≥≥b c
i
≥≥d e
:
≥≥f g
i
≥≥h i
-
≥≥j k
$num
≥≥l m
;
≥≥m n
isStartOfWord
¥¥ %
=
¥¥& '
false
¥¥( -
;
¥¥- .
int
∂∂ 
size
∂∂  
=
∂∂! "

m_textInfo
∂∂# -
.
∂∂- .
wordInfo
∂∂. 6
.
∂∂6 7
Length
∂∂7 =
;
∂∂= >
int
∑∑ 
index
∑∑ !
=
∑∑" #

m_textInfo
∑∑$ .
.
∑∑. /
	wordCount
∑∑/ 8
;
∑∑8 9
if
ππ 
(
ππ 

m_textInfo
ππ &
.
ππ& '
	wordCount
ππ' 0
+
ππ1 2
$num
ππ3 4
>
ππ5 6
size
ππ7 ;
)
ππ; <
TMP_TextInfo
∫∫ (
.
∫∫( )
Resize
∫∫) /
(
∫∫/ 0
ref
∫∫0 3

m_textInfo
∫∫4 >
.
∫∫> ?
wordInfo
∫∫? G
,
∫∫G H
size
∫∫I M
+
∫∫N O
$num
∫∫P Q
)
∫∫Q R
;
∫∫R S

m_textInfo
ºº "
.
ºº" #
wordInfo
ºº# +
[
ºº+ ,
index
ºº, 1
]
ºº1 2
.
ºº2 3!
firstCharacterIndex
ºº3 F
=
ººG H
wordFirstChar
ººI V
;
ººV W

m_textInfo
ΩΩ "
.
ΩΩ" #
wordInfo
ΩΩ# +
[
ΩΩ+ ,
index
ΩΩ, 1
]
ΩΩ1 2
.
ΩΩ2 3 
lastCharacterIndex
ΩΩ3 E
=
ΩΩF G
wordLastChar
ΩΩH T
;
ΩΩT U

m_textInfo
ææ "
.
ææ" #
wordInfo
ææ# +
[
ææ+ ,
index
ææ, 1
]
ææ1 2
.
ææ2 3
characterCount
ææ3 A
=
ææB C
wordLastChar
ææD P
-
ææQ R
wordFirstChar
ææS `
+
ææa b
$num
ææc d
;
ææd e

m_textInfo
øø "
.
øø" #
wordInfo
øø# +
[
øø+ ,
index
øø, 1
]
øø1 2
.
øø2 3
textComponent
øø3 @
=
øøA B
this
øøC G
;
øøG H
	wordCount
¡¡ !
+=
¡¡" $
$num
¡¡% &
;
¡¡& '

m_textInfo
¬¬ "
.
¬¬" #
	wordCount
¬¬# ,
+=
¬¬- /
$num
¬¬0 1
;
¬¬1 2

m_textInfo
√√ "
.
√√" #
lineInfo
√√# +
[
√√+ ,
currentLine
√√, 7
]
√√7 8
.
√√8 9
	wordCount
√√9 B
+=
√√C E
$num
√√F G
;
√√G H
}
ƒƒ 
}
≈≈ 
bool
ÃÃ 
isUnderline
ÃÃ  
=
ÃÃ! "
(
ÃÃ# $

m_textInfo
ÃÃ$ .
.
ÃÃ. /
characterInfo
ÃÃ/ <
[
ÃÃ< =
i
ÃÃ= >
]
ÃÃ> ?
.
ÃÃ? @
style
ÃÃ@ E
&
ÃÃF G

FontStyles
ÃÃH R
.
ÃÃR S
	Underline
ÃÃS \
)
ÃÃ\ ]
==
ÃÃ^ `

FontStyles
ÃÃa k
.
ÃÃk l
	Underline
ÃÃl u
;
ÃÃu v
if
ÕÕ 
(
ÕÕ 
isUnderline
ÕÕ 
)
ÕÕ  
{
ŒŒ 
bool
œœ  
isUnderlineVisible
œœ +
=
œœ, -
true
œœ. 2
;
œœ2 3
int
–– 
currentPage
–– #
=
––$ %

m_textInfo
––& 0
.
––0 1
characterInfo
––1 >
[
––> ?
i
––? @
]
––@ A
.
––A B

pageNumber
––B L
;
––L M

m_textInfo
—— 
.
—— 
characterInfo
—— ,
[
——, -
i
——- .
]
——. /
.
——/ 0"
underlineVertexIndex
——0 D
=
——E F
last_vert_index
——G V
;
——V W
if
”” 
(
”” 
i
”” 
>
”” $
m_maxVisibleCharacters
”” 2
||
””3 5
currentLine
””6 A
>
””B C
m_maxVisibleLines
””D U
||
””V X
(
””Y Z
m_overflowMode
””Z h
==
””i k
TextOverflowModes
””l }
.
””} ~
Page””~ Ç
&&””É Ö
currentPage””Ü ë
+””í ì
$num””î ï
!=””ñ ò
m_pageToDisplay””ô ®
)””® ©
)””© ™ 
isUnderlineVisible
‘‘ *
=
‘‘+ ,
false
‘‘- 2
;
‘‘2 3
if
◊◊ 
(
◊◊ 
!
◊◊ 
char
◊◊ 
.
◊◊ 
IsWhiteSpace
◊◊ *
(
◊◊* +
unicode
◊◊+ 2
)
◊◊2 3
&&
◊◊4 6
unicode
◊◊7 >
!=
◊◊? A
$num
◊◊B H
)
◊◊H I
{
ÿÿ 
underlineMaxScale
ŸŸ )
=
ŸŸ* +
Mathf
ŸŸ, 1
.
ŸŸ1 2
Max
ŸŸ2 5
(
ŸŸ5 6
underlineMaxScale
ŸŸ6 G
,
ŸŸG H

m_textInfo
ŸŸI S
.
ŸŸS T
characterInfo
ŸŸT a
[
ŸŸa b
i
ŸŸb c
]
ŸŸc d
.
ŸŸd e
scale
ŸŸe j
)
ŸŸj k
;
ŸŸk l
	xScaleMax
⁄⁄ !
=
⁄⁄" #
Mathf
⁄⁄$ )
.
⁄⁄) *
Max
⁄⁄* -
(
⁄⁄- .
	xScaleMax
⁄⁄. 7
,
⁄⁄7 8
Mathf
⁄⁄9 >
.
⁄⁄> ?
Abs
⁄⁄? B
(
⁄⁄B C
xScale
⁄⁄C I
)
⁄⁄I J
)
⁄⁄J K
;
⁄⁄K L
underlineBaseLine
€€ )
=
€€* +
Mathf
€€, 1
.
€€1 2
Min
€€2 5
(
€€5 6
currentPage
€€6 A
==
€€B D
lastPage
€€E M
?
€€N O
underlineBaseLine
€€P a
:
€€b c"
k_LargePositiveFloat
€€d x
,
€€x y

m_textInfo€€z Ñ
.€€Ñ Ö
characterInfo€€Ö í
[€€í ì
i€€ì î
]€€î ï
.€€ï ñ
baseLine€€ñ û
+€€ü †
font€€° •
.€€• ¶

m_FaceInfo€€¶ ∞
.€€∞ ±
underlineOffset€€± ¿
*€€¡ ¬!
underlineMaxScale€€√ ‘
)€€‘ ’
;€€’ ÷
lastPage
‹‹  
=
‹‹! "
currentPage
‹‹# .
;
‹‹. /
}
›› 
if
ﬂﬂ 
(
ﬂﬂ 
beginUnderline
ﬂﬂ &
==
ﬂﬂ' )
false
ﬂﬂ* /
&&
ﬂﬂ0 2 
isUnderlineVisible
ﬂﬂ3 E
==
ﬂﬂF H
true
ﬂﬂI M
&&
ﬂﬂN P
i
ﬂﬂQ R
<=
ﬂﬂS U
lineInfo
ﬂﬂV ^
.
ﬂﬂ^ _'
lastVisibleCharacterIndex
ﬂﬂ_ x
&&
ﬂﬂy {
unicodeﬂﬂ| É
!=ﬂﬂÑ Ü
$numﬂﬂá â
&&ﬂﬂä å
unicodeﬂﬂç î
!=ﬂﬂï ó
$numﬂﬂò ö
&&ﬂﬂõ ù
unicodeﬂﬂû •
!=ﬂﬂ¶ ®
$numﬂﬂ© ´
)ﬂﬂ´ ¨
{
‡‡ 
if
·· 
(
·· 
i
·· 
==
··  
lineInfo
··! )
.
··) *'
lastVisibleCharacterIndex
··* C
&&
··D F
char
··G K
.
··K L
IsSeparator
··L W
(
··W X
unicode
··X _
)
··_ `
)
··` a
{
‚‚ 
}
‚‚ 
else
„„ 
{
‰‰ 
beginUnderline
ÂÂ *
=
ÂÂ+ ,
true
ÂÂ- 1
;
ÂÂ1 2!
underlineStartScale
ÊÊ /
=
ÊÊ0 1

m_textInfo
ÊÊ2 <
.
ÊÊ< =
characterInfo
ÊÊ= J
[
ÊÊJ K
i
ÊÊK L
]
ÊÊL M
.
ÊÊM N
scale
ÊÊN S
;
ÊÊS T
if
ÁÁ 
(
ÁÁ  
underlineMaxScale
ÁÁ  1
==
ÁÁ2 4
$num
ÁÁ5 6
)
ÁÁ6 7
{
ËË 
underlineMaxScale
ÈÈ  1
=
ÈÈ2 3!
underlineStartScale
ÈÈ4 G
;
ÈÈG H
	xScaleMax
ÍÍ  )
=
ÍÍ* +
xScale
ÍÍ, 2
;
ÍÍ2 3
}
ÎÎ 
underline_start
ÏÏ +
=
ÏÏ, -
new
ÏÏ. 1
Vector3
ÏÏ2 9
(
ÏÏ9 :

m_textInfo
ÏÏ: D
.
ÏÏD E
characterInfo
ÏÏE R
[
ÏÏR S
i
ÏÏS T
]
ÏÏT U
.
ÏÏU V

bottomLeft
ÏÏV `
.
ÏÏ` a
x
ÏÏa b
,
ÏÏb c
underlineBaseLine
ÏÏd u
,
ÏÏu v
$num
ÏÏw x
)
ÏÏx y
;
ÏÏy z
underlineColor
ÌÌ *
=
ÌÌ+ ,

m_textInfo
ÌÌ- 7
.
ÌÌ7 8
characterInfo
ÌÌ8 E
[
ÌÌE F
i
ÌÌF G
]
ÌÌG H
.
ÌÌH I
underlineColor
ÌÌI W
;
ÌÌW X
}
ÓÓ 
}
ÔÔ 
if
ÚÚ 
(
ÚÚ 
beginUnderline
ÚÚ &
&&
ÚÚ' )
m_characterCount
ÚÚ* :
==
ÚÚ; =
$num
ÚÚ> ?
)
ÚÚ? @
{
ÛÛ 
beginUnderline
ÙÙ &
=
ÙÙ' (
false
ÙÙ) .
;
ÙÙ. /
underline_end
ıı %
=
ıı& '
new
ıı( +
Vector3
ıı, 3
(
ıı3 4

m_textInfo
ıı4 >
.
ıı> ?
characterInfo
ıı? L
[
ııL M
i
ııM N
]
ııN O
.
ııO P
topRight
ııP X
.
ııX Y
x
ııY Z
,
ııZ [
underlineBaseLine
ıı\ m
,
ıım n
$num
ııo p
)
ııp q
;
ııq r
underlineEndScale
ˆˆ )
=
ˆˆ* +

m_textInfo
ˆˆ, 6
.
ˆˆ6 7
characterInfo
ˆˆ7 D
[
ˆˆD E
i
ˆˆE F
]
ˆˆF G
.
ˆˆG H
scale
ˆˆH M
;
ˆˆM N
DrawUnderlineMesh
¯¯ )
(
¯¯) *
underline_start
¯¯* 9
,
¯¯9 :
underline_end
¯¯; H
,
¯¯H I
ref
¯¯J M
last_vert_index
¯¯N ]
,
¯¯] ^!
underlineStartScale
¯¯_ r
,
¯¯r s 
underlineEndScale¯¯t Ö
,¯¯Ö Ü!
underlineMaxScale¯¯á ò
,¯¯ò ô
	xScaleMax¯¯ö £
,¯¯£ §
underlineColor¯¯• ≥
)¯¯≥ ¥
;¯¯¥ µ
underlineMaxScale
˘˘ )
=
˘˘* +
$num
˘˘, -
;
˘˘- .
	xScaleMax
˙˙ !
=
˙˙" #
$num
˙˙$ %
;
˙˙% &
underlineBaseLine
˚˚ )
=
˚˚* +"
k_LargePositiveFloat
˚˚, @
;
˚˚@ A
}
¸¸ 
else
˝˝ 
if
˝˝ 
(
˝˝ 
beginUnderline
˝˝ +
&&
˝˝, .
(
˝˝/ 0
i
˝˝0 1
==
˝˝2 4
lineInfo
˝˝5 =
.
˝˝= > 
lastCharacterIndex
˝˝> P
||
˝˝Q S
i
˝˝T U
>=
˝˝V X
lineInfo
˝˝Y a
.
˝˝a b'
lastVisibleCharacterIndex
˝˝b {
)
˝˝{ |
)
˝˝| }
{
˛˛ 
if
ÄÄ 
(
ÄÄ 
char
ÄÄ  
.
ÄÄ  !
IsWhiteSpace
ÄÄ! -
(
ÄÄ- .
unicode
ÄÄ. 5
)
ÄÄ5 6
||
ÄÄ7 9
unicode
ÄÄ: A
==
ÄÄB D
$num
ÄÄE K
)
ÄÄK L
{
ÅÅ 
int
ÇÇ '
lastVisibleCharacterIndex
ÇÇ  9
=
ÇÇ: ;
lineInfo
ÇÇ< D
.
ÇÇD E'
lastVisibleCharacterIndex
ÇÇE ^
;
ÇÇ^ _
underline_end
ÉÉ )
=
ÉÉ* +
new
ÉÉ, /
Vector3
ÉÉ0 7
(
ÉÉ7 8

m_textInfo
ÉÉ8 B
.
ÉÉB C
characterInfo
ÉÉC P
[
ÉÉP Q'
lastVisibleCharacterIndex
ÉÉQ j
]
ÉÉj k
.
ÉÉk l
topRight
ÉÉl t
.
ÉÉt u
x
ÉÉu v
,
ÉÉv w 
underlineBaseLineÉÉx â
,ÉÉâ ä
$numÉÉã å
)ÉÉå ç
;ÉÉç é
underlineEndScale
ÑÑ -
=
ÑÑ. /

m_textInfo
ÑÑ0 :
.
ÑÑ: ;
characterInfo
ÑÑ; H
[
ÑÑH I'
lastVisibleCharacterIndex
ÑÑI b
]
ÑÑb c
.
ÑÑc d
scale
ÑÑd i
;
ÑÑi j
}
ÖÖ 
else
ÜÜ 
{
áá 
underline_end
àà )
=
àà* +
new
àà, /
Vector3
àà0 7
(
àà7 8

m_textInfo
àà8 B
.
ààB C
characterInfo
ààC P
[
ààP Q
i
ààQ R
]
ààR S
.
ààS T
topRight
ààT \
.
àà\ ]
x
àà] ^
,
àà^ _
underlineBaseLine
àà` q
,
ààq r
$num
ààs t
)
ààt u
;
ààu v
underlineEndScale
ââ -
=
ââ. /

m_textInfo
ââ0 :
.
ââ: ;
characterInfo
ââ; H
[
ââH I
i
ââI J
]
ââJ K
.
ââK L
scale
ââL Q
;
ââQ R
}
ää 
beginUnderline
åå &
=
åå' (
false
åå) .
;
åå. /
DrawUnderlineMesh
çç )
(
çç) *
underline_start
çç* 9
,
çç9 :
underline_end
çç; H
,
ççH I
ref
ççJ M
last_vert_index
ççN ]
,
çç] ^!
underlineStartScale
çç_ r
,
ççr s 
underlineEndScaleççt Ö
,ççÖ Ü!
underlineMaxScaleççá ò
,ççò ô
	xScaleMaxççö £
,çç£ §
underlineColorçç• ≥
)çç≥ ¥
;çç¥ µ
underlineMaxScale
éé )
=
éé* +
$num
éé, -
;
éé- .
	xScaleMax
èè !
=
èè" #
$num
èè$ %
;
èè% &
underlineBaseLine
êê )
=
êê* +"
k_LargePositiveFloat
êê, @
;
êê@ A
}
ëë 
else
íí 
if
íí 
(
íí 
beginUnderline
íí +
&&
íí, .
!
íí/ 0 
isUnderlineVisible
íí0 B
)
ííB C
{
ìì 
beginUnderline
îî &
=
îî' (
false
îî) .
;
îî. /
underline_end
ïï %
=
ïï& '
new
ïï( +
Vector3
ïï, 3
(
ïï3 4

m_textInfo
ïï4 >
.
ïï> ?
characterInfo
ïï? L
[
ïïL M
i
ïïM N
-
ïïO P
$num
ïïQ R
]
ïïR S
.
ïïS T
topRight
ïïT \
.
ïï\ ]
x
ïï] ^
,
ïï^ _
underlineBaseLine
ïï` q
,
ïïq r
$num
ïïs t
)
ïït u
;
ïïu v
underlineEndScale
ññ )
=
ññ* +

m_textInfo
ññ, 6
.
ññ6 7
characterInfo
ññ7 D
[
ññD E
i
ññE F
-
ññG H
$num
ññI J
]
ññJ K
.
ññK L
scale
ññL Q
;
ññQ R
DrawUnderlineMesh
òò )
(
òò) *
underline_start
òò* 9
,
òò9 :
underline_end
òò; H
,
òòH I
ref
òòJ M
last_vert_index
òòN ]
,
òò] ^!
underlineStartScale
òò_ r
,
òòr s 
underlineEndScaleòòt Ö
,òòÖ Ü!
underlineMaxScaleòòá ò
,òòò ô
	xScaleMaxòòö £
,òò£ §
underlineColoròò• ≥
)òò≥ ¥
;òò¥ µ
underlineMaxScale
ôô )
=
ôô* +
$num
ôô, -
;
ôô- .
	xScaleMax
öö !
=
öö" #
$num
öö$ %
;
öö% &
underlineBaseLine
õõ )
=
õõ* +"
k_LargePositiveFloat
õõ, @
;
õõ@ A
}
úú 
else
ùù 
if
ùù 
(
ùù 
beginUnderline
ùù +
&&
ùù, .
i
ùù/ 0
<
ùù1 2
m_characterCount
ùù3 C
-
ùùD E
$num
ùùF G
&&
ùùH J
!
ùùK L
underlineColor
ùùL Z
.
ùùZ [
Compare
ùù[ b
(
ùùb c

m_textInfo
ùùc m
.
ùùm n
characterInfo
ùùn {
[
ùù{ |
i
ùù| }
+
ùù~ 
$numùùÄ Å
]ùùÅ Ç
.ùùÇ É
underlineColorùùÉ ë
)ùùë í
)ùùí ì
{
ûû 
beginUnderline
†† &
=
††' (
false
††) .
;
††. /
underline_end
°° %
=
°°& '
new
°°( +
Vector3
°°, 3
(
°°3 4

m_textInfo
°°4 >
.
°°> ?
characterInfo
°°? L
[
°°L M
i
°°M N
]
°°N O
.
°°O P
topRight
°°P X
.
°°X Y
x
°°Y Z
,
°°Z [
underlineBaseLine
°°\ m
,
°°m n
$num
°°o p
)
°°p q
;
°°q r
underlineEndScale
¢¢ )
=
¢¢* +

m_textInfo
¢¢, 6
.
¢¢6 7
characterInfo
¢¢7 D
[
¢¢D E
i
¢¢E F
]
¢¢F G
.
¢¢G H
scale
¢¢H M
;
¢¢M N
DrawUnderlineMesh
§§ )
(
§§) *
underline_start
§§* 9
,
§§9 :
underline_end
§§; H
,
§§H I
ref
§§J M
last_vert_index
§§N ]
,
§§] ^!
underlineStartScale
§§_ r
,
§§r s 
underlineEndScale§§t Ö
,§§Ö Ü!
underlineMaxScale§§á ò
,§§ò ô
	xScaleMax§§ö £
,§§£ §
underlineColor§§• ≥
)§§≥ ¥
;§§¥ µ
underlineMaxScale
•• )
=
••* +
$num
••, -
;
••- .
	xScaleMax
¶¶ !
=
¶¶" #
$num
¶¶$ %
;
¶¶% &
underlineBaseLine
ßß )
=
ßß* +"
k_LargePositiveFloat
ßß, @
;
ßß@ A
}
®® 
}
©© 
else
™™ 
{
´´ 
if
≠≠ 
(
≠≠ 
beginUnderline
≠≠ &
==
≠≠' )
true
≠≠* .
)
≠≠. /
{
ÆÆ 
beginUnderline
ØØ &
=
ØØ' (
false
ØØ) .
;
ØØ. /
underline_end
∞∞ %
=
∞∞& '
new
∞∞( +
Vector3
∞∞, 3
(
∞∞3 4

m_textInfo
∞∞4 >
.
∞∞> ?
characterInfo
∞∞? L
[
∞∞L M
i
∞∞M N
-
∞∞O P
$num
∞∞Q R
]
∞∞R S
.
∞∞S T
topRight
∞∞T \
.
∞∞\ ]
x
∞∞] ^
,
∞∞^ _
underlineBaseLine
∞∞` q
,
∞∞q r
$num
∞∞s t
)
∞∞t u
;
∞∞u v
underlineEndScale
±± )
=
±±* +

m_textInfo
±±, 6
.
±±6 7
characterInfo
±±7 D
[
±±D E
i
±±E F
-
±±G H
$num
±±I J
]
±±J K
.
±±K L
scale
±±L Q
;
±±Q R
DrawUnderlineMesh
≥≥ )
(
≥≥) *
underline_start
≥≥* 9
,
≥≥9 :
underline_end
≥≥; H
,
≥≥H I
ref
≥≥J M
last_vert_index
≥≥N ]
,
≥≥] ^!
underlineStartScale
≥≥_ r
,
≥≥r s 
underlineEndScale≥≥t Ö
,≥≥Ö Ü!
underlineMaxScale≥≥á ò
,≥≥ò ô
	xScaleMax≥≥ö £
,≥≥£ §
underlineColor≥≥• ≥
)≥≥≥ ¥
;≥≥¥ µ
underlineMaxScale
¥¥ )
=
¥¥* +
$num
¥¥, -
;
¥¥- .
	xScaleMax
µµ !
=
µµ" #
$num
µµ$ %
;
µµ% &
underlineBaseLine
∂∂ )
=
∂∂* +"
k_LargePositiveFloat
∂∂, @
;
∂∂@ A
}
∑∑ 
}
∏∏ 
bool
øø 
isStrikethrough
øø $
=
øø% &
(
øø' (

m_textInfo
øø( 2
.
øø2 3
characterInfo
øø3 @
[
øø@ A
i
øøA B
]
øøB C
.
øøC D
style
øøD I
&
øøJ K

FontStyles
øøL V
.
øøV W
Strikethrough
øøW d
)
øød e
==
øøf h

FontStyles
øøi s
.
øøs t
Strikethroughøøt Å
;øøÅ Ç
float
¿¿ !
strikethroughOffset
¿¿ )
=
¿¿* +
currentFontAsset
¿¿, <
.
¿¿< =

m_FaceInfo
¿¿= G
.
¿¿G H!
strikethroughOffset
¿¿H [
;
¿¿[ \
if
¬¬ 
(
¬¬ 
isStrikethrough
¬¬ #
)
¬¬# $
{
√√ 
bool
ƒƒ $
isStrikeThroughVisible
ƒƒ /
=
ƒƒ0 1
true
ƒƒ2 6
;
ƒƒ6 7

m_textInfo
≈≈ 
.
≈≈ 
characterInfo
≈≈ ,
[
≈≈, -
i
≈≈- .
]
≈≈. /
.
≈≈/ 0&
strikethroughVertexIndex
≈≈0 H
=
≈≈I J
last_vert_index
≈≈K Z
;
≈≈Z [
if
«« 
(
«« 
i
«« 
>
«« $
m_maxVisibleCharacters
«« 2
||
««3 5
currentLine
««6 A
>
««B C
m_maxVisibleLines
««D U
||
««V X
(
««Y Z
m_overflowMode
««Z h
==
««i k
TextOverflowModes
««l }
.
««} ~
Page««~ Ç
&&««É Ö

m_textInfo««Ü ê
.««ê ë
characterInfo««ë û
[««û ü
i««ü †
]««† °
.««° ¢

pageNumber««¢ ¨
+««≠ Æ
$num««Ø ∞
!=««± ≥
m_pageToDisplay««¥ √
)««√ ƒ
)««ƒ ≈$
isStrikeThroughVisible
»» .
=
»»/ 0
false
»»1 6
;
»»6 7
if
   
(
    
beginStrikethrough
   *
==
  + -
false
  . 3
&&
  4 6$
isStrikeThroughVisible
  7 M
&&
  N P
i
  Q R
<=
  S U
lineInfo
  V ^
.
  ^ _'
lastVisibleCharacterIndex
  _ x
&&
  y {
unicode  | É
!=  Ñ Ü
$num  á â
&&  ä å
unicode  ç î
!=  ï ó
$num  ò ö
&&  õ ù
unicode  û •
!=  ¶ ®
$num  © ´
)  ´ ¨
{
ÀÀ 
if
ÃÃ 
(
ÃÃ 
i
ÃÃ 
==
ÃÃ  
lineInfo
ÃÃ! )
.
ÃÃ) *'
lastVisibleCharacterIndex
ÃÃ* C
&&
ÃÃD F
char
ÃÃG K
.
ÃÃK L
IsSeparator
ÃÃL W
(
ÃÃW X
unicode
ÃÃX _
)
ÃÃ_ `
)
ÃÃ` a
{
ÕÕ 
}
ÕÕ 
else
ŒŒ 
{
œœ  
beginStrikethrough
–– .
=
––/ 0
true
––1 5
;
––5 6$
strikethroughPointSize
—— 2
=
——3 4

m_textInfo
——5 ?
.
——? @
characterInfo
——@ M
[
——M N
i
——N O
]
——O P
.
——P Q
	pointSize
——Q Z
;
——Z [ 
strikethroughScale
““ .
=
““/ 0

m_textInfo
““1 ;
.
““; <
characterInfo
““< I
[
““I J
i
““J K
]
““K L
.
““L M
scale
““M R
;
““R S!
strikethrough_start
”” /
=
””0 1
new
””2 5
Vector3
””6 =
(
””= >

m_textInfo
””> H
.
””H I
characterInfo
””I V
[
””V W
i
””W X
]
””X Y
.
””Y Z

bottomLeft
””Z d
.
””d e
x
””e f
,
””f g

m_textInfo
””h r
.
””r s
characterInfo””s Ä
[””Ä Å
i””Å Ç
]””Ç É
.””É Ñ
baseLine””Ñ å
+””ç é#
strikethroughOffset””è ¢
*””£ §"
strikethroughScale””• ∑
,””∑ ∏
$num””π ∫
)””∫ ª
;””ª º 
strikethroughColor
‘‘ .
=
‘‘/ 0

m_textInfo
‘‘1 ;
.
‘‘; <
characterInfo
‘‘< I
[
‘‘I J
i
‘‘J K
]
‘‘K L
.
‘‘L M 
strikethroughColor
‘‘M _
;
‘‘_ `#
strikethroughBaseline
’’ 1
=
’’2 3

m_textInfo
’’4 >
.
’’> ?
characterInfo
’’? L
[
’’L M
i
’’M N
]
’’N O
.
’’O P
baseLine
’’P X
;
’’X Y
}
◊◊ 
}
ÿÿ 
if
€€ 
(
€€  
beginStrikethrough
€€ *
&&
€€+ -
m_characterCount
€€. >
==
€€? A
$num
€€B C
)
€€C D
{
‹‹  
beginStrikethrough
›› *
=
››+ ,
false
››- 2
;
››2 3
strikethrough_end
ﬁﬁ )
=
ﬁﬁ* +
new
ﬁﬁ, /
Vector3
ﬁﬁ0 7
(
ﬁﬁ7 8

m_textInfo
ﬁﬁ8 B
.
ﬁﬁB C
characterInfo
ﬁﬁC P
[
ﬁﬁP Q
i
ﬁﬁQ R
]
ﬁﬁR S
.
ﬁﬁS T
topRight
ﬁﬁT \
.
ﬁﬁ\ ]
x
ﬁﬁ] ^
,
ﬁﬁ^ _

m_textInfo
ﬁﬁ` j
.
ﬁﬁj k
characterInfo
ﬁﬁk x
[
ﬁﬁx y
i
ﬁﬁy z
]
ﬁﬁz {
.
ﬁﬁ{ |
baseLineﬁﬁ| Ñ
+ﬁﬁÖ Ü#
strikethroughOffsetﬁﬁá ö
*ﬁﬁõ ú"
strikethroughScaleﬁﬁù Ø
,ﬁﬁØ ∞
$numﬁﬁ± ≤
)ﬁﬁ≤ ≥
;ﬁﬁ≥ ¥
DrawUnderlineMesh
‡‡ )
(
‡‡) *!
strikethrough_start
‡‡* =
,
‡‡= >
strikethrough_end
‡‡? P
,
‡‡P Q
ref
‡‡R U
last_vert_index
‡‡V e
,
‡‡e f 
strikethroughScale
‡‡g y
,
‡‡y z!
strikethroughScale‡‡{ ç
,‡‡ç é"
strikethroughScale‡‡è °
,‡‡° ¢
xScale‡‡£ ©
,‡‡© ™"
strikethroughColor‡‡´ Ω
)‡‡Ω æ
;‡‡æ ø
}
·· 
else
‚‚ 
if
‚‚ 
(
‚‚  
beginStrikethrough
‚‚ /
&&
‚‚0 2
i
‚‚3 4
==
‚‚5 7
lineInfo
‚‚8 @
.
‚‚@ A 
lastCharacterIndex
‚‚A S
)
‚‚S T
{
„„ 
if
ÂÂ 
(
ÂÂ 
char
ÂÂ  
.
ÂÂ  !
IsWhiteSpace
ÂÂ! -
(
ÂÂ- .
unicode
ÂÂ. 5
)
ÂÂ5 6
||
ÂÂ7 9
unicode
ÂÂ: A
==
ÂÂB D
$num
ÂÂE K
)
ÂÂK L
{
ÊÊ 
int
ÁÁ '
lastVisibleCharacterIndex
ÁÁ  9
=
ÁÁ: ;
lineInfo
ÁÁ< D
.
ÁÁD E'
lastVisibleCharacterIndex
ÁÁE ^
;
ÁÁ^ _
strikethrough_end
ËË -
=
ËË. /
new
ËË0 3
Vector3
ËË4 ;
(
ËË; <

m_textInfo
ËË< F
.
ËËF G
characterInfo
ËËG T
[
ËËT U'
lastVisibleCharacterIndex
ËËU n
]
ËËn o
.
ËËo p
topRight
ËËp x
.
ËËx y
x
ËËy z
,
ËËz {

m_textInfoËË| Ü
.ËËÜ á
characterInfoËËá î
[ËËî ï)
lastVisibleCharacterIndexËËï Æ
]ËËÆ Ø
.ËËØ ∞
baseLineËË∞ ∏
+ËËπ ∫#
strikethroughOffsetËËª Œ
*ËËœ –"
strikethroughScaleËË— „
,ËË„ ‰
$numËËÂ Ê
)ËËÊ Á
;ËËÁ Ë
}
ÈÈ 
else
ÍÍ 
{
ÎÎ 
strikethrough_end
ÌÌ -
=
ÌÌ. /
new
ÌÌ0 3
Vector3
ÌÌ4 ;
(
ÌÌ; <

m_textInfo
ÌÌ< F
.
ÌÌF G
characterInfo
ÌÌG T
[
ÌÌT U
i
ÌÌU V
]
ÌÌV W
.
ÌÌW X
topRight
ÌÌX `
.
ÌÌ` a
x
ÌÌa b
,
ÌÌb c

m_textInfo
ÌÌd n
.
ÌÌn o
characterInfo
ÌÌo |
[
ÌÌ| }
i
ÌÌ} ~
]
ÌÌ~ 
.ÌÌ Ä
baseLineÌÌÄ à
+ÌÌâ ä#
strikethroughOffsetÌÌã û
*ÌÌü †"
strikethroughScaleÌÌ° ≥
,ÌÌ≥ ¥
$numÌÌµ ∂
)ÌÌ∂ ∑
;ÌÌ∑ ∏
}
ÓÓ  
beginStrikethrough
 *
=
+ ,
false
- 2
;
2 3
DrawUnderlineMesh
ÒÒ )
(
ÒÒ) *!
strikethrough_start
ÒÒ* =
,
ÒÒ= >
strikethrough_end
ÒÒ? P
,
ÒÒP Q
ref
ÒÒR U
last_vert_index
ÒÒV e
,
ÒÒe f 
strikethroughScale
ÒÒg y
,
ÒÒy z!
strikethroughScaleÒÒ{ ç
,ÒÒç é"
strikethroughScaleÒÒè °
,ÒÒ° ¢
xScaleÒÒ£ ©
,ÒÒ© ™"
strikethroughColorÒÒ´ Ω
)ÒÒΩ æ
;ÒÒæ ø
}
ÚÚ 
else
ÛÛ 
if
ÛÛ 
(
ÛÛ  
beginStrikethrough
ÛÛ /
&&
ÛÛ0 2
i
ÛÛ3 4
<
ÛÛ5 6
m_characterCount
ÛÛ7 G
&&
ÛÛH J
(
ÛÛK L

m_textInfo
ÛÛL V
.
ÛÛV W
characterInfo
ÛÛW d
[
ÛÛd e
i
ÛÛe f
+
ÛÛg h
$num
ÛÛi j
]
ÛÛj k
.
ÛÛk l
	pointSize
ÛÛl u
!=
ÛÛv x%
strikethroughPointSizeÛÛy è
||ÛÛê í
!ÛÛì î
TMP_MathÛÛî ú
.ÛÛú ù
ApproximatelyÛÛù ™
(ÛÛ™ ´

m_textInfoÛÛ´ µ
.ÛÛµ ∂
characterInfoÛÛ∂ √
[ÛÛ√ ƒ
iÛÛƒ ≈
+ÛÛ∆ «
$numÛÛ» …
]ÛÛ…  
.ÛÛ  À
baseLineÛÛÀ ”
+ÛÛ‘ ’
offsetÛÛ÷ ‹
.ÛÛ‹ ›
yÛÛ› ﬁ
,ÛÛﬁ ﬂ%
strikethroughBaselineÛÛ‡ ı
)ÛÛı ˆ
)ÛÛˆ ˜
)ÛÛ˜ ¯
{
ÙÙ  
beginStrikethrough
ˆˆ *
=
ˆˆ+ ,
false
ˆˆ- 2
;
ˆˆ2 3
int
¯¯ '
lastVisibleCharacterIndex
¯¯ 5
=
¯¯6 7
lineInfo
¯¯8 @
.
¯¯@ A'
lastVisibleCharacterIndex
¯¯A Z
;
¯¯Z [
if
˘˘ 
(
˘˘ 
i
˘˘ 
>
˘˘ '
lastVisibleCharacterIndex
˘˘  9
)
˘˘9 :
strikethrough_end
˙˙ -
=
˙˙. /
new
˙˙0 3
Vector3
˙˙4 ;
(
˙˙; <

m_textInfo
˙˙< F
.
˙˙F G
characterInfo
˙˙G T
[
˙˙T U'
lastVisibleCharacterIndex
˙˙U n
]
˙˙n o
.
˙˙o p
topRight
˙˙p x
.
˙˙x y
x
˙˙y z
,
˙˙z {

m_textInfo˙˙| Ü
.˙˙Ü á
characterInfo˙˙á î
[˙˙î ï)
lastVisibleCharacterIndex˙˙ï Æ
]˙˙Æ Ø
.˙˙Ø ∞
baseLine˙˙∞ ∏
+˙˙π ∫#
strikethroughOffset˙˙ª Œ
*˙˙œ –"
strikethroughScale˙˙— „
,˙˙„ ‰
$num˙˙Â Ê
)˙˙Ê Á
;˙˙Á Ë
else
˚˚ 
strikethrough_end
¸¸ -
=
¸¸. /
new
¸¸0 3
Vector3
¸¸4 ;
(
¸¸; <

m_textInfo
¸¸< F
.
¸¸F G
characterInfo
¸¸G T
[
¸¸T U
i
¸¸U V
]
¸¸V W
.
¸¸W X
topRight
¸¸X `
.
¸¸` a
x
¸¸a b
,
¸¸b c

m_textInfo
¸¸d n
.
¸¸n o
characterInfo
¸¸o |
[
¸¸| }
i
¸¸} ~
]
¸¸~ 
.¸¸ Ä
baseLine¸¸Ä à
+¸¸â ä#
strikethroughOffset¸¸ã û
*¸¸ü †"
strikethroughScale¸¸° ≥
,¸¸≥ ¥
$num¸¸µ ∂
)¸¸∂ ∑
;¸¸∑ ∏
DrawUnderlineMesh
˛˛ )
(
˛˛) *!
strikethrough_start
˛˛* =
,
˛˛= >
strikethrough_end
˛˛? P
,
˛˛P Q
ref
˛˛R U
last_vert_index
˛˛V e
,
˛˛e f 
strikethroughScale
˛˛g y
,
˛˛y z!
strikethroughScale˛˛{ ç
,˛˛ç é"
strikethroughScale˛˛è °
,˛˛° ¢
xScale˛˛£ ©
,˛˛© ™"
strikethroughColor˛˛´ Ω
)˛˛Ω æ
;˛˛æ ø
}
Ä Ä  
else
Å Å  
if
Å Å  
(
Å Å   
beginStrikethrough
Å Å  /
&&
Å Å 0 2
i
Å Å 3 4
<
Å Å 5 6
m_characterCount
Å Å 7 G
&&
Å Å H J
currentFontAsset
Å Å K [
.
Å Å [ \
GetInstanceID
Å Å \ i
(
Å Å i j
)
Å Å j k
!=
Å Å l n
characterInfos
Å Å o }
[
Å Å } ~
i
Å Å ~ 
+Å Å Ä Å
$numÅ Å Ç É
]Å Å É Ñ
.Å Å Ñ Ö
	fontAssetÅ Å Ö é
.Å Å é è
GetInstanceIDÅ Å è ú
(Å Å ú ù
)Å Å ù û
)Å Å û ü
{
Ç Ç   
beginStrikethrough
Ñ Ñ  *
=
Ñ Ñ + ,
false
Ñ Ñ - 2
;
Ñ Ñ 2 3
strikethrough_end
Ö Ö  )
=
Ö Ö * +
new
Ö Ö , /
Vector3
Ö Ö 0 7
(
Ö Ö 7 8

m_textInfo
Ö Ö 8 B
.
Ö Ö B C
characterInfo
Ö Ö C P
[
Ö Ö P Q
i
Ö Ö Q R
]
Ö Ö R S
.
Ö Ö S T
topRight
Ö Ö T \
.
Ö Ö \ ]
x
Ö Ö ] ^
,
Ö Ö ^ _

m_textInfo
Ö Ö ` j
.
Ö Ö j k
characterInfo
Ö Ö k x
[
Ö Ö x y
i
Ö Ö y z
]
Ö Ö z {
.
Ö Ö { |
baseLineÖ Ö | Ñ
+Ö Ö Ö Ü#
strikethroughOffsetÖ Ö á ö
*Ö Ö õ ú"
strikethroughScaleÖ Ö ù Ø
,Ö Ö Ø ∞
$numÖ Ö ± ≤
)Ö Ö ≤ ≥
;Ö Ö ≥ ¥
DrawUnderlineMesh
á á  )
(
á á ) *!
strikethrough_start
á á * =
,
á á = >
strikethrough_end
á á ? P
,
á á P Q
ref
á á R U
last_vert_index
á á V e
,
á á e f 
strikethroughScale
á á g y
,
á á y z!
strikethroughScaleá á { ç
,á á ç é"
strikethroughScaleá á è °
,á á ° ¢
xScaleá á £ ©
,á á © ™"
strikethroughColorá á ´ Ω
)á á Ω æ
;á á æ ø
}
à à  
else
â â  
if
â â  
(
â â   
beginStrikethrough
â â  /
&&
â â 0 2
!
â â 3 4$
isStrikeThroughVisible
â â 4 J
)
â â J K
{
ä ä   
beginStrikethrough
å å  *
=
å å + ,
false
å å - 2
;
å å 2 3
strikethrough_end
ç ç  )
=
ç ç * +
new
ç ç , /
Vector3
ç ç 0 7
(
ç ç 7 8

m_textInfo
ç ç 8 B
.
ç ç B C
characterInfo
ç ç C P
[
ç ç P Q
i
ç ç Q R
-
ç ç S T
$num
ç ç U V
]
ç ç V W
.
ç ç W X
topRight
ç ç X `
.
ç ç ` a
x
ç ç a b
,
ç ç b c

m_textInfo
ç ç d n
.
ç ç n o
characterInfo
ç ç o |
[
ç ç | }
i
ç ç } ~
-ç ç  Ä
$numç ç Å Ç
]ç ç Ç É
.ç ç É Ñ
baseLineç ç Ñ å
+ç ç ç é#
strikethroughOffsetç ç è ¢
*ç ç £ §"
strikethroughScaleç ç • ∑
,ç ç ∑ ∏
$numç ç π ∫
)ç ç ∫ ª
;ç ç ª º
DrawUnderlineMesh
è è  )
(
è è ) *!
strikethrough_start
è è * =
,
è è = >
strikethrough_end
è è ? P
,
è è P Q
ref
è è R U
last_vert_index
è è V e
,
è è e f 
strikethroughScale
è è g y
,
è è y z!
strikethroughScaleè è { ç
,è è ç é"
strikethroughScaleè è è °
,è è ° ¢
xScaleè è £ ©
,è è © ™"
strikethroughColorè è ´ Ω
)è è Ω æ
;è è æ ø
}
ê ê  
}
ë ë  
else
í í  
{
ì ì  
if
ï ï  
(
ï ï   
beginStrikethrough
ï ï  *
==
ï ï + -
true
ï ï . 2
)
ï ï 2 3
{
ñ ñ   
beginStrikethrough
ó ó  *
=
ó ó + ,
false
ó ó - 2
;
ó ó 2 3
strikethrough_end
ò ò  )
=
ò ò * +
new
ò ò , /
Vector3
ò ò 0 7
(
ò ò 7 8

m_textInfo
ò ò 8 B
.
ò ò B C
characterInfo
ò ò C P
[
ò ò P Q
i
ò ò Q R
-
ò ò S T
$num
ò ò U V
]
ò ò V W
.
ò ò W X
topRight
ò ò X `
.
ò ò ` a
x
ò ò a b
,
ò ò b c

m_textInfo
ò ò d n
.
ò ò n o
characterInfo
ò ò o |
[
ò ò | }
i
ò ò } ~
-ò ò  Ä
$numò ò Å Ç
]ò ò Ç É
.ò ò É Ñ
baseLineò ò Ñ å
+ò ò ç é#
strikethroughOffsetò ò è ¢
*ò ò £ §"
strikethroughScaleò ò • ∑
,ò ò ∑ ∏
$numò ò π ∫
)ò ò ∫ ª
;ò ò ª º
DrawUnderlineMesh
ö ö  )
(
ö ö ) *!
strikethrough_start
ö ö * =
,
ö ö = >
strikethrough_end
ö ö ? P
,
ö ö P Q
ref
ö ö R U
last_vert_index
ö ö V e
,
ö ö e f 
strikethroughScale
ö ö g y
,
ö ö y z!
strikethroughScaleö ö { ç
,ö ö ç é"
strikethroughScaleö ö è °
,ö ö ° ¢
xScaleö ö £ ©
,ö ö © ™"
strikethroughColorö ö ´ Ω
)ö ö Ω æ
;ö ö æ ø
}
õ õ  
}
ú ú  
bool
¢ ¢  
isHighlight
¢ ¢   
=
¢ ¢ ! "
(
¢ ¢ # $

m_textInfo
¢ ¢ $ .
.
¢ ¢ . /
characterInfo
¢ ¢ / <
[
¢ ¢ < =
i
¢ ¢ = >
]
¢ ¢ > ?
.
¢ ¢ ? @
style
¢ ¢ @ E
&
¢ ¢ F G

FontStyles
¢ ¢ H R
.
¢ ¢ R S
	Highlight
¢ ¢ S \
)
¢ ¢ \ ]
==
¢ ¢ ^ `

FontStyles
¢ ¢ a k
.
¢ ¢ k l
	Highlight
¢ ¢ l u
;
¢ ¢ u v
if
£ £  
(
£ £  
isHighlight
£ £  
)
£ £   
{
§ §  
bool
• •   
isHighlightVisible
• •  +
=
• • , -
true
• • . 2
;
• • 2 3
int
¶ ¶  
currentPage
¶ ¶  #
=
¶ ¶ $ %

m_textInfo
¶ ¶ & 0
.
¶ ¶ 0 1
characterInfo
¶ ¶ 1 >
[
¶ ¶ > ?
i
¶ ¶ ? @
]
¶ ¶ @ A
.
¶ ¶ A B

pageNumber
¶ ¶ B L
;
¶ ¶ L M
if
® ®  
(
® ®  
i
® ®  
>
® ®  $
m_maxVisibleCharacters
® ®  2
||
® ® 3 5
currentLine
® ® 6 A
>
® ® B C
m_maxVisibleLines
® ® D U
||
® ® V X
(
® ® Y Z
m_overflowMode
® ® Z h
==
® ® i k
TextOverflowModes
® ® l }
.
® ® } ~
Page® ® ~ Ç
&&® ® É Ö
currentPage® ® Ü ë
+® ® í ì
$num® ® î ï
!=® ® ñ ò
m_pageToDisplay® ® ô ®
)® ® ® ©
)® ® © ™ 
isHighlightVisible
© ©  *
=
© © + ,
false
© © - 2
;
© © 2 3
if
´ ´  
(
´ ´  
beginHighlight
´ ´  &
==
´ ´ ' )
false
´ ´ * /
&&
´ ´ 0 2 
isHighlightVisible
´ ´ 3 E
==
´ ´ F H
true
´ ´ I M
&&
´ ´ N P
i
´ ´ Q R
<=
´ ´ S U
lineInfo
´ ´ V ^
.
´ ´ ^ _'
lastVisibleCharacterIndex
´ ´ _ x
&&
´ ´ y {
unicode´ ´ | É
!=´ ´ Ñ Ü
$num´ ´ á â
&&´ ´ ä å
unicode´ ´ ç î
!=´ ´ ï ó
$num´ ´ ò ö
&&´ ´ õ ù
unicode´ ´ û •
!=´ ´ ¶ ®
$num´ ´ © ´
)´ ´ ´ ¨
{
¨ ¨  
if
≠ ≠  
(
≠ ≠  
i
≠ ≠  
==
≠ ≠   
lineInfo
≠ ≠ ! )
.
≠ ≠ ) *'
lastVisibleCharacterIndex
≠ ≠ * C
&&
≠ ≠ D F
char
≠ ≠ G K
.
≠ ≠ K L
IsSeparator
≠ ≠ L W
(
≠ ≠ W X
unicode
≠ ≠ X _
)
≠ ≠ _ `
)
≠ ≠ ` a
{
Æ Æ  
}
Æ Æ  
else
Ø Ø  
{
∞ ∞  
beginHighlight
± ±  *
=
± ± + ,
true
± ± - 1
;
± ± 1 2
highlight_start
≤ ≤  +
=
≤ ≤ , -$
k_LargePositiveVector2
≤ ≤ . D
;
≤ ≤ D E
highlight_end
≥ ≥  )
=
≥ ≥ * +$
k_LargeNegativeVector2
≥ ≥ , B
;
≥ ≥ B C
highlightState
¥ ¥  *
=
¥ ¥ + ,

m_textInfo
¥ ¥ - 7
.
¥ ¥ 7 8
characterInfo
¥ ¥ 8 E
[
¥ ¥ E F
i
¥ ¥ F G
]
¥ ¥ G H
.
¥ ¥ H I
highlightState
¥ ¥ I W
;
¥ ¥ W X
}
µ µ  
}
∂ ∂  
if
∏ ∏  
(
∏ ∏  
beginHighlight
∏ ∏  &
)
∏ ∏ & '
{
π π  
TMP_CharacterInfo
∫ ∫  )
currentCharacter
∫ ∫ * :
=
∫ ∫ ; <

m_textInfo
∫ ∫ = G
.
∫ ∫ G H
characterInfo
∫ ∫ H U
[
∫ ∫ U V
i
∫ ∫ V W
]
∫ ∫ W X
;
∫ ∫ X Y
HighlightState
ª ª  &
currentState
ª ª ' 3
=
ª ª 4 5
currentCharacter
ª ª 6 F
.
ª ª F G
highlightState
ª ª G U
;
ª ª U V
bool
Ω Ω  
isColorTransition
Ω Ω  .
=
Ω Ω / 0
false
Ω Ω 1 6
;
Ω Ω 6 7
if
¿ ¿  
(
¿ ¿  
highlightState
¿ ¿  *
!=
¿ ¿ + -
currentCharacter
¿ ¿ . >
.
¿ ¿ > ?
highlightState
¿ ¿ ? M
)
¿ ¿ M N
{
¡ ¡  
highlight_end
√ √  )
.
√ √ ) *
x
√ √ * +
=
√ √ , -
(
√ √ . /
highlight_end
√ √ / <
.
√ √ < =
x
√ √ = >
-
√ √ ? @
highlightState
√ √ A O
.
√ √ O P
padding
√ √ P W
.
√ √ W X
right
√ √ X ]
+
√ √ ^ _
currentCharacter
√ √ ` p
.
√ √ p q

bottomLeft
√ √ q {
.
√ √ { |
x
√ √ | }
)
√ √ } ~
/√ √  Ä
$num√ √ Å Ç
;√ √ Ç É
highlight_start
≈ ≈  +
.
≈ ≈ + ,
y
≈ ≈ , -
=
≈ ≈ . /
Mathf
≈ ≈ 0 5
.
≈ ≈ 5 6
Min
≈ ≈ 6 9
(
≈ ≈ 9 :
highlight_start
≈ ≈ : I
.
≈ ≈ I J
y
≈ ≈ J K
,
≈ ≈ K L
currentCharacter
≈ ≈ M ]
.
≈ ≈ ] ^
	descender
≈ ≈ ^ g
)
≈ ≈ g h
;
≈ ≈ h i
highlight_end
∆ ∆  )
.
∆ ∆ ) *
y
∆ ∆ * +
=
∆ ∆ , -
Mathf
∆ ∆ . 3
.
∆ ∆ 3 4
Max
∆ ∆ 4 7
(
∆ ∆ 7 8
highlight_end
∆ ∆ 8 E
.
∆ ∆ E F
y
∆ ∆ F G
,
∆ ∆ G H
currentCharacter
∆ ∆ I Y
.
∆ ∆ Y Z
ascender
∆ ∆ Z b
)
∆ ∆ b c
;
∆ ∆ c d
DrawTextHighlight
» »  -
(
» » - .
highlight_start
» » . =
,
» » = >
highlight_end
» » ? L
,
» » L M
ref
» » N Q
last_vert_index
» » R a
,
» » a b
highlightState
» » c q
.
» » q r
color
» » r w
)
» » w x
;
» » x y
beginHighlight
     *
=
    + ,
true
    - 1
;
    1 2
highlight_start
À À  +
=
À À , -
new
À À . 1
Vector2
À À 2 9
(
À À 9 :
highlight_end
À À : G
.
À À G H
x
À À H I
,
À À I J
currentCharacter
À À K [
.
À À [ \
	descender
À À \ e
-
À À f g
currentState
À À h t
.
À À t u
padding
À À u |
.
À À | }
bottomÀ À } É
)À À É Ñ
;À À Ñ Ö
highlight_end
Ã Ã  )
=
Ã Ã * +
new
Ã Ã , /
Vector2
Ã Ã 0 7
(
Ã Ã 7 8
currentCharacter
Ã Ã 8 H
.
Ã Ã H I
topRight
Ã Ã I Q
.
Ã Ã Q R
x
Ã Ã R S
+
Ã Ã T U
currentState
Ã Ã V b
.
Ã Ã b c
padding
Ã Ã c j
.
Ã Ã j k
right
Ã Ã k p
,
Ã Ã p q
currentCharacterÃ Ã r Ç
.Ã Ã Ç É
ascenderÃ Ã É ã
+Ã Ã å ç
currentStateÃ Ã é ö
.Ã Ã ö õ
paddingÃ Ã õ ¢
.Ã Ã ¢ £
topÃ Ã £ ¶
)Ã Ã ¶ ß
;Ã Ã ß ®
highlightState
Œ Œ  *
=
Œ Œ + ,
currentCharacter
Œ Œ - =
.
Œ Œ = >
highlightState
Œ Œ > L
;
Œ Œ L M
isColorTransition
– –  -
=
– – . /
true
– – 0 4
;
– – 4 5
}
— —  
if
” ”  
(
” ”  
!
” ”  
isColorTransition
” ”  .
)
” ” . /
{
‘ ‘  
highlight_start
÷ ÷  +
.
÷ ÷ + ,
x
÷ ÷ , -
=
÷ ÷ . /
Mathf
÷ ÷ 0 5
.
÷ ÷ 5 6
Min
÷ ÷ 6 9
(
÷ ÷ 9 :
highlight_start
÷ ÷ : I
.
÷ ÷ I J
x
÷ ÷ J K
,
÷ ÷ K L
currentCharacter
÷ ÷ M ]
.
÷ ÷ ] ^

bottomLeft
÷ ÷ ^ h
.
÷ ÷ h i
x
÷ ÷ i j
-
÷ ÷ k l
highlightState
÷ ÷ m {
.
÷ ÷ { |
padding÷ ÷ | É
.÷ ÷ É Ñ
left÷ ÷ Ñ à
)÷ ÷ à â
;÷ ÷ â ä
highlight_start
◊ ◊  +
.
◊ ◊ + ,
y
◊ ◊ , -
=
◊ ◊ . /
Mathf
◊ ◊ 0 5
.
◊ ◊ 5 6
Min
◊ ◊ 6 9
(
◊ ◊ 9 :
highlight_start
◊ ◊ : I
.
◊ ◊ I J
y
◊ ◊ J K
,
◊ ◊ K L
currentCharacter
◊ ◊ M ]
.
◊ ◊ ] ^
	descender
◊ ◊ ^ g
-
◊ ◊ h i
highlightState
◊ ◊ j x
.
◊ ◊ x y
padding◊ ◊ y Ä
.◊ ◊ Ä Å
bottom◊ ◊ Å á
)◊ ◊ á à
;◊ ◊ à â
highlight_end
Ÿ Ÿ  )
.
Ÿ Ÿ ) *
x
Ÿ Ÿ * +
=
Ÿ Ÿ , -
Mathf
Ÿ Ÿ . 3
.
Ÿ Ÿ 3 4
Max
Ÿ Ÿ 4 7
(
Ÿ Ÿ 7 8
highlight_end
Ÿ Ÿ 8 E
.
Ÿ Ÿ E F
x
Ÿ Ÿ F G
,
Ÿ Ÿ G H
currentCharacter
Ÿ Ÿ I Y
.
Ÿ Ÿ Y Z
topRight
Ÿ Ÿ Z b
.
Ÿ Ÿ b c
x
Ÿ Ÿ c d
+
Ÿ Ÿ e f
highlightState
Ÿ Ÿ g u
.
Ÿ Ÿ u v
padding
Ÿ Ÿ v }
.
Ÿ Ÿ } ~
rightŸ Ÿ ~ É
)Ÿ Ÿ É Ñ
;Ÿ Ÿ Ñ Ö
highlight_end
⁄ ⁄  )
.
⁄ ⁄ ) *
y
⁄ ⁄ * +
=
⁄ ⁄ , -
Mathf
⁄ ⁄ . 3
.
⁄ ⁄ 3 4
Max
⁄ ⁄ 4 7
(
⁄ ⁄ 7 8
highlight_end
⁄ ⁄ 8 E
.
⁄ ⁄ E F
y
⁄ ⁄ F G
,
⁄ ⁄ G H
currentCharacter
⁄ ⁄ I Y
.
⁄ ⁄ Y Z
ascender
⁄ ⁄ Z b
+
⁄ ⁄ c d
highlightState
⁄ ⁄ e s
.
⁄ ⁄ s t
padding
⁄ ⁄ t {
.
⁄ ⁄ { |
top
⁄ ⁄ | 
)⁄ ⁄  Ä
;⁄ ⁄ Ä Å
}
€ €  
}
‹ ‹  
if
ﬂ ﬂ  
(
ﬂ ﬂ  
beginHighlight
ﬂ ﬂ  &
&&
ﬂ ﬂ ' )
m_characterCount
ﬂ ﬂ * :
==
ﬂ ﬂ ; =
$num
ﬂ ﬂ > ?
)
ﬂ ﬂ ? @
{
‡ ‡  
beginHighlight
· ·  &
=
· · ' (
false
· · ) .
;
· · . /
DrawTextHighlight
„ „  )
(
„ „ ) *
highlight_start
„ „ * 9
,
„ „ 9 :
highlight_end
„ „ ; H
,
„ „ H I
ref
„ „ J M
last_vert_index
„ „ N ]
,
„ „ ] ^
highlightState
„ „ _ m
.
„ „ m n
color
„ „ n s
)
„ „ s t
;
„ „ t u
}
‰ ‰  
else
Â Â  
if
Â Â  
(
Â Â  
beginHighlight
Â Â  +
&&
Â Â , .
(
Â Â / 0
i
Â Â 0 1
==
Â Â 2 4
lineInfo
Â Â 5 =
.
Â Â = > 
lastCharacterIndex
Â Â > P
||
Â Â Q S
i
Â Â T U
>=
Â Â V X
lineInfo
Â Â Y a
.
Â Â a b'
lastVisibleCharacterIndex
Â Â b {
)
Â Â { |
)
Â Â | }
{
Ê Ê  
beginHighlight
Á Á  &
=
Á Á ' (
false
Á Á ) .
;
Á Á . /
DrawTextHighlight
Ë Ë  )
(
Ë Ë ) *
highlight_start
Ë Ë * 9
,
Ë Ë 9 :
highlight_end
Ë Ë ; H
,
Ë Ë H I
ref
Ë Ë J M
last_vert_index
Ë Ë N ]
,
Ë Ë ] ^
highlightState
Ë Ë _ m
.
Ë Ë m n
color
Ë Ë n s
)
Ë Ë s t
;
Ë Ë t u
}
È È  
else
Í Í  
if
Í Í  
(
Í Í  
beginHighlight
Í Í  +
&&
Í Í , .
!
Í Í / 0 
isHighlightVisible
Í Í 0 B
)
Í Í B C
{
Î Î  
beginHighlight
Ï Ï  &
=
Ï Ï ' (
false
Ï Ï ) .
;
Ï Ï . /
DrawTextHighlight
Ì Ì  )
(
Ì Ì ) *
highlight_start
Ì Ì * 9
,
Ì Ì 9 :
highlight_end
Ì Ì ; H
,
Ì Ì H I
ref
Ì Ì J M
last_vert_index
Ì Ì N ]
,
Ì Ì ] ^
highlightState
Ì Ì _ m
.
Ì Ì m n
color
Ì Ì n s
)
Ì Ì s t
;
Ì Ì t u
}
Ó Ó  
}
Ô Ô  
else
   
{
Ò Ò  
if
Û Û  
(
Û Û  
beginHighlight
Û Û  &
==
Û Û ' )
true
Û Û * .
)
Û Û . /
{
Ù Ù  
beginHighlight
ı ı  &
=
ı ı ' (
false
ı ı ) .
;
ı ı . /
DrawTextHighlight
ˆ ˆ  )
(
ˆ ˆ ) *
highlight_start
ˆ ˆ * 9
,
ˆ ˆ 9 :
highlight_end
ˆ ˆ ; H
,
ˆ ˆ H I
ref
ˆ ˆ J M
last_vert_index
ˆ ˆ N ]
,
ˆ ˆ ] ^
highlightState
ˆ ˆ _ m
.
ˆ ˆ m n
color
ˆ ˆ n s
)
ˆ ˆ s t
;
ˆ ˆ t u
}
˜ ˜  
}
¯ ¯  
lastLine
˚ ˚  
=
˚ ˚  
currentLine
˚ ˚  &
;
˚ ˚ & '
}
¸ ¸  

m_textInfo
É!É! 
.
É!É! 
characterCount
É!É! %
=
É!É!& '
m_characterCount
É!É!( 8
;
É!É!8 9

m_textInfo
Ñ!Ñ! 
.
Ñ!Ñ! 
spriteCount
Ñ!Ñ! "
=
Ñ!Ñ!# $
m_spriteCount
Ñ!Ñ!% 2
;
Ñ!Ñ!2 3

m_textInfo
Ö!Ö! 
.
Ö!Ö! 
	lineCount
Ö!Ö!  
=
Ö!Ö!! "
	lineCount
Ö!Ö!# ,
;
Ö!Ö!, -

m_textInfo
Ü!Ü! 
.
Ü!Ü! 
	wordCount
Ü!Ü!  
=
Ü!Ü!! "
	wordCount
Ü!Ü!# ,
!=
Ü!Ü!- /
$num
Ü!Ü!0 1
&&
Ü!Ü!2 4
m_characterCount
Ü!Ü!5 E
>
Ü!Ü!F G
$num
Ü!Ü!H I
?
Ü!Ü!J K
	wordCount
Ü!Ü!L U
:
Ü!Ü!V W
$num
Ü!Ü!X Y
;
Ü!Ü!Y Z

m_textInfo
á!á! 
.
á!á! 
	pageCount
á!á!  
=
á!á!! "
m_pageNumber
á!á!# /
+
á!á!0 1
$num
á!á!2 3
;
á!á!3 4
if
ë!ë! 
(
ë!ë! 
m_renderMode
ë!ë! 
==
ë!ë! 
TextRenderFlags
ë!ë!  /
.
ë!ë!/ 0
Render
ë!ë!0 6
&&
ë!ë!7 9
IsActive
ë!ë!: B
(
ë!ë!B C
)
ë!ë!C D
)
ë!ë!D E
{
í!í! 
OnPreRenderText
î!î! 
?
î!î!  
.
î!î!  !
Invoke
î!î!! '
(
î!î!' (

m_textInfo
î!î!( 2
)
î!î!2 3
;
î!î!3 4
if
ó!ó! 
(
ó!ó! $
m_geometrySortingOrder
ó!ó! *
!=
ó!ó!+ - 
VertexSortingOrder
ó!ó!. @
.
ó!ó!@ A
Normal
ó!ó!A G
)
ó!ó!G H

m_textInfo
ò!ò! 
.
ò!ò! 
meshInfo
ò!ò! '
[
ò!ò!' (
$num
ò!ò!( )
]
ò!ò!) *
.
ò!ò!* +
SortGeometry
ò!ò!+ 7
(
ò!ò!7 8 
VertexSortingOrder
ò!ò!8 J
.
ò!ò!J K
Reverse
ò!ò!K R
)
ò!ò!R S
;
ò!ò!S T
m_mesh
õ!õ! 
.
õ!õ! 
MarkDynamic
õ!õ! "
(
õ!õ!" #
)
õ!õ!# $
;
õ!õ!$ %
m_mesh
ú!ú! 
.
ú!ú! 
vertices
ú!ú! 
=
ú!ú!  !

m_textInfo
ú!ú!" ,
.
ú!ú!, -
meshInfo
ú!ú!- 5
[
ú!ú!5 6
$num
ú!ú!6 7
]
ú!ú!7 8
.
ú!ú!8 9
vertices
ú!ú!9 A
;
ú!ú!A B
m_mesh
ù!ù! 
.
ù!ù! 
uv
ù!ù! 
=
ù!ù! 

m_textInfo
ù!ù! &
.
ù!ù!& '
meshInfo
ù!ù!' /
[
ù!ù!/ 0
$num
ù!ù!0 1
]
ù!ù!1 2
.
ù!ù!2 3
uvs0
ù!ù!3 7
;
ù!ù!7 8
m_mesh
û!û! 
.
û!û! 
uv2
û!û! 
=
û!û! 

m_textInfo
û!û! '
.
û!û!' (
meshInfo
û!û!( 0
[
û!û!0 1
$num
û!û!1 2
]
û!û!2 3
.
û!û!3 4
uvs2
û!û!4 8
;
û!û!8 9
m_mesh
†!†! 
.
†!†! 
colors32
†!†! 
=
†!†!  !

m_textInfo
†!†!" ,
.
†!†!, -
meshInfo
†!†!- 5
[
†!†!5 6
$num
†!†!6 7
]
†!†!7 8
.
†!†!8 9
colors32
†!†!9 A
;
†!†!A B
m_mesh
£!£! 
.
£!£! 
RecalculateBounds
£!£! (
(
£!£!( )
)
£!£!) *
;
£!£!* +
for
¶!¶! 
(
¶!¶! 
int
¶!¶! 
i
¶!¶! 
=
¶!¶! 
$num
¶!¶! 
;
¶!¶! 
i
¶!¶!  !
<
¶!¶!" #

m_textInfo
¶!¶!$ .
.
¶!¶!. /
materialCount
¶!¶!/ <
;
¶!¶!< =
i
¶!¶!> ?
++
¶!¶!? A
)
¶!¶!A B
{
ß!ß! 

m_textInfo
©!©! 
.
©!©! 
meshInfo
©!©! '
[
©!©!' (
i
©!©!( )
]
©!©!) *
.
©!©!* +!
ClearUnusedVertices
©!©!+ >
(
©!©!> ?
)
©!©!? @
;
©!©!@ A
if
´!´! 
(
´!´! 
m_subTextObjects
´!´! (
[
´!´!( )
i
´!´!) *
]
´!´!* +
==
´!´!, .
null
´!´!/ 3
)
´!´!3 4
continue
´!´!5 =
;
´!´!= >
if
Æ!Æ! 
(
Æ!Æ! $
m_geometrySortingOrder
Æ!Æ! .
!=
Æ!Æ!/ 1 
VertexSortingOrder
Æ!Æ!2 D
.
Æ!Æ!D E
Normal
Æ!Æ!E K
)
Æ!Æ!K L

m_textInfo
Ø!Ø! "
.
Ø!Ø!" #
meshInfo
Ø!Ø!# +
[
Ø!Ø!+ ,
i
Ø!Ø!, -
]
Ø!Ø!- .
.
Ø!Ø!. /
SortGeometry
Ø!Ø!/ ;
(
Ø!Ø!; < 
VertexSortingOrder
Ø!Ø!< N
.
Ø!Ø!N O
Reverse
Ø!Ø!O V
)
Ø!Ø!V W
;
Ø!Ø!W X
m_subTextObjects
±!±! $
[
±!±!$ %
i
±!±!% &
]
±!±!& '
.
±!±!' (
mesh
±!±!( ,
.
±!±!, -
vertices
±!±!- 5
=
±!±!6 7

m_textInfo
±!±!8 B
.
±!±!B C
meshInfo
±!±!C K
[
±!±!K L
i
±!±!L M
]
±!±!M N
.
±!±!N O
vertices
±!±!O W
;
±!±!W X
m_subTextObjects
≤!≤! $
[
≤!≤!$ %
i
≤!≤!% &
]
≤!≤!& '
.
≤!≤!' (
mesh
≤!≤!( ,
.
≤!≤!, -
uv
≤!≤!- /
=
≤!≤!0 1

m_textInfo
≤!≤!2 <
.
≤!≤!< =
meshInfo
≤!≤!= E
[
≤!≤!E F
i
≤!≤!F G
]
≤!≤!G H
.
≤!≤!H I
uvs0
≤!≤!I M
;
≤!≤!M N
m_subTextObjects
≥!≥! $
[
≥!≥!$ %
i
≥!≥!% &
]
≥!≥!& '
.
≥!≥!' (
mesh
≥!≥!( ,
.
≥!≥!, -
uv2
≥!≥!- 0
=
≥!≥!1 2

m_textInfo
≥!≥!3 =
.
≥!≥!= >
meshInfo
≥!≥!> F
[
≥!≥!F G
i
≥!≥!G H
]
≥!≥!H I
.
≥!≥!I J
uvs2
≥!≥!J N
;
≥!≥!N O
m_subTextObjects
µ!µ! $
[
µ!µ!$ %
i
µ!µ!% &
]
µ!µ!& '
.
µ!µ!' (
mesh
µ!µ!( ,
.
µ!µ!, -
colors32
µ!µ!- 5
=
µ!µ!6 7

m_textInfo
µ!µ!8 B
.
µ!µ!B C
meshInfo
µ!µ!C K
[
µ!µ!K L
i
µ!µ!L M
]
µ!µ!M N
.
µ!µ!N O
colors32
µ!µ!O W
;
µ!µ!W X
m_subTextObjects
∑!∑! $
[
∑!∑!$ %
i
∑!∑!% &
]
∑!∑!& '
.
∑!∑!' (
mesh
∑!∑!( ,
.
∑!∑!, -
RecalculateBounds
∑!∑!- >
(
∑!∑!> ?
)
∑!∑!? @
;
∑!∑!@ A
}
ª!ª! 
}
º!º!  
TMPro_EventManager
ø!ø! 
.
ø!ø! 
ON_TEXT_CHANGED
ø!ø! .
(
ø!ø!. /
this
ø!ø!/ 3
)
ø!ø!3 4
;
ø!ø!4 5
}
 ! ! 	
	protected
—!—! 
override
—!—! 
Vector3
—!—! "
[
—!—!" #
]
—!—!# $*
GetTextContainerLocalCorners
—!—!% A
(
—!—!A B
)
—!—!B C
{
“!“! 	
if
”!”! 
(
”!”! 
m_rectTransform
”!”! 
==
”!”!  "
null
”!”!# '
)
”!”!' (
m_rectTransform
”!”!) 8
=
”!”!9 :
this
”!”!; ?
.
”!”!? @
rectTransform
”!”!@ M
;
”!”!M N
m_rectTransform
’!’! 
.
’!’! 
GetLocalCorners
’!’! +
(
’!’!+ ,$
m_RectTransformCorners
’!’!, B
)
’!’!B C
;
’!’!C D
return
◊!◊! $
m_RectTransformCorners
◊!◊! )
;
◊!◊!) *
}
ÿ!ÿ! 	
void
ﬁ!ﬁ! 
SetMeshFilters
ﬁ!ﬁ! 
(
ﬁ!ﬁ! 
bool
ﬁ!ﬁ!  
state
ﬁ!ﬁ!! &
)
ﬁ!ﬁ!& '
{
ﬂ!ﬂ! 	
if
·!·! 
(
·!·! 
m_meshFilter
·!·! 
!=
·!·! 
null
·!·!  $
)
·!·!$ %
{
‚!‚! 
if
„!„! 
(
„!„! 
state
„!„! 
)
„!„! 
m_meshFilter
‰!‰!  
.
‰!‰!  !

sharedMesh
‰!‰!! +
=
‰!‰!, -
m_mesh
‰!‰!. 4
;
‰!‰!4 5
else
Â!Â! 
m_meshFilter
Ê!Ê!  
.
Ê!Ê!  !

sharedMesh
Ê!Ê!! +
=
Ê!Ê!, -
null
Ê!Ê!. 2
;
Ê!Ê!2 3
}
Á!Á! 
for
È!È! 
(
È!È! 
int
È!È! 
i
È!È! 
=
È!È! 
$num
È!È! 
;
È!È! 
i
È!È! 
<
È!È! 
m_subTextObjects
È!È!  0
.
È!È!0 1
Length
È!È!1 7
&&
È!È!8 :
m_subTextObjects
È!È!; K
[
È!È!K L
i
È!È!L M
]
È!È!M N
!=
È!È!O Q
null
È!È!R V
;
È!È!V W
i
È!È!X Y
++
È!È!Y [
)
È!È![ \
{
Í!Í! 
if
Î!Î! 
(
Î!Î! 
m_subTextObjects
Î!Î! $
[
Î!Î!$ %
i
Î!Î!% &
]
Î!Î!& '
.
Î!Î!' (

meshFilter
Î!Î!( 2
!=
Î!Î!3 5
null
Î!Î!6 :
)
Î!Î!: ;
{
Ï!Ï! 
if
Ì!Ì! 
(
Ì!Ì! 
state
Ì!Ì! 
)
Ì!Ì! 
m_subTextObjects
Ó!Ó! (
[
Ó!Ó!( )
i
Ó!Ó!) *
]
Ó!Ó!* +
.
Ó!Ó!+ ,

meshFilter
Ó!Ó!, 6
.
Ó!Ó!6 7

sharedMesh
Ó!Ó!7 A
=
Ó!Ó!B C
m_subTextObjects
Ó!Ó!D T
[
Ó!Ó!T U
i
Ó!Ó!U V
]
Ó!Ó!V W
.
Ó!Ó!W X
mesh
Ó!Ó!X \
;
Ó!Ó!\ ]
else
Ô!Ô! 
m_subTextObjects
!! (
[
!!( )
i
!!) *
]
!!* +
.
!!+ ,

meshFilter
!!, 6
.
!!6 7

sharedMesh
!!7 A
=
!!B C
null
!!D H
;
!!H I
}
Ò!Ò! 
}
Ú!Ú! 
}
Û!Û! 	
	protected
˙!˙! 
override
˙!˙! 
void
˙!˙!  
SetActiveSubMeshes
˙!˙!  2
(
˙!˙!2 3
bool
˙!˙!3 7
state
˙!˙!8 =
)
˙!˙!= >
{
˚!˚! 	
for
¸!¸! 
(
¸!¸! 
int
¸!¸! 
i
¸!¸! 
=
¸!¸! 
$num
¸!¸! 
;
¸!¸! 
i
¸!¸! 
<
¸!¸! 
m_subTextObjects
¸!¸!  0
.
¸!¸!0 1
Length
¸!¸!1 7
&&
¸!¸!8 :
m_subTextObjects
¸!¸!; K
[
¸!¸!K L
i
¸!¸!L M
]
¸!¸!M N
!=
¸!¸!O Q
null
¸!¸!R V
;
¸!¸!V W
i
¸!¸!X Y
++
¸!¸!Y [
)
¸!¸![ \
{
˝!˝! 
if
˛!˛! 
(
˛!˛! 
m_subTextObjects
˛!˛! $
[
˛!˛!$ %
i
˛!˛!% &
]
˛!˛!& '
.
˛!˛!' (
enabled
˛!˛!( /
!=
˛!˛!0 2
state
˛!˛!3 8
)
˛!˛!8 9
m_subTextObjects
ˇ!ˇ! $
[
ˇ!ˇ!$ %
i
ˇ!ˇ!% &
]
ˇ!ˇ!& '
.
ˇ!ˇ!' (
enabled
ˇ!ˇ!( /
=
ˇ!ˇ!0 1
state
ˇ!ˇ!2 7
;
ˇ!ˇ!7 8
}
Ä"Ä" 
}
Å"Å" 	
	protected
É"É" 
void
É"É" -
SetActiveSubTextObjectRenderers
É"É" 6
(
É"É"6 7
bool
É"É"7 ;
state
É"É"< A
)
É"É"A B
{
Ñ"Ñ" 	
for
Ö"Ö" 
(
Ö"Ö" 
int
Ö"Ö" 
i
Ö"Ö" 
=
Ö"Ö" 
$num
Ö"Ö" 
;
Ö"Ö" 
i
Ö"Ö" 
<
Ö"Ö" 
m_subTextObjects
Ö"Ö"  0
.
Ö"Ö"0 1
Length
Ö"Ö"1 7
&&
Ö"Ö"8 :
m_subTextObjects
Ö"Ö"; K
[
Ö"Ö"K L
i
Ö"Ö"L M
]
Ö"Ö"M N
!=
Ö"Ö"O Q
null
Ö"Ö"R V
;
Ö"Ö"V W
i
Ö"Ö"X Y
++
Ö"Ö"Y [
)
Ö"Ö"[ \
{
Ü"Ü" 
Renderer
á"á" 
renderer
á"á" !
=
á"á"" #
m_subTextObjects
á"á"$ 4
[
á"á"4 5
i
á"á"5 6
]
á"á"6 7
.
á"á"7 8
renderer
á"á"8 @
;
á"á"@ A
if
â"â" 
(
â"â" 
renderer
â"â" 
!=
â"â" 
null
â"â"  $
&&
â"â"% '
renderer
â"â"( 0
.
â"â"0 1
enabled
â"â"1 8
!=
â"â"9 ;
state
â"â"< A
)
â"â"A B
renderer
ä"ä" 
.
ä"ä" 
enabled
ä"ä" $
=
ä"ä"% &
state
ä"ä"' ,
;
ä"ä", -
}
ã"ã" 
}
å"å" 	
	protected
í"í" 
override
í"í" 
void
í"í" #
DestroySubMeshObjects
í"í"  5
(
í"í"5 6
)
í"í"6 7
{
ì"ì" 	
for
î"î" 
(
î"î" 
int
î"î" 
i
î"î" 
=
î"î" 
$num
î"î" 
;
î"î" 
i
î"î" 
<
î"î" 
m_subTextObjects
î"î"  0
.
î"î"0 1
Length
î"î"1 7
&&
î"î"8 :
m_subTextObjects
î"î"; K
[
î"î"K L
i
î"î"L M
]
î"î"M N
!=
î"î"O Q
null
î"î"R V
;
î"î"V W
i
î"î"X Y
++
î"î"Y [
)
î"î"[ \
DestroyImmediate
ï"ï"  
(
ï"ï"  !
m_subTextObjects
ï"ï"! 1
[
ï"ï"1 2
i
ï"ï"2 3
]
ï"ï"3 4
)
ï"ï"4 5
;
ï"ï"5 6
}
ñ"ñ" 	
	protected
ù"ù" 
override
ù"ù" 
Bounds
ù"ù" !
GetCompoundBounds
ù"ù"" 3
(
ù"ù"3 4
)
ù"ù"4 5
{
û"û" 	
Bounds
ü"ü" 

mainBounds
ü"ü" 
=
ü"ü" 
m_mesh
ü"ü"  &
.
ü"ü"& '
bounds
ü"ü"' -
;
ü"ü"- .
Vector3
†"†" 
min
†"†" 
=
†"†" 

mainBounds
†"†" $
.
†"†"$ %
min
†"†"% (
;
†"†"( )
Vector3
°"°" 
max
°"°" 
=
°"°" 

mainBounds
°"°" $
.
°"°"$ %
max
°"°"% (
;
°"°"( )
for
£"£" 
(
£"£" 
int
£"£" 
i
£"£" 
=
£"£" 
$num
£"£" 
;
£"£" 
i
£"£" 
<
£"£" 
m_subTextObjects
£"£"  0
.
£"£"0 1
Length
£"£"1 7
&&
£"£"8 :
m_subTextObjects
£"£"; K
[
£"£"K L
i
£"£"L M
]
£"£"M N
!=
£"£"O Q
null
£"£"R V
;
£"£"V W
i
£"£"X Y
++
£"£"Y [
)
£"£"[ \
{
§"§" 
Bounds
•"•" 
	subBounds
•"•"  
=
•"•"! "
m_subTextObjects
•"•"# 3
[
•"•"3 4
i
•"•"4 5
]
•"•"5 6
.
•"•"6 7
mesh
•"•"7 ;
.
•"•"; <
bounds
•"•"< B
;
•"•"B C
min
¶"¶" 
.
¶"¶" 
x
¶"¶" 
=
¶"¶" 
min
¶"¶" 
.
¶"¶" 
x
¶"¶" 
<
¶"¶" 
	subBounds
¶"¶"  )
.
¶"¶") *
min
¶"¶"* -
.
¶"¶"- .
x
¶"¶". /
?
¶"¶"0 1
min
¶"¶"2 5
.
¶"¶"5 6
x
¶"¶"6 7
:
¶"¶"8 9
	subBounds
¶"¶": C
.
¶"¶"C D
min
¶"¶"D G
.
¶"¶"G H
x
¶"¶"H I
;
¶"¶"I J
min
ß"ß" 
.
ß"ß" 
y
ß"ß" 
=
ß"ß" 
min
ß"ß" 
.
ß"ß" 
y
ß"ß" 
<
ß"ß" 
	subBounds
ß"ß"  )
.
ß"ß") *
min
ß"ß"* -
.
ß"ß"- .
y
ß"ß". /
?
ß"ß"0 1
min
ß"ß"2 5
.
ß"ß"5 6
y
ß"ß"6 7
:
ß"ß"8 9
	subBounds
ß"ß": C
.
ß"ß"C D
min
ß"ß"D G
.
ß"ß"G H
y
ß"ß"H I
;
ß"ß"I J
max
©"©" 
.
©"©" 
x
©"©" 
=
©"©" 
max
©"©" 
.
©"©" 
x
©"©" 
>
©"©" 
	subBounds
©"©"  )
.
©"©") *
max
©"©"* -
.
©"©"- .
x
©"©". /
?
©"©"0 1
max
©"©"2 5
.
©"©"5 6
x
©"©"6 7
:
©"©"8 9
	subBounds
©"©": C
.
©"©"C D
max
©"©"D G
.
©"©"G H
x
©"©"H I
;
©"©"I J
max
™"™" 
.
™"™" 
y
™"™" 
=
™"™" 
max
™"™" 
.
™"™" 
y
™"™" 
>
™"™" 
	subBounds
™"™"  )
.
™"™") *
max
™"™"* -
.
™"™"- .
y
™"™". /
?
™"™"0 1
max
™"™"2 5
.
™"™"5 6
y
™"™"6 7
:
™"™"8 9
	subBounds
™"™": C
.
™"™"C D
max
™"™"D G
.
™"™"G H
y
™"™"H I
;
™"™"I J
}
´"´" 
Vector3
≠"≠" 
center
≠"≠" 
=
≠"≠" 
(
≠"≠" 
min
≠"≠" !
+
≠"≠"" #
max
≠"≠"$ '
)
≠"≠"' (
/
≠"≠") *
$num
≠"≠"+ ,
;
≠"≠", -
Vector2
Æ"Æ" 
size
Æ"Æ" 
=
Æ"Æ" 
max
Æ"Æ" 
-
Æ"Æ"  
min
Æ"Æ"! $
;
Æ"Æ"$ %
return
Ø"Ø" 
new
Ø"Ø" 
Bounds
Ø"Ø" 
(
Ø"Ø" 
center
Ø"Ø" $
,
Ø"Ø"$ %
size
Ø"Ø"& *
)
Ø"Ø"* +
;
Ø"Ø"+ ,
}
∞"∞" 	
void
›"›" 
UpdateSDFScale
›"›" 
(
›"›" 
float
›"›" !

scaleDelta
›"›"" ,
)
›"›", -
{
ﬁ"ﬁ" 	
if
ﬂ"ﬂ" 
(
ﬂ"ﬂ" 

scaleDelta
ﬂ"ﬂ" 
==
ﬂ"ﬂ" 
$num
ﬂ"ﬂ" 
||
ﬂ"ﬂ"  "

scaleDelta
ﬂ"ﬂ"# -
==
ﬂ"ﬂ". 0
float
ﬂ"ﬂ"1 6
.
ﬂ"ﬂ"6 7
PositiveInfinity
ﬂ"ﬂ"7 G
||
ﬂ"ﬂ"H J

scaleDelta
ﬂ"ﬂ"K U
==
ﬂ"ﬂ"V X
float
ﬂ"ﬂ"Y ^
.
ﬂ"ﬂ"^ _
NegativeInfinity
ﬂ"ﬂ"_ o
)
ﬂ"ﬂ"o p
{
‡"‡" %
m_havePropertiesChanged
·"·" '
=
·"·"( )
true
·"·"* .
;
·"·". /
OnPreRenderObject
‚"‚" !
(
‚"‚"! "
)
‚"‚"" #
;
‚"‚"# $
return
„"„" 
;
„"„" 
}
‰"‰" 
for
Ê"Ê" 
(
Ê"Ê" 
int
Ê"Ê" 
materialIndex
Ê"Ê" "
=
Ê"Ê"# $
$num
Ê"Ê"% &
;
Ê"Ê"& '
materialIndex
Ê"Ê"( 5
<
Ê"Ê"6 7

m_textInfo
Ê"Ê"8 B
.
Ê"Ê"B C
materialCount
Ê"Ê"C P
;
Ê"Ê"P Q
materialIndex
Ê"Ê"R _
++
Ê"Ê"_ a
)
Ê"Ê"a b
{
Á"Á" 
TMP_MeshInfo
Ë"Ë" 
meshInfo
Ë"Ë" %
=
Ë"Ë"& '

m_textInfo
Ë"Ë"( 2
.
Ë"Ë"2 3
meshInfo
Ë"Ë"3 ;
[
Ë"Ë"; <
materialIndex
Ë"Ë"< I
]
Ë"Ë"I J
;
Ë"Ë"J K
for
Í"Í" 
(
Í"Í" 
int
Í"Í" 
i
Í"Í" 
=
Í"Í" 
$num
Í"Í" 
;
Í"Í" 
i
Í"Í"  !
<
Í"Í"" #
meshInfo
Í"Í"$ ,
.
Í"Í", -
uvs2
Í"Í"- 1
.
Í"Í"1 2
Length
Í"Í"2 8
;
Í"Í"8 9
i
Í"Í": ;
++
Í"Í"; =
)
Í"Í"= >
{
Î"Î" 
meshInfo
Ï"Ï" 
.
Ï"Ï" 
uvs2
Ï"Ï" !
[
Ï"Ï"! "
i
Ï"Ï"" #
]
Ï"Ï"# $
.
Ï"Ï"$ %
y
Ï"Ï"% &
*=
Ï"Ï"' )
Mathf
Ï"Ï"* /
.
Ï"Ï"/ 0
Abs
Ï"Ï"0 3
(
Ï"Ï"3 4

scaleDelta
Ï"Ï"4 >
)
Ï"Ï"> ?
;
Ï"Ï"? @
}
Ì"Ì" 
}
Ó"Ó" 
for
Ò"Ò" 
(
Ò"Ò" 
int
Ò"Ò" 
i
Ò"Ò" 
=
Ò"Ò" 
$num
Ò"Ò" 
;
Ò"Ò" 
i
Ò"Ò" 
<
Ò"Ò" 

m_textInfo
Ò"Ò"  *
.
Ò"Ò"* +
meshInfo
Ò"Ò"+ 3
.
Ò"Ò"3 4
Length
Ò"Ò"4 :
;
Ò"Ò": ;
i
Ò"Ò"< =
++
Ò"Ò"= ?
)
Ò"Ò"? @
{
Ú"Ú" 
if
Û"Û" 
(
Û"Û" 
i
Û"Û" 
==
Û"Û" 
$num
Û"Û" 
)
Û"Û" 
m_mesh
Ù"Ù" 
.
Ù"Ù" 
uv2
Ù"Ù" 
=
Ù"Ù"  

m_textInfo
Ù"Ù"! +
.
Ù"Ù"+ ,
meshInfo
Ù"Ù", 4
[
Ù"Ù"4 5
$num
Ù"Ù"5 6
]
Ù"Ù"6 7
.
Ù"Ù"7 8
uvs2
Ù"Ù"8 <
;
Ù"Ù"< =
else
ı"ı" 
m_subTextObjects
ˆ"ˆ" $
[
ˆ"ˆ"$ %
i
ˆ"ˆ"% &
]
ˆ"ˆ"& '
.
ˆ"ˆ"' (
mesh
ˆ"ˆ"( ,
.
ˆ"ˆ", -
uv2
ˆ"ˆ"- 0
=
ˆ"ˆ"1 2

m_textInfo
ˆ"ˆ"3 =
.
ˆ"ˆ"= >
meshInfo
ˆ"ˆ"> F
[
ˆ"ˆ"F G
i
ˆ"ˆ"G H
]
ˆ"ˆ"H I
.
ˆ"ˆ"I J
uvs2
ˆ"ˆ"J N
;
ˆ"ˆ"N O
}
˜"˜" 
}
¯"¯" 	
}
˙"˙" 
}˚"˚" ‡Â
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_ShaderUtilities.cs
	namespace 	
TMPro
 
{ 
public 

static 
class 
ShaderUtilities '
{		 
public 
static 
int 

ID_MainTex $
;$ %
public 
static 
int 

ID_FaceTex $
;$ %
public 
static 
int 
ID_FaceColor &
;& '
public 
static 
int 
ID_FaceDilate '
;' (
public 
static 
int 
ID_Shininess &
;& '
public 
static 
int 
ID_UnderlayColor *
;* +
public 
static 
int 
ID_UnderlayOffsetX ,
;, -
public 
static 
int 
ID_UnderlayOffsetY ,
;, -
public 
static 
int 
ID_UnderlayDilate +
;+ ,
public 
static 
int 
ID_UnderlaySoftness -
;- .
public 
static 
int 
ID_WeightNormal )
;) *
public 
static 
int 
ID_WeightBold '
;' (
public 
static 
int 
ID_OutlineTex '
;' (
public 
static 
int 
ID_OutlineWidth )
;) *
public 
static 
int 
ID_OutlineSoftness ,
;, -
public 
static 
int 
ID_OutlineColor )
;) *
public   
static   
int   
ID_Outline2Color   *
;  * +
public!! 
static!! 
int!! 
ID_Outline2Width!! *
;!!* +
public## 
static## 
int## 

ID_Padding## $
;##$ %
public$$ 
static$$ 
int$$ 
ID_GradientScale$$ *
;$$* +
public%% 
static%% 
int%% 
	ID_ScaleX%% #
;%%# $
public&& 
static&& 
int&& 
	ID_ScaleY&& #
;&&# $
public'' 
static'' 
int''  
ID_PerspectiveFilter'' .
;''. /
public(( 
static(( 
int(( 
ID_Sharpness(( &
;((& '
public** 
static** 
int** 
ID_TextureWidth** )
;**) *
public++ 
static++ 
int++ 
ID_TextureHeight++ *
;++* +
public-- 
static-- 
int-- 
ID_BevelAmount-- (
;--( )
public// 
static// 
int// 
ID_GlowColor// &
;//& '
public00 
static00 
int00 
ID_GlowOffset00 '
;00' (
public11 
static11 
int11 
ID_GlowPower11 &
;11& '
public22 
static22 
int22 
ID_GlowOuter22 &
;22& '
public33 
static33 
int33 
ID_GlowInner33 &
;33& '
public55 
static55 
int55 
ID_LightAngle55 '
;55' (
public77 
static77 
int77 
	ID_EnvMap77 #
;77# $
public88 
static88 
int88 
ID_EnvMatrix88 &
;88& '
public99 
static99 
int99  
ID_EnvMatrixRotation99 .
;99. /
public<< 
static<< 
int<< 
ID_MaskCoord<< &
;<<& '
public== 
static== 
int== 
ID_ClipRect== %
;==% &
public>> 
static>> 
int>> 
ID_MaskSoftnessX>> *
;>>* +
public?? 
static?? 
int?? 
ID_MaskSoftnessY?? *
;??* +
public@@ 
static@@ 
int@@ 
ID_VertexOffsetX@@ *
;@@* +
publicAA 
staticAA 
intAA 
ID_VertexOffsetYAA *
;AA* +
publicBB 
staticBB 
intBB 
ID_UseClipRectBB (
;BB( )
publicDD 
staticDD 
intDD 
ID_StencilIDDD &
;DD& '
publicEE 
staticEE 
intEE 
ID_StencilOpEE &
;EE& '
publicFF 
staticFF 
intFF 
ID_StencilCompFF (
;FF( )
publicGG 
staticGG 
intGG 
ID_StencilReadMaskGG ,
;GG, -
publicHH 
staticHH 
intHH 
ID_StencilWriteMaskHH -
;HH- .
publicJJ 
staticJJ 
intJJ 
ID_ShaderFlagsJJ (
;JJ( )
publicKK 
staticKK 
intKK 
ID_ScaleRatio_AKK )
;KK) *
publicLL 
staticLL 
intLL 
ID_ScaleRatio_BLL )
;LL) *
publicMM 
staticMM 
intMM 
ID_ScaleRatio_CMM )
;MM) *
publicOO 
staticOO 
stringOO 
Keyword_BevelOO *
=OO+ ,
$strOO- 7
;OO7 8
publicPP 
staticPP 
stringPP 
Keyword_GlowPP )
=PP* +
$strPP, 5
;PP5 6
publicQQ 
staticQQ 
stringQQ 
Keyword_UnderlayQQ -
=QQ. /
$strQQ0 =
;QQ= >
publicRR 
staticRR 
stringRR 
Keyword_RatiosRR +
=RR, -
$strRR. :
;RR: ;
publicTT 
staticTT 
stringTT 
Keyword_MASK_SOFTTT .
=TT/ 0
$strTT1 <
;TT< =
publicUU 
staticUU 
stringUU 
Keyword_MASK_HARDUU .
=UU/ 0
$strUU1 <
;UU< =
publicVV 
staticVV 
stringVV 
Keyword_MASK_TEXVV -
=VV. /
$strVV0 :
;VV: ;
publicWW 
staticWW 
stringWW 
Keyword_OutlineWW ,
=WW- .
$strWW/ ;
;WW; <
publicYY 
staticYY 
stringYY 
ShaderTag_ZTestModeYY 0
=YY1 2
$strYY3 G
;YYG H
publicZZ 
staticZZ 
stringZZ 
ShaderTag_CullModeZZ /
=ZZ0 1
$strZZ2 =
;ZZ= >
private\\ 
static\\ 
float\\ 
m_clamp\\ $
=\\% &
$num\\' +
;\\+ ,
public]] 
static]] 
bool]] 
isInitialized]] (
=]]) *
false]]+ 0
;]]0 1
internalcc 
staticcc 
Shadercc 
ShaderRef_MobileSDFcc 2
{dd 	
getee 
{ff 
ifgg 
(gg !
k_ShaderRef_MobileSDFgg )
==gg* ,
nullgg- 1
)gg1 2!
k_ShaderRef_MobileSDFhh )
=hh* +
Shaderhh, 2
.hh2 3
Findhh3 7
(hh7 8
$strhh8 [
)hh[ \
;hh\ ]
returnjj !
k_ShaderRef_MobileSDFjj ,
;jj, -
}kk 
}ll 	
staticmm 
Shadermm !
k_ShaderRef_MobileSDFmm +
;mm+ ,
internalrr 
staticrr 
Shaderrr "
ShaderRef_MobileBitmaprr 5
{ss 	
gettt 
{uu 
ifvv 
(vv $
k_ShaderRef_MobileBitmapvv ,
==vv- /
nullvv0 4
)vv4 5$
k_ShaderRef_MobileBitmapww ,
=ww- .
Shaderww/ 5
.ww5 6
Findww6 :
(ww: ;
$strww; V
)wwV W
;wwW X
returnyy $
k_ShaderRef_MobileBitmapyy /
;yy/ 0
}zz 
}{{ 	
static|| 
Shader|| $
k_ShaderRef_MobileBitmap|| .
;||. /
static
ÇÇ 
ShaderUtilities
ÇÇ 
(
ÇÇ 
)
ÇÇ  
{
ÉÉ 	"
GetShaderPropertyIDs
ÑÑ  
(
ÑÑ  !
)
ÑÑ! "
;
ÑÑ" #
}
ÖÖ 	
public
ää 
static
ää 
void
ää "
GetShaderPropertyIDs
ää /
(
ää/ 0
)
ää0 1
{
ãã 	
if
åå 
(
åå 
isInitialized
åå 
==
åå  
false
åå! &
)
åå& '
{
çç 
isInitialized
èè 
=
èè 
true
èè  $
;
èè$ %

ID_MainTex
ëë 
=
ëë 
Shader
ëë #
.
ëë# $
PropertyToID
ëë$ 0
(
ëë0 1
$str
ëë1 ;
)
ëë; <
;
ëë< =

ID_FaceTex
ìì 
=
ìì 
Shader
ìì #
.
ìì# $
PropertyToID
ìì$ 0
(
ìì0 1
$str
ìì1 ;
)
ìì; <
;
ìì< =
ID_FaceColor
îî 
=
îî 
Shader
îî %
.
îî% &
PropertyToID
îî& 2
(
îî2 3
$str
îî3 ?
)
îî? @
;
îî@ A
ID_FaceDilate
ïï 
=
ïï 
Shader
ïï  &
.
ïï& '
PropertyToID
ïï' 3
(
ïï3 4
$str
ïï4 A
)
ïïA B
;
ïïB C
ID_Shininess
ññ 
=
ññ 
Shader
ññ %
.
ññ% &
PropertyToID
ññ& 2
(
ññ2 3
$str
ññ3 C
)
ññC D
;
ññD E
ID_UnderlayColor
òò  
=
òò! "
Shader
òò# )
.
òò) *
PropertyToID
òò* 6
(
òò6 7
$str
òò7 G
)
òòG H
;
òòH I 
ID_UnderlayOffsetX
ôô "
=
ôô# $
Shader
ôô% +
.
ôô+ ,
PropertyToID
ôô, 8
(
ôô8 9
$str
ôô9 K
)
ôôK L
;
ôôL M 
ID_UnderlayOffsetY
öö "
=
öö# $
Shader
öö% +
.
öö+ ,
PropertyToID
öö, 8
(
öö8 9
$str
öö9 K
)
ööK L
;
ööL M
ID_UnderlayDilate
õõ !
=
õõ" #
Shader
õõ$ *
.
õõ* +
PropertyToID
õõ+ 7
(
õõ7 8
$str
õõ8 I
)
õõI J
;
õõJ K!
ID_UnderlaySoftness
úú #
=
úú$ %
Shader
úú& ,
.
úú, -
PropertyToID
úú- 9
(
úú9 :
$str
úú: M
)
úúM N
;
úúN O
ID_WeightNormal
ûû 
=
ûû  !
Shader
ûû" (
.
ûû( )
PropertyToID
ûû) 5
(
ûû5 6
$str
ûû6 E
)
ûûE F
;
ûûF G
ID_WeightBold
üü 
=
üü 
Shader
üü  &
.
üü& '
PropertyToID
üü' 3
(
üü3 4
$str
üü4 A
)
üüA B
;
üüB C
ID_OutlineTex
°° 
=
°° 
Shader
°°  &
.
°°& '
PropertyToID
°°' 3
(
°°3 4
$str
°°4 A
)
°°A B
;
°°B C
ID_OutlineWidth
¢¢ 
=
¢¢  !
Shader
¢¢" (
.
¢¢( )
PropertyToID
¢¢) 5
(
¢¢5 6
$str
¢¢6 E
)
¢¢E F
;
¢¢F G 
ID_OutlineSoftness
££ "
=
££# $
Shader
££% +
.
££+ ,
PropertyToID
££, 8
(
££8 9
$str
££9 K
)
££K L
;
££L M
ID_OutlineColor
§§ 
=
§§  !
Shader
§§" (
.
§§( )
PropertyToID
§§) 5
(
§§5 6
$str
§§6 E
)
§§E F
;
§§F G
ID_Outline2Color
¶¶  
=
¶¶! "
Shader
¶¶# )
.
¶¶) *
PropertyToID
¶¶* 6
(
¶¶6 7
$str
¶¶7 G
)
¶¶G H
;
¶¶H I
ID_Outline2Width
ßß  
=
ßß! "
Shader
ßß# )
.
ßß) *
PropertyToID
ßß* 6
(
ßß6 7
$str
ßß7 G
)
ßßG H
;
ßßH I

ID_Padding
©© 
=
©© 
Shader
©© #
.
©©# $
PropertyToID
©©$ 0
(
©©0 1
$str
©©1 ;
)
©©; <
;
©©< =
ID_GradientScale
™™  
=
™™! "
Shader
™™# )
.
™™) *
PropertyToID
™™* 6
(
™™6 7
$str
™™7 G
)
™™G H
;
™™H I
	ID_ScaleX
´´ 
=
´´ 
Shader
´´ "
.
´´" #
PropertyToID
´´# /
(
´´/ 0
$str
´´0 9
)
´´9 :
;
´´: ;
	ID_ScaleY
¨¨ 
=
¨¨ 
Shader
¨¨ "
.
¨¨" #
PropertyToID
¨¨# /
(
¨¨/ 0
$str
¨¨0 9
)
¨¨9 :
;
¨¨: ;"
ID_PerspectiveFilter
≠≠ $
=
≠≠% &
Shader
≠≠' -
.
≠≠- .
PropertyToID
≠≠. :
(
≠≠: ;
$str
≠≠; O
)
≠≠O P
;
≠≠P Q
ID_Sharpness
ÆÆ 
=
ÆÆ 
Shader
ÆÆ %
.
ÆÆ% &
PropertyToID
ÆÆ& 2
(
ÆÆ2 3
$str
ÆÆ3 ?
)
ÆÆ? @
;
ÆÆ@ A
ID_TextureWidth
∞∞ 
=
∞∞  !
Shader
∞∞" (
.
∞∞( )
PropertyToID
∞∞) 5
(
∞∞5 6
$str
∞∞6 E
)
∞∞E F
;
∞∞F G
ID_TextureHeight
±±  
=
±±! "
Shader
±±# )
.
±±) *
PropertyToID
±±* 6
(
±±6 7
$str
±±7 G
)
±±G H
;
±±H I
ID_BevelAmount
≥≥ 
=
≥≥  
Shader
≥≥! '
.
≥≥' (
PropertyToID
≥≥( 4
(
≥≥4 5
$str
≥≥5 =
)
≥≥= >
;
≥≥> ?
ID_LightAngle
µµ 
=
µµ 
Shader
µµ  &
.
µµ& '
PropertyToID
µµ' 3
(
µµ3 4
$str
µµ4 A
)
µµA B
;
µµB C
	ID_EnvMap
∑∑ 
=
∑∑ 
Shader
∑∑ "
.
∑∑" #
PropertyToID
∑∑# /
(
∑∑/ 0
$str
∑∑0 7
)
∑∑7 8
;
∑∑8 9
ID_EnvMatrix
∏∏ 
=
∏∏ 
Shader
∏∏ %
.
∏∏% &
PropertyToID
∏∏& 2
(
∏∏2 3
$str
∏∏3 ?
)
∏∏? @
;
∏∏@ A"
ID_EnvMatrixRotation
ππ $
=
ππ% &
Shader
ππ' -
.
ππ- .
PropertyToID
ππ. :
(
ππ: ;
$str
ππ; O
)
ππO P
;
ππP Q
ID_GlowColor
ºº 
=
ºº 
Shader
ºº %
.
ºº% &
PropertyToID
ºº& 2
(
ºº2 3
$str
ºº3 ?
)
ºº? @
;
ºº@ A
ID_GlowOffset
ΩΩ 
=
ΩΩ 
Shader
ΩΩ  &
.
ΩΩ& '
PropertyToID
ΩΩ' 3
(
ΩΩ3 4
$str
ΩΩ4 A
)
ΩΩA B
;
ΩΩB C
ID_GlowPower
ææ 
=
ææ 
Shader
ææ %
.
ææ% &
PropertyToID
ææ& 2
(
ææ2 3
$str
ææ3 ?
)
ææ? @
;
ææ@ A
ID_GlowOuter
øø 
=
øø 
Shader
øø %
.
øø% &
PropertyToID
øø& 2
(
øø2 3
$str
øø3 ?
)
øø? @
;
øø@ A
ID_GlowInner
¿¿ 
=
¿¿ 
Shader
¿¿ %
.
¿¿% &
PropertyToID
¿¿& 2
(
¿¿2 3
$str
¿¿3 ?
)
¿¿? @
;
¿¿@ A
ID_MaskCoord
√√ 
=
√√ 
Shader
√√ %
.
√√% &
PropertyToID
√√& 2
(
√√2 3
$str
√√3 ?
)
√√? @
;
√√@ A
ID_ClipRect
ƒƒ 
=
ƒƒ 
Shader
ƒƒ $
.
ƒƒ$ %
PropertyToID
ƒƒ% 1
(
ƒƒ1 2
$str
ƒƒ2 =
)
ƒƒ= >
;
ƒƒ> ?
ID_UseClipRect
≈≈ 
=
≈≈  
Shader
≈≈! '
.
≈≈' (
PropertyToID
≈≈( 4
(
≈≈4 5
$str
≈≈5 C
)
≈≈C D
;
≈≈D E
ID_MaskSoftnessX
∆∆  
=
∆∆! "
Shader
∆∆# )
.
∆∆) *
PropertyToID
∆∆* 6
(
∆∆6 7
$str
∆∆7 G
)
∆∆G H
;
∆∆H I
ID_MaskSoftnessY
««  
=
««! "
Shader
««# )
.
««) *
PropertyToID
««* 6
(
««6 7
$str
««7 G
)
««G H
;
««H I
ID_VertexOffsetX
»»  
=
»»! "
Shader
»»# )
.
»») *
PropertyToID
»»* 6
(
»»6 7
$str
»»7 G
)
»»G H
;
»»H I
ID_VertexOffsetY
……  
=
……! "
Shader
……# )
.
……) *
PropertyToID
……* 6
(
……6 7
$str
……7 G
)
……G H
;
……H I
ID_StencilID
ÀÀ 
=
ÀÀ 
Shader
ÀÀ %
.
ÀÀ% &
PropertyToID
ÀÀ& 2
(
ÀÀ2 3
$str
ÀÀ3 =
)
ÀÀ= >
;
ÀÀ> ?
ID_StencilOp
ÃÃ 
=
ÃÃ 
Shader
ÃÃ %
.
ÃÃ% &
PropertyToID
ÃÃ& 2
(
ÃÃ2 3
$str
ÃÃ3 ?
)
ÃÃ? @
;
ÃÃ@ A
ID_StencilComp
ÕÕ 
=
ÕÕ  
Shader
ÕÕ! '
.
ÕÕ' (
PropertyToID
ÕÕ( 4
(
ÕÕ4 5
$str
ÕÕ5 C
)
ÕÕC D
;
ÕÕD E 
ID_StencilReadMask
ŒŒ "
=
ŒŒ# $
Shader
ŒŒ% +
.
ŒŒ+ ,
PropertyToID
ŒŒ, 8
(
ŒŒ8 9
$str
ŒŒ9 K
)
ŒŒK L
;
ŒŒL M!
ID_StencilWriteMask
œœ #
=
œœ$ %
Shader
œœ& ,
.
œœ, -
PropertyToID
œœ- 9
(
œœ9 :
$str
œœ: M
)
œœM N
;
œœN O
ID_ShaderFlags
—— 
=
——  
Shader
——! '
.
——' (
PropertyToID
——( 4
(
——4 5
$str
——5 C
)
——C D
;
——D E
ID_ScaleRatio_A
““ 
=
““  !
Shader
““" (
.
““( )
PropertyToID
““) 5
(
““5 6
$str
““6 D
)
““D E
;
““E F
ID_ScaleRatio_B
”” 
=
””  !
Shader
””" (
.
””( )
PropertyToID
””) 5
(
””5 6
$str
””6 D
)
””D E
;
””E F
ID_ScaleRatio_C
‘‘ 
=
‘‘  !
Shader
‘‘" (
.
‘‘( )
PropertyToID
‘‘) 5
(
‘‘5 6
$str
‘‘6 D
)
‘‘D E
;
‘‘E F
if
◊◊ 
(
◊◊ #
k_ShaderRef_MobileSDF
◊◊ )
==
◊◊* ,
null
◊◊- 1
)
◊◊1 2#
k_ShaderRef_MobileSDF
ÿÿ )
=
ÿÿ* +
Shader
ÿÿ, 2
.
ÿÿ2 3
Find
ÿÿ3 7
(
ÿÿ7 8
$str
ÿÿ8 [
)
ÿÿ[ \
;
ÿÿ\ ]
if
⁄⁄ 
(
⁄⁄ &
k_ShaderRef_MobileBitmap
⁄⁄ ,
==
⁄⁄- /
null
⁄⁄0 4
)
⁄⁄4 5&
k_ShaderRef_MobileBitmap
€€ ,
=
€€- .
Shader
€€/ 5
.
€€5 6
Find
€€6 :
(
€€: ;
$str
€€; V
)
€€V W
;
€€W X
}
‹‹ 
}
›› 	
public
‚‚ 
static
‚‚ 
void
‚‚  
UpdateShaderRatios
‚‚ -
(
‚‚- .
Material
‚‚. 6
mat
‚‚7 :
)
‚‚: ;
{
„„ 	
float
ÊÊ 
ratio_A
ÊÊ 
=
ÊÊ 
$num
ÊÊ 
;
ÊÊ 
float
ÁÁ 
ratio_B
ÁÁ 
=
ÁÁ 
$num
ÁÁ 
;
ÁÁ 
float
ËË 
ratio_C
ËË 
=
ËË 
$num
ËË 
;
ËË 
bool
ÍÍ 
isRatioEnabled
ÍÍ 
=
ÍÍ  !
!
ÍÍ" #
mat
ÍÍ# &
.
ÍÍ& '
shaderKeywords
ÍÍ' 5
.
ÍÍ5 6
Contains
ÍÍ6 >
(
ÍÍ> ?
Keyword_Ratios
ÍÍ? M
)
ÍÍM N
;
ÍÍN O
if
ÏÏ 
(
ÏÏ 
!
ÏÏ 
mat
ÏÏ 
.
ÏÏ 
HasProperty
ÏÏ  
(
ÏÏ  !
ID_GradientScale
ÏÏ! 1
)
ÏÏ1 2
||
ÏÏ3 5
!
ÏÏ6 7
mat
ÏÏ7 :
.
ÏÏ: ;
HasProperty
ÏÏ; F
(
ÏÏF G
ID_FaceDilate
ÏÏG T
)
ÏÏT U
)
ÏÏU V
return
ÌÌ 
;
ÌÌ 
float
 
scale
 
=
 
mat
 
.
 
GetFloat
 &
(
& '
ID_GradientScale
' 7
)
7 8
;
8 9
float
ÒÒ 

faceDilate
ÒÒ 
=
ÒÒ 
mat
ÒÒ "
.
ÒÒ" #
GetFloat
ÒÒ# +
(
ÒÒ+ ,
ID_FaceDilate
ÒÒ, 9
)
ÒÒ9 :
;
ÒÒ: ;
float
ÚÚ 
outlineThickness
ÚÚ "
=
ÚÚ# $
mat
ÚÚ% (
.
ÚÚ( )
GetFloat
ÚÚ) 1
(
ÚÚ1 2
ID_OutlineWidth
ÚÚ2 A
)
ÚÚA B
;
ÚÚB C
float
ÛÛ 
outlineSoftness
ÛÛ !
=
ÛÛ" #
mat
ÛÛ$ '
.
ÛÛ' (
GetFloat
ÛÛ( 0
(
ÛÛ0 1 
ID_OutlineSoftness
ÛÛ1 C
)
ÛÛC D
;
ÛÛD E
float
ıı 
weight
ıı 
=
ıı 
Mathf
ıı  
.
ıı  !
Max
ıı! $
(
ıı$ %
mat
ıı% (
.
ıı( )
GetFloat
ıı) 1
(
ıı1 2
ID_WeightNormal
ıı2 A
)
ııA B
,
ııB C
mat
ııD G
.
ııG H
GetFloat
ııH P
(
ııP Q
ID_WeightBold
ııQ ^
)
ıı^ _
)
ıı_ `
/
ııa b
$num
ııc g
;
ııg h
float
˜˜ 
t
˜˜ 
=
˜˜ 
Mathf
˜˜ 
.
˜˜ 
Max
˜˜ 
(
˜˜  
$num
˜˜  !
,
˜˜! "
weight
˜˜# )
+
˜˜* +

faceDilate
˜˜, 6
+
˜˜7 8
outlineThickness
˜˜9 I
+
˜˜J K
outlineSoftness
˜˜L [
)
˜˜[ \
;
˜˜\ ]
ratio_A
˘˘ 
=
˘˘ 
isRatioEnabled
˘˘ $
?
˘˘% &
(
˘˘' (
scale
˘˘( -
-
˘˘. /
m_clamp
˘˘0 7
)
˘˘7 8
/
˘˘9 :
(
˘˘; <
scale
˘˘< A
*
˘˘B C
t
˘˘D E
)
˘˘E F
:
˘˘G H
$num
˘˘I J
;
˘˘J K
mat
ˇˇ 
.
ˇˇ 
SetFloat
ˇˇ 
(
ˇˇ 
ID_ScaleRatio_A
ˇˇ ,
,
ˇˇ, -
ratio_A
ˇˇ. 5
)
ˇˇ5 6
;
ˇˇ6 7
if
ÇÇ 
(
ÇÇ 
mat
ÇÇ 
.
ÇÇ 
HasProperty
ÇÇ 
(
ÇÇ  
ID_GlowOffset
ÇÇ  -
)
ÇÇ- .
)
ÇÇ. /
{
ÉÉ 
float
ÑÑ 

glowOffset
ÑÑ  
=
ÑÑ! "
mat
ÑÑ# &
.
ÑÑ& '
GetFloat
ÑÑ' /
(
ÑÑ/ 0
ID_GlowOffset
ÑÑ0 =
)
ÑÑ= >
;
ÑÑ> ?
float
ÖÖ 
	glowOuter
ÖÖ 
=
ÖÖ  !
mat
ÖÖ" %
.
ÖÖ% &
GetFloat
ÖÖ& .
(
ÖÖ. /
ID_GlowOuter
ÖÖ/ ;
)
ÖÖ; <
;
ÖÖ< =
float
áá 
range
áá 
=
áá 
(
áá 
weight
áá %
+
áá& '

faceDilate
áá( 2
)
áá2 3
*
áá4 5
(
áá6 7
scale
áá7 <
-
áá= >
m_clamp
áá? F
)
ááF G
;
ááG H
t
ââ 
=
ââ 
Mathf
ââ 
.
ââ 
Max
ââ 
(
ââ 
$num
ââ 
,
ââ  

glowOffset
ââ! +
+
ââ, -
	glowOuter
ââ. 7
)
ââ7 8
;
ââ8 9
ratio_B
ãã 
=
ãã 
isRatioEnabled
ãã (
?
ãã) *
Mathf
ãã+ 0
.
ãã0 1
Max
ãã1 4
(
ãã4 5
$num
ãã5 6
,
ãã6 7
scale
ãã8 =
-
ãã> ?
m_clamp
ãã@ G
-
ããH I
range
ããJ O
)
ããO P
/
ããQ R
(
ããS T
scale
ããT Y
*
ããZ [
t
ãã\ ]
)
ãã] ^
:
ãã_ `
$num
ããa b
;
ããb c
mat
êê 
.
êê 
SetFloat
êê  
(
êê  !
ID_ScaleRatio_B
êê! 0
,
êê0 1
ratio_B
êê2 9
)
êê9 :
;
êê: ;
}
ëë 
if
îî 
(
îî 
mat
îî 
.
îî 
HasProperty
îî 
(
îî   
ID_UnderlayOffsetX
îî  2
)
îî2 3
)
îî3 4
{
ïï 
float
ññ 
underlayOffsetX
ññ %
=
ññ& '
mat
ññ( +
.
ññ+ ,
GetFloat
ññ, 4
(
ññ4 5 
ID_UnderlayOffsetX
ññ5 G
)
ññG H
;
ññH I
float
óó 
underlayOffsetY
óó %
=
óó& '
mat
óó( +
.
óó+ ,
GetFloat
óó, 4
(
óó4 5 
ID_UnderlayOffsetY
óó5 G
)
óóG H
;
óóH I
float
òò 
underlayDilate
òò $
=
òò% &
mat
òò' *
.
òò* +
GetFloat
òò+ 3
(
òò3 4
ID_UnderlayDilate
òò4 E
)
òòE F
;
òòF G
float
ôô 
underlaySoftness
ôô &
=
ôô' (
mat
ôô) ,
.
ôô, -
GetFloat
ôô- 5
(
ôô5 6!
ID_UnderlaySoftness
ôô6 I
)
ôôI J
;
ôôJ K
float
õõ 
range
õõ 
=
õõ 
(
õõ 
weight
õõ %
+
õõ& '

faceDilate
õõ( 2
)
õõ2 3
*
õõ4 5
(
õõ6 7
scale
õõ7 <
-
õõ= >
m_clamp
õõ? F
)
õõF G
;
õõG H
t
ùù 
=
ùù 
Mathf
ùù 
.
ùù 
Max
ùù 
(
ùù 
$num
ùù 
,
ùù  
Mathf
ùù! &
.
ùù& '
Max
ùù' *
(
ùù* +
Mathf
ùù+ 0
.
ùù0 1
Abs
ùù1 4
(
ùù4 5
underlayOffsetX
ùù5 D
)
ùùD E
,
ùùE F
Mathf
ùùG L
.
ùùL M
Abs
ùùM P
(
ùùP Q
underlayOffsetY
ùùQ `
)
ùù` a
)
ùùa b
+
ùùc d
underlayDilate
ùùe s
+
ùùt u
underlaySoftnessùùv Ü
)ùùÜ á
;ùùá à
ratio_C
üü 
=
üü 
isRatioEnabled
üü (
?
üü) *
Mathf
üü+ 0
.
üü0 1
Max
üü1 4
(
üü4 5
$num
üü5 6
,
üü6 7
scale
üü8 =
-
üü> ?
m_clamp
üü@ G
-
üüH I
range
üüJ O
)
üüO P
/
üüQ R
(
üüS T
scale
üüT Y
*
üüZ [
t
üü\ ]
)
üü] ^
:
üü_ `
$num
üüa b
;
üüb c
mat
§§ 
.
§§ 
SetFloat
§§  
(
§§  !
ID_ScaleRatio_C
§§! 0
,
§§0 1
ratio_C
§§2 9
)
§§9 :
;
§§: ;
}
•• 
}
¶¶ 	
public
´´ 
static
´´ 
Vector4
´´ 
GetFontExtent
´´ +
(
´´+ ,
Material
´´, 4
material
´´5 =
)
´´= >
{
¨¨ 	
return
ÆÆ 
Vector4
ÆÆ 
.
ÆÆ 
zero
ÆÆ 
;
ÆÆ  
}
ΩΩ 	
public
¡¡ 
static
¡¡ 
bool
¡¡ 
IsMaskingEnabled
¡¡ +
(
¡¡+ ,
Material
¡¡, 4
material
¡¡5 =
)
¡¡= >
{
¬¬ 	
if
√√ 
(
√√ 
material
√√ 
==
√√ 
null
√√  
||
√√! #
!
√√$ %
material
√√% -
.
√√- .
HasProperty
√√. 9
(
√√9 :
ShaderUtilities
√√: I
.
√√I J
ID_ClipRect
√√J U
)
√√U V
)
√√V W
return
ƒƒ 
false
ƒƒ 
;
ƒƒ 
if
∆∆ 
(
∆∆ 
material
∆∆ 
.
∆∆ 
shaderKeywords
∆∆ '
.
∆∆' (
Contains
∆∆( 0
(
∆∆0 1
ShaderUtilities
∆∆1 @
.
∆∆@ A
Keyword_MASK_SOFT
∆∆A R
)
∆∆R S
||
∆∆T V
material
∆∆W _
.
∆∆_ `
shaderKeywords
∆∆` n
.
∆∆n o
Contains
∆∆o w
(
∆∆w x
ShaderUtilities∆∆x á
.∆∆á à!
Keyword_MASK_HARD∆∆à ô
)∆∆ô ö
||∆∆õ ù
material∆∆û ¶
.∆∆¶ ß
shaderKeywords∆∆ß µ
.∆∆µ ∂
Contains∆∆∂ æ
(∆∆æ ø
ShaderUtilities∆∆ø Œ
.∆∆Œ œ 
Keyword_MASK_TEX∆∆œ ﬂ
)∆∆ﬂ ‡
)∆∆‡ ·
return
«« 
true
«« 
;
«« 
return
…… 
false
…… 
;
…… 
}
   	
public
ŒŒ 
static
ŒŒ 
float
ŒŒ 

GetPadding
ŒŒ &
(
ŒŒ& '
Material
ŒŒ' /
material
ŒŒ0 8
,
ŒŒ8 9
bool
ŒŒ: > 
enableExtraPadding
ŒŒ? Q
,
ŒŒQ R
bool
ŒŒS W
isBold
ŒŒX ^
)
ŒŒ^ _
{
œœ 	
if
““ 
(
““ 
isInitialized
““ 
==
““  
false
““! &
)
““& '"
GetShaderPropertyIDs
”” $
(
””$ %
)
””% &
;
””& '
if
÷÷ 
(
÷÷ 
material
÷÷ 
==
÷÷ 
null
÷÷  
)
÷÷  !
return
÷÷" (
$num
÷÷) *
;
÷÷* +
int
ÿÿ 
extraPadding
ÿÿ 
=
ÿÿ  
enableExtraPadding
ÿÿ 1
?
ÿÿ2 3
$num
ÿÿ4 5
:
ÿÿ6 7
$num
ÿÿ8 9
;
ÿÿ9 :
if
€€ 
(
€€ 
material
€€ 
.
€€ 
HasProperty
€€ $
(
€€$ %
ID_GradientScale
€€% 5
)
€€5 6
==
€€7 9
false
€€: ?
)
€€? @
{
‹‹ 
if
›› 
(
›› 
material
›› 
.
›› 
HasProperty
›› (
(
››( )

ID_Padding
››) 3
)
››3 4
)
››4 5
extraPadding
ﬁﬁ  
+=
ﬁﬁ! #
(
ﬁﬁ$ %
int
ﬁﬁ% (
)
ﬁﬁ( )
material
ﬁﬁ) 1
.
ﬁﬁ1 2
GetFloat
ﬁﬁ2 :
(
ﬁﬁ: ;

ID_Padding
ﬁﬁ; E
)
ﬁﬁE F
;
ﬁﬁF G
return
‡‡ 
extraPadding
‡‡ #
+
‡‡$ %
$num
‡‡& *
;
‡‡* +
}
·· 
Vector4
„„ 
padding
„„ 
=
„„ 
Vector4
„„ %
.
„„% &
zero
„„& *
;
„„* +
Vector4
‰‰ 

maxPadding
‰‰ 
=
‰‰  
Vector4
‰‰! (
.
‰‰( )
zero
‰‰) -
;
‰‰- .
float
ÁÁ 

faceDilate
ÁÁ 
=
ÁÁ 
$num
ÁÁ  
;
ÁÁ  !
float
ËË 
faceSoftness
ËË 
=
ËË  
$num
ËË! "
;
ËË" #
float
ÈÈ 
outlineThickness
ÈÈ "
=
ÈÈ# $
$num
ÈÈ% &
;
ÈÈ& '
float
ÍÍ 
scaleRatio_A
ÍÍ 
=
ÍÍ  
$num
ÍÍ! "
;
ÍÍ" #
float
ÎÎ 
scaleRatio_B
ÎÎ 
=
ÎÎ  
$num
ÎÎ! "
;
ÎÎ" #
float
ÏÏ 
scaleRatio_C
ÏÏ 
=
ÏÏ  
$num
ÏÏ! "
;
ÏÏ" #
float
ÓÓ 

glowOffset
ÓÓ 
=
ÓÓ 
$num
ÓÓ  
;
ÓÓ  !
float
ÔÔ 
	glowOuter
ÔÔ 
=
ÔÔ 
$num
ÔÔ 
;
ÔÔ  
float
ÒÒ 
uniformPadding
ÒÒ  
=
ÒÒ! "
$num
ÒÒ# $
;
ÒÒ$ % 
UpdateShaderRatios
ıı 
(
ıı 
material
ıı '
)
ıı' (
;
ıı( )
string
˜˜ 
[
˜˜ 
]
˜˜ 
shaderKeywords
˜˜ #
=
˜˜$ %
material
˜˜& .
.
˜˜. /
shaderKeywords
˜˜/ =
;
˜˜= >
if
˘˘ 
(
˘˘ 
material
˘˘ 
.
˘˘ 
HasProperty
˘˘ $
(
˘˘$ %
ID_ScaleRatio_A
˘˘% 4
)
˘˘4 5
)
˘˘5 6
scaleRatio_A
˙˙ 
=
˙˙ 
material
˙˙ '
.
˙˙' (
GetFloat
˙˙( 0
(
˙˙0 1
ID_ScaleRatio_A
˙˙1 @
)
˙˙@ A
;
˙˙A B
if
˛˛ 
(
˛˛ 
material
˛˛ 
.
˛˛ 
HasProperty
˛˛ $
(
˛˛$ %
ID_FaceDilate
˛˛% 2
)
˛˛2 3
)
˛˛3 4

faceDilate
ˇˇ 
=
ˇˇ 
material
ˇˇ %
.
ˇˇ% &
GetFloat
ˇˇ& .
(
ˇˇ. /
ID_FaceDilate
ˇˇ/ <
)
ˇˇ< =
*
ˇˇ> ?
scaleRatio_A
ˇˇ@ L
;
ˇˇL M
if
ÅÅ 
(
ÅÅ 
material
ÅÅ 
.
ÅÅ 
HasProperty
ÅÅ $
(
ÅÅ$ % 
ID_OutlineSoftness
ÅÅ% 7
)
ÅÅ7 8
)
ÅÅ8 9
faceSoftness
ÇÇ 
=
ÇÇ 
material
ÇÇ '
.
ÇÇ' (
GetFloat
ÇÇ( 0
(
ÇÇ0 1 
ID_OutlineSoftness
ÇÇ1 C
)
ÇÇC D
*
ÇÇE F
scaleRatio_A
ÇÇG S
;
ÇÇS T
if
ÑÑ 
(
ÑÑ 
material
ÑÑ 
.
ÑÑ 
HasProperty
ÑÑ $
(
ÑÑ$ %
ID_OutlineWidth
ÑÑ% 4
)
ÑÑ4 5
)
ÑÑ5 6
outlineThickness
ÖÖ  
=
ÖÖ! "
material
ÖÖ# +
.
ÖÖ+ ,
GetFloat
ÖÖ, 4
(
ÖÖ4 5
ID_OutlineWidth
ÖÖ5 D
)
ÖÖD E
*
ÖÖF G
scaleRatio_A
ÖÖH T
;
ÖÖT U
uniformPadding
áá 
=
áá 
outlineThickness
áá -
+
áá. /
faceSoftness
áá0 <
+
áá= >

faceDilate
áá? I
;
ááI J
if
ää 
(
ää 
material
ää 
.
ää 
HasProperty
ää $
(
ää$ %
ID_GlowOffset
ää% 2
)
ää2 3
&&
ää4 6
shaderKeywords
ää7 E
.
ääE F
Contains
ääF N
(
ääN O
Keyword_Glow
ääO [
)
ää[ \
)
ää\ ]
{
ãã 
if
åå 
(
åå 
material
åå 
.
åå 
HasProperty
åå (
(
åå( )
ID_ScaleRatio_B
åå) 8
)
åå8 9
)
åå9 :
scaleRatio_B
çç  
=
çç! "
material
çç# +
.
çç+ ,
GetFloat
çç, 4
(
çç4 5
ID_ScaleRatio_B
çç5 D
)
ççD E
;
ççE F

glowOffset
èè 
=
èè 
material
èè %
.
èè% &
GetFloat
èè& .
(
èè. /
ID_GlowOffset
èè/ <
)
èè< =
*
èè> ?
scaleRatio_B
èè@ L
;
èèL M
	glowOuter
êê 
=
êê 
material
êê $
.
êê$ %
GetFloat
êê% -
(
êê- .
ID_GlowOuter
êê. :
)
êê: ;
*
êê< =
scaleRatio_B
êê> J
;
êêJ K
}
ëë 
uniformPadding
ìì 
=
ìì 
Mathf
ìì "
.
ìì" #
Max
ìì# &
(
ìì& '
uniformPadding
ìì' 5
,
ìì5 6

faceDilate
ìì7 A
+
ììB C

glowOffset
ììD N
+
ììO P
	glowOuter
ììQ Z
)
ììZ [
;
ìì[ \
if
ññ 
(
ññ 
material
ññ 
.
ññ 
HasProperty
ññ $
(
ññ$ %!
ID_UnderlaySoftness
ññ% 8
)
ññ8 9
&&
ññ: <
shaderKeywords
ññ= K
.
ññK L
Contains
ññL T
(
ññT U
Keyword_Underlay
ññU e
)
ññe f
)
ññf g
{
óó 
if
òò 
(
òò 
material
òò 
.
òò 
HasProperty
òò (
(
òò( )
ID_ScaleRatio_C
òò) 8
)
òò8 9
)
òò9 :
scaleRatio_C
ôô  
=
ôô! "
material
ôô# +
.
ôô+ ,
GetFloat
ôô, 4
(
ôô4 5
ID_ScaleRatio_C
ôô5 D
)
ôôD E
;
ôôE F
float
õõ 
offsetX
õõ 
=
õõ 
material
õõ  (
.
õõ( )
GetFloat
õõ) 1
(
õõ1 2 
ID_UnderlayOffsetX
õõ2 D
)
õõD E
*
õõF G
scaleRatio_C
õõH T
;
õõT U
float
úú 
offsetY
úú 
=
úú 
material
úú  (
.
úú( )
GetFloat
úú) 1
(
úú1 2 
ID_UnderlayOffsetY
úú2 D
)
úúD E
*
úúF G
scaleRatio_C
úúH T
;
úúT U
float
ùù 
dilate
ùù 
=
ùù 
material
ùù '
.
ùù' (
GetFloat
ùù( 0
(
ùù0 1
ID_UnderlayDilate
ùù1 B
)
ùùB C
*
ùùD E
scaleRatio_C
ùùF R
;
ùùR S
float
ûû 
softness
ûû 
=
ûû  
material
ûû! )
.
ûû) *
GetFloat
ûû* 2
(
ûû2 3!
ID_UnderlaySoftness
ûû3 F
)
ûûF G
*
ûûH I
scaleRatio_C
ûûJ V
;
ûûV W
padding
†† 
.
†† 
x
†† 
=
†† 
Mathf
†† !
.
††! "
Max
††" %
(
††% &
padding
††& -
.
††- .
x
††. /
,
††/ 0

faceDilate
††1 ;
+
††< =
dilate
††> D
+
††E F
softness
††G O
-
††P Q
offsetX
††R Y
)
††Y Z
;
††Z [
padding
°° 
.
°° 
y
°° 
=
°° 
Mathf
°° !
.
°°! "
Max
°°" %
(
°°% &
padding
°°& -
.
°°- .
y
°°. /
,
°°/ 0

faceDilate
°°1 ;
+
°°< =
dilate
°°> D
+
°°E F
softness
°°G O
-
°°P Q
offsetY
°°R Y
)
°°Y Z
;
°°Z [
padding
¢¢ 
.
¢¢ 
z
¢¢ 
=
¢¢ 
Mathf
¢¢ !
.
¢¢! "
Max
¢¢" %
(
¢¢% &
padding
¢¢& -
.
¢¢- .
z
¢¢. /
,
¢¢/ 0

faceDilate
¢¢1 ;
+
¢¢< =
dilate
¢¢> D
+
¢¢E F
softness
¢¢G O
+
¢¢P Q
offsetX
¢¢R Y
)
¢¢Y Z
;
¢¢Z [
padding
££ 
.
££ 
w
££ 
=
££ 
Mathf
££ !
.
££! "
Max
££" %
(
££% &
padding
££& -
.
££- .
w
££. /
,
££/ 0

faceDilate
££1 ;
+
££< =
dilate
££> D
+
££E F
softness
££G O
+
££P Q
offsetY
££R Y
)
££Y Z
;
££Z [
}
§§ 
padding
¶¶ 
.
¶¶ 
x
¶¶ 
=
¶¶ 
Mathf
¶¶ 
.
¶¶ 
Max
¶¶ !
(
¶¶! "
padding
¶¶" )
.
¶¶) *
x
¶¶* +
,
¶¶+ ,
uniformPadding
¶¶- ;
)
¶¶; <
;
¶¶< =
padding
ßß 
.
ßß 
y
ßß 
=
ßß 
Mathf
ßß 
.
ßß 
Max
ßß !
(
ßß! "
padding
ßß" )
.
ßß) *
y
ßß* +
,
ßß+ ,
uniformPadding
ßß- ;
)
ßß; <
;
ßß< =
padding
®® 
.
®® 
z
®® 
=
®® 
Mathf
®® 
.
®® 
Max
®® !
(
®®! "
padding
®®" )
.
®®) *
z
®®* +
,
®®+ ,
uniformPadding
®®- ;
)
®®; <
;
®®< =
padding
©© 
.
©© 
w
©© 
=
©© 
Mathf
©© 
.
©© 
Max
©© !
(
©©! "
padding
©©" )
.
©©) *
w
©©* +
,
©©+ ,
uniformPadding
©©- ;
)
©©; <
;
©©< =
padding
´´ 
.
´´ 
x
´´ 
+=
´´ 
extraPadding
´´ %
;
´´% &
padding
¨¨ 
.
¨¨ 
y
¨¨ 
+=
¨¨ 
extraPadding
¨¨ %
;
¨¨% &
padding
≠≠ 
.
≠≠ 
z
≠≠ 
+=
≠≠ 
extraPadding
≠≠ %
;
≠≠% &
padding
ÆÆ 
.
ÆÆ 
w
ÆÆ 
+=
ÆÆ 
extraPadding
ÆÆ %
;
ÆÆ% &
padding
∞∞ 
.
∞∞ 
x
∞∞ 
=
∞∞ 
Mathf
∞∞ 
.
∞∞ 
Min
∞∞ !
(
∞∞! "
padding
∞∞" )
.
∞∞) *
x
∞∞* +
,
∞∞+ ,
$num
∞∞- .
)
∞∞. /
;
∞∞/ 0
padding
±± 
.
±± 
y
±± 
=
±± 
Mathf
±± 
.
±± 
Min
±± !
(
±±! "
padding
±±" )
.
±±) *
y
±±* +
,
±±+ ,
$num
±±- .
)
±±. /
;
±±/ 0
padding
≤≤ 
.
≤≤ 
z
≤≤ 
=
≤≤ 
Mathf
≤≤ 
.
≤≤ 
Min
≤≤ !
(
≤≤! "
padding
≤≤" )
.
≤≤) *
z
≤≤* +
,
≤≤+ ,
$num
≤≤- .
)
≤≤. /
;
≤≤/ 0
padding
≥≥ 
.
≥≥ 
w
≥≥ 
=
≥≥ 
Mathf
≥≥ 
.
≥≥ 
Min
≥≥ !
(
≥≥! "
padding
≥≥" )
.
≥≥) *
w
≥≥* +
,
≥≥+ ,
$num
≥≥- .
)
≥≥. /
;
≥≥/ 0

maxPadding
µµ 
.
µµ 
x
µµ 
=
µµ 

maxPadding
µµ %
.
µµ% &
x
µµ& '
<
µµ( )
padding
µµ* 1
.
µµ1 2
x
µµ2 3
?
µµ4 5
padding
µµ6 =
.
µµ= >
x
µµ> ?
:
µµ@ A

maxPadding
µµB L
.
µµL M
x
µµM N
;
µµN O

maxPadding
∂∂ 
.
∂∂ 
y
∂∂ 
=
∂∂ 

maxPadding
∂∂ %
.
∂∂% &
y
∂∂& '
<
∂∂( )
padding
∂∂* 1
.
∂∂1 2
y
∂∂2 3
?
∂∂4 5
padding
∂∂6 =
.
∂∂= >
y
∂∂> ?
:
∂∂@ A

maxPadding
∂∂B L
.
∂∂L M
y
∂∂M N
;
∂∂N O

maxPadding
∑∑ 
.
∑∑ 
z
∑∑ 
=
∑∑ 

maxPadding
∑∑ %
.
∑∑% &
z
∑∑& '
<
∑∑( )
padding
∑∑* 1
.
∑∑1 2
z
∑∑2 3
?
∑∑4 5
padding
∑∑6 =
.
∑∑= >
z
∑∑> ?
:
∑∑@ A

maxPadding
∑∑B L
.
∑∑L M
z
∑∑M N
;
∑∑N O

maxPadding
∏∏ 
.
∏∏ 
w
∏∏ 
=
∏∏ 

maxPadding
∏∏ %
.
∏∏% &
w
∏∏& '
<
∏∏( )
padding
∏∏* 1
.
∏∏1 2
w
∏∏2 3
?
∏∏4 5
padding
∏∏6 =
.
∏∏= >
w
∏∏> ?
:
∏∏@ A

maxPadding
∏∏B L
.
∏∏L M
w
∏∏M N
;
∏∏N O
float
∫∫ 
gradientScale
∫∫ 
=
∫∫  !
material
∫∫" *
.
∫∫* +
GetFloat
∫∫+ 3
(
∫∫3 4
ID_GradientScale
∫∫4 D
)
∫∫D E
;
∫∫E F
padding
ªª 
*=
ªª 
gradientScale
ªª $
;
ªª$ %
uniformPadding
ææ 
=
ææ 
Mathf
ææ "
.
ææ" #
Max
ææ# &
(
ææ& '
padding
ææ' .
.
ææ. /
x
ææ/ 0
,
ææ0 1
padding
ææ2 9
.
ææ9 :
y
ææ: ;
)
ææ; <
;
ææ< =
uniformPadding
øø 
=
øø 
Mathf
øø "
.
øø" #
Max
øø# &
(
øø& '
padding
øø' .
.
øø. /
z
øø/ 0
,
øø0 1
uniformPadding
øø2 @
)
øø@ A
;
øøA B
uniformPadding
¿¿ 
=
¿¿ 
Mathf
¿¿ "
.
¿¿" #
Max
¿¿# &
(
¿¿& '
padding
¿¿' .
.
¿¿. /
w
¿¿/ 0
,
¿¿0 1
uniformPadding
¿¿2 @
)
¿¿@ A
;
¿¿A B
return
¬¬ 
uniformPadding
¬¬ !
+
¬¬" #
$num
¬¬$ )
;
¬¬) *
}
√√ 	
public
«« 
static
«« 
float
«« 

GetPadding
«« &
(
««& '
Material
««' /
[
««/ 0
]
««0 1
	materials
««2 ;
,
««; <
bool
««= A 
enableExtraPadding
««B T
,
««T U
bool
««V Z
isBold
««[ a
)
««a b
{
»» 	
if
ÀÀ 
(
ÀÀ 
isInitialized
ÀÀ 
==
ÀÀ  
false
ÀÀ! &
)
ÀÀ& '"
GetShaderPropertyIDs
ÃÃ $
(
ÃÃ$ %
)
ÃÃ% &
;
ÃÃ& '
if
œœ 
(
œœ 
	materials
œœ 
==
œœ 
null
œœ !
)
œœ! "
return
œœ# )
$num
œœ* +
;
œœ+ ,
int
—— 
extraPadding
—— 
=
——  
enableExtraPadding
—— 1
?
——2 3
$num
——4 5
:
——6 7
$num
——8 9
;
——9 :
if
‘‘ 
(
‘‘ 
	materials
‘‘ 
[
‘‘ 
$num
‘‘ 
]
‘‘ 
.
‘‘ 
HasProperty
‘‘ (
(
‘‘( )

ID_Padding
‘‘) 3
)
‘‘3 4
)
‘‘4 5
return
’’ 
extraPadding
’’ #
+
’’$ %
	materials
’’& /
[
’’/ 0
$num
’’0 1
]
’’1 2
.
’’2 3
GetFloat
’’3 ;
(
’’; <

ID_Padding
’’< F
)
’’F G
;
’’G H
Vector4
◊◊ 
padding
◊◊ 
=
◊◊ 
Vector4
◊◊ %
.
◊◊% &
zero
◊◊& *
;
◊◊* +
Vector4
ÿÿ 

maxPadding
ÿÿ 
=
ÿÿ  
Vector4
ÿÿ! (
.
ÿÿ( )
zero
ÿÿ) -
;
ÿÿ- .
float
⁄⁄ 

faceDilate
⁄⁄ 
=
⁄⁄ 
$num
⁄⁄  
;
⁄⁄  !
float
€€ 
faceSoftness
€€ 
=
€€  
$num
€€! "
;
€€" #
float
‹‹ 
outlineThickness
‹‹ "
=
‹‹# $
$num
‹‹% &
;
‹‹& '
float
›› 
scaleRatio_A
›› 
=
››  
$num
››! "
;
››" #
float
ﬁﬁ 
scaleRatio_B
ﬁﬁ 
=
ﬁﬁ  
$num
ﬁﬁ! "
;
ﬁﬁ" #
float
ﬂﬂ 
scaleRatio_C
ﬂﬂ 
=
ﬂﬂ  
$num
ﬂﬂ! "
;
ﬂﬂ" #
float
·· 

glowOffset
·· 
=
·· 
$num
··  
;
··  !
float
‚‚ 
	glowOuter
‚‚ 
=
‚‚ 
$num
‚‚ 
;
‚‚  
float
‰‰ 
uniformPadding
‰‰  
=
‰‰! "
$num
‰‰# $
;
‰‰$ %
for
ÊÊ 
(
ÊÊ 
int
ÊÊ 
i
ÊÊ 
=
ÊÊ 
$num
ÊÊ 
;
ÊÊ 
i
ÊÊ 
<
ÊÊ 
	materials
ÊÊ  )
.
ÊÊ) *
Length
ÊÊ* 0
;
ÊÊ0 1
i
ÊÊ2 3
++
ÊÊ3 5
)
ÊÊ5 6
{
ÁÁ 
ShaderUtilities
ÈÈ 
.
ÈÈ   
UpdateShaderRatios
ÈÈ  2
(
ÈÈ2 3
	materials
ÈÈ3 <
[
ÈÈ< =
i
ÈÈ= >
]
ÈÈ> ?
)
ÈÈ? @
;
ÈÈ@ A
string
ÎÎ 
[
ÎÎ 
]
ÎÎ 
shaderKeywords
ÎÎ '
=
ÎÎ( )
	materials
ÎÎ* 3
[
ÎÎ3 4
i
ÎÎ4 5
]
ÎÎ5 6
.
ÎÎ6 7
shaderKeywords
ÎÎ7 E
;
ÎÎE F
if
ÌÌ 
(
ÌÌ 
	materials
ÌÌ 
[
ÌÌ 
i
ÌÌ 
]
ÌÌ  
.
ÌÌ  !
HasProperty
ÌÌ! ,
(
ÌÌ, -
ShaderUtilities
ÌÌ- <
.
ÌÌ< =
ID_ScaleRatio_A
ÌÌ= L
)
ÌÌL M
)
ÌÌM N
scaleRatio_A
ÓÓ  
=
ÓÓ! "
	materials
ÓÓ# ,
[
ÓÓ, -
i
ÓÓ- .
]
ÓÓ. /
.
ÓÓ/ 0
GetFloat
ÓÓ0 8
(
ÓÓ8 9
ShaderUtilities
ÓÓ9 H
.
ÓÓH I
ID_ScaleRatio_A
ÓÓI X
)
ÓÓX Y
;
ÓÓY Z
if
 
(
 
	materials
 
[
 
i
 
]
  
.
  !
HasProperty
! ,
(
, -
ShaderUtilities
- <
.
< =
ID_FaceDilate
= J
)
J K
)
K L

faceDilate
ÒÒ 
=
ÒÒ  
	materials
ÒÒ! *
[
ÒÒ* +
i
ÒÒ+ ,
]
ÒÒ, -
.
ÒÒ- .
GetFloat
ÒÒ. 6
(
ÒÒ6 7
ShaderUtilities
ÒÒ7 F
.
ÒÒF G
ID_FaceDilate
ÒÒG T
)
ÒÒT U
*
ÒÒV W
scaleRatio_A
ÒÒX d
;
ÒÒd e
if
ÛÛ 
(
ÛÛ 
	materials
ÛÛ 
[
ÛÛ 
i
ÛÛ 
]
ÛÛ  
.
ÛÛ  !
HasProperty
ÛÛ! ,
(
ÛÛ, -
ShaderUtilities
ÛÛ- <
.
ÛÛ< = 
ID_OutlineSoftness
ÛÛ= O
)
ÛÛO P
)
ÛÛP Q
faceSoftness
ÙÙ  
=
ÙÙ! "
	materials
ÙÙ# ,
[
ÙÙ, -
i
ÙÙ- .
]
ÙÙ. /
.
ÙÙ/ 0
GetFloat
ÙÙ0 8
(
ÙÙ8 9
ShaderUtilities
ÙÙ9 H
.
ÙÙH I 
ID_OutlineSoftness
ÙÙI [
)
ÙÙ[ \
*
ÙÙ] ^
scaleRatio_A
ÙÙ_ k
;
ÙÙk l
if
ˆˆ 
(
ˆˆ 
	materials
ˆˆ 
[
ˆˆ 
i
ˆˆ 
]
ˆˆ  
.
ˆˆ  !
HasProperty
ˆˆ! ,
(
ˆˆ, -
ShaderUtilities
ˆˆ- <
.
ˆˆ< =
ID_OutlineWidth
ˆˆ= L
)
ˆˆL M
)
ˆˆM N
outlineThickness
˜˜ $
=
˜˜% &
	materials
˜˜' 0
[
˜˜0 1
i
˜˜1 2
]
˜˜2 3
.
˜˜3 4
GetFloat
˜˜4 <
(
˜˜< =
ShaderUtilities
˜˜= L
.
˜˜L M
ID_OutlineWidth
˜˜M \
)
˜˜\ ]
*
˜˜^ _
scaleRatio_A
˜˜` l
;
˜˜l m
uniformPadding
˘˘ 
=
˘˘  
outlineThickness
˘˘! 1
+
˘˘2 3
faceSoftness
˘˘4 @
+
˘˘A B

faceDilate
˘˘C M
;
˘˘M N
if
¸¸ 
(
¸¸ 
	materials
¸¸ 
[
¸¸ 
i
¸¸ 
]
¸¸  
.
¸¸  !
HasProperty
¸¸! ,
(
¸¸, -
ShaderUtilities
¸¸- <
.
¸¸< =
ID_GlowOffset
¸¸= J
)
¸¸J K
&&
¸¸L N
shaderKeywords
¸¸O ]
.
¸¸] ^
Contains
¸¸^ f
(
¸¸f g
ShaderUtilities
¸¸g v
.
¸¸v w
Keyword_Glow¸¸w É
)¸¸É Ñ
)¸¸Ñ Ö
{
˝˝ 
if
˛˛ 
(
˛˛ 
	materials
˛˛ !
[
˛˛! "
i
˛˛" #
]
˛˛# $
.
˛˛$ %
HasProperty
˛˛% 0
(
˛˛0 1
ShaderUtilities
˛˛1 @
.
˛˛@ A
ID_ScaleRatio_B
˛˛A P
)
˛˛P Q
)
˛˛Q R
scaleRatio_B
ˇˇ $
=
ˇˇ% &
	materials
ˇˇ' 0
[
ˇˇ0 1
i
ˇˇ1 2
]
ˇˇ2 3
.
ˇˇ3 4
GetFloat
ˇˇ4 <
(
ˇˇ< =
ShaderUtilities
ˇˇ= L
.
ˇˇL M
ID_ScaleRatio_B
ˇˇM \
)
ˇˇ\ ]
;
ˇˇ] ^

glowOffset
ÅÅ 
=
ÅÅ  
	materials
ÅÅ! *
[
ÅÅ* +
i
ÅÅ+ ,
]
ÅÅ, -
.
ÅÅ- .
GetFloat
ÅÅ. 6
(
ÅÅ6 7
ShaderUtilities
ÅÅ7 F
.
ÅÅF G
ID_GlowOffset
ÅÅG T
)
ÅÅT U
*
ÅÅV W
scaleRatio_B
ÅÅX d
;
ÅÅd e
	glowOuter
ÇÇ 
=
ÇÇ 
	materials
ÇÇ  )
[
ÇÇ) *
i
ÇÇ* +
]
ÇÇ+ ,
.
ÇÇ, -
GetFloat
ÇÇ- 5
(
ÇÇ5 6
ShaderUtilities
ÇÇ6 E
.
ÇÇE F
ID_GlowOuter
ÇÇF R
)
ÇÇR S
*
ÇÇT U
scaleRatio_B
ÇÇV b
;
ÇÇb c
}
ÉÉ 
uniformPadding
ÖÖ 
=
ÖÖ  
Mathf
ÖÖ! &
.
ÖÖ& '
Max
ÖÖ' *
(
ÖÖ* +
uniformPadding
ÖÖ+ 9
,
ÖÖ9 :

faceDilate
ÖÖ; E
+
ÖÖF G

glowOffset
ÖÖH R
+
ÖÖS T
	glowOuter
ÖÖU ^
)
ÖÖ^ _
;
ÖÖ_ `
if
àà 
(
àà 
	materials
àà 
[
àà 
i
àà 
]
àà  
.
àà  !
HasProperty
àà! ,
(
àà, -
ShaderUtilities
àà- <
.
àà< =!
ID_UnderlaySoftness
àà= P
)
ààP Q
&&
ààR T
shaderKeywords
ààU c
.
ààc d
Contains
ààd l
(
ààl m
ShaderUtilities
ààm |
.
àà| }
Keyword_Underlayàà} ç
)ààç é
)ààé è
{
ââ 
if
ää 
(
ää 
	materials
ää !
[
ää! "
i
ää" #
]
ää# $
.
ää$ %
HasProperty
ää% 0
(
ää0 1
ShaderUtilities
ää1 @
.
ää@ A
ID_ScaleRatio_C
ääA P
)
ääP Q
)
ääQ R
scaleRatio_C
ãã $
=
ãã% &
	materials
ãã' 0
[
ãã0 1
i
ãã1 2
]
ãã2 3
.
ãã3 4
GetFloat
ãã4 <
(
ãã< =
ShaderUtilities
ãã= L
.
ããL M
ID_ScaleRatio_C
ããM \
)
ãã\ ]
;
ãã] ^
float
çç 
offsetX
çç !
=
çç" #
	materials
çç$ -
[
çç- .
i
çç. /
]
çç/ 0
.
çç0 1
GetFloat
çç1 9
(
çç9 :
ShaderUtilities
çç: I
.
ççI J 
ID_UnderlayOffsetX
ççJ \
)
çç\ ]
*
çç^ _
scaleRatio_C
çç` l
;
ççl m
float
éé 
offsetY
éé !
=
éé" #
	materials
éé$ -
[
éé- .
i
éé. /
]
éé/ 0
.
éé0 1
GetFloat
éé1 9
(
éé9 :
ShaderUtilities
éé: I
.
ééI J 
ID_UnderlayOffsetY
ééJ \
)
éé\ ]
*
éé^ _
scaleRatio_C
éé` l
;
éél m
float
èè 
dilate
èè  
=
èè! "
	materials
èè# ,
[
èè, -
i
èè- .
]
èè. /
.
èè/ 0
GetFloat
èè0 8
(
èè8 9
ShaderUtilities
èè9 H
.
èèH I
ID_UnderlayDilate
èèI Z
)
èèZ [
*
èè\ ]
scaleRatio_C
èè^ j
;
èèj k
float
êê 
softness
êê "
=
êê# $
	materials
êê% .
[
êê. /
i
êê/ 0
]
êê0 1
.
êê1 2
GetFloat
êê2 :
(
êê: ;
ShaderUtilities
êê; J
.
êêJ K!
ID_UnderlaySoftness
êêK ^
)
êê^ _
*
êê` a
scaleRatio_C
êêb n
;
êên o
padding
íí 
.
íí 
x
íí 
=
íí 
Mathf
íí  %
.
íí% &
Max
íí& )
(
íí) *
padding
íí* 1
.
íí1 2
x
íí2 3
,
íí3 4

faceDilate
íí5 ?
+
íí@ A
dilate
ííB H
+
ííI J
softness
ííK S
-
ííT U
offsetX
ííV ]
)
íí] ^
;
íí^ _
padding
ìì 
.
ìì 
y
ìì 
=
ìì 
Mathf
ìì  %
.
ìì% &
Max
ìì& )
(
ìì) *
padding
ìì* 1
.
ìì1 2
y
ìì2 3
,
ìì3 4

faceDilate
ìì5 ?
+
ìì@ A
dilate
ììB H
+
ììI J
softness
ììK S
-
ììT U
offsetY
ììV ]
)
ìì] ^
;
ìì^ _
padding
îî 
.
îî 
z
îî 
=
îî 
Mathf
îî  %
.
îî% &
Max
îî& )
(
îî) *
padding
îî* 1
.
îî1 2
z
îî2 3
,
îî3 4

faceDilate
îî5 ?
+
îî@ A
dilate
îîB H
+
îîI J
softness
îîK S
+
îîT U
offsetX
îîV ]
)
îî] ^
;
îî^ _
padding
ïï 
.
ïï 
w
ïï 
=
ïï 
Mathf
ïï  %
.
ïï% &
Max
ïï& )
(
ïï) *
padding
ïï* 1
.
ïï1 2
w
ïï2 3
,
ïï3 4

faceDilate
ïï5 ?
+
ïï@ A
dilate
ïïB H
+
ïïI J
softness
ïïK S
+
ïïT U
offsetY
ïïV ]
)
ïï] ^
;
ïï^ _
}
ññ 
padding
òò 
.
òò 
x
òò 
=
òò 
Mathf
òò !
.
òò! "
Max
òò" %
(
òò% &
padding
òò& -
.
òò- .
x
òò. /
,
òò/ 0
uniformPadding
òò1 ?
)
òò? @
;
òò@ A
padding
ôô 
.
ôô 
y
ôô 
=
ôô 
Mathf
ôô !
.
ôô! "
Max
ôô" %
(
ôô% &
padding
ôô& -
.
ôô- .
y
ôô. /
,
ôô/ 0
uniformPadding
ôô1 ?
)
ôô? @
;
ôô@ A
padding
öö 
.
öö 
z
öö 
=
öö 
Mathf
öö !
.
öö! "
Max
öö" %
(
öö% &
padding
öö& -
.
öö- .
z
öö. /
,
öö/ 0
uniformPadding
öö1 ?
)
öö? @
;
öö@ A
padding
õõ 
.
õõ 
w
õõ 
=
õõ 
Mathf
õõ !
.
õõ! "
Max
õõ" %
(
õõ% &
padding
õõ& -
.
õõ- .
w
õõ. /
,
õõ/ 0
uniformPadding
õõ1 ?
)
õõ? @
;
õõ@ A
padding
ùù 
.
ùù 
x
ùù 
+=
ùù 
extraPadding
ùù )
;
ùù) *
padding
ûû 
.
ûû 
y
ûû 
+=
ûû 
extraPadding
ûû )
;
ûû) *
padding
üü 
.
üü 
z
üü 
+=
üü 
extraPadding
üü )
;
üü) *
padding
†† 
.
†† 
w
†† 
+=
†† 
extraPadding
†† )
;
††) *
padding
¢¢ 
.
¢¢ 
x
¢¢ 
=
¢¢ 
Mathf
¢¢ !
.
¢¢! "
Min
¢¢" %
(
¢¢% &
padding
¢¢& -
.
¢¢- .
x
¢¢. /
,
¢¢/ 0
$num
¢¢1 2
)
¢¢2 3
;
¢¢3 4
padding
££ 
.
££ 
y
££ 
=
££ 
Mathf
££ !
.
££! "
Min
££" %
(
££% &
padding
££& -
.
££- .
y
££. /
,
££/ 0
$num
££1 2
)
££2 3
;
££3 4
padding
§§ 
.
§§ 
z
§§ 
=
§§ 
Mathf
§§ !
.
§§! "
Min
§§" %
(
§§% &
padding
§§& -
.
§§- .
z
§§. /
,
§§/ 0
$num
§§1 2
)
§§2 3
;
§§3 4
padding
•• 
.
•• 
w
•• 
=
•• 
Mathf
•• !
.
••! "
Min
••" %
(
••% &
padding
••& -
.
••- .
w
••. /
,
••/ 0
$num
••1 2
)
••2 3
;
••3 4

maxPadding
ßß 
.
ßß 
x
ßß 
=
ßß 

maxPadding
ßß )
.
ßß) *
x
ßß* +
<
ßß, -
padding
ßß. 5
.
ßß5 6
x
ßß6 7
?
ßß8 9
padding
ßß: A
.
ßßA B
x
ßßB C
:
ßßD E

maxPadding
ßßF P
.
ßßP Q
x
ßßQ R
;
ßßR S

maxPadding
®® 
.
®® 
y
®® 
=
®® 

maxPadding
®® )
.
®®) *
y
®®* +
<
®®, -
padding
®®. 5
.
®®5 6
y
®®6 7
?
®®8 9
padding
®®: A
.
®®A B
y
®®B C
:
®®D E

maxPadding
®®F P
.
®®P Q
y
®®Q R
;
®®R S

maxPadding
©© 
.
©© 
z
©© 
=
©© 

maxPadding
©© )
.
©©) *
z
©©* +
<
©©, -
padding
©©. 5
.
©©5 6
z
©©6 7
?
©©8 9
padding
©©: A
.
©©A B
z
©©B C
:
©©D E

maxPadding
©©F P
.
©©P Q
z
©©Q R
;
©©R S

maxPadding
™™ 
.
™™ 
w
™™ 
=
™™ 

maxPadding
™™ )
.
™™) *
w
™™* +
<
™™, -
padding
™™. 5
.
™™5 6
w
™™6 7
?
™™8 9
padding
™™: A
.
™™A B
w
™™B C
:
™™D E

maxPadding
™™F P
.
™™P Q
w
™™Q R
;
™™R S
}
¨¨ 
float
ÆÆ 
gradientScale
ÆÆ 
=
ÆÆ  !
	materials
ÆÆ" +
[
ÆÆ+ ,
$num
ÆÆ, -
]
ÆÆ- .
.
ÆÆ. /
GetFloat
ÆÆ/ 7
(
ÆÆ7 8
ShaderUtilities
ÆÆ8 G
.
ÆÆG H
ID_GradientScale
ÆÆH X
)
ÆÆX Y
;
ÆÆY Z
padding
ØØ 
*=
ØØ 
gradientScale
ØØ $
;
ØØ$ %
uniformPadding
≤≤ 
=
≤≤ 
Mathf
≤≤ "
.
≤≤" #
Max
≤≤# &
(
≤≤& '
padding
≤≤' .
.
≤≤. /
x
≤≤/ 0
,
≤≤0 1
padding
≤≤2 9
.
≤≤9 :
y
≤≤: ;
)
≤≤; <
;
≤≤< =
uniformPadding
≥≥ 
=
≥≥ 
Mathf
≥≥ "
.
≥≥" #
Max
≥≥# &
(
≥≥& '
padding
≥≥' .
.
≥≥. /
z
≥≥/ 0
,
≥≥0 1
uniformPadding
≥≥2 @
)
≥≥@ A
;
≥≥A B
uniformPadding
¥¥ 
=
¥¥ 
Mathf
¥¥ "
.
¥¥" #
Max
¥¥# &
(
¥¥& '
padding
¥¥' .
.
¥¥. /
w
¥¥/ 0
,
¥¥0 1
uniformPadding
¥¥2 @
)
¥¥@ A
;
¥¥A B
return
∂∂ 
uniformPadding
∂∂ !
+
∂∂" #
$num
∂∂$ )
;
∂∂) *
}
∑∑ 	
}
∫∫ 
}ºº ø
ûD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_ScrollbarEventHandler.cs
	namespace 	
TMPro
 
{ 
public

 

class

 %
TMP_ScrollbarEventHandler

 *
:

+ ,
MonoBehaviour

- :
,

: ; 
IPointerClickHandler

< P
,

P Q
ISelectHandler

R `
,

` a
IDeselectHandler

b r
{ 
public 
bool 

isSelected 
; 
public 
void 
OnPointerClick "
(" #
PointerEventData# 3
	eventData4 =
)= >
{ 	
Debug 
. 
Log 
( 
$str *
)* +
;+ ,
} 	
public 
void 
OnSelect 
( 
BaseEventData *
	eventData+ 4
)4 5
{ 	
Debug 
. 
Log 
( 
$str *
)* +
;+ ,

isSelected 
= 
true 
; 
} 	
public 
void 

OnDeselect 
( 
BaseEventData ,
	eventData- 6
)6 7
{ 	
Debug 
. 
Log 
( 
$str -
)- .
;. /

isSelected 
= 
false 
; 
} 	
} 
} ”
ôD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_FontFeatureTable.cs
	namespace 	
TMPro
 
{ 
[ 
Serializable 
] 
public 

class  
TMP_FontFeatureTable %
{ 
public 
List 
< )
TMP_GlyphPairAdjustmentRecord 1
>1 2&
glyphPairAdjustmentRecords3 M
{ 	
get 
{ 
return (
m_GlyphPairAdjustmentRecords 5
;5 6
}7 8
set 
{ (
m_GlyphPairAdjustmentRecords .
=/ 0
value1 6
;6 7
}8 9
} 	
[ 	
SerializeField	 
] 
internal 
List 
< )
TMP_GlyphPairAdjustmentRecord 3
>3 4(
m_GlyphPairAdjustmentRecords5 Q
;Q R
internal 

Dictionary 
< 
uint  
,  !)
TMP_GlyphPairAdjustmentRecord" ?
>? @7
+m_GlyphPairAdjustmentRecordLookupDictionaryA l
;l m
public##  
TMP_FontFeatureTable## #
(### $
)##$ %
{$$ 	(
m_GlyphPairAdjustmentRecords%% (
=%%) *
new%%+ .
List%%/ 3
<%%3 4)
TMP_GlyphPairAdjustmentRecord%%4 Q
>%%Q R
(%%R S
)%%S T
;%%T U7
+m_GlyphPairAdjustmentRecordLookupDictionary&& 7
=&&8 9
new&&: =

Dictionary&&> H
<&&H I
uint&&I M
,&&M N)
TMP_GlyphPairAdjustmentRecord&&O l
>&&l m
(&&m n
)&&n o
;&&o p
}'' 	
public00 
void00 *
SortGlyphPairAdjustmentRecords00 2
(002 3
)003 4
{11 	
if33 
(33 (
m_GlyphPairAdjustmentRecords33 ,
.33, -
Count33- 2
>333 4
$num335 6
)336 7(
m_GlyphPairAdjustmentRecords44 ,
=44- .(
m_GlyphPairAdjustmentRecords44/ K
.44K L
OrderBy44L S
(44S T
s44T U
=>44V X
s44Y Z
.44Z [!
firstAdjustmentRecord44[ p
.44p q

glyphIndex44q {
)44{ |
.44| }
ThenBy	44} É
(
44É Ñ
s
44Ñ Ö
=>
44Ü à
s
44â ä
.
44ä ã$
secondAdjustmentRecord
44ã °
.
44° ¢

glyphIndex
44¢ ¨
)
44¨ ≠
.
44≠ Æ
ToList
44Æ ¥
(
44¥ µ
)
44µ ∂
;
44∂ ∑
}55 	
}66 
}77 ”g
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.textmeshpro@3.0.1\Scripts\Runtime\TMP_FontFeaturesCommon.cs
	namespace 	
TMPro
 
{		 
[

 
Flags

 

]


 
public 

enum "
FontFeatureLookupFlags &
{ 
None 
=$ %
$num* -
,- .
IgnoreLigatures 
=$ %
$num( -
,- .$
IgnoreSpacingAdjustments  
=$ %
$num( -
,- .
} 
[ 
Serializable 
] 
public 

struct  
TMP_GlyphValueRecord &
{ 
public 
float 

xPlacement 
{  !
get" %
{& '
return( .
m_XPlacement/ ;
;; <
}= >
set? B
{C D
m_XPlacementE Q
=R S
valueT Y
;Y Z
}[ \
}] ^
public   
float   

yPlacement   
{    !
get  " %
{  & '
return  ( .
m_YPlacement  / ;
;  ; <
}  = >
set  ? B
{  C D
m_YPlacement  E Q
=  R S
value  T Y
;  Y Z
}  [ \
}  ] ^
public%% 
float%% 
xAdvance%% 
{%% 
get%%  #
{%%$ %
return%%& ,

m_XAdvance%%- 7
;%%7 8
}%%9 :
set%%; >
{%%? @

m_XAdvance%%A K
=%%L M
value%%N S
;%%S T
}%%U V
}%%W X
public** 
float** 
yAdvance** 
{** 
get**  #
{**$ %
return**& ,

m_YAdvance**- 7
;**7 8
}**9 :
set**; >
{**? @

m_YAdvance**A K
=**L M
value**N S
;**S T
}**U V
}**W X
[00 	
SerializeField00	 
]00 
internal11 
float11 
m_XPlacement11 #
;11# $
[33 	
SerializeField33	 
]33 
internal44 
float44 
m_YPlacement44 #
;44# $
[66 	
SerializeField66	 
]66 
internal77 
float77 

m_XAdvance77 !
;77! "
[99 	
SerializeField99	 
]99 
internal:: 
float:: 

m_YAdvance:: !
;::! "
publicDD  
TMP_GlyphValueRecordDD #
(DD# $
floatDD$ )

xPlacementDD* 4
,DD4 5
floatDD6 ;

yPlacementDD< F
,DDF G
floatDDH M
xAdvanceDDN V
,DDV W
floatDDX ]
yAdvanceDD^ f
)DDf g
{EE 	
m_XPlacementFF 
=FF 

xPlacementFF %
;FF% &
m_YPlacementGG 
=GG 

yPlacementGG %
;GG% &

m_XAdvanceHH 
=HH 
xAdvanceHH !
;HH! "

m_YAdvanceII 
=II 
yAdvanceII !
;II! "
}JJ 	
internalLL  
TMP_GlyphValueRecordLL %
(LL% &#
GlyphValueRecord_LegacyLL& =
valueRecordLL> I
)LLI J
{MM 	
m_XPlacementNN 
=NN 
valueRecordNN &
.NN& '

xPlacementNN' 1
;NN1 2
m_YPlacementOO 
=OO 
valueRecordOO &
.OO& '

yPlacementOO' 1
;OO1 2

m_XAdvancePP 
=PP 
valueRecordPP $
.PP$ %
xAdvancePP% -
;PP- .

m_YAdvanceQQ 
=QQ 
valueRecordQQ $
.QQ$ %
yAdvanceQQ% -
;QQ- .
}RR 	
internalTT  
TMP_GlyphValueRecordTT %
(TT% &
GlyphValueRecordTT& 6
valueRecordTT7 B
)TTB C
{UU 	
m_XPlacementVV 
=VV 
valueRecordVV &
.VV& '

xPlacementVV' 1
;VV1 2
m_YPlacementWW 
=WW 
valueRecordWW &
.WW& '

yPlacementWW' 1
;WW1 2

m_XAdvanceXX 
=XX 
valueRecordXX $
.XX$ %
xAdvanceXX% -
;XX- .

m_YAdvanceYY 
=YY 
valueRecordYY $
.YY$ %
yAdvanceYY% -
;YY- .
}ZZ 	
public\\ 
static\\  
TMP_GlyphValueRecord\\ *
operator\\+ 3
+\\4 5
(\\5 6 
TMP_GlyphValueRecord\\6 J
a\\K L
,\\L M 
TMP_GlyphValueRecord\\N b
b\\c d
)\\d e
{]] 	 
TMP_GlyphValueRecord^^  
c^^! "
;^^" #
c__ 
.__ 
m_XPlacement__ 
=__ 
a__ 
.__ 

xPlacement__ )
+__* +
b__, -
.__- .

xPlacement__. 8
;__8 9
c`` 
.`` 
m_YPlacement`` 
=`` 
a`` 
.`` 

yPlacement`` )
+``* +
b``, -
.``- .

yPlacement``. 8
;``8 9
caa 
.aa 

m_XAdvanceaa 
=aa 
aaa 
.aa 
xAdvanceaa %
+aa& '
baa( )
.aa) *
xAdvanceaa* 2
;aa2 3
cbb 
.bb 

m_YAdvancebb 
=bb 
abb 
.bb 
yAdvancebb %
+bb& '
bbb( )
.bb) *
yAdvancebb* 2
;bb2 3
returndd 
cdd 
;dd 
}ee 	
}ff 
[kk 
Serializablekk 
]kk 
publicll 

structll %
TMP_GlyphAdjustmentRecordll +
{mm 
publicqq 
uintqq 

glyphIndexqq 
{qq  
getqq! $
{qq% &
returnqq' -
m_GlyphIndexqq. :
;qq: ;
}qq< =
setqq> A
{qqB C
m_GlyphIndexqqD P
=qqQ R
valueqqS X
;qqX Y
}qqZ [
}qq\ ]
publicvv  
TMP_GlyphValueRecordvv #
glyphValueRecordvv$ 4
{vv5 6
getvv7 :
{vv; <
returnvv= C
m_GlyphValueRecordvvD V
;vvV W
}vvX Y
setvvZ ]
{vv^ _
m_GlyphValueRecordvv` r
=vvs t
valuevvu z
;vvz {
}vv| }
}vv~ 
[|| 	
SerializeField||	 
]|| 
internal}} 
uint}} 
m_GlyphIndex}} "
;}}" #
[ 	
SerializeField	 
] 
internal
ÄÄ "
TMP_GlyphValueRecord
ÄÄ % 
m_GlyphValueRecord
ÄÄ& 8
;
ÄÄ8 9
public
áá '
TMP_GlyphAdjustmentRecord
áá (
(
áá( )
uint
áá) -

glyphIndex
áá. 8
,
áá8 9"
TMP_GlyphValueRecord
áá: N
glyphValueRecord
ááO _
)
áá_ `
{
àà 	
m_GlyphIndex
ââ 
=
ââ 

glyphIndex
ââ %
;
ââ% & 
m_GlyphValueRecord
ää 
=
ää  
glyphValueRecord
ää! 1
;
ää1 2
}
ãã 	
internal
çç '
TMP_GlyphAdjustmentRecord
çç *
(
çç* +#
GlyphAdjustmentRecord
çç+ @
adjustmentRecord
ççA Q
)
ççQ R
{
éé 	
m_GlyphIndex
èè 
=
èè 
adjustmentRecord
èè +
.
èè+ ,

glyphIndex
èè, 6
;
èè6 7 
m_GlyphValueRecord
êê 
=
êê  
new
êê! $"
TMP_GlyphValueRecord
êê% 9
(
êê9 :
adjustmentRecord
êê: J
.
êêJ K
glyphValueRecord
êêK [
)
êê[ \
;
êê\ ]
}
ëë 	
}
íí 
[
óó 
Serializable
óó 
]
óó 
public
òò 

class
òò +
TMP_GlyphPairAdjustmentRecord
òò .
{
ôô 
public
ùù '
TMP_GlyphAdjustmentRecord
ùù (#
firstAdjustmentRecord
ùù) >
{
ùù? @
get
ùùA D
{
ùùE F
return
ùùG M%
m_FirstAdjustmentRecord
ùùN e
;
ùùe f
}
ùùg h
set
ùùi l
{
ùùm n&
m_FirstAdjustmentRecordùùo Ü
=ùùá à
valueùùâ é
;ùùé è
}ùùê ë
}ùùí ì
public
¢¢ '
TMP_GlyphAdjustmentRecord
¢¢ ($
secondAdjustmentRecord
¢¢) ?
{
¢¢@ A
get
¢¢B E
{
¢¢F G
return
¢¢H N&
m_SecondAdjustmentRecord
¢¢O g
;
¢¢g h
}
¢¢i j
set
¢¢k n
{
¢¢o p'
m_SecondAdjustmentRecord¢¢q â
=¢¢ä ã
value¢¢å ë
;¢¢ë í
}¢¢ì î
}¢¢ï ñ
public
ßß $
FontFeatureLookupFlags
ßß % 
featureLookupFlags
ßß& 8
{
ßß9 :
get
ßß; >
{
ßß? @
return
ßßA G"
m_FeatureLookupFlags
ßßH \
;
ßß\ ]
}
ßß^ _
set
ßß` c
{
ßßd e"
m_FeatureLookupFlags
ßßf z
=
ßß{ |
valueßß} Ç
;ßßÇ É
}ßßÑ Ö
}ßßÜ á
[
≠≠ 	
SerializeField
≠≠	 
]
≠≠ 
internal
ÆÆ '
TMP_GlyphAdjustmentRecord
ÆÆ *%
m_FirstAdjustmentRecord
ÆÆ+ B
;
ÆÆB C
[
∞∞ 	
SerializeField
∞∞	 
]
∞∞ 
internal
±± '
TMP_GlyphAdjustmentRecord
±± *&
m_SecondAdjustmentRecord
±±+ C
;
±±C D
[
≥≥ 	
SerializeField
≥≥	 
]
≥≥ 
internal
¥¥ $
FontFeatureLookupFlags
¥¥ '"
m_FeatureLookupFlags
¥¥( <
;
¥¥< =
public
ªª +
TMP_GlyphPairAdjustmentRecord
ªª ,
(
ªª, -'
TMP_GlyphAdjustmentRecord
ªª- F#
firstAdjustmentRecord
ªªG \
,
ªª\ ]'
TMP_GlyphAdjustmentRecord
ªª^ w%
secondAdjustmentRecordªªx é
)ªªé è
{
ºº 	%
m_FirstAdjustmentRecord
ΩΩ #
=
ΩΩ$ %#
firstAdjustmentRecord
ΩΩ& ;
;
ΩΩ; <&
m_SecondAdjustmentRecord
ææ $
=
ææ% &$
secondAdjustmentRecord
ææ' =
;
ææ= >"
m_FeatureLookupFlags
øø  
=
øø! "$
FontFeatureLookupFlags
øø# 9
.
øø9 :
None
øø: >
;
øø> ?
}
¿¿ 	
internal
«« +
TMP_GlyphPairAdjustmentRecord
«« .
(
««. /'
GlyphPairAdjustmentRecord
««/ H'
glyphPairAdjustmentRecord
««I b
)
««b c
{
»» 	%
m_FirstAdjustmentRecord
…… #
=
……$ %
new
……& )'
TMP_GlyphAdjustmentRecord
……* C
(
……C D'
glyphPairAdjustmentRecord
……D ]
.
……] ^#
firstAdjustmentRecord
……^ s
)
……s t
;
……t u&
m_SecondAdjustmentRecord
   $
=
  % &
new
  ' *'
TMP_GlyphAdjustmentRecord
  + D
(
  D E'
glyphPairAdjustmentRecord
  E ^
.
  ^ _$
secondAdjustmentRecord
  _ u
)
  u v
;
  v w"
m_FeatureLookupFlags
ÀÀ  
=
ÀÀ! "$
FontFeatureLookupFlags
ÀÀ# 9
.
ÀÀ9 :
None
ÀÀ: >
;
ÀÀ> ?
}
ÃÃ 	
}
ÕÕ 
public
œœ 

struct
œœ 
GlyphPairKey
œœ 
{
–– 
public
—— 
uint
—— 
firstGlyphIndex
—— #
;
——# $
public
““ 
uint
““ 
secondGlyphIndex
““ $
;
““$ %
public
”” 
uint
”” 
key
”” 
;
”” 
public
’’ 
GlyphPairKey
’’ 
(
’’ 
uint
’’  
firstGlyphIndex
’’! 0
,
’’0 1
uint
’’2 6
secondGlyphIndex
’’7 G
)
’’G H
{
÷÷ 	
this
◊◊ 
.
◊◊ 
firstGlyphIndex
◊◊  
=
◊◊! "
firstGlyphIndex
◊◊# 2
;
◊◊2 3
this
ÿÿ 
.
ÿÿ 
secondGlyphIndex
ÿÿ !
=
ÿÿ" #
secondGlyphIndex
ÿÿ$ 4
;
ÿÿ4 5
key
ŸŸ 
=
ŸŸ 
secondGlyphIndex
ŸŸ "
<<
ŸŸ# %
$num
ŸŸ& (
|
ŸŸ) *
firstGlyphIndex
ŸŸ+ :
;
ŸŸ: ;
}
⁄⁄ 	
internal
‹‹ 
GlyphPairKey
‹‹ 
(
‹‹ +
TMP_GlyphPairAdjustmentRecord
‹‹ ;
record
‹‹< B
)
‹‹B C
{
›› 	
firstGlyphIndex
ﬁﬁ 
=
ﬁﬁ 
record
ﬁﬁ $
.
ﬁﬁ$ %#
firstAdjustmentRecord
ﬁﬁ% :
.
ﬁﬁ: ;

glyphIndex
ﬁﬁ; E
;
ﬁﬁE F
secondGlyphIndex
ﬂﬂ 
=
ﬂﬂ 
record
ﬂﬂ %
.
ﬂﬂ% &$
secondAdjustmentRecord
ﬂﬂ& <
.
ﬂﬂ< =

glyphIndex
ﬂﬂ= G
;
ﬂﬂG H
key
‡‡ 
=
‡‡ 
secondGlyphIndex
‡‡ "
<<
‡‡# %
$num
‡‡& (
|
‡‡) *
firstGlyphIndex
‡‡+ :
;
‡‡: ;
}
·· 	
}
‚‚ 
}„„ 
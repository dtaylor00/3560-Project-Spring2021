œ
âD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.settings-manager@1.0.3\Editor\Settings.cs
	namespace 	
UnityEditor
 
. 
SettingsManagement (
{ 
public 

sealed 
class 
Settings  
{ 
ISettingsRepository 
[ 
] "
m_SettingsRepositories 4
;4 5
public 
event 
Action 
beforeSettingsSaved /
;/ 0
public 
event 
Action 
afterSettingsSaved .
;. /
Settings 
( 
) 
{ 	
} 	
public"" 
Settings"" 
("" 
string"" 
package"" &
,""& '
string""( .
settingsFileName""/ ?
=""@ A
$str""B L
)""L M
{## 	"
m_SettingsRepositories$$ "
=$$# $
new$$% (
ISettingsRepository$$) <
[$$< =
]$$= >
{%% 
new&& %
PackageSettingsRepository&& -
(&&- .
package&&. 5
,&&5 6
settingsFileName&&7 G
)&&G H
,&&H I
new'' "
UserSettingsRepository'' *
(''* +
)''+ ,
}(( 
;(( 
})) 	
public.. 
Settings.. 
(.. 
IEnumerable.. #
<..# $
ISettingsRepository..$ 7
>..7 8
repositories..9 E
)..E F
{// 	"
m_SettingsRepositories00 "
=00# $
repositories00% 1
.001 2
ToArray002 9
(009 :
)00: ;
;00; <
}11 	
public;; 
ISettingsRepository;; "
GetRepository;;# 0
(;;0 1
SettingsScope;;1 >
scope;;? D
);;D E
{<< 	
foreach== 
(== 
var== 
repo== 
in==  "
m_SettingsRepositories==! 7
)==7 8
if>> 
(>> 
repo>> 
.>> 
scope>> 
==>> !
scope>>" '
)>>' (
return?? 
repo?? 
;??  
return@@ 
null@@ 
;@@ 
}AA 	
publicLL 
ISettingsRepositoryLL "
GetRepositoryLL# 0
(LL0 1
SettingsScopeLL1 >
scopeLL? D
,LLD E
stringLLF L
nameLLM Q
)LLQ R
{MM 	
foreachNN 
(NN 
varNN 
repoNN 
inNN  "
m_SettingsRepositoriesNN! 7
)NN7 8
ifOO 
(OO 
repoOO 
.OO 
scopeOO 
==OO !
scopeOO" '
&&OO( *
stringOO+ 1
.OO1 2
EqualsOO2 8
(OO8 9
repoOO9 =
.OO= >
nameOO> B
,OOB C
nameOOD H
)OOH I
)OOI J
returnPP 
repoPP 
;PP  
returnQQ 
nullQQ 
;QQ 
}RR 	
publicWW 
voidWW 
SaveWW 
(WW 
)WW 
{XX 	
ifYY 
(YY 
beforeSettingsSavedYY #
!=YY$ &
nullYY' +
)YY+ ,
beforeSettingsSavedZZ #
(ZZ# $
)ZZ$ %
;ZZ% &
foreach\\ 
(\\ 
var\\ 
repo\\ 
in\\  "
m_SettingsRepositories\\! 7
)\\7 8
repo]] 
.]] 
Save]] 
(]] 
)]] 
;]] 
if__ 
(__ 
afterSettingsSaved__ "
!=__# %
null__& *
)__* +
afterSettingsSaved`` "
(``" #
)``# $
;``$ %
}aa 	
publicjj 
voidjj 
Setjj 
<jj 
Tjj 
>jj 
(jj 
stringjj !
keyjj" %
,jj% &
Tjj' (
valuejj) .
,jj. /
SettingsScopejj0 =
scopejj> C
=jjD E
SettingsScopejjF S
.jjS T
ProjectjjT [
)jj[ \
{kk 	
boolll  
foundScopeRepositoryll %
=ll& '
falsell( -
;ll- .
foreachnn 
(nn 
varnn 
reponn 
innn  "
m_SettingsRepositoriesnn! 7
)nn7 8
{oo 
ifpp 
(pp 
repopp 
.pp 
scopepp 
==pp !
scopepp" '
)pp' (
{qq 
reporr 
.rr 
Setrr 
<rr 
Trr 
>rr 
(rr  
keyrr  #
,rr# $
valuerr% *
)rr* +
;rr+ , 
foundScopeRepositoryss (
=ss) *
truess+ /
;ss/ 0
}tt 
}uu 
ifww 
(ww 
!ww  
foundScopeRepositoryww %
)ww% &
Debugxx 
.xx 

LogWarningxx  
(xx  !
$strxx! ;
+xx< =
scopexx> C
+xxD E
$strxxF O
)xxO P
;xxP Q
}yy 	
public
ÉÉ 
void
ÉÉ 
Set
ÉÉ 
<
ÉÉ 
T
ÉÉ 
>
ÉÉ 
(
ÉÉ 
string
ÉÉ !
key
ÉÉ" %
,
ÉÉ% &
T
ÉÉ' (
value
ÉÉ) .
,
ÉÉ. /
string
ÉÉ0 6
repositoryName
ÉÉ7 E
,
ÉÉE F
SettingsScope
ÉÉG T
scope
ÉÉU Z
=
ÉÉ[ \
SettingsScope
ÉÉ] j
.
ÉÉj k
Project
ÉÉk r
)
ÉÉr s
{
ÑÑ 	
bool
ÖÖ "
foundScopeRepository
ÖÖ %
=
ÖÖ& '
false
ÖÖ( -
;
ÖÖ- .
foreach
áá 
(
áá 
var
áá 
repo
áá 
in
áá  $
m_SettingsRepositories
áá! 7
)
áá7 8
{
àà 
if
ââ 
(
ââ 
repo
ââ 
.
ââ 
scope
ââ 
==
ââ !
scope
ââ" '
&&
ââ( *
string
ââ+ 1
.
ââ1 2
Equals
ââ2 8
(
ââ8 9
repo
ââ9 =
.
ââ= >
name
ââ> B
,
ââB C
repositoryName
ââD R
)
ââR S
)
ââS T
{
ää 
repo
ãã 
.
ãã 
Set
ãã 
<
ãã 
T
ãã 
>
ãã 
(
ãã  
key
ãã  #
,
ãã# $
value
ãã% *
)
ãã* +
;
ãã+ ,"
foundScopeRepository
åå (
=
åå) *
true
åå+ /
;
åå/ 0
}
çç 
}
éé 
if
êê 
(
êê 
!
êê "
foundScopeRepository
êê %
)
êê% &
Debug
ëë 
.
ëë 

LogWarning
ëë  
(
ëë  !
$str
ëë! A
+
ëëB C
repositoryName
ëëD R
+
ëëS T
$str
ëëU d
+
ëëe f
scope
ëëg l
+
ëëm n
$strëëo Ñ
)ëëÑ Ö
;ëëÖ Ü
}
íí 	
public
õõ 
T
õõ 
Get
õõ 
<
õõ 
T
õõ 
>
õõ 
(
õõ 
string
õõ 
key
õõ "
,
õõ" #
SettingsScope
õõ$ 1
scope
õõ2 7
=
õõ8 9
SettingsScope
õõ: G
.
õõG H
Project
õõH O
,
õõO P
T
õõQ R
fallback
õõS [
=
õõ\ ]
default
õõ^ e
(
õõe f
T
õõf g
)
õõg h
)
õõh i
{
úú 	
foreach
ùù 
(
ùù 
var
ùù 
repo
ùù 
in
ùù  $
m_SettingsRepositories
ùù! 7
)
ùù7 8
{
ûû 
if
üü 
(
üü 
repo
üü 
.
üü 
scope
üü 
==
üü !
scope
üü" '
)
üü' (
return
†† 
repo
†† 
.
††  
Get
††  #
<
††# $
T
††$ %
>
††% &
(
††& '
key
††' *
,
††* +
fallback
††, 4
)
††4 5
;
††5 6
}
°° 
Debug
££ 
.
££ 

LogWarning
££ 
(
££ 
$str
££ 7
+
££8 9
scope
££: ?
+
££@ A
$str
££B K
)
££K L
;
££L M
return
§§ 
fallback
§§ 
;
§§ 
}
•• 	
public
ØØ 
T
ØØ 
Get
ØØ 
<
ØØ 
T
ØØ 
>
ØØ 
(
ØØ 
string
ØØ 
key
ØØ "
,
ØØ" #
string
ØØ$ *
repositoryName
ØØ+ 9
,
ØØ9 :
SettingsScope
ØØ; H
scope
ØØI N
=
ØØO P
SettingsScope
ØØQ ^
.
ØØ^ _
Project
ØØ_ f
,
ØØf g
T
ØØh i
fallback
ØØj r
=
ØØs t
default
ØØu |
(
ØØ| }
T
ØØ} ~
)
ØØ~ 
)ØØ Ä
{
∞∞ 	
foreach
±± 
(
±± 
var
±± 
repo
±± 
in
±±  $
m_SettingsRepositories
±±! 7
)
±±7 8
{
≤≤ 
if
≥≥ 
(
≥≥ 
repo
≥≥ 
.
≥≥ 
scope
≥≥ 
==
≥≥ !
scope
≥≥" '
&&
≥≥( *
string
≥≥+ 1
.
≥≥1 2
Equals
≥≥2 8
(
≥≥8 9
repo
≥≥9 =
.
≥≥= >
name
≥≥> B
,
≥≥B C
repositoryName
≥≥D R
)
≥≥R S
)
≥≥S T
return
¥¥ 
repo
¥¥ 
.
¥¥  
Get
¥¥  #
<
¥¥# $
T
¥¥$ %
>
¥¥% &
(
¥¥& '
key
¥¥' *
,
¥¥* +
fallback
¥¥, 4
)
¥¥4 5
;
¥¥5 6
}
µµ 
Debug
∑∑ 
.
∑∑ 

LogWarning
∑∑ 
(
∑∑ 
$str
∑∑ =
+
∑∑> ?
repositoryName
∑∑@ N
+
∑∑O P
$str
∑∑Q `
+
∑∑a b
scope
∑∑c h
+
∑∑i j
$str∑∑k Ä
)∑∑Ä Å
;∑∑Å Ç
return
∏∏ 
fallback
∏∏ 
;
∏∏ 
}
ππ 	
public
¬¬ 
bool
¬¬ 
ContainsKey
¬¬ 
<
¬¬  
T
¬¬  !
>
¬¬! "
(
¬¬" #
string
¬¬# )
key
¬¬* -
,
¬¬- .
SettingsScope
¬¬/ <
scope
¬¬= B
=
¬¬C D
SettingsScope
¬¬E R
.
¬¬R S
Project
¬¬S Z
)
¬¬Z [
{
√√ 	
foreach
ƒƒ 
(
ƒƒ 
var
ƒƒ 
repo
ƒƒ 
in
ƒƒ  $
m_SettingsRepositories
ƒƒ! 7
)
ƒƒ7 8
{
≈≈ 
if
∆∆ 
(
∆∆ 
repo
∆∆ 
.
∆∆ 
scope
∆∆ 
==
∆∆ !
scope
∆∆" '
)
∆∆' (
return
«« 
repo
«« 
.
««  
ContainsKey
««  +
<
««+ ,
T
««, -
>
««- .
(
««. /
key
««/ 2
)
««2 3
;
««3 4
}
»» 
Debug
   
.
   

LogWarning
   
(
   
$str
   7
+
  8 9
scope
  : ?
+
  @ A
$str
  B K
)
  K L
;
  L M
return
ÀÀ 
false
ÀÀ 
;
ÀÀ 
}
ÃÃ 	
public
÷÷ 
bool
÷÷ 
ContainsKey
÷÷ 
<
÷÷  
T
÷÷  !
>
÷÷! "
(
÷÷" #
string
÷÷# )
key
÷÷* -
,
÷÷- .
string
÷÷/ 5
repositoryName
÷÷6 D
,
÷÷D E
SettingsScope
÷÷F S
scope
÷÷T Y
=
÷÷Z [
SettingsScope
÷÷\ i
.
÷÷i j
Project
÷÷j q
)
÷÷q r
{
◊◊ 	
foreach
ÿÿ 
(
ÿÿ 
var
ÿÿ 
repo
ÿÿ 
in
ÿÿ  $
m_SettingsRepositories
ÿÿ! 7
)
ÿÿ7 8
{
ŸŸ 
if
⁄⁄ 
(
⁄⁄ 
repo
⁄⁄ 
.
⁄⁄ 
scope
⁄⁄ 
==
⁄⁄ !
scope
⁄⁄" '
&&
⁄⁄( *
string
⁄⁄+ 1
.
⁄⁄1 2
Equals
⁄⁄2 8
(
⁄⁄8 9
repo
⁄⁄9 =
.
⁄⁄= >
name
⁄⁄> B
,
⁄⁄B C
repositoryName
⁄⁄D R
)
⁄⁄R S
)
⁄⁄S T
return
€€ 
repo
€€ 
.
€€  
ContainsKey
€€  +
<
€€+ ,
T
€€, -
>
€€- .
(
€€. /
key
€€/ 2
)
€€2 3
;
€€3 4
}
‹‹ 
Debug
ﬁﬁ 
.
ﬁﬁ 

LogWarning
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ =
+
ﬁﬁ> ?
repositoryName
ﬁﬁ@ N
+
ﬁﬁO P
$str
ﬁﬁQ `
+
ﬁﬁa b
scope
ﬁﬁc h
+
ﬁﬁi j
$strﬁﬁk Ä
)ﬁﬁÄ Å
;ﬁﬁÅ Ç
return
ﬂﬂ 
false
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
public
ËË 
void
ËË 
	DeleteKey
ËË 
<
ËË 
T
ËË 
>
ËË  
(
ËË  !
string
ËË! '
key
ËË( +
,
ËË+ ,
SettingsScope
ËË- :
scope
ËË; @
=
ËËA B
SettingsScope
ËËC P
.
ËËP Q
Project
ËËQ X
)
ËËX Y
{
ÈÈ 	
bool
ÍÍ "
foundScopeRepository
ÍÍ %
=
ÍÍ& '
false
ÍÍ( -
;
ÍÍ- .
foreach
ÏÏ 
(
ÏÏ 
var
ÏÏ 
repo
ÏÏ 
in
ÏÏ  $
m_SettingsRepositories
ÏÏ! 7
)
ÏÏ7 8
{
ÌÌ 
if
ÓÓ 
(
ÓÓ 
repo
ÓÓ 
.
ÓÓ 
scope
ÓÓ 
==
ÓÓ !
scope
ÓÓ" '
)
ÓÓ' (
{
ÔÔ "
foundScopeRepository
 (
=
) *
true
+ /
;
/ 0
repo
ÒÒ 
.
ÒÒ 
Remove
ÒÒ 
<
ÒÒ  
T
ÒÒ  !
>
ÒÒ! "
(
ÒÒ" #
key
ÒÒ# &
)
ÒÒ& '
;
ÒÒ' (
}
ÚÚ 
}
ÛÛ 
if
ıı 
(
ıı 
!
ıı "
foundScopeRepository
ıı %
)
ıı% &
Debug
ˆˆ 
.
ˆˆ 

LogWarning
ˆˆ  
(
ˆˆ  !
$str
ˆˆ! ;
+
ˆˆ< =
scope
ˆˆ> C
+
ˆˆD E
$str
ˆˆF O
)
ˆˆO P
;
ˆˆP Q
}
˜˜ 	
public
ÄÄ 
void
ÄÄ 
	DeleteKey
ÄÄ 
<
ÄÄ 
T
ÄÄ 
>
ÄÄ  
(
ÄÄ  !
string
ÄÄ! '
key
ÄÄ( +
,
ÄÄ+ ,
string
ÄÄ- 3
repositoryName
ÄÄ4 B
,
ÄÄB C
SettingsScope
ÄÄD Q
scope
ÄÄR W
=
ÄÄX Y
SettingsScope
ÄÄZ g
.
ÄÄg h
Project
ÄÄh o
)
ÄÄo p
{
ÅÅ 	
bool
ÇÇ "
foundScopeRepository
ÇÇ %
=
ÇÇ& '
false
ÇÇ( -
;
ÇÇ- .
foreach
ÑÑ 
(
ÑÑ 
var
ÑÑ 
repo
ÑÑ 
in
ÑÑ  $
m_SettingsRepositories
ÑÑ! 7
)
ÑÑ7 8
{
ÖÖ 
if
ÜÜ 
(
ÜÜ 
repo
ÜÜ 
.
ÜÜ 
scope
ÜÜ 
==
ÜÜ !
scope
ÜÜ" '
&&
ÜÜ( *
string
ÜÜ+ 1
.
ÜÜ1 2
Equals
ÜÜ2 8
(
ÜÜ8 9
repo
ÜÜ9 =
.
ÜÜ= >
name
ÜÜ> B
,
ÜÜB C
repositoryName
ÜÜD R
)
ÜÜR S
)
ÜÜS T
{
áá "
foundScopeRepository
àà (
=
àà) *
true
àà+ /
;
àà/ 0
repo
ââ 
.
ââ 
Remove
ââ 
<
ââ  
T
ââ  !
>
ââ! "
(
ââ" #
key
ââ# &
)
ââ& '
;
ââ' (
}
ää 
}
ãã 
if
çç 
(
çç 
!
çç "
foundScopeRepository
çç %
)
çç% &
Debug
éé 
.
éé 

LogWarning
éé  
(
éé  !
$str
éé! A
+
ééB C
repositoryName
ééD R
+
ééS T
$str
ééU d
+
éée f
scope
éég l
+
éém n
$strééo Ñ
)ééÑ Ö
;ééÖ Ü
}
èè 	
}
êê 
}ëë Å±
ïD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.settings-manager@1.0.3\Editor\UserSettingsProvider.cs
	namespace 	
UnityEditor
 
. 
SettingsManagement (
{ 
public 

sealed 
class  
UserSettingsProvider ,
:- .
SettingsProvider/ ?
{ 
public 
const 
string !
developerModeCategory 1
=2 3
$str4 D
;D E
const!! 
string!! 
k_SettingsName!! #
=!!$ %
$str!!& D
;!!D E
const$$ 
int$$ 
k_LabelWidth$$ 
=$$  
$num$$! $
;$$$ %
static&& 
int&& 

labelWidth&& 
{'' 	
get(( 
{)) 
if** 
(** 
s_DefaultLabelWidth** '
!=**( *
null**+ /
)**/ 0
return++ 
(++ 
int++ 
)++  
(++  !
(++! "
float++" '
)++' (
s_DefaultLabelWidth++( ;
.++; <
GetValue++< D
(++D E
null++E I
,++I J
null++K O
)++O P
)++P Q
;++Q R
return-- 
k_LabelWidth-- #
;--# $
}.. 
}// 	
static11 
int11 !
defaultLayoutMaxWidth11 (
{22 	
get33 
{44 
if55 
(55 #
s_DefaultLayoutMaxWidth55 +
!=55, .
null55/ 3
)553 4
return66 
(66 
int66 
)66  
(66  !
(66! "
float66" '
)66' (#
s_DefaultLayoutMaxWidth66( ?
.66? @
GetValue66@ H
(66H I
null66I M
,66M N
null66O S
)66S T
)66T U
;66U V
return88 
$num88 
;88 
}99 
}:: 	
ListII 
<II 
stringII 
>II 
m_CategoriesII !
;II! "

DictionaryJJ 
<JJ 
stringJJ 
,JJ 
ListJJ 
<JJ  
	PrefEntryJJ  )
>JJ) *
>JJ* +

m_SettingsJJ, 6
;JJ6 7

DictionaryKK 
<KK 
stringKK 
,KK 
ListKK 
<KK  

MethodInfoKK  *
>KK* +
>KK+ ,
m_SettingBlocksKK- <
;KK< =
staticOO 
readonlyOO 
stringOO 
[OO 
]OO  
s_SearchContextOO! 0
=OO1 2
newOO3 6
stringOO7 =
[OO= >
$numOO> ?
]OO? @
;OO@ A
	EventTypePP .
"m_SettingsBlockKeywordsInitializedPP 4
;PP4 5
AssemblyQQ 
[QQ 
]QQ 
m_AssembliesQQ 
;QQ  
staticRR 
SettingsRR 

s_SettingsRR "
;RR" #
SettingsSS 
m_SettingsInstanceSS #
;SS# $
staticVV 
PropertyInfoVV 
s_DefaultLabelWidthVV /
;VV/ 0
staticWW 
PropertyInfoWW #
s_DefaultLayoutMaxWidthWW 3
;WW3 4
staticZZ 
SettingsZZ (
userSettingsProviderSettingsZZ 4
{[[ 	
get\\ 
{]] 
if^^ 
(^^ 

s_Settings^^ 
==^^ !
null^^" &
)^^& '

s_Settings__ 
=__  
new__! $
Settings__% -
(__- .
new__. 1
[__2 3
]__3 4
{__5 6
new__7 :"
UserSettingsRepository__; Q
(__Q R
)__R S
}__T U
)__U V
;__V W
returnaa 

s_Settingsaa !
;aa! "
}bb 
}cc 	
internalee 
staticee 
UserSettingee #
<ee# $
boolee$ (
>ee( )
showHiddenSettingsee* <
=ee= >
newee? B
UserSettingeeC N
<eeN O
booleeO S
>eeS T
(eeT U(
userSettingsProviderSettingseeU q
,eeq r
$str	ees à
,
eeà â
false
eeä è
,
eeè ê
SettingsScope
eeë û
.
eeû ü
User
eeü £
)
ee£ §
;
ee§ •
internalff 
staticff 
UserSettingff #
<ff# $
boolff$ (
>ff( )$
showUnregisteredSettingsff* B
=ffC D
newffE H
UserSettingffI T
<ffT U
boolffU Y
>ffY Z
(ffZ [(
userSettingsProviderSettingsff[ w
,ffw x
$str	ffy î
,
ffî ï
false
ffñ õ
,
ffõ ú
SettingsScope
ffù ™
.
ff™ ´
User
ff´ Ø
)
ffØ ∞
;
ff∞ ±
internalgg 
staticgg 
UserSettinggg #
<gg# $
boolgg$ (
>gg( )
	listByKeygg* 3
=gg4 5
newgg6 9
UserSettinggg: E
<ggE F
boolggF J
>ggJ K
(ggK L(
userSettingsProviderSettingsggL h
,ggh i
$strggj ~
,gg~ 
false
ggÄ Ö
,
ggÖ Ü
SettingsScope
ggá î
.
ggî ï
User
ggï ô
)
ggô ö
;
ggö õ
internalhh 
statichh 
UserSettinghh #
<hh# $
boolhh$ (
>hh( )
showUserSettingshh* :
=hh; <
newhh= @
UserSettinghhA L
<hhL M
boolhhM Q
>hhQ R
(hhR S(
userSettingsProviderSettingshhS o
,hho p
$str	hhq å
,
hhå ç
true
hhé í
,
hhí ì
SettingsScope
hhî °
.
hh° ¢
User
hh¢ ¶
)
hh¶ ß
;
hhß ®
internalii 
staticii 
UserSettingii #
<ii# $
boolii$ (
>ii( )
showProjectSettingsii* =
=ii> ?
newii@ C
UserSettingiiD O
<iiO P
booliiP T
>iiT U
(iiU V(
userSettingsProviderSettingsiiV r
,iir s
$str	iit í
,
iií ì
true
iiî ò
,
iiò ô
SettingsScope
iiö ß
.
iiß ®
User
ii® ¨
)
ii¨ ≠
;
ii≠ Æ
publictt  
UserSettingsProvidertt #
(tt# $
stringtt$ *
pathtt+ /
,tt/ 0
Settingstt1 9
settingstt: B
,ttB C
AssemblyttD L
[ttL M
]ttM N

assembliesttO Y
,ttY Z
SettingsScopett[ h
scopestti o
=ttp q
SettingsScopettr 
.	tt Ä
User
ttÄ Ñ
)
ttÑ Ö
:uu 
baseuu 
(uu 
pathuu 
,uu 
scopesuu 
)uu  
{~~ 	
if 
( 
settings 
== 
null  
)  !
throw
ÄÄ 
new
ÄÄ #
ArgumentNullException
ÄÄ /
(
ÄÄ/ 0
$str
ÄÄ0 :
)
ÄÄ: ;
;
ÄÄ; <
if
ÇÇ 
(
ÇÇ 

assemblies
ÇÇ 
==
ÇÇ 
null
ÇÇ "
)
ÇÇ" #
throw
ÉÉ 
new
ÉÉ #
ArgumentNullException
ÉÉ /
(
ÉÉ/ 0
$str
ÉÉ0 <
)
ÉÉ< =
;
ÉÉ= > 
m_SettingsInstance
ÖÖ 
=
ÖÖ  
settings
ÖÖ! )
;
ÖÖ) *
m_Assemblies
ÜÜ 
=
ÜÜ 

assemblies
ÜÜ %
;
ÜÜ% &
}
ãã 	
public
ìì 
override
ìì 
void
ìì 

OnActivate
ìì '
(
ìì' (
string
ìì( .
searchContext
ìì/ <
,
ìì< =
VisualElement
ìì> K
rootElement
ììL W
)
ììW X
{
îî 	,
SearchForUserSettingAttributes
ïï *
(
ïï* +
)
ïï+ ,
;
ïï, -
var
óó 
window
óó 
=
óó 
GetType
óó  
(
óó  !
)
óó! "
.
óó" #
GetProperty
óó# .
(
óó. /
$str
óó/ ?
,
óó? @
BindingFlags
óóA M
.
óóM N
Instance
óóN V
|
óóW X
BindingFlags
óóY e
.
óóe f
	NonPublic
óóf o
)
óóo p
;
óóp q
if
ôô 
(
ôô 
window
ôô 
!=
ôô 
null
ôô 
)
ôô 
{
öö !
s_DefaultLabelWidth
õõ #
=
õõ$ %
window
õõ& ,
.
õõ, -
PropertyType
õõ- 9
.
õõ9 :
GetProperty
õõ: E
(
õõE F
$str
õõF [
,
õõ[ \
BindingFlags
õõ] i
.
õõi j
Public
õõj p
|
õõq r
BindingFlags
õõs 
.õõ Ä
StaticõõÄ Ü
)õõÜ á
;õõá à%
s_DefaultLayoutMaxWidth
úú '
=
úú( )
window
úú* 0
.
úú0 1
PropertyType
úú1 =
.
úú= >
GetProperty
úú> I
(
úúI J
$str
úúJ c
,
úúc d
BindingFlags
úúe q
.
úúq r
Public
úúr x
|
úúy z
BindingFlagsúú{ á
.úúá à
Staticúúà é
)úúé è
;úúè ê
}
ùù 
}
ûû 	
struct
°° 
	PrefEntry
°° 
{
¢¢ 	

GUIContent
££ 
	m_Content
££  
;
££  !
IUserSetting
§§ 
m_Pref
§§ 
;
§§  
public
¶¶ 

GUIContent
¶¶ 
content
¶¶ %
{
ßß 
get
®® 
{
®® 
return
®® 
	m_Content
®® &
;
®®& '
}
®®( )
}
©© 
public
´´ 
IUserSetting
´´ 
pref
´´  $
{
¨¨ 
get
≠≠ 
{
≠≠ 
return
≠≠ 
m_Pref
≠≠ #
;
≠≠# $
}
≠≠% &
}
ÆÆ 
public
∞∞ 
	PrefEntry
∞∞ 
(
∞∞ 

GUIContent
∞∞ '
content
∞∞( /
,
∞∞/ 0
IUserSetting
∞∞1 =
pref
∞∞> B
)
∞∞B C
{
±± 
	m_Content
≤≤ 
=
≤≤ 
content
≤≤ #
;
≤≤# $
m_Pref
≥≥ 
=
≥≥ 
pref
≥≥ 
;
≥≥ 
}
¥¥ 
}
µµ 	
void
∑∑ ,
SearchForUserSettingAttributes
∑∑ +
(
∑∑+ ,
)
∑∑, -
{
∏∏ 	
var
ππ 
isDeveloperMode
ππ 
=
ππ  !
EditorPrefs
ππ" -
.
ππ- .
GetBool
ππ. 5
(
ππ5 6
$str
ππ6 E
,
ππE F
false
ππG L
)
ππL M
;
ππM N
var
∫∫ 
keywordsHash
∫∫ 
=
∫∫ 
new
∫∫ "
HashSet
∫∫# *
<
∫∫* +
string
∫∫+ 1
>
∫∫1 2
(
∫∫2 3
)
∫∫3 4
;
∫∫4 5
if
ºº 
(
ºº 

m_Settings
ºº 
!=
ºº 
null
ºº "
)
ºº" #

m_Settings
ΩΩ 
.
ΩΩ 
Clear
ΩΩ  
(
ΩΩ  !
)
ΩΩ! "
;
ΩΩ" #
else
ææ 

m_Settings
øø 
=
øø 
new
øø  

Dictionary
øø! +
<
øø+ ,
string
øø, 2
,
øø2 3
List
øø4 8
<
øø8 9
	PrefEntry
øø9 B
>
øøB C
>
øøC D
(
øøD E
)
øøE F
;
øøF G
if
¡¡ 
(
¡¡ 
m_SettingBlocks
¡¡ 
!=
¡¡  "
null
¡¡# '
)
¡¡' (
m_SettingBlocks
¬¬ 
.
¬¬  
Clear
¬¬  %
(
¬¬% &
)
¬¬& '
;
¬¬' (
else
√√ 
m_SettingBlocks
ƒƒ 
=
ƒƒ  !
new
ƒƒ" %

Dictionary
ƒƒ& 0
<
ƒƒ0 1
string
ƒƒ1 7
,
ƒƒ7 8
List
ƒƒ9 =
<
ƒƒ= >

MethodInfo
ƒƒ> H
>
ƒƒH I
>
ƒƒI J
(
ƒƒJ K
)
ƒƒK L
;
ƒƒL M
var
∆∆ 
types
∆∆ 
=
∆∆ 
m_Assemblies
∆∆ $
.
∆∆$ %

SelectMany
∆∆% /
(
∆∆/ 0
x
∆∆0 1
=>
∆∆2 4
x
∆∆5 6
.
∆∆6 7
GetTypes
∆∆7 ?
(
∆∆? @
)
∆∆@ A
)
∆∆A B
;
∆∆B C
var
…… 
fields
…… 
=
…… 
types
…… 
.
…… 

SelectMany
…… )
(
……) *
x
……* +
=>
……, .
x
   
.
   
	GetFields
   
(
    
BindingFlags
    ,
.
  , -
Public
  - 3
|
  4 5
BindingFlags
  6 B
.
  B C
	NonPublic
  C L
|
  M N
BindingFlags
  O [
.
  [ \
Instance
  \ d
|
  e f
BindingFlags
  g s
.
  s t
Static
  t z
)
  z {
.
ÀÀ 
Where
ÀÀ 
(
ÀÀ 
prop
ÀÀ 
=>
ÀÀ  "
	Attribute
ÀÀ# ,
.
ÀÀ, -
	IsDefined
ÀÀ- 6
(
ÀÀ6 7
prop
ÀÀ7 ;
,
ÀÀ; <
typeof
ÀÀ= C
(
ÀÀC D"
UserSettingAttribute
ÀÀD X
)
ÀÀX Y
)
ÀÀY Z
)
ÀÀZ [
)
ÀÀ[ \
;
ÀÀ\ ]
var
ÕÕ 
methods
ÕÕ 
=
ÕÕ 
types
ÕÕ 
.
ÕÕ  

SelectMany
ÕÕ  *
(
ÕÕ* +
x
ÕÕ+ ,
=>
ÕÕ- /
x
ÕÕ0 1
.
ÕÕ1 2

GetMethods
ÕÕ2 <
(
ÕÕ< =
BindingFlags
ÕÕ= I
.
ÕÕI J
Instance
ÕÕJ R
|
ÕÕS T
BindingFlags
ÕÕU a
.
ÕÕa b
Static
ÕÕb h
|
ÕÕi j
BindingFlags
ÕÕk w
.
ÕÕw x
Public
ÕÕx ~
|ÕÕ Ä
BindingFlagsÕÕÅ ç
.ÕÕç é
	NonPublicÕÕé ó
)ÕÕó ò
.
ŒŒ 
Where
ŒŒ 
(
ŒŒ 
y
ŒŒ 
=>
ŒŒ 
	Attribute
ŒŒ  )
.
ŒŒ) *
	IsDefined
ŒŒ* 3
(
ŒŒ3 4
y
ŒŒ4 5
,
ŒŒ5 6
typeof
ŒŒ7 =
(
ŒŒ= >'
UserSettingBlockAttribute
ŒŒ> W
)
ŒŒW X
)
ŒŒX Y
)
ŒŒY Z
)
ŒŒZ [
;
ŒŒ[ \
foreach
–– 
(
–– 
var
–– 
field
–– 
in
–– !
fields
––" (
)
––( )
{
—— 
if
““ 
(
““ 
!
““ 
field
““ 
.
““ 
IsStatic
““ #
)
““# $
{
”” 
Debug
‘‘ 
.
‘‘ 

LogWarning
‘‘ $
(
‘‘$ %
$str
‘‘% e
+
‘‘f g
field
‘‘h m
.
‘‘m n
Name
‘‘n r
+
‘‘s t
$str
‘‘u z
)
‘‘z {
;
‘‘{ |
continue
’’ 
;
’’ 
}
÷÷ 
var
ÿÿ 
attrib
ÿÿ 
=
ÿÿ 
(
ÿÿ "
UserSettingAttribute
ÿÿ 2
)
ÿÿ2 3
	Attribute
ÿÿ3 <
.
ÿÿ< = 
GetCustomAttribute
ÿÿ= O
(
ÿÿO P
field
ÿÿP U
,
ÿÿU V
typeof
ÿÿW ]
(
ÿÿ] ^"
UserSettingAttribute
ÿÿ^ r
)
ÿÿr s
)
ÿÿs t
;
ÿÿt u
if
⁄⁄ 
(
⁄⁄ 
!
⁄⁄ 
attrib
⁄⁄ 
.
⁄⁄ '
visibleInSettingsProvider
⁄⁄ 5
)
⁄⁄5 6
continue
€€ 
;
€€ 
var
›› 
pref
›› 
=
›› 
(
›› 
IUserSetting
›› (
)
››( )
field
››) .
.
››. /
GetValue
››/ 7
(
››7 8
null
››8 <
)
››< =
;
››= >
if
ﬂﬂ 
(
ﬂﬂ 
pref
ﬂﬂ 
==
ﬂﬂ 
null
ﬂﬂ  
)
ﬂﬂ  !
{
‡‡ 
Debug
·· 
.
·· 

LogWarning
·· $
(
··$ %
$str··% ä
+··ã å
field··ç í
.··í ì
Name··ì ó
+··ò ô
$str··ö û
)··û ü
;··ü †
continue
‚‚ 
;
‚‚ 
}
„„ 
var
ÂÂ 
category
ÂÂ 
=
ÂÂ 
string
ÂÂ %
.
ÂÂ% &
IsNullOrEmpty
ÂÂ& 3
(
ÂÂ3 4
attrib
ÂÂ4 :
.
ÂÂ: ;
category
ÂÂ; C
)
ÂÂC D
?
ÂÂE F
$str
ÂÂG V
:
ÂÂW X
attrib
ÂÂY _
.
ÂÂ_ `
category
ÂÂ` h
;
ÂÂh i
var
ÊÊ 
content
ÊÊ 
=
ÊÊ 
	listByKey
ÊÊ '
?
ÊÊ( )
new
ÊÊ* -

GUIContent
ÊÊ. 8
(
ÊÊ8 9
pref
ÊÊ9 =
.
ÊÊ= >
key
ÊÊ> A
)
ÊÊA B
:
ÊÊC D
attrib
ÊÊE K
.
ÊÊK L
title
ÊÊL Q
;
ÊÊQ R
if
ËË 
(
ËË #
developerModeCategory
ËË )
.
ËË) *
Equals
ËË* 0
(
ËË0 1
category
ËË1 9
)
ËË9 :
&&
ËË; =
!
ËË> ?
isDeveloperMode
ËË? N
)
ËËN O
continue
ÈÈ 
;
ÈÈ 
List
ÎÎ 
<
ÎÎ 
	PrefEntry
ÎÎ 
>
ÎÎ 
settings
ÎÎ  (
;
ÎÎ( )
if
ÌÌ 
(
ÌÌ 

m_Settings
ÌÌ 
.
ÌÌ 
TryGetValue
ÌÌ *
(
ÌÌ* +
category
ÌÌ+ 3
,
ÌÌ3 4
out
ÌÌ5 8
settings
ÌÌ9 A
)
ÌÌA B
)
ÌÌB C
settings
ÓÓ 
.
ÓÓ 
Add
ÓÓ  
(
ÓÓ  !
new
ÓÓ! $
	PrefEntry
ÓÓ% .
(
ÓÓ. /
content
ÓÓ/ 6
,
ÓÓ6 7
pref
ÓÓ8 <
)
ÓÓ< =
)
ÓÓ= >
;
ÓÓ> ?
else
ÔÔ 

m_Settings
 
.
 
Add
 "
(
" #
category
# +
,
+ ,
new
- 0
List
1 5
<
5 6
	PrefEntry
6 ?
>
? @
(
@ A
)
A B
{
C D
new
E H
	PrefEntry
I R
(
R S
content
S Z
,
Z [
pref
\ `
)
` a
}
b c
)
c d
;
d e
}
ÒÒ 
foreach
ÛÛ 
(
ÛÛ 
var
ÛÛ 
method
ÛÛ 
in
ÛÛ  "
methods
ÛÛ# *
)
ÛÛ* +
{
ÙÙ 
var
ıı 
attrib
ıı 
=
ıı 
(
ıı '
UserSettingBlockAttribute
ıı 7
)
ıı7 8
	Attribute
ıı8 A
.
ııA B 
GetCustomAttribute
ııB T
(
ııT U
method
ııU [
,
ıı[ \
typeof
ıı] c
(
ııc d'
UserSettingBlockAttribute
ııd }
)
ıı} ~
)
ıı~ 
;ıı Ä
var
ˆˆ 
category
ˆˆ 
=
ˆˆ 
string
ˆˆ %
.
ˆˆ% &
IsNullOrEmpty
ˆˆ& 3
(
ˆˆ3 4
attrib
ˆˆ4 :
.
ˆˆ: ;
category
ˆˆ; C
)
ˆˆC D
?
ˆˆE F
$str
ˆˆG V
:
ˆˆW X
attrib
ˆˆY _
.
ˆˆ_ `
category
ˆˆ` h
;
ˆˆh i
if
¯¯ 
(
¯¯ #
developerModeCategory
¯¯ )
.
¯¯) *
Equals
¯¯* 0
(
¯¯0 1
category
¯¯1 9
)
¯¯9 :
&&
¯¯; =
!
¯¯> ?
isDeveloperMode
¯¯? N
)
¯¯N O
continue
˘˘ 
;
˘˘ 
List
˚˚ 
<
˚˚ 

MethodInfo
˚˚ 
>
˚˚  
blocks
˚˚! '
;
˚˚' (
var
˝˝ 

parameters
˝˝ 
=
˝˝  
method
˝˝! '
.
˝˝' (
GetParameters
˝˝( 5
(
˝˝5 6
)
˝˝6 7
;
˝˝7 8
if
ˇˇ 
(
ˇˇ 
!
ˇˇ 
method
ˇˇ 
.
ˇˇ 
IsStatic
ˇˇ $
||
ˇˇ% '

parameters
ˇˇ( 2
.
ˇˇ2 3
Length
ˇˇ3 9
<
ˇˇ: ;
$num
ˇˇ< =
||
ˇˇ> @

parameters
ˇˇA K
[
ˇˇK L
$num
ˇˇL M
]
ˇˇM N
.
ˇˇN O
ParameterType
ˇˇO \
!=
ˇˇ] _
typeof
ˇˇ` f
(
ˇˇf g
string
ˇˇg m
)
ˇˇm n
)
ˇˇn o
{
ÄÄ 
Debug
ÅÅ 
.
ÅÅ 

LogWarning
ÅÅ $
(
ÅÅ$ %
$strÅÅ% ≈
+ÅÅ∆ «
methodÅÅ» Œ
.ÅÅŒ œ
NameÅÅœ ”
+ÅÅ‘ ’
$strÅÅ÷ ⁄
)ÅÅ⁄ €
;ÅÅ€ ‹
continue
ÇÇ 
;
ÇÇ 
}
ÉÉ 
if
ÖÖ 
(
ÖÖ 
m_SettingBlocks
ÖÖ #
.
ÖÖ# $
TryGetValue
ÖÖ$ /
(
ÖÖ/ 0
category
ÖÖ0 8
,
ÖÖ8 9
out
ÖÖ: =
blocks
ÖÖ> D
)
ÖÖD E
)
ÖÖE F
blocks
ÜÜ 
.
ÜÜ 
Add
ÜÜ 
(
ÜÜ 
method
ÜÜ %
)
ÜÜ% &
;
ÜÜ& '
else
áá 
m_SettingBlocks
àà #
.
àà# $
Add
àà$ '
(
àà' (
category
àà( 0
,
àà0 1
new
àà2 5
List
àà6 :
<
àà: ;

MethodInfo
àà; E
>
ààE F
(
ààF G
)
ààG H
{
ààI J
method
ààK Q
}
ààR S
)
ààS T
;
ààT U
}
ââ 
if
ãã 
(
ãã  
showHiddenSettings
ãã "
)
ãã" #
{
åå 
var
çç 
unlisted
çç 
=
çç 
new
çç "
List
çç# '
<
çç' (
	PrefEntry
çç( 1
>
çç1 2
(
çç2 3
)
çç3 4
;
çç4 5

m_Settings
éé 
.
éé 
Add
éé 
(
éé 
$str
éé )
,
éé) *
unlisted
éé+ 3
)
éé3 4
;
éé4 5
foreach
èè 
(
èè 
var
èè 
pref
èè !
in
èè" $
UserSettings
èè% 1
.
èè1 2
FindUserSettings
èè2 B
(
èèB C
m_Assemblies
èèC O
,
èèO P
SettingVisibility
èèQ b
.
èèb c
Unlisted
èèc k
|
èèl m
SettingVisibility
èèn 
.èè Ä
HiddenèèÄ Ü
)èèÜ á
)èèá à
unlisted
êê 
.
êê 
Add
êê  
(
êê  !
new
êê! $
	PrefEntry
êê% .
(
êê. /
new
êê/ 2

GUIContent
êê3 =
(
êê= >
pref
êê> B
.
êêB C
key
êêC F
)
êêF G
,
êêG H
pref
êêI M
)
êêM N
)
êêN O
;
êêO P
}
ëë 
if
ìì 
(
ìì &
showUnregisteredSettings
ìì (
)
ìì( )
{
îî 
var
ïï 
unregistered
ïï  
=
ïï! "
new
ïï# &
List
ïï' +
<
ïï+ ,
	PrefEntry
ïï, 5
>
ïï5 6
(
ïï6 7
)
ïï7 8
;
ïï8 9

m_Settings
ññ 
.
ññ 
Add
ññ 
(
ññ 
$str
ññ -
,
ññ- .
unregistered
ññ/ ;
)
ññ; <
;
ññ< =
foreach
óó 
(
óó 
var
óó 
pref
óó !
in
óó" $
UserSettings
óó% 1
.
óó1 2
FindUserSettings
óó2 B
(
óóB C
m_Assemblies
óóC O
,
óóO P
SettingVisibility
óóQ b
.
óób c
Unregistered
óóc o
)
óóo p
)
óóp q
unregistered
òò  
.
òò  !
Add
òò! $
(
òò$ %
new
òò% (
	PrefEntry
òò) 2
(
òò2 3
new
òò3 6

GUIContent
òò7 A
(
òòA B
pref
òòB F
.
òòF G
key
òòG J
)
òòJ K
,
òòK L
pref
òòM Q
)
òòQ R
)
òòR S
;
òòS T
}
ôô 
foreach
õõ 
(
õõ 
var
õõ 
cat
õõ 
in
õõ 

m_Settings
õõ  *
)
õõ* +
{
úú 
foreach
ùù 
(
ùù 
var
ùù 
entry
ùù "
in
ùù# %
cat
ùù& )
.
ùù) *
Value
ùù* /
)
ùù/ 0
{
ûû 
var
üü 
content
üü 
=
üü  !
entry
üü" '
.
üü' (
content
üü( /
;
üü/ 0
if
°° 
(
°° 
content
°° 
!=
°°  "
null
°°# '
&&
°°( *
!
°°+ ,
string
°°, 2
.
°°2 3
IsNullOrEmpty
°°3 @
(
°°@ A
content
°°A H
.
°°H I
text
°°I M
)
°°M N
)
°°N O
{
¢¢ 
foreach
££ 
(
££  !
var
££! $
word
££% )
in
££* ,
content
££- 4
.
££4 5
text
££5 9
.
££9 :
Split
££: ?
(
££? @
$char
££@ C
)
££C D
)
££D E
keywordsHash
§§ (
.
§§( )
Add
§§) ,
(
§§, -
word
§§- 1
)
§§1 2
;
§§2 3
}
•• 
}
¶¶ 
}
ßß 
keywords
©© 
=
©© 
keywordsHash
©© #
;
©©# $
m_Categories
™™ 
=
™™ 

m_Settings
™™ %
.
™™% &
Keys
™™& *
.
™™* +
Union
™™+ 0
(
™™0 1
m_SettingBlocks
™™1 @
.
™™@ A
Keys
™™A E
)
™™E F
.
™™F G
ToList
™™G M
(
™™M N
)
™™N O
;
™™O P
m_Categories
´´ 
.
´´ 
Sort
´´ 
(
´´ 
)
´´ 
;
´´  
}
¨¨ 	
public
≤≤ 
override
≤≤ 
void
≤≤ 
OnTitleBarGUI
≤≤ *
(
≤≤* +
)
≤≤+ ,
{
≥≥ 	
if
¥¥ 
(
¥¥ 
	GUILayout
¥¥ 
.
¥¥ 
Button
¥¥  
(
¥¥  !

GUIContent
¥¥! +
.
¥¥+ ,
none
¥¥, 0
,
¥¥0 1
SettingsGUIStyles
¥¥2 C
.
¥¥C D
settingsGizmo
¥¥D Q
)
¥¥Q R
)
¥¥R S
DoContextMenu
µµ 
(
µµ 
)
µµ 
;
µµ  
}
∂∂ 	
void
ππ '
InitSettingsBlockKeywords
ππ &
(
ππ& '
)
ππ' (
{
∫∫ 	
if
ºº 
(
ºº 0
"m_SettingsBlockKeywordsInitialized
ºº 2
==
ºº3 5
	EventType
ºº6 ?
.
ºº? @
Repaint
ºº@ G
)
ººG H
return
ΩΩ 
;
ΩΩ 0
"m_SettingsBlockKeywordsInitialized
øø .
=
øø/ 0
Event
øø1 6
.
øø6 7
current
øø7 >
.
øø> ?
type
øø? C
;
øøC D
SettingsGUILayout
¬¬ 
.
¬¬ 

s_Keywords
¬¬ (
=
¬¬) *
new
¬¬+ .
HashSet
¬¬/ 6
<
¬¬6 7
string
¬¬7 =
>
¬¬= >
(
¬¬> ?
keywords
¬¬? G
)
¬¬G H
;
¬¬H I
s_SearchContext
≈≈ 
[
≈≈ 
$num
≈≈ 
]
≈≈ 
=
≈≈  
$str
≈≈! )
;
≈≈) *
foreach
«« 
(
«« 
var
«« 
category
«« !
in
««" $
m_SettingBlocks
««% 4
)
««4 5
{
»» 
foreach
…… 
(
…… 
var
…… 
block
…… "
in
……# %
category
……& .
.
……. /
Value
……/ 4
)
……4 5
block
   
.
   
Invoke
    
(
    !
null
  ! %
,
  % &
s_SearchContext
  ' 6
)
  6 7
;
  7 8
}
ÀÀ 
keywords
ÕÕ 
=
ÕÕ 
SettingsGUILayout
ÕÕ (
.
ÕÕ( )

s_Keywords
ÕÕ) 3
;
ÕÕ3 4
SettingsGUILayout
ŒŒ 
.
ŒŒ 

s_Keywords
ŒŒ (
=
ŒŒ) *
null
ŒŒ+ /
;
ŒŒ/ 0
s_SearchContext
œœ 
[
œœ 
$num
œœ 
]
œœ 
=
œœ  
$str
œœ! #
;
œœ# $
}
–– 	
void
““ 
DoContextMenu
““ 
(
““ 
)
““ 
{
”” 	
var
‘‘ 
menu
‘‘ 
=
‘‘ 
new
‘‘ 
GenericMenu
‘‘ &
(
‘‘& '
)
‘‘' (
;
‘‘( )
menu
÷÷ 
.
÷÷ 
AddItem
÷÷ 
(
÷÷ 
new
÷÷ 

GUIContent
÷÷ '
(
÷÷' (
$str
÷÷( 3
)
÷÷3 4
,
÷÷4 5
false
÷÷6 ;
,
÷÷; <
(
÷÷= >
)
÷÷> ?
=>
÷÷@ B
{
◊◊ 
if
ÿÿ 
(
ÿÿ 
!
ÿÿ 
UnityEditor
ÿÿ $
.
ÿÿ$ %
EditorUtility
ÿÿ% 2
.
ÿÿ2 3
DisplayDialog
ÿÿ3 @
(
ÿÿ@ A
$str
ÿÿA U
,
ÿÿU V
$strÿÿW É
,ÿÿÉ Ñ
$strÿÿÖ å
,ÿÿå ç
$strÿÿé ñ
)ÿÿñ ó
)ÿÿó ò
return
ŸŸ 
;
ŸŸ 
foreach
‹‹ 
(
‹‹ 
var
‹‹  
pref
‹‹! %
in
‹‹& (
UserSettings
‹‹) 5
.
‹‹5 6
FindUserSettings
‹‹6 F
(
‹‹F G
m_Assemblies
‹‹G S
,
‹‹S T
SettingVisibility
‹‹U f
.
‹‹f g
Visible
‹‹g n
|
‹‹o p 
SettingVisibility‹‹q Ç
.‹‹Ç É
Hidden‹‹É â
|‹‹ä ã!
SettingVisibility‹‹å ù
.‹‹ù û
Unlisted‹‹û ¶
)‹‹¶ ß
)‹‹ß ®
pref
›› 
.
›› 
Reset
›› "
(
››" #
)
››# $
;
››$ % 
m_SettingsInstance
ﬂﬂ &
.
ﬂﬂ& '
Save
ﬂﬂ' +
(
ﬂﬂ+ ,
)
ﬂﬂ, -
;
ﬂﬂ- .
}
‡‡ 
)
‡‡ 
;
‡‡ 
if
‚‚ 
(
‚‚ 
EditorPrefs
‚‚ 
.
‚‚ 
GetBool
‚‚ #
(
‚‚# $
$str
‚‚$ 3
,
‚‚3 4
false
‚‚5 :
)
‚‚: ;
)
‚‚; <
{
„„ 
menu
‰‰ 
.
‰‰ 
AddSeparator
‰‰ !
(
‰‰! "
$str
‰‰" $
)
‰‰$ %
;
‰‰% &
menu
ÊÊ 
.
ÊÊ 
AddItem
ÊÊ 
(
ÊÊ 
new
ÊÊ  

GUIContent
ÊÊ! +
(
ÊÊ+ ,
$str
ÊÊ, L
)
ÊÊL M
,
ÊÊM N
	listByKey
ÊÊO X
,
ÊÊX Y
(
ÊÊZ [
)
ÊÊ[ \
=>
ÊÊ] _
{
ÁÁ 
	listByKey
ËË !
.
ËË! "
SetValue
ËË" *
(
ËË* +
!
ËË+ ,
	listByKey
ËË, 5
,
ËË5 6
true
ËË7 ;
)
ËË; <
;
ËË< =,
SearchForUserSettingAttributes
ÈÈ 6
(
ÈÈ6 7
)
ÈÈ7 8
;
ÈÈ8 9
}
ÍÍ 
)
ÍÍ 
;
ÍÍ 
menu
ÏÏ 
.
ÏÏ 
AddSeparator
ÏÏ !
(
ÏÏ! "
$str
ÏÏ" .
)
ÏÏ. /
;
ÏÏ/ 0
menu
ÓÓ 
.
ÓÓ 
AddItem
ÓÓ 
(
ÓÓ 
new
ÓÓ  

GUIContent
ÓÓ! +
(
ÓÓ+ ,
$str
ÓÓ, J
)
ÓÓJ K
,
ÓÓK L
showUserSettings
ÓÓM ]
,
ÓÓ] ^
(
ÓÓ_ `
)
ÓÓ` a
=>
ÓÓb d
{
ÔÔ 
showUserSettings
 (
.
( )
SetValue
) 1
(
1 2
!
2 3
showUserSettings
3 C
,
C D
true
E I
)
I J
;
J K,
SearchForUserSettingAttributes
ÒÒ 6
(
ÒÒ6 7
)
ÒÒ7 8
;
ÒÒ8 9
}
ÚÚ 
)
ÚÚ 
;
ÚÚ 
menu
ÙÙ 
.
ÙÙ 
AddItem
ÙÙ 
(
ÙÙ 
new
ÙÙ  

GUIContent
ÙÙ! +
(
ÙÙ+ ,
$str
ÙÙ, M
)
ÙÙM N
,
ÙÙN O!
showProjectSettings
ÙÙP c
,
ÙÙc d
(
ÙÙe f
)
ÙÙf g
=>
ÙÙh j
{
ıı !
showProjectSettings
ˆˆ +
.
ˆˆ+ ,
SetValue
ˆˆ, 4
(
ˆˆ4 5
!
ˆˆ5 6!
showProjectSettings
ˆˆ6 I
,
ˆˆI J
true
ˆˆK O
)
ˆˆO P
;
ˆˆP Q,
SearchForUserSettingAttributes
˜˜ 6
(
˜˜6 7
)
˜˜7 8
;
˜˜8 9
}
¯¯ 
)
¯¯ 
;
¯¯ 
menu
˙˙ 
.
˙˙ 
AddSeparator
˙˙ !
(
˙˙! "
$str
˙˙" .
)
˙˙. /
;
˙˙/ 0
menu
¸¸ 
.
¸¸ 
AddItem
¸¸ 
(
¸¸ 
new
¸¸  

GUIContent
¸¸! +
(
¸¸+ ,
$str
¸¸, N
)
¸¸N O
,
¸¸O P 
showHiddenSettings
¸¸Q c
,
¸¸c d
(
¸¸e f
)
¸¸f g
=>
¸¸h j
{
˝˝  
showHiddenSettings
˛˛ *
.
˛˛* +
SetValue
˛˛+ 3
(
˛˛3 4
!
˛˛4 5 
showHiddenSettings
˛˛5 G
,
˛˛G H
true
˛˛I M
)
˛˛M N
;
˛˛N O,
SearchForUserSettingAttributes
ˇˇ 6
(
ˇˇ6 7
)
ˇˇ7 8
;
ˇˇ8 9
}
ÄÄ 
)
ÄÄ 
;
ÄÄ 
menu
ÇÇ 
.
ÇÇ 
AddItem
ÇÇ 
(
ÇÇ 
new
ÇÇ  

GUIContent
ÇÇ! +
(
ÇÇ+ ,
$str
ÇÇ, R
)
ÇÇR S
,
ÇÇS T&
showUnregisteredSettings
ÇÇU m
,
ÇÇm n
(
ÇÇo p
)
ÇÇp q
=>
ÇÇr t
{
ÉÉ &
showUnregisteredSettings
ÑÑ 0
.
ÑÑ0 1
SetValue
ÑÑ1 9
(
ÑÑ9 :
!
ÑÑ: ;&
showUnregisteredSettings
ÑÑ; S
,
ÑÑS T
true
ÑÑU Y
)
ÑÑY Z
;
ÑÑZ [,
SearchForUserSettingAttributes
ÖÖ 6
(
ÖÖ6 7
)
ÖÖ7 8
;
ÖÖ8 9
}
ÜÜ 
)
ÜÜ 
;
ÜÜ 
menu
àà 
.
àà 
AddSeparator
àà !
(
àà! "
$str
àà" .
)
àà. /
;
àà/ 0
menu
ää 
.
ää 
AddItem
ää 
(
ää 
new
ää  

GUIContent
ää! +
(
ää+ ,
$str
ää, R
)
ääR S
,
ääS T
false
ääU Z
,
ääZ [
(
ää\ ]
)
ää] ^
=>
ää_ a
{
ãã 
var
åå 
project
åå #
=
åå$ % 
m_SettingsInstance
åå& 8
.
åå8 9
GetRepository
åå9 F
(
ååF G
SettingsScope
ååG T
.
ååT U
Project
ååU \
)
åå\ ]
;
åå] ^
if
éé 
(
éé 
project
éé #
!=
éé$ &
null
éé' +
)
éé+ ,
{
èè 
var
êê 
path
êê  $
=
êê% &
Path
êê' +
.
êê+ ,
GetFullPath
êê, 7
(
êê7 8
project
êê8 ?
.
êê? @
path
êê@ D
)
êêD E
;
êêE F
System
ëë "
.
ëë" #
Diagnostics
ëë# .
.
ëë. /
Process
ëë/ 6
.
ëë6 7
Start
ëë7 <
(
ëë< =
path
ëë= A
)
ëëA B
;
ëëB C
}
íí 
}
ìì 
)
ìì 
;
ìì 
menu
ïï 
.
ïï 
AddItem
ïï 
(
ïï 
new
ïï  

GUIContent
ïï! +
(
ïï+ ,
$str
ïï, J
)
ïïJ K
,
ïïK L
false
ïïM R
,
ïïR S
(
ïïT U
)
ïïU V
=>
ïïW Y
{
ññ 
Debug
óó 
.
óó 
Log
óó !
(
óó! "
UserSettings
óó" .
.
óó. /
GetSettingsString
óó/ @
(
óó@ A
m_Assemblies
óóA M
)
óóM N
)
óóN O
;
óóO P
}
òò 
)
òò 
;
òò 
menu
õõ 
.
õõ 
AddSeparator
õõ !
(
õõ! "
$str
õõ" .
)
õõ. /
;
õõ/ 0
menu
ùù 
.
ùù 
AddItem
ùù 
(
ùù 
new
ùù  

GUIContent
ùù! +
(
ùù+ ,
$str
ùù, I
)
ùùI J
,
ùùJ K
false
ùùL Q
,
ùùQ R
EditorUtility
ùùS `
.
ùù` a!
RequestScriptReload
ùùa t
)
ùùt u
;
ùùu v
}
¢¢ 
menu
§§ 
.
§§ 
ShowAsContext
§§ 
(
§§ 
)
§§  
;
§§  !
}
•• 	
public
ÆÆ 
override
ÆÆ 
void
ÆÆ 
OnGUI
ÆÆ "
(
ÆÆ" #
string
ÆÆ# )
searchContext
ÆÆ* 7
)
ÆÆ7 8
{
∏∏ 	'
InitSettingsBlockKeywords
ææ %
(
ææ% &
)
ææ& '
;
ææ' (
EditorGUIUtility
¿¿ 
.
¿¿ 

labelWidth
¿¿ '
=
¿¿( )

labelWidth
¿¿* 4
;
¿¿4 5
	EditorGUI
¬¬ 
.
¬¬ 
BeginChangeCheck
¬¬ &
(
¬¬& '
)
¬¬' (
;
¬¬( )
var
ƒƒ 
maxWidth
ƒƒ 
=
ƒƒ #
defaultLayoutMaxWidth
ƒƒ 0
;
ƒƒ0 1
if
∆∆ 
(
∆∆ 
maxWidth
∆∆ 
!=
∆∆ 
$num
∆∆ 
)
∆∆ 
	GUILayout
«« 
.
«« 
BeginVertical
«« '
(
««' (
SettingsGUIStyles
««( 9
.
««9 :
settingsArea
««: F
,
««F G
	GUILayout
««H Q
.
««Q R
MaxWidth
««R Z
(
««Z [
maxWidth
««[ c
)
««c d
)
««d e
;
««e f
else
»» 
	GUILayout
…… 
.
…… 
BeginVertical
…… '
(
……' (
SettingsGUIStyles
……( 9
.
……9 :
settingsArea
……: F
)
……F G
;
……G H
var
ÀÀ 
hasSearchContext
ÀÀ  
=
ÀÀ! "
!
ÀÀ# $
string
ÀÀ$ *
.
ÀÀ* +
IsNullOrEmpty
ÀÀ+ 8
(
ÀÀ8 9
searchContext
ÀÀ9 F
)
ÀÀF G
;
ÀÀG H
s_SearchContext
ÃÃ 
[
ÃÃ 
$num
ÃÃ 
]
ÃÃ 
=
ÃÃ  
searchContext
ÃÃ! .
;
ÃÃ. /
if
ÕÕ 
(
ÕÕ 
hasSearchContext
ÕÕ  
)
ÕÕ  !
{
ŒŒ 
var
–– 
searchKeywords
–– "
=
––# $
searchContext
––% 2
.
––2 3
Split
––3 8
(
––8 9
$char
––9 <
)
––< =
;
––= >
foreach
““ 
(
““ 
var
““ 
settingField
““ )
in
““* ,

m_Settings
““- 7
)
““7 8
{
”” 
foreach
‘‘ 
(
‘‘ 
var
‘‘  
setting
‘‘! (
in
‘‘) +
settingField
‘‘, 8
.
‘‘8 9
Value
‘‘9 >
)
‘‘> ?
{
’’ 
if
÷÷ 
(
÷÷ 
searchKeywords
÷÷ *
.
÷÷* +
Any
÷÷+ .
(
÷÷. /
x
÷÷/ 0
=>
÷÷1 3
!
÷÷4 5
string
÷÷5 ;
.
÷÷; <
IsNullOrEmpty
÷÷< I
(
÷÷I J
x
÷÷J K
)
÷÷K L
&&
÷÷M O
setting
÷÷P W
.
÷÷W X
content
÷÷X _
.
÷÷_ `
text
÷÷` d
.
÷÷d e
IndexOf
÷÷e l
(
÷÷l m
x
÷÷m n
,
÷÷n o
StringComparison÷÷p Ä
.÷÷Ä Å*
InvariantCultureIgnoreCase÷÷Å õ
)÷÷õ ú
>÷÷ù û
-÷÷ü †
$num÷÷† °
)÷÷° ¢
)÷÷¢ £
DoPreferenceField
◊◊ -
(
◊◊- .
setting
◊◊. 5
.
◊◊5 6
content
◊◊6 =
,
◊◊= >
setting
◊◊? F
.
◊◊F G
pref
◊◊G K
)
◊◊K L
;
◊◊L M
}
ÿÿ 
}
ŸŸ 
foreach
€€ 
(
€€ 
var
€€ 
settingsBlock
€€ *
in
€€+ -
m_SettingBlocks
€€. =
)
€€= >
{
‹‹ 
foreach
›› 
(
›› 
var
››  
block
››! &
in
››' )
settingsBlock
››* 7
.
››7 8
Value
››8 =
)
››= >
{
ﬁﬁ 
block
ﬂﬂ 
.
ﬂﬂ 
Invoke
ﬂﬂ $
(
ﬂﬂ$ %
null
ﬂﬂ% )
,
ﬂﬂ) *
s_SearchContext
ﬂﬂ+ :
)
ﬂﬂ: ;
;
ﬂﬂ; <
}
‡‡ 
}
·· 
}
‚‚ 
else
„„ 
{
‰‰ 
foreach
ÂÂ 
(
ÂÂ 
var
ÂÂ 
key
ÂÂ  
in
ÂÂ! #
m_Categories
ÂÂ$ 0
)
ÂÂ0 1
{
ÊÊ 
	GUILayout
ÁÁ 
.
ÁÁ 
Label
ÁÁ #
(
ÁÁ# $
key
ÁÁ$ '
,
ÁÁ' (
EditorStyles
ÁÁ) 5
.
ÁÁ5 6
	boldLabel
ÁÁ6 ?
)
ÁÁ? @
;
ÁÁ@ A
List
ÈÈ 
<
ÈÈ 
	PrefEntry
ÈÈ "
>
ÈÈ" #
settings
ÈÈ$ ,
;
ÈÈ, -
if
ÎÎ 
(
ÎÎ 

m_Settings
ÎÎ "
.
ÎÎ" #
TryGetValue
ÎÎ# .
(
ÎÎ. /
key
ÎÎ/ 2
,
ÎÎ2 3
out
ÎÎ4 7
settings
ÎÎ8 @
)
ÎÎ@ A
)
ÎÎA B
foreach
ÏÏ 
(
ÏÏ  !
var
ÏÏ! $
setting
ÏÏ% ,
in
ÏÏ- /
settings
ÏÏ0 8
)
ÏÏ8 9
DoPreferenceField
ÌÌ -
(
ÌÌ- .
setting
ÌÌ. 5
.
ÌÌ5 6
content
ÌÌ6 =
,
ÌÌ= >
setting
ÌÌ? F
.
ÌÌF G
pref
ÌÌG K
)
ÌÌK L
;
ÌÌL M
List
ÔÔ 
<
ÔÔ 

MethodInfo
ÔÔ #
>
ÔÔ# $
blocks
ÔÔ% +
;
ÔÔ+ ,
if
ÒÒ 
(
ÒÒ 
m_SettingBlocks
ÒÒ '
.
ÒÒ' (
TryGetValue
ÒÒ( 3
(
ÒÒ3 4
key
ÒÒ4 7
,
ÒÒ7 8
out
ÒÒ9 <
blocks
ÒÒ= C
)
ÒÒC D
)
ÒÒD E
foreach
ÚÚ 
(
ÚÚ  !
var
ÚÚ! $
block
ÚÚ% *
in
ÚÚ+ -
blocks
ÚÚ. 4
)
ÚÚ4 5
block
ÛÛ !
.
ÛÛ! "
Invoke
ÛÛ" (
(
ÛÛ( )
null
ÛÛ) -
,
ÛÛ- .
s_SearchContext
ÛÛ/ >
)
ÛÛ> ?
;
ÛÛ? @
	GUILayout
ıı 
.
ıı 
Space
ıı #
(
ıı# $
$num
ıı$ %
)
ıı% &
;
ıı& '
}
ˆˆ 
}
˜˜ 
EditorGUIUtility
˘˘ 
.
˘˘ 

labelWidth
˘˘ '
=
˘˘( )
$num
˘˘* +
;
˘˘+ ,
	GUILayout
˚˚ 
.
˚˚ 
EndVertical
˚˚ !
(
˚˚! "
)
˚˚" #
;
˚˚# $
if
˝˝ 
(
˝˝ 
	EditorGUI
˝˝ 
.
˝˝ 
EndChangeCheck
˝˝ (
(
˝˝( )
)
˝˝) *
)
˝˝* +
{
˛˛  
m_SettingsInstance
ˇˇ "
.
ˇˇ" #
Save
ˇˇ# '
(
ˇˇ' (
)
ˇˇ( )
;
ˇˇ) *
}
ÄÄ 
}
ÅÅ 	
void
ÉÉ 
DoPreferenceField
ÉÉ 
(
ÉÉ 

GUIContent
ÉÉ )
title
ÉÉ* /
,
ÉÉ/ 0
IUserSetting
ÉÉ1 =
pref
ÉÉ> B
)
ÉÉB C
{
ÑÑ 	
if
ÖÖ 
(
ÖÖ 
EditorPrefs
ÖÖ 
.
ÖÖ 
GetBool
ÖÖ #
(
ÖÖ# $
$str
ÖÖ$ 3
,
ÖÖ3 4
false
ÖÖ5 :
)
ÖÖ: ;
)
ÖÖ; <
{
ÜÜ 
if
áá 
(
áá 
pref
áá 
.
áá 
scope
áá 
==
áá !
SettingsScope
áá" /
.
áá/ 0
Project
áá0 7
&&
áá8 :
!
áá; <!
showProjectSettings
áá< O
)
ááO P
return
àà 
;
àà 
if
ââ 
(
ââ 
pref
ââ 
.
ââ 
scope
ââ 
==
ââ !
SettingsScope
ââ" /
.
ââ/ 0
User
ââ0 4
&&
ââ5 7
!
ââ8 9
showUserSettings
ââ9 I
)
ââI J
return
ää 
;
ää 
}
ãã 
if
çç 
(
çç 
pref
çç 
is
çç 
UserSetting
çç #
<
çç# $
float
çç$ )
>
çç) *
)
çç* +
{
éé 
var
èè 
cast
èè 
=
èè 
(
èè 
UserSetting
èè '
<
èè' (
float
èè( -
>
èè- .
)
èè. /
pref
èè/ 3
;
èè3 4
cast
êê 
.
êê 
value
êê 
=
êê 
EditorGUILayout
êê ,
.
êê, -

FloatField
êê- 7
(
êê7 8
title
êê8 =
,
êê= >
cast
êê? C
.
êêC D
value
êêD I
)
êêI J
;
êêJ K
}
ëë 
else
íí 
if
íí 
(
íí 
pref
íí 
is
íí 
UserSetting
íí (
<
íí( )
int
íí) ,
>
íí, -
)
íí- .
{
ìì 
var
îî 
cast
îî 
=
îî 
(
îî 
UserSetting
îî '
<
îî' (
int
îî( +
>
îî+ ,
)
îî, -
pref
îî- 1
;
îî1 2
cast
ïï 
.
ïï 
value
ïï 
=
ïï 
EditorGUILayout
ïï ,
.
ïï, -
IntField
ïï- 5
(
ïï5 6
title
ïï6 ;
,
ïï; <
cast
ïï= A
.
ïïA B
value
ïïB G
)
ïïG H
;
ïïH I
}
ññ 
else
óó 
if
óó 
(
óó 
pref
óó 
is
óó 
UserSetting
óó (
<
óó( )
bool
óó) -
>
óó- .
)
óó. /
{
òò 
var
ôô 
cast
ôô 
=
ôô 
(
ôô 
UserSetting
ôô '
<
ôô' (
bool
ôô( ,
>
ôô, -
)
ôô- .
pref
ôô. 2
;
ôô2 3
cast
öö 
.
öö 
value
öö 
=
öö 
EditorGUILayout
öö ,
.
öö, -
Toggle
öö- 3
(
öö3 4
title
öö4 9
,
öö9 :
cast
öö; ?
.
öö? @
value
öö@ E
)
ööE F
;
ööF G
}
õõ 
else
úú 
if
úú 
(
úú 
pref
úú 
is
úú 
UserSetting
úú (
<
úú( )
string
úú) /
>
úú/ 0
)
úú0 1
{
ùù 
var
ûû 
cast
ûû 
=
ûû 
(
ûû 
UserSetting
ûû '
<
ûû' (
string
ûû( .
>
ûû. /
)
ûû/ 0
pref
ûû0 4
;
ûû4 5
cast
üü 
.
üü 
value
üü 
=
üü 
EditorGUILayout
üü ,
.
üü, -
	TextField
üü- 6
(
üü6 7
title
üü7 <
,
üü< =
cast
üü> B
.
üüB C
value
üüC H
)
üüH I
;
üüI J
}
†† 
else
°° 
if
°° 
(
°° 
pref
°° 
is
°° 
UserSetting
°° (
<
°°( )
Color
°°) .
>
°°. /
)
°°/ 0
{
¢¢ 
var
££ 
cast
££ 
=
££ 
(
££ 
UserSetting
££ '
<
££' (
Color
££( -
>
££- .
)
££. /
pref
££/ 3
;
££3 4
cast
§§ 
.
§§ 
value
§§ 
=
§§ 
EditorGUILayout
§§ ,
.
§§, -

ColorField
§§- 7
(
§§7 8
title
§§8 =
,
§§= >
cast
§§? C
.
§§C D
value
§§D I
)
§§I J
;
§§J K
}
•• 
else
ßß 
if
ßß 
(
ßß 
pref
ßß 
is
ßß 
UserSetting
ßß (
<
ßß( )
Gradient
ßß) 1
>
ßß1 2
)
ßß2 3
{
®® 
var
©© 
cast
©© 
=
©© 
(
©© 
UserSetting
©© '
<
©©' (
Gradient
©©( 0
>
©©0 1
)
©©1 2
pref
©©2 6
;
©©6 7
cast
™™ 
.
™™ 
value
™™ 
=
™™ 
EditorGUILayout
™™ ,
.
™™, -
GradientField
™™- :
(
™™: ;
title
™™; @
,
™™@ A
cast
™™B F
.
™™F G
value
™™G L
)
™™L M
;
™™M N
}
´´ 
else
≠≠ 
if
≠≠ 
(
≠≠ 
pref
≠≠ 
is
≠≠ 
UserSetting
≠≠ (
<
≠≠( )
Vector2
≠≠) 0
>
≠≠0 1
)
≠≠1 2
{
ÆÆ 
var
ØØ 
cast
ØØ 
=
ØØ 
(
ØØ 
UserSetting
ØØ '
<
ØØ' (
Vector2
ØØ( /
>
ØØ/ 0
)
ØØ0 1
pref
ØØ1 5
;
ØØ5 6
cast
∞∞ 
.
∞∞ 
value
∞∞ 
=
∞∞ 
EditorGUILayout
∞∞ ,
.
∞∞, -
Vector2Field
∞∞- 9
(
∞∞9 :
title
∞∞: ?
,
∞∞? @
cast
∞∞A E
.
∞∞E F
value
∞∞F K
)
∞∞K L
;
∞∞L M
}
±± 
else
≤≤ 
if
≤≤ 
(
≤≤ 
pref
≤≤ 
is
≤≤ 
UserSetting
≤≤ (
<
≤≤( )
Vector3
≤≤) 0
>
≤≤0 1
)
≤≤1 2
{
≥≥ 
var
¥¥ 
cast
¥¥ 
=
¥¥ 
(
¥¥ 
UserSetting
¥¥ '
<
¥¥' (
Vector3
¥¥( /
>
¥¥/ 0
)
¥¥0 1
pref
¥¥1 5
;
¥¥5 6
cast
µµ 
.
µµ 
value
µµ 
=
µµ 
EditorGUILayout
µµ ,
.
µµ, -
Vector3Field
µµ- 9
(
µµ9 :
title
µµ: ?
,
µµ? @
cast
µµA E
.
µµE F
value
µµF K
)
µµK L
;
µµL M
}
∂∂ 
else
∑∑ 
if
∑∑ 
(
∑∑ 
pref
∑∑ 
is
∑∑ 
UserSetting
∑∑ (
<
∑∑( )
Vector4
∑∑) 0
>
∑∑0 1
)
∑∑1 2
{
∏∏ 
var
ππ 
cast
ππ 
=
ππ 
(
ππ 
UserSetting
ππ '
<
ππ' (
Vector4
ππ( /
>
ππ/ 0
)
ππ0 1
pref
ππ1 5
;
ππ5 6
cast
∫∫ 
.
∫∫ 
value
∫∫ 
=
∫∫ 
EditorGUILayout
∫∫ ,
.
∫∫, -
Vector4Field
∫∫- 9
(
∫∫9 :
title
∫∫: ?
,
∫∫? @
cast
∫∫A E
.
∫∫E F
value
∫∫F K
)
∫∫K L
;
∫∫L M
}
ªª 
else
ºº 
if
ºº 
(
ºº 
typeof
ºº 
(
ºº 
Enum
ºº  
)
ºº  !
.
ºº! "
IsAssignableFrom
ºº" 2
(
ºº2 3
pref
ºº3 7
.
ºº7 8
type
ºº8 <
)
ºº< =
)
ºº= >
{
ΩΩ 
Enum
ææ 
val
ææ 
=
ææ 
(
ææ 
Enum
ææ  
)
ææ  !
pref
ææ! %
.
ææ% &
GetValue
ææ& .
(
ææ. /
)
ææ/ 0
;
ææ0 1
	EditorGUI
øø 
.
øø 
BeginChangeCheck
øø *
(
øø* +
)
øø+ ,
;
øø, -
if
¿¿ 
(
¿¿ 
	Attribute
¿¿ 
.
¿¿ 
	IsDefined
¿¿ '
(
¿¿' (
pref
¿¿( ,
.
¿¿, -
type
¿¿- 1
,
¿¿1 2
typeof
¿¿3 9
(
¿¿9 :
FlagsAttribute
¿¿: H
)
¿¿H I
)
¿¿I J
)
¿¿J K
val
¡¡ 
=
¡¡ 
EditorGUILayout
¡¡ )
.
¡¡) *
EnumFlagsField
¡¡* 8
(
¡¡8 9
title
¡¡9 >
,
¡¡> ?
val
¡¡@ C
)
¡¡C D
;
¡¡D E
else
¬¬ 
val
√√ 
=
√√ 
EditorGUILayout
√√ )
.
√√) *
	EnumPopup
√√* 3
(
√√3 4
title
√√4 9
,
√√9 :
val
√√; >
)
√√> ?
;
√√? @
if
ƒƒ 
(
ƒƒ 
	EditorGUI
ƒƒ 
.
ƒƒ 
EndChangeCheck
ƒƒ ,
(
ƒƒ, -
)
ƒƒ- .
)
ƒƒ. /
pref
≈≈ 
.
≈≈ 
SetValue
≈≈ !
(
≈≈! "
val
≈≈" %
)
≈≈% &
;
≈≈& '
}
∆∆ 
else
«« 
if
«« 
(
«« 
typeof
«« 
(
«« 
UnityEngine
«« '
.
««' (
Object
««( .
)
««. /
.
««/ 0
IsAssignableFrom
««0 @
(
««@ A
pref
««A E
.
««E F
type
««F J
)
««J K
)
««K L
{
»» 
var
…… 
obj
…… 
=
…… 
(
…… 
UnityEngine
…… &
.
……& '
Object
……' -
)
……- .
pref
……. 2
.
……2 3
GetValue
……3 ;
(
……; <
)
……< =
;
……= >
	EditorGUI
   
.
   
BeginChangeCheck
   *
(
  * +
)
  + ,
;
  , -
obj
ÀÀ 
=
ÀÀ 
EditorGUILayout
ÀÀ %
.
ÀÀ% &
ObjectField
ÀÀ& 1
(
ÀÀ1 2
title
ÀÀ2 7
,
ÀÀ7 8
obj
ÀÀ9 <
,
ÀÀ< =
pref
ÀÀ> B
.
ÀÀB C
type
ÀÀC G
,
ÀÀG H
false
ÀÀI N
)
ÀÀN O
;
ÀÀO P
if
ÃÃ 
(
ÃÃ 
	EditorGUI
ÃÃ 
.
ÃÃ 
EndChangeCheck
ÃÃ ,
(
ÃÃ, -
)
ÃÃ- .
)
ÃÃ. /
pref
ÕÕ 
.
ÕÕ 
SetValue
ÕÕ !
(
ÕÕ! "
obj
ÕÕ" %
)
ÕÕ% &
;
ÕÕ& '
}
ŒŒ 
else
œœ 
{
–– 
	GUILayout
—— 
.
—— 
BeginHorizontal
—— )
(
——) *
)
——* +
;
——+ ,
	GUILayout
““ 
.
““ 
Label
““ 
(
““  
title
““  %
,
““% &
	GUILayout
““' 0
.
““0 1
Width
““1 6
(
““6 7
EditorGUIUtility
““7 G
.
““G H

labelWidth
““H R
-
““S T
EditorStyles
““U a
.
““a b
label
““b g
.
““g h
margin
““h n
.
““n o
right
““o t
*
““u v
$num
““w x
)
““x y
)
““y z
;
““z {
var
”” 
obj
”” 
=
”” 
pref
”” 
.
”” 
GetValue
”” '
(
””' (
)
””( )
;
””) *
	GUILayout
‘‘ 
.
‘‘ 
Label
‘‘ 
(
‘‘  
obj
‘‘  #
==
‘‘$ &
null
‘‘' +
?
‘‘, -
$str
‘‘. 4
:
‘‘5 6
pref
‘‘7 ;
.
‘‘; <
GetValue
‘‘< D
(
‘‘D E
)
‘‘E F
.
‘‘F G
ToString
‘‘G O
(
‘‘O P
)
‘‘P Q
)
‘‘Q R
;
‘‘R S
	GUILayout
’’ 
.
’’ 
EndHorizontal
’’ '
(
’’' (
)
’’( )
;
’’) *
}
÷÷ 
SettingsGUILayout
ÿÿ 
.
ÿÿ +
DoResetContextMenuForLastRect
ÿÿ ;
(
ÿÿ; <
pref
ÿÿ< @
)
ÿÿ@ A
;
ÿÿA B
}
ŸŸ 	
}
⁄⁄ 
}€€ µI
öD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.settings-manager@1.0.3\Editor\PackageSettingsRepository.cs
	namespace 	
UnityEditor
 
. 
SettingsManagement (
{ 
[ 
Serializable 
] 
public 

sealed 
class %
PackageSettingsRepository 1
:2 3
ISettingsRepository4 G
{ 
const 
string &
k_PackageSettingsDirectory /
=0 1
$str2 L
;L M
const 
bool 
k_PrettyPrintJson $
=% &
true' +
;+ ,
bool 
m_Initialized 
; 
[ 	
SerializeField	 
] 
string 
m_Name 
; 
[ 	
SerializeField	 
] 
string 
m_Path 
; 
[ 	
SerializeField	 
] 
SettingsDictionary 
m_Dictionary '
=( )
new* -
SettingsDictionary. @
(@ A
)A B
;B C
string 
m_cachedJson 
; 
public'' %
PackageSettingsRepository'' (
(''( )
string'') /
package''0 7
,''7 8
string''9 ?
name''@ D
)''D E
{(( 	
m_Name)) 
=)) 
name)) 
;)) 
m_Path** 
=** 
GetSettingsPath** $
(**$ %
package**% ,
,**, -
name**. 2
)**2 3
;**3 4
m_Initialized++ 
=++ 
false++ !
;++! " 
AssemblyReloadEvents--  
.--  ! 
beforeAssemblyReload--! 5
+=--6 8
Save--9 =
;--= >
EditorApplication.. 
... 
quitting.. &
+=..' )
Save..* .
;... /
}// 	
void11 
Init11 
(11 
)11 
{22 	
if33 
(33 
m_Initialized33 
)33 
return44 
;44 
m_Initialized66 
=66 
true66  
;66  !
if88 
(88 
File88 
.88 
Exists88 
(88 
path88  
)88  !
)88! "
{99 
m_Dictionary:: 
=:: 
null:: #
;::# $
m_cachedJson;; 
=;; 
File;; #
.;;# $
ReadAllText;;$ /
(;;/ 0
path;;0 4
);;4 5
;;;5 6
EditorJsonUtility<< !
.<<! "
FromJsonOverwrite<<" 3
(<<3 4
m_cachedJson<<4 @
,<<@ A
this<<B F
)<<F G
;<<G H
if== 
(== 
m_Dictionary==  
====! #
null==$ (
)==( )
m_Dictionary>>  
=>>! "
new>># &
SettingsDictionary>>' 9
(>>9 :
)>>: ;
;>>; <
}?? 
}@@ 	
publicFF 
SettingsScopeFF 
scopeFF "
{GG 	
getHH 
{HH 
returnHH 
SettingsScopeHH &
.HH& '
ProjectHH' .
;HH. /
}HH0 1
}II 	
publicPP 
stringPP 
pathPP 
{QQ 	
getRR 
{RR 
returnRR 
m_PathRR 
;RR  
}RR! "
}SS 	
publicXX 
stringXX 
nameXX 
{YY 	
getZZ 
{ZZ 
returnZZ 
m_NameZZ 
;ZZ  
}ZZ! "
}[[ 	
publicjj 
staticjj 
stringjj 
GetSettingsPathjj ,
(jj, -
stringjj- 3
packageNamejj4 ?
,jj? @
stringjjA G
namejjH L
=jjM N
$strjjO Y
)jjY Z
{kk 	
returnll 
stringll 
.ll 
Formatll  
(ll  !
$strll! 3
,ll3 4&
k_PackageSettingsDirectoryll5 O
,llO P
packageNamellQ \
,ll\ ]
namell^ b
)llb c
;llc d
}mm 	
publictt 
voidtt 
Savett 
(tt 
)tt 
{uu 	
Initvv 
(vv 
)vv 
;vv 
ifxx 
(xx 
!xx 
Filexx 
.xx 
Existsxx 
(xx 
pathxx !
)xx! "
)xx" #
{yy 
varzz 
	directoryzz 
=zz 
Pathzz  $
.zz$ %
GetDirectoryNamezz% 5
(zz5 6
pathzz6 :
)zz: ;
;zz; <
	Directory{{ 
.{{ 
CreateDirectory{{ )
({{) *
	directory{{* 3
){{3 4
;{{4 5
}|| 
string~~ 
newSettingsJson~~ "
=~~# $
EditorJsonUtility~~% 6
.~~6 7
ToJson~~7 =
(~~= >
this~~> B
,~~B C
k_PrettyPrintJson~~D U
)~~U V
;~~V W
bool 
areJsonsEqual 
=  
newSettingsJson! 0
==1 3
m_cachedJson4 @
;@ A
if
ÇÇ 
(
ÇÇ 
!
ÇÇ 
AssetDatabase
ÇÇ 
.
ÇÇ 
IsOpenForEdit
ÇÇ ,
(
ÇÇ, -
path
ÇÇ- 1
)
ÇÇ1 2
&&
ÇÇ3 5
areJsonsEqual
ÇÇ6 C
==
ÇÇD F
false
ÇÇG L
)
ÇÇL M
{
ÉÉ 
if
ÑÑ 
(
ÑÑ 
!
ÑÑ 
AssetDatabase
ÑÑ "
.
ÑÑ" #
MakeEditable
ÑÑ# /
(
ÑÑ/ 0
path
ÑÑ0 4
)
ÑÑ4 5
)
ÑÑ5 6
{
ÖÖ 
Debug
ÜÜ 
.
ÜÜ 

LogWarning
ÜÜ $
(
ÜÜ$ %
$"
ÜÜ% '1
#Could not save package settings to 
ÜÜ' J
{
ÜÜJ K
path
ÜÜK O
}
ÜÜO P
"
ÜÜP Q
)
ÜÜQ R
;
ÜÜR S
return
áá 
;
áá 
}
àà 
}
ââ 
try
åå 
{
çç 
if
éé 
(
éé 
!
éé 
areJsonsEqual
éé "
)
éé" #
{
èè 
File
êê 
.
êê 
WriteAllText
êê %
(
êê% &
path
êê& *
,
êê* +
newSettingsJson
êê, ;
)
êê; <
;
êê< =
m_cachedJson
ëë  
=
ëë! "
newSettingsJson
ëë# 2
;
ëë2 3
}
íí 
}
ìì 
catch
îî 
(
îî )
UnauthorizedAccessException
îî .
)
îî. /
{
ïï 
Debug
ññ 
.
ññ 

LogWarning
ññ  
(
ññ  !
$"
ññ! #1
#Could not save package settings to 
ññ# F
{
ññF G
path
ññG K
}
ññK L
"
ññL M
)
ññM N
;
ññN O
}
óó 
}
òò 	
public
°° 
void
°° 
Set
°° 
<
°° 
T
°° 
>
°° 
(
°° 
string
°° !
key
°°" %
,
°°% &
T
°°' (
value
°°) .
)
°°. /
{
¢¢ 	
Init
££ 
(
££ 
)
££ 
;
££ 
m_Dictionary
§§ 
.
§§ 
Set
§§ 
<
§§ 
T
§§ 
>
§§ 
(
§§  
key
§§  #
,
§§# $
value
§§% *
)
§§* +
;
§§+ ,
}
•• 	
public
ÆÆ 
T
ÆÆ 
Get
ÆÆ 
<
ÆÆ 
T
ÆÆ 
>
ÆÆ 
(
ÆÆ 
string
ÆÆ 
key
ÆÆ "
,
ÆÆ" #
T
ÆÆ$ %
fallback
ÆÆ& .
=
ÆÆ/ 0
default
ÆÆ1 8
(
ÆÆ8 9
T
ÆÆ9 :
)
ÆÆ: ;
)
ÆÆ; <
{
ØØ 	
Init
∞∞ 
(
∞∞ 
)
∞∞ 
;
∞∞ 
return
±± 
m_Dictionary
±± 
.
±±  
Get
±±  #
<
±±# $
T
±±$ %
>
±±% &
(
±±& '
key
±±' *
,
±±* +
fallback
±±, 4
)
±±4 5
;
±±5 6
}
≤≤ 	
public
ªª 
bool
ªª 
ContainsKey
ªª 
<
ªª  
T
ªª  !
>
ªª! "
(
ªª" #
string
ªª# )
key
ªª* -
)
ªª- .
{
ºº 	
Init
ΩΩ 
(
ΩΩ 
)
ΩΩ 
;
ΩΩ 
return
ææ 
m_Dictionary
ææ 
.
ææ  
ContainsKey
ææ  +
<
ææ+ ,
T
ææ, -
>
ææ- .
(
ææ. /
key
ææ/ 2
)
ææ2 3
;
ææ3 4
}
øø 	
public
«« 
void
«« 
Remove
«« 
<
«« 
T
«« 
>
«« 
(
«« 
string
«« $
key
««% (
)
««( )
{
»» 	
Init
…… 
(
…… 
)
…… 
;
…… 
m_Dictionary
   
.
   
Remove
   
<
    
T
    !
>
  ! "
(
  " #
key
  # &
)
  & '
;
  ' (
}
ÀÀ 	
}
ÃÃ 
}ÕÕ ‡!
ãD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.settings-manager@1.0.3\Editor\Attributes.cs
	namespace 	
UnityEditor
 
. 
SettingsManagement (
{ 
[		 
AttributeUsage		 
(		 
AttributeTargets		 $
.		$ %
Field		% *
)		* +
]		+ ,
public

 

sealed

 
class

  
UserSettingAttribute

 ,
:

- .
	Attribute

/ 8
{ 
string 

m_Category 
; 

GUIContent 
m_Title 
; 
bool '
m_VisibleInSettingsProvider (
;( )
public 
string 
category 
{ 	
get 
{ 
return 

m_Category #
;# $
}% &
} 	
public 

GUIContent 
title 
{ 	
get   
{   
return   
m_Title    
;    !
}  " #
}!! 	
public&& 
bool&& %
visibleInSettingsProvider&& -
{'' 	
get(( 
{(( 
return(( '
m_VisibleInSettingsProvider(( 4
;((4 5
}((6 7
})) 	
public..  
UserSettingAttribute.. #
(..# $
)..$ %
{// 	'
m_VisibleInSettingsProvider00 '
=00( )
false00* /
;00/ 0
}11 	
public66  
UserSettingAttribute66 #
(66# $
string66$ *
category66+ 3
,663 4
string665 ;
title66< A
,66A B
string66C I
tooltip66J Q
=66R S
null66T X
)66X Y
{77 	

m_Category88 
=88 
category88 !
;88! "
m_Title99 
=99 
new99 

GUIContent99 $
(99$ %
title99% *
,99* +
tooltip99, 3
)993 4
;994 5'
m_VisibleInSettingsProvider:: '
=::( )
true::* .
;::. /
};; 	
}<< 
[CC 
AttributeUsageCC 
(CC 
AttributeTargetsCC $
.CC$ %
FieldCC% *
)CC* +
]CC+ ,
publicDD 

sealedDD 
classDD  
SettingsKeyAttributeDD ,
:DD- .
	AttributeDD/ 8
{EE 
stringFF 
m_KeyFF 
;FF 
SettingsScopeGG 
m_ScopeGG 
;GG 
publicLL 
stringLL 
keyLL 
{MM 	
getNN 
{NN 
returnNN 
m_KeyNN 
;NN 
}NN  !
}OO 	
publicTT 
SettingsScopeTT 
scopeTT "
{UU 	
getVV 
{VV 
returnVV 
m_ScopeVV  
;VV  !
}VV" #
}WW 	
public__  
SettingsKeyAttribute__ #
(__# $
string__$ *
key__+ .
,__. /
SettingsScope__0 =
scope__> C
=__D E
SettingsScope__F S
.__S T
Project__T [
)__[ \
{`` 	
m_Keyaa 
=aa 
keyaa 
;aa 
m_Scopebb 
=bb 
scopebb 
;bb 
}cc 	
}dd 
[ii 
AttributeUsageii 
(ii 
AttributeTargetsii $
.ii$ %
Methodii% +
)ii+ ,
]ii, -
publicjj 

sealedjj 
classjj %
UserSettingBlockAttributejj 1
:jj2 3
	Attributejj4 =
{kk 
stringll 

m_Categoryll 
;ll 
publictt 
stringtt 
categorytt 
{uu 	
getvv 
{vv 
returnvv 

m_Categoryvv #
;vv# $
}vv% &
}ww 	
public
ÅÅ '
UserSettingBlockAttribute
ÅÅ (
(
ÅÅ( )
string
ÅÅ) /
category
ÅÅ0 8
)
ÅÅ8 9
{
ÇÇ 	

m_Category
ÉÉ 
=
ÉÉ 
category
ÉÉ !
;
ÉÉ! "
}
ÑÑ 	
}
ÖÖ 
}ÜÜ ˜n
åD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.settings-manager@1.0.3\Editor\UserSetting.cs
	namespace 	
UnityEditor
 
. 
SettingsManagement (
{ 
[ 
Flags 

]
 
enum 
SettingVisibility	 
{ 
None		 
=		 
$num		 
<<		 
$num		 
,		 
Visible 
= 
$num 
<< 
$num 
, 
Hidden 
= 
$num 
<< 
$num 
, 
Unlisted$$ 
=$$ 
$num$$ 
<<$$ 
$num$$ 
,$$ 
Unregistered,, 
=,, 
$num,, 
<<,, 
$num,, 
,,, 
All.. 
=.. 
Visible.. 
|.. 
Hidden.. 
|..  
Unlisted..! )
|..* +
Unregistered.., 8
}// 
public55 

	interface55 
IUserSetting55 !
{66 
string:: 
key:: 
{:: 
get:: 
;:: 
}:: 
Type?? 
type?? 
{?? 
get?? 
;?? 
}?? 
SettingsScopeDD 
scopeDD 
{DD 
getDD !
;DD! "
}DD# $
stringJJ "
settingsRepositoryNameJJ %
{JJ& '
getJJ( +
;JJ+ ,
}JJ- .
SettingsOO 
settingsOO 
{OO 
getOO 
;OO  
}OO! "
objectXX 
GetValueXX 
(XX 
)XX 
;XX 
object`` 
GetDefaultValue`` 
(`` 
)``  
;``  !
voidjj 
SetValuejj 
(jj 
objectjj 
valuejj "
,jj" #
booljj$ (*
saveProjectSettingsImmediatelyjj) G
=jjH I
falsejjJ O
)jjO P
;jjP Q
voidpp #
ApplyModifiedPropertiespp $
(pp$ %
)pp% &
;pp& '
voidvv 
Resetvv 
(vv 
boolvv *
saveProjectSettingsImmediatelyvv 6
=vv7 8
falsevv9 >
)vv> ?
;vv? @
void}} 
Delete}} 
(}} 
bool}} *
saveProjectSettingsImmediately}} 7
=}}8 9
false}}: ?
)}}? @
;}}@ A
}~~ 
public
áá 

class
áá 
UserSetting
áá 
<
áá 
T
áá 
>
áá 
:
áá  !
IUserSetting
áá" .
{
àà 
bool
ââ 
m_Initialized
ââ 
;
ââ 
string
ää 
m_Key
ää 
;
ää 
string
ãã 
m_Repository
ãã 
;
ãã 
T
åå 	
m_Value
åå
 
;
åå 
T
çç 	
m_DefaultValue
çç
 
;
çç 
SettingsScope
éé 
m_Scope
éé 
;
éé 
Settings
èè 

m_Settings
èè 
;
èè 
UserSetting
ëë 
(
ëë 
)
ëë 
{
ëë 
}
ëë 
public
öö 
UserSetting
öö 
(
öö 
Settings
öö #
settings
öö$ ,
,
öö, -
string
öö. 4
key
öö5 8
,
öö8 9
T
öö: ;
value
öö< A
,
ööA B
SettingsScope
ööC P
scope
ööQ V
=
ööW X
SettingsScope
ööY f
.
ööf g
Project
öög n
)
öön o
{
õõ 	
m_Key
úú 
=
úú 
key
úú 
;
úú 
m_Repository
ùù 
=
ùù 
null
ùù 
;
ùù  
m_Value
ûû 
=
ûû 
value
ûû 
;
ûû 
m_Scope
üü 
=
üü 
scope
üü 
;
üü 
m_Initialized
†† 
=
†† 
false
†† !
;
††! "

m_Settings
°° 
=
°° 
settings
°° !
;
°°! "
}
¢¢ 	
public
¨¨ 
UserSetting
¨¨ 
(
¨¨ 
Settings
¨¨ #
settings
¨¨$ ,
,
¨¨, -
string
¨¨. 4

repository
¨¨5 ?
,
¨¨? @
string
¨¨A G
key
¨¨H K
,
¨¨K L
T
¨¨M N
value
¨¨O T
,
¨¨T U
SettingsScope
¨¨V c
scope
¨¨d i
=
¨¨j k
SettingsScope
¨¨l y
.
¨¨y z
Project¨¨z Å
)¨¨Å Ç
{
≠≠ 	
m_Key
ÆÆ 
=
ÆÆ 
key
ÆÆ 
;
ÆÆ 
m_Repository
ØØ 
=
ØØ 

repository
ØØ %
;
ØØ% &
m_Value
∞∞ 
=
∞∞ 
value
∞∞ 
;
∞∞ 
m_Scope
±± 
=
±± 
scope
±± 
;
±± 
m_Initialized
≤≤ 
=
≤≤ 
false
≤≤ !
;
≤≤! "

m_Settings
≥≥ 
=
≥≥ 
settings
≥≥ !
;
≥≥! "
}
¥¥ 	
public
∫∫ 
string
∫∫ 
key
∫∫ 
{
ªª 	
get
ºº 
{
ºº 
return
ºº 
m_Key
ºº 
;
ºº 
}
ºº  !
}
ΩΩ 	
public
√√ 
string
√√ $
settingsRepositoryName
√√ ,
{
ƒƒ 	
get
≈≈ 
{
≈≈ 
return
≈≈ 
m_Repository
≈≈ %
;
≈≈% &
}
≈≈' (
}
∆∆ 	
public
ÃÃ 
Type
ÃÃ 
type
ÃÃ 
{
ÕÕ 	
get
ŒŒ 
{
ŒŒ 
return
ŒŒ 
typeof
ŒŒ 
(
ŒŒ  
T
ŒŒ  !
)
ŒŒ! "
;
ŒŒ" #
}
ŒŒ$ %
}
œœ 	
public
ÿÿ 
object
ÿÿ 
GetDefaultValue
ÿÿ %
(
ÿÿ% &
)
ÿÿ& '
{
ŸŸ 	
return
⁄⁄ 
defaultValue
⁄⁄ 
;
⁄⁄  
}
€€ 	
public
‰‰ 
object
‰‰ 
GetValue
‰‰ 
(
‰‰ 
)
‰‰  
{
ÂÂ 	
return
ÊÊ 
value
ÊÊ 
;
ÊÊ 
}
ÁÁ 	
public
ÒÒ 
SettingsScope
ÒÒ 
scope
ÒÒ "
{
ÚÚ 	
get
ÛÛ 
{
ÛÛ 
return
ÛÛ 
m_Scope
ÛÛ  
;
ÛÛ  !
}
ÛÛ" #
}
ÙÙ 	
public
˙˙ 
Settings
˙˙ 
settings
˙˙  
{
˚˚ 	
get
¸¸ 
{
¸¸ 
return
¸¸ 

m_Settings
¸¸ #
;
¸¸# $
}
¸¸% &
}
˝˝ 	
public
àà 
void
àà 
SetValue
àà 
(
àà 
object
àà #
value
àà$ )
,
àà) *
bool
àà+ /,
saveProjectSettingsImmediately
àà0 N
=
ààO P
false
ààQ V
)
ààV W
{
ââ 	
if
ãã 
(
ãã 
value
ãã 
!=
ãã 
null
ãã 
&&
ãã  
!
ãã! "
(
ãã" #
value
ãã# (
is
ãã) +
T
ãã, -
)
ãã- .
)
ãã. /
throw
åå 
new
åå 
ArgumentException
åå +
(
åå+ ,
$str
åå, D
+
ååE F
typeof
ååG M
(
ååM N
T
ååN O
)
ååO P
+
ååQ R
$str
ååS W
+
ååX Y
key
ååZ ]
+
åå^ _
$str
åå` {
+
åå| }
typeåå~ Ç
+ååÉ Ñ
$strååÖ í
+ååì î
valueååï ö
.ååö õ
GetTypeååõ ¢
(åå¢ £
)åå£ §
)åå§ •
;åå• ¶
SetValue
çç 
(
çç 
(
çç 
T
çç 
)
çç 
value
çç 
,
çç ,
saveProjectSettingsImmediately
çç =
)
çç= >
;
çç> ?
}
éé 	
public
òò 
void
òò 
SetValue
òò 
(
òò 
T
òò 
value
òò $
,
òò$ %
bool
òò& *,
saveProjectSettingsImmediately
òò+ I
=
òòJ K
false
òòL Q
)
òòQ R
{
ôô 	
Init
öö 
(
öö 
)
öö 
;
öö 
m_Value
õõ 
=
õõ 
value
õõ 
;
õõ 
settings
úú 
.
úú 
Set
úú 
<
úú 
T
úú 
>
úú 
(
úú 
key
úú 
,
úú  
m_Value
úú! (
,
úú( )
m_Scope
úú* 1
)
úú1 2
;
úú2 3
if
ûû 
(
ûû ,
saveProjectSettingsImmediately
ûû .
)
ûû. /
settings
üü 
.
üü 
Save
üü 
(
üü 
)
üü 
;
üü  
}
†† 	
public
®® 
void
®® 
Delete
®® 
(
®® 
bool
®® ,
saveProjectSettingsImmediately
®®  >
=
®®? @
false
®®A F
)
®®F G
{
©© 	
settings
™™ 
.
™™ 
	DeleteKey
™™ 
<
™™ 
T
™™  
>
™™  !
(
™™! "
key
™™" %
,
™™% &
scope
™™' ,
)
™™, -
;
™™- .
m_Value
≠≠ 
=
≠≠ 
ValueWrapper
≠≠ "
<
≠≠" #
T
≠≠# $
>
≠≠$ %
.
≠≠% &
DeepCopy
≠≠& .
(
≠≠. /
m_DefaultValue
≠≠/ =
)
≠≠= >
;
≠≠> ?
m_Initialized
ÆÆ 
=
ÆÆ 
false
ÆÆ !
;
ÆÆ! "
}
ØØ 	
public
∂∂ 
void
∂∂ %
ApplyModifiedProperties
∂∂ +
(
∂∂+ ,
)
∂∂, -
{
∑∑ 	
settings
∏∏ 
.
∏∏ 
Set
∏∏ 
<
∏∏ 
T
∏∏ 
>
∏∏ 
(
∏∏ 
key
∏∏ 
,
∏∏  
m_Value
∏∏! (
,
∏∏( )
m_Scope
∏∏* 1
)
∏∏1 2
;
∏∏2 3
settings
ππ 
.
ππ 
Save
ππ 
(
ππ 
)
ππ 
;
ππ 
}
∫∫ 	
public
¡¡ 
void
¡¡ 
Reset
¡¡ 
(
¡¡ 
bool
¡¡ ,
saveProjectSettingsImmediately
¡¡ =
=
¡¡> ?
false
¡¡@ E
)
¡¡E F
{
¬¬ 	
SetValue
√√ 
(
√√ 
defaultValue
√√ !
,
√√! ",
saveProjectSettingsImmediately
√√# A
)
√√A B
;
√√B C
}
ƒƒ 	
void
∆∆ 
Init
∆∆ 
(
∆∆ 
)
∆∆ 
{
«« 	
if
»» 
(
»» 
!
»» 
m_Initialized
»» 
)
»» 
{
…… 
if
   
(
   
m_Scope
   
==
   
SettingsScope
   ,
.
  , -
Project
  - 4
&&
  5 7
settings
  8 @
==
  A C
null
  D H
)
  H I
throw
ÀÀ 
new
ÀÀ 
	Exception
ÀÀ '
(
ÀÀ' (
$str
ÀÀ( 8
+
ÀÀ9 :
m_Key
ÀÀ; @
+
ÀÀA B
$strÀÀC ò
)ÀÀò ô
;ÀÀô ö
m_Initialized
ÕÕ 
=
ÕÕ 
true
ÕÕ  $
;
ÕÕ$ %
m_DefaultValue
–– 
=
––  
ValueWrapper
––! -
<
––- .
T
––. /
>
––/ 0
.
––0 1
DeepCopy
––1 9
(
––9 :
m_Value
––: A
)
––A B
;
––B C
if
““ 
(
““ 
settings
““ 
.
““ 
ContainsKey
““ (
<
““( )
T
““) *
>
““* +
(
““+ ,
m_Key
““, 1
,
““1 2
m_Scope
““3 :
)
““: ;
)
““; <
m_Value
”” 
=
”” 
settings
”” &
.
””& '
Get
””' *
<
””* +
T
””+ ,
>
””, -
(
””- .
m_Key
””. 3
,
””3 4
m_Scope
””5 <
)
””< =
;
””= >
else
‘‘ 
settings
’’ 
.
’’ 
Set
’’  
<
’’  !
T
’’! "
>
’’" #
(
’’# $
m_Key
’’$ )
,
’’) *
m_Value
’’+ 2
,
’’2 3
m_Scope
’’4 ;
)
’’; <
;
’’< =
}
÷÷ 
}
◊◊ 	
public
‹‹ 
T
‹‹ 
defaultValue
‹‹ 
{
›› 	
get
ﬁﬁ 
{
ﬂﬂ 
Init
‡‡ 
(
‡‡ 
)
‡‡ 
;
‡‡ 
return
·· 
ValueWrapper
·· #
<
··# $
T
··$ %
>
··% &
.
··& '
DeepCopy
··' /
(
··/ 0
m_DefaultValue
··0 >
)
··> ?
;
··? @
}
‚‚ 
}
„„ 	
public
ËË 
T
ËË 
value
ËË 
{
ÈÈ 	
get
ÍÍ 
{
ÎÎ 
Init
ÏÏ 
(
ÏÏ 
)
ÏÏ 
;
ÏÏ 
return
ÌÌ 
m_Value
ÌÌ 
;
ÌÌ 
}
ÓÓ 
set
 
{
 
SetValue
 
(
 
value
  
)
  !
;
! "
}
# $
}
ÒÒ 	
public
˙˙ 
static
˙˙ 
implicit
˙˙ 
operator
˙˙ '
T
˙˙( )
(
˙˙) *
UserSetting
˙˙* 5
<
˙˙5 6
T
˙˙6 7
>
˙˙7 8
pref
˙˙9 =
)
˙˙= >
{
˚˚ 	
return
¸¸ 
pref
¸¸ 
.
¸¸ 
value
¸¸ 
;
¸¸ 
}
˝˝ 	
public
ÉÉ 
override
ÉÉ 
string
ÉÉ 
ToString
ÉÉ '
(
ÉÉ' (
)
ÉÉ( )
{
ÑÑ 	
return
ÖÖ 
string
ÖÖ 
.
ÖÖ 
Format
ÖÖ  
(
ÖÖ  !
$str
ÖÖ! D
,
ÖÖD E
scope
ÖÖF K
,
ÖÖK L
key
ÖÖM P
,
ÖÖP Q
value
ÖÖR W
)
ÖÖW X
;
ÖÖX Y
}
ÜÜ 	
}
áá 
}àà ¸b
ìD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.settings-manager@1.0.3\Editor\SettingsDictionary.cs
	namespace 	
UnityEditor
 
. 
SettingsManagement (
{ 
[ 
Serializable 
] 
sealed 

class 
SettingsDictionary #
:$ %*
ISerializationCallbackReceiver& D
{		 
[

 	
Serializable

	 
]

 
struct  
SettingsKeyValuePair #
{ 	
public 
string 
type 
; 
public 
string 
key 
; 
public 
string 
value 
;  
} 	
[ 	
SerializeField	 
] 
List 
<  
SettingsKeyValuePair !
>! "
m_DictionaryValues# 5
=6 7
new8 ;
List< @
<@ A 
SettingsKeyValuePairA U
>U V
(V W
)W X
;X Y
internal 

Dictionary 
< 
Type  
,  !

Dictionary" ,
<, -
string- 3
,3 4
string5 ;
>; <
>< =

dictionary> H
=I J
newK N

DictionaryO Y
<Y Z
TypeZ ^
,^ _

Dictionary` j
<j k
stringk q
,q r
strings y
>y z
>z {
({ |
)| }
;} ~
public 
bool 
ContainsKey 
<  
T  !
>! "
(" #
string# )
key* -
)- .
{ 	
return 

dictionary 
. 
ContainsKey )
() *
typeof* 0
(0 1
T1 2
)2 3
)3 4
&&5 7

dictionary8 B
[B C
typeofC I
(I J
TJ K
)K L
]L M
.M N
ContainsKeyN Y
(Y Z
keyZ ]
)] ^
;^ _
} 	
public 
void 
Set 
< 
T 
> 
( 
string !
key" %
,% &
T' (
value) .
). /
{ 	
if   
(   
string   
.   
IsNullOrEmpty   $
(  $ %
key  % (
)  ( )
)  ) *
throw!! 
new!! !
ArgumentNullException!! /
(!!/ 0
$str!!0 5
)!!5 6
;!!6 7
var## 
type## 
=## 
typeof## 
(## 
T## 
)##  
.##  !!
AssemblyQualifiedName##! 6
;##6 7
SetJson%% 
(%% 
type%% 
,%% 
key%% 
,%% 
ValueWrapper%% +
<%%+ ,
T%%, -
>%%- .
.%%. /
	Serialize%%/ 8
(%%8 9
value%%9 >
)%%> ?
)%%? @
;%%@ A
}&& 	
internal(( 
void(( 
SetJson(( 
((( 
string(( $
type((% )
,(() *
string((+ 1
key((2 5
,((5 6
string((7 =
value((> C
)((C D
{)) 	
var** 
	typeValue** 
=** 
Type**  
.**  !
GetType**! (
(**( )
type**) -
)**- .
;**. /
if,, 
(,, 
	typeValue,, 
==,, 
null,, !
),,! "
throw-- 
new-- 
ArgumentException-- +
(--+ ,
$str--, _
)--_ `
;--` a

Dictionary// 
<// 
string// 
,// 
string// %
>//% &
entries//' .
;//. /
if11 
(11 
!11 

dictionary11 
.11 
TryGetValue11 '
(11' (
	typeValue11( 1
,111 2
out113 6
entries117 >
)11> ?
)11? @

dictionary22 
.22 
Add22 
(22 
	typeValue22 (
,22( )
entries22* 1
=222 3
new224 7

Dictionary228 B
<22B C
string22C I
,22I J
string22K Q
>22Q R
(22R S
)22S T
)22T U
;22U V
if44 
(44 
entries44 
.44 
ContainsKey44 #
(44# $
key44$ '
)44' (
)44( )
entries55 
[55 
key55 
]55 
=55 
value55 $
;55$ %
else66 
entries77 
.77 
Add77 
(77 
key77 
,77  
value77! &
)77& '
;77' (
}88 	
public:: 
T:: 
Get:: 
<:: 
T:: 
>:: 
(:: 
string:: 
key:: "
,::" #
T::$ %
fallback::& .
=::/ 0
default::1 8
(::8 9
T::9 :
)::: ;
)::; <
{;; 	
if<< 
(<< 
string<< 
.<< 
IsNullOrEmpty<< $
(<<$ %
key<<% (
)<<( )
)<<) *
throw== 
new== !
ArgumentNullException== /
(==/ 0
$str==0 5
)==5 6
;==6 7

Dictionary?? 
<?? 
string?? 
,?? 
string?? %
>??% &
entries??' .
;??. /
ifAA 
(AA 

dictionaryAA 
.AA 
TryGetValueAA &
(AA& '
typeofAA' -
(AA- .
TAA. /
)AA/ 0
,AA0 1
outAA2 5
entriesAA6 =
)AA= >
&&AA? A
entriesAAB I
.AAI J
ContainsKeyAAJ U
(AAU V
keyAAV Y
)AAY Z
)AAZ [
{BB 
tryCC 
{DD 
returnEE 
ValueWrapperEE '
<EE' (
TEE( )
>EE) *
.EE* +
DeserializeEE+ 6
(EE6 7
entriesEE7 >
[EE> ?
keyEE? B
]EEB C
)EEC D
;EED E
}FF 
catchGG 
{HH 
returnII 
fallbackII #
;II# $
}JJ 
}KK 
returnMM 
fallbackMM 
;MM 
}NN 	
publicPP 
voidPP 
RemovePP 
<PP 
TPP 
>PP 
(PP 
stringPP $
keyPP% (
)PP( )
{QQ 	

DictionaryRR 
<RR 
stringRR 
,RR 
stringRR %
>RR% &
entriesRR' .
;RR. /
ifTT 
(TT 
!TT 

dictionaryTT 
.TT 
TryGetValueTT '
(TT' (
typeofTT( .
(TT. /
TTT/ 0
)TT0 1
,TT1 2
outTT3 6
entriesTT7 >
)TT> ?
||TT@ B
!TTC D
entriesTTD K
.TTK L
ContainsKeyTTL W
(TTW X
keyTTX [
)TT[ \
)TT\ ]
returnUU 
;UU 
entriesWW 
.WW 
RemoveWW 
(WW 
keyWW 
)WW 
;WW  
}XX 	
publicZZ 
voidZZ 
OnBeforeSerializeZZ %
(ZZ% &
)ZZ& '
{[[ 	
if\\ 
(\\ 
m_DictionaryValues\\ "
==\\# %
null\\& *
)\\* +
return]] 
;]] 
m_DictionaryValues__ 
.__ 
Clear__ $
(__$ %
)__% &
;__& '
foreachaa 
(aa 
varaa 
typeaa 
inaa  

dictionaryaa! +
)aa+ ,
{bb 
foreachcc 
(cc 
varcc 
entrycc "
incc# %
typecc& *
.cc* +
Valuecc+ 0
)cc0 1
{dd 
m_DictionaryValuesee &
.ee& '
Addee' *
(ee* +
newee+ . 
SettingsKeyValuePairee/ C
(eeC D
)eeD E
{ff 
typegg 
=gg 
typegg #
.gg# $
Keygg$ '
.gg' (!
AssemblyQualifiedNamegg( =
,gg= >
keyhh 
=hh 
entryhh #
.hh# $
Keyhh$ '
,hh' (
valueii 
=ii 
entryii  %
.ii% &
Valueii& +
}jj 
)jj 
;jj 
}kk 
}ll 
}mm 	
publicoo 
voidoo 
OnAfterDeserializeoo &
(oo& '
)oo' (
{pp 	

dictionaryqq 
.qq 
Clearqq 
(qq 
)qq 
;qq 
foreachss 
(ss 
varss 
entryss 
inss !
m_DictionaryValuesss" 4
)ss4 5
{tt 

Dictionaryuu 
<uu 
stringuu !
,uu! "
stringuu# )
>uu) *
entriesuu+ 2
;uu2 3
varww 
typeww 
=ww 
Typeww 
.ww  
GetTypeww  '
(ww' (
entryww( -
.ww- .
typeww. 2
)ww2 3
;ww3 4
ifyy 
(yy 
typeyy 
==yy 
nullyy  
)yy  !
{zz 
Debug{{ 
.{{ 

LogWarning{{ $
({{$ %
$str{{% D
+{{E F
entry{{G L
.{{L M
type{{M Q
+{{R S
$str{{T h
+{{i j
entry{{k p
.{{p q
key{{q t
+{{u v
$str{{w z
){{z {
;{{{ |
continue|| 
;|| 
}}} 
if 
( 

dictionary 
. 
TryGetValue *
(* +
type+ /
,/ 0
out1 4
entries5 <
)< =
)= >
entries
ÄÄ 
.
ÄÄ 
Add
ÄÄ 
(
ÄÄ  
entry
ÄÄ  %
.
ÄÄ% &
key
ÄÄ& )
,
ÄÄ) *
entry
ÄÄ+ 0
.
ÄÄ0 1
value
ÄÄ1 6
)
ÄÄ6 7
;
ÄÄ7 8
else
ÅÅ 

dictionary
ÇÇ 
.
ÇÇ 
Add
ÇÇ "
(
ÇÇ" #
type
ÇÇ# '
,
ÇÇ' (
new
ÇÇ) ,

Dictionary
ÇÇ- 7
<
ÇÇ7 8
string
ÇÇ8 >
,
ÇÇ> ?
string
ÇÇ@ F
>
ÇÇF G
(
ÇÇG H
)
ÇÇH I
{
ÇÇJ K
{
ÇÇL M
entry
ÇÇN S
.
ÇÇS T
key
ÇÇT W
,
ÇÇW X
entry
ÇÇY ^
.
ÇÇ^ _
value
ÇÇ_ d
}
ÇÇe f
}
ÇÇg h
)
ÇÇh i
;
ÇÇi j
}
ÉÉ 
}
ÑÑ 	
public
ÜÜ 
override
ÜÜ 
string
ÜÜ 
ToString
ÜÜ '
(
ÜÜ' (
)
ÜÜ( )
{
áá 	
var
àà 
sb
àà 
=
àà 
new
àà 
System
àà 
.
àà  
Text
àà  $
.
àà$ %
StringBuilder
àà% 2
(
àà2 3
)
àà3 4
;
àà4 5
foreach
ää 
(
ää 
var
ää 
type
ää 
in
ää  

dictionary
ää! +
)
ää+ ,
{
ãã 
sb
åå 
.
åå 

AppendLine
åå 
(
åå 
$str
åå &
+
åå' (
type
åå) -
.
åå- .
Key
åå. 1
)
åå1 2
;
åå2 3
foreach
éé 
(
éé 
var
éé 
entry
éé "
in
éé# %
type
éé& *
.
éé* +
Value
éé+ 0
)
éé0 1
{
èè 
sb
êê 
.
êê 

AppendLine
êê !
(
êê! "
string
êê" (
.
êê( )
Format
êê) /
(
êê/ 0
$str
êê0 ?
,
êê? @
entry
êêA F
.
êêF G
Key
êêG J
,
êêJ K
entry
êêL Q
.
êêQ R
Value
êêR W
)
êêW X
)
êêX Y
;
êêY Z
}
ëë 
}
íí 
return
îî 
sb
îî 
.
îî 
ToString
îî 
(
îî 
)
îî  
;
îî  !
}
ïï 	
}
ññ 
}óó éJ
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.settings-manager@1.0.3\Editor\UserSettingsRepository.cs
	namespace 	
UnityEditor
 
. 
SettingsManagement (
{ 
public 

class "
UserSettingsRepository '
:( )
ISettingsRepository* =
{ 
static 
string 
GetEditorPrefKey &
<& '
T' (
>( )
() *
string* 0
key1 4
)4 5
{		 	
return

 
GetEditorPrefKey

 #
(

# $
typeof

$ *
(

* +
T

+ ,
)

, -
.

- .
FullName

. 6
,

6 7
key

8 ;
)

; <
;

< =
} 	
static 
string 
GetEditorPrefKey &
(& '
string' -
fullName. 6
,6 7
string8 >
key? B
)B C
{ 	
return 
fullName 
+ 
$str "
+# $
key% (
;( )
} 	
static 
void 
SetEditorPref !
<! "
T" #
># $
($ %
string% +
key, /
,/ 0
T1 2
value3 8
)8 9
{ 	
var 
k 
= 
GetEditorPrefKey $
<$ %
T% &
>& '
(' (
key( +
)+ ,
;, -
if 
( 
typeof 
( 
T 
) 
== 
typeof #
(# $
string$ *
)* +
)+ ,
EditorPrefs 
. 
	SetString %
(% &
k& '
,' (
() *
string* 0
)0 1
(1 2
object2 8
)8 9
value9 >
)> ?
;? @
else 
if 
( 
typeof 
( 
T 
) 
== !
typeof" (
(( )
bool) -
)- .
). /
EditorPrefs 
. 
SetBool #
(# $
k$ %
,% &
(' (
bool( ,
), -
(- .
object. 4
)4 5
value5 :
): ;
;; <
else 
if 
( 
typeof 
( 
T 
) 
== !
typeof" (
(( )
float) .
). /
)/ 0
EditorPrefs 
. 
SetFloat $
($ %
k% &
,& '
(( )
float) .
). /
(/ 0
object0 6
)6 7
value7 <
)< =
;= >
else 
if 
( 
typeof 
( 
T 
) 
== !
typeof" (
(( )
int) ,
), -
)- .
EditorPrefs 
. 
SetInt "
(" #
k# $
,$ %
(& '
int' *
)* +
(+ ,
object, 2
)2 3
value3 8
)8 9
;9 :
else 
EditorPrefs 
. 
	SetString %
(% &
k& '
,' (
ValueWrapper) 5
<5 6
T6 7
>7 8
.8 9
	Serialize9 B
(B C
valueC H
)H I
)I J
;J K
}   	
static"" 
T"" 
GetEditorPref"" 
<"" 
T""  
>""  !
(""! "
string""" (
key"") ,
,"", -
T"". /
fallback""0 8
=""9 :
default""; B
(""B C
T""C D
)""D E
)""E F
{## 	
var$$ 
k$$ 
=$$ 
GetEditorPrefKey$$ $
<$$$ %
T$$% &
>$$& '
($$' (
key$$( +
)$$+ ,
;$$, -
if&& 
(&& 
!&& 
EditorPrefs&& 
.&& 
HasKey&& #
(&&# $
k&&$ %
)&&% &
)&&& '
return'' 
fallback'' 
;''  
var)) 
o)) 
=)) 
()) 
object)) 
))) 
fallback)) $
;))$ %
if++ 
(++ 
typeof++ 
(++ 
T++ 
)++ 
==++ 
typeof++ #
(++# $
string++$ *
)++* +
)+++ ,
o,, 
=,, 
EditorPrefs,, 
.,,  
	GetString,,  )
(,,) *
k,,* +
,,,+ ,
(,,- .
string,,. 4
),,4 5
o,,5 6
),,6 7
;,,7 8
else-- 
if-- 
(-- 
typeof-- 
(-- 
T-- 
)-- 
==-- !
typeof--" (
(--( )
bool--) -
)--- .
)--. /
o.. 
=.. 
EditorPrefs.. 
...  
GetBool..  '
(..' (
k..( )
,..) *
(..+ ,
bool.., 0
)..0 1
o..1 2
)..2 3
;..3 4
else// 
if// 
(// 
typeof// 
(// 
T// 
)// 
==// !
typeof//" (
(//( )
float//) .
)//. /
)/// 0
o00 
=00 
EditorPrefs00 
.00  
GetFloat00  (
(00( )
k00) *
,00* +
(00, -
float00- 2
)002 3
o003 4
)004 5
;005 6
else11 
if11 
(11 
typeof11 
(11 
T11 
)11 
==11 !
typeof11" (
(11( )
int11) ,
)11, -
)11- .
o22 
=22 
EditorPrefs22 
.22  
GetInt22  &
(22& '
k22' (
,22( )
(22* +
int22+ .
)22. /
o22/ 0
)220 1
;221 2
else33 
return44 
ValueWrapper44 #
<44# $
T44$ %
>44% &
.44& '
Deserialize44' 2
(442 3
EditorPrefs443 >
.44> ?
	GetString44? H
(44H I
k44I J
)44J K
)44K L
;44L M
return66 
(66 
T66 
)66 
o66 
;66 
}77 	
public== 
SettingsScope== 
scope== "
{>> 	
get?? 
{?? 
return?? 
SettingsScope?? &
.??& '
User??' +
;??+ ,
}??- .
}@@ 	
publicEE 
stringEE 
nameEE 
{FF 	
getGG 
{GG 
returnGG 
$strGG &
;GG& '
}GG( )
}HH 	
publicQQ 
stringQQ 
pathQQ 
{RR 	
getSS 
{SS 
returnSS 
stringSS 
.SS  
EmptySS  %
;SS% &
}SS' (
}TT 	
publicZZ 
voidZZ 
SaveZZ 
(ZZ 
)ZZ 
{[[ 	
}\\ 	
publicee 
voidee 
Setee 
<ee 
Tee 
>ee 
(ee 
stringee !
keyee" %
,ee% &
Tee' (
valueee) .
)ee. /
{ff 	
SetEditorPrefgg 
<gg 
Tgg 
>gg 
(gg 
keygg  
,gg  !
valuegg" '
)gg' (
;gg( )
}hh 	
publicqq 
Tqq 
Getqq 
<qq 
Tqq 
>qq 
(qq 
stringqq 
keyqq "
,qq" #
Tqq$ %
fallbackqq& .
=qq/ 0
defaultqq1 8
(qq8 9
Tqq9 :
)qq: ;
)qq; <
{rr 	
returnss 
GetEditorPrefss  
<ss  !
Tss! "
>ss" #
(ss# $
keyss$ '
,ss' (
fallbackss) 1
)ss1 2
;ss2 3
}tt 	
public}} 
bool}} 
ContainsKey}} 
<}}  
T}}  !
>}}! "
(}}" #
string}}# )
key}}* -
)}}- .
{~~ 	
return 
EditorPrefs 
. 
HasKey %
(% &
GetEditorPrefKey& 6
<6 7
T7 8
>8 9
(9 :
key: =
)= >
)> ?
;? @
}
ÄÄ 	
public
àà 
void
àà 
Remove
àà 
<
àà 
T
àà 
>
àà 
(
àà 
string
àà $
key
àà% (
)
àà( )
{
ââ 	
EditorPrefs
ää 
.
ää 
	DeleteKey
ää !
(
ää! "
GetEditorPrefKey
ää" 2
<
ää2 3
T
ää3 4
>
ää4 5
(
ää5 6
key
ää6 9
)
ää9 :
)
ää: ;
;
ää; <
}
ãã 	
}
åå 
}çç √
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.settings-manager@1.0.3\Editor\ISettingsRepository.cs
	namespace 	
UnityEditor
 
. 
SettingsManagement (
{ 
public 

	interface 
ISettingsRepository (
{ 
SettingsScope 
scope 
{ 
get !
;! "
}# $
string 
name 
{ 
get 
; 
} 
string 
path 
{ 
get 
; 
} 
void 
Save 
( 
) 
; 
void"" 
Set"" 
<"" 
T"" 
>"" 
("" 
string"" 
key"" 
,"" 
T""  !
value""" '
)""' (
;""( )
T** 	
Get**
 
<** 
T** 
>** 
(** 
string** 
key** 
,** 
T** 
fallback** '
=**( )
default*** 1
(**1 2
T**2 3
)**3 4
)**4 5
;**5 6
bool22 
ContainsKey22 
<22 
T22 
>22 
(22 
string22 "
key22# &
)22& '
;22' (
void99 
Remove99 
<99 
T99 
>99 
(99 
string99 
key99 !
)99! "
;99" #
}:: 
};; ›x
çD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.settings-manager@1.0.3\Editor\UserSettings.cs
	namespace 	
UnityEditor
 
. 
SettingsManagement (
{ 
static 

class 
UserSettings 
{ 
internal 
const 
string 
packageName )
=* +
$str, H
;H I
internal 
static 
string 
GetSettingsString 0
(0 1
IEnumerable1 <
<< =
Assembly= E
>E F

assembliesG Q
,Q R
paramsS Y
SettingsScopeZ g
[g h
]h i
scopesj p
)p q
{ 	
var 
settings 
= 
FindUserSettings +
(+ ,

assemblies, 6
,6 7
SettingVisibility8 I
.I J
AllJ M
)M N
;N O
if 
( 
scopes 
!= 
null 
&& !
scopes" (
.( )
Length) /
>0 1
$num2 3
)3 4
settings 
= 
settings #
.# $
Where$ )
() *
x* +
=>, .
scopes/ 5
.5 6
Contains6 >
(> ?
x? @
.@ A
scopeA F
)F G
)G H
;H I
var 
sb 
= 
new 
System 
.  
Text  $
.$ %
StringBuilder% 2
(2 3
)3 4
;4 5
Type 
t 
= 
null 
; 
foreach 
( 
var 
pref 
in  
settings! )
.) *
OrderBy* 1
(1 2
x2 3
=>4 6
x7 8
.8 9
type9 =
.= >
ToString> F
(F G
)G H
)H I
)I J
{ 
if 
( 
pref 
. 
type 
!=  
t! "
)" #
{ 
if 
( 
t 
!= 
null !
)! "
sb 
. 

AppendLine %
(% &
)& '
;' (
t 
= 
pref 
. 
type !
;! "
sb 
. 

AppendLine !
(! "
pref" &
.& '
type' +
.+ ,
ToString, 4
(4 5
)5 6
)6 7
;7 8
}   
var"" 
val"" 
="" 
pref"" 
."" 
GetValue"" '
(""' (
)""( )
;"") *
sb## 
.## 

AppendLine## 
(## 
string## $
.##$ %
Format##% +
(##+ ,
$str##, E
,##E F
$str##G I
,##I J
pref##K O
.##O P
scope##P U
,##U V
pref##W [
.##[ \
key##\ _
,##_ `
val##a d
!=##e g
null##h l
?##m n
val##o r
.##r s
ToString##s {
(##{ |
)##| }
:##~ 
$str
##Ä Ü
)
##Ü á
)
##á à
;
##à â
}$$ 
return&& 
sb&& 
.&& 
ToString&& 
(&& 
)&&  
;&&  !
}'' 	
public-- 
static-- 
IEnumerable-- !
<--! "
IUserSetting--" .
>--. /
FindUserSettings--0 @
(--@ A
IEnumerable--A L
<--L M
Assembly--M U
>--U V

assemblies--W a
,--a b
SettingVisibility--c t

visibility--u 
,	-- Ä
BindingFlags
--Å ç
flags
--é ì
=
--î ï
BindingFlags
--ñ ¢
.
--¢ £
Public
--£ ©
|
--™ ´
BindingFlags
--¨ ∏
.
--∏ π
	NonPublic
--π ¬
|
--√ ƒ
BindingFlags
--≈ —
.
--— “
Instance
--“ ⁄
|
--€ ‹
BindingFlags
--› È
.
--È Í
Static
--Í 
)
-- Ò
{.. 	
var// 
loadedTypes// 
=// 

assemblies// (
.//( )

SelectMany//) 3
(//3 4
x//4 5
=>//6 8
x//9 :
.//: ;
GetTypes//; C
(//C D
)//D E
)//E F
;//F G
var00 
loadedFields00 
=00 
loadedTypes00 *
.00* +

SelectMany00+ 5
(005 6
x006 7
=>008 :
x00; <
.00< =
	GetFields00= F
(00F G
flags00G L
)00L M
)00M N
;00N O
var11 
settings11 
=11 
new11 
List11 #
<11# $
IUserSetting11$ 0
>110 1
(111 2
)112 3
;113 4
if33 
(33 
(33 

visibility33 
&33 
(33 
SettingVisibility33 0
.330 1
Visible331 8
|339 :
SettingVisibility33; L
.33L M
Unlisted33M U
)33U V
)33V W
>33X Y
$num33Z [
)33[ \
{44 
var55 

attributes55 
=55  
loadedFields55! -
.55- .
Where55. 3
(553 4
prop554 8
=>559 ;
	Attribute55< E
.55E F
	IsDefined55F O
(55O P
prop55P T
,55T U
typeof55V \
(55\ ] 
UserSettingAttribute55] q
)55q r
)55r s
)55s t
;55t u
foreach77 
(77 
var77 
field77 "
in77# %

attributes77& 0
)770 1
{88 
var99 
userSetting99 #
=99$ %
(99& ' 
UserSettingAttribute99' ;
)99; <
	Attribute99< E
.99E F
GetCustomAttribute99F X
(99X Y
field99Y ^
,99^ _
typeof99` f
(99f g 
UserSettingAttribute99g {
)99{ |
)99| }
;99} ~
if;; 
(;; 
!;; 
field;; 
.;; 
IsStatic;; '
||;;( *
!;;+ ,
typeof;;, 2
(;;2 3
IUserSetting;;3 ?
);;? @
.;;@ A
IsAssignableFrom;;A Q
(;;Q R
field;;R W
.;;W X
	FieldType;;X a
);;a b
);;b c
{<< 
Debug== 
.== 
LogError== &
(==& '
$str	==' â
+
==ä ã
field
==å ë
.
==ë í
Name
==í ñ
+
==ó ò
$str
==ô ü
+
==† °
field
==¢ ß
.
==ß ®
	FieldType
==® ±
+
==≤ ≥
$str
==¥ π
+
==∫ ª
field
==º ¡
.
==¡ ¬
DeclaringType
==¬ œ
)
==œ –
;
==– —
continue>>  
;>>  !
}?? 
boolAA 
visibleAA  
=AA! "
userSettingAA# .
.AA. /%
visibleInSettingsProviderAA/ H
;AAH I
ifCC 
(CC 
visibleCC 
&&CC  "
(CC# $

visibilityCC$ .
&CC/ 0
SettingVisibilityCC1 B
.CCB C
VisibleCCC J
)CCJ K
==CCL N
SettingVisibilityCCO `
.CC` a
VisibleCCa h
)CCh i
settingsDD  
.DD  !
AddDD! $
(DD$ %
(DD% &
IUserSettingDD& 2
)DD2 3
fieldDD3 8
.DD8 9
GetValueDD9 A
(DDA B
nullDDB F
)DDF G
)DDG H
;DDH I
elseEE 
ifEE 
(EE 
!EE 
visibleEE %
&&EE& (
(EE) *

visibilityEE* 4
&EE5 6
SettingVisibilityEE7 H
.EEH I
HiddenEEI O
)EEO P
==EEQ S
SettingVisibilityEET e
.EEe f
HiddenEEf l
)EEl m
settingsFF  
.FF  !
AddFF! $
(FF$ %
(FF% &
IUserSettingFF& 2
)FF2 3
fieldFF3 8
.FF8 9
GetValueFF9 A
(FFA B
nullFFB F
)FFF G
)FFG H
;FFH I
}GG 
}HH 
ifJJ 
(JJ 
(JJ 

visibilityJJ 
&JJ 
SettingVisibilityJJ /
.JJ/ 0
UnlistedJJ0 8
)JJ8 9
==JJ: <
SettingVisibilityJJ= N
.JJN O
UnlistedJJO W
)JJW X
{KK 
varLL 
settingsKeysLL  
=LL! "
loadedFieldsLL# /
.LL/ 0
WhereLL0 5
(LL5 6
yLL6 7
=>LL8 :
	AttributeLL; D
.LLD E
	IsDefinedLLE N
(LLN O
yLLO P
,LLP Q
typeofLLR X
(LLX Y 
SettingsKeyAttributeLLY m
)LLm n
)LLn o
)LLo p
;LLp q
foreachNN 
(NN 
varNN 
fieldNN "
inNN# %
settingsKeysNN& 2
)NN2 3
{OO 
ifPP 
(PP 
fieldPP 
.PP 
IsStaticPP &
)PP& '
{QQ 
settingsRR  
.RR  !
AddRR! $
(RR$ %
(RR% &
IUserSettingRR& 2
)RR2 3
fieldRR3 8
.RR8 9
GetValueRR9 A
(RRA B
nullRRB F
)RRF G
)RRG H
;RRH I
}SS 
elseTT 
{UU 
varVV 
settingAttributeVV ,
=VV- .
(VV/ 0 
SettingsKeyAttributeVV0 D
)VVD E
	AttributeVVE N
.VVN O
GetCustomAttributeVVO a
(VVa b
fieldVVb g
,VVg h
typeofVVi o
(VVo p!
SettingsKeyAttribute	VVp Ñ
)
VVÑ Ö
)
VVÖ Ü
;
VVÜ á
varWW 
prefWW  
=WW! "
CreateGenericPrefWW# 4
(WW4 5
settingAttributeWW5 E
.WWE F
keyWWF I
,WWI J
settingAttributeWWK [
.WW[ \
scopeWW\ a
,WWa b
fieldWWc h
)WWh i
;WWi j
ifXX 
(XX 
prefXX  
!=XX! #
nullXX$ (
)XX( )
settingsYY $
.YY$ %
AddYY% (
(YY( )
prefYY) -
)YY- .
;YY. /
elseZZ 
Debug[[ !
.[[! "

LogWarning[[" ,
([[, -
$str[[- K
+[[L M
field[[N S
.[[S T
	FieldType[[T ]
+[[^ _
$str[[` d
+[[e f
settingAttribute[[g w
.[[w x
key[[x {
+[[| }
$str	[[~ Ü
+
[[á à
field
[[â é
.
[[é è
DeclaringType
[[è ú
)
[[ú ù
;
[[ù û
}\\ 
}]] 
}^^ 
if`` 
(`` 
(`` 

visibility`` 
&`` 
SettingVisibility`` /
.``/ 0
Unregistered``0 <
)``< =
==``> @
SettingVisibility``A R
.``R S
Unregistered``S _
)``_ `
{aa 
varbb 
unregisterdbb 
=bb  !
loadedFieldsbb" .
.bb. /
Wherebb/ 4
(bb4 5
ybb5 6
=>bb7 9
typeofbb: @
(bb@ A
IUserSettingbbA M
)bbM N
.bbN O
IsAssignableFrombbO _
(bb_ `
ybb` a
.bba b
	FieldTypebbb k
)bbk l
&&cc 
!cc 
	Attributecc %
.cc% &
	IsDefinedcc& /
(cc/ 0
ycc0 1
,cc1 2
typeofcc3 9
(cc9 : 
SettingsKeyAttributecc: N
)ccN O
)ccO P
&&dd 
!dd 
	Attributedd %
.dd% &
	IsDefineddd& /
(dd/ 0
ydd0 1
,dd1 2
typeofdd3 9
(dd9 : 
UserSettingAttributedd: N
)ddN O
)ddO P
)ddP Q
;ddQ R
foreachff 
(ff 
varff 
fieldff "
inff# %
unregisterdff& 1
)ff1 2
{gg 
ifhh 
(hh 
fieldhh 
.hh 
IsStatichh &
)hh& '
{ii 
settingsjj  
.jj  !
Addjj! $
(jj$ %
(jj% &
IUserSettingjj& 2
)jj2 3
fieldjj3 8
.jj8 9
GetValuejj9 A
(jjA B
nulljjB F
)jjF G
)jjG H
;jjH I
}kk 
elsell 
{mm 
}uu 
}vv 
}ww 
returnyy 
settingsyy 
;yy 
}zz 	
static|| 
IUserSetting|| 
CreateGenericPref|| -
(||- .
string||. 4
key||5 8
,||8 9
SettingsScope||: G
scope||H M
,||M N
	FieldInfo||O X
field||Y ^
)||^ _
{}} 	
try~~ 
{ 
var
ÄÄ 
type
ÄÄ 
=
ÄÄ 
field
ÄÄ  
.
ÄÄ  !
	FieldType
ÄÄ! *
;
ÄÄ* +
if
ÅÅ 
(
ÅÅ 
typeof
ÅÅ 
(
ÅÅ 
IUserSetting
ÅÅ '
)
ÅÅ' (
.
ÅÅ( )
IsAssignableFrom
ÅÅ) 9
(
ÅÅ9 :
type
ÅÅ: >
)
ÅÅ> ?
&&
ÅÅ@ B
type
ÅÅC G
.
ÅÅG H
IsGenericType
ÅÅH U
)
ÅÅU V
type
ÇÇ 
=
ÇÇ 
type
ÇÇ 
.
ÇÇ  !
GetGenericArguments
ÇÇ  3
(
ÇÇ3 4
)
ÇÇ4 5
.
ÇÇ5 6
FirstOrDefault
ÇÇ6 D
(
ÇÇD E
)
ÇÇE F
;
ÇÇF G
var
ÉÉ 
genericPrefClass
ÉÉ $
=
ÉÉ% &
typeof
ÉÉ' -
(
ÉÉ- .
UserSetting
ÉÉ. 9
<
ÉÉ9 :
>
ÉÉ: ;
)
ÉÉ; <
.
ÉÉ< =
MakeGenericType
ÉÉ= L
(
ÉÉL M
type
ÉÉM Q
)
ÉÉQ R
;
ÉÉR S
var
ÑÑ 
defaultValue
ÑÑ  
=
ÑÑ! "
type
ÑÑ# '
.
ÑÑ' (
IsValueType
ÑÑ( 3
?
ÑÑ4 5
	Activator
ÑÑ6 ?
.
ÑÑ? @
CreateInstance
ÑÑ@ N
(
ÑÑN O
type
ÑÑO S
)
ÑÑS T
:
ÑÑU V
null
ÑÑW [
;
ÑÑ[ \
return
ÖÖ 
(
ÖÖ 
IUserSetting
ÖÖ $
)
ÖÖ$ %
	Activator
ÖÖ% .
.
ÖÖ. /
CreateInstance
ÖÖ/ =
(
ÖÖ= >
genericPrefClass
ÖÖ> N
,
ÖÖN O
new
ÖÖP S
object
ÖÖT Z
[
ÖÖZ [
]
ÖÖ[ \
{
ÖÖ] ^
key
ÖÖ_ b
,
ÖÖb c
defaultValue
ÖÖd p
,
ÖÖp q
scope
ÖÖr w
}
ÖÖx y
)
ÖÖy z
;
ÖÖz {
}
ÜÜ 
catch
áá 
{
àà 
return
ââ 
null
ââ 
;
ââ 
}
ää 
}
ãã 	
}
åå 
}çç ¯
çD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.settings-manager@1.0.3\Editor\ValueWrapper.cs
	namespace 	
UnityEditor
 
. 
SettingsManagement (
{ 
[ 
Serializable 
] 
sealed 

class 
ValueWrapper 
< 
T 
>  
{ 
const 
bool 
k_PrettyPrintJson $
=% &
false' ,
;, -
[ 	
SerializeField	 
] 
T 	
m_Value
 
; 
public 
static 
string 
	Serialize &
(& '
T' (
value) .
). /
{ 	
var 
obj 
= 
new 
ValueWrapper &
<& '
T' (
>( )
() *
)* +
{, -
m_Value. 5
=6 7
value8 =
}> ?
;? @
return 
EditorJsonUtility $
.$ %
ToJson% +
(+ ,
obj, /
,/ 0
k_PrettyPrintJson1 B
)B C
;C D
} 	
public 
static 
T 
Deserialize #
(# $
string$ *
json+ /
)/ 0
{ 	
var 
value 
= 
( 
object 
)  
	Activator  )
.) *
CreateInstance* 8
<8 9
ValueWrapper9 E
<E F
TF G
>G H
>H I
(I J
)J K
;K L
EditorJsonUtility 
. 
FromJsonOverwrite /
(/ 0
json0 4
,4 5
value6 ;
); <
;< =
return 
( 
( 
ValueWrapper !
<! "
T" #
># $
)$ %
value% *
)* +
.+ ,
m_Value, 3
;3 4
} 	
public 
static 
T 
DeepCopy  
(  !
T! "
value# (
)( )
{   	
if!! 
(!! 
typeof!! 
(!! 
	ValueType!!  
)!!  !
.!!! "
IsAssignableFrom!!" 2
(!!2 3
typeof!!3 9
(!!9 :
T!!: ;
)!!; <
)!!< =
)!!= >
return"" 
value"" 
;"" 
var## 
str## 
=## 
	Serialize## 
(##  
value##  %
)##% &
;##& '
return$$ 
Deserialize$$ 
($$ 
str$$ "
)$$" #
;$$# $
}%% 	
}&& 
}'' Ô∫
íD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.settings-manager@1.0.3\Editor\SettingsGUILayout.cs
	namespace 	
UnityEditor
 
. 
SettingsManagement (
{ 
static 

class 
SettingsGUIStyles "
{		 
const

 
string

 
k_SettingsGearIcon

 '
=

( )
$str

* 5
+

6 7
UserSettings

8 D
.

D E
packageName

E P
+

Q R
$str

S i
;

i j
static 
bool 
s_Initialized !
;! "
public 
static 
GUIStyle 
s_SettingsGizmo .
;. /
public 
static 
GUIStyle 
s_SettingsArea -
;- .
public 
static 
GUIStyle "
s_IndentedSettingBlock 5
;5 6
static 
void 
Init 
( 
) 
{ 	
if 
( 
s_Initialized 
) 
return 
; 
s_Initialized 
= 
true  
;  !
s_SettingsGizmo 
= 
new !
GUIStyle" *
(* +
)+ ,
{ 
normal 
= 
new 
GUIStyleState *
(* +
)+ ,
{ 

background 
=  
AssetDatabase! .
.. /
LoadAssetAtPath/ >
<> ?
	Texture2D? H
>H I
(I J
k_SettingsGearIconJ \
)\ ]
} 
, 

fixedWidth 
= 
$num 
,  
fixedHeight 
= 
$num  
,  !
padding   
=   
new   

RectOffset   (
(  ( )
$num  ) *
,  * +
$num  , -
,  - .
$num  / 0
,  0 1
$num  2 3
)  3 4
,  4 5
margin!! 
=!! 
new!! 

RectOffset!! '
(!!' (
$num!!( )
,!!) *
$num!!+ ,
,!!, -
$num!!. /
,!!/ 0
$num!!1 2
)!!2 3
,!!3 4
imagePosition"" 
="" 
ImagePosition""  -
.""- .
	ImageOnly"". 7
}## 
;## 
s_SettingsArea%% 
=%% 
new%%  
GUIStyle%%! )
(%%) *
)%%* +
{&& 
margin'' 
='' 
new'' 

RectOffset'' '
(''' (
$num''( )
,'') *
$num''+ ,
,'', -
$num''. /
,''/ 0
$num''1 2
)''2 3
}(( 
;(( "
s_IndentedSettingBlock** "
=**# $
new**% (
GUIStyle**) 1
(**1 2
)**2 3
{++ 
padding,, 
=,, 
new,, 

RectOffset,, (
(,,( )
$num,,) +
,,,+ ,
$num,,- .
,,,. /
$num,,0 1
,,,1 2
$num,,3 4
),,4 5
}-- 
;-- 
}.. 	
public00 
static00 
GUIStyle00 
settingsGizmo00 ,
{11 	
get22 
{33 
Init44 
(44 
)44 
;44 
return55 
s_SettingsGizmo55 &
;55& '
}66 
}77 	
public99 
static99 
GUIStyle99 
settingsArea99 +
{:: 	
get;; 
{<< 
Init== 
(== 
)== 
;== 
return>> 
s_SettingsArea>> %
;>>% &
}?? 
}@@ 	
publicBB 
staticBB 
GUIStyleBB  
indentedSettingBlockBB 3
{CC 	
getDD 
{EE 
InitFF 
(FF 
)FF 
;FF 
returnGG "
s_IndentedSettingBlockGG -
;GG- .
}HH 
}II 	
}JJ 
publicOO 

staticOO 
classOO 
SettingsGUILayoutOO )
{PP 
publicUU 
classUU 
IndentedGroupUU "
:UU# $
IDisposableUU% 0
{VV 	
boolWW 
m_IsDisposedWW 
;WW 
public\\ 
IndentedGroup\\  
(\\  !
)\\! "
{]] 
EditorGUIUtility^^  
.^^  !

labelWidth^^! +
-=^^, .
SettingsGUIStyles^^/ @
.^^@ A 
indentedSettingBlock^^A U
.^^U V
padding^^V ]
.^^] ^
left^^^ b
-^^c d
$num^^e f
;^^f g
	GUILayout__ 
.__ 
BeginVertical__ '
(__' (
SettingsGUIStyles__( 9
.__9 : 
indentedSettingBlock__: N
)__N O
;__O P
}`` 
publicee 
IndentedGroupee  
(ee  !
stringee! '
labelee( -
)ee- .
{ff 
	GUILayoutgg 
.gg 
Labelgg 
(gg  
labelgg  %
)gg% &
;gg& '
EditorGUIUtilityhh  
.hh  !

labelWidthhh! +
-=hh, .
SettingsGUIStyleshh/ @
.hh@ A 
indentedSettingBlockhhA U
.hhU V
paddinghhV ]
.hh] ^
lefthh^ b
-hhc d
$numhhe f
;hhf g
	GUILayoutii 
.ii 
BeginVerticalii '
(ii' (
SettingsGUIStylesii( 9
.ii9 : 
indentedSettingBlockii: N
)iiN O
;iiO P
}jj 
publicpp 
voidpp 
Disposepp 
(pp  
)pp  !
{qq 
ifrr 
(rr 
m_IsDisposedrr  
)rr  !
returnss 
;ss 
m_IsDisposedtt 
=tt 
truett #
;tt# $
	GUILayoutuu 
.uu 
EndVerticaluu %
(uu% &
)uu& '
;uu' (
EditorGUIUtilityvv  
.vv  !

labelWidthvv! +
+=vv, .
SettingsGUIStylesvv/ @
.vv@ A 
indentedSettingBlockvvA U
.vvU V
paddingvvV ]
.vv] ^
leftvv^ b
-vvc d
$numvve f
;vvf g
}ww 
}xx 	
internalzz 
staticzz 
HashSetzz 
<zz  
stringzz  &
>zz& '

s_Keywordszz( 2
=zz3 4
nullzz5 9
;zz9 :
internal|| 
static|| 
bool|| 
MatchSearchGroups|| .
(||. /
string||/ 5
searchContext||6 C
,||C D
string||E K
label||L Q
)||Q R
{}} 	
if~~ 
(~~ 

s_Keywords~~ 
!=~~ 
null~~ "
)~~" #
{ 
foreach
ÄÄ 
(
ÄÄ 
var
ÄÄ 
keyword
ÄÄ $
in
ÄÄ% '
label
ÄÄ( -
.
ÄÄ- .
Split
ÄÄ. 3
(
ÄÄ3 4
$char
ÄÄ4 7
)
ÄÄ7 8
)
ÄÄ8 9

s_Keywords
ÅÅ 
.
ÅÅ 
Add
ÅÅ "
(
ÅÅ" #
keyword
ÅÅ# *
)
ÅÅ* +
;
ÅÅ+ ,
}
ÇÇ 
if
ÑÑ 
(
ÑÑ 
searchContext
ÑÑ 
==
ÑÑ  
null
ÑÑ! %
)
ÑÑ% &
return
ÖÖ 
true
ÖÖ 
;
ÖÖ 
var
áá 
ctx
áá 
=
áá 
searchContext
áá #
.
áá# $
Trim
áá$ (
(
áá( )
)
áá) *
;
áá* +
if
ââ 
(
ââ 
string
ââ 
.
ââ 
IsNullOrEmpty
ââ $
(
ââ$ %
ctx
ââ% (
)
ââ( )
)
ââ) *
return
ää 
true
ää 
;
ää 
var
åå 
split
åå 
=
åå 
searchContext
åå %
.
åå% &
Split
åå& +
(
åå+ ,
$char
åå, /
)
åå/ 0
;
åå0 1
return
éé 
split
éé 
.
éé 
Any
éé 
(
éé 
x
éé 
=>
éé !
!
éé" #
string
éé# )
.
éé) *
IsNullOrEmpty
éé* 7
(
éé7 8
x
éé8 9
)
éé9 :
&&
éé; =
label
éé> C
.
ééC D
IndexOf
ééD K
(
ééK L
x
ééL M
,
ééM N
StringComparison
ééO _
.
éé_ `(
InvariantCultureIgnoreCase
éé` z
)
ééz {
>
éé| }
-
éé~ 
$numéé Ä
)ééÄ Å
;ééÅ Ç
}
èè 	
internal
ëë 
static
ëë 
bool
ëë 
DebugModeFilter
ëë ,
(
ëë, -
IUserSetting
ëë- 9
pref
ëë: >
)
ëë> ?
{
íí 	
if
ìì 
(
ìì 
!
ìì 
EditorPrefs
ìì 
.
ìì 
GetBool
ìì $
(
ìì$ %
$str
ìì% 4
,
ìì4 5
false
ìì6 ;
)
ìì; <
)
ìì< =
return
îî 
true
îî 
;
îî 
if
ññ 
(
ññ 
pref
ññ 
.
ññ 
scope
ññ 
==
ññ 
SettingsScope
ññ +
.
ññ+ ,
Project
ññ, 3
&&
ññ4 6"
UserSettingsProvider
ññ7 K
.
ññK L!
showProjectSettings
ññL _
)
ññ_ `
return
óó 
true
óó 
;
óó 
if
ôô 
(
ôô 
pref
ôô 
.
ôô 
scope
ôô 
==
ôô 
SettingsScope
ôô +
.
ôô+ ,
User
ôô, 0
&&
ôô1 3"
UserSettingsProvider
ôô4 H
.
ôôH I
showUserSettings
ôôI Y
)
ôôY Z
return
öö 
true
öö 
;
öö 
return
úú 
false
úú 
;
úú 
}
ùù 	
public
®® 
static
®® 
float
®® 
SearchableSlider
®® ,
(
®®, -

GUIContent
®®- 7
label
®®8 =
,
®®= >
float
®®? D
value
®®E J
,
®®J K
float
®®L Q
min
®®R U
,
®®U V
float
®®W \
max
®®] `
,
®®` a
string
®®b h
searchContext
®®i v
)
®®v w
{
©© 	
if
™™ 
(
™™ 
!
™™ 
MatchSearchGroups
™™ "
(
™™" #
searchContext
™™# 0
,
™™0 1
label
™™2 7
.
™™7 8
text
™™8 <
)
™™< =
)
™™= >
return
´´ 
value
´´ 
;
´´ 
return
¨¨ 
EditorGUILayout
¨¨ "
.
¨¨" #
Slider
¨¨# )
(
¨¨) *
label
¨¨* /
,
¨¨/ 0
value
¨¨1 6
,
¨¨6 7
min
¨¨8 ;
,
¨¨; <
max
¨¨= @
)
¨¨@ A
;
¨¨A B
}
≠≠ 	
public
∏∏ 
static
∏∏ 
float
∏∏ 
SearchableSlider
∏∏ ,
(
∏∏, -
string
∏∏- 3
label
∏∏4 9
,
∏∏9 :
float
∏∏; @
value
∏∏A F
,
∏∏F G
float
∏∏H M
min
∏∏N Q
,
∏∏Q R
float
∏∏S X
max
∏∏Y \
,
∏∏\ ]
string
∏∏^ d
searchContext
∏∏e r
)
∏∏r s
{
ππ 	
if
∫∫ 
(
∫∫ 
!
∫∫ 
MatchSearchGroups
∫∫ "
(
∫∫" #
searchContext
∫∫# 0
,
∫∫0 1
label
∫∫2 7
)
∫∫7 8
)
∫∫8 9
return
ªª 
value
ªª 
;
ªª 
return
ºº 
EditorGUILayout
ºº "
.
ºº" #
Slider
ºº# )
(
ºº) *
label
ºº* /
,
ºº/ 0
value
ºº1 6
,
ºº6 7
min
ºº8 ;
,
ºº; <
max
ºº= @
)
ºº@ A
;
ººA B
}
ΩΩ 	
public
∆∆ 
static
∆∆ 
float
∆∆ "
SearchableFloatField
∆∆ 0
(
∆∆0 1

GUIContent
∆∆1 ;
label
∆∆< A
,
∆∆A B
float
∆∆C H
value
∆∆I N
,
∆∆N O
string
∆∆P V
searchContext
∆∆W d
)
∆∆d e
{
«« 	
if
»» 
(
»» 
!
»» 
MatchSearchGroups
»» "
(
»»" #
searchContext
»»# 0
,
»»0 1
label
»»2 7
.
»»7 8
text
»»8 <
)
»»< =
)
»»= >
return
…… 
value
…… 
;
…… 
return
   
EditorGUILayout
   "
.
  " #

FloatField
  # -
(
  - .
label
  . 3
,
  3 4
value
  5 :
)
  : ;
;
  ; <
}
ÀÀ 	
public
‘‘ 
static
‘‘ 
float
‘‘ "
SearchableFloatField
‘‘ 0
(
‘‘0 1
string
‘‘1 7
label
‘‘8 =
,
‘‘= >
float
‘‘? D
value
‘‘E J
,
‘‘J K
string
‘‘L R
searchContext
‘‘S `
)
‘‘` a
{
’’ 	
if
÷÷ 
(
÷÷ 
!
÷÷ 
MatchSearchGroups
÷÷ "
(
÷÷" #
searchContext
÷÷# 0
,
÷÷0 1
label
÷÷2 7
)
÷÷7 8
)
÷÷8 9
return
◊◊ 
value
◊◊ 
;
◊◊ 
return
ÿÿ 
EditorGUILayout
ÿÿ "
.
ÿÿ" #

FloatField
ÿÿ# -
(
ÿÿ- .
label
ÿÿ. 3
,
ÿÿ3 4
value
ÿÿ5 :
)
ÿÿ: ;
;
ÿÿ; <
}
ŸŸ 	
public
‚‚ 
static
‚‚ 
int
‚‚  
SearchableIntField
‚‚ ,
(
‚‚, -

GUIContent
‚‚- 7
label
‚‚8 =
,
‚‚= >
int
‚‚? B
value
‚‚C H
,
‚‚H I
string
‚‚J P
searchContext
‚‚Q ^
)
‚‚^ _
{
„„ 	
if
‰‰ 
(
‰‰ 
!
‰‰ 
MatchSearchGroups
‰‰ "
(
‰‰" #
searchContext
‰‰# 0
,
‰‰0 1
label
‰‰2 7
.
‰‰7 8
text
‰‰8 <
)
‰‰< =
)
‰‰= >
return
ÂÂ 
value
ÂÂ 
;
ÂÂ 
return
ÊÊ 
EditorGUILayout
ÊÊ "
.
ÊÊ" #
IntField
ÊÊ# +
(
ÊÊ+ ,
label
ÊÊ, 1
,
ÊÊ1 2
value
ÊÊ3 8
)
ÊÊ8 9
;
ÊÊ9 :
}
ÁÁ 	
public
 
static
 
int
  
SearchableIntField
 ,
(
, -
string
- 3
label
4 9
,
9 :
int
; >
value
? D
,
D E
string
F L
searchContext
M Z
)
Z [
{
ÒÒ 	
if
ÚÚ 
(
ÚÚ 
!
ÚÚ 
MatchSearchGroups
ÚÚ "
(
ÚÚ" #
searchContext
ÚÚ# 0
,
ÚÚ0 1
label
ÚÚ2 7
)
ÚÚ7 8
)
ÚÚ8 9
return
ÛÛ 
value
ÛÛ 
;
ÛÛ 
return
ÙÙ 
EditorGUILayout
ÙÙ "
.
ÙÙ" #
IntField
ÙÙ# +
(
ÙÙ+ ,
label
ÙÙ, 1
,
ÙÙ1 2
value
ÙÙ3 8
)
ÙÙ8 9
;
ÙÙ9 :
}
ıı 	
public
˛˛ 
static
˛˛ 
bool
˛˛ 
SearchableToggle
˛˛ +
(
˛˛+ ,

GUIContent
˛˛, 6
label
˛˛7 <
,
˛˛< =
bool
˛˛> B
value
˛˛C H
,
˛˛H I
string
˛˛J P
searchContext
˛˛Q ^
)
˛˛^ _
{
ˇˇ 	
if
ÄÄ 
(
ÄÄ 
!
ÄÄ 
MatchSearchGroups
ÄÄ "
(
ÄÄ" #
searchContext
ÄÄ# 0
,
ÄÄ0 1
label
ÄÄ2 7
.
ÄÄ7 8
text
ÄÄ8 <
)
ÄÄ< =
)
ÄÄ= >
return
ÅÅ 
value
ÅÅ 
;
ÅÅ 
return
ÇÇ 
EditorGUILayout
ÇÇ "
.
ÇÇ" #
Toggle
ÇÇ# )
(
ÇÇ) *
label
ÇÇ* /
,
ÇÇ/ 0
value
ÇÇ1 6
)
ÇÇ6 7
;
ÇÇ7 8
}
ÉÉ 	
public
åå 
static
åå 
bool
åå 
SearchableToggle
åå +
(
åå+ ,
string
åå, 2
label
åå3 8
,
åå8 9
bool
åå: >
value
åå? D
,
ååD E
string
ååF L
searchContext
ååM Z
)
ååZ [
{
çç 	
if
éé 
(
éé 
!
éé 
MatchSearchGroups
éé "
(
éé" #
searchContext
éé# 0
,
éé0 1
label
éé2 7
)
éé7 8
)
éé8 9
return
èè 
value
èè 
;
èè 
return
êê 
EditorGUILayout
êê "
.
êê" #
Toggle
êê# )
(
êê) *
label
êê* /
,
êê/ 0
value
êê1 6
)
êê6 7
;
êê7 8
}
ëë 	
public
öö 
static
öö 
string
öö !
SearchableTextField
öö 0
(
öö0 1

GUIContent
öö1 ;
label
öö< A
,
ööA B
string
ööC I
value
ööJ O
,
ööO P
string
ööQ W
searchContext
ööX e
)
ööe f
{
õõ 	
if
úú 
(
úú 
!
úú 
MatchSearchGroups
úú "
(
úú" #
searchContext
úú# 0
,
úú0 1
label
úú2 7
.
úú7 8
text
úú8 <
)
úú< =
)
úú= >
return
ùù 
value
ùù 
;
ùù 
return
ûû 
EditorGUILayout
ûû "
.
ûû" #
	TextField
ûû# ,
(
ûû, -
label
ûû- 2
,
ûû2 3
value
ûû4 9
)
ûû9 :
;
ûû: ;
}
üü 	
public
®® 
static
®® 
string
®® !
SearchableTextField
®® 0
(
®®0 1
string
®®1 7
label
®®8 =
,
®®= >
string
®®? E
value
®®F K
,
®®K L
string
®®M S
searchContext
®®T a
)
®®a b
{
©© 	
if
™™ 
(
™™ 
!
™™ 
MatchSearchGroups
™™ "
(
™™" #
searchContext
™™# 0
,
™™0 1
label
™™2 7
)
™™7 8
)
™™8 9
return
´´ 
value
´´ 
;
´´ 
return
¨¨ 
EditorGUILayout
¨¨ "
.
¨¨" #
	TextField
¨¨# ,
(
¨¨, -
label
¨¨- 2
,
¨¨2 3
value
¨¨4 9
)
¨¨9 :
;
¨¨: ;
}
≠≠ 	
public
∂∂ 
static
∂∂ 
Color
∂∂ "
SearchableColorField
∂∂ 0
(
∂∂0 1

GUIContent
∂∂1 ;
label
∂∂< A
,
∂∂A B
Color
∂∂C H
value
∂∂I N
,
∂∂N O
string
∂∂P V
searchContext
∂∂W d
)
∂∂d e
{
∑∑ 	
if
∏∏ 
(
∏∏ 
!
∏∏ 
MatchSearchGroups
∏∏ "
(
∏∏" #
searchContext
∏∏# 0
,
∏∏0 1
label
∏∏2 7
.
∏∏7 8
text
∏∏8 <
)
∏∏< =
)
∏∏= >
return
ππ 
value
ππ 
;
ππ 
return
∫∫ 
EditorGUILayout
∫∫ "
.
∫∫" #

ColorField
∫∫# -
(
∫∫- .
label
∫∫. 3
,
∫∫3 4
value
∫∫5 :
)
∫∫: ;
;
∫∫; <
}
ªª 	
public
ƒƒ 
static
ƒƒ 
Color
ƒƒ "
SearchableColorField
ƒƒ 0
(
ƒƒ0 1
string
ƒƒ1 7
label
ƒƒ8 =
,
ƒƒ= >
Color
ƒƒ? D
value
ƒƒE J
,
ƒƒJ K
string
ƒƒL R
searchContext
ƒƒS `
)
ƒƒ` a
{
≈≈ 	
if
∆∆ 
(
∆∆ 
!
∆∆ 
MatchSearchGroups
∆∆ "
(
∆∆" #
searchContext
∆∆# 0
,
∆∆0 1
label
∆∆2 7
)
∆∆7 8
)
∆∆8 9
return
«« 
value
«« 
;
«« 
return
»» 
EditorGUILayout
»» "
.
»»" #

ColorField
»»# -
(
»»- .
label
»». 3
,
»»3 4
value
»»5 :
)
»»: ;
;
»»; <
}
…… 	
public
‘‘ 
static
‘‘ 
float
‘‘ 
SettingsSlider
‘‘ *
(
‘‘* +

GUIContent
‘‘+ 5
label
‘‘6 ;
,
‘‘; <
UserSetting
‘‘= H
<
‘‘H I
float
‘‘I N
>
‘‘N O
value
‘‘P U
,
‘‘U V
float
‘‘W \
min
‘‘] `
,
‘‘` a
float
‘‘b g
max
‘‘h k
,
‘‘k l
string
‘‘m s
searchContext‘‘t Å
)‘‘Å Ç
{
’’ 	
if
÷÷ 
(
÷÷ 
!
÷÷ 
DebugModeFilter
÷÷  
(
÷÷  !
value
÷÷! &
)
÷÷& '
||
÷÷( *
!
÷÷+ ,
MatchSearchGroups
÷÷, =
(
÷÷= >
searchContext
÷÷> K
,
÷÷K L
label
÷÷M R
.
÷÷R S
text
÷÷S W
)
÷÷W X
)
÷÷X Y
return
◊◊ 
value
◊◊ 
;
◊◊ 
var
ÿÿ 
res
ÿÿ 
=
ÿÿ 
EditorGUILayout
ÿÿ %
.
ÿÿ% &
Slider
ÿÿ& ,
(
ÿÿ, -
label
ÿÿ- 2
,
ÿÿ2 3
value
ÿÿ4 9
,
ÿÿ9 :
min
ÿÿ; >
,
ÿÿ> ?
max
ÿÿ@ C
)
ÿÿC D
;
ÿÿD E+
DoResetContextMenuForLastRect
ŸŸ )
(
ŸŸ) *
value
ŸŸ* /
)
ŸŸ/ 0
;
ŸŸ0 1
return
⁄⁄ 
res
⁄⁄ 
;
⁄⁄ 
}
€€ 	
public
ÊÊ 
static
ÊÊ 
float
ÊÊ 
SettingsSlider
ÊÊ *
(
ÊÊ* +
string
ÊÊ+ 1
label
ÊÊ2 7
,
ÊÊ7 8
UserSetting
ÊÊ9 D
<
ÊÊD E
float
ÊÊE J
>
ÊÊJ K
value
ÊÊL Q
,
ÊÊQ R
float
ÊÊS X
min
ÊÊY \
,
ÊÊ\ ]
float
ÊÊ^ c
max
ÊÊd g
,
ÊÊg h
string
ÊÊi o
searchContext
ÊÊp }
)
ÊÊ} ~
{
ÁÁ 	
if
ËË 
(
ËË 
!
ËË 
DebugModeFilter
ËË  
(
ËË  !
value
ËË! &
)
ËË& '
||
ËË( *
!
ËË+ ,
MatchSearchGroups
ËË, =
(
ËË= >
searchContext
ËË> K
,
ËËK L
label
ËËM R
)
ËËR S
)
ËËS T
return
ÈÈ 
value
ÈÈ 
;
ÈÈ 
var
ÍÍ 
res
ÍÍ 
=
ÍÍ 
EditorGUILayout
ÍÍ %
.
ÍÍ% &
Slider
ÍÍ& ,
(
ÍÍ, -
label
ÍÍ- 2
,
ÍÍ2 3
value
ÍÍ4 9
,
ÍÍ9 :
min
ÍÍ; >
,
ÍÍ> ?
max
ÍÍ@ C
)
ÍÍC D
;
ÍÍD E+
DoResetContextMenuForLastRect
ÎÎ )
(
ÎÎ) *
value
ÎÎ* /
)
ÎÎ/ 0
;
ÎÎ0 1
return
ÏÏ 
res
ÏÏ 
;
ÏÏ 
}
ÌÌ 	
public
¯¯ 
static
¯¯ 
int
¯¯ 
SettingsSlider
¯¯ (
(
¯¯( )

GUIContent
¯¯) 3
label
¯¯4 9
,
¯¯9 :
UserSetting
¯¯; F
<
¯¯F G
int
¯¯G J
>
¯¯J K
value
¯¯L Q
,
¯¯Q R
int
¯¯S V
min
¯¯W Z
,
¯¯Z [
int
¯¯\ _
max
¯¯` c
,
¯¯c d
string
¯¯e k
searchContext
¯¯l y
)
¯¯y z
{
˘˘ 	
if
˙˙ 
(
˙˙ 
!
˙˙ 
DebugModeFilter
˙˙  
(
˙˙  !
value
˙˙! &
)
˙˙& '
||
˙˙( *
!
˙˙+ ,
MatchSearchGroups
˙˙, =
(
˙˙= >
searchContext
˙˙> K
,
˙˙K L
label
˙˙M R
.
˙˙R S
text
˙˙S W
)
˙˙W X
)
˙˙X Y
return
˚˚ 
value
˚˚ 
;
˚˚ 
var
¸¸ 
res
¸¸ 
=
¸¸ 
EditorGUILayout
¸¸ %
.
¸¸% &
	IntSlider
¸¸& /
(
¸¸/ 0
label
¸¸0 5
,
¸¸5 6
value
¸¸7 <
,
¸¸< =
min
¸¸> A
,
¸¸A B
max
¸¸C F
)
¸¸F G
;
¸¸G H+
DoResetContextMenuForLastRect
˝˝ )
(
˝˝) *
value
˝˝* /
)
˝˝/ 0
;
˝˝0 1
return
˛˛ 
res
˛˛ 
;
˛˛ 
}
ˇˇ 	
public
ää 
static
ää 
int
ää 
SettingsSlider
ää (
(
ää( )
string
ää) /
label
ää0 5
,
ää5 6
UserSetting
ää7 B
<
ääB C
int
ääC F
>
ääF G
value
ääH M
,
ääM N
int
ääO R
min
ääS V
,
ääV W
int
ääX [
max
ää\ _
,
ää_ `
string
ääa g
searchContext
ääh u
)
ääu v
{
ãã 	
if
åå 
(
åå 
!
åå 
DebugModeFilter
åå  
(
åå  !
value
åå! &
)
åå& '
||
åå( *
!
åå+ ,
MatchSearchGroups
åå, =
(
åå= >
searchContext
åå> K
,
ååK L
label
ååM R
)
ååR S
)
ååS T
return
çç 
value
çç 
;
çç 
var
éé 
res
éé 
=
éé 
EditorGUILayout
éé %
.
éé% &
	IntSlider
éé& /
(
éé/ 0
label
éé0 5
,
éé5 6
value
éé7 <
,
éé< =
min
éé> A
,
ééA B
max
ééC F
)
ééF G
;
ééG H+
DoResetContextMenuForLastRect
èè )
(
èè) *
value
èè* /
)
èè/ 0
;
èè0 1
return
êê 
res
êê 
;
êê 
}
ëë 	
public
öö 
static
öö 
float
öö  
SettingsFloatField
öö .
(
öö. /

GUIContent
öö/ 9
label
öö: ?
,
öö? @
UserSetting
ööA L
<
ööL M
float
ööM R
>
ööR S
value
ööT Y
,
ööY Z
string
öö[ a
searchContext
ööb o
)
ööo p
{
õõ 	
if
úú 
(
úú 
!
úú 
DebugModeFilter
úú  
(
úú  !
value
úú! &
)
úú& '
||
úú( *
!
úú+ ,
MatchSearchGroups
úú, =
(
úú= >
searchContext
úú> K
,
úúK L
label
úúM R
.
úúR S
text
úúS W
)
úúW X
)
úúX Y
return
ùù 
value
ùù 
;
ùù 
var
ûû 
res
ûû 
=
ûû 
EditorGUILayout
ûû %
.
ûû% &

FloatField
ûû& 0
(
ûû0 1
label
ûû1 6
,
ûû6 7
value
ûû8 =
)
ûû= >
;
ûû> ?+
DoResetContextMenuForLastRect
üü )
(
üü) *
value
üü* /
)
üü/ 0
;
üü0 1
return
†† 
res
†† 
;
†† 
}
°° 	
public
™™ 
static
™™ 
float
™™  
SettingsFloatField
™™ .
(
™™. /
string
™™/ 5
label
™™6 ;
,
™™; <
UserSetting
™™= H
<
™™H I
float
™™I N
>
™™N O
value
™™P U
,
™™U V
string
™™W ]
searchContext
™™^ k
)
™™k l
{
´´ 	
if
¨¨ 
(
¨¨ 
!
¨¨ 
DebugModeFilter
¨¨  
(
¨¨  !
value
¨¨! &
)
¨¨& '
||
¨¨( *
!
¨¨+ ,
MatchSearchGroups
¨¨, =
(
¨¨= >
searchContext
¨¨> K
,
¨¨K L
label
¨¨M R
)
¨¨R S
)
¨¨S T
return
≠≠ 
value
≠≠ 
;
≠≠ 
var
ÆÆ 
res
ÆÆ 
=
ÆÆ 
EditorGUILayout
ÆÆ %
.
ÆÆ% &

FloatField
ÆÆ& 0
(
ÆÆ0 1
label
ÆÆ1 6
,
ÆÆ6 7
value
ÆÆ8 =
)
ÆÆ= >
;
ÆÆ> ?+
DoResetContextMenuForLastRect
ØØ )
(
ØØ) *
value
ØØ* /
)
ØØ/ 0
;
ØØ0 1
return
∞∞ 
res
∞∞ 
;
∞∞ 
}
±± 	
public
∫∫ 
static
∫∫ 
int
∫∫ 
SettingsIntField
∫∫ *
(
∫∫* +

GUIContent
∫∫+ 5
label
∫∫6 ;
,
∫∫; <
UserSetting
∫∫= H
<
∫∫H I
int
∫∫I L
>
∫∫L M
value
∫∫N S
,
∫∫S T
string
∫∫U [
searchContext
∫∫\ i
)
∫∫i j
{
ªª 	
if
ºº 
(
ºº 
!
ºº 
DebugModeFilter
ºº  
(
ºº  !
value
ºº! &
)
ºº& '
||
ºº( *
!
ºº+ ,
MatchSearchGroups
ºº, =
(
ºº= >
searchContext
ºº> K
,
ººK L
label
ººM R
.
ººR S
text
ººS W
)
ººW X
)
ººX Y
return
ΩΩ 
value
ΩΩ 
;
ΩΩ 
var
ææ 
res
ææ 
=
ææ 
EditorGUILayout
ææ %
.
ææ% &
IntField
ææ& .
(
ææ. /
label
ææ/ 4
,
ææ4 5
value
ææ6 ;
)
ææ; <
;
ææ< =+
DoResetContextMenuForLastRect
øø )
(
øø) *
value
øø* /
)
øø/ 0
;
øø0 1
return
¿¿ 
res
¿¿ 
;
¿¿ 
}
¡¡ 	
public
   
static
   
int
   
SettingsIntField
   *
(
  * +
string
  + 1
label
  2 7
,
  7 8
UserSetting
  9 D
<
  D E
int
  E H
>
  H I
value
  J O
,
  O P
string
  Q W
searchContext
  X e
)
  e f
{
ÀÀ 	
if
ÃÃ 
(
ÃÃ 
!
ÃÃ 
DebugModeFilter
ÃÃ  
(
ÃÃ  !
value
ÃÃ! &
)
ÃÃ& '
||
ÃÃ( *
!
ÃÃ+ ,
MatchSearchGroups
ÃÃ, =
(
ÃÃ= >
searchContext
ÃÃ> K
,
ÃÃK L
label
ÃÃM R
)
ÃÃR S
)
ÃÃS T
return
ÕÕ 
value
ÕÕ 
;
ÕÕ 
var
ŒŒ 
res
ŒŒ 
=
ŒŒ 
EditorGUILayout
ŒŒ %
.
ŒŒ% &
IntField
ŒŒ& .
(
ŒŒ. /
label
ŒŒ/ 4
,
ŒŒ4 5
value
ŒŒ6 ;
)
ŒŒ; <
;
ŒŒ< =+
DoResetContextMenuForLastRect
œœ )
(
œœ) *
value
œœ* /
)
œœ/ 0
;
œœ0 1
return
–– 
res
–– 
;
–– 
}
—— 	
public
⁄⁄ 
static
⁄⁄ 
bool
⁄⁄ 
SettingsToggle
⁄⁄ )
(
⁄⁄) *

GUIContent
⁄⁄* 4
label
⁄⁄5 :
,
⁄⁄: ;
UserSetting
⁄⁄< G
<
⁄⁄G H
bool
⁄⁄H L
>
⁄⁄L M
value
⁄⁄N S
,
⁄⁄S T
string
⁄⁄U [
searchContext
⁄⁄\ i
)
⁄⁄i j
{
€€ 	
if
‹‹ 
(
‹‹ 
!
‹‹ 
DebugModeFilter
‹‹  
(
‹‹  !
value
‹‹! &
)
‹‹& '
||
‹‹( *
!
‹‹+ ,
MatchSearchGroups
‹‹, =
(
‹‹= >
searchContext
‹‹> K
,
‹‹K L
label
‹‹M R
.
‹‹R S
text
‹‹S W
)
‹‹W X
)
‹‹X Y
return
›› 
value
›› 
;
›› 
var
ﬁﬁ 
res
ﬁﬁ 
=
ﬁﬁ 
EditorGUILayout
ﬁﬁ %
.
ﬁﬁ% &
Toggle
ﬁﬁ& ,
(
ﬁﬁ, -
label
ﬁﬁ- 2
,
ﬁﬁ2 3
value
ﬁﬁ4 9
)
ﬁﬁ9 :
;
ﬁﬁ: ;+
DoResetContextMenuForLastRect
ﬂﬂ )
(
ﬂﬂ) *
value
ﬂﬂ* /
)
ﬂﬂ/ 0
;
ﬂﬂ0 1
return
‡‡ 
res
‡‡ 
;
‡‡ 
}
·· 	
public
ÍÍ 
static
ÍÍ 
bool
ÍÍ 
SettingsToggle
ÍÍ )
(
ÍÍ) *
string
ÍÍ* 0
label
ÍÍ1 6
,
ÍÍ6 7
UserSetting
ÍÍ8 C
<
ÍÍC D
bool
ÍÍD H
>
ÍÍH I
value
ÍÍJ O
,
ÍÍO P
string
ÍÍQ W
searchContext
ÍÍX e
)
ÍÍe f
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ 
!
ÏÏ 
DebugModeFilter
ÏÏ  
(
ÏÏ  !
value
ÏÏ! &
)
ÏÏ& '
||
ÏÏ( *
!
ÏÏ+ ,
MatchSearchGroups
ÏÏ, =
(
ÏÏ= >
searchContext
ÏÏ> K
,
ÏÏK L
label
ÏÏM R
)
ÏÏR S
)
ÏÏS T
return
ÌÌ 
value
ÌÌ 
;
ÌÌ 
var
ÓÓ 
res
ÓÓ 
=
ÓÓ 
EditorGUILayout
ÓÓ %
.
ÓÓ% &
Toggle
ÓÓ& ,
(
ÓÓ, -
label
ÓÓ- 2
,
ÓÓ2 3
value
ÓÓ4 9
)
ÓÓ9 :
;
ÓÓ: ;+
DoResetContextMenuForLastRect
ÔÔ )
(
ÔÔ) *
value
ÔÔ* /
)
ÔÔ/ 0
;
ÔÔ0 1
return
 
res
 
;
 
}
ÒÒ 	
public
˙˙ 
static
˙˙ 
string
˙˙ 
SettingsTextField
˙˙ .
(
˙˙. /

GUIContent
˙˙/ 9
label
˙˙: ?
,
˙˙? @
UserSetting
˙˙A L
<
˙˙L M
string
˙˙M S
>
˙˙S T
value
˙˙U Z
,
˙˙Z [
string
˙˙\ b
searchContext
˙˙c p
)
˙˙p q
{
˚˚ 	
if
¸¸ 
(
¸¸ 
!
¸¸ 
DebugModeFilter
¸¸  
(
¸¸  !
value
¸¸! &
)
¸¸& '
||
¸¸( *
!
¸¸+ ,
MatchSearchGroups
¸¸, =
(
¸¸= >
searchContext
¸¸> K
,
¸¸K L
label
¸¸M R
.
¸¸R S
text
¸¸S W
)
¸¸W X
)
¸¸X Y
return
˝˝ 
value
˝˝ 
;
˝˝ 
var
˛˛ 
res
˛˛ 
=
˛˛ 
EditorGUILayout
˛˛ %
.
˛˛% &
	TextField
˛˛& /
(
˛˛/ 0
label
˛˛0 5
,
˛˛5 6
value
˛˛7 <
)
˛˛< =
;
˛˛= >+
DoResetContextMenuForLastRect
ˇˇ )
(
ˇˇ) *
value
ˇˇ* /
)
ˇˇ/ 0
;
ˇˇ0 1
return
ÄÄ 
res
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
public
ää 
static
ää 
string
ää 
SettingsTextField
ää .
(
ää. /
string
ää/ 5
label
ää6 ;
,
ää; <
UserSetting
ää= H
<
ääH I
string
ääI O
>
ääO P
value
ääQ V
,
ääV W
string
ääX ^
searchContext
ää_ l
)
ääl m
{
ãã 	
if
åå 
(
åå 
!
åå 
DebugModeFilter
åå  
(
åå  !
value
åå! &
)
åå& '
||
åå( *
!
åå+ ,
MatchSearchGroups
åå, =
(
åå= >
searchContext
åå> K
,
ååK L
label
ååM R
)
ååR S
)
ååS T
return
çç 
value
çç 
;
çç 
var
éé 
res
éé 
=
éé 
EditorGUILayout
éé %
.
éé% &
	TextField
éé& /
(
éé/ 0
label
éé0 5
,
éé5 6
value
éé7 <
)
éé< =
;
éé= >+
DoResetContextMenuForLastRect
èè )
(
èè) *
value
èè* /
)
èè/ 0
;
èè0 1
return
êê 
res
êê 
;
êê 
}
ëë 	
public
öö 
static
öö 
Color
öö  
SettingsColorField
öö .
(
öö. /

GUIContent
öö/ 9
label
öö: ?
,
öö? @
UserSetting
ööA L
<
ööL M
Color
ööM R
>
ööR S
value
ööT Y
,
ööY Z
string
öö[ a
searchContext
ööb o
)
ööo p
{
õõ 	
if
úú 
(
úú 
!
úú 
DebugModeFilter
úú  
(
úú  !
value
úú! &
)
úú& '
||
úú( *
!
úú+ ,
MatchSearchGroups
úú, =
(
úú= >
searchContext
úú> K
,
úúK L
label
úúM R
.
úúR S
text
úúS W
)
úúW X
)
úúX Y
return
ùù 
value
ùù 
;
ùù 
var
ûû 
res
ûû 
=
ûû 
EditorGUILayout
ûû %
.
ûû% &

ColorField
ûû& 0
(
ûû0 1
label
ûû1 6
,
ûû6 7
value
ûû8 =
)
ûû= >
;
ûû> ?+
DoResetContextMenuForLastRect
üü )
(
üü) *
value
üü* /
)
üü/ 0
;
üü0 1
return
†† 
res
†† 
;
†† 
}
°° 	
public
™™ 
static
™™ 
Color
™™  
SettingsColorField
™™ .
(
™™. /
string
™™/ 5
label
™™6 ;
,
™™; <
UserSetting
™™= H
<
™™H I
Color
™™I N
>
™™N O
value
™™P U
,
™™U V
string
™™W ]
searchContext
™™^ k
)
™™k l
{
´´ 	
if
¨¨ 
(
¨¨ 
!
¨¨ 
DebugModeFilter
¨¨  
(
¨¨  !
value
¨¨! &
)
¨¨& '
||
¨¨( *
!
¨¨+ ,
MatchSearchGroups
¨¨, =
(
¨¨= >
searchContext
¨¨> K
,
¨¨K L
label
¨¨M R
)
¨¨R S
)
¨¨S T
return
≠≠ 
value
≠≠ 
;
≠≠ 
var
ÆÆ 
res
ÆÆ 
=
ÆÆ 
EditorGUILayout
ÆÆ %
.
ÆÆ% &

ColorField
ÆÆ& 0
(
ÆÆ0 1
label
ÆÆ1 6
,
ÆÆ6 7
value
ÆÆ8 =
)
ÆÆ= >
;
ÆÆ> ?+
DoResetContextMenuForLastRect
ØØ )
(
ØØ) *
value
ØØ* /
)
ØØ/ 0
;
ØØ0 1
return
∞∞ 
res
∞∞ 
;
∞∞ 
}
±± 	
public
∑∑ 
static
∑∑ 
void
∑∑ +
DoResetContextMenuForLastRect
∑∑ 8
(
∑∑8 9
IUserSetting
∑∑9 E
setting
∑∑F M
)
∑∑M N
{
∏∏ 	 
DoResetContextMenu
ππ 
(
ππ 
GUILayoutUtility
ππ /
.
ππ/ 0
GetLastRect
ππ0 ;
(
ππ; <
)
ππ< =
,
ππ= >
setting
ππ? F
)
ππF G
;
ππG H
}
∫∫ 	
static
ºº 
void
ºº  
DoResetContextMenu
ºº &
(
ºº& '
Rect
ºº' +
rect
ºº, 0
,
ºº0 1
IUserSetting
ºº2 >
pref
ºº? C
)
ººC D
{
ΩΩ 	
var
ææ 
evt
ææ 
=
ææ 
Event
ææ 
.
ææ 
current
ææ #
;
ææ# $
if
¿¿ 
(
¿¿ 
evt
¿¿ 
.
¿¿ 
type
¿¿ 
==
¿¿ 
	EventType
¿¿ %
.
¿¿% &
ContextClick
¿¿& 2
&&
¿¿3 5
rect
¿¿6 :
.
¿¿: ;
Contains
¿¿; C
(
¿¿C D
evt
¿¿D G
.
¿¿G H
mousePosition
¿¿H U
)
¿¿U V
)
¿¿V W
{
¡¡ 
var
¬¬ 
menu
¬¬ 
=
¬¬ 
new
¬¬ 
GenericMenu
¬¬ *
(
¬¬* +
)
¬¬+ ,
;
¬¬, -
menu
√√ 
.
√√ 
AddItem
√√ 
(
√√ 
new
√√  

GUIContent
√√! +
(
√√+ ,
$str
√√, 5
+
√√6 7
pref
√√8 <
.
√√< =
scope
√√= B
+
√√C D
$str
√√E I
+
√√J K
pref
√√L P
.
√√P Q
key
√√Q T
)
√√T U
,
√√U V
false
√√W \
,
√√\ ]
(
√√^ _
)
√√_ `
=>
√√a c
{
ƒƒ 
pref
≈≈ 
.
≈≈ 
Reset
≈≈ "
(
≈≈" #
true
≈≈# '
)
≈≈' (
;
≈≈( )
}
∆∆ 
)
∆∆ 
;
∆∆ 
menu
«« 
.
«« 
ShowAsContext
«« "
(
««" #
)
««# $
;
««$ %
}
»» 
}
…… 	
}
   
}ÀÀ 
ÀL
iD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\GunEventHandler.cs
public 
class 
GunEventHandler 
: 
MonoBehaviour ,
,, -

IGunEvents. 8
{9 :
	protected 
MasterInput 
inputController )
;) *
private 
	IGunState 
state 
; 
[ 
SerializeField 
] 
private 

UnityEvent 
_OnFire 
=  
new! $

UnityEvent% /
(/ 0
)0 1
,1 2
_OnFireStart3 ?
=@ A
newB E

UnityEventF P
(P Q
)Q R
,R S

_OnFireEndT ^
=_ `
newa d

UnityEvente o
(o p
)p q
;q r
public 


UnityEvent 
OnFire 
{ 
get "
=># %
_OnFire& -
;- .
private/ 6
set7 :
=>; =
_OnFire> E
=F G
valueH M
;M N
}O P
public 


UnityEvent 
OnFireStart !
{" #
get$ '
=>( *
_OnFireStart+ 7
;7 8
private9 @
setA D
=>E G
_OnFireStartH T
=U V
valueW \
;\ ]
}^ _
public 


UnityEvent 
	OnFireEnd 
{  !
get" %
=>& (

_OnFireEnd) 3
;3 4
private5 <
set= @
=>A C

_OnFireEndD N
=O P
valueQ V
;V W
}X Y
[ 
SerializeField 
] 
private 

UnityEvent 
	_OnReload  
=! "
new# &

UnityEvent' 1
(1 2
)2 3
,3 4
_OnReloadStart5 C
=D E
newF I

UnityEventJ T
(T U
)U V
,V W
_OnReloadEndX d
=e f
newg j

UnityEventk u
(u v
)v w
;w x
public 


UnityEvent 
OnReload 
{  
get! $
=>% '
	_OnReload( 1
;1 2
private3 :
set; >
=>? A
	_OnReloadB K
=L M
valueN S
;S T
}U V
public 


UnityEvent 
OnReloadStart #
{$ %
get& )
=>* ,
_OnReloadStart- ;
;; <
private= D
setE H
=>I K
_OnReloadStartL Z
=[ \
value] b
;b c
}d e
public   


UnityEvent   
OnReloadEnd   !
{  " #
get  $ '
=>  ( *
_OnReloadEnd  + 7
;  7 8
private  9 @
set  A D
=>  E G
_OnReloadEnd  H T
=  U V
value  W \
;  \ ]
}  ^ _
["" 
SerializeField"" 
]"" 
private## 

UnityEvent## 
_OnAim## 
=## 
new##  #

UnityEvent##$ .
(##. /
)##/ 0
,##0 1
_OnAimStart##2 =
=##> ?
new##@ C

UnityEvent##D N
(##N O
)##O P
,##P Q
	_OnAimEnd##R [
=##\ ]
new##^ a

UnityEvent##b l
(##l m
)##m n
;##n o
public$$ 


UnityEvent$$ 
OnAim$$ 
{$$ 
get$$ !
=>$$" $
_OnAim$$% +
;$$+ ,
private$$- 4
set$$5 8
=>$$9 ;
_OnAim$$< B
=$$C D
value$$E J
;$$J K
}$$L M
public%% 


UnityEvent%% 

OnAimStart%%  
{%%! "
get%%# &
=>%%' )
_OnAimStart%%* 5
;%%5 6
private%%7 >
set%%? B
=>%%C E
_OnAimStart%%F Q
=%%R S
value%%T Y
;%%Y Z
}%%[ \
public&& 


UnityEvent&& 
OnAimEnd&& 
{&&  
get&&! $
=>&&% '
	_OnAimEnd&&( 1
;&&1 2
private&&3 :
set&&; >
=>&&? A
	_OnAimEnd&&B K
=&&L M
value&&N S
;&&S T
}&&U V
public(( 

void(( 
SetStateController(( "
(((" #
	IGunState((# ,
state((- 2
)((2 3
{((4 5
this)) 
.)) 
state)) 
=)) 
state)) 
;)) 
}** 
public,, 

void,, 
Awake,, 
(,, 
),, 
{,, 
inputController-- 
=-- 
new-- 
MasterInput-- )
(--) *
)--* +
;--+ ,
state.. 
??=.. 
GunStateDummy.. 
...  
Instance..  (
;..( )
}// 
public11 

void11 
OnEnable11 
(11 
)11 
{11 
inputController22 
.22 
Enable22 
(22 
)22  
;22  !
AddInput33 
(33 
)33 
;33 
}44 
public66 

void66 
	OnDisable66 
(66 
)66 
{66 
inputController77 
.77 
Disable77 
(77  
)77  !
;77! "
RemoveInput88 
(88 
)88 
;88 
}99 
public;; 

void;; 
Update;; 
(;; 
);; 
{;; 
if<< 

(<< 
state<< 
.<< 
IsFiring<< 
&&<< 
state<< #
.<<# $
CanFire<<$ +
(<<+ ,
)<<, -
)<<- .
OnFire== 
?== 
.== 
Invoke== 
(== 
)== 
;== 
ifBB 

(BB 
stateBB 
.BB 
IsAimingBB 
&&BB 
stateBB #
.BB# $
CanAimBB$ *
(BB* +
)BB+ ,
)BB, -
OnAimCC 
?CC 
.CC 
InvokeCC 
(CC 
)CC 
;CC 
}DD 
	protectedFF 
voidFF 
AddInputFF 
(FF 
)FF 
{FF 
inputControllerGG 
.GG 
PlayerGG 
.GG 
FireGG #
.GG# $
	performedGG$ -
+=GG. 0
_GG1 2
=>GG3 5
OnFireStartGG6 A
?GGA B
.GGB C
InvokeGGC I
(GGI J
)GGJ K
;GGK L
inputControllerHH 
.HH 
PlayerHH 
.HH 
FireHH #
.HH# $
canceledHH$ ,
+=HH- /
_HH0 1
=>HH2 4
	OnFireEndHH5 >
?HH> ?
.HH? @
InvokeHH@ F
(HHF G
)HHG H
;HHH I
inputControllerJJ 
.JJ 
PlayerJJ 
.JJ 
ReloadJJ %
.JJ% &
	performedJJ& /
+=JJ0 2
_JJ3 4
=>JJ5 7
OnReloadStartJJ8 E
?JJE F
.JJF G
InvokeJJG M
(JJM N
)JJN O
;JJO P
inputControllerMM 
.MM 
PlayerMM 
.MM 
AimMM "
.MM" #
	performedMM# ,
+=MM- /
_MM0 1
=>MM2 4

OnAimStartMM5 ?
?MM? @
.MM@ A
InvokeMMA G
(MMG H
)MMH I
;MMI J
inputControllerNN 
.NN 
PlayerNN 
.NN 
AimNN "
.NN" #
canceledNN# +
+=NN, .
_NN/ 0
=>NN1 3
OnAimEndNN4 <
?NN< =
.NN= >
InvokeNN> D
(NND E
)NNE F
;NNF G
}OO 
	protectedQQ 
voidQQ 
RemoveInputQQ 
(QQ 
)QQ  
{QQ! "
inputControllerRR 
.RR 
PlayerRR 
.RR 
FireRR #
.RR# $
	performedRR$ -
-=RR. 0
_RR1 2
=>RR3 5
OnFireStartRR6 A
?RRA B
.RRB C
InvokeRRC I
(RRI J
)RRJ K
;RRK L
inputControllerSS 
.SS 
PlayerSS 
.SS 
FireSS #
.SS# $
canceledSS$ ,
-=SS- /
_SS0 1
=>SS2 4
	OnFireEndSS5 >
?SS> ?
.SS? @
InvokeSS@ F
(SSF G
)SSG H
;SSH I
inputControllerUU 
.UU 
PlayerUU 
.UU 
ReloadUU %
.UU% &
	performedUU& /
-=UU0 2
_UU3 4
=>UU5 7
OnReloadStartUU8 E
?UUE F
.UUF G
InvokeUUG M
(UUM N
)UUN O
;UUO P
inputControllerXX 
.XX 
PlayerXX 
.XX 
AimXX "
.XX" #
	performedXX# ,
-=XX- /
_XX0 1
=>XX2 4

OnAimStartXX5 ?
?XX? @
.XX@ A
InvokeXXA G
(XXG H
)XXH I
;XXI J
inputControllerYY 
.YY 
PlayerYY 
.YY 
AimYY "
.YY" #
canceledYY# +
-=YY, .
_YY/ 0
=>YY1 3
OnAimEndYY4 <
?YY< =
.YY= >
InvokeYY> D
(YYD E
)YYE F
;YYF G
}ZZ 
}[[ ÿ2
aD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\GunData.cs
[ 
CreateAssetMenu 
( 
fileName 
= 
$str *
,* +
menuName, 4
=5 6
$str7 S
)S T
]T U
public 
class 
GunData 
: 
ScriptableObject '
{( )
public 

string 
gunName 
; 
[ 
SerializeField 
] 
public 
GunProperties )

properties* 4
;4 5
[ 
SerializeField 
] 
public 
GunViewModel (
	viewModel) 2
;2 3
[ 
SerializeField 
] 
public 
	GunEffect %
effects& -
;- .
} 
[ 
Serializable 
] 
public 
class 
GunProperties 
{ 
[ 
Tooltip 
( 
$str )
)) *
]* +
public 

GunType 
type 
= 
GunType !
.! "
Raycast" )
;) *
[ 
Tooltip 
( 
$str /
)/ 0
]0 1
public 

float 
damage 
= 
$num 
; 
[ 
Tooltip 
( 
$str C
)C D
]D E
public 

float 
fireRate 
= 
$num !
;! "
[ 
Tooltip 
( 
$str 5
)5 6
]6 7
public 

int 
maxAmmo 
= 
$num 
; 
[ 
Tooltip 
( 
$str ?
)? @
]@ A
public 

float 

reloadTime 
= 
$num  
;  !
[   
Tooltip   
(   
$str   4
)  4 5
]  5 6
public!! 

float!! 
maxDistance!! 
=!! 
$num!! "
;!!" #
["" 
Tooltip"" 
("" 
$str"" /
)""/ 0
]""0 1
public## 

float## 

inaccuracy## 
=## 
$num## #
;### $
[$$ 
Tooltip$$ 
($$ 
$str$$ h
)$$h i
]$$i j
public%% 

int%% 
ammoPerShot%% 
=%% 
$num%% 
;%% 
[&& 
Tooltip&& 
(&& 
$str	&& 
)
&& 
]
&& 
public'' 

float'' 
bulletsPerAmmo'' 
=''  !
$num''" #
;''# $
[(( 
Tooltip(( 
((( 
$str(( 7
)((7 8
]((8 9
public)) 

int)) 
shotsPerTrigger)) 
=))  
$num))! "
;))" #
[** 
Tooltip** 
(** 
$str** F
)**F G
]**G H
public++ 

float++ 
shotRate++ 
=++ 
$num++ 
;++ 
[,, 
Tooltip,, 
(,, 
$str,, V
),,V W
],,W X
public-- 

float-- 
bulletSpeed-- 
=-- 
$num-- !
;--! "
[.. 
Tooltip.. 
(.. 
$str.. O
)..O P
]..P Q
public// 


BulletBase// 
bullet// 
;// 
public11 

enum11 
GunType11 
{11 
Raycast22 
=22 
$num22 
,22 

Projectile33 
=33 
$num33 
,33 
Burst44 
=44 
$num44 
}55 
}66 
[88 
Serializable88 
]88 
public99 
class99 
GunViewModel99 
{99 
[:: 
Tooltip:: 
(:: 
$str:: 
):: 
]:: 
public;; 


GameObject;; 
gunModel;; 
;;; 
[<< 
Tooltip<< 
(<< 
$str<< 
)<< 
]<< 
public== 
%
RuntimeAnimatorController== $
animatorController==% 7
;==7 8
[>> 
Tooltip>> 
(>> 
$str>> 
)>> 
]>> 
public?? 

Vector3?? 
	gunOffset?? 
=?? 
Vector3?? &
.??& '
zero??' +
;??+ ,
[@@ 
Tooltip@@ 
(@@ 
$str@@ 
)@@ 
]@@ 
publicAA 


QuaternionAA 
gunRotationAA !
=AA" #

QuaternionAA$ .
.AA. /
identityAA/ 7
;AA7 8
[BB 
TooltipBB 
(BB 
$strBB 
)BB 
]BB 
publicCC 

SpriteCC 
	crosshairCC 
;CC 
}DD 
[FF 
SerializableFF 
]FF 
publicGG 
classGG 
	GunEffectGG 
{GG 
[HH 
TooltipHH 
(HH 
$strHH 
)HH 
]HH 
publicII 

ParticleSystemII 
tracersII !
;II! "
[JJ 
TooltipJJ 
(JJ 
$strJJ 
)JJ 
]JJ 
publicKK 

ParticleSystemKK 
muzzleFlashKK %
;KK% &
[LL 
TooltipLL 
(LL 
$strLL 
)LL 
]LL 
publicMM 

ParticleSystemMM 
impactEffectMM &
;MM& '
[NN 
TooltipNN 
(NN 
$strNN 
)NN 
]NN 
publicOO 

Vector3OO 
effectOffsetOO 
=OO  !
Vector3OO" )
.OO) *
zeroOO* .
;OO. /
[PP 
TooltipPP 
(PP 
$strPP 
)PP 
]PP 
publicQQ 


QuaternionQQ 
effectRotationQQ $
=QQ% &

QuaternionQQ' 1
.QQ1 2
identityQQ2 :
;QQ: ;
}RR ·
gD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\ProjectileGun.cs
public 
class 
ProjectileGun 
: 
GunBase $
{% &
public 

override 
void 
Fire 
( 
) 
{  !
base 
. 
Fire 
( 
) 
; 
int 
	ammoSpent 
= 
Math 
. 
Min  
(  !
CurrentAmmo! ,
,, -

Properties. 8
.8 9
ammoPerShot9 D
)D E
;E F
int 
bulletsPerShot 
= 
( 
int !
)! "
(" #
	ammoSpent# ,
*- .

Properties/ 9
.9 :
bulletsPerAmmo: H
)H I
;I J
CurrentAmmo 
-= 
	ammoSpent  
;  !
var 
	timeAlive 
= 

Properties "
." #
maxDistance# .
// 0

Properties1 ;
.; <
bulletSpeed< G
;G H
for 
( 
int 
i 
= 
$num 
; 
i 
< 
bulletsPerShot *
;* +
i, -
++- /
)/ 0
{1 2
var 
offset 
= 
OffsetDirection (
(( )
)) *
;* +
var 
bullet 
= 
Instantiate $
($ %

Properties% /
./ 0
bullet0 6
,6 7
spawnTransform8 F
.F G
positionG O
+P Q
offsetR X
,X Y

QuaternionZ d
.d e
identitye m
)m n
;n o
bullet 
. 

Initialize 
( 
offset $
*% &

Properties' 1
.1 2
bulletSpeed2 =
,= >
	timeAlive? H
,H I
-J K

PropertiesK U
.U V
damageV \
)\ ]
;] ^
} 	
} 
} ì
cD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\IGunState.cs
public 
	interface 
	IGunState 
{ 
bool 
IsFiring	 
{ 
get 
; 
} 
bool 
IsReloading	 
{ 
get 
; 
} 
bool 
IsAiming	 
{ 
get 
; 
} 
bool 
CanFire	 
( 
) 
; 
bool 
	CanReload	 
( 
) 
; 
bool 
CanAim	 
( 
) 
; 
bool 
	CanSwitch	 
( 
) 
; 
event 	
Action
 
< 
	IGunState 
> 
OnStateChanged *
;* +
} 
public 
class 
GunStateDummy 
: 
	IGunState &
{' (
private 
static 
GunStateDummy  
	_instance! *
;* +
public 

static 
GunStateDummy 
Instance  (
=>) +
	_instance, 5
??=6 9
new: =
GunStateDummy> K
(K L
)L M
;M N
private 
GunStateDummy 
( 
) 
{ 
} 
public 

bool 
IsFiring 
=> 
false !
;! "
public 

bool 
IsReloading 
=> 
false $
;$ %
public 

bool 
IsAiming 
=> 
false !
;! "
public   

bool   
CanAim   
(   
)   
=>   
false   !
;  ! "
public!! 

bool!! 
CanFire!! 
(!! 
)!! 
=>!! 
false!! "
;!!" #
public"" 

bool"" 
	CanReload"" 
("" 
)"" 
=>"" 
false"" $
;""$ %
public## 

bool## 
	CanSwitch## 
(## 
)## 
=>## 
false## $
;##$ %
public$$ 

event$$ 
Action$$ 
<$$ 
	IGunState$$ !
>$$! "
OnStateChanged$$# 1
=$$2 3
delegate$$4 <
{$$= >
}$$? @
;$$@ A
}%% Â
sD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\ParticleCollisionListener.cs
public 
class %
ParticleCollisionListener &
:' (
MonoBehaviour) 6
{7 8
public 


UnityEvent 
< 

GameObject  
>  !
OnCollision" -
=. /
new0 3

UnityEvent4 >
<> ?

GameObject? I
>I J
(J K
)K L
;L M
void 
OnParticleCollision	 
( 

GameObject '
other( -
)- .
{/ 0
OnCollision 
? 
. 
Invoke 
( 
other !
)! "
;" #
} 
} ô
dD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\RaycastGun.cs
public 
class 

RaycastGun 
: 
GunBase !
{" #
public 

override 
void 
Fire 
( 
) 
{  !
base 
. 
Fire 
( 
) 
; 
int 
	ammoSpent 
= 
Math 
. 
Min  
(  !
CurrentAmmo! ,
,, -

Properties. 8
.8 9
ammoPerShot9 D
)D E
;E F
int 
bulletsPerShot 
= 
( 
int !
)! "
(" #
	ammoSpent# ,
*- .

Properties/ 9
.9 :
bulletsPerAmmo: H
)H I
;I J
CurrentAmmo 
-= 
	ammoSpent  
;  !
for 
( 
int 
i 
= 
$num 
; 
i 
< 
bulletsPerShot *
;* +
i, -
++- /
)/ 0
{1 2
var 
bullet 
= 
new 
Ray  
(  !
spawnTransform! /
./ 0
position0 8
,8 9
OffsetDirection: I
(I J
spawnTransformJ X
,X Y

PropertiesZ d
.d e

inaccuracye o
)o p
)p q
;q r
Debug 
. 
DrawRay 
( 
bullet  
.  !
origin! '
,' (
bullet) /
./ 0
	direction0 9
*: ;

Properties< F
.F G
maxDistanceG R
,R S
ColorT Y
.Y Z
redZ ]
,] ^
$num_ `
)` a
;a b
Physics 
. 
Raycast 
( 
bullet "
," #
out$ '

RaycastHit( 2
rayhit3 9
,9 :

Properties; E
.E F
maxDistanceF Q
)Q R
;R S
if 
( 
rayhit 
. 
collider 
!=  "
null# '
&&( *
rayhit+ 1
.1 2
collider2 :
.: ;
tag; >
!=? A
$strB J
)J K
{L M
var 
healthScript  
=! "
rayhit# )
.) *
collider* 2
.2 3

gameObject3 =
.= >
GetComponent> J
<J K
HealthK Q
>Q R
(R S
)S T
;T U
Debug 
. 
Log 
( 
$str !
+" #
healthScript$ 0
+1 2
$str3 <
+= >
(? @
int@ C
)C D
-D E

PropertiesE O
.O P
damageP V
+W X
$strY b
)b c
;c d
healthScript 
? 
. 
ModifyHealth *
(* +
(+ ,
int, /
)/ 0
-0 1

Properties1 ;
.; <
damage< B
)B C
;C D
} 
} 	
} 
} Ö
dD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\BulletBase.cs
public 
class 

BulletBase 
: 
MonoBehaviour '
{( )
private 
float 
damage 
; 
public 

void 

Initialize 
( 
Vector3 "
force# (
,( )
float* /
	timeAlive0 9
,9 :
float; @
damageA G
)G H
{I J
	Rigidbody 
rb 
= 
GetComponent #
<# $
	Rigidbody$ -
>- .
(. /
)/ 0
;0 1
rb 

.
 
AddForce 
( 
force 
, 
	ForceMode $
.$ %
Impulse% ,
), -
;- .
Destroy 
( 

gameObject 
, 
	timeAlive %
)% &
;& '
this 
. 
damage 
= 
damage 
; 
} 
void 
OnCollisionEnter	 
( 
	Collision #
	collision$ -
)- .
{/ 0
var 
tag 
= 
	collision 
. 
collider $
.$ %
tag% (
;( )
if 

( 
tag 
!= 
$str 
&& 
tag "
!=# %
$str& .
). /
{0 1
var 
healthScript 
= 
	collision (
.( )
collider) 1
.1 2

gameObject2 <
.< =
GetComponent= I
<I J
HealthJ P
>P Q
(Q R
)R S
;S T
healthScript 
? 
. 
ModifyHealth &
(& '
(' (
int( +
)+ ,
damage, 2
)2 3
;3 4
Destroy 
( 

gameObject 
) 
;  
} 	
} 
} À
cD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\GunPickup.cs
public 
class 
	GunPickup 
: 
MonoBehaviour &
{' (
public 

GunData 
gun 
; 
public 

float 
oscillateHeight  
=! "
$num# $
;$ %
public 

float 
oscillateFrequency #
=$ %
$num& '
;' (
public		 

float		 
rotationSpeed		 
=		  
$num		! "
;		" #
private

 
Vector3

 
startPos

 
;

 
public 

void 
Start 
( 
) 
{ 
startPos 
= 
	transform 
. 
position %
;% &
} 
public 

void 
Update 
( 
) 
{ 
var 
pos 
= 
	transform 
. 
position $
;$ %
pos 
. 
y 
= 
startPos 
. 
y 
+ 
oscillateHeight ,
*- .
Mathf/ 4
.4 5
Cos5 8
(8 9
oscillateFrequency9 K
*L M
TimeN R
.R S
timeS W
)W X
;X Y
	transform 
. 
position 
= 
pos  
;  !
	transform 
. 
Rotate 
( 
$num 
, 
rotationSpeed )
,) *
$num+ ,
), -
;- .
} 
public 

void 
OnTriggerEnter 
( 
Collider '
other( -
)- .
{/ 0
Debug 
. 
Log 
( 
$str 
) 
; 
if 

( 
other 
. 
tag 
== 
$str !
)! "
{# $
Debug 
. 
Log 
( 
$str #
)# $
;$ %

GunManager 

gunManager !
=" #
other$ )
.) *

gameObject* 4
.4 5
GetComponent5 A
<A B

GunManagerB L
>L M
(M N
)N O
;O P
if 
( 

gunManager 
== 
null "
)" #
{$ %
Debug 
. 
Log 
( 
$str $
+% &
other' ,
+- .
$str/ L
)L M
;M N
} 
else 
{ 

gunManager   
.   
AddGun   !
(  ! "
gun  " %
)  % &
;  & '
Destroy!! 
(!! 

gameObject!! "
)!!" #
;!!# $
}"" 
}## 	
}$$ 
}&& û
aD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\GunBase.cs
public 
abstract 
class 
GunBase 
: 
MonoBehaviour  -
,- .
	IGunState/ 8
{9 :
[ 
Tooltip 
( 
$str (
)( )
]) *
[ 
SerializeField 
] 
	protected 
GunData &
gunData' .
;. /
[ 
Tooltip 
( 
$str 1
)1 2
]2 3
[ 
SerializeField 
] 
	protected 
	Transform (
spawnTransform) 7
;7 8
	protected 

IGunEvents 
eventHandler %
;% &
	protected 

Dictionary 
< 

UnityEvent #
,# $
UnityAction% 0
>0 1
eventMap2 :
=; <
new= @

DictionaryA K
<K L

UnityEventL V
,V W
UnityActionX c
>c d
(d e
)e f
;f g
public 

GunViewModel 
	ViewModel !
=>" $
gunData% ,
., -
	viewModel- 6
;6 7
public 

GunProperties 

Properties #
=>$ &
gunData' .
.. /

properties/ 9
;9 :
public 

	GunEffect 
Effects 
=> 
gunData  '
.' (
effects( /
;/ 0
public 

event 
Action 
< 
	IGunState !
>! "
OnStateChanged# 1
=2 3
delegate4 <
{= >
}? @
;@ A
private   
bool   
	_isFiring   
,   
_isReloading   (
,  ( )
	_isAiming  * 3
;  3 4
public!! 

bool!! 
IsFiring!! 
{!! 
get"" 
=>"" 
	_isFiring"" 
;"" 
	protected"" #
set""$ '
{""( )
	_isFiring## 
=## 
value## 
;## 
OnStateChanged$$ 
?$$ 
.$$ 
Invoke$$ "
($$" #
this$$# '
)$$' (
;$$( )
}%% 	
}&& 
public'' 

bool'' 
IsReloading'' 
{'' 
get(( 
=>(( 
_isReloading(( 
;(( 
	protected(( &
set((' *
{((+ ,
_isReloading)) 
=)) 
value))  
;))  !
OnStateChanged** 
?** 
.** 
Invoke** "
(**" #
this**# '
)**' (
;**( )
}++ 	
},, 
public-- 

bool-- 
IsAiming-- 
{-- 
get.. 
=>.. 
	_isAiming.. 
;.. 
	protected.. #
set..$ '
{..( )
	_isAiming// 
=// 
value// 
;// 
OnStateChanged00 
?00 
.00 
Invoke00 "
(00" #
this00# '
)00' (
;00( )
}11 	
}22 
private44 
int44 
_currentAmmo44 
;44 
public55 

int55 
CurrentAmmo55 
{55 
get66 
=>66 
_currentAmmo66 
;66 
	protected66 &
set66' *
{66+ ,
if77 
(77 
value77 
<=77 
$num77 
)77 
IsFiring77 $
=77% &
false77' ,
;77, -
_currentAmmo88 
=88 
value88  
;88  !
}99 	
}:: 
	protected<< 
float<< 
	lastFired<< 
;<< 
	protected== 
float== 
currentInaccuracy== %
;==% &
	protected>> 
int>> 
currentShots>> 
;>> 
publicDD 

voidDD 
SetEventHandlerDD 
(DD  

IGunEventsDD  *
eventHandlerDD+ 7
)DD7 8
{DD9 :
ifEE 

(EE 
thisEE 
.EE 
eventHandlerEE 
==EE  
eventHandlerEE! -
)EE- .
returnEE/ 5
;EE5 6
boolGG 
activeStateGG 
=GG 

gameObjectGG %
.GG% &

activeSelfGG& 0
;GG0 1

gameObjectHH 
.HH 
	SetActiveHH 
(HH 
falseHH "
)HH" #
;HH# $
eventMapII 
.II 
ClearII 
(II 
)II 
;II 
thisJJ 
.JJ 
eventHandlerJJ 
=JJ 
eventHandlerJJ (
;JJ( )
CreateEventMapKK 
(KK 
)KK 
;KK 

gameObjectLL 
.LL 
	SetActiveLL 
(LL 
activeStateLL (
)LL( )
;LL) *
}MM 
publicOO 

voidOO 

InitializeOO 
(OO 
GunDataOO "
dataOO# '
,OO' (
	TransformOO) 2
	transformOO3 <
,OO< =

IGunEventsOO> H
eventHandlerOOI U
)OOU V
{OOW X
thisPP 
.PP 
gunDataPP 
=PP 
dataPP 
;PP 
thisQQ 
.QQ 
spawnTransformQQ 
=QQ 
	transformQQ '
;QQ' (
SetEventHandlerRR 
(RR 
eventHandlerRR $
)RR$ %
;RR% &
}SS 
publicUU 

voidUU 
AwakeUU 
(UU 
)UU 
{UU 
spawnTransformVV 
??=VV 
thisVV 
.VV  "
GetComponentInChildrenVV  6
<VV6 7
CameraVV7 =
>VV= >
(VV> ?
)VV? @
.VV@ A
	transformVVA J
;VVJ K
SetEventHandlerWW 
(WW 
eventHandlerWW $
??WW% '
GunEventsDummyWW( 6
.WW6 7
InstanceWW7 ?
)WW? @
;WW@ A
	lastFiredYY 
=YY 
-YY 

PropertiesYY 
.YY  
fireRateYY  (
;YY( )
currentInaccuracyZZ 
=ZZ 

PropertiesZZ &
.ZZ& '

inaccuracyZZ' 1
;ZZ1 2
CurrentAmmo[[ 
=[[ 

Properties[[  
.[[  !
maxAmmo[[! (
;[[( )
currentShots\\ 
=\\ 

Properties\\ !
.\\! "
shotsPerTrigger\\" 1
;\\1 2
}]] 
public__ 

void__ 
OnEnable__ 
(__ 
)__ 
{__ 
AddEventListeners`` 
(`` 
)`` 
;`` 
}aa 
publiccc 

voidcc 
	OnDisablecc 
(cc 
)cc 
{cc  
RemoveEventListenersdd 
(dd 
)dd 
;dd 
IsAimingee 
=ee 
falseee 
;ee 
IsReloadingff 
=ff 
falseff 
;ff 
IsFiringgg 
=gg 
falsegg 
;gg 
}hh 
publicjj 

virtualjj 
booljj 
CanFirejj 
(jj  
)jj  !
{jj" #
returnkk 
Timekk 
.kk 
timekk 
-kk 
	lastFiredkk $
>kk% &

Propertieskk' 1
.kk1 2
fireRatekk2 :
&&ll 
CurrentAmmoll 
>ll  
$numll! "
&&mm 
!mm 
IsReloadingmm 
;mm  
}nn 
publicpp 

virtualpp 
voidpp 
Firepp 
(pp 
)pp 
{pp  
	lastFiredqq 
=qq 
Timeqq 
.qq 
timeqq 
;qq 
}rr 
publictt 

virtualtt 
booltt 
	CanReloadtt !
(tt! "
)tt" #
{tt$ %
returnuu 
!uu 
IsReloadinguu 
&&uu 
CurrentAmmouu *
<uu+ ,

Propertiesuu- 7
.uu7 8
maxAmmouu8 ?
;uu? @
}vv 
publicxx 

virtualxx 
voidxx 
Reloadxx 
(xx 
)xx  
{xx! "
ifyy 

(yy 
	CanReloadyy 
(yy 
)yy 
)yy 
{yy 
IsReloadingzz 
=zz 
truezz 
;zz 
eventHandler{{ 
.{{ 
OnReload{{ !
?{{! "
.{{" #
Invoke{{# )
({{) *
){{* +
;{{+ ,
StartCoroutine|| 
(|| 
ReloadCoroutine|| *
(||* +
)||+ ,
)||, -
;||- .
}}} 	
}~~ 
private
 
IEnumerator
 
ReloadCoroutine
 '
(
' (
)
( )
{
* +
yield
 
return
 
new
 
WaitForSeconds
 '
(
' (

Properties
( 2
.
2 3

reloadTime
3 =
)
= >
;
> ?
CurrentAmmo
 
=
 

Properties
  
.
  !
maxAmmo
! (
;
( )
IsReloading
 
=
 
false
 
;
 
eventHandler
 
.
 
OnReloadEnd
  
?
  !
.
! "
Invoke
" (
(
( )
)
) *
;
* +
}
 
public
 

virtual
 
bool
 
CanAim
 
(
 
)
  
{
! "
return
 
true
 
;
 
}
 
public
 

virtual
 
bool
 
	CanSwitch
 !
(
! "
)
" #
{
$ %
return
 
!
 
IsReloading
 
&&
 
!
  
IsAiming
  (
;
( )
}
 
	protected
 
virtual
 
void
 
	AddAction
 $
(
$ %

UnityEvent
% /
evt
0 3
,
3 4
UnityAction
5 @
act
A D
)
D E
{
F G
if
 

(
 
!
 
eventMap
 
.
 
ContainsKey
 !
(
! "
evt
" %
)
% &
)
& '
eventMap
( 0
.
0 1
Add
1 4
(
4 5
evt
5 8
,
8 9
act
: =
)
= >
;
> ?
else
 
eventMap
 
[
 
evt
 
]
 
+=
 
act
 !
;
! "
}
 
	protected
 
virtual
 
void
 
CreateEventMap
 )
(
) *
)
* +
{
, -
Debug
 
.
 
Log
 
(
 
$str
 '
)
' (
;
( )
	AddAction
 
(
 
eventHandler
 
.
 
OnFire
 %
,
% &
(
' (
)
( )
=>
* ,
Fire
- 1
(
1 2
)
2 3
)
3 4
;
4 5
	AddAction
 
(
 
eventHandler
 
.
 
OnFireStart
 *
,
* +
(
, -
)
- .
=>
/ 1
IsFiring
2 :
=
; <
CurrentAmmo
= H
>
I J
$num
K L
||
M O
IsFiring
P X
)
X Y
;
Y Z
	AddAction
 
(
 
eventHandler
 
.
 
	OnFireEnd
 (
,
( )
(
* +
)
+ ,
=>
- /
IsFiring
0 8
=
9 :
false
; @
)
@ A
;
A B
	AddAction
 
(
 
eventHandler
 
.
 
OnReloadStart
 ,
,
, -
(
. /
)
/ 0
=>
1 3
Reload
4 :
(
: ;
)
; <
)
< =
;
= >
	AddAction
 
(
 
eventHandler
 
.
 

OnAimStart
 )
,
) *
(
+ ,
)
, -
=>
. 0
{
1 2
IsAiming
 
=
 
true
 
;
 
currentInaccuracy
 
=
 

Properties
  *
.
* +

inaccuracy
+ 5
/
6 7
$num
8 <
;
< =
}
 	
)
	 

;

 
	AddAction
   
(
   
eventHandler
   
.
   
OnAimEnd
   '
,
  ' (
(
  ) *
)
  * +
=>
  , .
{
  / 0
IsAiming
¡¡ 
=
¡¡ 
false
¡¡ 
;
¡¡ 
currentInaccuracy
¢¢ 
=
¢¢ 

Properties
¢¢  *
.
¢¢* +

inaccuracy
¢¢+ 5
;
¢¢5 6
}
££ 	
)
££	 

;
££
 
}
¤¤ 
	protected
¦¦ 
virtual
¦¦ 
void
¦¦ 
AddEventListeners
¦¦ ,
(
¦¦, -
)
¦¦- .
{
¦¦/ 0
foreach
§§ 
(
§§ 
var
§§ 
pair
§§ 
in
§§ 
eventMap
§§ %
)
§§% &
{
§§' (

UnityEvent
¨¨ 
evt
¨¨ 
=
¨¨ 
pair
¨¨ !
.
¨¨! "
Key
¨¨" %
;
¨¨% &
UnityAction
©© 
act
©© 
=
©© 
pair
©© "
.
©©" #
Value
©©# (
;
©©( )
evt
ªª 
.
ªª 
AddListener
ªª 
(
ªª 
act
ªª 
)
ªª  
;
ªª  !
}
«« 	
}
¬¬ 
	protected
®® 
virtual
®® 
void
®® "
RemoveEventListeners
®® /
(
®®/ 0
)
®®0 1
{
®®2 3
foreach
¯¯ 
(
¯¯ 
var
¯¯ 
pair
¯¯ 
in
¯¯ 
eventMap
¯¯ %
)
¯¯% &
{
¯¯' (

UnityEvent
°° 
evt
°° 
=
°° 
pair
°° !
.
°°! "
Key
°°" %
;
°°% &
UnityAction
±± 
act
±± 
=
±± 
pair
±± "
.
±±" #
Value
±±# (
;
±±( )
if
²² 
(
²² 
act
²² 
!=
²² 
null
²² 
)
²² 
evt
²²  
.
²²  !
RemoveListener
²²! /
(
²²/ 0
act
²²0 3
)
²²3 4
;
²²4 5
}
³³ 	
}
´´ 
	protected
·· 
virtual
·· 
Vector3
·· 
OffsetDirection
·· -
(
··- .
)
··. /
{
··0 1
return
¸¸ 
OffsetDirection
¸¸ 
(
¸¸ 
spawnTransform
¸¸ -
,
¸¸- .
currentInaccuracy
¸¸/ @
)
¸¸@ A
;
¸¸A B
}
¹¹ 
public
¼¼ 

static
¼¼ 
Vector3
¼¼ 
OffsetDirection
¼¼ )
(
¼¼) *
	Transform
¼¼* 3
start
¼¼4 9
,
¼¼9 :
float
¼¼; @
	maxOffset
¼¼A J
)
¼¼J K
{
¼¼L M
var
½½ 
vx
½½ 
=
½½ 
UnityEngine
½½ 
.
½½ 
Random
½½ #
.
½½# $
Range
½½$ )
(
½½) *
-
½½* +
	maxOffset
½½+ 4
,
½½4 5
	maxOffset
½½6 ?
)
½½? @
;
½½@ A
var
¾¾ 
vy
¾¾ 
=
¾¾ 
UnityEngine
¾¾ 
.
¾¾ 
Random
¾¾ #
.
¾¾# $
Range
¾¾$ )
(
¾¾) *
-
¾¾* +
	maxOffset
¾¾+ 4
,
¾¾4 5
	maxOffset
¾¾6 ?
)
¾¾? @
;
¾¾@ A
var
¿¿ 
vz
¿¿ 
=
¿¿ 
$num
¿¿ 
;
¿¿ 
return
ÀÀ 
start
ÀÀ 
.
ÀÀ  
TransformDirection
ÀÀ '
(
ÀÀ' (
new
ÀÀ( +
Vector3
ÀÀ, 3
(
ÀÀ3 4
vx
ÀÀ4 6
,
ÀÀ6 7
vy
ÀÀ8 :
,
ÀÀ: ;
vz
ÀÀ< >
)
ÀÀ> ?
)
ÀÀ? @
;
ÀÀ@ A
}
ÁÁ 
}ÂÂ ö
dD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\IGunEvents.cs
public 
	interface 

IGunEvents 
{ 

UnityEvent 
OnFire 
{ 
get 
; 
} 

UnityEvent 
OnFireStart 
{ 
get  
;  !
}" #

UnityEvent 
	OnFireEnd 
{ 
get 
; 
}  !

UnityEvent 
OnReload 
{ 
get 
; 
}  

UnityEvent 
OnReloadStart 
{ 
get "
;" #
}$ %

UnityEvent 
OnReloadEnd 
{ 
get  
;  !
}" #

UnityEvent 
OnAim 
{ 
get 
; 
} 

UnityEvent 

OnAimStart 
{ 
get 
;  
}! "

UnityEvent 
OnAimEnd 
{ 
get 
; 
}  
} 
public 
class 
GunEventsDummy 
: 

IGunEvents (
{) *
private 
static 
GunEventsDummy !
	_instance" +
;+ ,
public 

static 
GunEventsDummy  
Instance! )
=>* ,
	_instance- 6
??=7 :
new; >
GunEventsDummy? M
(M N
)N O
;O P
private 
GunEventsDummy 
( 
) 
{ 
}  
public 


UnityEvent 
OnFire 
{ 
get "
;" #
}$ %
=& '
new( +

UnityEvent, 6
(6 7
)7 8
;8 9
public 


UnityEvent 
OnFireStart !
{" #
get$ '
;' (
}) *
=+ ,
new- 0

UnityEvent1 ;
(; <
)< =
;= >
public   


UnityEvent   
	OnFireEnd   
{    !
get  " %
;  % &
}  ' (
=  ) *
new  + .

UnityEvent  / 9
(  9 :
)  : ;
;  ; <
public"" 


UnityEvent"" 
OnReload"" 
{""  
get""! $
;""$ %
}""& '
=""( )
new""* -

UnityEvent"". 8
(""8 9
)""9 :
;"": ;
public## 


UnityEvent## 
OnReloadStart## #
{##$ %
get##& )
;##) *
}##+ ,
=##- .
new##/ 2

UnityEvent##3 =
(##= >
)##> ?
;##? @
public$$ 


UnityEvent$$ 
OnReloadEnd$$ !
{$$" #
get$$$ '
;$$' (
}$$) *
=$$+ ,
new$$- 0

UnityEvent$$1 ;
($$; <
)$$< =
;$$= >
public&& 


UnityEvent&& 
OnAim&& 
{&& 
get&& !
;&&! "
}&&# $
=&&% &
new&&' *

UnityEvent&&+ 5
(&&5 6
)&&6 7
;&&7 8
public'' 


UnityEvent'' 

OnAimStart''  
{''! "
get''# &
;''& '
}''( )
=''* +
new'', /

UnityEvent''0 :
('': ;
)''; <
;''< =
public(( 


UnityEvent(( 
OnAimEnd(( 
{((  
get((! $
;(($ %
}((& '
=((( )
new((* -

UnityEvent((. 8
(((8 9
)((9 :
;((: ;
})) (
mD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\GunEffectController.cs
[ 
Serializable 
] 
public 
class 
GunEffectController  
{! "
public 

UnityAction 
PlayFireEffects &
;& '
public 

ParticleSystem 
muzzleFlash %
;% &
public 

ParticleSystem 
tracers !
;! "
public 

ParticleSystem 
impactEffect &
;& '
[ 
SerializeField 
] 
public %
ParticleCollisionListener 5
listener6 >
;> ?
public 

UnityAction 
< 

GameObject !
>! "
PlayImpactEffect# 3
;3 4
public 

GunEffectController 
( 
)  
{! "
CreateActions 
( 
) 
; 
} 
private 
void 
CreateActions 
( 
)  
{! "
PlayFireEffects 
= 
( 
) 
=> 
{  !
muzzleFlash 
? 
. 
Play 
( 
) 
;  
tracers   
?   
.   
Play   
(   
)   
;   
}!! 	
;!!	 

PlayImpactEffect## 
=## 
other##  
=>##! #
{##$ %
if$$ 
($$ 
impactEffect$$ 
==$$ 
null$$  $
)$$$ %
return$$& ,
;$$, -
List%% 
<%% "
ParticleCollisionEvent%% '
>%%' (
events%%) /
=%%0 1
new%%2 5
List%%6 :
<%%: ;"
ParticleCollisionEvent%%; Q
>%%Q R
(%%R S
)%%S T
;%%T U
tracers&& 
.&& 
GetCollisionEvents&& &
(&&& '
other&&' ,
,&&, -
events&&. 4
)&&4 5
;&&5 6
foreach'' 
('' 
var'' 
e'' 
in'' 
events'' $
)''$ %
{''& '
var(( 
effect(( 
=(( 

GameObject(( '
.((' (
Instantiate((( 3
(((3 4
impactEffect((4 @
,((@ A
e((B C
.((C D
intersection((D P
,((P Q

Quaternion((R \
.((\ ]
identity((] e
)((e f
;((f g
if)) 
()) 
e)) 
.)) 
colliderComponent)) '
?))' (
.))( )

gameObject))) 3
.))3 4
tag))4 7
==))8 :
$str)); C
)))C D
{))E F
var** 
main** 
=** 
effect** %
.**% &
main**& *
;*** +
main++ 
.++ 

startColor++ #
=++$ %
Color++& +
.+++ ,
red++, /
;++/ 0
},, 
effect.. 
... 
Play.. 
(.. 
).. 
;.. 
}// 
}00 	
;00	 

}11 
public33 

void33 

AddEffects33 
(33 

IGunEvents33 %
events33& ,
)33, -
{33. /
events44 
.44 
OnFire44 
.44 
AddListener44 !
(44! "
PlayFireEffects44" 1
)441 2
;442 3
AddParticleListener55 
(55 
)55 
;55 
}66 
public88 

void88 
RemoveEffects88 
(88 

IGunEvents88 (
events88) /
)88/ 0
{881 2
events99 
.99 
OnFire99 
.99 
RemoveListener99 $
(99$ %
PlayFireEffects99% 4
)994 5
;995 6
AddParticleListener:: 
(:: 
):: 
;:: 
};; 
public>> 

void>> 
AddParticleListener>> #
(>># $
)>>$ %
{>>& '
if?? 

(?? 
tracers?? 
==?? 
null?? 
)?? 
return?? #
;??# $
listenerAA 
=AA 
tracersAA 
.AA 

gameObjectAA %
.AA% &
GetComponentAA& 2
<AA2 3%
ParticleCollisionListenerAA3 L
>AAL M
(AAM N
)AAN O
??BB 
tracersBB 
.BB 

gameObjectBB %
.BB% &
AddComponentBB& 2
<BB2 3%
ParticleCollisionListenerBB3 L
>BBL M
(BBM N
)BBN O
;BBO P
listenerDD 
.DD 
OnCollisionDD 
.DD 
AddListenerDD (
(DD( )
PlayImpactEffectDD) 9
)DD9 :
;DD: ;
}EE 
}FF ª
pD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\GunAnimationController.cs
[ 
Serializable 
] 
public 
class "
GunAnimationController #
{$ %
public 

Animator 
animator 
; 
public 

Action 
< 
	IGunState 
> 
UpdateAnimator +
;+ ,
public 

UnityAction 
FireTrigger "
;" #
public 
"
GunAnimationController !
(! "
)" #
{$ %
CreateActions 
( 
) 
; 
} 
private 
void 
CreateActions 
( 
)  
{! "
UpdateAnimator 
= 
state 
=> !
{" #
animator 
. 
SetBool 
( 
$str '
,' (
state) .
.. /
IsFiring/ 7
)7 8
;8 9
animator 
. 
SetBool 
( 
$str *
,* +
state, 1
.1 2
IsReloading2 =
)= >
;> ?
} 	
;	 

FireTrigger 
= 
( 
) 
=> 
animator $
.$ %

SetTrigger% /
(/ 0
$str0 6
)6 7
;7 8
}   
public"" 

void"" 
AddStateChanges"" 
(""  
	IGunState""  )
state""* /
)""/ 0
{""1 2
state## 
.## 
OnStateChanged## 
+=## 
UpdateAnimator##  .
;##. /
}$$ 
public&& 

void&& 
RemoveStateChanges&& "
(&&" #
	IGunState&&# ,
state&&- 2
)&&2 3
{&&4 5
state'' 
.'' 
OnStateChanged'' 
-='' 
UpdateAnimator''  .
;''. /
}(( 
public** 

void** 
AddGunEvents** 
(** 

IGunEvents** '
events**( .
)**. /
{**0 1
events++ 
.++ 
OnFire++ 
.++ 
AddListener++ !
(++! "
FireTrigger++" -
)++- .
;++. /
},, 
public.. 

void.. 
RemoveGunEvents.. 
(..  

IGunEvents..  *
events..+ 1
)..1 2
{..3 4
events// 
.// 
OnFire// 
.// 
RemoveListener// $
(//$ %
FireTrigger//% 0
)//0 1
;//1 2
}00 
}11 
nD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\GunAnimationBehavior.cs
public 
class  
GunAnimationBehavior !
:" #!
StateMachineBehaviour$ 9
{: ;
public 

override 
void 
OnStateExit $
($ %
Animator% -
animator. 6
,6 7
AnimatorStateInfo8 I
	stateInfoJ S
,S T
intU X

layerIndexY c
)c d
{e f
animator 
. 
ResetTrigger 
( 
$str $
)$ %
;% &
base 
. 
OnStateExit 
( 
animator !
,! "
	stateInfo# ,
,, -

layerIndex. 8
)8 9
;9 :
} 
} Ä¦
dD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\GunManager.cs
public 
class 

GunManager 
: 
MonoBehaviour '
{( )
public 

List 
< 
GunBase 
> 
guns 
= 
new  #
List$ (
<( )
GunBase) 0
>0 1
(1 2
)2 3
;3 4
public 

GunBase 

primaryGun 
; 
public 

GunEventHandler 
eventHandler '
;' (
[ 
SerializeField 
] 
public "
GunAnimationController 2
animationController3 F
;F G
[ 
SerializeField 
] 
public 
GunEffectController /
gunEffectController0 C
;C D
public 

bool 
allowRuntimeChanges #
=$ %
true& *
;* +
public 

Camera 
renderCamera 
; 
	protected 
MasterInput 
inputController )
;) *
private 
int 
selectedGun 
= 
$num 
;  
public   

void   
Awake   
(   
)   
{   
inputController!! 
=!! 
new!! 
MasterInput!! )
(!!) *
)!!* +
;!!+ ,
if"" 

("" 
!"" 
guns"" 
."" 
Contains"" 
("" 

primaryGun"" %
)""% &
)""& '
{""( )
Debug## 
.## 
Log## 
(## 
$str## 0
)##0 1
;##1 2

primaryGun$$ 
=$$ 
guns$$ 
.$$ 
Count$$ #
>$$$ %
$num$$& '
?$$( )
guns$$* .
[$$. /
$num$$/ 0
]$$0 1
:$$2 3
null$$4 8
;$$8 9
}&& 	
guns'' 
.'' 
ForEach'' 
('' 
gun'' 
=>'' 

DisableGun'' &
(''& '
gun''' *
)''* +
)''+ ,
;'', -
}(( 
public** 

void** 
OnEnable** 
(** 
)** 
{** 
inputController++ 
.++ 
Enable++ 
(++ 
)++  
;++  !
animationController,, 
.,, 
AddGunEvents,, (
(,,( )
eventHandler,,) 5
),,5 6
;,,6 7
gunEffectController-- 
.-- 

AddEffects-- &
(--& '
eventHandler--' 3
)--3 4
;--4 5
inputController.. 
... 
Player.. 
... 
SwitchWeapon.. +
...+ ,
	performed.., 5
+=..6 8
ctx..9 <
=>..= ?
SwitchWeapon..@ L
(..L M
ctx..M P
...P Q
	ReadValue..Q Z
<..Z [
float..[ `
>..` a
(..a b
)..b c
)..c d
;..d e
if// 

(// 

primaryGun// 
!=// 
null// 
)// 
	EnableGun//  )
(//) *

primaryGun//* 4
)//4 5
;//5 6
}00 
public22 

void22 
	OnDisable22 
(22 
)22 
{22 
inputController33 
.33 
Disable33 
(33  
)33  !
;33! "
animationController44 
.44 
RemoveGunEvents44 +
(44+ ,
eventHandler44, 8
)448 9
;449 :
gunEffectController55 
.55 
RemoveEffects55 )
(55) *
eventHandler55* 6
)556 7
;557 8
inputController66 
.66 
Player66 
.66 
SwitchWeapon66 +
.66+ ,
	performed66, 5
-=666 8
ctx669 <
=>66= ?
SwitchWeapon66@ L
(66L M
ctx66M P
.66P Q
	ReadValue66Q Z
<66Z [
float66[ `
>66` a
(66a b
)66b c
)66c d
;66d e
if77 

(77 

primaryGun77 
!=77 
null77 
)77 

DisableGun77  *
(77* +

primaryGun77+ 5
)775 6
;776 7
}88 
public:: 

void:: 
AddGun:: 
(:: 
GunData:: 
data:: #
)::# $
{::% &

GameObject;; 

gameObject;; 
=;; 
new;;  #

GameObject;;$ .
(;;. /
data;;/ 3
.;;3 4
gunName;;4 ;
);;; <
;;;< =

gameObject<< 
.<< 
	SetActive<< 
(<< 
false<< "
)<<" #
;<<# $
GunBase>> 
gun>> 
=>> 
data>> 
.>> 

properties>> %
.>>% &
type>>& *
switch>>+ 1
{>>2 3
GunProperties?? 
.?? 
GunType?? !
.??! "
Raycast??" )
=>??* ,

gameObject??- 7
.??7 8
AddComponent??8 D
<??D E

RaycastGun??E O
>??O P
(??P Q
)??Q R
,??R S
GunProperties@@ 
.@@ 
GunType@@ !
.@@! "

Projectile@@" ,
=>@@- /

gameObject@@0 :
.@@: ;
AddComponent@@; G
<@@G H
ProjectileGun@@H U
>@@U V
(@@V W
)@@W X
,@@X Y
GunPropertiesAA 
.AA 
GunTypeAA !
.AA! "
BurstAA" '
=>AA( *

gameObjectAA+ 5
.AA5 6
AddComponentAA6 B
<AAB C
BurstGunAAC K
>AAK L
(AAL M
)AAM N
,AAN O
_BB 
=>BB 
nullBB 
}CC 	
;CC	 

ifEE 

(EE 
gunEE 
!=EE 
nullEE 
)EE 
{EE 
gunFF 
.FF 

InitializeFF 
(FF 
dataFF 
,FF  
renderCameraFF! -
.FF- .
	transformFF. 7
,FF7 8
eventHandlerFF9 E
)FFE F
;FFF G

GameObjectGG 
parentGG 
=GG 

GameObjectGG  *
.GG* +
FindGG+ /
(GG/ 0
$strGG0 6
)GG6 7
??GG8 :
newGG; >

GameObjectGG? I
(GGI J
$strGGJ P
)GGP Q
;GGQ R
gunHH 
.HH 
	transformHH 
.HH 
	SetParentHH #
(HH# $
parentHH$ *
.HH* +
	transformHH+ 4
)HH4 5
;HH5 6
ifJJ 
(JJ 
gunsJJ 
.JJ 
CountJJ 
==JJ 
$numJJ 
)JJ  
{JJ! "

primaryGunKK 
=KK 
gunKK  
;KK  !
	EnableGunLL 
(LL 

primaryGunLL $
)LL$ %
;LL% &
CreateViewModelMM 
(MM  
allowRuntimeChangesMM  3
,MM3 4
falseMM5 :
)MM: ;
;MM; <
}NN 
gunsOO 
.OO 
AddOO 
(OO 
gunOO 
)OO 
;OO 
}PP 	
}QQ 
publicSS 

voidSS 
	EnableGunSS 
(SS 
GunBaseSS !
gunSS" %
)SS% &
{SS' (
gunTT 
.TT 
SetEventHandlerTT 
(TT 
eventHandlerTT (
)TT( )
;TT) *
eventHandlerUU 
.UU 
SetStateControllerUU '
(UU' (
gunUU( +
)UU+ ,
;UU, -
animationControllerVV 
.VV 
AddStateChangesVV +
(VV+ ,
gunVV, /
)VV/ 0
;VV0 1
gunWW 
.WW 

gameObjectWW 
.WW 
	SetActiveWW  
(WW  !
trueWW! %
)WW% &
;WW& '
}XX 
publicZZ 

voidZZ 

DisableGunZZ 
(ZZ 
GunBaseZZ "
gunZZ# &
)ZZ& '
{ZZ( )
gun[[ 
.[[ 

gameObject[[ 
.[[ 
	SetActive[[  
([[  !
false[[! &
)[[& '
;[[' (
animationController\\ 
.\\ 
RemoveStateChanges\\ .
(\\. /
gun\\/ 2
)\\2 3
;\\3 4
}]] 
public__ 

void__ 
SwitchWeapon__ 
(__ 
float__ "
delta__# (
)__( )
{__* +
if`` 

(`` 
guns`` 
.`` 
Count`` 
<=`` 
$num`` 
||`` 
!``  

primaryGun``  *
.``* +
	CanSwitch``+ 4
(``4 5
)``5 6
)``6 7
return``8 >
;``> ?

DisableGunbb 
(bb 

primaryGunbb 
)bb 
;bb 

primaryGuncc 
=cc 
deltacc 
>cc 
$numcc 
?cc  
NextGuncc! (
(cc( )
)cc) *
:cc+ ,
PreviousGuncc- 8
(cc8 9
)cc9 :
;cc: ;
	EnableGundd 
(dd 

primaryGundd 
)dd 
;dd 
CreateViewModelee 
(ee 
allowRuntimeChangesee +
,ee+ ,
falseee- 2
)ee2 3
;ee3 4
}ff 
publichh 

GunBasehh 
NextGunhh 
(hh 
)hh 
{hh 
selectedGunii 
++ii 
;ii 
ifjj 

(jj 
selectedGunjj 
>=jj 
gunsjj 
.jj  
Countjj  %
)jj% &
{jj' (
selectedGunkk 
=kk 
$numkk 
;kk 
}ll 	
Debugmm 
.mm 
Logmm 
(mm 
$strmm 
+mm 
selectedGunmm (
)mm( )
;mm) *
returnnn 
gunsnn 
[nn 
selectedGunnn 
]nn  
;nn  !
}oo 
publicqq 

GunBaseqq 
PreviousGunqq 
(qq 
)qq  
{qq! "
selectedGunrr 
--rr 
;rr 
ifss 

(ss 
selectedGunss 
<=ss 
-ss 
$numss 
)ss 
{ss  
selectedGuntt 
=tt 
gunstt 
.tt 
Counttt $
-tt% &
$numtt' (
;tt( )
}uu 	
Debugvv 
.vv 
Logvv 
(vv 
$strvv 
+vv  
selectedGunvv! ,
)vv, -
;vv- .
returnww 
gunsww 
[ww 
selectedGunww 
]ww  
;ww  !
}xx 
publiczz 

voidzz 
CreateViewModelzz 
(zz  
boolzz  $
allowChangeszz% 1
,zz1 2
boolzz3 7
destroyImmediatezz8 H
)zzH I
{zzJ K
if{{ 

({{ 
!{{ 
allowChanges{{ 
){{ 
return{{ !
;{{! "
void}} 
DestroyObject}} 
(}} 

GameObject}} %

gameObject}}& 0
)}}0 1
{}}2 3
if~~ 
(~~ 
destroyImmediate~~  
)~~  !
DestroyImmediate~~" 2
(~~2 3

gameObject~~3 =
)~~= >
;~~> ?
else 
Destroy 
( 

gameObject #
)# $
;$ %
}
 	
var
 
	viewModel
 
=
 

primaryGun
 "
.
" #
	ViewModel
# ,
;
, -
	Transform
 
previousChild
 
;
  
var
 
model
 
=
 
Instantiate
 
(
  
	viewModel
  )
.
) *
gunModel
* 2
,
2 3
	viewModel
4 =
.
= >
	gunOffset
> G
,
G H
	viewModel
I R
.
R S
gunRotation
S ^
)
^ _
;
_ `
model
 
.
 
name
 
=
 
$str
 "
;
" #
var
 
animator
 
=
 
model
 
.
 
AddComponent
 )
<
) *
Animator
* 2
>
2 3
(
3 4
)
4 5
;
5 6
animator
 
.
 '
runtimeAnimatorController
 *
=
+ ,
	viewModel
- 6
.
6 7 
animatorController
7 I
;
I J!
animationController
 
.
 
animator
 $
=
% &
animator
' /
;
/ 0
var
 
effects
 
=
 

primaryGun
  
.
  !
Effects
! (
;
( )
var
 
muzzleFlash
 
=
 
Instantiate
 %
(
% &
effects
& -
.
- .
muzzleFlash
. 9
,
9 :
effects
; B
.
B C
effectOffset
C O
,
O P
effects
Q X
.
X Y
effectRotation
Y g
)
g h
;
h i
muzzleFlash
 
.
 
name
 
=
 
$str
 )
;
) *!
gunEffectController
 
.
 
muzzleFlash
 '
=
( )
muzzleFlash
* 5
;
5 6
var
 
tracers
 
=
 
Instantiate
 !
(
! "
effects
" )
.
) *
tracers
* 1
,
1 2
effects
3 :
.
: ;
effectOffset
; G
,
G H
effects
I P
.
P Q
effectRotation
Q _
)
_ `
;
` a
tracers
 
.
 
name
 
=
 
$str
  
;
  !!
gunEffectController
 
.
 
tracers
 #
=
$ %
tracers
& -
;
- .!
gunEffectController
 
.
 !
AddParticleListener
 /
(
/ 0
)
0 1
;
1 2!
gunEffectController
 
.
 
impactEffect
 (
=
) *
effects
+ 2
.
2 3
impactEffect
3 ?
;
? @
previousChild
 
=
 
renderCamera
 $
.
$ %
	transform
% .
.
. /
Find
/ 3
(
3 4
$str
4 A
)
A B
;
B C
if
 

(
 
previousChild
 
!=
 
null
 !
)
! "
DestroyObject
# 0
(
0 1
previousChild
1 >
.
> ?

gameObject
? I
)
I J
;
J K
model
 
.
 
	transform
 
.
 
	SetParent
 !
(
! "
renderCamera
" .
.
. /
	transform
/ 8
,
8 9
false
: ?
)
? @
;
@ A
muzzleFlash
 
.
 
	transform
 
.
 
	SetParent
 '
(
' (
model
( -
.
- .
	transform
. 7
,
7 8
false
9 >
)
> ?
;
? @
tracers
 
.
 
	transform
 
.
 
	SetParent
 #
(
# $
model
$ )
.
) *
	transform
* 3
,
3 4
false
5 :
)
: ;
;
; <
var
¡¡ 
	guiCanvas
¡¡ 
=
¡¡ 

GameObject
¡¡ "
.
¡¡" #
Find
¡¡# '
(
¡¡' (
$str
¡¡( 4
)
¡¡4 5
;
¡¡5 6
if
¢¢ 

(
¢¢ 
	guiCanvas
¢¢ 
==
¢¢ 
null
¢¢ 
)
¢¢ 
{
¢¢  
	guiCanvas
££ 
=
££ 
new
££ 

GameObject
££ &
(
££& '
$str
££' 3
)
££3 4
;
££4 5
	guiCanvas
¤¤ 
.
¤¤ 
layer
¤¤ 
=
¤¤ 
$num
¤¤ 
;
¤¤  
var
¦¦ 
canvas
¦¦ 
=
¦¦ 
	guiCanvas
¦¦ "
.
¦¦" #
AddComponent
¦¦# /
<
¦¦/ 0
Canvas
¦¦0 6
>
¦¦6 7
(
¦¦7 8
)
¦¦8 9
;
¦¦9 :
canvas
§§ 
.
§§ 

renderMode
§§ 
=
§§ 

RenderMode
§§  *
.
§§* + 
ScreenSpaceOverlay
§§+ =
;
§§= >
canvas
¨¨ 
.
¨¨ 
targetDisplay
¨¨  
=
¨¨! "
$num
¨¨# $
;
¨¨$ %
var
ªª 
scaler
ªª 
=
ªª 
	guiCanvas
ªª "
.
ªª" #
AddComponent
ªª# /
<
ªª/ 0
CanvasScaler
ªª0 <
>
ªª< =
(
ªª= >
)
ªª> ?
;
ªª? @
scaler
«« 
.
«« 
uiScaleMode
«« 
=
««  
CanvasScaler
««! -
.
««- .
	ScaleMode
««. 7
.
««7 8!
ScaleWithScreenSize
««8 K
;
««K L
scaler
¬¬ 
.
¬¬ !
referenceResolution
¬¬ &
=
¬¬' (
new
¬¬) ,
Vector2
¬¬- 4
(
¬¬4 5
$num
¬¬5 8
,
¬¬8 9
$num
¬¬: =
)
¬¬= >
;
¬¬> ?
scaler
­­ 
.
­­  
matchWidthOrHeight
­­ %
=
­­& '
$num
­­( ,
;
­­, -
	guiCanvas
¯¯ 
.
¯¯ 
AddComponent
¯¯ "
<
¯¯" #
CanvasRenderer
¯¯# 1
>
¯¯1 2
(
¯¯2 3
)
¯¯3 4
;
¯¯4 5
}
°° 	

GameObject
²² 
crosshairImage
²² !
=
²²" #
new
²²$ '

GameObject
²²( 2
(
²²2 3
$str
²²3 D
)
²²D E
;
²²E F
crosshairImage
³³ 
.
³³ 
layer
³³ 
=
³³ 
$num
³³  
;
³³  !
var
µµ 
image
µµ 
=
µµ 
crosshairImage
µµ "
.
µµ" #
AddComponent
µµ# /
<
µµ/ 0
Image
µµ0 5
>
µµ5 6
(
µµ6 7
)
µµ7 8
;
µµ8 9
image
¶¶ 
.
¶¶ 
sprite
¶¶ 
=
¶¶ 
	viewModel
¶¶  
.
¶¶  !
	crosshair
¶¶! *
;
¶¶* +
image
·· 
.
·· 
SetNativeSize
·· 
(
·· 
)
·· 
;
·· 
previousChild
¹¹ 
=
¹¹ 
	guiCanvas
¹¹ !
.
¹¹! "
	transform
¹¹" +
.
¹¹+ ,
Find
¹¹, 0
(
¹¹0 1
$str
¹¹1 B
)
¹¹B C
;
¹¹C D
if
ºº 

(
ºº 
previousChild
ºº 
!=
ºº 
null
ºº !
)
ºº! "
DestroyObject
ºº# 0
(
ºº0 1
previousChild
ºº1 >
.
ºº> ?

gameObject
ºº? I
)
ººI J
;
ººJ K
crosshairImage
»» 
.
»» 
	transform
»»  
.
»»  !
	SetParent
»»! *
(
»»* +
	guiCanvas
»»+ 4
.
»»4 5
	transform
»»5 >
,
»»> ?
false
»»@ E
)
»»E F
;
»»F G
}
¼¼ 
[
ÁÁ 
CustomEditor
ÁÁ 
(
ÁÁ 
typeof
ÁÁ 
(
ÁÁ 

GunManager
ÁÁ #
)
ÁÁ# $
)
ÁÁ$ %
]
ÁÁ% &
public
ÂÂ 

class
ÂÂ !
GunManagerInspector
ÂÂ $
:
ÂÂ% &
Editor
ÂÂ' -
{
ÂÂ. /
public
ÃÃ 
override
ÃÃ 
void
ÃÃ 
OnInspectorGUI
ÃÃ +
(
ÃÃ+ ,
)
ÃÃ, -
{
ÃÃ. /"
DrawDefaultInspector
ÄÄ  
(
ÄÄ  !
)
ÄÄ! "
;
ÄÄ" #
if
ÅÅ 
(
ÅÅ 
	GUILayout
ÅÅ 
.
ÅÅ 
Button
ÅÅ  
(
ÅÅ  !
$str
ÅÅ! 4
)
ÅÅ4 5
)
ÅÅ5 6
{
ÅÅ7 8
var
ÆÆ 
manager
ÆÆ 
=
ÆÆ 
target
ÆÆ $
as
ÆÆ% '

GunManager
ÆÆ( 2
;
ÆÆ2 3
manager
ÇÇ 
.
ÇÇ 
CreateViewModel
ÇÇ '
(
ÇÇ' (
true
ÇÇ( ,
,
ÇÇ, -
true
ÇÇ. 2
)
ÇÇ2 3
;
ÇÇ3 4
EditorUtility
ÈÈ 
.
ÈÈ 
SetDirty
ÈÈ &
(
ÈÈ& '
manager
ÈÈ' .
)
ÈÈ. /
;
ÈÈ/ 0
}
ÊÊ 
}
ËË 	
}
ÌÌ 
}ÎÎ »
bD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\BurstGun.cs
public 
class 
BurstGun 
: 

RaycastGun "
{# $
private 
bool 

isBursting 
= 
false #
;# $
public 

override 
bool 
CanFire  
(  !
)! "
{# $
return 
base 
. 
CanFire 
( 
) 
&& 
currentShots 
> 
$num 
&& 
! 

isBursting 
; 
} 
public 

override 
void 
Fire 
( 
) 
{  !
base 
. 
Fire 
( 
) 
; 
StartCoroutine 
( 
FireCouroutine %
(% &
)& '
)' (
;( )
} 
public 

virtual 
IEnumerator 
FireCouroutine -
(- .
). /
{0 1
currentShots 
-- 
; 

isBursting 
= 
currentShots !
>" #
$num$ %
&&& (
CurrentAmmo) 4
>5 6
$num7 8
;8 9
if 

( 

isBursting 
) 
{ 
yield   
return   
new   
WaitForSeconds   +
(  + ,

Properties  , 6
.  6 7
shotRate  7 ?
)  ? @
;  @ A
eventHandler!! 
.!! 
OnFire!! 
?!!  
.!!  !
Invoke!!! '
(!!' (
)!!( )
;!!) *
}"" 	
else""
 
{"" 
currentShots## 
=## 

Properties## %
.##% &
shotsPerTrigger##& 5
;##5 6
}$$ 	
}%% 
public'' 

override'' 
bool'' 
	CanReload'' "
(''" #
)''# $
{''% &
return(( 
base(( 
.(( 
	CanReload(( 
((( 
)(( 
&&((  "
!((# $

isBursting(($ .
;((. /
})) 
public++ 

override++ 
bool++ 
	CanSwitch++ "
(++" #
)++# $
{++% &
return,, 
base,, 
.,, 
	CanSwitch,, 
(,, 
),, 
&&,,  "
!,,# $

isBursting,,$ .
;,,. /
}-- 
}.. 
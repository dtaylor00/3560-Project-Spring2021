Â
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Events\Signals\SignalAsset.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[ "
AssetFileNameExtension 
( 
$str $
)$ %
]% &
public 

class 
SignalAsset 
: 
ScriptableObject /
{ 
internal 
static 
event 
Action $
<$ %
SignalAsset% 0
>0 1
OnEnableCallback2 B
;B C
void 
OnEnable 
( 
) 
{ 	
if 
( 
OnEnableCallback  
!=! #
null$ (
)( )
OnEnableCallback  
(  !
this! %
)% &
;& '
} 	
} 
} î
†D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Events\Signals\CustomSignalEventDrawer.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
class 	#
CustomSignalEventDrawer
 !
:" #
PropertyAttribute$ 5
{6 7
}7 8
} ¿
¢D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Animation\AnimationPreviewUpdateCallback.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
class 	*
AnimationPreviewUpdateCallback
 (
:) *%
ITimelineEvaluateCallback+ D
{		 #
AnimationPlayableOutput

 
m_Output

  (
;

( )
PlayableGraph 
m_Graph 
; 
List 
< #
IAnimationWindowPreview $
>$ %
m_PreviewComponents& 9
;9 :
public *
AnimationPreviewUpdateCallback -
(- .#
AnimationPlayableOutput. E
outputF L
)L M
{ 	
m_Output 
= 
output 
; 
Playable 
playable 
= 
m_Output  (
.( )
GetSourcePlayable) :
(: ;
); <
;< =
if 
( 
playable 
. 
IsValid  
(  !
)! "
)" #
{ 
m_Graph 
= 
playable "
." #
GetGraph# +
(+ ,
), -
;- .
} 
} 	
public 
void 
Evaluate 
( 
) 
{ 	
if 
( 
! 
m_Graph 
. 
IsValid  
(  !
)! "
)" #
return 
; 
if 
( 
m_PreviewComponents #
==$ &
null' +
)+ ,"
FetchPreviewComponents &
(& '
)' (
;( )
foreach!! 
(!! 
var!! 
	component!! "
in!!# %
m_PreviewComponents!!& 9
)!!9 :
{"" 
if## 
(## 
	component## 
!=##  
null##! %
)##% &
{$$ 
	component%% 
.%% 
UpdatePreviewGraph%% 0
(%%0 1
m_Graph%%1 8
)%%8 9
;%%9 :
}&& 
}'' 
}(( 	
private** 
void** "
FetchPreviewComponents** +
(**+ ,
)**, -
{++ 	
m_PreviewComponents,, 
=,,  !
new,," %
List,,& *
<,,* +#
IAnimationWindowPreview,,+ B
>,,B C
(,,C D
),,D E
;,,E F
var.. 
animator.. 
=.. 
m_Output.. #
...# $
	GetTarget..$ -
(..- .
)... /
;../ 0
if// 
(// 
animator// 
==// 
null//  
)//  !
return00 
;00 
var22 

gameObject22 
=22 
animator22 %
.22% &

gameObject22& 0
;220 1
m_PreviewComponents33 
.33  
AddRange33  (
(33( )

gameObject33) 3
.333 4
GetComponents334 A
<33A B#
IAnimationWindowPreview33B Y
>33Y Z
(33Z [
)33[ \
)33\ ]
;33] ^
}44 	
}55 
}66 ˝”
äD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\TimelinePlayable.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{		 
internal 
	interface %
ITimelineEvaluateCallback 0
{ 
void 
Evaluate 
( 
) 
; 
} 
class 	"
IntervalTreeRebalancer
  
{ 
private 
IntervalTree 
< 
RuntimeElement +
>+ ,
m_Tree- 3
;3 4
public "
IntervalTreeRebalancer %
(% &
IntervalTree& 2
<2 3
RuntimeElement3 A
>A B
treeC G
)G H
{ 	
m_Tree 
= 
tree 
; 
} 	
public 
bool 
	Rebalance 
( 
) 
{ 	
m_Tree 
. 
UpdateIntervals "
(" #
)# $
;$ %
return   
m_Tree   
.   
dirty   
;    
}!! 	
}"" 
public11 

class11 
TimelinePlayable11 !
:11" #
PlayableBehaviour11$ 5
{22 
private33 
IntervalTree33 
<33 
RuntimeElement33 +
>33+ ,
m_IntervalTree33- ;
=33< =
new33> A
IntervalTree33B N
<33N O
RuntimeElement33O ]
>33] ^
(33^ _
)33_ `
;33` a
private44 
List44 
<44 
RuntimeElement44 #
>44# $
m_ActiveClips44% 2
=443 4
new445 8
List449 =
<44= >
RuntimeElement44> L
>44L M
(44M N
)44N O
;44O P
private55 
List55 
<55 
RuntimeElement55 #
>55# $&
m_CurrentListOfActiveClips55% ?
;55? @
private66 
int66 
m_ActiveBit66 
=66  !
$num66" #
;66# $
private88 
List88 
<88 %
ITimelineEvaluateCallback88 .
>88. /
m_EvaluateCallbacks880 C
=88D E
new88F I
List88J N
<88N O%
ITimelineEvaluateCallback88O h
>88h i
(88i j
)88j k
;88k l
private:: 

Dictionary:: 
<:: 

TrackAsset:: %
,::% &
Playable::' /
>::/ 0
m_PlayableCache::1 @
=::A B
new::C F

Dictionary::G Q
<::Q R

TrackAsset::R \
,::\ ]
Playable::^ f
>::f g
(::g h
)::h i
;::i j
internal<< 
static<< 
bool<< 
muteAudioScrubbing<< /
=<<0 1
true<<2 6
;<<6 7
private?? "
IntervalTreeRebalancer?? &
m_Rebalancer??' 3
;??3 4
publicJJ 
staticJJ 
ScriptPlayableJJ $
<JJ$ %
TimelinePlayableJJ% 5
>JJ5 6
CreateJJ7 =
(JJ= >
PlayableGraphJJ> K
graphJJL Q
,JJQ R
IEnumerableJJS ^
<JJ^ _

TrackAssetJJ_ i
>JJi j
tracksJJk q
,JJq r

GameObjectJJs }
go	JJ~ Ä
,
JJÄ Å
bool
JJÇ Ü
autoRebalance
JJá î
,
JJî ï
bool
JJñ ö
createOutputs
JJõ ®
)
JJ® ©
{KK 	
ifLL 
(LL 
tracksLL 
==LL 
nullLL 
)LL 
throwMM 
newMM !
ArgumentNullExceptionMM /
(MM/ 0
$strMM0 E
,MME F
$strMMG O
)MMO P
;MMP Q
ifOO 
(OO 
goOO 
==OO 
nullOO 
)OO 
throwPP 
newPP !
ArgumentNullExceptionPP /
(PP/ 0
$strPP0 N
,PPN O
$strPPP T
)PPT U
;PPU V
varRR 
playableRR 
=RR 
ScriptPlayableRR )
<RR) *
TimelinePlayableRR* :
>RR: ;
.RR; <
CreateRR< B
(RRB C
graphRRC H
)RRH I
;RRI J
playableSS 
.SS 
SetTraversalModeSS %
(SS% &!
PlayableTraversalModeSS& ;
.SS; <
PassthroughSS< G
)SSG H
;SSH I
varTT 
sequenceTT 
=TT 
playableTT #
.TT# $
GetBehaviourTT$ 0
(TT0 1
)TT1 2
;TT2 3
sequenceUU 
.UU 
CompileUU 
(UU 
graphUU "
,UU" #
playableUU$ ,
,UU, -
tracksUU. 4
,UU4 5
goUU6 8
,UU8 9
autoRebalanceUU: G
,UUG H
createOutputsUUI V
)UUV W
;UUW X
returnVV 
playableVV 
;VV 
}WW 	
publicbb 
voidbb 
Compilebb 
(bb 
PlayableGraphbb )
graphbb* /
,bb/ 0
Playablebb1 9
timelinePlayablebb: J
,bbJ K
IEnumerablebbL W
<bbW X

TrackAssetbbX b
>bbb c
tracksbbd j
,bbj k

GameObjectbbl v
gobbw y
,bby z
boolbb{ 
autoRebalance
bbÄ ç
,
bbç é
bool
bbè ì
createOutputs
bbî °
)
bb° ¢
{cc 	
ifdd 
(dd 
tracksdd 
==dd 
nulldd 
)dd 
throwee 
newee !
ArgumentNullExceptionee /
(ee/ 0
$stree0 E
,eeE F
$streeG O
)eeO P
;eeP Q
ifgg 
(gg 
gogg 
==gg 
nullgg 
)gg 
throwhh 
newhh !
ArgumentNullExceptionhh /
(hh/ 0
$strhh0 N
,hhN O
$strhhP T
)hhT U
;hhU V
varjj 
outputTrackListjj 
=jj  !
newjj" %
Listjj& *
<jj* +

TrackAssetjj+ 5
>jj5 6
(jj6 7
tracksjj7 =
)jj= >
;jj> ?
varkk (
maximumNumberOfIntersectionskk ,
=kk- .
outputTrackListkk/ >
.kk> ?
Countkk? D
*kkE F
$numkkG H
+kkI J
outputTrackListkkK Z
.kkZ [
Countkk[ `
;kk` a&
m_CurrentListOfActiveClipsll &
=ll' (
newll) ,
Listll- 1
<ll1 2
RuntimeElementll2 @
>ll@ A
(llA B(
maximumNumberOfIntersectionsllB ^
)ll^ _
;ll_ `
m_ActiveClipsmm 
=mm 
newmm 
Listmm  $
<mm$ %
RuntimeElementmm% 3
>mm3 4
(mm4 5(
maximumNumberOfIntersectionsmm5 Q
)mmQ R
;mmR S
m_EvaluateCallbacksoo 
.oo  
Clearoo  %
(oo% &
)oo& '
;oo' (
m_PlayableCachepp 
.pp 
Clearpp !
(pp! "
)pp" #
;pp# $
CompileTrackListrr 
(rr 
graphrr "
,rr" #
timelinePlayablerr$ 4
,rr4 5
outputTrackListrr6 E
,rrE F
gorrG I
,rrI J
createOutputsrrK X
)rrX Y
;rrY Z
ifuu 
(uu 
autoRebalanceuu 
)uu 
{vv 
m_Rebalancerww 
=ww 
newww ""
IntervalTreeRebalancerww# 9
(ww9 :
m_IntervalTreeww: H
)wwH I
;wwI J
}xx 
}zz 	
private|| 
void|| 
CompileTrackList|| %
(||% &
PlayableGraph||& 3
graph||4 9
,||9 :
Playable||; C
timelinePlayable||D T
,||T U
IEnumerable||V a
<||a b

TrackAsset||b l
>||l m
tracks||n t
,||t u

GameObject	||v Ä
go
||Å É
,
||É Ñ
bool
||Ö â
createOutputs
||ä ó
)
||ó ò
{}} 	
foreach~~ 
(~~ 
var~~ 
track~~ 
in~~ !
tracks~~" (
)~~( )
{ 
if
ÄÄ 
(
ÄÄ 
!
ÄÄ 
track
ÄÄ 
.
ÄÄ 
IsCompilable
ÄÄ '
(
ÄÄ' (
)
ÄÄ( )
)
ÄÄ) *
continue
ÅÅ 
;
ÅÅ 
if
ÉÉ 
(
ÉÉ 
!
ÉÉ 
m_PlayableCache
ÉÉ $
.
ÉÉ$ %
ContainsKey
ÉÉ% 0
(
ÉÉ0 1
track
ÉÉ1 6
)
ÉÉ6 7
)
ÉÉ7 8
{
ÑÑ 
track
ÖÖ 
.
ÖÖ 
	SortClips
ÖÖ #
(
ÖÖ# $
)
ÖÖ$ %
;
ÖÖ% &!
CreateTrackPlayable
ÜÜ '
(
ÜÜ' (
graph
ÜÜ( -
,
ÜÜ- .
timelinePlayable
ÜÜ/ ?
,
ÜÜ? @
track
ÜÜA F
,
ÜÜF G
go
ÜÜH J
,
ÜÜJ K
createOutputs
ÜÜL Y
)
ÜÜY Z
;
ÜÜZ [
}
áá 
}
àà 
}
ââ 	
void
ãã 
CreateTrackOutput
ãã 
(
ãã 
PlayableGraph
ãã ,
graph
ãã- 2
,
ãã2 3

TrackAsset
ãã4 >
track
ãã? D
,
ããD E

GameObject
ããF P
go
ããQ S
,
ããS T
Playable
ããU ]
playable
ãã^ f
,
ããf g
int
ããh k
port
ããl p
)
ããp q
{
åå 	
if
çç 
(
çç 
track
çç 
.
çç 

isSubTrack
çç  
)
çç  !
return
éé 
;
éé 
var
êê 
bindings
êê 
=
êê 
track
êê  
.
êê  !
outputs
êê! (
;
êê( )
foreach
ëë 
(
ëë 
var
ëë 
binding
ëë  
in
ëë! #
bindings
ëë$ ,
)
ëë, -
{
íí 
var
ìì 
playableOutput
ìì "
=
ìì# $
binding
ìì% ,
.
ìì, -
CreateOutput
ìì- 9
(
ìì9 :
graph
ìì: ?
)
ìì? @
;
ìì@ A
playableOutput
îî 
.
îî  
SetReferenceObject
îî 1
(
îî1 2
binding
îî2 9
.
îî9 :
sourceObject
îî: F
)
îîF G
;
îîG H
playableOutput
ïï 
.
ïï 
SetSourcePlayable
ïï 0
(
ïï0 1
playable
ïï1 9
,
ïï9 :
port
ïï; ?
)
ïï? @
;
ïï@ A
playableOutput
ññ 
.
ññ 
	SetWeight
ññ (
(
ññ( )
$num
ññ) -
)
ññ- .
;
ññ. /
if
ôô 
(
ôô 
track
ôô 
as
ôô 
AnimationTrack
ôô +
!=
ôô, .
null
ôô/ 3
)
ôô3 4
{
öö 7
)EvaluateWeightsForAnimationPlayableOutput
õõ =
(
õõ= >
track
õõ> C
,
õõC D
(
õõE F%
AnimationPlayableOutput
õõF ]
)
õõ] ^
playableOutput
õõ^ l
)
õõl m
;
õõm n
if
ùù 
(
ùù 
!
ùù 
Application
ùù $
.
ùù$ %
	isPlaying
ùù% .
)
ùù. /4
&EvaluateAnimationPreviewUpdateCallback
ûû >
(
ûû> ?
track
ûû? D
,
ûûD E
(
ûûF G%
AnimationPlayableOutput
ûûG ^
)
ûû^ _
playableOutput
ûû_ m
)
ûûm n
;
ûûn o
}
†† 
if
°° 
(
°° 
playableOutput
°° "
.
°°" #$
IsPlayableOutputOfType
°°# 9
<
°°9 :!
AudioPlayableOutput
°°: M
>
°°M N
(
°°N O
)
°°O P
)
°°P Q
(
¢¢ 
(
¢¢ !
AudioPlayableOutput
¢¢ )
)
¢¢) *
playableOutput
¢¢* 8
)
¢¢8 9
.
¢¢9 :
SetEvaluateOnSeek
¢¢: K
(
¢¢K L
!
¢¢L M 
muteAudioScrubbing
¢¢M _
)
¢¢_ `
;
¢¢` a
if
•• 
(
•• 
track
•• 
.
•• 
timelineAsset
•• '
.
••' (
markerTrack
••( 3
==
••4 6
track
••7 <
)
••< =
{
¶¶ 
var
ßß 
director
ßß  
=
ßß! "
go
ßß# %
.
ßß% &
GetComponent
ßß& 2
<
ßß2 3
PlayableDirector
ßß3 C
>
ßßC D
(
ßßD E
)
ßßE F
;
ßßF G
playableOutput
®® "
.
®®" #
SetUserData
®®# .
(
®®. /
director
®®/ 7
)
®®7 8
;
®®8 9
foreach
©© 
(
©© 
var
©©  
c
©©! "
in
©©# %
go
©©& (
.
©©( )
GetComponents
©©) 6
<
©©6 7#
INotificationReceiver
©©7 L
>
©©L M
(
©©M N
)
©©N O
)
©©O P
{
™™ 
playableOutput
´´ &
.
´´& '%
AddNotificationReceiver
´´' >
(
´´> ?
c
´´? @
)
´´@ A
;
´´A B
}
¨¨ 
}
≠≠ 
}
ÆÆ 
}
ØØ 	
void
±± 7
)EvaluateWeightsForAnimationPlayableOutput
±± 6
(
±±6 7

TrackAsset
±±7 A
track
±±B G
,
±±G H%
AnimationPlayableOutput
±±I `

animOutput
±±a k
)
±±k l
{
≤≤ 	!
m_EvaluateCallbacks
≥≥ 
.
≥≥  
Add
≥≥  #
(
≥≥# $
new
≥≥$ ',
AnimationOutputWeightProcessor
≥≥( F
(
≥≥F G

animOutput
≥≥G Q
)
≥≥Q R
)
≥≥R S
;
≥≥S T
}
¥¥ 	
void
∂∂ 4
&EvaluateAnimationPreviewUpdateCallback
∂∂ 3
(
∂∂3 4

TrackAsset
∂∂4 >
track
∂∂? D
,
∂∂D E%
AnimationPlayableOutput
∂∂F ]

animOutput
∂∂^ h
)
∂∂h i
{
∑∑ 	!
m_EvaluateCallbacks
∏∏ 
.
∏∏  
Add
∏∏  #
(
∏∏# $
new
∏∏$ ',
AnimationPreviewUpdateCallback
∏∏( F
(
∏∏F G

animOutput
∏∏G Q
)
∏∏Q R
)
∏∏R S
;
∏∏S T
}
ππ 	
private
ªª 
static
ªª 
Playable
ªª !
CreatePlayableGraph
ªª  3
(
ªª3 4
PlayableGraph
ªª4 A
graph
ªªB G
,
ªªG H

TrackAsset
ªªI S
asset
ªªT Y
,
ªªY Z

GameObject
ªª[ e
go
ªªf h
,
ªªh i
IntervalTree
ªªj v
<
ªªv w
RuntimeElementªªw Ö
>ªªÖ Ü
treeªªá ã
,ªªã å
Playableªªç ï 
timelinePlayableªªñ ¶
)ªª¶ ß
{
ºº 	
return
ΩΩ 
asset
ΩΩ 
.
ΩΩ !
CreatePlayableGraph
ΩΩ ,
(
ΩΩ, -
graph
ΩΩ- 2
,
ΩΩ2 3
go
ΩΩ4 6
,
ΩΩ6 7
tree
ΩΩ8 <
,
ΩΩ< =
timelinePlayable
ΩΩ> N
)
ΩΩN O
;
ΩΩO P
}
ææ 	
private
¿¿ 
Playable
¿¿ !
CreateTrackPlayable
¿¿ ,
(
¿¿, -
PlayableGraph
¿¿- :
graph
¿¿; @
,
¿¿@ A
Playable
¿¿B J
timelinePlayable
¿¿K [
,
¿¿[ \

TrackAsset
¿¿] g
track
¿¿h m
,
¿¿m n

GameObject
¿¿o y
go
¿¿z |
,
¿¿| }
bool¿¿~ Ç
createOutputs¿¿É ê
)¿¿ê ë
{
¡¡ 	
if
¬¬ 
(
¬¬ 
!
¬¬ 
track
¬¬ 
.
¬¬ 
IsCompilable
¬¬ #
(
¬¬# $
)
¬¬$ %
)
¬¬% &
return
√√ 
timelinePlayable
√√ '
;
√√' (
Playable
≈≈ 
playable
≈≈ 
;
≈≈ 
if
∆∆ 
(
∆∆ 
m_PlayableCache
∆∆ 
.
∆∆  
TryGetValue
∆∆  +
(
∆∆+ ,
track
∆∆, 1
,
∆∆1 2
out
∆∆3 6
playable
∆∆7 ?
)
∆∆? @
)
∆∆@ A
return
«« 
playable
«« 
;
««  
if
…… 
(
…… 
track
…… 
.
…… 
name
…… 
==
…… 
$str
…… $
)
……$ %
return
   
timelinePlayable
   '
;
  ' (

TrackAsset
ÃÃ 
parentActor
ÃÃ "
=
ÃÃ# $
track
ÃÃ% *
.
ÃÃ* +
parent
ÃÃ+ 1
as
ÃÃ2 4

TrackAsset
ÃÃ5 ?
;
ÃÃ? @
var
ÕÕ 
parentPlayable
ÕÕ 
=
ÕÕ  
parentActor
ÕÕ! ,
!=
ÕÕ- /
null
ÕÕ0 4
?
ÕÕ5 6!
CreateTrackPlayable
ÕÕ7 J
(
ÕÕJ K
graph
ÕÕK P
,
ÕÕP Q
timelinePlayable
ÕÕR b
,
ÕÕb c
parentActor
ÕÕd o
,
ÕÕo p
go
ÕÕq s
,
ÕÕs t
createOutputsÕÕu Ç
)ÕÕÇ É
:ÕÕÑ Ö 
timelinePlayableÕÕÜ ñ
;ÕÕñ ó
var
ŒŒ 
actorPlayable
ŒŒ 
=
ŒŒ !
CreatePlayableGraph
ŒŒ  3
(
ŒŒ3 4
graph
ŒŒ4 9
,
ŒŒ9 :
track
ŒŒ; @
,
ŒŒ@ A
go
ŒŒB D
,
ŒŒD E
m_IntervalTree
ŒŒF T
,
ŒŒT U
timelinePlayable
ŒŒV f
)
ŒŒf g
;
ŒŒg h
bool
œœ 
	connected
œœ 
=
œœ 
false
œœ "
;
œœ" #
if
—— 
(
—— 
!
—— 
actorPlayable
—— 
.
—— 
IsValid
—— &
(
——& '
)
——' (
)
——( )
{
““ 
throw
‘‘ 
new
‘‘ '
InvalidOperationException
‘‘ 3
(
‘‘3 4
track
‘‘4 9
.
‘‘9 :
name
‘‘: >
+
‘‘? @
$str
‘‘A D
+
‘‘E F
track
‘‘G L
.
‘‘L M
GetType
‘‘M T
(
‘‘T U
)
‘‘U V
+
‘‘W X
$str‘‘Y –
)‘‘– —
;‘‘— “
}
’’ 
if
ŸŸ 
(
ŸŸ 
parentPlayable
ŸŸ 
.
ŸŸ 
IsValid
ŸŸ &
(
ŸŸ& '
)
ŸŸ' (
&&
ŸŸ) +
actorPlayable
ŸŸ, 9
.
ŸŸ9 :
IsValid
ŸŸ: A
(
ŸŸA B
)
ŸŸB C
)
ŸŸC D
{
⁄⁄ 
int
€€ 
port
€€ 
=
€€ 
parentPlayable
€€ )
.
€€) *
GetInputCount
€€* 7
(
€€7 8
)
€€8 9
;
€€9 :
parentPlayable
‹‹ 
.
‹‹ 
SetInputCount
‹‹ ,
(
‹‹, -
port
‹‹- 1
+
‹‹2 3
$num
‹‹4 5
)
‹‹5 6
;
‹‹6 7
	connected
›› 
=
›› 
graph
›› !
.
››! "
Connect
››" )
(
››) *
actorPlayable
››* 7
,
››7 8
$num
››9 :
,
››: ;
parentPlayable
››< J
,
››J K
port
››L P
)
››P Q
;
››Q R
parentPlayable
ﬁﬁ 
.
ﬁﬁ 
SetInputWeight
ﬁﬁ -
(
ﬁﬁ- .
port
ﬁﬁ. 2
,
ﬁﬁ2 3
$num
ﬁﬁ4 8
)
ﬁﬁ8 9
;
ﬁﬁ9 :
}
ﬂﬂ 
if
·· 
(
·· 
createOutputs
·· 
&&
··  
	connected
··! *
)
··* +
{
‚‚ 
CreateTrackOutput
„„ !
(
„„! "
graph
„„" '
,
„„' (
track
„„) .
,
„„. /
go
„„0 2
,
„„2 3
parentPlayable
„„4 B
,
„„B C
parentPlayable
„„D R
.
„„R S
GetInputCount
„„S `
(
„„` a
)
„„a b
-
„„c d
$num
„„e f
)
„„f g
;
„„g h
}
‰‰ 

CacheTrack
ÊÊ 
(
ÊÊ 
track
ÊÊ 
,
ÊÊ 
actorPlayable
ÊÊ +
,
ÊÊ+ ,
	connected
ÊÊ- 6
?
ÊÊ7 8
(
ÊÊ9 :
parentPlayable
ÊÊ: H
.
ÊÊH I
GetInputCount
ÊÊI V
(
ÊÊV W
)
ÊÊW X
-
ÊÊY Z
$num
ÊÊ[ \
)
ÊÊ\ ]
:
ÊÊ^ _
-
ÊÊ` a
$num
ÊÊa b
,
ÊÊb c
parentPlayable
ÊÊd r
)
ÊÊr s
;
ÊÊs t
return
ÁÁ 
actorPlayable
ÁÁ  
;
ÁÁ  !
}
ËË 	
public
ÔÔ 
override
ÔÔ 
void
ÔÔ 
PrepareFrame
ÔÔ )
(
ÔÔ) *
Playable
ÔÔ* 2
playable
ÔÔ3 ;
,
ÔÔ; <
	FrameData
ÔÔ= F
info
ÔÔG K
)
ÔÔK L
{
 	
if
ÚÚ 
(
ÚÚ 
m_Rebalancer
ÚÚ 
!=
ÚÚ 
null
ÚÚ  $
)
ÚÚ$ %
m_Rebalancer
ÛÛ 
.
ÛÛ 
	Rebalance
ÛÛ &
(
ÛÛ& '
)
ÛÛ' (
;
ÛÛ( )
Evaluate
˘˘ 
(
˘˘ 
playable
˘˘ 
,
˘˘ 
info
˘˘ #
)
˘˘# $
;
˘˘$ %
}
˙˙ 	
private
¸¸ 
void
¸¸ 
Evaluate
¸¸ 
(
¸¸ 
Playable
¸¸ &
playable
¸¸' /
,
¸¸/ 0
	FrameData
¸¸1 :
	frameData
¸¸; D
)
¸¸D E
{
˝˝ 	
if
˛˛ 
(
˛˛ 
m_IntervalTree
˛˛ 
==
˛˛ !
null
˛˛" &
)
˛˛& '
return
ˇˇ 
;
ˇˇ 
double
ÅÅ 
	localTime
ÅÅ 
=
ÅÅ 
playable
ÅÅ '
.
ÅÅ' (
GetTime
ÅÅ( /
(
ÅÅ/ 0
)
ÅÅ0 1
;
ÅÅ1 2
m_ActiveBit
ÇÇ 
=
ÇÇ 
m_ActiveBit
ÇÇ %
==
ÇÇ& (
$num
ÇÇ) *
?
ÇÇ+ ,
$num
ÇÇ- .
:
ÇÇ/ 0
$num
ÇÇ1 2
;
ÇÇ2 3(
m_CurrentListOfActiveClips
ÑÑ &
.
ÑÑ& '
Clear
ÑÑ' ,
(
ÑÑ, -
)
ÑÑ- .
;
ÑÑ. /
m_IntervalTree
ÖÖ 
.
ÖÖ 
IntersectsWith
ÖÖ )
(
ÖÖ) *
DiscreteTime
ÖÖ* 6
.
ÖÖ6 7
GetNearestTick
ÖÖ7 E
(
ÖÖE F
	localTime
ÖÖF O
)
ÖÖO P
,
ÖÖP Q(
m_CurrentListOfActiveClips
ÖÖR l
)
ÖÖl m
;
ÖÖm n
foreach
áá 
(
áá 
var
áá 
c
áá 
in
áá (
m_CurrentListOfActiveClips
áá 8
)
áá8 9
{
àà 
c
ââ 
.
ââ 
intervalBit
ââ 
=
ââ 
m_ActiveBit
ââ  +
;
ââ+ ,
if
ää 
(
ää 
	frameData
ää 
.
ää 

timeLooped
ää (
)
ää( )
c
ãã 
.
ãã 
Reset
ãã 
(
ãã 
)
ãã 
;
ãã 
}
åå 
var
êê 
timelineEnd
êê 
=
êê 
playable
êê &
.
êê& '
GetDuration
êê' 2
(
êê2 3
)
êê3 4
;
êê4 5
foreach
ëë 
(
ëë 
var
ëë 
c
ëë 
in
ëë 
m_ActiveClips
ëë +
)
ëë+ ,
{
íí 
if
ìì 
(
ìì 
c
ìì 
.
ìì 
intervalBit
ìì !
!=
ìì" $
m_ActiveBit
ìì% 0
)
ìì0 1
{
îî 
var
ïï 
clipEnd
ïï 
=
ïï  !
(
ïï" #
double
ïï# )
)
ïï) *
DiscreteTime
ïï* 6
.
ïï6 7
	FromTicks
ïï7 @
(
ïï@ A
c
ïïA B
.
ïïB C
intervalEnd
ïïC N
)
ïïN O
;
ïïO P
var
ññ 
time
ññ 
=
ññ 
	frameData
ññ (
.
ññ( )

timeLooped
ññ) 3
?
ññ4 5
Math
ññ6 :
.
ññ: ;
Min
ññ; >
(
ññ> ?
clipEnd
ññ? F
,
ññF G
timelineEnd
ññH S
)
ññS T
:
ññU V
Math
ññW [
.
ññ[ \
Min
ññ\ _
(
ññ_ `
	localTime
ññ` i
,
ññi j
clipEnd
ññk r
)
ññr s
;
ññs t
c
óó 
.
óó 

EvaluateAt
óó  
(
óó  !
time
óó! %
,
óó% &
	frameData
óó' 0
)
óó0 1
;
óó1 2
c
òò 
.
òò 
enable
òò 
=
òò 
false
òò $
;
òò$ %
}
ôô 
}
öö 
m_ActiveClips
úú 
.
úú 
Clear
úú 
(
úú  
)
úú  !
;
úú! "
for
ûû 
(
ûû 
var
ûû 
a
ûû 
=
ûû 
$num
ûû 
;
ûû 
a
ûû 
<
ûû (
m_CurrentListOfActiveClips
ûû  :
.
ûû: ;
Count
ûû; @
;
ûû@ A
a
ûûB C
++
ûûC E
)
ûûE F
{
üü (
m_CurrentListOfActiveClips
†† *
[
††* +
a
††+ ,
]
††, -
.
††- .

EvaluateAt
††. 8
(
††8 9
	localTime
††9 B
,
††B C
	frameData
††D M
)
††M N
;
††N O
m_ActiveClips
°° 
.
°° 
Add
°° !
(
°°! "(
m_CurrentListOfActiveClips
°°" <
[
°°< =
a
°°= >
]
°°> ?
)
°°? @
;
°°@ A
}
¢¢ 
int
§§ 
count
§§ 
=
§§ !
m_EvaluateCallbacks
§§ +
.
§§+ ,
Count
§§, 1
;
§§1 2
for
•• 
(
•• 
int
•• 
i
•• 
=
•• 
$num
•• 
;
•• 
i
•• 
<
•• 
count
••  %
;
••% &
i
••' (
++
••( *
)
••* +
{
¶¶ !
m_EvaluateCallbacks
ßß #
[
ßß# $
i
ßß$ %
]
ßß% &
.
ßß& '
Evaluate
ßß' /
(
ßß/ 0
)
ßß0 1
;
ßß1 2
}
®® 
}
©© 	
private
´´ 
void
´´ 

CacheTrack
´´ 
(
´´  

TrackAsset
´´  *
track
´´+ 0
,
´´0 1
Playable
´´2 :
playable
´´; C
,
´´C D
int
´´E H
port
´´I M
,
´´M N
Playable
´´O W
parent
´´X ^
)
´´^ _
{
¨¨ 	
m_PlayableCache
≠≠ 
[
≠≠ 
track
≠≠ !
]
≠≠! "
=
≠≠# $
playable
≠≠% -
;
≠≠- .
}
ÆÆ 	
static
±± 
void
±± #
ForAOTCompilationOnly
±± )
(
±±) *
)
±±* +
{
≤≤ 	
new
≥≥ 
List
≥≥ 
<
≥≥ 
IntervalTree
≥≥ !
<
≥≥! "
RuntimeElement
≥≥" 0
>
≥≥0 1
.
≥≥1 2
Entry
≥≥2 7
>
≥≥7 8
(
≥≥8 9
)
≥≥9 :
;
≥≥: ;
}
¥¥ 	
}
µµ 
}∂∂ ø
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Utilities\IPropertyPreview.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
public 

	interface 
IPropertyPreview %
{		 
void 
GatherProperties 
( 
PlayableDirector .
director/ 7
,7 8
IPropertyCollector9 K
driverL R
)R S
;S T
} 
} Á%
ÇD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\ClipCaps.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[ 
Flags 

]
 
public		 

enum		 
ClipCaps		 
{

 
None 
= 
$num 
, 
Looping 
= 
$num 
<< 
$num  
,  !
Extrapolation 
= 
$num 
<< 
$num  
,  !
ClipIn 
= 
$num 
<< 
$num  
,  !
SpeedMultiplier"" 
="" 
$num"" 
<<"" 
$num""  
,""  !
Blending'' 
='' 
$num'' 
<<'' 
$num''  
,''  !
	AutoScale-- 
=-- 
$num-- 
<<-- 
$num--  
|--! "
SpeedMultiplier--# 2
,--2 3
All22 
=22 
~22 
None22 
}33 
static55 

class55 &
TimelineClipCapsExtensions55 +
{66 
public77 
static77 
bool77 
SupportsLooping77 *
(77* +
this77+ /
TimelineClip770 <
clip77= A
)77A B
{88 	
return99 
clip99 
!=99 
null99 
&&99  "
(99# $
clip99$ (
.99( )
clipCaps99) 1
&992 3
ClipCaps994 <
.99< =
Looping99= D
)99D E
!=99F H
ClipCaps99I Q
.99Q R
None99R V
;99V W
}:: 	
public<< 
static<< 
bool<< !
SupportsExtrapolation<< 0
(<<0 1
this<<1 5
TimelineClip<<6 B
clip<<C G
)<<G H
{== 	
return>> 
clip>> 
!=>> 
null>> 
&&>>  "
(>># $
clip>>$ (
.>>( )
clipCaps>>) 1
&>>2 3
ClipCaps>>4 <
.>>< =
Extrapolation>>= J
)>>J K
!=>>L N
ClipCaps>>O W
.>>W X
None>>X \
;>>\ ]
}?? 	
publicAA 
staticAA 
boolAA 
SupportsClipInAA )
(AA) *
thisAA* .
TimelineClipAA/ ;
clipAA< @
)AA@ A
{BB 	
returnCC 
clipCC 
!=CC 
nullCC 
&&CC  "
(CC# $
clipCC$ (
.CC( )
clipCapsCC) 1
&CC2 3
ClipCapsCC4 <
.CC< =
ClipInCC= C
)CCC D
!=CCE G
ClipCapsCCH P
.CCP Q
NoneCCQ U
;CCU V
}DD 	
publicFF 
staticFF 
boolFF #
SupportsSpeedMultiplierFF 2
(FF2 3
thisFF3 7
TimelineClipFF8 D
clipFFE I
)FFI J
{GG 	
returnHH 
clipHH 
!=HH 
nullHH 
&&HH  "
(HH# $
clipHH$ (
.HH( )
clipCapsHH) 1
&HH2 3
ClipCapsHH4 <
.HH< =
SpeedMultiplierHH= L
)HHL M
!=HHN P
ClipCapsHHQ Y
.HHY Z
NoneHHZ ^
;HH^ _
}II 	
publicKK 
staticKK 
boolKK 
SupportsBlendingKK +
(KK+ ,
thisKK, 0
TimelineClipKK1 =
clipKK> B
)KKB C
{LL 	
returnMM 
clipMM 
!=MM 
nullMM 
&&MM  "
(MM# $
clipMM$ (
.MM( )
clipCapsMM) 1
&MM2 3
ClipCapsMM4 <
.MM< =
BlendingMM= E
)MME F
!=MMG I
ClipCapsMMJ R
.MMR S
NoneMMS W
;MMW X
}NN 	
publicPP 
staticPP 
boolPP 
HasAllPP !
(PP! "
thisPP" &
ClipCapsPP' /
capsPP0 4
,PP4 5
ClipCapsPP6 >
flagsPP? D
)PPD E
{QQ 	
returnRR 
(RR 
capsRR 
&RR 
flagsRR  
)RR  !
==RR" $
flagsRR% *
;RR* +
}SS 	
publicUU 
staticUU 
boolUU 
HasAnyUU !
(UU! "
thisUU" &
ClipCapsUU' /
capsUU0 4
,UU4 5
ClipCapsUU6 >
flagsUU? D
)UUD E
{VV 	
returnWW 
(WW 
capsWW 
&WW 
flagsWW  
)WW  !
!=WW" $
$numWW% &
;WW& '
}XX 	
}YY 
}ZZ ﬂó
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\TimelineAsset_CreateRemove.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{		 
public

 

partial

 
class

 
TimelineAsset

 &
{ 
public 

TrackAsset 
CreateTrack %
(% &
Type& *
type+ /
,/ 0

TrackAsset1 ;
parent< B
,B C
stringD J
nameK O
)O P
{ 	
if 
( 
parent 
!= 
null 
&& !
parent" (
.( )
timelineAsset) 6
!=7 9
this: >
)> ?
throw 
new %
InvalidOperationException 3
(3 4
$str4 k
)k l
;l m
if 
( 
! 
typeof 
( 

TrackAsset "
)" #
.# $
IsAssignableFrom$ 4
(4 5
type5 9
)9 :
): ;
throw 
new %
InvalidOperationException 3
(3 4
$str4 Y
)Y Z
;Z [
if 
( 
parent 
!= 
null 
) 
{ 
if   
(   
!   #
TimelineCreateUtilities   ,
.  , -
ValidateParentTrack  - @
(  @ A
parent  A G
,  G H
type  I M
)  M N
)  N O
throw!! 
new!! %
InvalidOperationException!! 7
(!!7 8
$str!!8 X
+!!Y Z
type!![ _
.!!_ `
Name!!` d
+!!e f
$str!!g ~
+	!! Ä
parent
!!Å á
.
!!á à
GetType
!!à è
(
!!è ê
)
!!ê ë
.
!!ë í
Name
!!í ñ
)
!!ñ ó
;
!!ó ò
}"" 
var%% 
actualParent%% 
=%% 
parent%% %
!=%%& (
null%%) -
?%%. /
parent%%0 6
as%%7 9
PlayableAsset%%: G
:%%H I
this%%J N
;%%N O
TimelineUndo&& 
.&& 
PushUndo&& !
(&&! "
actualParent&&" .
,&&. /
$str&&0 >
)&&> ?
;&&? @
var(( 
baseName(( 
=(( 
name(( 
;((  
if)) 
()) 
string)) 
.)) 
IsNullOrEmpty)) $
())$ %
baseName))% -
)))- .
))). /
{** 
baseName++ 
=++ 
type++ 
.++  
Name++  $
;++$ %
baseName-- 
=-- 
UnityEditor-- &
.--& '
ObjectNames--' 2
.--2 3
NicifyVariableName--3 E
(--E F
baseName--F N
)--N O
;--O P
}// 
var11 
	trackName11 
=11 
baseName11 $
;11$ %
if22 
(22 
parent22 
!=22 
null22 
)22 
	trackName33 
=33 #
TimelineCreateUtilities33 3
.333 4#
GenerateUniqueActorName334 K
(33K L
parent33L R
.33R S
subTracksObjects33S c
,33c d
baseName33e m
)33m n
;33n o
else44 
	trackName55 
=55 #
TimelineCreateUtilities55 3
.553 4#
GenerateUniqueActorName554 K
(55K L
trackObjects55L X
,55X Y
baseName55Z b
)55b c
;55c d

TrackAsset77 
newTrack77 
=77  !
AllocateTrack77" /
(77/ 0
parent770 6
,776 7
	trackName778 A
,77A B
type77C G
)77G H
;77H I
if88 
(88 
newTrack88 
!=88 
null88  
)88  !
{99 
newTrack:: 
.:: 
name:: 
=:: 
	trackName::  )
;::) *#
TimelineCreateUtilities;; '
.;;' (
SaveAssetIntoObject;;( ;
(;;; <
newTrack;;< D
,;;D E
actualParent;;F R
);;R S
;;;S T
}<< 
return== 
newTrack== 
;== 
}>> 	
publicJJ 
TJJ 
CreateTrackJJ 
<JJ 
TJJ 
>JJ 
(JJ  

TrackAssetJJ  *
parentJJ+ 1
,JJ1 2
stringJJ3 9
	trackNameJJ: C
)JJC D
whereJJE J
TJJK L
:JJM N

TrackAssetJJO Y
,JJY Z
newJJ[ ^
(JJ^ _
)JJ_ `
{KK 	
returnLL 
(LL 
TLL 
)LL 
CreateTrackLL !
(LL! "
typeofLL" (
(LL( )
TLL) *
)LL* +
,LL+ ,
parentLL- 3
,LL3 4
	trackNameLL5 >
)LL> ?
;LL? @
}MM 	
publicUU 
TUU 
CreateTrackUU 
<UU 
TUU 
>UU 
(UU  
stringUU  &
	trackNameUU' 0
)UU0 1
whereUU2 7
TUU8 9
:UU: ;

TrackAssetUU< F
,UUF G
newUUH K
(UUK L
)UUL M
{VV 	
returnWW 
(WW 
TWW 
)WW 
CreateTrackWW !
(WW! "
typeofWW" (
(WW( )
TWW) *
)WW* +
,WW+ ,
nullWW- 1
,WW1 2
	trackNameWW3 <
)WW< =
;WW= >
}XX 	
public__ 
T__ 
CreateTrack__ 
<__ 
T__ 
>__ 
(__  
)__  !
where__" '
T__( )
:__* +

TrackAsset__, 6
,__6 7
new__8 ;
(__; <
)__< =
{`` 	
returnaa 
(aa 
Taa 
)aa 
CreateTrackaa !
(aa! "
typeofaa" (
(aa( )
Taa) *
)aa* +
,aa+ ,
nullaa- 1
,aa1 2
nullaa3 7
)aa7 8
;aa8 9
}bb 	
publicll 
boolll 

DeleteClipll 
(ll 
TimelineClipll +
clipll, 0
)ll0 1
{mm 	
ifnn 
(nn 
clipnn 
==nn 
nullnn 
||nn 
clipnn  $
.nn$ %
parentTracknn% 0
==nn1 3
nullnn4 8
)nn8 9
{oo 
returnpp 
falsepp 
;pp 
}qq 
ifrr 
(rr 
thisrr 
!=rr 
cliprr 
.rr 
parentTrackrr (
.rr( )
timelineAssetrr) 6
)rr6 7
{ss 
Debugtt 
.tt 
LogErrortt 
(tt 
$strtt H
)ttH I
;ttI J
returnuu 
falseuu 
;uu 
}vv 
TimelineUndoxx 
.xx 
PushUndoxx !
(xx! "
clipxx" &
.xx& '
parentTrackxx' 2
,xx2 3
$strxx4 A
)xxA B
;xxB C
ifyy 
(yy 
clipyy 
.yy 
curvesyy 
!=yy 
nullyy #
)yy# $
{zz 
TimelineUndo{{ 
.{{ 
PushDestroyUndo{{ ,
({{, -
this{{- 1
,{{1 2
clip{{3 7
.{{7 8
parentTrack{{8 C
,{{C D
clip{{E I
.{{I J
curves{{J P
){{P Q
;{{Q R
}|| 
if 
( 
clip 
. 
asset 
!= 
null "
)" #
{
ÄÄ %
DeleteRecordedAnimation
ÅÅ '
(
ÅÅ' (
clip
ÅÅ( ,
)
ÅÅ, -
;
ÅÅ- .
string
ÖÖ 
path
ÖÖ 
=
ÖÖ 
UnityEditor
ÖÖ )
.
ÖÖ) *
AssetDatabase
ÖÖ* 7
.
ÖÖ7 8
GetAssetPath
ÖÖ8 D
(
ÖÖD E
clip
ÖÖE I
.
ÖÖI J
asset
ÖÖJ O
)
ÖÖO P
;
ÖÖP Q
if
ÜÜ 
(
ÜÜ 
path
ÜÜ 
==
ÜÜ 
UnityEditor
ÜÜ '
.
ÜÜ' (
AssetDatabase
ÜÜ( 5
.
ÜÜ5 6
GetAssetPath
ÜÜ6 B
(
ÜÜB C
this
ÜÜC G
)
ÜÜG H
)
ÜÜH I
{
àà 
TimelineUndo
ââ  
.
ââ  !
PushDestroyUndo
ââ! 0
(
ââ0 1
this
ââ1 5
,
ââ5 6
clip
ââ7 ;
.
ââ; <
parentTrack
ââ< G
,
ââG H
clip
ââI M
.
ââM N
asset
ââN S
)
ââS T
;
ââT U
}
ää 
}
ãã 
var
çç 
clipParentTrack
çç 
=
çç  !
clip
çç" &
.
çç& '
parentTrack
çç' 2
;
çç2 3
clipParentTrack
éé 
.
éé 

RemoveClip
éé &
(
éé& '
clip
éé' +
)
éé+ ,
;
éé, -
clipParentTrack
èè 
.
èè )
CalculateExtrapolationTimes
èè 7
(
èè7 8
)
èè8 9
;
èè9 :
return
ëë 
true
ëë 
;
ëë 
}
íí 	
public
ôô 
bool
ôô 
DeleteTrack
ôô 
(
ôô  

TrackAsset
ôô  *
track
ôô+ 0
)
ôô0 1
{
öö 	
if
õõ 
(
õõ 
track
õõ 
.
õõ 
timelineAsset
õõ #
!=
õõ$ &
this
õõ' +
)
õõ+ ,
return
úú 
false
úú 
;
úú 
TimelineUndo
üü 
.
üü 
PushUndo
üü !
(
üü! "
track
üü" '
,
üü' (
$str
üü) 7
)
üü7 8
;
üü8 9
TimelineUndo
†† 
.
†† 
PushUndo
†† !
(
††! "
this
††" &
,
††& '
$str
††( 6
)
††6 7
;
††7 8

TrackAsset
¢¢ 
parent
¢¢ 
=
¢¢ 
track
¢¢  %
.
¢¢% &
parent
¢¢& ,
as
¢¢- /

TrackAsset
¢¢0 :
;
¢¢: ;
if
££ 
(
££ 
parent
££ 
!=
££ 
null
££ 
)
££ 
TimelineUndo
§§ 
.
§§ 
PushUndo
§§ %
(
§§% &
parent
§§& ,
,
§§, -
$str
§§. <
)
§§< =
;
§§= >
var
¶¶ 
children
¶¶ 
=
¶¶ 
track
¶¶  
.
¶¶  !
GetChildTracks
¶¶! /
(
¶¶/ 0
)
¶¶0 1
;
¶¶1 2
foreach
ßß 
(
ßß 
var
ßß 
child
ßß 
in
ßß !
children
ßß" *
)
ßß* +
{
®® 
DeleteTrack
©© 
(
©© 
child
©© !
)
©©! "
;
©©" #
}
™™ %
DeleteRecordedAnimation
¨¨ #
(
¨¨# $
track
¨¨$ )
)
¨¨) *
;
¨¨* +
var
ÆÆ 
clipsToDelete
ÆÆ 
=
ÆÆ 
new
ÆÆ  #
List
ÆÆ$ (
<
ÆÆ( )
TimelineClip
ÆÆ) 5
>
ÆÆ5 6
(
ÆÆ6 7
track
ÆÆ7 <
.
ÆÆ< =
clips
ÆÆ= B
)
ÆÆB C
;
ÆÆC D
foreach
ØØ 
(
ØØ 
var
ØØ 
clip
ØØ 
in
ØØ  
clipsToDelete
ØØ! .
)
ØØ. /
{
∞∞ 

DeleteClip
±± 
(
±± 
clip
±± 
)
±±  
;
±±  !
}
≤≤ 
RemoveTrack
≥≥ 
(
≥≥ 
track
≥≥ 
)
≥≥ 
;
≥≥ 
TimelineUndo
µµ 
.
µµ 
PushDestroyUndo
µµ (
(
µµ( )
this
µµ) -
,
µµ- .
this
µµ/ 3
,
µµ3 4
track
µµ5 :
)
µµ: ;
;
µµ; <
return
∑∑ 
true
∑∑ 
;
∑∑ 
}
∏∏ 	
internal
∫∫ 
void
∫∫ !
MoveLastTrackBefore
∫∫ )
(
∫∫) *

TrackAsset
∫∫* 4
asset
∫∫5 :
)
∫∫: ;
{
ªª 	
if
ºº 
(
ºº 
m_Tracks
ºº 
==
ºº 
null
ºº  
||
ºº! #
m_Tracks
ºº$ ,
.
ºº, -
Count
ºº- 2
<
ºº3 4
$num
ºº5 6
||
ºº7 9
asset
ºº: ?
==
ºº@ B
null
ººC G
)
ººG H
return
ΩΩ 
;
ΩΩ 
var
øø 
	lastTrack
øø 
=
øø 
m_Tracks
øø $
[
øø$ %
m_Tracks
øø% -
.
øø- .
Count
øø. 3
-
øø4 5
$num
øø6 7
]
øø7 8
;
øø8 9
if
¿¿ 
(
¿¿ 
	lastTrack
¿¿ 
==
¿¿ 
asset
¿¿ "
)
¿¿" #
return
¡¡ 
;
¡¡ 
for
√√ 
(
√√ 
int
√√ 
i
√√ 
=
√√ 
$num
√√ 
;
√√ 
i
√√ 
<
√√ 
m_Tracks
√√  (
.
√√( )
Count
√√) .
-
√√/ 0
$num
√√1 2
;
√√2 3
i
√√4 5
++
√√5 7
)
√√7 8
{
ƒƒ 
if
≈≈ 
(
≈≈ 
m_Tracks
≈≈ 
[
≈≈ 
i
≈≈ 
]
≈≈ 
==
≈≈  "
asset
≈≈# (
)
≈≈( )
{
∆∆ 
for
«« 
(
«« 
int
«« 
j
«« 
=
««  
m_Tracks
««! )
.
««) *
Count
««* /
-
««0 1
$num
««2 3
;
««3 4
j
««5 6
>
««7 8
i
««9 :
;
««: ;
j
««< =
--
««= ?
)
««? @
m_Tracks
»»  
[
»»  !
j
»»! "
]
»»" #
=
»»$ %
m_Tracks
»»& .
[
»». /
j
»»/ 0
-
»»1 2
$num
»»3 4
]
»»4 5
;
»»5 6
m_Tracks
…… 
[
…… 
i
…… 
]
…… 
=
……  !
	lastTrack
……" +
;
……+ ,

Invalidate
   
(
   
)
    
;
    !
break
ÀÀ 
;
ÀÀ 
}
ÃÃ 
}
ÕÕ 
}
ŒŒ 	
internal
–– 

TrackAsset
–– 
AllocateTrack
–– )
(
––) *

TrackAsset
––* 4
trackAssetParent
––5 E
,
––E F
string
––G M
	trackName
––N W
,
––W X
Type
––Y ]
	trackType
––^ g
)
––g h
{
—— 	
if
““ 
(
““ 
trackAssetParent
““  
!=
““! #
null
““$ (
&&
““) +
trackAssetParent
““, <
.
““< =
timelineAsset
““= J
!=
““K M
this
““N R
)
““R S
throw
”” 
new
”” '
InvalidOperationException
”” 3
(
””3 4
$str
””4 k
)
””k l
;
””l m
if
’’ 
(
’’ 
!
’’ 
typeof
’’ 
(
’’ 

TrackAsset
’’ "
)
’’" #
.
’’# $
IsAssignableFrom
’’$ 4
(
’’4 5
	trackType
’’5 >
)
’’> ?
)
’’? @
throw
÷÷ 
new
÷÷ '
InvalidOperationException
÷÷ 3
(
÷÷3 4
$str
÷÷4 Y
)
÷÷Y Z
;
÷÷Z [
var
ÿÿ 
asset
ÿÿ 
=
ÿÿ 
(
ÿÿ 

TrackAsset
ÿÿ #
)
ÿÿ# $
CreateInstance
ÿÿ$ 2
(
ÿÿ2 3
	trackType
ÿÿ3 <
)
ÿÿ< =
;
ÿÿ= >
asset
ŸŸ 
.
ŸŸ 
name
ŸŸ 
=
ŸŸ 
	trackName
ŸŸ "
;
ŸŸ" #
if
€€ 
(
€€ 
trackAssetParent
€€  
!=
€€! #
null
€€$ (
)
€€( )
trackAssetParent
‹‹  
.
‹‹  !
AddChild
‹‹! )
(
‹‹) *
asset
‹‹* /
)
‹‹/ 0
;
‹‹0 1
else
›› 
AddTrackInternal
ﬁﬁ  
(
ﬁﬁ  !
asset
ﬁﬁ! &
)
ﬁﬁ& '
;
ﬁﬁ' (
return
‡‡ 
asset
‡‡ 
;
‡‡ 
}
·· 	
void
„„ %
DeleteRecordedAnimation
„„ $
(
„„$ %

TrackAsset
„„% /
track
„„0 5
)
„„5 6
{
‰‰ 	
var
ÂÂ 
	animTrack
ÂÂ 
=
ÂÂ 
track
ÂÂ !
as
ÂÂ" $
AnimationTrack
ÂÂ% 3
;
ÂÂ3 4
if
ÊÊ 
(
ÊÊ 
	animTrack
ÊÊ 
!=
ÊÊ 
null
ÊÊ !
&&
ÊÊ" $
	animTrack
ÊÊ% .
.
ÊÊ. /
infiniteClip
ÊÊ/ ;
!=
ÊÊ< >
null
ÊÊ? C
)
ÊÊC D
TimelineUndo
ÁÁ 
.
ÁÁ 
PushDestroyUndo
ÁÁ ,
(
ÁÁ, -
this
ÁÁ- 1
,
ÁÁ1 2
track
ÁÁ3 8
,
ÁÁ8 9
	animTrack
ÁÁ: C
.
ÁÁC D
infiniteClip
ÁÁD P
)
ÁÁP Q
;
ÁÁQ R
if
ÈÈ 
(
ÈÈ 
track
ÈÈ 
.
ÈÈ 
curves
ÈÈ 
!=
ÈÈ 
null
ÈÈ  $
)
ÈÈ$ %
TimelineUndo
ÍÍ 
.
ÍÍ 
PushDestroyUndo
ÍÍ ,
(
ÍÍ, -
this
ÍÍ- 1
,
ÍÍ1 2
track
ÍÍ3 8
,
ÍÍ8 9
track
ÍÍ: ?
.
ÍÍ? @
curves
ÍÍ@ F
)
ÍÍF G
;
ÍÍG H
}
ÎÎ 	
void
ÌÌ %
DeleteRecordedAnimation
ÌÌ $
(
ÌÌ$ %
TimelineClip
ÌÌ% 1
clip
ÌÌ2 6
)
ÌÌ6 7
{
ÓÓ 	
if
ÔÔ 
(
ÔÔ 
clip
ÔÔ 
==
ÔÔ 
null
ÔÔ 
)
ÔÔ 
return
 
;
 
if
ÚÚ 
(
ÚÚ 
clip
ÚÚ 
.
ÚÚ 
curves
ÚÚ 
!=
ÚÚ 
null
ÚÚ #
)
ÚÚ# $
TimelineUndo
ÛÛ 
.
ÛÛ 
PushDestroyUndo
ÛÛ ,
(
ÛÛ, -
this
ÛÛ- 1
,
ÛÛ1 2
clip
ÛÛ3 7
.
ÛÛ7 8
parentTrack
ÛÛ8 C
,
ÛÛC D
clip
ÛÛE I
.
ÛÛI J
curves
ÛÛJ P
)
ÛÛP Q
;
ÛÛQ R
if
ıı 
(
ıı 
!
ıı 
clip
ıı 
.
ıı 

recordable
ıı  
)
ıı  !
return
ˆˆ 
;
ˆˆ $
AnimationPlayableAsset
¯¯ "
asset
¯¯# (
=
¯¯) *
clip
¯¯+ /
.
¯¯/ 0
asset
¯¯0 5
as
¯¯6 8$
AnimationPlayableAsset
¯¯9 O
;
¯¯O P
if
˘˘ 
(
˘˘ 
asset
˘˘ 
==
˘˘ 
null
˘˘ 
||
˘˘  
asset
˘˘! &
.
˘˘& '
clip
˘˘' +
==
˘˘, .
null
˘˘/ 3
)
˘˘3 4
return
˙˙ 
;
˙˙ 
TimelineUndo
¸¸ 
.
¸¸ 
PushDestroyUndo
¸¸ (
(
¸¸( )
this
¸¸) -
,
¸¸- .
asset
¸¸/ 4
,
¸¸4 5
asset
¸¸6 ;
.
¸¸; <
clip
¸¸< @
)
¸¸@ A
;
¸¸A B
}
˝˝ 	
}
˛˛ 
}ˇˇ Á
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Utilities\IPropertyCollector.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
public 

	interface 
IPropertyCollector '
{		 
void  
PushActiveGameObject !
(! "

GameObject" ,

gameObject- 7
)7 8
;8 9
void 
PopActiveGameObject  
(  !
)! "
;" #
void 
AddFromClip 
( 
AnimationClip &
clip' +
)+ ,
;, -
void 
AddFromClips 
( 
IEnumerable %
<% &
AnimationClip& 3
>3 4
clips5 :
): ;
;; <
void)) 
AddFromName)) 
<)) 
T)) 
>)) 
()) 
string)) "
name))# '
)))' (
where))) .
T))/ 0
:))1 2
	Component))3 <
;))< =
void22 
AddFromName22 
(22 
string22 
name22  $
)22$ %
;22% &
void99 
AddFromClip99 
(99 

GameObject99 #
obj99$ '
,99' (
AnimationClip99) 6
clip997 ;
)99; <
;99< =
void@@ 
AddFromClips@@ 
(@@ 

GameObject@@ $
obj@@% (
,@@( )
IEnumerable@@* 5
<@@5 6
AnimationClip@@6 C
>@@C D
clips@@E J
)@@J K
;@@K L
voidHH 
AddFromNameHH 
<HH 
THH 
>HH 
(HH 

GameObjectHH &
objHH' *
,HH* +
stringHH, 2
nameHH3 7
)HH7 8
whereHH9 >
THH? @
:HHA B
	ComponentHHC L
;HHL M
voidOO 
AddFromNameOO 
(OO 

GameObjectOO #
objOO$ '
,OO' (
stringOO) /
nameOO0 4
)OO4 5
;OO5 6
voidVV 
AddFromNameVV 
(VV 
	ComponentVV "
	componentVV# ,
,VV, -
stringVV. 4
nameVV5 9
)VV9 :
;VV: ;
void]] 
AddFromComponent]] 
(]] 

GameObject]] (
obj]]) ,
,]], -
	Component]]. 7
	component]]8 A
)]]A B
;]]B C
voiddd 
AddObjectPropertiesdd  
(dd  !
Objectdd! '
objdd( +
,dd+ ,
AnimationClipdd- :
clipdd; ?
)dd? @
;dd@ A
}ee 
}ff ‹S
äD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Audio\AudioTrack.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[ 
Serializable 
] 
[ 
TrackClipType 
( 
typeof 
( 
AudioPlayableAsset ,
), -
,- .
false/ 4
)4 5
]5 6
[ 
TrackBindingType 
( 
typeof 
( 
AudioSource (
)( )
)) *
]* +
[ 
ExcludeFromPreset 
] 
public 

class 

AudioTrack 
: 

TrackAsset (
{ 
[ 	
SerializeField	 
]  
AudioMixerProperties 
m_TrackProperties .
=/ 0
new1 4 
AudioMixerProperties5 I
(I J
)J K
;K L
Playable 
m_LiveMixerPlayable $
=% &
Playable' /
./ 0
Null0 4
;4 5
public 
TimelineClip 

CreateClip &
(& '
	AudioClip' 0
clip1 5
)5 6
{ 	
if   
(   
clip   
==   
null   
)   
return!! 
null!! 
;!! 
var## 
newClip## 
=## 
CreateDefaultClip## +
(##+ ,
)##, -
;##- .
var%% 

audioAsset%% 
=%% 
newClip%% $
.%%$ %
asset%%% *
as%%+ -
AudioPlayableAsset%%. @
;%%@ A
if&& 
(&& 

audioAsset&& 
!=&& 
null&& "
)&&" #

audioAsset'' 
.'' 
clip'' 
=''  !
clip''" &
;''& '
newClip)) 
.)) 
duration)) 
=)) 
clip)) #
.))# $
length))$ *
;))* +
newClip** 
.** 
displayName** 
=**  !
clip**" &
.**& '
name**' +
;**+ ,
return,, 
newClip,, 
;,, 
}-- 	
internal// 
override// 
Playable// "
CompileClips//# /
(/// 0
PlayableGraph//0 =
graph//> C
,//C D

GameObject//E O
go//P R
,//R S
IList//T Y
<//Y Z
TimelineClip//Z f
>//f g
timelineClips//h u
,//u v
IntervalTree	//w É
<
//É Ñ
RuntimeElement
//Ñ í
>
//í ì
tree
//î ò
)
//ò ô
{00 	
var11 
clipBlender11 
=11 
AudioMixerPlayable11 0
.110 1
Create111 7
(117 8
graph118 =
,11= >
timelineClips11? L
.11L M
Count11M R
)11R S
;11S T
clipBlender44 
.44 
	GetHandle44 !
(44! "
)44" #
.44# $
SetScriptInstance44$ 5
(445 6
m_TrackProperties446 G
.44G H
Clone44H M
(44M N
)44N O
)44O P
;44P Q
m_LiveMixerPlayable55 
=55  !
clipBlender55" -
;55- .
for;; 
(;; 
int;; 
i;; 
=;; 
$num;; 
;;; 
i;; 
<;; 
timelineClips;;  -
.;;- .
Count;;. 3
;;;3 4
i;;5 6
++;;6 8
);;8 9
{<< 
var== 
c== 
=== 
timelineClips== %
[==% &
i==& '
]==' (
;==( )
var>> 
asset>> 
=>> 
c>> 
.>> 
asset>> #
as>>$ &
PlayableAsset>>' 4
;>>4 5
if?? 
(?? 
asset?? 
==?? 
null?? !
)??! "
continue@@ 
;@@ 
varBB 
bufferBB 
=BB 
$numBB !
;BB! "
varCC 

audioAssetCC 
=CC  
cCC! "
.CC" #
assetCC# (
asCC) +
AudioPlayableAssetCC, >
;CC> ?
ifDD 
(DD 

audioAssetDD 
!=DD !
nullDD" &
)DD& '
bufferEE 
=EE 

audioAssetEE '
.EE' (
bufferingTimeEE( 5
;EE5 6
varGG 
sourceGG 
=GG 
assetGG "
.GG" #
CreatePlayableGG# 1
(GG1 2
graphGG2 7
,GG7 8
goGG9 ;
)GG; <
;GG< =
ifHH 
(HH 
!HH 
sourceHH 
.HH 
IsValidHH #
(HH# $
)HH$ %
)HH% &
continueII 
;II 
ifKK 
(KK 
sourceKK 
.KK 
IsPlayableOfTypeKK +
<KK+ ,
AudioClipPlayableKK, =
>KK= >
(KK> ?
)KK? @
)KK@ A
{LL 
varNN 
audioClipPlayableNN )
=NN* +
(NN, -
AudioClipPlayableNN- >
)NN> ?
sourceNN? E
;NNE F
varOO 
audioClipPropertiesOO +
=OO, -
audioClipPlayableOO. ?
.OO? @
	GetHandleOO@ I
(OOI J
)OOJ K
.OOK L
	GetObjectOOL U
<OOU V
AudioClipPropertiesOOV i
>OOi j
(OOj k
)OOk l
;OOl m
audioClipPlayableQQ %
.QQ% &
	SetVolumeQQ& /
(QQ/ 0
MathfQQ0 5
.QQ5 6
Clamp01QQ6 =
(QQ= >
m_TrackPropertiesQQ> O
.QQO P
volumeQQP V
*QQW X
audioClipPropertiesQQY l
.QQl m
volumeQQm s
)QQs t
)QQt u
;QQu v
audioClipPlayableRR %
.RR% &
SetStereoPanRR& 2
(RR2 3
MathfRR3 8
.RR8 9
ClampRR9 >
(RR> ?
m_TrackPropertiesRR? P
.RRP Q
	stereoPanRRQ Z
,RRZ [
-RR\ ]
$numRR] a
,RRa b
$numRRc g
)RRg h
)RRh i
;RRi j
audioClipPlayableSS %
.SS% &
SetSpatialBlendSS& 5
(SS5 6
MathfSS6 ;
.SS; <
Clamp01SS< C
(SSC D
m_TrackPropertiesSSD U
.SSU V
spatialBlendSSV b
)SSb c
)SSc d
;SSd e
}TT 
treeVV 
.VV 
AddVV 
(VV 
newVV 
ScheduleRuntimeClipVV 0
(VV0 1
cVV1 2
,VV2 3
sourceVV4 :
,VV: ;
clipBlenderVV< G
,VVG H
bufferVVI O
)VVO P
)VVP Q
;VVQ R
graphWW 
.WW 
ConnectWW 
(WW 
sourceWW $
,WW$ %
$numWW& '
,WW' (
clipBlenderWW) 4
,WW4 5
iWW6 7
)WW7 8
;WW8 9
sourceXX 
.XX 
SetSpeedXX 
(XX  
cXX  !
.XX! "
	timeScaleXX" +
)XX+ ,
;XX, -
sourceYY 
.YY 
SetDurationYY "
(YY" #
cYY# $
.YY$ % 
extrapolatedDurationYY% 9
)YY9 :
;YY: ;
clipBlenderZZ 
.ZZ 
SetInputWeightZZ *
(ZZ* +
sourceZZ+ 1
,ZZ1 2
$numZZ3 7
)ZZ7 8
;ZZ8 9
}[[ #
ConfigureTrackAnimation]] #
(]]# $
tree]]$ (
,]]( )
go]]* ,
,]], -
clipBlender]]. 9
)]]9 :
;]]: ;
return__ 
clipBlender__ 
;__ 
}`` 	
publiccc 
overridecc 
IEnumerablecc #
<cc# $
PlayableBindingcc$ 3
>cc3 4
outputscc5 <
{dd 	
getee 
{ee 
yieldee 
returnee  
AudioPlayableBindingee 3
.ee3 4
Createee4 :
(ee: ;
nameee; ?
,ee? @
thiseeA E
)eeE F
;eeF G
}eeH I
}ff 	
internalii 
voidii 
LiveLinkii 
(ii 
)ii  
{jj 	
ifkk 
(kk 
!kk 
m_LiveMixerPlayablekk $
.kk$ %
IsValidkk% ,
(kk, -
)kk- .
)kk. /
returnll 
;ll 
varnn  
audioMixerPropertiesnn $
=nn% &
m_LiveMixerPlayablenn' :
.nn: ;
	GetHandlenn; D
(nnD E
)nnE F
.nnF G
	GetObjectnnG P
<nnP Q 
AudioMixerPropertiesnnQ e
>nne f
(nnf g
)nng h
;nnh i
ifpp 
(pp  
audioMixerPropertiespp $
==pp% '
nullpp( ,
)pp, -
returnqq 
;qq  
audioMixerPropertiesss  
.ss  !
volumess! '
=ss( )
m_TrackPropertiesss* ;
.ss; <
volumess< B
;ssB C 
audioMixerPropertiestt  
.tt  !
	stereoPantt! *
=tt+ ,
m_TrackPropertiestt- >
.tt> ?
	stereoPantt? H
;ttH I 
audioMixerPropertiesuu  
.uu  !
spatialBlenduu! -
=uu. /
m_TrackPropertiesuu0 A
.uuA B
spatialBlenduuB N
;uuN O
}vv 	
voidzz 

OnValidatezz 
(zz 
)zz 
{{{ 	
m_TrackProperties|| 
.|| 
volume|| $
=||% &
Mathf||' ,
.||, -
Clamp01||- 4
(||4 5
m_TrackProperties||5 F
.||F G
volume||G M
)||M N
;||N O
m_TrackProperties}} 
.}} 
	stereoPan}} '
=}}( )
Mathf}}* /
.}}/ 0
Clamp}}0 5
(}}5 6
m_TrackProperties}}6 G
.}}G H
	stereoPan}}H Q
,}}Q R
-}}S T
$num}}T X
,}}X Y
$num}}Z ^
)}}^ _
;}}_ `
m_TrackProperties~~ 
.~~ 
spatialBlend~~ *
=~~+ ,
Mathf~~- 2
.~~2 3
Clamp01~~3 :
(~~: ;
m_TrackProperties~~; L
.~~L M
spatialBlend~~M Y
)~~Y Z
;~~Z [
} 	
}
ÄÄ 
}ÅÅ öœ
áD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\TimelineAsset.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[

 
ExcludeFromPreset

 
]

 
[ 
Serializable 
] 
public 

partial 
class 
TimelineAsset &
:' (
PlayableAsset) 6
,6 7*
ISerializationCallbackReceiver8 V
,V W
ITimelineClipAssetX j
,j k
IPropertyPreviewl |
{ 
public 
enum 
DurationMode  
{ 	
BasedOnClips 
, 
FixedLength 
} 	
[   	
Serializable  	 
]   
public!! 
class!! 
EditorSettings!! #
{"" 	
internal## 
static## 
readonly## $
float##% *
kMinFps##+ 2
=##3 4
(##5 6
float##6 ;
)##; <
TimeUtility##< G
.##G H
kFrameRateEpsilon##H Y
;##Y Z
internal$$ 
static$$ 
readonly$$ $
float$$% *
kMaxFps$$+ 2
=$$3 4
$num$$5 <
;$$< =
internal%% 
static%% 
readonly%% $
float%%% *
kDefaultFps%%+ 6
=%%7 8
$num%%9 >
;%%> ?
[&& 
HideInInspector&& 
,&& 
SerializeField&& ,
]&&, -
float&&. 3
m_Framerate&&4 ?
=&&@ A
kDefaultFps&&B M
;&&M N
['' 
HideInInspector'' 
,'' 
SerializeField'' ,
]'', -
bool''. 2
m_ScenePreview''3 A
=''B C
true''D H
;''H I
public,, 
float,, 
fps,, 
{-- 
get.. 
{// 
return00 
m_Framerate00 &
;00& '
}11 
set22 
{33 
m_Framerate44 
=44  !
GetValidFramerate44" 3
(443 4
value444 9
)449 :
;44: ;
}55 
}66 
publicEE 
boolEE 
scenePreviewEE $
{FF 
getGG 
=>GG 
m_ScenePreviewGG %
;GG% &
setHH 
=>HH 
m_ScenePreviewHH %
=HH& '
valueHH( -
;HH- .
}II 
}JJ 	
[LL 	
HideInInspectorLL	 
,LL 
SerializeFieldLL (
]LL( )
ListLL* .
<LL. /
ScriptableObjectLL/ ?
>LL? @
m_TracksLLA I
;LLI J
[MM 	
HideInInspectorMM	 
,MM 
SerializeFieldMM (
]MM( )
doubleMM* 0
m_FixedDurationMM1 @
;MM@ A
[NN 	
HideInInspectorNN	 
,NN 
NonSerializedNN '
]NN' (

TrackAssetNN) 3
[NN3 4
]NN4 5
m_CacheOutputTracksNN6 I
;NNI J
[OO 	
HideInInspectorOO	 
,OO 
NonSerializedOO '
]OO' (
ListOO) -
<OO- .

TrackAssetOO. 8
>OO8 9
m_CacheRootTracksOO: K
;OOK L
[PP 	
HideInInspectorPP	 
,PP 
NonSerializedPP '
]PP' (
ListPP) -
<PP- .

TrackAssetPP. 8
>PP8 9"
m_CacheFlattenedTracksPP: P
;PPP Q
[QQ 	
HideInInspectorQQ	 
,QQ 
SerializeFieldQQ (
]QQ( )
EditorSettingsQQ* 8
m_EditorSettingsQQ9 I
=QQJ K
newQQL O
EditorSettingsQQP ^
(QQ^ _
)QQ_ `
;QQ` a
[RR 	
SerializeFieldRR	 
]RR 
DurationModeRR %
m_DurationModeRR& 4
;RR4 5
[TT 	
HideInInspectorTT	 
,TT 
SerializeFieldTT (
]TT( )
MarkerTrackTT* 5
m_MarkerTrackTT6 C
;TTC D
publicYY 
EditorSettingsYY 
editorSettingsYY ,
{ZZ 	
get[[ 
{[[ 
return[[ 
m_EditorSettings[[ )
;[[) *
}[[+ ,
}\\ 	
publicaa 
overrideaa 
doubleaa 
durationaa '
{bb 	
getcc 
{dd 
ifff 
(ff 
m_DurationModeff "
==ff# %
DurationModeff& 2
.ff2 3
BasedOnClipsff3 ?
)ff? @
returngg 
CalculateDurationgg ,
(gg, -
)gg- .
;gg. /
returnii 
m_FixedDurationii &
;ii& '
}jj 
}kk 	
publicpp 
doublepp 
fixedDurationpp #
{qq 	
getrr 
{ss 
DiscreteTimett 
discreteDurationtt -
=tt. /
(tt0 1
DiscreteTimett1 =
)tt= >
m_FixedDurationtt> M
;ttM N
ifuu 
(uu 
discreteDurationuu $
<=uu% '
$numuu( )
)uu) *
returnvv 
$numvv 
;vv 
returnyy 
(yy 
doubleyy 
)yy 
discreteDurationyy /
.yy/ 0
OneTickBeforeyy0 =
(yy= >
)yy> ?
;yy? @
}zz 
set{{ 
{{{ 
m_FixedDuration{{ !
={{" #
Math{{$ (
.{{( )
Max{{) ,
({{, -
$num{{- 0
,{{0 1
value{{2 7
){{7 8
;{{8 9
}{{: ;
}|| 	
public
ÅÅ 
DurationMode
ÅÅ 
durationMode
ÅÅ (
{
ÇÇ 	
get
ÉÉ 
{
ÉÉ 
return
ÉÉ 
m_DurationMode
ÉÉ '
;
ÉÉ' (
}
ÉÉ) *
set
ÑÑ 
{
ÑÑ 
m_DurationMode
ÑÑ  
=
ÑÑ! "
value
ÑÑ# (
;
ÑÑ( )
}
ÑÑ* +
}
ÖÖ 	
public
çç 
override
çç 
IEnumerable
çç #
<
çç# $
PlayableBinding
çç$ 3
>
çç3 4
outputs
çç5 <
{
éé 	
get
èè 
{
êê 
foreach
ëë 
(
ëë 
var
ëë 
outputTracks
ëë )
in
ëë* ,
GetOutputTracks
ëë- <
(
ëë< =
)
ëë= >
)
ëë> ?
foreach
íí 
(
íí 
var
íí  
output
íí! '
in
íí( *
outputTracks
íí+ 7
.
íí7 8
outputs
íí8 ?
)
íí? @
yield
ìì 
return
ìì $
output
ìì% +
;
ìì+ ,
}
îî 
}
ïï 	
public
óó 
ClipCaps
óó 
clipCaps
óó  
{
òò 	
get
ôô 
{
öö 
var
õõ 
caps
õõ 
=
õõ 
ClipCaps
õõ #
.
õõ# $
All
õõ$ '
;
õõ' (
foreach
úú 
(
úú 
var
úú 
track
úú "
in
úú# %
GetRootTracks
úú& 3
(
úú3 4
)
úú4 5
)
úú5 6
{
ùù 
foreach
ûû 
(
ûû 
var
ûû  
clip
ûû! %
in
ûû& (
track
ûû) .
.
ûû. /
clips
ûû/ 4
)
ûû4 5
caps
üü 
&=
üü 
clip
üü  $
.
üü$ %
clipCaps
üü% -
;
üü- .
}
†† 
return
°° 
caps
°° 
;
°° 
}
¢¢ 
}
££ 	
public
´´ 
int
´´ 
outputTrackCount
´´ #
{
¨¨ 	
get
≠≠ 
{
ÆÆ $
UpdateOutputTrackCache
ØØ &
(
ØØ& '
)
ØØ' (
;
ØØ( )
return
∞∞ !
m_CacheOutputTracks
∞∞ *
.
∞∞* +
Length
∞∞+ 1
;
∞∞1 2
}
±± 
}
≤≤ 	
public
∫∫ 
int
∫∫ 
rootTrackCount
∫∫ !
{
ªª 	
get
ºº 
{
ΩΩ "
UpdateRootTrackCache
ææ $
(
ææ$ %
)
ææ% &
;
ææ& '
return
øø 
m_CacheRootTracks
øø (
.
øø( )
Count
øø) .
;
øø. /
}
¿¿ 
}
¡¡ 	
void
√√ 

OnValidate
√√ 
(
√√ 
)
√√ 
{
ƒƒ 	
editorSettings
≈≈ 
.
≈≈ 
fps
≈≈ 
=
≈≈  
GetValidFramerate
≈≈! 2
(
≈≈2 3
editorSettings
≈≈3 A
.
≈≈A B
fps
≈≈B E
)
≈≈E F
;
≈≈F G
}
∆∆ 	
internal
»» 
static
»» 
float
»» 
GetValidFramerate
»» /
(
»»/ 0
float
»»0 5
	framerate
»»6 ?
)
»»? @
{
…… 	
return
   
Mathf
   
.
   
Clamp
   
(
   
	framerate
   (
,
  ( )
EditorSettings
  * 8
.
  8 9
kMinFps
  9 @
,
  @ A
EditorSettings
  B P
.
  P Q
kMaxFps
  Q X
)
  X Y
;
  Y Z
}
ÀÀ 	
public
’’ 

TrackAsset
’’ 
GetRootTrack
’’ &
(
’’& '
int
’’' *
index
’’+ 0
)
’’0 1
{
÷÷ 	"
UpdateRootTrackCache
◊◊  
(
◊◊  !
)
◊◊! "
;
◊◊" #
return
ÿÿ 
m_CacheRootTracks
ÿÿ $
[
ÿÿ$ %
index
ÿÿ% *
]
ÿÿ* +
;
ÿÿ+ ,
}
ŸŸ 	
public
‡‡ 
IEnumerable
‡‡ 
<
‡‡ 

TrackAsset
‡‡ %
>
‡‡% &
GetRootTracks
‡‡' 4
(
‡‡4 5
)
‡‡5 6
{
·· 	"
UpdateRootTrackCache
‚‚  
(
‚‚  !
)
‚‚! "
;
‚‚" #
return
„„ 
m_CacheRootTracks
„„ $
;
„„$ %
}
‰‰ 	
public
ÎÎ 

TrackAsset
ÎÎ 
GetOutputTrack
ÎÎ (
(
ÎÎ( )
int
ÎÎ) ,
index
ÎÎ- 2
)
ÎÎ2 3
{
ÏÏ 	$
UpdateOutputTrackCache
ÌÌ "
(
ÌÌ" #
)
ÌÌ# $
;
ÌÌ$ %
return
ÓÓ !
m_CacheOutputTracks
ÓÓ &
[
ÓÓ& '
index
ÓÓ' ,
]
ÓÓ, -
;
ÓÓ- .
}
ÔÔ 	
public
¯¯ 
IEnumerable
¯¯ 
<
¯¯ 

TrackAsset
¯¯ %
>
¯¯% &
GetOutputTracks
¯¯' 6
(
¯¯6 7
)
¯¯7 8
{
˘˘ 	$
UpdateOutputTrackCache
˙˙ "
(
˙˙" #
)
˙˙# $
;
˙˙$ %
return
˚˚ !
m_CacheOutputTracks
˚˚ &
;
˚˚& '
}
¸¸ 	
void
˛˛ "
UpdateRootTrackCache
˛˛ !
(
˛˛! "
)
˛˛" #
{
ˇˇ 	
if
ÄÄ 
(
ÄÄ 
m_CacheRootTracks
ÄÄ !
==
ÄÄ" $
null
ÄÄ% )
)
ÄÄ) *
{
ÅÅ 
if
ÇÇ 
(
ÇÇ 
m_Tracks
ÇÇ 
==
ÇÇ 
null
ÇÇ  $
)
ÇÇ$ %
m_CacheRootTracks
ÉÉ %
=
ÉÉ& '
new
ÉÉ( +
List
ÉÉ, 0
<
ÉÉ0 1

TrackAsset
ÉÉ1 ;
>
ÉÉ; <
(
ÉÉ< =
)
ÉÉ= >
;
ÉÉ> ?
else
ÑÑ 
{
ÖÖ 
m_CacheRootTracks
ÜÜ %
=
ÜÜ& '
new
ÜÜ( +
List
ÜÜ, 0
<
ÜÜ0 1

TrackAsset
ÜÜ1 ;
>
ÜÜ; <
(
ÜÜ< =
m_Tracks
ÜÜ= E
.
ÜÜE F
Count
ÜÜF K
)
ÜÜK L
;
ÜÜL M
if
áá 
(
áá 
markerTrack
áá #
!=
áá$ &
null
áá' +
)
áá+ ,
{
àà 
m_CacheRootTracks
ââ )
.
ââ) *
Add
ââ* -
(
ââ- .
markerTrack
ââ. 9
)
ââ9 :
;
ââ: ;
}
ää 
foreach
åå 
(
åå 
var
åå  
t
åå! "
in
åå# %
m_Tracks
åå& .
)
åå. /
{
çç 
var
éé 

trackAsset
éé &
=
éé' (
t
éé) *
as
éé+ -

TrackAsset
éé. 8
;
éé8 9
if
èè 
(
èè 

trackAsset
èè &
!=
èè' )
null
èè* .
)
èè. /
m_CacheRootTracks
êê -
.
êê- .
Add
êê. 1
(
êê1 2

trackAsset
êê2 <
)
êê< =
;
êê= >
}
ëë 
}
íí 
}
ìì 
}
îî 	
void
ññ $
UpdateOutputTrackCache
ññ #
(
ññ# $
)
ññ$ %
{
óó 	
if
òò 
(
òò !
m_CacheOutputTracks
òò #
==
òò$ &
null
òò' +
)
òò+ ,
{
ôô 
var
öö 
outputTracks
öö  
=
öö! "
new
öö# &
List
öö' +
<
öö+ ,

TrackAsset
öö, 6
>
öö6 7
(
öö7 8
)
öö8 9
;
öö9 :
foreach
õõ 
(
õõ 
var
õõ 
flattenedTrack
õõ +
in
õõ, .
flattenedTracks
õõ/ >
)
õõ> ?
{
úú 
if
ùù 
(
ùù 
flattenedTrack
ùù &
!=
ùù' )
null
ùù* .
&&
ùù/ 1
flattenedTrack
ùù2 @
.
ùù@ A
GetType
ùùA H
(
ùùH I
)
ùùI J
!=
ùùK M
typeof
ùùN T
(
ùùT U

GroupTrack
ùùU _
)
ùù_ `
&&
ùùa c
!
ùùd e
flattenedTrack
ùùe s
.
ùùs t

isSubTrack
ùùt ~
)
ùù~ 
outputTracks
ûû $
.
ûû$ %
Add
ûû% (
(
ûû( )
flattenedTrack
ûû) 7
)
ûû7 8
;
ûû8 9
}
üü !
m_CacheOutputTracks
†† #
=
††$ %
outputTracks
††& 2
.
††2 3
ToArray
††3 :
(
††: ;
)
††; <
;
††< =
}
°° 
}
¢¢ 	
internal
§§ 
IEnumerable
§§ 
<
§§ 

TrackAsset
§§ '
>
§§' (
flattenedTracks
§§) 8
{
•• 	
get
¶¶ 
{
ßß 
if
®® 
(
®® $
m_CacheFlattenedTracks
®® *
==
®®+ -
null
®®. 2
)
®®2 3
{
©© $
m_CacheFlattenedTracks
™™ *
=
™™+ ,
new
™™- 0
List
™™1 5
<
™™5 6

TrackAsset
™™6 @
>
™™@ A
(
™™A B
m_Tracks
™™B J
.
™™J K
Count
™™K P
*
™™Q R
$num
™™S T
)
™™T U
;
™™U V"
UpdateRootTrackCache
´´ (
(
´´( )
)
´´) *
;
´´* +$
m_CacheFlattenedTracks
≠≠ *
.
≠≠* +
AddRange
≠≠+ 3
(
≠≠3 4
m_CacheRootTracks
≠≠4 E
)
≠≠E F
;
≠≠F G
for
ÆÆ 
(
ÆÆ 
int
ÆÆ 
i
ÆÆ 
=
ÆÆ  
$num
ÆÆ! "
;
ÆÆ" #
i
ÆÆ$ %
<
ÆÆ& '
m_CacheRootTracks
ÆÆ( 9
.
ÆÆ9 :
Count
ÆÆ: ?
;
ÆÆ? @
i
ÆÆA B
++
ÆÆB D
)
ÆÆD E
{
ØØ #
AddSubTracksRecursive
∞∞ -
(
∞∞- .
m_CacheRootTracks
∞∞. ?
[
∞∞? @
i
∞∞@ A
]
∞∞A B
,
∞∞B C
ref
∞∞D G$
m_CacheFlattenedTracks
∞∞H ^
)
∞∞^ _
;
∞∞_ `
}
±± 
}
≤≤ 
return
≥≥ $
m_CacheFlattenedTracks
≥≥ -
;
≥≥- .
}
¥¥ 
}
µµ 	
public
ææ 
MarkerTrack
ææ 
markerTrack
ææ &
{
øø 	
get
¿¿ 
{
¿¿ 
return
¿¿ 
m_MarkerTrack
¿¿ &
;
¿¿& '
}
¿¿( )
}
¡¡ 	
internal
ƒƒ 
List
ƒƒ 
<
ƒƒ 
ScriptableObject
ƒƒ &
>
ƒƒ& '
trackObjects
ƒƒ( 4
{
≈≈ 	
get
∆∆ 
{
∆∆ 
return
∆∆ 
m_Tracks
∆∆ !
;
∆∆! "
}
∆∆# $
}
«« 	
internal
…… 
void
…… 
AddTrackInternal
…… &
(
……& '

TrackAsset
……' 1
track
……2 7
)
……7 8
{
   	
m_Tracks
ÀÀ 
.
ÀÀ 
Add
ÀÀ 
(
ÀÀ 
track
ÀÀ 
)
ÀÀ 
;
ÀÀ  
track
ÃÃ 
.
ÃÃ 
parent
ÃÃ 
=
ÃÃ 
this
ÃÃ 
;
ÃÃ  

Invalidate
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
internal
–– 
void
–– 
RemoveTrack
–– !
(
––! "

TrackAsset
––" ,
track
––- 2
)
––2 3
{
—— 	
m_Tracks
““ 
.
““ 
Remove
““ 
(
““ 
track
““ !
)
““! "
;
““" #

Invalidate
”” 
(
”” 
)
”” 
;
”” 
var
‘‘ 
parentTrack
‘‘ 
=
‘‘ 
track
‘‘ #
.
‘‘# $
parent
‘‘$ *
as
‘‘+ -

TrackAsset
‘‘. 8
;
‘‘8 9
if
’’ 
(
’’ 
parentTrack
’’ 
!=
’’ 
null
’’ #
)
’’# $
{
÷÷ 
parentTrack
◊◊ 
.
◊◊ 
RemoveSubTrack
◊◊ *
(
◊◊* +
track
◊◊+ 0
)
◊◊0 1
;
◊◊1 2
}
ÿÿ 
}
ŸŸ 	
public
·· 
override
·· 
Playable
··  
CreatePlayable
··! /
(
··/ 0
PlayableGraph
··0 =
graph
··> C
,
··C D

GameObject
··E O
go
··P R
)
··R S
{
‚‚ 	
bool
„„ 
autoRebalanceTree
„„ "
=
„„# $
false
„„% *
;
„„* +
autoRebalanceTree
ÂÂ 
=
ÂÂ 
true
ÂÂ  $
;
ÂÂ$ %
bool
ÈÈ 
createOutputs
ÈÈ 
=
ÈÈ  
graph
ÈÈ! &
.
ÈÈ& '
GetPlayableCount
ÈÈ' 7
(
ÈÈ7 8
)
ÈÈ8 9
==
ÈÈ: <
$num
ÈÈ= >
;
ÈÈ> ?
var
ÍÍ 
timeline
ÍÍ 
=
ÍÍ 
TimelinePlayable
ÍÍ +
.
ÍÍ+ ,
Create
ÍÍ, 2
(
ÍÍ2 3
graph
ÍÍ3 8
,
ÍÍ8 9
GetOutputTracks
ÍÍ: I
(
ÍÍI J
)
ÍÍJ K
,
ÍÍK L
go
ÍÍM O
,
ÍÍO P
autoRebalanceTree
ÍÍQ b
,
ÍÍb c
createOutputs
ÍÍd q
)
ÍÍq r
;
ÍÍr s
timeline
ÎÎ 
.
ÎÎ !
SetPropagateSetTime
ÎÎ (
(
ÎÎ( )
true
ÎÎ) -
)
ÎÎ- .
;
ÎÎ. /
return
ÏÏ 
timeline
ÏÏ 
.
ÏÏ 
IsValid
ÏÏ #
(
ÏÏ# $
)
ÏÏ$ %
?
ÏÏ& '
timeline
ÏÏ( 0
:
ÏÏ1 2
Playable
ÏÏ3 ;
.
ÏÏ; <
Null
ÏÏ< @
;
ÏÏ@ A
}
ÌÌ 	
void
 ,
ISerializationCallbackReceiver
 +
.
+ ,
OnBeforeSerialize
, =
(
= >
)
> ?
{
ÒÒ 	
	m_Version
ÚÚ 
=
ÚÚ 
k_LatestVersion
ÚÚ '
;
ÚÚ' (
}
ÛÛ 	
void
ˆˆ ,
ISerializationCallbackReceiver
ˆˆ +
.
ˆˆ+ , 
OnAfterDeserialize
ˆˆ, >
(
ˆˆ> ?
)
ˆˆ? @
{
˜˜ 	

Invalidate
˘˘ 
(
˘˘ 
)
˘˘ 
;
˘˘ 
if
˙˙ 
(
˙˙ 
	m_Version
˙˙ 
<
˙˙ 
k_LatestVersion
˙˙ +
)
˙˙+ ,
{
˚˚ $
UpgradeToLatestVersion
¸¸ &
(
¸¸& '
)
¸¸' (
;
¸¸( )
}
˝˝ 
}
˛˛ 	
void
ÄÄ 
__internalAwake
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 	
if
ÇÇ 
(
ÇÇ 
m_Tracks
ÇÇ 
==
ÇÇ 
null
ÇÇ  
)
ÇÇ  !
m_Tracks
ÉÉ 
=
ÉÉ 
new
ÉÉ 
List
ÉÉ #
<
ÉÉ# $
ScriptableObject
ÉÉ$ 4
>
ÉÉ4 5
(
ÉÉ5 6
)
ÉÉ6 7
;
ÉÉ7 8
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
i
ÜÜ 
=
ÜÜ 
m_Tracks
ÜÜ !
.
ÜÜ! "
Count
ÜÜ" '
-
ÜÜ( )
$num
ÜÜ* +
;
ÜÜ+ ,
i
ÜÜ- .
>=
ÜÜ/ 1
$num
ÜÜ2 3
;
ÜÜ3 4
i
ÜÜ5 6
--
ÜÜ6 8
)
ÜÜ8 9
{
áá 

TrackAsset
àà 
asset
àà  
=
àà! "
m_Tracks
àà# +
[
àà+ ,
i
àà, -
]
àà- .
as
àà/ 1

TrackAsset
àà2 <
;
àà< =
if
ââ 
(
ââ 
asset
ââ 
!=
ââ 
null
ââ !
)
ââ! "
asset
ää 
.
ää 
parent
ää  
=
ää! "
this
ää# '
;
ää' (
object
åå 
o
åå 
=
åå 
m_Tracks
åå #
[
åå# $
i
åå$ %
]
åå% &
;
åå& '
if
çç 
(
çç 
o
çç 
==
çç 
null
çç 
)
çç 
{
éé 
Debug
èè 
.
èè 

LogWarning
èè $
(
èè$ %
$str
èè% d
)
èèd e
;
èèe f
m_Tracks
êê 
.
êê 
RemoveAt
êê %
(
êê% &
i
êê& '
)
êê' (
;
êê( )
}
ëë 
}
ìì 
}
îî 	
public
õõ 
void
õõ 
GatherProperties
õõ $
(
õõ$ %
PlayableDirector
õõ% 5
director
õõ6 >
,
õõ> ? 
IPropertyCollector
õõ@ R
driver
õõS Y
)
õõY Z
{
úú 	
var
ùù 
outputTracks
ùù 
=
ùù 
GetOutputTracks
ùù .
(
ùù. /
)
ùù/ 0
;
ùù0 1
foreach
ûû 
(
ûû 
var
ûû 
track
ûû 
in
ûû !
outputTracks
ûû" .
)
ûû. /
{
üü 
if
†† 
(
†† 
!
†† 
track
†† 
.
†† 
mutedInHierarchy
†† +
)
††+ ,
track
°° 
.
°° 
GatherProperties
°° *
(
°°* +
director
°°+ 3
,
°°3 4
driver
°°5 ;
)
°°; <
;
°°< =
}
¢¢ 
}
££ 	
public
≠≠ 
void
≠≠ 
CreateMarkerTrack
≠≠ %
(
≠≠% &
)
≠≠& '
{
ÆÆ 	
if
ØØ 
(
ØØ 
m_MarkerTrack
ØØ 
==
ØØ  
null
ØØ! %
)
ØØ% &
{
∞∞ 
m_MarkerTrack
±± 
=
±± 
CreateInstance
±±  .
<
±±. /
MarkerTrack
±±/ :
>
±±: ;
(
±±; <
)
±±< =
;
±±= >%
TimelineCreateUtilities
≤≤ '
.
≤≤' (!
SaveAssetIntoObject
≤≤( ;
(
≤≤; <
m_MarkerTrack
≤≤< I
,
≤≤I J
this
≤≤K O
)
≤≤O P
;
≤≤P Q
m_MarkerTrack
≥≥ 
.
≥≥ 
parent
≥≥ $
=
≥≥% &
this
≥≥' +
;
≥≥+ ,
m_MarkerTrack
¥¥ 
.
¥¥ 
name
¥¥ "
=
¥¥# $
$str
¥¥% .
;
¥¥. /

Invalidate
µµ 
(
µµ 
)
µµ 
;
µµ 
}
∂∂ 
}
∑∑ 	
internal
∫∫ 
void
∫∫ 

Invalidate
∫∫  
(
∫∫  !
)
∫∫! "
{
ªª 	
m_CacheRootTracks
ºº 
=
ºº 
null
ºº  $
;
ºº$ %!
m_CacheOutputTracks
ΩΩ 
=
ΩΩ  !
null
ΩΩ" &
;
ΩΩ& '$
m_CacheFlattenedTracks
ææ "
=
ææ# $
null
ææ% )
;
ææ) *
}
øø 	
double
¡¡ 
CalculateDuration
¡¡  
(
¡¡  !
)
¡¡! "
{
¬¬ 	
var
√√ 
discreteDuration
√√  
=
√√! "
new
√√# &
DiscreteTime
√√' 3
(
√√3 4
$num
√√4 5
)
√√5 6
;
√√6 7
foreach
ƒƒ 
(
ƒƒ 
var
ƒƒ 
track
ƒƒ 
in
ƒƒ !
flattenedTracks
ƒƒ" 1
)
ƒƒ1 2
{
≈≈ 
if
∆∆ 
(
∆∆ 
track
∆∆ 
.
∆∆ 
muted
∆∆ 
)
∆∆  
continue
«« 
;
«« 
discreteDuration
……  
=
……! "
DiscreteTime
……# /
.
……/ 0
Max
……0 3
(
……3 4
discreteDuration
……4 D
,
……D E
(
……F G
DiscreteTime
……G S
)
……S T
track
……T Y
.
……Y Z
end
……Z ]
)
……] ^
;
……^ _
}
   
if
ÃÃ 
(
ÃÃ 
discreteDuration
ÃÃ  
<=
ÃÃ! #
$num
ÃÃ$ %
)
ÃÃ% &
return
ÕÕ 
$num
ÕÕ 
;
ÕÕ 
return
–– 
(
–– 
double
–– 
)
–– 
discreteDuration
–– +
.
––+ ,
OneTickBefore
––, 9
(
––9 :
)
––: ;
;
––; <
}
—— 	
static
”” 
void
”” #
AddSubTracksRecursive
”” )
(
””) *

TrackAsset
””* 4
track
””5 :
,
””: ;
ref
””< ?
List
””@ D
<
””D E

TrackAsset
””E O
>
””O P
	allTracks
””Q Z
)
””Z [
{
‘‘ 	
if
’’ 
(
’’ 
track
’’ 
==
’’ 
null
’’ 
)
’’ 
return
÷÷ 
;
÷÷ 
	allTracks
ÿÿ 
.
ÿÿ 
AddRange
ÿÿ 
(
ÿÿ 
track
ÿÿ $
.
ÿÿ$ %
GetChildTracks
ÿÿ% 3
(
ÿÿ3 4
)
ÿÿ4 5
)
ÿÿ5 6
;
ÿÿ6 7
foreach
ŸŸ 
(
ŸŸ 

TrackAsset
ŸŸ 
subTrack
ŸŸ  (
in
ŸŸ) +
track
ŸŸ, 1
.
ŸŸ1 2
GetChildTracks
ŸŸ2 @
(
ŸŸ@ A
)
ŸŸA B
)
ŸŸB C
{
⁄⁄ #
AddSubTracksRecursive
€€ %
(
€€% &
subTrack
€€& .
,
€€. /
ref
€€0 3
	allTracks
€€4 =
)
€€= >
;
€€> ?
}
‹‹ 
}
›› 	
}
ﬁﬁ 
}ﬂﬂ ¢Ä
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Playables\DirectorControlPlayable.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
public 

class #
DirectorControlPlayable (
:) *
PlayableBehaviour+ <
{ 
public 
PlayableDirector 
director  (
;( )
private 
bool 

m_SyncTime 
=  !
false" '
;' (
private 
double 
m_AssetDuration &
=' (
double) /
./ 0
MaxValue0 8
;8 9
public 
static 
ScriptPlayable $
<$ %#
DirectorControlPlayable% <
>< =
Create> D
(D E
PlayableGraphE R
graphS X
,X Y
PlayableDirectorZ j
directork s
)s t
{ 	
if   
(   
director   
==   
null    
)    !
return!! 
ScriptPlayable!! %
<!!% &#
DirectorControlPlayable!!& =
>!!= >
.!!> ?
Null!!? C
;!!C D
var## 
handle## 
=## 
ScriptPlayable## '
<##' (#
DirectorControlPlayable##( ?
>##? @
.##@ A
Create##A G
(##G H
graph##H M
)##M N
;##N O
handle$$ 
.$$ 
GetBehaviour$$ 
($$  
)$$  !
.$$! "
director$$" *
=$$+ ,
director$$- 5
;$$5 6
if'' 
('' 
!'' 
Application'' 
.'' 
	isPlaying'' &
&&''' )
UnityEditor''* 5
.''5 6
PrefabUtility''6 C
.''C D"
IsPartOfPrefabInstance''D Z
(''Z [
director''[ c
)''c d
)''d e
UnityEditor(( 
.(( 
PrefabUtility(( )
.(() *!
prefabInstanceUpdated((* ?
+=((@ B
handle((C I
.((I J
GetBehaviour((J V
(((V W
)((W X
.((X Y
OnPrefabUpdated((Y h
;((h i
return++ 
handle++ 
;++ 
},, 	
public// 
override// 
void// 
OnPlayableDestroy// .
(//. /
Playable/// 7
playable//8 @
)//@ A
{00 	
if22 
(22 
!22 
Application22 
.22 
	isPlaying22 &
)22& '
UnityEditor33 
.33 
PrefabUtility33 )
.33) *!
prefabInstanceUpdated33* ?
-=33@ B
OnPrefabUpdated33C R
;33R S
if55 
(55 
director55 
!=55 
null55  
&&55! #
director55$ ,
.55, -
playableAsset55- :
!=55; =
null55> B
)55B C
director66 
.66 
Stop66 
(66 
)66 
;66  
}77 	
public>> 
override>> 
void>> 
PrepareFrame>> )
(>>) *
Playable>>* 2
playable>>3 ;
,>>; <
	FrameData>>= F
info>>G K
)>>K L
{?? 	
if@@ 
(@@ 
director@@ 
==@@ 
null@@  
||@@! #
!@@$ %
director@@% -
.@@- .
isActiveAndEnabled@@. @
||@@A C
director@@D L
.@@L M
playableAsset@@M Z
==@@[ ]
null@@^ b
)@@b c
returnAA 
;AA 

m_SyncTimeDD 
|=DD 
(DD 
infoDD 
.DD  
evaluationTypeDD  .
==DD/ 1
	FrameDataDD2 ;
.DD; <
EvaluationTypeDD< J
.DDJ K
EvaluateDDK S
)DDS T
||DDU W
DetectDiscontinuityEE #
(EE# $
playableEE$ ,
,EE, -
infoEE. 2
)EE2 3
;EE3 4
	SyncSpeedGG 
(GG 
infoGG 
.GG 
effectiveSpeedGG )
)GG) *
;GG* +
SyncPlayStateHH 
(HH 
playableHH "
.HH" #
GetGraphHH# +
(HH+ ,
)HH, -
,HH- .
playableHH/ 7
.HH7 8
GetTimeHH8 ?
(HH? @
)HH@ A
)HHA B
;HHB C
}II 	
publicPP 
overridePP 
voidPP 
OnBehaviourPlayPP ,
(PP, -
PlayablePP- 5
playablePP6 >
,PP> ?
	FrameDataPP@ I
infoPPJ N
)PPN O
{QQ 	

m_SyncTimeRR 
=RR 
trueRR 
;RR 
ifTT 
(TT 
directorTT 
!=TT 
nullTT  
&&TT! #
directorTT$ ,
.TT, -
playableAssetTT- :
!=TT; =
nullTT> B
)TTB C
m_AssetDurationUU 
=UU  !
directorUU" *
.UU* +
playableAssetUU+ 8
.UU8 9
durationUU9 A
;UUA B
}VV 	
public]] 
override]] 
void]] 
OnBehaviourPause]] -
(]]- .
Playable]]. 6
playable]]7 ?
,]]? @
	FrameData]]A J
info]]K O
)]]O P
{^^ 	
if__ 
(__ 
director__ 
!=__ 
null__  
&&__! #
director__$ ,
.__, -
playableAsset__- :
!=__; =
null__> B
)__B C
{`` 
ifaa 
(aa 
infoaa 
.aa 
effectivePlayStateaa +
==aa, .
	PlayStateaa/ 8
.aa8 9
Playingaa9 @
)aa@ A
directorbb 
.bb 
Pausebb "
(bb" #
)bb# $
;bb$ %
elsecc 
directordd 
.dd 
Stopdd !
(dd! "
)dd" #
;dd# $
}ee 
}ff 	
publicnn 
overridenn 
voidnn 
ProcessFramenn )
(nn) *
Playablenn* 2
playablenn3 ;
,nn; <
	FrameDatann= F
infonnG K
,nnK L
objectnnM S

playerDatannT ^
)nn^ _
{oo 	
ifpp 
(pp 
directorpp 
==pp 
nullpp  
||pp! #
!pp$ %
directorpp% -
.pp- .
isActiveAndEnabledpp. @
||ppA C
directorppD L
.ppL M
playableAssetppM Z
==pp[ ]
nullpp^ b
)ppb c
returnqq 
;qq 
ifss 
(ss 

m_SyncTimess 
||ss 
DetectOutOfSyncss -
(ss- .
playabless. 6
)ss6 7
)ss7 8
{tt 

UpdateTimeuu 
(uu 
playableuu #
)uu# $
;uu$ %
directorvv 
.vv 
Evaluatevv !
(vv! "
)vv" #
;vv# $
}ww 

m_SyncTimeyy 
=yy 
falseyy 
;yy 
}zz 	
void}} 
OnPrefabUpdated}} 
(}} 

GameObject}} '
go}}( *
)}}* +
{~~ 	
if
ÄÄ 
(
ÄÄ 
UnityEditor
ÄÄ 
.
ÄÄ 
PrefabUtility
ÄÄ )
.
ÄÄ) *
GetRootGameObject
ÄÄ* ;
(
ÄÄ; <
director
ÄÄ< D
)
ÄÄD E
==
ÄÄF H
go
ÄÄI K
)
ÄÄK L
director
ÅÅ 
.
ÅÅ 
RebuildGraph
ÅÅ %
(
ÅÅ% &
)
ÅÅ& '
;
ÅÅ' (
}
ÇÇ 	
void
ÜÜ 
	SyncSpeed
ÜÜ 
(
ÜÜ 
double
ÜÜ 
speed
ÜÜ #
)
ÜÜ# $
{
áá 	
if
àà 
(
àà 
director
àà 
.
àà 
playableGraph
àà &
.
àà& '
IsValid
àà' .
(
àà. /
)
àà/ 0
)
àà0 1
{
ââ 
int
ää 
roots
ää 
=
ää 
director
ää $
.
ää$ %
playableGraph
ää% 2
.
ää2 3"
GetRootPlayableCount
ää3 G
(
ääG H
)
ääH I
;
ääI J
for
ãã 
(
ãã 
int
ãã 
i
ãã 
=
ãã 
$num
ãã 
;
ãã 
i
ãã  !
<
ãã" #
roots
ãã$ )
;
ãã) *
i
ãã+ ,
++
ãã, .
)
ãã. /
{
åå 
var
çç 
rootPlayable
çç $
=
çç% &
director
çç' /
.
çç/ 0
playableGraph
çç0 =
.
çç= >
GetRootPlayable
çç> M
(
ççM N
i
ççN O
)
ççO P
;
ççP Q
if
éé 
(
éé 
rootPlayable
éé $
.
éé$ %
IsValid
éé% ,
(
éé, -
)
éé- .
)
éé. /
{
èè 
rootPlayable
êê $
.
êê$ %
SetSpeed
êê% -
(
êê- .
speed
êê. 3
)
êê3 4
;
êê4 5
}
ëë 
}
íí 
}
ìì 
}
îî 	
void
ññ 
SyncPlayState
ññ 
(
ññ 
PlayableGraph
ññ (
graph
ññ) .
,
ññ. /
double
ññ0 6
playableTime
ññ7 C
)
ññC D
{
óó 	
bool
òò 
expectedFinished
òò !
=
òò" #
(
òò$ %
playableTime
òò% 1
>=
òò2 4
m_AssetDuration
òò5 D
)
òòD E
&&
òòF H
director
òòI Q
.
òòQ R
extrapolationMode
òòR c
==
òòd f
DirectorWrapMode
òòg w
.
òòw x
None
òòx |
;
òò| }
if
ôô 
(
ôô 
graph
ôô 
.
ôô 
	IsPlaying
ôô 
(
ôô  
)
ôô  !
&&
ôô" $
!
ôô% &
expectedFinished
ôô& 6
)
ôô6 7
director
öö 
.
öö 
Play
öö 
(
öö 
)
öö 
;
öö  
else
õõ 
director
úú 
.
úú 
Pause
úú 
(
úú 
)
úú  
;
úú  !
}
ùù 	
bool
üü !
DetectDiscontinuity
üü  
(
üü  !
Playable
üü! )
playable
üü* 2
,
üü2 3
	FrameData
üü4 =
info
üü> B
)
üüB C
{
†† 	
return
°° 
Math
°° 
.
°° 
Abs
°° 
(
°° 
playable
°° $
.
°°$ %
GetTime
°°% ,
(
°°, -
)
°°- .
-
°°/ 0
playable
°°1 9
.
°°9 :
GetPreviousTime
°°: I
(
°°I J
)
°°J K
-
°°L M
info
°°N R
.
°°R S
m_DeltaTime
°°S ^
*
°°_ `
info
°°a e
.
°°e f
m_EffectiveSpeed
°°f v
)
°°v w
>
°°x y
DiscreteTime°°z Ü
.°°Ü á
	tickValue°°á ê
;°°ê ë
}
¢¢ 	
bool
§§ 
DetectOutOfSync
§§ 
(
§§ 
Playable
§§ %
playable
§§& .
)
§§. /
{
•• 	
double
¶¶ 
expectedTime
¶¶ 
=
¶¶  !
playable
¶¶" *
.
¶¶* +
GetTime
¶¶+ 2
(
¶¶2 3
)
¶¶3 4
;
¶¶4 5
if
ßß 
(
ßß 
playable
ßß 
.
ßß 
GetTime
ßß  
(
ßß  !
)
ßß! "
>=
ßß# %
m_AssetDuration
ßß& 5
)
ßß5 6
{
®® 
if
©© 
(
©© 
director
©© 
.
©© 
extrapolationMode
©© .
==
©©/ 1
DirectorWrapMode
©©2 B
.
©©B C
None
©©C G
)
©©G H
return
™™ 
false
™™  
;
™™  !
else
´´ 
if
´´ 
(
´´ 
director
´´ !
.
´´! "
extrapolationMode
´´" 3
==
´´4 6
DirectorWrapMode
´´7 G
.
´´G H
Hold
´´H L
)
´´L M
expectedTime
¨¨  
=
¨¨! "
m_AssetDuration
¨¨# 2
;
¨¨2 3
else
≠≠ 
if
≠≠ 
(
≠≠ 
m_AssetDuration
≠≠ (
>
≠≠) *
float
≠≠+ 0
.
≠≠0 1
Epsilon
≠≠1 8
)
≠≠8 9
expectedTime
ÆÆ  
=
ÆÆ! "
expectedTime
ÆÆ# /
%
ÆÆ0 1
m_AssetDuration
ÆÆ2 A
;
ÆÆA B
}
ØØ 
if
±± 
(
±± 
!
±± 
Mathf
±± 
.
±± 
Approximately
±± $
(
±±$ %
(
±±% &
float
±±& +
)
±±+ ,
expectedTime
±±, 8
,
±±8 9
(
±±: ;
float
±±; @
)
±±@ A
director
±±A I
.
±±I J
time
±±J N
)
±±N O
)
±±O P
{
≤≤ 
double
¥¥ 
	lastDelta
¥¥  
=
¥¥! "
playable
¥¥# +
.
¥¥+ ,
GetTime
¥¥, 3
(
¥¥3 4
)
¥¥4 5
-
¥¥6 7
playable
¥¥8 @
.
¥¥@ A
GetPreviousTime
¥¥A P
(
¥¥P Q
)
¥¥Q R
;
¥¥R S
if
µµ 
(
µµ 
UnityEditor
µµ 
.
µµ  
Unsupported
µµ  +
.
µµ+ ,
IsDeveloperBuild
µµ, <
(
µµ< =
)
µµ= >
)
µµ> ?
Debug
∂∂ 
.
∂∂ 
LogWarningFormat
∂∂ *
(
∂∂* +
$str∂∂+ ’
,∂∂’ ÷
playable∂∂◊ ﬂ
.∂∂ﬂ ‡
GetTime∂∂‡ Á
(∂∂Á Ë
)∂∂Ë È
,∂∂È Í
director∂∂Î Û
.∂∂Û Ù
time∂∂Ù ¯
,∂∂¯ ˘
director∂∂˙ Ç
.∂∂Ç É
name∂∂É á
,∂∂á à
	lastDelta∂∂â í
)∂∂í ì
;∂∂ì î
return
∏∏ 
true
∏∏ 
;
∏∏ 
}
ππ 
return
∫∫ 
false
∫∫ 
;
∫∫ 
}
ªª 	
void
ææ 

UpdateTime
ææ 
(
ææ 
Playable
ææ  
playable
ææ! )
)
ææ) *
{
øø 	
double
¿¿ 
duration
¿¿ 
=
¿¿ 
Math
¿¿ "
.
¿¿" #
Max
¿¿# &
(
¿¿& '
$num
¿¿' *
,
¿¿* +
director
¿¿, 4
.
¿¿4 5
playableAsset
¿¿5 B
.
¿¿B C
duration
¿¿C K
)
¿¿K L
;
¿¿L M
switch
¡¡ 
(
¡¡ 
director
¡¡ 
.
¡¡ 
extrapolationMode
¡¡ .
)
¡¡. /
{
¬¬ 
case
√√ 
DirectorWrapMode
√√ %
.
√√% &
Hold
√√& *
:
√√* +
director
ƒƒ 
.
ƒƒ 
time
ƒƒ !
=
ƒƒ" #
Math
ƒƒ$ (
.
ƒƒ( )
Min
ƒƒ) ,
(
ƒƒ, -
duration
ƒƒ- 5
,
ƒƒ5 6
Math
ƒƒ7 ;
.
ƒƒ; <
Max
ƒƒ< ?
(
ƒƒ? @
$num
ƒƒ@ A
,
ƒƒA B
playable
ƒƒC K
.
ƒƒK L
GetTime
ƒƒL S
(
ƒƒS T
)
ƒƒT U
)
ƒƒU V
)
ƒƒV W
;
ƒƒW X
break
≈≈ 
;
≈≈ 
case
∆∆ 
DirectorWrapMode
∆∆ %
.
∆∆% &
Loop
∆∆& *
:
∆∆* +
director
«« 
.
«« 
time
«« !
=
««" #
Math
««$ (
.
««( )
Max
««) ,
(
««, -
$num
««- .
,
««. /
playable
««0 8
.
««8 9
GetTime
««9 @
(
««@ A
)
««A B
%
««C D
duration
««E M
)
««M N
;
««N O
break
»» 
;
»» 
case
…… 
DirectorWrapMode
…… %
.
……% &
None
……& *
:
……* +
director
   
.
   
time
   !
=
  " #
playable
  $ ,
.
  , -
GetTime
  - 4
(
  4 5
)
  5 6
;
  6 7
break
ÀÀ 
;
ÀÀ 
}
ÃÃ 
}
ÕÕ 	
}
ŒŒ 
}œœ ⁄¢
ùD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Utilities\AnimationPreviewUtilities.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
static		 

class		 %
AnimationPreviewUtilities		 *
{

 
private 
const 
string 
k_PosX #
=$ %
$str& 9
;9 :
private 
const 
string 
k_PosY #
=$ %
$str& 9
;9 :
private 
const 
string 
k_PosZ #
=$ %
$str& 9
;9 :
private 
const 
string 
k_RotX #
=$ %
$str& 9
;9 :
private 
const 
string 
k_RotY #
=$ %
$str& 9
;9 :
private 
const 
string 
k_RotZ #
=$ %
$str& 9
;9 :
private 
const 
string 
k_RotW #
=$ %
$str& 9
;9 :
private 
const 
string 
k_ScaleX %
=& '
$str( 8
;8 9
private 
const 
string 
k_ScaleY %
=& '
$str( 8
;8 9
private 
const 
string 
k_ScaleZ %
=& '
$str( 8
;8 9
private 
const 
string 
k_EulerAnglesRaw -
=. /
$str0 E
;E F
private 
const 
string 
k_EulerHint (
=) *
$str+ C
;C D
private 
const 
string 
k_Pos "
=# $
$str% 6
;6 7
private 
const 
string 
k_Rot "
=# $
$str% 6
;6 7
private 
const 
string 
	k_MotionT &
=' (
$str) 2
;2 3
private 
const 
string 
	k_MotionQ &
=' (
$str) 2
;2 3
private 
const 
string 
k_RootT $
=% &
$str' .
;. /
private 
const 
string 
k_RootQ $
=% &
$str' .
;. /
internal 
static 
Object 
s_PreviewDriver .
;. /
internal"" 
class"" &
EditorCurveBindingComparer"" 1
:""2 3
IEqualityComparer""4 E
<""E F
EditorCurveBinding""F X
>""X Y
{## 	
public$$ 
bool$$ 
Equals$$ 
($$ 
EditorCurveBinding$$ 1
x$$2 3
,$$3 4
EditorCurveBinding$$5 G
y$$H I
)$$I J
{$$K L
return$$M S
x$$T U
.$$U V
path$$V Z
.$$Z [
Equals$$[ a
($$a b
y$$b c
.$$c d
path$$d h
)$$h i
&&$$j l
x$$m n
.$$n o
type$$o s
==$$t v
y$$w x
.$$x y
type$$y }
&&	$$~ Ä
x
$$Å Ç
.
$$Ç É
propertyName
$$É è
==
$$ê í
y
$$ì î
.
$$î ï
propertyName
$$ï °
;
$$° ¢
}
$$£ §
public%% 
int%% 
GetHashCode%% "
(%%" #
EditorCurveBinding%%# 5
obj%%6 9
)%%9 :
{&& 
return'' 
obj'' 
.'' 
propertyName'' '
.''' (
GetHashCode''( 3
(''3 4
)''4 5
^''6 7
obj''8 ;
.''; <
path''< @
.''@ A
GetHashCode''A L
(''L M
)''M N
;''N O
}(( 
public** 
static** 
readonly** "&
EditorCurveBindingComparer**# =
Instance**> F
=**G H
new**I L&
EditorCurveBindingComparer**M g
(**g h
)**h i
;**i j
}++ 	
private.. 
static.. 
readonly.. 

Dictionary..  *
<..* +
EditorCurveBinding..+ =
,..= >
int..? B
>..B C

s_CurveSet..D N
=..O P
new..Q T

Dictionary..U _
<.._ `
EditorCurveBinding..` r
,..r s
int..t w
>..w x
(..x y
$num..y ~
,..~ (
EditorCurveBindingComparer
..Ä ö
.
..ö õ
Instance
..õ £
)
..£ §
;
..§ •
private// 
static// 
readonly//  
AnimatorBindingCache//  4
s_BindingCache//5 C
=//D E
new//F I 
AnimatorBindingCache//J ^
(//^ _
)//_ `
;//` a
private33 
static33 
bool33 
FastStartsWith33 *
(33* +
string33+ 1
a332 3
,333 4
string335 ;
	toCompare33< E
)33E F
{44 	
int55 
aLen55 
=55 
a55 
.55 
Length55 
;55  
int66 
bLen66 
=66 
	toCompare66  
.66  !
Length66! '
;66' (
int88 
ap88 
=88 
$num88 
;88 
int99 
bp99 
=99 
$num99 
;99 
while;; 
(;; 
ap;; 
<;; 
aLen;; 
&&;; 
bp;;  "
<;;# $
bLen;;% )
&&;;* ,
a;;- .
[;;. /
ap;;/ 1
];;1 2
==;;3 5
	toCompare;;6 ?
[;;? @
bp;;@ B
];;B C
);;C D
{<< 
ap== 
++== 
;== 
bp>> 
++>> 
;>> 
}?? 
returnAA 
(AA 
bpAA 
==AA 
bLenAA 
)AA 
;AA  
}BB 	
publicDD 
staticDD 
voidDD 
ClearCachesDD &
(DD& '
)DD' (
{EE 	
s_BindingCacheFF 
.FF 
ClearFF  
(FF  !
)FF! "
;FF" #

s_CurveSetGG 
.GG 
ClearGG 
(GG 
)GG 
;GG 
}HH 	
publicJJ 
staticJJ 
EditorCurveBindingJJ (
[JJ( )
]JJ) *
GetBindingsJJ+ 6
(JJ6 7

GameObjectJJ7 A
animatorRootJJB N
,JJN O
IEnumerableJJP [
<JJ[ \
AnimationClipJJ\ i
>JJi j
clipsJJk p
)JJp q
{KK 	

s_CurveSetLL 
.LL 
ClearLL 
(LL 
)LL 
;LL 
foreachMM 
(MM 
varMM 
clipMM 
inMM  
clipsMM! &
)MM& '
{NN 
AddBindingsOO 
(OO 
s_BindingCacheOO *
.OO* +
GetCurveBindingsOO+ ;
(OO; <
clipOO< @
)OO@ A
)OOA B
;OOB C
}PP 
ifSS 
(SS !
NeedsSkeletonBindingsSS %
(SS% &

s_CurveSetSS& 0
.SS0 1
KeysSS1 5
)SS5 6
)SS6 7
AddBindingsTT 
(TT 
s_BindingCacheTT *
.TT* +
GetAnimatorBindingsTT+ >
(TT> ?
animatorRootTT? K
)TTK L
)TTL M
;TTM N
varVV 
bindingsVV 
=VV 
newVV 
EditorCurveBindingVV 1
[VV1 2

s_CurveSetVV2 <
.VV< =
KeysVV= A
.VVA B
CountVVB G
]VVG H
;VVH I

s_CurveSetWW 
.WW 
KeysWW 
.WW 
CopyToWW "
(WW" #
bindingsWW# +
,WW+ ,
$numWW- .
)WW. /
;WW/ 0
returnXX 
bindingsXX 
;XX 
}YY 	
public[[ 
static[[ 
int[[ 
GetClipHash[[ %
([[% &
List[[& *
<[[* +
AnimationClip[[+ 8
>[[8 9
clips[[: ?
)[[? @
{\\ 	
int]] 
hash]] 
=]] 
$num]] 
;]] 
foreach__ 
(__ 
var__ 
clip__ 
in__  
clips__! &
)__& '
{`` 
varaa 
statsaa 
=aa 
AnimationUtilityaa ,
.aa, -!
GetAnimationClipStatsaa- B
(aaB C
clipaaC G
)aaG H
;aaH I
hashbb 
=bb 
HashUtilitybb "
.bb" #
CombineHashbb# .
(bb. /
hashbb/ 3
,bb3 4
clipbb5 9
.bb9 :
GetHashCodebb: E
(bbE F
)bbF G
,bbG H
statsbbI N
.bbN O
clipsbbO T
,bbT U
statsbbV [
.bb[ \
sizebb\ `
,bb` a
statsbbb g
.bbg h
totalCurvesbbh s
)bbs t
;bbt u
}cc 
returndd 
hashdd 
;dd 
}ee 	
publicgg 
staticgg 
voidgg 
PreviewFromCurvesgg ,
(gg, -

GameObjectgg- 7
animatorRootgg8 D
,ggD E
IEnumerableggF Q
<ggQ R
EditorCurveBindingggR d
>ggd e
keysggf j
)ggj k
{hh 	
ifii 
(ii 
!ii 
AnimationModeii 
.ii 
InAnimationModeii .
(ii. /
)ii/ 0
)ii0 1
returnjj 
;jj 
varll 

avatarRootll 
=ll 
GetAvatarRootll *
(ll* +
animatorRootll+ 7
)ll7 8
;ll8 9
foreachmm 
(mm 
varmm 
bindingmm  
inmm! #
keysmm$ (
)mm( )
{nn 
ifoo 
(oo 
IsAvatarBindingoo #
(oo# $
bindingoo$ +
)oo+ ,
||oo- /
IsEuleroo0 7
(oo7 8
bindingoo8 ?
)oo? @
)oo@ A
continuepp 
;pp 
boolrr 
isTransformrr  
=rr! "
typeofrr# )
(rr) *
	Transformrr* 3
)rr3 4
.rr4 5
IsAssignableFromrr5 E
(rrE F
bindingrrF M
.rrM N
typerrN R
)rrR S
;rrS T
ifss 
(ss 
isTransformss 
&&ss  "
bindingss# *
.ss* +
propertyNamess+ 7
.ss7 8
Equalsss8 >
(ss> ? 
AnimatorBindingCachess? S
.ssS T
TRPlaceHolderssT a
)ssa b
)ssb c
AddTRBindingtt  
(tt  !
animatorRoottt! -
,tt- .
bindingtt/ 6
)tt6 7
;tt7 8
elseuu 
ifuu 
(uu 
isTransformuu $
&&uu% '
bindinguu( /
.uu/ 0
propertyNameuu0 <
.uu< =
Equalsuu= C
(uuC D 
AnimatorBindingCacheuuD X
.uuX Y
ScalePlaceholderuuY i
)uui j
)uuj k
AddScaleBindingvv #
(vv# $
animatorRootvv$ 0
,vv0 1
bindingvv2 9
)vv9 :
;vv: ;
elseww 
AnimationModexx !
.xx! "!
AddEditorCurveBindingxx" 7
(xx7 8

avatarRootxx8 B
,xxB C
bindingxxD K
)xxK L
;xxL M
}yy 
}zz 	
public|| 
static|| 
AnimationClip|| #
CreateDefaultClip||$ 5
(||5 6

GameObject||6 @
animatorRoot||A M
,||M N
IEnumerable||O Z
<||Z [
EditorCurveBinding||[ m
>||m n
keys||o s
)||s t
{}} 	
AnimationClip~~ 
animClip~~ "
=~~# $
new~~% (
AnimationClip~~) 6
(~~6 7
)~~7 8
{~~9 :
name~~; ?
=~~@ A
$str~~B O
}~~P Q
;~~Q R
var 
	keyFrames 
= 
new 
[  
]  !
{" #
new# &
Keyframe' /
(/ 0
$num0 1
,1 2
$num3 4
)4 5
}5 6
;6 7
var
ÄÄ 
curve
ÄÄ 
=
ÄÄ 
new
ÄÄ 
AnimationCurve
ÄÄ *
(
ÄÄ* +
	keyFrames
ÄÄ+ 4
)
ÄÄ4 5
;
ÄÄ5 6
bool
ÅÅ 

rootMotion
ÅÅ 
=
ÅÅ 
false
ÅÅ #
;
ÅÅ# $
var
ÇÇ 

avatarRoot
ÇÇ 
=
ÇÇ 
GetAvatarRoot
ÇÇ *
(
ÇÇ* +
animatorRoot
ÇÇ+ 7
)
ÇÇ7 8
;
ÇÇ8 9
foreach
ÑÑ 
(
ÑÑ 
var
ÑÑ 
binding
ÑÑ  
in
ÑÑ! #
keys
ÑÑ$ (
)
ÑÑ( )
{
ÖÖ 
if
ÜÜ 
(
ÜÜ 
IsRootMotion
ÜÜ  
(
ÜÜ  !
binding
ÜÜ! (
)
ÜÜ( )
)
ÜÜ) *
{
áá 

rootMotion
àà 
=
àà  
true
àà! %
;
àà% &
continue
ââ 
;
ââ 
}
ää 
if
åå 
(
åå 
typeof
åå 
(
åå 
	Transform
åå $
)
åå$ %
.
åå% &
IsAssignableFrom
åå& 6
(
åå6 7
binding
åå7 >
.
åå> ?
type
åå? C
)
ååC D
&&
ååE G
binding
ååH O
.
ååO P
propertyName
ååP \
.
åå\ ]
Equals
åå] c
(
ååc d"
AnimatorBindingCache
ååd x
.
ååx y
TRPlaceHolderååy Ü
)ååÜ á
)ååá à
{
çç 
if
éé 
(
éé 
string
éé 
.
éé 
IsNullOrEmpty
éé ,
(
éé, -
binding
éé- 4
.
éé4 5
path
éé5 9
)
éé9 :
)
éé: ;

rootMotion
èè "
=
èè# $
true
èè% )
;
èè) *
else
êê 
{
ëë 
var
íí 
	transform
íí %
=
íí& '
animatorRoot
íí( 4
.
íí4 5
	transform
íí5 >
.
íí> ?
Find
íí? C
(
ííC D
binding
ííD K
.
ííK L
path
ííL P
)
ííP Q
;
ííQ R
if
ìì 
(
ìì 
	transform
ìì %
!=
ìì& (
null
ìì) -
)
ìì- .
{
îî 
var
ïï 
pos
ïï  #
=
ïï$ %
	transform
ïï& /
.
ïï/ 0
localPosition
ïï0 =
;
ïï= >
var
ññ 
rot
ññ  #
=
ññ$ %
	transform
ññ& /
.
ññ/ 0
localRotation
ññ0 =
;
ññ= >
animClip
óó $
.
óó$ %
SetCurve
óó% -
(
óó- .
binding
óó. 5
.
óó5 6
path
óó6 :
,
óó: ;
typeof
óó< B
(
óóB C
	Transform
óóC L
)
óóL M
,
óóM N
k_PosX
óóO U
,
óóU V

SetZeroKey
óóW a
(
óóa b
curve
óób g
,
óóg h
	keyFrames
óói r
,
óór s
pos
óót w
.
óów x
x
óóx y
)
óóy z
)
óóz {
;
óó{ |
animClip
òò $
.
òò$ %
SetCurve
òò% -
(
òò- .
binding
òò. 5
.
òò5 6
path
òò6 :
,
òò: ;
typeof
òò< B
(
òòB C
	Transform
òòC L
)
òòL M
,
òòM N
k_PosY
òòO U
,
òòU V

SetZeroKey
òòW a
(
òòa b
curve
òòb g
,
òòg h
	keyFrames
òòi r
,
òòr s
pos
òòt w
.
òòw x
y
òòx y
)
òòy z
)
òòz {
;
òò{ |
animClip
ôô $
.
ôô$ %
SetCurve
ôô% -
(
ôô- .
binding
ôô. 5
.
ôô5 6
path
ôô6 :
,
ôô: ;
typeof
ôô< B
(
ôôB C
	Transform
ôôC L
)
ôôL M
,
ôôM N
k_PosZ
ôôO U
,
ôôU V

SetZeroKey
ôôW a
(
ôôa b
curve
ôôb g
,
ôôg h
	keyFrames
ôôi r
,
ôôr s
pos
ôôt w
.
ôôw x
z
ôôx y
)
ôôy z
)
ôôz {
;
ôô{ |
animClip
öö $
.
öö$ %
SetCurve
öö% -
(
öö- .
binding
öö. 5
.
öö5 6
path
öö6 :
,
öö: ;
typeof
öö< B
(
ööB C
	Transform
ööC L
)
ööL M
,
ööM N
k_RotX
ööO U
,
ööU V

SetZeroKey
ööW a
(
ööa b
curve
ööb g
,
öög h
	keyFrames
ööi r
,
öör s
rot
ööt w
.
ööw x
x
ööx y
)
ööy z
)
ööz {
;
öö{ |
animClip
õõ $
.
õõ$ %
SetCurve
õõ% -
(
õõ- .
binding
õõ. 5
.
õõ5 6
path
õõ6 :
,
õõ: ;
typeof
õõ< B
(
õõB C
	Transform
õõC L
)
õõL M
,
õõM N
k_RotY
õõO U
,
õõU V

SetZeroKey
õõW a
(
õõa b
curve
õõb g
,
õõg h
	keyFrames
õõi r
,
õõr s
rot
õõt w
.
õõw x
y
õõx y
)
õõy z
)
õõz {
;
õõ{ |
animClip
úú $
.
úú$ %
SetCurve
úú% -
(
úú- .
binding
úú. 5
.
úú5 6
path
úú6 :
,
úú: ;
typeof
úú< B
(
úúB C
	Transform
úúC L
)
úúL M
,
úúM N
k_RotZ
úúO U
,
úúU V

SetZeroKey
úúW a
(
úúa b
curve
úúb g
,
úúg h
	keyFrames
úúi r
,
úúr s
rot
úút w
.
úúw x
z
úúx y
)
úúy z
)
úúz {
;
úú{ |
animClip
ùù $
.
ùù$ %
SetCurve
ùù% -
(
ùù- .
binding
ùù. 5
.
ùù5 6
path
ùù6 :
,
ùù: ;
typeof
ùù< B
(
ùùB C
	Transform
ùùC L
)
ùùL M
,
ùùM N
k_RotW
ùùO U
,
ùùU V

SetZeroKey
ùùW a
(
ùùa b
curve
ùùb g
,
ùùg h
	keyFrames
ùùi r
,
ùùr s
rot
ùùt w
.
ùùw x
w
ùùx y
)
ùùy z
)
ùùz {
;
ùù{ |
}
ûû 
}
üü 
continue
°° 
;
°° 
}
¢¢ 
if
§§ 
(
§§ 
typeof
§§ 
(
§§ 
	Transform
§§ $
)
§§$ %
.
§§% &
IsAssignableFrom
§§& 6
(
§§6 7
binding
§§7 >
.
§§> ?
type
§§? C
)
§§C D
&&
§§E G
binding
§§H O
.
§§O P
propertyName
§§P \
==
§§] _"
AnimatorBindingCache
§§` t
.
§§t u
ScalePlaceholder§§u Ö
)§§Ö Ü
{
•• 
var
¶¶ 
	transform
¶¶ !
=
¶¶" #
animatorRoot
¶¶$ 0
.
¶¶0 1
	transform
¶¶1 :
.
¶¶: ;
Find
¶¶; ?
(
¶¶? @
binding
¶¶@ G
.
¶¶G H
path
¶¶H L
)
¶¶L M
;
¶¶M N
if
ßß 
(
ßß 
	transform
ßß !
!=
ßß" $
null
ßß% )
)
ßß) *
{
®® 
var
©© 
scale
©© !
=
©©" #
	transform
©©$ -
.
©©- .

localScale
©©. 8
;
©©8 9
animClip
™™  
.
™™  !
SetCurve
™™! )
(
™™) *
binding
™™* 1
.
™™1 2
path
™™2 6
,
™™6 7
typeof
™™8 >
(
™™> ?
	Transform
™™? H
)
™™H I
,
™™I J
k_ScaleX
™™K S
,
™™S T

SetZeroKey
™™U _
(
™™_ `
curve
™™` e
,
™™e f
	keyFrames
™™g p
,
™™p q
scale
™™r w
.
™™w x
x
™™x y
)
™™y z
)
™™z {
;
™™{ |
animClip
´´  
.
´´  !
SetCurve
´´! )
(
´´) *
binding
´´* 1
.
´´1 2
path
´´2 6
,
´´6 7
typeof
´´8 >
(
´´> ?
	Transform
´´? H
)
´´H I
,
´´I J
k_ScaleY
´´K S
,
´´S T

SetZeroKey
´´U _
(
´´_ `
curve
´´` e
,
´´e f
	keyFrames
´´g p
,
´´p q
scale
´´r w
.
´´w x
y
´´x y
)
´´y z
)
´´z {
;
´´{ |
animClip
¨¨  
.
¨¨  !
SetCurve
¨¨! )
(
¨¨) *
binding
¨¨* 1
.
¨¨1 2
path
¨¨2 6
,
¨¨6 7
typeof
¨¨8 >
(
¨¨> ?
	Transform
¨¨? H
)
¨¨H I
,
¨¨I J
k_ScaleZ
¨¨K S
,
¨¨S T

SetZeroKey
¨¨U _
(
¨¨_ `
curve
¨¨` e
,
¨¨e f
	keyFrames
¨¨g p
,
¨¨p q
scale
¨¨r w
.
¨¨w x
z
¨¨x y
)
¨¨y z
)
¨¨z {
;
¨¨{ |
}
≠≠ 
continue
ØØ 
;
ØØ 
}
∞∞ 
if
µµ 
(
µµ 
IsAvatarBinding
µµ #
(
µµ# $
binding
µµ$ +
)
µµ+ ,
||
µµ- /
IsEulerHint
µµ0 ;
(
µµ; <
binding
µµ< C
)
µµC D
||
µµE G
binding
µµH O
.
µµO P
isPPtrCurve
µµP [
)
µµ[ \
continue
∂∂ 
;
∂∂ 
float
∏∏ 

floatValue
∏∏  
;
∏∏  !
AnimationUtility
ππ  
.
ππ  !
GetFloatValue
ππ! .
(
ππ. /

avatarRoot
ππ/ 9
,
ππ9 :
binding
ππ; B
,
ππB C
out
ππD G

floatValue
ππH R
)
ππR S
;
ππS T
animClip
∫∫ 
.
∫∫ 
SetCurve
∫∫ !
(
∫∫! "
binding
∫∫" )
.
∫∫) *
path
∫∫* .
,
∫∫. /
binding
∫∫0 7
.
∫∫7 8
type
∫∫8 <
,
∫∫< =
binding
∫∫> E
.
∫∫E F
propertyName
∫∫F R
,
∫∫R S

SetZeroKey
∫∫T ^
(
∫∫^ _
curve
∫∫_ d
,
∫∫d e
	keyFrames
∫∫f o
,
∫∫o p

floatValue
∫∫q {
)
∫∫{ |
)
∫∫| }
;
∫∫} ~
}
ªª 
if
ææ 
(
ææ 

rootMotion
ææ 
)
ææ 
{
øø 
var
¿¿ 
pos
¿¿ 
=
¿¿ 
Vector3
¿¿ !
.
¿¿! "
zero
¿¿" &
;
¿¿& '
var
¡¡ 
rot
¡¡ 
=
¡¡ 

Quaternion
¡¡ $
.
¡¡$ %
identity
¡¡% -
;
¡¡- .
animClip
¬¬ 
.
¬¬ 
SetCurve
¬¬ !
(
¬¬! "
string
¬¬" (
.
¬¬( )
Empty
¬¬) .
,
¬¬. /
typeof
¬¬0 6
(
¬¬6 7
	Transform
¬¬7 @
)
¬¬@ A
,
¬¬A B
k_PosX
¬¬C I
,
¬¬I J

SetZeroKey
¬¬K U
(
¬¬U V
curve
¬¬V [
,
¬¬[ \
	keyFrames
¬¬] f
,
¬¬f g
pos
¬¬h k
.
¬¬k l
x
¬¬l m
)
¬¬m n
)
¬¬n o
;
¬¬o p
animClip
√√ 
.
√√ 
SetCurve
√√ !
(
√√! "
string
√√" (
.
√√( )
Empty
√√) .
,
√√. /
typeof
√√0 6
(
√√6 7
	Transform
√√7 @
)
√√@ A
,
√√A B
k_PosY
√√C I
,
√√I J

SetZeroKey
√√K U
(
√√U V
curve
√√V [
,
√√[ \
	keyFrames
√√] f
,
√√f g
pos
√√h k
.
√√k l
y
√√l m
)
√√m n
)
√√n o
;
√√o p
animClip
ƒƒ 
.
ƒƒ 
SetCurve
ƒƒ !
(
ƒƒ! "
string
ƒƒ" (
.
ƒƒ( )
Empty
ƒƒ) .
,
ƒƒ. /
typeof
ƒƒ0 6
(
ƒƒ6 7
	Transform
ƒƒ7 @
)
ƒƒ@ A
,
ƒƒA B
k_PosZ
ƒƒC I
,
ƒƒI J

SetZeroKey
ƒƒK U
(
ƒƒU V
curve
ƒƒV [
,
ƒƒ[ \
	keyFrames
ƒƒ] f
,
ƒƒf g
pos
ƒƒh k
.
ƒƒk l
z
ƒƒl m
)
ƒƒm n
)
ƒƒn o
;
ƒƒo p
animClip
≈≈ 
.
≈≈ 
SetCurve
≈≈ !
(
≈≈! "
string
≈≈" (
.
≈≈( )
Empty
≈≈) .
,
≈≈. /
typeof
≈≈0 6
(
≈≈6 7
	Transform
≈≈7 @
)
≈≈@ A
,
≈≈A B
k_RotX
≈≈C I
,
≈≈I J

SetZeroKey
≈≈K U
(
≈≈U V
curve
≈≈V [
,
≈≈[ \
	keyFrames
≈≈] f
,
≈≈f g
rot
≈≈h k
.
≈≈k l
x
≈≈l m
)
≈≈m n
)
≈≈n o
;
≈≈o p
animClip
∆∆ 
.
∆∆ 
SetCurve
∆∆ !
(
∆∆! "
string
∆∆" (
.
∆∆( )
Empty
∆∆) .
,
∆∆. /
typeof
∆∆0 6
(
∆∆6 7
	Transform
∆∆7 @
)
∆∆@ A
,
∆∆A B
k_RotY
∆∆C I
,
∆∆I J

SetZeroKey
∆∆K U
(
∆∆U V
curve
∆∆V [
,
∆∆[ \
	keyFrames
∆∆] f
,
∆∆f g
rot
∆∆h k
.
∆∆k l
y
∆∆l m
)
∆∆m n
)
∆∆n o
;
∆∆o p
animClip
«« 
.
«« 
SetCurve
«« !
(
««! "
string
««" (
.
««( )
Empty
««) .
,
««. /
typeof
««0 6
(
««6 7
	Transform
««7 @
)
««@ A
,
««A B
k_RotZ
««C I
,
««I J

SetZeroKey
««K U
(
««U V
curve
««V [
,
««[ \
	keyFrames
««] f
,
««f g
rot
««h k
.
««k l
z
««l m
)
««m n
)
««n o
;
««o p
animClip
»» 
.
»» 
SetCurve
»» !
(
»»! "
string
»»" (
.
»»( )
Empty
»») .
,
»». /
typeof
»»0 6
(
»»6 7
	Transform
»»7 @
)
»»@ A
,
»»A B
k_RotW
»»C I
,
»»I J

SetZeroKey
»»K U
(
»»U V
curve
»»V [
,
»»[ \
	keyFrames
»»] f
,
»»f g
rot
»»h k
.
»»k l
w
»»l m
)
»»m n
)
»»n o
;
»»o p
}
…… 
return
ÀÀ 
animClip
ÀÀ 
;
ÀÀ 
}
ÃÃ 	
public
ŒŒ 
static
ŒŒ 
bool
ŒŒ 
IsRootMotion
ŒŒ '
(
ŒŒ' ( 
EditorCurveBinding
ŒŒ( :
binding
ŒŒ; B
)
ŒŒB C
{
œœ 	
if
—— 
(
—— 
typeof
—— 
(
—— 
	Transform
——  
)
——  !
.
——! "
IsAssignableFrom
——" 2
(
——2 3
binding
——3 :
.
——: ;
type
——; ?
)
——? @
&&
——A C
string
——D J
.
——J K
IsNullOrEmpty
——K X
(
——X Y
binding
——Y `
.
——` a
path
——a e
)
——e f
)
——f g
{
““ 
return
”” 
FastStartsWith
”” %
(
””% &
binding
””& -
.
””- .
propertyName
””. :
,
””: ;
k_Pos
””< A
)
””A B
||
””D F
FastStartsWith
””G U
(
””U V
binding
””V ]
.
””] ^
propertyName
””^ j
,
””j k
k_Rot
””l q
)
””q r
;
””r s
}
‘‘ 
if
◊◊ 
(
◊◊ 
binding
◊◊ 
.
◊◊ 
type
◊◊ 
==
◊◊ 
typeof
◊◊  &
(
◊◊& '
Animator
◊◊' /
)
◊◊/ 0
)
◊◊0 1
{
ÿÿ 
return
ŸŸ 
FastStartsWith
ŸŸ %
(
ŸŸ% &
binding
ŸŸ& -
.
ŸŸ- .
propertyName
ŸŸ. :
,
ŸŸ: ;
	k_MotionT
ŸŸ< E
)
ŸŸE F
||
ŸŸG I
FastStartsWith
⁄⁄ "
(
⁄⁄" #
binding
⁄⁄# *
.
⁄⁄* +
propertyName
⁄⁄+ 7
,
⁄⁄7 8
	k_MotionQ
⁄⁄9 B
)
⁄⁄B C
||
⁄⁄D F
FastStartsWith
€€ "
(
€€" #
binding
€€# *
.
€€* +
propertyName
€€+ 7
,
€€7 8
k_RootT
€€9 @
)
€€@ A
||
€€B D
FastStartsWith
‹‹ "
(
‹‹" #
binding
‹‹# *
.
‹‹* +
propertyName
‹‹+ 7
,
‹‹7 8
k_RootQ
‹‹9 @
)
‹‹@ A
;
‹‹A B
}
›› 
return
ﬂﬂ 
false
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
private
‚‚ 
static
‚‚ 
bool
‚‚ #
NeedsSkeletonBindings
‚‚ 1
(
‚‚1 2
IEnumerable
‚‚2 =
<
‚‚= > 
EditorCurveBinding
‚‚> P
>
‚‚P Q
bindings
‚‚R Z
)
‚‚Z [
{
„„ 	
foreach
‰‰ 
(
‰‰ 
var
‰‰ 
b
‰‰ 
in
‰‰ 
bindings
‰‰ &
)
‰‰& '
{
ÂÂ 
if
ÊÊ 
(
ÊÊ 
IsSkeletalBinding
ÊÊ %
(
ÊÊ% &
b
ÊÊ& '
)
ÊÊ' (
)
ÊÊ( )
return
ÁÁ 
true
ÁÁ 
;
ÁÁ  
}
ËË 
return
ÍÍ 
false
ÍÍ 
;
ÍÍ 
}
ÎÎ 	
private
ÌÌ 
static
ÌÌ 
void
ÌÌ 
AddBindings
ÌÌ '
(
ÌÌ' (
IEnumerable
ÌÌ( 3
<
ÌÌ3 4 
EditorCurveBinding
ÌÌ4 F
>
ÌÌF G
bindings
ÌÌH P
)
ÌÌP Q
{
ÓÓ 	
foreach
ÔÔ 
(
ÔÔ 
var
ÔÔ 
b
ÔÔ 
in
ÔÔ 
bindings
ÔÔ &
)
ÔÔ& '
{
 
if
ÒÒ 
(
ÒÒ 
!
ÒÒ 

s_CurveSet
ÒÒ 
.
ÒÒ  
ContainsKey
ÒÒ  +
(
ÒÒ+ ,
b
ÒÒ, -
)
ÒÒ- .
)
ÒÒ. /

s_CurveSet
ÚÚ 
[
ÚÚ 
b
ÚÚ  
]
ÚÚ  !
=
ÚÚ" #
$num
ÚÚ$ %
;
ÚÚ% &
}
ÛÛ 
}
ÙÙ 	
private
ˆˆ 
static
ˆˆ 
void
ˆˆ 
AddTRBinding
ˆˆ (
(
ˆˆ( )

GameObject
ˆˆ) 3
root
ˆˆ4 8
,
ˆˆ8 9 
EditorCurveBinding
ˆˆ: L
binding
ˆˆM T
)
ˆˆT U
{
˜˜ 	
var
¯¯ 
t
¯¯ 
=
¯¯ 
root
¯¯ 
.
¯¯ 
	transform
¯¯ "
.
¯¯" #
Find
¯¯# '
(
¯¯' (
binding
¯¯( /
.
¯¯/ 0
path
¯¯0 4
)
¯¯4 5
;
¯¯5 6
if
˘˘ 
(
˘˘ 
t
˘˘ 
!=
˘˘ 
null
˘˘ 
)
˘˘ 
{
˙˙ #
DrivenPropertyManager
˚˚ %
.
˚˚% &
RegisterProperty
˚˚& 6
(
˚˚6 7
s_PreviewDriver
˚˚7 F
,
˚˚F G
t
˚˚H I
,
˚˚I J
$str
˚˚K \
)
˚˚\ ]
;
˚˚] ^#
DrivenPropertyManager
¸¸ %
.
¸¸% &
RegisterProperty
¸¸& 6
(
¸¸6 7
s_PreviewDriver
¸¸7 F
,
¸¸F G
t
¸¸H I
,
¸¸I J
$str
¸¸K \
)
¸¸\ ]
;
¸¸] ^
}
˝˝ 
}
˛˛ 	
private
ÄÄ 
static
ÄÄ 
void
ÄÄ 
AddScaleBinding
ÄÄ +
(
ÄÄ+ ,

GameObject
ÄÄ, 6
root
ÄÄ7 ;
,
ÄÄ; < 
EditorCurveBinding
ÄÄ= O
binding
ÄÄP W
)
ÄÄW X
{
ÅÅ 	
var
ÇÇ 
t
ÇÇ 
=
ÇÇ 
root
ÇÇ 
.
ÇÇ 
	transform
ÇÇ "
.
ÇÇ" #
Find
ÇÇ# '
(
ÇÇ' (
binding
ÇÇ( /
.
ÇÇ/ 0
path
ÇÇ0 4
)
ÇÇ4 5
;
ÇÇ5 6
if
ÉÉ 
(
ÉÉ 
t
ÉÉ 
!=
ÉÉ 
null
ÉÉ 
)
ÉÉ #
DrivenPropertyManager
ÑÑ %
.
ÑÑ% &
RegisterProperty
ÑÑ& 6
(
ÑÑ6 7
s_PreviewDriver
ÑÑ7 F
,
ÑÑF G
t
ÑÑH I
,
ÑÑI J
$str
ÑÑK Y
)
ÑÑY Z
;
ÑÑZ [
}
ÖÖ 	
private
áá 
static
áá 
bool
áá 
IsEuler
áá #
(
áá# $ 
EditorCurveBinding
áá$ 6
binding
áá7 >
)
áá> ?
{
àà 	
return
ââ 
FastStartsWith
ââ !
(
ââ! "
binding
ââ" )
.
ââ) *
propertyName
ââ* 6
,
ââ6 7
k_EulerAnglesRaw
ââ8 H
)
ââH I
&&
ââJ L
typeof
ää 
(
ää 
	Transform
ää  
)
ää  !
.
ää! "
IsAssignableFrom
ää" 2
(
ää2 3
binding
ää3 :
.
ää: ;
type
ää; ?
)
ää? @
;
ää@ A
}
ãã 	
private
çç 
static
çç 
bool
çç 
IsAvatarBinding
çç +
(
çç+ , 
EditorCurveBinding
çç, >
binding
çç? F
)
ççF G
{
éé 	
return
èè 
string
èè 
.
èè 
IsNullOrEmpty
èè '
(
èè' (
binding
èè( /
.
èè/ 0
path
èè0 4
)
èè4 5
&&
èè6 8
typeof
èè9 ?
(
èè? @
Animator
èè@ H
)
èèH I
==
èèJ L
binding
èèM T
.
èèT U
type
èèU Y
;
èèY Z
}
êê 	
private
íí 
static
íí 
bool
íí 
IsSkeletalBinding
íí -
(
íí- . 
EditorCurveBinding
íí. @
binding
ííA H
)
ííH I
{
ìì 	
return
ïï 
typeof
ïï 
(
ïï 
	Transform
ïï #
)
ïï# $
.
ïï$ %
IsAssignableFrom
ïï% 5
(
ïï5 6
binding
ïï6 =
.
ïï= >
type
ïï> B
)
ïïB C
||
ïïD F
typeof
ïïG M
(
ïïM N!
SkinnedMeshRenderer
ïïN a
)
ïïa b
.
ïïb c
IsAssignableFrom
ïïc s
(
ïïs t
binding
ïït {
.
ïï{ |
typeïï| Ä
)ïïÄ Å
;ïïÅ Ç
}
ññ 	
private
òò 
static
òò 
AnimationCurve
òò %

SetZeroKey
òò& 0
(
òò0 1
AnimationCurve
òò1 ?
curve
òò@ E
,
òòE F
Keyframe
òòG O
[
òòO P
]
òòP Q
keys
òòR V
,
òòV W
float
òòX ]
val
òò^ a
)
òòa b
{
ôô 	
keys
öö 
[
öö 
$num
öö 
]
öö 
.
öö 
value
öö 
=
öö 
val
öö 
;
öö  
curve
õõ 
.
õõ 
keys
õõ 
=
õõ 
keys
õõ 
;
õõ 
return
úú 
curve
úú 
;
úú 
}
ùù 	
private
üü 
static
üü 
bool
üü 
IsEulerHint
üü '
(
üü' ( 
EditorCurveBinding
üü( :
binding
üü; B
)
üüB C
{
†† 	
return
°° 
typeof
°° 
(
°° 
	Transform
°° #
)
°°# $
.
°°$ %
IsAssignableFrom
°°% 5
(
°°5 6
binding
°°6 =
.
°°= >
type
°°> B
)
°°B C
&&
°°D F
binding
°°G N
.
°°N O
propertyName
°°O [
.
°°[ \

StartsWith
°°\ f
(
°°f g
k_EulerHint
°°g r
)
°°r s
;
°°s t
}
¢¢ 	
private
§§ 
static
§§ 

GameObject
§§ !
GetAvatarRoot
§§" /
(
§§/ 0

GameObject
§§0 :
animatorRoot
§§; G
)
§§G H
{
•• 	
var
¶¶ 
animator
¶¶ 
=
¶¶ 
animatorRoot
¶¶ '
.
¶¶' (
GetComponent
¶¶( 4
<
¶¶4 5
Animator
¶¶5 =
>
¶¶= >
(
¶¶> ?
)
¶¶? @
;
¶¶@ A
if
ßß 
(
ßß 
animator
ßß 
!=
ßß 
null
ßß  
&&
ßß! #
animator
ßß$ ,
.
ßß, -

avatarRoot
ßß- 7
!=
ßß8 :
animatorRoot
ßß; G
.
ßßG H
	transform
ßßH Q
)
ßßQ R
return
®® 
animator
®® 
.
®®  

avatarRoot
®®  *
.
®®* +

gameObject
®®+ 5
;
®®5 6
return
©© 
animatorRoot
©© 
;
©©  
}
™™ 	
}
´´ 
}¨¨ Ó
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Events\INotificationOptionProvider.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
public 

	interface '
INotificationOptionProvider 0
{		 
NotificationFlags 
flags 
{  !
get" %
;% &
}' (
} 
} §S
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Utilities\TimelineCreateUtilities.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
static		 

class		 #
TimelineCreateUtilities		 (
{

 
public 
static 
string #
GenerateUniqueActorName 4
(4 5
List5 9
<9 :
ScriptableObject: J
>J K
tracksL R
,R S
stringT Z
name[ _
)_ `
{ 	
if 
( 
! 
tracks 
. 
Exists 
( 
x  
=>! #
($ %
(% &
object& ,
), -
x- .
). /
!=0 2
null3 7
&&8 :
x; <
.< =
name= A
==B D
nameE I
)I J
)J K
return 
name 
; 
int 
numberInParentheses #
=$ %
$num& '
;' (
string 
baseName 
= 
name "
;" #
if 
( 
! 
string 
. 
IsNullOrEmpty %
(% &
name& *
)* +
&&, .
name/ 3
[3 4
name4 8
.8 9
Length9 ?
-@ A
$numB C
]C D
==E G
$charH K
)K L
{ 
int 
index 
= 
name  
.  !
LastIndexOf! ,
(, -
$char- 0
)0 1
;1 2
if 
( 
index 
> 
$num 
) 
{ 
string 
numberString '
=( )
name* .
.. /
	Substring/ 8
(8 9
index9 >
+? @
$numA B
,B C
nameD H
.H I
LengthI O
-P Q
indexR W
-X Y
$numZ [
)[ \
;\ ]
if 
( 
int 
. 
TryParse $
($ %
numberString% 1
,1 2
out3 6
numberInParentheses7 J
)J K
)K L
{ 
numberInParentheses +
+++ -
;- .
baseName  
=! "
name# '
.' (
	Substring( 1
(1 2
$num2 3
,3 4
index5 :
): ;
;; <
} 
} 
}   
baseName"" 
="" 
baseName"" 
.""  
TrimEnd""  '
(""' (
)""( )
;"") *
for$$ 
($$ 
int$$ 
i$$ 
=$$ 
numberInParentheses$$ ,
;$$, -
i$$. /
<$$0 1
numberInParentheses$$2 E
+$$F G
$num$$H L
;$$L M
i$$N O
++$$O Q
)$$Q R
{%% 
if&& 
(&& 
i&& 
>&& 
$num&& 
)&& 
{'' 
string(( 
result(( !
=((" #
string(($ *
.((* +
Format((+ 1
(((1 2
$str((2 =
,((= >
baseName((? G
,((G H
i((I J
)((J K
;((K L
if)) 
()) 
!)) 
tracks)) 
.))  
Exists))  &
())& '
x))' (
=>))) +
()), -
())- .
object)). 4
)))4 5
x))5 6
)))6 7
!=))8 :
null)); ?
&&))@ B
x))C D
.))D E
name))E I
==))J L
result))M S
)))S T
)))T U
return** 
result** %
;**% &
}++ 
},, 
return// 
name// 
;// 
}00 	
public22 
static22 
void22 
SaveAssetIntoObject22 .
(22. /
Object22/ 5

childAsset226 @
,22@ A
Object22B H
masterAsset22I T
)22T U
{33 	
if44 
(44 

childAsset44 
==44 
null44 "
||44# %
masterAsset44& 1
==442 4
null445 9
)449 :
return55 
;55 
if77 
(77 
(77 
masterAsset77 
.77 
	hideFlags77 &
&77' (
	HideFlags77) 2
.772 3
DontSave773 ;
)77; <
!=77= ?
$num77@ A
)77A B
{88 

childAsset99 
.99 
	hideFlags99 $
|=99% '
	HideFlags99( 1
.991 2
DontSave992 :
;99: ;
}:: 
else;; 
{<< 

childAsset== 
.== 
	hideFlags== $
|===% '
	HideFlags==( 1
.==1 2
HideInHierarchy==2 A
;==A B
if?? 
(?? 
!?? 
AssetDatabase?? "
.??" #
Contains??# +
(??+ ,

childAsset??, 6
)??6 7
&&??8 :
AssetDatabase??; H
.??H I
Contains??I Q
(??Q R
masterAsset??R ]
)??] ^
)??^ _
AssetDatabase@@ !
.@@! "
AddObjectToAsset@@" 2
(@@2 3

childAsset@@3 =
,@@= >
masterAsset@@? J
)@@J K
;@@K L
}BB 
}CC 	
publicEE 
staticEE 
AnimationClipEE #'
CreateAnimationClipForTrackEE$ ?
(EE? @
stringEE@ F
nameEEG K
,EEK L

TrackAssetEEM W
trackEEX ]
,EE] ^
boolEE_ c
isLegacyEEd l
)EEl m
{FF 	
varGG 
timelineAssetGG 
=GG 
trackGG  %
!=GG& (
nullGG) -
?GG. /
trackGG0 5
.GG5 6
timelineAssetGG6 C
:GGD E
nullGGF J
;GGJ K
varHH 

trackFlagsHH 
=HH 
trackHH "
!=HH# %
nullHH& *
?HH+ ,
trackHH- 2
.HH2 3
	hideFlagsHH3 <
:HH= >
	HideFlagsHH? H
.HHH I
NoneHHI M
;HHM N
varJJ 
curvesJJ 
=JJ 
newJJ 
AnimationClipJJ *
{KK 
legacyLL 
=LL 
isLegacyLL !
,LL! "
nameNN 
=NN 
nameNN 
,NN 
	frameRatePP 
=PP 
timelineAssetPP )
==PP* ,
nullPP- 1
?QQ 
TimelineAssetQQ #
.QQ# $
EditorSettingsQQ$ 2
.QQ2 3
kDefaultFpsQQ3 >
:RR 
timelineAssetRR #
.RR# $
editorSettingsRR$ 2
.RR2 3
fpsRR3 6
}SS 
;SS 
SaveAssetIntoObjectUU 
(UU  
curvesUU  &
,UU& '
timelineAssetUU( 5
)UU5 6
;UU6 7
curvesVV 
.VV 
	hideFlagsVV 
=VV 

trackFlagsVV )
&VV* +
~VV, -
	HideFlagsVV- 6
.VV6 7
HideInHierarchyVV7 F
;VVF G
TimelineUndoXX 
.XX %
RegisterCreatedObjectUndoXX 2
(XX2 3
curvesXX3 9
,XX9 :
$strXX; J
)XXJ K
;XXK L
returnZZ 
curvesZZ 
;ZZ 
}[[ 	
public]] 
static]] 
bool]] 
ValidateParentTrack]] .
(]]. /

TrackAsset]]/ 9
parent]]: @
,]]@ A
Type]]B F
	childType]]G P
)]]P Q
{^^ 	
if__ 
(__ 
	childType__ 
==__ 
null__ !
||__" $
!__% &
typeof__& ,
(__, -

TrackAsset__- 7
)__7 8
.__8 9
IsAssignableFrom__9 I
(__I J
	childType__J S
)__S T
)__T U
return`` 
false`` 
;`` 
ifcc 
(cc 
parentcc 
==cc 
nullcc 
)cc 
returndd 
truedd 
;dd 
ifhh 
(hh 
parenthh 
ishh 

ILayerablehh $
&&hh% '
!hh( )
parenthh) /
.hh/ 0

isSubTrackhh0 :
&&hh; =
parenthh> D
.hhD E
GetTypehhE L
(hhL M
)hhM N
==hhO Q
	childTypehhR [
)hh[ \
returnii 
trueii 
;ii 
varkk 
attrkk 
=kk 
	Attributekk  
.kk  !
GetCustomAttributekk! 3
(kk3 4
parentkk4 :
.kk: ;
GetTypekk; B
(kkB C
)kkC D
,kkD E
typeofkkF L
(kkL M(
SupportsChildTracksAttributekkM i
)kki j
)kkj k
askkl n)
SupportsChildTracksAttribute	kko ã
;
kkã å
ifll 
(ll 
attrll 
==ll 
nullll 
)ll 
returnmm 
falsemm 
;mm 
ifpp 
(pp 
attrpp 
.pp 
	childTypepp 
==pp !
nullpp" &
)pp& '
returnqq 
trueqq 
;qq 
iftt 
(tt 
	childTypett 
==tt 
attrtt !
.tt! "
	childTypett" +
)tt+ ,
{uu 
intvv 
	nestCountvv 
=vv 
$numvv  !
;vv! "
varww 
pww 
=ww 
parentww 
;ww 
whilexx 
(xx 
pxx 
!=xx 
nullxx  
&&xx! #
pxx$ %
.xx% &

isSubTrackxx& 0
)xx0 1
{yy 
	nestCountzz 
++zz 
;zz  
p{{ 
={{ 
p{{ 
.{{ 
parent{{  
as{{! #

TrackAsset{{$ .
;{{. /
}|| 
return~~ 
	nestCount~~  
<~~! "
attr~~# '
.~~' (
levels~~( .
;~~. /
} 
return
ÄÄ 
false
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
}
ÇÇ 
}ÉÉ Ú)
èD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Utilities\HashUtility.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
static 

class 
HashUtility 
{ 
public 
static 
int 
CombineHash %
(% &
this& *
int+ .
h1/ 1
,1 2
int3 6
h27 9
)9 :
{ 	
return		 
h1		 
^		 
(		 
int		 
)		 
(		 
h2		  
+		! "
$num		# -
+		. /
(		0 1
h1		1 3
<<		4 6
$num		7 8
)		8 9
+		: ;
(		< =
h1		= ?
>>		@ B
$num		C D
)		D E
)		E F
;		F G
}

 	
public 
static 
int 
CombineHash %
(% &
int& )
h1* ,
,, -
int. 1
h22 4
,4 5
int6 9
h3: <
)< =
{ 	
return 
CombineHash 
( 
h1 !
,! "
h2# %
)% &
.& '
CombineHash' 2
(2 3
h33 5
)5 6
;6 7
} 	
public 
static 
int 
CombineHash %
(% &
int& )
h1* ,
,, -
int. 1
h22 4
,4 5
int6 9
h3: <
,< =
int> A
h4B D
)D E
{ 	
return 
CombineHash 
( 
h1 !
,! "
h2# %
,% &
h3' )
)) *
.* +
CombineHash+ 6
(6 7
h47 9
)9 :
;: ;
} 	
public 
static 
int 
CombineHash %
(% &
int& )
h1* ,
,, -
int. 1
h22 4
,4 5
int6 9
h3: <
,< =
int> A
h4B D
,D E
intF I
h5J L
)L M
{ 	
return 
CombineHash 
( 
h1 !
,! "
h2# %
,% &
h3' )
,) *
h4+ -
)- .
.. /
CombineHash/ :
(: ;
h5; =
)= >
;> ?
} 	
public 
static 
int 
CombineHash %
(% &
int& )
h1* ,
,, -
int. 1
h22 4
,4 5
int6 9
h3: <
,< =
int> A
h4B D
,D E
intF I
h5J L
,L M
intN Q
h6R T
)T U
{ 	
return 
CombineHash 
( 
h1 !
,! "
h2# %
,% &
h3' )
,) *
h4+ -
,- .
h5/ 1
)1 2
.2 3
CombineHash3 >
(> ?
h6? A
)A B
;B C
} 	
public   
static   
int   
CombineHash   %
(  % &
int  & )
h1  * ,
,  , -
int  . 1
h2  2 4
,  4 5
int  6 9
h3  : <
,  < =
int  > A
h4  B D
,  D E
int  F I
h5  J L
,  L M
int  N Q
h6  R T
,  T U
int  V Y
h7  Z \
)  \ ]
{!! 	
return"" 
CombineHash"" 
("" 
h1"" !
,""! "
h2""# %
,""% &
h3""' )
,"") *
h4""+ -
,""- .
h5""/ 1
,""1 2
h6""3 5
)""5 6
.""6 7
CombineHash""7 B
(""B C
h7""C E
)""E F
;""F G
}## 	
public%% 
static%% 
int%% 
CombineHash%% %
(%%% &
int%%& )
[%%) *
]%%* +
hashes%%, 2
)%%2 3
{&& 	
if'' 
('' 
hashes'' 
=='' 
null'' 
||'' !
hashes''" (
.''( )
Length'') /
==''0 2
$num''3 4
)''4 5
return(( 
$num(( 
;(( 
var** 
h** 
=** 
hashes** 
[** 
$num** 
]** 
;** 
for++ 
(++ 
int++ 
i++ 
=++ 
$num++ 
;++ 
i++ 
<++ 
hashes++  &
.++& '
Length++' -
;++- .
++++/ 1
i++1 2
)++2 3
{,, 
h-- 
=-- 
CombineHash-- 
(--  
h--  !
,--! "
hashes--# )
[--) *
i--* +
]--+ ,
)--, -
;--- .
}.. 
return00 
h00 
;00 
}11 	
}22 
}33 ¸9
êD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Evaluation\RuntimeClip.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
class		 	
RuntimeClip		
 
:		 
RuntimeClipBase		 '
{

 
TimelineClip 
m_Clip 
; 
Playable 

m_Playable 
; 
Playable 
m_ParentMixer 
; 
public 
override 
double 
start $
{ 	
get 
{ 
return 
m_Clip 
.  
extrapolatedStart  1
;1 2
}3 4
} 	
public 
override 
double 
duration '
{ 	
get 
{ 
return 
m_Clip 
.   
extrapolatedDuration  4
;4 5
}6 7
} 	
public 
RuntimeClip 
( 
TimelineClip '
clip( ,
,, -
Playable. 6
clipPlayable7 C
,C D
PlayableE M
parentMixerN Y
)Y Z
{ 	
Create 
( 
clip 
, 
clipPlayable %
,% &
parentMixer' 2
)2 3
;3 4
} 	
void 
Create 
( 
TimelineClip  
clip! %
,% &
Playable' /
clipPlayable0 <
,< =
Playable> F
parentMixerG R
)R S
{ 	
m_Clip   
=   
clip   
;   

m_Playable!! 
=!! 
clipPlayable!! %
;!!% &
m_ParentMixer"" 
="" 
parentMixer"" '
;""' (
clipPlayable## 
.## 
Pause## 
(## 
)##  
;##  !
}$$ 	
public&& 
TimelineClip&& 
clip&&  
{'' 	
get(( 
{(( 
return(( 
m_Clip(( 
;((  
}((! "
})) 	
public++ 
Playable++ 
mixer++ 
{,, 	
get-- 
{-- 
return-- 
m_ParentMixer-- &
;--& '
}--( )
}.. 	
public00 
Playable00 
playable00  
{11 	
get22 
{22 
return22 

m_Playable22 #
;22# $
}22% &
}33 	
public55 
override55 
bool55 
enable55 #
{66 	
set77 
{88 
if99 
(99 
value99 
&&99 

m_Playable99 '
.99' (
GetPlayState99( 4
(994 5
)995 6
!=997 9
	PlayState99: C
.99C D
Playing99D K
)99K L
{:: 

m_Playable;; 
.;; 
Play;; #
(;;# $
);;$ %
;;;% &
SetTime<< 
(<< 
m_Clip<< "
.<<" #
clipIn<<# )
)<<) *
;<<* +
}== 
else>> 
if>> 
(>> 
!>> 
value>> 
&&>>  "

m_Playable>># -
.>>- .
GetPlayState>>. :
(>>: ;
)>>; <
!=>>= ?
	PlayState>>@ I
.>>I J
Paused>>J P
)>>P Q
{?? 

m_Playable@@ 
.@@ 
Pause@@ $
(@@$ %
)@@% &
;@@& '
ifAA 
(AA 
m_ParentMixerAA %
.AA% &
IsValidAA& -
(AA- .
)AA. /
)AA/ 0
m_ParentMixerBB %
.BB% &
SetInputWeightBB& 4
(BB4 5

m_PlayableBB5 ?
,BB? @
$numBBA E
)BBE F
;BBF G
}CC 
}DD 
}EE 	
publicGG 
voidGG 
SetTimeGG 
(GG 
doubleGG "
timeGG# '
)GG' (
{HH 	

m_PlayableII 
.II 
SetTimeII 
(II 
timeII #
)II# $
;II$ %
}JJ 	
publicLL 
voidLL 
SetDurationLL 
(LL  
doubleLL  &
durationLL' /
)LL/ 0
{MM 	

m_PlayableNN 
.NN 
SetDurationNN "
(NN" #
durationNN# +
)NN+ ,
;NN, -
}OO 	
publicQQ 
overrideQQ 
voidQQ 

EvaluateAtQQ '
(QQ' (
doubleQQ( .
	localTimeQQ/ 8
,QQ8 9
	FrameDataQQ: C
	frameDataQQD M
)QQM N
{RR 	
enableSS 
=SS 
trueSS 
;SS 
floatUU 
weightUU 
=UU 
$numUU 
;UU  
ifVV 
(VV 
clipVV 
.VV !
IsPreExtrapolatedTimeVV *
(VV* +
	localTimeVV+ 4
)VV4 5
)VV5 6
weightWW 
=WW 
clipWW 
.WW 
EvaluateMixInWW +
(WW+ ,
(WW, -
floatWW- 2
)WW2 3
clipWW3 7
.WW7 8
startWW8 =
)WW= >
;WW> ?
elseXX 
ifXX 
(XX 
clipXX 
.XX "
IsPostExtrapolatedTimeXX 0
(XX0 1
	localTimeXX1 :
)XX: ;
)XX; <
weightYY 
=YY 
clipYY 
.YY 
EvaluateMixOutYY ,
(YY, -
(YY- .
floatYY. 3
)YY3 4
clipYY4 8
.YY8 9
endYY9 <
)YY< =
;YY= >
elseZZ 
weight[[ 
=[[ 
clip[[ 
.[[ 
EvaluateMixIn[[ +
([[+ ,
	localTime[[, 5
)[[5 6
*[[7 8
clip[[9 =
.[[= >
EvaluateMixOut[[> L
([[L M
	localTime[[M V
)[[V W
;[[W X
if]] 
(]] 
mixer]] 
.]] 
IsValid]] 
(]] 
)]] 
)]]  
mixer^^ 
.^^ 
SetInputWeight^^ $
(^^$ %
playable^^% -
,^^- .
weight^^/ 5
)^^5 6
;^^6 7
doubleaa 
clipTimeaa 
=aa 
clipaa "
.aa" #
ToLocalTimeaa# .
(aa. /
	localTimeaa/ 8
)aa8 9
;aa9 :
ifbb 
(bb 
clipTimebb 
>=bb 
-bb 
DiscreteTimebb )
.bb) *
	tickValuebb* 3
/bb3 4
$numbb4 5
)bb6 7
{cc 
SetTimedd 
(dd 
clipTimedd  
)dd  !
;dd! "
}ee 
SetDurationff 
(ff 
clipff 
.ff  
extrapolatedDurationff 1
)ff1 2
;ff2 3
}gg 	
publicii 
overrideii 
voidii 
Resetii "
(ii" #
)ii# $
{jj 	
SetTimekk 
(kk 
m_Clipkk 
.kk 
clipInkk !
)kk! "
;kk" #
}ll 	
}mm 
}nn √	
êD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Animation\ICurvesOwner.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
	interface 
ICurvesOwner 
{ 
AnimationClip 
curves 
{ 
get "
;" #
}$ %
bool 
	hasCurves 
{ 
get 
; 
} 
double 
duration 
{ 
get 
; 
}  
void 
CreateCurves 
( 
string  
curvesClipName! /
)/ 0
;0 1
string

 
defaultCurvesName

  
{

! "
get

# &
;

& '
}

( )
Object 
asset 
{ 
get 
; 
} 
Object 

assetOwner 
{ 
get 
;  
}! "

TrackAsset 
targetTrack 
{  
get! $
;$ %
}& '
} 
} å$
ìD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\AssetUpgrade\TrackUpgrade.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
partial 
class 

TrackAsset 
: *
ISerializationCallbackReceiver =
{ 
internal 
enum 
Versions 
{		 	
Initial

 
=

 
$num

 
,

 
RotationAsEuler 
= 
$num 
,  
RootMotionUpgrade 
= 
$num  !
,! "#
AnimatedTrackProperties #
=$ %
$num& '
} 	
const 
int 
k_LatestVersion !
=" #
($ %
int% (
)( )
Versions) 1
.1 2#
AnimatedTrackProperties2 I
;I J
[ 	
SerializeField	 
, 
HideInInspector (
]( )
int* -
	m_Version. 7
;7 8
[ 	
Obsolete	 
( 
$str J
,J K
falseL Q
)Q R
]R S
[ 	
SerializeField	 
, 
HideInInspector (
,( ) 
FormerlySerializedAs* >
(> ?
$str? K
)K L
]L M
internal 
AnimationClip 

m_AnimClip )
;) *
	protected 
virtual 
void "
OnBeforeTrackSerialize 5
(5 6
)6 7
{8 9
}9 :
	protected   
virtual   
void   #
OnAfterTrackDeserialize   6
(  6 7
)  7 8
{  9 :
}  : ;
internal"" 
virtual"" 
void""  
OnUpgradeFromVersion"" 2
(""2 3
int""3 6

oldVersion""7 A
)""A B
{""C D
}""D E
void%% *
ISerializationCallbackReceiver%% +
.%%+ ,
OnBeforeSerialize%%, =
(%%= >
)%%> ?
{&& 	
	m_Version'' 
='' 
k_LatestVersion'' '
;''' (
if** 
(** 

m_Children** 
!=** 
null** "
)**" #
{++ 
for,, 
(,, 
var,, 
i,, 
=,, 

m_Children,, '
.,,' (
Count,,( -
-,,. /
$num,,0 1
;,,1 2
i,,3 4
>=,,5 7
$num,,8 9
;,,9 :
i,,; <
--,,< >
),,> ?
{-- 
var.. 
asset.. 
=.. 

m_Children..  *
[..* +
i..+ ,
].., -
as... 0

TrackAsset..1 ;
;..; <
if// 
(// 
asset// 
!=//  
null//! %
&&//& (
asset//) .
.//. /
parent/// 5
!=//6 8
this//9 =
)//= >
asset00 
.00 
parent00 $
=00% &
this00' +
;00+ ,
}11 
}22 "
OnBeforeTrackSerialize44 "
(44" #
)44# $
;44$ %
}55 	
void88 *
ISerializationCallbackReceiver88 +
.88+ ,
OnAfterDeserialize88, >
(88> ?
)88? @
{99 	
m_ClipsCache<< 
=<< 
null<< 
;<<  

Invalidate== 
(== 
)== 
;== 
if?? 
(?? 
	m_Version?? 
<?? 
k_LatestVersion?? +
)??+ ,
{@@ "
UpgradeToLatestVersionAA &
(AA& '
)AA' (
;AA( ) 
OnUpgradeFromVersionBB $
(BB$ %
	m_VersionBB% .
)BB. /
;BB/ 0
}CC 
foreachEE 
(EE 
varEE 
markerEE 
inEE  "

GetMarkersEE# -
(EE- .
)EE. /
)EE/ 0
{FF 
markerGG 
.GG 

InitializeGG !
(GG! "
thisGG" &
)GG& '
;GG' (
}HH #
OnAfterTrackDeserializeJJ #
(JJ# $
)JJ$ %
;JJ% &
}KK 	
voidNN "
UpgradeToLatestVersionNN #
(NN# $
)NN$ %
{OO 	
}OO	 

staticRR 
classRR 
TrackAssetUpgradeRR &
{SS 	
}SS	 

}TT 
}UU ÒÖ
íD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Animation\AnimationTrack.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[ 
Flags 

]
 
public 

enum 
MatchTargetFields !
{ 
	PositionX 
= 
$num 
<< 
$num 
, 
	PositionY 
= 
$num 
<< 
$num 
, 
	PositionZ 
= 
$num 
<< 
$num 
, 
	RotationX## 
=## 
$num## 
<<## 
$num## 
,## 
	RotationY'' 
='' 
$num'' 
<<'' 
$num'' 
,'' 
	RotationZ++ 
=++ 
$num++ 
<<++ 
$num++ 
},, 
public55 

enum55 
TrackOffset55 
{66 !
ApplyTransformOffsets:: 
,:: 
ApplySceneOffsets>> 
,>> 
AutoII 
}JJ 
enumNN 
AppliedOffsetModeNN	 
{OO 
NoRootTransformPP 
,PP 
TransformOffsetQQ 
,QQ 
SceneOffsetRR 
,RR !
TransformOffsetLegacySS 
,SS 
SceneOffsetLegacyTT 
,TT 
SceneOffsetEditorUU 
,UU #
SceneOffsetLegacyEditorVV 
,VV  
}WW 
static[[ 

class[[ %
MatchTargetFieldConstants[[ *
{\\ 
public]] 
static]] 
MatchTargetFields]] '
All]]( +
=]], -
MatchTargetFields]]. ?
.]]? @
	PositionX]]@ I
|]]J K
MatchTargetFields]]L ]
.]]] ^
	PositionY]]^ g
|]]h i
MatchTargetFields^^ 
.^^ 
	PositionZ^^ '
|^^( )
MatchTargetFields^^* ;
.^^; <
	RotationX^^< E
|^^F G
MatchTargetFields__ 
.__ 
	RotationY__ '
|__( )
MatchTargetFields__* ;
.__; <
	RotationZ__< E
;__E F
publicaa 
staticaa 
MatchTargetFieldsaa '
Noneaa( ,
=aa- .
$numaa/ 0
;aa0 1
publiccc 
staticcc 
MatchTargetFieldscc '
Positioncc( 0
=cc1 2
MatchTargetFieldscc3 D
.ccD E
	PositionXccE N
|ccO P
MatchTargetFieldsccQ b
.ccb c
	PositionYccc l
|ccm n
MatchTargetFieldsdd 
.dd 
	PositionZdd '
;dd' (
publicff 
staticff 
MatchTargetFieldsff '
Rotationff( 0
=ff1 2
MatchTargetFieldsff3 D
.ffD E
	RotationXffE N
|ffO P
MatchTargetFieldsffQ b
.ffb c
	RotationYffc l
|ffm n
MatchTargetFieldsgg 
.gg 
	RotationZgg '
;gg' (
publicii 
staticii 
boolii 
HasAnyii !
(ii! "
thisii" &
MatchTargetFieldsii' 8
meii9 ;
,ii; <
MatchTargetFieldsii= N
fieldsiiO U
)iiU V
{jj 	
returnkk 
(kk 
mekk 
&kk 
fieldskk 
)kk  
!=kk! #
Nonekk$ (
;kk( )
}ll 	
publicnn 
staticnn 
MatchTargetFieldsnn '
Togglenn( .
(nn. /
thisnn/ 3
MatchTargetFieldsnn4 E
mennF H
,nnH I
MatchTargetFieldsnnJ [
flagnn\ `
)nn` a
{oo 	
returnpp 
mepp 
^pp 
flagpp 
;pp 
}qq 	
}rr 
[xx 
Serializablexx 
]xx 
[yy 
TrackClipTypeyy 
(yy 
typeofyy 
(yy "
AnimationPlayableAssetyy 0
)yy0 1
,yy1 2
falseyy3 8
)yy8 9
]yy9 :
[zz 
TrackBindingTypezz 
(zz 
typeofzz 
(zz 
Animatorzz %
)zz% &
)zz& '
]zz' (
[{{ 
ExcludeFromPreset{{ 
]{{ 
public|| 

partial|| 
class|| 
AnimationTrack|| '
:||( )

TrackAsset||* 4
,||4 5

ILayerable||6 @
{}} 
const~~ 
string~~ %
k_DefaultInfiniteClipName~~ .
=~~/ 0
$str~~1 ;
;~~; <
const 
string '
k_DefaultRecordableClipName 0
=1 2
$str3 =
;= >
[
ÅÅ 	
SerializeField
ÅÅ	 
,
ÅÅ "
FormerlySerializedAs
ÅÅ -
(
ÅÅ- .
$str
ÅÅ. J
)
ÅÅJ K
]
ÅÅK L
TimelineClip
ÇÇ 
.
ÇÇ 
ClipExtrapolation
ÇÇ &,
m_InfiniteClipPreExtrapolation
ÇÇ' E
=
ÇÇF G
TimelineClip
ÇÇH T
.
ÇÇT U
ClipExtrapolation
ÇÇU f
.
ÇÇf g
None
ÇÇg k
;
ÇÇk l
[
ÑÑ 	
SerializeField
ÑÑ	 
,
ÑÑ "
FormerlySerializedAs
ÑÑ -
(
ÑÑ- .
$str
ÑÑ. K
)
ÑÑK L
]
ÑÑL M
TimelineClip
ÖÖ 
.
ÖÖ 
ClipExtrapolation
ÖÖ &-
m_InfiniteClipPostExtrapolation
ÖÖ' F
=
ÖÖG H
TimelineClip
ÖÖI U
.
ÖÖU V
ClipExtrapolation
ÖÖV g
.
ÖÖg h
None
ÖÖh l
;
ÖÖl m
[
áá 	
SerializeField
áá	 
,
áá "
FormerlySerializedAs
áá -
(
áá- .
$str
áá. H
)
ááH I
]
ááI J
Vector3
àà *
m_InfiniteClipOffsetPosition
àà ,
=
àà- .
Vector3
àà/ 6
.
àà6 7
zero
àà7 ;
;
àà; <
[
ää 	
SerializeField
ää	 
,
ää "
FormerlySerializedAs
ää -
(
ää- .
$str
ää. K
)
ääK L
]
ääL M
Vector3
ãã -
m_InfiniteClipOffsetEulerAngles
ãã /
=
ãã0 1
Vector3
ãã2 9
.
ãã9 :
zero
ãã: >
;
ãã> ?
[
çç 	
SerializeField
çç	 
,
çç "
FormerlySerializedAs
çç -
(
çç- .
$str
çç. D
)
ççD E
]
ççE F
double
éé &
m_InfiniteClipTimeOffset
éé '
;
éé' (
[
êê 	
SerializeField
êê	 
,
êê "
FormerlySerializedAs
êê -
(
êê- .
$str
êê. F
)
êêF G
]
êêG H
bool
ëë (
m_InfiniteClipRemoveOffset
ëë '
;
ëë' (
[
ìì 	
SerializeField
ìì	 
]
ìì 
bool
îî '
m_InfiniteClipApplyFootIK
îî &
=
îî' (
true
îî) -
;
îî- .
[
ññ 	
SerializeField
ññ	 
,
ññ 
HideInInspector
ññ (
]
ññ( )$
AnimationPlayableAsset
óó 
.
óó 
LoopMode
óó '
mInfiniteClipLoop
óó( 9
=
óó: ;$
AnimationPlayableAsset
óó< R
.
óóR S
LoopMode
óóS [
.
óó[ \
UseSourceAsset
óó\ j
;
óój k
[
ôô 	
SerializeField
ôô	 
]
ôô 
MatchTargetFields
öö !
m_MatchTargetFields
öö -
=
öö. /'
MatchTargetFieldConstants
öö0 I
.
ööI J
All
ööJ M
;
ööM N
[
õõ 	
SerializeField
õõ	 
]
õõ 
Vector3
úú 

m_Position
úú 
=
úú 
Vector3
úú $
.
úú$ %
zero
úú% )
;
úú) *
[
ùù 	
SerializeField
ùù	 
]
ùù 
Vector3
ûû 
m_EulerAngles
ûû 
=
ûû 
Vector3
ûû  '
.
ûû' (
zero
ûû( ,
;
ûû, -
[
°° 	
SerializeField
°°	 
]
°° 

AvatarMask
°° #
m_AvatarMask
°°$ 0
;
°°0 1
[
¢¢ 	
SerializeField
¢¢	 
]
¢¢ 
bool
¢¢ 
m_ApplyAvatarMask
¢¢$ 5
=
¢¢7 8
true
¢¢9 =
;
¢¢= >
[
§§ 	
SerializeField
§§	 
]
§§ 
TrackOffset
§§ $
m_TrackOffset
§§% 2
=
§§3 4
TrackOffset
§§5 @
.
§§@ A#
ApplyTransformOffsets
§§A V
;
§§V W
[
¶¶ 	
SerializeField
¶¶	 
,
¶¶ 
HideInInspector
¶¶ (
]
¶¶( )
AnimationClip
¶¶* 7
m_InfiniteClip
¶¶8 F
;
¶¶F G
private
™™ 
AnimationClip
™™ 
m_DefaultPoseClip
™™ /
;
™™/ 0
private
´´ 
AnimationClip
´´ $
m_CachedPropertiesClip
´´ 4
;
´´4 5
private
¨¨ 
int
¨¨ 
m_CachedHash
¨¨ *
;
¨¨* +
private
≠≠  
EditorCurveBinding
≠≠ "
[
≠≠" #
]
≠≠# $
m_CachedBindings
≠≠% 5
;
≠≠5 6%
AnimationOffsetPlayable
ØØ 
m_ClipOffset
ØØ  ,
;
ØØ, -
private
±± 
Vector3
±± #
m_SceneOffsetPosition
±± -
=
±±. /
Vector3
±±0 7
.
±±7 8
zero
±±8 <
;
±±< =
private
≤≤ 
Vector3
≤≤ #
m_SceneOffsetRotation
≤≤ -
=
≤≤. /
Vector3
≤≤0 7
.
≤≤7 8
zero
≤≤8 <
;
≤≤< =
private
¥¥ 
bool
¥¥ $
m_HasPreviewComponents
¥¥ +
=
¥¥, -
false
¥¥. 3
;
¥¥3 4
public
∫∫ 
Vector3
∫∫ 
position
∫∫ 
{
ªª 	
get
ºº 
{
ºº 
return
ºº 

m_Position
ºº #
;
ºº# $
}
ºº% &
set
ΩΩ 
{
ΩΩ 

m_Position
ΩΩ 
=
ΩΩ 
value
ΩΩ $
;
ΩΩ$ %
}
ΩΩ& '
}
ææ 	
public
√√ 

Quaternion
√√ 
rotation
√√ "
{
ƒƒ 	
get
≈≈ 
{
≈≈ 
return
≈≈ 

Quaternion
≈≈ #
.
≈≈# $
Euler
≈≈$ )
(
≈≈) *
m_EulerAngles
≈≈* 7
)
≈≈7 8
;
≈≈8 9
}
≈≈: ;
set
∆∆ 
{
∆∆ 
m_EulerAngles
∆∆ 
=
∆∆  !
value
∆∆" '
.
∆∆' (
eulerAngles
∆∆( 3
;
∆∆3 4
}
∆∆5 6
}
«« 	
public
ÃÃ 
Vector3
ÃÃ 
eulerAngles
ÃÃ "
{
ÕÕ 	
get
ŒŒ 
{
ŒŒ 
return
ŒŒ 
m_EulerAngles
ŒŒ &
;
ŒŒ& '
}
ŒŒ( )
set
œœ 
{
œœ 
m_EulerAngles
œœ 
=
œœ  !
value
œœ" '
;
œœ' (
}
œœ) *
}
–– 	
[
ÿÿ 	
Obsolete
ÿÿ	 
(
ÿÿ 
$str
ÿÿ F
,
ÿÿF G
true
ÿÿH L
)
ÿÿL M
]
ÿÿM N
public
ŸŸ 
bool
ŸŸ 
applyOffsets
ŸŸ  
{
⁄⁄ 	
get
€€ 
{
€€ 
return
€€ 
false
€€ 
;
€€ 
}
€€  !
set
‹‹ 
{
‹‹ 
}
‹‹ 
}
›› 	
public
ÂÂ 
TrackOffset
ÂÂ 
trackOffset
ÂÂ &
{
ÊÊ 	
get
ÁÁ 
{
ÁÁ 
return
ÁÁ 
m_TrackOffset
ÁÁ &
;
ÁÁ& '
}
ÁÁ( )
set
ËË 
{
ËË 
m_TrackOffset
ËË 
=
ËË  !
value
ËË" '
;
ËË' (
}
ËË) *
}
ÈÈ 	
public
ÓÓ 
MatchTargetFields
ÓÓ  
matchTargetFields
ÓÓ! 2
{
ÔÔ 	
get
 
{
 
return
 !
m_MatchTargetFields
 ,
;
, -
}
. /
set
ÒÒ 
{
ÒÒ !
m_MatchTargetFields
ÒÒ %
=
ÒÒ& '
value
ÒÒ( -
&
ÒÒ. /'
MatchTargetFieldConstants
ÒÒ0 I
.
ÒÒI J
All
ÒÒJ M
;
ÒÒM N
}
ÒÒO P
}
ÚÚ 	
public
˙˙ 
AnimationClip
˙˙ 
infiniteClip
˙˙ )
{
˚˚ 	
get
¸¸ 
{
¸¸ 
return
¸¸ 
m_InfiniteClip
¸¸ '
;
¸¸' (
}
¸¸) *
internal
˝˝ 
set
˝˝ 
{
˝˝ 
m_InfiniteClip
˝˝ )
=
˝˝* +
value
˝˝, 1
;
˝˝1 2
}
˝˝3 4
}
˛˛ 	
internal
ÅÅ 
bool
ÅÅ &
infiniteClipRemoveOffset
ÅÅ .
{
ÇÇ 	
get
ÉÉ 
{
ÉÉ 
return
ÉÉ (
m_InfiniteClipRemoveOffset
ÉÉ 3
;
ÉÉ3 4
}
ÉÉ5 6
set
ÑÑ 
{
ÑÑ (
m_InfiniteClipRemoveOffset
ÑÑ ,
=
ÑÑ- .
value
ÑÑ/ 4
;
ÑÑ4 5
}
ÑÑ6 7
}
ÖÖ 	
public
çç 

AvatarMask
çç 

avatarMask
çç $
{
éé 	
get
èè 
{
èè 
return
èè 
m_AvatarMask
èè %
;
èè% &
}
èè' (
set
êê 
{
êê 
m_AvatarMask
êê 
=
êê  
value
êê! &
;
êê& '
}
êê( )
}
ëë 	
public
ññ 
bool
ññ 
applyAvatarMask
ññ #
{
óó 	
get
òò 
{
òò 
return
òò 
m_ApplyAvatarMask
òò *
;
òò* +
}
òò, -
set
ôô 
{
ôô 
m_ApplyAvatarMask
ôô #
=
ôô$ %
value
ôô& +
;
ôô+ ,
}
ôô- .
}
öö 	
internal
ûû 
override
ûû 
bool
ûû 
CanCompileClips
ûû .
(
ûû. /
)
ûû/ 0
{
üü 	
return
†† 
!
†† 
muted
†† 
&&
†† 
(
†† 
m_Clips
†† %
.
††% &
Count
††& +
>
††, -
$num
††. /
||
††0 2
(
††3 4
m_InfiniteClip
††4 B
!=
††C E
null
††F J
&&
††K M
!
††N O
m_InfiniteClip
††O ]
.
††] ^
empty
††^ c
)
††c d
)
††d e
;
††e f
}
°° 	
public
§§ 
override
§§ 
IEnumerable
§§ #
<
§§# $
PlayableBinding
§§$ 3
>
§§3 4
outputs
§§5 <
{
•• 	
get
¶¶ 
{
¶¶ 
yield
¶¶ 
return
¶¶ &
AnimationPlayableBinding
¶¶ 7
.
¶¶7 8
Create
¶¶8 >
(
¶¶> ?
name
¶¶? C
,
¶¶C D
this
¶¶E I
)
¶¶I J
;
¶¶J K
}
¶¶L M
}
ßß 	
public
≠≠ 
bool
≠≠ 

inClipMode
≠≠ 
{
ÆÆ 	
get
ØØ 
{
ØØ 
return
ØØ 
clips
ØØ 
!=
ØØ !
null
ØØ" &
&&
ØØ' )
clips
ØØ* /
.
ØØ/ 0
Length
ØØ0 6
!=
ØØ7 9
$num
ØØ: ;
;
ØØ; <
}
ØØ= >
}
∞∞ 	
public
µµ 
Vector3
µµ (
infiniteClipOffsetPosition
µµ 1
{
∂∂ 	
get
∑∑ 
{
∑∑ 
return
∑∑ *
m_InfiniteClipOffsetPosition
∑∑ 5
;
∑∑5 6
}
∑∑7 8
set
∏∏ 
{
∏∏ *
m_InfiniteClipOffsetPosition
∏∏ .
=
∏∏/ 0
value
∏∏1 6
;
∏∏6 7
}
∏∏8 9
}
ππ 	
public
ææ 

Quaternion
ææ (
infiniteClipOffsetRotation
ææ 4
{
øø 	
get
¿¿ 
{
¿¿ 
return
¿¿ 

Quaternion
¿¿ #
.
¿¿# $
Euler
¿¿$ )
(
¿¿) *-
m_InfiniteClipOffsetEulerAngles
¿¿* I
)
¿¿I J
;
¿¿J K
}
¿¿L M
set
¡¡ 
{
¡¡ -
m_InfiniteClipOffsetEulerAngles
¡¡ 1
=
¡¡2 3
value
¡¡4 9
.
¡¡9 :
eulerAngles
¡¡: E
;
¡¡E F
}
¡¡G H
}
¬¬ 	
public
«« 
Vector3
«« +
infiniteClipOffsetEulerAngles
«« 4
{
»» 	
get
…… 
{
…… 
return
…… -
m_InfiniteClipOffsetEulerAngles
…… 8
;
……8 9
}
……: ;
set
   
{
   -
m_InfiniteClipOffsetEulerAngles
   1
=
  2 3
value
  4 9
;
  9 :
}
  ; <
}
ÀÀ 	
internal
ÕÕ 
bool
ÕÕ %
infiniteClipApplyFootIK
ÕÕ -
{
ŒŒ 	
get
œœ 
{
œœ 
return
œœ '
m_InfiniteClipApplyFootIK
œœ 2
;
œœ2 3
}
œœ5 6
set
–– 
{
–– '
m_InfiniteClipApplyFootIK
–– +
=
––, -
value
––. 3
;
––3 4
}
––5 6
}
—— 	
internal
”” 
double
”” $
infiniteClipTimeOffset
”” .
{
‘‘ 	
get
’’ 
{
’’ 
return
’’ &
m_InfiniteClipTimeOffset
’’ 1
;
’’1 2
}
’’3 4
set
÷÷ 
{
÷÷ &
m_InfiniteClipTimeOffset
÷÷ *
=
÷÷+ ,
value
÷÷- 2
;
÷÷2 3
}
÷÷4 5
}
◊◊ 	
public
‹‹ 
TimelineClip
‹‹ 
.
‹‹ 
ClipExtrapolation
‹‹ -*
infiniteClipPreExtrapolation
‹‹. J
{
›› 	
get
ﬁﬁ 
{
ﬁﬁ 
return
ﬁﬁ ,
m_InfiniteClipPreExtrapolation
ﬁﬁ 7
;
ﬁﬁ7 8
}
ﬁﬁ9 :
set
ﬂﬂ 
{
ﬂﬂ ,
m_InfiniteClipPreExtrapolation
ﬂﬂ 0
=
ﬂﬂ1 2
value
ﬂﬂ3 8
;
ﬂﬂ8 9
}
ﬂﬂ: ;
}
‡‡ 	
public
ÂÂ 
TimelineClip
ÂÂ 
.
ÂÂ 
ClipExtrapolation
ÂÂ -+
infiniteClipPostExtrapolation
ÂÂ. K
{
ÊÊ 	
get
ÁÁ 
{
ÁÁ 
return
ÁÁ -
m_InfiniteClipPostExtrapolation
ÁÁ 8
;
ÁÁ8 9
}
ÁÁ: ;
set
ËË 
{
ËË -
m_InfiniteClipPostExtrapolation
ËË 1
=
ËË2 3
value
ËË4 9
;
ËË9 :
}
ËË; <
}
ÈÈ 	
internal
ÓÓ $
AnimationPlayableAsset
ÓÓ '
.
ÓÓ' (
LoopMode
ÓÓ( 0
infiniteClipLoop
ÓÓ1 A
{
ÔÔ 	
get
 
{
 
return
 
mInfiniteClipLoop
 *
;
* +
}
, -
set
ÒÒ 
{
ÒÒ 
mInfiniteClipLoop
ÒÒ #
=
ÒÒ$ %
value
ÒÒ& +
;
ÒÒ+ ,
}
ÒÒ- .
}
ÚÚ 	
[
ÙÙ 	
ContextMenu
ÙÙ	 
(
ÙÙ 
$str
ÙÙ $
)
ÙÙ$ %
]
ÙÙ% &
void
ıı 
ResetOffsets
ıı 
(
ıı 
)
ıı 
{
ˆˆ 	

m_Position
˜˜ 
=
˜˜ 
Vector3
˜˜  
.
˜˜  !
zero
˜˜! %
;
˜˜% &
m_EulerAngles
¯¯ 
=
¯¯ 
Vector3
¯¯ #
.
¯¯# $
zero
¯¯$ (
;
¯¯( )
UpdateClipOffsets
˘˘ 
(
˘˘ 
)
˘˘ 
;
˘˘  
}
˙˙ 	
public
ÅÅ 
TimelineClip
ÅÅ 

CreateClip
ÅÅ &
(
ÅÅ& '
AnimationClip
ÅÅ' 4
clip
ÅÅ5 9
)
ÅÅ9 :
{
ÇÇ 	
if
ÉÉ 
(
ÉÉ 
clip
ÉÉ 
==
ÉÉ 
null
ÉÉ 
)
ÉÉ 
return
ÑÑ 
null
ÑÑ 
;
ÑÑ 
var
ÜÜ 
newClip
ÜÜ 
=
ÜÜ 

CreateClip
ÜÜ $
<
ÜÜ$ %$
AnimationPlayableAsset
ÜÜ% ;
>
ÜÜ; <
(
ÜÜ< =
)
ÜÜ= >
;
ÜÜ> ?!
AssignAnimationClip
áá 
(
áá  
newClip
áá  '
,
áá' (
clip
áá) -
)
áá- .
;
áá. /
return
àà 
newClip
àà 
;
àà 
}
ââ 	
public
†† 
void
††  
CreateInfiniteClip
†† &
(
††& '
string
††' -
infiniteClipName
††. >
)
††> ?
{
°° 	
if
¢¢ 
(
¢¢ 

inClipMode
¢¢ 
)
¢¢ 
{
££ 
Debug
§§ 
.
§§ 

LogWarning
§§  
(
§§  !
$str§§! î
)§§î ï
;§§ï ñ
return
•• 
;
•• 
}
¶¶ 
if
®® 
(
®® 
m_InfiniteClip
®® 
!=
®® !
null
®®" &
)
®®& '
return
©© 
;
©© 
m_InfiniteClip
´´ 
=
´´ %
TimelineCreateUtilities
´´ 4
.
´´4 5)
CreateAnimationClipForTrack
´´5 P
(
´´P Q
string
´´Q W
.
´´W X
IsNullOrEmpty
´´X e
(
´´e f
infiniteClipName
´´f v
)
´´v w
?
´´x y(
k_DefaultInfiniteClipName´´z ì
:´´î ï 
infiniteClipName´´ñ ¶
,´´¶ ß
this´´® ¨
,´´¨ ≠
false´´Æ ≥
)´´≥ ¥
;´´¥ µ
}
¨¨ 	
public
ææ 
TimelineClip
ææ "
CreateRecordableClip
ææ 0
(
ææ0 1
string
ææ1 7
animClipName
ææ8 D
)
ææD E
{
øø 	
var
¿¿ 
clip
¿¿ 
=
¿¿ %
TimelineCreateUtilities
¿¿ .
.
¿¿. /)
CreateAnimationClipForTrack
¿¿/ J
(
¿¿J K
string
¿¿K Q
.
¿¿Q R
IsNullOrEmpty
¿¿R _
(
¿¿_ `
animClipName
¿¿` l
)
¿¿l m
?
¿¿n o*
k_DefaultRecordableClipName¿¿p ã
:¿¿å ç
animClipName¿¿é ö
,¿¿ö õ
this¿¿ú †
,¿¿† °
false¿¿¢ ß
)¿¿ß ®
;¿¿® ©
var
¬¬ 
timelineClip
¬¬ 
=
¬¬ 

CreateClip
¬¬ )
(
¬¬) *
clip
¬¬* .
)
¬¬. /
;
¬¬/ 0
timelineClip
√√ 
.
√√ 
displayName
√√ $
=
√√% &
animClipName
√√' 3
;
√√3 4
timelineClip
ƒƒ 
.
ƒƒ 

recordable
ƒƒ #
=
ƒƒ$ %
true
ƒƒ& *
;
ƒƒ* +
timelineClip
≈≈ 
.
≈≈ 
start
≈≈ 
=
≈≈  
$num
≈≈! "
;
≈≈" #
timelineClip
∆∆ 
.
∆∆ 
duration
∆∆ !
=
∆∆" #
$num
∆∆$ %
;
∆∆% &
var
»» 
apa
»» 
=
»» 
timelineClip
»» "
.
»»" #
asset
»»# (
as
»») +$
AnimationPlayableAsset
»», B
;
»»B C
if
…… 
(
…… 
apa
…… 
!=
…… 
null
…… 
)
…… 
apa
   
.
   
removeStartOffset
   %
=
  & '
false
  ( -
;
  - .
return
ÃÃ 
timelineClip
ÃÃ 
;
ÃÃ  
}
ÕÕ 	
internal
–– 
Vector3
–– !
sceneOffsetPosition
–– ,
{
—— 	
get
““ 
{
““ 
return
““ #
m_SceneOffsetPosition
““ .
;
““. /
}
““0 1
set
”” 
{
”” #
m_SceneOffsetPosition
”” '
=
””( )
value
””* /
;
””/ 0
}
””1 2
}
‘‘ 	
internal
÷÷ 
Vector3
÷÷ !
sceneOffsetRotation
÷÷ ,
{
◊◊ 	
get
ÿÿ 
{
ÿÿ 
return
ÿÿ #
m_SceneOffsetRotation
ÿÿ .
;
ÿÿ. /
}
ÿÿ0 1
set
ŸŸ 
{
ŸŸ #
m_SceneOffsetRotation
ŸŸ '
=
ŸŸ( )
value
ŸŸ* /
;
ŸŸ/ 0
}
ŸŸ1 2
}
⁄⁄ 	
internal
‹‹ 
bool
‹‹ "
hasPreviewComponents
‹‹ *
{
›› 	
get
ﬁﬁ 
{
ﬂﬂ 
if
‡‡ 
(
‡‡ $
m_HasPreviewComponents
‡‡ *
)
‡‡* +
return
·· 
true
·· 
;
··  
var
„„ 
parentTrack
„„ 
=
„„  !
parent
„„" (
as
„„) +
AnimationTrack
„„, :
;
„„: ;
if
‰‰ 
(
‰‰ 
parentTrack
‰‰ 
!=
‰‰  "
null
‰‰# '
)
‰‰' (
{
ÂÂ 
return
ÊÊ 
parentTrack
ÊÊ &
.
ÊÊ& '"
hasPreviewComponents
ÊÊ' ;
;
ÊÊ; <
}
ÁÁ 
return
ÈÈ 
false
ÈÈ 
;
ÈÈ 
}
ÍÍ 
}
ÎÎ 	
	protected
ÚÚ 
override
ÚÚ 
void
ÚÚ 
OnCreateClip
ÚÚ  ,
(
ÚÚ, -
TimelineClip
ÚÚ- 9
clip
ÚÚ: >
)
ÚÚ> ?
{
ÛÛ 	
var
ÙÙ 
extrapolation
ÙÙ 
=
ÙÙ 
TimelineClip
ÙÙ  ,
.
ÙÙ, -
ClipExtrapolation
ÙÙ- >
.
ÙÙ> ?
None
ÙÙ? C
;
ÙÙC D
if
ıı 
(
ıı 
!
ıı 

isSubTrack
ıı 
)
ıı 
extrapolation
ˆˆ 
=
ˆˆ 
TimelineClip
ˆˆ  ,
.
ˆˆ, -
ClipExtrapolation
ˆˆ- >
.
ˆˆ> ?
Hold
ˆˆ? C
;
ˆˆC D
clip
˜˜ 
.
˜˜ "
preExtrapolationMode
˜˜ %
=
˜˜& '
extrapolation
˜˜( 5
;
˜˜5 6
clip
¯¯ 
.
¯¯ #
postExtrapolationMode
¯¯ &
=
¯¯' (
extrapolation
¯¯) 6
;
¯¯6 7
}
˘˘ 	
	protected
˚˚ 
internal
˚˚ 
override
˚˚ #
int
˚˚$ ' 
CalculateItemsHash
˚˚( :
(
˚˚: ;
)
˚˚; <
{
¸¸ 	
return
˝˝ "
GetAnimationClipHash
˝˝ '
(
˝˝' (
m_InfiniteClip
˝˝( 6
)
˝˝6 7
.
˝˝7 8
CombineHash
˝˝8 C
(
˝˝C D
base
˝˝D H
.
˝˝H I 
CalculateItemsHash
˝˝I [
(
˝˝[ \
)
˝˝\ ]
)
˝˝] ^
;
˝˝^ _
}
˛˛ 	
internal
ÄÄ 
void
ÄÄ 
UpdateClipOffsets
ÄÄ '
(
ÄÄ' (
)
ÄÄ( )
{
ÅÅ 	
if
ÉÉ 
(
ÉÉ 
m_ClipOffset
ÉÉ 
.
ÉÉ 
IsValid
ÉÉ $
(
ÉÉ$ %
)
ÉÉ% &
)
ÉÉ& '
{
ÑÑ 
m_ClipOffset
ÖÖ 
.
ÖÖ 
SetPosition
ÖÖ (
(
ÖÖ( )
position
ÖÖ) 1
)
ÖÖ1 2
;
ÖÖ2 3
m_ClipOffset
ÜÜ 
.
ÜÜ 
SetRotation
ÜÜ (
(
ÜÜ( )
rotation
ÜÜ) 1
)
ÜÜ1 2
;
ÜÜ2 3
}
áá 
}
ââ 	
Playable
ãã "
CompileTrackPlayable
ãã %
(
ãã% &
PlayableGraph
ãã& 3
graph
ãã4 9
,
ãã9 :
AnimationTrack
ãã; I
track
ããJ O
,
ããO P

GameObject
ããQ [
go
ãã\ ^
,
ãã^ _
IntervalTree
ãã` l
<
ããl m
RuntimeElement
ããm {
>
ãã{ |
treeãã} Å
,ããÅ Ç!
AppliedOffsetModeããÉ î
modeããï ô
)ããô ö
{
åå 	
var
çç 
mixer
çç 
=
çç $
AnimationMixerPlayable
çç .
.
çç. /
Create
çç/ 5
(
çç5 6
graph
çç6 ;
,
çç; <
track
çç= B
.
ççB C
clips
ççC H
.
ççH I
Length
ççI O
)
ççO P
;
ççP Q
for
éé 
(
éé 
int
éé 
i
éé 
=
éé 
$num
éé 
;
éé 
i
éé 
<
éé 
track
éé  %
.
éé% &
clips
éé& +
.
éé+ ,
Length
éé, 2
;
éé2 3
i
éé4 5
++
éé5 7
)
éé7 8
{
èè 
var
êê 
c
êê 
=
êê 
track
êê 
.
êê 
clips
êê #
[
êê# $
i
êê$ %
]
êê% &
;
êê& '
var
ëë 
asset
ëë 
=
ëë 
c
ëë 
.
ëë 
asset
ëë #
as
ëë$ &
PlayableAsset
ëë' 4
;
ëë4 5
if
íí 
(
íí 
asset
íí 
==
íí 
null
íí !
)
íí! "
continue
ìì 
;
ìì 
var
ïï 
animationAsset
ïï "
=
ïï# $
asset
ïï% *
as
ïï+ -$
AnimationPlayableAsset
ïï. D
;
ïïD E
if
ññ 
(
ññ 
animationAsset
ññ "
!=
ññ# %
null
ññ& *
)
ññ* +
animationAsset
óó "
.
óó" #
appliedOffsetMode
óó# 4
=
óó5 6
mode
óó7 ;
;
óó; <
var
ôô 
source
ôô 
=
ôô 
asset
ôô "
.
ôô" #
CreatePlayable
ôô# 1
(
ôô1 2
graph
ôô2 7
,
ôô7 8
go
ôô9 ;
)
ôô; <
;
ôô< =
if
öö 
(
öö 
source
öö 
.
öö 
IsValid
öö "
(
öö" #
)
öö# $
)
öö$ %
{
õõ 
var
úú 
clip
úú 
=
úú 
new
úú "
RuntimeClip
úú# .
(
úú. /
c
úú/ 0
,
úú0 1
source
úú2 8
,
úú8 9
mixer
úú: ?
)
úú? @
;
úú@ A
tree
ùù 
.
ùù 
Add
ùù 
(
ùù 
clip
ùù !
)
ùù! "
;
ùù" #
graph
ûû 
.
ûû 
Connect
ûû !
(
ûû! "
source
ûû" (
,
ûû( )
$num
ûû* +
,
ûû+ ,
mixer
ûû- 2
,
ûû2 3
i
ûû4 5
)
ûû5 6
;
ûû6 7
mixer
üü 
.
üü 
SetInputWeight
üü (
(
üü( )
i
üü) *
,
üü* +
$num
üü, 0
)
üü0 1
;
üü1 2
}
†† 
}
°° 
if
££ 
(
££ 
!
££ 
track
££ 
.
££ #
AnimatesRootTransform
££ ,
(
££, -
)
££- .
)
££. /
return
§§ 
mixer
§§ 
;
§§ 
return
¶¶ 
ApplyTrackOffset
¶¶ #
(
¶¶# $
graph
¶¶$ )
,
¶¶) *
mixer
¶¶+ 0
,
¶¶0 1
go
¶¶2 4
,
¶¶4 5
mode
¶¶6 :
)
¶¶: ;
;
¶¶; <
}
ßß 	
Playable
´´ 

ILayerable
´´ 
.
´´ 
CreateLayerMixer
´´ ,
(
´´, -
PlayableGraph
´´- :
graph
´´; @
,
´´@ A

GameObject
´´B L
go
´´M O
,
´´O P
int
´´Q T

inputCount
´´U _
)
´´_ `
{
¨¨ 	
return
≠≠ 
Playable
≠≠ 
.
≠≠ 
Null
≠≠  
;
≠≠  !
}
ÆÆ 	
internal
∞∞ 
override
∞∞ 
Playable
∞∞ "'
OnCreateClipPlayableGraph
∞∞# <
(
∞∞< =
PlayableGraph
∞∞= J
graph
∞∞K P
,
∞∞P Q

GameObject
∞∞R \
go
∞∞] _
,
∞∞_ `
IntervalTree
∞∞a m
<
∞∞m n
RuntimeElement
∞∞n |
>
∞∞| }
tree∞∞~ Ç
)∞∞Ç É
{
±± 	
if
≤≤ 
(
≤≤ 

isSubTrack
≤≤ 
)
≤≤ 
throw
≥≥ 
new
≥≥ '
InvalidOperationException
≥≥ 3
(
≥≥3 4
$str
≥≥4 ~
)
≥≥~ 
;≥≥ Ä
List
µµ 
<
µµ 
AnimationTrack
µµ 
>
µµ  
flattenTracks
µµ! .
=
µµ/ 0
new
µµ1 4
List
µµ5 9
<
µµ9 :
AnimationTrack
µµ: H
>
µµH I
(
µµI J
)
µµJ K
;
µµK L
if
∂∂ 
(
∂∂ 
CanCompileClips
∂∂ 
(
∂∂  
)
∂∂  !
)
∂∂! "
flattenTracks
∑∑ 
.
∑∑ 
Add
∑∑ !
(
∑∑! "
this
∑∑" &
)
∑∑& '
;
∑∑' (
var
ππ 
genericRoot
ππ 
=
ππ  
GetGenericRootNode
ππ 0
(
ππ0 1
go
ππ1 3
)
ππ3 4
;
ππ4 5
var
∫∫ )
animatesRootTransformNoMask
∫∫ +
=
∫∫, -#
AnimatesRootTransform
∫∫. C
(
∫∫C D
)
∫∫D E
;
∫∫E F
var
ªª #
animatesRootTransform
ªª %
=
ªª& ')
animatesRootTransformNoMask
ªª( C
&&
ªªD F
!
ªªG H+
IsRootTransformDisabledByMask
ªªH e
(
ªªe f
go
ªªf h
,
ªªh i
genericRoot
ªªj u
)
ªªu v
;
ªªv w
foreach
ºº 
(
ºº 
var
ºº 
subTrack
ºº !
in
ºº" $
GetChildTracks
ºº% 3
(
ºº3 4
)
ºº4 5
)
ºº5 6
{
ΩΩ 
var
ææ 
child
ææ 
=
ææ 
subTrack
ææ $
as
ææ% '
AnimationTrack
ææ( 6
;
ææ6 7
if
øø 
(
øø 
child
øø 
!=
øø 
null
øø !
&&
øø" $
child
øø% *
.
øø* +
CanCompileClips
øø+ :
(
øø: ;
)
øø; <
)
øø< =
{
¿¿ 
var
¡¡ 
childAnimatesRoot
¡¡ )
=
¡¡* +
child
¡¡, 1
.
¡¡1 2#
AnimatesRootTransform
¡¡2 G
(
¡¡G H
)
¡¡H I
;
¡¡I J)
animatesRootTransformNoMask
¬¬ /
|=
¬¬0 2
child
¬¬3 8
.
¬¬8 9#
AnimatesRootTransform
¬¬9 N
(
¬¬N O
)
¬¬O P
;
¬¬P Q#
animatesRootTransform
√√ )
|=
√√* ,
(
√√- .
childAnimatesRoot
√√. ?
&&
√√@ B
!
√√C D
child
√√D I
.
√√I J+
IsRootTransformDisabledByMask
√√J g
(
√√g h
go
√√h j
,
√√j k
genericRoot
√√l w
)
√√w x
)
√√x y
;
√√y z
flattenTracks
ƒƒ !
.
ƒƒ! "
Add
ƒƒ" %
(
ƒƒ% &
child
ƒƒ& +
)
ƒƒ+ ,
;
ƒƒ, -
}
≈≈ 
}
∆∆ 
AppliedOffsetMode
…… 
mode
…… "
=
……# $
GetOffsetMode
……% 2
(
……2 3
go
……3 5
,
……5 6#
animatesRootTransform
……7 L
)
……L M
;
……M N
int
   
defaultBlendCount
   !
=
  " #"
GetDefaultBlendCount
  $ 8
(
  8 9
)
  9 :
;
  : ;
var
ÀÀ 

layerMixer
ÀÀ 
=
ÀÀ 
CreateGroupMixer
ÀÀ -
(
ÀÀ- .
graph
ÀÀ. 3
,
ÀÀ3 4
go
ÀÀ5 7
,
ÀÀ7 8
flattenTracks
ÀÀ9 F
.
ÀÀF G
Count
ÀÀG L
+
ÀÀM N
defaultBlendCount
ÀÀO `
)
ÀÀ` a
;
ÀÀa b
for
ÃÃ 
(
ÃÃ 
int
ÃÃ 
c
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
c
ÃÃ 
<
ÃÃ 
flattenTracks
ÃÃ  -
.
ÃÃ- .
Count
ÃÃ. 3
;
ÃÃ3 4
c
ÃÃ5 6
++
ÃÃ6 8
)
ÃÃ8 9
{
ÕÕ 
int
ŒŒ 

blendIndex
ŒŒ 
=
ŒŒ  
c
ŒŒ! "
+
ŒŒ# $
defaultBlendCount
ŒŒ% 6
;
ŒŒ6 7
var
–– 
	childMode
–– 
=
–– 
mode
––  $
;
––$ %
if
—— 
(
—— 
mode
—— 
!=
—— 
AppliedOffsetMode
—— -
.
——- .
NoRootTransform
——. =
&&
——> @
flattenTracks
——A N
[
——N O
c
——O P
]
——P Q
.
——Q R+
IsRootTransformDisabledByMask
——R o
(
——o p
go
——p r
,
——r s
genericRoot
——t 
)—— Ä
)——Ä Å
	childMode
““ 
=
““ 
AppliedOffsetMode
““  1
.
““1 2
NoRootTransform
““2 A
;
““A B
var
‘‘ #
compiledTrackPlayable
‘‘ )
=
‘‘* +
flattenTracks
‘‘, 9
[
‘‘9 :
c
‘‘: ;
]
‘‘; <
.
‘‘< =

inClipMode
‘‘= G
?
‘‘H I"
CompileTrackPlayable
’’ (
(
’’( )
graph
’’) .
,
’’. /
flattenTracks
’’0 =
[
’’= >
c
’’> ?
]
’’? @
,
’’@ A
go
’’B D
,
’’D E
tree
’’F J
,
’’J K
	childMode
’’L U
)
’’U V
:
’’W X
flattenTracks
÷÷ !
[
÷÷! "
c
÷÷" #
]
÷÷# $
.
÷÷$ %)
CreateInfiniteTrackPlayable
÷÷% @
(
÷÷@ A
graph
÷÷A F
,
÷÷F G
go
÷÷H J
,
÷÷J K
tree
÷÷L P
,
÷÷P Q
	childMode
÷÷R [
)
÷÷[ \
;
÷÷\ ]
graph
◊◊ 
.
◊◊ 
Connect
◊◊ 
(
◊◊ #
compiledTrackPlayable
◊◊ 3
,
◊◊3 4
$num
◊◊5 6
,
◊◊6 7

layerMixer
◊◊8 B
,
◊◊B C

blendIndex
◊◊D N
)
◊◊N O
;
◊◊O P

layerMixer
ÿÿ 
.
ÿÿ 
SetInputWeight
ÿÿ )
(
ÿÿ) *

blendIndex
ÿÿ* 4
,
ÿÿ4 5
flattenTracks
ÿÿ6 C
[
ÿÿC D
c
ÿÿD E
]
ÿÿE F
.
ÿÿF G

inClipMode
ÿÿG Q
?
ÿÿR S
$num
ÿÿT U
:
ÿÿV W
$num
ÿÿX Y
)
ÿÿY Z
;
ÿÿZ [
if
ŸŸ 
(
ŸŸ 
flattenTracks
ŸŸ !
[
ŸŸ! "
c
ŸŸ" #
]
ŸŸ# $
.
ŸŸ$ %
applyAvatarMask
ŸŸ% 4
&&
ŸŸ5 7
flattenTracks
ŸŸ8 E
[
ŸŸE F
c
ŸŸF G
]
ŸŸG H
.
ŸŸH I

avatarMask
ŸŸI S
!=
ŸŸT V
null
ŸŸW [
)
ŸŸ[ \
{
⁄⁄ 

layerMixer
€€ 
.
€€ (
SetLayerMaskFromAvatarMask
€€ 9
(
€€9 :
(
€€: ;
uint
€€; ?
)
€€? @

blendIndex
€€@ J
,
€€J K
flattenTracks
€€L Y
[
€€Y Z
c
€€Z [
]
€€[ \
.
€€\ ]

avatarMask
€€] g
)
€€g h
;
€€h i
}
‹‹ 
}
›› 
var
ﬂﬂ %
requiresMotionXPlayable
ﬂﬂ '
=
ﬂﬂ( )%
RequiresMotionXPlayable
ﬂﬂ* A
(
ﬂﬂA B
mode
ﬂﬂB F
,
ﬂﬂF G
go
ﬂﬂH J
)
ﬂﬂJ K
;
ﬂﬂK L%
requiresMotionXPlayable
„„ #
|=
„„$ &
(
„„' (
defaultBlendCount
„„( 9
>
„„: ;
$num
„„< =
&&
„„> @%
RequiresMotionXPlayable
„„A X
(
„„X Y
GetOffsetMode
„„Y f
(
„„f g
go
„„g i
,
„„i j*
animatesRootTransformNoMask„„k Ü
)„„Ü á
,„„á à
go„„â ã
)„„ã å
)„„å ç
;„„ç é 
AttachDefaultBlend
ÊÊ 
(
ÊÊ 
graph
ÊÊ $
,
ÊÊ$ %

layerMixer
ÊÊ& 0
,
ÊÊ0 1%
requiresMotionXPlayable
ÊÊ2 I
)
ÊÊI J
;
ÊÊJ K
Playable
ÈÈ 
mixer
ÈÈ 
=
ÈÈ 

layerMixer
ÈÈ '
;
ÈÈ' (
if
ÍÍ 
(
ÍÍ %
requiresMotionXPlayable
ÍÍ '
)
ÍÍ' (
{
ÎÎ 
var
ÌÌ 
motionXToDelta
ÌÌ "
=
ÌÌ# $-
AnimationMotionXToDeltaPlayable
ÌÌ% D
.
ÌÌD E
Create
ÌÌE K
(
ÌÌK L
graph
ÌÌL Q
)
ÌÌQ R
;
ÌÌR S
graph
ÓÓ 
.
ÓÓ 
Connect
ÓÓ 
(
ÓÓ 
mixer
ÓÓ #
,
ÓÓ# $
$num
ÓÓ% &
,
ÓÓ& '
motionXToDelta
ÓÓ( 6
,
ÓÓ6 7
$num
ÓÓ8 9
)
ÓÓ9 :
;
ÓÓ: ;
motionXToDelta
ÔÔ 
.
ÔÔ 
SetInputWeight
ÔÔ -
(
ÔÔ- .
$num
ÔÔ. /
,
ÔÔ/ 0
$num
ÔÔ1 5
)
ÔÔ5 6
;
ÔÔ6 7
motionXToDelta
 
.
 
SetAbsoluteMotion
 0
(
0 1 
UsesAbsoluteMotion
1 C
(
C D
mode
D H
)
H I
)
I J
;
J K
mixer
ÒÒ 
=
ÒÒ 
(
ÒÒ 
Playable
ÒÒ !
)
ÒÒ! "
motionXToDelta
ÒÒ" 0
;
ÒÒ0 1
}
ÚÚ 
if
ˆˆ 
(
ˆˆ 
!
ˆˆ 
Application
ˆˆ 
.
ˆˆ 
	isPlaying
ˆˆ &
)
ˆˆ& '
{
˜˜ 
var
¯¯ 
animator
¯¯ 
=
¯¯ 

GetBinding
¯¯ )
(
¯¯) *
go
¯¯* ,
!=
¯¯- /
null
¯¯0 4
?
¯¯5 6
go
¯¯7 9
.
¯¯9 :
GetComponent
¯¯: F
<
¯¯F G
PlayableDirector
¯¯G W
>
¯¯W X
(
¯¯X Y
)
¯¯Y Z
:
¯¯[ \
null
¯¯] a
)
¯¯a b
;
¯¯b c
if
˘˘ 
(
˘˘ 
animator
˘˘ 
!=
˘˘ 
null
˘˘  $
)
˘˘$ %
{
˙˙ 

GameObject
˚˚ 
targetGO
˚˚ '
=
˚˚( )
animator
˚˚* 2
.
˚˚2 3

gameObject
˚˚3 =
;
˚˚= >%
IAnimationWindowPreview
¸¸ +
[
¸¸+ ,
]
¸¸, -
previewComponents
¸¸. ?
=
¸¸@ A
targetGO
¸¸B J
.
¸¸J K
GetComponents
¸¸K X
<
¸¸X Y%
IAnimationWindowPreview
¸¸Y p
>
¸¸p q
(
¸¸q r
)
¸¸r s
;
¸¸s t$
m_HasPreviewComponents
˛˛ *
=
˛˛+ ,
previewComponents
˛˛- >
.
˛˛> ?
Length
˛˛? E
>
˛˛F G
$num
˛˛H I
;
˛˛I J
if
ˇˇ 
(
ˇˇ $
m_HasPreviewComponents
ˇˇ .
)
ˇˇ. /
{
ÄÄ 
foreach
ÅÅ 
(
ÅÅ  !
var
ÅÅ! $
	component
ÅÅ% .
in
ÅÅ/ 1
previewComponents
ÅÅ2 C
)
ÅÅC D
{
ÇÇ 
mixer
ÉÉ !
=
ÉÉ" #
	component
ÉÉ$ -
.
ÉÉ- .
BuildPreviewGraph
ÉÉ. ?
(
ÉÉ? @
graph
ÉÉ@ E
,
ÉÉE F
mixer
ÉÉG L
)
ÉÉL M
;
ÉÉM N
}
ÑÑ 
}
ÖÖ 
}
ÜÜ 
}
áá 
return
ää 
mixer
ää 
;
ää 
}
ãã 	
private
çç 
int
çç "
GetDefaultBlendCount
çç (
(
çç( )
)
çç) *
{
éé 	
if
êê 
(
êê 
Application
êê 
.
êê 
	isPlaying
êê %
)
êê% &
return
ëë 
$num
ëë 
;
ëë 
return
ìì 
(
ìì 
(
ìì $
m_CachedPropertiesClip
ìì +
!=
ìì, .
null
ìì/ 3
)
ìì3 4
?
ìì5 6
$num
ìì7 8
:
ìì9 :
$num
ìì; <
)
ìì< =
+
ìì> ?
(
ìì@ A
(
ììA B
m_DefaultPoseClip
ììB S
!=
ììT V
null
ììW [
)
ìì[ \
?
ìì] ^
$num
ìì_ `
:
ììa b
$num
ììc d
)
ììd e
;
ììe f
}
óó 	
private
úú 
void
úú  
AttachDefaultBlend
úú '
(
úú' (
PlayableGraph
úú( 5
graph
úú6 ;
,
úú; <)
AnimationLayerMixerPlayable
úú= X
mixer
úúY ^
,
úú^ _
bool
úú` d
requireOffset
úúe r
)
úúr s
{
ùù 	
if
üü 
(
üü 
Application
üü 
.
üü 
	isPlaying
üü %
)
üü% &
return
†† 
;
†† 
int
¢¢ 

mixerInput
¢¢ 
=
¢¢ 
$num
¢¢ 
;
¢¢ 
if
££ 
(
££ $
m_CachedPropertiesClip
££ &
)
££& '
{
§§ 
var
•• "
cachedPropertiesClip
•• (
=
••) *#
AnimationClipPlayable
••+ @
.
••@ A
Create
••A G
(
••G H
graph
••H M
,
••M N$
m_CachedPropertiesClip
••O e
)
••e f
;
••f g"
cachedPropertiesClip
¶¶ $
.
¶¶$ %
SetApplyFootIK
¶¶% 3
(
¶¶3 4
false
¶¶4 9
)
¶¶9 :
;
¶¶: ;
var
ßß 
defaults
ßß 
=
ßß 
(
ßß  
Playable
ßß  (
)
ßß( )"
cachedPropertiesClip
ßß) =
;
ßß= >
if
®® 
(
®® 
requireOffset
®® !
)
®®! "
defaults
©© 
=
©© "
AttachOffsetPlayable
©© 3
(
©©3 4
graph
©©4 9
,
©©9 :
defaults
©©; C
,
©©C D#
m_SceneOffsetPosition
©©E Z
,
©©Z [

Quaternion
©©\ f
.
©©f g
Euler
©©g l
(
©©l m$
m_SceneOffsetRotation©©m Ç
)©©Ç É
)©©É Ñ
;©©Ñ Ö
graph
™™ 
.
™™ 
Connect
™™ 
(
™™ 
defaults
™™ &
,
™™& '
$num
™™( )
,
™™) *
mixer
™™+ 0
,
™™0 1

mixerInput
™™2 <
)
™™< =
;
™™= >
mixer
´´ 
.
´´ 
SetInputWeight
´´ $
(
´´$ %

mixerInput
´´% /
,
´´/ 0
$num
´´1 5
)
´´5 6
;
´´6 7

mixerInput
¨¨ 
++
¨¨ 
;
¨¨ 
}
≠≠ 
if
ØØ 
(
ØØ 
m_DefaultPoseClip
ØØ !
)
ØØ! "
{
∞∞ 
var
±± 
defaultPose
±± 
=
±±  !#
AnimationClipPlayable
±±" 7
.
±±7 8
Create
±±8 >
(
±±> ?
graph
±±? D
,
±±D E
m_DefaultPoseClip
±±F W
)
±±W X
;
±±X Y
defaultPose
≤≤ 
.
≤≤ 
SetApplyFootIK
≤≤ *
(
≤≤* +
false
≤≤+ 0
)
≤≤0 1
;
≤≤1 2
var
≥≥ 
blendDefault
≥≥  
=
≥≥! "
(
≥≥# $
Playable
≥≥$ ,
)
≥≥, -
defaultPose
≥≥- 8
;
≥≥8 9
if
¥¥ 
(
¥¥ 
requireOffset
¥¥ !
)
¥¥! "
blendDefault
µµ  
=
µµ! ""
AttachOffsetPlayable
µµ# 7
(
µµ7 8
graph
µµ8 =
,
µµ= >
blendDefault
µµ? K
,
µµK L#
m_SceneOffsetPosition
µµM b
,
µµb c

Quaternion
µµd n
.
µµn o
Euler
µµo t
(
µµt u$
m_SceneOffsetRotationµµu ä
)µµä ã
)µµã å
;µµå ç
graph
∂∂ 
.
∂∂ 
Connect
∂∂ 
(
∂∂ 
blendDefault
∂∂ *
,
∂∂* +
$num
∂∂, -
,
∂∂- .
mixer
∂∂/ 4
,
∂∂4 5

mixerInput
∂∂6 @
)
∂∂@ A
;
∂∂A B
mixer
∑∑ 
.
∑∑ 
SetInputWeight
∑∑ $
(
∑∑$ %

mixerInput
∑∑% /
,
∑∑/ 0
$num
∑∑1 5
)
∑∑5 6
;
∑∑6 7
}
∏∏ 
}
∫∫ 	
private
ºº 
Playable
ºº "
AttachOffsetPlayable
ºº -
(
ºº- .
PlayableGraph
ºº. ;
graph
ºº< A
,
ººA B
Playable
ººC K
playable
ººL T
,
ººT U
Vector3
ººV ]
pos
ºº^ a
,
ººa b

Quaternion
ººc m
rot
ººn q
)
ººq r
{
ΩΩ 	
var
ææ 
offsetPlayable
ææ 
=
ææ  %
AnimationOffsetPlayable
ææ! 8
.
ææ8 9
Create
ææ9 ?
(
ææ? @
graph
ææ@ E
,
ææE F
pos
ææG J
,
ææJ K
rot
ææL O
,
ææO P
$num
ææQ R
)
ææR S
;
ææS T
offsetPlayable
øø 
.
øø 
SetInputWeight
øø )
(
øø) *
$num
øø* +
,
øø+ ,
$num
øø- 1
)
øø1 2
;
øø2 3
graph
¿¿ 
.
¿¿ 
Connect
¿¿ 
(
¿¿ 
playable
¿¿ "
,
¿¿" #
$num
¿¿$ %
,
¿¿% &
offsetPlayable
¿¿' 5
,
¿¿5 6
$num
¿¿7 8
)
¿¿8 9
;
¿¿9 :
return
¡¡ 
offsetPlayable
¡¡ !
;
¡¡! "
}
¬¬ 	
private
≈≈ 
static
≈≈ 
string
≈≈ '
k_DefaultHumanoidClipPath
≈≈ 7
=
≈≈8 9
$str≈≈: É
;≈≈É Ñ
private
∆∆ 
static
∆∆ 
AnimationClip
∆∆ $#
s_DefaultHumanoidClip
∆∆% :
=
∆∆; <
null
∆∆= A
;
∆∆A B
AnimationClip
»» $
GetDefaultHumanoidClip
»» ,
(
»», -
)
»»- .
{
…… 	
if
   
(
   #
s_DefaultHumanoidClip
   %
==
  & (
null
  ) -
)
  - .
{
ÀÀ #
s_DefaultHumanoidClip
ÃÃ %
=
ÃÃ& '
EditorGUIUtility
ÃÃ( 8
.
ÃÃ8 9
LoadRequired
ÃÃ9 E
(
ÃÃE F'
k_DefaultHumanoidClipPath
ÃÃF _
)
ÃÃ_ `
as
ÃÃa c
AnimationClip
ÃÃd q
;
ÃÃq r
if
ÕÕ 
(
ÕÕ #
s_DefaultHumanoidClip
ÕÕ )
==
ÕÕ* ,
null
ÕÕ- 1
)
ÕÕ1 2
Debug
ŒŒ 
.
ŒŒ 
LogError
ŒŒ "
(
ŒŒ" #
$str
ŒŒ# `
)
ŒŒ` a
;
ŒŒa b
}
œœ 
return
—— #
s_DefaultHumanoidClip
—— (
;
——( )
}
““ 	
bool
÷÷ %
RequiresMotionXPlayable
÷÷ $
(
÷÷$ %
AppliedOffsetMode
÷÷% 6
mode
÷÷7 ;
,
÷÷; <

GameObject
÷÷= G

gameObject
÷÷H R
)
÷÷R S
{
◊◊ 	
if
ÿÿ 
(
ÿÿ 
mode
ÿÿ 
==
ÿÿ 
AppliedOffsetMode
ÿÿ )
.
ÿÿ) *
NoRootTransform
ÿÿ* 9
)
ÿÿ9 :
return
ŸŸ 
false
ŸŸ 
;
ŸŸ 
if
⁄⁄ 
(
⁄⁄ 
mode
⁄⁄ 
==
⁄⁄ 
AppliedOffsetMode
⁄⁄ )
.
⁄⁄) *
SceneOffsetLegacy
⁄⁄* ;
)
⁄⁄; <
{
€€ 
var
‹‹ 
animator
‹‹ 
=
‹‹ 

GetBinding
‹‹ )
(
‹‹) *

gameObject
‹‹* 4
!=
‹‹5 7
null
‹‹8 <
?
‹‹= >

gameObject
‹‹? I
.
‹‹I J
GetComponent
‹‹J V
<
‹‹V W
PlayableDirector
‹‹W g
>
‹‹g h
(
‹‹h i
)
‹‹i j
:
‹‹k l
null
‹‹m q
)
‹‹q r
;
‹‹r s
return
›› 
animator
›› 
!=
››  "
null
››# '
&&
››( *
animator
››+ 3
.
››3 4
hasRootMotion
››4 A
;
››A B
}
ﬁﬁ 
return
ﬂﬂ 
true
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
static
‚‚ 
bool
‚‚  
UsesAbsoluteMotion
‚‚ &
(
‚‚& '
AppliedOffsetMode
‚‚' 8
mode
‚‚9 =
)
‚‚= >
{
„„ 	
if
ÊÊ 
(
ÊÊ 
!
ÊÊ 
Application
ÊÊ 
.
ÊÊ 
	isPlaying
ÊÊ &
)
ÊÊ& '
return
ÁÁ 
true
ÁÁ 
;
ÁÁ 
return
ÈÈ 
mode
ÈÈ 
!=
ÈÈ 
AppliedOffsetMode
ÈÈ ,
.
ÈÈ, -
SceneOffset
ÈÈ- 8
&&
ÈÈ9 ;
mode
ÍÍ 
!=
ÍÍ 
AppliedOffsetMode
ÍÍ )
.
ÍÍ) *
SceneOffsetLegacy
ÍÍ* ;
;
ÍÍ; <
}
ÎÎ 	
bool
ÌÌ 
HasController
ÌÌ 
(
ÌÌ 

GameObject
ÌÌ %

gameObject
ÌÌ& 0
)
ÌÌ0 1
{
ÓÓ 	
var
ÔÔ 
animator
ÔÔ 
=
ÔÔ 

GetBinding
ÔÔ %
(
ÔÔ% &

gameObject
ÔÔ& 0
!=
ÔÔ1 3
null
ÔÔ4 8
?
ÔÔ9 :

gameObject
ÔÔ; E
.
ÔÔE F
GetComponent
ÔÔF R
<
ÔÔR S
PlayableDirector
ÔÔS c
>
ÔÔc d
(
ÔÔd e
)
ÔÔe f
:
ÔÔg h
null
ÔÔi m
)
ÔÔm n
;
ÔÔn o
return
ÒÒ 
animator
ÒÒ 
!=
ÒÒ 
null
ÒÒ #
&&
ÒÒ$ &
animator
ÒÒ' /
.
ÒÒ/ 0'
runtimeAnimatorController
ÒÒ0 I
!=
ÒÒJ L
null
ÒÒM Q
;
ÒÒQ R
}
ÚÚ 	
internal
ÙÙ 
Animator
ÙÙ 

GetBinding
ÙÙ $
(
ÙÙ$ %
PlayableDirector
ÙÙ% 5
director
ÙÙ6 >
)
ÙÙ> ?
{
ıı 	
if
ˆˆ 
(
ˆˆ 
director
ˆˆ 
==
ˆˆ 
null
ˆˆ  
)
ˆˆ  !
return
˜˜ 
null
˜˜ 
;
˜˜ 
UnityEngine
˘˘ 
.
˘˘ 
Object
˘˘ 
key
˘˘ "
=
˘˘# $
this
˘˘% )
;
˘˘) *
if
˙˙ 
(
˙˙ 

isSubTrack
˙˙ 
)
˙˙ 
key
˚˚ 
=
˚˚ 
parent
˚˚ 
;
˚˚ 
UnityEngine
˝˝ 
.
˝˝ 
Object
˝˝ 
binding
˝˝ &
=
˝˝' (
null
˝˝) -
;
˝˝- .
if
˛˛ 
(
˛˛ 
director
˛˛ 
!=
˛˛ 
null
˛˛  
)
˛˛  !
binding
ˇˇ 
=
ˇˇ 
director
ˇˇ "
.
ˇˇ" #
GetGenericBinding
ˇˇ# 4
(
ˇˇ4 5
key
ˇˇ5 8
)
ˇˇ8 9
;
ˇˇ9 :
Animator
ÅÅ 
animator
ÅÅ 
=
ÅÅ 
null
ÅÅ  $
;
ÅÅ$ %
if
ÇÇ 
(
ÇÇ 
binding
ÇÇ 
!=
ÇÇ 
null
ÇÇ 
)
ÇÇ  
{
ÉÉ 
animator
ÑÑ 
=
ÑÑ 
binding
ÑÑ "
as
ÑÑ# %
Animator
ÑÑ& .
;
ÑÑ. /
var
ÖÖ 

gameObject
ÖÖ 
=
ÖÖ  
binding
ÖÖ! (
as
ÖÖ) +

GameObject
ÖÖ, 6
;
ÖÖ6 7
if
ÜÜ 
(
ÜÜ 
animator
ÜÜ 
==
ÜÜ 
null
ÜÜ  $
&&
ÜÜ% '

gameObject
ÜÜ( 2
!=
ÜÜ3 5
null
ÜÜ6 :
)
ÜÜ: ;
animator
áá 
=
áá 

gameObject
áá )
.
áá) *
GetComponent
áá* 6
<
áá6 7
Animator
áá7 ?
>
áá? @
(
áá@ A
)
ááA B
;
ááB C
}
àà 
return
ää 
animator
ää 
;
ää 
}
ãã 	
static
çç )
AnimationLayerMixerPlayable
çç *
CreateGroupMixer
çç+ ;
(
çç; <
PlayableGraph
çç< I
graph
ççJ O
,
ççO P

GameObject
ççQ [
go
çç\ ^
,
çç^ _
int
çç` c

inputCount
ççd n
)
ççn o
{
éé 	
return
èè )
AnimationLayerMixerPlayable
èè .
.
èè. /
Create
èè/ 5
(
èè5 6
graph
èè6 ;
,
èè; <

inputCount
èè= G
)
èèG H
;
èèH I
}
êê 	
Playable
íí )
CreateInfiniteTrackPlayable
íí ,
(
íí, -
PlayableGraph
íí- :
graph
íí; @
,
íí@ A

GameObject
ííB L
go
ííM O
,
ííO P
IntervalTree
ííQ ]
<
íí] ^
RuntimeElement
íí^ l
>
ííl m
tree
íín r
,
íír s 
AppliedOffsetModeíít Ö
modeííÜ ä
)ííä ã
{
ìì 	
if
îî 
(
îî 
m_InfiniteClip
îî 
==
îî !
null
îî" &
)
îî& '
return
ïï 
Playable
ïï 
.
ïï  
Null
ïï  $
;
ïï$ %
var
óó 
mixer
óó 
=
óó $
AnimationMixerPlayable
óó .
.
óó. /
Create
óó/ 5
(
óó5 6
graph
óó6 ;
,
óó; <
$num
óó= >
)
óó> ?
;
óó? @
var
úú 
playable
úú 
=
úú $
AnimationPlayableAsset
úú 1
.
úú1 2
CreatePlayable
úú2 @
(
úú@ A
graph
úúA F
,
úúF G
m_InfiniteClip
úúH V
,
úúV W*
m_InfiniteClipOffsetPosition
úúX t
,
úút u.
m_InfiniteClipOffsetEulerAnglesúúv ï
,úúï ñ
falseúúó ú
,úúú ù
modeúúû ¢
,úú¢ £'
infiniteClipApplyFootIKúú§ ª
,úúª º&
AnimationPlayableAssetúúΩ ”
.úú” ‘
LoopModeúú‘ ‹
.úú‹ ›
Offúú› ‡
)úú‡ ·
;úú· ‚
if
ùù 
(
ùù 
playable
ùù 
.
ùù 
IsValid
ùù  
(
ùù  !
)
ùù! "
)
ùù" #
{
ûû 
tree
üü 
.
üü 
Add
üü 
(
üü 
new
üü !
InfiniteRuntimeClip
üü 0
(
üü0 1
playable
üü1 9
)
üü9 :
)
üü: ;
;
üü; <
graph
†† 
.
†† 
Connect
†† 
(
†† 
playable
†† &
,
††& '
$num
††( )
,
††) *
mixer
††+ 0
,
††0 1
$num
††2 3
)
††3 4
;
††4 5
mixer
°° 
.
°° 
SetInputWeight
°° $
(
°°$ %
$num
°°% &
,
°°& '
$num
°°( ,
)
°°, -
;
°°- .
}
¢¢ 
if
§§ 
(
§§ 
!
§§ #
AnimatesRootTransform
§§ &
(
§§& '
)
§§' (
)
§§( )
return
•• 
mixer
•• 
;
•• 
var
ßß 
	rootTrack
ßß 
=
ßß 

isSubTrack
ßß &
?
ßß' (
(
ßß) *
AnimationTrack
ßß* 8
)
ßß8 9
parent
ßß9 ?
:
ßß@ A
this
ßßB F
;
ßßF G
return
®® 
	rootTrack
®® 
.
®® 
ApplyTrackOffset
®® -
(
®®- .
graph
®®. 3
,
®®3 4
mixer
®®5 :
,
®®: ;
go
®®< >
,
®®> ?
mode
®®@ D
)
®®D E
;
®®E F
}
©© 	
Playable
´´ 
ApplyTrackOffset
´´ !
(
´´! "
PlayableGraph
´´" /
graph
´´0 5
,
´´5 6
Playable
´´7 ?
root
´´@ D
,
´´D E

GameObject
´´F P
go
´´Q S
,
´´S T
AppliedOffsetMode
´´U f
mode
´´g k
)
´´k l
{
¨¨ 	
m_ClipOffset
ÆÆ 
=
ÆÆ %
AnimationOffsetPlayable
ÆÆ 2
.
ÆÆ2 3
Null
ÆÆ3 7
;
ÆÆ7 8
if
≤≤ 
(
≤≤ 
mode
≤≤ 
==
≤≤ 
AppliedOffsetMode
≤≤ )
.
≤≤) *
SceneOffsetLegacy
≤≤* ;
||
≤≤< >
mode
≥≥ 
==
≥≥ 
AppliedOffsetMode
≥≥ )
.
≥≥) *
SceneOffset
≥≥* 5
||
≥≥: <
mode
¥¥ 
==
¥¥ 
AppliedOffsetMode
¥¥ )
.
¥¥) *
NoRootTransform
¥¥* 9
)
µµ 
return
∂∂ 
root
∂∂ 
;
∂∂ 
var
ππ 
pos
ππ 
=
ππ 
position
ππ 
;
ππ 
var
∫∫ 
rot
∫∫ 
=
∫∫ 
rotation
∫∫ 
;
∫∫ 
if
ææ 
(
ææ 
mode
ææ 
==
ææ 
AppliedOffsetMode
ææ )
.
ææ) *
SceneOffsetEditor
ææ* ;
)
ææ; <
{
øø 
pos
¿¿ 
=
¿¿ #
m_SceneOffsetPosition
¿¿ +
;
¿¿+ ,
rot
¡¡ 
=
¡¡ 

Quaternion
¡¡  
.
¡¡  !
Euler
¡¡! &
(
¡¡& '#
m_SceneOffsetRotation
¡¡' <
)
¡¡< =
;
¡¡= >
}
¬¬ 
var
≈≈ 
offsetPlayable
≈≈ 
=
≈≈  %
AnimationOffsetPlayable
≈≈! 8
.
≈≈8 9
Create
≈≈9 ?
(
≈≈? @
graph
≈≈@ E
,
≈≈E F
pos
≈≈G J
,
≈≈J K
rot
≈≈L O
,
≈≈O P
$num
≈≈Q R
)
≈≈R S
;
≈≈S T
m_ClipOffset
«« 
=
«« 
offsetPlayable
«« )
;
««) *
graph
…… 
.
…… 
Connect
…… 
(
…… 
root
…… 
,
…… 
$num
……  !
,
……! "
offsetPlayable
……# 1
,
……1 2
$num
……3 4
)
……4 5
;
……5 6
offsetPlayable
   
.
   
SetInputWeight
   )
(
  ) *
$num
  * +
,
  + ,
$num
  - .
)
  . /
;
  / 0
return
ÃÃ 
offsetPlayable
ÃÃ !
;
ÃÃ! "
}
ÕÕ 	
internal
–– 
override
–– 
void
–– 
GetEvaluationTime
–– 0
(
––0 1
out
––1 4
double
––5 ;
outStart
––< D
,
––D E
out
––F I
double
––J P
outDuration
––Q \
)
––\ ]
{
—— 	
if
““ 
(
““ 

inClipMode
““ 
)
““ 
{
”” 
base
‘‘ 
.
‘‘ 
GetEvaluationTime
‘‘ &
(
‘‘& '
out
‘‘' *
outStart
‘‘+ 3
,
‘‘3 4
out
‘‘5 8
outDuration
‘‘9 D
)
‘‘D E
;
‘‘E F
}
’’ 
else
÷÷ 
{
◊◊ 
outStart
ÿÿ 
=
ÿÿ 
$num
ÿÿ 
;
ÿÿ 
outDuration
ŸŸ 
=
ŸŸ 
TimelineClip
ŸŸ *
.
ŸŸ* +
kMaxTimeValue
ŸŸ+ 8
;
ŸŸ8 9
}
⁄⁄ 
}
€€ 	
internal
›› 
override
›› 
void
›› 
GetSequenceTime
›› .
(
››. /
out
››/ 2
double
››3 9
outStart
››: B
,
››B C
out
››D G
double
››H N
outDuration
››O Z
)
››Z [
{
ﬁﬁ 	
if
ﬂﬂ 
(
ﬂﬂ 

inClipMode
ﬂﬂ 
)
ﬂﬂ 
{
‡‡ 
base
·· 
.
·· 
GetSequenceTime
·· $
(
··$ %
out
··% (
outStart
··) 1
,
··1 2
out
··3 6
outDuration
··7 B
)
··B C
;
··C D
}
‚‚ 
else
„„ 
{
‰‰ 
outStart
ÂÂ 
=
ÂÂ 
$num
ÂÂ 
;
ÂÂ 
outDuration
ÊÊ 
=
ÊÊ 
Math
ÊÊ "
.
ÊÊ" #
Max
ÊÊ# &
(
ÊÊ& '%
GetNotificationDuration
ÊÊ' >
(
ÊÊ> ?
)
ÊÊ? @
,
ÊÊ@ A
TimeUtility
ÊÊB M
.
ÊÊM N$
GetAnimationClipLength
ÊÊN d
(
ÊÊd e
m_InfiniteClip
ÊÊe s
)
ÊÊs t
)
ÊÊt u
;
ÊÊu v
}
ÁÁ 
}
ËË 	
void
ÍÍ !
AssignAnimationClip
ÍÍ  
(
ÍÍ  !
TimelineClip
ÍÍ! -
clip
ÍÍ. 2
,
ÍÍ2 3
AnimationClip
ÍÍ4 A
animClip
ÍÍB J
)
ÍÍJ K
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ 
clip
ÏÏ 
==
ÏÏ 
null
ÏÏ 
||
ÏÏ 
animClip
ÏÏ  (
==
ÏÏ) +
null
ÏÏ, 0
)
ÏÏ0 1
return
ÌÌ 
;
ÌÌ 
if
ÔÔ 
(
ÔÔ 
animClip
ÔÔ 
.
ÔÔ 
legacy
ÔÔ 
)
ÔÔ  
throw
 
new
 '
InvalidOperationException
 3
(
3 4
$str
4 ^
)
^ _
;
_ `$
AnimationPlayableAsset
ÚÚ "
asset
ÚÚ# (
=
ÚÚ) *
clip
ÚÚ+ /
.
ÚÚ/ 0
asset
ÚÚ0 5
as
ÚÚ6 8$
AnimationPlayableAsset
ÚÚ9 O
;
ÚÚO P
if
ÛÛ 
(
ÛÛ 
asset
ÛÛ 
!=
ÛÛ 
null
ÛÛ 
)
ÛÛ 
{
ÙÙ 
asset
ıı 
.
ıı 
clip
ıı 
=
ıı 
animClip
ıı %
;
ıı% &
asset
ˆˆ 
.
ˆˆ 
name
ˆˆ 
=
ˆˆ 
animClip
ˆˆ %
.
ˆˆ% &
name
ˆˆ& *
;
ˆˆ* +
var
˜˜ 
duration
˜˜ 
=
˜˜ 
asset
˜˜ $
.
˜˜$ %
duration
˜˜% -
;
˜˜- .
if
¯¯ 
(
¯¯ 
!
¯¯ 
double
¯¯ 
.
¯¯ 

IsInfinity
¯¯ &
(
¯¯& '
duration
¯¯' /
)
¯¯/ 0
&&
¯¯1 3
duration
¯¯4 <
>=
¯¯= ?
TimelineClip
¯¯@ L
.
¯¯L M
kMinDuration
¯¯M Y
&&
¯¯Z \
duration
¯¯] e
<
¯¯f g
TimelineClip
¯¯h t
.
¯¯t u
kMaxTimeValue¯¯u Ç
)¯¯Ç É
clip
˘˘ 
.
˘˘ 
duration
˘˘ !
=
˘˘" #
duration
˘˘$ ,
;
˘˘, -
}
˙˙ 
clip
˚˚ 
.
˚˚ 
displayName
˚˚ 
=
˚˚ 
animClip
˚˚ '
.
˚˚' (
name
˚˚( ,
;
˚˚, -
}
¸¸ 	
public
ÉÉ 
override
ÉÉ 
void
ÉÉ 
GatherProperties
ÉÉ -
(
ÉÉ- .
PlayableDirector
ÉÉ. >
director
ÉÉ? G
,
ÉÉG H 
IPropertyCollector
ÉÉI [
driver
ÉÉ\ b
)
ÉÉb c
{
ÑÑ 	#
m_SceneOffsetPosition
ÜÜ !
=
ÜÜ" #
Vector3
ÜÜ$ +
.
ÜÜ+ ,
zero
ÜÜ, 0
;
ÜÜ0 1#
m_SceneOffsetRotation
áá !
=
áá" #
Vector3
áá$ +
.
áá+ ,
zero
áá, 0
;
áá0 1
var
ââ 
animator
ââ 
=
ââ 

GetBinding
ââ %
(
ââ% &
director
ââ& .
)
ââ. /
;
ââ/ 0
if
ää 
(
ää 
animator
ää 
==
ää 
null
ää  
)
ää  !
return
ãã 
;
ãã 
var
çç 
	animClips
çç 
=
çç 
new
çç 
List
çç  $
<
çç$ %
AnimationClip
çç% 2
>
çç2 3
(
çç3 4
this
çç4 8
.
çç8 9
clips
çç9 >
.
çç> ?
Length
çç? E
+
ççF G
$num
ççH I
)
ççI J
;
ççJ K
GetAnimationClips
éé 
(
éé 
	animClips
éé '
)
éé' (
;
éé( )
var
êê 
hasHumanMotion
êê 
=
êê  
	animClips
êê! *
.
êê* +
Exists
êê+ 1
(
êê1 2
clip
êê2 6
=>
êê7 9
clip
êê: >
.
êê> ?
humanMotion
êê? J
)
êêJ K
;
êêK L
if
íí 
(
íí 
!
íí 
hasHumanMotion
íí 
&&
íí  "
animator
íí# +
.
íí+ ,
isHuman
íí, 3
&&
íí4 6#
AnimatesRootTransform
íí7 L
(
ííL M
)
ííM N
&&
ííO Q
!
ìì +
DrivenPropertyManagerInternal
ìì .
.
ìì. /
IsDriven
ìì/ 7
(
ìì7 8
animator
ìì8 @
.
ìì@ A
	transform
ììA J
,
ììJ K
$str
ììL _
)
ìì_ `
&&
ììa c
!
îî +
DrivenPropertyManagerInternal
îî .
.
îî. /
IsDriven
îî/ 7
(
îî7 8
animator
îî8 @
.
îî@ A
	transform
îîA J
,
îîJ K
$str
îîL _
)
îî_ `
)
îî` a
hasHumanMotion
ïï 
=
ïï  
true
ïï! %
;
ïï% &#
m_SceneOffsetPosition
óó !
=
óó" #
animator
óó$ ,
.
óó, -
	transform
óó- 6
.
óó6 7
localPosition
óó7 D
;
óóD E#
m_SceneOffsetRotation
òò !
=
òò" #
animator
òò$ ,
.
òò, -
	transform
òò- 6
.
òò6 7
localEulerAngles
òò7 G
;
òòG H
if
õõ 
(
õõ 
hasHumanMotion
õõ 
)
õõ 
	animClips
úú 
.
úú 
Add
úú 
(
úú $
GetDefaultHumanoidClip
úú 4
(
úú4 5
)
úú5 6
)
úú6 7
;
úú7 8
m_DefaultPoseClip
ûû 
=
ûû 
hasHumanMotion
ûû  .
?
ûû/ 0$
GetDefaultHumanoidClip
ûû1 G
(
ûûG H
)
ûûH I
:
ûûJ K
null
ûûL P
;
ûûP Q
var
üü 
hash
üü 
=
üü '
AnimationPreviewUtilities
üü 0
.
üü0 1
GetClipHash
üü1 <
(
üü< =
	animClips
üü= F
)
üüF G
;
üüG H
if
†† 
(
†† 
m_CachedBindings
††  
==
††! #
null
††$ (
||
††) +
m_CachedHash
††, 8
!=
††9 ;
hash
††< @
)
††@ A
{
°° 
m_CachedBindings
¢¢  
=
¢¢! "'
AnimationPreviewUtilities
¢¢# <
.
¢¢< =
GetBindings
¢¢= H
(
¢¢H I
animator
¢¢I Q
.
¢¢Q R

gameObject
¢¢R \
,
¢¢\ ]
	animClips
¢¢^ g
)
¢¢g h
;
¢¢h i$
m_CachedPropertiesClip
££ &
=
££' ('
AnimationPreviewUtilities
££) B
.
££B C
CreateDefaultClip
££C T
(
££T U
animator
££U ]
.
££] ^

gameObject
££^ h
,
££h i
m_CachedBindings
££j z
)
££z {
;
££{ |
m_CachedHash
§§ 
=
§§ 
hash
§§ #
;
§§# $
}
•• '
AnimationPreviewUtilities
ßß %
.
ßß% &
PreviewFromCurves
ßß& 7
(
ßß7 8
animator
ßß8 @
.
ßß@ A

gameObject
ßßA K
,
ßßK L
m_CachedBindings
ßßM ]
)
ßß] ^
;
ßß^ _
}
©© 	
private
ØØ 
void
ØØ 
GetAnimationClips
ØØ &
(
ØØ& '
List
ØØ' +
<
ØØ+ ,
AnimationClip
ØØ, 9
>
ØØ9 :
	animClips
ØØ; D
)
ØØD E
{
∞∞ 	
foreach
±± 
(
±± 
var
±± 
c
±± 
in
±± 
clips
±± #
)
±±# $
{
≤≤ 
var
≥≥ 
a
≥≥ 
=
≥≥ 
c
≥≥ 
.
≥≥ 
asset
≥≥ 
as
≥≥  "$
AnimationPlayableAsset
≥≥# 9
;
≥≥9 :
if
¥¥ 
(
¥¥ 
a
¥¥ 
!=
¥¥ 
null
¥¥ 
&&
¥¥  
a
¥¥! "
.
¥¥" #
clip
¥¥# '
!=
¥¥( *
null
¥¥+ /
)
¥¥/ 0
	animClips
µµ 
.
µµ 
Add
µµ !
(
µµ! "
a
µµ" #
.
µµ# $
clip
µµ$ (
)
µµ( )
;
µµ) *
}
∂∂ 
if
∏∏ 
(
∏∏ 
m_InfiniteClip
∏∏ 
!=
∏∏ !
null
∏∏" &
)
∏∏& '
	animClips
ππ 
.
ππ 
Add
ππ 
(
ππ 
m_InfiniteClip
ππ ,
)
ππ, -
;
ππ- .
foreach
ªª 
(
ªª 
var
ªª 

childTrack
ªª #
in
ªª$ &
GetChildTracks
ªª' 5
(
ªª5 6
)
ªª6 7
)
ªª7 8
{
ºº 
var
ΩΩ 
animChildTrack
ΩΩ "
=
ΩΩ# $

childTrack
ΩΩ% /
as
ΩΩ0 2
AnimationTrack
ΩΩ3 A
;
ΩΩA B
if
ææ 
(
ææ 
animChildTrack
ææ "
!=
ææ# %
null
ææ& *
)
ææ* +
animChildTrack
øø "
.
øø" #
GetAnimationClips
øø# 4
(
øø4 5
	animClips
øø5 >
)
øø> ?
;
øø? @
}
¿¿ 
}
¡¡ 	
AppliedOffsetMode
ƒƒ 
GetOffsetMode
ƒƒ '
(
ƒƒ' (

GameObject
ƒƒ( 2
go
ƒƒ3 5
,
ƒƒ5 6
bool
ƒƒ7 ;#
animatesRootTransform
ƒƒ< Q
)
ƒƒQ R
{
≈≈ 	
if
∆∆ 
(
∆∆ 
!
∆∆ #
animatesRootTransform
∆∆ &
)
∆∆& '
return
«« 
AppliedOffsetMode
«« (
.
««( )
NoRootTransform
««) 8
;
««8 9
if
…… 
(
…… 
m_TrackOffset
…… 
==
……  
TrackOffset
……! ,
.
……, -#
ApplyTransformOffsets
……- B
)
……B C
return
   
AppliedOffsetMode
   (
.
  ( )
TransformOffset
  ) 8
;
  8 9
if
ÃÃ 
(
ÃÃ 
m_TrackOffset
ÃÃ 
==
ÃÃ  
TrackOffset
ÃÃ! ,
.
ÃÃ, -
ApplySceneOffsets
ÃÃ- >
)
ÃÃ> ?
return
ÕÕ 
(
ÕÕ 
Application
ÕÕ #
.
ÕÕ# $
	isPlaying
ÕÕ$ -
)
ÕÕ- .
?
ÕÕ/ 0
AppliedOffsetMode
ÕÕ1 B
.
ÕÕB C
SceneOffset
ÕÕC N
:
ÕÕO P
AppliedOffsetMode
ÕÕQ b
.
ÕÕb c
SceneOffsetEditor
ÕÕc t
;
ÕÕt u
if
œœ 
(
œœ 
HasController
œœ 
(
œœ 
go
œœ  
)
œœ  !
)
œœ! "
{
–– 
if
—— 
(
—— 
!
—— 
Application
——  
.
——  !
	isPlaying
——! *
)
——* +
return
““ 
AppliedOffsetMode
““ ,
.
““, -%
SceneOffsetLegacyEditor
““- D
;
““D E
return
”” 
AppliedOffsetMode
”” (
.
””( )
SceneOffsetLegacy
””) :
;
””: ;
}
‘‘ 
return
÷÷ 
AppliedOffsetMode
÷÷ $
.
÷÷$ %#
TransformOffsetLegacy
÷÷% :
;
÷÷: ;
}
◊◊ 	
private
ŸŸ 
bool
ŸŸ +
IsRootTransformDisabledByMask
ŸŸ 2
(
ŸŸ2 3

GameObject
ŸŸ3 =

gameObject
ŸŸ> H
,
ŸŸH I
	Transform
ŸŸJ S
genericRootNode
ŸŸT c
)
ŸŸc d
{
⁄⁄ 	
if
€€ 
(
€€ 

avatarMask
€€ 
==
€€ 
null
€€ "
||
€€# %
!
€€& '
applyAvatarMask
€€' 6
)
€€6 7
return
‹‹ 
false
‹‹ 
;
‹‹ 
var
ﬁﬁ 
animator
ﬁﬁ 
=
ﬁﬁ 

GetBinding
ﬁﬁ %
(
ﬁﬁ% &

gameObject
ﬁﬁ& 0
!=
ﬁﬁ1 3
null
ﬁﬁ4 8
?
ﬁﬁ9 :

gameObject
ﬁﬁ; E
.
ﬁﬁE F
GetComponent
ﬁﬁF R
<
ﬁﬁR S
PlayableDirector
ﬁﬁS c
>
ﬁﬁc d
(
ﬁﬁd e
)
ﬁﬁe f
:
ﬁﬁg h
null
ﬁﬁi m
)
ﬁﬁm n
;
ﬁﬁn o
if
ﬂﬂ 
(
ﬂﬂ 
animator
ﬂﬂ 
==
ﬂﬂ 
null
ﬂﬂ  
)
ﬂﬂ  !
return
‡‡ 
false
‡‡ 
;
‡‡ 
if
‚‚ 
(
‚‚ 
animator
‚‚ 
.
‚‚ 
isHuman
‚‚  
)
‚‚  !
return
„„ 
!
„„ 

avatarMask
„„ "
.
„„" #'
GetHumanoidBodyPartActive
„„# <
(
„„< = 
AvatarMaskBodyPart
„„= O
.
„„O P
Root
„„P T
)
„„T U
;
„„U V
if
ÂÂ 
(
ÂÂ 

avatarMask
ÂÂ 
.
ÂÂ 
transformCount
ÂÂ )
==
ÂÂ* ,
$num
ÂÂ- .
)
ÂÂ. /
return
ÊÊ 
false
ÊÊ 
;
ÊÊ 
if
ÈÈ 
(
ÈÈ 
genericRootNode
ÈÈ 
==
ÈÈ  "
null
ÈÈ# '
)
ÈÈ' (
return
ÍÍ 
string
ÍÍ 
.
ÍÍ 
IsNullOrEmpty
ÍÍ +
(
ÍÍ+ ,

avatarMask
ÍÍ, 6
.
ÍÍ6 7
GetTransformPath
ÍÍ7 G
(
ÍÍG H
$num
ÍÍH I
)
ÍÍI J
)
ÍÍJ K
&&
ÍÍL N
!
ÍÍO P

avatarMask
ÍÍP Z
.
ÍÍZ [ 
GetTransformActive
ÍÍ[ m
(
ÍÍm n
$num
ÍÍn o
)
ÍÍo p
;
ÍÍp q
for
ÌÌ 
(
ÌÌ 
int
ÌÌ 
i
ÌÌ 
=
ÌÌ 
$num
ÌÌ 
;
ÌÌ 
i
ÌÌ 
<
ÌÌ 

avatarMask
ÌÌ  *
.
ÌÌ* +
transformCount
ÌÌ+ 9
;
ÌÌ9 :
i
ÌÌ; <
++
ÌÌ< >
)
ÌÌ> ?
{
ÓÓ 
if
ÔÔ 
(
ÔÔ 
genericRootNode
ÔÔ #
==
ÔÔ$ &
animator
ÔÔ' /
.
ÔÔ/ 0
	transform
ÔÔ0 9
.
ÔÔ9 :
Find
ÔÔ: >
(
ÔÔ> ?

avatarMask
ÔÔ? I
.
ÔÔI J
GetTransformPath
ÔÔJ Z
(
ÔÔZ [
i
ÔÔ[ \
)
ÔÔ\ ]
)
ÔÔ] ^
)
ÔÔ^ _
return
 
!
 

avatarMask
 &
.
& ' 
GetTransformActive
' 9
(
9 :
i
: ;
)
; <
;
< =
}
ÒÒ 
return
ÛÛ 
false
ÛÛ 
;
ÛÛ 
}
ÙÙ 	
private
˜˜ 
	Transform
˜˜  
GetGenericRootNode
˜˜ ,
(
˜˜, -

GameObject
˜˜- 7

gameObject
˜˜8 B
)
˜˜B C
{
¯¯ 	
var
˘˘ 
animator
˘˘ 
=
˘˘ 

GetBinding
˘˘ %
(
˘˘% &

gameObject
˘˘& 0
!=
˘˘1 3
null
˘˘4 8
?
˘˘9 :

gameObject
˘˘; E
.
˘˘E F
GetComponent
˘˘F R
<
˘˘R S
PlayableDirector
˘˘S c
>
˘˘c d
(
˘˘d e
)
˘˘e f
:
˘˘g h
null
˘˘i m
)
˘˘m n
;
˘˘n o
if
˙˙ 
(
˙˙ 
animator
˙˙ 
==
˙˙ 
null
˙˙  
)
˙˙  !
return
˚˚ 
null
˚˚ 
;
˚˚ 
if
˝˝ 
(
˝˝ 
animator
˝˝ 
.
˝˝ 
isHuman
˝˝  
)
˝˝  !
return
˛˛ 
null
˛˛ 
;
˛˛ 
if
ÄÄ 
(
ÄÄ 
animator
ÄÄ 
.
ÄÄ 
avatar
ÄÄ 
==
ÄÄ  "
null
ÄÄ# '
)
ÄÄ' (
return
ÅÅ 
null
ÅÅ 
;
ÅÅ 
var
ÑÑ 
rootName
ÑÑ 
=
ÑÑ 
animator
ÑÑ #
.
ÑÑ# $
avatar
ÑÑ$ *
.
ÑÑ* +
humanDescription
ÑÑ+ ;
.
ÑÑ; <"
m_RootMotionBoneName
ÑÑ< P
;
ÑÑP Q
if
ÖÖ 
(
ÖÖ 
rootName
ÖÖ 
==
ÖÖ 
animator
ÖÖ $
.
ÖÖ$ %
name
ÖÖ% )
||
ÖÖ* ,
string
ÖÖ- 3
.
ÖÖ3 4
IsNullOrEmpty
ÖÖ4 A
(
ÖÖA B
rootName
ÖÖB J
)
ÖÖJ K
)
ÖÖK L
return
ÜÜ 
null
ÜÜ 
;
ÜÜ 
return
ââ )
FindInHierarchyBreadthFirst
ââ .
(
ââ. /
animator
ââ/ 7
.
ââ7 8
	transform
ââ8 A
,
ââA B
rootName
ââC K
)
ââK L
;
ââL M
}
ää 	
internal
åå 
bool
åå #
AnimatesRootTransform
åå +
(
åå+ ,
)
åå, -
{
çç 	
if
èè 
(
èè $
AnimationPlayableAsset
èè &
.
èè& '
HasRootTransforms
èè' 8
(
èè8 9
m_InfiniteClip
èè9 G
)
èèG H
)
èèH I
return
êê 
true
êê 
;
êê 
foreach
ìì 
(
ìì 
var
ìì 
c
ìì 
in
ìì 
GetClips
ìì &
(
ìì& '
)
ìì' (
)
ìì( )
{
îî 
var
ïï 
apa
ïï 
=
ïï 
c
ïï 
.
ïï 
asset
ïï !
as
ïï" $$
AnimationPlayableAsset
ïï% ;
;
ïï; <
if
ññ 
(
ññ 
apa
ññ 
!=
ññ 
null
ññ 
&&
ññ  "
apa
ññ# &
.
ññ& '
hasRootTransforms
ññ' 8
)
ññ8 9
return
óó 
true
óó 
;
óó  
}
òò 
return
öö 
false
öö 
;
öö 
}
õõ 	
private
ùù 
static
ùù 
readonly
ùù 
Queue
ùù  %
<
ùù% &
	Transform
ùù& /
>
ùù/ 0
s_CachedQueue
ùù1 >
=
ùù? @
new
ùùA D
Queue
ùùE J
<
ùùJ K
	Transform
ùùK T
>
ùùT U
(
ùùU V
$num
ùùV Y
)
ùùY Z
;
ùùZ [
private
ûû 
static
ûû 
	Transform
ûû  )
FindInHierarchyBreadthFirst
ûû! <
(
ûû< =
	Transform
ûû= F
t
ûûG H
,
ûûH I
string
ûûJ P
name
ûûQ U
)
ûûU V
{
üü 	
s_CachedQueue
†† 
.
†† 
Clear
†† 
(
††  
)
††  !
;
††! "
s_CachedQueue
°° 
.
°° 
Enqueue
°° !
(
°°! "
t
°°" #
)
°°# $
;
°°$ %
while
¢¢ 
(
¢¢ 
s_CachedQueue
¢¢  
.
¢¢  !
Count
¢¢! &
>
¢¢' (
$num
¢¢) *
)
¢¢* +
{
££ 
var
§§ 
r
§§ 
=
§§ 
s_CachedQueue
§§ %
.
§§% &
Dequeue
§§& -
(
§§- .
)
§§. /
;
§§/ 0
if
•• 
(
•• 
r
•• 
.
•• 
name
•• 
==
•• 
name
•• "
)
••" #
return
¶¶ 
r
¶¶ 
;
¶¶ 
for
ßß 
(
ßß 
int
ßß 
i
ßß 
=
ßß 
$num
ßß 
;
ßß 
i
ßß  !
<
ßß" #
r
ßß$ %
.
ßß% &

childCount
ßß& 0
;
ßß0 1
i
ßß2 3
++
ßß3 5
)
ßß5 6
s_CachedQueue
®® !
.
®®! "
Enqueue
®®" )
(
®®) *
r
®®* +
.
®®+ ,
GetChild
®®, 4
(
®®4 5
i
®®5 6
)
®®6 7
)
®®7 8
;
®®8 9
}
©© 
return
´´ 
null
´´ 
;
´´ 
}
¨¨ 	
}
≠≠ 
}ÆÆ ˚!
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Extensions\TrackExtensions.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
public 

static 
class  
TrackAssetExtensions ,
{ 
public 
static 

GroupTrack  
GetGroup! )
() *
this* .

TrackAsset/ 9
asset: ?
)? @
{ 	
if 
( 
asset 
== 
null 
) 
return 
null 
; 
return 
asset 
. 
parent 
as  "

GroupTrack# -
;- .
} 	
public"" 
static"" 
void"" 
SetGroup"" #
(""# $
this""$ (

TrackAsset"") 3
asset""4 9
,""9 :

GroupTrack""; E
group""F K
)""K L
{## 	
const$$ 
string$$ 

undoString$$ #
=$$$ %
$str$$& 0
;$$0 1
if&& 
(&& 
asset&& 
==&& 
null&& 
||&&  
asset&&! &
==&&' )
group&&* /
||&&0 2
asset&&3 8
.&&8 9
parent&&9 ?
==&&@ B
group&&C H
)&&H I
return'' 
;'' 
if)) 
()) 
group)) 
!=)) 
null)) 
&&))  
asset))! &
.))& '
timelineAsset))' 4
!=))5 7
group))8 =
.))= >
timelineAsset))> K
)))K L
throw** 
new** %
InvalidOperationException** 3
(**3 4
$str**4 f
)**f g
;**g h
TimelineUndo-- 
.-- 
PushUndo-- !
(--! "
asset--" '
,--' (

undoString--) 3
)--3 4
;--4 5
var// 
timeline// 
=// 
asset//  
.//  !
timelineAsset//! .
;//. /
var00 
parentTrack00 
=00 
asset00 #
.00# $
parent00$ *
as00+ -

TrackAsset00. 8
;008 9
var11 
parentTimeline11 
=11  
asset11! &
.11& '
parent11' -
as11. 0
TimelineAsset111 >
;11> ?
if22 
(22 
parentTrack22 
!=22 
null22 #
||22$ &
parentTimeline22' 5
!=226 8
null229 =
)22= >
{33 
TimelineUndo44 
.44 
PushUndo44 %
(44% &
asset44& +
.44+ ,
parent44, 2
,442 3

undoString444 >
)44> ?
;44? @
if55 
(55 
parentTimeline55 "
!=55# %
null55& *
)55* +
{66 
parentTimeline77 "
.77" #
RemoveTrack77# .
(77. /
asset77/ 4
)774 5
;775 6
}88 
else99 
{:: 
parentTrack;; 
.;;  
RemoveSubTrack;;  .
(;;. /
asset;;/ 4
);;4 5
;;;5 6
}<< 
}== 
if?? 
(?? 
group?? 
==?? 
null?? 
)?? 
{@@ 
TimelineUndoAA 
.AA 
PushUndoAA %
(AA% &
timelineAA& .
,AA. /

undoStringAA0 :
)AA: ;
;AA; <
assetBB 
.BB 
parentBB 
=BB 
assetBB $
.BB$ %
timelineAssetBB% 2
;BB2 3
timelineCC 
.CC 
AddTrackInternalCC )
(CC) *
assetCC* /
)CC/ 0
;CC0 1
}DD 
elseEE 
{FF 
TimelineUndoGG 
.GG 
PushUndoGG %
(GG% &
groupGG& +
,GG+ ,

undoStringGG- 7
)GG7 8
;GG8 9
groupHH 
.HH 
AddChildHH 
(HH 
assetHH $
)HH$ %
;HH% &
}II 
}JJ 	
}KK 
}LL Ö#
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Activation\ActivationTrack.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[		 
Serializable		 
]		 
[

 
TrackClipType

 
(

 
typeof

 
(

 #
ActivationPlayableAsset

 1
)

1 2
)

2 3
]

3 4
[ 
TrackBindingType 
( 
typeof 
( 

GameObject '
)' (
)( )
]) *
[ 
ExcludeFromPreset 
] 
public 

class 
ActivationTrack  
:! "

TrackAsset# -
{ 
[ 	
SerializeField	 
] 
PostPlaybackState 
m_PostPlaybackState -
=. /
PostPlaybackState0 A
.A B
	LeaveAsIsB K
;K L#
ActivationMixerPlayable 
m_ActivationMixer  1
;1 2
public 
enum 
PostPlaybackState %
{ 	
Active 
, 
Inactive   
,   
Revert%% 
,%% 
	LeaveAsIs** 
}++ 	
internal-- 
override-- 
bool-- 
CanCompileClips-- .
(--. /
)--/ 0
{.. 	
return// 
!// 
hasClips// 
||// 
base//  $
.//$ %
CanCompileClips//% 4
(//4 5
)//5 6
;//6 7
}00 	
public55 
PostPlaybackState55  
postPlaybackState55! 2
{66 	
get77 
{77 
return77 
m_PostPlaybackState77 ,
;77, -
}77. /
set88 
{88 
m_PostPlaybackState88 %
=88& '
value88( -
;88- .
UpdateTrackMode88/ >
(88> ?
)88? @
;88@ A
}88B C
}99 	
public<< 
override<< 
Playable<<  
CreateTrackMixer<<! 1
(<<1 2
PlayableGraph<<2 ?
graph<<@ E
,<<E F

GameObject<<G Q
go<<R T
,<<T U
int<<V Y

inputCount<<Z d
)<<d e
{== 	
var>> 
mixer>> 
=>> #
ActivationMixerPlayable>> /
.>>/ 0
Create>>0 6
(>>6 7
graph>>7 <
,>>< =

inputCount>>> H
)>>H I
;>>I J
m_ActivationMixer?? 
=?? 
mixer??  %
.??% &
GetBehaviour??& 2
(??2 3
)??3 4
;??4 5
UpdateTrackModeAA 
(AA 
)AA 
;AA 
returnCC 
mixerCC 
;CC 
}DD 	
internalFF 
voidFF 
UpdateTrackModeFF %
(FF% &
)FF& '
{GG 	
ifHH 
(HH 
m_ActivationMixerHH !
!=HH" $
nullHH% )
)HH) *
m_ActivationMixerII !
.II! "
postPlaybackStateII" 3
=II4 5
m_PostPlaybackStateII6 I
;III J
}JJ 	
publicMM 
overrideMM 
voidMM 
GatherPropertiesMM -
(MM- .
PlayableDirectorMM. >
directorMM? G
,MMG H
IPropertyCollectorMMI [
driverMM\ b
)MMb c
{NN 	
varOO 

gameObjectOO 
=OO  
GetGameObjectBindingOO 1
(OO1 2
directorOO2 :
)OO: ;
;OO; <
ifPP 
(PP 

gameObjectPP 
!=PP 
nullPP "
)PP" #
{QQ 
driverRR 
.RR 
AddFromNameRR "
(RR" #

gameObjectRR# -
,RR- .
$strRR/ ;
)RR; <
;RR< =
}SS 
}TT 	
	protectedWW 
overrideWW 
voidWW 
OnCreateClipWW  ,
(WW, -
TimelineClipWW- 9
clipWW: >
)WW> ?
{XX 	
clipYY 
.YY 
displayNameYY 
=YY 
$strYY '
;YY' (
baseZZ 
.ZZ 
OnCreateClipZZ 
(ZZ 
clipZZ "
)ZZ" #
;ZZ# $
}[[ 	
}\\ 
}]] ‰(
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Activation\ActivationMixerPlayable.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
class 	#
ActivationMixerPlayable
 !
:" #
PlayableBehaviour$ 5
{ 
ActivationTrack 
. 
PostPlaybackState )
m_PostPlaybackState* =
;= >
bool 1
%m_BoundGameObjectInitialStateIsActive 2
;2 3
private

 

GameObject

 
m_BoundGameObject

 ,
;

, -
public 
static 
ScriptPlayable $
<$ %#
ActivationMixerPlayable% <
>< =
Create> D
(D E
PlayableGraphE R
graphS X
,X Y
intZ ]

inputCount^ h
)h i
{ 	
return 
ScriptPlayable !
<! "#
ActivationMixerPlayable" 9
>9 :
.: ;
Create; A
(A B
graphB G
,G H

inputCountI S
)S T
;T U
} 	
public 
ActivationTrack 
. 
PostPlaybackState 0
postPlaybackState1 B
{ 	
get 
{ 
return 
m_PostPlaybackState ,
;, -
}. /
set 
{ 
m_PostPlaybackState %
=& '
value( -
;- .
}/ 0
} 	
public 
override 
void 
OnPlayableDestroy .
(. /
Playable/ 7
playable8 @
)@ A
{ 	
if 
( 
m_BoundGameObject !
==" $
null% )
)) *
return 
; 
switch 
( 
m_PostPlaybackState '
)' (
{ 
case 
ActivationTrack $
.$ %
PostPlaybackState% 6
.6 7
Active7 =
:= >
m_BoundGameObject   %
.  % &
	SetActive  & /
(  / 0
true  0 4
)  4 5
;  5 6
break!! 
;!! 
case"" 
ActivationTrack"" $
.""$ %
PostPlaybackState""% 6
.""6 7
Inactive""7 ?
:""? @
m_BoundGameObject## %
.##% &
	SetActive##& /
(##/ 0
false##0 5
)##5 6
;##6 7
break$$ 
;$$ 
case%% 
ActivationTrack%% $
.%%$ %
PostPlaybackState%%% 6
.%%6 7
Revert%%7 =
:%%= >
m_BoundGameObject&& %
.&&% &
	SetActive&&& /
(&&/ 01
%m_BoundGameObjectInitialStateIsActive&&0 U
)&&U V
;&&V W
break'' 
;'' 
case(( 
ActivationTrack(( $
.(($ %
PostPlaybackState((% 6
.((6 7
	LeaveAsIs((7 @
:((@ A
default)) 
:)) 
break** 
;** 
}++ 
},, 	
public.. 
override.. 
void.. 
ProcessFrame.. )
(..) *
Playable..* 2
playable..3 ;
,..; <
	FrameData..= F
info..G K
,..K L
object..M S

playerData..T ^
)..^ _
{// 	
if00 
(00 
m_BoundGameObject00 !
==00" $
null00% )
)00) *
{11 
m_BoundGameObject22 !
=22" #

playerData22$ .
as22/ 1

GameObject222 <
;22< =1
%m_BoundGameObjectInitialStateIsActive33 5
=336 7
m_BoundGameObject338 I
!=33J L
null33M Q
&&33R T
m_BoundGameObject33U f
.33f g

activeSelf33g q
;33q r
}44 
if66 
(66 
m_BoundGameObject66 !
==66" $
null66% )
)66) *
return77 
;77 
int99 

inputCount99 
=99 
playable99 %
.99% &
GetInputCount99& 3
(993 4
)994 5
;995 6
bool:: 
hasInput:: 
=:: 
false:: !
;::! "
for;; 
(;; 
int;; 
i;; 
=;; 
$num;; 
;;; 
i;; 
<;; 

inputCount;;  *
;;;* +
i;;, -
++;;- /
);;/ 0
{<< 
if== 
(== 
playable== 
.== 
GetInputWeight== +
(==+ ,
i==, -
)==- .
>==/ 0
$num==1 2
)==2 3
{>> 
hasInput?? 
=?? 
true?? #
;??# $
break@@ 
;@@ 
}AA 
}BB 
m_BoundGameObjectDD 
.DD 
	SetActiveDD '
(DD' (
hasInputDD( 0
)DD0 1
;DD1 2
}EE 	
}FF 
}GG ÜB
ôD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Playables\PrefabControlPlayable.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
public

 

class

 !
PrefabControlPlayable

 &
:

' (
PlayableBehaviour

) :
{ 

GameObject 

m_Instance 
; 
private 
bool 
m_IsActiveCached %
;% &
public 
static 
ScriptPlayable $
<$ %!
PrefabControlPlayable% :
>: ;
Create< B
(B C
PlayableGraphC P
graphQ V
,V W

GameObjectX b
prefabGameObjectc s
,s t
	Transformu ~
parentTransform	 é
)
é è
{ 	
if 
( 
prefabGameObject  
==! #
null$ (
)( )
return 
ScriptPlayable %
<% &!
PrefabControlPlayable& ;
>; <
.< =
Null= A
;A B
var 
handle 
= 
ScriptPlayable '
<' (!
PrefabControlPlayable( =
>= >
.> ?
Create? E
(E F
graphF K
)K L
;L M
handle 
. 
GetBehaviour 
(  
)  !
.! "

Initialize" ,
(, -
prefabGameObject- =
,= >
parentTransform? N
)N O
;O P
return   
handle   
;   
}!! 	
public&& 

GameObject&& 
prefabInstance&& (
{'' 	
get(( 
{(( 
return(( 

m_Instance(( #
;((# $
}((% &
})) 	
public11 

GameObject11 

Initialize11 $
(11$ %

GameObject11% /
prefabGameObject110 @
,11@ A
	Transform11B K
parentTransform11L [
)11[ \
{22 	
if33 
(33 
prefabGameObject33  
==33! #
null33$ (
)33( )
throw44 
new44 !
ArgumentNullException44 /
(44/ 0
$str440 G
)44G H
;44H I
if66 
(66 

m_Instance66 
!=66 
null66 "
)66" #
{77 
Debug88 
.88 
LogWarningFormat88 &
(88& '
$str88' x
,88x y
prefabGameObject	88z ä
.
88ä ã
name
88ã è
,
88è ê

m_Instance
88ë õ
.
88õ ú
name
88ú †
)
88† °
;
88° ¢
}99 
else:: 
{;; 
if== 
(== 
!== 
Application==  
.==  !
	isPlaying==! *
)==* +
{>> 

m_Instance?? 
=??  
(??! "

GameObject??" ,
)??, -
UnityEditor??- 8
.??8 9
PrefabUtility??9 F
.??F G
InstantiatePrefab??G X
(??X Y
prefabGameObject??Y i
,??i j
parentTransform??k z
)??z {
;??{ |
UnityEditor@@ 
.@@  
PrefabUtility@@  -
.@@- .!
prefabInstanceUpdated@@. C
+=@@D F
OnPrefabUpdated@@G V
;@@V W
}AA 
elseBB 
{DD 

m_InstanceEE 
=EE  
ObjectEE! '
.EE' (
InstantiateEE( 3
(EE3 4
prefabGameObjectEE4 D
,EED E
parentTransformEEF U
,EEU V
falseEEW \
)EE\ ]
;EE] ^
}FF 

m_InstanceGG 
.GG 
nameGG 
=GG  !
prefabGameObjectGG" 2
.GG2 3
nameGG3 7
+GG8 9
$strGG: G
;GGG H

m_InstanceHH 
.HH 
	SetActiveHH $
(HH$ %
falseHH% *
)HH* +
;HH+ ,!
SetHideFlagsRecursiveII %
(II% &

m_InstanceII& 0
)II0 1
;II1 2
}JJ 
returnKK 

m_InstanceKK 
;KK 
}LL 	
publicRR 
overrideRR 
voidRR 
OnPlayableDestroyRR .
(RR. /
PlayableRR/ 7
playableRR8 @
)RR@ A
{SS 	
ifTT 
(TT 

m_InstanceTT 
)TT 
{UU 
ifVV 
(VV 
ApplicationVV 
.VV  
	isPlayingVV  )
)VV) *
ObjectWW 
.WW 
DestroyWW "
(WW" #

m_InstanceWW# -
)WW- .
;WW. /
elseXX 
ObjectYY 
.YY 
DestroyImmediateYY +
(YY+ ,

m_InstanceYY, 6
)YY6 7
;YY7 8
}ZZ 
UnityEditor]] 
.]] 
PrefabUtility]] %
.]]% &!
prefabInstanceUpdated]]& ;
-=]]< >
OnPrefabUpdated]]? N
;]]N O
}__ 	
publicff 
overrideff 
voidff 
OnBehaviourPlayff ,
(ff, -
Playableff- 5
playableff6 >
,ff> ?
	FrameDataff@ I
infoffJ N
)ffN O
{gg 	
ifhh 
(hh 

m_Instancehh 
==hh 
nullhh "
)hh" #
returnii 
;ii 

m_Instancekk 
.kk 
	SetActivekk  
(kk  !
truekk! %
)kk% &
;kk& '
m_IsActiveCachednn 
=nn 
truenn #
;nn# $
}pp 	
publicww 
overrideww 
voidww 
OnBehaviourPauseww -
(ww- .
Playableww. 6
playableww7 ?
,ww? @
	FrameDatawwA J
infowwK O
)wwO P
{xx 	
if{{ 
({{ 

m_Instance{{ 
!={{ 
null{{ "
&&{{# %
info{{& *
.{{* +
effectivePlayState{{+ =
=={{> @
	PlayState{{A J
.{{J K
Paused{{K Q
){{Q R
{|| 

m_Instance}} 
.}} 
	SetActive}} $
(}}$ %
false}}% *
)}}* +
;}}+ ,
m_IsActiveCached  
=! "
false# (
;( )
}
ÅÅ 
}
ÇÇ 	
void
ÖÖ 
OnPrefabUpdated
ÖÖ 
(
ÖÖ 

GameObject
ÖÖ '
go
ÖÖ( *
)
ÖÖ* +
{
ÜÜ 	
if
áá 
(
áá 
go
áá 
==
áá 

m_Instance
áá  
)
áá  !
{
àà #
SetHideFlagsRecursive
ââ %
(
ââ% &
go
ââ& (
)
ââ( )
;
ââ) *
go
ää 
.
ää 
	SetActive
ää 
(
ää 
m_IsActiveCached
ää -
)
ää- .
;
ää. /
}
ãã 
}
åå 	
static
êê 
void
êê #
SetHideFlagsRecursive
êê )
(
êê) *

GameObject
êê* 4

gameObject
êê5 ?
)
êê? @
{
ëë 	
if
íí 
(
íí 

gameObject
íí 
==
íí 
null
íí "
)
íí" #
return
ìì 
;
ìì 

gameObject
ïï 
.
ïï 
	hideFlags
ïï  
=
ïï! "
	HideFlags
ïï# ,
.
ïï, -
DontSaveInBuild
ïï- <
|
ïï= >
	HideFlags
ïï? H
.
ïïH I
DontSaveInEditor
ïïI Y
;
ïïY Z
if
ññ 
(
ññ 
!
ññ 
Application
ññ 
.
ññ 
	isPlaying
ññ &
)
ññ& '

gameObject
óó 
.
óó 
	hideFlags
óó $
|=
óó% '
	HideFlags
óó( 1
.
óó1 2
HideInHierarchy
óó2 A
;
óóA B
foreach
òò 
(
òò 
	Transform
òò 
child
òò $
in
òò% '

gameObject
òò( 2
.
òò2 3
	transform
òò3 <
)
òò< =
{
ôô #
SetHideFlagsRecursive
öö %
(
öö% &
child
öö& +
.
öö+ ,

gameObject
öö, 6
)
öö6 7
;
öö7 8
}
õõ 
}
úú 	
}
ùù 
}ûû éq
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Events\Signals\SignalReceiver.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
public 

class 
SignalReceiver 
:  !
MonoBehaviour" /
,/ 0!
INotificationReceiver1 F
{ 
[ 	
SerializeField	 
] 
EventKeyValue 
m_Events 
=  
new! $
EventKeyValue% 2
(2 3
)3 4
;4 5
public 
void 
OnNotify 
( 
Playable %
origin& ,
,, -
INotification. ;
notification< H
,H I
objectJ P
contextQ X
)X Y
{ 	
var 
signal 
= 
notification %
as& (
SignalEmitter) 6
;6 7
if 
( 
signal 
!= 
null 
&& !
signal" (
.( )
asset) .
!=/ 1
null2 6
)6 7
{ 

UnityEvent   
evt   
;   
if!! 
(!! 
m_Events!! 
.!! 
TryGetValue!! (
(!!( )
signal!!) /
.!!/ 0
asset!!0 5
,!!5 6
out!!7 :
evt!!; >
)!!> ?
&&!!@ B
evt!!C F
!=!!G I
null!!J N
)!!N O
{"" 
evt## 
.## 
Invoke## 
(## 
)##  
;##  !
}$$ 
}%% 
}&& 	
public// 
void// 
AddReaction// 
(//  
SignalAsset//  +
asset//, 1
,//1 2

UnityEvent//3 =
reaction//> F
)//F G
{00 	
if11 
(11 
asset11 
==11 
null11 
)11 
throw22 
new22 !
ArgumentNullException22 /
(22/ 0
$str220 7
)227 8
;228 9
if44 
(44 
m_Events44 
.44 
signals44  
.44  !
Contains44! )
(44) *
asset44* /
)44/ 0
)440 1
throw55 
new55 
ArgumentException55 +
(55+ ,
$str55, G
)55G H
;55H I
m_Events66 
.66 
Append66 
(66 
asset66 !
,66! "
reaction66# +
)66+ ,
;66, -
}77 	
public?? 
int?? 
AddEmptyReaction?? #
(??# $

UnityEvent??$ .
reaction??/ 7
)??7 8
{@@ 	
m_EventsAA 
.AA 
AppendAA 
(AA 
nullAA  
,AA  !
reactionAA" *
)AA* +
;AA+ ,
returnBB 
m_EventsBB 
.BB 
eventsBB "
.BB" #
CountBB# (
-BB) *
$numBB+ ,
;BB, -
}CC 	
publicII 
voidII 
RemoveII 
(II 
SignalAssetII &
assetII' ,
)II, -
{JJ 	
ifKK 
(KK 
!KK 
m_EventsKK 
.KK 
signalsKK !
.KK! "
ContainsKK" *
(KK* +
assetKK+ 0
)KK0 1
)KK1 2
{LL 
throwMM 
newMM 
ArgumentExceptionMM +
(MM+ ,
$strMM, c
)MMc d
;MMd e
}NN 
m_EventsPP 
.PP 
RemovePP 
(PP 
assetPP !
)PP! "
;PP" #
}QQ 	
publicWW 
IEnumerableWW 
<WW 
SignalAssetWW &
>WW& ' 
GetRegisteredSignalsWW( <
(WW< =
)WW= >
{XX 	
returnYY 
m_EventsYY 
.YY 
signalsYY #
;YY# $
}ZZ 	
publicaa 

UnityEventaa 
GetReactionaa %
(aa% &
SignalAssetaa& 1
keyaa2 5
)aa5 6
{bb 	

UnityEventcc 
retcc 
;cc 
ifdd 
(dd 
m_Eventsdd 
.dd 
TryGetValuedd $
(dd$ %
keydd% (
,dd( )
outdd* -
retdd. 1
)dd1 2
)dd2 3
{ee 
returnff 
retff 
;ff 
}gg 
returnii 
nullii 
;ii 
}jj 	
publicpp 
intpp 
Countpp 
(pp 
)pp 
{qq 	
returnrr 
m_Eventsrr 
.rr 
signalsrr #
.rr# $
Countrr$ )
;rr) *
}ss 	
public|| 
void|| 
ChangeSignalAtIndex|| '
(||' (
int||( +
idx||, /
,||/ 0
SignalAsset||1 <
newKey||= C
)||C D
{}} 	
if~~ 
(~~ 
idx~~ 
<~~ 
$num~~ 
||~~ 
idx~~ 
>~~  
m_Events~~! )
.~~) *
signals~~* 1
.~~1 2
Count~~2 7
-~~8 9
$num~~: ;
)~~; <
throw 
new $
IndexOutOfRangeException 2
(2 3
)3 4
;4 5
if
ÅÅ 
(
ÅÅ 
m_Events
ÅÅ 
.
ÅÅ 
signals
ÅÅ  
[
ÅÅ  !
idx
ÅÅ! $
]
ÅÅ$ %
==
ÅÅ& (
newKey
ÅÅ) /
)
ÅÅ/ 0
return
ÇÇ 
;
ÇÇ 
var
ÉÉ 
alreadyUsed
ÉÉ 
=
ÉÉ 
m_Events
ÉÉ &
.
ÉÉ& '
signals
ÉÉ' .
.
ÉÉ. /
Contains
ÉÉ/ 7
(
ÉÉ7 8
newKey
ÉÉ8 >
)
ÉÉ> ?
;
ÉÉ? @
if
ÑÑ 
(
ÑÑ 
newKey
ÑÑ 
==
ÑÑ 
null
ÑÑ 
||
ÑÑ !
m_Events
ÑÑ" *
.
ÑÑ* +
signals
ÑÑ+ 2
[
ÑÑ2 3
idx
ÑÑ3 6
]
ÑÑ6 7
==
ÑÑ9 ;
null
ÑÑ< @
||
ÑÑA C
!
ÑÑD E
alreadyUsed
ÑÑE P
)
ÑÑP Q
m_Events
ÖÖ 
.
ÖÖ 
signals
ÖÖ  
[
ÖÖ  !
idx
ÖÖ! $
]
ÖÖ$ %
=
ÖÖ& '
newKey
ÖÖ( .
;
ÖÖ. /
if
áá 
(
áá 
newKey
áá 
!=
áá 
null
áá 
&&
áá !
alreadyUsed
áá" -
)
áá- .
throw
àà 
new
àà 
ArgumentException
àà +
(
àà+ ,
$str
àà, G
)
ààG H
;
ààH I
}
ââ 	
public
èè 
void
èè 
RemoveAtIndex
èè !
(
èè! "
int
èè" %
idx
èè& )
)
èè) *
{
êê 	
if
ëë 
(
ëë 
idx
ëë 
<
ëë 
$num
ëë 
||
ëë 
idx
ëë 
>
ëë  
m_Events
ëë! )
.
ëë) *
signals
ëë* 1
.
ëë1 2
Count
ëë2 7
-
ëë8 9
$num
ëë: ;
)
ëë; <
throw
íí 
new
íí &
IndexOutOfRangeException
íí 2
(
íí2 3
)
íí3 4
;
íí4 5
m_Events
ìì 
.
ìì 
Remove
ìì 
(
ìì 
idx
ìì 
)
ìì  
;
ìì  !
}
îî 	
public
úú 
void
úú #
ChangeReactionAtIndex
úú )
(
úú) *
int
úú* -
idx
úú. 1
,
úú1 2

UnityEvent
úú3 =
reaction
úú> F
)
úúF G
{
ùù 	
if
ûû 
(
ûû 
idx
ûû 
<
ûû 
$num
ûû 
||
ûû 
idx
ûû 
>
ûû  
m_Events
ûû! )
.
ûû) *
events
ûû* 0
.
ûû0 1
Count
ûû1 6
-
ûû7 8
$num
ûû9 :
)
ûû: ;
throw
üü 
new
üü &
IndexOutOfRangeException
üü 2
(
üü2 3
)
üü3 4
;
üü4 5
m_Events
°° 
.
°° 
events
°° 
[
°° 
idx
°° 
]
°°  
=
°°! "
reaction
°°# +
;
°°+ ,
}
¢¢ 	
public
©© 

UnityEvent
©©  
GetReactionAtIndex
©© ,
(
©©, -
int
©©- 0
idx
©©1 4
)
©©4 5
{
™™ 	
if
´´ 
(
´´ 
idx
´´ 
<
´´ 
$num
´´ 
||
´´ 
idx
´´ 
>
´´  
m_Events
´´! )
.
´´) *
events
´´* 0
.
´´0 1
Count
´´1 6
-
´´7 8
$num
´´9 :
)
´´: ;
throw
¨¨ 
new
¨¨ &
IndexOutOfRangeException
¨¨ 2
(
¨¨2 3
)
¨¨3 4
;
¨¨4 5
return
≠≠ 
m_Events
≠≠ 
.
≠≠ 
events
≠≠ "
[
≠≠" #
idx
≠≠# &
]
≠≠& '
;
≠≠' (
}
ÆÆ 	
public
µµ 
SignalAsset
µµ #
GetSignalAssetAtIndex
µµ 0
(
µµ0 1
int
µµ1 4
idx
µµ5 8
)
µµ8 9
{
∂∂ 	
if
∑∑ 
(
∑∑ 
idx
∑∑ 
<
∑∑ 
$num
∑∑ 
||
∑∑ 
idx
∑∑ 
>
∑∑  
m_Events
∑∑! )
.
∑∑) *
signals
∑∑* 1
.
∑∑1 2
Count
∑∑2 7
-
∑∑8 9
$num
∑∑: ;
)
∑∑; <
throw
∏∏ 
new
∏∏ &
IndexOutOfRangeException
∏∏ 2
(
∏∏2 3
)
∏∏3 4
;
∏∏4 5
return
ππ 
m_Events
ππ 
.
ππ 
signals
ππ #
[
ππ# $
idx
ππ$ '
]
ππ' (
;
ππ( )
}
∫∫ 	
private
ΩΩ 
void
ΩΩ 
OnEnable
ΩΩ 
(
ΩΩ 
)
ΩΩ 
{
ææ 	
}
øø 	
[
¡¡ 	
Serializable
¡¡	 
]
¡¡ 
class
¬¬ 
EventKeyValue
¬¬ 
{
√√ 	
[
ƒƒ 
SerializeField
ƒƒ 
]
ƒƒ 
List
≈≈ 
<
≈≈ 
SignalAsset
≈≈ 
>
≈≈ 
	m_Signals
≈≈ '
=
≈≈( )
new
≈≈* -
List
≈≈. 2
<
≈≈2 3
SignalAsset
≈≈3 >
>
≈≈> ?
(
≈≈? @
)
≈≈@ A
;
≈≈A B
[
«« 
SerializeField
«« 
,
«« %
CustomSignalEventDrawer
«« 4
]
««4 5
List
»» 
<
»» 

UnityEvent
»» 
>
»» 
m_Events
»» %
=
»»& '
new
»»( +
List
»», 0
<
»»0 1

UnityEvent
»»1 ;
>
»»; <
(
»»< =
)
»»= >
;
»»> ?
public
   
bool
   
TryGetValue
   #
(
  # $
SignalAsset
  $ /
key
  0 3
,
  3 4
out
  5 8

UnityEvent
  9 C
value
  D I
)
  I J
{
ÀÀ 
var
ÃÃ 
index
ÃÃ 
=
ÃÃ 
	m_Signals
ÃÃ %
.
ÃÃ% &
IndexOf
ÃÃ& -
(
ÃÃ- .
key
ÃÃ. 1
)
ÃÃ1 2
;
ÃÃ2 3
if
ÕÕ 
(
ÕÕ 
index
ÕÕ 
!=
ÕÕ 
-
ÕÕ 
$num
ÕÕ 
)
ÕÕ  
{
ŒŒ 
value
œœ 
=
œœ 
m_Events
œœ $
[
œœ$ %
index
œœ% *
]
œœ* +
;
œœ+ ,
return
–– 
true
–– 
;
––  
}
—— 
value
”” 
=
”” 
null
”” 
;
”” 
return
‘‘ 
false
‘‘ 
;
‘‘ 
}
’’ 
public
◊◊ 
void
◊◊ 
Append
◊◊ 
(
◊◊ 
SignalAsset
◊◊ *
key
◊◊+ .
,
◊◊. /

UnityEvent
◊◊0 :
value
◊◊; @
)
◊◊@ A
{
ÿÿ 
	m_Signals
ŸŸ 
.
ŸŸ 
Add
ŸŸ 
(
ŸŸ 
key
ŸŸ !
)
ŸŸ! "
;
ŸŸ" #
m_Events
⁄⁄ 
.
⁄⁄ 
Add
⁄⁄ 
(
⁄⁄ 
value
⁄⁄ "
)
⁄⁄" #
;
⁄⁄# $
}
€€ 
public
›› 
void
›› 
Remove
›› 
(
›› 
int
›› "
idx
››# &
)
››& '
{
ﬁﬁ 
if
ﬂﬂ 
(
ﬂﬂ 
idx
ﬂﬂ 
!=
ﬂﬂ 
-
ﬂﬂ 
$num
ﬂﬂ 
)
ﬂﬂ 
{
‡‡ 
	m_Signals
·· 
.
·· 
RemoveAt
·· &
(
··& '
idx
··' *
)
··* +
;
··+ ,
m_Events
‚‚ 
.
‚‚ 
RemoveAt
‚‚ %
(
‚‚% &
idx
‚‚& )
)
‚‚) *
;
‚‚* +
}
„„ 
}
‰‰ 
public
ÊÊ 
void
ÊÊ 
Remove
ÊÊ 
(
ÊÊ 
SignalAsset
ÊÊ *
key
ÊÊ+ .
)
ÊÊ. /
{
ÁÁ 
var
ËË 
idx
ËË 
=
ËË 
	m_Signals
ËË #
.
ËË# $
IndexOf
ËË$ +
(
ËË+ ,
key
ËË, /
)
ËË/ 0
;
ËË0 1
if
ÈÈ 
(
ÈÈ 
idx
ÈÈ 
!=
ÈÈ 
-
ÈÈ 
$num
ÈÈ 
)
ÈÈ 
{
ÍÍ 
	m_Signals
ÎÎ 
.
ÎÎ 
RemoveAt
ÎÎ &
(
ÎÎ& '
idx
ÎÎ' *
)
ÎÎ* +
;
ÎÎ+ ,
m_Events
ÏÏ 
.
ÏÏ 
RemoveAt
ÏÏ %
(
ÏÏ% &
idx
ÏÏ& )
)
ÏÏ) *
;
ÏÏ* +
}
ÌÌ 
}
ÓÓ 
public
 
List
 
<
 
SignalAsset
 #
>
# $
signals
% ,
{
ÒÒ 
get
ÚÚ 
{
ÚÚ 
return
ÚÚ 
	m_Signals
ÚÚ &
;
ÚÚ& '
}
ÚÚ( )
}
ÛÛ 
public
ıı 
List
ıı 
<
ıı 

UnityEvent
ıı "
>
ıı" #
events
ıı$ *
{
ˆˆ 
get
˜˜ 
{
˜˜ 
return
˜˜ 
m_Events
˜˜ %
;
˜˜% &
}
˜˜' (
}
¯¯ 
}
˘˘ 	
}
˙˙ 
}˚˚ àó
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Control\ControlPlayableAsset.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[

 
Serializable

 
]

 
[ 

NotKeyable 
] 
public 

class  
ControlPlayableAsset %
:& '
PlayableAsset( 5
,5 6
IPropertyPreview7 G
,G H
ITimelineClipAssetI [
{ 
const 
int 
k_MaxRandInt 
=  
$num! &
;& '
static 
readonly 
List 
< 
PlayableDirector -
>- . 
k_EmptyDirectorsList/ C
=D E
newF I
ListJ N
<N O
PlayableDirectorO _
>_ `
(` a
$numa b
)b c
;c d
static 
readonly 
List 
< 
ParticleSystem +
>+ , 
k_EmptyParticlesList- A
=B C
newD G
ListH L
<L M
ParticleSystemM [
>[ \
(\ ]
$num] ^
)^ _
;_ `
[ 	
SerializeField	 
] 
public 
ExposedReference  0
<0 1

GameObject1 ;
>; <
sourceGameObject= M
;M N
[ 	
SerializeField	 
] 
public 

GameObject  *
prefabGameObject+ ;
;; <
[ 	
SerializeField	 
] 
public 
bool  $
updateParticle% 3
=4 5
true6 :
;: ;
['' 	
SerializeField''	 
]'' 
public'' 
uint''  $
particleRandomSeed''% 7
;''7 8
[,, 	
SerializeField,,	 
],, 
public,, 
bool,,  $
updateDirector,,% 3
=,,4 5
true,,6 :
;,,: ;
[11 	
SerializeField11	 
]11 
public11 
bool11  $
updateITimeControl11% 7
=118 9
true11: >
;11> ?
[66 	
SerializeField66	 
]66 
public66 
bool66  $
searchHierarchy66% 4
=665 6
false667 <
;66< =
[;; 	
SerializeField;;	 
];; 
public;; 
bool;;  $
active;;% +
=;;, -
true;;. 2
;;;2 3
[@@ 	
SerializeField@@	 
]@@ 
public@@ %
ActivationControlPlayable@@  9
.@@9 :
PostPlaybackState@@: K
postPlayback@@L X
=@@Y Z%
ActivationControlPlayable@@[ t
.@@t u
PostPlaybackState	@@u Ü
.
@@Ü á
Revert
@@á ç
;
@@ç é
PlayableAssetBB "
m_ControlDirectorAssetBB ,
;BB, -
doubleCC 

m_DurationCC 
=CC 
PlayableBindingCC +
.CC+ ,
DefaultDurationCC, ;
;CC; <
boolDD 
m_SupportLoopDD 
;DD 
privateFF 
staticFF 
HashSetFF 
<FF 
PlayableDirectorFF /
>FF/ 0 
s_ProcessedDirectorsFF1 E
=FFF G
newFFH K
HashSetFFL S
<FFS T
PlayableDirectorFFT d
>FFd e
(FFe f
)FFf g
;FFg h
privateGG 
staticGG 
HashSetGG 
<GG 

GameObjectGG )
>GG) *
s_CreatedPrefabsGG+ ;
=GG< =
newGG> A
HashSetGGB I
<GGI J

GameObjectGGJ T
>GGT U
(GGU V
)GGV W
;GGW X
internalJJ 
boolJJ  
controllingDirectorsJJ *
{JJ+ ,
getJJ- 0
;JJ0 1
privateJJ2 9
setJJ: =
;JJ= >
}JJ? @
internalKK 
boolKK  
controllingParticlesKK *
{KK+ ,
getKK- 0
;KK0 1
privateKK2 9
setKK: =
;KK= >
}KK? @
publicPP 
voidPP 
OnEnablePP 
(PP 
)PP 
{QQ 	
ifSS 
(SS 
particleRandomSeedSS "
==SS# %
$numSS& '
)SS' (
particleRandomSeedTT "
=TT# $
(TT% &
uintTT& *
)TT* +
RandomTT+ 1
.TT1 2
RangeTT2 7
(TT7 8
$numTT8 9
,TT9 :
k_MaxRandIntTT; G
)TTG H
;TTH I
}UU 	
publicZZ 
overrideZZ 
doubleZZ 
durationZZ '
{ZZ( )
getZZ* -
{ZZ. /
returnZZ0 6

m_DurationZZ7 A
;ZZA B
}ZZC D
}ZZE F
public__ 
ClipCaps__ 
clipCaps__  
{`` 	
getaa 
{aa 
returnaa 
ClipCapsaa !
.aa! "
ClipInaa" (
|aa) *
ClipCapsaa+ 3
.aa3 4
SpeedMultiplieraa4 C
|aaD E
(aaF G
m_SupportLoopaaG T
?aaU V
ClipCapsaaW _
.aa_ `
Loopingaa` g
:aah i
ClipCapsaaj r
.aar s
Noneaas w
)aaw x
;aax y
}aaz {
}bb 	
publicjj 
overridejj 
Playablejj  
CreatePlayablejj! /
(jj/ 0
PlayableGraphjj0 =
graphjj> C
,jjC D

GameObjectjjE O
gojjP R
)jjR S
{kk 	
ifmm 
(mm 
prefabGameObjectmm  
!=mm! #
nullmm$ (
)mm( )
{nn 
ifoo 
(oo 
s_CreatedPrefabsoo $
.oo$ %
Containsoo% -
(oo- .
prefabGameObjectoo. >
)oo> ?
)oo? @
{pp 
Debugqq 
.qq 
LogWarningFormatqq *
(qq* +
$str	qq+ ò
,
qqò ô
name
qqö û
)
qqû ü
;
qqü †
returnrr 
Playablerr #
.rr# $
Createrr$ *
(rr* +
graphrr+ 0
)rr0 1
;rr1 2
}ss 
s_CreatedPrefabstt  
.tt  !
Addtt! $
(tt$ %
prefabGameObjecttt% 5
)tt5 6
;tt6 7
}uu 
Playableww 
rootww 
=ww 
Playableww $
.ww$ %
Nullww% )
;ww) *
varxx 
	playablesxx 
=xx 
newxx 
Listxx  $
<xx$ %
Playablexx% -
>xx- .
(xx. /
)xx/ 0
;xx0 1

GameObjectzz 
sourceObjectzz #
=zz$ %
sourceGameObjectzz& 6
.zz6 7
Resolvezz7 >
(zz> ?
graphzz? D
.zzD E
GetResolverzzE P
(zzP Q
)zzQ R
)zzR S
;zzS T
if{{ 
({{ 
prefabGameObject{{  
!={{! #
null{{$ (
){{( )
{|| 
	Transform}} 
parenTransform}} (
=}}) *
sourceObject}}+ 7
!=}}8 :
null}}; ?
?}}@ A
sourceObject}}B N
.}}N O
	transform}}O X
:}}Y Z
null}}[ _
;}}_ `
var~~ 
controlPlayable~~ #
=~~$ %!
PrefabControlPlayable~~& ;
.~~; <
Create~~< B
(~~B C
graph~~C H
,~~H I
prefabGameObject~~J Z
,~~Z [
parenTransform~~\ j
)~~j k
;~~k l
sourceObject
ÄÄ 
=
ÄÄ 
controlPlayable
ÄÄ .
.
ÄÄ. /
GetBehaviour
ÄÄ/ ;
(
ÄÄ; <
)
ÄÄ< =
.
ÄÄ= >
prefabInstance
ÄÄ> L
;
ÄÄL M
	playables
ÅÅ 
.
ÅÅ 
Add
ÅÅ 
(
ÅÅ 
controlPlayable
ÅÅ -
)
ÅÅ- .
;
ÅÅ. /
}
ÇÇ 

m_Duration
ÑÑ 
=
ÑÑ 
PlayableBinding
ÑÑ (
.
ÑÑ( )
DefaultDuration
ÑÑ) 8
;
ÑÑ8 9
m_SupportLoop
ÖÖ 
=
ÖÖ 
false
ÖÖ !
;
ÖÖ! ""
controllingParticles
áá  
=
áá! "
false
áá# (
;
áá( )"
controllingDirectors
àà  
=
àà! "
false
àà# (
;
àà( )
if
ää 
(
ää 
sourceObject
ää 
!=
ää 
null
ää  $
)
ää$ %
{
ãã 
var
åå 
	directors
åå 
=
åå 
updateDirector
åå  .
?
åå/ 0
GetComponent
åå1 =
<
åå= >
PlayableDirector
åå> N
>
ååN O
(
ååO P
sourceObject
ååP \
)
åå\ ]
:
åå^ _"
k_EmptyDirectorsList
åå` t
;
ååt u
var
çç 
particleSystems
çç #
=
çç$ %
updateParticle
çç& 4
?
çç5 6$
GetParticleSystemRoots
çç7 M
(
ççM N
sourceObject
ççN Z
)
ççZ [
:
çç\ ]"
k_EmptyParticlesList
çç^ r
;
ççr s'
UpdateDurationAndLoopFlag
ëë )
(
ëë) *
	directors
ëë* 3
,
ëë3 4
particleSystems
ëë5 D
)
ëëD E
;
ëëE F
var
ìì 
director
ìì 
=
ìì 
go
ìì !
.
ìì! "
GetComponent
ìì" .
<
ìì. /
PlayableDirector
ìì/ ?
>
ìì? @
(
ìì@ A
)
ììA B
;
ììB C
if
îî 
(
îî 
director
îî 
!=
îî 
null
îî  $
)
îî$ %$
m_ControlDirectorAsset
ïï *
=
ïï+ ,
director
ïï- 5
.
ïï5 6
playableAsset
ïï6 C
;
ïïC D
if
óó 
(
óó 
go
óó 
==
óó 
sourceObject
óó &
&&
óó' )
prefabGameObject
óó* :
==
óó; =
null
óó> B
)
óóB C
{
òò 
Debug
ôô 
.
ôô 
LogWarningFormat
ôô *
(
ôô* +
$strôô+ õ
,ôôõ ú
nameôôù °
)ôô° ¢
;ôô¢ £
active
öö 
=
öö 
false
öö "
;
öö" #
if
õõ 
(
õõ 
!
õõ 
searchHierarchy
õõ (
)
õõ( )
updateDirector
úú &
=
úú' (
false
úú) .
;
úú. /
}
ùù 
if
üü 
(
üü 
active
üü 
)
üü &
CreateActivationPlayable
†† ,
(
††, -
sourceObject
††- 9
,
††9 :
graph
††; @
,
††@ A
	playables
††B K
)
††K L
;
††L M
if
¢¢ 
(
¢¢ 
updateDirector
¢¢ "
)
¢¢" #/
!SearchHierarchyAndConnectDirector
££ 5
(
££5 6
	directors
££6 ?
,
££? @
graph
££A F
,
££F G
	playables
££H Q
,
££Q R
prefabGameObject
££S c
!=
££d f
null
££g k
)
££k l
;
££l m
if
•• 
(
•• 
updateParticle
•• "
)
••" #4
&SearchHiearchyAndConnectParticleSystem
¶¶ :
(
¶¶: ;
particleSystems
¶¶; J
,
¶¶J K
graph
¶¶L Q
,
¶¶Q R
	playables
¶¶S \
)
¶¶\ ]
;
¶¶] ^
if
®® 
(
®®  
updateITimeControl
®® &
)
®®& '9
+SearchHierarchyAndConnectControlableScripts
©© ?
(
©©? @#
GetControlableScripts
©©@ U
(
©©U V
sourceObject
©©V b
)
©©b c
,
©©c d
graph
©©e j
,
©©j k
	playables
©©l u
)
©©u v
;
©©v w
root
¨¨ 
=
¨¨ %
ConnectPlayablesToMixer
¨¨ .
(
¨¨. /
graph
¨¨/ 4
,
¨¨4 5
	playables
¨¨6 ?
)
¨¨? @
;
¨¨@ A
}
≠≠ 
if
ØØ 
(
ØØ 
prefabGameObject
ØØ  
!=
ØØ! #
null
ØØ$ (
)
ØØ( )
s_CreatedPrefabs
∞∞  
.
∞∞  !
Remove
∞∞! '
(
∞∞' (
prefabGameObject
∞∞( 8
)
∞∞8 9
;
∞∞9 :
if
≤≤ 
(
≤≤ 
!
≤≤ 
root
≤≤ 
.
≤≤ 
IsValid
≤≤ 
(
≤≤ 
)
≤≤ 
)
≤≤  
root
≥≥ 
=
≥≥ 
Playable
≥≥ 
.
≥≥  
Create
≥≥  &
(
≥≥& '
graph
≥≥' ,
)
≥≥, -
;
≥≥- .
return
µµ 
root
µµ 
;
µµ 
}
∂∂ 	
static
∏∏ 
Playable
∏∏ %
ConnectPlayablesToMixer
∏∏ /
(
∏∏/ 0
PlayableGraph
∏∏0 =
graph
∏∏> C
,
∏∏C D
List
∏∏E I
<
∏∏I J
Playable
∏∏J R
>
∏∏R S
	playables
∏∏T ]
)
∏∏] ^
{
ππ 	
var
∫∫ 
mixer
∫∫ 
=
∫∫ 
Playable
∫∫  
.
∫∫  !
Create
∫∫! '
(
∫∫' (
graph
∫∫( -
,
∫∫- .
	playables
∫∫/ 8
.
∫∫8 9
Count
∫∫9 >
)
∫∫> ?
;
∫∫? @
for
ºº 
(
ºº 
int
ºº 
i
ºº 
=
ºº 
$num
ºº 
;
ºº 
i
ºº 
!=
ºº  
	playables
ºº! *
.
ºº* +
Count
ºº+ 0
;
ºº0 1
++
ºº2 4
i
ºº4 5
)
ºº5 6
{
ΩΩ %
ConnectMixerAndPlayable
ææ '
(
ææ' (
graph
ææ( -
,
ææ- .
mixer
ææ/ 4
,
ææ4 5
	playables
ææ6 ?
[
ææ? @
i
ææ@ A
]
ææA B
,
ææB C
i
ææD E
)
ææE F
;
ææF G
}
øø 
mixer
¡¡ 
.
¡¡ !
SetPropagateSetTime
¡¡ %
(
¡¡% &
true
¡¡& *
)
¡¡* +
;
¡¡+ ,
return
√√ 
mixer
√√ 
;
√√ 
}
ƒƒ 	
void
∆∆ &
CreateActivationPlayable
∆∆ %
(
∆∆% &

GameObject
∆∆& 0
root
∆∆1 5
,
∆∆5 6
PlayableGraph
∆∆7 D
graph
∆∆E J
,
∆∆J K
List
«« 
<
«« 
Playable
«« 
>
«« 
outplayables
«« '
)
««' (
{
»» 	
var
…… 

activation
…… 
=
…… '
ActivationControlPlayable
…… 6
.
……6 7
Create
……7 =
(
……= >
graph
……> C
,
……C D
root
……E I
,
……I J
postPlayback
……K W
)
……W X
;
……X Y
if
   
(
   

activation
   
.
   
IsValid
   "
(
  " #
)
  # $
)
  $ %
outplayables
ÀÀ 
.
ÀÀ 
Add
ÀÀ  
(
ÀÀ  !

activation
ÀÀ! +
)
ÀÀ+ ,
;
ÀÀ, -
}
ÃÃ 	
void
ŒŒ 4
&SearchHiearchyAndConnectParticleSystem
ŒŒ 3
(
ŒŒ3 4
IEnumerable
ŒŒ4 ?
<
ŒŒ? @
ParticleSystem
ŒŒ@ N
>
ŒŒN O
particleSystems
ŒŒP _
,
ŒŒ_ `
PlayableGraph
ŒŒa n
graph
ŒŒo t
,
ŒŒt u
List
œœ 
<
œœ 
Playable
œœ 
>
œœ 
outplayables
œœ '
)
œœ' (
{
–– 	
foreach
—— 
(
—— 
var
—— 
particleSystem
—— '
in
——( *
particleSystems
——+ :
)
——: ;
{
““ 
if
”” 
(
”” 
particleSystem
”” "
!=
””# %
null
””& *
)
””* +
{
‘‘ "
controllingParticles
’’ (
=
’’) *
true
’’+ /
;
’’/ 0
outplayables
÷÷  
.
÷÷  !
Add
÷÷! $
(
÷÷$ %%
ParticleControlPlayable
÷÷% <
.
÷÷< =
Create
÷÷= C
(
÷÷C D
graph
÷÷D I
,
÷÷I J
particleSystem
÷÷K Y
,
÷÷Y Z 
particleRandomSeed
÷÷[ m
)
÷÷m n
)
÷÷n o
;
÷÷o p
}
◊◊ 
}
ÿÿ 
}
ŸŸ 	
void
€€ /
!SearchHierarchyAndConnectDirector
€€ .
(
€€. /
IEnumerable
€€/ :
<
€€: ;
PlayableDirector
€€; K
>
€€K L
	directors
€€M V
,
€€V W
PlayableGraph
€€X e
graph
€€f k
,
€€k l
List
‹‹ 
<
‹‹ 
Playable
‹‹ 
>
‹‹ 
outplayables
‹‹ '
,
‹‹' (
bool
‹‹) -#
disableSelfReferences
‹‹. C
)
‹‹C D
{
›› 	
foreach
ﬁﬁ 
(
ﬁﬁ 
var
ﬁﬁ 
director
ﬁﬁ !
in
ﬁﬁ" $
	directors
ﬁﬁ% .
)
ﬁﬁ. /
{
ﬂﬂ 
if
‡‡ 
(
‡‡ 
director
‡‡ 
!=
‡‡ 
null
‡‡  $
)
‡‡$ %
{
·· 
if
‚‚ 
(
‚‚ 
director
‚‚  
.
‚‚  !
playableAsset
‚‚! .
!=
‚‚/ 1$
m_ControlDirectorAsset
‚‚2 H
)
‚‚H I
{
„„ 
outplayables
‰‰ $
.
‰‰$ %
Add
‰‰% (
(
‰‰( )%
DirectorControlPlayable
‰‰) @
.
‰‰@ A
Create
‰‰A G
(
‰‰G H
graph
‰‰H M
,
‰‰M N
director
‰‰O W
)
‰‰W X
)
‰‰X Y
;
‰‰Y Z"
controllingDirectors
ÂÂ ,
=
ÂÂ- .
true
ÂÂ/ 3
;
ÂÂ3 4
}
ÊÊ 
else
ËË 
if
ËË 
(
ËË #
disableSelfReferences
ËË 2
)
ËË2 3
{
ÈÈ 
director
ÍÍ  
.
ÍÍ  !
enabled
ÍÍ! (
=
ÍÍ) *
false
ÍÍ+ 0
;
ÍÍ0 1
}
ÎÎ 
}
ÏÏ 
}
ÌÌ 
}
ÓÓ 	
static
 
void
 9
+SearchHierarchyAndConnectControlableScripts
 ?
(
? @
IEnumerable
@ K
<
K L
MonoBehaviour
L Y
>
Y Z 
controlableScripts
[ m
,
m n
PlayableGraph
o |
graph} Ç
,Ç É
ListÑ à
<à â
Playableâ ë
>ë í
outplayablesì ü
)ü †
{
ÒÒ 	
foreach
ÚÚ 
(
ÚÚ 
var
ÚÚ 
script
ÚÚ 
in
ÚÚ  " 
controlableScripts
ÚÚ# 5
)
ÚÚ5 6
{
ÛÛ 
outplayables
ÙÙ 
.
ÙÙ 
Add
ÙÙ  
(
ÙÙ  !!
TimeControlPlayable
ÙÙ! 4
.
ÙÙ4 5
Create
ÙÙ5 ;
(
ÙÙ; <
graph
ÙÙ< A
,
ÙÙA B
(
ÙÙC D
ITimeControl
ÙÙD P
)
ÙÙP Q
script
ÙÙQ W
)
ÙÙW X
)
ÙÙX Y
;
ÙÙY Z
}
ıı 
}
ˆˆ 	
static
¯¯ 
void
¯¯ %
ConnectMixerAndPlayable
¯¯ +
(
¯¯+ ,
PlayableGraph
¯¯, 9
graph
¯¯: ?
,
¯¯? @
Playable
¯¯A I
mixer
¯¯J O
,
¯¯O P
Playable
¯¯Q Y
playable
¯¯Z b
,
¯¯b c
int
˘˘ 
	portIndex
˘˘ 
)
˘˘ 
{
˙˙ 	
graph
˚˚ 
.
˚˚ 
Connect
˚˚ 
(
˚˚ 
playable
˚˚ "
,
˚˚" #
$num
˚˚$ %
,
˚˚% &
mixer
˚˚' ,
,
˚˚, -
	portIndex
˚˚. 7
)
˚˚7 8
;
˚˚8 9
mixer
¸¸ 
.
¸¸ 
SetInputWeight
¸¸  
(
¸¸  !
playable
¸¸! )
,
¸¸) *
$num
¸¸+ /
)
¸¸/ 0
;
¸¸0 1
}
˝˝ 	
internal
ˇˇ 
IList
ˇˇ 
<
ˇˇ 
T
ˇˇ 
>
ˇˇ 
GetComponent
ˇˇ &
<
ˇˇ& '
T
ˇˇ' (
>
ˇˇ( )
(
ˇˇ) *

GameObject
ˇˇ* 4

gameObject
ˇˇ5 ?
)
ˇˇ? @
{
ÄÄ 	
var
ÅÅ 

components
ÅÅ 
=
ÅÅ 
new
ÅÅ  
List
ÅÅ! %
<
ÅÅ% &
T
ÅÅ& '
>
ÅÅ' (
(
ÅÅ( )
)
ÅÅ) *
;
ÅÅ* +
if
ÇÇ 
(
ÇÇ 

gameObject
ÇÇ 
!=
ÇÇ 
null
ÇÇ "
)
ÇÇ" #
{
ÉÉ 
if
ÑÑ 
(
ÑÑ 
searchHierarchy
ÑÑ #
)
ÑÑ# $
{
ÖÖ 

gameObject
ÜÜ 
.
ÜÜ %
GetComponentsInChildren
ÜÜ 6
<
ÜÜ6 7
T
ÜÜ7 8
>
ÜÜ8 9
(
ÜÜ9 :
true
ÜÜ: >
,
ÜÜ> ?

components
ÜÜ@ J
)
ÜÜJ K
;
ÜÜK L
}
áá 
else
àà 
{
ââ 

gameObject
ää 
.
ää 
GetComponents
ää ,
<
ää, -
T
ää- .
>
ää. /
(
ää/ 0

components
ää0 :
)
ää: ;
;
ää; <
}
ãã 
}
åå 
return
çç 

components
çç 
;
çç 
}
éé 	
internal
êê 
static
êê 
IEnumerable
êê #
<
êê# $
MonoBehaviour
êê$ 1
>
êê1 2#
GetControlableScripts
êê3 H
(
êêH I

GameObject
êêI S
root
êêT X
)
êêX Y
{
ëë 	
if
íí 
(
íí 
root
íí 
==
íí 
null
íí 
)
íí 
yield
ìì 
break
ìì 
;
ìì 
foreach
ïï 
(
ïï 
var
ïï 
script
ïï 
in
ïï  "
root
ïï# '
.
ïï' (%
GetComponentsInChildren
ïï( ?
<
ïï? @
MonoBehaviour
ïï@ M
>
ïïM N
(
ïïN O
)
ïïO P
)
ïïP Q
{
ññ 
if
óó 
(
óó 
script
óó 
is
óó 
ITimeControl
óó *
)
óó* +
yield
òò 
return
òò  
script
òò! '
;
òò' (
}
ôô 
}
öö 	
internal
úú 
void
úú '
UpdateDurationAndLoopFlag
úú /
(
úú/ 0
IList
úú0 5
<
úú5 6
PlayableDirector
úú6 F
>
úúF G
	directors
úúH Q
,
úúQ R
IList
úúS X
<
úúX Y
ParticleSystem
úúY g
>
úúg h
particleSystems
úúi x
)
úúx y
{
ùù 	
if
ûû 
(
ûû 
	directors
ûû 
.
ûû 
Count
ûû 
==
ûû  "
$num
ûû# $
&&
ûû% '
particleSystems
ûû( 7
.
ûû7 8
Count
ûû8 =
==
ûû> @
$num
ûûA B
)
ûûB C
return
üü 
;
üü 
const
°° 
double
°° 
invalidDuration
°° (
=
°°) *
double
°°+ 1
.
°°1 2
NegativeInfinity
°°2 B
;
°°B C
var
££ 
maxDuration
££ 
=
££ 
invalidDuration
££ -
;
££- .
var
§§ 
supportsLoop
§§ 
=
§§ 
false
§§ $
;
§§$ %
foreach
¶¶ 
(
¶¶ 
var
¶¶ 
director
¶¶ !
in
¶¶" $
	directors
¶¶% .
)
¶¶. /
{
ßß 
if
®® 
(
®® 
director
®® 
.
®® 
playableAsset
®® *
!=
®®+ -
null
®®. 2
)
®®2 3
{
©© 
var
™™ 
assetDuration
™™ %
=
™™& '
director
™™( 0
.
™™0 1
playableAsset
™™1 >
.
™™> ?
duration
™™? G
;
™™G H
if
¨¨ 
(
¨¨ 
director
¨¨  
.
¨¨  !
playableAsset
¨¨! .
is
¨¨/ 1
TimelineAsset
¨¨2 ?
&&
¨¨@ B
assetDuration
¨¨C P
>
¨¨Q R
$num
¨¨S V
)
¨¨V W
assetDuration
ÆÆ %
=
ÆÆ& '
(
ÆÆ( )
double
ÆÆ) /
)
ÆÆ/ 0
(
ÆÆ0 1
(
ÆÆ1 2
DiscreteTime
ÆÆ2 >
)
ÆÆ> ?
assetDuration
ÆÆ? L
)
ÆÆL M
.
ÆÆM N
OneTickAfter
ÆÆN Z
(
ÆÆZ [
)
ÆÆ[ \
;
ÆÆ\ ]
maxDuration
∞∞ 
=
∞∞  !
Math
∞∞" &
.
∞∞& '
Max
∞∞' *
(
∞∞* +
maxDuration
∞∞+ 6
,
∞∞6 7
assetDuration
∞∞8 E
)
∞∞E F
;
∞∞F G
supportsLoop
±±  
=
±±! "
supportsLoop
±±# /
||
±±0 2
director
±±3 ;
.
±±; <
extrapolationMode
±±< M
==
±±N P
DirectorWrapMode
±±Q a
.
±±a b
Loop
±±b f
;
±±f g
}
≤≤ 
}
≥≥ 
foreach
µµ 
(
µµ 
var
µµ 
particleSystem
µµ '
in
µµ( *
particleSystems
µµ+ :
)
µµ: ;
{
∂∂ 
maxDuration
∑∑ 
=
∑∑ 
Math
∑∑ "
.
∑∑" #
Max
∑∑# &
(
∑∑& '
maxDuration
∑∑' 2
,
∑∑2 3
particleSystem
∑∑4 B
.
∑∑B C
main
∑∑C G
.
∑∑G H
duration
∑∑H P
)
∑∑P Q
;
∑∑Q R
supportsLoop
∏∏ 
=
∏∏ 
supportsLoop
∏∏ +
||
∏∏, .
particleSystem
∏∏/ =
.
∏∏= >
main
∏∏> B
.
∏∏B C
loop
∏∏C G
;
∏∏G H
}
ππ 

m_Duration
ªª 
=
ªª 
double
ªª 
.
ªª   
IsNegativeInfinity
ªª  2
(
ªª2 3
maxDuration
ªª3 >
)
ªª> ?
?
ªª@ A
PlayableBinding
ªªB Q
.
ªªQ R
DefaultDuration
ªªR a
:
ªªb c
maxDuration
ªªd o
;
ªªo p
m_SupportLoop
ºº 
=
ºº 
supportsLoop
ºº (
;
ºº( )
}
ΩΩ 	
IList
øø 
<
øø 
ParticleSystem
øø 
>
øø $
GetParticleSystemRoots
øø 4
(
øø4 5

GameObject
øø5 ?
go
øø@ B
)
øøB C
{
¿¿ 	
if
¡¡ 
(
¡¡ 
searchHierarchy
¡¡ 
)
¡¡  
{
¬¬ 
var
ƒƒ 
roots
ƒƒ 
=
ƒƒ 
new
ƒƒ 
List
ƒƒ  $
<
ƒƒ$ %
ParticleSystem
ƒƒ% 3
>
ƒƒ3 4
(
ƒƒ4 5
)
ƒƒ5 6
;
ƒƒ6 7$
GetParticleSystemRoots
≈≈ &
(
≈≈& '
go
≈≈' )
.
≈≈) *
	transform
≈≈* 3
,
≈≈3 4
roots
≈≈5 :
)
≈≈: ;
;
≈≈; <
return
∆∆ 
roots
∆∆ 
;
∆∆ 
}
«« 
return
»» 
GetComponent
»» 
<
»»  
ParticleSystem
»»  .
>
»». /
(
»»/ 0
go
»»0 2
)
»»2 3
;
»»3 4
}
…… 	
static
ÀÀ 
void
ÀÀ $
GetParticleSystemRoots
ÀÀ *
(
ÀÀ* +
	Transform
ÀÀ+ 4
t
ÀÀ5 6
,
ÀÀ6 7
ICollection
ÀÀ8 C
<
ÀÀC D
ParticleSystem
ÀÀD R
>
ÀÀR S
roots
ÀÀT Y
)
ÀÀY Z
{
ÃÃ 	
var
ÕÕ 
ps
ÕÕ 
=
ÕÕ 
t
ÕÕ 
.
ÕÕ 
GetComponent
ÕÕ #
<
ÕÕ# $
ParticleSystem
ÕÕ$ 2
>
ÕÕ2 3
(
ÕÕ3 4
)
ÕÕ4 5
;
ÕÕ5 6
if
ŒŒ 
(
ŒŒ 
ps
ŒŒ 
!=
ŒŒ 
null
ŒŒ 
)
ŒŒ 
{
œœ 
roots
—— 
.
—— 
Add
—— 
(
—— 
ps
—— 
)
—— 
;
—— 
return
““ 
;
““ 
}
”” 
for
’’ 
(
’’ 
int
’’ 
i
’’ 
=
’’ 
$num
’’ 
;
’’ 
i
’’ 
<
’’ 
t
’’  !
.
’’! "

childCount
’’" ,
;
’’, -
++
’’. 0
i
’’0 1
)
’’1 2
{
÷÷ $
GetParticleSystemRoots
◊◊ &
(
◊◊& '
t
◊◊' (
.
◊◊( )
GetChild
◊◊) 1
(
◊◊1 2
i
◊◊2 3
)
◊◊3 4
,
◊◊4 5
roots
◊◊6 ;
)
◊◊; <
;
◊◊< =
}
ÿÿ 
}
ŸŸ 	
public
‹‹ 
void
‹‹ 
GatherProperties
‹‹ $
(
‹‹$ %
PlayableDirector
‹‹% 5
director
‹‹6 >
,
‹‹> ? 
IPropertyCollector
‹‹@ R
driver
‹‹S Y
)
‹‹Y Z
{
›› 	
if
ﬂﬂ 
(
ﬂﬂ 
director
ﬂﬂ 
==
ﬂﬂ 
null
ﬂﬂ  
)
ﬂﬂ  !
return
‡‡ 
;
‡‡ 
if
„„ 
(
„„ "
s_ProcessedDirectors
„„ $
.
„„$ %
Contains
„„% -
(
„„- .
director
„„. 6
)
„„6 7
)
„„7 8
return
‰‰ 
;
‰‰ "
s_ProcessedDirectors
ÂÂ  
.
ÂÂ  !
Add
ÂÂ! $
(
ÂÂ$ %
director
ÂÂ% -
)
ÂÂ- .
;
ÂÂ. /
var
ÁÁ 

gameObject
ÁÁ 
=
ÁÁ 
sourceGameObject
ÁÁ -
.
ÁÁ- .
Resolve
ÁÁ. 5
(
ÁÁ5 6
director
ÁÁ6 >
)
ÁÁ> ?
;
ÁÁ? @
if
ËË 
(
ËË 

gameObject
ËË 
!=
ËË 
null
ËË "
)
ËË" #
{
ÈÈ 
if
ÍÍ 
(
ÍÍ 
updateParticle
ÍÍ "
)
ÍÍ" #
PreviewParticles
ÎÎ $
(
ÎÎ$ %
driver
ÎÎ% +
,
ÎÎ+ ,

gameObject
ÎÎ- 7
.
ÎÎ7 8%
GetComponentsInChildren
ÎÎ8 O
<
ÎÎO P
ParticleSystem
ÎÎP ^
>
ÎÎ^ _
(
ÎÎ_ `
true
ÎÎ` d
)
ÎÎd e
)
ÎÎe f
;
ÎÎf g
if
ÌÌ 
(
ÌÌ 
active
ÌÌ 
)
ÌÌ 
PreviewActivation
ÓÓ %
(
ÓÓ% &
driver
ÓÓ& ,
,
ÓÓ, -
new
ÓÓ. 1
[
ÓÓ1 2
]
ÓÓ2 3
{
ÓÓ4 5

gameObject
ÓÓ6 @
}
ÓÓA B
)
ÓÓB C
;
ÓÓC D
if
 
(
  
updateITimeControl
 &
)
& ' 
PreviewTimeControl
ÒÒ &
(
ÒÒ& '
driver
ÒÒ' -
,
ÒÒ- .
director
ÒÒ/ 7
,
ÒÒ7 8#
GetControlableScripts
ÒÒ9 N
(
ÒÒN O

gameObject
ÒÒO Y
)
ÒÒY Z
)
ÒÒZ [
;
ÒÒ[ \
if
ÛÛ 
(
ÛÛ 
updateDirector
ÛÛ "
)
ÛÛ" #
PreviewDirectors
ÙÙ $
(
ÙÙ$ %
driver
ÙÙ% +
,
ÙÙ+ ,
GetComponent
ÙÙ- 9
<
ÙÙ9 :
PlayableDirector
ÙÙ: J
>
ÙÙJ K
(
ÙÙK L

gameObject
ÙÙL V
)
ÙÙV W
)
ÙÙW X
;
ÙÙX Y
}
ıı "
s_ProcessedDirectors
ˆˆ  
.
ˆˆ  !
Remove
ˆˆ! '
(
ˆˆ' (
director
ˆˆ( 0
)
ˆˆ0 1
;
ˆˆ1 2
}
˜˜ 	
internal
˘˘ 
static
˘˘ 
void
˘˘ 
PreviewParticles
˘˘ -
(
˘˘- . 
IPropertyCollector
˘˘. @
driver
˘˘A G
,
˘˘G H
IEnumerable
˘˘I T
<
˘˘T U
ParticleSystem
˘˘U c
>
˘˘c d
	particles
˘˘e n
)
˘˘n o
{
˙˙ 	
foreach
˚˚ 
(
˚˚ 
var
˚˚ 
ps
˚˚ 
in
˚˚ 
	particles
˚˚ (
)
˚˚( )
{
¸¸ 
driver
˝˝ 
.
˝˝ 
AddFromName
˝˝ "
<
˝˝" #
ParticleSystem
˝˝# 1
>
˝˝1 2
(
˝˝2 3
ps
˝˝3 5
.
˝˝5 6

gameObject
˝˝6 @
,
˝˝@ A
$str
˝˝B N
)
˝˝N O
;
˝˝O P
driver
˛˛ 
.
˛˛ 
AddFromName
˛˛ "
<
˛˛" #
ParticleSystem
˛˛# 1
>
˛˛1 2
(
˛˛2 3
ps
˛˛3 5
.
˛˛5 6

gameObject
˛˛6 @
,
˛˛@ A
$str
˛˛B R
)
˛˛R S
;
˛˛S T
}
ˇˇ 
}
ÄÄ 	
internal
ÇÇ 
static
ÇÇ 
void
ÇÇ 
PreviewActivation
ÇÇ .
(
ÇÇ. / 
IPropertyCollector
ÇÇ/ A
driver
ÇÇB H
,
ÇÇH I
IEnumerable
ÇÇJ U
<
ÇÇU V

GameObject
ÇÇV `
>
ÇÇ` a
objects
ÇÇb i
)
ÇÇi j
{
ÉÉ 	
foreach
ÑÑ 
(
ÑÑ 
var
ÑÑ 

gameObject
ÑÑ #
in
ÑÑ$ &
objects
ÑÑ' .
)
ÑÑ. /
driver
ÖÖ 
.
ÖÖ 
AddFromName
ÖÖ "
(
ÖÖ" #

gameObject
ÖÖ# -
,
ÖÖ- .
$str
ÖÖ/ ;
)
ÖÖ; <
;
ÖÖ< =
}
ÜÜ 	
internal
àà 
static
àà 
void
àà  
PreviewTimeControl
àà /
(
àà/ 0 
IPropertyCollector
àà0 B
driver
ààC I
,
ààI J
PlayableDirector
ààK [
director
àà\ d
,
ààd e
IEnumerable
ààf q
<
ààq r
MonoBehaviour
ààr 
>àà Ä
scriptsààÅ à
)ààà â
{
ââ 	
foreach
ää 
(
ää 
var
ää 
script
ää 
in
ää  "
scripts
ää# *
)
ää* +
{
ãã 
var
åå 
propertyPreview
åå #
=
åå$ %
script
åå& ,
as
åå- /
IPropertyPreview
åå0 @
;
åå@ A
if
çç 
(
çç 
propertyPreview
çç #
!=
çç$ &
null
çç' +
)
çç+ ,
propertyPreview
éé #
.
éé# $
GatherProperties
éé$ 4
(
éé4 5
director
éé5 =
,
éé= >
driver
éé? E
)
ééE F
;
ééF G
else
èè 
driver
êê 
.
êê 
AddFromComponent
êê +
(
êê+ ,
script
êê, 2
.
êê2 3

gameObject
êê3 =
,
êê= >
script
êê? E
)
êêE F
;
êêF G
}
ëë 
}
íí 	
internal
îî 
static
îî 
void
îî 
PreviewDirectors
îî -
(
îî- . 
IPropertyCollector
îî. @
driver
îîA G
,
îîG H
IEnumerable
îîI T
<
îîT U
PlayableDirector
îîU e
>
îîe f
	directors
îîg p
)
îîp q
{
ïï 	
foreach
ññ 
(
ññ 
var
ññ 
childDirector
ññ &
in
ññ' )
	directors
ññ* 3
)
ññ3 4
{
óó 
if
òò 
(
òò 
childDirector
òò !
==
òò" $
null
òò% )
)
òò) *
continue
ôô 
;
ôô 
var
õõ 
timeline
õõ 
=
õõ 
childDirector
õõ ,
.
õõ, -
playableAsset
õõ- :
as
õõ; =
TimelineAsset
õõ> K
;
õõK L
if
úú 
(
úú 
timeline
úú 
==
úú 
null
úú  $
)
úú$ %
continue
ùù 
;
ùù 
timeline
üü 
.
üü 
GatherProperties
üü )
(
üü) *
childDirector
üü* 7
,
üü7 8
driver
üü9 ?
)
üü? @
;
üü@ A
}
†† 
}
°° 	
}
¢¢ 
}££ ”
ÑD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\ILayerable.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
public		 

	interface		 

ILayerable		 
{

 
Playable 
CreateLayerMixer !
(! "
PlayableGraph" /
graph0 5
,5 6

GameObject7 A
goB D
,D E
intF I

inputCountJ T
)T U
;U V
} 
} üê
ÜD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\TimelineClip.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
public 

	interface 
ITimelineClipAsset '
{ 
ClipCaps 
clipCaps 
{ 
get 
;  
}! "
} 
[ 
Serializable 
] 
public 

partial 
class 
TimelineClip %
:& '
ICurvesOwner( 4
,4 5*
ISerializationCallbackReceiver6 T
{ 
public 
static 
readonly 
ClipCaps '
kDefaultClipCaps( 8
=9 :
ClipCaps; C
.C D
BlendingD L
;L M
public!! 
static!! 
readonly!! 
float!! $)
kDefaultClipDurationInSeconds!!% B
=!!C D
$num!!E F
;!!F G
public&& 
static&& 
readonly&& 
double&& %
kTimeScaleMin&&& 3
=&&4 5
$num&&6 9
/&&: ;
$num&&< @
;&&@ A
public++ 
static++ 
readonly++ 
double++ %
kTimeScaleMax++& 3
=++4 5
$num++6 :
;++: ;
internal-- 
static-- 
readonly--  
string--! '
kDefaultCurvesName--( :
=--; <
$str--= N
;--N O
internal// 
static// 
readonly//  
double//! '
kMinDuration//( 4
=//5 6
$num//7 8
///9 :
$num//; ?
;//? @
internal22 
static22 
readonly22  
double22! '
kMaxTimeValue22( 5
=226 7
$num228 ?
;22? @
public77 
enum77 
ClipExtrapolation77 %
{88 	
None<< 
,<< 
HoldAA 
,AA 
LoopFF 
,FF 
PingPongKK 
,KK 
ContinuePP 
}QQ 	
;QQ	 

publicVV 
enumVV 
BlendCurveModeVV "
{WW 	
Auto[[ 
,[[ 
Manual`` 
}aa 	
;aa	 

internalcc 
TimelineClipcc 
(cc 

TrackAssetcc (
parentcc) /
)cc/ 0
{dd 	
parentTrackff 
=ff 
parentff  
;ff  !
}gg 	
[ii 	
SerializeFieldii	 
]ii 
doubleii 
m_Startii  '
;ii' (
[jj 	
SerializeFieldjj	 
]jj 
doublejj 
m_ClipInjj  (
;jj( )
[kk 	
SerializeFieldkk	 
]kk 
Objectkk 
m_Assetkk  '
;kk' (
[ll 	
SerializeFieldll	 
]ll 
[ll  
FormerlySerializedAsll -
(ll- .
$strll. >
)ll> ?
]ll? @
doublellA G

m_DurationllH R
;llR S
[mm 	
SerializeFieldmm	 
]mm 
doublemm 
m_TimeScalemm  +
=mm, -
$nummm. 1
;mm1 2
[nn 	
SerializeFieldnn	 
]nn 

TrackAssetnn #
m_ParentTracknn$ 1
;nn1 2
[qq 	
SerializeFieldqq	 
]qq 
doubleqq 
m_EaseInDurationqq  0
;qq0 1
[rr 	
SerializeFieldrr	 
]rr 
doublerr 
m_EaseOutDurationrr  1
;rr1 2
[uu 	
SerializeFielduu	 
]uu 
doubleuu 
m_BlendInDurationuu  1
=uu2 3
-uu4 5
$numuu5 9
;uu9 :
[vv 	
SerializeFieldvv	 
]vv 
doublevv 
m_BlendOutDurationvv  2
=vv3 4
-vv5 6
$numvv6 :
;vv: ;
[yy 	
SerializeFieldyy	 
]yy 
AnimationCurveyy '
m_MixInCurveyy( 4
;yy4 5
[zz 	
SerializeFieldzz	 
]zz 
AnimationCurvezz '
m_MixOutCurvezz( 5
;zz5 6
[|| 	
SerializeField||	 
]|| 
BlendCurveMode|| '
m_BlendInCurveMode||( :
=||; <
BlendCurveMode||= K
.||K L
Auto||L P
;||P Q
[}} 	
SerializeField}}	 
]}} 
BlendCurveMode}} '
m_BlendOutCurveMode}}( ;
=}}< =
BlendCurveMode}}> L
.}}L M
Auto}}M Q
;}}Q R
[ 	
SerializeField	 
] 
List 
< 
string $
>$ %#
m_ExposedParameterNames& =
;= >
[
ÄÄ 	
SerializeField
ÄÄ	 
]
ÄÄ 
AnimationClip
ÄÄ &
m_AnimationCurves
ÄÄ' 8
;
ÄÄ8 9
[
ÇÇ 	
SerializeField
ÇÇ	 
]
ÇÇ 
bool
ÇÇ 
m_Recordable
ÇÇ *
;
ÇÇ* +
[
ÖÖ 	
SerializeField
ÖÖ	 
]
ÖÖ 
ClipExtrapolation
ÖÖ *%
m_PostExtrapolationMode
ÖÖ+ B
;
ÖÖB C
[
ÜÜ 	
SerializeField
ÜÜ	 
]
ÜÜ 
ClipExtrapolation
ÜÜ *$
m_PreExtrapolationMode
ÜÜ+ A
;
ÜÜA B
[
áá 	
SerializeField
áá	 
]
áá 
double
áá %
m_PostExtrapolationTime
áá  7
;
áá7 8
[
àà 	
SerializeField
àà	 
]
àà 
double
àà $
m_PreExtrapolationTime
àà  6
;
àà6 7
[
ää 	
SerializeField
ää	 
]
ää 
string
ää 
m_DisplayName
ää  -
;
ää- .
public
èè 
bool
èè !
hasPreExtrapolation
èè '
{
êê 	
get
ëë 
{
ëë 
return
ëë $
m_PreExtrapolationMode
ëë /
!=
ëë0 2
ClipExtrapolation
ëë3 D
.
ëëD E
None
ëëE I
&&
ëëJ L$
m_PreExtrapolationTime
ëëM c
>
ëëd e
$num
ëëf g
;
ëëg h
}
ëëi j
}
íí 	
public
óó 
bool
óó "
hasPostExtrapolation
óó (
{
òò 	
get
ôô 
{
ôô 
return
ôô %
m_PostExtrapolationMode
ôô 0
!=
ôô1 3
ClipExtrapolation
ôô4 E
.
ôôE F
None
ôôF J
&&
ôôK M%
m_PostExtrapolationTime
ôôN e
>
ôôf g
$num
ôôh i
;
ôôi j
}
ôôk l
}
öö 	
public
üü 
double
üü 
	timeScale
üü 
{
†† 	
get
°° 
{
°° 
return
°° 
clipCaps
°° !
.
°°! "
HasAny
°°" (
(
°°( )
ClipCaps
°°) 1
.
°°1 2
SpeedMultiplier
°°2 A
)
°°A B
?
°°C D
Math
°°E I
.
°°I J
Max
°°J M
(
°°M N
kTimeScaleMin
°°N [
,
°°[ \
Math
°°] a
.
°°a b
Min
°°b e
(
°°e f
m_TimeScale
°°f q
,
°°q r
kTimeScaleMax°°s Ä
)°°Ä Å
)°°Å Ç
:°°É Ñ
$num°°Ö à
;°°à â
}°°ä ã
set
¢¢ 
{
££ 
UpdateDirty
§§ 
(
§§ 
m_TimeScale
§§ '
,
§§' (
value
§§) .
)
§§. /
;
§§/ 0
m_TimeScale
•• 
=
•• 
clipCaps
•• &
.
••& '
HasAny
••' -
(
••- .
ClipCaps
••. 6
.
••6 7
SpeedMultiplier
••7 F
)
••F G
?
••H I
Math
••J N
.
••N O
Max
••O R
(
••R S
kTimeScaleMin
••S `
,
••` a
Math
••b f
.
••f g
Min
••g j
(
••j k
value
••k p
,
••p q
kTimeScaleMax
••r 
)•• Ä
)••Ä Å
:••Ç É
$num••Ñ á
;••á à
}
¶¶ 
}
ßß 	
public
¨¨ 
double
¨¨ 
start
¨¨ 
{
≠≠ 	
get
ÆÆ 
{
ÆÆ 
return
ÆÆ 
m_Start
ÆÆ  
;
ÆÆ  !
}
ÆÆ" #
set
ØØ 
{
∞∞ 
UpdateDirty
±± 
(
±± 
value
±± !
,
±±! "
m_Start
±±# *
)
±±* +
;
±±+ ,
var
≤≤ 
newValue
≤≤ 
=
≤≤ 
Math
≤≤ #
.
≤≤# $
Max
≤≤$ '
(
≤≤' (
SanitizeTimeValue
≤≤( 9
(
≤≤9 :
value
≤≤: ?
,
≤≤? @
m_Start
≤≤A H
)
≤≤H I
,
≤≤I J
$num
≤≤K L
)
≤≤L M
;
≤≤M N
if
≥≥ 
(
≥≥ 
m_ParentTrack
≥≥ !
!=
≥≥" $
null
≥≥% )
&&
≥≥* ,
m_Start
≥≥- 4
!=
≥≥5 7
newValue
≥≥8 @
)
≥≥@ A
{
¥¥ 
m_ParentTrack
µµ !
.
µµ! "

OnClipMove
µµ" ,
(
µµ, -
)
µµ- .
;
µµ. /
}
∂∂ 
m_Start
∑∑ 
=
∑∑ 
newValue
∑∑ "
;
∑∑" #
}
∏∏ 
}
ππ 	
public
ææ 
double
ææ 
duration
ææ 
{
øø 	
get
¿¿ 
{
¿¿ 
return
¿¿ 

m_Duration
¿¿ #
;
¿¿# $
}
¿¿% &
set
¡¡ 
{
¬¬ 
UpdateDirty
√√ 
(
√√ 

m_Duration
√√ &
,
√√& '
value
√√( -
)
√√- .
;
√√. /

m_Duration
ƒƒ 
=
ƒƒ 
Math
ƒƒ !
.
ƒƒ! "
Max
ƒƒ" %
(
ƒƒ% &
SanitizeTimeValue
ƒƒ& 7
(
ƒƒ7 8
value
ƒƒ8 =
,
ƒƒ= >

m_Duration
ƒƒ? I
)
ƒƒI J
,
ƒƒJ K
double
ƒƒL R
.
ƒƒR S
Epsilon
ƒƒS Z
)
ƒƒZ [
;
ƒƒ[ \
}
≈≈ 
}
∆∆ 	
public
ÀÀ 
double
ÀÀ 
end
ÀÀ 
{
ÃÃ 	
get
ÕÕ 
{
ÕÕ 
return
ÕÕ 
m_Start
ÕÕ  
+
ÕÕ! "

m_Duration
ÕÕ# -
;
ÕÕ- .
}
ÕÕ/ 0
}
ŒŒ 	
public
”” 
double
”” 
clipIn
”” 
{
‘‘ 	
get
’’ 
{
’’ 
return
’’ 
clipCaps
’’ !
.
’’! "
HasAny
’’" (
(
’’( )
ClipCaps
’’) 1
.
’’1 2
ClipIn
’’2 8
)
’’8 9
?
’’: ;
m_ClipIn
’’< D
:
’’E F
$num
’’G H
;
’’H I
}
’’J K
set
÷÷ 
{
◊◊ 
UpdateDirty
ÿÿ 
(
ÿÿ 
m_ClipIn
ÿÿ $
,
ÿÿ$ %
value
ÿÿ& +
)
ÿÿ+ ,
;
ÿÿ, -
m_ClipIn
ŸŸ 
=
ŸŸ 
clipCaps
ŸŸ #
.
ŸŸ# $
HasAny
ŸŸ$ *
(
ŸŸ* +
ClipCaps
ŸŸ+ 3
.
ŸŸ3 4
ClipIn
ŸŸ4 :
)
ŸŸ: ;
?
ŸŸ< =
Math
ŸŸ> B
.
ŸŸB C
Max
ŸŸC F
(
ŸŸF G
Math
ŸŸG K
.
ŸŸK L
Min
ŸŸL O
(
ŸŸO P
SanitizeTimeValue
ŸŸP a
(
ŸŸa b
value
ŸŸb g
,
ŸŸg h
m_ClipIn
ŸŸi q
)
ŸŸq r
,
ŸŸr s
kMaxTimeValueŸŸt Å
)ŸŸÅ Ç
,ŸŸÇ É
$numŸŸÑ á
)ŸŸá à
:ŸŸâ ä
$numŸŸã å
;ŸŸå ç
}
⁄⁄ 
}
€€ 	
public
‡‡ 
string
‡‡ 
displayName
‡‡ !
{
·· 	
get
‚‚ 
{
‚‚ 
return
‚‚ 
m_DisplayName
‚‚ &
;
‚‚& '
}
‚‚( )
set
„„ 
{
„„ 
m_DisplayName
„„ 
=
„„  !
value
„„" '
;
„„' (
}
„„) *
}
‰‰ 	
public
ÍÍ 
double
ÍÍ 
clipAssetDuration
ÍÍ '
{
ÎÎ 	
get
ÏÏ 
{
ÌÌ 
var
ÓÓ 
playableAsset
ÓÓ !
=
ÓÓ" #
m_Asset
ÓÓ$ +
as
ÓÓ, .
IPlayableAsset
ÓÓ/ =
;
ÓÓ= >
return
ÔÔ 
playableAsset
ÔÔ $
!=
ÔÔ% '
null
ÔÔ( ,
?
ÔÔ- .
playableAsset
ÔÔ/ <
.
ÔÔ< =
duration
ÔÔ= E
:
ÔÔF G
double
ÔÔH N
.
ÔÔN O
MaxValue
ÔÔO W
;
ÔÔW X
}
 
}
ÒÒ 	
public
˘˘ 
AnimationClip
˘˘ 
curves
˘˘ #
{
˙˙ 	
get
˚˚ 
{
˚˚ 
return
˚˚ 
m_AnimationCurves
˚˚ *
;
˚˚* +
}
˚˚, -
internal
¸¸ 
set
¸¸ 
{
¸¸ 
m_AnimationCurves
¸¸ ,
=
¸¸- .
value
¸¸/ 4
;
¸¸4 5
}
¸¸6 7
}
˝˝ 	
string
ˇˇ 
ICurvesOwner
ˇˇ 
.
ˇˇ 
defaultCurvesName
ˇˇ -
{
ÄÄ 	
get
ÅÅ 
{
ÅÅ 
return
ÅÅ  
kDefaultCurvesName
ÅÅ +
;
ÅÅ+ ,
}
ÅÅ- .
}
ÇÇ 	
public
ää 
bool
ää 
	hasCurves
ää 
{
ãã 	
get
åå 
{
åå 
return
åå 
m_AnimationCurves
åå *
!=
åå+ -
null
åå. 2
&&
åå3 5
!
åå6 7
m_AnimationCurves
åå7 H
.
ååH I
empty
ååI N
;
ååN O
}
ååP Q
}
çç 	
public
íí 
Object
íí 
asset
íí 
{
ìì 	
get
îî 
{
îî 
return
îî 
m_Asset
îî  
;
îî  !
}
îî" #
set
ïï 
{
ïï 
m_Asset
ïï 
=
ïï 
value
ïï !
;
ïï! "
}
ïï# $
}
ññ 	
Object
òò 
ICurvesOwner
òò 
.
òò 

assetOwner
òò &
{
ôô 	
get
öö 
{
öö 
return
öö 
parentTrack
öö $
;
öö$ %
}
öö& '
}
õõ 	

TrackAsset
ùù 
ICurvesOwner
ùù 
.
ùù  
targetTrack
ùù  +
{
ûû 	
get
üü 
{
üü 
return
üü 
parentTrack
üü $
;
üü$ %
}
üü& '
}
†† 	
[
¢¢ 	
Obsolete
¢¢	 
(
¢¢ 
$str
¢¢ T
,
¢¢T U
true
¢¢V Z
)
¢¢Z [
]
¢¢[ \
public
££ 
Object
££ 
underlyingAsset
££ %
{
§§ 	
get
•• 
{
•• 
return
•• 
null
•• 
;
•• 
}
••  
set
¶¶ 
{
¶¶ 
}
¶¶ 
}
ßß 	
public
¨¨ 

TrackAsset
¨¨ 
parentTrack
¨¨ %
{
≠≠ 	
get
ÆÆ 
{
ÆÆ 
return
ÆÆ 
m_ParentTrack
ÆÆ &
;
ÆÆ& '
}
ÆÆ( )
set
ØØ 
{
∞∞ 
if
±± 
(
±± 
m_ParentTrack
±± !
==
±±" $
value
±±% *
)
±±* +
return
≤≤ 
;
≤≤ 
if
¥¥ 
(
¥¥ 
m_ParentTrack
¥¥ !
!=
¥¥" $
null
¥¥% )
)
¥¥) *
m_ParentTrack
µµ !
.
µµ! "

RemoveClip
µµ" ,
(
µµ, -
this
µµ- 1
)
µµ1 2
;
µµ2 3
m_ParentTrack
∑∑ 
=
∑∑ 
value
∑∑  %
;
∑∑% &
if
ππ 
(
ππ 
m_ParentTrack
ππ !
!=
ππ" $
null
ππ% )
)
ππ) *
m_ParentTrack
∫∫ !
.
∫∫! "
AddClip
∫∫" )
(
∫∫) *
this
∫∫* .
)
∫∫. /
;
∫∫/ 0
}
ªª 
}
ºº 	
public
¡¡ 
double
¡¡ 
easeInDuration
¡¡ $
{
¬¬ 	
get
√√ 
{
√√ 
return
√√ 
clipCaps
√√ !
.
√√! "
HasAny
√√" (
(
√√( )
ClipCaps
√√) 1
.
√√1 2
Blending
√√2 :
)
√√: ;
?
√√< =
Math
√√> B
.
√√B C
Min
√√C F
(
√√F G
Math
√√G K
.
√√K L
Max
√√L O
(
√√O P
m_EaseInDuration
√√P `
,
√√` a
$num
√√b c
)
√√c d
,
√√d e
duration
√√f n
)
√√n o
:
√√p q
$num
√√r s
;
√√s t
}
√√u v
set
ƒƒ 
{
ƒƒ 
m_EaseInDuration
ƒƒ "
=
ƒƒ# $
clipCaps
ƒƒ% -
.
ƒƒ- .
HasAny
ƒƒ. 4
(
ƒƒ4 5
ClipCaps
ƒƒ5 =
.
ƒƒ= >
Blending
ƒƒ> F
)
ƒƒF G
?
ƒƒH I
Math
ƒƒJ N
.
ƒƒN O
Max
ƒƒO R
(
ƒƒR S
$num
ƒƒS T
,
ƒƒT U
Math
ƒƒV Z
.
ƒƒZ [
Min
ƒƒ[ ^
(
ƒƒ^ _
SanitizeTimeValue
ƒƒ_ p
(
ƒƒp q
value
ƒƒq v
,
ƒƒv w
m_EaseInDurationƒƒx à
)ƒƒà â
,ƒƒâ ä
durationƒƒã ì
)ƒƒì î
)ƒƒî ï
:ƒƒñ ó
$numƒƒò ô
;ƒƒô ö
}ƒƒõ ú
}
≈≈ 	
public
   
double
   
easeOutDuration
   %
{
ÀÀ 	
get
ÃÃ 
{
ÃÃ 
return
ÃÃ 
clipCaps
ÃÃ !
.
ÃÃ! "
HasAny
ÃÃ" (
(
ÃÃ( )
ClipCaps
ÃÃ) 1
.
ÃÃ1 2
Blending
ÃÃ2 :
)
ÃÃ: ;
?
ÃÃ< =
Math
ÃÃ> B
.
ÃÃB C
Min
ÃÃC F
(
ÃÃF G
Math
ÃÃG K
.
ÃÃK L
Max
ÃÃL O
(
ÃÃO P
m_EaseOutDuration
ÃÃP a
,
ÃÃa b
$num
ÃÃc d
)
ÃÃd e
,
ÃÃe f
duration
ÃÃg o
)
ÃÃo p
:
ÃÃq r
$num
ÃÃs t
;
ÃÃt u
}
ÃÃv w
set
ÕÕ 
{
ÕÕ 
m_EaseOutDuration
ÕÕ #
=
ÕÕ$ %
clipCaps
ÕÕ& .
.
ÕÕ. /
HasAny
ÕÕ/ 5
(
ÕÕ5 6
ClipCaps
ÕÕ6 >
.
ÕÕ> ?
Blending
ÕÕ? G
)
ÕÕG H
?
ÕÕI J
Math
ÕÕK O
.
ÕÕO P
Max
ÕÕP S
(
ÕÕS T
$num
ÕÕT U
,
ÕÕU V
Math
ÕÕW [
.
ÕÕ[ \
Min
ÕÕ\ _
(
ÕÕ_ `
SanitizeTimeValue
ÕÕ` q
(
ÕÕq r
value
ÕÕr w
,
ÕÕw x 
m_EaseOutDurationÕÕy ä
)ÕÕä ã
,ÕÕã å
durationÕÕç ï
)ÕÕï ñ
)ÕÕñ ó
:ÕÕò ô
$numÕÕö õ
;ÕÕõ ú
}ÕÕù û
}
ŒŒ 	
[
–– 	
Obsolete
––	 
(
–– 
$str
–– L
,
––L M
true
––N R
)
––R S
]
––S T
public
—— 
double
—— 
eastOutTime
—— !
{
““ 	
get
”” 
{
”” 
return
”” 
duration
”” !
-
””" #
easeOutDuration
””$ 3
+
””4 5
m_Start
””6 =
;
””= >
}
””? @
}
‘‘ 	
public
ŸŸ 
double
ŸŸ 
easeOutTime
ŸŸ !
{
⁄⁄ 	
get
€€ 
{
€€ 
return
€€ 
duration
€€ !
-
€€" #
easeOutDuration
€€$ 3
+
€€4 5
m_Start
€€6 =
;
€€= >
}
€€? @
}
‹‹ 	
public
·· 
double
·· 
blendInDuration
·· %
{
‚‚ 	
get
„„ 
{
„„ 
return
„„ 
clipCaps
„„ !
.
„„! "
HasAny
„„" (
(
„„( )
ClipCaps
„„) 1
.
„„1 2
Blending
„„2 :
)
„„: ;
?
„„< =
m_BlendInDuration
„„> O
:
„„P Q
$num
„„R S
;
„„S T
}
„„U V
set
‰‰ 
{
‰‰ 
m_BlendInDuration
‰‰ #
=
‰‰$ %
clipCaps
‰‰& .
.
‰‰. /
HasAny
‰‰/ 5
(
‰‰5 6
ClipCaps
‰‰6 >
.
‰‰> ?
Blending
‰‰? G
)
‰‰G H
?
‰‰I J
SanitizeTimeValue
‰‰K \
(
‰‰\ ]
value
‰‰] b
,
‰‰b c
m_BlendInDuration
‰‰d u
)
‰‰u v
:
‰‰w x
$num
‰‰y z
;
‰‰z {
}
‰‰| }
}
ÂÂ 	
public
ÍÍ 
double
ÍÍ 
blendOutDuration
ÍÍ &
{
ÎÎ 	
get
ÏÏ 
{
ÏÏ 
return
ÏÏ 
clipCaps
ÏÏ !
.
ÏÏ! "
HasAny
ÏÏ" (
(
ÏÏ( )
ClipCaps
ÏÏ) 1
.
ÏÏ1 2
Blending
ÏÏ2 :
)
ÏÏ: ;
?
ÏÏ< = 
m_BlendOutDuration
ÏÏ> P
:
ÏÏQ R
$num
ÏÏS T
;
ÏÏT U
}
ÏÏV W
set
ÌÌ 
{
ÌÌ  
m_BlendOutDuration
ÌÌ $
=
ÌÌ% &
clipCaps
ÌÌ' /
.
ÌÌ/ 0
HasAny
ÌÌ0 6
(
ÌÌ6 7
ClipCaps
ÌÌ7 ?
.
ÌÌ? @
Blending
ÌÌ@ H
)
ÌÌH I
?
ÌÌJ K
SanitizeTimeValue
ÌÌL ]
(
ÌÌ] ^
value
ÌÌ^ c
,
ÌÌc d 
m_BlendOutDuration
ÌÌe w
)
ÌÌw x
:
ÌÌy z
$num
ÌÌ{ |
;
ÌÌ| }
}
ÌÌ~ 
}
ÓÓ 	
public
ÛÛ 
BlendCurveMode
ÛÛ 
blendInCurveMode
ÛÛ .
{
ÙÙ 	
get
ıı 
{
ıı 
return
ıı  
m_BlendInCurveMode
ıı +
;
ıı+ ,
}
ıı- .
set
ˆˆ 
{
ˆˆ  
m_BlendInCurveMode
ˆˆ $
=
ˆˆ% &
value
ˆˆ' ,
;
ˆˆ, -
}
ˆˆ. /
}
˜˜ 	
public
¸¸ 
BlendCurveMode
¸¸ 
blendOutCurveMode
¸¸ /
{
˝˝ 	
get
˛˛ 
{
˛˛ 
return
˛˛ !
m_BlendOutCurveMode
˛˛ ,
;
˛˛, -
}
˛˛. /
set
ˇˇ 
{
ˇˇ !
m_BlendOutCurveMode
ˇˇ %
=
ˇˇ& '
value
ˇˇ( -
;
ˇˇ- .
}
ˇˇ/ 0
}
ÄÄ 	
public
ÖÖ 
bool
ÖÖ 

hasBlendIn
ÖÖ 
{
ÖÖ  
get
ÖÖ! $
{
ÖÖ% &
return
ÖÖ' -
clipCaps
ÖÖ. 6
.
ÖÖ6 7
HasAny
ÖÖ7 =
(
ÖÖ= >
ClipCaps
ÖÖ> F
.
ÖÖF G
Blending
ÖÖG O
)
ÖÖO P
&&
ÖÖQ S
m_BlendInDuration
ÖÖT e
>
ÖÖf g
$num
ÖÖh i
;
ÖÖi j
}
ÖÖk l
}
ÖÖm n
public
ää 
bool
ää 
hasBlendOut
ää 
{
ää  !
get
ää" %
{
ää& '
return
ää( .
clipCaps
ää/ 7
.
ää7 8
HasAny
ää8 >
(
ää> ?
ClipCaps
ää? G
.
ääG H
Blending
ääH P
)
ääP Q
&&
ääR T 
m_BlendOutDuration
ääU g
>
ääh i
$num
ääj k
;
ääk l
}
ääm n
}
ääo p
public
èè 
AnimationCurve
èè 

mixInCurve
èè (
{
êê 	
get
ëë 
{
íí 
if
îî 
(
îî 
m_MixInCurve
îî  
==
îî! #
null
îî$ (
||
îî) +
m_MixInCurve
îî, 8
.
îî8 9
length
îî9 ?
<
îî@ A
$num
îîB C
)
îîC D
m_MixInCurve
ïï  
=
ïï! ""
GetDefaultMixInCurve
ïï# 7
(
ïï7 8
)
ïï8 9
;
ïï9 :
return
óó 
m_MixInCurve
óó #
;
óó# $
}
òò 
set
ôô 
{
ôô 
m_MixInCurve
ôô 
=
ôô  
value
ôô! &
;
ôô& '
}
ôô( )
}
öö 	
public
üü 
float
üü 
mixInPercentage
üü $
{
†† 	
get
°° 
{
°° 
return
°° 
(
°° 
float
°° 
)
°°  
(
°°  !
mixInDuration
°°! .
/
°°/ 0
duration
°°1 9
)
°°9 :
;
°°: ;
}
°°< =
}
¢¢ 	
public
ßß 
double
ßß 
mixInDuration
ßß #
{
®® 	
get
©© 
{
©© 
return
©© 

hasBlendIn
©© #
?
©©$ %
blendInDuration
©©& 5
:
©©6 7
easeInDuration
©©8 F
;
©©F G
}
©©H I
}
™™ 	
public
ØØ 
AnimationCurve
ØØ 
mixOutCurve
ØØ )
{
∞∞ 	
get
±± 
{
≤≤ 
if
≥≥ 
(
≥≥ 
m_MixOutCurve
≥≥ !
==
≥≥" $
null
≥≥% )
||
≥≥* ,
m_MixOutCurve
≥≥- :
.
≥≥: ;
length
≥≥; A
<
≥≥B C
$num
≥≥D E
)
≥≥E F
m_MixOutCurve
¥¥ !
=
¥¥" ##
GetDefaultMixOutCurve
¥¥$ 9
(
¥¥9 :
)
¥¥: ;
;
¥¥; <
return
µµ 
m_MixOutCurve
µµ $
;
µµ$ %
}
∂∂ 
set
∑∑ 
{
∑∑ 
m_MixOutCurve
∑∑ 
=
∑∑  !
value
∑∑" '
;
∑∑' (
}
∑∑) *
}
∏∏ 	
public
ΩΩ 
double
ΩΩ 

mixOutTime
ΩΩ  
{
ææ 	
get
øø 
{
øø 
return
øø 
duration
øø !
-
øø" #
mixOutDuration
øø$ 2
+
øø3 4
m_Start
øø5 <
;
øø< =
}
øø> ?
}
¿¿ 	
public
≈≈ 
double
≈≈ 
mixOutDuration
≈≈ $
{
∆∆ 	
get
«« 
{
«« 
return
«« 
hasBlendOut
«« $
?
««% &
blendOutDuration
««' 7
:
««8 9
easeOutDuration
««: I
;
««I J
}
««K L
}
»» 	
public
ÕÕ 
float
ÕÕ 
mixOutPercentage
ÕÕ %
{
ŒŒ 	
get
œœ 
{
œœ 
return
œœ 
(
œœ 
float
œœ 
)
œœ  
(
œœ  !
mixOutDuration
œœ! /
/
œœ0 1
duration
œœ2 :
)
œœ: ;
;
œœ; <
}
œœ= >
}
–– 	
public
’’ 
bool
’’ 

recordable
’’ 
{
÷÷ 	
get
◊◊ 
{
◊◊ 
return
◊◊ 
m_Recordable
◊◊ %
;
◊◊% &
}
◊◊' (
internal
ÿÿ 
set
ÿÿ 
{
ÿÿ 
m_Recordable
ÿÿ '
=
ÿÿ( )
value
ÿÿ* /
;
ÿÿ/ 0
}
ÿÿ1 2
}
ŸŸ 	
[
€€ 	
Obsolete
€€	 
(
€€ 
$str
€€ Z
,
€€Z [
true
€€\ `
)
€€` a
]
€€a b
public
‹‹ 
List
‹‹ 
<
‹‹ 
string
‹‹ 
>
‹‹ 
exposedParameters
‹‹ -
{
›› 	
get
ﬁﬁ 
{
ﬁﬁ 
return
ﬁﬁ %
m_ExposedParameterNames
ﬁﬁ 0
??
ﬁﬁ1 3
(
ﬁﬁ4 5%
m_ExposedParameterNames
ﬁﬁ5 L
=
ﬁﬁM N
new
ﬁﬁO R
List
ﬁﬁS W
<
ﬁﬁW X
string
ﬁﬁX ^
>
ﬁﬁ^ _
(
ﬁﬁ_ `
)
ﬁﬁ` a
)
ﬁﬁa b
;
ﬁﬁb c
}
ﬁﬁd e
}
ﬂﬂ 	
public
‰‰ 
ClipCaps
‰‰ 
clipCaps
‰‰  
{
ÂÂ 	
get
ÊÊ 
{
ÁÁ 
var
ËË 
	clipAsset
ËË 
=
ËË 
asset
ËË  %
as
ËË& ( 
ITimelineClipAsset
ËË) ;
;
ËË; <
return
ÈÈ 
(
ÈÈ 
	clipAsset
ÈÈ !
!=
ÈÈ" $
null
ÈÈ% )
)
ÈÈ) *
?
ÈÈ+ ,
	clipAsset
ÈÈ- 6
.
ÈÈ6 7
clipCaps
ÈÈ7 ?
:
ÈÈ@ A
kDefaultClipCaps
ÈÈB R
;
ÈÈR S
}
ÍÍ 
}
ÎÎ 	
internal
ÌÌ 
int
ÌÌ 
Hash
ÌÌ 
(
ÌÌ 
)
ÌÌ 
{
ÓÓ 	
return
ÔÔ 
HashUtility
ÔÔ 
.
ÔÔ 
CombineHash
ÔÔ *
(
ÔÔ* +
m_Start
ÔÔ+ 2
.
ÔÔ2 3
GetHashCode
ÔÔ3 >
(
ÔÔ> ?
)
ÔÔ? @
,
ÔÔ@ A

m_Duration
 
.
 
GetHashCode
 &
(
& '
)
' (
,
( )
m_TimeScale
ÒÒ 
.
ÒÒ 
GetHashCode
ÒÒ '
(
ÒÒ' (
)
ÒÒ( )
,
ÒÒ) *
m_ClipIn
ÚÚ 
.
ÚÚ 
GetHashCode
ÚÚ $
(
ÚÚ$ %
)
ÚÚ% &
,
ÚÚ& '
(
ÛÛ 
(
ÛÛ 
int
ÛÛ 
)
ÛÛ $
m_PreExtrapolationMode
ÛÛ ,
)
ÛÛ, -
.
ÛÛ- .
GetHashCode
ÛÛ. 9
(
ÛÛ9 :
)
ÛÛ: ;
,
ÛÛ; <
(
ÙÙ 
(
ÙÙ 
int
ÙÙ 
)
ÙÙ %
m_PostExtrapolationMode
ÙÙ -
)
ÙÙ- .
.
ÙÙ. /
GetHashCode
ÙÙ/ :
(
ÙÙ: ;
)
ÙÙ; <
)
ÙÙ< =
;
ÙÙ= >
}
ıı 	
public
¸¸ 
float
¸¸ 
EvaluateMixOut
¸¸ #
(
¸¸# $
double
¸¸$ *
time
¸¸+ /
)
¸¸/ 0
{
˝˝ 	
if
˛˛ 
(
˛˛ 
!
˛˛ 
clipCaps
˛˛ 
.
˛˛ 
HasAny
˛˛  
(
˛˛  !
ClipCaps
˛˛! )
.
˛˛) *
Blending
˛˛* 2
)
˛˛2 3
)
˛˛3 4
return
ˇˇ 
$num
ˇˇ 
;
ˇˇ 
if
ÅÅ 
(
ÅÅ 
mixOutDuration
ÅÅ 
>
ÅÅ  
Mathf
ÅÅ! &
.
ÅÅ& '
Epsilon
ÅÅ' .
)
ÅÅ. /
{
ÇÇ 
var
ÉÉ 
perc
ÉÉ 
=
ÉÉ 
(
ÉÉ 
float
ÉÉ !
)
ÉÉ! "
(
ÉÉ" #
time
ÉÉ# '
-
ÉÉ( )

mixOutTime
ÉÉ* 4
)
ÉÉ4 5
/
ÉÉ6 7
(
ÉÉ8 9
float
ÉÉ9 >
)
ÉÉ> ?
mixOutDuration
ÉÉ? M
;
ÉÉM N
perc
ÑÑ 
=
ÑÑ 
Mathf
ÑÑ 
.
ÑÑ 
Clamp01
ÑÑ $
(
ÑÑ$ %
mixOutCurve
ÑÑ% 0
.
ÑÑ0 1
Evaluate
ÑÑ1 9
(
ÑÑ9 :
perc
ÑÑ: >
)
ÑÑ> ?
)
ÑÑ? @
;
ÑÑ@ A
return
ÖÖ 
perc
ÖÖ 
;
ÖÖ 
}
ÜÜ 
return
áá 
$num
áá 
;
áá 
}
àà 	
public
èè 
float
èè 
EvaluateMixIn
èè "
(
èè" #
double
èè# )
time
èè* .
)
èè. /
{
êê 	
if
ëë 
(
ëë 
!
ëë 
clipCaps
ëë 
.
ëë 
HasAny
ëë  
(
ëë  !
ClipCaps
ëë! )
.
ëë) *
Blending
ëë* 2
)
ëë2 3
)
ëë3 4
return
íí 
$num
íí 
;
íí 
if
îî 
(
îî 
mixInDuration
îî 
>
îî 
Mathf
îî  %
.
îî% &
Epsilon
îî& -
)
îî- .
{
ïï 
var
ññ 
perc
ññ 
=
ññ 
(
ññ 
float
ññ !
)
ññ! "
(
ññ" #
time
ññ# '
-
ññ( )
m_Start
ññ* 1
)
ññ1 2
/
ññ3 4
(
ññ5 6
float
ññ6 ;
)
ññ; <
mixInDuration
ññ< I
;
ññI J
perc
óó 
=
óó 
Mathf
óó 
.
óó 
Clamp01
óó $
(
óó$ %

mixInCurve
óó% /
.
óó/ 0
Evaluate
óó0 8
(
óó8 9
perc
óó9 =
)
óó= >
)
óó> ?
;
óó? @
return
òò 
perc
òò 
;
òò 
}
ôô 
return
öö 
$num
öö 
;
öö 
}
õõ 	
static
ùù 
AnimationCurve
ùù "
GetDefaultMixInCurve
ùù 2
(
ùù2 3
)
ùù3 4
{
ûû 	
return
üü 
AnimationCurve
üü !
.
üü! "
	EaseInOut
üü" +
(
üü+ ,
$num
üü, -
,
üü- .
$num
üü/ 0
,
üü0 1
$num
üü2 3
,
üü3 4
$num
üü5 6
)
üü6 7
;
üü7 8
}
†† 	
static
¢¢ 
AnimationCurve
¢¢ #
GetDefaultMixOutCurve
¢¢ 3
(
¢¢3 4
)
¢¢4 5
{
££ 	
return
§§ 
AnimationCurve
§§ !
.
§§! "
	EaseInOut
§§" +
(
§§+ ,
$num
§§, -
,
§§- .
$num
§§/ 0
,
§§0 1
$num
§§2 3
,
§§3 4
$num
§§5 6
)
§§6 7
;
§§7 8
}
•• 	
public
ÆÆ 
double
ÆÆ 
ToLocalTime
ÆÆ !
(
ÆÆ! "
double
ÆÆ" (
time
ÆÆ) -
)
ÆÆ- .
{
ØØ 	
if
∞∞ 
(
∞∞ 
time
∞∞ 
<
∞∞ 
$num
∞∞ 
)
∞∞ 
return
±± 
time
±± 
;
±± 
if
¥¥ 
(
¥¥ #
IsPreExtrapolatedTime
¥¥ %
(
¥¥% &
time
¥¥& *
)
¥¥* +
)
¥¥+ ,
time
µµ 
=
µµ !
GetExtrapolatedTime
µµ *
(
µµ* +
time
µµ+ /
-
µµ0 1
m_Start
µµ2 9
,
µµ9 :$
m_PreExtrapolationMode
µµ; Q
,
µµQ R

m_Duration
µµS ]
)
µµ] ^
;
µµ^ _
else
∂∂ 
if
∂∂ 
(
∂∂ $
IsPostExtrapolatedTime
∂∂ +
(
∂∂+ ,
time
∂∂, 0
)
∂∂0 1
)
∂∂1 2
time
∑∑ 
=
∑∑ !
GetExtrapolatedTime
∑∑ *
(
∑∑* +
time
∑∑+ /
-
∑∑0 1
m_Start
∑∑2 9
,
∑∑9 :%
m_PostExtrapolationMode
∑∑; R
,
∑∑R S

m_Duration
∑∑T ^
)
∑∑^ _
;
∑∑_ `
else
∏∏ 
time
ππ 
-=
ππ 
m_Start
ππ 
;
ππ  
time
ºº 
*=
ºº 
	timeScale
ºº 
;
ºº 
time
ΩΩ 
+=
ΩΩ 
clipIn
ΩΩ 
;
ΩΩ 
return
øø 
time
øø 
;
øø 
}
¿¿ 	
public
«« 
double
««  
ToLocalTimeUnbound
«« (
(
««( )
double
««) /
time
««0 4
)
««4 5
{
»» 	
return
…… 
(
…… 
time
…… 
-
…… 
m_Start
…… "
)
……" #
*
……$ %
	timeScale
……& /
+
……0 1
clipIn
……2 8
;
……8 9
}
   	
internal
—— 
double
—— "
FromLocalTimeUnbound
—— ,
(
——, -
double
——- 3
time
——4 8
)
——8 9
{
““ 	
return
”” 
(
”” 
time
”” 
-
”” 
clipIn
”” !
)
””! "
/
””# $
	timeScale
””% .
+
””/ 0
m_Start
””1 8
;
””8 9
}
‘‘ 	
public
ŸŸ 
AnimationClip
ŸŸ 
animationClip
ŸŸ *
{
⁄⁄ 	
get
€€ 
{
‹‹ 
if
›› 
(
›› 
m_Asset
›› 
==
›› 
null
›› #
)
››# $
return
ﬁﬁ 
null
ﬁﬁ 
;
ﬁﬁ  
var
‡‡ 
playableAsset
‡‡ !
=
‡‡" #
m_Asset
‡‡$ +
as
‡‡, .$
AnimationPlayableAsset
‡‡/ E
;
‡‡E F
return
·· 
playableAsset
·· $
!=
··% '
null
··( ,
?
··- .
playableAsset
··/ <
.
··< =
clip
··= A
:
··B C
null
··D H
;
··H I
}
‚‚ 
}
„„ 	
static
ÂÂ 
double
ÂÂ 
SanitizeTimeValue
ÂÂ '
(
ÂÂ' (
double
ÂÂ( .
value
ÂÂ/ 4
,
ÂÂ4 5
double
ÂÂ6 <
defaultValue
ÂÂ= I
)
ÂÂI J
{
ÊÊ 	
if
ÁÁ 
(
ÁÁ 
double
ÁÁ 
.
ÁÁ 

IsInfinity
ÁÁ !
(
ÁÁ! "
value
ÁÁ" '
)
ÁÁ' (
||
ÁÁ) +
double
ÁÁ, 2
.
ÁÁ2 3
IsNaN
ÁÁ3 8
(
ÁÁ8 9
value
ÁÁ9 >
)
ÁÁ> ?
)
ÁÁ? @
{
ËË 
Debug
ÈÈ 
.
ÈÈ 
LogError
ÈÈ 
(
ÈÈ 
$str
ÈÈ <
)
ÈÈ< =
;
ÈÈ= >
return
ÍÍ 
defaultValue
ÍÍ #
;
ÍÍ# $
}
ÎÎ 
return
ÌÌ 
Math
ÌÌ 
.
ÌÌ 
Max
ÌÌ 
(
ÌÌ 
-
ÌÌ 
kMaxTimeValue
ÌÌ *
,
ÌÌ* +
Math
ÌÌ, 0
.
ÌÌ0 1
Min
ÌÌ1 4
(
ÌÌ4 5
kMaxTimeValue
ÌÌ5 B
,
ÌÌB C
value
ÌÌD I
)
ÌÌI J
)
ÌÌJ K
;
ÌÌK L
}
ÓÓ 	
public
ÛÛ 
ClipExtrapolation
ÛÛ  #
postExtrapolationMode
ÛÛ! 6
{
ÙÙ 	
get
ıı 
{
ıı 
return
ıı 
clipCaps
ıı !
.
ıı! "
HasAny
ıı" (
(
ıı( )
ClipCaps
ıı) 1
.
ıı1 2
Extrapolation
ıı2 ?
)
ıı? @
?
ııA B%
m_PostExtrapolationMode
ııC Z
:
ıı[ \
ClipExtrapolation
ıı] n
.
ıın o
None
ııo s
;
ııs t
}
ııu v
internal
ˆˆ 
set
ˆˆ 
{
ˆˆ %
m_PostExtrapolationMode
ˆˆ 2
=
ˆˆ3 4
clipCaps
ˆˆ5 =
.
ˆˆ= >
HasAny
ˆˆ> D
(
ˆˆD E
ClipCaps
ˆˆE M
.
ˆˆM N
Extrapolation
ˆˆN [
)
ˆˆ[ \
?
ˆˆ] ^
value
ˆˆ_ d
:
ˆˆe f
ClipExtrapolation
ˆˆg x
.
ˆˆx y
None
ˆˆy }
;
ˆˆ} ~
}ˆˆ Ä
}
˜˜ 	
public
¸¸ 
ClipExtrapolation
¸¸  "
preExtrapolationMode
¸¸! 5
{
˝˝ 	
get
˛˛ 
{
˛˛ 
return
˛˛ 
clipCaps
˛˛ !
.
˛˛! "
HasAny
˛˛" (
(
˛˛( )
ClipCaps
˛˛) 1
.
˛˛1 2
Extrapolation
˛˛2 ?
)
˛˛? @
?
˛˛A B$
m_PreExtrapolationMode
˛˛C Y
:
˛˛Z [
ClipExtrapolation
˛˛\ m
.
˛˛m n
None
˛˛n r
;
˛˛r s
}
˛˛t u
internal
ˇˇ 
set
ˇˇ 
{
ˇˇ $
m_PreExtrapolationMode
ˇˇ 1
=
ˇˇ2 3
clipCaps
ˇˇ4 <
.
ˇˇ< =
HasAny
ˇˇ= C
(
ˇˇC D
ClipCaps
ˇˇD L
.
ˇˇL M
Extrapolation
ˇˇM Z
)
ˇˇZ [
?
ˇˇ\ ]
value
ˇˇ^ c
:
ˇˇd e
ClipExtrapolation
ˇˇf w
.
ˇˇw x
None
ˇˇx |
;
ˇˇ| }
}
ˇˇ~ 
}
ÄÄ 	
internal
ÇÇ 
void
ÇÇ &
SetPostExtrapolationTime
ÇÇ .
(
ÇÇ. /
double
ÇÇ/ 5
time
ÇÇ6 :
)
ÇÇ: ;
{
ÉÉ 	%
m_PostExtrapolationTime
ÑÑ #
=
ÑÑ$ %
time
ÑÑ& *
;
ÑÑ* +
}
ÖÖ 	
internal
áá 
void
áá %
SetPreExtrapolationTime
áá -
(
áá- .
double
áá. 4
time
áá5 9
)
áá9 :
{
àà 	$
m_PreExtrapolationTime
ââ "
=
ââ# $
time
ââ% )
;
ââ) *
}
ää 	
public
ëë 
bool
ëë  
IsExtrapolatedTime
ëë &
(
ëë& '
double
ëë' -
sequenceTime
ëë. :
)
ëë: ;
{
íí 	
return
ìì #
IsPreExtrapolatedTime
ìì (
(
ìì( )
sequenceTime
ìì) 5
)
ìì5 6
||
ìì7 9$
IsPostExtrapolatedTime
ìì: P
(
ììP Q
sequenceTime
ììQ ]
)
ìì] ^
;
ìì^ _
}
îî 	
public
õõ 
bool
õõ #
IsPreExtrapolatedTime
õõ )
(
õõ) *
double
õõ* 0
sequenceTime
õõ1 =
)
õõ= >
{
úú 	
return
ùù "
preExtrapolationMode
ùù '
!=
ùù( *
ClipExtrapolation
ùù+ <
.
ùù< =
None
ùù= A
&&
ùùB D
sequenceTime
ûû 
<
ûû 
m_Start
ûû &
&&
ûû' )
sequenceTime
ûû* 6
>=
ûû7 9
m_Start
ûû: A
-
ûûB C$
m_PreExtrapolationTime
ûûD Z
;
ûûZ [
}
üü 	
public
¶¶ 
bool
¶¶ $
IsPostExtrapolatedTime
¶¶ *
(
¶¶* +
double
¶¶+ 1
sequenceTime
¶¶2 >
)
¶¶> ?
{
ßß 	
return
®® #
postExtrapolationMode
®® (
!=
®®) +
ClipExtrapolation
®®, =
.
®®= >
None
®®> B
&&
®®C E
(
©© 
sequenceTime
©© 
>
©© 
end
©©  #
)
©©# $
&&
©©% '
(
©©( )
sequenceTime
©©) 5
-
©©6 7
end
©©8 ;
<
©©< =%
m_PostExtrapolationTime
©©> U
)
©©U V
;
©©V W
}
™™ 	
public
ØØ 
double
ØØ 
extrapolatedStart
ØØ '
{
∞∞ 	
get
±± 
{
≤≤ 
if
≥≥ 
(
≥≥ $
m_PreExtrapolationMode
≥≥ *
!=
≥≥+ -
ClipExtrapolation
≥≥. ?
.
≥≥? @
None
≥≥@ D
)
≥≥D E
return
¥¥ 
m_Start
¥¥ "
-
¥¥# $$
m_PreExtrapolationTime
¥¥% ;
;
¥¥; <
return
∂∂ 
m_Start
∂∂ 
;
∂∂ 
}
∑∑ 
}
∏∏ 	
public
ΩΩ 
double
ΩΩ "
extrapolatedDuration
ΩΩ *
{
ææ 	
get
øø 
{
¿¿ 
double
¡¡ 
length
¡¡ 
=
¡¡ 

m_Duration
¡¡  *
;
¡¡* +
if
√√ 
(
√√ %
m_PostExtrapolationMode
√√ +
!=
√√, .
ClipExtrapolation
√√/ @
.
√√@ A
None
√√A E
)
√√E F
length
ƒƒ 
+=
ƒƒ 
Math
ƒƒ "
.
ƒƒ" #
Min
ƒƒ# &
(
ƒƒ& '%
m_PostExtrapolationTime
ƒƒ' >
,
ƒƒ> ?
kMaxTimeValue
ƒƒ@ M
)
ƒƒM N
;
ƒƒN O
if
∆∆ 
(
∆∆ $
m_PreExtrapolationMode
∆∆ *
!=
∆∆+ -
ClipExtrapolation
∆∆. ?
.
∆∆? @
None
∆∆@ D
)
∆∆D E
length
«« 
+=
«« $
m_PreExtrapolationTime
«« 4
;
««4 5
return
…… 
length
…… 
;
…… 
}
   
}
ÀÀ 	
static
ÕÕ 
double
ÕÕ !
GetExtrapolatedTime
ÕÕ )
(
ÕÕ) *
double
ÕÕ* 0
time
ÕÕ1 5
,
ÕÕ5 6
ClipExtrapolation
ÕÕ7 H
mode
ÕÕI M
,
ÕÕM N
double
ÕÕO U
duration
ÕÕV ^
)
ÕÕ^ _
{
ŒŒ 	
if
œœ 
(
œœ 
duration
œœ 
==
œœ 
$num
œœ 
)
œœ 
return
–– 
$num
–– 
;
–– 
switch
““ 
(
““ 
mode
““ 
)
““ 
{
”” 
case
‘‘ 
ClipExtrapolation
‘‘ &
.
‘‘& '
None
‘‘' +
:
‘‘+ ,
break
’’ 
;
’’ 
case
◊◊ 
ClipExtrapolation
◊◊ &
.
◊◊& '
Loop
◊◊' +
:
◊◊+ ,
if
ÿÿ 
(
ÿÿ 
time
ÿÿ 
<
ÿÿ 
$num
ÿÿ  
)
ÿÿ  !
time
ŸŸ 
=
ŸŸ 
duration
ŸŸ '
-
ŸŸ( )
(
ŸŸ* +
-
ŸŸ+ ,
time
ŸŸ, 0
%
ŸŸ1 2
duration
ŸŸ3 ;
)
ŸŸ; <
;
ŸŸ< =
else
⁄⁄ 
if
⁄⁄ 
(
⁄⁄ 
time
⁄⁄ !
>
⁄⁄" #
duration
⁄⁄$ ,
)
⁄⁄, -
time
€€ 
%=
€€ 
duration
€€  (
;
€€( )
break
‹‹ 
;
‹‹ 
case
ﬁﬁ 
ClipExtrapolation
ﬁﬁ &
.
ﬁﬁ& '
Hold
ﬁﬁ' +
:
ﬁﬁ+ ,
if
ﬂﬂ 
(
ﬂﬂ 
time
ﬂﬂ 
<
ﬂﬂ 
$num
ﬂﬂ  
)
ﬂﬂ  !
return
‡‡ 
$num
‡‡  
;
‡‡  !
if
·· 
(
·· 
time
·· 
>
·· 
duration
·· '
)
··' (
return
‚‚ 
duration
‚‚ '
;
‚‚' (
break
„„ 
;
„„ 
case
ÂÂ 
ClipExtrapolation
ÂÂ &
.
ÂÂ& '
PingPong
ÂÂ' /
:
ÂÂ/ 0
if
ÊÊ 
(
ÊÊ 
time
ÊÊ 
<
ÊÊ 
$num
ÊÊ  
)
ÊÊ  !
{
ÁÁ 
time
ËË 
=
ËË 
duration
ËË '
*
ËË( )
$num
ËË* +
-
ËË, -
(
ËË. /
-
ËË/ 0
time
ËË0 4
%
ËË5 6
(
ËË7 8
duration
ËË8 @
*
ËËA B
$num
ËËC D
)
ËËD E
)
ËËE F
;
ËËF G
time
ÈÈ 
=
ÈÈ 
duration
ÈÈ '
-
ÈÈ( )
Math
ÈÈ* .
.
ÈÈ. /
Abs
ÈÈ/ 2
(
ÈÈ2 3
time
ÈÈ3 7
-
ÈÈ8 9
duration
ÈÈ: B
)
ÈÈB C
;
ÈÈC D
}
ÍÍ 
else
ÎÎ 
{
ÏÏ 
time
ÌÌ 
=
ÌÌ 
time
ÌÌ #
%
ÌÌ$ %
(
ÌÌ& '
duration
ÌÌ' /
*
ÌÌ0 1
$num
ÌÌ2 5
)
ÌÌ5 6
;
ÌÌ6 7
time
ÓÓ 
=
ÓÓ 
duration
ÓÓ '
-
ÓÓ( )
Math
ÓÓ* .
.
ÓÓ. /
Abs
ÓÓ/ 2
(
ÓÓ2 3
time
ÓÓ3 7
-
ÓÓ8 9
duration
ÓÓ: B
)
ÓÓB C
;
ÓÓC D
}
ÔÔ 
break
 
;
 
case
ÚÚ 
ClipExtrapolation
ÚÚ &
.
ÚÚ& '
Continue
ÚÚ' /
:
ÚÚ/ 0
break
ÛÛ 
;
ÛÛ 
}
ÙÙ 
return
ıı 
time
ıı 
;
ıı 
}
ˆˆ 	
public
ââ 
void
ââ 
CreateCurves
ââ  
(
ââ  !
string
ââ! '
curvesClipName
ââ( 6
)
ââ6 7
{
ää 	
if
ãã 
(
ãã 
m_AnimationCurves
ãã !
!=
ãã" $
null
ãã% )
)
ãã) *
return
åå 
;
åå 
m_AnimationCurves
éé 
=
éé %
TimelineCreateUtilities
éé  7
.
éé7 8)
CreateAnimationClipForTrack
éé8 S
(
ééS T
string
ééT Z
.
ééZ [
IsNullOrEmpty
éé[ h
(
ééh i
curvesClipName
ééi w
)
ééw x
?
ééy z!
kDefaultCurvesNameéé{ ç
:ééé è
curvesClipNameééê û
,ééû ü
parentTrackéé† ´
,éé´ ¨
trueéé≠ ±
)éé± ≤
;éé≤ ≥
}
èè 	
void
íí ,
ISerializationCallbackReceiver
íí +
.
íí+ ,
OnBeforeSerialize
íí, =
(
íí= >
)
íí> ?
{
ìì 	
	m_Version
îî 
=
îî 
k_LatestVersion
îî '
;
îî' (
}
ïï 	
void
òò ,
ISerializationCallbackReceiver
òò +
.
òò+ , 
OnAfterDeserialize
òò, >
(
òò> ?
)
òò? @
{
ôô 	
if
öö 
(
öö 
	m_Version
öö 
<
öö 
k_LatestVersion
öö +
)
öö+ ,
{
õõ $
UpgradeToLatestVersion
úú &
(
úú& '
)
úú' (
;
úú( )
}
ùù 
}
ûû 	
public
§§ 
override
§§ 
string
§§ 
ToString
§§ '
(
§§' (
)
§§( )
{
•• 	
return
¶¶ 
UnityString
¶¶ 
.
¶¶ 
Format
¶¶ %
(
¶¶% &
$str
¶¶& I
,
¶¶I J
displayName
¶¶K V
,
¶¶V W
start
¶¶X ]
,
¶¶] ^
end
¶¶_ b
,
¶¶b c
clipIn
¶¶d j
,
¶¶j k
parentTrack
¶¶l w
)
¶¶w x
;
¶¶x y
}
ßß 	
public
ØØ 
void
ØØ 
ConformEaseValues
ØØ %
(
ØØ% &
)
ØØ& '
{
∞∞ 	
if
±± 
(
±± 
m_EaseInDuration
±±  
+
±±! "
m_EaseOutDuration
±±# 4
>
±±5 6
duration
±±7 ?
)
±±? @
{
≤≤ 
var
≥≥ 
ratio
≥≥ 
=
≥≥ "
CalculateEasingRatio
≥≥ 0
(
≥≥0 1
m_EaseInDuration
≥≥1 A
,
≥≥A B
m_EaseOutDuration
≥≥C T
)
≥≥T U
;
≥≥U V
m_EaseInDuration
¥¥  
=
¥¥! "
duration
¥¥# +
*
¥¥, -
ratio
¥¥. 3
;
¥¥3 4
m_EaseOutDuration
µµ !
=
µµ" #
duration
µµ$ ,
*
µµ- .
(
µµ/ 0
$num
µµ0 3
-
µµ4 5
ratio
µµ6 ;
)
µµ; <
;
µµ< =
}
∂∂ 
}
∑∑ 	
static
ππ 
double
ππ "
CalculateEasingRatio
ππ *
(
ππ* +
double
ππ+ 1
easeIn
ππ2 8
,
ππ8 9
double
ππ: @
easeOut
ππA H
)
ππH I
{
∫∫ 	
if
ªª 
(
ªª 
Math
ªª 
.
ªª 
Abs
ªª 
(
ªª 
easeIn
ªª 
-
ªª  !
easeOut
ªª" )
)
ªª) *
<
ªª+ ,
TimeUtility
ªª- 8
.
ªª8 9
kTimeEpsilon
ªª9 E
)
ªªE F
return
ºº 
$num
ºº 
;
ºº 
if
ææ 
(
ææ 
easeIn
ææ 
==
ææ 
$num
ææ 
)
ææ 
return
øø 
$num
øø 
;
øø 
if
¡¡ 
(
¡¡ 
easeOut
¡¡ 
==
¡¡ 
$num
¡¡ 
)
¡¡ 
return
¬¬ 
$num
¬¬ 
;
¬¬ 
return
ƒƒ 
easeIn
ƒƒ 
/
ƒƒ 
(
ƒƒ 
easeIn
ƒƒ #
+
ƒƒ$ %
easeOut
ƒƒ& -
)
ƒƒ- .
;
ƒƒ. /
}
≈≈ 	
internal
»» 
int
»» 

DirtyIndex
»» 
{
»»  !
get
»»" %
;
»»% &
private
»»' .
set
»»/ 2
;
»»2 3
}
»»4 5
internal
…… 
void
…… 
	MarkDirty
…… 
(
……  
)
……  !
{
   	

DirtyIndex
ÀÀ 
++
ÀÀ 
;
ÀÀ 
}
ÃÃ 	
void
ŒŒ 
UpdateDirty
ŒŒ 
(
ŒŒ 
double
ŒŒ 
oldValue
ŒŒ  (
,
ŒŒ( )
double
ŒŒ* 0
newValue
ŒŒ1 9
)
ŒŒ9 :
{
œœ 	
if
–– 
(
–– 
oldValue
–– 
!=
–– 
newValue
–– $
)
––$ %

DirtyIndex
—— 
++
—— 
;
—— 
}
““ 	
}
◊◊ 
;
◊◊ 
}ÿÿ °3
¢D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Animation\AnimationOutputWeightProcessor.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
class

 	*
AnimationOutputWeightProcessor


 (
:

) *%
ITimelineEvaluateCallback

+ D
{ 
struct 

WeightInfo 
{ 	
public 
Playable 
mixer !
;! "
public 
Playable 
parentMixer '
;' (
public 
int 
port 
; 
} 	#
AnimationPlayableOutput 
m_Output  (
;( )+
AnimationMotionXToDeltaPlayable '
m_MotionXPlayable( 9
;9 :
readonly 
List 
< 

WeightInfo  
>  !
m_Mixers" *
=+ ,
new- 0
List1 5
<5 6

WeightInfo6 @
>@ A
(A B
)B C
;C D
public *
AnimationOutputWeightProcessor -
(- .#
AnimationPlayableOutput. E
outputF L
)L M
{ 	
m_Output 
= 
output 
; 
output 
. 
	SetWeight 
( 
$num 
) 
;  

FindMixers 
( 
) 
; 
} 	
void 

FindMixers 
( 
) 
{ 	
var   
playable   
=   
m_Output   #
.  # $
GetSourcePlayable  $ 5
(  5 6
)  6 7
;  7 8
var!! 

outputPort!! 
=!! 
m_Output!! %
.!!% &
GetSourceOutputPort!!& 9
(!!9 :
)!!: ;
;!!; <
m_Mixers## 
.## 
Clear## 
(## 
)## 
;## 

FindMixers%% 
(%% 
playable%% 
,%%  

outputPort%%! +
,%%+ ,
playable%%- 5
.%%5 6
GetInput%%6 >
(%%> ?

outputPort%%? I
)%%I J
)%%J K
;%%K L
}&& 	
void)) 

FindMixers)) 
()) 
Playable))  
parent))! '
,))' (
int))) ,
port))- 1
,))1 2
Playable))3 ;
node))< @
)))@ A
{** 	
if++ 
(++ 
!++ 
node++ 
.++ 
IsValid++ 
(++ 
)++ 
)++  
return,, 
;,, 
var.. 
type.. 
=.. 
node.. 
... 
GetPlayableType.. +
(..+ ,
).., -
;..- .
if// 
(// 
type// 
==// 
typeof// 
(// "
AnimationMixerPlayable// 5
)//5 6
||//7 9
type//: >
==//? A
typeof//B H
(//H I'
AnimationLayerMixerPlayable//I d
)//d e
)//e f
{00 
int22 
subCount22 
=22 
node22 #
.22# $
GetInputCount22$ 1
(221 2
)222 3
;223 4
for33 
(33 
int33 
j33 
=33 
$num33 
;33 
j33  !
<33" #
subCount33$ ,
;33, -
j33. /
++33/ 1
)331 2
{44 

FindMixers55 
(55 
node55 #
,55# $
j55% &
,55& '
node55( ,
.55, -
GetInput55- 5
(555 6
j556 7
)557 8
)558 9
;559 :
}66 
var:: 

weightInfo:: 
=::  
new::! $

WeightInfo::% /
{;; 
parentMixer<< 
=<<  !
parent<<" (
,<<( )
mixer== 
=== 
node==  
,==  !
port>> 
=>> 
port>> 
,>>  
}?? 
;?? 
m_Mixers@@ 
.@@ 
Add@@ 
(@@ 

weightInfo@@ '
)@@' (
;@@( )
}AA 
elseBB 
{CC 
varDD 
countDD 
=DD 
nodeDD  
.DD  !
GetInputCountDD! .
(DD. /
)DD/ 0
;DD0 1
forEE 
(EE 
varEE 
iEE 
=EE 
$numEE 
;EE 
iEE  !
<EE" #
countEE$ )
;EE) *
iEE+ ,
++EE, .
)EE. /
{FF 

FindMixersGG 
(GG 
parentGG %
,GG% &
portGG' +
,GG+ ,
nodeGG- 1
.GG1 2
GetInputGG2 :
(GG: ;
iGG; <
)GG< =
)GG= >
;GG> ?
}HH 
}II 
}JJ 	
publicLL 
voidLL 
EvaluateLL 
(LL 
)LL 
{MM 	
floatNN 
weightNN 
=NN 
$numNN 
;NN 
m_OutputOO 
.OO 
	SetWeightOO 
(OO 
$numOO  
)OO  !
;OO! "
forPP 
(PP 
intPP 
iPP 
=PP 
$numPP 
;PP 
iPP 
<PP 
m_MixersPP  (
.PP( )
CountPP) .
;PP. /
iPP0 1
++PP1 3
)PP3 4
{QQ 
varRR 
mixInfoRR 
=RR 
m_MixersRR &
[RR& '
iRR' (
]RR( )
;RR) *
weightSS 
=SS 
WeightUtilitySS &
.SS& '
NormalizeMixerSS' 5
(SS5 6
mixInfoSS6 =
.SS= >
mixerSS> C
)SSC D
;SSD E
mixInfoTT 
.TT 
parentMixerTT #
.TT# $
SetInputWeightTT$ 2
(TT2 3
mixInfoTT3 :
.TT: ;
portTT; ?
,TT? @
weightTTA G
)TTG H
;TTH I
}UU 
ifYY 
(YY 
ApplicationYY 
.YY 
	isPlayingYY %
)YY% &
m_OutputZZ 
.ZZ 
	SetWeightZZ "
(ZZ" #
weightZZ# )
)ZZ) *
;ZZ* +
}[[ 	
}\\ 
}]] ˘
áD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Events\Marker.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
public 

abstract 
class 
Marker  
:! "
ScriptableObject# 3
,3 4
IMarker5 <
{ 
[ 	
SerializeField	 
, 
	TimeField "
," #
Tooltip$ +
(+ ,
$str, A
)A B
]B C
doubleD J
m_TimeK Q
;Q R
public 

TrackAsset 
parent  
{! "
get# &
;& '
private( /
set0 3
;3 4
}5 6
public 
double 
time 
{ 	
get 
{ 
return 
m_Time 
;  
}! "
set 
{ 
m_Time 
= 
Math 
.  
Max  #
(# $
value$ )
,) *
$num+ ,
), -
;- .
}/ 0
} 	
void 
IMarker 
. 

Initialize 
(  

TrackAsset  *
parentTrack+ 6
)6 7
{ 	
if!! 
(!! 
parent!! 
==!! 
null!! 
)!! 
{"" 
parent## 
=## 
parentTrack## $
;##$ %
try$$ 
{%% 
OnInitialize&&  
(&&  !
parentTrack&&! ,
)&&, -
;&&- .
}'' 
catch(( 
((( 
	Exception((  
e((! "
)((" #
{)) 
Debug** 
.** 
LogError** "
(**" #
e**# $
.**$ %
Message**% ,
,**, -
this**. 2
)**2 3
;**3 4
}++ 
},, 
}-- 	
public33 
virtual33 
void33 
OnInitialize33 (
(33( )

TrackAsset33) 3
aPent334 9
)339 :
{44 	
}55 	
}66 
}77 Óá
ÜD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\DiscreteTime.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
struct 

DiscreteTime 
: 
IComparable %
{ 
const 
double 
k_Tick 
= 
$num #
;# $
public 
static 
readonly 
DiscreteTime +
kMaxTime, 4
=5 6
new7 :
DiscreteTime; G
(G H
Int64H M
.M N
MaxValueN V
)V W
;W X
readonly

 
Int64

 
m_DiscreteTime

 %
;

% &
public 
static 
double 
	tickValue &
{' (
get) ,
{- .
return/ 5
k_Tick6 <
;< =
}> ?
}@ A
public 
DiscreteTime 
( 
DiscreteTime (
time) -
)- .
{ 	
m_DiscreteTime 
= 
time !
.! "
m_DiscreteTime" 0
;0 1
} 	
DiscreteTime 
( 
Int64 
time 
)  
{ 	
m_DiscreteTime 
= 
time !
;! "
} 	
public 
DiscreteTime 
( 
double "
time# '
)' (
{ 	
m_DiscreteTime 
=  
DoubleToDiscreteTime 1
(1 2
time2 6
)6 7
;7 8
} 	
public 
DiscreteTime 
( 
float !
time" &
)& '
{ 	
m_DiscreteTime 
= 
FloatToDiscreteTime 0
(0 1
time1 5
)5 6
;6 7
}   	
public"" 
DiscreteTime"" 
("" 
int"" 
time""  $
)""$ %
{## 	
m_DiscreteTime$$ 
=$$ 
IntToDiscreteTime$$ .
($$. /
time$$/ 3
)$$3 4
;$$4 5
}%% 	
public'' 
DiscreteTime'' 
('' 
int'' 
frame''  %
,''% &
double''' -
fps''. 1
)''1 2
{(( 	
m_DiscreteTime)) 
=))  
DoubleToDiscreteTime)) 1
())1 2
frame))2 7
*))8 9
fps)): =
)))= >
;))> ?
}** 	
public,, 
DiscreteTime,, 
OneTickBefore,, )
(,,) *
),,* +
{-- 	
return.. 
new.. 
DiscreteTime.. #
(..# $
m_DiscreteTime..$ 2
-..3 4
$num..5 6
)..6 7
;..7 8
}// 	
public11 
DiscreteTime11 
OneTickAfter11 (
(11( )
)11) *
{22 	
return33 
new33 
DiscreteTime33 #
(33# $
m_DiscreteTime33$ 2
+333 4
$num335 6
)336 7
;337 8
}44 	
public66 
Int6466 
GetTick66 
(66 
)66 
{77 	
return88 
m_DiscreteTime88 !
;88! "
}99 	
public;; 
static;; 
DiscreteTime;; "
	FromTicks;;# ,
(;;, -
Int64;;- 2
ticks;;3 8
);;8 9
{<< 	
return== 
new== 
DiscreteTime== #
(==# $
ticks==$ )
)==) *
;==* +
}>> 	
public@@ 
int@@ 
	CompareTo@@ 
(@@ 
object@@ #
obj@@$ '
)@@' (
{AA 	
ifBB 
(BB 
objBB 
isBB 
DiscreteTimeBB #
)BB# $
returnCC 
m_DiscreteTimeCC %
.CC% &
	CompareToCC& /
(CC/ 0
(CC0 1
(CC1 2
DiscreteTimeCC2 >
)CC> ?
objCC? B
)CCB C
.CCC D
m_DiscreteTimeCCD R
)CCR S
;CCS T
returnDD 
$numDD 
;DD 
}EE 	
publicGG 
boolGG 
EqualsGG 
(GG 
DiscreteTimeGG '
otherGG( -
)GG- .
{HH 	
returnII 
m_DiscreteTimeII !
==II" $
otherII% *
.II* +
m_DiscreteTimeII+ 9
;II9 :
}JJ 	
publicLL 
overrideLL 
boolLL 
EqualsLL #
(LL# $
objectLL$ *
objLL+ .
)LL. /
{MM 	
ifNN 
(NN 
objNN 
isNN 
DiscreteTimeNN #
)NN# $
returnOO 
EqualsOO 
(OO 
(OO 
DiscreteTimeOO +
)OO+ ,
objOO, /
)OO/ 0
;OO0 1
returnPP 
falsePP 
;PP 
}QQ 	
staticSS 
Int64SS  
DoubleToDiscreteTimeSS )
(SS) *
doubleSS* 0
timeSS1 5
)SS5 6
{TT 	
doubleUU 
numberUU 
=UU 
(UU 
timeUU !
/UU" #
k_TickUU$ *
)UU* +
+UU, -
$numUU. 1
;UU1 2
ifVV 
(VV 
numberVV 
<VV 
Int64VV 
.VV 
MaxValueVV '
&&VV( *
numberVV+ 1
>VV2 3
Int64VV4 9
.VV9 :
MinValueVV: B
)VVB C
returnWW 
(WW 
Int64WW 
)WW 
numberWW $
;WW$ %
throwXX 
newXX '
ArgumentOutOfRangeExceptionXX 1
(XX1 2
$strXX2 T
)XXT U
;XXU V
}YY 	
static[[ 
Int64[[ 
FloatToDiscreteTime[[ (
([[( )
float[[) .
time[[/ 3
)[[3 4
{\\ 	
float]] 
number]] 
=]] 
(]] 
time]]  
/]]! "
(]]# $
float]]$ )
)]]) *
k_Tick]]* 0
)]]0 1
+]]2 3
$num]]4 8
;]]8 9
if^^ 
(^^ 
number^^ 
<^^ 
Int64^^ 
.^^ 
MaxValue^^ '
&&^^( *
number^^+ 1
>^^2 3
Int64^^4 9
.^^9 :
MinValue^^: B
)^^B C
return__ 
(__ 
Int64__ 
)__ 
number__ $
;__$ %
throw`` 
new`` '
ArgumentOutOfRangeException`` 1
(``1 2
$str``2 T
)``T U
;``U V
}aa 	
staticcc 
Int64cc 
IntToDiscreteTimecc &
(cc& '
intcc' *
timecc+ /
)cc/ 0
{dd 	
returnee  
DoubleToDiscreteTimeee '
(ee' (
timeee( ,
)ee, -
;ee- .
}ff 	
statichh 
doublehh 
ToDoublehh 
(hh 
Int64hh $
timehh% )
)hh) *
{ii 	
returnjj 
timejj 
*jj 
k_Tickjj  
;jj  !
}kk 	
staticmm 
floatmm 
ToFloatmm 
(mm 
Int64mm "
timemm# '
)mm' (
{nn 	
returnoo 
(oo 
floatoo 
)oo 
ToDoubleoo "
(oo" #
timeoo# '
)oo' (
;oo( )
}pp 	
publicrr 
staticrr 
explicitrr 
operatorrr '
doublerr( .
(rr. /
DiscreteTimerr/ ;
brr< =
)rr= >
{ss 	
returntt 
ToDoublett 
(tt 
btt 
.tt 
m_DiscreteTimett ,
)tt, -
;tt- .
}uu 	
publicww 
staticww 
explicitww 
operatorww '
floatww( -
(ww- .
DiscreteTimeww. :
bww; <
)ww< =
{xx 	
returnyy 
ToFloatyy 
(yy 
byy 
.yy 
m_DiscreteTimeyy +
)yy+ ,
;yy, -
}zz 	
public|| 
static|| 
explicit|| 
operator|| '
Int64||( -
(||- .
DiscreteTime||. :
b||; <
)||< =
{}} 	
return~~ 
b~~ 
.~~ 
m_DiscreteTime~~ #
;~~# $
} 	
public
ÅÅ 
static
ÅÅ 
explicit
ÅÅ 
operator
ÅÅ '
DiscreteTime
ÅÅ( 4
(
ÅÅ4 5
double
ÅÅ5 ;
time
ÅÅ< @
)
ÅÅ@ A
{
ÇÇ 	
return
ÉÉ 
new
ÉÉ 
DiscreteTime
ÉÉ #
(
ÉÉ# $
time
ÉÉ$ (
)
ÉÉ( )
;
ÉÉ) *
}
ÑÑ 	
public
ÜÜ 
static
ÜÜ 
explicit
ÜÜ 
operator
ÜÜ '
DiscreteTime
ÜÜ( 4
(
ÜÜ4 5
float
ÜÜ5 :
time
ÜÜ; ?
)
ÜÜ? @
{
áá 	
return
àà 
new
àà 
DiscreteTime
àà #
(
àà# $
time
àà$ (
)
àà( )
;
àà) *
}
ââ 	
public
ãã 
static
ãã 
implicit
ãã 
operator
ãã '
DiscreteTime
ãã( 4
(
ãã4 5
Int32
ãã5 :
time
ãã; ?
)
ãã? @
{
åå 	
return
çç 
new
çç 
DiscreteTime
çç #
(
çç# $
time
çç$ (
)
çç( )
;
çç) *
}
éé 	
public
êê 
static
êê 
explicit
êê 
operator
êê '
DiscreteTime
êê( 4
(
êê4 5
Int64
êê5 :
time
êê; ?
)
êê? @
{
ëë 	
return
íí 
new
íí 
DiscreteTime
íí #
(
íí# $
time
íí$ (
)
íí( )
;
íí) *
}
ìì 	
public
ïï 
static
ïï 
bool
ïï 
operator
ïï #
==
ïï# %
(
ïï% &
DiscreteTime
ïï& 2
lhs
ïï3 6
,
ïï6 7
DiscreteTime
ïï8 D
rhs
ïïE H
)
ïïH I
{
ññ 	
return
óó 
lhs
óó 
.
óó 
m_DiscreteTime
óó %
==
óó& (
rhs
óó) ,
.
óó, -
m_DiscreteTime
óó- ;
;
óó; <
}
òò 	
public
öö 
static
öö 
bool
öö 
operator
öö #
!=
öö# %
(
öö% &
DiscreteTime
öö& 2
lhs
öö3 6
,
öö6 7
DiscreteTime
öö8 D
rhs
ööE H
)
ööH I
{
õõ 	
return
úú 
!
úú 
(
úú 
lhs
úú 
==
úú 
rhs
úú 
)
úú  
;
úú  !
}
ùù 	
public
üü 
static
üü 
bool
üü 
operator
üü #
>
üü# $
(
üü$ %
DiscreteTime
üü% 1
lhs
üü2 5
,
üü5 6
DiscreteTime
üü7 C
rhs
üüD G
)
üüG H
{
†† 	
return
°° 
lhs
°° 
.
°° 
m_DiscreteTime
°° %
>
°°& '
rhs
°°( +
.
°°+ ,
m_DiscreteTime
°°, :
;
°°: ;
}
¢¢ 	
public
§§ 
static
§§ 
bool
§§ 
operator
§§ #
<
§§# $
(
§§$ %
DiscreteTime
§§% 1
lhs
§§2 5
,
§§5 6
DiscreteTime
§§7 C
rhs
§§D G
)
§§G H
{
•• 	
return
¶¶ 
lhs
¶¶ 
.
¶¶ 
m_DiscreteTime
¶¶ %
<
¶¶& '
rhs
¶¶( +
.
¶¶+ ,
m_DiscreteTime
¶¶, :
;
¶¶: ;
}
ßß 	
public
©© 
static
©© 
bool
©© 
operator
©© #
<=
©©# %
(
©©% &
DiscreteTime
©©& 2
lhs
©©3 6
,
©©6 7
DiscreteTime
©©8 D
rhs
©©E H
)
©©H I
{
™™ 	
return
´´ 
lhs
´´ 
.
´´ 
m_DiscreteTime
´´ %
<=
´´& (
rhs
´´) ,
.
´´, -
m_DiscreteTime
´´- ;
;
´´; <
}
¨¨ 	
public
ÆÆ 
static
ÆÆ 
bool
ÆÆ 
operator
ÆÆ #
>=
ÆÆ# %
(
ÆÆ% &
DiscreteTime
ÆÆ& 2
lhs
ÆÆ3 6
,
ÆÆ6 7
DiscreteTime
ÆÆ8 D
rhs
ÆÆE H
)
ÆÆH I
{
ØØ 	
return
∞∞ 
lhs
∞∞ 
.
∞∞ 
m_DiscreteTime
∞∞ %
>=
∞∞& (
rhs
∞∞) ,
.
∞∞, -
m_DiscreteTime
∞∞- ;
;
∞∞; <
}
±± 	
public
≥≥ 
static
≥≥ 
DiscreteTime
≥≥ "
operator
≥≥# +
+
≥≥+ ,
(
≥≥, -
DiscreteTime
≥≥- 9
lhs
≥≥: =
,
≥≥= >
DiscreteTime
≥≥? K
rhs
≥≥L O
)
≥≥O P
{
¥¥ 	
return
µµ 
new
µµ 
DiscreteTime
µµ #
(
µµ# $
lhs
µµ$ '
.
µµ' (
m_DiscreteTime
µµ( 6
+
µµ7 8
rhs
µµ9 <
.
µµ< =
m_DiscreteTime
µµ= K
)
µµK L
;
µµL M
}
∂∂ 	
public
∏∏ 
static
∏∏ 
DiscreteTime
∏∏ "
operator
∏∏# +
-
∏∏+ ,
(
∏∏, -
DiscreteTime
∏∏- 9
lhs
∏∏: =
,
∏∏= >
DiscreteTime
∏∏? K
rhs
∏∏L O
)
∏∏O P
{
ππ 	
return
∫∫ 
new
∫∫ 
DiscreteTime
∫∫ #
(
∫∫# $
lhs
∫∫$ '
.
∫∫' (
m_DiscreteTime
∫∫( 6
-
∫∫7 8
rhs
∫∫9 <
.
∫∫< =
m_DiscreteTime
∫∫= K
)
∫∫K L
;
∫∫L M
}
ªª 	
public
ΩΩ 
override
ΩΩ 
string
ΩΩ 
ToString
ΩΩ '
(
ΩΩ' (
)
ΩΩ( )
{
ææ 	
return
øø 
m_DiscreteTime
øø !
.
øø! "
ToString
øø" *
(
øø* +
)
øø+ ,
;
øø, -
}
¿¿ 	
public
¬¬ 
override
¬¬ 
int
¬¬ 
GetHashCode
¬¬ '
(
¬¬' (
)
¬¬( )
{
√√ 	
return
ƒƒ 
m_DiscreteTime
ƒƒ !
.
ƒƒ! "
GetHashCode
ƒƒ" -
(
ƒƒ- .
)
ƒƒ. /
;
ƒƒ/ 0
}
≈≈ 	
public
«« 
static
«« 
DiscreteTime
«« "
Min
««# &
(
««& '
DiscreteTime
««' 3
lhs
««4 7
,
««7 8
DiscreteTime
««9 E
rhs
««F I
)
««I J
{
»» 	
return
…… 
new
…… 
DiscreteTime
…… #
(
……# $
Math
……$ (
.
……( )
Min
……) ,
(
……, -
lhs
……- 0
.
……0 1
m_DiscreteTime
……1 ?
,
……? @
rhs
……A D
.
……D E
m_DiscreteTime
……E S
)
……S T
)
……T U
;
……U V
}
   	
public
ÃÃ 
static
ÃÃ 
DiscreteTime
ÃÃ "
Max
ÃÃ# &
(
ÃÃ& '
DiscreteTime
ÃÃ' 3
lhs
ÃÃ4 7
,
ÃÃ7 8
DiscreteTime
ÃÃ9 E
rhs
ÃÃF I
)
ÃÃI J
{
ÕÕ 	
return
ŒŒ 
new
ŒŒ 
DiscreteTime
ŒŒ #
(
ŒŒ# $
Math
ŒŒ$ (
.
ŒŒ( )
Max
ŒŒ) ,
(
ŒŒ, -
lhs
ŒŒ- 0
.
ŒŒ0 1
m_DiscreteTime
ŒŒ1 ?
,
ŒŒ? @
rhs
ŒŒA D
.
ŒŒD E
m_DiscreteTime
ŒŒE S
)
ŒŒS T
)
ŒŒT U
;
ŒŒU V
}
œœ 	
public
—— 
static
—— 
double
—— 
SnapToNearestTick
—— .
(
——. /
double
——/ 5
time
——6 :
)
——: ;
{
““ 	
Int64
”” 
discreteTime
”” 
=
””  "
DoubleToDiscreteTime
””! 5
(
””5 6
time
””6 :
)
””: ;
;
””; <
return
‘‘ 
ToDouble
‘‘ 
(
‘‘ 
discreteTime
‘‘ (
)
‘‘( )
;
‘‘) *
}
’’ 	
public
◊◊ 
static
◊◊ 
float
◊◊ 
SnapToNearestTick
◊◊ -
(
◊◊- .
float
◊◊. 3
time
◊◊4 8
)
◊◊8 9
{
ÿÿ 	
Int64
ŸŸ 
discreteTime
ŸŸ 
=
ŸŸ  !
FloatToDiscreteTime
ŸŸ! 4
(
ŸŸ4 5
time
ŸŸ5 9
)
ŸŸ9 :
;
ŸŸ: ;
return
⁄⁄ 
ToFloat
⁄⁄ 
(
⁄⁄ 
discreteTime
⁄⁄ '
)
⁄⁄' (
;
⁄⁄( )
}
€€ 	
public
›› 
static
›› 
Int64
›› 
GetNearestTick
›› *
(
››* +
double
››+ 1
time
››2 6
)
››6 7
{
ﬁﬁ 	
return
ﬂﬂ "
DoubleToDiscreteTime
ﬂﬂ '
(
ﬂﬂ' (
time
ﬂﬂ( ,
)
ﬂﬂ, -
;
ﬂﬂ- .
}
‡‡ 	
}
·· 
}‚‚ ¬õ
ùD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Playables\TimeNotificationBehaviour.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
public 

class %
TimeNotificationBehaviour *
:+ ,
PlayableBehaviour- >
{ 
struct 
NotificationEntry  
{ 	
public 
double 
time 
; 
public 
INotification  
payload! (
;( )
public 
bool 
notificationFired )
;) *
public 
NotificationFlags $
flags% *
;* +
public 
bool 
triggerInEditor '
{ 
get 
{ 
return 
( 
flags #
&$ %
NotificationFlags& 7
.7 8
TriggerInEditMode8 I
)I J
!=K M
$numN O
;O P
}Q R
} 
public 
bool 
prewarm 
{ 
get 
{ 
return 
( 
flags #
&$ %
NotificationFlags& 7
.7 8
Retroactive8 C
)C D
!=E G
$numH I
;I J
}K L
} 
public 
bool 
triggerOnce #
{ 
get 
{ 
return 
( 
flags #
&$ %
NotificationFlags& 7
.7 8
TriggerOnce8 C
)C D
!=E G
$numH I
;I J
}K L
} 
}   	
readonly"" 
List"" 
<"" 
NotificationEntry"" '
>""' (
m_Notifications"") 8
=""9 :
new""; >
List""? C
<""C D
NotificationEntry""D U
>""U V
(""V W
)""W X
;""X Y
double## 
m_PreviousTime## 
;## 
bool$$ #
m_NeedSortNotifications$$ $
;$$$ %
Playable&& 
m_TimeSource&& 
;&& 
public.. 
Playable.. 

timeSource.. "
{// 	
set00 
{00 
m_TimeSource00 
=00  
value00! &
;00& '
}00( )
}11 	
public:: 
static:: 
ScriptPlayable:: $
<::$ %%
TimeNotificationBehaviour::% >
>::> ?
Create::@ F
(::F G
PlayableGraph::G T
graph::U Z
,::Z [
double::\ b
duration::c k
,::k l
DirectorWrapMode::m }
loopMode	::~ Ü
)
::Ü á
{;; 	
var<< !
notificationsPlayable<< %
=<<& '
ScriptPlayable<<( 6
<<<6 7%
TimeNotificationBehaviour<<7 P
><<P Q
.<<Q R
Create<<R X
(<<X Y
graph<<Y ^
)<<^ _
;<<_ `!
notificationsPlayable== !
.==! "
SetDuration==" -
(==- .
duration==. 6
)==6 7
;==7 8!
notificationsPlayable>> !
.>>! "
SetTimeWrapMode>>" 1
(>>1 2
loopMode>>2 :
)>>: ;
;>>; <!
notificationsPlayable?? !
.??! "
SetPropagateSetTime??" 5
(??5 6
true??6 :
)??: ;
;??; <
return@@ !
notificationsPlayable@@ (
;@@( )
}AA 	
publicJJ 
voidJJ 
AddNotificationJJ #
(JJ# $
doubleJJ$ *
timeJJ+ /
,JJ/ 0
INotificationJJ1 >
payloadJJ? F
,JJF G
NotificationFlagsJJH Y
flagsJJZ _
=JJ` a
NotificationFlagsJJb s
.JJs t
RetroactiveJJt 
)	JJ Ä
{KK 	
m_NotificationsLL 
.LL 
AddLL 
(LL  
newLL  #
NotificationEntryLL$ 5
{MM 
timeNN 
=NN 
timeNN 
,NN 
payloadOO 
=OO 
payloadOO !
,OO! "
flagsPP 
=PP 
flagsPP 
}QQ 
)QQ 
;QQ #
m_NeedSortNotificationsRR #
=RR$ %
trueRR& *
;RR* +
}SS 	
publicYY 
overrideYY 
voidYY 
OnGraphStartYY )
(YY) *
PlayableYY* 2
playableYY3 ;
)YY; <
{ZZ 	
SortNotifications[[ 
([[ 
)[[ 
;[[  
var\\ 
currentTime\\ 
=\\ 
playable\\ &
.\\& '
GetTime\\' .
(\\. /
)\\/ 0
;\\0 1
for]] 
(]] 
var]] 
i]] 
=]] 
$num]] 
;]] 
i]] 
<]] 
m_Notifications]]  /
.]]/ 0
Count]]0 5
;]]5 6
i]]7 8
++]]8 :
)]]: ;
{^^ 
if`` 
(`` 
m_Notifications`` #
[``# $
i``$ %
]``% &
.``& '
time``' +
>``, -
currentTime``. 9
&&``: <
!``= >
m_Notifications``> M
[``M N
i``N O
]``O P
.``P Q
triggerOnce``Q \
)``\ ]
{aa 
varbb 
notificationbb $
=bb% &
m_Notificationsbb' 6
[bb6 7
ibb7 8
]bb8 9
;bb9 :
notificationcc  
.cc  !
notificationFiredcc! 2
=cc3 4
falsecc5 :
;cc: ;
m_Notificationsdd #
[dd# $
idd$ %
]dd% &
=dd' (
notificationdd) 5
;dd5 6
}ee 
}ff 
m_PreviousTimegg 
=gg 
playablegg %
.gg% &
GetTimegg& -
(gg- .
)gg. /
;gg/ 0
}hh 	
publicoo 
overrideoo 
voidoo 
OnBehaviourPauseoo -
(oo- .
Playableoo. 6
playableoo7 ?
,oo? @
	FrameDataooA J
infoooK O
)ooO P
{pp 	
ifqq 
(qq 
playableqq 
.qq 
IsDoneqq 
(qq  
)qq  !
)qq! "
{rr 
SortNotificationsss !
(ss! "
)ss" #
;ss# $
fortt 
(tt 
vartt 
itt 
=tt 
$numtt 
;tt 
itt  !
<tt" #
m_Notificationstt$ 3
.tt3 4
Counttt4 9
;tt9 :
itt; <
++tt< >
)tt> ?
{uu 
varvv 
evv 
=vv 
m_Notificationsvv +
[vv+ ,
ivv, -
]vv- .
;vv. /
ifww 
(ww 
!ww 
eww 
.ww 
notificationFiredww ,
)ww, -
{xx 
varyy 
durationyy $
=yy% &
playableyy' /
.yy/ 0
GetDurationyy0 ;
(yy; <
)yy< =
;yy= >
varzz 

canTriggerzz &
=zz' (
m_PreviousTimezz) 7
<=zz8 :
ezz; <
.zz< =
timezz= A
&&zzB D
ezzE F
.zzF G
timezzG K
<=zzL N
durationzzO W
;zzW X
if{{ 
({{ 

canTrigger{{ &
){{& '
{|| 
Trigger_internal}} ,
(}}, -
playable}}- 5
,}}5 6
info}}7 ;
.}}; <
output}}< B
,}}B C
ref}}D G
e}}H I
)}}I J
;}}J K
m_Notifications~~ +
[~~+ ,
i~~, -
]~~- .
=~~/ 0
e~~1 2
;~~2 3
} 
}
ÄÄ 
}
ÅÅ 
}
ÇÇ 
}
ÉÉ 	
public
çç 
override
çç 
void
çç 
PrepareFrame
çç )
(
çç) *
Playable
çç* 2
playable
çç3 ;
,
çç; <
	FrameData
çç= F
info
ççG K
)
ççK L
{
éé 	
if
êê 
(
êê 
info
êê 
.
êê 
evaluationType
êê #
==
êê$ &
	FrameData
êê' 0
.
êê0 1
EvaluationType
êê1 ?
.
êê? @
Evaluate
êê@ H
)
êêH I
{
ëë 
return
íí 
;
íí 
}
ìì ,
SyncDurationWithExternalSource
ïï *
(
ïï* +
playable
ïï+ 3
)
ïï3 4
;
ïï4 5
SortNotifications
ññ 
(
ññ 
)
ññ 
;
ññ  
var
óó 
currentTime
óó 
=
óó 
playable
óó &
.
óó& '
GetTime
óó' .
(
óó. /
)
óó/ 0
;
óó0 1
if
öö 
(
öö 
info
öö 
.
öö 

timeLooped
öö 
)
öö  
{
õõ 
var
úú 
duration
úú 
=
úú 
playable
úú '
.
úú' (
GetDuration
úú( 3
(
úú3 4
)
úú4 5
;
úú5 6)
TriggerNotificationsInRange
ùù +
(
ùù+ ,
m_PreviousTime
ùù, :
,
ùù: ;
duration
ùù< D
,
ùùD E
info
ùùF J
,
ùùJ K
playable
ùùL T
,
ùùT U
true
ùùV Z
)
ùùZ [
;
ùù[ \
var
ûû 
dx
ûû 
=
ûû 
playable
ûû !
.
ûû! "
GetDuration
ûû" -
(
ûû- .
)
ûû. /
-
ûû0 1
m_PreviousTime
ûû2 @
;
ûû@ A
var
üü 
nFullTimelines
üü "
=
üü# $
(
üü% &
int
üü& )
)
üü) *
(
üü* +
(
üü+ ,
info
üü, 0
.
üü0 1
	deltaTime
üü1 :
*
üü; <
info
üü= A
.
üüA B
effectiveSpeed
üüB P
-
üüQ R
dx
üüS U
)
üüU V
/
üüW X
playable
üüY a
.
üüa b
GetDuration
üüb m
(
üüm n
)
üün o
)
üüo p
;
üüp q
for
†† 
(
†† 
var
†† 
i
†† 
=
†† 
$num
†† 
;
†† 
i
††  !
<
††" #
nFullTimelines
††$ 2
;
††2 3
i
††4 5
++
††5 7
)
††7 8
{
°° )
TriggerNotificationsInRange
¢¢ /
(
¢¢/ 0
$num
¢¢0 1
,
¢¢1 2
duration
¢¢3 ;
,
¢¢; <
info
¢¢= A
,
¢¢A B
playable
¢¢C K
,
¢¢K L
false
¢¢M R
)
¢¢R S
;
¢¢S T
}
££ )
TriggerNotificationsInRange
§§ +
(
§§+ ,
$num
§§, -
,
§§- .
currentTime
§§/ :
,
§§: ;
info
§§< @
,
§§@ A
playable
§§B J
,
§§J K
false
§§L Q
)
§§Q R
;
§§R S
}
•• 
else
¶¶ 
{
ßß 
var
®® 
pt
®® 
=
®® 
playable
®® !
.
®®! "
GetTime
®®" )
(
®®) *
)
®®* +
;
®®+ ,)
TriggerNotificationsInRange
©© +
(
©©+ ,
m_PreviousTime
©©, :
,
©©: ;
pt
©©< >
,
©©> ?
info
©©@ D
,
©©D E
playable
™™ 
,
™™ 
true
™™ "
)
™™" #
;
™™# $
}
´´ 
for
≠≠ 
(
≠≠ 
var
≠≠ 
i
≠≠ 
=
≠≠ 
$num
≠≠ 
;
≠≠ 
i
≠≠ 
<
≠≠ 
m_Notifications
≠≠  /
.
≠≠/ 0
Count
≠≠0 5
;
≠≠5 6
++
≠≠7 9
i
≠≠9 :
)
≠≠: ;
{
ÆÆ 
var
ØØ 
e
ØØ 
=
ØØ 
m_Notifications
ØØ '
[
ØØ' (
i
ØØ( )
]
ØØ) *
;
ØØ* +
if
∞∞ 
(
∞∞ 
e
∞∞ 
.
∞∞ 
notificationFired
∞∞ '
&&
∞∞( *$
CanRestoreNotification
∞∞+ A
(
∞∞A B
e
∞∞B C
,
∞∞C D
info
∞∞E I
,
∞∞I J
currentTime
∞∞K V
,
∞∞V W
m_PreviousTime
∞∞X f
)
∞∞f g
)
∞∞g h
{
±± 
Restore_internal
≤≤ $
(
≤≤$ %
ref
≤≤% (
e
≤≤) *
)
≤≤* +
;
≤≤+ ,
m_Notifications
≥≥ #
[
≥≥# $
i
≥≥$ %
]
≥≥% &
=
≥≥' (
e
≥≥) *
;
≥≥* +
}
¥¥ 
}
µµ 
m_PreviousTime
∑∑ 
=
∑∑ 
playable
∑∑ %
.
∑∑% &
GetTime
∑∑& -
(
∑∑- .
)
∑∑. /
;
∑∑/ 0
}
∏∏ 	
void
∫∫ 
SortNotifications
∫∫ 
(
∫∫ 
)
∫∫  
{
ªª 	
if
ºº 
(
ºº %
m_NeedSortNotifications
ºº '
)
ºº' (
{
ΩΩ 
m_Notifications
ææ 
.
ææ  
Sort
ææ  $
(
ææ$ %
(
ææ% &
x
ææ& '
,
ææ' (
y
ææ) *
)
ææ* +
=>
ææ, .
x
ææ/ 0
.
ææ0 1
time
ææ1 5
.
ææ5 6
	CompareTo
ææ6 ?
(
ææ? @
y
ææ@ A
.
ææA B
time
ææB F
)
ææF G
)
ææG H
;
ææH I%
m_NeedSortNotifications
øø '
=
øø( )
false
øø* /
;
øø/ 0
}
¿¿ 
}
¡¡ 	
static
√√ 
bool
√√ $
CanRestoreNotification
√√ *
(
√√* +
NotificationEntry
√√+ <
e
√√= >
,
√√> ?
	FrameData
√√@ I
info
√√J N
,
√√N O
double
√√P V
currentTime
√√W b
,
√√b c
double
√√d j
previousTime
√√k w
)
√√w x
{
ƒƒ 	
if
≈≈ 
(
≈≈ 
e
≈≈ 
.
≈≈ 
triggerOnce
≈≈ 
)
≈≈ 
return
∆∆ 
false
∆∆ 
;
∆∆ 
if
«« 
(
«« 
info
«« 
.
«« 

timeLooped
«« 
)
««  
return
»» 
true
»» 
;
»» 
return
ÀÀ 
previousTime
ÀÀ 
>
ÀÀ  !
currentTime
ÀÀ" -
&&
ÀÀ. 0
currentTime
ÀÀ1 <
<=
ÀÀ= ?
e
ÀÀ@ A
.
ÀÀA B
time
ÀÀB F
;
ÀÀF G
}
ÃÃ 	
void
ŒŒ )
TriggerNotificationsInRange
ŒŒ (
(
ŒŒ( )
double
ŒŒ) /
start
ŒŒ0 5
,
ŒŒ5 6
double
ŒŒ7 =
end
ŒŒ> A
,
ŒŒA B
	FrameData
ŒŒC L
info
ŒŒM Q
,
ŒŒQ R
Playable
ŒŒS [
playable
ŒŒ\ d
,
ŒŒd e
bool
ŒŒf j

checkState
ŒŒk u
)
ŒŒu v
{
œœ 	
if
–– 
(
–– 
start
–– 
<=
–– 
end
–– 
)
–– 
{
—— 
var
““ 
playMode
““ 
=
““ 
Application
““ *
.
““* +
	isPlaying
““+ 4
;
““4 5
for
”” 
(
”” 
var
”” 
i
”” 
=
”” 
$num
”” 
;
”” 
i
””  !
<
””" #
m_Notifications
””$ 3
.
””3 4
Count
””4 9
;
””9 :
i
””; <
++
””< >
)
””> ?
{
‘‘ 
var
’’ 
e
’’ 
=
’’ 
m_Notifications
’’ +
[
’’+ ,
i
’’, -
]
’’- .
;
’’. /
if
÷÷ 
(
÷÷ 
e
÷÷ 
.
÷÷ 
notificationFired
÷÷ +
&&
÷÷, .
(
÷÷/ 0

checkState
÷÷0 :
||
÷÷; =
e
÷÷> ?
.
÷÷? @
triggerOnce
÷÷@ K
)
÷÷K L
)
÷÷L M
continue
◊◊  
;
◊◊  !
var
ŸŸ 
notificationTime
ŸŸ (
=
ŸŸ) *
e
ŸŸ+ ,
.
ŸŸ, -
time
ŸŸ- 1
;
ŸŸ1 2
if
⁄⁄ 
(
⁄⁄ 
e
⁄⁄ 
.
⁄⁄ 
prewarm
⁄⁄ !
&&
⁄⁄" $
notificationTime
⁄⁄% 5
<
⁄⁄6 7
end
⁄⁄8 ;
&&
⁄⁄< >
(
⁄⁄? @
e
⁄⁄@ A
.
⁄⁄A B
triggerInEditor
⁄⁄B Q
||
⁄⁄R T
playMode
⁄⁄U ]
)
⁄⁄] ^
)
⁄⁄^ _
{
€€ 
Trigger_internal
‹‹ (
(
‹‹( )
playable
‹‹) 1
,
‹‹1 2
info
‹‹3 7
.
‹‹7 8
output
‹‹8 >
,
‹‹> ?
ref
‹‹@ C
e
‹‹D E
)
‹‹E F
;
‹‹F G
m_Notifications
›› '
[
››' (
i
››( )
]
››) *
=
››+ ,
e
››- .
;
››. /
}
ﬁﬁ 
else
ﬂﬂ 
{
‡‡ 
if
·· 
(
·· 
notificationTime
·· ,
<
··- .
start
··/ 4
||
··5 7
notificationTime
··8 H
>
··I J
end
··K N
)
··N O
continue
‚‚ $
;
‚‚$ %
if
‰‰ 
(
‰‰ 
e
‰‰ 
.
‰‰ 
triggerInEditor
‰‰ -
||
‰‰. 0
playMode
‰‰1 9
)
‰‰9 :
{
ÂÂ 
Trigger_internal
ÊÊ ,
(
ÊÊ, -
playable
ÊÊ- 5
,
ÊÊ5 6
info
ÊÊ7 ;
.
ÊÊ; <
output
ÊÊ< B
,
ÊÊB C
ref
ÊÊD G
e
ÊÊH I
)
ÊÊI J
;
ÊÊJ K
m_Notifications
ÁÁ +
[
ÁÁ+ ,
i
ÁÁ, -
]
ÁÁ- .
=
ÁÁ/ 0
e
ÁÁ1 2
;
ÁÁ2 3
}
ËË 
}
ÈÈ 
}
ÍÍ 
}
ÎÎ 
}
ÏÏ 	
void
ÓÓ ,
SyncDurationWithExternalSource
ÓÓ +
(
ÓÓ+ ,
Playable
ÓÓ, 4
playable
ÓÓ5 =
)
ÓÓ= >
{
ÔÔ 	
if
 
(
 
m_TimeSource
 
.
 
IsValid
 $
(
$ %
)
% &
)
& '
{
ÒÒ 
playable
ÚÚ 
.
ÚÚ 
SetDuration
ÚÚ $
(
ÚÚ$ %
m_TimeSource
ÚÚ% 1
.
ÚÚ1 2
GetDuration
ÚÚ2 =
(
ÚÚ= >
)
ÚÚ> ?
)
ÚÚ? @
;
ÚÚ@ A
playable
ÛÛ 
.
ÛÛ 
SetTimeWrapMode
ÛÛ (
(
ÛÛ( )
m_TimeSource
ÛÛ) 5
.
ÛÛ5 6
GetTimeWrapMode
ÛÛ6 E
(
ÛÛE F
)
ÛÛF G
)
ÛÛG H
;
ÛÛH I
}
ÙÙ 
}
ıı 	
static
˜˜ 
void
˜˜ 
Trigger_internal
˜˜ $
(
˜˜$ %
Playable
˜˜% -
playable
˜˜. 6
,
˜˜6 7
PlayableOutput
˜˜8 F
output
˜˜G M
,
˜˜M N
ref
˜˜P S
NotificationEntry
˜˜T e
e
˜˜f g
)
˜˜g h
{
¯¯ 	
output
˘˘ 
.
˘˘ 
PushNotification
˘˘ #
(
˘˘# $
playable
˘˘$ ,
,
˘˘, -
e
˘˘. /
.
˘˘/ 0
payload
˘˘0 7
)
˘˘7 8
;
˘˘8 9
e
˙˙ 
.
˙˙ 
notificationFired
˙˙ 
=
˙˙  !
true
˙˙" &
;
˙˙& '
}
˚˚ 	
static
˝˝ 
void
˝˝ 
Restore_internal
˝˝ $
(
˝˝$ %
ref
˝˝% (
NotificationEntry
˝˝) :
e
˝˝; <
)
˝˝< =
{
˛˛ 	
e
ˇˇ 
.
ˇˇ 
notificationFired
ˇˇ 
=
ˇˇ  !
false
ˇˇ" '
;
ˇˇ' (
}
ÄÄ 	
}
ÅÅ 
}ÇÇ ◊	
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Attributes\TrackColorAttribute.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[		 
AttributeUsage		 
(		 
AttributeTargets		 $
.		$ %
Class		% *
)		* +
]		+ ,
public

 

class

 
TrackColorAttribute

 $
:

% &
	Attribute

' 0
{ 
Color 
m_Color 
; 
public 
Color 
color 
{ 	
get 
{ 
return 
m_Color  
;  !
}" #
} 	
public 
TrackColorAttribute "
(" #
float# (
r) *
,* +
float, 1
g2 3
,3 4
float5 :
b; <
)< =
{ 	
m_Color 
= 
new 
Color 
(  
r  !
,! "
g# $
,$ %
b& '
)' (
;( )
} 	
}   
}!! °
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\AssetUpgrade\TimelineUpgrade.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
partial 
class 
TimelineAsset 
{ 
enum 
Versions 
{ 	
Initial 
= 
$num 
} 	
const		 
int		 
k_LatestVersion		 !
=		" #
(		$ %
int		% (
)		( )
Versions		) 1
.		1 2
Initial		2 9
;		9 :
[

 	
SerializeField

	 
,

 
HideInInspector

 (
]

( )
int

* -
	m_Version

. 7
;

7 8
void "
UpgradeToLatestVersion #
(# $
)$ %
{ 	
}	 

static 
class  
TimelineAssetUpgrade )
{ 	
}	 

} 
} ˙
íD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\AssetUpgrade\ClipUpgrade.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
partial 
class 
TimelineClip 
{ 
enum 
Versions 
{ 	
Initial 
= 
$num 
, #
ClipInFromGlobalToLocal #
=$ %
$num& '
}		 	
const

 
int

 
k_LatestVersion

 !
=

" #
(

$ %
int

% (
)

( )
Versions

) 1
.

1 2#
ClipInFromGlobalToLocal

2 I
;

I J
[ 	
SerializeField	 
, 
HideInInspector (
]( )
int* -
	m_Version. 7
;7 8
void "
UpgradeToLatestVersion #
(# $
)$ %
{ 	
if 
( 
	m_Version 
< 
( 
int  
)  !
Versions! )
.) *#
ClipInFromGlobalToLocal* A
)A B
{ 
TimelineClipUpgrade #
.# $*
UpgradeClipInFromGlobalToLocal$ B
(B C
thisC G
)G H
;H I
} 
} 	
static 
class 
TimelineClipUpgrade (
{ 	
public 
static 
void *
UpgradeClipInFromGlobalToLocal =
(= >
TimelineClip> J
clipK O
)O P
{ 
if 
( 
clip 
. 
m_ClipIn !
>" #
$num$ %
&&& (
clip) -
.- .
m_TimeScale. 9
>: ;
float< A
.A B
EpsilonB I
)I J
clip 
. 
m_ClipIn !
*=" $
clip% )
.) *
m_TimeScale* 5
;5 6
} 
}   	
}!! 
}"" √E
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Evaluation\ScheduleRuntimeClip.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
internal

 
class

 
ScheduleRuntimeClip

 &
:

' (
RuntimeClipBase

) 8
{ 
private 
TimelineClip 
m_Clip #
;# $
private 
Playable 

m_Playable #
;# $
private 
Playable 
m_ParentMixer &
;& '
private 
double 
m_StartDelay #
;# $
private 
double 
m_FinishTail #
;# $
private 
bool 
	m_Started 
=  
false! &
;& '
public 
override 
double 
start $
{ 	
get 
{ 
return 
Math 
. 
Max !
(! "
$num" #
,# $
m_Clip% +
.+ ,
start, 1
-2 3
m_StartDelay4 @
)@ A
;A B
}C D
} 	
public 
override 
double 
duration '
{ 	
get 
{ 
return 
m_Clip 
.  
duration  (
+) *
m_FinishTail+ 7
+8 9
m_Clip: @
.@ A
startA F
-G H
startI N
;N O
}P Q
} 	
public 
void 
SetTime 
( 
double "
time# '
)' (
{ 	

m_Playable   
.   
SetTime   
(   
time   #
)  # $
;  $ %
}!! 	
public## 
TimelineClip## 
clip##  
{##! "
get### &
{##' (
return##) /
m_Clip##0 6
;##6 7
}##8 9
}##: ;
public$$ 
Playable$$ 
mixer$$ 
{$$ 
get$$  #
{$$$ %
return$$& ,
m_ParentMixer$$- :
;$$: ;
}$$< =
}$$> ?
public%% 
Playable%% 
playable%%  
{%%! "
get%%# &
{%%' (
return%%) /

m_Playable%%0 :
;%%: ;
}%%< =
}%%> ?
public'' 
ScheduleRuntimeClip'' "
(''" #
TimelineClip''# /
clip''0 4
,''4 5
Playable''6 >
clipPlayable''? K
,''K L
Playable((# +
parentMixer((, 7
,((7 8
double((9 ?

startDelay((@ J
=((K L
$num((M P
,((P Q
double((R X

finishTail((Y c
=((d e
$num((f i
)((i j
{)) 	
Create** 
(** 
clip** 
,** 
clipPlayable** %
,**% &
parentMixer**' 2
,**2 3

startDelay**4 >
,**> ?

finishTail**@ J
)**J K
;**K L
}++ 	
private-- 
void-- 
Create-- 
(-- 
TimelineClip-- (
clip--) -
,--- .
Playable--/ 7
clipPlayable--8 D
,--D E
Playable--F N
parentMixer--O Z
,--Z [
double.. 

startDelay.. 
,.. 
double.. %

finishTail..& 0
)..0 1
{// 	
m_Clip00 
=00 
clip00 
;00 

m_Playable11 
=11 
clipPlayable11 %
;11% &
m_ParentMixer22 
=22 
parentMixer22 '
;22' (
m_StartDelay33 
=33 

startDelay33 %
;33% &
m_FinishTail44 
=44 

finishTail44 %
;44% &
clipPlayable55 
.55 
Pause55 
(55 
)55  
;55  !
}66 	
public88 
override88 
bool88 
enable88 #
{99 	
set:: 
{;; 
if<< 
(<< 
value<< 
&&<< 

m_Playable<< '
.<<' (
GetPlayState<<( 4
(<<4 5
)<<5 6
!=<<7 9
	PlayState<<: C
.<<C D
Playing<<D K
)<<K L
{== 

m_Playable>> 
.>> 
Play>> #
(>># $
)>>$ %
;>>% &
}?? 
else@@ 
if@@ 
(@@ 
!@@ 
value@@ 
&&@@  "

m_Playable@@# -
.@@- .
GetPlayState@@. :
(@@: ;
)@@; <
!=@@= ?
	PlayState@@@ I
.@@I J
Paused@@J P
)@@P Q
{AA 

m_PlayableBB 
.BB 
PauseBB $
(BB$ %
)BB% &
;BB& '
ifCC 
(CC 
m_ParentMixerCC %
.CC% &
IsValidCC& -
(CC- .
)CC. /
)CC/ 0
m_ParentMixerDD %
.DD% &
SetInputWeightDD& 4
(DD4 5

m_PlayableDD5 ?
,DD? @
$numDDA E
)DDE F
;DDF G
}EE 
	m_StartedGG 
&=GG 
valueGG "
;GG" #
}HH 
}II 	
publicKK 
overrideKK 
voidKK 

EvaluateAtKK '
(KK' (
doubleKK( .
	localTimeKK/ 8
,KK8 9
	FrameDataKK: C
	frameDataKKD M
)KKM N
{LL 	
ifMM 
(MM 
	frameDataMM 
.MM 
timeHeldMM "
)MM" #
{NN 
enableOO 
=OO 
falseOO 
;OO 
returnPP 
;PP 
}QQ 
boolTT 
	forceSeekTT 
=TT 
	frameDataTT &
.TT& '
seekOccurredTT' 3
||TT4 6
	frameDataTT7 @
.TT@ A

timeLoopedTTA K
||TTL N
	frameDataTTO X
.TTX Y
evaluationTypeTTY g
==TTh j
	FrameDataTTk t
.TTt u
EvaluationType	TTu É
.
TTÉ Ñ
Evaluate
TTÑ å
;
TTå ç
ifWW 
(WW 
	localTimeWW 
>WW 
startWW !
+WW" #
durationWW$ ,
-WW- .
m_FinishTailWW/ ;
)WW; <
returnXX 
;XX 
float[[ 
weight[[ 
=[[ 
clip[[ 
.[[  
EvaluateMixIn[[  -
([[- .
	localTime[[. 7
)[[7 8
*[[9 :
clip[[; ?
.[[? @
EvaluateMixOut[[@ N
([[N O
	localTime[[O X
)[[X Y
;[[Y Z
if\\ 
(\\ 
mixer\\ 
.\\ 
IsValid\\ 
(\\ 
)\\ 
)\\  
mixer]] 
.]] 
SetInputWeight]] $
(]]$ %
playable]]% -
,]]- .
weight]]/ 5
)]]5 6
;]]6 7
if`` 
(`` 
!`` 
	m_Started`` 
||`` 
	forceSeek`` '
)``' (
{aa 
doublecc 
clipTimecc 
=cc  !
clipcc" &
.cc& '
ToLocalTimecc' 2
(cc2 3
Mathcc3 7
.cc7 8
Maxcc8 ;
(cc; <
	localTimecc< E
,ccE F
clipccG K
.ccK L
startccL Q
)ccQ R
)ccR S
;ccS T
doubleff 

startDelayff !
=ff" #
Mathff$ (
.ff( )
Maxff) ,
(ff, -
clipff- 1
.ff1 2
startff2 7
-ff8 9
	localTimeff: C
,ffC D
$numffE F
)ffF G
*ffH I
clipffJ N
.ffN O
	timeScaleffO X
;ffX Y
doublegg 
durationLocalgg $
=gg% &
m_Clipgg' -
.gg- .
durationgg. 6
*gg7 8
clipgg9 =
.gg= >
	timeScalegg> G
;ggG H
ifhh 
(hh 

m_Playablehh 
.hh 
IsPlayableOfTypehh /
<hh/ 0
AudioClipPlayablehh0 A
>hhA B
(hhB C
)hhC D
)hhD E
(ii 
(ii 
AudioClipPlayableii '
)ii' (

m_Playableii( 2
)ii2 3
.ii3 4
Seekii4 8
(ii8 9
clipTimeii9 A
,iiA B

startDelayiiC M
,iiM N
durationLocaliiO \
)ii\ ]
;ii] ^
	m_Startedkk 
=kk 
truekk  
;kk  !
}ll 
}mm 	
}nn 
}oo Âf
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Utilities\AnimatorBindingCache.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{		 
class 	 
AnimatorBindingCache
 
{ 
public 
const 
string 
TRPlaceHolder )
=* +
$str, 9
;9 :
public 
const 
string 
ScalePlaceholder ,
=- .
$str/ ?
;? @
struct 
AnimatorEntry 
{ 	
public 
int 

animatorID !
;! "
public 
bool 
applyRootMotion '
;' (
public 
bool 
humanoid  
;  !
} 	
class !
AnimatorEntryComparer #
:$ %
IEqualityComparer& 7
<7 8
AnimatorEntry8 E
>E F
{ 	
public 
bool 
Equals 
( 
AnimatorEntry ,
x- .
,. /
AnimatorEntry0 =
y> ?
)? @
{A B
returnC I
xJ K
.K L

animatorIDL V
==W Y
yZ [
.[ \

animatorID\ f
&&g i
xj k
.k l
applyRootMotionl {
==| ~
y	 Ä
.
Ä Å
applyRootMotion
Å ê
&&
ë ì
x
î ï
.
ï ñ
humanoid
ñ û
==
ü °
y
¢ £
.
£ §
humanoid
§ ¨
;
¨ ≠
}
Æ Ø
public 
int 
GetHashCode "
(" #
AnimatorEntry# 0
obj1 4
)4 5
{6 7
return8 >
HashUtility? J
.J K
CombineHashK V
(V W
objW Z
.Z [

animatorID[ e
,e f
objg j
.j k
applyRootMotionk z
.z {
GetHashCode	{ Ü
(
Ü á
)
á à
,
à â
obj
ä ç
.
ç é
humanoid
é ñ
.
ñ ó
GetHashCode
ó ¢
(
¢ £
)
£ §
)
§ •
;
• ¶
}
ß ®
public 
static 
readonly "!
AnimatorEntryComparer# 8
Instance9 A
=B C
newD G!
AnimatorEntryComparerH ]
(] ^
)^ _
;_ `
} 	
readonly   

Dictionary   
<   
AnimatorEntry   )
,  ) *
EditorCurveBinding  + =
[  = >
]  > ?
>  ? @
m_AnimatorCache  A P
=  Q R
new  S V

Dictionary  W a
<  a b
AnimatorEntry  b o
,  o p
EditorCurveBinding	  q É
[
  É Ñ
]
  Ñ Ö
>
  Ö Ü
(
  Ü á#
AnimatorEntryComparer
  á ú
.
  ú ù
Instance
  ù •
)
  • ¶
;
  ¶ ß
readonly!! 

Dictionary!! 
<!! 
AnimationClip!! )
,!!) *
EditorCurveBinding!!+ =
[!!= >
]!!> ?
>!!? @
m_ClipCache!!A L
=!!M N
new!!O R

Dictionary!!S ]
<!!] ^
AnimationClip!!^ k
,!!k l
EditorCurveBinding!!m 
[	!! Ä
]
!!Ä Å
>
!!Å Ç
(
!!Ç É
)
!!É Ñ
;
!!Ñ Ö
private## 
static## 
readonly## 
EditorCurveBinding##  2
[##2 3
]##3 4
kEmptyArray##5 @
=##A B
new##C F
EditorCurveBinding##G Y
[##Y Z
$num##Z [
]##[ \
;##\ ]
private$$ 
static$$ 
readonly$$ 
List$$  $
<$$$ %
EditorCurveBinding$$% 7
>$$7 8
s_BindingScratchPad$$9 L
=$$M N
new$$O R
List$$S W
<$$W X
EditorCurveBinding$$X j
>$$j k
($$k l
$num$$l p
)$$p q
;$$q r
public&&  
AnimatorBindingCache&& #
(&&# $
)&&$ %
{'' 	
AnimationUtility(( 
.(( 
onCurveWasModified(( /
+=((0 2
OnCurveWasModified((3 E
;((E F
})) 	
public++ 
EditorCurveBinding++ !
[++! "
]++" #
GetAnimatorBindings++$ 7
(++7 8

GameObject++8 B

gameObject++C M
)++M N
{,, 	
if-- 
(-- 

gameObject-- 
==-- 
null-- "
)--" #
return.. 
kEmptyArray.. "
;.." #
Animator00 
animator00 
=00 

gameObject00  *
.00* +
GetComponent00+ 7
<007 8
Animator008 @
>00@ A
(00A B
)00B C
;00C D
if11 
(11 
animator11 
==11 
null11  
)11  !
return22 
kEmptyArray22 "
;22" #
AnimatorEntry44 
entry44 
=44  !
new44" %
AnimatorEntry44& 3
(443 4
)444 5
{55 

animatorID66 
=66 
animator66 %
.66% &
GetInstanceID66& 3
(663 4
)664 5
,665 6
applyRootMotion77 
=77  !
animator77" *
.77* +
applyRootMotion77+ :
,77: ;
humanoid88 
=88 
animator88 #
.88# $
isHuman88$ +
}99 
;99 
EditorCurveBinding;; 
[;; 
];;  
result;;! '
=;;( )
null;;* .
;;;. /
if<< 
(<< 
m_AnimatorCache<< 
.<<  
TryGetValue<<  +
(<<+ ,
entry<<, 1
,<<1 2
out<<3 6
result<<7 =
)<<= >
)<<> ?
return== 
result== 
;== 
s_BindingScratchPad?? 
.??  
Clear??  %
(??% &
)??& '
;??' (
varBB 

transformsBB 
=BB 
animatorBB %
.BB% &#
GetComponentsInChildrenBB& =
<BB= >
	TransformBB> G
>BBG H
(BBH I
)BBI J
;BBJ K
foreachCC 
(CC 
varCC 
tCC 
inCC 

transformsCC (
)CC( )
{DD 
ifEE 
(EE 
animatorEE 
.EE 
IsBoneTransformEE ,
(EE, -
tEE- .
)EE. /
)EE/ 0
s_BindingScratchPadFF '
.FF' (
AddFF( +
(FF+ ,
EditorCurveBindingFF, >
.FF> ?

FloatCurveFF? I
(FFI J
AnimationUtilityFFJ Z
.FFZ ["
CalculateTransformPathFF[ q
(FFq r
tFFr s
,FFs t
animatorFFu }
.FF} ~
	transform	FF~ á
)
FFá à
,
FFà â
typeof
FFä ê
(
FFê ë
	Transform
FFë ö
)
FFö õ
,
FFõ ú
TRPlaceHolder
FFù ™
)
FF™ ´
)
FF´ ¨
;
FF¨ ≠
}GG 
varII 
streamBindingsII 
=II  
AnimationUtilityII! 1
.II1 2&
GetAnimationStreamBindingsII2 L
(IIL M
animatorIIM U
.IIU V

gameObjectIIV `
)II` a
;IIa b#
UpdateTransformBindingsJJ #
(JJ# $
streamBindingsJJ$ 2
)JJ2 3
;JJ3 4
s_BindingScratchPadKK 
.KK  
AddRangeKK  (
(KK( )
streamBindingsKK) 7
)KK7 8
;KK8 9
resultMM 
=MM 
newMM 
EditorCurveBindingMM +
[MM+ ,
s_BindingScratchPadMM, ?
.MM? @
CountMM@ E
]MME F
;MMF G
s_BindingScratchPadNN 
.NN  
CopyToNN  &
(NN& '
resultNN' -
)NN- .
;NN. /
m_AnimatorCacheOO 
[OO 
entryOO !
]OO! "
=OO# $
resultOO% +
;OO+ ,
returnPP 
resultPP 
;PP 
}QQ 	
publicSS 
EditorCurveBindingSS !
[SS! "
]SS" #
GetCurveBindingsSS$ 4
(SS4 5
AnimationClipSS5 B
clipSSC G
)SSG H
{TT 	
ifUU 
(UU 
clipUU 
==UU 
nullUU 
)UU 
returnVV 
kEmptyArrayVV "
;VV" #
EditorCurveBindingXX 
[XX 
]XX  
resultXX! '
;XX' (
ifYY 
(YY 
!YY 
m_ClipCacheYY 
.YY 
TryGetValueYY (
(YY( )
clipYY) -
,YY- .
outYY/ 2
resultYY3 9
)YY9 :
)YY: ;
{ZZ 
result[[ 
=[[ 
AnimationMode[[ &
.[[& '
GetCurveBindings[[' 7
([[7 8
clip[[8 <
)[[< =
;[[= >#
UpdateTransformBindings\\ '
(\\' (
result\\( .
)\\. /
;\\/ 0
m_ClipCache]] 
[]] 
clip]]  
]]]  !
=]]" #
result]]$ *
;]]* +
}^^ 
return`` 
result`` 
;`` 
}aa 	
privatecc 
staticcc 
voidcc #
UpdateTransformBindingscc 3
(cc3 4
EditorCurveBindingcc4 F
[ccF G
]ccG H
bindingsccI Q
)ccQ R
{dd 	
foree 
(ee 
intee 
iee 
=ee 
$numee 
;ee 
iee 
<ee 
bindingsee  (
.ee( )
Lengthee) /
;ee/ 0
iee1 2
++ee2 4
)ee4 5
{ff 
vargg 
bindinggg 
=gg 
bindingsgg &
[gg& '
igg' (
]gg( )
;gg) *
ifhh 
(hh %
AnimationPreviewUtilitieshh -
.hh- .
IsRootMotionhh. :
(hh: ;
bindinghh; B
)hhB C
)hhC D
{ii 
bindingjj 
.jj 
typejj  
=jj! "
typeofjj# )
(jj) *
	Transformjj* 3
)jj3 4
;jj4 5
bindingkk 
.kk 
propertyNamekk (
=kk) *
TRPlaceHolderkk+ 8
;kk8 9
}ll 
elsemm 
ifmm 
(mm 
typeofmm 
(mm  
	Transformmm  )
)mm) *
.mm* +
IsAssignableFrommm+ ;
(mm; <
bindingmm< C
.mmC D
typemmD H
)mmH I
&&mmJ L
(mmM N
bindingmmN U
.mmU V
propertyNamemmV b
.mmb c

StartsWithmmc m
(mmm n
$str	mmn Ä
)
mmÄ Å
||
mmÇ Ñ
binding
mmÖ å
.
mmå ç
propertyName
mmç ô
.
mmô ö

StartsWith
mmö §
(
mm§ •
$str
mm• ∑
)
mm∑ ∏
)
mm∏ π
)
mmπ ∫
{nn 
bindingoo 
.oo 
propertyNameoo (
=oo) *
TRPlaceHolderoo+ 8
;oo8 9
}pp 
elseqq 
ifqq 
(qq 
typeofqq 
(qq  
	Transformqq  )
)qq) *
.qq* +
IsAssignableFromqq+ ;
(qq; <
bindingqq< C
.qqC D
typeqqD H
)qqH I
&&qqJ L
bindingqqM T
.qqT U
propertyNameqqU a
.qqa b

StartsWithqqb l
(qql m
$strqqm |
)qq| }
)qq} ~
{rr 
bindingss 
.ss 
propertyNamess (
=ss) *
ScalePlaceholderss+ ;
;ss; <
}tt 
bindingsuu 
[uu 
iuu 
]uu 
=uu 
bindinguu %
;uu% &
}vv 
}ww 	
publicyy 
voidyy 
Clearyy 
(yy 
)yy 
{zz 	
m_AnimatorCache{{ 
.{{ 
Clear{{ !
({{! "
){{" #
;{{# $
m_ClipCache|| 
.|| 
Clear|| 
(|| 
)|| 
;||  
}}} 	
void 
OnCurveWasModified 
(  
AnimationClip  -
clip. 2
,2 3
EditorCurveBinding4 F
bindingG N
,N O
AnimationUtilityP `
.` a
CurveModifiedTypea r
modifications 
)	 Ä
{
ÄÄ 	
m_ClipCache
ÅÅ 
.
ÅÅ 
Remove
ÅÅ 
(
ÅÅ 
clip
ÅÅ #
)
ÅÅ# $
;
ÅÅ$ %
}
ÇÇ 	
}
ÉÉ 
}ÑÑ ì	
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Activation\ActivationPlayableAsset.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[ 
DisplayName 
( 
$str "
)" #
]# $
class 	#
ActivationPlayableAsset
 !
:" #
PlayableAsset$ 1
,1 2
ITimelineClipAsset3 E
{ 
public 
ClipCaps 
clipCaps  
{! "
get# &
{' (
return) /
ClipCaps0 8
.8 9
None9 =
;= >
}? @
}A B
public 
override 
Playable  
CreatePlayable! /
(/ 0
PlayableGraph0 =
graph> C
,C D

GameObjectE O
goP R
)R S
{ 	
return 
Playable 
. 
Create "
(" #
graph# (
)( )
;) *
} 	
} 
} ›[
ãD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Events\MarkerList.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[ 
Serializable 
] 
struct 


MarkerList 
: *
ISerializationCallbackReceiver 6
{		 
[

 	
SerializeField

	 
,

 
HideInInspector

 (
]

( )
List

* .
<

. /
ScriptableObject

/ ?
>

? @
	m_Objects

A J
;

J K
[ 	
HideInInspector	 
, 
NonSerialized '
]' (
List) -
<- .
IMarker. 5
>5 6
m_Cache7 >
;> ?
bool 
m_CacheDirty 
; 
bool 
m_HasNotifications 
;  
public 
List 
< 
IMarker 
> 
markers $
{ 	
get 
{ 

BuildCache 
( 
) 
; 
return 
m_Cache 
; 
} 
} 	
public 

MarkerList 
( 
int 
capacity &
)& '
{ 	
	m_Objects 
= 
new 
List  
<  !
ScriptableObject! 1
>1 2
(2 3
capacity3 ;
); <
;< =
m_Cache 
= 
new 
List 
< 
IMarker &
>& '
(' (
capacity( 0
)0 1
;1 2
m_CacheDirty 
= 
true 
;  
m_HasNotifications 
=  
false! &
;& '
} 	
public   
void   
Add   
(   
ScriptableObject   (
item  ) -
)  - .
{!! 	
if"" 
("" 
item"" 
=="" 
null"" 
)"" 
return## 
;## 
	m_Objects%% 
.%% 
Add%% 
(%% 
item%% 
)%% 
;%%  
m_CacheDirty&& 
=&& 
true&& 
;&&  
}'' 	
public)) 
bool)) 
Remove)) 
()) 
IMarker)) "
item))# '
)))' (
{** 	
if++ 
(++ 
!++ 
(++ 
item++ 
is++ 
ScriptableObject++ *
)++* +
)+++ ,
throw,, 
new,, %
InvalidOperationException,, 3
(,,3 4
$str,,4 ^
),,^ _
;,,_ `
return-- 
Remove-- 
(-- 
(-- 
ScriptableObject-- +
)--+ ,
item--, 0
,--0 1
item--2 6
.--6 7
parent--7 =
.--= >
timelineAsset--> K
,--K L
item--M Q
.--Q R
parent--R X
)--X Y
;--Y Z
}.. 	
public00 
bool00 
Remove00 
(00 
ScriptableObject00 +
item00, 0
,000 1
TimelineAsset002 ?
timelineAsset00@ M
,00M N
PlayableAsset00O \
thingToDirty00] i
)00i j
{11 	
if22 
(22 
!22 
	m_Objects22 
.22 
Contains22 #
(22# $
item22$ (
)22( )
)22) *
return22+ 1
false222 7
;227 8
TimelineUndo44 
.44 
PushUndo44 !
(44! "
thingToDirty44" .
,44. /
$str440 ?
)44? @
;44@ A
	m_Objects55 
.55 
Remove55 
(55 
item55 !
)55! "
;55" #
m_CacheDirty66 
=66 
true66 
;66  
TimelineUndo77 
.77 
PushDestroyUndo77 (
(77( )
timelineAsset77) 6
,776 7
thingToDirty778 D
,77D E
item77F J
)77J K
;77K L
return88 
true88 
;88 
}99 	
public;; 
void;; 
Clear;; 
(;; 
);; 
{<< 	
	m_Objects== 
.== 
Clear== 
(== 
)== 
;== 
m_CacheDirty>> 
=>> 
true>> 
;>>  
}?? 	
publicAA 
boolAA 
ContainsAA 
(AA 
ScriptableObjectAA -
itemAA. 2
)AA2 3
{BB 	
returnCC 
	m_ObjectsCC 
.CC 
ContainsCC %
(CC% &
itemCC& *
)CC* +
;CC+ ,
}DD 	
publicFF 
IEnumerableFF 
<FF 
IMarkerFF "
>FF" #

GetMarkersFF$ .
(FF. /
)FF/ 0
{GG 	
returnHH 
markersHH 
;HH 
}II 	
publicKK 
intKK 
CountKK 
{LL 	
getMM 
{MM 
returnMM 
markersMM  
.MM  !
CountMM! &
;MM& '
}MM( )
}NN 	
publicPP 
IMarkerPP 
thisPP 
[PP 
intPP 
idxPP  #
]PP# $
{QQ 	
getRR 
{SS 
returnTT 
markersTT 
[TT 
idxTT "
]TT" #
;TT# $
}UU 
}VV 	
publicXX 
ListXX 
<XX 
ScriptableObjectXX $
>XX$ %
GetRawMarkerListXX& 6
(XX6 7
)XX7 8
{YY 	
returnZZ 
	m_ObjectsZZ 
;ZZ 
}[[ 	
public]] 
IMarker]] 
CreateMarker]] #
(]]# $
Type]]$ (
type]]) -
,]]- .
double]]/ 5
time]]6 :
,]]: ;

TrackAsset]]< F
owner]]G L
)]]L M
{^^ 	
if__ 
(__ 
!__ 
typeof__ 
(__ 
ScriptableObject__ (
)__( )
.__) *
IsAssignableFrom__* :
(__: ;
type__; ?
)__? @
||__A C
!__D E
typeof__E K
(__K L
IMarker__L S
)__S T
.__T U
IsAssignableFrom__U e
(__e f
type__f j
)__j k
)__k l
{`` 
throwaa 
newaa %
InvalidOperationExceptionaa 3
(aa3 4
$strbb e
)bbe f
;bbf g
}cc 
ifdd 
(dd 
!dd 
ownerdd 
.dd !
supportsNotificationsdd ,
&&dd- /
typeofdd0 6
(dd6 7
INotificationdd7 D
)ddD E
.ddE F
IsAssignableFromddF V
(ddV W
typeddW [
)dd[ \
)dd\ ]
{ee 
throwff 
newff %
InvalidOperationExceptionff 3
(ff3 4
$str	gg Ç
)
ggÇ É
;
ggÉ Ñ
}hh 
varjj 
markerSOjj 
=jj 
ScriptableObjectjj +
.jj+ ,
CreateInstancejj, :
(jj: ;
typejj; ?
)jj? @
;jj@ A
varkk 
markerkk 
=kk 
(kk 
IMarkerkk !
)kk! "
markerSOkk" *
;kk* +
markerll 
.ll 
timell 
=ll 
timell 
;ll #
TimelineCreateUtilitiesnn #
.nn# $
SaveAssetIntoObjectnn$ 7
(nn7 8
markerSOnn8 @
,nn@ A
ownernnB G
)nnG H
;nnH I
TimelineUndooo 
.oo %
RegisterCreatedObjectUndooo 2
(oo2 3
markerSOoo3 ;
,oo; <
$stroo= F
+ooG H
typeooI M
.ooM N
NameooN R
)ooR S
;ooS T
TimelineUndopp 
.pp 
PushUndopp !
(pp! "
ownerpp" '
,pp' (
$strpp) 2
+pp3 4
typepp5 9
.pp9 :
Namepp: >
)pp> ?
;pp? @
Addrr 
(rr 
markerSOrr 
)rr 
;rr 
markerss 
.ss 

Initializess 
(ss 
ownerss #
)ss# $
;ss$ %
returnuu 
markeruu 
;uu 
}vv 	
publicxx 
boolxx 
HasNotificationsxx $
(xx$ %
)xx% &
{yy 	

BuildCachezz 
(zz 
)zz 
;zz 
return{{ 
m_HasNotifications{{ %
;{{% &
}|| 	
void~~ *
ISerializationCallbackReceiver~~ +
.~~+ ,
OnBeforeSerialize~~, =
(~~= >
)~~> ?
{ 	
}
ÄÄ 	
void
ÇÇ ,
ISerializationCallbackReceiver
ÇÇ +
.
ÇÇ+ , 
OnAfterDeserialize
ÇÇ, >
(
ÇÇ> ?
)
ÇÇ? @
{
ÉÉ 	
for
ÖÖ 
(
ÖÖ 
int
ÖÖ 
i
ÖÖ 
=
ÖÖ 
	m_Objects
ÖÖ "
.
ÖÖ" #
Count
ÖÖ# (
-
ÖÖ) *
$num
ÖÖ+ ,
;
ÖÖ, -
i
ÖÖ. /
>=
ÖÖ0 2
$num
ÖÖ3 4
;
ÖÖ4 5
i
ÖÖ6 7
--
ÖÖ7 9
)
ÖÖ9 :
{
ÜÜ 
object
áá 
o
áá 
=
áá 
	m_Objects
áá $
[
áá$ %
i
áá% &
]
áá& '
;
áá' (
if
àà 
(
àà 
o
àà 
==
àà 
null
àà 
)
àà 
{
ââ 
Debug
ää 
.
ää 

LogWarning
ää $
(
ää$ %
$str
ää% e
)
ääe f
;
ääf g
	m_Objects
ãã 
.
ãã 
RemoveAt
ãã &
(
ãã& '
i
ãã' (
)
ãã( )
;
ãã) *
}
åå 
}
çç 
m_CacheDirty
èè 
=
èè 
true
èè 
;
èè  
}
êê 	
void
íí 

BuildCache
íí 
(
íí 
)
íí 
{
ìì 	
if
îî 
(
îî 
m_CacheDirty
îî 
)
îî 
{
ïï 
m_Cache
ññ 
=
ññ 
new
ññ 
List
ññ "
<
ññ" #
IMarker
ññ# *
>
ññ* +
(
ññ+ ,
	m_Objects
ññ, 5
.
ññ5 6
Count
ññ6 ;
)
ññ; <
;
ññ< = 
m_HasNotifications
óó "
=
óó# $
false
óó% *
;
óó* +
foreach
òò 
(
òò 
var
òò 
o
òò 
in
òò !
	m_Objects
òò" +
)
òò+ ,
{
ôô 
if
öö 
(
öö 
o
öö 
!=
öö 
null
öö !
)
öö! "
{
õõ 
m_Cache
úú 
.
úú  
Add
úú  #
(
úú# $
o
úú$ %
as
úú& (
IMarker
úú) 0
)
úú0 1
;
úú1 2
if
ùù 
(
ùù 
o
ùù 
is
ùù  
INotification
ùù! .
)
ùù. /
{
ûû  
m_HasNotifications
üü .
=
üü/ 0
true
üü1 5
;
üü5 6
}
†† 
}
°° 
}
¢¢ 
m_CacheDirty
§§ 
=
§§ 
false
§§ $
;
§§$ %
}
•• 
}
¶¶ 	
}
ßß 
}®® Ç9
êD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Utilities\TimelineUndo.cs
	namespace

 	
UnityEngine


 
.

 
Timeline

 
{ 
static 

class 
TimelineUndo 
{ 
public 
static 
void 
PushDestroyUndo *
(* +
TimelineAsset+ 8
timeline9 A
,A B
ObjectC I
thingToDirtyJ V
,V W
ObjectX ^
objectToDestroy_ n
)n o
{ 	
if 
( 
objectToDestroy 
==  "
null# '
||( *
!+ ,
DisableUndoGuard, <
.< =

enableUndo= G
)G H
return 
; 
if 
( 
thingToDirty 
!= 
null  $
)$ %
EditorUtility 
. 
SetDirty &
(& '
thingToDirty' 3
)3 4
;4 5
if 
( 
timeline 
!= 
null  
)  !
EditorUtility 
. 
SetDirty &
(& '
timeline' /
)/ 0
;0 1
Undo 
. "
DestroyObjectImmediate '
(' (
objectToDestroy( 7
)7 8
;8 9
} 	
[!! 	
Conditional!!	 
(!! 
$str!! #
)!!# $
]!!$ %
public"" 
static"" 
void"" 
PushUndo"" #
(""# $
Object""$ *
[""* +
]""+ ,
thingsToDirty""- :
,"": ;
string""< B
	operation""C L
)""L M
{## 	
if%% 
(%% 
thingsToDirty%% 
==%%  
null%%! %
||%%& (
!%%) *
DisableUndoGuard%%* :
.%%: ;

enableUndo%%; E
)%%E F
return&& 
;&& 
for(( 
((( 
var(( 
i(( 
=(( 
$num(( 
;(( 
i(( 
<(( 
thingsToDirty((  -
.((- .
Length((. 4
;((4 5
i((6 7
++((7 9
)((9 :
{)) 
if** 
(** 
thingsToDirty** !
[**! "
i**" #
]**# $
is**% '

TrackAsset**( 2
track**3 8
)**8 9
track++ 
.++ 
	MarkDirty++ #
(++# $
)++$ %
;++% &
EditorUtility,, 
.,, 
SetDirty,, &
(,,& '
thingsToDirty,,' 4
[,,4 5
i,,5 6
],,6 7
),,7 8
;,,8 9
}-- 
Undo.. 
... &
RegisterCompleteObjectUndo.. +
(..+ ,
thingsToDirty.., 9
,..9 :
UndoName..; C
(..C D
	operation..D M
)..M N
)..N O
;..O P
}00 	
[22 	
Conditional22	 
(22 
$str22 #
)22# $
]22$ %
public33 
static33 
void33 
PushUndo33 #
(33# $
Object33$ *
thingToDirty33+ 7
,337 8
string339 ?
	operation33@ I
)33I J
{44 	
if66 
(66 
thingToDirty66 
!=66 
null66  $
&&66% '
DisableUndoGuard66( 8
.668 9

enableUndo669 C
)66C D
{77 
var88 
track88 
=88 
thingToDirty88 (
as88) +

TrackAsset88, 6
;886 7
if99 
(99 
track99 
!=99 
null99 !
)99! "
track:: 
.:: 
	MarkDirty:: #
(::# $
)::$ %
;::% &
EditorUtility<< 
.<< 
SetDirty<< &
(<<& '
thingToDirty<<' 3
)<<3 4
;<<4 5
Undo== 
.== &
RegisterCompleteObjectUndo== /
(==/ 0
thingToDirty==0 <
,==< =
UndoName==> F
(==F G
	operation==G P
)==P Q
)==Q R
;==R S
}>> 
}@@ 	
[BB 	
ConditionalBB	 
(BB 
$strBB #
)BB# $
]BB$ %
publicCC 
staticCC 
voidCC %
RegisterCreatedObjectUndoCC 4
(CC4 5
ObjectCC5 ;
thingCreatedCC< H
,CCH I
stringCCJ P
	operationCCQ Z
)CCZ [
{DD 	
ifFF 
(FF 
DisableUndoGuardFF  
.FF  !

enableUndoFF! +
)FF+ ,
{GG 
UndoHH 
.HH %
RegisterCreatedObjectUndoHH .
(HH. /
thingCreatedHH/ ;
,HH; <
UndoNameHH= E
(HHE F
	operationHHF O
)HHO P
)HHP Q
;HHQ R
}II 
}KK 	
privateMM 
staticMM 
stringMM 
UndoNameMM &
(MM& '
stringMM' -
nameMM. 2
)MM2 3
=>MM4 6
$strMM7 B
+MMC D
nameMME I
;MMI J
internalPP 
structPP 
DisableUndoGuardPP (
:PP) *
IDisposablePP+ 6
{QQ 	
internalRR 
staticRR 
boolRR  

enableUndoRR! +
=RR, -
trueRR. 2
;RR2 3
staticSS 
readonlySS 
StackSS !
<SS! "
boolSS" &
>SS& '
m_UndoStateStackSS( 8
=SS9 :
newSS; >
StackSS? D
<SSD E
boolSSE I
>SSI J
(SSJ K
)SSK L
;SSL M
boolTT 

m_DisposedTT 
;TT 
publicUU 
DisableUndoGuardUU #
(UU# $
boolUU$ (
disableUU) 0
)UU0 1
{VV 

m_DisposedWW 
=WW 
falseWW "
;WW" #
m_UndoStateStackXX  
.XX  !
PushXX! %
(XX% &

enableUndoXX& 0
)XX0 1
;XX1 2

enableUndoYY 
=YY 
!YY 
disableYY %
;YY% &
}ZZ 
public\\ 
void\\ 
Dispose\\ 
(\\  
)\\  !
{]] 
if^^ 
(^^ 
!^^ 

m_Disposed^^ 
)^^  
{__ 
if`` 
(`` 
m_UndoStateStack`` (
.``( )
Count``) .
==``/ 1
$num``2 3
)``3 4
{aa 
Debugbb 
.bb 
LogErrorbb &
(bb& '
$strbb' I
)bbI J
;bbJ K

enableUndocc "
=cc# $
truecc% )
;cc) *
returndd 
;dd 
}ee 

enableUndoff 
=ff  
m_UndoStateStackff! 1
.ff1 2
Popff2 5
(ff5 6
)ff6 7
;ff7 8

m_Disposedgg 
=gg  
truegg! %
;gg% &
}hh 
}ii 
}jj 	
}ll 
}mm ‰_
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Playables\ParticleControlPlayable.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
public		 

class		 #
ParticleControlPlayable		 (
:		) *
PlayableBehaviour		+ <
{

 
const 
float 

kUnsetTime 
=  
-! "
$num" #
;# $
float 

m_LastTime 
= 

kUnsetTime %
;% &
uint 
m_RandomSeed 
= 
$num 
; 
float 
m_SystemTime 
; 
public 
static 
ScriptPlayable $
<$ %#
ParticleControlPlayable% <
>< =
Create> D
(D E
PlayableGraphE R
graphS X
,X Y
ParticleSystemZ h
	componenti r
,r s
uintt x

randomSeed	y É
)
É Ñ
{ 	
if 
( 
	component 
== 
null !
)! "
return 
ScriptPlayable %
<% &#
ParticleControlPlayable& =
>= >
.> ?
Null? C
;C D
var 
handle 
= 
ScriptPlayable '
<' (#
ParticleControlPlayable( ?
>? @
.@ A
CreateA G
(G H
graphH M
)M N
;N O
handle 
. 
GetBehaviour 
(  
)  !
.! "

Initialize" ,
(, -
	component- 6
,6 7

randomSeed8 B
)B C
;C D
return   
handle   
;   
}!! 	
public&& 
ParticleSystem&& 
particleSystem&& ,
{&&- .
get&&/ 2
;&&2 3
private&&4 ;
set&&< ?
;&&? @
}&&A B
public-- 
void-- 

Initialize-- 
(-- 
ParticleSystem-- -
ps--. 0
,--0 1
uint--2 6

randomSeed--7 A
)--A B
{.. 	
m_RandomSeed// 
=// 
Math// 
.//  
Max//  #
(//# $
$num//$ %
,//% &

randomSeed//' 1
)//1 2
;//2 3
particleSystem00 
=00 
ps00 
;00  
m_SystemTime11 
=11 
$num11 
;11 
SetRandomSeed22 
(22 
)22 
;22 
if55 
(55 
!55 
Application55 
.55 
	isPlaying55 &
&&55' )
UnityEditor55* 5
.555 6
PrefabUtility556 C
.55C D"
IsPartOfPrefabInstance55D Z
(55Z [
ps55[ ]
)55] ^
)55^ _
UnityEditor66 
.66 
PrefabUtility66 )
.66) *!
prefabInstanceUpdated66* ?
+=66@ B
OnPrefabUpdated66C R
;66R S
}88 	
public?? 
override?? 
void?? 
OnPlayableDestroy?? .
(??. /
Playable??/ 7
playable??8 @
)??@ A
{@@ 	
ifAA 
(AA 
!AA 
ApplicationAA 
.AA 
	isPlayingAA &
)AA& '
UnityEditorBB 
.BB 
PrefabUtilityBB )
.BB) *!
prefabInstanceUpdatedBB* ?
-=BB@ B
OnPrefabUpdatedBBC R
;BBR S
}CC 	
voidEE 
OnPrefabUpdatedEE 
(EE 

GameObjectEE '
goEE( *
)EE* +
{FF 	
ifHH 
(HH 
UnityEditorHH 
.HH 
PrefabUtilityHH )
.HH) *
GetRootGameObjectHH* ;
(HH; <
particleSystemHH< J
)HHJ K
==HHL N
goHHO Q
)HHQ R

m_LastTimeII 
=II 

kUnsetTimeII '
;II' (
}JJ 	
voidNN 
SetRandomSeedNN 
(NN 
)NN 
{OO 	
particleSystemPP 
.PP 
StopPP 
(PP  
truePP  $
,PP$ %&
ParticleSystemStopBehaviorPP& @
.PP@ A 
StopEmittingAndClearPPA U
)PPU V
;PPV W
varQQ 
systemsQQ 
=QQ 
particleSystemQQ (
.QQ( )

gameObjectQQ) 3
.QQ3 4#
GetComponentsInChildrenQQ4 K
<QQK L
ParticleSystemQQL Z
>QQZ [
(QQ[ \
)QQ\ ]
;QQ] ^
uintRR 
seedRR 
=RR 
m_RandomSeedRR $
;RR$ %
foreachSS 
(SS 
varSS 
psSS 
inSS 
systemsSS &
)SS& '
{TT 
ifVV 
(VV 
psVV 
.VV 
useAutoRandomSeedVV (
)VV( )
{WW 
psXX 
.XX 
useAutoRandomSeedXX (
=XX) *
falseXX+ 0
;XX0 1
psYY 
.YY 

randomSeedYY !
=YY" #
seedYY$ (
;YY( )
seedZZ 
++ZZ 
;ZZ 
}[[ 
}\\ 
}]] 	
publicdd 
overridedd 
voiddd 
PrepareFramedd )
(dd) *
Playabledd* 2
playabledd3 ;
,dd; <
	FrameDatadd= F
dataddG K
)ddK L
{ee 	
ifff 
(ff 
particleSystemff 
==ff !
nullff" &
||ff' )
!ff* +
particleSystemff+ 9
.ff9 :

gameObjectff: D
.ffD E
activeInHierarchyffE V
)ffV W
returngg 
;gg 
floatii 
	localTimeii 
=ii 
(ii 
floatii $
)ii$ %
playableii% -
.ii- .
GetTimeii. 5
(ii5 6
)ii6 7
;ii7 8
booljj 
shouldUpdatejj 
=jj 
Mathfjj  %
.jj% &
Approximatelyjj& 3
(jj3 4

m_LastTimejj4 >
,jj> ?

kUnsetTimejj@ J
)jjJ K
||jjL N
!kk 
Mathfkk 
.kk 
Approximatelykk $
(kk$ %

m_LastTimekk% /
,kk/ 0
	localTimekk1 :
)kk: ;
;kk; <
ifll 
(ll 
shouldUpdatell 
)ll 
{mm 
floatnn 
epsilonnn 
=nn 
Timenn  $
.nn$ %
fixedDeltaTimenn% 3
*nn4 5
$numnn6 :
;nn: ;
floatoo 
simTimeoo 
=oo 
	localTimeoo  )
;oo) *
floatpp 
expectedDeltapp #
=pp$ %
simTimepp& -
-pp. /

m_LastTimepp0 :
;pp: ;
floatss 

startDelayss  
=ss! "
particleSystemss# 1
.ss1 2
mainss2 6
.ss6 7

startDelayss7 A
.ssA B
EvaluatessB J
(ssJ K
particleSystemssK Y
.ssY Z

randomSeedssZ d
)ssd e
;sse f
floattt '
particleSystemDurationLoop0tt 1
=tt2 3
particleSystemtt4 B
.ttB C
mainttC G
.ttG H
durationttH P
+ttQ R

startDelayttS ]
;tt] ^
floatww 
expectedSystemTimeww (
=ww) *
simTimeww+ 2
>ww3 4'
particleSystemDurationLoop0ww5 P
?wwQ R
m_SystemTimewwS _
:ww` a
m_SystemTimewwb n
-wwo p

startDelaywwq {
;ww{ |
ifzz 
(zz 
!zz 
particleSystemzz #
.zz# $
mainzz$ (
.zz( )
loopzz) -
)zz- .
expectedSystemTime{{ &
={{' (
Math{{) -
.{{- .
Min{{. 1
({{1 2
expectedSystemTime{{2 D
,{{D E
particleSystem{{F T
.{{T U
main{{U Y
.{{Y Z
duration{{Z b
){{b c
;{{c d
bool 
restart 
= 
(  
simTime  '
<( )

m_LastTime* 4
)4 5
||6 8
(
ÄÄ 
simTime
ÄÄ 
<
ÄÄ 
epsilon
ÄÄ &
)
ÄÄ& '
||
ÄÄ( *
Mathf
ÅÅ 
.
ÅÅ 
Approximately
ÅÅ '
(
ÅÅ' (

m_LastTime
ÅÅ( 2
,
ÅÅ2 3

kUnsetTime
ÅÅ4 >
)
ÅÅ> ?
||
ÅÅ@ B
(
ÇÇ 
expectedDelta
ÇÇ "
>
ÇÇ# $
particleSystem
ÇÇ% 3
.
ÇÇ3 4
main
ÇÇ4 8
.
ÇÇ8 9
duration
ÇÇ9 A
)
ÇÇA B
||
ÇÇC E
!
ÉÉ 
(
ÉÉ 
Mathf
ÉÉ 
.
ÉÉ 
Abs
ÉÉ 
(
ÉÉ   
expectedSystemTime
ÉÉ  2
-
ÉÉ3 4
particleSystem
ÉÉ5 C
.
ÉÉC D
time
ÉÉD H
)
ÉÉH I
<
ÉÉJ K
Time
ÉÉL P
.
ÉÉP Q&
maximumParticleDeltaTime
ÉÉQ i
)
ÉÉi j
;
ÉÉj k
if
ÑÑ 
(
ÑÑ 
restart
ÑÑ 
)
ÑÑ 
{
ÖÖ 
particleSystem
áá "
.
áá" #
Simulate
áá# +
(
áá+ ,
$num
áá, -
,
áá- .
true
áá/ 3
,
áá3 4
true
áá5 9
)
áá9 :
;
áá: ;
particleSystem
àà "
.
àà" #
Simulate
àà# +
(
àà+ ,
simTime
àà, 3
,
àà3 4
true
àà5 9
,
àà9 :
false
àà; @
)
àà@ A
;
ààA B
m_SystemTime
ââ  
=
ââ! "
simTime
ââ# *
;
ââ* +
}
ää 
else
ãã 
{
åå 
float
éé $
particleSystemDuration
éé 0
=
éé1 2
simTime
éé3 :
>
éé; <)
particleSystemDurationLoop0
éé= X
?
ééY Z
particleSystem
éé[ i
.
ééi j
main
ééj n
.
één o
duration
ééo w
:
ééx y*
particleSystemDurationLoop0ééz ï
;ééï ñ
float
èè 
fracTime
èè "
=
èè# $
simTime
èè% ,
%
èè- .$
particleSystemDuration
èè/ E
;
èèE F
float
êê 
	deltaTime
êê #
=
êê$ %
fracTime
êê& .
-
êê/ 0
m_SystemTime
êê1 =
;
êê= >
if
íí 
(
íí 
	deltaTime
íí !
<
íí" #
-
íí$ %
epsilon
íí% ,
)
íí, -
	deltaTime
ìì !
=
ìì" #
fracTime
ìì$ ,
+
ìì- .)
particleSystemDurationLoop0
ìì/ J
-
ììK L
m_SystemTime
ììM Y
;
ììY Z
particleSystem
ïï "
.
ïï" #
Simulate
ïï# +
(
ïï+ ,
	deltaTime
ïï, 5
,
ïï5 6
true
ïï7 ;
,
ïï; <
false
ïï= B
)
ïïB C
;
ïïC D
m_SystemTime
ññ  
+=
ññ! #
	deltaTime
ññ$ -
;
ññ- .
}
óó 

m_LastTime
ôô 
=
ôô 
	localTime
ôô &
;
ôô& '
}
öö 
}
õõ 	
public
¢¢ 
override
¢¢ 
void
¢¢ 
OnBehaviourPlay
¢¢ ,
(
¢¢, -
Playable
¢¢- 5
playable
¢¢6 >
,
¢¢> ?
	FrameData
¢¢@ I
info
¢¢J N
)
¢¢N O
{
££ 	

m_LastTime
§§ 
=
§§ 

kUnsetTime
§§ #
;
§§# $
}
•• 	
public
¨¨ 
override
¨¨ 
void
¨¨ 
OnBehaviourPause
¨¨ -
(
¨¨- .
Playable
¨¨. 6
playable
¨¨7 ?
,
¨¨? @
	FrameData
¨¨A J
info
¨¨K O
)
¨¨O P
{
≠≠ 	

m_LastTime
ÆÆ 
=
ÆÆ 

kUnsetTime
ÆÆ #
;
ÆÆ# $
}
ØØ 	
}
∞∞ 
}±± ∑ù
öD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Animation\AnimationPlayableAsset.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[

 
System

 
.

 
Serializable

 
,

 

NotKeyable

 $
]

$ %
public 

partial 
class "
AnimationPlayableAsset /
:0 1
PlayableAsset2 ?
,? @
ITimelineClipAssetA S
,S T
IPropertyPreviewU e
{ 
public 
enum 
LoopMode 
{ 	
[ 
Tooltip 
( 
$str O
)O P
]P Q
UseSourceAsset 
= 
$num 
, 
[ 
Tooltip 
( 
$str F
)F G
]G H
On 
= 
$num 
, 
[!! 
Tooltip!! 
(!! 
$str!! N
)!!N O
]!!O P
Off"" 
="" 
$num"" 
}## 	
[&& 	
SerializeField&&	 
]&& 
private&&  
AnimationClip&&! .
m_Clip&&/ 5
;&&5 6
['' 	
SerializeField''	 
]'' 
private''  
Vector3''! (

m_Position'') 3
=''4 5
Vector3''7 >
.''> ?
zero''? C
;''C D
[(( 	
SerializeField((	 
](( 
private((  
Vector3((! (
m_EulerAngles(() 6
=((7 8
Vector3((9 @
.((@ A
zero((A E
;((E F
[)) 	
SerializeField))	 
])) 
private))  
bool))! %!
m_UseTrackMatchFields))& ;
=))< =
true))> B
;))B C
[** 	
SerializeField**	 
]** 
private**  
MatchTargetFields**! 2
m_MatchTargetFields**3 F
=**G H%
MatchTargetFieldConstants**I b
.**b c
All**c f
;**f g
[++ 	
SerializeField++	 
]++ 
private++  
bool++! %
m_RemoveStartOffset++& 9
=++: ;
true++< @
;++@ A
[,, 	
SerializeField,,	 
],, 
private,,  
bool,,! %
m_ApplyFootIK,,& 3
=,,4 5
true,,6 :
;,,: ;
[-- 	
SerializeField--	 
]-- 
private--  
LoopMode--! )
m_Loop--* 0
=--1 2
LoopMode--3 ;
.--; <
UseSourceAsset--< J
;--J K
private11 #
AnimationOffsetPlayable11 '%
m_AnimationOffsetPlayable11( A
;11A B
public77 
Vector377 
position77 
{88 	
get99 
{:: 
return;; 

m_Position;; !
;;;! "
}<< 
set== 
{>> 

m_Position?? 
=?? 
value?? "
;??" #
ifAA 
(AA %
m_AnimationOffsetPlayableAA -
.AA- .
IsValidAA. 5
(AA5 6
)AA6 7
)AA7 8%
m_AnimationOffsetPlayableBB -
.BB- .
SetPositionBB. 9
(BB9 :
positionBB: B
)BBB C
;BBC D
}DD 
}EE 	
publicJJ 

QuaternionJJ 
rotationJJ "
{KK 	
getLL 
{MM 
returnNN 

QuaternionNN !
.NN! "
EulerNN" '
(NN' (
m_EulerAnglesNN( 5
)NN5 6
;NN6 7
}OO 
setQQ 
{RR 
m_EulerAnglesSS 
=SS 
valueSS  %
.SS% &
eulerAnglesSS& 1
;SS1 2
ifUU 
(UU %
m_AnimationOffsetPlayableUU -
.UU- .
IsValidUU. 5
(UU5 6
)UU6 7
)UU7 8%
m_AnimationOffsetPlayableVV -
.VV- .
SetRotationVV. 9
(VV9 :
valueVV: ?
)VV? @
;VV@ A
}XX 
}YY 	
public^^ 
Vector3^^ 
eulerAngles^^ "
{__ 	
get`` 
{`` 
return`` 
m_EulerAngles`` &
;``& '
}``( )
setaa 
{bb 
m_EulerAnglescc 
=cc 
valuecc  %
;cc% &
ifee 
(ee %
m_AnimationOffsetPlayableee -
.ee- .
IsValidee. 5
(ee5 6
)ee6 7
)ee7 8%
m_AnimationOffsetPlayableff -
.ff- .
SetRotationff. 9
(ff9 :
rotationff: B
)ffB C
;ffC D
}hh 
}ii 	
publicnn 
boolnn 
useTrackMatchFieldsnn '
{oo 	
getpp 
{pp 
returnpp !
m_UseTrackMatchFieldspp .
;pp. /
}pp0 1
setqq 
{qq !
m_UseTrackMatchFieldsqq '
=qq( )
valueqq* /
;qq/ 0
}qq1 2
}rr 	
publicww 
MatchTargetFieldsww  
matchTargetFieldsww! 2
{xx 	
getyy 
{yy 
returnyy 
m_MatchTargetFieldsyy ,
;yy, -
}yy. /
setzz 
{zz 
m_MatchTargetFieldszz %
=zz& '
valuezz( -
;zz- .
}zz/ 0
}{{ 	
public
ÉÉ 
bool
ÉÉ 
removeStartOffset
ÉÉ %
{
ÑÑ 	
get
ÖÖ 
{
ÖÖ 
return
ÖÖ !
m_RemoveStartOffset
ÖÖ ,
;
ÖÖ, -
}
ÖÖ. /
set
ÜÜ 
{
ÜÜ !
m_RemoveStartOffset
ÜÜ %
=
ÜÜ& '
value
ÜÜ( -
;
ÜÜ- .
}
ÜÜ/ 0
}
áá 	
public
çç 
bool
çç 
applyFootIK
çç 
{
éé 	
get
èè 
{
èè 
return
èè 
m_ApplyFootIK
èè &
;
èè& '
}
èè( )
set
êê 
{
êê 
m_ApplyFootIK
êê 
=
êê  !
value
êê" '
;
êê' (
}
êê) *
}
ëë 	
public
ññ 
LoopMode
ññ 
loop
ññ 
{
óó 	
get
òò 
{
òò 
return
òò 
m_Loop
òò 
;
òò  
}
òò! "
set
ôô 
{
ôô 
m_Loop
ôô 
=
ôô 
value
ôô  
;
ôô  !
}
ôô" #
}
öö 	
internal
ùù 
bool
ùù 
hasRootTransforms
ùù '
{
ûû 	
get
üü 
{
üü 
return
üü 
m_Clip
üü 
!=
üü  "
null
üü# '
&&
üü( *
HasRootTransforms
üü+ <
(
üü< =
m_Clip
üü= C
)
üüC D
;
üüD E
}
üüF G
}
†† 	
internal
££ 
AppliedOffsetMode
££ "
appliedOffsetMode
££# 4
{
££5 6
get
££7 :
;
££: ;
set
££< ?
;
££? @
}
££A B
public
©© 
AnimationClip
©© 
clip
©© !
{
™™ 	
get
´´ 
{
´´ 
return
´´ 
m_Clip
´´ 
;
´´  
}
´´! "
set
¨¨ 
{
≠≠ 
if
ÆÆ 
(
ÆÆ 
value
ÆÆ 
!=
ÆÆ 
null
ÆÆ !
)
ÆÆ! "
name
ØØ 
=
ØØ 
$str
ØØ 7
+
ØØ8 9
value
ØØ: ?
.
ØØ? @
name
ØØ@ D
;
ØØD E
m_Clip
∞∞ 
=
∞∞ 
value
∞∞ 
;
∞∞ 
}
±± 
}
≤≤ 	
public
∑∑ 
override
∑∑ 
double
∑∑ 
duration
∑∑ '
{
∏∏ 	
get
ππ 
{
∫∫ 
double
ªª 
length
ªª 
=
ªª 
TimeUtility
ªª  +
.
ªª+ ,$
GetAnimationClipLength
ªª, B
(
ªªB C
clip
ªªC G
)
ªªG H
;
ªªH I
if
ºº 
(
ºº 
length
ºº 
<
ºº 
float
ºº "
.
ºº" #
Epsilon
ºº# *
)
ºº* +
return
ΩΩ 
base
ΩΩ 
.
ΩΩ  
duration
ΩΩ  (
;
ΩΩ( )
return
ææ 
length
ææ 
;
ææ 
}
øø 
}
¿¿ 	
public
≈≈ 
override
≈≈ 
IEnumerable
≈≈ #
<
≈≈# $
PlayableBinding
≈≈$ 3
>
≈≈3 4
outputs
≈≈5 <
{
∆∆ 	
get
«« 
{
«« 
yield
«« 
return
«« &
AnimationPlayableBinding
«« 7
.
««7 8
Create
««8 >
(
««> ?
name
««? C
,
««C D
this
««E I
)
««I J
;
««J K
}
««L M
}
»» 	
public
–– 
override
–– 
Playable
––  
CreatePlayable
––! /
(
––/ 0
PlayableGraph
––0 =
graph
––> C
,
––C D

GameObject
––E O
go
––P R
)
––R S
{
—— 	
Playable
““ 
root
““ 
=
““ 
CreatePlayable
““ *
(
““* +
graph
““+ 0
,
““0 1
m_Clip
““2 8
,
““8 9
position
““: B
,
““B C
eulerAngles
““D O
,
““O P
removeStartOffset
““Q b
,
““b c
appliedOffsetMode
““d u
,
““u v
applyFootIK““w Ç
,““Ç É
m_Loop““Ñ ä
)““ä ã
;““ã å'
m_AnimationOffsetPlayable
’’ %
=
’’& '%
AnimationOffsetPlayable
’’( ?
.
’’? @
Null
’’@ D
;
’’D E
if
÷÷ 
(
÷÷ 
root
÷÷ 
.
÷÷ 
IsValid
÷÷ 
(
÷÷ 
)
÷÷ 
&&
÷÷ !
root
÷÷" &
.
÷÷& '
IsPlayableOfType
÷÷' 7
<
÷÷7 8%
AnimationOffsetPlayable
÷÷8 O
>
÷÷O P
(
÷÷P Q
)
÷÷Q R
)
÷÷R S
{
◊◊ '
m_AnimationOffsetPlayable
ÿÿ )
=
ÿÿ* +
(
ÿÿ, -%
AnimationOffsetPlayable
ÿÿ- D
)
ÿÿD E
root
ÿÿE I
;
ÿÿI J
}
ŸŸ 
LiveLink
€€ 
(
€€ 
)
€€ 
;
€€ 
return
ﬁﬁ 
root
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 	
internal
·· 
static
·· 
Playable
··  
CreatePlayable
··! /
(
··/ 0
PlayableGraph
··0 =
graph
··> C
,
··C D
AnimationClip
··E R
clip
··S W
,
··W X
Vector3
··Y `
positionOffset
··a o
,
··o p
Vector3
··q x
eulerOffset··y Ñ
,··Ñ Ö
bool··Ü ä!
removeStartOffset··ã ú
,··ú ù!
AppliedOffsetMode··û Ø
mode··∞ ¥
,··¥ µ
bool··∂ ∫
applyFootIK··ª ∆
,··∆ «
LoopMode··» –
loop··— ’
)··’ ÷
{
‚‚ 	
if
„„ 
(
„„ 
clip
„„ 
==
„„ 
null
„„ 
||
„„ 
clip
„„  $
.
„„$ %
legacy
„„% +
)
„„+ ,
return
‰‰ 
Playable
‰‰ 
.
‰‰  
Null
‰‰  $
;
‰‰$ %
var
ÁÁ 
clipPlayable
ÁÁ 
=
ÁÁ #
AnimationClipPlayable
ÁÁ 4
.
ÁÁ4 5
Create
ÁÁ5 ;
(
ÁÁ; <
graph
ÁÁ< A
,
ÁÁA B
clip
ÁÁC G
)
ÁÁG H
;
ÁÁH I
clipPlayable
ËË 
.
ËË "
SetRemoveStartOffset
ËË -
(
ËË- .
removeStartOffset
ËË. ?
)
ËË? @
;
ËË@ A
clipPlayable
ÈÈ 
.
ÈÈ 
SetApplyFootIK
ÈÈ '
(
ÈÈ' (
applyFootIK
ÈÈ( 3
)
ÈÈ3 4
;
ÈÈ4 5
clipPlayable
ÍÍ 
.
ÍÍ !
SetOverrideLoopTime
ÍÍ ,
(
ÍÍ, -
loop
ÍÍ- 1
!=
ÍÍ2 4
LoopMode
ÍÍ5 =
.
ÍÍ= >
UseSourceAsset
ÍÍ> L
)
ÍÍL M
;
ÍÍM N
clipPlayable
ÎÎ 
.
ÎÎ 
SetLoopTime
ÎÎ $
(
ÎÎ$ %
loop
ÎÎ% )
==
ÎÎ* ,
LoopMode
ÎÎ- 5
.
ÎÎ5 6
On
ÎÎ6 8
)
ÎÎ8 9
;
ÎÎ9 :
Playable
ÌÌ 
root
ÌÌ 
=
ÌÌ 
clipPlayable
ÌÌ (
;
ÌÌ( )
if
ÔÔ 
(
ÔÔ $
ShouldApplyScaleRemove
ÔÔ &
(
ÔÔ& '
mode
ÔÔ' +
)
ÔÔ+ ,
)
ÔÔ, -
{
 
var
ÒÒ 
removeScale
ÒÒ 
=
ÒÒ  !*
AnimationRemoveScalePlayable
ÒÒ" >
.
ÒÒ> ?
Create
ÒÒ? E
(
ÒÒE F
graph
ÒÒF K
,
ÒÒK L
$num
ÒÒM N
)
ÒÒN O
;
ÒÒO P
graph
ÚÚ 
.
ÚÚ 
Connect
ÚÚ 
(
ÚÚ 
root
ÚÚ "
,
ÚÚ" #
$num
ÚÚ$ %
,
ÚÚ% &
removeScale
ÚÚ' 2
,
ÚÚ2 3
$num
ÚÚ4 5
)
ÚÚ5 6
;
ÚÚ6 7
removeScale
ÛÛ 
.
ÛÛ 
SetInputWeight
ÛÛ *
(
ÛÛ* +
$num
ÛÛ+ ,
,
ÛÛ, -
$num
ÛÛ. 2
)
ÛÛ2 3
;
ÛÛ3 4
root
ÙÙ 
=
ÙÙ 
removeScale
ÙÙ "
;
ÙÙ" #
}
ıı 
if
˜˜ 
(
˜˜ 
ShouldApplyOffset
˜˜ !
(
˜˜! "
mode
˜˜" &
,
˜˜& '
clip
˜˜( ,
)
˜˜, -
)
˜˜- .
{
¯¯ 
var
˘˘ 
offsetPlayable
˘˘ "
=
˘˘# $%
AnimationOffsetPlayable
˘˘% <
.
˘˘< =
Create
˘˘= C
(
˘˘C D
graph
˘˘D I
,
˘˘I J
positionOffset
˘˘K Y
,
˘˘Y Z

Quaternion
˘˘[ e
.
˘˘e f
Euler
˘˘f k
(
˘˘k l
eulerOffset
˘˘l w
)
˘˘w x
,
˘˘x y
$num
˘˘z {
)
˘˘{ |
;
˘˘| }
graph
˙˙ 
.
˙˙ 
Connect
˙˙ 
(
˙˙ 
root
˙˙ "
,
˙˙" #
$num
˙˙$ %
,
˙˙% &
offsetPlayable
˙˙' 5
,
˙˙5 6
$num
˙˙7 8
)
˙˙8 9
;
˙˙9 :
offsetPlayable
˚˚ 
.
˚˚ 
SetInputWeight
˚˚ -
(
˚˚- .
$num
˚˚. /
,
˚˚/ 0
$num
˚˚1 5
)
˚˚5 6
;
˚˚6 7
root
¸¸ 
=
¸¸ 
offsetPlayable
¸¸ %
;
¸¸% &
}
˝˝ 
return
ˇˇ 
root
ˇˇ 
;
ˇˇ 
}
ÄÄ 	
private
ÇÇ 
static
ÇÇ 
bool
ÇÇ 
ShouldApplyOffset
ÇÇ -
(
ÇÇ- .
AppliedOffsetMode
ÇÇ. ?
mode
ÇÇ@ D
,
ÇÇD E
AnimationClip
ÇÇF S
clip
ÇÇT X
)
ÇÇX Y
{
ÉÉ 	
if
ÑÑ 
(
ÑÑ 
mode
ÑÑ 
==
ÑÑ 
AppliedOffsetMode
ÑÑ )
.
ÑÑ) *
NoRootTransform
ÑÑ* 9
||
ÑÑ: <
mode
ÑÑ= A
==
ÑÑB D
AppliedOffsetMode
ÑÑE V
.
ÑÑV W
SceneOffsetLegacy
ÑÑW h
)
ÑÑh i
return
ÖÖ 
false
ÖÖ 
;
ÖÖ 
return
áá 
HasRootTransforms
áá $
(
áá$ %
clip
áá% )
)
áá) *
;
áá* +
}
àà 	
private
ää 
static
ää 
bool
ää $
ShouldApplyScaleRemove
ää 2
(
ää2 3
AppliedOffsetMode
ää3 D
mode
ääE I
)
ääI J
{
ãã 	
return
åå 
mode
åå 
==
åå 
AppliedOffsetMode
åå ,
.
åå, -%
SceneOffsetLegacyEditor
åå- D
||
ååE G
mode
ååH L
==
ååM O
AppliedOffsetMode
ååP a
.
ååa b
SceneOffsetLegacy
ååb s
||
ååt v
mode
ååw {
==
åå| ~ 
AppliedOffsetModeåå ê
.ååê ë%
TransformOffsetLegacyååë ¶
;åå¶ ß
}
çç 	
public
êê 
void
êê 
LiveLink
êê 
(
êê 
)
êê 
{
ëë 	
if
íí 
(
íí '
m_AnimationOffsetPlayable
íí )
.
íí) *
IsValid
íí* 1
(
íí1 2
)
íí2 3
)
íí3 4
{
ìì '
m_AnimationOffsetPlayable
îî )
.
îî) *
SetPosition
îî* 5
(
îî5 6
position
îî6 >
)
îî> ?
;
îî? @'
m_AnimationOffsetPlayable
ïï )
.
ïï) *
SetRotation
ïï* 5
(
ïï5 6
rotation
ïï6 >
)
ïï> ?
;
ïï? @
}
ññ 
}
óó 	
public
ûû 
ClipCaps
ûû 
clipCaps
ûû  
{
üü 	
get
†† 
{
°° 
var
¢¢ 
caps
¢¢ 
=
¢¢ 
ClipCaps
¢¢ #
.
¢¢# $
Extrapolation
¢¢$ 1
|
¢¢2 3
ClipCaps
¢¢4 <
.
¢¢< =
SpeedMultiplier
¢¢= L
|
¢¢M N
ClipCaps
¢¢O W
.
¢¢W X
Blending
¢¢X `
;
¢¢` a
if
££ 
(
££ 
m_Clip
££ 
!=
££ 
null
££ "
&&
££# %
(
££& '
m_Loop
££' -
!=
££. 0
LoopMode
££1 9
.
££9 :
Off
££: =
)
££= >
&&
££? A
(
££B C
m_Loop
££C I
!=
££J L
LoopMode
££M U
.
££U V
UseSourceAsset
££V d
||
££e g
m_Clip
££h n
.
££n o
	isLooping
££o x
)
££x y
)
££y z
caps
§§ 
|=
§§ 
ClipCaps
§§ $
.
§§$ %
Looping
§§% ,
;
§§, -
if
ßß 
(
ßß 
m_Clip
ßß 
!=
ßß 
null
ßß "
&&
ßß# %
!
ßß& '
m_Clip
ßß' -
.
ßß- .
empty
ßß. 3
)
ßß3 4
caps
®® 
|=
®® 
ClipCaps
®® $
.
®®$ %
ClipIn
®®% +
;
®®+ ,
return
™™ 
caps
™™ 
;
™™ 
}
´´ 
}
¨¨ 	
public
±± 
void
±± 
ResetOffsets
±±  
(
±±  !
)
±±! "
{
≤≤ 	
position
≥≥ 
=
≥≥ 
Vector3
≥≥ 
.
≥≥ 
zero
≥≥ #
;
≥≥# $
eulerAngles
¥¥ 
=
¥¥ 
Vector3
¥¥ !
.
¥¥! "
zero
¥¥" &
;
¥¥& '
}
µµ 	
public
∏∏ 
void
∏∏ 
GatherProperties
∏∏ $
(
∏∏$ %
PlayableDirector
∏∏% 5
director
∏∏6 >
,
∏∏> ? 
IPropertyCollector
∏∏@ R
driver
∏∏S Y
)
∏∏Y Z
{
ππ 	
driver
∫∫ 
.
∫∫ 
AddFromClip
∫∫ 
(
∫∫ 
m_Clip
∫∫ %
)
∫∫% &
;
∫∫& '
}
ªª 	
internal
ΩΩ 
static
ΩΩ 
bool
ΩΩ 
HasRootTransforms
ΩΩ .
(
ΩΩ. /
AnimationClip
ΩΩ/ <
clip
ΩΩ= A
)
ΩΩA B
{
ææ 	
if
øø 
(
øø 
clip
øø 
==
øø 
null
øø 
||
øø 
clip
øø  $
.
øø$ %
empty
øø% *
)
øø* +
return
¿¿ 
false
¿¿ 
;
¿¿ 
return
¬¬ 
clip
¬¬ 
.
¬¬ 
hasRootMotion
¬¬ %
||
¬¬& (
clip
¬¬) -
.
¬¬- .%
hasGenericRootTransform
¬¬. E
||
¬¬F H
clip
¬¬I M
.
¬¬M N
hasMotionCurves
¬¬N ]
||
¬¬^ `
clip
¬¬a e
.
¬¬e f
hasRootCurves
¬¬f s
;
¬¬s t
}
√√ 	
}
ƒƒ 
}≈≈ ”

ìD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Evaluation\RuntimeElement.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
abstract 
class 
RuntimeElement !
:" #
	IInterval$ -
{ 
public 
abstract 
Int64 
intervalStart +
{, -
get. 1
;1 2
}3 4
public		 
abstract		 
Int64		 
intervalEnd		 )
{		* +
get		, /
;		/ 0
}		1 2
public

 
int

 
intervalBit

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
public 
abstract 
bool 
enable #
{$ %
set& )
;) *
}+ ,
public 
abstract 
void 

EvaluateAt '
(' (
double( .
	localTime/ 8
,8 9
	FrameData: C
	frameDataD M
)M N
;N O
public 
virtual 
void 
Reset !
(! "
)" #
{$ %
}% &
} 
} €	
ÑD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\GroupTrack.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[

 
Serializable

 
]

 
[ 
TrackClipType 
( 
typeof 
( 

TrackAsset $
)$ %
)% &
]& '
[ 
SupportsChildTracks 
] 
[ 
ExcludeFromPreset 
] 
public 

class 

GroupTrack 
: 

TrackAsset (
{ 
internal 
override 
bool 
CanCompileClips .
(. /
)/ 0
{ 	
return 
false 
; 
} 	
public 
override 
IEnumerable #
<# $
PlayableBinding$ 3
>3 4
outputs5 <
{ 	
get 
{ 
return 
PlayableBinding (
.( )
None) -
;- .
}/ 0
} 	
} 
} ≈
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str /
)/ 0
]0 1
[ 
assembly 	
:	 

AssemblyDescription 
( 
$str /
)/ 0
]0 1
[ 
assembly 	
:	 
!
AssemblyConfiguration  
(  !
$str! #
)# $
]$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str /
)/ 0
]0 1
[		 
assembly		 	
:			 

AssemblyProduct		 
(		 
$str		 1
)		1 2
]		2 3
[

 
assembly

 	
:

	 

AssemblyCopyright

 
(

 
$str

 /
)

/ 0
]

0 1
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str 5
)5 6
]6 7
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[ 
assembly 	
:	 

AssemblyVersion 
( 
$str $
)$ %
]% &
[ 
assembly 	
:	 

AssemblyFileVersion 
( 
$str (
)( )
]) *
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str 8
)8 9
]9 :
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str ?
)? @
]@ A
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str :
): ;
]; <
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str 4
)4 5
]5 6
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str ;
); <
]< =
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str @
)@ A
]A B
[ 
assembly 	
:	 

InternalsVisibleTo 
( 
$str G
)G H
]H I§
§D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\AssetUpgrade\AnimationPlayableAssetUpgrade.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
partial 
class "
AnimationPlayableAsset (
:) **
ISerializationCallbackReceiver+ I
{ 
enum 
Versions 
{ 	
Initial		 
=		 
$num		 
,		 
RotationAsEuler

 
=

 
$num

 
,

  
} 	
static 
readonly 
int 
k_LatestVersion +
=, -
(. /
int/ 2
)2 3
Versions3 ;
.; <
RotationAsEuler< K
;K L
[ 	
SerializeField	 
, 
HideInInspector (
]( )
int* -
	m_Version. 7
;7 8
[ 	
SerializeField	 
, 
Obsolete !
(! "
$str" ?
,? @
falseA F
)F G
,G H
HideInInspectorI X
]X Y
private 

Quaternion 

m_Rotation %
=& '

Quaternion( 2
.2 3
identity3 ;
;; <
void *
ISerializationCallbackReceiver +
.+ ,
OnBeforeSerialize, =
(= >
)> ?
{ 	
	m_Version 
= 
k_LatestVersion '
;' (
} 	
void *
ISerializationCallbackReceiver +
.+ ,
OnAfterDeserialize, >
(> ?
)? @
{ 	
if 
( 
	m_Version 
< 
k_LatestVersion +
)+ ,
{  
OnUpgradeFromVersion $
($ %
	m_Version% .
). /
;/ 0
} 
} 	
void!!  
OnUpgradeFromVersion!! !
(!!! "
int!!" %

oldVersion!!& 0
)!!0 1
{"" 	
if## 
(## 

oldVersion## 
<## 
(## 
int## !
)##! "
Versions##" *
.##* +
RotationAsEuler##+ :
)##: ;)
AnimationPlayableAssetUpgrade$$ -
.$$- ."
ConvertRotationToEuler$$. D
($$D E
this$$E I
)$$I J
;$$J K
}%% 	
static'' 
class'' )
AnimationPlayableAssetUpgrade'' 2
{(( 	
public)) 
static)) 
void)) "
ConvertRotationToEuler)) 5
())5 6"
AnimationPlayableAsset))6 L
asset))M R
)))R S
{** 
asset,, 
.,, 
m_EulerAngles,, #
=,,$ %
asset,,& +
.,,+ ,

m_Rotation,,, 6
.,,6 7
eulerAngles,,7 B
;,,B C
}.. 
}// 	
}00 
}11 «
àD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Events\IMarker.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
public

 

	interface

 
IMarker

 
{ 
double 
time 
{ 
get 
; 
set 
; 
}  !

TrackAsset 
parent 
{ 
get 
;  
}! "
void 

Initialize 
( 

TrackAsset "
parent# )
)) *
;* +
} 
} È

îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Evaluation\RuntimeClipBase.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
internal 
abstract 
class 
RuntimeClipBase +
:, -
RuntimeElement. <
{ 
public 
abstract 
double 
start $
{% &
get' *
;* +
}, -
public		 
abstract		 
double		 
duration		 '
{		( )
get		* -
;		- .
}		/ 0
public 
override 
Int64 
intervalStart +
{ 	
get 
{ 
return 
DiscreteTime %
.% &
GetNearestTick& 4
(4 5
start5 :
): ;
;; <
}= >
} 	
public 
override 
Int64 
intervalEnd )
{ 	
get 
{ 
return 
DiscreteTime %
.% &
GetNearestTick& 4
(4 5
start5 :
+; <
duration= E
)E F
;F G
}H I
} 	
} 
} ¯
åD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Events\MarkerTrack.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[ 
Serializable 
] 
[ 
TrackBindingType 
( 
typeof 
( 

GameObject '
)' (
)( )
]) *
[ 

HideInMenu 
] 
[ 
ExcludeFromPreset 
] 
public 

class 
MarkerTrack 
: 

TrackAsset )
{ 
public 
override 
IEnumerable #
<# $
PlayableBinding$ 3
>3 4
outputs5 <
{ 	
get 
{ 
return 
this 
== 
timelineAsset ,
., -
markerTrack- 8
?9 :
new 
List 
< 
PlayableBinding ,
>, -
{. /!
ScriptPlayableBinding/ D
.D E
CreateE K
(K L
nameL P
,P Q
nullR V
,V W
typeofX ^
(^ _

GameObject_ i
)i j
)j k
}k l
:m n
base 
. 
outputs  
;  !
} 
} 	
} 
} œ
çD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Timeline.deprecated.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
public 

partial 
class 
TimelineAsset &
{ 
[		 	
Obsolete			 
(		 
$str		 u
,		u v
false		w |
)		| }
]		} ~
public

 
enum

 
	MediaType

 
{ 	
	Animation 
, 
Audio 
, 
Texture 
= 
$num 
, 
[ 
Obsolete 
( 
$str	 Ä
,
Ä Å
false
Ç á
)
á à
]
à â
Video
ä è
=
ê ë
$num
í ì
,
ì î
Script 
, 
Hybrid 
, 
Group 
} 	
} 
[ 
AttributeUsage 
( 
AttributeTargets $
.$ %
Class% *
)* +
]+ ,
[ 
Obsolete 
( 
$str v
,v w
falsex }
)} ~
]~ 
public 

class 
TrackMediaType 
:  !
	Attribute" +
{ 
public 
readonly 
TimelineAsset %
.% &
	MediaType& /
m_MediaType0 ;
;; <
public 
TrackMediaType 
( 
TimelineAsset +
.+ ,
	MediaType, 5
mt6 8
)8 9
{ 	
m_MediaType 
= 
mt 
; 
}   	
}!! 
}"" ‡
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Evaluation\InfiniteRuntimeClip.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
class

 	
InfiniteRuntimeClip


 
:

 
RuntimeElement

  .
{ 
private 
Playable 

m_Playable #
;# $
private 
static 
readonly 
Int64  %
kIntervalEnd& 2
=3 4
DiscreteTime5 A
.A B
GetNearestTickB P
(P Q
TimelineClipQ ]
.] ^
kMaxTimeValue^ k
)k l
;l m
public 
InfiniteRuntimeClip "
(" #
Playable# +
playable, 4
)4 5
{ 	

m_Playable 
= 
playable !
;! "
} 	
public 
override 
Int64 
intervalStart +
{ 	
get 
{ 
return 
$num 
; 
} 
} 	
public 
override 
Int64 
intervalEnd )
{ 	
get 
{ 
return 
kIntervalEnd %
;% &
}' (
} 	
public 
override 
bool 
enable #
{ 	
set   
{!! 
if"" 
("" 
value"" 
)"" 

m_Playable## 
.## 
Play## #
(### $
)##$ %
;##% &
else$$ 

m_Playable%% 
.%% 
Pause%% $
(%%$ %
)%%% &
;%%& '
}&& 
}'' 	
public)) 
override)) 
void)) 

EvaluateAt)) '
())' (
double))( .
	localTime))/ 8
,))8 9
	FrameData)): C
	frameData))D M
)))M N
{** 	

m_Playable++ 
.++ 
SetTime++ 
(++ 
	localTime++ (
)++( )
;++) *
},, 	
}-- 
}.. ö
êD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Playables\ITimeControl.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
public		 

	interface		 
ITimeControl		 !
{

 
void 
SetTime 
( 
double 
time  
)  !
;! "
void 
OnControlTimeStart 
(  
)  !
;! "
void 
OnControlTimeStop 
( 
)  
;  !
} 
} ‰*
ôD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Utilities\NotificationUtilities.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
static 

class !
NotificationUtilities &
{ 
public		 
static		 
ScriptPlayable		 $
<		$ %%
TimeNotificationBehaviour		% >
>		> ?'
CreateNotificationsPlayable		@ [
(		[ \
PlayableGraph		\ i
graph		j o
,		o p
IEnumerable		q |
<		| }
IMarker			} Ñ
>
		Ñ Ö
markers
		Ü ç
,
		ç é

GameObject
		è ô
go
		ö ú
)
		ú ù
{

 	
var  
notificationPlayable $
=% &
ScriptPlayable' 5
<5 6%
TimeNotificationBehaviour6 O
>O P
.P Q
NullQ U
;U V
var 
director 
= 
go 
. 
GetComponent *
<* +
PlayableDirector+ ;
>; <
(< =
)= >
;> ?
foreach 
( 
var 
e 
in 
markers %
)% &
{ 
var 
notif 
= 
e 
as  
INotification! .
;. /
if 
( 
notif 
== 
null !
)! "
continue 
; 
if 
(  
notificationPlayable (
.( )
Equals) /
(/ 0
ScriptPlayable0 >
<> ?%
TimeNotificationBehaviour? X
>X Y
.Y Z
NullZ ^
)^ _
)_ `
{  
notificationPlayable (
=) *%
TimeNotificationBehaviour+ D
.D E
CreateE K
(K L
graphL Q
,Q R
director  
.  !
playableAsset! .
.. /
duration/ 7
,7 8
director9 A
.A B
extrapolationModeB S
)S T
;T U
} 
var 
time 
= 
( 
DiscreteTime (
)( )
e) *
.* +
time+ /
;/ 0
var 

tlDuration 
=  
(! "
DiscreteTime" .
). /
director/ 7
.7 8
playableAsset8 E
.E F
durationF N
;N O
if 
( 
time 
>= 

tlDuration &
&&' )
time* .
<=/ 1

tlDuration2 <
.< =
OneTickAfter= I
(I J
)J K
&&L N

tlDurationO Y
!=Z \
$num] ^
)^ _
{ 
time 
= 

tlDuration %
.% &
OneTickBefore& 3
(3 4
)4 5
;5 6
} 
var   &
notificationOptionProvider   .
=  / 0
e  1 2
as  3 5'
INotificationOptionProvider  6 Q
;  Q R
if!! 
(!! &
notificationOptionProvider!! .
!=!!/ 1
null!!2 6
)!!6 7
{""  
notificationPlayable## (
.##( )
GetBehaviour##) 5
(##5 6
)##6 7
.##7 8
AddNotification##8 G
(##G H
(##H I
double##I O
)##O P
time##P T
,##T U
notif##V [
,##[ \&
notificationOptionProvider##] w
.##w x
flags##x }
)##} ~
;##~ 
}$$ 
else%% 
{&&  
notificationPlayable'' (
.''( )
GetBehaviour'') 5
(''5 6
)''6 7
.''7 8
AddNotification''8 G
(''G H
(''H I
double''I O
)''O P
time''P T
,''T U
notif''V [
)''[ \
;''\ ]
}(( 
})) 
return++  
notificationPlayable++ '
;++' (
},, 	
public.. 
static.. 
bool.. *
TrackTypeSupportsNotifications.. 9
(..9 :
Type..: >
type..? C
)..C D
{// 	
var00 
binding00 
=00 
(00 %
TrackBindingTypeAttribute00 4
)004 5
	Attribute005 >
.00> ?
GetCustomAttribute00? Q
(00Q R
type00R V
,00V W
typeof00X ^
(00^ _%
TrackBindingTypeAttribute00_ x
)00x y
)00y z
;00z {
return11 
binding11 
!=11 
null11 "
&&11# %
(22 
typeof22 
(22 
	Component22 !
)22! "
.22" #
IsAssignableFrom22# 3
(223 4
binding224 ;
.22; <
type22< @
)22@ A
||22B D
typeof33 
(33 

GameObject33 %
)33% &
.33& '
IsAssignableFrom33' 7
(337 8
binding338 ?
.33? @
type33@ D
)33D E
)33E F
;33F G
}44 	
}55 
}66 ¸
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Utilities\WeightUtility.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
static 

class 
WeightUtility 
{ 
public		 
static		 
float		 
NormalizeMixer		 *
(		* +
Playable		+ 3
mixer		4 9
)		9 :
{

 	
if 
( 
! 
mixer 
. 
IsValid 
( 
)  
)  !
return 
$num 
; 
int 
count 
= 
mixer 
. 
GetInputCount +
(+ ,
), -
;- .
float 
weight 
= 
$num 
;  
for 
( 
int 
c 
= 
$num 
; 
c 
< 
count  %
;% &
c' (
++( *
)* +
{ 
weight 
+= 
mixer 
.  
GetInputWeight  .
(. /
c/ 0
)0 1
;1 2
} 
if 
( 
weight 
> 
Mathf 
. 
Epsilon &
&&' )
weight* 0
<1 2
$num3 4
)4 5
{ 
for 
( 
int 
c 
= 
$num 
; 
c  !
<" #
count$ )
;) *
c+ ,
++, .
). /
{ 
mixer 
. 
SetInputWeight (
(( )
c) *
,* +
mixer, 1
.1 2
GetInputWeight2 @
(@ A
cA B
)B C
/D E
weightF L
)L M
;M N
} 
} 
return 
Mathf 
. 
Clamp01  
(  !
weight! '
)' (
;( )
} 	
} 
} Ò—
ÑD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\TrackAsset.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[ 
Serializable 
] 
[ !
IgnoreOnPlayableTrack 
] 
public 

abstract 
partial 
class !

TrackAsset" ,
:- .
PlayableAsset/ <
,< =
IPropertyPreview> N
,N O
ICurvesOwnerP \
{ 
private 
struct 
TransientBuildData )
{ 	
public 
List 
< 

TrackAsset "
>" #
	trackList$ -
;- .
public   
List   
<   
TimelineClip   $
>  $ %
clipList  & .
;  . /
public!! 
List!! 
<!! 
IMarker!! 
>!!  

markerList!!! +
;!!+ ,
public## 
static## 
TransientBuildData## ,
Create##- 3
(##3 4
)##4 5
{$$ 
return%% 
new%% 
TransientBuildData%% -
(%%- .
)%%. /
{&& 
	trackList'' 
='' 
new''  #
List''$ (
<''( )

TrackAsset'') 3
>''3 4
(''4 5
$num''5 7
)''7 8
,''8 9
clipList(( 
=(( 
new(( "
List((# '
<((' (
TimelineClip((( 4
>((4 5
(((5 6
$num((6 9
)((9 :
,((: ;

markerList)) 
=))  
new))! $
List))% )
<))) *
IMarker))* 1
>))1 2
())2 3
$num))3 6
)))6 7
,))7 8
}** 
;** 
}++ 
public-- 
void-- 
Clear-- 
(-- 
)-- 
{.. 
	trackList// 
.// 
Clear// 
(//  
)//  !
;//! "
clipList00 
.00 
Clear00 
(00 
)00  
;00  !

markerList11 
.11 
Clear11  
(11  !
)11! "
;11" #
}22 
}33 	
private55 
static55 
TransientBuildData55 )
s_BuildData55* 5
=556 7
TransientBuildData558 J
.55J K
Create55K Q
(55Q R
)55R S
;55S T
internal77 
const77 
string77 
kDefaultCurvesName77 0
=771 2
$str773 E
;77E F
internal99 
static99 
event99 
Action99 $
<99$ %
TimelineClip99% 1
,991 2

GameObject993 =
,99= >
Playable99? G
>99G H 
OnClipPlayableCreate99I ]
;99] ^
internal:: 
static:: 
event:: 
Action:: $
<::$ %

TrackAsset::% /
,::/ 0

GameObject::1 ;
,::; <
Playable::= E
>::E F*
OnTrackAnimationPlayableCreate::G e
;::e f
[<< 	
SerializeField<<	 
,<< 
HideInInspector<< (
]<<( )
bool<<* .
m_Locked<</ 7
;<<7 8
[== 	
SerializeField==	 
,== 
HideInInspector== (
]==( )
bool==* .
m_Muted==/ 6
;==6 7
[>> 	
SerializeField>>	 
,>> 
HideInInspector>> (
]>>( )
string>>* 0(
m_CustomPlayableFullTypename>>1 M
=>>N O
string>>P V
.>>V W
Empty>>W \
;>>\ ]
[?? 	
SerializeField??	 
,?? 
HideInInspector?? (
]??( )
AnimationClip??* 7
m_Curves??8 @
;??@ A
[@@ 	
SerializeField@@	 
,@@ 
HideInInspector@@ (
]@@( )
PlayableAsset@@* 7
m_Parent@@8 @
;@@@ A
[AA 	
SerializeFieldAA	 
,AA 
HideInInspectorAA (
]AA( )
ListAA* .
<AA. /
ScriptableObjectAA/ ?
>AA? @

m_ChildrenAAA K
;AAK L
[CC 	
NonSerializedCC	 
]CC 
intCC 
m_ItemsHashCC '
;CC' (
[DD 	
NonSerializedDD	 
]DD 
TimelineClipDD $
[DD$ %
]DD% &
m_ClipsCacheDD' 3
;DD3 4
DiscreteTimeFF 
m_StartFF 
;FF 
DiscreteTimeGG 
m_EndGG 
;GG 
boolHH 
m_CacheSortedHH 
;HH 
boolII 
?II #
m_SupportsNotificationsII %
;II% &
staticKK 

TrackAssetKK 
[KK 
]KK 
s_EmptyCacheKK (
=KK) *
newKK+ .

TrackAssetKK/ 9
[KK9 :
$numKK: ;
]KK; <
;KK< =
IEnumerableLL 
<LL 

TrackAssetLL 
>LL 
m_ChildTrackCacheLL  1
;LL1 2
staticNN 

DictionaryNN 
<NN 
TypeNN 
,NN %
TrackBindingTypeAttributeNN  9
>NN9 :,
 s_TrackBindingTypeAttributeCacheNN; [
=NN\ ]
newNN^ a

DictionaryNNb l
<NNl m
TypeNNm q
,NNq r&
TrackBindingTypeAttribute	NNs å
>
NNå ç
(
NNç é
)
NNé è
;
NNè ê
[PP 	
SerializeFieldPP	 
,PP 
HideInInspectorPP (
]PP( )
	protectedPP* 3
internalPP4 <
ListPP= A
<PPA B
TimelineClipPPB N
>PPN O
m_ClipsPPP W
=PPX Y
newPPZ ]
ListPP^ b
<PPb c
TimelineClipPPc o
>PPo p
(PPp q
)PPq r
;PPr s
[RR 	
SerializeFieldRR	 
,RR 
HideInInspectorRR (
]RR( )

MarkerListRR* 4
	m_MarkersRR5 >
=RR? @
newRRA D

MarkerListRRE O
(RRO P
$numRRP Q
)RRQ R
;RRR S
internalUU 
intUU 

DirtyIndexUU 
{UU  !
getUU" %
;UU% &
privateUU' .
setUU/ 2
;UU2 3
}UU4 5
internalVV 
voidVV 
	MarkDirtyVV 
(VV  
)VV  !
{WW 	

DirtyIndexXX 
++XX 
;XX 
foreachYY 
(YY 
varYY 
clipYY 
inYY  
GetClipsYY! )
(YY) *
)YY* +
)YY+ ,
{ZZ 
if[[ 
([[ 
clip[[ 
!=[[ 
null[[  
)[[  !
clip\\ 
.\\ 
	MarkDirty\\ "
(\\" #
)\\# $
;\\$ %
}]] 
}^^ 	
publicee 
doubleee 
startee 
{ff 	
getgg 
{hh 
UpdateDurationii 
(ii 
)ii  
;ii  !
returnjj 
(jj 
doublejj 
)jj 
m_Startjj &
;jj& '
}kk 
}ll 	
publicqq 
doubleqq 
endqq 
{rr 	
getss 
{tt 
UpdateDurationuu 
(uu 
)uu  
;uu  !
returnvv 
(vv 
doublevv 
)vv 
m_Endvv $
;vv$ %
}ww 
}xx 	
public}} 
sealed}} 
override}} 
double}} %
duration}}& .
{~~ 	
get 
{
ÄÄ 
UpdateDuration
ÅÅ 
(
ÅÅ 
)
ÅÅ  
;
ÅÅ  !
return
ÇÇ 
(
ÇÇ 
double
ÇÇ 
)
ÇÇ 
(
ÇÇ  
m_End
ÇÇ  %
-
ÇÇ& '
m_Start
ÇÇ( /
)
ÇÇ/ 0
;
ÇÇ0 1
}
ÉÉ 
}
ÑÑ 	
public
åå 
bool
åå 
muted
åå 
{
çç 	
get
éé 
{
éé 
return
éé 
m_Muted
éé  
;
éé  !
}
éé" #
set
èè 
{
èè 
m_Muted
èè 
=
èè 
value
èè !
;
èè! "
}
èè# $
}
êê 	
public
òò 
bool
òò 
mutedInHierarchy
òò $
{
ôô 	
get
öö 
{
õõ 
if
úú 
(
úú 
muted
úú 
)
úú 
return
ùù 
true
ùù 
;
ùù  

TrackAsset
üü 
p
üü 
=
üü 
this
üü #
;
üü# $
while
†† 
(
†† 
p
†† 
.
†† 
parent
†† 
as
††  "

TrackAsset
††# -
!=
††. 0
null
††1 5
)
††5 6
{
°° 
p
¢¢ 
=
¢¢ 
(
¢¢ 

TrackAsset
¢¢ #
)
¢¢# $
p
¢¢$ %
.
¢¢% &
parent
¢¢& ,
;
¢¢, -
if
££ 
(
££ 
p
££ 
as
££ 

GroupTrack
££ '
!=
££( *
null
££+ /
)
££/ 0
return
§§ 
p
§§  
.
§§  !
mutedInHierarchy
§§! 1
;
§§1 2
}
•• 
return
ßß 
false
ßß 
;
ßß 
}
®® 
}
©© 	
public
ÆÆ 
TimelineAsset
ÆÆ 
timelineAsset
ÆÆ *
{
ØØ 	
get
∞∞ 
{
±± 
var
≤≤ 
node
≤≤ 
=
≤≤ 
this
≤≤ 
;
≤≤  
while
≥≥ 
(
≥≥ 
node
≥≥ 
!=
≥≥ 
null
≥≥ #
)
≥≥# $
{
¥¥ 
if
µµ 
(
µµ 
node
µµ 
.
µµ 
parent
µµ #
==
µµ$ &
null
µµ' +
)
µµ+ ,
return
∂∂ 
null
∂∂ #
;
∂∂# $
var
∏∏ 
seq
∏∏ 
=
∏∏ 
node
∏∏ "
.
∏∏" #
parent
∏∏# )
as
∏∏* ,
TimelineAsset
∏∏- :
;
∏∏: ;
if
ππ 
(
ππ 
seq
ππ 
!=
ππ 
null
ππ #
)
ππ# $
return
∫∫ 
seq
∫∫ "
;
∫∫" #
node
ºº 
=
ºº 
node
ºº 
.
ºº  
parent
ºº  &
as
ºº' )

TrackAsset
ºº* 4
;
ºº4 5
}
ΩΩ 
return
ææ 
null
ææ 
;
ææ 
}
øø 
}
¿¿ 	
public
»» 
PlayableAsset
»» 
parent
»» #
{
…… 	
get
   
{
   
return
   
m_Parent
   !
;
  ! "
}
  # $
internal
ÀÀ 
set
ÀÀ 
{
ÀÀ 
m_Parent
ÀÀ #
=
ÀÀ$ %
value
ÀÀ& +
;
ÀÀ+ ,
}
ÀÀ- .
}
ÃÃ 	
public
““ 
IEnumerable
““ 
<
““ 
TimelineClip
““ '
>
““' (
GetClips
““) 1
(
““1 2
)
““2 3
{
”” 	
return
‘‘ 
clips
‘‘ 
;
‘‘ 
}
’’ 	
internal
◊◊ 
TimelineClip
◊◊ 
[
◊◊ 
]
◊◊ 
clips
◊◊  %
{
ÿÿ 	
get
ŸŸ 
{
⁄⁄ 
if
€€ 
(
€€ 
m_Clips
€€ 
==
€€ 
null
€€ #
)
€€# $
m_Clips
‹‹ 
=
‹‹ 
new
‹‹ !
List
‹‹" &
<
‹‹& '
TimelineClip
‹‹' 3
>
‹‹3 4
(
‹‹4 5
)
‹‹5 6
;
‹‹6 7
if
ﬁﬁ 
(
ﬁﬁ 
m_ClipsCache
ﬁﬁ  
==
ﬁﬁ! #
null
ﬁﬁ$ (
)
ﬁﬁ( )
{
ﬂﬂ 
m_CacheSorted
‡‡ !
=
‡‡" #
false
‡‡$ )
;
‡‡) *
m_ClipsCache
··  
=
··! "
m_Clips
··# *
.
··* +
ToArray
··+ 2
(
··2 3
)
··3 4
;
··4 5
}
‚‚ 
return
‰‰ 
m_ClipsCache
‰‰ #
;
‰‰# $
}
ÂÂ 
}
ÊÊ 	
public
ÒÒ 
virtual
ÒÒ 
bool
ÒÒ 
isEmpty
ÒÒ #
{
ÚÚ 	
get
ÛÛ 
{
ÛÛ 
return
ÛÛ 
!
ÛÛ 
hasClips
ÛÛ "
&&
ÛÛ# %
!
ÛÛ& '
	hasCurves
ÛÛ' 0
&&
ÛÛ1 3
GetMarkerCount
ÛÛ4 B
(
ÛÛB C
)
ÛÛC D
==
ÛÛE G
$num
ÛÛH I
;
ÛÛI J
}
ÛÛK L
}
ÙÙ 	
public
˘˘ 
bool
˘˘ 
hasClips
˘˘ 
{
˙˙ 	
get
˚˚ 
{
˚˚ 
return
˚˚ 
m_Clips
˚˚  
!=
˚˚! #
null
˚˚$ (
&&
˚˚) +
m_Clips
˚˚, 3
.
˚˚3 4
Count
˚˚4 9
!=
˚˚: <
$num
˚˚= >
;
˚˚> ?
}
˚˚@ A
}
¸¸ 	
public
ÑÑ 
bool
ÑÑ 
	hasCurves
ÑÑ 
{
ÖÖ 	
get
ÜÜ 
{
ÜÜ 
return
ÜÜ 
m_Curves
ÜÜ !
!=
ÜÜ" $
null
ÜÜ% )
&&
ÜÜ* ,
!
ÜÜ- .
m_Curves
ÜÜ. 6
.
ÜÜ6 7
empty
ÜÜ7 <
;
ÜÜ< =
}
ÜÜ> ?
}
áá 	
public
åå 
bool
åå 

isSubTrack
åå 
{
çç 	
get
éé 
{
èè 
var
êê 
owner
êê 
=
êê 
parent
êê "
as
êê# %

TrackAsset
êê& 0
;
êê0 1
return
ëë 
owner
ëë 
!=
ëë 
null
ëë  $
&&
ëë% '
owner
ëë( -
.
ëë- .
GetType
ëë. 5
(
ëë5 6
)
ëë6 7
==
ëë8 :
GetType
ëë; B
(
ëëB C
)
ëëC D
;
ëëD E
}
íí 
}
ìì 	
public
ôô 
override
ôô 
IEnumerable
ôô #
<
ôô# $
PlayableBinding
ôô$ 3
>
ôô3 4
outputs
ôô5 <
{
öö 	
get
õõ 
{
úú '
TrackBindingTypeAttribute
ùù )
	attribute
ùù* 3
;
ùù3 4
if
ûû 
(
ûû 
!
ûû .
 s_TrackBindingTypeAttributeCache
ûû 5
.
ûû5 6
TryGetValue
ûû6 A
(
ûûA B
GetType
ûûB I
(
ûûI J
)
ûûJ K
,
ûûK L
out
ûûM P
	attribute
ûûQ Z
)
ûûZ [
)
ûû[ \
{
üü 
	attribute
†† 
=
†† 
(
††  !'
TrackBindingTypeAttribute
††! :
)
††: ;
	Attribute
††; D
.
††D E 
GetCustomAttribute
††E W
(
††W X
GetType
††X _
(
††_ `
)
††` a
,
††a b
typeof
††c i
(
††i j(
TrackBindingTypeAttribute††j É
)††É Ñ
)††Ñ Ö
;††Ö Ü.
 s_TrackBindingTypeAttributeCache
°° 4
.
°°4 5
Add
°°5 8
(
°°8 9
GetType
°°9 @
(
°°@ A
)
°°A B
,
°°B C
	attribute
°°D M
)
°°M N
;
°°N O
}
¢¢ 
var
§§ 
trackBindingType
§§ $
=
§§% &
	attribute
§§' 0
!=
§§1 3
null
§§4 8
?
§§9 :
	attribute
§§; D
.
§§D E
type
§§E I
:
§§J K
null
§§L P
;
§§P Q
yield
•• 
return
•• #
ScriptPlayableBinding
•• 2
.
••2 3
Create
••3 9
(
••9 :
name
••: >
,
••> ?
this
••@ D
,
••D E
trackBindingType
••F V
)
••V W
;
••W X
}
¶¶ 
}
ßß 	
public
∞∞ 
IEnumerable
∞∞ 
<
∞∞ 

TrackAsset
∞∞ %
>
∞∞% &
GetChildTracks
∞∞' 5
(
∞∞5 6
)
∞∞6 7
{
±± 	#
UpdateChildTrackCache
≤≤ !
(
≤≤! "
)
≤≤" #
;
≤≤# $
return
≥≥ 
m_ChildTrackCache
≥≥ $
;
≥≥$ %
}
¥¥ 	
internal
∂∂ 
string
∂∂ $
customPlayableTypename
∂∂ .
{
∑∑ 	
get
∏∏ 
{
∏∏ 
return
∏∏ *
m_CustomPlayableFullTypename
∏∏ 5
;
∏∏5 6
}
∏∏7 8
set
ππ 
{
ππ *
m_CustomPlayableFullTypename
ππ .
=
ππ/ 0
value
ππ1 6
;
ππ6 7
}
ππ8 9
}
∫∫ 	
public
øø 
AnimationClip
øø 
curves
øø #
{
¿¿ 	
get
¡¡ 
{
¡¡ 
return
¡¡ 
m_Curves
¡¡ !
;
¡¡! "
}
¡¡# $
internal
¬¬ 
set
¬¬ 
{
¬¬ 
m_Curves
¬¬ #
=
¬¬$ %
value
¬¬& +
;
¬¬+ ,
}
¬¬- .
}
√√ 	
string
≈≈ 
ICurvesOwner
≈≈ 
.
≈≈ 
defaultCurvesName
≈≈ -
{
∆∆ 	
get
«« 
{
«« 
return
««  
kDefaultCurvesName
«« +
;
««+ ,
}
««- .
}
»» 	
Object
   
ICurvesOwner
   
.
   
asset
   !
{
ÀÀ 	
get
ÃÃ 
{
ÃÃ 
return
ÃÃ 
this
ÃÃ 
;
ÃÃ 
}
ÃÃ  
}
ÕÕ 	
Object
œœ 
ICurvesOwner
œœ 
.
œœ 

assetOwner
œœ &
{
–– 	
get
—— 
{
—— 
return
—— 
timelineAsset
—— &
;
——& '
}
——( )
}
““ 	

TrackAsset
‘‘ 
ICurvesOwner
‘‘ 
.
‘‘  
targetTrack
‘‘  +
{
’’ 	
get
÷÷ 
{
÷÷ 
return
÷÷ 
this
÷÷ 
;
÷÷ 
}
÷÷  
}
◊◊ 	
internal
⁄⁄ 
List
⁄⁄ 
<
⁄⁄ 
ScriptableObject
⁄⁄ &
>
⁄⁄& '
subTracksObjects
⁄⁄( 8
{
€€ 	
get
‹‹ 
{
‹‹ 
return
‹‹ 

m_Children
‹‹ #
;
‹‹# $
}
‹‹% &
}
›› 	
public
ÁÁ 
bool
ÁÁ 
locked
ÁÁ 
{
ËË 	
get
ÈÈ 
{
ÈÈ 
return
ÈÈ 
m_Locked
ÈÈ !
;
ÈÈ! "
}
ÈÈ# $
set
ÍÍ 
{
ÍÍ 
m_Locked
ÍÍ 
=
ÍÍ 
value
ÍÍ "
;
ÍÍ" #
}
ÍÍ$ %
}
ÎÎ 	
public
ıı 
bool
ıı 
lockedInHierarchy
ıı %
{
ˆˆ 	
get
˜˜ 
{
¯¯ 
if
˘˘ 
(
˘˘ 
locked
˘˘ 
)
˘˘ 
return
˙˙ 
true
˙˙ 
;
˙˙  

TrackAsset
¸¸ 
p
¸¸ 
=
¸¸ 
this
¸¸ #
;
¸¸# $
while
˝˝ 
(
˝˝ 
p
˝˝ 
.
˝˝ 
parent
˝˝ 
as
˝˝  "

TrackAsset
˝˝# -
!=
˝˝. 0
null
˝˝1 5
)
˝˝5 6
{
˛˛ 
p
ˇˇ 
=
ˇˇ 
(
ˇˇ 

TrackAsset
ˇˇ #
)
ˇˇ# $
p
ˇˇ$ %
.
ˇˇ% &
parent
ˇˇ& ,
;
ˇˇ, -
if
ÄÄ 
(
ÄÄ 
p
ÄÄ 
as
ÄÄ 

GroupTrack
ÄÄ '
!=
ÄÄ( *
null
ÄÄ+ /
)
ÄÄ/ 0
return
ÅÅ 
p
ÅÅ  
.
ÅÅ  !
lockedInHierarchy
ÅÅ! 2
;
ÅÅ2 3
}
ÇÇ 
return
ÑÑ 
false
ÑÑ 
;
ÑÑ 
}
ÖÖ 
}
ÜÜ 	
public
éé 
bool
éé #
supportsNotifications
éé )
{
èè 	
get
êê 
{
ëë 
if
íí 
(
íí 
!
íí %
m_SupportsNotifications
íí ,
.
íí, -
HasValue
íí- 5
)
íí5 6
{
ìì %
m_SupportsNotifications
îî +
=
îî, -#
NotificationUtilities
îî. C
.
îîC D,
TrackTypeSupportsNotifications
îîD b
(
îîb c
GetType
îîc j
(
îîj k
)
îîk l
)
îîl m
;
îîm n
}
ïï 
return
óó %
m_SupportsNotifications
óó .
.
óó. /
Value
óó/ 4
;
óó4 5
}
òò 
}
ôô 	
void
õõ 
__internalAwake
õõ 
(
õõ 
)
õõ 
{
úú 	
if
ùù 
(
ùù 
m_Clips
ùù 
==
ùù 
null
ùù 
)
ùù  
m_Clips
ûû 
=
ûû 
new
ûû 
List
ûû "
<
ûû" #
TimelineClip
ûû# /
>
ûû/ 0
(
ûû0 1
)
ûû1 2
;
ûû2 3
m_ChildTrackCache
†† 
=
†† 
null
††  $
;
††$ %
if
°° 
(
°° 

m_Children
°° 
==
°° 
null
°° "
)
°°" #

m_Children
¢¢ 
=
¢¢ 
new
¢¢  
List
¢¢! %
<
¢¢% &
ScriptableObject
¢¢& 6
>
¢¢6 7
(
¢¢7 8
)
¢¢8 9
;
¢¢9 :
for
•• 
(
•• 
int
•• 
i
•• 
=
•• 

m_Children
•• #
.
••# $
Count
••$ )
-
••* +
$num
••, -
;
••- .
i
••/ 0
>=
••1 3
$num
••4 5
;
••5 6
i
••7 8
--
••8 :
)
••: ;
{
¶¶ 
object
ßß 
o
ßß 
=
ßß 

m_Children
ßß %
[
ßß% &
i
ßß& '
]
ßß' (
;
ßß( )
if
®® 
(
®® 
o
®® 
==
®® 
null
®® 
)
®® 
{
©© 
Debug
™™ 
.
™™ 

LogWarning
™™ $
(
™™$ %
$str
™™% j
)
™™j k
;
™™k l

m_Children
´´ 
.
´´ 
RemoveAt
´´ '
(
´´' (
i
´´( )
)
´´) *
;
´´* +
}
¨¨ 
}
≠≠ 
}
ØØ 	
public
¬¬ 
void
¬¬ 
CreateCurves
¬¬  
(
¬¬  !
string
¬¬! '
curvesClipName
¬¬( 6
)
¬¬6 7
{
√√ 	
if
ƒƒ 
(
ƒƒ 
m_Curves
ƒƒ 
!=
ƒƒ 
null
ƒƒ  
)
ƒƒ  !
return
≈≈ 
;
≈≈ 
m_Curves
«« 
=
«« %
TimelineCreateUtilities
«« .
.
««. /)
CreateAnimationClipForTrack
««/ J
(
««J K
string
««K Q
.
««Q R
IsNullOrEmpty
««R _
(
««_ `
curvesClipName
««` n
)
««n o
?
««p q!
kDefaultCurvesName««r Ñ
:««Ö Ü
curvesClipName««á ï
,««ï ñ
this««ó õ
,««õ ú
true««ù °
)««° ¢
;««¢ £
}
»» 	
public
‘‘ 
virtual
‘‘ 
Playable
‘‘ 
CreateTrackMixer
‘‘  0
(
‘‘0 1
PlayableGraph
‘‘1 >
graph
‘‘? D
,
‘‘D E

GameObject
‘‘F P
go
‘‘Q S
,
‘‘S T
int
‘‘U X

inputCount
‘‘Y c
)
‘‘c d
{
’’ 	
return
÷÷ 
Playable
÷÷ 
.
÷÷ 
Create
÷÷ "
(
÷÷" #
graph
÷÷# (
,
÷÷( )

inputCount
÷÷* 4
)
÷÷4 5
;
÷÷5 6
}
◊◊ 	
public
ﬂﬂ 
sealed
ﬂﬂ 
override
ﬂﬂ 
Playable
ﬂﬂ '
CreatePlayable
ﬂﬂ( 6
(
ﬂﬂ6 7
PlayableGraph
ﬂﬂ7 D
graph
ﬂﬂE J
,
ﬂﬂJ K

GameObject
ﬂﬂL V
go
ﬂﬂW Y
)
ﬂﬂY Z
{
‡‡ 	
return
·· 
Playable
·· 
.
·· 
Null
··  
;
··  !
}
‚‚ 	
public
ÎÎ 
TimelineClip
ÎÎ 
CreateDefaultClip
ÎÎ -
(
ÎÎ- .
)
ÎÎ. /
{
ÏÏ 	
var
ÌÌ %
trackClipTypeAttributes
ÌÌ '
=
ÌÌ( )
GetType
ÌÌ* 1
(
ÌÌ1 2
)
ÌÌ2 3
.
ÌÌ3 4!
GetCustomAttributes
ÌÌ4 G
(
ÌÌG H
typeof
ÌÌH N
(
ÌÌN O$
TrackClipTypeAttribute
ÌÌO e
)
ÌÌe f
,
ÌÌf g
true
ÌÌh l
)
ÌÌl m
;
ÌÌm n
Type
ÓÓ 
playableAssetType
ÓÓ "
=
ÓÓ# $
null
ÓÓ% )
;
ÓÓ) *
foreach
ÔÔ 
(
ÔÔ 
var
ÔÔ $
trackClipTypeAttribute
ÔÔ /
in
ÔÔ0 2%
trackClipTypeAttributes
ÔÔ3 J
)
ÔÔJ K
{
 
var
ÒÒ 
	attribute
ÒÒ 
=
ÒÒ $
trackClipTypeAttribute
ÒÒ  6
as
ÒÒ7 9$
TrackClipTypeAttribute
ÒÒ: P
;
ÒÒP Q
if
ÚÚ 
(
ÚÚ 
	attribute
ÚÚ 
!=
ÚÚ  
null
ÚÚ! %
&&
ÚÚ& (
typeof
ÚÚ) /
(
ÚÚ/ 0
IPlayableAsset
ÚÚ0 >
)
ÚÚ> ?
.
ÚÚ? @
IsAssignableFrom
ÚÚ@ P
(
ÚÚP Q
	attribute
ÚÚQ Z
.
ÚÚZ [
inspectedType
ÚÚ[ h
)
ÚÚh i
&&
ÚÚj l
typeof
ÚÚm s
(
ÚÚs t
ScriptableObjectÚÚt Ñ
)ÚÚÑ Ö
.ÚÚÖ Ü 
IsAssignableFromÚÚÜ ñ
(ÚÚñ ó
	attributeÚÚó †
.ÚÚ† °
inspectedTypeÚÚ° Æ
)ÚÚÆ Ø
)ÚÚØ ∞
{
ÛÛ 
playableAssetType
ÙÙ %
=
ÙÙ& '
	attribute
ÙÙ( 1
.
ÙÙ1 2
inspectedType
ÙÙ2 ?
;
ÙÙ? @
break
ıı 
;
ıı 
}
ˆˆ 
}
˜˜ 
if
˘˘ 
(
˘˘ 
playableAssetType
˘˘ !
==
˘˘" $
null
˘˘% )
)
˘˘) *
{
˙˙ 
Debug
˚˚ 
.
˚˚ 

LogWarning
˚˚  
(
˚˚  !
$str
˚˚! I
+
˚˚J K
GetType
˚˚L S
(
˚˚S T
)
˚˚T U
)
˚˚U V
;
˚˚V W
return
¸¸ 
null
¸¸ 
;
¸¸ 
}
˝˝ 
return
˛˛ '
CreateAndAddNewClipOfType
˛˛ ,
(
˛˛, -
playableAssetType
˛˛- >
)
˛˛> ?
;
˛˛? @
}
ˇˇ 	
public
ää 
TimelineClip
ää 

CreateClip
ää &
<
ää& '
T
ää' (
>
ää( )
(
ää) *
)
ää* +
where
ää, 1
T
ää2 3
:
ää4 5
ScriptableObject
ää6 F
,
ääF G
IPlayableAsset
ääH V
{
ãã 	
return
åå 

CreateClip
åå 
(
åå 
typeof
åå $
(
åå$ %
T
åå% &
)
åå& '
)
åå' (
;
åå( )
}
çç 	
public
öö 
bool
öö 

DeleteClip
öö 
(
öö 
TimelineClip
öö +
clip
öö, 0
)
öö0 1
{
õõ 	
if
úú 
(
úú 
!
úú 
m_Clips
úú 
.
úú 
Contains
úú !
(
úú! "
clip
úú" &
)
úú& '
)
úú' (
throw
ùù 
new
ùù '
InvalidOperationException
ùù 3
(
ùù3 4
$str
ùù4 s
)
ùùs t
;
ùùt u
return
üü 
timelineAsset
üü  
!=
üü! #
null
üü$ (
&&
üü) +
timelineAsset
üü, 9
.
üü9 :

DeleteClip
üü: D
(
üüD E
clip
üüE I
)
üüI J
;
üüJ K
}
†† 	
public
ØØ 
IMarker
ØØ 
CreateMarker
ØØ #
(
ØØ# $
Type
ØØ$ (
type
ØØ) -
,
ØØ- .
double
ØØ/ 5
time
ØØ6 :
)
ØØ: ;
{
∞∞ 	
return
±± 
	m_Markers
±± 
.
±± 
CreateMarker
±± )
(
±±) *
type
±±* .
,
±±. /
time
±±0 4
,
±±4 5
this
±±6 :
)
±±: ;
;
±±; <
}
≤≤ 	
public
¿¿ 
T
¿¿ 
CreateMarker
¿¿ 
<
¿¿ 
T
¿¿ 
>
¿¿  
(
¿¿  !
double
¿¿! '
time
¿¿( ,
)
¿¿, -
where
¿¿. 3
T
¿¿4 5
:
¿¿6 7
ScriptableObject
¿¿8 H
,
¿¿H I
IMarker
¿¿J Q
{
¡¡ 	
return
¬¬ 
(
¬¬ 
T
¬¬ 
)
¬¬ 
CreateMarker
¬¬ "
(
¬¬" #
typeof
¬¬# )
(
¬¬) *
T
¬¬* +
)
¬¬+ ,
,
¬¬, -
time
¬¬. 2
)
¬¬2 3
;
¬¬3 4
}
√√ 	
public
   
bool
   
DeleteMarker
    
(
    !
IMarker
  ! (
marker
  ) /
)
  / 0
{
ÀÀ 	
return
ÃÃ 
	m_Markers
ÃÃ 
.
ÃÃ 
Remove
ÃÃ #
(
ÃÃ# $
marker
ÃÃ$ *
)
ÃÃ* +
;
ÃÃ+ ,
}
ÕÕ 	
public
‘‘ 
IEnumerable
‘‘ 
<
‘‘ 
IMarker
‘‘ "
>
‘‘" #

GetMarkers
‘‘$ .
(
‘‘. /
)
‘‘/ 0
{
’’ 	
return
÷÷ 
	m_Markers
÷÷ 
.
÷÷ 

GetMarkers
÷÷ '
(
÷÷' (
)
÷÷( )
;
÷÷) *
}
◊◊ 	
public
›› 
int
›› 
GetMarkerCount
›› !
(
››! "
)
››" #
{
ﬁﬁ 	
return
ﬂﬂ 
	m_Markers
ﬂﬂ 
.
ﬂﬂ 
Count
ﬂﬂ "
;
ﬂﬂ" #
}
‡‡ 	
public
ÈÈ 
IMarker
ÈÈ 
	GetMarker
ÈÈ  
(
ÈÈ  !
int
ÈÈ! $
idx
ÈÈ% (
)
ÈÈ( )
{
ÍÍ 	
return
ÎÎ 
	m_Markers
ÎÎ 
[
ÎÎ 
idx
ÎÎ  
]
ÎÎ  !
;
ÎÎ! "
}
ÏÏ 	
internal
ÓÓ 
TimelineClip
ÓÓ 

CreateClip
ÓÓ (
(
ÓÓ( )
System
ÓÓ) /
.
ÓÓ/ 0
Type
ÓÓ0 4
requestedType
ÓÓ5 B
)
ÓÓB C
{
ÔÔ 	
if
 
(
 
ValidateClipType
  
(
  !
requestedType
! .
)
. /
)
/ 0
return
ÒÒ '
CreateAndAddNewClipOfType
ÒÒ 0
(
ÒÒ0 1
requestedType
ÒÒ1 >
)
ÒÒ> ?
;
ÒÒ? @
throw
ÛÛ 
new
ÛÛ '
InvalidOperationException
ÛÛ /
(
ÛÛ/ 0
$str
ÛÛ0 @
+
ÛÛA B
requestedType
ÛÛC P
+
ÛÛQ R
$str
ÛÛS z
+
ÛÛ{ |
GetTypeÛÛ} Ñ
(ÛÛÑ Ö
)ÛÛÖ Ü
)ÛÛÜ á
;ÛÛá à
}
ÙÙ 	
internal
ˆˆ 
TimelineClip
ˆˆ '
CreateAndAddNewClipOfType
ˆˆ 7
(
ˆˆ7 8
Type
ˆˆ8 <
requestedType
ˆˆ= J
)
ˆˆJ K
{
˜˜ 	
var
¯¯ 
newClip
¯¯ 
=
¯¯ 
CreateClipOfType
¯¯ *
(
¯¯* +
requestedType
¯¯+ 8
)
¯¯8 9
;
¯¯9 :
AddClip
˘˘ 
(
˘˘ 
newClip
˘˘ 
)
˘˘ 
;
˘˘ 
return
˙˙ 
newClip
˙˙ 
;
˙˙ 
}
˚˚ 	
internal
˝˝ 
TimelineClip
˝˝ 
CreateClipOfType
˝˝ .
(
˝˝. /
Type
˝˝/ 3
requestedType
˝˝4 A
)
˝˝A B
{
˛˛ 	
if
ˇˇ 
(
ˇˇ 
!
ˇˇ 
ValidateClipType
ˇˇ !
(
ˇˇ! "
requestedType
ˇˇ" /
)
ˇˇ/ 0
)
ˇˇ0 1
throw
ÄÄ 
new
ÄÄ 
System
ÄÄ  
.
ÄÄ  !'
InvalidOperationException
ÄÄ! :
(
ÄÄ: ;
$str
ÄÄ; K
+
ÄÄL M
requestedType
ÄÄN [
+
ÄÄ\ ]
$strÄÄ^ Ö
+ÄÄÜ á
GetTypeÄÄà è
(ÄÄè ê
)ÄÄê ë
)ÄÄë í
;ÄÄí ì
var
ÇÇ 
playableAsset
ÇÇ 
=
ÇÇ 
CreateInstance
ÇÇ  .
(
ÇÇ. /
requestedType
ÇÇ/ <
)
ÇÇ< =
;
ÇÇ= >
if
ÉÉ 
(
ÉÉ 
playableAsset
ÉÉ 
==
ÉÉ  
null
ÉÉ! %
)
ÉÉ% &
{
ÑÑ 
throw
ÖÖ 
new
ÖÖ 
System
ÖÖ  
.
ÖÖ  !'
InvalidOperationException
ÖÖ! :
(
ÖÖ: ;
$str
ÖÖ; w
+
ÖÖx y
requestedTypeÖÖz á
.ÖÖá à
NameÖÖà å
)ÖÖå ç
;ÖÖç é
}
ÜÜ 
playableAsset
áá 
.
áá 
name
áá 
=
áá  
requestedType
áá! .
.
áá. /
Name
áá/ 3
;
áá3 4%
TimelineCreateUtilities
àà #
.
àà# $!
SaveAssetIntoObject
àà$ 7
(
àà7 8
playableAsset
àà8 E
,
ààE F
this
ààG K
)
ààK L
;
ààL M
TimelineUndo
ââ 
.
ââ '
RegisterCreatedObjectUndo
ââ 2
(
ââ2 3
playableAsset
ââ3 @
,
ââ@ A
$str
ââB O
)
ââO P
;
ââP Q
return
ãã !
CreateClipFromAsset
ãã &
(
ãã& '
playableAsset
ãã' 4
)
ãã4 5
;
ãã5 6
}
åå 	
internal
ìì 
TimelineClip
ìì )
CreateClipFromPlayableAsset
ìì 9
(
ìì9 :
IPlayableAsset
ìì: H
asset
ììI N
)
ììN O
{
îî 	
if
ïï 
(
ïï 
asset
ïï 
==
ïï 
null
ïï 
)
ïï 
throw
ññ 
new
ññ #
ArgumentNullException
ññ /
(
ññ/ 0
$str
ññ0 7
)
ññ7 8
;
ññ8 9
if
òò 
(
òò 
(
òò 
asset
òò 
as
òò 
ScriptableObject
òò *
)
òò* +
==
òò, .
null
òò/ 3
)
òò3 4
throw
ôô 
new
ôô 
System
ôô  
.
ôô  !
ArgumentException
ôô! 2
(
ôô2 3
$str
ôô3 Q
+
ôôR S
$strôôT É
)ôôÉ Ñ
;ôôÑ Ö
if
õõ 
(
õõ 
!
õõ 
ValidateClipType
õõ !
(
õõ! "
asset
õõ" '
.
õõ' (
GetType
õõ( /
(
õõ/ 0
)
õõ0 1
)
õõ1 2
)
õõ2 3
throw
úú 
new
úú 
System
úú  
.
úú  !'
InvalidOperationException
úú! :
(
úú: ;
$str
úú; K
+
úúL M
asset
úúN S
.
úúS T
GetType
úúT [
(
úú[ \
)
úú\ ]
+
úú^ _
$strúú` á
+úúà â
GetTypeúúä ë
(úúë í
)úúí ì
)úúì î
;úúî ï
return
ûû !
CreateClipFromAsset
ûû &
(
ûû& '
asset
ûû' ,
as
ûû- /
ScriptableObject
ûû0 @
)
ûû@ A
;
ûûA B
}
üü 	
private
°° 
TimelineClip
°° !
CreateClipFromAsset
°° 0
(
°°0 1
ScriptableObject
°°1 A
playableAsset
°°B O
)
°°O P
{
¢¢ 	
TimelineUndo
££ 
.
££ 
PushUndo
££ !
(
££! "
this
££" &
,
££& '
$str
££( 5
)
££5 6
;
££6 7
var
•• 
newClip
•• 
=
•• ,
CreateNewClipContainerInternal
•• 8
(
••8 9
)
••9 :
;
••: ;
newClip
¶¶ 
.
¶¶ 
displayName
¶¶ 
=
¶¶  !
playableAsset
¶¶" /
.
¶¶/ 0
name
¶¶0 4
;
¶¶4 5
newClip
ßß 
.
ßß 
asset
ßß 
=
ßß 
playableAsset
ßß )
;
ßß) *
IPlayableAsset
©© 
iPlayableAsset
©© )
=
©©* +
playableAsset
©©, 9
as
©©: <
IPlayableAsset
©©= K
;
©©K L
if
™™ 
(
™™ 
iPlayableAsset
™™ 
!=
™™ !
null
™™" &
)
™™& '
{
´´ 
var
¨¨ 
candidateDuration
¨¨ %
=
¨¨& '
iPlayableAsset
¨¨( 6
.
¨¨6 7
duration
¨¨7 ?
;
¨¨? @
if
ÆÆ 
(
ÆÆ 
!
ÆÆ 
double
ÆÆ 
.
ÆÆ 

IsInfinity
ÆÆ &
(
ÆÆ& '
candidateDuration
ÆÆ' 8
)
ÆÆ8 9
&&
ÆÆ: <
candidateDuration
ÆÆ= N
>
ÆÆO P
$num
ÆÆQ R
)
ÆÆR S
newClip
ØØ 
.
ØØ 
duration
ØØ $
=
ØØ% &
Math
ØØ' +
.
ØØ+ ,
Min
ØØ, /
(
ØØ/ 0
Math
ØØ0 4
.
ØØ4 5
Max
ØØ5 8
(
ØØ8 9
candidateDuration
ØØ9 J
,
ØØJ K
TimelineClip
ØØL X
.
ØØX Y
kMinDuration
ØØY e
)
ØØe f
,
ØØf g
TimelineClip
ØØh t
.
ØØt u
kMaxTimeValueØØu Ç
)ØØÇ É
;ØØÉ Ñ
}
∞∞ 
try
≤≤ 
{
≥≥ 
OnCreateClip
¥¥ 
(
¥¥ 
newClip
¥¥ $
)
¥¥$ %
;
¥¥% &
}
µµ 
catch
∂∂ 
(
∂∂ 
	Exception
∂∂ 
e
∂∂ 
)
∂∂ 
{
∑∑ 
Debug
∏∏ 
.
∏∏ 
LogError
∏∏ 
(
∏∏ 
e
∏∏  
.
∏∏  !
Message
∏∏! (
,
∏∏( )
playableAsset
∏∏* 7
)
∏∏7 8
;
∏∏8 9
return
ππ 
null
ππ 
;
ππ 
}
∫∫ 
return
ºº 
newClip
ºº 
;
ºº 
}
ΩΩ 	
internal
øø 
IEnumerable
øø 
<
øø 
ScriptableObject
øø -
>
øø- .
GetMarkersRaw
øø/ <
(
øø< =
)
øø= >
{
¿¿ 	
return
¡¡ 
	m_Markers
¡¡ 
.
¡¡ 
GetRawMarkerList
¡¡ -
(
¡¡- .
)
¡¡. /
;
¡¡/ 0
}
¬¬ 	
internal
ƒƒ 
void
ƒƒ 
ClearMarkers
ƒƒ "
(
ƒƒ" #
)
ƒƒ# $
{
≈≈ 	
	m_Markers
∆∆ 
.
∆∆ 
Clear
∆∆ 
(
∆∆ 
)
∆∆ 
;
∆∆ 
}
«« 	
internal
…… 
void
…… 
	AddMarker
…… 
(
……  
ScriptableObject
……  0
e
……1 2
)
……2 3
{
   	
	m_Markers
ÀÀ 
.
ÀÀ 
Add
ÀÀ 
(
ÀÀ 
e
ÀÀ 
)
ÀÀ 
;
ÀÀ 
}
ÃÃ 	
internal
ŒŒ 
bool
ŒŒ 
DeleteMarkerRaw
ŒŒ %
(
ŒŒ% &
ScriptableObject
ŒŒ& 6
marker
ŒŒ7 =
)
ŒŒ= >
{
œœ 	
return
–– 
	m_Markers
–– 
.
–– 
Remove
–– #
(
––# $
marker
––$ *
,
––* +
timelineAsset
––, 9
,
––9 :
this
––; ?
)
––? @
;
––@ A
}
—— 	
int
”” 
GetTimeRangeHash
”” 
(
”” 
)
”” 
{
‘‘ 	
double
’’ 
start
’’ 
=
’’ 
double
’’ !
.
’’! "
MaxValue
’’" *
,
’’* +
end
’’, /
=
’’0 1
double
’’2 8
.
’’8 9
MinValue
’’9 A
;
’’A B
foreach
÷÷ 
(
÷÷ 
var
÷÷ 
marker
÷÷ 
in
÷÷  "

GetMarkers
÷÷# -
(
÷÷- .
)
÷÷. /
)
÷÷/ 0
{
◊◊ 
if
ÿÿ 
(
ÿÿ 
!
ÿÿ 
(
ÿÿ 
marker
ÿÿ 
is
ÿÿ 
INotification
ÿÿ  -
)
ÿÿ- .
)
ÿÿ. /
{
ŸŸ 
continue
⁄⁄ 
;
⁄⁄ 
}
€€ 
if
›› 
(
›› 
marker
›› 
.
›› 
time
›› 
<
››  !
start
››" '
)
››' (
start
ﬁﬁ 
=
ﬁﬁ 
marker
ﬁﬁ "
.
ﬁﬁ" #
time
ﬁﬁ# '
;
ﬁﬁ' (
if
ﬂﬂ 
(
ﬂﬂ 
marker
ﬂﬂ 
.
ﬂﬂ 
time
ﬂﬂ 
>
ﬂﬂ  !
end
ﬂﬂ" %
)
ﬂﬂ% &
end
‡‡ 
=
‡‡ 
marker
‡‡  
.
‡‡  !
time
‡‡! %
;
‡‡% &
}
·· 
return
„„ 
start
„„ 
.
„„ 
GetHashCode
„„ $
(
„„$ %
)
„„% &
.
„„& '
CombineHash
„„' 2
(
„„2 3
end
„„3 6
.
„„6 7
GetHashCode
„„7 B
(
„„B C
)
„„C D
)
„„D E
;
„„E F
}
‰‰ 	
internal
ÊÊ 
void
ÊÊ 
AddClip
ÊÊ 
(
ÊÊ 
TimelineClip
ÊÊ *
newClip
ÊÊ+ 2
)
ÊÊ2 3
{
ÁÁ 	
if
ËË 
(
ËË 
!
ËË 
m_Clips
ËË 
.
ËË 
Contains
ËË !
(
ËË! "
newClip
ËË" )
)
ËË) *
)
ËË* +
{
ÈÈ 
m_Clips
ÍÍ 
.
ÍÍ 
Add
ÍÍ 
(
ÍÍ 
newClip
ÍÍ #
)
ÍÍ# $
;
ÍÍ$ %
m_ClipsCache
ÎÎ 
=
ÎÎ 
null
ÎÎ #
;
ÎÎ# $
}
ÏÏ 
}
ÌÌ 	
Playable
ÔÔ )
CreateNotificationsPlayable
ÔÔ ,
(
ÔÔ, -
PlayableGraph
ÔÔ- :
graph
ÔÔ; @
,
ÔÔ@ A
Playable
ÔÔB J
mixerPlayable
ÔÔK X
,
ÔÔX Y

GameObject
ÔÔZ d
go
ÔÔe g
,
ÔÔg h
Playable
ÔÔi q
timelinePlayableÔÔr Ç
)ÔÔÇ É
{
 	
s_BuildData
ÒÒ 
.
ÒÒ 

markerList
ÒÒ "
.
ÒÒ" #
Clear
ÒÒ# (
(
ÒÒ( )
)
ÒÒ) *
;
ÒÒ* +"
GatherNotificiations
ÚÚ  
(
ÚÚ  !
s_BuildData
ÚÚ! ,
.
ÚÚ, -

markerList
ÚÚ- 7
)
ÚÚ7 8
;
ÚÚ8 9
var
ÛÛ "
notificationPlayable
ÛÛ $
=
ÛÛ% &#
NotificationUtilities
ÛÛ' <
.
ÛÛ< =)
CreateNotificationsPlayable
ÛÛ= X
(
ÛÛX Y
graph
ÛÛY ^
,
ÛÛ^ _
s_BuildData
ÛÛ` k
.
ÛÛk l

markerList
ÛÛl v
,
ÛÛv w
go
ÛÛx z
)
ÛÛz {
;
ÛÛ{ |
if
ÙÙ 
(
ÙÙ "
notificationPlayable
ÙÙ $
.
ÙÙ$ %
IsValid
ÙÙ% ,
(
ÙÙ, -
)
ÙÙ- .
)
ÙÙ. /
{
ıı "
notificationPlayable
ˆˆ $
.
ˆˆ$ %
GetBehaviour
ˆˆ% 1
(
ˆˆ1 2
)
ˆˆ2 3
.
ˆˆ3 4

timeSource
ˆˆ4 >
=
ˆˆ? @
timelinePlayable
ˆˆA Q
;
ˆˆQ R
if
˜˜ 
(
˜˜ 
mixerPlayable
˜˜ !
.
˜˜! "
IsValid
˜˜" )
(
˜˜) *
)
˜˜* +
)
˜˜+ ,
{
¯¯ "
notificationPlayable
˘˘ (
.
˘˘( )
SetInputCount
˘˘) 6
(
˘˘6 7
$num
˘˘7 8
)
˘˘8 9
;
˘˘9 :
graph
˙˙ 
.
˙˙ 
Connect
˙˙ !
(
˙˙! "
mixerPlayable
˙˙" /
,
˙˙/ 0
$num
˙˙1 2
,
˙˙2 3"
notificationPlayable
˙˙4 H
,
˙˙H I
$num
˙˙J K
)
˙˙K L
;
˙˙L M"
notificationPlayable
˚˚ (
.
˚˚( )
SetInputWeight
˚˚) 7
(
˚˚7 8
mixerPlayable
˚˚8 E
,
˚˚E F
$num
˚˚G H
)
˚˚H I
;
˚˚I J
}
¸¸ 
}
˝˝ 
return
ˇˇ "
notificationPlayable
ˇˇ '
;
ˇˇ' (
}
ÄÄ 	
internal
ÇÇ 
Playable
ÇÇ !
CreatePlayableGraph
ÇÇ -
(
ÇÇ- .
PlayableGraph
ÇÇ. ;
graph
ÇÇ< A
,
ÇÇA B

GameObject
ÇÇC M
go
ÇÇN P
,
ÇÇP Q
IntervalTree
ÇÇR ^
<
ÇÇ^ _
RuntimeElement
ÇÇ_ m
>
ÇÇm n
tree
ÇÇo s
,
ÇÇs t
Playable
ÇÇu }
timelinePlayableÇÇ~ é
)ÇÇé è
{
ÉÉ 	
UpdateDuration
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
var
ÖÖ 
mixerPlayable
ÖÖ 
=
ÖÖ 
Playable
ÖÖ  (
.
ÖÖ( )
Null
ÖÖ) -
;
ÖÖ- .
if
ÜÜ 
(
ÜÜ &
CanCompileClipsRecursive
ÜÜ (
(
ÜÜ( )
)
ÜÜ) *
)
ÜÜ* +
mixerPlayable
áá 
=
áá '
OnCreateClipPlayableGraph
áá  9
(
áá9 :
graph
áá: ?
,
áá? @
go
ááA C
,
ááC D
tree
ááE I
)
ááI J
;
ááJ K
var
ââ #
notificationsPlayable
ââ %
=
ââ& ')
CreateNotificationsPlayable
ââ( C
(
ââC D
graph
ââD I
,
ââI J
mixerPlayable
ââK X
,
ââX Y
go
ââZ \
,
ââ\ ]
timelinePlayable
ââ^ n
)
âân o
;
ââo p
s_BuildData
çç 
.
çç 
Clear
çç 
(
çç 
)
çç 
;
çç  
if
éé 
(
éé 
!
éé #
notificationsPlayable
éé &
.
éé& '
IsValid
éé' .
(
éé. /
)
éé/ 0
&&
éé1 3
!
éé4 5
mixerPlayable
éé5 B
.
ééB C
IsValid
ééC J
(
ééJ K
)
ééK L
)
ééL M
{
èè 
Debug
êê 
.
êê 
LogErrorFormat
êê $
(
êê$ %
$str
êê% w
,
êêw x
name
êêy }
,
êê} ~
GetType
ëë 
(
ëë 
)
ëë 
.
ëë 
FullName
ëë &
)
ëë& '
;
ëë' (
return
ìì 
Playable
ìì 
.
ìì  
Create
ìì  &
(
ìì& '
graph
ìì' ,
)
ìì, -
;
ìì- .
}
îî 
return
ññ #
notificationsPlayable
ññ (
.
ññ( )
IsValid
ññ) 0
(
ññ0 1
)
ññ1 2
?
ññ3 4#
notificationsPlayable
ññ5 J
:
ññK L
mixerPlayable
ññM Z
;
ññZ [
}
óó 	
internal
ôô 
virtual
ôô 
Playable
ôô !
CompileClips
ôô" .
(
ôô. /
PlayableGraph
ôô/ <
graph
ôô= B
,
ôôB C

GameObject
ôôD N
go
ôôO Q
,
ôôQ R
IList
ôôS X
<
ôôX Y
TimelineClip
ôôY e
>
ôôe f
timelineClips
ôôg t
,
ôôt u
IntervalTreeôôv Ç
<ôôÇ É
RuntimeElementôôÉ ë
>ôôë í
treeôôì ó
)ôôó ò
{
öö 	
var
õõ 
blend
õõ 
=
õõ 
CreateTrackMixer
õõ (
(
õõ( )
graph
õõ) .
,
õõ. /
go
õõ0 2
,
õõ2 3
timelineClips
õõ4 A
.
õõA B
Count
õõB G
)
õõG H
;
õõH I
for
úú 
(
úú 
var
úú 
c
úú 
=
úú 
$num
úú 
;
úú 
c
úú 
<
úú 
timelineClips
úú  -
.
úú- .
Count
úú. 3
;
úú3 4
c
úú5 6
++
úú6 8
)
úú8 9
{
ùù 
var
ûû 
source
ûû 
=
ûû 
CreatePlayable
ûû +
(
ûû+ ,
graph
ûû, 1
,
ûû1 2
go
ûû3 5
,
ûû5 6
timelineClips
ûû7 D
[
ûûD E
c
ûûE F
]
ûûF G
)
ûûG H
;
ûûH I
if
üü 
(
üü 
source
üü 
.
üü 
IsValid
üü "
(
üü" #
)
üü# $
)
üü$ %
{
†† 
source
°° 
.
°° 
SetDuration
°° &
(
°°& '
timelineClips
°°' 4
[
°°4 5
c
°°5 6
]
°°6 7
.
°°7 8
duration
°°8 @
)
°°@ A
;
°°A B
var
¢¢ 
clip
¢¢ 
=
¢¢ 
new
¢¢ "
RuntimeClip
¢¢# .
(
¢¢. /
timelineClips
¢¢/ <
[
¢¢< =
c
¢¢= >
]
¢¢> ?
,
¢¢? @
source
¢¢A G
,
¢¢G H
blend
¢¢I N
)
¢¢N O
;
¢¢O P
tree
££ 
.
££ 
Add
££ 
(
££ 
clip
££ !
)
££! "
;
££" #
graph
§§ 
.
§§ 
Connect
§§ !
(
§§! "
source
§§" (
,
§§( )
$num
§§* +
,
§§+ ,
blend
§§- 2
,
§§2 3
c
§§4 5
)
§§5 6
;
§§6 7
blend
•• 
.
•• 
SetInputWeight
•• (
(
••( )
c
••) *
,
••* +
$num
••, 0
)
••0 1
;
••1 2
}
¶¶ 
}
ßß %
ConfigureTrackAnimation
®® #
(
®®# $
tree
®®$ (
,
®®( )
go
®®* ,
,
®®, -
blend
®®. 3
)
®®3 4
;
®®4 5
return
©© 
blend
©© 
;
©© 
}
™™ 	
void
¨¨ $
GatherCompilableTracks
¨¨ #
(
¨¨# $
IList
¨¨$ )
<
¨¨) *

TrackAsset
¨¨* 4
>
¨¨4 5
tracks
¨¨6 <
)
¨¨< =
{
≠≠ 	
if
ÆÆ 
(
ÆÆ 
!
ÆÆ 
muted
ÆÆ 
&&
ÆÆ 
CanCompileClips
ÆÆ )
(
ÆÆ) *
)
ÆÆ* +
)
ÆÆ+ ,
tracks
ØØ 
.
ØØ 
Add
ØØ 
(
ØØ 
this
ØØ 
)
ØØ  
;
ØØ  !
foreach
±± 
(
±± 
var
±± 
c
±± 
in
±± 
GetChildTracks
±± ,
(
±±, -
)
±±- .
)
±±. /
{
≤≤ 
if
≥≥ 
(
≥≥ 
c
≥≥ 
!=
≥≥ 
null
≥≥ 
)
≥≥ 
c
¥¥ 
.
¥¥ $
GatherCompilableTracks
¥¥ ,
(
¥¥, -
tracks
¥¥- 3
)
¥¥3 4
;
¥¥4 5
}
µµ 
}
∂∂ 	
void
∏∏ "
GatherNotificiations
∏∏ !
(
∏∏! "
List
∏∏" &
<
∏∏& '
IMarker
∏∏' .
>
∏∏. /
markers
∏∏0 7
)
∏∏7 8
{
ππ 	
if
∫∫ 
(
∫∫ 
!
∫∫ 
muted
∫∫ 
&&
∫∫ %
CanCompileNotifications
∫∫ 1
(
∫∫1 2
)
∫∫2 3
)
∫∫3 4
markers
ªª 
.
ªª 
AddRange
ªª  
(
ªª  !

GetMarkers
ªª! +
(
ªª+ ,
)
ªª, -
)
ªª- .
;
ªª. /
foreach
ºº 
(
ºº 
var
ºº 
c
ºº 
in
ºº 
GetChildTracks
ºº ,
(
ºº, -
)
ºº- .
)
ºº. /
{
ΩΩ 
if
ææ 
(
ææ 
c
ææ 
!=
ææ 
null
ææ 
)
ææ 
c
øø 
.
øø "
GatherNotificiations
øø *
(
øø* +
markers
øø+ 2
)
øø2 3
;
øø3 4
}
¿¿ 
}
¡¡ 	
internal
√√ 
virtual
√√ 
Playable
√√ !'
OnCreateClipPlayableGraph
√√" ;
(
√√; <
PlayableGraph
√√< I
graph
√√J O
,
√√O P

GameObject
√√Q [
go
√√\ ^
,
√√^ _
IntervalTree
√√` l
<
√√l m
RuntimeElement
√√m {
>
√√{ |
tree√√} Å
)√√Å Ç
{
ƒƒ 	
if
≈≈ 
(
≈≈ 
tree
≈≈ 
==
≈≈ 
null
≈≈ 
)
≈≈ 
throw
∆∆ 
new
∆∆ 
ArgumentException
∆∆ +
(
∆∆+ ,
$str
∆∆, R
,
∆∆R S
$str
∆∆T Z
)
∆∆Z [
;
∆∆[ \
if
»» 
(
»» 
go
»» 
==
»» 
null
»» 
)
»» 
throw
…… 
new
…… 
ArgumentException
…… +
(
……+ ,
$str
……, P
,
……P Q
$str
……R V
)
……V W
;
……W X
s_BuildData
ÀÀ 
.
ÀÀ 
Clear
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ  $
GatherCompilableTracks
ÃÃ "
(
ÃÃ" #
s_BuildData
ÃÃ# .
.
ÃÃ. /
	trackList
ÃÃ/ 8
)
ÃÃ8 9
;
ÃÃ9 :
if
œœ 
(
œœ 
s_BuildData
œœ 
.
œœ 
	trackList
œœ %
.
œœ% &
Count
œœ& +
==
œœ, .
$num
œœ/ 0
)
œœ0 1
return
–– 
Playable
–– 
.
––  
Null
––  $
;
––$ %
Playable
”” 

layerMixer
”” 
=
””  !
Playable
””" *
.
””* +
Null
””+ /
;
””/ 0

ILayerable
‘‘ 
	layerable
‘‘  
=
‘‘! "
this
‘‘# '
as
‘‘( *

ILayerable
‘‘+ 5
;
‘‘5 6
if
’’ 
(
’’ 
	layerable
’’ 
!=
’’ 
null
’’ !
)
’’! "

layerMixer
÷÷ 
=
÷÷ 
	layerable
÷÷ &
.
÷÷& '
CreateLayerMixer
÷÷' 7
(
÷÷7 8
graph
÷÷8 =
,
÷÷= >
go
÷÷? A
,
÷÷A B
s_BuildData
÷÷C N
.
÷÷N O
	trackList
÷÷O X
.
÷÷X Y
Count
÷÷Y ^
)
÷÷^ _
;
÷÷_ `
if
ÿÿ 
(
ÿÿ 

layerMixer
ÿÿ 
.
ÿÿ 
IsValid
ÿÿ "
(
ÿÿ" #
)
ÿÿ# $
)
ÿÿ$ %
{
ŸŸ 
for
⁄⁄ 
(
⁄⁄ 
int
⁄⁄ 
i
⁄⁄ 
=
⁄⁄ 
$num
⁄⁄ 
;
⁄⁄ 
i
⁄⁄  !
<
⁄⁄" #
s_BuildData
⁄⁄$ /
.
⁄⁄/ 0
	trackList
⁄⁄0 9
.
⁄⁄9 :
Count
⁄⁄: ?
;
⁄⁄? @
i
⁄⁄A B
++
⁄⁄B D
)
⁄⁄D E
{
€€ 
var
‹‹ 
mixer
‹‹ 
=
‹‹ 
s_BuildData
‹‹  +
.
‹‹+ ,
	trackList
‹‹, 5
[
‹‹5 6
i
‹‹6 7
]
‹‹7 8
.
‹‹8 9
CompileClips
‹‹9 E
(
‹‹E F
graph
‹‹F K
,
‹‹K L
go
‹‹M O
,
‹‹O P
s_BuildData
‹‹Q \
.
‹‹\ ]
	trackList
‹‹] f
[
‹‹f g
i
‹‹g h
]
‹‹h i
.
‹‹i j
clips
‹‹j o
,
‹‹o p
tree
‹‹q u
)
‹‹u v
;
‹‹v w
if
›› 
(
›› 
mixer
›› 
.
›› 
IsValid
›› %
(
››% &
)
››& '
)
››' (
{
ﬁﬁ 
graph
ﬂﬂ 
.
ﬂﬂ 
Connect
ﬂﬂ %
(
ﬂﬂ% &
mixer
ﬂﬂ& +
,
ﬂﬂ+ ,
$num
ﬂﬂ- .
,
ﬂﬂ. /

layerMixer
ﬂﬂ0 :
,
ﬂﬂ: ;
i
ﬂﬂ< =
)
ﬂﬂ= >
;
ﬂﬂ> ?

layerMixer
‡‡ "
.
‡‡" #
SetInputWeight
‡‡# 1
(
‡‡1 2
i
‡‡2 3
,
‡‡3 4
$num
‡‡5 9
)
‡‡9 :
;
‡‡: ;
}
·· 
}
‚‚ 
return
„„ 

layerMixer
„„ !
;
„„! "
}
‰‰ 
if
ÁÁ 
(
ÁÁ 
s_BuildData
ÁÁ 
.
ÁÁ 
	trackList
ÁÁ %
.
ÁÁ% &
Count
ÁÁ& +
==
ÁÁ, .
$num
ÁÁ/ 0
)
ÁÁ0 1
return
ËË 
s_BuildData
ËË "
.
ËË" #
	trackList
ËË# ,
[
ËË, -
$num
ËË- .
]
ËË. /
.
ËË/ 0
CompileClips
ËË0 <
(
ËË< =
graph
ËË= B
,
ËËB C
go
ËËD F
,
ËËF G
s_BuildData
ËËH S
.
ËËS T
	trackList
ËËT ]
[
ËË] ^
$num
ËË^ _
]
ËË_ `
.
ËË` a
clips
ËËa f
,
ËËf g
tree
ËËh l
)
ËËl m
;
ËËm n
for
ÎÎ 
(
ÎÎ 
int
ÎÎ 
i
ÎÎ 
=
ÎÎ 
$num
ÎÎ 
;
ÎÎ 
i
ÎÎ 
<
ÎÎ 
s_BuildData
ÎÎ  +
.
ÎÎ+ ,
	trackList
ÎÎ, 5
.
ÎÎ5 6
Count
ÎÎ6 ;
;
ÎÎ; <
i
ÎÎ= >
++
ÎÎ> @
)
ÎÎ@ A
s_BuildData
ÏÏ 
.
ÏÏ 
clipList
ÏÏ $
.
ÏÏ$ %
AddRange
ÏÏ% -
(
ÏÏ- .
s_BuildData
ÏÏ. 9
.
ÏÏ9 :
	trackList
ÏÏ: C
[
ÏÏC D
i
ÏÏD E
]
ÏÏE F
.
ÏÏF G
clips
ÏÏG L
)
ÏÏL M
;
ÏÏM N
bool
ÔÔ 
applyWarning
ÔÔ 
=
ÔÔ 
false
ÔÔ  %
;
ÔÔ% &
for
 
(
 
int
 
i
 
=
 
$num
 
;
 
i
 
<
 
s_BuildData
  +
.
+ ,
	trackList
, 5
.
5 6
Count
6 ;
;
; <
i
= >
++
> @
)
@ A
applyWarning
ÒÒ 
|=
ÒÒ 
i
ÒÒ  !
>
ÒÒ" #
$num
ÒÒ$ %
&&
ÒÒ& (
s_BuildData
ÒÒ) 4
.
ÒÒ4 5
	trackList
ÒÒ5 >
[
ÒÒ> ?
i
ÒÒ? @
]
ÒÒ@ A
.
ÒÒA B
	hasCurves
ÒÒB K
;
ÒÒK L
if
ÛÛ 
(
ÛÛ 
applyWarning
ÛÛ 
)
ÛÛ 
Debug
ÙÙ 
.
ÙÙ 

LogWarning
ÙÙ  
(
ÙÙ  !
$strÙÙ! ª
+ÙÙº Ω
s_BuildDataÙÙæ …
.ÙÙ…  
	trackListÙÙ  ”
[ÙÙ” ‘
$numÙÙ‘ ’
]ÙÙ’ ÷
.ÙÙ÷ ◊
GetTypeÙÙ◊ ﬁ
(ÙÙﬁ ﬂ
)ÙÙﬂ ‡
.ÙÙ‡ ·
NameÙÙ· Â
+ÙÙÊ Á
$strÙÙË ¥
)ÙÙ¥ µ
;ÙÙµ ∂
return
˜˜ 
CompileClips
˜˜ 
(
˜˜  
graph
˜˜  %
,
˜˜% &
go
˜˜' )
,
˜˜) *
s_BuildData
˜˜+ 6
.
˜˜6 7
clipList
˜˜7 ?
,
˜˜? @
tree
˜˜A E
)
˜˜E F
;
˜˜F G
}
¯¯ 	
internal
˙˙ 
void
˙˙ %
ConfigureTrackAnimation
˙˙ -
(
˙˙- .
IntervalTree
˙˙. :
<
˙˙: ;
RuntimeElement
˙˙; I
>
˙˙I J
tree
˙˙K O
,
˙˙O P

GameObject
˙˙Q [
go
˙˙\ ^
,
˙˙^ _
Playable
˙˙` h
blend
˙˙i n
)
˙˙n o
{
˚˚ 	
if
¸¸ 
(
¸¸ 
!
¸¸ 
	hasCurves
¸¸ 
)
¸¸ 
return
˝˝ 
;
˝˝ 
blend
ˇˇ 
.
ˇˇ #
SetAnimatedProperties
ˇˇ '
(
ˇˇ' (
m_Curves
ˇˇ( 0
)
ˇˇ0 1
;
ˇˇ1 2
tree
ÄÄ 
.
ÄÄ 
Add
ÄÄ 
(
ÄÄ 
new
ÄÄ !
InfiniteRuntimeClip
ÄÄ ,
(
ÄÄ, -
blend
ÄÄ- 2
)
ÄÄ2 3
)
ÄÄ3 4
;
ÄÄ4 5
if
ÇÇ 
(
ÇÇ ,
OnTrackAnimationPlayableCreate
ÇÇ .
!=
ÇÇ/ 1
null
ÇÇ2 6
)
ÇÇ6 7,
OnTrackAnimationPlayableCreate
ÉÉ .
.
ÉÉ. /
Invoke
ÉÉ/ 5
(
ÉÉ5 6
this
ÉÉ6 :
,
ÉÉ: ;
go
ÉÉ< >
,
ÉÉ> ?
blend
ÉÉ@ E
)
ÉÉE F
;
ÉÉF G
}
ÑÑ 	
internal
áá 
void
áá 
	SortClips
áá 
(
áá  
)
áá  !
{
àà 	
var
ââ 
clipsAsArray
ââ 
=
ââ 
clips
ââ $
;
ââ$ %
if
ää 
(
ää 
!
ää 
m_CacheSorted
ää 
)
ää 
{
ãã 
Array
åå 
.
åå 
Sort
åå 
(
åå 
clips
åå  
,
åå  !
(
åå" #
clip1
åå# (
,
åå( )
clip2
åå* /
)
åå/ 0
=>
åå1 3
clip1
åå4 9
.
åå9 :
start
åå: ?
.
åå? @
	CompareTo
åå@ I
(
ååI J
clip2
ååJ O
.
ååO P
start
ååP U
)
ååU V
)
ååV W
;
ååW X
m_CacheSorted
çç 
=
çç 
true
çç  $
;
çç$ %
}
éé 
}
èè 	
internal
íí 
void
íí  
ClearClipsInternal
íí (
(
íí( )
)
íí) *
{
ìì 	
m_Clips
îî 
=
îî 
new
îî 
List
îî 
<
îî 
TimelineClip
îî +
>
îî+ ,
(
îî, -
)
îî- .
;
îî. /
m_ClipsCache
ïï 
=
ïï 
null
ïï 
;
ïï  
}
ññ 	
internal
òò 
void
òò $
ClearSubTracksInternal
òò ,
(
òò, -
)
òò- .
{
ôô 	

m_Children
öö 
=
öö 
new
öö 
List
öö !
<
öö! "
ScriptableObject
öö" 2
>
öö2 3
(
öö3 4
)
öö4 5
;
öö5 6

Invalidate
õõ 
(
õõ 
)
õõ 
;
õõ 
}
úú 	
internal
üü 
void
üü 

OnClipMove
üü  
(
üü  !
)
üü! "
{
†† 	
m_CacheSorted
°° 
=
°° 
false
°° !
;
°°! "
}
¢¢ 	
internal
§§ 
TimelineClip
§§ ,
CreateNewClipContainerInternal
§§ <
(
§§< =
)
§§= >
{
•• 	
var
¶¶ 
clipContainer
¶¶ 
=
¶¶ 
new
¶¶  #
TimelineClip
¶¶$ 0
(
¶¶0 1
this
¶¶1 5
)
¶¶5 6
;
¶¶6 7
clipContainer
ßß 
.
ßß 
asset
ßß 
=
ßß  !
null
ßß" &
;
ßß& '
var
™™ 
newClipStart
™™ 
=
™™ 
$num
™™ "
;
™™" #
for
´´ 
(
´´ 
var
´´ 
a
´´ 
=
´´ 
$num
´´ 
;
´´ 
a
´´ 
<
´´ 
m_Clips
´´  '
.
´´' (
Count
´´( -
-
´´. /
$num
´´0 1
;
´´1 2
a
´´3 4
++
´´4 6
)
´´6 7
{
¨¨ 
var
≠≠ 
clipDuration
≠≠  
=
≠≠! "
m_Clips
≠≠# *
[
≠≠* +
a
≠≠+ ,
]
≠≠, -
.
≠≠- .
duration
≠≠. 6
;
≠≠6 7
if
ÆÆ 
(
ÆÆ 
double
ÆÆ 
.
ÆÆ 

IsInfinity
ÆÆ %
(
ÆÆ% &
clipDuration
ÆÆ& 2
)
ÆÆ2 3
)
ÆÆ3 4
clipDuration
ØØ  
=
ØØ! "
TimelineClip
ØØ# /
.
ØØ/ 0+
kDefaultClipDurationInSeconds
ØØ0 M
;
ØØM N
newClipStart
∞∞ 
=
∞∞ 
Math
∞∞ #
.
∞∞# $
Max
∞∞$ '
(
∞∞' (
newClipStart
∞∞( 4
,
∞∞4 5
m_Clips
∞∞6 =
[
∞∞= >
a
∞∞> ?
]
∞∞? @
.
∞∞@ A
start
∞∞A F
+
∞∞G H
clipDuration
∞∞I U
)
∞∞U V
;
∞∞V W
}
±± 
clipContainer
≥≥ 
.
≥≥ 

mixInCurve
≥≥ $
=
≥≥% &
AnimationCurve
≥≥' 5
.
≥≥5 6
	EaseInOut
≥≥6 ?
(
≥≥? @
$num
≥≥@ A
,
≥≥A B
$num
≥≥C D
,
≥≥D E
$num
≥≥F G
,
≥≥G H
$num
≥≥I J
)
≥≥J K
;
≥≥K L
clipContainer
¥¥ 
.
¥¥ 
mixOutCurve
¥¥ %
=
¥¥& '
AnimationCurve
¥¥( 6
.
¥¥6 7
	EaseInOut
¥¥7 @
(
¥¥@ A
$num
¥¥A B
,
¥¥B C
$num
¥¥D E
,
¥¥E F
$num
¥¥G H
,
¥¥H I
$num
¥¥J K
)
¥¥K L
;
¥¥L M
clipContainer
µµ 
.
µµ 
start
µµ 
=
µµ  !
newClipStart
µµ" .
;
µµ. /
clipContainer
∂∂ 
.
∂∂ 
duration
∂∂ "
=
∂∂# $
TimelineClip
∂∂% 1
.
∂∂1 2+
kDefaultClipDurationInSeconds
∂∂2 O
;
∂∂O P
clipContainer
∑∑ 
.
∑∑ 
displayName
∑∑ %
=
∑∑& '
$str
∑∑( 2
;
∑∑2 3
return
∏∏ 
clipContainer
∏∏  
;
∏∏  !
}
ππ 	
internal
ªª 
void
ªª 
AddChild
ªª 
(
ªª 

TrackAsset
ªª )
child
ªª* /
)
ªª/ 0
{
ºº 	
if
ΩΩ 
(
ΩΩ 
child
ΩΩ 
==
ΩΩ 
null
ΩΩ 
)
ΩΩ 
return
ææ 
;
ææ 

m_Children
¿¿ 
.
¿¿ 
Add
¿¿ 
(
¿¿ 
child
¿¿  
)
¿¿  !
;
¿¿! "
child
¡¡ 
.
¡¡ 
parent
¡¡ 
=
¡¡ 
this
¡¡ 
;
¡¡  

Invalidate
¬¬ 
(
¬¬ 
)
¬¬ 
;
¬¬ 
}
√√ 	
internal
≈≈ 
void
≈≈ !
MoveLastTrackBefore
≈≈ )
(
≈≈) *

TrackAsset
≈≈* 4
asset
≈≈5 :
)
≈≈: ;
{
∆∆ 	
if
«« 
(
«« 

m_Children
«« 
==
«« 
null
«« "
||
««# %

m_Children
««& 0
.
««0 1
Count
««1 6
<
««7 8
$num
««9 :
||
««; =
asset
««> C
==
««D F
null
««G K
)
««K L
return
»» 
;
»» 
var
   
	lastTrack
   
=
   

m_Children
   &
[
  & '

m_Children
  ' 1
.
  1 2
Count
  2 7
-
  8 9
$num
  : ;
]
  ; <
;
  < =
if
ÀÀ 
(
ÀÀ 
	lastTrack
ÀÀ 
==
ÀÀ 
asset
ÀÀ "
)
ÀÀ" #
return
ÃÃ 
;
ÃÃ 
for
ŒŒ 
(
ŒŒ 
int
ŒŒ 
i
ŒŒ 
=
ŒŒ 
$num
ŒŒ 
;
ŒŒ 
i
ŒŒ 
<
ŒŒ 

m_Children
ŒŒ  *
.
ŒŒ* +
Count
ŒŒ+ 0
-
ŒŒ1 2
$num
ŒŒ3 4
;
ŒŒ4 5
i
ŒŒ6 7
++
ŒŒ7 9
)
ŒŒ9 :
{
œœ 
if
–– 
(
–– 

m_Children
–– 
[
–– 
i
––  
]
––  !
==
––" $
asset
––% *
)
––* +
{
—— 
for
““ 
(
““ 
int
““ 
j
““ 
=
““  

m_Children
““! +
.
““+ ,
Count
““, 1
-
““2 3
$num
““4 5
;
““5 6
j
““7 8
>
““9 :
i
““; <
;
““< =
j
““> ?
--
““? A
)
““A B

m_Children
”” "
[
””" #
j
””# $
]
””$ %
=
””& '

m_Children
””( 2
[
””2 3
j
””3 4
-
””5 6
$num
””7 8
]
””8 9
;
””9 :

m_Children
‘‘ 
[
‘‘ 
i
‘‘  
]
‘‘  !
=
‘‘" #
	lastTrack
‘‘$ -
;
‘‘- .

Invalidate
’’ 
(
’’ 
)
’’  
;
’’  !
break
÷÷ 
;
÷÷ 
}
◊◊ 
}
ÿÿ 
}
ŸŸ 	
internal
€€ 
bool
€€ 
RemoveSubTrack
€€ $
(
€€$ %

TrackAsset
€€% /
child
€€0 5
)
€€5 6
{
‹‹ 	
if
›› 
(
›› 

m_Children
›› 
.
›› 
Remove
›› !
(
››! "
child
››" '
)
››' (
)
››( )
{
ﬁﬁ 

Invalidate
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ 
child
‡‡ 
.
‡‡ 
parent
‡‡ 
=
‡‡ 
null
‡‡ #
;
‡‡# $
return
·· 
true
·· 
;
·· 
}
‚‚ 
return
„„ 
false
„„ 
;
„„ 
}
‰‰ 	
internal
ÊÊ 
void
ÊÊ 

RemoveClip
ÊÊ  
(
ÊÊ  !
TimelineClip
ÊÊ! -
clip
ÊÊ. 2
)
ÊÊ2 3
{
ÁÁ 	
m_Clips
ËË 
.
ËË 
Remove
ËË 
(
ËË 
clip
ËË 
)
ËË  
;
ËË  !
m_ClipsCache
ÈÈ 
=
ÈÈ 
null
ÈÈ 
;
ÈÈ  
}
ÍÍ 	
internal
ÓÓ 
virtual
ÓÓ 
void
ÓÓ 
GetEvaluationTime
ÓÓ /
(
ÓÓ/ 0
out
ÓÓ0 3
double
ÓÓ4 :
outStart
ÓÓ; C
,
ÓÓC D
out
ÓÓE H
double
ÓÓI O
outDuration
ÓÓP [
)
ÓÓ[ \
{
ÔÔ 	
outStart
 
=
 
double
 
.
 
PositiveInfinity
 .
;
. /
var
ÒÒ 
outEnd
ÒÒ 
=
ÒÒ 
double
ÒÒ 
.
ÒÒ  
NegativeInfinity
ÒÒ  0
;
ÒÒ0 1
if
ÛÛ 
(
ÛÛ 
	hasCurves
ÛÛ 
)
ÛÛ 
{
ÙÙ 
outStart
ıı 
=
ıı 
$num
ıı 
;
ıı 
outEnd
ˆˆ 
=
ˆˆ 
TimeUtility
ˆˆ $
.
ˆˆ$ %$
GetAnimationClipLength
ˆˆ% ;
(
ˆˆ; <
curves
ˆˆ< B
)
ˆˆB C
;
ˆˆC D
}
˜˜ 
foreach
˘˘ 
(
˘˘ 
var
˘˘ 
clip
˘˘ 
in
˘˘  
clips
˘˘! &
)
˘˘& '
{
˙˙ 
outStart
˚˚ 
=
˚˚ 
Math
˚˚ 
.
˚˚  
Min
˚˚  #
(
˚˚# $
clip
˚˚$ (
.
˚˚( )
start
˚˚) .
,
˚˚. /
outStart
˚˚0 8
)
˚˚8 9
;
˚˚9 :
outEnd
¸¸ 
=
¸¸ 
Math
¸¸ 
.
¸¸ 
Max
¸¸ !
(
¸¸! "
clip
¸¸" &
.
¸¸& '
end
¸¸' *
,
¸¸* +
outEnd
¸¸, 2
)
¸¸2 3
;
¸¸3 4
}
˝˝ 
if
ˇˇ 
(
ˇˇ 
HasNotifications
ˇˇ  
(
ˇˇ  !
)
ˇˇ! "
)
ˇˇ" #
{
ÄÄ 
var
ÅÅ "
notificationDuration
ÅÅ (
=
ÅÅ) *%
GetNotificationDuration
ÅÅ+ B
(
ÅÅB C
)
ÅÅC D
;
ÅÅD E
outStart
ÇÇ 
=
ÇÇ 
Math
ÇÇ 
.
ÇÇ  
Min
ÇÇ  #
(
ÇÇ# $"
notificationDuration
ÇÇ$ 8
,
ÇÇ8 9
outStart
ÇÇ: B
)
ÇÇB C
;
ÇÇC D
outEnd
ÉÉ 
=
ÉÉ 
Math
ÉÉ 
.
ÉÉ 
Max
ÉÉ !
(
ÉÉ! ""
notificationDuration
ÉÉ" 6
,
ÉÉ6 7
outEnd
ÉÉ8 >
)
ÉÉ> ?
;
ÉÉ? @
}
ÑÑ 
if
ÜÜ 
(
ÜÜ 
double
ÜÜ 
.
ÜÜ 

IsInfinity
ÜÜ !
(
ÜÜ! "
outStart
ÜÜ" *
)
ÜÜ* +
||
ÜÜ, .
double
ÜÜ/ 5
.
ÜÜ5 6

IsInfinity
ÜÜ6 @
(
ÜÜ@ A
outEnd
ÜÜA G
)
ÜÜG H
)
ÜÜH I
outStart
áá 
=
áá 
outDuration
áá &
=
áá' (
$num
áá) ,
;
áá, -
else
àà 
outDuration
ââ 
=
ââ 
outEnd
ââ $
-
ââ% &
outStart
ââ' /
;
ââ/ 0
}
ää 	
internal
èè 
virtual
èè 
void
èè 
GetSequenceTime
èè -
(
èè- .
out
èè. 1
double
èè2 8
outStart
èè9 A
,
èèA B
out
èèC F
double
èèG M
outDuration
èèN Y
)
èèY Z
{
êê 	
GetEvaluationTime
ëë 
(
ëë 
out
ëë !
outStart
ëë" *
,
ëë* +
out
ëë, /
outDuration
ëë0 ;
)
ëë; <
;
ëë< =
}
íí 	
public
ôô 
virtual
ôô 
void
ôô 
GatherProperties
ôô ,
(
ôô, -
PlayableDirector
ôô- =
director
ôô> F
,
ôôF G 
IPropertyCollector
ôôH Z
driver
ôô[ a
)
ôôa b
{
öö 	
var
ùù 

gameObject
ùù 
=
ùù "
GetGameObjectBinding
ùù 1
(
ùù1 2
director
ùù2 :
)
ùù: ;
;
ùù; <
if
ûû 
(
ûû 

gameObject
ûû 
!=
ûû 
null
ûû "
)
ûû" #
driver
üü 
.
üü "
PushActiveGameObject
üü +
(
üü+ ,

gameObject
üü, 6
)
üü6 7
;
üü7 8
if
°° 
(
°° 
	hasCurves
°° 
)
°° 
driver
¢¢ 
.
¢¢ !
AddObjectProperties
¢¢ *
(
¢¢* +
this
¢¢+ /
,
¢¢/ 0
m_Curves
¢¢1 9
)
¢¢9 :
;
¢¢: ;
foreach
§§ 
(
§§ 
var
§§ 
clip
§§ 
in
§§  
clips
§§! &
)
§§& '
{
•• 
if
¶¶ 
(
¶¶ 
clip
¶¶ 
.
¶¶ 
curves
¶¶ 
!=
¶¶  "
null
¶¶# '
&&
¶¶( *
clip
¶¶+ /
.
¶¶/ 0
asset
¶¶0 5
!=
¶¶6 8
null
¶¶9 =
)
¶¶= >
driver
ßß 
.
ßß !
AddObjectProperties
ßß .
(
ßß. /
clip
ßß/ 3
.
ßß3 4
asset
ßß4 9
,
ßß9 :
clip
ßß; ?
.
ßß? @
curves
ßß@ F
)
ßßF G
;
ßßG H
IPropertyPreview
©©  
modifier
©©! )
=
©©* +
clip
©©, 0
.
©©0 1
asset
©©1 6
as
©©7 9
IPropertyPreview
©©: J
;
©©J K
if
™™ 
(
™™ 
modifier
™™ 
!=
™™ 
null
™™  $
)
™™$ %
modifier
´´ 
.
´´ 
GatherProperties
´´ -
(
´´- .
director
´´. 6
,
´´6 7
driver
´´8 >
)
´´> ?
;
´´? @
}
¨¨ 
foreach
ÆÆ 
(
ÆÆ 
var
ÆÆ 
subtrack
ÆÆ !
in
ÆÆ" $
GetChildTracks
ÆÆ% 3
(
ÆÆ3 4
)
ÆÆ4 5
)
ÆÆ5 6
{
ØØ 
if
∞∞ 
(
∞∞ 
subtrack
∞∞ 
!=
∞∞ 
null
∞∞  $
)
∞∞$ %
subtrack
±± 
.
±± 
GatherProperties
±± -
(
±±- .
director
±±. 6
,
±±6 7
driver
±±8 >
)
±±> ?
;
±±? @
}
≤≤ 
if
¥¥ 
(
¥¥ 

gameObject
¥¥ 
!=
¥¥ 
null
¥¥ "
)
¥¥" #
driver
µµ 
.
µµ !
PopActiveGameObject
µµ *
(
µµ* +
)
µµ+ ,
;
µµ, -
}
∂∂ 	
internal
∏∏ 

GameObject
∏∏ "
GetGameObjectBinding
∏∏ 0
(
∏∏0 1
PlayableDirector
∏∏1 A
director
∏∏B J
)
∏∏J K
{
ππ 	
if
∫∫ 
(
∫∫ 
director
∫∫ 
==
∫∫ 
null
∫∫  
)
∫∫  !
return
ªª 
null
ªª 
;
ªª 
var
ΩΩ 
binding
ΩΩ 
=
ΩΩ 
director
ΩΩ "
.
ΩΩ" #
GetGenericBinding
ΩΩ# 4
(
ΩΩ4 5
this
ΩΩ5 9
)
ΩΩ9 :
;
ΩΩ: ;
var
øø 

gameObject
øø 
=
øø 
binding
øø $
as
øø% '

GameObject
øø( 2
;
øø2 3
if
¿¿ 
(
¿¿ 

gameObject
¿¿ 
!=
¿¿ 
null
¿¿ "
)
¿¿" #
return
¡¡ 

gameObject
¡¡ !
;
¡¡! "
var
√√ 
comp
√√ 
=
√√ 
binding
√√ 
as
√√ !
	Component
√√" +
;
√√+ ,
if
ƒƒ 
(
ƒƒ 
comp
ƒƒ 
!=
ƒƒ 
null
ƒƒ 
)
ƒƒ 
return
≈≈ 
comp
≈≈ 
.
≈≈ 

gameObject
≈≈ &
;
≈≈& '
return
«« 
null
«« 
;
«« 
}
»» 	
internal
   
bool
   
ValidateClipType
   &
(
  & '
Type
  ' +
clipType
  , 4
)
  4 5
{
ÀÀ 	
var
ÃÃ 
attrs
ÃÃ 
=
ÃÃ 
GetType
ÃÃ 
(
ÃÃ  
)
ÃÃ  !
.
ÃÃ! "!
GetCustomAttributes
ÃÃ" 5
(
ÃÃ5 6
typeof
ÃÃ6 <
(
ÃÃ< =$
TrackClipTypeAttribute
ÃÃ= S
)
ÃÃS T
,
ÃÃT U
true
ÃÃV Z
)
ÃÃZ [
;
ÃÃ[ \
for
ÕÕ 
(
ÕÕ 
var
ÕÕ 
c
ÕÕ 
=
ÕÕ 
$num
ÕÕ 
;
ÕÕ 
c
ÕÕ 
<
ÕÕ 
attrs
ÕÕ  %
.
ÕÕ% &
Length
ÕÕ& ,
;
ÕÕ, -
++
ÕÕ. 0
c
ÕÕ0 1
)
ÕÕ1 2
{
ŒŒ 
var
œœ 
attr
œœ 
=
œœ 
(
œœ $
TrackClipTypeAttribute
œœ 2
)
œœ2 3
attrs
œœ3 8
[
œœ8 9
c
œœ9 :
]
œœ: ;
;
œœ; <
if
–– 
(
–– 
attr
–– 
.
–– 
inspectedType
–– &
.
––& '
IsAssignableFrom
––' 7
(
––7 8
clipType
––8 @
)
––@ A
)
––A B
return
—— 
true
—— 
;
——  
}
““ 
return
’’ 
typeof
’’ 
(
’’ 
PlayableTrack
’’ '
)
’’' (
.
’’( )
IsAssignableFrom
’’) 9
(
’’9 :
GetType
’’: A
(
’’A B
)
’’B C
)
’’C D
&&
’’E G
typeof
÷÷ 
(
÷÷ 
IPlayableAsset
÷÷ %
)
÷÷% &
.
÷÷& '
IsAssignableFrom
÷÷' 7
(
÷÷7 8
clipType
÷÷8 @
)
÷÷@ A
&&
÷÷B D
typeof
◊◊ 
(
◊◊ 
ScriptableObject
◊◊ '
)
◊◊' (
.
◊◊( )
IsAssignableFrom
◊◊) 9
(
◊◊9 :
clipType
◊◊: B
)
◊◊B C
;
◊◊C D
}
ÿÿ 	
	protected
ﬂﬂ 
virtual
ﬂﬂ 
void
ﬂﬂ 
OnCreateClip
ﬂﬂ +
(
ﬂﬂ+ ,
TimelineClip
ﬂﬂ, 8
clip
ﬂﬂ9 =
)
ﬂﬂ= >
{
ﬂﬂ? @
}
ﬂﬂ@ A
void
·· 
UpdateDuration
·· 
(
·· 
)
·· 
{
‚‚ 	
var
‰‰ 
	itemsHash
‰‰ 
=
‰‰  
CalculateItemsHash
‰‰ .
(
‰‰. /
)
‰‰/ 0
;
‰‰0 1
if
ÂÂ 
(
ÂÂ 
	itemsHash
ÂÂ 
==
ÂÂ 
m_ItemsHash
ÂÂ (
)
ÂÂ( )
return
ÊÊ 
;
ÊÊ 
m_ItemsHash
ÁÁ 
=
ÁÁ 
	itemsHash
ÁÁ #
;
ÁÁ# $
double
ÈÈ 

trackStart
ÈÈ 
,
ÈÈ 
trackDuration
ÈÈ ,
;
ÈÈ, -
GetSequenceTime
ÍÍ 
(
ÍÍ 
out
ÍÍ 

trackStart
ÍÍ  *
,
ÍÍ* +
out
ÍÍ, /
trackDuration
ÍÍ0 =
)
ÍÍ= >
;
ÍÍ> ?
m_Start
ÏÏ 
=
ÏÏ 
(
ÏÏ 
DiscreteTime
ÏÏ #
)
ÏÏ# $

trackStart
ÏÏ$ .
;
ÏÏ. /
m_End
ÌÌ 
=
ÌÌ 
(
ÌÌ 
DiscreteTime
ÌÌ !
)
ÌÌ! "
(
ÌÌ" #

trackStart
ÌÌ# -
+
ÌÌ. /
trackDuration
ÌÌ0 =
)
ÌÌ= >
;
ÌÌ> ?
this
ÒÒ 
.
ÒÒ )
CalculateExtrapolationTimes
ÒÒ ,
(
ÒÒ, -
)
ÒÒ- .
;
ÒÒ. /
}
ÚÚ 	
	protected
ÙÙ 
internal
ÙÙ 
virtual
ÙÙ "
int
ÙÙ# & 
CalculateItemsHash
ÙÙ' 9
(
ÙÙ9 :
)
ÙÙ: ;
{
ıı 	
return
ˆˆ 
HashUtility
ˆˆ 
.
ˆˆ 
CombineHash
ˆˆ *
(
ˆˆ* +
GetClipsHash
ˆˆ+ 7
(
ˆˆ7 8
)
ˆˆ8 9
,
ˆˆ9 :"
GetAnimationClipHash
ˆˆ; O
(
ˆˆO P
m_Curves
ˆˆP X
)
ˆˆX Y
,
ˆˆY Z
GetTimeRangeHash
ˆˆ[ k
(
ˆˆk l
)
ˆˆl m
)
ˆˆm n
;
ˆˆn o
}
˜˜ 	
	protected
Ö	Ö	 
virtual
Ö	Ö	 
Playable
Ö	Ö	 "
CreatePlayable
Ö	Ö	# 1
(
Ö	Ö	1 2
PlayableGraph
Ö	Ö	2 ?
graph
Ö	Ö	@ E
,
Ö	Ö	E F

GameObject
Ö	Ö	G Q

gameObject
Ö	Ö	R \
,
Ö	Ö	\ ]
TimelineClip
Ö	Ö	^ j
clip
Ö	Ö	k o
)
Ö	Ö	o p
{
Ü	Ü	 	
if
á	á	 
(
á	á	 
!
á	á	 
graph
á	á	 
.
á	á	 
IsValid
á	á	 
(
á	á	 
)
á	á	  
)
á	á	  !
throw
à	à	 
new
à	à	 
ArgumentException
à	à	 +
(
à	à	+ ,
$str
à	à	, Q
)
à	à	Q R
;
à	à	R S
if
â	â	 
(
â	â	 
clip
â	â	 
==
â	â	 
null
â	â	 
)
â	â	 
throw
ä	ä	 
new
ä	ä	 #
ArgumentNullException
ä	ä	 /
(
ä	ä	/ 0
$str
ä	ä	0 6
)
ä	ä	6 7
;
ä	ä	7 8
var
å	å	 
asset
å	å	 
=
å	å	 
clip
å	å	 
.
å	å	 
asset
å	å	 "
as
å	å	# %
IPlayableAsset
å	å	& 4
;
å	å	4 5
if
ç	ç	 
(
ç	ç	 
asset
ç	ç	 
!=
ç	ç	 
null
ç	ç	 
)
ç	ç	 
{
é	é	 
var
è	è	 
handle
è	è	 
=
è	è	 
asset
è	è	 "
.
è	è	" #
CreatePlayable
è	è	# 1
(
è	è	1 2
graph
è	è	2 7
,
è	è	7 8

gameObject
è	è	9 C
)
è	è	C D
;
è	è	D E
if
ê	ê	 
(
ê	ê	 
handle
ê	ê	 
.
ê	ê	 
IsValid
ê	ê	 "
(
ê	ê	" #
)
ê	ê	# $
)
ê	ê	$ %
{
ë	ë	 
handle
í	í	 
.
í	í	 #
SetAnimatedProperties
í	í	 0
(
í	í	0 1
clip
í	í	1 5
.
í	í	5 6
curves
í	í	6 <
)
í	í	< =
;
í	í	= >
handle
ì	ì	 
.
ì	ì	 
SetSpeed
ì	ì	 #
(
ì	ì	# $
clip
ì	ì	$ (
.
ì	ì	( )
	timeScale
ì	ì	) 2
)
ì	ì	2 3
;
ì	ì	3 4
if
î	î	 
(
î	î	 "
OnClipPlayableCreate
î	î	 ,
!=
î	î	- /
null
î	î	0 4
)
î	î	4 5"
OnClipPlayableCreate
ï	ï	 ,
(
ï	ï	, -
clip
ï	ï	- 1
,
ï	ï	1 2

gameObject
ï	ï	3 =
,
ï	ï	= >
handle
ï	ï	? E
)
ï	ï	E F
;
ï	ï	F G
}
ñ	ñ	 
return
ó	ó	 
handle
ó	ó	 
;
ó	ó	 
}
ò	ò	 
return
ô	ô	 
Playable
ô	ô	 
.
ô	ô	 
Null
ô	ô	  
;
ô	ô	  !
}
ö	ö	 	
internal
ú	ú	 
void
ú	ú	 

Invalidate
ú	ú	  
(
ú	ú	  !
)
ú	ú	! "
{
ù	ù	 	
m_ChildTrackCache
û	û	 
=
û	û	 
null
û	û	  $
;
û	û	$ %
var
ü	ü	 
timeline
ü	ü	 
=
ü	ü	 
timelineAsset
ü	ü	 (
;
ü	ü	( )
if
†	†	 
(
†	†	 
timeline
†	†	 
!=
†	†	 
null
†	†	  
)
†	†	  !
{
°	°	 
timeline
¢	¢	 
.
¢	¢	 

Invalidate
¢	¢	 #
(
¢	¢	# $
)
¢	¢	$ %
;
¢	¢	% &
}
£	£	 
}
§	§	 	
internal
¶	¶	 
double
¶	¶	 %
GetNotificationDuration
¶	¶	 /
(
¶	¶	/ 0
)
¶	¶	0 1
{
ß	ß	 	
if
®	®	 
(
®	®	 
!
®	®	 #
supportsNotifications
®	®	 &
)
®	®	& '
{
©	©	 
return
™	™	 
$num
™	™	 
;
™	™	 
}
´	´	 
var
≠	≠	 
maxTime
≠	≠	 
=
≠	≠	 
$num
≠	≠	 
;
≠	≠	 
foreach
Æ	Æ	 
(
Æ	Æ	 
var
Æ	Æ	 
marker
Æ	Æ	 
in
Æ	Æ	  "

GetMarkers
Æ	Æ	# -
(
Æ	Æ	- .
)
Æ	Æ	. /
)
Æ	Æ	/ 0
{
Ø	Ø	 
if
∞	∞	 
(
∞	∞	 
!
∞	∞	 
(
∞	∞	 
marker
∞	∞	 
is
∞	∞	 
INotification
∞	∞	  -
)
∞	∞	- .
)
∞	∞	. /
{
±	±	 
continue
≤	≤	 
;
≤	≤	 
}
≥	≥	 
maxTime
¥	¥	 
=
¥	¥	 
Math
¥	¥	 
.
¥	¥	 
Max
¥	¥	 "
(
¥	¥	" #
maxTime
¥	¥	# *
,
¥	¥	* +
marker
¥	¥	, 2
.
¥	¥	2 3
time
¥	¥	3 7
)
¥	¥	7 8
;
¥	¥	8 9
}
µ	µ	 
return
∑	∑	 
maxTime
∑	∑	 
;
∑	∑	 
}
∏	∏	 	
internal
∫	∫	 
virtual
∫	∫	 
bool
∫	∫	 
CanCompileClips
∫	∫	 -
(
∫	∫	- .
)
∫	∫	. /
{
ª	ª	 	
return
º	º	 
hasClips
º	º	 
||
º	º	 
	hasCurves
º	º	 (
;
º	º	( )
}
Ω	Ω	 	
internal
ø	ø	 
bool
ø	ø	 
IsCompilable
ø	ø	 "
(
ø	ø	" #
)
ø	ø	# $
{
¿	¿	 	
var
¡	¡	 
isContainer
¡	¡	 
=
¡	¡	 
typeof
¡	¡	 $
(
¡	¡	$ %

GroupTrack
¡	¡	% /
)
¡	¡	/ 0
.
¡	¡	0 1
IsAssignableFrom
¡	¡	1 A
(
¡	¡	A B
GetType
¡	¡	B I
(
¡	¡	I J
)
¡	¡	J K
)
¡	¡	K L
;
¡	¡	L M
if
√	√	 
(
√	√	 
isContainer
√	√	 
)
√	√	 
return
ƒ	ƒ	 
false
ƒ	ƒ	 
;
ƒ	ƒ	 
var
∆	∆	 
ret
∆	∆	 
=
∆	∆	 
!
∆	∆	 
mutedInHierarchy
∆	∆	 '
&&
∆	∆	( *
(
∆	∆	+ ,
CanCompileClips
∆	∆	, ;
(
∆	∆	; <
)
∆	∆	< =
||
∆	∆	> @%
CanCompileNotifications
∆	∆	A X
(
∆	∆	X Y
)
∆	∆	Y Z
)
∆	∆	Z [
;
∆	∆	[ \
if
«	«	 
(
«	«	 
!
«	«	 
ret
«	«	 
)
«	«	 
{
»	»	 
foreach
…	…	 
(
…	…	 
var
…	…	 
t
…	…	 
in
…	…	 !
GetChildTracks
…	…	" 0
(
…	…	0 1
)
…	…	1 2
)
…	…	2 3
{
 	 	 
if
À	À	 
(
À	À	 
t
À	À	 
.
À	À	 
IsCompilable
À	À	 &
(
À	À	& '
)
À	À	' (
)
À	À	( )
return
Ã	Ã	 
true
Ã	Ã	 #
;
Ã	Ã	# $
}
Õ	Õ	 
}
Œ	Œ	 
return
–	–	 
ret
–	–	 
;
–	–	 
}
—	—	 	
private
”	”	 
void
”	”	 #
UpdateChildTrackCache
”	”	 *
(
”	”	* +
)
”	”	+ ,
{
‘	‘	 	
if
’	’	 
(
’	’	 
m_ChildTrackCache
’	’	 !
==
’	’	" $
null
’	’	% )
)
’	’	) *
{
÷	÷	 
if
◊	◊	 
(
◊	◊	 

m_Children
◊	◊	 
==
◊	◊	 !
null
◊	◊	" &
||
◊	◊	' )

m_Children
◊	◊	* 4
.
◊	◊	4 5
Count
◊	◊	5 :
==
◊	◊	; =
$num
◊	◊	> ?
)
◊	◊	? @
m_ChildTrackCache
ÿ	ÿ	 %
=
ÿ	ÿ	& '
s_EmptyCache
ÿ	ÿ	( 4
;
ÿ	ÿ	4 5
else
Ÿ	Ÿ	 
{
⁄	⁄	 
var
€	€	 
childTracks
€	€	 #
=
€	€	$ %
new
€	€	& )
List
€	€	* .
<
€	€	. /

TrackAsset
€	€	/ 9
>
€	€	9 :
(
€	€	: ;

m_Children
€	€	; E
.
€	€	E F
Count
€	€	F K
)
€	€	K L
;
€	€	L M
for
‹	‹	 
(
‹	‹	 
int
‹	‹	 
i
‹	‹	 
=
‹	‹	  
$num
‹	‹	! "
;
‹	‹	" #
i
‹	‹	$ %
<
‹	‹	& '

m_Children
‹	‹	( 2
.
‹	‹	2 3
Count
‹	‹	3 8
;
‹	‹	8 9
i
‹	‹	: ;
++
‹	‹	; =
)
‹	‹	= >
{
›	›	 
var
ﬁ	ﬁ	 
subTrack
ﬁ	ﬁ	 $
=
ﬁ	ﬁ	% &

m_Children
ﬁ	ﬁ	' 1
[
ﬁ	ﬁ	1 2
i
ﬁ	ﬁ	2 3
]
ﬁ	ﬁ	3 4
as
ﬁ	ﬁ	5 7

TrackAsset
ﬁ	ﬁ	8 B
;
ﬁ	ﬁ	B C
if
ﬂ	ﬂ	 
(
ﬂ	ﬂ	 
subTrack
ﬂ	ﬂ	 $
!=
ﬂ	ﬂ	% '
null
ﬂ	ﬂ	( ,
)
ﬂ	ﬂ	, -
childTracks
‡	‡	 '
.
‡	‡	' (
Add
‡	‡	( +
(
‡	‡	+ ,
subTrack
‡	‡	, 4
)
‡	‡	4 5
;
‡	‡	5 6
}
·	·	 
m_ChildTrackCache
‚	‚	 %
=
‚	‚	& '
childTracks
‚	‚	( 3
;
‚	‚	3 4
}
„	„	 
}
‰	‰	 
}
Â	Â	 	
internal
Á	Á	 
virtual
Á	Á	 
int
Á	Á	 
Hash
Á	Á	 !
(
Á	Á	! "
)
Á	Á	" #
{
Ë	Ë	 	
return
È	È	 
clips
È	È	 
.
È	È	 
Length
È	È	 
+
È	È	  !
(
È	È	" #
	m_Markers
È	È	# ,
.
È	È	, -
Count
È	È	- 2
<<
È	È	3 5
$num
È	È	6 8
)
È	È	8 9
;
È	È	9 :
}
Í	Í	 	
int
Ï	Ï	 
GetClipsHash
Ï	Ï	 
(
Ï	Ï	 
)
Ï	Ï	 
{
Ì	Ì	 	
var
Ó	Ó	 
hash
Ó	Ó	 
=
Ó	Ó	 
$num
Ó	Ó	 
;
Ó	Ó	 
foreach
Ô	Ô	 
(
Ô	Ô	 
var
Ô	Ô	 
clip
Ô	Ô	 
in
Ô	Ô	  
m_Clips
Ô	Ô	! (
)
Ô	Ô	( )
{
		 
hash
Ò	Ò	 
=
Ò	Ò	 
hash
Ò	Ò	 
.
Ò	Ò	 
CombineHash
Ò	Ò	 '
(
Ò	Ò	' (
clip
Ò	Ò	( ,
.
Ò	Ò	, -
Hash
Ò	Ò	- 1
(
Ò	Ò	1 2
)
Ò	Ò	2 3
)
Ò	Ò	3 4
;
Ò	Ò	4 5
}
Ú	Ú	 
return
Û	Û	 
hash
Û	Û	 
;
Û	Û	 
}
Ù	Ù	 	
	protected
ˆ	ˆ	 
static
ˆ	ˆ	 
int
ˆ	ˆ	 "
GetAnimationClipHash
ˆ	ˆ	 1
(
ˆ	ˆ	1 2
AnimationClip
ˆ	ˆ	2 ?
clip
ˆ	ˆ	@ D
)
ˆ	ˆ	D E
{
˜	˜	 	
var
¯	¯	 
hash
¯	¯	 
=
¯	¯	 
$num
¯	¯	 
;
¯	¯	 
if
˘	˘	 
(
˘	˘	 
clip
˘	˘	 
!=
˘	˘	 
null
˘	˘	 
&&
˘	˘	 
!
˘	˘	  !
clip
˘	˘	! %
.
˘	˘	% &
empty
˘	˘	& +
)
˘	˘	+ ,
hash
˙	˙	 
=
˙	˙	 
hash
˙	˙	 
.
˙	˙	 
CombineHash
˙	˙	 '
(
˙	˙	' (
clip
˙	˙	( ,
.
˙	˙	, -
	frameRate
˙	˙	- 6
.
˙	˙	6 7
GetHashCode
˙	˙	7 B
(
˙	˙	B C
)
˙	˙	C D
)
˙	˙	D E
.
˚	˚	 
CombineHash
˚	˚	  
(
˚	˚	  !
clip
˚	˚	! %
.
˚	˚	% &
length
˚	˚	& ,
.
˚	˚	, -
GetHashCode
˚	˚	- 8
(
˚	˚	8 9
)
˚	˚	9 :
)
˚	˚	: ;
;
˚	˚	; <
return
˝	˝	 
hash
˝	˝	 
;
˝	˝	 
}
˛	˛	 	
bool
Ä
Ä
 
HasNotifications
Ä
Ä
 
(
Ä
Ä
 
)
Ä
Ä
 
{
Å
Å
 	
return
Ç
Ç
 
	m_Markers
Ç
Ç
 
.
Ç
Ç
 
HasNotifications
Ç
Ç
 -
(
Ç
Ç
- .
)
Ç
Ç
. /
;
Ç
Ç
/ 0
}
É
É
 	
bool
Ö
Ö
 %
CanCompileNotifications
Ö
Ö
 $
(
Ö
Ö
$ %
)
Ö
Ö
% &
{
Ü
Ü
 	
return
á
á
 #
supportsNotifications
á
á
 (
&&
á
á
) +
	m_Markers
á
á
, 5
.
á
á
5 6
HasNotifications
á
á
6 F
(
á
á
F G
)
á
á
G H
;
á
á
H I
}
à
à
 	
bool
ä
ä
 &
CanCompileClipsRecursive
ä
ä
 %
(
ä
ä
% &
)
ä
ä
& '
{
ã
ã
 	
if
å
å
 
(
å
å
 
CanCompileClips
å
å
 
(
å
å
  
)
å
å
  !
)
å
å
! "
return
ç
ç
 
true
ç
ç
 
;
ç
ç
 
foreach
é
é
 
(
é
é
 
var
é
é
 
track
é
é
 
in
é
é
 !
GetChildTracks
é
é
" 0
(
é
é
0 1
)
é
é
1 2
)
é
é
2 3
{
è
è
 
if
ê
ê
 
(
ê
ê
 
track
ê
ê
 
.
ê
ê
 &
CanCompileClipsRecursive
ê
ê
 2
(
ê
ê
2 3
)
ê
ê
3 4
)
ê
ê
4 5
return
ë
ë
 
true
ë
ë
 
;
ë
ë
  
}
í
í
 
return
î
î
 
false
î
î
 
;
î
î
 
}
ï
ï
 	
}
ñ
ñ
 
}ó
ó
 ≥∞
èD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Utilities\TimeUtility.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
static 

class 
TimeUtility 
{ 
public

 
static

 
readonly

 
double

 %
kTimeEpsilon

& 2
=

3 4
$num

5 :
;

: ;
public 
static 
readonly 
double %
kFrameRateEpsilon& 7
=8 9
$num: >
;> ?
public 
static 
readonly 
double %*
k_MaxTimelineDurationInSeconds& D
=E F
$numG J
;J K
static 
void 
ValidateFrameRate %
(% &
double& ,
	frameRate- 6
)6 7
{ 	
if 
( 
	frameRate 
<= 
kTimeEpsilon )
)) *
throw 
new 
ArgumentException +
(+ ,
$str, P
)P Q
;Q R
} 	
public 
static 
int 
ToFrames "
(" #
double# )
time* .
,. /
double0 6
	frameRate7 @
)@ A
{ 	
ValidateFrameRate 
( 
	frameRate '
)' (
;( )
time 
= 
Math 
. 
Min 
( 
Math  
.  !
Max! $
($ %
time% )
,) *
-+ ,*
k_MaxTimelineDurationInSeconds, J
)J K
,K L*
k_MaxTimelineDurationInSecondsM k
)k l
;l m
double 
	tolerance 
= 

GetEpsilon )
() *
time* .
,. /
	frameRate0 9
)9 :
/; <
$num= @
;@ A
if 
( 
time 
< 
$num 
) 
{ 
return 
( 
int 
) 
Math  
.  !
Ceiling! (
(( )
time) -
*. /
	frameRate0 9
-: ;
	tolerance< E
)E F
;F G
} 
return 
( 
int 
) 
Math 
. 
Floor "
(" #
time# '
*( )
	frameRate* 3
+4 5
	tolerance6 ?
)? @
;@ A
} 	
public!! 
static!! 
double!! 
ToExactFrames!! *
(!!* +
double!!+ 1
time!!2 6
,!!6 7
double!!8 >
	frameRate!!? H
)!!H I
{"" 	
ValidateFrameRate## 
(## 
	frameRate## '
)##' (
;##( )
return$$ 
time$$ 
*$$ 
	frameRate$$ #
;$$# $
}%% 	
public'' 
static'' 
double'' 

FromFrames'' '
(''' (
int''( +
frames'', 2
,''2 3
double''4 :
	frameRate''; D
)''D E
{(( 	
ValidateFrameRate)) 
()) 
	frameRate)) '
)))' (
;))( )
return** 
(** 
frames** 
/** 
	frameRate** &
)**& '
;**' (
}++ 	
public-- 
static-- 
double-- 

FromFrames-- '
(--' (
double--( .
frames--/ 5
,--5 6
double--7 =
	frameRate--> G
)--G H
{.. 	
ValidateFrameRate// 
(// 
	frameRate// '
)//' (
;//( )
return00 
frames00 
/00 
	frameRate00 %
;00% &
}11 	
public33 
static33 
bool33 
OnFrameBoundary33 *
(33* +
double33+ 1
time332 6
,336 7
double338 >
	frameRate33? H
)33H I
{44 	
return55 
OnFrameBoundary55 "
(55" #
time55# '
,55' (
	frameRate55) 2
,552 3

GetEpsilon554 >
(55> ?
time55? C
,55C D
	frameRate55E N
)55N O
)55O P
;55P Q
}66 	
public88 
static88 
double88 

GetEpsilon88 '
(88' (
double88( .
time88/ 3
,883 4
double885 ;
	frameRate88< E
)88E F
{99 	
return:: 
Math:: 
.:: 
Max:: 
(:: 
Math::  
.::  !
Abs::! $
(::$ %
time::% )
)::) *
,::* +
$num::, -
)::- .
*::/ 0
	frameRate::1 :
*::; <
kTimeEpsilon::= I
;::I J
};; 	
public== 
static== 
bool== 
OnFrameBoundary== *
(==* +
double==+ 1
time==2 6
,==6 7
double==8 >
	frameRate==? H
,==H I
double==J P
epsilon==Q X
)==X Y
{>> 	
ValidateFrameRate?? 
(?? 
	frameRate?? '
)??' (
;??( )
doubleAA 
exactAA 
=AA 
ToExactFramesAA (
(AA( )
timeAA) -
,AA- .
	frameRateAA/ 8
)AA8 9
;AA9 :
doubleBB 
roundedBB 
=BB 
MathBB !
.BB! "
RoundBB" '
(BB' (
exactBB( -
)BB- .
;BB. /
returnDD 
MathDD 
.DD 
AbsDD 
(DD 
exactDD !
-DD" #
roundedDD$ +
)DD+ ,
<DD- .
epsilonDD/ 6
;DD6 7
}EE 	
publicGG 
staticGG 
doubleGG 
RoundToFrameGG )
(GG) *
doubleGG* 0
timeGG1 5
,GG5 6
doubleGG7 =
	frameRateGG> G
)GGG H
{HH 	
ValidateFrameRateII 
(II 
	frameRateII '
)II' (
;II( )
varKK 
frameBeforeKK 
=KK 
(KK 
intKK "
)KK" #
MathKK# '
.KK' (
FloorKK( -
(KK- .
timeKK. 2
*KK3 4
	frameRateKK5 >
)KK> ?
/KK@ A
	frameRateKKB K
;KKK L
varLL 

frameAfterLL 
=LL 
(LL 
intLL !
)LL! "
MathLL" &
.LL& '
CeilingLL' .
(LL. /
timeLL/ 3
*LL4 5
	frameRateLL6 ?
)LL? @
/LLA B
	frameRateLLC L
;LLL M
returnNN 
MathNN 
.NN 
AbsNN 
(NN 
timeNN  
-NN! "
frameBeforeNN# .
)NN. /
<NN0 1
MathNN2 6
.NN6 7
AbsNN7 :
(NN: ;
timeNN; ?
-NN@ A

frameAfterNNB L
)NNL M
?NNN O
frameBeforeNNP [
:NN\ ]

frameAfterNN^ h
;NNh i
}OO 	
publicQQ 
staticQQ 
stringQQ 
TimeAsFramesQQ )
(QQ) *
doubleQQ* 0
	timeValueQQ1 :
,QQ: ;
doubleQQ< B
	frameRateQQC L
,QQL M
stringQQN T
formatQQU [
=QQ\ ]
$strQQ^ b
)QQb c
{RR 	
ifSS 
(SS 
OnFrameBoundarySS 
(SS  
	timeValueSS  )
,SS) *
	frameRateSS+ 4
)SS4 5
)SS5 6
returnTT 
ToFramesTT 
(TT  
	timeValueTT  )
,TT) *
	frameRateTT+ 4
)TT4 5
.TT5 6
ToStringTT6 >
(TT> ?
)TT? @
;TT@ A
returnUU 
ToExactFramesUU  
(UU  !
	timeValueUU! *
,UU* +
	frameRateUU, 5
)UU5 6
.UU6 7
ToStringUU7 ?
(UU? @
formatUU@ F
)UUF G
;UUG H
}VV 	
publicXX 
staticXX 
stringXX 
TimeAsTimeCodeXX +
(XX+ ,
doubleXX, 2
	timeValueXX3 <
,XX< =
doubleXX> D
	frameRateXXE N
,XXN O
stringXXP V
formatXXW ]
=XX^ _
$strXX` d
)XXd e
{YY 	
ValidateFrameRateZZ 
(ZZ 
	frameRateZZ '
)ZZ' (
;ZZ( )
int\\ 
intTime\\ 
=\\ 
(\\ 
int\\ 
)\\ 
Math\\ #
.\\# $
Abs\\$ '
(\\' (
	timeValue\\( 1
)\\1 2
;\\2 3
int^^ 
hours^^ 
=^^ 
intTime^^ 
/^^  !
$num^^" &
;^^& '
int__ 
minutes__ 
=__ 
(__ 
intTime__ "
%__# $
$num__% )
)__) *
/__+ ,
$num__- /
;__/ 0
int`` 
seconds`` 
=`` 
intTime`` !
%``" #
$num``$ &
;``& '
stringbb 
resultbb 
;bb 
stringcc 
signcc 
=cc 
	timeValuecc #
<cc$ %
$numcc& '
?cc( )
$strcc* -
:cc. /
stringcc0 6
.cc6 7
Emptycc7 <
;cc< =
ifdd 
(dd 
hoursdd 
>dd 
$numdd 
)dd 
resultee 
=ee 
hoursee 
+ee  
$stree! $
+ee% &
minutesee' .
.ee. /
ToStringee/ 7
(ee7 8
$stree8 <
)ee< =
+ee> ?
$stree@ C
+eeD E
secondseeF M
.eeM N
ToStringeeN V
(eeV W
$streeW [
)ee[ \
;ee\ ]
elseff 
ifff 
(ff 
minutesff 
>ff 
$numff  
)ff  !
resultgg 
=gg 
minutesgg  
+gg! "
$strgg# &
+gg' (
secondsgg) 0
.gg0 1
ToStringgg1 9
(gg9 :
$strgg: >
)gg> ?
;gg? @
elsehh 
resultii 
=ii 
secondsii  
.ii  !
ToStringii! )
(ii) *
)ii* +
;ii+ ,
intkk 
frameDigitskk 
=kk 
(kk 
intkk "
)kk" #
Mathkk# '
.kk' (
Floorkk( -
(kk- .
Mathkk. 2
.kk2 3
Log10kk3 8
(kk8 9
	frameRatekk9 B
)kkB C
+kkD E
$numkkF G
)kkG H
;kkH I
stringpp 
framespp 
=pp 
(pp 
ToFramespp %
(pp% &
	timeValuepp& /
,pp/ 0
	frameRatepp1 :
)pp: ;
-pp< =
ToFramespp> F
(ppF G
intTimeppG N
,ppN O
	frameRateppP Y
)ppY Z
)ppZ [
.pp[ \
ToStringpp\ d
(ppd e
)ppe f
.ppf g
PadLeftppg n
(ppn o
frameDigitsppo z
,ppz {
$charpp| 
)	pp Ä
;
ppÄ Å
ifqq 
(qq 
!qq 
OnFrameBoundaryqq  
(qq  !
	timeValueqq! *
,qq* +
	frameRateqq, 5
)qq5 6
)qq6 7
{rr 
stringss 
decimalsss 
=ss  !
ToExactFramesss" /
(ss/ 0
	timeValuess0 9
,ss9 :
	frameRatess; D
)ssD E
.ssE F
ToStringssF N
(ssN O
formatssO U
)ssU V
;ssV W
inttt 
decPlacett 
=tt 
decimalstt '
.tt' (
IndexOftt( /
(tt/ 0
$chartt0 3
)tt3 4
;tt4 5
ifuu 
(uu 
decPlaceuu 
>=uu 
$numuu  !
)uu! "
framesvv 
+=vv 
$strvv "
+vv# $
decimalsvv% -
.vv- .
	Substringvv. 7
(vv7 8
decPlacevv8 @
)vv@ A
+vvB C
$strvvD G
;vvG H
}ww 
returnyy 
signyy 
+yy 
resultyy  
+yy! "
$stryy# &
+yy' (
framesyy) /
;yy/ 0
}zz 	
public
ÇÇ 
static
ÇÇ 
double
ÇÇ 
ParseTimeCode
ÇÇ *
(
ÇÇ* +
string
ÇÇ+ 1
timeCode
ÇÇ2 :
,
ÇÇ: ;
double
ÇÇ< B
	frameRate
ÇÇC L
,
ÇÇL M
double
ÇÇN T
defaultValue
ÇÇU a
)
ÇÇa b
{
ÉÉ 	
timeCode
ÑÑ 
=
ÑÑ 

RemoveChar
ÑÑ !
(
ÑÑ! "
timeCode
ÑÑ" *
,
ÑÑ* +
c
ÑÑ, -
=>
ÑÑ. 0
char
ÑÑ1 5
.
ÑÑ5 6
IsWhiteSpace
ÑÑ6 B
(
ÑÑB C
c
ÑÑC D
)
ÑÑD E
)
ÑÑE F
;
ÑÑF G
string
ÖÖ 
[
ÖÖ 
]
ÖÖ 
sections
ÖÖ 
=
ÖÖ 
timeCode
ÖÖ  (
.
ÖÖ( )
Split
ÖÖ) .
(
ÖÖ. /
$char
ÖÖ/ 2
)
ÖÖ2 3
;
ÖÖ3 4
if
ÜÜ 
(
ÜÜ 
sections
ÜÜ 
.
ÜÜ 
Length
ÜÜ 
==
ÜÜ  "
$num
ÜÜ# $
||
ÜÜ% '
sections
ÜÜ( 0
.
ÜÜ0 1
Length
ÜÜ1 7
>
ÜÜ8 9
$num
ÜÜ: ;
)
ÜÜ; <
return
áá 
defaultValue
áá #
;
áá# $
int
ââ 
hours
ââ 
=
ââ 
$num
ââ 
;
ââ 
int
ää 
minutes
ää 
=
ää 
$num
ää 
;
ää 
double
ãã 
seconds
ãã 
=
ãã 
$num
ãã 
;
ãã 
double
åå 
frames
åå 
=
åå 
$num
åå 
;
åå 
try
éé 
{
èè 
string
íí 
lastSection
íí "
=
íí# $
sections
íí% -
[
íí- .
sections
íí. 6
.
íí6 7
Length
íí7 =
-
íí> ?
$num
íí@ A
]
ííA B
;
ííB C
if
ìì 
(
ìì 
Regex
ìì 
.
ìì 
Match
ìì 
(
ìì  
lastSection
ìì  +
,
ìì+ ,
$str
ìì- :
)
ìì: ;
.
ìì; <
Success
ìì< C
)
ììC D
{
îî 
seconds
ïï 
=
ïï 
double
ïï $
.
ïï$ %
Parse
ïï% *
(
ïï* +
lastSection
ïï+ 6
)
ïï6 7
;
ïï7 8
if
ññ 
(
ññ 
sections
ññ  
.
ññ  !
Length
ññ! '
>
ññ( )
$num
ññ* +
)
ññ+ ,
return
ññ- 3
defaultValue
ññ4 @
;
ññ@ A
if
óó 
(
óó 
sections
óó  
.
óó  !
Length
óó! '
>
óó( )
$num
óó* +
)
óó+ ,
minutes
óó- 4
=
óó5 6
int
óó7 :
.
óó: ;
Parse
óó; @
(
óó@ A
sections
óóA I
[
óóI J
sections
óóJ R
.
óóR S
Length
óóS Y
-
óóZ [
$num
óó\ ]
]
óó] ^
)
óó^ _
;
óó_ `
if
òò 
(
òò 
sections
òò  
.
òò  !
Length
òò! '
>
òò( )
$num
òò* +
)
òò+ ,
hours
òò- 2
=
òò3 4
int
òò5 8
.
òò8 9
Parse
òò9 >
(
òò> ?
sections
òò? G
[
òòG H
sections
òòH P
.
òòP Q
Length
òòQ W
-
òòX Y
$num
òòZ [
]
òò[ \
)
òò\ ]
;
òò] ^
}
ôô 
else
õõ 
{
úú 
if
ùù 
(
ùù 
Regex
ùù 
.
ùù 
Match
ùù #
(
ùù# $
lastSection
ùù$ /
,
ùù/ 0
$str
ùù1 B
)
ùùB C
.
ùùC D
Success
ùùD K
)
ùùK L
{
ûû 
string
üü 
stripped
üü '
=
üü( )

RemoveChar
üü* 4
(
üü4 5
lastSection
üü5 @
,
üü@ A
c
üüB C
=>
üüD F
c
üüG H
==
üüI K
$char
üüL O
||
üüP R
c
üüS T
==
üüU W
$char
üüX [
)
üü[ \
;
üü\ ]
frames
†† 
=
††  
double
††! '
.
††' (
Parse
††( -
(
††- .
stripped
††. 6
)
††6 7
;
††7 8
}
°° 
else
¢¢ 
if
¢¢ 
(
¢¢ 
Regex
¢¢ "
.
¢¢" #
Match
¢¢# (
(
¢¢( )
lastSection
¢¢) 4
,
¢¢4 5
$str
¢¢6 >
)
¢¢> ?
.
¢¢? @
Success
¢¢@ G
)
¢¢G H
{
££ 
frames
§§ 
=
§§  
int
§§! $
.
§§$ %
Parse
§§% *
(
§§* +
lastSection
§§+ 6
)
§§6 7
;
§§7 8
}
•• 
else
¶¶ 
{
ßß 
return
®® 
defaultValue
®® +
;
®®+ ,
}
©© 
if
´´ 
(
´´ 
sections
´´  
.
´´  !
Length
´´! '
>
´´( )
$num
´´* +
)
´´+ ,
seconds
´´- 4
=
´´5 6
int
´´7 :
.
´´: ;
Parse
´´; @
(
´´@ A
sections
´´A I
[
´´I J
sections
´´J R
.
´´R S
Length
´´S Y
-
´´Z [
$num
´´\ ]
]
´´] ^
)
´´^ _
;
´´_ `
if
¨¨ 
(
¨¨ 
sections
¨¨  
.
¨¨  !
Length
¨¨! '
>
¨¨( )
$num
¨¨* +
)
¨¨+ ,
minutes
¨¨- 4
=
¨¨5 6
int
¨¨7 :
.
¨¨: ;
Parse
¨¨; @
(
¨¨@ A
sections
¨¨A I
[
¨¨I J
sections
¨¨J R
.
¨¨R S
Length
¨¨S Y
-
¨¨Z [
$num
¨¨\ ]
]
¨¨] ^
)
¨¨^ _
;
¨¨_ `
if
≠≠ 
(
≠≠ 
sections
≠≠  
.
≠≠  !
Length
≠≠! '
>
≠≠( )
$num
≠≠* +
)
≠≠+ ,
hours
≠≠- 2
=
≠≠3 4
int
≠≠5 8
.
≠≠8 9
Parse
≠≠9 >
(
≠≠> ?
sections
≠≠? G
[
≠≠G H
sections
≠≠H P
.
≠≠P Q
Length
≠≠Q W
-
≠≠X Y
$num
≠≠Z [
]
≠≠[ \
)
≠≠\ ]
;
≠≠] ^
}
ÆÆ 
}
ØØ 
catch
∞∞ 
(
∞∞ 
FormatException
∞∞ "
)
∞∞" #
{
±± 
return
≤≤ 
defaultValue
≤≤ #
;
≤≤# $
}
≥≥ 
return
µµ 
frames
µµ 
/
µµ 
	frameRate
µµ %
+
µµ& '
seconds
µµ( /
+
µµ0 1
minutes
µµ2 9
*
µµ: ;
$num
µµ< >
+
µµ? @
hours
µµA F
*
µµG H
$num
µµI M
;
µµM N
}
∂∂ 	
public
ππ 
static
ππ 
double
ππ $
GetAnimationClipLength
ππ 3
(
ππ3 4
AnimationClip
ππ4 A
clip
ππB F
)
ππF G
{
∫∫ 	
if
ªª 
(
ªª 
clip
ªª 
==
ªª 
null
ªª 
||
ªª 
clip
ªª  $
.
ªª$ %
empty
ªª% *
)
ªª* +
return
ºº 
$num
ºº 
;
ºº 
double
ææ 
length
ææ 
=
ææ 
clip
ææ  
.
ææ  !
length
ææ! '
;
ææ' (
if
øø 
(
øø 
clip
øø 
.
øø 
	frameRate
øø 
>
øø  
$num
øø! "
)
øø" #
{
¿¿ 
double
¡¡ 
frames
¡¡ 
=
¡¡ 
Mathf
¡¡  %
.
¡¡% &
Round
¡¡& +
(
¡¡+ ,
clip
¡¡, 0
.
¡¡0 1
length
¡¡1 7
*
¡¡8 9
clip
¡¡: >
.
¡¡> ?
	frameRate
¡¡? H
)
¡¡H I
;
¡¡I J
length
¬¬ 
=
¬¬ 
frames
¬¬ 
/
¬¬  !
clip
¬¬" &
.
¬¬& '
	frameRate
¬¬' 0
;
¬¬0 1
}
√√ 
return
ƒƒ 
length
ƒƒ 
;
ƒƒ 
}
≈≈ 	
static
«« 
string
«« 

RemoveChar
««  
(
««  !
string
««! '
str
««( +
,
««+ ,
Func
««- 1
<
««1 2
char
««2 6
,
««6 7
bool
««8 <
>
««< =
charToRemoveFunc
««> N
)
««N O
{
»» 	
var
…… 
len
…… 
=
…… 
str
…… 
.
…… 
Length
……  
;
……  !
var
   
src
   
=
   
str
   
.
   
ToCharArray
   %
(
  % &
)
  & '
;
  ' (
var
ÀÀ 
dstIdx
ÀÀ 
=
ÀÀ 
$num
ÀÀ 
;
ÀÀ 
for
ÃÃ 
(
ÃÃ 
var
ÃÃ 
i
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
i
ÃÃ 
<
ÃÃ 
len
ÃÃ  #
;
ÃÃ# $
i
ÃÃ% &
++
ÃÃ& (
)
ÃÃ( )
{
ÕÕ 
if
ŒŒ 
(
ŒŒ 
!
ŒŒ 
charToRemoveFunc
ŒŒ %
(
ŒŒ% &
src
ŒŒ& )
[
ŒŒ) *
i
ŒŒ* +
]
ŒŒ+ ,
)
ŒŒ, -
)
ŒŒ- .
src
œœ 
[
œœ 
dstIdx
œœ 
++
œœ  
]
œœ  !
=
œœ" #
src
œœ$ '
[
œœ' (
i
œœ( )
]
œœ) *
;
œœ* +
}
–– 
return
—— 
new
—— 
string
—— 
(
—— 
src
—— !
,
——! "
$num
——# $
,
——$ %
dstIdx
——& ,
)
——, -
;
——- .
}
““ 	
}
”” 
}‘‘ Ù
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Scripting\PlayableTrack.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[ 
Serializable 
] 
public 

class 
PlayableTrack 
:  

TrackAsset! +
{ 
	protected 
override 
void 
OnCreateClip  ,
(, -
TimelineClip- 9
clip: >
)> ?
{ 	
if 
( 
clip 
. 
asset 
!= 
null "
)" #
clip 
. 
displayName  
=! "
clip# '
.' (
asset( -
.- .
GetType. 5
(5 6
)6 7
.7 8
Name8 <
;< =
} 	
} 
} ﬁ
ìD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Audio\AudioClipProperties.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[ 
Serializable 
] 
[ 

NotKeyable 
] 
class 	
AudioClipProperties
 
: 
PlayableBehaviour  1
{		 
[

 	
Range

	 
(

 
$num

 
,

 
$num

 
)

 
]

 
public 
float 
volume 
= 
$num "
;" #
} 
} Ê
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Playables\BasicScriptPlayable.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[ 
Serializable 
] 
[ 
Obsolete 
( 
$str M
)M N
]N O
public 

class "
BasicPlayableBehaviour '
:( )
ScriptableObject* :
,: ;
IPlayableAsset< J
,J K
IPlayableBehaviourL ^
{ 
public 
virtual 
double 
duration &
{' (
get) ,
{- .
return/ 5
PlayableBinding6 E
.E F
DefaultDurationF U
;U V
}W X
}Y Z
public 
virtual 
IEnumerable "
<" #
PlayableBinding# 2
>2 3
outputs4 ;
{< =
get> A
{B C
returnD J
PlayableBindingK Z
.Z [
None[ _
;_ `
}a b
}c d
public 
virtual 
void 
OnGraphStart (
(( )
Playable) 1
playable2 :
): ;
{< =
}= >
public## 
virtual## 
void## 
OnGraphStop## '
(##' (
Playable##( 0
playable##1 9
)##9 :
{##< =
}##= >
public)) 
virtual)) 
void)) 
OnPlayableCreate)) ,
()), -
Playable))- 5
playable))6 >
)))> ?
{))@ A
}))A B
public// 
virtual// 
void// 
OnPlayableDestroy// -
(//- .
Playable//. 6
playable//7 ?
)//? @
{//A B
}//B C
public66 
virtual66 
void66 
OnBehaviourPlay66 +
(66+ ,
Playable66, 4
playable665 =
,66= >
	FrameData66? H
info66I M
)66M N
{66O P
}66P Q
public== 
virtual== 
void== 
OnBehaviourPause== ,
(==, -
Playable==- 5
playable==6 >
,==> ?
	FrameData==@ I
info==J N
)==N O
{==P Q
}==Q R
publicDD 
virtualDD 
voidDD 
PrepareFrameDD (
(DD( )
PlayableDD) 1
playableDD2 :
,DD: ;
	FrameDataDD< E
infoDDF J
)DDJ K
{DDL M
}DDM N
publicLL 
virtualLL 
voidLL 
ProcessFrameLL (
(LL( )
PlayableLL) 1
playableLL2 :
,LL: ;
	FrameDataLL< E
infoLLF J
,LLJ K
objectLLL R

playerDataLLS ]
)LL] ^
{LL_ `
}LL` a
publicTT 
virtualTT 
PlayableTT 
CreatePlayableTT  .
(TT. /
PlayableGraphTT/ <
graphTT= B
,TTB C

GameObjectTTD N
ownerTTO T
)TTT U
{UU 	
returnVV 
ScriptPlayableVV !
<VV! ""
BasicPlayableBehaviourVV" 8
>VV8 9
.VV9 :
CreateVV: @
(VV@ A
graphVVA F
,VVF G
thisVVH L
)VVL M
;VVM N
}WW 	
}XX 
}YY ¢/
íD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Audio\AudioPlayableAsset.cs
	namespace		 	
UnityEngine		
 
.		 
Timeline		 
{

 
[ 
Serializable 
] 
[ 
DisplayName 
( 
$str 
) 
] 
public 

class 
AudioPlayableAsset #
:$ %
PlayableAsset& 3
,3 4
ITimelineClipAsset5 G
{ 
[ 	
SerializeField	 
] 
	AudioClip "
m_Clip# )
;) *
[ 	
SerializeField	 
] 
bool 
m_Loop $
;$ %
[ 	
SerializeField	 
, 
HideInInspector (
]( )
float* /
m_bufferingTime0 ?
=@ A
$numB F
;F G
[ 	
SerializeField	 
] 
AudioClipProperties ,
m_ClipProperties- =
=> ?
new@ C
AudioClipPropertiesD W
(W X
)X Y
;Y Z
internal 
float 
bufferingTime $
{ 	
get 
{ 
return 
m_bufferingTime (
;( )
}+ ,
set 
{ 
m_bufferingTime !
=" #
value$ )
;) *
}+ ,
} 	
Playable"" 
m_LiveClipPlayable"" #
=""$ %
Playable""& .
."". /
Null""/ 3
;""3 4
public)) 
	AudioClip)) 
clip)) 
{** 	
get++ 
{++ 
return++ 
m_Clip++ 
;++  
}++! "
set,, 
{,, 
m_Clip,, 
=,, 
value,,  
;,,  !
},," #
}-- 	
public55 
bool55 
loop55 
{66 	
get77 
{77 
return77 
m_Loop77 
;77  
}77! "
set88 
{88 
m_Loop88 
=88 
value88  
;88  !
}88" #
}99 	
public>> 
override>> 
double>> 
duration>> '
{?? 	
get@@ 
{AA 
ifBB 
(BB 
m_ClipBB 
==BB 
nullBB "
)BB" #
returnCC 
baseCC 
.CC  
durationCC  (
;CC( )
returnFF 
(FF 
doubleFF 
)FF 
m_ClipFF %
.FF% &
samplesFF& -
/FF. /
m_ClipFF0 6
.FF6 7
	frequencyFF7 @
;FF@ A
}GG 
}HH 	
publicMM 
overrideMM 
IEnumerableMM #
<MM# $
PlayableBindingMM$ 3
>MM3 4
outputsMM5 <
{NN 	
getOO 
{OO 
yieldOO 
returnOO  
AudioPlayableBindingOO 3
.OO3 4
CreateOO4 :
(OO: ;
nameOO; ?
,OO? @
thisOOA E
)OOE F
;OOF G
}OOH I
}PP 	
publicXX 
overrideXX 
PlayableXX  
CreatePlayableXX! /
(XX/ 0
PlayableGraphXX0 =
graphXX> C
,XXC D

GameObjectXXE O
goXXP R
)XXR S
{YY 	
ifZZ 
(ZZ 
m_ClipZZ 
==ZZ 
nullZZ 
)ZZ 
return[[ 
Playable[[ 
.[[  
Null[[  $
;[[$ %
var]] 
audioClipPlayable]] !
=]]" #
AudioClipPlayable]]$ 5
.]]5 6
Create]]6 <
(]]< =
graph]]= B
,]]B C
m_Clip]]D J
,]]J K
m_Loop]]L R
)]]R S
;]]S T
audioClipPlayable^^ 
.^^ 
	GetHandle^^ '
(^^' (
)^^( )
.^^) *
SetScriptInstance^^* ;
(^^; <
m_ClipProperties^^< L
.^^L M
Clone^^M R
(^^R S
)^^S T
)^^T U
;^^U V
m_LiveClipPlayableaa 
=aa  
audioClipPlayableaa! 2
;aa2 3
returndd 
audioClipPlayabledd $
;dd$ %
}ee 	
publicjj 
ClipCapsjj 
clipCapsjj  
{kk 	
getll 
{mm 
returnnn 
ClipCapsnn 
.nn  
ClipInnn  &
|nn' (
ClipCapsoo 
.oo 
SpeedMultiplieroo ,
|oo- .
ClipCapspp 
.pp 
Blendingpp %
|pp& '
(qq 
m_Loopqq 
?qq 
ClipCapsqq &
.qq& '
Loopingqq' .
:qq/ 0
ClipCapsqq1 9
.qq9 :
Noneqq: >
)qq> ?
;qq? @
}rr 
}ss 	
internalvv 
voidvv 
LiveLinkvv 
(vv 
)vv  
{ww 	
ifxx 
(xx 
!xx 
m_LiveClipPlayablexx #
.xx# $
IsValidxx$ +
(xx+ ,
)xx, -
)xx- .
returnyy 
;yy 
var{{  
audioMixerProperties{{ $
={{% &
m_LiveClipPlayable{{' 9
.{{9 :
	GetHandle{{: C
({{C D
){{D E
.{{E F
	GetObject{{F O
<{{O P
AudioClipProperties{{P c
>{{c d
({{d e
){{e f
;{{f g
if}} 
(}}  
audioMixerProperties}} $
==}}% '
null}}( ,
)}}, -
return~~ 
;~~ "
audioMixerProperties
ÄÄ  
.
ÄÄ  !
volume
ÄÄ! '
=
ÄÄ( )
m_ClipProperties
ÄÄ* :
.
ÄÄ: ;
volume
ÄÄ; A
;
ÄÄA B
}
ÅÅ 	
}
ÑÑ 
}ÖÖ ÄÆ
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Evaluation\IntervalTree.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
	interface 
	IInterval 
{ 
Int64 
intervalStart 
{ 
get !
;! "
}# $
Int64		 
intervalEnd		 
{		 
get		 
;		  
}		! "
}

 
struct 

IntervalTreeNode 
{ 
public 
Int64 
center 
; 
public 
int 
first 
; 
public 
int 
last 
; 
public 
int 
left 
; 
public 
int 
right 
; 
} 
class 	
IntervalTree
 
< 
T 
> 
where 
T  !
:" #
	IInterval$ -
{ 
internal 
struct 
Entry 
{ 	
public 
Int64 
intervalStart &
;& '
public 
Int64 
intervalEnd $
;$ %
public 
T 
item 
; 
} 	
const 
int 
kMinNodeSize 
=  
$num! #
;# $
const 
int 
kInvalidNode 
=  
-! "
$num" #
;# $
const   
Int64   
kCenterUnknown   "
=  # $
Int64  % *
.  * +
MaxValue  + 3
;  3 4
readonly"" 
List"" 
<"" 
Entry"" 
>"" 
	m_Entries"" &
=""' (
new"") ,
List""- 1
<""1 2
Entry""2 7
>""7 8
(""8 9
)""9 :
;"": ;
readonly## 
List## 
<## 
IntervalTreeNode## &
>##& '
m_Nodes##( /
=##0 1
new##2 5
List##6 :
<##: ;
IntervalTreeNode##; K
>##K L
(##L M
)##M N
;##N O
public(( 
bool(( 
dirty(( 
{(( 
get(( 
;((  
internal((! )
set((* -
;((- .
}((/ 0
public-- 
void-- 
Add-- 
(-- 
T-- 
item-- 
)-- 
{.. 	
if// 
(// 
item// 
==// 
null// 
)// 
return00 
;00 
	m_Entries22 
.22 
Add22 
(22 
new33 
Entry33 
(33 
)33 
{44 
intervalStart55 !
=55" #
item55$ (
.55( )
intervalStart55) 6
,556 7
intervalEnd66 
=66  !
item66" &
.66& '
intervalEnd66' 2
,662 3
item77 
=77 
item77 
}88 
)99 
;99 
dirty:: 
=:: 
true:: 
;:: 
};; 	
publicBB 
voidBB 
IntersectsWithBB "
(BB" #
Int64BB# (
valueBB) .
,BB. /
ListBB0 4
<BB4 5
TBB5 6
>BB6 7
resultsBB8 ?
)BB? @
{CC 	
ifDD 
(DD 
	m_EntriesDD 
.DD 
CountDD 
==DD  "
$numDD# $
)DD$ %
returnEE 
;EE 
ifGG 
(GG 
dirtyGG 
)GG 
{HH 
RebuildII 
(II 
)II 
;II 
dirtyJJ 
=JJ 
falseJJ 
;JJ 
}KK 
ifMM 
(MM 
m_NodesMM 
.MM 
CountMM 
>MM 
$numMM  !
)MM! "
QueryNN 
(NN 
m_NodesNN 
[NN 
$numNN 
]NN  
,NN  !
valueNN" '
,NN' (
resultsNN) 0
)NN0 1
;NN1 2
}OO 	
publicWW 
voidWW 
IntersectsWithRangeWW '
(WW' (
Int64WW( -
startWW. 3
,WW3 4
Int64WW5 :
endWW; >
,WW> ?
ListWW@ D
<WWD E
TWWE F
>WWF G
resultsWWH O
)WWO P
{XX 	
ifYY 
(YY 
startYY 
>YY 
endYY 
)YY 
returnZZ 
;ZZ 
if\\ 
(\\ 
	m_Entries\\ 
.\\ 
Count\\ 
==\\  "
$num\\# $
)\\$ %
return]] 
;]] 
if__ 
(__ 
dirty__ 
)__ 
{`` 
Rebuildaa 
(aa 
)aa 
;aa 
dirtybb 
=bb 
falsebb 
;bb 
}cc 
ifee 
(ee 
m_Nodesee 
.ee 
Countee 
>ee 
$numee  !
)ee! "

QueryRangeff 
(ff 
m_Nodesff "
[ff" #
$numff# $
]ff$ %
,ff% &
startff' ,
,ff, -
endff. 1
,ff1 2
resultsff3 :
)ff: ;
;ff; <
}gg 	
publicmm 
voidmm 
UpdateIntervalsmm #
(mm# $
)mm$ %
{nn 	
booloo 
isDirtyoo 
=oo 
falseoo  
;oo  !
forpp 
(pp 
intpp 
ipp 
=pp 
$numpp 
;pp 
ipp 
<pp 
	m_Entriespp  )
.pp) *
Countpp* /
;pp/ 0
ipp1 2
++pp2 4
)pp4 5
{qq 
varrr 
nrr 
=rr 
	m_Entriesrr !
[rr! "
irr" #
]rr# $
;rr$ %
varss 
sss 
=ss 
nss 
.ss 
itemss 
.ss 
intervalStartss ,
;ss, -
vartt 
ett 
=tt 
ntt 
.tt 
itemtt 
.tt 
intervalEndtt *
;tt* +
isDirtyvv 
|=vv 
nvv 
.vv 
intervalStartvv *
!=vv+ -
svv. /
;vv/ 0
isDirtyww 
|=ww 
nww 
.ww 
intervalEndww (
!=ww) +
eww, -
;ww- .
	m_Entriesyy 
[yy 
iyy 
]yy 
=yy 
newyy "
Entryyy# (
(yy( )
)yy) *
{zz 
intervalStart{{ !
={{" #
s{{$ %
,{{% &
intervalEnd|| 
=||  !
e||" #
,||# $
item}} 
=}} 
n}} 
.}} 
item}} !
}~~ 
;~~ 
} 
dirty
ÅÅ 
|=
ÅÅ 
isDirty
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
private
ÑÑ 
void
ÑÑ 
Query
ÑÑ 
(
ÑÑ 
IntervalTreeNode
ÑÑ +
intervalTreeNode
ÑÑ, <
,
ÑÑ< =
Int64
ÑÑ> C
value
ÑÑD I
,
ÑÑI J
List
ÑÑK O
<
ÑÑO P
T
ÑÑP Q
>
ÑÑQ R
results
ÑÑS Z
)
ÑÑZ [
{
ÖÖ 	
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
i
ÜÜ 
=
ÜÜ 
intervalTreeNode
ÜÜ )
.
ÜÜ) *
first
ÜÜ* /
;
ÜÜ/ 0
i
ÜÜ1 2
<=
ÜÜ3 5
intervalTreeNode
ÜÜ6 F
.
ÜÜF G
last
ÜÜG K
;
ÜÜK L
i
ÜÜM N
++
ÜÜN P
)
ÜÜP Q
{
áá 
var
àà 
entry
àà 
=
àà 
	m_Entries
àà %
[
àà% &
i
àà& '
]
àà' (
;
àà( )
if
ââ 
(
ââ 
value
ââ 
>=
ââ 
entry
ââ "
.
ââ" #
intervalStart
ââ# 0
&&
ââ1 3
value
ââ4 9
<
ââ: ;
entry
ââ< A
.
ââA B
intervalEnd
ââB M
)
ââM N
{
ää 
results
ãã 
.
ãã 
Add
ãã 
(
ãã  
entry
ãã  %
.
ãã% &
item
ãã& *
)
ãã* +
;
ãã+ ,
}
åå 
}
çç 
if
èè 
(
èè 
intervalTreeNode
èè  
.
èè  !
center
èè! '
==
èè( *
kCenterUnknown
èè+ 9
)
èè9 :
return
êê 
;
êê 
if
ëë 
(
ëë 
intervalTreeNode
ëë  
.
ëë  !
left
ëë! %
!=
ëë& (
kInvalidNode
ëë) 5
&&
ëë6 8
value
ëë9 >
<
ëë? @
intervalTreeNode
ëëA Q
.
ëëQ R
center
ëëR X
)
ëëX Y
Query
íí 
(
íí 
m_Nodes
íí 
[
íí 
intervalTreeNode
íí .
.
íí. /
left
íí/ 3
]
íí3 4
,
íí4 5
value
íí6 ;
,
íí; <
results
íí= D
)
ííD E
;
ííE F
if
ìì 
(
ìì 
intervalTreeNode
ìì  
.
ìì  !
right
ìì! &
!=
ìì' )
kInvalidNode
ìì* 6
&&
ìì7 9
value
ìì: ?
>
ìì@ A
intervalTreeNode
ììB R
.
ììR S
center
ììS Y
)
ììY Z
Query
îî 
(
îî 
m_Nodes
îî 
[
îî 
intervalTreeNode
îî .
.
îî. /
right
îî/ 4
]
îî4 5
,
îî5 6
value
îî7 <
,
îî< =
results
îî> E
)
îîE F
;
îîF G
}
ïï 	
private
óó 
void
óó 

QueryRange
óó 
(
óó  
IntervalTreeNode
óó  0
intervalTreeNode
óó1 A
,
óóA B
Int64
óóC H
start
óóI N
,
óóN O
Int64
óóP U
end
óóV Y
,
óóY Z
List
óó[ _
<
óó_ `
T
óó` a
>
óóa b
results
óóc j
)
óój k
{
òò 	
for
ôô 
(
ôô 
int
ôô 
i
ôô 
=
ôô 
intervalTreeNode
ôô )
.
ôô) *
first
ôô* /
;
ôô/ 0
i
ôô1 2
<=
ôô3 5
intervalTreeNode
ôô6 F
.
ôôF G
last
ôôG K
;
ôôK L
i
ôôM N
++
ôôN P
)
ôôP Q
{
öö 
var
õõ 
entry
õõ 
=
õõ 
	m_Entries
õõ %
[
õõ% &
i
õõ& '
]
õõ' (
;
õõ( )
if
úú 
(
úú 
end
úú 
>=
úú 
entry
úú  
.
úú  !
intervalStart
úú! .
&&
úú/ 1
start
úú2 7
<
úú8 9
entry
úú: ?
.
úú? @
intervalEnd
úú@ K
)
úúK L
{
ùù 
results
ûû 
.
ûû 
Add
ûû 
(
ûû  
entry
ûû  %
.
ûû% &
item
ûû& *
)
ûû* +
;
ûû+ ,
}
üü 
}
†† 
if
¢¢ 
(
¢¢ 
intervalTreeNode
¢¢  
.
¢¢  !
center
¢¢! '
==
¢¢( *
kCenterUnknown
¢¢+ 9
)
¢¢9 :
return
££ 
;
££ 
if
§§ 
(
§§ 
intervalTreeNode
§§  
.
§§  !
left
§§! %
!=
§§& (
kInvalidNode
§§) 5
&&
§§6 8
start
§§9 >
<
§§? @
intervalTreeNode
§§A Q
.
§§Q R
center
§§R X
)
§§X Y

QueryRange
•• 
(
•• 
m_Nodes
•• "
[
••" #
intervalTreeNode
••# 3
.
••3 4
left
••4 8
]
••8 9
,
••9 :
start
••; @
,
••@ A
end
••B E
,
••E F
results
••G N
)
••N O
;
••O P
if
¶¶ 
(
¶¶ 
intervalTreeNode
¶¶  
.
¶¶  !
right
¶¶! &
!=
¶¶' )
kInvalidNode
¶¶* 6
&&
¶¶7 9
end
¶¶: =
>
¶¶> ?
intervalTreeNode
¶¶@ P
.
¶¶P Q
center
¶¶Q W
)
¶¶W X

QueryRange
ßß 
(
ßß 
m_Nodes
ßß "
[
ßß" #
intervalTreeNode
ßß# 3
.
ßß3 4
right
ßß4 9
]
ßß9 :
,
ßß: ;
start
ßß< A
,
ßßA B
end
ßßC F
,
ßßF G
results
ßßH O
)
ßßO P
;
ßßP Q
}
®® 	
private
™™ 
void
™™ 
Rebuild
™™ 
(
™™ 
)
™™ 
{
´´ 	
m_Nodes
¨¨ 
.
¨¨ 
Clear
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
m_Nodes
≠≠ 
.
≠≠ 
Capacity
≠≠ 
=
≠≠ 
	m_Entries
≠≠ (
.
≠≠( )
Capacity
≠≠) 1
;
≠≠1 2
Rebuild
ÆÆ 
(
ÆÆ 
$num
ÆÆ 
,
ÆÆ 
	m_Entries
ÆÆ  
.
ÆÆ  !
Count
ÆÆ! &
-
ÆÆ' (
$num
ÆÆ) *
)
ÆÆ* +
;
ÆÆ+ ,
}
ØØ 	
private
±± 
int
±± 
Rebuild
±± 
(
±± 
int
±± 
start
±±  %
,
±±% &
int
±±' *
end
±±+ .
)
±±. /
{
≤≤ 	
IntervalTreeNode
≥≥ 
intervalTreeNode
≥≥ -
=
≥≥. /
new
≥≥0 3
IntervalTreeNode
≥≥4 D
(
≥≥D E
)
≥≥E F
;
≥≥F G
int
∂∂ 
count
∂∂ 
=
∂∂ 
end
∂∂ 
-
∂∂ 
start
∂∂ #
+
∂∂$ %
$num
∂∂& '
;
∂∂' (
if
∑∑ 
(
∑∑ 
count
∑∑ 
<
∑∑ 
kMinNodeSize
∑∑ $
)
∑∑$ %
{
∏∏ 
intervalTreeNode
ππ  
=
ππ! "
new
ππ# &
IntervalTreeNode
ππ' 7
(
ππ7 8
)
ππ8 9
{
ππ: ;
center
ππ; A
=
ππB C
kCenterUnknown
ππD R
,
ππR S
first
ππT Y
=
ππZ [
start
ππ\ a
,
ππa b
last
ππc g
=
ππh i
end
ππj m
,
ππm n
left
ππo s
=
ππt u
kInvalidNodeππv Ç
,ππÇ É
rightππÑ â
=ππä ã
kInvalidNodeππå ò
}ππò ô
;ππô ö
m_Nodes
∫∫ 
.
∫∫ 
Add
∫∫ 
(
∫∫ 
intervalTreeNode
∫∫ ,
)
∫∫, -
;
∫∫- .
return
ªª 
m_Nodes
ªª 
.
ªª 
Count
ªª $
-
ªª% &
$num
ªª' (
;
ªª( )
}
ºº 
var
ææ 
min
ææ 
=
ææ 
Int64
ææ 
.
ææ 
MaxValue
ææ $
;
ææ$ %
var
øø 
max
øø 
=
øø 
Int64
øø 
.
øø 
MinValue
øø $
;
øø$ %
for
¡¡ 
(
¡¡ 
int
¡¡ 
i
¡¡ 
=
¡¡ 
start
¡¡ 
;
¡¡ 
i
¡¡  !
<=
¡¡" $
end
¡¡% (
;
¡¡( )
i
¡¡* +
++
¡¡+ -
)
¡¡- .
{
¬¬ 
var
√√ 
o
√√ 
=
√√ 
	m_Entries
√√ !
[
√√! "
i
√√" #
]
√√# $
;
√√$ %
min
ƒƒ 
=
ƒƒ 
Math
ƒƒ 
.
ƒƒ 
Min
ƒƒ 
(
ƒƒ 
min
ƒƒ "
,
ƒƒ" #
o
ƒƒ$ %
.
ƒƒ% &
intervalStart
ƒƒ& 3
)
ƒƒ3 4
;
ƒƒ4 5
max
≈≈ 
=
≈≈ 
Math
≈≈ 
.
≈≈ 
Max
≈≈ 
(
≈≈ 
max
≈≈ "
,
≈≈" #
o
≈≈$ %
.
≈≈% &
intervalEnd
≈≈& 1
)
≈≈1 2
;
≈≈2 3
}
∆∆ 
var
»» 
center
»» 
=
»» 
(
»» 
max
»» 
+
»» 
min
»»  #
)
»»# $
/
»»% &
$num
»»' (
;
»»( )
intervalTreeNode
…… 
.
…… 
center
…… #
=
……$ %
center
……& ,
;
……, -
int
ÃÃ 
x
ÃÃ 
=
ÃÃ 
start
ÃÃ 
;
ÃÃ 
int
ÕÕ 
y
ÕÕ 
=
ÕÕ 
end
ÕÕ 
;
ÕÕ 
while
ŒŒ 
(
ŒŒ 
true
ŒŒ 
)
ŒŒ 
{
œœ 
while
–– 
(
–– 
x
–– 
<=
–– 
end
–– 
&&
––  "
	m_Entries
––# ,
[
––, -
x
––- .
]
––. /
.
––/ 0
intervalEnd
––0 ;
<
––< =
center
––> D
)
––D E
x
—— 
++
—— 
;
—— 
while
”” 
(
”” 
y
”” 
>=
”” 
start
”” !
&&
””" $
	m_Entries
””% .
[
””. /
y
””/ 0
]
””0 1
.
””1 2
intervalEnd
””2 =
>=
””> @
center
””A G
)
””G H
y
‘‘ 
--
‘‘ 
;
‘‘ 
if
÷÷ 
(
÷÷ 
x
÷÷ 
>
÷÷ 
y
÷÷ 
)
÷÷ 
break
◊◊ 
;
◊◊ 
var
ŸŸ 
nodeX
ŸŸ 
=
ŸŸ 
	m_Entries
ŸŸ %
[
ŸŸ% &
x
ŸŸ& '
]
ŸŸ' (
;
ŸŸ( )
var
⁄⁄ 
nodeY
⁄⁄ 
=
⁄⁄ 
	m_Entries
⁄⁄ %
[
⁄⁄% &
y
⁄⁄& '
]
⁄⁄' (
;
⁄⁄( )
	m_Entries
‹‹ 
[
‹‹ 
y
‹‹ 
]
‹‹ 
=
‹‹ 
nodeX
‹‹ $
;
‹‹$ %
	m_Entries
›› 
[
›› 
x
›› 
]
›› 
=
›› 
nodeY
›› $
;
››$ %
}
ﬁﬁ 
intervalTreeNode
‡‡ 
.
‡‡ 
first
‡‡ "
=
‡‡# $
x
‡‡% &
;
‡‡& '
y
„„ 
=
„„ 
end
„„ 
;
„„ 
while
‰‰ 
(
‰‰ 
true
‰‰ 
)
‰‰ 
{
ÂÂ 
while
ÊÊ 
(
ÊÊ 
x
ÊÊ 
<=
ÊÊ 
end
ÊÊ 
&&
ÊÊ  "
	m_Entries
ÊÊ# ,
[
ÊÊ, -
x
ÊÊ- .
]
ÊÊ. /
.
ÊÊ/ 0
intervalStart
ÊÊ0 =
<=
ÊÊ> @
center
ÊÊA G
)
ÊÊG H
x
ÁÁ 
++
ÁÁ 
;
ÁÁ 
while
ÈÈ 
(
ÈÈ 
y
ÈÈ 
>=
ÈÈ 
start
ÈÈ !
&&
ÈÈ" $
	m_Entries
ÈÈ% .
[
ÈÈ. /
y
ÈÈ/ 0
]
ÈÈ0 1
.
ÈÈ1 2
intervalStart
ÈÈ2 ?
>
ÈÈ@ A
center
ÈÈB H
)
ÈÈH I
y
ÍÍ 
--
ÍÍ 
;
ÍÍ 
if
ÏÏ 
(
ÏÏ 
x
ÏÏ 
>
ÏÏ 
y
ÏÏ 
)
ÏÏ 
break
ÌÌ 
;
ÌÌ 
var
ÔÔ 
nodeX
ÔÔ 
=
ÔÔ 
	m_Entries
ÔÔ %
[
ÔÔ% &
x
ÔÔ& '
]
ÔÔ' (
;
ÔÔ( )
var
 
nodeY
 
=
 
	m_Entries
 %
[
% &
y
& '
]
' (
;
( )
	m_Entries
ÚÚ 
[
ÚÚ 
y
ÚÚ 
]
ÚÚ 
=
ÚÚ 
nodeX
ÚÚ $
;
ÚÚ$ %
	m_Entries
ÛÛ 
[
ÛÛ 
x
ÛÛ 
]
ÛÛ 
=
ÛÛ 
nodeY
ÛÛ $
;
ÛÛ$ %
}
ÙÙ 
intervalTreeNode
ˆˆ 
.
ˆˆ 
last
ˆˆ !
=
ˆˆ" #
y
ˆˆ$ %
;
ˆˆ% &
m_Nodes
˘˘ 
.
˘˘ 
Add
˘˘ 
(
˘˘ 
new
˘˘ 
IntervalTreeNode
˘˘ ,
(
˘˘, -
)
˘˘- .
)
˘˘. /
;
˘˘/ 0
int
˙˙ 
index
˙˙ 
=
˙˙ 
m_Nodes
˙˙ 
.
˙˙  
Count
˙˙  %
-
˙˙& '
$num
˙˙( )
;
˙˙) *
intervalTreeNode
¸¸ 
.
¸¸ 
left
¸¸ !
=
¸¸" #
kInvalidNode
¸¸$ 0
;
¸¸0 1
intervalTreeNode
˝˝ 
.
˝˝ 
right
˝˝ "
=
˝˝# $
kInvalidNode
˝˝% 1
;
˝˝1 2
if
ˇˇ 
(
ˇˇ 
start
ˇˇ 
<
ˇˇ 
intervalTreeNode
ˇˇ (
.
ˇˇ( )
first
ˇˇ) .
)
ˇˇ. /
intervalTreeNode
ÄÄ  
.
ÄÄ  !
left
ÄÄ! %
=
ÄÄ& '
Rebuild
ÄÄ( /
(
ÄÄ/ 0
start
ÄÄ0 5
,
ÄÄ5 6
intervalTreeNode
ÄÄ7 G
.
ÄÄG H
first
ÄÄH M
-
ÄÄN O
$num
ÄÄP Q
)
ÄÄQ R
;
ÄÄR S
if
ÇÇ 
(
ÇÇ 
end
ÇÇ 
>
ÇÇ 
intervalTreeNode
ÇÇ &
.
ÇÇ& '
last
ÇÇ' +
)
ÇÇ+ ,
intervalTreeNode
ÉÉ  
.
ÉÉ  !
right
ÉÉ! &
=
ÉÉ' (
Rebuild
ÉÉ) 0
(
ÉÉ0 1
intervalTreeNode
ÉÉ1 A
.
ÉÉA B
last
ÉÉB F
+
ÉÉG H
$num
ÉÉI J
,
ÉÉJ K
end
ÉÉL O
)
ÉÉO P
;
ÉÉP Q
m_Nodes
ÖÖ 
[
ÖÖ 
index
ÖÖ 
]
ÖÖ 
=
ÖÖ 
intervalTreeNode
ÖÖ -
;
ÖÖ- .
return
ÜÜ 
index
ÜÜ 
;
ÜÜ 
}
áá 	
public
ââ 
void
ââ 
Clear
ââ 
(
ââ 
)
ââ 
{
ää 	
	m_Entries
ãã 
.
ãã 
Clear
ãã 
(
ãã 
)
ãã 
;
ãã 
m_Nodes
åå 
.
åå 
Clear
åå 
(
åå 
)
åå 
;
åå 
}
çç 	
}
éé 
}èè ∫
ïD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Playables\NotificationFlags.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[		 
Flags		 

]		
 
[

 
Serializable

 
]

 
public 

enum 
NotificationFlags !
:" #
short$ )
{ 
TriggerInEditMode 
= 
$num 
<<  
$num! "
," #
Retroactive 
= 
$num 
<< 
$num 
, 
TriggerOnce 
= 
$num 
<< 
$num 
, 
} 
} «
åD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Events\SignalTrack.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[ 
Serializable 
] 
[ 
TrackBindingType 
( 
typeof 
( 
SignalReceiver +
)+ ,
), -
]- .
[ 

TrackColor 
( 
$num 
, 
$num 
, 
$num #
)# $
]$ %
[ 
ExcludeFromPreset 
] 
public 

class 
SignalTrack 
: 
MarkerTrack *
{+ ,
}, -
} ù>
åD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\TimelineAttributes.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[		 
AttributeUsage		 
(		 
AttributeTargets		 $
.		$ %
Class		% *
,		* +
AllowMultiple		, 9
=		: ;
true		< @
)		@ A
]		A B
public

 

class

 "
TrackClipTypeAttribute

 '
:

( )
	Attribute

* 3
{ 
public 
readonly 
Type 
inspectedType *
;* +
public 
readonly 
bool 
allowAutoCreate ,
;, -
public "
TrackClipTypeAttribute %
(% &
Type& *
	clipClass+ 4
)4 5
{ 	
inspectedType 
= 
	clipClass %
;% &
allowAutoCreate 
= 
true "
;" #
} 	
public$$ "
TrackClipTypeAttribute$$ %
($$% &
Type$$& *
	clipClass$$+ 4
,$$4 5
bool$$6 :
allowAutoCreate$$; J
)$$J K
{%% 	
inspectedType&& 
=&& 
	clipClass&& %
;&&% &
allowAutoCreate'' 
='' 
false'' #
;''# $
}(( 	
})) 
[.. 
AttributeUsage.. 
(.. 
AttributeTargets.. $
...$ %
Field..% *
|..+ ,
AttributeTargets..- =
...= >
Class..> C
)..C D
]..D E
public// 

class// 
NotKeyableAttribute// $
://% &
	Attribute//' 0
{00 
}11 
[77 
Flags77 

]77
 
public88 

enum88 
TrackBindingFlags88 !
{99 
None== 
=== 
$num== 
,==  
AllowCreateComponentBB 
=BB 
$numBB  
,BB  !
AllGG 
=GG  
AllowCreateComponentGG "
}HH 
[SS 
AttributeUsageSS 
(SS 
AttributeTargetsSS $
.SS$ %
ClassSS% *
)SS* +
]SS+ ,
publicTT 

classTT %
TrackBindingTypeAttributeTT *
:TT+ ,
	AttributeTT- 6
{UU 
publicYY 
readonlyYY 
TypeYY 
typeYY !
;YY! "
public^^ 
readonly^^ 
TrackBindingFlags^^ )
flags^^* /
;^^/ 0
publicdd %
TrackBindingTypeAttributedd (
(dd( )
Typedd) -
typedd. 2
)dd2 3
{ee 	
thisff 
.ff 
typeff 
=ff 
typeff 
;ff 
thisgg 
.gg 
flagsgg 
=gg 
TrackBindingFlagsgg *
.gg* +
Allgg+ .
;gg. /
}hh 	
publicoo %
TrackBindingTypeAttributeoo (
(oo( )
Typeoo) -
typeoo. 2
,oo2 3
TrackBindingFlagsoo4 E
flagsooF K
)ooK L
{pp 	
thisqq 
.qq 
typeqq 
=qq 
typeqq 
;qq 
thisrr 
.rr 
flagsrr 
=rr 
flagsrr 
;rr 
}ss 	
}tt 
[xx 
AttributeUsagexx 
(xx 
AttributeTargetsxx $
.xx$ %
Classxx% *
,xx* +
	Inheritedxx, 5
=xx6 7
falsexx8 =
)xx= >
]xx> ?
classyy 	(
SupportsChildTracksAttributeyy
 &
:yy' (
	Attributeyy) 2
{zz 
public{{ 
readonly{{ 
Type{{ 
	childType{{ &
;{{& '
public|| 
readonly|| 
int|| 
levels|| "
;||" #
public~~ (
SupportsChildTracksAttribute~~ +
(~~+ ,
Type~~, 0
	childType~~1 :
=~~; <
null~~= A
,~~A B
int~~C F
levels~~G M
=~~N O
Int32~~P U
.~~U V
MaxValue~~V ^
)~~^ _
{ 	
this
ÄÄ 
.
ÄÄ 
	childType
ÄÄ 
=
ÄÄ 
	childType
ÄÄ &
;
ÄÄ& '
this
ÅÅ 
.
ÅÅ 
levels
ÅÅ 
=
ÅÅ 
levels
ÅÅ  
;
ÅÅ  !
}
ÇÇ 	
}
ÉÉ 
[
ÜÜ 
AttributeUsage
ÜÜ 
(
ÜÜ 
AttributeTargets
ÜÜ $
.
ÜÜ$ %
Class
ÜÜ% *
,
ÜÜ* +
AllowMultiple
ÜÜ, 9
=
ÜÜ: ;
false
ÜÜ< A
,
ÜÜA B
	Inherited
ÜÜC L
=
ÜÜM N
true
ÜÜO S
)
ÜÜS T
]
ÜÜT U
class
áá 	,
IgnoreOnPlayableTrackAttribute
áá
 (
:
áá) *
System
áá+ 1
.
áá1 2
	Attribute
áá2 ;
{
áá< =
}
áá= >
class
ää 	 
TimeFieldAttribute
ää
 
:
ää 
PropertyAttribute
ää 0
{
ãã 
public
åå 
enum
åå 
UseEditMode
åå 
{
çç 	
None
éé 
,
éé 
ApplyEditMode
èè 
}
êê 	
public
ëë 
UseEditMode
ëë 
useEditMode
ëë &
{
ëë' (
get
ëë) ,
;
ëë, -
}
ëë. /
public
ìì  
TimeFieldAttribute
ìì !
(
ìì! "
UseEditMode
ìì" -
useEditMode
ìì. 9
=
ìì: ;
UseEditMode
ìì< G
.
ììG H
ApplyEditMode
ììH U
)
ììU V
{
îî 	
this
ïï 
.
ïï 
useEditMode
ïï 
=
ïï 
useEditMode
ïï *
;
ïï* +
}
ññ 	
}
óó 
[
úú 
AttributeUsage
úú 
(
úú 
AttributeTargets
úú $
.
úú$ %
Class
úú% *
,
úú* +
	Inherited
úú, 5
=
úú6 7
false
úú8 =
)
úú= >
]
úú> ?
public
ùù 

class
ùù !
HideInMenuAttribute
ùù $
:
ùù% &
	Attribute
ùù' 0
{
ùù1 2
}
ùù2 3
[
¬¬ 
AttributeUsage
¬¬ 
(
¬¬ 
AttributeTargets
¬¬ $
.
¬¬$ %
Class
¬¬% *
)
¬¬* +
]
¬¬+ ,
public
√√ 

class
√√ "
CustomStyleAttribute
√√ %
:
√√& '
	Attribute
√√( 1
{
ƒƒ 
public
»» 
readonly
»» 
string
»» 
ussStyle
»» '
;
»»' (
public
ŒŒ "
CustomStyleAttribute
ŒŒ #
(
ŒŒ# $
string
ŒŒ$ *
ussStyle
ŒŒ+ 3
)
ŒŒ3 4
{
œœ 	
this
–– 
.
–– 
ussStyle
–– 
=
–– 
ussStyle
–– $
;
––$ %
}
—— 	
}
““ 
[
◊◊ 
AttributeUsage
◊◊ 
(
◊◊ 
AttributeTargets
◊◊ $
.
◊◊$ %
Class
◊◊% *
)
◊◊* +
]
◊◊+ ,
internal
ÿÿ 
class
ÿÿ #
MenuCategoryAttribute
ÿÿ (
:
ÿÿ) *
	Attribute
ÿÿ+ 4
{
ŸŸ 
public
›› 
readonly
›› 
string
›› 
category
›› '
;
››' (
public
ﬂﬂ #
MenuCategoryAttribute
ﬂﬂ $
(
ﬂﬂ$ %
string
ﬂﬂ% +
category
ﬂﬂ, 4
)
ﬂﬂ4 5
{
‡‡ 	
this
·· 
.
·· 
category
·· 
=
·· 
category
·· $
??
··% '
string
··( .
.
··. /
Empty
··/ 4
;
··4 5
}
‚‚ 	
}
„„ 
}‰‰ ∫1
éD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Control\ControlTrack.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[

 
TrackClipType

 
(

 
typeof

 
(

  
ControlPlayableAsset

 .
)

. /
,

/ 0
false

1 6
)

6 7
]

7 8
[ 
ExcludeFromPreset 
] 
public 

class 
ControlTrack 
: 

TrackAsset  *
{ 
private 
static 
readonly 
HashSet  '
<' (
PlayableDirector( 8
>8 9 
s_ProcessedDirectors: N
=O P
newQ T
HashSetU \
<\ ]
PlayableDirector] m
>m n
(n o
)o p
;p q
public 
override 
void 
GatherProperties -
(- .
PlayableDirector. >
director? G
,G H
IPropertyCollectorI [
driver\ b
)b c
{ 	
if 
( 
director 
== 
null  
)  !
return 
; 
if 
(  
s_ProcessedDirectors $
.$ %
Contains% -
(- .
director. 6
)6 7
)7 8
return 
;  
s_ProcessedDirectors  
.  !
Add! $
($ %
director% -
)- .
;. /
var 
particlesToPreview "
=# $
new% (
HashSet) 0
<0 1
ParticleSystem1 ?
>? @
(@ A
)A B
;B C
var 
activationToPreview #
=$ %
new& )
HashSet* 1
<1 2

GameObject2 <
>< =
(= >
)> ?
;? @
var  
timeControlToPreview $
=% &
new' *
HashSet+ 2
<2 3
MonoBehaviour3 @
>@ A
(A B
)B C
;C D
var   !
subDirectorsToPreview   %
=  & '
new  ( +
HashSet  , 3
<  3 4
PlayableDirector  4 D
>  D E
(  E F
)  F G
;  G H
foreach"" 
("" 
var"" 
clip"" 
in""  
GetClips""! )
("") *
)""* +
)""+ ,
{## 
var$$  
controlPlayableAsset$$ (
=$$) *
clip$$+ /
.$$/ 0
asset$$0 5
as$$6 8 
ControlPlayableAsset$$9 M
;$$M N
if%% 
(%%  
controlPlayableAsset%% (
==%%) +
null%%, 0
)%%0 1
continue&& 
;&& 
var(( 

gameObject(( 
=((   
controlPlayableAsset((! 5
.((5 6
sourceGameObject((6 F
.((F G
Resolve((G N
(((N O
director((O W
)((W X
;((X Y
if)) 
()) 

gameObject)) 
==)) !
null))" &
)))& '
continue** 
;** 
if,, 
(,,  
controlPlayableAsset,, (
.,,( )
updateParticle,,) 7
),,7 8
particlesToPreview-- &
.--& '
	UnionWith--' 0
(--0 1

gameObject--1 ;
.--; <#
GetComponentsInChildren--< S
<--S T
ParticleSystem--T b
>--b c
(--c d
true--d h
)--h i
)--i j
;--j k
if.. 
(..  
controlPlayableAsset.. (
...( )
active..) /
)../ 0
activationToPreview// '
.//' (
Add//( +
(//+ ,

gameObject//, 6
)//6 7
;//7 8
if00 
(00  
controlPlayableAsset00 (
.00( )
updateITimeControl00) ;
)00; < 
timeControlToPreview11 (
.11( )
	UnionWith11) 2
(112 3 
ControlPlayableAsset113 G
.11G H!
GetControlableScripts11H ]
(11] ^

gameObject11^ h
)11h i
)11i j
;11j k
if22 
(22  
controlPlayableAsset22 (
.22( )
updateDirector22) 7
)227 8!
subDirectorsToPreview33 )
.33) *
	UnionWith33* 3
(333 4 
controlPlayableAsset334 H
.33H I
GetComponent33I U
<33U V
PlayableDirector33V f
>33f g
(33g h

gameObject33h r
)33r s
)33s t
;33t u
}44  
ControlPlayableAsset66  
.66  !
PreviewParticles66! 1
(661 2
driver662 8
,668 9
particlesToPreview66: L
)66L M
;66M N 
ControlPlayableAsset77  
.77  !
PreviewActivation77! 2
(772 3
driver773 9
,779 :
activationToPreview77; N
)77N O
;77O P 
ControlPlayableAsset88  
.88  !
PreviewTimeControl88! 3
(883 4
driver884 :
,88: ;
director88< D
,88D E 
timeControlToPreview88F Z
)88Z [
;88[ \ 
ControlPlayableAsset99  
.99  !
PreviewDirectors99! 1
(991 2
driver992 8
,998 9!
subDirectorsToPreview99: O
)99O P
;99P Q 
s_ProcessedDirectors;;  
.;;  !
Remove;;! '
(;;' (
director;;( 0
);;0 1
;;;1 2
particlesToPreview== 
.== 
Clear== $
(==$ %
)==% &
;==& '
activationToPreview>> 
.>>  
Clear>>  %
(>>% &
)>>& '
;>>' ( 
timeControlToPreview??  
.??  !
Clear??! &
(??& '
)??' (
;??( )!
subDirectorsToPreview@@ !
.@@! "
Clear@@" '
(@@' (
)@@( )
;@@) *
}AA 	
}DD 
}EE å!
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Audio\AudioMixerProperties.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[ 
Serializable 
] 
class 	 
AudioMixerProperties
 
:  
PlayableBehaviour! 2
{		 
[

 	
Range

	 
(

 
$num

 
,

 
$num

 
)

 
]

 
public 
float 
volume 
= 
$num "
;" #
[ 	
Range	 
( 
- 
$num 
, 
$num 
) 
] 
public 
float 
	stereoPan 
=  
$num! %
;% &
[ 	
Range	 
( 
$num 
, 
$num 
) 
] 
public 
float 
spatialBlend !
=" #
$num$ (
;( )
public 
override 
void 
PrepareFrame )
() *
Playable* 2
playable3 ;
,; <
	FrameData= F
infoG K
)K L
{ 	
if 
( 
! 
playable 
. 
IsValid !
(! "
)" #
||$ &
!' (
playable( 0
.0 1
IsPlayableOfType1 A
<A B
AudioMixerPlayableB T
>T U
(U V
)V W
)W X
return 
; 
var 

inputCount 
= 
playable %
.% &
GetInputCount& 3
(3 4
)4 5
;5 6
for 
( 
int 
i 
= 
$num 
; 
i 
< 

inputCount  *
;* +
++, .
i. /
)/ 0
{ 
if 
( 
playable 
. 
GetInputWeight +
(+ ,
i, -
)- .
>/ 0
$num1 5
)5 6
{ 
var 
input 
= 
playable  (
.( )
GetInput) 1
(1 2
i2 3
)3 4
;4 5
if   
(   
input   
.   
IsValid   %
(  % &
)  & '
&&  ( *
input  + 0
.  0 1
IsPlayableOfType  1 A
<  A B
AudioClipPlayable  B S
>  S T
(  T U
)  U V
)  V W
{!! 
var"" 
audioClipPlayable"" -
="". /
(""0 1
AudioClipPlayable""1 B
)""B C
input""C H
;""H I
var## 
audioClipProperties## /
=##0 1
input##2 7
.##7 8
	GetHandle##8 A
(##A B
)##B C
.##C D
	GetObject##D M
<##M N
AudioClipProperties##N a
>##a b
(##b c
)##c d
;##d e
audioClipPlayable%% )
.%%) *
	SetVolume%%* 3
(%%3 4
Mathf%%4 9
.%%9 :
Clamp01%%: A
(%%A B
volume%%B H
*%%I J
audioClipProperties%%K ^
.%%^ _
volume%%_ e
)%%e f
)%%f g
;%%g h
audioClipPlayable&& )
.&&) *
SetStereoPan&&* 6
(&&6 7
Mathf&&7 <
.&&< =
Clamp&&= B
(&&B C
	stereoPan&&C L
,&&L M
-&&N O
$num&&O S
,&&S T
$num&&U Y
)&&Y Z
)&&Z [
;&&[ \
audioClipPlayable'' )
.'') *
SetSpatialBlend''* 9
(''9 :
Mathf'': ?
.''? @
Clamp01''@ G
(''G H
spatialBlend''H T
)''T U
)''U V
;''V W
}(( 
})) 
}** 
}++ 	
},, 
}-- ›>
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\AssetUpgrade\AnimationTrackUpgrade.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
partial 
class 
AnimationTrack  
{ 
[ 	
SerializeField	 
, 
Obsolete !
(! "
$str" O
,O P
falseQ V
)V W
,W X
HideInInspectorY h
]h i

Quaternion $
m_OpenClipOffsetRotation +
=, -

Quaternion. 8
.8 9
identity9 A
;A B
[ 	
SerializeField	 
, 
Obsolete !
(! "
$str" ?
,? @
falseA F
)F G
,G H
HideInInspectorI X
]X Y

Quaternion 

m_Rotation 
= 

Quaternion  *
.* +
identity+ 3
;3 4
[ 	
SerializeField	 
, 
Obsolete !
(! "
$str" A
,A B
falseC H
)H I
,I J
HideInInspectorK Z
]Z [
bool 
m_ApplyOffsets 
; 
[ 	
EditorBrowsable	 
(  
EditorBrowsableState -
.- .
Never. 3
)3 4
]4 5
[ 	
Obsolete	 
( 
$str	 ó
,
ó ò
true
ô ù
)
ù û
]
û ü
public 
Vector3 "
openClipOffsetPosition -
{ 	
get 
{ 
return &
infiniteClipOffsetPosition 3
;3 4
}5 6
set 
{ &
infiniteClipOffsetPosition ,
=- .
value/ 4
;4 5
}6 7
} 	
[ 	
EditorBrowsable	 
(  
EditorBrowsableState -
.- .
Never. 3
)3 4
]4 5
[ 	
Obsolete	 
( 
$str	 ó
,
ó ò
true
ô ù
)
ù û
]
û ü
public 

Quaternion "
openClipOffsetRotation 0
{   	
get!! 
{!! 
return!! &
infiniteClipOffsetRotation!! 3
;!!3 4
}!!5 6
set"" 
{"" &
infiniteClipOffsetRotation"" ,
=""- .
value""/ 4
;""4 5
}""6 7
}## 	
[%% 	
EditorBrowsable%%	 
(%%  
EditorBrowsableState%% -
.%%- .
Never%%. 3
)%%3 4
]%%4 5
[&& 	
Obsolete&&	 
(&& 
$str	&& †
,
&&† °
true
&&¢ ¶
)
&&¶ ß
]
&&ß ®
public'' 
Vector3'' %
openClipOffsetEulerAngles'' 0
{(( 	
get)) 
{)) 
return)) )
infiniteClipOffsetEulerAngles)) 6
;))6 7
}))8 9
set** 
{** )
infiniteClipOffsetEulerAngles** /
=**0 1
value**2 7
;**7 8
}**9 :
}++ 	
[-- 	
EditorBrowsable--	 
(--  
EditorBrowsableState-- -
.--- .
Never--. 3
)--3 4
]--4 5
[.. 	
Obsolete..	 
(.. 
$str	.. ù
,
..ù û
true
..ü £
)
..£ §
]
..§ •
public// 
TimelineClip// 
.// 
ClipExtrapolation// -$
openClipPreExtrapolation//. F
{00 	
get11 
{11 
return11 (
infiniteClipPreExtrapolation11 5
;115 6
}117 8
set22 
{22 (
infiniteClipPreExtrapolation22 .
=22/ 0
value221 6
;226 7
}228 9
}33 	
[55 	
EditorBrowsable55	 
(55  
EditorBrowsableState55 -
.55- .
Never55. 3
)553 4
]554 5
[66 	
Obsolete66	 
(66 
$str	66 †
,
66† °
true
66¢ ¶
)
66¶ ß
]
66ß ®
public77 
TimelineClip77 
.77 
ClipExtrapolation77 -%
openClipPostExtrapolation77. G
{88 	
get99 
{99 
return99 )
infiniteClipPostExtrapolation99 6
;996 7
}998 9
set:: 
{:: )
infiniteClipPostExtrapolation:: /
=::0 1
value::2 7
;::7 8
}::9 :
};; 	
internal== 
override== 
void==  
OnUpgradeFromVersion== 3
(==3 4
int==4 7

oldVersion==8 B
)==B C
{>> 	
if?? 
(?? 

oldVersion?? 
<?? 
(?? 
int?? !
)??! "
Versions??" *
.??* +
RotationAsEuler??+ :
)??: ;!
AnimationTrackUpgrade@@ %
.@@% &#
ConvertRotationsToEuler@@& =
(@@= >
this@@> B
)@@B C
;@@C D
ifAA 
(AA 

oldVersionAA 
<AA 
(AA 
intAA !
)AA! "
VersionsAA" *
.AA* +
RootMotionUpgradeAA+ <
)AA< =!
AnimationTrackUpgradeBB %
.BB% &
ConvertRootMotionBB& 7
(BB7 8
thisBB8 <
)BB< =
;BB= >
ifCC 
(CC 

oldVersionCC 
<CC 
(CC 
intCC !
)CC! "
VersionsCC" *
.CC* +#
AnimatedTrackPropertiesCC+ B
)CCB C!
AnimationTrackUpgradeDD %
.DD% & 
ConvertInfiniteTrackDD& :
(DD: ;
thisDD; ?
)DD? @
;DD@ A
}EE 	
staticJJ 
classJJ !
AnimationTrackUpgradeJJ *
{KK 	
publicLL 
staticLL 
voidLL #
ConvertRotationsToEulerLL 6
(LL6 7
AnimationTrackLL7 E
trackLLF K
)LLK L
{MM 
trackNN 
.NN 
m_EulerAnglesNN #
=NN$ %
trackNN& +
.NN+ ,

m_RotationNN, 6
.NN6 7
eulerAnglesNN7 B
;NNB C
trackOO 
.OO +
m_InfiniteClipOffsetEulerAnglesOO 5
=OO6 7
trackOO8 =
.OO= >$
m_OpenClipOffsetRotationOO> V
.OOV W
eulerAnglesOOW b
;OOb c
}PP 
publicRR 
staticRR 
voidRR 
ConvertRootMotionRR 0
(RR0 1
AnimationTrackRR1 ?
trackRR@ E
)RRE F
{SS 
trackTT 
.TT 
m_TrackOffsetTT #
=TT$ %
TrackOffsetTT& 1
.TT1 2
AutoTT2 6
;TT6 7
ifWW 
(WW 
!WW 
trackWW 
.WW 
m_ApplyOffsetsWW )
)WW) *
{XX 
trackYY 
.YY 

m_PositionYY $
=YY% &
Vector3YY' .
.YY. /
zeroYY/ 3
;YY3 4
trackZZ 
.ZZ 
m_EulerAnglesZZ '
=ZZ( )
Vector3ZZ* 1
.ZZ1 2
zeroZZ2 6
;ZZ6 7
}[[ 
}\\ 
public^^ 
static^^ 
void^^  
ConvertInfiniteTrack^^ 3
(^^3 4
AnimationTrack^^4 B
track^^C H
)^^H I
{__ 
track`` 
.`` 
m_InfiniteClip`` $
=``% &
track``' ,
.``, -

m_AnimClip``- 7
;``7 8
trackaa 
.aa 

m_AnimClipaa  
=aa! "
nullaa# '
;aa' (
}bb 
}cc 	
}ee 
}ff ß3
ùD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Playables\ActivationControlPlayable.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
public 

class %
ActivationControlPlayable *
:+ ,
PlayableBehaviour- >
{		 
public 
enum 
PostPlaybackState %
{ 	
Active 
, 
Inactive 
, 
Revert 
} 	
enum 
InitialState 
{   	
Unset!! 
,!! 
Active"" 
,"" 
Inactive## 
}$$ 	
public)) 

GameObject)) 

gameObject)) $
=))% &
null))' +
;))+ ,
public,, 
PostPlaybackState,,  
postPlayback,,! -
=,,. /
PostPlaybackState,,0 A
.,,A B
Revert,,B H
;,,H I
InitialState-- 
m_InitialState-- #
;--# $
public66 
static66 
ScriptPlayable66 $
<66$ %%
ActivationControlPlayable66% >
>66> ?
Create66@ F
(66F G
PlayableGraph66G T
graph66U Z
,66Z [

GameObject66\ f

gameObject66g q
,66q r&
ActivationControlPlayable	66s å
.
66å ç
PostPlaybackState
66ç û
postPlaybackState
66ü ∞
)
66∞ ±
{77 	
if88 
(88 

gameObject88 
==88 
null88 "
)88" #
return99 
ScriptPlayable99 %
<99% &%
ActivationControlPlayable99& ?
>99? @
.99@ A
Null99A E
;99E F
var;; 
handle;; 
=;; 
ScriptPlayable;; '
<;;' (%
ActivationControlPlayable;;( A
>;;A B
.;;B C
Create;;C I
(;;I J
graph;;J O
);;O P
;;;P Q
var<< 
playable<< 
=<< 
handle<< !
.<<! "
GetBehaviour<<" .
(<<. /
)<</ 0
;<<0 1
playable== 
.== 

gameObject== 
===  !

gameObject==" ,
;==, -
playable>> 
.>> 
postPlayback>> !
=>>" #
postPlaybackState>>$ 5
;>>5 6
return@@ 
handle@@ 
;@@ 
}AA 	
publicHH 
overrideHH 
voidHH 
OnBehaviourPlayHH ,
(HH, -
PlayableHH- 5
playableHH6 >
,HH> ?
	FrameDataHH@ I
infoHHJ N
)HHN O
{II 	
ifJJ 
(JJ 

gameObjectJJ 
==JJ 
nullJJ "
)JJ" #
returnKK 
;KK 

gameObjectMM 
.MM 
	SetActiveMM  
(MM  !
trueMM! %
)MM% &
;MM& '
}NN 	
publicUU 
overrideUU 
voidUU 
OnBehaviourPauseUU -
(UU- .
PlayableUU. 6
playableUU7 ?
,UU? @
	FrameDataUUA J
infoUUK O
)UUO P
{VV 	
ifYY 
(YY 

gameObjectYY 
!=YY 
nullYY "
&&YY# %
infoYY& *
.YY* +
effectivePlayStateYY+ =
==YY> @
	PlayStateYYA J
.YYJ K
PausedYYK Q
)YYQ R
{ZZ 

gameObject[[ 
.[[ 
	SetActive[[ $
([[$ %
false[[% *
)[[* +
;[[+ ,
}\\ 
}]] 	
publicee 
overrideee 
voidee 
ProcessFrameee )
(ee) *
Playableee* 2
playableee3 ;
,ee; <
	FrameDataee= F
infoeeG K
,eeK L
objecteeM S
userDataeeT \
)ee\ ]
{ff 	
ifgg 
(gg 

gameObjectgg 
!=gg 
nullgg "
)gg" #

gameObjecthh 
.hh 
	SetActivehh $
(hh$ %
truehh% )
)hh) *
;hh* +
}ii 	
publicoo 
overrideoo 
voidoo 
OnGraphStartoo )
(oo) *
Playableoo* 2
playableoo3 ;
)oo; <
{pp 	
ifqq 
(qq 

gameObjectqq 
!=qq 
nullqq "
)qq" #
{rr 
ifss 
(ss 
m_InitialStatess "
==ss# %
InitialStatess& 2
.ss2 3
Unsetss3 8
)ss8 9
m_InitialStatett "
=tt# $

gameObjecttt% /
.tt/ 0

activeSelftt0 :
?tt; <
InitialStatett= I
.ttI J
ActivettJ P
:ttQ R
InitialStatettS _
.tt_ `
Inactivett` h
;tth i
}uu 
}vv 	
public|| 
override|| 
void|| 
OnPlayableDestroy|| .
(||. /
Playable||/ 7
playable||8 @
)||@ A
{}} 	
if~~ 
(~~ 

gameObject~~ 
==~~ 
null~~ "
||~~# %
m_InitialState~~& 4
==~~5 7
InitialState~~8 D
.~~D E
Unset~~E J
)~~J K
return 
; 
switch
ÅÅ 
(
ÅÅ 
postPlayback
ÅÅ  
)
ÅÅ  !
{
ÇÇ 
case
ÉÉ 
PostPlaybackState
ÉÉ &
.
ÉÉ& '
Active
ÉÉ' -
:
ÉÉ- .

gameObject
ÑÑ 
.
ÑÑ 
	SetActive
ÑÑ (
(
ÑÑ( )
true
ÑÑ) -
)
ÑÑ- .
;
ÑÑ. /
break
ÖÖ 
;
ÖÖ 
case
áá 
PostPlaybackState
áá &
.
áá& '
Inactive
áá' /
:
áá/ 0

gameObject
àà 
.
àà 
	SetActive
àà (
(
àà( )
false
àà) .
)
àà. /
;
àà/ 0
break
ââ 
;
ââ 
case
ãã 
PostPlaybackState
ãã &
.
ãã& '
Revert
ãã' -
:
ãã- .

gameObject
åå 
.
åå 
	SetActive
åå (
(
åå( )
m_InitialState
åå) 7
==
åå8 :
InitialState
åå; G
.
ååG H
Active
ååH N
)
ååN O
;
ååO P
break
çç 
;
çç 
}
éé 
}
èè 	
}
êê 
}ëë Ë
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Events\Signals\SignalEmitter.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
[ 
Serializable 
] 
[ 
CustomStyle 
( 
$str  
)  !
]! "
[ 
ExcludeFromPreset 
] 
public 

class 
SignalEmitter 
:  
Marker! '
,' (
INotification) 6
,6 7'
INotificationOptionProvider8 S
{ 
[ 	
SerializeField	 
] 
bool 
m_Retroactive +
;+ ,
[ 	
SerializeField	 
] 
bool 

m_EmitOnce (
;( )
[ 	
SerializeField	 
] 
SignalAsset $
m_Asset% ,
;, -
public 
bool 
retroactive 
{ 	
get 
{ 
return 
m_Retroactive &
;& '
}( )
set 
{ 
m_Retroactive 
=  !
value" '
;' (
}) *
} 	
public## 
bool## 
emitOnce## 
{$$ 	
get%% 
{%% 
return%% 

m_EmitOnce%% #
;%%# $
}%%% &
set&& 
{&& 

m_EmitOnce&& 
=&& 
value&& $
;&&$ %
}&&& '
}'' 	
public,, 
SignalAsset,, 
asset,,  
{-- 	
get.. 
{.. 
return.. 
m_Asset..  
;..  !
}.." #
set// 
{// 
m_Asset// 
=// 
value// !
;//! "
}//# $
}00 	
PropertyName22 
INotification22 "
.22" #
id22# %
{33 	
get44 
{55 
if66 
(66 
m_Asset66 
!=66 
null66 #
)66# $
{77 
return88 
new88 
PropertyName88 +
(88+ ,
m_Asset88, 3
.883 4
name884 8
)888 9
;889 :
}99 
return:: 
new:: 
PropertyName:: '
(::' (
string::( .
.::. /
Empty::/ 4
)::4 5
;::5 6
};; 
}<< 	
NotificationFlags>> '
INotificationOptionProvider>> 5
.>>5 6
flags>>6 ;
{?? 	
get@@ 
{AA 
returnBB 
(BB 
retroactiveBB #
?BB$ %
NotificationFlagsBB& 7
.BB7 8
RetroactiveBB8 C
:BBD E
defaultBBF M
(BBM N
NotificationFlagsBBN _
)BB_ `
)BB` a
|BBb c
(CC 
emitOnceCC 
?CC 
NotificationFlagsCC  1
.CC1 2
TriggerOnceCC2 =
:CC> ?
defaultCC@ G
(CCG H
NotificationFlagsCCH Y
)CCY Z
)CCZ [
|CC\ ]
NotificationFlagsDD %
.DD% &
TriggerInEditModeDD& 7
;DD7 8
}EE 
}FF 	
}GG 
}HH Ú
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Playables\TimeControlPlayable.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
public 

class 
TimeControlPlayable $
:% &
PlayableBehaviour' 8
{		 
ITimeControl

 
m_timeControl

 "
;

" #
bool 
	m_started 
; 
public 
static 
ScriptPlayable $
<$ %
TimeControlPlayable% 8
>8 9
Create: @
(@ A
PlayableGraphA N
graphO T
,T U
ITimeControlV b
timeControlc n
)n o
{ 	
if 
( 
timeControl 
== 
null #
)# $
return 
ScriptPlayable %
<% &
TimeControlPlayable& 9
>9 :
.: ;
Null; ?
;? @
var 
handle 
= 
ScriptPlayable '
<' (
TimeControlPlayable( ;
>; <
.< =
Create= C
(C D
graphD I
)I J
;J K
handle 
. 
GetBehaviour 
(  
)  !
.! "

Initialize" ,
(, -
timeControl- 8
)8 9
;9 :
return 
handle 
; 
} 	
public"" 
void"" 

Initialize"" 
("" 
ITimeControl"" +
timeControl"", 7
)""7 8
{## 	
m_timeControl$$ 
=$$ 
timeControl$$ '
;$$' (
}%% 	
public,, 
override,, 
void,, 
PrepareFrame,, )
(,,) *
Playable,,* 2
playable,,3 ;
,,,; <
	FrameData,,= F
info,,G K
),,K L
{-- 	
Debug.. 
... 
Assert.. 
(.. 
	m_started.. "
,.." #
$str..$ q
)..q r
;..r s
if// 
(// 
m_timeControl// 
!=//  
null//! %
)//% &
m_timeControl00 
.00 
SetTime00 %
(00% &
playable00& .
.00. /
GetTime00/ 6
(006 7
)007 8
)008 9
;009 :
}11 	
public88 
override88 
void88 
OnBehaviourPlay88 ,
(88, -
Playable88- 5
playable886 >
,88> ?
	FrameData88@ I
info88J N
)88N O
{99 	
if:: 
(:: 
m_timeControl:: 
==::  
null::! %
)::% &
return;; 
;;; 
if== 
(== 
!== 
	m_started== 
)== 
{>> 
m_timeControl?? 
.?? 
OnControlTimeStart?? 0
(??0 1
)??1 2
;??2 3
	m_started@@ 
=@@ 
true@@  
;@@  !
}AA 
}BB 	
publicII 
overrideII 
voidII 
OnBehaviourPauseII -
(II- .
PlayableII. 6
playableII7 ?
,II? @
	FrameDataIIA J
infoIIK O
)IIO P
{JJ 	
ifKK 
(KK 
m_timeControlKK 
==KK  
nullKK! %
)KK% &
returnLL 
;LL 
ifNN 
(NN 
	m_startedNN 
)NN 
{OO 
m_timeControlPP 
.PP 
OnControlTimeStopPP /
(PP/ 0
)PP0 1
;PP1 2
	m_startedQQ 
=QQ 
falseQQ !
;QQ! "
}RR 
}SS 	
}TT 
}UU óC
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.timeline@1.4.4\Runtime\Utilities\Extrapolation.cs
	namespace 	
UnityEngine
 
. 
Timeline 
{ 
static 

class 
Extrapolation 
{ 
internal 
static 
readonly  
double! '!
kMinExtrapolationTime( =
=> ?
TimeUtility@ K
.K L
kTimeEpsilonL X
*Y Z
$num[ _
;_ `
internal 
static 
void '
CalculateExtrapolationTimes 8
(8 9
this9 =

TrackAsset> H
assetI N
)N O
{ 	
TimelineClip 
[ 
] 
clips  
=! "
asset# (
.( )
clips) .
;. /
if 
( 
clips 
== 
null 
||  
clips! &
.& '
Length' -
==. 0
$num1 2
)2 3
return 
; 
if 
( 
! 
clips 
[ 
$num 
] 
. !
SupportsExtrapolation /
(/ 0
)0 1
)1 2
return 
; 
var 
orderedClips 
=  
SortClipsByStartTime 3
(3 4
clips4 9
)9 :
;: ;
if 
( 
orderedClips 
. 
Length #
>$ %
$num& '
)' (
{ 
for 
( 
int 
i 
= 
$num 
; 
i  !
<" #
orderedClips$ 0
.0 1
Length1 7
;7 8
i9 :
++: <
)< =
{ 
double 
minTime "
=# $
double% +
.+ ,
PositiveInfinity, <
;< =
for   
(   
int   
j   
=    
$num  ! "
;  " #
j  $ %
<  & '
orderedClips  ( 4
.  4 5
Length  5 ;
;  ; <
j  = >
++  > @
)  @ A
{!! 
if"" 
("" 
i"" 
==""  
j""! "
)""" #
continue## $
;##$ %
double%% 
	deltaTime%% (
=%%) *
orderedClips%%+ 7
[%%7 8
j%%8 9
]%%9 :
.%%: ;
start%%; @
-%%A B
orderedClips%%C O
[%%O P
i%%P Q
]%%Q R
.%%R S
end%%S V
;%%V W
if&& 
(&& 
	deltaTime&& %
>=&&& (
-&&) *
TimeUtility&&* 5
.&&5 6
kTimeEpsilon&&6 B
&&&&C E
	deltaTime&&F O
<&&P Q
minTime&&R Y
)&&Y Z
minTime'' #
=''$ %
Math''& *
.''* +
Min''+ .
(''. /
minTime''/ 6
,''6 7
	deltaTime''8 A
)''A B
;''B C
if)) 
()) 
orderedClips)) (
[))( )
j))) *
]))* +
.))+ ,
start)), 1
<=))2 4
orderedClips))5 A
[))A B
i))B C
]))C D
.))D E
end))E H
&&))I K
orderedClips))L X
[))X Y
j))Y Z
]))Z [
.))[ \
end))\ _
>))` a
orderedClips))b n
[))n o
i))o p
]))p q
.))q r
end))r u
)))u v
minTime** #
=**$ %
$num**& '
;**' (
}++ 
minTime,, 
=,, 
minTime,, %
<=,,& (!
kMinExtrapolationTime,,) >
?,,? @
$num,,A B
:,,C D
minTime,,E L
;,,L M
orderedClips--  
[--  !
i--! "
]--" #
.--# $$
SetPostExtrapolationTime--$ <
(--< =
minTime--= D
)--D E
;--E F
}.. 
orderedClips11 
[11 
$num11 
]11 
.11  #
SetPreExtrapolationTime11  7
(117 8
Math118 <
.11< =
Max11= @
(11@ A
$num11A B
,11B C
orderedClips11D P
[11P Q
$num11Q R
]11R S
.11S T
start11T Y
)11Y Z
)11Z [
;11[ \
for22 
(22 
int22 
i22 
=22 
$num22 
;22 
i22  !
<22" #
orderedClips22$ 0
.220 1
Length221 7
;227 8
i229 :
++22: <
)22< =
{33 
double44 
preTime44 "
=44# $
$num44% &
;44& '
int55 
prevClip55  
=55! "
-55# $
$num55$ %
;55% &
for66 
(66 
int66 
j66 
=66  
$num66! "
;66" #
j66$ %
<66& '
i66( )
;66) *
j66+ ,
++66, .
)66. /
{77 
if99 
(99 
orderedClips99 (
[99( )
j99) *
]99* +
.99+ ,
end99, /
>990 1
orderedClips992 >
[99> ?
i99? @
]99@ A
.99A B
start99B G
)99G H
{:: 
prevClip;; $
=;;% &
-;;' (
$num;;( )
;;;) *
preTime<< #
=<<$ %
$num<<& '
;<<' (
break== !
;==! "
}>> 
double@@ 
gap@@ "
=@@# $
orderedClips@@% 1
[@@1 2
i@@2 3
]@@3 4
.@@4 5
start@@5 :
-@@; <
orderedClips@@= I
[@@I J
j@@J K
]@@K L
.@@L M
end@@M P
;@@P Q
ifAA 
(AA 
prevClipAA $
==AA% '
-AA( )
$numAA) *
||AA+ -
gapAA. 1
<AA2 3
preTimeAA4 ;
)AA; <
{BB 
preTimeCC #
=CC$ %
gapCC& )
;CC) *
prevClipDD $
=DD% &
jDD' (
;DD( )
}EE 
}FF 
ifHH 
(HH 
prevClipHH  
>=HH! #
$numHH$ %
)HH% &
{II 
ifJJ 
(JJ 
orderedClipsJJ (
[JJ( )
prevClipJJ) 1
]JJ1 2
.JJ2 3!
postExtrapolationModeJJ3 H
!=JJI K
TimelineClipJJL X
.JJX Y
ClipExtrapolationJJY j
.JJj k
NoneJJk o
)JJo p
preTimeKK #
=KK$ %
$numKK& '
;KK' (
}LL 
preTimeNN 
=NN 
preTimeNN %
<=NN& (!
kMinExtrapolationTimeNN) >
?NN? @
$numNNA B
:NNC D
preTimeNNE L
;NNL M
orderedClipsOO  
[OO  !
iOO! "
]OO" #
.OO# $#
SetPreExtrapolationTimeOO$ ;
(OO; <
preTimeOO< C
)OOC D
;OOD E
}PP 
}QQ 
}RR 	
staticTT 
TimelineClipTT 
[TT 
]TT  
SortClipsByStartTimeTT 2
(TT2 3
TimelineClipTT3 ?
[TT? @
]TT@ A
clipsTTB G
)TTG H
{UU 	
varVV 
orderedClipsVV 
=VV 
newVV "
TimelineClipVV# /
[VV/ 0
clipsVV0 5
.VV5 6
LengthVV6 <
]VV< =
;VV= >
ArrayWW 
.WW 
CopyWW 
(WW 
clipsWW 
,WW 
orderedClipsWW *
,WW* +
clipsWW, 1
.WW1 2
LengthWW2 8
)WW8 9
;WW9 :
ArrayXX 
.XX 
SortXX 
(XX 
orderedClipsXX #
,XX# $
(XX% &
clip1XX& +
,XX+ ,
clip2XX- 2
)XX2 3
=>XX4 6
clip1XX7 <
.XX< =
startXX= B
.XXB C
	CompareToXXC L
(XXL M
clip2XXM R
.XXR S
startXXS X
)XXX Y
)XXY Z
;XXZ [
returnYY 
orderedClipsYY 
;YY  
}ZZ 	
}[[ 
}\\ 
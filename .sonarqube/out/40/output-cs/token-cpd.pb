ÀL
iD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\GunEventHandler.cs
public 
class 
GunEventHandler 
: 
MonoBehaviour ,
,, -

IGunEvents. 8
{9 :
	protected 
MasterInput 
inputController )
;) *
private 
	IGunState 
state 
; 
[ 
SerializeField 
] 
private 

UnityEvent 
_OnFire 
=  
new! $

UnityEvent% /
(/ 0
)0 1
,1 2
_OnFireStart3 ?
=@ A
newB E

UnityEventF P
(P Q
)Q R
,R S

_OnFireEndT ^
=_ `
newa d

UnityEvente o
(o p
)p q
;q r
public 


UnityEvent 
OnFire 
{ 
get "
=># %
_OnFire& -
;- .
private/ 6
set7 :
=>; =
_OnFire> E
=F G
valueH M
;M N
}O P
public 


UnityEvent 
OnFireStart !
{" #
get$ '
=>( *
_OnFireStart+ 7
;7 8
private9 @
setA D
=>E G
_OnFireStartH T
=U V
valueW \
;\ ]
}^ _
public 


UnityEvent 
	OnFireEnd 
{  !
get" %
=>& (

_OnFireEnd) 3
;3 4
private5 <
set= @
=>A C

_OnFireEndD N
=O P
valueQ V
;V W
}X Y
[ 
SerializeField 
] 
private 

UnityEvent 
	_OnReload  
=! "
new# &

UnityEvent' 1
(1 2
)2 3
,3 4
_OnReloadStart5 C
=D E
newF I

UnityEventJ T
(T U
)U V
,V W
_OnReloadEndX d
=e f
newg j

UnityEventk u
(u v
)v w
;w x
public 


UnityEvent 
OnReload 
{  
get! $
=>% '
	_OnReload( 1
;1 2
private3 :
set; >
=>? A
	_OnReloadB K
=L M
valueN S
;S T
}U V
public 


UnityEvent 
OnReloadStart #
{$ %
get& )
=>* ,
_OnReloadStart- ;
;; <
private= D
setE H
=>I K
_OnReloadStartL Z
=[ \
value] b
;b c
}d e
public   


UnityEvent   
OnReloadEnd   !
{  " #
get  $ '
=>  ( *
_OnReloadEnd  + 7
;  7 8
private  9 @
set  A D
=>  E G
_OnReloadEnd  H T
=  U V
value  W \
;  \ ]
}  ^ _
["" 
SerializeField"" 
]"" 
private## 

UnityEvent## 
_OnAim## 
=## 
new##  #

UnityEvent##$ .
(##. /
)##/ 0
,##0 1
_OnAimStart##2 =
=##> ?
new##@ C

UnityEvent##D N
(##N O
)##O P
,##P Q
	_OnAimEnd##R [
=##\ ]
new##^ a

UnityEvent##b l
(##l m
)##m n
;##n o
public$$ 


UnityEvent$$ 
OnAim$$ 
{$$ 
get$$ !
=>$$" $
_OnAim$$% +
;$$+ ,
private$$- 4
set$$5 8
=>$$9 ;
_OnAim$$< B
=$$C D
value$$E J
;$$J K
}$$L M
public%% 


UnityEvent%% 

OnAimStart%%  
{%%! "
get%%# &
=>%%' )
_OnAimStart%%* 5
;%%5 6
private%%7 >
set%%? B
=>%%C E
_OnAimStart%%F Q
=%%R S
value%%T Y
;%%Y Z
}%%[ \
public&& 


UnityEvent&& 
OnAimEnd&& 
{&&  
get&&! $
=>&&% '
	_OnAimEnd&&( 1
;&&1 2
private&&3 :
set&&; >
=>&&? A
	_OnAimEnd&&B K
=&&L M
value&&N S
;&&S T
}&&U V
public(( 

void(( 
SetStateController(( "
(((" #
	IGunState((# ,
state((- 2
)((2 3
{((4 5
this)) 
.)) 
state)) 
=)) 
state)) 
;)) 
}** 
public,, 

void,, 
Awake,, 
(,, 
),, 
{,, 
inputController-- 
=-- 
new-- 
MasterInput-- )
(--) *
)--* +
;--+ ,
state.. 
??=.. 
GunStateDummy.. 
...  
Instance..  (
;..( )
}// 
public11 

void11 
OnEnable11 
(11 
)11 
{11 
inputController22 
.22 
Enable22 
(22 
)22  
;22  !
AddInput33 
(33 
)33 
;33 
}44 
public66 

void66 
	OnDisable66 
(66 
)66 
{66 
inputController77 
.77 
Disable77 
(77  
)77  !
;77! "
RemoveInput88 
(88 
)88 
;88 
}99 
public;; 

void;; 
Update;; 
(;; 
);; 
{;; 
if<< 

(<< 
state<< 
.<< 
IsFiring<< 
&&<< 
state<< #
.<<# $
CanFire<<$ +
(<<+ ,
)<<, -
)<<- .
OnFire== 
?== 
.== 
Invoke== 
(== 
)== 
;== 
ifBB 

(BB 
stateBB 
.BB 
IsAimingBB 
&&BB 
stateBB #
.BB# $
CanAimBB$ *
(BB* +
)BB+ ,
)BB, -
OnAimCC 
?CC 
.CC 
InvokeCC 
(CC 
)CC 
;CC 
}DD 
	protectedFF 
voidFF 
AddInputFF 
(FF 
)FF 
{FF 
inputControllerGG 
.GG 
PlayerGG 
.GG 
FireGG #
.GG# $
	performedGG$ -
+=GG. 0
_GG1 2
=>GG3 5
OnFireStartGG6 A
?GGA B
.GGB C
InvokeGGC I
(GGI J
)GGJ K
;GGK L
inputControllerHH 
.HH 
PlayerHH 
.HH 
FireHH #
.HH# $
canceledHH$ ,
+=HH- /
_HH0 1
=>HH2 4
	OnFireEndHH5 >
?HH> ?
.HH? @
InvokeHH@ F
(HHF G
)HHG H
;HHH I
inputControllerJJ 
.JJ 
PlayerJJ 
.JJ 
ReloadJJ %
.JJ% &
	performedJJ& /
+=JJ0 2
_JJ3 4
=>JJ5 7
OnReloadStartJJ8 E
?JJE F
.JJF G
InvokeJJG M
(JJM N
)JJN O
;JJO P
inputControllerMM 
.MM 
PlayerMM 
.MM 
AimMM "
.MM" #
	performedMM# ,
+=MM- /
_MM0 1
=>MM2 4

OnAimStartMM5 ?
?MM? @
.MM@ A
InvokeMMA G
(MMG H
)MMH I
;MMI J
inputControllerNN 
.NN 
PlayerNN 
.NN 
AimNN "
.NN" #
canceledNN# +
+=NN, .
_NN/ 0
=>NN1 3
OnAimEndNN4 <
?NN< =
.NN= >
InvokeNN> D
(NND E
)NNE F
;NNF G
}OO 
	protectedQQ 
voidQQ 
RemoveInputQQ 
(QQ 
)QQ  
{QQ! "
inputControllerRR 
.RR 
PlayerRR 
.RR 
FireRR #
.RR# $
	performedRR$ -
-=RR. 0
_RR1 2
=>RR3 5
OnFireStartRR6 A
?RRA B
.RRB C
InvokeRRC I
(RRI J
)RRJ K
;RRK L
inputControllerSS 
.SS 
PlayerSS 
.SS 
FireSS #
.SS# $
canceledSS$ ,
-=SS- /
_SS0 1
=>SS2 4
	OnFireEndSS5 >
?SS> ?
.SS? @
InvokeSS@ F
(SSF G
)SSG H
;SSH I
inputControllerUU 
.UU 
PlayerUU 
.UU 
ReloadUU %
.UU% &
	performedUU& /
-=UU0 2
_UU3 4
=>UU5 7
OnReloadStartUU8 E
?UUE F
.UUF G
InvokeUUG M
(UUM N
)UUN O
;UUO P
inputControllerXX 
.XX 
PlayerXX 
.XX 
AimXX "
.XX" #
	performedXX# ,
-=XX- /
_XX0 1
=>XX2 4

OnAimStartXX5 ?
?XX? @
.XX@ A
InvokeXXA G
(XXG H
)XXH I
;XXI J
inputControllerYY 
.YY 
PlayerYY 
.YY 
AimYY "
.YY" #
canceledYY# +
-=YY, .
_YY/ 0
=>YY1 3
OnAimEndYY4 <
?YY< =
.YY= >
InvokeYY> D
(YYD E
)YYE F
;YYF G
}ZZ 
}[[ ÿ2
aD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\GunData.cs
[ 
CreateAssetMenu 
( 
fileName 
= 
$str *
,* +
menuName, 4
=5 6
$str7 S
)S T
]T U
public 
class 
GunData 
: 
ScriptableObject '
{( )
public 

string 
gunName 
; 
[ 
SerializeField 
] 
public 
GunProperties )

properties* 4
;4 5
[ 
SerializeField 
] 
public 
GunViewModel (
	viewModel) 2
;2 3
[ 
SerializeField 
] 
public 
	GunEffect %
effects& -
;- .
} 
[ 
Serializable 
] 
public 
class 
GunProperties 
{ 
[ 
Tooltip 
( 
$str )
)) *
]* +
public 

GunType 
type 
= 
GunType !
.! "
Raycast" )
;) *
[ 
Tooltip 
( 
$str /
)/ 0
]0 1
public 

float 
damage 
= 
$num 
; 
[ 
Tooltip 
( 
$str C
)C D
]D E
public 

float 
fireRate 
= 
$num !
;! "
[ 
Tooltip 
( 
$str 5
)5 6
]6 7
public 

int 
maxAmmo 
= 
$num 
; 
[ 
Tooltip 
( 
$str ?
)? @
]@ A
public 

float 

reloadTime 
= 
$num  
;  !
[   
Tooltip   
(   
$str   4
)  4 5
]  5 6
public!! 

float!! 
maxDistance!! 
=!! 
$num!! "
;!!" #
["" 
Tooltip"" 
("" 
$str"" /
)""/ 0
]""0 1
public## 

float## 

inaccuracy## 
=## 
$num## #
;### $
[$$ 
Tooltip$$ 
($$ 
$str$$ h
)$$h i
]$$i j
public%% 

int%% 
ammoPerShot%% 
=%% 
$num%% 
;%% 
[&& 
Tooltip&& 
(&& 
$str	&& 
)
&& 
]
&& 
public'' 

float'' 
bulletsPerAmmo'' 
=''  !
$num''" #
;''# $
[(( 
Tooltip(( 
((( 
$str(( 7
)((7 8
]((8 9
public)) 

int)) 
shotsPerTrigger)) 
=))  
$num))! "
;))" #
[** 
Tooltip** 
(** 
$str** F
)**F G
]**G H
public++ 

float++ 
shotRate++ 
=++ 
$num++ 
;++ 
[,, 
Tooltip,, 
(,, 
$str,, V
),,V W
],,W X
public-- 

float-- 
bulletSpeed-- 
=-- 
$num-- !
;--! "
[.. 
Tooltip.. 
(.. 
$str.. O
)..O P
]..P Q
public// 


BulletBase// 
bullet// 
;// 
public11 

enum11 
GunType11 
{11 
Raycast22 
=22 
$num22 
,22 

Projectile33 
=33 
$num33 
,33 
Burst44 
=44 
$num44 
}55 
}66 
[88 
Serializable88 
]88 
public99 
class99 
GunViewModel99 
{99 
[:: 
Tooltip:: 
(:: 
$str:: 
):: 
]:: 
public;; 


GameObject;; 
gunModel;; 
;;; 
[<< 
Tooltip<< 
(<< 
$str<< 
)<< 
]<< 
public== 
%
RuntimeAnimatorController== $
animatorController==% 7
;==7 8
[>> 
Tooltip>> 
(>> 
$str>> 
)>> 
]>> 
public?? 

Vector3?? 
	gunOffset?? 
=?? 
Vector3?? &
.??& '
zero??' +
;??+ ,
[@@ 
Tooltip@@ 
(@@ 
$str@@ 
)@@ 
]@@ 
publicAA 


QuaternionAA 
gunRotationAA !
=AA" #

QuaternionAA$ .
.AA. /
identityAA/ 7
;AA7 8
[BB 
TooltipBB 
(BB 
$strBB 
)BB 
]BB 
publicCC 

SpriteCC 
	crosshairCC 
;CC 
}DD 
[FF 
SerializableFF 
]FF 
publicGG 
classGG 
	GunEffectGG 
{GG 
[HH 
TooltipHH 
(HH 
$strHH 
)HH 
]HH 
publicII 

ParticleSystemII 
tracersII !
;II! "
[JJ 
TooltipJJ 
(JJ 
$strJJ 
)JJ 
]JJ 
publicKK 

ParticleSystemKK 
muzzleFlashKK %
;KK% &
[LL 
TooltipLL 
(LL 
$strLL 
)LL 
]LL 
publicMM 

ParticleSystemMM 
impactEffectMM &
;MM& '
[NN 
TooltipNN 
(NN 
$strNN 
)NN 
]NN 
publicOO 

Vector3OO 
effectOffsetOO 
=OO  !
Vector3OO" )
.OO) *
zeroOO* .
;OO. /
[PP 
TooltipPP 
(PP 
$strPP 
)PP 
]PP 
publicQQ 


QuaternionQQ 
effectRotationQQ $
=QQ% &

QuaternionQQ' 1
.QQ1 2
identityQQ2 :
;QQ: ;
}RR 
cD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Anthony\fireballcollider.cs
public 
class 
fireballcollider 
: 
MonoBehaviour  -
{ 
public 

int 
damageToDeal 
= 
- 
$num "
;" #
public 

Health "
playerHealthController (
;( )
[		 
SerializeField		 
]		 
float		 
destroyTime		 &
=		' (
$num		) +
;		+ ,
public 

void 

Initialize 
( 
int 
damage %
)% &
{' (
this 
. 
damageToDeal 
= 
damage "
;" #
} 
void 
Start	 
( 
) 
{ 
Destroy 
( 
this 
. 

gameObject 
,  
destroyTime! ,
), -
;- .

gameObject 
. 
tag 
= 
$str !
;! "
	Rigidbody 
rd 
= 
GetComponent "
<" #
	Rigidbody# ,
>, -
(- .
). /
;/ 0
	Transform 
target 
= 

GameObject %
.% &!
FindGameObjectWithTag& ;
(; <
$str< D
)D E
.E F
	transformF O
;O P"
playerHealthController 
=  
target! '
.' (
GetComponent( 4
<4 5
Health5 ;
>; <
(< =
)= >
;> ?
} 
void 
OnTriggerEnter	 
( 
Collider  
	collision! *
)* +
{+ ,
if 

(
 
	collision 
. 

CompareTag 
(  
$str  (
)( )
)) *
{* +"
playerHealthController "
." #
ModifyHealth# /
(/ 0
damageToDeal0 <
)< =
;= >
} 	
Destroy 
( 
this 
. 

gameObject 
)  
;  !
} 
} ·
gD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\ProjectileGun.cs
public 
class 
ProjectileGun 
: 
GunBase $
{% &
public 

override 
void 
Fire 
( 
) 
{  !
base 
. 
Fire 
( 
) 
; 
int 
	ammoSpent 
= 
Math 
. 
Min  
(  !
CurrentAmmo! ,
,, -

Properties. 8
.8 9
ammoPerShot9 D
)D E
;E F
int 
bulletsPerShot 
= 
( 
int !
)! "
(" #
	ammoSpent# ,
*- .

Properties/ 9
.9 :
bulletsPerAmmo: H
)H I
;I J
CurrentAmmo 
-= 
	ammoSpent  
;  !
var 
	timeAlive 
= 

Properties "
." #
maxDistance# .
// 0

Properties1 ;
.; <
bulletSpeed< G
;G H
for 
( 
int 
i 
= 
$num 
; 
i 
< 
bulletsPerShot *
;* +
i, -
++- /
)/ 0
{1 2
var 
offset 
= 
OffsetDirection (
(( )
)) *
;* +
var 
bullet 
= 
Instantiate $
($ %

Properties% /
./ 0
bullet0 6
,6 7
spawnTransform8 F
.F G
positionG O
+P Q
offsetR X
,X Y

QuaternionZ d
.d e
identitye m
)m n
;n o
bullet 
. 

Initialize 
( 
offset $
*% &

Properties' 1
.1 2
bulletSpeed2 =
,= >
	timeAlive? H
,H I
-J K

PropertiesK U
.U V
damageV \
)\ ]
;] ^
} 	
} 
} Û3
^D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Anthony\MeleeZombie.cs
public 
class 
MeleeZombie 
: 
ZombieAI #
{$ %
[ 
Header 
( 
$str 
) 
] 
public 

int 
damageToDeal 
= 
- 
$num !
;! "
public 

float 
zombieSpeed 
= 
$num  
;  !
public		 

float		 
radius		 
=		 
$num		 
;		 
public

 

float

 
hitDist

 
=

 
$num

 
;

 
public 

float 

attackRate 
= 
$num  
;  !
	protected 
float 

lastAttack 
=  
$num! "
;" #
	protected 
override 
void 
Chasing #
(# $
)$ %
{& '
if 

( 
nm 
. 
speed 
< 
$num 
) 
{ 
nm 
. 
speed 
= 
zombieSpeed "
+# $
Mathf% *
.* +
Sqrt+ /
(/ 0
Time0 4
.4 5
time5 9
)9 :
;: ;
} 	
if 

( 
Mathf 
. 
Abs 
( 
dist 
) 
< 
$num 
)  
{! "
animator 
. 
SetBool 
( 
$str %
,% &
true' +
)+ ,
;, -
changeState 
( 
AIState 
.  
attack  &
)& '
;' (
} 	
} 
	protected 
override 
void 
Attack "
(" #
)# $
{% &
if 

( 
Mathf 
. 
Abs 
( 
dist 
) 
> 
$num 
)  
{! "
animator 
. 
SetBool 
( 
$str %
,% &
false' ,
), -
;- .
changeState 
( 
AIState 
.  
chasing  '
)' (
;( )
} 	
var 
rot 
= 

Quaternion 
. 
LookRotation )
() *
new* -
Vector3. 5
(5 6
target6 <
.< =
	transform= F
.F G
positionG O
.O P
xP Q
-R S
	transformT ]
.] ^
position^ f
.f g
xg h
,h i
	transformj s
.s t
forwardt {
.{ |
y| }
,} ~
target	 
.
 
	transform
 
.
 
position
 
.
 
z
 
-
 
	transform
 ¦
.
¦ §
position
§ ¯
.
¯ °
z
° ±
)
± ²
)
² ³
;
³ ´
StartCoroutine 
( 
SmoothRotation %
(% &
rot& )
)) *
)* +
;+ ,
if!! 

(!! 
Time!! 
.!! 
time!! 
-!! 

lastAttack!! "
>!!# $

attackRate!!% /
)!!/ 0
{!!1 2
Physics"" 
."" 

SphereCast"" 
("" 
	transform"" (
.""( )
position"") 1
+""2 3
Vector3""4 ;
.""; <
up""< >
,""> ?
radius""@ F
,""F G
	transform""H Q
.""Q R
forward""R Y
*""Z [
hitDist""\ c
,""c d
out""e h

RaycastHit""i s
hit""t w
)""w x
;""x y
Debug## 
.## 
DrawRay## 
(## 
	transform## #
.### $
position##$ ,
+##- .
Vector3##/ 6
.##6 7
up##7 9
,##9 :
	transform##; D
.##D E
forward##E L
*##M N
hitDist##O V
,##V W
Color##X ]
.##] ^
green##^ c
,##c d
$num##e f
)##f g
;##g h
if%% 
(%% 
hit%% 
.%% 
collider%% 
!=%% 
null%%  $
)%%$ %
{%%& '
Debug&& 
.&& 
Log&& 
(&& 
$str&& +
)&&+ ,
;&&, -
var'' 
health'' 
='' 
hit''  
.''  !
collider''! )
.'') *
GetComponent''* 6
<''6 7
Health''7 =
>''= >
(''> ?
)''? @
;''@ A
health(( 
?(( 
.(( 
ModifyHealth(( $
((($ %
damageToDeal((% 1
)((1 2
;((2 3
})) 

lastAttack** 
=** 
Time** 
.** 
time** "
;**" #
}++ 	
},, 
IEnumerator.. 
SmoothRotation.. 
(.. 

Quaternion.. )
target..* 0
)..0 1
{..2 3
float// 
progress// 
=// 
$num// 
;// 
float00 
speed00 
=00 
$num00 
;00 
while11 
(11 
progress11 
<11 
$num11 
)11 
{11 
	transform22 
.22 
rotation22 
=22  

Quaternion22! +
.22+ ,
Slerp22, 1
(221 2
	transform222 ;
.22; <
rotation22< D
,22D E
target22F L
,22L M
progress22N V
)22V W
;22W X
progress33 
+=33 
Time33 
.33 
	deltaTime33 &
*33' (
speed33) .
;33. /
if55 
(55 
progress55 
<=55 
$num55 
)55 
yield55  %
return55& ,
null55- 1
;551 2
}66 	
}88 
}99 ¡
oD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\FPS Player Base\Scripts\Movement_FPS.cs
[ 
RequireComponent 
( 
typeof 
( 
	Rigidbody "
)" #
)# $
]$ %
[ 
RequireComponent 
( 
typeof 
( 
Collider !
)! "
)" #
]# $
public   
class   
Movement_FPS   
:   
MonoBehaviour   )
{!! 
private## 
static## 
float## 
SPEED## 
=##  
$num##! $
;##$ %
[++ 
Header++ 
(++ 
$str++ %
)++% &
]++& '
[,, 
SerializeField,, 
],, 
[-- 
Tooltip-- 
(-- 
$str-- !
)--! "
]--" #
private.. 
float.. 
playerSpeed.. 
=.. 
SPEED..  %
;..% &
[?? 
SerializeField?? 
]?? 
[@@ 
Tooltip@@ 
(@@ 
$str@@ 4
)@@4 5
]@@5 6
privateAA 
floatAA 
	maxYAngleAA 
=AA 
$numAA !
;AA! "
[GG 
SerializeFieldGG 
]GG 
[HH 
TooltipHH 
(HH 
$strHH )
)HH) *
]HH* +
publicII 

floatII 

jumpHeightII 
=II 
$numII !
;II! "
publicNN 

floatNN 
sprintModifierNN 
=NN  !
$numNN" $
;NN$ %
[TT 
HeaderTT 
(TT 
$strTT $
)TT$ %
]TT% &
[UU 
SerializeFieldUU 
]UU 
[VV 
TooltipVV 
(VV 
$strVV Z
)VVZ [
]VV[ \
[WW 
RangeWW 

(WW
 
$numWW 
,WW 
$numWW 
)WW 
]WW 
privateXX 
floatXX 

airControlXX 
=XX 
$numXX #
;XX# $
[^^ 
SerializeField^^ 
]^^ 
[__ 
Tooltip__ 
(__ 
$str__ =
)__= >
]__> ?
private`` 
float`` 
AirSpeed`` 
;`` 
[ff 
Headerff 
(ff 
$strff 
)ff 
]ff 
[gg 
SerializeFieldgg 
]gg 
[hh 
Tooltiphh 
(hh 
$strhh "
)hh" #
]hh# $
privateii 
Vector3ii 
TPPosii 
;ii 
[oo 
Headeroo 
(oo 
$stroo 
)oo 
]oo 
[pp 
SerializeFieldpp 
]pp 
[qq 
Tooltipqq 
(qq 
$strqq 7
)qq7 8
]qq8 9
privaterr 
boolrr 
displayDebugInforr !
;rr! "
[xx 
SerializeFieldxx 
]xx 
[yy 
Tooltipyy 
(yy 
$stryy >
)yy> ?
]yy? @
privatezz 
floatzz 
groundedCheckdistzz #
=zz$ %
$numzz& *
;zz* +
[
 
Header
 
(
 
$str
 
)
 
]
 
[
 
SerializeField
 
]
 
[
 
Tooltip
 
(
 
$str
 v
)
v w
]
w x
private
 
bool
 
destroyOnLoad
 
;
 
[
 
Header
 
(
 
$str
 
)
 
]
 
[
 
SerializeField
 
]
 
[
 
Tooltip
 
(
 
$str
 S
)
S T
]
T U
private
 
float
 
sensitivity
 
=
 
$num
  "
;
" #
private
 
Vector2
 
currentRotation
 #
;
# $
private
 
Vector2
 
	cameraRot
 
;
 
private
¤¤ 
Vector2
¤¤ 
moveInputForce
¤¤ "
;
¤¤" #
private
ªª 

GameObject
ªª 
cameraObject
ªª #
;
ªª# $
private
°° 
Vector3
°° 
FPPos
°° 
;
°° 
private
¶¶ 
MasterInput
¶¶ 
inputController
¶¶ '
;
¶¶' (
private
¼¼ 
float
¼¼ 

curveFloat
¼¼ 
;
¼¼ 
public
ÂÂ 

bool
ÂÂ 
isTP
ÂÂ 
;
ÂÂ 
[
ÅÅ 
NonSerialized
ÅÅ 
]
ÅÅ 
public
ÆÆ 


GameObject
ÆÆ 
target
ÆÆ 
=
ÆÆ 
null
ÆÆ #
;
ÆÆ# $
private
ÈÈ 
float
ÈÈ 
sMod
ÈÈ 
=
ÈÈ 
$num
ÈÈ 
;
ÈÈ 
private
ÑÑ 
void
ÑÑ 
Awake
ÑÑ 
(
ÑÑ 
)
ÑÑ 
{
ÒÒ 
	transform
ÔÔ 
.
ÔÔ 
GetComponent
ÔÔ 
<
ÔÔ 
	Rigidbody
ÔÔ (
>
ÔÔ( )
(
ÔÔ) *
)
ÔÔ* +
.
ÔÔ+ ,
mass
ÔÔ, 0
=
ÔÔ1 2
$num
ÔÔ3 4
;
ÔÔ4 5
cameraObject
ÖÖ 
=
ÖÖ 
	transform
ÖÖ  
.
ÖÖ  !
GetChild
ÖÖ! )
(
ÖÖ) *
$num
ÖÖ* +
)
ÖÖ+ ,
.
ÖÖ, -

gameObject
ÖÖ- 7
;
ÖÖ7 8
FPPos
ØØ 
=
ØØ 
cameraObject
ØØ 
.
ØØ 
	transform
ØØ &
.
ØØ& '
localPosition
ØØ' 4
;
ØØ4 5
currentRotation
ÚÚ 
=
ÚÚ 
cameraObject
ÚÚ &
.
ÚÚ& '
	transform
ÚÚ' 0
.
ÚÚ0 1
rotation
ÚÚ1 9
.
ÚÚ9 :
eulerAngles
ÚÚ: E
;
ÚÚE F
if
ÝÝ 

(
ÝÝ 
!
ÝÝ 
destroyOnLoad
ÝÝ 
)
ÝÝ 
{
ÞÞ 	
DontDestroyOnLoad
ßß 
(
ßß 
this
ßß "
.
ßß" #

gameObject
ßß# -
)
ßß- .
;
ßß. /
}
àà 	
inputController
ãã 
=
ãã 
new
ãã 
MasterInput
ãã )
(
ãã) *
)
ãã* +
;
ãã+ ,
}
ää 
private
ææ 
void
ææ 
OnEnable
ææ 
(
ææ 
)
ææ 
{
çç 
inputController
èè 
.
èè 
Enable
èè 
(
èè 
)
èè  
;
èè  !
inputController
îî 
.
îî 
Player
îî 
.
îî 
Move
îî #
.
îî# $
	performed
îî$ -
+=
îî. 0
ctx
îî1 4
=>
îîQ S
moveInputForce
îîT b
=
îîc d
ctx
îîe h
.
îîh i
	ReadValue
îîi r
<
îîr s
Vector2
îîs z
>
îîz {
(
îî{ |
)
îî| }
;
îî} ~
inputController
ïï 
.
ïï 
Player
ïï 
.
ïï 
Move
ïï #
.
ïï# $
canceled
ïï$ ,
+=
ïï- /
_
ïï0 1
=>
ïïf h
moveInputForce
ïïi w
=
ïïx y
Vector2ïïz 
.ïï 
zeroïï 
;ïï 
inputController
òò 
.
òò 
Player
òò 
.
òò 
Look
òò #
.
òò# $
	performed
òò$ -
+=
òò. 0
ctx
òò1 4
=>
òòQ S

MoveCamera
òòT ^
(
òò^ _
ctx
òò_ b
.
òòb c
	ReadValue
òòc l
<
òòl m
Vector2
òòm t
>
òòt u
(
òòu v
)
òòv w
)
òòw x
;
òòx y
inputController
÷÷ 
.
÷÷ 
Player
÷÷ 
.
÷÷ 
Jump
÷÷ #
.
÷÷# $
	performed
÷÷$ -
+=
÷÷. 0
_
÷÷1 2
=>
÷÷d f
Jump
÷÷g k
(
÷÷k l
)
÷÷l m
;
÷÷m n
inputController
úú 
.
úú 
Player
úú 
.
úú 
SwitchPerspective
úú 0
.
úú0 1
	performed
úú1 :
+=
úú; =
_
úú> ?
=>
úút v
SwitchCameraPosúúw 
(úú 
)úú 
;úú 
inputController
üü 
.
üü 
Player
üü 
.
üü 
Use
üü "
.
üü" #
	performed
üü# ,
+=
üü- /
_
üü0 1
=>
üü2 4
Use
üü5 8
(
üü8 9
)
üü9 :
;
üü: ;
inputController
þþ 
.
þþ 
Player
þþ 
.
þþ 

LockCursor
þþ )
.
þþ) *
	performed
þþ* 3
+=
þþ4 6
_
þþ7 8
=>
þþ9 ;
ToggleCursorLock
þþ< L
(
þþL M
)
þþM N
;
þþN O
inputController
 
.
 
Player
 
.
 
Sprint
 %
.
% &
	performed
& /
+=
0 2
_
3 4
=>
5 7
switchSprint
8 D
(
D E
)
E F
;
F G
}
 
private
 
void
 
	OnDisable
 
(
 
)
 
{
 
inputController
 
.
 
Disable
 
(
  
)
  !
;
! "
inputController
 
.
 
Player
 
.
 
Move
 #
.
# $
	performed
$ -
-=
. 0
ctx
1 4
=>
Q S

movePlayer
T ^
(
^ _
ctx
_ b
.
b c
	ReadValue
c l
<
l m
Vector2
m t
>
t u
(
u v
)
v w
)
w x
;
x y
inputController
 
.
 
Player
 
.
 
Move
 #
.
# $
canceled
$ ,
-=
- /
_
0 1
=>
h j
moveInputForce
k y
=
z {
Vector2| 
. 
zero 
; 
inputController
 
.
 
Player
 
.
 
Look
 #
.
# $
	performed
$ -
-=
. 0
ctx
1 4
=>
Q S

MoveCamera
T ^
(
^ _
ctx
_ b
.
b c
	ReadValue
c l
<
l m
Vector2
m t
>
t u
(
u v
)
v w
)
w x
;
x y
inputController
 
.
 
Player
 
.
 
Jump
 #
.
# $
	performed
$ -
-=
. 0
_
1 2
=>
i k
Jump
l p
(
p q
)
q r
;
r s
inputController
 
.
 
Player
 
.
 
SwitchPerspective
 0
.
0 1
	performed
1 :
-=
; =
_
> ?
=>
w y
SwitchCameraPosz 
( 
) 
; 
inputController
 
.
 
Player
 
.
 
Use
 "
.
" #
	performed
# ,
-=
- /
_
0 1
=>
2 4
Use
5 8
(
8 9
)
9 :
;
: ;
inputController
 
.
 
Player
 
.
 

LockCursor
 )
.
) *
	performed
* 3
-=
4 6
_
7 8
=>
9 ;
ToggleCursorLock
< L
(
L M
)
M N
;
N O
}
 
private
 
void
 
FixedUpdate
 
(
 
)
 
{
 

movePlayer
  	 
(
   
moveInputForce
   "
)
  " #
;
  # $
}
¡¡ 
private
¦¦ 
void
¦¦ 

movePlayer
¦¦ 
(
¦¦ 
Vector2
¦¦ #
movementForce
¦¦$ 1
)
¦¦1 2
{
§§ 
if
¨¨ 

(
¨¨ 

isGrounded
¨¨ 
(
¨¨ 
)
¨¨ 
)
¨¨ 
{
©© 	
if
«« 
(
«« 
Mathf
«« 
.
«« 
Abs
«« 
(
«« 
moveInputForce
«« (
.
««( )
x
««) *
)
««* +
==
««, .
$num
««/ 0
&&
««1 3
Mathf
««4 9
.
««9 :
Abs
««: =
(
««= >
moveInputForce
««> L
.
««L M
y
««M N
)
««N O
==
««P R
$num
««S T
)
««T U
{
¬¬ 
	transform
­­ 
.
­­ 
GetComponent
­­ &
<
­­& '
	Rigidbody
­­' 0
>
­­0 1
(
­­1 2
)
­­2 3
.
­­3 4
velocity
­­4 <
=
­­= >
new
­­? B
Vector3
­­C J
(
­­J K
Mathf
­­K P
.
­­P Q
MoveTowards
­­Q \
(
­­\ ]
	transform
­­] f
.
­­f g
GetComponent
­­g s
<
­­s t
	Rigidbody
­­t }
>
­­} ~
(
­­~ 
)­­ 
.­­ 
velocity­­ 
.­­ 
x­­ 
,­­ 
$num­­ 
,­­ 
Time
®® 
.
®® 
	deltaTime
®® 
*
®®  
$num
®®! #
)
®®# $
,
®®$ %
	transform
®®& /
.
®®/ 0
GetComponent
®®0 <
<
®®< =
	Rigidbody
®®= F
>
®®F G
(
®®G H
)
®®H I
.
®®I J
velocity
®®J R
.
®®R S
y
®®S T
,
®®T U
Mathf
®®V [
.
®®[ \
MoveTowards
®®\ g
(
®®g h
	transform
®®h q
.
®®q r
GetComponent
®®r ~
<
®®~ 
	Rigidbody®® 
>®® 
(®® 
)®® 
.®® 
velocity®® 
.®® 
z®® 
,®® 
$num®® 
,®® 
Time®® 
.®®  
	deltaTime®®  ©
*®®ª «
$num®®¬ ®
)®®® ¯
)®®¯ °
;®®° ±

curveFloat
¯¯ 
=
¯¯ 
$num
¯¯ 
;
¯¯ 
return
°° 
;
°° 
}
±± 

curveFloat
²² 
=
²² 
Mathf
²² 
.
²² 
MoveTowards
²² *
(
²²* +

curveFloat
²²+ 5
,
²²5 6
playerSpeed
²²7 B
,
²²B C
Time
²²D H
.
²²H I
	deltaTime
²²I R
*
²²S T
$num
²²U W
)
²²W X
;
²²X Y
Vector3
µµ 
transformForce
µµ "
=
µµ# $
	transform
µµ% .
.
µµ. /
forward
µµ/ 6
*
µµ7 8
movementForce
µµ9 F
.
µµF G
y
µµG H
+
µµI J
	transform
µµK T
.
µµT U
right
µµU Z
*
µµ[ \
movementForce
µµ] j
.
µµj k
x
µµk l
;
µµl m
transformForce
¶¶ 
=
¶¶ 
new
¶¶  
Vector3
¶¶! (
(
¶¶( )
transformForce
¶¶) 7
.
¶¶7 8

normalized
¶¶8 B
.
¶¶B C
x
¶¶C D
*
¶¶E F

curveFloat
¶¶G Q
*
¶¶R S
sMod
¶¶T X
,
¶¶X Y
transformForce
¶¶Z h
.
¶¶h i
y
¶¶i j
,
¶¶j k
transformForce
¶¶l z
.
¶¶z {

normalized¶¶{ 
.¶¶ 
z¶¶ 
*¶¶ 

curveFloat¶¶ 
*¶¶ 
sMod¶¶ 
)¶¶ 
;¶¶ 
transformForce
·· 
.
·· 
y
·· 
=
·· 
	transform
·· (
.
··( )
GetComponent
··) 5
<
··5 6
	Rigidbody
··6 ?
>
··? @
(
··@ A
)
··A B
.
··B C
velocity
··C K
.
··K L
y
··L M
;
··M N
	transform
¸¸ 
.
¸¸ 
GetComponent
¸¸ "
<
¸¸" #
	Rigidbody
¸¸# ,
>
¸¸, -
(
¸¸- .
)
¸¸. /
.
¸¸/ 0
velocity
¸¸0 8
=
¸¸9 :
transformForce
¸¸; I
;
¸¸I J
}
ÀÀ 	
else
ÁÁ 
{
ÂÂ 	
	transform
ÅÅ 
.
ÅÅ 
GetComponent
ÅÅ "
<
ÅÅ" #
	Rigidbody
ÅÅ# ,
>
ÅÅ, -
(
ÅÅ- .
)
ÅÅ. /
.
ÅÅ/ 0
AddForce
ÅÅ0 8
(
ÅÅ8 9
(
ÅÅ9 :
	transform
ÅÅ: C
.
ÅÅC D
forward
ÅÅD K
*
ÅÅL M
movementForce
ÅÅN [
.
ÅÅ[ \
y
ÅÅ\ ]
*
ÅÅ^ _
playerSpeed
ÅÅ` k
*
ÅÅl m

airControl
ÅÅn x
)
ÅÅx y
+
ÅÅz {
(
ÅÅ| }
	transformÅÅ} 
.ÅÅ 
rightÅÅ 
*ÅÅ 
movementForceÅÅ 
.ÅÅ 
xÅÅ 
*ÅÅ  
playerSpeedÅÅ¡ ¬
)ÅÅ¬ ­
)ÅÅ­ ®
;ÅÅ® ¯
float
ÈÈ 
newx
ÈÈ 
,
ÈÈ 
newz
ÈÈ 
;
ÈÈ 
newx
ÉÉ 
=
ÉÉ 
Mathf
ÉÉ 
.
ÉÉ 
Clamp
ÉÉ 
(
ÉÉ 
	transform
ÉÉ (
.
ÉÉ( )
GetComponent
ÉÉ) 5
<
ÉÉ5 6
	Rigidbody
ÉÉ6 ?
>
ÉÉ? @
(
ÉÉ@ A
)
ÉÉA B
.
ÉÉB C
velocity
ÉÉC K
.
ÉÉK L
x
ÉÉL M
,
ÉÉM N
-
ÉÉO P
AirSpeed
ÉÉP X
,
ÉÉX Y
AirSpeed
ÉÉZ b
)
ÉÉb c
;
ÉÉc d
newz
ÊÊ 
=
ÊÊ 
Mathf
ÊÊ 
.
ÊÊ 
Clamp
ÊÊ 
(
ÊÊ 
	transform
ÊÊ (
.
ÊÊ( )
GetComponent
ÊÊ) 5
<
ÊÊ5 6
	Rigidbody
ÊÊ6 ?
>
ÊÊ? @
(
ÊÊ@ A
)
ÊÊA B
.
ÊÊB C
velocity
ÊÊC K
.
ÊÊK L
z
ÊÊL M
,
ÊÊM N
-
ÊÊO P
AirSpeed
ÊÊP X
,
ÊÊX Y
AirSpeed
ÊÊZ b
)
ÊÊb c
;
ÊÊc d
	transform
ËË 
.
ËË 
GetComponent
ËË "
<
ËË" #
	Rigidbody
ËË# ,
>
ËË, -
(
ËË- .
)
ËË. /
.
ËË/ 0
AddForce
ËË0 8
(
ËË8 9
new
ËË9 <
Vector3
ËË= D
(
ËËD E
newx
ËËE I
,
ËËI J
	transform
ËËK T
.
ËËT U
GetComponent
ËËU a
<
ËËa b
	Rigidbody
ËËb k
>
ËËk l
(
ËËl m
)
ËËm n
.
ËËn o
velocity
ËËo w
.
ËËw x
y
ËËx y
,
ËËy z
newz
ËË{ 
)ËË 
)ËË 
;ËË 
if
ÎÎ 
(
ÎÎ 
	transform
ÎÎ 
.
ÎÎ #
InverseTransformPoint
ÎÎ /
(
ÎÎ/ 0
	transform
ÎÎ0 9
.
ÎÎ9 :
GetComponent
ÎÎ: F
<
ÎÎF G
	Rigidbody
ÎÎG P
>
ÎÎP Q
(
ÎÎQ R
)
ÎÎR S
.
ÎÎS T
velocity
ÎÎT \
)
ÎÎ\ ]
.
ÎÎ] ^
y
ÎÎ^ _
/
ÎÎ` a
Mathf
ÎÎb g
.
ÎÎg h
Abs
ÎÎh k
(
ÎÎk l
	transform
ÎÎl u
.
ÎÎu v$
InverseTransformPointÎÎv 
(ÎÎ 
	transformÎÎ 
.ÎÎ 
GetComponentÎÎ ¢
<ÎÎ¢ £
	RigidbodyÎÎ£ ¬
>ÎÎ¬ ­
(ÎÎ­ ®
)ÎÎ® ¯
.ÎÎ¯ °
velocityÎÎ° ¸
)ÎÎ¸ ¹
.ÎÎ¹ º
yÎÎº »
)ÎÎ» ¼
==
ÏÏ 
movementForce
ÏÏ  
.
ÏÏ  !
y
ÏÏ! "
/
ÏÏ# $
Mathf
ÏÏ% *
.
ÏÏ* +
Abs
ÏÏ+ .
(
ÏÏ. /
movementForce
ÏÏ/ <
.
ÏÏ< =
y
ÏÏ= >
)
ÏÏ> ?
&&
ÏÏ@ B
movementForce
ÏÏC P
.
ÏÏP Q
y
ÏÏQ R
!=
ÏÏS U
$num
ÏÏV W
)
ÏÏW X
{
ÐÐ 
Vector3
ÒÒ 
tempVec
ÒÒ 
=
ÒÒ  !
	transform
ÒÒ" +
.
ÒÒ+ , 
worldToLocalMatrix
ÒÒ, >
*
ÒÒ? @
	transform
ÒÒA J
.
ÒÒJ K
GetComponent
ÒÒK W
<
ÒÒW X
	Rigidbody
ÒÒX a
>
ÒÒa b
(
ÒÒb c
)
ÒÒc d
.
ÒÒd e
velocity
ÒÒe m
;
ÒÒm n
tempVec
ÓÓ 
.
ÓÓ 
z
ÓÓ 
/=
ÓÓ 
$num
ÓÓ !
;
ÓÓ! "
	transform
ÔÔ 
.
ÔÔ 
GetComponent
ÔÔ &
<
ÔÔ& '
	Rigidbody
ÔÔ' 0
>
ÔÔ0 1
(
ÔÔ1 2
)
ÔÔ2 3
.
ÔÔ3 4
velocity
ÔÔ4 <
=
ÔÔ= >
	transform
ÔÔ? H
.
ÔÔH I 
localToWorldMatrix
ÔÔI [
*
ÔÔ\ ]
tempVec
ÔÔ^ e
;
ÔÔe f
}
ÕÕ 
}
çç 	
}
èè 
public
îî 

bool
îî 

isGrounded
îî 
(
îî 
)
îî 
{
ïï 
float
ññ 
rad
ññ 
=
ññ 
	transform
ññ 
.
ññ 
GetComponent
ññ *
<
ññ* +
Collider
ññ+ 3
>
ññ3 4
(
ññ4 5
)
ññ5 6
.
ññ6 7
bounds
ññ7 =
.
ññ= >
extents
ññ> E
.
ññE F
y
ññF G
;
ññG H
Vector3
òò 
modUp
òò 
=
òò 
new
òò 
Vector3
òò #
(
òò# $
rad
òò$ '
/
òò( )
$num
òò* +
,
òò+ ,
$num
òò- .
,
òò. /
$num
òò0 1
)
òò1 2
,
òò2 3
modDown
òò4 ;
=
òò< =
new
òò> A
Vector3
òòB I
(
òòI J
-
òòJ K
rad
òòK N
/
òòO P
$num
òòQ R
,
òòR S
$num
òòT U
,
òòU V
$num
òòW X
)
òòX Y
,
òòY Z
modLeft
òò[ b
=
òòc d
new
òòe h
Vector3
òòi p
(
òòp q
$num
òòq r
,
òòr s
$num
òòt u
,
òòu v
-
òòw x
rad
òòx {
/
òò| }
$num
òò~ 
)òò 
,òò 
modRightòò 
=òò 
newòò 
Vector3òò 
(òò 
$numòò 
,òò 
$numòò 
,òò 
radòò ¢
/òò£ ¤
$numòò¥ ¦
)òò¦ §
;òò§ ¨
if
óó 

(
óó 
	transform
óó 
.
óó 
GetComponent
óó "
<
óó" #
	Rigidbody
óó# ,
>
óó, -
(
óó- .
)
óó. /
.
óó/ 0
velocity
óó0 8
.
óó8 9
y
óó9 :
<
óó; <
-
óó= >
$num
óó> @
)
óó@ A
{
ôô 	
return
õõ 
false
õõ 
;
õõ 
}
öö 	
if
øø 

(
øø 
displayDebugInfo
øø 
)
øø 
{
ùù 	
UnityEngine
úú 
.
úú 
Debug
úú 
.
úú 
DrawRay
úú %
(
úú% &
	transform
úú& /
.
úú/ 0
localPosition
úú0 =
,
úú= >
-
úú? @
	transform
úú@ I
.
úúI J
up
úúJ L
,
úúL M
Color
úúN S
.
úúS T
green
úúT Y
,
úúY Z
groundedCheckdist
úú[ l
)
úúl m
;
úúm n
UnityEngine
ûû 
.
ûû 
Debug
ûû 
.
ûû 
DrawRay
ûû %
(
ûû% &
	transform
ûû& /
.
ûû/ 0
localPosition
ûû0 =
+
ûû> ?
modLeft
ûû@ G
,
ûûG H
-
ûûI J
	transform
ûûJ S
.
ûûS T
up
ûûT V
,
ûûV W
Color
ûûX ]
.
ûû] ^
green
ûû^ c
,
ûûc d
groundedCheckdist
ûûe v
)
ûûv w
;
ûûw x
UnityEngine
üü 
.
üü 
Debug
üü 
.
üü 
DrawRay
üü %
(
üü% &
	transform
üü& /
.
üü/ 0
localPosition
üü0 =
+
üü> ?
modUp
üü@ E
,
üüE F
-
üüG H
	transform
üüH Q
.
üüQ R
up
üüR T
,
üüT U
Color
üüV [
.
üü[ \
green
üü\ a
,
üüa b
groundedCheckdist
üüc t
)
üüt u
;
üüu v
UnityEngine
ýý 
.
ýý 
Debug
ýý 
.
ýý 
DrawRay
ýý %
(
ýý% &
	transform
ýý& /
.
ýý/ 0
localPosition
ýý0 =
+
ýý> ?
modDown
ýý@ G
,
ýýG H
-
ýýI J
	transform
ýýJ S
.
ýýS T
up
ýýT V
,
ýýV W
Color
ýýX ]
.
ýý] ^
green
ýý^ c
,
ýýc d
groundedCheckdist
ýýe v
)
ýýv w
;
ýýw x
UnityEngine
þþ 
.
þþ 
Debug
þþ 
.
þþ 
DrawRay
þþ %
(
þþ% &
	transform
þþ& /
.
þþ/ 0
localPosition
þþ0 =
+
þþ> ?
modRight
þþ@ H
,
þþH I
-
þþJ K
	transform
þþK T
.
þþT U
up
þþU W
,
þþW X
Color
þþY ^
.
þþ^ _
green
þþ_ d
,
þþd e
groundedCheckdist
þþf w
)
þþw x
;
þþx y
}
ÿÿ 	
if
 

(
 
Physics
 
.
 
Raycast
 
(
 
	transform
 %
.
% &
localPosition
& 3
,
3 4
-
5 6
	transform
6 ?
.
? @
up
@ B
,
B C
groundedCheckdist
D U
)
U V
||
W Y
Physics
Z a
.
a b
Raycast
b i
(
i j
	transform
j s
.
s t
localPositiont 
+ 
modLeft 
, 
- 
	transform 
. 
up 
, !
groundedCheckdist ­
)­ ®
||¯ ±
Physics
 
.
 
Raycast
 
(
 
	transform
 %
.
% &
localPosition
& 3
+
4 5
modUp
6 ;
,
; <
-
= >
	transform
> G
.
G H
up
H J
,
J K
groundedCheckdist
L ]
)
] ^
||
_ a
Physics
b i
.
i j
Raycast
j q
(
q r
	transform
r {
.
{ |
localPosition| 
+ 
modDown 
, 
- 
	transform 
.  
up  ¢
,¢ £!
groundedCheckdist¤ µ
)µ ¶
||· ¹
Physics
 
.
 
Raycast
 
(
 
	transform
 %
.
% &
localPosition
& 3
+
4 5
modRight
6 >
,
> ?
-
@ A
	transform
A J
.
J K
up
K M
,
M N
groundedCheckdist
O `
)
` a
)
a b
{
 	
return
 
(
 
true
 
)
 
;
 
}
 	
else
 
{
 	
return
 
(
 
false
 
)
 
;
 
}
 	
}
 
private
 
void
 

MoveCamera
 
(
 
Vector2
 #
rotation
$ ,
)
, -
{
 
currentRotation
 
.
 
y
 
+=
 
rotation
 %
.
% &
x
& '
*
( )
sensitivity
* 5
;
5 6
currentRotation
 
.
 
y
 
=
 
Mathf
 !
.
! "
Repeat
" (
(
( )
currentRotation
) 8
.
8 9
y
9 :
,
: ;
$num
< ?
)
? @
;
@ A
	transform
 
.
 
rotation
 
=
 

Quaternion
 '
.
' (
Euler
( -
(
- .
$num
. /
,
/ 0
currentRotation
1 @
.
@ A
y
A B
,
B C
$num
D E
)
E F
;
F G
	cameraRot
 
.
 
x
 
-=
 
rotation
 
.
  
y
  !
*
" #
sensitivity
$ /
;
/ 0
	cameraRot
 
.
 
x
 
=
 
Mathf
 
.
 
Clamp
 !
(
! "
	cameraRot
" +
.
+ ,
x
, -
,
- .
-
/ 0
	maxYAngle
0 9
,
9 :
	maxYAngle
; D
)
D E
;
E F
cameraObject
 
.
 
	transform
 
.
 
localRotation
 ,
=
- .

Quaternion
/ 9
.
9 :
Euler
: ?
(
? @
	cameraRot
@ I
.
I J
x
J K
,
K L
$num
M N
,
N O
$num
P Q
)
Q R
;
R S
}
 
private
££ 
void
££ 
Jump
££ 
(
££ 
)
££ 
{
¤¤ 
if
¥¥ 

(
¥¥ 

isGrounded
¥¥ 
(
¥¥ 
)
¥¥ 
)
¥¥ 
{
¦¦ 	
	transform
§§ 
.
§§ 
GetComponent
§§ "
<
§§" #
	Rigidbody
§§# ,
>
§§, -
(
§§- .
)
§§. /
.
§§/ 0
AddForce
§§0 8
(
§§8 9
$num
§§9 :
,
§§: ;

jumpHeight
§§< F
*
§§G H
$num
§§I K
,
§§K L
$num
§§M N
)
§§N O
;
§§O P
}
¨¨ 	
}
©© 
private
®® 
void
®® 
SwitchCameraPos
®®  
(
®®  !
)
®®! "
{
¯¯ 
if
°° 

(
°° 
isTP
°° 
)
°° 
{
±± 	
print
²² 
(
²² 
$str
²²  
)
²²  !
;
²²! "
cameraObject
³³ 
.
³³ 
	transform
³³ "
.
³³" #
localPosition
³³# 0
=
³³1 2
FPPos
³³3 8
;
³³8 9
isTP
´´ 
=
´´ 
!
´´ 
isTP
´´ 
;
´´ 
}
µµ 	
else
µµ
 
{
¶¶ 	
cameraObject
·· 
.
·· 
	transform
·· "
.
··" #
localPosition
··# 0
+=
··1 3
TPPos
··4 9
;
··9 :
isTP
¸¸ 
=
¸¸ 
!
¸¸ 
isTP
¸¸ 
;
¸¸ 
}
¹¹ 	
}
ºº 
private
½½ 
void
½½ 
Use
½½ 
(
½½ 
)
½½ 
{
¾¾ 
print
¿¿ 
(
¿¿ 
$str
¿¿ )
)
¿¿) *
;
¿¿* +
if
ÀÀ 

(
ÀÀ 
target
ÀÀ 
!=
ÀÀ 
null
ÀÀ 
)
ÀÀ 
{
ÁÁ 	
Vector3
ÂÂ 
	direction
ÂÂ 
=
ÂÂ 
(
ÂÂ  !
target
ÂÂ! '
.
ÂÂ' (
	transform
ÂÂ( 1
.
ÂÂ1 2
position
ÂÂ2 :
-
ÂÂ; <
	transform
ÂÂ= F
.
ÂÂF G
position
ÂÂG O
)
ÂÂO P
.
ÂÂP Q

normalized
ÂÂQ [
;
ÂÂ[ \
float
ÃÃ 
d
ÃÃ 
=
ÃÃ 
Vector3
ÃÃ 
.
ÃÃ 
Dot
ÃÃ !
(
ÃÃ! "
	direction
ÃÃ" +
,
ÃÃ+ ,
	transform
ÃÃ- 6
.
ÃÃ6 7
forward
ÃÃ7 >
)
ÃÃ> ?
;
ÃÃ? @
if
ÅÅ 
(
ÅÅ 
d
ÅÅ 
>=
ÅÅ 
$num
ÅÅ 
)
ÅÅ 
{
ÆÆ 
Debug
ÇÇ 
.
ÇÇ 
Log
ÇÇ 
(
ÇÇ 
$str
ÇÇ 8
)
ÇÇ8 9
;
ÇÇ9 :
return
ÉÉ 
;
ÉÉ 
}
ÊÊ 
}
ËË 	
return
ÍÍ 
;
ÍÍ 
}
ÎÎ 
private
ÑÑ 
bool
ÑÑ 

lockCursor
ÑÑ 
=
ÑÑ 
false
ÑÑ #
;
ÑÑ# $
private
ÒÒ 
void
ÒÒ 
ToggleCursorLock
ÒÒ !
(
ÒÒ! "
)
ÒÒ" #
{
ÒÒ$ %

lockCursor
ÓÓ 
=
ÓÓ 
!
ÓÓ 

lockCursor
ÓÓ  
;
ÓÓ  !
if
ÔÔ 

(
ÔÔ 

lockCursor
ÔÔ 
)
ÔÔ 
{
ÔÔ 
Debug
ÕÕ 
.
ÕÕ 
Log
ÕÕ 
(
ÕÕ 
$str
ÕÕ "
)
ÕÕ" #
;
ÕÕ# $
Cursor
ÖÖ 
.
ÖÖ 
	lockState
ÖÖ 
=
ÖÖ 
CursorLockMode
ÖÖ -
.
ÖÖ- .
Locked
ÖÖ. 4
;
ÖÖ4 5
Cursor
×× 
.
×× 
visible
×× 
=
×× 
false
×× "
;
××" #
}
ØØ 	
else
ØØ
 
{
ØØ 
Debug
ÙÙ 
.
ÙÙ 
Log
ÙÙ 
(
ÙÙ 
$str
ÙÙ $
)
ÙÙ$ %
;
ÙÙ% &
Cursor
ÚÚ 
.
ÚÚ 
	lockState
ÚÚ 
=
ÚÚ 
CursorLockMode
ÚÚ -
.
ÚÚ- .
None
ÚÚ. 2
;
ÚÚ2 3
Cursor
ÛÛ 
.
ÛÛ 
visible
ÛÛ 
=
ÛÛ 
true
ÛÛ !
;
ÛÛ! "
}
ÜÜ 	
}
ÝÝ 
private
ßß 
void
ßß 
switchSprint
ßß 
(
ßß 
)
ßß 
{
àà 
sMod
áá 
=
áá 
sMod
áá 
==
áá 
sprintModifier
áá %
?
áá& '
$num
áá( *
:
áá+ ,
sprintModifier
áá- ;
;
áá; <
}
ââ 
}ãã ×
YD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Evan\szAI Base.cs
public 
abstract 
class 
szAI 
: 
MonoBehaviour (
{ 
public 

Health "
playerHealthController (
;( )
	protected		 
NavMeshAgent		 
hh		 
;		 
public

 

	Transform

 
target

 
;

 
public 

enum 
AIState 
{ 
chasing !
,! "
attack# )
,) *
Leap+ /
}0 1
;1 2
	protected 
AIState 
aiState 
; 
	protected 
float 
dist 
; 
public 

void 
Start 
( 
) 
{ 
hh 

= 
GetComponent 
< 
NavMeshAgent &
>& '
(' (
)( )
;) *
aiState 
= 
AIState 
. 
chasing !
;! "
target 
= 

GameObject 
. !
FindGameObjectWithTag 1
(1 2
$str2 :
): ;
.; <
	transform< E
;E F
StartCoroutine 
( 
Think 
( 
) 
) 
;  
} 
	protected 
IEnumerator 
Think 
(  
)  !
{ 
while 
( 
true 
) 
{ 	"
playerHealthController "
=# $
target% +
.+ ,
GetComponent, 8
<8 9
Health9 ?
>? @
(@ A
)A B
;B C
dist 
= 
Vector3 
. 
Distance #
(# $
target$ *
.* +
position+ 3
,3 4
	transform5 >
.> ?
position? G
)G H
;H I
switch 
( 
aiState 
) 
{ 
case 
AIState 
. 
chasing $
:$ %
hh   
.   
SetDestination   %
(  % &
target  & ,
.  , -
position  - 5
)  5 6
;  6 7
Chasing!! 
(!! 
)!! 
;!! 
break"" 
;"" 
case## 
AIState## 
.## 
Leap## !
:##! "
Leap$$ 
($$ 
)$$ 
;$$ 
break%% 
;%% 
case&& 
AIState&& 
.&& 
attack&& #
:&&# $
Attack'' 
('' 
)'' 
;'' 
break(( 
;(( 
default)) 
:)) 
break** 
;** 
}++ 
yield-- 
return-- 
new-- 
WaitForSeconds-- +
(--+ ,
$num--, .
)--. /
;--/ 0
}.. 	
}// 
	protected22 
abstract22 
void22 
Chasing22 #
(22# $
)22$ %
;22% &
	protected55 
abstract55 
void55 
Attack55 "
(55" #
)55# $
;55$ %
	protected77 
abstract77 
void77 
Leap77  
(77  !
)77! "
;77" #
}88 ì
cD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\IGunState.cs
public 
	interface 
	IGunState 
{ 
bool 
IsFiring	 
{ 
get 
; 
} 
bool 
IsReloading	 
{ 
get 
; 
} 
bool 
IsAiming	 
{ 
get 
; 
} 
bool 
CanFire	 
( 
) 
; 
bool 
	CanReload	 
( 
) 
; 
bool 
CanAim	 
( 
) 
; 
bool 
	CanSwitch	 
( 
) 
; 
event 	
Action
 
< 
	IGunState 
> 
OnStateChanged *
;* +
} 
public 
class 
GunStateDummy 
: 
	IGunState &
{' (
private 
static 
GunStateDummy  
	_instance! *
;* +
public 

static 
GunStateDummy 
Instance  (
=>) +
	_instance, 5
??=6 9
new: =
GunStateDummy> K
(K L
)L M
;M N
private 
GunStateDummy 
( 
) 
{ 
} 
public 

bool 
IsFiring 
=> 
false !
;! "
public 

bool 
IsReloading 
=> 
false $
;$ %
public 

bool 
IsAiming 
=> 
false !
;! "
public   

bool   
CanAim   
(   
)   
=>   
false   !
;  ! "
public!! 

bool!! 
CanFire!! 
(!! 
)!! 
=>!! 
false!! "
;!!" #
public"" 

bool"" 
	CanReload"" 
("" 
)"" 
=>"" 
false"" $
;""$ %
public## 

bool## 
	CanSwitch## 
(## 
)## 
=>## 
false## $
;##$ %
public$$ 

event$$ 
Action$$ 
<$$ 
	IGunState$$ !
>$$! "
OnStateChanged$$# 1
=$$2 3
delegate$$4 <
{$$= >
}$$? @
;$$@ A
}%% Ñ¤
hD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\FPS Player Base\Input\Input2P.cs
public		 
class		 
@Input2P		 
:		 "
IInputActionCollection		 .
,		. /
IDisposable		0 ;
{

 
public 

InputActionAsset 
asset !
{" #
get$ '
;' (
}) *
public 

@Input2P 
( 
) 
{ 
asset 
= 
InputActionAsset  
.  !
FromJson! )
() *
$str	ª* 
)
ªª 
;
ªª 
m_Player
¬¬ 
=
¬¬ 
asset
¬¬ 
.
¬¬ 
FindActionMap
¬¬ &
(
¬¬& '
$str
¬¬' /
,
¬¬/ 0
throwIfNotFound
¬¬1 @
:
¬¬@ A
true
¬¬B F
)
¬¬F G
;
¬¬G H
m_Player_Move
­­ 
=
­­ 
m_Player
­­  
.
­­  !

FindAction
­­! +
(
­­+ ,
$str
­­, 2
,
­­2 3
throwIfNotFound
­­4 C
:
­­C D
true
­­E I
)
­­I J
;
­­J K
m_Player_Look
®® 
=
®® 
m_Player
®®  
.
®®  !

FindAction
®®! +
(
®®+ ,
$str
®®, 2
,
®®2 3
throwIfNotFound
®®4 C
:
®®C D
true
®®E I
)
®®I J
;
®®J K
m_Player_Fire
¯¯ 
=
¯¯ 
m_Player
¯¯  
.
¯¯  !

FindAction
¯¯! +
(
¯¯+ ,
$str
¯¯, 2
,
¯¯2 3
throwIfNotFound
¯¯4 C
:
¯¯C D
true
¯¯E I
)
¯¯I J
;
¯¯J K(
m_Player_SwitchPerspective
°° "
=
°°# $
m_Player
°°% -
.
°°- .

FindAction
°°. 8
(
°°8 9
$str
°°9 M
,
°°M N
throwIfNotFound
°°O ^
:
°°^ _
true
°°` d
)
°°d e
;
°°e f
m_Player_Jump
±± 
=
±± 
m_Player
±±  
.
±±  !

FindAction
±±! +
(
±±+ ,
$str
±±, 2
,
±±2 3
throwIfNotFound
±±4 C
:
±±C D
true
±±E I
)
±±I J
;
±±J K
m_Player_Use
²² 
=
²² 
m_Player
²² 
.
²²  

FindAction
²²  *
(
²²* +
$str
²²+ 0
,
²²0 1
throwIfNotFound
²²2 A
:
²²A B
true
²²C G
)
²²G H
;
²²H I
m_Player_Reload
³³ 
=
³³ 
m_Player
³³ "
.
³³" #

FindAction
³³# -
(
³³- .
$str
³³. 6
,
³³6 7
throwIfNotFound
³³8 G
:
³³G H
true
³³I M
)
³³M N
;
³³N O!
m_Player_LockCursor
´´ 
=
´´ 
m_Player
´´ &
.
´´& '

FindAction
´´' 1
(
´´1 2
$str
´´2 ?
,
´´? @
throwIfNotFound
´´A P
:
´´P Q
true
´´R V
)
´´V W
;
´´W X
m_Player_Aim
µµ 
=
µµ 
m_Player
µµ 
.
µµ  

FindAction
µµ  *
(
µµ* +
$str
µµ+ 0
,
µµ0 1
throwIfNotFound
µµ2 A
:
µµA B
true
µµC G
)
µµG H
;
µµH I
m_Player_Sprint
¶¶ 
=
¶¶ 
m_Player
¶¶ "
.
¶¶" #

FindAction
¶¶# -
(
¶¶- .
$str
¶¶. 6
,
¶¶6 7
throwIfNotFound
¶¶8 G
:
¶¶G H
true
¶¶I M
)
¶¶M N
;
¶¶N O
m_UI
¸¸ 
=
¸¸ 
asset
¸¸ 
.
¸¸ 
FindActionMap
¸¸ "
(
¸¸" #
$str
¸¸# '
,
¸¸' (
throwIfNotFound
¸¸) 8
:
¸¸8 9
true
¸¸: >
)
¸¸> ?
;
¸¸? @
m_UI_Navigate
¹¹ 
=
¹¹ 
m_UI
¹¹ 
.
¹¹ 

FindAction
¹¹ '
(
¹¹' (
$str
¹¹( 2
,
¹¹2 3
throwIfNotFound
¹¹4 C
:
¹¹C D
true
¹¹E I
)
¹¹I J
;
¹¹J K
m_UI_Submit
ºº 
=
ºº 
m_UI
ºº 
.
ºº 

FindAction
ºº %
(
ºº% &
$str
ºº& .
,
ºº. /
throwIfNotFound
ºº0 ?
:
ºº? @
true
ººA E
)
ººE F
;
ººF G
m_UI_Cancel
»» 
=
»» 
m_UI
»» 
.
»» 

FindAction
»» %
(
»»% &
$str
»»& .
,
»». /
throwIfNotFound
»»0 ?
:
»»? @
true
»»A E
)
»»E F
;
»»F G

m_UI_Point
¼¼ 
=
¼¼ 
m_UI
¼¼ 
.
¼¼ 

FindAction
¼¼ $
(
¼¼$ %
$str
¼¼% ,
,
¼¼, -
throwIfNotFound
¼¼. =
:
¼¼= >
true
¼¼? C
)
¼¼C D
;
¼¼D E

m_UI_Click
½½ 
=
½½ 
m_UI
½½ 
.
½½ 

FindAction
½½ $
(
½½$ %
$str
½½% ,
,
½½, -
throwIfNotFound
½½. =
:
½½= >
true
½½? C
)
½½C D
;
½½D E
m_UI_ScrollWheel
¾¾ 
=
¾¾ 
m_UI
¾¾ 
.
¾¾  

FindAction
¾¾  *
(
¾¾* +
$str
¾¾+ 8
,
¾¾8 9
throwIfNotFound
¾¾: I
:
¾¾I J
true
¾¾K O
)
¾¾O P
;
¾¾P Q
m_UI_MiddleClick
¿¿ 
=
¿¿ 
m_UI
¿¿ 
.
¿¿  

FindAction
¿¿  *
(
¿¿* +
$str
¿¿+ 8
,
¿¿8 9
throwIfNotFound
¿¿: I
:
¿¿I J
true
¿¿K O
)
¿¿O P
;
¿¿P Q
m_UI_RightClick
ÀÀ 
=
ÀÀ 
m_UI
ÀÀ 
.
ÀÀ 

FindAction
ÀÀ )
(
ÀÀ) *
$str
ÀÀ* 6
,
ÀÀ6 7
throwIfNotFound
ÀÀ8 G
:
ÀÀG H
true
ÀÀI M
)
ÀÀM N
;
ÀÀN O(
m_UI_TrackedDevicePosition
ÁÁ "
=
ÁÁ# $
m_UI
ÁÁ% )
.
ÁÁ) *

FindAction
ÁÁ* 4
(
ÁÁ4 5
$str
ÁÁ5 L
,
ÁÁL M
throwIfNotFound
ÁÁN ]
:
ÁÁ] ^
true
ÁÁ_ c
)
ÁÁc d
;
ÁÁd e+
m_UI_TrackedDeviceOrientation
ÂÂ %
=
ÂÂ& '
m_UI
ÂÂ( ,
.
ÂÂ, -

FindAction
ÂÂ- 7
(
ÂÂ7 8
$str
ÂÂ8 R
,
ÂÂR S
throwIfNotFound
ÂÂT c
:
ÂÂc d
true
ÂÂe i
)
ÂÂi j
;
ÂÂj k
}
ÃÃ 
public
ÅÅ 

void
ÅÅ 
Dispose
ÅÅ 
(
ÅÅ 
)
ÅÅ 
{
ÆÆ 
UnityEngine
ÇÇ 
.
ÇÇ 
Object
ÇÇ 
.
ÇÇ 
Destroy
ÇÇ "
(
ÇÇ" #
asset
ÇÇ# (
)
ÇÇ( )
;
ÇÇ) *
}
ÈÈ 
public
ÊÊ 

InputBinding
ÊÊ 
?
ÊÊ 
bindingMask
ÊÊ $
{
ËË 
get
ÌÌ 
=>
ÌÌ 
asset
ÌÌ 
.
ÌÌ 
bindingMask
ÌÌ  
;
ÌÌ  !
set
ÍÍ 
=>
ÍÍ 
asset
ÍÍ 
.
ÍÍ 
bindingMask
ÍÍ  
=
ÍÍ! "
value
ÍÍ# (
;
ÍÍ( )
}
ÎÎ 
public
ÐÐ 

ReadOnlyArray
ÐÐ 
<
ÐÐ 
InputDevice
ÐÐ $
>
ÐÐ$ %
?
ÐÐ% &
devices
ÐÐ' .
{
ÑÑ 
get
ÒÒ 
=>
ÒÒ 
asset
ÒÒ 
.
ÒÒ 
devices
ÒÒ 
;
ÒÒ 
set
ÓÓ 
=>
ÓÓ 
asset
ÓÓ 
.
ÓÓ 
devices
ÓÓ 
=
ÓÓ 
value
ÓÓ $
;
ÓÓ$ %
}
ÔÔ 
public
ÖÖ 

ReadOnlyArray
ÖÖ 
<
ÖÖ  
InputControlScheme
ÖÖ +
>
ÖÖ+ ,
controlSchemes
ÖÖ- ;
=>
ÖÖ< >
asset
ÖÖ? D
.
ÖÖD E
controlSchemes
ÖÖE S
;
ÖÖS T
public
ØØ 

bool
ØØ 
Contains
ØØ 
(
ØØ 
InputAction
ØØ $
action
ØØ% +
)
ØØ+ ,
{
ÙÙ 
return
ÚÚ 
asset
ÚÚ 
.
ÚÚ 
Contains
ÚÚ 
(
ÚÚ 
action
ÚÚ $
)
ÚÚ$ %
;
ÚÚ% &
}
ÛÛ 
public
ÝÝ 

IEnumerator
ÝÝ 
<
ÝÝ 
InputAction
ÝÝ "
>
ÝÝ" #
GetEnumerator
ÝÝ$ 1
(
ÝÝ1 2
)
ÝÝ2 3
{
ÞÞ 
return
ßß 
asset
ßß 
.
ßß 
GetEnumerator
ßß "
(
ßß" #
)
ßß# $
;
ßß$ %
}
àà 
IEnumerator
ââ 
IEnumerable
ââ 
.
ââ 
GetEnumerator
ââ )
(
ââ) *
)
ââ* +
{
ãã 
return
ää 
GetEnumerator
ää 
(
ää 
)
ää 
;
ää 
}
åå 
public
çç 

void
çç 
Enable
çç 
(
çç 
)
çç 
{
èè 
asset
éé 
.
éé 
Enable
éé 
(
éé 
)
éé 
;
éé 
}
êê 
public
ìì 

void
ìì 
Disable
ìì 
(
ìì 
)
ìì 
{
íí 
asset
îî 
.
îî 
Disable
îî 
(
îî 
)
îî 
;
îî 
}
ïï 
private
òò 
readonly
òò 
InputActionMap
òò #
m_Player
òò$ ,
;
òò, -
private
óó 
IPlayerActions
óó .
 m_PlayerActionsCallbackInterface
óó ;
;
óó; <
private
ôô 
readonly
ôô 
InputAction
ôô  
m_Player_Move
ôô! .
;
ôô. /
private
õõ 
readonly
õõ 
InputAction
õõ  
m_Player_Look
õõ! .
;
õõ. /
private
öö 
readonly
öö 
InputAction
öö  
m_Player_Fire
öö! .
;
öö. /
private
÷÷ 
readonly
÷÷ 
InputAction
÷÷  (
m_Player_SwitchPerspective
÷÷! ;
;
÷÷; <
private
øø 
readonly
øø 
InputAction
øø  
m_Player_Jump
øø! .
;
øø. /
private
ùù 
readonly
ùù 
InputAction
ùù  
m_Player_Use
ùù! -
;
ùù- .
private
úú 
readonly
úú 
InputAction
úú  
m_Player_Reload
úú! 0
;
úú0 1
private
ûû 
readonly
ûû 
InputAction
ûû  !
m_Player_LockCursor
ûû! 4
;
ûû4 5
private
üü 
readonly
üü 
InputAction
üü  
m_Player_Aim
üü! -
;
üü- .
private
ýý 
readonly
ýý 
InputAction
ýý  
m_Player_Sprint
ýý! 0
;
ýý0 1
public
þþ 

struct
þþ 
PlayerActions
þþ 
{
ÿÿ 
private
 
@Input2P
 
	m_Wrapper
 "
;
" #
public
 
PlayerActions
 
(
 
@Input2P
 %
wrapper
& -
)
- .
{
/ 0
	m_Wrapper
1 :
=
; <
wrapper
= D
;
D E
}
F G
public
 
InputAction
 
@Move
  
=>
! #
	m_Wrapper
$ -
.
- .
m_Player_Move
. ;
;
; <
public
 
InputAction
 
@Look
  
=>
! #
	m_Wrapper
$ -
.
- .
m_Player_Look
. ;
;
; <
public
 
InputAction
 
@Fire
  
=>
! #
	m_Wrapper
$ -
.
- .
m_Player_Fire
. ;
;
; <
public
 
InputAction
  
@SwitchPerspective
 -
=>
. 0
	m_Wrapper
1 :
.
: ;(
m_Player_SwitchPerspective
; U
;
U V
public
 
InputAction
 
@Jump
  
=>
! #
	m_Wrapper
$ -
.
- .
m_Player_Jump
. ;
;
; <
public
 
InputAction
 
@Use
 
=>
  "
	m_Wrapper
# ,
.
, -
m_Player_Use
- 9
;
9 :
public
 
InputAction
 
@Reload
 "
=>
# %
	m_Wrapper
& /
.
/ 0
m_Player_Reload
0 ?
;
? @
public
 
InputAction
 
@LockCursor
 &
=>
' )
	m_Wrapper
* 3
.
3 4!
m_Player_LockCursor
4 G
;
G H
public
 
InputAction
 
@Aim
 
=>
  "
	m_Wrapper
# ,
.
, -
m_Player_Aim
- 9
;
9 :
public
 
InputAction
 
@Sprint
 "
=>
# %
	m_Wrapper
& /
.
/ 0
m_Player_Sprint
0 ?
;
? @
public
 
InputActionMap
 
Get
 !
(
! "
)
" #
{
$ %
return
& ,
	m_Wrapper
- 6
.
6 7
m_Player
7 ?
;
? @
}
A B
public
 
void
 
Enable
 
(
 
)
 
{
 
Get
 "
(
" #
)
# $
.
$ %
Enable
% +
(
+ ,
)
, -
;
- .
}
/ 0
public
 
void
 
Disable
 
(
 
)
 
{
 
Get
  #
(
# $
)
$ %
.
% &
Disable
& -
(
- .
)
. /
;
/ 0
}
1 2
public
 
bool
 
enabled
 
=>
 
Get
 "
(
" #
)
# $
.
$ %
enabled
% ,
;
, -
public
 
static
 
implicit
 
operator
 '
InputActionMap
( 6
(
6 7
PlayerActions
7 D
set
E H
)
H I
{
J K
return
L R
set
S V
.
V W
Get
W Z
(
Z [
)
[ \
;
\ ]
}
^ _
public
 
void
 
SetCallbacks
  
(
  !
IPlayerActions
! /
instance
0 8
)
8 9
{
 	
if
 
(
 
	m_Wrapper
 
.
 .
 m_PlayerActionsCallbackInterface
 :
!=
; =
null
> B
)
B C
{
 
@Move
 
.
 
started
 
-=
  
	m_Wrapper
! *
.
* +.
 m_PlayerActionsCallbackInterface
+ K
.
K L
OnMove
L R
;
R S
@Move
 
.
 
	performed
 
-=
  "
	m_Wrapper
# ,
.
, -.
 m_PlayerActionsCallbackInterface
- M
.
M N
OnMove
N T
;
T U
@Move
 
.
 
canceled
 
-=
 !
	m_Wrapper
" +
.
+ ,.
 m_PlayerActionsCallbackInterface
, L
.
L M
OnMove
M S
;
S T
@Look
 
.
 
started
 
-=
  
	m_Wrapper
! *
.
* +.
 m_PlayerActionsCallbackInterface
+ K
.
K L
OnLook
L R
;
R S
@Look
 
.
 
	performed
 
-=
  "
	m_Wrapper
# ,
.
, -.
 m_PlayerActionsCallbackInterface
- M
.
M N
OnLook
N T
;
T U
@Look
 
.
 
canceled
 
-=
 !
	m_Wrapper
" +
.
+ ,.
 m_PlayerActionsCallbackInterface
, L
.
L M
OnLook
M S
;
S T
@Fire
 
.
 
started
 
-=
  
	m_Wrapper
! *
.
* +.
 m_PlayerActionsCallbackInterface
+ K
.
K L
OnFire
L R
;
R S
@Fire
 
.
 
	performed
 
-=
  "
	m_Wrapper
# ,
.
, -.
 m_PlayerActionsCallbackInterface
- M
.
M N
OnFire
N T
;
T U
@Fire
 
.
 
canceled
 
-=
 !
	m_Wrapper
" +
.
+ ,.
 m_PlayerActionsCallbackInterface
, L
.
L M
OnFire
M S
;
S T 
@SwitchPerspective
 "
.
" #
started
# *
-=
+ -
	m_Wrapper
. 7
.
7 8.
 m_PlayerActionsCallbackInterface
8 X
.
X Y!
OnSwitchPerspective
Y l
;
l m 
@SwitchPerspective
 "
.
" #
	performed
# ,
-=
- /
	m_Wrapper
0 9
.
9 :.
 m_PlayerActionsCallbackInterface
: Z
.
Z [!
OnSwitchPerspective
[ n
;
n o 
@SwitchPerspective
   "
.
  " #
canceled
  # +
-=
  , .
	m_Wrapper
  / 8
.
  8 9.
 m_PlayerActionsCallbackInterface
  9 Y
.
  Y Z!
OnSwitchPerspective
  Z m
;
  m n
@Jump
¡¡ 
.
¡¡ 
started
¡¡ 
-=
¡¡  
	m_Wrapper
¡¡! *
.
¡¡* +.
 m_PlayerActionsCallbackInterface
¡¡+ K
.
¡¡K L
OnJump
¡¡L R
;
¡¡R S
@Jump
¢¢ 
.
¢¢ 
	performed
¢¢ 
-=
¢¢  "
	m_Wrapper
¢¢# ,
.
¢¢, -.
 m_PlayerActionsCallbackInterface
¢¢- M
.
¢¢M N
OnJump
¢¢N T
;
¢¢T U
@Jump
££ 
.
££ 
canceled
££ 
-=
££ !
	m_Wrapper
££" +
.
££+ ,.
 m_PlayerActionsCallbackInterface
££, L
.
££L M
OnJump
££M S
;
££S T
@Use
¤¤ 
.
¤¤ 
started
¤¤ 
-=
¤¤ 
	m_Wrapper
¤¤  )
.
¤¤) *.
 m_PlayerActionsCallbackInterface
¤¤* J
.
¤¤J K
OnUse
¤¤K P
;
¤¤P Q
@Use
¥¥ 
.
¥¥ 
	performed
¥¥ 
-=
¥¥ !
	m_Wrapper
¥¥" +
.
¥¥+ ,.
 m_PlayerActionsCallbackInterface
¥¥, L
.
¥¥L M
OnUse
¥¥M R
;
¥¥R S
@Use
¦¦ 
.
¦¦ 
canceled
¦¦ 
-=
¦¦  
	m_Wrapper
¦¦! *
.
¦¦* +.
 m_PlayerActionsCallbackInterface
¦¦+ K
.
¦¦K L
OnUse
¦¦L Q
;
¦¦Q R
@Reload
§§ 
.
§§ 
started
§§ 
-=
§§  "
	m_Wrapper
§§# ,
.
§§, -.
 m_PlayerActionsCallbackInterface
§§- M
.
§§M N
OnReload
§§N V
;
§§V W
@Reload
¨¨ 
.
¨¨ 
	performed
¨¨ !
-=
¨¨" $
	m_Wrapper
¨¨% .
.
¨¨. /.
 m_PlayerActionsCallbackInterface
¨¨/ O
.
¨¨O P
OnReload
¨¨P X
;
¨¨X Y
@Reload
©© 
.
©© 
canceled
©©  
-=
©©! #
	m_Wrapper
©©$ -
.
©©- ..
 m_PlayerActionsCallbackInterface
©©. N
.
©©N O
OnReload
©©O W
;
©©W X
@LockCursor
ªª 
.
ªª 
started
ªª #
-=
ªª$ &
	m_Wrapper
ªª' 0
.
ªª0 1.
 m_PlayerActionsCallbackInterface
ªª1 Q
.
ªªQ R
OnLockCursor
ªªR ^
;
ªª^ _
@LockCursor
«« 
.
«« 
	performed
«« %
-=
««& (
	m_Wrapper
««) 2
.
««2 3.
 m_PlayerActionsCallbackInterface
««3 S
.
««S T
OnLockCursor
««T `
;
««` a
@LockCursor
¬¬ 
.
¬¬ 
canceled
¬¬ $
-=
¬¬% '
	m_Wrapper
¬¬( 1
.
¬¬1 2.
 m_PlayerActionsCallbackInterface
¬¬2 R
.
¬¬R S
OnLockCursor
¬¬S _
;
¬¬_ `
@Aim
­­ 
.
­­ 
started
­­ 
-=
­­ 
	m_Wrapper
­­  )
.
­­) *.
 m_PlayerActionsCallbackInterface
­­* J
.
­­J K
OnAim
­­K P
;
­­P Q
@Aim
®® 
.
®® 
	performed
®® 
-=
®® !
	m_Wrapper
®®" +
.
®®+ ,.
 m_PlayerActionsCallbackInterface
®®, L
.
®®L M
OnAim
®®M R
;
®®R S
@Aim
¯¯ 
.
¯¯ 
canceled
¯¯ 
-=
¯¯  
	m_Wrapper
¯¯! *
.
¯¯* +.
 m_PlayerActionsCallbackInterface
¯¯+ K
.
¯¯K L
OnAim
¯¯L Q
;
¯¯Q R
@Sprint
°° 
.
°° 
started
°° 
-=
°°  "
	m_Wrapper
°°# ,
.
°°, -.
 m_PlayerActionsCallbackInterface
°°- M
.
°°M N
OnSprint
°°N V
;
°°V W
@Sprint
±± 
.
±± 
	performed
±± !
-=
±±" $
	m_Wrapper
±±% .
.
±±. /.
 m_PlayerActionsCallbackInterface
±±/ O
.
±±O P
OnSprint
±±P X
;
±±X Y
@Sprint
²² 
.
²² 
canceled
²²  
-=
²²! #
	m_Wrapper
²²$ -
.
²²- ..
 m_PlayerActionsCallbackInterface
²². N
.
²²N O
OnSprint
²²O W
;
²²W X
}
³³ 
	m_Wrapper
´´ 
.
´´ .
 m_PlayerActionsCallbackInterface
´´ 6
=
´´7 8
instance
´´9 A
;
´´A B
if
µµ 
(
µµ 
instance
µµ 
!=
µµ 
null
µµ  
)
µµ  !
{
¶¶ 
@Move
·· 
.
·· 
started
·· 
+=
··  
instance
··! )
.
··) *
OnMove
··* 0
;
··0 1
@Move
¸¸ 
.
¸¸ 
	performed
¸¸ 
+=
¸¸  "
instance
¸¸# +
.
¸¸+ ,
OnMove
¸¸, 2
;
¸¸2 3
@Move
¹¹ 
.
¹¹ 
canceled
¹¹ 
+=
¹¹ !
instance
¹¹" *
.
¹¹* +
OnMove
¹¹+ 1
;
¹¹1 2
@Look
ºº 
.
ºº 
started
ºº 
+=
ºº  
instance
ºº! )
.
ºº) *
OnLook
ºº* 0
;
ºº0 1
@Look
»» 
.
»» 
	performed
»» 
+=
»»  "
instance
»»# +
.
»»+ ,
OnLook
»», 2
;
»»2 3
@Look
¼¼ 
.
¼¼ 
canceled
¼¼ 
+=
¼¼ !
instance
¼¼" *
.
¼¼* +
OnLook
¼¼+ 1
;
¼¼1 2
@Fire
½½ 
.
½½ 
started
½½ 
+=
½½  
instance
½½! )
.
½½) *
OnFire
½½* 0
;
½½0 1
@Fire
¾¾ 
.
¾¾ 
	performed
¾¾ 
+=
¾¾  "
instance
¾¾# +
.
¾¾+ ,
OnFire
¾¾, 2
;
¾¾2 3
@Fire
¿¿ 
.
¿¿ 
canceled
¿¿ 
+=
¿¿ !
instance
¿¿" *
.
¿¿* +
OnFire
¿¿+ 1
;
¿¿1 2 
@SwitchPerspective
ÀÀ "
.
ÀÀ" #
started
ÀÀ# *
+=
ÀÀ+ -
instance
ÀÀ. 6
.
ÀÀ6 7!
OnSwitchPerspective
ÀÀ7 J
;
ÀÀJ K 
@SwitchPerspective
ÁÁ "
.
ÁÁ" #
	performed
ÁÁ# ,
+=
ÁÁ- /
instance
ÁÁ0 8
.
ÁÁ8 9!
OnSwitchPerspective
ÁÁ9 L
;
ÁÁL M 
@SwitchPerspective
ÂÂ "
.
ÂÂ" #
canceled
ÂÂ# +
+=
ÂÂ, .
instance
ÂÂ/ 7
.
ÂÂ7 8!
OnSwitchPerspective
ÂÂ8 K
;
ÂÂK L
@Jump
ÃÃ 
.
ÃÃ 
started
ÃÃ 
+=
ÃÃ  
instance
ÃÃ! )
.
ÃÃ) *
OnJump
ÃÃ* 0
;
ÃÃ0 1
@Jump
ÄÄ 
.
ÄÄ 
	performed
ÄÄ 
+=
ÄÄ  "
instance
ÄÄ# +
.
ÄÄ+ ,
OnJump
ÄÄ, 2
;
ÄÄ2 3
@Jump
ÅÅ 
.
ÅÅ 
canceled
ÅÅ 
+=
ÅÅ !
instance
ÅÅ" *
.
ÅÅ* +
OnJump
ÅÅ+ 1
;
ÅÅ1 2
@Use
ÆÆ 
.
ÆÆ 
started
ÆÆ 
+=
ÆÆ 
instance
ÆÆ  (
.
ÆÆ( )
OnUse
ÆÆ) .
;
ÆÆ. /
@Use
ÇÇ 
.
ÇÇ 
	performed
ÇÇ 
+=
ÇÇ !
instance
ÇÇ" *
.
ÇÇ* +
OnUse
ÇÇ+ 0
;
ÇÇ0 1
@Use
ÈÈ 
.
ÈÈ 
canceled
ÈÈ 
+=
ÈÈ  
instance
ÈÈ! )
.
ÈÈ) *
OnUse
ÈÈ* /
;
ÈÈ/ 0
@Reload
ÉÉ 
.
ÉÉ 
started
ÉÉ 
+=
ÉÉ  "
instance
ÉÉ# +
.
ÉÉ+ ,
OnReload
ÉÉ, 4
;
ÉÉ4 5
@Reload
ÊÊ 
.
ÊÊ 
	performed
ÊÊ !
+=
ÊÊ" $
instance
ÊÊ% -
.
ÊÊ- .
OnReload
ÊÊ. 6
;
ÊÊ6 7
@Reload
ËË 
.
ËË 
canceled
ËË  
+=
ËË! #
instance
ËË$ ,
.
ËË, -
OnReload
ËË- 5
;
ËË5 6
@LockCursor
ÌÌ 
.
ÌÌ 
started
ÌÌ #
+=
ÌÌ$ &
instance
ÌÌ' /
.
ÌÌ/ 0
OnLockCursor
ÌÌ0 <
;
ÌÌ< =
@LockCursor
ÍÍ 
.
ÍÍ 
	performed
ÍÍ %
+=
ÍÍ& (
instance
ÍÍ) 1
.
ÍÍ1 2
OnLockCursor
ÍÍ2 >
;
ÍÍ> ?
@LockCursor
ÎÎ 
.
ÎÎ 
canceled
ÎÎ $
+=
ÎÎ% '
instance
ÎÎ( 0
.
ÎÎ0 1
OnLockCursor
ÎÎ1 =
;
ÎÎ= >
@Aim
ÏÏ 
.
ÏÏ 
started
ÏÏ 
+=
ÏÏ 
instance
ÏÏ  (
.
ÏÏ( )
OnAim
ÏÏ) .
;
ÏÏ. /
@Aim
ÐÐ 
.
ÐÐ 
	performed
ÐÐ 
+=
ÐÐ !
instance
ÐÐ" *
.
ÐÐ* +
OnAim
ÐÐ+ 0
;
ÐÐ0 1
@Aim
ÑÑ 
.
ÑÑ 
canceled
ÑÑ 
+=
ÑÑ  
instance
ÑÑ! )
.
ÑÑ) *
OnAim
ÑÑ* /
;
ÑÑ/ 0
@Sprint
ÒÒ 
.
ÒÒ 
started
ÒÒ 
+=
ÒÒ  "
instance
ÒÒ# +
.
ÒÒ+ ,
OnSprint
ÒÒ, 4
;
ÒÒ4 5
@Sprint
ÓÓ 
.
ÓÓ 
	performed
ÓÓ !
+=
ÓÓ" $
instance
ÓÓ% -
.
ÓÓ- .
OnSprint
ÓÓ. 6
;
ÓÓ6 7
@Sprint
ÔÔ 
.
ÔÔ 
canceled
ÔÔ  
+=
ÔÔ! #
instance
ÔÔ$ ,
.
ÔÔ, -
OnSprint
ÔÔ- 5
;
ÔÔ5 6
}
ÕÕ 
}
ÖÖ 	
}
×× 
public
ØØ 

PlayerActions
ØØ 
@Player
ØØ  
=>
ØØ! #
new
ØØ$ '
PlayerActions
ØØ( 5
(
ØØ5 6
this
ØØ6 :
)
ØØ: ;
;
ØØ; <
private
ÛÛ 
readonly
ÛÛ 
InputActionMap
ÛÛ #
m_UI
ÛÛ$ (
;
ÛÛ( )
private
ÜÜ 

IUIActions
ÜÜ *
m_UIActionsCallbackInterface
ÜÜ 3
;
ÜÜ3 4
private
ÝÝ 
readonly
ÝÝ 
InputAction
ÝÝ  
m_UI_Navigate
ÝÝ! .
;
ÝÝ. /
private
ÞÞ 
readonly
ÞÞ 
InputAction
ÞÞ  
m_UI_Submit
ÞÞ! ,
;
ÞÞ, -
private
ßß 
readonly
ßß 
InputAction
ßß  
m_UI_Cancel
ßß! ,
;
ßß, -
private
àà 
readonly
àà 
InputAction
àà  

m_UI_Point
àà! +
;
àà+ ,
private
áá 
readonly
áá 
InputAction
áá  

m_UI_Click
áá! +
;
áá+ ,
private
ââ 
readonly
ââ 
InputAction
ââ  
m_UI_ScrollWheel
ââ! 1
;
ââ1 2
private
ãã 
readonly
ãã 
InputAction
ãã  
m_UI_MiddleClick
ãã! 1
;
ãã1 2
private
ää 
readonly
ää 
InputAction
ää  
m_UI_RightClick
ää! 0
;
ää0 1
private
åå 
readonly
åå 
InputAction
åå  (
m_UI_TrackedDevicePosition
åå! ;
;
åå; <
private
ææ 
readonly
ææ 
InputAction
ææ  +
m_UI_TrackedDeviceOrientation
ææ! >
;
ææ> ?
public
çç 

struct
çç 
	UIActions
çç 
{
èè 
private
éé 
@Input2P
éé 
	m_Wrapper
éé "
;
éé" #
public
êê 
	UIActions
êê 
(
êê 
@Input2P
êê !
wrapper
êê" )
)
êê) *
{
êê+ ,
	m_Wrapper
êê- 6
=
êê7 8
wrapper
êê9 @
;
êê@ A
}
êêB C
public
ëë 
InputAction
ëë 
	@Navigate
ëë $
=>
ëë% '
	m_Wrapper
ëë( 1
.
ëë1 2
m_UI_Navigate
ëë2 ?
;
ëë? @
public
ìì 
InputAction
ìì 
@Submit
ìì "
=>
ìì# %
	m_Wrapper
ìì& /
.
ìì/ 0
m_UI_Submit
ìì0 ;
;
ìì; <
public
íí 
InputAction
íí 
@Cancel
íí "
=>
íí# %
	m_Wrapper
íí& /
.
íí/ 0
m_UI_Cancel
íí0 ;
;
íí; <
public
îî 
InputAction
îî 
@Point
îî !
=>
îî" $
	m_Wrapper
îî% .
.
îî. /

m_UI_Point
îî/ 9
;
îî9 :
public
ïï 
InputAction
ïï 
@Click
ïï !
=>
ïï" $
	m_Wrapper
ïï% .
.
ïï. /

m_UI_Click
ïï/ 9
;
ïï9 :
public
ðð 
InputAction
ðð 
@ScrollWheel
ðð '
=>
ðð( *
	m_Wrapper
ðð+ 4
.
ðð4 5
m_UI_ScrollWheel
ðð5 E
;
ððE F
public
ññ 
InputAction
ññ 
@MiddleClick
ññ '
=>
ññ( *
	m_Wrapper
ññ+ 4
.
ññ4 5
m_UI_MiddleClick
ññ5 E
;
ññE F
public
òò 
InputAction
òò 
@RightClick
òò &
=>
òò' )
	m_Wrapper
òò* 3
.
òò3 4
m_UI_RightClick
òò4 C
;
òòC D
public
óó 
InputAction
óó $
@TrackedDevicePosition
óó 1
=>
óó2 4
	m_Wrapper
óó5 >
.
óó> ?(
m_UI_TrackedDevicePosition
óó? Y
;
óóY Z
public
ôô 
InputAction
ôô '
@TrackedDeviceOrientation
ôô 4
=>
ôô5 7
	m_Wrapper
ôô8 A
.
ôôA B+
m_UI_TrackedDeviceOrientation
ôôB _
;
ôô_ `
public
õõ 
InputActionMap
õõ 
Get
õõ !
(
õõ! "
)
õõ" #
{
õõ$ %
return
õõ& ,
	m_Wrapper
õõ- 6
.
õõ6 7
m_UI
õõ7 ;
;
õõ; <
}
õõ= >
public
öö 
void
öö 
Enable
öö 
(
öö 
)
öö 
{
öö 
Get
öö "
(
öö" #
)
öö# $
.
öö$ %
Enable
öö% +
(
öö+ ,
)
öö, -
;
öö- .
}
öö/ 0
public
÷÷ 
void
÷÷ 
Disable
÷÷ 
(
÷÷ 
)
÷÷ 
{
÷÷ 
Get
÷÷  #
(
÷÷# $
)
÷÷$ %
.
÷÷% &
Disable
÷÷& -
(
÷÷- .
)
÷÷. /
;
÷÷/ 0
}
÷÷1 2
public
øø 
bool
øø 
enabled
øø 
=>
øø 
Get
øø "
(
øø" #
)
øø# $
.
øø$ %
enabled
øø% ,
;
øø, -
public
ùù 
static
ùù 
implicit
ùù 
operator
ùù '
InputActionMap
ùù( 6
(
ùù6 7
	UIActions
ùù7 @
set
ùùA D
)
ùùD E
{
ùùF G
return
ùùH N
set
ùùO R
.
ùùR S
Get
ùùS V
(
ùùV W
)
ùùW X
;
ùùX Y
}
ùùZ [
public
úú 
void
úú 
SetCallbacks
úú  
(
úú  !

IUIActions
úú! +
instance
úú, 4
)
úú4 5
{
ûû 	
if
üü 
(
üü 
	m_Wrapper
üü 
.
üü *
m_UIActionsCallbackInterface
üü 6
!=
üü7 9
null
üü: >
)
üü> ?
{
ýý 
	@Navigate
þþ 
.
þþ 
started
þþ !
-=
þþ" $
	m_Wrapper
þþ% .
.
þþ. /*
m_UIActionsCallbackInterface
þþ/ K
.
þþK L

OnNavigate
þþL V
;
þþV W
	@Navigate
ÿÿ 
.
ÿÿ 
	performed
ÿÿ #
-=
ÿÿ$ &
	m_Wrapper
ÿÿ' 0
.
ÿÿ0 1*
m_UIActionsCallbackInterface
ÿÿ1 M
.
ÿÿM N

OnNavigate
ÿÿN X
;
ÿÿX Y
	@Navigate
		 
.
		 
canceled
		 "
-=
		# %
	m_Wrapper
		& /
.
		/ 0*
m_UIActionsCallbackInterface
		0 L
.
		L M

OnNavigate
		M W
;
		W X
@Submit
		 
.
		 
started
		 
-=
		  "
	m_Wrapper
		# ,
.
		, -*
m_UIActionsCallbackInterface
		- I
.
		I J
OnSubmit
		J R
;
		R S
@Submit
		 
.
		 
	performed
		 !
-=
		" $
	m_Wrapper
		% .
.
		. /*
m_UIActionsCallbackInterface
		/ K
.
		K L
OnSubmit
		L T
;
		T U
@Submit
		 
.
		 
canceled
		  
-=
		! #
	m_Wrapper
		$ -
.
		- .*
m_UIActionsCallbackInterface
		. J
.
		J K
OnSubmit
		K S
;
		S T
@Cancel
		 
.
		 
started
		 
-=
		  "
	m_Wrapper
		# ,
.
		, -*
m_UIActionsCallbackInterface
		- I
.
		I J
OnCancel
		J R
;
		R S
@Cancel
		 
.
		 
	performed
		 !
-=
		" $
	m_Wrapper
		% .
.
		. /*
m_UIActionsCallbackInterface
		/ K
.
		K L
OnCancel
		L T
;
		T U
@Cancel
		 
.
		 
canceled
		  
-=
		! #
	m_Wrapper
		$ -
.
		- .*
m_UIActionsCallbackInterface
		. J
.
		J K
OnCancel
		K S
;
		S T
@Point
		 
.
		 
started
		 
-=
		 !
	m_Wrapper
		" +
.
		+ ,*
m_UIActionsCallbackInterface
		, H
.
		H I
OnPoint
		I P
;
		P Q
@Point
		 
.
		 
	performed
		  
-=
		! #
	m_Wrapper
		$ -
.
		- .*
m_UIActionsCallbackInterface
		. J
.
		J K
OnPoint
		K R
;
		R S
@Point
		 
.
		 
canceled
		 
-=
		  "
	m_Wrapper
		# ,
.
		, -*
m_UIActionsCallbackInterface
		- I
.
		I J
OnPoint
		J Q
;
		Q R
@Click
		 
.
		 
started
		 
-=
		 !
	m_Wrapper
		" +
.
		+ ,*
m_UIActionsCallbackInterface
		, H
.
		H I
OnClick
		I P
;
		P Q
@Click
		 
.
		 
	performed
		  
-=
		! #
	m_Wrapper
		$ -
.
		- .*
m_UIActionsCallbackInterface
		. J
.
		J K
OnClick
		K R
;
		R S
@Click
		 
.
		 
canceled
		 
-=
		  "
	m_Wrapper
		# ,
.
		, -*
m_UIActionsCallbackInterface
		- I
.
		I J
OnClick
		J Q
;
		Q R
@ScrollWheel
		 
.
		 
started
		 $
-=
		% '
	m_Wrapper
		( 1
.
		1 2*
m_UIActionsCallbackInterface
		2 N
.
		N O
OnScrollWheel
		O \
;
		\ ]
@ScrollWheel
		 
.
		 
	performed
		 &
-=
		' )
	m_Wrapper
		* 3
.
		3 4*
m_UIActionsCallbackInterface
		4 P
.
		P Q
OnScrollWheel
		Q ^
;
		^ _
@ScrollWheel
		 
.
		 
canceled
		 %
-=
		& (
	m_Wrapper
		) 2
.
		2 3*
m_UIActionsCallbackInterface
		3 O
.
		O P
OnScrollWheel
		P ]
;
		] ^
@MiddleClick
		 
.
		 
started
		 $
-=
		% '
	m_Wrapper
		( 1
.
		1 2*
m_UIActionsCallbackInterface
		2 N
.
		N O
OnMiddleClick
		O \
;
		\ ]
@MiddleClick
		 
.
		 
	performed
		 &
-=
		' )
	m_Wrapper
		* 3
.
		3 4*
m_UIActionsCallbackInterface
		4 P
.
		P Q
OnMiddleClick
		Q ^
;
		^ _
@MiddleClick
		 
.
		 
canceled
		 %
-=
		& (
	m_Wrapper
		) 2
.
		2 3*
m_UIActionsCallbackInterface
		3 O
.
		O P
OnMiddleClick
		P ]
;
		] ^
@RightClick
		 
.
		 
started
		 #
-=
		$ &
	m_Wrapper
		' 0
.
		0 1*
m_UIActionsCallbackInterface
		1 M
.
		M N
OnRightClick
		N Z
;
		Z [
@RightClick
		 
.
		 
	performed
		 %
-=
		& (
	m_Wrapper
		) 2
.
		2 3*
m_UIActionsCallbackInterface
		3 O
.
		O P
OnRightClick
		P \
;
		\ ]
@RightClick
		 
.
		 
canceled
		 $
-=
		% '
	m_Wrapper
		( 1
.
		1 2*
m_UIActionsCallbackInterface
		2 N
.
		N O
OnRightClick
		O [
;
		[ \$
@TrackedDevicePosition
		 &
.
		& '
started
		' .
-=
		/ 1
	m_Wrapper
		2 ;
.
		; <*
m_UIActionsCallbackInterface
		< X
.
		X Y%
OnTrackedDevicePosition
		Y p
;
		p q$
@TrackedDevicePosition
		 &
.
		& '
	performed
		' 0
-=
		1 3
	m_Wrapper
		4 =
.
		= >*
m_UIActionsCallbackInterface
		> Z
.
		Z [%
OnTrackedDevicePosition
		[ r
;
		r s$
@TrackedDevicePosition
		 &
.
		& '
canceled
		' /
-=
		0 2
	m_Wrapper
		3 <
.
		< =*
m_UIActionsCallbackInterface
		= Y
.
		Y Z%
OnTrackedDevicePosition
		Z q
;
		q r'
@TrackedDeviceOrientation
		 )
.
		) *
started
		* 1
-=
		2 4
	m_Wrapper
		5 >
.
		> ?*
m_UIActionsCallbackInterface
		? [
.
		[ \(
OnTrackedDeviceOrientation
		\ v
;
		v w'
@TrackedDeviceOrientation
		 )
.
		) *
	performed
		* 3
-=
		4 6
	m_Wrapper
		7 @
.
		@ A*
m_UIActionsCallbackInterface
		A ]
.
		] ^(
OnTrackedDeviceOrientation
		^ x
;
		x y'
@TrackedDeviceOrientation
		 )
.
		) *
canceled
		* 2
-=
		3 5
	m_Wrapper
		6 ?
.
		? @*
m_UIActionsCallbackInterface
		@ \
.
		\ ](
OnTrackedDeviceOrientation
		] w
;
		w x
}
		 
	m_Wrapper
		 
.
		 *
m_UIActionsCallbackInterface
		 2
=
		3 4
instance
		5 =
;
		= >
if
		 
(
		 
instance
		 
!=
		 
null
		  
)
		  !
{
		 
	@Navigate
 	 	 
.
 	 	 
started
 	 	 !
+=
 	 	" $
instance
 	 	% -
.
 	 	- .

OnNavigate
 	 	. 8
;
 	 	8 9
	@Navigate
¡	¡	 
.
¡	¡	 
	performed
¡	¡	 #
+=
¡	¡	$ &
instance
¡	¡	' /
.
¡	¡	/ 0

OnNavigate
¡	¡	0 :
;
¡	¡	: ;
	@Navigate
¢	¢	 
.
¢	¢	 
canceled
¢	¢	 "
+=
¢	¢	# %
instance
¢	¢	& .
.
¢	¢	. /

OnNavigate
¢	¢	/ 9
;
¢	¢	9 :
@Submit
£	£	 
.
£	£	 
started
£	£	 
+=
£	£	  "
instance
£	£	# +
.
£	£	+ ,
OnSubmit
£	£	, 4
;
£	£	4 5
@Submit
¤	¤	 
.
¤	¤	 
	performed
¤	¤	 !
+=
¤	¤	" $
instance
¤	¤	% -
.
¤	¤	- .
OnSubmit
¤	¤	. 6
;
¤	¤	6 7
@Submit
¥	¥	 
.
¥	¥	 
canceled
¥	¥	  
+=
¥	¥	! #
instance
¥	¥	$ ,
.
¥	¥	, -
OnSubmit
¥	¥	- 5
;
¥	¥	5 6
@Cancel
¦	¦	 
.
¦	¦	 
started
¦	¦	 
+=
¦	¦	  "
instance
¦	¦	# +
.
¦	¦	+ ,
OnCancel
¦	¦	, 4
;
¦	¦	4 5
@Cancel
§	§	 
.
§	§	 
	performed
§	§	 !
+=
§	§	" $
instance
§	§	% -
.
§	§	- .
OnCancel
§	§	. 6
;
§	§	6 7
@Cancel
¨	¨	 
.
¨	¨	 
canceled
¨	¨	  
+=
¨	¨	! #
instance
¨	¨	$ ,
.
¨	¨	, -
OnCancel
¨	¨	- 5
;
¨	¨	5 6
@Point
©	©	 
.
©	©	 
started
©	©	 
+=
©	©	 !
instance
©	©	" *
.
©	©	* +
OnPoint
©	©	+ 2
;
©	©	2 3
@Point
ª	ª	 
.
ª	ª	 
	performed
ª	ª	  
+=
ª	ª	! #
instance
ª	ª	$ ,
.
ª	ª	, -
OnPoint
ª	ª	- 4
;
ª	ª	4 5
@Point
«	«	 
.
«	«	 
canceled
«	«	 
+=
«	«	  "
instance
«	«	# +
.
«	«	+ ,
OnPoint
«	«	, 3
;
«	«	3 4
@Click
¬	¬	 
.
¬	¬	 
started
¬	¬	 
+=
¬	¬	 !
instance
¬	¬	" *
.
¬	¬	* +
OnClick
¬	¬	+ 2
;
¬	¬	2 3
@Click
­	­	 
.
­	­	 
	performed
­	­	  
+=
­	­	! #
instance
­	­	$ ,
.
­	­	, -
OnClick
­	­	- 4
;
­	­	4 5
@Click
®	®	 
.
®	®	 
canceled
®	®	 
+=
®	®	  "
instance
®	®	# +
.
®	®	+ ,
OnClick
®	®	, 3
;
®	®	3 4
@ScrollWheel
¯	¯	 
.
¯	¯	 
started
¯	¯	 $
+=
¯	¯	% '
instance
¯	¯	( 0
.
¯	¯	0 1
OnScrollWheel
¯	¯	1 >
;
¯	¯	> ?
@ScrollWheel
°	°	 
.
°	°	 
	performed
°	°	 &
+=
°	°	' )
instance
°	°	* 2
.
°	°	2 3
OnScrollWheel
°	°	3 @
;
°	°	@ A
@ScrollWheel
±	±	 
.
±	±	 
canceled
±	±	 %
+=
±	±	& (
instance
±	±	) 1
.
±	±	1 2
OnScrollWheel
±	±	2 ?
;
±	±	? @
@MiddleClick
²	²	 
.
²	²	 
started
²	²	 $
+=
²	²	% '
instance
²	²	( 0
.
²	²	0 1
OnMiddleClick
²	²	1 >
;
²	²	> ?
@MiddleClick
³	³	 
.
³	³	 
	performed
³	³	 &
+=
³	³	' )
instance
³	³	* 2
.
³	³	2 3
OnMiddleClick
³	³	3 @
;
³	³	@ A
@MiddleClick
´	´	 
.
´	´	 
canceled
´	´	 %
+=
´	´	& (
instance
´	´	) 1
.
´	´	1 2
OnMiddleClick
´	´	2 ?
;
´	´	? @
@RightClick
µ	µ	 
.
µ	µ	 
started
µ	µ	 #
+=
µ	µ	$ &
instance
µ	µ	' /
.
µ	µ	/ 0
OnRightClick
µ	µ	0 <
;
µ	µ	< =
@RightClick
¶	¶	 
.
¶	¶	 
	performed
¶	¶	 %
+=
¶	¶	& (
instance
¶	¶	) 1
.
¶	¶	1 2
OnRightClick
¶	¶	2 >
;
¶	¶	> ?
@RightClick
·	·	 
.
·	·	 
canceled
·	·	 $
+=
·	·	% '
instance
·	·	( 0
.
·	·	0 1
OnRightClick
·	·	1 =
;
·	·	= >$
@TrackedDevicePosition
¸	¸	 &
.
¸	¸	& '
started
¸	¸	' .
+=
¸	¸	/ 1
instance
¸	¸	2 :
.
¸	¸	: ;%
OnTrackedDevicePosition
¸	¸	; R
;
¸	¸	R S$
@TrackedDevicePosition
¹	¹	 &
.
¹	¹	& '
	performed
¹	¹	' 0
+=
¹	¹	1 3
instance
¹	¹	4 <
.
¹	¹	< =%
OnTrackedDevicePosition
¹	¹	= T
;
¹	¹	T U$
@TrackedDevicePosition
º	º	 &
.
º	º	& '
canceled
º	º	' /
+=
º	º	0 2
instance
º	º	3 ;
.
º	º	; <%
OnTrackedDevicePosition
º	º	< S
;
º	º	S T'
@TrackedDeviceOrientation
»	»	 )
.
»	»	) *
started
»	»	* 1
+=
»	»	2 4
instance
»	»	5 =
.
»	»	= >(
OnTrackedDeviceOrientation
»	»	> X
;
»	»	X Y'
@TrackedDeviceOrientation
¼	¼	 )
.
¼	¼	) *
	performed
¼	¼	* 3
+=
¼	¼	4 6
instance
¼	¼	7 ?
.
¼	¼	? @(
OnTrackedDeviceOrientation
¼	¼	@ Z
;
¼	¼	Z ['
@TrackedDeviceOrientation
½	½	 )
.
½	½	) *
canceled
½	½	* 2
+=
½	½	3 5
instance
½	½	6 >
.
½	½	> ?(
OnTrackedDeviceOrientation
½	½	? Y
;
½	½	Y Z
}
¾	¾	 
}
¿	¿	 	
}
À	À	 
public
Á	Á	 

	UIActions
Á	Á	 
@UI
Á	Á	 
=>
Á	Á	 
new
Á	Á	 
	UIActions
Á	Á	  )
(
Á	Á	) *
this
Á	Á	* .
)
Á	Á	. /
;
Á	Á	/ 0
private
Â	Â	 
int
Â	Â	 (
m_KeyboardMouseSchemeIndex
Â	Â	 *
=
Â	Â	+ ,
-
Â	Â	- .
$num
Â	Â	. /
;
Â	Â	/ 0
public
Ã	Ã	 
 
InputControlScheme
Ã	Ã	 !
KeyboardMouseScheme
Ã	Ã	 1
{
Ä	Ä	 
get
Å	Å	 
{
Æ	Æ	 	
if
Ç	Ç	 
(
Ç	Ç	 (
m_KeyboardMouseSchemeIndex
Ç	Ç	 *
==
Ç	Ç	+ -
-
Ç	Ç	. /
$num
Ç	Ç	/ 0
)
Ç	Ç	0 1(
m_KeyboardMouseSchemeIndex
Ç	Ç	2 L
=
Ç	Ç	M N
asset
Ç	Ç	O T
.
Ç	Ç	T U$
FindControlSchemeIndex
Ç	Ç	U k
(
Ç	Ç	k l
$str
Ç	Ç	l |
)
Ç	Ç	| }
;
Ç	Ç	} ~
return
È	È	 
asset
È	È	 
.
È	È	 
controlSchemes
È	È	 '
[
È	È	' ((
m_KeyboardMouseSchemeIndex
È	È	( B
]
È	È	B C
;
È	È	C D
}
É	É	 	
}
Ê	Ê	 
private
Ë	Ë	 
int
Ë	Ë	 "
m_GamepadSchemeIndex
Ë	Ë	 $
=
Ë	Ë	% &
-
Ë	Ë	' (
$num
Ë	Ë	( )
;
Ë	Ë	) *
public
Ì	Ì	 
 
InputControlScheme
Ì	Ì	 
GamepadScheme
Ì	Ì	 +
{
Í	Í	 
get
Î	Î	 
{
Ï	Ï	 	
if
Ð	Ð	 
(
Ð	Ð	 "
m_GamepadSchemeIndex
Ð	Ð	 $
==
Ð	Ð	% '
-
Ð	Ð	( )
$num
Ð	Ð	) *
)
Ð	Ð	* +"
m_GamepadSchemeIndex
Ð	Ð	, @
=
Ð	Ð	A B
asset
Ð	Ð	C H
.
Ð	Ð	H I$
FindControlSchemeIndex
Ð	Ð	I _
(
Ð	Ð	_ `
$str
Ð	Ð	` i
)
Ð	Ð	i j
;
Ð	Ð	j k
return
Ñ	Ñ	 
asset
Ñ	Ñ	 
.
Ñ	Ñ	 
controlSchemes
Ñ	Ñ	 '
[
Ñ	Ñ	' ("
m_GamepadSchemeIndex
Ñ	Ñ	( <
]
Ñ	Ñ	< =
;
Ñ	Ñ	= >
}
Ò	Ò	 	
}
Ó	Ó	 
private
Ô	Ô	 
int
Ô	Ô	  
m_TouchSchemeIndex
Ô	Ô	 "
=
Ô	Ô	# $
-
Ô	Ô	% &
$num
Ô	Ô	& '
;
Ô	Ô	' (
public
Õ	Õ	 
 
InputControlScheme
Õ	Õ	 
TouchScheme
Õ	Õ	 )
{
Ö	Ö	 
get
×	×	 
{
Ø	Ø	 	
if
Ù	Ù	 
(
Ù	Ù	  
m_TouchSchemeIndex
Ù	Ù	 "
==
Ù	Ù	# %
-
Ù	Ù	& '
$num
Ù	Ù	' (
)
Ù	Ù	( ) 
m_TouchSchemeIndex
Ù	Ù	* <
=
Ù	Ù	= >
asset
Ù	Ù	? D
.
Ù	Ù	D E$
FindControlSchemeIndex
Ù	Ù	E [
(
Ù	Ù	[ \
$str
Ù	Ù	\ c
)
Ù	Ù	c d
;
Ù	Ù	d e
return
Ú	Ú	 
asset
Ú	Ú	 
.
Ú	Ú	 
controlSchemes
Ú	Ú	 '
[
Ú	Ú	' ( 
m_TouchSchemeIndex
Ú	Ú	( :
]
Ú	Ú	: ;
;
Ú	Ú	; <
}
Û	Û	 	
}
Ü	Ü	 
private
Ý	Ý	 
int
Ý	Ý	 #
m_JoystickSchemeIndex
Ý	Ý	 %
=
Ý	Ý	& '
-
Ý	Ý	( )
$num
Ý	Ý	) *
;
Ý	Ý	* +
public
Þ	Þ	 
 
InputControlScheme
Þ	Þ	 
JoystickScheme
Þ	Þ	 ,
{
ß	ß	 
get
à	à	 
{
á	á	 	
if
â	â	 
(
â	â	 #
m_JoystickSchemeIndex
â	â	 %
==
â	â	& (
-
â	â	) *
$num
â	â	* +
)
â	â	+ ,#
m_JoystickSchemeIndex
â	â	- B
=
â	â	C D
asset
â	â	E J
.
â	â	J K$
FindControlSchemeIndex
â	â	K a
(
â	â	a b
$str
â	â	b l
)
â	â	l m
;
â	â	m n
return
ã	ã	 
asset
ã	ã	 
.
ã	ã	 
controlSchemes
ã	ã	 '
[
ã	ã	' (#
m_JoystickSchemeIndex
ã	ã	( =
]
ã	ã	= >
;
ã	ã	> ?
}
ä	ä	 	
}
å	å	 
private
æ	æ	 
int
æ	æ	 
m_XRSchemeIndex
æ	æ	 
=
æ	æ	  !
-
æ	æ	" #
$num
æ	æ	# $
;
æ	æ	$ %
public
ç	ç	 
 
InputControlScheme
ç	ç	 
XRScheme
ç	ç	 &
{
è	è	 
get
é	é	 
{
ê	ê	 	
if
ë	ë	 
(
ë	ë	 
m_XRSchemeIndex
ë	ë	 
==
ë	ë	  "
-
ë	ë	# $
$num
ë	ë	$ %
)
ë	ë	% &
m_XRSchemeIndex
ë	ë	' 6
=
ë	ë	7 8
asset
ë	ë	9 >
.
ë	ë	> ?$
FindControlSchemeIndex
ë	ë	? U
(
ë	ë	U V
$str
ë	ë	V Z
)
ë	ë	Z [
;
ë	ë	[ \
return
ì	ì	 
asset
ì	ì	 
.
ì	ì	 
controlSchemes
ì	ì	 '
[
ì	ì	' (
m_XRSchemeIndex
ì	ì	( 7
]
ì	ì	7 8
;
ì	ì	8 9
}
í	í	 	
}
î	î	 
public
ï	ï	 

	interface
ï	ï	 
IPlayerActions
ï	ï	 #
{
ð	ð	 
void
ñ	ñ	 
OnMove
ñ	ñ	 
(
ñ	ñ	 
InputAction
ñ	ñ	 
.
ñ	ñ	  
CallbackContext
ñ	ñ	  /
context
ñ	ñ	0 7
)
ñ	ñ	7 8
;
ñ	ñ	8 9
void
ò	ò	 
OnLook
ò	ò	 
(
ò	ò	 
InputAction
ò	ò	 
.
ò	ò	  
CallbackContext
ò	ò	  /
context
ò	ò	0 7
)
ò	ò	7 8
;
ò	ò	8 9
void
ó	ó	 
OnFire
ó	ó	 
(
ó	ó	 
InputAction
ó	ó	 
.
ó	ó	  
CallbackContext
ó	ó	  /
context
ó	ó	0 7
)
ó	ó	7 8
;
ó	ó	8 9
void
ô	ô	 !
OnSwitchPerspective
ô	ô	  
(
ô	ô	  !
InputAction
ô	ô	! ,
.
ô	ô	, -
CallbackContext
ô	ô	- <
context
ô	ô	= D
)
ô	ô	D E
;
ô	ô	E F
void
õ	õ	 
OnJump
õ	õ	 
(
õ	õ	 
InputAction
õ	õ	 
.
õ	õ	  
CallbackContext
õ	õ	  /
context
õ	õ	0 7
)
õ	õ	7 8
;
õ	õ	8 9
void
ö	ö	 
OnUse
ö	ö	 
(
ö	ö	 
InputAction
ö	ö	 
.
ö	ö	 
CallbackContext
ö	ö	 .
context
ö	ö	/ 6
)
ö	ö	6 7
;
ö	ö	7 8
void
÷	÷	 
OnReload
÷	÷	 
(
÷	÷	 
InputAction
÷	÷	 !
.
÷	÷	! "
CallbackContext
÷	÷	" 1
context
÷	÷	2 9
)
÷	÷	9 :
;
÷	÷	: ;
void
ø	ø	 
OnLockCursor
ø	ø	 
(
ø	ø	 
InputAction
ø	ø	 %
.
ø	ø	% &
CallbackContext
ø	ø	& 5
context
ø	ø	6 =
)
ø	ø	= >
;
ø	ø	> ?
void
ù	ù	 
OnAim
ù	ù	 
(
ù	ù	 
InputAction
ù	ù	 
.
ù	ù	 
CallbackContext
ù	ù	 .
context
ù	ù	/ 6
)
ù	ù	6 7
;
ù	ù	7 8
void
ú	ú	 
OnSprint
ú	ú	 
(
ú	ú	 
InputAction
ú	ú	 !
.
ú	ú	! "
CallbackContext
ú	ú	" 1
context
ú	ú	2 9
)
ú	ú	9 :
;
ú	ú	: ;
}
û	û	 
public
ü	ü	 

	interface
ü	ü	 

IUIActions
ü	ü	 
{
ý	ý	 
void
þ	þ	 

OnNavigate
þ	þ	 
(
þ	þ	 
InputAction
þ	þ	 #
.
þ	þ	# $
CallbackContext
þ	þ	$ 3
context
þ	þ	4 ;
)
þ	þ	; <
;
þ	þ	< =
void
ÿ	ÿ	 
OnSubmit
ÿ	ÿ	 
(
ÿ	ÿ	 
InputAction
ÿ	ÿ	 !
.
ÿ	ÿ	! "
CallbackContext
ÿ	ÿ	" 1
context
ÿ	ÿ	2 9
)
ÿ	ÿ	9 :
;
ÿ	ÿ	: ;
void


 
OnCancel


 
(


 
InputAction


 !
.


! "
CallbackContext


" 1
context


2 9
)


9 :
;


: ;
void


 
OnPoint


 
(


 
InputAction


  
.


  !
CallbackContext


! 0
context


1 8
)


8 9
;


9 :
void


 
OnClick


 
(


 
InputAction


  
.


  !
CallbackContext


! 0
context


1 8
)


8 9
;


9 :
void


 
OnScrollWheel


 
(


 
InputAction


 &
.


& '
CallbackContext


' 6
context


7 >
)


> ?
;


? @
void


 
OnMiddleClick


 
(


 
InputAction


 &
.


& '
CallbackContext


' 6
context


7 >
)


> ?
;


? @
void


 
OnRightClick


 
(


 
InputAction


 %
.


% &
CallbackContext


& 5
context


6 =
)


= >
;


> ?
void


 %
OnTrackedDevicePosition


 $
(


$ %
InputAction


% 0
.


0 1
CallbackContext


1 @
context


A H
)


H I
;


I J
void


 (
OnTrackedDeviceOrientation


 '
(


' (
InputAction


( 3
.


3 4
CallbackContext


4 C
context


D K
)


K L
;


L M
}


 
}

 ¸
]D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Anthony\Bosszombie.cs
public 
class 

Bosszombie 
: 
ZombieAI  
{ 
public 

fireballcollider 
fireballcollider ,
;, -
public 

int 
damageToDeal 
= 
- 
$num !
;! "
public		 

float		 
zombieSpeed		 
=		 
$num		  
;		  !
	protected

 
override

 
void

 
Chasing

 #
(

# $
)

$ %
{

% &
findrotation 
( 
) 
; 
nm 

.
 
speed 
= 
$num 
; 
if 

(
 
dist 
< 
$num 
) 
{ 
aiState 
= 
AIState 
. 
attack $
;$ %
animator 
. 
SetBool 
( 
$str %
,% &
true' +
)+ ,
;, -
} 	
} 
	protected 
override 
void 
Attack "
(" #
)# $
{$ %
findrotation 
( 
) 
; 
if 

(
 
dist 
> 
$num 
) 
{ 
aiState 
= 
AIState 
. 
chasing %
;% &
animator 
. 
SetBool 
( 
$str %
,% &
false' ,
), -
;- .
} 	
Vector3 
left 
= 
	transform  
.  !
position! )
+* +
	transform, 5
.5 6
forward6 =
*> ?
$num@ A
;A B
left 
. 
y 
+= 
$num 
; 
fireballcollider 
fireball !
=" #
Instantiate$ /
(/ 0
fireballcollider0 @
,@ A
leftA E
,E F
	transformF O
.O P
rotationP X
)X Y
;Y Z
fireball 
. 

Initialize 
( 
damageToDeal (
)( )
;) *
	Rigidbody 
rb 
= 
fireball 
.  
GetComponent  ,
<, -
	Rigidbody- 6
>6 7
(7 8
)8 9
;9 :
rb 

.
 
velocity 
= 
	transform 
.  
forward  '
*( )
$num* -
;- .
fireball 
. 
	transform 
. 
parent !
=! "
null" &
;& '
}   
	protected!! 
void!! 
findrotation!! 
(!!  
)!!  !
{!!! "
Vector3"" 
temp"" 
="" 
	transform""  
.""  !
position""! )
;"") *
temp## 
.## 
y## 
+=## 
$num## 
;## 
Vector3$$ 
relativePos$$ 
=$$ 
target$$ $
.$$$ %
position$$% -
-$$. /
temp$$0 4
;$$4 5

Quaternion%% 
rotation%% 
=%% 

Quaternion%% (
.%%( )
LookRotation%%) 5
(%%5 6
relativePos%%6 A
,%%A B
Vector3%%C J
.%%J K
up%%K M
)%%M N
;%%N O
	transform&& 
.&& 
rotation&& 
=&& 
rotation&& %
;&&% &
}'' 
})) ô
dD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\RaycastGun.cs
public 
class 

RaycastGun 
: 
GunBase !
{" #
public 

override 
void 
Fire 
( 
) 
{  !
base 
. 
Fire 
( 
) 
; 
int 
	ammoSpent 
= 
Math 
. 
Min  
(  !
CurrentAmmo! ,
,, -

Properties. 8
.8 9
ammoPerShot9 D
)D E
;E F
int 
bulletsPerShot 
= 
( 
int !
)! "
(" #
	ammoSpent# ,
*- .

Properties/ 9
.9 :
bulletsPerAmmo: H
)H I
;I J
CurrentAmmo 
-= 
	ammoSpent  
;  !
for 
( 
int 
i 
= 
$num 
; 
i 
< 
bulletsPerShot *
;* +
i, -
++- /
)/ 0
{1 2
var 
bullet 
= 
new 
Ray  
(  !
spawnTransform! /
./ 0
position0 8
,8 9
OffsetDirection: I
(I J
spawnTransformJ X
,X Y

PropertiesZ d
.d e

inaccuracye o
)o p
)p q
;q r
Debug 
. 
DrawRay 
( 
bullet  
.  !
origin! '
,' (
bullet) /
./ 0
	direction0 9
*: ;

Properties< F
.F G
maxDistanceG R
,R S
ColorT Y
.Y Z
redZ ]
,] ^
$num_ `
)` a
;a b
Physics 
. 
Raycast 
( 
bullet "
," #
out$ '

RaycastHit( 2
rayhit3 9
,9 :

Properties; E
.E F
maxDistanceF Q
)Q R
;R S
if 
( 
rayhit 
. 
collider 
!=  "
null# '
&&( *
rayhit+ 1
.1 2
collider2 :
.: ;
tag; >
!=? A
$strB J
)J K
{L M
var 
healthScript  
=! "
rayhit# )
.) *
collider* 2
.2 3

gameObject3 =
.= >
GetComponent> J
<J K
HealthK Q
>Q R
(R S
)S T
;T U
Debug 
. 
Log 
( 
$str !
+" #
healthScript$ 0
+1 2
$str3 <
+= >
(? @
int@ C
)C D
-D E

PropertiesE O
.O P
damageP V
+W X
$strY b
)b c
;c d
healthScript 
? 
. 
ModifyHealth *
(* +
(+ ,
int, /
)/ 0
-0 1

Properties1 ;
.; <
damage< B
)B C
;C D
} 
} 	
} 
} Í
[D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Anthony\MainMenu.cs
public 
class 
MainMenu 
: 
MonoBehaviour %
{ 
public 

string 
newGameScene 
; 
void		 
Start			 
(		 
)		 
{

 
} 
void 
Update	 
( 
) 
{ 
} 
public 

void 
NewGame 
( 
) 
{ 
SceneManager 
. 
	LoadScene 
( 
newGameScene +
)+ ,
;, -
} 
public 

void 
QuitGame 
( 
) 
{ 
Application 
. 
Quit 
( 
) 
; 
} 
} Ö
dD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\BulletBase.cs
public 
class 

BulletBase 
: 
MonoBehaviour '
{( )
private 
float 
damage 
; 
public 

void 

Initialize 
( 
Vector3 "
force# (
,( )
float* /
	timeAlive0 9
,9 :
float; @
damageA G
)G H
{I J
	Rigidbody 
rb 
= 
GetComponent #
<# $
	Rigidbody$ -
>- .
(. /
)/ 0
;0 1
rb 

.
 
AddForce 
( 
force 
, 
	ForceMode $
.$ %
Impulse% ,
), -
;- .
Destroy 
( 

gameObject 
, 
	timeAlive %
)% &
;& '
this 
. 
damage 
= 
damage 
; 
} 
void 
OnCollisionEnter	 
( 
	Collision #
	collision$ -
)- .
{/ 0
var 
tag 
= 
	collision 
. 
collider $
.$ %
tag% (
;( )
if 

( 
tag 
!= 
$str 
&& 
tag "
!=# %
$str& .
). /
{0 1
var 
healthScript 
= 
	collision (
.( )
collider) 1
.1 2

gameObject2 <
.< =
GetComponent= I
<I J
HealthJ P
>P Q
(Q R
)R S
;S T
healthScript 
? 
. 
ModifyHealth &
(& '
(' (
int( +
)+ ,
damage, 2
)2 3
;3 4
Destroy 
( 

gameObject 
) 
;  
} 	
} 
} Ý
^D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Nick\scripts\Health.cs
public 
class 
Health 
: 
MonoBehaviour #
{$ %
[		 
SerializeField		 
]		 
private		 
int		  
	maxHealth		! *
=		+ ,
$num		- 0
;		0 1
private

 
int

 
currentHealth

 
;

 
public 

event 
Action 
< 
float 
> 
OnHealthPctChanged 1
=2 3
delegate4 <
{= >
}? @
;@ A
public 

event 
Action 
OnDeath 
=  !
delegate" *
{+ ,
}- .
;. /
private 
void 
OnEnable 
( 
) 
{ 
currentHealth 
= 
	maxHealth !
;! "
OnHealthPctChanged 
+= 
percent %
=>& (
{) *
if 
( 
percent 
<= 
$num 
) 
OnDeath %
.% &
Invoke& ,
(, -
)- .
;. /
} 	
;	 

} 
public 

void 
ModifyHealth 
( 
int  
amount! '
)' (
{) *
currentHealth 
= 
Mathf 
. 
Clamp #
(# $
currentHealth$ 1
+2 3
amount4 :
,: ;
-< =
	maxHealth= F
,F G
	maxHealthH Q
)Q R
;R S
float 
currentHealthPct 
=  
(! "
float" '
)' (
currentHealth( 5
/6 7
	maxHealth8 A
;A B
OnHealthPctChanged 
( 
currentHealthPct +
)+ ,
;, -
} 
} À
cD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\GunPickup.cs
public 
class 
	GunPickup 
: 
MonoBehaviour &
{' (
public 

GunData 
gun 
; 
public 

float 
oscillateHeight  
=! "
$num# $
;$ %
public 

float 
oscillateFrequency #
=$ %
$num& '
;' (
public		 

float		 
rotationSpeed		 
=		  
$num		! "
;		" #
private

 
Vector3

 
startPos

 
;

 
public 

void 
Start 
( 
) 
{ 
startPos 
= 
	transform 
. 
position %
;% &
} 
public 

void 
Update 
( 
) 
{ 
var 
pos 
= 
	transform 
. 
position $
;$ %
pos 
. 
y 
= 
startPos 
. 
y 
+ 
oscillateHeight ,
*- .
Mathf/ 4
.4 5
Cos5 8
(8 9
oscillateFrequency9 K
*L M
TimeN R
.R S
timeS W
)W X
;X Y
	transform 
. 
position 
= 
pos  
;  !
	transform 
. 
Rotate 
( 
$num 
, 
rotationSpeed )
,) *
$num+ ,
), -
;- .
} 
public 

void 
OnTriggerEnter 
( 
Collider '
other( -
)- .
{/ 0
Debug 
. 
Log 
( 
$str 
) 
; 
if 

( 
other 
. 
tag 
== 
$str !
)! "
{# $
Debug 
. 
Log 
( 
$str #
)# $
;$ %

GunManager 

gunManager !
=" #
other$ )
.) *

gameObject* 4
.4 5
GetComponent5 A
<A B

GunManagerB L
>L M
(M N
)N O
;O P
if 
( 

gunManager 
== 
null "
)" #
{$ %
Debug 
. 
Log 
( 
$str $
+% &
other' ,
+- .
$str/ L
)L M
;M N
} 
else 
{ 

gunManager   
.   
AddGun   !
(  ! "
gun  " %
)  % &
;  & '
Destroy!! 
(!! 

gameObject!! "
)!!" #
;!!# $
}"" 
}## 	
}$$ 
}&& ï´
lD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\FPS Player Base\Input\MasterInput.cs
public		 
class		 
@MasterInput		 
:		 "
IInputActionCollection		 2
,		2 3
IDisposable		4 ?
{

 
public 

InputActionAsset 
asset !
{" #
get$ '
;' (
}) *
public 

@MasterInput 
( 
) 
{ 
asset 
= 
InputActionAsset  
.  !
FromJson! )
() *
$str	* 
)
 
;
 
m_Player
 
=
 
asset
 
.
 
FindActionMap
 &
(
& '
$str
' /
,
/ 0
throwIfNotFound
1 @
:
@ A
true
B F
)
F G
;
G H
m_Player_Move
 
=
 
m_Player
  
.
  !

FindAction
! +
(
+ ,
$str
, 2
,
2 3
throwIfNotFound
4 C
:
C D
true
E I
)
I J
;
J K
m_Player_Look
 
=
 
m_Player
  
.
  !

FindAction
! +
(
+ ,
$str
, 2
,
2 3
throwIfNotFound
4 C
:
C D
true
E I
)
I J
;
J K
m_Player_Fire
 
=
 
m_Player
  
.
  !

FindAction
! +
(
+ ,
$str
, 2
,
2 3
throwIfNotFound
4 C
:
C D
true
E I
)
I J
;
J K(
m_Player_SwitchPerspective
 "
=
# $
m_Player
% -
.
- .

FindAction
. 8
(
8 9
$str
9 M
,
M N
throwIfNotFound
O ^
:
^ _
true
` d
)
d e
;
e f
m_Player_Jump
 
=
 
m_Player
  
.
  !

FindAction
! +
(
+ ,
$str
, 2
,
2 3
throwIfNotFound
4 C
:
C D
true
E I
)
I J
;
J K
m_Player_Use
 
=
 
m_Player
 
.
  

FindAction
  *
(
* +
$str
+ 0
,
0 1
throwIfNotFound
2 A
:
A B
true
C G
)
G H
;
H I
m_Player_Reload
 
=
 
m_Player
 "
.
" #

FindAction
# -
(
- .
$str
. 6
,
6 7
throwIfNotFound
8 G
:
G H
true
I M
)
M N
;
N O!
m_Player_LockCursor
 
=
 
m_Player
 &
.
& '

FindAction
' 1
(
1 2
$str
2 ?
,
? @
throwIfNotFound
A P
:
P Q
true
R V
)
V W
;
W X
m_Player_Aim
   
=
   
m_Player
   
.
    

FindAction
    *
(
  * +
$str
  + 0
,
  0 1
throwIfNotFound
  2 A
:
  A B
true
  C G
)
  G H
;
  H I
m_Player_Sprint
¡¡ 
=
¡¡ 
m_Player
¡¡ "
.
¡¡" #

FindAction
¡¡# -
(
¡¡- .
$str
¡¡. 6
,
¡¡6 7
throwIfNotFound
¡¡8 G
:
¡¡G H
true
¡¡I M
)
¡¡M N
;
¡¡N O#
m_Player_SwitchWeapon
¢¢ 
=
¢¢ 
m_Player
¢¢  (
.
¢¢( )

FindAction
¢¢) 3
(
¢¢3 4
$str
¢¢4 B
,
¢¢B C
throwIfNotFound
¢¢D S
:
¢¢S T
true
¢¢U Y
)
¢¢Y Z
;
¢¢Z [
m_UI
¤¤ 
=
¤¤ 
asset
¤¤ 
.
¤¤ 
FindActionMap
¤¤ "
(
¤¤" #
$str
¤¤# '
,
¤¤' (
throwIfNotFound
¤¤) 8
:
¤¤8 9
true
¤¤: >
)
¤¤> ?
;
¤¤? @
m_UI_Navigate
¥¥ 
=
¥¥ 
m_UI
¥¥ 
.
¥¥ 

FindAction
¥¥ '
(
¥¥' (
$str
¥¥( 2
,
¥¥2 3
throwIfNotFound
¥¥4 C
:
¥¥C D
true
¥¥E I
)
¥¥I J
;
¥¥J K
m_UI_Submit
¦¦ 
=
¦¦ 
m_UI
¦¦ 
.
¦¦ 

FindAction
¦¦ %
(
¦¦% &
$str
¦¦& .
,
¦¦. /
throwIfNotFound
¦¦0 ?
:
¦¦? @
true
¦¦A E
)
¦¦E F
;
¦¦F G
m_UI_Cancel
§§ 
=
§§ 
m_UI
§§ 
.
§§ 

FindAction
§§ %
(
§§% &
$str
§§& .
,
§§. /
throwIfNotFound
§§0 ?
:
§§? @
true
§§A E
)
§§E F
;
§§F G

m_UI_Point
¨¨ 
=
¨¨ 
m_UI
¨¨ 
.
¨¨ 

FindAction
¨¨ $
(
¨¨$ %
$str
¨¨% ,
,
¨¨, -
throwIfNotFound
¨¨. =
:
¨¨= >
true
¨¨? C
)
¨¨C D
;
¨¨D E

m_UI_Click
©© 
=
©© 
m_UI
©© 
.
©© 

FindAction
©© $
(
©©$ %
$str
©©% ,
,
©©, -
throwIfNotFound
©©. =
:
©©= >
true
©©? C
)
©©C D
;
©©D E
m_UI_ScrollWheel
ªª 
=
ªª 
m_UI
ªª 
.
ªª  

FindAction
ªª  *
(
ªª* +
$str
ªª+ 8
,
ªª8 9
throwIfNotFound
ªª: I
:
ªªI J
true
ªªK O
)
ªªO P
;
ªªP Q
m_UI_MiddleClick
«« 
=
«« 
m_UI
«« 
.
««  

FindAction
««  *
(
««* +
$str
««+ 8
,
««8 9
throwIfNotFound
««: I
:
««I J
true
««K O
)
««O P
;
««P Q
m_UI_RightClick
¬¬ 
=
¬¬ 
m_UI
¬¬ 
.
¬¬ 

FindAction
¬¬ )
(
¬¬) *
$str
¬¬* 6
,
¬¬6 7
throwIfNotFound
¬¬8 G
:
¬¬G H
true
¬¬I M
)
¬¬M N
;
¬¬N O(
m_UI_TrackedDevicePosition
­­ "
=
­­# $
m_UI
­­% )
.
­­) *

FindAction
­­* 4
(
­­4 5
$str
­­5 L
,
­­L M
throwIfNotFound
­­N ]
:
­­] ^
true
­­_ c
)
­­c d
;
­­d e+
m_UI_TrackedDeviceOrientation
®® %
=
®®& '
m_UI
®®( ,
.
®®, -

FindAction
®®- 7
(
®®7 8
$str
®®8 R
,
®®R S
throwIfNotFound
®®T c
:
®®c d
true
®®e i
)
®®i j
;
®®j k
}
¯¯ 
public
±± 

void
±± 
Dispose
±± 
(
±± 
)
±± 
{
²² 
UnityEngine
³³ 
.
³³ 
Object
³³ 
.
³³ 
Destroy
³³ "
(
³³" #
asset
³³# (
)
³³( )
;
³³) *
}
´´ 
public
¶¶ 

InputBinding
¶¶ 
?
¶¶ 
bindingMask
¶¶ $
{
·· 
get
¸¸ 
=>
¸¸ 
asset
¸¸ 
.
¸¸ 
bindingMask
¸¸  
;
¸¸  !
set
¹¹ 
=>
¹¹ 
asset
¹¹ 
.
¹¹ 
bindingMask
¹¹  
=
¹¹! "
value
¹¹# (
;
¹¹( )
}
ºº 
public
¼¼ 

ReadOnlyArray
¼¼ 
<
¼¼ 
InputDevice
¼¼ $
>
¼¼$ %
?
¼¼% &
devices
¼¼' .
{
½½ 
get
¾¾ 
=>
¾¾ 
asset
¾¾ 
.
¾¾ 
devices
¾¾ 
;
¾¾ 
set
¿¿ 
=>
¿¿ 
asset
¿¿ 
.
¿¿ 
devices
¿¿ 
=
¿¿ 
value
¿¿ $
;
¿¿$ %
}
ÀÀ 
public
ÂÂ 

ReadOnlyArray
ÂÂ 
<
ÂÂ  
InputControlScheme
ÂÂ +
>
ÂÂ+ ,
controlSchemes
ÂÂ- ;
=>
ÂÂ< >
asset
ÂÂ? D
.
ÂÂD E
controlSchemes
ÂÂE S
;
ÂÂS T
public
ÄÄ 

bool
ÄÄ 
Contains
ÄÄ 
(
ÄÄ 
InputAction
ÄÄ $
action
ÄÄ% +
)
ÄÄ+ ,
{
ÅÅ 
return
ÆÆ 
asset
ÆÆ 
.
ÆÆ 
Contains
ÆÆ 
(
ÆÆ 
action
ÆÆ $
)
ÆÆ$ %
;
ÆÆ% &
}
ÇÇ 
public
ÉÉ 

IEnumerator
ÉÉ 
<
ÉÉ 
InputAction
ÉÉ "
>
ÉÉ" #
GetEnumerator
ÉÉ$ 1
(
ÉÉ1 2
)
ÉÉ2 3
{
ÊÊ 
return
ËË 
asset
ËË 
.
ËË 
GetEnumerator
ËË "
(
ËË" #
)
ËË# $
;
ËË$ %
}
ÌÌ 
IEnumerator
ÎÎ 
IEnumerable
ÎÎ 
.
ÎÎ 
GetEnumerator
ÎÎ )
(
ÎÎ) *
)
ÎÎ* +
{
ÏÏ 
return
ÐÐ 
GetEnumerator
ÐÐ 
(
ÐÐ 
)
ÐÐ 
;
ÐÐ 
}
ÑÑ 
public
ÓÓ 

void
ÓÓ 
Enable
ÓÓ 
(
ÓÓ 
)
ÓÓ 
{
ÔÔ 
asset
ÕÕ 
.
ÕÕ 
Enable
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
}
ÖÖ 
public
ØØ 

void
ØØ 
Disable
ØØ 
(
ØØ 
)
ØØ 
{
ÙÙ 
asset
ÚÚ 
.
ÚÚ 
Disable
ÚÚ 
(
ÚÚ 
)
ÚÚ 
;
ÚÚ 
}
ÛÛ 
private
ÞÞ 
readonly
ÞÞ 
InputActionMap
ÞÞ #
m_Player
ÞÞ$ ,
;
ÞÞ, -
private
ßß 
IPlayerActions
ßß .
 m_PlayerActionsCallbackInterface
ßß ;
;
ßß; <
private
àà 
readonly
àà 
InputAction
àà  
m_Player_Move
àà! .
;
àà. /
private
áá 
readonly
áá 
InputAction
áá  
m_Player_Look
áá! .
;
áá. /
private
ââ 
readonly
ââ 
InputAction
ââ  
m_Player_Fire
ââ! .
;
ââ. /
private
ãã 
readonly
ãã 
InputAction
ãã  (
m_Player_SwitchPerspective
ãã! ;
;
ãã; <
private
ää 
readonly
ää 
InputAction
ää  
m_Player_Jump
ää! .
;
ää. /
private
åå 
readonly
åå 
InputAction
åå  
m_Player_Use
åå! -
;
åå- .
private
ææ 
readonly
ææ 
InputAction
ææ  
m_Player_Reload
ææ! 0
;
ææ0 1
private
çç 
readonly
çç 
InputAction
çç  !
m_Player_LockCursor
çç! 4
;
çç4 5
private
èè 
readonly
èè 
InputAction
èè  
m_Player_Aim
èè! -
;
èè- .
private
éé 
readonly
éé 
InputAction
éé  
m_Player_Sprint
éé! 0
;
éé0 1
private
êê 
readonly
êê 
InputAction
êê  #
m_Player_SwitchWeapon
êê! 6
;
êê6 7
public
ëë 

struct
ëë 
PlayerActions
ëë 
{
ìì 
private
íí 
@MasterInput
íí 
	m_Wrapper
íí &
;
íí& '
public
îî 
PlayerActions
îî 
(
îî 
@MasterInput
îî )
wrapper
îî* 1
)
îî1 2
{
îî3 4
	m_Wrapper
îî5 >
=
îî? @
wrapper
îîA H
;
îîH I
}
îîJ K
public
ïï 
InputAction
ïï 
@Move
ïï  
=>
ïï! #
	m_Wrapper
ïï$ -
.
ïï- .
m_Player_Move
ïï. ;
;
ïï; <
public
ðð 
InputAction
ðð 
@Look
ðð  
=>
ðð! #
	m_Wrapper
ðð$ -
.
ðð- .
m_Player_Look
ðð. ;
;
ðð; <
public
ññ 
InputAction
ññ 
@Fire
ññ  
=>
ññ! #
	m_Wrapper
ññ$ -
.
ññ- .
m_Player_Fire
ññ. ;
;
ññ; <
public
òò 
InputAction
òò  
@SwitchPerspective
òò -
=>
òò. 0
	m_Wrapper
òò1 :
.
òò: ;(
m_Player_SwitchPerspective
òò; U
;
òòU V
public
óó 
InputAction
óó 
@Jump
óó  
=>
óó! #
	m_Wrapper
óó$ -
.
óó- .
m_Player_Jump
óó. ;
;
óó; <
public
ôô 
InputAction
ôô 
@Use
ôô 
=>
ôô  "
	m_Wrapper
ôô# ,
.
ôô, -
m_Player_Use
ôô- 9
;
ôô9 :
public
õõ 
InputAction
õõ 
@Reload
õõ "
=>
õõ# %
	m_Wrapper
õõ& /
.
õõ/ 0
m_Player_Reload
õõ0 ?
;
õõ? @
public
öö 
InputAction
öö 
@LockCursor
öö &
=>
öö' )
	m_Wrapper
öö* 3
.
öö3 4!
m_Player_LockCursor
öö4 G
;
ööG H
public
÷÷ 
InputAction
÷÷ 
@Aim
÷÷ 
=>
÷÷  "
	m_Wrapper
÷÷# ,
.
÷÷, -
m_Player_Aim
÷÷- 9
;
÷÷9 :
public
øø 
InputAction
øø 
@Sprint
øø "
=>
øø# %
	m_Wrapper
øø& /
.
øø/ 0
m_Player_Sprint
øø0 ?
;
øø? @
public
ùù 
InputAction
ùù 
@SwitchWeapon
ùù (
=>
ùù) +
	m_Wrapper
ùù, 5
.
ùù5 6#
m_Player_SwitchWeapon
ùù6 K
;
ùùK L
public
úú 
InputActionMap
úú 
Get
úú !
(
úú! "
)
úú" #
{
úú$ %
return
úú& ,
	m_Wrapper
úú- 6
.
úú6 7
m_Player
úú7 ?
;
úú? @
}
úúA B
public
ûû 
void
ûû 
Enable
ûû 
(
ûû 
)
ûû 
{
ûû 
Get
ûû "
(
ûû" #
)
ûû# $
.
ûû$ %
Enable
ûû% +
(
ûû+ ,
)
ûû, -
;
ûû- .
}
ûû/ 0
public
üü 
void
üü 
Disable
üü 
(
üü 
)
üü 
{
üü 
Get
üü  #
(
üü# $
)
üü$ %
.
üü% &
Disable
üü& -
(
üü- .
)
üü. /
;
üü/ 0
}
üü1 2
public
ýý 
bool
ýý 
enabled
ýý 
=>
ýý 
Get
ýý "
(
ýý" #
)
ýý# $
.
ýý$ %
enabled
ýý% ,
;
ýý, -
public
þþ 
static
þþ 
implicit
þþ 
operator
þþ '
InputActionMap
þþ( 6
(
þþ6 7
PlayerActions
þþ7 D
set
þþE H
)
þþH I
{
þþJ K
return
þþL R
set
þþS V
.
þþV W
Get
þþW Z
(
þþZ [
)
þþ[ \
;
þþ\ ]
}
þþ^ _
public
ÿÿ 
void
ÿÿ 
SetCallbacks
ÿÿ  
(
ÿÿ  !
IPlayerActions
ÿÿ! /
instance
ÿÿ0 8
)
ÿÿ8 9
{
		 	
if
		 
(
		 
	m_Wrapper
		 
.
		 .
 m_PlayerActionsCallbackInterface
		 :
!=
		; =
null
		> B
)
		B C
{
		 
@Move
		 
.
		 
started
		 
-=
		  
	m_Wrapper
		! *
.
		* +.
 m_PlayerActionsCallbackInterface
		+ K
.
		K L
OnMove
		L R
;
		R S
@Move
		 
.
		 
	performed
		 
-=
		  "
	m_Wrapper
		# ,
.
		, -.
 m_PlayerActionsCallbackInterface
		- M
.
		M N
OnMove
		N T
;
		T U
@Move
		 
.
		 
canceled
		 
-=
		 !
	m_Wrapper
		" +
.
		+ ,.
 m_PlayerActionsCallbackInterface
		, L
.
		L M
OnMove
		M S
;
		S T
@Look
		 
.
		 
started
		 
-=
		  
	m_Wrapper
		! *
.
		* +.
 m_PlayerActionsCallbackInterface
		+ K
.
		K L
OnLook
		L R
;
		R S
@Look
		 
.
		 
	performed
		 
-=
		  "
	m_Wrapper
		# ,
.
		, -.
 m_PlayerActionsCallbackInterface
		- M
.
		M N
OnLook
		N T
;
		T U
@Look
		 
.
		 
canceled
		 
-=
		 !
	m_Wrapper
		" +
.
		+ ,.
 m_PlayerActionsCallbackInterface
		, L
.
		L M
OnLook
		M S
;
		S T
@Fire
		 
.
		 
started
		 
-=
		  
	m_Wrapper
		! *
.
		* +.
 m_PlayerActionsCallbackInterface
		+ K
.
		K L
OnFire
		L R
;
		R S
@Fire
		 
.
		 
	performed
		 
-=
		  "
	m_Wrapper
		# ,
.
		, -.
 m_PlayerActionsCallbackInterface
		- M
.
		M N
OnFire
		N T
;
		T U
@Fire
		 
.
		 
canceled
		 
-=
		 !
	m_Wrapper
		" +
.
		+ ,.
 m_PlayerActionsCallbackInterface
		, L
.
		L M
OnFire
		M S
;
		S T 
@SwitchPerspective
		 "
.
		" #
started
		# *
-=
		+ -
	m_Wrapper
		. 7
.
		7 8.
 m_PlayerActionsCallbackInterface
		8 X
.
		X Y!
OnSwitchPerspective
		Y l
;
		l m 
@SwitchPerspective
		 "
.
		" #
	performed
		# ,
-=
		- /
	m_Wrapper
		0 9
.
		9 :.
 m_PlayerActionsCallbackInterface
		: Z
.
		Z [!
OnSwitchPerspective
		[ n
;
		n o 
@SwitchPerspective
		 "
.
		" #
canceled
		# +
-=
		, .
	m_Wrapper
		/ 8
.
		8 9.
 m_PlayerActionsCallbackInterface
		9 Y
.
		Y Z!
OnSwitchPerspective
		Z m
;
		m n
@Jump
		 
.
		 
started
		 
-=
		  
	m_Wrapper
		! *
.
		* +.
 m_PlayerActionsCallbackInterface
		+ K
.
		K L
OnJump
		L R
;
		R S
@Jump
		 
.
		 
	performed
		 
-=
		  "
	m_Wrapper
		# ,
.
		, -.
 m_PlayerActionsCallbackInterface
		- M
.
		M N
OnJump
		N T
;
		T U
@Jump
		 
.
		 
canceled
		 
-=
		 !
	m_Wrapper
		" +
.
		+ ,.
 m_PlayerActionsCallbackInterface
		, L
.
		L M
OnJump
		M S
;
		S T
@Use
		 
.
		 
started
		 
-=
		 
	m_Wrapper
		  )
.
		) *.
 m_PlayerActionsCallbackInterface
		* J
.
		J K
OnUse
		K P
;
		P Q
@Use
		 
.
		 
	performed
		 
-=
		 !
	m_Wrapper
		" +
.
		+ ,.
 m_PlayerActionsCallbackInterface
		, L
.
		L M
OnUse
		M R
;
		R S
@Use
		 
.
		 
canceled
		 
-=
		  
	m_Wrapper
		! *
.
		* +.
 m_PlayerActionsCallbackInterface
		+ K
.
		K L
OnUse
		L Q
;
		Q R
@Reload
		 
.
		 
started
		 
-=
		  "
	m_Wrapper
		# ,
.
		, -.
 m_PlayerActionsCallbackInterface
		- M
.
		M N
OnReload
		N V
;
		V W
@Reload
		 
.
		 
	performed
		 !
-=
		" $
	m_Wrapper
		% .
.
		. /.
 m_PlayerActionsCallbackInterface
		/ O
.
		O P
OnReload
		P X
;
		X Y
@Reload
		 
.
		 
canceled
		  
-=
		! #
	m_Wrapper
		$ -
.
		- ..
 m_PlayerActionsCallbackInterface
		. N
.
		N O
OnReload
		O W
;
		W X
@LockCursor
		 
.
		 
started
		 #
-=
		$ &
	m_Wrapper
		' 0
.
		0 1.
 m_PlayerActionsCallbackInterface
		1 Q
.
		Q R
OnLockCursor
		R ^
;
		^ _
@LockCursor
		 
.
		 
	performed
		 %
-=
		& (
	m_Wrapper
		) 2
.
		2 3.
 m_PlayerActionsCallbackInterface
		3 S
.
		S T
OnLockCursor
		T `
;
		` a
@LockCursor
		 
.
		 
canceled
		 $
-=
		% '
	m_Wrapper
		( 1
.
		1 2.
 m_PlayerActionsCallbackInterface
		2 R
.
		R S
OnLockCursor
		S _
;
		_ `
@Aim
		 
.
		 
started
		 
-=
		 
	m_Wrapper
		  )
.
		) *.
 m_PlayerActionsCallbackInterface
		* J
.
		J K
OnAim
		K P
;
		P Q
@Aim
		 
.
		 
	performed
		 
-=
		 !
	m_Wrapper
		" +
.
		+ ,.
 m_PlayerActionsCallbackInterface
		, L
.
		L M
OnAim
		M R
;
		R S
@Aim
		 
.
		 
canceled
		 
-=
		  
	m_Wrapper
		! *
.
		* +.
 m_PlayerActionsCallbackInterface
		+ K
.
		K L
OnAim
		L Q
;
		Q R
@Sprint
		 
.
		 
started
		 
-=
		  "
	m_Wrapper
		# ,
.
		, -.
 m_PlayerActionsCallbackInterface
		- M
.
		M N
OnSprint
		N V
;
		V W
@Sprint
		 
.
		 
	performed
		 !
-=
		" $
	m_Wrapper
		% .
.
		. /.
 m_PlayerActionsCallbackInterface
		/ O
.
		O P
OnSprint
		P X
;
		X Y
@Sprint
 	 	 
.
 	 	 
canceled
 	 	  
-=
 	 	! #
	m_Wrapper
 	 	$ -
.
 	 	- ..
 m_PlayerActionsCallbackInterface
 	 	. N
.
 	 	N O
OnSprint
 	 	O W
;
 	 	W X
@SwitchWeapon
¡	¡	 
.
¡	¡	 
started
¡	¡	 %
-=
¡	¡	& (
	m_Wrapper
¡	¡	) 2
.
¡	¡	2 3.
 m_PlayerActionsCallbackInterface
¡	¡	3 S
.
¡	¡	S T
OnSwitchWeapon
¡	¡	T b
;
¡	¡	b c
@SwitchWeapon
¢	¢	 
.
¢	¢	 
	performed
¢	¢	 '
-=
¢	¢	( *
	m_Wrapper
¢	¢	+ 4
.
¢	¢	4 5.
 m_PlayerActionsCallbackInterface
¢	¢	5 U
.
¢	¢	U V
OnSwitchWeapon
¢	¢	V d
;
¢	¢	d e
@SwitchWeapon
£	£	 
.
£	£	 
canceled
£	£	 &
-=
£	£	' )
	m_Wrapper
£	£	* 3
.
£	£	3 4.
 m_PlayerActionsCallbackInterface
£	£	4 T
.
£	£	T U
OnSwitchWeapon
£	£	U c
;
£	£	c d
}
¤	¤	 
	m_Wrapper
¥	¥	 
.
¥	¥	 .
 m_PlayerActionsCallbackInterface
¥	¥	 6
=
¥	¥	7 8
instance
¥	¥	9 A
;
¥	¥	A B
if
¦	¦	 
(
¦	¦	 
instance
¦	¦	 
!=
¦	¦	 
null
¦	¦	  
)
¦	¦	  !
{
§	§	 
@Move
¨	¨	 
.
¨	¨	 
started
¨	¨	 
+=
¨	¨	  
instance
¨	¨	! )
.
¨	¨	) *
OnMove
¨	¨	* 0
;
¨	¨	0 1
@Move
©	©	 
.
©	©	 
	performed
©	©	 
+=
©	©	  "
instance
©	©	# +
.
©	©	+ ,
OnMove
©	©	, 2
;
©	©	2 3
@Move
ª	ª	 
.
ª	ª	 
canceled
ª	ª	 
+=
ª	ª	 !
instance
ª	ª	" *
.
ª	ª	* +
OnMove
ª	ª	+ 1
;
ª	ª	1 2
@Look
«	«	 
.
«	«	 
started
«	«	 
+=
«	«	  
instance
«	«	! )
.
«	«	) *
OnLook
«	«	* 0
;
«	«	0 1
@Look
¬	¬	 
.
¬	¬	 
	performed
¬	¬	 
+=
¬	¬	  "
instance
¬	¬	# +
.
¬	¬	+ ,
OnLook
¬	¬	, 2
;
¬	¬	2 3
@Look
­	­	 
.
­	­	 
canceled
­	­	 
+=
­	­	 !
instance
­	­	" *
.
­	­	* +
OnLook
­	­	+ 1
;
­	­	1 2
@Fire
®	®	 
.
®	®	 
started
®	®	 
+=
®	®	  
instance
®	®	! )
.
®	®	) *
OnFire
®	®	* 0
;
®	®	0 1
@Fire
¯	¯	 
.
¯	¯	 
	performed
¯	¯	 
+=
¯	¯	  "
instance
¯	¯	# +
.
¯	¯	+ ,
OnFire
¯	¯	, 2
;
¯	¯	2 3
@Fire
°	°	 
.
°	°	 
canceled
°	°	 
+=
°	°	 !
instance
°	°	" *
.
°	°	* +
OnFire
°	°	+ 1
;
°	°	1 2 
@SwitchPerspective
±	±	 "
.
±	±	" #
started
±	±	# *
+=
±	±	+ -
instance
±	±	. 6
.
±	±	6 7!
OnSwitchPerspective
±	±	7 J
;
±	±	J K 
@SwitchPerspective
²	²	 "
.
²	²	" #
	performed
²	²	# ,
+=
²	²	- /
instance
²	²	0 8
.
²	²	8 9!
OnSwitchPerspective
²	²	9 L
;
²	²	L M 
@SwitchPerspective
³	³	 "
.
³	³	" #
canceled
³	³	# +
+=
³	³	, .
instance
³	³	/ 7
.
³	³	7 8!
OnSwitchPerspective
³	³	8 K
;
³	³	K L
@Jump
´	´	 
.
´	´	 
started
´	´	 
+=
´	´	  
instance
´	´	! )
.
´	´	) *
OnJump
´	´	* 0
;
´	´	0 1
@Jump
µ	µ	 
.
µ	µ	 
	performed
µ	µ	 
+=
µ	µ	  "
instance
µ	µ	# +
.
µ	µ	+ ,
OnJump
µ	µ	, 2
;
µ	µ	2 3
@Jump
¶	¶	 
.
¶	¶	 
canceled
¶	¶	 
+=
¶	¶	 !
instance
¶	¶	" *
.
¶	¶	* +
OnJump
¶	¶	+ 1
;
¶	¶	1 2
@Use
·	·	 
.
·	·	 
started
·	·	 
+=
·	·	 
instance
·	·	  (
.
·	·	( )
OnUse
·	·	) .
;
·	·	. /
@Use
¸	¸	 
.
¸	¸	 
	performed
¸	¸	 
+=
¸	¸	 !
instance
¸	¸	" *
.
¸	¸	* +
OnUse
¸	¸	+ 0
;
¸	¸	0 1
@Use
¹	¹	 
.
¹	¹	 
canceled
¹	¹	 
+=
¹	¹	  
instance
¹	¹	! )
.
¹	¹	) *
OnUse
¹	¹	* /
;
¹	¹	/ 0
@Reload
º	º	 
.
º	º	 
started
º	º	 
+=
º	º	  "
instance
º	º	# +
.
º	º	+ ,
OnReload
º	º	, 4
;
º	º	4 5
@Reload
»	»	 
.
»	»	 
	performed
»	»	 !
+=
»	»	" $
instance
»	»	% -
.
»	»	- .
OnReload
»	»	. 6
;
»	»	6 7
@Reload
¼	¼	 
.
¼	¼	 
canceled
¼	¼	  
+=
¼	¼	! #
instance
¼	¼	$ ,
.
¼	¼	, -
OnReload
¼	¼	- 5
;
¼	¼	5 6
@LockCursor
½	½	 
.
½	½	 
started
½	½	 #
+=
½	½	$ &
instance
½	½	' /
.
½	½	/ 0
OnLockCursor
½	½	0 <
;
½	½	< =
@LockCursor
¾	¾	 
.
¾	¾	 
	performed
¾	¾	 %
+=
¾	¾	& (
instance
¾	¾	) 1
.
¾	¾	1 2
OnLockCursor
¾	¾	2 >
;
¾	¾	> ?
@LockCursor
¿	¿	 
.
¿	¿	 
canceled
¿	¿	 $
+=
¿	¿	% '
instance
¿	¿	( 0
.
¿	¿	0 1
OnLockCursor
¿	¿	1 =
;
¿	¿	= >
@Aim
À	À	 
.
À	À	 
started
À	À	 
+=
À	À	 
instance
À	À	  (
.
À	À	( )
OnAim
À	À	) .
;
À	À	. /
@Aim
Á	Á	 
.
Á	Á	 
	performed
Á	Á	 
+=
Á	Á	 !
instance
Á	Á	" *
.
Á	Á	* +
OnAim
Á	Á	+ 0
;
Á	Á	0 1
@Aim
Â	Â	 
.
Â	Â	 
canceled
Â	Â	 
+=
Â	Â	  
instance
Â	Â	! )
.
Â	Â	) *
OnAim
Â	Â	* /
;
Â	Â	/ 0
@Sprint
Ã	Ã	 
.
Ã	Ã	 
started
Ã	Ã	 
+=
Ã	Ã	  "
instance
Ã	Ã	# +
.
Ã	Ã	+ ,
OnSprint
Ã	Ã	, 4
;
Ã	Ã	4 5
@Sprint
Ä	Ä	 
.
Ä	Ä	 
	performed
Ä	Ä	 !
+=
Ä	Ä	" $
instance
Ä	Ä	% -
.
Ä	Ä	- .
OnSprint
Ä	Ä	. 6
;
Ä	Ä	6 7
@Sprint
Å	Å	 
.
Å	Å	 
canceled
Å	Å	  
+=
Å	Å	! #
instance
Å	Å	$ ,
.
Å	Å	, -
OnSprint
Å	Å	- 5
;
Å	Å	5 6
@SwitchWeapon
Æ	Æ	 
.
Æ	Æ	 
started
Æ	Æ	 %
+=
Æ	Æ	& (
instance
Æ	Æ	) 1
.
Æ	Æ	1 2
OnSwitchWeapon
Æ	Æ	2 @
;
Æ	Æ	@ A
@SwitchWeapon
Ç	Ç	 
.
Ç	Ç	 
	performed
Ç	Ç	 '
+=
Ç	Ç	( *
instance
Ç	Ç	+ 3
.
Ç	Ç	3 4
OnSwitchWeapon
Ç	Ç	4 B
;
Ç	Ç	B C
@SwitchWeapon
È	È	 
.
È	È	 
canceled
È	È	 &
+=
È	È	' )
instance
È	È	* 2
.
È	È	2 3
OnSwitchWeapon
È	È	3 A
;
È	È	A B
}
É	É	 
}
Ê	Ê	 	
}
Ë	Ë	 
public
Ì	Ì	 

PlayerActions
Ì	Ì	 
@Player
Ì	Ì	  
=>
Ì	Ì	! #
new
Ì	Ì	$ '
PlayerActions
Ì	Ì	( 5
(
Ì	Ì	5 6
this
Ì	Ì	6 :
)
Ì	Ì	: ;
;
Ì	Ì	; <
private
Ï	Ï	 
readonly
Ï	Ï	 
InputActionMap
Ï	Ï	 #
m_UI
Ï	Ï	$ (
;
Ï	Ï	( )
private
Ð	Ð	 

IUIActions
Ð	Ð	 *
m_UIActionsCallbackInterface
Ð	Ð	 3
;
Ð	Ð	3 4
private
Ñ	Ñ	 
readonly
Ñ	Ñ	 
InputAction
Ñ	Ñ	  
m_UI_Navigate
Ñ	Ñ	! .
;
Ñ	Ñ	. /
private
Ò	Ò	 
readonly
Ò	Ò	 
InputAction
Ò	Ò	  
m_UI_Submit
Ò	Ò	! ,
;
Ò	Ò	, -
private
Ó	Ó	 
readonly
Ó	Ó	 
InputAction
Ó	Ó	  
m_UI_Cancel
Ó	Ó	! ,
;
Ó	Ó	, -
private
Ô	Ô	 
readonly
Ô	Ô	 
InputAction
Ô	Ô	  

m_UI_Point
Ô	Ô	! +
;
Ô	Ô	+ ,
private
Õ	Õ	 
readonly
Õ	Õ	 
InputAction
Õ	Õ	  

m_UI_Click
Õ	Õ	! +
;
Õ	Õ	+ ,
private
Ö	Ö	 
readonly
Ö	Ö	 
InputAction
Ö	Ö	  
m_UI_ScrollWheel
Ö	Ö	! 1
;
Ö	Ö	1 2
private
×	×	 
readonly
×	×	 
InputAction
×	×	  
m_UI_MiddleClick
×	×	! 1
;
×	×	1 2
private
Ø	Ø	 
readonly
Ø	Ø	 
InputAction
Ø	Ø	  
m_UI_RightClick
Ø	Ø	! 0
;
Ø	Ø	0 1
private
Ù	Ù	 
readonly
Ù	Ù	 
InputAction
Ù	Ù	  (
m_UI_TrackedDevicePosition
Ù	Ù	! ;
;
Ù	Ù	; <
private
Ú	Ú	 
readonly
Ú	Ú	 
InputAction
Ú	Ú	  +
m_UI_TrackedDeviceOrientation
Ú	Ú	! >
;
Ú	Ú	> ?
public
Û	Û	 

struct
Û	Û	 
	UIActions
Û	Û	 
{
Ü	Ü	 
private
Ý	Ý	 
@MasterInput
Ý	Ý	 
	m_Wrapper
Ý	Ý	 &
;
Ý	Ý	& '
public
Þ	Þ	 
	UIActions
Þ	Þ	 
(
Þ	Þ	 
@MasterInput
Þ	Þ	 %
wrapper
Þ	Þ	& -
)
Þ	Þ	- .
{
Þ	Þ	/ 0
	m_Wrapper
Þ	Þ	1 :
=
Þ	Þ	; <
wrapper
Þ	Þ	= D
;
Þ	Þ	D E
}
Þ	Þ	F G
public
ß	ß	 
InputAction
ß	ß	 
	@Navigate
ß	ß	 $
=>
ß	ß	% '
	m_Wrapper
ß	ß	( 1
.
ß	ß	1 2
m_UI_Navigate
ß	ß	2 ?
;
ß	ß	? @
public
à	à	 
InputAction
à	à	 
@Submit
à	à	 "
=>
à	à	# %
	m_Wrapper
à	à	& /
.
à	à	/ 0
m_UI_Submit
à	à	0 ;
;
à	à	; <
public
á	á	 
InputAction
á	á	 
@Cancel
á	á	 "
=>
á	á	# %
	m_Wrapper
á	á	& /
.
á	á	/ 0
m_UI_Cancel
á	á	0 ;
;
á	á	; <
public
â	â	 
InputAction
â	â	 
@Point
â	â	 !
=>
â	â	" $
	m_Wrapper
â	â	% .
.
â	â	. /

m_UI_Point
â	â	/ 9
;
â	â	9 :
public
ã	ã	 
InputAction
ã	ã	 
@Click
ã	ã	 !
=>
ã	ã	" $
	m_Wrapper
ã	ã	% .
.
ã	ã	. /

m_UI_Click
ã	ã	/ 9
;
ã	ã	9 :
public
ä	ä	 
InputAction
ä	ä	 
@ScrollWheel
ä	ä	 '
=>
ä	ä	( *
	m_Wrapper
ä	ä	+ 4
.
ä	ä	4 5
m_UI_ScrollWheel
ä	ä	5 E
;
ä	ä	E F
public
å	å	 
InputAction
å	å	 
@MiddleClick
å	å	 '
=>
å	å	( *
	m_Wrapper
å	å	+ 4
.
å	å	4 5
m_UI_MiddleClick
å	å	5 E
;
å	å	E F
public
æ	æ	 
InputAction
æ	æ	 
@RightClick
æ	æ	 &
=>
æ	æ	' )
	m_Wrapper
æ	æ	* 3
.
æ	æ	3 4
m_UI_RightClick
æ	æ	4 C
;
æ	æ	C D
public
ç	ç	 
InputAction
ç	ç	 $
@TrackedDevicePosition
ç	ç	 1
=>
ç	ç	2 4
	m_Wrapper
ç	ç	5 >
.
ç	ç	> ?(
m_UI_TrackedDevicePosition
ç	ç	? Y
;
ç	ç	Y Z
public
è	è	 
InputAction
è	è	 '
@TrackedDeviceOrientation
è	è	 4
=>
è	è	5 7
	m_Wrapper
è	è	8 A
.
è	è	A B+
m_UI_TrackedDeviceOrientation
è	è	B _
;
è	è	_ `
public
é	é	 
InputActionMap
é	é	 
Get
é	é	 !
(
é	é	! "
)
é	é	" #
{
é	é	$ %
return
é	é	& ,
	m_Wrapper
é	é	- 6
.
é	é	6 7
m_UI
é	é	7 ;
;
é	é	; <
}
é	é	= >
public
ê	ê	 
void
ê	ê	 
Enable
ê	ê	 
(
ê	ê	 
)
ê	ê	 
{
ê	ê	 
Get
ê	ê	 "
(
ê	ê	" #
)
ê	ê	# $
.
ê	ê	$ %
Enable
ê	ê	% +
(
ê	ê	+ ,
)
ê	ê	, -
;
ê	ê	- .
}
ê	ê	/ 0
public
ë	ë	 
void
ë	ë	 
Disable
ë	ë	 
(
ë	ë	 
)
ë	ë	 
{
ë	ë	 
Get
ë	ë	  #
(
ë	ë	# $
)
ë	ë	$ %
.
ë	ë	% &
Disable
ë	ë	& -
(
ë	ë	- .
)
ë	ë	. /
;
ë	ë	/ 0
}
ë	ë	1 2
public
ì	ì	 
bool
ì	ì	 
enabled
ì	ì	 
=>
ì	ì	 
Get
ì	ì	 "
(
ì	ì	" #
)
ì	ì	# $
.
ì	ì	$ %
enabled
ì	ì	% ,
;
ì	ì	, -
public
í	í	 
static
í	í	 
implicit
í	í	 
operator
í	í	 '
InputActionMap
í	í	( 6
(
í	í	6 7
	UIActions
í	í	7 @
set
í	í	A D
)
í	í	D E
{
í	í	F G
return
í	í	H N
set
í	í	O R
.
í	í	R S
Get
í	í	S V
(
í	í	V W
)
í	í	W X
;
í	í	X Y
}
í	í	Z [
public
î	î	 
void
î	î	 
SetCallbacks
î	î	  
(
î	î	  !

IUIActions
î	î	! +
instance
î	î	, 4
)
î	î	4 5
{
ï	ï	 	
if
ð	ð	 
(
ð	ð	 
	m_Wrapper
ð	ð	 
.
ð	ð	 *
m_UIActionsCallbackInterface
ð	ð	 6
!=
ð	ð	7 9
null
ð	ð	: >
)
ð	ð	> ?
{
ñ	ñ	 
	@Navigate
ò	ò	 
.
ò	ò	 
started
ò	ò	 !
-=
ò	ò	" $
	m_Wrapper
ò	ò	% .
.
ò	ò	. /*
m_UIActionsCallbackInterface
ò	ò	/ K
.
ò	ò	K L

OnNavigate
ò	ò	L V
;
ò	ò	V W
	@Navigate
ó	ó	 
.
ó	ó	 
	performed
ó	ó	 #
-=
ó	ó	$ &
	m_Wrapper
ó	ó	' 0
.
ó	ó	0 1*
m_UIActionsCallbackInterface
ó	ó	1 M
.
ó	ó	M N

OnNavigate
ó	ó	N X
;
ó	ó	X Y
	@Navigate
ô	ô	 
.
ô	ô	 
canceled
ô	ô	 "
-=
ô	ô	# %
	m_Wrapper
ô	ô	& /
.
ô	ô	/ 0*
m_UIActionsCallbackInterface
ô	ô	0 L
.
ô	ô	L M

OnNavigate
ô	ô	M W
;
ô	ô	W X
@Submit
õ	õ	 
.
õ	õ	 
started
õ	õ	 
-=
õ	õ	  "
	m_Wrapper
õ	õ	# ,
.
õ	õ	, -*
m_UIActionsCallbackInterface
õ	õ	- I
.
õ	õ	I J
OnSubmit
õ	õ	J R
;
õ	õ	R S
@Submit
ö	ö	 
.
ö	ö	 
	performed
ö	ö	 !
-=
ö	ö	" $
	m_Wrapper
ö	ö	% .
.
ö	ö	. /*
m_UIActionsCallbackInterface
ö	ö	/ K
.
ö	ö	K L
OnSubmit
ö	ö	L T
;
ö	ö	T U
@Submit
÷	÷	 
.
÷	÷	 
canceled
÷	÷	  
-=
÷	÷	! #
	m_Wrapper
÷	÷	$ -
.
÷	÷	- .*
m_UIActionsCallbackInterface
÷	÷	. J
.
÷	÷	J K
OnSubmit
÷	÷	K S
;
÷	÷	S T
@Cancel
ø	ø	 
.
ø	ø	 
started
ø	ø	 
-=
ø	ø	  "
	m_Wrapper
ø	ø	# ,
.
ø	ø	, -*
m_UIActionsCallbackInterface
ø	ø	- I
.
ø	ø	I J
OnCancel
ø	ø	J R
;
ø	ø	R S
@Cancel
ù	ù	 
.
ù	ù	 
	performed
ù	ù	 !
-=
ù	ù	" $
	m_Wrapper
ù	ù	% .
.
ù	ù	. /*
m_UIActionsCallbackInterface
ù	ù	/ K
.
ù	ù	K L
OnCancel
ù	ù	L T
;
ù	ù	T U
@Cancel
ú	ú	 
.
ú	ú	 
canceled
ú	ú	  
-=
ú	ú	! #
	m_Wrapper
ú	ú	$ -
.
ú	ú	- .*
m_UIActionsCallbackInterface
ú	ú	. J
.
ú	ú	J K
OnCancel
ú	ú	K S
;
ú	ú	S T
@Point
û	û	 
.
û	û	 
started
û	û	 
-=
û	û	 !
	m_Wrapper
û	û	" +
.
û	û	+ ,*
m_UIActionsCallbackInterface
û	û	, H
.
û	û	H I
OnPoint
û	û	I P
;
û	û	P Q
@Point
ü	ü	 
.
ü	ü	 
	performed
ü	ü	  
-=
ü	ü	! #
	m_Wrapper
ü	ü	$ -
.
ü	ü	- .*
m_UIActionsCallbackInterface
ü	ü	. J
.
ü	ü	J K
OnPoint
ü	ü	K R
;
ü	ü	R S
@Point
ý	ý	 
.
ý	ý	 
canceled
ý	ý	 
-=
ý	ý	  "
	m_Wrapper
ý	ý	# ,
.
ý	ý	, -*
m_UIActionsCallbackInterface
ý	ý	- I
.
ý	ý	I J
OnPoint
ý	ý	J Q
;
ý	ý	Q R
@Click
þ	þ	 
.
þ	þ	 
started
þ	þ	 
-=
þ	þ	 !
	m_Wrapper
þ	þ	" +
.
þ	þ	+ ,*
m_UIActionsCallbackInterface
þ	þ	, H
.
þ	þ	H I
OnClick
þ	þ	I P
;
þ	þ	P Q
@Click
ÿ	ÿ	 
.
ÿ	ÿ	 
	performed
ÿ	ÿ	  
-=
ÿ	ÿ	! #
	m_Wrapper
ÿ	ÿ	$ -
.
ÿ	ÿ	- .*
m_UIActionsCallbackInterface
ÿ	ÿ	. J
.
ÿ	ÿ	J K
OnClick
ÿ	ÿ	K R
;
ÿ	ÿ	R S
@Click


 
.


 
canceled


 
-=


  "
	m_Wrapper


# ,
.


, -*
m_UIActionsCallbackInterface


- I
.


I J
OnClick


J Q
;


Q R
@ScrollWheel


 
.


 
started


 $
-=


% '
	m_Wrapper


( 1
.


1 2*
m_UIActionsCallbackInterface


2 N
.


N O
OnScrollWheel


O \
;


\ ]
@ScrollWheel


 
.


 
	performed


 &
-=


' )
	m_Wrapper


* 3
.


3 4*
m_UIActionsCallbackInterface


4 P
.


P Q
OnScrollWheel


Q ^
;


^ _
@ScrollWheel


 
.


 
canceled


 %
-=


& (
	m_Wrapper


) 2
.


2 3*
m_UIActionsCallbackInterface


3 O
.


O P
OnScrollWheel


P ]
;


] ^
@MiddleClick


 
.


 
started


 $
-=


% '
	m_Wrapper


( 1
.


1 2*
m_UIActionsCallbackInterface


2 N
.


N O
OnMiddleClick


O \
;


\ ]
@MiddleClick


 
.


 
	performed


 &
-=


' )
	m_Wrapper


* 3
.


3 4*
m_UIActionsCallbackInterface


4 P
.


P Q
OnMiddleClick


Q ^
;


^ _
@MiddleClick


 
.


 
canceled


 %
-=


& (
	m_Wrapper


) 2
.


2 3*
m_UIActionsCallbackInterface


3 O
.


O P
OnMiddleClick


P ]
;


] ^
@RightClick


 
.


 
started


 #
-=


$ &
	m_Wrapper


' 0
.


0 1*
m_UIActionsCallbackInterface


1 M
.


M N
OnRightClick


N Z
;


Z [
@RightClick


 
.


 
	performed


 %
-=


& (
	m_Wrapper


) 2
.


2 3*
m_UIActionsCallbackInterface


3 O
.


O P
OnRightClick


P \
;


\ ]
@RightClick


 
.


 
canceled


 $
-=


% '
	m_Wrapper


( 1
.


1 2*
m_UIActionsCallbackInterface


2 N
.


N O
OnRightClick


O [
;


[ \$
@TrackedDevicePosition


 &
.


& '
started


' .
-=


/ 1
	m_Wrapper


2 ;
.


; <*
m_UIActionsCallbackInterface


< X
.


X Y%
OnTrackedDevicePosition


Y p
;


p q$
@TrackedDevicePosition


 &
.


& '
	performed


' 0
-=


1 3
	m_Wrapper


4 =
.


= >*
m_UIActionsCallbackInterface


> Z
.


Z [%
OnTrackedDevicePosition


[ r
;


r s$
@TrackedDevicePosition


 &
.


& '
canceled


' /
-=


0 2
	m_Wrapper


3 <
.


< =*
m_UIActionsCallbackInterface


= Y
.


Y Z%
OnTrackedDevicePosition


Z q
;


q r'
@TrackedDeviceOrientation


 )
.


) *
started


* 1
-=


2 4
	m_Wrapper


5 >
.


> ?*
m_UIActionsCallbackInterface


? [
.


[ \(
OnTrackedDeviceOrientation


\ v
;


v w'
@TrackedDeviceOrientation


 )
.


) *
	performed


* 3
-=


4 6
	m_Wrapper


7 @
.


@ A*
m_UIActionsCallbackInterface


A ]
.


] ^(
OnTrackedDeviceOrientation


^ x
;


x y'
@TrackedDeviceOrientation


 )
.


) *
canceled


* 2
-=


3 5
	m_Wrapper


6 ?
.


? @*
m_UIActionsCallbackInterface


@ \
.


\ ](
OnTrackedDeviceOrientation


] w
;


w x
}


 
	m_Wrapper


 
.


 *
m_UIActionsCallbackInterface


 2
=


3 4
instance


5 =
;


= >
if


 
(


 
instance


 
!=


 
null


  
)


  !
{


 
	@Navigate


 
.


 
started


 !
+=


" $
instance


% -
.


- .

OnNavigate


. 8
;


8 9
	@Navigate


 
.


 
	performed


 #
+=


$ &
instance


' /
.


/ 0

OnNavigate


0 :
;


: ;
	@Navigate


 
.


 
canceled


 "
+=


# %
instance


& .
.


. /

OnNavigate


/ 9
;


9 :
@Submit


 
.


 
started


 
+=


  "
instance


# +
.


+ ,
OnSubmit


, 4
;


4 5
@Submit


 
.


 
	performed


 !
+=


" $
instance


% -
.


- .
OnSubmit


. 6
;


6 7
@Submit


 
.


 
canceled


  
+=


! #
instance


$ ,
.


, -
OnSubmit


- 5
;


5 6
@Cancel


 
.


 
started


 
+=


  "
instance


# +
.


+ ,
OnCancel


, 4
;


4 5
@Cancel


 
.


 
	performed


 !
+=


" $
instance


% -
.


- .
OnCancel


. 6
;


6 7
@Cancel


 
.


 
canceled


  
+=


! #
instance


$ ,
.


, -
OnCancel


- 5
;


5 6
@Point


 
.


 
started


 
+=


 !
instance


" *
.


* +
OnPoint


+ 2
;


2 3
@Point


 
.


 
	performed


  
+=


! #
instance


$ ,
.


, -
OnPoint


- 4
;


4 5
@Point


 
.


 
canceled


 
+=


  "
instance


# +
.


+ ,
OnPoint


, 3
;


3 4
@Click
 
 
 
.
 
 
 
started
 
 
 
+=
 
 
 !
instance
 
 
" *
.
 
 
* +
OnClick
 
 
+ 2
;
 
 
2 3
@Click
¡
¡
 
.
¡
¡
 
	performed
¡
¡
  
+=
¡
¡
! #
instance
¡
¡
$ ,
.
¡
¡
, -
OnClick
¡
¡
- 4
;
¡
¡
4 5
@Click
¢
¢
 
.
¢
¢
 
canceled
¢
¢
 
+=
¢
¢
  "
instance
¢
¢
# +
.
¢
¢
+ ,
OnClick
¢
¢
, 3
;
¢
¢
3 4
@ScrollWheel
£
£
 
.
£
£
 
started
£
£
 $
+=
£
£
% '
instance
£
£
( 0
.
£
£
0 1
OnScrollWheel
£
£
1 >
;
£
£
> ?
@ScrollWheel
¤
¤
 
.
¤
¤
 
	performed
¤
¤
 &
+=
¤
¤
' )
instance
¤
¤
* 2
.
¤
¤
2 3
OnScrollWheel
¤
¤
3 @
;
¤
¤
@ A
@ScrollWheel
¥
¥
 
.
¥
¥
 
canceled
¥
¥
 %
+=
¥
¥
& (
instance
¥
¥
) 1
.
¥
¥
1 2
OnScrollWheel
¥
¥
2 ?
;
¥
¥
? @
@MiddleClick
¦
¦
 
.
¦
¦
 
started
¦
¦
 $
+=
¦
¦
% '
instance
¦
¦
( 0
.
¦
¦
0 1
OnMiddleClick
¦
¦
1 >
;
¦
¦
> ?
@MiddleClick
§
§
 
.
§
§
 
	performed
§
§
 &
+=
§
§
' )
instance
§
§
* 2
.
§
§
2 3
OnMiddleClick
§
§
3 @
;
§
§
@ A
@MiddleClick
¨
¨
 
.
¨
¨
 
canceled
¨
¨
 %
+=
¨
¨
& (
instance
¨
¨
) 1
.
¨
¨
1 2
OnMiddleClick
¨
¨
2 ?
;
¨
¨
? @
@RightClick
©
©
 
.
©
©
 
started
©
©
 #
+=
©
©
$ &
instance
©
©
' /
.
©
©
/ 0
OnRightClick
©
©
0 <
;
©
©
< =
@RightClick
ª
ª
 
.
ª
ª
 
	performed
ª
ª
 %
+=
ª
ª
& (
instance
ª
ª
) 1
.
ª
ª
1 2
OnRightClick
ª
ª
2 >
;
ª
ª
> ?
@RightClick
«
«
 
.
«
«
 
canceled
«
«
 $
+=
«
«
% '
instance
«
«
( 0
.
«
«
0 1
OnRightClick
«
«
1 =
;
«
«
= >$
@TrackedDevicePosition
¬
¬
 &
.
¬
¬
& '
started
¬
¬
' .
+=
¬
¬
/ 1
instance
¬
¬
2 :
.
¬
¬
: ;%
OnTrackedDevicePosition
¬
¬
; R
;
¬
¬
R S$
@TrackedDevicePosition
­
­
 &
.
­
­
& '
	performed
­
­
' 0
+=
­
­
1 3
instance
­
­
4 <
.
­
­
< =%
OnTrackedDevicePosition
­
­
= T
;
­
­
T U$
@TrackedDevicePosition
®
®
 &
.
®
®
& '
canceled
®
®
' /
+=
®
®
0 2
instance
®
®
3 ;
.
®
®
; <%
OnTrackedDevicePosition
®
®
< S
;
®
®
S T'
@TrackedDeviceOrientation
¯
¯
 )
.
¯
¯
) *
started
¯
¯
* 1
+=
¯
¯
2 4
instance
¯
¯
5 =
.
¯
¯
= >(
OnTrackedDeviceOrientation
¯
¯
> X
;
¯
¯
X Y'
@TrackedDeviceOrientation
°
°
 )
.
°
°
) *
	performed
°
°
* 3
+=
°
°
4 6
instance
°
°
7 ?
.
°
°
? @(
OnTrackedDeviceOrientation
°
°
@ Z
;
°
°
Z ['
@TrackedDeviceOrientation
±
±
 )
.
±
±
) *
canceled
±
±
* 2
+=
±
±
3 5
instance
±
±
6 >
.
±
±
> ?(
OnTrackedDeviceOrientation
±
±
? Y
;
±
±
Y Z
}
²
²
 
}
³
³
 	
}
´
´
 
public
µ
µ
 

	UIActions
µ
µ
 
@UI
µ
µ
 
=>
µ
µ
 
new
µ
µ
 
	UIActions
µ
µ
  )
(
µ
µ
) *
this
µ
µ
* .
)
µ
µ
. /
;
µ
µ
/ 0
private
¶
¶
 
int
¶
¶
 (
m_KeyboardMouseSchemeIndex
¶
¶
 *
=
¶
¶
+ ,
-
¶
¶
- .
$num
¶
¶
. /
;
¶
¶
/ 0
public
·
·
 
 
InputControlScheme
·
·
 !
KeyboardMouseScheme
·
·
 1
{
¸
¸
 
get
¹
¹
 
{
º
º
 	
if
»
»
 
(
»
»
 (
m_KeyboardMouseSchemeIndex
»
»
 *
==
»
»
+ -
-
»
»
. /
$num
»
»
/ 0
)
»
»
0 1(
m_KeyboardMouseSchemeIndex
»
»
2 L
=
»
»
M N
asset
»
»
O T
.
»
»
T U$
FindControlSchemeIndex
»
»
U k
(
»
»
k l
$str
»
»
l |
)
»
»
| }
;
»
»
} ~
return
¼
¼
 
asset
¼
¼
 
.
¼
¼
 
controlSchemes
¼
¼
 '
[
¼
¼
' ((
m_KeyboardMouseSchemeIndex
¼
¼
( B
]
¼
¼
B C
;
¼
¼
C D
}
½
½
 	
}
¾
¾
 
private
¿
¿
 
int
¿
¿
 "
m_GamepadSchemeIndex
¿
¿
 $
=
¿
¿
% &
-
¿
¿
' (
$num
¿
¿
( )
;
¿
¿
) *
public
À
À
 
 
InputControlScheme
À
À
 
GamepadScheme
À
À
 +
{
Á
Á
 
get
Â
Â
 
{
Ã
Ã
 	
if
Ä
Ä
 
(
Ä
Ä
 "
m_GamepadSchemeIndex
Ä
Ä
 $
==
Ä
Ä
% '
-
Ä
Ä
( )
$num
Ä
Ä
) *
)
Ä
Ä
* +"
m_GamepadSchemeIndex
Ä
Ä
, @
=
Ä
Ä
A B
asset
Ä
Ä
C H
.
Ä
Ä
H I$
FindControlSchemeIndex
Ä
Ä
I _
(
Ä
Ä
_ `
$str
Ä
Ä
` i
)
Ä
Ä
i j
;
Ä
Ä
j k
return
Å
Å
 
asset
Å
Å
 
.
Å
Å
 
controlSchemes
Å
Å
 '
[
Å
Å
' ("
m_GamepadSchemeIndex
Å
Å
( <
]
Å
Å
< =
;
Å
Å
= >
}
Æ
Æ
 	
}
Ç
Ç
 
private
È
È
 
int
È
È
  
m_TouchSchemeIndex
È
È
 "
=
È
È
# $
-
È
È
% &
$num
È
È
& '
;
È
È
' (
public
É
É
 
 
InputControlScheme
É
É
 
TouchScheme
É
É
 )
{
Ê
Ê
 
get
Ë
Ë
 
{
Ì
Ì
 	
if
Í
Í
 
(
Í
Í
  
m_TouchSchemeIndex
Í
Í
 "
==
Í
Í
# %
-
Í
Í
& '
$num
Í
Í
' (
)
Í
Í
( ) 
m_TouchSchemeIndex
Í
Í
* <
=
Í
Í
= >
asset
Í
Í
? D
.
Í
Í
D E$
FindControlSchemeIndex
Í
Í
E [
(
Í
Í
[ \
$str
Í
Í
\ c
)
Í
Í
c d
;
Í
Í
d e
return
Î
Î
 
asset
Î
Î
 
.
Î
Î
 
controlSchemes
Î
Î
 '
[
Î
Î
' ( 
m_TouchSchemeIndex
Î
Î
( :
]
Î
Î
: ;
;
Î
Î
; <
}
Ï
Ï
 	
}
Ð
Ð
 
private
Ñ
Ñ
 
int
Ñ
Ñ
 #
m_JoystickSchemeIndex
Ñ
Ñ
 %
=
Ñ
Ñ
& '
-
Ñ
Ñ
( )
$num
Ñ
Ñ
) *
;
Ñ
Ñ
* +
public
Ò
Ò
 
 
InputControlScheme
Ò
Ò
 
JoystickScheme
Ò
Ò
 ,
{
Ó
Ó
 
get
Ô
Ô
 
{
Õ
Õ
 	
if
Ö
Ö
 
(
Ö
Ö
 #
m_JoystickSchemeIndex
Ö
Ö
 %
==
Ö
Ö
& (
-
Ö
Ö
) *
$num
Ö
Ö
* +
)
Ö
Ö
+ ,#
m_JoystickSchemeIndex
Ö
Ö
- B
=
Ö
Ö
C D
asset
Ö
Ö
E J
.
Ö
Ö
J K$
FindControlSchemeIndex
Ö
Ö
K a
(
Ö
Ö
a b
$str
Ö
Ö
b l
)
Ö
Ö
l m
;
Ö
Ö
m n
return
×
×
 
asset
×
×
 
.
×
×
 
controlSchemes
×
×
 '
[
×
×
' (#
m_JoystickSchemeIndex
×
×
( =
]
×
×
= >
;
×
×
> ?
}
Ø
Ø
 	
}
Ù
Ù
 
private
Ú
Ú
 
int
Ú
Ú
 
m_XRSchemeIndex
Ú
Ú
 
=
Ú
Ú
  !
-
Ú
Ú
" #
$num
Ú
Ú
# $
;
Ú
Ú
$ %
public
Û
Û
 
 
InputControlScheme
Û
Û
 
XRScheme
Û
Û
 &
{
Ü
Ü
 
get
Ý
Ý
 
{
Þ
Þ
 	
if
ß
ß
 
(
ß
ß
 
m_XRSchemeIndex
ß
ß
 
==
ß
ß
  "
-
ß
ß
# $
$num
ß
ß
$ %
)
ß
ß
% &
m_XRSchemeIndex
ß
ß
' 6
=
ß
ß
7 8
asset
ß
ß
9 >
.
ß
ß
> ?$
FindControlSchemeIndex
ß
ß
? U
(
ß
ß
U V
$str
ß
ß
V Z
)
ß
ß
Z [
;
ß
ß
[ \
return
à
à
 
asset
à
à
 
.
à
à
 
controlSchemes
à
à
 '
[
à
à
' (
m_XRSchemeIndex
à
à
( 7
]
à
à
7 8
;
à
à
8 9
}
á
á
 	
}
â
â
 
public
ã
ã
 

	interface
ã
ã
 
IPlayerActions
ã
ã
 #
{
ä
ä
 
void
å
å
 
OnMove
å
å
 
(
å
å
 
InputAction
å
å
 
.
å
å
  
CallbackContext
å
å
  /
context
å
å
0 7
)
å
å
7 8
;
å
å
8 9
void
æ
æ
 
OnLook
æ
æ
 
(
æ
æ
 
InputAction
æ
æ
 
.
æ
æ
  
CallbackContext
æ
æ
  /
context
æ
æ
0 7
)
æ
æ
7 8
;
æ
æ
8 9
void
ç
ç
 
OnFire
ç
ç
 
(
ç
ç
 
InputAction
ç
ç
 
.
ç
ç
  
CallbackContext
ç
ç
  /
context
ç
ç
0 7
)
ç
ç
7 8
;
ç
ç
8 9
void
è
è
 !
OnSwitchPerspective
è
è
  
(
è
è
  !
InputAction
è
è
! ,
.
è
è
, -
CallbackContext
è
è
- <
context
è
è
= D
)
è
è
D E
;
è
è
E F
void
é
é
 
OnJump
é
é
 
(
é
é
 
InputAction
é
é
 
.
é
é
  
CallbackContext
é
é
  /
context
é
é
0 7
)
é
é
7 8
;
é
é
8 9
void
ê
ê
 
OnUse
ê
ê
 
(
ê
ê
 
InputAction
ê
ê
 
.
ê
ê
 
CallbackContext
ê
ê
 .
context
ê
ê
/ 6
)
ê
ê
6 7
;
ê
ê
7 8
void
ë
ë
 
OnReload
ë
ë
 
(
ë
ë
 
InputAction
ë
ë
 !
.
ë
ë
! "
CallbackContext
ë
ë
" 1
context
ë
ë
2 9
)
ë
ë
9 :
;
ë
ë
: ;
void
ì
ì
 
OnLockCursor
ì
ì
 
(
ì
ì
 
InputAction
ì
ì
 %
.
ì
ì
% &
CallbackContext
ì
ì
& 5
context
ì
ì
6 =
)
ì
ì
= >
;
ì
ì
> ?
void
í
í
 
OnAim
í
í
 
(
í
í
 
InputAction
í
í
 
.
í
í
 
CallbackContext
í
í
 .
context
í
í
/ 6
)
í
í
6 7
;
í
í
7 8
void
î
î
 
OnSprint
î
î
 
(
î
î
 
InputAction
î
î
 !
.
î
î
! "
CallbackContext
î
î
" 1
context
î
î
2 9
)
î
î
9 :
;
î
î
: ;
void
ï
ï
 
OnSwitchWeapon
ï
ï
 
(
ï
ï
 
InputAction
ï
ï
 '
.
ï
ï
' (
CallbackContext
ï
ï
( 7
context
ï
ï
8 ?
)
ï
ï
? @
;
ï
ï
@ A
}
ð
ð
 
public
ñ
ñ
 

	interface
ñ
ñ
 

IUIActions
ñ
ñ
 
{
ò
ò
 
void
ó
ó
 

OnNavigate
ó
ó
 
(
ó
ó
 
InputAction
ó
ó
 #
.
ó
ó
# $
CallbackContext
ó
ó
$ 3
context
ó
ó
4 ;
)
ó
ó
; <
;
ó
ó
< =
void
ô
ô
 
OnSubmit
ô
ô
 
(
ô
ô
 
InputAction
ô
ô
 !
.
ô
ô
! "
CallbackContext
ô
ô
" 1
context
ô
ô
2 9
)
ô
ô
9 :
;
ô
ô
: ;
void
õ
õ
 
OnCancel
õ
õ
 
(
õ
õ
 
InputAction
õ
õ
 !
.
õ
õ
! "
CallbackContext
õ
õ
" 1
context
õ
õ
2 9
)
õ
õ
9 :
;
õ
õ
: ;
void
ö
ö
 
OnPoint
ö
ö
 
(
ö
ö
 
InputAction
ö
ö
  
.
ö
ö
  !
CallbackContext
ö
ö
! 0
context
ö
ö
1 8
)
ö
ö
8 9
;
ö
ö
9 :
void
÷
÷
 
OnClick
÷
÷
 
(
÷
÷
 
InputAction
÷
÷
  
.
÷
÷
  !
CallbackContext
÷
÷
! 0
context
÷
÷
1 8
)
÷
÷
8 9
;
÷
÷
9 :
void
ø
ø
 
OnScrollWheel
ø
ø
 
(
ø
ø
 
InputAction
ø
ø
 &
.
ø
ø
& '
CallbackContext
ø
ø
' 6
context
ø
ø
7 >
)
ø
ø
> ?
;
ø
ø
? @
void
ù
ù
 
OnMiddleClick
ù
ù
 
(
ù
ù
 
InputAction
ù
ù
 &
.
ù
ù
& '
CallbackContext
ù
ù
' 6
context
ù
ù
7 >
)
ù
ù
> ?
;
ù
ù
? @
void
ú
ú
 
OnRightClick
ú
ú
 
(
ú
ú
 
InputAction
ú
ú
 %
.
ú
ú
% &
CallbackContext
ú
ú
& 5
context
ú
ú
6 =
)
ú
ú
= >
;
ú
ú
> ?
void
û
û
 %
OnTrackedDevicePosition
û
û
 $
(
û
û
$ %
InputAction
û
û
% 0
.
û
û
0 1
CallbackContext
û
û
1 @
context
û
û
A H
)
û
û
H I
;
û
û
I J
void
ü
ü
 (
OnTrackedDeviceOrientation
ü
ü
 '
(
ü
ü
' (
InputAction
ü
ü
( 3
.
ü
ü
3 4
CallbackContext
ü
ü
4 C
context
ü
ü
D K
)
ü
ü
K L
;
ü
ü
L M
}
ý
ý
 
}þ
þ
 ¥
[D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Evan\Radar\Radar.cs
public 
class 
Radar 
: 
MonoBehaviour "
{# $
public		 


GameObject		 
[		 
]		 
trackedObjects		 &
;		& '
public

 


GameObject

 
radarPrefab

 !
;

! "
public 

bool 
loadZombies 
; 
void 
Start	 
( 
) 
{ 
if 

( 
loadZombies 
) 
{ 
trackedObjects 
= 

GameObject '
.' ("
FindGameObjectsWithTag( >
(> ?
$str? G
)G H
;H I
} 	
CreateRadarObjects 
( 
) 
; 
} 
void 
CreateRadarObjects	 
( 
) 
{ 
foreach 
( 

GameObject 

gameObject &
in' )
trackedObjects* 8
)8 9
{: ;

GameObject 
radarPin 
=  !
Instantiate" -
(- .
radarPrefab. 9
,9 :

gameObject; E
.E F
	transformF O
)O P
;P Q
radarPin 
. 
name 
= 
$str '
;' (
} 	
} 
} û
aD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\GunBase.cs
public 
abstract 
class 
GunBase 
: 
MonoBehaviour  -
,- .
	IGunState/ 8
{9 :
[ 
Tooltip 
( 
$str (
)( )
]) *
[ 
SerializeField 
] 
	protected 
GunData &
gunData' .
;. /
[ 
Tooltip 
( 
$str 1
)1 2
]2 3
[ 
SerializeField 
] 
	protected 
	Transform (
spawnTransform) 7
;7 8
	protected 

IGunEvents 
eventHandler %
;% &
	protected 

Dictionary 
< 

UnityEvent #
,# $
UnityAction% 0
>0 1
eventMap2 :
=; <
new= @

DictionaryA K
<K L

UnityEventL V
,V W
UnityActionX c
>c d
(d e
)e f
;f g
public 

GunViewModel 
	ViewModel !
=>" $
gunData% ,
., -
	viewModel- 6
;6 7
public 

GunProperties 

Properties #
=>$ &
gunData' .
.. /

properties/ 9
;9 :
public 

	GunEffect 
Effects 
=> 
gunData  '
.' (
effects( /
;/ 0
public 

event 
Action 
< 
	IGunState !
>! "
OnStateChanged# 1
=2 3
delegate4 <
{= >
}? @
;@ A
private   
bool   
	_isFiring   
,   
_isReloading   (
,  ( )
	_isAiming  * 3
;  3 4
public!! 

bool!! 
IsFiring!! 
{!! 
get"" 
=>"" 
	_isFiring"" 
;"" 
	protected"" #
set""$ '
{""( )
	_isFiring## 
=## 
value## 
;## 
OnStateChanged$$ 
?$$ 
.$$ 
Invoke$$ "
($$" #
this$$# '
)$$' (
;$$( )
}%% 	
}&& 
public'' 

bool'' 
IsReloading'' 
{'' 
get(( 
=>(( 
_isReloading(( 
;(( 
	protected(( &
set((' *
{((+ ,
_isReloading)) 
=)) 
value))  
;))  !
OnStateChanged** 
?** 
.** 
Invoke** "
(**" #
this**# '
)**' (
;**( )
}++ 	
},, 
public-- 

bool-- 
IsAiming-- 
{-- 
get.. 
=>.. 
	_isAiming.. 
;.. 
	protected.. #
set..$ '
{..( )
	_isAiming// 
=// 
value// 
;// 
OnStateChanged00 
?00 
.00 
Invoke00 "
(00" #
this00# '
)00' (
;00( )
}11 	
}22 
private44 
int44 
_currentAmmo44 
;44 
public55 

int55 
CurrentAmmo55 
{55 
get66 
=>66 
_currentAmmo66 
;66 
	protected66 &
set66' *
{66+ ,
if77 
(77 
value77 
<=77 
$num77 
)77 
IsFiring77 $
=77% &
false77' ,
;77, -
_currentAmmo88 
=88 
value88  
;88  !
}99 	
}:: 
	protected<< 
float<< 
	lastFired<< 
;<< 
	protected== 
float== 
currentInaccuracy== %
;==% &
	protected>> 
int>> 
currentShots>> 
;>> 
publicDD 

voidDD 
SetEventHandlerDD 
(DD  

IGunEventsDD  *
eventHandlerDD+ 7
)DD7 8
{DD9 :
ifEE 

(EE 
thisEE 
.EE 
eventHandlerEE 
==EE  
eventHandlerEE! -
)EE- .
returnEE/ 5
;EE5 6
boolGG 
activeStateGG 
=GG 

gameObjectGG %
.GG% &

activeSelfGG& 0
;GG0 1

gameObjectHH 
.HH 
	SetActiveHH 
(HH 
falseHH "
)HH" #
;HH# $
eventMapII 
.II 
ClearII 
(II 
)II 
;II 
thisJJ 
.JJ 
eventHandlerJJ 
=JJ 
eventHandlerJJ (
;JJ( )
CreateEventMapKK 
(KK 
)KK 
;KK 

gameObjectLL 
.LL 
	SetActiveLL 
(LL 
activeStateLL (
)LL( )
;LL) *
}MM 
publicOO 

voidOO 

InitializeOO 
(OO 
GunDataOO "
dataOO# '
,OO' (
	TransformOO) 2
	transformOO3 <
,OO< =

IGunEventsOO> H
eventHandlerOOI U
)OOU V
{OOW X
thisPP 
.PP 
gunDataPP 
=PP 
dataPP 
;PP 
thisQQ 
.QQ 
spawnTransformQQ 
=QQ 
	transformQQ '
;QQ' (
SetEventHandlerRR 
(RR 
eventHandlerRR $
)RR$ %
;RR% &
}SS 
publicUU 

voidUU 
AwakeUU 
(UU 
)UU 
{UU 
spawnTransformVV 
??=VV 
thisVV 
.VV  "
GetComponentInChildrenVV  6
<VV6 7
CameraVV7 =
>VV= >
(VV> ?
)VV? @
.VV@ A
	transformVVA J
;VVJ K
SetEventHandlerWW 
(WW 
eventHandlerWW $
??WW% '
GunEventsDummyWW( 6
.WW6 7
InstanceWW7 ?
)WW? @
;WW@ A
	lastFiredYY 
=YY 
-YY 

PropertiesYY 
.YY  
fireRateYY  (
;YY( )
currentInaccuracyZZ 
=ZZ 

PropertiesZZ &
.ZZ& '

inaccuracyZZ' 1
;ZZ1 2
CurrentAmmo[[ 
=[[ 

Properties[[  
.[[  !
maxAmmo[[! (
;[[( )
currentShots\\ 
=\\ 

Properties\\ !
.\\! "
shotsPerTrigger\\" 1
;\\1 2
}]] 
public__ 

void__ 
OnEnable__ 
(__ 
)__ 
{__ 
AddEventListeners`` 
(`` 
)`` 
;`` 
}aa 
publiccc 

voidcc 
	OnDisablecc 
(cc 
)cc 
{cc  
RemoveEventListenersdd 
(dd 
)dd 
;dd 
IsAimingee 
=ee 
falseee 
;ee 
IsReloadingff 
=ff 
falseff 
;ff 
IsFiringgg 
=gg 
falsegg 
;gg 
}hh 
publicjj 

virtualjj 
booljj 
CanFirejj 
(jj  
)jj  !
{jj" #
returnkk 
Timekk 
.kk 
timekk 
-kk 
	lastFiredkk $
>kk% &

Propertieskk' 1
.kk1 2
fireRatekk2 :
&&ll 
CurrentAmmoll 
>ll  
$numll! "
&&mm 
!mm 
IsReloadingmm 
;mm  
}nn 
publicpp 

virtualpp 
voidpp 
Firepp 
(pp 
)pp 
{pp  
	lastFiredqq 
=qq 
Timeqq 
.qq 
timeqq 
;qq 
}rr 
publictt 

virtualtt 
booltt 
	CanReloadtt !
(tt! "
)tt" #
{tt$ %
returnuu 
!uu 
IsReloadinguu 
&&uu 
CurrentAmmouu *
<uu+ ,

Propertiesuu- 7
.uu7 8
maxAmmouu8 ?
;uu? @
}vv 
publicxx 

virtualxx 
voidxx 
Reloadxx 
(xx 
)xx  
{xx! "
ifyy 

(yy 
	CanReloadyy 
(yy 
)yy 
)yy 
{yy 
IsReloadingzz 
=zz 
truezz 
;zz 
eventHandler{{ 
.{{ 
OnReload{{ !
?{{! "
.{{" #
Invoke{{# )
({{) *
){{* +
;{{+ ,
StartCoroutine|| 
(|| 
ReloadCoroutine|| *
(||* +
)||+ ,
)||, -
;||- .
}}} 	
}~~ 
private
 
IEnumerator
 
ReloadCoroutine
 '
(
' (
)
( )
{
* +
yield
 
return
 
new
 
WaitForSeconds
 '
(
' (

Properties
( 2
.
2 3

reloadTime
3 =
)
= >
;
> ?
CurrentAmmo
 
=
 

Properties
  
.
  !
maxAmmo
! (
;
( )
IsReloading
 
=
 
false
 
;
 
eventHandler
 
.
 
OnReloadEnd
  
?
  !
.
! "
Invoke
" (
(
( )
)
) *
;
* +
}
 
public
 

virtual
 
bool
 
CanAim
 
(
 
)
  
{
! "
return
 
true
 
;
 
}
 
public
 

virtual
 
bool
 
	CanSwitch
 !
(
! "
)
" #
{
$ %
return
 
!
 
IsReloading
 
&&
 
!
  
IsAiming
  (
;
( )
}
 
	protected
 
virtual
 
void
 
	AddAction
 $
(
$ %

UnityEvent
% /
evt
0 3
,
3 4
UnityAction
5 @
act
A D
)
D E
{
F G
if
 

(
 
!
 
eventMap
 
.
 
ContainsKey
 !
(
! "
evt
" %
)
% &
)
& '
eventMap
( 0
.
0 1
Add
1 4
(
4 5
evt
5 8
,
8 9
act
: =
)
= >
;
> ?
else
 
eventMap
 
[
 
evt
 
]
 
+=
 
act
 !
;
! "
}
 
	protected
 
virtual
 
void
 
CreateEventMap
 )
(
) *
)
* +
{
, -
Debug
 
.
 
Log
 
(
 
$str
 '
)
' (
;
( )
	AddAction
 
(
 
eventHandler
 
.
 
OnFire
 %
,
% &
(
' (
)
( )
=>
* ,
Fire
- 1
(
1 2
)
2 3
)
3 4
;
4 5
	AddAction
 
(
 
eventHandler
 
.
 
OnFireStart
 *
,
* +
(
, -
)
- .
=>
/ 1
IsFiring
2 :
=
; <
CurrentAmmo
= H
>
I J
$num
K L
||
M O
IsFiring
P X
)
X Y
;
Y Z
	AddAction
 
(
 
eventHandler
 
.
 
	OnFireEnd
 (
,
( )
(
* +
)
+ ,
=>
- /
IsFiring
0 8
=
9 :
false
; @
)
@ A
;
A B
	AddAction
 
(
 
eventHandler
 
.
 
OnReloadStart
 ,
,
, -
(
. /
)
/ 0
=>
1 3
Reload
4 :
(
: ;
)
; <
)
< =
;
= >
	AddAction
 
(
 
eventHandler
 
.
 

OnAimStart
 )
,
) *
(
+ ,
)
, -
=>
. 0
{
1 2
IsAiming
 
=
 
true
 
;
 
currentInaccuracy
 
=
 

Properties
  *
.
* +

inaccuracy
+ 5
/
6 7
$num
8 <
;
< =
}
 	
)
	 

;

 
	AddAction
   
(
   
eventHandler
   
.
   
OnAimEnd
   '
,
  ' (
(
  ) *
)
  * +
=>
  , .
{
  / 0
IsAiming
¡¡ 
=
¡¡ 
false
¡¡ 
;
¡¡ 
currentInaccuracy
¢¢ 
=
¢¢ 

Properties
¢¢  *
.
¢¢* +

inaccuracy
¢¢+ 5
;
¢¢5 6
}
££ 	
)
££	 

;
££
 
}
¤¤ 
	protected
¦¦ 
virtual
¦¦ 
void
¦¦ 
AddEventListeners
¦¦ ,
(
¦¦, -
)
¦¦- .
{
¦¦/ 0
foreach
§§ 
(
§§ 
var
§§ 
pair
§§ 
in
§§ 
eventMap
§§ %
)
§§% &
{
§§' (

UnityEvent
¨¨ 
evt
¨¨ 
=
¨¨ 
pair
¨¨ !
.
¨¨! "
Key
¨¨" %
;
¨¨% &
UnityAction
©© 
act
©© 
=
©© 
pair
©© "
.
©©" #
Value
©©# (
;
©©( )
evt
ªª 
.
ªª 
AddListener
ªª 
(
ªª 
act
ªª 
)
ªª  
;
ªª  !
}
«« 	
}
¬¬ 
	protected
®® 
virtual
®® 
void
®® "
RemoveEventListeners
®® /
(
®®/ 0
)
®®0 1
{
®®2 3
foreach
¯¯ 
(
¯¯ 
var
¯¯ 
pair
¯¯ 
in
¯¯ 
eventMap
¯¯ %
)
¯¯% &
{
¯¯' (

UnityEvent
°° 
evt
°° 
=
°° 
pair
°° !
.
°°! "
Key
°°" %
;
°°% &
UnityAction
±± 
act
±± 
=
±± 
pair
±± "
.
±±" #
Value
±±# (
;
±±( )
if
²² 
(
²² 
act
²² 
!=
²² 
null
²² 
)
²² 
evt
²²  
.
²²  !
RemoveListener
²²! /
(
²²/ 0
act
²²0 3
)
²²3 4
;
²²4 5
}
³³ 	
}
´´ 
	protected
·· 
virtual
·· 
Vector3
·· 
OffsetDirection
·· -
(
··- .
)
··. /
{
··0 1
return
¸¸ 
OffsetDirection
¸¸ 
(
¸¸ 
spawnTransform
¸¸ -
,
¸¸- .
currentInaccuracy
¸¸/ @
)
¸¸@ A
;
¸¸A B
}
¹¹ 
public
¼¼ 

static
¼¼ 
Vector3
¼¼ 
OffsetDirection
¼¼ )
(
¼¼) *
	Transform
¼¼* 3
start
¼¼4 9
,
¼¼9 :
float
¼¼; @
	maxOffset
¼¼A J
)
¼¼J K
{
¼¼L M
var
½½ 
vx
½½ 
=
½½ 
UnityEngine
½½ 
.
½½ 
Random
½½ #
.
½½# $
Range
½½$ )
(
½½) *
-
½½* +
	maxOffset
½½+ 4
,
½½4 5
	maxOffset
½½6 ?
)
½½? @
;
½½@ A
var
¾¾ 
vy
¾¾ 
=
¾¾ 
UnityEngine
¾¾ 
.
¾¾ 
Random
¾¾ #
.
¾¾# $
Range
¾¾$ )
(
¾¾) *
-
¾¾* +
	maxOffset
¾¾+ 4
,
¾¾4 5
	maxOffset
¾¾6 ?
)
¾¾? @
;
¾¾@ A
var
¿¿ 
vz
¿¿ 
=
¿¿ 
$num
¿¿ 
;
¿¿ 
return
ÀÀ 
start
ÀÀ 
.
ÀÀ  
TransformDirection
ÀÀ '
(
ÀÀ' (
new
ÀÀ( +
Vector3
ÀÀ, 3
(
ÀÀ3 4
vx
ÀÀ4 6
,
ÀÀ6 7
vy
ÀÀ8 :
,
ÀÀ: ;
vz
ÀÀ< >
)
ÀÀ> ?
)
ÀÀ? @
;
ÀÀ@ A
}
ÁÁ 
}ÂÂ ö
nD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\FPS Player Base\Scripts\snapToFloor.cs
[ 
RequireComponent 
( 
typeof 
( 
Collider !
)! "
)" #
]# $
public 
class 
snapToFloor 
: 
MonoBehaviour (
{ 
[ 
Tooltip 
( 
$str ]
)] ^
]^ _
[   
SerializeField   
]   
private!! 
bool!! 
destroyIfCantSnap!! "
=!!# $
false!!% *
;!!* +
private$$ 
void$$ 
Awake$$ 
($$ 
)$$ 
{%% 

RaycastHit&& 
hit&& 
;&& 
float'' 
inf'' 
='' 
float'' 
.'' 
MaxValue'' "
;''" #
Debug(( 
.(( 
DrawRay(( 
((( 
	transform(( 
.((  
position((  (
,((( )
new((* -
Vector3((. 5
(((5 6
$num((6 7
,((7 8
-((9 :
inf((: =
,((= >
$num((? @
)((@ A
)((A B
;((B C
if)) 

()) 
Physics)) 
.)) 
Raycast)) 
()) 
new)) 
Ray))  #
())# $
	transform))$ -
.))- .
position)). 6
,))6 7
Vector3))8 ?
.))? @
down))@ D
)))D E
,))E F
out))G J
hit))K N
,))N O
$num))P S
)))S T
)))T U
{** 	
print++ 
(++ 
$str++ 
)++ 
;++ 
	transform,, 
.,, 
position,, 
=,,  
new,,! $
Vector3,,% ,
(,,, -
	transform,,- 6
.,,6 7
position,,7 ?
.,,? @
x,,@ A
,,,A B
hit,,C F
.,,F G
collider,,G O
.,,O P
bounds,,P V
.,,V W
ClosestPoint,,W c
(,,c d
	transform,,d m
.,,m n
position,,n v
),,v w
.,,w x
y,,x y
+,,z {
GetComponent	,,| 
<
,, 
Collider
,, 
>
,, 
(
,, 
)
,, 
.
,, 
bounds
,, 
.
,, 
extents
,, £
.
,,£ ¤
y
,,¤ ¥
,
,,¥ ¦
	transform
,,§ °
.
,,° ±
position
,,± ¹
.
,,¹ º
z
,,º »
)
,,» ¼
;
,,¼ ½
}-- 	
else.. 
if.. 
(.. 
destroyIfCantSnap.. "
).." #
Destroy..$ +
(..+ ,
this.., 0
...0 1

gameObject..1 ;
)..; <
;..< =
}// 
}00 Ê'
[D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Anthony\ZombieAI.cs
public 
abstract 
class 
ZombieAI 
:  
MonoBehaviour! .
{ 
[ 
Header 
( 
$str 
) 
] 
	protected		 
NavMeshAgent		 
nm		 
;		 
public

 

	Transform

 
target

 
;

 
public 

Animator 
animator 
; 
public 

float 
ThinkSleepSeconds "
=# $
$num% )
;) *
public 

enum 
AIState 
{ 
chasing  
=! "
$num# $
,$ %
attack& ,
=- .
$num/ 0
,0 1
death2 7
=8 9
$num: ;
}; <
;< =
	protected 
AIState 
aiState 
; 
	protected 
float 
dist 
; 
public 

void 
Start 
( 
) 
{ 
nm 

= 
GetComponent 
< 
NavMeshAgent &
>& '
(' (
)( )
;) *
aiState 
= 
AIState 
. 
chasing !
;! "
target 
= 
target 
? 
target  
:! "

GameObject# -
.- .!
FindGameObjectWithTag. C
(C D
$strD L
)L M
.M N
	transformN W
;W X
animator 
= 
animator 
? 
animator &
:' ("
GetComponentInChildren) ?
<? @
Animator@ H
>H I
(I J
)J K
;K L
var 
health 
= 
GetComponent !
<! "
Health" (
>( )
() *
)* +
;+ ,
if 

(
 
health 
!= 
null 
) 
health 
. 
OnDeath 
+= 
( 
)  
=>! #
{$ %
animator 
. 
SetBool  
(  !
$str! (
,( )
true* .
). /
;/ 0
aiState 
= 
AIState !
.! "
death" '
;' (
} 
; 
StartCoroutine 
( 
Think 
( 
) 
) 
;  
} 
	protected!! 
virtual!! 
IEnumerator!! !
Think!!" '
(!!' (
)!!( )
{!!) *
while## 
(## 
true## 
)## 
{## 
dist%% 
=%% 
Vector3%% 
.%% 
Distance%% #
(%%# $
target%%$ *
.%%* +
position%%+ 3
,%%3 4
	transform%%5 >
.%%> ?
position%%? G
)%%G H
;%%H I
switch&& 
(&& 
aiState&& 
)&& 
{&& 
case'' 
AIState'' 
.'' 
chasing'' $
:''$ %
nm(( 
.(( 
SetDestination(( %
(((% &
target((& ,
.((, -
position((- 5
)((5 6
;((6 7
Chasing)) 
()) 
))) 
;)) 
break** 
;** 
case++ 
AIState++ 
.++ 
attack++ #
:++# $
Attack,, 
(,, 
),, 
;,, 
break-- 
;-- 
case.. 
AIState.. 
... 
death.. "
:.." #
nm// 
.// 
speed// 
=// 
$num//  
;//  !
nm00 
.00 
	isStopped00  
=00! "
true00# '
;00' (
break11 
;11 
default22 
:22 
break33 
;33 
}44 
yield66 
return66 
new66 
WaitForSeconds66 +
(66+ ,
ThinkSleepSeconds66, =
)66= >
;66> ?
}77 	
}88 
	protected:: 
void:: 
changeState:: 
(:: 
AIState:: &
state::' ,
)::, -
{;; 
aiState<< 
=<< 
state<< 
;<< 
}== 
	protected@@ 
abstract@@ 
void@@ 
Chasing@@ #
(@@# $
)@@$ %
;@@% &
	protectedCC 
abstractCC 
voidCC 
AttackCC "
(CC" #
)CC# $
;CC$ %
}DD Ú<
YD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Evan\HellHound.cs
public 
class 
	HellHound 
: 
MeleeZombie $
{ 
new		 
public		 
enum		 
AIState		 
{		 
chasing		 %
=		& '
$num		( )
,		) *
attack		+ 1
=		2 3
$num		4 5
,		5 6
leap		7 ;
=		< =
$num		> ?
}		@ A
;		A B
[ 
Header 
( 
$str 
) 
] 
new 
public 
AIState 
aiState 
; 
public 

float 

jumpHeight 
; 
public 

float 
jumpTime 
; 
public 

float 
	jumpSpeed 
; 
public 

float 
jumpCooldownTime !
;! "
[ 
HideInInspector 
] 
bool 
	jumpReady $
=% &
true' +
;+ ,
	protected 
Vector3 
leapTop 
, 

leapTarget )
,) *
	leapStart+ 4
;4 5
	protected 
bool 
jumpDone 
= 
true "
;" #
	protected 
override 
void 
Chasing #
(# $
)$ %
{ 
print 
( 
$str 
) 
; 
if 

( 
nm 
. 
speed 
< 
$num 
) 
{ 	
nm 
. 
speed 
= 
zombieSpeed "
+# $
Mathf% *
.* +
Sqrt+ /
(/ 0
Time0 4
.4 5
time5 9
)9 :
;: ;
} 	
if 

( 
dist 
< 
$num 
&& 
dist 
> 
$num  
)  !
{ 	
if 
( 
	jumpReady 
) 
{ 
print   
(   
$str   
)   
;   
aiState!! 
=!! 
AIState!! !
.!!! "
leap!!" &
;!!& '
}"" 
}## 	
if$$ 

($$ 
dist$$ 
<$$ 
$num$$ 
)$$ 
{%% 	
print&& 
(&& 
$str&& 
)&& 
;&& 
aiState'' 
='' 
AIState'' 
.'' 
attack'' $
;''$ %
}(( 	
}** 
	protected,, 
override,, 
IEnumerator,, "
Think,,# (
(,,( )
),,) *
{-- 
while// 
(// 
true// 
)// 
{00 	
print11 
(11 
$str11 $
)11$ %
;11% &
dist22 
=22 
Vector322 
.22 
Distance22 #
(22# $
target22$ *
.22* +
position22+ 3
,223 4
	transform225 >
.22> ?
position22? G
)22G H
;22H I
switch33 
(33 
aiState33 
)33 
{44 
case55 
AIState55 
.55 
chasing55 $
:55$ %
print66 
(66 
$str66 #
)66# $
;66$ %
nm77 
.77 
SetDestination77 %
(77% &
target77& ,
.77, -
position77- 5
)775 6
;776 7
Chasing88 
(88 
)88 
;88 
break99 
;99 
case:: 
AIState:: 
.:: 
leap:: !
:::! "
if;; 
(;; 
	jumpReady;; !
);;! "
{<< 
StartCoroutine== &
(==& '
Leap==' +
(==+ ,
)==, -
)==- .
;==. /
jumpDone>>  
=>>! "
false>># (
;>>( )
}?? 
break@@ 
;@@ 
caseAA 
AIStateAA 
.AA 
attackAA #
:AA# $
AttackBB 
(BB 
)BB 
;BB 
breakCC 
;CC 
defaultDD 
:DD 
breakEE 
;EE 
}FF 
yieldHH 
returnHH 
newHH 
WaitForSecondsHH +
(HH+ ,
ThinkSleepSecondsHH, =
)HH= >
;HH> ?
}II 	
}JJ 
	protectedLL 
overrideLL 
voidLL 
AttackLL "
(LL" #
)LL# $
{MM 
ifNN 

(NN 
MathfNN 
.NN 
AbsNN 
(NN 
distNN 
)NN 
>NN 
$numNN 
)NN  
{OO 	
aiStatePP 
=PP 
AIStatePP 
.PP 
chasingPP %
;PP% &
}QQ 	
ifSS 

(SS 
TimeSS 
.SS 
timeSS 
-SS 

lastAttackSS "
>SS# $

attackRateSS% /
)SS/ 0
{SS1 2
PhysicsTT 
.TT 

SphereCastTT 
(TT 
	transformTT $
.TT$ %
positionTT% -
,TT- .
radiusTT/ 5
,TT5 6
	transformTT7 @
.TT@ A
forwardTTA H
*TTI J
hitDistTTK R
,TTR S
outTTT W

RaycastHitTTX b
hitTTc f
)TTf g
;TTg h
DebugUU 
.UU 
DrawRayUU 
(UU 
	transformUU 
.UU  
positionUU  (
,UU( )
	transformUU* 3
.UU3 4
forwardUU4 ;
*UU< =
hitDistUU> E
)UUE F
;UUF G
ifWW 
(WW 
hitWW 
.WW 
colliderWW 
!=WW 
nullWW  $
)WW$ %
{WW& '
varXX 
healthXX 
=XX 
hitXX  
.XX  !
colliderXX! )
.XX) *
GetComponentXX* 6
<XX6 7
HealthXX7 =
>XX= >
(XX> ?
)XX? @
;XX@ A
healthYY 
?YY 
.YY 
ModifyHealthYY $
(YY$ %
damageToDealYY% 1
)YY1 2
;YY2 3
}ZZ 

lastAttack\\ 
=\\ 
Time\\ 
.\\ 
time\\ "
;\\" #
}]] 	
}^^ 
	protected`` 
IEnumerator`` 
Leap`` 
(`` 
)``  
{aa 
	jumpReadybb 
=bb 
falsebb 
;bb 
nmcc 

.cc
 
speedcc 
+=cc 
	jumpSpeedcc 
;cc 
yielddd 
returndd 
newdd 
WaitForSecondsdd '
(dd' (
jumpTimedd( 0
)dd0 1
;dd1 2
nmee 

.ee
 
speedee 
-=ee 
	jumpSpeedee 
;ee 
aiStateff 
=ff 
AIStateff 
.ff 
chasingff !
;ff! "
yieldgg 
returngg 
newgg 
WaitForSecondsgg '
(gg' (
jumpCooldownTimegg( 8
)gg8 9
;gg9 :
	jumpReadyhh 
=hh 
truehh 
;hh 
yieldii 
breakii 
;ii 
}
 
} ú
YD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Gyver\Power_Up.cs
public 
class 
Power_Up 
: 
MonoBehaviour %
{ 
[ 
SerializeField 
] 
public 

typeOfPowerUp 
type 
; 
public

 

float

 

valueToSet

 
;

 
private 
void 
OnTriggerEnter 
(  
Collider  (
other) .
). /
{ 
if 

(
 
other 
. 

gameObject 
. 
tag 
==  "
$str# +
)+ ,
{, -
if 
( 
type 
== 
typeOfPowerUp $
.$ %
Jump% )
)) *
{* +
other 
. 

gameObject  
.  !
GetComponent! -
<- .
Movement_FPS. :
>: ;
(; <
)< =
.= >

jumpHeight> H
=I J
$numK N
;N O
Destroy 
( 
this 
. 

gameObject '
)' (
;( )
} 
else 
if 
( 
type 
== 
typeOfPowerUp )
.) *
Sprint* 0
)0 1
{1 2
other 
. 

gameObject  
.  !
GetComponent! -
<- .
Movement_FPS. :
>: ;
(; <
)< =
.= >
sprintModifier> L
=M N
$numO S
;S T
Destroy 
( 
this 
. 

gameObject '
)' (
;( )
} 
} 	
} 
public 

enum 
typeOfPowerUp 
{ 
Jump 
= 
$num 
, 
Sprint 
= 
$num 
} 
}   ö
dD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\IGunEvents.cs
public 
	interface 

IGunEvents 
{ 

UnityEvent 
OnFire 
{ 
get 
; 
} 

UnityEvent 
OnFireStart 
{ 
get  
;  !
}" #

UnityEvent 
	OnFireEnd 
{ 
get 
; 
}  !

UnityEvent 
OnReload 
{ 
get 
; 
}  

UnityEvent 
OnReloadStart 
{ 
get "
;" #
}$ %

UnityEvent 
OnReloadEnd 
{ 
get  
;  !
}" #

UnityEvent 
OnAim 
{ 
get 
; 
} 

UnityEvent 

OnAimStart 
{ 
get 
;  
}! "

UnityEvent 
OnAimEnd 
{ 
get 
; 
}  
} 
public 
class 
GunEventsDummy 
: 

IGunEvents (
{) *
private 
static 
GunEventsDummy !
	_instance" +
;+ ,
public 

static 
GunEventsDummy  
Instance! )
=>* ,
	_instance- 6
??=7 :
new; >
GunEventsDummy? M
(M N
)N O
;O P
private 
GunEventsDummy 
( 
) 
{ 
}  
public 


UnityEvent 
OnFire 
{ 
get "
;" #
}$ %
=& '
new( +

UnityEvent, 6
(6 7
)7 8
;8 9
public 


UnityEvent 
OnFireStart !
{" #
get$ '
;' (
}) *
=+ ,
new- 0

UnityEvent1 ;
(; <
)< =
;= >
public   


UnityEvent   
	OnFireEnd   
{    !
get  " %
;  % &
}  ' (
=  ) *
new  + .

UnityEvent  / 9
(  9 :
)  : ;
;  ; <
public"" 


UnityEvent"" 
OnReload"" 
{""  
get""! $
;""$ %
}""& '
=""( )
new""* -

UnityEvent"". 8
(""8 9
)""9 :
;"": ;
public## 


UnityEvent## 
OnReloadStart## #
{##$ %
get##& )
;##) *
}##+ ,
=##- .
new##/ 2

UnityEvent##3 =
(##= >
)##> ?
;##? @
public$$ 


UnityEvent$$ 
OnReloadEnd$$ !
{$$" #
get$$$ '
;$$' (
}$$) *
=$$+ ,
new$$- 0

UnityEvent$$1 ;
($$; <
)$$< =
;$$= >
public&& 


UnityEvent&& 
OnAim&& 
{&& 
get&& !
;&&! "
}&&# $
=&&% &
new&&' *

UnityEvent&&+ 5
(&&5 6
)&&6 7
;&&7 8
public'' 


UnityEvent'' 

OnAimStart''  
{''! "
get''# &
;''& '
}''( )
=''* +
new'', /

UnityEvent''0 :
('': ;
)''; <
;''< =
public(( 


UnityEvent(( 
OnAimEnd(( 
{((  
get((! $
;(($ %
}((& '
=((( )
new((* -

UnityEvent((. 8
(((8 9
)((9 :
;((: ;
})) µ
nD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\FPS Player Base\Scripts\dontDestroy.cs
public 
class 
dontDestroy 
: 
MonoBehaviour (
{ 
void 
Start	 
( 
) 
{		 
} 
void 
Update	 
( 
) 
{ 
} 
} (
mD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\GunEffectController.cs
[ 
Serializable 
] 
public 
class 
GunEffectController  
{! "
public 

UnityAction 
PlayFireEffects &
;& '
public 

ParticleSystem 
muzzleFlash %
;% &
public 

ParticleSystem 
tracers !
;! "
public 

ParticleSystem 
impactEffect &
;& '
[ 
SerializeField 
] 
public %
ParticleCollisionListener 5
listener6 >
;> ?
public 

UnityAction 
< 

GameObject !
>! "
PlayImpactEffect# 3
;3 4
public 

GunEffectController 
( 
)  
{! "
CreateActions 
( 
) 
; 
} 
private 
void 
CreateActions 
( 
)  
{! "
PlayFireEffects 
= 
( 
) 
=> 
{  !
muzzleFlash 
? 
. 
Play 
( 
) 
;  
tracers   
?   
.   
Play   
(   
)   
;   
}!! 	
;!!	 

PlayImpactEffect## 
=## 
other##  
=>##! #
{##$ %
if$$ 
($$ 
impactEffect$$ 
==$$ 
null$$  $
)$$$ %
return$$& ,
;$$, -
List%% 
<%% "
ParticleCollisionEvent%% '
>%%' (
events%%) /
=%%0 1
new%%2 5
List%%6 :
<%%: ;"
ParticleCollisionEvent%%; Q
>%%Q R
(%%R S
)%%S T
;%%T U
tracers&& 
.&& 
GetCollisionEvents&& &
(&&& '
other&&' ,
,&&, -
events&&. 4
)&&4 5
;&&5 6
foreach'' 
('' 
var'' 
e'' 
in'' 
events'' $
)''$ %
{''& '
var(( 
effect(( 
=(( 

GameObject(( '
.((' (
Instantiate((( 3
(((3 4
impactEffect((4 @
,((@ A
e((B C
.((C D
intersection((D P
,((P Q

Quaternion((R \
.((\ ]
identity((] e
)((e f
;((f g
if)) 
()) 
e)) 
.)) 
colliderComponent)) '
?))' (
.))( )

gameObject))) 3
.))3 4
tag))4 7
==))8 :
$str)); C
)))C D
{))E F
var** 
main** 
=** 
effect** %
.**% &
main**& *
;*** +
main++ 
.++ 

startColor++ #
=++$ %
Color++& +
.+++ ,
red++, /
;++/ 0
},, 
effect.. 
... 
Play.. 
(.. 
).. 
;.. 
}// 
}00 	
;00	 

}11 
public33 

void33 

AddEffects33 
(33 

IGunEvents33 %
events33& ,
)33, -
{33. /
events44 
.44 
OnFire44 
.44 
AddListener44 !
(44! "
PlayFireEffects44" 1
)441 2
;442 3
AddParticleListener55 
(55 
)55 
;55 
}66 
public88 

void88 
RemoveEffects88 
(88 

IGunEvents88 (
events88) /
)88/ 0
{881 2
events99 
.99 
OnFire99 
.99 
RemoveListener99 $
(99$ %
PlayFireEffects99% 4
)994 5
;995 6
AddParticleListener:: 
(:: 
):: 
;:: 
};; 
public>> 

void>> 
AddParticleListener>> #
(>># $
)>>$ %
{>>& '
if?? 

(?? 
tracers?? 
==?? 
null?? 
)?? 
return?? #
;??# $
listenerAA 
=AA 
tracersAA 
.AA 

gameObjectAA %
.AA% &
GetComponentAA& 2
<AA2 3%
ParticleCollisionListenerAA3 L
>AAL M
(AAM N
)AAN O
??BB 
tracersBB 
.BB 

gameObjectBB %
.BB% &
AddComponentBB& 2
<BB2 3%
ParticleCollisionListenerBB3 L
>BBL M
(BBM N
)BBN O
;BBO P
listenerDD 
.DD 
OnCollisionDD 
.DD 
AddListenerDD (
(DD( )
PlayImpactEffectDD) 9
)DD9 :
;DD: ;
}EE 
}FF ª
pD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\GunAnimationController.cs
[ 
Serializable 
] 
public 
class "
GunAnimationController #
{$ %
public 

Animator 
animator 
; 
public 

Action 
< 
	IGunState 
> 
UpdateAnimator +
;+ ,
public 

UnityAction 
FireTrigger "
;" #
public 
"
GunAnimationController !
(! "
)" #
{$ %
CreateActions 
( 
) 
; 
} 
private 
void 
CreateActions 
( 
)  
{! "
UpdateAnimator 
= 
state 
=> !
{" #
animator 
. 
SetBool 
( 
$str '
,' (
state) .
.. /
IsFiring/ 7
)7 8
;8 9
animator 
. 
SetBool 
( 
$str *
,* +
state, 1
.1 2
IsReloading2 =
)= >
;> ?
} 	
;	 

FireTrigger 
= 
( 
) 
=> 
animator $
.$ %

SetTrigger% /
(/ 0
$str0 6
)6 7
;7 8
}   
public"" 

void"" 
AddStateChanges"" 
(""  
	IGunState""  )
state""* /
)""/ 0
{""1 2
state## 
.## 
OnStateChanged## 
+=## 
UpdateAnimator##  .
;##. /
}$$ 
public&& 

void&& 
RemoveStateChanges&& "
(&&" #
	IGunState&&# ,
state&&- 2
)&&2 3
{&&4 5
state'' 
.'' 
OnStateChanged'' 
-='' 
UpdateAnimator''  .
;''. /
}(( 
public** 

void** 
AddGunEvents** 
(** 

IGunEvents** '
events**( .
)**. /
{**0 1
events++ 
.++ 
OnFire++ 
.++ 
AddListener++ !
(++! "
FireTrigger++" -
)++- .
;++. /
},, 
public.. 

void.. 
RemoveGunEvents.. 
(..  

IGunEvents..  *
events..+ 1
)..1 2
{..3 4
events// 
.// 
OnFire// 
.// 
RemoveListener// $
(//$ %
FireTrigger//% 0
)//0 1
;//1 2
}00 
}11 
YD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Evan\szAI Test.cs
public 
class 
szAITest 
: 
MonoBehaviour %
{ 
void 
Start	 
( 
) 
{		 
} 
void 
Update	 
( 
) 
{ 
} 
} 
nD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\GunAnimationBehavior.cs
public 
class  
GunAnimationBehavior !
:" #!
StateMachineBehaviour$ 9
{: ;
public 

override 
void 
OnStateExit $
($ %
Animator% -
animator. 6
,6 7
AnimatorStateInfo8 I
	stateInfoJ S
,S T
intU X

layerIndexY c
)c d
{e f
animator 
. 
ResetTrigger 
( 
$str $
)$ %
;% &
base 
. 
OnStateExit 
( 
animator !
,! "
	stateInfo# ,
,, -

layerIndex. 8
)8 9
;9 :
} 
} Ä¦
dD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\GunManager.cs
public 
class 

GunManager 
: 
MonoBehaviour '
{( )
public 

List 
< 
GunBase 
> 
guns 
= 
new  #
List$ (
<( )
GunBase) 0
>0 1
(1 2
)2 3
;3 4
public 

GunBase 

primaryGun 
; 
public 

GunEventHandler 
eventHandler '
;' (
[ 
SerializeField 
] 
public "
GunAnimationController 2
animationController3 F
;F G
[ 
SerializeField 
] 
public 
GunEffectController /
gunEffectController0 C
;C D
public 

bool 
allowRuntimeChanges #
=$ %
true& *
;* +
public 

Camera 
renderCamera 
; 
	protected 
MasterInput 
inputController )
;) *
private 
int 
selectedGun 
= 
$num 
;  
public   

void   
Awake   
(   
)   
{   
inputController!! 
=!! 
new!! 
MasterInput!! )
(!!) *
)!!* +
;!!+ ,
if"" 

("" 
!"" 
guns"" 
."" 
Contains"" 
("" 

primaryGun"" %
)""% &
)""& '
{""( )
Debug## 
.## 
Log## 
(## 
$str## 0
)##0 1
;##1 2

primaryGun$$ 
=$$ 
guns$$ 
.$$ 
Count$$ #
>$$$ %
$num$$& '
?$$( )
guns$$* .
[$$. /
$num$$/ 0
]$$0 1
:$$2 3
null$$4 8
;$$8 9
}&& 	
guns'' 
.'' 
ForEach'' 
('' 
gun'' 
=>'' 

DisableGun'' &
(''& '
gun''' *
)''* +
)''+ ,
;'', -
}(( 
public** 

void** 
OnEnable** 
(** 
)** 
{** 
inputController++ 
.++ 
Enable++ 
(++ 
)++  
;++  !
animationController,, 
.,, 
AddGunEvents,, (
(,,( )
eventHandler,,) 5
),,5 6
;,,6 7
gunEffectController-- 
.-- 

AddEffects-- &
(--& '
eventHandler--' 3
)--3 4
;--4 5
inputController.. 
... 
Player.. 
... 
SwitchWeapon.. +
...+ ,
	performed.., 5
+=..6 8
ctx..9 <
=>..= ?
SwitchWeapon..@ L
(..L M
ctx..M P
...P Q
	ReadValue..Q Z
<..Z [
float..[ `
>..` a
(..a b
)..b c
)..c d
;..d e
if// 

(// 

primaryGun// 
!=// 
null// 
)// 
	EnableGun//  )
(//) *

primaryGun//* 4
)//4 5
;//5 6
}00 
public22 

void22 
	OnDisable22 
(22 
)22 
{22 
inputController33 
.33 
Disable33 
(33  
)33  !
;33! "
animationController44 
.44 
RemoveGunEvents44 +
(44+ ,
eventHandler44, 8
)448 9
;449 :
gunEffectController55 
.55 
RemoveEffects55 )
(55) *
eventHandler55* 6
)556 7
;557 8
inputController66 
.66 
Player66 
.66 
SwitchWeapon66 +
.66+ ,
	performed66, 5
-=666 8
ctx669 <
=>66= ?
SwitchWeapon66@ L
(66L M
ctx66M P
.66P Q
	ReadValue66Q Z
<66Z [
float66[ `
>66` a
(66a b
)66b c
)66c d
;66d e
if77 

(77 

primaryGun77 
!=77 
null77 
)77 

DisableGun77  *
(77* +

primaryGun77+ 5
)775 6
;776 7
}88 
public:: 

void:: 
AddGun:: 
(:: 
GunData:: 
data:: #
)::# $
{::% &

GameObject;; 

gameObject;; 
=;; 
new;;  #

GameObject;;$ .
(;;. /
data;;/ 3
.;;3 4
gunName;;4 ;
);;; <
;;;< =

gameObject<< 
.<< 
	SetActive<< 
(<< 
false<< "
)<<" #
;<<# $
GunBase>> 
gun>> 
=>> 
data>> 
.>> 

properties>> %
.>>% &
type>>& *
switch>>+ 1
{>>2 3
GunProperties?? 
.?? 
GunType?? !
.??! "
Raycast??" )
=>??* ,

gameObject??- 7
.??7 8
AddComponent??8 D
<??D E

RaycastGun??E O
>??O P
(??P Q
)??Q R
,??R S
GunProperties@@ 
.@@ 
GunType@@ !
.@@! "

Projectile@@" ,
=>@@- /

gameObject@@0 :
.@@: ;
AddComponent@@; G
<@@G H
ProjectileGun@@H U
>@@U V
(@@V W
)@@W X
,@@X Y
GunPropertiesAA 
.AA 
GunTypeAA !
.AA! "
BurstAA" '
=>AA( *

gameObjectAA+ 5
.AA5 6
AddComponentAA6 B
<AAB C
BurstGunAAC K
>AAK L
(AAL M
)AAM N
,AAN O
_BB 
=>BB 
nullBB 
}CC 	
;CC	 

ifEE 

(EE 
gunEE 
!=EE 
nullEE 
)EE 
{EE 
gunFF 
.FF 

InitializeFF 
(FF 
dataFF 
,FF  
renderCameraFF! -
.FF- .
	transformFF. 7
,FF7 8
eventHandlerFF9 E
)FFE F
;FFF G

GameObjectGG 
parentGG 
=GG 

GameObjectGG  *
.GG* +
FindGG+ /
(GG/ 0
$strGG0 6
)GG6 7
??GG8 :
newGG; >

GameObjectGG? I
(GGI J
$strGGJ P
)GGP Q
;GGQ R
gunHH 
.HH 
	transformHH 
.HH 
	SetParentHH #
(HH# $
parentHH$ *
.HH* +
	transformHH+ 4
)HH4 5
;HH5 6
ifJJ 
(JJ 
gunsJJ 
.JJ 
CountJJ 
==JJ 
$numJJ 
)JJ  
{JJ! "

primaryGunKK 
=KK 
gunKK  
;KK  !
	EnableGunLL 
(LL 

primaryGunLL $
)LL$ %
;LL% &
CreateViewModelMM 
(MM  
allowRuntimeChangesMM  3
,MM3 4
falseMM5 :
)MM: ;
;MM; <
}NN 
gunsOO 
.OO 
AddOO 
(OO 
gunOO 
)OO 
;OO 
}PP 	
}QQ 
publicSS 

voidSS 
	EnableGunSS 
(SS 
GunBaseSS !
gunSS" %
)SS% &
{SS' (
gunTT 
.TT 
SetEventHandlerTT 
(TT 
eventHandlerTT (
)TT( )
;TT) *
eventHandlerUU 
.UU 
SetStateControllerUU '
(UU' (
gunUU( +
)UU+ ,
;UU, -
animationControllerVV 
.VV 
AddStateChangesVV +
(VV+ ,
gunVV, /
)VV/ 0
;VV0 1
gunWW 
.WW 

gameObjectWW 
.WW 
	SetActiveWW  
(WW  !
trueWW! %
)WW% &
;WW& '
}XX 
publicZZ 

voidZZ 

DisableGunZZ 
(ZZ 
GunBaseZZ "
gunZZ# &
)ZZ& '
{ZZ( )
gun[[ 
.[[ 

gameObject[[ 
.[[ 
	SetActive[[  
([[  !
false[[! &
)[[& '
;[[' (
animationController\\ 
.\\ 
RemoveStateChanges\\ .
(\\. /
gun\\/ 2
)\\2 3
;\\3 4
}]] 
public__ 

void__ 
SwitchWeapon__ 
(__ 
float__ "
delta__# (
)__( )
{__* +
if`` 

(`` 
guns`` 
.`` 
Count`` 
<=`` 
$num`` 
||`` 
!``  

primaryGun``  *
.``* +
	CanSwitch``+ 4
(``4 5
)``5 6
)``6 7
return``8 >
;``> ?

DisableGunbb 
(bb 

primaryGunbb 
)bb 
;bb 

primaryGuncc 
=cc 
deltacc 
>cc 
$numcc 
?cc  
NextGuncc! (
(cc( )
)cc) *
:cc+ ,
PreviousGuncc- 8
(cc8 9
)cc9 :
;cc: ;
	EnableGundd 
(dd 

primaryGundd 
)dd 
;dd 
CreateViewModelee 
(ee 
allowRuntimeChangesee +
,ee+ ,
falseee- 2
)ee2 3
;ee3 4
}ff 
publichh 

GunBasehh 
NextGunhh 
(hh 
)hh 
{hh 
selectedGunii 
++ii 
;ii 
ifjj 

(jj 
selectedGunjj 
>=jj 
gunsjj 
.jj  
Countjj  %
)jj% &
{jj' (
selectedGunkk 
=kk 
$numkk 
;kk 
}ll 	
Debugmm 
.mm 
Logmm 
(mm 
$strmm 
+mm 
selectedGunmm (
)mm( )
;mm) *
returnnn 
gunsnn 
[nn 
selectedGunnn 
]nn  
;nn  !
}oo 
publicqq 

GunBaseqq 
PreviousGunqq 
(qq 
)qq  
{qq! "
selectedGunrr 
--rr 
;rr 
ifss 

(ss 
selectedGunss 
<=ss 
-ss 
$numss 
)ss 
{ss  
selectedGuntt 
=tt 
gunstt 
.tt 
Counttt $
-tt% &
$numtt' (
;tt( )
}uu 	
Debugvv 
.vv 
Logvv 
(vv 
$strvv 
+vv  
selectedGunvv! ,
)vv, -
;vv- .
returnww 
gunsww 
[ww 
selectedGunww 
]ww  
;ww  !
}xx 
publiczz 

voidzz 
CreateViewModelzz 
(zz  
boolzz  $
allowChangeszz% 1
,zz1 2
boolzz3 7
destroyImmediatezz8 H
)zzH I
{zzJ K
if{{ 

({{ 
!{{ 
allowChanges{{ 
){{ 
return{{ !
;{{! "
void}} 
DestroyObject}} 
(}} 

GameObject}} %

gameObject}}& 0
)}}0 1
{}}2 3
if~~ 
(~~ 
destroyImmediate~~  
)~~  !
DestroyImmediate~~" 2
(~~2 3

gameObject~~3 =
)~~= >
;~~> ?
else 
Destroy 
( 

gameObject #
)# $
;$ %
}
 	
var
 
	viewModel
 
=
 

primaryGun
 "
.
" #
	ViewModel
# ,
;
, -
	Transform
 
previousChild
 
;
  
var
 
model
 
=
 
Instantiate
 
(
  
	viewModel
  )
.
) *
gunModel
* 2
,
2 3
	viewModel
4 =
.
= >
	gunOffset
> G
,
G H
	viewModel
I R
.
R S
gunRotation
S ^
)
^ _
;
_ `
model
 
.
 
name
 
=
 
$str
 "
;
" #
var
 
animator
 
=
 
model
 
.
 
AddComponent
 )
<
) *
Animator
* 2
>
2 3
(
3 4
)
4 5
;
5 6
animator
 
.
 '
runtimeAnimatorController
 *
=
+ ,
	viewModel
- 6
.
6 7 
animatorController
7 I
;
I J!
animationController
 
.
 
animator
 $
=
% &
animator
' /
;
/ 0
var
 
effects
 
=
 

primaryGun
  
.
  !
Effects
! (
;
( )
var
 
muzzleFlash
 
=
 
Instantiate
 %
(
% &
effects
& -
.
- .
muzzleFlash
. 9
,
9 :
effects
; B
.
B C
effectOffset
C O
,
O P
effects
Q X
.
X Y
effectRotation
Y g
)
g h
;
h i
muzzleFlash
 
.
 
name
 
=
 
$str
 )
;
) *!
gunEffectController
 
.
 
muzzleFlash
 '
=
( )
muzzleFlash
* 5
;
5 6
var
 
tracers
 
=
 
Instantiate
 !
(
! "
effects
" )
.
) *
tracers
* 1
,
1 2
effects
3 :
.
: ;
effectOffset
; G
,
G H
effects
I P
.
P Q
effectRotation
Q _
)
_ `
;
` a
tracers
 
.
 
name
 
=
 
$str
  
;
  !!
gunEffectController
 
.
 
tracers
 #
=
$ %
tracers
& -
;
- .!
gunEffectController
 
.
 !
AddParticleListener
 /
(
/ 0
)
0 1
;
1 2!
gunEffectController
 
.
 
impactEffect
 (
=
) *
effects
+ 2
.
2 3
impactEffect
3 ?
;
? @
previousChild
 
=
 
renderCamera
 $
.
$ %
	transform
% .
.
. /
Find
/ 3
(
3 4
$str
4 A
)
A B
;
B C
if
 

(
 
previousChild
 
!=
 
null
 !
)
! "
DestroyObject
# 0
(
0 1
previousChild
1 >
.
> ?

gameObject
? I
)
I J
;
J K
model
 
.
 
	transform
 
.
 
	SetParent
 !
(
! "
renderCamera
" .
.
. /
	transform
/ 8
,
8 9
false
: ?
)
? @
;
@ A
muzzleFlash
 
.
 
	transform
 
.
 
	SetParent
 '
(
' (
model
( -
.
- .
	transform
. 7
,
7 8
false
9 >
)
> ?
;
? @
tracers
 
.
 
	transform
 
.
 
	SetParent
 #
(
# $
model
$ )
.
) *
	transform
* 3
,
3 4
false
5 :
)
: ;
;
; <
var
¡¡ 
	guiCanvas
¡¡ 
=
¡¡ 

GameObject
¡¡ "
.
¡¡" #
Find
¡¡# '
(
¡¡' (
$str
¡¡( 4
)
¡¡4 5
;
¡¡5 6
if
¢¢ 

(
¢¢ 
	guiCanvas
¢¢ 
==
¢¢ 
null
¢¢ 
)
¢¢ 
{
¢¢  
	guiCanvas
££ 
=
££ 
new
££ 

GameObject
££ &
(
££& '
$str
££' 3
)
££3 4
;
££4 5
	guiCanvas
¤¤ 
.
¤¤ 
layer
¤¤ 
=
¤¤ 
$num
¤¤ 
;
¤¤  
var
¦¦ 
canvas
¦¦ 
=
¦¦ 
	guiCanvas
¦¦ "
.
¦¦" #
AddComponent
¦¦# /
<
¦¦/ 0
Canvas
¦¦0 6
>
¦¦6 7
(
¦¦7 8
)
¦¦8 9
;
¦¦9 :
canvas
§§ 
.
§§ 

renderMode
§§ 
=
§§ 

RenderMode
§§  *
.
§§* + 
ScreenSpaceOverlay
§§+ =
;
§§= >
canvas
¨¨ 
.
¨¨ 
targetDisplay
¨¨  
=
¨¨! "
$num
¨¨# $
;
¨¨$ %
var
ªª 
scaler
ªª 
=
ªª 
	guiCanvas
ªª "
.
ªª" #
AddComponent
ªª# /
<
ªª/ 0
CanvasScaler
ªª0 <
>
ªª< =
(
ªª= >
)
ªª> ?
;
ªª? @
scaler
«« 
.
«« 
uiScaleMode
«« 
=
««  
CanvasScaler
««! -
.
««- .
	ScaleMode
««. 7
.
««7 8!
ScaleWithScreenSize
««8 K
;
««K L
scaler
¬¬ 
.
¬¬ !
referenceResolution
¬¬ &
=
¬¬' (
new
¬¬) ,
Vector2
¬¬- 4
(
¬¬4 5
$num
¬¬5 8
,
¬¬8 9
$num
¬¬: =
)
¬¬= >
;
¬¬> ?
scaler
­­ 
.
­­  
matchWidthOrHeight
­­ %
=
­­& '
$num
­­( ,
;
­­, -
	guiCanvas
¯¯ 
.
¯¯ 
AddComponent
¯¯ "
<
¯¯" #
CanvasRenderer
¯¯# 1
>
¯¯1 2
(
¯¯2 3
)
¯¯3 4
;
¯¯4 5
}
°° 	

GameObject
²² 
crosshairImage
²² !
=
²²" #
new
²²$ '

GameObject
²²( 2
(
²²2 3
$str
²²3 D
)
²²D E
;
²²E F
crosshairImage
³³ 
.
³³ 
layer
³³ 
=
³³ 
$num
³³  
;
³³  !
var
µµ 
image
µµ 
=
µµ 
crosshairImage
µµ "
.
µµ" #
AddComponent
µµ# /
<
µµ/ 0
Image
µµ0 5
>
µµ5 6
(
µµ6 7
)
µµ7 8
;
µµ8 9
image
¶¶ 
.
¶¶ 
sprite
¶¶ 
=
¶¶ 
	viewModel
¶¶  
.
¶¶  !
	crosshair
¶¶! *
;
¶¶* +
image
·· 
.
·· 
SetNativeSize
·· 
(
·· 
)
·· 
;
·· 
previousChild
¹¹ 
=
¹¹ 
	guiCanvas
¹¹ !
.
¹¹! "
	transform
¹¹" +
.
¹¹+ ,
Find
¹¹, 0
(
¹¹0 1
$str
¹¹1 B
)
¹¹B C
;
¹¹C D
if
ºº 

(
ºº 
previousChild
ºº 
!=
ºº 
null
ºº !
)
ºº! "
DestroyObject
ºº# 0
(
ºº0 1
previousChild
ºº1 >
.
ºº> ?

gameObject
ºº? I
)
ººI J
;
ººJ K
crosshairImage
»» 
.
»» 
	transform
»»  
.
»»  !
	SetParent
»»! *
(
»»* +
	guiCanvas
»»+ 4
.
»»4 5
	transform
»»5 >
,
»»> ?
false
»»@ E
)
»»E F
;
»»F G
}
¼¼ 
[
ÁÁ 
CustomEditor
ÁÁ 
(
ÁÁ 
typeof
ÁÁ 
(
ÁÁ 

GunManager
ÁÁ #
)
ÁÁ# $
)
ÁÁ$ %
]
ÁÁ% &
public
ÂÂ 

class
ÂÂ !
GunManagerInspector
ÂÂ $
:
ÂÂ% &
Editor
ÂÂ' -
{
ÂÂ. /
public
ÃÃ 
override
ÃÃ 
void
ÃÃ 
OnInspectorGUI
ÃÃ +
(
ÃÃ+ ,
)
ÃÃ, -
{
ÃÃ. /"
DrawDefaultInspector
ÄÄ  
(
ÄÄ  !
)
ÄÄ! "
;
ÄÄ" #
if
ÅÅ 
(
ÅÅ 
	GUILayout
ÅÅ 
.
ÅÅ 
Button
ÅÅ  
(
ÅÅ  !
$str
ÅÅ! 4
)
ÅÅ4 5
)
ÅÅ5 6
{
ÅÅ7 8
var
ÆÆ 
manager
ÆÆ 
=
ÆÆ 
target
ÆÆ $
as
ÆÆ% '

GunManager
ÆÆ( 2
;
ÆÆ2 3
manager
ÇÇ 
.
ÇÇ 
CreateViewModel
ÇÇ '
(
ÇÇ' (
true
ÇÇ( ,
,
ÇÇ, -
true
ÇÇ. 2
)
ÇÇ2 3
;
ÇÇ3 4
EditorUtility
ÈÈ 
.
ÈÈ 
SetDirty
ÈÈ &
(
ÈÈ& '
manager
ÈÈ' .
)
ÈÈ. /
;
ÈÈ/ 0
}
ÊÊ 
}
ËË 	
}
ÌÌ 
}ÎÎ »
bD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\BurstGun.cs
public 
class 
BurstGun 
: 

RaycastGun "
{# $
private 
bool 

isBursting 
= 
false #
;# $
public 

override 
bool 
CanFire  
(  !
)! "
{# $
return 
base 
. 
CanFire 
( 
) 
&& 
currentShots 
> 
$num 
&& 
! 

isBursting 
; 
} 
public 

override 
void 
Fire 
( 
) 
{  !
base 
. 
Fire 
( 
) 
; 
StartCoroutine 
( 
FireCouroutine %
(% &
)& '
)' (
;( )
} 
public 

virtual 
IEnumerator 
FireCouroutine -
(- .
). /
{0 1
currentShots 
-- 
; 

isBursting 
= 
currentShots !
>" #
$num$ %
&&& (
CurrentAmmo) 4
>5 6
$num7 8
;8 9
if 

( 

isBursting 
) 
{ 
yield   
return   
new   
WaitForSeconds   +
(  + ,

Properties  , 6
.  6 7
shotRate  7 ?
)  ? @
;  @ A
eventHandler!! 
.!! 
OnFire!! 
?!!  
.!!  !
Invoke!!! '
(!!' (
)!!( )
;!!) *
}"" 	
else""
 
{"" 
currentShots## 
=## 

Properties## %
.##% &
shotsPerTrigger##& 5
;##5 6
}$$ 	
}%% 
public'' 

override'' 
bool'' 
	CanReload'' "
(''" #
)''# $
{''% &
return(( 
base(( 
.(( 
	CanReload(( 
((( 
)(( 
&&((  "
!((# $

isBursting(($ .
;((. /
})) 
public++ 

override++ 
bool++ 
	CanSwitch++ "
(++" #
)++# $
{++% &
return,, 
base,, 
.,, 
	CanSwitch,, 
(,, 
),, 
&&,,  "
!,,# $

isBursting,,$ .
;,,. /
}-- 
}.. Â
sD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Scripts\ParticleCollisionListener.cs
public 
class %
ParticleCollisionListener &
:' (
MonoBehaviour) 6
{7 8
public 


UnityEvent 
< 

GameObject  
>  !
OnCollision" -
=. /
new0 3

UnityEvent4 >
<> ?

GameObject? I
>I J
(J K
)K L
;L M
void 
OnParticleCollision	 
( 

GameObject '
other( -
)- .
{/ 0
OnCollision 
? 
. 
Invoke 
( 
other !
)! "
;" #
} 
} ª¬
tD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Store Assets\QuickOutline\Scripts\Outline.cs
[ %
DisallowMultipleComponent 
] 
public 
class 
Outline 
: 
MonoBehaviour $
{% &
private 	
static
 
HashSet 
< 
Mesh 
> 
registeredMeshes /
=0 1
new2 5
HashSet6 =
<= >
Mesh> B
>B C
(C D
)D E
;E F
public 
enum	 
Mode 
{ 

OutlineAll 
, 
OutlineVisible 
, 
OutlineHidden 
,  
OutlineAndSilhouette 
, 
SilhouetteOnly 
} 
public 
Mode	 
OutlineMode 
{ 
get 
{ 	
return
 
outlineMode 
; 
} 
set 
{ 	
outlineMode 
= 
value 
; 
needsUpdate 
= 
true 
; 
}   
}!! 
public## 
Color##	 
OutlineColor## 
{## 
get$$ 
{$$ 	
return$$
 
outlineColor$$ 
;$$ 
}$$  
set%% 
{%% 	
outlineColor&& 
=&& 
value&& 
;&& 
needsUpdate'' 
='' 
true'' 
;'' 
}(( 
})) 
public++ 
float++	 
OutlineWidth++ 
{++ 
get,, 
{,, 	
return,,
 
outlineWidth,, 
;,, 
},,  
set-- 
{-- 	
outlineWidth.. 
=.. 
value.. 
;.. 
needsUpdate// 
=// 
true// 
;// 
}00 
}11 
[33 
Serializable33 
]33 
private44 	
class44
 
ListVector344 
{44 
public55 

List55 
<55 
Vector355 
>55 
data55 
;55 
}66 
[88 
SerializeField88 
]88 
private99 	
Mode99
 
outlineMode99 
;99 
[;; 
SerializeField;; 
];; 
private<< 	
Color<<
 
outlineColor<< 
=<< 
Color<< $
.<<$ %
white<<% *
;<<* +
[>> 
SerializeField>> 
,>> 
Range>> 
(>> 
$num>> 
,>> 
$num>>  
)>>  !
]>>! "
private?? 	
float??
 
outlineWidth?? 
=?? 
$num?? !
;??! "
[AA 
HeaderAA 	
(AA	 

$strAA
 
)AA 
]AA 
[CC 
SerializeFieldCC 
,CC 
TooltipCC 
(CC 
$str	CC 
+DD 
$str	DD 
)
DD 
]
DD 
privateEE 	
boolEE
 
precomputeOutlineEE  
;EE  !
[GG 
SerializeFieldGG 
,GG 
HideInInspectorGG "
]GG" #
privateHH 	
ListHH
 
<HH 
MeshHH 
>HH 
bakeKeysHH 
=HH 
newHH  #
ListHH$ (
<HH( )
MeshHH) -
>HH- .
(HH. /
)HH/ 0
;HH0 1
[JJ 
SerializeFieldJJ 
,JJ 
HideInInspectorJJ "
]JJ" #
privateKK 	
ListKK
 
<KK 
ListVector3KK 
>KK 

bakeValuesKK &
=KK' (
newKK) ,
ListKK- 1
<KK1 2
ListVector3KK2 =
>KK= >
(KK> ?
)KK? @
;KK@ A
privateMM 	
RendererMM
 
[MM 
]MM 
	renderersMM 
;MM 
privateNN 	
MaterialNN
 
outlineMaskMaterialNN &
;NN& '
privateOO 	
MaterialOO
 
outlineFillMaterialOO &
;OO& '
privateQQ 	
boolQQ
 
needsUpdateQQ 
;QQ 
voidSS 
AwakeSS 
(SS 
)SS 
{SS 
	renderersVV 
=VV #
GetComponentsInChildrenVV '
<VV' (
RendererVV( 0
>VV0 1
(VV1 2
)VV2 3
;VV3 4
outlineMaskMaterialYY 
=YY 
InstantiateYY %
(YY% &
	ResourcesYY& /
.YY/ 0
LoadYY0 4
<YY4 5
MaterialYY5 =
>YY= >
(YY> ?
$strYY? W
)YYW X
)YYX Y
;YYY Z
outlineFillMaterialZZ 
=ZZ 
InstantiateZZ %
(ZZ% &
	ResourcesZZ& /
.ZZ/ 0
LoadZZ0 4
<ZZ4 5
MaterialZZ5 =
>ZZ= >
(ZZ> ?
$strZZ? W
)ZZW X
)ZZX Y
;ZZY Z
outlineMaskMaterial\\ 
.\\ 
name\\ 
=\\ 
$str\\ 7
;\\7 8
outlineFillMaterial]] 
.]] 
name]] 
=]] 
$str]] 7
;]]7 8
LoadSmoothNormals`` 
(`` 
)`` 
;`` 
needsUpdatecc 
=cc 
truecc 
;cc 
}dd 
voidff 
OnEnableff 
(ff 
)ff 
{ff 
foreachgg 
(gg 
vargg 
renderergg 
ingg 
	renderersgg &
)gg& '
{gg( )
varjj 	
	materialsjj
 
=jj 
rendererjj 
.jj 
sharedMaterialsjj .
.jj. /
ToListjj/ 5
(jj5 6
)jj6 7
;jj7 8
	materialsll 
.ll 
Addll 
(ll 
outlineMaskMaterialll '
)ll' (
;ll( )
	materialsmm 
.mm 
Addmm 
(mm 
outlineFillMaterialmm '
)mm' (
;mm( )
rendereroo 
.oo 
	materialsoo 
=oo 
	materialsoo $
.oo$ %
ToArrayoo% ,
(oo, -
)oo- .
;oo. /
}pp 
}qq 
voidss 

OnValidatess 
(ss 
)ss 
{ss 
needsUpdatevv 
=vv 
truevv 
;vv 
ifyy 
(yy 
!yy 	
precomputeOutlineyy	 
&&yy 
bakeKeysyy &
.yy& '
Countyy' ,
!=yy- /
$numyy0 1
||yy2 4
bakeKeysyy5 =
.yy= >
Countyy> C
!=yyD F

bakeValuesyyG Q
.yyQ R
CountyyR W
)yyW X
{yyY Z
bakeKeyszz 
.zz 
Clearzz 
(zz 
)zz 
;zz 

bakeValues{{ 
.{{ 
Clear{{ 
({{ 
){{ 
;{{ 
}|| 
if 
( 
precomputeOutline 
&& 
bakeKeys %
.% &
Count& +
==, .
$num/ 0
)0 1
{2 3
Bake
 

(

 
)
 
;
 
}
 
}
 
void
 
Update
 
(
 
)
 
{
 
if
 
(
 
needsUpdate
 
)
 
{
 
needsUpdate
 
=
 
false
 
;
 &
UpdateMaterialProperties
 
(
 
)
  
;
  !
}
 
}
 
void
 
	OnDisable
 
(
 
)
 
{
 
foreach
 
(
 
var
 
renderer
 
in
 
	renderers
 &
)
& '
{
( )
var
 	
	materials

 
=
 
renderer
 
.
 
sharedMaterials
 .
.
. /
ToList
/ 5
(
5 6
)
6 7
;
7 8
	materials
 
.
 
Remove
 
(
 !
outlineMaskMaterial
 *
)
* +
;
+ ,
	materials
 
.
 
Remove
 
(
 !
outlineFillMaterial
 *
)
* +
;
+ ,
renderer
 
.
 
	materials
 
=
 
	materials
 $
.
$ %
ToArray
% ,
(
, -
)
- .
;
. /
}
 
}
 
void
 
	OnDestroy
 
(
 
)
 
{
 
Destroy
 
(
 !
outlineMaskMaterial
 
)
  
;
  !
Destroy
 
(
 !
outlineFillMaterial
 
)
  
;
  !
}
 
void
   
Bake
   
(
   
)
   
{
   
var
££ 
bakedMeshes
££ 
=
££ 
new
££ 
HashSet
££ !
<
££! "
Mesh
££" &
>
££& '
(
££' (
)
££( )
;
££) *
foreach
¥¥ 
(
¥¥ 
var
¥¥ 

meshFilter
¥¥ 
in
¥¥ %
GetComponentsInChildren
¥¥ 6
<
¥¥6 7

MeshFilter
¥¥7 A
>
¥¥A B
(
¥¥B C
)
¥¥C D
)
¥¥D E
{
¥¥F G
if
¨¨ 
(
¨¨	 

!
¨¨
 
bakedMeshes
¨¨ 
.
¨¨ 
Add
¨¨ 
(
¨¨ 

meshFilter
¨¨ %
.
¨¨% &

sharedMesh
¨¨& 0
)
¨¨0 1
)
¨¨1 2
{
¨¨3 4
continue
©© 
;
©© 
}
ªª 
var
­­ 	
smoothNormals
­­
 
=
­­ 
SmoothNormals
­­ '
(
­­' (

meshFilter
­­( 2
.
­­2 3

sharedMesh
­­3 =
)
­­= >
;
­­> ?
bakeKeys
¯¯ 
.
¯¯ 
Add
¯¯ 
(
¯¯ 

meshFilter
¯¯ 
.
¯¯ 

sharedMesh
¯¯ (
)
¯¯( )
;
¯¯) *

bakeValues
°° 
.
°° 
Add
°° 
(
°° 
new
°° 
ListVector3
°° $
(
°°$ %
)
°°% &
{
°°' (
data
°°) -
=
°°. /
smoothNormals
°°0 =
}
°°> ?
)
°°? @
;
°°@ A
}
±± 
}
²² 
void
´´ 
LoadSmoothNormals
´´ 
(
´´ 
)
´´ 
{
´´ 
foreach
·· 
(
·· 
var
·· 

meshFilter
·· 
in
·· %
GetComponentsInChildren
·· 6
<
··6 7

MeshFilter
··7 A
>
··A B
(
··B C
)
··C D
)
··D E
{
··F G
if
ºº 
(
ºº	 

!
ºº
 
registeredMeshes
ºº 
.
ºº 
Add
ºº 
(
ºº  

meshFilter
ºº  *
.
ºº* +

sharedMesh
ºº+ 5
)
ºº5 6
)
ºº6 7
{
ºº8 9
continue
»» 
;
»» 
}
¼¼ 
var
¿¿ 	
index
¿¿
 
=
¿¿ 
bakeKeys
¿¿ 
.
¿¿ 
IndexOf
¿¿ "
(
¿¿" #

meshFilter
¿¿# -
.
¿¿- .

sharedMesh
¿¿. 8
)
¿¿8 9
;
¿¿9 :
var
ÀÀ 	
smoothNormals
ÀÀ
 
=
ÀÀ 
(
ÀÀ 
index
ÀÀ  
>=
ÀÀ! #
$num
ÀÀ$ %
)
ÀÀ% &
?
ÀÀ' (

bakeValues
ÀÀ) 3
[
ÀÀ3 4
index
ÀÀ4 9
]
ÀÀ9 :
.
ÀÀ: ;
data
ÀÀ; ?
:
ÀÀ@ A
SmoothNormals
ÀÀB O
(
ÀÀO P

meshFilter
ÀÀP Z
.
ÀÀZ [

sharedMesh
ÀÀ[ e
)
ÀÀe f
;
ÀÀf g

meshFilter
ÃÃ 
.
ÃÃ 

sharedMesh
ÃÃ 
.
ÃÃ 
SetUVs
ÃÃ "
(
ÃÃ" #
$num
ÃÃ# $
,
ÃÃ$ %
smoothNormals
ÃÃ& 3
)
ÃÃ3 4
;
ÃÃ4 5
}
ÄÄ 
foreach
ÇÇ 
(
ÇÇ 
var
ÇÇ !
skinnedMeshRenderer
ÇÇ $
in
ÇÇ% '%
GetComponentsInChildren
ÇÇ( ?
<
ÇÇ? @!
SkinnedMeshRenderer
ÇÇ@ S
>
ÇÇS T
(
ÇÇT U
)
ÇÇU V
)
ÇÇV W
{
ÇÇX Y
if
ÈÈ 
(
ÈÈ	 

registeredMeshes
ÈÈ
 
.
ÈÈ 
Add
ÈÈ 
(
ÈÈ !
skinnedMeshRenderer
ÈÈ 2
.
ÈÈ2 3

sharedMesh
ÈÈ3 =
)
ÈÈ= >
)
ÈÈ> ?
{
ÈÈ@ A!
skinnedMeshRenderer
ÉÉ 
.
ÉÉ 

sharedMesh
ÉÉ &
.
ÉÉ& '
uv4
ÉÉ' *
=
ÉÉ+ ,
new
ÉÉ- 0
Vector2
ÉÉ1 8
[
ÉÉ8 9!
skinnedMeshRenderer
ÉÉ9 L
.
ÉÉL M

sharedMesh
ÉÉM W
.
ÉÉW X
vertexCount
ÉÉX c
]
ÉÉc d
;
ÉÉd e
}
ÊÊ 
}
ËË 
}
ÌÌ 
List
ÎÎ 
<
ÎÎ 
Vector3
ÎÎ 
>
ÎÎ 
SmoothNormals
ÎÎ 
(
ÎÎ 
Mesh
ÎÎ "
mesh
ÎÎ# '
)
ÎÎ' (
{
ÎÎ) *
var
ÑÑ 
groups
ÑÑ 
=
ÑÑ 
mesh
ÑÑ 
.
ÑÑ 
vertices
ÑÑ 
.
ÑÑ 
Select
ÑÑ %
(
ÑÑ% &
(
ÑÑ& '
vertex
ÑÑ' -
,
ÑÑ- .
index
ÑÑ/ 4
)
ÑÑ4 5
=>
ÑÑ6 8
new
ÑÑ9 <
KeyValuePair
ÑÑ= I
<
ÑÑI J
Vector3
ÑÑJ Q
,
ÑÑQ R
int
ÑÑS V
>
ÑÑV W
(
ÑÑW X
vertex
ÑÑX ^
,
ÑÑ^ _
index
ÑÑ` e
)
ÑÑe f
)
ÑÑf g
.
ÑÑg h
GroupBy
ÑÑh o
(
ÑÑo p
pair
ÑÑp t
=>
ÑÑu w
pair
ÑÑx |
.
ÑÑ| }
KeyÑÑ} 
)ÑÑ 
;ÑÑ 
var
ÔÔ 
smoothNormals
ÔÔ 
=
ÔÔ 
new
ÔÔ 
List
ÔÔ  
<
ÔÔ  !
Vector3
ÔÔ! (
>
ÔÔ( )
(
ÔÔ) *
mesh
ÔÔ* .
.
ÔÔ. /
normals
ÔÔ/ 6
)
ÔÔ6 7
;
ÔÔ7 8
foreach
×× 
(
×× 
var
×× 
group
×× 
in
×× 
groups
××  
)
××  !
{
××" #
if
ÚÚ 
(
ÚÚ	 

group
ÚÚ
 
.
ÚÚ 
Count
ÚÚ 
(
ÚÚ 
)
ÚÚ 
==
ÚÚ 
$num
ÚÚ 
)
ÚÚ 
{
ÚÚ 
continue
ÛÛ 
;
ÛÛ 
}
ÜÜ 
var
ßß 	
smoothNormal
ßß
 
=
ßß 
Vector3
ßß  
.
ßß  !
zero
ßß! %
;
ßß% &
foreach
áá 
(
áá 
var
áá 
pair
áá 
in
áá 
group
áá  
)
áá  !
{
áá" #
smoothNormal
ââ 
+=
ââ 
mesh
ââ 
.
ââ 
normals
ââ $
[
ââ$ %
pair
ââ% )
.
ââ) *
Value
ââ* /
]
ââ/ 0
;
ââ0 1
}
ãã 
smoothNormal
åå 
.
åå 
	Normalize
åå 
(
åå 
)
åå 
;
åå 
foreach
èè 
(
èè 
var
èè 
pair
èè 
in
èè 
group
èè  
)
èè  !
{
èè" #
smoothNormals
éé 
[
éé 
pair
éé 
.
éé 
Value
éé  
]
éé  !
=
éé" #
smoothNormal
éé$ 0
;
éé0 1
}
êê 
}
ëë 
return
íí 

smoothNormals
íí 
;
íí 
}
îî 
void
ðð &
UpdateMaterialProperties
ðð 
(
ðð  
)
ðð  !
{
ðð" #!
outlineFillMaterial
óó 
.
óó 
SetColor
óó  
(
óó  !
$str
óó! 0
,
óó0 1
outlineColor
óó2 >
)
óó> ?
;
óó? @
switch
õõ 

(
õõ 
outlineMode
õõ 
)
õõ 
{
õõ 
case
öö 

Mode
öö 
.
öö 

OutlineAll
öö 
:
öö !
outlineMaskMaterial
÷÷ 
.
÷÷ 
SetFloat
÷÷ $
(
÷÷$ %
$str
÷÷% -
,
÷÷- .
(
÷÷/ 0
float
÷÷0 5
)
÷÷5 6
UnityEngine
÷÷6 A
.
÷÷A B
	Rendering
÷÷B K
.
÷÷K L
CompareFunction
÷÷L [
.
÷÷[ \
Always
÷÷\ b
)
÷÷b c
;
÷÷c d!
outlineFillMaterial
øø 
.
øø 
SetFloat
øø $
(
øø$ %
$str
øø% -
,
øø- .
(
øø/ 0
float
øø0 5
)
øø5 6
UnityEngine
øø6 A
.
øøA B
	Rendering
øøB K
.
øøK L
CompareFunction
øøL [
.
øø[ \
Always
øø\ b
)
øøb c
;
øøc d!
outlineFillMaterial
ùù 
.
ùù 
SetFloat
ùù $
(
ùù$ %
$str
ùù% 4
,
ùù4 5
outlineWidth
ùù6 B
)
ùùB C
;
ùùC D
break
úú 
;
úú 
case
üü 

Mode
üü 
.
üü 
OutlineVisible
üü 
:
üü !
outlineMaskMaterial
ýý 
.
ýý 
SetFloat
ýý $
(
ýý$ %
$str
ýý% -
,
ýý- .
(
ýý/ 0
float
ýý0 5
)
ýý5 6
UnityEngine
ýý6 A
.
ýýA B
	Rendering
ýýB K
.
ýýK L
CompareFunction
ýýL [
.
ýý[ \
Always
ýý\ b
)
ýýb c
;
ýýc d!
outlineFillMaterial
þþ 
.
þþ 
SetFloat
þþ $
(
þþ$ %
$str
þþ% -
,
þþ- .
(
þþ/ 0
float
þþ0 5
)
þþ5 6
UnityEngine
þþ6 A
.
þþA B
	Rendering
þþB K
.
þþK L
CompareFunction
þþL [
.
þþ[ \
	LessEqual
þþ\ e
)
þþe f
;
þþf g!
outlineFillMaterial
ÿÿ 
.
ÿÿ 
SetFloat
ÿÿ $
(
ÿÿ$ %
$str
ÿÿ% 4
,
ÿÿ4 5
outlineWidth
ÿÿ6 B
)
ÿÿB C
;
ÿÿC D
break
 
;
 
case
 

Mode
 
.
 
OutlineHidden
 
:
 !
outlineMaskMaterial
 
.
 
SetFloat
 $
(
$ %
$str
% -
,
- .
(
/ 0
float
0 5
)
5 6
UnityEngine
6 A
.
A B
	Rendering
B K
.
K L
CompareFunction
L [
.
[ \
Always
\ b
)
b c
;
c d!
outlineFillMaterial
 
.
 
SetFloat
 $
(
$ %
$str
% -
,
- .
(
/ 0
float
0 5
)
5 6
UnityEngine
6 A
.
A B
	Rendering
B K
.
K L
CompareFunction
L [
.
[ \
Greater
\ c
)
c d
;
d e!
outlineFillMaterial
 
.
 
SetFloat
 $
(
$ %
$str
% 4
,
4 5
outlineWidth
6 B
)
B C
;
C D
break
 
;
 
case
 

Mode
 
.
 "
OutlineAndSilhouette
 $
:
$ %!
outlineMaskMaterial
 
.
 
SetFloat
 $
(
$ %
$str
% -
,
- .
(
/ 0
float
0 5
)
5 6
UnityEngine
6 A
.
A B
	Rendering
B K
.
K L
CompareFunction
L [
.
[ \
	LessEqual
\ e
)
e f
;
f g!
outlineFillMaterial
 
.
 
SetFloat
 $
(
$ %
$str
% -
,
- .
(
/ 0
float
0 5
)
5 6
UnityEngine
6 A
.
A B
	Rendering
B K
.
K L
CompareFunction
L [
.
[ \
Always
\ b
)
b c
;
c d!
outlineFillMaterial
 
.
 
SetFloat
 $
(
$ %
$str
% 4
,
4 5
outlineWidth
6 B
)
B C
;
C D
break
 
;
 
case
 

Mode
 
.
 
SilhouetteOnly
 
:
 !
outlineMaskMaterial
 
.
 
SetFloat
 $
(
$ %
$str
% -
,
- .
(
/ 0
float
0 5
)
5 6
UnityEngine
6 A
.
A B
	Rendering
B K
.
K L
CompareFunction
L [
.
[ \
	LessEqual
\ e
)
e f
;
f g!
outlineFillMaterial
 
.
 
SetFloat
 $
(
$ %
$str
% -
,
- .
(
/ 0
float
0 5
)
5 6
UnityEngine
6 A
.
A B
	Rendering
B K
.
K L
CompareFunction
L [
.
[ \
Greater
\ c
)
c d
;
d e!
outlineFillMaterial
 
.
 
SetFloat
 $
(
$ %
$str
% 4
,
4 5
$num
6 7
)
7 8
;
8 9
break
 
;
 
}
 
}
 
} þ
\D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Anthony\HealthBar.cs
public 
class 
	HealthBar 
: 
MonoBehaviour &
{ 
public 

Slider 
	healthBar 
; 
void		 
Start			 
(		 
)		 
{

 
var 
playerHealth 
= 

GameObject %
.% &!
FindGameObjectWithTag& ;
(; <
$str< D
)D E
.E F
GetComponentF R
<R S
HealthS Y
>Y Z
(Z [
)[ \
;\ ]
playerHealth 
. 
OnHealthPctChanged '
+=( *
percent+ 2
=>3 5
	healthBar6 ?
.? @
value@ E
=F G
	healthBarH Q
.Q R
maxValueR Z
*[ \
percent] d
;d e
} 
} °	
\D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Anthony\AmmoCount.cs
public 
class 
	AmmoCount 
: 
MonoBehaviour &
{' (
public 

Text 

ammoAmount 
; 
public 


GunManager 
ammo 
; 
void 
Start	 
( 
) 
{ 
ammo		 
=		 
ammo		 
?		 
ammo		 
:		 

GameObject		 '
.		' (!
FindGameObjectWithTag		( =
(		= >
$str		> F
)		F G
.		G H
GetComponent		H T
<		T U

GunManager		U _
>		_ `
(		` a
)		a b
;		b c
}

 
void 
Update	 
( 
) 
{ 

ammoAmount 
. 
text 
= 
ammo 
. 

primaryGun )
?) *
.* +
CurrentAmmo+ 6
.6 7
ToString7 ?
(? @
)@ A
;A B
} 
} 
fD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Anthony\ZombieDeathBehavior.cs
public 
class 
ZombieDeathBehavior  
:! "!
StateMachineBehaviour# 8
{9 :
override 
public 
void 
OnStateExit $
($ %
Animator% -
animator. 6
,6 7
AnimatorStateInfo8 I
	stateInfoJ S
,S T
intU X

layerIndexY c
)c d
{e f
base 
. 
OnStateExit 
( 
animator !
,! "
	stateInfo# ,
,, -

layerIndex. 8
)8 9
;9 :
var		 
zombie		 
=		 
animator		 
.		 
	transform		 '
.		' (
parent		( .
.		. /

gameObject		/ 9
;		9 :
Destroy

 
(

 
zombie

 
)

 
;

 
} 
} 
kD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Nick\scripts\PlayerHealthManager.cs
public 
class 
PlayerHealthManager  
:! "
MonoBehaviour# 0
{1 2
public 

Health 
Health 
; 
public 

float 
	RegenTime 
= 
$num 
;  
public 

float 
RegenCooldown 
=  
$num! %
;% &
public		 

int		 
RegenAmount		 
=		 
$num		 
;		 
private

 
float

 
previousPercent

 !
=

" #
$num

$ '
;

' (
private 
float 
lastHit 
; 
private 
float 
	lastRegen 
; 
void 
Start	 
( 
) 
{ 
Health 
= 
Health 
? 
Health  
:! "
GetComponent# /
</ 0
Health0 6
>6 7
(7 8
)8 9
;9 :
if 

( 
Health 
!= 
null 
) 
{ 
Health 
. 
OnHealthPctChanged %
+=& (
percent) 0
=>1 3
{4 5
if 
( 
percent 
< 
previousPercent -
)- .
lastHit/ 6
=7 8
Time9 =
.= >
time> B
;B C
previousPercent 
=  !
percent" )
;) *
} 
; 
Health 
. 
OnDeath 
+= 
( 
)  
=>! #
{$ %
Destroy 
( 

gameObject "
," #
$num$ %
)% &
;& '
var 
GUI 
= 

GameObject $
.$ %
Find% )
() *
$str* 6
)6 7
;7 8
var 
gameOver 
= 
GUI "
?" #
.# $
	transform$ -
.- .
Find. 2
(2 3
$str3 =
)= >
;> ?
gameOver 
? 
. 

gameObject $
.$ %
	SetActive% .
(. /
true/ 3
)3 4
;4 5
} 
; 
} 	
} 
void 
FixedUpdate	 
( 
) 
{ 
var   
t   
=   
Time   
.   
time   
;   
if!! 

(!! 
t!! 
-!! 
lastHit!! 
>!! 
	RegenTime!! #
&&!!$ &
t!!' (
-!!) *
	lastRegen!!+ 4
>!!5 6
RegenCooldown!!7 D
)!!D E
{!!F G
Health"" 
."" 
ModifyHealth"" 
(""  
RegenAmount""  +
)""+ ,
;"", -
	lastRegen## 
=## 
t## 
;## 
}$$ 	
}%% 
void'' 
	OnDestroy''	 
('' 
)'' 
{'' 
Application(( 
.(( 
Quit(( 
((( 
$num(( 
)(( 
;(( 
})) 
}** 

YD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\PlatformAttach.cs
public 
class 
PlatformAttach 
: 
MonoBehaviour +
{ 
public 


GameObject 
Player_Person #
;# $
private

 
void

 
OnTriggerEnter

 
(

  
Collider

  (
other

) .
)

. /
{

0 1
if 

(
 
other 
. 

gameObject 
== 
Player_Person ,
), -
{- .
Player_Person 
. 
	transform #
.# $
parent$ *
=+ ,
	transform- 6
;6 7
} 	
} 
private 
void 
OnTriggerExit 
( 
Collider '
other( -
)- .
{/ 0
if 

(
 
other 
. 

gameObject 
== 
Player_Person ,
), -
{- .
Player_Person 
. 
	transform #
.# $
parent$ *
=+ ,
null- 1
;1 2
} 	
} 
} 
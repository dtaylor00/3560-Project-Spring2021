Í5
mD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Tests\PlayMode\GunBaseTests.cs
public 
class 
GunBaseTests 
{ 
private		 
GunData		 
gunData		 
;		 
private

 
GunBase

 
gunBase

 
;

 
private 
void 
Setup 
( 
) 
{ 
var 

gameObject 
= 
new 

GameObject '
(' (
)( )
;) *

gameObject 
. 
	SetActive 
( 
false "
)" #
;# $
gunBase 
= 

gameObject 
. 
AddComponent )
<) *

RaycastGun* 4
>4 5
(5 6
)6 7
;7 8
gunData 
= 
ScriptableObject "
." #
CreateInstance# 1
<1 2
GunData2 9
>9 :
(: ;
); <
;< =
gunData 
. 
gunName 
= 
$str )
;) *
gunData 
. 

properties 
= 
new  
GunProperties! .
(. /
)/ 0
;0 1
gunData 
. 
	viewModel 
= 
new 
GunViewModel  ,
(, -
)- .
;. /
gunData 
. 
effects 
= 
new 
	GunEffect '
(' (
)( )
;) *
Assert 
. 
NotNull 
( 
gunData 
) 
;  
gunBase 
. 

Initialize 
( 
gunData "
," #

gameObject$ .
.. /
	transform/ 8
,8 9
GunEventsDummy: H
.H I
InstanceI Q
)Q R
;R S

gameObject 
. 
	SetActive 
( 
true !
)! "
;" #
} 
[ 
	UnityTest 
] 
public 

IEnumerator 
FireGunTests #
(# $
)$ %
{& '
Setup 
( 
) 
; 
Assert!! 
.!! 
AreEqual!! 
(!! 
false!! 
,!! 
gunBase!! &
.!!& '
IsFiring!!' /
)!!/ 0
;!!0 1
GunEventsDummy"" 
."" 
Instance"" 
.""  
OnFireStart""  +
.""+ ,
Invoke"", 2
(""2 3
)""3 4
;""4 5
Assert## 
.## 
AreEqual## 
(## 
true## 
,## 
gunBase## %
.##% &
IsFiring##& .
)##. /
;##/ 0
GunEventsDummy%% 
.%% 
Instance%% 
.%%  
OnFire%%  &
.%%& '
Invoke%%' -
(%%- .
)%%. /
;%%/ 0
yield&& 
return&& 
new&& 
WaitForSeconds&& '
(&&' (
gunData&&( /
.&&/ 0

properties&&0 :
.&&: ;
fireRate&&; C
)&&C D
;&&D E
Assert'' 
.'' 
AreEqual'' 
('' 
gunBase'' 
.''  
CurrentAmmo''  +
>'', -
$num''. /
,''/ 0
gunBase''1 8
.''8 9
IsFiring''9 A
)''A B
;''B C
GunEventsDummy)) 
.)) 
Instance)) 
.))  
	OnFireEnd))  )
.))) *
Invoke))* 0
())0 1
)))1 2
;))2 3
Assert** 
.** 
AreEqual** 
(** 
false** 
,** 
gunBase** &
.**& '
IsFiring**' /
)**/ 0
;**0 1
yield,, 
return,, 
null,, 
;,, 
}-- 
[// 
	UnityTest// 
]// 
public00 

IEnumerator00 
ReloadGunTests00 %
(00% &
)00& '
{00( )
Setup11 
(11 
)11 
;11 
gunBase22 
.22 
Fire22 
(22 
)22 
;22 
int44 
	ammoSpent44 
=44 
Math44 
.44 
Min44  
(44  !
gunBase44! (
.44( )
CurrentAmmo44) 4
,444 5
gunData446 =
.44= >

properties44> H
.44H I
ammoPerShot44I T
)44T U
;44U V
Assert55 
.55 
AreEqual55 
(55 
gunData55 
.55  

properties55  *
.55* +
maxAmmo55+ 2
-553 4
	ammoSpent555 >
,55> ?
gunBase55@ G
.55G H
CurrentAmmo55H S
)55S T
;55T U
Assert77 
.77 
AreEqual77 
(77 
false77 
,77 
gunBase77 &
.77& '
IsReloading77' 2
)772 3
;773 4
GunEventsDummy88 
.88 
Instance88 
.88  
OnReloadStart88  -
.88- .
Invoke88. 4
(884 5
)885 6
;886 7
Assert99 
.99 
AreEqual99 
(99 
true99 
,99 
gunBase99 %
.99% &
IsReloading99& 1
)991 2
;992 3
Assert;; 
.;; 
AreEqual;; 
(;; 
gunData;; 
.;;  

properties;;  *
.;;* +
maxAmmo;;+ 2
-;;3 4
	ammoSpent;;5 >
,;;> ?
gunBase;;@ G
.;;G H
CurrentAmmo;;H S
);;S T
;;;T U
yield<< 
return<< 
new<< 
WaitForSeconds<< '
(<<' (
gunData<<( /
.<</ 0

properties<<0 :
.<<: ;

reloadTime<<; E
)<<E F
;<<F G
Assert== 
.== 
AreEqual== 
(== 
false== 
,== 
gunBase== &
.==& '
IsReloading==' 2
)==2 3
;==3 4
Assert>> 
.>> 
AreEqual>> 
(>> 
gunData>> 
.>>  

properties>>  *
.>>* +
maxAmmo>>+ 2
,>>2 3
gunBase>>4 ;
.>>; <
CurrentAmmo>>< G
)>>G H
;>>H I
yield@@ 
return@@ 
null@@ 
;@@ 
}AA 
}BB ¿M
pD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Assets\Dakota\Tests\PlayMode\GunManagerTests.cs
public 
class 
GunManagerTests 
{ 
[ 
Test 	
]	 

public		 

void		 '
GunManagerWeaponSwitchTests		 +
(		+ ,
)		, -
{		. /
var

 

gameObject

 
=

 
new

 

GameObject

 '
(

' (
)

( )
;

) *

gameObject 
. 
	SetActive 
( 
false "
)" #
;# $
var 
gunManagerScript 
= 

gameObject )
.) *
AddComponent* 6
<6 7

GunManager7 A
>A B
(B C
)C D
;D E
gunManagerScript 
. 
runInEditMode &
=' (
true) -
;- .
gunManagerScript 
. 
allowRuntimeChanges ,
=- .
false/ 4
;4 5
gunManagerScript 
. 
renderCamera %
=& '

gameObject( 2
.2 3
AddComponent3 ?
<? @
Camera@ F
>F G
(G H
)H I
;I J
gunManagerScript 
. 
eventHandler %
=& '

gameObject( 2
.2 3
AddComponent3 ?
<? @
GunEventHandler@ O
>O P
(P Q
)Q R
;R S
gunManagerScript 
. 
animationController ,
=- .
new/ 2"
GunAnimationController3 I
(I J
)J K
{L M
animatorN V
=W X

gameObjectY c
.c d
AddComponentd p
<p q
Animatorq y
>y z
(z {
){ |
}} ~
;~ 
gunManagerScript 
. 
gunEffectController ,
=- .
new/ 2
GunEffectController3 F
(F G
)G H
;H I

gameObject 
. 
	SetActive 
( 
true !
)! "
;" #
Assert 
. 
AreEqual 
( 
null 
, 
gunManagerScript .
.. /

primaryGun/ 9
)9 :
;: ;
GunData 
gunData 
= 
ScriptableObject *
.* +
CreateInstance+ 9
<9 :
GunData: A
>A B
(B C
)C D
;D E
gunData 
. 
gunName 
= 
$str )
;) *
gunData 
. 

properties 
= 
new  
GunProperties! .
(. /
)/ 0
;0 1
gunData 
. 
	viewModel 
= 
new 
GunViewModel  ,
(, -
)- .
;. /
gunData 
. 
effects 
= 
new 
	GunEffect '
(' (
)( )
;) *
gunManagerScript 
. 
AddGun 
(  
gunData  '
)' (
;( )
Assert   
.   
AreEqual   
(   
gunManagerScript   (
.  ( )
guns  ) -
[  - .
$num  . /
]  / 0
,  0 1
gunManagerScript  2 B
.  B C

primaryGun  C M
)  M N
;  N O
gunManagerScript"" 
."" 
SwitchWeapon"" %
(""% &
$num""& '
)""' (
;""( )
Assert## 
.## 
AreEqual## 
(## 
gunManagerScript## (
.##( )
guns##) -
[##- .
$num##. /
]##/ 0
,##0 1
gunManagerScript##2 B
.##B C

primaryGun##C M
)##M N
;##N O
gunManagerScript%% 
.%% 
SwitchWeapon%% %
(%%% &
-%%& '
$num%%' (
)%%( )
;%%) *
Assert&& 
.&& 
AreEqual&& 
(&& 
gunManagerScript&& (
.&&( )
guns&&) -
[&&- .
$num&&. /
]&&/ 0
,&&0 1
gunManagerScript&&2 B
.&&B C

primaryGun&&C M
)&&M N
;&&N O
gunManagerScript)) 
.)) 
AddGun)) 
())  
gunData))  '
)))' (
;))( )
Assert** 
.** 
AreEqual** 
(** 
gunManagerScript** (
.**( )
guns**) -
[**- .
$num**. /
]**/ 0
,**0 1
gunManagerScript**2 B
.**B C

primaryGun**C M
)**M N
;**N O
gunManagerScript,, 
.,, 
SwitchWeapon,, %
(,,% &
$num,,& '
),,' (
;,,( )
Assert-- 
.-- 
AreEqual-- 
(-- 
gunManagerScript-- (
.--( )
guns--) -
[--- .
$num--. /
]--/ 0
,--0 1
gunManagerScript--2 B
.--B C

primaryGun--C M
)--M N
;--N O
gunManagerScript// 
.// 
SwitchWeapon// %
(//% &
-//& '
$num//' (
)//( )
;//) *
Assert00 
.00 
AreEqual00 
(00 
gunManagerScript00 (
.00( )
guns00) -
[00- .
$num00. /
]00/ 0
,000 1
gunManagerScript002 B
.00B C

primaryGun00C M
)00M N
;00N O
gunManagerScript22 
.22 
SwitchWeapon22 %
(22% &
-22& '
$num22' (
)22( )
;22) *
Assert33 
.33 
AreEqual33 
(33 
gunManagerScript33 (
.33( )
guns33) -
[33- .
$num33. /
]33/ 0
,330 1
gunManagerScript332 B
.33B C

primaryGun33C M
)33M N
;33N O
gunManagerScript55 
.55 
SwitchWeapon55 %
(55% &
$num55& '
)55' (
;55( )
Assert66 
.66 
AreEqual66 
(66 
gunManagerScript66 (
.66( )
guns66) -
[66- .
$num66. /
]66/ 0
,660 1
gunManagerScript662 B
.66B C

primaryGun66C M
)66M N
;66N O
gunManagerScript99 
.99 
AddGun99 
(99  
gunData99  '
)99' (
;99( )
Assert:: 
.:: 
AreEqual:: 
(:: 
gunManagerScript:: (
.::( )
guns::) -
[::- .
$num::. /
]::/ 0
,::0 1
gunManagerScript::2 B
.::B C

primaryGun::C M
)::M N
;::N O
gunManagerScript<< 
.<< 
SwitchWeapon<< %
(<<% &
$num<<& '
)<<' (
;<<( )
Assert== 
.== 
AreEqual== 
(== 
gunManagerScript== (
.==( )
guns==) -
[==- .
$num==. /
]==/ 0
,==0 1
gunManagerScript==2 B
.==B C

primaryGun==C M
)==M N
;==N O
gunManagerScript?? 
.?? 
SwitchWeapon?? %
(??% &
$num??& '
)??' (
;??( )
Assert@@ 
.@@ 
AreEqual@@ 
(@@ 
gunManagerScript@@ (
.@@( )
guns@@) -
[@@- .
$num@@. /
]@@/ 0
,@@0 1
gunManagerScript@@2 B
.@@B C

primaryGun@@C M
)@@M N
;@@N O
gunManagerScriptBB 
.BB 
SwitchWeaponBB %
(BB% &
$numBB& '
)BB' (
;BB( )
AssertCC 
.CC 
AreEqualCC 
(CC 
gunManagerScriptCC (
.CC( )
gunsCC) -
[CC- .
$numCC. /
]CC/ 0
,CC0 1
gunManagerScriptCC2 B
.CCB C

primaryGunCCC M
)CCM N
;CCN O
gunManagerScriptEE 
.EE 
SwitchWeaponEE %
(EE% &
-EE& '
$numEE' (
)EE( )
;EE) *
AssertFF 
.FF 
AreEqualFF 
(FF 
gunManagerScriptFF (
.FF( )
gunsFF) -
[FF- .
$numFF. /
]FF/ 0
,FF0 1
gunManagerScriptFF2 B
.FFB C

primaryGunFFC M
)FFM N
;FFN O
gunManagerScriptHH 
.HH 
SwitchWeaponHH %
(HH% &
-HH& '
$numHH' (
)HH( )
;HH) *
AssertII 
.II 
AreEqualII 
(II 
gunManagerScriptII (
.II( )
gunsII) -
[II- .
$numII. /
]II/ 0
,II0 1
gunManagerScriptII2 B
.IIB C

primaryGunIIC M
)IIM N
;IIN O
gunManagerScriptKK 
.KK 
SwitchWeaponKK %
(KK% &
-KK& '
$numKK' (
)KK( )
;KK) *
AssertLL 
.LL 
AreEqualLL 
(LL 
gunManagerScriptLL (
.LL( )
gunsLL) -
[LL- .
$numLL. /
]LL/ 0
,LL0 1
gunManagerScriptLL2 B
.LLB C

primaryGunLLC M
)LLM N
;LLN O
}NN 
}OO 
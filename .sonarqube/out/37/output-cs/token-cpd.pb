·_
ìD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\RepairActions.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
static 

class 
RepairActions 
{ 
[ 	
MenuItem	 
( 
$str 
+ 
PreferenceKeys +
.+ ,
pluginTitle, 7
+8 9
$str: b
,b c
falsed i
,i j
PreferenceKeysk y
.y z

menuRepair	z Ñ
)
Ñ Ö
]
Ö Ü
public 
static 
void !
MenuForceSceneRefresh 0
(0 1
)1 2
{ 	
StringBuilder 
sb 
= 
new "
StringBuilder# 0
(0 1
)1 2
;2 3
ProBuilderMesh 
[ 
] 
all  
=! "
Object# )
.) *
FindObjectsOfType* ;
<; <
ProBuilderMesh< J
>J K
(K L
)L M
;M N
for 
( 
int 
i 
= 
$num 
, 
l 
= 
all  #
.# $
Length$ *
;* +
i, -
<. /
l0 1
;1 2
i3 4
++4 6
)6 7
{ 
UnityEditor 
. 
EditorUtility )
.) *
DisplayProgressBar* <
(< =
$str 3
,3 4
$str *
++ ,
all- 0
[0 1
i1 2
]2 3
.3 4
id4 6
+7 8
$str9 <
,< =
( 
( 
float 
) 
i 
/ 
all  #
.# $
Length$ *
)* +
)+ ,
;, -
try 
{   
all!! 
[!! 
i!! 
]!! 
.!! 
ToMesh!! !
(!!! "
)!!" #
;!!# $
all"" 
["" 
i"" 
]"" 
."" 
Refresh"" "
(""" #
)""# $
;""$ %
all## 
[## 
i## 
]## 
.## 
Optimize## #
(### $
)##$ %
;##% &
}$$ 
catch%% 
(%% 
System%% 
.%% 
	Exception%% '
e%%( )
)%%) *
{&& 
if'' 
('' 
!'' 
ReProBuilderize'' (
(''( )
all'') ,
['', -
i''- .
]''. /
)''/ 0
)''0 1
sb(( 
.(( 

AppendLine(( %
(((% &
$str((& ;
+((< =
all((> A
[((A B
i((B C
]((C D
.((D E
ToString((E M
(((M N
)((N O
+((P Q
$str((R X
+((Y Z
e(([ \
.((\ ]
ToString((] e
(((e f
)((f g
)((g h
;((h i
})) 
}** 
if,, 
(,, 
sb,, 
.,, 
Length,, 
>,, 
$num,, 
),, 
Log-- 
.-- 
Error-- 
(-- 
sb-- 
.-- 
ToString-- %
(--% &
)--& '
)--' (
;--( )
UnityEditor// 
.// 
EditorUtility// %
.//% &
ClearProgressBar//& 6
(//6 7
)//7 8
;//8 9
UnityEditor00 
.00 
EditorUtility00 %
.00% &
DisplayDialog00& 3
(003 4
$str004 P
,00P Q
$str11 I
,11I J
$str22 
)22 
;22 
}33 	
static55 
bool55 
ReProBuilderize55 #
(55# $
ProBuilderMesh55$ 2
pb553 5
)555 6
{66 	
try77 
{88 

GameObject99 
go99 
=99 
pb99  "
.99" #

gameObject99# -
;99- .
pb:: 
.:: &
preserveMeshAssetOnDestroy:: -
=::. /
true::0 4
;::4 5
Undo;; 
.;; "
DestroyObjectImmediate;; +
(;;+ ,
pb;;, .
);;. /
;;;/ 0
pbCC 
=CC 
UndoCC 
.CC 
AddComponentCC &
<CC& '
ProBuilderMeshCC' 5
>CC5 6
(CC6 7
goCC7 9
)CC9 :
;CC: ;
InternalMeshUtilityDD #
.DD# $'
ResetPbObjectWithMeshFilterDD$ ?
(DD? @
pbDD@ B
,DDB C
trueDDD H
)DDH I
;DDI J
pbFF 
.FF 
ToMeshFF 
(FF 
)FF 
;FF 
pbGG 
.GG 
RefreshGG 
(GG 
)GG 
;GG 
pbHH 
.HH 
OptimizeHH 
(HH 
)HH 
;HH 
returnJJ 
trueJJ 
;JJ 
}KK 
catchLL 
{MM 
returnNN 
falseNN 
;NN 
}OO 
}PP 	
[RR 	
MenuItemRR	 
(RR 
$strRR 
+RR 
PreferenceKeysRR +
.RR+ ,
pluginTitleRR, 7
+RR8 9
$strRR: `
,RR` a
trueRRb f
,RRf g
PreferenceKeysRRh v
.RRv w

menuRepair	RRw Å
)
RRÅ Ç
]
RRÇ É
staticSS 
boolSS  
VertifyRebuildMeshesSS (
(SS( )
)SS) *
{TT 	
returnUU 
InternalUtilityUU "
.UU" #
GetComponentsUU# 0
<UU0 1
ProBuilderMeshUU1 ?
>UU? @
(UU@ A
	SelectionUUA J
.UUJ K

transformsUUK U
)UUU V
.UUV W
LengthUUW ]
>UU^ _
$numUU` a
;UUa b
}VV 	
[XX 	
MenuItemXX	 
(XX 
$strXX 
+XX 
PreferenceKeysXX +
.XX+ ,
pluginTitleXX, 7
+XX8 9
$strXX: `
,XX` a
falseXXb g
,XXg h
PreferenceKeysXXi w
.XXw x

menuRepair	XXx Ç
)
XXÇ É
]
XXÉ Ñ
publicYY 
staticYY 
voidYY 
DoRebuildMeshesYY *
(YY* +
)YY+ ,
{ZZ 	 
RebuildSharedIndexes[[  
([[  !
InternalUtility[[! 0
.[[0 1
GetComponents[[1 >
<[[> ?
ProBuilderMesh[[? M
>[[M N
([[N O
	Selection[[O X
.[[X Y

transforms[[Y c
)[[c d
)[[d e
;[[e f
}\\ 	
staticbb 
voidbb  
RebuildSharedIndexesbb (
(bb( )
ProBuilderMeshbb) 7
[bb7 8
]bb8 9
targetsbb: A
)bbA B
{cc 	
StringBuilderdd 
sbdd 
=dd 
newdd "
StringBuilderdd# 0
(dd0 1
)dd1 2
;dd2 3
forff 
(ff 
intff 
iff 
=ff 
$numff 
;ff 
iff 
<ff 
targetsff  '
.ff' (
Lengthff( .
;ff. /
iff0 1
++ff1 3
)ff3 4
{gg 
UnityEditorhh 
.hh 
EditorUtilityhh )
.hh) *
DisplayProgressBarhh* <
(hh< =
$strii 3
,ii3 4
$strjj &
+jj' (
targetsjj) 0
[jj0 1
ijj1 2
]jj2 3
.jj3 4
idjj4 6
+jj7 8
$strjj9 <
,jj< =
(kk 
(kk 
floatkk 
)kk 
ikk 
/kk 
targetskk  '
.kk' (
Lengthkk( .
)kk. /
)kk/ 0
;kk0 1
ProBuilderMeshmm 
pbmm !
=mm" #
targetsmm$ +
[mm+ ,
imm, -
]mm- .
;mm. /
tryoo 
{pp 
pbqq 
.qq 
sharedVerticesqq %
=qq& '
SharedVertexqq( 4
.qq4 5*
GetSharedVerticesWithPositionsqq5 S
(qqS T
pbqqT V
.qqV W
positionsInternalqqW h
)qqh i
;qqi j
pbss 
.ss 
ToMeshss 
(ss 
)ss 
;ss  
pbtt 
.tt 
Refreshtt 
(tt 
)tt  
;tt  !
pbuu 
.uu 
Optimizeuu 
(uu  
)uu  !
;uu! "
}vv 
catchww 
(ww 
Systemww 
.ww 
	Exceptionww '
eww( )
)ww) *
{xx 
sbyy 
.yy 

AppendLineyy !
(yy! "
$stryy" 6
+yy7 8
pbyy9 ;
.yy; <
nameyy< @
+yyA B
$stryyC ]
+yy^ _
eyy` a
.yya b
ToStringyyb j
(yyj k
)yyk l
)yyl m
;yym n
}zz 
}{{ 
if}} 
(}} 
sb}} 
.}} 
Length}} 
>}} 
$num}} 
)}} 
Log~~ 
.~~ 
Error~~ 
(~~ 
sb~~ 
.~~ 
ToString~~ %
(~~% &
)~~& '
)~~' (
;~~( )
UnityEditor
ÄÄ 
.
ÄÄ 
EditorUtility
ÄÄ %
.
ÄÄ% &
ClearProgressBar
ÄÄ& 6
(
ÄÄ6 7
)
ÄÄ7 8
;
ÄÄ8 9
UnityEditor
ÅÅ 
.
ÅÅ 
EditorUtility
ÅÅ %
.
ÅÅ% &
DisplayDialog
ÅÅ& 3
(
ÅÅ3 4
$str
ÅÅ4 P
,
ÅÅP Q
$str
ÅÅR i
+
ÅÅj k
targets
ÅÅl s
.
ÅÅs t
Length
ÅÅt z
+
ÅÅ{ |
$strÅÅ} ì
,ÅÅì î
$strÅÅï õ
)ÅÅõ ú
;ÅÅú ù
}
ÇÇ 	
[
ÑÑ 	
MenuItem
ÑÑ	 
(
ÑÑ 
$str
ÑÑ 
+
ÑÑ 
PreferenceKeys
ÑÑ +
.
ÑÑ+ ,
pluginTitle
ÑÑ, 7
+
ÑÑ8 9
$str
ÑÑ: _
,
ÑÑ_ `
false
ÑÑa f
,
ÑÑf g
PreferenceKeys
ÑÑh v
.
ÑÑv w

menuRepairÑÑw Å
)ÑÑÅ Ç
]ÑÑÇ É
public
ÖÖ 
static
ÖÖ 
void
ÖÖ +
MenuRemoveDegenerateTriangles
ÖÖ 8
(
ÖÖ8 9
)
ÖÖ9 :
{
ÜÜ 	
int
áá 
count
áá 
=
áá 
$num
áá 
;
áá 
foreach
ââ 
(
ââ 
ProBuilderMesh
ââ #
pb
ââ$ &
in
ââ' )
InternalUtility
ââ* 9
.
ââ9 :
GetComponents
ââ: G
<
ââG H
ProBuilderMesh
ââH V
>
ââV W
(
ââW X
	Selection
ââX a
.
ââa b

transforms
ââb l
)
ââl m
)
ââm n
{
ää 
int
ãã  
removedVertexCount
ãã &
;
ãã& '
if
çç 
(
çç 
!
çç 
MeshValidation
çç "
.
çç" #
EnsureMeshIsValid
çç# 4
(
çç4 5
pb
çç5 7
,
çç7 8
out
çç9 < 
removedVertexCount
çç= O
)
ççO P
)
ççP Q
{
éé 
pb
èè 
.
èè 
Rebuild
èè 
(
èè 
)
èè  
;
èè  !
pb
êê 
.
êê 
Optimize
êê 
(
êê  
)
êê  !
;
êê! "
count
ëë 
+=
ëë  
removedVertexCount
ëë /
;
ëë/ 0
}
íí 
}
ìì 
EditorUtility
ïï 
.
ïï 
ShowNotification
ïï *
(
ïï* +
$str
ïï+ 5
+
ïï6 7
count
ïï8 =
+
ïï> ?
$str
ïï@ p
)
ïïp q
;
ïïq r
}
ññ 	
}
óó 
}òò ∆
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\UnwrapParametersEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
[ "
CanEditMultipleObjects 
] 
sealed 

class "
UnwrapParametersEditor '
:( )
Editor* 0
{ 
SerializedProperty &
m_UnwrapParametersProperty 5
;5 6

GUIContent %
m_UnwrapParametersContent ,
=- .
new/ 2

GUIContent3 =
(= >
$str> T
,T U
$str	V ç
)
ç é
;
é è
void 
OnEnable 
( 
) 
{ 	&
m_UnwrapParametersProperty &
=' (
serializedObject) 9
.9 :
FindProperty: F
(F G
$strG [
)[ \
;\ ]
} 	
public 
override 
void 
OnInspectorGUI +
(+ ,
), -
{ 	
if 
( 
! 
serializedObject !
.! "
isValid" )
)) *
return 
; 
serializedObject 
. 
Update #
(# $
)$ %
;% &
EditorGUILayout   
.   
PropertyField   )
(  ) *&
m_UnwrapParametersProperty  * D
,  D E%
m_UnwrapParametersContent  F _
,  _ `
true  a e
)  e f
;  f g
serializedObject!! 
.!! #
ApplyModifiedProperties!! 4
(!!4 5
)!!5 6
;!!6 7
}"" 	
}## 
}$$ áã
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\VertexColorPalette.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
{

 
sealed 

class 
VertexColorPalette #
:$ %
ConfigurableWindow& 8
{ 
const 
int *
k_EditorPrefsColorPaletteCount 0
=1 2
$num3 5
;5 6
const 
string 
pbVertexColorPrefs '
=( )
$str* >
;> ?
static 
Pref 
< 
string 
> "
m_PreviousColorPalette 2
=3 4
new5 8
Pref9 =
<= >
string> D
>D E
(E F
$strF o
,o p
$strq s
)s t
;t u
static 
VertexColorPalette !

s_Instance" ,
=- .
null/ 3
;3 4
[ 	
SerializeField	 
] 
ColorPalette 
m_ColorPalette #
=$ %
null& *
;* +
ColorPalette 
colorPalette !
{ 	
get 
{ 
return 
m_ColorPalette '
;' (
}) *
} 	
static## 
void## %
CopyColorsFromEditorPrefs## -
(##- .
ColorPalette##. :
target##; A
)##A B
{$$ 	
List%% 
<%% 
Color%% 
>%% 
colors%% 
=%%  
new%%! $
List%%% )
<%%) *
Color%%* /
>%%/ 0
(%%0 1
)%%1 2
;%%2 3
for'' 
('' 
int'' 
i'' 
='' 
$num'' 
;'' 
i'' 
<'' *
k_EditorPrefsColorPaletteCount''  >
;''> ?
i''@ A
++''A C
)''C D
{(( 
Color)) 
color)) 
=)) 
Color)) #
.))# $
white))$ )
;))) *
if++ 
(++ 
InternalUtility++ #
.++# $
TryParseColor++$ 1
(++1 2
EditorPrefs++2 =
.++= >
	GetString++> G
(++G H
pbVertexColorPrefs++H Z
+++[ \
i++] ^
)++^ _
,++_ `
ref++a d
color++e j
)++j k
)++k l
colors,, 
.,, 
Add,, 
(,, 
color,, $
),,$ %
;,,% &
}-- 
if// 
(// 
colors// 
.// 
Count// 
>// 
$num//  
)//  !
{00 
target11 
.11 
	SetColors11  
(11  !
colors11! '
)11' (
;11( )
UnityEditor22 
.22 
EditorUtility22 )
.22) *
SetDirty22* 2
(222 3
target223 9
)229 :
;22: ;
}33 
}44 	
public99 
static99 
void99 
MenuOpenWindow99 )
(99) *
)99* +
{:: 	
	GetWindow;; 
<;; 
VertexColorPalette;; (
>;;( )
(;;) *
$str;;* 9
);;9 :
;;;: ;
}<< 	
static>> 
ColorPalette>> #
GetLastUsedColorPalette>> 3
(>>3 4
)>>4 5
{?? 	
ColorPaletteAA 
paletteAA  
=AA! "

s_InstanceAA# -
!=AA. 0
nullAA1 5
?AA6 7

s_InstanceAA8 B
.AAB C
m_ColorPaletteAAC Q
:AAR S
nullAAT X
;AAX Y
ifCC 
(CC 
paletteCC 
!=CC 
nullCC 
)CC  
returnDD 
paletteDD 
;DD 
paletteGG 
=GG 
AssetDatabaseGG #
.GG# $
LoadAssetAtPathGG$ 3
<GG3 4
ColorPaletteGG4 @
>GG@ A
(GGA B"
m_PreviousColorPaletteGGB X
)GGX Y
;GGY Z
ifII 
(II 
paletteII 
!=II 
nullII 
)II  
returnJJ 
paletteJJ 
;JJ 
paletteMM 
=MM 
FileUtilityMM !
.MM! "
FindAssetOfTypeMM" 1
<MM1 2
ColorPaletteMM2 >
>MM> ?
(MM? @
)MM@ A
;MMA B
ifOO 
(OO 
paletteOO 
!=OO 
nullOO 
)OO  
{PP "
m_PreviousColorPaletteQQ &
.QQ& '
SetValueQQ' /
(QQ/ 0
AssetDatabaseQQ0 =
.QQ= >
GetAssetPathQQ> J
(QQJ K
paletteQQK R
)QQR S
,QQS T
trueQQU Y
)QQY Z
;QQZ [
returnRR 
paletteRR 
;RR 
}SS "
m_PreviousColorPaletteVV "
.VV" #
SetValueVV# +
(VV+ ,
FileUtilityVV, 7
.VV7 8!
GetLocalDataDirectoryVV8 M
(VVM N
)VVN O
+VVP Q
$strVVR o
,VVo p
trueVVq u
)VVu v
;VVv w
paletteWW 
=WW 
FileUtilityWW !
.WW! "
LoadRequiredWW" .
<WW. /
ColorPaletteWW/ ;
>WW; <
(WW< ="
m_PreviousColorPaletteWW= S
)WWS T
;WWT U%
CopyColorsFromEditorPrefsXX %
(XX% &
paletteXX& -
)XX- .
;XX. /
returnZZ 
paletteZZ 
;ZZ 
}[[ 	
void]] 
OnEnable]] 
(]] 
)]] 
{^^ 	

s_Instance__ 
=__ 
this__ 
;__ 
m_ColorPalette`` 
=`` #
GetLastUsedColorPalette`` 4
(``4 5
)``5 6
;``6 7
}aa 	
Vector2cc 
m_Scrollcc 
=cc 
Vector2cc "
.cc" #
zerocc# '
;cc' (
constdd 
intdd 
	k_Paddingdd 
=dd 
$numdd 
;dd  
constee 
intee 
k_ButtonWidthee 
=ee  !
$numee" $
;ee$ %

GUIContentff $
m_ColorPaletteGuiContentff +
=ff, -
newff. 1

GUIContentff2 <
(ff< =
$strff= L
)ffL M
;ffM N
voidhh 
OnGUIhh 
(hh 
)hh 
{ii 	
varjj 
palettejj 
=jj #
GetLastUsedColorPalettejj 1
(jj1 2
)jj2 3
;jj3 4
DoContextMenull 
(ll 
)ll 
;ll 
	GUILayoutnn 
.nn 
BeginHorizontalnn %
(nn% &
EditorStylesnn& 2
.nn2 3
toolbarnn3 :
)nn: ;
;nn; <
	GUILayoutpp 
.pp 
FlexibleSpacepp #
(pp# $
)pp$ %
;pp% &
ifqq 
(qq 
	GUILayoutqq 
.qq 
Buttonqq  
(qq  !
$strqq! (
,qq( )
EditorStylesqq* 6
.qq6 7
toolbarButtonqq7 D
)qqD E
)qqE F
ResetColorsrr 
(rr 
)rr 
;rr 
	GUILayouttt 
.tt 
EndHorizontaltt #
(tt# $
)tt$ %
;tt% &
m_ColorPalettevv 
=vv 
(vv 
ColorPalettevv *
)vv* +
EditorGUILayoutvv+ :
.vv: ;
ObjectFieldvv; F
(vvF G$
m_ColorPaletteGuiContentvvG _
,vv_ `
m_ColorPalettevva o
,vvo p
typeofvvq w
(vvw x
ColorPalette	vvx Ñ
)
vvÑ Ö
,
vvÖ Ü
false
vvá å
)
vvå ç
;
vvç é
ifxx 
(xx 
m_ColorPalettexx 
==xx !
nullxx" &
)xx& '
{yy 
	GUILayoutzz 
.zz 
Labelzz 
(zz  
$strzz  ?
,zz? @
EditorStyleszzA M
.zzM N!
centeredGreyMiniLabelzzN c
,zzc d
	GUILayoutzze n
.zzn o
ExpandHeightzzo {
(zz{ |
true	zz| Ä
)
zzÄ Å
,
zzÅ Ç
	GUILayout
zzÉ å
.
zzå ç
ExpandWidth
zzç ò
(
zzò ô
true
zzô ù
)
zzù û
)
zzû ü
;
zzü †
return{{ 
;{{ 
}|| 
m_Scroll~~ 
=~~ 
EditorGUILayout~~ &
.~~& '
BeginScrollView~~' 6
(~~6 7
m_Scroll~~7 ?
)~~? @
;~~@ A
for
ÄÄ 
(
ÄÄ 
int
ÄÄ 
i
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
i
ÄÄ 
<
ÄÄ 
palette
ÄÄ  '
.
ÄÄ' (
Count
ÄÄ( -
;
ÄÄ- .
i
ÄÄ/ 0
++
ÄÄ0 2
)
ÄÄ2 3
{
ÅÅ 
	GUILayout
ÇÇ 
.
ÇÇ 
Space
ÇÇ 
(
ÇÇ  
$num
ÇÇ  !
)
ÇÇ! "
;
ÇÇ" #
	GUILayout
ÑÑ 
.
ÑÑ 
BeginHorizontal
ÑÑ )
(
ÑÑ) *
)
ÑÑ* +
;
ÑÑ+ ,
if
ÜÜ 
(
ÜÜ 
	GUILayout
ÜÜ 
.
ÜÜ 
Button
ÜÜ $
(
ÜÜ$ %
$str
ÜÜ% ,
,
ÜÜ, -
	GUILayout
ÜÜ. 7
.
ÜÜ7 8
ExpandWidth
ÜÜ8 C
(
ÜÜC D
false
ÜÜD I
)
ÜÜI J
,
ÜÜJ K
	GUILayout
ÜÜL U
.
ÜÜU V
MinWidth
ÜÜV ^
(
ÜÜ^ _
$num
ÜÜ_ a
)
ÜÜa b
)
ÜÜb c
)
ÜÜc d
SetFaceColors
áá !
(
áá! "
palette
áá" )
[
áá) *
i
áá* +
]
áá+ ,
)
áá, -
;
áá- .
	EditorGUI
ââ 
.
ââ 
BeginChangeCheck
ââ *
(
ââ* +
)
ââ+ ,
;
ââ, -
palette
ää 
[
ää 
i
ää 
]
ää 
=
ää 
EditorGUILayout
ää ,
.
ää, -

ColorField
ää- 7
(
ää7 8
palette
ää8 ?
[
ää? @
i
ää@ A
]
ääA B
)
ääB C
;
ääC D
if
ãã 
(
ãã 
	EditorGUI
ãã 
.
ãã 
EndChangeCheck
ãã ,
(
ãã, -
)
ãã- .
)
ãã. /
UnityEditor
åå 
.
åå  
EditorUtility
åå  -
.
åå- .
SetDirty
åå. 6
(
åå6 7
palette
åå7 >
)
åå> ?
;
åå? @
	GUILayout
éé 
.
éé 
EndHorizontal
éé '
(
éé' (
)
éé( )
;
éé) *
}
èè 
EditorGUILayout
ëë 
.
ëë 
EndScrollView
ëë )
(
ëë) *
)
ëë* +
;
ëë+ ,
}
íí 	
void
îî 
ResetColors
îî 
(
îî 
)
îî 
{
ïï 	
if
ññ 
(
ññ 
m_ColorPalette
ññ 
==
ññ !
null
ññ" &
)
ññ& '
m_ColorPalette
óó 
=
óó  %
GetLastUsedColorPalette
óó! 8
(
óó8 9
)
óó9 :
;
óó: ;
m_ColorPalette
ôô 
.
ôô 
SetDefaultValues
ôô +
(
ôô+ ,
)
ôô, -
;
ôô- .
UnityEditor
öö 
.
öö 
EditorUtility
öö %
.
öö% &
SetDirty
öö& .
(
öö. /
m_ColorPalette
öö/ =
)
öö= >
;
öö> ?
}
õõ 	
public
ùù 
static
ùù 
void
ùù 
SetFaceColors
ùù (
(
ùù( )
int
ùù) ,
index
ùù- 2
)
ùù2 3
{
ûû 	
var
üü 
palette
üü 
=
üü %
GetLastUsedColorPalette
üü 1
(
üü1 2
)
üü2 3
;
üü3 4
SetFaceColors
†† 
(
†† 
palette
†† !
[
††! "
index
††" '
]
††' (
)
††( )
;
††) *
}
°° 	
public
££ 
static
££ 
void
££ 
SetFaceColors
££ (
(
££( )
Color
££) .
col
££/ 2
)
££2 3
{
§§ 	
col
•• 
=
•• 
PlayerSettings
••  
.
••  !

colorSpace
••! +
==
••, .

ColorSpace
••/ 9
.
••9 :
Linear
••: @
?
••A B
col
••C F
.
••F G
linear
••G M
:
••N O
col
••P S
;
••S T
ProBuilderMesh
ßß 
[
ßß 
]
ßß 
	selection
ßß &
=
ßß' (
InternalUtility
ßß) 8
.
ßß8 9
GetComponents
ßß9 F
<
ßßF G
ProBuilderMesh
ßßG U
>
ßßU V
(
ßßV W
	Selection
ßßW `
.
ßß` a

transforms
ßßa k
)
ßßk l
;
ßßl m
UndoUtility
©© 
.
©© 
RecordSelection
©© '
(
©©' (
	selection
©©( 1
,
©©1 2
$str
©©3 H
)
©©H I
;
©©I J
ProBuilderEditor
´´ 
editor
´´ #
=
´´$ %
ProBuilderEditor
´´& 6
.
´´6 7
instance
´´7 ?
;
´´? @
if
≠≠ 
(
≠≠ 
editor
≠≠ 
&&
≠≠ 
ProBuilderEditor
≠≠ *
.
≠≠* +

selectMode
≠≠+ 5
.
≠≠5 6
ContainsFlag
≠≠6 B
(
≠≠B C

SelectMode
≠≠C M
.
≠≠M N
Vertex
≠≠N T
|
≠≠U V

SelectMode
≠≠W a
.
≠≠a b
Edge
≠≠b f
|
≠≠g h

SelectMode
≠≠i s
.
≠≠s t
Face
≠≠t x
)
≠≠x y
)
≠≠y z
{
ÆÆ 
switch
ØØ 
(
ØØ 
ProBuilderEditor
ØØ (
.
ØØ( )

selectMode
ØØ) 3
)
ØØ3 4
{
∞∞ 
case
±± 

SelectMode
±± #
.
±±# $
Face
±±$ (
:
±±( )
case
≤≤ 

SelectMode
≤≤ #
.
≤≤# $
TextureFace
≤≤$ /
:
≤≤/ 0
foreach
≥≥ 
(
≥≥  !
ProBuilderMesh
≥≥! /
mesh
≥≥0 4
in
≥≥5 7
	selection
≥≥8 A
)
≥≥A B
{
¥¥ 
Color
µµ !
[
µµ! "
]
µµ" #
colors
µµ$ *
=
µµ+ ,
mesh
µµ- 1
.
µµ1 2
	GetColors
µµ2 ;
(
µµ; <
)
µµ< =
;
µµ= >
foreach
∑∑ #
(
∑∑$ %
int
∑∑% (
i
∑∑) *
in
∑∑+ -
mesh
∑∑. 2
.
∑∑2 3%
selectedIndexesInternal
∑∑3 J
)
∑∑J K
colors
∏∏  &
[
∏∏& '
i
∏∏' (
]
∏∏( )
=
∏∏* +
col
∏∏, /
;
∏∏/ 0
mesh
∫∫  
.
∫∫  !
colors
∫∫! '
=
∫∫( )
colors
∫∫* 0
;
∫∫0 1
}
ªª 
break
ºº 
;
ºº 
case
ΩΩ 

SelectMode
ΩΩ #
.
ΩΩ# $
Edge
ΩΩ$ (
:
ΩΩ( )
case
ææ 

SelectMode
ææ #
.
ææ# $
Vertex
ææ$ *
:
ææ* +
foreach
øø 
(
øø  !
var
øø! $
mesh
øø% )
in
øø* ,
	selection
øø- 6
)
øø6 7
{
¿¿ 
Color
¡¡ !
[
¡¡! "
]
¡¡" #
colors
¡¡$ *
=
¡¡+ ,
mesh
¡¡- 1
.
¡¡1 2
	GetColors
¡¡2 ;
(
¡¡; <
)
¡¡< =
;
¡¡= >
foreach
√√ #
(
√√$ %
int
√√% (
i
√√) *
in
√√+ -
mesh
√√. 2
.
√√2 3#
GetCoincidentVertices
√√3 H
(
√√H I
mesh
√√I M
.
√√M N%
selectedIndexesInternal
√√N e
)
√√e f
)
√√f g
colors
ƒƒ  &
[
ƒƒ& '
i
ƒƒ' (
]
ƒƒ( )
=
ƒƒ* +
col
ƒƒ, /
;
ƒƒ/ 0
mesh
∆∆  
.
∆∆  !
colors
∆∆! '
=
∆∆( )
colors
∆∆* 0
;
∆∆0 1
}
«« 
break
»» 
;
»» 
}
…… 
}
   
else
ÀÀ 
{
ÃÃ 
foreach
ÕÕ 
(
ÕÕ 
ProBuilderMesh
ÕÕ '
pb
ÕÕ( *
in
ÕÕ+ -
	selection
ÕÕ. 7
)
ÕÕ7 8
{
ŒŒ 
foreach
œœ 
(
œœ 
Face
œœ !
face
œœ" &
in
œœ' )
pb
œœ* ,
.
œœ, -
facesInternal
œœ- :
)
œœ: ;
pb
–– 
.
–– 
SetFaceColor
–– '
(
––' (
face
––( ,
,
––, -
col
––. 1
)
––1 2
;
––2 3
}
—— 
}
““ 
foreach
‘‘ 
(
‘‘ 
ProBuilderMesh
‘‘ #
pb
‘‘$ &
in
‘‘' )
	selection
‘‘* 3
)
‘‘3 4
{
’’ 
pb
÷÷ 
.
÷÷ 
ToMesh
÷÷ 
(
÷÷ 
)
÷÷ 
;
÷÷ 
pb
◊◊ 
.
◊◊ 
Refresh
◊◊ 
(
◊◊ 
)
◊◊ 
;
◊◊ 
pb
ÿÿ 
.
ÿÿ 
Optimize
ÿÿ 
(
ÿÿ 
)
ÿÿ 
;
ÿÿ 
}
ŸŸ 
EditorUtility
€€ 
.
€€ 
ShowNotification
€€ *
(
€€* +
$str
€€+ @
+
€€A B
ColorUtility
€€C O
.
€€O P
GetColorName
€€P \
(
€€\ ]
col
€€] `
)
€€` a
)
€€a b
;
€€b c
}
‹‹ 	
}
›› 
}ﬁﬁ ˘*
êD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\MenuOption.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
sealed 

class 

MenuOption 
: 
EditorWindow *
{ 
System 
. 
Action 
onSettingsGUI #
=$ %
null& *
;* +
System 
. 
Action 
onSettingsDisable '
=( )
null* .
;. /
internal 
static 

MenuOption "
Show# '
(' (
System( .
.. /
Action/ 5
onSettingsGUI6 C
,C D
SystemE K
.K L
ActionL R
onSettingsEnableS c
,c d
Systeme k
.k l
Actionl r
onSettingsDisable	s Ñ
)
Ñ Ö
{ 	

MenuOption 
win 
= 
EditorWindow )
.) *
	GetWindow* 3
<3 4

MenuOption4 >
>> ?
(? @
true@ D
,D E
$strF O
,O P
trueQ U
)U V
;V W
win 
. 
	hideFlags 
= 
	HideFlags %
.% &
HideAndDontSave& 5
;5 6
if 
( 
win 
. 
onSettingsDisable %
!=& (
null) -
)- .
win 
. 
onSettingsDisable %
(% &
)& '
;' (
if 
( 
onSettingsEnable  
!=! #
null$ (
)( )
onSettingsEnable  
(  !
)! "
;" #
win 
. 
onSettingsDisable !
=" #
onSettingsDisable$ 5
;5 6
win 
. 
onSettingsGUI 
= 
onSettingsGUI  -
;- .
object"" 
parent"" 
="" 
ReflectionUtility"" -
.""- .
GetValue"". 6
(""6 7
win""7 :
,"": ;
typeof""< B
(""B C
EditorWindow""C O
)""O P
,""P Q
$str""R \
)""\ ]
;""] ^
object## 
window## 
=## 
ReflectionUtility## -
.##- .
GetValue##. 6
(##6 7
parent##7 =
,##= >
typeof##? E
(##E F
EditorWindow##F R
)##R S
,##S T
$str##U ]
)##] ^
;##^ _
ReflectionUtility$$ 
.$$ 
SetValue$$ &
($$& '
parent$$' -
,$$- .
$str$$/ B
,$$B C
true$$D H
)$$H I
;$$I J
ReflectionUtility%% 
.%% 
SetValue%% &
(%%& '
window%%' -
,%%- .
$str%%/ C
,%%C D
true%%E I
)%%I J
;%%J K
win'' 
.'' 
Show'' 
('' 
)'' 
;'' 
return)) 
win)) 
;)) 
}** 	
public// 
static// 
void// 
CloseAll// #
(//# $
)//$ %
{00 	
foreach11 
(11 

MenuOption11 
win11  #
in11$ &
	Resources11' 0
.110 1 
FindObjectsOfTypeAll111 E
<11E F

MenuOption11F P
>11P Q
(11Q R
)11R S
)11S T
win22 
.22 
Close22 
(22 
)22 
;22 
}33 	
void55 
OnEnable55 
(55 
)55 
{66 	$
autoRepaintOnSceneChange77 $
=77% &
true77' +
;77+ ,
}88 	
void:: 
	OnDisable:: 
(:: 
):: 
{;; 	
if<< 
(<< 
onSettingsDisable<< !
!=<<" $
null<<% )
)<<) *
onSettingsDisable== !
(==! "
)==" #
;==# $
}>> 	
void@@ 
OnSelectionChange@@ 
(@@ 
)@@  
{AA 	
RepaintBB 
(BB 
)BB 
;BB 
}CC 	
voidEE 
OnHierarchyChangeEE 
(EE 
)EE  
{FF 	
RepaintGG 
(GG 
)GG 
;GG 
}HH 	
voidJJ 
OnGUIJJ 
(JJ 
)JJ 
{KK 	
ifLL 
(LL 
onSettingsGUILL 
!=LL  
nullLL! %
)LL% &
{MM 
onSettingsGUINN 
(NN 
)NN 
;NN  
}OO 
elsePP 
ifPP 
(PP 
EventPP 
.PP 
currentPP "
.PP" #
typePP# '
==PP( *
	EventTypePP+ 4
.PP4 5
RepaintPP5 <
)PP< =
{QQ 
EditorApplicationRR !
.RR! "
	delayCallRR" +
+=RR, .
CloseAllRR/ 7
;RR7 8

GUIUtilitySS 
.SS 
ExitGUISS "
(SS" #
)SS# $
;SS$ %
}TT 
}UU 	
}VV 
}WW ’ 
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\Extrude.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
Extrude 
: 

MenuAction %
{		 
public

 
override

 
ToolbarGroup

 $
@group

% +
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Geometry& .
;. /
}0 1
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
null 
; 
}  
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str 
, 
$str 
, 
keyCommandSuper 
,  
$char! $
) 
; 
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
public 
override 

SelectMode "
validSelectModes# 3
{   	
get!! 
{!! 
return!! 

SelectMode!! #
.!!# $
Face!!$ (
|!!) *

SelectMode!!+ 5
.!!5 6
Edge!!6 :
;!!: ;
}!!< =
}"" 	
public$$ 
override$$ 
bool$$ 
enabled$$ $
{%% 	
get&& 
{'' 
switch(( 
((( 
ProBuilderEditor(( (
.((( )

selectMode(() 3
)((3 4
{)) 
case** 

SelectMode** #
.**# $
Edge**$ (
:**( )
return++ 
EditorToolbarLoader++ 2
.++2 3
GetInstance++3 >
<++> ?
ExtrudeEdges++? K
>++K L
(++L M
)++M N
.++N O
enabled++O V
;++V W
case,, 

SelectMode,, #
.,,# $
Face,,$ (
:,,( )
return-- 
EditorToolbarLoader-- 2
.--2 3
GetInstance--3 >
<--> ?
ExtrudeFaces--? K
>--K L
(--L M
)--M N
.--N O
enabled--O V
;--V W
default.. 
:.. 
return// 
false// $
;//$ %
}00 
}11 
}22 	
public44 
override44 
bool44 
hidden44 #
{55 	
get66 
{66 
return66 
true66 
;66 
}66  
}77 	
public99 
override99 
ActionResult99 $
DoAction99% -
(99- .
)99. /
{:: 	
switch;; 
(;; 
ProBuilderEditor;; $
.;;$ %

selectMode;;% /
);;/ 0
{<< 
case== 

SelectMode== 
.==  
Edge==  $
:==$ %
return>> 
EditorToolbarLoader>> .
.>>. /
GetInstance>>/ :
<>>: ;
ExtrudeEdges>>; G
>>>G H
(>>H I
)>>I J
.>>J K
DoAction>>K S
(>>S T
)>>T U
;>>U V
case?? 

SelectMode?? 
.??  
Face??  $
:??$ %
return@@ 
EditorToolbarLoader@@ .
.@@. /
GetInstance@@/ :
<@@: ;
ExtrudeFaces@@; G
>@@G H
(@@H I
)@@I J
.@@J K
DoAction@@K S
(@@S T
)@@T U
;@@U V
defaultBB 
:BB 
returnCC 
ActionResultCC '
.CC' (
NoSelectionCC( 3
;CC3 4
}DD 
}EE 	
}FF 
}GG π?
üD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Selection\SelectEdgeRing.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
.		  !
Actions		! (
{

 
sealed 

class 
SelectEdgeRing 
:  !

MenuAction" ,
{ 
Pref 
< 
bool 
> 
m_SelectIterative $
=% &
new' *
Pref+ /
</ 0
bool0 4
>4 5
(5 6
$str6 V
,V W
falseX ]
)] ^
;^ _

GUIContent 
gc_selectIterative %
=& '
new( +

GUIContent, 6
(6 7
$str7 L
,L M
$str	N ë
)
ë í
;
í ì
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
	Selection& /
;/ 0
}1 2
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- E
,E F
IconSkinG O
.O P
ProP S
)S T
;T U
}V W
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
public 
override 
int 
toolbarPriority +
{   	
get!! 
{!! 
return!! 
$num!! 
;!! 
}!! 
}"" 	
	protected$$ 
override$$ 
bool$$ 
hasFileMenuEntry$$  0
{%% 	
get&& 
{&& 
return&& 
false&& 
;&& 
}&&  !
}'' 	
	protected)) 
override)) 
MenuActionState)) *
optionsMenuState))+ ;
{** 	
get++ 
{++ 
if,, 
(,, 
enabled,, 
&&,, 
ProBuilderEditor,, /
.,,/ 0

selectMode,,0 :
==,,; =

SelectMode,,> H
.,,H I
Edge,,I M
),,M N
return-- 
MenuActionState-- *
.--* +
VisibleAndEnabled--+ <
;--< =
return// 
MenuActionState// &
.//& '
Hidden//' -
;//- .
}00 
}11 	
private33 
static33 
readonly33 
TooltipContent33  .
	s_Tooltip33/ 8
=339 :
new33; >
TooltipContent33? M
(44 
$str55 "
,55" #
$str	66 â
,
66â ä
keyCommandAlt77 
,77 
$char77 "
)88 
;88 
public:: 
override:: 

SelectMode:: "
validSelectModes::# 3
{;; 	
get<< 
{<< 
return<< 

SelectMode<< #
.<<# $
Edge<<$ (
;<<( )
}<<* +
}== 	
public?? 
override?? 
bool?? 
enabled?? $
{@@ 	
getAA 
{AA 
returnAA 
baseAA 
.AA 
enabledAA %
&&AA& (
MeshSelectionAA) 6
.AA6 7
selectedEdgeCountAA7 H
>AAI J
$numAAK L
;AAL M
}AAN O
}BB 	
publicDD 
overrideDD 
ActionResultDD $
DoActionDD% -
(DD- .
)DD. /
{EE 	
ifFF 
(FF 
MeshSelectionFF 
.FF 
selectedObjectCountFF 1
<FF2 3
$numFF4 5
)FF5 6
returnGG 
ActionResultGG #
.GG# $
NoSelectionGG$ /
;GG/ 0
UndoUtilityII 
.II 
RecordSelectionII '
(II' (
$strII( :
)II: ;
;II; <
boolKK 
successKK 
=KK 
falseKK  
;KK  !
foreachMM 
(MM 
varMM 
meshMM 
inMM  
MeshSelectionMM! .
.MM. /
topInternalMM/ :
)MM: ;
{NN 
EdgeOO 
[OO 
]OO 
edgesOO 
;OO 
ifQQ 
(QQ 
m_SelectIterativeQQ %
)QQ% &
{RR 
edgesSS 
=SS 
ElementSelectionSS ,
.SS, - 
GetEdgeRingIterativeSS- A
(SSA B
meshSSB F
,SSF G
meshSSH L
.SSL M
selectedEdgesSSM Z
)SSZ [
.SS[ \
ToArraySS\ c
(SSc d
)SSd e
;SSe f
}TT 
elseUU 
{VV 
edgesWW 
=WW 
ElementSelectionWW ,
.WW, -
GetEdgeRingWW- 8
(WW8 9
meshWW9 =
,WW= >
meshWW? C
.WWC D
selectedEdgesWWD Q
)WWQ R
.WWR S
ToArrayWWS Z
(WWZ [
)WW[ \
;WW\ ]
}XX 
ifZZ 
(ZZ 
edgesZZ 
.ZZ 
LengthZZ  
>ZZ! "
meshZZ# '
.ZZ' (
selectedEdgeCountZZ( 9
)ZZ9 :
success[[ 
=[[ 
true[[ "
;[[" #
mesh]] 
.]] 
SetSelectedEdges]] %
(]]% &
edges]]& +
)]]+ ,
;]], -
}^^ 
ProBuilderEditor`` 
.`` 
Refresh`` $
(``$ %
)``% &
;``& '
	SceneViewbb 
.bb 

RepaintAllbb  
(bb  !
)bb! "
;bb" #
ifdd 
(dd 
successdd 
)dd 
returnee 
newee 
ActionResultee '
(ee' (
ActionResultee( 4
.ee4 5
Statusee5 ;
.ee; <
Successee< C
,eeC D
$streeE W
)eeW X
;eeX Y
returngg 
newgg 
ActionResultgg #
(gg# $
ActionResultgg$ 0
.gg0 1
Statusgg1 7
.gg7 8
Failuregg8 ?
,gg? @
$strggA R
)ggR S
;ggS T
}hh 	
	protectedjj 
overridejj 
voidjj 
OnSettingsGUIjj  -
(jj- .
)jj. /
{kk 	
	GUILayoutll 
.ll 
Labelll 
(ll 
$strll 6
,ll6 7
EditorStylesll8 D
.llD E
	boldLabelllE N
)llN O
;llO P
	EditorGUInn 
.nn 
BeginChangeChecknn &
(nn& '
)nn' (
;nn( )
m_SelectIterativeoo 
.oo 
valueoo #
=oo$ %
EditorGUILayoutoo& 5
.oo5 6
Toggleoo6 <
(oo< =
gc_selectIterativeoo= O
,ooO P
m_SelectIterativeooQ b
)oob c
;ooc d
ifqq 
(qq 
	EditorGUIqq 
.qq 
EndChangeCheckqq (
(qq( )
)qq) *
)qq* +
ProBuilderSettingsrr "
.rr" #
Saverr# '
(rr' (
)rr( )
;rr) *
	GUILayouttt 
.tt 
FlexibleSpacett #
(tt# $
)tt$ %
;tt% &
ifvv 
(vv 
	GUILayoutvv 
.vv 
Buttonvv  
(vv  !
$strvv! 3
)vv3 4
)vv4 5
{ww 
DoActionxx 
(xx 
)xx 
;xx 
	SceneViewyy 
.yy 

RepaintAllyy $
(yy$ %
)yy% &
;yy& '
}zz 
}{{ 	
}|| 
}}} ë
üD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\ProBuilderEditorShortcuts.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
static 
class %
ProBuilderEditorShortcuts '
{ 
[ 
Shortcut 
( 
$str ,
,, -
typeof. 4
(4 5
	SceneView5 >
)> ?
)? @
]@ A
static 
void	  
SetSelectMode_Object "
(" #
)# $
{ 
ProBuilderEditor 
. 

selectMode 
=  

SelectMode! +
.+ ,
Object, 2
;2 3
} 
[ 
Shortcut 
( 
$str -
,- .
typeof/ 5
(5 6
	SceneView6 ?
)? @
)@ A
]A B
static 
void	  
SetSelectMode_Vertex "
(" #
)# $
{ 
ProBuilderEditor 
. 

selectMode 
=  

SelectMode! +
.+ ,
Vertex, 2
;2 3
} 
[ 
Shortcut 
( 
$str *
,* +
typeof, 2
(2 3
	SceneView3 <
)< =
)= >
]> ?
static 
void	 
SetSelectMode_Edge  
(  !
)! "
{   
ProBuilderEditor!! 
.!! 

selectMode!! 
=!!  

SelectMode!!! +
.!!+ ,
Edge!!, 0
;!!0 1
}"" 
[$$ 
Shortcut$$ 
($$ 
$str$$ *
,$$* +
typeof$$, 2
($$2 3
	SceneView$$3 <
)$$< =
)$$= >
]$$> ?
static%% 
void%%	 
SetSelectMode_Faces%% !
(%%! "
)%%" #
{&& 
ProBuilderEditor'' 
.'' 

selectMode'' 
=''  

SelectMode''! +
.''+ ,
Face'', 0
;''0 1
}(( 
[** 
Shortcut** 
(** 
$str** 4
,**4 5
typeof**6 <
(**< =
	SceneView**= F
)**F G
,**G H
KeyCode**I P
.**P Q
G**Q R
)**R S
]**S T
static++ 
void++	 $
Toggle_ObjectElementMode++ &
(++& '
)++' (
{,, 
if-- 
(-- 
ProBuilderEditor-- 
.-- 

selectMode-- "
==--# %

SelectMode--& 0
.--0 1
Object--1 7
)--7 8
ProBuilderEditor.. 
... !
ResetToLastSelectMode.. *
(..* +
)..+ ,
;.., -
else// 
ProBuilderEditor00 
.00 

selectMode00 
=00  !

SelectMode00" ,
.00, -
Object00- 3
;003 4
}11 
[33 
Shortcut33 
(33 
$str33 2
,332 3
typeof334 :
(33: ;
	SceneView33; D
)33D E
,33E F
KeyCode33G N
.33N O
H33O P
)33P Q
]33Q R
static44 
void44	 
Toggle_SelectMode44 
(44  
)44  !
{55 
if66 
(66 
ProBuilderEditor66 
.66 
instance66 
!=66  "
null66# '
)66' (
ProBuilderEditor77 
.77 
instance77 
.77 
ToggleSelectionMode77 1
(771 2
)772 3
;773 4
}88 
}99 
}:: é
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\PositionScaleTool.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
class 	
PositionScaleTool
 
: 
PositionTool *
{ 
Vector3 
m_Scale 
; 
	protected

 
override

 
void

 
DoTool

  &
(

& '
Vector3

' .
handlePosition

/ =
,

= >

Quaternion

? I
handleRotation

J X
)

X Y
{ 	
base 
. 
DoTool 
( 
handlePosition &
,& '
handleRotation( 6
)6 7
;7 8
if 
( 
showHandleInfo 
&& !
	isEditing" +
)+ ,
DrawDeltaInfo 
( 
$str '
+( )
m_Scale* 1
.1 2
ToString2 :
(: ;
$str; A
)A B
)B C
;C D
if 
( 
! 
	isEditing 
) 
m_Scale 
= 
Vector3 !
.! "
one" %
;% &
	EditorGUI 
. 
BeginChangeCheck &
(& '
)' (
;( )
var 
size 
= 
HandleUtility $
.$ %
GetHandleSize% 2
(2 3
handlePosition3 A
)A B
;B C
EditorHandleUtility 
.  

PushMatrix  *
(* +
)+ ,
;, -
Handles 
. 
matrix 
= 
	Matrix4x4 &
.& '
TRS' *
(* +
handlePosition+ 9
,9 :
handleRotation; I
,I J
Vector3K R
.R S
oneS V
)V W
;W X
m_Scale 
= 
Handles 
. 
ScaleHandle )
() *
m_Scale* 1
,1 2
Vector33 :
.: ;
zero; ?
,? @

QuaternionA K
.K L
identityL T
,T U
sizeV Z
)Z [
;[ \
EditorHandleUtility 
.  
	PopMatrix  )
() *
)* +
;+ ,
if 
( 
	EditorGUI 
. 
EndChangeCheck (
(( )
)) *
)* +
{ 
if 
( 
! 
	isEditing 
) 
	BeginEdit   
(   
$str   /
)  / 0
;  0 1
Apply"" 
("" 
	Matrix4x4"" 
.""  
Scale""  %
(""% &
m_Scale""& -
)""- .
)"". /
;""/ 0
}## 
}$$ 	
}%% 
}&& Ö"
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Selection\SelectLoop.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 

SelectLoop 
: 

MenuAction (
{ 
public		 
override		 
ToolbarGroup		 $
group		% *
{

 	
get 
{ 
return 
ToolbarGroup %
.% &
	Selection& /
;/ 0
}1 2
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
null 
; 
}  
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
public 
override 
int 
toolbarPriority +
{ 	
get 
{ 
return 
$num 
; 
} 
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str 
, 
$str   
,   
keyCommandAlt!! 
,!! 
$char!! "
)"" 
;"" 
public$$ 
override$$ 

SelectMode$$ "
validSelectModes$$# 3
{%% 	
get&& 
{&& 
return&& 

SelectMode&& #
.&&# $
Edge&&$ (
|&&) *

SelectMode&&+ 5
.&&5 6
Face&&6 :
|&&; <

SelectMode&&= G
.&&G H
TextureFace&&H S
;&&S T
}&&U V
}'' 	
public)) 
override)) 
bool)) 
enabled)) $
{** 	
get++ 
{,, 
if-- 
(-- 
ProBuilderEditor-- $
.--$ %

selectMode--% /
==--0 2

SelectMode--3 =
.--= >
Edge--> B
)--B C
return.. 
EditorToolbarLoader.. .
.... /
GetInstance../ :
<..: ;
SelectEdgeLoop..; I
>..I J
(..J K
)..K L
...L M
enabled..M T
;..T U
else// 
if// 
(// 
ProBuilderEditor// )
.//) *

selectMode//* 4
==//5 7

SelectMode//8 B
.//B C
Face//C G
)//G H
return00 
EditorToolbarLoader00 .
.00. /
GetInstance00/ :
<00: ;
SelectFaceLoop00; I
>00I J
(00J K
)00K L
.00L M
enabled00M T
;00T U
else11 
return22 
false22  
;22  !
}33 
}44 	
public66 
override66 
ActionResult66 $
DoAction66% -
(66- .
)66. /
{77 	
if88 
(88 
ProBuilderEditor88  
.88  !

selectMode88! +
==88, .

SelectMode88/ 9
.889 :
Edge88: >
)88> ?
return99 
EditorToolbarLoader99 *
.99* +
GetInstance99+ 6
<996 7
SelectEdgeLoop997 E
>99E F
(99F G
)99G H
.99H I
DoAction99I Q
(99Q R
)99R S
;99S T
else:: 
if:: 
(:: 
ProBuilderEditor:: %
.::% &

selectMode::& 0
==::1 3

SelectMode::4 >
.::> ?
Face::? C
)::C D
return;; 
EditorToolbarLoader;; *
.;;* +
GetInstance;;+ 6
<;;6 7
SelectFaceLoop;;7 E
>;;E F
(;;F G
);;G H
.;;H I
DoAction;;I Q
(;;Q R
);;R S
;;;S T
return<< 
ActionResult<< 
.<<  
NoSelection<<  +
;<<+ ,
}== 	
}>> 
}?? îÄ
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\PreferencesUpdater.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
static 

class 
PreferencesUpdater #
{ 
static 
Pref 
< 
SemVer 
>  
s_PreferencesVersion 0
=1 2
new3 6
Pref7 ;
<; <
SemVer< B
>B C
(C D
$strD Y
,Y Z
new[ ^
SemVer_ e
(e f
)f g
,g h
SettingsScopei v
.v w
Projectw ~
)~ 
;	 Ä
static 
readonly 
SemVer 
k_ProBuilder_4_0_0 1
=2 3
new4 7
SemVer8 >
(> ?
$num? @
,@ A
$numB C
,C D
$numE F
,F G
$numH J
,J K
$strL U
)U V
;V W
public 
static 
void #
CheckEditorPrefsVersion 2
(2 3
)3 4
{ 	
var 
stored 
=  
s_PreferencesVersion -
.- .
value. 3
;3 4
SemVer 
current 
; 
if 
( 
Version 
.  
TryGetPackageVersion ,
(, -
out- 0
current1 8
)8 9
&&: <
!= >
stored> D
.D E
EqualsE K
(K L
currentL S
)S T
)T U
{  
s_PreferencesVersion $
.$ %
SetValue% -
(- .
current. 5
)5 6
;6 7
if!! 
(!! 
stored!! 
<!! 
k_ProBuilder_4_0_0!! /
)!!/ 0
{"" !
RecoverOldPreferences## )
(##) *
)##* +
;##+ ,%
DeleteObsoletePreferences$$ -
($$- .
)$$. /
;$$/ 0
}%% 
}&& 
}'' 	
struct)) "
FormerPreferenceKeyMap)) %
{** 	
public++ 
string++ 
oldKey++  
;++  !
public,, 
string,, 
newKey,,  
;,,  !
public-- 
System-- 
.-- 
Type-- 
type-- #
;--# $
public.. 
SettingsScope..  
scope..! &
;..& '
public00 "
FormerPreferenceKeyMap00 )
(00) *
string00* 0
oldKey001 7
,007 8
string009 ?
newKey00@ F
,00F G
System00H N
.00N O
Type00O S
type00T X
,00X Y
SettingsScope00Z g
scope00h m
)00m n
{11 
this22 
.22 
oldKey22 
=22 
oldKey22 $
;22$ %
this33 
.33 
newKey33 
=33 
newKey33 $
;33$ %
this44 
.44 
type44 
=44 
type44  
;44  !
this55 
.55 
scope55 
=55 
scope55 "
;55" #
}66 
}77 	
static;; 
readonly;; "
FormerPreferenceKeyMap;; .
[;;. /
];;/ 0$
s_FormerPreferenceKeyMap;;1 I
=;;J K
new;;L O"
FormerPreferenceKeyMap;;P f
[;;f g
];;g h
{<< 	
new>> "
FormerPreferenceKeyMap>> &
(>>& '
$str>>' )
,>>) *
$str>>+ =
,>>= >
typeof>>? E
(>>E F
UnityEngine>>F Q
.>>Q R

ProBuilder>>R \
.>>\ ]
SemVer>>] c
)>>c d
,>>d e
SettingsScope>>f s
.>>s t
Project>>t {
)>>{ |
,>>| }
new?? "
FormerPreferenceKeyMap?? &
(??& '
PreferenceKeys??' 5
.??5 6
pbUseUnityColors??6 F
,??F G
$str??H h
,??h i
typeof??j p
(??p q
System??q w
.??w x
Boolean??x 
)	?? Ä
,
??Ä Å
SettingsScope
??Ç è
.
??è ê
User
??ê î
)
??î ï
,
??ï ñ
new@@ "
FormerPreferenceKeyMap@@ &
(@@& '
PreferenceKeys@@' 5
.@@5 6 
pbSelectedFaceDither@@6 J
,@@J K
$str@@L h
,@@h i
typeof@@j p
(@@p q
System@@q w
.@@w x
Boolean@@x 
)	@@ Ä
,
@@Ä Å
SettingsScope
@@Ç è
.
@@è ê
User
@@ê î
)
@@î ï
,
@@ï ñ
newAA "
FormerPreferenceKeyMapAA &
(AA& '
PreferenceKeysAA' 5
.AA5 6
pbSelectedFaceColorAA6 I
,AAI J
$strAAK k
,AAk l
typeofAAm s
(AAs t
UnityEngineAAt 
.	AA Ä
Color
AAÄ Ö
)
AAÖ Ü
,
AAÜ á
SettingsScope
AAà ï
.
AAï ñ
User
AAñ ö
)
AAö õ
,
AAõ ú
newBB "
FormerPreferenceKeyMapBB &
(BB& '
PreferenceKeysBB' 5
.BB5 6
pbWireframeColorBB6 F
,BBF G
$strBBH e
,BBe f
typeofBBg m
(BBm n
UnityEngineBBn y
.BBy z
ColorBBz 
)	BB Ä
,
BBÄ Å
SettingsScope
BBÇ è
.
BBè ê
User
BBê î
)
BBî ï
,
BBï ñ
newCC "
FormerPreferenceKeyMapCC &
(CC& '
PreferenceKeysCC' 5
.CC5 6!
pbUnselectedEdgeColorCC6 K
,CCK L
$strCCM o
,CCo p
typeofCCq w
(CCw x
UnityEngine	CCx É
.
CCÉ Ñ
Color
CCÑ â
)
CCâ ä
,
CCä ã
SettingsScope
CCå ô
.
CCô ö
User
CCö û
)
CCû ü
,
CCü †
newDD "
FormerPreferenceKeyMapDD &
(DD& '
PreferenceKeysDD' 5
.DD5 6
pbSelectedEdgeColorDD6 I
,DDI J
$strDDK k
,DDk l
typeofDDm s
(DDs t
UnityEngineDDt 
.	DD Ä
Color
DDÄ Ö
)
DDÖ Ü
,
DDÜ á
SettingsScope
DDà ï
.
DDï ñ
User
DDñ ö
)
DDö õ
,
DDõ ú
newEE "
FormerPreferenceKeyMapEE &
(EE& '
PreferenceKeysEE' 5
.EE5 6#
pbUnselectedVertexColorEE6 M
,EEM N
$strEEO s
,EEs t
typeofEEu {
(EE{ |
UnityEngine	EE| á
.
EEá à
Color
EEà ç
)
EEç é
,
EEé è
SettingsScope
EEê ù
.
EEù û
User
EEû ¢
)
EE¢ £
,
EE£ §
newFF "
FormerPreferenceKeyMapFF &
(FF& '
PreferenceKeysFF' 5
.FF5 6!
pbSelectedVertexColorFF6 K
,FFK L
$strFFM o
,FFo p
typeofFFq w
(FFw x
UnityEngine	FFx É
.
FFÉ Ñ
Color
FFÑ â
)
FFâ ä
,
FFä ã
SettingsScope
FFå ô
.
FFô ö
User
FFö û
)
FFû ü
,
FFü †
newGG "
FormerPreferenceKeyMapGG &
(GG& '
PreferenceKeysGG' 5
.GG5 6
pbPreselectionColorGG6 I
,GGI J
$strGGK k
,GGk l
typeofGGm s
(GGs t
UnityEngineGGt 
.	GG Ä
Color
GGÄ Ö
)
GGÖ Ü
,
GGÜ á
SettingsScope
GGà ï
.
GGï ñ
User
GGñ ö
)
GGö õ
,
GGõ ú
newHH "
FormerPreferenceKeyMapHH &
(HH& '
PreferenceKeysHH' 5
.HH5 6
pbWireframeSizeHH6 E
,HHE F
$strHHG c
,HHc d
typeofHHe k
(HHk l
SystemHHl r
.HHr s
SingleHHs y
)HHy z
,HHz {
SettingsScope	HH| â
.
HHâ ä
User
HHä é
)
HHé è
,
HHè ê
newII "
FormerPreferenceKeyMapII &
(II& '
PreferenceKeysII' 5
.II5 6
pbLineHandleSizeII6 F
,IIF G
$strIIH _
,II_ `
typeofIIa g
(IIg h
SystemIIh n
.IIn o
SingleIIo u
)IIu v
,IIv w
SettingsScope	IIx Ö
.
IIÖ Ü
User
IIÜ ä
)
IIä ã
,
IIã å
newJJ "
FormerPreferenceKeyMapJJ &
(JJ& '
PreferenceKeysJJ' 5
.JJ5 6
pbVertexHandleSizeJJ6 H
,JJH I
$strJJJ d
,JJd e
typeofJJf l
(JJl m
SystemJJm s
.JJs t
SingleJJt z
)JJz {
,JJ{ |
SettingsScope	JJ} ä
.
JJä ã
User
JJã è
)
JJè ê
,
JJê ë
newKK "
FormerPreferenceKeyMapKK &
(KK& '
PreferenceKeysKK' 5
.KK5 6
pbShiftOnlyTooltipsKK6 I
,KKI J
$strKKK e
,KKe f
typeofKKg m
(KKm n
SystemKKn t
.KKt u
BooleanKKu |
)KK| }
,KK} ~
SettingsScope	KK å
.
KKå ç
User
KKç ë
)
KKë í
,
KKí ì
newLL "
FormerPreferenceKeyMapLL &
(LL& '
PreferenceKeysLL' 5
.LL5 6%
pbShowEditorNotificationsLL6 O
,LLO P
$strLLQ q
,LLq r
typeofLLs y
(LLy z
System	LLz Ä
.
LLÄ Å
Boolean
LLÅ à
)
LLà â
,
LLâ ä
SettingsScope
LLã ò
.
LLò ô
Project
LLô †
)
LL† °
,
LL° ¢
newMM "
FormerPreferenceKeyMapMM &
(MM& '
PreferenceKeysMM' 5
.MM5 6 
pbDefaultStaticFlagsMM6 J
,MMJ K
$strMML k
,MMk l
typeofMMm s
(MMs t
UnityEditorMMt 
.	MM Ä
StaticEditorFlags
MMÄ ë
)
MMë í
,
MMí ì
SettingsScope
MMî °
.
MM° ¢
Project
MM¢ ©
)
MM© ™
,
MM™ ´
newNN "
FormerPreferenceKeyMapNN &
(NN& '
PreferenceKeysNN' 5
.NN5 6
pbDefaultMaterialNN6 G
,NNG H
$strNNI \
,NN\ ]
typeofNN^ d
(NNd e
UnityEngineNNe p
.NNp q
MaterialNNq y
)NNy z
,NNz {
SettingsScope	NN| â
.
NNâ ä
Project
NNä ë
)
NNë í
,
NNí ì
newOO "
FormerPreferenceKeyMapOO &
(OO& '
PreferenceKeysOO' 5
.OO5 6
pbForceConvexOO6 C
,OOC D
$strOOE `
,OO` a
typeofOOb h
(OOh i
SystemOOi o
.OOo p
BooleanOOp w
)OOw x
,OOx y
SettingsScope	OOz á
.
OOá à
Project
OOà è
)
OOè ê
,
OOê ë
newPP "
FormerPreferenceKeyMapPP &
(PP& '
$strPP' )
,PP) *
$strPP+ G
,PPG H
typeofPPI O
(PPO P
UnityEnginePPP [
.PP[ \

ProBuilderPP\ f
.PPf g
PivotLocationPPg t
)PPt u
,PPu v
SettingsScope	PPw Ñ
.
PPÑ Ö
Project
PPÖ å
)
PPå ç
,
PPç é
newQQ "
FormerPreferenceKeyMapQQ &
(QQ& '
$strQQ' )
,QQ) *
$strQQ+ E
,QQE F
typeofQQG M
(QQM N
SystemQQN T
.QQT U
BooleanQQU \
)QQ\ ]
,QQ] ^
SettingsScopeQQ_ l
.QQl m
ProjectQQm t
)QQt u
,QQu v
newRR "
FormerPreferenceKeyMapRR &
(RR& '
PreferenceKeysRR' 5
.RR5 6
pbShadowCastingModeRR6 I
,RRI J
$strRRK c
,RRc d
typeofRRe k
(RRk l
UnityEngineRRl w
.RRw x
	Rendering	RRx Å
.
RRÅ Ç
ShadowCastingMode
RRÇ ì
)
RRì î
,
RRî ï
SettingsScope
RRñ £
.
RR£ §
Project
RR§ ´
)
RR´ ¨
,
RR¨ ≠
newSS "
FormerPreferenceKeyMapSS &
(SS& '
PreferenceKeysSS' 5
.SS5 6
pbDefaultColliderSS6 G
,SSG H
$strSSI d
,SSd e
typeofSSf l
(SSl m
UnityEngineSSm x
.SSx y

ProBuilder	SSy É
.
SSÉ Ñ
ColliderType
SSÑ ê
)
SSê ë
,
SSë í
SettingsScope
SSì †
.
SS† °
Project
SS° ®
)
SS® ©
,
SS© ™
newTT "
FormerPreferenceKeyMapTT &
(TT& '
PreferenceKeysTT' 5
.TT5 6 
pbEnableExperimentalTT6 J
,TTJ K
$strTTL j
,TTj k
typeofTTl r
(TTr s
SystemTTs y
.TTy z
Boolean	TTz Å
)
TTÅ Ç
,
TTÇ É
SettingsScope
TTÑ ë
.
TTë í
User
TTí ñ
)
TTñ ó
,
TTó ò
newUU "
FormerPreferenceKeyMapUU &
(UU& '
PreferenceKeysUU' 5
.UU5 6
pbMeshesAreAssetsUU6 G
,UUG H
$strUUI g
,UUg h
typeofUUi o
(UUo p
SystemUUp v
.UUv w
BooleanUUw ~
)UU~ 
,	UU Ä
SettingsScope
UUÅ é
.
UUé è
Project
UUè ñ
)
UUñ ó
,
UUó ò
newVV "
FormerPreferenceKeyMapVV &
(VV& '
$strVV' )
,VV) *
$strVV+ A
,VVA B
typeofVVC I
(VVI J
SystemVVJ P
.VVP Q
BooleanVVQ X
)VVX Y
,VVY Z
SettingsScopeVV[ h
.VVh i
ProjectVVi p
)VVp q
,VVq r
newWW "
FormerPreferenceKeyMapWW &
(WW& '
$strWW' )
,WW) *
$strWW+ @
,WW@ A
typeofWWB H
(WWH I
SystemWWI O
.WWO P
BooleanWWP W
)WWW X
,WWX Y
SettingsScopeWWZ g
.WWg h
ProjectWWh o
)WWo p
,WWp q
newXX "
FormerPreferenceKeyMapXX &
(XX& '
$strXX' )
,XX) *
$strXX+ C
,XXC D
typeofXXE K
(XXK L
SystemXXL R
.XXR S
BooleanXXS Z
)XXZ [
,XX[ \
SettingsScopeXX] j
.XXj k
ProjectXXk r
)XXr s
,XXs t
newYY "
FormerPreferenceKeyMapYY &
(YY& '
$strYY' )
,YY) *
$strYY+ B
,YYB C
typeofYYD J
(YYJ K
SystemYYK Q
.YYQ R
BooleanYYR Y
)YYY Z
,YYZ [
SettingsScopeYY\ i
.YYi j
ProjectYYj q
)YYq r
,YYr s
newZZ "
FormerPreferenceKeyMapZZ &
(ZZ& '
$strZZ' )
,ZZ) *
$strZZ+ N
,ZZN O
typeofZZP V
(ZZV W
SystemZZW ]
.ZZ] ^
BooleanZZ^ e
)ZZe f
,ZZf g
SettingsScopeZZh u
.ZZu v
ProjectZZv }
)ZZ} ~
,ZZ~ 
new[[ "
FormerPreferenceKeyMap[[ &
([[& '
PreferenceKeys[[' 5
.[[5 6*
pbShowMissingLightmapUvWarning[[6 T
,[[T U
$str[[V 
,	[[ Ä
typeof
[[Å á
(
[[á à
System
[[à é
.
[[é è
Boolean
[[è ñ
)
[[ñ ó
,
[[ó ò
SettingsScope
[[ô ¶
.
[[¶ ß
User
[[ß ´
)
[[´ ¨
,
[[¨ ≠
new\\ "
FormerPreferenceKeyMap\\ &
(\\& '
$str\\' )
,\\) *
$str\\+ Y
,\\Y Z
typeof\\[ a
(\\a b
UnityEngine\\b m
.\\m n

ProBuilder\\n x
.\\x y
UnwrapParameters	\\y â
)
\\â ä
,
\\ä ã
SettingsScope
\\å ô
.
\\ô ö
Project
\\ö °
)
\\° ¢
,
\\¢ £
new]] "
FormerPreferenceKeyMap]] &
(]]& '
$str]]' )
,]]) *
$str]]+ H
,]]H I
typeof]]J P
(]]P Q
UnityEditor]]Q \
.]]\ ]
Lightmapping]]] i
.]]i j
GIWorkflowMode]]j x
)]]x y
,]]y z
SettingsScope	]]{ à
.
]]à â
User
]]â ç
)
]]ç é
,
]]é è
new^^ "
FormerPreferenceKeyMap^^ &
(^^& '
$str^^' ;
,^^; <
$str^^= H
,^^H I
typeof^^J P
(^^P Q
UnityEngine^^Q \
.^^\ ]

ProBuilder^^] g
.^^g h
LogLevel^^h p
)^^p q
,^^q r
SettingsScope	^^s Ä
.
^^Ä Å
Project
^^Å à
)
^^à â
,
^^â ä
new__ "
FormerPreferenceKeyMap__ &
(__& '
$str__' 9
,__9 :
$str__; G
,__G H
typeof__I O
(__O P
UnityEngine__P [
.__[ \

ProBuilder__\ f
.__f g
	LogOutput__g p
)__p q
,__q r
SettingsScope	__s Ä
.
__Ä Å
Project
__Å à
)
__à â
,
__â ä
new`` "
FormerPreferenceKeyMap`` &
(``& '
$str``' >
,``> ?
$str``@ J
,``J K
typeof``L R
(``R S
System``S Y
.``Y Z
String``Z `
)``` a
,``a b
SettingsScope``c p
.``p q
Project``q x
)``x y
,``y z
newaa "
FormerPreferenceKeyMapaa &
(aa& '
$straa' )
,aa) *
$straa+ G
,aaG H
typeofaaI O
(aaO P
SystemaaP V
.aaV W
StringaaW ]
)aa] ^
,aa^ _
SettingsScopeaa` m
.aam n
Projectaan u
)aau v
,aav w
newbb "
FormerPreferenceKeyMapbb &
(bb& '
$strbb' )
,bb) *
$strbb+ @
,bb@ A
typeofbbB H
(bbH I
UnityEnginebbI T
.bbT U

ProBuilderbbU _
.bb_ `
SemVerbb` f
)bbf g
,bbg h
SettingsScopebbi v
.bbv w
Projectbbw ~
)bb~ 
,	bb Ä
newcc "
FormerPreferenceKeyMapcc &
(cc& '
PreferenceKeyscc' 5
.cc5 6
pbShowSceneInfocc6 E
,ccE F
$strccG ]
,cc] ^
typeofcc_ e
(cce f
Systemccf l
.ccl m
Booleanccm t
)cct u
,ccu v
SettingsScope	ccw Ñ
.
ccÑ Ö
Project
ccÖ å
)
ccå ç
,
ccç é
newdd "
FormerPreferenceKeyMapdd &
(dd& '
PreferenceKeysdd' 5
.dd5 6
	pbIconGUIdd6 ?
,dd? @
$strddA X
,ddX Y
typeofddZ `
(dd` a
Systemdda g
.ddg h
Booleanddh o
)ddo p
,ddp q
SettingsScopeddr 
.	dd Ä
Project
ddÄ á
)
ddá à
,
ddà â
newee "
FormerPreferenceKeyMapee &
(ee& '
PreferenceKeysee' 5
.ee5 6!
pbUniqueModeShortcutsee6 K
,eeK L
$streeM i
,eei j
typeofeek q
(eeq r
Systemeer x
.eex y
Boolean	eey Ä
)
eeÄ Å
,
eeÅ Ç
SettingsScope
eeÉ ê
.
eeê ë
User
eeë ï
)
eeï ñ
,
eeñ ó
newff "
FormerPreferenceKeyMapff &
(ff& '
$strff' )
,ff) *
$strff+ K
,ffK L
typeofffM S
(ffS T
SystemffT Z
.ffZ [
Booleanff[ b
)ffb c
,ffc d
SettingsScopeffe r
.ffr s
Userffs w
)ffw x
,ffx y
newgg "
FormerPreferenceKeyMapgg &
(gg& '
PreferenceKeysgg' 5
.gg5 6
pbToolbarLocationgg6 G
,ggG H
$strggI f
,ggf g
typeofggh n
(ggn o
UnityEditorggo z
.ggz {

ProBuilder	gg{ Ö
.
ggÖ Ü"
SceneToolbarLocation
ggÜ ö
)
ggö õ
,
ggõ ú
SettingsScope
ggù ™
.
gg™ ´
User
gg´ Ø
)
ggØ ∞
,
gg∞ ±
newhh "
FormerPreferenceKeyMaphh &
(hh& '
$strhh' )
,hh) *
$strhh+ d
,hhd e
typeofhhf l
(hhl m
Systemhhm s
.hhs t
Booleanhht {
)hh{ |
,hh| }
SettingsScope	hh~ ã
.
hhã å
Project
hhå ì
)
hhì î
,
hhî ï
newll "
FormerPreferenceKeyMapll &
(ll& '
PreferenceKeysll' 5
.ll5 6'
pbShowPreselectionHighlightll6 Q
,llQ R
$strllS u
,llu v
typeofllw }
(ll} ~
System	ll~ Ñ
.
llÑ Ö
Boolean
llÖ å
)
llå ç
,
llç é
SettingsScope
llè ú
.
llú ù
User
llù °
)
ll° ¢
,
ll¢ £
newmm "
FormerPreferenceKeyMapmm &
(mm& '
PreferenceKeysmm' 5
.mm5 6
pbCloseShapeWindowmm6 H
,mmH I
$strmmJ p
,mmp q
typeofmmr x
(mmx y
Systemmmy 
.	mm Ä
Boolean
mmÄ á
)
mmá à
,
mmà â
SettingsScope
mmä ó
.
mmó ò
Project
mmò ü
)
mmü †
,
mm† °
newnn "
FormerPreferenceKeyMapnn &
(nn& '
$strnn' )
,nn) *
$strnn+ I
,nnI J
typeofnnK Q
(nnQ R
SystemnnR X
.nnX Y
BooleannnY `
)nn` a
,nna b
SettingsScopennc p
.nnp q
Usernnq u
)nnu v
,nnv w
newoo "
FormerPreferenceKeyMapoo &
(oo& '
$stroo' O
,ooO P
$strooQ h
,ooh i
typeofooj p
(oop q
Systemooq w
.oow x
Booleanoox 
)	oo Ä
,
ooÄ Å
SettingsScope
ooÇ è
.
ooè ê
Project
ooê ó
)
ooó ò
,
ooò ô
newpp "
FormerPreferenceKeyMappp &
(pp& '
$strpp' O
,ppO P
$strppQ h
,pph i
typeofppj p
(ppp q
Systemppq w
.ppw x
Booleanppx 
)	pp Ä
,
ppÄ Å
SettingsScope
ppÇ è
.
ppè ê
Project
ppê ó
)
ppó ò
,
ppò ô
newqq "
FormerPreferenceKeyMapqq &
(qq& '
$strqq' )
,qq) *
$strqq+ ?
,qq? @
typeofqqA G
(qqG H
SystemqqH N
.qqN O
BooleanqqO V
)qqV W
,qqW X
SettingsScopeqqY f
.qqf g
Projectqqg n
)qqn o
,qqo p
newrr "
FormerPreferenceKeyMaprr &
(rr& '
$strrr' O
,rrO P
$strrrQ h
,rrh i
typeofrrj p
(rrp q
Systemrrq w
.rrw x
Singlerrx ~
)rr~ 
,	rr Ä
SettingsScope
rrÅ é
.
rré è
Project
rrè ñ
)
rrñ ó
,
rró ò
newss "
FormerPreferenceKeyMapss &
(ss& '
$strss' R
,ssR S
$strssT n
,ssn o
typeofssp v
(ssv w
Systemssw }
.ss} ~
Single	ss~ Ñ
)
ssÑ Ö
,
ssÖ Ü
SettingsScope
ssá î
.
ssî ï
Project
ssï ú
)
ssú ù
,
ssù û
newtt "
FormerPreferenceKeyMaptt &
(tt& '
$strtt' Q
,ttQ R
$strttS l
,ttl m
typeofttn t
(ttt u
Systemttu {
.tt{ |
Boolean	tt| É
)
ttÉ Ñ
,
ttÑ Ö
SettingsScope
ttÜ ì
.
ttì î
Project
ttî õ
)
ttõ ú
,
ttú ù
newuu "
FormerPreferenceKeyMapuu &
(uu& '
$struu' )
,uu) *
$struu+ C
,uuC D
typeofuuE K
(uuK L
SystemuuL R
.uuR S
BooleanuuS Z
)uuZ [
,uu[ \
SettingsScopeuu] j
.uuj k
Projectuuk r
)uur s
,uus t
newvv "
FormerPreferenceKeyMapvv &
(vv& '
PreferenceKeysvv' 5
.vv5 6$
pbStripProBuilderOnBuildvv6 N
,vvN O
$strvvP v
,vvv w
typeofvvx ~
(vv~ 
System	vv Ö
.
vvÖ Ü
Boolean
vvÜ ç
)
vvç é
,
vvé è
SettingsScope
vvê ù
.
vvù û
Project
vvû •
)
vv• ¶
,
vv¶ ß
newww "
FormerPreferenceKeyMapww &
(ww& '
PreferenceKeysww' 5
.ww5 6
pbUVGridSnapValueww6 G
,wwG H
$strwwI g
,wwg h
typeofwwi o
(wwo p
Systemwwp v
.wwv w
Singlewww }
)ww} ~
,ww~ 
SettingsScope
wwÄ ç
.
wwç é
Project
wwé ï
)
wwï ñ
,
wwñ ó
newxx "
FormerPreferenceKeyMapxx &
(xx& '
$strxx' )
,xx) *
$strxx+ T
,xxT U
typeofxxV \
(xx\ ]
Systemxx] c
.xxc d
Stringxxd j
)xxj k
,xxk l
SettingsScopexxm z
.xxz {
Project	xx{ Ç
)
xxÇ É
,
xxÉ Ñ
}zz 	
;zz	 

static|| 
void|| !
RecoverOldPreferences|| )
(||) *
)||* +
{}} 	
int~~ 
success~~ 
=~~ 
$num~~ 
;~~ 
foreach
ÄÄ 
(
ÄÄ 
var
ÄÄ 
map
ÄÄ 
in
ÄÄ &
s_FormerPreferenceKeyMap
ÄÄ  8
)
ÄÄ8 9
{
ÅÅ 
object
ÇÇ 
val
ÇÇ 
;
ÇÇ 

MethodInfo
ÉÉ 
set
ÉÉ 
=
ÉÉ  
typeof
ÉÉ! '
(
ÉÉ' (
Settings
ÉÉ( 0
)
ÉÉ0 1
.
ÉÉ1 2
	GetMethod
ÉÉ2 ;
(
ÉÉ; <
$str
ÉÉ< A
,
ÉÉA B
BindingFlags
ÉÉC O
.
ÉÉO P
Static
ÉÉP V
|
ÉÉW X
BindingFlags
ÉÉY e
.
ÉÉe f
Public
ÉÉf l
)
ÉÉl m
;
ÉÉm n
if
ÜÜ 
(
ÜÜ 
!
ÜÜ 
string
ÜÜ 
.
ÜÜ 
IsNullOrEmpty
ÜÜ )
(
ÜÜ) *
map
ÜÜ* -
.
ÜÜ- .
oldKey
ÜÜ. 4
)
ÜÜ4 5
&&
ÜÜ6 8!
PreferencesInternal
ÜÜ9 L
.
ÜÜL M
TryGetValue
ÜÜM X
(
ÜÜX Y
map
ÜÜY \
.
ÜÜ\ ]
oldKey
ÜÜ] c
,
ÜÜc d
map
ÜÜe h
.
ÜÜh i
type
ÜÜi m
,
ÜÜm n
out
ÜÜo r
val
ÜÜs v
)
ÜÜv w
)
ÜÜw x
{
áá 
try
àà 
{
ââ 

MethodInfo
ää "

genericSet
ää# -
=
ää. /
set
ää0 3
.
ää3 4
MakeGenericMethod
ää4 E
(
ääE F
map
ääF I
.
ääI J
type
ääJ N
)
ääN O
;
ääO P

genericSet
åå "
.
åå" #
Invoke
åå# )
(
åå) *
null
åå* .
,
åå. /
new
åå0 3
object
åå4 :
[
åå: ;
]
åå; <
{
çç 
map
éé 
.
éé  
newKey
éé  &
,
éé& '
val
èè 
,
èè  
map
êê 
.
êê  
scope
êê  %
}
ëë 
)
ëë 
;
ëë 
success
ìì 
++
ìì !
;
ìì! "
}
îî 
catch
ïï 
{
ññ 
}
óó 
}
òò 
}
öö  
ProBuilderSettings
†† 
.
†† 
Save
†† #
(
††# $
)
††$ %
;
††% &
}
°° 	
static
££ 
void
££ '
DeleteObsoletePreferences
££ -
(
££- .
)
££. /
{
§§ 	!
PreferencesInternal
¶¶ 
.
¶¶  
	DeleteKey
¶¶  )
(
¶¶) *
PreferenceKeys
¶¶* 8
.
¶¶8 9 
pbDefaultEditLevel
¶¶9 K
)
¶¶K L
;
¶¶L M!
PreferencesInternal
ßß 
.
ßß  
	DeleteKey
ßß  )
(
ßß) *
PreferenceKeys
ßß* 8
.
ßß8 9$
pbDefaultSelectionMode
ßß9 O
)
ßßO P
;
ßßP Q!
PreferencesInternal
®® 
.
®®  
	DeleteKey
®®  )
(
®®) *
PreferenceKeys
®®* 8
.
®®8 9
pbHandleAlignment
®®9 J
)
®®J K
;
®®K L!
PreferencesInternal
©© 
.
©©  
	DeleteKey
©©  )
(
©©) *
PreferenceKeys
©©* 8
.
©©8 9
pbVertexColorTool
©©9 J
)
©©J K
;
©©K L!
PreferencesInternal
™™ 
.
™™  
	DeleteKey
™™  )
(
™™) *
PreferenceKeys
™™* 8
.
™™8 9
pbToolbarLocation
™™9 J
)
™™J K
;
™™K L!
PreferencesInternal
´´ 
.
´´  
	DeleteKey
´´  )
(
´´) *
PreferenceKeys
´´* 8
.
´´8 9
pbDefaultEntity
´´9 H
)
´´H I
;
´´I J!
PreferencesInternal
¨¨ 
.
¨¨  
	DeleteKey
¨¨  )
(
¨¨) *
PreferenceKeys
¨¨* 8
.
¨¨8 9
pbUseUnityColors
¨¨9 I
)
¨¨I J
;
¨¨J K!
PreferencesInternal
≠≠ 
.
≠≠  
	DeleteKey
≠≠  )
(
≠≠) *
PreferenceKeys
≠≠* 8
.
≠≠8 9
pbLineHandleSize
≠≠9 I
)
≠≠I J
;
≠≠J K!
PreferencesInternal
ÆÆ 
.
ÆÆ  
	DeleteKey
ÆÆ  )
(
ÆÆ) *
PreferenceKeys
ÆÆ* 8
.
ÆÆ8 9
pbWireframeSize
ÆÆ9 H
)
ÆÆH I
;
ÆÆI J!
PreferencesInternal
ØØ 
.
ØØ  
	DeleteKey
ØØ  )
(
ØØ) *
PreferenceKeys
ØØ* 8
.
ØØ8 9!
pbSelectedFaceColor
ØØ9 L
)
ØØL M
;
ØØM N!
PreferencesInternal
∞∞ 
.
∞∞  
	DeleteKey
∞∞  )
(
∞∞) *
PreferenceKeys
∞∞* 8
.
∞∞8 9
pbWireframeColor
∞∞9 I
)
∞∞I J
;
∞∞J K!
PreferencesInternal
±± 
.
±±  
	DeleteKey
±±  )
(
±±) *
PreferenceKeys
±±* 8
.
±±8 9!
pbPreselectionColor
±±9 L
)
±±L M
;
±±M N!
PreferencesInternal
≤≤ 
.
≤≤  
	DeleteKey
≤≤  )
(
≤≤) *
PreferenceKeys
≤≤* 8
.
≤≤8 9"
pbSelectedFaceDither
≤≤9 M
)
≤≤M N
;
≤≤N O!
PreferencesInternal
≥≥ 
.
≥≥  
	DeleteKey
≥≥  )
(
≥≥) *
PreferenceKeys
≥≥* 8
.
≥≥8 9#
pbSelectedVertexColor
≥≥9 N
)
≥≥N O
;
≥≥O P!
PreferencesInternal
¥¥ 
.
¥¥  
	DeleteKey
¥¥  )
(
¥¥) *
PreferenceKeys
¥¥* 8
.
¥¥8 9%
pbUnselectedVertexColor
¥¥9 P
)
¥¥P Q
;
¥¥Q R!
PreferencesInternal
µµ 
.
µµ  
	DeleteKey
µµ  )
(
µµ) *
PreferenceKeys
µµ* 8
.
µµ8 9!
pbSelectedEdgeColor
µµ9 L
)
µµL M
;
µµM N!
PreferencesInternal
∂∂ 
.
∂∂  
	DeleteKey
∂∂  )
(
∂∂) *
PreferenceKeys
∂∂* 8
.
∂∂8 9#
pbUnselectedEdgeColor
∂∂9 N
)
∂∂N O
;
∂∂O P!
PreferencesInternal
∑∑ 
.
∑∑  
	DeleteKey
∑∑  )
(
∑∑) *
PreferenceKeys
∑∑* 8
.
∑∑8 9+
pbDefaultOpenInDockableWindow
∑∑9 V
)
∑∑V W
;
∑∑W X!
PreferencesInternal
∏∏ 
.
∏∏  
	DeleteKey
∏∏  )
(
∏∏) *
PreferenceKeys
∏∏* 8
.
∏∏8 9!
pbEditorPrefVersion
∏∏9 L
)
∏∏L M
;
∏∏M N!
PreferencesInternal
ππ 
.
ππ  
	DeleteKey
ππ  )
(
ππ) *
PreferenceKeys
ππ* 8
.
ππ8 9&
pbEditorShortcutsVersion
ππ9 Q
)
ππQ R
;
ππR S!
PreferencesInternal
∫∫ 
.
∫∫  
	DeleteKey
∫∫  )
(
∫∫) *
PreferenceKeys
∫∫* 8
.
∫∫8 9
pbDefaultCollider
∫∫9 J
)
∫∫J K
;
∫∫K L!
PreferencesInternal
ªª 
.
ªª  
	DeleteKey
ªª  )
(
ªª) *
PreferenceKeys
ªª* 8
.
ªª8 9
pbForceConvex
ªª9 F
)
ªªF G
;
ªªG H!
PreferencesInternal
ºº 
.
ºº  
	DeleteKey
ºº  )
(
ºº) *
PreferenceKeys
ºº* 8
.
ºº8 9 
pbVertexColorPrefs
ºº9 K
)
ººK L
;
ººL M!
PreferencesInternal
ΩΩ 
.
ΩΩ  
	DeleteKey
ΩΩ  )
(
ΩΩ) *
PreferenceKeys
ΩΩ* 8
.
ΩΩ8 9'
pbShowEditorNotifications
ΩΩ9 R
)
ΩΩR S
;
ΩΩS T!
PreferencesInternal
ææ 
.
ææ  
	DeleteKey
ææ  )
(
ææ) *
PreferenceKeys
ææ* 8
.
ææ8 9
pbDragCheckLimit
ææ9 I
)
ææI J
;
ææJ K!
PreferencesInternal
øø 
.
øø  
	DeleteKey
øø  )
(
øø) *
PreferenceKeys
øø* 8
.
øø8 9 
pbForceVertexPivot
øø9 K
)
øøK L
;
øøL M!
PreferencesInternal
¿¿ 
.
¿¿  
	DeleteKey
¿¿  )
(
¿¿) *
PreferenceKeys
¿¿* 8
.
¿¿8 9
pbForceGridPivot
¿¿9 I
)
¿¿I J
;
¿¿J K!
PreferencesInternal
¡¡ 
.
¡¡  
	DeleteKey
¡¡  )
(
¡¡) *
PreferenceKeys
¡¡* 8
.
¡¡8 9%
pbManifoldEdgeExtrusion
¡¡9 P
)
¡¡P Q
;
¡¡Q R!
PreferencesInternal
¬¬ 
.
¬¬  
	DeleteKey
¬¬  )
(
¬¬) *
PreferenceKeys
¬¬* 8
.
¬¬8 9'
pbPerimeterEdgeBridgeOnly
¬¬9 R
)
¬¬R S
;
¬¬S T!
PreferencesInternal
√√ 
.
√√  
	DeleteKey
√√  )
(
√√) *
PreferenceKeys
√√* 8
.
√√8 9 
pbPBOSelectionOnly
√√9 K
)
√√K L
;
√√L M!
PreferencesInternal
ƒƒ 
.
ƒƒ  
	DeleteKey
ƒƒ  )
(
ƒƒ) *
PreferenceKeys
ƒƒ* 8
.
ƒƒ8 9 
pbCloseShapeWindow
ƒƒ9 K
)
ƒƒK L
;
ƒƒL M!
PreferencesInternal
≈≈ 
.
≈≈  
	DeleteKey
≈≈  )
(
≈≈) *
PreferenceKeys
≈≈* 8
.
≈≈8 9 
pbUVEditorFloating
≈≈9 K
)
≈≈K L
;
≈≈L M!
PreferencesInternal
∆∆ 
.
∆∆  
	DeleteKey
∆∆  )
(
∆∆) *
PreferenceKeys
∆∆* 8
.
∆∆8 9!
pbUVMaterialPreview
∆∆9 L
)
∆∆L M
;
∆∆M N!
PreferencesInternal
«« 
.
««  
	DeleteKey
««  )
(
««) *
PreferenceKeys
««* 8
.
««8 9 
pbShowSceneToolbar
««9 K
)
««K L
;
««L M!
PreferencesInternal
»» 
.
»»  
	DeleteKey
»»  )
(
»») *
PreferenceKeys
»»* 8
.
»»8 9.
 pbNormalizeUVsOnPlanarProjection
»»9 Y
)
»»Y Z
;
»»Z [!
PreferencesInternal
…… 
.
……  
	DeleteKey
……  )
(
……) *
PreferenceKeys
……* 8
.
……8 9&
pbStripProBuilderOnBuild
……9 Q
)
……Q R
;
……R S!
PreferencesInternal
   
.
    
	DeleteKey
    )
(
  ) *
PreferenceKeys
  * 8
.
  8 9(
pbDisableAutoUV2Generation
  9 S
)
  S T
;
  T U!
PreferencesInternal
ÀÀ 
.
ÀÀ  
	DeleteKey
ÀÀ  )
(
ÀÀ) *
PreferenceKeys
ÀÀ* 8
.
ÀÀ8 9
pbShowSceneInfo
ÀÀ9 H
)
ÀÀH I
;
ÀÀI J!
PreferencesInternal
ÃÃ 
.
ÃÃ  
	DeleteKey
ÃÃ  )
(
ÃÃ) *
PreferenceKeys
ÃÃ* 8
.
ÃÃ8 9'
pbEnableBackfaceSelection
ÃÃ9 R
)
ÃÃR S
;
ÃÃS T!
PreferencesInternal
ÕÕ 
.
ÕÕ  
	DeleteKey
ÕÕ  )
(
ÕÕ) *
PreferenceKeys
ÕÕ* 8
.
ÕÕ8 9%
pbVertexPaletteDockable
ÕÕ9 P
)
ÕÕP Q
;
ÕÕQ R!
PreferencesInternal
ŒŒ 
.
ŒŒ  
	DeleteKey
ŒŒ  )
(
ŒŒ) *
PreferenceKeys
ŒŒ* 8
.
ŒŒ8 9
pbExtrudeAsGroup
ŒŒ9 I
)
ŒŒI J
;
ŒŒJ K!
PreferencesInternal
œœ 
.
œœ  
	DeleteKey
œœ  )
(
œœ) *
PreferenceKeys
œœ* 8
.
œœ8 9#
pbUniqueModeShortcuts
œœ9 N
)
œœN O
;
œœO P!
PreferencesInternal
–– 
.
––  
	DeleteKey
––  )
(
––) *
PreferenceKeys
––* 8
.
––8 9&
pbMaterialEditorFloating
––9 Q
)
––Q R
;
––R S!
PreferencesInternal
—— 
.
——  
	DeleteKey
——  )
(
——) *
PreferenceKeys
——* 8
.
——8 9#
pbShapeWindowFloating
——9 N
)
——N O
;
——O P!
PreferencesInternal
““ 
.
““  
	DeleteKey
““  )
(
““) *
PreferenceKeys
““* 8
.
““8 9
	pbIconGUI
““9 B
)
““B C
;
““C D!
PreferencesInternal
”” 
.
””  
	DeleteKey
””  )
(
””) *
PreferenceKeys
””* 8
.
””8 9!
pbShiftOnlyTooltips
””9 L
)
””L M
;
””M N!
PreferencesInternal
‘‘ 
.
‘‘  
	DeleteKey
‘‘  )
(
‘‘) *
PreferenceKeys
‘‘* 8
.
‘‘8 9
pbDrawAxisLines
‘‘9 H
)
‘‘H I
;
‘‘I J!
PreferencesInternal
’’ 
.
’’  
	DeleteKey
’’  )
(
’’) *
PreferenceKeys
’’* 8
.
’’8 9(
pbElementSelectIsHamFisted
’’9 S
)
’’S T
;
’’T U!
PreferencesInternal
÷÷ 
.
÷÷  
	DeleteKey
÷÷  )
(
÷÷) *
PreferenceKeys
÷÷* 8
.
÷÷8 9%
pbCollapseVertexToFirst
÷÷9 P
)
÷÷P Q
;
÷÷Q R!
PreferencesInternal
◊◊ 
.
◊◊  
	DeleteKey
◊◊  )
(
◊◊) *
PreferenceKeys
◊◊* 8
.
◊◊8 9
pbMeshesAreAssets
◊◊9 J
)
◊◊J K
;
◊◊K L!
PreferencesInternal
ÿÿ 
.
ÿÿ  
	DeleteKey
ÿÿ  )
(
ÿÿ) *
PreferenceKeys
ÿÿ* 8
.
ÿÿ8 9&
pbDragSelectWholeElement
ÿÿ9 Q
)
ÿÿQ R
;
ÿÿR S!
PreferencesInternal
ŸŸ 
.
ŸŸ  
	DeleteKey
ŸŸ  )
(
ŸŸ) *
PreferenceKeys
ŸŸ* 8
.
ŸŸ8 9"
pbEnableExperimental
ŸŸ9 M
)
ŸŸM N
;
ŸŸN O!
PreferencesInternal
⁄⁄ 
.
⁄⁄  
	DeleteKey
⁄⁄  )
(
⁄⁄) *
PreferenceKeys
⁄⁄* 8
.
⁄⁄8 9)
pbFillHoleSelectsEntirePath
⁄⁄9 T
)
⁄⁄T U
;
⁄⁄U V!
PreferencesInternal
€€ 
.
€€  
	DeleteKey
€€  )
(
€€) *
PreferenceKeys
€€* 8
.
€€8 9!
pbDetachToNewObject
€€9 L
)
€€L M
;
€€M N!
PreferencesInternal
‹‹ 
.
‹‹  
	DeleteKey
‹‹  )
(
‹‹) *
PreferenceKeys
‹‹* 8
.
‹‹8 9
pbPreserveFaces
‹‹9 H
)
‹‹H I
;
‹‹I J!
PreferencesInternal
›› 
.
››  
	DeleteKey
››  )
(
››) *
PreferenceKeys
››* 8
.
››8 9 
pbVertexHandleSize
››9 K
)
››K L
;
››L M!
PreferencesInternal
ﬁﬁ 
.
ﬁﬁ  
	DeleteKey
ﬁﬁ  )
(
ﬁﬁ) *
PreferenceKeys
ﬁﬁ* 8
.
ﬁﬁ8 9
pbUVGridSnapValue
ﬁﬁ9 J
)
ﬁﬁJ K
;
ﬁﬁK L!
PreferencesInternal
ﬂﬂ 
.
ﬂﬂ  
	DeleteKey
ﬂﬂ  )
(
ﬂﬂ) *
PreferenceKeys
ﬂﬂ* 8
.
ﬂﬂ8 9
pbUVWeldDistance
ﬂﬂ9 I
)
ﬂﬂI J
;
ﬂﬂJ K!
PreferencesInternal
‡‡ 
.
‡‡  
	DeleteKey
‡‡  )
(
‡‡) *
PreferenceKeys
‡‡* 8
.
‡‡8 9
pbWeldDistance
‡‡9 G
)
‡‡G H
;
‡‡H I!
PreferencesInternal
·· 
.
··  
	DeleteKey
··  )
(
··) *
PreferenceKeys
··* 8
.
··8 9
pbExtrudeDistance
··9 J
)
··J K
;
··K L!
PreferencesInternal
‚‚ 
.
‚‚  
	DeleteKey
‚‚  )
(
‚‚) *
PreferenceKeys
‚‚* 8
.
‚‚8 9
pbBevelAmount
‚‚9 F
)
‚‚F G
;
‚‚G H!
PreferencesInternal
„„ 
.
„„  
	DeleteKey
„„  )
(
„„) *
PreferenceKeys
„„* 8
.
„„8 9 
pbEdgeSubdivisions
„„9 K
)
„„K L
;
„„L M!
PreferencesInternal
‰‰ 
.
‰‰  
	DeleteKey
‰‰  )
(
‰‰) *
PreferenceKeys
‰‰* 8
.
‰‰8 9 
pbDefaultShortcuts
‰‰9 K
)
‰‰K L
;
‰‰L M!
PreferencesInternal
ÂÂ 
.
ÂÂ  
	DeleteKey
ÂÂ  )
(
ÂÂ) *
PreferenceKeys
ÂÂ* 8
.
ÂÂ8 9
pbDefaultMaterial
ÂÂ9 J
)
ÂÂJ K
;
ÂÂK L!
PreferencesInternal
ÊÊ 
.
ÊÊ  
	DeleteKey
ÊÊ  )
(
ÊÊ) *
PreferenceKeys
ÊÊ* 8
.
ÊÊ8 9'
pbGrowSelectionUsingAngle
ÊÊ9 R
)
ÊÊR S
;
ÊÊS T!
PreferencesInternal
ÁÁ 
.
ÁÁ  
	DeleteKey
ÁÁ  )
(
ÁÁ) *
PreferenceKeys
ÁÁ* 8
.
ÁÁ8 9"
pbGrowSelectionAngle
ÁÁ9 M
)
ÁÁM N
;
ÁÁN O!
PreferencesInternal
ËË 
.
ËË  
	DeleteKey
ËË  )
(
ËË) *
PreferenceKeys
ËË* 8
.
ËË8 9+
pbGrowSelectionAngleIterative
ËË9 V
)
ËËV W
;
ËËW X!
PreferencesInternal
ÈÈ 
.
ÈÈ  
	DeleteKey
ÈÈ  )
(
ÈÈ) *
PreferenceKeys
ÈÈ* 8
.
ÈÈ8 9
pbShowDetail
ÈÈ9 E
)
ÈÈE F
;
ÈÈF G!
PreferencesInternal
ÍÍ 
.
ÍÍ  
	DeleteKey
ÍÍ  )
(
ÍÍ) *
PreferenceKeys
ÍÍ* 8
.
ÍÍ8 9
pbShowOccluder
ÍÍ9 G
)
ÍÍG H
;
ÍÍH I!
PreferencesInternal
ÎÎ 
.
ÎÎ  
	DeleteKey
ÎÎ  )
(
ÎÎ) *
PreferenceKeys
ÎÎ* 8
.
ÎÎ8 9
pbShowMover
ÎÎ9 D
)
ÎÎD E
;
ÎÎE F!
PreferencesInternal
ÏÏ 
.
ÏÏ  
	DeleteKey
ÏÏ  )
(
ÏÏ) *
PreferenceKeys
ÏÏ* 8
.
ÏÏ8 9
pbShowCollider
ÏÏ9 G
)
ÏÏG H
;
ÏÏH I!
PreferencesInternal
ÌÌ 
.
ÌÌ  
	DeleteKey
ÌÌ  )
(
ÌÌ) *
PreferenceKeys
ÌÌ* 8
.
ÌÌ8 9
pbShowTrigger
ÌÌ9 F
)
ÌÌF G
;
ÌÌG H!
PreferencesInternal
ÓÓ 
.
ÓÓ  
	DeleteKey
ÓÓ  )
(
ÓÓ) *
PreferenceKeys
ÓÓ* 8
.
ÓÓ8 9
pbShowNoDraw
ÓÓ9 E
)
ÓÓE F
;
ÓÓF G!
PreferencesInternal
ÔÔ 
.
ÔÔ  
	DeleteKey
ÔÔ  )
(
ÔÔ) *
PreferenceKeys
ÔÔ* 8
.
ÔÔ8 9,
pbShowMissingLightmapUvWarning
ÔÔ9 W
)
ÔÔW X
;
ÔÔX Y!
PreferencesInternal
 
.
  
	DeleteKey
  )
(
) *
PreferenceKeys
* 8
.
8 9,
pbManageLightmappingStaticFlag
9 W
)
W X
;
X Y!
PreferencesInternal
ÒÒ 
.
ÒÒ  
	DeleteKey
ÒÒ  )
(
ÒÒ) *
PreferenceKeys
ÒÒ* 8
.
ÒÒ8 9!
pbShadowCastingMode
ÒÒ9 L
)
ÒÒL M
;
ÒÒM N!
PreferencesInternal
ÚÚ 
.
ÚÚ  
	DeleteKey
ÚÚ  )
(
ÚÚ) *
PreferenceKeys
ÚÚ* 8
.
ÚÚ8 9"
pbDefaultStaticFlags
ÚÚ9 M
)
ÚÚM N
;
ÚÚN O!
PreferencesInternal
ÛÛ 
.
ÛÛ  
	DeleteKey
ÛÛ  )
(
ÛÛ) *
PreferenceKeys
ÛÛ* 8
.
ÛÛ8 9)
pbShowPreselectionHighlight
ÛÛ9 T
)
ÛÛT U
;
ÛÛU V!
PreferencesInternal
ıı 
.
ıı  
	DeleteKey
ıı  )
(
ıı) *
$str
ıı* L
)
ııL M
;
ııM N!
PreferencesInternal
ˆˆ 
.
ˆˆ  
	DeleteKey
ˆˆ  )
(
ˆˆ) *
$str
ˆˆ* C
)
ˆˆC D
;
ˆˆD E!
PreferencesInternal
˜˜ 
.
˜˜  
	DeleteKey
˜˜  )
(
˜˜) *
$str
˜˜* C
)
˜˜C D
;
˜˜D E!
PreferencesInternal
¯¯ 
.
¯¯  
	DeleteKey
¯¯  )
(
¯¯) *
$str
¯¯* I
)
¯¯I J
;
¯¯J K!
PreferencesInternal
˘˘ 
.
˘˘  
	DeleteKey
˘˘  )
(
˘˘) *
$str
˘˘* O
)
˘˘O P
;
˘˘P Q!
PreferencesInternal
˙˙ 
.
˙˙  
	DeleteKey
˙˙  )
(
˙˙) *
$str
˙˙* B
)
˙˙B C
;
˙˙C D!
PreferencesInternal
˚˚ 
.
˚˚  
	DeleteKey
˚˚  )
(
˚˚) *
$str
˚˚* A
)
˚˚A B
;
˚˚B C!
PreferencesInternal
¸¸ 
.
¸¸  
	DeleteKey
¸¸  )
(
¸¸) *
$str
¸¸* <
)
¸¸< =
;
¸¸= >!
PreferencesInternal
˝˝ 
.
˝˝  
	DeleteKey
˝˝  )
(
˝˝) *
$str
˝˝* >
)
˝˝> ?
;
˝˝? @!
PreferencesInternal
˛˛ 
.
˛˛  
	DeleteKey
˛˛  )
(
˛˛) *
$str
˛˛* R
)
˛˛R S
;
˛˛S T!
PreferencesInternal
ˇˇ 
.
ˇˇ  
	DeleteKey
ˇˇ  )
(
ˇˇ) *
$str
ˇˇ* R
)
ˇˇR S
;
ˇˇS T!
PreferencesInternal
ÄÄ 
.
ÄÄ  
	DeleteKey
ÄÄ  )
(
ÄÄ) *
$str
ÄÄ* R
)
ÄÄR S
;
ÄÄS T!
PreferencesInternal
ÅÅ 
.
ÅÅ  
	DeleteKey
ÅÅ  )
(
ÅÅ) *
$str
ÅÅ* U
)
ÅÅU V
;
ÅÅV W!
PreferencesInternal
ÇÇ 
.
ÇÇ  
	DeleteKey
ÇÇ  )
(
ÇÇ) *
$str
ÇÇ* T
)
ÇÇT U
;
ÇÇU V!
PreferencesInternal
ÑÑ 
.
ÑÑ  
	DeleteKey
ÑÑ  )
(
ÑÑ) *
$str
ÑÑ* A
)
ÑÑA B
;
ÑÑB C!
PreferencesInternal
ÖÖ 
.
ÖÖ  
	DeleteKey
ÖÖ  )
(
ÖÖ) *
$str
ÖÖ* =
)
ÖÖ= >
;
ÖÖ> ?!
PreferencesInternal
ÜÜ 
.
ÜÜ  
	DeleteKey
ÜÜ  )
(
ÜÜ) *
$str
ÜÜ* ;
)
ÜÜ; <
;
ÜÜ< =!
PreferencesInternal
áá 
.
áá  
	DeleteKey
áá  )
(
áá) *
$str
áá* B
)
ááB C
;
ááC D!
PreferencesInternal
àà 
.
àà  
	DeleteKey
àà  )
(
àà) *
$str
àà* ?
)
àà? @
;
àà@ A!
PreferencesInternal
ââ 
.
ââ  
	DeleteKey
ââ  )
(
ââ) *
$str
ââ* C
)
ââC D
;
ââD E!
PreferencesInternal
ää 
.
ää  
	DeleteKey
ää  )
(
ää) *
$str
ää* C
)
ääC D
;
ääD E!
PreferencesInternal
ãã 
.
ãã  
	DeleteKey
ãã  )
(
ãã) *
$str
ãã* C
)
ããC D
;
ããD E!
PreferencesInternal
åå 
.
åå  
	DeleteKey
åå  )
(
åå) *
$str
åå* 6
)
åå6 7
;
åå7 8!
PreferencesInternal
çç 
.
çç  
	DeleteKey
çç  )
(
çç) *
$str
çç* 7
)
çç7 8
;
çç8 9!
PreferencesInternal
éé 
.
éé  
	DeleteKey
éé  )
(
éé) *
$str
éé* D
)
ééD E
;
ééE F!
PreferencesInternal
èè 
.
èè  
	DeleteKey
èè  )
(
èè) *
$str
èè* ?
)
èè? @
;
èè@ A!
PreferencesInternal
êê 
.
êê  
	DeleteKey
êê  )
(
êê) *
$str
êê* 6
)
êê6 7
;
êê7 8!
PreferencesInternal
ëë 
.
ëë  
	DeleteKey
ëë  )
(
ëë) *
$str
ëë* 6
)
ëë6 7
;
ëë7 8
}
ìì 	
}
îî 
}ïï æ
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\SelectionUtility.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
static 

class 
SelectionUtility !
{ 
public 
static 
void 
Remove !
(! "
ProBuilderMesh" 0
pb1 3
)3 4
{ 	
if 
( 
pb 
== 
null 
) 
return 
; 
	Selection 
. 
objects 
= 
	Selection  )
.) *
objects* 1
.1 2
Where2 7
(7 8
x8 9
=>: <
!= >"
ObjectMatchesComponent> T
(T U
xU V
,V W
pbX Z
)Z [
)[ \
.\ ]
ToArray] d
(d e
)e f
;f g
} 	
static 
bool "
ObjectMatchesComponent *
(* +
Object+ 1
o2 3
,3 4
	Component5 >
c? @
)@ A
{ 	
if 
( 
o 
is 

GameObject 
)  
{ 

GameObject 
g 
= 
(  

GameObject  *
)* +
o+ ,
;, -
return 
g 
. 
GetComponent %
(% &
c& '
.' (
GetType( /
(/ 0
)0 1
)1 2
==3 5
c6 7
;7 8
}   
if"" 
("" 
o"" 
is"" 
	Component"" 
)"" 
return## 
o## 
as## 
	Component## %
==##& (
c##) *
;##* +
return%% 
false%% 
;%% 
}&& 	
}'' 
}(( £¡
ìD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\EditorUtility.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
public 

static 
class 
EditorUtility %
{ 
const 
float )
k_DefaultNotificationDuration 1
=2 3
$num4 6
;6 7
static 
float 
s_NotificationTimer (
;( )
static 
EditorWindow  
s_NotificationWindow 0
;0 1
static 
bool %
s_IsNotificationDisplayed -
;- .
[ 	
UserSetting	 
( 
$str 
, 
$str  ;
,; <
$str= }
)} ~
]~ 
static 
Pref 
< 
bool 
> 
s_ShowNotifications -
=. /
new0 3
Pref4 8
<8 9
bool9 =
>= >
(> ?
$str? _
,_ `
falsea f
)f g
;g h
[   	
UserSetting  	 
(   
$str   $
,  $ %
$str  & ;
,  ; <
$str  = k
)  k l
]  l m
static!! 
Pref!! 
<!! 
StaticEditorFlags!! %
>!!% &
s_StaticEditorFlags!!' :
=!!; <
new!!= @
Pref!!A E
<!!E F
StaticEditorFlags!!F W
>!!W X
(!!X Y
$str!!Y x
,!!x y
$num!!z {
)!!{ |
;!!| }
[## 	
UserSetting##	 
(## 
$str## $
,##$ %
$str##& ?
,##? @
$str	##A ú
)
##ú ù
]
##ù û
static$$ 
Pref$$ 
<$$ 
bool$$ 
>$$ "
s_MeshColliderIsConvex$$ 0
=$$1 2
new$$3 6
Pref$$7 ;
<$$; <
bool$$< @
>$$@ A
($$A B
$str$$B ]
,$$] ^
false$$_ d
)$$d e
;$$e f
[&& 	
UserSetting&&	 
(&& 
$str&& $
,&&$ %
$str&&& 6
,&&6 7
$str&&8 h
)&&h i
]&&i j
static'' 
Pref'' 
<'' 
PivotLocation'' !
>''! "$
s_NewShapesPivotAtVertex''# ;
=''< =
new''> A
Pref''B F
<''F G
PivotLocation''G T
>''T U
(''U V
$str''V r
,''r s
PivotLocation	''t Å
.
''Å Ç
FirstVertex
''Ç ç
)
''ç é
;
''é è
[)) 	
UserSetting))	 
()) 
$str)) $
,))$ %
$str))& >
,))> ?
$str	))@ Ç
)
))Ç É
]
))É Ñ
static** 
Pref** 
<** 
bool** 
>** !
s_SnapNewShapesToGrid** /
=**0 1
new**2 5
Pref**6 :
<**: ;
bool**; ?
>**? @
(**@ A
$str**A [
,**[ \
true**] a
)**a b
;**b c
[,, 	
UserSetting,,	 
(,, 
$str,, $
,,,$ %
$str,,& ;
,,,; <
$str	,,= Å
)
,,Å Ç
]
,,Ç É
static-- 
Pref-- 
<-- 
ShadowCastingMode-- %
>--% &
s_ShadowCastingMode--' :
=--; <
new--= @
Pref--A E
<--E F
ShadowCastingMode--F W
>--W X
(--X Y
$str--Y q
,--q r
ShadowCastingMode	--s Ñ
.
--Ñ Ö
On
--Ö á
)
--á à
;
--à â
[// 	
UserSetting//	 
(// 
$str// $
,//$ %
$str//& 5
,//5 6
$str//7 f
)//f g
]//g h
static00 
Pref00 
<00 
ColliderType00  
>00  !
s_ColliderType00" 0
=001 2
new003 6
Pref007 ;
<00; <
ColliderType00< H
>00H I
(00I J
$str00J e
,00e f
ColliderType00g s
.00s t
MeshCollider	00t Ä
)
00Ä Å
;
00Å Ç
internal22 
static22 
PivotLocation22 %!
newShapePivotLocation22& ;
{33 	
get44 
{44 
return44 $
s_NewShapesPivotAtVertex44 1
;441 2
}443 4
}55 	
public== 
static== 
event== 
Action== "
<==" #
ProBuilderMesh==# 1
>==1 2
meshCreated==3 >
===? @
null==A E
;==E F
internalDD 
staticDD 
voidDD #
SetSelectionRenderStateDD 4
(DD4 5
RendererDD5 =
rendererDD> F
,DDF G%
EditorSelectedRenderStateDDH a
stateDDb g
)DDg h
{EE 	
UnityEditorFF 
.FF 
EditorUtilityFF %
.FF% &"
SetSelectedRenderStateFF& <
(FF< =
rendererFF= E
,FFE F
stateFFG L
)FFL M
;FFM N
}GG 	
internalII 
staticII 
voidII 
ShowNotificationII -
(II- .
ActionResultII. :
resultII; A
)IIA B
{JJ 	
ShowNotificationKK 
(KK 
resultKK #
.KK# $
notificationKK$ 0
)KK0 1
;KK1 2
}LL 	
internalSS 
staticSS 
voidSS 
ShowNotificationSS -
(SS- .
stringSS. 4
messageSS5 <
)SS< =
{TT 	
	SceneViewUU 
scnviewUU 
=UU 
	SceneViewUU  )
.UU) *
lastActiveSceneViewUU* =
;UU= >
ifVV 
(VV 
scnviewVV 
==VV 
nullVV 
)VV  
scnviewWW 
=WW 
EditorWindowWW &
.WW& '
	GetWindowWW' 0
<WW0 1
	SceneViewWW1 :
>WW: ;
(WW; <
)WW< =
;WW= >
ShowNotificationYY 
(YY 
scnviewYY $
,YY$ %
messageYY& -
)YY- .
;YY. /
}ZZ 	
internal`` 
static`` 
void`` 
ShowNotification`` -
(``- .
EditorWindow``. :
window``; A
,``A B
string``C I
message``J Q
)``Q R
{aa 	
ifbb 
(bb 
!bb 
s_ShowNotificationsbb $
)bb$ %
returncc 
;cc 
ifee 
(ee 
windowee 
==ee 
nullee 
)ee 
throwff 
newff !
ArgumentNullExceptionff /
(ff/ 0
$strff0 8
)ff8 9
;ff9 :
windowhh 
.hh 
ShowNotificationhh #
(hh# $
newhh$ '

GUIContenthh( 2
(hh2 3
messagehh3 :
,hh: ;
$strhh< >
)hh> ?
)hh? @
;hh@ A
windowii 
.ii 
Repaintii 
(ii 
)ii 
;ii 
ifkk 
(kk 
EditorApplicationkk !
.kk! "
updatekk" (
!=kk) +
NotifUpdatekk, 7
)kk7 8
EditorApplicationll !
.ll! "
updatell" (
+=ll) +
NotifUpdatell, 7
;ll7 8
s_NotificationTimernn 
=nn  !
Timenn" &
.nn& ' 
realtimeSinceStartupnn' ;
+nn< =)
k_DefaultNotificationDurationnn> [
;nn[ \ 
s_NotificationWindowoo  
=oo! "
windowoo# )
;oo) *%
s_IsNotificationDisplayedpp %
=pp& '
truepp( ,
;pp, -
}qq 	
internalxx 
staticxx 
voidxx 
RemoveNotificationxx /
(xx/ 0
EditorWindowxx0 <
windowxx= C
)xxC D
{yy 	
ifzz 
(zz 
windowzz 
==zz 
nullzz 
)zz 
throw{{ 
new{{ !
ArgumentNullException{{ /
({{/ 0
$str{{0 8
){{8 9
;{{9 :
EditorApplication}} 
.}} 
update}} $
-=}}% '
NotifUpdate}}( 3
;}}3 4
window 
. 
RemoveNotification %
(% &
)& '
;' (
window
ÄÄ 
.
ÄÄ 
Repaint
ÄÄ 
(
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
static
ÉÉ 
void
ÉÉ 
NotifUpdate
ÉÉ 
(
ÉÉ  
)
ÉÉ  !
{
ÑÑ 	
if
ÖÖ 
(
ÖÖ '
s_IsNotificationDisplayed
ÖÖ )
&&
ÖÖ* ,
Time
ÖÖ- 1
.
ÖÖ1 2"
realtimeSinceStartup
ÖÖ2 F
>
ÖÖG H!
s_NotificationTimer
ÖÖI \
)
ÖÖ\ ]
{
ÜÜ '
s_IsNotificationDisplayed
áá )
=
áá* +
false
áá, 1
;
áá1 2 
RemoveNotification
àà "
(
àà" #"
s_NotificationWindow
àà# 7
)
àà7 8
;
àà8 9
}
ââ 
}
ää 	
internal
åå 
static
åå 
bool
åå 
IsPrefab
åå %
(
åå% &
ProBuilderMesh
åå& 4
mesh
åå5 9
)
åå9 :
{
çç 	
return
èè 
PrefabUtility
èè  
.
èè  ! 
GetPrefabAssetType
èè! 3
(
èè3 4
mesh
èè4 8
.
èè8 9

gameObject
èè9 C
)
èèC D
!=
èèE G
PrefabAssetType
èèH W
.
èèW X

NotAPrefab
èèX b
;
èèb c
}
îî 	
internal
õõ 
static
õõ 
bool
õõ 
IsPrefabInstance
õõ -
(
õõ- .

GameObject
õõ. 8
go
õõ9 ;
)
õõ; <
{
úú 	
var
ûû 
status
ûû 
=
ûû 
PrefabUtility
ûû &
.
ûû& '%
GetPrefabInstanceStatus
ûû' >
(
ûû> ?
go
ûû? A
)
ûûA B
;
ûûB C
return
üü 
status
üü 
==
üü "
PrefabInstanceStatus
üü 1
.
üü1 2
	Connected
üü2 ;
||
üü< >
status
üü? E
==
üüF H"
PrefabInstanceStatus
üüI ]
.
üü] ^
Disconnected
üü^ j
;
üüj k
}
££ 	
internal
®® 
static
®® 
bool
®® 
IsPrefabAsset
®® *
(
®®* +

GameObject
®®+ 5
go
®®6 8
)
®®8 9
{
©© 	
return
´´ 
PrefabUtility
´´  
.
´´  !!
IsPartOfPrefabAsset
´´! 4
(
´´4 5
go
´´5 7
)
´´7 8
;
´´8 9
}
ØØ 	
internal
¥¥ 
static
¥¥ 
bool
¥¥ $
AssetStoreWindowIsOpen
¥¥ 3
(
¥¥3 4
)
¥¥4 5
{
µµ 	
return
∂∂ 
	Resources
∂∂ 
.
∂∂ "
FindObjectsOfTypeAll
∂∂ 1
<
∂∂1 2
EditorWindow
∂∂2 >
>
∂∂> ?
(
∂∂? @
)
∂∂@ A
.
∂∂A B
Any
∂∂B E
(
∂∂E F
x
∂∂F G
=>
∂∂H J
x
∂∂K L
.
∂∂L M
GetType
∂∂M T
(
∂∂T U
)
∂∂U V
.
∂∂V W
ToString
∂∂W _
(
∂∂_ `
)
∂∂` a
.
∂∂a b
Contains
∂∂b j
(
∂∂j k
$str
∂∂k }
)
∂∂} ~
)
∂∂~ 
;∂∂ Ä
}
∑∑ 	
public
ææ 
static
ææ 
void
ææ '
SynchronizeWithMeshFilter
ææ 4
(
ææ4 5
ProBuilderMesh
ææ5 C
mesh
ææD H
)
ææH I
{
øø 	
if
¿¿ 
(
¿¿ 
mesh
¿¿ 
==
¿¿ 
null
¿¿ 
)
¿¿ 
throw
¡¡ 
new
¡¡ #
ArgumentNullException
¡¡ /
(
¡¡/ 0
$str
¡¡0 6
)
¡¡6 7
;
¡¡7 8
mesh
√√ 
.
√√ (
EnsureMeshFilterIsAssigned
√√ +
(
√√+ ,
)
√√, -
;
√√- .
mesh
ƒƒ 
.
ƒƒ *
EnsureMeshColliderIsAssigned
ƒƒ -
(
ƒƒ- .
)
ƒƒ. /
;
ƒƒ/ 0
MeshSyncState
≈≈ 
state
≈≈ 
=
≈≈  !
mesh
≈≈" &
.
≈≈& '
meshSyncState
≈≈' 4
;
≈≈4 5
bool
∆∆ 
meshesAreAssets
∆∆  
=
∆∆! "
Experimental
∆∆# /
.
∆∆/ 0
meshesAreAssets
∆∆0 ?
;
∆∆? @
if
»» 
(
»» 
state
»» 
!=
»» 
MeshSyncState
»» &
.
»»& '
InSync
»»' -
)
»»- .
{
…… 
Mesh
   
oldMesh
   
;
   
if
ÃÃ 
(
ÃÃ 
state
ÃÃ 
==
ÃÃ 
MeshSyncState
ÃÃ *
.
ÃÃ* +
Null
ÃÃ+ /
)
ÃÃ/ 0
{
ÕÕ 
mesh
ŒŒ 
.
ŒŒ 
Rebuild
ŒŒ  
(
ŒŒ  !
)
ŒŒ! "
;
ŒŒ" #
mesh
œœ 
.
œœ 
Optimize
œœ !
(
œœ! "
)
œœ" #
;
œœ# $
}
–– 
else
—— 
if
÷÷ 
(
÷÷ 
(
÷÷ 
oldMesh
÷÷ 
=
÷÷ 
mesh
÷÷ #
.
÷÷# $
mesh
÷÷$ (
)
÷÷( )
!=
÷÷* ,
null
÷÷- 1
)
÷÷1 2
{
◊◊ 
int
ÿÿ 
meshNo
ÿÿ 
=
ÿÿ  
-
ÿÿ! "
$num
ÿÿ" #
;
ÿÿ# $
int
ŸŸ 
.
ŸŸ 
TryParse
ŸŸ  
(
ŸŸ  !
oldMesh
ŸŸ! (
.
ŸŸ( )
name
ŸŸ) -
.
ŸŸ- .
Replace
ŸŸ. 5
(
ŸŸ5 6
$str
ŸŸ6 ?
,
ŸŸ? @
$str
ŸŸA C
)
ŸŸC D
,
ŸŸD E
out
ŸŸF I
meshNo
ŸŸJ P
)
ŸŸP Q
;
ŸŸQ R
UnityEngine
€€ 
.
€€  
Object
€€  &
dup
€€' *
=
€€+ ,
UnityEditor
€€- 8
.
€€8 9
EditorUtility
€€9 F
.
€€F G 
InstanceIDToObject
€€G Y
(
€€Y Z
meshNo
€€Z `
)
€€` a
;
€€a b

GameObject
‹‹ 
go
‹‹ !
=
‹‹" #
dup
‹‹$ '
as
‹‹( *

GameObject
‹‹+ 5
;
‹‹5 6
if
ﬂﬂ 
(
ﬂﬂ 
go
ﬂﬂ 
==
ﬂﬂ 
null
ﬂﬂ "
)
ﬂﬂ" #
{
‡‡ 
mesh
·· 
.
·· 
mesh
·· !
.
··! "
name
··" &
=
··' (
$str
··) 2
+
··3 4
mesh
··5 9
.
··9 :
id
··: <
;
··< =
}
‚‚ 
else
„„ 
{
‰‰ 
if
ÊÊ 
(
ÊÊ 
!
ÊÊ 
meshesAreAssets
ÊÊ ,
||
ÊÊ- /
!
ÊÊ0 1
(
ÊÊ1 2
IsPrefabAsset
ÊÊ2 ?
(
ÊÊ? @
mesh
ÊÊ@ D
.
ÊÊD E

gameObject
ÊÊE O
)
ÊÊO P
||
ÊÊQ S
IsPrefabInstance
ÊÊT d
(
ÊÊd e
mesh
ÊÊe i
.
ÊÊi j

gameObject
ÊÊj t
)
ÊÊt u
)
ÊÊu v
)
ÊÊv w
{
ÁÁ 
mesh
ÈÈ  
.
ÈÈ  !

MakeUnique
ÈÈ! +
(
ÈÈ+ ,
)
ÈÈ, -
;
ÈÈ- .
mesh
ÍÍ  
.
ÍÍ  !
Optimize
ÍÍ! )
(
ÍÍ) *
)
ÍÍ* +
;
ÍÍ+ ,
}
ÎÎ 
}
ÏÏ 
}
ÌÌ 
else
ÓÓ 
{
ÔÔ 
if
ÒÒ 
(
ÒÒ 
IsPrefabAsset
ÒÒ %
(
ÒÒ% &
mesh
ÒÒ& *
.
ÒÒ* +

gameObject
ÒÒ+ 5
)
ÒÒ5 6
)
ÒÒ6 7
mesh
ÚÚ 
.
ÚÚ 
mesh
ÚÚ !
.
ÚÚ! "
	hideFlags
ÚÚ" +
=
ÚÚ, -
(
ÚÚ. /
	HideFlags
ÚÚ/ 8
)
ÚÚ8 9
(
ÚÚ9 :
$num
ÚÚ: ;
|
ÚÚ< =
$num
ÚÚ> ?
|
ÚÚ@ A
$num
ÚÚB C
|
ÚÚD E
$num
ÚÚF G
)
ÚÚG H
;
ÚÚH I
mesh
ÙÙ 
.
ÙÙ 
Optimize
ÙÙ !
(
ÙÙ! "
)
ÙÙ" #
;
ÙÙ# $
}
ıı 
}
ˆˆ 
else
˜˜ 
{
¯¯ 
if
˘˘ 
(
˘˘ 
meshesAreAssets
˘˘ #
)
˘˘# $
EditorMeshUtility
˙˙ %
.
˙˙% &
TryCacheMesh
˙˙& 2
(
˙˙2 3
mesh
˙˙3 7
)
˙˙7 8
;
˙˙8 9
}
˚˚ 
}
¸¸ 	
internal
ÑÑ 
static
ÑÑ 
bool
ÑÑ 
HasStaticFlag
ÑÑ *
(
ÑÑ* +
this
ÑÑ+ /

GameObject
ÑÑ0 :
go
ÑÑ; =
,
ÑÑ= >
StaticEditorFlags
ÑÑ? P
flags
ÑÑQ V
)
ÑÑV W
{
ÖÖ 	
return
ÜÜ 
(
ÜÜ 
GameObjectUtility
ÜÜ %
.
ÜÜ% &"
GetStaticEditorFlags
ÜÜ& :
(
ÜÜ: ;
go
ÜÜ; =
)
ÜÜ= >
&
ÜÜ? @
flags
ÜÜA F
)
ÜÜF G
==
ÜÜH J
flags
ÜÜK P
;
ÜÜP Q
}
áá 	
internal
çç 
static
çç 
void
çç 
MoveToActiveScene
çç .
(
çç. /

GameObject
çç/ 9

gameObject
çç: D
)
ççD E
{
éé 	
var
èè 
prefabStage
èè 
=
èè  
PrefabStageUtility
èè 0
.
èè0 1#
GetCurrentPrefabStage
èè1 F
(
èèF G
)
èèG H
;
èèH I
var
êê 
activeScene
êê 
=
êê 
SceneManager
êê *
.
êê* +
GetActiveScene
êê+ 9
(
êê9 :
)
êê: ;
;
êê; <
if
íí 
(
íí 
prefabStage
íí 
!=
íí 
null
íí #
)
íí# $
{
ìì 
if
îî 
(
îî 

gameObject
îî 
.
îî 
scene
îî $
!=
îî% '
prefabStage
îî( 3
.
îî3 4
scene
îî4 9
)
îî9 :
{
ïï 
SceneManager
ññ  
.
ññ  !#
MoveGameObjectToScene
ññ! 6
(
ññ6 7

gameObject
ññ7 A
,
ññA B
prefabStage
ññC N
.
ññN O
scene
ññO T
)
ññT U
;
ññU V

gameObject
ôô 
.
ôô 
	transform
ôô (
.
ôô( )
	SetParent
ôô) 2
(
ôô2 3
prefabStage
ôô3 >
.
ôô> ? 
prefabContentsRoot
ôô? Q
.
ôôQ R
	transform
ôôR [
,
ôô[ \
true
ôô] a
)
ôôa b
;
ôôb c
}
öö 
}
õõ 
else
úú 
if
úú 
(
úú 

gameObject
úú 
.
úú 
scene
úú $
!=
úú% '
activeScene
úú( 3
)
úú3 4
{
ùù 

gameObject
ûû 
.
ûû 
	transform
ûû $
.
ûû$ %
	SetParent
ûû% .
(
ûû. /
null
ûû/ 3
)
ûû3 4
;
ûû4 5
SceneManager
üü 
.
üü #
MoveGameObjectToScene
üü 2
(
üü2 3

gameObject
üü3 =
,
üü= >
activeScene
üü? J
)
üüJ K
;
üüK L
}
†† 
}
°° 	
internal
ßß 
static
ßß 
void
ßß 

InitObject
ßß '
(
ßß' (
ProBuilderMesh
ßß( 6
pb
ßß7 9
)
ßß9 :
{
®® 	
MoveToActiveScene
©© 
(
©© 
pb
©©  
.
©©  !

gameObject
©©! +
)
©©+ ,
;
©©, -
GameObjectUtility
™™ 
.
™™ (
EnsureUniqueNameForSibling
™™ 8
(
™™8 9
pb
™™9 ;
.
™™; <

gameObject
™™< F
)
™™F G
;
™™G H
ScreenCenter
´´ 
(
´´ 
pb
´´ 
.
´´ 

gameObject
´´ &
)
´´& '
;
´´' (%
SetPivotLocationAndSnap
¨¨ #
(
¨¨# $
pb
¨¨$ &
)
¨¨& '
;
¨¨' (
ComponentUtility
ÆÆ 
.
ÆÆ .
 MoveComponentRelativeToComponent
ÆÆ =
(
ÆÆ= >
pb
ÆÆ> @
,
ÆÆ@ A
pb
ÆÆB D
.
ÆÆD E
	transform
ÆÆE N
,
ÆÆN O
false
ÆÆP U
)
ÆÆU V
;
ÆÆV W
pb
±± 
.
±± 
renderer
±± 
.
±± 
shadowCastingMode
±± )
=
±±* +!
s_ShadowCastingMode
±±, ?
;
±±? @
pb
≤≤ 
.
≤≤ 
renderer
≤≤ 
.
≤≤ 
sharedMaterial
≤≤ &
=
≤≤' (#
EditorMaterialUtility
≤≤) >
.
≤≤> ?
GetUserMaterial
≤≤? N
(
≤≤N O
)
≤≤O P
;
≤≤P Q
GameObjectUtility
¥¥ 
.
¥¥ "
SetStaticEditorFlags
¥¥ 2
(
¥¥2 3
pb
¥¥3 5
.
¥¥5 6

gameObject
¥¥6 @
,
¥¥@ A!
s_StaticEditorFlags
¥¥B U
)
¥¥U V
;
¥¥V W
switch
∂∂ 
(
∂∂ 
s_ColliderType
∂∂ "
.
∂∂" #
value
∂∂# (
)
∂∂( )
{
∑∑ 
case
∏∏ 
ColliderType
∏∏ !
.
∏∏! "
BoxCollider
∏∏" -
:
∏∏- .
if
ππ 
(
ππ 
!
ππ 
pb
ππ 
.
ππ 

gameObject
ππ %
.
ππ% &
TryGetComponent
ππ& 5
<
ππ5 6
BoxCollider
ππ6 A
>
ππA B
(
ππB C
out
ππC F
_
ππG H
)
ππH I
)
ππI J
Undo
∫∫ 
.
∫∫ 
AddComponent
∫∫ )
(
∫∫) *
pb
∫∫* ,
.
∫∫, -

gameObject
∫∫- 7
,
∫∫7 8
typeof
∫∫9 ?
(
∫∫? @
BoxCollider
∫∫@ K
)
∫∫K L
)
∫∫L M
;
∫∫M N
break
ªª 
;
ªª 
case
ΩΩ 
ColliderType
ΩΩ !
.
ΩΩ! "
MeshCollider
ΩΩ" .
:
ΩΩ. /
MeshCollider
ææ  
collider
ææ! )
;
ææ) *
if
øø 
(
øø 
!
øø 
pb
øø 
.
øø 

gameObject
øø &
.
øø& '
TryGetComponent
øø' 6
<
øø6 7
MeshCollider
øø7 C
>
øøC D
(
øøD E
out
øøE H
collider
øøI Q
)
øøQ R
)
øøR S
collider
¿¿  
=
¿¿! "
Undo
¿¿# '
.
¿¿' (
AddComponent
¿¿( 4
<
¿¿4 5
MeshCollider
¿¿5 A
>
¿¿A B
(
¿¿B C
pb
¿¿C E
.
¿¿E F

gameObject
¿¿F P
)
¿¿P Q
;
¿¿Q R
collider
∆∆ 
.
∆∆ 

sharedMesh
∆∆ '
=
∆∆( )
null
∆∆* .
;
∆∆. /
collider
«« 
.
«« 
convex
«« #
=
««$ %$
s_MeshColliderIsConvex
««& <
;
««< =
pb
»» 
.
»» 
Refresh
»» 
(
»» 
RefreshMask
»» *
.
»»* +

Collisions
»»+ 5
)
»»5 6
;
»»6 7
break
…… 
;
…… 
}
   
pb
ÃÃ 
.
ÃÃ 
unwrapParameters
ÃÃ 
=
ÃÃ  !
new
ÃÃ" %
UnwrapParameters
ÃÃ& 6
(
ÃÃ6 7
Lightmapping
ÃÃ7 C
.
ÃÃC D 
s_UnwrapParameters
ÃÃD V
)
ÃÃV W
;
ÃÃW X
pb
ŒŒ 
.
ŒŒ 
Optimize
ŒŒ 
(
ŒŒ 
)
ŒŒ 
;
ŒŒ 
if
–– 
(
–– 
meshCreated
–– 
!=
–– 
null
–– #
)
––# $
meshCreated
—— 
(
—— 
pb
—— 
)
—— 
;
——  
}
““ 	
internal
‘‘ 
static
‘‘ 
void
‘‘ %
SetPivotLocationAndSnap
‘‘ 4
(
‘‘4 5
ProBuilderMesh
‘‘5 C
mesh
‘‘D H
)
‘‘H I
{
’’ 	
if
÷÷ 
(
÷÷ 
ProGridsInterface
÷÷ !
.
÷÷! "
SnapEnabled
÷÷" -
(
÷÷- .
)
÷÷. /
)
÷÷/ 0
mesh
◊◊ 
.
◊◊ 
	transform
◊◊ 
.
◊◊ 
position
◊◊ '
=
◊◊( ) 
ProBuilderSnapping
◊◊* <
.
◊◊< =
	SnapValue
◊◊= F
(
◊◊F G
mesh
◊◊G K
.
◊◊K L
	transform
◊◊L U
.
◊◊U V
position
◊◊V ^
,
◊◊^ _
ProGridsInterface
◊◊` q
.
◊◊q r
	SnapValue
◊◊r {
(
◊◊{ |
)
◊◊| }
)
◊◊} ~
;
◊◊~ 
else
ÿÿ 
if
ÿÿ 
(
ÿÿ #
s_SnapNewShapesToGrid
ÿÿ *
)
ÿÿ* +
mesh
ŸŸ 
.
ŸŸ 
	transform
ŸŸ 
.
ŸŸ 
position
ŸŸ '
=
ŸŸ( ) 
ProBuilderSnapping
ŸŸ* <
.
ŸŸ< =
	SnapValue
ŸŸ= F
(
ŸŸF G
mesh
ŸŸG K
.
ŸŸK L
	transform
ŸŸL U
.
ŸŸU V
position
ŸŸV ^
,
ŸŸ^ _
new
ŸŸ` c
Vector3
ŸŸd k
(
ŸŸk l
EditorPrefs
⁄⁄ '
.
⁄⁄' (
GetFloat
⁄⁄( 0
(
⁄⁄0 1
$str
⁄⁄1 <
)
⁄⁄< =
,
⁄⁄= >
EditorPrefs
€€ '
.
€€' (
GetFloat
€€( 0
(
€€0 1
$str
€€1 <
)
€€< =
,
€€= >
EditorPrefs
‹‹ '
.
‹‹' (
GetFloat
‹‹( 0
(
‹‹0 1
$str
‹‹1 <
)
‹‹< =
)
‹‹= >
)
‹‹> ?
;
‹‹? @
mesh
ﬁﬁ 
.
ﬁﬁ 
Optimize
ﬁﬁ 
(
ﬁﬁ 
)
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 	
internal
‰‰ 
static
‰‰ 
void
‰‰ 
ScreenCenter
‰‰ )
(
‰‰) *

GameObject
‰‰* 4
_gameObject
‰‰5 @
)
‰‰@ A
{
ÂÂ 	
if
ÊÊ 
(
ÊÊ 
_gameObject
ÊÊ 
==
ÊÊ 
null
ÊÊ #
)
ÊÊ# $
return
ÁÁ 
;
ÁÁ 
_gameObject
ÍÍ 
.
ÍÍ 
	transform
ÍÍ !
.
ÍÍ! "
position
ÍÍ" *
=
ÍÍ+ ,

ScenePivot
ÍÍ- 7
(
ÍÍ7 8
)
ÍÍ8 9
;
ÍÍ9 :
	Selection
ÏÏ 
.
ÏÏ 
activeObject
ÏÏ "
=
ÏÏ# $
_gameObject
ÏÏ% 0
;
ÏÏ0 1
}
ÌÌ 	
internal
ÚÚ 
static
ÚÚ 
Vector3
ÚÚ 

ScenePivot
ÚÚ  *
(
ÚÚ* +
)
ÚÚ+ ,
{
ÛÛ 	
return
ÙÙ 
GetSceneView
ÙÙ 
(
ÙÙ  
)
ÙÙ  !
.
ÙÙ! "
pivot
ÙÙ" '
;
ÙÙ' (
}
ıı 	
internal
˙˙ 
static
˙˙ 
	SceneView
˙˙ !
GetSceneView
˙˙" .
(
˙˙. /
)
˙˙/ 0
{
˚˚ 	
return
¸¸ 
	SceneView
¸¸ 
.
¸¸ !
lastActiveSceneView
¸¸ 0
==
¸¸1 3
null
¸¸4 8
?
¸¸9 :
EditorWindow
¸¸; G
.
¸¸G H
	GetWindow
¸¸H Q
<
¸¸Q R
	SceneView
¸¸R [
>
¸¸[ \
(
¸¸\ ]
)
¸¸] ^
:
¸¸_ `
	SceneView
¸¸a j
.
¸¸j k!
lastActiveSceneView
¸¸k ~
;
¸¸~ 
}
˝˝ 	
internal
©© 
static
©© 
bool
©© 
IsUnix
©© #
(
©©# $
)
©©$ %
{
™™ 	
System
´´ 
.
´´ 

PlatformID
´´ 
platform
´´ &
=
´´' (
System
´´) /
.
´´/ 0
Environment
´´0 ;
.
´´; <
	OSVersion
´´< E
.
´´E F
Platform
´´F N
;
´´N O
return
¨¨ 
platform
¨¨ 
==
¨¨ 
System
¨¨ %
.
¨¨% &

PlatformID
¨¨& 0
.
¨¨0 1
MacOSX
¨¨1 7
||
¨¨8 :
platform
≠≠ 
==
≠≠ 
System
≠≠ "
.
≠≠" #

PlatformID
≠≠# -
.
≠≠- .
Unix
≠≠. 2
||
≠≠3 5
(
ÆÆ 
int
ÆÆ 
)
ÆÆ 
platform
ÆÆ 
==
ÆÆ  
$num
ÆÆ! $
;
ÆÆ$ %
}
ØØ 	
internal
¥¥ 
static
¥¥ 
void
¥¥  
CreateCachedEditor
¥¥ /
<
¥¥/ 0
T
¥¥0 1
>
¥¥1 2
(
¥¥2 3
UnityEngine
¥¥3 >
.
¥¥> ?
Object
¥¥? E
[
¥¥E F
]
¥¥F G
targetObjects
¥¥H U
,
¥¥U V
ref
¥¥W Z
UnityEditor
¥¥[ f
.
¥¥f g
Editor
¥¥g m
previousEditor
¥¥n |
)
¥¥| }
where¥¥~ É
T¥¥Ñ Ö
:¥¥Ü á
UnityEditor¥¥à ì
.¥¥ì î
Editor¥¥î ö
{
µµ 	
UnityEditor
øø 
.
øø 
Editor
øø 
.
øø  
CreateCachedEditor
øø 1
(
øø1 2
targetObjects
øø2 ?
,
øø? @
typeof
øøA G
(
øøG H
T
øøH I
)
øøI J
,
øøJ K
ref
øøL O
previousEditor
øøP ^
)
øø^ _
;
øø_ `
}
¡¡ 	
internal
»» 
static
»» 
bool
»» 
IsMeshElementMode
»» .
(
»». /
this
»»/ 3

SelectMode
»»4 >
mode
»»? C
)
»»C D
{
…… 	
return
   
mode
   
.
   
ContainsFlag
   $
(
  $ %

SelectMode
ÀÀ 
.
ÀÀ 
Vertex
ÀÀ !
|
ÃÃ 

SelectMode
ÃÃ 
.
ÃÃ 
Edge
ÃÃ !
|
ÕÕ 

SelectMode
ÕÕ 
.
ÕÕ 
Face
ÕÕ !
|
ŒŒ 

SelectMode
ŒŒ 
.
ŒŒ 
TextureEdge
ŒŒ (
|
œœ 

SelectMode
œœ 
.
œœ 
TextureFace
œœ (
|
–– 

SelectMode
–– 
.
–– 
TextureVertex
–– *
)
—— 
;
—— 
}
““ 	
internal
‘‘ 
static
‘‘ 
bool
‘‘ 
IsTextureMode
‘‘ *
(
‘‘* +
this
‘‘+ /

SelectMode
‘‘0 :
mode
‘‘; ?
)
‘‘? @
{
’’ 	
return
÷÷ 
mode
÷÷ 
.
÷÷ 
ContainsFlag
÷÷ $
(
÷÷$ %

SelectMode
◊◊ 
.
◊◊ 
TextureEdge
◊◊ &
|
ÿÿ 

SelectMode
ÿÿ 
.
ÿÿ 
TextureFace
ÿÿ (
|
ŸŸ 

SelectMode
ŸŸ 
.
ŸŸ 
TextureVertex
ŸŸ *
)
⁄⁄ 
;
⁄⁄ 
}
€€ 	
internal
›› 
static
›› 
bool
›› 
IsPositionMode
›› +
(
››+ ,
this
››, 0

SelectMode
››1 ;
mode
››< @
)
››@ A
{
ﬁﬁ 	
return
ﬂﬂ 
mode
ﬂﬂ 
.
ﬂﬂ 
ContainsFlag
ﬂﬂ $
(
ﬂﬂ$ %

SelectMode
‡‡ 
.
‡‡ 
TextureEdge
‡‡ &
|
·· 

SelectMode
·· 
.
·· 
TextureFace
·· (
|
‚‚ 

SelectMode
‚‚ 
.
‚‚ 
TextureVertex
‚‚ *
)
„„ 
;
„„ 
}
‰‰ 	
internal
ÊÊ 
static
ÊÊ 

SelectMode
ÊÊ "
GetPositionMode
ÊÊ# 2
(
ÊÊ2 3
this
ÊÊ3 7

SelectMode
ÊÊ8 B
mode
ÊÊC G
)
ÊÊG H
{
ÁÁ 	
if
ËË 
(
ËË 
mode
ËË 
.
ËË 
ContainsFlag
ËË !
(
ËË! "

SelectMode
ËË" ,
.
ËË, -
TextureFace
ËË- 8
)
ËË8 9
)
ËË9 :
mode
ÈÈ 
=
ÈÈ 
(
ÈÈ 
mode
ÈÈ 
&
ÈÈ 
~
ÈÈ  

SelectMode
ÈÈ  *
.
ÈÈ* +
TextureFace
ÈÈ+ 6
)
ÈÈ6 7
|
ÈÈ8 9

SelectMode
ÈÈ: D
.
ÈÈD E
Face
ÈÈE I
;
ÈÈI J
if
ÎÎ 
(
ÎÎ 
mode
ÎÎ 
.
ÎÎ 
ContainsFlag
ÎÎ !
(
ÎÎ! "

SelectMode
ÎÎ" ,
.
ÎÎ, -
TextureEdge
ÎÎ- 8
)
ÎÎ8 9
)
ÎÎ9 :
mode
ÏÏ 
=
ÏÏ 
(
ÏÏ 
mode
ÏÏ 
&
ÏÏ 
~
ÏÏ  

SelectMode
ÏÏ  *
.
ÏÏ* +
TextureEdge
ÏÏ+ 6
)
ÏÏ6 7
|
ÏÏ8 9

SelectMode
ÏÏ: D
.
ÏÏD E
Edge
ÏÏE I
;
ÏÏI J
if
ÓÓ 
(
ÓÓ 
mode
ÓÓ 
.
ÓÓ 
ContainsFlag
ÓÓ !
(
ÓÓ! "

SelectMode
ÓÓ" ,
.
ÓÓ, -
TextureVertex
ÓÓ- :
)
ÓÓ: ;
)
ÓÓ; <
mode
ÔÔ 
=
ÔÔ 
(
ÔÔ 
mode
ÔÔ 
&
ÔÔ 
~
ÔÔ  

SelectMode
ÔÔ  *
.
ÔÔ* +
TextureVertex
ÔÔ+ 8
)
ÔÔ8 9
|
ÔÔ: ;

SelectMode
ÔÔ< F
.
ÔÔF G
Vertex
ÔÔG M
;
ÔÔM N
return
ÒÒ 
mode
ÒÒ 
;
ÒÒ 
}
ÚÚ 	
internal
ÙÙ 
static
ÙÙ 

SelectMode
ÙÙ "
GetTextureMode
ÙÙ# 1
(
ÙÙ1 2
this
ÙÙ2 6

SelectMode
ÙÙ7 A
mode
ÙÙB F
)
ÙÙF G
{
ıı 	
if
ˆˆ 
(
ˆˆ 
mode
ˆˆ 
.
ˆˆ 
ContainsFlag
ˆˆ !
(
ˆˆ! "

SelectMode
ˆˆ" ,
.
ˆˆ, -
Face
ˆˆ- 1
)
ˆˆ1 2
)
ˆˆ2 3
mode
˜˜ 
=
˜˜ 
(
˜˜ 
mode
˜˜ 
&
˜˜ 
~
˜˜  

SelectMode
˜˜  *
.
˜˜* +
Face
˜˜+ /
)
˜˜/ 0
|
˜˜1 2

SelectMode
˜˜3 =
.
˜˜= >
TextureFace
˜˜> I
;
˜˜I J
if
˘˘ 
(
˘˘ 
mode
˘˘ 
.
˘˘ 
ContainsFlag
˘˘ !
(
˘˘! "

SelectMode
˘˘" ,
.
˘˘, -
Edge
˘˘- 1
)
˘˘1 2
)
˘˘2 3
mode
˙˙ 
=
˙˙ 
(
˙˙ 
mode
˙˙ 
&
˙˙ 
~
˙˙  

SelectMode
˙˙  *
.
˙˙* +
Edge
˙˙+ /
)
˙˙/ 0
|
˙˙1 2

SelectMode
˙˙3 =
.
˙˙= >
TextureEdge
˙˙> I
;
˙˙I J
if
¸¸ 
(
¸¸ 
mode
¸¸ 
.
¸¸ 
ContainsFlag
¸¸ !
(
¸¸! "

SelectMode
¸¸" ,
.
¸¸, -
Vertex
¸¸- 3
)
¸¸3 4
)
¸¸4 5
mode
˝˝ 
=
˝˝ 
(
˝˝ 
mode
˝˝ 
&
˝˝ 
~
˝˝  

SelectMode
˝˝  *
.
˝˝* +
Vertex
˝˝+ 1
)
˝˝1 2
|
˝˝3 4

SelectMode
˝˝5 ?
.
˝˝? @
TextureVertex
˝˝@ M
;
˝˝M N
return
ˇˇ 
mode
ˇˇ 
;
ˇˇ 
}
ÄÄ 	
internal
ãã 
static
ãã 
bool
ãã 
ContainsFlag
ãã )
(
ãã) *
this
ãã* .

SelectMode
ãã/ 9
target
ãã: @
,
ãã@ A

SelectMode
ããB L
value
ããM R
)
ããR S
{
åå 	
return
çç 
(
çç 
target
çç 
&
çç 
value
çç "
)
çç" #
!=
çç$ &

SelectMode
çç' 1
.
çç1 2
None
çç2 6
;
çç6 7
}
éé 	
internal
èè 
static
èè 

SelectMode
èè "
GetSelectMode
èè# 0
(
èè0 1
	EditLevel
èè1 :
edit
èè; ?
,
èè? @
ComponentMode
èèA N
	component
èèO X
)
èèX Y
{
êê 	
switch
ëë 
(
ëë 
edit
ëë 
)
ëë 
{
íí 
case
ìì 
	EditLevel
ìì 
.
ìì 
Top
ìì "
:
ìì" #
return
îî 

SelectMode
îî %
.
îî% &
Object
îî& ,
;
îî, -
case
ññ 
	EditLevel
ññ 
.
ññ 
Geometry
ññ '
:
ññ' (
{
óó 
switch
òò 
(
òò 
	component
òò %
)
òò% &
{
ôô 
case
öö 
ComponentMode
öö *
.
öö* +
Vertex
öö+ 1
:
öö1 2
return
õõ "

SelectMode
õõ# -
.
õõ- .
Vertex
õõ. 4
;
õõ4 5
case
úú 
ComponentMode
úú *
.
úú* +
Edge
úú+ /
:
úú/ 0
return
ùù "

SelectMode
ùù# -
.
ùù- .
Edge
ùù. 2
;
ùù2 3
default
ûû 
:
ûû  
return
üü "

SelectMode
üü# -
.
üü- .
Face
üü. 2
;
üü2 3
}
†† 
}
°° 
case
££ 
	EditLevel
££ 
.
££ 
Texture
££ &
:
££& '
return
§§ 

SelectMode
§§ %
.
§§% &
TextureFace
§§& 1
;
§§1 2
default
¶¶ 
:
¶¶ 
return
ßß 

SelectMode
ßß %
.
ßß% &
None
ßß& *
;
ßß* +
}
®® 
}
©© 	
internal
´´ 
static
´´ 
	EditLevel
´´ !
GetEditLevel
´´" .
(
´´. /

SelectMode
´´/ 9
mode
´´: >
)
´´> ?
{
¨¨ 	
switch
≠≠ 
(
≠≠ 
mode
≠≠ 
)
≠≠ 
{
ÆÆ 
case
ØØ 

SelectMode
ØØ 
.
ØØ  
Object
ØØ  &
:
ØØ& '
return
∞∞ 
	EditLevel
∞∞ $
.
∞∞$ %
Top
∞∞% (
;
∞∞( )
case
±± 

SelectMode
±± 
.
±±  
TextureFace
±±  +
:
±±+ ,
return
≤≤ 
	EditLevel
≤≤ $
.
≤≤$ %
Texture
≤≤% ,
;
≤≤, -
case
≥≥ 

SelectMode
≥≥ 
.
≥≥  
None
≥≥  $
:
≥≥$ %
return
¥¥ 
	EditLevel
¥¥ $
.
¥¥$ %
Plugin
¥¥% +
;
¥¥+ ,
default
µµ 
:
µµ 
return
∂∂ 
	EditLevel
∂∂ $
.
∂∂$ %
Geometry
∂∂% -
;
∂∂- .
}
∑∑ 
}
∏∏ 	
internal
∫∫ 
static
∫∫ 
ComponentMode
∫∫ %
GetComponentMode
∫∫& 6
(
∫∫6 7

SelectMode
∫∫7 A
mode
∫∫B F
)
∫∫F G
{
ªª 	
switch
ºº 
(
ºº 
mode
ºº 
)
ºº 
{
ΩΩ 
case
ææ 

SelectMode
ææ 
.
ææ  
Vertex
ææ  &
:
ææ& '
return
øø 
ComponentMode
øø (
.
øø( )
Vertex
øø) /
;
øø/ 0
case
¿¿ 

SelectMode
¿¿ 
.
¿¿  
Edge
¿¿  $
:
¿¿$ %
return
¡¡ 
ComponentMode
¡¡ (
.
¡¡( )
Edge
¡¡) -
;
¡¡- .
default
¬¬ 
:
¬¬ 
return
√√ 
ComponentMode
√√ (
.
√√( )
Face
√√) -
;
√√- .
}
ƒƒ 
}
≈≈ 	
internal
«« 
static
«« 
bool
«« 
IsDeveloperMode
«« ,
(
««, -
)
««- .
{
»» 	
return
…… 
EditorPrefs
…… 
.
…… 
GetBool
…… &
(
……& '
$str
……' 6
,
……6 7
false
……8 =
)
……= >
;
……> ?
}
   	
public
ÃÃ 
static
ÃÃ 
void
ÃÃ !
SetGizmoIconEnabled
ÃÃ .
(
ÃÃ. /
Type
ÃÃ/ 3
script
ÃÃ4 :
,
ÃÃ: ;
bool
ÃÃ< @
enabled
ÃÃA H
)
ÃÃH I
{
ÕÕ 	
var
œœ 
annotations
œœ 
=
œœ 
AnnotationUtility
œœ /
.
œœ/ 0
GetAnnotations
œœ0 >
(
œœ> ?
)
œœ? @
;
œœ@ A
var
–– 

annotation
–– 
=
–– 
annotations
–– (
.
––( )
FirstOrDefault
––) 7
(
––7 8
x
––8 9
=>
––: <
x
––= >
.
––> ?
scriptClass
––? J
.
––J K
Contains
––K S
(
––S T
script
––T Z
.
––Z [
Name
––[ _
)
––_ `
)
––` a
;
––a b
AnnotationUtility
—— 
.
—— 
SetIconEnabled
—— ,
(
——, -

annotation
——- 7
.
——7 8
classID
——8 ?
,
——? @

annotation
——A K
.
——K L
scriptClass
——L W
,
——W X
enabled
——Y `
?
——a b
$num
——c d
:
——e f
$num
——g h
)
——h i
;
——i j
}
‹‹ 	
}
›› 
}ﬁﬁ ˛)
üD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\FlipFaceNormals.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{		 
sealed

 

class

 
FlipFaceNormals

  
:

! "

MenuAction

# -
{ 
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Geometry& .
;. /
}0 1
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- G
,G H
IconSkinI Q
.Q R
ProR U
)U V
;V W
}X Y
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str #
,# $
$str D
,D E
keyCommandAlt 
, 
$char "
)   
;   
public"" 
override"" 

SelectMode"" "
validSelectModes""# 3
{## 	
get$$ 
{$$ 
return$$ 

SelectMode$$ #
.$$# $
Face$$$ (
;$$( )
}$$* +
}%% 	
public'' 
override'' 
bool'' 
enabled'' $
{(( 	
get)) 
{)) 
return)) 
base)) 
.)) 
enabled)) %
&&))& (
MeshSelection))) 6
.))6 7
selectedFaceCount))7 H
>))I J
$num))K L
;))L M
}))N O
}** 	
public,, 
override,, 
ActionResult,, $
DoAction,,% -
(,,- .
),,. /
{-- 	
if.. 
(.. 
MeshSelection.. 
... 
selectedObjectCount.. 1
<..2 3
$num..4 5
)..5 6
return// 
ActionResult// #
.//# $
NoSelection//$ /
;/// 0
UndoUtility11 
.11 
RecordSelection11 '
(11' (
$str11( ;
)11; <
;11< =
int33 
c33 
=33 
$num33 
;33 
int44 
	faceCount44 
=44 
MeshSelection44 )
.44) *
selectedFaceCount44* ;
;44; <
foreach66 
(66 
ProBuilderMesh66 #
pb66$ &
in66' )
MeshSelection66* 7
.667 8
topInternal668 C
)66C D
{77 
if88 
(88 
pb88 
.88 
selectedFaceCount88 (
<88) *
$num88+ ,
&&88- /
	faceCount880 9
<88: ;
$num88< =
)88= >
{99 
foreach:: 
(:: 
var::  
face::! %
in::& (
pb::) +
.::+ ,
facesInternal::, 9
)::9 :
face;; 
.;; 
Reverse;; $
(;;$ %
);;% &
;;;& '
c== 
+=== 
pb== 
.== 
facesInternal== )
.==) *
Length==* 0
;==0 1
}>> 
else?? 
{@@ 
foreachAA 
(AA 
varAA  
faceAA! %
inAA& (
pbAA) +
.AA+ ,
GetSelectedFacesAA, <
(AA< =
)AA= >
)AA> ?
faceBB 
.BB 
ReverseBB $
(BB$ %
)BB% &
;BB& '
cDD 
+=DD 
pbDD 
.DD 
selectedFaceCountDD -
;DD- .
}EE 
pbHH 
.HH 
ToMeshHH 
(HH 
)HH 
;HH 
pbII 
.II 
RefreshII 
(II 
)II 
;II 
pbJJ 
.JJ 
OptimizeJJ 
(JJ 
)JJ 
;JJ 
}KK 
ifMM 
(MM 
cMM 
>MM 
$numMM 
)MM 
returnNN 
newNN 
ActionResultNN '
(NN' (
ActionResultNN( 4
.NN4 5
StatusNN5 ;
.NN; <
SuccessNN< C
,NNC D
$strNNE L
+NNM N
cNNO P
+NNQ R
(NNS T
cNNT U
>NNV W
$numNNX Y
?NNZ [
$strNN\ k
:NNl m
$strNNn |
)NN| }
)NN} ~
;NN~ 
returnPP 
newPP 
ActionResultPP #
(PP# $
ActionResultPP$ 0
.PP0 1
StatusPP1 7
.PP7 8
CanceledPP8 @
,PP@ A
$strPPB c
)PPc d
;PPd e
}QQ 	
}RR 
}SS ≠¢
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\ObjExporter.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
sealed 

class 

ObjOptions 
{ 
public 
enum 

Handedness 
{ 	
Left 
, 
Right 
} 	
;	 

public 

Handedness 

handedness $
=% &

Handedness' 1
.1 2
Right2 7
;7 8
public 
bool 
copyTextures  
=! "
true# '
;' (
public"" 
bool"" 
applyTransforms"" #
=""$ %
true""& *
;""* +
public&& 
bool&& 
vertexColors&&  
=&&! "
false&&# (
;&&( )
public)) 
bool)) 
textureOffsetScale)) &
=))' (
false))) .
;)). /
}** 
static// 

class// 
ObjExporter// 
{00 
static?? 

Dictionary?? 
<?? 
string??  
,??  !
string??" (
>??( )
s_TextureMapKeys??* :
=??; <
new??= @

Dictionary??A K
<??K L
string??L R
,??R S
string??T Z
>??Z [
{@@ 	
{AA 
$strAA 
,AA 
$strAA "
}AA# $
,AA$ %
{BB 
$strBB !
,BB! "
$strBB# +
}BB, -
,BB- .
{CC 
$strCC 
,CC 
$strCC  
}CC! "
,CC" #
{DD 
$strDD 
,DD 
$strDD $
}DD% &
,DD& '
{EE 
$strEE 
,EE 
$strEE &
}EE' (
,EE( )
{FF 
$strFF 
,FF 
$strFF $
}FF% &
,FF& '
}MM 	
;MM	 

publicYY 
staticYY 
boolYY 
ExportYY !
(YY! "
stringYY" (
nameYY) -
,YY- .
IEnumerableYY/ :
<YY: ;
ModelYY; @
>YY@ A
modelsYYB H
,YYH I
outYYJ M
stringYYN T
objContentsYYU `
,YY` a
outYYb e
stringYYf l
mtlContentsYYm x
,YYx y
outYYz }
List	YY~ Ç
<
YYÇ É
string
YYÉ â
>
YYâ ä
textures
YYã ì
,
YYì î

ObjOptions
YYï ü
options
YY† ß
=
YY® ©
null
YY™ Æ
)
YYÆ Ø
{ZZ 	
if[[ 
([[ 
models[[ 
==[[ 
null[[ 
||[[ !
models[[" (
.[[( )
Count[[) .
([[. /
)[[/ 0
<[[1 2
$num[[3 4
)[[4 5
{\\ 
objContents]] 
=]] 
null]] "
;]]" #
mtlContents^^ 
=^^ 
null^^ "
;^^" #
textures__ 
=__ 
null__ 
;__  
return`` 
false`` 
;`` 
}aa 

Dictionarycc 
<cc 
Materialcc 
,cc  
stringcc! '
>cc' (
materialMapcc) 4
=cc5 6
nullcc7 ;
;cc; <
ifee 
(ee 
optionsee 
==ee 
nullee 
)ee  
optionsff 
=ff 
newff 

ObjOptionsff (
(ff( )
)ff) *
;ff* +
mtlContentshh 
=hh 
WriteMtlContentshh *
(hh* +
modelshh+ 1
,hh1 2
optionshh3 :
,hh: ;
outhh< ?
materialMaphh@ K
,hhK L
outhhM P
textureshhQ Y
)hhY Z
;hhZ [
objContentsii 
=ii 
WriteObjContentsii *
(ii* +
nameii+ /
,ii/ 0
modelsii1 7
,ii7 8
materialMapii9 D
,iiD E
optionsiiF M
)iiM N
;iiN O
returnkk 
truekk 
;kk 
}ll 	
staticnn 
stringnn 
WriteObjContentsnn &
(nn& '
stringnn' -
namenn. 2
,nn2 3
IEnumerablenn4 ?
<nn? @
Modelnn@ E
>nnE F
modelsnnG M
,nnM N

DictionarynnO Y
<nnY Z
MaterialnnZ b
,nnb c
stringnnd j
>nnj k
materialMapnnl w
,nnw x

ObjOptions	nny É
options
nnÑ ã
)
nnã å
{oo 	
ifqq 
(qq 
stringqq 
.qq 
IsNullOrEmptyqq $
(qq$ %
nameqq% )
)qq) *
)qq* +
namerr 
=rr 
$strrr (
;rr( )
StringBuildertt 
sbtt 
=tt 
newtt "
StringBuildertt# 0
(tt0 1
)tt1 2
;tt2 3
SemVervv 
versionvv 
;vv 
ifxx 
(xx 
Versionxx 
.xx  
TryGetPackageVersionxx +
(xx+ ,
outxx, /
versionxx0 7
)xx7 8
)xx8 9
sbyy 
.yy 

AppendLineyy 
(yy 
$stryy -
+yy. /
versionyy0 7
.yy7 8
MajorMinorPatchyy8 G
)yyG H
;yyH I
elsezz 
sb{{ 
.{{ 

AppendLine{{ 
({{ 
$str{{ ,
){{, -
;{{- .
sb|| 
.|| 

AppendLine|| 
(|| 
$str|| Y
)||Y Z
;||Z [
sb}} 
.}} 

AppendLine}} 
(}} 
string}}  
.}}  !
Format}}! '
(}}' (
$str}}( /
,}}/ 0
System}}1 7
.}}7 8
DateTime}}8 @
.}}@ A
Now}}A D
)}}D E
)}}E F
;}}F G
sb~~ 
.~~ 

AppendLine~~ 
(~~ 
)~~ 
;~~ 
sb 
. 

AppendLine 
( 
string  
.  !
Format! '
(' (
$str( :
,: ;
name< @
.@ A
ReplaceA H
(H I
$strI L
,L M
$strN Q
)Q R
)R S
)S T
;T U
sb
ÄÄ 
.
ÄÄ 

AppendLine
ÄÄ 
(
ÄÄ 
string
ÄÄ  
.
ÄÄ  !
Format
ÄÄ! '
(
ÄÄ' (
$str
ÄÄ( /
,
ÄÄ/ 0
name
ÄÄ1 5
)
ÄÄ5 6
)
ÄÄ6 7
;
ÄÄ7 8
sb
ÅÅ 
.
ÅÅ 

AppendLine
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
int
ÑÑ 
positionOffset
ÑÑ 
=
ÑÑ  
$num
ÑÑ! "
;
ÑÑ" #
int
ÖÖ 
normalOffset
ÖÖ 
=
ÖÖ 
$num
ÖÖ  
;
ÖÖ  !
int
ÜÜ 
textureOffset
ÜÜ 
=
ÜÜ 
$num
ÜÜ  !
;
ÜÜ! "
bool
àà 
reverseWinding
àà 
=
àà  !
options
àà" )
.
àà) *

handedness
àà* 4
==
àà5 7

ObjOptions
àà8 B
.
ààB C

Handedness
ààC M
.
ààM N
Right
ààN S
;
ààS T
float
ââ 

handedness
ââ 
=
ââ 
options
ââ &
.
ââ& '

handedness
ââ' 1
==
ââ2 4

ObjOptions
ââ5 ?
.
ââ? @

Handedness
ââ@ J
.
ââJ K
Left
ââK O
?
ââP Q
$num
ââR T
:
ââU V
-
ââW X
$num
ââX Z
;
ââZ [
foreach
ãã 
(
ãã 
Model
ãã 
model
ãã  
in
ãã! #
models
ãã$ *
)
ãã* +
{
åå 
int
çç 
subMeshCount
çç  
=
çç! "
model
çç# (
.
çç( )
submeshCount
çç) 5
;
çç5 6
	Matrix4x4
éé 
matrix
éé  
=
éé! "
options
éé# *
.
éé* +
applyTransforms
éé+ :
?
éé; <
model
éé= B
.
ééB C
matrix
ééC I
:
ééJ K
	Matrix4x4
ééL U
.
ééU V
identity
ééV ^
;
éé^ _
int
êê 
vertexCount
êê 
=
êê  !
model
êê" '
.
êê' (
vertexCount
êê( 3
;
êê3 4
Vector3
íí 
[
íí 
]
íí 
	positions
íí #
;
íí# $
Color
ìì 
[
ìì 
]
ìì 
colors
ìì 
;
ìì 
Vector2
îî 
[
îî 
]
îî 
	textures0
îî #
;
îî# $
Vector3
ïï 
[
ïï 
]
ïï 
normals
ïï !
;
ïï! "
Vector4
ññ 
[
ññ 
]
ññ 
tangent
ññ !
;
ññ! "
Vector2
óó 
[
óó 
]
óó 
uv2
óó 
;
óó 
List
òò 
<
òò 
Vector4
òò 
>
òò 
uv3
òò !
;
òò! "
List
ôô 
<
ôô 
Vector4
ôô 
>
ôô 
uv4
ôô !
;
ôô! "

MeshArrays
õõ 
attribs
õõ "
=
õõ# $

MeshArrays
õõ% /
.
õõ/ 0
Position
õõ0 8
|
õõ9 :

MeshArrays
õõ; E
.
õõE F
Normal
õõF L
|
õõM N

MeshArrays
õõO Y
.
õõY Z
Texture0
õõZ b
;
õõb c
if
ùù 
(
ùù 
options
ùù 
.
ùù 
vertexColors
ùù (
)
ùù( )
attribs
ûû 
=
ûû 
attribs
ûû %
|
ûû& '

MeshArrays
ûû( 2
.
ûû2 3
Color
ûû3 8
;
ûû8 9
Vertex
†† 
.
†† 
	GetArrays
††  
(
††  !
model
††! &
.
††& '
vertices
††' /
,
††/ 0
out
††1 4
	positions
††5 >
,
††> ?
out
††@ C
colors
††D J
,
††J K
out
††L O
	textures0
††P Y
,
††Y Z
out
††[ ^
normals
††_ f
,
††f g
out
††h k
tangent
††l s
,
††s t
out
††u x
uv2
††y |
,
††| }
out††~ Å
uv3††Ç Ö
,††Ö Ü
out††á ä
uv4††ã é
,††é è
attribs††ê ó
)††ó ò
;††ò ô
if
§§ 
(
§§ 
options
§§ 
.
§§ 

handedness
§§ &
!=
§§' )

ObjOptions
§§* 4
.
§§4 5

Handedness
§§5 ?
.
§§? @
Left
§§@ D
||
§§E G
options
§§H O
.
§§O P
applyTransforms
§§P _
)
§§_ `
{
•• 
for
¶¶ 
(
¶¶ 
int
¶¶ 
i
¶¶ 
=
¶¶  
$num
¶¶! "
;
¶¶" #
i
¶¶$ %
<
¶¶& '
vertexCount
¶¶( 3
;
¶¶3 4
i
¶¶5 6
++
¶¶6 8
)
¶¶8 9
{
ßß 
if
®® 
(
®® 
	positions
®® %
!=
®®& (
null
®®) -
)
®®- .
{
©© 
	positions
™™ %
[
™™% &
i
™™& '
]
™™' (
=
™™) *
matrix
™™+ 1
.
™™1 2
MultiplyPoint3x4
™™2 B
(
™™B C
	positions
™™C L
[
™™L M
i
™™M N
]
™™N O
)
™™O P
;
™™P Q
	positions
´´ %
[
´´% &
i
´´& '
]
´´' (
.
´´( )
x
´´) *
*=
´´+ -

handedness
´´. 8
;
´´8 9
}
¨¨ 
if
ÆÆ 
(
ÆÆ 
normals
ÆÆ #
!=
ÆÆ$ &
null
ÆÆ' +
)
ÆÆ+ ,
{
ØØ 
normals
∞∞ #
[
∞∞# $
i
∞∞$ %
]
∞∞% &
=
∞∞' (
matrix
∞∞) /
.
∞∞/ 0
MultiplyVector
∞∞0 >
(
∞∞> ?
normals
∞∞? F
[
∞∞F G
i
∞∞G H
]
∞∞H I
)
∞∞I J
;
∞∞J K
normals
±± #
[
±±# $
i
±±$ %
]
±±% &
.
±±& '
x
±±' (
*=
±±) +

handedness
±±, 6
;
±±6 7
}
≤≤ 
}
≥≥ 
}
¥¥ 
sb
∂∂ 
.
∂∂ 

AppendLine
∂∂ 
(
∂∂ 
string
∂∂ $
.
∂∂$ %
Format
∂∂% +
(
∂∂+ ,
$str
∂∂, 3
,
∂∂3 4
model
∂∂5 :
.
∂∂: ;
name
∂∂; ?
)
∂∂? @
)
∂∂@ A
;
∂∂A B

Dictionary
∏∏ 
<
∏∏ 
int
∏∏ 
,
∏∏ 
int
∏∏  #
>
∏∏# $
positionIndexMap
∏∏% 5
;
∏∏5 6
var
ππ 
positionCount
ππ !
=
ππ" #
AppendPositions
ππ$ 3
(
ππ3 4
sb
ππ4 6
,
ππ6 7
	positions
ππ8 A
,
ππA B
colors
ππC I
,
ππI J
true
ππK O
,
ππO P
options
ππQ X
.
ππX Y
vertexColors
ππY e
,
ππe f
out
ππg j
positionIndexMap
ππk {
)
ππ{ |
;
ππ| }
sb
ªª 
.
ªª 

AppendLine
ªª 
(
ªª 
)
ªª 
;
ªª  

Dictionary
ΩΩ 
<
ΩΩ 
int
ΩΩ 
,
ΩΩ 
int
ΩΩ  #
>
ΩΩ# $
textureIndexMap
ΩΩ% 4
;
ΩΩ4 5
var
ææ 
textureCount
ææ  
=
ææ! "
AppendArrayVec2
ææ# 2
(
ææ2 3
sb
ææ3 5
,
ææ5 6
	textures0
ææ7 @
,
ææ@ A
$str
ææB F
,
ææF G
true
ææH L
,
ææL M
out
ææN Q
textureIndexMap
ææR a
)
ææa b
;
ææb c
sb
¿¿ 
.
¿¿ 

AppendLine
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿  

Dictionary
¬¬ 
<
¬¬ 
int
¬¬ 
,
¬¬ 
int
¬¬  #
>
¬¬# $
normalIndexMap
¬¬% 3
;
¬¬3 4
var
√√ 
normalCount
√√ 
=
√√  !
AppendArrayVec3
√√" 1
(
√√1 2
sb
√√2 4
,
√√4 5
normals
√√6 =
,
√√= >
$str
√√? C
,
√√C D
true
√√E I
,
√√I J
out
√√K N
normalIndexMap
√√O ]
)
√√] ^
;
√√^ _
sb
≈≈ 
.
≈≈ 

AppendLine
≈≈ 
(
≈≈ 
)
≈≈ 
;
≈≈  
for
»» 
(
»» 
int
»» 
submeshIndex
»» %
=
»»& '
$num
»»( )
;
»») *
submeshIndex
»»+ 7
<
»»8 9
subMeshCount
»»: F
;
»»F G
submeshIndex
»»H T
++
»»T V
)
»»V W
{
…… 
Submesh
   
submesh
   #
=
  $ %
model
  & +
.
  + ,
	submeshes
  , 5
[
  5 6
submeshIndex
  6 B
]
  B C
;
  C D
string
ÃÃ 
materialName
ÃÃ '
=
ÃÃ( )
$str
ÃÃ* ,
;
ÃÃ, -
if
ŒŒ 
(
ŒŒ 
materialMap
ŒŒ #
.
ŒŒ# $
TryGetValue
ŒŒ$ /
(
ŒŒ/ 0
model
ŒŒ0 5
.
ŒŒ5 6
	materials
ŒŒ6 ?
[
ŒŒ? @
submeshIndex
ŒŒ@ L
]
ŒŒL M
,
ŒŒM N
out
ŒŒO R
materialName
ŒŒS _
)
ŒŒ_ `
)
ŒŒ` a
sb
œœ 
.
œœ 

AppendLine
œœ %
(
œœ% &
string
œœ& ,
.
œœ, -
Format
œœ- 3
(
œœ3 4
$str
œœ4 @
,
œœ@ A
materialName
œœB N
)
œœN O
)
œœO P
;
œœP Q
else
–– 
sb
—— 
.
—— 

AppendLine
—— %
(
——% &
string
——& ,
.
——, -
Format
——- 3
(
——3 4
$str
——4 @
,
——@ A
$str
——B H
)
——H I
)
——I J
;
——J K
int
”” 
[
”” 
]
”” 
indexes
”” !
=
””" #
submesh
””$ +
.
””+ ,
	m_Indexes
””, 5
;
””5 6
int
‘‘ 
inc
‘‘ 
=
‘‘ 
submesh
‘‘ %
.
‘‘% &

m_Topology
‘‘& 0
==
‘‘1 3
MeshTopology
‘‘4 @
.
‘‘@ A
Quads
‘‘A F
?
‘‘G H
$num
‘‘I J
:
‘‘K L
$num
‘‘M N
;
‘‘N O
int
’’ 
inc1
’’ 
=
’’ 
inc
’’ "
-
’’# $
$num
’’% &
;
’’& '
int
◊◊ 
o0
◊◊ 
=
◊◊ 
reverseWinding
◊◊ +
?
◊◊, -
inc1
◊◊. 2
:
◊◊3 4
$num
◊◊5 6
;
◊◊6 7
int
ÿÿ 
o1
ÿÿ 
=
ÿÿ 
reverseWinding
ÿÿ +
?
ÿÿ, -
inc1
ÿÿ. 2
-
ÿÿ3 4
$num
ÿÿ5 6
:
ÿÿ7 8
$num
ÿÿ9 :
;
ÿÿ: ;
int
ŸŸ 
o2
ŸŸ 
=
ŸŸ 
reverseWinding
ŸŸ +
?
ŸŸ, -
inc1
ŸŸ. 2
-
ŸŸ3 4
$num
ŸŸ5 6
:
ŸŸ7 8
$num
ŸŸ9 :
;
ŸŸ: ;
int
⁄⁄ 
o3
⁄⁄ 
=
⁄⁄ 
reverseWinding
⁄⁄ +
?
⁄⁄, -
inc1
⁄⁄. 2
-
⁄⁄3 4
$num
⁄⁄5 6
:
⁄⁄7 8
$num
⁄⁄9 :
;
⁄⁄: ;
for
‹‹ 
(
‹‹ 
int
‹‹ 
ff
‹‹ 
=
‹‹  !
$num
‹‹" #
;
‹‹# $
ff
‹‹% '
<
‹‹( )
indexes
‹‹* 1
.
‹‹1 2
Length
‹‹2 8
;
‹‹8 9
ff
‹‹: <
+=
‹‹= ?
inc
‹‹@ C
)
‹‹C D
{
›› 
int
ﬁﬁ 
p0
ﬁﬁ 
=
ﬁﬁ  
positionIndexMap
ﬁﬁ! 1
[
ﬁﬁ1 2
indexes
ﬁﬁ2 9
[
ﬁﬁ9 :
ff
ﬁﬁ: <
+
ﬁﬁ= >
o0
ﬁﬁ? A
]
ﬁﬁA B
]
ﬁﬁB C
+
ﬁﬁD E
positionOffset
ﬁﬁF T
;
ﬁﬁT U
int
ﬂﬂ 
p1
ﬂﬂ 
=
ﬂﬂ  
positionIndexMap
ﬂﬂ! 1
[
ﬂﬂ1 2
indexes
ﬂﬂ2 9
[
ﬂﬂ9 :
ff
ﬂﬂ: <
+
ﬂﬂ= >
o1
ﬂﬂ? A
]
ﬂﬂA B
]
ﬂﬂB C
+
ﬂﬂD E
positionOffset
ﬂﬂF T
;
ﬂﬂT U
int
‡‡ 
p2
‡‡ 
=
‡‡  
positionIndexMap
‡‡! 1
[
‡‡1 2
indexes
‡‡2 9
[
‡‡9 :
ff
‡‡: <
+
‡‡= >
o2
‡‡? A
]
‡‡A B
]
‡‡B C
+
‡‡D E
positionOffset
‡‡F T
;
‡‡T U
int
‚‚ 
t0
‚‚ 
=
‚‚  
textureIndexMap
‚‚! 0
[
‚‚0 1
indexes
‚‚1 8
[
‚‚8 9
ff
‚‚9 ;
+
‚‚< =
o0
‚‚> @
]
‚‚@ A
]
‚‚A B
+
‚‚C D
textureOffset
‚‚E R
;
‚‚R S
int
„„ 
t1
„„ 
=
„„  
textureIndexMap
„„! 0
[
„„0 1
indexes
„„1 8
[
„„8 9
ff
„„9 ;
+
„„< =
o1
„„> @
]
„„@ A
]
„„A B
+
„„C D
textureOffset
„„E R
;
„„R S
int
‰‰ 
t2
‰‰ 
=
‰‰  
textureIndexMap
‰‰! 0
[
‰‰0 1
indexes
‰‰1 8
[
‰‰8 9
ff
‰‰9 ;
+
‰‰< =
o2
‰‰> @
]
‰‰@ A
]
‰‰A B
+
‰‰C D
textureOffset
‰‰E R
;
‰‰R S
int
ÊÊ 
n0
ÊÊ 
=
ÊÊ  
normalIndexMap
ÊÊ! /
[
ÊÊ/ 0
indexes
ÊÊ0 7
[
ÊÊ7 8
ff
ÊÊ8 :
+
ÊÊ; <
o0
ÊÊ= ?
]
ÊÊ? @
]
ÊÊ@ A
+
ÊÊB C
normalOffset
ÊÊD P
;
ÊÊP Q
int
ÁÁ 
n1
ÁÁ 
=
ÁÁ  
normalIndexMap
ÁÁ! /
[
ÁÁ/ 0
indexes
ÁÁ0 7
[
ÁÁ7 8
ff
ÁÁ8 :
+
ÁÁ; <
o1
ÁÁ= ?
]
ÁÁ? @
]
ÁÁ@ A
+
ÁÁB C
normalOffset
ÁÁD P
;
ÁÁP Q
int
ËË 
n2
ËË 
=
ËË  
normalIndexMap
ËË! /
[
ËË/ 0
indexes
ËË0 7
[
ËË7 8
ff
ËË8 :
+
ËË; <
o2
ËË= ?
]
ËË? @
]
ËË@ A
+
ËËB C
normalOffset
ËËD P
;
ËËP Q
if
ÍÍ 
(
ÍÍ 
inc
ÍÍ 
==
ÍÍ  "
$num
ÍÍ# $
)
ÍÍ$ %
{
ÎÎ 
int
ÏÏ 
p3
ÏÏ  "
=
ÏÏ# $
positionIndexMap
ÏÏ% 5
[
ÏÏ5 6
indexes
ÏÏ6 =
[
ÏÏ= >
ff
ÏÏ> @
+
ÏÏA B
o3
ÏÏC E
]
ÏÏE F
]
ÏÏF G
+
ÏÏH I
positionOffset
ÏÏJ X
;
ÏÏX Y
int
ÌÌ 
n3
ÌÌ  "
=
ÌÌ# $
normalIndexMap
ÌÌ% 3
[
ÌÌ3 4
indexes
ÌÌ4 ;
[
ÌÌ; <
ff
ÌÌ< >
+
ÌÌ? @
o3
ÌÌA C
]
ÌÌC D
]
ÌÌD E
+
ÌÌF G
normalOffset
ÌÌH T
;
ÌÌT U
int
ÓÓ 
t3
ÓÓ  "
=
ÓÓ# $
textureIndexMap
ÓÓ% 4
[
ÓÓ4 5
indexes
ÓÓ5 <
[
ÓÓ< =
ff
ÓÓ= ?
+
ÓÓ@ A
o3
ÓÓB D
]
ÓÓD E
]
ÓÓE F
+
ÓÓG H
textureOffset
ÓÓI V
;
ÓÓV W
sb
 
.
 

AppendLine
 )
(
) *
string
* 0
.
0 1
Format
1 7
(
7 8
CultureInfo
8 C
.
C D
InvariantCulture
D T
,
T U
$str
ÒÒ  U
,
ÒÒU V
p0
ÚÚ$ &
,
ÚÚ& '
p1
ÚÚ( *
,
ÚÚ* +
p2
ÚÚ, .
,
ÚÚ. /
p3
ÚÚ0 2
,
ÚÚ2 3
t0
ÛÛ$ &
,
ÛÛ& '
t1
ÛÛ( *
,
ÛÛ* +
t2
ÛÛ, .
,
ÛÛ. /
t3
ÛÛ0 2
,
ÛÛ2 3
n0
ÙÙ$ &
,
ÙÙ& '
n1
ÙÙ( *
,
ÙÙ* +
n2
ÙÙ, .
,
ÙÙ. /
n3
ÙÙ0 2
)
ıı$ %
)
ıı% &
;
ıı& '
}
ˆˆ 
else
˜˜ 
{
¯¯ 
sb
˘˘ 
.
˘˘ 

AppendLine
˘˘ )
(
˘˘) *
string
˘˘* 0
.
˘˘0 1
Format
˘˘1 7
(
˘˘7 8
CultureInfo
˘˘8 C
.
˘˘C D
InvariantCulture
˘˘D T
,
˘˘T U
$str
˙˙  G
,
˙˙G H
p0
˚˚  "
,
˚˚" #
p1
˚˚$ &
,
˚˚& '
p2
˚˚( *
,
˚˚* +
t0
¸¸  "
,
¸¸" #
t1
¸¸$ &
,
¸¸& '
t2
¸¸( *
,
¸¸* +
n0
˝˝  "
,
˝˝" #
n1
˝˝$ &
,
˝˝& '
n2
˝˝( *
)
˛˛  !
)
˛˛! "
;
˛˛" #
}
ÄÄ 
}
ÅÅ 
sb
ÉÉ 
.
ÉÉ 

AppendLine
ÉÉ !
(
ÉÉ! "
)
ÉÉ" #
;
ÉÉ# $
}
ÑÑ 
positionOffset
ÜÜ 
+=
ÜÜ !
positionCount
ÜÜ" /
;
ÜÜ/ 0
normalOffset
áá 
+=
áá 
normalCount
áá  +
;
áá+ ,
textureOffset
àà 
+=
àà  
textureCount
àà! -
;
àà- .
}
ââ 
return
ãã 
sb
ãã 
.
ãã 
ToString
ãã 
(
ãã 
)
ãã  
;
ãã  !
}
åå 	
static
ññ 
string
ññ 
WriteMtlContents
ññ &
(
ññ& '
IEnumerable
ññ' 2
<
ññ2 3
Model
ññ3 8
>
ññ8 9
models
ññ: @
,
ññ@ A

ObjOptions
ññB L
options
ññM T
,
ññT U
out
ññV Y

Dictionary
ññZ d
<
ññd e
Material
ññe m
,
ññm n
string
ñño u
>
ññu v
materialMapññw Ç
,ññÇ É
outññÑ á
Listññà å
<ññå ç
stringññç ì
>ññì î
texturesññï ù
)ññù û
{
óó 	
materialMap
òò 
=
òò 
new
òò 

Dictionary
òò (
<
òò( )
Material
òò) 1
,
òò1 2
string
òò3 9
>
òò9 :
(
òò: ;
)
òò; <
;
òò< =
foreach
öö 
(
öö 
Model
öö 
model
öö  
in
öö! #
models
öö$ *
)
öö* +
{
õõ 
for
úú 
(
úú 
int
úú 
i
úú 
=
úú 
$num
úú 
,
úú 
c
úú  !
=
úú" #
model
úú$ )
.
úú) *
submeshCount
úú* 6
;
úú6 7
i
úú8 9
<
úú: ;
c
úú< =
;
úú= >
i
úú? @
++
úú@ B
)
úúB C
{
ùù 
Material
ûû 
material
ûû %
=
ûû& '
model
ûû( -
.
ûû- .
	materials
ûû. 7
[
ûû7 8
i
ûû8 9
]
ûû9 :
;
ûû: ;
if
†† 
(
†† 
material
††  
==
††! #
null
††$ (
)
††( )
continue
°°  
;
°°  !
if
££ 
(
££ 
!
££ 
materialMap
££ $
.
££$ %
ContainsKey
££% 0
(
££0 1
material
££1 9
)
££9 :
)
££: ;
{
§§ 
string
•• 
escapedName
•• *
=
••+ ,
material
••- 5
.
••5 6
name
••6 :
.
••: ;
Replace
••; B
(
••B C
$str
••C F
,
••F G
$str
••H K
)
••K L
;
••L M
string
¶¶ 
name
¶¶ #
=
¶¶$ %
escapedName
¶¶& 1
;
¶¶1 2
int
ßß 
nameIncrement
ßß )
=
ßß* +
$num
ßß, -
;
ßß- .
while
©© 
(
©© 
materialMap
©© *
.
©©* +
Any
©©+ .
(
©©. /
x
©©/ 0
=>
©©1 3
x
©©4 5
.
©©5 6
Value
©©6 ;
.
©©; <
Equals
©©< B
(
©©B C
name
©©C G
)
©©G H
)
©©H I
)
©©I J
name
™™  
=
™™! "
string
™™# )
.
™™) *
Format
™™* 0
(
™™0 1
$str
™™1 :
,
™™: ;
escapedName
™™< G
,
™™G H
nameIncrement
™™I V
++
™™V X
)
™™X Y
;
™™Y Z
materialMap
¨¨ #
.
¨¨# $
Add
¨¨$ '
(
¨¨' (
material
¨¨( 0
,
¨¨0 1
name
¨¨2 6
)
¨¨6 7
;
¨¨7 8
}
≠≠ 
}
ÆÆ 
}
ØØ 
StringBuilder
±± 
sb
±± 
=
±± 
new
±± "
StringBuilder
±±# 0
(
±±0 1
)
±±1 2
;
±±2 3
textures
≤≤ 
=
≤≤ 
new
≤≤ 
List
≤≤ 
<
≤≤  
string
≤≤  &
>
≤≤& '
(
≤≤' (
)
≤≤( )
;
≤≤) *
foreach
¥¥ 
(
¥¥ 
KeyValuePair
¥¥ !
<
¥¥! "
Material
¥¥" *
,
¥¥* +
string
¥¥, 2
>
¥¥2 3
group
¥¥4 9
in
¥¥: <
materialMap
¥¥= H
)
¥¥H I
{
µµ 
Material
∂∂ 
mat
∂∂ 
=
∂∂ 
group
∂∂ $
.
∂∂$ %
Key
∂∂% (
;
∂∂( )
sb
∏∏ 
.
∏∏ 

AppendLine
∏∏ 
(
∏∏ 
string
∏∏ $
.
∏∏$ %
Format
∏∏% +
(
∏∏+ ,
$str
∏∏, 8
,
∏∏8 9
group
∏∏: ?
.
∏∏? @
Value
∏∏@ E
)
∏∏E F
)
∏∏F G
;
∏∏G H
if
ªª 
(
ªª 
mat
ªª 
.
ªª 
shader
ªª 
!=
ªª !
null
ªª" &
)
ªª& '
{
ºº 
for
ΩΩ 
(
ΩΩ 
int
ΩΩ 
i
ΩΩ 
=
ΩΩ  
$num
ΩΩ! "
;
ΩΩ" #
i
ΩΩ$ %
<
ΩΩ& '

ShaderUtil
ΩΩ( 2
.
ΩΩ2 3
GetPropertyCount
ΩΩ3 C
(
ΩΩC D
mat
ΩΩD G
.
ΩΩG H
shader
ΩΩH N
)
ΩΩN O
;
ΩΩO P
i
ΩΩQ R
++
ΩΩR T
)
ΩΩT U
{
ææ 
if
øø 
(
øø 

ShaderUtil
øø &
.
øø& '
GetPropertyType
øø' 6
(
øø6 7
mat
øø7 :
.
øø: ;
shader
øø; A
,
øøA B
i
øøC D
)
øøD E
!=
øøF H

ShaderUtil
øøI S
.
øøS T 
ShaderPropertyType
øøT f
.
øøf g
TexEnv
øøg m
)
øøm n
continue
¿¿ $
;
¿¿$ %
string
¬¬ 
texPropertyName
¬¬ .
=
¬¬/ 0

ShaderUtil
¬¬1 ;
.
¬¬; <
GetPropertyName
¬¬< K
(
¬¬K L
mat
¬¬L O
.
¬¬O P
shader
¬¬P V
,
¬¬V W
i
¬¬X Y
)
¬¬Y Z
;
¬¬Z [
Texture
ƒƒ 
texture
ƒƒ  '
=
ƒƒ( )
mat
ƒƒ* -
.
ƒƒ- .

GetTexture
ƒƒ. 8
(
ƒƒ8 9
texPropertyName
ƒƒ9 H
)
ƒƒH I
;
ƒƒI J
string
∆∆ 
path
∆∆ #
=
∆∆$ %
texture
∆∆& -
!=
∆∆. 0
null
∆∆1 5
?
∆∆6 7
AssetDatabase
∆∆8 E
.
∆∆E F
GetAssetPath
∆∆F R
(
∆∆R S
texture
∆∆S Z
)
∆∆Z [
:
∆∆\ ]
null
∆∆^ b
;
∆∆b c
if
»» 
(
»» 
!
»» 
string
»» #
.
»»# $
IsNullOrEmpty
»»$ 1
(
»»1 2
path
»»2 6
)
»»6 7
)
»»7 8
{
…… 
if
   
(
    
options
    '
.
  ' (
copyTextures
  ( 4
)
  4 5
textures
ÀÀ  (
.
ÀÀ( )
Add
ÀÀ) ,
(
ÀÀ, -
path
ÀÀ- 1
)
ÀÀ1 2
;
ÀÀ2 3
path
ŒŒ  
=
ŒŒ! "
path
ŒŒ# '
.
ŒŒ' (
	Substring
ŒŒ( 1
(
ŒŒ1 2
$num
ŒŒ2 3
,
ŒŒ3 4
path
ŒŒ5 9
.
ŒŒ9 :
Length
ŒŒ: @
-
ŒŒA B
$num
ŒŒC D
)
ŒŒD E
;
ŒŒE F
string
–– "
textureName
––# .
=
––/ 0
options
––1 8
.
––8 9
copyTextures
––9 E
?
––F G
Path
––H L
.
––L M
GetFileName
––M X
(
––X Y
path
––Y ]
)
––] ^
:
––_ `
string
––a g
.
––g h
Format
––h n
(
––n o
$str
––o x
,
––x y
Application––z Ö
.––Ö Ü
dataPath––Ü é
,––é è
path––ê î
)––î ï
;––ï ñ
string
““ "
mtlKey
““# )
=
““* +
null
““, 0
;
““0 1
if
‘‘ 
(
‘‘  
s_TextureMapKeys
‘‘  0
.
‘‘0 1
TryGetValue
‘‘1 <
(
‘‘< =
texPropertyName
‘‘= L
,
‘‘L M
out
‘‘N Q
mtlKey
‘‘R X
)
‘‘X Y
)
‘‘Y Z
{
’’ 
Vector2
÷÷  '
offset
÷÷( .
=
÷÷/ 0
mat
÷÷1 4
.
÷÷4 5
GetTextureOffset
÷÷5 E
(
÷÷E F
texPropertyName
÷÷F U
)
÷÷U V
;
÷÷V W
Vector2
◊◊  '
scale
◊◊( -
=
◊◊/ 0
mat
◊◊1 4
.
◊◊4 5
GetTextureScale
◊◊5 D
(
◊◊D E
texPropertyName
◊◊E T
)
◊◊T U
;
◊◊U V
if
ŸŸ  "
(
ŸŸ# $
options
ŸŸ$ +
.
ŸŸ+ , 
textureOffsetScale
ŸŸ, >
)
ŸŸ> ?
sb
⁄⁄$ &
.
⁄⁄& '

AppendLine
⁄⁄' 1
(
⁄⁄1 2
string
⁄⁄2 8
.
⁄⁄8 9
Format
⁄⁄9 ?
(
⁄⁄? @
CultureInfo
⁄⁄@ K
.
⁄⁄K L
InvariantCulture
⁄⁄L \
,
⁄⁄\ ]
$str
⁄⁄^ }
,
⁄⁄} ~
mtlKey⁄⁄ Ö
,⁄⁄Ö Ü
offset⁄⁄á ç
.⁄⁄ç é
x⁄⁄é è
,⁄⁄è ê
offset⁄⁄ë ó
.⁄⁄ó ò
y⁄⁄ò ô
,⁄⁄ô ö
scale⁄⁄õ †
.⁄⁄† °
x⁄⁄° ¢
,⁄⁄¢ £
scale⁄⁄§ ©
.⁄⁄© ™
y⁄⁄™ ´
,⁄⁄´ ¨
textureName⁄⁄≠ ∏
)⁄⁄∏ π
)⁄⁄π ∫
;⁄⁄∫ ª
else
€€  $
sb
‹‹$ &
.
‹‹& '

AppendLine
‹‹' 1
(
‹‹1 2
string
‹‹2 8
.
‹‹8 9
Format
‹‹9 ?
(
‹‹? @
$str
‹‹@ I
,
‹‹I J
mtlKey
‹‹K Q
,
‹‹Q R
textureName
‹‹S ^
)
‹‹^ _
)
‹‹_ `
;
‹‹` a
}
›› 
}
ﬁﬁ 
}
ﬂﬂ 
}
‡‡ 
if
‚‚ 
(
‚‚ 
mat
‚‚ 
.
‚‚ 
HasProperty
‚‚ #
(
‚‚# $
$str
‚‚$ 3
)
‚‚3 4
||
‚‚5 7
mat
‚‚8 ;
.
‚‚; <
HasProperty
‚‚< G
(
‚‚G H
$str
‚‚H R
)
‚‚R S
)
‚‚S T
{
„„ 
var
‰‰ 
color
‰‰ 
=
‰‰ 
mat
‰‰  #
.
‰‰# $
GetColor
‰‰$ ,
(
‰‰, -
$str
‰‰- 9
)
‰‰9 :
;
‰‰: ;
sb
ÊÊ 
.
ÊÊ 

AppendLine
ÊÊ !
(
ÊÊ! "
string
ÊÊ" (
.
ÊÊ( )
Format
ÊÊ) /
(
ÊÊ/ 0
$str
ÊÊ0 8
,
ÊÊ8 9
string
ÊÊ: @
.
ÊÊ@ A
Format
ÊÊA G
(
ÊÊG H
CultureInfo
ÊÊH S
.
ÊÊS T
InvariantCulture
ÊÊT d
,
ÊÊd e
$str
ÊÊf s
,
ÊÊs t
color
ÊÊu z
.
ÊÊz {
r
ÊÊ{ |
,
ÊÊ| }
colorÊÊ~ É
.ÊÊÉ Ñ
gÊÊÑ Ö
,ÊÊÖ Ü
colorÊÊá å
.ÊÊå ç
bÊÊç é
)ÊÊé è
)ÊÊè ê
)ÊÊê ë
;ÊÊë í
sb
ËË 
.
ËË 

AppendLine
ËË !
(
ËË! "
string
ËË" (
.
ËË( )
Format
ËË) /
(
ËË/ 0
CultureInfo
ËË0 ;
.
ËË; <
InvariantCulture
ËË< L
,
ËËL M
$str
ËËN U
,
ËËU V
color
ËËW \
.
ËË\ ]
a
ËË] ^
)
ËË^ _
)
ËË_ `
;
ËË` a
}
ÈÈ 
else
ÍÍ 
if
ÍÍ 
(
ÍÍ 
mat
ÍÍ 
.
ÍÍ 
HasProperty
ÍÍ (
(
ÍÍ( )
$str
ÍÍ) 1
)
ÍÍ1 2
)
ÍÍ2 3
{
ÎÎ 
Color
ÏÏ 
color
ÏÏ 
=
ÏÏ  !
mat
ÏÏ" %
.
ÏÏ% &
color
ÏÏ& +
;
ÏÏ+ ,
sb
ÓÓ 
.
ÓÓ 

AppendLine
ÓÓ !
(
ÓÓ! "
string
ÓÓ" (
.
ÓÓ( )
Format
ÓÓ) /
(
ÓÓ/ 0
$str
ÓÓ0 8
,
ÓÓ8 9
string
ÓÓ: @
.
ÓÓ@ A
Format
ÓÓA G
(
ÓÓG H
CultureInfo
ÓÓH S
.
ÓÓS T
InvariantCulture
ÓÓT d
,
ÓÓd e
$str
ÓÓf s
,
ÓÓs t
color
ÓÓu z
.
ÓÓz {
r
ÓÓ{ |
,
ÓÓ| }
colorÓÓ~ É
.ÓÓÉ Ñ
gÓÓÑ Ö
,ÓÓÖ Ü
colorÓÓá å
.ÓÓå ç
bÓÓç é
)ÓÓé è
)ÓÓè ê
)ÓÓê ë
;ÓÓë í
sb
 
.
 

AppendLine
 !
(
! "
string
" (
.
( )
Format
) /
(
/ 0
CultureInfo
0 ;
.
; <
InvariantCulture
< L
,
L M
$str
N U
,
U V
color
W \
.
\ ]
a
] ^
)
^ _
)
_ `
;
` a
}
ÒÒ 
else
ÚÚ 
{
ÛÛ 
sb
ÙÙ 
.
ÙÙ 

AppendLine
ÙÙ !
(
ÙÙ! "
$str
ÙÙ" 2
)
ÙÙ2 3
;
ÙÙ3 4
sb
ıı 
.
ıı 

AppendLine
ıı !
(
ıı! "
$str
ıı" )
)
ıı) *
;
ıı* +
}
ˆˆ 
sb
¯¯ 
.
¯¯ 

AppendLine
¯¯ 
(
¯¯ 
)
¯¯ 
;
¯¯  
}
˘˘ 
return
˚˚ 
sb
˚˚ 
.
˚˚ 
ToString
˚˚ 
(
˚˚ 
)
˚˚  
;
˚˚  !
}
¸¸ 	
struct
˛˛ 
PositionColorKey
˛˛ 
:
˛˛  !
System
˛˛" (
.
˛˛( )

IEquatable
˛˛) 3
<
˛˛3 4
PositionColorKey
˛˛4 D
>
˛˛D E
{
ˇˇ 	
public
ÄÄ 
IntVec3
ÄÄ 
position
ÄÄ #
;
ÄÄ# $
public
ÅÅ 
IntVec4
ÅÅ 
color
ÅÅ  
;
ÅÅ  !
public
ÉÉ 
PositionColorKey
ÉÉ #
(
ÉÉ# $
Vector3
ÉÉ$ +
p
ÉÉ, -
,
ÉÉ- .
Color
ÉÉ/ 4
c
ÉÉ5 6
)
ÉÉ6 7
{
ÑÑ 
position
ÖÖ 
=
ÖÖ 
new
ÖÖ 
IntVec3
ÖÖ &
(
ÖÖ& '
p
ÖÖ' (
)
ÖÖ( )
;
ÖÖ) *
color
ÜÜ 
=
ÜÜ 
new
ÜÜ 
IntVec4
ÜÜ #
(
ÜÜ# $
c
ÜÜ$ %
)
ÜÜ% &
;
ÜÜ& '
}
áá 
public
ââ 
bool
ââ 
Equals
ââ 
(
ââ 
PositionColorKey
ââ /
other
ââ0 5
)
ââ5 6
{
ää 
return
ãã 
position
ãã 
.
ãã  
Equals
ãã  &
(
ãã& '
other
ãã' ,
.
ãã, -
position
ãã- 5
)
ãã5 6
&&
ãã7 9
color
ãã: ?
.
ãã? @
Equals
ãã@ F
(
ããF G
other
ããG L
.
ããL M
color
ããM R
)
ããR S
;
ããS T
}
åå 
public
éé 
override
éé 
bool
éé  
Equals
éé! '
(
éé' (
object
éé( .
obj
éé/ 2
)
éé2 3
{
èè 
if
êê 
(
êê 
ReferenceEquals
êê #
(
êê# $
null
êê$ (
,
êê( )
obj
êê* -
)
êê- .
)
êê. /
return
ëë 
false
ëë  
;
ëë  !
return
ìì 
obj
ìì 
is
ìì 
PositionColorKey
ìì .
&&
ìì/ 1
Equals
ìì2 8
(
ìì8 9
obj
ìì9 <
)
ìì< =
;
ìì= >
}
îî 
public
ññ 
override
ññ 
int
ññ 
GetHashCode
ññ  +
(
ññ+ ,
)
ññ, -
{
óó 
	unchecked
òò 
{
ôô 
return
öö 
(
öö 
position
öö $
.
öö$ %
GetHashCode
öö% 0
(
öö0 1
)
öö1 2
*
öö3 4
$num
öö5 8
)
öö8 9
^
öö: ;
color
öö< A
.
ööA B
GetHashCode
ööB M
(
ööM N
)
ööN O
;
ööO P
}
õõ 
}
úú 
}
ùù 	
static
†† 
int
†† 
AppendPositions
†† "
(
††" #
StringBuilder
††# 0
sb
††1 3
,
††3 4
Vector3
††5 <
[
††< =
]
††= >
	positions
††? H
,
††H I
Color
††J O
[
††O P
]
††P Q
colors
††R X
,
††X Y
bool
††Z ^
mergeCoincident
††_ n
,
††n o
bool
††p t
includeColors††u Ç
,††Ç É
out††Ñ á

Dictionary††à í
<††í ì
int††ì ñ
,††ñ ó
int††ò õ
>††õ ú"
coincidentIndexMap††ù Ø
)††Ø ∞
{
°° 	
var
¢¢ 
writeColors
¢¢ 
=
¢¢ 
includeColors
¢¢ +
&&
¢¢, .
colors
¢¢/ 5
!=
¢¢6 8
null
¢¢9 =
&&
¢¢> @
colors
¢¢A G
.
¢¢G H
Length
¢¢H N
==
¢¢O Q
	positions
¢¢R [
.
¢¢[ \
Length
¢¢\ b
;
¢¢b c

Dictionary
§§ 
<
§§ 
PositionColorKey
§§ '
,
§§' (
int
§§) ,
>
§§, -
common
§§. 4
=
§§5 6
new
§§7 :

Dictionary
§§; E
<
§§E F
PositionColorKey
§§F V
,
§§V W
int
§§X [
>
§§[ \
(
§§\ ]
)
§§] ^
;
§§^ _ 
coincidentIndexMap
•• 
=
••  
new
••! $

Dictionary
••% /
<
••/ 0
int
••0 3
,
••3 4
int
••5 8
>
••8 9
(
••9 :
)
••: ;
;
••; <
int
ßß 
index
ßß 
=
ßß 
$num
ßß 
;
ßß 
for
©© 
(
©© 
int
©© 
i
©© 
=
©© 
$num
©© 
,
©© 
c
©© 
=
©© 
	positions
©©  )
.
©©) *
Length
©©* 0
;
©©0 1
i
©©2 3
<
©©4 5
c
©©6 7
;
©©7 8
i
©©9 :
++
©©: <
)
©©< =
{
™™ 
var
´´ 
position
´´ 
=
´´ 
	positions
´´ (
[
´´( )
i
´´) *
]
´´* +
;
´´+ ,
var
¨¨ 
color
¨¨ 
=
¨¨ 
writeColors
¨¨ '
?
¨¨( )
colors
¨¨* 0
[
¨¨0 1
i
¨¨1 2
]
¨¨2 3
:
¨¨4 5
Color
¨¨6 ;
.
¨¨; <
white
¨¨< A
;
¨¨A B
var
ÆÆ 
key
ÆÆ 
=
ÆÆ 
new
ÆÆ 
PositionColorKey
ÆÆ .
(
ÆÆ. /
position
ÆÆ/ 7
,
ÆÆ7 8
color
ÆÆ9 >
)
ÆÆ> ?
;
ÆÆ? @
int
ØØ 
vertexIndex
ØØ 
;
ØØ  
if
±± 
(
±± 
mergeCoincident
±± #
)
±±# $
{
≤≤ 
if
≥≥ 
(
≥≥ 
!
≥≥ 
common
≥≥ 
.
≥≥  
TryGetValue
≥≥  +
(
≥≥+ ,
key
≥≥, /
,
≥≥/ 0
out
≥≥1 4
vertexIndex
≥≥5 @
)
≥≥@ A
)
≥≥A B
{
¥¥ 
vertexIndex
µµ #
=
µµ$ %
index
µµ& +
++
µµ+ -
;
µµ- .
common
∂∂ 
.
∂∂ 
Add
∂∂ "
(
∂∂" #
key
∂∂# &
,
∂∂& '
vertexIndex
∂∂( 3
)
∂∂3 4
;
∂∂4 5
}
∑∑ 
else
∏∏ 
{
ππ  
coincidentIndexMap
∫∫ *
.
∫∫* +
Add
∫∫+ .
(
∫∫. /
i
∫∫/ 0
,
∫∫0 1
vertexIndex
∫∫2 =
)
∫∫= >
;
∫∫> ?
continue
ªª  
;
ªª  !
}
ºº 
}
ΩΩ 
else
ææ 
{
øø 
vertexIndex
¿¿ 
=
¿¿  !
index
¿¿" '
++
¿¿' )
;
¿¿) *
}
¡¡  
coincidentIndexMap
√√ "
.
√√" #
Add
√√# &
(
√√& '
i
√√' (
,
√√( )
vertexIndex
√√* 5
)
√√5 6
;
√√6 7
if
≈≈ 
(
≈≈ 
writeColors
≈≈ 
)
≈≈  
{
∆∆ 
sb
«« 
.
«« 

AppendLine
«« !
(
««! "
string
««" (
.
««( )
Format
««) /
(
««/ 0
CultureInfo
««0 ;
.
««; <
InvariantCulture
««< L
,
««L M
$str
««N i
,
««i j
position
»»  
.
»»  !
x
»»! "
,
»»" #
position
……  
.
……  !
y
……! "
,
……" #
position
    
.
    !
z
  ! "
,
  " #
color
ÀÀ 
.
ÀÀ 
r
ÀÀ 
,
ÀÀ  
color
ÃÃ 
.
ÃÃ 
g
ÃÃ 
,
ÃÃ  
color
ÕÕ 
.
ÕÕ 
b
ÕÕ 
)
ÕÕ  
)
ÕÕ  !
;
ÕÕ! "
}
ŒŒ 
else
œœ 
{
–– 
sb
—— 
.
—— 

AppendLine
—— !
(
——! "
string
——" (
.
——( )
Format
——) /
(
——/ 0
CultureInfo
——0 ;
.
——; <
InvariantCulture
——< L
,
——L M
$str
——N ]
,
——] ^
position
““  
.
““  !
x
““! "
,
““" #
position
””  
.
””  !
y
””! "
,
””" #
position
‘‘  
.
‘‘  !
z
‘‘! "
)
‘‘" #
)
‘‘# $
;
‘‘$ %
}
’’ 
}
÷÷ 
return
ÿÿ 
index
ÿÿ 
;
ÿÿ 
}
ŸŸ 	
static
€€ 
int
€€ 
AppendArrayVec2
€€ "
(
€€" #
StringBuilder
€€# 0
sb
€€1 3
,
€€3 4
Vector2
€€5 <
[
€€< =
]
€€= >
array
€€? D
,
€€D E
string
€€F L
prefix
€€M S
,
€€S T
bool
€€U Y
mergeCoincident
€€Z i
,
€€i j
out
€€k n

Dictionary
€€o y
<
€€y z
int
€€z }
,
€€} ~
int€€ Ç
>€€Ç É"
coincidentIndexMap€€Ñ ñ
)€€ñ ó
{
‹‹ 	 
coincidentIndexMap
›› 
=
››  
new
››! $

Dictionary
››% /
<
››/ 0
int
››0 3
,
››3 4
int
››5 8
>
››8 9
(
››9 :
)
››: ;
;
››; <
if
ﬂﬂ 
(
ﬂﬂ 
array
ﬂﬂ 
==
ﬂﬂ 
null
ﬂﬂ 
)
ﬂﬂ 
return
‡‡ 
$num
‡‡ 
;
‡‡ 

Dictionary
‚‚ 
<
‚‚ 
IntVec2
‚‚ 
,
‚‚ 
int
‚‚  #
>
‚‚# $
common
‚‚% +
=
‚‚, -
new
‚‚. 1

Dictionary
‚‚2 <
<
‚‚< =
IntVec2
‚‚= D
,
‚‚D E
int
‚‚F I
>
‚‚I J
(
‚‚J K
)
‚‚K L
;
‚‚L M
int
„„ 
index
„„ 
=
„„ 
$num
„„ 
;
„„ 
for
ÂÂ 
(
ÂÂ 
int
ÂÂ 
i
ÂÂ 
=
ÂÂ 
$num
ÂÂ 
,
ÂÂ 
c
ÂÂ 
=
ÂÂ 
array
ÂÂ  %
.
ÂÂ% &
Length
ÂÂ& ,
;
ÂÂ, -
i
ÂÂ. /
<
ÂÂ0 1
c
ÂÂ2 3
;
ÂÂ3 4
i
ÂÂ5 6
++
ÂÂ6 8
)
ÂÂ8 9
{
ÊÊ 
var
ÁÁ 
texture
ÁÁ 
=
ÁÁ 
array
ÁÁ #
[
ÁÁ# $
i
ÁÁ$ %
]
ÁÁ% &
;
ÁÁ& '
var
ËË 
key
ËË 
=
ËË 
new
ËË 
IntVec2
ËË %
(
ËË% &
texture
ËË& -
)
ËË- .
;
ËË. /
int
ÈÈ 
vertexIndex
ÈÈ 
;
ÈÈ  
if
ÎÎ 
(
ÎÎ 
mergeCoincident
ÎÎ #
)
ÎÎ# $
{
ÏÏ 
if
ÌÌ 
(
ÌÌ 
!
ÌÌ 
common
ÌÌ 
.
ÌÌ  
TryGetValue
ÌÌ  +
(
ÌÌ+ ,
key
ÌÌ, /
,
ÌÌ/ 0
out
ÌÌ1 4
vertexIndex
ÌÌ5 @
)
ÌÌ@ A
)
ÌÌA B
{
ÓÓ 
vertexIndex
ÔÔ #
=
ÔÔ$ %
index
ÔÔ& +
++
ÔÔ+ -
;
ÔÔ- .
common
 
.
 
Add
 "
(
" #
key
# &
,
& '
vertexIndex
( 3
)
3 4
;
4 5
}
ÒÒ 
else
ÚÚ 
{
ÛÛ  
coincidentIndexMap
ÙÙ *
.
ÙÙ* +
Add
ÙÙ+ .
(
ÙÙ. /
i
ÙÙ/ 0
,
ÙÙ0 1
vertexIndex
ÙÙ2 =
)
ÙÙ= >
;
ÙÙ> ?
continue
ıı  
;
ıı  !
}
ˆˆ 
}
˜˜ 
else
¯¯ 
{
˘˘ 
vertexIndex
˙˙ 
=
˙˙  !
index
˙˙" '
++
˙˙' )
;
˙˙) *
}
˚˚  
coincidentIndexMap
˝˝ "
.
˝˝" #
Add
˝˝# &
(
˝˝& '
i
˝˝' (
,
˝˝( )
vertexIndex
˝˝* 5
)
˝˝5 6
;
˝˝6 7
sb
ˇˇ 
.
ˇˇ 

AppendLine
ˇˇ 
(
ˇˇ 
string
ˇˇ $
.
ˇˇ$ %
Format
ˇˇ% +
(
ˇˇ+ ,
CultureInfo
ˇˇ, 7
.
ˇˇ7 8
InvariantCulture
ˇˇ8 H
,
ˇˇH I
$str
ˇˇJ W
,
ˇˇW X
prefix
ÄÄ 
,
ÄÄ 
texture
ÅÅ 
.
ÅÅ 
x
ÅÅ 
,
ÅÅ 
texture
ÇÇ 
.
ÇÇ 
y
ÇÇ 
)
ÇÇ 
)
ÇÇ 
;
ÇÇ  
}
ÉÉ 
return
ÖÖ 
index
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
static
àà 
int
àà 
AppendArrayVec3
àà "
(
àà" #
StringBuilder
àà# 0
sb
àà1 3
,
àà3 4
Vector3
àà5 <
[
àà< =
]
àà= >
array
àà? D
,
ààD E
string
ààF L
prefix
ààM S
,
ààS T
bool
ààU Y
mergeCoincident
ààZ i
,
àài j
out
ààk n

Dictionary
àào y
<
àày z
int
ààz }
,
àà} ~
intàà Ç
>ààÇ É"
coincidentIndexMapààÑ ñ
)ààñ ó
{
ââ 	 
coincidentIndexMap
ää 
=
ää  
new
ää! $

Dictionary
ää% /
<
ää/ 0
int
ää0 3
,
ää3 4
int
ää5 8
>
ää8 9
(
ää9 :
)
ää: ;
;
ää; <
if
åå 
(
åå 
array
åå 
==
åå 
null
åå 
)
åå 
return
çç 
$num
çç 
;
çç 

Dictionary
èè 
<
èè 
IntVec3
èè 
,
èè 
int
èè  #
>
èè# $
common
èè% +
=
èè, -
new
èè. 1

Dictionary
èè2 <
<
èè< =
IntVec3
èè= D
,
èèD E
int
èèF I
>
èèI J
(
èèJ K
)
èèK L
;
èèL M
int
êê 
index
êê 
=
êê 
$num
êê 
;
êê 
for
íí 
(
íí 
int
íí 
i
íí 
=
íí 
$num
íí 
,
íí 
c
íí 
=
íí 
array
íí  %
.
íí% &
Length
íí& ,
;
íí, -
i
íí. /
<
íí0 1
c
íí2 3
;
íí3 4
i
íí5 6
++
íí6 8
)
íí8 9
{
ìì 
var
îî 
vec
îî 
=
îî 
array
îî 
[
îî  
i
îî  !
]
îî! "
;
îî" #
var
ïï 
key
ïï 
=
ïï 
new
ïï 
IntVec3
ïï %
(
ïï% &
vec
ïï& )
)
ïï) *
;
ïï* +
int
ññ 
vertexIndex
ññ 
;
ññ  
if
òò 
(
òò 
mergeCoincident
òò #
)
òò# $
{
ôô 
if
öö 
(
öö 
!
öö 
common
öö 
.
öö  
TryGetValue
öö  +
(
öö+ ,
key
öö, /
,
öö/ 0
out
öö1 4
vertexIndex
öö5 @
)
öö@ A
)
ööA B
{
õõ 
vertexIndex
úú #
=
úú$ %
index
úú& +
++
úú+ -
;
úú- .
common
ùù 
.
ùù 
Add
ùù "
(
ùù" #
key
ùù# &
,
ùù& '
vertexIndex
ùù( 3
)
ùù3 4
;
ùù4 5
}
ûû 
else
üü 
{
††  
coincidentIndexMap
°° *
.
°°* +
Add
°°+ .
(
°°. /
i
°°/ 0
,
°°0 1
vertexIndex
°°2 =
)
°°= >
;
°°> ?
continue
¢¢  
;
¢¢  !
}
££ 
}
§§ 
else
•• 
{
¶¶ 
vertexIndex
ßß 
=
ßß  !
index
ßß" '
++
ßß' )
;
ßß) *
}
®®  
coincidentIndexMap
™™ "
.
™™" #
Add
™™# &
(
™™& '
i
™™' (
,
™™( )
vertexIndex
™™* 5
)
™™5 6
;
™™6 7
sb
¨¨ 
.
¨¨ 

AppendLine
¨¨ 
(
¨¨ 
string
¨¨ $
.
¨¨$ %
Format
¨¨% +
(
¨¨+ ,
CultureInfo
¨¨, 7
.
¨¨7 8
InvariantCulture
¨¨8 H
,
¨¨H I
$str
¨¨J [
,
¨¨[ \
prefix
≠≠ 
,
≠≠ 
vec
ÆÆ 
.
ÆÆ 
x
ÆÆ 
,
ÆÆ 
vec
ØØ 
.
ØØ 
y
ØØ 
,
ØØ 
vec
∞∞ 
.
∞∞ 
z
∞∞ 
)
∞∞ 
)
∞∞ 
;
∞∞ 
}
±± 
return
≥≥ 
index
≥≥ 
;
≥≥ 
}
¥¥ 	
}
∂∂ 
}∑∑ ÓE
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\EditorMaterialUtility.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
static 

class !
EditorMaterialUtility &
{		 
static

 
readonly

 
string

 
[

 
]

  4
(k_StandardRenderPipelineDefaultMaterials

! I
=

J K
new

L O
string

P V
[

V W
]

W X
{ 	
$str $
,$ %
$str %
,% &
$str %
} 	
;	 

static 
bool 
s_Initialized !
;! "
static 
Material  
s_SrpDefaultMaterial ,
;, -
[ 	
UserSetting	 
( 
$str $
,$ %
$str& 0
,0 1
$str2 o
)o p
]p q
static 
Pref 
< 
Material 
> 
s_DefaultMaterial /
=0 1
new2 5
Pref6 :
<: ;
Material; C
>C D
(D E
$strE X
,X Y
nullZ ^
)^ _
;_ `
static 
void 
Init 
( 
) 
{ 	
if 
( 
s_Initialized 
) 
return 
; 
s_Initialized 
= 
true  
;  ! 
s_SrpDefaultMaterial  
=! "
null# '
;' (
for!! 
(!! 
int!! 
i!! 
=!! 
$num!! 
,!! 
c!! 
=!! 4
(k_StandardRenderPipelineDefaultMaterials!!  H
.!!H I
Length!!I O
;!!O P
i!!Q R
<!!S T
c!!U V
&&!!W Y 
s_SrpDefaultMaterial!!Z n
==!!o q
null!!r v
;!!v w
i!!x y
++!!y {
)!!{ |
{"" 
string## 
search## 
=## 4
(k_StandardRenderPipelineDefaultMaterials##  H
[##H I
i##I J
]##J K
+##L M
$str##N [
;##[ \
string$$ 
[$$ 
]$$ 
	materials$$ "
=$$# $
AssetDatabase$$% 2
.$$2 3

FindAssets$$3 =
($$= >
search$$> D
,$$D E
new$$F I
[$$I J
]$$J K
{$$L M
$str$$N V
,$$V W
$str$$X b
}$$c d
)$$d e
;$$e f
foreach&& 
(&& 
var&& 
asset&& "
in&&# %
	materials&&& /
)&&/ 0
{''  
s_SrpDefaultMaterial(( (
=(() *
AssetDatabase((+ 8
.((8 9
LoadAssetAtPath((9 H
<((H I
Material((I Q
>((Q R
(((R S
AssetDatabase((S `
.((` a
GUIDToAssetPath((a p
(((p q
asset((q v
)((v w
)((w x
;((x y
if** 
(**  
s_SrpDefaultMaterial** ,
!=**- /
null**0 4
&&++  
s_SrpDefaultMaterial++ /
.++/ 0
shader++0 6
!=++7 9
null++: >
&&,,  
s_SrpDefaultMaterial,, /
.,,/ 0
shader,,0 6
.,,6 7
isSupported,,7 B
),,B C
break-- 
;--  
s_SrpDefaultMaterial// (
=//) *
null//+ /
;/// 0
}00 
}11 
}22 	
internal44 
static44 
	Texture2D44 !
GetPreviewTexture44" 3
(443 4
Material444 <
material44= E
)44E F
{55 	
if66 
(66 
material66 
==66 
null66  
||66! #
material66$ ,
.66, -
shader66- 3
==664 6
null667 ;
)66; <
return77 
null77 
;77 
	Texture2D99 
best99 
=99 
null99 !
;99! "
for;; 
(;; 
int;; 
i;; 
=;; 
$num;; 
;;; 
i;; 
<;; 

ShaderUtil;;  *
.;;* +
GetPropertyCount;;+ ;
(;;; <
material;;< D
.;;D E
shader;;E K
);;K L
;;;L M
i;;N O
++;;O Q
);;Q R
{<< 
if== 
(== 

ShaderUtil== 
.== 
GetPropertyType== .
(==. /
material==/ 7
.==7 8
shader==8 >
,==> ?
i==@ A
)==A B
====C E

ShaderUtil==F P
.==P Q
ShaderPropertyType==Q c
.==c d
TexEnv==d j
)==j k
{>> 
string?? 
propertyName?? '
=??( )

ShaderUtil??* 4
.??4 5
GetPropertyName??5 D
(??D E
material??E M
.??M N
shader??N T
,??T U
i??V W
)??W X
;??X Y
	Texture2DAA 
texAA !
=AA" #
materialAA$ ,
.AA, -

GetTextureAA- 7
(AA7 8
propertyNameAA8 D
)AAD E
asAAF H
	Texture2DAAI R
;AAR S
ifCC 
(CC 
texCC 
!=CC 
nullCC #
)CC# $
{DD 
ifEE 
(EE 
propertyNameEE (
.EE( )
ContainsEE) 1
(EE1 2
$strEE2 <
)EE< =
||EE> @
propertyNameEEA M
.EEM N
ContainsEEN V
(EEV W
$strEEW _
)EE_ `
)EE` a
returnFF "
texFF# &
;FF& '
elseGG 
ifGG 
(GG  !
bestGG! %
==GG& (
nullGG) -
)GG- .
bestHH  
=HH! "
texHH# &
;HH& '
}II 
}JJ 
}KK 
returnMM 
bestMM 
;MM 
}NN 	
internalSS 
staticSS 
MaterialSS  
GetActiveSelectionSS! 3
(SS3 4
)SS4 5
{TT 	
varUU 
meshUU 
=UU 
MeshSelectionUU $
.UU$ %

activeMeshUU% /
;UU/ 0
ifWW 
(WW 
meshWW 
!=WW 
nullWW 
)WW 
{XX 
varYY 
faceYY 
=YY 
MeshSelectionYY (
.YY( )

activeFaceYY) 3
;YY3 4
if[[ 
([[ 
face[[ 
==[[ 
null[[  
)[[  !
return\\ 
mesh\\ 
.\\  
renderer\\  (
.\\( )
sharedMaterial\\) 7
;\\7 8
var^^ 
sharedMaterials^^ #
=^^$ %
mesh^^& *
.^^* +
renderer^^+ 3
.^^3 4
sharedMaterials^^4 C
;^^C D
if`` 
(`` 
sharedMaterials`` #
!=``$ &
null``' +
)``+ ,
{aa 
varbb 
lengthbb 
=bb  
sharedMaterialsbb! 0
.bb0 1
Lengthbb1 7
;bb7 8
returncc 
sharedMaterialscc *
[cc* +
Systemcc+ 1
.cc1 2
Mathcc2 6
.cc6 7
Mincc7 :
(cc: ;
facecc; ?
.cc? @
submeshIndexcc@ L
,ccL M
lengthccN T
-ccU V
$numccW X
)ccX Y
]ccY Z
;ccZ [
}dd 
}ee 
returngg 
nullgg 
;gg 
}hh 	
internaljj 
staticjj 
Materialjj  
GetUserMaterialjj! 0
(jj0 1
)jj1 2
{kk 	
varll 
matll 
=ll 
(ll 
Materialll 
)ll  
s_DefaultMaterialll  1
;ll1 2
ifmm 
(mm 
matmm 
!=mm 
nullmm 
)mm 
returnnn 
matnn 
;nn 
returnoo 
GetDefaultMaterialoo %
(oo% &
)oo& '
;oo' (
}pp 	
internalrr 
staticrr 
Materialrr  
GetDefaultMaterialrr! 3
(rr3 4
)rr4 5
{ss 	
Inittt 
(tt 
)tt 
;tt 
ifvv 
(vv  
s_SrpDefaultMaterialvv $
!=vv% '
nullvv( ,
)vv, -
returnww  
s_SrpDefaultMaterialww +
;ww+ ,
returnyy 
BuiltinMaterialsyy #
.yy# $
defaultMaterialyy$ 3
;yy3 4
}zz 	
}{{ 
}|| Ä
ôD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\PreferencesInternal.cs
	namespace

 	
UnityEditor


 
.

 

ProBuilder

  
{ 
enum 
PreferenceLocation	 
{ 
Project 
, 
Global 
} 
; 
[ 
System 
. 
Obsolete 
( 
$str >
)> ?
]? @
static   

class   
PreferencesInternal   $
{!! 
const"" 
string"" 
k_PrefsAssetName"" %
=""& '
$str""( E
;""E F
static$$ 

Dictionary$$ 
<$$ 
string$$  
,$$  !
bool$$" &
>$$& '
s_BoolDefaults$$( 6
=$$7 8
new$$9 <

Dictionary$$= G
<$$G H
string$$H N
,$$N O
bool$$P T
>$$T U
($$U V
)$$V W
{%% 	
}&& 	
;&&	 

static(( 

Dictionary(( 
<(( 
string((  
,((  !
float((" '
>((' (
s_FloatDefaults(() 8
=((9 :
new((; >

Dictionary((? I
<((I J
string((J P
,((P Q
float((R W
>((W X
(((X Y
)((Y Z
{)) 	
}** 	
;**	 

static,, 

Dictionary,, 
<,, 
string,,  
,,,  !
int,," %
>,,% &
s_IntDefaults,,' 4
=,,5 6
new,,7 :

Dictionary,,; E
<,,E F
string,,F L
,,,L M
int,,N Q
>,,Q R
(,,R S
),,S T
{-- 	
}.. 	
;..	 

static00 

Dictionary00 
<00 
string00  
,00  !
Color00" '
>00' (
s_ColorDefaults00) 8
=009 :
new00; >

Dictionary00? I
<00I J
string00J P
,00P Q
Color00R W
>00W X
(00X Y
)00Y Z
{11 	
}22 	
;22	 

static44 

Dictionary44 
<44 
string44  
,44  !
string44" (
>44( )
s_StringDefaults44* :
=44; <
new44= @

Dictionary44A K
<44K L
string44L R
,44R S
string44T Z
>44Z [
(44[ \
)44\ ]
{55 	
}66 	
;66	 

static88  
PreferenceDictionary88 #
s_Preferences88$ 1
=882 3
null884 8
;888 9
static99 
bool99 
s_Initialized99 !
;99! "
static;; 
void;; !
LoadPreferencesObject;; )
(;;) *
);;* +
{<< 	
string== 
preferencesPath== "
===# $
FileUtility==% 0
.==0 1!
GetLocalDataDirectory==1 F
(==F G
)==G H
+==I J
k_PrefsAssetName==K [
;==[ \
s_Preferences@@ 
=@@ 
AssetDatabase@@ )
.@@) *
LoadAssetAtPath@@* 9
<@@9 : 
PreferenceDictionary@@: N
>@@N O
(@@O P
preferencesPath@@P _
)@@_ `
;@@` a
ifCC 
(CC 
s_PreferencesCC 
==CC  
nullCC! %
)CC% &
s_PreferencesDD 
=DD 
FileUtilityDD  +
.DD+ ,
FindAssetOfTypeDD, ;
<DD; < 
PreferenceDictionaryDD< P
>DDP Q
(DDQ R
)DDR S
;DDS T
}EE 	
publicJJ 
staticJJ  
PreferenceDictionaryJJ *
preferencesJJ+ 6
{KK 	
getLL 
{MM 
ifNN 
(NN 
!NN 
s_InitializedNN "
)NN" #
{OO !
LoadPreferencesObjectPP )
(PP) *
)PP* +
;PP+ ,
s_InitializedQQ !
=QQ" #
trueQQ$ (
;QQ( )
}RR 
returnTT 
s_PreferencesTT $
;TT$ %
}UU 
}VV 	
public[[ 
static[[ 
bool[[ 
HasKey[[ !
([[! "
string[[" (
key[[) ,
)[[, -
{\\ 	
return]] 
(]] 
s_Preferences]] !
!=]]" $
null]]% )
&&]]* ,
s_Preferences]]- :
.]]: ;
HasKey]]; A
(]]A B
key]]B E
)]]E F
)]]F G
||]]H J
EditorPrefs]]K V
.]]V W
HasKey]]W ]
(]]] ^
key]]^ a
)]]a b
;]]b c
}^^ 	
publicdd 
staticdd 
voiddd 
	DeleteKeydd $
(dd$ %
stringdd% +
keydd, /
)dd/ 0
{ee 	
ifff 
(ff 
preferencesff 
!=ff 
nullff #
)ff# $
preferencesgg 
.gg 
	DeleteKeygg %
(gg% &
keygg& )
)gg) *
;gg* +
EditorPrefshh 
.hh 
	DeleteKeyhh !
(hh! "
keyhh" %
)hh% &
;hh& '
}ii 	
publicpp 
staticpp 
boolpp 
GetBoolpp "
(pp" #
stringpp# )
prefpp* .
)pp. /
{qq 	
ifss 
(ss 
s_BoolDefaultsss 
.ss 
ContainsKeyss *
(ss* +
prefss+ /
)ss/ 0
)ss0 1
returntt 
GetBooltt 
(tt 
preftt #
,tt# $
s_BoolDefaultstt% 3
[tt3 4
preftt4 8
]tt8 9
)tt9 :
;tt: ;
returnuu 
GetBooluu 
(uu 
prefuu 
,uu  
trueuu! %
)uu% &
;uu& '
}vv 	
public~~ 
static~~ 
bool~~ 
GetBool~~ "
(~~" #
string~~# )
key~~* -
,~~- .
bool~~/ 3
fallback~~4 <
)~~< =
{ 	
if
ÄÄ 
(
ÄÄ 
s_Preferences
ÄÄ 
!=
ÄÄ  
null
ÄÄ! %
&&
ÄÄ& (
preferences
ÄÄ) 4
.
ÄÄ4 5
HasKey
ÄÄ5 ;
<
ÄÄ; <
bool
ÄÄ< @
>
ÄÄ@ A
(
ÄÄA B
key
ÄÄB E
)
ÄÄE F
)
ÄÄF G
return
ÅÅ 
preferences
ÅÅ "
.
ÅÅ" #
GetBool
ÅÅ# *
(
ÅÅ* +
key
ÅÅ+ .
,
ÅÅ. /
fallback
ÅÅ0 8
)
ÅÅ8 9
;
ÅÅ9 :
return
ÇÇ 
EditorPrefs
ÇÇ 
.
ÇÇ 
GetBool
ÇÇ &
(
ÇÇ& '
key
ÇÇ' *
,
ÇÇ* +
fallback
ÇÇ, 4
)
ÇÇ4 5
;
ÇÇ5 6
}
ÉÉ 	
public
ää 
static
ää 
float
ää 
GetFloat
ää $
(
ää$ %
string
ää% +
key
ää, /
)
ää/ 0
{
ãã 	
if
åå 
(
åå 
s_FloatDefaults
åå 
.
åå  
ContainsKey
åå  +
(
åå+ ,
key
åå, /
)
åå/ 0
)
åå0 1
return
çç 
GetFloat
çç 
(
çç  
key
çç  #
,
çç# $
s_FloatDefaults
çç% 4
[
çç4 5
key
çç5 8
]
çç8 9
)
çç9 :
;
çç: ;
return
éé 
GetFloat
éé 
(
éé 
key
éé 
,
éé  
$num
éé! #
)
éé# $
;
éé$ %
}
èè 	
public
ëë 
static
ëë 
float
ëë 
GetFloat
ëë $
(
ëë$ %
string
ëë% +
key
ëë, /
,
ëë/ 0
float
ëë1 6
fallback
ëë7 ?
)
ëë? @
{
íí 	
if
ìì 
(
ìì 
s_Preferences
ìì 
!=
ìì  
null
ìì! %
&&
ìì& (
preferences
ìì) 4
.
ìì4 5
HasKey
ìì5 ;
<
ìì; <
float
ìì< A
>
ììA B
(
ììB C
key
ììC F
)
ììF G
)
ììG H
return
îî 
preferences
îî "
.
îî" #
GetFloat
îî# +
(
îî+ ,
key
îî, /
,
îî/ 0
fallback
îî1 9
)
îî9 :
;
îî: ;
return
ïï 
EditorPrefs
ïï 
.
ïï 
GetFloat
ïï '
(
ïï' (
key
ïï( +
,
ïï+ ,
fallback
ïï- 5
)
ïï5 6
;
ïï6 7
}
ññ 	
public
ùù 
static
ùù 
int
ùù 
GetInt
ùù  
(
ùù  !
string
ùù! '
key
ùù( +
)
ùù+ ,
{
ûû 	
if
üü 
(
üü 
s_IntDefaults
üü 
.
üü 
ContainsKey
üü )
(
üü) *
key
üü* -
)
üü- .
)
üü. /
return
†† 
GetInt
†† 
(
†† 
key
†† !
,
††! "
s_IntDefaults
††# 0
[
††0 1
key
††1 4
]
††4 5
)
††5 6
;
††6 7
return
°° 
GetInt
°° 
(
°° 
key
°° 
,
°° 
$num
°°  
)
°°  !
;
°°! "
}
¢¢ 	
public
§§ 
static
§§ 
int
§§ 
GetInt
§§  
(
§§  !
string
§§! '
key
§§( +
,
§§+ ,
int
§§- 0
fallback
§§1 9
)
§§9 :
{
•• 	
if
¶¶ 
(
¶¶ 
s_Preferences
¶¶ 
!=
¶¶  
null
¶¶! %
&&
¶¶& (
preferences
¶¶) 4
.
¶¶4 5
HasKey
¶¶5 ;
<
¶¶; <
int
¶¶< ?
>
¶¶? @
(
¶¶@ A
key
¶¶A D
)
¶¶D E
)
¶¶E F
return
ßß 
preferences
ßß "
.
ßß" #
GetInt
ßß# )
(
ßß) *
key
ßß* -
,
ßß- .
fallback
ßß/ 7
)
ßß7 8
;
ßß8 9
return
®® 
EditorPrefs
®® 
.
®® 
GetInt
®® %
(
®®% &
key
®®& )
,
®®) *
fallback
®®+ 3
)
®®3 4
;
®®4 5
}
©© 	
public
±± 
static
±± 
T
±± 
GetEnum
±± 
<
±±  
T
±±  !
>
±±! "
(
±±" #
string
±±# )
key
±±* -
)
±±- .
where
±±/ 4
T
±±5 6
:
±±7 8
struct
±±9 ?
,
±±? @
System
±±A G
.
±±G H
IConvertible
±±H T
{
≤≤ 	
return
≥≥ 
(
≥≥ 
T
≥≥ 
)
≥≥ 
(
≥≥ 
object
≥≥ 
)
≥≥ 
GetInt
≥≥ $
(
≥≥$ %
key
≥≥% (
)
≥≥( )
;
≥≥) *
}
¥¥ 	
public
ªª 
static
ªª 
Color
ªª 
GetColor
ªª $
(
ªª$ %
string
ªª% +
key
ªª, /
)
ªª/ 0
{
ºº 	
if
ΩΩ 
(
ΩΩ 
s_ColorDefaults
ΩΩ 
.
ΩΩ  
ContainsKey
ΩΩ  +
(
ΩΩ+ ,
key
ΩΩ, /
)
ΩΩ/ 0
)
ΩΩ0 1
return
ææ 
GetColor
ææ 
(
ææ  
key
ææ  #
,
ææ# $
s_ColorDefaults
ææ% 4
[
ææ4 5
key
ææ5 8
]
ææ8 9
)
ææ9 :
;
ææ: ;
return
øø 
GetColor
øø 
(
øø 
key
øø 
,
øø  
Color
øø! &
.
øø& '
white
øø' ,
)
øø, -
;
øø- .
}
¿¿ 	
public
¬¬ 
static
¬¬ 
Color
¬¬ 
GetColor
¬¬ $
(
¬¬$ %
string
¬¬% +
key
¬¬, /
,
¬¬/ 0
Color
¬¬1 6
fallback
¬¬7 ?
)
¬¬? @
{
√√ 	
if
ƒƒ 
(
ƒƒ 
s_Preferences
ƒƒ 
!=
ƒƒ  
null
ƒƒ! %
&&
ƒƒ& (
preferences
ƒƒ) 4
.
ƒƒ4 5
HasKey
ƒƒ5 ;
<
ƒƒ; <
Color
ƒƒ< A
>
ƒƒA B
(
ƒƒB C
key
ƒƒC F
)
ƒƒF G
)
ƒƒG H
return
≈≈ 
preferences
≈≈ "
.
≈≈" #
GetColor
≈≈# +
(
≈≈+ ,
key
≈≈, /
,
≈≈/ 0
fallback
≈≈1 9
)
≈≈9 :
;
≈≈: ;
InternalUtility
∆∆ 
.
∆∆ 
TryParseColor
∆∆ )
(
∆∆) *
EditorPrefs
∆∆* 5
.
∆∆5 6
	GetString
∆∆6 ?
(
∆∆? @
key
∆∆@ C
)
∆∆C D
,
∆∆D E
ref
∆∆F I
fallback
∆∆J R
)
∆∆R S
;
∆∆S T
return
«« 
fallback
«« 
;
«« 
}
»» 	
public
œœ 
static
œœ 
string
œœ 
	GetString
œœ &
(
œœ& '
string
œœ' -
key
œœ. 1
)
œœ1 2
{
–– 	
if
—— 
(
—— 
s_StringDefaults
——  
.
——  !
ContainsKey
——! ,
(
——, -
key
——- 0
)
——0 1
)
——1 2
return
““ 
	GetString
““  
(
““  !
key
““! $
,
““$ %
s_StringDefaults
““& 6
[
““6 7
key
““7 :
]
““: ;
)
““; <
;
““< =
return
”” 
	GetString
”” 
(
”” 
key
””  
,
””  !
string
””" (
.
””( )
Empty
””) .
)
””. /
;
””/ 0
}
‘‘ 	
public
÷÷ 
static
÷÷ 
string
÷÷ 
	GetString
÷÷ &
(
÷÷& '
string
÷÷' -
key
÷÷. 1
,
÷÷1 2
string
÷÷3 9
fallback
÷÷: B
)
÷÷B C
{
◊◊ 	
if
ÿÿ 
(
ÿÿ 
s_Preferences
ÿÿ 
!=
ÿÿ  
null
ÿÿ! %
&&
ÿÿ& (
preferences
ÿÿ) 4
.
ÿÿ4 5
HasKey
ÿÿ5 ;
<
ÿÿ; <
string
ÿÿ< B
>
ÿÿB C
(
ÿÿC D
key
ÿÿD G
)
ÿÿG H
)
ÿÿH I
return
ŸŸ 
preferences
ŸŸ "
.
ŸŸ" #
	GetString
ŸŸ# ,
(
ŸŸ, -
key
ŸŸ- 0
,
ŸŸ0 1
fallback
ŸŸ2 :
)
ŸŸ: ;
;
ŸŸ; <
return
⁄⁄ 
EditorPrefs
⁄⁄ 
.
⁄⁄ 
	GetString
⁄⁄ (
(
⁄⁄( )
key
⁄⁄) ,
,
⁄⁄, -
fallback
⁄⁄. 6
)
⁄⁄6 7
;
⁄⁄7 8
}
€€ 	
public
›› 
static
›› 
T
›› 
GetValue
››  
<
››  !
T
››! "
>
››" #
(
››# $
string
››$ *
key
››+ .
,
››. /
T
››0 1
fallback
››2 :
=
››; <
default
››= D
(
››D E
T
››E F
)
››F G
)
››G H
{
ﬁﬁ 	
var
ﬂﬂ 
str
ﬂﬂ 
=
ﬂﬂ 
	GetString
ﬂﬂ 
(
ﬂﬂ  
key
ﬂﬂ  #
,
ﬂﬂ# $
null
ﬂﬂ% )
)
ﬂﬂ) *
;
ﬂﬂ* +
if
·· 
(
·· 
string
·· 
.
·· 
IsNullOrEmpty
·· $
(
··$ %
str
··% (
)
··( )
)
··) *
return
‚‚ 
fallback
‚‚ 
;
‚‚  
return
‰‰ 
JsonUtility
‰‰ 
.
‰‰ 
FromJson
‰‰ '
<
‰‰' (
T
‰‰( )
>
‰‰) *
(
‰‰* +
str
‰‰+ .
)
‰‰. /
;
‰‰/ 0
}
ÂÂ 	
public
ÁÁ 
static
ÁÁ 
Material
ÁÁ 
GetMaterial
ÁÁ *
(
ÁÁ* +
string
ÁÁ+ 1
key
ÁÁ2 5
)
ÁÁ5 6
{
ËË 	
if
ÈÈ 
(
ÈÈ 
preferences
ÈÈ 
!=
ÈÈ 
null
ÈÈ #
&&
ÈÈ$ &
preferences
ÈÈ' 2
.
ÈÈ2 3
HasKey
ÈÈ3 9
<
ÈÈ9 :
Material
ÈÈ: B
>
ÈÈB C
(
ÈÈC D
key
ÈÈD G
)
ÈÈG H
)
ÈÈH I
return
ÍÍ 
preferences
ÍÍ "
.
ÍÍ" #
GetMaterial
ÍÍ# .
(
ÍÍ. /
key
ÍÍ/ 2
)
ÍÍ2 3
;
ÍÍ3 4
return
ÏÏ 
AssetDatabase
ÏÏ  
.
ÏÏ  !
LoadAssetAtPath
ÏÏ! 0
<
ÏÏ0 1
Material
ÏÏ1 9
>
ÏÏ9 :
(
ÏÏ: ;
EditorPrefs
ÏÏ; F
.
ÏÏF G
	GetString
ÏÏG P
(
ÏÏP Q
key
ÏÏQ T
)
ÏÏT U
)
ÏÏU V
;
ÏÏV W
}
ÌÌ 	
internal
ÔÔ 
static
ÔÔ 
bool
ÔÔ 
TryGetValue
ÔÔ (
(
ÔÔ( )
string
ÔÔ) /
key
ÔÔ0 3
,
ÔÔ3 4
System
ÔÔ5 ;
.
ÔÔ; <
Type
ÔÔ< @
type
ÔÔA E
,
ÔÔE F
out
ÔÔG J
object
ÔÔK Q
value
ÔÔR W
)
ÔÔW X
{
 	
value
ÒÒ 
=
ÒÒ 
null
ÒÒ 
;
ÒÒ 
if
ÛÛ 
(
ÛÛ 
!
ÛÛ 
HasKey
ÛÛ 
(
ÛÛ 
key
ÛÛ 
)
ÛÛ 
)
ÛÛ 
return
ÙÙ 
false
ÙÙ 
;
ÙÙ 
if
ˆˆ 
(
ˆˆ 
type
ˆˆ 
==
ˆˆ 
typeof
ˆˆ 
(
ˆˆ 
bool
ˆˆ #
)
ˆˆ# $
)
ˆˆ$ %
value
˜˜ 
=
˜˜ 
GetBool
˜˜ 
(
˜˜  
key
˜˜  #
)
˜˜# $
;
˜˜$ %
else
¯¯ 
if
¯¯ 
(
¯¯ 
type
¯¯ 
==
¯¯ 
typeof
¯¯ #
(
¯¯# $
float
¯¯$ )
)
¯¯) *
)
¯¯* +
value
˘˘ 
=
˘˘ 
GetFloat
˘˘  
(
˘˘  !
key
˘˘! $
)
˘˘$ %
;
˘˘% &
else
˙˙ 
if
˙˙ 
(
˙˙ 
type
˙˙ 
==
˙˙ 
typeof
˙˙ #
(
˙˙# $
int
˙˙$ '
)
˙˙' (
)
˙˙( )
value
˚˚ 
=
˚˚ 
GetInt
˚˚ 
(
˚˚ 
key
˚˚ "
)
˚˚" #
;
˚˚# $
else
¸¸ 
if
¸¸ 
(
¸¸ 
type
¸¸ 
==
¸¸ 
typeof
¸¸ #
(
¸¸# $
string
¸¸$ *
)
¸¸* +
)
¸¸+ ,
value
˝˝ 
=
˝˝ 
	GetString
˝˝ !
(
˝˝! "
key
˝˝" %
)
˝˝% &
;
˝˝& '
else
ÇÇ 
if
ÇÇ 
(
ÇÇ 
type
ÇÇ 
==
ÇÇ 
typeof
ÇÇ #
(
ÇÇ# $
Color
ÇÇ$ )
)
ÇÇ) *
)
ÇÇ* +
value
ÉÉ 
=
ÉÉ 
GetColor
ÉÉ  
(
ÉÉ  !
key
ÉÉ! $
)
ÉÉ$ %
;
ÉÉ% &
else
ÑÑ 
if
ÑÑ 
(
ÑÑ 
type
ÑÑ 
==
ÑÑ 
typeof
ÑÑ #
(
ÑÑ# $
Material
ÑÑ$ ,
)
ÑÑ, -
)
ÑÑ- .
value
ÖÖ 
=
ÖÖ 
GetMaterial
ÖÖ #
(
ÖÖ# $
key
ÖÖ$ '
)
ÖÖ' (
;
ÖÖ( )
else
ÜÜ 
if
ÜÜ 
(
ÜÜ 
type
ÜÜ 
==
ÜÜ 
typeof
ÜÜ #
(
ÜÜ# $
ColliderType
ÜÜ$ 0
)
ÜÜ0 1
)
ÜÜ1 2
value
áá 
=
áá 
GetEnum
áá 
<
áá  
ColliderType
áá  ,
>
áá, -
(
áá- .
key
áá. 1
)
áá1 2
;
áá2 3
else
àà 
if
àà 
(
àà 
type
àà 
==
àà 
typeof
àà #
(
àà# $
ShadowCastingMode
àà$ 5
)
àà5 6
)
àà6 7
value
ââ 
=
ââ 
GetEnum
ââ 
<
ââ  
ShadowCastingMode
ââ  1
>
ââ1 2
(
ââ2 3
key
ââ3 6
)
ââ6 7
;
ââ7 8
else
ää 
if
ää 
(
ää 
type
ää 
==
ää 
typeof
ää #
(
ää# $
LogLevel
ää$ ,
)
ää, -
)
ää- .
value
ãã 
=
ãã 
GetEnum
ãã 
<
ãã  
LogLevel
ãã  (
>
ãã( )
(
ãã) *
key
ãã* -
)
ãã- .
;
ãã. /
else
åå 
if
åå 
(
åå 
type
åå 
==
åå 
typeof
åå #
(
åå# $
	LogOutput
åå$ -
)
åå- .
)
åå. /
value
çç 
=
çç 
GetEnum
çç 
<
çç  
	LogOutput
çç  )
>
çç) *
(
çç* +
key
çç+ .
)
çç. /
;
çç/ 0
else
éé 
if
éé 
(
éé 
type
éé 
==
éé 
typeof
éé #
(
éé# $"
SceneToolbarLocation
éé$ 8
)
éé8 9
)
éé9 :
value
èè 
=
èè 
GetEnum
èè 
<
èè  "
SceneToolbarLocation
èè  4
>
èè4 5
(
èè5 6
key
èè6 9
)
èè9 :
;
èè: ;
else
êê 
return
ëë 
false
ëë 
;
ëë 
return
ìì 
true
ìì 
;
ìì 
}
îî 	
public
©© 
static
©© 
void
©© 
SetInt
©© !
(
©©! "
string
©©" (
key
©©) ,
,
©©, -
int
©©. 1
value
©©2 7
,
©©7 8 
PreferenceLocation
©©9 K
location
©©L T
=
©©U V 
PreferenceLocation
©©W i
.
©©i j
Project
©©j q
)
©©q r
{
™™ 	
if
´´ 
(
´´ 
location
´´ 
==
´´  
PreferenceLocation
´´ .
.
´´. /
Project
´´/ 6
)
´´6 7
{
¨¨ 
if
≠≠ 
(
≠≠ 
preferences
≠≠ 
==
≠≠  "
null
≠≠# '
)
≠≠' (
return
ÆÆ 
;
ÆÆ 
preferences
ØØ 
.
ØØ 
SetInt
ØØ "
(
ØØ" #
key
ØØ# &
,
ØØ& '
value
ØØ( -
)
ØØ- .
;
ØØ. /
UnityEditor
∞∞ 
.
∞∞ 
EditorUtility
∞∞ )
.
∞∞) *
SetDirty
∞∞* 2
(
∞∞2 3
preferences
∞∞3 >
)
∞∞> ?
;
∞∞? @
}
±± 
else
≤≤ 
{
≥≥ 
EditorPrefs
¥¥ 
.
¥¥ 
SetInt
¥¥ "
(
¥¥" #
key
¥¥# &
,
¥¥& '
value
¥¥( -
)
¥¥- .
;
¥¥. /
}
µµ 
}
∂∂ 	
public
ºº 
static
ºº 
void
ºº 
SetFloat
ºº #
(
ºº# $
string
ºº$ *
key
ºº+ .
,
ºº. /
float
ºº0 5
value
ºº6 ;
,
ºº; < 
PreferenceLocation
ºº= O
location
ººP X
=
ººY Z 
PreferenceLocation
ºº[ m
.
ººm n
Project
ººn u
)
ººu v
{
ΩΩ 	
if
ææ 
(
ææ 
location
ææ 
==
ææ  
PreferenceLocation
ææ .
.
ææ. /
Project
ææ/ 6
)
ææ6 7
{
øø 
if
¿¿ 
(
¿¿ 
preferences
¿¿ 
==
¿¿  "
null
¿¿# '
)
¿¿' (
return
¡¡ 
;
¡¡ 
preferences
¬¬ 
.
¬¬ 
SetFloat
¬¬ $
(
¬¬$ %
key
¬¬% (
,
¬¬( )
value
¬¬* /
)
¬¬/ 0
;
¬¬0 1
UnityEditor
√√ 
.
√√ 
EditorUtility
√√ )
.
√√) *
SetDirty
√√* 2
(
√√2 3
preferences
√√3 >
)
√√> ?
;
√√? @
}
ƒƒ 
else
≈≈ 
{
∆∆ 
EditorPrefs
«« 
.
«« 
SetFloat
«« $
(
««$ %
key
««% (
,
««( )
value
««* /
)
««/ 0
;
««0 1
}
»» 
}
…… 	
public
œœ 
static
œœ 
void
œœ 
SetBool
œœ "
(
œœ" #
string
œœ# )
key
œœ* -
,
œœ- .
bool
œœ/ 3
value
œœ4 9
,
œœ9 : 
PreferenceLocation
œœ; M
location
œœN V
=
œœW X 
PreferenceLocation
œœY k
.
œœk l
Project
œœl s
)
œœs t
{
–– 	
if
—— 
(
—— 
location
—— 
==
——  
PreferenceLocation
—— .
.
——. /
Project
——/ 6
)
——6 7
{
““ 
if
”” 
(
”” 
preferences
”” 
==
””  "
null
””# '
)
””' (
return
‘‘ 
;
‘‘ 
preferences
’’ 
.
’’ 
SetBool
’’ #
(
’’# $
key
’’$ '
,
’’' (
value
’’) .
)
’’. /
;
’’/ 0
UnityEditor
÷÷ 
.
÷÷ 
EditorUtility
÷÷ )
.
÷÷) *
SetDirty
÷÷* 2
(
÷÷2 3
preferences
÷÷3 >
)
÷÷> ?
;
÷÷? @
}
◊◊ 
else
ÿÿ 
{
ŸŸ 
EditorPrefs
⁄⁄ 
.
⁄⁄ 
SetBool
⁄⁄ #
(
⁄⁄# $
key
⁄⁄$ '
,
⁄⁄' (
value
⁄⁄) .
)
⁄⁄. /
;
⁄⁄/ 0
}
€€ 
}
‹‹ 	
public
‚‚ 
static
‚‚ 
void
‚‚ 
	SetString
‚‚ $
(
‚‚$ %
string
‚‚% +
key
‚‚, /
,
‚‚/ 0
string
‚‚1 7
value
‚‚8 =
,
‚‚= > 
PreferenceLocation
‚‚? Q
location
‚‚R Z
=
‚‚[ \ 
PreferenceLocation
‚‚] o
.
‚‚o p
Project
‚‚p w
)
‚‚w x
{
„„ 	
if
‰‰ 
(
‰‰ 
location
‰‰ 
==
‰‰  
PreferenceLocation
‰‰ .
.
‰‰. /
Project
‰‰/ 6
)
‰‰6 7
{
ÂÂ 
if
ÊÊ 
(
ÊÊ 
preferences
ÊÊ 
==
ÊÊ  "
null
ÊÊ# '
)
ÊÊ' (
return
ÁÁ 
;
ÁÁ 
preferences
ËË 
.
ËË 
	SetString
ËË %
(
ËË% &
key
ËË& )
,
ËË) *
value
ËË+ 0
)
ËË0 1
;
ËË1 2
UnityEditor
ÈÈ 
.
ÈÈ 
EditorUtility
ÈÈ )
.
ÈÈ) *
SetDirty
ÈÈ* 2
(
ÈÈ2 3
preferences
ÈÈ3 >
)
ÈÈ> ?
;
ÈÈ? @
}
ÍÍ 
else
ÎÎ 
{
ÏÏ 
EditorPrefs
ÌÌ 
.
ÌÌ 
	SetString
ÌÌ %
(
ÌÌ% &
key
ÌÌ& )
,
ÌÌ) *
value
ÌÌ+ 0
)
ÌÌ0 1
;
ÌÌ1 2
}
ÓÓ 
}
ÔÔ 	
public
ıı 
static
ıı 
void
ıı 
SetColor
ıı #
(
ıı# $
string
ıı$ *
key
ıı+ .
,
ıı. /
Color
ıı0 5
value
ıı6 ;
,
ıı; < 
PreferenceLocation
ıı= O
location
ııP X
=
ııY Z 
PreferenceLocation
ıı[ m
.
ıım n
Project
ıın u
)
ııu v
{
ˆˆ 	
if
˜˜ 
(
˜˜ 
location
˜˜ 
==
˜˜  
PreferenceLocation
˜˜ .
.
˜˜. /
Project
˜˜/ 6
)
˜˜6 7
{
¯¯ 
if
˘˘ 
(
˘˘ 
preferences
˘˘ 
==
˘˘  "
null
˘˘# '
)
˘˘' (
return
˙˙ 
;
˙˙ 
preferences
˚˚ 
.
˚˚ 
SetColor
˚˚ $
(
˚˚$ %
key
˚˚% (
,
˚˚( )
value
˚˚* /
)
˚˚/ 0
;
˚˚0 1
UnityEditor
¸¸ 
.
¸¸ 
EditorUtility
¸¸ )
.
¸¸) *
SetDirty
¸¸* 2
(
¸¸2 3
preferences
¸¸3 >
)
¸¸> ?
;
¸¸? @
}
˝˝ 
else
˛˛ 
{
ˇˇ 
EditorPrefs
ÄÄ 
.
ÄÄ 
	SetString
ÄÄ %
(
ÄÄ% &
key
ÄÄ& )
,
ÄÄ) *
value
ÄÄ+ 0
.
ÄÄ0 1
ToString
ÄÄ1 9
(
ÄÄ9 :
)
ÄÄ: ;
)
ÄÄ; <
;
ÄÄ< =
}
ÅÅ 
}
ÇÇ 	
public
àà 
static
àà 
void
àà 
SetMaterial
àà &
(
àà& '
string
àà' -
key
àà. 1
,
àà1 2
Material
àà3 ;
value
àà< A
,
ààA B 
PreferenceLocation
ààC U
location
ààV ^
=
àà_ ` 
PreferenceLocation
ààa s
.
ààs t
Project
ààt {
)
àà{ |
{
ââ 	
if
ää 
(
ää 
location
ää 
==
ää  
PreferenceLocation
ää .
.
ää. /
Project
ää/ 6
)
ää6 7
{
ãã 
if
åå 
(
åå 
preferences
åå 
==
åå  "
null
åå# '
)
åå' (
return
çç 
;
çç 
preferences
éé 
.
éé 
SetMaterial
éé '
(
éé' (
key
éé( +
,
éé+ ,
value
éé- 2
)
éé2 3
;
éé3 4
UnityEditor
èè 
.
èè 
EditorUtility
èè )
.
èè) *
SetDirty
èè* 2
(
èè2 3
preferences
èè3 >
)
èè> ?
;
èè? @
}
êê 
else
ëë 
{
íí 
EditorPrefs
ìì 
.
ìì 
	SetString
ìì %
(
ìì% &
key
ìì& )
,
ìì) *
value
ìì+ 0
!=
ìì1 3
null
ìì4 8
?
ìì9 :
AssetDatabase
ìì; H
.
ììH I
GetAssetPath
ììI U
(
ììU V
value
ììV [
)
ìì[ \
:
ìì] ^
$str
ìì_ a
)
ììa b
;
ììb c
}
îî 
}
ïï 	
public
ûû 
static
ûû 
void
ûû 
SetValue
ûû #
<
ûû# $
T
ûû$ %
>
ûû% &
(
ûû& '
string
ûû' -
key
ûû. 1
,
ûû1 2
T
ûû3 4
value
ûû5 :
,
ûû: ; 
PreferenceLocation
ûû< N
location
ûûO W
=
ûûX Y 
PreferenceLocation
ûûZ l
.
ûûl m
Project
ûûm t
)
ûût u
{
üü 	
	SetString
†† 
(
†† 
key
†† 
,
†† 
JsonUtility
†† &
.
††& '
ToJson
††' -
(
††- .
value
††. 3
)
††3 4
,
††4 5
location
††6 >
)
††> ?
;
††? @
}
°° 	
}
¢¢ 
}££ ≠\
èD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\MenuItems.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
static 

class 
	MenuItems 
{		 
static

 
ProBuilderEditor

 
editor

  &
{ 	
get 
{ 
return 
ProBuilderEditor )
.) *
instance* 2
;2 3
}4 5
} 	
[ 	
MenuItem	 
( 
$str 
+ 
PreferenceKeys +
.+ ,
pluginTitle, 7
+8 9
$str: =
+> ?
PreferenceKeys@ N
.N O
pluginTitleO Z
+[ \
$str] f
,f g
falseh m
,m n
PreferenceKeys 
. 

menuEditor &
)& '
]' (
public 
static 
void 
OpenEditorWindow +
(+ ,
), -
{ 	
ProBuilderEditor 
. 
MenuOpenWindow +
(+ ,
), -
;- .
} 	
static 
ProBuilderMesh 
[ 
] 
	selection  )
{ 	
get 
{ 
return 
	Selection "
." #

transforms# -
.- .
GetComponents. ;
<; <
ProBuilderMesh< J
>J K
(K L
)L M
;M N
}O P
} 	
[ 	
MenuItem	 
( 
$str 
+ 
PreferenceKeys +
.+ ,
pluginTitle, 7
+8 9
$str: m
,m n
trueo s
,s t
PreferenceKeys 
. 
menuVertexColors ,
), -
]- .
[ 	
MenuItem	 
( 
$str 
+ 
PreferenceKeys +
.+ ,
pluginTitle, 7
+8 9
$str: m
,m n
trueo s
,s t
PreferenceKeys 
. 
menuVertexColors ,
), -
]- .
[ 	
MenuItem	 
( 
$str 
+ 
PreferenceKeys +
.+ ,
pluginTitle, 7
+8 9
$str: m
,m n
trueo s
,s t
PreferenceKeys   
.   
menuVertexColors   ,
)  , -
]  - .
[!! 	
MenuItem!!	 
(!! 
$str!! 
+!! 
PreferenceKeys!! +
.!!+ ,
pluginTitle!!, 7
+!!8 9
$str!!: m
,!!m n
true!!o s
,!!s t
PreferenceKeys"" 
."" 
menuVertexColors"" ,
)"", -
]""- .
[## 	
MenuItem##	 
(## 
$str## 
+## 
PreferenceKeys## +
.##+ ,
pluginTitle##, 7
+##8 9
$str##: m
,##m n
true##o s
,##s t
PreferenceKeys$$ 
.$$ 
menuVertexColors$$ ,
)$$, -
]$$- .
[%% 	
MenuItem%%	 
(%% 
$str%% 
+%% 
PreferenceKeys%% +
.%%+ ,
pluginTitle%%, 7
+%%8 9
$str%%: m
,%%m n
true%%o s
,%%s t
PreferenceKeys&& 
.&& 
menuVertexColors&& ,
)&&, -
]&&- .
['' 	
MenuItem''	 
('' 
$str'' 
+'' 
PreferenceKeys'' +
.''+ ,
pluginTitle'', 7
+''8 9
$str'': m
,''m n
true''o s
,''s t
PreferenceKeys(( 
.(( 
menuVertexColors(( ,
)((, -
]((- .
[)) 	
MenuItem))	 
()) 
$str)) 
+)) 
PreferenceKeys)) +
.))+ ,
pluginTitle)), 7
+))8 9
$str)): m
,))m n
true))o s
,))s t
PreferenceKeys** 
.** 
menuVertexColors** ,
)**, -
]**- .
[++ 	
MenuItem++	 
(++ 
$str++ 
+++ 
PreferenceKeys++ +
.+++ ,
pluginTitle++, 7
+++8 9
$str++: m
,++m n
true++o s
,++s t
PreferenceKeys,, 
.,, 
menuVertexColors,, ,
),,, -
],,- .
[-- 	
MenuItem--	 
(-- 
$str-- 
+-- 
PreferenceKeys-- +
.--+ ,
pluginTitle--, 7
+--8 9
$str--: m
,--m n
true--o s
,--s t
PreferenceKeys.. 
... 
menuVertexColors.. ,
).., -
]..- .
public// 
static// 
bool// "
VerifyApplyVertexColor// 1
(//1 2
)//2 3
{00 	
return11 
ProBuilderEditor11 #
.11# $
instance11$ ,
!=11- /
null110 4
&&115 7
MeshSelection118 E
.11E F
selectedVertexCount11F Y
>11Z [
$num11\ ]
;11] ^
}22 	
[44 	
MenuItem44	 
(44 
$str44 
+44 
PreferenceKeys44 +
.44+ ,
pluginTitle44, 7
+448 9
$str44: m
,44m n
false44o t
,44t u
PreferenceKeys55 
.55 
menuVertexColors55 ,
)55, -
]55- .
public66 
static66 
void66 %
MenuSetVertexColorPreset166 4
(664 5
)665 6
{77 	
VertexColorPalette88 
.88 
SetFaceColors88 ,
(88, -
$num88- .
)88. /
;88/ 0
}99 	
[;; 	
MenuItem;;	 
(;; 
$str;; 
+;; 
PreferenceKeys;; +
.;;+ ,
pluginTitle;;, 7
+;;8 9
$str;;: m
,;;m n
false;;o t
,;;t u
PreferenceKeys<< 
.<< 
menuVertexColors<< ,
)<<, -
]<<- .
public== 
static== 
void== %
MenuSetVertexColorPreset2== 4
(==4 5
)==5 6
{>> 	
VertexColorPalette?? 
.?? 
SetFaceColors?? ,
(??, -
$num??- .
)??. /
;??/ 0
}@@ 	
[BB 	
MenuItemBB	 
(BB 
$strBB 
+BB 
PreferenceKeysBB +
.BB+ ,
pluginTitleBB, 7
+BB8 9
$strBB: m
,BBm n
falseBBo t
,BBt u
PreferenceKeysCC 
.CC 
menuVertexColorsCC ,
)CC, -
]CC- .
publicDD 
staticDD 
voidDD %
MenuSetVertexColorPreset3DD 4
(DD4 5
)DD5 6
{EE 	
VertexColorPaletteFF 
.FF 
SetFaceColorsFF ,
(FF, -
$numFF- .
)FF. /
;FF/ 0
}GG 	
[II 	
MenuItemII	 
(II 
$strII 
+II 
PreferenceKeysII +
.II+ ,
pluginTitleII, 7
+II8 9
$strII: m
,IIm n
falseIIo t
,IIt u
PreferenceKeysJJ 
.JJ 
menuVertexColorsJJ ,
)JJ, -
]JJ- .
publicKK 
staticKK 
voidKK %
MenuSetVertexColorPreset4KK 4
(KK4 5
)KK5 6
{LL 	
VertexColorPaletteMM 
.MM 
SetFaceColorsMM ,
(MM, -
$numMM- .
)MM. /
;MM/ 0
}NN 	
[PP 	
MenuItemPP	 
(PP 
$strPP 
+PP 
PreferenceKeysPP +
.PP+ ,
pluginTitlePP, 7
+PP8 9
$strPP: m
,PPm n
falsePPo t
,PPt u
PreferenceKeysQQ 
.QQ 
menuVertexColorsQQ ,
)QQ, -
]QQ- .
publicRR 
staticRR 
voidRR %
MenuSetVertexColorPreset5RR 4
(RR4 5
)RR5 6
{SS 	
VertexColorPaletteTT 
.TT 
SetFaceColorsTT ,
(TT, -
$numTT- .
)TT. /
;TT/ 0
}UU 	
[WW 	
MenuItemWW	 
(WW 
$strWW 
+WW 
PreferenceKeysWW +
.WW+ ,
pluginTitleWW, 7
+WW8 9
$strWW: m
,WWm n
falseWWo t
,WWt u
PreferenceKeysXX 
.XX 
menuVertexColorsXX ,
)XX, -
]XX- .
publicYY 
staticYY 
voidYY %
MenuSetVertexColorPreset6YY 4
(YY4 5
)YY5 6
{ZZ 	
VertexColorPalette[[ 
.[[ 
SetFaceColors[[ ,
([[, -
$num[[- .
)[[. /
;[[/ 0
}\\ 	
[^^ 	
MenuItem^^	 
(^^ 
$str^^ 
+^^ 
PreferenceKeys^^ +
.^^+ ,
pluginTitle^^, 7
+^^8 9
$str^^: m
,^^m n
false^^o t
,^^t u
PreferenceKeys__ 
.__ 
menuVertexColors__ ,
)__, -
]__- .
public`` 
static`` 
void`` %
MenuSetVertexColorPreset7`` 4
(``4 5
)``5 6
{aa 	
VertexColorPalettebb 
.bb 
SetFaceColorsbb ,
(bb, -
$numbb- .
)bb. /
;bb/ 0
}cc 	
[ee 	
MenuItemee	 
(ee 
$stree 
+ee 
PreferenceKeysee +
.ee+ ,
pluginTitleee, 7
+ee8 9
$stree: m
,eem n
falseeeo t
,eet u
PreferenceKeysff 
.ff 
menuVertexColorsff ,
)ff, -
]ff- .
publicgg 
staticgg 
voidgg %
MenuSetVertexColorPreset8gg 4
(gg4 5
)gg5 6
{hh 	
VertexColorPaletteii 
.ii 
SetFaceColorsii ,
(ii, -
$numii- .
)ii. /
;ii/ 0
}jj 	
[ll 	
MenuItemll	 
(ll 
$strll 
+ll 
PreferenceKeysll +
.ll+ ,
pluginTitlell, 7
+ll8 9
$strll: m
,llm n
falsello t
,llt u
PreferenceKeysmm 
.mm 
menuVertexColorsmm ,
)mm, -
]mm- .
publicnn 
staticnn 
voidnn %
MenuSetVertexColorPreset9nn 4
(nn4 5
)nn5 6
{oo 	
VertexColorPalettepp 
.pp 
SetFaceColorspp ,
(pp, -
$numpp- .
)pp. /
;pp/ 0
}qq 	
[ss 	
MenuItemss	 
(ss 
$strss 
+ss 
PreferenceKeysss +
.ss+ ,
pluginTitless, 7
+ss8 9
$strss: m
,ssm n
falsesso t
,sst u
PreferenceKeystt 
.tt 
menuVertexColorstt ,
)tt, -
]tt- .
publicuu 
staticuu 
voiduu %
MenuSetVertexColorPreset0uu 4
(uu4 5
)uu5 6
{vv 	
VertexColorPaletteww 
.ww 
SetFaceColorsww ,
(ww, -
$numww- .
)ww. /
;ww/ 0
}xx 	
}yy 
}zz ﬂ≠
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\EditorToolbarMenuItems.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
static 

class !
EditorToolbarMenuItem &
{ 
const 
string 
k_MenuPrefix !
=" #
$str$ 7
;7 8
const 
string 
k_ShortcutPrefix %
=& '
$str( 5
;5 6
[ 
MenuItem 
( 
k_MenuPrefix 
+ 
$str 5
,5 6
true7 ;
,; <
PreferenceKeys= K
.K L

menuEditorL V
+W X
$numY Z
)Z [
][ \
static 
bool	 %
MenuVerify_NewBezierShape '
(' (
)( )
{ 
var 
instance 
= 
EditorToolbarLoader %
.% &
GetInstance& 1
<1 2
NewBezierShape2 @
>@ A
(A B
)B C
;C D
return 	
instance
 
!= 
null 
&& 
instance &
.& '
enabled' .
;. /
} 
[   
MenuItem   
(   
k_MenuPrefix   
+   
$str   5
,  5 6
false  7 <
,  < =
PreferenceKeys  > L
.  L M

menuEditor  M W
+  X Y
$num  Z [
)  [ \
]  \ ]
static!! 
void!!	 &
MenuPerform_NewBezierShape!! (
(!!( )
)!!) *
{"" 
var## 
instance## 
=## 
EditorToolbarLoader## %
.##% &
GetInstance##& 1
<##1 2
NewBezierShape##2 @
>##@ A
(##A B
)##B C
;##C D
if$$ 
($$ 
instance$$ 
!=$$ 
null$$ 
&&$$ 
instance$$ "
.$$" #
enabled$$# *
)$$* +
EditorUtility%% 
.%% 
ShowNotification%% "
(%%" #
instance%%# +
.%%+ ,
DoAction%%, 4
(%%4 5
)%%5 6
.%%6 7
notification%%7 C
)%%C D
;%%D E
}&& 
[(( 
MenuItem(( 
((( 
k_MenuPrefix(( 
+(( 
$str(( 3
,((3 4
true((5 9
,((9 :
PreferenceKeys((; I
.((I J

menuEditor((J T
+((U V
$num((W X
)((X Y
]((Y Z
static)) 
bool))	 #
MenuVerify_NewPolyShape)) %
())% &
)))& '
{** 
var++ 
instance++ 
=++ 
EditorToolbarLoader++ %
.++% &
GetInstance++& 1
<++1 2
NewPolyShape++2 >
>++> ?
(++? @
)++@ A
;++A B
return,, 	
instance,,
 
!=,, 
null,, 
&&,, 
instance,, &
.,,& '
enabled,,' .
;,,. /
}-- 
[// 
MenuItem// 
(// 
k_MenuPrefix// 
+// 
$str// 3
,//3 4
false//5 :
,//: ;
PreferenceKeys//< J
.//J K

menuEditor//K U
+//V W
$num//X Y
)//Y Z
]//Z [
static00 
void00	 $
MenuPerform_NewPolyShape00 &
(00& '
)00' (
{11 
var22 
instance22 
=22 
EditorToolbarLoader22 %
.22% &
GetInstance22& 1
<221 2
NewPolyShape222 >
>22> ?
(22? @
)22@ A
;22A B
if33 
(33 
instance33 
!=33 
null33 
&&33 
instance33 "
.33" #
enabled33# *
)33* +
EditorUtility44 
.44 
ShowNotification44 "
(44" #
instance44# +
.44+ ,
DoAction44, 4
(444 5
)445 6
.446 7
notification447 C
)44C D
;44D E
}55 
[77 
MenuItem77 
(77 
k_MenuPrefix77 
+77 
$str77 <
,77< =
true77> B
,77B C
PreferenceKeys77D R
.77R S

menuEditor77S ]
+77^ _
$num77` a
)77a b
]77b c
static88 
bool88	 +
MenuVerify_OpenLightmapUVEditor88 -
(88- .
)88. /
{99 
var:: 
instance:: 
=:: 
EditorToolbarLoader:: %
.::% &
GetInstance::& 1
<::1 2 
OpenLightmapUVEditor::2 F
>::F G
(::G H
)::H I
;::I J
return;; 	
instance;;
 
!=;; 
null;; 
&&;; 
instance;; &
.;;& '
enabled;;' .
;;;. /
}<< 
[>> 
MenuItem>> 
(>> 
k_MenuPrefix>> 
+>> 
$str>> <
,>>< =
false>>> C
,>>C D
PreferenceKeys>>E S
.>>S T

menuEditor>>T ^
+>>_ `
$num>>a b
)>>b c
]>>c d
static?? 
void??	 ,
 MenuPerform_OpenLightmapUVEditor?? .
(??. /
)??/ 0
{@@ 
varAA 
instanceAA 
=AA 
EditorToolbarLoaderAA %
.AA% &
GetInstanceAA& 1
<AA1 2 
OpenLightmapUVEditorAA2 F
>AAF G
(AAG H
)AAH I
;AAI J
ifBB 
(BB 
instanceBB 
!=BB 
nullBB 
&&BB 
instanceBB "
.BB" #
enabledBB# *
)BB* +
EditorUtilityCC 
.CC 
ShowNotificationCC "
(CC" #
instanceCC# +
.CC+ ,
DoActionCC, 4
(CC4 5
)CC5 6
.CC6 7
notificationCC7 C
)CCC D
;CCD E
}DD 
[FF 
MenuItemFF 
(FF 
k_MenuPrefixFF 
+FF 
$strFF 9
,FF9 :
trueFF; ?
,FF? @
PreferenceKeysFFA O
.FFO P

menuEditorFFP Z
+FF[ \
$numFF] ^
)FF^ _
]FF_ `
staticGG 
boolGG	 )
MenuVerify_OpenMaterialEditorGG +
(GG+ ,
)GG, -
{HH 
varII 
instanceII 
=II 
EditorToolbarLoaderII %
.II% &
GetInstanceII& 1
<II1 2
OpenMaterialEditorII2 D
>IID E
(IIE F
)IIF G
;IIG H
returnJJ 	
instanceJJ
 
!=JJ 
nullJJ 
&&JJ 
instanceJJ &
.JJ& '
enabledJJ' .
;JJ. /
}KK 
[MM 
MenuItemMM 
(MM 
k_MenuPrefixMM 
+MM 
$strMM 9
,MM9 :
falseMM; @
,MM@ A
PreferenceKeysMMB P
.MMP Q

menuEditorMMQ [
+MM\ ]
$numMM^ _
)MM_ `
]MM` a
staticNN 
voidNN	 *
MenuPerform_OpenMaterialEditorNN ,
(NN, -
)NN- .
{OO 
varPP 
instancePP 
=PP 
EditorToolbarLoaderPP %
.PP% &
GetInstancePP& 1
<PP1 2
OpenMaterialEditorPP2 D
>PPD E
(PPE F
)PPF G
;PPG H
ifQQ 
(QQ 
instanceQQ 
!=QQ 
nullQQ 
&&QQ 
instanceQQ "
.QQ" #
enabledQQ# *
)QQ* +
EditorUtilityRR 
.RR 
ShowNotificationRR "
(RR" #
instanceRR# +
.RR+ ,
DoActionRR, 4
(RR4 5
)RR5 6
.RR6 7
notificationRR7 C
)RRC D
;RRD E
}SS 
[UU 
MenuItemUU 
(UU 
k_MenuPrefixUU 
+UU 
$strUU D
,UUD E
trueUUF J
,UUJ K
PreferenceKeysUUL Z
.UUZ [

menuEditorUU[ e
+UUf g
$numUUh i
)UUi j
]UUj k
staticVV 
boolVV	 .
"MenuVerify_OpenShapeEditorMenuItemVV 0
(VV0 1
)VV1 2
{WW 
varXX 
instanceXX 
=XX 
EditorToolbarLoaderXX %
.XX% &
GetInstanceXX& 1
<XX1 2#
OpenShapeEditorMenuItemXX2 I
>XXI J
(XXJ K
)XXK L
;XXL M
returnYY 	
instanceYY
 
!=YY 
nullYY 
&&YY 
instanceYY &
.YY& '
enabledYY' .
;YY. /
}ZZ 
[\\ 
MenuItem\\ 
(\\ 
k_MenuPrefix\\ 
+\\ 
$str\\ D
,\\D E
false\\F K
,\\K L
PreferenceKeys\\M [
.\\[ \

menuEditor\\\ f
+\\g h
$num\\i j
)\\j k
]\\k l
static]] 
void]]	 /
#MenuPerform_OpenShapeEditorMenuItem]] 1
(]]1 2
)]]2 3
{^^ 
var__ 
instance__ 
=__ 
EditorToolbarLoader__ %
.__% &
GetInstance__& 1
<__1 2#
OpenShapeEditorMenuItem__2 I
>__I J
(__J K
)__K L
;__L M
if`` 
(`` 
instance`` 
!=`` 
null`` 
&&`` 
instance`` "
.``" #
enabled``# *
)``* +
EditorUtilityaa 
.aa 
ShowNotificationaa "
(aa" #
instanceaa# +
.aa+ ,
DoActionaa, 4
(aa4 5
)aa5 6
.aa6 7
notificationaa7 C
)aaC D
;aaD E
}bb 
[dd 
MenuItemdd 
(dd 
k_MenuPrefixdd 
+dd 
$strdd :
,dd: ;
truedd< @
,dd@ A
PreferenceKeysddB P
.ddP Q

menuEditorddQ [
+dd\ ]
$numdd^ _
)dd_ `
]dd` a
staticee 
boolee	 *
MenuVerify_OpenSmoothingEditoree ,
(ee, -
)ee- .
{ff 
vargg 
instancegg 
=gg 
EditorToolbarLoadergg %
.gg% &
GetInstancegg& 1
<gg1 2
OpenSmoothingEditorgg2 E
>ggE F
(ggF G
)ggG H
;ggH I
returnhh 	
instancehh
 
!=hh 
nullhh 
&&hh 
instancehh &
.hh& '
enabledhh' .
;hh. /
}ii 
[kk 
MenuItemkk 
(kk 
k_MenuPrefixkk 
+kk 
$strkk :
,kk: ;
falsekk< A
,kkA B
PreferenceKeyskkC Q
.kkQ R

menuEditorkkR \
+kk] ^
$numkk_ `
)kk` a
]kka b
staticll 
voidll	 +
MenuPerform_OpenSmoothingEditorll -
(ll- .
)ll. /
{mm 
varnn 
instancenn 
=nn 
EditorToolbarLoadernn %
.nn% &
GetInstancenn& 1
<nn1 2
OpenSmoothingEditornn2 E
>nnE F
(nnF G
)nnG H
;nnH I
ifoo 
(oo 
instanceoo 
!=oo 
nulloo 
&&oo 
instanceoo "
.oo" #
enabledoo# *
)oo* +
EditorUtilitypp 
.pp 
ShowNotificationpp "
(pp" #
instancepp# +
.pp+ ,
DoActionpp, 4
(pp4 5
)pp5 6
.pp6 7
notificationpp7 C
)ppC D
;ppD E
}qq 
[ss 
MenuItemss 
(ss 
k_MenuPrefixss 
+ss 
$strss 3
,ss3 4
truess5 9
,ss9 :
PreferenceKeysss; I
.ssI J

menuEditorssJ T
+ssU V
$numssW X
)ssX Y
]ssY Z
statictt 
booltt	 #
MenuVerify_OpenUVEditortt %
(tt% &
)tt& '
{uu 
varvv 
instancevv 
=vv 
EditorToolbarLoadervv %
.vv% &
GetInstancevv& 1
<vv1 2
OpenUVEditorvv2 >
>vv> ?
(vv? @
)vv@ A
;vvA B
returnww 	
instanceww
 
!=ww 
nullww 
&&ww 
instanceww &
.ww& '
enabledww' .
;ww. /
}xx 
[zz 
MenuItemzz 
(zz 
k_MenuPrefixzz 
+zz 
$strzz 3
,zz3 4
falsezz5 :
,zz: ;
PreferenceKeyszz< J
.zzJ K

menuEditorzzK U
+zzV W
$numzzX Y
)zzY Z
]zzZ [
static{{ 
void{{	 $
MenuPerform_OpenUVEditor{{ &
({{& '
){{' (
{|| 
var}} 
instance}} 
=}} 
EditorToolbarLoader}} %
.}}% &
GetInstance}}& 1
<}}1 2
OpenUVEditor}}2 >
>}}> ?
(}}? @
)}}@ A
;}}A B
if~~ 
(~~ 
instance~~ 
!=~~ 
null~~ 
&&~~ 
instance~~ "
.~~" #
enabled~~# *
)~~* +
EditorUtility 
. 
ShowNotification "
(" #
instance# +
.+ ,
DoAction, 4
(4 5
)5 6
.6 7
notification7 C
)C D
;D E
}
ÄÄ 
[
ÇÇ 
MenuItem
ÇÇ 
(
ÇÇ 
k_MenuPrefix
ÇÇ 
+
ÇÇ 
$str
ÇÇ =
,
ÇÇ= >
true
ÇÇ? C
,
ÇÇC D
PreferenceKeys
ÇÇE S
.
ÇÇS T

menuEditor
ÇÇT ^
+
ÇÇ_ `
$num
ÇÇa b
)
ÇÇb c
]
ÇÇc d
static
ÉÉ 
bool
ÉÉ	 .
 MenuVerify_OpenVertexColorEditor
ÉÉ .
(
ÉÉ. /
)
ÉÉ/ 0
{
ÑÑ 
var
ÖÖ 
instance
ÖÖ 
=
ÖÖ !
EditorToolbarLoader
ÖÖ %
.
ÖÖ% &
GetInstance
ÖÖ& 1
<
ÖÖ1 2#
OpenVertexColorEditor
ÖÖ2 G
>
ÖÖG H
(
ÖÖH I
)
ÖÖI J
;
ÖÖJ K
return
ÜÜ 	
instance
ÜÜ
 
!=
ÜÜ 
null
ÜÜ 
&&
ÜÜ 
instance
ÜÜ &
.
ÜÜ& '
enabled
ÜÜ' .
;
ÜÜ. /
}
áá 
[
ââ 
MenuItem
ââ 
(
ââ 
k_MenuPrefix
ââ 
+
ââ 
$str
ââ =
,
ââ= >
false
ââ? D
,
ââD E
PreferenceKeys
ââF T
.
ââT U

menuEditor
ââU _
+
ââ` a
$num
ââb c
)
ââc d
]
ââd e
static
ää 
void
ää	 /
!MenuPerform_OpenVertexColorEditor
ää /
(
ää/ 0
)
ää0 1
{
ãã 
var
åå 
instance
åå 
=
åå !
EditorToolbarLoader
åå %
.
åå% &
GetInstance
åå& 1
<
åå1 2#
OpenVertexColorEditor
åå2 G
>
ååG H
(
ååH I
)
ååI J
;
ååJ K
if
çç 
(
çç 
instance
çç 
!=
çç 
null
çç 
&&
çç 
instance
çç "
.
çç" #
enabled
çç# *
)
çç* +
EditorUtility
éé 
.
éé 
ShowNotification
éé "
(
éé" #
instance
éé# +
.
éé+ ,
DoAction
éé, 4
(
éé4 5
)
éé5 6
.
éé6 7
notification
éé7 C
)
ééC D
;
ééD E
}
èè 
[
ëë 
MenuItem
ëë 
(
ëë 
k_MenuPrefix
ëë 
+
ëë 
$str
ëë @
,
ëë@ A
true
ëëB F
,
ëëF G
PreferenceKeys
ëëH V
.
ëëV W

menuEditor
ëëW a
+
ëëb c
$num
ëëd e
)
ëëe f
]
ëëf g
static
íí 
bool
íí	 1
#MenuVerify_OpenVertexPositionEditor
íí 1
(
íí1 2
)
íí2 3
{
ìì 
var
îî 
instance
îî 
=
îî !
EditorToolbarLoader
îî %
.
îî% &
GetInstance
îî& 1
<
îî1 2&
OpenVertexPositionEditor
îî2 J
>
îîJ K
(
îîK L
)
îîL M
;
îîM N
return
ïï 	
instance
ïï
 
!=
ïï 
null
ïï 
&&
ïï 
instance
ïï &
.
ïï& '
enabled
ïï' .
;
ïï. /
}
ññ 
[
òò 
MenuItem
òò 
(
òò 
k_MenuPrefix
òò 
+
òò 
$str
òò @
,
òò@ A
false
òòB G
,
òòG H
PreferenceKeys
òòI W
.
òòW X

menuEditor
òòX b
+
òòc d
$num
òòe f
)
òòf g
]
òòg h
static
ôô 
void
ôô	 2
$MenuPerform_OpenVertexPositionEditor
ôô 2
(
ôô2 3
)
ôô3 4
{
öö 
var
õõ 
instance
õõ 
=
õõ !
EditorToolbarLoader
õõ %
.
õõ% &
GetInstance
õõ& 1
<
õõ1 2&
OpenVertexPositionEditor
õõ2 J
>
õõJ K
(
õõK L
)
õõL M
;
õõM N
if
úú 
(
úú 
instance
úú 
!=
úú 
null
úú 
&&
úú 
instance
úú "
.
úú" #
enabled
úú# *
)
úú* +
EditorUtility
ùù 
.
ùù 
ShowNotification
ùù "
(
ùù" #
instance
ùù# +
.
ùù+ ,
DoAction
ùù, 4
(
ùù4 5
)
ùù5 6
.
ùù6 7
notification
ùù7 C
)
ùùC D
;
ùùD E
}
ûû 
[
†† 
MenuItem
†† 
(
†† 
k_MenuPrefix
†† 
+
†† 
$str
†† 0
,
††0 1
true
††2 6
,
††6 7
PreferenceKeys
††8 F
.
††F G

menuExport
††G Q
+
††R S
$num
††T U
)
††U V
]
††V W
static
°° 
bool
°°	 $
MenuVerify_ExportAsset
°° $
(
°°$ %
)
°°% &
{
¢¢ 
var
££ 
instance
££ 
=
££ !
EditorToolbarLoader
££ %
.
££% &
GetInstance
££& 1
<
££1 2
ExportAsset
££2 =
>
££= >
(
££> ?
)
££? @
;
££@ A
return
§§ 	
instance
§§
 
!=
§§ 
null
§§ 
&&
§§ 
instance
§§ &
.
§§& '
enabled
§§' .
;
§§. /
}
•• 
[
ßß 
MenuItem
ßß 
(
ßß 
k_MenuPrefix
ßß 
+
ßß 
$str
ßß 0
,
ßß0 1
false
ßß2 7
,
ßß7 8
PreferenceKeys
ßß9 G
.
ßßG H

menuExport
ßßH R
+
ßßS T
$num
ßßU V
)
ßßV W
]
ßßW X
static
®® 
void
®®	 %
MenuPerform_ExportAsset
®® %
(
®®% &
)
®®& '
{
©© 
var
™™ 
instance
™™ 
=
™™ !
EditorToolbarLoader
™™ %
.
™™% &
GetInstance
™™& 1
<
™™1 2
ExportAsset
™™2 =
>
™™= >
(
™™> ?
)
™™? @
;
™™@ A
if
´´ 
(
´´ 
instance
´´ 
!=
´´ 
null
´´ 
&&
´´ 
instance
´´ "
.
´´" #
enabled
´´# *
)
´´* +
EditorUtility
¨¨ 
.
¨¨ 
ShowNotification
¨¨ "
(
¨¨" #
instance
¨¨# +
.
¨¨+ ,
DoAction
¨¨, 4
(
¨¨4 5
)
¨¨5 6
.
¨¨6 7
notification
¨¨7 C
)
¨¨C D
;
¨¨D E
}
≠≠ 
[
ØØ 
MenuItem
ØØ 
(
ØØ 
k_MenuPrefix
ØØ 
+
ØØ 
$str
ØØ .
,
ØØ. /
true
ØØ0 4
,
ØØ4 5
PreferenceKeys
ØØ6 D
.
ØØD E

menuExport
ØØE O
+
ØØP Q
$num
ØØR S
)
ØØS T
]
ØØT U
static
∞∞ 
bool
∞∞	 "
MenuVerify_ExportObj
∞∞ "
(
∞∞" #
)
∞∞# $
{
±± 
var
≤≤ 
instance
≤≤ 
=
≤≤ !
EditorToolbarLoader
≤≤ %
.
≤≤% &
GetInstance
≤≤& 1
<
≤≤1 2
	ExportObj
≤≤2 ;
>
≤≤; <
(
≤≤< =
)
≤≤= >
;
≤≤> ?
return
≥≥ 	
instance
≥≥
 
!=
≥≥ 
null
≥≥ 
&&
≥≥ 
instance
≥≥ &
.
≥≥& '
enabled
≥≥' .
;
≥≥. /
}
¥¥ 
[
∂∂ 
MenuItem
∂∂ 
(
∂∂ 
k_MenuPrefix
∂∂ 
+
∂∂ 
$str
∂∂ .
,
∂∂. /
false
∂∂0 5
,
∂∂5 6
PreferenceKeys
∂∂7 E
.
∂∂E F

menuExport
∂∂F P
+
∂∂Q R
$num
∂∂S T
)
∂∂T U
]
∂∂U V
static
∑∑ 
void
∑∑	 #
MenuPerform_ExportObj
∑∑ #
(
∑∑# $
)
∑∑$ %
{
∏∏ 
var
ππ 
instance
ππ 
=
ππ !
EditorToolbarLoader
ππ %
.
ππ% &
GetInstance
ππ& 1
<
ππ1 2
	ExportObj
ππ2 ;
>
ππ; <
(
ππ< =
)
ππ= >
;
ππ> ?
if
∫∫ 
(
∫∫ 
instance
∫∫ 
!=
∫∫ 
null
∫∫ 
&&
∫∫ 
instance
∫∫ "
.
∫∫" #
enabled
∫∫# *
)
∫∫* +
EditorUtility
ªª 
.
ªª 
ShowNotification
ªª "
(
ªª" #
instance
ªª# +
.
ªª+ ,
DoAction
ªª, 4
(
ªª4 5
)
ªª5 6
.
ªª6 7
notification
ªª7 C
)
ªªC D
;
ªªD E
}
ºº 
[
ææ 
MenuItem
ææ 
(
ææ 
k_MenuPrefix
ææ 
+
ææ 
$str
ææ .
,
ææ. /
true
ææ0 4
,
ææ4 5
PreferenceKeys
ææ6 D
.
ææD E

menuExport
ææE O
+
ææP Q
$num
ææR S
)
ææS T
]
ææT U
static
øø 
bool
øø	 "
MenuVerify_ExportPly
øø "
(
øø" #
)
øø# $
{
¿¿ 
var
¡¡ 
instance
¡¡ 
=
¡¡ !
EditorToolbarLoader
¡¡ %
.
¡¡% &
GetInstance
¡¡& 1
<
¡¡1 2
	ExportPly
¡¡2 ;
>
¡¡; <
(
¡¡< =
)
¡¡= >
;
¡¡> ?
return
¬¬ 	
instance
¬¬
 
!=
¬¬ 
null
¬¬ 
&&
¬¬ 
instance
¬¬ &
.
¬¬& '
enabled
¬¬' .
;
¬¬. /
}
√√ 
[
≈≈ 
MenuItem
≈≈ 
(
≈≈ 
k_MenuPrefix
≈≈ 
+
≈≈ 
$str
≈≈ .
,
≈≈. /
false
≈≈0 5
,
≈≈5 6
PreferenceKeys
≈≈7 E
.
≈≈E F

menuExport
≈≈F P
+
≈≈Q R
$num
≈≈S T
)
≈≈T U
]
≈≈U V
static
∆∆ 
void
∆∆	 #
MenuPerform_ExportPly
∆∆ #
(
∆∆# $
)
∆∆$ %
{
«« 
var
»» 
instance
»» 
=
»» !
EditorToolbarLoader
»» %
.
»»% &
GetInstance
»»& 1
<
»»1 2
	ExportPly
»»2 ;
>
»»; <
(
»»< =
)
»»= >
;
»»> ?
if
…… 
(
…… 
instance
…… 
!=
…… 
null
…… 
&&
…… 
instance
…… "
.
……" #
enabled
……# *
)
……* +
EditorUtility
   
.
   
ShowNotification
   "
(
  " #
instance
  # +
.
  + ,
DoAction
  , 4
(
  4 5
)
  5 6
.
  6 7
notification
  7 C
)
  C D
;
  D E
}
ÀÀ 
[
ÕÕ 
MenuItem
ÕÕ 
(
ÕÕ 
k_MenuPrefix
ÕÕ 
+
ÕÕ 
$str
ÕÕ 4
,
ÕÕ4 5
true
ÕÕ6 :
,
ÕÕ: ;
PreferenceKeys
ÕÕ< J
.
ÕÕJ K

menuExport
ÕÕK U
+
ÕÕV W
$num
ÕÕX Y
)
ÕÕY Z
]
ÕÕZ [
static
ŒŒ 
bool
ŒŒ	 '
MenuVerify_ExportStlAscii
ŒŒ '
(
ŒŒ' (
)
ŒŒ( )
{
œœ 
var
–– 
instance
–– 
=
–– !
EditorToolbarLoader
–– %
.
––% &
GetInstance
––& 1
<
––1 2
ExportStlAscii
––2 @
>
––@ A
(
––A B
)
––B C
;
––C D
return
—— 	
instance
——
 
!=
—— 
null
—— 
&&
—— 
instance
—— &
.
——& '
enabled
——' .
;
——. /
}
““ 
[
‘‘ 
MenuItem
‘‘ 
(
‘‘ 
k_MenuPrefix
‘‘ 
+
‘‘ 
$str
‘‘ 4
,
‘‘4 5
false
‘‘6 ;
,
‘‘; <
PreferenceKeys
‘‘= K
.
‘‘K L

menuExport
‘‘L V
+
‘‘W X
$num
‘‘Y Z
)
‘‘Z [
]
‘‘[ \
static
’’ 
void
’’	 (
MenuPerform_ExportStlAscii
’’ (
(
’’( )
)
’’) *
{
÷÷ 
var
◊◊ 
instance
◊◊ 
=
◊◊ !
EditorToolbarLoader
◊◊ %
.
◊◊% &
GetInstance
◊◊& 1
<
◊◊1 2
ExportStlAscii
◊◊2 @
>
◊◊@ A
(
◊◊A B
)
◊◊B C
;
◊◊C D
if
ÿÿ 
(
ÿÿ 
instance
ÿÿ 
!=
ÿÿ 
null
ÿÿ 
&&
ÿÿ 
instance
ÿÿ "
.
ÿÿ" #
enabled
ÿÿ# *
)
ÿÿ* +
EditorUtility
ŸŸ 
.
ŸŸ 
ShowNotification
ŸŸ "
(
ŸŸ" #
instance
ŸŸ# +
.
ŸŸ+ ,
DoAction
ŸŸ, 4
(
ŸŸ4 5
)
ŸŸ5 6
.
ŸŸ6 7
notification
ŸŸ7 C
)
ŸŸC D
;
ŸŸD E
}
⁄⁄ 
[
‹‹ 
MenuItem
‹‹ 
(
‹‹ 
k_MenuPrefix
‹‹ 
+
‹‹ 
$str
‹‹ 5
,
‹‹5 6
true
‹‹7 ;
,
‹‹; <
PreferenceKeys
‹‹= K
.
‹‹K L

menuExport
‹‹L V
+
‹‹W X
$num
‹‹Y Z
)
‹‹Z [
]
‹‹[ \
static
›› 
bool
››	 (
MenuVerify_ExportStlBinary
›› (
(
››( )
)
››) *
{
ﬁﬁ 
var
ﬂﬂ 
instance
ﬂﬂ 
=
ﬂﬂ !
EditorToolbarLoader
ﬂﬂ %
.
ﬂﬂ% &
GetInstance
ﬂﬂ& 1
<
ﬂﬂ1 2
ExportStlBinary
ﬂﬂ2 A
>
ﬂﬂA B
(
ﬂﬂB C
)
ﬂﬂC D
;
ﬂﬂD E
return
‡‡ 	
instance
‡‡
 
!=
‡‡ 
null
‡‡ 
&&
‡‡ 
instance
‡‡ &
.
‡‡& '
enabled
‡‡' .
;
‡‡. /
}
·· 
[
„„ 
MenuItem
„„ 
(
„„ 
k_MenuPrefix
„„ 
+
„„ 
$str
„„ 5
,
„„5 6
false
„„7 <
,
„„< =
PreferenceKeys
„„> L
.
„„L M

menuExport
„„M W
+
„„X Y
$num
„„Z [
)
„„[ \
]
„„\ ]
static
‰‰ 
void
‰‰	 )
MenuPerform_ExportStlBinary
‰‰ )
(
‰‰) *
)
‰‰* +
{
ÂÂ 
var
ÊÊ 
instance
ÊÊ 
=
ÊÊ !
EditorToolbarLoader
ÊÊ %
.
ÊÊ% &
GetInstance
ÊÊ& 1
<
ÊÊ1 2
ExportStlBinary
ÊÊ2 A
>
ÊÊA B
(
ÊÊB C
)
ÊÊC D
;
ÊÊD E
if
ÁÁ 
(
ÁÁ 
instance
ÁÁ 
!=
ÁÁ 
null
ÁÁ 
&&
ÁÁ 
instance
ÁÁ "
.
ÁÁ" #
enabled
ÁÁ# *
)
ÁÁ* +
EditorUtility
ËË 
.
ËË 
ShowNotification
ËË "
(
ËË" #
instance
ËË# +
.
ËË+ ,
DoAction
ËË, 4
(
ËË4 5
)
ËË5 6
.
ËË6 7
notification
ËË7 C
)
ËËC D
;
ËËD E
}
ÈÈ 
[
ÎÎ 
MenuItem
ÎÎ 
(
ÎÎ 
k_MenuPrefix
ÎÎ 
+
ÎÎ 
$str
ÎÎ 1
,
ÎÎ1 2
true
ÎÎ3 7
,
ÎÎ7 8
PreferenceKeys
ÎÎ9 G
.
ÎÎG H
menuGeometry
ÎÎH T
+
ÎÎU V
$num
ÎÎW X
)
ÎÎX Y
]
ÎÎY Z
static
ÏÏ 
bool
ÏÏ	 #
MenuVerify_BevelEdges
ÏÏ #
(
ÏÏ# $
)
ÏÏ$ %
{
ÌÌ 
var
ÓÓ 
instance
ÓÓ 
=
ÓÓ !
EditorToolbarLoader
ÓÓ %
.
ÓÓ% &
GetInstance
ÓÓ& 1
<
ÓÓ1 2

BevelEdges
ÓÓ2 <
>
ÓÓ< =
(
ÓÓ= >
)
ÓÓ> ?
;
ÓÓ? @
return
ÔÔ 	
instance
ÔÔ
 
!=
ÔÔ 
null
ÔÔ 
&&
ÔÔ 
instance
ÔÔ &
.
ÔÔ& '
enabled
ÔÔ' .
;
ÔÔ. /
}
 
[
ÚÚ 
MenuItem
ÚÚ 
(
ÚÚ 
k_MenuPrefix
ÚÚ 
+
ÚÚ 
$str
ÚÚ 1
,
ÚÚ1 2
false
ÚÚ3 8
,
ÚÚ8 9
PreferenceKeys
ÚÚ: H
.
ÚÚH I
menuGeometry
ÚÚI U
+
ÚÚV W
$num
ÚÚX Y
)
ÚÚY Z
]
ÚÚZ [
static
ÛÛ 
void
ÛÛ	 $
MenuPerform_BevelEdges
ÛÛ $
(
ÛÛ$ %
)
ÛÛ% &
{
ÙÙ 
var
ıı 
instance
ıı 
=
ıı !
EditorToolbarLoader
ıı %
.
ıı% &
GetInstance
ıı& 1
<
ıı1 2

BevelEdges
ıı2 <
>
ıı< =
(
ıı= >
)
ıı> ?
;
ıı? @
if
ˆˆ 
(
ˆˆ 
instance
ˆˆ 
!=
ˆˆ 
null
ˆˆ 
&&
ˆˆ 
instance
ˆˆ "
.
ˆˆ" #
enabled
ˆˆ# *
)
ˆˆ* +
EditorUtility
˜˜ 
.
˜˜ 
ShowNotification
˜˜ "
(
˜˜" #
instance
˜˜# +
.
˜˜+ ,
DoAction
˜˜, 4
(
˜˜4 5
)
˜˜5 6
.
˜˜6 7
notification
˜˜7 C
)
˜˜C D
;
˜˜D E
}
¯¯ 
[
˙˙ 
MenuItem
˙˙ 
(
˙˙ 
k_MenuPrefix
˙˙ 
+
˙˙ 
$str
˙˙ 5
,
˙˙5 6
true
˙˙7 ;
,
˙˙; <
PreferenceKeys
˙˙= K
.
˙˙K L
menuGeometry
˙˙L X
+
˙˙Y Z
$num
˙˙[ \
)
˙˙\ ]
]
˙˙] ^
static
˚˚ 
bool
˚˚	 $
MenuVerify_BridgeEdges
˚˚ $
(
˚˚$ %
)
˚˚% &
{
¸¸ 
var
˝˝ 
instance
˝˝ 
=
˝˝ !
EditorToolbarLoader
˝˝ %
.
˝˝% &
GetInstance
˝˝& 1
<
˝˝1 2
BridgeEdges
˝˝2 =
>
˝˝= >
(
˝˝> ?
)
˝˝? @
;
˝˝@ A
return
˛˛ 	
instance
˛˛
 
!=
˛˛ 
null
˛˛ 
&&
˛˛ 
instance
˛˛ &
.
˛˛& '
enabled
˛˛' .
;
˛˛. /
}
ˇˇ 
[
ÅÅ 
MenuItem
ÅÅ 
(
ÅÅ 
k_MenuPrefix
ÅÅ 
+
ÅÅ 
$str
ÅÅ 5
,
ÅÅ5 6
false
ÅÅ7 <
,
ÅÅ< =
PreferenceKeys
ÅÅ> L
.
ÅÅL M
menuGeometry
ÅÅM Y
+
ÅÅZ [
$num
ÅÅ\ ]
)
ÅÅ] ^
]
ÅÅ^ _
static
ÇÇ 
void
ÇÇ	 %
MenuPerform_BridgeEdges
ÇÇ %
(
ÇÇ% &
)
ÇÇ& '
{
ÉÉ 
var
ÑÑ 
instance
ÑÑ 
=
ÑÑ !
EditorToolbarLoader
ÑÑ %
.
ÑÑ% &
GetInstance
ÑÑ& 1
<
ÑÑ1 2
BridgeEdges
ÑÑ2 =
>
ÑÑ= >
(
ÑÑ> ?
)
ÑÑ? @
;
ÑÑ@ A
if
ÖÖ 
(
ÖÖ 
instance
ÖÖ 
!=
ÖÖ 
null
ÖÖ 
&&
ÖÖ 
instance
ÖÖ "
.
ÖÖ" #
enabled
ÖÖ# *
)
ÖÖ* +
EditorUtility
ÜÜ 
.
ÜÜ 
ShowNotification
ÜÜ "
(
ÜÜ" #
instance
ÜÜ# +
.
ÜÜ+ ,
DoAction
ÜÜ, 4
(
ÜÜ4 5
)
ÜÜ5 6
.
ÜÜ6 7
notification
ÜÜ7 C
)
ÜÜC D
;
ÜÜD E
}
áá 
[
ââ 
MenuItem
ââ 
(
ââ 
k_MenuPrefix
ââ 
+
ââ 
$str
ââ :
,
ââ: ;
true
ââ< @
,
ââ@ A
PreferenceKeys
ââB P
.
ââP Q
menuGeometry
ââQ ]
+
ââ^ _
$num
ââ` a
)
ââa b
]
ââb c
static
ää 
bool
ää	 )
MenuVerify_CollapseVertices
ää )
(
ää) *
)
ää* +
{
ãã 
var
åå 
instance
åå 
=
åå !
EditorToolbarLoader
åå %
.
åå% &
GetInstance
åå& 1
<
åå1 2
CollapseVertices
åå2 B
>
ååB C
(
ååC D
)
ååD E
;
ååE F
return
çç 	
instance
çç
 
!=
çç 
null
çç 
&&
çç 
instance
çç &
.
çç& '
enabled
çç' .
;
çç. /
}
éé 
[
êê 
MenuItem
êê 
(
êê 
k_MenuPrefix
êê 
+
êê 
$str
êê :
,
êê: ;
false
êê< A
,
êêA B
PreferenceKeys
êêC Q
.
êêQ R
menuGeometry
êêR ^
+
êê_ `
$num
êêa b
)
êêb c
]
êêc d
static
ëë 
void
ëë	 *
MenuPerform_CollapseVertices
ëë *
(
ëë* +
)
ëë+ ,
{
íí 
var
ìì 
instance
ìì 
=
ìì !
EditorToolbarLoader
ìì %
.
ìì% &
GetInstance
ìì& 1
<
ìì1 2
CollapseVertices
ìì2 B
>
ììB C
(
ììC D
)
ììD E
;
ììE F
if
îî 
(
îî 
instance
îî 
!=
îî 
null
îî 
&&
îî 
instance
îî "
.
îî" #
enabled
îî# *
)
îî* +
EditorUtility
ïï 
.
ïï 
ShowNotification
ïï "
(
ïï" #
instance
ïï# +
.
ïï+ ,
DoAction
ïï, 4
(
ïï4 5
)
ïï5 6
.
ïï6 7
notification
ïï7 C
)
ïïC D
;
ïïD E
}
ññ 
[
òò 
MenuItem
òò 
(
òò 
k_MenuPrefix
òò 
+
òò 
$str
òò :
,
òò: ;
true
òò< @
,
òò@ A
PreferenceKeys
òòB P
.
òòP Q
menuGeometry
òòQ ]
+
òò^ _
$num
òò` a
)
òòa b
]
òòb c
static
ôô 
bool
ôô	 +
MenuVerify_ConformFaceNormals
ôô +
(
ôô+ ,
)
ôô, -
{
öö 
var
õõ 
instance
õõ 
=
õõ !
EditorToolbarLoader
õõ %
.
õõ% &
GetInstance
õõ& 1
<
õõ1 2 
ConformFaceNormals
õõ2 D
>
õõD E
(
õõE F
)
õõF G
;
õõG H
return
úú 	
instance
úú
 
!=
úú 
null
úú 
&&
úú 
instance
úú &
.
úú& '
enabled
úú' .
;
úú. /
}
ùù 
[
üü 
MenuItem
üü 
(
üü 
k_MenuPrefix
üü 
+
üü 
$str
üü :
,
üü: ;
false
üü< A
,
üüA B
PreferenceKeys
üüC Q
.
üüQ R
menuGeometry
üüR ^
+
üü_ `
$num
üüa b
)
üüb c
]
üüc d
static
†† 
void
††	 ,
MenuPerform_ConformFaceNormals
†† ,
(
††, -
)
††- .
{
°° 
var
¢¢ 
instance
¢¢ 
=
¢¢ !
EditorToolbarLoader
¢¢ %
.
¢¢% &
GetInstance
¢¢& 1
<
¢¢1 2 
ConformFaceNormals
¢¢2 D
>
¢¢D E
(
¢¢E F
)
¢¢F G
;
¢¢G H
if
££ 
(
££ 
instance
££ 
!=
££ 
null
££ 
&&
££ 
instance
££ "
.
££" #
enabled
££# *
)
££* +
EditorUtility
§§ 
.
§§ 
ShowNotification
§§ "
(
§§" #
instance
§§# +
.
§§+ ,
DoAction
§§, 4
(
§§4 5
)
§§5 6
.
§§6 7
notification
§§7 C
)
§§C D
;
§§D E
}
•• 
[
ßß 
MenuItem
ßß 
(
ßß 
k_MenuPrefix
ßß 
+
ßß 
$str
ßß >
,
ßß> ?
true
ßß@ D
,
ßßD E
PreferenceKeys
ßßF T
.
ßßT U
menuGeometry
ßßU a
+
ßßb c
$num
ßßd e
)
ßße f
]
ßßf g
static
®® 
bool
®®	 $
MenuVerify_DeleteFaces
®® $
(
®®$ %
)
®®% &
{
©© 
var
™™ 
instance
™™ 
=
™™ !
EditorToolbarLoader
™™ %
.
™™% &
GetInstance
™™& 1
<
™™1 2
DeleteFaces
™™2 =
>
™™= >
(
™™> ?
)
™™? @
;
™™@ A
return
´´ 	
instance
´´
 
!=
´´ 
null
´´ 
&&
´´ 
instance
´´ &
.
´´& '
enabled
´´' .
;
´´. /
}
¨¨ 
[
ØØ 
Shortcut
ØØ 
(
ØØ 
k_ShortcutPrefix
ØØ 
+
ØØ 
$str
ØØ 6
,
ØØ6 7
typeof
ØØ8 >
(
ØØ> ?
UnityEditor
ØØ? J
.
ØØJ K
	SceneView
ØØK T
)
ØØT U
,
ØØU V
(
ØØW X
KeyCode
ØØX _
)
ØØ_ `
$num
ØØa b
,
ØØb c
(
ØØd e
ShortcutModifiers
ØØe v
)
ØØv w
$num
ØØx y
)
ØØy z
]
ØØz {
[
±± 
MenuItem
±± 
(
±± 
k_MenuPrefix
±± 
+
±± 
$str
±± >
,
±±> ?
false
±±@ E
,
±±E F
PreferenceKeys
±±G U
.
±±U V
menuGeometry
±±V b
+
±±c d
$num
±±e f
)
±±f g
]
±±g h
static
≤≤ 
void
≤≤	 %
MenuPerform_DeleteFaces
≤≤ %
(
≤≤% &
)
≤≤& '
{
≥≥ 
var
¥¥ 
instance
¥¥ 
=
¥¥ !
EditorToolbarLoader
¥¥ %
.
¥¥% &
GetInstance
¥¥& 1
<
¥¥1 2
DeleteFaces
¥¥2 =
>
¥¥= >
(
¥¥> ?
)
¥¥? @
;
¥¥@ A
if
µµ 
(
µµ 
instance
µµ 
!=
µµ 
null
µµ 
&&
µµ 
instance
µµ "
.
µµ" #
enabled
µµ# *
)
µµ* +
EditorUtility
∂∂ 
.
∂∂ 
ShowNotification
∂∂ "
(
∂∂" #
instance
∂∂# +
.
∂∂+ ,
DoAction
∂∂, 4
(
∂∂4 5
)
∂∂5 6
.
∂∂6 7
notification
∂∂7 C
)
∂∂C D
;
∂∂D E
}
∑∑ 
[
ππ 
MenuItem
ππ 
(
ππ 
k_MenuPrefix
ππ 
+
ππ 
$str
ππ 2
,
ππ2 3
true
ππ4 8
,
ππ8 9
PreferenceKeys
ππ: H
.
ππH I
menuGeometry
ππI U
+
ππV W
$num
ππX Y
)
ππY Z
]
ππZ [
static
∫∫ 
bool
∫∫	 $
MenuVerify_DetachFaces
∫∫ $
(
∫∫$ %
)
∫∫% &
{
ªª 
var
ºº 
instance
ºº 
=
ºº !
EditorToolbarLoader
ºº %
.
ºº% &
GetInstance
ºº& 1
<
ºº1 2
DetachFaces
ºº2 =
>
ºº= >
(
ºº> ?
)
ºº? @
;
ºº@ A
return
ΩΩ 	
instance
ΩΩ
 
!=
ΩΩ 
null
ΩΩ 
&&
ΩΩ 
instance
ΩΩ &
.
ΩΩ& '
enabled
ΩΩ' .
;
ΩΩ. /
}
ææ 
[
¿¿ 
MenuItem
¿¿ 
(
¿¿ 
k_MenuPrefix
¿¿ 
+
¿¿ 
$str
¿¿ 2
,
¿¿2 3
false
¿¿4 9
,
¿¿9 :
PreferenceKeys
¿¿; I
.
¿¿I J
menuGeometry
¿¿J V
+
¿¿W X
$num
¿¿Y Z
)
¿¿Z [
]
¿¿[ \
static
¡¡ 
void
¡¡	 %
MenuPerform_DetachFaces
¡¡ %
(
¡¡% &
)
¡¡& '
{
¬¬ 
var
√√ 
instance
√√ 
=
√√ !
EditorToolbarLoader
√√ %
.
√√% &
GetInstance
√√& 1
<
√√1 2
DetachFaces
√√2 =
>
√√= >
(
√√> ?
)
√√? @
;
√√@ A
if
ƒƒ 
(
ƒƒ 
instance
ƒƒ 
!=
ƒƒ 
null
ƒƒ 
&&
ƒƒ 
instance
ƒƒ "
.
ƒƒ" #
enabled
ƒƒ# *
)
ƒƒ* +
EditorUtility
≈≈ 
.
≈≈ 
ShowNotification
≈≈ "
(
≈≈" #
instance
≈≈# +
.
≈≈+ ,
DoAction
≈≈, 4
(
≈≈4 5
)
≈≈5 6
.
≈≈6 7
notification
≈≈7 C
)
≈≈C D
;
≈≈D E
}
∆∆ 
[
»» 
MenuItem
»» 
(
»» 
k_MenuPrefix
»» 
+
»» 
$str
»» 5
,
»»5 6
true
»»7 ;
,
»»; <
PreferenceKeys
»»= K
.
»»K L
menuGeometry
»»L X
+
»»Y Z
$num
»»[ \
)
»»\ ]
]
»»] ^
static
…… 
bool
……	 '
MenuVerify_DuplicateFaces
…… '
(
……' (
)
……( )
{
   
var
ÀÀ 
instance
ÀÀ 
=
ÀÀ !
EditorToolbarLoader
ÀÀ %
.
ÀÀ% &
GetInstance
ÀÀ& 1
<
ÀÀ1 2
DuplicateFaces
ÀÀ2 @
>
ÀÀ@ A
(
ÀÀA B
)
ÀÀB C
;
ÀÀC D
return
ÃÃ 	
instance
ÃÃ
 
!=
ÃÃ 
null
ÃÃ 
&&
ÃÃ 
instance
ÃÃ &
.
ÃÃ& '
enabled
ÃÃ' .
;
ÃÃ. /
}
ÕÕ 
[
œœ 
MenuItem
œœ 
(
œœ 
k_MenuPrefix
œœ 
+
œœ 
$str
œœ 5
,
œœ5 6
false
œœ7 <
,
œœ< =
PreferenceKeys
œœ> L
.
œœL M
menuGeometry
œœM Y
+
œœZ [
$num
œœ\ ]
)
œœ] ^
]
œœ^ _
static
–– 
void
––	 (
MenuPerform_DuplicateFaces
–– (
(
––( )
)
––) *
{
—— 
var
““ 
instance
““ 
=
““ !
EditorToolbarLoader
““ %
.
““% &
GetInstance
““& 1
<
““1 2
DuplicateFaces
““2 @
>
““@ A
(
““A B
)
““B C
;
““C D
if
”” 
(
”” 
instance
”” 
!=
”” 
null
”” 
&&
”” 
instance
”” "
.
””" #
enabled
””# *
)
””* +
EditorUtility
‘‘ 
.
‘‘ 
ShowNotification
‘‘ "
(
‘‘" #
instance
‘‘# +
.
‘‘+ ,
DoAction
‘‘, 4
(
‘‘4 5
)
‘‘5 6
.
‘‘6 7
notification
‘‘7 C
)
‘‘C D
;
‘‘D E
}
’’ 
[
◊◊ 
MenuItem
◊◊ 
(
◊◊ 
k_MenuPrefix
◊◊ 
+
◊◊ 
$str
◊◊ 0
,
◊◊0 1
true
◊◊2 6
,
◊◊6 7
PreferenceKeys
◊◊8 F
.
◊◊F G
menuGeometry
◊◊G S
+
◊◊T U
$num
◊◊V W
)
◊◊W X
]
◊◊X Y
static
ÿÿ 
bool
ÿÿ	  
MenuVerify_Extrude
ÿÿ  
(
ÿÿ  !
)
ÿÿ! "
{
ŸŸ 
var
⁄⁄ 
instance
⁄⁄ 
=
⁄⁄ !
EditorToolbarLoader
⁄⁄ %
.
⁄⁄% &
GetInstance
⁄⁄& 1
<
⁄⁄1 2
Extrude
⁄⁄2 9
>
⁄⁄9 :
(
⁄⁄: ;
)
⁄⁄; <
;
⁄⁄< =
return
€€ 	
instance
€€
 
!=
€€ 
null
€€ 
&&
€€ 
instance
€€ &
.
€€& '
enabled
€€' .
;
€€. /
}
‹‹ 
[
ﬁﬁ 
MenuItem
ﬁﬁ 
(
ﬁﬁ 
k_MenuPrefix
ﬁﬁ 
+
ﬁﬁ 
$str
ﬁﬁ 0
,
ﬁﬁ0 1
false
ﬁﬁ2 7
,
ﬁﬁ7 8
PreferenceKeys
ﬁﬁ9 G
.
ﬁﬁG H
menuGeometry
ﬁﬁH T
+
ﬁﬁU V
$num
ﬁﬁW X
)
ﬁﬁX Y
]
ﬁﬁY Z
static
ﬂﬂ 
void
ﬂﬂ	 !
MenuPerform_Extrude
ﬂﬂ !
(
ﬂﬂ! "
)
ﬂﬂ" #
{
‡‡ 
var
·· 
instance
·· 
=
·· !
EditorToolbarLoader
·· %
.
··% &
GetInstance
··& 1
<
··1 2
Extrude
··2 9
>
··9 :
(
··: ;
)
··; <
;
··< =
if
‚‚ 
(
‚‚ 
instance
‚‚ 
!=
‚‚ 
null
‚‚ 
&&
‚‚ 
instance
‚‚ "
.
‚‚" #
enabled
‚‚# *
)
‚‚* +
EditorUtility
„„ 
.
„„ 
ShowNotification
„„ "
(
„„" #
instance
„„# +
.
„„+ ,
DoAction
„„, 4
(
„„4 5
)
„„5 6
.
„„6 7
notification
„„7 C
)
„„C D
;
„„D E
}
‰‰ 
[
ÊÊ 
MenuItem
ÊÊ 
(
ÊÊ 
k_MenuPrefix
ÊÊ 
+
ÊÊ 
$str
ÊÊ /
,
ÊÊ/ 0
true
ÊÊ1 5
,
ÊÊ5 6
PreferenceKeys
ÊÊ7 E
.
ÊÊE F
menuGeometry
ÊÊF R
+
ÊÊS T
$num
ÊÊU V
)
ÊÊV W
]
ÊÊW X
static
ÁÁ 
bool
ÁÁ	 !
MenuVerify_FillHole
ÁÁ !
(
ÁÁ! "
)
ÁÁ" #
{
ËË 
var
ÈÈ 
instance
ÈÈ 
=
ÈÈ !
EditorToolbarLoader
ÈÈ %
.
ÈÈ% &
GetInstance
ÈÈ& 1
<
ÈÈ1 2
FillHole
ÈÈ2 :
>
ÈÈ: ;
(
ÈÈ; <
)
ÈÈ< =
;
ÈÈ= >
return
ÍÍ 	
instance
ÍÍ
 
!=
ÍÍ 
null
ÍÍ 
&&
ÍÍ 
instance
ÍÍ &
.
ÍÍ& '
enabled
ÍÍ' .
;
ÍÍ. /
}
ÎÎ 
[
ÌÌ 
MenuItem
ÌÌ 
(
ÌÌ 
k_MenuPrefix
ÌÌ 
+
ÌÌ 
$str
ÌÌ /
,
ÌÌ/ 0
false
ÌÌ1 6
,
ÌÌ6 7
PreferenceKeys
ÌÌ8 F
.
ÌÌF G
menuGeometry
ÌÌG S
+
ÌÌT U
$num
ÌÌV W
)
ÌÌW X
]
ÌÌX Y
static
ÓÓ 
void
ÓÓ	 "
MenuPerform_FillHole
ÓÓ "
(
ÓÓ" #
)
ÓÓ# $
{
ÔÔ 
var
 
instance
 
=
 !
EditorToolbarLoader
 %
.
% &
GetInstance
& 1
<
1 2
FillHole
2 :
>
: ;
(
; <
)
< =
;
= >
if
ÒÒ 
(
ÒÒ 
instance
ÒÒ 
!=
ÒÒ 
null
ÒÒ 
&&
ÒÒ 
instance
ÒÒ "
.
ÒÒ" #
enabled
ÒÒ# *
)
ÒÒ* +
EditorUtility
ÚÚ 
.
ÚÚ 
ShowNotification
ÚÚ "
(
ÚÚ" #
instance
ÚÚ# +
.
ÚÚ+ ,
DoAction
ÚÚ, 4
(
ÚÚ4 5
)
ÚÚ5 6
.
ÚÚ6 7
notification
ÚÚ7 C
)
ÚÚC D
;
ÚÚD E
}
ÛÛ 
[
ıı 
MenuItem
ıı 
(
ıı 
k_MenuPrefix
ıı 
+
ıı 
$str
ıı 4
,
ıı4 5
true
ıı6 :
,
ıı: ;
PreferenceKeys
ıı< J
.
ııJ K
menuGeometry
ııK W
+
ııX Y
$num
ııZ [
)
ıı[ \
]
ıı\ ]
static
ˆˆ 
bool
ˆˆ	 %
MenuVerify_FlipFaceEdge
ˆˆ %
(
ˆˆ% &
)
ˆˆ& '
{
˜˜ 
var
¯¯ 
instance
¯¯ 
=
¯¯ !
EditorToolbarLoader
¯¯ %
.
¯¯% &
GetInstance
¯¯& 1
<
¯¯1 2
FlipFaceEdge
¯¯2 >
>
¯¯> ?
(
¯¯? @
)
¯¯@ A
;
¯¯A B
return
˘˘ 	
instance
˘˘
 
!=
˘˘ 
null
˘˘ 
&&
˘˘ 
instance
˘˘ &
.
˘˘& '
enabled
˘˘' .
;
˘˘. /
}
˙˙ 
[
¸¸ 
MenuItem
¸¸ 
(
¸¸ 
k_MenuPrefix
¸¸ 
+
¸¸ 
$str
¸¸ 4
,
¸¸4 5
false
¸¸6 ;
,
¸¸; <
PreferenceKeys
¸¸= K
.
¸¸K L
menuGeometry
¸¸L X
+
¸¸Y Z
$num
¸¸[ \
)
¸¸\ ]
]
¸¸] ^
static
˝˝ 
void
˝˝	 &
MenuPerform_FlipFaceEdge
˝˝ &
(
˝˝& '
)
˝˝' (
{
˛˛ 
var
ˇˇ 
instance
ˇˇ 
=
ˇˇ !
EditorToolbarLoader
ˇˇ %
.
ˇˇ% &
GetInstance
ˇˇ& 1
<
ˇˇ1 2
FlipFaceEdge
ˇˇ2 >
>
ˇˇ> ?
(
ˇˇ? @
)
ˇˇ@ A
;
ˇˇA B
if
ÄÄ 
(
ÄÄ 
instance
ÄÄ 
!=
ÄÄ 
null
ÄÄ 
&&
ÄÄ 
instance
ÄÄ "
.
ÄÄ" #
enabled
ÄÄ# *
)
ÄÄ* +
EditorUtility
ÅÅ 
.
ÅÅ 
ShowNotification
ÅÅ "
(
ÅÅ" #
instance
ÅÅ# +
.
ÅÅ+ ,
DoAction
ÅÅ, 4
(
ÅÅ4 5
)
ÅÅ5 6
.
ÅÅ6 7
notification
ÅÅ7 C
)
ÅÅC D
;
ÅÅD E
}
ÇÇ 
[
ÑÑ 
MenuItem
ÑÑ 
(
ÑÑ 
k_MenuPrefix
ÑÑ 
+
ÑÑ 
$str
ÑÑ :
,
ÑÑ: ;
true
ÑÑ< @
,
ÑÑ@ A
PreferenceKeys
ÑÑB P
.
ÑÑP Q
menuGeometry
ÑÑQ ]
+
ÑÑ^ _
$num
ÑÑ` a
)
ÑÑa b
]
ÑÑb c
static
ÖÖ 
bool
ÖÖ	 (
MenuVerify_FlipFaceNormals
ÖÖ (
(
ÖÖ( )
)
ÖÖ) *
{
ÜÜ 
var
áá 
instance
áá 
=
áá !
EditorToolbarLoader
áá %
.
áá% &
GetInstance
áá& 1
<
áá1 2
FlipFaceNormals
áá2 A
>
ááA B
(
ááB C
)
ááC D
;
ááD E
return
àà 	
instance
àà
 
!=
àà 
null
àà 
&&
àà 
instance
àà &
.
àà& '
enabled
àà' .
;
àà. /
}
ââ 
[
ãã 
MenuItem
ãã 
(
ãã 
k_MenuPrefix
ãã 
+
ãã 
$str
ãã :
,
ãã: ;
false
ãã< A
,
ããA B
PreferenceKeys
ããC Q
.
ããQ R
menuGeometry
ããR ^
+
ãã_ `
$num
ããa b
)
ããb c
]
ããc d
static
åå 
void
åå	 )
MenuPerform_FlipFaceNormals
åå )
(
åå) *
)
åå* +
{
çç 
var
éé 
instance
éé 
=
éé !
EditorToolbarLoader
éé %
.
éé% &
GetInstance
éé& 1
<
éé1 2
FlipFaceNormals
éé2 A
>
ééA B
(
ééB C
)
ééC D
;
ééD E
if
èè 
(
èè 
instance
èè 
!=
èè 
null
èè 
&&
èè 
instance
èè "
.
èè" #
enabled
èè# *
)
èè* +
EditorUtility
êê 
.
êê 
ShowNotification
êê "
(
êê" #
instance
êê# +
.
êê+ ,
DoAction
êê, 4
(
êê4 5
)
êê5 6
.
êê6 7
notification
êê7 C
)
êêC D
;
êêD E
}
ëë 
[
ìì 
MenuItem
ìì 
(
ìì 
k_MenuPrefix
ìì 
+
ìì 
$str
ìì 9
,
ìì9 :
true
ìì; ?
,
ìì? @
PreferenceKeys
ììA O
.
ììO P
menuGeometry
ììP \
+
ìì] ^
$num
ìì_ `
)
ìì` a
]
ììa b
static
îî 
bool
îî	 '
MenuVerify_InsertEdgeLoop
îî '
(
îî' (
)
îî( )
{
ïï 
var
ññ 
instance
ññ 
=
ññ !
EditorToolbarLoader
ññ %
.
ññ% &
GetInstance
ññ& 1
<
ññ1 2
InsertEdgeLoop
ññ2 @
>
ññ@ A
(
ññA B
)
ññB C
;
ññC D
return
óó 	
instance
óó
 
!=
óó 
null
óó 
&&
óó 
instance
óó &
.
óó& '
enabled
óó' .
;
óó. /
}
òò 
[
öö 
MenuItem
öö 
(
öö 
k_MenuPrefix
öö 
+
öö 
$str
öö 9
,
öö9 :
false
öö; @
,
öö@ A
PreferenceKeys
ööB P
.
ööP Q
menuGeometry
ööQ ]
+
öö^ _
$num
öö` a
)
ööa b
]
ööb c
static
õõ 
void
õõ	 (
MenuPerform_InsertEdgeLoop
õõ (
(
õõ( )
)
õõ) *
{
úú 
var
ùù 
instance
ùù 
=
ùù !
EditorToolbarLoader
ùù %
.
ùù% &
GetInstance
ùù& 1
<
ùù1 2
InsertEdgeLoop
ùù2 @
>
ùù@ A
(
ùùA B
)
ùùB C
;
ùùC D
if
ûû 
(
ûû 
instance
ûû 
!=
ûû 
null
ûû 
&&
ûû 
instance
ûû "
.
ûû" #
enabled
ûû# *
)
ûû* +
EditorUtility
üü 
.
üü 
ShowNotification
üü "
(
üü" #
instance
üü# +
.
üü+ ,
DoAction
üü, 4
(
üü4 5
)
üü5 6
.
üü6 7
notification
üü7 C
)
üüC D
;
üüD E
}
†† 
[
¢¢ 
MenuItem
¢¢ 
(
¢¢ 
k_MenuPrefix
¢¢ 
+
¢¢ 
$str
¢¢ 1
,
¢¢1 2
true
¢¢3 7
,
¢¢7 8
PreferenceKeys
¢¢9 G
.
¢¢G H
menuGeometry
¢¢H T
+
¢¢U V
$num
¢¢W X
)
¢¢X Y
]
¢¢Y Z
static
££ 
bool
££	 #
MenuVerify_MergeFaces
££ #
(
££# $
)
££$ %
{
§§ 
var
•• 
instance
•• 
=
•• !
EditorToolbarLoader
•• %
.
••% &
GetInstance
••& 1
<
••1 2

MergeFaces
••2 <
>
••< =
(
••= >
)
••> ?
;
••? @
return
¶¶ 	
instance
¶¶
 
!=
¶¶ 
null
¶¶ 
&&
¶¶ 
instance
¶¶ &
.
¶¶& '
enabled
¶¶' .
;
¶¶. /
}
ßß 
[
©© 
MenuItem
©© 
(
©© 
k_MenuPrefix
©© 
+
©© 
$str
©© 1
,
©©1 2
false
©©3 8
,
©©8 9
PreferenceKeys
©©: H
.
©©H I
menuGeometry
©©I U
+
©©V W
$num
©©X Y
)
©©Y Z
]
©©Z [
static
™™ 
void
™™	 $
MenuPerform_MergeFaces
™™ $
(
™™$ %
)
™™% &
{
´´ 
var
¨¨ 
instance
¨¨ 
=
¨¨ !
EditorToolbarLoader
¨¨ %
.
¨¨% &
GetInstance
¨¨& 1
<
¨¨1 2

MergeFaces
¨¨2 <
>
¨¨< =
(
¨¨= >
)
¨¨> ?
;
¨¨? @
if
≠≠ 
(
≠≠ 
instance
≠≠ 
!=
≠≠ 
null
≠≠ 
&&
≠≠ 
instance
≠≠ "
.
≠≠" #
enabled
≠≠# *
)
≠≠* +
EditorUtility
ÆÆ 
.
ÆÆ 
ShowNotification
ÆÆ "
(
ÆÆ" #
instance
ÆÆ# +
.
ÆÆ+ ,
DoAction
ÆÆ, 4
(
ÆÆ4 5
)
ÆÆ5 6
.
ÆÆ6 7
notification
ÆÆ7 C
)
ÆÆC D
;
ÆÆD E
}
ØØ 
[
±± 
MenuItem
±± 
(
±± 
k_MenuPrefix
±± 
+
±± 
$str
±± 5
,
±±5 6
true
±±7 ;
,
±±; <
PreferenceKeys
±±= K
.
±±K L
menuGeometry
±±L X
+
±±Y Z
$num
±±[ \
)
±±\ ]
]
±±] ^
static
≤≤ 
bool
≤≤	 '
MenuVerify_OffsetElements
≤≤ '
(
≤≤' (
)
≤≤( )
{
≥≥ 
var
¥¥ 
instance
¥¥ 
=
¥¥ !
EditorToolbarLoader
¥¥ %
.
¥¥% &
GetInstance
¥¥& 1
<
¥¥1 2
OffsetElements
¥¥2 @
>
¥¥@ A
(
¥¥A B
)
¥¥B C
;
¥¥C D
return
µµ 	
instance
µµ
 
!=
µµ 
null
µµ 
&&
µµ 
instance
µµ &
.
µµ& '
enabled
µµ' .
;
µµ. /
}
∂∂ 
[
∏∏ 
MenuItem
∏∏ 
(
∏∏ 
k_MenuPrefix
∏∏ 
+
∏∏ 
$str
∏∏ 5
,
∏∏5 6
false
∏∏7 <
,
∏∏< =
PreferenceKeys
∏∏> L
.
∏∏L M
menuGeometry
∏∏M Y
+
∏∏Z [
$num
∏∏\ ]
)
∏∏] ^
]
∏∏^ _
static
ππ 
void
ππ	 (
MenuPerform_OffsetElements
ππ (
(
ππ( )
)
ππ) *
{
∫∫ 
var
ªª 
instance
ªª 
=
ªª !
EditorToolbarLoader
ªª %
.
ªª% &
GetInstance
ªª& 1
<
ªª1 2
OffsetElements
ªª2 @
>
ªª@ A
(
ªªA B
)
ªªB C
;
ªªC D
if
ºº 
(
ºº 
instance
ºº 
!=
ºº 
null
ºº 
&&
ºº 
instance
ºº "
.
ºº" #
enabled
ºº# *
)
ºº* +
EditorUtility
ΩΩ 
.
ΩΩ 
ShowNotification
ΩΩ "
(
ΩΩ" #
instance
ΩΩ# +
.
ΩΩ+ ,
DoAction
ΩΩ, 4
(
ΩΩ4 5
)
ΩΩ5 6
.
ΩΩ6 7
notification
ΩΩ7 C
)
ΩΩC D
;
ΩΩD E
}
ææ 
[
¿¿ 
MenuItem
¿¿ 
(
¿¿ 
k_MenuPrefix
¿¿ 
+
¿¿ 
$str
¿¿ ?
,
¿¿? @
true
¿¿A E
,
¿¿E F
PreferenceKeys
¿¿G U
.
¿¿U V
menuGeometry
¿¿V b
+
¿¿c d
$num
¿¿e f
)
¿¿f g
]
¿¿g h
static
¡¡ 
bool
¡¡	 ,
MenuVerify_SetPivotToSelection
¡¡ ,
(
¡¡, -
)
¡¡- .
{
¬¬ 
var
√√ 
instance
√√ 
=
√√ !
EditorToolbarLoader
√√ %
.
√√% &
GetInstance
√√& 1
<
√√1 2!
SetPivotToSelection
√√2 E
>
√√E F
(
√√F G
)
√√G H
;
√√H I
return
ƒƒ 	
instance
ƒƒ
 
!=
ƒƒ 
null
ƒƒ 
&&
ƒƒ 
instance
ƒƒ &
.
ƒƒ& '
enabled
ƒƒ' .
;
ƒƒ. /
}
≈≈ 
[
«« 
MenuItem
«« 
(
«« 
k_MenuPrefix
«« 
+
«« 
$str
«« ?
,
««? @
false
««A F
,
««F G
PreferenceKeys
««H V
.
««V W
menuGeometry
««W c
+
««d e
$num
««f g
)
««g h
]
««h i
static
»» 
void
»»	 -
MenuPerform_SetPivotToSelection
»» -
(
»»- .
)
»». /
{
…… 
var
   
instance
   
=
   !
EditorToolbarLoader
   %
.
  % &
GetInstance
  & 1
<
  1 2!
SetPivotToSelection
  2 E
>
  E F
(
  F G
)
  G H
;
  H I
if
ÀÀ 
(
ÀÀ 
instance
ÀÀ 
!=
ÀÀ 
null
ÀÀ 
&&
ÀÀ 
instance
ÀÀ "
.
ÀÀ" #
enabled
ÀÀ# *
)
ÀÀ* +
EditorUtility
ÃÃ 
.
ÃÃ 
ShowNotification
ÃÃ "
(
ÃÃ" #
instance
ÃÃ# +
.
ÃÃ+ ,
DoAction
ÃÃ, 4
(
ÃÃ4 5
)
ÃÃ5 6
.
ÃÃ6 7
notification
ÃÃ7 C
)
ÃÃC D
;
ÃÃD E
}
ÕÕ 
[
œœ 
MenuItem
œœ 
(
œœ 
k_MenuPrefix
œœ 
+
œœ 
$str
œœ 6
,
œœ6 7
true
œœ8 <
,
œœ< =
PreferenceKeys
œœ> L
.
œœL M
menuGeometry
œœM Y
+
œœZ [
$num
œœ\ ]
)
œœ] ^
]
œœ^ _
static
–– 
bool
––	 %
MenuVerify_SmartConnect
–– %
(
––% &
)
––& '
{
—— 
var
““ 
instance
““ 
=
““ !
EditorToolbarLoader
““ %
.
““% &
GetInstance
““& 1
<
““1 2
SmartConnect
““2 >
>
““> ?
(
““? @
)
““@ A
;
““A B
return
”” 	
instance
””
 
!=
”” 
null
”” 
&&
”” 
instance
”” &
.
””& '
enabled
””' .
;
””. /
}
‘‘ 
[
÷÷ 
MenuItem
÷÷ 
(
÷÷ 
k_MenuPrefix
÷÷ 
+
÷÷ 
$str
÷÷ 6
,
÷÷6 7
false
÷÷8 =
,
÷÷= >
PreferenceKeys
÷÷? M
.
÷÷M N
menuGeometry
÷÷N Z
+
÷÷[ \
$num
÷÷] ^
)
÷÷^ _
]
÷÷_ `
static
◊◊ 
void
◊◊	 &
MenuPerform_SmartConnect
◊◊ &
(
◊◊& '
)
◊◊' (
{
ÿÿ 
var
ŸŸ 
instance
ŸŸ 
=
ŸŸ !
EditorToolbarLoader
ŸŸ %
.
ŸŸ% &
GetInstance
ŸŸ& 1
<
ŸŸ1 2
SmartConnect
ŸŸ2 >
>
ŸŸ> ?
(
ŸŸ? @
)
ŸŸ@ A
;
ŸŸA B
if
⁄⁄ 
(
⁄⁄ 
instance
⁄⁄ 
!=
⁄⁄ 
null
⁄⁄ 
&&
⁄⁄ 
instance
⁄⁄ "
.
⁄⁄" #
enabled
⁄⁄# *
)
⁄⁄* +
EditorUtility
€€ 
.
€€ 
ShowNotification
€€ "
(
€€" #
instance
€€# +
.
€€+ ,
DoAction
€€, 4
(
€€4 5
)
€€5 6
.
€€6 7
notification
€€7 C
)
€€C D
;
€€D E
}
‹‹ 
[
ﬁﬁ 
MenuItem
ﬁﬁ 
(
ﬁﬁ 
k_MenuPrefix
ﬁﬁ 
+
ﬁﬁ 
$str
ﬁﬁ 8
,
ﬁﬁ8 9
true
ﬁﬁ: >
,
ﬁﬁ> ?
PreferenceKeys
ﬁﬁ@ N
.
ﬁﬁN O
menuGeometry
ﬁﬁO [
+
ﬁﬁ\ ]
$num
ﬁﬁ^ _
)
ﬁﬁ_ `
]
ﬁﬁ` a
static
ﬂﬂ 
bool
ﬂﬂ	 '
MenuVerify_SmartSubdivide
ﬂﬂ '
(
ﬂﬂ' (
)
ﬂﬂ( )
{
‡‡ 
var
·· 
instance
·· 
=
·· !
EditorToolbarLoader
·· %
.
··% &
GetInstance
··& 1
<
··1 2
SmartSubdivide
··2 @
>
··@ A
(
··A B
)
··B C
;
··C D
return
‚‚ 	
instance
‚‚
 
!=
‚‚ 
null
‚‚ 
&&
‚‚ 
instance
‚‚ &
.
‚‚& '
enabled
‚‚' .
;
‚‚. /
}
„„ 
[
ÂÂ 
MenuItem
ÂÂ 
(
ÂÂ 
k_MenuPrefix
ÂÂ 
+
ÂÂ 
$str
ÂÂ 8
,
ÂÂ8 9
false
ÂÂ: ?
,
ÂÂ? @
PreferenceKeys
ÂÂA O
.
ÂÂO P
menuGeometry
ÂÂP \
+
ÂÂ] ^
$num
ÂÂ_ `
)
ÂÂ` a
]
ÂÂa b
static
ÊÊ 
void
ÊÊ	 (
MenuPerform_SmartSubdivide
ÊÊ (
(
ÊÊ( )
)
ÊÊ) *
{
ÁÁ 
var
ËË 
instance
ËË 
=
ËË !
EditorToolbarLoader
ËË %
.
ËË% &
GetInstance
ËË& 1
<
ËË1 2
SmartSubdivide
ËË2 @
>
ËË@ A
(
ËËA B
)
ËËB C
;
ËËC D
if
ÈÈ 
(
ÈÈ 
instance
ÈÈ 
!=
ÈÈ 
null
ÈÈ 
&&
ÈÈ 
instance
ÈÈ "
.
ÈÈ" #
enabled
ÈÈ# *
)
ÈÈ* +
EditorUtility
ÍÍ 
.
ÍÍ 
ShowNotification
ÍÍ "
(
ÍÍ" #
instance
ÍÍ# +
.
ÍÍ+ ,
DoAction
ÍÍ, 4
(
ÍÍ4 5
)
ÍÍ5 6
.
ÍÍ6 7
notification
ÍÍ7 C
)
ÍÍC D
;
ÍÍD E
}
ÎÎ 
[
ÌÌ 
MenuItem
ÌÌ 
(
ÌÌ 
k_MenuPrefix
ÌÌ 
+
ÌÌ 
$str
ÌÌ 7
,
ÌÌ7 8
true
ÌÌ9 =
,
ÌÌ= >
PreferenceKeys
ÌÌ? M
.
ÌÌM N
menuGeometry
ÌÌN Z
+
ÌÌ[ \
$num
ÌÌ] ^
)
ÌÌ^ _
]
ÌÌ_ `
static
ÓÓ 
bool
ÓÓ	 &
MenuVerify_SplitVertices
ÓÓ &
(
ÓÓ& '
)
ÓÓ' (
{
ÔÔ 
var
 
instance
 
=
 !
EditorToolbarLoader
 %
.
% &
GetInstance
& 1
<
1 2
SplitVertices
2 ?
>
? @
(
@ A
)
A B
;
B C
return
ÒÒ 	
instance
ÒÒ
 
!=
ÒÒ 
null
ÒÒ 
&&
ÒÒ 
instance
ÒÒ &
.
ÒÒ& '
enabled
ÒÒ' .
;
ÒÒ. /
}
ÚÚ 
[
ÙÙ 
MenuItem
ÙÙ 
(
ÙÙ 
k_MenuPrefix
ÙÙ 
+
ÙÙ 
$str
ÙÙ 7
,
ÙÙ7 8
false
ÙÙ9 >
,
ÙÙ> ?
PreferenceKeys
ÙÙ@ N
.
ÙÙN O
menuGeometry
ÙÙO [
+
ÙÙ\ ]
$num
ÙÙ^ _
)
ÙÙ_ `
]
ÙÙ` a
static
ıı 
void
ıı	 '
MenuPerform_SplitVertices
ıı '
(
ıı' (
)
ıı( )
{
ˆˆ 
var
˜˜ 
instance
˜˜ 
=
˜˜ !
EditorToolbarLoader
˜˜ %
.
˜˜% &
GetInstance
˜˜& 1
<
˜˜1 2
SplitVertices
˜˜2 ?
>
˜˜? @
(
˜˜@ A
)
˜˜A B
;
˜˜B C
if
¯¯ 
(
¯¯ 
instance
¯¯ 
!=
¯¯ 
null
¯¯ 
&&
¯¯ 
instance
¯¯ "
.
¯¯" #
enabled
¯¯# *
)
¯¯* +
EditorUtility
˘˘ 
.
˘˘ 
ShowNotification
˘˘ "
(
˘˘" #
instance
˘˘# +
.
˘˘+ ,
DoAction
˘˘, 4
(
˘˘4 5
)
˘˘5 6
.
˘˘6 7
notification
˘˘7 C
)
˘˘C D
;
˘˘D E
}
˙˙ 
[
¸¸ 
MenuItem
¸¸ 
(
¸¸ 
k_MenuPrefix
¸¸ 
+
¸¸ 
$str
¸¸ 7
,
¸¸7 8
true
¸¸9 =
,
¸¸= >
PreferenceKeys
¸¸? M
.
¸¸M N
menuGeometry
¸¸N Z
+
¸¸[ \
$num
¸¸] ^
)
¸¸^ _
]
¸¸_ `
static
˝˝ 
bool
˝˝	 )
MenuVerify_TriangulateFaces
˝˝ )
(
˝˝) *
)
˝˝* +
{
˛˛ 
var
ˇˇ 
instance
ˇˇ 
=
ˇˇ !
EditorToolbarLoader
ˇˇ %
.
ˇˇ% &
GetInstance
ˇˇ& 1
<
ˇˇ1 2
TriangulateFaces
ˇˇ2 B
>
ˇˇB C
(
ˇˇC D
)
ˇˇD E
;
ˇˇE F
return
ÄÄ 	
instance
ÄÄ
 
!=
ÄÄ 
null
ÄÄ 
&&
ÄÄ 
instance
ÄÄ &
.
ÄÄ& '
enabled
ÄÄ' .
;
ÄÄ. /
}
ÅÅ 
[
ÉÉ 
MenuItem
ÉÉ 
(
ÉÉ 
k_MenuPrefix
ÉÉ 
+
ÉÉ 
$str
ÉÉ 7
,
ÉÉ7 8
false
ÉÉ9 >
,
ÉÉ> ?
PreferenceKeys
ÉÉ@ N
.
ÉÉN O
menuGeometry
ÉÉO [
+
ÉÉ\ ]
$num
ÉÉ^ _
)
ÉÉ_ `
]
ÉÉ` a
static
ÑÑ 
void
ÑÑ	 *
MenuPerform_TriangulateFaces
ÑÑ *
(
ÑÑ* +
)
ÑÑ+ ,
{
ÖÖ 
var
ÜÜ 
instance
ÜÜ 
=
ÜÜ !
EditorToolbarLoader
ÜÜ %
.
ÜÜ% &
GetInstance
ÜÜ& 1
<
ÜÜ1 2
TriangulateFaces
ÜÜ2 B
>
ÜÜB C
(
ÜÜC D
)
ÜÜD E
;
ÜÜE F
if
áá 
(
áá 
instance
áá 
!=
áá 
null
áá 
&&
áá 
instance
áá "
.
áá" #
enabled
áá# *
)
áá* +
EditorUtility
àà 
.
àà 
ShowNotification
àà "
(
àà" #
instance
àà# +
.
àà+ ,
DoAction
àà, 4
(
àà4 5
)
àà5 6
.
àà6 7
notification
àà7 C
)
ààC D
;
ààD E
}
ââ 
[
ãã 
MenuItem
ãã 
(
ãã 
k_MenuPrefix
ãã 
+
ãã 
$str
ãã 6
,
ãã6 7
true
ãã8 <
,
ãã< =
PreferenceKeys
ãã> L
.
ããL M
menuGeometry
ããM Y
+
ããZ [
$num
ãã\ ]
)
ãã] ^
]
ãã^ _
static
åå 
bool
åå	 %
MenuVerify_WeldVertices
åå %
(
åå% &
)
åå& '
{
çç 
var
éé 
instance
éé 
=
éé !
EditorToolbarLoader
éé %
.
éé% &
GetInstance
éé& 1
<
éé1 2
WeldVertices
éé2 >
>
éé> ?
(
éé? @
)
éé@ A
;
ééA B
return
èè 	
instance
èè
 
!=
èè 
null
èè 
&&
èè 
instance
èè &
.
èè& '
enabled
èè' .
;
èè. /
}
êê 
[
íí 
MenuItem
íí 
(
íí 
k_MenuPrefix
íí 
+
íí 
$str
íí 6
,
íí6 7
false
íí8 =
,
íí= >
PreferenceKeys
íí? M
.
ííM N
menuGeometry
ííN Z
+
íí[ \
$num
íí] ^
)
íí^ _
]
íí_ `
static
ìì 
void
ìì	 &
MenuPerform_WeldVertices
ìì &
(
ìì& '
)
ìì' (
{
îî 
var
ïï 
instance
ïï 
=
ïï !
EditorToolbarLoader
ïï %
.
ïï% &
GetInstance
ïï& 1
<
ïï1 2
WeldVertices
ïï2 >
>
ïï> ?
(
ïï? @
)
ïï@ A
;
ïïA B
if
ññ 
(
ññ 
instance
ññ 
!=
ññ 
null
ññ 
&&
ññ 
instance
ññ "
.
ññ" #
enabled
ññ# *
)
ññ* +
EditorUtility
óó 
.
óó 
ShowNotification
óó "
(
óó" #
instance
óó# +
.
óó+ ,
DoAction
óó, 4
(
óó4 5
)
óó5 6
.
óó6 7
notification
óó7 C
)
óóC D
;
óóD E
}
òò 
[
öö 
MenuItem
öö 
(
öö 
k_MenuPrefix
öö 
+
öö 
$str
öö >
,
öö> ?
true
öö@ D
,
ööD E
PreferenceKeys
ööF T
.
ööT U
menuSelection
ööU b
+
ööc d
$num
ööe f
)
ööf g
]
öög h
static
õõ 
bool
õõ	 +
MenuVerify_ToggleDragRectMode
õõ +
(
õõ+ ,
)
õõ, -
{
úú 
var
ùù 
instance
ùù 
=
ùù !
EditorToolbarLoader
ùù %
.
ùù% &
GetInstance
ùù& 1
<
ùù1 2 
ToggleDragRectMode
ùù2 D
>
ùùD E
(
ùùE F
)
ùùF G
;
ùùG H
return
ûû 	
instance
ûû
 
!=
ûû 
null
ûû 
&&
ûû 
instance
ûû &
.
ûû& '
enabled
ûû' .
;
ûû. /
}
üü 
[
°° 
MenuItem
°° 
(
°° 
k_MenuPrefix
°° 
+
°° 
$str
°° >
,
°°> ?
false
°°@ E
,
°°E F
PreferenceKeys
°°G U
.
°°U V
menuSelection
°°V c
+
°°d e
$num
°°f g
)
°°g h
]
°°h i
static
¢¢ 
void
¢¢	 ,
MenuPerform_ToggleDragRectMode
¢¢ ,
(
¢¢, -
)
¢¢- .
{
££ 
var
§§ 
instance
§§ 
=
§§ !
EditorToolbarLoader
§§ %
.
§§% &
GetInstance
§§& 1
<
§§1 2 
ToggleDragRectMode
§§2 D
>
§§D E
(
§§E F
)
§§F G
;
§§G H
if
•• 
(
•• 
instance
•• 
!=
•• 
null
•• 
&&
•• 
instance
•• "
.
••" #
enabled
••# *
)
••* +
EditorUtility
¶¶ 
.
¶¶ 
ShowNotification
¶¶ "
(
¶¶" #
instance
¶¶# +
.
¶¶+ ,
DoAction
¶¶, 4
(
¶¶4 5
)
¶¶5 6
.
¶¶6 7
notification
¶¶7 C
)
¶¶C D
;
¶¶D E
}
ßß 
[
©© 
MenuItem
©© 
(
©© 
k_MenuPrefix
©© 
+
©© 
$str
©© C
,
©©C D
true
©©E I
,
©©I J
PreferenceKeys
©©K Y
.
©©Y Z
menuSelection
©©Z g
+
©©h i
$num
©©j k
)
©©k l
]
©©l m
static
™™ 
bool
™™	 0
"MenuVerify_ToggleDragSelectionMode
™™ 0
(
™™0 1
)
™™1 2
{
´´ 
var
¨¨ 
instance
¨¨ 
=
¨¨ !
EditorToolbarLoader
¨¨ %
.
¨¨% &
GetInstance
¨¨& 1
<
¨¨1 2%
ToggleDragSelectionMode
¨¨2 I
>
¨¨I J
(
¨¨J K
)
¨¨K L
;
¨¨L M
return
≠≠ 	
instance
≠≠
 
!=
≠≠ 
null
≠≠ 
&&
≠≠ 
instance
≠≠ &
.
≠≠& '
enabled
≠≠' .
;
≠≠. /
}
ÆÆ 
[
∞∞ 
MenuItem
∞∞ 
(
∞∞ 
k_MenuPrefix
∞∞ 
+
∞∞ 
$str
∞∞ C
,
∞∞C D
false
∞∞E J
,
∞∞J K
PreferenceKeys
∞∞L Z
.
∞∞Z [
menuSelection
∞∞[ h
+
∞∞i j
$num
∞∞k l
)
∞∞l m
]
∞∞m n
static
±± 
void
±±	 1
#MenuPerform_ToggleDragSelectionMode
±± 1
(
±±1 2
)
±±2 3
{
≤≤ 
var
≥≥ 
instance
≥≥ 
=
≥≥ !
EditorToolbarLoader
≥≥ %
.
≥≥% &
GetInstance
≥≥& 1
<
≥≥1 2%
ToggleDragSelectionMode
≥≥2 I
>
≥≥I J
(
≥≥J K
)
≥≥K L
;
≥≥L M
if
¥¥ 
(
¥¥ 
instance
¥¥ 
!=
¥¥ 
null
¥¥ 
&&
¥¥ 
instance
¥¥ "
.
¥¥" #
enabled
¥¥# *
)
¥¥* +
EditorUtility
µµ 
.
µµ 
ShowNotification
µµ "
(
µµ" #
instance
µµ# +
.
µµ+ ,
DoAction
µµ, 4
(
µµ4 5
)
µµ5 6
.
µµ6 7
notification
µµ7 C
)
µµC D
;
µµD E
}
∂∂ 
[
∏∏ 
MenuItem
∏∏ 
(
∏∏ 
k_MenuPrefix
∏∏ 
+
∏∏ 
$str
∏∏ F
,
∏∏F G
true
∏∏H L
,
∏∏L M
PreferenceKeys
∏∏N \
.
∏∏\ ]
menuSelection
∏∏] j
+
∏∏k l
$num
∏∏m n
)
∏∏n o
]
∏∏o p
static
ππ 
bool
ππ	 0
"MenuVerify_ToggleHandleOrientation
ππ 0
(
ππ0 1
)
ππ1 2
{
∫∫ 
var
ªª 
instance
ªª 
=
ªª !
EditorToolbarLoader
ªª %
.
ªª% &
GetInstance
ªª& 1
<
ªª1 2%
ToggleHandleOrientation
ªª2 I
>
ªªI J
(
ªªJ K
)
ªªK L
;
ªªL M
return
ºº 	
instance
ºº
 
!=
ºº 
null
ºº 
&&
ºº 
instance
ºº &
.
ºº& '
enabled
ºº' .
;
ºº. /
}
ΩΩ 
[
¿¿ 
Shortcut
¿¿ 
(
¿¿ 
k_ShortcutPrefix
¿¿ 
+
¿¿ 
$str
¿¿ F
,
¿¿F G
typeof
¿¿H N
(
¿¿N O
UnityEditor
¿¿O Z
.
¿¿Z [
	SceneView
¿¿[ d
)
¿¿d e
,
¿¿e f
(
¿¿g h
KeyCode
¿¿h o
)
¿¿o p
$num
¿¿q t
,
¿¿t u
(
¿¿v w 
ShortcutModifiers¿¿w à
)¿¿à â
$num¿¿ä ã
)¿¿ã å
]¿¿å ç
[
¬¬ 
MenuItem
¬¬ 
(
¬¬ 
k_MenuPrefix
¬¬ 
+
¬¬ 
$str
¬¬ F
,
¬¬F G
false
¬¬H M
,
¬¬M N
PreferenceKeys
¬¬O ]
.
¬¬] ^
menuSelection
¬¬^ k
+
¬¬l m
$num
¬¬n o
)
¬¬o p
]
¬¬p q
static
√√ 
void
√√	 1
#MenuPerform_ToggleHandleOrientation
√√ 1
(
√√1 2
)
√√2 3
{
ƒƒ 
var
≈≈ 
instance
≈≈ 
=
≈≈ !
EditorToolbarLoader
≈≈ %
.
≈≈% &
GetInstance
≈≈& 1
<
≈≈1 2%
ToggleHandleOrientation
≈≈2 I
>
≈≈I J
(
≈≈J K
)
≈≈K L
;
≈≈L M
if
∆∆ 
(
∆∆ 
instance
∆∆ 
!=
∆∆ 
null
∆∆ 
&&
∆∆ 
instance
∆∆ "
.
∆∆" #
enabled
∆∆# *
)
∆∆* +
EditorUtility
«« 
.
«« 
ShowNotification
«« "
(
««" #
instance
««# +
.
««+ ,
DoAction
««, 4
(
««4 5
)
««5 6
.
««6 7
notification
««7 C
)
««C D
;
««D E
}
»» 
[
   
MenuItem
   
(
   
k_MenuPrefix
   
+
   
$str
   A
,
  A B
true
  C G
,
  G H
PreferenceKeys
  I W
.
  W X
menuSelection
  X e
+
  f g
$num
  h i
)
  i j
]
  j k
static
ÀÀ 
bool
ÀÀ	 .
 MenuVerify_ToggleSelectBackFaces
ÀÀ .
(
ÀÀ. /
)
ÀÀ/ 0
{
ÃÃ 
var
ÕÕ 
instance
ÕÕ 
=
ÕÕ !
EditorToolbarLoader
ÕÕ %
.
ÕÕ% &
GetInstance
ÕÕ& 1
<
ÕÕ1 2#
ToggleSelectBackFaces
ÕÕ2 G
>
ÕÕG H
(
ÕÕH I
)
ÕÕI J
;
ÕÕJ K
return
ŒŒ 	
instance
ŒŒ
 
!=
ŒŒ 
null
ŒŒ 
&&
ŒŒ 
instance
ŒŒ &
.
ŒŒ& '
enabled
ŒŒ' .
;
ŒŒ. /
}
œœ 
[
—— 
MenuItem
—— 
(
—— 
k_MenuPrefix
—— 
+
—— 
$str
—— A
,
——A B
false
——C H
,
——H I
PreferenceKeys
——J X
.
——X Y
menuSelection
——Y f
+
——g h
$num
——i j
)
——j k
]
——k l
static
““ 
void
““	 /
!MenuPerform_ToggleSelectBackFaces
““ /
(
““/ 0
)
““0 1
{
”” 
var
‘‘ 
instance
‘‘ 
=
‘‘ !
EditorToolbarLoader
‘‘ %
.
‘‘% &
GetInstance
‘‘& 1
<
‘‘1 2#
ToggleSelectBackFaces
‘‘2 G
>
‘‘G H
(
‘‘H I
)
‘‘I J
;
‘‘J K
if
’’ 
(
’’ 
instance
’’ 
!=
’’ 
null
’’ 
&&
’’ 
instance
’’ "
.
’’" #
enabled
’’# *
)
’’* +
EditorUtility
÷÷ 
.
÷÷ 
ShowNotification
÷÷ "
(
÷÷" #
instance
÷÷# +
.
÷÷+ ,
DoAction
÷÷, 4
(
÷÷4 5
)
÷÷5 6
.
÷÷6 7
notification
÷÷7 C
)
÷÷C D
;
÷÷D E
}
◊◊ 
[
ŸŸ 
MenuItem
ŸŸ 
(
ŸŸ 
k_MenuPrefix
ŸŸ 
+
ŸŸ 
$str
ŸŸ 0
,
ŸŸ0 1
true
ŸŸ2 6
,
ŸŸ6 7
PreferenceKeys
ŸŸ8 F
.
ŸŸF G
menuGeometry
ŸŸG S
+
ŸŸT U
$num
ŸŸV W
)
ŸŸW X
]
ŸŸX Y
static
⁄⁄ 
bool
⁄⁄	 $
MenuVerify_CenterPivot
⁄⁄ $
(
⁄⁄$ %
)
⁄⁄% &
{
€€ 
var
‹‹ 
instance
‹‹ 
=
‹‹ !
EditorToolbarLoader
‹‹ %
.
‹‹% &
GetInstance
‹‹& 1
<
‹‹1 2
CenterPivot
‹‹2 =
>
‹‹= >
(
‹‹> ?
)
‹‹? @
;
‹‹@ A
return
›› 	
instance
››
 
!=
›› 
null
›› 
&&
›› 
instance
›› &
.
››& '
enabled
››' .
;
››. /
}
ﬁﬁ 
[
‡‡ 
MenuItem
‡‡ 
(
‡‡ 
k_MenuPrefix
‡‡ 
+
‡‡ 
$str
‡‡ 0
,
‡‡0 1
false
‡‡2 7
,
‡‡7 8
PreferenceKeys
‡‡9 G
.
‡‡G H
menuGeometry
‡‡H T
+
‡‡U V
$num
‡‡W X
)
‡‡X Y
]
‡‡Y Z
static
·· 
void
··	 %
MenuPerform_CenterPivot
·· %
(
··% &
)
··& '
{
‚‚ 
var
„„ 
instance
„„ 
=
„„ !
EditorToolbarLoader
„„ %
.
„„% &
GetInstance
„„& 1
<
„„1 2
CenterPivot
„„2 =
>
„„= >
(
„„> ?
)
„„? @
;
„„@ A
if
‰‰ 
(
‰‰ 
instance
‰‰ 
!=
‰‰ 
null
‰‰ 
&&
‰‰ 
instance
‰‰ "
.
‰‰" #
enabled
‰‰# *
)
‰‰* +
EditorUtility
ÂÂ 
.
ÂÂ 
ShowNotification
ÂÂ "
(
ÂÂ" #
instance
ÂÂ# +
.
ÂÂ+ ,
DoAction
ÂÂ, 4
(
ÂÂ4 5
)
ÂÂ5 6
.
ÂÂ6 7
notification
ÂÂ7 C
)
ÂÂC D
;
ÂÂD E
}
ÊÊ 
[
ËË 
MenuItem
ËË 
(
ËË 
k_MenuPrefix
ËË 
+
ËË 
$str
ËË :
,
ËË: ;
true
ËË< @
,
ËË@ A
PreferenceKeys
ËËB P
.
ËËP Q
menuGeometry
ËËQ ]
+
ËË^ _
$num
ËË` a
)
ËËa b
]
ËËb c
static
ÈÈ 
bool
ÈÈ	 -
MenuVerify_ConformObjectNormals
ÈÈ -
(
ÈÈ- .
)
ÈÈ. /
{
ÍÍ 
var
ÎÎ 
instance
ÎÎ 
=
ÎÎ !
EditorToolbarLoader
ÎÎ %
.
ÎÎ% &
GetInstance
ÎÎ& 1
<
ÎÎ1 2"
ConformObjectNormals
ÎÎ2 F
>
ÎÎF G
(
ÎÎG H
)
ÎÎH I
;
ÎÎI J
return
ÏÏ 	
instance
ÏÏ
 
!=
ÏÏ 
null
ÏÏ 
&&
ÏÏ 
instance
ÏÏ &
.
ÏÏ& '
enabled
ÏÏ' .
;
ÏÏ. /
}
ÌÌ 
[
ÔÔ 
MenuItem
ÔÔ 
(
ÔÔ 
k_MenuPrefix
ÔÔ 
+
ÔÔ 
$str
ÔÔ :
,
ÔÔ: ;
false
ÔÔ< A
,
ÔÔA B
PreferenceKeys
ÔÔC Q
.
ÔÔQ R
menuGeometry
ÔÔR ^
+
ÔÔ_ `
$num
ÔÔa b
)
ÔÔb c
]
ÔÔc d
static
 
void
	 .
 MenuPerform_ConformObjectNormals
 .
(
. /
)
/ 0
{
ÒÒ 
var
ÚÚ 
instance
ÚÚ 
=
ÚÚ !
EditorToolbarLoader
ÚÚ %
.
ÚÚ% &
GetInstance
ÚÚ& 1
<
ÚÚ1 2"
ConformObjectNormals
ÚÚ2 F
>
ÚÚF G
(
ÚÚG H
)
ÚÚH I
;
ÚÚI J
if
ÛÛ 
(
ÛÛ 
instance
ÛÛ 
!=
ÛÛ 
null
ÛÛ 
&&
ÛÛ 
instance
ÛÛ "
.
ÛÛ" #
enabled
ÛÛ# *
)
ÛÛ* +
EditorUtility
ÙÙ 
.
ÙÙ 
ShowNotification
ÙÙ "
(
ÙÙ" #
instance
ÙÙ# +
.
ÙÙ+ ,
DoAction
ÙÙ, 4
(
ÙÙ4 5
)
ÙÙ5 6
.
ÙÙ6 7
notification
ÙÙ7 C
)
ÙÙC D
;
ÙÙD E
}
ıı 
[
˜˜ 
MenuItem
˜˜ 
(
˜˜ 
k_MenuPrefix
˜˜ 
+
˜˜ 
$str
˜˜ 7
,
˜˜7 8
true
˜˜9 =
,
˜˜= >
PreferenceKeys
˜˜? M
.
˜˜M N
menuGeometry
˜˜N Z
+
˜˜[ \
$num
˜˜] ^
)
˜˜^ _
]
˜˜_ `
static
¯¯ 
bool
¯¯	 *
MenuVerify_FlipObjectNormals
¯¯ *
(
¯¯* +
)
¯¯+ ,
{
˘˘ 
var
˙˙ 
instance
˙˙ 
=
˙˙ !
EditorToolbarLoader
˙˙ %
.
˙˙% &
GetInstance
˙˙& 1
<
˙˙1 2
FlipObjectNormals
˙˙2 C
>
˙˙C D
(
˙˙D E
)
˙˙E F
;
˙˙F G
return
˚˚ 	
instance
˚˚
 
!=
˚˚ 
null
˚˚ 
&&
˚˚ 
instance
˚˚ &
.
˚˚& '
enabled
˚˚' .
;
˚˚. /
}
¸¸ 
[
˛˛ 
MenuItem
˛˛ 
(
˛˛ 
k_MenuPrefix
˛˛ 
+
˛˛ 
$str
˛˛ 7
,
˛˛7 8
false
˛˛9 >
,
˛˛> ?
PreferenceKeys
˛˛@ N
.
˛˛N O
menuGeometry
˛˛O [
+
˛˛\ ]
$num
˛˛^ _
)
˛˛_ `
]
˛˛` a
static
ˇˇ 
void
ˇˇ	 +
MenuPerform_FlipObjectNormals
ˇˇ +
(
ˇˇ+ ,
)
ˇˇ, -
{
ÄÄ 
var
ÅÅ 
instance
ÅÅ 
=
ÅÅ !
EditorToolbarLoader
ÅÅ %
.
ÅÅ% &
GetInstance
ÅÅ& 1
<
ÅÅ1 2
FlipObjectNormals
ÅÅ2 C
>
ÅÅC D
(
ÅÅD E
)
ÅÅE F
;
ÅÅF G
if
ÇÇ 
(
ÇÇ 
instance
ÇÇ 
!=
ÇÇ 
null
ÇÇ 
&&
ÇÇ 
instance
ÇÇ "
.
ÇÇ" #
enabled
ÇÇ# *
)
ÇÇ* +
EditorUtility
ÉÉ 
.
ÉÉ 
ShowNotification
ÉÉ "
(
ÉÉ" #
instance
ÉÉ# +
.
ÉÉ+ ,
DoAction
ÉÉ, 4
(
ÉÉ4 5
)
ÉÉ5 6
.
ÉÉ6 7
notification
ÉÉ7 C
)
ÉÉC D
;
ÉÉD E
}
ÑÑ 
[
ÜÜ 
MenuItem
ÜÜ 
(
ÜÜ 
k_MenuPrefix
ÜÜ 
+
ÜÜ 
$str
ÜÜ 4
,
ÜÜ4 5
true
ÜÜ6 :
,
ÜÜ: ;
PreferenceKeys
ÜÜ< J
.
ÜÜJ K
menuGeometry
ÜÜK W
+
ÜÜX Y
$num
ÜÜZ [
)
ÜÜ[ \
]
ÜÜ\ ]
static
áá 
bool
áá	 (
MenuVerify_FreezeTransform
áá (
(
áá( )
)
áá) *
{
àà 
var
ââ 
instance
ââ 
=
ââ !
EditorToolbarLoader
ââ %
.
ââ% &
GetInstance
ââ& 1
<
ââ1 2
FreezeTransform
ââ2 A
>
ââA B
(
ââB C
)
ââC D
;
ââD E
return
ää 	
instance
ää
 
!=
ää 
null
ää 
&&
ää 
instance
ää &
.
ää& '
enabled
ää' .
;
ää. /
}
ãã 
[
çç 
MenuItem
çç 
(
çç 
k_MenuPrefix
çç 
+
çç 
$str
çç 4
,
çç4 5
false
çç6 ;
,
çç; <
PreferenceKeys
çç= K
.
ççK L
menuGeometry
ççL X
+
ççY Z
$num
çç[ \
)
çç\ ]
]
çç] ^
static
éé 
void
éé	 )
MenuPerform_FreezeTransform
éé )
(
éé) *
)
éé* +
{
èè 
var
êê 
instance
êê 
=
êê !
EditorToolbarLoader
êê %
.
êê% &
GetInstance
êê& 1
<
êê1 2
FreezeTransform
êê2 A
>
êêA B
(
êêB C
)
êêC D
;
êêD E
if
ëë 
(
ëë 
instance
ëë 
!=
ëë 
null
ëë 
&&
ëë 
instance
ëë "
.
ëë" #
enabled
ëë# *
)
ëë* +
EditorUtility
íí 
.
íí 
ShowNotification
íí "
(
íí" #
instance
íí# +
.
íí+ ,
DoAction
íí, 4
(
íí4 5
)
íí5 6
.
íí6 7
notification
íí7 C
)
ííC D
;
ííD E
}
ìì 
[
ïï 
MenuItem
ïï 
(
ïï 
k_MenuPrefix
ïï 
+
ïï 
$str
ïï 1
,
ïï1 2
true
ïï3 7
,
ïï7 8
PreferenceKeys
ïï9 G
.
ïïG H
menuGeometry
ïïH T
+
ïïU V
$num
ïïW X
)
ïïX Y
]
ïïY Z
static
ññ 
bool
ññ	 %
MenuVerify_MergeObjects
ññ %
(
ññ% &
)
ññ& '
{
óó 
var
òò 
instance
òò 
=
òò !
EditorToolbarLoader
òò %
.
òò% &
GetInstance
òò& 1
<
òò1 2
MergeObjects
òò2 >
>
òò> ?
(
òò? @
)
òò@ A
;
òòA B
return
ôô 	
instance
ôô
 
!=
ôô 
null
ôô 
&&
ôô 
instance
ôô &
.
ôô& '
enabled
ôô' .
;
ôô. /
}
öö 
[
úú 
MenuItem
úú 
(
úú 
k_MenuPrefix
úú 
+
úú 
$str
úú 1
,
úú1 2
false
úú3 8
,
úú8 9
PreferenceKeys
úú: H
.
úúH I
menuGeometry
úúI U
+
úúV W
$num
úúX Y
)
úúY Z
]
úúZ [
static
ùù 
void
ùù	 &
MenuPerform_MergeObjects
ùù &
(
ùù& '
)
ùù' (
{
ûû 
var
üü 
instance
üü 
=
üü !
EditorToolbarLoader
üü %
.
üü% &
GetInstance
üü& 1
<
üü1 2
MergeObjects
üü2 >
>
üü> ?
(
üü? @
)
üü@ A
;
üüA B
if
†† 
(
†† 
instance
†† 
!=
†† 
null
†† 
&&
†† 
instance
†† "
.
††" #
enabled
††# *
)
††* +
EditorUtility
°° 
.
°° 
ShowNotification
°° "
(
°°" #
instance
°°# +
.
°°+ ,
DoAction
°°, 4
(
°°4 5
)
°°5 6
.
°°6 7
notification
°°7 C
)
°°C D
;
°°D E
}
¢¢ 
[
§§ 
MenuItem
§§ 
(
§§ 
k_MenuPrefix
§§ 
+
§§ 
$str
§§ 2
,
§§2 3
true
§§4 8
,
§§8 9
PreferenceKeys
§§: H
.
§§H I
menuGeometry
§§I U
+
§§V W
$num
§§X Y
)
§§Y Z
]
§§Z [
static
•• 
bool
••	 &
MenuVerify_MirrorObjects
•• &
(
••& '
)
••' (
{
¶¶ 
var
ßß 
instance
ßß 
=
ßß !
EditorToolbarLoader
ßß %
.
ßß% &
GetInstance
ßß& 1
<
ßß1 2
MirrorObjects
ßß2 ?
>
ßß? @
(
ßß@ A
)
ßßA B
;
ßßB C
return
®® 	
instance
®®
 
!=
®® 
null
®® 
&&
®® 
instance
®® &
.
®®& '
enabled
®®' .
;
®®. /
}
©© 
[
´´ 
MenuItem
´´ 
(
´´ 
k_MenuPrefix
´´ 
+
´´ 
$str
´´ 2
,
´´2 3
false
´´4 9
,
´´9 :
PreferenceKeys
´´; I
.
´´I J
menuGeometry
´´J V
+
´´W X
$num
´´Y Z
)
´´Z [
]
´´[ \
static
¨¨ 
void
¨¨	 '
MenuPerform_MirrorObjects
¨¨ '
(
¨¨' (
)
¨¨( )
{
≠≠ 
var
ÆÆ 
instance
ÆÆ 
=
ÆÆ !
EditorToolbarLoader
ÆÆ %
.
ÆÆ% &
GetInstance
ÆÆ& 1
<
ÆÆ1 2
MirrorObjects
ÆÆ2 ?
>
ÆÆ? @
(
ÆÆ@ A
)
ÆÆA B
;
ÆÆB C
if
ØØ 
(
ØØ 
instance
ØØ 
!=
ØØ 
null
ØØ 
&&
ØØ 
instance
ØØ "
.
ØØ" #
enabled
ØØ# *
)
ØØ* +
EditorUtility
∞∞ 
.
∞∞ 
ShowNotification
∞∞ "
(
∞∞" #
instance
∞∞# +
.
∞∞+ ,
DoAction
∞∞, 4
(
∞∞4 5
)
∞∞5 6
.
∞∞6 7
notification
∞∞7 C
)
∞∞C D
;
∞∞D E
}
±± 
[
≥≥ 
MenuItem
≥≥ 
(
≥≥ 
k_MenuPrefix
≥≥ 
+
≥≥ 
$str
≥≥ 2
,
≥≥2 3
true
≥≥4 8
,
≥≥8 9
PreferenceKeys
≥≥: H
.
≥≥H I
menuGeometry
≥≥I U
+
≥≥V W
$num
≥≥X Y
)
≥≥Y Z
]
≥≥Z [
static
¥¥ 
bool
¥¥	 &
MenuVerify_ProBuilderize
¥¥ &
(
¥¥& '
)
¥¥' (
{
µµ 
var
∂∂ 
instance
∂∂ 
=
∂∂ !
EditorToolbarLoader
∂∂ %
.
∂∂% &
GetInstance
∂∂& 1
<
∂∂1 2
ProBuilderize
∂∂2 ?
>
∂∂? @
(
∂∂@ A
)
∂∂A B
;
∂∂B C
return
∑∑ 	
instance
∑∑
 
!=
∑∑ 
null
∑∑ 
&&
∑∑ 
instance
∑∑ &
.
∑∑& '
enabled
∑∑' .
;
∑∑. /
}
∏∏ 
[
∫∫ 
MenuItem
∫∫ 
(
∫∫ 
k_MenuPrefix
∫∫ 
+
∫∫ 
$str
∫∫ 2
,
∫∫2 3
false
∫∫4 9
,
∫∫9 :
PreferenceKeys
∫∫; I
.
∫∫I J
menuGeometry
∫∫J V
+
∫∫W X
$num
∫∫Y Z
)
∫∫Z [
]
∫∫[ \
static
ªª 
void
ªª	 '
MenuPerform_ProBuilderize
ªª '
(
ªª' (
)
ªª( )
{
ºº 
var
ΩΩ 
instance
ΩΩ 
=
ΩΩ !
EditorToolbarLoader
ΩΩ %
.
ΩΩ% &
GetInstance
ΩΩ& 1
<
ΩΩ1 2
ProBuilderize
ΩΩ2 ?
>
ΩΩ? @
(
ΩΩ@ A
)
ΩΩA B
;
ΩΩB C
if
ææ 
(
ææ 
instance
ææ 
!=
ææ 
null
ææ 
&&
ææ 
instance
ææ "
.
ææ" #
enabled
ææ# *
)
ææ* +
EditorUtility
øø 
.
øø 
ShowNotification
øø "
(
øø" #
instance
øø# +
.
øø+ ,
DoAction
øø, 4
(
øø4 5
)
øø5 6
.
øø6 7
notification
øø7 C
)
øøC D
;
øøD E
}
¿¿ 
[
¬¬ 
MenuItem
¬¬ 
(
¬¬ 
k_MenuPrefix
¬¬ 
+
¬¬ 
$str
¬¬ 0
,
¬¬0 1
true
¬¬2 6
,
¬¬6 7
PreferenceKeys
¬¬8 F
.
¬¬F G
menuGeometry
¬¬G S
+
¬¬T U
$num
¬¬V W
)
¬¬W X
]
¬¬X Y
static
√√ 
bool
√√	 $
MenuVerify_SetCollider
√√ $
(
√√$ %
)
√√% &
{
ƒƒ 
var
≈≈ 
instance
≈≈ 
=
≈≈ !
EditorToolbarLoader
≈≈ %
.
≈≈% &
GetInstance
≈≈& 1
<
≈≈1 2
SetCollider
≈≈2 =
>
≈≈= >
(
≈≈> ?
)
≈≈? @
;
≈≈@ A
return
∆∆ 	
instance
∆∆
 
!=
∆∆ 
null
∆∆ 
&&
∆∆ 
instance
∆∆ &
.
∆∆& '
enabled
∆∆' .
;
∆∆. /
}
«« 
[
…… 
MenuItem
…… 
(
…… 
k_MenuPrefix
…… 
+
…… 
$str
…… 0
,
……0 1
false
……2 7
,
……7 8
PreferenceKeys
……9 G
.
……G H
menuGeometry
……H T
+
……U V
$num
……W X
)
……X Y
]
……Y Z
static
   
void
  	 %
MenuPerform_SetCollider
   %
(
  % &
)
  & '
{
ÀÀ 
var
ÃÃ 
instance
ÃÃ 
=
ÃÃ !
EditorToolbarLoader
ÃÃ %
.
ÃÃ% &
GetInstance
ÃÃ& 1
<
ÃÃ1 2
SetCollider
ÃÃ2 =
>
ÃÃ= >
(
ÃÃ> ?
)
ÃÃ? @
;
ÃÃ@ A
if
ÕÕ 
(
ÕÕ 
instance
ÕÕ 
!=
ÕÕ 
null
ÕÕ 
&&
ÕÕ 
instance
ÕÕ "
.
ÕÕ" #
enabled
ÕÕ# *
)
ÕÕ* +
EditorUtility
ŒŒ 
.
ŒŒ 
ShowNotification
ŒŒ "
(
ŒŒ" #
instance
ŒŒ# +
.
ŒŒ+ ,
DoAction
ŒŒ, 4
(
ŒŒ4 5
)
ŒŒ5 6
.
ŒŒ6 7
notification
ŒŒ7 C
)
ŒŒC D
;
ŒŒD E
}
œœ 
[
—— 
MenuItem
—— 
(
—— 
k_MenuPrefix
—— 
+
—— 
$str
—— /
,
——/ 0
true
——1 5
,
——5 6
PreferenceKeys
——7 E
.
——E F
menuGeometry
——F R
+
——S T
$num
——U V
)
——V W
]
——W X
static
““ 
bool
““	 #
MenuVerify_SetTrigger
““ #
(
““# $
)
““$ %
{
”” 
var
‘‘ 
instance
‘‘ 
=
‘‘ !
EditorToolbarLoader
‘‘ %
.
‘‘% &
GetInstance
‘‘& 1
<
‘‘1 2

SetTrigger
‘‘2 <
>
‘‘< =
(
‘‘= >
)
‘‘> ?
;
‘‘? @
return
’’ 	
instance
’’
 
!=
’’ 
null
’’ 
&&
’’ 
instance
’’ &
.
’’& '
enabled
’’' .
;
’’. /
}
÷÷ 
[
ÿÿ 
MenuItem
ÿÿ 
(
ÿÿ 
k_MenuPrefix
ÿÿ 
+
ÿÿ 
$str
ÿÿ /
,
ÿÿ/ 0
false
ÿÿ1 6
,
ÿÿ6 7
PreferenceKeys
ÿÿ8 F
.
ÿÿF G
menuGeometry
ÿÿG S
+
ÿÿT U
$num
ÿÿV W
)
ÿÿW X
]
ÿÿX Y
static
ŸŸ 
void
ŸŸ	 $
MenuPerform_SetTrigger
ŸŸ $
(
ŸŸ$ %
)
ŸŸ% &
{
⁄⁄ 
var
€€ 
instance
€€ 
=
€€ !
EditorToolbarLoader
€€ %
.
€€% &
GetInstance
€€& 1
<
€€1 2

SetTrigger
€€2 <
>
€€< =
(
€€= >
)
€€> ?
;
€€? @
if
‹‹ 
(
‹‹ 
instance
‹‹ 
!=
‹‹ 
null
‹‹ 
&&
‹‹ 
instance
‹‹ "
.
‹‹" #
enabled
‹‹# *
)
‹‹* +
EditorUtility
›› 
.
›› 
ShowNotification
›› "
(
››" #
instance
››# +
.
››+ ,
DoAction
››, 4
(
››4 5
)
››5 6
.
››6 7
notification
››7 C
)
››C D
;
››D E
}
ﬁﬁ 
[
‡‡ 
MenuItem
‡‡ 
(
‡‡ 
k_MenuPrefix
‡‡ 
+
‡‡ 
$str
‡‡ 4
,
‡‡4 5
true
‡‡6 :
,
‡‡: ;
PreferenceKeys
‡‡< J
.
‡‡J K
menuGeometry
‡‡K W
+
‡‡X Y
$num
‡‡Z [
)
‡‡[ \
]
‡‡\ ]
static
·· 
bool
··	 (
MenuVerify_SubdivideObject
·· (
(
··( )
)
··) *
{
‚‚ 
var
„„ 
instance
„„ 
=
„„ !
EditorToolbarLoader
„„ %
.
„„% &
GetInstance
„„& 1
<
„„1 2
SubdivideObject
„„2 A
>
„„A B
(
„„B C
)
„„C D
;
„„D E
return
‰‰ 	
instance
‰‰
 
!=
‰‰ 
null
‰‰ 
&&
‰‰ 
instance
‰‰ &
.
‰‰& '
enabled
‰‰' .
;
‰‰. /
}
ÂÂ 
[
ÁÁ 
MenuItem
ÁÁ 
(
ÁÁ 
k_MenuPrefix
ÁÁ 
+
ÁÁ 
$str
ÁÁ 4
,
ÁÁ4 5
false
ÁÁ6 ;
,
ÁÁ; <
PreferenceKeys
ÁÁ= K
.
ÁÁK L
menuGeometry
ÁÁL X
+
ÁÁY Z
$num
ÁÁ[ \
)
ÁÁ\ ]
]
ÁÁ] ^
static
ËË 
void
ËË	 )
MenuPerform_SubdivideObject
ËË )
(
ËË) *
)
ËË* +
{
ÈÈ 
var
ÍÍ 
instance
ÍÍ 
=
ÍÍ !
EditorToolbarLoader
ÍÍ %
.
ÍÍ% &
GetInstance
ÍÍ& 1
<
ÍÍ1 2
SubdivideObject
ÍÍ2 A
>
ÍÍA B
(
ÍÍB C
)
ÍÍC D
;
ÍÍD E
if
ÎÎ 
(
ÎÎ 
instance
ÎÎ 
!=
ÎÎ 
null
ÎÎ 
&&
ÎÎ 
instance
ÎÎ "
.
ÎÎ" #
enabled
ÎÎ# *
)
ÎÎ* +
EditorUtility
ÏÏ 
.
ÏÏ 
ShowNotification
ÏÏ "
(
ÏÏ" #
instance
ÏÏ# +
.
ÏÏ+ ,
DoAction
ÏÏ, 4
(
ÏÏ4 5
)
ÏÏ5 6
.
ÏÏ6 7
notification
ÏÏ7 C
)
ÏÏC D
;
ÏÏD E
}
ÌÌ 
[
ÔÔ 
MenuItem
ÔÔ 
(
ÔÔ 
k_MenuPrefix
ÔÔ 
+
ÔÔ 
$str
ÔÔ 6
,
ÔÔ6 7
true
ÔÔ8 <
,
ÔÔ< =
PreferenceKeys
ÔÔ> L
.
ÔÔL M
menuGeometry
ÔÔM Y
+
ÔÔZ [
$num
ÔÔ\ ]
)
ÔÔ] ^
]
ÔÔ^ _
static
 
bool
	 *
MenuVerify_TriangulateObject
 *
(
* +
)
+ ,
{
ÒÒ 
var
ÚÚ 
instance
ÚÚ 
=
ÚÚ !
EditorToolbarLoader
ÚÚ %
.
ÚÚ% &
GetInstance
ÚÚ& 1
<
ÚÚ1 2
TriangulateObject
ÚÚ2 C
>
ÚÚC D
(
ÚÚD E
)
ÚÚE F
;
ÚÚF G
return
ÛÛ 	
instance
ÛÛ
 
!=
ÛÛ 
null
ÛÛ 
&&
ÛÛ 
instance
ÛÛ &
.
ÛÛ& '
enabled
ÛÛ' .
;
ÛÛ. /
}
ÙÙ 
[
ˆˆ 
MenuItem
ˆˆ 
(
ˆˆ 
k_MenuPrefix
ˆˆ 
+
ˆˆ 
$str
ˆˆ 6
,
ˆˆ6 7
false
ˆˆ8 =
,
ˆˆ= >
PreferenceKeys
ˆˆ? M
.
ˆˆM N
menuGeometry
ˆˆN Z
+
ˆˆ[ \
$num
ˆˆ] ^
)
ˆˆ^ _
]
ˆˆ_ `
static
˜˜ 
void
˜˜	 +
MenuPerform_TriangulateObject
˜˜ +
(
˜˜+ ,
)
˜˜, -
{
¯¯ 
var
˘˘ 
instance
˘˘ 
=
˘˘ !
EditorToolbarLoader
˘˘ %
.
˘˘% &
GetInstance
˘˘& 1
<
˘˘1 2
TriangulateObject
˘˘2 C
>
˘˘C D
(
˘˘D E
)
˘˘E F
;
˘˘F G
if
˙˙ 
(
˙˙ 
instance
˙˙ 
!=
˙˙ 
null
˙˙ 
&&
˙˙ 
instance
˙˙ "
.
˙˙" #
enabled
˙˙# *
)
˙˙* +
EditorUtility
˚˚ 
.
˚˚ 
ShowNotification
˚˚ "
(
˚˚" #
instance
˚˚# +
.
˚˚+ ,
DoAction
˚˚, 4
(
˚˚4 5
)
˚˚5 6
.
˚˚6 7
notification
˚˚7 C
)
˚˚C D
;
˚˚D E
}
¸¸ 
[
˛˛ 
MenuItem
˛˛ 
(
˛˛ 
k_MenuPrefix
˛˛ 
+
˛˛ 
$str
˛˛ 8
,
˛˛8 9
true
˛˛: >
,
˛˛> ?
PreferenceKeys
˛˛@ N
.
˛˛N O
menuSelection
˛˛O \
+
˛˛] ^
$num
˛˛_ `
)
˛˛` a
]
˛˛a b
static
ˇˇ 
bool
ˇˇ	 &
MenuVerify_GrowSelection
ˇˇ &
(
ˇˇ& '
)
ˇˇ' (
{
ÄÄ 
var
ÅÅ 
instance
ÅÅ 
=
ÅÅ !
EditorToolbarLoader
ÅÅ %
.
ÅÅ% &
GetInstance
ÅÅ& 1
<
ÅÅ1 2
GrowSelection
ÅÅ2 ?
>
ÅÅ? @
(
ÅÅ@ A
)
ÅÅA B
;
ÅÅB C
return
ÇÇ 	
instance
ÇÇ
 
!=
ÇÇ 
null
ÇÇ 
&&
ÇÇ 
instance
ÇÇ &
.
ÇÇ& '
enabled
ÇÇ' .
;
ÇÇ. /
}
ÉÉ 
[
ÖÖ 
MenuItem
ÖÖ 
(
ÖÖ 
k_MenuPrefix
ÖÖ 
+
ÖÖ 
$str
ÖÖ 8
,
ÖÖ8 9
false
ÖÖ: ?
,
ÖÖ? @
PreferenceKeys
ÖÖA O
.
ÖÖO P
menuSelection
ÖÖP ]
+
ÖÖ^ _
$num
ÖÖ` a
)
ÖÖa b
]
ÖÖb c
static
ÜÜ 
void
ÜÜ	 '
MenuPerform_GrowSelection
ÜÜ '
(
ÜÜ' (
)
ÜÜ( )
{
áá 
var
àà 
instance
àà 
=
àà !
EditorToolbarLoader
àà %
.
àà% &
GetInstance
àà& 1
<
àà1 2
GrowSelection
àà2 ?
>
àà? @
(
àà@ A
)
ààA B
;
ààB C
if
ââ 
(
ââ 
instance
ââ 
!=
ââ 
null
ââ 
&&
ââ 
instance
ââ "
.
ââ" #
enabled
ââ# *
)
ââ* +
EditorUtility
ää 
.
ää 
ShowNotification
ää "
(
ää" #
instance
ää# +
.
ää+ ,
DoAction
ää, 4
(
ää4 5
)
ää5 6
.
ää6 7
notification
ää7 C
)
ääC D
;
ääD E
}
ãã 
[
çç 
MenuItem
çç 
(
çç 
k_MenuPrefix
çç 
+
çç 
$str
çç 2
,
çç2 3
true
çç4 8
,
çç8 9
PreferenceKeys
çç: H
.
ççH I
menuSelection
ççI V
+
ççW X
$num
ççY Z
)
ççZ [
]
çç[ \
static
éé 
bool
éé	 #
MenuVerify_SelectHole
éé #
(
éé# $
)
éé$ %
{
èè 
var
êê 
instance
êê 
=
êê !
EditorToolbarLoader
êê %
.
êê% &
GetInstance
êê& 1
<
êê1 2

SelectHole
êê2 <
>
êê< =
(
êê= >
)
êê> ?
;
êê? @
return
ëë 	
instance
ëë
 
!=
ëë 
null
ëë 
&&
ëë 
instance
ëë &
.
ëë& '
enabled
ëë' .
;
ëë. /
}
íí 
[
îî 
MenuItem
îî 
(
îî 
k_MenuPrefix
îî 
+
îî 
$str
îî 2
,
îî2 3
false
îî4 9
,
îî9 :
PreferenceKeys
îî; I
.
îîI J
menuSelection
îîJ W
+
îîX Y
$num
îîZ [
)
îî[ \
]
îî\ ]
static
ïï 
void
ïï	 $
MenuPerform_SelectHole
ïï $
(
ïï$ %
)
ïï% &
{
ññ 
var
óó 
instance
óó 
=
óó !
EditorToolbarLoader
óó %
.
óó% &
GetInstance
óó& 1
<
óó1 2

SelectHole
óó2 <
>
óó< =
(
óó= >
)
óó> ?
;
óó? @
if
òò 
(
òò 
instance
òò 
!=
òò 
null
òò 
&&
òò 
instance
òò "
.
òò" #
enabled
òò# *
)
òò* +
EditorUtility
ôô 
.
ôô 
ShowNotification
ôô "
(
ôô" #
instance
ôô# +
.
ôô+ ,
DoAction
ôô, 4
(
ôô4 5
)
ôô5 6
.
ôô6 7
notification
ôô7 C
)
ôôC D
;
ôôD E
}
öö 
[
úú 
MenuItem
úú 
(
úú 
k_MenuPrefix
úú 
+
úú 
$str
úú 5
,
úú5 6
true
úú7 ;
,
úú; <
PreferenceKeys
úú= K
.
úúK L
menuSelection
úúL Y
+
úúZ [
$num
úú\ ]
)
úú] ^
]
úú^ _
static
ùù 
bool
ùù	 #
MenuVerify_SelectLoop
ùù #
(
ùù# $
)
ùù$ %
{
ûû 
var
üü 
instance
üü 
=
üü !
EditorToolbarLoader
üü %
.
üü% &
GetInstance
üü& 1
<
üü1 2

SelectLoop
üü2 <
>
üü< =
(
üü= >
)
üü> ?
;
üü? @
return
†† 	
instance
††
 
!=
†† 
null
†† 
&&
†† 
instance
†† &
.
††& '
enabled
††' .
;
††. /
}
°° 
[
££ 
MenuItem
££ 
(
££ 
k_MenuPrefix
££ 
+
££ 
$str
££ 5
,
££5 6
false
££7 <
,
££< =
PreferenceKeys
££> L
.
££L M
menuSelection
££M Z
+
££[ \
$num
££] ^
)
££^ _
]
££_ `
static
§§ 
void
§§	 $
MenuPerform_SelectLoop
§§ $
(
§§$ %
)
§§% &
{
•• 
var
¶¶ 
instance
¶¶ 
=
¶¶ !
EditorToolbarLoader
¶¶ %
.
¶¶% &
GetInstance
¶¶& 1
<
¶¶1 2

SelectLoop
¶¶2 <
>
¶¶< =
(
¶¶= >
)
¶¶> ?
;
¶¶? @
if
ßß 
(
ßß 
instance
ßß 
!=
ßß 
null
ßß 
&&
ßß 
instance
ßß "
.
ßß" #
enabled
ßß# *
)
ßß* +
EditorUtility
®® 
.
®® 
ShowNotification
®® "
(
®®" #
instance
®®# +
.
®®+ ,
DoAction
®®, 4
(
®®4 5
)
®®5 6
.
®®6 7
notification
®®7 C
)
®®C D
;
®®D E
}
©© 
[
´´ 
MenuItem
´´ 
(
´´ 
k_MenuPrefix
´´ 
+
´´ 
$str
´´ 6
,
´´6 7
true
´´8 <
,
´´< =
PreferenceKeys
´´> L
.
´´L M
menuSelection
´´M Z
+
´´[ \
$num
´´] ^
)
´´^ _
]
´´_ `
static
¨¨ 
bool
¨¨	 '
MenuVerify_SelectMaterial
¨¨ '
(
¨¨' (
)
¨¨( )
{
≠≠ 
var
ÆÆ 
instance
ÆÆ 
=
ÆÆ !
EditorToolbarLoader
ÆÆ %
.
ÆÆ% &
GetInstance
ÆÆ& 1
<
ÆÆ1 2
SelectMaterial
ÆÆ2 @
>
ÆÆ@ A
(
ÆÆA B
)
ÆÆB C
;
ÆÆC D
return
ØØ 	
instance
ØØ
 
!=
ØØ 
null
ØØ 
&&
ØØ 
instance
ØØ &
.
ØØ& '
enabled
ØØ' .
;
ØØ. /
}
∞∞ 
[
≤≤ 
MenuItem
≤≤ 
(
≤≤ 
k_MenuPrefix
≤≤ 
+
≤≤ 
$str
≤≤ 6
,
≤≤6 7
false
≤≤8 =
,
≤≤= >
PreferenceKeys
≤≤? M
.
≤≤M N
menuSelection
≤≤N [
+
≤≤\ ]
$num
≤≤^ _
)
≤≤_ `
]
≤≤` a
static
≥≥ 
void
≥≥	 (
MenuPerform_SelectMaterial
≥≥ (
(
≥≥( )
)
≥≥) *
{
¥¥ 
var
µµ 
instance
µµ 
=
µµ !
EditorToolbarLoader
µµ %
.
µµ% &
GetInstance
µµ& 1
<
µµ1 2
SelectMaterial
µµ2 @
>
µµ@ A
(
µµA B
)
µµB C
;
µµC D
if
∂∂ 
(
∂∂ 
instance
∂∂ 
!=
∂∂ 
null
∂∂ 
&&
∂∂ 
instance
∂∂ "
.
∂∂" #
enabled
∂∂# *
)
∂∂* +
EditorUtility
∑∑ 
.
∑∑ 
ShowNotification
∑∑ "
(
∑∑" #
instance
∑∑# +
.
∑∑+ ,
DoAction
∑∑, 4
(
∑∑4 5
)
∑∑5 6
.
∑∑6 7
notification
∑∑7 C
)
∑∑C D
;
∑∑D E
}
∏∏ 
[
∫∫ 
MenuItem
∫∫ 
(
∫∫ 
k_MenuPrefix
∫∫ 
+
∫∫ 
$str
∫∫ 5
,
∫∫5 6
true
∫∫7 ;
,
∫∫; <
PreferenceKeys
∫∫= K
.
∫∫K L
menuSelection
∫∫L Y
+
∫∫Z [
$num
∫∫\ ]
)
∫∫] ^
]
∫∫^ _
static
ªª 
bool
ªª	 #
MenuVerify_SelectRing
ªª #
(
ªª# $
)
ªª$ %
{
ºº 
var
ΩΩ 
instance
ΩΩ 
=
ΩΩ !
EditorToolbarLoader
ΩΩ %
.
ΩΩ% &
GetInstance
ΩΩ& 1
<
ΩΩ1 2

SelectRing
ΩΩ2 <
>
ΩΩ< =
(
ΩΩ= >
)
ΩΩ> ?
;
ΩΩ? @
return
ææ 	
instance
ææ
 
!=
ææ 
null
ææ 
&&
ææ 
instance
ææ &
.
ææ& '
enabled
ææ' .
;
ææ. /
}
øø 
[
¡¡ 
MenuItem
¡¡ 
(
¡¡ 
k_MenuPrefix
¡¡ 
+
¡¡ 
$str
¡¡ 5
,
¡¡5 6
false
¡¡7 <
,
¡¡< =
PreferenceKeys
¡¡> L
.
¡¡L M
menuSelection
¡¡M Z
+
¡¡[ \
$num
¡¡] ^
)
¡¡^ _
]
¡¡_ `
static
¬¬ 
void
¬¬	 $
MenuPerform_SelectRing
¬¬ $
(
¬¬$ %
)
¬¬% &
{
√√ 
var
ƒƒ 
instance
ƒƒ 
=
ƒƒ !
EditorToolbarLoader
ƒƒ %
.
ƒƒ% &
GetInstance
ƒƒ& 1
<
ƒƒ1 2

SelectRing
ƒƒ2 <
>
ƒƒ< =
(
ƒƒ= >
)
ƒƒ> ?
;
ƒƒ? @
if
≈≈ 
(
≈≈ 
instance
≈≈ 
!=
≈≈ 
null
≈≈ 
&&
≈≈ 
instance
≈≈ "
.
≈≈" #
enabled
≈≈# *
)
≈≈* +
EditorUtility
∆∆ 
.
∆∆ 
ShowNotification
∆∆ "
(
∆∆" #
instance
∆∆# +
.
∆∆+ ,
DoAction
∆∆, 4
(
∆∆4 5
)
∆∆5 6
.
∆∆6 7
notification
∆∆7 C
)
∆∆C D
;
∆∆D E
}
«« 
[
…… 
MenuItem
…… 
(
…… 
k_MenuPrefix
…… 
+
…… 
$str
…… =
,
……= >
true
……? C
,
……C D
PreferenceKeys
……E S
.
……S T
menuSelection
……T a
+
……b c
$num
……d e
)
……e f
]
……f g
static
   
bool
  	 -
MenuVerify_SelectSmoothingGroup
   -
(
  - .
)
  . /
{
ÀÀ 
var
ÃÃ 
instance
ÃÃ 
=
ÃÃ !
EditorToolbarLoader
ÃÃ %
.
ÃÃ% &
GetInstance
ÃÃ& 1
<
ÃÃ1 2"
SelectSmoothingGroup
ÃÃ2 F
>
ÃÃF G
(
ÃÃG H
)
ÃÃH I
;
ÃÃI J
return
ÕÕ 	
instance
ÕÕ
 
!=
ÕÕ 
null
ÕÕ 
&&
ÕÕ 
instance
ÕÕ &
.
ÕÕ& '
enabled
ÕÕ' .
;
ÕÕ. /
}
ŒŒ 
[
–– 
MenuItem
–– 
(
–– 
k_MenuPrefix
–– 
+
–– 
$str
–– =
,
––= >
false
––? D
,
––D E
PreferenceKeys
––F T
.
––T U
menuSelection
––U b
+
––c d
$num
––e f
)
––f g
]
––g h
static
—— 
void
——	 .
 MenuPerform_SelectSmoothingGroup
—— .
(
——. /
)
——/ 0
{
““ 
var
”” 
instance
”” 
=
”” !
EditorToolbarLoader
”” %
.
””% &
GetInstance
””& 1
<
””1 2"
SelectSmoothingGroup
””2 F
>
””F G
(
””G H
)
””H I
;
””I J
if
‘‘ 
(
‘‘ 
instance
‘‘ 
!=
‘‘ 
null
‘‘ 
&&
‘‘ 
instance
‘‘ "
.
‘‘" #
enabled
‘‘# *
)
‘‘* +
EditorUtility
’’ 
.
’’ 
ShowNotification
’’ "
(
’’" #
instance
’’# +
.
’’+ ,
DoAction
’’, 4
(
’’4 5
)
’’5 6
.
’’6 7
notification
’’7 C
)
’’C D
;
’’D E
}
÷÷ 
[
ÿÿ 
MenuItem
ÿÿ 
(
ÿÿ 
k_MenuPrefix
ÿÿ 
+
ÿÿ 
$str
ÿÿ :
,
ÿÿ: ;
true
ÿÿ< @
,
ÿÿ@ A
PreferenceKeys
ÿÿB P
.
ÿÿP Q
menuSelection
ÿÿQ ^
+
ÿÿ_ `
$num
ÿÿa b
)
ÿÿb c
]
ÿÿc d
static
ŸŸ 
bool
ŸŸ	 *
MenuVerify_SelectVertexColor
ŸŸ *
(
ŸŸ* +
)
ŸŸ+ ,
{
⁄⁄ 
var
€€ 
instance
€€ 
=
€€ !
EditorToolbarLoader
€€ %
.
€€% &
GetInstance
€€& 1
<
€€1 2
SelectVertexColor
€€2 C
>
€€C D
(
€€D E
)
€€E F
;
€€F G
return
‹‹ 	
instance
‹‹
 
!=
‹‹ 
null
‹‹ 
&&
‹‹ 
instance
‹‹ &
.
‹‹& '
enabled
‹‹' .
;
‹‹. /
}
›› 
[
ﬂﬂ 
MenuItem
ﬂﬂ 
(
ﬂﬂ 
k_MenuPrefix
ﬂﬂ 
+
ﬂﬂ 
$str
ﬂﬂ :
,
ﬂﬂ: ;
false
ﬂﬂ< A
,
ﬂﬂA B
PreferenceKeys
ﬂﬂC Q
.
ﬂﬂQ R
menuSelection
ﬂﬂR _
+
ﬂﬂ` a
$num
ﬂﬂb c
)
ﬂﬂc d
]
ﬂﬂd e
static
‡‡ 
void
‡‡	 +
MenuPerform_SelectVertexColor
‡‡ +
(
‡‡+ ,
)
‡‡, -
{
·· 
var
‚‚ 
instance
‚‚ 
=
‚‚ !
EditorToolbarLoader
‚‚ %
.
‚‚% &
GetInstance
‚‚& 1
<
‚‚1 2
SelectVertexColor
‚‚2 C
>
‚‚C D
(
‚‚D E
)
‚‚E F
;
‚‚F G
if
„„ 
(
„„ 
instance
„„ 
!=
„„ 
null
„„ 
&&
„„ 
instance
„„ "
.
„„" #
enabled
„„# *
)
„„* +
EditorUtility
‰‰ 
.
‰‰ 
ShowNotification
‰‰ "
(
‰‰" #
instance
‰‰# +
.
‰‰+ ,
DoAction
‰‰, 4
(
‰‰4 5
)
‰‰5 6
.
‰‰6 7
notification
‰‰7 C
)
‰‰C D
;
‰‰D E
}
ÂÂ 
[
ÁÁ 
MenuItem
ÁÁ 
(
ÁÁ 
k_MenuPrefix
ÁÁ 
+
ÁÁ 
$str
ÁÁ ;
,
ÁÁ; <
true
ÁÁ= A
,
ÁÁA B
PreferenceKeys
ÁÁC Q
.
ÁÁQ R
menuSelection
ÁÁR _
+
ÁÁ` a
$num
ÁÁb c
)
ÁÁc d
]
ÁÁd e
static
ËË 
bool
ËË	 (
MenuVerify_ShrinkSelection
ËË (
(
ËË( )
)
ËË) *
{
ÈÈ 
var
ÍÍ 
instance
ÍÍ 
=
ÍÍ !
EditorToolbarLoader
ÍÍ %
.
ÍÍ% &
GetInstance
ÍÍ& 1
<
ÍÍ1 2
ShrinkSelection
ÍÍ2 A
>
ÍÍA B
(
ÍÍB C
)
ÍÍC D
;
ÍÍD E
return
ÎÎ 	
instance
ÎÎ
 
!=
ÎÎ 
null
ÎÎ 
&&
ÎÎ 
instance
ÎÎ &
.
ÎÎ& '
enabled
ÎÎ' .
;
ÎÎ. /
}
ÏÏ 
[
ÓÓ 
MenuItem
ÓÓ 
(
ÓÓ 
k_MenuPrefix
ÓÓ 
+
ÓÓ 
$str
ÓÓ ;
,
ÓÓ; <
false
ÓÓ= B
,
ÓÓB C
PreferenceKeys
ÓÓD R
.
ÓÓR S
menuSelection
ÓÓS `
+
ÓÓa b
$num
ÓÓc d
)
ÓÓd e
]
ÓÓe f
static
ÔÔ 
void
ÔÔ	 )
MenuPerform_ShrinkSelection
ÔÔ )
(
ÔÔ) *
)
ÔÔ* +
{
 
var
ÒÒ 
instance
ÒÒ 
=
ÒÒ !
EditorToolbarLoader
ÒÒ %
.
ÒÒ% &
GetInstance
ÒÒ& 1
<
ÒÒ1 2
ShrinkSelection
ÒÒ2 A
>
ÒÒA B
(
ÒÒB C
)
ÒÒC D
;
ÒÒD E
if
ÚÚ 
(
ÚÚ 
instance
ÚÚ 
!=
ÚÚ 
null
ÚÚ 
&&
ÚÚ 
instance
ÚÚ "
.
ÚÚ" #
enabled
ÚÚ# *
)
ÚÚ* +
EditorUtility
ÛÛ 
.
ÛÛ 
ShowNotification
ÛÛ "
(
ÛÛ" #
instance
ÛÛ# +
.
ÛÛ+ ,
DoAction
ÛÛ, 4
(
ÛÛ4 5
)
ÛÛ5 6
.
ÛÛ6 7
notification
ÛÛ7 C
)
ÛÛC D
;
ÛÛD E
}
ÙÙ 
}
ıı 
}ˆˆ Ïë
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\TooltipContent.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
{

 
[ 
Serializable 
] 
public 

sealed 
class 
TooltipContent &
:' (

IEquatable) 3
<3 4
TooltipContent4 B
>B C
{ 
static 
GUIStyle 

TitleStyle "
{# $
get% (
{) *
if+ -
(. /
_titleStyle/ :
==; =
null> B
)B C

InitStylesD N
(N O
)O P
;P Q
returnR X
_titleStyleY d
;d e
}f g
}h i
static 
GUIStyle 
ShortcutStyle %
{& '
get( +
{, -
if. 0
(1 2
_shortcutStyle2 @
==A C
nullD H
)H I

InitStylesJ T
(T U
)U V
;V W
returnX ^
_shortcutStyle_ m
;m n
}o p
}q r
static 
GUIStyle 
_titleStyle #
=$ %
null& *
;* +
static 
GUIStyle 
_shortcutStyle &
=' (
null) -
;- .
const 
float 

k_MinWidth 
=  
$num! $
;$ %
const 
float 

k_MaxWidth 
=  
$num! $
;$ %
const 
float 
k_MinHeight 
=  !
$num" #
;# $
static 
void 

InitStyles 
( 
)  
{ 	
_titleStyle 
= 
new 
GUIStyle &
(& '
)' (
;( )
_titleStyle 
. 
margin 
=  
new! $

RectOffset% /
(/ 0
$num0 1
,1 2
$num3 4
,4 5
$num6 7
,7 8
$num9 :
): ;
;; <
_titleStyle 
. 
padding 
=  !
new" %

RectOffset& 0
(0 1
$num1 2
,2 3
$num4 5
,5 6
$num7 8
,8 9
$num: ;
); <
;< =
_titleStyle   
.   
fontSize    
=  ! "
$num  # %
;  % &
_titleStyle!! 
.!! 
	fontStyle!! !
=!!" #
	FontStyle!!$ -
.!!- .
Bold!!. 2
;!!2 3
_titleStyle"" 
."" 
normal"" 
."" 
	textColor"" (
="") *
EditorGUIUtility""+ ;
.""; <
	isProSkin""< E
?""F G
Color""H M
.""M N
white""N S
:""T U
Color""V [
.""[ \
black""\ a
;""a b
_titleStyle## 
.## 
richText##  
=##! "
true### '
;##' (
_shortcutStyle%% 
=%% 
new%%  
GUIStyle%%! )
(%%) *
_titleStyle%%* 5
)%%5 6
;%%6 7
_shortcutStyle&& 
.&& 
fontSize&& #
=&&$ %
$num&&& (
;&&( )
_shortcutStyle'' 
.'' 
	fontStyle'' $
=''% &
	FontStyle''' 0
.''0 1
Normal''1 7
;''7 8
_shortcutStyle(( 
.(( 
normal(( !
.((! "
	textColor((" +
=((, -
EditorGUIUtility((. >
.((> ?
	isProSkin((? H
?((I J
new((K N
Color((O T
(((T U
$num((U X
,((X Y
$num((Z ]
,((] ^
$num((_ b
,((b c
$num((d f
)((f g
:((h i
new((j m
Color((n s
(((s t
$num((t w
,((w x
$num((y |
,((| }
$num	((~ Å
,
((Å Ç
$num
((É Ö
)
((Ö Ü
;
((Ü á
EditorStyles** 
.** 
wordWrappedLabel** )
.**) *
richText*** 2
=**3 4
true**5 9
;**9 :
}++ 	
static-- 
readonly-- 
Color-- 
separatorColor-- ,
=--- .
new--/ 2
Color--3 8
(--8 9
$num--9 =
,--= >
$num--? C
,--C D
$num--E I
,--I J
$num--K N
)--N O
;--O P
public55 
string55 
title55 
{55 
get55 !
;55! "
set55# &
;55& '
}55( )
public== 
string== 
summary== 
{== 
get==  #
;==# $
set==% (
;==( )
}==* +
publicEE 
stringEE 
shortcutEE 
{EE  
getEE! $
;EE$ %
setEE& )
;EE) *
}EE+ ,
internalGG 
staticGG 
TooltipContentGG &
TempContentGG' 2
=GG3 4
newGG5 8
TooltipContentGG9 G
(GGG H
$strGGH J
,GGJ K
$strGGL N
)GGN O
;GGO P
publicOO 
TooltipContentOO 
(OO 
stringOO $
titleOO% *
,OO* +
stringOO, 2
summaryOO3 :
,OO: ;
paramsOO< B
charOOC G
[OOG H
]OOH I
shortcutOOJ R
)OOR S
:OOT U
thisOOV Z
(OOZ [
titleOO[ `
,OO` a
summaryOOb i
,OOi j
$strOOk m
)OOm n
{PP 	
ifQQ 
(QQ 
shortcutQQ 
!=QQ 
nullQQ  
&&QQ! #
shortcutQQ$ ,
.QQ, -
LengthQQ- 3
>QQ4 5
$numQQ6 7
)QQ7 8
{RR 
thisSS 
.SS 
shortcutSS 
=SS 
stringSS  &
.SS& '
EmptySS' ,
;SS, -
forUU 
(UU 
intUU 
iUU 
=UU 
$numUU 
;UU 
iUU  !
<UU" #
shortcutUU$ ,
.UU, -
LengthUU- 3
-UU4 5
$numUU6 7
;UU7 8
iUU9 :
++UU: <
)UU< =
{VV 
ifWW 
(WW 
!WW 
EditorUtilityWW &
.WW& '
IsUnixWW' -
(WW- .
)WW. /
)WW/ 0
thisXX 
.XX 
shortcutXX %
+=XX& (
InternalUtilityXX) 8
.XX8 9
ControlKeyStringXX9 I
(XXI J
shortcutXXJ R
[XXR S
iXXS T
]XXT U
)XXU V
+XXW X
$strXXY ^
;XX^ _
elseYY 
thisZZ 
.ZZ 
shortcutZZ %
+=ZZ& (
shortcutZZ) 1
[ZZ1 2
iZZ2 3
]ZZ3 4
+ZZ5 6
$strZZ7 <
;ZZ< =
}[[ 
if]] 
(]] 
!]] 
EditorUtility]] "
.]]" #
IsUnix]]# )
(]]) *
)]]* +
)]]+ ,
this^^ 
.^^ 
shortcut^^ !
+=^^" $
InternalUtility^^% 4
.^^4 5
ControlKeyString^^5 E
(^^E F
shortcut^^F N
[^^N O
shortcut^^O W
.^^W X
Length^^X ^
-^^_ `
$num^^a b
]^^b c
)^^c d
;^^d e
else__ 
this`` 
.`` 
shortcut`` !
+=``" $
shortcut``% -
[``- .
shortcut``. 6
.``6 7
Length``7 =
-``> ?
$num``@ A
]``A B
;``B C
}aa 
}bb 	
publicjj 
TooltipContentjj 
(jj 
stringjj $
titlejj% *
,jj* +
stringjj, 2
summaryjj3 :
,jj: ;
stringjj< B
shortcutjjC K
=jjL M
$strjjN P
)jjP Q
{kk 	
thisll 
.ll 
titlell 
=ll 
titlell 
;ll 
thismm 
.mm 
summarymm 
=mm 
summarymm "
;mm" #
thisnn 
.nn 
shortcutnn 
=nn 
shortcutnn $
;nn$ %
}oo 	
internaluu 
Vector2uu 
CalcSizeuu !
(uu! "
)uu" #
{vv 	
constww 
floatww 
padww 
=ww 
$numww 
;ww  
Vector2xx 
totalxx 
=xx 
newxx 
Vector2xx  '
(xx' (

k_MinWidthxx( 2
,xx2 3
k_MinHeightxx4 ?
)xx? @
;xx@ A
boolzz 
hastitlezz 
=zz 
!zz 
stringzz #
.zz# $
IsNullOrEmptyzz$ 1
(zz1 2
titlezz2 7
)zz7 8
;zz8 9
bool{{ 

hasSummary{{ 
={{ 
!{{ 
string{{ %
.{{% &
IsNullOrEmpty{{& 3
({{3 4
summary{{4 ;
){{; <
;{{< =
bool|| 
hasShortcut|| 
=|| 
!||  
string||  &
.||& '
IsNullOrEmpty||' 4
(||4 5
shortcut||5 =
)||= >
;||> ?
if~~ 
(~~ 
hastitle~~ 
)~~ 
{ 
Vector2
ÄÄ 
ns
ÄÄ 
=
ÄÄ 

TitleStyle
ÄÄ '
.
ÄÄ' (
CalcSize
ÄÄ( 0
(
ÄÄ0 1
UI
ÄÄ1 3
.
ÄÄ3 4
EditorGUIUtility
ÄÄ4 D
.
ÄÄD E
TempContent
ÄÄE P
(
ÄÄP Q
title
ÄÄQ V
)
ÄÄV W
)
ÄÄW X
;
ÄÄX Y
if
ÇÇ 
(
ÇÇ 
hasShortcut
ÇÇ 
)
ÇÇ  
{
ÉÉ 
ns
ÑÑ 
.
ÑÑ 
x
ÑÑ 
+=
ÑÑ 
EditorStyles
ÑÑ (
.
ÑÑ( )
	boldLabel
ÑÑ) 2
.
ÑÑ2 3
CalcSize
ÑÑ3 ;
(
ÑÑ; <
UI
ÑÑ< >
.
ÑÑ> ?
EditorGUIUtility
ÑÑ? O
.
ÑÑO P
TempContent
ÑÑP [
(
ÑÑ[ \
shortcut
ÑÑ\ d
)
ÑÑd e
)
ÑÑe f
.
ÑÑf g
x
ÑÑg h
+
ÑÑi j
pad
ÑÑk n
;
ÑÑn o
}
ÖÖ 
total
áá 
.
áá 
x
áá 
+=
áá 
Mathf
áá  
.
áá  !
Max
áá! $
(
áá$ %
ns
áá% '
.
áá' (
x
áá( )
,
áá) *
$num
áá+ .
)
áá. /
;
áá/ 0
total
àà 
.
àà 
y
àà 
+=
àà 
ns
àà 
.
àà 
y
àà 
;
àà  
}
ââ 
if
ãã 
(
ãã 

hasSummary
ãã 
)
ãã 
{
åå 
if
çç 
(
çç 
!
çç 
hastitle
çç 
)
çç 
{
éé 
Vector2
èè 
sumSize
èè #
=
èè$ %
EditorStyles
èè& 2
.
èè2 3
wordWrappedLabel
èè3 C
.
èèC D
CalcSize
èèD L
(
èèL M
UI
èèM O
.
èèO P
EditorGUIUtility
èèP `
.
èè` a
TempContent
èèa l
(
èèl m
summary
èèm t
)
èèt u
)
èèu v
;
èèv w
total
êê 
.
êê 
x
êê 
=
êê 
Mathf
êê #
.
êê# $
Min
êê$ '
(
êê' (
sumSize
êê( /
.
êê/ 0
x
êê0 1
,
êê1 2

k_MaxWidth
êê3 =
)
êê= >
;
êê> ?
}
ëë 
float
ìì 
summaryHeight
ìì #
=
ìì$ %
EditorStyles
ìì& 2
.
ìì2 3
wordWrappedLabel
ìì3 C
.
ììC D

CalcHeight
ììD N
(
ììN O
UI
ììO Q
.
ììQ R
EditorGUIUtility
ììR b
.
ììb c
TempContent
ììc n
(
ììn o
summary
ììo v
)
ììv w
,
ììw x
total
ììy ~
.
ìì~ 
xìì Ä
)ììÄ Å
;ììÅ Ç
total
îî 
.
îî 
y
îî 
+=
îî 
summaryHeight
îî (
;
îî( )
}
ïï 
if
óó 
(
óó 
hastitle
óó 
&&
óó 

hasSummary
óó &
)
óó& '
total
òò 
.
òò 
y
òò 
+=
òò 
$num
òò 
;
òò 
total
öö 
.
öö 
x
öö 
+=
öö 
pad
öö 
;
öö 
total
õõ 
.
õõ 
y
õõ 
+=
õõ 
pad
õõ 
;
õõ 
return
ùù 
total
ùù 
;
ùù 
}
ûû 	
internal
†† 
void
†† 
Draw
†† 
(
†† 
)
†† 
{
°° 	
if
¢¢ 
(
¢¢ 
!
¢¢ 
string
¢¢ 
.
¢¢ 
IsNullOrEmpty
¢¢ %
(
¢¢% &
title
¢¢& +
)
¢¢+ ,
)
¢¢, -
{
££ 
if
§§ 
(
§§ 
!
§§ 
string
§§ 
.
§§ 
IsNullOrEmpty
§§ )
(
§§) *
shortcut
§§* 2
)
§§2 3
)
§§3 4
{
•• 
	GUILayout
¶¶ 
.
¶¶ 
BeginHorizontal
¶¶ -
(
¶¶- .
)
¶¶. /
;
¶¶/ 0
	GUILayout
ßß 
.
ßß 
Label
ßß #
(
ßß# $
title
ßß$ )
,
ßß) *

TitleStyle
ßß+ 5
)
ßß5 6
;
ßß6 7
	GUILayout
®® 
.
®® 
FlexibleSpace
®® +
(
®®+ ,
)
®®, -
;
®®- .
	GUILayout
©© 
.
©© 
Label
©© #
(
©©# $
shortcut
©©$ ,
,
©©, -
ShortcutStyle
©©. ;
)
©©; <
;
©©< =
	GUILayout
™™ 
.
™™ 
EndHorizontal
™™ +
(
™™+ ,
)
™™, -
;
™™- .
}
´´ 
else
¨¨ 
{
≠≠ 
	GUILayout
ÆÆ 
.
ÆÆ 
Label
ÆÆ #
(
ÆÆ# $
title
ÆÆ$ )
,
ÆÆ) *

TitleStyle
ÆÆ+ 5
)
ÆÆ5 6
;
ÆÆ6 7
}
ØØ 
UI
±± 
.
±± 
EditorGUIUtility
±± #
.
±±# $
DrawSeparator
±±$ 1
(
±±1 2
$num
±±2 3
,
±±3 4
separatorColor
±±5 C
)
±±C D
;
±±D E
	GUILayout
≤≤ 
.
≤≤ 
Space
≤≤ 
(
≤≤  
$num
≤≤  !
)
≤≤! "
;
≤≤" #
}
≥≥ 
if
µµ 
(
µµ 
!
µµ 
string
µµ 
.
µµ 
IsNullOrEmpty
µµ %
(
µµ% &
summary
µµ& -
)
µµ- .
)
µµ. /
{
∂∂ 
	GUILayout
∑∑ 
.
∑∑ 
Label
∑∑ 
(
∑∑  
summary
∑∑  '
,
∑∑' (
EditorStyles
∑∑) 5
.
∑∑5 6
wordWrappedLabel
∑∑6 F
)
∑∑F G
;
∑∑G H
}
∏∏ 
}
ππ 	
public
¿¿ 
bool
¿¿ 
Equals
¿¿ 
(
¿¿ 
TooltipContent
¿¿ )
other
¿¿* /
)
¿¿/ 0
{
¡¡ 	
return
¬¬ 
other
¬¬ 
!=
¬¬ 
null
¬¬  
&&
¬¬! #
other
¬¬$ )
.
¬¬) *
title
¬¬* /
!=
¬¬0 2
null
¬¬3 7
&&
¬¬8 :
other
¬¬; @
.
¬¬@ A
title
¬¬A F
.
¬¬F G
Equals
¬¬G M
(
¬¬M N
this
¬¬N R
.
¬¬R S
title
¬¬S X
)
¬¬X Y
;
¬¬Y Z
}
√√ 	
public
   
override
   
bool
   
Equals
   #
(
  # $
object
  $ *
obj
  + .
)
  . /
{
ÀÀ 	
return
ÃÃ 
obj
ÃÃ 
is
ÃÃ 
TooltipContent
ÃÃ (
&&
ÃÃ) +
(
ÃÃ, -
(
ÃÃ- .
TooltipContent
ÃÃ. <
)
ÃÃ< =
obj
ÃÃ= @
)
ÃÃ@ A
.
ÃÃA B
title
ÃÃB G
.
ÃÃG H
Equals
ÃÃH N
(
ÃÃN O
title
ÃÃO T
)
ÃÃT U
;
ÃÃU V
}
ÕÕ 	
public
œœ 
override
œœ 
int
œœ 
GetHashCode
œœ '
(
œœ' (
)
œœ( )
{
–– 	
return
—— 
title
—— 
.
—— 
GetHashCode
—— $
(
——$ %
)
——% &
;
——& '
}
““ 	
public
⁄⁄ 
static
⁄⁄ 
explicit
⁄⁄ 
operator
⁄⁄ '
string
⁄⁄( .
(
⁄⁄. /
TooltipContent
⁄⁄/ =
content
⁄⁄> E
)
⁄⁄E F
{
€€ 	
if
‹‹ 
(
‹‹ 
content
‹‹ 
==
‹‹ 
null
‹‹ 
)
‹‹  
throw
›› 
new
›› #
ArgumentNullException
›› /
(
››/ 0
$str
››0 9
)
››9 :
;
››: ;
return
ﬁﬁ 
content
ﬁﬁ 
.
ﬁﬁ 
title
ﬁﬁ  
;
ﬁﬁ  !
}
ﬂﬂ 	
public
ÊÊ 
static
ÊÊ 
explicit
ÊÊ 
operator
ÊÊ '
TooltipContent
ÊÊ( 6
(
ÊÊ6 7
string
ÊÊ7 =
title
ÊÊ> C
)
ÊÊC D
{
ÁÁ 	
return
ËË 
new
ËË 
TooltipContent
ËË %
(
ËË% &
title
ËË& +
,
ËË+ ,
$str
ËË- /
)
ËË/ 0
;
ËË0 1
}
ÈÈ 	
public
ÔÔ 
override
ÔÔ 
string
ÔÔ 
ToString
ÔÔ '
(
ÔÔ' (
)
ÔÔ( )
{
 	
return
ÒÒ 
title
ÒÒ 
;
ÒÒ 
}
ÚÚ 	
public
˘˘ 
static
˘˘ 
TooltipContent
˘˘ $

FromString
˘˘% /
(
˘˘/ 0
string
˘˘0 6
title
˘˘7 <
)
˘˘< =
{
˙˙ 	
return
˚˚ 
new
˚˚ 
TooltipContent
˚˚ %
(
˚˚% &
title
˚˚& +
,
˚˚+ ,
$str
˚˚- /
)
˚˚/ 0
;
˚˚0 1
}
¸¸ 	
}
˝˝ 
}˛˛ ≥ã
ôD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\EditorHandleUtility.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
static 

class 
EditorHandleUtility $
{ 
static 
Stack 
< 
	Matrix4x4 
> 
s_HandleMatrix  .
=/ 0
new1 4
Stack5 :
<: ;
	Matrix4x4; D
>D E
(E F
)F G
;G H
public 
static 
bool 
SceneViewInUse )
() *
Event* /
e0 1
)1 2
{ 	
return 
e 
. 
alt 
|| 
Tools 
. 
current  
==! #
Tool$ (
.( )
View) -
|| 
( 
e 
. 
isMouse 
&&  
e! "
." #
button# )
>* +
$num, -
)- .
|| 
Tools 
. 
viewTool !
==" $
ViewTool% -
.- .
FPS. 1
|| 
Tools 
. 
viewTool !
==" $
ViewTool% -
.- .
Orbit. 3
;3 4
} 	
public 
static 
bool 
IsAppendModifier +
(+ ,
EventModifiers, :
em; =
)= >
{ 	
return 
( 
em 
& 
EventModifiers '
.' (
Shift( -
)- .
==/ 1
EventModifiers2 @
.@ A
ShiftA F
||G I
( 
em 
& 
EventModifiers $
.$ %
Control% ,
), -
==. 0
EventModifiers1 ?
.? @
Control@ G
||H J
( 
em 
& 
EventModifiers $
.$ %
Alt% (
)( )
==* ,
EventModifiers- ;
.; <
Alt< ?
||@ B
( 
em 
& 
EventModifiers $
.$ %
Command% ,
), -
==. 0
EventModifiers1 ?
.? @
Command@ G
;G H
} 	
public!! 
static!! 
bool!! "
IsSelectionAddModifier!! 1
(!!1 2
EventModifiers!!2 @
em!!A C
)!!C D
{"" 	
return## 
(## 
em## 
&## 
EventModifiers## '
.##' (
Shift##( -
)##- .
==##/ 1
EventModifiers##2 @
.##@ A
Shift##A F
;##F G
}$$ 	
public&& 
static&& 
bool&& #
IsSelectionPathModifier&& 2
(&&2 3
EventModifiers&&3 A
em&&B D
)&&D E
{'' 	
return(( 
((( 
em(( 
&(( 
EventModifiers(( '
.((' (
Shift((( -
)((- .
==((/ 1
EventModifiers((2 @
.((@ A
Shift((A F
&&((G I
()) 
()) 
em)) 
&)) 
EventModifiers)) $
.))$ %
Control))% ,
))), -
==)). 0
EventModifiers))1 ?
.))? @
Control))@ G
||))H J
(** 
em** 
&** 
EventModifiers** #
.**# $
Command**$ +
)**+ ,
==**- /
EventModifiers**0 >
.**> ?
Command**? F
)**F G
;**G H
}++ 	
public-- 
static-- 
bool-- 6
*IsSelectionAppendOrRemoveIfPresentModifier-- E
(--E F
EventModifiers--F T
em--U W
)--W X
{.. 	
return// 
(// 
(// 
(// 
Application// !
.//! "
platform//" *
==//+ -
RuntimePlatform//. =
.//= >
	OSXEditor//> G
)//G H
&&//J L
(//M N
em//N P
&//Q R
EventModifiers//S a
.//a b
Command//b i
)//i j
==//k m
EventModifiers//n |
.//| }
Command	//} Ñ
)
//Ñ Ö
||
//Ü à
(00 
(00 
Application00 
.00 
platform00 &
!=00' )
RuntimePlatform00* 9
.009 :
	OSXEditor00: C
)00C D
&&00E G
(00H I
em00I K
&00L M
EventModifiers00N \
.00\ ]
Control00] d
)00d e
==00f h
EventModifiers00i w
.00w x
Control00x 
)	00 Ä
)
00Ä Å
;
00Å Ç
}11 	
const33 
int33 
HANDLE_PADDING33  
=33! "
$num33# $
;33$ %
const44 
int44 
LEFT_MOUSE_BUTTON44 #
=44$ %
$num44& '
;44' (
const55 
int55 
MIDDLE_MOUSE_BUTTON55 %
=55& '
$num55( )
;55) *
static77 
readonly77 

Quaternion77 "
QuaternionUp77# /
=770 1

Quaternion772 <
.77< =
Euler77= B
(77B C
Vector377C J
.77J K
right77K P
*77Q R
$num77S V
)77V W
;77W X
static88 
readonly88 

Quaternion88 "
QuaternionRight88# 2
=883 4

Quaternion885 ?
.88? @
Euler88@ E
(88E F
Vector388F M
.88M N
up88N P
*88Q R
$num88S V
)88V W
;88W X
static99 
readonly99 
Vector399 
	ConeDepth99  )
=99* +
new99, /
Vector3990 7
(997 8
$num998 :
,99: ;
$num99< >
,99> ?
$num99@ C
)99C D
;99D E
static;; 
readonly;; 
Color;; 
k_HandleColorUp;; -
=;;. /
new;;0 3
Color;;4 9
(;;9 :
$num;;: <
,;;< =
$num;;> A
,;;A B
$num;;C E
,;;E F
$num;;G J
);;J K
;;;K L
static<< 
readonly<< 
Color<< 
k_HandleColorRight<< 0
=<<1 2
new<<3 6
Color<<7 <
(<<< =
$num<<= ?
,<<? @
$num<<A C
,<<C D
$num<<E H
,<<H I
$num<<J M
)<<M N
;<<N O
static== 
readonly== 
Color== 
k_HandleColorRotate== 1
===2 3
new==4 7
Color==8 =
(=== >
$num==> @
,==@ A
$num==B E
,==E F
$num==G I
,==I J
$num==K N
)==N O
;==O P
static>> 
readonly>> 
Color>> 
k_HandleColorScale>> 0
=>>1 2
new>>3 6
Color>>7 <
(>>< =
$num>>= @
,>>@ A
$num>>B E
,>>E F
$num>>G J
,>>J K
$num>>L O
)>>O P
;>>P Q
static@@ 
Material@@ 
s_HandleMaterial@@ (
=@@) *
null@@+ /
;@@/ 0
publicBB 
staticBB 
MaterialBB 
handleMaterialBB -
{CC 	
getDD 
{EE 
ifFF 
(FF 
s_HandleMaterialFF $
==FF% '
nullFF( ,
)FF, -
s_HandleMaterialGG $
=GG% &
(GG' (
MaterialGG( 0
)GG0 1
EditorGUIUtilityGG1 A
.GGA B
LoadRequiredGGB N
(GGN O
$strGGO l
)GGl m
;GGm n
returnII 
s_HandleMaterialII '
;II' (
}JJ 
}KK 	
publicMM 
staticMM 
intMM 
	CurrentIDMM #
{MM$ %
getMM& )
{MM* +
returnMM, 2
	currentIdMM3 <
;MM< =
}MM> ?
}MM@ A
staticNN 
intNN 
	currentIdNN 
=NN 
-NN  
$numNN  !
;NN! "
staticPP 
Vector2PP 
handleOffsetPP #
=PP$ %
Vector2PP& -
.PP- .
zeroPP. 2
;PP2 3
staticQQ 
Vector2QQ  
initialMousePositionQQ +
=QQ, -
Vector2QQ. 5
.QQ5 6
zeroQQ6 :
;QQ: ;
staticSS 
HandleConstraint2DSS !
axisConstraintSS" 0
=SS1 2
newSS3 6
HandleConstraint2DSS7 I
(SSI J
$numSSJ K
,SSK L
$numSSM N
)SSN O
;SSO P
publicTT 
staticTT 
HandleConstraint2DTT (!
CurrentAxisConstraintTT) >
{TT? @
getTTA D
{TTE F
returnTTG M
axisConstraintTTN \
;TT\ ]
}TT^ _
}TT` a
publicVV 
staticVV 
boolVV 
limitToLeftButtonVV ,
=VV- .
trueVV/ 3
;VV3 4
public^^ 
static^^ 
Vector2^^ 
PositionHandle2d^^ .
(^^. /
int^^/ 2
id^^3 5
,^^5 6
Vector2^^7 >
position^^? G
,^^G H
int^^I L
size^^M Q
)^^Q R
{__ 	
int`` 
width`` 
=`` 
size`` 
/`` 
$num``  
;``  !
varaa 
evtaa 
=aa 
Eventaa 
.aa 
currentaa #
;aa# $
Rectcc 
handleRectUpcc 
=cc 
newcc  #
Rectcc$ (
(cc( )
positioncc) 1
.cc1 2
xcc2 3
-cc4 5
widthcc6 ;
/cc< =
$numcc> ?
,cc? @
positionccA I
.ccI J
yccJ K
-ccL M
sizeccN R
-ccS T
HANDLE_PADDINGccU c
,ccc d
widthcce j
,ccj k
sizeccl p
+ccq r
HANDLE_PADDING	ccs Å
)
ccÅ Ç
;
ccÇ É
Rectdd 
handleRectRightdd  
=dd! "
newdd# &
Rectdd' +
(dd+ ,
positiondd, 4
.dd4 5
xdd5 6
,dd6 7
positiondd8 @
.dd@ A
yddA B
-ddC D
widthddE J
/ddK L
$numddM N
,ddN O
sizeddP T
,ddT U
widthddV [
+dd\ ]
HANDLE_PADDINGdd^ l
)ddl m
;ddm n
ifff 
(ff 
evtff 
.ff 
typeff 
==ff 
	EventTypeff %
.ff% &
Repaintff& -
)ff- .
{gg 
Handleshh 
.hh 
colorhh 
=hh 
Colorhh  %
.hh% &
yellowhh& ,
;hh, -
Handlesii 
.ii 
CircleHandleCapii '
(ii' (
idii( *
,ii* +
positionii, 4
,ii4 5

Quaternionii6 @
.ii@ A
identityiiA I
,iiI J
widthiiK P
/iiQ R
$numiiS U
,iiU V
evtiiW Z
.iiZ [
typeii[ _
)ii_ `
;ii` a
Handlesjj 
.jj 
colorjj 
=jj 
k_HandleColorUpjj  /
;jj/ 0
Handlesmm 
.mm 
DrawLinemm  
(mm  !
positionmm! )
,mm) *
positionmm+ 3
-mm4 5
Vector2mm6 =
.mm= >
upmm> @
*mmA B
sizemmC G
)mmG H
;mmH I
ifpp 
(pp 
positionpp 
.pp 
ypp 
-pp  
sizepp! %
>pp& '
$numpp( *
)pp* +
Handlesqq 
.qq 
ConeHandleCapqq )
(qq) *
idqq* ,
,qq, -
(qq. /
(qq/ 0
Vector3qq0 7
)qq7 8
(qq9 :
(qq: ;
positionqq; C
-qqD E
Vector2qqF M
.qqM N
upqqN P
*qqQ R
sizeqqS W
)qqW X
)qqX Y
)qqY Z
-qq[ \
	ConeDepthqq] f
,qqf g
QuaternionUpqqh t
,qqt u
widthrr 
/rr 
$numrr  !
,rr! "
evtrr# &
.rr& '
typerr' +
)rr+ ,
;rr, -
Handlestt 
.tt 
colortt 
=tt 
k_HandleColorRighttt  2
;tt2 3
Handlesww 
.ww 
DrawLineww  
(ww  !
positionww! )
,ww) *
positionww+ 3
+ww4 5
Vector2ww6 =
.ww= >
rightww> C
*wwD E
sizewwF J
)wwJ K
;wwK L
ifzz 
(zz 
positionzz 
.zz 
yzz 
>zz  
$numzz! #
)zz# $
Handles{{ 
.{{ 
ConeHandleCap{{ )
({{) *
id{{* ,
,{{, -
({{. /
({{/ 0
Vector3{{0 7
){{7 8
({{9 :
({{: ;
position{{; C
+{{D E
Vector2{{F M
.{{M N
right{{N S
*{{T U
size{{V Z
){{Z [
){{[ \
){{\ ]
-{{^ _
	ConeDepth{{` i
,{{i j
QuaternionRight|| '
,||' (
width||) .
/||/ 0
$num||1 2
,||2 3
evt||4 7
.||7 8
type||8 <
)||< =
;||= >
}}} 
if
ÄÄ 
(
ÄÄ 
	currentId
ÄÄ 
>=
ÄÄ 
$num
ÄÄ 
&&
ÄÄ !
	currentId
ÄÄ" +
!=
ÄÄ, .
id
ÄÄ/ 1
)
ÄÄ1 2
return
ÅÅ 
position
ÅÅ 
;
ÅÅ  
Vector2
ÉÉ 
mousePosition
ÉÉ !
=
ÉÉ" #
evt
ÉÉ$ '
.
ÉÉ' (
mousePosition
ÉÉ( 5
;
ÉÉ5 6
Vector2
ÑÑ 
newPosition
ÑÑ 
=
ÑÑ  !
position
ÑÑ" *
;
ÑÑ* +
if
ÜÜ 
(
ÜÜ 
	currentId
ÜÜ 
==
ÜÜ 
id
ÜÜ 
)
ÜÜ  
{
áá 
switch
àà 
(
àà 
evt
àà 
.
àà 
type
àà  
)
àà  !
{
ââ 
case
ää 
	EventType
ää "
.
ää" #
	MouseDrag
ää# ,
:
ää, -
newPosition
ãã #
=
ãã$ %
axisConstraint
ãã& 4
.
ãã4 5
Mask
ãã5 9
(
ãã9 :
mousePosition
ãã: G
+
ããH I
handleOffset
ããJ V
)
ããV W
+
ããX Y
axisConstraint
ããZ h
.
ããh i
InverseMask
ããi t
(
ããt u
position
ããu }
)
ãã} ~
;
ãã~ 
break
åå 
;
åå 
case
éé 
	EventType
éé "
.
éé" #
MouseUp
éé# *
:
éé* +
case
èè 
	EventType
èè "
.
èè" #
Ignore
èè# )
:
èè) *
	currentId
êê !
=
êê" #
-
êê$ %
$num
êê% &
;
êê& '
break
ëë 
;
ëë 
}
íí 
}
ìì 
else
îî 
{
ïï 
if
ññ 
(
ññ 
evt
ññ 
.
ññ 
type
ññ 
==
ññ 
	EventType
ññ  )
.
ññ) *
	MouseDown
ññ* 3
&&
ññ4 6
(
ññ7 8
(
ññ8 9
!
ññ9 :
limitToLeftButton
ññ: K
&&
ññL N
evt
ññO R
.
ññR S
button
ññS Y
!=
ññZ \!
MIDDLE_MOUSE_BUTTON
ññ] p
)
ññp q
||
ññr t
evt
ññu x
.
ññx y
button
ññy 
==ññÄ Ç!
LEFT_MOUSE_BUTTONññÉ î
)ññî ï
)ññï ñ
{
óó 
if
òò 
(
òò 
Vector2
òò 
.
òò  
Distance
òò  (
(
òò( )
mousePosition
òò) 6
,
òò6 7
position
òò8 @
)
òò@ A
<
òòB C
width
òòD I
/
òòJ K
$num
òòL N
)
òòN O
{
ôô 
	currentId
öö !
=
öö" #
id
öö$ &
;
öö& '
handleOffset
õõ $
=
õõ% &
position
õõ' /
-
õõ0 1
mousePosition
õõ2 ?
;
õõ? @
axisConstraint
úú &
=
úú' (
new
úú) , 
HandleConstraint2D
úú- ?
(
úú? @
$num
úú@ A
,
úúA B
$num
úúC D
)
úúD E
;
úúE F
}
ùù 
else
ûû 
if
ûû 
(
ûû 
handleRectRight
ûû ,
.
ûû, -
Contains
ûû- 5
(
ûû5 6
mousePosition
ûû6 C
)
ûûC D
)
ûûD E
{
üü 
	currentId
†† !
=
††" #
id
††$ &
;
††& '
handleOffset
°° $
=
°°% &
position
°°' /
-
°°0 1
mousePosition
°°2 ?
;
°°? @
axisConstraint
¢¢ &
=
¢¢' (
new
¢¢) , 
HandleConstraint2D
¢¢- ?
(
¢¢? @
$num
¢¢@ A
,
¢¢A B
$num
¢¢C D
)
¢¢D E
;
¢¢E F
}
££ 
else
§§ 
if
§§ 
(
§§ 
handleRectUp
§§ )
.
§§) *
Contains
§§* 2
(
§§2 3
mousePosition
§§3 @
)
§§@ A
)
§§A B
{
•• 
	currentId
¶¶ !
=
¶¶" #
id
¶¶$ &
;
¶¶& '
handleOffset
ßß $
=
ßß% &
position
ßß' /
-
ßß0 1
mousePosition
ßß2 ?
;
ßß? @
axisConstraint
®® &
=
®®' (
new
®®) , 
HandleConstraint2D
®®- ?
(
®®? @
$num
®®@ A
,
®®A B
$num
®®C D
)
®®D E
;
®®E F
}
©© 
}
™™ 
}
´´ 
return
≠≠ 
newPosition
≠≠ 
;
≠≠ 
}
ÆÆ 	
static
∞∞ 
Vector2
∞∞  
s_InitialDirection
∞∞ )
;
∞∞) *
public
∫∫ 
static
∫∫ 
float
∫∫ 
RotationHandle2d
∫∫ ,
(
∫∫, -
int
∫∫- 0
id
∫∫1 3
,
∫∫3 4
Vector2
∫∫5 <
position
∫∫= E
,
∫∫E F
float
∫∫G L
rotation
∫∫M U
,
∫∫U V
int
∫∫W Z
radius
∫∫[ a
)
∫∫a b
{
ªª 	
Event
ºº 
evt
ºº 
=
ºº 
Event
ºº 
.
ºº 
current
ºº %
;
ºº% &
Vector2
ΩΩ 
mousePosition
ΩΩ !
=
ΩΩ" #
evt
ΩΩ$ '
.
ΩΩ' (
mousePosition
ΩΩ( 5
;
ΩΩ5 6
float
ææ 
newRotation
ææ 
=
ææ 
rotation
ææ  (
;
ææ( )
Vector2
¿¿ 
currentDirection
¿¿ $
=
¿¿% &
(
¿¿' (
mousePosition
¿¿( 5
-
¿¿6 7
position
¿¿8 @
)
¿¿@ A
.
¿¿A B

normalized
¿¿B L
;
¿¿L M
Handles
√√ 
.
√√ 
color
√√ 
=
√√ !
k_HandleColorRotate
√√ /
;
√√/ 0
Handles
ƒƒ 
.
ƒƒ 
CircleHandleCap
ƒƒ #
(
ƒƒ# $
-
ƒƒ$ %
$num
ƒƒ% &
,
ƒƒ& '
position
ƒƒ( 0
,
ƒƒ0 1

Quaternion
ƒƒ2 <
.
ƒƒ< =
identity
ƒƒ= E
,
ƒƒE F
radius
ƒƒG M
,
ƒƒM N
evt
ƒƒO R
.
ƒƒR S
type
ƒƒS W
)
ƒƒW X
;
ƒƒX Y
if
∆∆ 
(
∆∆ 
	currentId
∆∆ 
==
∆∆ 
id
∆∆ 
)
∆∆  
{
«« 
Handles
»» 
.
»» 
color
»» 
=
»» 
Color
»»  %
.
»»% &
gray
»»& *
;
»»* +
Handles
…… 
.
…… 
DrawLine
……  
(
……  !
position
……! )
,
……) *
position
……+ 3
+
……4 5
(
……6 7
mousePosition
……7 D
-
……E F
position
……G O
)
……O P
.
……P Q

normalized
……Q [
*
……\ ]
radius
……^ d
)
……d e
;
……e f
GUI
   
.
   
Label
   
(
   
new
   
Rect
   "
(
  " #
position
  # +
.
  + ,
x
  , -
,
  - .
position
  / 7
.
  7 8
y
  8 9
,
  9 :
$num
  ; >
,
  > ?
$num
  @ C
)
  C D
,
  D E
newRotation
  F Q
.
  Q R
ToString
  R Z
(
  Z [
$str
  [ _
)
  _ `
+
  a b
PreferenceKeys
  c q
.
  q r
DEGREE_SYMBOL
  r 
)   Ä
;  Ä Å
}
ÀÀ 
if
ŒŒ 
(
ŒŒ 
	currentId
ŒŒ 
>=
ŒŒ 
$num
ŒŒ 
&&
ŒŒ !
	currentId
ŒŒ" +
!=
ŒŒ, .
id
ŒŒ/ 1
)
ŒŒ1 2
return
œœ 
rotation
œœ 
;
œœ  
if
—— 
(
—— 
	currentId
—— 
==
—— 
id
—— 
)
——  
{
““ 
switch
”” 
(
”” 
evt
”” 
.
”” 
type
””  
)
””  !
{
‘‘ 
case
’’ 
	EventType
’’ "
.
’’" #
	MouseDrag
’’# ,
:
’’, -
newRotation
◊◊ #
=
◊◊$ %
Vector2
◊◊& -
.
◊◊- .
Angle
◊◊. 3
(
◊◊3 4 
s_InitialDirection
◊◊4 F
,
◊◊F G
currentDirection
◊◊H X
)
◊◊X Y
;
◊◊Y Z
if
ŸŸ 
(
ŸŸ 
Vector2
ŸŸ #
.
ŸŸ# $
Dot
ŸŸ$ '
(
ŸŸ' (
new
ŸŸ( +
Vector2
ŸŸ, 3
(
ŸŸ3 4
-
ŸŸ4 5 
s_InitialDirection
ŸŸ5 G
.
ŸŸG H
y
ŸŸH I
,
ŸŸI J 
s_InitialDirection
ŸŸK ]
.
ŸŸ] ^
x
ŸŸ^ _
)
ŸŸ_ `
,
ŸŸ` a
currentDirection
ŸŸb r
)
ŸŸr s
<
ŸŸt u
$num
ŸŸv w
)
ŸŸw x
newRotation
⁄⁄ '
=
⁄⁄( )
$num
⁄⁄* .
-
⁄⁄/ 0
newRotation
⁄⁄1 <
;
⁄⁄< =
break
€€ 
;
€€ 
case
›› 
	EventType
›› "
.
››" #
MouseUp
››# *
:
››* +
case
ﬁﬁ 
	EventType
ﬁﬁ "
.
ﬁﬁ" #
Ignore
ﬁﬁ# )
:
ﬁﬁ) *
	currentId
ﬂﬂ !
=
ﬂﬂ" #
-
ﬂﬂ$ %
$num
ﬂﬂ% &
;
ﬂﬂ& '
break
‡‡ 
;
‡‡ 
}
·· 
}
‚‚ 
else
„„ 
{
‰‰ 
if
ÂÂ 
(
ÂÂ 
evt
ÂÂ 
.
ÂÂ 
type
ÂÂ 
==
ÂÂ 
	EventType
ÂÂ  )
.
ÂÂ) *
	MouseDown
ÂÂ* 3
&&
ÂÂ4 6
(
ÂÂ7 8
(
ÂÂ8 9
!
ÂÂ9 :
limitToLeftButton
ÂÂ: K
&&
ÂÂL N
evt
ÂÂO R
.
ÂÂR S
button
ÂÂS Y
!=
ÂÂZ \!
MIDDLE_MOUSE_BUTTON
ÂÂ] p
)
ÂÂp q
||
ÂÂr t
evt
ÂÂu x
.
ÂÂx y
button
ÂÂy 
==ÂÂÄ Ç!
LEFT_MOUSE_BUTTONÂÂÉ î
)ÂÂî ï
)ÂÂï ñ
{
ÊÊ 
if
ÁÁ 
(
ÁÁ 
Mathf
ÁÁ 
.
ÁÁ 
Abs
ÁÁ !
(
ÁÁ! "
Vector2
ÁÁ" )
.
ÁÁ) *
Distance
ÁÁ* 2
(
ÁÁ2 3
mousePosition
ÁÁ3 @
,
ÁÁ@ A
position
ÁÁB J
)
ÁÁJ K
-
ÁÁL M
radius
ÁÁN T
)
ÁÁT U
<
ÁÁV W
$num
ÁÁX Y
)
ÁÁY Z
{
ËË 
	currentId
ÈÈ !
=
ÈÈ" #
id
ÈÈ$ &
;
ÈÈ& '"
initialMousePosition
ÍÍ ,
=
ÍÍ- .
mousePosition
ÍÍ/ <
;
ÍÍ< = 
s_InitialDirection
ÎÎ *
=
ÎÎ+ ,
(
ÎÎ- ."
initialMousePosition
ÎÎ. B
-
ÎÎC D
position
ÎÎE M
)
ÎÎM N
.
ÎÎN O

normalized
ÎÎO Y
;
ÎÎY Z
handleOffset
ÏÏ $
=
ÏÏ% &
position
ÏÏ' /
-
ÏÏ0 1
mousePosition
ÏÏ2 ?
;
ÏÏ? @
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
return
ÒÒ 
newRotation
ÒÒ 
;
ÒÒ 
}
ÚÚ 	
public
¸¸ 
static
¸¸ 
Vector2
¸¸ 
ScaleHandle2d
¸¸ +
(
¸¸+ ,
int
¸¸, /
id
¸¸0 2
,
¸¸2 3
Vector2
¸¸4 ;
position
¸¸< D
,
¸¸D E
Vector2
¸¸F M
scale
¸¸N S
,
¸¸S T
int
¸¸U X
size
¸¸Y ]
)
¸¸] ^
{
˝˝ 	
Event
˛˛ 
evt
˛˛ 
=
˛˛ 
Event
˛˛ 
.
˛˛ 
current
˛˛ %
;
˛˛% &
Vector2
ˇˇ 
mousePosition
ˇˇ !
=
ˇˇ" #
evt
ˇˇ$ '
.
ˇˇ' (
mousePosition
ˇˇ( 5
;
ˇˇ5 6
int
ÄÄ 
width
ÄÄ 
=
ÄÄ 
size
ÄÄ 
/
ÄÄ 
$num
ÄÄ  
;
ÄÄ  !
if
ÇÇ 
(
ÇÇ 
evt
ÇÇ 
.
ÇÇ 
type
ÇÇ 
==
ÇÇ 
	EventType
ÇÇ %
.
ÇÇ% &
Repaint
ÇÇ& -
)
ÇÇ- .
{
ÉÉ 
Handles
ÑÑ 
.
ÑÑ 
color
ÑÑ 
=
ÑÑ 
k_HandleColorUp
ÑÑ  /
;
ÑÑ/ 0
Handles
ÖÖ 
.
ÖÖ 
DrawLine
ÖÖ  
(
ÖÖ  !
position
ÖÖ! )
,
ÖÖ) *
position
ÖÖ+ 3
-
ÖÖ4 5
Vector2
ÖÖ6 =
.
ÖÖ= >
up
ÖÖ> @
*
ÖÖA B
size
ÖÖC G
*
ÖÖH I
scale
ÖÖJ O
.
ÖÖO P
y
ÖÖP Q
)
ÖÖQ R
;
ÖÖR S
if
áá 
(
áá 
position
áá 
.
áá 
y
áá 
-
áá  
size
áá! %
>
áá& '
$num
áá( *
)
áá* +
Handles
àà 
.
àà 
CubeHandleCap
àà )
(
àà) *
$num
àà* +
,
àà+ ,
(
ââ 
(
ââ 
Vector3
ââ !
)
ââ! "
(
ââ# $
(
ââ$ %
position
ââ% -
-
ââ. /
Vector2
ââ0 7
.
ââ7 8
up
ââ8 :
*
ââ; <
scale
ââ= B
.
ââB C
y
ââC D
*
ââE F
size
ââG K
)
ââK L
)
ââL M
)
ââM N
-
ââO P
Vector3
ââQ X
.
ââX Y
forward
ââY `
*
ââa b
$num
ââc e
,
ââe f
QuaternionUp
ââg s
,
ââs t
width
ää 
/
ää 
$num
ää  !
,
ää! "
evt
ää# &
.
ää& '
type
ää' +
)
ää+ ,
;
ää, -
Handles
åå 
.
åå 
color
åå 
=
åå  
k_HandleColorRight
åå  2
;
åå2 3
Handles
çç 
.
çç 
DrawLine
çç  
(
çç  !
position
çç! )
,
çç) *
position
çç+ 3
+
çç4 5
Vector2
çç6 =
.
çç= >
right
çç> C
*
ççD E
size
ççF J
*
ççK L
scale
ççM R
.
ççR S
x
ççS T
)
ççT U
;
ççU V
if
èè 
(
èè 
position
èè 
.
èè 
y
èè 
>
èè  
$num
èè! #
)
èè# $
Handles
êê 
.
êê 
CubeHandleCap
êê )
(
êê) *
$num
êê* +
,
êê+ ,
(
ëë 
(
ëë 
Vector3
ëë !
)
ëë! "
(
ëë# $
(
ëë$ %
position
ëë% -
+
ëë. /
Vector2
ëë0 7
.
ëë7 8
right
ëë8 =
*
ëë> ?
scale
ëë@ E
.
ëëE F
x
ëëF G
*
ëëH I
size
ëëJ N
)
ëëN O
)
ëëO P
)
ëëP Q
-
ëëR S
Vector3
ëëT [
.
ëë[ \
forward
ëë\ c
*
ëëd e
$num
ëëf h
,
ëëh i

Quaternion
íí "
.
íí" #
Euler
íí# (
(
íí( )
Vector3
íí) 0
.
íí0 1
up
íí1 3
*
íí4 5
$num
íí6 9
)
íí9 :
,
íí: ;
width
ìì 
/
ìì 
$num
ìì  "
,
ìì" #
evt
îî 
.
îî 
type
îî  
)
îî  !
;
îî! "
Handles
ññ 
.
ññ 
color
ññ 
=
ññ  
k_HandleColorScale
ññ  2
;
ññ2 3
Handles
òò 
.
òò 
CubeHandleCap
òò %
(
òò% &
$num
òò& '
,
òò' (
(
ôô 
(
ôô 
Vector3
ôô 
)
ôô 
position
ôô '
)
ôô' (
-
ôô) *
Vector3
ôô+ 2
.
ôô2 3
forward
ôô3 :
*
ôô; <
$num
ôô= ?
,
ôô? @
QuaternionUp
öö  
,
öö  !
width
õõ 
/
õõ 
$num
õõ 
,
õõ 
evt
úú 
.
úú 
type
úú 
)
úú 
;
úú 
}
ùù 
if
†† 
(
†† 
	currentId
†† 
>=
†† 
$num
†† 
&&
†† !
	currentId
††" +
!=
††, .
id
††/ 1
)
††1 2
return
°° 
scale
°° 
;
°° 
Rect
££ 
handleRectUp
££ 
=
££ 
new
££  #
Rect
££$ (
(
££( )
position
££) 1
.
££1 2
x
££2 3
-
££4 5
width
££6 ;
/
££< =
$num
££> @
,
££@ A
position
££B J
.
££J K
y
££K L
-
££M N
size
££O S
-
££T U
HANDLE_PADDING
££V d
,
££d e
width
££f k
,
££k l
size
££m q
+
££r s
HANDLE_PADDING££t Ç
)££Ç É
;££É Ñ
Rect
§§ 
handleRectRight
§§  
=
§§! "
new
§§# &
Rect
§§' +
(
§§+ ,
position
§§, 4
.
§§4 5
x
§§5 6
,
§§6 7
position
§§8 @
.
§§@ A
y
§§A B
-
§§C D
width
§§E J
/
§§K L
$num
§§M O
,
§§O P
size
§§Q U
+
§§V W
$num
§§X Y
,
§§Y Z
width
§§[ `
)
§§` a
;
§§a b
Rect
•• 
handleRectCenter
•• !
=
••" #
new
••$ '
Rect
••( ,
(
••, -
position
••- 5
.
••5 6
x
••6 7
-
••8 9
width
••: ?
/
••@ A
$num
••B D
,
••D E
position
••F N
.
••N O
y
••O P
-
••Q R
width
••S X
/
••Y Z
$num
••[ ]
,
••] ^
width
••_ d
,
••d e
width
••f k
)
••k l
;
••l m
if
ßß 
(
ßß 
	currentId
ßß 
==
ßß 
id
ßß 
)
ßß  
{
®® 
switch
©© 
(
©© 
evt
©© 
.
©© 
type
©©  
)
©©  !
{
™™ 
case
´´ 
	EventType
´´ "
.
´´" #
	MouseDrag
´´# ,
:
´´, -
Vector2
¨¨ 
diff
¨¨  $
=
¨¨% &
axisConstraint
¨¨' 5
.
¨¨5 6
Mask
¨¨6 :
(
¨¨: ;
mousePosition
¨¨; H
-
¨¨I J"
initialMousePosition
¨¨K _
)
¨¨_ `
;
¨¨` a
diff
≠≠ 
.
≠≠ 
x
≠≠ 
+=
≠≠ !
size
≠≠" &
;
≠≠& '
diff
ÆÆ 
.
ÆÆ 
y
ÆÆ 
=
ÆÆ  
-
ÆÆ! "
diff
ÆÆ" &
.
ÆÆ& '
y
ÆÆ' (
;
ÆÆ( )
diff
ØØ 
.
ØØ 
y
ØØ 
+=
ØØ !
size
ØØ" &
;
ØØ& '
scale
∞∞ 
=
∞∞ 
diff
∞∞  $
/
∞∞% &
size
∞∞' +
;
∞∞+ ,
if
±± 
(
±± 
axisConstraint
±± *
==
±±+ - 
HandleConstraint2D
±±. @
.
±±@ A
None
±±A E
)
±±E F
{
≤≤ 
scale
≥≥ !
.
≥≥! "
x
≥≥" #
=
≥≥$ %
Mathf
≥≥& +
.
≥≥+ ,
Min
≥≥, /
(
≥≥/ 0
scale
≥≥0 5
.
≥≥5 6
x
≥≥6 7
,
≥≥7 8
scale
≥≥9 >
.
≥≥> ?
y
≥≥? @
)
≥≥@ A
;
≥≥A B
scale
¥¥ !
.
¥¥! "
y
¥¥" #
=
¥¥$ %
Mathf
¥¥& +
.
¥¥+ ,
Min
¥¥, /
(
¥¥/ 0
scale
¥¥0 5
.
¥¥5 6
x
¥¥6 7
,
¥¥7 8
scale
¥¥9 >
.
¥¥> ?
y
¥¥? @
)
¥¥@ A
;
¥¥A B
}
µµ 
break
∂∂ 
;
∂∂ 
case
∏∏ 
	EventType
∏∏ "
.
∏∏" #
MouseUp
∏∏# *
:
∏∏* +
case
ππ 
	EventType
ππ "
.
ππ" #
Ignore
ππ# )
:
ππ) *
	currentId
∫∫ !
=
∫∫" #
-
∫∫$ %
$num
∫∫% &
;
∫∫& '
break
ªª 
;
ªª 
}
ºº 
}
ΩΩ 
else
ææ 
{
øø 
if
¿¿ 
(
¿¿ 
evt
¿¿ 
.
¿¿ 
type
¿¿ 
==
¿¿ 
	EventType
¿¿  )
.
¿¿) *
	MouseDown
¿¿* 3
&&
¿¿4 6
(
¿¿7 8
(
¿¿8 9
!
¿¿9 :
limitToLeftButton
¿¿: K
&&
¿¿L N
evt
¿¿O R
.
¿¿R S
button
¿¿S Y
!=
¿¿Z \!
MIDDLE_MOUSE_BUTTON
¿¿] p
)
¿¿p q
||
¿¿r t
evt
¿¿u x
.
¿¿x y
button
¿¿y 
==¿¿Ä Ç!
LEFT_MOUSE_BUTTON¿¿É î
)¿¿î ï
)¿¿ï ñ
{
¡¡ 
if
¬¬ 
(
¬¬ 
handleRectCenter
¬¬ (
.
¬¬( )
Contains
¬¬) 1
(
¬¬1 2
mousePosition
¬¬2 ?
)
¬¬? @
)
¬¬@ A
{
√√ 
	currentId
ƒƒ !
=
ƒƒ" #
id
ƒƒ$ &
;
ƒƒ& '
handleOffset
≈≈ $
=
≈≈% &
position
≈≈' /
-
≈≈0 1
mousePosition
≈≈2 ?
;
≈≈? @"
initialMousePosition
∆∆ ,
=
∆∆- .
mousePosition
∆∆/ <
;
∆∆< =
axisConstraint
«« &
=
««' (
new
««) , 
HandleConstraint2D
««- ?
(
««? @
$num
««@ A
,
««A B
$num
««C D
)
««D E
;
««E F
}
»» 
else
…… 
if
…… 
(
…… 
handleRectRight
…… ,
.
……, -
Contains
……- 5
(
……5 6
mousePosition
……6 C
)
……C D
)
……D E
{
   
	currentId
ÀÀ !
=
ÀÀ" #
id
ÀÀ$ &
;
ÀÀ& '
handleOffset
ÃÃ $
=
ÃÃ% &
position
ÃÃ' /
-
ÃÃ0 1
mousePosition
ÃÃ2 ?
;
ÃÃ? @"
initialMousePosition
ÕÕ ,
=
ÕÕ- .
mousePosition
ÕÕ/ <
;
ÕÕ< =
axisConstraint
ŒŒ &
=
ŒŒ' (
new
ŒŒ) , 
HandleConstraint2D
ŒŒ- ?
(
ŒŒ? @
$num
ŒŒ@ A
,
ŒŒA B
$num
ŒŒC D
)
ŒŒD E
;
ŒŒE F
}
œœ 
else
–– 
if
–– 
(
–– 
handleRectUp
–– )
.
––) *
Contains
––* 2
(
––2 3
mousePosition
––3 @
)
––@ A
)
––A B
{
—— 
	currentId
““ !
=
““" #
id
““$ &
;
““& '
handleOffset
”” $
=
””% &
position
””' /
-
””0 1
mousePosition
””2 ?
;
””? @"
initialMousePosition
‘‘ ,
=
‘‘- .
mousePosition
‘‘/ <
;
‘‘< =
axisConstraint
’’ &
=
’’' (
new
’’) , 
HandleConstraint2D
’’- ?
(
’’? @
$num
’’@ A
,
’’A B
$num
’’C D
)
’’D E
;
’’E F
}
÷÷ 
}
◊◊ 
}
ÿÿ 
return
⁄⁄ 
scale
⁄⁄ 
;
⁄⁄ 
}
€€ 	
internal
›› 
static
›› 
void
›› 
GetAllOverlapping
›› .
(
››. /
Vector2
››/ 6
mousePosition
››7 D
,
››D E
List
››F J
<
››J K

GameObject
››K U
>
››U V
list
››W [
)
››[ \
{
ﬁﬁ 	
list
ﬂﬂ 
.
ﬂﬂ 
Clear
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ 

GameObject
·· 
nearestGameObject
·· (
=
··) *
null
··+ /
;
··/ 0
do
„„ 
{
‰‰ 
nearestGameObject
ÂÂ !
=
ÂÂ" #
HandleUtility
ÂÂ$ 1
.
ÂÂ1 2
PickGameObject
ÂÂ2 @
(
ÂÂ@ A
mousePosition
ÂÂA N
,
ÂÂN O
false
ÂÂP U
,
ÂÂU V
list
ÂÂW [
.
ÂÂ[ \
ToArray
ÂÂ\ c
(
ÂÂc d
)
ÂÂd e
)
ÂÂe f
;
ÂÂf g
if
ÁÁ 
(
ÁÁ 
nearestGameObject
ÁÁ %
!=
ÁÁ& (
null
ÁÁ) -
)
ÁÁ- .
list
ËË 
.
ËË 
Add
ËË 
(
ËË 
nearestGameObject
ËË .
)
ËË. /
;
ËË/ 0
else
ÈÈ 
break
ÍÍ 
;
ÍÍ 
}
ÎÎ 
while
ÏÏ 
(
ÏÏ 
nearestGameObject
ÏÏ $
!=
ÏÏ% '
null
ÏÏ( ,
)
ÏÏ, -
;
ÏÏ- .
}
ÌÌ 	
internal
ÔÔ 
static
ÔÔ 
void
ÔÔ 

GetHovered
ÔÔ '
(
ÔÔ' (
Vector2
ÔÔ( /
mousePosition
ÔÔ0 =
,
ÔÔ= >
List
ÔÔ? C
<
ÔÔC D

GameObject
ÔÔD N
>
ÔÔN O
list
ÔÔP T
)
ÔÔT U
{
 	
list
ÒÒ 
.
ÒÒ 
Clear
ÒÒ 
(
ÒÒ 
)
ÒÒ 
;
ÒÒ 
var
ÚÚ 
go
ÚÚ 
=
ÚÚ 
HandleUtility
ÚÚ "
.
ÚÚ" #
PickGameObject
ÚÚ# 1
(
ÚÚ1 2
mousePosition
ÚÚ2 ?
,
ÚÚ? @
false
ÚÚA F
)
ÚÚF G
;
ÚÚG H
if
ÛÛ 
(
ÛÛ 
go
ÛÛ 
!=
ÛÛ 
null
ÛÛ 
)
ÛÛ 
list
ÙÙ 
.
ÙÙ 
Add
ÙÙ 
(
ÙÙ 
go
ÙÙ 
)
ÙÙ 
;
ÙÙ 
}
ıı 	
public
ÄÄ 
static
ÄÄ 
bool
ÄÄ 
NearestPointDelta
ÄÄ ,
(
ÄÄ, -
Vector2
ÄÄ- 4
[
ÄÄ4 5
]
ÄÄ5 6
points
ÄÄ7 =
,
ÄÄ= >
Vector2
ÄÄ? F
[
ÄÄF G
]
ÄÄG H
compare
ÄÄI P
,
ÄÄP Q
int
ÄÄR U
[
ÄÄU V
]
ÄÄV W
mask
ÄÄX \
,
ÄÄ\ ]
float
ÄÄ^ c
maxDelta
ÄÄd l
,
ÄÄl m
out
ÄÄn q
Vector2
ÄÄr y
offsetÄÄz Ä
)ÄÄÄ Å
{
ÅÅ 	
float
ÇÇ 
dist
ÇÇ 
=
ÇÇ 
$num
ÇÇ 
;
ÇÇ 
float
ÉÉ 
minDist
ÉÉ 
=
ÉÉ 
maxDelta
ÉÉ $
;
ÉÉ$ %
bool
ÑÑ 

foundMatch
ÑÑ 
=
ÑÑ 
false
ÑÑ #
;
ÑÑ# $
offset
ÖÖ 
=
ÖÖ 
Vector2
ÖÖ 
.
ÖÖ 
zero
ÖÖ !
;
ÖÖ! "
for
áá 
(
áá 
int
áá 
i
áá 
=
áá 
$num
áá 
;
áá 
i
áá 
<
áá 
points
áá  &
.
áá& '
Length
áá' -
;
áá- .
i
áá/ 0
++
áá0 2
)
áá2 3
{
àà 
for
ââ 
(
ââ 
int
ââ 
n
ââ 
=
ââ 
$num
ââ 
;
ââ 
n
ââ  !
<
ââ" #
compare
ââ$ +
.
ââ+ ,
Length
ââ, 2
;
ââ2 3
n
ââ4 5
++
ââ5 7
)
ââ7 8
{
ää 
if
ãã 
(
ãã 
points
ãã 
[
ãã 
i
ãã  
]
ãã  !
==
ãã" $
compare
ãã% ,
[
ãã, -
n
ãã- .
]
ãã. /
)
ãã/ 0
continue
ãã1 9
;
ãã9 :
dist
çç 
=
çç 
Vector2
çç "
.
çç" #
Distance
çç# +
(
çç+ ,
points
çç, 2
[
çç2 3
i
çç3 4
]
çç4 5
,
çç5 6
compare
çç7 >
[
çç> ?
n
çç? @
]
çç@ A
)
ççA B
;
ççB C
if
èè 
(
èè 
dist
èè 
<
èè 
minDist
èè &
)
èè& '
{
êê 
if
ëë 
(
ëë 
mask
ëë  
!=
ëë! #
null
ëë$ (
&&
ëë) +
System
ëë, 2
.
ëë2 3
Array
ëë3 8
.
ëë8 9
IndexOf
ëë9 @
(
ëë@ A
mask
ëëA E
,
ëëE F
n
ëëG H
)
ëëH I
>
ëëJ K
-
ëëL M
$num
ëëM N
)
ëëN O
continue
íí $
;
íí$ %
minDist
îî 
=
îî  !
dist
îî" &
;
îî& '
offset
ïï 
=
ïï  
compare
ïï! (
[
ïï( )
n
ïï) *
]
ïï* +
-
ïï, -
points
ïï. 4
[
ïï4 5
i
ïï5 6
]
ïï6 7
;
ïï7 8

foundMatch
ññ "
=
ññ# $
true
ññ% )
;
ññ) *
}
óó 
}
òò 
}
ôô 
return
õõ 

foundMatch
õõ 
;
õõ 
}
úú 	
public
°° 
static
°° 
int
°° 
NearestPoint
°° &
(
°°& '
Vector2
°°' .
point
°°/ 4
,
°°4 5
Vector2
°°6 =
[
°°= >
]
°°> ?
points
°°@ F
,
°°F G
float
°°H M
maxDelta
°°N V
)
°°V W
{
¢¢ 	
float
££ 
dist
££ 
=
££ 
$num
££ 
;
££ 
float
§§ 
minDist
§§ 
=
§§ 
maxDelta
§§ $
;
§§$ %
int
•• 
index
•• 
=
•• 
-
•• 
$num
•• 
;
•• 
for
ßß 
(
ßß 
int
ßß 
i
ßß 
=
ßß 
$num
ßß 
;
ßß 
i
ßß 
<
ßß 
points
ßß  &
.
ßß& '
Length
ßß' -
;
ßß- .
i
ßß/ 0
++
ßß0 2
)
ßß2 3
{
®® 
if
©© 
(
©© 
point
©© 
==
©© 
points
©© #
[
©©# $
i
©©$ %
]
©©% &
)
©©& '
continue
©©( 0
;
©©0 1
dist
´´ 
=
´´ 
Vector2
´´ 
.
´´ 
Distance
´´ '
(
´´' (
point
´´( -
,
´´- .
points
´´/ 5
[
´´5 6
i
´´6 7
]
´´7 8
)
´´8 9
;
´´9 :
if
≠≠ 
(
≠≠ 
dist
≠≠ 
<
≠≠ 
minDist
≠≠ "
)
≠≠" #
{
ÆÆ 
minDist
ØØ 
=
ØØ 
dist
ØØ "
;
ØØ" #
index
∞∞ 
=
∞∞ 
i
∞∞ 
;
∞∞ 
}
±± 
}
≤≤ 
return
¥¥ 
index
¥¥ 
;
¥¥ 
}
µµ 	
public
√√ 
static
√√ 
Vector3
√√ $
ClosestPointToPolyLine
√√ 4
(
√√4 5
List
√√5 9
<
√√9 :
Vector3
√√: A
>
√√A B
vertices
√√C K
,
√√K L
out
√√M P
int
√√Q T
index
√√U Z
,
√√Z [
out
√√\ _
float
√√` e
distanceToLine
√√f t
,
√√t u
bool
√√v z
	closeLoop√√{ Ñ
=√√Ö Ü
false√√á å
,√√å ç
	Transform√√é ó
trs√√ò õ
=√√ú ù
null√√û ¢
)√√¢ £
{
ƒƒ 	
distanceToLine
≈≈ 
=
≈≈ 
Mathf
≈≈ "
.
≈≈" #
Infinity
≈≈# +
;
≈≈+ ,
if
«« 
(
«« 
trs
«« 
!=
«« 
null
«« 
)
«« 
distanceToLine
»» 
=
»»  
HandleUtility
»»! .
.
»». /
DistanceToLine
»»/ =
(
»»= >
trs
»»> A
.
»»A B
TransformPoint
»»B P
(
»»P Q
vertices
»»Q Y
[
»»Y Z
$num
»»Z [
]
»»[ \
)
»»\ ]
,
»»] ^
trs
»»_ b
.
»»b c
TransformPoint
»»c q
(
»»q r
vertices
»»r z
[
»»z {
$num
»»{ |
]
»»| }
)
»»} ~
)
»»~ 
;»» Ä
else
…… 
distanceToLine
   
=
    
HandleUtility
  ! .
.
  . /
DistanceToLine
  / =
(
  = >
vertices
  > F
[
  F G
$num
  G H
]
  H I
,
  I J
vertices
  K S
[
  S T
$num
  T U
]
  U V
)
  V W
;
  W X
index
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
;
ÃÃ 
int
ÕÕ 
count
ÕÕ 
=
ÕÕ 
vertices
ÕÕ  
.
ÕÕ  !
Count
ÕÕ! &
;
ÕÕ& '
for
œœ 
(
œœ 
int
œœ 
i
œœ 
=
œœ 
$num
œœ 
;
œœ 
i
œœ 
<
œœ 
(
œœ  !
	closeLoop
œœ! *
?
œœ+ ,
count
œœ- 2
+
œœ3 4
$num
œœ5 6
:
œœ7 8
count
œœ9 >
)
œœ> ?
;
œœ? @
i
œœA B
++
œœB D
)
œœD E
{
–– 
var
—— 
distance
—— 
=
—— 
$num
—— !
;
——! "
if
”” 
(
”” 
trs
”” 
!=
”” 
null
”” 
)
””  
distance
‘‘ 
=
‘‘ 
HandleUtility
‘‘ ,
.
‘‘, -
DistanceToLine
‘‘- ;
(
‘‘; <
trs
‘‘< ?
.
‘‘? @
TransformPoint
‘‘@ N
(
‘‘N O
vertices
‘‘O W
[
‘‘W X
i
‘‘X Y
-
‘‘Z [
$num
‘‘\ ]
]
‘‘] ^
)
‘‘^ _
,
‘‘_ `
trs
‘‘a d
.
‘‘d e
TransformPoint
‘‘e s
(
‘‘s t
vertices
‘‘t |
[
‘‘| }
i
‘‘} ~
%‘‘ Ä
count‘‘Å Ü
]‘‘Ü á
)‘‘á à
)‘‘à â
;‘‘â ä
else
’’ 
distance
÷÷ 
=
÷÷ 
HandleUtility
÷÷ ,
.
÷÷, -
DistanceToLine
÷÷- ;
(
÷÷; <
vertices
÷÷< D
[
÷÷D E
i
÷÷E F
-
÷÷G H
$num
÷÷I J
]
÷÷J K
,
÷÷K L
vertices
÷÷M U
[
÷÷U V
i
÷÷V W
%
÷÷X Y
count
÷÷Z _
]
÷÷_ `
)
÷÷` a
;
÷÷a b
if
ÿÿ 
(
ÿÿ 
distance
ÿÿ 
<
ÿÿ 
distanceToLine
ÿÿ -
)
ÿÿ- .
{
ŸŸ 
distanceToLine
⁄⁄ "
=
⁄⁄# $
distance
⁄⁄% -
;
⁄⁄- .
index
€€ 
=
€€ 
i
€€ 
-
€€ 
$num
€€  !
;
€€! "
}
‹‹ 
}
›› 
Vector3
ﬂﬂ 
point_a
ﬂﬂ 
=
ﬂﬂ 
trs
ﬂﬂ !
!=
ﬂﬂ" $
null
ﬂﬂ% )
?
ﬂﬂ* +
trs
ﬂﬂ, /
.
ﬂﬂ/ 0
TransformPoint
ﬂﬂ0 >
(
ﬂﬂ> ?
vertices
ﬂﬂ? G
[
ﬂﬂG H
index
ﬂﬂH M
]
ﬂﬂM N
)
ﬂﬂN O
:
ﬂﬂP Q
vertices
ﬂﬂR Z
[
ﬂﬂZ [
index
ﬂﬂ[ `
]
ﬂﬂ` a
;
ﬂﬂa b
Vector3
‡‡ 
point_b
‡‡ 
=
‡‡ 
trs
‡‡ !
!=
‡‡" $
null
‡‡% )
?
‡‡* +
trs
‡‡, /
.
‡‡/ 0
TransformPoint
‡‡0 >
(
‡‡> ?
vertices
‡‡? G
[
‡‡G H
(
‡‡H I
index
‡‡I N
+
‡‡O P
$num
‡‡Q R
)
‡‡R S
%
‡‡T U
count
‡‡V [
]
‡‡[ \
)
‡‡\ ]
:
‡‡^ _
vertices
‡‡` h
[
‡‡h i
index
‡‡i n
+
‡‡o p
$num
‡‡q r
]
‡‡r s
;
‡‡s t
index
‚‚ 
++
‚‚ 
;
‚‚ 
Vector2
‰‰ 
gui_a
‰‰ 
=
‰‰ 
Event
‰‰ !
.
‰‰! "
current
‰‰" )
.
‰‰) *
mousePosition
‰‰* 7
-
‰‰8 9
HandleUtility
‰‰: G
.
‰‰G H
WorldToGUIPoint
‰‰H W
(
‰‰W X
point_a
‰‰X _
)
‰‰_ `
;
‰‰` a
Vector2
ÂÂ 
gui_b
ÂÂ 
=
ÂÂ 
HandleUtility
ÂÂ )
.
ÂÂ) *
WorldToGUIPoint
ÂÂ* 9
(
ÂÂ9 :
point_b
ÂÂ: A
)
ÂÂA B
-
ÂÂC D
HandleUtility
ÂÂE R
.
ÂÂR S
WorldToGUIPoint
ÂÂS b
(
ÂÂb c
point_a
ÂÂc j
)
ÂÂj k
;
ÂÂk l
float
ÁÁ 
	magnitude
ÁÁ 
=
ÁÁ 
gui_b
ÁÁ #
.
ÁÁ# $
	magnitude
ÁÁ$ -
;
ÁÁ- .
float
ËË 
travel
ËË 
=
ËË 
Vector3
ËË "
.
ËË" #
Dot
ËË# &
(
ËË& '
gui_b
ËË' ,
,
ËË, -
gui_a
ËË. 3
)
ËË3 4
;
ËË4 5
if
ÍÍ 
(
ÍÍ 
	magnitude
ÍÍ 
>
ÍÍ 
$num
ÍÍ "
)
ÍÍ" #
travel
ÎÎ 
/=
ÎÎ 
	magnitude
ÎÎ #
*
ÎÎ$ %
	magnitude
ÎÎ& /
;
ÎÎ/ 0
Vector3
ÌÌ 
p
ÌÌ 
=
ÌÌ 
Vector3
ÌÌ 
.
ÌÌ  
Lerp
ÌÌ  $
(
ÌÌ$ %
point_a
ÌÌ% ,
,
ÌÌ, -
point_b
ÌÌ. 5
,
ÌÌ5 6
Mathf
ÌÌ7 <
.
ÌÌ< =
Clamp01
ÌÌ= D
(
ÌÌD E
travel
ÌÌE K
)
ÌÌK L
)
ÌÌL M
;
ÌÌM N
return
ÔÔ 
trs
ÔÔ 
!=
ÔÔ 
null
ÔÔ 
?
ÔÔ  
trs
ÔÔ! $
.
ÔÔ$ %#
InverseTransformPoint
ÔÔ% :
(
ÔÔ: ;
p
ÔÔ; <
)
ÔÔ< =
:
ÔÔ> ?
p
ÔÔ@ A
;
ÔÔA B
}
 	
internal
ÚÚ 
static
ÚÚ 
void
ÚÚ 

PushMatrix
ÚÚ '
(
ÚÚ' (
)
ÚÚ( )
{
ÛÛ 	
s_HandleMatrix
ÙÙ 
.
ÙÙ 
Push
ÙÙ 
(
ÙÙ  
Handles
ÙÙ  '
.
ÙÙ' (
matrix
ÙÙ( .
)
ÙÙ. /
;
ÙÙ/ 0
}
ıı 	
internal
˜˜ 
static
˜˜ 
void
˜˜ 
	PopMatrix
˜˜ &
(
˜˜& '
)
˜˜' (
{
¯¯ 	
Handles
˘˘ 
.
˘˘ 
matrix
˘˘ 
=
˘˘ 
s_HandleMatrix
˘˘ +
.
˘˘+ ,
Pop
˘˘, /
(
˘˘/ 0
)
˘˘0 1
;
˘˘1 2
}
˙˙ 	
internal
ÅÅ 
static
ÅÅ 
Plane
ÅÅ 
FindBestPlane
ÅÅ +
(
ÅÅ+ ,
Vector2
ÅÅ, 3
mousePosition
ÅÅ4 A
)
ÅÅA B
{
ÇÇ 	
Plane
àà 
plane
àà 
;
àà 
if
ää 
(
ää &
GetPlaneFromPickedObject
ää (
(
ää( )
mousePosition
ää) 6
,
ää6 7
out
ää8 ;
plane
ää< A
)
ääA B
)
ääB C
return
ãã 
plane
ãã 
;
ãã 
if
çç 
(
çç &
GetPlaneFromProGridsAxis
çç '
(
çç' (
mousePosition
çç( 5
,
çç5 6
out
çç7 :
plane
çç; @
)
çç@ A
)
ççA B
return
éé 
plane
éé 
;
éé 
return
êê )
GetPlaneFromCameraDirection
êê .
(
êê. /
)
êê/ 0
;
êê0 1
}
ëë 	
static
ìì 
bool
ìì &
GetPlaneFromPickedObject
ìì ,
(
ìì, -
Vector2
ìì- 4
mousePosition
ìì5 B
,
ììB C
out
ììD G
Plane
ììH M
plane
ììN S
)
ììS T
{
îî 	

GameObject
ïï 
go
ïï 
=
ïï 
null
ïï  
;
ïï  !
var
ññ 
ignorePicking
ññ 
=
ññ 
new
ññ  #
List
ññ$ (
<
ññ( )

GameObject
ññ) 3
>
ññ3 4
(
ññ4 5
)
ññ5 6
;
ññ6 7
do
òò 
{
ôô 
if
öö 
(
öö 
go
öö 
!=
öö 
null
öö 
)
öö 
ignorePicking
õõ !
.
õõ! "
Add
õõ" %
(
õõ% &
go
õõ& (
)
õõ( )
;
õõ) *
go
ùù 
=
ùù 
HandleUtility
ùù "
.
ùù" #
PickGameObject
ùù# 1
(
ùù1 2
mousePosition
ùù2 ?
,
ùù? @
false
ùùA F
,
ùùF G
ignorePicking
ùùH U
.
ùùU V
ToArray
ùùV ]
(
ùù] ^
)
ùù^ _
)
ùù_ `
;
ùù` a
}
ûû 
while
ûû 
(
ûû 
go
ûû 
!=
ûû 
null
ûû 
&&
ûû  "
(
ûû# $
go
ûû$ &
.
ûû& '
GetComponent
ûû' 3
<
ûû3 4

MeshFilter
ûû4 >
>
ûû> ?
(
ûû? @
)
ûû@ A
==
ûûB D
null
ûûE I
&&
ûûJ L
go
ûûM O
.
ûûO P
GetComponent
ûûP \
<
ûû\ ]
Terrain
ûû] d
>
ûûd e
(
ûûe f
)
ûûf g
==
ûûh j
null
ûûk o
)
ûûo p
)
ûûp q
;
ûûq r
if
†† 
(
†† 
go
†† 
!=
†† 
null
†† 
)
†† 
{
°° 
if
¢¢ 
(
¢¢ 
go
¢¢ 
.
¢¢ 
GetComponent
¢¢ #
<
¢¢# $

MeshFilter
¢¢$ .
>
¢¢. /
(
¢¢/ 0
)
¢¢0 1
!=
¢¢2 4
null
¢¢5 9
&&
¢¢: <
go
¢¢= ?
.
¢¢? @
GetComponent
¢¢@ L
<
¢¢L M

MeshFilter
¢¢M W
>
¢¢W X
(
¢¢X Y
)
¢¢Y Z
.
¢¢Z [

sharedMesh
¢¢[ e
!=
¢¢f h
null
¢¢i m
)
¢¢m n
{
££ 

RaycastHit
§§ 
hit
§§ "
;
§§" #
if
•• 
(
•• 
UnityEngine
•• #
.
••# $

ProBuilder
••$ .
.
••. /
HandleUtility
••/ <
.
••< =
MeshRaycast
••= H
(
••H I
HandleUtility
¶¶ %
.
¶¶% & 
GUIPointToWorldRay
¶¶& 8
(
¶¶8 9
mousePosition
¶¶9 F
)
¶¶F G
,
¶¶G H
go
ßß 
,
ßß 
out
®® 
hit
®® 
)
®®  
)
®®  !
{
©© 
plane
™™ 
=
™™ 
new
™™  #
Plane
™™$ )
(
™™) *
go
´´ 
.
´´ 
	transform
´´ (
.
´´( ) 
TransformDirection
´´) ;
(
´´; <
hit
´´< ?
.
´´? @
normal
´´@ F
)
´´F G
,
´´G H
go
¨¨ 
.
¨¨ 
	transform
¨¨ (
.
¨¨( )
TransformPoint
¨¨) 7
(
¨¨7 8
hit
¨¨8 ;
.
¨¨; <
point
¨¨< A
)
¨¨A B
)
¨¨B C
;
¨¨C D
return
≠≠ 
true
≠≠ #
;
≠≠# $
}
ÆÆ 
}
ØØ 
else
∞∞ 
if
∞∞ 
(
∞∞ 
go
∞∞ 
.
∞∞ 
GetComponent
∞∞ (
<
∞∞( )
Terrain
∞∞) 0
>
∞∞0 1
(
∞∞1 2
)
∞∞2 3
!=
∞∞4 6
null
∞∞7 ;
)
∞∞; <
{
±± 
UnityEngine
≤≤ 
.
≤≤  

RaycastHit
≤≤  *
hit
≤≤+ .
;
≤≤. /
if
≥≥ 
(
≥≥ 
Physics
≥≥ 
.
≥≥  
Raycast
≥≥  '
(
≥≥' (
HandleUtility
≥≥( 5
.
≥≥5 6 
GUIPointToWorldRay
≥≥6 H
(
≥≥H I
mousePosition
≥≥I V
)
≥≥V W
,
≥≥W X
out
≥≥Y \
hit
≥≥] `
)
≥≥` a
)
≥≥a b
{
¥¥ 
plane
µµ 
=
µµ 
new
µµ  #
Plane
µµ$ )
(
µµ) *
hit
µµ* -
.
µµ- .
normal
µµ. 4
,
µµ4 5
hit
µµ5 8
.
µµ8 9
point
µµ9 >
)
µµ> ?
;
µµ? @
return
∂∂ 
true
∂∂ #
;
∂∂# $
}
∑∑ 
}
∏∏ 
}
ππ 
plane
ªª 
=
ªª 
default
ªª 
(
ªª 
Plane
ªª !
)
ªª! "
;
ªª" #
return
ºº 
false
ºº 
;
ºº 
}
ΩΩ 	
static
øø 
bool
øø &
GetPlaneFromProGridsAxis
øø ,
(
øø, -
Vector2
øø- 4
mousePosition
øø5 B
,
øøB C
out
øøD G
Plane
øøH M
plane
øøN S
)
øøS T
{
¿¿ 	
if
¡¡ 
(
¡¡ 
!
¡¡ 
ProGridsInterface
¡¡ "
.
¡¡" #
IsActive
¡¡# +
(
¡¡+ ,
)
¡¡, -
||
¡¡. 0
!
¡¡1 2
ProGridsInterface
¡¡2 C
.
¡¡C D
GridVisible
¡¡D O
(
¡¡O P
)
¡¡P Q
)
¡¡Q R
{
¬¬ 
plane
√√ 
=
√√ 
default
√√ 
(
√√  
Plane
√√  %
)
√√% &
;
√√& '
return
ƒƒ 
false
ƒƒ 
;
ƒƒ 
}
≈≈ 
Vector3
«« 
point
«« 
=
«« 
	SceneView
«« %
.
««% &!
lastActiveSceneView
««& 9
.
««9 :
pivot
««: ?
;
««? @
Vector3
»» 
progridsPivot
»» !
;
»»! "
if
…… 
(
…… 
ProGridsInterface
……  
.
……  !
GetPivot
……! )
(
……) *
out
……* -
progridsPivot
……. ;
)
……; <
)
……< =
point
   
=
   
progridsPivot
   %
;
  % &
Vector3
ÀÀ 
normal
ÀÀ 
=
ÀÀ 
Vector3
ÀÀ $
.
ÀÀ$ %
up
ÀÀ% '
;
ÀÀ' (
if
ÕÕ 
(
ÕÕ 
ProGridsInterface
ÕÕ !
.
ÕÕ! "
IsFullGridEnabled
ÕÕ" 3
(
ÕÕ3 4
)
ÕÕ4 5
)
ÕÕ5 6
{
ŒŒ 
var
œœ 
ray
œœ 
=
œœ 
HandleUtility
œœ '
.
œœ' ( 
GUIPointToWorldRay
œœ( :
(
œœ: ;
mousePosition
œœ; H
)
œœH I
;
œœI J
Plane
—— 
[
—— 
]
—— 
planes
—— 
=
——  
new
——! $
Plane
——% *
[
——* +
$num
——+ ,
]
——, -
{
““ 
new
”” 
Plane
”” 
(
”” 
Vector3
”” %
.
””% &
right
””& +
,
””+ ,
point
””- 2
)
””2 3
,
””3 4
new
‘‘ 
Plane
‘‘ 
(
‘‘ 
Vector3
‘‘ %
.
‘‘% &
up
‘‘& (
,
‘‘( )
point
‘‘* /
)
‘‘/ 0
,
‘‘0 1
new
’’ 
Plane
’’ 
(
’’ 
Vector3
’’ %
.
’’% &
forward
’’& -
,
’’- .
point
’’/ 4
)
’’4 5
}
÷÷ 
;
÷÷ 
float
ÿÿ 
closestDistance
ÿÿ %
=
ÿÿ& '
Mathf
ÿÿ( -
.
ÿÿ- .
Infinity
ÿÿ. 6
;
ÿÿ6 7
Plane
ŸŸ 
closestPlane
ŸŸ "
=
ŸŸ# $
default
ŸŸ% ,
(
ŸŸ, -
Plane
ŸŸ- 2
)
ŸŸ2 3
;
ŸŸ3 4
for
€€ 
(
€€ 
int
€€ 
i
€€ 
=
€€ 
$num
€€ 
;
€€ 
i
€€  !
<
€€" #
planes
€€$ *
.
€€* +
Length
€€+ 1
;
€€1 2
++
€€3 5
i
€€5 6
)
€€6 7
{
‹‹ 
float
›› 
distance
›› "
;
››" #
if
ﬂﬂ 
(
ﬂﬂ 
planes
ﬂﬂ 
[
ﬂﬂ 
i
ﬂﬂ  
]
ﬂﬂ  !
.
ﬂﬂ! "
Raycast
ﬂﬂ" )
(
ﬂﬂ) *
ray
ﬂﬂ* -
,
ﬂﬂ- .
out
ﬂﬂ/ 2
distance
ﬂﬂ3 ;
)
ﬂﬂ; <
)
ﬂﬂ< =
{
‡‡ 
if
·· 
(
·· 
distance
·· $
<
··% &
closestDistance
··' 6
)
··6 7
{
‚‚ 
closestDistance
„„ +
=
„„, -
distance
„„. 6
;
„„6 7
closestPlane
‰‰ (
=
‰‰) *
planes
‰‰+ 1
[
‰‰1 2
i
‰‰2 3
]
‰‰3 4
;
‰‰4 5
}
ÂÂ 
}
ÊÊ 
}
ÁÁ 
plane
ÈÈ 
=
ÈÈ 
new
ÈÈ 
Plane
ÈÈ !
(
ÈÈ! "
closestPlane
ÈÈ" .
.
ÈÈ. /
normal
ÈÈ/ 5
,
ÈÈ5 6
point
ÈÈ7 <
)
ÈÈ< =
;
ÈÈ= >
}
ÍÍ 
else
ÎÎ 
{
ÏÏ 
var
ÓÓ 
axis
ÓÓ 
=
ÓÓ 
ProGridsInterface
ÓÓ ,
.
ÓÓ, -
GetActiveGridAxis
ÓÓ- >
(
ÓÓ> ?
)
ÓÓ? @
;
ÓÓ@ A
float
ÔÔ 
offset
ÔÔ 
=
ÔÔ 
ProGridsInterface
ÔÔ 0
.
ÔÔ0 1!
GetActiveGridOffset
ÔÔ1 D
(
ÔÔD E
)
ÔÔE F
;
ÔÔF G
switch
ÒÒ 
(
ÒÒ 
axis
ÒÒ 
)
ÒÒ 
{
ÚÚ 
case
ÛÛ 

HandleAxis
ÛÛ #
.
ÛÛ# $
X
ÛÛ$ %
:
ÛÛ% &
point
ÙÙ 
.
ÙÙ 
x
ÙÙ 
+=
ÙÙ  "
offset
ÙÙ# )
;
ÙÙ) *
normal
ıı 
=
ıı  
Vector3
ıı! (
.
ıı( )
right
ıı) .
;
ıı. /
break
ˆˆ 
;
ˆˆ 
case
¯¯ 

HandleAxis
¯¯ #
.
¯¯# $
Y
¯¯$ %
:
¯¯% &
point
˘˘ 
.
˘˘ 
y
˘˘ 
+=
˘˘  "
offset
˘˘# )
;
˘˘) *
normal
˙˙ 
=
˙˙  
Vector3
˙˙! (
.
˙˙( )
up
˙˙) +
;
˙˙+ ,
break
˚˚ 
;
˚˚ 
case
¸¸ 

HandleAxis
¸¸ #
.
¸¸# $
Z
¸¸$ %
:
¸¸% &
point
˝˝ 
.
˝˝ 
z
˝˝ 
+=
˝˝  "
offset
˝˝# )
;
˝˝) *
normal
˛˛ 
=
˛˛  
Vector3
˛˛! (
.
˛˛( )
forward
˛˛) 0
;
˛˛0 1
break
ˇˇ 
;
ˇˇ 
}
ÄÄ 
plane
ÇÇ 
=
ÇÇ 
new
ÇÇ 
Plane
ÇÇ !
(
ÇÇ! "
normal
ÇÇ" (
,
ÇÇ( )
point
ÇÇ* /
)
ÇÇ/ 0
;
ÇÇ0 1
}
ÉÉ 
return
ÖÖ 
true
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
static
àà 
Plane
àà )
GetPlaneFromCameraDirection
àà 0
(
àà0 1
)
àà1 2
{
ââ 	
var
ää 
	sceneView
ää 
=
ää 
	SceneView
ää %
.
ää% &!
lastActiveSceneView
ää& 9
;
ää9 :
var
ãã 
cameraDirection
ãã 
=
ãã  !
	sceneView
ãã" +
.
ãã+ ,
camera
ãã, 2
.
ãã2 3
	transform
ãã3 <
.
ãã< =
forward
ãã= D
;
ããD E
float
çç 
pitch
çç 
=
çç 
Mathf
çç 
.
çç  
Abs
çç  #
(
çç# $
Vector3
çç$ +
.
çç+ ,
Dot
çç, /
(
çç/ 0
cameraDirection
çç0 ?
,
çç? @
Vector3
ççA H
.
ççH I
up
ççI K
)
ççK L
)
ççL M
;
ççM N
float
éé 
right
éé 
=
éé 
Mathf
éé 
.
éé  
Abs
éé  #
(
éé# $
Vector3
éé$ +
.
éé+ ,
Dot
éé, /
(
éé/ 0
cameraDirection
éé0 ?
,
éé? @
Vector3
ééA H
.
ééH I
right
ééI N
)
ééN O
)
ééO P
;
ééP Q
float
èè 
forward
èè 
=
èè 
Mathf
èè !
.
èè! "
Abs
èè" %
(
èè% &
Vector3
èè& -
.
èè- .
Dot
èè. 1
(
èè1 2
cameraDirection
èè2 A
,
èèA B
Vector3
èèC J
.
èèJ K
forward
èèK R
)
èèR S
)
èèS T
;
èèT U
ProjectionAxis
ëë 
axis
ëë 
=
ëë  !
ProjectionAxis
ëë" 0
.
ëë0 1
Y
ëë1 2
;
ëë2 3
if
îî 
(
îî 
pitch
îî 
<
îî 
$num
îî 
)
îî 
{
ïï 
if
ññ 
(
ññ 
right
ññ 
>
ññ 
forward
ññ #
)
ññ# $
axis
óó 
=
óó 
ProjectionAxis
óó )
.
óó) *
X
óó* +
;
óó+ ,
else
òò 
axis
ôô 
=
ôô 
ProjectionAxis
ôô )
.
ôô) *
Z
ôô* +
;
ôô+ ,
}
öö 
return
úú 
new
úú 
Plane
úú 
(
úú 

Projection
úú '
.
úú' ($
ProjectionAxisToVector
úú( >
(
úú> ?
axis
úú? C
)
úúC D
,
úúD E
	SceneView
úúF O
.
úúO P!
lastActiveSceneView
úúP c
.
úúc d
pivot
úúd i
)
úúi j
;
úúj k
}
ùù 	
}
ûû 
}üü ß-
£D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\SetPivotToSelection.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
SetPivotToSelection $
:% &

MenuAction' 1
{ 
public		 
override		 
ToolbarGroup		 $
group		% *
{		+ ,
get		- 0
{		1 2
return		3 9
ToolbarGroup		: F
.		F G
Geometry		G O
;		O P
}		Q R
}		S T
public

 
override

 
	Texture2D

 !
icon

" &
{

' (
get

) ,
{

- .
return

/ 5
IconUtility

6 A
.

A B
GetIcon

B I
(

I J
$str

J j
,

j k
IconSkin

l t
.

t u
Pro

u x
)

x y
;

y z
}

{ |
}

} ~
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
_tooltip> F
;F G
}H I
}J K
public 
override 
string 
	menuTitle (
{) *
get+ .
{/ 0
return1 7
$str8 C
;C D
}E F
}G H
static 
readonly 
TooltipContent &
_tooltip' /
=0 1
new2 5
TooltipContent6 D
( 
$str 2
,2 3
$str	 ±
,
± ≤
keyCommandSuper 
,  
$char! $
) 
; 
public 
override 

SelectMode "
validSelectModes# 3
{ 	
get 
{ 
return 

SelectMode #
.# $
Vertex$ *
|+ ,

SelectMode- 7
.7 8
Edge8 <
|= >

SelectMode? I
.I J
FaceJ N
;N O
}P Q
} 	
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
base 
. 
enabled #
&&$ &
(' (
MeshSelection( 5
.5 6
selectedVertexCount6 I
>J K
$numL M
||( *
MeshSelection+ 8
.8 9
selectedEdgeCount9 J
>K L
$numM N
||  ( *
MeshSelection  + 8
.  8 9
selectedFaceCount  9 J
>  K L
$num  M N
)  N O
;  O P
}!! 
}"" 	
public$$ 
override$$ 
ActionResult$$ $
DoAction$$% -
($$- .
)$$. /
{%% 	
if&& 
(&& 
MeshSelection&& 
.&& 
selectedObjectCount&& 1
<&&2 3
$num&&4 5
)&&5 6
return'' 
ActionResult'' #
.''# $
NoSelection''$ /
;''/ 0
Object)) 
[)) 
])) 
objects)) 
=)) 
new)) "
Object))# )
[))) *
MeshSelection))* 7
.))7 8
selectedObjectCount))8 K
*))L M
$num))N O
]))O P
;))P Q
for++ 
(++ 
int++ 
i++ 
=++ 
$num++ 
,++ 
c++ 
=++ 
MeshSelection++  -
.++- .
selectedObjectCount++. A
;++A B
i++C D
<++E F
c++G H
;++H I
i++J K
++++K M
)++M N
{,, 
objects-- 
[-- 
i-- 
]-- 
=-- 
MeshSelection-- *
.--* +
topInternal--+ 6
[--6 7
i--7 8
]--8 9
;--9 :
objects.. 
[.. 
i.. 
+.. 
c.. 
].. 
=..  
MeshSelection..! .
.... /
topInternal../ :
[..: ;
i..; <
]..< =
...= >
	transform..> G
;..G H
}// 
UndoUtility11 
.11 &
RegisterCompleteObjectUndo11 2
(112 3
objects113 :
,11: ;
$str11< G
)11G H
;11H I
foreach33 
(33 
var33 
mesh33 
in33  
MeshSelection33! .
.33. /
topInternal33/ :
)33: ;
{44 
TransformUtility55  
.55  !
UnparentChildren55! 1
(551 2
mesh552 6
.556 7
	transform557 @
)55@ A
;55A B
mesh66 
.66 
CenterPivot66  
(66  !
mesh66! %
.66% &#
selectedIndexesInternal66& =
)66= >
;66> ?
mesh77 
.77 
Optimize77 
(77 
)77 
;77  
TransformUtility88  
.88  !
ReparentChildren88! 1
(881 2
mesh882 6
.886 7
	transform887 @
)88@ A
;88A B
}99 
ProBuilderEditor;; 
.;; 
Refresh;; $
(;;$ %
);;% &
;;;& '
return== 
new== 
ActionResult== #
(==# $
ActionResult==$ 0
.==0 1
Status==1 7
.==7 8
Success==8 ?
,==? @
$str==A L
)==L M
;==M N
}>> 	
}?? 
}@@ ∆/
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\PositionRotateTool.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
class 	
PositionRotateTool
 
: 
PositionTool +
{ 

Quaternion 

m_Rotation 
; 
	protected

 
override

 
void

 
DoTool

  &
(

& '
Vector3

' .
handlePosition

/ =
,

= >

Quaternion

? I
handleRotation

J X
)

X Y
{ 	
base 
. 
DoTool 
( 
handlePosition &
,& '
handleRotation( 6
)6 7
;7 8
if 
( 
showHandleInfo 
&& !
	isEditing" +
)+ ,
{ 
var 
euler 
= 

m_Rotation &
.& '
eulerAngles' 2
;2 3
DrawDeltaInfo 
( 
string $
.$ %
Format% +
(+ ,
$str, ^
,^ _
euler 
. 
x 
, 
euler 
. 
y 
, 
euler 
. 
z 
) 
) 
; 
} 
	EditorGUI 
. 
BeginChangeCheck &
(& '
)' (
;( )
if 
( 
! 
	isEditing 
) 

m_Rotation 
= 

Quaternion '
.' (
identity( 0
;0 1
var 
hm 
= 
Handles 
. 
matrix #
;# $
Handles 
. 
matrix 
= 
	Matrix4x4 &
.& '
TRS' *
(* +
handlePosition+ 9
,9 :
handleRotation; I
,I J
Vector3K R
.R S
oneS V
)V W
;W X

m_Rotation 
= 
Handles  
.  !
RotationHandle! /
(/ 0

m_Rotation0 :
,: ;
Vector3< C
.C D
zeroD H
)H I
;I J
Handles   
.   
matrix   
=   
hm   
;    
if"" 
("" 
	EditorGUI"" 
."" 
EndChangeCheck"" (
(""( )
)"") *
)""* +
{## 
if$$ 
($$ 
!$$ 
	isEditing$$ 
)$$ 
	BeginEdit%% 
(%% 
$str%% 0
)%%0 1
;%%1 2
ApplyRotation'' 
('' 

m_Rotation'' (
)''( )
;'') *
}(( 
})) 	
void++ 
ApplyRotation++ 
(++ 

Quaternion++ %
rotation++& .
)++. /
{,, 	
foreach-- 
(-- 
var-- 
key-- 
in-- 
elementSelection--  0
)--0 1
{.. 
if// 
(// 
!// 
(// 
key// 
is// 
MeshAndPositions// -
)//- .
)//. /
continue00 
;00 
var22 
kvp22 
=22 
(22 
MeshAndPositions22 +
)22+ ,
key22, /
;22/ 0
var33 
mesh33 
=33 
kvp33 
.33 
mesh33 #
;33# $
var44 
worldToLocal44  
=44! "
mesh44# '
.44' (
	transform44( 1
.441 2
worldToLocalMatrix442 D
;44D E
var55 
origins55 
=55 
kvp55 !
.55! "
	positions55" +
;55+ ,
var66 
	positions66 
=66 
mesh66  $
.66$ %
positionsInternal66% 6
;666 7
foreach88 
(88 
var88 
group88 "
in88# %
kvp88& )
.88) *
elementGroups88* 7
)887 8
{99 
var:: 
postApplyMatrix:: '
=::( )
GetPostApplyMatrix::* <
(::< =
group::= B
)::B C
;::C D
var;; 
preApplyMatrix;; &
=;;' (
postApplyMatrix;;) 8
.;;8 9
inverse;;9 @
;;;@ A
foreach== 
(== 
var==  
index==! &
in==' )
group==* /
.==/ 0
indices==0 7
)==7 8
{>> 
	positions?? !
[??! "
index??" '
]??' (
=??) *
worldToLocal??+ 7
.??7 8
MultiplyPoint3x4??8 H
(??H I
postApplyMatrix@@  /
.@@/ 0
MultiplyPoint3x4@@0 @
(@@@ A
rotationAA$ ,
*AA- .
preApplyMatrixAA/ =
.AA= >
MultiplyPoint3x4AA> N
(AAN O
originsAAO V
[AAV W
indexAAW \
]AA\ ]
)AA] ^
)AA^ _
)AA_ `
;AA` a
}BB 
}CC 
meshEE 
.EE 
meshEE 
.EE 
verticesEE "
=EE# $
	positionsEE% .
;EE. /
meshFF 
.FF 
	RefreshUVFF 
(FF 
MeshSelectionFF ,
.FF, -#
selectedFacesInEditZoneFF- D
[FFD E
meshFFE I
]FFI J
)FFJ K
;FFK L
meshGG 
.GG 
RefreshGG 
(GG 
RefreshMaskGG (
.GG( )
NormalsGG) 0
)GG0 1
;GG1 2
}HH 
ProBuilderEditorJJ 
.JJ 
RefreshJJ $
(JJ$ %
falseJJ% *
)JJ* +
;JJ+ ,
}KK 	
}LL 
}MM ‚
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\SmartConnect.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{		 
sealed

 

class

 
SmartConnect

 
:

 

MenuAction

  *
{ 
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
GeometryG O
;O P
}Q R
}S T
public 
override 
	Texture2D !
icon" &
{' (
get) ,
{- .
return/ 5
null6 :
;: ;
}< =
}> ?
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
_tooltip> F
;F G
}H I
}J K
static 
readonly 
TooltipContent &
_tooltip' /
=0 1
new2 5
TooltipContent6 D
( 
$str 
,  
$str 
, 
keyCommandAlt 
, 
$char "
) 
; 
public 
override 

SelectMode "
validSelectModes# 3
{ 	
get 
{ 
return 

SelectMode #
.# $
Vertex$ *
|+ ,

SelectMode- 7
.7 8
Edge8 <
|= >

SelectMode? I
.I J
FaceJ N
;N O
}P Q
} 	
public 
override 
bool 
enabled $
{ 	
get 
{ 
return   
base   
.   
enabled   #
&&  $ &
(  ' (
MeshSelection  ( 5
.  5 6
selectedVertexCount  6 I
>  J K
$num  L M
||!!( *
MeshSelection!!+ 8
.!!8 9
selectedEdgeCount!!9 J
>!!K L
$num!!M N
||""( *
MeshSelection""+ 8
.""8 9
selectedFaceCount""9 J
>""K L
$num""M N
)""N O
;""O P
}## 
}$$ 	
public&& 
override&& 
bool&& 
hidden&& #
{'' 	
get(( 
{(( 
return(( 
true(( 
;(( 
}((  
})) 	
public++ 
override++ 
ActionResult++ $
DoAction++% -
(++- .
)++. /
{,, 	
switch-- 
(-- 
ProBuilderEditor-- $
.--$ %

selectMode--% /
)--/ 0
{.. 
case// 

SelectMode// 
.//  
Vertex//  &
://& '
return00 
EditorToolbarLoader00 .
.00. /
GetInstance00/ :
<00: ;
ConnectVertices00; J
>00J K
(00K L
)00L M
.00M N
DoAction00N V
(00V W
)00W X
;00X Y
default22 
:22 
return33 
EditorToolbarLoader33 .
.33. /
GetInstance33/ :
<33: ;
ConnectEdges33; G
>33G H
(33H I
)33I J
.33J K
DoAction33K S
(33S T
)33T U
;33U V
}44 
}55 	
}66 
}77 ⁄
¶D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Editors\OpenShapeEditorMenuItem.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed		 

class		 #
OpenShapeEditorMenuItem		 (
:		) *

MenuAction		+ 5
{

 
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
ToolG K
;K L
}M N
}O P
public 
override 
	Texture2D !
icon" &
{' (
get) ,
{- .
return/ 5
null6 :
;: ;
}< =
}> ?
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
	s_Tooltip> G
;G H
}I J
}K L
public 
override 
string 
	menuTitle (
{) *
get+ .
{/ 0
return1 7
$str8 C
;C D
}E F
}G H
public 
override 
int 
toolbarPriority +
{, -
get. 1
{2 3
return4 :
$num; <
;< =
}> ?
}@ A
	protected 
override 
bool 
hasFileMenuEntry  0
{1 2
get3 6
{7 8
return9 ?
true@ D
;D E
}F G
}H I
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str  
,  !
$str	 ã
,
ã å
keyCommandSuper 
,  
keyCommandShift! 0
,0 1
$char2 5
) 
; 
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
true 
; 
}  
} 	
public 
override 
ActionResult $
DoAction% -
(- .
). /
{ 	
ShapeEditor   
.    
MenuOpenShapeCreator   ,
(  , -
)  - .
;  . /
return!! 
new!! 
ActionResult!! #
(!!# $
ActionResult!!$ 0
.!!0 1
Status!!1 7
.!!7 8
Success!!8 ?
,!!? @
$str!!A T
)!!T U
;!!U V
}"" 	
}## 
}$$ ˆ
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\pb_ObjectArray.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
[ 
System 
. 
Obsolete 
( 
$str		 ñ
)
ñ ó
]
ó ò
[ 
System 
. 
Serializable 
] 
sealed 

class 
pb_ObjectArray 
:  !
ScriptableObject" 2
,2 3
IHasDefault4 ?
{ 
[ 	
SerializeField	 
] 
public 
Object  &
[& '
]' (
array) .
;. /
public 
T 
[ 
] 
GetArray 
< 
T 
> 
( 
)  
{ 	
T 
[ 
] 
arr 
= 
new 
T 
[ 
array !
.! "
Length" (
]( )
;) *
for 
( 
int 
i 
= 
$num 
; 
i 
< 
array  %
.% &
Length& ,
;, -
i. /
++/ 1
)1 2
{ 
if   
(   
array   
[   
i   
]   
is   
ProceduralMaterial    2
)  2 3
{!! 
arr"" 
["" 
i"" 
]"" 
="" 
("" 
T"" 
)""  
System""  &
.""& '
Convert""' .
."". /

ChangeType""/ 9
(""9 :
array"": ?
[""? @
i""@ A
]""A B
,""B C
typeof""D J
(""J K
ProceduralMaterial""K ]
)""] ^
)""^ _
;""_ `
}## 
else$$ 
{%% 
if&& 
(&& 
array&& 
[&& 
i&& 
]&&  
is&&! #
T&&$ %
)&&% &
{'' 
arr(( 
[(( 
i(( 
](( 
=((  
(((! "
T((" #
)((# $
System(($ *
.((* +
Convert((+ 2
.((2 3

ChangeType((3 =
(((= >
array((> C
[((C D
i((D E
]((E F
,((F G
typeof((H N
(((N O
T((O P
)((P Q
)((Q R
;((R S
})) 
else** 
{++ 
arr,, 
[,, 
i,, 
],, 
=,,  
default,,! (
(,,( )
T,,) *
),,* +
;,,+ ,
}-- 
}.. 
}// 
return11 
(11 
T11 
[11 
]11 
)11 
arr11 
;11 
}22 	
public44 
void44 
SetDefaultValues44 $
(44$ %
)44% &
{55 	
array66 
=66 
new66 
Material66  
[66  !
$num66! #
]66# $
{77 
null88 
,88 
null99 
,99 
null:: 
,:: 
null;; 
,;; 
null<< 
,<< 
null== 
,== 
null>> 
,>> 
null?? 
,?? 
null@@ 
,@@ 
nullAA 
}BB 
;BB 
}CC 	
}DD 
}EE ˜)
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Object\SetTrigger.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 

SetTrigger 
: 

MenuAction (
{		 
public

 
override

 
ToolbarGroup

 $
group

% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Entity& ,
;, -
}. /
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
null 
; 
}  
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
_tooltip !
;! "
}# $
} 	
static 
readonly 
TooltipContent &
_tooltip' /
=0 1
new2 5
TooltipContent6 D
( 
$str 
, 
$str	 û
) 
; 
public 
override 
bool 
enabled $
{   	
get!! 
{!! 
return!! 
base!! 
.!! 
enabled!! %
&&!!& (
MeshSelection!!) 6
.!!6 7
selectedObjectCount!!7 J
>!!K L
$num!!M N
;!!N O
}!!P Q
}"" 	
public$$ 
override$$ 
ActionResult$$ $
DoAction$$% -
($$- .
)$$. /
{%% 	
foreach&& 
(&& 
ProBuilderMesh&& #
pb&&$ &
in&&' )
MeshSelection&&* 7
.&&7 8
topInternal&&8 C
)&&C D
{'' 
var(( 
existing(( 
=(( 
pb(( !
.((! "
GetComponents((" /
<((/ 0
EntityBehaviour((0 ?
>((? @
(((@ A
)((A B
;((B C
for,, 
(,, 
int,, 
i,, 
=,, 
$num,, 
,,, 
c,,  !
=,," #
existing,,$ ,
.,,, -
Length,,- 3
;,,3 4
i,,5 6
<,,7 8
c,,9 :
;,,: ;
i,,< =
++,,= ?
),,? @
Undo-- 
.-- "
DestroyObjectImmediate-- /
(--/ 0
existing--0 8
[--8 9
i--9 :
]--: ;
)--; <
;--< =
var// 
entity// 
=// 
pb// 
.//  
GetComponent//  ,
<//, -
Entity//- 3
>//3 4
(//4 5
)//5 6
;//6 7
if11 
(11 
entity11 
!=11 
null11 "
)11" #
Undo22 
.22 "
DestroyObjectImmediate22 /
(22/ 0
entity220 6
)226 7
;227 8
if44 
(44 
!44 
pb44 
.44 
GetComponent44 $
<44$ %
Collider44% -
>44- .
(44. /
)44/ 0
)440 1
Undo55 
.55 
AddComponent55 %
<55% &
MeshCollider55& 2
>552 3
(553 4
pb554 6
.556 7

gameObject557 A
)55A B
;55B C
if77 
(77 
!77 
pb77 
.77 
GetComponent77 $
<77$ %
Renderer77% -
>77- .
(77. /
)77/ 0
)770 1
Undo88 
.88 
AddComponent88 %
<88% &
MeshRenderer88& 2
>882 3
(883 4
pb884 6
.886 7

gameObject887 A
)88A B
;88B C
UndoUtility:: 
.:: &
RegisterCompleteObjectUndo:: 6
(::6 7
pb::7 9
,::9 :
$str::; H
)::H I
;::I J
Undo<< 
.<< 
AddComponent<< !
<<<! "
TriggerBehaviour<<" 2
><<2 3
(<<3 4
pb<<4 6
.<<6 7

gameObject<<7 A
)<<A B
.<<B C

Initialize<<C M
(<<M N
)<<N O
;<<O P
}== 
int?? 
selectionCount?? 
=??  
MeshSelection??! .
.??. /
selectedObjectCount??/ B
;??B C
ifAA 
(AA 
selectionCountAA 
<AA  
$numAA! "
)AA" #
returnBB 
newBB 
ActionResultBB '
(BB' (
ActionResultBB( 4
.BB4 5
StatusBB5 ;
.BB; <
NoChangeBB< D
,BBD E
$strBBF h
)BBh i
;BBi j
returnDD 
newDD 
ActionResultDD #
(DD# $
ActionResultDD$ 0
.DD0 1
StatusDD1 7
.DD7 8
SuccessDD8 ?
,DD? @
$strDDA T
+DDU V
selectionCountDDW e
+DDf g
$strDDh r
)DDr s
;DDs t
}EE 	
}FF 
}GG ˝7
†D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\CollapseVertices.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
CollapseVertices !
:" #

MenuAction$ .
{ 
Pref 
< 
bool 
> 
m_CollapseToFirst $
=% &
new' *
Pref+ /
</ 0
bool0 4
>4 5
(5 6
$str6 X
,X Y
falseZ _
)_ `
;` a
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Geometry& .
;. /
}0 1
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- D
,D E
IconSkinF N
.N O
ProO R
)R S
;S T
}U V
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static   
readonly   
TooltipContent   &
	s_Tooltip  ' 0
=  1 2
new  3 6
TooltipContent  7 E
(!! 
$str"" #
,""# $
$str## t
,##t u
keyCommandAlt$$ 
,$$ 
$char$$ "
)%% 
;%% 
public'' 
override'' 

SelectMode'' "
validSelectModes''# 3
{(( 	
get)) 
{)) 
return)) 

SelectMode)) #
.))# $
Vertex))$ *
;))* +
})), -
}** 	
public,, 
override,, 
bool,, 
enabled,, $
{-- 	
get.. 
{.. 
return.. 
base.. 
... 
enabled.. %
&&..& (
MeshSelection..) 6
...6 7.
"selectedSharedVertexCountObjectMax..7 Y
>..Z [
$num..\ ]
;..] ^
}.._ `
}// 	
	protected11 
override11 
MenuActionState11 *
optionsMenuState11+ ;
{22 	
get33 
{33 
return33 
MenuActionState33 (
.33( )
VisibleAndEnabled33) :
;33: ;
}33< =
}44 	
	protected66 
override66 
void66 
OnSettingsGUI66  -
(66- .
)66. /
{77 	
	GUILayout88 
.88 
Label88 
(88 
$str88 8
,888 9
EditorStyles88: F
.88F G
	boldLabel88G P
)88P Q
;88Q R
EditorGUILayout:: 
.:: 
HelpBox:: #
(::# $
$str	::$ †
,
::† °
MessageType
::¢ ≠
.
::≠ Æ
Info
::Æ ≤
)
::≤ ≥
;
::≥ ¥
	EditorGUI<< 
.<< 
BeginChangeCheck<< &
(<<& '
)<<' (
;<<( )
m_CollapseToFirst>> 
.>> 
value>> #
=>>$ %
EditorGUILayout>>& 5
.>>5 6
Toggle>>6 <
(>>< =
$str>>= P
,>>P Q
m_CollapseToFirst>>R c
)>>c d
;>>d e
if@@ 
(@@ 
	EditorGUI@@ 
.@@ 
EndChangeCheck@@ (
(@@( )
)@@) *
)@@* +
ProBuilderSettingsAA "
.AA" #
SaveAA# '
(AA' (
)AA( )
;AA) *
	GUILayoutCC 
.CC 
FlexibleSpaceCC #
(CC# $
)CC$ %
;CC% &
ifEE 
(EE 
	GUILayoutEE 
.EE 
ButtonEE  
(EE  !
$strEE! 4
)EE4 5
)EE5 6
DoActionFF 
(FF 
)FF 
;FF 
}GG 	
publicII 
overrideII 
ActionResultII $
DoActionII% -
(II- .
)II. /
{JJ 	
ifKK 
(KK 
MeshSelectionKK 
.KK 
selectedObjectCountKK 1
<KK2 3
$numKK4 5
)KK5 6
returnLL 
ActionResultLL #
.LL# $
NoSelectionLL$ /
;LL/ 0
boolNN 
successNN 
=NN 
falseNN  
;NN  !
boolPP 
collapseToFirstPP  
=PP! "
m_CollapseToFirstPP# 4
;PP4 5
UndoUtilityRR 
.RR 
RecordSelectionRR '
(RR' (
$strRR( ;
)RR; <
;RR< =
foreachTT 
(TT 
varTT 
meshTT 
inTT  
MeshSelectionTT! .
.TT. /
topInternalTT/ :
)TT: ;
{UU 
ifVV 
(VV 
meshVV 
.VV #
selectedIndexesInternalVV 0
.VV0 1
LengthVV1 7
>VV8 9
$numVV: ;
)VV; <
{WW 
intXX 
newIndexXX  
=XX! "
meshXX# '
.XX' (
MergeVerticesXX( 5
(XX5 6
meshXX6 :
.XX: ;#
selectedIndexesInternalXX; R
,XXR S
collapseToFirstXXT c
)XXc d
;XXd e
successZZ 
=ZZ 
newIndexZZ &
>ZZ' (
-ZZ) *
$numZZ* +
;ZZ+ ,
if\\ 
(\\ 
success\\ 
)\\  
mesh]] 
.]] 
SetSelectedVertices]] 0
(]]0 1
new]]1 4
int]]5 8
[]]8 9
]]]9 :
{]]; <
newIndex]]= E
}]]F G
)]]G H
;]]H I
mesh__ 
.__ 
ToMesh__ 
(__  
)__  !
;__! "
mesh`` 
.`` 
Refresh``  
(``  !
)``! "
;``" #
meshaa 
.aa 
Optimizeaa !
(aa! "
)aa" #
;aa# $
}bb 
}cc 
ProBuilderEditoree 
.ee 
Refreshee $
(ee$ %
)ee% &
;ee& '
ifgg 
(gg 
successgg 
)gg 
returnhh 
newhh 
ActionResulthh '
(hh' (
ActionResulthh( 4
.hh4 5
Statushh5 ;
.hh; <
Successhh< C
,hhC D
$strhhE X
)hhX Y
;hhY Z
returnjj 
newjj 
ActionResultjj #
(jj# $
ActionResultjj$ 0
.jj0 1
Statusjj1 7
.jj7 8
Failurejj8 ?
,jj? @
$strjjA j
)jjj k
;jjk l
}kk 	
}ll 
}mm ¨
©D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Interaction\ToggleHandlePivotPoint.cs€
üD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Object\FlipObjectNormals.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed		 

class		 
FlipObjectNormals		 #
:		$ %

MenuAction		& 0
{

 
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Object& ,
;, -
}. /
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- I
,I J
IconSkinK S
.S T
ProT W
)W X
;X Y
}Z [
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
public 
override 
string 
	menuTitle (
{ 	
get 
{ 
return 
$str '
;' (
}) *
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
(   
$str!! %
,!!% &
$str"" N
)## 
;## 
public%% 
override%% 
bool%% 
enabled%% $
{&& 	
get'' 
{'' 
return'' 
base'' 
.'' 
enabled'' %
&&''& (
MeshSelection'') 6
.''6 7
selectedObjectCount''7 J
>''K L
$num''M N
;''N O
}''P Q
}(( 	
public** 
override** 
ActionResult** $
DoAction**% -
(**- .
)**. /
{++ 	
if,, 
(,, 
MeshSelection,, 
.,, 
selectedObjectCount,, 1
<,,2 3
$num,,4 5
),,5 6
return-- 
ActionResult-- #
.--# $
NoSelection--$ /
;--/ 0
UndoUtility// 
.// 
RecordSelection// '
(//' (
$str//( =
)//= >
;//> ?
foreach11 
(11 
ProBuilderMesh11 #
pb11$ &
in11' )
MeshSelection11* 7
.117 8
topInternal118 C
)11C D
{22 
foreach33 
(33 
var33 
face33 !
in33" $
pb33% '
.33' (
facesInternal33( 5
)335 6
face44 
.44 
Reverse44  
(44  !
)44! "
;44" #
pb55 
.55 
ToMesh55 
(55 
)55 
;55 
pb66 
.66 
Refresh66 
(66 
)66 
;66 
pb77 
.77 
Optimize77 
(77 
)77 
;77 
}88 
return:: 
new:: 
ActionResult:: #
(::# $
ActionResult::$ 0
.::0 1
Status::1 7
.::7 8
Success::8 ?
,::? @
$str::A V
)::V W
;::W X
};; 	
}<< 
}== ≥
ìD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\LicenseEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
sealed 

class 
LicenseEditor 
:  
EditorWindow! -
{ 
const		 
string		 
k_LicenseTextPath		 &
=		' (
$str		) A
;		A B
const

 
int

 
k_MaxStringLength

 #
=

$ %
$num

& +
;

+ ,
	TextAsset 
m_LicenseText 
;  
string 
[ 
] 
m_LicenseContents "
;" #
Vector2 
m_Scroll 
; 
void 
OnEnable 
( 
) 
{ 	
m_LicenseText 
= 
FileUtility '
.' (
LoadInternalAsset( 9
<9 :
	TextAsset: C
>C D
(D E
k_LicenseTextPathE V
)V W
;W X
int 
	charCount 
= 
m_LicenseText )
.) *
text* .
.. /
Length/ 5
;5 6
int 
stringCount 
= 
	charCount '
/( )
k_MaxStringLength* ;
+< =
$num> ?
;? @
m_LicenseContents 
= 
new  #
string$ *
[* +
stringCount+ 6
]6 7
;7 8
int 
index 
= 
$num 
; 
for 
( 
int 
i 
= 
$num 
; 
i 
< 
stringCount  +
;+ ,
i- .
++. 0
)0 1
{ 
int 
length 
= 
Math !
.! "
Min" %
(% &
k_MaxStringLength& 7
,7 8
	charCount9 B
-C D
indexE J
)J K
;K L
m_LicenseContents !
[! "
i" #
]# $
=% &
m_LicenseText' 4
.4 5
text5 9
.9 :
	Substring: C
(C D
indexD I
,I J
lengthK Q
)Q R
;R S
index 
+= 
length 
;  
} 
} 	
void 
OnGUI 
( 
) 
{ 	
if   
(   
m_LicenseContents   !
==  " $
null  % )
)  ) *
return!! 
;!! 
m_Scroll## 
=## 
EditorGUILayout## &
.##& '
BeginScrollView##' 6
(##6 7
m_Scroll##7 ?
)##? @
;##@ A
for%% 
(%% 
int%% 
i%% 
=%% 
$num%% 
,%% 
c%% 
=%% 
m_LicenseContents%%  1
.%%1 2
Length%%2 8
;%%8 9
i%%: ;
<%%< =
c%%> ?
;%%? @
i%%A B
++%%B D
)%%D E
	GUILayout&& 
.&& 
Label&& 
(&&  
m_LicenseContents&&  1
[&&1 2
i&&2 3
]&&3 4
,&&4 5
EditorStyles&&6 B
.&&B C
wordWrappedLabel&&C S
)&&S T
;&&T U
EditorGUILayout(( 
.(( 
EndScrollView(( )
((() *
)((* +
;((+ ,
})) 	
}** 
}++ £
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Editors\OpenUVEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed		 

class		 
OpenUVEditor		 
:		 

MenuAction		  *
{

 
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
ToolG K
;K L
}M N
}O P
public 
override 
	Texture2D !
icon" &
{' (
get) ,
{- .
return/ 5
IconUtility6 A
.A B
GetIconB I
(I J
$strJ b
,b c
IconSkind l
.l m
Prom p
)p q
;q r
}s t
}u v
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
	s_Tooltip> G
;G H
}I J
}K L
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str 
, 
$str {
) 
; 
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
ProBuilderEditor )
.) *
instance* 2
!=3 5
null6 :
;: ;
}< =
} 	
public 
override 
ActionResult $
DoAction% -
(- .
). /
{ 	
UVEditor 
. 
MenuOpenUVEditor %
(% &
)& '
;' (
return 
new 
ActionResult #
(# $
ActionResult$ 0
.0 1
Status1 7
.7 8
Success8 ?
,? @
$strA Q
)Q R
;R S
} 	
} 
}   ∆m
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Object\MirrorObjects.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
MirrorObjects 
:  

MenuAction! +
{		 
Pref

 
<

 
MirrorSettings

 
>

 
m_MirrorAxes

 )
=

* +
new

, /
Pref

0 4
<

4 5
MirrorSettings

5 C
>

C D
(

D E
$str

E _
,

_ `
MirrorSettings

a o
.

o p
X

p q
)

q r
;

r s
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Object& ,
;, -
}. /
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- D
,D E
IconSkinF N
.N O
ProO R
)R S
;S T
}U V
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
[ 	
System	 
. 
Flags 
] 
enum 
MirrorSettings 
{ 	
X 
= 
$num 
, 
Y 
= 
$num 
, 
Z   
=   
$num   
,   
	Duplicate!! 
=!! 
$num!! 
}"" 	
static$$ 
readonly$$ 
TooltipContent$$ &
	s_Tooltip$$' 0
=$$1 2
new$$3 6
TooltipContent$$7 E
(%% 
$str&&  
,&&  !
$str'' [
)(( 
;(( 
public** 
override** 
bool** 
enabled** $
{++ 	
get,, 
{,, 
return,, 
base,, 
.,, 
enabled,, %
&&,,& (
MeshSelection,,) 6
.,,6 7
selectedObjectCount,,7 J
>,,K L
$num,,M N
;,,N O
},,P Q
}-- 	
	protected// 
override// 
MenuActionState// *
optionsMenuState//+ ;
{00 	
get11 
{11 
return11 
MenuActionState11 (
.11( )
VisibleAndEnabled11) :
;11: ;
}11< =
}22 	
	protected44 
override44 
void44 
OnSettingsGUI44  -
(44- .
)44. /
{55 	
	GUILayout66 
.66 
Label66 
(66 
$str66 -
,66- .
EditorStyles66/ ;
.66; <
	boldLabel66< E
)66E F
;66F G
EditorGUILayout88 
.88 
HelpBox88 #
(88# $
$str	88$ ‘
,
88‘ ’
MessageType
88÷ ·
.
88· ‚
Info
88‚ Ê
)
88Ê Á
;
88Á Ë
MirrorSettings:: 
scale::  
=::! "
m_MirrorAxes::# /
;::/ 0
bool<< 
x<< 
=<< 
(<< 
scale<< 
&<< 
MirrorSettings<< ,
.<<, -
X<<- .
)<<. /
!=<<0 2
$num<<3 4
?<<5 6
true<<7 ;
:<<< =
false<<> C
;<<C D
bool== 
y== 
=== 
(== 
scale== 
&== 
MirrorSettings== ,
.==, -
Y==- .
)==. /
!===0 2
$num==3 4
?==5 6
true==7 ;
:==< =
false==> C
;==C D
bool>> 
z>> 
=>> 
(>> 
scale>> 
&>> 
MirrorSettings>> ,
.>>, -
Z>>- .
)>>. /
!=>>0 2
$num>>3 4
?>>5 6
true>>7 ;
:>>< =
false>>> C
;>>C D
bool?? 
d?? 
=?? 
(?? 
scale?? 
&?? 
MirrorSettings?? ,
.??, -
	Duplicate??- 6
)??6 7
!=??8 :
$num??; <
???= >
true??? C
:??D E
false??F K
;??K L
	EditorGUIAA 
.AA 
BeginChangeCheckAA &
(AA& '
)AA' (
;AA( )
xCC 
=CC 
EditorGUILayoutCC 
.CC  
ToggleCC  &
(CC& '
$strCC' *
,CC* +
xCC, -
)CC- .
;CC. /
yDD 
=DD 
EditorGUILayoutDD 
.DD  
ToggleDD  &
(DD& '
$strDD' *
,DD* +
yDD, -
)DD- .
;DD. /
zEE 
=EE 
EditorGUILayoutEE 
.EE  
ToggleEE  &
(EE& '
$strEE' *
,EE* +
zEE, -
)EE- .
;EE. /
dFF 
=FF 
EditorGUILayoutFF 
.FF  
ToggleFF  &
(FF& '
$strFF' 2
,FF2 3
dFF4 5
)FF5 6
;FF6 7
ifHH 
(HH 
	EditorGUIHH 
.HH 
EndChangeCheckHH (
(HH( )
)HH) *
)HH* +
m_MirrorAxesII 
.II 
SetValueII %
(II% &
(II& '
MirrorSettingsII' 5
)II5 6
(JJ 
xJJ 
?JJ 
MirrorSettingsJJ '
.JJ' (
XJJ( )
:JJ* +
$numJJ, -
)JJ- .
|JJ/ 0
(KK 
yKK 
?KK 
MirrorSettingsKK '
.KK' (
YKK( )
:KK* +
$numKK, -
)KK- .
|KK/ 0
(LL 
zLL 
?LL 
MirrorSettingsLL '
.LL' (
ZLL( )
:LL* +
$numLL, -
)LL- .
|LL/ 0
(MM 
dMM 
?MM 
MirrorSettingsMM '
.MM' (
	DuplicateMM( 1
:MM2 3
$numMM4 5
)MM5 6
)MM6 7
;MM7 8
	GUILayoutOO 
.OO 
FlexibleSpaceOO #
(OO# $
)OO$ %
;OO% &
ifQQ 
(QQ 
	GUILayoutQQ 
.QQ 
ButtonQQ  
(QQ  !
$strQQ! )
)QQ) *
)QQ* +
EditorUtilityRR 
.RR 
ShowNotificationRR .
(RR. /
DoActionRR/ 7
(RR7 8
)RR8 9
.RR9 :
notificationRR: F
)RRF G
;RRG H
}SS 	
publicUU 
overrideUU 
ActionResultUU $
DoActionUU% -
(UU- .
)UU. /
{VV 	
Vector3WW 
scaleWW 
=WW 
newWW 
Vector3WW  '
(WW' (
(XX 
m_MirrorAxesXX !
&XX" #
MirrorSettingsXX$ 2
.XX2 3
XXX3 4
)XX4 5
>XX6 7
$numXX8 9
?XX: ;
-XX< =
$numXX= ?
:XX@ A
$numXXB D
,XXD E
(YY 
m_MirrorAxesYY !
&YY" #
MirrorSettingsYY$ 2
.YY2 3
YYY3 4
)YY4 5
>YY6 7
$numYY8 9
?YY: ;
-YY< =
$numYY= ?
:YY@ A
$numYYB D
,YYD E
(ZZ 
m_MirrorAxesZZ !
&ZZ" #
MirrorSettingsZZ$ 2
.ZZ2 3
ZZZ3 4
)ZZ4 5
>ZZ6 7
$numZZ8 9
?ZZ: ;
-ZZ< =
$numZZ= ?
:ZZ@ A
$numZZB D
)ZZD E
;ZZE F
bool\\ 
	duplicate\\ 
=\\ 
(\\ 
m_MirrorAxes\\ *
&\\+ ,
MirrorSettings\\- ;
.\\; <
	Duplicate\\< E
)\\E F
>\\G H
$num\\I J
;\\J K
List^^ 
<^^ 

GameObject^^ 
>^^ 
res^^  
=^^" #
new^^$ '
List^^( ,
<^^, -

GameObject^^- 7
>^^7 8
(^^8 9
)^^9 :
;^^: ;
foreach`` 
(`` 
ProBuilderMesh`` #
pb``$ &
in``' )
MeshSelection``* 7
.``7 8
topInternal``8 C
)``C D
resaa 
.aa 
Addaa 
(aa 
Mirroraa 
(aa 
pbaa !
,aa! "
scaleaa# (
,aa( )
	duplicateaa* 3
)aa3 4
.aa4 5

gameObjectaa5 ?
)aa? @
;aa@ A
MeshSelectioncc 
.cc 
SetSelectioncc &
(cc& '
rescc' *
)cc* +
;cc+ ,
ProBuilderEditoree 
.ee 
Refreshee $
(ee$ %
)ee% &
;ee& '
returngg 
resgg 
.gg 
Countgg 
>gg 
$numgg  
?gg! "
newhh 
ActionResulthh  
(hh  !
ActionResulthh! -
.hh- .
Statushh. 4
.hh4 5
Successhh5 <
,hh< =
stringhh> D
.hhD E
FormathhE K
(hhK L
$strhhL \
,hh\ ]
reshh^ a
.hha b
Counthhb g
,hhg h
reshhi l
.hhl m
Counthhm r
>hhs t
$numhhu v
?hhw x
$str	hhy Ç
:
hhÉ Ñ
$str
hhÖ ç
)
hhç é
)
hhé è
:
hhê ë
newii 
ActionResultii  
(ii  !
ActionResultii! -
.ii- .
Statusii. 4
.ii4 5
NoChangeii5 =
,ii= >
$strii? T
)iiT U
;iiU V
}jj 	
publicss 
staticss 
ProBuilderMeshss $
Mirrorss% +
(ss+ ,
ProBuilderMeshss, :
pbss; =
,ss= >
Vector3ss? F
scalessG L
,ssL M
boolssN R
	duplicatessS \
=ss] ^
truess_ c
)ssc d
{tt 	
ProBuilderMeshuu 
mirredObjectuu '
;uu' (
ifww 
(ww 
	duplicateww 
)ww 
{xx 
mirredObjectyy 
=yy 
Objectyy %
.yy% &
Instantiateyy& 1
(yy1 2
pbyy2 4
.yy4 5

gameObjectyy5 ?
,yy? @
pbyyA C
.yyC D
	transformyyD M
.yyM N
parentyyN T
,yyT U
falseyyV [
)yy[ \
.yy\ ]
GetComponentyy] i
<yyi j
ProBuilderMeshyyj x
>yyx y
(yyy z
)yyz {
;yy{ |
mirredObjectzz 
.zz 

MakeUniquezz '
(zz' (
)zz( )
;zz) *
mirredObject{{ 
.{{ 
	transform{{ &
.{{& '
parent{{' -
={{. /
pb{{0 2
.{{2 3
	transform{{3 <
.{{< =
parent{{= C
;{{C D
mirredObject|| 
.|| 
	transform|| &
.||& '
localRotation||' 4
=||5 6
pb||7 9
.||9 :
	transform||: C
.||C D
localRotation||D Q
;||Q R
Undo}} 
.}} %
RegisterCreatedObjectUndo}} .
(}}. /
mirredObject}}/ ;
.}}; <

gameObject}}< F
,}}F G
$str}}H W
)}}W X
;}}X Y
}~~ 
else 
{
ÄÄ 
UndoUtility
ÅÅ 
.
ÅÅ 
RecordObject
ÅÅ (
(
ÅÅ( )
pb
ÅÅ) +
,
ÅÅ+ ,
$str
ÅÅ- 5
)
ÅÅ5 6
;
ÅÅ6 7
mirredObject
ÇÇ 
=
ÇÇ 
pb
ÇÇ !
;
ÇÇ! "
}
ÉÉ 
Vector3
ÖÖ 
lScale
ÖÖ 
=
ÖÖ 
mirredObject
ÖÖ )
.
ÖÖ) *

gameObject
ÖÖ* 4
.
ÖÖ4 5
	transform
ÖÖ5 >
.
ÖÖ> ?

localScale
ÖÖ? I
;
ÖÖI J
mirredObject
ÜÜ 
.
ÜÜ 
	transform
ÜÜ "
.
ÜÜ" #

localScale
ÜÜ# -
=
ÜÜ. /
scale
ÜÜ0 5
;
ÜÜ5 6
if
ââ 
(
ââ 
(
ââ 
scale
ââ 
.
ââ 
x
ââ 
*
ââ 
scale
ââ  
.
ââ  !
y
ââ! "
*
ââ# $
scale
ââ% *
.
ââ* +
z
ââ+ ,
)
ââ, -
<
ââ. /
$num
ââ0 1
)
ââ1 2
{
ää 
foreach
ãã 
(
ãã 
var
ãã 
face
ãã !
in
ãã" $
mirredObject
ãã% 1
.
ãã1 2
facesInternal
ãã2 ?
)
ãã? @
face
åå 
.
åå 
Reverse
åå  
(
åå  !
)
åå! "
;
åå" #
}
çç 
mirredObject
èè 
.
èè "
FreezeScaleTransform
èè -
(
èè- .
)
èè. /
;
èè/ 0
mirredObject
êê 
.
êê 
	transform
êê "
.
êê" #

localScale
êê# -
=
êê. /
lScale
êê0 6
;
êê6 7
mirredObject
íí 
.
íí 
ToMesh
íí 
(
íí  
)
íí  !
;
íí! "
mirredObject
ìì 
.
ìì 
Refresh
ìì  
(
ìì  !
)
ìì! "
;
ìì" #
mirredObject
îî 
.
îî 
Optimize
îî !
(
îî! "
)
îî" #
;
îî# $
return
ññ 
mirredObject
ññ 
;
ññ  
}
óó 	
}
òò 
}ôô ∆4
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Export\ExportStlAscii.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
ExportStlAscii 
:  !

MenuAction" ,
{ 
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
ExportG M
;M N
}O P
}Q R
public 
override 
	Texture2D !
icon" &
{' (
get) ,
{- .
return/ 5
null6 :
;: ;
}< =
}> ?
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
_tooltip> F
;F G
}H I
}J K
static 
readonly 
TooltipContent &
_tooltip' /
=0 1
new2 5
TooltipContent6 D
( 
$str 
, 
$str ,
) 
; 
public 
override 
bool 
hidden #
{ 	
get 
{ 
return 
true 
; 
}  
} 	
public   
override   
bool   
enabled   $
{!! 	
get"" 
{"" 
return"" 
MeshSelection"" &
.""& '
selectedObjectCount""' :
>""; <
$num""= >
;""> ?
}""@ A
}## 	
public%% 
override%% 
ActionResult%% $
DoAction%%% -
(%%- .
)%%. /
{&& 	
var'' 
res'' 
=''  
ExportWithFileDialog'' *
(''* +
	Selection''+ 4
.''4 5
gameObjects''5 @
,''@ A
FileType''B J
.''J K
Ascii''K P
)''P Q
;''Q R
if)) 
()) 
string)) 
.)) 
IsNullOrEmpty)) $
())$ %
res))% (
)))( )
)))) *
return** 
new** 
ActionResult** '
(**' (
ActionResult**( 4
.**4 5
Status**5 ;
.**; <
Canceled**< D
,**D E
$str**F U
)**U V
;**V W
Export,, 
.,, 
PingExportedModel,, $
(,,$ %
res,,% (
),,( )
;,,) *
return.. 
new.. 
ActionResult.. #
(..# $
ActionResult..$ 0
...0 1
Status..1 7
...7 8
Success..8 ?
,..? @
$str..A M
)..M N
;..N O
}// 	
public11 
static11 
string11  
ExportWithFileDialog11 1
(111 2

GameObject112 <
[11< =
]11= >
gameObjects11? J
,11J K
FileType11L T
type11U Y
)11Y Z
{22 	

GameObject33 
first33 
=33 
gameObjects33 *
.33* +
FirstOrDefault33+ 9
(339 :
x33: ;
=>33< >
x33? @
.33@ A
GetComponent33A M
<33M N
ProBuilderMesh33N \
>33\ ]
(33] ^
)33^ _
!=33` b
null33c g
)33g h
;33h i
string55 
name55 
=55 
first55 
!=55  "
null55# '
?55( )
first55* /
.55/ 0
name550 4
:555 6
$str557 =
;55= >
string66 
path66 
=66 
UnityEditor66 %
.66% &
EditorUtility66& 3
.663 4
SaveFilePanel664 A
(66A B
$str66B T
,66T U
$str66V X
,66X Y
name66Z ^
,66^ _
$str66` e
)66e f
;66f g
var88 
res88 
=88 
false88 
;88 
var99 
currentCulture99 
=99  
Thread99! '
.99' (
CurrentThread99( 5
.995 6
CurrentCulture996 D
;99D E
try;; 
{<< 
Thread>> 
.>> 
CurrentThread>> $
.>>$ %
CurrentCulture>>% 3
=>>4 5
CultureInfo>>6 A
.>>A B
InvariantCulture>>B R
;>>R S
res?? 
=?? 
pb_Stl_Exporter?? %
.??% &
Export??& ,
(??, -
path??- 1
,??1 2
gameObjects??3 >
,??> ?
type??@ D
)??D E
;??E F
}@@ 
finallyAA 
{BB 
ThreadCC 
.CC 
CurrentThreadCC $
.CC$ %
CurrentCultureCC% 3
=CC4 5
currentCultureCC6 D
;CCD E
}DD 
ifGG 
(GG 
resGG 
)GG 
{HH 
stringII 
fullII 
=II 
pathII "
.II" #
ReplaceII# *
(II* +
$strII+ /
,II/ 0
$strII1 4
)II4 5
;II5 6
ifLL 
(LL 
fullLL 
.LL 
ContainsLL !
(LL! "
ApplicationLL" -
.LL- .
dataPathLL. 6
)LL6 7
)LL7 8
{MM 
stringNN 
relativeNN #
=NN$ %
fullNN& *
.NN* +
ReplaceNN+ 2
(NN2 3
ApplicationNN3 >
.NN> ?
dataPathNN? G
,NNG H
$strNNI Q
)NNQ R
;NNR S
ObjectOO 
oOO 
=OO 
AssetDatabaseOO ,
.OO, -
LoadAssetAtPathOO- <
(OO< =
relativeOO= E
,OOE F
typeofOOG M
(OOM N
ObjectOON T
)OOT U
)OOU V
;OOV W
ifPP 
(PP 
oPP 
!=PP 
nullPP !
)PP! "
EditorGUIUtilityQQ (
.QQ( )

PingObjectQQ) 3
(QQ3 4
oQQ4 5
)QQ5 6
;QQ6 7
AssetDatabaseRR !
.RR! "
RefreshRR" )
(RR) *
)RR* +
;RR+ ,
}SS 
returnTT 
pathTT 
;TT 
}UU 
returnWW 
nullWW 
;WW 
}XX 	
}YY 
}ZZ †

çD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\Version.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
{

 
static 

class 
Version 
{ 
internal 
static 
bool  
TryGetPackageVersion 1
(1 2
out2 5
SemVer6 <
version= D
)D E
{ 	
version 
= 
new 
SemVer  
(  !
)! "
;" #
var 
assembly 
= 
Assembly #
.# $ 
GetExecutingAssembly$ 8
(8 9
)9 :
;: ;
var 
info 
= 
PackageManager %
.% &
PackageInfo& 1
.1 2
FindForAssembly2 A
(A B
assemblyB J
)J K
;K L
return 
SemVer 
. 
TryGetVersionInfo +
(+ ,
info, 0
.0 1
version1 8
,8 9
out: =
version> E
)E F
;F G
}++ 	
},, 
}-- œë
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\ShapeEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
sealed 

class 
ShapeEditor 
: 
ConfigurableWindow 1
{ 
static 
class 
Styles 
{ 	
public 
static 
readonly "
GUIStyle# +
options, 3
=4 5
$str6 C
;C D
} 	
abstract 
class 
ShapeBuilder #
{ 	
public 
virtual 
string !
name" &
{ 
get 
{ 
return 
ObjectNames (
.( )
NicifyVariableName) ;
(; <
GetType< C
(C D
)D E
.E F
NameF J
)J K
;K L
}M N
} 
public 
abstract 
void  
OnGUI! &
(& '
)' (
;( )
public   
abstract   
ProBuilderMesh   *
Build  + 0
(  0 1
bool  1 5
	isPreview  6 ?
=  @ A
false  B G
)  G H
;  H I
public"" 
void"" 
ResetParameters"" '
(""' (
)""( )
{## 
var$$ 
members$$ 
=$$ 
GetType$$ %
($$% &
)$$& '
.$$' (
	GetFields$$( 1
($$1 2
BindingFlags$$2 >
.$$> ?
Static$$? E
|$$F G
BindingFlags$$H T
.$$T U
Public$$U [
|$$\ ]
BindingFlags$$^ j
.$$j k
	NonPublic$$k t
)$$t u
;$$u v
foreach&& 
(&& 
var&& 
fi&& 
in&&  "
members&&# *
)&&* +
{'' 
if(( 
((( 
fi(( 
.(( 
GetValue(( "
(((" #
this((# '
)((' (
is(() +
IUserSetting((, 8
setting((9 @
)((@ A
setting)) 
.))  
Reset))  %
())% &
)))& '
;))' (
}// 
}00 
}11 	
public33 
static33 
void33  
MenuOpenShapeCreator33 /
(33/ 0
)330 1
{44 	
	GetWindow55 
<55 
ShapeEditor55 !
>55! "
(55" #
$str55# /
)55/ 0
;550 1
}66 	
static88 
readonly88 
Vector388  
k_MinShapeDimensions88  4
=885 6
new887 :
Vector388; B
(88B C
$num88C H
,88H I
$num88J O
,88O P
$num88Q V
)88V W
;88W X
static99 
readonly99 
Vector399  
k_MaxShapeDimensions99  4
=995 6
new997 :
Vector399; B
(99B C
$num99C K
,99K L
$num99M U
,99U V
$num99W _
)99_ `
;99` a
Vector2:: 
m_Scroll:: 
=:: 
Vector2:: "
.::" #
zero::# '
;::' (
[;; 	
SettingsKey;;	 
(;; 
$str;; 1
);;1 2
];;2 3
static<< 
Pref<< 
<<< 
int<< 
><< 
s_CurrentIndex<< '
=<<( )
new<<* -
Pref<<. 2
<<<2 3
int<<3 6
><<6 7
(<<7 8
$str<<8 T
,<<T U
$num<<V W
,<<W X
SettingsScope<<Y f
.<<f g
User<<g k
)<<k l
;<<l m
[== 	
UserSetting==	 
(== 
$str== 
,== 
$str==  @
,==@ A
$str	==B â
)
==â ä
]
==ä ã
[>> 	
SettingsKey>>	 
(>> 
$str>> ;
)>>; <
]>>< =
static?? 
Pref?? 
<?? 
bool?? 
>?? )
s_CloseWindowAfterCreateShape?? 7
=??8 9
new??: =
Pref??> B
<??B C
bool??C G
>??G H
(??H I
$str??I o
,??o p
false??q v
)??v w
;??w x
[@@ 	
SerializeField@@	 
]@@ 

GameObjectAA 
m_PreviewObjectAA "
;AA" #
staticCC 
ShapeBuilderCC 
[CC 
]CC 
s_ShapeBuildersCC -
=CC. /
newCC0 3
ShapeBuilderCC4 @
[CC@ A
]CCA B
{DD 	
newEE 
CubeEE 
(EE 
)EE 
,EE 
newFF 
SpriteFF 
(FF 
)FF 
,FF 
newGG 
PrismGG 
(GG 
)GG 
,GG 
newHH 
StairHH 
(HH 
)HH 
,HH 
newII 
CylinderII 
(II 
)II 
,II 
newJJ 
DoorJJ 
(JJ 
)JJ 
,JJ 
newKK 
PlaneKK 
(KK 
)KK 
,KK 
newLL 
PipeLL 
(LL 
)LL 
,LL 
newMM 
ConeMM 
(MM 
)MM 
,MM 
newNN 
ArchNN 
(NN 
)NN 
,NN 
newOO 
SphereOO 
(OO 
)OO 
,OO 
newPP 
TorusPP 
(PP 
)PP 
}QQ 	
;QQ	 

stringSS 
[SS 
]SS 
m_ShapeTypesSS 
;SS 
voidUU 
OnEnableUU 
(UU 
)UU 
{VV 	
PrefabStageWW 
.WW 
prefabStageOpenedWW )
+=WW* ,
PrefabStageOpenedWW- >
;WW> ?
PrefabStageXX 
.XX 
prefabStageClosingXX *
+=XX+ -
PrefabStageClosingXX. @
;XX@ A
m_ShapeTypesYY 
=YY 
s_ShapeBuildersYY *
.YY* +
SelectYY+ 1
(YY1 2
xYY2 3
=>YY4 6
xYY7 8
.YY8 9
nameYY9 =
)YY= >
.YY> ?
ToArrayYY? F
(YYF G
)YYG H
;YYH I
EditorApplication\\ 
.\\ 
	delayCall\\ '
+=\\( *
(\\+ ,
)\\, -
=>\\. 0
SetPreviewMesh\\1 ?
(\\? @!
GetActiveShapeBuilder\\@ U
(\\U V
)\\V W
.\\W X
Build\\X ]
(\\] ^
)\\^ _
)\\_ `
;\\` a
EditorApplication]] 
.]]  
playModeStateChanged]] 2
+=]]3 5 
PlayModeStateChanged]]6 J
;]]J K
}^^ 	
void`` 
	OnDisable`` 
(`` 
)`` 
{aa 	
EditorApplicationbb 
.bb  
playModeStateChangedbb 2
-=bb3 5 
PlayModeStateChangedbb6 J
;bbJ K
PrefabStagecc 
.cc 
prefabStageOpenedcc )
-=cc* ,
PrefabStageOpenedcc- >
;cc> ?
PrefabStagedd 
.dd 
prefabStageClosingdd *
-=dd+ -
PrefabStageClosingdd. @
;dd@ A 
DestroyPreviewObjectee  
(ee  !
falseee! &
)ee& '
;ee' (
}ff 	
voidhh  
PlayModeStateChangedhh !
(hh! "
PlayModeStateChangehh" 5
statehh6 ;
)hh; <
{ii 	
ifjj 
(jj 
statejj 
==jj 
PlayModeStateChangejj +
.jj+ ,
EnteredEditModejj, ;
)jj; <
SetPreviewMeshkk 
(kk !
GetActiveShapeBuilderkk 4
(kk4 5
)kk5 6
.kk6 7
Buildkk7 <
(kk< =
)kk= >
)kk> ?
;kk? @
}ll 	
voidnn 
PrefabStageOpenednn 
(nn 
PrefabStagenn *
stagenn+ 0
)nn0 1
{oo 	
ifpp 
(pp 
m_PreviewObjectpp 
!=pp !
nullpp" &
)pp& '
EditorUtilityqq 
.qq 
MoveToActiveSceneqq /
(qq/ 0
m_PreviewObjectqq0 ?
)qq? @
;qq@ A
}rr 	
voidtt 
PrefabStageClosingtt 
(tt  
PrefabStagett  +
stagett, 1
)tt1 2
{uu 	
ifww 
(ww 
m_PreviewObjectww 
!=ww  "
nullww# '
)ww' (
{xx 
m_PreviewObjectyy 
.yy  
	transformyy  )
.yy) *
	SetParentyy* 3
(yy3 4
nullyy4 8
)yy8 9
;yy9 :
SceneManagerzz 
.zz !
MoveGameObjectToScenezz 2
(zz2 3
m_PreviewObjectzz3 B
,zzB C
SceneManagerzzD P
.zzP Q
GetActiveScenezzQ _
(zz_ `
)zz` a
)zza b
;zzb c
}{{ 
}|| 	
[~~ 	
MenuItem~~	 
(~~ 
$str~~ )
+~~* +
PreferenceKeys~~, :
.~~: ;
pluginTitle~~; F
+~~G H
$str~~I T
)~~T U
]~~U V
public 
static 
void 
MenuCreateCube )
() *
)* +
{
ÄÄ 	
ProBuilderMesh
ÅÅ 
mesh
ÅÅ 
=
ÅÅ  !
ShapeGenerator
ÅÅ" 0
.
ÅÅ0 1
GenerateCube
ÅÅ1 =
(
ÅÅ= >
EditorUtility
ÅÅ> K
.
ÅÅK L#
newShapePivotLocation
ÅÅL a
,
ÅÅa b
Vector3
ÅÅc j
.
ÅÅj k
one
ÅÅk n
)
ÅÅn o
;
ÅÅo p
UndoUtility
ÇÇ 
.
ÇÇ '
RegisterCreatedObjectUndo
ÇÇ 1
(
ÇÇ1 2
mesh
ÇÇ2 6
.
ÇÇ6 7

gameObject
ÇÇ7 A
,
ÇÇA B
$str
ÇÇC Q
)
ÇÇQ R
;
ÇÇR S
EditorUtility
ÉÉ 
.
ÉÉ 

InitObject
ÉÉ $
(
ÉÉ$ %
mesh
ÉÉ% )
)
ÉÉ) *
;
ÉÉ* +
}
ÑÑ 	
void
ÜÜ 
OnGUI
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 	
DoContextMenu
àà 
(
àà 
)
àà 
;
àà 
if
ää 
(
ää 
Event
ää 
.
ää 
current
ää 
.
ää 
type
ää "
==
ää# %
	EventType
ää& /
.
ää/ 0
KeyDown
ää0 7
&&
ää8 :
Event
ää; @
.
ää@ A
current
ääA H
.
ääH I
keyCode
ääI P
==
ääQ S
KeyCode
ääT [
.
ää[ \
Return
ää\ b
)
ääb c!
CreateSelectedShape
ãã #
(
ãã# $
true
ãã$ (
)
ãã( )
;
ãã) *
	GUILayout
çç 
.
çç 
Label
çç 
(
çç 
$str
çç ,
,
çç, -
EditorStyles
çç. :
.
çç: ;
	boldLabel
çç; D
)
ççD E
;
ççE F
	EditorGUI
èè 
.
èè 
BeginChangeCheck
èè &
(
èè& '
)
èè' (
;
èè( )
s_CurrentIndex
ëë 
.
ëë 
value
ëë  
=
ëë! "
EditorGUILayout
ëë# 2
.
ëë2 3
Popup
ëë3 8
(
ëë8 9
s_CurrentIndex
ëë9 G
,
ëëG H
m_ShapeTypes
ëëI U
)
ëëU V
;
ëëV W
	GUILayout
ìì 
.
ìì 
BeginHorizontal
ìì %
(
ìì% &
)
ìì& '
;
ìì' (
	GUILayout
îî 
.
îî 
Label
îî 
(
îî 
$str
îî ,
,
îî, -
EditorStyles
îî. :
.
îî: ;
	boldLabel
îî; D
)
îîD E
;
îîE F
	GUILayout
ïï 
.
ïï 
FlexibleSpace
ïï #
(
ïï# $
)
ïï$ %
;
ïï% &
if
ññ 
(
ññ 
	GUILayout
ññ 
.
ññ 
Button
ññ  
(
ññ  !

GUIContent
ññ! +
.
ññ+ ,
none
ññ, 0
,
ññ0 1
Styles
ññ2 8
.
ññ8 9
options
ññ9 @
)
ññ@ A
)
ññA B!
ShapeBuilderOptions
óó #
(
óó# $#
GetActiveShapeBuilder
óó$ 9
(
óó9 :
)
óó: ;
)
óó; <
;
óó< =
	GUILayout
òò 
.
òò 
EndHorizontal
òò #
(
òò# $
)
òò$ %
;
òò% &
m_Scroll
öö 
=
öö 
EditorGUILayout
öö &
.
öö& '
BeginScrollView
öö' 6
(
öö6 7
m_Scroll
öö7 ?
)
öö? @
;
öö@ A
var
úú 
shape
úú 
=
úú #
GetActiveShapeBuilder
úú -
(
úú- .
)
úú. /
;
úú/ 0
shape
ûû 
.
ûû 
OnGUI
ûû 
(
ûû 
)
ûû 
;
ûû 
EditorGUILayout
†† 
.
†† 
EndScrollView
†† )
(
††) *
)
††* +
;
††+ ,
if
¢¢ 
(
¢¢ 
	EditorGUI
¢¢ 
.
¢¢ 
EndChangeCheck
¢¢ (
(
¢¢( )
)
¢¢) *
)
¢¢* +
{
££  
ProBuilderSettings
§§ "
.
§§" #
Save
§§# '
(
§§' (
)
§§( )
;
§§) *
SetPreviewMesh
•• 
(
•• 
shape
•• $
.
••$ %
Build
••% *
(
••* +
)
••+ ,
)
••, -
;
••- .
}
¶¶ 
	GUILayout
®® 
.
®® 
FlexibleSpace
®® #
(
®®# $
)
®®$ %
;
®®% &
if
™™ 
(
™™ 
	GUILayout
™™ 
.
™™ 
Button
™™  
(
™™  !
$str
™™! (
)
™™( )
)
™™) *!
CreateSelectedShape
´´ #
(
´´# $
)
´´$ %
;
´´% &
}
¨¨ 	
void
ÆÆ !
CreateSelectedShape
ÆÆ  
(
ÆÆ  !
bool
ÆÆ! %
forceCloseWindow
ÆÆ& 6
=
ÆÆ7 8
false
ÆÆ9 >
)
ÆÆ> ?
{
ØØ 	
var
∞∞ 
res
∞∞ 
=
∞∞ 
CreateActiveShape
∞∞ '
(
∞∞' (
)
∞∞( )
;
∞∞) *#
ApplyPreviewTransform
±± !
(
±±! "
res
±±" %
)
±±% &
;
±±& '"
DestroyPreviewObject
≤≤  
(
≤≤  !
true
≤≤! %
)
≤≤% &
;
≤≤& '
if
¥¥ 
(
¥¥ 
forceCloseWindow
¥¥ 
||
¥¥  "+
s_CloseWindowAfterCreateShape
¥¥# @
)
¥¥@ A
Close
µµ 
(
µµ 
)
µµ 
;
µµ 
else
∂∂ ,
ResetPreviewAfterShapeCreation
∑∑ .
(
∑∑. /
res
∑∑/ 2
)
∑∑2 3
;
∑∑3 4
}
∏∏ 	
public
ææ 
static
ææ 
ProBuilderMesh
ææ $
CreateActiveShape
ææ% 6
(
ææ6 7
)
ææ7 8
{
øø 	
var
¿¿ 
res
¿¿ 
=
¿¿ 
s_ShapeBuilders
¿¿ %
[
¿¿% &
PMath
¿¿& +
.
¿¿+ ,
Clamp
¿¿, 1
(
¿¿1 2
s_CurrentIndex
¿¿2 @
,
¿¿@ A
$num
¿¿B C
,
¿¿C D
s_ShapeBuilders
¿¿E T
.
¿¿T U
Length
¿¿U [
-
¿¿\ ]
$num
¿¿^ _
)
¿¿_ `
]
¿¿` a
.
¿¿a b
Build
¿¿b g
(
¿¿g h
)
¿¿h i
;
¿¿i j
Undo
¡¡ 
.
¡¡ '
RegisterCreatedObjectUndo
¡¡ *
(
¡¡* +
res
¡¡+ .
.
¡¡. /

gameObject
¡¡/ 9
,
¡¡9 :
$str
¡¡; I
)
¡¡I J
;
¡¡J K
EditorUtility
¬¬ 
.
¬¬ 

InitObject
¬¬ $
(
¬¬$ %
res
¬¬% (
)
¬¬( )
;
¬¬) *
return
√√ 
res
√√ 
;
√√ 
}
ƒƒ 	
void
«« ,
ResetPreviewAfterShapeCreation
«« +
(
««+ ,
ProBuilderMesh
««, :"
lastInstantiatedMesh
««; O
)
««O P
{
»» 	
RebuildPreview
…… 
(
…… 
)
…… 
;
…… 
if
ÀÀ 
(
ÀÀ "
lastInstantiatedMesh
ÀÀ #
!=
ÀÀ$ &
null
ÀÀ' +
)
ÀÀ+ ,
{
ÃÃ 
var
ÕÕ 
src
ÕÕ 
=
ÕÕ "
lastInstantiatedMesh
ÕÕ .
.
ÕÕ. /
	transform
ÕÕ/ 8
;
ÕÕ8 9
var
ŒŒ 
dst
ŒŒ 
=
ŒŒ 
m_PreviewObject
ŒŒ )
.
ŒŒ) *
	transform
ŒŒ* 3
;
ŒŒ3 4
dst
œœ 
.
œœ 
position
œœ 
=
œœ 
src
œœ "
.
œœ" #
position
œœ# +
+
œœ, -
Vector3
œœ. 5
.
œœ5 6
right
œœ6 ;
;
œœ; <
dst
–– 
.
–– 
localRotation
–– !
=
––" #
src
––$ '
.
––' (
localRotation
––( 5
;
––5 6
dst
—— 
.
—— 

localScale
—— 
=
——  
src
——! $
.
——$ %

localScale
——% /
;
——/ 0
}
““ 
}
”” 	
void
’’ "
DestroyPreviewObject
’’ !
(
’’! "
bool
’’" &
	immediate
’’' 0
)
’’0 1
{
÷÷ 	
if
◊◊ 
(
◊◊ 
	immediate
◊◊ 
)
◊◊ *
DestroyPreviewObjectInternal
ÿÿ ,
(
ÿÿ, -
)
ÿÿ- .
;
ÿÿ. /
else
ŸŸ 
EditorApplication
⁄⁄ !
.
⁄⁄! "
	delayCall
⁄⁄" +
+=
⁄⁄, .*
DestroyPreviewObjectInternal
⁄⁄/ K
;
⁄⁄K L
}
€€ 	
void
›› !
ShapeBuilderOptions
››  
(
››  !
ShapeBuilder
››! -
builder
››. 5
)
››5 6
{
ﬁﬁ 	
var
ﬂﬂ 
menu
ﬂﬂ 
=
ﬂﬂ 
new
ﬂﬂ 
GenericMenu
ﬂﬂ &
(
ﬂﬂ& '
)
ﬂﬂ' (
;
ﬂﬂ( )
menu
‡‡ 
.
‡‡ 
AddItem
‡‡ 
(
‡‡ 
new
‡‡ 

GUIContent
‡‡ '
(
‡‡' (
$str
‡‡( /
,
‡‡/ 0
$str
‡‡1 W
)
‡‡W X
,
‡‡X Y
false
‡‡Z _
,
‡‡_ `
(
‡‡a b
)
‡‡b c
=>
‡‡d f
{
·· 
builder
‚‚ 
.
‚‚ 
ResetParameters
‚‚ '
(
‚‚' (
)
‚‚( )
;
‚‚) *
RebuildPreview
„„ 
(
„„ 
)
„„  
;
„„  !
}
‰‰ 
)
‰‰ 
;
‰‰ 
menu
ÂÂ 
.
ÂÂ 
ShowAsContext
ÂÂ 
(
ÂÂ 
)
ÂÂ  
;
ÂÂ  !
}
ÊÊ 	
static
ËË 
ShapeBuilder
ËË #
GetActiveShapeBuilder
ËË 1
(
ËË1 2
)
ËË2 3
{
ÈÈ 	
return
ÍÍ 
s_ShapeBuilders
ÍÍ "
[
ÍÍ" #
PMath
ÍÍ# (
.
ÍÍ( )
Clamp
ÍÍ) .
(
ÍÍ. /
s_CurrentIndex
ÍÍ/ =
,
ÍÍ= >
$num
ÍÍ? @
,
ÍÍ@ A
s_ShapeBuilders
ÍÍB Q
.
ÍÍQ R
Length
ÍÍR X
-
ÍÍY Z
$num
ÍÍ[ \
)
ÍÍ\ ]
]
ÍÍ] ^
;
ÍÍ^ _
}
ÎÎ 	
public
ÌÌ 
void
ÌÌ 
RebuildPreview
ÌÌ "
(
ÌÌ" #
)
ÌÌ# $
{
ÓÓ 	
SetPreviewMesh
ÔÔ 
(
ÔÔ #
GetActiveShapeBuilder
ÔÔ 0
(
ÔÔ0 1
)
ÔÔ1 2
.
ÔÔ2 3
Build
ÔÔ3 8
(
ÔÔ8 9
)
ÔÔ9 :
)
ÔÔ: ;
;
ÔÔ; <
}
 	
void
ÚÚ *
DestroyPreviewObjectInternal
ÚÚ )
(
ÚÚ) *
)
ÚÚ* +
{
ÛÛ 	
if
ÙÙ 
(
ÙÙ 
m_PreviewObject
ÙÙ 
!=
ÙÙ  "
null
ÙÙ# '
)
ÙÙ' (
{
ıı 
if
ˆˆ 
(
ˆˆ 
	Selection
ˆˆ 
.
ˆˆ 
Contains
ˆˆ &
(
ˆˆ& '
m_PreviewObject
ˆˆ' 6
.
ˆˆ6 7

gameObject
ˆˆ7 A
)
ˆˆA B
)
ˆˆB C
MeshSelection
˜˜ !
.
˜˜! "!
RemoveFromSelection
˜˜" 5
(
˜˜5 6
m_PreviewObject
˜˜6 E
.
˜˜E F

gameObject
˜˜F P
)
˜˜P Q
;
˜˜Q R
if
˘˘ 
(
˘˘ 
m_PreviewObject
˘˘ #
.
˘˘# $
GetComponent
˘˘$ 0
<
˘˘0 1

MeshFilter
˘˘1 ;
>
˘˘; <
(
˘˘< =
)
˘˘= >
.
˘˘> ?

sharedMesh
˘˘? I
!=
˘˘J L
null
˘˘M Q
)
˘˘Q R
DestroyImmediate
˙˙ $
(
˙˙$ %
m_PreviewObject
˙˙% 4
.
˙˙4 5
GetComponent
˙˙5 A
<
˙˙A B

MeshFilter
˙˙B L
>
˙˙L M
(
˙˙M N
)
˙˙N O
.
˙˙O P

sharedMesh
˙˙P Z
)
˙˙Z [
;
˙˙[ \
DestroyImmediate
¸¸  
(
¸¸  !
m_PreviewObject
¸¸! 0
)
¸¸0 1
;
¸¸1 2!
ActiveEditorTracker
ÇÇ #
.
ÇÇ# $#
RebuildAllIfNecessary
ÇÇ$ 9
(
ÇÇ9 :
)
ÇÇ: ;
;
ÇÇ; <
}
àà 
}
ââ 	
void
ãã 
SetPreviewMesh
ãã 
(
ãã 
ProBuilderMesh
ãã *
mesh
ãã+ /
)
ãã/ 0
{
åå 	#
ApplyPreviewTransform
çç !
(
çç! "
mesh
çç" &
)
çç& '
;
çç' (
Mesh
éé 
umesh
éé 
=
éé 
mesh
éé 
.
éé 
mesh
éé "
;
éé" #
if
èè 
(
èè 
umesh
èè 
!=
èè 
null
èè 
)
èè 
umesh
êê 
.
êê 
	hideFlags
êê 
=
êê  !
	HideFlags
êê" +
.
êê+ ,
DontSave
êê, 4
;
êê4 5
if
íí 
(
íí 
m_PreviewObject
íí 
)
íí  
{
ìì 
if
îî 
(
îî 
!
îî 
m_PreviewObject
îî $
.
îî$ %
TryGetComponent
îî% 4
(
îî4 5
out
îî5 8

MeshFilter
îî9 C
mf
îîD F
)
îîF G
)
îîG H
mf
ïï 
=
ïï 
m_PreviewObject
ïï (
.
ïï( )
AddComponent
ïï) 5
<
ïï5 6

MeshFilter
ïï6 @
>
ïï@ A
(
ïïA B
)
ïïB C
;
ïïC D
if
ññ 
(
ññ 
mf
ññ 
.
ññ 

sharedMesh
ññ  
!=
ññ! #
null
ññ$ (
)
ññ( )
DestroyImmediate
óó $
(
óó$ %
mf
óó% '
.
óó' (

sharedMesh
óó( 2
)
óó2 3
;
óó3 4
m_PreviewObject
òò 
.
òò  
GetComponent
òò  ,
<
òò, -

MeshFilter
òò- 7
>
òò7 8
(
òò8 9
)
òò9 :
.
òò: ;

sharedMesh
òò; E
=
òòF G
umesh
òòH M
;
òòM N
mesh
ôô 
.
ôô (
preserveMeshAssetOnDestroy
ôô /
=
ôô0 1
true
ôô2 6
;
ôô6 7
m_PreviewObject
öö 
.
öö  
name
öö  $
=
öö% &
mesh
öö' +
.
öö+ ,

gameObject
öö, 6
.
öö6 7
name
öö7 ;
;
öö; <
if
õõ 
(
õõ 
!
õõ 
m_PreviewObject
õõ $
.
õõ$ %
name
õõ% )
.
õõ) *
EndsWith
õõ* 2
(
õõ2 3
$str
õõ3 =
)
õõ= >
)
õõ> ?
m_PreviewObject
úú #
.
úú# $
name
úú$ (
+=
úú) +
$str
úú, 6
;
úú6 7
DestroyImmediate
ùù  
(
ùù  !
mesh
ùù! %
.
ùù% &

gameObject
ùù& 0
)
ùù0 1
;
ùù1 2
}
ûû 
else
üü 
{
†† 
m_PreviewObject
°° 
=
°°  !
mesh
°°" &
.
°°& '

gameObject
°°' 1
;
°°1 2
m_PreviewObject
¢¢ 
.
¢¢  
	hideFlags
¢¢  )
=
¢¢* +
	HideFlags
¢¢, 5
.
¢¢5 6
DontSave
¢¢6 >
;
¢¢> ?
mesh
££ 
.
££ (
preserveMeshAssetOnDestroy
££ /
=
££0 1
true
££2 6
;
££6 7
DestroyImmediate
§§  
(
§§  !
mesh
§§! %
)
§§% &
;
§§& '
	Selection
•• 
.
•• 
activeTransform
•• )
=
••* +
m_PreviewObject
••, ;
.
••; <
	transform
••< E
;
••E F
m_PreviewObject
¶¶ 
.
¶¶  
name
¶¶  $
+=
¶¶% '
$str
¶¶( 2
;
¶¶2 3
}
ßß 
m_PreviewObject
©© 
.
©© 
GetComponent
©© (
<
©©( )
MeshRenderer
©©) 5
>
©©5 6
(
©©6 7
)
©©7 8
.
©©8 9
sharedMaterial
©©9 G
=
©©H I
BuiltinMaterials
©©J Z
.
©©Z ["
ShapePreviewMaterial
©©[ o
;
©©o p
EditorUtility
™™ 
.
™™ 
MoveToActiveScene
™™ +
(
™™+ ,
m_PreviewObject
™™, ;
.
™™; <

gameObject
™™< F
)
™™F G
;
™™G H
}
´´ 	
void
≠≠ #
ApplyPreviewTransform
≠≠ "
(
≠≠" #
ProBuilderMesh
≠≠# 1
mesh
≠≠2 6
)
≠≠6 7
{
ÆÆ 	
var
ØØ 
previous
ØØ 
=
ØØ 
m_PreviewObject
ØØ *
!=
ØØ+ -
null
ØØ. 2
;
ØØ2 3
if
±± 
(
±± 
previous
±± 
)
±± 
{
≤≤ 
var
≥≥ 
trs
≥≥ 
=
≥≥ 
mesh
≥≥ 
.
≥≥ 
	transform
≥≥ (
;
≥≥( )
trs
¥¥ 
.
¥¥ 
position
¥¥ 
=
¥¥ 
m_PreviewObject
¥¥ .
.
¥¥. /
	transform
¥¥/ 8
.
¥¥8 9
position
¥¥9 A
;
¥¥A B
trs
µµ 
.
µµ 
localRotation
µµ !
=
µµ" #
m_PreviewObject
µµ$ 3
.
µµ3 4
	transform
µµ4 =
.
µµ= >
localRotation
µµ> K
;
µµK L
trs
∂∂ 
.
∂∂ 

localScale
∂∂ 
=
∂∂  
m_PreviewObject
∂∂! 0
.
∂∂0 1
	transform
∂∂1 :
.
∂∂: ;

localScale
∂∂; E
;
∂∂E F
}
∑∑ 
else
∏∏ 
{
ππ 
EditorUtility
∫∫ 
.
∫∫ 
ScreenCenter
∫∫ *
(
∫∫* +
mesh
∫∫+ /
.
∫∫/ 0

gameObject
∫∫0 :
)
∫∫: ;
;
∫∫; <
EditorUtility
ªª 
.
ªª %
SetPivotLocationAndSnap
ªª 5
(
ªª5 6
mesh
ªª6 :
)
ªª: ;
;
ªª; <
}
ºº 
}
ΩΩ 	
class
øø 
Cube
øø 
:
øø 
ShapeBuilder
øø !
{
¿¿ 	
[
¡¡ 
SettingsKey
¡¡ 
(
¡¡ 
$str
¡¡ 7
)
¡¡7 8
]
¡¡8 9
static
¬¬ 
Pref
¬¬ 
<
¬¬ 
Vector3
¬¬ 
>
¬¬  

s_CubeSize
¬¬! +
=
¬¬, -
new
¬¬. 1
Pref
¬¬2 6
<
¬¬6 7
Vector3
¬¬7 >
>
¬¬> ?
(
¬¬? @
$str
¬¬@ ^
,
¬¬^ _
Vector3
¬¬` g
.
¬¬g h
one
¬¬h k
,
¬¬k l
SettingsScope
¬¬m z
.
¬¬z {
User
¬¬{ 
)¬¬ Ä
;¬¬Ä Å
public
ƒƒ 
override
ƒƒ 
void
ƒƒ  
OnGUI
ƒƒ! &
(
ƒƒ& '
)
ƒƒ' (
{
≈≈ 

s_CubeSize
∆∆ 
.
∆∆ 
value
∆∆  
=
∆∆! "
EditorGUILayout
∆∆# 2
.
∆∆2 3
Vector3Field
∆∆3 ?
(
∆∆? @
$str
∆∆@ F
,
∆∆F G

s_CubeSize
∆∆H R
)
∆∆R S
;
∆∆S T

s_CubeSize
«« 
.
«« 
value
««  
=
««! "
Vector3
««# *
.
««* +
Min
««+ .
(
««. /
Vector3
««/ 6
.
««6 7
Max
««7 :
(
««: ;

s_CubeSize
««; E
.
««E F
value
««F K
,
««K L"
k_MinShapeDimensions
««M a
)
««a b
,
««b c"
k_MaxShapeDimensions
««d x
)
««x y
;
««y z
}
»» 
public
   
override
   
ProBuilderMesh
   *
Build
  + 0
(
  0 1
bool
  1 5
preview
  6 =
=
  > ?
false
  @ E
)
  E F
{
ÀÀ 
return
ÃÃ 
ShapeGenerator
ÃÃ %
.
ÃÃ% &
GenerateCube
ÃÃ& 2
(
ÃÃ2 3
EditorUtility
ÃÃ3 @
.
ÃÃ@ A#
newShapePivotLocation
ÃÃA V
,
ÃÃV W

s_CubeSize
ÃÃX b
)
ÃÃb c
;
ÃÃc d
}
ÕÕ 
}
ŒŒ 	
class
–– 
Sprite
–– 
:
–– 
ShapeBuilder
–– #
{
—— 	
[
““ 
SettingsKey
““ 
(
““ 
$str
““ 5
)
““5 6
]
““6 7
static
”” 
Pref
”” 
<
”” 
Axis
”” 
>
”” 
s_Axis
”” $
=
””% &
new
””' *
Pref
””+ /
<
””/ 0
Axis
””0 4
>
””4 5
(
””5 6
$str
””6 R
,
””R S
Axis
””T X
.
””X Y
Forward
””Y `
,
””` a
SettingsScope
””b o
.
””o p
User
””p t
)
””t u
;
””u v
public
’’ 
override
’’ 
void
’’  
OnGUI
’’! &
(
’’& '
)
’’' (
{
÷÷ 
s_Axis
◊◊ 
.
◊◊ 
value
◊◊ 
=
◊◊ 
(
◊◊  
Axis
◊◊  $
)
◊◊$ %
EditorGUILayout
◊◊% 4
.
◊◊4 5
	EnumPopup
◊◊5 >
(
◊◊> ?
$str
◊◊? E
,
◊◊E F
s_Axis
◊◊G M
)
◊◊M N
;
◊◊N O
}
ÿÿ 
public
⁄⁄ 
override
⁄⁄ 
ProBuilderMesh
⁄⁄ *
Build
⁄⁄+ 0
(
⁄⁄0 1
bool
⁄⁄1 5
preview
⁄⁄6 =
=
⁄⁄> ?
false
⁄⁄@ E
)
⁄⁄E F
{
€€ 
return
‹‹ 
ShapeGenerator
‹‹ %
.
‹‹% &
GeneratePlane
‹‹& 3
(
‹‹3 4
EditorUtility
‹‹4 A
.
‹‹A B#
newShapePivotLocation
‹‹B W
,
‹‹W X
$num
‹‹Y Z
,
‹‹Z [
$num
‹‹\ ]
,
‹‹] ^
$num
‹‹_ `
,
‹‹` a
$num
‹‹b c
,
‹‹c d
s_Axis
‹‹e k
)
‹‹k l
;
‹‹l m
}
›› 
}
ﬁﬁ 	
class
‡‡ 
Prism
‡‡ 
:
‡‡ 
ShapeBuilder
‡‡ "
{
·· 	
[
‚‚ 
SettingsKey
‚‚ 
(
‚‚ 
$str
‚‚ 9
)
‚‚9 :
]
‚‚: ;
static
„„ 
Pref
„„ 
<
„„ 
Vector3
„„ 
>
„„  
s_PrismSize
„„! ,
=
„„- .
new
„„/ 2
Pref
„„3 7
<
„„7 8
Vector3
„„8 ?
>
„„? @
(
„„@ A
$str
„„A a
,
„„a b
Vector3
„„c j
.
„„j k
one
„„k n
,
„„n o
SettingsScope
„„p }
.
„„} ~
User„„~ Ç
)„„Ç É
;„„É Ñ
public
ÂÂ 
override
ÂÂ 
void
ÂÂ  
OnGUI
ÂÂ! &
(
ÂÂ& '
)
ÂÂ' (
{
ÊÊ 
s_PrismSize
ÁÁ 
.
ÁÁ 
value
ÁÁ !
=
ÁÁ" #
EditorGUILayout
ÁÁ$ 3
.
ÁÁ3 4
Vector3Field
ÁÁ4 @
(
ÁÁ@ A
$str
ÁÁA G
,
ÁÁG H
s_PrismSize
ÁÁI T
)
ÁÁT U
;
ÁÁU V
s_PrismSize
ËË 
.
ËË 
value
ËË !
=
ËË" #
Vector3
ËË$ +
.
ËË+ ,
Min
ËË, /
(
ËË/ 0
Vector3
ËË0 7
.
ËË7 8
Max
ËË8 ;
(
ËË; <
s_PrismSize
ËË< G
.
ËËG H
value
ËËH M
,
ËËM N"
k_MinShapeDimensions
ËËO c
)
ËËc d
,
ËËd e"
k_MaxShapeDimensions
ËËf z
)
ËËz {
;
ËË{ |
}
ÈÈ 
public
ÎÎ 
override
ÎÎ 
ProBuilderMesh
ÎÎ *
Build
ÎÎ+ 0
(
ÎÎ0 1
bool
ÎÎ1 5
preview
ÎÎ6 =
=
ÎÎ> ?
false
ÎÎ@ E
)
ÎÎE F
{
ÏÏ 
return
ÌÌ 
ShapeGenerator
ÌÌ %
.
ÌÌ% &
GeneratePrism
ÌÌ& 3
(
ÌÌ3 4
EditorUtility
ÌÌ4 A
.
ÌÌA B#
newShapePivotLocation
ÌÌB W
,
ÌÌW X
s_PrismSize
ÌÌY d
)
ÌÌd e
;
ÌÌe f
}
ÓÓ 
}
ÔÔ 	
class
ÒÒ 
Stair
ÒÒ 
:
ÒÒ 
ShapeBuilder
ÒÒ "
{
ÚÚ 	
[
ÛÛ 
SettingsKey
ÛÛ 
(
ÛÛ 
$str
ÛÛ 5
)
ÛÛ5 6
]
ÛÛ6 7
static
ÙÙ 
Pref
ÙÙ 
<
ÙÙ 
int
ÙÙ 
>
ÙÙ 
s_Steps
ÙÙ $
=
ÙÙ% &
new
ÙÙ' *
Pref
ÙÙ+ /
<
ÙÙ/ 0
int
ÙÙ0 3
>
ÙÙ3 4
(
ÙÙ4 5
$str
ÙÙ5 Q
,
ÙÙQ R
$num
ÙÙS T
,
ÙÙT U
SettingsScope
ÙÙV c
.
ÙÙc d
User
ÙÙd h
)
ÙÙh i
;
ÙÙi j
[
ıı 
SettingsKey
ıı 
(
ıı 
$str
ıı 4
)
ıı4 5
]
ıı5 6
static
ˆˆ 
Pref
ˆˆ 
<
ˆˆ 
Vector3
ˆˆ 
>
ˆˆ  
s_Size
ˆˆ! '
=
ˆˆ( )
new
ˆˆ* -
Pref
ˆˆ. 2
<
ˆˆ2 3
Vector3
ˆˆ3 :
>
ˆˆ: ;
(
ˆˆ; <
$str
ˆˆ< W
,
ˆˆW X
new
ˆˆY \
Vector3
ˆˆ] d
(
ˆˆd e
$num
ˆˆe g
,
ˆˆg h
$num
ˆˆi m
,
ˆˆm n
$num
ˆˆo q
)
ˆˆq r
,
ˆˆr s
SettingsScopeˆˆt Å
.ˆˆÅ Ç
UserˆˆÇ Ü
)ˆˆÜ á
;ˆˆá à
[
˜˜ 
SettingsKey
˜˜ 
(
˜˜ 
$str
˜˜ =
)
˜˜= >
]
˜˜> ?
static
¯¯ 
Pref
¯¯ 
<
¯¯ 
float
¯¯ 
>
¯¯ 
s_Circumference
¯¯ .
=
¯¯/ 0
new
¯¯1 4
Pref
¯¯5 9
<
¯¯9 :
float
¯¯: ?
>
¯¯? @
(
¯¯@ A
$str
¯¯A e
,
¯¯e f
$num
¯¯g i
,
¯¯i j
SettingsScope
¯¯k x
.
¯¯x y
User
¯¯y }
)
¯¯} ~
;
¯¯~ 
[
˘˘ 
SettingsKey
˘˘ 
(
˘˘ 
$str
˘˘ 5
)
˘˘5 6
]
˘˘6 7
static
˙˙ 
Pref
˙˙ 
<
˙˙ 
bool
˙˙ 
>
˙˙ 
s_Sides
˙˙ %
=
˙˙& '
new
˙˙( +
Pref
˙˙, 0
<
˙˙0 1
bool
˙˙1 5
>
˙˙5 6
(
˙˙6 7
$str
˙˙7 S
,
˙˙S T
true
˙˙U Y
,
˙˙Y Z
SettingsScope
˙˙[ h
.
˙˙h i
User
˙˙i m
)
˙˙m n
;
˙˙n o
[
˚˚ 
SettingsKey
˚˚ 
(
˚˚ 
$str
˚˚ 6
)
˚˚6 7
]
˚˚7 8
static
¸¸ 
Pref
¸¸ 
<
¸¸ 
bool
¸¸ 
>
¸¸ 
s_Mirror
¸¸ &
=
¸¸' (
new
¸¸) ,
Pref
¸¸- 1
<
¸¸1 2
bool
¸¸2 6
>
¸¸6 7
(
¸¸7 8
$str
¸¸8 U
,
¸¸U V
false
¸¸W \
,
¸¸\ ]
SettingsScope
¸¸^ k
.
¸¸k l
User
¸¸l p
)
¸¸p q
;
¸¸q r
public
˛˛ 
override
˛˛ 
void
˛˛  
OnGUI
˛˛! &
(
˛˛& '
)
˛˛' (
{
ˇˇ 
s_Steps
ÄÄ 
.
ÄÄ 
value
ÄÄ 
=
ÄÄ 
(
ÄÄ  !
int
ÄÄ! $
)
ÄÄ$ %
Mathf
ÄÄ% *
.
ÄÄ* +
Max
ÄÄ+ .
(
ÄÄ. /
UI
ÄÄ/ 1
.
ÄÄ1 2
EditorGUIUtility
ÄÄ2 B
.
ÄÄB C

FreeSlider
ÄÄC M
(
ÄÄM N
$str
ÄÄN U
,
ÄÄU V
s_Steps
ÄÄW ^
,
ÄÄ^ _
$num
ÄÄ` a
,
ÄÄa b
$num
ÄÄc e
)
ÄÄe f
,
ÄÄf g
$num
ÄÄh i
)
ÄÄi j
;
ÄÄj k
s_Steps
ÅÅ 
.
ÅÅ 
value
ÅÅ 
=
ÅÅ 
PMath
ÅÅ  %
.
ÅÅ% &
Clamp
ÅÅ& +
(
ÅÅ+ ,
s_Steps
ÅÅ, 3
,
ÅÅ3 4
$num
ÅÅ5 6
,
ÅÅ6 7
$num
ÅÅ8 ;
)
ÅÅ; <
;
ÅÅ< =
s_Sides
ÇÇ 
.
ÇÇ 
value
ÇÇ 
=
ÇÇ 
EditorGUILayout
ÇÇ  /
.
ÇÇ/ 0
Toggle
ÇÇ0 6
(
ÇÇ6 7
$str
ÇÇ7 D
,
ÇÇD E
s_Sides
ÇÇF M
)
ÇÇM N
;
ÇÇN O
s_Circumference
ÉÉ 
.
ÉÉ  
value
ÉÉ  %
=
ÉÉ& '
EditorGUILayout
ÉÉ( 7
.
ÉÉ7 8
Slider
ÉÉ8 >
(
ÉÉ> ?
$str
ÉÉ? J
,
ÉÉJ K
s_Circumference
ÉÉL [
,
ÉÉ[ \
$num
ÉÉ] _
,
ÉÉ_ `
$num
ÉÉa e
)
ÉÉe f
;
ÉÉf g
Vector3
ÖÖ 
size
ÖÖ 
=
ÖÖ 
s_Size
ÖÖ %
.
ÖÖ% &
value
ÖÖ& +
;
ÖÖ+ ,
if
áá 
(
áá 
s_Circumference
áá #
>
áá$ %
$num
áá& (
)
áá( )
{
àà 
s_Mirror
ââ 
.
ââ 
value
ââ "
=
ââ# $
EditorGUILayout
ââ% 4
.
ââ4 5
Toggle
ââ5 ;
(
ââ; <
$str
ââ< D
,
ââD E
s_Mirror
ââF N
)
ââN O
;
ââO P
size
ãã 
.
ãã 
x
ãã 
=
ãã 
Mathf
åå 
.
åå 
Max
åå !
(
åå! "
UI
çç 
.
çç 
EditorGUIUtility
çç /
.
çç/ 0

FreeSlider
çç0 :
(
çç: ;
new
éé  #

GUIContent
éé$ .
(
éé. /
$str
éé/ <
,
éé< =
$str
éé> f
)
ééf g
,
éég h
size
ééi m
.
éém n
x
één o
,
ééo p
$num
èè  $
,
èè$ %
$num
èè& )
)
èè) *
,
èè* +
$num
èè, 0
)
èè0 1
;
èè1 2
size
êê 
.
êê 
y
êê 
=
êê 
Mathf
ëë 
.
ëë 
Max
ëë !
(
ëë! "
UI
íí 
.
íí 
EditorGUIUtility
íí /
.
íí/ 0

FreeSlider
íí0 :
(
íí: ;
new
ìì  #

GUIContent
ìì$ .
(
ìì. /
$str
ìì/ =
,
ìì= >
$str
îî$ v
)
îîv w
,
îîw x
size
ïï  $
.
ïï$ %
y
ïï% &
,
ïï& '
$num
ïï( ,
,
ïï, -
$num
ïï. 1
)
ïï1 2
,
ïï2 3
$num
ïï4 8
)
ïï8 9
;
ïï9 :
size
ññ 
.
ññ 
z
ññ 
=
ññ 
Mathf
óó 
.
óó 
Max
óó !
(
óó! "
UI
òò 
.
òò 
EditorGUIUtility
òò /
.
òò/ 0

FreeSlider
òò0 :
(
òò: ;
new
ôô  #

GUIContent
ôô$ .
(
ôô. /
$str
ôô/ =
,
ôô= >
$str
ôô? p
)
ôôp q
,
ôôq r
size
öö  $
.
öö$ %
z
öö% &
,
öö& '
$num
öö( *
,
öö* +
$num
öö, /
)
öö/ 0
,
öö0 1
$num
öö2 4
)
öö4 5
;
öö5 6
s_Size
úú 
.
úú 
value
úú  
=
úú! "
size
úú# '
;
úú' (
}
ùù 
else
ûû 
{
üü 
size
†† 
.
†† 
x
†† 
=
†† 
UI
†† 
.
††  
EditorGUIUtility
††  0
.
††0 1

FreeSlider
††1 ;
(
††; <
$str
††< C
,
††C D
size
††E I
.
††I J
x
††J K
,
††K L
$num
††M R
,
††R S
$num
††T W
)
††W X
;
††X Y
size
°° 
.
°° 
y
°° 
=
°° 
UI
°° 
.
°°  
EditorGUIUtility
°°  0
.
°°0 1

FreeSlider
°°1 ;
(
°°; <
$str
°°< D
,
°°D E
size
°°F J
.
°°J K
y
°°K L
,
°°L M
$num
°°N S
,
°°S T
$num
°°U X
)
°°X Y
;
°°Y Z
size
¢¢ 
.
¢¢ 
z
¢¢ 
=
¢¢ 
UI
¢¢ 
.
¢¢  
EditorGUIUtility
¢¢  0
.
¢¢0 1

FreeSlider
¢¢1 ;
(
¢¢; <
$str
¢¢< C
,
¢¢C D
size
¢¢E I
.
¢¢I J
z
¢¢J K
,
¢¢K L
$num
¢¢M R
,
¢¢R S
$num
¢¢T W
)
¢¢W X
;
¢¢X Y
}
££ 
s_Size
•• 
.
•• 
value
•• 
=
•• 
PMath
•• $
.
••$ %
Clamp
••% *
(
••* +
size
••+ /
,
••/ 0"
k_MinShapeDimensions
••1 E
,
••E F"
k_MaxShapeDimensions
••G [
)
••[ \
;
••\ ]
}
¶¶ 
public
®® 
override
®® 
ProBuilderMesh
®® *
Build
®®+ 0
(
®®0 1
bool
®®1 5
preview
®®6 =
=
®®> ?
false
®®@ E
)
®®E F
{
©© 
if
™™ 
(
™™ 
s_Circumference
™™ #
>
™™$ %
$num
™™& (
)
™™( )
{
´´ 
return
¨¨ 
ShapeGenerator
¨¨ )
.
¨¨) *!
GenerateCurvedStair
¨¨* =
(
¨¨= >
EditorUtility
≠≠ %
.
≠≠% &#
newShapePivotLocation
≠≠& ;
,
≠≠; <
s_Size
ÆÆ 
.
ÆÆ 
value
ÆÆ $
.
ÆÆ$ %
x
ÆÆ% &
,
ÆÆ& '
s_Size
ØØ 
.
ØØ 
value
ØØ $
.
ØØ$ %
y
ØØ% &
,
ØØ& '
s_Size
∞∞ 
.
∞∞ 
value
∞∞ $
.
∞∞$ %
z
∞∞% &
,
∞∞& '
s_Mirror
±±  
?
±±! "
-
±±# $
s_Circumference
±±$ 3
:
±±4 5
s_Circumference
±±6 E
,
±±E F
s_Steps
≤≤ 
,
≤≤  
s_Sides
≥≥ 
)
≥≥  
;
≥≥  !
}
¥¥ 
return
∂∂ 
ShapeGenerator
∂∂ %
.
∂∂% &
GenerateStair
∂∂& 3
(
∂∂3 4
EditorUtility
∑∑ !
.
∑∑! "#
newShapePivotLocation
∑∑" 7
,
∑∑7 8
s_Size
∏∏ 
,
∏∏ 
s_Steps
ππ 
,
ππ 
s_Sides
∫∫ 
)
∫∫ 
;
∫∫ 
}
ªª 
}
ºº 	
class
ææ 
Cylinder
ææ 
:
ææ 
ShapeBuilder
ææ %
{
øø 	
[
¿¿ 
SettingsKey
¿¿ 
(
¿¿ 
$str
¿¿ ?
)
¿¿? @
]
¿¿@ A
static
¡¡ 
Pref
¡¡ 
<
¡¡ 
int
¡¡ 
>
¡¡ 
s_AxisSegments
¡¡ +
=
¡¡, -
new
¡¡. 1
Pref
¡¡2 6
<
¡¡6 7
int
¡¡7 :
>
¡¡: ;
(
¡¡; <
$str
¡¡< b
,
¡¡b c
$num
¡¡d e
,
¡¡e f
SettingsScope
¡¡g t
.
¡¡t u
User
¡¡u y
)
¡¡y z
;
¡¡z {
[
¬¬ 
SettingsKey
¬¬ 
(
¬¬ 
$str
¬¬ 9
)
¬¬9 :
]
¬¬: ;
static
√√ 
Pref
√√ 
<
√√ 
float
√√ 
>
√√ 
s_Radius
√√ '
=
√√( )
new
√√* -
Pref
√√. 2
<
√√2 3
float
√√3 8
>
√√8 9
(
√√9 :
$str
√√: Z
,
√√Z [
$num
√√\ _
,
√√_ `
SettingsScope
√√a n
.
√√n o
User
√√o s
)
√√s t
;
√√t u
[
ƒƒ 
SettingsKey
ƒƒ 
(
ƒƒ 
$str
ƒƒ 9
)
ƒƒ9 :
]
ƒƒ: ;
static
≈≈ 
Pref
≈≈ 
<
≈≈ 
float
≈≈ 
>
≈≈ 
s_Height
≈≈ '
=
≈≈( )
new
≈≈* -
Pref
≈≈. 2
<
≈≈2 3
float
≈≈3 8
>
≈≈8 9
(
≈≈9 :
$str
≈≈: Z
,
≈≈Z [
$num
≈≈\ ^
,
≈≈^ _
SettingsScope
≈≈` m
.
≈≈m n
User
≈≈n r
)
≈≈r s
;
≈≈s t
[
∆∆ 
SettingsKey
∆∆ 
(
∆∆ 
$str
∆∆ A
)
∆∆A B
]
∆∆B C
static
«« 
Pref
«« 
<
«« 
int
«« 
>
«« 
s_HeightSegments
«« -
=
««. /
new
««0 3
Pref
««4 8
<
««8 9
int
««9 <
>
««< =
(
««= >
$str
««> f
,
««f g
$num
««h i
,
««i j
SettingsScope
««k x
.
««x y
User
««y }
)
««} ~
;
««~ 
[
»» 
SettingsKey
»» 
(
»» 
$str
»» 9
)
»»9 :
]
»»: ;
static
…… 
Pref
…… 
<
…… 
bool
…… 
>
…… 
s_Smooth
…… &
=
……' (
new
……) ,
Pref
……- 1
<
……1 2
bool
……2 6
>
……6 7
(
……7 8
$str
……8 X
,
……X Y
true
……Z ^
,
……^ _
SettingsScope
……` m
.
……m n
User
……n r
)
……r s
;
……s t
public
ÀÀ 
override
ÀÀ 
void
ÀÀ  
OnGUI
ÀÀ! &
(
ÀÀ& '
)
ÀÀ' (
{
ÃÃ 
s_Radius
ÕÕ 
.
ÕÕ 
value
ÕÕ 
=
ÕÕ  
EditorGUILayout
ÕÕ! 0
.
ÕÕ0 1

FloatField
ÕÕ1 ;
(
ÕÕ; <
$str
ÕÕ< D
,
ÕÕD E
s_Radius
ÕÕF N
)
ÕÕN O
;
ÕÕO P
s_Radius
ŒŒ 
.
ŒŒ 
value
ŒŒ 
=
ŒŒ  
Mathf
ŒŒ! &
.
ŒŒ& '
Clamp
ŒŒ' ,
(
ŒŒ, -
s_Radius
ŒŒ- 5
,
ŒŒ5 6"
k_MinShapeDimensions
ŒŒ7 K
.
ŒŒK L
x
ŒŒL M
,
ŒŒM N"
k_MaxShapeDimensions
ŒŒO c
.
ŒŒc d
x
ŒŒd e
)
ŒŒe f
;
ŒŒf g
s_AxisSegments
–– 
.
–– 
value
–– $
=
––% &
EditorGUILayout
––' 6
.
––6 7
IntField
––7 ?
(
––? @
$str
––@ Q
,
––Q R
s_AxisSegments
––S a
)
––a b
;
––b c
s_AxisSegments
—— 
.
—— 
value
—— $
=
——% &
PMath
——' ,
.
——, -
Clamp
——- 2
(
——2 3
s_AxisSegments
——3 A
,
——A B
$num
——C D
,
——D E
$num
——F I
)
——I J
;
——J K
s_Height
”” 
.
”” 
value
”” 
=
””  
EditorGUILayout
””! 0
.
””0 1

FloatField
””1 ;
(
””; <
$str
””< D
,
””D E
s_Height
””F N
)
””N O
;
””O P
s_Height
‘‘ 
.
‘‘ 
value
‘‘ 
=
‘‘  
Mathf
‘‘! &
.
‘‘& '
Clamp
‘‘' ,
(
‘‘, -
s_Height
‘‘- 5
.
‘‘5 6
value
‘‘6 ;
,
‘‘; <"
k_MinShapeDimensions
‘‘= Q
.
‘‘Q R
x
‘‘R S
,
‘‘S T"
k_MaxShapeDimensions
‘‘U i
.
‘‘i j
x
‘‘j k
)
‘‘k l
;
‘‘l m
s_HeightSegments
÷÷  
.
÷÷  !
value
÷÷! &
=
÷÷' (
EditorGUILayout
÷÷) 8
.
÷÷8 9
IntField
÷÷9 A
(
÷÷A B
$str
÷÷B S
,
÷÷S T
s_HeightSegments
÷÷U e
)
÷÷e f
;
÷÷f g
s_HeightSegments
◊◊  
.
◊◊  !
value
◊◊! &
=
◊◊' (
Mathf
◊◊) .
.
◊◊. /
Clamp
◊◊/ 4
(
◊◊4 5
s_HeightSegments
◊◊5 E
.
◊◊E F
value
◊◊F K
,
◊◊K L
$num
◊◊M N
,
◊◊N O
$num
◊◊P S
)
◊◊S T
;
◊◊T U
s_Smooth
ŸŸ 
.
ŸŸ 
value
ŸŸ 
=
ŸŸ  
EditorGUILayout
ŸŸ! 0
.
ŸŸ0 1
Toggle
ŸŸ1 7
(
ŸŸ7 8
$str
ŸŸ8 @
,
ŸŸ@ A
s_Smooth
ŸŸB J
)
ŸŸJ K
;
ŸŸK L
if
€€ 
(
€€ 
s_AxisSegments
€€ "
%
€€# $
$num
€€% &
!=
€€' )
$num
€€* +
)
€€+ ,
s_AxisSegments
‹‹ "
.
‹‹" #
value
‹‹# (
++
‹‹( *
;
‹‹* +
if
ﬁﬁ 
(
ﬁﬁ 
s_HeightSegments
ﬁﬁ $
<
ﬁﬁ% &
$num
ﬁﬁ' (
)
ﬁﬁ( )
s_HeightSegments
ﬂﬂ $
.
ﬂﬂ$ %
value
ﬂﬂ% *
=
ﬂﬂ+ ,
$num
ﬂﬂ- .
;
ﬂﬂ. /
}
‡‡ 
public
‚‚ 
override
‚‚ 
ProBuilderMesh
‚‚ *
Build
‚‚+ 0
(
‚‚0 1
bool
‚‚1 5
preview
‚‚6 =
=
‚‚> ?
false
‚‚@ E
)
‚‚E F
{
„„ 
return
‰‰ 
ShapeGenerator
‰‰ %
.
‰‰% &
GenerateCylinder
‰‰& 6
(
‰‰6 7
EditorUtility
ÂÂ !
.
ÂÂ! "#
newShapePivotLocation
ÂÂ" 7
,
ÂÂ7 8
s_AxisSegments
ÊÊ "
,
ÊÊ" #
s_Radius
ÁÁ 
,
ÁÁ 
s_Height
ËË 
,
ËË 
s_HeightSegments
ÈÈ $
,
ÈÈ$ %
s_Smooth
ÍÍ 
?
ÍÍ 
$num
ÍÍ  
:
ÍÍ! "
-
ÍÍ# $
$num
ÍÍ$ %
)
ÍÍ% &
;
ÍÍ& '
}
ÎÎ 
}
ÏÏ 	
class
ÓÓ 
Door
ÓÓ 
:
ÓÓ 
ShapeBuilder
ÓÓ !
{
ÔÔ 	
[
 
SettingsKey
 
(
 
$str
 4
)
4 5
]
5 6
static
ÒÒ 
Pref
ÒÒ 
<
ÒÒ 
float
ÒÒ 
>
ÒÒ 
s_Width
ÒÒ &
=
ÒÒ' (
new
ÒÒ) ,
Pref
ÒÒ- 1
<
ÒÒ1 2
float
ÒÒ2 7
>
ÒÒ7 8
(
ÒÒ8 9
$str
ÒÒ9 T
,
ÒÒT U
$num
ÒÒV Z
,
ÒÒZ [
SettingsScope
ÒÒ\ i
.
ÒÒi j
User
ÒÒj n
)
ÒÒn o
;
ÒÒo p
[
ÚÚ 
SettingsKey
ÚÚ 
(
ÚÚ 
$str
ÚÚ 5
)
ÚÚ5 6
]
ÚÚ6 7
static
ÛÛ 
Pref
ÛÛ 
<
ÛÛ 
float
ÛÛ 
>
ÛÛ 
s_Height
ÛÛ '
=
ÛÛ( )
new
ÛÛ* -
Pref
ÛÛ. 2
<
ÛÛ2 3
float
ÛÛ3 8
>
ÛÛ8 9
(
ÛÛ9 :
$str
ÛÛ: V
,
ÛÛV W
$num
ÛÛX \
,
ÛÛ\ ]
SettingsScope
ÛÛ^ k
.
ÛÛk l
User
ÛÛl p
)
ÛÛp q
;
ÛÛq r
[
ÙÙ 
SettingsKey
ÙÙ 
(
ÙÙ 
$str
ÙÙ :
)
ÙÙ: ;
]
ÙÙ; <
static
ıı 
Pref
ıı 
<
ıı 
float
ıı 
>
ıı 
s_LedgeHeight
ıı ,
=
ıı- .
new
ıı/ 2
Pref
ıı3 7
<
ıı7 8
float
ıı8 =
>
ıı= >
(
ıı> ?
$str
ıı? `
,
ıı` a
$num
ııb f
,
ııf g
SettingsScope
ııh u
.
ııu v
User
ııv z
)
ıız {
;
ıı{ |
[
ˆˆ 
SettingsKey
ˆˆ 
(
ˆˆ 
$str
ˆˆ 7
)
ˆˆ7 8
]
ˆˆ8 9
static
˜˜ 
Pref
˜˜ 
<
˜˜ 
float
˜˜ 
>
˜˜ 

s_LegWidth
˜˜ )
=
˜˜* +
new
˜˜, /
Pref
˜˜0 4
<
˜˜4 5
float
˜˜5 :
>
˜˜: ;
(
˜˜; <
$str
˜˜< Z
,
˜˜Z [
$num
˜˜\ `
,
˜˜` a
SettingsScope
˜˜b o
.
˜˜o p
User
˜˜p t
)
˜˜t u
;
˜˜u v
[
¯¯ 
SettingsKey
¯¯ 
(
¯¯ 
$str
¯¯ 4
)
¯¯4 5
]
¯¯5 6
static
˘˘ 
Pref
˘˘ 
<
˘˘ 
float
˘˘ 
>
˘˘ 
s_Depth
˘˘ &
=
˘˘' (
new
˘˘) ,
Pref
˘˘- 1
<
˘˘1 2
float
˘˘2 7
>
˘˘7 8
(
˘˘8 9
$str
˘˘9 T
,
˘˘T U
$num
˘˘V Z
,
˘˘Z [
SettingsScope
˘˘\ i
.
˘˘i j
User
˘˘j n
)
˘˘n o
;
˘˘o p
public
˚˚ 
override
˚˚ 
void
˚˚  
OnGUI
˚˚! &
(
˚˚& '
)
˚˚' (
{
¸¸ 
s_Width
˝˝ 
.
˝˝ 
value
˝˝ 
=
˝˝ 
EditorGUILayout
˝˝  /
.
˝˝/ 0

FloatField
˝˝0 :
(
˝˝: ;
$str
˝˝; H
,
˝˝H I
s_Width
˝˝J Q
)
˝˝Q R
;
˝˝R S
s_Width
˛˛ 
.
˛˛ 
value
˛˛ 
=
˛˛ 
Mathf
˛˛  %
.
˛˛% &
Clamp
˛˛& +
(
˛˛+ ,
s_Width
˛˛, 3
,
˛˛3 4
$num
˛˛5 9
,
˛˛9 :
$num
˛˛; A
)
˛˛A B
;
˛˛B C
s_Height
ÄÄ 
.
ÄÄ 
value
ÄÄ 
=
ÄÄ  
EditorGUILayout
ÄÄ! 0
.
ÄÄ0 1

FloatField
ÄÄ1 ;
(
ÄÄ; <
$str
ÄÄ< J
,
ÄÄJ K
s_Height
ÄÄL T
)
ÄÄT U
;
ÄÄU V
s_Height
ÅÅ 
.
ÅÅ 
value
ÅÅ 
=
ÅÅ  
Mathf
ÅÅ! &
.
ÅÅ& '
Clamp
ÅÅ' ,
(
ÅÅ, -
s_Height
ÅÅ- 5
,
ÅÅ5 6
$num
ÅÅ7 ;
,
ÅÅ; <
$num
ÅÅ= C
)
ÅÅC D
;
ÅÅD E
s_Depth
ÉÉ 
.
ÉÉ 
value
ÉÉ 
=
ÉÉ 
EditorGUILayout
ÉÉ  /
.
ÉÉ/ 0

FloatField
ÉÉ0 :
(
ÉÉ: ;
$str
ÉÉ; H
,
ÉÉH I
s_Depth
ÉÉJ Q
)
ÉÉQ R
;
ÉÉR S
s_Depth
ÑÑ 
.
ÑÑ 
value
ÑÑ 
=
ÑÑ 
Mathf
ÑÑ  %
.
ÑÑ% &
Clamp
ÑÑ& +
(
ÑÑ+ ,
s_Depth
ÑÑ, 3
,
ÑÑ3 4
$num
ÑÑ5 :
,
ÑÑ: ;
$num
ÑÑ< B
)
ÑÑB C
;
ÑÑC D
s_LedgeHeight
ÜÜ 
.
ÜÜ 
value
ÜÜ #
=
ÜÜ$ %
EditorGUILayout
ÜÜ& 5
.
ÜÜ5 6

FloatField
ÜÜ6 @
(
ÜÜ@ A
$str
ÜÜA N
,
ÜÜN O
s_LedgeHeight
ÜÜP ]
)
ÜÜ] ^
;
ÜÜ^ _
s_LedgeHeight
áá 
.
áá 
value
áá #
=
áá$ %
Mathf
áá& +
.
áá+ ,
Clamp
áá, 1
(
áá1 2
s_LedgeHeight
áá2 ?
,
áá? @
$num
ááA F
,
ááF G
$num
ááH N
)
ááN O
;
ááO P

s_LegWidth
ââ 
.
ââ 
value
ââ  
=
ââ! "
EditorGUILayout
ââ# 2
.
ââ2 3

FloatField
ââ3 =
(
ââ= >
$str
ââ> I
,
ââI J

s_LegWidth
ââK U
)
ââU V
;
ââV W

s_LegWidth
ää 
.
ää 
value
ää  
=
ää! "
Mathf
ää# (
.
ää( )
Clamp
ää) .
(
ää. /

s_LegWidth
ää/ 9
,
ää9 :
$num
ää; @
,
ää@ A
$num
ääB F
)
ääF G
;
ääG H
}
ãã 
public
çç 
override
çç 
ProBuilderMesh
çç *
Build
çç+ 0
(
çç0 1
bool
çç1 5
preview
çç6 =
=
çç> ?
false
çç@ E
)
ççE F
{
éé 
return
èè 
ShapeGenerator
èè %
.
èè% &
GenerateDoor
èè& 2
(
èè2 3
EditorUtility
êê !
.
êê! "#
newShapePivotLocation
êê" 7
,
êê7 8
s_Width
ëë 
,
ëë 
s_Height
íí 
,
íí 
s_LedgeHeight
ìì !
,
ìì! "

s_LegWidth
îî 
,
îî 
s_Depth
ïï 
)
ïï 
;
ïï 
}
ññ 
}
óó 	
class
ôô 
Plane
ôô 
:
ôô 
ShapeBuilder
ôô "
{
öö 	
[
õõ 
SettingsKey
õõ 
(
õõ 
$str
õõ 6
)
õõ6 7
]
õõ7 8
static
úú 
Pref
úú 
<
úú 
float
úú 
>
úú 
s_Height
úú '
=
úú( )
new
úú* -
Pref
úú. 2
<
úú2 3
float
úú3 8
>
úú8 9
(
úú9 :
$str
úú: W
,
úúW X
$num
úúY [
,
úú[ \
SettingsScope
úú] j
.
úúj k
User
úúk o
)
úúo p
;
úúp q
[
ùù 
SettingsKey
ùù 
(
ùù 
$str
ùù 5
)
ùù5 6
]
ùù6 7
static
ûû 
Pref
ûû 
<
ûû 
float
ûû 
>
ûû 
s_Width
ûû &
=
ûû' (
new
ûû) ,
Pref
ûû- 1
<
ûû1 2
float
ûû2 7
>
ûû7 8
(
ûû8 9
$str
ûû9 U
,
ûûU V
$num
ûûW Y
,
ûûY Z
SettingsScope
ûû[ h
.
ûûh i
User
ûûi m
)
ûûm n
;
ûûn o
[
üü 
SettingsKey
üü 
(
üü 
$str
üü >
)
üü> ?
]
üü? @
static
†† 
Pref
†† 
<
†† 
int
†† 
>
†† 
s_HeightSegments
†† -
=
††. /
new
††0 3
Pref
††4 8
<
††8 9
int
††9 <
>
††< =
(
††= >
$str
††> c
,
††c d
$num
††e f
,
††f g
SettingsScope
††h u
.
††u v
User
††v z
)
††z {
;
††{ |
[
°° 
SettingsKey
°° 
(
°° 
$str
°° =
)
°°= >
]
°°> ?
static
¢¢ 
Pref
¢¢ 
<
¢¢ 
int
¢¢ 
>
¢¢ 
s_WidthSegments
¢¢ ,
=
¢¢- .
new
¢¢/ 2
Pref
¢¢3 7
<
¢¢7 8
int
¢¢8 ;
>
¢¢; <
(
¢¢< =
$str
¢¢= a
,
¢¢a b
$num
¢¢c d
,
¢¢d e
SettingsScope
¢¢f s
.
¢¢s t
User
¢¢t x
)
¢¢x y
;
¢¢y z
[
££ 
SettingsKey
££ 
(
££ 
$str
££ 4
)
££4 5
]
££5 6
static
§§ 
Pref
§§ 
<
§§ 
Axis
§§ 
>
§§ 
s_Axis
§§ $
=
§§% &
new
§§' *
Pref
§§+ /
<
§§/ 0
Axis
§§0 4
>
§§4 5
(
§§5 6
$str
§§6 Q
,
§§Q R
Axis
§§S W
.
§§W X
Up
§§X Z
,
§§Z [
SettingsScope
§§\ i
.
§§i j
User
§§j n
)
§§n o
;
§§o p
public
¶¶ 
override
¶¶ 
void
¶¶  
OnGUI
¶¶! &
(
¶¶& '
)
¶¶' (
{
ßß 
s_Axis
®® 
.
®® 
value
®® 
=
®® 
(
®®  
Axis
®®  $
)
®®$ %
EditorGUILayout
®®% 4
.
®®4 5
	EnumPopup
®®5 >
(
®®> ?
$str
®®? E
,
®®E F
s_Axis
®®G M
)
®®M N
;
®®N O
s_Width
™™ 
.
™™ 
value
™™ 
=
™™ 
EditorGUILayout
™™  /
.
™™/ 0

FloatField
™™0 :
(
™™: ;
$str
™™; B
,
™™B C
s_Width
™™D K
)
™™K L
;
™™L M
s_Height
´´ 
.
´´ 
value
´´ 
=
´´  
EditorGUILayout
´´! 0
.
´´0 1

FloatField
´´1 ;
(
´´; <
$str
´´< D
,
´´D E
s_Height
´´F N
)
´´N O
;
´´O P
s_Width
¨¨ 
.
¨¨ 
value
¨¨ 
=
¨¨ 
Mathf
¨¨  %
.
¨¨% &
Clamp
¨¨& +
(
¨¨+ ,
s_Width
¨¨, 3
.
¨¨3 4
value
¨¨4 9
,
¨¨9 :"
k_MinShapeDimensions
¨¨; O
.
¨¨O P
x
¨¨P Q
,
¨¨Q R"
k_MaxShapeDimensions
¨¨S g
.
¨¨g h
x
¨¨h i
)
¨¨i j
;
¨¨j k
s_Height
≠≠ 
.
≠≠ 
value
≠≠ 
=
≠≠  
Mathf
≠≠! &
.
≠≠& '
Clamp
≠≠' ,
(
≠≠, -
s_Height
≠≠- 5
.
≠≠5 6
value
≠≠6 ;
,
≠≠; <"
k_MinShapeDimensions
≠≠= Q
.
≠≠Q R
x
≠≠R S
,
≠≠S T"
k_MaxShapeDimensions
≠≠U i
.
≠≠i j
x
≠≠j k
)
≠≠k l
;
≠≠l m
s_WidthSegments
ØØ 
.
ØØ  
value
ØØ  %
=
ØØ& '
EditorGUILayout
ØØ( 7
.
ØØ7 8
IntField
ØØ8 @
(
ØØ@ A
$str
ØØA Q
,
ØØQ R
s_WidthSegments
ØØS b
)
ØØb c
;
ØØc d
s_HeightSegments
∞∞  
.
∞∞  !
value
∞∞! &
=
∞∞' (
EditorGUILayout
∞∞) 8
.
∞∞8 9
IntField
∞∞9 A
(
∞∞A B
$str
∞∞B S
,
∞∞S T
s_HeightSegments
∞∞U e
)
∞∞e f
;
∞∞f g
s_WidthSegments
≤≤ 
.
≤≤  
value
≤≤  %
=
≤≤& '
PMath
≤≤( -
.
≤≤- .
Clamp
≤≤. 3
(
≤≤3 4
s_WidthSegments
≤≤4 C
.
≤≤C D
value
≤≤D I
,
≤≤I J
$num
≤≤K L
,
≤≤L M
$num
≤≤N Q
)
≤≤Q R
;
≤≤R S
s_HeightSegments
≥≥  
.
≥≥  !
value
≥≥! &
=
≥≥' (
PMath
≥≥) .
.
≥≥. /
Clamp
≥≥/ 4
(
≥≥4 5
s_HeightSegments
≥≥5 E
.
≥≥E F
value
≥≥F K
,
≥≥K L
$num
≥≥M N
,
≥≥N O
$num
≥≥P S
)
≥≥S T
;
≥≥T U
}
¥¥ 
public
∂∂ 
override
∂∂ 
ProBuilderMesh
∂∂ *
Build
∂∂+ 0
(
∂∂0 1
bool
∂∂1 5
preview
∂∂6 =
=
∂∂> ?
false
∂∂@ E
)
∂∂E F
{
∑∑ 
return
∏∏ 
ShapeGenerator
∏∏ %
.
∏∏% &
GeneratePlane
∏∏& 3
(
∏∏3 4
EditorUtility
ππ !
.
ππ! "#
newShapePivotLocation
ππ" 7
,
ππ7 8
s_Height
∫∫ 
,
∫∫ 
s_Width
ªª 
,
ªª 
s_HeightSegments
ºº $
,
ºº$ %
s_WidthSegments
ΩΩ #
,
ΩΩ# $
s_Axis
ææ 
)
ææ 
;
ææ 
}
øø 
}
¿¿ 	
class
¬¬ 
Pipe
¬¬ 
:
¬¬ 
ShapeBuilder
¬¬ !
{
√√ 	
[
ƒƒ 
SettingsKey
ƒƒ 
(
ƒƒ 
$str
ƒƒ 5
)
ƒƒ5 6
]
ƒƒ6 7
static
≈≈ 
Pref
≈≈ 
<
≈≈ 
float
≈≈ 
>
≈≈ 
s_Radius
≈≈ '
=
≈≈( )
new
≈≈* -
Pref
≈≈. 2
<
≈≈2 3
float
≈≈3 8
>
≈≈8 9
(
≈≈9 :
$str
≈≈: V
,
≈≈V W
$num
≈≈X Z
,
≈≈Z [
SettingsScope
≈≈\ i
.
≈≈i j
User
≈≈j n
)
≈≈n o
;
≈≈o p
[
∆∆ 
SettingsKey
∆∆ 
(
∆∆ 
$str
∆∆ 5
)
∆∆5 6
]
∆∆6 7
static
«« 
Pref
«« 
<
«« 
float
«« 
>
«« 
s_Height
«« '
=
««( )
new
««* -
Pref
««. 2
<
««2 3
float
««3 8
>
««8 9
(
««9 :
$str
««: V
,
««V W
$num
««X Z
,
««Z [
SettingsScope
««\ i
.
««i j
User
««j n
)
««n o
;
««o p
[
»» 
SettingsKey
»» 
(
»» 
$str
»» 8
)
»»8 9
]
»»9 :
static
…… 
Pref
…… 
<
…… 
float
…… 
>
…… 
s_Thickness
…… *
=
……+ ,
new
……- 0
Pref
……1 5
<
……5 6
float
……6 ;
>
……; <
(
……< =
$str
……= \
,
……\ ]
$num
……^ a
,
……a b
SettingsScope
……c p
.
……p q
User
……q u
)
……u v
;
……v w
[
   
SettingsKey
   
(
   
$str
   ;
)
  ; <
]
  < =
static
ÀÀ 
Pref
ÀÀ 
<
ÀÀ 
int
ÀÀ 
>
ÀÀ 
s_AxisSegments
ÀÀ +
=
ÀÀ, -
new
ÀÀ. 1
Pref
ÀÀ2 6
<
ÀÀ6 7
int
ÀÀ7 :
>
ÀÀ: ;
(
ÀÀ; <
$str
ÀÀ< ^
,
ÀÀ^ _
$num
ÀÀ` a
,
ÀÀa b
SettingsScope
ÀÀc p
.
ÀÀp q
User
ÀÀq u
)
ÀÀu v
;
ÀÀv w
[
ÃÃ 
SettingsKey
ÃÃ 
(
ÃÃ 
$str
ÃÃ =
)
ÃÃ= >
]
ÃÃ> ?
static
ÕÕ 
Pref
ÕÕ 
<
ÕÕ 
int
ÕÕ 
>
ÕÕ 
s_HeightSegments
ÕÕ -
=
ÕÕ. /
new
ÕÕ0 3
Pref
ÕÕ4 8
<
ÕÕ8 9
int
ÕÕ9 <
>
ÕÕ< =
(
ÕÕ= >
$str
ÕÕ> b
,
ÕÕb c
$num
ÕÕd e
,
ÕÕe f
SettingsScope
ÕÕg t
.
ÕÕt u
User
ÕÕu y
)
ÕÕy z
;
ÕÕz {
public
œœ 
override
œœ 
void
œœ  
OnGUI
œœ! &
(
œœ& '
)
œœ' (
{
–– 
s_Radius
—— 
.
—— 
value
—— 
=
——  
EditorGUILayout
——! 0
.
——0 1

FloatField
——1 ;
(
——; <
$str
——< D
,
——D E
s_Radius
——F N
)
——N O
;
——O P
s_Height
““ 
.
““ 
value
““ 
=
““  
EditorGUILayout
““! 0
.
““0 1

FloatField
““1 ;
(
““; <
$str
““< D
,
““D E
s_Height
““F N
)
““N O
;
““O P
s_Thickness
”” 
.
”” 
value
”” !
=
””" #
EditorGUILayout
””$ 3
.
””3 4

FloatField
””4 >
(
””> ?
$str
””? J
,
””J K
s_Thickness
””L W
)
””W X
;
””X Y
s_AxisSegments
‘‘ 
.
‘‘ 
value
‘‘ $
=
‘‘% &
EditorGUILayout
‘‘' 6
.
‘‘6 7
IntField
‘‘7 ?
(
‘‘? @
$str
‘‘@ Q
,
‘‘Q R
s_AxisSegments
‘‘S a
)
‘‘a b
;
‘‘b c
s_HeightSegments
’’  
.
’’  !
value
’’! &
=
’’' (
EditorGUILayout
’’) 8
.
’’8 9
IntField
’’9 A
(
’’A B
$str
’’B S
,
’’S T
s_HeightSegments
’’U e
)
’’e f
;
’’f g
s_Radius
◊◊ 
.
◊◊ 
value
◊◊ 
=
◊◊  
Mathf
◊◊! &
.
◊◊& '
Clamp
◊◊' ,
(
◊◊, -
s_Radius
◊◊- 5
.
◊◊5 6
value
◊◊6 ;
,
◊◊; <"
k_MinShapeDimensions
◊◊= Q
.
◊◊Q R
x
◊◊R S
,
◊◊S T"
k_MaxShapeDimensions
◊◊U i
.
◊◊i j
x
◊◊j k
)
◊◊k l
;
◊◊l m
s_Height
ÿÿ 
.
ÿÿ 
value
ÿÿ 
=
ÿÿ  
Mathf
ÿÿ! &
.
ÿÿ& '
Clamp
ÿÿ' ,
(
ÿÿ, -
s_Height
ÿÿ- 5
.
ÿÿ5 6
value
ÿÿ6 ;
,
ÿÿ; <"
k_MinShapeDimensions
ÿÿ= Q
.
ÿÿQ R
x
ÿÿR S
,
ÿÿS T"
k_MaxShapeDimensions
ÿÿU i
.
ÿÿi j
x
ÿÿj k
)
ÿÿk l
;
ÿÿl m
s_HeightSegments
ŸŸ  
.
ŸŸ  !
value
ŸŸ! &
=
ŸŸ' (
(
ŸŸ) *
int
ŸŸ* -
)
ŸŸ- .
Mathf
ŸŸ. 3
.
ŸŸ3 4
Clamp
ŸŸ4 9
(
ŸŸ9 :
s_HeightSegments
ŸŸ: J
,
ŸŸJ K
$num
ŸŸL N
,
ŸŸN O
$num
ŸŸP S
)
ŸŸS T
;
ŸŸT U
s_Thickness
⁄⁄ 
.
⁄⁄ 
value
⁄⁄ !
=
⁄⁄" #
Mathf
⁄⁄$ )
.
⁄⁄) *
Clamp
⁄⁄* /
(
⁄⁄/ 0
s_Thickness
⁄⁄0 ;
,
⁄⁄; <
$num
⁄⁄= A
,
⁄⁄A B
s_Radius
⁄⁄C K
-
⁄⁄L M
$num
⁄⁄N R
)
⁄⁄R S
;
⁄⁄S T
s_AxisSegments
€€ 
.
€€ 
value
€€ $
=
€€% &
PMath
€€' ,
.
€€, -
Clamp
€€- 2
(
€€2 3
s_AxisSegments
€€3 A
,
€€A B
$num
€€C D
,
€€D E
$num
€€F H
)
€€H I
;
€€I J
s_HeightSegments
‹‹  
.
‹‹  !
value
‹‹! &
=
‹‹' (
PMath
‹‹) .
.
‹‹. /
Clamp
‹‹/ 4
(
‹‹4 5
s_HeightSegments
‹‹5 E
.
‹‹E F
value
‹‹F K
,
‹‹K L
$num
‹‹M N
,
‹‹N O
$num
‹‹P S
)
‹‹S T
;
‹‹T U
}
›› 
public
ﬂﬂ 
override
ﬂﬂ 
ProBuilderMesh
ﬂﬂ *
Build
ﬂﬂ+ 0
(
ﬂﬂ0 1
bool
ﬂﬂ1 5
preview
ﬂﬂ6 =
=
ﬂﬂ> ?
false
ﬂﬂ@ E
)
ﬂﬂE F
{
‡‡ 
return
·· 
ShapeGenerator
·· %
.
··% &
GeneratePipe
··& 2
(
··2 3
EditorUtility
‚‚ !
.
‚‚! "#
newShapePivotLocation
‚‚" 7
,
‚‚7 8
s_Radius
„„ 
,
„„ 
s_Height
‰‰ 
,
‰‰ 
s_Thickness
ÂÂ 
,
ÂÂ  
s_AxisSegments
ÊÊ "
,
ÊÊ" #
s_HeightSegments
ÁÁ $
)
ËË 
;
ËË 
}
ÈÈ 
}
ÍÍ 	
class
ÏÏ 
Cone
ÏÏ 
:
ÏÏ 
ShapeBuilder
ÏÏ !
{
ÌÌ 	
[
ÓÓ 
SettingsKey
ÓÓ 
(
ÓÓ 
$str
ÓÓ 5
)
ÓÓ5 6
]
ÓÓ6 7
static
ÔÔ 
Pref
ÔÔ 
<
ÔÔ 
float
ÔÔ 
>
ÔÔ 
s_Radius
ÔÔ '
=
ÔÔ( )
new
ÔÔ* -
Pref
ÔÔ. 2
<
ÔÔ2 3
float
ÔÔ3 8
>
ÔÔ8 9
(
ÔÔ9 :
$str
ÔÔ: V
,
ÔÔV W
$num
ÔÔX Z
,
ÔÔZ [
SettingsScope
ÔÔ\ i
.
ÔÔi j
User
ÔÔj n
)
ÔÔn o
;
ÔÔo p
[
 
SettingsKey
 
(
 
$str
 5
)
5 6
]
6 7
static
ÒÒ 
Pref
ÒÒ 
<
ÒÒ 
float
ÒÒ 
>
ÒÒ 
s_Height
ÒÒ '
=
ÒÒ( )
new
ÒÒ* -
Pref
ÒÒ. 2
<
ÒÒ2 3
float
ÒÒ3 8
>
ÒÒ8 9
(
ÒÒ9 :
$str
ÒÒ: V
,
ÒÒV W
$num
ÒÒX Z
,
ÒÒZ [
SettingsScope
ÒÒ\ i
.
ÒÒi j
User
ÒÒj n
)
ÒÒn o
;
ÒÒo p
[
ÚÚ 
SettingsKey
ÚÚ 
(
ÚÚ 
$str
ÚÚ ;
)
ÚÚ; <
]
ÚÚ< =
static
ÛÛ 
Pref
ÛÛ 
<
ÛÛ 
int
ÛÛ 
>
ÛÛ 
s_AxisSegments
ÛÛ +
=
ÛÛ, -
new
ÛÛ. 1
Pref
ÛÛ2 6
<
ÛÛ6 7
int
ÛÛ7 :
>
ÛÛ: ;
(
ÛÛ; <
$str
ÛÛ< ^
,
ÛÛ^ _
$num
ÛÛ` a
,
ÛÛa b
SettingsScope
ÛÛc p
.
ÛÛp q
User
ÛÛq u
)
ÛÛu v
;
ÛÛv w
public
ıı 
override
ıı 
void
ıı  
OnGUI
ıı! &
(
ıı& '
)
ıı' (
{
ˆˆ 
s_Radius
˜˜ 
.
˜˜ 
value
˜˜ 
=
˜˜  
EditorGUILayout
˜˜! 0
.
˜˜0 1

FloatField
˜˜1 ;
(
˜˜; <
$str
˜˜< D
,
˜˜D E
s_Radius
˜˜F N
)
˜˜N O
;
˜˜O P
s_Height
¯¯ 
.
¯¯ 
value
¯¯ 
=
¯¯  
EditorGUILayout
¯¯! 0
.
¯¯0 1

FloatField
¯¯1 ;
(
¯¯; <
$str
¯¯< D
,
¯¯D E
s_Height
¯¯F N
)
¯¯N O
;
¯¯O P
s_AxisSegments
˘˘ 
.
˘˘ 
value
˘˘ $
=
˘˘% &
EditorGUILayout
˘˘' 6
.
˘˘6 7
IntField
˘˘7 ?
(
˘˘? @
$str
˘˘@ Q
,
˘˘Q R
s_AxisSegments
˘˘S a
)
˘˘a b
;
˘˘b c
s_Radius
˚˚ 
.
˚˚ 
value
˚˚ 
=
˚˚  
Mathf
˚˚! &
.
˚˚& '
Clamp
˚˚' ,
(
˚˚, -
s_Radius
˚˚- 5
.
˚˚5 6
value
˚˚6 ;
,
˚˚; <"
k_MinShapeDimensions
˚˚= Q
.
˚˚Q R
x
˚˚R S
,
˚˚S T"
k_MaxShapeDimensions
˚˚U i
.
˚˚i j
x
˚˚j k
)
˚˚k l
;
˚˚l m
s_Height
¸¸ 
.
¸¸ 
value
¸¸ 
=
¸¸  
Mathf
¸¸! &
.
¸¸& '
Clamp
¸¸' ,
(
¸¸, -
s_Height
¸¸- 5
.
¸¸5 6
value
¸¸6 ;
,
¸¸; <"
k_MinShapeDimensions
¸¸= Q
.
¸¸Q R
x
¸¸R S
,
¸¸S T"
k_MaxShapeDimensions
¸¸U i
.
¸¸i j
x
¸¸j k
)
¸¸k l
;
¸¸l m
s_AxisSegments
˝˝ 
.
˝˝ 
value
˝˝ $
=
˝˝% &
PMath
˝˝' ,
.
˝˝, -
Clamp
˝˝- 2
(
˝˝2 3
s_AxisSegments
˝˝3 A
,
˝˝A B
$num
˝˝C D
,
˝˝D E
$num
˝˝F H
)
˝˝H I
;
˝˝I J
}
˛˛ 
public
ÄÄ 
override
ÄÄ 
ProBuilderMesh
ÄÄ *
Build
ÄÄ+ 0
(
ÄÄ0 1
bool
ÄÄ1 5
preview
ÄÄ6 =
=
ÄÄ> ?
false
ÄÄ@ E
)
ÄÄE F
{
ÅÅ 
return
ÇÇ 
ShapeGenerator
ÇÇ %
.
ÇÇ% &
GenerateCone
ÇÇ& 2
(
ÇÇ2 3
EditorUtility
ÉÉ !
.
ÉÉ! "#
newShapePivotLocation
ÉÉ" 7
,
ÉÉ7 8
s_Radius
ÑÑ 
,
ÑÑ 
s_Height
ÖÖ 
,
ÖÖ 
s_AxisSegments
ÜÜ "
)
áá 
;
áá 
}
àà 
}
ââ 	
class
ãã 
Arch
ãã 
:
ãã 
ShapeBuilder
ãã !
{
åå 	
[
çç 
SettingsKey
çç 
(
çç 
$str
çç 4
)
çç4 5
]
çç5 6
static
éé 
Pref
éé 
<
éé 
float
éé 
>
éé 
s_Angle
éé &
=
éé' (
new
éé) ,
Pref
éé- 1
<
éé1 2
float
éé2 7
>
éé7 8
(
éé8 9
$str
éé9 T
,
ééT U
$num
ééV \
,
éé\ ]
SettingsScope
éé^ k
.
éék l
User
éél p
)
éép q
;
ééq r
[
èè 
SettingsKey
èè 
(
èè 
$str
èè 5
)
èè5 6
]
èè6 7
static
êê 
Pref
êê 
<
êê 
float
êê 
>
êê 
s_Radius
êê '
=
êê( )
new
êê* -
Pref
êê. 2
<
êê2 3
float
êê3 8
>
êê8 9
(
êê9 :
$str
êê: V
,
êêV W
$num
êêX \
,
êê\ ]
SettingsScope
êê^ k
.
êêk l
User
êêl p
)
êêp q
;
êêq r
[
ëë 
SettingsKey
ëë 
(
ëë 
$str
ëë 4
)
ëë4 5
]
ëë5 6
static
íí 
Pref
íí 
<
íí 
float
íí 
>
íí 
s_Width
íí &
=
íí' (
new
íí) ,
Pref
íí- 1
<
íí1 2
float
íí2 7
>
íí7 8
(
íí8 9
$str
íí9 T
,
ííT U
$num
ííV [
,
íí[ \
SettingsScope
íí] j
.
ííj k
User
íík o
)
íío p
;
ííp q
[
ìì 
SettingsKey
ìì 
(
ìì 
$str
ìì 4
)
ìì4 5
]
ìì5 6
static
îî 
Pref
îî 
<
îî 
float
îî 
>
îî 
s_Depth
îî &
=
îî' (
new
îî) ,
Pref
îî- 1
<
îî1 2
float
îî2 7
>
îî7 8
(
îî8 9
$str
îî9 T
,
îîT U
$num
îîV X
,
îîX Y
SettingsScope
îîZ g
.
îîg h
User
îîh l
)
îîl m
;
îîm n
[
ïï 
SettingsKey
ïï 
(
ïï 
$str
ïï =
)
ïï= >
]
ïï> ?
static
ññ 
Pref
ññ 
<
ññ 
int
ññ 
>
ññ 
s_RadiusSegments
ññ -
=
ññ. /
new
ññ0 3
Pref
ññ4 8
<
ññ8 9
int
ññ9 <
>
ññ< =
(
ññ= >
$str
ññ> b
,
ññb c
$num
ññd e
,
ññe f
SettingsScope
ññg t
.
ññt u
User
ññu y
)
ññy z
;
ññz {
[
óó 
SettingsKey
óó 
(
óó 
$str
óó 6
)
óó6 7
]
óó7 8
static
òò 
Pref
òò 
<
òò 
bool
òò 
>
òò 
	s_EndCaps
òò '
=
òò( )
new
òò* -
Pref
òò. 2
<
òò2 3
bool
òò3 7
>
òò7 8
(
òò8 9
$str
òò9 V
,
òòV W
true
òòX \
,
òò\ ]
SettingsScope
òò^ k
.
òòk l
User
òòl p
)
òòp q
;
òòq r
const
öö 
bool
öö 
k_InsideFaces
öö $
=
öö% &
true
öö' +
;
öö+ ,
const
õõ 
bool
õõ 
k_OutsideFaces
õõ %
=
õõ& '
true
õõ( ,
;
õõ, -
const
úú 
bool
úú 
k_FrontFaces
úú #
=
úú$ %
true
úú& *
;
úú* +
const
ùù 
bool
ùù 
k_BackFaces
ùù "
=
ùù# $
true
ùù% )
;
ùù) *
public
üü 
override
üü 
void
üü  
OnGUI
üü! &
(
üü& '
)
üü' (
{
†† 
s_Radius
°° 
.
°° 
value
°° 
=
°°  
EditorGUILayout
°°! 0
.
°°0 1

FloatField
°°1 ;
(
°°; <
$str
°°< D
,
°°D E
s_Radius
°°F N
)
°°N O
;
°°O P
s_Radius
¢¢ 
.
¢¢ 
value
¢¢ 
=
¢¢  
s_Radius
¢¢! )
<=
¢¢* ,
$num
¢¢- /
?
¢¢0 1
$num
¢¢2 6
:
¢¢7 8
s_Radius
¢¢9 A
;
¢¢A B
s_Width
§§ 
.
§§ 
value
§§ 
=
§§ 
EditorGUILayout
§§  /
.
§§/ 0

FloatField
§§0 :
(
§§: ;
$str
§§; F
,
§§F G
s_Width
§§H O
)
§§O P
;
§§P Q
s_Width
•• 
.
•• 
value
•• 
=
•• 
Mathf
••  %
.
••% &
Clamp
••& +
(
••+ ,
s_Width
••, 3
,
••3 4
$num
••5 :
,
••: ;
$num
••< @
)
••@ A
;
••A B
s_Depth
ßß 
.
ßß 
value
ßß 
=
ßß 
EditorGUILayout
ßß  /
.
ßß/ 0

FloatField
ßß0 :
(
ßß: ;
$str
ßß; B
,
ßßB C
s_Depth
ßßD K
)
ßßK L
;
ßßL M
s_Depth
®® 
.
®® 
value
®® 
=
®® 
Mathf
®®  %
.
®®% &
Clamp
®®& +
(
®®+ ,
s_Depth
®®, 3
,
®®3 4
$num
®®5 9
,
®®9 :
$num
®®; A
)
®®A B
;
®®B C
s_RadiusSegments
™™  
.
™™  !
value
™™! &
=
™™' (
EditorGUILayout
™™) 8
.
™™8 9
IntField
™™9 A
(
™™A B
$str
™™B S
,
™™S T
s_RadiusSegments
™™U e
)
™™e f
;
™™f g
s_RadiusSegments
´´  
.
´´  !
value
´´! &
=
´´' (
Mathf
´´) .
.
´´. /
Clamp
´´/ 4
(
´´4 5
s_RadiusSegments
´´5 E
,
´´E F
$num
´´G H
,
´´H I
$num
´´J M
)
´´M N
;
´´N O
s_Angle
≠≠ 
.
≠≠ 
value
≠≠ 
=
≠≠ 
EditorGUILayout
≠≠  /
.
≠≠/ 0

FloatField
≠≠0 :
(
≠≠: ;
$str
≠≠; I
,
≠≠I J
s_Angle
≠≠K R
)
≠≠R S
;
≠≠S T
s_Angle
ÆÆ 
.
ÆÆ 
value
ÆÆ 
=
ÆÆ 
Mathf
ÆÆ  %
.
ÆÆ% &
Clamp
ÆÆ& +
(
ÆÆ+ ,
s_Angle
ÆÆ, 3
,
ÆÆ3 4
$num
ÆÆ5 9
,
ÆÆ9 :
$num
ÆÆ; A
)
ÆÆA B
;
ÆÆB C
if
∞∞ 
(
∞∞ 
s_Angle
∞∞ 
<
∞∞ 
$num
∞∞ "
)
∞∞" #
	s_EndCaps
±± 
.
±± 
value
±± #
=
±±$ %
EditorGUILayout
±±& 5
.
±±5 6
Toggle
±±6 <
(
±±< =
$str
±±= G
,
±±G H
	s_EndCaps
±±I R
)
±±R S
;
±±S T
if
≥≥ 
(
≥≥ 
s_Angle
≥≥ 
>
≥≥ 
$num
≥≥ "
)
≥≥" #
s_RadiusSegments
¥¥ $
.
¥¥$ %
value
¥¥% *
=
¥¥+ ,
System
¥¥- 3
.
¥¥3 4
Math
¥¥4 8
.
¥¥8 9
Max
¥¥9 <
(
¥¥< =
$num
¥¥= >
,
¥¥> ?
s_RadiusSegments
¥¥@ P
)
¥¥P Q
;
¥¥Q R
}
µµ 
public
∑∑ 
override
∑∑ 
ProBuilderMesh
∑∑ *
Build
∑∑+ 0
(
∑∑0 1
bool
∑∑1 5
preview
∑∑6 =
=
∑∑> ?
false
∑∑@ E
)
∑∑E F
{
∏∏ 
return
ππ 
ShapeGenerator
ππ %
.
ππ% &
GenerateArch
ππ& 2
(
ππ2 3
EditorUtility
∫∫ !
.
∫∫! "#
newShapePivotLocation
∫∫" 7
,
∫∫7 8
s_Angle
ªª 
,
ªª 
s_Radius
ºº 
,
ºº 
Mathf
ΩΩ 
.
ΩΩ 
Clamp
ΩΩ 
(
ΩΩ  
s_Width
ΩΩ  '
,
ΩΩ' (
$num
ΩΩ) .
,
ΩΩ. /
s_Radius
ΩΩ0 8
)
ΩΩ8 9
,
ΩΩ9 :
s_Depth
ææ 
,
ææ 
s_RadiusSegments
øø $
+
øø% &
$num
øø' (
,
øø( )
k_InsideFaces
¿¿ !
,
¿¿! "
k_OutsideFaces
¡¡ "
,
¡¡" #
k_FrontFaces
¬¬  
,
¬¬  !
k_BackFaces
√√ 
,
√√  
	s_EndCaps
ƒƒ 
)
ƒƒ 
;
ƒƒ 
}
≈≈ 
}
∆∆ 	
class
»» 
Sphere
»» 
:
»» 
ShapeBuilder
»» #
{
…… 	
[
   
SettingsKey
   
(
   
$str
   7
)
  7 8
]
  8 9
static
ÀÀ 
Pref
ÀÀ 
<
ÀÀ 
float
ÀÀ 
>
ÀÀ 
s_Radius
ÀÀ '
=
ÀÀ( )
new
ÀÀ* -
Pref
ÀÀ. 2
<
ÀÀ2 3
float
ÀÀ3 8
>
ÀÀ8 9
(
ÀÀ9 :
$str
ÀÀ: X
,
ÀÀX Y
$num
ÀÀZ \
,
ÀÀ\ ]
SettingsScope
ÀÀ^ k
.
ÀÀk l
User
ÀÀl p
)
ÀÀp q
;
ÀÀq r
[
ÃÃ 
SettingsKey
ÃÃ 
(
ÃÃ 
$str
ÃÃ =
)
ÃÃ= >
]
ÃÃ> ?
static
ÕÕ 
Pref
ÕÕ 
<
ÕÕ 
int
ÕÕ 
>
ÕÕ 
s_Subdivisions
ÕÕ +
=
ÕÕ, -
new
ÕÕ. 1
Pref
ÕÕ2 6
<
ÕÕ6 7
int
ÕÕ7 :
>
ÕÕ: ;
(
ÕÕ; <
$str
ÕÕ< `
,
ÕÕ` a
$num
ÕÕb c
,
ÕÕc d
SettingsScope
ÕÕe r
.
ÕÕr s
User
ÕÕs w
)
ÕÕw x
;
ÕÕx y
public
œœ 
override
œœ 
void
œœ  
OnGUI
œœ! &
(
œœ& '
)
œœ' (
{
–– 
s_Radius
—— 
.
—— 
value
—— 
=
——  
EditorGUILayout
——! 0
.
——0 1

FloatField
——1 ;
(
——; <
$str
——< D
,
——D E
s_Radius
——F N
.
——N O
value
——O T
)
——T U
;
——U V
s_Radius
““ 
.
““ 
value
““ 
=
““  
Mathf
““! &
.
““& '
Clamp
““' ,
(
““, -
s_Radius
““- 5
.
““5 6
value
““6 ;
,
““; <"
k_MinShapeDimensions
““= Q
.
““Q R
x
““R S
,
““S T"
k_MaxShapeDimensions
““U i
.
““i j
x
““j k
)
““k l
;
““l m
s_Subdivisions
”” 
.
”” 
value
”” $
=
””% &
(
””' (
int
””( +
)
””+ ,
EditorGUILayout
””- <
.
””< =
Slider
””= C
(
””C D
$str
””D R
,
””R S
s_Subdivisions
””T b
,
””b c
$num
””d e
,
””e f
$num
””g h
)
””h i
;
””i j
}
‘‘ 
public
÷÷ 
override
÷÷ 
ProBuilderMesh
÷÷ *
Build
÷÷+ 0
(
÷÷0 1
bool
÷÷1 5
preview
÷÷6 =
=
÷÷> ?
false
÷÷@ E
)
÷÷E F
{
◊◊ 
var
ŸŸ 
mesh
ŸŸ 
=
ŸŸ 
ShapeGenerator
ŸŸ )
.
ŸŸ) *!
GenerateIcosahedron
ŸŸ* =
(
ŸŸ= >
EditorUtility
⁄⁄ %
.
⁄⁄% &#
newShapePivotLocation
⁄⁄& ;
,
⁄⁄; <
s_Radius
€€  
,
€€  !
s_Subdivisions
‹‹ &
,
‹‹& '
!
›› 
preview
››  
)
››  !
;
››! "
if
ﬂﬂ 
(
ﬂﬂ 
!
ﬂﬂ 
preview
ﬂﬂ 
)
ﬂﬂ 
	UVEditing
‡‡ 
.
‡‡ 
ProjectFacesBox
‡‡ -
(
‡‡- .
mesh
‡‡. 2
,
‡‡2 3
mesh
‡‡4 8
.
‡‡8 9
facesInternal
‡‡9 F
)
‡‡F G
;
‡‡G H
for
‚‚ 
(
‚‚ 
int
‚‚ 
i
‚‚ 
=
‚‚ 
$num
‚‚ 
;
‚‚ 
i
‚‚  !
<
‚‚" #
mesh
‚‚$ (
.
‚‚( )
facesInternal
‚‚) 6
.
‚‚6 7
Length
‚‚7 =
;
‚‚= >
i
‚‚? @
++
‚‚@ B
)
‚‚B C
mesh
„„ 
.
„„ 
facesInternal
„„ &
[
„„& '
i
„„' (
]
„„( )
.
„„) *
manualUV
„„* 2
=
„„3 4
true
„„5 9
;
„„9 :
return
ÂÂ 
mesh
ÂÂ 
;
ÂÂ 
}
ÊÊ 
}
ÁÁ 	
class
ÈÈ 
Torus
ÈÈ 
:
ÈÈ 
ShapeBuilder
ÈÈ "
{
ÍÍ 	
[
ÎÎ 
SettingsKey
ÎÎ 
(
ÎÎ 
$str
ÎÎ 6
)
ÎÎ6 7
]
ÎÎ7 8
static
ÏÏ 
Pref
ÏÏ 
<
ÏÏ 
float
ÏÏ 
>
ÏÏ 
s_Radius
ÏÏ '
=
ÏÏ( )
new
ÏÏ* -
Pref
ÏÏ. 2
<
ÏÏ2 3
float
ÏÏ3 8
>
ÏÏ8 9
(
ÏÏ9 :
$str
ÏÏ: W
,
ÏÏW X
$num
ÏÏY [
,
ÏÏ[ \
SettingsScope
ÏÏ] j
.
ÏÏj k
User
ÏÏk o
)
ÏÏo p
;
ÏÏp q
[
ÌÌ 
SettingsKey
ÌÌ 
(
ÌÌ 
$str
ÌÌ :
)
ÌÌ: ;
]
ÌÌ; <
static
ÓÓ 
Pref
ÓÓ 
<
ÓÓ 
float
ÓÓ 
>
ÓÓ 
s_TubeRadius
ÓÓ +
=
ÓÓ, -
new
ÓÓ. 1
Pref
ÓÓ2 6
<
ÓÓ6 7
float
ÓÓ7 <
>
ÓÓ< =
(
ÓÓ= >
$str
ÓÓ> _
,
ÓÓ_ `
$num
ÓÓa d
,
ÓÓd e
SettingsScope
ÓÓf s
.
ÓÓs t
User
ÓÓt x
)
ÓÓx y
;
ÓÓy z
[
ÔÔ 
SettingsKey
ÔÔ 
(
ÔÔ 
$str
ÔÔ 4
)
ÔÔ4 5
]
ÔÔ5 6
static
 
Pref
 
<
 
int
 
>
 
s_Rows
 #
=
$ %
new
& )
Pref
* .
<
. /
int
/ 2
>
2 3
(
3 4
$str
4 O
,
O P
$num
Q S
,
S T
SettingsScope
U b
.
b c
User
c g
)
g h
;
h i
[
ÒÒ 
SettingsKey
ÒÒ 
(
ÒÒ 
$str
ÒÒ 7
)
ÒÒ7 8
]
ÒÒ8 9
static
ÚÚ 
Pref
ÚÚ 
<
ÚÚ 
int
ÚÚ 
>
ÚÚ 
	s_Columns
ÚÚ &
=
ÚÚ' (
new
ÚÚ) ,
Pref
ÚÚ- 1
<
ÚÚ1 2
int
ÚÚ2 5
>
ÚÚ5 6
(
ÚÚ6 7
$str
ÚÚ7 U
,
ÚÚU V
$num
ÚÚW Y
,
ÚÚY Z
SettingsScope
ÚÚ[ h
.
ÚÚh i
User
ÚÚi m
)
ÚÚm n
;
ÚÚn o
[
ÛÛ 
SettingsKey
ÛÛ 
(
ÛÛ 
$str
ÛÛ 6
)
ÛÛ6 7
]
ÛÛ7 8
static
ÙÙ 
Pref
ÙÙ 
<
ÙÙ 
bool
ÙÙ 
>
ÙÙ 
s_Smooth
ÙÙ &
=
ÙÙ' (
new
ÙÙ) ,
Pref
ÙÙ- 1
<
ÙÙ1 2
bool
ÙÙ2 6
>
ÙÙ6 7
(
ÙÙ7 8
$str
ÙÙ8 U
,
ÙÙU V
true
ÙÙW [
,
ÙÙ[ \
SettingsScope
ÙÙ] j
.
ÙÙj k
User
ÙÙk o
)
ÙÙo p
;
ÙÙp q
[
ıı 
SettingsKey
ıı 
(
ıı 
$str
ıı G
)
ııG H
]
ııH I
static
ˆˆ 
Pref
ˆˆ 
<
ˆˆ 
float
ˆˆ 
>
ˆˆ '
s_HorizontalCircumference
ˆˆ 8
=
ˆˆ9 :
new
ˆˆ; >
Pref
ˆˆ? C
<
ˆˆC D
float
ˆˆD I
>
ˆˆI J
(
ˆˆJ K
$str
ˆˆK y
,
ˆˆy z
$num
ˆˆ{ 
,ˆˆ Ä
SettingsScopeˆˆÅ é
.ˆˆé è
Userˆˆè ì
)ˆˆì î
;ˆˆî ï
[
˜˜ 
SettingsKey
˜˜ 
(
˜˜ 
$str
˜˜ E
)
˜˜E F
]
˜˜F G
static
¯¯ 
Pref
¯¯ 
<
¯¯ 
float
¯¯ 
>
¯¯ %
s_VerticalCircumference
¯¯ 6
=
¯¯7 8
new
¯¯9 <
Pref
¯¯= A
<
¯¯A B
float
¯¯B G
>
¯¯G H
(
¯¯H I
$str
¯¯I u
,
¯¯u v
$num
¯¯w {
,
¯¯{ |
SettingsScope¯¯} ä
.¯¯ä ã
User¯¯ã è
)¯¯è ê
;¯¯ê ë
[
˘˘ 
SettingsKey
˘˘ 
(
˘˘ 
$str
˘˘ :
)
˘˘: ;
]
˘˘; <
static
˙˙ 
Pref
˙˙ 
<
˙˙ 
Vector2
˙˙ 
>
˙˙  
s_InnerOuter
˙˙! -
=
˙˙. /
new
˙˙0 3
Pref
˙˙4 8
<
˙˙8 9
Vector2
˙˙9 @
>
˙˙@ A
(
˙˙A B
$str
˙˙B c
,
˙˙c d
new
˙˙e h
Vector2
˙˙i p
(
˙˙p q
$num
˙˙q s
,
˙˙s t
$num
˙˙u x
)
˙˙x y
,
˙˙y z
SettingsScope˙˙{ à
.˙˙à â
User˙˙â ç
)˙˙ç é
;˙˙é è
[
˚˚ 
SettingsKey
˚˚ 
(
˚˚ 
$str
˚˚ 7
)
˚˚7 8
]
˚˚8 9
static
¸¸ 
Pref
¸¸ 
<
¸¸ 
bool
¸¸ 
>
¸¸ #
s_UseInnerOuterMethod
¸¸ 3
=
¸¸4 5
new
¸¸6 9
Pref
¸¸: >
<
¸¸> ?
bool
¸¸? C
>
¸¸C D
(
¸¸D E
$str
¸¸E c
,
¸¸c d
false
¸¸e j
,
¸¸j k
SettingsScope
¸¸l y
.
¸¸y z
User
¸¸z ~
)
¸¸~ 
;¸¸ Ä
public
˛˛ 
override
˛˛ 
void
˛˛  
OnGUI
˛˛! &
(
˛˛& '
)
˛˛' (
{
ˇˇ 
s_Rows
ÄÄ 
.
ÄÄ 
value
ÄÄ 
=
ÄÄ 
EditorGUILayout
ÄÄ .
.
ÄÄ. /
	IntSlider
ÄÄ/ 8
(
ÄÄ8 9
new
ÅÅ 

GUIContent
ÅÅ &
(
ÅÅ& '
$str
ÅÅ' -
,
ÅÅ- .
$str
ÅÅ/ w
)
ÅÅw x
,
ÅÅx y
s_Rows
ÇÇ 
,
ÇÇ 
$num
ÇÇ  !
,
ÇÇ! "
$num
ÇÇ# %
)
ÇÇ% &
;
ÇÇ& '
	s_Columns
ÉÉ 
.
ÉÉ 
value
ÉÉ 
=
ÉÉ  !
EditorGUILayout
ÉÉ" 1
.
ÉÉ1 2
	IntSlider
ÉÉ2 ;
(
ÉÉ; <
new
ÑÑ 

GUIContent
ÑÑ &
(
ÑÑ& '
$str
ÑÑ' 0
,
ÑÑ0 1
$str
ÖÖ g
)
ÖÖg h
,
ÖÖh i
	s_Columns
ÖÖj s
,
ÖÖs t
$num
ÖÖu v
,
ÖÖv w
$num
ÖÖx z
)
ÖÖz {
;
ÖÖ{ |#
s_UseInnerOuterMethod
áá %
.
áá% &
value
áá& +
=
áá, -
EditorGUILayout
áá. =
.
áá= >
Toggle
áá> D
(
ááD E
$str
ááE `
,
áá` a#
s_UseInnerOuterMethod
ááb w
)
ááw x
;
ááx y
if
ââ 
(
ââ 
!
ââ #
s_UseInnerOuterMethod
ââ *
)
ââ* +
{
ää 
s_Radius
ãã 
.
ãã 
value
ãã "
=
ãã# $
EditorGUILayout
ãã% 4
.
ãã4 5

FloatField
ãã5 ?
(
ãã? @
$str
ãã@ H
,
ããH I
s_Radius
ããJ R
)
ããR S
;
ããS T
s_Radius
åå 
.
åå 
value
åå "
=
åå# $
Mathf
åå% *
.
åå* +
Clamp
åå+ 0
(
åå0 1
s_Radius
åå1 9
.
åå9 :
value
åå: ?
,
åå? @"
k_MinShapeDimensions
ååA U
.
ååU V
x
ååV W
,
ååW X"
k_MaxShapeDimensions
ååY m
.
ååm n
x
åån o
)
ååo p
;
ååp q
s_TubeRadius
çç  
.
çç  !
value
çç! &
=
çç' (
UI
çç) +
.
çç+ ,
EditorGUIUtility
çç, <
.
çç< =
Slider
çç= C
(
ççC D
new
ççD G

GUIContent
ççH R
(
ççR S
$str
ççS `
,
çç` a
$strççb Ä
)ççÄ Å
,ççÅ Ç
s_TubeRadiusççÉ è
,ççè ê
$numççë ï
,ççï ñ
s_Radiusççó ü
)ççü †
;çç† °
s_TubeRadius
éé  
.
éé  !
value
éé! &
=
éé' (
Mathf
éé) .
.
éé. /
Clamp
éé/ 4
(
éé4 5
s_TubeRadius
éé5 A
.
ééA B
value
ééB G
,
ééG H"
k_MinShapeDimensions
ééI ]
.
éé] ^
x
éé^ _
,
éé_ `"
k_MaxShapeDimensions
ééa u
.
ééu v
x
éév w
)
ééw x
;
ééx y
}
èè 
else
êê 
{
ëë 
Vector2
íí 

innerOuter
íí &
=
íí' (
s_InnerOuter
íí) 5
;
íí5 6

innerOuter
ìì 
.
ìì 
x
ìì  
=
ìì! "
s_Radius
ìì# +
;
ìì+ ,

innerOuter
îî 
.
îî 
y
îî  
=
îî! "
s_Radius
îî# +
-
îî, -
(
îî. /
s_TubeRadius
îî/ ;
*
îî< =
$num
îî> @
)
îî@ A
;
îîA B

innerOuter
ññ 
.
ññ 
x
ññ  
=
ññ! "
EditorGUILayout
ññ# 2
.
ññ2 3

FloatField
ññ3 =
(
ññ= >
$str
ññ> L
,
ññL M

innerOuter
ññN X
.
ññX Y
x
ññY Z
)
ññZ [
;
ññ[ \

innerOuter
óó 
.
óó 
y
óó  
=
óó! "
UI
óó# %
.
óó% &
EditorGUIUtility
óó& 6
.
óó6 7
Slider
óó7 =
(
óó= >
new
óó> A

GUIContent
óóB L
(
óóL M
$str
óóM [
,
óó[ \
$stróó] å
)óóå ç
,óóç é

innerOuteróóè ô
.óóô ö
yóóö õ
,óóõ ú
$numóóù ¢
,óó¢ £

innerOuteróó§ Æ
.óóÆ Ø
xóóØ ∞
)óó∞ ±
;óó± ≤
s_Radius
ôô 
.
ôô 
value
ôô "
=
ôô# $

innerOuter
ôô% /
.
ôô/ 0
x
ôô0 1
;
ôô1 2
s_TubeRadius
öö  
.
öö  !
value
öö! &
=
öö' (
(
öö) *

innerOuter
öö* 4
.
öö4 5
x
öö5 6
-
öö7 8

innerOuter
öö9 C
.
ööC D
y
ööD E
)
ööE F
*
ööG H
$num
ööI L
;
ööL M
s_InnerOuter
õõ  
.
õõ  !
value
õõ! &
=
õõ' (

innerOuter
õõ) 3
;
õõ3 4
}
úú '
s_HorizontalCircumference
ûû )
.
ûû) *
value
ûû* /
=
ûû0 1
EditorGUILayout
ûû2 A
.
ûûA B
Slider
ûûB H
(
ûûH I
$str
ûûI c
,
ûûc d'
s_HorizontalCircumference
ûûe ~
,
ûû~ 
$numûûÄ Ñ
,ûûÑ Ö
$numûûÜ ä
)ûûä ã
;ûûã å%
s_VerticalCircumference
üü '
.
üü' (
value
üü( -
=
üü. /
EditorGUILayout
üü0 ?
.
üü? @
Slider
üü@ F
(
üüF G
$str
üüG _
,
üü_ `%
s_VerticalCircumference
üüa x
,
üüx y
$num
üüz ~
,
üü~ 
$numüüÄ Ñ
)üüÑ Ö
;üüÖ Ü
s_Smooth
°° 
.
°° 
value
°° 
=
°°  
EditorGUILayout
°°! 0
.
°°0 1
Toggle
°°1 7
(
°°7 8
$str
°°8 @
,
°°@ A
s_Smooth
°°B J
)
°°J K
;
°°K L
}
¢¢ 
public
§§ 
override
§§ 
ProBuilderMesh
§§ *
Build
§§+ 0
(
§§0 1
bool
§§1 5
	isPreview
§§6 ?
=
§§@ A
false
§§B G
)
§§G H
{
•• 
var
¶¶ 
mesh
¶¶ 
=
¶¶ 
ShapeGenerator
¶¶ )
.
¶¶) *
GenerateTorus
¶¶* 7
(
¶¶7 8
EditorUtility
ßß %
.
ßß% &#
newShapePivotLocation
ßß& ;
,
ßß; <
s_Rows
®® 
,
®® 
	s_Columns
©© !
,
©©! "
s_Radius
™™  
,
™™  !
s_TubeRadius
´´ $
,
´´$ %
s_Smooth
¨¨  
,
¨¨  !'
s_HorizontalCircumference
≠≠ 1
,
≠≠1 2%
s_VerticalCircumference
ÆÆ /
,
ÆÆ/ 0
true
ØØ 
)
ØØ 
;
ØØ 
	UVEditing
±± 
.
±± 
ProjectFacesBox
±± )
(
±±) *
mesh
±±* .
,
±±. /
mesh
±±0 4
.
±±4 5
facesInternal
±±5 B
)
±±B C
;
±±C D
return
≥≥ 
mesh
≥≥ 
;
≥≥ 
}
¥¥ 
}
µµ 	
}
∂∂ 
}∑∑ ÈÈ
ùD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\MeshAndElementSelection.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
abstract 
class #
MeshAndElementSelection *
{ 
ProBuilderMesh 
m_Mesh 
; 
List 
< 
ElementGroup 
> 
m_ElementGroups *
;* +
public 
ProBuilderMesh 
mesh "
{ 	
get 
{ 
return 
m_Mesh 
;  
}! "
} 	
public 
List 
< 
ElementGroup  
>  !
elementGroups" /
{ 	
get 
{ 
return 
m_ElementGroups (
;( )
}* +
} 	
public #
MeshAndElementSelection &
(& '
ProBuilderMesh' 5
mesh6 :
,: ;
bool< @$
collectCoincidentIndicesA Y
)Y Z
{ 	
m_Mesh 
= 
mesh 
; 
m_ElementGroups 
= 
ElementGroup *
.* +
GetElementGroups+ ;
(; <
mesh< @
,@ A$
collectCoincidentIndicesB Z
)Z [
;[ \
}   	
}!! 
class## 	
ElementGroup##
 
{$$ 
List%% 
<%% 
int%% 
>%% 
	m_Indices%% 
;%% 
Vector3&& 

m_Position&& 
;&& 

Quaternion'' 

m_Rotation'' 
;'' 
public,, 
Vector3,, 
position,, 
{-- 	
get.. 
{.. 
return.. 

m_Position.. #
;..# $
}..% &
}// 	
public44 

Quaternion44 
rotation44 "
{55 	
get66 
{66 
return66 

m_Rotation66 #
;66# $
}66% &
}77 	
public99 
IEnumerable99 
<99 
int99 
>99 
indices99  '
{:: 	
get;; 
{;; 
return;; 
	m_Indices;; "
;;;" #
};;$ %
}<< 	
public>> 
ElementGroup>> 
(>> 
List>>  
<>>  !
int>>! $
>>>$ %
indices>>& -
,>>- .
Vector3>>/ 6
pivot>>7 <
,>>< =

Quaternion>>> H
rotation>>I Q
)>>Q R
{?? 	
	m_Indices@@ 
=@@ 
indices@@ 
;@@  

m_PositionAA 
=AA 
pivotAA 
;AA 

m_RotationBB 
=BB 
rotationBB !
;BB! "
}CC 	
publicEE 
staticEE 
ListEE 
<EE 
ElementGroupEE '
>EE' (
GetElementGroupsEE) 9
(EE9 :
ProBuilderMeshEE: H
meshEEI M
,EEM N
boolEEO S
collectCoincidentEET e
)EEe f
{FF 	
varGG 
groupsGG 
=GG 
newGG 
ListGG !
<GG! "
ElementGroupGG" .
>GG. /
(GG/ 0
)GG0 1
;GG1 2
varHH 

selectModeHH 
=HH 
ProBuilderEditorHH -
.HH- .

selectModeHH. 8
;HH8 9
ifJJ 
(JJ 

selectModeJJ 
.JJ 
ContainsFlagJJ '
(JJ' (

SelectModeJJ( 2
.JJ2 3
VertexJJ3 9
|JJ: ;

SelectModeJJ< F
.JJF G
TextureVertexJJG T
)JJT U
)JJU V
{KK 
foreachLL 
(LL 
varLL 
listLL !
inLL" $$
GetVertexSelectionGroupsLL% =
(LL= >
meshLL> B
,LLB C
collectCoincidentLLD U
)LLU V
)LLV W
{MM 
varNN 
posNN 
=NN 
PHandleUtilityNN ,
.NN, -$
GetActiveElementPositionNN- E
(NNE F
meshNNF J
,NNJ K
listNNL P
)NNP Q
;NNQ R
varOO 
rotOO 
=OO 
PHandleUtilityOO ,
.OO, -
GetVertexRotationOO- >
(OO> ?
meshOO? C
,OOC D
HandleOrientationOOE V
.OOV W
ActiveElementOOW d
,OOd e
listOOf j
)OOj k
;OOk l
groupsPP 
.PP 
AddPP 
(PP 
newPP "
ElementGroupPP# /
(PP/ 0
listPP0 4
,PP4 5
posPP6 9
,PP9 :
rotPP; >
)PP> ?
)PP? @
;PP@ A
}QQ 
}RR 
elseSS 
ifSS 
(SS 

selectModeSS 
.SS  
ContainsFlagSS  ,
(SS, -

SelectModeSS- 7
.SS7 8
EdgeSS8 <
|SS= >

SelectModeSS? I
.SSI J
TextureEdgeSSJ U
)SSU V
)SSV W
{TT 
foreachUU 
(UU 
varUU 
listUU !
inUU" $"
GetEdgeSelectionGroupsUU% ;
(UU; <
meshUU< @
)UU@ A
)UUA B
{VV 
varWW 
posWW 
=WW 
PHandleUtilityWW ,
.WW, -$
GetActiveElementPositionWW- E
(WWE F
meshWWF J
,WWJ K
listWWL P
)WWP Q
;WWQ R
varXX 
rotXX 
=XX 
PHandleUtilityXX ,
.XX, -
GetEdgeRotationXX- <
(XX< =
meshXX= A
,XXA B
HandleOrientationXXC T
.XXT U
ActiveElementXXU b
,XXb c
listXXd h
)XXh i
;XXi j
ListZZ 
<ZZ 
intZZ 
>ZZ 
indicesZZ %
;ZZ% &
if\\ 
(\\ 
collectCoincident\\ )
)\\) *
{]] 
indices^^ 
=^^  !
new^^" %
List^^& *
<^^* +
int^^+ .
>^^. /
(^^/ 0
)^^0 1
;^^1 2
mesh__ 
.__ !
GetCoincidentVertices__ 2
(__2 3
list__3 7
,__7 8
indices__9 @
)__@ A
;__A B
}`` 
elseaa 
{bb 
indicescc 
=cc  !
listcc" &
.cc& '

SelectManycc' 1
(cc1 2
xcc2 3
=>cc4 6
newcc7 :
intcc; >
[cc> ?
]cc? @
{ccA B
xccC D
.ccD E
accE F
,ccF G
xccH I
.ccI J
bccJ K
}ccL M
)ccM N
.ccN O
ToListccO U
(ccU V
)ccV W
;ccW X
}dd 
groupsff 
.ff 
Addff 
(ff 
newff "
ElementGroupff# /
(ff/ 0
indicesff0 7
,ff7 8
posff9 <
,ff< =
rotff> A
)ffA B
)ffB C
;ffC D
}gg 
}hh 
elseii 
ifii 
(ii 

selectModeii 
.ii  
ContainsFlagii  ,
(ii, -

SelectModeii- 7
.ii7 8
Faceii8 <
|ii= >

SelectModeii? I
.iiI J
TextureFaceiiJ U
)iiU V
)iiV W
{jj 
foreachkk 
(kk 
varkk 
listkk !
inkk" $"
GetFaceSelectionGroupskk% ;
(kk; <
meshkk< @
)kk@ A
)kkA B
{ll 
varmm 
posmm 
=mm 
PHandleUtilitymm ,
.mm, -$
GetActiveElementPositionmm- E
(mmE F
meshmmF J
,mmJ K
listmmL P
)mmP Q
;mmQ R
varnn 
rotnn 
=nn 
PHandleUtilitynn ,
.nn, -
GetFaceRotationnn- <
(nn< =
meshnn= A
,nnA B
HandleOrientationnnC T
.nnT U
ActiveElementnnU b
,nnb c
listnnd h
)nnh i
;nni j
Listoo 
<oo 
intoo 
>oo 
indicesoo %
;oo% &
ifqq 
(qq 
collectCoincidentqq )
)qq) *
{rr 
indicesss 
=ss  !
newss" %
Listss& *
<ss* +
intss+ .
>ss. /
(ss/ 0
)ss0 1
;ss1 2
meshtt 
.tt !
GetCoincidentVerticestt 2
(tt2 3
listtt3 7
,tt7 8
indicestt9 @
)tt@ A
;ttA B
}uu 
elsevv 
{ww 
indicesxx 
=xx  !
listxx" &
.xx& '

SelectManyxx' 1
(xx1 2
xxx2 3
=>xx4 6
xxx7 8
.xx8 9#
distinctIndexesInternalxx9 P
)xxP Q
.xxQ R
ToListxxR X
(xxX Y
)xxY Z
;xxZ [
}yy 
groups{{ 
.{{ 
Add{{ 
({{ 
new{{ "
ElementGroup{{# /
({{/ 0
indices{{0 7
,{{7 8
pos{{9 <
,{{< =
rot{{> A
){{A B
){{B C
;{{C D
}|| 
}}} 
return 
groups 
; 
}
ÄÄ 	
static
ÇÇ 
IEnumerable
ÇÇ 
<
ÇÇ 
List
ÇÇ 
<
ÇÇ  
Face
ÇÇ  $
>
ÇÇ$ %
>
ÇÇ% &$
GetFaceSelectionGroups
ÇÇ' =
(
ÇÇ= >
ProBuilderMesh
ÇÇ> L
mesh
ÇÇM Q
)
ÇÇQ R
{
ÉÉ 	
var
ÑÑ 
wings
ÑÑ 
=
ÑÑ 

WingedEdge
ÑÑ "
.
ÑÑ" #
GetWingedEdges
ÑÑ# 1
(
ÑÑ1 2
mesh
ÑÑ2 6
,
ÑÑ6 7
mesh
ÑÑ8 <
.
ÑÑ< =#
selectedFacesInternal
ÑÑ= R
,
ÑÑR S
true
ÑÑT X
)
ÑÑX Y
;
ÑÑY Z
var
ÖÖ 
filter
ÖÖ 
=
ÖÖ 
new
ÖÖ 
HashSet
ÖÖ $
<
ÖÖ$ %
Face
ÖÖ% )
>
ÖÖ) *
(
ÖÖ* +
)
ÖÖ+ ,
;
ÖÖ, -
var
ÜÜ 
groups
ÜÜ 
=
ÜÜ 
new
ÜÜ 
List
ÜÜ !
<
ÜÜ! "
List
ÜÜ" &
<
ÜÜ& '
Face
ÜÜ' +
>
ÜÜ+ ,
>
ÜÜ, -
(
ÜÜ- .
)
ÜÜ. /
;
ÜÜ/ 0
var
áá 
groupIdx
áá 
=
áá 
-
áá 
$num
áá 
;
áá 
var
àà 
i
àà 
=
àà 
-
àà 
$num
àà 
;
àà 
foreach
ää 
(
ää 
var
ää 
wing
ää 
in
ää  
wings
ää! &
)
ää& '
{
ãã 
var
åå 
group
åå 
=
åå 
new
åå 
List
åå  $
<
åå$ %
Face
åå% )
>
åå) *
(
åå* +
)
åå+ ,
{
åå- .
}
åå. /
;
åå/ 0"
CollectAdjacentFaces
çç $
(
çç$ %
wing
çç% )
,
çç) *
filter
çç+ 1
,
çç1 2
group
çç3 8
)
çç8 9
;
çç9 :
if
éé 
(
éé 
group
éé 
.
éé 
Count
éé 
>
éé  !
$num
éé" #
)
éé# $
{
èè 
i
êê 
++
êê 
;
êê 
var
íí 
idx
íí 
=
íí 
group
íí #
.
íí# $
IndexOf
íí$ +
(
íí+ ,
mesh
íí, 0
.
íí0 1#
selectedFacesInternal
íí1 F
[
ííF G
mesh
ííG K
.
ííK L#
selectedFacesInternal
ííL a
.
íía b
Length
ííb h
-
ííi j
$num
íík l
]
ííl m
)
íím n
;
íín o
if
ìì 
(
ìì 
idx
ìì 
!=
ìì 
-
ìì  
$num
ìì  !
&&
ìì" $
idx
ìì% (
<
ìì) *
group
ìì+ 0
.
ìì0 1
Count
ìì1 6
)
ìì6 7
{
îî 
var
ïï 
item
ïï  
=
ïï! "
group
ïï# (
[
ïï( )
idx
ïï) ,
]
ïï, -
;
ïï- .
groupIdx
ññ  
=
ññ! "
i
ññ# $
;
ññ$ %
group
óó 
[
óó 
idx
óó !
]
óó! "
=
óó# $
group
óó% *
[
óó* +
group
óó+ 0
.
óó0 1
Count
óó1 6
-
óó7 8
$num
óó9 :
]
óó: ;
;
óó; <
group
òò 
[
òò 
group
òò #
.
òò# $
Count
òò$ )
-
òò* +
$num
òò, -
]
òò- .
=
òò/ 0
item
òò1 5
;
òò5 6
}
ôô 
groups
öö 
.
öö 
Add
öö 
(
öö 
group
öö $
)
öö$ %
;
öö% &
}
õõ 
}
úú 
if
ûû 
(
ûû 
groupIdx
ûû 
!=
ûû 
-
ûû 
$num
ûû 
&&
ûû !
groupIdx
ûû" *
<
ûû+ ,
groups
ûû- 3
.
ûû3 4
Count
ûû4 9
)
ûû9 :
{
üü 
var
†† 
item
†† 
=
†† 
groups
†† !
[
††! "
groupIdx
††" *
]
††* +
;
††+ ,
groups
°° 
[
°° 
groupIdx
°° 
]
°°  
=
°°! "
groups
°°# )
[
°°) *
groups
°°* 0
.
°°0 1
Count
°°1 6
-
°°7 8
$num
°°9 :
]
°°: ;
;
°°; <
groups
¢¢ 
[
¢¢ 
groups
¢¢ 
.
¢¢ 
Count
¢¢ #
-
¢¢$ %
$num
¢¢& '
]
¢¢' (
=
¢¢) *
item
¢¢+ /
;
¢¢/ 0
}
££ 
return
•• 
groups
•• 
;
•• 
}
¶¶ 	
static
®® 
IEnumerable
®® 
<
®® 
List
®® 
<
®®  
int
®®  #
>
®®# $
>
®®$ %&
GetVertexSelectionGroups
®®& >
(
®®> ?
ProBuilderMesh
®®? M
mesh
®®N R
,
®®R S
bool
®®T X
collectCoincident
®®Y j
)
®®j k
{
©© 	
if
™™ 
(
™™ 
!
™™ 
collectCoincident
™™ "
)
™™" #
return
´´ 
mesh
´´ 
.
´´ %
selectedIndexesInternal
´´ 3
.
´´3 4
Select
´´4 :
(
´´: ;
x
´´; <
=>
´´= ?
new
´´@ C
List
´´D H
<
´´H I
int
´´I L
>
´´L M
(
´´M N
)
´´N O
{
´´P Q
x
´´R S
}
´´T U
)
´´U V
.
´´V W
ToList
´´W ]
(
´´] ^
)
´´^ _
;
´´_ `
var
≠≠ 
shared
≠≠ 
=
≠≠ 
mesh
≠≠ 
.
≠≠ $
selectedSharedVertices
≠≠ 4
;
≠≠4 5
var
ØØ 
groups
ØØ 
=
ØØ 
new
ØØ 
List
ØØ !
<
ØØ! "
List
ØØ" &
<
ØØ& '
int
ØØ' *
>
ØØ* +
>
ØØ+ ,
(
ØØ, -
)
ØØ- .
;
ØØ. /
var
∞∞ 
groupIdx
∞∞ 
=
∞∞ 
-
∞∞ 
$num
∞∞ 
;
∞∞ 
var
±± 
i
±± 
=
±± 
-
±± 
$num
±± 
;
±± 
foreach
≤≤ 
(
≤≤ 
var
≤≤ 
index
≤≤ 
in
≤≤ !
shared
≤≤" (
)
≤≤( )
{
≥≥ 
var
¥¥ 

coincident
¥¥ 
=
¥¥  
new
¥¥! $
List
¥¥% )
<
¥¥) *
int
¥¥* -
>
¥¥- .
(
¥¥. /
)
¥¥/ 0
;
¥¥0 1
mesh
µµ 
.
µµ #
GetCoincidentVertices
µµ *
(
µµ* +
mesh
µµ+ /
.
µµ/ 0$
sharedVerticesInternal
µµ0 F
[
µµF G
index
µµG L
]
µµL M
[
µµM N
$num
µµN O
]
µµO P
,
µµP Q

coincident
µµR \
)
µµ\ ]
;
µµ] ^
groups
∂∂ 
.
∂∂ 
Add
∂∂ 
(
∂∂ 

coincident
∂∂ %
)
∂∂% &
;
∂∂& '
i
∑∑ 
++
∑∑ 
;
∑∑ 
var
ππ 
idx
ππ 
=
ππ 

coincident
ππ $
.
ππ$ %
IndexOf
ππ% ,
(
ππ, -
mesh
ππ- 1
.
ππ1 2%
selectedIndexesInternal
ππ2 I
[
ππI J
mesh
ππJ N
.
ππN O%
selectedIndexesInternal
ππO f
.
ππf g
Length
ππg m
-
ππn o
$num
ππp q
]
ππq r
)
ππr s
;
ππs t
if
∫∫ 
(
∫∫ 
idx
∫∫ 
!=
∫∫ 
-
∫∫ 
$num
∫∫ 
&&
∫∫  
idx
∫∫! $
<
∫∫% &

coincident
∫∫' 1
.
∫∫1 2
Count
∫∫2 7
)
∫∫7 8
{
ªª 
var
ºº 
item
ºº 
=
ºº 

coincident
ºº )
[
ºº) *
idx
ºº* -
]
ºº- .
;
ºº. /
groupIdx
ΩΩ 
=
ΩΩ 
i
ΩΩ  
;
ΩΩ  !

coincident
ææ 
[
ææ 
idx
ææ "
]
ææ" #
=
ææ$ %

coincident
ææ& 0
[
ææ0 1

coincident
ææ1 ;
.
ææ; <
Count
ææ< A
-
ææB C
$num
ææD E
]
ææE F
;
ææF G

coincident
øø 
[
øø 

coincident
øø )
.
øø) *
Count
øø* /
-
øø0 1
$num
øø2 3
]
øø3 4
=
øø5 6
item
øø7 ;
;
øø; <
}
¿¿ 
}
¡¡ 
if
ƒƒ 
(
ƒƒ 
groupIdx
ƒƒ 
!=
ƒƒ 
-
ƒƒ 
$num
ƒƒ 
&&
ƒƒ !
groupIdx
ƒƒ" *
<
ƒƒ+ ,
groups
ƒƒ- 3
.
ƒƒ3 4
Count
ƒƒ4 9
)
ƒƒ9 :
{
≈≈ 
var
∆∆ 
item
∆∆ 
=
∆∆ 
groups
∆∆ !
[
∆∆! "
groupIdx
∆∆" *
]
∆∆* +
;
∆∆+ ,
groups
«« 
[
«« 
groupIdx
«« 
]
««  
=
««! "
groups
««# )
[
««) *
groups
««* 0
.
««0 1
Count
««1 6
-
««7 8
$num
««9 :
]
««: ;
;
««; <
groups
»» 
[
»» 
groups
»» 
.
»» 
Count
»» #
-
»»$ %
$num
»»& '
]
»»' (
=
»») *
item
»»+ /
;
»»/ 0
}
…… 
return
ÀÀ 
groups
ÀÀ 
;
ÀÀ 
}
ÃÃ 	
static
ŒŒ 
IEnumerable
ŒŒ 
<
ŒŒ 
List
ŒŒ 
<
ŒŒ  
Edge
ŒŒ  $
>
ŒŒ$ %
>
ŒŒ% &$
GetEdgeSelectionGroups
ŒŒ' =
(
ŒŒ= >
ProBuilderMesh
ŒŒ> L
mesh
ŒŒM Q
)
ŒŒQ R
{
œœ 	
var
–– 
edges
–– 
=
–– 

EdgeLookup
–– "
.
––" #
GetEdgeLookup
––# 0
(
––0 1
mesh
––1 5
.
––5 6#
selectedEdgesInternal
––6 K
,
––K L
mesh
––M Q
.
––Q R 
sharedVertexLookup
––R d
)
––d e
;
––e f
var
—— 
groups
—— 
=
—— 
new
—— 
List
—— !
<
——! "
SimpleTuple
——" -
<
——- .
HashSet
——. 5
<
——5 6
int
——6 9
>
——9 :
,
——: ;
List
——< @
<
——@ A
Edge
——A E
>
——E F
>
——F G
>
——G H
(
——H I
)
——I J
;
——J K
foreach
”” 
(
”” 
var
”” 
edge
”” 
in
””  
edges
””! &
)
””& '
{
‘‘ 
var
’’ 

foundMatch
’’ 
=
’’  
false
’’! &
;
’’& '
foreach
◊◊ 
(
◊◊ 
var
◊◊ 
kvp
◊◊  
in
◊◊! #
groups
◊◊$ *
)
◊◊* +
{
ÿÿ 
if
ŸŸ 
(
ŸŸ 
kvp
ŸŸ 
.
ŸŸ 
item1
ŸŸ !
.
ŸŸ! "
Contains
ŸŸ" *
(
ŸŸ* +
edge
ŸŸ+ /
.
ŸŸ/ 0
common
ŸŸ0 6
.
ŸŸ6 7
a
ŸŸ7 8
)
ŸŸ8 9
||
ŸŸ: <
kvp
ŸŸ= @
.
ŸŸ@ A
item1
ŸŸA F
.
ŸŸF G
Contains
ŸŸG O
(
ŸŸO P
edge
ŸŸP T
.
ŸŸT U
common
ŸŸU [
.
ŸŸ[ \
b
ŸŸ\ ]
)
ŸŸ] ^
)
ŸŸ^ _
{
⁄⁄ 
kvp
€€ 
.
€€ 
item1
€€ !
.
€€! "
Add
€€" %
(
€€% &
edge
€€& *
.
€€* +
common
€€+ 1
.
€€1 2
a
€€2 3
)
€€3 4
;
€€4 5
kvp
‹‹ 
.
‹‹ 
item1
‹‹ !
.
‹‹! "
Add
‹‹" %
(
‹‹% &
edge
‹‹& *
.
‹‹* +
common
‹‹+ 1
.
‹‹1 2
b
‹‹2 3
)
‹‹3 4
;
‹‹4 5
kvp
›› 
.
›› 
item2
›› !
.
››! "
Add
››" %
(
››% &
edge
››& *
.
››* +
local
››+ 0
)
››0 1
;
››1 2

foundMatch
ﬁﬁ "
=
ﬁﬁ# $
true
ﬁﬁ% )
;
ﬁﬁ) *
break
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 
}
·· 
if
„„ 
(
„„ 
!
„„ 

foundMatch
„„ 
)
„„  
groups
‰‰ 
.
‰‰ 
Add
‰‰ 
(
‰‰ 
new
‰‰ "
SimpleTuple
‰‰# .
<
‰‰. /
HashSet
‰‰/ 6
<
‰‰6 7
int
‰‰7 :
>
‰‰: ;
,
‰‰; <
List
‰‰= A
<
‰‰A B
Edge
‰‰B F
>
‰‰F G
>
‰‰G H
(
‰‰H I
new
ÂÂ 
HashSet
ÂÂ #
<
ÂÂ# $
int
ÂÂ$ '
>
ÂÂ' (
(
ÂÂ( )
)
ÂÂ) *
{
ÂÂ+ ,
edge
ÂÂ- 1
.
ÂÂ1 2
common
ÂÂ2 8
.
ÂÂ8 9
a
ÂÂ9 :
,
ÂÂ: ;
edge
ÂÂ< @
.
ÂÂ@ A
common
ÂÂA G
.
ÂÂG H
b
ÂÂH I
}
ÂÂJ K
,
ÂÂK L
new
ÊÊ 
List
ÊÊ  
<
ÊÊ  !
Edge
ÊÊ! %
>
ÊÊ% &
(
ÊÊ& '
)
ÊÊ' (
{
ÊÊ) *
edge
ÊÊ+ /
.
ÊÊ/ 0
local
ÊÊ0 5
}
ÊÊ6 7
)
ÊÊ7 8
)
ÊÊ8 9
;
ÊÊ9 :
}
ÁÁ 
var
ÎÎ 
res
ÎÎ 
=
ÎÎ 
new
ÎÎ 
List
ÎÎ 
<
ÎÎ 
List
ÎÎ #
<
ÎÎ# $
Edge
ÎÎ$ (
>
ÎÎ( )
>
ÎÎ) *
(
ÎÎ* +
)
ÎÎ+ ,
;
ÎÎ, -
var
ÏÏ 
overlap
ÏÏ 
=
ÏÏ 
new
ÏÏ 
HashSet
ÏÏ %
<
ÏÏ% &
int
ÏÏ& )
>
ÏÏ) *
(
ÏÏ* +
)
ÏÏ+ ,
;
ÏÏ, -
var
ÌÌ 
j
ÌÌ 
=
ÌÌ 
-
ÌÌ 
$num
ÌÌ 
;
ÌÌ 
var
ÓÓ 
groupIdx
ÓÓ 
=
ÓÓ 
-
ÓÓ 
$num
ÓÓ 
;
ÓÓ 
for
 
(
 
int
 
i
 
=
 
$num
 
,
 
c
 
=
 
groups
  &
.
& '
Count
' ,
;
, -
i
. /
<
0 1
c
2 3
;
3 4
i
5 6
++
6 8
)
8 9
{
ÒÒ 
if
ÚÚ 
(
ÚÚ 
overlap
ÚÚ 
.
ÚÚ 
Contains
ÚÚ $
(
ÚÚ$ %
i
ÚÚ% &
)
ÚÚ& '
)
ÚÚ' (
continue
ÛÛ 
;
ÛÛ 
List
ıı 
<
ıı 
Edge
ıı 
>
ıı 
grp
ıı 
=
ıı  
groups
ıı! '
[
ıı' (
i
ıı( )
]
ıı) *
.
ıı* +
item2
ıı+ 0
;
ıı0 1
for
˜˜ 
(
˜˜ 
int
˜˜ 
n
˜˜ 
=
˜˜ 
i
˜˜ 
+
˜˜  
$num
˜˜! "
;
˜˜" #
n
˜˜$ %
<
˜˜& '
c
˜˜( )
;
˜˜) *
n
˜˜+ ,
++
˜˜, .
)
˜˜. /
{
¯¯ 
if
˘˘ 
(
˘˘ 
groups
˘˘ 
[
˘˘ 
i
˘˘  
]
˘˘  !
.
˘˘! "
item1
˘˘" '
.
˘˘' (
Overlaps
˘˘( 0
(
˘˘0 1
groups
˘˘1 7
[
˘˘7 8
n
˘˘8 9
]
˘˘9 :
.
˘˘: ;
item1
˘˘; @
)
˘˘@ A
)
˘˘A B
{
˙˙ 
overlap
˚˚ 
.
˚˚  
Add
˚˚  #
(
˚˚# $
n
˚˚$ %
)
˚˚% &
;
˚˚& '
grp
¸¸ 
.
¸¸ 
AddRange
¸¸ $
(
¸¸$ %
groups
¸¸% +
[
¸¸+ ,
n
¸¸, -
]
¸¸- .
.
¸¸. /
item2
¸¸/ 4
)
¸¸4 5
;
¸¸5 6
}
˝˝ 
}
˛˛ 
j
ˇˇ 
++
ˇˇ 
;
ˇˇ 
var
ÅÅ 
idx
ÅÅ 
=
ÅÅ 
grp
ÅÅ 
.
ÅÅ 
IndexOf
ÅÅ %
(
ÅÅ% &
mesh
ÅÅ& *
.
ÅÅ* +#
selectedEdgesInternal
ÅÅ+ @
[
ÅÅ@ A
mesh
ÅÅA E
.
ÅÅE F#
selectedEdgesInternal
ÅÅF [
.
ÅÅ[ \
Length
ÅÅ\ b
-
ÅÅc d
$num
ÅÅe f
]
ÅÅf g
)
ÅÅg h
;
ÅÅh i
if
ÇÇ 
(
ÇÇ 
idx
ÇÇ 
!=
ÇÇ 
-
ÇÇ 
$num
ÇÇ 
&&
ÇÇ  
idx
ÇÇ! $
<
ÇÇ% &
grp
ÇÇ' *
.
ÇÇ* +
Count
ÇÇ+ 0
)
ÇÇ0 1
{
ÉÉ 
var
ÑÑ 
item
ÑÑ 
=
ÑÑ 
grp
ÑÑ "
[
ÑÑ" #
idx
ÑÑ# &
]
ÑÑ& '
;
ÑÑ' (
groupIdx
ÖÖ 
=
ÖÖ 
j
ÖÖ  
;
ÖÖ  !
grp
ÜÜ 
[
ÜÜ 
idx
ÜÜ 
]
ÜÜ 
=
ÜÜ 
grp
ÜÜ "
[
ÜÜ" #
grp
ÜÜ# &
.
ÜÜ& '
Count
ÜÜ' ,
-
ÜÜ- .
$num
ÜÜ/ 0
]
ÜÜ0 1
;
ÜÜ1 2
grp
áá 
[
áá 
grp
áá 
.
áá 
Count
áá !
-
áá" #
$num
áá$ %
]
áá% &
=
áá' (
item
áá) -
;
áá- .
}
àà 
res
ââ 
.
ââ 
Add
ââ 
(
ââ 
grp
ââ 
)
ââ 
;
ââ 
}
ää 
if
çç 
(
çç 
groupIdx
çç 
!=
çç 
-
çç 
$num
çç 
&&
çç !
groupIdx
çç" *
<
çç+ ,
res
çç- 0
.
çç0 1
Count
çç1 6
)
çç6 7
{
éé 
var
èè 
item
èè 
=
èè 
res
èè 
[
èè 
groupIdx
èè '
]
èè' (
;
èè( )
res
êê 
[
êê 
groupIdx
êê 
]
êê 
=
êê 
res
êê  #
[
êê# $
res
êê$ '
.
êê' (
Count
êê( -
-
êê. /
$num
êê0 1
]
êê1 2
;
êê2 3
res
ëë 
[
ëë 
res
ëë 
.
ëë 
Count
ëë 
-
ëë 
$num
ëë  !
]
ëë! "
=
ëë# $
item
ëë% )
;
ëë) *
}
íí 
return
îî 
res
îî 
;
îî 
}
ïï 	
static
óó 
void
óó "
CollectAdjacentFaces
óó (
(
óó( )

WingedEdge
óó) 3
wing
óó4 8
,
óó8 9
HashSet
óó: A
<
óóA B
Face
óóB F
>
óóF G
filter
óóH N
,
óóN O
List
óóP T
<
óóT U
Face
óóU Y
>
óóY Z
group
óó[ `
)
óó` a
{
òò 	
if
ôô 
(
ôô 
!
ôô 
filter
ôô 
.
ôô 
Add
ôô 
(
ôô 
wing
ôô  
.
ôô  !
face
ôô! %
)
ôô% &
)
ôô& '
return
öö 
;
öö 
group
úú 
.
úú 
Add
úú 
(
úú 
wing
úú 
.
úú 
face
úú 
)
úú  
;
úú  !
var
ûû 

enumerator
ûû 
=
ûû 
new
ûû  "
WingedEdgeEnumerator
ûû! 5
(
ûû5 6
wing
ûû6 :
)
ûû: ;
;
ûû; <
while
†† 
(
†† 

enumerator
†† 
.
†† 
MoveNext
†† &
(
††& '
)
††' (
)
††( )
{
°° 
var
¢¢ 
opposite
¢¢ 
=
¢¢ 

enumerator
¢¢ )
.
¢¢) *
Current
¢¢* 1
.
¢¢1 2
opposite
¢¢2 :
;
¢¢: ;
if
££ 
(
££ 
opposite
££ 
==
££ 
null
££  $
)
££$ %
continue
§§ 
;
§§ "
CollectAdjacentFaces
•• $
(
••$ %
opposite
••% -
,
••- .
filter
••/ 5
,
••5 6
group
••7 <
)
••< =
;
••= >
}
¶¶ 
}
ßß 	
}
®® 
}©© †W
íD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\PositionTool.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{		 
abstract

 
class

 
PositionTool

 
:

  !"
VertexManipulationTool

" 8
{ 
[ 	
UserSetting	 
( 
$str 
, 
$str  2
,2 3
$str4 z
)z {
]{ |
static 
Pref 
< 
bool 
> 
s_ShowHandleInfo *
=+ ,
new- 0
Pref1 5
<5 6
bool6 :
>: ;
(; <
$str< T
,T U
falseV [
,[ \
SettingsScope] j
.j k
Userk o
)o p
;p q
	protected 
bool 
showHandleInfo %
{ 	
get 
{ 
return 
s_ShowHandleInfo )
.) *
value* /
;/ 0
}1 2
} 	
	protected 
void 
DrawDeltaInfo $
($ %
string% +
text, 0
)0 1
{ 	
Handles 
. 
BeginGUI 
( 
) 
; 
var 
view 
= 
	SceneView  
.  !
lastActiveSceneView! 4
;4 5
var 
gc 
= 
UI 
. 
EditorGUIUtility (
.( )
TempContent) 4
(4 5
text5 9
)9 :
;: ;
var 
toolbarHeight 
= 
UI  "
." #
EditorStyles# /
./ 0
sceneTextBox0 <
.< =

CalcHeight= G
(G H
gcH J
,J K
ScreenL R
.R S
widthS X
)X Y
;Y Z
var 
contentSize 
= 
UI  
.  !
EditorStyles! -
.- .
sceneTextBox. :
.: ;
CalcSize; C
(C D
gcD F
)F G
;G H
Rect #
handleTransformInfoRect (
=) *
new+ .
Rect/ 3
(3 4
view 
. 
position 
. 
width #
-$ %
(& '
contentSize' 2
.2 3
x3 4
+5 6
$num7 8
)8 9
,9 :
view 
. 
position 
. 
height $
-% &
(' (
contentSize( 3
.3 4
y4 5
+6 7
$num8 9
+: ;
toolbarHeight< I
)I J
,J K
contentSize   
.   
x   
,   
contentSize!! 
.!! 
y!! 
)!! 
;!! 
GUI## 
.## 
Label## 
(## #
handleTransformInfoRect## -
,##- .
gc##/ 1
,##1 2
UI##3 5
.##5 6
EditorStyles##6 B
.##B C
sceneTextBox##C O
)##O P
;##P Q
Handles$$ 
.$$ 
EndGUI$$ 
($$ 
)$$ 
;$$ 
}%% 	
const'' 
bool'' '
k_CollectCoincidentVertices'' .
=''/ 0
true''1 5
;''5 6
	protected-- 
class-- 
MeshAndPositions-- (
:--) *#
MeshAndElementSelection--+ B
{.. 	
Vector3// 
[// 
]// 
m_Positions// !
;//! "
public11 
Vector311 
[11 
]11 
	positions11 &
{22 
get33 
{33 
return33 
m_Positions33 (
;33( )
}33* +
}44 
public66 
MeshAndPositions66 #
(66# $
ProBuilderMesh66$ 2
mesh663 7
,667 8

PivotPoint669 C
pivot66D I
)66I J
:66K L
base66M Q
(66Q R
mesh66R V
,66V W'
k_CollectCoincidentVertices66X s
)66s t
{77 
m_Positions88 
=88 
mesh88 "
.88" #
	positions88# ,
.88, -
ToArray88- 4
(884 5
)885 6
;886 7
var:: 
l2w:: 
=:: 
mesh:: 
.:: 
	transform:: (
.::( )
localToWorldMatrix::) ;
;::; <
for<< 
(<< 
int<< 
i<< 
=<< 
$num<< 
,<< 
c<<  !
=<<" #
m_Positions<<$ /
.<</ 0
Length<<0 6
;<<6 7
i<<8 9
<<<: ;
c<<< =
;<<= >
i<<? @
++<<@ B
)<<B C
m_Positions== 
[==  
i==  !
]==! "
===# $
l2w==% (
.==( )
MultiplyPoint3x4==) 9
(==9 :
m_Positions==: E
[==E F
i==F G
]==G H
)==H I
;==I J
}>> 
}?? 	
internalAA 
overrideAA #
MeshAndElementSelectionAA 1
GetElementSelectionAA2 E
(AAE F
ProBuilderMeshAAF T
meshAAU Y
,AAY Z

PivotPointAA[ e
pivotAAf k
)AAk l
{BB 	
returnCC 
newCC 
MeshAndPositionsCC '
(CC' (
meshCC( ,
,CC, -
pivotCC. 3
)CC3 4
;CC4 5
}DD 	
internalFF 
	Matrix4x4FF 
GetPostApplyMatrixFF -
(FF- .
ElementGroupFF. :
groupFF; @
)FF@ A
{GG 	
switchHH 
(HH 

pivotPointHH 
)HH 
{II 
caseJJ 

PivotPointJJ 
.JJ  
CenterJJ  &
:JJ& '
returnKK 
	Matrix4x4KK $
.KK$ %
TRSKK% (
(KK( ) 
handlePositionOriginKK) =
,KK= > 
handleRotationOriginKK? S
,KKS T
Vector3KKU \
.KK\ ]
oneKK] `
)KK` a
;KKa b
caseMM 

PivotPointMM 
.MM  
ActiveElementMM  -
:MM- .
returnNN 
	Matrix4x4NN $
.NN$ %
TRSNN% (
(NN( ) 
handlePositionOriginNN) =
,NN= > 
handleRotationOriginNN? S
,NNS T
Vector3NNU \
.NN\ ]
oneNN] `
)NN` a
;NNa b
casePP 

PivotPointPP 
.PP  
IndividualOriginsPP  1
:PP1 2
returnQQ 
	Matrix4x4QQ $
.QQ$ %
TRSQQ% (
(QQ( )
groupQQ) .
.QQ. /
positionQQ/ 7
,QQ7 8
groupQQ9 >
.QQ> ?
rotationQQ? G
,QQG H
Vector3QQI P
.QQP Q
oneQQQ T
)QQT U
;QQU V
defaultSS 
:SS 
returnTT 
	Matrix4x4TT $
.TT$ %
identityTT% -
;TT- .
}UU 
}VV 	
	protectedXX 
overrideXX 
voidXX 
DoToolXX  &
(XX& '
Vector3XX' .
handlePositionXX/ =
,XX= >

QuaternionXX? I
handleRotationXXJ X
)XXX Y
{YY 	
}}} 	
	protected 
void 
Apply 
( 
	Matrix4x4 &
delta' ,
), -
{
ÄÄ 	
foreach
ÖÖ 
(
ÖÖ 
var
ÖÖ 
key
ÖÖ 
in
ÖÖ 
elementSelection
ÖÖ  0
)
ÖÖ0 1
{
ÜÜ 
if
áá 
(
áá 
!
áá 
(
áá 
key
áá 
is
áá 
MeshAndPositions
áá -
)
áá- .
)
áá. /
continue
àà 
;
àà 
var
ää 
kvp
ää 
=
ää 
(
ää 
MeshAndPositions
ää +
)
ää+ ,
key
ää, /
;
ää/ 0
var
ãã 
mesh
ãã 
=
ãã 
kvp
ãã 
.
ãã 
mesh
ãã #
;
ãã# $
var
åå 
worldToLocal
åå  
=
åå! "
mesh
åå# '
.
åå' (
	transform
åå( 1
.
åå1 2 
worldToLocalMatrix
åå2 D
;
ååD E
var
çç 
origins
çç 
=
çç 
kvp
çç !
.
çç! "
	positions
çç" +
;
çç+ ,
var
éé 
	positions
éé 
=
éé 
mesh
éé  $
.
éé$ %
positionsInternal
éé% 6
;
éé6 7
foreach
êê 
(
êê 
var
êê 
group
êê "
in
êê# %
kvp
êê& )
.
êê) *
elementGroups
êê* 7
)
êê7 8
{
ëë 
var
íí 
postApplyMatrix
íí '
=
íí( ) 
GetPostApplyMatrix
íí* <
(
íí< =
group
íí= B
)
ííB C
;
ííC D
var
ìì 
preApplyMatrix
ìì &
=
ìì' (
postApplyMatrix
ìì) 8
.
ìì8 9
inverse
ìì9 @
;
ìì@ A
foreach
ïï 
(
ïï 
var
ïï  
index
ïï! &
in
ïï' )
group
ïï* /
.
ïï/ 0
indices
ïï0 7
)
ïï7 8
{
ññ 
	positions
óó !
[
óó! "
index
óó" '
]
óó' (
=
óó) *
worldToLocal
óó+ 7
.
óó7 8
MultiplyPoint3x4
óó8 H
(
óóH I
postApplyMatrix
òò  /
.
òò/ 0
MultiplyPoint3x4
òò0 @
(
òò@ A
delta
ôô$ )
.
ôô) *
MultiplyPoint3x4
ôô* :
(
ôô: ;
preApplyMatrix
ôô; I
.
ôôI J
MultiplyPoint3x4
ôôJ Z
(
ôôZ [
origins
ôô[ b
[
ôôb c
index
ôôc h
]
ôôh i
)
ôôi j
)
ôôj k
)
ôôk l
)
ôôl m
;
ôôm n
}
öö 
}
õõ 
mesh
ùù 
.
ùù 
mesh
ùù 
.
ùù 
vertices
ùù "
=
ùù# $
	positions
ùù% .
;
ùù. /
mesh
ûû 
.
ûû 
	RefreshUV
ûû 
(
ûû 
MeshSelection
ûû ,
.
ûû, -%
selectedFacesInEditZone
ûû- D
[
ûûD E
mesh
ûûE I
]
ûûI J
)
ûûJ K
;
ûûK L
mesh
üü 
.
üü 
Refresh
üü 
(
üü 
RefreshMask
üü (
.
üü( )
Normals
üü) 0
)
üü0 1
;
üü1 2
}
†† 
ProBuilderEditor
¢¢ 
.
¢¢ 
Refresh
¢¢ $
(
¢¢$ %
false
¢¢% *
)
¢¢* +
;
¢¢+ ,
}
££ 	
}
§§ 
}•• Æp
íD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\EditorStyles.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
UI! #
{ 
static		 

class		 
EditorStyles		 
{

 
const 
string 

k_FontAsap 
=  !
$str" ?
;? @
const 
string $
k_ButtonBackgroundNormal -
=. /
$str0 W
;W X
const 
string #
k_ButtonBackgroundHover ,
=- .
$str/ U
;U V
const 
string %
k_ButtonBackgroundPressed .
=/ 0
$str1 Y
;Y Z
const 
string &
k_SettingsBackgroundNormal /
=0 1
$str2 I
;I J
const 
string *
k_SceneTextBoxBackgroundNormal 3
=4 5
$str6 L
;L M
static 
readonly 
Color "
k_TextColorWhiteNormal 4
=5 6
new7 :
Color; @
(@ A
$numA E
,E F
$numG K
,K L
$numM Q
,Q R
$numS U
)U V
;V W
static 
readonly 
Color !
k_TextColorWhiteHover 3
=4 5
new6 9
Color: ?
(? @
$num@ D
,D E
$numF J
,J K
$numL P
,P Q
$numR T
)T U
;U V
static 
readonly 
Color "
k_TextColorWhiteActive 4
=5 6
new7 :
Color; @
(@ A
$numA E
,E F
$numG K
,K L
$numM Q
,Q R
$numS U
)U V
;V W
static 
bool 
s_Initialized !
;! "
static 
GUIStyle 
s_ButtonStyle %
;% &
static 
GUIStyle 
s_ToolbarHelpIcon )
;) *
static 
GUIStyle 
s_SettingsGroup '
;' (
static 
GUIStyle 

s_RowStyle "
;" #
static 
GUIStyle 
s_HeaderLabel %
;% &
static 
GUIStyle 
s_SceneTextBox &
;& '
public 
static 
GUIStyle 
buttonStyle *
{+ ,
get- 0
{1 2
Init3 7
(7 8
)8 9
;9 :
return; A
s_ButtonStyleB O
;O P
}Q R
}S T
public   
static   
GUIStyle   
toolbarHelpIcon   .
{  / 0
get  1 4
{  5 6
Init  7 ;
(  ; <
)  < =
;  = >
return  ? E
s_ToolbarHelpIcon  F W
;  W X
}  Y Z
}  [ \
public!! 
static!! 
GUIStyle!! 
settingsGroup!! ,
{!!- .
get!!/ 2
{!!3 4
Init!!5 9
(!!9 :
)!!: ;
;!!; <
return!!= C
s_SettingsGroup!!D S
;!!S T
}!!U V
}!!W X
public"" 
static"" 
GUIStyle"" 
rowStyle"" '
{""( )
get""* -
{"". /
Init""0 4
(""4 5
)""5 6
;""6 7
return""8 >

s_RowStyle""? I
;""I J
}""K L
}""M N
public## 
static## 
GUIStyle## 
headerLabel## *
{##+ ,
get##- 0
{##1 2
Init##3 7
(##7 8
)##8 9
;##9 :
return##; A
s_HeaderLabel##B O
;##O P
}##Q R
}##S T
public$$ 
static$$ 
GUIStyle$$ 
sceneTextBox$$ +
{$$, -
get$$. 1
{$$2 3
Init$$4 8
($$8 9
)$$9 :
;$$: ;
return$$< B
s_SceneTextBox$$C Q
;$$Q R
}$$S T
}$$U V
static&& 
void&& 
Init&& 
(&& 
)&& 
{'' 	
if(( 
((( 
s_Initialized(( 
)(( 
return)) 
;)) 
s_Initialized++ 
=++ 
true++  
;++  !
s_ButtonStyle-- 
=-- 
new-- 
GUIStyle--  (
(--( )
)--) *
{.. 
normal// 
=// 
new// 
GUIStyleState// *
(//* +
)//+ ,
{00 

background11 
=11  
IconUtility11! ,
.11, -
GetIcon11- 4
(114 5$
k_ButtonBackgroundNormal115 M
)11M N
,11N O
	textColor22 
=22 
UnityEditor22  +
.22+ ,
EditorGUIUtility22, <
.22< =
	isProSkin22= F
?22G H"
k_TextColorWhiteNormal22I _
:22` a
Color22b g
.22g h
black22h m
}33 
,33 
hover44 
=44 
new44 
GUIStyleState44 )
(44) *
)44* +
{55 

background66 
=66  
IconUtility66! ,
.66, -
GetIcon66- 4
(664 5#
k_ButtonBackgroundHover665 L
)66L M
,66M N
	textColor77 
=77 
UnityEditor77  +
.77+ ,
EditorGUIUtility77, <
.77< =
	isProSkin77= F
?77G H!
k_TextColorWhiteHover77I ^
:77_ `
Color77a f
.77f g
black77g l
,77l m
}88 
,88 
active99 
=99 
new99 
GUIStyleState99 *
(99* +
)99+ ,
{:: 

background;; 
=;;  
IconUtility;;! ,
.;;, -
GetIcon;;- 4
(;;4 5%
k_ButtonBackgroundPressed;;5 N
);;N O
,;;O P
	textColor<< 
=<< 
UnityEditor<<  +
.<<+ ,
EditorGUIUtility<<, <
.<<< =
	isProSkin<<= F
?<<G H"
k_TextColorWhiteActive<<I _
:<<` a
Color<<b g
.<<g h
black<<h m
,<<m n
}== 
,== 
	alignment>> 
=>> 
ProBuilderEditor>> ,
.>>, -
s_IsIconGui>>- 8
?>>9 :

TextAnchor>>; E
.>>E F
MiddleCenter>>F R
:>>S T

TextAnchor>>U _
.>>_ `

MiddleLeft>>` j
,>>j k
border?? 
=?? 
new?? 

RectOffset?? '
(??' (
$num??( )
,??) *
$num??+ ,
,??, -
$num??. /
,??/ 0
$num??1 2
)??2 3
,??3 4
stretchWidth@@ 
=@@ 
true@@ #
,@@# $
stretchHeightAA 
=AA 
falseAA  %
,AA% &
marginBB 
=BB 
newBB 

RectOffsetBB '
(BB' (
$numBB( )
,BB) *
$numBB+ ,
,BB, -
$numBB. /
,BB/ 0
$numBB1 2
)BB2 3
,BB3 4
paddingCC 
=CC 
newCC 

RectOffsetCC (
(CC( )
$numCC) *
,CC* +
$numCC, -
,CC- .
$numCC/ 0
,CC0 1
$numCC2 3
)CC3 4
}DD 
;DD 
s_ToolbarHelpIconFF 
=FF 
newFF  #
GUIStyleFF$ ,
(FF, -
)FF- .
{GG 
marginHH 
=HH 
newHH 

RectOffsetHH '
(HH' (
$numHH( )
,HH) *
$numHH+ ,
,HH, -
$numHH. /
,HH/ 0
$numHH1 2
)HH2 3
,HH3 4
paddingII 
=II 
newII 

RectOffsetII (
(II( )
$numII) *
,II* +
$numII, -
,II- .
$numII/ 0
,II0 1
$numII2 3
)II3 4
,II4 5
	alignmentJJ 
=JJ 

TextAnchorJJ &
.JJ& '
MiddleCenterJJ' 3
,JJ3 4

fixedWidthKK 
=KK 
$numKK 
,KK  
fixedHeightLL 
=LL 
$numLL  
}MM 
;MM 
s_SettingsGroupOO 
=OO 
newOO !
GUIStyleOO" *
(OO* +
)OO+ ,
{PP 
normalQQ 
=QQ 
newQQ 
GUIStyleStateQQ *
(QQ* +
)QQ+ ,
{RR 

backgroundSS 
=SS  
IconUtilitySS! ,
.SS, -
GetIconSS- 4
(SS4 5&
k_SettingsBackgroundNormalSS5 O
)SSO P
}TT 
,TT 
hoverUU 
=UU 
newUU 
GUIStyleStateUU )
(UU) *
)UU* +
{VV 

backgroundWW 
=WW  
IconUtilityWW! ,
.WW, -
GetIconWW- 4
(WW4 5&
k_SettingsBackgroundNormalWW5 O
)WWO P
}XX 
,XX 
activeYY 
=YY 
newYY 
GUIStyleStateYY *
(YY* +
)YY+ ,
{ZZ 

background[[ 
=[[  
IconUtility[[! ,
.[[, -
GetIcon[[- 4
([[4 5&
k_SettingsBackgroundNormal[[5 O
)[[O P
}\\ 
,\\ 
border]] 
=]] 
new]] 

RectOffset]] '
(]]' (
$num]]( )
,]]) *
$num]]+ ,
,]], -
$num]]. /
,]]/ 0
$num]]1 2
)]]2 3
,]]3 4
stretchWidth^^ 
=^^ 
true^^ #
,^^# $
stretchHeight__ 
=__ 
false__  %
,__% &
margin`` 
=`` 
new`` 

RectOffset`` '
(``' (
$num``( )
,``) *
$num``+ ,
,``, -
$num``. /
,``/ 0
$num``1 2
)``2 3
,``3 4
paddingaa 
=aa 
newaa 

RectOffsetaa (
(aa( )
$numaa) *
,aa* +
$numaa, -
,aa- .
$numaa/ 0
,aa0 1
$numaa2 3
)aa3 4
}bb 
;bb 

s_RowStyledd 
=dd 
newdd 
GUIStyledd %
(dd% &
)dd& '
{ee 
normalff 
=ff 
newff 
GUIStyleStateff *
(ff* +
)ff+ ,
{ff- .

backgroundff/ 9
=ff: ;
UnityEditorff< G
.ffG H
EditorGUIUtilityffH X
.ffX Y
whiteTextureffY e
}fff g
,ffg h
stretchWidthgg 
=gg 
truegg #
,gg# $
stretchHeighthh 
=hh 
falsehh  %
,hh% &
marginii 
=ii 
newii 

RectOffsetii '
(ii' (
$numii( )
,ii) *
$numii+ ,
,ii, -
$numii. /
,ii/ 0
$numii1 2
)ii2 3
,ii3 4
paddingjj 
=jj 
newjj 

RectOffsetjj (
(jj( )
$numjj) *
,jj* +
$numjj, -
,jj- .
$numjj/ 0
,jj0 1
$numjj2 3
)jj3 4
}kk 
;kk 
s_HeaderLabelmm 
=mm 
newmm 
GUIStylemm  (
(mm( )
UnityEditormm) 4
.mm4 5
EditorStylesmm5 A
.mmA B
	boldLabelmmB K
)mmK L
{nn 
	alignmentoo 
=oo 

TextAnchoroo &
.oo& '
	LowerLeftoo' 0
,oo0 1
fontSizepp 
=pp 
$numpp 
,pp 
stretchWidthqq 
=qq 
trueqq #
,qq# $
stretchHeightrr 
=rr 
falserr  %
}ss 
;ss 
Fontuu 
asapuu 
=uu 
FileUtilityuu #
.uu# $
LoadInternalAssetuu$ 5
<uu5 6
Fontuu6 :
>uu: ;
(uu; <

k_FontAsapuu< F
)uuF G
;uuG H
ifvv 
(vv 
asapvv 
!=vv 
nullvv 
)vv 
s_HeaderLabelww 
.ww 
fontww "
=ww# $
asapww% )
;ww) *
s_SceneTextBoxyy 
=yy 
newyy  
GUIStyleyy! )
(yy) *
GUIyy* -
.yy- .
skinyy. 2
.yy2 3
boxyy3 6
)yy6 7
{zz 
wordWrap{{ 
={{ 
false{{  
,{{  !
richText|| 
=|| 
true|| 
,||  
stretchWidth}} 
=}} 
false}} $
,}}$ %
stretchHeight~~ 
=~~ 
false~~  %
,~~% &
border 
= 
new 

RectOffset '
(' (
$num( )
,) *
$num+ ,
,, -
$num. /
,/ 0
$num1 2
)2 3
,3 4
padding
ÄÄ 
=
ÄÄ 
new
ÄÄ 

RectOffset
ÄÄ (
(
ÄÄ( )
$num
ÄÄ) *
,
ÄÄ* +
$num
ÄÄ, -
,
ÄÄ- .
$num
ÄÄ/ 0
,
ÄÄ0 1
$num
ÄÄ2 3
)
ÄÄ3 4
,
ÄÄ4 5
	alignment
ÅÅ 
=
ÅÅ 

TextAnchor
ÅÅ &
.
ÅÅ& '
	UpperLeft
ÅÅ' 0
,
ÅÅ0 1
normal
ÇÇ 
=
ÇÇ 
new
ÇÇ 
GUIStyleState
ÇÇ *
(
ÇÇ* +
)
ÇÇ+ ,
{
ÉÉ 
	textColor
ÑÑ 
=
ÑÑ $
k_TextColorWhiteNormal
ÑÑ  6
,
ÑÑ6 7

background
ÖÖ 
=
ÖÖ  
IconUtility
ÖÖ! ,
.
ÖÖ, -
GetIcon
ÖÖ- 4
(
ÖÖ4 5,
k_SceneTextBoxBackgroundNormal
ÖÖ5 S
)
ÖÖS T
}
ÜÜ 
}
áá 
;
áá 
}
àà 	
}
ââ 
}ää ¶1
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\LightmapUVEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
sealed		 

class		 
LightmapUVEditor		 !
:		" #
EditorWindow		$ 0
{

 
List 
< 
ProBuilderMesh 
> 
m_MissingLightmaps /
=0 1
new2 5
List6 :
<: ;
ProBuilderMesh; I
>I J
(J K
)K L
;L M

GUIContent #
m_AutoLightmapUVContent *
=+ ,
new- 0

GUIContent1 ;
(; <
$str< O
,O P
$str	Q §
)
§ •
;
• ¶
internal 
static 
readonly  
Rect! %
desiredPosition& 5
=6 7
new8 ;
Rect< @
(@ A
$numA D
,D E
$numF I
,I J
$numK N
,N O
$numP S
)S T
;T U
void 
OnEnable 
( 
) 
{ 	
m_MissingLightmaps 
=   
FindMissingLightmaps! 5
(5 6
)6 7
;7 8
EditorMeshUtility 
. 
meshOptimized +
+=, .
MeshOptimized/ <
;< =
} 	
void 
OnGUI 
( 
) 
{ 	
	GUILayout 
. 
Label 
( 
$str 2
,2 3
EditorStyles4 @
.@ A
	boldLabelA J
)J K
;K L
Lightmapping 
.  
autoUnwrapLightmapUV -
=. /
EditorGUILayout0 ?
.? @
Toggle@ F
(F G#
m_AutoLightmapUVContentG ^
,^ _
Lightmapping` l
.l m!
autoUnwrapLightmapUV	m Å
)
Å Ç
;
Ç É
if 
( 
m_MissingLightmaps "
." #
Count# (
>) *
$num+ ,
), -
{ 
EditorGUILayout 
.  
HelpBox  '
(' ("
GetMissingLightmapText( >
(> ?
)? @
,@ A
MessageTypeB M
.M N
WarningN U
)U V
;V W
	GUILayout   
.   
BeginHorizontal   )
(  ) *
)  * +
;  + ,
	GUILayout"" 
."" 
FlexibleSpace"" '
(""' (
)""( )
;"") *
if$$ 
($$ 
	GUILayout$$ 
.$$ 
Button$$ $
($$$ %
$str$$% A
)$$A B
)$$B C
{%% 
Lightmapping''  
.''  !%
RebuildMissingLightmapUVs''! :
('': ;
m_MissingLightmaps''; M
.''M N
ToArray''N U
(''U V
)''V W
)''W X
;''X Y
EditorUtility(( !
.((! "
ShowNotification((" 2
(((2 3
$str((3 Q
)((Q R
;((R S
})) 
	GUILayout++ 
.++ 
EndHorizontal++ '
(++' (
)++( )
;++) *
},, 
}-- 	
void// 
MeshOptimized// 
(// 
ProBuilderMesh// )
mesh//* .
,//. /
Mesh//0 4
umesh//5 :
)//: ;
{00 	
var11 
missing11 
=11 
IsMissingLightmaps11 ,
(11, -
mesh11- 1
)111 2
;112 3
if33 
(33 
missing33 
)33 
{44 
if55 
(55 
!55 
m_MissingLightmaps55 '
.55' (
Contains55( 0
(550 1
mesh551 5
)555 6
)556 7
m_MissingLightmaps66 &
.66& '
Add66' *
(66* +
mesh66+ /
)66/ 0
;660 1
}77 
else88 
{99 
if:: 
(:: 
m_MissingLightmaps:: &
.::& '
Contains::' /
(::/ 0
mesh::0 4
)::4 5
)::5 6
m_MissingLightmaps;; &
.;;& '
Remove;;' -
(;;- .
mesh;;. 2
);;2 3
;;;3 4
}<< 
Repaint>> 
(>> 
)>> 
;>> 
}?? 	
stringAA "
GetMissingLightmapTextAA %
(AA% &
)AA& '
{BB 	
varCC 
countCC 
=CC 
m_MissingLightmapsCC *
.CC* +
CountCC+ 0
;CC0 1
ifEE 
(EE 
countEE 
<EE 
$numEE 
)EE 
returnFF 
$strFF Q
;FFQ R
returnHH 
$strHH 
+HH  !
m_MissingLightmapsHH" 4
.HH4 5
CountHH5 :
+HH; <
$strHH= o
;HHo p
}II 	
staticKK 
boolKK 
IsMissingLightmapsKK &
(KK& '
ProBuilderMeshKK' 5
meshKK6 :
)KK: ;
{LL 	
returnNN 
meshNN 
.NN 

gameObjectNN "
.NN" #
HasStaticFlagNN# 0
(NN0 1
StaticEditorFlagsNN1 B
.NNB C
ContributeGINNC O
)NNO P
&&NNQ S
!NNT U
meshNNU Y
.NNY Z
	HasArraysNNZ c
(NNc d

MeshArraysNNd n
.NNn o
LightmapNNo w
)NNw x
;NNx y
}RR 	
staticTT 
ListTT 
<TT 
ProBuilderMeshTT "
>TT" # 
FindMissingLightmapsTT$ 8
(TT8 9
)TT9 :
{UU 	
returnVV 
FindObjectsOfTypeVV $
<VV$ %
ProBuilderMeshVV% 3
>VV3 4
(VV4 5
)VV5 6
.VV6 7
WhereVV7 <
(VV< =
IsMissingLightmapsVV= O
)VVO P
.VVP Q
ToListVVQ W
(VVW X
)VVX Y
;VVY Z
}WW 	
}XX 
}YY ≠;
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\TextureTool.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
abstract		 
class		 
TextureTool		 
:		  "
VertexManipulationTool		! 7
{

 
const 
bool '
k_CollectCoincidentVertices .
=/ 0
false1 6
;6 7
	protected 
const 
int 
k_TextureChannel ,
=- .
$num/ 0
;0 1
	protected 
class 
MeshAndTextures '
:( )#
MeshAndElementSelection* A
{ 	
List 
< 
Vector4 
> 
	m_Origins #
;# $
List 
< 
Vector4 
> 

m_Textures $
;$ %
	Matrix4x4 
m_PreApplyMatrix &
;& '
	Matrix4x4 
m_PostApplyMatrix '
;' (
public 
	Matrix4x4 
preApplyMatrix +
{ 
get 
{ 
return 
m_PreApplyMatrix +
;+ ,
} 
private 
set 
{ 
m_PreApplyMatrix $
=% &
value' ,
;, -
m_PostApplyMatrix   %
=  & '
value  ( -
.  - .
inverse  . 5
;  5 6
}!! 
}"" 
public$$ 
	Matrix4x4$$ 
postApplyMatrix$$ ,
{%% 
get&& 
{'' 
return(( 
m_PostApplyMatrix(( ,
;((, -
})) 
private++ 
set++ 
{,, 
m_PostApplyMatrix-- %
=--& '
value--( -
;--- .
m_PreApplyMatrix.. $
=..% &
value..' ,
..., -
inverse..- 4
;..4 5
}// 
}00 
public22 
List22 
<22 
Vector422 
>22  
textures22! )
{33 
get44 
{44 
return44 

m_Textures44 '
;44' (
}44) *
}55 
public77 
List77 
<77 
Vector477 
>77  
origins77! (
{88 
get99 
{99 
return99 
	m_Origins99 &
;99& '
}99( )
}:: 
public<< 
MeshAndTextures<< "
(<<" #
ProBuilderMesh<<# 1
mesh<<2 6
,<<6 7

PivotPoint<<8 B
pivot<<C H
)<<H I
:<<J K
base<<L P
(<<P Q
mesh<<Q U
,<<U V'
k_CollectCoincidentVertices<<W r
)<<r s
{== 

m_Textures>> 
=>> 
new>>  
List>>! %
<>>% &
Vector4>>& -
>>>- .
(>>. /
)>>/ 0
;>>0 1
mesh?? 
.?? 
GetUVs?? 
(?? 
k_TextureChannel?? ,
,??, -

m_Textures??. 8
)??8 9
;??9 :
	m_Origins@@ 
=@@ 
new@@ 
List@@  $
<@@$ %
Vector4@@% ,
>@@, -
(@@- .

m_Textures@@. 8
)@@8 9
;@@9 :
preApplyMatrixAA 
=AA  
	Matrix4x4AA! *
.AA* +
	TranslateAA+ 4
(AA4 5
-AA5 6
Bounds2DAA6 >
.AA> ?
CenterAA? E
(AAE F
	m_OriginsAAF O
,AAO P
meshAAQ U
.AAU V#
selectedIndexesInternalAAV m
)AAm n
)AAn o
;AAo p
}BB 
}CC 	
	protectedEE 
overrideEE 
voidEE 
OnToolEngagedEE  -
(EE- .
)EE. /
{FF 	
MeshSelectionGG 
.GG &
InvalidateElementSelectionGG 4
(GG4 5
)GG5 6
;GG6 7
}HH 	
	protectedJJ 
overrideJJ 
voidJJ 
OnToolDisengagedJJ  0
(JJ0 1
)JJ1 2
{KK 	
varLL 

isFaceModeLL 
=LL 
ProBuilderEditorLL -
.LL- .

selectModeLL. 8
.LL8 9
ContainsFlagLL9 E
(LLE F

SelectModeLLF P
.LLP Q
TextureFaceLLQ \
|LL] ^

SelectModeLL_ i
.LLi j
FaceLLj n
)LLn o
;LLo p
foreachNN 
(NN 
varNN 
meshNN 
inNN  
elementSelectionNN! 1
)NN1 2
{OO 
ifPP 
(PP 
!PP 
(PP 
meshPP 
isPP 
MeshAndTexturesPP -
)PP- .
)PP. /
continueQQ 
;QQ 
varSS 
texturesSS 
=SS 
(SS  
(SS  !
MeshAndTexturesSS! 0
)SS0 1
meshSS1 5
)SS5 6
.SS6 7
texturesSS7 ?
;SS? @
meshTT 
.TT 
meshTT 
.TT 
SetUVsTT  
(TT  !
k_TextureChannelTT! 1
,TT1 2
texturesTT3 ;
)TT; <
;TT< =
ifVV 
(VV 

isFaceModeVV 
)VV 
{WW 
	UVEditingXX 
.XX ,
 SetAutoAndAlignUnwrapParamsToUVsXX >
(XX> ?
meshXX? C
.XXC D
meshXXD H
,XXH I
meshXXJ N
.XXN O
meshXXO S
.XXS T!
selectedFacesInternalXXT i
.XXi j
WhereXXj o
(XXo p
xXXp q
=>XXr t
!XXu v
xXXv w
.XXw x
manualUV	XXx Ä
)
XXÄ Å
)
XXÅ Ç
;
XXÇ É
}YY 
elseZZ 
{[[ 
var\\ 
indices\\ 
=\\  !
new\\" %
HashSet\\& -
<\\- .
int\\. 1
>\\1 2
(\\2 3
mesh\\3 7
.\\7 8
elementGroups\\8 E
.\\E F

SelectMany\\F P
(\\P Q
x\\Q R
=>\\S U
x\\V W
.\\W X
indices\\X _
)\\_ `
)\\` a
;\\a b
foreach^^ 
(^^ 
var^^  
face^^! %
in^^& (
mesh^^) -
.^^- .
mesh^^. 2
.^^2 3
facesInternal^^3 @
)^^@ A
{__ 
foreach`` 
(``  !
var``! $
index``% *
in``+ -
face``. 2
.``2 3#
distinctIndexesInternal``3 J
)``J K
{aa 
ifbb 
(bb  
indicesbb  '
.bb' (
Containsbb( 0
(bb0 1
indexbb1 6
)bb6 7
)bb7 8
{cc 
facedd  $
.dd$ %
manualUVdd% -
=dd. /
truedd0 4
;dd4 5
breakee  %
;ee% &
}ff 
}gg 
}hh 
}ii 
}jj 
}kk 	
internalmm 
overridemm #
MeshAndElementSelectionmm 1
GetElementSelectionmm2 E
(mmE F
ProBuilderMeshmmF T
meshmmU Y
,mmY Z

PivotPointmm[ e
pivotmmf k
)mmk l
{nn 	
returnoo 
newoo 
MeshAndTexturesoo &
(oo& '
meshoo' +
,oo+ ,
pivotoo- 2
)oo2 3
;oo3 4
}pp 	
}qq 
}rr »
†D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\ProBuilderSettingsProvider.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
static 

class &
ProBuilderSettingsProvider +
{ 
const		 
string		 
k_PreferencesPath		 &
=		' (
$str		) A
;		A B
[ 	
SettingsProvider	 
] 
static 
SettingsProvider "
CreateSettingsProvider  6
(6 7
)7 8
{ 	
var 
provider 
= 
new  
UserSettingsProvider 3
(3 4
k_PreferencesPath4 E
,E F
ProBuilderSettings "
." #
instance# +
,+ ,
new 
[ 
] 
{ 
typeof 
( &
ProBuilderSettingsProvider 9
)9 :
.: ;
Assembly; C
}D E
)E F
;F G
ProBuilderSettings 
. 
instance '
.' (
afterSettingsSaved( :
+=; =
(> ?
)? @
=>A C
{ 
if 
( 
ProBuilderEditor #
.# $
instance$ ,
!=- /
null0 4
)4 5
ProBuilderEditor $
.$ %
ReloadSettings% 3
(3 4
)4 5
;5 6
} 
; 
return 
provider 
; 
} 	
}22 
}33 ƒπ
ûD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\OffsetElements.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
.		  !
Actions		! (
{

 
sealed 

class 
OffsetElements 
:  !

MenuAction" ,
{ 
internal 
enum 
CoordinateSpace %
{ 	
World 
, 
Local 
, 
Element 
, 
Handle 
} 	
static 
readonly 
TooltipContent &
s_TooltipFace' 4
=5 6
new7 :
TooltipContent; I
(J K
$strL Z
,Z [
$str	\ â
)
ä ã
;
ã å
static 
readonly 
TooltipContent &
s_TooltipEdge' 4
=5 6
new7 :
TooltipContent; I
(J K
$strL Z
,Z [
$str	\ â
)
ä ã
;
ã å
static 
readonly 
TooltipContent &
s_TooltipVert' 4
=5 6
new7 :
TooltipContent; I
(J K
$strL ]
,] ^
$str	_ å
)
ç é
;
é è
internal 
static 
Pref 
< 
Vector3 $
>$ %
s_Translation& 3
=4 5
new6 9
Pref: >
<> ?
Vector3? F
>F G
(G H
$strH d
,d e
Vector3f m
.m n
upn p
)p q
;q r
internal 
static 
Pref 
< 
CoordinateSpace ,
>, -
s_CoordinateSpace. ?
=@ A
newB E
PrefF J
<J K
CoordinateSpaceK Z
>Z [
([ \
$str\ |
,| }
CoordinateSpace	~ ç
.
ç é
World
é ì
)
ì î
;
î ï
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
GeometryG O
;O P
}Q R
}S T
public 
override 
	Texture2D !
icon" &
{ 	
get   
{   
return   
IconUtility   $
.  $ %
GetIcon  % ,
(  , -
$str  - =
,  = >
IconSkin  ? G
.  G H
Pro  H K
)  K L
;  L M
}  N O
}!! 	
public## 
override## 
TooltipContent## &
tooltip##' .
{$$ 	
get%% 
{&& 
if'' 
('' 
ProBuilderEditor'' #
.''# $

selectMode''$ .
==''/ 1

SelectMode''2 <
.''< =
Face''= A
)''A B
return(( 
s_TooltipFace(( (
;((( )
if)) 
()) 
ProBuilderEditor)) #
.))# $

selectMode))$ .
==))/ 1

SelectMode))2 <
.))< =
Edge))= A
)))A B
return** 
s_TooltipEdge** (
;**( )
return++ 
s_TooltipVert++ $
;++$ %
},, 
}-- 	
public// 
override// 

SelectMode// "
validSelectModes//# 3
{00 	
get11 
{11 
return11 

SelectMode11 #
.11# $
Face11$ (
|11) *

SelectMode11+ 5
.115 6
Edge116 :
|11; <

SelectMode11= G
.11G H
Vertex11H N
;11N O
}11P Q
}22 	
public44 
override44 
bool44 
enabled44 $
{55 	
get66 
{66 
return66 
base66 
.66 
enabled66 %
&&66& (
MeshSelection66) 6
.666 7
selectedVertexCount667 J
>66K L
$num66M N
;66N O
}66P Q
}77 	
	protected99 
override99 
MenuActionState99 *
optionsMenuState99+ ;
{:: 	
get;; 
{;; 
return;; 
MenuActionState;; (
.;;( )
VisibleAndEnabled;;) :
;;;: ;
};;< =
}<< 	
	protected>> 
override>> 
void>> 
DoAlternateAction>>  1
(>>1 2
)>>2 3
{?? 	
ConfigurableWindow@@ 
.@@ 
	GetWindow@@ (
<@@( ) 
MoveElementsSettings@@) =
>@@= >
(@@> ?
true@@? C
,@@C D
$str@@E V
,@@V W
true@@X \
)@@\ ]
;@@] ^
}AA 	
publicCC 
overrideCC 
ActionResultCC $
DoActionCC% -
(CC- .
)CC. /
{DD 	
ifEE 
(EE 
MeshSelectionEE 
.EE 
selectedObjectCountEE 1
<EE2 3
$numEE4 5
)EE5 6
returnFF 
ActionResultFF #
.FF# $
NoSelectionFF$ /
;FF/ 0
UndoUtilityHH 
.HH 
RecordSelectionHH '
(HH' (
$strHH( <
)HH< =
;HH= >
varJJ 
handleRotationJJ 
=JJ  
MeshSelectionJJ! .
.JJ. /
GetHandleRotationJJ/ @
(JJ@ A
)JJA B
;JJB C
foreachLL 
(LL 
varLL 
groupLL 
inLL !
MeshSelectionLL" /
.LL/ 0
elementSelectionLL0 @
)LL@ A
{MM 
varNN 
meshNN 
=NN 
groupNN  
.NN  !
meshNN! %
;NN% &
varOO 
	positionsOO 
=OO 
meshOO  $
.OO$ %
positionsInternalOO% 6
;OO6 7
varPP 
offsetPP 
=PP 
s_TranslationPP *
.PP* +
valuePP+ 0
;PP0 1
switchRR 
(RR 
s_CoordinateSpaceRR )
.RR) *
valueRR* /
)RR/ 0
{SS 
caseTT 
CoordinateSpaceTT (
.TT( )
WorldTT) .
:TT. /
caseUU 
CoordinateSpaceUU (
.UU( )
HandleUU) /
:UU/ 0
{VV 
varWW 
preWW 
=WW  !
meshWW" &
.WW& '
	transformWW' 0
.WW0 1
localToWorldMatrixWW1 C
;WWC D
varXX 
postXX  
=XX! "
meshXX# '
.XX' (
	transformXX( 1
.XX1 2
worldToLocalMatrixXX2 D
;XXD E
ifZZ 
(ZZ 
s_CoordinateSpaceZZ -
.ZZ- .
valueZZ. 3
==ZZ4 6
CoordinateSpaceZZ7 F
.ZZF G
HandleZZG M
)ZZM N
offset[[ "
=[[# $
handleRotation[[% 3
*[[4 5
offset[[6 <
;[[< =
foreach]] 
(]]  !
var]]! $
index]]% *
in]]+ -
mesh]]. 2
.]]2 3&
selectedCoincidentVertices]]3 M
)]]M N
{^^ 
var__ 
p__  !
=__" #
pre__$ '
.__' (
MultiplyPoint3x4__( 8
(__8 9
	positions__9 B
[__B C
index__C H
]__H I
)__I J
;__J K
p`` 
+=``  
offset``! '
;``' (
	positionsaa %
[aa% &
indexaa& +
]aa+ ,
=aa- .
postaa/ 3
.aa3 4
MultiplyPoint3x4aa4 D
(aaD E
paaE F
)aaF G
;aaG H
}bb 
breakcc 
;cc 
}dd 
caseff 
CoordinateSpaceff (
.ff( )
Localff) .
:ff. /
{gg 
foreachhh 
(hh  !
varhh! $
indexhh% *
inhh+ -
meshhh. 2
.hh2 3&
selectedCoincidentVerticeshh3 M
)hhM N
	positionsii %
[ii% &
indexii& +
]ii+ ,
+=ii- /
offsetii0 6
;ii6 7
breakjj 
;jj 
}kk 
casemm 
CoordinateSpacemm (
.mm( )
Elementmm) 0
:mm0 1
{nn 
foreachoo 
(oo  !
varoo! $
elementsoo% -
inoo. 0
groupoo1 6
.oo6 7
elementGroupsoo7 D
)ooD E
{pp 
varqq 
rotationqq  (
=qq) *

Quaternionqq+ 5
.qq5 6
Inverseqq6 =
(qq= >
meshqq> B
.qqB C
	transformqqC L
.qqL M
rotationqqM U
)qqU V
*qqW X
elementsqqY a
.qqa b
rotationqqb j
;qqj k
varrr 
orr  !
=rr" #
rotationrr$ ,
*rr- .
offsetrr/ 5
;rr5 6
foreachss #
(ss$ %
varss% (
indexss) .
inss/ 1
elementsss2 :
.ss: ;
indicesss; B
)ssB C
	positionstt  )
[tt) *
indextt* /
]tt/ 0
+=tt1 3
ott4 5
;tt5 6
}uu 
breakvv 
;vv 
}ww 
}xx 
meshzz 
.zz 
Rebuildzz 
(zz 
)zz 
;zz 
mesh{{ 
.{{ 
Optimize{{ 
({{ 
){{ 
;{{  
ProBuilderEditor||  
.||  !
Refresh||! (
(||( )
)||) *
;||* +
}}} 
if 
( 
ProBuilderEditor 
.  

selectMode  *
.* +
ContainsFlag+ 7
(7 8

SelectMode8 B
.B C
EdgeC G
|H I

SelectModeJ T
.T U
TextureEdgeU `
)` a
)a b
return
ÄÄ 
new
ÄÄ 
ActionResult
ÄÄ '
(
ÄÄ' (
ActionResult
ÄÄ( 4
.
ÄÄ4 5
Status
ÄÄ5 ;
.
ÄÄ; <
Success
ÄÄ< C
,
ÄÄC D
$str
ÄÄE L
+
ÄÄM N
MeshSelection
ÄÄO \
.
ÄÄ\ ]
selectedEdgeCount
ÄÄ] n
+
ÄÄo p
(
ÄÄq r
MeshSelection
ÄÄr 
.ÄÄ Ä!
selectedEdgeCountÄÄÄ ë
>ÄÄí ì
$numÄÄî ï
?ÄÄñ ó
$strÄÄò †
:ÄÄ° ¢
$strÄÄ£ ™
)ÄÄ™ ´
)ÄÄ´ ¨
;ÄÄ¨ ≠
if
ÅÅ 
(
ÅÅ 
ProBuilderEditor
ÅÅ 
.
ÅÅ  

selectMode
ÅÅ  *
.
ÅÅ* +
ContainsFlag
ÅÅ+ 7
(
ÅÅ7 8

SelectMode
ÅÅ8 B
.
ÅÅB C
Face
ÅÅC G
|
ÅÅH I

SelectMode
ÅÅJ T
.
ÅÅT U
TextureFace
ÅÅU `
)
ÅÅ` a
)
ÅÅa b
return
ÇÇ 
new
ÇÇ 
ActionResult
ÇÇ '
(
ÇÇ' (
ActionResult
ÇÇ( 4
.
ÇÇ4 5
Status
ÇÇ5 ;
.
ÇÇ; <
Success
ÇÇ< C
,
ÇÇC D
$str
ÇÇE L
+
ÇÇM N
MeshSelection
ÇÇO \
.
ÇÇ\ ]
selectedFaceCount
ÇÇ] n
+
ÇÇo p
(
ÇÇq r
MeshSelection
ÇÇr 
.ÇÇ Ä!
selectedFaceCountÇÇÄ ë
>ÇÇí ì
$numÇÇî ï
?ÇÇñ ó
$strÇÇò †
:ÇÇ° ¢
$strÇÇ£ ™
)ÇÇ™ ´
)ÇÇ´ ¨
;ÇÇ¨ ≠
return
ÉÉ 
new
ÉÉ 
ActionResult
ÉÉ #
(
ÉÉ# $
ActionResult
ÉÉ$ 0
.
ÉÉ0 1
Status
ÉÉ1 7
.
ÉÉ7 8
Success
ÉÉ8 ?
,
ÉÉ? @
$str
ÉÉA H
+
ÉÉI J
MeshSelection
ÉÉK X
.
ÉÉX Y!
selectedVertexCount
ÉÉY l
+
ÉÉm n
(
ÉÉo p
MeshSelection
ÉÉp }
.
ÉÉ} ~"
selectedVertexCountÉÉ~ ë
>ÉÉí ì
$numÉÉî ï
?ÉÉñ ó
$strÉÉò £
:ÉÉ§ •
$strÉÉ¶ Ø
)ÉÉØ ∞
)ÉÉ∞ ±
;ÉÉ± ≤
}
ÑÑ 	
}
ÖÖ 
class
áá 	"
MoveElementsSettings
áá
 
:
áá   
ConfigurableWindow
áá! 3
{
àà 
void
ââ 
OnEnable
ââ 
(
ââ 
)
ââ 
{
ää 	
titleContent
ãã 
.
ãã 
text
ãã 
=
ãã 
L10n
ãã  $
.
ãã$ %
Tr
ãã% '
(
ãã' (
$str
ãã( A
)
ããA B
;
ããB C
	SceneView
çç 
.
çç 
duringSceneGui
çç $
+=
çç% '

OnSceneGUI
çç( 2
;
çç2 3
}
ëë 	
void
ìì 
	OnDisable
ìì 
(
ìì 
)
ìì 
{
îî 	
	SceneView
ññ 
.
ññ 
duringSceneGui
ññ $
-=
ññ% '

OnSceneGUI
ññ( 2
;
ññ2 3
}
öö 	
void
úú 
OnGUI
úú 
(
úú 
)
úú 
{
ùù 	
DoContextMenu
ûû 
(
ûû 
)
ûû 
;
ûû 
	EditorGUI
†† 
.
†† 
BeginChangeCheck
†† &
(
††& '
)
††' (
;
††( )
var
¢¢ 
dist
¢¢ 
=
¢¢ 
OffsetElements
¢¢ %
.
¢¢% &
s_Translation
¢¢& 3
.
¢¢3 4
value
¢¢4 9
;
¢¢9 :
var
££ 
coord
££ 
=
££ 
OffsetElements
££ &
.
££& '
s_CoordinateSpace
££' 8
.
££8 9
value
££9 >
;
££> ?
	EditorGUI
•• 
.
•• 
BeginChangeCheck
•• &
(
••& '
)
••' (
;
••( )
coord
ßß 
=
ßß 
(
ßß 
OffsetElements
ßß #
.
ßß# $
CoordinateSpace
ßß$ 3
)
ßß3 4
EditorGUILayout
ßß5 D
.
ßßD E
	EnumPopup
ßßE N
(
ßßN O
$str
ßßO a
,
ßßa b
coord
ßßc h
)
ßßh i
;
ßßi j
dist
®® 
=
®® 
EditorGUILayout
®® "
.
®®" #
Vector3Field
®®# /
(
®®/ 0
$str
®®0 ;
,
®®; <
dist
®®= A
)
®®A B
;
®®B C
if
™™ 
(
™™ 
	EditorGUI
™™ 
.
™™ 
EndChangeCheck
™™ (
(
™™( )
)
™™) *
)
™™* +
{
´´ 
OffsetElements
¨¨ 
.
¨¨ 
s_Translation
¨¨ ,
.
¨¨, -
SetValue
¨¨- 5
(
¨¨5 6
dist
¨¨6 :
,
¨¨: ;
true
¨¨< @
)
¨¨@ A
;
¨¨A B
OffsetElements
≠≠ 
.
≠≠ 
s_CoordinateSpace
≠≠ 0
.
≠≠0 1
SetValue
≠≠1 9
(
≠≠9 :
coord
≠≠: ?
)
≠≠? @
;
≠≠@ A
}
ÆÆ 
	GUILayout
∞∞ 
.
∞∞ 
FlexibleSpace
∞∞ #
(
∞∞# $
)
∞∞$ %
;
∞∞% &
if
≤≤ 
(
≤≤ 
	GUILayout
≤≤ 
.
≤≤ 
Button
≤≤  
(
≤≤  !
L10n
≤≤! %
.
≤≤% &
Tr
≤≤& (
(
≤≤( )
$str
≤≤) ;
)
≤≤; <
)
≤≤< =
)
≤≤= >
{
≥≥ 
var
¥¥ 
instance
¥¥ 
=
¥¥ !
EditorToolbarLoader
¥¥ 2
.
¥¥2 3
GetInstance
¥¥3 >
<
¥¥> ?
OffsetElements
¥¥? M
>
¥¥M N
(
¥¥N O
)
¥¥O P
;
¥¥P Q
EditorUtility
µµ 
.
µµ 
ShowNotification
µµ .
(
µµ. /
instance
µµ/ 7
.
µµ7 8
DoAction
µµ8 @
(
µµ@ A
)
µµA B
.
µµB C
notification
µµC O
)
µµO P
;
µµP Q
}
∂∂ 
if
∏∏ 
(
∏∏ 
	EditorGUI
∏∏ 
.
∏∏ 
EndChangeCheck
∏∏ (
(
∏∏( )
)
∏∏) *
)
∏∏* +
	SceneView
ππ 
.
ππ 

RepaintAll
ππ $
(
ππ$ %
)
ππ% &
;
ππ& '
}
∫∫ 	
static
ºº 
List
ºº 
<
ºº 
Vector3
ºº 
>
ºº 
s_Points
ºº %
=
ºº& '
new
ºº( +
List
ºº, 0
<
ºº0 1
Vector3
ºº1 8
>
ºº8 9
(
ºº9 :
)
ºº: ;
;
ºº; <
void
ææ 

OnSceneGUI
ææ 
(
ææ 
	SceneView
ææ !
view
ææ" &
)
ææ& '
{
øø 	
s_Points
¿¿ 
.
¿¿ 
Clear
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿ 
var
¬¬ 
coord
¬¬ 
=
¬¬ 
OffsetElements
¬¬ &
.
¬¬& '
s_CoordinateSpace
¬¬' 8
.
¬¬8 9
value
¬¬9 >
;
¬¬> ?
var
√√ 
offset
√√ 
=
√√ 
OffsetElements
√√ '
.
√√' (
s_Translation
√√( 5
.
√√5 6
value
√√6 ;
;
√√; <
var
ƒƒ 
handleRotation
ƒƒ 
=
ƒƒ  
MeshSelection
ƒƒ! .
.
ƒƒ. /
GetHandleRotation
ƒƒ/ @
(
ƒƒ@ A
)
ƒƒA B
;
ƒƒB C
var
≈≈ 
camera
≈≈ 
=
≈≈ 
view
≈≈ 
.
≈≈ 
camera
≈≈ $
.
≈≈$ %
	transform
≈≈% .
.
≈≈. /
forward
≈≈/ 6
*
≈≈7 8
-
≈≈9 :
$num
≈≈: >
;
≈≈> ?
foreach
«« 
(
«« 
var
«« 
	selection
«« "
in
««# %
MeshSelection
««& 3
.
««3 4
elementSelection
««4 D
)
««D E
{
»» 
var
…… 
mesh
…… 
=
…… 
	selection
…… $
.
……$ %
mesh
……% )
;
……) *
if
ÀÀ 
(
ÀÀ 
coord
ÀÀ 
==
ÀÀ 
OffsetElements
ÀÀ +
.
ÀÀ+ ,
CoordinateSpace
ÀÀ, ;
.
ÀÀ; <
Element
ÀÀ< C
)
ÀÀC D
{
ÃÃ 
foreach
ÕÕ 
(
ÕÕ 
var
ÕÕ  
elements
ÕÕ! )
in
ÕÕ* ,
	selection
ÕÕ- 6
.
ÕÕ6 7
elementGroups
ÕÕ7 D
)
ÕÕD E
{
ŒŒ 
s_Points
œœ  
.
œœ  !
Add
œœ! $
(
œœ$ %
elements
œœ% -
.
œœ- .
position
œœ. 6
+
œœ7 8
camera
œœ9 ?
)
œœ? @
;
œœ@ A
s_Points
––  
.
––  !
Add
––! $
(
––$ %
elements
––% -
.
––- .
rotation
––. 6
*
––7 8
offset
––9 ?
)
––? @
;
––@ A
}
—— 
}
““ 
else
”” 
{
‘‘ 
var
’’ 
preview
’’ 
=
’’  !
offset
’’" (
;
’’( )
if
◊◊ 
(
◊◊ 
coord
◊◊ 
==
◊◊  
OffsetElements
◊◊! /
.
◊◊/ 0
CoordinateSpace
◊◊0 ?
.
◊◊? @
Handle
◊◊@ F
)
◊◊F G
preview
ÿÿ 
=
ÿÿ  !
handleRotation
ÿÿ" 0
*
ÿÿ1 2
offset
ÿÿ3 9
;
ÿÿ9 :
else
ŸŸ 
if
ŸŸ 
(
ŸŸ 
coord
ŸŸ "
==
ŸŸ# %
OffsetElements
ŸŸ& 4
.
ŸŸ4 5
CoordinateSpace
ŸŸ5 D
.
ŸŸD E
Local
ŸŸE J
)
ŸŸJ K
preview
⁄⁄ 
=
⁄⁄  !
mesh
⁄⁄" &
.
⁄⁄& '
	transform
⁄⁄' 0
.
⁄⁄0 1 
TransformDirection
⁄⁄1 C
(
⁄⁄C D
offset
⁄⁄D J
)
⁄⁄J K
;
⁄⁄K L
foreach
‹‹ 
(
‹‹ 
var
‹‹  
elements
‹‹! )
in
‹‹* ,
	selection
‹‹- 6
.
‹‹6 7
elementGroups
‹‹7 D
)
‹‹D E
{
›› 
s_Points
ﬁﬁ  
.
ﬁﬁ  !
Add
ﬁﬁ! $
(
ﬁﬁ$ %
elements
ﬁﬁ% -
.
ﬁﬁ- .
position
ﬁﬁ. 6
+
ﬁﬁ7 8
camera
ﬁﬁ9 ?
)
ﬁﬁ? @
;
ﬁﬁ@ A
s_Points
ﬂﬂ  
.
ﬂﬂ  !
Add
ﬂﬂ! $
(
ﬂﬂ$ %
preview
ﬂﬂ% ,
)
ﬂﬂ, -
;
ﬂﬂ- .
}
‡‡ 
}
·· 
}
‚‚ 
using
‰‰ 
(
‰‰ 
var
‰‰ 
lines
‰‰ 
=
‰‰ 
new
‰‰ "!
EditorHandleDrawing
‰‰# 6
.
‰‰6 7
LineDrawingScope
‰‰7 G
(
‰‰G H
ColorUtility
‰‰H T
.
‰‰T U
GetColor
‰‰U ]
(
‰‰] ^
offset
‰‰^ d
)
‰‰d e
)
‰‰e f
)
‰‰f g
{
ÂÂ 
for
ÊÊ 
(
ÊÊ 
int
ÊÊ 
i
ÊÊ 
=
ÊÊ 
$num
ÊÊ 
;
ÊÊ 
i
ÊÊ  !
<
ÊÊ" #
s_Points
ÊÊ$ ,
.
ÊÊ, -
Count
ÊÊ- 2
;
ÊÊ2 3
i
ÊÊ4 5
+=
ÊÊ6 8
$num
ÊÊ9 :
)
ÊÊ: ;
lines
ÁÁ 
.
ÁÁ 
DrawLine
ÁÁ "
(
ÁÁ" #
s_Points
ÁÁ# +
[
ÁÁ+ ,
i
ÁÁ, -
]
ÁÁ- .
,
ÁÁ. /
s_Points
ÁÁ0 8
[
ÁÁ8 9
i
ÁÁ9 :
]
ÁÁ: ;
+
ÁÁ< =
s_Points
ÁÁ> F
[
ÁÁF G
i
ÁÁG H
+
ÁÁI J
$num
ÁÁK L
]
ÁÁL M
)
ÁÁM N
;
ÁÁN O
}
ËË 
using
ÍÍ 
(
ÍÍ 
var
ÍÍ 
points
ÍÍ 
=
ÍÍ 
new
ÍÍ  #!
EditorHandleDrawing
ÍÍ$ 7
.
ÍÍ7 8
PointDrawingScope
ÍÍ8 I
(
ÍÍI J
Color
ÍÍJ O
.
ÍÍO P
gray
ÍÍP T
)
ÍÍT U
)
ÍÍU V
{
ÎÎ 
for
ÏÏ 
(
ÏÏ 
int
ÏÏ 
i
ÏÏ 
=
ÏÏ 
$num
ÏÏ 
;
ÏÏ 
i
ÏÏ  !
<
ÏÏ" #
s_Points
ÏÏ$ ,
.
ÏÏ, -
Count
ÏÏ- 2
;
ÏÏ2 3
i
ÏÏ4 5
+=
ÏÏ6 8
$num
ÏÏ9 :
)
ÏÏ: ;
points
ÌÌ 
.
ÌÌ 
Draw
ÌÌ 
(
ÌÌ  
s_Points
ÌÌ  (
[
ÌÌ( )
i
ÌÌ) *
]
ÌÌ* +
)
ÌÌ+ ,
;
ÌÌ, -
}
ÓÓ 
using
 
(
 
var
 
points
 
=
 
new
 "!
EditorHandleDrawing
# 6
.
6 7
PointDrawingScope
7 H
(
H I
ColorUtility
I U
.
U V
GetColor
V ^
(
^ _
offset
_ e
)
e f
)
f g
)
g h
{
ÒÒ 
for
ÚÚ 
(
ÚÚ 
int
ÚÚ 
i
ÚÚ 
=
ÚÚ 
$num
ÚÚ 
;
ÚÚ 
i
ÚÚ  !
<
ÚÚ" #
s_Points
ÚÚ$ ,
.
ÚÚ, -
Count
ÚÚ- 2
;
ÚÚ2 3
i
ÚÚ4 5
+=
ÚÚ6 8
$num
ÚÚ9 :
)
ÚÚ: ;
points
ÛÛ 
.
ÛÛ 
Draw
ÛÛ 
(
ÛÛ  
s_Points
ÛÛ  (
[
ÛÛ( )
i
ÛÛ) *
]
ÛÛ* +
+
ÛÛ, -
s_Points
ÛÛ. 6
[
ÛÛ6 7
i
ÛÛ7 8
+
ÛÛ8 9
$num
ÛÛ9 :
]
ÛÛ: ;
)
ÛÛ; <
;
ÛÛ< =
}
ÙÙ 
}
ıı 	
}
ˆˆ 
}˜˜ ·%
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\FlipFaceEdge.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
FlipFaceEdge 
: 

MenuAction  *
{ 
public		 
override		 
ToolbarGroup		 $
group		% *
{

 	
get 
{ 
return 
ToolbarGroup %
.% &
Geometry& .
;. /
}0 1
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- C
,C D
IconSkinE M
.M N
ProN Q
)Q R
;R S
}T U
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str  
,  !
$str	 Ñ
) 
; 
public 
override 

SelectMode "
validSelectModes# 3
{ 	
get   
{   
return   

SelectMode   #
.  # $
Face  $ (
;  ( )
}  * +
}!! 	
public## 
override## 
bool## 
enabled## $
{$$ 	
get%% 
{%% 
return%% 
base%% 
.%% 
enabled%% %
&&%%& (
MeshSelection%%) 6
.%%6 7
selectedFaceCount%%7 H
>%%I J
$num%%K L
;%%L M
}%%N O
}&& 	
public(( 
override(( 
ActionResult(( $
DoAction((% -
(((- .
)((. /
{)) 	
if** 
(** 
MeshSelection** 
.** 
selectedObjectCount** 1
<**2 3
$num**4 5
)**5 6
return++ 
ActionResult++ #
.++# $
NoSelection++$ /
;++/ 0
UndoUtility-- 
.-- 
RecordSelection-- '
(--' (
$str--( 9
)--9 :
;--: ;
int.. 
success.. 
=.. 
$num.. 
;.. 
int// 
attempts// 
=// 
$num// 
;// 
foreach11 
(11 
ProBuilderMesh11 #
pb11$ &
in11' )
MeshSelection11* 7
.117 8
topInternal118 C
)11C D
{22 
foreach33 
(33 
Face33 
face33 "
in33# %
pb33& (
.33( )!
selectedFacesInternal33) >
)33> ?
{44 
if55 
(55 
pb55 
.55 
FlipEdge55 #
(55# $
face55$ (
)55( )
)55) *
success66 
++66 !
;66! "
}77 
attempts99 
++99 
;99 
pb;; 
.;; 
ToMesh;; 
(;; 
);; 
;;; 
pb<< 
.<< 
Refresh<< 
(<< 
)<< 
;<< 
pb== 
.== 
Optimize== 
(== 
)== 
;== 
}>> 
ProBuilderEditor@@ 
.@@ 
Refresh@@ $
(@@$ %
)@@% &
;@@& '
ifBB 
(BB 
successBB 
>BB 
$numBB 
)BB 
returnCC 
newCC 
ActionResultCC '
(CC' (
ActionResultCC( 4
.CC4 5
StatusCC5 ;
.CC; <
SuccessCC< C
,CCC D
$strCCE O
+CCP Q
successCCR Y
+CCZ [
$strCC\ d
)CCd e
;CCe f
returnEE 
newEE 
ActionResultEE #
(EE# $
ActionResultEE$ 0
.EE0 1
StatusEE1 7
.EE7 8
FailureEE8 ?
,EE? @
stringEEA G
.EEG H
FormatEEH N
(EEN O
$strEEO `
,EE` a
attemptsEEb j
>EEk l
$numEEm n
?EEo p
$str	EEq Ü
:
EEá à
$str
EEâ ú
)
EEú ù
)
EEù û
;
EEû ü
}FF 	
}GG 
}HH ◊
£D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\ProBuilderMenuActionAttribute.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
[ 
AttributeUsage 
( 
AttributeTargets $
.$ %
Class% *
)* +
]+ ,
public 

sealed 
class )
ProBuilderMenuActionAttribute 5
:6 7
	Attribute8 A
{ 
} 
}   §5
ùD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\UnityScenePostProcessor.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
{

 
static 

class #
UnityScenePostProcessor (
{ 
[ 	
UserSetting	 
( 
$str 
, 
$str  2
,2 3
$str	4 õ
)
õ ú
]
ú ù
static 
Pref 
< 
bool 
> 
m_ScriptStripping +
=, -
new. 1
Pref2 6
<6 7
bool7 ;
>; <
(< =
$str= c
,c d
truee i
)i j
;j k
[ 	
PostProcessScene	 
] 
public 
static 
void 
OnPostprocessScene -
(- .
). /
{ 	
var !
invisibleFaceMaterial %
=& '
	Resources( 1
.1 2
Load2 6
<6 7
Material7 ?
>? @
(@ A
$strA Z
)Z [
;[ \
foreach 
( 
var 
pb 
in 
Object %
.% &
FindObjectsOfType& 7
<7 8
ProBuilderMesh8 F
>F G
(G H
)H I
)I J
{ 
if 
( 
pb 
. 
GetComponent #
<# $
MeshRenderer$ 0
>0 1
(1 2
)2 3
==4 6
null7 ;
); <
continue 
; 
if 
( 
pb 
. 
GetComponent #
<# $
MeshRenderer$ 0
>0 1
(1 2
)2 3
.3 4
sharedMaterials4 C
.C D
AnyD G
(G H
xH I
=>J L
xM N
!=O Q
nullR V
&&W Y
xZ [
.[ \
name\ `
.` a
Containsa i
(i j
$strj r
)r s
)s t
)t u
{ 
Material   
[   
]   
mats   #
=  $ %
pb  & (
.  ( )
GetComponent  ) 5
<  5 6
MeshRenderer  6 B
>  B C
(  C D
)  D E
.  E F
sharedMaterials  F U
;  U V
for"" 
("" 
int"" 
i"" 
=""  
$num""! "
;""" #
i""$ %
<""& '
mats""( ,
."", -
Length""- 3
;""3 4
i""5 6
++""6 8
)""8 9
{## 
if$$ 
($$ 
mats$$  
[$$  !
i$$! "
]$$" #
.$$# $
name$$$ (
.$$( )
Contains$$) 1
($$1 2
$str$$2 :
)$$: ;
)$$; <
mats%%  
[%%  !
i%%! "
]%%" #
=%%$ %!
invisibleFaceMaterial%%& ;
;%%; <
}&& 
pb(( 
.(( 
GetComponent(( #
<((# $
MeshRenderer(($ 0
>((0 1
(((1 2
)((2 3
.((3 4
sharedMaterials((4 C
=((D E
mats((F J
;((J K
})) 
}** 
if,, 
(,, 
EditorApplication,, !
.,,! ")
isPlayingOrWillChangePlaymode,," ?
),,? @
return-- 
;-- 
foreach// 
(// 
var// 
entity// 
in//  "
	Resources//# ,
.//, - 
FindObjectsOfTypeAll//- A
<//A B
EntityBehaviour//B Q
>//Q R
(//R S
)//S T
)//T U
{00 
if11 
(11 
entity11 
.11 
manageVisibility11 +
)11+ ,
entity22 
.22 
OnEnterPlayMode22 *
(22* +
)22+ ,
;22, -
}33 
foreach55 
(55 
var55 
mesh55 
in55  
Object55! '
.55' (
FindObjectsOfType55( 9
<559 :
ProBuilderMesh55: H
>55H I
(55I J
)55J K
)55K L
{66 
EditorUtility77 
.77 %
SynchronizeWithMeshFilter77 7
(777 8
mesh778 <
)77< =
;77= >
if99 
(99 
mesh99 
.99 
mesh99 
==99  
null99! %
)99% &
continue:: 
;:: 

GameObject<< 

gameObject<< %
=<<& '
mesh<<( ,
.<<, -

gameObject<<- 7
;<<7 8
var== 
entity== 
=== 
ProcessLegacyEntity== 0
(==0 1

gameObject==1 ;
)==; <
;==< =
ifNN 
(NN 
m_ScriptStrippingNN %
==NN& (
falseNN) .
)NN. /
continueOO 
;OO 
meshQQ 
.QQ &
preserveMeshAssetOnDestroyQQ /
=QQ0 1
trueQQ2 6
;QQ6 7
ObjectRR 
.RR 
DestroyImmediateRR '
(RR' (
meshRR( ,
)RR, -
;RR- .
ObjectSS 
.SS 
DestroyImmediateSS '
(SS' (
entitySS( .
)SS. /
;SS/ 0
}TT 
}UU 	
staticWW 
EntityWW 
ProcessLegacyEntityWW )
(WW) *

GameObjectWW* 4
goWW5 7
)WW7 8
{XX 	
EntityZZ 
entityZZ 
=ZZ 
goZZ 
.ZZ 
GetComponentZZ +
<ZZ+ ,
EntityZZ, 2
>ZZ2 3
(ZZ3 4
)ZZ4 5
;ZZ5 6
if\\ 
(\\ 
entity\\ 
==\\ 
null\\ 
)\\ 
return]] 
null]] 
;]] 
if__ 
(__ 
entity__ 
.__ 

entityType__ !
==__" $

EntityType__% /
.__/ 0
Collider__0 8
||__9 ;
entity__< B
.__B C

entityType__C M
==__N P

EntityType__Q [
.__[ \
Trigger__\ c
)__c d
go`` 
.`` 
GetComponent`` 
<``  
MeshRenderer``  ,
>``, -
(``- .
)``. /
.``/ 0
enabled``0 7
=``8 9
false``: ?
;``? @
returnbb 
entitybb 
;bb 
}cc 	
}dd 
}ee œ“
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\EditorGUIUtility.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
.		  !
UI		! #
{

 
static 

class 
EditorGUIUtility !
{ 
static 
class 
Styles 
{ 	
static 
bool 
s_Initialized %
;% &
public 
static 
GUIStyle "
command# *
=+ ,
$str- 6
;6 7
public 
static 

GUIContent $
[$ %
]% &
selectModeIcons' 6
;6 7
public 
static 
void 
Init #
(# $
)$ %
{ 
if 
( 
s_Initialized !
)! "
return 
; 
s_Initialized 
= 
true  $
;$ %
var 
object_Graphic_off &
=' (
IconUtility) 4
.4 5
GetIcon5 <
(< =
$str= P
)P Q
;Q R
var 
face_Graphic_off $
=% &
IconUtility' 2
.2 3
GetIcon3 :
(: ;
$str; L
)L M
;M N
var   
vertex_Graphic_off   &
=  ' (
IconUtility  ) 4
.  4 5
GetIcon  5 <
(  < =
$str  = P
)  P Q
;  Q R
var!! 
edge_Graphic_off!! $
=!!% &
IconUtility!!' 2
.!!2 3
GetIcon!!3 :
(!!: ;
$str!!; L
)!!L M
;!!M N
selectModeIcons## 
=##  !
new##" %

GUIContent##& 0
[##0 1
]##1 2
{$$ 
object_Graphic_off%% &
!=%%' )
null%%* .
?&& 
new&& 

GUIContent&& $
(&&$ %
object_Graphic_off&&% 7
,&&7 8
$str&&9 K
)&&K L
:'' 
new'' 

GUIContent'' $
(''$ %
$str''% *
,''* +
$str'', >
)''> ?
,''? @
vertex_Graphic_off(( &
!=((' )
null((* .
?)) 
new)) 

GUIContent)) $
())$ %
vertex_Graphic_off))% 7
,))7 8
$str))9 K
)))K L
:** 
new** 

GUIContent** $
(**$ %
$str**% *
,*** +
$str**, >
)**> ?
,**? @
edge_Graphic_off++ $
!=++% '
null++( ,
?,, 
new,, 

GUIContent,, $
(,,$ %
edge_Graphic_off,,% 5
,,,5 6
$str,,7 G
),,G H
:-- 
new-- 

GUIContent-- $
(--$ %
$str--% *
,--* +
$str--, <
)--< =
,--= >
face_Graphic_off.. $
!=..% '
null..( ,
?// 
new// 

GUIContent// $
(//$ %
face_Graphic_off//% 5
,//5 6
$str//7 G
)//G H
:00 
new00 

GUIContent00 $
(00$ %
$str00% *
,00* +
$str00, <
)00< =
,00= >
}11 
;11 
}22 
}33 	
static55 
readonly55 
Color55 
TOOL_SETTINGS_COLOR55 1
=552 3
UnityEditor554 ?
.55? @
EditorGUIUtility55@ P
.55P Q
	isProSkin55Q Z
?66 
Color66 
.66 
green66 
:77 
new77 
Color77 
(77 
$num77 
,77 
$num77  
,77  !
$num77" %
,77% &
$num77' *
)77* +
;77+ ,
static99 
GUIStyle99 
_splitStyle99 #
;99# $
static:: 
GUIStyle:: 

SplitStyle:: "
{;; 	
get<< 
{== 
if>> 
(>> 
_splitStyle>> 
==>>  "
null>># '
)>>' (
{?? 
_splitStyle@@ 
=@@  !
new@@" %
GUIStyle@@& .
(@@. /
)@@/ 0
;@@0 1
_splitStyleAA 
.AA  
normalAA  &
.AA& '

backgroundAA' 1
=AA2 3
UnityEditorAA4 ?
.AA? @
EditorGUIUtilityAA@ P
.AAP Q
whiteTextureAAQ ]
;AA] ^
_splitStyleBB 
.BB  
marginBB  &
=BB' (
newBB) ,

RectOffsetBB- 7
(BB7 8
$numBB8 9
,BB9 :
$numBB; <
,BB< =
$numBB> ?
,BB? @
$numBBA B
)BBB C
;BBC D
}CC 
returnDD 
_splitStyleDD "
;DD" #
}EE 
}FF 	
staticHH 
GUIStyleHH "
_centeredGreyMiniLabelHH .
;HH. /
publicII 
staticII 
GUIStyleII !
CenteredGreyMiniLabelII 4
{JJ 	
getKK 
{LL 
ifMM 
(MM "
_centeredGreyMiniLabelMM *
==MM+ -
nullMM. 2
)MM2 3
{NN "
_centeredGreyMiniLabelOO *
=OO+ ,
newOO- 0
GUIStyleOO1 9
(OO9 :
UnityEditorOO: E
.OOE F
EditorStylesOOF R
.OOR S
labelOOS X
)OOX Y
;OOY Z"
_centeredGreyMiniLabelPP *
.PP* +
normalPP+ 1
.PP1 2
	textColorPP2 ;
=PP< =
ColorPP> C
.PPC D
grayPPD H
;PPH I"
_centeredGreyMiniLabelQQ *
.QQ* +
	alignmentQQ+ 4
=QQ5 6

TextAnchorQQ7 A
.QQA B
MiddleCenterQQB N
;QQN O
}RR 
returnSS "
_centeredGreyMiniLabelSS -
;SS- .
}TT 
}UU 	
staticWW 
GUIStyleWW !
_solidBackgroundStyleWW -
;WW- .
publicXX 
staticXX 
GUIStyleXX  
solidBackgroundStyleXX 3
{YY 	
getZZ 
{[[ 
if\\ 
(\\ !
_solidBackgroundStyle\\ )
==\\* ,
null\\- 1
)\\1 2
{]] !
_solidBackgroundStyle^^ )
=^^* +
new^^, /
GUIStyle^^0 8
(^^8 9
)^^9 :
;^^: ;!
_solidBackgroundStyle__ )
.__) *
normal__* 0
.__0 1

background__1 ;
=__< =
UnityEditor__> I
.__I J
EditorGUIUtility__J Z
.__Z [
whiteTexture__[ g
;__g h
}`` 
returnaa !
_solidBackgroundStyleaa ,
;aa, -
}bb 
}cc 	
staticee 
GUIStyleee /
#_buttonNoBackgroundSmallMarginStyleee ;
=ee< =
nullee> B
;eeB C
publicff 
staticff 
GUIStyleff .
"ButtonNoBackgroundSmallMarginStyleff A
{gg 	
gethh 
{ii 
ifjj 
(jj /
#_buttonNoBackgroundSmallMarginStylejj 7
==jj8 :
nulljj; ?
)jj? @
{kk /
#_buttonNoBackgroundSmallMarginStylell 7
=ll8 9
newll: =
GUIStylell> F
(llF G
)llG H
;llH I/
#_buttonNoBackgroundSmallMarginStylemm 7
.mm7 8
marginmm8 >
=mm? @
newmmA D

RectOffsetmmE O
(mmO P
$nummmP Q
,mmQ R
$nummmS T
,mmT U
$nummmV W
,mmW X
$nummmY Z
)mmZ [
;mm[ \/
#_buttonNoBackgroundSmallMarginStylenn 7
.nn7 8
	alignmentnn8 A
=nnB C

TextAnchornnD N
.nnN O
MiddleCenternnO [
;nn[ \/
#_buttonNoBackgroundSmallMarginStyleoo 7
.oo7 8
paddingoo8 ?
=oo@ A
newooB E

RectOffsetooF P
(ooP Q
$numooQ R
,ooR S
$numooT U
,ooU V
$numooW X
,ooX Y
$numooZ [
)oo[ \
;oo\ ]
}pp 
returnqq /
#_buttonNoBackgroundSmallMarginStyleqq :
;qq: ;
}rr 
}ss 	
staticuu 

GUIContentuu 
_guiContentuu %
=uu& '
nulluu( ,
;uu, -
publicww 
staticww 

GUIContentww  
TempContentww! ,
(ww, -
stringww- 3
labelww4 9
,ww9 :
stringww; A
tooltipwwB I
=wwJ K
nullwwL P
,wwP Q
	Texture2DwwR [
iconww\ `
=wwa b
nullwwc g
)wwg h
{xx 	
ifyy 
(yy 
_guiContentyy 
==yy 
nullyy #
)yy# $
_guiContentzz 
=zz 
newzz !

GUIContentzz" ,
(zz, -
)zz- .
;zz. /
_guiContent|| 
.|| 
text|| 
=|| 
label|| $
;||$ %
_guiContent}} 
.}} 
tooltip}} 
=}}  !
tooltip}}" )
;}}) *
_guiContent~~ 
.~~ 
image~~ 
=~~ 
icon~~  $
;~~$ %
return
ÄÄ 
_guiContent
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
static
ÉÉ 
Stack
ÉÉ 
<
ÉÉ 
bool
ÉÉ 
>
ÉÉ 
s_GuiEnabled
ÉÉ '
=
ÉÉ( )
new
ÉÉ* -
Stack
ÉÉ. 3
<
ÉÉ3 4
bool
ÉÉ4 8
>
ÉÉ8 9
(
ÉÉ9 :
)
ÉÉ: ;
;
ÉÉ; <
static
ÑÑ 
Stack
ÑÑ 
<
ÑÑ 
Color
ÑÑ 
>
ÑÑ 
s_ContentColor
ÑÑ *
=
ÑÑ+ ,
new
ÑÑ- 0
Stack
ÑÑ1 6
<
ÑÑ6 7
Color
ÑÑ7 <
>
ÑÑ< =
(
ÑÑ= >
)
ÑÑ> ?
;
ÑÑ? @
static
ÖÖ 
Stack
ÖÖ 
<
ÖÖ 
Color
ÖÖ 
>
ÖÖ 
s_BackgroundColor
ÖÖ -
=
ÖÖ. /
new
ÖÖ0 3
Stack
ÖÖ4 9
<
ÖÖ9 :
Color
ÖÖ: ?
>
ÖÖ? @
(
ÖÖ@ A
)
ÖÖA B
;
ÖÖB C
public
áá 
static
áá 
void
áá 
PushGUIEnabled
áá )
(
áá) *
bool
áá* .
enabled
áá/ 6
)
áá6 7
{
àà 	
s_GuiEnabled
ââ 
.
ââ 
Push
ââ 
(
ââ 
GUI
ââ !
.
ââ! "
enabled
ââ" )
)
ââ) *
;
ââ* +
GUI
ää 
.
ää 
enabled
ää 
=
ää 
enabled
ää !
;
ää! "
}
ãã 	
public
çç 
static
çç 
void
çç 
PopGUIEnabled
çç (
(
çç( )
)
çç) *
{
éé 	
GUI
èè 
.
èè 
enabled
èè 
=
èè 
s_GuiEnabled
èè &
.
èè& '
Pop
èè' *
(
èè* +
)
èè+ ,
;
èè, -
}
êê 	
public
íí 
static
íí 
void
íí !
PushGUIContentColor
íí .
(
íí. /
Color
íí/ 4
color
íí5 :
)
íí: ;
{
ìì 	
s_ContentColor
îî 
.
îî 
Push
îî 
(
îî  
GUI
îî  #
.
îî# $
color
îî$ )
)
îî) *
;
îî* +
GUI
ïï 
.
ïï 
contentColor
ïï 
=
ïï 
color
ïï $
;
ïï$ %
}
ññ 	
public
òò 
static
òò 
void
òò  
PopGUIContentColor
òò -
(
òò- .
)
òò. /
{
ôô 	
GUI
öö 
.
öö 
contentColor
öö 
=
öö 
s_ContentColor
öö -
.
öö- .
Pop
öö. 1
(
öö1 2
)
öö2 3
;
öö3 4
}
õõ 	
public
ùù 
static
ùù 
void
ùù !
PushBackgroundColor
ùù .
(
ùù. /
Color
ùù/ 4
color
ùù5 :
)
ùù: ;
{
ûû 	
s_BackgroundColor
üü 
.
üü 
Push
üü "
(
üü" #
GUI
üü# &
.
üü& '
backgroundColor
üü' 6
)
üü6 7
;
üü7 8
GUI
†† 
.
†† 
backgroundColor
†† 
=
††  !
color
††" '
;
††' (
}
°° 	
public
££ 
static
££ 
void
££  
PopBackgroundColor
££ -
(
££- .
)
££. /
{
§§ 	
GUI
•• 
.
•• 
backgroundColor
•• 
=
••  !
s_BackgroundColor
••" 3
.
••3 4
Pop
••4 7
(
••7 8
)
••8 9
;
••9 :
}
¶¶ 	
public
¨¨ 
static
¨¨ 
void
¨¨ 
DrawSeparator
¨¨ (
(
¨¨( )
int
¨¨) ,
lines
¨¨- 2
,
¨¨2 3
Color
¨¨4 9
color
¨¨: ?
)
¨¨? @
{
≠≠ 	
Color
ÆÆ 
old
ÆÆ 
=
ÆÆ 
UnityEngine
ÆÆ #
.
ÆÆ# $
GUI
ÆÆ$ '
.
ÆÆ' (
backgroundColor
ÆÆ( 7
;
ÆÆ7 8
UnityEngine
ØØ 
.
ØØ 
GUI
ØØ 
.
ØØ 
backgroundColor
ØØ +
=
ØØ, -
color
ØØ. 3
;
ØØ3 4
DrawSeparator
∞∞ 
(
∞∞ 
lines
∞∞ 
)
∞∞  
;
∞∞  !
UnityEngine
±± 
.
±± 
GUI
±± 
.
±± 
backgroundColor
±± +
=
±±, -
old
±±. 1
;
±±1 2
}
≤≤ 	
public
¥¥ 
static
¥¥ 
void
¥¥ 
DrawSeparator
¥¥ (
(
¥¥( )
int
¥¥) ,
lines
¥¥- 2
)
¥¥2 3
{
µµ 	
	GUILayout
∂∂ 
.
∂∂ 
Box
∂∂ 
(
∂∂ 
$str
∂∂ 
,
∂∂ 

SplitStyle
∂∂ (
,
∂∂( )
	GUILayout
∂∂* 3
.
∂∂3 4
	MaxHeight
∂∂4 =
(
∂∂= >
$num
∂∂> ?
)
∂∂? @
)
∂∂@ A
;
∂∂A B
for
∏∏ 
(
∏∏ 
int
∏∏ 
i
∏∏ 
=
∏∏ 
$num
∏∏ 
;
∏∏ 
i
∏∏ 
<
∏∏ 
lines
∏∏  %
;
∏∏% &
i
∏∏' (
++
∏∏( *
)
∏∏* +
{
ππ 
	GUILayout
∫∫ 
.
∫∫ 
Space
∫∫ 
(
∫∫  
$num
∫∫  !
)
∫∫! "
;
∫∫" #
	GUILayout
ªª 
.
ªª 
Box
ªª 
(
ªª 
$str
ªª  
,
ªª  !

SplitStyle
ªª" ,
,
ªª, -
	GUILayout
ªª. 7
.
ªª7 8
	MaxHeight
ªª8 A
(
ªªA B
$num
ªªB C
)
ªªC D
)
ªªD E
;
ªªE F
}
ºº 
}
ΩΩ 	
static
øø 

Dictionary
øø 
<
øø 
GUIStyle
øø "
,
øø" #
GUIStyle
øø$ ,
>
øø, -
onStyles
øø. 6
=
øø7 8
new
øø9 <

Dictionary
øø= G
<
øøG H
GUIStyle
øøH P
,
øøP Q
GUIStyle
øøR Z
>
øøZ [
(
øø[ \
)
øø\ ]
;
øø] ^
public
¡¡ 
static
¡¡ 
GUIStyle
¡¡ 

GetOnStyle
¡¡ )
(
¡¡) *
GUIStyle
¡¡* 2
style
¡¡3 8
)
¡¡8 9
{
¬¬ 	
GUIStyle
√√ 
on
√√ 
;
√√ 
if
≈≈ 
(
≈≈ 
onStyles
≈≈ 
.
≈≈ 
TryGetValue
≈≈ $
(
≈≈$ %
style
≈≈% *
,
≈≈* +
out
≈≈, /
on
≈≈0 2
)
≈≈2 3
)
≈≈3 4
return
∆∆ 
on
∆∆ 
;
∆∆ 
on
»» 
=
»» 
new
»» 
GUIStyle
»» 
(
»» 
style
»» #
)
»»# $
;
»»$ %
on
…… 
.
…… 
normal
…… 
.
…… 
	textColor
…… 
=
……  !
on
……" $
.
……$ %
onNormal
……% -
.
……- .
	textColor
……. 7
;
……7 8
on
   
.
   
normal
   
.
   

background
    
=
  ! "
on
  # %
.
  % &
onNormal
  & .
.
  . /

background
  / 9
;
  9 :
onStyles
ÀÀ 
.
ÀÀ 
Add
ÀÀ 
(
ÀÀ 
style
ÀÀ 
,
ÀÀ 
on
ÀÀ  "
)
ÀÀ" #
;
ÀÀ# $
return
ÃÃ 
on
ÃÃ 
;
ÃÃ 
}
ÕÕ 	
static
œœ 

Dictionary
œœ 
<
œœ 
GUIStyle
œœ "
,
œœ" #
GUIStyle
œœ$ ,
>
œœ, -
activeStyles
œœ. :
=
œœ; <
new
œœ= @

Dictionary
œœA K
<
œœK L
GUIStyle
œœL T
,
œœT U
GUIStyle
œœV ^
>
œœ^ _
(
œœ_ `
)
œœ` a
;
œœa b
public
—— 
static
—— 
GUIStyle
—— 
GetActiveStyle
—— -
(
——- .
GUIStyle
——. 6
style
——7 <
)
——< =
{
““ 	
GUIStyle
”” 
activeStyle
””  
;
””  !
if
’’ 
(
’’ 
activeStyles
’’ 
.
’’ 
TryGetValue
’’ (
(
’’( )
style
’’) .
,
’’. /
out
’’0 3
activeStyle
’’4 ?
)
’’? @
)
’’@ A
return
÷÷ 
activeStyle
÷÷ "
;
÷÷" #
activeStyle
ÿÿ 
=
ÿÿ 
new
ÿÿ 
GUIStyle
ÿÿ &
(
ÿÿ& '
style
ÿÿ' ,
)
ÿÿ, -
;
ÿÿ- .
activeStyle
ŸŸ 
.
ŸŸ 
normal
ŸŸ 
.
ŸŸ 
	textColor
ŸŸ (
=
ŸŸ) *
activeStyle
ŸŸ+ 6
.
ŸŸ6 7
active
ŸŸ7 =
.
ŸŸ= >
	textColor
ŸŸ> G
;
ŸŸG H
activeStyle
⁄⁄ 
.
⁄⁄ 
normal
⁄⁄ 
.
⁄⁄ 

background
⁄⁄ )
=
⁄⁄* +
activeStyle
⁄⁄, 7
.
⁄⁄7 8
active
⁄⁄8 >
.
⁄⁄> ?

background
⁄⁄? I
;
⁄⁄I J
activeStyles
€€ 
.
€€ 
Add
€€ 
(
€€ 
style
€€ "
,
€€" #
activeStyle
€€$ /
)
€€/ 0
;
€€0 1
return
‹‹ 
activeStyle
‹‹ 
;
‹‹ 
}
›› 	
public
‚‚ 
static
‚‚ 
void
‚‚ 
DrawSolidColor
‚‚ )
(
‚‚) *
Rect
‚‚* .
rect
‚‚/ 3
,
‚‚3 4
Color
‚‚5 :
col
‚‚; >
)
‚‚> ?
{
„„ 	
Color
‰‰ 
old
‰‰ 
=
‰‰ 
UnityEngine
‰‰ #
.
‰‰# $
GUI
‰‰$ '
.
‰‰' (
backgroundColor
‰‰( 7
;
‰‰7 8
UnityEngine
ÂÂ 
.
ÂÂ 
GUI
ÂÂ 
.
ÂÂ 
backgroundColor
ÂÂ +
=
ÂÂ, -
col
ÂÂ. 1
;
ÂÂ1 2
UnityEngine
ÁÁ 
.
ÁÁ 
GUI
ÁÁ 
.
ÁÁ 
Box
ÁÁ 
(
ÁÁ  
rect
ÁÁ  $
,
ÁÁ$ %
$str
ÁÁ& (
,
ÁÁ( )

SplitStyle
ÁÁ* 4
)
ÁÁ4 5
;
ÁÁ5 6
UnityEngine
ÈÈ 
.
ÈÈ 
GUI
ÈÈ 
.
ÈÈ 
backgroundColor
ÈÈ +
=
ÈÈ, -
old
ÈÈ. 1
;
ÈÈ1 2
}
ÍÍ 	
const
ÏÏ 
int
ÏÏ 
FieldBoxWidth
ÏÏ 
=
ÏÏ  !
$num
ÏÏ" $
;
ÏÏ$ %
public
ÓÓ 
static
ÓÓ 
float
ÓÓ #
FloatFieldConstrained
ÓÓ 1
(
ÓÓ1 2

GUIContent
ÓÓ2 <
content
ÓÓ= D
,
ÓÓD E
float
ÓÓF K
value
ÓÓL Q
,
ÓÓQ R
int
ÓÓS V
width
ÓÓW \
)
ÓÓ\ ]
{
ÔÔ 	
	GUILayout
 
.
 
BeginHorizontal
 %
(
% &
)
& '
;
' (
	GUILayout
ÒÒ 
.
ÒÒ 
Label
ÒÒ 
(
ÒÒ 
content
ÒÒ #
,
ÒÒ# $
	GUILayout
ÒÒ% .
.
ÒÒ. /
MaxWidth
ÒÒ/ 7
(
ÒÒ7 8
width
ÒÒ8 =
-
ÒÒ> ?
FieldBoxWidth
ÒÒ@ M
)
ÒÒM N
)
ÒÒN O
;
ÒÒO P
value
ÚÚ 
=
ÚÚ 
UnityEditor
ÚÚ 
.
ÚÚ  
EditorGUILayout
ÚÚ  /
.
ÚÚ/ 0

FloatField
ÚÚ0 :
(
ÚÚ: ;
$str
ÚÚ; =
,
ÚÚ= >
value
ÚÚ? D
,
ÚÚD E
	GUILayout
ÚÚF O
.
ÚÚO P
MaxWidth
ÚÚP X
(
ÚÚX Y
FieldBoxWidth
ÚÚY f
-
ÚÚg h
$num
ÚÚi j
)
ÚÚj k
)
ÚÚk l
;
ÚÚl m
	GUILayout
ÛÛ 
.
ÛÛ 
EndHorizontal
ÛÛ #
(
ÛÛ# $
)
ÛÛ$ %
;
ÛÛ% &
return
ıı 
value
ıı 
;
ıı 
}
ˆˆ 	
public
¯¯ 
static
¯¯ 
int
¯¯ !
IntFieldConstrained
¯¯ -
(
¯¯- .

GUIContent
¯¯. 8
content
¯¯9 @
,
¯¯@ A
int
¯¯B E
value
¯¯F K
,
¯¯K L
int
¯¯M P
width
¯¯Q V
)
¯¯V W
{
˘˘ 	
	GUILayout
˙˙ 
.
˙˙ 
BeginHorizontal
˙˙ %
(
˙˙% &
)
˙˙& '
;
˙˙' (
	GUILayout
˚˚ 
.
˚˚ 
Label
˚˚ 
(
˚˚ 
content
˚˚ #
,
˚˚# $
	GUILayout
˚˚% .
.
˚˚. /
MaxWidth
˚˚/ 7
(
˚˚7 8
width
˚˚8 =
-
˚˚> ?
FieldBoxWidth
˚˚@ M
)
˚˚M N
)
˚˚N O
;
˚˚O P
value
¸¸ 
=
¸¸ 
UnityEditor
¸¸ 
.
¸¸  
EditorGUILayout
¸¸  /
.
¸¸/ 0
IntField
¸¸0 8
(
¸¸8 9
$str
¸¸9 ;
,
¸¸; <
value
¸¸= B
,
¸¸B C
	GUILayout
¸¸D M
.
¸¸M N
MaxWidth
¸¸N V
(
¸¸V W
FieldBoxWidth
¸¸W d
-
¸¸e f
$num
¸¸g h
)
¸¸h i
)
¸¸i j
;
¸¸j k
	GUILayout
˝˝ 
.
˝˝ 
EndHorizontal
˝˝ #
(
˝˝# $
)
˝˝$ %
;
˝˝% &
return
ˇˇ 
value
ˇˇ 
;
ˇˇ 
}
ÄÄ 	
static
ÇÇ 

GUIContent
ÇÇ 
slider_guicontent
ÇÇ +
=
ÇÇ, -
new
ÇÇ. 1

GUIContent
ÇÇ2 <
(
ÇÇ< =
$str
ÇÇ= ?
,
ÇÇ? @
$str
ÇÇA C
)
ÇÇC D
;
ÇÇD E
public
ÑÑ 
static
ÑÑ 
float
ÑÑ 

FreeSlider
ÑÑ &
(
ÑÑ& '
string
ÑÑ' -
content
ÑÑ. 5
,
ÑÑ5 6
float
ÑÑ7 <
value
ÑÑ= B
,
ÑÑB C
float
ÑÑD I
min
ÑÑJ M
,
ÑÑM N
float
ÑÑO T
max
ÑÑU X
)
ÑÑX Y
{
ÖÖ 	
slider_guicontent
ÜÜ 
.
ÜÜ 
text
ÜÜ "
=
ÜÜ# $
content
ÜÜ% ,
;
ÜÜ, -
return
áá 

FreeSlider
áá 
(
áá 
slider_guicontent
áá /
,
áá/ 0
value
áá1 6
,
áá6 7
min
áá8 ;
,
áá; <
max
áá= @
)
áá@ A
;
ááA B
}
àà 	
public
çç 
static
çç 
float
çç 

FreeSlider
çç &
(
çç& '

GUIContent
çç' 1
content
çç2 9
,
çç9 :
float
çç; @
value
ççA F
,
ççF G
float
ççH M
min
ççN Q
,
ççQ R
float
ççS X
max
ççY \
)
çç\ ]
{
éé 	
float
èè 
pixelsPerPoint
èè  
=
èè! "
$num
èè# %
;
èè% &
pixelsPerPoint
ëë 
=
ëë 
UnityEditor
ëë (
.
ëë( )
EditorGUIUtility
ëë) 9
.
ëë9 :
pixelsPerPoint
ëë: H
;
ëëH I
float
ìì 
PAD
ìì 
=
ìì 
$num
ìì 
/
ìì 
pixelsPerPoint
ìì +
;
ìì+ ,
float
îî 
sliderHeight
îî 
=
îî  
UnityEditor
îî! ,
.
îî, -
EditorGUIUtility
îî- =
.
îî= >
singleLineHeight
îî> N
;
îîN O
const
ïï 
float
ïï 
MIN_LABEL_WIDTH
ïï '
=
ïï( )
$num
ïï* ,
;
ïï, -
const
ññ 
float
ññ 
MAX_LABEL_WIDTH
ññ '
=
ññ( )
$num
ññ* .
;
ññ. /
const
óó 
float
óó 
MIN_FIELD_WIDTH
óó '
=
óó( )
$num
óó* -
;
óó- .
Rect
ôô 
rect
ôô 
=
ôô 
EditorGUILayout
ôô '
.
ôô' (
GetSliderRect
ôô( 5
(
ôô5 6
true
ôô6 :
)
ôô: ;
;
ôô; <
float
öö 
y
öö 
=
öö 
rect
öö 
.
öö 
y
öö 
;
öö 
float
úú 

labelWidth
úú 
=
úú 
content
úú &
!=
úú' )
null
úú* .
?
úú/ 0
Mathf
úú1 6
.
úú6 7
Max
úú7 :
(
úú: ;
MIN_LABEL_WIDTH
úú; J
,
úúJ K
Mathf
úúL Q
.
úúQ R
Min
úúR U
(
úúU V
GUI
úúV Y
.
úúY Z
skin
úúZ ^
.
úú^ _
label
úú_ d
.
úúd e
CalcSize
úúe m
(
úúm n
content
úún u
)
úúu v
.
úúv w
x
úúw x
+
úúy z
PAD
úú{ ~
,
úú~ 
MAX_LABEL_WIDTHúúÄ è
)úúè ê
)úúê ë
:úúí ì
$numúúî ñ
;úúñ ó
float
ùù 
	remaining
ùù 
=
ùù 
(
ùù 
(
ùù  
Screen
ùù  &
.
ùù& '
width
ùù' ,
/
ùù- .
pixelsPerPoint
ùù/ =
)
ùù= >
-
ùù? @
(
ùùA B
PAD
ùùB E
*
ùùF G
$num
ùùH J
)
ùùJ K
)
ùùK L
-
ùùM N

labelWidth
ùùO Y
;
ùùY Z
float
ûû 
sliderWidth
ûû 
=
ûû 
	remaining
ûû  )
-
ûû* +
(
ûû, -
MIN_FIELD_WIDTH
ûû- <
+
ûû= >
PAD
ûû? B
)
ûûB C
;
ûûC D
float
üü 

floatWidth
üü 
=
üü 
MIN_FIELD_WIDTH
üü .
;
üü. /
Rect
°° 
	labelRect
°° 
=
°° 
new
°°  
Rect
°°! %
(
°°% &
PAD
°°& )
,
°°) *
y
°°+ ,
+
°°- .
$num
°°/ 1
,
°°1 2

labelWidth
°°3 =
,
°°= >
sliderHeight
°°? K
)
°°K L
;
°°L M
Rect
¢¢ 

sliderRect
¢¢ 
=
¢¢ 
new
¢¢ !
Rect
¢¢" &
(
¢¢& '
	labelRect
¢¢' 0
.
¢¢0 1
x
¢¢1 2
+
¢¢3 4

labelWidth
¢¢5 ?
,
¢¢? @
y
¢¢A B
+
¢¢C D
$num
¢¢E G
,
¢¢G H
sliderWidth
¢¢I T
,
¢¢T U
sliderHeight
¢¢V b
)
¢¢b c
;
¢¢c d
Rect
££ 
	floatRect
££ 
=
££ 
new
££  
Rect
££! %
(
££% &

sliderRect
££& 0
.
££0 1
x
££1 2
+
££3 4

sliderRect
££5 ?
.
££? @
width
££@ E
+
££F G
PAD
££H K
,
££K L
y
££M N
+
££O P
$num
££Q S
,
££S T

floatWidth
££U _
,
££_ `
sliderHeight
££a m
)
££m n
;
££n o
if
•• 
(
•• 
content
•• 
!=
•• 
null
•• 
)
••  
GUI
¶¶ 
.
¶¶ 
Label
¶¶ 
(
¶¶ 
	labelRect
¶¶ #
,
¶¶# $
content
¶¶% ,
)
¶¶, -
;
¶¶- .
	EditorGUI
®® 
.
®® 
BeginChangeCheck
®® &
(
®®& '
)
®®' (
;
®®( )
int
™™ 
	controlID
™™ 
=
™™ 

GUIUtility
™™ &
.
™™& '
GetControlID
™™' 3
(
™™3 4
	FocusType
™™4 =
.
™™= >
Passive
™™> E
,
™™E F

sliderRect
™™G Q
)
™™Q R
;
™™R S
float
´´ 
tmp
´´ 
=
´´ 
value
´´ 
;
´´ 
tmp
¨¨ 
=
¨¨ 
GUI
¨¨ 
.
¨¨ 
Slider
¨¨ 
(
¨¨ 

sliderRect
¨¨ '
,
¨¨' (
tmp
¨¨) ,
,
¨¨, -
$num
¨¨. 0
,
¨¨0 1
min
¨¨2 5
,
¨¨5 6
max
¨¨7 :
,
¨¨: ;
GUI
¨¨< ?
.
¨¨? @
skin
¨¨@ D
.
¨¨D E
horizontalSlider
¨¨E U
,
¨¨U V
(
¨¨W X
!
¨¨X Y
	EditorGUI
¨¨Y b
.
¨¨b c
showMixedValue
¨¨c q
)
¨¨q r
?
¨¨s t
GUI
¨¨u x
.
¨¨x y
skin
¨¨y }
.
¨¨} ~$
horizontalSliderThumb¨¨~ ì
:¨¨î ï
$str¨¨ñ £
,¨¨£ §
true¨¨• ©
,¨¨© ™
	controlID¨¨´ ¥
)¨¨¥ µ
;¨¨µ ∂
if
ÆÆ 
(
ÆÆ 
	EditorGUI
ÆÆ 
.
ÆÆ 
EndChangeCheck
ÆÆ (
(
ÆÆ( )
)
ÆÆ) *
)
ÆÆ* +
value
ØØ 
=
ØØ 
Event
ØØ 
.
ØØ 
current
ØØ %
.
ØØ% &
control
ØØ& -
?
ØØ. /
$num
ØØ0 2
*
ØØ3 4
Mathf
ØØ5 :
.
ØØ: ;
Round
ØØ; @
(
ØØ@ A
tmp
ØØA D
/
ØØE F
$num
ØØG I
)
ØØI J
:
ØØK L
tmp
ØØM P
;
ØØP Q
value
±± 
=
±± 
	EditorGUI
±± 
.
±± 

FloatField
±± (
(
±±( )
	floatRect
±±) 2
,
±±2 3
value
±±4 9
)
±±9 :
;
±±: ;
return
≥≥ 
value
≥≥ 
;
≥≥ 
}
¥¥ 	
public
∂∂ 
static
∂∂ 
int
∂∂ !
FreeSliderWithRange
∂∂ -
(
∂∂- .
string
∂∂. 4
content
∂∂5 <
,
∂∂< =
int
∂∂> A
value
∂∂B G
,
∂∂G H
int
∂∂I L
min
∂∂M P
,
∂∂P Q
int
∂∂R U
max
∂∂V Y
,
∂∂Y Z
ref
∂∂[ ^
int
∂∂_ b
uiMin
∂∂c h
,
∂∂h i
ref
∂∂j m
int
∂∂n q
uiMax
∂∂r w
,
∂∂w x
ref
∂∂y |
bool∂∂} Å
expanded∂∂Ç ä
)∂∂ä ã
{
∑∑ 	
slider_guicontent
∏∏ 
.
∏∏ 
text
∏∏ "
=
∏∏# $
content
∏∏% ,
;
∏∏, -
return
ππ !
FreeSliderWithRange
ππ &
(
ππ& '
slider_guicontent
ππ' 8
,
ππ8 9
value
ππ: ?
,
ππ? @
min
ππA D
,
ππD E
max
ππF I
,
ππI J
ref
ππK N
uiMin
ππO T
,
ππT U
ref
ππV Y
uiMax
ππZ _
,
ππ_ `
ref
ππa d
expanded
ππe m
)
ππm n
;
ππn o
}
∫∫ 	
public
¿¿ 
static
¿¿ 
int
¿¿ !
FreeSliderWithRange
¿¿ -
(
¿¿- .

GUIContent
¿¿. 8
content
¿¿9 @
,
¿¿@ A
int
¿¿B E
value
¿¿F K
,
¿¿K L
int
¿¿M P
min
¿¿Q T
,
¿¿T U
int
¿¿V Y
max
¿¿Z ]
,
¿¿] ^
ref
¿¿_ b
int
¿¿c f
uiMin
¿¿g l
,
¿¿l m
ref
¿¿n q
int
¿¿r u
uiMax
¿¿v {
,
¿¿{ |
ref¿¿} Ä
bool¿¿Å Ö
expanded¿¿Ü é
)¿¿é è
{
¡¡ 	
float
¬¬ 
pixelsPerPoint
¬¬  
=
¬¬! "
$num
¬¬# %
;
¬¬% &
pixelsPerPoint
ƒƒ 
=
ƒƒ 
UnityEditor
ƒƒ (
.
ƒƒ( )
EditorGUIUtility
ƒƒ) 9
.
ƒƒ9 :
pixelsPerPoint
ƒƒ: H
;
ƒƒH I
float
∆∆ 
PAD
∆∆ 
=
∆∆ 
$num
∆∆ 
/
∆∆ 
pixelsPerPoint
∆∆ +
;
∆∆+ ,
const
«« 
float
«« 
SLIDER_HEIGHT
«« %
=
««& '
$num
««( +
;
««+ ,
const
»» 
float
»» 
MIN_LABEL_WIDTH
»» '
=
»»( )
$num
»»* ,
;
»», -
const
…… 
float
…… 
MAX_LABEL_WIDTH
…… '
=
……( )
$num
……* .
;
……. /
const
   
float
   
MIN_FIELD_WIDTH
   '
=
  ( )
$num
  * -
;
  - .
GUILayoutUtility
ÃÃ 
.
ÃÃ 
GetRect
ÃÃ $
(
ÃÃ$ %
UnityEditor
ÃÃ% 0
.
ÃÃ0 1
EditorGUIUtility
ÃÃ1 A
.
ÃÃA B
currentViewWidth
ÃÃB R
/
ÃÃS T
pixelsPerPoint
ÃÃU c
,
ÃÃc d
$num
ÃÃe g
)
ÃÃg h
;
ÃÃh i
Rect
ŒŒ 
previousRect
ŒŒ 
=
ŒŒ 
GUILayoutUtility
ŒŒ  0
.
ŒŒ0 1
GetLastRect
ŒŒ1 <
(
ŒŒ< =
)
ŒŒ= >
;
ŒŒ> ?
float
œœ 
y
œœ 
=
œœ 
previousRect
œœ "
.
œœ" #
y
œœ# $
;
œœ$ %
float
—— 

labelWidth
—— 
=
—— 
content
—— &
!=
——' )
null
——* .
?
——/ 0
Mathf
——1 6
.
——6 7
Max
——7 :
(
——: ;
MIN_LABEL_WIDTH
——; J
,
——J K
Mathf
——L Q
.
——Q R
Min
——R U
(
——U V
GUI
——V Y
.
——Y Z
skin
——Z ^
.
——^ _
label
——_ d
.
——d e
CalcSize
——e m
(
——m n
content
——n u
)
——u v
.
——v w
x
——w x
+
——y z
PAD
——{ ~
,
——~ 
MAX_LABEL_WIDTH——Ä è
)——è ê
)——ê ë
:——í ì
$num——î ñ
;——ñ ó
float
““ 
	remaining
““ 
=
““ 
(
““ 
(
““  
Screen
““  &
.
““& '
width
““' ,
/
““- .
pixelsPerPoint
““/ =
)
““= >
-
““? @
(
““A B
PAD
““B E
*
““F G
$num
““H J
)
““J K
)
““K L
-
““M N

labelWidth
““O Y
;
““Y Z
float
”” 
sliderWidth
”” 
=
”” 
	remaining
””  )
-
””* +
(
””, -
MIN_FIELD_WIDTH
””- <
+
””= >
PAD
””? B
)
””B C
;
””C D
float
‘‘ 
intWidth
‘‘ 
=
‘‘ 
MIN_FIELD_WIDTH
‘‘ ,
;
‘‘, -
float
’’ 
indentOffset
’’ 
=
’’  
	EditorGUI
’’! *
.
’’* +
indentLevel
’’+ 6
*
’’7 8
$num
’’9 <
;
’’< =
Rect
◊◊ 
	labelRect
◊◊ 
=
◊◊ 
new
◊◊  
Rect
◊◊! %
(
◊◊% &
PAD
◊◊& )
,
◊◊) *
y
◊◊+ ,
+
◊◊- .
$num
◊◊/ 1
,
◊◊1 2

labelWidth
◊◊3 =
,
◊◊= >
SLIDER_HEIGHT
◊◊? L
)
◊◊L M
;
◊◊M N
Rect
ÿÿ 

sliderRect
ÿÿ 
=
ÿÿ 
new
ÿÿ !
Rect
ÿÿ" &
(
ÿÿ& '
	labelRect
ÿÿ' 0
.
ÿÿ0 1
x
ÿÿ1 2
+
ÿÿ3 4

labelWidth
ÿÿ5 ?
+
ÿÿ@ A
$num
ÿÿB C
*
ÿÿC D
PAD
ÿÿD G
,
ÿÿG H
y
ÿÿI J
+
ÿÿK L
$num
ÿÿM O
,
ÿÿO P
sliderWidth
ÿÿQ \
,
ÿÿ\ ]
SLIDER_HEIGHT
ÿÿ^ k
)
ÿÿk l
;
ÿÿl m
Rect
ŸŸ 
intRect
ŸŸ 
=
ŸŸ 
new
ŸŸ 
Rect
ŸŸ #
(
ŸŸ# $

sliderRect
ŸŸ$ .
.
ŸŸ. /
x
ŸŸ/ 0
+
ŸŸ1 2

sliderRect
ŸŸ3 =
.
ŸŸ= >
width
ŸŸ> C
+
ŸŸD E
PAD
ŸŸF I
,
ŸŸI J
y
ŸŸK L
+
ŸŸM N
$num
ŸŸO Q
,
ŸŸQ R
intWidth
ŸŸS [
,
ŸŸ[ \
SLIDER_HEIGHT
ŸŸ] j
)
ŸŸj k
;
ŸŸk l
Rect
€€ 
	totalRect
€€ 
=
€€ 
GUILayoutUtility
€€ -
.
€€- .
GetRect
€€. 5
(
€€5 6
$num
€€6 7
,
€€7 8
UnityEditor
€€9 D
.
€€D E
EditorGUIUtility
€€E U
.
€€U V
singleLineHeight
€€V f
)
€€f g
;
€€g h
Rect
‹‹ 
foldoutRect
‹‹ 
=
‹‹ 
new
‹‹ "
Rect
‹‹# '
(
‹‹' (
	labelRect
‹‹( 1
.
‹‹1 2
xMax
‹‹2 6
-
‹‹7 8
PAD
‹‹9 <
,
‹‹< =
	labelRect
‹‹> G
.
‹‹G H
y
‹‹H I
,
‹‹I J
$num
‹‹K M
,
‹‹M N
	totalRect
‹‹O X
.
‹‹X Y
height
‹‹Y _
)
‹‹_ `
;
‹‹` a
if
ﬁﬁ 
(
ﬁﬁ 
content
ﬁﬁ 
!=
ﬁﬁ 
null
ﬁﬁ 
)
ﬁﬁ  
GUI
ﬂﬂ 
.
ﬂﬂ 
Label
ﬂﬂ 
(
ﬂﬂ 
	labelRect
ﬂﬂ #
,
ﬂﬂ# $
content
ﬂﬂ% ,
)
ﬂﬂ, -
;
ﬂﬂ- .
	EditorGUI
·· 
.
·· 
BeginChangeCheck
·· &
(
··& '
)
··' (
;
··( )
int
„„ 
	controlID
„„ 
=
„„ 

GUIUtility
„„ &
.
„„& '
GetControlID
„„' 3
(
„„3 4
	FocusType
„„4 =
.
„„= >
Passive
„„> E
,
„„E F

sliderRect
„„G Q
)
„„Q R
;
„„R S
float
‰‰ 
tmp
‰‰ 
=
‰‰ 
value
‰‰ 
;
‰‰ 
float
ÂÂ 
tmpUIMin
ÂÂ 
=
ÂÂ 
uiMin
ÂÂ "
;
ÂÂ" #
float
ÊÊ 
tmpUIMax
ÊÊ 
=
ÊÊ 
uiMax
ÊÊ "
;
ÊÊ" #
tmp
ÁÁ 
=
ÁÁ 
GUI
ÁÁ 
.
ÁÁ 
Slider
ÁÁ 
(
ÁÁ 

sliderRect
ÁÁ '
,
ÁÁ' (
tmp
ÁÁ) ,
,
ÁÁ, -
$num
ÁÁ. 0
,
ÁÁ0 1
tmpUIMin
ÁÁ2 :
,
ÁÁ: ;
tmpUIMax
ÁÁ< D
,
ÁÁD E
GUI
ÁÁF I
.
ÁÁI J
skin
ÁÁJ N
.
ÁÁN O
horizontalSlider
ÁÁO _
,
ÁÁ_ `
(
ÁÁa b
!
ÁÁb c
	EditorGUI
ÁÁc l
.
ÁÁl m
showMixedValue
ÁÁm {
)
ÁÁ{ |
?
ÁÁ} ~
GUIÁÁ Ç
.ÁÁÇ É
skinÁÁÉ á
.ÁÁá à%
horizontalSliderThumbÁÁà ù
:ÁÁû ü
$strÁÁ† ≠
,ÁÁ≠ Æ
trueÁÁØ ≥
,ÁÁ≥ ¥
	controlIDÁÁµ æ
)ÁÁæ ø
;ÁÁø ¿
if
ÈÈ 
(
ÈÈ 
	EditorGUI
ÈÈ 
.
ÈÈ 
EndChangeCheck
ÈÈ (
(
ÈÈ( )
)
ÈÈ) *
)
ÈÈ* +
value
ÍÍ 
=
ÍÍ 
(
ÍÍ 
int
ÍÍ 
)
ÍÍ 
(
ÍÍ 
Event
ÍÍ $
.
ÍÍ$ %
current
ÍÍ% ,
.
ÍÍ, -
control
ÍÍ- 4
?
ÍÍ5 6
$num
ÍÍ7 8
*
ÍÍ9 :
Mathf
ÍÍ; @
.
ÍÍ@ A
Round
ÍÍA F
(
ÍÍF G
tmp
ÍÍG J
/
ÍÍK L
$num
ÍÍM O
)
ÍÍO P
:
ÍÍQ R
tmp
ÍÍT W
)
ÍÍW X
;
ÍÍX Y
value
ÏÏ 
=
ÏÏ 
	EditorGUI
ÏÏ 
.
ÏÏ 
DelayedIntField
ÏÏ -
(
ÏÏ- .
intRect
ÏÏ. 5
,
ÏÏ5 6
value
ÏÏ7 <
)
ÏÏ< =
;
ÏÏ= >
if
ÓÓ 
(
ÓÓ 
value
ÓÓ 
>
ÓÓ 
uiMax
ÓÓ 
)
ÓÓ 
uiMax
ÔÔ 
=
ÔÔ 
value
ÔÔ 
;
ÔÔ 
if
ÒÒ 
(
ÒÒ 
value
ÒÒ 
<
ÒÒ 
uiMin
ÒÒ 
)
ÒÒ 
uiMin
ÚÚ 
=
ÚÚ 
value
ÚÚ 
;
ÚÚ 
expanded
ÙÙ 
=
ÙÙ 
	EditorGUI
ÙÙ  
.
ÙÙ  !
Foldout
ÙÙ! (
(
ÙÙ( )
foldoutRect
ÙÙ) 4
,
ÙÙ4 5
expanded
ÙÙ6 >
,
ÙÙ> ?

GUIContent
ÙÙ@ J
.
ÙÙJ K
none
ÙÙK O
)
ÙÙO P
;
ÙÙP Q
if
ıı 
(
ıı 
expanded
ıı 
)
ıı 
{
ˆˆ 
Rect
˜˜ 
rangeLabelRect
˜˜ #
=
˜˜$ %
new
˜˜& )
Rect
˜˜* .
(
˜˜. /

sliderRect
˜˜/ 9
.
˜˜9 :
x
˜˜: ;
,
˜˜; <

sliderRect
˜˜= G
.
˜˜G H
yMax
˜˜H L
,
˜˜L M

sliderRect
˜˜N X
.
˜˜X Y
width
˜˜Y ^
/
˜˜_ `
$num
˜˜a b
,
˜˜b c
intRect
˜˜d k
.
˜˜k l
height
˜˜l r
)
˜˜r s
;
˜˜s t
Rect
¯¯ 
minRect
¯¯ 
=
¯¯ 
new
¯¯ "
Rect
¯¯# '
(
¯¯' (
intRect
¯¯( /
.
¯¯/ 0
x
¯¯0 1
-
¯¯2 3
(
¯¯4 5
intRect
¯¯5 <
.
¯¯< =
width
¯¯= B
+
¯¯C D
indentOffset
¯¯E Q
+
¯¯R S
PAD
¯¯T W
)
¯¯W X
,
¯¯X Y

sliderRect
¯¯Z d
.
¯¯d e
yMax
¯¯e i
+
¯¯j k
$num
¯¯l n
,
¯¯n o
intRect
¯¯p w
.
¯¯w x
width
¯¯x }
,
¯¯} ~
intRect¯¯ Ü
.¯¯Ü á
height¯¯á ç
)¯¯ç é
;¯¯é è
Rect
˘˘ 
maxRect
˘˘ 
=
˘˘ 
new
˘˘ "
Rect
˘˘# '
(
˘˘' (
intRect
˘˘( /
.
˘˘/ 0
x
˘˘0 1
,
˘˘1 2

sliderRect
˘˘3 =
.
˘˘= >
yMax
˘˘> B
+
˘˘C D
$num
˘˘E G
,
˘˘G H
intRect
˘˘I P
.
˘˘P Q
width
˘˘Q V
,
˘˘V W
intRect
˘˘X _
.
˘˘_ `
height
˘˘` f
)
˘˘f g
;
˘˘g h
	EditorGUI
˚˚ 
.
˚˚ 
PrefixLabel
˚˚ %
(
˚˚% &
rangeLabelRect
˚˚& 4
,
˚˚4 5
new
˚˚6 9

GUIContent
˚˚: D
(
˚˚D E
$str
˚˚E M
)
˚˚M N
)
˚˚N O
;
˚˚O P
uiMin
¸¸ 
=
¸¸ 
UnityEditor
¸¸ #
.
¸¸# $
	EditorGUI
¸¸$ -
.
¸¸- .
DelayedIntField
¸¸. =
(
¸¸= >
minRect
¸¸> E
,
¸¸E F
uiMin
¸¸G L
)
¸¸L M
;
¸¸M N
uiMin
˝˝ 
=
˝˝ 
UnityEngine
˝˝ #
.
˝˝# $

ProBuilder
˝˝$ .
.
˝˝. /
Math
˝˝/ 3
.
˝˝3 4
Clamp
˝˝4 9
(
˝˝9 :
uiMin
˝˝: ?
,
˝˝? @
min
˝˝A D
,
˝˝D E
uiMax
˝˝F K
)
˝˝K L
;
˝˝L M
if
˛˛ 
(
˛˛ 
value
˛˛ 
<
˛˛ 
uiMin
˛˛ !
)
˛˛! "
value
ˇˇ 
=
ˇˇ 
uiMin
ˇˇ !
;
ˇˇ! "
uiMax
ÄÄ 
=
ÄÄ 
UnityEditor
ÄÄ #
.
ÄÄ# $
	EditorGUI
ÄÄ$ -
.
ÄÄ- .
DelayedIntField
ÄÄ. =
(
ÄÄ= >
maxRect
ÄÄ> E
,
ÄÄE F
uiMax
ÄÄG L
)
ÄÄL M
;
ÄÄM N
uiMax
ÅÅ 
=
ÅÅ 
UnityEngine
ÅÅ #
.
ÅÅ# $

ProBuilder
ÅÅ$ .
.
ÅÅ. /
Math
ÅÅ/ 3
.
ÅÅ3 4
Clamp
ÅÅ4 9
(
ÅÅ9 :
uiMax
ÅÅ: ?
,
ÅÅ? @
uiMin
ÅÅA F
+
ÅÅG H
$num
ÅÅI J
,
ÅÅJ K
max
ÅÅL O
)
ÅÅO P
;
ÅÅP Q
if
ÇÇ 
(
ÇÇ 
value
ÇÇ 
>
ÇÇ 
uiMax
ÇÇ !
)
ÇÇ! "
value
ÉÉ 
=
ÉÉ 
uiMax
ÉÉ !
;
ÉÉ! "
}
ÑÑ 
return
ÜÜ 
UnityEngine
ÜÜ 
.
ÜÜ 

ProBuilder
ÜÜ )
.
ÜÜ) *
Math
ÜÜ* .
.
ÜÜ. /
Clamp
ÜÜ/ 4
(
ÜÜ4 5
value
ÜÜ5 :
,
ÜÜ: ;
min
ÜÜ< ?
,
ÜÜ? @
max
ÜÜA D
)
ÜÜD E
;
ÜÜE F
}
áá 	
public
ââ 
static
ââ 
bool
ââ 
ToolSettingsGUI
ââ *
(
ââ* +
string
ââ+ 1
text
ââ2 6
,
ââ6 7
string
ää 
description
ää 
,
ää 
bool
ãã 
showSettings
ãã 
,
ãã 
Func
åå 
<
åå 
ProBuilderMesh
åå 
[
åå  
]
åå  !
,
åå! "
ActionResult
åå# /
>
åå/ 0
action
åå1 7
,
åå7 8
Action
çç 
gui
çç 
,
çç 
ProBuilderMesh
éé 
[
éé 
]
éé 
	selection
éé &
)
éé& '
{
èè 	
return
êê 
ToolSettingsGUI
êê "
(
êê" #
text
êê# '
,
êê' (
description
êê) 4
,
êê4 5
showSettings
êê6 B
,
êêB C
action
êêD J
,
êêJ K
gui
êêL O
,
êêO P
true
êêQ U
,
êêU V
	selection
êêW `
)
êê` a
;
êêa b
}
ëë 	
public
ìì 
static
ìì 
bool
ìì 
ToolSettingsGUI
ìì *
(
ìì* +
string
ìì+ 1
text
ìì2 6
,
ìì6 7
string
îî 
description
îî 
,
îî 
bool
ïï 
showSettings
ïï 
,
ïï 
Func
ññ 
<
ññ 
ProBuilderMesh
ññ 
[
ññ  
]
ññ  !
,
ññ! "
ActionResult
ññ# /
>
ññ/ 0
action
ññ1 7
,
ññ7 8
Action
óó 
gui
óó 
,
óó 
bool
òò 
enabled
òò 
,
òò 
ProBuilderMesh
ôô 
[
ôô 
]
ôô 
	selection
ôô &
)
ôô& '
{
öö 	
if
õõ 
(
õõ 
enabled
õõ 
)
õõ 
{
úú 
	GUILayout
ùù 
.
ùù 
BeginHorizontal
ùù )
(
ùù) *
)
ùù* +
;
ùù+ ,
if
üü 
(
üü 
	GUILayout
üü 
.
üü 
Button
üü $
(
üü$ %
new
üü% (

GUIContent
üü) 3
(
üü3 4
text
üü4 8
,
üü8 9
description
üü: E
)
üüE F
,
üüF G
UnityEditor
üüH S
.
üüS T
EditorStyles
üüT `
.
üü` a
miniButtonLeft
üüa o
)
üüo p
)
üüp q
action
†† 
(
†† 
	selection
†† $
)
††$ %
;
††% &
if
¢¢ 
(
¢¢ 
	GUILayout
¢¢ 
.
¢¢ 
Button
¢¢ $
(
¢¢$ %
showSettings
¢¢% 1
?
¢¢2 3
$str
¢¢4 7
:
¢¢8 9
$str
¢¢: =
,
¢¢= >
UnityEditor
¢¢? J
.
¢¢J K
EditorStyles
¢¢K W
.
¢¢W X
miniButtonRight
¢¢X g
,
¢¢g h
	GUILayout
¢¢i r
.
¢¢r s
MaxWidth
¢¢s {
(
¢¢{ |
$num
¢¢| ~
)
¢¢~ 
)¢¢ Ä
)¢¢Ä Å
showSettings
££  
=
££! "
!
££# $
showSettings
££$ 0
;
££0 1
	GUILayout
§§ 
.
§§ 
EndHorizontal
§§ '
(
§§' (
)
§§( )
;
§§) *
if
¶¶ 
(
¶¶ 
showSettings
¶¶  
)
¶¶  !
{
ßß 
	GUILayout
®® 
.
®® 
BeginVertical
®® +
(
®®+ ,
EditorStyles
®®, 8
.
®®8 9
sceneTextBox
®®9 E
)
®®E F
;
®®F G
gui
©© 
(
©© 
)
©© 
;
©© 
	GUILayout
™™ 
.
™™ 
EndVertical
™™ )
(
™™) *
)
™™* +
;
™™+ ,
	GUILayout
´´ 
.
´´ 
Space
´´ #
(
´´# $
$num
´´$ %
)
´´% &
;
´´& '
}
¨¨ 
}
≠≠ 
else
ÆÆ 
{
ØØ 
if
∞∞ 
(
∞∞ 
	GUILayout
∞∞ 
.
∞∞ 
Button
∞∞ $
(
∞∞$ %
new
∞∞% (

GUIContent
∞∞) 3
(
∞∞3 4
text
∞∞4 8
,
∞∞8 9
description
∞∞: E
)
∞∞E F
,
∞∞F G
UnityEditor
∞∞H S
.
∞∞S T
EditorStyles
∞∞T `
.
∞∞` a

miniButton
∞∞a k
)
∞∞k l
)
∞∞l m
action
±± 
(
±± 
	selection
±± $
)
±±$ %
;
±±% &
}
≤≤ 
return
¥¥ 
showSettings
¥¥ 
;
¥¥  
}
µµ 	
public
ªª 
static
ªª 
float
ªª 
Slider
ªª "
(
ªª" #

GUIContent
ªª# -
content
ªª. 5
,
ªª5 6
float
ªª7 <
value
ªª= B
,
ªªB C
float
ªªD I
min
ªªJ M
,
ªªM N
float
ªªO T
max
ªªU X
)
ªªX Y
{
ºº 	
float
ΩΩ 
tmp
ΩΩ 
=
ΩΩ 
value
ΩΩ 
;
ΩΩ 
	EditorGUI
øø 
.
øø 
BeginChangeCheck
øø &
(
øø& '
)
øø' (
;
øø( )
tmp
¡¡ 
=
¡¡ 
UnityEditor
¡¡ 
.
¡¡ 
EditorGUILayout
¡¡ -
.
¡¡- .
Slider
¡¡. 4
(
¡¡4 5
content
¡¡5 <
,
¡¡< =
value
¡¡> C
,
¡¡C D
min
¡¡E H
,
¡¡H I
max
¡¡J M
)
¡¡M N
;
¡¡N O
if
√√ 
(
√√ 
	EditorGUI
√√ 
.
√√ 
EndChangeCheck
√√ (
(
√√( )
)
√√) *
)
√√* +
return
ƒƒ 
tmp
ƒƒ 
;
ƒƒ 
else
≈≈ 
return
∆∆ 
value
∆∆ 
;
∆∆ 
}
«« 	
static
…… 
Rect
…… 
sceneLabelRect
…… "
=
……# $
new
……% (
Rect
……) -
(
……- .
$num
……. 0
,
……0 1
$num
……2 4
,
……4 5
$num
……6 8
,
……8 9
$num
……: <
)
……< =
;
……= >
static
   
Color
   '
SceneLabelBackgroundColor
   .
=
  / 0
new
  1 4
Color
  5 :
(
  : ;
$num
  ; ?
,
  ? @
$num
  A E
,
  E F
$num
  G K
,
  K L
$num
  M O
)
  O P
;
  P Q
static
ÃÃ 
GUIStyle
ÃÃ 
sceneBoldLabel
ÃÃ &
{
ÕÕ 	
get
ŒŒ 
{
œœ 
if
–– 
(
–– 
_sceneBoldLabel
–– #
==
––$ &
null
––' +
)
––+ ,
{
—— 
_sceneBoldLabel
““ #
=
““$ %
new
““& )
GUIStyle
““* 2
(
““2 3
UnityEditor
““3 >
.
““> ?
EditorStyles
““? K
.
““K L
	boldLabel
““L U
)
““U V
;
““V W
_sceneBoldLabel
”” #
.
””# $
normal
””$ *
.
””* +
	textColor
””+ 4
=
””5 6
Color
””7 <
.
””< =
white
””= B
;
””B C
}
‘‘ 
return
’’ 
_sceneBoldLabel
’’ &
;
’’& '
}
÷÷ 
}
◊◊ 	
static
ŸŸ 
GUIStyle
ŸŸ 
_sceneBoldLabel
ŸŸ '
=
ŸŸ( )
null
ŸŸ* .
;
ŸŸ. /
public
ﬁﬁ 
static
ﬁﬁ 
void
ﬁﬁ 

SceneLabel
ﬁﬁ %
(
ﬁﬁ% &
string
ﬁﬁ& ,
text
ﬁﬁ- 1
,
ﬁﬁ1 2
Vector2
ﬁﬁ3 :
position
ﬁﬁ; C
)
ﬁﬁC D
{
ﬂﬂ 	

GUIContent
‡‡ 
gc
‡‡ 
=
‡‡ 
EditorGUIUtility
‡‡ ,
.
‡‡, -
TempContent
‡‡- 8
(
‡‡8 9
text
‡‡9 =
)
‡‡= >
;
‡‡> ?
float
‚‚ 
width
‚‚ 
=
‚‚ 
UnityEditor
‚‚ %
.
‚‚% &
EditorStyles
‚‚& 2
.
‚‚2 3
	boldLabel
‚‚3 <
.
‚‚< =
CalcSize
‚‚= E
(
‚‚E F
gc
‚‚F H
)
‚‚H I
.
‚‚I J
x
‚‚J K
;
‚‚K L
float
„„ 
height
„„ 
=
„„ 
UnityEditor
„„ &
.
„„& '
EditorStyles
„„' 3
.
„„3 4
label
„„4 9
.
„„9 :

CalcHeight
„„: D
(
„„D E
gc
„„E G
,
„„G H
width
„„I N
)
„„N O
+
„„P Q
$num
„„R S
;
„„S T
sceneLabelRect
ÂÂ 
.
ÂÂ 
x
ÂÂ 
=
ÂÂ 
position
ÂÂ '
.
ÂÂ' (
x
ÂÂ( )
-
ÂÂ* +
width
ÂÂ, 1
*
ÂÂ2 3
$num
ÂÂ4 7
;
ÂÂ7 8
sceneLabelRect
ÊÊ 
.
ÊÊ 
y
ÊÊ 
=
ÊÊ 
position
ÊÊ '
.
ÊÊ' (
y
ÊÊ( )
-
ÊÊ* +
height
ÊÊ, 2
*
ÊÊ3 4
$num
ÊÊ5 8
;
ÊÊ8 9
sceneLabelRect
ÁÁ 
.
ÁÁ 
width
ÁÁ  
=
ÁÁ! "
width
ÁÁ# (
;
ÁÁ( )
sceneLabelRect
ËË 
.
ËË 
height
ËË !
=
ËË" #
height
ËË$ *
;
ËË* +
EditorGUIUtility
ÍÍ 
.
ÍÍ 
DrawSolidColor
ÍÍ +
(
ÍÍ+ ,
sceneLabelRect
ÍÍ, :
,
ÍÍ: ;'
SceneLabelBackgroundColor
ÍÍ< U
)
ÍÍU V
;
ÍÍV W
GUI
ÏÏ 
.
ÏÏ 
Label
ÏÏ 
(
ÏÏ 
sceneLabelRect
ÏÏ $
,
ÏÏ$ %
gc
ÏÏ& (
,
ÏÏ( )
sceneBoldLabel
ÏÏ* 8
)
ÏÏ8 9
;
ÏÏ9 :
}
ÌÌ 	
public
ÔÔ 
static
ÔÔ 

SelectMode
ÔÔ  "
DoElementModeToolbar
ÔÔ! 5
(
ÔÔ5 6
Rect
ÔÔ6 :
rect
ÔÔ; ?
,
ÔÔ? @

SelectMode
ÔÔA K
mode
ÔÔL P
)
ÔÔP Q
{
 	
Styles
ÒÒ 
.
ÒÒ 
Init
ÒÒ 
(
ÒÒ 
)
ÒÒ 
;
ÒÒ 
	EditorGUI
ÛÛ 
.
ÛÛ 
BeginChangeCheck
ÛÛ &
(
ÛÛ& '
)
ÛÛ' (
;
ÛÛ( )
var
ıı 
textureMode
ıı 
=
ıı 
mode
ıı "
.
ıı" #
ContainsFlag
ıı# /
(
ıı/ 0

SelectMode
ıı0 :
.
ıı: ;
TextureVertex
ıı; H
|
ııI J

SelectMode
ııK U
.
ııU V
TextureEdge
ııV a
|
ııb c

SelectMode
ııd n
.
ıın o
TextureFace
ııo z
)
ıız {
;
ıı{ |
int
˜˜ "
currentSelectionMode
˜˜ $
=
˜˜% &
-
˜˜' (
$num
˜˜( )
;
˜˜) *
switch
˘˘ 
(
˘˘ 
mode
˘˘ 
)
˘˘ 
{
˙˙ 
case
˚˚ 

SelectMode
˚˚ 
.
˚˚  
Object
˚˚  &
:
˚˚& '"
currentSelectionMode
¸¸ (
=
¸¸) *
$num
¸¸+ ,
;
¸¸, -
break
˝˝ 
;
˝˝ 
case
˛˛ 

SelectMode
˛˛ 
.
˛˛  
Vertex
˛˛  &
:
˛˛& '
case
ˇˇ 

SelectMode
ˇˇ 
.
ˇˇ  
TextureVertex
ˇˇ  -
:
ˇˇ- ."
currentSelectionMode
ÄÄ (
=
ÄÄ) *
$num
ÄÄ+ ,
;
ÄÄ, -
break
ÅÅ 
;
ÅÅ 
case
ÇÇ 

SelectMode
ÇÇ 
.
ÇÇ  
Edge
ÇÇ  $
:
ÇÇ$ %
case
ÉÉ 

SelectMode
ÉÉ 
.
ÉÉ  
TextureEdge
ÉÉ  +
:
ÉÉ+ ,"
currentSelectionMode
ÑÑ (
=
ÑÑ) *
$num
ÑÑ+ ,
;
ÑÑ, -
break
ÖÖ 
;
ÖÖ 
case
ÜÜ 

SelectMode
ÜÜ 
.
ÜÜ  
Face
ÜÜ  $
:
ÜÜ$ %
case
áá 

SelectMode
áá 
.
áá  
TextureFace
áá  +
:
áá+ ,"
currentSelectionMode
àà (
=
àà) *
$num
àà+ ,
;
àà, -
break
ââ 
;
ââ 
default
ää 
:
ää "
currentSelectionMode
ãã (
=
ãã) *
-
ãã+ ,
$num
ãã, -
;
ãã- .
break
åå 
;
åå 
}
çç "
currentSelectionMode
èè  
=
èè! "
GUI
èè# &
.
èè& '
Toolbar
èè' .
(
èè. /
rect
èè/ 3
,
èè3 4"
currentSelectionMode
èè5 I
,
èèI J
Styles
èèK Q
.
èèQ R
selectModeIcons
èèR a
,
èèa b
Styles
èèc i
.
èèi j
command
èèj q
)
èèq r
;
èèr s
if
ëë 
(
ëë 
	EditorGUI
ëë 
.
ëë 
EndChangeCheck
ëë (
(
ëë( )
)
ëë) *
)
ëë* +
{
íí 
if
ìì 
(
ìì "
currentSelectionMode
ìì (
==
ìì) +
$num
ìì, -
)
ìì- .
mode
îî 
=
îî 

SelectMode
îî %
.
îî% &
Object
îî& ,
;
îî, -
else
ïï 
if
ïï 
(
ïï "
currentSelectionMode
ïï -
==
ïï. 0
$num
ïï1 2
)
ïï2 3
mode
ññ 
=
ññ 
textureMode
ññ &
?
ññ' (

SelectMode
ññ) 3
.
ññ3 4
TextureVertex
ññ4 A
:
ññB C

SelectMode
ññD N
.
ññN O
Vertex
ññO U
;
ññU V
else
óó 
if
óó 
(
óó "
currentSelectionMode
óó -
==
óó. 0
$num
óó1 2
)
óó2 3
mode
òò 
=
òò 
textureMode
òò &
?
òò' (

SelectMode
òò) 3
.
òò3 4
TextureEdge
òò4 ?
:
òò@ A

SelectMode
òòB L
.
òòL M
Edge
òòM Q
;
òòQ R
else
ôô 
if
ôô 
(
ôô "
currentSelectionMode
ôô -
==
ôô. 0
$num
ôô1 2
)
ôô2 3
mode
öö 
=
öö 
textureMode
öö &
?
öö' (

SelectMode
öö) 3
.
öö3 4
TextureFace
öö4 ?
:
öö@ A

SelectMode
ööB L
.
ööL M
Face
ööM Q
;
ööQ R
}
õõ 
return
ùù 
mode
ùù 
;
ùù 
}
ûû 	
}
üü 
}†† ◊t
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\DetachFaces.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed		 

class		 
DetachFaces		 
:		 

MenuAction		 )
{

 
Pref 
< 
DetachSetting 
> 
m_DetachSetting +
=, -
new. 1
Pref2 6
<6 7
DetachSetting7 D
>D E
(E F
$strF Z
,Z [
DetachSetting\ i
.i j

GameObjectj t
)t u
;u v
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
GeometryG O
;O P
}Q R
}S T
public 
override 
	Texture2D !
icon" &
{' (
get) ,
{- .
return/ 5
IconUtility6 A
.A B
GetIconB I
(I J
$strJ _
,_ `
IconSkina i
.i j
Proj m
)m n
;n o
}p q
}r s
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
	s_Tooltip> G
;G H
}I J
}K L
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str 
, 
$str L
) 
; 
public 
override 

SelectMode "
validSelectModes# 3
{ 	
get 
{ 
return 

SelectMode #
.# $
Face$ (
;( )
}* +
} 	
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
base 
. 
enabled %
&&& (
MeshSelection) 6
.6 7
selectedFaceCount7 H
>I J
$numK L
;L M
}N O
} 	
	protected!! 
override!! 
MenuActionState!! *
optionsMenuState!!+ ;
{"" 	
get## 
{## 
return## 
MenuActionState## (
.##( )
VisibleAndEnabled##) :
;##: ;
}##< =
}$$ 	
enum&& 
DetachSetting&& 
{'' 	

GameObject(( 
,(( 
Submesh)) 
}** 	
;**	 

	protected,, 
override,, 
void,, 
OnSettingsGUI,,  -
(,,- .
),,. /
{-- 	
	GUILayout.. 
... 
Label.. 
(.. 
$str.. 2
,..2 3
EditorStyles..4 @
...@ A
	boldLabel..A J
)..J K
;..K L
EditorGUILayout00 
.00 
HelpBox00 #
(00# $
$str00$ x
,00x y
MessageType	00z Ö
.
00Ö Ü
Info
00Ü ä
)
00ä ã
;
00ã å
	EditorGUI22 
.22 
BeginChangeCheck22 &
(22& '
)22' (
;22( )
m_DetachSetting44 
.44 
value44 !
=44" #
(44$ %
DetachSetting44% 2
)442 3
EditorGUILayout443 B
.44B C
	EnumPopup44C L
(44L M
$str44M X
,44X Y
m_DetachSetting44Z i
)44i j
;44j k
if66 
(66 
	EditorGUI66 
.66 
EndChangeCheck66 (
(66( )
)66) *
)66* +
ProBuilderSettings77 "
.77" #
Save77# '
(77' (
)77( )
;77) *
	GUILayout99 
.99 
FlexibleSpace99 #
(99# $
)99$ %
;99% &
if;; 
(;; 
	GUILayout;; 
.;; 
Button;;  
(;;  !
$str;;! 3
);;3 4
);;4 5
EditorUtility<< 
.<< 
ShowNotification<< .
(<<. /
DoAction<</ 7
(<<7 8
)<<8 9
.<<9 :
notification<<: F
)<<F G
;<<G H
}== 	
public?? 
override?? 
ActionResult?? $
DoAction??% -
(??- .
)??. /
{@@ 	
ifAA 
(AA 
MeshSelectionAA 
.AA 
selectedObjectCountAA 1
<AA2 3
$numAA4 5
)AA5 6
returnBB 
ActionResultBB #
.BB# $
NoSelectionBB$ /
;BB/ 0
UndoUtilityDD 
.DD 
RecordSelectionDD '
(DD' (
$strDD( 8
)DD8 9
;DD9 :
ifFF 
(FF 
m_DetachSettingFF 
==FF  "
DetachSettingFF# 0
.FF0 1

GameObjectFF1 ;
)FF; <
returnGG 
DetachFacesToObjectGG *
(GG* +
)GG+ ,
;GG, -
returnII  
DetachFacesToSubmeshII '
(II' (
)II( )
;II) *
}JJ 	
staticLL 
ActionResultLL  
DetachFacesToSubmeshLL 0
(LL0 1
)LL1 2
{MM 	
intNN 
countNN 
=NN 
$numNN 
;NN 
foreachPP 
(PP 
ProBuilderMeshPP #
pbPP$ &
inPP' )
MeshSelectionPP* 7
.PP7 8
topInternalPP8 C
)PPC D
{QQ 
pbRR 
.RR 
ToMeshRR 
(RR 
)RR 
;RR 
ListSS 
<SS 
FaceSS 
>SS 
resSS 
=SS  
pbSS! #
.SS# $
DetachFacesSS$ /
(SS/ 0
pbSS0 2
.SS2 3!
selectedFacesInternalSS3 H
)SSH I
;SSI J
pbTT 
.TT 
RefreshTT 
(TT 
)TT 
;TT 
pbUU 
.UU 
OptimizeUU 
(UU 
)UU 
;UU 
pbWW 
.WW 
SetSelectedFacesWW #
(WW# $
resWW$ '
.WW' (
ToArrayWW( /
(WW/ 0
)WW0 1
)WW1 2
;WW2 3
countYY 
+=YY 
pbYY 
.YY 
selectedFaceCountYY -
;YY- .
}ZZ 
ProBuilderEditor\\ 
.\\ 
Refresh\\ $
(\\$ %
)\\% &
;\\& '
if^^ 
(^^ 
count^^ 
>^^ 
$num^^ 
)^^ 
return__ 
new__ 
ActionResult__ '
(__' (
ActionResult__( 4
.__4 5
Status__5 ;
.__; <
Success__< C
,__C D
$str__E N
+__O P
count__Q V
+__W X
(__Y Z
count__Z _
>__` a
$num__b c
?__d e
$str__f n
:__o p
$str__q x
)__x y
)__y z
;__z {
returnaa 
newaa 
ActionResultaa #
(aa# $
ActionResultaa$ 0
.aa0 1
Statusaa1 7
.aa7 8
Successaa8 ?
,aa? @
$straaA O
)aaO P
;aaP Q
}bb 	
staticdd 
ActionResultdd 
DetachFacesToObjectdd /
(dd/ 0
)dd0 1
{ee 	
intff 
detachedFaceCountff !
=ff" #
$numff$ %
;ff% &
Listgg 
<gg 

GameObjectgg 
>gg 
detachedgg %
=gg& '
newgg( +
Listgg, 0
<gg0 1

GameObjectgg1 ;
>gg; <
(gg< =
)gg= >
;gg> ?
foreachii 
(ii 
ProBuilderMeshii #
meshii$ (
inii) +
MeshSelectionii, 9
.ii9 :
topInternalii: E
)iiE F
{jj 
ifkk 
(kk 
meshkk 
.kk 
selectedFaceCountkk *
<kk+ ,
$numkk- .
||kk/ 1
meshkk2 6
.kk6 7
selectedFaceCountkk7 H
==kkI K
meshkkL P
.kkP Q
facesInternalkkQ ^
.kk^ _
Lengthkk_ e
)kke f
continuell 
;ll 
varnn 
primarynn 
=nn 
meshnn "
.nn" #
selectedFaceIndexesnn# 6
;nn6 7
detachedFaceCountoo !
+=oo" $
primaryoo% ,
.oo, -
Countoo- 2
;oo2 3
Listqq 
<qq 
intqq 
>qq 
inverseqq !
=qq" #
newqq$ '
Listqq( ,
<qq, -
intqq- 0
>qq0 1
(qq1 2
)qq2 3
;qq3 4
forss 
(ss 
intss 
iss 
=ss 
$numss 
;ss 
iss  !
<ss" #
meshss$ (
.ss( )
facesInternalss) 6
.ss6 7
Lengthss7 =
;ss= >
iss? @
++ss@ B
)ssB C
iftt 
(tt 
!tt 
primarytt  
.tt  !
Containstt! )
(tt) *
itt* +
)tt+ ,
)tt, -
inverseuu 
.uu  
Adduu  #
(uu# $
iuu$ %
)uu% &
;uu& '
ProBuilderMeshww 
copyww #
=ww$ %
Objectww& ,
.ww, -
Instantiateww- 8
(ww8 9
meshww9 =
.ww= >

gameObjectww> H
,wwH I
meshwwJ N
.wwN O
	transformwwO X
.wwX Y
parentwwY _
)ww_ `
.ww` a
GetComponentwwa m
<wwm n
ProBuilderMeshwwn |
>ww| }
(ww} ~
)ww~ 
;	ww Ä
EditorUtilityxx 
.xx %
SynchronizeWithMeshFilterxx 7
(xx7 8
copyxx8 <
)xx< =
;xx= >
if
ÄÄ 
(
ÄÄ 
copy
ÄÄ 
.
ÄÄ 
	transform
ÄÄ "
.
ÄÄ" #

childCount
ÄÄ# -
>
ÄÄ. /
$num
ÄÄ0 1
)
ÄÄ1 2
{
ÅÅ 
for
ÇÇ 
(
ÇÇ 
int
ÇÇ 
i
ÇÇ 
=
ÇÇ  
copy
ÇÇ! %
.
ÇÇ% &
	transform
ÇÇ& /
.
ÇÇ/ 0

childCount
ÇÇ0 :
-
ÇÇ; <
$num
ÇÇ= >
;
ÇÇ> ?
i
ÇÇ@ A
>
ÇÇB C
-
ÇÇD E
$num
ÇÇE F
;
ÇÇF G
i
ÇÇH I
--
ÇÇI K
)
ÇÇK L
Object
ÉÉ 
.
ÉÉ 
DestroyImmediate
ÉÉ /
(
ÉÉ/ 0
copy
ÉÉ0 4
.
ÉÉ4 5
	transform
ÉÉ5 >
.
ÉÉ> ?
GetChild
ÉÉ? G
(
ÉÉG H
i
ÉÉH I
)
ÉÉI J
.
ÉÉJ K

gameObject
ÉÉK U
)
ÉÉU V
;
ÉÉV W
foreach
ÖÖ 
(
ÖÖ 
var
ÖÖ  
child
ÖÖ! &
in
ÖÖ' )
mesh
ÖÖ* .
.
ÖÖ. /
	transform
ÖÖ/ 8
.
ÖÖ8 9%
GetComponentsInChildren
ÖÖ9 P
<
ÖÖP Q
ProBuilderMesh
ÖÖQ _
>
ÖÖ_ `
(
ÖÖ` a
)
ÖÖa b
)
ÖÖb c
EditorUtility
ÜÜ %
.
ÜÜ% &'
SynchronizeWithMeshFilter
ÜÜ& ?
(
ÜÜ? @
child
ÜÜ@ E
)
ÜÜE F
;
ÜÜF G
}
áá 
Undo
ââ 
.
ââ '
RegisterCreatedObjectUndo
ââ .
(
ââ. /
copy
ââ/ 3
.
ââ3 4

gameObject
ââ4 >
,
ââ> ?
$str
ââ@ R
)
ââR S
;
ââS T
mesh
ãã 
.
ãã 
DeleteFaces
ãã  
(
ãã  !
primary
ãã! (
)
ãã( )
;
ãã) *
copy
åå 
.
åå 
DeleteFaces
åå  
(
åå  !
inverse
åå! (
)
åå( )
;
åå) *
mesh
éé 
.
éé 
Rebuild
éé 
(
éé 
)
éé 
;
éé 
copy
èè 
.
èè 
Rebuild
èè 
(
èè 
)
èè 
;
èè 
mesh
ëë 
.
ëë 
Optimize
ëë 
(
ëë 
)
ëë 
;
ëë  
copy
íí 
.
íí 
Optimize
íí 
(
íí 
)
íí 
;
íí  
mesh
îî 
.
îî 
ClearSelection
îî #
(
îî# $
)
îî$ %
;
îî% &
copy
ïï 
.
ïï 
ClearSelection
ïï #
(
ïï# $
)
ïï$ %
;
ïï% &
copy
óó 
.
óó 
SetSelectedFaces
óó %
(
óó% &
copy
óó& *
.
óó* +
faces
óó+ 0
)
óó0 1
;
óó1 2
copy
ôô 
.
ôô 

gameObject
ôô 
.
ôô  
name
ôô  $
=
ôô% &
GameObjectUtility
ôô' 8
.
ôô8 9%
GetUniqueNameForSibling
ôô9 P
(
ôôP Q
mesh
ôôQ U
.
ôôU V
	transform
ôôV _
.
ôô_ `
parent
ôô` f
,
ôôf g
mesh
ôôh l
.
ôôl m

gameObject
ôôm w
.
ôôw x
name
ôôx |
)
ôô| }
;
ôô} ~
;ôô Ä
detached
öö 
.
öö 
Add
öö 
(
öö 
copy
öö !
.
öö! "

gameObject
öö" ,
)
öö, -
;
öö- .
}
õõ 
MeshSelection
ùù 
.
ùù 
SetSelection
ùù &
(
ùù& '
detached
ùù' /
)
ùù/ 0
;
ùù0 1
ProBuilderEditor
ûû 
.
ûû 
Refresh
ûû $
(
ûû$ %
)
ûû% &
;
ûû& '
if
†† 
(
†† 
detachedFaceCount
†† !
>
††" #
$num
††$ %
)
††% &
return
°° 
new
°° 
ActionResult
°° '
(
°°' (
ActionResult
°°( 4
.
°°4 5
Status
°°5 ;
.
°°; <
Success
°°< C
,
°°C D
$str
°°E N
+
°°O P
detachedFaceCount
°°Q b
+
°°c d
$str
°°e {
)
°°{ |
;
°°| }
return
££ 
new
££ 
ActionResult
££ #
(
££# $
ActionResult
££$ 0
.
££0 1
Status
££1 7
.
££7 8
Failure
££8 ?
,
££? @
$str
££A T
)
££T U
;
££U V
}
§§ 	
}
•• 
}¶¶ Ä
¢D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Object\ConformObjectNormals.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class  
ConformObjectNormals %
:& '

MenuAction( 2
{ 
public 
override 
ToolbarGroup $
group% *
{		 	
get

 
{

 
return

 
ToolbarGroup

 %
.

% &
Object

& ,
;

, -
}

. /
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- L
,L M
IconSkinN V
.V W
ProW Z
)Z [
;[ \
}] ^
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
public 
override 
string 
	menuTitle (
{ 	
get 
{ 
return 
$str *
;* +
}, -
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str (
,( )
$str	 ã
)   
;   
public"" 
override"" 
bool"" 
enabled"" $
{## 	
get$$ 
{$$ 
return$$ 
base$$ 
.$$ 
enabled$$ %
&&$$& (
MeshSelection$$) 6
.$$6 7
selectedObjectCount$$7 J
>$$K L
$num$$M N
;$$N O
}$$P Q
}%% 	
public'' 
override'' 
ActionResult'' $
DoAction''% -
(''- .
)''. /
{(( 	
UndoUtility)) 
.)) 
RecordSelection)) '
())' (
$str))( @
)))@ A
;))A B
ActionResult++ 
res++ 
=++ 
ActionResult++ +
.+++ ,
NoSelection++, 7
;++7 8
foreach-- 
(-- 
ProBuilderMesh-- #
pb--$ &
in--' )
MeshSelection--* 7
.--7 8
topInternal--8 C
)--C D
{.. 
res// 
=// 
UnityEngine// !
.//! "

ProBuilder//" ,
.//, -
MeshOperations//- ;
.//; <
SurfaceTopology//< K
.//K L
ConformNormals//L Z
(//Z [
pb//[ ]
,//] ^
pb//_ a
.//a b
faces//b g
)//g h
;//h i
pb11 
.11 
ToMesh11 
(11 
)11 
;11 
pb22 
.22 
Refresh22 
(22 
)22 
;22 
pb33 
.33 
Optimize33 
(33 
)33 
;33 
}44 
ProBuilderEditor66 
.66 
Refresh66 $
(66$ %
)66% &
;66& '
return88 
res88 
;88 
}99 	
}:: 
};; ±;
ìD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\TooltipEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
sealed 

class 
TooltipEditor 
:  
EditorWindow! -
{ 
static 
readonly 
Color  
BasicBackgroundColor 2
=3 4
new5 8
Color9 >
(> ?
$num? C
,C D
$numE I
,I J
$numK O
,O P
$numQ S
)S T
;T U
const 
int 
k_PositionPadding #
=$ %
$num& '
;' (
static   
TooltipEditor   

s_Instance   '
;  ' (
static!! 
Rect!! 
s_WindowRect!!  
=!!! "
new!!# &
Rect!!' +
(!!+ ,
$num!!, -
,!!- .
$num!!/ 0
,!!0 1
$num!!2 3
,!!3 4
$num!!5 6
)!!6 7
;!!7 8
public$$ 
static$$ 
TooltipEditor$$ #
instance$$$ ,
($$, -
)$$- .
{%% 	
if&& 
(&& 

s_Instance&& 
==&& 
null&& "
)&&" #
{'' 

s_Instance(( 
=(( 
CreateInstance(( +
<((+ ,
TooltipEditor((, 9
>((9 :
(((: ;
)((; <
;((< =

s_Instance)) 
.)) 
minSize)) "
=))# $
Vector2))% ,
.)), -
zero))- 1
;))1 2

s_Instance** 
.** 
maxSize** "
=**# $
Vector2**% ,
.**, -
zero**- 1
;**1 2

s_Instance++ 
.++ 
	hideFlags++ $
=++% &
	HideFlags++' 0
.++0 1
HideAndDontSave++1 @
;++@ A

s_Instance-- 
.-- 
ShowTooltip-- &
(--& '
)--' (
;--( )

s_Instance.. 
... 
m_Parent.. #
...# $
window..$ *
...* +
SetAlpha..+ 3
(..3 4
$num..4 6
)..6 7
;..7 8
object66 
parent66 
=66 
ReflectionUtility66  1
.661 2
GetValue662 :
(66: ;

s_Instance66; E
,66E F

s_Instance66G Q
.66Q R
GetType66R Y
(66Y Z
)66Z [
,66[ \
$str66] g
)66g h
;66h i
object77 
window77 
=77 
ReflectionUtility77  1
.771 2
GetValue772 :
(77: ;
parent77; A
,77A B
parent77C I
.77I J
GetType77J Q
(77Q R
)77R S
,77S T
$str77U ]
)77] ^
;77^ _
ReflectionUtility88 !
.88! "
SetValue88" *
(88* +
parent88+ 1
,881 2
$str883 F
,88F G
true88H L
)88L M
;88M N
ReflectionUtility99 !
.99! "
SetValue99" *
(99* +
window99+ 1
,991 2
$str993 G
,99G H
true99I M
)99M N
;99N O
}:: 
return<< 

s_Instance<< 
;<< 
}== 	
public?? 
static?? 
void?? 
Hide?? 
(??  
)??  !
{@@ 	
ifAA 
(AA 

s_InstanceAA 
!=AA 
nullAA "
)AA" #

s_InstanceBB 
.BB 
CloseBB  
(BB  !
)BB! "
;BB" #
}CC 	
publicEE 
staticEE 
voidEE 
ShowEE 
(EE  
RectEE  $
rectEE% )
,EE) *
TooltipContentEE+ 9
contentEE: A
)EEA B
{FF 	
instanceGG 
(GG 
)GG 
.GG 
ShowInternalGG #
(GG# $
rectGG$ (
,GG( )
contentGG* 1
)GG1 2
;GG2 3
}HH 	
publicJJ 
voidJJ 
ShowInternalJJ  
(JJ  !
RectJJ! %
rectJJ& *
,JJ* +
TooltipContentJJ, :
contentJJ; B
)JJB C
{KK 	
thisLL 
.LL 
contentLL 
=LL 
contentLL "
;LL" #
Vector2MM 
sizeMM 
=MM 
contentMM "
.MM" #
CalcSizeMM# +
(MM+ ,
)MM, -
;MM- .
Vector2OO 
pOO 
=OO 
newOO 
Vector2OO #
(OO# $
rectOO$ (
.OO( )
xOO) *
+OO+ ,
rectOO- 1
.OO1 2
widthOO2 7
+OO8 9
k_PositionPaddingOO: K
,OOK L
rectOOM Q
.OOQ R
yOOR S
)OOS T
;OOT U
ifPP 
(PP 
(PP 
(PP 
pPP 
.PP 
xPP 
%PP 
ScreenPP 
.PP 
currentResolutionPP 0
.PP0 1
widthPP1 6
)PP6 7
+PP8 9
sizePP: >
.PP> ?
xPP? @
)PP@ A
>PPB C
ScreenPPD J
.PPJ K
currentResolutionPPK \
.PP\ ]
widthPP] b
)PPb c
pQQ 
.QQ 
xQQ 
=QQ 
rectQQ 
.QQ 
xQQ 
-QQ 
k_PositionPaddingQQ 0
-QQ1 2
sizeQQ3 7
.QQ7 8
xQQ8 9
;QQ9 :
minSizeSS 
=SS 
sizeSS 
;SS 
maxSizeTT 
=TT 
sizeTT 
;TT 
positionVV 
=VV 
newVV 
RectVV 
(VV  
pWW 
.WW 
xWW 
,WW 
pXX 
.XX 
yXX 
,XX 
sizeYY 
.YY 
xYY 
,YY 
sizeZZ 
.ZZ 
yZZ 
)ZZ 
;ZZ 
s_WindowRect\\ 
=\\ 
new\\ 
Rect\\ #
(\\# $
$num\\$ %
,\\% &
$num\\' (
,\\( )
size\\* .
.\\. /
x\\/ 0
,\\0 1
size\\2 6
.\\6 7
y\\7 8
)\\8 9
;\\9 :
}]] 	
public__ 
TooltipContent__ 
content__ %
=__& '
null__( ,
;__, -
voidaa 
OnGUIaa 
(aa 
)aa 
{bb 	
ifcc 
(cc 
!cc 
EditorGUIUtilitycc !
.cc! "
	isProSkincc" +
)cc+ ,
{dd 
GUIee 
.ee 
backgroundColoree #
=ee$ % 
BasicBackgroundColoree& :
;ee: ;
GUIff 
.ff 
Boxff 
(ff 
s_WindowRectff $
,ff$ %
$strff& (
)ff( )
;ff) *
GUIgg 
.gg 
backgroundColorgg #
=gg$ %
Colorgg& +
.gg+ ,
whitegg, 1
;gg1 2
}hh 
ifjj 
(jj 
contentjj 
==jj 
nulljj 
)jj  
returnkk 
;kk 
contentmm 
.mm 
Drawmm 
(mm 
)mm 
;mm 
}nn 	
}oo 
}pp ˙ä
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\MenuActionStyles.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
static 

class 
MenuActionStyles !
{ 
const 
int 

k_FontSize 
= 
$num !
;! "
internal 
static 
readonly  
Color! &#
TEXT_COLOR_WHITE_NORMAL' >
=? @
newA D
ColorE J
(J K
$numK P
,P Q
$numR W
,W X
$numY ^
,^ _
$num` b
)b c
;c d
internal 
static 
readonly  
Color! &"
TEXT_COLOR_WHITE_HOVER' =
=> ?
new@ C
ColorD I
(I J
$numJ N
,N O
$numP T
,T U
$numV Z
,Z [
$num\ ^
)^ _
;_ `
internal 
static 
readonly  
Color! &#
TEXT_COLOR_WHITE_ACTIVE' >
=? @
newA D
ColorE J
(J K
$numK O
,O P
$numQ U
,U V
$numW [
,[ \
$num] _
)_ `
;` a
static 
GUIStyle !
s_ButtonStyleVertical -
=. /
null0 4
;4 5
static 
GUIStyle #
s_ButtonStyleHorizontal /
=0 1
null2 6
;6 7
static 
GUIStyle 
s_RowStyleVertical *
=+ ,
null- 1
;1 2
static 
GUIStyle  
s_RowStyleHorizontal ,
=- .
null/ 3
;3 4
static 
GUIStyle 
s_AltButtonStyle (
=) *
null+ /
;/ 0
internal 
static 
void 
ResetStyles (
(( )
)) *
{ 	!
s_ButtonStyleVertical !
=" #
null$ (
;( )#
s_ButtonStyleHorizontal #
=$ %
null& *
;* +
s_RowStyleVertical   
=    
null  ! %
;  % &
s_AltButtonStyle!! 
=!! 
null!! #
;!!# $
}"" 	
internal'' 
static'' 
GUIStyle''  
buttonStyleVertical''! 4
{(( 	
get)) 
{** 
if++ 
(++ !
s_ButtonStyleVertical++ )
==++* ,
null++- 1
)++1 2
{,, !
s_ButtonStyleVertical-- )
=--* +
new--, /
GUIStyle--0 8
(--8 9
)--9 :
;--: ;!
s_ButtonStyleVertical.. )
...) *
fontSize..* 2
=..3 4

k_FontSize..5 ?
;..? @!
s_ButtonStyleVertical// )
.//) *
normal//* 0
.//0 1

background//1 ;
=//< =
IconUtility//> I
.//I J
GetIcon//J Q
(//Q R
$str//R i
,//i j
IconSkin//k s
.//s t
Pro//t w
)//w x
;//x y!
s_ButtonStyleVertical00 )
.00) *
normal00* 0
.000 1
	textColor001 :
=00; <
EditorGUIUtility00= M
.00M N
	isProSkin00N W
?00X Y#
TEXT_COLOR_WHITE_NORMAL00Z q
:00r s
Color00t y
.00y z
black00z 
;	00 Ä!
s_ButtonStyleVertical11 )
.11) *
hover11* /
.11/ 0

background110 :
=11; <
IconUtility11= H
.11H I
GetIcon11I P
(11P Q
$str11Q g
,11g h
IconSkin11i q
.11q r
Pro11r u
)11u v
;11v w!
s_ButtonStyleVertical22 )
.22) *
hover22* /
.22/ 0
	textColor220 9
=22: ;
EditorGUIUtility22< L
.22L M
	isProSkin22M V
?22W X"
TEXT_COLOR_WHITE_HOVER22Y o
:22p q
Color22r w
.22w x
black22x }
;22} ~!
s_ButtonStyleVertical33 )
.33) *
active33* 0
.330 1

background331 ;
=33< =
IconUtility33> I
.33I J
GetIcon33J Q
(33Q R
$str33R j
,33j k
IconSkin33l t
.33t u
Pro33u x
)33x y
;33y z!
s_ButtonStyleVertical44 )
.44) *
active44* 0
.440 1
	textColor441 :
=44; <
EditorGUIUtility44= M
.44M N
	isProSkin44N W
?44X Y#
TEXT_COLOR_WHITE_ACTIVE44Z q
:44r s
Color44t y
.44y z
black44z 
;	44 Ä!
s_ButtonStyleVertical55 )
.55) *
	alignment55* 3
=554 5
ProBuilderEditor556 F
.55F G
s_IsIconGui55G R
?55S T

TextAnchor55U _
.55_ `
MiddleCenter55` l
:55m n

TextAnchor55o y
.55y z

MiddleLeft	55z Ñ
;
55Ñ Ö!
s_ButtonStyleVertical66 )
.66) *
border66* 0
=661 2
new663 6

RectOffset667 A
(66A B
$num66B C
,66C D
$num66E F
,66F G
$num66H I
,66I J
$num66K L
)66L M
;66M N!
s_ButtonStyleVertical77 )
.77) *
stretchWidth77* 6
=777 8
true779 =
;77= >!
s_ButtonStyleVertical88 )
.88) *
stretchHeight88* 7
=888 9
false88: ?
;88? @!
s_ButtonStyleVertical99 )
.99) *
margin99* 0
=991 2
new993 6

RectOffset997 A
(99A B
$num99B C
,99C D
$num99E F
,99F G
$num99H I
,99I J
$num99K L
)99L M
;99M N!
s_ButtonStyleVertical:: )
.::) *
padding::* 1
=::2 3
new::4 7

RectOffset::8 B
(::B C
$num::C D
,::D E
$num::F G
,::G H
$num::I J
,::J K
$num::L M
)::M N
;::N O
};; 
return<< !
s_ButtonStyleVertical<< ,
;<<, -
}== 
}>> 	
internal@@ 
static@@ 
GUIStyle@@  !
buttonStyleHorizontal@@! 6
{AA 	
getBB 
{CC 
ifDD 
(DD #
s_ButtonStyleHorizontalDD +
==DD, .
nullDD/ 3
)DD3 4
{EE #
s_ButtonStyleHorizontalFF +
=FF, -
newFF. 1
GUIStyleFF2 :
(FF: ;
)FF; <
;FF< =#
s_ButtonStyleHorizontalHH +
.HH+ ,
fontSizeHH, 4
=HH5 6

k_FontSizeHH7 A
;HHA B#
s_ButtonStyleHorizontalII +
.II+ ,
normalII, 2
.II2 3
	textColorII3 <
=II= >
EditorGUIUtilityII? O
.IIO P
	isProSkinIIP Y
?IIZ [#
TEXT_COLOR_WHITE_NORMALII\ s
:IIt u
ColorIIv {
.II{ |
black	II| Å
;
IIÅ Ç#
s_ButtonStyleHorizontalJJ +
.JJ+ ,
normalJJ, 2
.JJ2 3

backgroundJJ3 =
=JJ> ?
IconUtilityJJ@ K
.JJK L
GetIconJJL S
(JJS T
$strJJT v
,JJv w
IconSkin	JJx Ä
.
JJÄ Å
Pro
JJÅ Ñ
)
JJÑ Ö
;
JJÖ Ü#
s_ButtonStyleHorizontalKK +
.KK+ ,
hoverKK, 1
.KK1 2

backgroundKK2 <
=KK= >
IconUtilityKK? J
.KKJ K
GetIconKKK R
(KKR S
$strKKS t
,KKt u
IconSkinKKv ~
.KK~ 
Pro	KK Ç
)
KKÇ É
;
KKÉ Ñ#
s_ButtonStyleHorizontalLL +
.LL+ ,
hoverLL, 1
.LL1 2
	textColorLL2 ;
=LL< =
EditorGUIUtilityLL> N
.LLN O
	isProSkinLLO X
?LLY Z"
TEXT_COLOR_WHITE_HOVERLL[ q
:LLr s
ColorLLt y
.LLy z
blackLLz 
;	LL Ä#
s_ButtonStyleHorizontalMM +
.MM+ ,
activeMM, 2
.MM2 3

backgroundMM3 =
=MM> ?
IconUtilityMM@ K
.MMK L
GetIconMML S
(MMS T
$strMMT w
,MMw x
IconSkin	MMy Å
.
MMÅ Ç
Pro
MMÇ Ö
)
MMÖ Ü
;
MMÜ á#
s_ButtonStyleHorizontalNN +
.NN+ ,
activeNN, 2
.NN2 3
	textColorNN3 <
=NN= >
EditorGUIUtilityNN? O
.NNO P
	isProSkinNNP Y
?NNZ [#
TEXT_COLOR_WHITE_ACTIVENN\ s
:NNt u
ColorNNv {
.NN{ |
black	NN| Å
;
NNÅ Ç#
s_ButtonStyleHorizontalOO +
.OO+ ,
	alignmentOO, 5
=OO6 7

TextAnchorOO8 B
.OOB C
MiddleCenterOOC O
;OOO P#
s_ButtonStyleHorizontalPP +
.PP+ ,
borderPP, 2
=PP3 4
newPP5 8

RectOffsetPP9 C
(PPC D
$numPPD E
,PPE F
$numPPG H
,PPH I
$numPPJ K
,PPK L
$numPPM N
)PPN O
;PPO P#
s_ButtonStyleHorizontalQQ +
.QQ+ ,
stretchWidthQQ, 8
=QQ9 :
trueQQ; ?
;QQ? @#
s_ButtonStyleHorizontalRR +
.RR+ ,
stretchHeightRR, 9
=RR: ;
falseRR< A
;RRA B#
s_ButtonStyleHorizontalSS +
.SS+ ,
marginSS, 2
=SS3 4
newSS5 8

RectOffsetSS9 C
(SSC D
$numSSD E
,SSE F
$numSSG H
,SSH I
$numSSJ K
,SSK L
$numSSM N
)SSN O
;SSO P#
s_ButtonStyleHorizontalTT +
.TT+ ,
paddingTT, 3
=TT4 5
newTT6 9

RectOffsetTT: D
(TTD E
$numTTE F
,TTF G
$numTTH I
,TTI J
$numTTK L
,TTL M
$numTTN O
)TTO P
;TTP Q
}UU 
returnVV #
s_ButtonStyleHorizontalVV .
;VV. /
}WW 
}XX 	
internalZZ 
staticZZ 
GUIStyleZZ  
rowStyleVerticalZZ! 1
{[[ 	
get\\ 
{]] 
if^^ 
(^^ 
s_RowStyleVertical^^ &
==^^' )
null^^* .
)^^. /
{__ 
s_RowStyleVertical`` &
=``' (
new``) ,
GUIStyle``- 5
(``5 6
)``6 7
;``7 8
s_RowStyleVerticalaa &
.aa& '
fontSizeaa' /
=aa0 1

k_FontSizeaa2 <
;aa< =
s_RowStyleVerticalbb &
.bb& '
	alignmentbb' 0
=bb1 2

TextAnchorbb3 =
.bb= >

MiddleLeftbb> H
;bbH I
s_RowStyleVerticalcc &
.cc& '
stretchWidthcc' 3
=cc4 5
truecc6 :
;cc: ;
s_RowStyleVerticaldd &
.dd& '
stretchHeightdd' 4
=dd5 6
falsedd7 <
;dd< =
s_RowStyleVerticalee &
.ee& '
marginee' -
=ee. /
newee0 3

RectOffsetee4 >
(ee> ?
$numee? @
,ee@ A
$numeeB C
,eeC D
$numeeE F
,eeF G
$numeeH I
)eeI J
;eeJ K
s_RowStyleVerticalff &
.ff& '
paddingff' .
=ff/ 0
newff1 4

RectOffsetff5 ?
(ff? @
$numff@ A
,ffA B
$numffC D
,ffD E
$numffF G
,ffG H
$numffI J
)ffJ K
;ffK L
}gg 
returnhh 
s_RowStyleVerticalhh )
;hh) *
}ii 
}jj 	
internalll 
staticll 
GUIStylell  
rowStyleHorizontalll! 3
{mm 	
getnn 
{oo 
ifpp 
(pp  
s_RowStyleHorizontalpp (
==pp) +
nullpp, 0
)pp0 1
{qq  
s_RowStyleHorizontalrr (
=rr) *
newrr+ .
GUIStylerr/ 7
(rr7 8
)rr8 9
;rr9 : 
s_RowStyleHorizontalss (
.ss( )
fontSizess) 1
=ss2 3

k_FontSizess4 >
;ss> ? 
s_RowStyleHorizontaltt (
.tt( )
	alignmenttt) 2
=tt3 4

TextAnchortt5 ?
.tt? @
MiddleCentertt@ L
;ttL M 
s_RowStyleHorizontaluu (
.uu( )
stretchWidthuu) 5
=uu6 7
trueuu8 <
;uu< = 
s_RowStyleHorizontalvv (
.vv( )
stretchHeightvv) 6
=vv7 8
falsevv9 >
;vv> ? 
s_RowStyleHorizontalww (
.ww( )
marginww) /
=ww0 1
newww2 5

RectOffsetww6 @
(ww@ A
$numwwA B
,wwB C
$numwwD E
,wwE F
$numwwG H
,wwH I
$numwwJ K
)wwK L
;wwL M 
s_RowStyleHorizontalxx (
.xx( )
paddingxx) 0
=xx1 2
newxx3 6

RectOffsetxx7 A
(xxA B
$numxxB C
,xxC D
$numxxE F
,xxF G
$numxxH I
,xxI J
$numxxK L
)xxL M
;xxM N
}yy 
returnzz  
s_RowStyleHorizontalzz +
;zz+ ,
}{{ 
}|| 	
internal~~ 
static~~ 
GUIStyle~~  
altButtonStyle~~! /
{ 	
get
ÄÄ 
{
ÅÅ 
if
ÇÇ 
(
ÇÇ 
s_AltButtonStyle
ÇÇ $
==
ÇÇ% '
null
ÇÇ( ,
)
ÇÇ, -
{
ÉÉ 
s_AltButtonStyle
ÑÑ $
=
ÑÑ% &
new
ÑÑ' *
GUIStyle
ÑÑ+ 3
(
ÑÑ3 4
)
ÑÑ4 5
;
ÑÑ5 6
s_AltButtonStyle
ÜÜ $
.
ÜÜ$ %
normal
ÜÜ% +
.
ÜÜ+ ,

background
ÜÜ, 6
=
ÜÜ7 8
IconUtility
ÜÜ9 D
.
ÜÜD E
GetIcon
ÜÜE L
(
ÜÜL M
$str
ÜÜM g
,
ÜÜg h
IconSkin
ÜÜi q
.
ÜÜq r
Pro
ÜÜr u
)
ÜÜu v
;
ÜÜv w
s_AltButtonStyle
áá $
.
áá$ %
normal
áá% +
.
áá+ ,
	textColor
áá, 5
=
áá6 7
EditorGUIUtility
áá8 H
.
ááH I
	isProSkin
ááI R
?
ááS T%
TEXT_COLOR_WHITE_NORMAL
ááU l
:
áám n
Color
ááo t
.
áát u
black
ááu z
;
ááz {
s_AltButtonStyle
àà $
.
àà$ %
hover
àà% *
.
àà* +

background
àà+ 5
=
àà6 7
IconUtility
àà8 C
.
ààC D
GetIcon
ààD K
(
ààK L
$str
ààL e
,
ààe f
IconSkin
ààg o
.
àào p
Pro
ààp s
)
ààs t
;
ààt u
s_AltButtonStyle
ââ $
.
ââ$ %
hover
ââ% *
.
ââ* +
	textColor
ââ+ 4
=
ââ5 6
EditorGUIUtility
ââ7 G
.
ââG H
	isProSkin
ââH Q
?
ââR S$
TEXT_COLOR_WHITE_HOVER
ââT j
:
ââk l
Color
ââm r
.
ââr s
black
ââs x
;
ââx y
s_AltButtonStyle
ää $
.
ää$ %
active
ää% +
.
ää+ ,

background
ää, 6
=
ää7 8
IconUtility
ää9 D
.
ääD E
GetIcon
ääE L
(
ääL M
$str
ääM h
,
ääh i
IconSkin
ääj r
.
äär s
Pro
ääs v
)
ääv w
;
ääw x
s_AltButtonStyle
ãã $
.
ãã$ %
active
ãã% +
.
ãã+ ,
	textColor
ãã, 5
=
ãã6 7
EditorGUIUtility
ãã8 H
.
ããH I
	isProSkin
ããI R
?
ããS T%
TEXT_COLOR_WHITE_ACTIVE
ããU l
:
ããm n
Color
ãão t
.
ããt u
black
ããu z
;
ããz {
s_AltButtonStyle
åå $
.
åå$ %
	alignment
åå% .
=
åå/ 0

TextAnchor
åå1 ;
.
åå; <
MiddleCenter
åå< H
;
ååH I
s_AltButtonStyle
çç $
.
çç$ %
border
çç% +
=
çç, -
new
çç. 1

RectOffset
çç2 <
(
çç< =
$num
çç= >
,
çç> ?
$num
çç@ A
,
ççA B
$num
ççC D
,
ççD E
$num
ççF G
)
ççG H
;
ççH I
s_AltButtonStyle
éé $
.
éé$ %
stretchWidth
éé% 1
=
éé2 3
false
éé4 9
;
éé9 :
s_AltButtonStyle
èè $
.
èè$ %
stretchHeight
èè% 2
=
èè3 4
true
èè5 9
;
èè9 :
s_AltButtonStyle
êê $
.
êê$ %
margin
êê% +
=
êê, -
new
êê. 1

RectOffset
êê2 <
(
êê< =
$num
êê= >
,
êê> ?
$num
êê@ A
,
êêA B
$num
êêC D
,
êêD E
$num
êêF G
)
êêG H
;
êêH I
s_AltButtonStyle
ëë $
.
ëë$ %
padding
ëë% ,
=
ëë- .
new
ëë/ 2

RectOffset
ëë3 =
(
ëë= >
$num
ëë> ?
,
ëë? @
$num
ëëA B
,
ëëB C
$num
ëëD E
,
ëëE F
$num
ëëG H
)
ëëH I
;
ëëI J
}
íí 
return
ìì 
s_AltButtonStyle
ìì '
;
ìì' (
}
îî 
}
ïï 	
}
ññ 
}óó ÉM
üD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Selection\SelectMaterial.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed		 

class		 
SelectMaterial		 
:		  !

MenuAction		" ,
{

 

GUIContent "
gc_restrictToSelection )
=* +
new, /

GUIContent0 :
(: ;
$str; N
,N O
$str	P §
)
§ •
;
• ¶
internal 
Pref 
< 
bool 
> '
m_RestrictToSelectedObjects 7
=8 9
new: =
Pref> B
<B C
boolC G
>G H
(H I
$strI s
,s t
falseu z
,z {
SettingsScope	| â
.
â ä
Project
ä ë
)
ë í
;
í ì
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
	Selection& /
;/ 0
}1 2
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- Q
,Q R
IconSkinS [
.[ \
Pro\ _
)_ `
;` a
}b c
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str $
,$ %
$str   D
)!! 
;!! 
public## 
override## 

SelectMode## "
validSelectModes### 3
{$$ 	
get%% 
{%% 
return%% 

SelectMode%% #
.%%# $
Face%%$ (
|%%) *

SelectMode%%+ 5
.%%5 6
TextureFace%%6 A
;%%A B
}%%C D
}&& 	
public(( 
override(( 
bool(( 
enabled(( $
{)) 	
get** 
{** 
return** 
base** 
.** 
enabled** %
&&**& (
MeshSelection**) 6
.**6 7
selectedFaceCount**7 H
>**I J
$num**K L
;**L M
}**N O
}++ 	
	protected-- 
override-- 
MenuActionState-- *
optionsMenuState--+ ;
{.. 	
get// 
{// 
return// 
MenuActionState// (
.//( )
VisibleAndEnabled//) :
;//: ;
}//< =
}00 	
	protected22 
override22 
void22 
OnSettingsGUI22  -
(22- .
)22. /
{33 	
	GUILayout44 
.44 
Label44 
(44 
$str44 5
,445 6
EditorStyles447 C
.44C D
	boldLabel44D M
)44M N
;44N O
	EditorGUI66 
.66 
BeginChangeCheck66 &
(66& '
)66' (
;66( )'
m_RestrictToSelectedObjects88 '
.88' (
value88( -
=88. /
EditorGUILayout880 ?
.88? @
Toggle88@ F
(88F G"
gc_restrictToSelection88G ]
,88] ^'
m_RestrictToSelectedObjects88_ z
)88z {
;88{ |
if:: 
(:: 
	EditorGUI:: 
.:: 
EndChangeCheck:: (
(::( )
)::) *
)::* +
ProBuilderSettings;; "
.;;" #
Save;;# '
(;;' (
);;( )
;;;) *
	GUILayout== 
.== 
FlexibleSpace== #
(==# $
)==$ %
;==% &
if?? 
(?? 
	GUILayout?? 
.?? 
Button??  
(??  !
$str??! =
)??= >
)??> ?
{@@ 
DoActionAA 
(AA 
)AA 
;AA 
	SceneViewBB 
.BB 

RepaintAllBB $
(BB$ %
)BB% &
;BB& '
}CC 
}DD 	
publicFF 
overrideFF 
ActionResultFF $
DoActionFF% -
(FF- .
)FF. /
{GG 	
IEnumerableHH 
<HH 
ProBuilderMeshHH &
>HH& '
	selectionHH( 1
;HH1 2
ifJJ 
(JJ '
m_RestrictToSelectedObjectsJJ +
)JJ+ ,
	selectionKK 
=KK 
MeshSelectionKK )
.KK) *
topInternalKK* 5
;KK5 6
elseLL 
	selectionMM 
=MM 
ObjectMM "
.MM" #
FindObjectsOfTypeMM# 4
<MM4 5
ProBuilderMeshMM5 C
>MMC D
(MMD E
)MME F
;MMF G
UndoUtilityOO 
.OO 
RecordSelectionOO '
(OO' (
$strOO( D
)OOD E
;OOE F
HashSetRR 
<RR 
MaterialRR 
>RR 
selectedMaterialsRR /
=RR0 1
newRR2 5
HashSetRR6 =
<RR= >
MaterialRR> F
>RRF G
(RRG H
)RRH I
;RRI J
foreachSS 
(SS 
varSS 
pbSS 
inSS 
MeshSelectionSS +
.SS+ ,
topInternalSS, 7
)SS7 8
{TT 
HashSetUU 
<UU 
intUU 
>UU 
submeshIndexUU )
=UU* +
newUU, /
HashSetUU0 7
<UU7 8
intUU8 ;
>UU; <
(UU< =
pbUU= ?
.UU? @!
selectedFacesInternalUU@ U
.UUU V
SelectUUV \
(UU\ ]
yUU] ^
=>UU_ a
yUUb c
.UUc d
submeshIndexUUd p
)UUp q
)UUq r
;UUr s
foreachVV 
(VV 
varVV 
indexVV "
inVV# %
submeshIndexVV& 2
)VV2 3
{WW 
selectedMaterialsXX %
.XX% &
AddXX& )
(XX) *
pbXX* ,
.XX, -
rendererXX- 5
.XX5 6
sharedMaterialsXX6 E
[XXE F
indexXXF K
]XXK L
)XXL M
;XXM N
}YY 
}ZZ 
List\\ 
<\\ 

GameObject\\ 
>\\ 
newSelection\\ )
=\\* +
new\\, /
List\\0 4
<\\4 5

GameObject\\5 ?
>\\? @
(\\@ A
)\\A B
;\\B C
foreach]] 
(]] 
var]] 
pb]] 
in]] 
	selection]] (
)]]( )
{^^ 
List__ 
<__ 
int__ 
>__ 
subMeshIndices__ (
=__) *
new__+ .
List__/ 3
<__3 4
int__4 7
>__7 8
(__8 9
)__9 :
;__: ;
for`` 
(`` 
int`` 
matIndex`` !
=``" #
$num``$ %
;``% &
matIndex``' /
<``0 1
pb``2 4
.``4 5
renderer``5 =
.``= >
sharedMaterials``> M
.``M N
Length``N T
;``T U
++``V X
matIndex``X `
)``` a
{aa 
ifbb 
(bb 
selectedMaterialsbb (
.bb( )
Containsbb) 1
(bb1 2
pbbb2 4
.bb4 5
rendererbb5 =
.bb= >
sharedMaterialsbb> M
[bbM N
matIndexbbN V
]bbV W
)bbW X
)bbX Y
{cc 
subMeshIndicesdd &
.dd& '
Adddd' *
(dd* +
matIndexdd+ 3
)dd3 4
;dd4 5
}ee 
}ff 
ifhh 
(hh 
subMeshIndiceshh !
.hh! "
Counthh" '
>hh( )
$numhh* +
)hh+ ,
{ii 
IEnumerablejj 
<jj  
Facejj  $
>jj$ %
matchesjj& -
=jj. /
pbjj0 2
.jj2 3
facesInternaljj3 @
.jj@ A
WherejjA F
(jjF G
xjjG H
=>jjI K
subMeshIndicesjjL Z
.jjZ [
Containsjj[ c
(jjc d
xjjd e
.jje f
submeshIndexjjf r
)jjr s
)jjs t
;jjt u
ifkk 
(kk 
matcheskk 
.kk  
Anykk  #
(kk# $
)kk$ %
)kk% &
{ll 
newSelectionmm $
.mm$ %
Addmm% (
(mm( )
pbmm) +
.mm+ ,

gameObjectmm, 6
)mm6 7
;mm7 8
pbnn 
.nn 
SetSelectedFacesnn +
(nn+ ,
matchesnn, 3
)nn3 4
;nn4 5
}oo 
}pp 
}qq 
	Selectionss 
.ss 
objectsss 
=ss 
newSelectionss  ,
.ss, -
ToArrayss- 4
(ss4 5
)ss5 6
;ss6 7
ProBuilderEditoruu 
.uu 
Refreshuu $
(uu$ %
)uu% &
;uu& '
returnww 
newww 
ActionResultww #
(ww# $
ActionResultww$ 0
.ww0 1
Statusww1 7
.ww7 8
Successww8 ?
,ww? @
$strwwA ]
)ww] ^
;ww^ _
}xx 	
}yy 
}zz ©@
üD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Selection\SelectEdgeLoop.cs
	namespace

 	
UnityEditor


 
.

 

ProBuilder

  
.

  !
Actions

! (
{ 
sealed 

class 
SelectEdgeLoop 
:  !

MenuAction" ,
{ 
Pref 
< 
bool 
> 
m_SelectIterative $
=% &
new' *
Pref+ /
</ 0
bool0 4
>4 5
(5 6
$str6 V
,V W
falseX ]
)] ^
;^ _

GUIContent 
gc_selectIterative %
=& '
new( +

GUIContent, 6
(6 7
$str7 L
,L M
$str	N ë
)
ë í
;
í ì
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
	Selection& /
;/ 0
}1 2
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- E
,E F
IconSkinG O
.O P
ProP S
)S T
;T U
}V W
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
public   
override   
int   
toolbarPriority   +
{!! 	
get"" 
{"" 
return"" 
$num"" 
;"" 
}"" 
}## 	
	protected%% 
override%% 
bool%% 
hasFileMenuEntry%%  0
{&& 	
get'' 
{'' 
return'' 
false'' 
;'' 
}''  !
}(( 	
private** 
static** 
readonly** 
TooltipContent**  .
	s_Tooltip**/ 8
=**9 :
new**; >
TooltipContent**? M
(++ 
$str,, "
,,," #
$str-- ]
,--] ^
keyCommandAlt.. 
,.. 
$char.. "
)// 
;// 
public11 
override11 

SelectMode11 "
validSelectModes11# 3
{22 	
get33 
{33 
return33 

SelectMode33 #
.33# $
Edge33$ (
;33( )
}33* +
}44 	
	protected66 
override66 
MenuActionState66 *
optionsMenuState66+ ;
{77 	
get88 
{88 
if99 
(99 
enabled99 
&&99 
ProBuilderEditor99 /
.99/ 0

selectMode990 :
==99; =

SelectMode99> H
.99H I
Edge99I M
)99M N
return:: 
MenuActionState:: *
.::* +
VisibleAndEnabled::+ <
;::< =
return<< 
MenuActionState<< &
.<<& '
Hidden<<' -
;<<- .
}== 
}>> 	
public@@ 
override@@ 
bool@@ 
enabled@@ $
{AA 	
getBB 
{BB 
returnBB 
baseBB 
.BB 
enabledBB %
&&BB& (
MeshSelectionBB) 6
.BB6 7
selectedEdgeCountBB7 H
>BBI J
$numBBK L
;BBL M
}BBN O
}CC 	
publicEE 
overrideEE 
ActionResultEE $
DoActionEE% -
(EE- .
)EE. /
{FF 	
ifGG 
(GG 
MeshSelectionGG 
.GG 
selectedObjectCountGG 1
<GG2 3
$numGG4 5
)GG5 6
returnHH 
ActionResultHH #
.HH# $
NoSelectionHH$ /
;HH/ 0
UndoUtilityJJ 
.JJ 
RecordSelectionJJ '
(JJ' (
$strJJ( :
)JJ: ;
;JJ; <
boolLL 
	foundLoopLL 
=LL 
falseLL "
;LL" #
foreachNN 
(NN 
ProBuilderMeshNN #
pbNN$ &
inNN' )
MeshSelectionNN* 7
.NN7 8
topInternalNN8 C
)NNC D
{OO 
EdgePP 
[PP 
]PP 
loopPP 
;PP 
boolQQ 
successQQ 
=QQ 
falseQQ $
;QQ$ %
ifSS 
(SS 
m_SelectIterativeSS %
)SS% &
successTT 
=TT 
ElementSelectionTT .
.TT. / 
GetEdgeLoopIterativeTT/ C
(TTC D
pbTTD F
,TTF G
pbTTH J
.TTJ K
selectedEdgesTTK X
,TTX Y
outTTZ ]
loopTT^ b
)TTb c
;TTc d
elseUU 
successVV 
=VV 
ElementSelectionVV .
.VV. /
GetEdgeLoopVV/ :
(VV: ;
pbVV; =
,VV= >
pbVV? A
.VVA B
selectedEdgesVVB O
,VVO P
outVVQ T
loopVVU Y
)VVY Z
;VVZ [
ifXX 
(XX 
successXX 
)XX 
{YY 
ifZZ 
(ZZ 
loopZZ 
.ZZ 
LengthZZ #
>ZZ$ %
pbZZ& (
.ZZ( )
selectedEdgeCountZZ) :
)ZZ: ;
	foundLoop[[ !
=[[" #
true[[$ (
;[[( )
pb]] 
.]] 
SetSelectedEdges]] '
(]]' (
loop]]( ,
)]], -
;]]- .
}^^ 
}__ 
ProBuilderEditoraa 
.aa 
Refreshaa $
(aa$ %
)aa% &
;aa& '
	SceneViewcc 
.cc 

RepaintAllcc  
(cc  !
)cc! "
;cc" #
ifee 
(ee 
	foundLoopee 
)ee 
returnff 
newff 
ActionResultff '
(ff' (
ActionResultff( 4
.ff4 5
Statusff5 ;
.ff; <
Successff< C
,ffC D
$strffE W
)ffW X
;ffX Y
elsegg 
returnhh 
newhh 
ActionResulthh '
(hh' (
ActionResulthh( 4
.hh4 5
Statushh5 ;
.hh; <
Failurehh< C
,hhC D
$strhhE V
)hhV W
;hhW X
}ii 	
	protectedkk 
overridekk 
voidkk 
OnSettingsGUIkk  -
(kk- .
)kk. /
{ll 	
	GUILayoutmm 
.mm 
Labelmm 
(mm 
$strmm 6
,mm6 7
EditorStylesmm8 D
.mmD E
	boldLabelmmE N
)mmN O
;mmO P
	EditorGUIoo 
.oo 
BeginChangeCheckoo &
(oo& '
)oo' (
;oo( )
m_SelectIterativepp 
.pp 
valuepp #
=pp$ %
EditorGUILayoutpp& 5
.pp5 6
Togglepp6 <
(pp< =
gc_selectIterativepp= O
,ppO P
m_SelectIterativeppQ b
)ppb c
;ppc d
ifrr 
(rr 
	EditorGUIrr 
.rr 
EndChangeCheckrr (
(rr( )
)rr) *
)rr* +
ProBuilderSettingsss "
.ss" #
Savess# '
(ss' (
)ss( )
;ss) *
	GUILayoutuu 
.uu 
FlexibleSpaceuu #
(uu# $
)uu$ %
;uu% &
ifww 
(ww 
	GUILayoutww 
.ww 
Buttonww  
(ww  !
$strww! 3
)ww3 4
)ww4 5
{xx 
DoActionyy 
(yy 
)yy 
;yy 
	SceneViewzz 
.zz 

RepaintAllzz $
(zz$ %
)zz% &
;zz& '
}{{ 
}|| 	
}}} 
}~~ óI
†D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Selection\ShrinkSelection.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
ShrinkSelection  
:! "

MenuAction# -
{		 
public

 
override

 
ToolbarGroup

 $
group

% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
	Selection& /
;/ 0
}1 2
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- G
,G H
IconSkinI Q
.Q R
ProR U
)U V
;V W
}X Y
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str "
," #
$str I
,I J
keyCommandAlt 
, 
keyCommandShift .
,. /
$char0 3
) 
; 
public   
override   

SelectMode   "
validSelectModes  # 3
{!! 	
get"" 
{"" 
return"" 

SelectMode"" #
.""# $
Vertex""$ *
|""+ ,

SelectMode""- 7
.""7 8
Edge""8 <
|""= >

SelectMode""? I
.""I J
Face""J N
|""O P

SelectMode""Q [
.""[ \
TextureFace""\ g
;""g h
}""i j
}## 	
public%% 
override%% 
bool%% 
enabled%% $
{&& 	
get'' 
{'' 
return'' 
base'' 
.'' 
enabled'' %
&&''& (!
VerifyShrinkSelection'') >
(''> ?
)''? @
;''@ A
}''B C
}(( 	
public** 
override** 
ActionResult** $
DoAction**% -
(**- .
)**. /
{++ 	
var,, 
	selection,, 
=,, 
MeshSelection,, )
.,,) *
topInternal,,* 5
;,,5 6
var-- 
selectionCount-- 
=--  
MeshSelection--! .
.--. /
selectedObjectCount--/ B
;--B C
UndoUtility// 
.// 
RecordSelection// '
(//' (
$str//( :
)//: ;
;//; <
int22 
rc22 
=22 
$num22 
;22 
for33 
(33 
int33 
i33 
=33 
$num33 
;33 
i33 
<33 
selectionCount33  .
;33. /
i330 1
++331 3
)333 4
{44 
ProBuilderMesh55 
mesh55 #
=55$ %
	selection55& /
[55/ 0
i550 1
]551 2
;552 3
switch77 
(77 
ProBuilderEditor77 (
.77( )

selectMode77) 3
)773 4
{88 
case99 

SelectMode99 #
.99# $
Edge99$ (
:99( )
{:: 
int;; 
[;; 
];; 
	perimeter;; '
=;;( )
ElementSelection;;* :
.;;: ;
GetPerimeterEdges;;; L
(;;L M
mesh;;M Q
,;;Q R
mesh;;S W
.;;W X
selectedEdges;;X e
);;e f
;;;f g
mesh<< 
.<< 
SetSelectedEdges<< -
(<<- .
mesh<<. 2
.<<2 3
selectedEdges<<3 @
.<<@ A
RemoveAt<<A I
(<<I J
	perimeter<<J S
)<<S T
)<<T U
;<<U V
rc== 
+=== 
	perimeter== '
!===( *
null==+ /
?==0 1
	perimeter==2 ;
.==; <
Length==< B
:==C D
$num==E F
;==F G
break>> 
;>> 
}?? 
caseAA 

SelectModeAA #
.AA# $
TextureFaceAA$ /
:AA/ 0
caseBB 

SelectModeBB #
.BB# $
FaceBB$ (
:BB( )
{CC 
FaceDD 
[DD 
]DD 
	perimeterDD (
=DD) *
ElementSelectionDD+ ;
.DD; <
GetPerimeterFacesDD< M
(DDM N
meshDDN R
,DDR S
meshDDT X
.DDX Y!
selectedFacesInternalDDY n
)DDn o
.DDo p
ToArrayDDp w
(DDw x
)DDx y
;DDy z
meshEE 
.EE 
SetSelectedFacesEE -
(EE- .
meshEE. 2
.EE2 3!
selectedFacesInternalEE3 H
.EEH I
ExceptEEI O
(EEO P
	perimeterEEP Y
)EEY Z
.EEZ [
ToArrayEE[ b
(EEb c
)EEc d
)EEd e
;EEe f
rcFF 
+=FF 
	perimeterFF '
.FF' (
LengthFF( .
;FF. /
breakGG 
;GG 
}HH 
caseJJ 

SelectModeJJ #
.JJ# $
VertexJJ$ *
:JJ* +
{KK 
varLL 
universalEdgesLL *
=LL+ ,
meshLL- 1
.LL1 2&
GetSharedVertexHandleEdgesLL2 L
(LLL M
meshLLM Q
.LLQ R
facesInternalLLR _
.LL_ `

SelectManyLL` j
(LLj k
xLLk l
=>LLm o
xLLp q
.LLq r
edgesLLr w
)LLw x
)LLx y
.LLy z
ToArray	LLz Å
(
LLÅ Ç
)
LLÇ É
;
LLÉ Ñ
intMM 
[MM 
]MM 
	perimeterMM '
=MM( )
ElementSelectionMM* :
.MM: ; 
GetPerimeterVerticesMM; O
(MMO P
meshMMP T
,MMT U
meshMMV Z
.MMZ [#
selectedIndexesInternalMM[ r
,MMr s
universalEdges	MMt Ç
)
MMÇ É
;
MMÉ Ñ
meshNN 
.NN 
SetSelectedVerticesNN 0
(NN0 1
meshNN1 5
.NN5 6#
selectedIndexesInternalNN6 M
.NNM N
RemoveAtNNN V
(NNV W
	perimeterNNW `
)NN` a
)NNa b
;NNb c
rcOO 
+=OO 
	perimeterOO '
!=OO( *
nullOO+ /
?OO0 1
	perimeterOO2 ;
.OO; <
LengthOO< B
:OOC D
$numOOE F
;OOF G
breakPP 
;PP 
}QQ 
}RR 
}SS 
ProBuilderEditorUU 
.UU 
RefreshUU $
(UU$ %
)UU% &
;UU& '
ifWW 
(WW 
rcWW 
>WW 
$numWW 
)WW 
returnXX 
newXX 
ActionResultXX '
(XX' (
ActionResultXX( 4
.XX4 5
StatusXX5 ;
.XX; <
SuccessXX< C
,XXC D
$strXXE W
)XXW X
;XXX Y
returnZZ 
newZZ 
ActionResultZZ #
(ZZ# $
ActionResultZZ$ 0
.ZZ0 1
StatusZZ1 7
.ZZ7 8
CanceledZZ8 @
,ZZ@ A
$strZZB U
)ZZU V
;ZZV W
}[[ 	
static]] 
bool]] !
VerifyShrinkSelection]] )
(]]) *
)]]* +
{^^ 	
int__ 
sel__ 
,__ 
max__ 
;__ 
switchaa 
(aa 
ProBuilderEditoraa $
.aa$ %

selectModeaa% /
)aa/ 0
{bb 
casecc 

SelectModecc 
.cc  
Facecc  $
:cc$ %
seldd 
=dd 
MeshSelectiondd '
.dd' (
selectedFaceCountdd( 9
;dd9 :
maxee 
=ee 
MeshSelectionee '
.ee' (
totalFaceCountee( 6
;ee6 7
breakff 
;ff 
casehh 

SelectModehh 
.hh  
Edgehh  $
:hh$ %
selii 
=ii 
MeshSelectionii '
.ii' (
selectedEdgeCountii( 9
;ii9 :
maxjj 
=jj 
MeshSelectionjj '
.jj' (
totalEdgeCountjj( 6
;jj6 7
breakkk 
;kk 
defaultmm 
:mm 
selnn 
=nn 
MeshSelectionnn '
.nn' (
selectedVertexCountnn( ;
;nn; <
maxoo 
=oo 
MeshSelectionoo '
.oo' (
totalVertexCountoo( 8
;oo8 9
breakpp 
;pp 
}qq 
returnss 
selss 
>ss 
$numss 
&&ss 
selss !
<ss" #
maxss$ '
;ss' (
}tt 	
}uu 
}vv Ó"
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\ConnectEdges.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
ConnectEdges 
: 

MenuAction  *
{ 
public		 
override		 
ToolbarGroup		 $
group		% *
{		+ ,
get		- 0
{		1 2
return		3 9
ToolbarGroup		: F
.		F G
Geometry		G O
;		O P
}		Q R
}		S T
public

 
override

 
	Texture2D

 !
icon

" &
{

' (
get

) ,
{

- .
return

/ 5
IconUtility

6 A
.

A B
GetIcon

B I
(

I J
$str

J `
,

` a
IconSkin

b j
.

j k
Pro

k n
)

n o
;

o p
}

q r
}

s t
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
	s_Tooltip> G
;G H
}I J
}K L
	protected 
override 
bool 
hasFileMenuEntry  0
{1 2
get3 6
{7 8
return9 ?
false@ E
;E F
}G H
}I J
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str 
,  
$str q
,q r
keyCommandAlt 
, 
$char "
) 
; 
public 
override 

SelectMode "
validSelectModes# 3
{ 	
get 
{ 
return 

SelectMode #
.# $
Edge$ (
;( )
}* +
} 	
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
base 
. 
enabled %
&&& (
MeshSelection) 6
.6 7&
selectedEdgeCountObjectMax7 Q
>R S
$numT U
;U V
}W X
} 	
public 
override 
ActionResult $
DoAction% -
(- .
). /
{   	
ActionResult!! 
res!! 
=!! 
ActionResult!! +
.!!+ ,
NoSelection!!, 7
;!!7 8
UndoUtility## 
.## 
RecordSelection## '
(##' (
$str##( 7
)##7 8
;##8 9
foreach%% 
(%% 
var%% 
mesh%% 
in%%  
MeshSelection%%! .
.%%. /
topInternal%%/ :
)%%: ;
{&& 
Edge'' 
['' 
]'' 
connections'' "
;''" #
Face(( 
[(( 
](( 
faces(( 
;(( 
res** 
=** 
ConnectElements** %
.**% &
Connect**& -
(**- .
mesh**. 2
,**2 3
mesh**4 8
.**8 9
selectedEdges**9 F
,**F G
out**H K
faces**L Q
,**Q R
out**S V
connections**W b
,**b c
true**d h
,**h i
true**j n
)**n o
;**o p
if,, 
(,, 
connections,, 
!=,,  "
null,,# '
),,' (
{-- 
if.. 
(.. 
connections.. #
...# $
Length..$ *
!=..+ -
$num... /
)../ 0
mesh// 
.// 
SetSelectedEdges// -
(//- .
connections//. 9
)//9 :
;//: ;
mesh00 
.00 
Refresh00  
(00  !
)00! "
;00" #
mesh11 
.11 
Optimize11 !
(11! "
)11" #
;11# $
}22 
}33 
ProBuilderEditor55 
.55 
Refresh55 $
(55$ %
)55% &
;55& '
return66 
res66 
;66 
}77 	
}88 
}99 Œß
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\ProBuilderEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
public 

sealed 
class 
ProBuilderEditor (
:) *
EditorWindow+ 7
,7 8
IHasCustomMenu9 G
{ 
const 
float  
k_MouseDragThreshold (
=) *
$num+ -
;- .
public 
static 
event 
Action "
<" #
IEnumerable# .
<. /
ProBuilderMesh/ =
>= >
>> ?
selectionUpdated@ P
;P Q
public## 
static## 
event## 
Action## "
<##" #

SelectMode### -
>##- .
selectModeChanged##/ @
;##@ A
public(( 
static(( 
event(( 
Action(( "
<((" #
IEnumerable((# .
<((. /
ProBuilderMesh((/ =
>((= >
>((> ?!
afterMeshModification((@ U
;((U V
public-- 
static-- 
event-- 
Action-- "
<--" #
IEnumerable--# .
<--. /
ProBuilderMesh--/ =
>--= >
>--> ?"
beforeMeshModification--@ V
;--V W
internal// 
static// 
EditorToolbar// %
s_EditorToolbar//& 5
;//5 6
static00 
ProBuilderEditor00 

s_Instance00  *
;00* +

GUIContent22 
[22 
]22 
m_EditModeIcons22 $
;22$ %
GUIStyle33 &
VertexTranslationInfoStyle33 +
;33+ ,
[55 	
UserSetting55	 
(55 
$str55 
,55 
$str55  1
,551 2
$str553 
)	55 Ä
]
55Ä Å
static66 
Pref66 
<66 
bool66 
>66 
s_ShowSceneInfo66 )
=66* +
new66, /
Pref660 4
<664 5
bool665 9
>669 :
(66: ;
$str66; Q
,66Q R
false66S X
)66X Y
;66Y Z
[88 	
UserSetting88	 
(88 
$str88 
,88 
$str88  *
,88* +
$str88, u
)88u v
]88v w
internal99 
static99 
Pref99 
<99 
bool99 !
>99! "
s_IsIconGui99# .
=99/ 0
new991 4
Pref995 9
<999 :
bool99: >
>99> ?
(99? @
$str99@ W
,99W X
false99Y ^
)99^ _
;99_ `
[@@ 	
UserSetting@@	 
(@@ 
$str@@ #
,@@# $
$str@@% A
,@@A B
$str	@@C î
)
@@î ï
]
@@ï ñ
internalAA 
staticAA 
PrefAA 
<AA 
boolAA !
>AA! "%
s_AllowNonManifoldActionsAA# <
=AA= >
newAA? B
PrefAAC G
<AAG H
boolAAH L
>AAL M
(AAM N
$strAAN n
,AAn o
falseAAp u
,AAu v
SettingsScope	AAw Ñ
.
AAÑ Ö
User
AAÖ â
)
AAâ ä
;
AAä ã
[CC 	
UserSettingCC	 
(CC 
$strCC 
,CC 
$strCC  2
,CC2 3
$str	CC4 á
)
CCá à
]
CCà â
staticDD 
PrefDD 
<DD  
SceneToolbarLocationDD (
>DD( )"
s_SceneToolbarLocationDD* @
=DDA B
newDDC F
PrefDDG K
<DDK L 
SceneToolbarLocationDDL `
>DD` a
(DDa b
$strDDb 
,	DD Ä"
SceneToolbarLocation
DDÅ ï
.
DDï ñ
UpperCenter
DDñ °
,
DD° ¢
SettingsScope
DD£ ∞
.
DD∞ ±
User
DD± µ
)
DDµ ∂
;
DD∂ ∑
staticFF 
PrefFF 
<FF 
boolFF 
>FF 
s_WindowIsFloatingFF ,
=FF- .
newFF/ 2
PrefFF3 7
<FF7 8
boolFF8 <
>FF< =
(FF= >
$strFF> w
,FFw x
falseFFy ~
,FF~ 
SettingsScope
FFÄ ç
.
FFç é
Project
FFé ï
)
FFï ñ
;
FFñ ó
staticGG 
PrefGG 
<GG 
boolGG 
>GG #
m_BackfaceSelectEnabledGG 1
=GG2 3
newGG4 7
PrefGG8 <
<GG< =
boolGG= A
>GGA B
(GGB C
$strGGC a
,GGa b
falseGGc h
)GGh i
;GGi j
staticHH 
PrefHH 
<HH 
RectSelectModeHH "
>HH" # 
m_DragSelectRectModeHH$ 8
=HH9 :
newHH; >
PrefHH? C
<HHC D
RectSelectModeHHD R
>HHR S
(HHS T
$strHHT o
,HHo p
RectSelectModeHHq 
.	HH Ä
Partial
HHÄ á
)
HHá à
;
HHà â
staticII 
PrefII 
<II %
SelectionModifierBehaviorII -
>II- .$
m_SelectModifierBehaviorII/ G
=IIH I
newIIJ M
PrefIIN R
<IIR S%
SelectionModifierBehaviorIIS l
>IIl m
(IIm n
$str	IIn â
,
IIâ ä'
SelectionModifierBehavior
IIã §
.
II§ •

Difference
II• Ø
)
IIØ ∞
;
II∞ ±
staticJJ 
PrefJJ 
<JJ 

SelectModeJJ 
>JJ 
s_SelectModeJJ  ,
=JJ- .
newJJ/ 2
PrefJJ3 7
<JJ7 8

SelectModeJJ8 B
>JJB C
(JJC D
$strJJD W
,JJW X

SelectModeJJY c
.JJc d
ObjectJJd j
)JJj k
;JJk l
internalLL 
staticLL 
RectSelectModeLL &
rectSelectModeLL' 5
{MM 	
getNN 
{NN 
returnNN  
m_DragSelectRectModeNN -
.NN- .
valueNN. 3
;NN3 4
}NN5 6
setPP 
{QQ 
ifRR 
(RR  
m_DragSelectRectModeRR (
.RR( )
valueRR) .
==RR/ 1
valueRR2 7
)RR7 8
returnSS 
;SS  
m_DragSelectRectModeUU $
.UU$ %
SetValueUU% -
(UU- .
valueUU. 3
,UU3 4
trueUU5 9
)UU9 :
;UU: ;
ifWW 
(WW 

s_InstanceWW 
!=WW !
nullWW" &
)WW& '

s_InstanceXX 
.XX $
m_ScenePickerPreferencesXX 7
.XX7 8
rectSelectModeXX8 F
=XXG H
valueXXI N
;XXN O
}YY 
}ZZ 	
internal\\ 
static\\ %
SelectionModifierBehavior\\ 1%
selectionModifierBehavior\\2 K
{]] 	
get^^ 
{^^ 
return^^ $
m_SelectModifierBehavior^^ 1
.^^1 2
value^^2 7
;^^7 8
}^^9 :
set`` 
{aa 
ifbb 
(bb 

s_Instancebb 
==bb !
nullbb" &
||bb' )$
m_SelectModifierBehaviorbb* B
.bbB C
valuebbC H
==bbI K
valuebbL Q
)bbQ R
returncc 
;cc $
m_SelectModifierBehavioree (
.ee( )
SetValueee) 1
(ee1 2
valueee2 7
,ee7 8
trueee9 =
)ee= >
;ee> ?
ifgg 
(gg 

s_Instancegg 
!=gg !
nullgg" &
)gg& '

s_Instancehh 
.hh $
m_ScenePickerPreferenceshh 7
.hh7 8%
selectionModifierBehaviorhh8 Q
=hhR S
valuehhT Y
;hhY Z
}ii 
}jj 	
internalll 
staticll 
boolll $
backfaceSelectionEnabledll 5
{mm 	
getnn 
{nn 
returnnn #
m_BackfaceSelectEnablednn 0
.nn0 1
valuenn1 6
;nn6 7
}nn8 9
setpp 
{qq 
ifrr 
(rr 
valuerr 
==rr #
m_BackfaceSelectEnabledrr 4
.rr4 5
valuerr5 :
)rr: ;
returnss 
;ss #
m_BackfaceSelectEnableduu '
.uu' (
SetValueuu( 0
(uu0 1
valueuu1 6
,uu6 7
trueuu8 <
)uu< =
;uu= >
ifww 
(ww 

s_Instanceww 
!=ww  
nullww! %
)ww% &

s_Instancexx 
.xx $
m_ScenePickerPreferencesxx 7
.xx7 8
cullModexx8 @
=xxA B
valuexxC H
?xxI J
CullingModexxK V
.xxV W
NonexxW [
:xx\ ]
CullingModexx^ i
.xxi j
Backxxj n
;xxn o
}yy 
}zz 	

SelectMode}} 
m_LastComponentMode}} &
;}}& '
GUIStyle
ÉÉ 
m_CommandStyle
ÉÉ 
;
ÉÉ  
Rect
ÑÑ &
m_ElementModeToolbarRect
ÑÑ %
=
ÑÑ& '
new
ÑÑ( +
Rect
ÑÑ, 0
(
ÑÑ0 1
$num
ÑÑ1 2
,
ÑÑ2 3
$num
ÑÑ4 5
,
ÑÑ5 6
$num
ÑÑ7 :
,
ÑÑ: ;
$num
ÑÑ< >
)
ÑÑ> ?
;
ÑÑ? @
int
ÜÜ 
m_DefaultControl
ÜÜ 
;
ÜÜ 
SceneSelection
áá 

m_Hovering
áá !
=
áá" #
new
áá$ '
SceneSelection
áá( 6
(
áá6 7
)
áá7 8
;
áá8 9
SceneSelection
àà  
m_HoveringPrevious
àà )
=
àà* +
new
àà, /
SceneSelection
àà0 >
(
àà> ?
)
àà? @
;
àà@ A$
ScenePickerPreferences
ââ &
m_ScenePickerPreferences
ââ 7
;
ââ7 8
[
ãã 	
UserSetting
ãã	 
(
ãã 
$str
ãã 
,
ãã  
$str
ãã! 7
,
ãã7 8
$str
ãã9 r
)
ããr s
]
ããs t
static
åå 
Pref
åå 
<
åå 
bool
åå 
>
åå "
s_ShowHoverHighlight
åå .
=
åå/ 0
new
åå1 4
Pref
åå5 9
<
åå9 :
bool
åå: >
>
åå> ?
(
åå? @
$str
åå@ b
,
ååb c
true
ååd h
,
ååh i
SettingsScope
ååj w
.
ååw x
User
ååx |
)
åå| }
;
åå} ~
Tool
éé 
m_CurrentTool
éé 
=
éé 
Tool
éé !
.
éé! "
Move
éé" &
;
éé& '
Vector2
èè $
m_InitialMousePosition
èè &
;
èè& '
Rect
êê 
m_MouseDragRect
êê 
;
êê 
bool
ëë 
m_IsDragging
ëë 
;
ëë 
bool
íí #
m_IsReadyForMouseDrag
íí "
;
íí" #
bool
îî 
m_WasDoubleClick
îî 
;
îî 
static
ôô 

Dictionary
ôô 
<
ôô 
Type
ôô 
,
ôô $
VertexManipulationTool
ôô  6
>
ôô6 7
s_EditorTools
ôô8 E
=
ôôF G
new
ôôH K

Dictionary
ôôL V
<
ôôV W
Type
ôôW [
,
ôô[ \$
VertexManipulationTool
ôô] s
>
ôôs t
(
ôôt u
)
ôôu v
;
ôôv w
Vector3
õõ 
[
õõ 
]
õõ 
[
õõ 
]
õõ 
m_VertexPositions
õõ %
;
õõ% &
Vector3
úú 
[
úú 
]
úú 
m_VertexOffset
úú  
;
úú  !

GUIContent
ûû 
m_SceneInfo
ûû 
=
ûû  
new
ûû! $

GUIContent
ûû% /
(
ûû/ 0
)
ûû0 1
;
ûû1 2
Rect
†† 
m_SceneInfoRect
†† 
=
†† 
new
†† "
Rect
††# '
(
††' (
$num
††( *
,
††* +
$num
††, .
,
††. /
$num
††0 3
,
††3 4
$num
††5 7
)
††7 8
;
††8 9
bool
¢¢  
m_wasSelectingPath
¢¢ 
;
¢¢  
internal
©© 
List
©© 
<
©© 
ProBuilderMesh
©© $
>
©©$ %
	selection
©©& /
{
™™ 	
get
´´ 
{
´´ 
return
´´ 
MeshSelection
´´ &
.
´´& '
topInternal
´´' 2
;
´´2 3
}
´´4 5
}
¨¨ 	
Event
ÆÆ 
m_CurrentEvent
ÆÆ 
;
ÆÆ 
internal
∞∞ 
bool
∞∞ 
isFloatingWindow
∞∞ &
{
∞∞' (
get
∞∞) ,
;
∞∞, -
private
∞∞. 5
set
∞∞6 9
;
∞∞9 :
}
∞∞; <
[
µµ 	
Obsolete
µµ	 
]
µµ 
internal
∂∂ 
static
∂∂ 
	EditLevel
∂∂ !
	editLevel
∂∂" +
{
∑∑ 	
get
∏∏ 
{
∏∏ 
return
∏∏ 

s_Instance
∏∏ #
!=
∏∏$ &
null
∏∏' +
?
∏∏, -
EditorUtility
∏∏. ;
.
∏∏; <
GetEditLevel
∏∏< H
(
∏∏H I
s_SelectMode
∏∏I U
)
∏∏U V
:
∏∏W X
	EditLevel
∏∏Y b
.
∏∏b c
Top
∏∏c f
;
∏∏f g
}
∏∏h i
}
ππ 	
[
øø 	
Obsolete
øø	 
]
øø 
internal
¿¿ 
static
¿¿ 
ComponentMode
¿¿ %
componentMode
¿¿& 3
{
¡¡ 	
get
¬¬ 
{
¬¬ 
return
¬¬ 

s_Instance
¬¬ #
!=
¬¬$ &
null
¬¬' +
?
¬¬, -
EditorUtility
¬¬. ;
.
¬¬; <
GetComponentMode
¬¬< L
(
¬¬L M
s_SelectMode
¬¬M Y
)
¬¬Y Z
:
¬¬[ \
ComponentMode
¬¬] j
.
¬¬j k
Face
¬¬k o
;
¬¬o p
}
¬¬q r
}
√√ 	
public
»» 
static
»» 

SelectMode
»»  

selectMode
»»! +
{
…… 	
get
   
{
ÀÀ 
if
ÃÃ 
(
ÃÃ 

s_Instance
ÃÃ 
!=
ÃÃ !
null
ÃÃ" &
)
ÃÃ& '
return
ÕÕ 
s_SelectMode
ÕÕ '
;
ÕÕ' (
return
–– 

SelectMode
–– !
.
––! "
Object
––" (
;
––( )
}
—— 
set
”” 
{
‘‘ 
if
’’ 
(
’’ 

s_Instance
’’ 
==
’’ !
null
’’" &
)
’’& '
return
÷÷ 
;
÷÷ 
var
ÿÿ 
previous
ÿÿ 
=
ÿÿ 
s_SelectMode
ÿÿ +
.
ÿÿ+ ,
value
ÿÿ, 1
;
ÿÿ1 2
if
⁄⁄ 
(
⁄⁄ 
previous
⁄⁄ 
==
⁄⁄ 
value
⁄⁄  %
)
⁄⁄% &
return
€€ 
;
€€ 
s_SelectMode
›› 
.
›› 
SetValue
›› %
(
››% &
value
››& +
,
››+ ,
true
››- 1
)
››1 2
;
››2 3
if
ﬂﬂ 
(
ﬂﬂ 
previous
ﬂﬂ 
==
ﬂﬂ 

SelectMode
ﬂﬂ  *
.
ﬂﬂ* +
Edge
ﬂﬂ+ /
||
ﬂﬂ0 2
previous
ﬂﬂ3 ;
==
ﬂﬂ< >

SelectMode
ﬂﬂ? I
.
ﬂﬂI J
Vertex
ﬂﬂJ P
||
ﬂﬂQ S
previous
ﬂﬂT \
==
ﬂﬂ] _

SelectMode
ﬂﬂ` j
.
ﬂﬂj k
Face
ﬂﬂk o
)
ﬂﬂo p

s_Instance
‡‡ 
.
‡‡ !
m_LastComponentMode
‡‡ 2
=
‡‡3 4
previous
‡‡5 =
;
‡‡= >
if
‚‚ 
(
‚‚ 
value
‚‚ 
==
‚‚ 

SelectMode
‚‚ '
.
‚‚' (
Object
‚‚( .
)
‚‚. /
Tools
„„ 
.
„„ 
current
„„ !
=
„„" #

s_Instance
„„$ .
.
„„. /
m_CurrentTool
„„/ <
;
„„< =
if
ÂÂ 
(
ÂÂ 
selectModeChanged
ÂÂ %
!=
ÂÂ& (
null
ÂÂ) -
)
ÂÂ- .
selectModeChanged
ÊÊ %
(
ÊÊ% &
value
ÊÊ& +
)
ÊÊ+ ,
;
ÊÊ, -
Refresh
ËË 
(
ËË 
)
ËË 
;
ËË 
}
ÈÈ 
}
ÍÍ 	
Stack
ÏÏ 
<
ÏÏ 

SelectMode
ÏÏ 
>
ÏÏ !
m_SelectModeHistory
ÏÏ -
=
ÏÏ. /
new
ÏÏ0 3
Stack
ÏÏ4 9
<
ÏÏ9 :

SelectMode
ÏÏ: D
>
ÏÏD E
(
ÏÏE F
)
ÏÏF G
;
ÏÏG H
internal
ÓÓ 
static
ÓÓ 
void
ÓÓ 
PushSelectMode
ÓÓ +
(
ÓÓ+ ,

SelectMode
ÓÓ, 6
mode
ÓÓ7 ;
)
ÓÓ; <
{
ÔÔ 	

s_Instance
 
.
 !
m_SelectModeHistory
 *
.
* +
Push
+ /
(
/ 0

selectMode
0 :
)
: ;
;
; <

selectMode
ÒÒ 
=
ÒÒ 
mode
ÒÒ 
;
ÒÒ 
}
ÚÚ 	
internal
ÙÙ 
static
ÙÙ 
void
ÙÙ 
PopSelectMode
ÙÙ *
(
ÙÙ* +
)
ÙÙ+ ,
{
ıı 	
if
ˆˆ 
(
ˆˆ 

s_Instance
ˆˆ 
.
ˆˆ !
m_SelectModeHistory
ˆˆ .
.
ˆˆ. /
Count
ˆˆ/ 4
<
ˆˆ5 6
$num
ˆˆ7 8
)
ˆˆ8 9
return
˜˜ 
;
˜˜ 

selectMode
¯¯ 
=
¯¯ 

s_Instance
¯¯ #
.
¯¯# $!
m_SelectModeHistory
¯¯$ 7
.
¯¯7 8
Pop
¯¯8 ;
(
¯¯; <
)
¯¯< =
;
¯¯= >
}
˘˘ 	
internal
˚˚ 
static
˚˚ 
void
˚˚ #
ResetToLastSelectMode
˚˚ 2
(
˚˚2 3
)
˚˚3 4
{
¸¸ 	
if
˝˝ 
(
˝˝ 

s_Instance
˝˝ 
!=
˝˝ 
null
˝˝ "
)
˝˝" #

selectMode
˛˛ 
=
˛˛ 

s_Instance
˛˛ '
.
˛˛' (!
m_LastComponentMode
˛˛( ;
;
˛˛; <
}
ˇˇ 	
static
ÅÅ 
class
ÅÅ 
SceneStyles
ÅÅ  
{
ÇÇ 	
static
ÉÉ 
bool
ÉÉ 
s_Init
ÉÉ 
=
ÉÉ  
false
ÉÉ! &
;
ÉÉ& '
static
ÑÑ 
GUIStyle
ÑÑ 
s_SelectionRect
ÑÑ +
;
ÑÑ+ ,
public
ÜÜ 
static
ÜÜ 
GUIStyle
ÜÜ "
selectionRect
ÜÜ# 0
{
áá 
get
àà 
{
àà 
return
àà 
s_SelectionRect
àà ,
;
àà, -
}
àà. /
}
ââ 
public
ãã 
static
ãã 
void
ãã 
Init
ãã #
(
ãã# $
)
ãã$ %
{
åå 
if
çç 
(
çç 
s_Init
çç 
)
çç 
return
éé 
;
éé 
s_Init
êê 
=
êê 
true
êê 
;
êê 
s_SelectionRect
íí 
=
íí  !
new
íí" %
GUIStyle
íí& .
(
íí. /
)
íí/ 0
{
ìì 
normal
îî 
=
îî 
new
îî  
GUIStyleState
îî! .
(
îî. /
)
îî/ 0
{
ïï 

background
ññ "
=
ññ# $
IconUtility
ññ% 0
.
ññ0 1
GetIcon
ññ1 8
(
ññ8 9
$str
ññ9 N
)
ññN O
}
óó 
,
óó 
border
òò 
=
òò 
new
òò  

RectOffset
òò! +
(
òò+ ,
$num
òò, -
,
òò- .
$num
òò/ 0
,
òò0 1
$num
òò2 3
,
òò3 4
$num
òò5 6
)
òò6 7
,
òò7 8
margin
ôô 
=
ôô 
new
ôô  

RectOffset
ôô! +
(
ôô+ ,
$num
ôô, -
,
ôô- .
$num
ôô/ 0
,
ôô0 1
$num
ôô2 3
,
ôô3 4
$num
ôô5 6
)
ôô6 7
,
ôô7 8
padding
öö 
=
öö 
new
öö !

RectOffset
öö" ,
(
öö, -
$num
öö- .
,
öö. /
$num
öö0 1
,
öö1 2
$num
öö3 4
,
öö4 5
$num
öö6 7
)
öö7 8
}
õõ 
;
õõ 
}
úú 
}
ùù 	
public
¢¢ 
static
¢¢ 
ProBuilderEditor
¢¢ &
instance
¢¢' /
{
££ 	
get
§§ 
{
§§ 
return
§§ 

s_Instance
§§ #
;
§§# $
}
§§% &
}
•• 	
internal
ßß 
static
ßß 
void
ßß 
MenuOpenWindow
ßß +
(
ßß+ ,
)
ßß, -
{
®® 	
ProBuilderEditor
©© 
editor
©© #
=
©©$ %
(
©©& '
ProBuilderEditor
©©' 7
)
©©7 8
EditorWindow
©©8 D
.
©©D E
	GetWindow
©©E N
(
©©N O
typeof
©©O U
(
©©U V
ProBuilderEditor
©©V f
)
©©f g
,
©©g h 
s_WindowIsFloating
™™ &
,
™™& '
PreferenceKeys
™™( 6
.
™™6 7
pluginTitle
™™7 B
,
™™B C
true
´´ 
)
´´ 
;
´´ 
editor
¨¨ 
.
¨¨ 
isFloatingWindow
¨¨ #
=
¨¨$ % 
s_WindowIsFloating
¨¨& 8
;
¨¨8 9
}
≠≠ 	
void
ØØ 
OnBecameVisible
ØØ 
(
ØØ 
)
ØØ 
{
∞∞ 	

s_Instance
≤≤ 
=
≤≤ 
this
≤≤ 
;
≤≤ 
}
≥≥ 	
void
µµ 
OnEnable
µµ 
(
µµ 
)
µµ 
{
∂∂ 	

s_Instance
∑∑ 
=
∑∑ 
this
∑∑ 
;
∑∑ 
	SceneView
∫∫ 
.
∫∫ 
duringSceneGui
∫∫ $
+=
∫∫% '

OnSceneGUI
∫∫( 2
;
∫∫2 3
ProGridsInterface
ææ 
.
ææ &
SubscribePushToGridEvent
ææ 6
(
ææ6 7

PushToGrid
ææ7 A
)
ææA B
;
ææB C
ProGridsInterface
øø 
.
øø #
SubscribeToolbarEvent
øø 3
(
øø3 4!
ProGridsToolbarOpen
øø4 G
)
øøG H
;
øøH I
MeshSelection
¿¿ 
.
¿¿ $
objectSelectionChanged
¿¿ 0
+=
¿¿1 3&
OnObjectSelectionChanged
¿¿4 L
;
¿¿L M!
ProGridsToolbarOpen
¬¬ 
(
¬¬  
ProGridsInterface
¬¬  1
.
¬¬1 2$
SceneToolbarIsExtended
¬¬2 H
(
¬¬H I
)
¬¬I J
)
¬¬J K
;
¬¬K L$
VertexManipulationTool
»» "
.
»»" #$
beforeMeshModification
»»# 9
+=
»»: <$
BeforeMeshModification
»»= S
;
»»S T$
VertexManipulationTool
…… "
.
……" ##
afterMeshModification
……# 8
+=
……9 ;#
AfterMeshModification
……< Q
;
……Q R
LoadSettings
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ 
InitGUI
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
EditorApplication
ÕÕ 
.
ÕÕ 
	delayCall
ÕÕ '
+=
ÕÕ( *
(
ÕÕ+ ,
)
ÕÕ, -
=>
ÕÕ. 0
UpdateSelection
ÕÕ1 @
(
ÕÕ@ A
)
ÕÕA B
;
ÕÕB C"
SetOverrideWireframe
ŒŒ  
(
ŒŒ  !
true
ŒŒ! %
)
ŒŒ% &
;
ŒŒ& '
if
–– 
(
–– 
selectModeChanged
–– !
!=
––" $
null
––% )
)
––) *
selectModeChanged
—— !
(
——! "

selectMode
——" ,
)
——, -
;
——- .
}
““ 	
void
‘‘ 
	OnDisable
‘‘ 
(
‘‘ 
)
‘‘ 
{
’’ 	

s_Instance
÷÷ 
=
÷÷ 
null
÷÷ 
;
÷÷ $
VertexManipulationTool
ÿÿ "
.
ÿÿ" #$
beforeMeshModification
ÿÿ# 9
-=
ÿÿ: <$
BeforeMeshModification
ÿÿ= S
;
ÿÿS T$
VertexManipulationTool
ŸŸ "
.
ŸŸ" ##
afterMeshModification
ŸŸ# 8
-=
ŸŸ9 ;#
AfterMeshModification
ŸŸ< Q
;
ŸŸQ R
if
€€ 
(
€€ 
s_EditorToolbar
€€ 
!=
€€  "
null
€€# '
)
€€' (
DestroyImmediate
‹‹  
(
‹‹  !
s_EditorToolbar
‹‹! 0
)
‹‹0 1
;
‹‹1 2#
ClearElementSelection
ﬁﬁ !
(
ﬁﬁ! "
)
ﬁﬁ" #
;
ﬁﬁ# $
UpdateSelection
‡‡ 
(
‡‡ 
)
‡‡ 
;
‡‡ 
if
‚‚ 
(
‚‚ 
selectionUpdated
‚‚  
!=
‚‚! #
null
‚‚$ (
)
‚‚( )
selectionUpdated
„„  
(
„„  !
null
„„! %
)
„„% &
;
„„& '
	SceneView
ÊÊ 
.
ÊÊ 
duringSceneGui
ÊÊ $
-=
ÊÊ% '

OnSceneGUI
ÊÊ( 2
;
ÊÊ2 3
ProGridsInterface
ÍÍ 
.
ÍÍ (
UnsubscribePushToGridEvent
ÍÍ 8
(
ÍÍ8 9

PushToGrid
ÍÍ9 C
)
ÍÍC D
;
ÍÍD E
ProGridsInterface
ÎÎ 
.
ÎÎ %
UnsubscribeToolbarEvent
ÎÎ 5
(
ÎÎ5 6!
ProGridsToolbarOpen
ÎÎ6 I
)
ÎÎI J
;
ÎÎJ K
MeshSelection
ÏÏ 
.
ÏÏ $
objectSelectionChanged
ÏÏ 0
-=
ÏÏ1 3&
OnObjectSelectionChanged
ÏÏ4 L
;
ÏÏL M"
SetOverrideWireframe
ÓÓ  
(
ÓÓ  !
false
ÓÓ! &
)
ÓÓ& '
;
ÓÓ' (
if
 
(
 
selectModeChanged
 !
!=
" $
null
% )
)
) *
selectModeChanged
ÒÒ !
(
ÒÒ! "

SelectMode
ÒÒ" ,
.
ÒÒ, -
Object
ÒÒ- 3
)
ÒÒ3 4
;
ÒÒ4 5
	SceneView
ÛÛ 
.
ÛÛ 

RepaintAll
ÛÛ  
(
ÛÛ  !
)
ÛÛ! "
;
ÛÛ" #
}
ÙÙ 	
void
ˆˆ $
BeforeMeshModification
ˆˆ #
(
ˆˆ# $
IEnumerable
ˆˆ$ /
<
ˆˆ/ 0
ProBuilderMesh
ˆˆ0 >
>
ˆˆ> ?
meshes
ˆˆ@ F
)
ˆˆF G
{
˜˜ 	
if
¯¯ 
(
¯¯ $
beforeMeshModification
¯¯ %
!=
¯¯& (
null
¯¯) -
)
¯¯- .$
beforeMeshModification
˘˘ &
(
˘˘& '
meshes
˘˘' -
)
˘˘- .
;
˘˘. /
}
˙˙ 	
void
¸¸ #
AfterMeshModification
¸¸ "
(
¸¸" #
IEnumerable
¸¸# .
<
¸¸. /
ProBuilderMesh
¸¸/ =
>
¸¸= >
meshes
¸¸? E
)
¸¸E F
{
˝˝ 	
if
˛˛ 
(
˛˛ #
afterMeshModification
˛˛ $
!=
˛˛% '
null
˛˛( ,
)
˛˛, -#
afterMeshModification
ˇˇ %
(
ˇˇ% &
meshes
ˇˇ& ,
)
ˇˇ, -
;
ˇˇ- .
}
ÄÄ 	
internal
ÇÇ 
static
ÇÇ 
void
ÇÇ 
ReloadSettings
ÇÇ +
(
ÇÇ+ ,
)
ÇÇ, -
{
ÉÉ 	
if
ÑÑ 
(
ÑÑ 

s_Instance
ÑÑ 
!=
ÑÑ 
null
ÑÑ "
)
ÑÑ" #

s_Instance
ÖÖ 
.
ÖÖ 
LoadSettings
ÖÖ '
(
ÖÖ' (
)
ÖÖ( )
;
ÖÖ) *
	SceneView
ÜÜ 
.
ÜÜ 

RepaintAll
ÜÜ  
(
ÜÜ  !
)
ÜÜ! "
;
ÜÜ" #
}
áá 	
void
ââ 
LoadSettings
ââ 
(
ââ 
)
ââ 
{
ää 	
EditorApplication
ãã 
.
ãã 
	delayCall
ãã '
+=
ãã( *!
EditorHandleDrawing
ãã+ >
.
ãã> ?
ResetPreferences
ãã? O
;
ããO P&
m_ScenePickerPreferences
çç $
=
çç% &
new
çç' *$
ScenePickerPreferences
çç+ A
(
ççA B
)
ççB C
{
éé 
cullMode
èè 
=
èè %
m_BackfaceSelectEnabled
èè 2
?
èè3 4
CullingMode
èè5 @
.
èè@ A
None
èèA E
:
èèF G
CullingMode
èèH S
.
èèS T
Back
èèT X
,
èèX Y'
selectionModifierBehavior
êê )
=
êê* +&
m_SelectModifierBehavior
êê, D
,
êêD E
rectSelectMode
ëë 
=
ëë  "
m_DragSelectRectMode
ëë! 5
}
íí 
;
íí 
}
ôô 	
void
õõ 
InitGUI
õõ 
(
õõ 
)
õõ 
{
úú 	
OpenEditorToolbar
ùù 
(
ùù 
)
ùù 
;
ùù  (
VertexTranslationInfoStyle
ûû &
=
ûû' (
new
ûû) ,
GUIStyle
ûû- 5
(
ûû5 6
)
ûû6 7
;
ûû7 8(
VertexTranslationInfoStyle
üü &
.
üü& '
normal
üü' -
.
üü- .

background
üü. 8
=
üü9 :
EditorGUIUtility
üü; K
.
üüK L
whiteTexture
üüL X
;
üüX Y(
VertexTranslationInfoStyle
†† &
.
††& '
normal
††' -
.
††- .
	textColor
††. 7
=
††8 9
new
††: =
Color
††> C
(
††C D
$num
††D F
,
††F G
$num
††H J
,
††J K
$num
††L N
,
††N O
$num
††P S
)
††S T
;
††T U(
VertexTranslationInfoStyle
°° &
.
°°& '
padding
°°' .
=
°°/ 0
new
°°1 4

RectOffset
°°5 ?
(
°°? @
$num
°°@ A
,
°°A B
$num
°°C D
,
°°D E
$num
°°F G
,
°°G H
$num
°°I J
)
°°J K
;
°°K L
}
¢¢ 	
public
ßß 
static
ßß 
void
ßß 
Refresh
ßß "
(
ßß" #
bool
ßß# ' 
vertexCountChanged
ßß( :
=
ßß; <
true
ßß= A
)
ßßA B
{
®® 	
if
©© 
(
©© 
instance
©© 
!=
©© 
null
©©  
)
©©  !
{
™™ 
instance
´´ 
.
´´ 
UpdateSelection
´´ (
(
´´( ) 
vertexCountChanged
´´) ;
)
´´; <
;
´´< =
	SceneView
¨¨ 
.
¨¨ 

RepaintAll
¨¨ $
(
¨¨$ %
)
¨¨% &
;
¨¨& '
}
≠≠ 
}
ÆÆ 	
void
∞∞ 
OnGUI
∞∞ 
(
∞∞ 
)
∞∞ 
{
±± 	
if
≤≤ 
(
≤≤ 
s_EditorToolbar
≤≤ 
!=
≤≤  "
null
≤≤# '
&&
≤≤( *
s_EditorToolbar
≤≤+ :
.
≤≤: ;

isIconMode
≤≤; E
!=
≤≤F H
s_IsIconGui
≤≤I T
.
≤≤T U
value
≤≤U Z
)
≤≤Z [
IconModeChanged
≥≥ 
(
≥≥  
)
≥≥  !
;
≥≥! "
if
µµ 
(
µµ 
m_CommandStyle
µµ 
==
µµ !
null
µµ" &
)
µµ& '
m_CommandStyle
∂∂ 
=
∂∂  
EditorGUIUtility
∂∂! 1
.
∂∂1 2
GetBuiltinSkin
∂∂2 @
(
∂∂@ A

EditorSkin
∂∂A K
.
∂∂K L
	Inspector
∂∂L U
)
∂∂U V
.
∂∂V W
	FindStyle
∂∂W `
(
∂∂` a
$str
∂∂a j
)
∂∂j k
;
∂∂k l
Event
∏∏ 
e
∏∏ 
=
∏∏ 
Event
∏∏ 
.
∏∏ 
current
∏∏ #
;
∏∏# $
switch
∫∫ 
(
∫∫ 
e
∫∫ 
.
∫∫ 
type
∫∫ 
)
∫∫ 
{
ªª 
case
ºº 
	EventType
ºº 
.
ºº 
ContextClick
ºº +
:
ºº+ ,
var
ΩΩ 
menu
ΩΩ 
=
ΩΩ 
new
ΩΩ "
GenericMenu
ΩΩ# .
(
ΩΩ. /
)
ΩΩ/ 0
;
ΩΩ0 1
AddItemsToMenu
ææ "
(
ææ" #
menu
ææ# '
)
ææ' (
;
ææ( )
menu
øø 
.
øø 
ShowAsContext
øø &
(
øø& '
)
øø' (
;
øø( )
break
¿¿ 
;
¿¿ 
case
ÃÃ 
	EventType
ÃÃ 
.
ÃÃ 
KeyUp
ÃÃ $
:
ÃÃ$ %
if
ÕÕ 
(
ÕÕ 
e
ÕÕ 
.
ÕÕ 
keyCode
ÕÕ !
==
ÕÕ" $
KeyCode
ÕÕ% ,
.
ÕÕ, -
Escape
ÕÕ- 3
)
ÕÕ3 4
{
ŒŒ 

selectMode
œœ "
=
œœ# $

SelectMode
œœ% /
.
œœ/ 0
Object
œœ0 6
;
œœ6 7
e
–– 
.
–– 
Use
–– 
(
–– 
)
–– 
;
––  
}
—— 
break
““ 
;
““ 
}
‘‘ 
if
÷÷ 
(
÷÷ 
s_EditorToolbar
÷÷ 
!=
÷÷  "
null
÷÷# '
)
÷÷' (
{
◊◊ 
s_EditorToolbar
ÿÿ 
.
ÿÿ  
OnGUI
ÿÿ  %
(
ÿÿ% &
)
ÿÿ& '
;
ÿÿ' (
}
ŸŸ 
else
⁄⁄ 
{
€€ 
try
‹‹ 
{
›› 
InitGUI
ﬁﬁ 
(
ﬁﬁ 
)
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 
catch
‡‡ 
(
‡‡ 
System
‡‡ 
.
‡‡ 
	Exception
‡‡ '
	exception
‡‡( 1
)
‡‡1 2
{
·· 
Debug
‚‚ 
.
‚‚ 

LogWarning
‚‚ $
(
‚‚$ %
string
‚‚% +
.
‚‚+ ,
Format
‚‚, 2
(
‚‚2 3
$str
‚‚3 a
,
‚‚a b
	exception
‚‚c l
.
‚‚l m
ToString
‚‚m u
(
‚‚u v
)
‚‚v w
)
‚‚w x
)
‚‚x y
;
‚‚y z
}
„„ 
}
‰‰ 
}
ÂÂ 	
void
ÁÁ 
OpenEditorToolbar
ÁÁ 
(
ÁÁ 
)
ÁÁ  
{
ËË 	
if
ÈÈ 
(
ÈÈ 
s_EditorToolbar
ÈÈ 
!=
ÈÈ  "
null
ÈÈ# '
)
ÈÈ' (
DestroyImmediate
ÍÍ  
(
ÍÍ  !
s_EditorToolbar
ÍÍ! 0
)
ÍÍ0 1
;
ÍÍ1 2
s_EditorToolbar
ÏÏ 
=
ÏÏ 
ScriptableObject
ÏÏ .
.
ÏÏ. /
CreateInstance
ÏÏ/ =
<
ÏÏ= >
EditorToolbar
ÏÏ> K
>
ÏÏK L
(
ÏÏL M
)
ÏÏM N
;
ÏÏN O
s_EditorToolbar
ÌÌ 
.
ÌÌ 
	hideFlags
ÌÌ %
=
ÌÌ& '
	HideFlags
ÌÌ( 1
.
ÌÌ1 2
HideAndDontSave
ÌÌ2 A
;
ÌÌA B
s_EditorToolbar
ÓÓ 
.
ÓÓ "
InitWindowProperties
ÓÓ 0
(
ÓÓ0 1
this
ÓÓ1 5
)
ÓÓ5 6
;
ÓÓ6 7
}
ÔÔ 	
void
ÒÒ 
IconModeChanged
ÒÒ 
(
ÒÒ 
)
ÒÒ 
{
ÚÚ 	
OpenEditorToolbar
ÛÛ 
(
ÛÛ 
)
ÛÛ 
;
ÛÛ  
}
ÙÙ 	
void
ˆˆ !
Menu_ToggleIconMode
ˆˆ  
(
ˆˆ  !
)
ˆˆ! "
{
˜˜ 	
s_IsIconGui
¯¯ 
.
¯¯ 
value
¯¯ 
=
¯¯ 
!
¯¯  !
s_IsIconGui
¯¯! ,
.
¯¯, -
value
¯¯- 2
;
¯¯2 3
IconModeChanged
˘˘ 
(
˘˘ 
)
˘˘ 
;
˘˘ 
}
˙˙ 	
public
¸¸ 
void
¸¸ 
AddItemsToMenu
¸¸ "
(
¸¸" #
GenericMenu
¸¸# .
menu
¸¸/ 3
)
¸¸3 4
{
˝˝ 	
bool
˛˛ 
floating
˛˛ 
=
˛˛  
s_WindowIsFloating
˛˛ .
;
˛˛. /
menu
ÄÄ 
.
ÄÄ 
AddItem
ÄÄ 
(
ÄÄ 
new
ÄÄ 

GUIContent
ÄÄ '
(
ÄÄ' (
$str
ÄÄ( H
,
ÄÄH I
$str
ÄÄJ L
)
ÄÄL M
,
ÄÄM N
floating
ÄÄO W
,
ÄÄW X
(
ÄÄY Z
)
ÄÄZ [
=>
ÄÄ\ ^ 
SetIsUtilityWindow
ÄÄ_ q
(
ÄÄq r
true
ÄÄr v
)
ÄÄv w
)
ÄÄw x
;
ÄÄx y
menu
ÅÅ 
.
ÅÅ 
AddItem
ÅÅ 
(
ÅÅ 
new
ÅÅ 

GUIContent
ÅÅ '
(
ÅÅ' (
$str
ÅÅ( H
,
ÅÅH I
$str
ÅÅJ L
)
ÅÅL M
,
ÅÅM N
!
ÅÅO P
floating
ÅÅP X
,
ÅÅX Y
(
ÅÅZ [
)
ÅÅ[ \
=>
ÅÅ] _ 
SetIsUtilityWindow
ÅÅ` r
(
ÅÅr s
false
ÅÅs x
)
ÅÅx y
)
ÅÅy z
;
ÅÅz {
menu
ÇÇ 
.
ÇÇ 
AddSeparator
ÇÇ 
(
ÇÇ 
$str
ÇÇ  
)
ÇÇ  !
;
ÇÇ! "
menu
ÑÑ 
.
ÑÑ 
AddItem
ÑÑ 
(
ÑÑ 
new
ÑÑ 

GUIContent
ÑÑ '
(
ÑÑ' (
$str
ÑÑ( 7
,
ÑÑ7 8
$str
ÑÑ9 ;
)
ÑÑ; <
,
ÑÑ< =
s_IsIconGui
ÑÑ> I
,
ÑÑI J!
Menu_ToggleIconMode
ÖÖ #
)
ÖÖ# $
;
ÖÖ$ %
menu
ÜÜ 
.
ÜÜ 
AddItem
ÜÜ 
(
ÜÜ 
new
ÜÜ 

GUIContent
ÜÜ '
(
ÜÜ' (
$str
ÜÜ( 7
,
ÜÜ7 8
$str
ÜÜ9 ;
)
ÜÜ; <
,
ÜÜ< =
!
ÜÜ> ?
s_IsIconGui
ÜÜ? J
,
ÜÜJ K!
Menu_ToggleIconMode
áá #
)
áá# $
;
áá$ %
}
àà 	
void
ää  
SetIsUtilityWindow
ää 
(
ää  
bool
ää  $
isUtilityWindow
ää% 4
)
ää4 5
{
ãã 	 
s_WindowIsFloating
åå 
.
åå 
value
åå $
=
åå% &
isUtilityWindow
åå' 6
;
åå6 7
var
çç 
windowTitle
çç 
=
çç 
titleContent
çç *
;
çç* +
Close
éé 
(
éé 
)
éé 
;
éé 
var
èè 
res
èè 
=
èè 
	GetWindow
èè 
(
èè  
GetType
èè  '
(
èè' (
)
èè( )
,
èè) *
isUtilityWindow
èè+ :
)
èè: ;
;
èè; <
res
êê 
.
êê 
titleContent
êê 
=
êê 
windowTitle
êê *
;
êê* +
}
ëë 	
internal
ìì 
static
ìì $
VertexManipulationTool
ìì .

activeTool
ìì/ 9
{
îî 	
get
ïï 
{
ññ 
return
óó 

s_Instance
óó !
==
óó" $
null
óó% )
?
òò 
null
òò 
:
ôô 

s_Instance
ôô  
.
ôô  !"
GetToolForSelectMode
ôô! 5
(
ôô5 6

s_Instance
ôô6 @
.
ôô@ A
m_CurrentTool
ôôA N
,
ôôN O
s_SelectMode
ôôP \
)
ôô\ ]
;
ôô] ^
}
öö 
}
õõ 	$
VertexManipulationTool
ùù 
GetTool
ùù &
<
ùù& '
T
ùù' (
>
ùù( )
(
ùù) *
)
ùù* +
where
ùù, 1
T
ùù2 3
:
ùù4 5$
VertexManipulationTool
ùù6 L
,
ùùL M
new
ùùN Q
(
ùùQ R
)
ùùR S
{
ûû 	$
VertexManipulationTool
üü "
tool
üü# '
;
üü' (
if
°° 
(
°° 
s_EditorTools
°° 
.
°° 
TryGetValue
°° )
(
°°) *
typeof
°°* 0
(
°°0 1
T
°°1 2
)
°°2 3
,
°°3 4
out
°°5 8
tool
°°9 =
)
°°= >
)
°°> ?
return
¢¢ 
tool
¢¢ 
;
¢¢ 
tool
££ 
=
££ 
new
££ 
T
££ 
(
££ 
)
££ 
;
££ 
s_EditorTools
§§ 
.
§§ 
Add
§§ 
(
§§ 
typeof
§§ $
(
§§$ %
T
§§% &
)
§§& '
,
§§' (
tool
§§) -
)
§§- .
;
§§. /
return
•• 
tool
•• 
;
•• 
}
¶¶ 	$
VertexManipulationTool
®® "
GetToolForSelectMode
®® 3
(
®®3 4
Tool
®®4 8
tool
®®9 =
,
®®= >

SelectMode
®®? I
mode
®®J N
)
®®N O
{
©© 	
switch
™™ 
(
™™ 
tool
™™ 
)
™™ 
{
´´ 
case
¨¨ 
Tool
¨¨ 
.
¨¨ 
Move
¨¨ 
:
¨¨ 
return
≠≠ 
mode
≠≠ 
.
≠≠  
IsTextureMode
≠≠  -
(
≠≠- .
)
≠≠. /
?
ÆÆ 
GetTool
ÆÆ !
<
ÆÆ! "
TextureMoveTool
ÆÆ" 1
>
ÆÆ1 2
(
ÆÆ2 3
)
ÆÆ3 4
:
ØØ 
GetTool
ØØ !
<
ØØ! "
PositionMoveTool
ØØ" 2
>
ØØ2 3
(
ØØ3 4
)
ØØ4 5
;
ØØ5 6
case
∞∞ 
Tool
∞∞ 
.
∞∞ 
Rotate
∞∞  
:
∞∞  !
return
±± 
mode
±± 
.
±±  
IsTextureMode
±±  -
(
±±- .
)
±±. /
?
≤≤ 
GetTool
≤≤ !
<
≤≤! "
TextureRotateTool
≤≤" 3
>
≤≤3 4
(
≤≤4 5
)
≤≤5 6
:
≥≥ 
GetTool
≥≥ !
<
≥≥! " 
PositionRotateTool
≥≥" 4
>
≥≥4 5
(
≥≥5 6
)
≥≥6 7
;
≥≥7 8
case
¥¥ 
Tool
¥¥ 
.
¥¥ 
Scale
¥¥ 
:
¥¥  
return
µµ 
mode
µµ 
.
µµ  
IsTextureMode
µµ  -
(
µµ- .
)
µµ. /
?
∂∂ 
GetTool
∂∂ !
<
∂∂! "
TextureScaleTool
∂∂" 2
>
∂∂2 3
(
∂∂3 4
)
∂∂4 5
:
∑∑ 
GetTool
∑∑ !
<
∑∑! "
PositionScaleTool
∑∑" 3
>
∑∑3 4
(
∑∑4 5
)
∑∑5 6
;
∑∑6 7
default
∏∏ 
:
∏∏ 
return
ππ 
null
ππ 
;
ππ  
}
∫∫ 
}
ªª 	
void
ΩΩ 

OnSceneGUI
ΩΩ 
(
ΩΩ 
	SceneView
ΩΩ !
	sceneView
ΩΩ" +
)
ΩΩ+ ,
{
ææ 	
SceneStyles
ƒƒ 
.
ƒƒ 
Init
ƒƒ 
(
ƒƒ 
)
ƒƒ 
;
ƒƒ 
m_CurrentEvent
∆∆ 
=
∆∆ 
Event
∆∆ "
.
∆∆" #
current
∆∆# *
;
∆∆* +!
EditorHandleDrawing
»» 
.
»»  
DrawSceneHandles
»»  0
(
»»0 1&
SceneDragAndDropListener
»»1 I
.
»»I J

isDragging
»»J T
?
»»U V

SelectMode
»»W a
.
»»a b
None
»»b f
:
»»g h

selectMode
»»i s
)
»»s t
;
»»t u
DrawHandleGUI
   
(
   
	sceneView
   #
)
  # $
;
  $ %
if
ÕÕ 
(
ÕÕ 
m_CurrentEvent
ÕÕ 
.
ÕÕ 
type
ÕÕ #
==
ÕÕ$ &
	EventType
ÕÕ' 0
.
ÕÕ0 1
KeyDown
ÕÕ1 8
)
ÕÕ8 9
{
ŒŒ 
if
–– 
(
–– 
m_CurrentEvent
–– "
.
––" #
keyCode
––# *
==
––+ -
KeyCode
––. 5
.
––5 6
Escape
––6 <
&&
––= ?

selectMode
––@ J
!=
––K M

SelectMode
––N X
.
––X Y
Object
––Y _
)
––_ `
{
—— 

selectMode
““ 
=
““  

SelectMode
““! +
.
““+ ,
Object
““, 2
;
““2 3
m_IsDragging
‘‘  
=
‘‘! "
false
‘‘# (
;
‘‘( )#
m_IsReadyForMouseDrag
’’ )
=
’’* +
false
’’, 1
;
’’1 2
m_CurrentEvent
◊◊ "
.
◊◊" #
Use
◊◊# &
(
◊◊& '
)
◊◊' (
;
◊◊( )
}
ÿÿ 
}
ŸŸ 
if
ÒÒ 
(
ÒÒ 

selectMode
ÒÒ 
==
ÒÒ 

SelectMode
ÒÒ (
.
ÒÒ( )
Object
ÒÒ) /
)
ÒÒ/ 0
return
ÚÚ 
;
ÚÚ 
bool
ÙÙ #
pathSelectionModifier
ÙÙ &
=
ÙÙ' (!
EditorHandleUtility
ÙÙ) <
.
ÙÙ< =%
IsSelectionPathModifier
ÙÙ= T
(
ÙÙT U
m_CurrentEvent
ÙÙU c
.
ÙÙc d
	modifiers
ÙÙd m
)
ÙÙm n
;
ÙÙn o
if
˜˜ 
(
˜˜ "
s_ShowHoverHighlight
˜˜ $
&&
¯¯ 

selectMode
¯¯ 
.
¯¯ 
IsMeshElementMode
¯¯ /
(
¯¯/ 0
)
¯¯0 1
&&
˘˘ 
(
˘˘ 
m_CurrentEvent
˘˘ "
.
˘˘" #
type
˘˘# '
==
˘˘( *
	EventType
˘˘+ 4
.
˘˘4 5
	MouseMove
˘˘5 >
||
˙˙ 
(
˙˙  
m_wasSelectingPath
˙˙ &
!=
˙˙' )#
pathSelectionModifier
˙˙* ?
&&
˙˙@ B
m_CurrentEvent
˙˙C Q
.
˙˙Q R
isKey
˙˙R W
)
˙˙W X
)
˙˙X Y
)
˙˙Y Z
{
˚˚ 

m_Hovering
¸¸ 
.
¸¸ 
CopyTo
¸¸ !
(
¸¸! " 
m_HoveringPrevious
¸¸" 4
)
¸¸4 5
;
¸¸5 6
if
˝˝ 
(
˝˝ 

GUIUtility
˝˝ 
.
˝˝ 

hotControl
˝˝ )
!=
˝˝* ,
$num
˝˝- .
||
˝˝/ 1#
EditorSceneViewPicker
˛˛ )
.
˛˛) *
MouseRayHitTest
˛˛* 9
(
˛˛9 :
m_CurrentEvent
˛˛: H
.
˛˛H I
mousePosition
˛˛I V
,
˛˛V W

selectMode
˛˛X b
,
˛˛b c&
m_ScenePickerPreferences
˛˛d |
,
˛˛| }

m_Hovering˛˛~ à
)˛˛à â
>˛˛ä ã&
ScenePickerPreferences˛˛å ¢
.˛˛¢ £"
maxPointerDistance˛˛£ µ
)˛˛µ ∂

m_Hovering
ˇˇ 
.
ˇˇ 
Clear
ˇˇ $
(
ˇˇ$ %
)
ˇˇ% &
;
ˇˇ& '
if
ÅÅ 
(
ÅÅ 
!
ÅÅ 

m_Hovering
ÅÅ 
.
ÅÅ  
Equals
ÅÅ  &
(
ÅÅ& ' 
m_HoveringPrevious
ÅÅ' 9
)
ÅÅ9 :
)
ÅÅ: ;
{
ÇÇ 
if
ÉÉ 
(
ÉÉ #
pathSelectionModifier
ÉÉ -
)
ÉÉ- .#
EditorSceneViewPicker
ÑÑ -
.
ÑÑ- .
DoMouseHover
ÑÑ. :
(
ÑÑ: ;

m_Hovering
ÑÑ; E
)
ÑÑE F
;
ÑÑF G
	SceneView
ÜÜ 
.
ÜÜ 

RepaintAll
ÜÜ (
(
ÜÜ( )
)
ÜÜ) *
;
ÜÜ* +
}
áá 
}
àà  
m_wasSelectingPath
ââ 
=
ââ  #
pathSelectionModifier
ââ! 6
;
ââ6 7
if
åå 
(
åå 
Tools
åå 
.
åå 
current
åå 
==
åå  
Tool
åå! %
.
åå% &
View
åå& *
)
åå* +
return
çç 
;
çç 
switch
èè 
(
èè 
m_CurrentEvent
èè "
.
èè" #
type
èè# '
)
èè' (
{
êê 
case
ëë 
	EventType
ëë 
.
ëë 
ValidateCommand
ëë .
:
ëë. /
case
íí 
	EventType
íí 
.
íí 
ExecuteCommand
íí -
:
íí- .
bool
ìì 
execute
ìì  
=
ìì! "
m_CurrentEvent
ìì# 1
.
ìì1 2
type
ìì2 6
==
ìì7 9
	EventType
ìì: C
.
ììC D
ExecuteCommand
ììD R
;
ììR S
switch
îî 
(
îî 
m_CurrentEvent
îî *
.
îî* +
commandName
îî+ 6
)
îî6 7
{
ïï 
case
ññ 
$str
ññ (
:
ññ( )
if
óó 
(
óó  
execute
óó  '
)
óó' (
{
òò 
	SelectAll
ôô  )
(
ôô) *
)
ôô* +
;
ôô+ ,
}
öö 
m_CurrentEvent
õõ *
.
õõ* +
Use
õõ+ .
(
õõ. /
)
õõ/ 0
;
õõ0 1
break
úú !
;
úú! "
case
ùù 
$str
ùù *
:
ùù* +
if
ûû 
(
ûû  
execute
ûû  '
)
ûû' (
{
üü 
DeselectAll
††  +
(
††+ ,
)
††, -
;
††- .
}
°° 
m_CurrentEvent
¢¢ *
.
¢¢* +
Use
¢¢+ .
(
¢¢. /
)
¢¢/ 0
;
¢¢0 1
break
££ !
;
££! "
case
§§ 
$str
§§ .
:
§§. /
if
•• 
(
••  
execute
••  '
)
••' (
{
¶¶ 
InvertSelection
ßß  /
(
ßß/ 0
)
ßß0 1
;
ßß1 2
}
®® 
m_CurrentEvent
©© *
.
©©* +
Use
©©+ .
(
©©. /
)
©©/ 0
;
©©0 1
break
™™ !
;
™™! "
}
´´ 
break
¨¨ 
;
¨¨ 
}
≠≠ 
if
∞∞ 
(
∞∞ 
Tools
∞∞ 
.
∞∞ 
current
∞∞ 
!=
∞∞  
Tool
∞∞! %
.
∞∞% &
None
∞∞& *
&&
∞∞+ -
Tools
∞∞. 3
.
∞∞3 4
current
∞∞4 ;
!=
∞∞< >
m_CurrentTool
∞∞? L
)
∞∞L M
SetTool_Internal
±±  
(
±±  !
Tools
±±! &
.
±±& '
current
±±' .
)
±±. /
;
±±/ 0
Tools
≥≥ 
.
≥≥ 
current
≥≥ 
=
≥≥ 
Tool
≥≥  
.
≥≥  !
None
≥≥! %
;
≥≥% &
if
µµ 
(
µµ 

selectMode
µµ 
.
µµ 
IsMeshElementMode
µµ ,
(
µµ, -
)
µµ- .
&&
µµ/ 1
MeshSelection
µµ2 ?
.
µµ? @!
selectedVertexCount
µµ@ S
>
µµT U
$num
µµV W
)
µµW X
{
∂∂ 
var
∑∑ 
tool
∑∑ 
=
∑∑ "
GetToolForSelectMode
∑∑ /
(
∑∑/ 0
m_CurrentTool
∑∑0 =
,
∑∑= >
s_SelectMode
∑∑? K
)
∑∑K L
;
∑∑L M
if
ππ 
(
ππ 
tool
ππ 
!=
ππ 
null
ππ  
)
ππ  !
tool
∫∫ 
.
∫∫ 

OnSceneGUI
∫∫ #
(
∫∫# $
m_CurrentEvent
∫∫$ 2
)
∫∫2 3
;
∫∫3 4
}
ªª 
if
ΩΩ 
(
ΩΩ !
EditorHandleUtility
ΩΩ $
.
ΩΩ$ %
SceneViewInUse
ΩΩ% 3
(
ΩΩ3 4
m_CurrentEvent
ΩΩ4 B
)
ΩΩB C
)
ΩΩC D
{
ææ 
if
øø 
(
øø 
m_IsDragging
øø  
)
øø  !
m_IsDragging
¿¿  
=
¿¿! "
false
¿¿# (
;
¿¿( )
if
¬¬ 
(
¬¬ 

GUIUtility
¬¬ 
.
¬¬  

hotControl
¬¬  *
==
¬¬+ -
m_DefaultControl
¬¬. >
)
¬¬> ?

GUIUtility
√√ 
.
√√  

hotControl
√√  *
=
√√+ ,
$num
√√- .
;
√√. /
return
≈≈ 
;
≈≈ 
}
∆∆ 
m_DefaultControl
   
=
   

GUIUtility
   )
.
  ) *
GetControlID
  * 6
(
  6 7
	FocusType
  7 @
.
  @ A
Passive
  A H
)
  H I
;
  I J
if
ÀÀ 
(
ÀÀ 
Event
ÀÀ 
.
ÀÀ 
current
ÀÀ 
.
ÀÀ 
type
ÀÀ "
==
ÀÀ# %
	EventType
ÀÀ& /
.
ÀÀ/ 0
Layout
ÀÀ0 6
)
ÀÀ6 7
HandleUtility
ÃÃ 
.
ÃÃ 
AddDefaultControl
ÃÃ /
(
ÃÃ/ 0
m_DefaultControl
ÃÃ0 @
)
ÃÃ@ A
;
ÃÃA B
if
ŒŒ 
(
ŒŒ 
m_CurrentEvent
ŒŒ 
.
ŒŒ 
type
ŒŒ #
==
ŒŒ$ &
	EventType
ŒŒ' 0
.
ŒŒ0 1
	MouseDown
ŒŒ1 :
&&
ŒŒ; =
HandleUtility
ŒŒ> K
.
ŒŒK L
nearestControl
ŒŒL Z
==
ŒŒ[ ]
m_DefaultControl
ŒŒ^ n
)
ŒŒn o
{
œœ 
if
—— 
(
—— 
m_CurrentEvent
—— "
.
——" #

clickCount
——# -
>
——. /
$num
——0 1
)
——1 2
{
““ 
DoubleClick
”” 
(
””  
m_CurrentEvent
””  .
)
””. /
;
””/ 0
}
‘‘ $
m_InitialMousePosition
÷÷ &
=
÷÷' (
m_CurrentEvent
÷÷) 7
.
÷÷7 8
mousePosition
÷÷8 E
;
÷÷E F#
m_IsReadyForMouseDrag
ŸŸ %
=
ŸŸ& '
true
ŸŸ( ,
;
ŸŸ, -

GUIUtility
€€ 
.
€€ 

hotControl
€€ %
=
€€& '
m_DefaultControl
€€( 8
;
€€8 9
}
‹‹ 
if
ﬁﬁ 
(
ﬁﬁ 
m_CurrentEvent
ﬁﬁ 
.
ﬁﬁ 
type
ﬁﬁ #
==
ﬁﬁ$ &
	EventType
ﬁﬁ' 0
.
ﬁﬁ0 1
	MouseDrag
ﬁﬁ1 :
&&
ﬁﬁ; =#
m_IsReadyForMouseDrag
ﬁﬁ> S
&&
ﬁﬁT V

GUIUtility
ﬁﬁW a
.
ﬁﬁa b

hotControl
ﬁﬁb l
==
ﬁﬁm o
m_DefaultControlﬁﬁp Ä
)ﬁﬁÄ Å
{
ﬂﬂ 
if
‡‡ 
(
‡‡ 
!
‡‡ 
m_IsDragging
‡‡ !
&&
‡‡" $
Vector2
‡‡% ,
.
‡‡, -
Distance
‡‡- 5
(
‡‡5 6
m_CurrentEvent
‡‡6 D
.
‡‡D E
mousePosition
‡‡E R
,
‡‡R S$
m_InitialMousePosition
‡‡T j
)
‡‡j k
>
‡‡l m#
k_MouseDragThreshold‡‡n Ç
)‡‡Ç É
{
·· 
	sceneView
‚‚ 
.
‚‚ 
Repaint
‚‚ %
(
‚‚% &
)
‚‚& '
;
‚‚' (
m_IsDragging
„„  
=
„„! "
true
„„# '
;
„„' (
}
‰‰ 
}
ÂÂ 
if
ÁÁ 
(
ÁÁ 
m_CurrentEvent
ÁÁ 
.
ÁÁ 
type
ÁÁ #
==
ÁÁ$ &
	EventType
ÁÁ' 0
.
ÁÁ0 1
Ignore
ÁÁ1 7
)
ÁÁ7 8
{
ËË 
if
ÈÈ 
(
ÈÈ 
m_IsDragging
ÈÈ  
)
ÈÈ  !
{
ÍÍ #
m_IsReadyForMouseDrag
ÎÎ )
=
ÎÎ* +
false
ÎÎ, 1
;
ÎÎ1 2
m_IsDragging
ÏÏ  
=
ÏÏ! "
false
ÏÏ# (
;
ÏÏ( )#
EditorSceneViewPicker
ÌÌ )
.
ÌÌ) *
DoMouseDrag
ÌÌ* 5
(
ÌÌ5 6
m_MouseDragRect
ÌÌ6 E
,
ÌÌE F

selectMode
ÌÌG Q
,
ÌÌQ R&
m_ScenePickerPreferences
ÌÌS k
)
ÌÌk l
;
ÌÌl m
}
ÓÓ 
if
 
(
 
m_WasDoubleClick
 $
)
$ %
m_WasDoubleClick
ÒÒ $
=
ÒÒ% &
false
ÒÒ' ,
;
ÒÒ, -
if
ÛÛ 
(
ÛÛ 

GUIUtility
ÛÛ 
.
ÛÛ 

hotControl
ÛÛ )
==
ÛÛ* ,
m_DefaultControl
ÛÛ- =
)
ÛÛ= >

GUIUtility
ÙÙ 
.
ÙÙ 

hotControl
ÙÙ )
=
ÙÙ* +
$num
ÙÙ, -
;
ÙÙ- .
}
ıı 
if
˜˜ 
(
˜˜ 
m_CurrentEvent
˜˜ 
.
˜˜ 
type
˜˜ #
==
˜˜$ &
	EventType
˜˜' 0
.
˜˜0 1
MouseUp
˜˜1 8
&&
˜˜9 ;

GUIUtility
˜˜< F
.
˜˜F G

hotControl
˜˜G Q
==
˜˜R T
m_DefaultControl
˜˜U e
)
˜˜e f
{
¯¯ 

GUIUtility
˘˘ 
.
˘˘ 

hotControl
˘˘ %
=
˘˘& '
$num
˘˘( )
;
˘˘) *
if
˚˚ 
(
˚˚ 
m_WasDoubleClick
˚˚ $
)
˚˚$ %
{
¸¸ 
m_WasDoubleClick
˝˝ $
=
˝˝% &
false
˝˝' ,
;
˝˝, -
}
˛˛ 
else
ˇˇ 
{
ÄÄ 
if
ÅÅ 
(
ÅÅ 
!
ÅÅ 
m_IsDragging
ÅÅ %
)
ÅÅ% &
{
ÇÇ 
if
ÉÉ 
(
ÉÉ 
UVEditor
ÉÉ $
.
ÉÉ$ %
instance
ÉÉ% -
)
ÉÉ- .
UVEditor
ÑÑ $
.
ÑÑ$ %
instance
ÑÑ% -
.
ÑÑ- .
ResetUserPivot
ÑÑ. <
(
ÑÑ< =
)
ÑÑ= >
;
ÑÑ> ?#
EditorSceneViewPicker
ÜÜ -
.
ÜÜ- .
DoMouseClick
ÜÜ. :
(
ÜÜ: ;
m_CurrentEvent
ÜÜ; I
,
ÜÜI J

selectMode
ÜÜK U
,
ÜÜU V&
m_ScenePickerPreferences
ÜÜW o
)
ÜÜo p
;
ÜÜp q
UpdateSelection
áá '
(
áá' (
)
áá( )
;
áá) *
	SceneView
àà !
.
àà! "

RepaintAll
àà" ,
(
àà, -
)
àà- .
;
àà. /
}
ââ 
else
ää 
{
ãã 
m_IsDragging
åå $
=
åå% &
false
åå' ,
;
åå, -#
m_IsReadyForMouseDrag
çç -
=
çç. /
false
çç0 5
;
çç5 6
if
èè 
(
èè 
UVEditor
èè $
.
èè$ %
instance
èè% -
)
èè- .
UVEditor
êê $
.
êê$ %
instance
êê% -
.
êê- .
ResetUserPivot
êê. <
(
êê< =
)
êê= >
;
êê> ?#
EditorSceneViewPicker
íí -
.
íí- .
DoMouseDrag
íí. 9
(
íí9 :
m_MouseDragRect
íí: I
,
ííI J

selectMode
ííK U
,
ííU V&
m_ScenePickerPreferences
ííW o
)
íío p
;
ííp q
if
îî 
(
îî 

GUIUtility
îî &
.
îî& '

hotControl
îî' 1
==
îî2 4
m_DefaultControl
îî5 E
)
îîE F

GUIUtility
ïï &
.
ïï& '

hotControl
ïï' 1
=
ïï2 3
$num
ïï4 5
;
ïï5 6
}
ññ 
}
óó 
}
òò 
}
ôô 	
void
õõ 
	SelectAll
õõ 
(
õõ 
)
õõ 
{
úú 	
if
ùù 
(
ùù 
MeshSelection
ùù 
.
ùù !
selectedObjectCount
ùù 1
<
ùù2 3
$num
ùù4 5
)
ùù5 6
return
ûû 
;
ûû 
UndoUtility
†† 
.
†† 
RecordSelection
†† '
(
††' (
$str
††( 4
)
††4 5
;
††5 6
switch
¢¢ 
(
¢¢ 

selectMode
¢¢ 
)
¢¢ 
{
££ 
case
§§ 

SelectMode
§§ 
.
§§  
Vertex
§§  &
:
§§& '
foreach
•• 
(
•• 
var
••  
mesh
••! %
in
••& (
MeshSelection
••) 6
.
••6 7
topInternal
••7 B
)
••B C
{
¶¶ 
var
ßß 
sharedIndexes
ßß )
=
ßß* +
mesh
ßß, 0
.
ßß0 1$
sharedVerticesInternal
ßß1 G
;
ßßG H
var
®® 
all
®® 
=
®®  !
new
®®" %
List
®®& *
<
®®* +
int
®®+ .
>
®®. /
(
®®/ 0
)
®®0 1
;
®®1 2
for
™™ 
(
™™ 
var
™™  
i
™™! "
=
™™# $
$num
™™% &
;
™™& '
i
™™( )
<
™™* +
sharedIndexes
™™, 9
.
™™9 :
Length
™™: @
;
™™@ A
i
™™B C
++
™™C E
)
™™E F
{
´´ 
all
¨¨ 
.
¨¨  
Add
¨¨  #
(
¨¨# $
sharedIndexes
¨¨$ 1
[
¨¨1 2
i
¨¨2 3
]
¨¨3 4
[
¨¨4 5
$num
¨¨5 6
]
¨¨6 7
)
¨¨7 8
;
¨¨8 9
}
≠≠ 
mesh
ØØ 
.
ØØ !
SetSelectedVertices
ØØ 0
(
ØØ0 1
all
ØØ1 4
)
ØØ4 5
;
ØØ5 6
}
∞∞ 
break
±± 
;
±± 
case
≥≥ 

SelectMode
≥≥ 
.
≥≥  
Face
≥≥  $
:
≥≥$ %
case
¥¥ 

SelectMode
¥¥ 
.
¥¥  
TextureFace
¥¥  +
:
¥¥+ ,
foreach
µµ 
(
µµ 
var
µµ  
mesh
µµ! %
in
µµ& (
MeshSelection
µµ) 6
.
µµ6 7
topInternal
µµ7 B
)
µµB C
{
∂∂ 
mesh
∑∑ 
.
∑∑ 
SetSelectedFaces
∑∑ -
(
∑∑- .
mesh
∑∑. 2
.
∑∑2 3
facesInternal
∑∑3 @
)
∑∑@ A
;
∑∑A B
}
∏∏ 
break
ππ 
;
ππ 
case
ªª 

SelectMode
ªª 
.
ªª  
Edge
ªª  $
:
ªª$ %
foreach
ΩΩ 
(
ΩΩ 
var
ΩΩ  
mesh
ΩΩ! %
in
ΩΩ& (
MeshSelection
ΩΩ) 6
.
ΩΩ6 7
topInternal
ΩΩ7 B
)
ΩΩB C
{
ææ 
var
øø 
universalEdges
øø *
=
øø+ ,
mesh
øø- 1
.
øø1 2(
GetSharedVertexHandleEdges
øø2 L
(
øøL M
mesh
øøM Q
.
øøQ R
facesInternal
øøR _
.
øø_ `

SelectMany
øø` j
(
øøj k
x
øøk l
=>
øøm o
x
øøp q
.
øøq r
edges
øør w
)
øøw x
)
øøx y
.
øøy z
ToArrayøøz Å
(øøÅ Ç
)øøÇ É
;øøÉ Ñ
var
¿¿ 
all
¿¿ 
=
¿¿  !
new
¿¿" %
Edge
¿¿& *
[
¿¿* +
universalEdges
¿¿+ 9
.
¿¿9 :
Length
¿¿: @
]
¿¿@ A
;
¿¿A B
for
¬¬ 
(
¬¬ 
var
¬¬  
n
¬¬! "
=
¬¬# $
$num
¬¬% &
;
¬¬& '
n
¬¬( )
<
¬¬* +
universalEdges
¬¬, :
.
¬¬: ;
Length
¬¬; A
;
¬¬A B
n
¬¬C D
++
¬¬D F
)
¬¬F G
all
√√ 
[
√√  
n
√√  !
]
√√! "
=
√√# $
new
√√% (
Edge
√√) -
(
√√- .
mesh
√√. 2
.
√√2 3$
sharedVerticesInternal
√√3 I
[
√√I J
universalEdges
√√J X
[
√√X Y
n
√√Y Z
]
√√Z [
.
√√[ \
a
√√\ ]
]
√√] ^
[
√√^ _
$num
√√_ `
]
√√` a
,
√√a b
mesh
√√c g
.
√√g h$
sharedVerticesInternal
√√h ~
[
√√~ 
universalEdges√√ ç
[√√ç é
n√√é è
]√√è ê
.√√ê ë
b√√ë í
]√√í ì
[√√ì î
$num√√î ï
]√√ï ñ
)√√ñ ó
;√√ó ò
mesh
≈≈ 
.
≈≈ 
SetSelectedEdges
≈≈ -
(
≈≈- .
all
≈≈. 1
)
≈≈1 2
;
≈≈2 3
}
∆∆ 
break
«« 
;
«« 
}
»» 
Refresh
   
(
   
)
   
;
   
	SceneView
ÀÀ 
.
ÀÀ 

RepaintAll
ÀÀ  
(
ÀÀ  !
)
ÀÀ! "
;
ÀÀ" #
}
ÃÃ 	
void
ŒŒ 
DeselectAll
ŒŒ 
(
ŒŒ 
)
ŒŒ 
{
œœ 	
if
–– 
(
–– 
MeshSelection
–– 
.
–– !
selectedObjectCount
–– 1
<
––2 3
$num
––4 5
)
––5 6
return
—— 
;
—— 
UndoUtility
”” 
.
”” 
RecordSelection
”” '
(
””' (
$str
””( 6
)
””6 7
;
””7 8
switch
’’ 
(
’’ 

selectMode
’’ 
)
’’ 
{
÷÷ 
case
◊◊ 

SelectMode
◊◊ 
.
◊◊  
Vertex
◊◊  &
:
◊◊& '
foreach
ÿÿ 
(
ÿÿ 
var
ÿÿ  
mesh
ÿÿ! %
in
ÿÿ& (
MeshSelection
ÿÿ) 6
.
ÿÿ6 7
topInternal
ÿÿ7 B
)
ÿÿB C
{
ŸŸ 
mesh
⁄⁄ 
.
⁄⁄ !
SetSelectedVertices
⁄⁄ 0
(
⁄⁄0 1
null
⁄⁄1 5
)
⁄⁄5 6
;
⁄⁄6 7
}
€€ 
break
‹‹ 
;
‹‹ 
case
ﬁﬁ 

SelectMode
ﬁﬁ 
.
ﬁﬁ  
Face
ﬁﬁ  $
:
ﬁﬁ$ %
case
ﬂﬂ 

SelectMode
ﬂﬂ 
.
ﬂﬂ  
TextureFace
ﬂﬂ  +
:
ﬂﬂ+ ,
foreach
‡‡ 
(
‡‡ 
var
‡‡  
mesh
‡‡! %
in
‡‡& (
MeshSelection
‡‡) 6
.
‡‡6 7
topInternal
‡‡7 B
)
‡‡B C
{
·· 
mesh
‚‚ 
.
‚‚ 
SetSelectedFaces
‚‚ -
(
‚‚- .
(
‚‚. /
IEnumerable
‚‚/ :
<
‚‚: ;
Face
‚‚; ?
>
‚‚? @
)
‚‚@ A
null
‚‚B F
)
‚‚F G
;
‚‚G H
}
„„ 
break
‰‰ 
;
‰‰ 
case
ÊÊ 

SelectMode
ÊÊ 
.
ÊÊ  
Edge
ÊÊ  $
:
ÊÊ$ %
foreach
ËË 
(
ËË 
var
ËË  
mesh
ËË! %
in
ËË& (
MeshSelection
ËË) 6
.
ËË6 7
topInternal
ËË7 B
)
ËËB C
{
ÈÈ 
mesh
ÍÍ 
.
ÍÍ 
SetSelectedEdges
ÍÍ -
(
ÍÍ- .
null
ÍÍ. 2
)
ÍÍ2 3
;
ÍÍ3 4
}
ÎÎ 
break
ÏÏ 
;
ÏÏ 
}
ÌÌ 
Refresh
ÔÔ 
(
ÔÔ 
)
ÔÔ 
;
ÔÔ 
	SceneView
 
.
 

RepaintAll
  
(
  !
)
! "
;
" #
}
ÒÒ 	
void
ÛÛ 
InvertSelection
ÛÛ 
(
ÛÛ 
)
ÛÛ 
{
ÙÙ 	
if
ıı 
(
ıı 
MeshSelection
ıı 
.
ıı !
selectedObjectCount
ıı 1
<
ıı2 3
$num
ıı4 5
)
ıı5 6
return
ˆˆ 
;
ˆˆ 
UndoUtility
¯¯ 
.
¯¯ 
RecordSelection
¯¯ '
(
¯¯' (
$str
¯¯( :
)
¯¯: ;
;
¯¯; <
switch
˙˙ 
(
˙˙ 

selectMode
˙˙ 
)
˙˙ 
{
˚˚ 
case
¸¸ 

SelectMode
¸¸ 
.
¸¸  
Vertex
¸¸  &
:
¸¸& '
foreach
˝˝ 
(
˝˝ 
var
˝˝  
mesh
˝˝! %
in
˝˝& (
MeshSelection
˝˝) 6
.
˝˝6 7
topInternal
˝˝7 B
)
˝˝B C
{
˛˛ 
var
ˇˇ 
sharedIndexes
ˇˇ )
=
ˇˇ* +
mesh
ˇˇ, 0
.
ˇˇ0 1$
sharedVerticesInternal
ˇˇ1 G
;
ˇˇG H
var
ÄÄ #
selectedSharedIndexes
ÄÄ 1
=
ÄÄ2 3
new
ÄÄ4 7
List
ÄÄ8 <
<
ÄÄ< =
int
ÄÄ= @
>
ÄÄ@ A
(
ÄÄA B
)
ÄÄB C
;
ÄÄC D
foreach
ÇÇ 
(
ÇÇ  !
int
ÇÇ! $
i
ÇÇ% &
in
ÇÇ' )
mesh
ÇÇ* .
.
ÇÇ. /%
selectedIndexesInternal
ÇÇ/ F
)
ÇÇF G#
selectedSharedIndexes
ÉÉ 1
.
ÉÉ1 2
Add
ÉÉ2 5
(
ÉÉ5 6
mesh
ÉÉ6 :
.
ÉÉ: ;#
GetSharedVertexHandle
ÉÉ; P
(
ÉÉP Q
i
ÉÉQ R
)
ÉÉR S
)
ÉÉS T
;
ÉÉT U
var
ÖÖ 
inverse
ÖÖ #
=
ÖÖ$ %
new
ÖÖ& )
List
ÖÖ* .
<
ÖÖ. /
int
ÖÖ/ 2
>
ÖÖ2 3
(
ÖÖ3 4
)
ÖÖ4 5
;
ÖÖ5 6
for
áá 
(
áá 
int
áá  
i
áá! "
=
áá# $
$num
áá% &
;
áá& '
i
áá( )
<
áá* +
sharedIndexes
áá, 9
.
áá9 :
Length
áá: @
;
áá@ A
i
ááB C
++
ááC E
)
ááE F
{
àà 
if
ââ 
(
ââ  
!
ââ  !#
selectedSharedIndexes
ââ! 6
.
ââ6 7
Contains
ââ7 ?
(
ââ? @
i
ââ@ A
)
ââA B
)
ââB C
inverse
ää  '
.
ää' (
Add
ää( +
(
ää+ ,
sharedIndexes
ää, 9
[
ää9 :
i
ää: ;
]
ää; <
[
ää< =
$num
ää= >
]
ää> ?
)
ää? @
;
ää@ A
}
ãã 
mesh
çç 
.
çç !
SetSelectedVertices
çç 0
(
çç0 1
inverse
çç1 8
.
çç8 9
ToArray
çç9 @
(
çç@ A
)
ççA B
)
ççB C
;
ççC D
}
éé 
break
êê 
;
êê 
case
íí 

SelectMode
íí 
.
íí  
Face
íí  $
:
íí$ %
case
ìì 

SelectMode
ìì 
.
ìì  
TextureFace
ìì  +
:
ìì+ ,
foreach
îî 
(
îî 
var
îî  
mesh
îî! %
in
îî& (
MeshSelection
îî) 6
.
îî6 7
topInternal
îî7 B
)
îîB C
{
ïï 
var
ññ 
inverse
ññ #
=
ññ$ %
mesh
ññ& *
.
ññ* +
facesInternal
ññ+ 8
.
ññ8 9
Where
ññ9 >
(
ññ> ?
x
ññ? @
=>
ññA C
!
ññD E
mesh
ññE I
.
ññI J#
selectedFacesInternal
ññJ _
.
ññ_ `
Contains
ññ` h
(
ññh i
x
ññi j
)
ññj k
)
ññk l
;
ññl m
mesh
óó 
.
óó 
SetSelectedFaces
óó -
(
óó- .
inverse
óó. 5
.
óó5 6
ToArray
óó6 =
(
óó= >
)
óó> ?
)
óó? @
;
óó@ A
}
òò 
break
öö 
;
öö 
case
úú 

SelectMode
úú 
.
úú  
Edge
úú  $
:
úú$ %
foreach
ûû 
(
ûû 
var
ûû  
mesh
ûû! %
in
ûû& (
MeshSelection
ûû) 6
.
ûû6 7
topInternal
ûû7 B
)
ûûB C
{
üü 
var
†† 
universalEdges
†† *
=
††+ ,
mesh
°°  
.
°°  !(
GetSharedVertexHandleEdges
°°! ;
(
°°; <
mesh
°°< @
.
°°@ A
facesInternal
°°A N
.
°°N O

SelectMany
°°O Y
(
°°Y Z
x
°°Z [
=>
°°\ ^
x
°°_ `
.
°°` a
edges
°°a f
)
°°f g
)
°°g h
.
°°h i
ToArray
°°i p
(
°°p q
)
°°q r
;
°°r s
var
¢¢ $
universalSelectedEdges
¢¢ 2
=
¢¢3 4
EdgeUtility
££ '
.
££' ((
GetSharedVertexHandleEdges
££( B
(
££B C
mesh
££C G
,
££G H
mesh
££I M
.
££M N
selectedEdges
££N [
)
££[ \
.
££\ ]
Distinct
££] e
(
££e f
)
££f g
;
££g h
var
§§ 
inverseUniversal
§§ ,
=
§§- .
System
•• "
.
••" #
Array
••# (
.
••( )
FindAll
••) 0
(
••0 1
universalEdges
••1 ?
,
••? @
x
••A B
=>
••C E
!
••F G$
universalSelectedEdges
••G ]
.
••] ^
Contains
••^ f
(
••f g
x
••g h
)
••h i
)
••i j
;
••j k
var
¶¶ 
inverse
¶¶ #
=
¶¶$ %
new
¶¶& )
Edge
¶¶* .
[
¶¶. /
inverseUniversal
¶¶/ ?
.
¶¶? @
Length
¶¶@ F
]
¶¶F G
;
¶¶G H
for
®® 
(
®® 
var
®®  
n
®®! "
=
®®# $
$num
®®% &
;
®®& '
n
®®( )
<
®®* +
inverseUniversal
®®, <
.
®®< =
Length
®®= C
;
®®C D
n
®®E F
++
®®F H
)
®®H I
inverse
©© #
[
©©# $
n
©©$ %
]
©©% &
=
©©' (
new
©©) ,
Edge
©©- 1
(
©©1 2
mesh
©©2 6
.
©©6 7$
sharedVerticesInternal
©©7 M
[
©©M N
inverseUniversal
©©N ^
[
©©^ _
n
©©_ `
]
©©` a
.
©©a b
a
©©b c
]
©©c d
[
©©d e
$num
©©e f
]
©©f g
,
©©g h
mesh
™™  $
.
™™$ %$
sharedVerticesInternal
™™% ;
[
™™; <
inverseUniversal
™™< L
[
™™L M
n
™™M N
]
™™N O
.
™™O P
b
™™P Q
]
™™Q R
[
™™R S
$num
™™S T
]
™™T U
)
™™U V
;
™™V W
mesh
¨¨ 
.
¨¨ 
SetSelectedEdges
¨¨ -
(
¨¨- .
inverse
¨¨. 5
)
¨¨5 6
;
¨¨6 7
}
≠≠ 
break
ØØ 
;
ØØ 
}
∞∞ 
Refresh
≤≤ 
(
≤≤ 
)
≤≤ 
;
≤≤ 
	SceneView
≥≥ 
.
≥≥ 

RepaintAll
≥≥  
(
≥≥  !
)
≥≥! "
;
≥≥" #
}
¥¥ 	
void
∂∂ 
DoubleClick
∂∂ 
(
∂∂ 
Event
∂∂ 
e
∂∂  
)
∂∂  !
{
∑∑ 	
var
∏∏ 
mesh
∏∏ 
=
∏∏ #
EditorSceneViewPicker
∏∏ ,
.
∏∏, -
DoMouseClick
∏∏- 9
(
∏∏9 :
m_CurrentEvent
∏∏: H
,
∏∏H I

selectMode
∏∏J T
,
∏∏T U&
m_ScenePickerPreferences
∏∏V n
)
∏∏n o
;
∏∏o p
if
∫∫ 
(
∫∫ 
mesh
∫∫ 
!=
∫∫ 
null
∫∫ 
)
∫∫ 
{
ªª 
if
ºº 
(
ºº 

selectMode
ºº 
.
ºº 
ContainsFlag
ºº +
(
ºº+ ,

SelectMode
ºº, 6
.
ºº6 7
Edge
ºº7 ;
|
ºº< =

SelectMode
ºº> H
.
ººH I
TextureEdge
ººI T
)
ººT U
)
ººU V
{
ΩΩ 
if
ææ 
(
ææ 
e
ææ 
.
ææ 
shift
ææ 
)
ææ  
EditorUtility
øø %
.
øø% &
ShowNotification
øø& 6
(
øø6 7!
EditorToolbarLoader
øø7 J
.
øøJ K
GetInstance
øøK V
<
øøV W
Actions
øøW ^
.
øø^ _
SelectEdgeRing
øø_ m
>
øøm n
(
øøn o
)
øøo p
.
øøp q
DoAction
øøq y
(
øøy z
)
øøz {
)
øø{ |
;
øø| }
else
¿¿ 
EditorUtility
¡¡ %
.
¡¡% &
ShowNotification
¡¡& 6
(
¡¡6 7!
EditorToolbarLoader
¡¡7 J
.
¡¡J K
GetInstance
¡¡K V
<
¡¡V W
Actions
¡¡W ^
.
¡¡^ _
SelectEdgeLoop
¡¡_ m
>
¡¡m n
(
¡¡n o
)
¡¡o p
.
¡¡p q
DoAction
¡¡q y
(
¡¡y z
)
¡¡z {
)
¡¡{ |
;
¡¡| }
}
¬¬ 
else
√√ 
if
√√ 
(
√√ 

selectMode
√√ #
.
√√# $
ContainsFlag
√√$ 0
(
√√0 1

SelectMode
√√1 ;
.
√√; <
Face
√√< @
|
√√A B

SelectMode
√√C M
.
√√M N
TextureFace
√√N Y
)
√√Y Z
)
√√Z [
{
ƒƒ 
if
≈≈ 
(
≈≈ 
(
≈≈ 
e
≈≈ 
.
≈≈ 
	modifiers
≈≈ $
&
≈≈% &
(
≈≈' (
EventModifiers
≈≈( 6
.
≈≈6 7
Control
≈≈7 >
|
≈≈? @
EventModifiers
≈≈A O
.
≈≈O P
Shift
≈≈P U
)
≈≈U V
)
≈≈V W
==
≈≈X Z
(
∆∆ 
EventModifiers
∆∆ '
.
∆∆' (
Control
∆∆( /
|
∆∆0 1
EventModifiers
∆∆2 @
.
∆∆@ A
Shift
∆∆A F
)
∆∆F G
)
∆∆G H
Actions
«« 
.
««  
SelectFaceRing
««  .
.
««. /"
MenuRingAndLoopFaces
««/ C
(
««C D
MeshSelection
««D Q
.
««Q R
topInternal
««R ]
)
««] ^
;
««^ _
else
»» 
if
»» 
(
»» 
e
»» 
.
»» 
control
»» &
)
»»& '
EditorUtility
…… %
.
……% &
ShowNotification
……& 6
(
……6 7!
EditorToolbarLoader
……7 J
.
……J K
GetInstance
……K V
<
……V W
Actions
……W ^
.
……^ _
SelectFaceRing
……_ m
>
……m n
(
……n o
)
……o p
.
……p q
DoAction
……q y
(
……y z
)
……z {
)
……{ |
;
……| }
else
   
if
   
(
   
e
   
.
   
shift
   $
)
  $ %
EditorUtility
ÀÀ %
.
ÀÀ% &
ShowNotification
ÀÀ& 6
(
ÀÀ6 7!
EditorToolbarLoader
ÀÀ7 J
.
ÀÀJ K
GetInstance
ÀÀK V
<
ÀÀV W
Actions
ÀÀW ^
.
ÀÀ^ _
SelectFaceLoop
ÀÀ_ m
>
ÀÀm n
(
ÀÀn o
)
ÀÀo p
.
ÀÀp q
DoAction
ÀÀq y
(
ÀÀy z
)
ÀÀz {
)
ÀÀ{ |
;
ÀÀ| }
else
ÃÃ 
mesh
ÕÕ 
.
ÕÕ 
SetSelectedFaces
ÕÕ -
(
ÕÕ- .
mesh
ÕÕ. 2
.
ÕÕ2 3
facesInternal
ÕÕ3 @
)
ÕÕ@ A
;
ÕÕA B
}
ŒŒ 
else
œœ 
{
–– 
mesh
—— 
.
—— 
SetSelectedFaces
—— )
(
——) *
mesh
——* .
.
——. /
facesInternal
——/ <
)
——< =
;
——= >
}
““ 
UpdateSelection
‘‘ 
(
‘‘  
)
‘‘  !
;
‘‘! "
	SceneView
’’ 
.
’’ 

RepaintAll
’’ $
(
’’$ %
)
’’% &
;
’’& '
m_WasDoubleClick
÷÷  
=
÷÷! "
true
÷÷# '
;
÷÷' (
}
◊◊ 
}
ÿÿ 	
void
⁄⁄ 
DrawHandleGUI
⁄⁄ 
(
⁄⁄ 
	SceneView
⁄⁄ $
	sceneView
⁄⁄% .
)
⁄⁄. /
{
€€ 	
if
‹‹ 
(
‹‹ 
	sceneView
‹‹ 
!=
‹‹ 
	SceneView
‹‹ &
.
‹‹& '!
lastActiveSceneView
‹‹' :
)
‹‹: ;
return
›› 
;
›› 
if
ﬂﬂ 
(
ﬂﬂ 
m_CurrentEvent
ﬂﬂ 
.
ﬂﬂ 
type
ﬂﬂ #
==
ﬂﬂ$ &
	EventType
ﬂﬂ' 0
.
ﬂﬂ0 1
Repaint
ﬂﬂ1 8
&&
‡‡ 
!
‡‡ &
SceneDragAndDropListener
‡‡ ,
.
‡‡, -

isDragging
‡‡- 7
&&
·· 

m_Hovering
·· 
!=
··  
null
··! %
&&
‚‚ 

GUIUtility
‚‚ 
.
‚‚ 

hotControl
‚‚ (
==
‚‚) +
$num
‚‚, -
&&
„„ 
HandleUtility
„„  
.
„„  !
nearestControl
„„! /
==
„„0 2
m_DefaultControl
„„3 C
&&
‰‰ 

selectMode
‰‰ 
.
‰‰ 
IsMeshElementMode
‰‰ /
(
‰‰/ 0
)
‰‰0 1
)
‰‰1 2
{
ÂÂ 
try
ÊÊ 
{
ÁÁ !
EditorHandleDrawing
ËË '
.
ËË' ( 
DrawSceneSelection
ËË( :
(
ËË: ;

m_Hovering
ËË; E
)
ËËE F
;
ËËF G
}
ÈÈ 
catch
ÍÍ 
{
ÎÎ 
}
ÌÌ 
}
ÓÓ 
using
 
(
 
new
 
	HandleGUI
  
(
  !
)
! "
)
" #
{
ÒÒ 
int
ÚÚ 
screenWidth
ÚÚ 
=
ÚÚ  !
(
ÚÚ" #
int
ÚÚ# &
)
ÚÚ& '
	sceneView
ÚÚ' 0
.
ÚÚ0 1
position
ÚÚ1 9
.
ÚÚ9 :
width
ÚÚ: ?
;
ÚÚ? @
int
ÛÛ 
screenHeight
ÛÛ  
=
ÛÛ! "
(
ÛÛ# $
int
ÛÛ$ '
)
ÛÛ' (
	sceneView
ÛÛ( 1
.
ÛÛ1 2
position
ÛÛ2 :
.
ÛÛ: ;
height
ÛÛ; A
;
ÛÛA B
switch
ıı 
(
ıı 
(
ıı "
SceneToolbarLocation
ıı -
)
ıı- .$
s_SceneToolbarLocation
ıı. D
)
ııD E
{
ˆˆ 
case
˜˜ "
SceneToolbarLocation
˜˜ -
.
˜˜- .
BottomCenter
˜˜. :
:
˜˜: ;&
m_ElementModeToolbarRect
¯¯ 0
.
¯¯0 1
x
¯¯1 2
=
¯¯3 4
(
¯¯5 6
screenWidth
¯¯6 A
/
¯¯B C
$num
¯¯D E
-
¯¯F G
$num
¯¯H J
)
¯¯J K
;
¯¯K L&
m_ElementModeToolbarRect
˘˘ 0
.
˘˘0 1
y
˘˘1 2
=
˘˘3 4
screenHeight
˘˘5 A
-
˘˘B C&
m_ElementModeToolbarRect
˘˘D \
.
˘˘\ ]
height
˘˘] c
*
˘˘d e
$num
˘˘f g
;
˘˘g h
break
˙˙ 
;
˙˙ 
case
¸¸ "
SceneToolbarLocation
¸¸ -
.
¸¸- .

BottomLeft
¸¸. 8
:
¸¸8 9&
m_ElementModeToolbarRect
˝˝ 0
.
˝˝0 1
x
˝˝1 2
=
˝˝3 4
$num
˝˝5 7
;
˝˝7 8&
m_ElementModeToolbarRect
˛˛ 0
.
˛˛0 1
y
˛˛1 2
=
˛˛3 4
screenHeight
˛˛5 A
-
˛˛B C&
m_ElementModeToolbarRect
˛˛D \
.
˛˛\ ]
height
˛˛] c
*
˛˛d e
$num
˛˛f g
;
˛˛g h
break
ˇˇ 
;
ˇˇ 
case
ÅÅ "
SceneToolbarLocation
ÅÅ -
.
ÅÅ- .
BottomRight
ÅÅ. 9
:
ÅÅ9 :&
m_ElementModeToolbarRect
ÇÇ 0
.
ÇÇ0 1
x
ÇÇ1 2
=
ÇÇ3 4
screenWidth
ÇÇ5 @
-
ÇÇA B
(
ÇÇC D&
m_ElementModeToolbarRect
ÇÇD \
.
ÇÇ\ ]
width
ÇÇ] b
+
ÇÇc d
$num
ÇÇe g
)
ÇÇg h
;
ÇÇh i&
m_ElementModeToolbarRect
ÉÉ 0
.
ÉÉ0 1
y
ÉÉ1 2
=
ÉÉ3 4
screenHeight
ÉÉ5 A
-
ÉÉB C&
m_ElementModeToolbarRect
ÉÉD \
.
ÉÉ\ ]
height
ÉÉ] c
*
ÉÉd e
$num
ÉÉf g
;
ÉÉg h
break
ÑÑ 
;
ÑÑ 
case
ÜÜ "
SceneToolbarLocation
ÜÜ -
.
ÜÜ- .
	UpperLeft
ÜÜ. 7
:
ÜÜ7 8&
m_ElementModeToolbarRect
áá 0
.
áá0 1
x
áá1 2
=
áá3 4
$num
áá5 7
;
áá7 8&
m_ElementModeToolbarRect
àà 0
.
àà0 1
y
àà1 2
=
àà3 4
$num
àà5 7
;
àà7 8
break
ââ 
;
ââ 
case
ãã "
SceneToolbarLocation
ãã -
.
ãã- .

UpperRight
ãã. 8
:
ãã8 9&
m_ElementModeToolbarRect
åå 0
.
åå0 1
x
åå1 2
=
åå3 4
screenWidth
åå5 @
-
ååA B
(
ååC D&
m_ElementModeToolbarRect
ååD \
.
åå\ ]
width
åå] b
+
ååc d
$num
ååe g
)
ååg h
;
ååh i&
m_ElementModeToolbarRect
çç 0
.
çç0 1
y
çç1 2
=
çç3 4
$num
çç5 7
;
çç7 8
break
éé 
;
éé 
default
êê 
:
êê 
case
ëë "
SceneToolbarLocation
ëë -
.
ëë- .
UpperCenter
ëë. 9
:
ëë9 :&
m_ElementModeToolbarRect
íí 0
.
íí0 1
x
íí1 2
=
íí3 4
(
íí5 6
screenWidth
íí6 A
/
ííB C
$num
ííD E
-
ííF G
$num
ííH J
)
ííJ K
;
ííK L&
m_ElementModeToolbarRect
ìì 0
.
ìì0 1
y
ìì1 2
=
ìì3 4
$num
ìì5 7
;
ìì7 8
break
îî 
;
îî 
}
ïï 

selectMode
óó 
=
óó 
UI
óó 
.
óó  
EditorGUIUtility
óó  0
.
óó0 1"
DoElementModeToolbar
óó1 E
(
óóE F&
m_ElementModeToolbarRect
óóF ^
,
óó^ _

selectMode
óó` j
)
óój k
;
óók l
if
ôô 
(
ôô 
s_ShowSceneInfo
ôô #
)
ôô# $
{
öö 
Vector2
õõ 
size
õõ  
=
õõ! "
UI
õõ# %
.
õõ% &
EditorStyles
õõ& 2
.
õõ2 3
sceneTextBox
õõ3 ?
.
õõ? @
CalcSize
õõ@ H
(
õõH I
m_SceneInfo
õõI T
)
õõT U
;
õõU V
m_SceneInfoRect
úú #
.
úú# $
width
úú$ )
=
úú* +
size
úú, 0
.
úú0 1
x
úú1 2
;
úú2 3
m_SceneInfoRect
ùù #
.
ùù# $
height
ùù$ *
=
ùù+ ,
size
ùù- 1
.
ùù1 2
y
ùù2 3
;
ùù3 4
GUI
ûû 
.
ûû 
Label
ûû 
(
ûû 
m_SceneInfoRect
ûû -
,
ûû- .
m_SceneInfo
ûû/ :
,
ûû: ;
UI
ûû< >
.
ûû> ?
EditorStyles
ûû? K
.
ûûK L
sceneTextBox
ûûL X
)
ûûX Y
;
ûûY Z
}
üü 
if
°° 
(
°° 
m_IsDragging
°°  
)
°°  !
{
¢¢ 
if
££ 
(
££ 
m_CurrentEvent
££ &
.
££& '
type
££' +
==
££, .
	EventType
££/ 8
.
££8 9
Repaint
££9 @
)
££@ A
{
§§ 
var
¶¶ 
start
¶¶ !
=
¶¶" #
Vector2
¶¶$ +
.
¶¶+ ,
Min
¶¶, /
(
¶¶/ 0$
m_InitialMousePosition
¶¶0 F
,
¶¶F G
m_CurrentEvent
¶¶H V
.
¶¶V W
mousePosition
¶¶W d
)
¶¶d e
;
¶¶e f
var
ßß 
end
ßß 
=
ßß  !
Vector2
ßß" )
.
ßß) *
Max
ßß* -
(
ßß- .$
m_InitialMousePosition
ßß. D
,
ßßD E
m_CurrentEvent
ßßF T
.
ßßT U
mousePosition
ßßU b
)
ßßb c
;
ßßc d
m_MouseDragRect
©© '
=
©©( )
new
©©* -
Rect
©©. 2
(
©©2 3
start
©©3 8
.
©©8 9
x
©©9 :
,
©©: ;
start
©©< A
.
©©A B
y
©©B C
,
©©C D
end
©©E H
.
©©H I
x
©©I J
-
©©K L
start
©©M R
.
©©R S
x
©©S T
,
©©T U
end
©©V Y
.
©©Y Z
y
©©Z [
-
©©\ ]
start
©©^ c
.
©©c d
y
©©d e
)
©©e f
;
©©f g
SceneStyles
´´ #
.
´´# $
selectionRect
´´$ 1
.
´´1 2
Draw
´´2 6
(
´´6 7
m_MouseDragRect
´´7 F
,
´´F G
false
´´H M
,
´´M N
false
´´O T
,
´´T U
false
´´V [
,
´´[ \
false
´´] b
)
´´b c
;
´´c d
}
¨¨ 
else
≠≠ 
if
≠≠ 
(
≠≠ 
m_CurrentEvent
≠≠ +
.
≠≠+ ,
isMouse
≠≠, 3
)
≠≠3 4
{
ÆÆ 
HandleUtility
ØØ %
.
ØØ% &
Repaint
ØØ& -
(
ØØ- .
)
ØØ. /
;
ØØ/ 0
}
∞∞ 
}
±± 
}
≤≤ 
}
≥≥ 	
internal
¬	¬	 
void
¬	¬	 
SetTool
¬	¬	 
(
¬	¬	 
Tool
¬	¬	 "
newTool
¬	¬	# *
)
¬	¬	* +
{
√	√	 	
m_CurrentTool
ƒ	ƒ	 
=
ƒ	ƒ	 
newTool
ƒ	ƒ	 #
;
ƒ	ƒ	# $
}
≈	≈	 	
void
À	À	 
SetTool_Internal
À	À	 
(
À	À	 
Tool
À	À	 "
newTool
À	À	# *
)
À	À	* +
{
Ã	Ã	 	
SetTool
Õ	Õ	 
(
Õ	Õ	 
newTool
Õ	Õ	 
)
Õ	Õ	 
;
Õ	Õ	 
if
œ	œ	 
(
œ	œ	 
UVEditor
œ	œ	 
.
œ	œ	 
instance
œ	œ	 !
!=
œ	œ	" $
null
œ	œ	% )
)
œ	œ	) *
UVEditor
–	–	 
.
–	–	 
instance
–	–	 !
.
–	–	! "
SetTool
–	–	" )
(
–	–	) *
newTool
–	–	* 1
)
–	–	1 2
;
–	–	2 3
}
—	—	 	
internal
÷	÷	 
void
÷	÷	 !
ToggleSelectionMode
÷	÷	 )
(
÷	÷	) *
)
÷	÷	* +
{
◊	◊	 	
if
ÿ	ÿ	 
(
ÿ	ÿ	 
s_SelectMode
ÿ	ÿ	 
==
ÿ	ÿ	 

SelectMode
ÿ	ÿ	  *
.
ÿ	ÿ	* +
Vertex
ÿ	ÿ	+ 1
)
ÿ	ÿ	1 2

selectMode
Ÿ	Ÿ	 
=
Ÿ	Ÿ	 

SelectMode
Ÿ	Ÿ	 '
.
Ÿ	Ÿ	' (
Edge
Ÿ	Ÿ	( ,
;
Ÿ	Ÿ	, -
else
⁄	⁄	 
if
⁄	⁄	 
(
⁄	⁄	 
s_SelectMode
⁄	⁄	 !
==
⁄	⁄	" $

SelectMode
⁄	⁄	% /
.
⁄	⁄	/ 0
Edge
⁄	⁄	0 4
)
⁄	⁄	4 5

selectMode
€	€	 
=
€	€	 

SelectMode
€	€	 '
.
€	€	' (
Face
€	€	( ,
;
€	€	, -
else
‹	‹	 
if
‹	‹	 
(
‹	‹	 
s_SelectMode
‹	‹	 !
==
‹	‹	" $

SelectMode
‹	‹	% /
.
‹	‹	/ 0
Face
‹	‹	0 4
)
‹	‹	4 5

selectMode
›	›	 
=
›	›	 

SelectMode
›	›	 '
.
›	›	' (
Vertex
›	›	( .
;
›	›	. /
}
ﬁ	ﬁ	 	
void
‡	‡	 
UpdateSelection
‡	‡	 
(
‡	‡	 
bool
‡	‡	 !
selectionChanged
‡	‡	" 2
=
‡	‡	3 4
true
‡	‡	5 9
)
‡	‡	9 :
{
·	·	 	
UpdateMeshHandles
‚	‚	 
(
‚	‚	 
selectionChanged
‚	‚	 .
)
‚	‚	. /
;
‚	‚	/ 0
if
‰	‰	 
(
‰	‰	 
selectionChanged
‰	‰	  
)
‰	‰	  !
{
Â	Â	 
MeshSelection
Ê	Ê	 
.
Ê	Ê	 )
OnComponentSelectionChanged
Ê	Ê	 9
(
Ê	Ê	9 :
)
Ê	Ê	: ;
;
Ê	Ê	; <
UpdateSceneInfo
Á	Á	 
(
Á	Á	  
)
Á	Á	  !
;
Á	Á	! "
}
Ë	Ë	 
if
Í	Í	 
(
Í	Í	 
selectionUpdated
Í	Í	  
!=
Í	Í	! #
null
Í	Í	$ (
)
Í	Í	( )
selectionUpdated
Î	Î	  
(
Î	Î	  !
	selection
Î	Î	! *
)
Î	Î	* +
;
Î	Î	+ ,
}
Ï	Ï	 	
internal
Ó	Ó	 
static
Ó	Ó	 
void
Ó	Ó	 
UpdateMeshHandles
Ó	Ó	 .
(
Ó	Ó	. /
bool
Ó	Ó	/ 3+
selectionOrVertexCountChanged
Ó	Ó	4 Q
=
Ó	Ó	R S
true
Ó	Ó	T X
)
Ó	Ó	X Y
{
Ô	Ô	 	
if
		 
(
		 
!
		 

s_Instance
		 
)
		 
return
Ò	Ò	 
;
Ò	Ò	 
try
Û	Û	 
{
Ù	Ù	 !
EditorHandleDrawing
ı	ı	 #
.
ı	ı	# $$
RebuildSelectedHandles
ı	ı	$ :
(
ı	ı	: ;
MeshSelection
ı	ı	; H
.
ı	ı	H I
topInternal
ı	ı	I T
,
ı	ı	T U

selectMode
ı	ı	V `
)
ı	ı	` a
;
ı	ı	a b
}
ˆ	ˆ	 
catch
˜	˜	 
{
¯	¯	 !
EditorHandleDrawing
˙	˙	 #
.
˙	˙	# $
ClearHandles
˙	˙	$ 0
(
˙	˙	0 1
)
˙	˙	1 2
;
˙	˙	2 3
}
˚	˚	 
}
¸	¸	 	
void
˛	˛	 
UpdateSceneInfo
˛	˛	 
(
˛	˛	 
)
˛	˛	 
{
ˇ	ˇ	 	
m_SceneInfo
Ä
Ä
 
.
Ä
Ä
 
text
Ä
Ä
 
=
Ä
Ä
 
string
Ä
Ä
 %
.
Ä
Ä
% &
Format
Ä
Ä
& ,
(
Ä
Ä
, -
$strÅ
Å
 π
,Å
Å
π ∫
MeshSelection
Ç
Ç
 !
.
Ç
Ç
! "
totalFaceCount
Ç
Ç
" 0
.
Ç
Ç
0 1
ToString
Ç
Ç
1 9
(
Ç
Ç
9 :
)
Ç
Ç
: ;
,
Ç
Ç
; <
MeshSelection
É
É
 !
.
É
É
! "(
totalTriangleCountCompiled
É
É
" <
.
É
É
< =
ToString
É
É
= E
(
É
É
E F
)
É
É
F G
,
É
É
G H
MeshSelection
Ñ
Ñ
 !
.
Ñ
Ñ
! "$
totalCommonVertexCount
Ñ
Ñ
" 8
.
Ñ
Ñ
8 9
ToString
Ñ
Ñ
9 A
(
Ñ
Ñ
A B
)
Ñ
Ñ
B C
,
Ñ
Ñ
C D
MeshSelection
Ö
Ö
 !
.
Ö
Ö
! "'
totalVertexCountOptimized
Ö
Ö
" ;
.
Ö
Ö
; <
ToString
Ö
Ö
< D
(
Ö
Ö
D E
)
Ö
Ö
E F
,
Ö
Ö
F G
MeshSelection
Ü
Ü
 !
.
Ü
Ü
! "
selectedFaceCount
Ü
Ü
" 3
.
Ü
Ü
3 4
ToString
Ü
Ü
4 <
(
Ü
Ü
< =
)
Ü
Ü
= >
,
Ü
Ü
> ?
MeshSelection
á
á
 !
.
á
á
! "
selectedEdgeCount
á
á
" 3
.
á
á
3 4
ToString
á
á
4 <
(
á
á
< =
)
á
á
= >
,
á
á
> ?
MeshSelection
à
à
 !
.
à
à
! "'
selectedSharedVertexCount
à
à
" ;
.
à
à
; <
ToString
à
à
< D
(
à
à
D E
)
à
à
E F
,
à
à
F G
MeshSelection
â
â
 !
.
â
â
! "!
selectedVertexCount
â
â
" 5
.
â
â
5 6
ToString
â
â
6 >
(
â
â
> ?
)
â
â
? @
)
â
â
@ A
;
â
â
A B
}
ä
ä
 	
internal
å
å
 
void
å
å
 #
ClearElementSelection
å
å
 +
(
å
å
+ ,
)
å
å
, -
{
ç
ç
 	
foreach
é
é
 
(
é
é
 
ProBuilderMesh
é
é
 #
pb
é
é
$ &
in
é
é
' )
	selection
é
é
* 3
)
é
é
3 4
pb
è
è
 
.
è
è
 
ClearSelection
è
è
 !
(
è
è
! "
)
è
è
" #
;
è
è
# $

m_Hovering
ë
ë
 
.
ë
ë
 
Clear
ë
ë
 
(
ë
ë
 
)
ë
ë
 
;
ë
ë
 
}
í
í
 	
void
ó
ó
 )
VerifyTextureGroupSelection
ó
ó
 (
(
ó
ó
( )
)
ó
ó
) *
{
ò
ò
 	
bool
ô
ô
 
selectionModified
ô
ô
 "
=
ô
ô
# $
false
ô
ô
% *
;
ô
ô
* +
foreach
õ
õ
 
(
õ
õ
 
ProBuilderMesh
õ
õ
 #
mesh
õ
õ
$ (
in
õ
õ
) +
	selection
õ
õ
, 5
)
õ
õ
5 6
{
ú
ú
 
List
ù
ù
 
<
ù
ù
 
int
ù
ù
 
>
ù
ù
 
alreadyChecked
ù
ù
 (
=
ù
ù
) *
new
ù
ù
+ .
List
ù
ù
/ 3
<
ù
ù
3 4
int
ù
ù
4 7
>
ù
ù
7 8
(
ù
ù
8 9
)
ù
ù
9 :
;
ù
ù
: ;
foreach
ü
ü
 
(
ü
ü
 
Face
ü
ü
 
f
ü
ü
 
in
ü
ü
  "
mesh
ü
ü
# '
.
ü
ü
' (#
selectedFacesInternal
ü
ü
( =
)
ü
ü
= >
{
†
†
 
int
°
°
 
tg
°
°
 
=
°
°
 
f
°
°
 
.
°
°
 
textureGroup
°
°
 +
;
°
°
+ ,
if
£
£
 
(
£
£
 
tg
£
£
 
>
£
£
 
$num
£
£
 
&&
£
£
 !
!
£
£
" #
alreadyChecked
£
£
# 1
.
£
£
1 2
Contains
£
£
2 :
(
£
£
: ;
f
£
£
; <
.
£
£
< =
textureGroup
£
£
= I
)
£
£
I J
)
£
£
J K
{
§
§
 
foreach
•
•
 
(
•
•
  !
Face
•
•
! %
j
•
•
& '
in
•
•
( *
mesh
•
•
+ /
.
•
•
/ 0
facesInternal
•
•
0 =
)
•
•
= >
{
¶
¶
 
if
ß
ß
 
(
ß
ß
  
j
ß
ß
  !
!=
ß
ß
" $
f
ß
ß
% &
&&
ß
ß
' )
j
ß
ß
* +
.
ß
ß
+ ,
textureGroup
ß
ß
, 8
==
ß
ß
9 ;
tg
ß
ß
< >
&&
ß
ß
? A
!
ß
ß
B C
mesh
ß
ß
C G
.
ß
ß
G H#
selectedFacesInternal
ß
ß
H ]
.
ß
ß
] ^
Contains
ß
ß
^ f
(
ß
ß
f g
j
ß
ß
g h
)
ß
ß
h i
)
ß
ß
i j
{
®
®
 
List
©
©
  $
<
©
©
$ %
Face
©
©
% )
>
©
©
) *
newFaceSection
©
©
+ 9
=
©
©
: ;
new
©
©
< ?
List
©
©
@ D
<
©
©
D E
Face
©
©
E I
>
©
©
I J
(
©
©
J K
)
©
©
K L
;
©
©
L M
foreach
™
™
  '
(
™
™
( )
Face
™
™
) -
jf
™
™
. 0
in
™
™
1 3
mesh
™
™
4 8
.
™
™
8 9
facesInternal
™
™
9 F
)
™
™
F G
if
´
´
$ &
(
´
´
' (
jf
´
´
( *
.
´
´
* +
textureGroup
´
´
+ 7
==
´
´
8 :
tg
´
´
; =
)
´
´
= >
newFaceSection
¨
¨
( 6
.
¨
¨
6 7
Add
¨
¨
7 :
(
¨
¨
: ;
jf
¨
¨
; =
)
¨
¨
= >
;
¨
¨
> ?
mesh
≠
≠
  $
.
≠
≠
$ %
SetSelectedFaces
≠
≠
% 5
(
≠
≠
5 6
newFaceSection
≠
≠
6 D
.
≠
≠
D E
ToArray
≠
≠
E L
(
≠
≠
L M
)
≠
≠
M N
)
≠
≠
N O
;
≠
≠
O P
selectionModified
Æ
Æ
  1
=
Æ
Æ
2 3
true
Æ
Æ
4 8
;
Æ
Æ
8 9
break
Ø
Ø
  %
;
Ø
Ø
% &
}
∞
∞
 
}
±
±
 
}
≤
≤
 
alreadyChecked
¥
¥
 "
.
¥
¥
" #
Add
¥
¥
# &
(
¥
¥
& '
f
¥
¥
' (
.
¥
¥
( )
textureGroup
¥
¥
) 5
)
¥
¥
5 6
;
¥
¥
6 7
}
µ
µ
 
}
∂
∂
 
if
∏
∏
 
(
∏
∏
 
selectionModified
∏
∏
 !
)
∏
∏
! "
UpdateSelection
π
π
 
(
π
π
  
true
π
π
  $
)
π
π
$ %
;
π
π
% &
}
∫
∫
 	
void
º
º
 &
OnObjectSelectionChanged
º
º
 %
(
º
º
% &
)
º
º
& '
{
Ω
Ω
 	

m_Hovering
æ
æ
 
.
æ
æ
 
Clear
æ
æ
 
(
æ
æ
 
)
æ
æ
 
;
æ
æ
 
UpdateSelection
ø
ø
 
(
ø
ø
 
)
ø
ø
 
;
ø
ø
 "
SetOverrideWireframe
¿
¿
  
(
¿
¿
  !
true
¿
¿
! %
)
¿
¿
% &
;
¿
¿
& '
}
¡
¡
 	
void
∆
∆
 "
SetOverrideWireframe
∆
∆
 !
(
∆
∆
! "
bool
∆
∆
" &
overrideWireframe
∆
∆
' 8
)
∆
∆
8 9
{
«
«
 	
const
»
»
 '
EditorSelectedRenderState
»
»
 +*
k_DefaultSelectedRenderState
»
»
, H
=
»
»
I J'
EditorSelectedRenderState
»
»
K d
.
»
»
d e
	Highlight
»
»
e n
|
»
»
o p(
EditorSelectedRenderState»
»
q ä
.»
»
ä ã
	Wireframe»
»
ã î
;»
»
î ï
foreach
 
 
 
(
 
 
 
var
 
 
 
mesh
 
 
 
in
 
 
  
	Selection
 
 
! *
.
 
 
* +

transforms
 
 
+ 5
.
 
 
5 6
GetComponents
 
 
6 C
<
 
 
C D
ProBuilderMesh
 
 
D R
>
 
 
R S
(
 
 
S T
)
 
 
T U
)
 
 
U V
{
À
À
 
EditorUtility
Õ
Õ
 
.
Õ
Õ
 %
SetSelectionRenderState
Õ
Õ
 5
(
Õ
Õ
5 6
mesh
Œ
Œ
 
.
Œ
Œ
 
renderer
Œ
Œ
 !
,
Œ
Œ
! "
overrideWireframe
œ
œ
 %
?
–
–
 *
k_DefaultSelectedRenderState
–
–
 6
&
–
–
7 8
~
–
–
9 :
(
–
–
: ;'
EditorSelectedRenderState
–
–
; T
.
–
–
T U
	Wireframe
–
–
U ^
)
–
–
^ _
:
—
—
 *
k_DefaultSelectedRenderState
—
—
 6
)
—
—
6 7
;
—
—
7 8
}
“
“
 
	SceneView
‘
‘
 
.
‘
‘
 

RepaintAll
‘
‘
  
(
‘
‘
  !
)
‘
‘
! "
;
‘
‘
" #
}
’
’
 	
void
€
€
 

PushToGrid
€
€
 
(
€
€
 
float
€
€
 
snapVal
€
€
 %
)
€
€
% &
{
‹
‹
 	
UndoUtility
›
›
 
.
›
›
 
RecordSelection
›
›
 '
(
›
›
' (
	selection
›
›
( 1
.
›
›
1 2
ToArray
›
›
2 9
(
›
›
9 :
)
›
›
: ;
,
›
›
; <
$str
›
›
= T
)
›
›
T U
;
›
›
U V
if
ﬂ
ﬂ
 
(
ﬂ
ﬂ
 

selectMode
ﬂ
ﬂ
 
==
ﬂ
ﬂ
 

SelectMode
ﬂ
ﬂ
 (
.
ﬂ
ﬂ
( )
Object
ﬂ
ﬂ
) /
||
ﬂ
ﬂ
0 2

selectMode
ﬂ
ﬂ
3 =
==
ﬂ
ﬂ
> @

SelectMode
ﬂ
ﬂ
A K
.
ﬂ
ﬂ
K L
None
ﬂ
ﬂ
L P
)
ﬂ
ﬂ
P Q
return
‡
‡
 
;
‡
‡
 
for
‚
‚
 
(
‚
‚
 
int
‚
‚
 
i
‚
‚
 
=
‚
‚
 
$num
‚
‚
 
,
‚
‚
 
c
‚
‚
 
=
‚
‚
 
MeshSelection
‚
‚
  -
.
‚
‚
- .!
selectedObjectCount
‚
‚
. A
;
‚
‚
A B
i
‚
‚
C D
<
‚
‚
E F
c
‚
‚
G H
;
‚
‚
H I
i
‚
‚
J K
++
‚
‚
K M
)
‚
‚
M N
{
„
„
 
ProBuilderMesh
‰
‰
 
mesh
‰
‰
 #
=
‰
‰
$ %
	selection
‰
‰
& /
[
‰
‰
/ 0
i
‰
‰
0 1
]
‰
‰
1 2
;
‰
‰
2 3
if
Â
Â
 
(
Â
Â
 
mesh
Â
Â
 
.
Â
Â
 !
selectedVertexCount
Â
Â
 ,
<
Â
Â
- .
$num
Â
Â
/ 0
)
Â
Â
0 1
continue
Ê
Ê
 
;
Ê
Ê
 
var
Ë
Ë
 
indexes
Ë
Ë
 
=
Ë
Ë
 
mesh
Ë
Ë
 "
.
Ë
Ë
" ##
GetCoincidentVertices
Ë
Ë
# 8
(
Ë
Ë
8 9
mesh
Ë
Ë
9 =
.
Ë
Ë
= >%
selectedIndexesInternal
Ë
Ë
> U
)
Ë
Ë
U V
;
Ë
Ë
V W 
ProBuilderSnapping
È
È
 "
.
È
È
" #
SnapVertices
È
È
# /
(
È
È
/ 0
mesh
È
È
0 4
,
È
È
4 5
indexes
È
È
6 =
,
È
È
= >
Vector3
È
È
? F
.
È
È
F G
one
È
È
G J
*
È
È
K L
snapVal
È
È
M T
)
È
È
T U
;
È
È
U V
mesh
Î
Î
 
.
Î
Î
 
ToMesh
Î
Î
 
(
Î
Î
 
)
Î
Î
 
;
Î
Î
 
mesh
Ï
Ï
 
.
Ï
Ï
 
Refresh
Ï
Ï
 
(
Ï
Ï
 
)
Ï
Ï
 
;
Ï
Ï
 
mesh
Ì
Ì
 
.
Ì
Ì
 
Optimize
Ì
Ì
 
(
Ì
Ì
 
)
Ì
Ì
 
;
Ì
Ì
  
}
Ó
Ó
 
UpdateSelection


 
(


 
)


 
;


 
}
Ò
Ò
 	
void
Û
Û
 !
ProGridsToolbarOpen
Û
Û
  
(
Û
Û
  !
bool
Û
Û
! %
menuOpen
Û
Û
& .
)
Û
Û
. /
{
Ù
Ù
 	
bool
ı
ı
 
active
ı
ı
 
=
ı
ı
 
ProGridsInterface
ı
ı
 +
.
ı
ı
+ ,
IsActive
ı
ı
, 4
(
ı
ı
4 5
)
ı
ı
5 6
;
ı
ı
6 7
m_SceneInfoRect
ˆ
ˆ
 
.
ˆ
ˆ
 
y
ˆ
ˆ
 
=
ˆ
ˆ
 
active
ˆ
ˆ
  &
&&
ˆ
ˆ
' )
!
ˆ
ˆ
* +
menuOpen
ˆ
ˆ
+ 3
?
ˆ
ˆ
4 5
$num
ˆ
ˆ
6 8
:
ˆ
ˆ
9 :
$num
ˆ
ˆ
; =
;
ˆ
ˆ
= >
m_SceneInfoRect
˜
˜
 
.
˜
˜
 
x
˜
˜
 
=
˜
˜
 
active
˜
˜
  &
?
˜
˜
' (
(
˜
˜
) *
menuOpen
˜
˜
* 2
?
˜
˜
3 4
$num
˜
˜
5 7
:
˜
˜
8 9
$num
˜
˜
: ;
)
˜
˜
; <
:
˜
˜
= >
$num
˜
˜
? A
;
˜
˜
A B
}
¯
¯
 	
internal
˝
˝
 
void
˝
˝
 (
OnBeginTextureModification
˝
˝
 0
(
˝
˝
0 1
)
˝
˝
1 2
{
˛
˛
 	)
VerifyTextureGroupSelection
ˇ
ˇ
 '
(
ˇ
ˇ
' (
)
ˇ
ˇ
( )
;
ˇ
ˇ
) *
}
ÄÄ 	
internal
àà 
bool
àà "
GetFirstSelectedFace
àà *
(
àà* +
out
àà+ .
ProBuilderMesh
àà/ =
pb
àà> @
,
àà@ A
out
ààB E
Face
ààF J
face
ààK O
)
ààO P
{
ââ 	
pb
ää 
=
ää 
null
ää 
;
ää 
face
ãã 
=
ãã 
null
ãã 
;
ãã 
if
çç 
(
çç 
	selection
çç 
.
çç 
Count
çç 
<
çç  !
$num
çç" #
)
çç# $
return
éé 
false
éé 
;
éé 
pb
êê 
=
êê 
	selection
êê 
.
êê 
FirstOrDefault
êê )
(
êê) *
x
êê* +
=>
êê, .
x
êê/ 0
.
êê0 1
selectedFaceCount
êê1 B
>
êêC D
$num
êêE F
)
êêF G
;
êêG H
if
íí 
(
íí 
pb
íí 
==
íí 
null
íí 
)
íí 
return
ìì 
false
ìì 
;
ìì 
face
ïï 
=
ïï 
pb
ïï 
.
ïï #
selectedFacesInternal
ïï +
[
ïï+ ,
$num
ïï, -
]
ïï- .
;
ïï. /
return
óó 
true
óó 
;
óó 
}
òò 	
}
ôô 
}öö Â 
ïD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\MaterialPalette.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
sealed 

class 
MaterialPalette  
:! "
ScriptableObject# 3
,3 4
IHasDefault5 @
{ 
[ 	
MenuItem	 
( 
$str 2
,2 3
true4 8
)8 9
]9 :
static 
bool '
VerifyCreateMaterialPalette /
(/ 0
)0 1
{ 	
return 
true 
; 
} 	
[ 	
MenuItem	 
( 
$str 2
)2 3
]3 4
static 
void !
CreateMaterialPalette )
() *
)* +
{ 	
string 
path 
= 
FileUtility %
.% & 
GetSelectedDirectory& :
(: ;
); <
+= >
$str? X
;X Y
if 
( 
FileUtility 
. 
Exists "
(" #
path# '
)' (
)( )
path   
=   
AssetDatabase   $
.  $ %#
GenerateUniqueAssetPath  % <
(  < =
path  = A
)  A B
;  B C
MaterialPalette"" 

newPalette"" &
=""' (
FileUtility"") 4
.""4 5
LoadRequired""5 A
<""A B
MaterialPalette""B Q
>""Q R
(""R S
path""S W
)""W X
;""X Y

newPalette## 
.## 
array## 
=## 
	Selection## (
.##( )
GetFiltered##) 4
(##4 5
typeof##5 ;
(##; <
Material##< D
)##D E
,##E F
SelectionMode##G T
.##T U

DeepAssets##U _
)##_ `
.##` a
Cast##a e
<##e f
Material##f n
>##n o
(##o p
)##p q
.##q r
ToArray##r y
(##y z
)##z {
;##{ |
UnityEditor$$ 
.$$ 
EditorUtility$$ %
.$$% &
SetDirty$$& .
($$. /

newPalette$$/ 9
)$$9 :
;$$: ;
EditorGUIUtility%% 
.%% 

PingObject%% '
(%%' (

newPalette%%( 2
)%%2 3
;%%3 4
}&& 	
public(( 
Material(( 
[(( 
](( 
array(( 
;((  
public** 
static** 
implicit** 
operator** '
Material**( 0
[**0 1
]**1 2
(**2 3
MaterialPalette**3 B
materialArray**C P
)**P Q
{++ 	
return,, 
materialArray,,  
.,,  !
array,,! &
;,,& '
}-- 	
public// 
Material// 
this// 
[// 
int//  
i//! "
]//" #
{00 	
get11 
{11 
return11 
array11 
[11 
i11  
]11  !
;11! "
}11# $
set22 
{22 
array22 
[22 
i22 
]22 
=22 
value22 "
;22" #
}22$ %
}33 	
public55 
void55 
SetDefaultValues55 $
(55$ %
)55% &
{66 	
array77 
=77 
new77 
Material77  
[77  !
$num77! #
]77# $
{88 
BuiltinMaterials99  
.99  !
defaultMaterial99! 0
,990 1
null:: 
,:: 
null;; 
,;; 
null<< 
,<< 
null== 
,== 
null>> 
,>> 
null?? 
,?? 
null@@ 
,@@ 
nullAA 
,AA 
nullBB 
}CC 
;CC 
}DD 	
}EE 
}FF ï
§D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Editors\OpenVertexColorEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class !
OpenVertexColorEditor &
:' (

MenuAction) 3
{ 
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
ToolG K
;K L
}M N
}O P
public		 
override		 
	Texture2D		 !
icon		" &
{		' (
get		) ,
{		- .
return		/ 5
IconUtility		6 A
.		A B
GetIcon		B I
(		I J
$str		J d
,		d e
IconSkin		f n
.		n o
Pro		o r
)		r s
;		s t
}		u v
}		w x
public

 
override

 
TooltipContent

 &
tooltip

' .
{

/ 0
get

1 4
{

5 6
return

7 =
	s_Tooltip

> G
;

G H
}

I J
}

K L
public 
override 
string 
	menuTitle (
{) *
get+ .
{/ 0
return1 7
$str8 G
;G H
}I J
}K L
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str &
,& '
$str	 ú
) 
; 
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
ProBuilderEditor )
.) *
instance* 2
!=3 5
null6 :
;: ;
}< =
} 	
public 
override 
ActionResult $
DoAction% -
(- .
). /
{ 	
VertexColorPalette 
. 
MenuOpenWindow -
(- .
). /
;/ 0
return 
new 
ActionResult #
(# $
ActionResult$ 0
.0 1
Status1 7
.7 8
Success8 ?
,? @
$strA [
)[ \
;\ ]
} 	
} 
} å%
ôD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Object\CenterPivot.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
CenterPivot 
: 

MenuAction )
{ 
public		 
override		 
ToolbarGroup		 $
group		% *
{

 	
get 
{ 
return 
ToolbarGroup %
.% &
Object& ,
;, -
}. /
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- K
,K L
IconSkinM U
.U V
ProV Y
)Y Z
;Z [
}\ ]
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str 
, 
$str S
) 
; 
public 
override 
bool 
enabled $
{ 	
get   
{   
return   
base   
.   
enabled   %
&&  & (
MeshSelection  ) 6
.  6 7
selectedObjectCount  7 J
>  K L
$num  M N
;  N O
}  P Q
}!! 	
public## 
override## 
ActionResult## $
DoAction##% -
(##- .
)##. /
{$$ 	
if%% 
(%% 
MeshSelection%% 
.%% 
selectedObjectCount%% 1
<%%2 3
$num%%4 5
)%%5 6
return&& 
ActionResult&& #
.&&# $
NoSelection&&$ /
;&&/ 0
Object(( 
[(( 
](( 
objects(( 
=(( 
new(( "
Object((# )
[(() *
MeshSelection((* 7
.((7 8
selectedObjectCount((8 K
*((L M
$num((N O
]((O P
;((P Q
for** 
(** 
int** 
i** 
=** 
$num** 
,** 
c** 
=** 
MeshSelection**  -
.**- .
selectedObjectCount**. A
;**A B
i**C D
<**E F
c**G H
;**H I
i**J K
++**K M
)**M N
{++ 
objects,, 
[,, 
i,, 
],, 
=,, 
MeshSelection,, *
.,,* +
topInternal,,+ 6
[,,6 7
i,,7 8
],,8 9
;,,9 :
objects-- 
[-- 
i-- 
+-- 
c-- 
]-- 
=--  
MeshSelection--! .
.--. /
topInternal--/ :
[--: ;
i--; <
]--< =
.--= >
	transform--> G
;--G H
}.. 
UndoUtility00 
.00 &
RegisterCompleteObjectUndo00 2
(002 3
objects003 :
,00: ;
$str00< J
)00J K
;00K L
foreach22 
(22 
var22 
mesh22 
in22  
MeshSelection22! .
.22. /
topInternal22/ :
)22: ;
{33 
TransformUtility44  
.44  !
UnparentChildren44! 1
(441 2
mesh442 6
.446 7
	transform447 @
)44@ A
;44A B
mesh55 
.55 
CenterPivot55  
(55  !
null55! %
)55% &
;55& '
mesh66 
.66 
Optimize66 
(66 
)66 
;66  
TransformUtility77  
.77  !
ReparentChildren77! 1
(771 2
mesh772 6
.776 7
	transform777 @
)77@ A
;77A B
}88 
ProBuilderEditor:: 
.:: 
Refresh:: $
(::$ %
)::% &
;::& '
return<< 
new<< 
ActionResult<< #
(<<# $
ActionResult<<$ 0
.<<0 1
Status<<1 7
.<<7 8
Success<<8 ?
,<<? @
$str<<A O
)<<O P
;<<P Q
}== 	
}>> 
}?? õÜ
ûD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\SceneDragAndDropListener.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{		 
[

 
InitializeOnLoad

 
]

 
static 

class $
SceneDragAndDropListener )
{ 
static 
bool $
s_IsSceneViewDragAndDrop ,
;, -
static 
Mesh 
s_PreviewMesh !
;! "
static 
Material 
s_PreviewMaterial )
;) *
static 
ProBuilderMesh 
s_CurrentPreview .
;. /
static 
bool .
"s_IsFaceDragAndDropOverrideEnabled 6
;6 7
static 
	Matrix4x4 
s_Matrix !
;! "
static 
Func 
< 
Material 
> (
s_GetDefaultMaterialDelegate :
=; <
null= A
;A B
static $
SceneDragAndDropListener '
(' (
)( )
{ 	
	SceneView 
. 
duringSceneGui $
+=% '

OnSceneGUI( 2
;2 3 
AssemblyReloadEvents  
.  ! 
beforeAssemblyReload! 5
+=6 8"
OnBeforeAssemblyReload9 O
;O P
s_PreviewMesh 
= 
new 
Mesh  $
($ %
)% &
{   
name!! 
=!! 
$str!! <
,!!< =
	hideFlags"" 
="" 
	HideFlags"" %
.""% &
HideAndDontSave""& 5
}## 
;## 
}$$ 	
static&& 
void&& "
OnBeforeAssemblyReload&& *
(&&* +
)&&+ ,
{'' 	
UObject(( 
.(( 
DestroyImmediate(( $
((($ %
s_PreviewMesh((% 2
)((2 3
;((3 4
})) 	
public++ 
static++ 
bool++ 

isDragging++ %
{,, 	
get-- 
{-- 
return-- $
s_IsSceneViewDragAndDrop-- 1
;--1 2
}--3 4
}.. 	
static00 
bool00 

isFaceMode00 
{11 	
get22 
{22 
return22 
ProBuilderEditor22 )
.22) *

selectMode22* 4
.224 5
ContainsFlag225 A
(22A B

SelectMode22B L
.22L M
TextureFace22M X
|22Y Z

SelectMode22[ e
.22e f
Face22f j
)22j k
;22k l
}22m n
}33 	
static55 
Material55 
GetDefaultMaterial55 *
(55* +
)55+ ,
{66 	
if77 
(77 (
s_GetDefaultMaterialDelegate77 0
==771 3
null774 8
)778 9(
s_GetDefaultMaterialDelegate88 0
=881 2
(883 4
Func884 8
<888 9
Material889 A
>88A B
)88B C
ReflectionUtility88C T
.88T U
GetOpenDelegate88U d
<88d e
Func88e i
<88i j
Material88j r
>88r s
>88s t
(88t u
typeof88u {
(88{ |
Material	88| Ñ
)
88Ñ Ö
,
88Ö Ü
$str
88á õ
)
88õ ú
;
88ú ù
if:: 
(:: (
s_GetDefaultMaterialDelegate:: 0
!=::1 3
null::4 8
)::8 9
return;; (
s_GetDefaultMaterialDelegate;; 7
(;;7 8
);;8 9
;;;9 :
return<< 
null<< 
;<< 
}== 	
static?? 
Material?? )
GetMaterialFromDragReferences?? 5
(??5 6
UObject??6 =
[??= >
]??> ?

references??@ J
,??J K
bool??L P$
createMaterialForTexture??Q i
)??i j
{@@ 	
MaterialAA 
matAA 
=AA 

referencesAA %
.AA% &
FirstOrDefaultAA& 4
(AA4 5
xAA5 6
=>AA7 9
xAA: ;
isAA< >
MaterialAA? G
)AAG H
asAAI K
MaterialAAL T
;AAT U
ifCC 
(CC 
!CC $
createMaterialForTextureCC )
||CC* ,
matCC- 0
!=CC1 3
nullCC4 8
)CC8 9
returnDD 
matDD 
;DD 
	Texture2DFF 
texFF 
=FF 

referencesFF &
.FF& '
FirstOrDefaultFF' 5
(FF5 6
xFF6 7
=>FF8 :
xFF; <
isFF= ?
	Texture2DFF@ I
)FFI J
asFFK M
	Texture2DFFN W
;FFW X
stringGG 
texPathGG 
=GG 
texGG  
!=GG! #
nullGG$ (
?GG) *
AssetDatabaseGG+ 8
.GG8 9
GetAssetPathGG9 E
(GGE F
texGGF I
)GGI J
:GGK L
nullGGM Q
;GGQ R
ifII 
(II 
!II 
stringII 
.II 
IsNullOrEmptyII %
(II% &
texPathII& -
)II- .
)II. /
{JJ 
varLL 
defaultMaterialLL #
=LL$ %
GetDefaultMaterialLL& 8
(LL8 9
)LL9 :
;LL: ;
ifNN 
(NN 
defaultMaterialNN #
==NN$ &
nullNN' +
)NN+ ,
matOO 
=OO 
newOO 
MaterialOO &
(OO& '
ShaderOO' -
.OO- .
FindOO. 2
(OO2 3
$strOO3 =
)OO= >
)OO> ?
;OO? @
elsePP 
matQQ 
=QQ 
newQQ 
MaterialQQ &
(QQ& '
defaultMaterialQQ' 6
.QQ6 7
shaderQQ7 =
)QQ= >
;QQ> ?
ifSS 
(SS 
matSS 
.SS 
shaderSS 
==SS !
nullSS" &
)SS& '
{TT 
UObjectUU 
.UU 
DestroyImmediateUU ,
(UU, -
matUU- 0
)UU0 1
;UU1 2
returnVV 
nullVV 
;VV  
}WW 
matYY 
.YY 
mainTextureYY 
=YY  !
texYY" %
;YY% &
int[[ 
lastDot[[ 
=[[ 
texPath[[ %
.[[% &
LastIndexOf[[& 1
([[1 2
$str[[2 5
,[[5 6
StringComparison[[7 G
.[[G H
InvariantCulture[[H X
)[[X Y
;[[Y Z
texPath\\ 
=\\ 
texPath\\ !
.\\! "
	Substring\\" +
(\\+ ,
$num\\, -
,\\- .
texPath\\/ 6
.\\6 7
Length\\7 =
-\\> ?
(\\@ A
texPath\\A H
.\\H I
Length\\I O
-\\P Q
lastDot\\R Y
)\\Y Z
)\\Z [
;\\[ \
texPath]] 
=]] 
AssetDatabase]] '
.]]' (#
GenerateUniqueAssetPath]]( ?
(]]? @
texPath]]@ G
+]]H I
$str]]J P
)]]P Q
;]]Q R
AssetDatabase^^ 
.^^ 
CreateAsset^^ )
(^^) *
mat^^* -
,^^- .
texPath^^/ 6
)^^6 7
;^^7 8
AssetDatabase__ 
.__ 
Refresh__ %
(__% &
)__& '
;__' (
returnaa 
mataa 
;aa 
}bb 
returndd 
nulldd 
;dd 
}ee 	
staticgg 
voidgg 
SetMeshPreviewgg "
(gg" #
ProBuilderMeshgg# 1
meshgg2 6
)gg6 7
{hh 	
ifii 
(ii 
s_CurrentPreviewii  
!=ii! #
meshii$ (
)ii( )
{jj 
s_PreviewMeshkk 
.kk 
Clearkk #
(kk# $
)kk$ %
;kk% &
s_CurrentPreviewll  
=ll! "
meshll# '
;ll' (
ifnn 
(nn 
s_CurrentPreviewnn $
!=nn% '
nullnn( ,
)nn, -
{oo 
s_PreviewMaterialpp %
=pp& ')
GetMaterialFromDragReferencespp( E
(ppE F
DragAndDropppF Q
.ppQ R
objectReferencesppR b
,ppb c
falseppd i
)ppi j
;ppj k.
"s_IsFaceDragAndDropOverrideEnabledqq 6
=qq7 8

isFaceModeqq9 C
&&qqD F
s_PreviewMaterialqqG X
!=qqY [
nullqq\ `
&&qqa c
meshqqd h
.qqh i
selectedFaceCountqqi z
>qq{ |
$numqq} ~
;qq~ 
ifss 
(ss .
"s_IsFaceDragAndDropOverrideEnabledss :
)ss: ;
{tt 
s_PreviewMeshuu %
.uu% &
verticesuu& .
=uu/ 0
meshuu1 5
.uu5 6
positionsInternaluu6 G
;uuG H
ifww 
(ww 
meshww  
.ww  !
	HasArraysww! *
(ww* +

MeshArraysww+ 5
.ww5 6
Colorww6 ;
)ww; <
)ww< =
s_PreviewMeshxx )
.xx) *
colorsxx* 0
=xx1 2
meshxx3 7
.xx7 8
colorsInternalxx8 F
;xxF G
ifyy 
(yy 
meshyy  
.yy  !
	HasArraysyy! *
(yy* +

MeshArraysyy+ 5
.yy5 6
Normalyy6 <
)yy< =
)yy= >
s_PreviewMeshzz )
.zz) *
normalszz* 1
=zz2 3
meshzz4 8
.zz8 9
normalsInternalzz9 H
;zzH I
if{{ 
({{ 
mesh{{  
.{{  !
	HasArrays{{! *
({{* +

MeshArrays{{+ 5
.{{5 6
Texture0{{6 >
){{> ?
){{? @
s_PreviewMesh|| )
.||) *
uv||* ,
=||- .
mesh||/ 3
.||3 4
texturesInternal||4 D
;||D E
s_Matrix~~  
=~~! "
mesh~~# '
.~~' (
	transform~~( 1
.~~1 2
localToWorldMatrix~~2 D
;~~D E
s_PreviewMesh %
.% &
	triangles& /
=0 1
mesh2 6
.6 7!
selectedFacesInternal7 L
.L M

SelectManyM W
(W X
xX Y
=>Z \
x] ^
.^ _
indexes_ f
)f g
.g h
ToArrayh o
(o p
)p q
;q r
}
ÄÄ 
}
ÅÅ 
else
ÇÇ 
{
ÉÉ 0
"s_IsFaceDragAndDropOverrideEnabled
ÑÑ 6
=
ÑÑ7 8
false
ÑÑ9 >
;
ÑÑ> ?
}
ÖÖ 
}
ÜÜ 
}
áá 	
static
ââ 
void
ââ 

OnSceneGUI
ââ 
(
ââ 
	SceneView
ââ (
	sceneView
ââ) 2
)
ââ2 3
{
ää 	
var
ãã 
evt
ãã 
=
ãã 
Event
ãã 
.
ãã 
current
ãã #
;
ãã# $
if
çç 
(
çç 
evt
çç 
.
çç 
type
çç 
==
çç 
	EventType
çç %
.
çç% &
DragUpdated
çç& 1
)
çç1 2
{
éé 
if
èè 
(
èè 
!
èè &
s_IsSceneViewDragAndDrop
èè -
)
èè- .&
s_IsSceneViewDragAndDrop
êê ,
=
êê- .
true
êê/ 3
;
êê3 4
int
íí 
submeshIndex
íí  
;
íí  !

GameObject
ìì 
go
ìì 
=
ìì 
HandleUtility
ìì  -
.
ìì- .
PickGameObject
ìì. <
(
ìì< =
evt
ìì= @
.
ìì@ A
mousePosition
ììA N
,
ììN O
out
ììP S
submeshIndex
ììT `
)
ìì` a
;
ììa b
SetMeshPreview
ïï 
(
ïï 
go
ïï !
!=
ïï" $
null
ïï% )
?
ïï* +
go
ïï, .
.
ïï. /
GetComponent
ïï/ ;
<
ïï; <
ProBuilderMesh
ïï< J
>
ïïJ K
(
ïïK L
)
ïïL M
:
ïïN O
null
ïïP T
)
ïïT U
;
ïïU V
if
óó 
(
óó 0
"s_IsFaceDragAndDropOverrideEnabled
óó 6
)
óó6 7
{
òò 
DragAndDrop
ôô 
.
ôô  

visualMode
ôô  *
=
ôô+ ,#
DragAndDropVisualMode
ôô- B
.
ôôB C
Copy
ôôC G
;
ôôG H
evt
öö 
.
öö 
Use
öö 
(
öö 
)
öö 
;
öö 
}
õõ 
}
úú 
else
ùù 
if
ùù 
(
ùù 
evt
ùù 
.
ùù 
type
ùù 
==
ùù  
	EventType
ùù! *
.
ùù* +

DragExited
ùù+ 5
)
ùù5 6
{
ûû 
if
üü 
(
üü 0
"s_IsFaceDragAndDropOverrideEnabled
üü 6
)
üü6 7
{
†† 
DragAndDrop
°° 
.
°°  

visualMode
°°  *
=
°°+ ,#
DragAndDropVisualMode
°°- B
.
°°B C
Copy
°°C G
;
°°G H
evt
¢¢ 
.
¢¢ 
Use
¢¢ 
(
¢¢ 
)
¢¢ 
;
¢¢ 
SetMeshPreview
££ "
(
££" #
null
££# '
)
££' (
;
££( )
}
§§ &
s_IsSceneViewDragAndDrop
¶¶ (
=
¶¶) *
false
¶¶+ 0
;
¶¶0 1
}
ßß 
else
®® 
if
®® 
(
®® 
evt
®® 
.
®® 
type
®® 
==
®®  
	EventType
®®! *
.
®®* +
DragPerform
®®+ 6
)
®®6 7
{
©© &
s_IsSceneViewDragAndDrop
™™ (
=
™™) *
false
™™+ 0
;
™™0 1
int
´´ 
submeshIndex
´´  
;
´´  !

GameObject
¨¨ 
go
¨¨ 
=
¨¨ 
HandleUtility
¨¨  -
.
¨¨- .
PickGameObject
¨¨. <
(
¨¨< =
evt
¨¨= @
.
¨¨@ A
mousePosition
¨¨A N
,
¨¨N O
out
¨¨P S
submeshIndex
¨¨T `
)
¨¨` a
;
¨¨a b
SetMeshPreview
≠≠ 
(
≠≠ 
go
≠≠ !
!=
≠≠" $
null
≠≠% )
?
≠≠* +
go
≠≠, .
.
≠≠. /
GetComponent
≠≠/ ;
<
≠≠; <
ProBuilderMesh
≠≠< J
>
≠≠J K
(
≠≠K L
)
≠≠L M
:
≠≠N O
null
≠≠P T
)
≠≠T U
;
≠≠U V
if
ØØ 
(
ØØ 
s_CurrentPreview
ØØ $
!=
ØØ% '
null
ØØ( ,
&&
ØØ- /0
"s_IsFaceDragAndDropOverrideEnabled
ØØ0 R
)
ØØR S
{
∞∞ 
UndoUtility
±± 
.
±±  
RecordObject
±±  ,
(
±±, -
s_CurrentPreview
±±- =
,
±±= >
$str
±±? R
)
±±R S
;
±±S T
UndoUtility
≤≤ 
.
≤≤  
RecordObject
≤≤  ,
(
≤≤, -
s_CurrentPreview
≤≤- =
.
≤≤= >
renderer
≤≤> F
,
≤≤F G
$str
≤≤H [
)
≤≤[ \
;
≤≤\ ]
s_CurrentPreview
¥¥ $
.
¥¥$ %
SetMaterial
¥¥% 0
(
¥¥0 1
s_CurrentPreview
¥¥1 A
.
¥¥A B#
selectedFacesInternal
¥¥B W
,
¥¥W X
s_PreviewMaterial
¥¥Y j
)
¥¥j k
;
¥¥k l!
InternalMeshUtility
∂∂ '
.
∂∂' ((
FilterUnusedSubmeshIndexes
∂∂( B
(
∂∂B C
s_CurrentPreview
∂∂C S
)
∂∂S T
;
∂∂T U
s_CurrentPreview
∏∏ $
.
∏∏$ %
ToMesh
∏∏% +
(
∏∏+ ,
)
∏∏, -
;
∏∏- .
s_CurrentPreview
ππ $
.
ππ$ %
Refresh
ππ% ,
(
ππ, -
)
ππ- .
;
ππ. /
s_CurrentPreview
∫∫ $
.
∫∫$ %
Optimize
∫∫% -
(
∫∫- .
)
∫∫. /
;
∫∫/ 0
evt
ºº 
.
ºº 
Use
ºº 
(
ºº 
)
ºº 
;
ºº 
}
ΩΩ 
SetMeshPreview
øø 
(
øø 
null
øø #
)
øø# $
;
øø$ %
}
¿¿ 
else
¡¡ 
if
¡¡ 
(
¡¡ 
evt
¡¡ 
.
¡¡ 
type
¡¡ 
==
¡¡  
	EventType
¡¡! *
.
¡¡* +
Repaint
¡¡+ 2
&&
¡¡3 50
"s_IsFaceDragAndDropOverrideEnabled
¡¡6 X
)
¡¡X Y
{
¬¬ 
if
√√ 
(
√√ 
s_PreviewMaterial
√√ %
.
√√% &
SetPass
√√& -
(
√√- .
$num
√√. /
)
√√/ 0
)
√√0 1
Graphics
ƒƒ 
.
ƒƒ 
DrawMeshNow
ƒƒ (
(
ƒƒ( )
s_PreviewMesh
ƒƒ) 6
,
ƒƒ6 7
s_Matrix
ƒƒ8 @
,
ƒƒ@ A
$num
ƒƒB C
)
ƒƒC D
;
ƒƒD E
}
≈≈ 
}
∆∆ 	
}
«« 
}»» ƒ”
ïD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\PolyShapeEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
[		 
CustomEditor		 
(		 
typeof		 
(		 
	PolyShape		 "
)		" #
)		# $
]		$ %
sealed

 

class

 
PolyShapeEditor

  
:

! "
Editor

# )
{ 
static 
Color 
k_HandleColor "
=# $
new% (
Color) .
(. /
$num/ 2
,2 3
$num4 7
,7 8
$num9 <
,< =
$num> @
)@ A
;A B
static 
Color 
k_HandleColorGreen '
=( )
new* -
Color. 3
(3 4
$num4 8
,8 9
$num: =
,= >
$num? B
,B C
$numD F
)F G
;G H
static 
Color !
k_HandleSelectedColor *
=+ ,
new- 0
Color1 6
(6 7
$num7 ;
,; <
$num= @
,@ A
$numB F
,F G
$numH J
)J K
;K L
static 
Color #
k_LineMaterialBaseColor ,
=- .
new/ 2
Color3 8
(8 9
$num9 ;
,; <
$num= A
/B C
$numD H
,H I
$numJ L
,L M
$numN P
)P Q
;Q R
static 
Color (
k_LineMaterialHighlightColor 1
=2 3
new4 7
Color8 =
(= >
$num> @
,@ A
$numB F
/G H
$numI M
,M N
$numO S
/T U
$numV Z
,Z [
$num\ ^
)^ _
;_ `
static 
Color &
k_InvalidLineMaterialColor /
=0 1
Color2 7
.7 8
red8 ;
;; <
const 
float 
k_HandleSize  
=! "
$num# '
;' (
Material 
m_LineMaterial 
;  
Mesh 

m_LineMesh 
= 
null 
; 
Plane 
m_Plane 
= 
new 
Plane !
(! "
Vector3" )
.) *
up* ,
,, -
Vector3. 5
.5 6
zero6 :
): ;
;; <
int 
m_ControlId 
; 
bool 
m_PlacingPoint 
= 
false #
;# $
int 
m_SelectedIndex 
= 
- 
$num  
;  !
float &
m_DistanceFromHeightHandle (
;( )
static   
float   
s_HeightMouseOffset   (
;  ( )
bool!! %
m_NextMouseUpAdvancesMode!! &
=!!' (
false!!) .
;!!. /
bool"" !
m_IsModifyingVertices"" "
=""# $
false""% *
;""* +
bool%% 
m_DrawHeightHandles%%  
=%%! "
true%%# '
;%%' (
	PolyShape'' 
polygon'' 
{(( 	
get)) 
{)) 
return)) 
target)) 
as))  "
	PolyShape))# ,
;)), -
})). /
}** 	
static,, 
Material,, '
CreateHighlightLineMaterial,, 3
(,,3 4
),,4 5
{-- 	
Material.. 
mat.. 
=.. 
new.. 
Material.. '
(..' (
Shader..( .
.... /
Find../ 3
(..3 4
$str..4 W
)..W X
)..X Y
;..Y Z
mat// 
.// 
SetColor// 
(// 
$str// %
,//% &(
k_LineMaterialHighlightColor//' C
)//C D
;//D E
mat00 
.00 
SetColor00 
(00 
$str00  
,00  !#
k_LineMaterialBaseColor00" 9
)009 :
;00: ;
return11 
mat11 
;11 
}22 	
void44 
OnEnable44 
(44 
)44 
{55 	
if66 
(66 
polygon66 
==66 
null66 
)66  
{77 
DestroyImmediate88  
(88  !
this88! %
)88% &
;88& '
return99 
;99 
}:: 
ProBuilderEditor<< 
.<< 
selectModeChanged<< .
+=<</ 1
OnSelectModeChanged<<2 E
;<<E F

m_LineMesh== 
=== 
new== 
Mesh== !
(==! "
)==" #
;==# $
m_LineMaterial>> 
=>> '
CreateHighlightLineMaterial>> 8
(>>8 9
)>>9 :
;>>: ;
Undo?? 
.?? 
undoRedoPerformed?? "
+=??# %
UndoRedoPerformed??& 7
;??7 8
	SceneViewAA 
.AA 
duringSceneGuiAA $
+=AA% '
DuringSceneGUIAA( 6
;AA6 7
DrawPolyLineEE 
(EE 
polygonEE  
.EE  !
m_PointsEE! )
)EE) *
;EE* +
EditorApplicationFF 
.FF 
updateFF $
+=FF% '
UpdateFF( .
;FF. /
	PolyShapeHH 
.HH 
PolyEditModeHH "
modeHH# '
=HH( )
polygonHH* 1
.HH1 2
polyEditModeHH2 >
;HH> ?
polygonII 
.II 
polyEditModeII  
=II! "
	PolyShapeII# ,
.II, -
PolyEditModeII- 9
.II9 :
NoneII: >
;II> ?
SetPolyEditModeJJ 
(JJ 
modeJJ  
)JJ  !
;JJ! "
}KK 	
voidMM 
	OnDisableMM 
(MM 
)MM 
{NN 	
ifPP 
(PP 
polygonPP 
!=PP 
nullPP 
&&PP  "
polygonPP# *
.PP* +
polyEditModePP+ 7
==PP8 :
	PolyShapePP; D
.PPD E
PolyEditModePPE Q
.PPQ R
EditPPR V
)PPV W
SetPolyEditModeQQ 
(QQ  
	PolyShapeQQ  )
.QQ) *
PolyEditModeQQ* 6
.QQ6 7
NoneQQ7 ;
)QQ; <
;QQ< =
ProBuilderEditorSS 
.SS 
selectModeChangedSS .
-=SS/ 1
OnSelectModeChangedSS2 E
;SSE F
	SceneViewUU 
.UU 
duringSceneGuiUU $
-=UU% '
DuringSceneGUIUU( 6
;UU6 7
DestroyImmediateYY 
(YY 

m_LineMeshYY '
)YY' (
;YY( )
DestroyImmediateZZ 
(ZZ 
m_LineMaterialZZ +
)ZZ+ ,
;ZZ, -
EditorApplication[[ 
.[[ 
update[[ $
-=[[% '
Update[[( .
;[[. /
Undo\\ 
.\\ 
undoRedoPerformed\\ "
-=\\# %
UndoRedoPerformed\\& 7
;\\7 8
}]] 	
public__ 
override__ 
void__ 
OnInspectorGUI__ +
(__+ ,
)__, -
{`` 	
switchaa 
(aa 
polygonaa 
.aa 
polyEditModeaa (
)aa( )
{bb 
casecc 
	PolyShapecc 
.cc 
PolyEditModecc +
.cc+ ,
Nonecc, 0
:cc0 1
{dd 
ifee 
(ee 
	GUILayoutee !
.ee! "
Buttonee" (
(ee( )
$stree) :
)ee: ;
)ee; <
SetPolyEditModeff '
(ff' (
	PolyShapeff( 1
.ff1 2
PolyEditModeff2 >
.ff> ?
Editff? C
)ffC D
;ffD E
EditorGUILayouthh #
.hh# $
HelpBoxhh$ +
(hh+ ,
$str	ii ´
,
ii´ ¨
MessageTypejj #
.jj# $
Warningjj$ +
)jj+ ,
;jj, -
breakll 
;ll 
}mm 
caseoo 
	PolyShapeoo 
.oo 
PolyEditModeoo +
.oo+ ,
Pathoo, 0
:oo0 1
{pp 
EditorGUILayoutqq #
.qq# $
HelpBoxqq$ +
(qq+ ,
$strqq, o
,qqo p
MessageTypeqqq |
.qq| }
Info	qq} Å
)
qqÅ Ç
;
qqÇ É
breakrr 
;rr 
}ss 
caseuu 
	PolyShapeuu 
.uu 
PolyEditModeuu +
.uu+ ,
Heightuu, 2
:uu2 3
{vv 
EditorGUILayoutww #
.ww# $
HelpBoxww$ +
(ww+ ,
$strww, r
,wwr s
MessageTypewwt 
.	ww Ä
Info
wwÄ Ñ
)
wwÑ Ö
;
wwÖ Ü
breakxx 
;xx 
}yy 
case{{ 
	PolyShape{{ 
.{{ 
PolyEditMode{{ +
.{{+ ,
Edit{{, 0
:{{0 1
{|| 
if}} 
(}} 
	GUILayout}} !
.}}! "
Button}}" (
(}}( )
$str}}) =
,}}= >
UI}}? A
.}}A B
EditorGUIUtility}}B R
.}}R S
GetActiveStyle}}S a
(}}a b
$str}}b j
)}}j k
)}}k l
)}}l m
SetPolyEditMode~~ '
(~~' (
	PolyShape~~( 1
.~~1 2
PolyEditMode~~2 >
.~~> ?
None~~? C
)~~C D
;~~D E
break 
; 
}
ÄÄ 
}
ÅÅ 
	EditorGUI
ÉÉ 
.
ÉÉ 
BeginChangeCheck
ÉÉ &
(
ÉÉ& '
)
ÉÉ' (
;
ÉÉ( )
float
ÖÖ 
extrude
ÖÖ 
=
ÖÖ 
polygon
ÖÖ #
.
ÖÖ# $
extrude
ÖÖ$ +
;
ÖÖ+ ,
extrude
ÜÜ 
=
ÜÜ 
EditorGUILayout
ÜÜ %
.
ÜÜ% &

FloatField
ÜÜ& 0
(
ÜÜ0 1
$str
ÜÜ1 <
,
ÜÜ< =
extrude
ÜÜ> E
)
ÜÜE F
;
ÜÜF G
bool
àà 
flipNormals
àà 
=
àà 
polygon
àà &
.
àà& '
flipNormals
àà' 2
;
àà2 3
flipNormals
ââ 
=
ââ 
EditorGUILayout
ââ )
.
ââ) *
Toggle
ââ* 0
(
ââ0 1
$str
ââ1 ?
,
ââ? @
flipNormals
ââA L
)
ââL M
;
ââM N
if
ãã 
(
ãã 
	EditorGUI
ãã 
.
ãã 
EndChangeCheck
ãã (
(
ãã( )
)
ãã) *
)
ãã* +
{
åå 
if
çç 
(
çç 
polygon
çç 
.
çç 
polyEditMode
çç (
==
çç) +
	PolyShape
çç, 5
.
çç5 6
PolyEditMode
çç6 B
.
ççB C
None
ççC G
)
ççG H
{
éé 
if
èè 
(
èè 
ProBuilderEditor
èè (
.
èè( )
instance
èè) 1
!=
èè2 4
null
èè5 9
)
èè9 :
ProBuilderEditor
êê (
.
êê( )
instance
êê) 1
.
êê1 2#
ClearElementSelection
êê2 G
(
êêG H
)
êêH I
;
êêI J
UndoUtility
íí 
.
íí  
RecordObject
íí  ,
(
íí, -
polygon
íí- 4
,
íí4 5
$str
íí6 U
)
ííU V
;
ííV W
UndoUtility
ìì 
.
ìì  
RecordObject
ìì  ,
(
ìì, -
polygon
ìì- 4
.
ìì4 5
mesh
ìì5 9
,
ìì9 :
$str
ìì; Z
)
ììZ [
;
ìì[ \
}
îî 
else
ïï 
{
ññ 
UndoUtility
óó 
.
óó  
RecordObject
óó  ,
(
óó, -
polygon
óó- 4
,
óó4 5
$str
óó6 U
)
óóU V
;
óóV W
}
òò 
polygon
öö 
.
öö 
extrude
öö 
=
öö  !
extrude
öö" )
;
öö) *
polygon
õõ 
.
õõ 
flipNormals
õõ #
=
õõ$ %
flipNormals
õõ& 1
;
õõ1 2"
RebuildPolyShapeMesh
ùù $
(
ùù$ %
polygon
ùù% ,
)
ùù, -
;
ùù- .
}
ûû 
}
°° 	
void
££ 
Update
££ 
(
££ 
)
££ 
{
§§ 	
if
•• 
(
•• 
polygon
•• 
!=
•• 
null
•• 
&&
••  "
polygon
••# *
.
••* +
polyEditMode
••+ 7
==
••8 :
	PolyShape
••; D
.
••D E
PolyEditMode
••E Q
.
••Q R
Path
••R V
&&
••W Y
m_LineMaterial
••Z h
!=
••i k
null
••l p
)
••p q
m_LineMaterial
¶¶ 
.
¶¶ 
SetFloat
¶¶ '
(
¶¶' (
$str
¶¶( 5
,
¶¶5 6
(
¶¶7 8
float
¶¶8 =
)
¶¶= >
EditorApplication
¶¶> O
.
¶¶O P
timeSinceStartup
¶¶P `
)
¶¶` a
;
¶¶a b
}
ßß 	
void
©© 
SetPolyEditMode
©© 
(
©© 
	PolyShape
©© &
.
©©& '
PolyEditMode
©©' 3
mode
©©4 8
)
©©8 9
{
™™ 	
	PolyShape
´´ 
.
´´ 
PolyEditMode
´´ "
old
´´# &
=
´´' (
polygon
´´) 0
.
´´0 1
polyEditMode
´´1 =
;
´´= >
if
≠≠ 
(
≠≠ 
mode
≠≠ 
!=
≠≠ 
old
≠≠ 
)
≠≠ 
{
ÆÆ 

GUIUtility
∞∞ 
.
∞∞ 

hotControl
∞∞ %
=
∞∞& '
$num
∞∞( )
;
∞∞) *
if
µµ 
(
µµ 
polygon
µµ 
.
µµ 
polyEditMode
µµ (
==
µµ) +
	PolyShape
µµ, 5
.
µµ5 6
PolyEditMode
µµ6 B
.
µµB C
None
µµC G
&&
µµH J
polygon
µµK R
.
µµR S
m_Points
µµS [
.
µµ[ \
Count
µµ\ a
>
µµb c
$num
µµd e
)
µµe f
{
∂∂ 
if
∑∑ 
(
∑∑ 
ProBuilderEditor
∑∑ (
.
∑∑( )
instance
∑∑) 1
!=
∑∑2 4
null
∑∑5 9
)
∑∑9 :
ProBuilderEditor
∏∏ (
.
∏∏( )
instance
∏∏) 1
.
∏∏1 2#
ClearElementSelection
∏∏2 G
(
∏∏G H
)
∏∏H I
;
∏∏I J
UndoUtility
∫∫ 
.
∫∫  
RecordObject
∫∫  ,
(
∫∫, -
polygon
∫∫- 4
,
∫∫4 5
$str
∫∫6 J
)
∫∫J K
;
∫∫K L
UndoUtility
ªª 
.
ªª  
RecordObject
ªª  ,
(
ªª, -
polygon
ªª- 4
.
ªª4 5
mesh
ªª5 9
,
ªª9 :
$str
ªª; O
)
ªªO P
;
ªªP Q
}
ºº 
polygon
ææ 
.
ææ 
polyEditMode
ææ $
=
ææ% &
mode
ææ' +
;
ææ+ ,
if
¿¿ 
(
¿¿ 
polygon
¿¿ 
.
¿¿ 
polyEditMode
¿¿ (
==
¿¿) +
	PolyShape
¿¿, 5
.
¿¿5 6
PolyEditMode
¿¿6 B
.
¿¿B C
None
¿¿C G
)
¿¿G H
ProBuilderEditor
¡¡ $
.
¡¡$ %

selectMode
¡¡% /
=
¡¡0 1
ProBuilderEditor
¡¡2 B
.
¡¡B C

selectMode
¡¡C M
&
¡¡N O
~
¡¡P Q
(
¡¡Q R

SelectMode
¡¡R \
.
¡¡\ ]
	InputTool
¡¡] f
)
¡¡f g
;
¡¡g h
else
¬¬ 
ProBuilderEditor
√√ $
.
√√$ %

selectMode
√√% /
=
√√0 1
ProBuilderEditor
√√2 B
.
√√B C

selectMode
√√C M
|
√√N O

SelectMode
√√P Z
.
√√Z [
	InputTool
√√[ d
;
√√d e
if
≈≈ 
(
≈≈ 
polygon
≈≈ 
.
≈≈ 
polyEditMode
≈≈ (
!=
≈≈) +
	PolyShape
≈≈, 5
.
≈≈5 6
PolyEditMode
≈≈6 B
.
≈≈B C
None
≈≈C G
)
≈≈G H
Tools
∆∆ 
.
∆∆ 
current
∆∆ !
=
∆∆" #
Tool
∆∆$ (
.
∆∆( )
None
∆∆) -
;
∆∆- .
if
…… 
(
…… 
old
…… 
==
…… 
	PolyShape
…… $
.
……$ %
PolyEditMode
……% 1
.
……1 2
Path
……2 6
&&
……7 9
mode
……: >
==
……? A
	PolyShape
……B K
.
……K L
PolyEditMode
……L X
.
……X Y
Height
……Y _
&&
……` b
Event
……c h
.
……h i
current
……i p
!=
……q s
null
……t x
)
……x y
{
   
Vector3
ÀÀ 
up
ÀÀ 
=
ÀÀ  
polygon
ÀÀ! (
.
ÀÀ( )
	transform
ÀÀ) 2
.
ÀÀ2 3
up
ÀÀ3 5
;
ÀÀ5 6
Vector3
ÃÃ 
origin
ÃÃ "
=
ÃÃ# $
polygon
ÃÃ% ,
.
ÃÃ, -
	transform
ÃÃ- 6
.
ÃÃ6 7
TransformPoint
ÃÃ7 E
(
ÃÃE F
Math
ÃÃF J
.
ÃÃJ K
Average
ÃÃK R
(
ÃÃR S
polygon
ÃÃS Z
.
ÃÃZ [
m_Points
ÃÃ[ c
)
ÃÃc d
)
ÃÃd e
;
ÃÃe f
Ray
ÕÕ 
r
ÕÕ 
=
ÕÕ 
HandleUtility
ÕÕ )
.
ÕÕ) * 
GUIPointToWorldRay
ÕÕ* <
(
ÕÕ< =
Event
ÕÕ= B
.
ÕÕB C
current
ÕÕC J
.
ÕÕJ K
mousePosition
ÕÕK X
)
ÕÕX Y
;
ÕÕY Z
Vector3
ŒŒ 
p
ŒŒ 
=
ŒŒ 
Math
ŒŒ  $
.
ŒŒ$ %#
GetNearestPointRayRay
ŒŒ% :
(
ŒŒ: ;
origin
ŒŒ; A
,
ŒŒA B
up
ŒŒC E
,
ŒŒE F
r
ŒŒG H
.
ŒŒH I
origin
ŒŒI O
,
ŒŒO P
r
ŒŒQ R
.
ŒŒR S
	direction
ŒŒS \
)
ŒŒ\ ]
;
ŒŒ] ^!
s_HeightMouseOffset
œœ '
=
œœ( )
polygon
œœ* 1
.
œœ1 2
extrude
œœ2 9
-
œœ: ;
ProGridsInterface
–– )
.
––) *
ProGridsSnap
––* 6
(
––6 7
Vector3
—— #
.
——# $
Distance
——$ ,
(
——, -
origin
——- 3
,
——3 4
p
——5 6
)
——6 7
*
——8 9
Mathf
——: ?
.
——? @
Sign
——@ D
(
——D E
Vector3
——E L
.
——L M
Dot
——M P
(
——P Q
p
——Q R
-
——S T
origin
——U [
,
——[ \
up
——] _
)
——_ `
)
——` a
)
——a b
;
——b c
}
““ "
RebuildPolyShapeMesh
‘‘ $
(
‘‘$ %
polygon
‘‘% ,
)
‘‘, -
;
‘‘- .
}
’’ 
}
÷÷ 	
public
ÿÿ 
void
ÿÿ "
RebuildPolyShapeMesh
ÿÿ (
(
ÿÿ( )
bool
ÿÿ) - 
vertexCountChanged
ÿÿ. @
=
ÿÿA B
false
ÿÿC H
)
ÿÿH I
{
ŸŸ 	
if
€€ 
(
€€ 
polygon
€€ 
==
€€ 
null
€€ 
)
€€  
return
‹‹ 
;
‹‹ 
DrawPolyLine
ﬁﬁ 
(
ﬁﬁ 
polygon
ﬁﬁ  
.
ﬁﬁ  !
m_Points
ﬁﬁ! )
)
ﬁﬁ) *
;
ﬁﬁ* +
if
‡‡ 
(
‡‡ 
polygon
‡‡ 
.
‡‡ 
polyEditMode
‡‡ $
!=
‡‡% '
	PolyShape
‡‡( 1
.
‡‡1 2
PolyEditMode
‡‡2 >
.
‡‡> ?
Path
‡‡? C
)
‡‡C D
{
·· 
var
‚‚ 
result
‚‚ 
=
‚‚ 
polygon
‚‚ $
.
‚‚$ %$
CreateShapeFromPolygon
‚‚% ;
(
‚‚; <
)
‚‚< =
;
‚‚= >
if
„„ 
(
„„ 
result
„„ 
.
„„ 
status
„„  
==
„„! #
ActionResult
„„$ 0
.
„„0 1
Status
„„1 7
.
„„7 8
Failure
„„8 ?
)
„„? @
{
‰‰ 
m_LineMaterial
ÂÂ "
.
ÂÂ" #
SetColor
ÂÂ# +
(
ÂÂ+ ,
$str
ÂÂ, 8
,
ÂÂ8 9(
k_InvalidLineMaterialColor
ÂÂ: T
)
ÂÂT U
;
ÂÂU V
m_LineMaterial
ÊÊ "
.
ÊÊ" #
SetColor
ÊÊ# +
(
ÊÊ+ ,
$str
ÊÊ, 3
,
ÊÊ3 4(
k_InvalidLineMaterialColor
ÊÊ5 O
)
ÊÊO P
;
ÊÊP Q!
m_DrawHeightHandles
ÈÈ '
=
ÈÈ( )
false
ÈÈ* /
;
ÈÈ/ 0
if
ÏÏ 
(
ÏÏ 
polygon
ÏÏ 
.
ÏÏ 
polyEditMode
ÏÏ +
==
ÏÏ, .
	PolyShape
ÏÏ/ 8
.
ÏÏ8 9
PolyEditMode
ÏÏ9 E
.
ÏÏE F
Height
ÏÏF L
)
ÏÏL M
{
ÌÌ 
SetPolyEditMode
ÓÓ '
(
ÓÓ' (
	PolyShape
ÓÓ( 1
.
ÓÓ1 2
PolyEditMode
ÓÓ2 >
.
ÓÓ> ?
Edit
ÓÓ? C
)
ÓÓC D
;
ÓÓD E
}
ÔÔ 
}
 
else
ÒÒ 
{
ÚÚ 
m_LineMaterial
ÙÙ "
.
ÙÙ" #
SetColor
ÙÙ# +
(
ÙÙ+ ,
$str
ÙÙ, 8
,
ÙÙ8 9*
k_LineMaterialHighlightColor
ÙÙ: V
)
ÙÙV W
;
ÙÙW X
m_LineMaterial
ıı "
.
ıı" #
SetColor
ıı# +
(
ıı+ ,
$str
ıı, 3
,
ıı3 4%
k_LineMaterialBaseColor
ıı5 L
)
ııL M
;
ııM N!
m_DrawHeightHandles
ˆˆ '
=
ˆˆ( )
true
ˆˆ* .
;
ˆˆ. /
}
˜˜ 
}
¯¯ 
ProBuilderEditor
¸¸ 
.
¸¸ 
Refresh
¸¸ $
(
¸¸$ %
)
¸¸% &
;
¸¸& '
}
˝˝ 	
void
ˇˇ 
DuringSceneGUI
ˇˇ 
(
ˇˇ 
	SceneView
ˇˇ %
	sceneView
ˇˇ& /
)
ˇˇ/ 0
{
ÄÄ 	
if
ÅÅ 
(
ÅÅ 
polygon
ÅÅ 
.
ÅÅ 
polyEditMode
ÅÅ $
==
ÅÅ% '
	PolyShape
ÅÅ( 1
.
ÅÅ1 2
PolyEditMode
ÅÅ2 >
.
ÅÅ> ?
None
ÅÅ? C
)
ÅÅC D
return
ÇÇ 
;
ÇÇ 
if
ÑÑ 
(
ÑÑ 
polygon
ÑÑ 
==
ÑÑ 
null
ÑÑ 
||
ÑÑ  "
Tools
ÑÑ# (
.
ÑÑ( )
current
ÑÑ) 0
!=
ÑÑ1 3
Tool
ÑÑ4 8
.
ÑÑ8 9
None
ÑÑ9 =
)
ÑÑ= >
{
ÖÖ 
SetPolyEditMode
ÜÜ 
(
ÜÜ  
	PolyShape
ÜÜ  )
.
ÜÜ) *
PolyEditMode
ÜÜ* 6
.
ÜÜ6 7
None
ÜÜ7 ;
)
ÜÜ; <
;
ÜÜ< =
return
áá 
;
áá 
}
àà 
if
ää 
(
ää 
m_LineMaterial
ää 
!=
ää !
null
ää" &
)
ää& '
{
ãã 
m_LineMaterial
åå 
.
åå 
SetPass
åå &
(
åå& '
$num
åå' (
)
åå( )
;
åå) *
Graphics
çç 
.
çç 
DrawMeshNow
çç $
(
çç$ %

m_LineMesh
çç% /
,
çç/ 0
polygon
çç1 8
.
çç8 9
	transform
çç9 B
.
ççB C 
localToWorldMatrix
ççC U
,
ççU V
$num
ççW X
)
ççX Y
;
ççY Z
}
éé 
Event
êê 
evt
êê 
=
êê 
Event
êê 
.
êê 
current
êê %
;
êê% &
if
ìì 
(
ìì '
m_NextMouseUpAdvancesMode
ìì )
&&
ìì* ,
evt
ìì- 0
.
ìì0 1
type
ìì1 5
==
ìì6 8
	EventType
ìì9 B
.
ììB C
MouseUp
ììC J
)
ììJ K
{
îî 
evt
ïï 
.
ïï 
Use
ïï 
(
ïï 
)
ïï 
;
ïï '
m_NextMouseUpAdvancesMode
óó )
=
óó* +
false
óó, 1
;
óó1 2
if
ôô 
(
ôô ,
SceneCameraIsAlignedWithPolyUp
ôô 2
(
ôô2 3
)
ôô3 4
)
ôô4 5
SetPolyEditMode
öö #
(
öö# $
	PolyShape
öö$ -
.
öö- .
PolyEditMode
öö. :
.
öö: ;
Edit
öö; ?
)
öö? @
;
öö@ A
else
õõ 
SetPolyEditMode
úú #
(
úú# $
	PolyShape
úú$ -
.
úú- .
PolyEditMode
úú. :
.
úú: ;
Height
úú; A
)
úúA B
;
úúB C
}
ùù 
if
üü 
(
üü #
m_IsModifyingVertices
üü %
&&
üü& (
(
üü) *
evt
†† 
.
†† 
type
†† 
==
†† 
	EventType
††  )
.
††) *
MouseUp
††* 1
||
††2 4
evt
°° 
.
°° 
type
°° 
==
°° 
	EventType
°°  )
.
°°) *
Ignore
°°* 0
||
°°1 3
evt
¢¢ 
.
¢¢ 
type
¢¢ 
==
¢¢ 
	EventType
¢¢  )
.
¢¢) *
KeyDown
¢¢* 1
||
¢¢2 4
evt
££ 
.
££ 
type
££ 
==
££ 
	EventType
££  )
.
££) *
KeyUp
££* /
)
££/ 0
)
££0 1
{
§§ $
OnFinishVertexMovement
•• &
(
••& '
)
••' (
;
••( )
}
¶¶ !
DoExistingPointsGUI
®® 
(
®®  
)
®®  !
;
®®! "
if
™™ 
(
™™ 
evt
™™ 
.
™™ 
type
™™ 
==
™™ 
	EventType
™™ %
.
™™% &
KeyDown
™™& -
)
™™- .
HandleKeyEvent
´´ 
(
´´ 
evt
´´ "
)
´´" #
;
´´# $
if
≠≠ 
(
≠≠ !
EditorHandleUtility
≠≠ #
.
≠≠# $
SceneViewInUse
≠≠$ 2
(
≠≠2 3
evt
≠≠3 6
)
≠≠6 7
)
≠≠7 8
return
ÆÆ 
;
ÆÆ 
m_ControlId
∞∞ 
=
∞∞ 

GUIUtility
∞∞ $
.
∞∞$ %
GetControlID
∞∞% 1
(
∞∞1 2
	FocusType
∞∞2 ;
.
∞∞; <
Passive
∞∞< C
)
∞∞C D
;
∞∞D E
if
±± 
(
±± 
evt
±± 
.
±± 
type
±± 
==
±± 
	EventType
±± %
.
±±% &
Layout
±±& ,
)
±±, -
HandleUtility
≤≤ 
.
≤≤ 
AddDefaultControl
≤≤ /
(
≤≤/ 0
m_ControlId
≤≤0 ;
)
≤≤; <
;
≤≤< =
DoPointPlacement
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥ 
}
µµ 	
Vector3
∏∏ "
GetPointInLocalSpace
∏∏ $
(
∏∏$ %
Vector3
∏∏% ,
point
∏∏- 2
)
∏∏2 3
{
ππ 	
var
∫∫ 
trs
∫∫ 
=
∫∫ 
polygon
∫∫ 
.
∫∫ 
	transform
∫∫ '
;
∫∫' (
if
ºº 
(
ºº 
polygon
ºº 
.
ºº 
isOnGrid
ºº  
)
ºº  !
{
ΩΩ 
Vector3
ææ 
snapMask
ææ  
=
ææ! " 
ProBuilderSnapping
ææ# 5
.
ææ5 60
"GetSnappingMaskBasedOnNormalVector
ææ6 X
(
ææX Y
m_Plane
ææY `
.
ææ` a
normal
ææa g
)
ææg h
;
ææh i
return
øø 
trs
øø 
.
øø #
InverseTransformPoint
øø 0
(
øø0 1
ProGridsInterface
øø1 B
.
øøB C
ProGridsSnap
øøC O
(
øøO P
point
øøP U
,
øøU V
snapMask
øøW _
)
øø_ `
)
øø` a
;
øøa b
}
¿¿ 
return
¬¬ 
trs
¬¬ 
.
¬¬ #
InverseTransformPoint
¬¬ ,
(
¬¬, -
point
¬¬- 2
)
¬¬2 3
;
¬¬3 4
}
√√ 	
void
≈≈ 
DoPointPlacement
≈≈ 
(
≈≈ 
)
≈≈ 
{
∆∆ 	
Event
«« 
evt
«« 
=
«« 
Event
«« 
.
«« 
current
«« %
;
««% &
	EventType
»» 
	eventType
»» 
=
»»  !
evt
»»" %
.
»»% &
type
»»& *
;
»»* +
if
   
(
   
m_PlacingPoint
   
)
   
{
ÀÀ 
Ray
ÃÃ 
ray
ÃÃ 
=
ÃÃ 
HandleUtility
ÃÃ '
.
ÃÃ' ( 
GUIPointToWorldRay
ÃÃ( :
(
ÃÃ: ;
evt
ÃÃ; >
.
ÃÃ> ?
mousePosition
ÃÃ? L
)
ÃÃL M
;
ÃÃM N
if
ŒŒ 
(
ŒŒ 
	eventType
ŒŒ 
==
ŒŒ  
	EventType
ŒŒ! *
.
ŒŒ* +
	MouseDrag
ŒŒ+ 4
)
ŒŒ4 5
{
œœ 
float
–– 
hitDistance
–– %
=
––& '
Mathf
––( -
.
––- .
Infinity
––. 6
;
––6 7
if
““ 
(
““ 
m_Plane
““ 
.
““  
Raycast
““  '
(
““' (
ray
““( +
,
““+ ,
out
““- 0
hitDistance
““1 <
)
““< =
)
““= >
{
”” 
evt
‘‘ 
.
‘‘ 
Use
‘‘ 
(
‘‘  
)
‘‘  !
;
‘‘! "
polygon
’’ 
.
’’  
m_Points
’’  (
[
’’( )
m_SelectedIndex
’’) 8
]
’’8 9
=
’’: ;"
GetPointInLocalSpace
’’< P
(
’’P Q
ray
’’Q T
.
’’T U
GetPoint
’’U ]
(
’’] ^
hitDistance
’’^ i
)
’’i j
)
’’j k
;
’’k l"
RebuildPolyShapeMesh
÷÷ ,
(
÷÷, -
false
÷÷- 2
)
÷÷2 3
;
÷÷3 4
	SceneView
◊◊ !
.
◊◊! "

RepaintAll
◊◊" ,
(
◊◊, -
)
◊◊- .
;
◊◊. /
}
ÿÿ 
}
ŸŸ 
if
€€ 
(
€€ 
	eventType
€€ 
==
€€  
	EventType
€€! *
.
€€* +
MouseUp
€€+ 2
||
€€3 5
	eventType
‹‹ 
==
‹‹  
	EventType
‹‹! *
.
‹‹* +
Ignore
‹‹+ 1
||
‹‹2 4
	eventType
›› 
==
››  
	EventType
››! *
.
››* +
KeyDown
››+ 2
||
››3 5
	eventType
ﬁﬁ 
==
ﬁﬁ  
	EventType
ﬁﬁ! *
.
ﬁﬁ* +
KeyUp
ﬁﬁ+ 0
)
ﬁﬁ0 1
{
ﬂﬂ 
evt
‡‡ 
.
‡‡ 
Use
‡‡ 
(
‡‡ 
)
‡‡ 
;
‡‡ 
m_PlacingPoint
·· "
=
··# $
false
··% *
;
··* +
m_SelectedIndex
‚‚ #
=
‚‚$ %
-
‚‚& '
$num
‚‚' (
;
‚‚( )
	SceneView
„„ 
.
„„ 

RepaintAll
„„ (
(
„„( )
)
„„) *
;
„„* +
}
‰‰ 
}
ÂÂ 
else
ÊÊ 
if
ÊÊ 
(
ÊÊ 
polygon
ÊÊ 
.
ÊÊ 
polyEditMode
ÊÊ )
==
ÊÊ* ,
	PolyShape
ÊÊ- 6
.
ÊÊ6 7
PolyEditMode
ÊÊ7 C
.
ÊÊC D
Path
ÊÊD H
)
ÊÊH I
{
ÁÁ 
if
ËË 
(
ËË 
	eventType
ËË 
==
ËË  
	EventType
ËË! *
.
ËË* +
	MouseDown
ËË+ 4
&&
ËË5 7
HandleUtility
ËË8 E
.
ËËE F
nearestControl
ËËF T
==
ËËU W
m_ControlId
ËËX c
)
ËËc d
{
ÈÈ 
if
ÍÍ 
(
ÍÍ 
polygon
ÍÍ 
.
ÍÍ  
m_Points
ÍÍ  (
.
ÍÍ( )
Count
ÍÍ) .
<
ÍÍ/ 0
$num
ÍÍ1 2
)
ÍÍ2 3
SetupInputPlane
ÎÎ '
(
ÎÎ' (
evt
ÎÎ( +
.
ÎÎ+ ,
mousePosition
ÎÎ, 9
)
ÎÎ9 :
;
ÎÎ: ;
float
ÌÌ 
hitDistance
ÌÌ %
=
ÌÌ& '
Mathf
ÌÌ( -
.
ÌÌ- .
Infinity
ÌÌ. 6
;
ÌÌ6 7
Ray
ÔÔ 
ray
ÔÔ 
=
ÔÔ 
HandleUtility
ÔÔ +
.
ÔÔ+ , 
GUIPointToWorldRay
ÔÔ, >
(
ÔÔ> ?
evt
ÔÔ? B
.
ÔÔB C
mousePosition
ÔÔC P
)
ÔÔP Q
;
ÔÔQ R
if
ÒÒ 
(
ÒÒ 
m_Plane
ÒÒ 
.
ÒÒ  
Raycast
ÒÒ  '
(
ÒÒ' (
ray
ÒÒ( +
,
ÒÒ+ ,
out
ÒÒ- 0
hitDistance
ÒÒ1 <
)
ÒÒ< =
)
ÒÒ= >
{
ÚÚ 
UndoUtility
ÛÛ #
.
ÛÛ# $
RecordObject
ÛÛ$ 0
(
ÛÛ0 1
polygon
ÛÛ1 8
,
ÛÛ8 9
$str
ÛÛ: S
)
ÛÛS T
;
ÛÛT U
Vector3
ıı 
hit
ıı  #
=
ıı$ %
ray
ıı& )
.
ıı) *
GetPoint
ıı* 2
(
ıı2 3
hitDistance
ıı3 >
)
ıı> ?
;
ıı? @
if
˜˜ 
(
˜˜ 
polygon
˜˜ #
.
˜˜# $
m_Points
˜˜$ ,
.
˜˜, -
Count
˜˜- 2
<
˜˜3 4
$num
˜˜5 6
)
˜˜6 7
{
¯¯ 
polygon
˘˘ #
.
˘˘# $
	transform
˘˘$ -
.
˘˘- .
position
˘˘. 6
=
˘˘7 8
polygon
˘˘9 @
.
˘˘@ A
isOnGrid
˘˘A I
?
˘˘J K
ProGridsInterface
˘˘L ]
.
˘˘] ^
ProGridsSnap
˘˘^ j
(
˘˘j k
hit
˘˘k n
)
˘˘n o
:
˘˘p q
hit
˘˘r u
;
˘˘u v
Vector3
˚˚ #%
cameraFacingPlaneNormal
˚˚$ ;
=
˚˚< =
m_Plane
˚˚> E
.
˚˚E F
normal
˚˚F L
;
˚˚L M
if
¸¸ 
(
¸¸  
Vector3
¸¸  '
.
¸¸' (
Dot
¸¸( +
(
¸¸+ ,%
cameraFacingPlaneNormal
¸¸, C
,
¸¸C D
	SceneView
¸¸E N
.
¸¸N O!
lastActiveSceneView
¸¸O b
.
¸¸b c
camera
¸¸c i
.
¸¸i j
	transform
¸¸j s
.
¸¸s t
forward
¸¸t {
)
¸¸{ |
>
¸¸} ~
$num¸¸ Å
)¸¸Å Ç%
cameraFacingPlaneNormal
˝˝  7
*=
˝˝8 :
-
˝˝; <
$num
˝˝< =
;
˝˝= >
polygon
ˇˇ #
.
ˇˇ# $
	transform
ˇˇ$ -
.
ˇˇ- .
rotation
ˇˇ. 6
=
ˇˇ7 8

Quaternion
ˇˇ9 C
.
ˇˇC D
LookRotation
ˇˇD P
(
ˇˇP Q%
cameraFacingPlaneNormal
ˇˇQ h
)
ˇˇh i
*
ˇˇj k

Quaternion
ˇˇl v
.
ˇˇv w
Euler
ˇˇw |
(
ˇˇ| }
newˇˇ} Ä
Vector3ˇˇÅ à
(ˇˇà â
$numˇˇâ å
,ˇˇå ç
$numˇˇé ê
,ˇˇê ë
$numˇˇí î
)ˇˇî ï
)ˇˇï ñ
;ˇˇñ ó
}
ÄÄ 
Vector3
ÇÇ 
point
ÇÇ  %
=
ÇÇ& '"
GetPointInLocalSpace
ÇÇ( <
(
ÇÇ< =
hit
ÇÇ= @
)
ÇÇ@ A
;
ÇÇA B
if
ÑÑ 
(
ÑÑ 
polygon
ÑÑ #
.
ÑÑ# $
m_Points
ÑÑ$ ,
.
ÑÑ, -
Count
ÑÑ- 2
>
ÑÑ3 4
$num
ÑÑ5 6
&&
ÑÑ7 9
Math
ÑÑ: >
.
ÑÑ> ?
Approx3
ÑÑ? F
(
ÑÑF G
polygon
ÑÑG N
.
ÑÑN O
m_Points
ÑÑO W
[
ÑÑW X
$num
ÑÑX Y
]
ÑÑY Z
,
ÑÑZ [
point
ÑÑ\ a
)
ÑÑa b
)
ÑÑb c
{
ÖÖ '
m_NextMouseUpAdvancesMode
ÜÜ 5
=
ÜÜ6 7
true
ÜÜ8 <
;
ÜÜ< =
return
áá "
;
áá" #
}
àà 
polygon
ää 
.
ää  
m_Points
ää  (
.
ää( )
Add
ää) ,
(
ää, -
point
ää- 2
)
ää2 3
;
ää3 4
m_PlacingPoint
åå &
=
åå' (
true
åå) -
;
åå- .
m_SelectedIndex
çç '
=
çç( )
polygon
çç* 1
.
çç1 2
m_Points
çç2 :
.
çç: ;
Count
çç; @
-
ççA B
$num
ççC D
;
ççD E"
RebuildPolyShapeMesh
éé ,
(
éé, -
polygon
éé- 4
)
éé4 5
;
éé5 6
evt
êê 
.
êê 
Use
êê 
(
êê  
)
êê  !
;
êê! "
}
ëë 
}
íí 
}
ìì 
else
îî 
if
îî 
(
îî 
polygon
îî 
.
îî 
polyEditMode
îî )
==
îî* ,
	PolyShape
îî- 6
.
îî6 7
PolyEditMode
îî7 C
.
îîC D
Edit
îîD H
)
îîH I
{
ïï 
if
ññ 
(
ññ 
polygon
ññ 
.
ññ 
m_Points
ññ $
.
ññ$ %
Count
ññ% *
<
ññ+ ,
$num
ññ- .
)
ññ. /
{
óó 
SetPolyEditMode
òò #
(
òò# $
	PolyShape
òò$ -
.
òò- .
PolyEditMode
òò. :
.
òò: ;
Path
òò; ?
)
òò? @
;
òò@ A
return
ôô 
;
ôô 
}
öö 
if
úú 
(
úú (
m_DistanceFromHeightHandle
úú .
>
úú/ 0
PreferenceKeys
úú1 ?
.
úú? @+
k_MaxPointDistanceFromControl
úú@ ]
)
úú] ^
{
ùù 
int
üü 
index
üü 
;
üü 
float
†† 
distanceToLine
†† (
;
††( )
Vector3
¢¢ 
p
¢¢ 
=
¢¢ !
EditorHandleUtility
¢¢  3
.
¢¢3 4$
ClosestPointToPolyLine
¢¢4 J
(
¢¢J K
polygon
¢¢K R
.
¢¢R S
m_Points
¢¢S [
,
¢¢[ \
out
¢¢] `
index
¢¢a f
,
¢¢f g
out
¢¢h k
distanceToLine
¢¢l z
,
¢¢z {
true¢¢| Ä
,¢¢Ä Å
polygon¢¢Ç â
.¢¢â ä
	transform¢¢ä ì
)¢¢ì î
;¢¢î ï
Vector3
££ 
wp
££ 
=
££  
polygon
££! (
.
££( )
	transform
££) 2
.
££2 3
TransformPoint
££3 A
(
££A B
p
££B C
)
££C D
;
££D E
Vector2
•• 
ga
•• 
=
••  
HandleUtility
••! .
.
••. /
WorldToGUIPoint
••/ >
(
••> ?
polygon
••? F
.
••F G
	transform
••G P
.
••P Q
TransformPoint
••Q _
(
••_ `
polygon
••` g
.
••g h
m_Points
••h p
[
••p q
index
••q v
%
••w x
polygon••y Ä
.••Ä Å
m_Points••Å â
.••â ä
Count••ä è
]••è ê
)••ê ë
)••ë í
;••í ì
Vector2
¶¶ 
gb
¶¶ 
=
¶¶  
HandleUtility
¶¶! .
.
¶¶. /
WorldToGUIPoint
¶¶/ >
(
¶¶> ?
polygon
¶¶? F
.
¶¶F G
	transform
¶¶G P
.
¶¶P Q
TransformPoint
¶¶Q _
(
¶¶_ `
polygon
¶¶` g
.
¶¶g h
m_Points
¶¶h p
[
¶¶p q
(
¶¶q r
index
¶¶r w
-
¶¶x y
$num
¶¶z {
)
¶¶{ |
]
¶¶| }
)
¶¶} ~
)
¶¶~ 
;¶¶ Ä
Vector2
®® 
mouse
®® !
=
®®" #
evt
®®$ '
.
®®' (
mousePosition
®®( 5
;
®®5 6
float
™™ 
distanceToVertex
™™ *
=
™™+ ,
Mathf
™™- 2
.
™™2 3
Min
™™3 6
(
™™6 7
Vector2
™™7 >
.
™™> ?
Distance
™™? G
(
™™G H
mouse
™™H M
,
™™M N
ga
™™O Q
)
™™Q R
,
™™R S
Vector2
™™T [
.
™™[ \
Distance
™™\ d
(
™™d e
mouse
™™e j
,
™™j k
gb
™™l n
)
™™n o
)
™™o p
;
™™p q
if
¨¨ 
(
¨¨ 
distanceToVertex
¨¨ (
>
¨¨) *
PreferenceKeys
¨¨+ 9
.
¨¨9 :+
k_MaxPointDistanceFromControl
¨¨: W
&&
¨¨X Z
distanceToLine
¨¨[ i
<
¨¨j k
PreferenceKeys
¨¨l z
.
¨¨z {,
k_MaxPointDistanceFromControl¨¨{ ò
)¨¨ò ô
{
≠≠ 
Handles
ÆÆ 
.
ÆÆ  
color
ÆÆ  %
=
ÆÆ& '
Color
ÆÆ( -
.
ÆÆ- .
green
ÆÆ. 3
;
ÆÆ3 4
Handles
ØØ 
.
ØØ  
DotHandleCap
ØØ  ,
(
ØØ, -
-
ØØ- .
$num
ØØ. /
,
ØØ/ 0
wp
ØØ1 3
,
ØØ3 4

Quaternion
ØØ5 ?
.
ØØ? @
identity
ØØ@ H
,
ØØH I
HandleUtility
ØØJ W
.
ØØW X
GetHandleSize
ØØX e
(
ØØe f
wp
ØØf h
)
ØØh i
*
ØØj k
k_HandleSize
ØØl x
,
ØØx y
evt
ØØz }
.
ØØ} ~
typeØØ~ Ç
)ØØÇ É
;ØØÉ Ñ
if
±± 
(
±± 
evt
±± 
.
±±  
type
±±  $
==
±±% '
	EventType
±±( 1
.
±±1 2
	MouseDown
±±2 ;
&&
±±< >
HandleUtility
±±? L
.
±±L M
nearestControl
±±M [
==
±±\ ^
m_ControlId
±±_ j
)
±±j k
{
≤≤ 
evt
≥≥ 
.
≥≥  
Use
≥≥  #
(
≥≥# $
)
≥≥$ %
;
≥≥% &
UndoUtility
µµ '
.
µµ' (
RecordObject
µµ( 4
(
µµ4 5
polygon
µµ5 <
,
µµ< =
$str
µµ> L
)
µµL M
;
µµM N
polygon
∂∂ #
.
∂∂# $
m_Points
∂∂$ ,
.
∂∂, -
Insert
∂∂- 3
(
∂∂3 4
index
∂∂4 9
,
∂∂9 :
p
∂∂; <
)
∂∂< =
;
∂∂= >
m_SelectedIndex
∑∑ +
=
∑∑, -
index
∑∑. 3
;
∑∑3 4
m_PlacingPoint
∏∏ *
=
∏∏+ ,
true
∏∏- 1
;
∏∏1 2"
RebuildPolyShapeMesh
ππ 0
(
ππ0 1
true
ππ1 5
)
ππ5 6
;
ππ6 7#
OnBeginVertexMovement
∫∫ 1
(
∫∫1 2
)
∫∫2 3
;
∫∫3 4
}
ªª 
Handles
ΩΩ 
.
ΩΩ  
color
ΩΩ  %
=
ΩΩ& '
Color
ΩΩ( -
.
ΩΩ- .
white
ΩΩ. 3
;
ΩΩ3 4
}
ææ 
}
øø 
}
¿¿ 
}
¡¡ 	
void
√√ 
SetupInputPlane
√√ 
(
√√ 
Vector2
√√ $
mousePosition
√√% 2
)
√√2 3
{
ƒƒ 	
m_Plane
≈≈ 
=
≈≈ !
EditorHandleUtility
≈≈ )
.
≈≈) *
FindBestPlane
≈≈* 7
(
≈≈7 8
mousePosition
≈≈8 E
)
≈≈E F
;
≈≈F G
var
«« 
planeNormal
«« 
=
«« 
m_Plane
«« %
.
««% &
normal
««& ,
;
««, -
var
»» 
planeCenter
»» 
=
»» 
m_Plane
»» %
.
»»% &
normal
»»& ,
*
»»- .
-
»»/ 0
m_Plane
»»0 7
.
»»7 8
distance
»»8 @
;
»»@ A
if
ÀÀ 
(
ÀÀ 
Math
ÀÀ 
.
ÀÀ 
IsCardinalAxis
ÀÀ #
(
ÀÀ# $
planeNormal
ÀÀ$ /
)
ÀÀ/ 0
)
ÀÀ0 1
{
ÃÃ 
const
ÕÕ 
float
ÕÕ 
epsilon
ÕÕ #
=
ÕÕ$ %
$num
ÕÕ& -
;
ÕÕ- .
float
ŒŒ 
snapVal
ŒŒ 
=
ŒŒ 
Mathf
ŒŒ  %
.
ŒŒ% &
Abs
ŒŒ& )
(
ŒŒ) *
ProGridsInterface
ŒŒ* ;
.
ŒŒ; <
	SnapValue
ŒŒ< E
(
ŒŒE F
)
ŒŒF G
)
ŒŒG H
;
ŒŒH I
float
œœ 
rem
œœ 
=
œœ 
Mathf
œœ !
.
œœ! "
Abs
œœ" %
(
œœ% &
snapVal
œœ& -
-
œœ. /
(
œœ0 1
Vector3
œœ1 8
.
œœ8 9
Scale
œœ9 >
(
œœ> ?
planeNormal
œœ? J
,
œœJ K
planeCenter
œœL W
)
œœW X
.
œœX Y
	magnitude
œœY b
%
œœc d
snapVal
œœe l
)
œœl m
)
œœm n
;
œœn o
polygon
–– 
.
–– 
isOnGrid
––  
=
––! "
(
––# $
rem
––$ '
<
––( )
epsilon
––* 1
||
––2 4
Mathf
––5 :
.
––: ;
Abs
––; >
(
––> ?
snapVal
––? F
-
––G H
rem
––I L
)
––L M
<
––N O
epsilon
––P W
)
––W X
;
––X Y
}
—— 
else
““ 
{
”” 
polygon
‘‘ 
.
‘‘ 
isOnGrid
‘‘  
=
‘‘! "
false
‘‘# (
;
‘‘( )
}
’’ 
}
÷÷ 	
void
ÿÿ !
DoExistingPointsGUI
ÿÿ  
(
ÿÿ  !
)
ÿÿ! "
{
ŸŸ 	
	Transform
⁄⁄ 
trs
⁄⁄ 
=
⁄⁄ 
polygon
⁄⁄ #
.
⁄⁄# $
	transform
⁄⁄$ -
;
⁄⁄- .
int
€€ 
len
€€ 
=
€€ 
polygon
€€ 
.
€€ 
m_Points
€€ &
.
€€& '
Count
€€' ,
;
€€, -
Vector3
›› 
up
›› 
=
›› 
polygon
››  
.
››  !
	transform
››! *
.
››* +
up
››+ -
;
››- .
Vector3
ﬁﬁ 
right
ﬁﬁ 
=
ﬁﬁ 
polygon
ﬁﬁ #
.
ﬁﬁ# $
	transform
ﬁﬁ$ -
.
ﬁﬁ- .
right
ﬁﬁ. 3
;
ﬁﬁ3 4
Vector3
ﬂﬂ 
forward
ﬂﬂ 
=
ﬂﬂ 
polygon
ﬂﬂ %
.
ﬂﬂ% &
	transform
ﬂﬂ& /
.
ﬂﬂ/ 0
forward
ﬂﬂ0 7
;
ﬂﬂ7 8
Vector3
‡‡ 
center
‡‡ 
=
‡‡ 
Vector3
‡‡ $
.
‡‡$ %
zero
‡‡% )
;
‡‡) *
Event
‚‚ 
evt
‚‚ 
=
‚‚ 
Event
‚‚ 
.
‚‚ 
current
‚‚ %
;
‚‚% &
bool
‰‰ 
used
‰‰ 
=
‰‰ 
evt
‰‰ 
.
‰‰ 
type
‰‰  
==
‰‰! #
	EventType
‰‰$ -
.
‰‰- .
Used
‰‰. 2
;
‰‰2 3
if
ÊÊ 
(
ÊÊ 
!
ÊÊ 
used
ÊÊ 
&&
ÊÊ 
(
ÁÁ 
evt
ÁÁ 
.
ÁÁ 
type
ÁÁ 
==
ÁÁ 
	EventType
ÁÁ &
.
ÁÁ& '
	MouseDown
ÁÁ' 0
&&
ÁÁ1 3
evt
ËË 
.
ËË 
button
ËË 
==
ËË 
$num
ËË  
&&
ËË! #
!
ÈÈ !
EditorHandleUtility
ÈÈ %
.
ÈÈ% &
IsAppendModifier
ÈÈ& 6
(
ÈÈ6 7
evt
ÈÈ7 :
.
ÈÈ: ;
	modifiers
ÈÈ; D
)
ÈÈD E
)
ÈÈE F
)
ÈÈF G
{
ÍÍ 
m_SelectedIndex
ÎÎ 
=
ÎÎ  !
-
ÎÎ" #
$num
ÎÎ# $
;
ÎÎ$ %
Repaint
ÏÏ 
(
ÏÏ 
)
ÏÏ 
;
ÏÏ 
}
ÌÌ 
if
ÔÔ 
(
ÔÔ 
polygon
ÔÔ 
.
ÔÔ 
polyEditMode
ÔÔ $
==
ÔÔ% '
	PolyShape
ÔÔ( 1
.
ÔÔ1 2
PolyEditMode
ÔÔ2 >
.
ÔÔ> ?
Height
ÔÔ? E
)
ÔÔE F
{
 
if
ÒÒ 
(
ÒÒ 
!
ÒÒ 
used
ÒÒ 
&&
ÒÒ 
evt
ÒÒ  
.
ÒÒ  !
type
ÒÒ! %
==
ÒÒ& (
	EventType
ÒÒ) 2
.
ÒÒ2 3
MouseUp
ÒÒ3 :
&&
ÒÒ; =
evt
ÒÒ> A
.
ÒÒA B
button
ÒÒB H
==
ÒÒI K
$num
ÒÒL M
&&
ÒÒN P
!
ÒÒQ R!
EditorHandleUtility
ÒÒR e
.
ÒÒe f
IsAppendModifier
ÒÒf v
(
ÒÒv w
evt
ÒÒw z
.
ÒÒz {
	modifiersÒÒ{ Ñ
)ÒÒÑ Ö
)ÒÒÖ Ü
{
ÚÚ 
evt
ÛÛ 
.
ÛÛ 
Use
ÛÛ 
(
ÛÛ 
)
ÛÛ 
;
ÛÛ 
SetPolyEditMode
ÙÙ #
(
ÙÙ# $
	PolyShape
ÙÙ$ -
.
ÙÙ- .
PolyEditMode
ÙÙ. :
.
ÙÙ: ;
Edit
ÙÙ; ?
)
ÙÙ? @
;
ÙÙ@ A
}
ıı 
bool
˜˜ 

sceneInUse
˜˜ 
=
˜˜  !!
EditorHandleUtility
˜˜" 5
.
˜˜5 6
SceneViewInUse
˜˜6 D
(
˜˜D E
evt
˜˜E H
)
˜˜H I
;
˜˜I J
Ray
¯¯ 
r
¯¯ 
=
¯¯ 
HandleUtility
¯¯ %
.
¯¯% & 
GUIPointToWorldRay
¯¯& 8
(
¯¯8 9
evt
¯¯9 <
.
¯¯< =
mousePosition
¯¯= J
)
¯¯J K
;
¯¯K L
Vector3
˙˙ 
origin
˙˙ 
=
˙˙  
polygon
˙˙! (
.
˙˙( )
	transform
˙˙) 2
.
˙˙2 3
TransformPoint
˙˙3 A
(
˙˙A B
Math
˙˙B F
.
˙˙F G
Average
˙˙G N
(
˙˙N O
polygon
˙˙O V
.
˙˙V W
m_Points
˙˙W _
)
˙˙_ `
)
˙˙` a
;
˙˙a b
float
˚˚ 
extrude
˚˚ 
=
˚˚ 
polygon
˚˚  '
.
˚˚' (
extrude
˚˚( /
;
˚˚/ 0
if
˝˝ 
(
˝˝ 
evt
˝˝ 
.
˝˝ 
type
˝˝ 
==
˝˝ 
	EventType
˝˝  )
.
˝˝) *
	MouseMove
˝˝* 3
&&
˝˝4 6
!
˝˝7 8

sceneInUse
˝˝8 B
)
˝˝B C
{
˛˛ 
Vector3
ˇˇ 
p
ˇˇ 
=
ˇˇ 
Math
ˇˇ  $
.
ˇˇ$ %#
GetNearestPointRayRay
ˇˇ% :
(
ˇˇ: ;
origin
ˇˇ; A
,
ˇˇA B
up
ˇˇC E
,
ˇˇE F
r
ˇˇG H
.
ˇˇH I
origin
ˇˇI O
,
ˇˇO P
r
ˇˇQ R
.
ˇˇR S
	direction
ˇˇS \
)
ˇˇ\ ]
;
ˇˇ] ^
extrude
ÄÄ 
=
ÄÄ 
ProGridsInterface
ÄÄ /
.
ÄÄ/ 0
ProGridsSnap
ÄÄ0 <
(
ÄÄ< =!
s_HeightMouseOffset
ÄÄ= P
+
ÄÄQ R
Vector3
ÄÄS Z
.
ÄÄZ [
Distance
ÄÄ[ c
(
ÄÄc d
origin
ÄÄd j
,
ÄÄj k
p
ÄÄl m
)
ÄÄm n
*
ÄÄo p
Mathf
ÄÄq v
.
ÄÄv w
Sign
ÄÄw {
(
ÄÄ{ |
Vector3ÄÄ| É
.ÄÄÉ Ñ
DotÄÄÑ á
(ÄÄá à
pÄÄà â
-ÄÄä ã
originÄÄå í
,ÄÄí ì
upÄÄî ñ
)ÄÄñ ó
)ÄÄó ò
)ÄÄò ô
;ÄÄô ö
}
ÅÅ 
Vector3
ÉÉ 
extrudePoint
ÉÉ $
=
ÉÉ% &
origin
ÉÉ' -
+
ÉÉ. /
(
ÉÉ0 1
extrude
ÉÉ1 8
*
ÉÉ9 :
up
ÉÉ; =
)
ÉÉ= >
;
ÉÉ> ?
if
ÖÖ 
(
ÖÖ !
m_DrawHeightHandles
ÖÖ '
)
ÖÖ' (
{
ÜÜ 
Handles
áá 
.
áá 
color
áá !
=
áá" #
k_HandleColor
áá$ 1
;
áá1 2
Handles
àà 
.
àà 
DotHandleCap
àà (
(
àà( )
-
àà) *
$num
àà* +
,
àà+ ,
origin
àà- 3
,
àà3 4

Quaternion
àà5 ?
.
àà? @
identity
àà@ H
,
ààH I
HandleUtility
ààJ W
.
ààW X
GetHandleSize
ààX e
(
ààe f
origin
ààf l
)
ààl m
*
ààn o
k_HandleSize
ààp |
,
àà| }
evtàà~ Å
.ààÅ Ç
typeààÇ Ü
)ààÜ á
;ààá à
Handles
ââ 
.
ââ 
color
ââ !
=
ââ" # 
k_HandleColorGreen
ââ$ 6
;
ââ6 7
Handles
ää 
.
ää 
DrawLine
ää $
(
ää$ %
origin
ää% +
,
ää+ ,
extrudePoint
ää- 9
)
ää9 :
;
ää: ;
Handles
ãã 
.
ãã 
DotHandleCap
ãã (
(
ãã( )
-
ãã) *
$num
ãã* +
,
ãã+ ,
extrudePoint
ãã- 9
,
ãã9 :

Quaternion
ãã; E
.
ããE F
identity
ããF N
,
ããN O
HandleUtility
ããP ]
.
ãã] ^
GetHandleSize
ãã^ k
(
ããk l
extrudePoint
ããl x
)
ããx y
*
ããz {
k_HandleSizeãã| à
,ããà â
evtããä ç
.ããç é
typeããé í
)ããí ì
;ããì î
Handles
åå 
.
åå 
color
åå !
=
åå" #
Color
åå$ )
.
åå) *
white
åå* /
;
åå/ 0
}
çç 
if
èè 
(
èè 
!
èè 

sceneInUse
èè 
&&
èè  "
polygon
èè# *
.
èè* +
extrude
èè+ 2
!=
èè3 5
extrude
èè6 =
)
èè= >
{
êê #
OnBeginVertexMovement
ëë )
(
ëë) *
)
ëë* +
;
ëë+ ,
polygon
íí 
.
íí 
extrude
íí #
=
íí$ %
extrude
íí& -
;
íí- ."
RebuildPolyShapeMesh
ìì (
(
ìì( )
false
ìì) .
)
ìì. /
;
ìì/ 0
}
îî 
}
ïï 
else
ññ 
{
óó 
for
ôô 
(
ôô 
int
ôô 
ii
ôô 
=
ôô 
$num
ôô 
;
ôô  
ii
ôô! #
<
ôô$ %
len
ôô& )
;
ôô) *
ii
ôô+ -
++
ôô- /
)
ôô/ 0
{
öö 
Vector3
õõ 
point
õõ !
=
õõ" #
trs
õõ$ '
.
õõ' (
TransformPoint
õõ( 6
(
õõ6 7
polygon
õõ7 >
.
õõ> ?
m_Points
õõ? G
[
õõG H
ii
õõH J
]
õõJ K
)
õõK L
;
õõL M
center
ùù 
.
ùù 
x
ùù 
+=
ùù 
point
ùù  %
.
ùù% &
x
ùù& '
;
ùù' (
center
ûû 
.
ûû 
y
ûû 
+=
ûû 
point
ûû  %
.
ûû% &
y
ûû& '
;
ûû' (
center
üü 
.
üü 
z
üü 
+=
üü 
point
üü  %
.
üü% &
z
üü& '
;
üü' (
float
°° 
size
°° 
=
°°  
HandleUtility
°°! .
.
°°. /
GetHandleSize
°°/ <
(
°°< =
point
°°= B
)
°°B C
*
°°D E
k_HandleSize
°°F R
;
°°R S
Handles
££ 
.
££ 
color
££ !
=
££" #
ii
££$ &
==
££' )
m_SelectedIndex
££* 9
?
££: ;#
k_HandleSelectedColor
££< Q
:
££R S
k_HandleColor
££T a
;
££a b
	EditorGUI
•• 
.
•• 
BeginChangeCheck
•• .
(
••. /
)
••/ 0
;
••0 1
point
ßß 
=
ßß 
Handles
ßß #
.
ßß# $
Slider2D
ßß$ ,
(
ßß, -
point
ßß- 2
,
ßß2 3
up
ßß4 6
,
ßß6 7
right
ßß8 =
,
ßß= >
forward
ßß? F
,
ßßF G
size
ßßH L
,
ßßL M
Handles
ßßN U
.
ßßU V
DotHandleCap
ßßV b
,
ßßb c
Vector2
ßßd k
.
ßßk l
zero
ßßl p
,
ßßp q
true
ßßr v
)
ßßv w
;
ßßw x
if
©© 
(
©© 
	EditorGUI
©© !
.
©©! "
EndChangeCheck
©©" 0
(
©©0 1
)
©©1 2
)
©©2 3
{
™™ 
UndoUtility
´´ #
.
´´# $
RecordObject
´´$ 0
(
´´0 1
polygon
´´1 8
,
´´8 9
$str
´´: T
)
´´T U
;
´´U V
polygon
¨¨ 
.
¨¨  
m_Points
¨¨  (
[
¨¨( )
ii
¨¨) +
]
¨¨+ ,
=
¨¨- ."
GetPointInLocalSpace
¨¨/ C
(
¨¨C D
point
¨¨D I
)
¨¨I J
;
¨¨J K#
OnBeginVertexMovement
≠≠ -
(
≠≠- .
)
≠≠. /
;
≠≠/ 0"
RebuildPolyShapeMesh
ÆÆ ,
(
ÆÆ, -
false
ÆÆ- 2
)
ÆÆ2 3
;
ÆÆ3 4
}
ØØ 
if
≤≤ 
(
≤≤ 
!
≤≤ 
used
≤≤ 
&&
≤≤  
evt
≤≤! $
.
≤≤$ %
type
≤≤% )
==
≤≤* ,
	EventType
≤≤- 6
.
≤≤6 7
Used
≤≤7 ;
)
≤≤; <
{
≥≥ 
if
¥¥ 
(
¥¥ 
ii
¥¥ 
==
¥¥ !
$num
¥¥" #
&&
¥¥$ &
polygon
¥¥' .
.
¥¥. /
m_Points
¥¥/ 7
.
¥¥7 8
Count
¥¥8 =
>
¥¥> ?
$num
¥¥@ A
&&
¥¥B D
polygon
¥¥E L
.
¥¥L M
polyEditMode
¥¥M Y
==
¥¥Z \
	PolyShape
¥¥] f
.
¥¥f g
PolyEditMode
¥¥g s
.
¥¥s t
Path
¥¥t x
)
¥¥x y
{
µµ '
m_NextMouseUpAdvancesMode
∂∂ 5
=
∂∂6 7
true
∂∂8 <
;
∂∂< =
return
∑∑ "
;
∑∑" #
}
∏∏ 
else
ππ 
{
∫∫ 
used
ªª  
=
ªª! "
true
ªª# '
;
ªª' (
m_SelectedIndex
ºº +
=
ºº, -
ii
ºº. 0
;
ºº0 1
}
ΩΩ 
}
ææ 
}
øø 
Handles
¡¡ 
.
¡¡ 
color
¡¡ 
=
¡¡ 
Color
¡¡  %
.
¡¡% &
white
¡¡& +
;
¡¡+ ,
if
ƒƒ 
(
ƒƒ 
polygon
ƒƒ 
.
ƒƒ 
polyEditMode
ƒƒ (
!=
ƒƒ) +
	PolyShape
ƒƒ, 5
.
ƒƒ5 6
PolyEditMode
ƒƒ6 B
.
ƒƒB C
Path
ƒƒC G
&&
ƒƒH J
polygon
ƒƒK R
.
ƒƒR S
m_Points
ƒƒS [
.
ƒƒ[ \
Count
ƒƒ\ a
>
ƒƒb c
$num
ƒƒd e
)
ƒƒe f
{
≈≈ 
center
∆∆ 
.
∆∆ 
x
∆∆ 
/=
∆∆ 
(
∆∆  !
float
∆∆! &
)
∆∆& '
len
∆∆' *
;
∆∆* +
center
«« 
.
«« 
y
«« 
/=
«« 
(
««  !
float
««! &
)
««& '
len
««' *
;
««* +
center
»» 
.
»» 
z
»» 
/=
»» 
(
»»  !
float
»»! &
)
»»& '
len
»»' *
;
»»* +
Vector3
   
extrude
   #
=
  $ %
center
  & ,
+
  - .
(
  / 0
up
  0 2
*
  3 4
polygon
  5 <
.
  < =
extrude
  = D
)
  D E
;
  E F(
m_DistanceFromHeightHandle
ÀÀ .
=
ÀÀ/ 0
Vector2
ÀÀ1 8
.
ÀÀ8 9
Distance
ÀÀ9 A
(
ÀÀA B
HandleUtility
ÀÀB O
.
ÀÀO P
WorldToGUIPoint
ÀÀP _
(
ÀÀ_ `
extrude
ÀÀ` g
)
ÀÀg h
,
ÀÀh i
evt
ÀÀj m
.
ÀÀm n
mousePosition
ÀÀn {
)
ÀÀ{ |
;
ÀÀ| }
	EditorGUI
ÕÕ 
.
ÕÕ 
BeginChangeCheck
ÕÕ .
(
ÕÕ. /
)
ÕÕ/ 0
;
ÕÕ0 1
if
œœ 
(
œœ !
m_DrawHeightHandles
œœ +
)
œœ+ ,
{
–– 
Handles
—— 
.
——  
color
——  %
=
——& '
k_HandleColor
——( 5
;
——5 6
Handles
““ 
.
““  
DotHandleCap
““  ,
(
““, -
-
““- .
$num
““. /
,
““/ 0
center
““1 7
,
““7 8

Quaternion
““9 C
.
““C D
identity
““D L
,
““L M
HandleUtility
““N [
.
““[ \
GetHandleSize
““\ i
(
““i j
center
““j p
)
““p q
*
““r s
k_HandleSize““t Ä
,““Ä Å
evt““Ç Ö
.““Ö Ü
type““Ü ä
)““ä ã
;““ã å
Handles
”” 
.
””  
DrawLine
””  (
(
””( )
center
””) /
,
””/ 0
extrude
””1 8
)
””8 9
;
””9 :
Handles
‘‘ 
.
‘‘  
color
‘‘  %
=
‘‘& ' 
k_HandleColorGreen
‘‘( :
;
‘‘: ;
extrude
’’ 
=
’’  !
Handles
’’" )
.
’’) *
Slider
’’* 0
(
’’0 1
extrude
’’1 8
,
’’8 9
up
’’: <
,
’’< =
HandleUtility
’’> K
.
’’K L
GetHandleSize
’’L Y
(
’’Y Z
extrude
’’Z a
)
’’a b
*
’’c d
k_HandleSize
’’e q
,
’’q r
Handles
’’s z
.
’’z {
DotHandleCap’’{ á
,’’á à
$num’’â ã
)’’ã å
;’’å ç
Handles
÷÷ 
.
÷÷  
color
÷÷  %
=
÷÷& '
Color
÷÷( -
.
÷÷- .
white
÷÷. 3
;
÷÷3 4
}
◊◊ 
if
ŸŸ 
(
ŸŸ 
	EditorGUI
ŸŸ !
.
ŸŸ! "
EndChangeCheck
ŸŸ" 0
(
ŸŸ0 1
)
ŸŸ1 2
)
ŸŸ2 3
{
⁄⁄ 
UndoUtility
€€ #
.
€€# $
RecordObject
€€$ 0
(
€€0 1
polygon
€€1 8
,
€€8 9
$str
€€: T
)
€€T U
;
€€U V
polygon
‹‹ 
.
‹‹  
extrude
‹‹  '
=
‹‹( )
ProGridsInterface
‹‹* ;
.
‹‹; <
ProGridsSnap
‹‹< H
(
‹‹H I
Vector3
‹‹I P
.
‹‹P Q
Distance
‹‹Q Y
(
‹‹Y Z
extrude
‹‹Z a
,
‹‹a b
center
‹‹c i
)
‹‹i j
*
‹‹k l
Mathf
‹‹m r
.
‹‹r s
Sign
‹‹s w
(
‹‹w x
Vector3
‹‹x 
.‹‹ Ä
Dot‹‹Ä É
(‹‹É Ñ
up‹‹Ñ Ü
,‹‹Ü á
extrude‹‹à è
-‹‹ê ë
center‹‹í ò
)‹‹ò ô
)‹‹ô ö
)‹‹ö õ
;‹‹õ ú#
OnBeginVertexMovement
›› -
(
››- .
)
››. /
;
››/ 0"
RebuildPolyShapeMesh
ﬁﬁ ,
(
ﬁﬁ, -
false
ﬁﬁ- 2
)
ﬁﬁ2 3
;
ﬁﬁ3 4
}
ﬂﬂ 
}
‡‡ 
}
·· 
}
‚‚ 	
void
‰‰ 
HandleKeyEvent
‰‰ 
(
‰‰ 
Event
‰‰ !
evt
‰‰" %
)
‰‰% &
{
ÂÂ 	
KeyCode
ÊÊ 
key
ÊÊ 
=
ÊÊ 
evt
ÊÊ 
.
ÊÊ 
keyCode
ÊÊ %
;
ÊÊ% &
switch
ËË 
(
ËË 
key
ËË 
)
ËË 
{
ÈÈ 
case
ÍÍ 
KeyCode
ÍÍ 
.
ÍÍ 
Space
ÍÍ "
:
ÍÍ" #
case
ÎÎ 
KeyCode
ÎÎ 
.
ÎÎ 
Return
ÎÎ #
:
ÎÎ# $
{
ÏÏ 
if
ÌÌ 
(
ÌÌ 
polygon
ÌÌ 
.
ÌÌ  
polyEditMode
ÌÌ  ,
==
ÌÌ- /
	PolyShape
ÌÌ0 9
.
ÌÌ9 :
PolyEditMode
ÌÌ: F
.
ÌÌF G
Path
ÌÌG K
)
ÌÌK L
{
ÓÓ 
if
ÔÔ 
(
ÔÔ ,
SceneCameraIsAlignedWithPolyUp
ÔÔ :
(
ÔÔ: ;
)
ÔÔ; <
)
ÔÔ< =
SetPolyEditMode
 +
(
+ ,
	PolyShape
, 5
.
5 6
PolyEditMode
6 B
.
B C
Edit
C G
)
G H
;
H I
else
ÒÒ 
SetPolyEditMode
ÚÚ +
(
ÚÚ+ ,
	PolyShape
ÚÚ, 5
.
ÚÚ5 6
PolyEditMode
ÚÚ6 B
.
ÚÚB C
Height
ÚÚC I
)
ÚÚI J
;
ÚÚJ K
evt
ÙÙ 
.
ÙÙ 
Use
ÙÙ 
(
ÙÙ  
)
ÙÙ  !
;
ÙÙ! "
}
ıı 
else
ˆˆ 
if
ˆˆ 
(
ˆˆ 
polygon
ˆˆ $
.
ˆˆ$ %
polyEditMode
ˆˆ% 1
==
ˆˆ2 4
	PolyShape
ˆˆ5 >
.
ˆˆ> ?
PolyEditMode
ˆˆ? K
.
ˆˆK L
Height
ˆˆL R
)
ˆˆR S
{
˜˜ 
SetPolyEditMode
¯¯ '
(
¯¯' (
	PolyShape
¯¯( 1
.
¯¯1 2
PolyEditMode
¯¯2 >
.
¯¯> ?
Edit
¯¯? C
)
¯¯C D
;
¯¯D E
evt
˘˘ 
.
˘˘ 
Use
˘˘ 
(
˘˘  
)
˘˘  !
;
˘˘! "
}
˙˙ 
else
˚˚ 
if
˚˚ 
(
˚˚ 
polygon
˚˚ $
.
˚˚$ %
polyEditMode
˚˚% 1
==
˚˚2 4
	PolyShape
˚˚5 >
.
˚˚> ?
PolyEditMode
˚˚? K
.
˚˚K L
Edit
˚˚L P
)
˚˚P Q
{
¸¸ 
SetPolyEditMode
˝˝ '
(
˝˝' (
	PolyShape
˝˝( 1
.
˝˝1 2
PolyEditMode
˝˝2 >
.
˝˝> ?
None
˝˝? C
)
˝˝C D
;
˝˝D E
evt
˛˛ 
.
˛˛ 
Use
˛˛ 
(
˛˛  
)
˛˛  !
;
˛˛! "
}
ˇˇ 
break
ÅÅ 
;
ÅÅ 
}
ÇÇ 
case
ÑÑ 
KeyCode
ÑÑ 
.
ÑÑ 
	Backspace
ÑÑ &
:
ÑÑ& '
{
ÖÖ 
if
ÜÜ 
(
ÜÜ 
m_SelectedIndex
ÜÜ '
>
ÜÜ( )
-
ÜÜ* +
$num
ÜÜ+ ,
)
ÜÜ, -
{
áá 
UndoUtility
àà #
.
àà# $
RecordObject
àà$ 0
(
àà0 1
polygon
àà1 8
,
àà8 9
$str
àà: R
)
ààR S
;
ààS T
polygon
ââ 
.
ââ  
m_Points
ââ  (
.
ââ( )
RemoveAt
ââ) 1
(
ââ1 2
m_SelectedIndex
ââ2 A
)
ââA B
;
ââB C
m_SelectedIndex
ää '
=
ää( )
-
ää* +
$num
ää+ ,
;
ää, -"
RebuildPolyShapeMesh
ãã ,
(
ãã, -
polygon
ãã- 4
)
ãã4 5
;
ãã5 6
evt
åå 
.
åå 
Use
åå 
(
åå  
)
åå  !
;
åå! "
}
çç 
break
éé 
;
éé 
}
èè 
case
ëë 
KeyCode
ëë 
.
ëë 
Escape
ëë #
:
ëë# $
{
íí 
SetPolyEditMode
ìì #
(
ìì# $
	PolyShape
ìì$ -
.
ìì- .
PolyEditMode
ìì. :
.
ìì: ;
None
ìì; ?
)
ìì? @
;
ìì@ A
evt
îî 
.
îî 
Use
îî 
(
îî 
)
îî 
;
îî 
break
ïï 
;
ïï 
}
ññ 
}
óó 
}
òò 	
void
öö 
DrawPolyLine
öö 
(
öö 
List
öö 
<
öö 
Vector3
öö &
>
öö& '
points
öö( .
)
öö. /
{
õõ 	
if
úú 
(
úú 
points
úú 
.
úú 
Count
úú 
<
úú 
$num
úú  
)
úú  !
return
ùù 
;
ùù 
int
üü 
vc
üü 
=
üü 
polygon
üü 
.
üü 
polyEditMode
üü )
==
üü* ,
	PolyShape
üü- 6
.
üü6 7
PolyEditMode
üü7 C
.
üüC D
Path
üüD H
?
üüI J
points
üüK Q
.
üüQ R
Count
üüR W
:
üüX Y
points
üüZ `
.
üü` a
Count
üüa f
+
üüg h
$num
üüi j
;
üüj k
Vector3
°° 
[
°° 
]
°° 
ver
°° 
=
°° 
new
°° 
Vector3
°°  '
[
°°' (
vc
°°( *
]
°°* +
;
°°+ ,
Vector2
¢¢ 
[
¢¢ 
]
¢¢ 
uvs
¢¢ 
=
¢¢ 
new
¢¢ 
Vector2
¢¢  '
[
¢¢' (
vc
¢¢( *
]
¢¢* +
;
¢¢+ ,
int
££ 
[
££ 
]
££ 
indexes
££ 
=
££ 
new
££ 
int
££  #
[
££# $
vc
££$ &
]
££& '
;
££' (
int
§§ 
cnt
§§ 
=
§§ 
points
§§ 
.
§§ 
Count
§§ "
;
§§" #
float
•• 
distance
•• 
=
•• 
$num
•• 
;
••  
for
ßß 
(
ßß 
int
ßß 
i
ßß 
=
ßß 
$num
ßß 
;
ßß 
i
ßß 
<
ßß 
vc
ßß  "
;
ßß" #
i
ßß$ %
++
ßß% '
)
ßß' (
{
®® 
Vector3
©© 
a
©© 
=
©© 
points
©© "
[
©©" #
i
©©# $
%
©©% &
cnt
©©' *
]
©©* +
;
©©+ ,
Vector3
™™ 
b
™™ 
=
™™ 
points
™™ "
[
™™" #
i
™™# $
<
™™% &
$num
™™' (
?
™™) *
$num
™™+ ,
:
™™- .
i
™™/ 0
-
™™1 2
$num
™™3 4
]
™™4 5
;
™™5 6
float
¨¨ 
d
¨¨ 
=
¨¨ 
Vector3
¨¨ !
.
¨¨! "
Distance
¨¨" *
(
¨¨* +
a
¨¨+ ,
,
¨¨, -
b
¨¨. /
)
¨¨/ 0
;
¨¨0 1
distance
≠≠ 
+=
≠≠ 
d
≠≠ 
;
≠≠ 
ver
ØØ 
[
ØØ 
i
ØØ 
]
ØØ 
=
ØØ 
points
ØØ 
[
ØØ  
i
ØØ  !
%
ØØ" #
cnt
ØØ$ '
]
ØØ' (
;
ØØ( )
uvs
∞∞ 
[
∞∞ 
i
∞∞ 
]
∞∞ 
=
∞∞ 
new
∞∞ 
Vector2
∞∞ $
(
∞∞$ %
distance
∞∞% -
,
∞∞- .
$num
∞∞/ 1
)
∞∞1 2
;
∞∞2 3
indexes
±± 
[
±± 
i
±± 
]
±± 
=
±± 
i
±± 
;
±± 
}
≤≤ 

m_LineMesh
¥¥ 
.
¥¥ 
Clear
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥ 

m_LineMesh
µµ 
.
µµ 
name
µµ 
=
µµ 
$str
µµ 0
;
µµ0 1

m_LineMesh
∂∂ 
.
∂∂ 
vertices
∂∂ 
=
∂∂  !
ver
∂∂" %
;
∂∂% &

m_LineMesh
∑∑ 
.
∑∑ 
uv
∑∑ 
=
∑∑ 
uvs
∑∑ 
;
∑∑  

m_LineMesh
∏∏ 
.
∏∏ 

SetIndices
∏∏ !
(
∏∏! "
indexes
∏∏" )
,
∏∏) *
MeshTopology
∏∏+ 7
.
∏∏7 8
	LineStrip
∏∏8 A
,
∏∏A B
$num
∏∏C D
)
∏∏D E
;
∏∏E F
m_LineMaterial
ππ 
.
ππ 
SetFloat
ππ #
(
ππ# $
$str
ππ$ 3
,
ππ3 4
distance
ππ5 =
)
ππ= >
;
ππ> ?
}
∫∫ 	
bool
¡¡ ,
SceneCameraIsAlignedWithPolyUp
¡¡ +
(
¡¡+ ,
)
¡¡, -
{
¬¬ 	
float
√√ 
dot
√√ 
=
√√ 
Vector3
√√ 
.
√√  
Dot
√√  #
(
√√# $
	SceneView
√√$ -
.
√√- .!
lastActiveSceneView
√√. A
.
√√A B
camera
√√B H
.
√√H I
	transform
√√I R
.
√√R S
forward
√√S Z
,
√√Z [
polygon
√√\ c
.
√√c d
	transform
√√d m
.
√√m n
up
√√n p
)
√√p q
;
√√q r
return
ƒƒ 
Mathf
ƒƒ 
.
ƒƒ 
Abs
ƒƒ 
(
ƒƒ 
Mathf
ƒƒ "
.
ƒƒ" #
Abs
ƒƒ# &
(
ƒƒ& '
dot
ƒƒ' *
)
ƒƒ* +
-
ƒƒ, -
$num
ƒƒ. 0
)
ƒƒ0 1
<
ƒƒ2 3
$num
ƒƒ4 8
;
ƒƒ8 9
}
≈≈ 	
void
«« !
OnSelectModeChanged
««  
(
««  !

SelectMode
««! +

selectMode
««, 6
)
««6 7
{
»» 	
if
   
(
   
polygon
   
!=
   
null
   
&&
ÀÀ 
polygon
ÀÀ 
.
ÀÀ 
polyEditMode
ÀÀ '
!=
ÀÀ( *
	PolyShape
ÀÀ+ 4
.
ÀÀ4 5
PolyEditMode
ÀÀ5 A
.
ÀÀA B
None
ÀÀB F
&&
ÃÃ 
!
ÃÃ 

selectMode
ÃÃ 
.
ÃÃ 
ContainsFlag
ÃÃ +
(
ÃÃ+ ,

SelectMode
ÃÃ, 6
.
ÃÃ6 7
	InputTool
ÃÃ7 @
)
ÃÃ@ A
)
ÃÃA B
{
ÕÕ 
SetPolyEditMode
ŒŒ 
(
ŒŒ  
	PolyShape
ŒŒ  )
.
ŒŒ) *
PolyEditMode
ŒŒ* 6
.
ŒŒ6 7
None
ŒŒ7 ;
)
ŒŒ; <
;
ŒŒ< =
}
œœ 
}
–– 	
void
““ #
OnBeginVertexMovement
““ "
(
““" #
)
““# $
{
”” 	
if
‘‘ 
(
‘‘ 
!
‘‘ #
m_IsModifyingVertices
‘‘ &
)
‘‘& '#
m_IsModifyingVertices
’’ %
=
’’& '
true
’’( ,
;
’’, -
}
÷÷ 	
void
ÿÿ $
OnFinishVertexMovement
ÿÿ #
(
ÿÿ# $
)
ÿÿ$ %
{
ŸŸ 	#
m_IsModifyingVertices
⁄⁄ !
=
⁄⁄" #
false
⁄⁄$ )
;
⁄⁄) *"
RebuildPolyShapeMesh
€€  
(
€€  !
polygon
€€! (
)
€€( )
;
€€) *
}
‹‹ 	
void
ﬁﬁ 
UndoRedoPerformed
ﬁﬁ 
(
ﬁﬁ 
)
ﬁﬁ  
{
ﬂﬂ 	
if
‡‡ 
(
‡‡ 
polygon
‡‡ 
.
‡‡ 
polyEditMode
‡‡ $
==
‡‡% '
	PolyShape
‡‡( 1
.
‡‡1 2
PolyEditMode
‡‡2 >
.
‡‡> ?
None
‡‡? C
)
‡‡C D
ProBuilderEditor
··  
.
··  !

selectMode
··! +
=
··, -
ProBuilderEditor
··. >
.
··> ?

selectMode
··? I
&
··J K
~
··L M
(
··M N

SelectMode
··N X
.
··X Y
	InputTool
··Y b
)
··b c
;
··c d
else
‚‚ 
ProBuilderEditor
„„  
.
„„  !

selectMode
„„! +
=
„„, -
ProBuilderEditor
„„. >
.
„„> ?

selectMode
„„? I
|
„„J K

SelectMode
„„L V
.
„„V W
	InputTool
„„W `
;
„„` a
if
ÂÂ 
(
ÂÂ 
polygon
ÂÂ 
.
ÂÂ 
polyEditMode
ÂÂ $
!=
ÂÂ% '
	PolyShape
ÂÂ( 1
.
ÂÂ1 2
PolyEditMode
ÂÂ2 >
.
ÂÂ> ?
None
ÂÂ? C
)
ÂÂC D
Tools
ÊÊ 
.
ÊÊ 
current
ÊÊ 
=
ÊÊ 
Tool
ÊÊ  $
.
ÊÊ$ %
None
ÊÊ% )
;
ÊÊ) *
if
ËË 
(
ËË 

m_LineMesh
ËË 
!=
ËË 
null
ËË "
)
ËË" #
DestroyImmediate
ÈÈ  
(
ÈÈ  !

m_LineMesh
ÈÈ! +
)
ÈÈ+ ,
;
ÈÈ, -
if
ÎÎ 
(
ÎÎ 
m_LineMaterial
ÎÎ 
!=
ÎÎ !
null
ÎÎ" &
)
ÎÎ& '
DestroyImmediate
ÏÏ  
(
ÏÏ  !
m_LineMaterial
ÏÏ! /
)
ÏÏ/ 0
;
ÏÏ0 1

m_LineMesh
ÓÓ 
=
ÓÓ 
new
ÓÓ 
Mesh
ÓÓ !
(
ÓÓ! "
)
ÓÓ" #
;
ÓÓ# $
m_LineMaterial
ÔÔ 
=
ÔÔ )
CreateHighlightLineMaterial
ÔÔ 8
(
ÔÔ8 9
)
ÔÔ9 :
;
ÔÔ: ;
if
ÒÒ 
(
ÒÒ 
polygon
ÒÒ 
.
ÒÒ 
polyEditMode
ÒÒ $
!=
ÒÒ% '
	PolyShape
ÒÒ( 1
.
ÒÒ1 2
PolyEditMode
ÒÒ2 >
.
ÒÒ> ?
None
ÒÒ? C
)
ÒÒC D"
RebuildPolyShapeMesh
ÚÚ $
(
ÚÚ$ %
polygon
ÚÚ% ,
)
ÚÚ, -
;
ÚÚ- .
}
ÛÛ 	
}
ÙÙ 
}ıı °à
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\ProGridsInterface.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
[ 
InitializeOnLoad 
] 
static 

class 
ProGridsInterface "
{ 
static 
Type 
s_ProGridsType "
=# $
null% )
;) *
static 
readonly 
string 
[ 
]  #
ProGridsEditorTypeNames! 8
=9 :
new; >
string? E
[E F
]F G
{ 	
$str 1
,1 2
$str ,
,, -
$str '
,' (
$str  
,  !
$str 
, 
} 	
;	 

static 
Func 
< 
object 
> &
s_ProGridsInstanceDelegate 6
=7 8
null9 =
;= >
static 
Func 
< 
bool 
> $
s_ProGridsActiveDelegate 2
=3 4
null5 9
;9 :
static 
Func 
< 
bool 
> ,
 s_SceneToolbarIsExtendedDelegate :
=; <
null= A
;A B
static 
Func 
< 
bool 
> '
s_UseAxisConstraintDelegate 5
=6 7
null8 <
;< =
static 
Func 
< 
bool 
> !
s_SnapEnabledDelegate /
=0 1
null2 6
;6 7
static 
Func 
< 
bool 
> )
s_ProGridsSnapAsGroupDelegate 7
=8 9
null: >
;> ?
static   
Func   
<   
bool   
>   '
s_IsFullGridEnabledDelegate   5
=  6 7
null  8 <
;  < =
static!! 
Func!! 
<!! 
float!! 
>!! )
s_GetActiveGridOffsetDelegate!! 8
=!!9 :
null!!; ?
;!!? @
static"" 
Func"" 
<"" 
float"" 
>"" 
s_SnapValueDelegate"" .
=""/ 0
null""1 5
;""5 6
static## 
Func## 
<## 
Vector3## 
>## 
s_GetPivotDelegate## /
=##0 1
null##2 6
;##6 7
static$$ 
	FieldInfo$$ 
s_GridVisibleField$$ +
=$$, -
null$$. 2
;$$2 3
static&& 
Action&& 
<&& 
Action&& 
<&& 
float&& "
>&&" #
>&&# $.
"s_SubscribePushToGridEventDelegate&&% G
=&&H I
null&&J N
;&&N O
static'' 
Action'' 
<'' 
Action'' 
<'' 
float'' "
>''" #
>''# $0
$s_UnsubscribePushToGridEventDelegate''% I
=''J K
null''L P
;''P Q
static(( 
Action(( 
<(( 
Action(( 
<(( 
bool(( !
>((! "
>((" #+
s_SubscribeToolbarEventDelegate(($ C
=((D E
null((F J
;((J K
static)) 
Action)) 
<)) 
Action)) 
<)) 
bool)) !
>))! "
>))" #-
!s_UnsubscribeToolbarEventDelegate))$ E
=))F G
null))H L
;))L M
static++ 
Action++ 
<++ 
Vector3++ 
>++ "
s_OnHandleMoveDelegate++ 5
=++6 7
null++8 <
;++< =
static-- 
	FieldInfo-- '
s_GetActiveGridAxisDelegate-- 4
=--5 6
null--7 ;
;--; <
static// 
ProGridsInterface//  
(//  !
)//! "
{00 	
for22 
(22 
int22 
i22 
=22 
$num22 
,22 
c22 
=22 #
ProGridsEditorTypeNames22  7
.227 8
Length228 >
;22> ?
i22@ A
<22B C
c22D E
&&22F H
s_ProGridsType22I W
==22X Z
null22[ _
;22_ `
i22a b
++22b d
)22d e
s_ProGridsType33 
=33  
ReflectionUtility33! 2
.332 3
GetType333 :
(33: ;#
ProGridsEditorTypeNames33; R
[33R S
i33S T
]33T U
)33U V
;33V W
}44 	
public66 
static66 
bool66 

IsImported66 %
(66% &
)66& '
{77 	
return88 
s_ProGridsType88 !
!=88" $
null88% )
;88) *
}99 	
public?? 
static?? 
Type?? 
GetProGridsType?? *
(??* +
)??+ ,
{@@ 	
returnAA 
s_ProGridsTypeAA !
;AA! "
}BB 	
publicDD 
staticDD 
objectDD 
GetProGridsInstanceDD 0
(DD0 1
)DD1 2
{EE 	
ifFF 
(FF 
GetProGridsTypeFF 
(FF  
)FF  !
==FF" $
nullFF% )
)FF) *
returnGG 
nullGG 
;GG 
ifII 
(II &
s_ProGridsInstanceDelegateII *
==II+ -
nullII. 2
)II2 3&
s_ProGridsInstanceDelegateJJ *
=JJ+ ,
(JJ- .
FuncJJ. 2
<JJ2 3
objectJJ3 9
>JJ9 :
)JJ: ;
ReflectionUtilityJJ; L
.JJL M%
GetOpenDelegateOnPropertyJJM f
<JJf g
FuncJJg k
<JJk l
objectJJl r
>JJr s
>JJs t
(JJt u
GetProGridsType	JJu Ñ
(
JJÑ Ö
)
JJÖ Ü
,
JJÜ á
$str
JJà í
,
JJí ì
BindingFlags
JJî †
.
JJ† °
	NonPublic
JJ° ™
|
JJ´ ¨
BindingFlags
JJ≠ π
.
JJπ ∫
Static
JJ∫ ¿
)
JJ¿ ¡
;
JJ¡ ¬
ifLL 
(LL &
s_ProGridsInstanceDelegateLL *
!=LL+ -
nullLL. 2
)LL2 3
returnMM &
s_ProGridsInstanceDelegateMM 1
(MM1 2
)MM2 3
;MM3 4
returnOO 
nullOO 
;OO 
}PP 	
publicRR 
staticRR 
boolRR 
GetSnapAsGroupRR )
(RR) *
)RR* +
{SS 	
ifTT 
(TT 
GetProGridsTypeTT 
(TT  
)TT  !
==TT" $
nullTT% )
)TT) *
returnUU 
falseUU 
;UU 
ifWW 
(WW )
s_ProGridsSnapAsGroupDelegateWW -
==WW. 0
nullWW1 5
)WW5 6)
s_ProGridsSnapAsGroupDelegateXX -
=XX. /
(XX0 1
FuncXX1 5
<XX5 6
boolXX6 :
>XX: ;
)XX; <
ReflectionUtilityXX= N
.XXN O'
GetClosedDelegateOnPropertyXXO j
<XXj k
FuncXXk o
<XXo p
boolXXp t
>XXt u
>XXu v
(XXv w
GetProGridsTypeYY #
(YY# $
)YY$ %
,YY% &
GetProGridsInstanceZZ '
(ZZ' (
)ZZ( )
,ZZ) *
$str[[ (
,[[( )
BindingFlags\\  
.\\  !
Instance\\! )
|\\* +
BindingFlags\\, 8
.\\8 9
	NonPublic\\9 B
)\\B C
;\\C D
if^^ 
(^^ )
s_ProGridsSnapAsGroupDelegate^^ -
!=^^. 0
null^^1 5
)^^5 6
return__ )
s_ProGridsSnapAsGroupDelegate__ 4
(__4 5
)__5 6
;__6 7
returnaa 
falseaa 
;aa 
}bb 	
publichh 
statichh 
boolhh 
IsActivehh #
(hh# $
)hh$ %
{ii 	
ifjj 
(jj 
GetProGridsTypejj 
(jj  
)jj  !
==jj" $
nulljj% )
)jj) *
returnkk 
falsekk 
;kk 
ifmm 
(mm $
s_ProGridsActiveDelegatemm (
==mm) +
nullmm, 0
)mm0 1$
s_ProGridsActiveDelegatenn (
=nn) *
(nn+ ,
Funcnn, 0
<nn0 1
boolnn1 5
>nn5 6
)nn6 7
ReflectionUtilitynn7 H
.nnH I
GetOpenDelegatennI X
<nnX Y
FuncnnY ]
<nn] ^
boolnn^ b
>nnb c
>nnc d
(nnd e
GetProGridsTypenne t
(nnt u
)nnu v
,nnv w
$str	nnx å
)
nnå ç
;
nnç é
ifpp 
(pp $
s_ProGridsActiveDelegatepp (
!=pp) +
nullpp, 0
)pp0 1
returnqq $
s_ProGridsActiveDelegateqq /
(qq/ 0
)qq0 1
;qq1 2
returnss 
falsess 
;ss 
}tt 	
publiczz 
staticzz 
boolzz "
SceneToolbarIsExtendedzz 1
(zz1 2
)zz2 3
{{{ 	
if|| 
(|| 
GetProGridsType|| 
(||  
)||  !
==||" $
null||% )
)||) *
return}} 
false}} 
;}} 
if 
( ,
 s_SceneToolbarIsExtendedDelegate 0
==1 3
null4 8
)8 9.
 s_SceneToolbarIsExtendedDelegate
ÄÄ 0
=
ÄÄ1 2
(
ÄÄ3 4
Func
ÄÄ4 8
<
ÄÄ8 9
bool
ÄÄ9 =
>
ÄÄ= >
)
ÄÄ> ?
ReflectionUtility
ÄÄ? P
.
ÄÄP Q
GetOpenDelegate
ÄÄQ `
<
ÄÄ` a
Func
ÄÄa e
<
ÄÄe f
bool
ÄÄf j
>
ÄÄj k
>
ÄÄk l
(
ÄÄl m
GetProGridsType
ÄÄm |
(
ÄÄ| }
)
ÄÄ} ~
,
ÄÄ~ 
$strÄÄÄ ò
)ÄÄò ô
;ÄÄô ö
if
ÇÇ 
(
ÇÇ .
 s_SceneToolbarIsExtendedDelegate
ÇÇ 0
!=
ÇÇ1 3
null
ÇÇ4 8
)
ÇÇ8 9
return
ÉÉ .
 s_SceneToolbarIsExtendedDelegate
ÉÉ 7
(
ÉÉ7 8
)
ÉÉ8 9
;
ÉÉ9 :
return
ÖÖ 
false
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
public
åå 
static
åå 
bool
åå  
UseAxisConstraints
åå -
(
åå- .
)
åå. /
{
çç 	
if
éé 
(
éé 
GetProGridsType
éé 
(
éé  
)
éé  !
==
éé" $
null
éé% )
)
éé) *
return
èè 
true
èè 
;
èè 
if
ëë 
(
ëë )
s_UseAxisConstraintDelegate
ëë +
==
ëë, .
null
ëë/ 3
)
ëë3 4)
s_UseAxisConstraintDelegate
íí +
=
íí, -
(
íí. /
Func
íí/ 3
<
íí3 4
bool
íí4 8
>
íí8 9
)
íí9 :
ReflectionUtility
íí: K
.
ííK L
GetOpenDelegate
ííL [
<
íí[ \
Func
íí\ `
<
íí` a
bool
íía e
>
ííe f
>
ííf g
(
ííg h
GetProGridsType
ííh w
(
ííw x
)
ííx y
,
ííy z
$stríí{ è
)ííè ê
;ííê ë
if
îî 
(
îî )
s_UseAxisConstraintDelegate
îî +
!=
îî, .
null
îî/ 3
)
îî3 4
return
ïï )
s_UseAxisConstraintDelegate
ïï 2
(
ïï2 3
)
ïï3 4
;
ïï4 5
return
óó 
true
óó 
;
óó 
}
òò 	
public
öö 
static
öö 
SnapAxis
öö 
GetSnapMethod
öö ,
(
öö, -
)
öö- .
{
õõ 	
return
úú  
UseAxisConstraints
úú %
(
úú% &
)
úú& '
?
úú( )
SnapAxis
úú* 2
.
úú2 3

ActiveAxis
úú3 =
:
úú> ?
SnapAxis
úú@ H
.
úúH I
AllAxes
úúI P
;
úúP Q
}
ùù 	
public
££ 
static
££ 
bool
££ 
SnapEnabled
££ &
(
££& '
)
££' (
{
§§ 	
if
•• 
(
•• 
GetProGridsType
•• 
(
••  
)
••  !
==
••" $
null
••% )
||
••* ,
!
••- .
IsActive
••. 6
(
••6 7
)
••7 8
)
••8 9
return
¶¶ 
false
¶¶ 
;
¶¶ 
if
®® 
(
®® #
s_SnapEnabledDelegate
®® %
==
®®& (
null
®®) -
)
®®- .#
s_SnapEnabledDelegate
©© %
=
©©& '
(
©©( )
Func
©©) -
<
©©- .
bool
©©. 2
>
©©2 3
)
©©3 4
ReflectionUtility
©©4 E
.
©©E F
GetOpenDelegate
©©F U
<
©©U V
Func
©©V Z
<
©©Z [
bool
©©[ _
>
©©_ `
>
©©` a
(
©©a b
GetProGridsType
©©b q
(
©©q r
)
©©r s
,
©©s t
$str©©u Ç
)©©Ç É
;©©É Ñ
if
´´ 
(
´´ #
s_SnapEnabledDelegate
´´ %
!=
´´& (
null
´´) -
)
´´- .
return
¨¨ #
s_SnapEnabledDelegate
¨¨ ,
(
¨¨, -
)
¨¨- .
;
¨¨. /
return
ÆÆ 
false
ÆÆ 
;
ÆÆ 
}
ØØ 	
public
¥¥ 
static
¥¥ 
bool
¥¥ 
GridVisible
¥¥ &
(
¥¥& '
)
¥¥' (
{
µµ 	
if
∂∂ 
(
∂∂ 
GetProGridsType
∂∂ 
(
∂∂  
)
∂∂  !
==
∂∂" $
null
∂∂% )
||
∂∂* ,!
GetProGridsInstance
∂∂- @
(
∂∂@ A
)
∂∂A B
==
∂∂C E
null
∂∂F J
)
∂∂J K
return
∑∑ 
false
∑∑ 
;
∑∑ 
if
ππ 
(
ππ  
s_GridVisibleField
ππ "
==
ππ# %
null
ππ& *
)
ππ* + 
s_GridVisibleField
∫∫ "
=
∫∫# $
GetProGridsType
∫∫% 4
(
∫∫4 5
)
∫∫5 6
.
∫∫6 7
GetField
∫∫7 ?
(
∫∫? @
$str
∫∫@ L
,
∫∫L M
BindingFlags
∫∫N Z
.
∫∫Z [
	NonPublic
∫∫[ d
|
∫∫e f
BindingFlags
∫∫g s
.
∫∫s t
Instance
∫∫t |
)
∫∫| }
;
∫∫} ~
if
ºº 
(
ºº  
s_GridVisibleField
ºº "
!=
ºº# %
null
ºº& *
)
ºº* +
return
ΩΩ 
(
ΩΩ 
bool
ΩΩ 
)
ΩΩ  
s_GridVisibleField
ΩΩ 0
.
ΩΩ0 1
GetValue
ΩΩ1 9
(
ΩΩ9 :!
GetProGridsInstance
ΩΩ: M
(
ΩΩM N
)
ΩΩN O
)
ΩΩO P
;
ΩΩP Q
return
øø 
false
øø 
;
øø 
}
¿¿ 	
public
∆∆ 
static
∆∆ 
float
∆∆ 
	SnapValue
∆∆ %
(
∆∆% &
)
∆∆& '
{
«« 	
if
»» 
(
»» 
GetProGridsType
»» 
(
»»  
)
»»  !
==
»»" $
null
»»% )
)
»») *
return
…… 
$num
…… 
;
…… 
if
ÀÀ 
(
ÀÀ !
s_SnapValueDelegate
ÀÀ #
==
ÀÀ$ &
null
ÀÀ' +
)
ÀÀ+ ,!
s_SnapValueDelegate
ÃÃ #
=
ÃÃ$ %
(
ÃÃ& '
Func
ÃÃ' +
<
ÃÃ+ ,
float
ÃÃ, 1
>
ÃÃ1 2
)
ÃÃ2 3
ReflectionUtility
ÃÃ3 D
.
ÃÃD E
GetOpenDelegate
ÃÃE T
<
ÃÃT U
Func
ÃÃU Y
<
ÃÃY Z
float
ÃÃZ _
>
ÃÃ_ `
>
ÃÃ` a
(
ÃÃa b
GetProGridsType
ÃÃb q
(
ÃÃq r
)
ÃÃr s
,
ÃÃs t
$strÃÃu Ä
)ÃÃÄ Å
;ÃÃÅ Ç
if
ŒŒ 
(
ŒŒ !
s_SnapValueDelegate
ŒŒ #
!=
ŒŒ$ &
null
ŒŒ' +
)
ŒŒ+ ,
return
œœ !
s_SnapValueDelegate
œœ *
(
œœ* +
)
œœ+ ,
;
œœ, -
return
—— 
$num
—— 
;
—— 
}
““ 	
public
ŸŸ 
static
ŸŸ 
bool
ŸŸ 
GetPivot
ŸŸ #
(
ŸŸ# $
out
ŸŸ$ '
Vector3
ŸŸ( /
pivot
ŸŸ0 5
)
ŸŸ5 6
{
⁄⁄ 	
pivot
€€ 
=
€€ 
Vector3
€€ 
.
€€ 
zero
€€  
;
€€  !
if
›› 
(
››  
s_GetPivotDelegate
›› "
==
››# %
null
››& *
)
››* + 
s_GetPivotDelegate
ﬁﬁ "
=
ﬁﬁ# $
(
ﬁﬁ% &
Func
ﬁﬁ& *
<
ﬁﬁ* +
Vector3
ﬁﬁ+ 2
>
ﬁﬁ2 3
)
ﬁﬁ3 4
ReflectionUtility
ﬁﬁ4 E
.
ﬁﬁE F
GetOpenDelegate
ﬁﬁF U
<
ﬁﬁU V
Func
ﬁﬁV Z
<
ﬁﬁZ [
Vector3
ﬁﬁ[ b
>
ﬁﬁb c
>
ﬁﬁc d
(
ﬁﬁd e
GetProGridsType
ﬁﬁe t
(
ﬁﬁt u
)
ﬁﬁu v
,
ﬁﬁv w
$strﬁﬁx Ç
)ﬁﬁÇ É
;ﬁﬁÉ Ñ
if
‡‡ 
(
‡‡  
s_GetPivotDelegate
‡‡ "
!=
‡‡# %
null
‡‡& *
)
‡‡* +
{
·· 
pivot
‚‚ 
=
‚‚  
s_GetPivotDelegate
‚‚ *
(
‚‚* +
)
‚‚+ ,
;
‚‚, -
pivot
ÂÂ 
=
ÂÂ  
ProBuilderSnapping
ÂÂ *
.
ÂÂ* +
	SnapValue
ÂÂ+ 4
(
ÂÂ4 5
pivot
ÂÂ5 :
,
ÂÂ: ;
	SnapValue
ÂÂ< E
(
ÂÂE F
)
ÂÂF G
)
ÂÂG H
;
ÂÂH I
return
ÊÊ 
true
ÊÊ 
;
ÊÊ 
}
ÁÁ 
return
ÈÈ 
false
ÈÈ 
;
ÈÈ 
}
ÍÍ 	
public
ÏÏ 
static
ÏÏ 
bool
ÏÏ 
IsFullGridEnabled
ÏÏ ,
(
ÏÏ, -
)
ÏÏ- .
{
ÌÌ 	
if
ÓÓ 
(
ÓÓ )
s_IsFullGridEnabledDelegate
ÓÓ +
==
ÓÓ, .
null
ÓÓ/ 3
)
ÓÓ3 4)
s_IsFullGridEnabledDelegate
ÔÔ +
=
ÔÔ, -
(
ÔÔ. /
Func
ÔÔ/ 3
<
ÔÔ3 4
bool
ÔÔ4 8
>
ÔÔ8 9
)
ÔÔ9 :
ReflectionUtility
ÔÔ: K
.
ÔÔK L)
GetClosedDelegateOnProperty
ÔÔL g
<
ÔÔg h
Func
ÔÔh l
<
ÔÔl m
bool
ÔÔm q
>
ÔÔq r
>
ÔÔr s
(
ÔÔs t
GetProGridsType
 #
(
# $
)
$ %
,
% &!
GetProGridsInstance
' :
(
: ;
)
; <
,
< =
$str
> O
,
O P
BindingFlags
Q ]
.
] ^
Instance
^ f
|
g h
BindingFlags
i u
.
u v
	NonPublic
v 
) Ä
;Ä Å
if
ÚÚ 
(
ÚÚ )
s_IsFullGridEnabledDelegate
ÚÚ +
!=
ÚÚ, .
null
ÚÚ/ 3
)
ÚÚ3 4
return
ÛÛ )
s_IsFullGridEnabledDelegate
ÛÛ 2
(
ÛÛ2 3
)
ÛÛ3 4
;
ÛÛ4 5
return
ıı 
false
ıı 
;
ıı 
}
ˆˆ 	
public
¯¯ 
static
¯¯ 

HandleAxis
¯¯  
GetActiveGridAxis
¯¯! 2
(
¯¯2 3
)
¯¯3 4
{
˘˘ 	
if
˙˙ 
(
˙˙ )
s_GetActiveGridAxisDelegate
˙˙ +
==
˙˙, .
null
˙˙/ 3
)
˙˙3 4)
s_GetActiveGridAxisDelegate
˚˚ +
=
˚˚, -
ReflectionUtility
˚˚. ?
.
˚˚? @
GetFieldInfo
˚˚@ L
(
˚˚L M
GetProGridsType
˚˚M \
(
˚˚\ ]
)
˚˚] ^
,
˚˚^ _
$str
˚˚` o
,
˚˚o p
(
˚˚q r
BindingFlags
˚˚r ~
.
˚˚~ 
Instance˚˚ á
|˚˚à â
BindingFlags˚˚ä ñ
.˚˚ñ ó
	NonPublic˚˚ó †
)˚˚† °
)˚˚° ¢
;˚˚¢ £
if
˝˝ 
(
˝˝ )
s_GetActiveGridAxisDelegate
˝˝ +
!=
˝˝, .
null
˝˝/ 3
)
˝˝3 4
{
˛˛ 
var
ˇˇ 
value
ˇˇ 
=
ˇˇ 
(
ˇˇ 
int
ˇˇ  
)
ˇˇ  !)
s_GetActiveGridAxisDelegate
ˇˇ" =
.
ˇˇ= >
GetValue
ˇˇ> F
(
ˇˇF G!
GetProGridsInstance
ˇˇG Z
(
ˇˇZ [
)
ˇˇ[ \
)
ˇˇ\ ]
;
ˇˇ] ^
if
ÉÉ 
(
ÉÉ 
value
ÉÉ 
==
ÉÉ 
$num
ÉÉ 
||
ÉÉ  "
value
ÉÉ# (
==
ÉÉ) +
$num
ÉÉ, /
)
ÉÉ/ 0
return
ÑÑ 

HandleAxis
ÑÑ %
.
ÑÑ% &
X
ÑÑ& '
;
ÑÑ' (
if
ÖÖ 
(
ÖÖ 
value
ÖÖ 
==
ÖÖ 
$num
ÖÖ 
||
ÖÖ  "
value
ÖÖ# (
==
ÖÖ) +
$num
ÖÖ, 0
)
ÖÖ0 1
return
ÜÜ 

HandleAxis
ÜÜ %
.
ÜÜ% &
Y
ÜÜ& '
;
ÜÜ' (
if
áá 
(
áá 
value
áá 
==
áá 
$num
áá 
||
áá  "
value
áá# (
==
áá) +
$num
áá, 0
)
áá0 1
return
àà 

HandleAxis
àà %
.
àà% &
Z
àà& '
;
àà' (
}
ââ 
return
ãã 

HandleAxis
ãã 
.
ãã 
Free
ãã "
;
ãã" #
}
åå 	
public
éé 
static
éé 
float
éé !
GetActiveGridOffset
éé /
(
éé/ 0
)
éé0 1
{
èè 	
if
êê 
(
êê +
s_GetActiveGridOffsetDelegate
êê -
==
êê. 0
null
êê1 5
)
êê5 6+
s_GetActiveGridOffsetDelegate
ëë -
=
ëë. /
(
ëë0 1
Func
ëë1 5
<
ëë5 6
float
ëë6 ;
>
ëë; <
)
ëë< =
ReflectionUtility
ëë= N
.
ëëN O)
GetClosedDelegateOnProperty
ëëO j
<
ëëj k
Func
ëëk o
<
ëëo p
float
ëëp u
>
ëëu v
>
ëëv w
(
ëëw x
GetProGridsType
íí #
(
íí# $
)
íí$ %
,
íí% &!
GetProGridsInstance
íí' :
(
íí: ;
)
íí; <
,
íí< =
$str
íí> P
,
ííP Q
(
ííR S
BindingFlags
ííS _
.
íí_ `
Instance
íí` h
|
ííi j
BindingFlags
íík w
.
ííw x
Public
ííx ~
)
íí~ 
)íí Ä
;ííÄ Å
if
îî 
(
îî +
s_GetActiveGridOffsetDelegate
îî -
!=
îî. 0
null
îî1 5
)
îî5 6
return
ïï +
s_GetActiveGridOffsetDelegate
ïï 4
(
ïï4 5
)
ïï5 6
;
ïï6 7
return
óó 
$num
óó 
;
óó 
}
òò 	
public
ûû 
static
ûû 
void
ûû &
SubscribePushToGridEvent
ûû 3
(
ûû3 4
Action
ûû4 :
<
ûû: ;
float
ûû; @
>
ûû@ A
listener
ûûB J
)
ûûJ K
{
üü 	
if
†† 
(
†† 
GetProGridsType
†† 
(
††  
)
††  !
==
††" $
null
††% )
)
††) *
return
°° 
;
°° 
if
££ 
(
££ 0
"s_SubscribePushToGridEventDelegate
££ 2
==
££3 5
null
££6 :
)
££: ;0
"s_SubscribePushToGridEventDelegate
§§ 2
=
§§3 4
(
§§5 6
Action
§§6 <
<
§§< =
Action
§§= C
<
§§C D
float
§§D I
>
§§I J
>
§§J K
)
§§K L
ReflectionUtility
§§L ]
.
§§] ^
GetOpenDelegate
§§^ m
<
§§m n
Action
§§n t
<
§§t u
Action
§§u {
<
§§{ |
float§§| Å
>§§Å Ç
>§§Ç É
>§§É Ñ
(§§Ñ Ö
GetProGridsType§§Ö î
(§§î ï
)§§ï ñ
,§§ñ ó
$str§§ò Ø
)§§Ø ∞
;§§∞ ±
if
¶¶ 
(
¶¶ 0
"s_SubscribePushToGridEventDelegate
¶¶ 2
!=
¶¶3 5
null
¶¶6 :
)
¶¶: ;0
"s_SubscribePushToGridEventDelegate
ßß 2
(
ßß2 3
listener
ßß3 ;
)
ßß; <
;
ßß< =
}
®® 	
public
ÆÆ 
static
ÆÆ 
void
ÆÆ (
UnsubscribePushToGridEvent
ÆÆ 5
(
ÆÆ5 6
Action
ÆÆ6 <
<
ÆÆ< =
float
ÆÆ= B
>
ÆÆB C
listener
ÆÆD L
)
ÆÆL M
{
ØØ 	
if
∞∞ 
(
∞∞ 
GetProGridsType
∞∞ 
(
∞∞  
)
∞∞  !
==
∞∞" $
null
∞∞% )
)
∞∞) *
return
±± 
;
±± 
if
≥≥ 
(
≥≥ 2
$s_UnsubscribePushToGridEventDelegate
≥≥ 4
==
≥≥5 7
null
≥≥8 <
)
≥≥< =2
$s_UnsubscribePushToGridEventDelegate
¥¥ 4
=
¥¥5 6
(
¥¥7 8
Action
¥¥8 >
<
¥¥> ?
Action
¥¥? E
<
¥¥E F
float
¥¥F K
>
¥¥K L
>
¥¥L M
)
¥¥M N
ReflectionUtility
¥¥N _
.
¥¥_ `
GetOpenDelegate
¥¥` o
<
¥¥o p
Action
¥¥p v
<
¥¥v w
Action
¥¥w }
<
¥¥} ~
float¥¥~ É
>¥¥É Ñ
>¥¥Ñ Ö
>¥¥Ö Ü
(¥¥Ü á
GetProGridsType¥¥á ñ
(¥¥ñ ó
)¥¥ó ò
,¥¥ò ô
$str¥¥ö ¥
)¥¥¥ µ
;¥¥µ ∂
if
∂∂ 
(
∂∂ 2
$s_UnsubscribePushToGridEventDelegate
∂∂ 4
!=
∂∂5 7
null
∂∂8 <
)
∂∂< =2
$s_UnsubscribePushToGridEventDelegate
∑∑ 4
(
∑∑4 5
listener
∑∑5 =
)
∑∑= >
;
∑∑> ?
}
∏∏ 	
public
ææ 
static
ææ 
void
ææ 
OnHandleMove
ææ '
(
ææ' (
Vector3
ææ( /
worldDirection
ææ0 >
)
ææ> ?
{
øø 	
if
¿¿ 
(
¿¿ 
GetProGridsType
¿¿ 
(
¿¿  
)
¿¿  !
==
¿¿" $
null
¿¿% )
)
¿¿) *
return
¡¡ 
;
¡¡ 
if
√√ 
(
√√ $
s_OnHandleMoveDelegate
√√ &
==
√√' )
null
√√* .
)
√√. /$
s_OnHandleMoveDelegate
ƒƒ &
=
ƒƒ' (
(
ƒƒ) *
Action
ƒƒ* 0
<
ƒƒ0 1
Vector3
ƒƒ1 8
>
ƒƒ8 9
)
ƒƒ9 :
ReflectionUtility
ƒƒ: K
.
ƒƒK L
GetOpenDelegate
ƒƒL [
<
ƒƒ[ \
Action
ƒƒ\ b
<
ƒƒb c
Vector3
ƒƒc j
>
ƒƒj k
>
ƒƒk l
(
ƒƒl m
GetProGridsType
ƒƒm |
(
ƒƒ| }
)
ƒƒ} ~
,
ƒƒ~ 
$strƒƒÄ é
)ƒƒé è
;ƒƒè ê
if
∆∆ 
(
∆∆ $
s_OnHandleMoveDelegate
∆∆ &
!=
∆∆' )
null
∆∆* .
)
∆∆. /$
s_OnHandleMoveDelegate
«« &
(
««& '
worldDirection
««' 5
)
««5 6
;
««6 7
}
»» 	
public
ŒŒ 
static
ŒŒ 
void
ŒŒ #
SubscribeToolbarEvent
ŒŒ 0
(
ŒŒ0 1
Action
ŒŒ1 7
<
ŒŒ7 8
bool
ŒŒ8 <
>
ŒŒ< =
listener
ŒŒ> F
)
ŒŒF G
{
œœ 	
if
–– 
(
–– 
GetProGridsType
–– 
(
––  
)
––  !
==
––" $
null
––% )
)
––) *
return
—— 
;
—— 
if
”” 
(
”” -
s_SubscribeToolbarEventDelegate
”” /
==
””0 2
null
””3 7
)
””7 8-
s_SubscribeToolbarEventDelegate
‘‘ /
=
‘‘0 1
(
‘‘2 3
Action
‘‘3 9
<
‘‘9 :
Action
‘‘: @
<
‘‘@ A
bool
‘‘A E
>
‘‘E F
>
‘‘F G
)
‘‘G H
ReflectionUtility
‘‘H Y
.
‘‘Y Z
GetOpenDelegate
‘‘Z i
<
‘‘i j
Action
‘‘j p
<
‘‘p q
Action
‘‘q w
<
‘‘w x
bool
‘‘x |
>
‘‘| }
>
‘‘} ~
>
‘‘~ 
(‘‘ Ä
GetProGridsType‘‘Ä è
(‘‘è ê
)‘‘ê ë
,‘‘ë í
$str‘‘ì Æ
)‘‘Æ Ø
;‘‘Ø ∞
if
÷÷ 
(
÷÷ -
s_SubscribeToolbarEventDelegate
÷÷ /
!=
÷÷0 2
null
÷÷3 7
)
÷÷7 8-
s_SubscribeToolbarEventDelegate
◊◊ /
(
◊◊/ 0
listener
◊◊0 8
)
◊◊8 9
;
◊◊9 :
}
ÿÿ 	
public
ﬁﬁ 
static
ﬁﬁ 
void
ﬁﬁ %
UnsubscribeToolbarEvent
ﬁﬁ 2
(
ﬁﬁ2 3
Action
ﬁﬁ3 9
<
ﬁﬁ9 :
bool
ﬁﬁ: >
>
ﬁﬁ> ?
listener
ﬁﬁ@ H
)
ﬁﬁH I
{
ﬂﬂ 	
if
‡‡ 
(
‡‡ 
GetProGridsType
‡‡ 
(
‡‡  
)
‡‡  !
==
‡‡" $
null
‡‡% )
)
‡‡) *
return
·· 
;
·· 
if
„„ 
(
„„ /
!s_UnsubscribeToolbarEventDelegate
„„ 1
==
„„2 4
null
„„5 9
)
„„9 :/
!s_UnsubscribeToolbarEventDelegate
‰‰ 1
=
‰‰2 3
(
‰‰4 5
Action
‰‰5 ;
<
‰‰; <
Action
‰‰< B
<
‰‰B C
bool
‰‰C G
>
‰‰G H
>
‰‰H I
)
‰‰I J
ReflectionUtility
‰‰J [
.
‰‰[ \
GetOpenDelegate
‰‰\ k
<
‰‰k l
Action
‰‰l r
<
‰‰r s
Action
‰‰s y
<
‰‰y z
bool
‰‰z ~
>
‰‰~ 
>‰‰ Ä
>‰‰Ä Å
(‰‰Å Ç
GetProGridsType‰‰Ç ë
(‰‰ë í
)‰‰í ì
,‰‰ì î
$str‰‰ï ≥
)‰‰≥ ¥
;‰‰¥ µ
if
ÊÊ 
(
ÊÊ /
!s_UnsubscribeToolbarEventDelegate
ÊÊ 1
!=
ÊÊ2 4
null
ÊÊ5 9
)
ÊÊ9 :/
!s_UnsubscribeToolbarEventDelegate
ÁÁ 1
(
ÁÁ1 2
listener
ÁÁ2 :
)
ÁÁ: ;
;
ÁÁ; <
}
ËË 	
public
ÔÔ 
static
ÔÔ 
float
ÔÔ 
ProGridsSnap
ÔÔ (
(
ÔÔ( )
float
ÔÔ) .
point
ÔÔ/ 4
)
ÔÔ4 5
{
 	
if
ÒÒ 
(
ÒÒ 
GetProGridsType
ÒÒ 
(
ÒÒ  
)
ÒÒ  !
==
ÒÒ" $
null
ÒÒ% )
)
ÒÒ) *
return
ÚÚ 
point
ÚÚ 
;
ÚÚ 
if
ÙÙ 
(
ÙÙ 
SnapEnabled
ÙÙ 
(
ÙÙ 
)
ÙÙ 
)
ÙÙ 
return
ıı  
ProBuilderSnapping
ıı )
.
ıı) *
	SnapValue
ıı* 3
(
ıı3 4
point
ıı4 9
,
ıı9 :
ProGridsInterface
ıı; L
.
ııL M
	SnapValue
ııM V
(
ııV W
)
ııW X
)
ııX Y
;
ııY Z
return
˜˜ 
point
˜˜ 
;
˜˜ 
}
¯¯ 	
public
ˇˇ 
static
ˇˇ 
Vector3
ˇˇ 
ProGridsSnap
ˇˇ *
(
ˇˇ* +
Vector3
ˇˇ+ 2
point
ˇˇ3 8
)
ˇˇ8 9
{
ÄÄ 	
if
ÅÅ 
(
ÅÅ 
GetProGridsType
ÅÅ 
(
ÅÅ  
)
ÅÅ  !
==
ÅÅ" $
null
ÅÅ% )
)
ÅÅ) *
return
ÇÇ 
point
ÇÇ 
;
ÇÇ 
if
ÑÑ 
(
ÑÑ 
ProGridsInterface
ÑÑ !
.
ÑÑ! "
SnapEnabled
ÑÑ" -
(
ÑÑ- .
)
ÑÑ. /
)
ÑÑ/ 0
{
ÖÖ 
float
ÜÜ 
snap
ÜÜ 
=
ÜÜ 
ProGridsInterface
ÜÜ .
.
ÜÜ. /
	SnapValue
ÜÜ/ 8
(
ÜÜ8 9
)
ÜÜ9 :
;
ÜÜ: ;
return
áá  
ProBuilderSnapping
áá )
.
áá) *
	SnapValue
áá* 3
(
áá3 4
point
áá4 9
,
áá9 :
snap
áá; ?
)
áá? @
;
áá@ A
}
àà 
return
ää 
point
ää 
;
ää 
}
ãã 	
public
ìì 
static
ìì 
Vector3
ìì 
ProGridsSnap
ìì *
(
ìì* +
Vector3
ìì+ 2
point
ìì3 8
,
ìì8 9
Vector3
ìì: A
mask
ììB F
)
ììF G
{
îî 	
if
ïï 
(
ïï 
GetProGridsType
ïï 
(
ïï  
)
ïï  !
==
ïï" $
null
ïï% )
)
ïï) *
return
ññ 
point
ññ 
;
ññ 
if
òò 
(
òò 
ProGridsInterface
òò !
.
òò! "
SnapEnabled
òò" -
(
òò- .
)
òò. /
)
òò/ 0
{
ôô 
float
öö 
snap
öö 
=
öö 
ProGridsInterface
öö .
.
öö. /
	SnapValue
öö/ 8
(
öö8 9
)
öö9 :
;
öö: ;
return
õõ  
ProBuilderSnapping
õõ )
.
õõ) *
	SnapValue
õõ* 3
(
õõ3 4
point
õõ4 9
,
õõ9 :
mask
õõ; ?
*
õõ@ A
snap
õõB F
)
õõF G
;
õõG H
}
úú 
return
ûû 
point
ûû 
;
ûû 
}
üü 	
}
†† 
}°° ©˝
íD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\AutoUVEditor.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
{

 
static 

class 
AutoUVEditor 
{ 
static 
ProBuilderEditor 
editor  &
{ 	
get 
{ 
return 
ProBuilderEditor )
.) *
instance* 2
;2 3
}4 5
} 	
static 
AutoUnwrapSettings !
s_AutoUVSettings" 2
=3 4
AutoUnwrapSettings5 G
.G H
tileH L
;L M
static 
int 
textureGroup 
=  !
-" #
$num# $
;$ %
static 
List 
< 
AutoUnwrapSettings &
>& ''
s_AutoUVSettingsInSelection( C
=D E
newF I
ListJ N
<N O
AutoUnwrapSettingsO a
>a b
(b c
)c d
;d e
static 

Dictionary 
< 
string  
,  !
bool" &
>& ' 
s_AutoUVSettingsDiff( <
== >
new? B

DictionaryC M
<M N
stringN T
,T U
boolV Z
>Z [
([ \
)\ ]
{ 	
{ 
$str 
, 
false  %
}& '
,' (
{ 
$str 
, 
false $
}% &
,& '
{ 
$str 
, 
false 
} 
, 
{ 
$str 
, 
false 
} 
, 
{   
$str   
,   
false   
}   
,    
{!! 
$str!! 
,!! 
false!! 
}!! 
,!! 
{"" 
$str"" 
,"" 
false"" 
}"" 
,""  
{## 
$str## 
,## 
false## 
}## 
,##  
{$$ 
$str$$ 
,$$ 
false$$ 
}$$  
,$$  !
{%% 
$str%% 
,%% 
false%% 
}%%  
,%%  !
{&& 
$str&& 
,&& 
false&& 
}&&  !
,&&! "
{'' 
$str'' 
,'' 
false'' 
}'' 
,''  
{(( 
$str(( 
,(( 
false(( 
}((  !
,((! "
{)) 
$str)) 
,)) 
false)) #
}))$ %
}** 	
;**	 

public,, 
enum,, 
Axis2D,, 
{-- 	
XY.. 
,.. 
X// 
,// 
Y00 
}11 	
static33 
Vector233 
s_ScrollPosition33 '
;33' (
public99 
static99 
bool99 
OnGUI99  
(99  !
ProBuilderMesh99! /
[99/ 0
]990 1
	selection992 ;
,99; <
float99= B
width99C H
)99H I
{:: 	 
UpdateDiffDictionary;;  
(;;  !
	selection;;! *
);;* +
;;;+ ,
s_ScrollPosition== 
=== 
EditorGUILayout== .
.==. /
BeginScrollView==/ >
(==> ?
s_ScrollPosition==? O
)==O P
;==P Q
float>> 
	tempFloat>> 
=>> 
$num>>  
;>>  !
	EditorGUI@@ 
.@@ 
BeginChangeCheck@@ &
(@@& '
)@@' (
;@@( )
	GUILayoutEE 
.EE 
LabelEE 
(EE 
$strEE 0
,EE0 1
EditorStylesEE2 >
.EE> ?
	boldLabelEE? H
)EEH I
;EEI J
	GUILayoutGG 
.GG 
BeginHorizontalGG %
(GG% &
)GG& '
;GG' (
	EditorGUIHH 
.HH 
showMixedValueHH $
=HH% & 
s_AutoUVSettingsDiffHH' ;
[HH; <
$strHH< B
]HHB C
;HHC D
	GUILayoutII 
.II 
LabelII 
(II 
$strII '
,II' (
	GUILayoutII) 2
.II2 3
MaxWidthII3 ;
(II; <
$numII< >
)II> ?
,II? @
	GUILayoutIIA J
.IIJ K
MinWidthIIK S
(IIS T
$numIIT V
)IIV W
)IIW X
;IIX Y
	EditorGUIJJ 
.JJ 
BeginChangeCheckJJ &
(JJ& '
)JJ' (
;JJ( )
s_AutoUVSettingsKK 
.KK 
fillKK !
=KK" #
(KK$ %
AutoUnwrapSettingsKK% 7
.KK7 8
FillKK8 <
)KK< =
EditorGUILayoutKK= L
.KKL M
	EnumPopupKKM V
(KKV W
s_AutoUVSettingsKKW g
.KKg h
fillKKh l
)KKl m
;KKm n
ifLL 
(LL 
	EditorGUILL 
.LL 
EndChangeCheckLL (
(LL( )
)LL) *
)LL* +
SetFillMM 
(MM 
s_AutoUVSettingsMM (
.MM( )
fillMM) -
,MM- .
	selectionMM/ 8
)MM8 9
;MM9 :
	GUILayoutNN 
.NN 
EndHorizontalNN #
(NN# $
)NN$ %
;NN% &
	GUILayoutPP 
.PP 
BeginHorizontalPP %
(PP% &
)PP& '
;PP' (
boolQQ 
enabledQQ 
=QQ 
GUIQQ 
.QQ 
enabledQQ &
;QQ& '
GUIRR 
.RR 
enabledRR 
=RR 
!RR 
s_AutoUVSettingsRR +
.RR+ ,
useWorldSpaceRR, 9
;RR9 :
	EditorGUISS 
.SS 
showMixedValueSS $
=SS% & 
s_AutoUVSettingsDiffSS' ;
[SS; <
$strSS< D
]SSD E
;SSE F
	EditorGUITT 
.TT 
BeginChangeCheckTT &
(TT& '
)TT' (
;TT( )
	GUILayoutUU 
.UU 
LabelUU 
(UU 
$strUU $
,UU$ %
	GUILayoutUU& /
.UU/ 0
MaxWidthUU0 8
(UU8 9
$numUU9 ;
)UU; <
,UU< =
	GUILayoutUU> G
.UUG H
MinWidthUUH P
(UUP Q
$numUUQ S
)UUS T
)UUT U
;UUU V
s_AutoUVSettingsVV 
.VV 
anchorVV #
=VV$ %
(VV& '
AutoUnwrapSettingsVV' 9
.VV9 :
AnchorVV: @
)VV@ A
EditorGUILayoutVVA P
.VVP Q
	EnumPopupVVQ Z
(VVZ [
s_AutoUVSettingsVV[ k
.VVk l
anchorVVl r
)VVr s
;VVs t
ifWW 
(WW 
	EditorGUIWW 
.WW 
EndChangeCheckWW (
(WW( )
)WW) *
)WW* +
	SetAnchorXX 
(XX 
s_AutoUVSettingsXX *
.XX* +
anchorXX+ 1
,XX1 2
	selectionXX3 <
)XX< =
;XX= >
GUIYY 
.YY 
enabledYY 
=YY 
enabledYY !
;YY! "
	GUILayoutZZ 
.ZZ 
EndHorizontalZZ #
(ZZ# $
)ZZ$ %
;ZZ% &
GUI\\ 
.\\ 
backgroundColor\\ 
=\\  !
PreferenceKeys\\" 0
.\\0 1
proBuilderLightGray\\1 D
;\\D E
UI]] 
.]] 
EditorGUIUtility]] 
.]]  
DrawSeparator]]  -
(]]- .
$num]]. /
)]]/ 0
;]]0 1
GUI^^ 
.^^ 
backgroundColor^^ 
=^^  !
Color^^" '
.^^' (
white^^( -
;^^- .
	GUILayout`` 
.`` 
Label`` 
(`` 
$str`` '
,``' (
EditorStyles``) 5
.``5 6
	boldLabel``6 ?
)``? @
;``@ A
	EditorGUIee 
.ee 
showMixedValueee $
=ee% & 
s_AutoUVSettingsDiffee' ;
[ee; <
$stree< E
]eeE F
||eeG I 
s_AutoUVSettingsDiffeeJ ^
[ee^ _
$stree_ h
]eeh i
;eei j
varff 
tempVec2ff 
=ff 
s_AutoUVSettingsff +
.ff+ ,
offsetff, 2
;ff2 3
UnityEnginegg 
.gg 
GUIgg 
.gg 
SetNextControlNamegg .
(gg. /
$strgg/ 7
)gg7 8
;gg8 9
s_AutoUVSettingshh 
.hh 
offsethh #
=hh$ %
EditorGUILayouthh& 5
.hh5 6
Vector2Fieldhh6 B
(hhB C
$strhhC K
,hhK L
s_AutoUVSettingshhM ]
.hh] ^
offsethh^ d
,hhd e
	GUILayouthhf o
.hho p
MaxWidthhhp x
(hhx y
widthhhy ~
)hh~ 
)	hh Ä
;
hhÄ Å
ifii 
(ii 
tempVec2ii 
.ii 
xii 
!=ii 
s_AutoUVSettingsii .
.ii. /
offsetii/ 5
.ii5 6
xii6 7
)ii7 8
{ii9 :
	SetOffsetii; D
(iiD E
s_AutoUVSettingsiiE U
.iiU V
offsetiiV \
,ii\ ]
Axis2Dii^ d
.iid e
Xiie f
,iif g
	selectioniih q
)iiq r
;iir s
}iit u
ifjj 
(jj 
tempVec2jj 
.jj 
yjj 
!=jj 
s_AutoUVSettingsjj .
.jj. /
offsetjj/ 5
.jj5 6
yjj6 7
)jj7 8
{jj9 :
	SetOffsetjj; D
(jjD E
s_AutoUVSettingsjjE U
.jjU V
offsetjjV \
,jj\ ]
Axis2Djj^ d
.jjd e
Yjje f
,jjf g
	selectionjjh q
)jjq r
;jjr s
}jjt u
	tempFloatoo 
=oo 
s_AutoUVSettingsoo (
.oo( )
rotationoo) 1
;oo1 2
	EditorGUIpp 
.pp 
showMixedValuepp $
=pp% & 
s_AutoUVSettingsDiffpp' ;
[pp; <
$strpp< F
]ppF G
;ppG H
	GUILayoutqq 
.qq 
Labelqq 
(qq 
newqq 

GUIContentqq  *
(qq* +
$strqq+ 5
,qq5 6
$strqq7 f
)qqf g
,qqg h
	GUILayoutqqi r
.qqr s
MaxWidthqqs {
(qq{ |
width	qq| Å
-
qqÇ É
$num
qqÑ Ü
)
qqÜ á
)
qqá à
;
qqà â
UnityEnginerr 
.rr 
GUIrr 
.rr 
SetNextControlNamerr .
(rr. /
$strrr/ 9
)rr9 :
;rr: ;
	EditorGUIss 
.ss 
BeginChangeCheckss &
(ss& '
)ss' (
;ss( )
	tempFloattt 
=tt 
EditorGUILayouttt '
.tt' (
Slidertt( .
(tt. /
	tempFloattt/ 8
,tt8 9
$numtt: <
,tt< =
$numtt> B
,ttB C
	GUILayoutttD M
.ttM N
MaxWidthttN V
(ttV W
widthttW \
)tt\ ]
)tt] ^
;tt^ _
ifuu 
(uu 
	EditorGUIuu 
.uu 
EndChangeCheckuu (
(uu( )
)uu) *
)uu* +
SetRotationvv 
(vv 
	tempFloatvv %
,vv% &
	selectionvv' 0
)vv0 1
;vv1 2
	EditorGUI{{ 
.{{ 
showMixedValue{{ $
={{% & 
s_AutoUVSettingsDiff{{' ;
[{{; <
$str{{< D
]{{D E
||{{F H 
s_AutoUVSettingsDiff{{I ]
[{{] ^
$str{{^ f
]{{f g
;{{g h
tempVec2|| 
=|| 
s_AutoUVSettings|| '
.||' (
scale||( -
;||- .
GUI}} 
.}} 
SetNextControlName}} "
(}}" #
$str}}# *
)}}* +
;}}+ ,
	EditorGUI~~ 
.~~ 
BeginChangeCheck~~ &
(~~& '
)~~' (
;~~( )
s_AutoUVSettings 
. 
scale "
=# $
EditorGUILayout% 4
.4 5
Vector2Field5 A
(A B
$strB J
,J K
s_AutoUVSettingsL \
.\ ]
scale] b
,b c
	GUILayoutd m
.m n
MaxWidthn v
(v w
widthw |
)| }
)} ~
;~ 
if
ÅÅ 
(
ÅÅ 
	EditorGUI
ÅÅ 
.
ÅÅ 
EndChangeCheck
ÅÅ (
(
ÅÅ( )
)
ÅÅ) *
)
ÅÅ* +
{
ÇÇ 
if
ÉÉ 
(
ÉÉ 
tempVec2
ÉÉ 
.
ÉÉ 
x
ÉÉ 
!=
ÉÉ !
s_AutoUVSettings
ÉÉ" 2
.
ÉÉ2 3
scale
ÉÉ3 8
.
ÉÉ8 9
x
ÉÉ9 :
)
ÉÉ: ;
{
ÉÉ< =
SetScale
ÉÉ> F
(
ÉÉF G
s_AutoUVSettings
ÉÉG W
.
ÉÉW X
scale
ÉÉX ]
,
ÉÉ] ^
Axis2D
ÉÉ_ e
.
ÉÉe f
X
ÉÉf g
,
ÉÉg h
	selection
ÉÉi r
)
ÉÉr s
;
ÉÉs t
}
ÉÉu v
if
ÑÑ 
(
ÑÑ 
tempVec2
ÑÑ 
.
ÑÑ 
y
ÑÑ 
!=
ÑÑ !
s_AutoUVSettings
ÑÑ" 2
.
ÑÑ2 3
scale
ÑÑ3 8
.
ÑÑ8 9
y
ÑÑ9 :
)
ÑÑ: ;
{
ÑÑ< =
SetScale
ÑÑ> F
(
ÑÑF G
s_AutoUVSettings
ÑÑG W
.
ÑÑW X
scale
ÑÑX ]
,
ÑÑ] ^
Axis2D
ÑÑ_ e
.
ÑÑe f
Y
ÑÑf g
,
ÑÑg h
	selection
ÑÑi r
)
ÑÑr s
;
ÑÑs t
}
ÑÑu v
}
ÖÖ 
	GUILayout
àà 
.
àà 
BeginHorizontal
àà %
(
àà% &
)
àà& '
;
àà' (
if
ââ 
(
ââ 
	GUILayout
ââ 
.
ââ 
Button
ââ  
(
ââ  !
$str
ââ! %
,
ââ% &
EditorStyles
ââ' 3
.
ââ3 4
miniButtonLeft
ââ4 B
)
ââB C
)
ââC D
SetScale
ââG O
(
ââO P
Vector2
ââP W
.
ââW X
one
ââX [
*
ââ\ ]
$num
ââ^ `
,
ââ` a
Axis2D
ââb h
.
ââh i
XY
ââi k
,
ââk l
	selection
ââm v
)
ââv w
;
ââw x
if
ää 
(
ää 
	GUILayout
ää 
.
ää 
Button
ää  
(
ää  !
$str
ää! $
,
ää$ %
EditorStyles
ää& 2
.
ää2 3
miniButtonMid
ää3 @
)
ää@ A
)
ääA B
SetScale
ääG O
(
ääO P
Vector2
ääP W
.
ääW X
one
ääX [
,
ää[ \
Axis2D
ää] c
.
ääc d
XY
ääd f
,
ääf g
	selection
ääh q
)
ääq r
;
äär s
if
ãã 
(
ãã 
	GUILayout
ãã 
.
ãã 
Button
ãã  
(
ãã  !
$str
ãã! $
,
ãã$ %
EditorStyles
ãã& 2
.
ãã2 3
miniButtonMid
ãã3 @
)
ãã@ A
)
ããA B
SetScale
ããG O
(
ããO P
Vector2
ããP W
.
ããW X
one
ããX [
*
ãã\ ]
$num
ãã^ a
,
ããa b
Axis2D
ããc i
.
ããi j
XY
ããj l
,
ããl m
	selection
ããn w
)
ããw x
;
ããx y
if
åå 
(
åå 
	GUILayout
åå 
.
åå 
Button
åå  
(
åå  !
$str
åå! $
,
åå$ %
EditorStyles
åå& 2
.
åå2 3
miniButtonMid
åå3 @
)
åå@ A
)
ååA B
SetScale
ååG O
(
ååO P
Vector2
ååP W
.
ååW X
one
ååX [
*
åå\ ]
$num
åå^ b
,
ååb c
Axis2D
ååd j
.
ååj k
XY
ååk m
,
ååm n
	selection
ååo x
)
ååx y
;
ååy z
if
çç 
(
çç 
	GUILayout
çç 
.
çç 
Button
çç  
(
çç  !
$str
çç! $
,
çç$ %
EditorStyles
çç& 2
.
çç2 3
miniButtonMid
çç3 @
)
çç@ A
)
ççA B
SetScale
ççG O
(
ççO P
Vector2
ççP W
.
ççW X
one
ççX [
*
çç\ ]
$num
çç^ c
,
ççc d
Axis2D
ççe k
.
ççk l
XY
ççl n
,
ççn o
	selection
ççp y
)
ççy z
;
ççz {
if
éé 
(
éé 
	GUILayout
éé 
.
éé 
Button
éé  
(
éé  !
$str
éé! %
,
éé% &
EditorStyles
éé' 3
.
éé3 4
miniButtonRight
éé4 C
)
ééC D
)
ééD E
SetScale
ééG O
(
ééO P
Vector2
ééP W
.
ééW X
one
ééX [
*
éé\ ]
$num
éé^ d
,
ééd e
Axis2D
ééf l
.
éél m
XY
éém o
,
ééo p
	selection
ééq z
)
ééz {
;
éé{ |
	GUILayout
èè 
.
èè 
EndHorizontal
èè #
(
èè# $
)
èè$ %
;
èè% &
	GUILayout
ëë 
.
ëë 
Space
ëë 
(
ëë 
$num
ëë 
)
ëë 
;
ëë 
UnityEngine
ìì 
.
ìì 
GUI
ìì 
.
ìì 
backgroundColor
ìì +
=
ìì, -
PreferenceKeys
ìì. <
.
ìì< =!
proBuilderLightGray
ìì= P
;
ììP Q
UI
îî 
.
îî 
EditorGUIUtility
îî 
.
îî  
DrawSeparator
îî  -
(
îî- .
$num
îî. /
)
îî/ 0
;
îî0 1
UnityEngine
ïï 
.
ïï 
GUI
ïï 
.
ïï 
backgroundColor
ïï +
=
ïï, -
Color
ïï. 3
.
ïï3 4
white
ïï4 9
;
ïï9 :
	GUILayout
öö 
.
öö 
Label
öö 
(
öö 
$str
öö %
,
öö% &
EditorStyles
öö' 3
.
öö3 4
	boldLabel
öö4 =
)
öö= >
;
öö> ?
	EditorGUI
úú 
.
úú 
showMixedValue
úú $
=
úú% &"
s_AutoUVSettingsDiff
úú' ;
[
úú; <
$str
úú< K
]
úúK L
;
úúL M
	EditorGUI
ùù 
.
ùù 
BeginChangeCheck
ùù &
(
ùù& '
)
ùù' (
;
ùù( )
s_AutoUVSettings
ûû 
.
ûû 
useWorldSpace
ûû *
=
ûû+ ,
EditorGUILayout
ûû- <
.
ûû< =
Toggle
ûû= C
(
ûûC D
$str
ûûD Q
,
ûûQ R
s_AutoUVSettings
ûûS c
.
ûûc d
useWorldSpace
ûûd q
)
ûûq r
;
ûûr s
if
üü 
(
üü 
	EditorGUI
üü 
.
üü 
EndChangeCheck
üü (
(
üü( )
)
üü) *
)
üü* +
SetUseWorldSpace
††  
(
††  !
s_AutoUVSettings
††! 1
.
††1 2
useWorldSpace
††2 ?
,
††? @
	selection
††A J
)
††J K
;
††K L
GUI
¢¢ 
.
¢¢ 
backgroundColor
¢¢ 
=
¢¢  !
PreferenceKeys
¢¢" 0
.
¢¢0 1!
proBuilderLightGray
¢¢1 D
;
¢¢D E
UI
££ 
.
££ 
EditorGUIUtility
££ 
.
££  
DrawSeparator
££  -
(
££- .
$num
££. /
)
££/ 0
;
££0 1
GUI
§§ 
.
§§ 
backgroundColor
§§ 
=
§§  !
Color
§§" '
.
§§' (
white
§§( -
;
§§- .
	EditorGUI
®® 
.
®® 
showMixedValue
®® $
=
®®% &"
s_AutoUVSettingsDiff
®®' ;
[
®®; <
$str
®®< C
]
®®C D
;
®®D E
	EditorGUI
©© 
.
©© 
BeginChangeCheck
©© &
(
©©& '
)
©©' (
;
©©( )
s_AutoUVSettings
™™ 
.
™™ 
flipU
™™ "
=
™™# $
EditorGUILayout
™™% 4
.
™™4 5
Toggle
™™5 ;
(
™™; <
$str
™™< D
,
™™D E
s_AutoUVSettings
™™F V
.
™™V W
flipU
™™W \
)
™™\ ]
;
™™] ^
if
´´ 
(
´´ 
	EditorGUI
´´ 
.
´´ 
EndChangeCheck
´´ (
(
´´( )
)
´´) *
)
´´* +
SetFlipU
¨¨ 
(
¨¨ 
s_AutoUVSettings
¨¨ )
.
¨¨) *
flipU
¨¨* /
,
¨¨/ 0
	selection
¨¨1 :
)
¨¨: ;
;
¨¨; <
	EditorGUI
ØØ 
.
ØØ 
showMixedValue
ØØ $
=
ØØ% &"
s_AutoUVSettingsDiff
ØØ' ;
[
ØØ; <
$str
ØØ< C
]
ØØC D
;
ØØD E
	EditorGUI
∞∞ 
.
∞∞ 
BeginChangeCheck
∞∞ &
(
∞∞& '
)
∞∞' (
;
∞∞( )
s_AutoUVSettings
±± 
.
±± 
flipV
±± "
=
±±# $
EditorGUILayout
±±% 4
.
±±4 5
Toggle
±±5 ;
(
±±; <
$str
±±< D
,
±±D E
s_AutoUVSettings
±±F V
.
±±V W
flipV
±±W \
)
±±\ ]
;
±±] ^
if
≤≤ 
(
≤≤ 
	EditorGUI
≤≤ 
.
≤≤ 
EndChangeCheck
≤≤ (
(
≤≤( )
)
≤≤) *
)
≤≤* +
SetFlipV
≥≥ 
(
≥≥ 
s_AutoUVSettings
≥≥ )
.
≥≥) *
flipV
≥≥* /
,
≥≥/ 0
	selection
≥≥1 :
)
≥≥: ;
;
≥≥; <
	EditorGUI
µµ 
.
µµ 
showMixedValue
µµ $
=
µµ% &"
s_AutoUVSettingsDiff
µµ' ;
[
µµ; <
$str
µµ< D
]
µµD E
;
µµE F
	EditorGUI
∂∂ 
.
∂∂ 
BeginChangeCheck
∂∂ &
(
∂∂& '
)
∂∂' (
;
∂∂( )
s_AutoUVSettings
∑∑ 
.
∑∑ 
swapUV
∑∑ #
=
∑∑$ %
EditorGUILayout
∑∑& 5
.
∑∑5 6
Toggle
∑∑6 <
(
∑∑< =
$str
∑∑= G
,
∑∑G H
s_AutoUVSettings
∑∑I Y
.
∑∑Y Z
swapUV
∑∑Z `
)
∑∑` a
;
∑∑a b
if
∏∏ 
(
∏∏ 
	EditorGUI
∏∏ 
.
∏∏ 
EndChangeCheck
∏∏ (
(
∏∏( )
)
∏∏) *
)
∏∏* +
	SetSwapUV
ππ 
(
ππ 
s_AutoUVSettings
ππ *
.
ππ* +
swapUV
ππ+ 1
,
ππ1 2
	selection
ππ3 <
)
ππ< =
;
ππ= >
	GUILayout
ææ 
.
ææ 
Label
ææ 
(
ææ 
$str
ææ ,
,
ææ, -
EditorStyles
ææ. :
.
ææ: ;
	boldLabel
ææ; D
)
ææD E
;
ææE F
	EditorGUI
¿¿ 
.
¿¿ 
BeginChangeCheck
¿¿ &
(
¿¿& '
)
¿¿' (
;
¿¿( )
	EditorGUI
¡¡ 
.
¡¡ 
showMixedValue
¡¡ $
=
¡¡% &"
s_AutoUVSettingsDiff
¡¡' ;
[
¡¡; <
$str
¡¡< J
]
¡¡J K
;
¡¡K L
GUI
√√ 
.
√√  
SetNextControlName
√√ "
(
√√" #
$str
√√# 1
)
√√1 2
;
√√2 3
textureGroup
ƒƒ 
=
ƒƒ 
UI
ƒƒ 
.
ƒƒ 
EditorGUIUtility
ƒƒ .
.
ƒƒ. /!
IntFieldConstrained
ƒƒ/ B
(
ƒƒB C
new
ƒƒC F

GUIContent
ƒƒG Q
(
ƒƒQ R
$str
ƒƒR a
,
ƒƒa b
$strƒƒc Ó
)ƒƒÓ Ô
,ƒƒÔ 
textureGroupƒƒÒ ˝
,ƒƒ˝ ˛
(ƒƒˇ Ä
intƒƒÄ É
)ƒƒÉ Ñ
widthƒƒÑ â
)ƒƒâ ä
;ƒƒä ã
if
∆∆ 
(
∆∆ 
	EditorGUI
∆∆ 
.
∆∆ 
EndChangeCheck
∆∆ (
(
∆∆( )
)
∆∆) *
)
∆∆* +
{
«« 
SetTextureGroup
»» 
(
»»  
	selection
»»  )
,
»») *
textureGroup
»»+ 7
)
»»7 8
;
»»8 9
foreach
   
(
   
var
   
kvp
    
in
  ! #
MeshSelection
  $ 1
.
  1 2%
selectedFacesInEditZone
  2 I
)
  I J
kvp
ÀÀ 
.
ÀÀ 
Key
ÀÀ 
.
ÀÀ 
	RefreshUV
ÀÀ %
(
ÀÀ% &
kvp
ÀÀ& )
.
ÀÀ) *
Value
ÀÀ* /
)
ÀÀ/ 0
;
ÀÀ0 1
	SceneView
ÕÕ 
.
ÕÕ 

RepaintAll
ÕÕ $
(
ÕÕ$ %
)
ÕÕ% &
;
ÕÕ& '"
s_AutoUVSettingsDiff
œœ $
[
œœ$ %
$str
œœ% 3
]
œœ3 4
=
œœ5 6
false
œœ7 <
;
œœ< =
}
–– 
if
““ 
(
““ 
	GUILayout
““ 
.
““ 
Button
““  
(
““  !
new
““! $

GUIContent
““% /
(
““/ 0
$str
““0 F
,
““F G
$str““H Ÿ
)““Ÿ ⁄
)““⁄ €
)““€ ‹
{
”” 
for
‘‘ 
(
‘‘ 
int
‘‘ 
i
‘‘ 
=
‘‘ 
$num
‘‘ 
;
‘‘ 
i
‘‘  !
<
‘‘" #
	selection
‘‘$ -
.
‘‘- .
Length
‘‘. 4
;
‘‘4 5
i
‘‘6 7
++
‘‘7 9
)
‘‘9 :'
TextureGroupSelectedFaces
’’ -
(
’’- .
	selection
’’. 7
[
’’7 8
i
’’8 9
]
’’9 :
)
’’: ;
;
’’; <
ProBuilderEditor
◊◊  
.
◊◊  !
Refresh
◊◊! (
(
◊◊( )
)
◊◊) *
;
◊◊* +
}
ÿÿ 
if
⁄⁄ 
(
⁄⁄ 
	GUILayout
⁄⁄ 
.
⁄⁄ 
Button
⁄⁄  
(
⁄⁄  !
new
⁄⁄! $

GUIContent
⁄⁄% /
(
⁄⁄/ 0
$str
⁄⁄0 G
,
⁄⁄G H
$str
⁄⁄I |
)
⁄⁄| }
)
⁄⁄} ~
)
⁄⁄~ 
{
€€ 
SetTextureGroup
‹‹ 
(
‹‹  
	selection
‹‹  )
,
‹‹) *
-
‹‹+ ,
$num
‹‹, -
)
‹‹- .
;
‹‹. /
foreach
ﬁﬁ 
(
ﬁﬁ 
var
ﬁﬁ 
kvp
ﬁﬁ  
in
ﬁﬁ! #
MeshSelection
ﬁﬁ$ 1
.
ﬁﬁ1 2%
selectedFacesInEditZone
ﬁﬁ2 I
)
ﬁﬁI J
{
ﬂﬂ 
kvp
‡‡ 
.
‡‡ 
Key
‡‡ 
.
‡‡ 
ToMesh
‡‡ "
(
‡‡" #
)
‡‡# $
;
‡‡$ %
kvp
·· 
.
·· 
Key
·· 
.
·· 
Refresh
·· #
(
··# $
)
··$ %
;
··% &
kvp
‚‚ 
.
‚‚ 
Key
‚‚ 
.
‚‚ 
Optimize
‚‚ $
(
‚‚$ %
)
‚‚% &
;
‚‚& '
}
„„ 
	SceneView
ÂÂ 
.
ÂÂ 

RepaintAll
ÂÂ $
(
ÂÂ$ %
)
ÂÂ% &
;
ÂÂ& '"
s_AutoUVSettingsDiff
ÁÁ $
[
ÁÁ$ %
$str
ÁÁ% 3
]
ÁÁ3 4
=
ÁÁ5 6
false
ÁÁ7 <
;
ÁÁ< =
ProBuilderEditor
ÈÈ  
.
ÈÈ  !
Refresh
ÈÈ! (
(
ÈÈ( )
)
ÈÈ) *
;
ÈÈ* +
}
ÍÍ 
if
ÌÌ 
(
ÌÌ 
	GUILayout
ÌÌ 
.
ÌÌ 
Button
ÌÌ  
(
ÌÌ  !
new
ÌÌ! $

GUIContent
ÌÌ% /
(
ÌÌ/ 0
$str
ÌÌ0 F
,
ÌÌF G
$str
ÌÌH |
)
ÌÌ| }
)
ÌÌ} ~
)
ÌÌ~ 
{
ÓÓ 
for
ÔÔ 
(
ÔÔ 
int
ÔÔ 
i
ÔÔ 
=
ÔÔ 
$num
ÔÔ 
;
ÔÔ 
i
ÔÔ  !
<
ÔÔ" #
	selection
ÔÔ$ -
.
ÔÔ- .
Length
ÔÔ. 4
;
ÔÔ4 5
i
ÔÔ6 7
++
ÔÔ7 9
)
ÔÔ9 :
	selection
 
[
 
i
 
]
  
.
  !
SetSelectedFaces
! 1
(
1 2
System
2 8
.
8 9
Array
9 >
.
> ?
FindAll
? F
(
F G
	selection
G P
[
P Q
i
Q R
]
R S
.
S T
facesInternal
T a
,
a b
x
c d
=>
e g
x
h i
.
i j
textureGroup
j v
==
w y
textureGroupz Ü
)Ü á
)á à
;à â
ProBuilderEditor
ÚÚ  
.
ÚÚ  !
Refresh
ÚÚ! (
(
ÚÚ( )
)
ÚÚ) *
;
ÚÚ* +
}
ÛÛ 
if
ıı 
(
ıı 
	GUILayout
ıı 
.
ıı 
Button
ıı  
(
ıı  !
new
ıı! $

GUIContent
ıı% /
(
ıı/ 0
$str
ıı0 ;
,
ıı; <
$str
ıı= ^
)
ıı^ _
)
ıı_ `
)
ıı` a
{
ˆˆ 
UndoUtility
˜˜ 
.
˜˜ 
RecordSelection
˜˜ +
(
˜˜+ ,
	selection
˜˜, 5
,
˜˜5 6
$str
˜˜7 B
)
˜˜B C
;
˜˜C D
for
˘˘ 
(
˘˘ 
int
˘˘ 
i
˘˘ 
=
˘˘ 
$num
˘˘ 
;
˘˘ 
i
˘˘  !
<
˘˘" #
	selection
˘˘$ -
.
˘˘- .
Length
˘˘. 4
;
˘˘4 5
i
˘˘6 7
++
˘˘7 9
)
˘˘9 :
{
˙˙ 
foreach
˚˚ 
(
˚˚ 
Face
˚˚ !
face
˚˚" &
in
˚˚' )
	selection
˚˚* 3
[
˚˚3 4
i
˚˚4 5
]
˚˚5 6
.
˚˚6 7
GetSelectedFaces
˚˚7 G
(
˚˚G H
)
˚˚H I
)
˚˚I J
{
¸¸ 
face
˝˝ 
.
˝˝ 
uv
˝˝ 
=
˝˝  ! 
AutoUnwrapSettings
˝˝" 4
.
˝˝4 5
tile
˝˝5 9
;
˝˝9 :
face
˛˛ 
.
˛˛ 
textureGroup
˛˛ )
=
˛˛* +
-
˛˛, -
$num
˛˛- .
;
˛˛. /
face
ˇˇ 
.
ˇˇ 
elementGroup
ˇˇ )
=
ˇˇ* +
-
ˇˇ, -
$num
ˇˇ- .
;
ˇˇ. /
}
ÄÄ 
	UVEditing
ÇÇ 
.
ÇÇ 
SplitUVs
ÇÇ &
(
ÇÇ& '
	selection
ÇÇ' 0
[
ÇÇ0 1
i
ÇÇ1 2
]
ÇÇ2 3
,
ÇÇ3 4
	selection
ÇÇ5 >
[
ÇÇ> ?
i
ÇÇ? @
]
ÇÇ@ A
.
ÇÇA B
GetSelectedFaces
ÇÇB R
(
ÇÇR S
)
ÇÇS T
)
ÇÇT U
;
ÇÇU V
}
ÉÉ 
ProBuilderEditor
ÖÖ  
.
ÖÖ  !
Refresh
ÖÖ! (
(
ÖÖ( )
)
ÖÖ) *
;
ÖÖ* +
}
ÜÜ 
GUI
àà 
.
àà 
backgroundColor
àà 
=
àà  !
PreferenceKeys
àà" 0
.
àà0 1!
proBuilderLightGray
àà1 D
;
ààD E
UI
ââ 
.
ââ 
EditorGUIUtility
ââ 
.
ââ  
DrawSeparator
ââ  -
(
ââ- .
$num
ââ. /
)
ââ/ 0
;
ââ0 1
GUI
ää 
.
ää 
backgroundColor
ää 
=
ää  !
Color
ää" '
.
ää' (
white
ää( -
;
ää- .
	GUILayout
èè 
.
èè 
EndScrollView
èè #
(
èè# $
)
èè$ %
;
èè% &
	EditorGUI
êê 
.
êê 
showMixedValue
êê $
=
êê% &
false
êê' ,
;
êê, -
return
íí 
	EditorGUI
íí 
.
íí 
EndChangeCheck
íí +
(
íí+ ,
)
íí, -
;
íí- .
}
ìì 	
static
ïï 
void
ïï "
UpdateDiffDictionary
ïï (
(
ïï( )
ProBuilderMesh
ïï) 7
[
ïï7 8
]
ïï8 9
	selection
ïï: C
)
ïïC D
{
ññ 	)
s_AutoUVSettingsInSelection
óó '
.
óó' (
Clear
óó( -
(
óó- .
)
óó. /
;
óó/ 0
if
ôô 
(
ôô 
	selection
ôô 
==
ôô 
null
ôô !
||
ôô" $
	selection
ôô% .
.
ôô. /
Length
ôô/ 5
<
ôô6 7
$num
ôô8 9
)
ôô9 :
return
öö 
;
öö )
s_AutoUVSettingsInSelection
úú '
=
úú( )
	selection
úú* 3
.
úú3 4

SelectMany
úú4 >
(
úú> ?
x
úú? @
=>
úúA C
x
úúD E
.
úúE F
GetSelectedFaces
úúF V
(
úúV W
)
úúW X
)
úúX Y
.
úúY Z
Where
úúZ _
(
úú_ `
x
úú` a
=>
úúb d
!
úúe f
x
úúf g
.
úúg h
manualUV
úúh p
)
úúp q
.
úúq r
Select
úúr x
(
úúx y
x
úúy z
=>
úú{ }
x
úú~ 
.úú Ä
uvúúÄ Ç
)úúÇ É
.úúÉ Ñ
ToListúúÑ ä
(úúä ã
)úúã å
;úúå ç
foreach
üü 
(
üü 
string
üü 
key
üü 
in
üü  ""
s_AutoUVSettingsDiff
üü# 7
.
üü7 8
Keys
üü8 <
.
üü< =
ToList
üü= C
(
üüC D
)
üüD E
)
üüE F"
s_AutoUVSettingsDiff
†† $
[
††$ %
key
††% (
]
††( )
=
††* +
false
††, 1
;
††1 2
if
¢¢ 
(
¢¢ )
s_AutoUVSettingsInSelection
¢¢ +
.
¢¢+ ,
Count
¢¢, 1
<
¢¢2 3
$num
¢¢4 5
)
¢¢5 6
return
¢¢7 =
;
¢¢= >
s_AutoUVSettings
§§ 
=
§§ 
new
§§ " 
AutoUnwrapSettings
§§# 5
(
§§5 6)
s_AutoUVSettingsInSelection
§§6 Q
[
§§Q R
$num
§§R S
]
§§S T
)
§§T U
;
§§U V
foreach
¶¶ 
(
¶¶  
AutoUnwrapSettings
¶¶ '
u
¶¶( )
in
¶¶* ,)
s_AutoUVSettingsInSelection
¶¶- H
)
¶¶H I
{
ßß 
if
™™ 
(
™™ 
u
™™ 
.
™™ 
useWorldSpace
™™ #
!=
™™$ &
s_AutoUVSettings
™™' 7
.
™™7 8
useWorldSpace
™™8 E
)
™™E F"
s_AutoUVSettingsDiff
´´ (
[
´´( )
$str
´´) 8
]
´´8 9
=
´´: ;
true
´´< @
;
´´@ A
if
¨¨ 
(
¨¨ 
u
¨¨ 
.
¨¨ 
flipU
¨¨ 
!=
¨¨ 
s_AutoUVSettings
¨¨ /
.
¨¨/ 0
flipU
¨¨0 5
)
¨¨5 6"
s_AutoUVSettingsDiff
≠≠ (
[
≠≠( )
$str
≠≠) 0
]
≠≠0 1
=
≠≠2 3
true
≠≠4 8
;
≠≠8 9
if
ÆÆ 
(
ÆÆ 
u
ÆÆ 
.
ÆÆ 
flipV
ÆÆ 
!=
ÆÆ 
s_AutoUVSettings
ÆÆ /
.
ÆÆ/ 0
flipV
ÆÆ0 5
)
ÆÆ5 6"
s_AutoUVSettingsDiff
ØØ (
[
ØØ( )
$str
ØØ) 0
]
ØØ0 1
=
ØØ2 3
true
ØØ4 8
;
ØØ8 9
if
∞∞ 
(
∞∞ 
u
∞∞ 
.
∞∞ 
swapUV
∞∞ 
!=
∞∞ 
s_AutoUVSettings
∞∞  0
.
∞∞0 1
swapUV
∞∞1 7
)
∞∞7 8"
s_AutoUVSettingsDiff
±± (
[
±±( )
$str
±±) 1
]
±±1 2
=
±±3 4
true
±±5 9
;
±±9 :
if
≤≤ 
(
≤≤ 
u
≤≤ 
.
≤≤ 
fill
≤≤ 
!=
≤≤ 
s_AutoUVSettings
≤≤ .
.
≤≤. /
fill
≤≤/ 3
)
≤≤3 4"
s_AutoUVSettingsDiff
≥≥ (
[
≥≥( )
$str
≥≥) /
]
≥≥/ 0
=
≥≥1 2
true
≥≥3 7
;
≥≥7 8
if
¥¥ 
(
¥¥ 
!
¥¥ 
Math
¥¥ 
.
¥¥ 
Approx
¥¥  
(
¥¥  !
u
¥¥! "
.
¥¥" #
scale
¥¥# (
.
¥¥( )
x
¥¥) *
,
¥¥* +
s_AutoUVSettings
¥¥, <
.
¥¥< =
scale
¥¥= B
.
¥¥B C
x
¥¥C D
)
¥¥D E
)
¥¥E F"
s_AutoUVSettingsDiff
µµ (
[
µµ( )
$str
µµ) 1
]
µµ1 2
=
µµ3 4
true
µµ5 9
;
µµ9 :
if
∂∂ 
(
∂∂ 
!
∂∂ 
Math
∂∂ 
.
∂∂ 
Approx
∂∂  
(
∂∂  !
u
∂∂! "
.
∂∂" #
scale
∂∂# (
.
∂∂( )
y
∂∂) *
,
∂∂* +
s_AutoUVSettings
∂∂, <
.
∂∂< =
scale
∂∂= B
.
∂∂B C
y
∂∂C D
)
∂∂D E
)
∂∂E F"
s_AutoUVSettingsDiff
∑∑ (
[
∑∑( )
$str
∑∑) 1
]
∑∑1 2
=
∑∑3 4
true
∑∑5 9
;
∑∑9 :
if
∏∏ 
(
∏∏ 
!
∏∏ 
Math
∏∏ 
.
∏∏ 
Approx
∏∏  
(
∏∏  !
u
∏∏! "
.
∏∏" #
offset
∏∏# )
.
∏∏) *
x
∏∏* +
,
∏∏+ ,
s_AutoUVSettings
∏∏- =
.
∏∏= >
offset
∏∏> D
.
∏∏D E
x
∏∏E F
)
∏∏F G
)
∏∏G H"
s_AutoUVSettingsDiff
ππ (
[
ππ( )
$str
ππ) 2
]
ππ2 3
=
ππ4 5
true
ππ6 :
;
ππ: ;
if
∫∫ 
(
∫∫ 
!
∫∫ 
Math
∫∫ 
.
∫∫ 
Approx
∫∫  
(
∫∫  !
u
∫∫! "
.
∫∫" #
offset
∫∫# )
.
∫∫) *
y
∫∫* +
,
∫∫+ ,
s_AutoUVSettings
∫∫- =
.
∫∫= >
offset
∫∫> D
.
∫∫D E
y
∫∫E F
)
∫∫F G
)
∫∫G H"
s_AutoUVSettingsDiff
ªª (
[
ªª( )
$str
ªª) 2
]
ªª2 3
=
ªª4 5
true
ªª6 :
;
ªª: ;
if
ºº 
(
ºº 
!
ºº 
Math
ºº 
.
ºº 
Approx
ºº  
(
ºº  !
u
ºº! "
.
ºº" #
rotation
ºº# +
,
ºº+ ,
s_AutoUVSettings
ºº- =
.
ºº= >
rotation
ºº> F
)
ººF G
)
ººG H"
s_AutoUVSettingsDiff
ΩΩ (
[
ΩΩ( )
$str
ΩΩ) 3
]
ΩΩ3 4
=
ΩΩ5 6
true
ΩΩ7 ;
;
ΩΩ; <
if
ææ 
(
ææ 
u
ææ 
.
ææ 
anchor
ææ 
!=
ææ 
s_AutoUVSettings
ææ  0
.
ææ0 1
anchor
ææ1 7
)
ææ7 8"
s_AutoUVSettingsDiff
øø (
[
øø( )
$str
øø) 1
]
øø1 2
=
øø3 4
true
øø5 9
;
øø9 :
}
¿¿ 
foreach
¬¬ 
(
¬¬ 
ProBuilderMesh
¬¬ #
pb
¬¬$ &
in
¬¬' )
	selection
¬¬* 3
)
¬¬3 4
{
√√ 
if
ƒƒ 
(
ƒƒ "
s_AutoUVSettingsDiff
ƒƒ (
[
ƒƒ( )
$str
ƒƒ) 3
]
ƒƒ3 4
&&
ƒƒ5 7"
s_AutoUVSettingsDiff
ƒƒ8 L
[
ƒƒL M
$str
ƒƒM [
]
ƒƒ[ \
)
ƒƒ\ ]
break
≈≈ 
;
≈≈ 
Face
«« 
[
«« 
]
«« 
selFaces
«« 
=
««  !
pb
««" $
.
««$ %
GetSelectedFaces
««% 5
(
««5 6
)
««6 7
;
««7 8
if
…… 
(
…… 
!
…… "
s_AutoUVSettingsDiff
…… )
[
……) *
$str
……* 4
]
……4 5
)
……5 6"
s_AutoUVSettingsDiff
   (
[
  ( )
$str
  ) 3
]
  3 4
=
  5 6
System
  7 =
.
  = >
Array
  > C
.
  C D
Exists
  D J
(
  J K
selFaces
  K S
,
  S T
x
  U V
=>
  W Y
x
  Z [
.
  [ \
manualUV
  \ d
)
  d e
;
  e f
List
ÃÃ 
<
ÃÃ 
int
ÃÃ 
>
ÃÃ 
	texGroups
ÃÃ #
=
ÃÃ$ %
selFaces
ÃÃ& .
.
ÃÃ. /
Select
ÃÃ/ 5
(
ÃÃ5 6
x
ÃÃ6 7
=>
ÃÃ8 :
x
ÃÃ; <
.
ÃÃ< =
textureGroup
ÃÃ= I
)
ÃÃI J
.
ÃÃJ K
Distinct
ÃÃK S
(
ÃÃS T
)
ÃÃT U
.
ÃÃU V
ToList
ÃÃV \
(
ÃÃ\ ]
)
ÃÃ] ^
;
ÃÃ^ _
textureGroup
ÕÕ 
=
ÕÕ 
	texGroups
ÕÕ (
.
ÕÕ( )
FirstOrDefault
ÕÕ) 7
(
ÕÕ7 8
x
ÕÕ8 9
=>
ÕÕ: <
x
ÕÕ= >
>
ÕÕ? @
-
ÕÕA B
$num
ÕÕB C
)
ÕÕC D
;
ÕÕD E
if
œœ 
(
œœ 
!
œœ "
s_AutoUVSettingsDiff
œœ )
[
œœ) *
$str
œœ* 8
]
œœ8 9
)
œœ9 :"
s_AutoUVSettingsDiff
–– (
[
––( )
$str
––) 7
]
––7 8
=
––9 :
	texGroups
––; D
.
––D E
Count
––E J
(
––J K
)
––K L
>
––M N
$num
––O P
;
––P Q
}
—— 
}
““ 	
private
ÿÿ 
static
ÿÿ 
void
ÿÿ 
SetFlipU
ÿÿ $
(
ÿÿ$ %
bool
ÿÿ% )
flipU
ÿÿ* /
,
ÿÿ/ 0
ProBuilderMesh
ÿÿ1 ?
[
ÿÿ? @
]
ÿÿ@ A
sel
ÿÿB E
)
ÿÿE F
{
ŸŸ 	
UndoUtility
⁄⁄ 
.
⁄⁄ 
RecordSelection
⁄⁄ '
(
⁄⁄' (
sel
⁄⁄( +
,
⁄⁄+ ,
$str
⁄⁄- 5
)
⁄⁄5 6
;
⁄⁄6 7
for
€€ 
(
€€ 
int
€€ 
i
€€ 
=
€€ 
$num
€€ 
;
€€ 
i
€€ 
<
€€ 
sel
€€  #
.
€€# $
Length
€€$ *
;
€€* +
i
€€, -
++
€€- /
)
€€/ 0
{
‹‹ 
foreach
›› 
(
›› 
Face
›› 
q
›› 
in
››  "
sel
››# &
[
››& '
i
››' (
]
››( )
.
››) *
GetSelectedFaces
››* :
(
››: ;
)
››; <
)
››< =
{
ﬁﬁ 
var
ﬂﬂ 
uv
ﬂﬂ 
=
ﬂﬂ 
q
ﬂﬂ 
.
ﬂﬂ 
uv
ﬂﬂ !
;
ﬂﬂ! "
uv
‡‡ 
.
‡‡ 
flipU
‡‡ 
=
‡‡ 
flipU
‡‡ $
;
‡‡$ %
q
·· 
.
·· 
uv
·· 
=
·· 
uv
·· 
;
·· 
sel
‚‚ 
[
‚‚ 
i
‚‚ 
]
‚‚ 
.
‚‚ 

SetGroupUV
‚‚ %
(
‚‚% &
q
‚‚& '
.
‚‚' (
uv
‚‚( *
,
‚‚* +
q
‚‚, -
.
‚‚- .
textureGroup
‚‚. :
)
‚‚: ;
;
‚‚; <
}
„„ 
}
‰‰ 
}
ÂÂ 	
private
ÁÁ 
static
ÁÁ 
void
ÁÁ 
SetFlipV
ÁÁ $
(
ÁÁ$ %
bool
ÁÁ% )
flipV
ÁÁ* /
,
ÁÁ/ 0
ProBuilderMesh
ÁÁ1 ?
[
ÁÁ? @
]
ÁÁ@ A
sel
ÁÁB E
)
ÁÁE F
{
ËË 	
UndoUtility
ÈÈ 
.
ÈÈ 
RecordSelection
ÈÈ '
(
ÈÈ' (
sel
ÈÈ( +
,
ÈÈ+ ,
$str
ÈÈ- 5
)
ÈÈ5 6
;
ÈÈ6 7
for
ÍÍ 
(
ÍÍ 
int
ÍÍ 
i
ÍÍ 
=
ÍÍ 
$num
ÍÍ 
;
ÍÍ 
i
ÍÍ 
<
ÍÍ 
sel
ÍÍ  #
.
ÍÍ# $
Length
ÍÍ$ *
;
ÍÍ* +
i
ÍÍ, -
++
ÍÍ- /
)
ÍÍ/ 0
{
ÎÎ 
foreach
ÏÏ 
(
ÏÏ 
Face
ÏÏ 
q
ÏÏ 
in
ÏÏ  "
sel
ÏÏ# &
[
ÏÏ& '
i
ÏÏ' (
]
ÏÏ( )
.
ÏÏ) *
GetSelectedFaces
ÏÏ* :
(
ÏÏ: ;
)
ÏÏ; <
)
ÏÏ< =
{
ÌÌ 
var
ÓÓ 
uv
ÓÓ 
=
ÓÓ 
q
ÓÓ 
.
ÓÓ 
uv
ÓÓ !
;
ÓÓ! "
uv
ÔÔ 
.
ÔÔ 
flipV
ÔÔ 
=
ÔÔ 
flipV
ÔÔ $
;
ÔÔ$ %
q
 
.
 
uv
 
=
 
uv
 
;
 
sel
ÒÒ 
[
ÒÒ 
i
ÒÒ 
]
ÒÒ 
.
ÒÒ 

SetGroupUV
ÒÒ %
(
ÒÒ% &
q
ÒÒ& '
.
ÒÒ' (
uv
ÒÒ( *
,
ÒÒ* +
q
ÒÒ, -
.
ÒÒ- .
textureGroup
ÒÒ. :
)
ÒÒ: ;
;
ÒÒ; <
}
ÚÚ 
}
ÛÛ 
}
ÙÙ 	
private
ˆˆ 
static
ˆˆ 
void
ˆˆ 
	SetSwapUV
ˆˆ %
(
ˆˆ% &
bool
ˆˆ& *
swapUV
ˆˆ+ 1
,
ˆˆ1 2
ProBuilderMesh
ˆˆ3 A
[
ˆˆA B
]
ˆˆB C
sel
ˆˆD G
)
ˆˆG H
{
˜˜ 	
UndoUtility
¯¯ 
.
¯¯ 
RecordSelection
¯¯ '
(
¯¯' (
sel
¯¯( +
,
¯¯+ ,
$str
¯¯- 8
)
¯¯8 9
;
¯¯9 :
for
˘˘ 
(
˘˘ 
int
˘˘ 
i
˘˘ 
=
˘˘ 
$num
˘˘ 
;
˘˘ 
i
˘˘ 
<
˘˘ 
sel
˘˘  #
.
˘˘# $
Length
˘˘$ *
;
˘˘* +
i
˘˘, -
++
˘˘- /
)
˘˘/ 0
{
˙˙ 
foreach
˚˚ 
(
˚˚ 
Face
˚˚ 
q
˚˚ 
in
˚˚  "
sel
˚˚# &
[
˚˚& '
i
˚˚' (
]
˚˚( )
.
˚˚) *
GetSelectedFaces
˚˚* :
(
˚˚: ;
)
˚˚; <
)
˚˚< =
{
¸¸ 
var
˝˝ 
uv
˝˝ 
=
˝˝ 
q
˝˝ 
.
˝˝ 
uv
˝˝ !
;
˝˝! "
uv
˛˛ 
.
˛˛ 
swapUV
˛˛ 
=
˛˛ 
swapUV
˛˛  &
;
˛˛& '
q
ˇˇ 
.
ˇˇ 
uv
ˇˇ 
=
ˇˇ 
uv
ˇˇ 
;
ˇˇ 
sel
ÄÄ 
[
ÄÄ 
i
ÄÄ 
]
ÄÄ 
.
ÄÄ 

SetGroupUV
ÄÄ %
(
ÄÄ% &
q
ÄÄ& '
.
ÄÄ' (
uv
ÄÄ( *
,
ÄÄ* +
q
ÄÄ, -
.
ÄÄ- .
textureGroup
ÄÄ. :
)
ÄÄ: ;
;
ÄÄ; <
}
ÅÅ 
}
ÇÇ 
}
ÉÉ 	
private
ÖÖ 
static
ÖÖ 
void
ÖÖ 
SetUseWorldSpace
ÖÖ ,
(
ÖÖ, -
bool
ÖÖ- 1
useWorldSpace
ÖÖ2 ?
,
ÖÖ? @
ProBuilderMesh
ÖÖA O
[
ÖÖO P
]
ÖÖP Q
sel
ÖÖR U
)
ÖÖU V
{
ÜÜ 	
UndoUtility
áá 
.
áá 
RecordSelection
áá '
(
áá' (
sel
áá( +
,
áá+ ,
$str
áá- B
)
ááB C
;
ááC D
for
àà 
(
àà 
int
àà 
i
àà 
=
àà 
$num
àà 
;
àà 
i
àà 
<
àà 
sel
àà  #
.
àà# $
Length
àà$ *
;
àà* +
i
àà, -
++
àà- /
)
àà/ 0
{
ââ 
foreach
ää 
(
ää 
Face
ää 
q
ää 
in
ää  "
sel
ää# &
[
ää& '
i
ää' (
]
ää( )
.
ää) *
GetSelectedFaces
ää* :
(
ää: ;
)
ää; <
)
ää< =
{
ãã 
var
åå 
uv
åå 
=
åå 
q
åå 
.
åå 
uv
åå !
;
åå! "
uv
çç 
.
çç 
useWorldSpace
çç $
=
çç% &
useWorldSpace
çç' 4
;
çç4 5
q
éé 
.
éé 
uv
éé 
=
éé 
uv
éé 
;
éé 
sel
èè 
[
èè 
i
èè 
]
èè 
.
èè 

SetGroupUV
èè %
(
èè% &
q
èè& '
.
èè' (
uv
èè( *
,
èè* +
q
èè, -
.
èè- .
textureGroup
èè. :
)
èè: ;
;
èè; <
}
êê 
}
ëë 
}
íí 	
private
îî 
static
îî 
void
îî 
SetFill
îî #
(
îî# $ 
AutoUnwrapSettings
îî$ 6
.
îî6 7
Fill
îî7 ;
fill
îî< @
,
îî@ A
ProBuilderMesh
îîB P
[
îîP Q
]
îîQ R
sel
îîS V
)
îîV W
{
ïï 	
UndoUtility
ññ 
.
ññ 
RecordSelection
ññ '
(
ññ' (
sel
ññ( +
,
ññ+ ,
$str
ññ- 7
)
ññ7 8
;
ññ8 9
for
óó 
(
óó 
int
óó 
i
óó 
=
óó 
$num
óó 
;
óó 
i
óó 
<
óó 
sel
óó  #
.
óó# $
Length
óó$ *
;
óó* +
i
óó, -
++
óó- /
)
óó/ 0
{
òò 
foreach
ôô 
(
ôô 
Face
ôô 
q
ôô 
in
ôô  "
sel
ôô# &
[
ôô& '
i
ôô' (
]
ôô( )
.
ôô) *
GetSelectedFaces
ôô* :
(
ôô: ;
)
ôô; <
)
ôô< =
{
öö 
var
õõ 
uv
õõ 
=
õõ 
q
õõ 
.
õõ 
uv
õõ !
;
õõ! "
uv
úú 
.
úú 
fill
úú 
=
úú 
fill
úú "
;
úú" #
q
ùù 
.
ùù 
uv
ùù 
=
ùù 
uv
ùù 
;
ùù 
sel
ûû 
[
ûû 
i
ûû 
]
ûû 
.
ûû 

SetGroupUV
ûû %
(
ûû% &
q
ûû& '
.
ûû' (
uv
ûû( *
,
ûû* +
q
ûû, -
.
ûû- .
textureGroup
ûû. :
)
ûû: ;
;
ûû; <
}
üü 
}
†† 
}
°° 	
private
££ 
static
££ 
void
££ 
	SetAnchor
££ %
(
££% & 
AutoUnwrapSettings
££& 8
.
££8 9
Anchor
££9 ?
anchor
££@ F
,
££F G
ProBuilderMesh
££H V
[
££V W
]
££W X
sel
££Y \
)
££\ ]
{
§§ 	
UndoUtility
•• 
.
•• 
RecordSelection
•• '
(
••' (
sel
••( +
,
••+ ,
$str
••- <
)
••< =
;
••= >
for
ßß 
(
ßß 
int
ßß 
i
ßß 
=
ßß 
$num
ßß 
;
ßß 
i
ßß 
<
ßß 
sel
ßß  #
.
ßß# $
Length
ßß$ *
;
ßß* +
i
ßß, -
++
ßß- /
)
ßß/ 0
{
®® 
foreach
©© 
(
©© 
Face
©© 
q
©© 
in
©©  "
sel
©©# &
[
©©& '
i
©©' (
]
©©( )
.
©©) *
GetSelectedFaces
©©* :
(
©©: ;
)
©©; <
)
©©< =
{
™™ 
var
´´ 
uv
´´ 
=
´´ 
q
´´ 
.
´´ 
uv
´´ !
;
´´! "
uv
¨¨ 
.
¨¨ 
anchor
¨¨ 
=
¨¨ 
anchor
¨¨  &
;
¨¨& '
q
≠≠ 
.
≠≠ 
uv
≠≠ 
=
≠≠ 
uv
≠≠ 
;
≠≠ 
sel
ÆÆ 
[
ÆÆ 
i
ÆÆ 
]
ÆÆ 
.
ÆÆ 

SetGroupUV
ÆÆ %
(
ÆÆ% &
q
ÆÆ& '
.
ÆÆ' (
uv
ÆÆ( *
,
ÆÆ* +
q
ÆÆ, -
.
ÆÆ- .
textureGroup
ÆÆ. :
)
ÆÆ: ;
;
ÆÆ; <
}
ØØ 
}
∞∞ 
}
±± 	
private
≥≥ 
static
≥≥ 
void
≥≥ 
	SetOffset
≥≥ %
(
≥≥% &
Vector2
≥≥& -
offset
≥≥. 4
,
≥≥4 5
Axis2D
≥≥6 <
axis
≥≥= A
,
≥≥A B
ProBuilderMesh
≥≥C Q
[
≥≥Q R
]
≥≥R S
sel
≥≥T W
)
≥≥W X
{
¥¥ 	
UndoUtility
µµ 
.
µµ 
RecordSelection
µµ '
(
µµ' (
sel
µµ( +
,
µµ+ ,
$str
µµ- 9
)
µµ9 :
;
µµ: ;
for
∑∑ 
(
∑∑ 
int
∑∑ 
i
∑∑ 
=
∑∑ 
$num
∑∑ 
;
∑∑ 
i
∑∑ 
<
∑∑ 
sel
∑∑  #
.
∑∑# $
Length
∑∑$ *
;
∑∑* +
i
∑∑, -
++
∑∑- /
)
∑∑/ 0
{
∏∏ 
foreach
ππ 
(
ππ 
Face
ππ 
q
ππ 
in
ππ  "
sel
ππ# &
[
ππ& '
i
ππ' (
]
ππ( )
.
ππ) *
GetSelectedFaces
ππ* :
(
ππ: ;
)
ππ; <
)
ππ< =
{
∫∫ 
switch
ªª 
(
ªª 
axis
ªª  
)
ªª  !
{
ºº 
case
ΩΩ 
Axis2D
ΩΩ #
.
ΩΩ# $
XY
ΩΩ$ &
:
ΩΩ& '
{
ææ 
var
øø 
uv
øø  "
=
øø# $
q
øø% &
.
øø& '
uv
øø' )
;
øø) *
uv
¿¿ 
.
¿¿ 
offset
¿¿ %
=
¿¿& '
offset
¿¿( .
;
¿¿. /
q
¡¡ 
.
¡¡ 
uv
¡¡  
=
¡¡! "
uv
¡¡# %
;
¡¡% &
break
¬¬ !
;
¬¬! "
}
√√ 
case
ƒƒ 
Axis2D
ƒƒ #
.
ƒƒ# $
X
ƒƒ$ %
:
ƒƒ% &
{
≈≈ 
var
∆∆ 
uv
∆∆  "
=
∆∆# $
q
∆∆% &
.
∆∆& '
uv
∆∆' )
;
∆∆) *
uv
«« 
.
«« 
offset
«« %
=
««& '
new
««( +
Vector2
««, 3
(
««3 4
offset
««4 :
.
««: ;
x
««; <
,
««< =
q
««> ?
.
««? @
uv
««@ B
.
««B C
offset
««C I
.
««I J
y
««J K
)
««K L
;
««L M
q
»» 
.
»» 
uv
»»  
=
»»! "
uv
»»# %
;
»»% &
break
…… !
;
……! "
}
   
case
ÀÀ 
Axis2D
ÀÀ #
.
ÀÀ# $
Y
ÀÀ$ %
:
ÀÀ% &
{
ÃÃ 
var
ÕÕ 
uv
ÕÕ  "
=
ÕÕ# $
q
ÕÕ% &
.
ÕÕ& '
uv
ÕÕ' )
;
ÕÕ) *
uv
ŒŒ 
.
ŒŒ 
offset
ŒŒ %
=
ŒŒ& '
new
ŒŒ( +
Vector2
ŒŒ, 3
(
ŒŒ3 4
q
ŒŒ4 5
.
ŒŒ5 6
uv
ŒŒ6 8
.
ŒŒ8 9
offset
ŒŒ9 ?
.
ŒŒ? @
x
ŒŒ@ A
,
ŒŒA B
offset
ŒŒC I
.
ŒŒI J
y
ŒŒJ K
)
ŒŒK L
;
ŒŒL M
q
œœ 
.
œœ 
uv
œœ  
=
œœ! "
uv
œœ# %
;
œœ% &
break
–– !
;
––! "
}
—— 
}
““ 
sel
‘‘ 
[
‘‘ 
i
‘‘ 
]
‘‘ 
.
‘‘ 

SetGroupUV
‘‘ %
(
‘‘% &
q
‘‘& '
.
‘‘' (
uv
‘‘( *
,
‘‘* +
q
‘‘, -
.
‘‘- .
textureGroup
‘‘. :
)
‘‘: ;
;
‘‘; <
}
’’ 
}
÷÷ 
}
◊◊ 	
private
ŸŸ 
static
ŸŸ 
void
ŸŸ 
SetRotation
ŸŸ '
(
ŸŸ' (
float
ŸŸ( -
rot
ŸŸ. 1
,
ŸŸ1 2
ProBuilderMesh
ŸŸ3 A
[
ŸŸA B
]
ŸŸB C
sel
ŸŸD G
)
ŸŸG H
{
⁄⁄ 	
UndoUtility
€€ 
.
€€ 
RecordSelection
€€ '
(
€€' (
sel
€€( +
,
€€+ ,
$str
€€- 9
)
€€9 :
;
€€: ;
for
›› 
(
›› 
int
›› 
i
›› 
=
›› 
$num
›› 
;
›› 
i
›› 
<
›› 
sel
››  #
.
››# $
Length
››$ *
;
››* +
i
››, -
++
››- /
)
››/ 0
{
ﬁﬁ 
foreach
ﬂﬂ 
(
ﬂﬂ 
Face
ﬂﬂ 
q
ﬂﬂ 
in
ﬂﬂ  "
sel
ﬂﬂ# &
[
ﬂﬂ& '
i
ﬂﬂ' (
]
ﬂﬂ( )
.
ﬂﬂ) *
GetSelectedFaces
ﬂﬂ* :
(
ﬂﬂ: ;
)
ﬂﬂ; <
)
ﬂﬂ< =
{
‡‡ 
var
·· 
uv
·· 
=
·· 
q
·· 
.
·· 
uv
·· !
;
··! "
uv
‚‚ 
.
‚‚ 
rotation
‚‚ 
=
‚‚  !
rot
‚‚" %
;
‚‚% &
if
„„ 
(
„„ 
uv
„„ 
.
„„ 
rotation
„„ #
>
„„$ %
$num
„„& *
)
„„* +
uv
‰‰ 
.
‰‰ 
rotation
‰‰ #
=
‰‰$ %
uv
‰‰& (
.
‰‰( )
rotation
‰‰) 1
%
‰‰2 3
$num
‰‰4 8
;
‰‰8 9
else
ÂÂ 
if
ÂÂ 
(
ÂÂ 
uv
ÂÂ 
.
ÂÂ  
rotation
ÂÂ  (
<
ÂÂ) *
$num
ÂÂ+ -
)
ÂÂ- .
uv
ÊÊ 
.
ÊÊ 
rotation
ÊÊ #
=
ÊÊ$ %
$num
ÊÊ& *
+
ÊÊ+ ,
(
ÊÊ- .
uv
ÊÊ. 0
.
ÊÊ0 1
rotation
ÊÊ1 9
%
ÊÊ: ;
$num
ÊÊ< @
)
ÊÊ@ A
;
ÊÊA B
q
ÁÁ 
.
ÁÁ 
uv
ÁÁ 
=
ÁÁ 
uv
ÁÁ 
;
ÁÁ 
sel
ËË 
[
ËË 
i
ËË 
]
ËË 
.
ËË 

SetGroupUV
ËË %
(
ËË% &
uv
ËË& (
,
ËË( )
q
ËË* +
.
ËË+ ,
textureGroup
ËË, 8
)
ËË8 9
;
ËË9 :
}
ÈÈ 
}
ÍÍ 
}
ÎÎ 	
private
ÌÌ 
static
ÌÌ 
void
ÌÌ 
SetScale
ÌÌ $
(
ÌÌ$ %
Vector2
ÌÌ% ,
scale
ÌÌ- 2
,
ÌÌ2 3
Axis2D
ÌÌ4 :
axis
ÌÌ; ?
,
ÌÌ? @
ProBuilderMesh
ÌÌA O
[
ÌÌO P
]
ÌÌP Q
sel
ÌÌR U
)
ÌÌU V
{
ÓÓ 	
UndoUtility
ÔÔ 
.
ÔÔ 
RecordSelection
ÔÔ '
(
ÔÔ' (
sel
ÔÔ( +
,
ÔÔ+ ,
$str
ÔÔ- 8
)
ÔÔ8 9
;
ÔÔ9 :
for
ÒÒ 
(
ÒÒ 
int
ÒÒ 
i
ÒÒ 
=
ÒÒ 
$num
ÒÒ 
;
ÒÒ 
i
ÒÒ 
<
ÒÒ 
sel
ÒÒ  #
.
ÒÒ# $
Length
ÒÒ$ *
;
ÒÒ* +
i
ÒÒ, -
++
ÒÒ- /
)
ÒÒ/ 0
{
ÚÚ 
foreach
ÛÛ 
(
ÛÛ 
Face
ÛÛ 
q
ÛÛ 
in
ÛÛ  "
sel
ÛÛ# &
[
ÛÛ& '
i
ÛÛ' (
]
ÛÛ( )
.
ÛÛ) *
GetSelectedFaces
ÛÛ* :
(
ÛÛ: ;
)
ÛÛ; <
)
ÛÛ< =
{
ÙÙ 
switch
ıı 
(
ıı 
axis
ıı  
)
ıı  !
{
ˆˆ 
case
˜˜ 
Axis2D
˜˜ #
.
˜˜# $
XY
˜˜$ &
:
˜˜& '
{
¯¯ 
var
˘˘ 
uv
˘˘  "
=
˘˘# $
q
˘˘% &
.
˘˘& '
uv
˘˘' )
;
˘˘) *
uv
˙˙ 
.
˙˙ 
scale
˙˙ $
=
˙˙% &
scale
˙˙' ,
;
˙˙, -
q
˚˚ 
.
˚˚ 
uv
˚˚  
=
˚˚! "
uv
˚˚# %
;
˚˚% &
break
¸¸ !
;
¸¸! "
}
˝˝ 
case
˛˛ 
Axis2D
˛˛ #
.
˛˛# $
X
˛˛$ %
:
˛˛% &
{
ˇˇ 
var
ÄÄ 
uv
ÄÄ  "
=
ÄÄ# $
q
ÄÄ% &
.
ÄÄ& '
uv
ÄÄ' )
;
ÄÄ) *
uv
ÅÅ 
.
ÅÅ 
scale
ÅÅ $
=
ÅÅ% &
new
ÅÅ' *
Vector2
ÅÅ+ 2
(
ÅÅ2 3
scale
ÅÅ3 8
.
ÅÅ8 9
x
ÅÅ9 :
,
ÅÅ: ;
q
ÅÅ< =
.
ÅÅ= >
uv
ÅÅ> @
.
ÅÅ@ A
scale
ÅÅA F
.
ÅÅF G
y
ÅÅG H
)
ÅÅH I
;
ÅÅI J
q
ÇÇ 
.
ÇÇ 
uv
ÇÇ  
=
ÇÇ! "
uv
ÇÇ# %
;
ÇÇ% &
break
ÉÉ !
;
ÉÉ! "
}
ÑÑ 
case
ÖÖ 
Axis2D
ÖÖ #
.
ÖÖ# $
Y
ÖÖ$ %
:
ÖÖ% &
{
ÜÜ 
var
áá 
uv
áá  "
=
áá# $
q
áá% &
.
áá& '
uv
áá' )
;
áá) *
uv
àà 
.
àà 
scale
àà $
=
àà% &
new
àà' *
Vector2
àà+ 2
(
àà2 3
q
àà3 4
.
àà4 5
uv
àà5 7
.
àà7 8
scale
àà8 =
.
àà= >
x
àà> ?
,
àà? @
scale
ààA F
.
ààF G
y
ààG H
)
ààH I
;
ààI J
q
ââ 
.
ââ 
uv
ââ  
=
ââ! "
uv
ââ# %
;
ââ% &
break
ää !
;
ää! "
}
ãã 
}
åå 
sel
éé 
[
éé 
i
éé 
]
éé 
.
éé 

SetGroupUV
éé %
(
éé% &
q
éé& '
.
éé' (
uv
éé( *
,
éé* +
q
éé, -
.
éé- .
textureGroup
éé. :
)
éé: ;
;
éé; <
}
èè 
}
êê 
}
ëë 	
private
óó 
static
óó 
void
óó 
SetTextureGroup
óó +
(
óó+ ,
ProBuilderMesh
óó, :
[
óó: ;
]
óó; <
	selection
óó= F
,
óóF G
int
óóH K
tex
óóL O
)
óóO P
{
òò 	
UndoUtility
ôô 
.
ôô 
RecordSelection
ôô '
(
ôô' (
	selection
ôô( 1
,
ôô1 2
$str
ôô3 G
+
ôôH I
textureGroup
ôôJ V
)
ôôV W
;
ôôW X
foreach
õõ 
(
õõ 
ProBuilderMesh
õõ #
pb
õõ$ &
in
õõ' )
	selection
õõ* 3
)
õõ3 4
{
úú 
if
ùù 
(
ùù 
pb
ùù 
.
ùù 
selectedFaceCount
ùù (
<
ùù) *
$num
ùù+ ,
)
ùù, -
continue
ûû 
;
ûû 
Face
†† 
[
†† 
]
†† 
faces
†† 
=
†† 
pb
†† !
.
††! "
GetSelectedFaces
††" 2
(
††2 3
)
††3 4
;
††4 5 
AutoUnwrapSettings
°° "
cuv
°°# &
=
°°' (
faces
°°) .
[
°°. /
$num
°°/ 0
]
°°0 1
.
°°1 2
uv
°°2 4
;
°°4 5
foreach
££ 
(
££ 
Face
££ 
f
££ 
in
££  "
faces
££# (
)
££( )
{
§§ 
f
•• 
.
•• 
textureGroup
•• "
=
••# $
tex
••% (
;
••( )
f
¶¶ 
.
¶¶ 
uv
¶¶ 
=
¶¶ 
new
¶¶  
AutoUnwrapSettings
¶¶ 1
(
¶¶1 2
cuv
¶¶2 5
)
¶¶5 6
;
¶¶6 7
}
ßß 
}
®® 
}
©© 	
private
´´ 
static
´´ 
void
´´ '
TextureGroupSelectedFaces
´´ 5
(
´´5 6
ProBuilderMesh
´´6 D
pb
´´E G
)
´´G H
{
¨¨ 	
if
≠≠ 
(
≠≠ 
pb
≠≠ 
.
≠≠ 
selectedFaceCount
≠≠ $
<
≠≠% &
$num
≠≠' (
)
≠≠( )
return
≠≠* 0
;
≠≠0 1
Face
ØØ 
[
ØØ 
]
ØØ 
faces
ØØ 
=
ØØ 
pb
ØØ 
.
ØØ 
GetSelectedFaces
ØØ .
(
ØØ. /
)
ØØ/ 0
;
ØØ0 1 
AutoUnwrapSettings
±± 
cont_uv
±± &
=
±±' (
faces
±±) .
[
±±. /
$num
±±/ 0
]
±±0 1
.
±±1 2
uv
±±2 4
;
±±4 5
int
≥≥ 
texGroup
≥≥ 
=
≥≥ 
pb
≥≥ 
.
≥≥ #
GetUnusedTextureGroup
≥≥ 3
(
≥≥3 4
)
≥≥4 5
;
≥≥5 6
UndoUtility
µµ 
.
µµ 
RecordSelection
µµ '
(
µµ' (
pb
µµ( *
,
µµ* +
$str
µµ, B
+
µµC D
textureGroup
µµE Q
)
µµQ R
;
µµR S
foreach
∑∑ 
(
∑∑ 
Face
∑∑ 
f
∑∑ 
in
∑∑ 
faces
∑∑ $
)
∑∑$ %
{
∏∏ 
f
ππ 
.
ππ 
uv
ππ 
=
ππ 
new
ππ  
AutoUnwrapSettings
ππ -
(
ππ- .
cont_uv
ππ. 5
)
ππ5 6
;
ππ6 7
f
∫∫ 
.
∫∫ 
textureGroup
∫∫ 
=
∫∫  
texGroup
∫∫! )
;
∫∫) *
}
ªª 
}
ºº 	
}
øø 
}¿¿ ¯Q
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\StripProBuilderScripts.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
.		  !
Actions		! (
{

 
sealed 

class "
StripProBuilderScripts '
:( )
Editor* 0
{ 
[ 	
MenuItem	 
( 
$str 
+ 
PreferenceKeys +
.+ ,
pluginTitle, 7
+8 9
$str: j
)j k
]k l
public 
static 
void 
StripAllScenes )
() *
)* +
{ 	
if 
( 
! 
UnityEditor 
. 
EditorUtility *
.* +
DisplayDialog+ 8
(8 9
$str9 S
,S T
$str	U ê
,
ê ë
$str
í ò
,
ò ô
$str
ö ¢
)
¢ £
)
£ §
return 
; 
ProBuilderMesh 
[ 
] 
all  
=! "
(# $
ProBuilderMesh$ 2
[2 3
]3 4
)4 5
	Resources5 >
.> ? 
FindObjectsOfTypeAll? S
(S T
typeofT Z
(Z [
ProBuilderMesh[ i
)i j
)j k
;k l
Strip 
( 
all 
) 
; 
} 	
[ 	
MenuItem	 
( 
$str 
+ 
PreferenceKeys +
.+ ,
pluginTitle, 7
+8 9
$str: j
,j k
truel p
,p q
$numr s
)s t
]t u
public 
static 
bool  
VerifyStripSelection /
(/ 0
)0 1
{ 	
return 
InternalUtility "
." #
GetComponents# 0
<0 1
ProBuilderMesh1 ?
>? @
(@ A
	SelectionA J
.J K

transformsK U
)U V
.V W
LengthW ]
>^ _
$num` a
;a b
}   	
["" 	
MenuItem""	 
("" 
$str"" 
+"" 
PreferenceKeys"" +
.""+ ,
pluginTitle"", 7
+""8 9
$str"": j
)""j k
]""k l
public## 
static## 
void## 
StripAllSelected## +
(##+ ,
)##, -
{$$ 	
if%% 
(%% 
!%% 
UnityEditor%% 
.%% 
EditorUtility%% *
.%%* +
DisplayDialog%%+ 8
(%%8 9
$str%%9 S
,%%S T
$str	%%U õ
,
%%õ ú
$str
%%ù £
,
%%£ §
$str
%%• ≠
)
%%≠ Æ
)
%%Æ Ø
return&& 
;&& 
foreach(( 
((( 
	Transform(( 
t((  
in((! #
	Selection(($ -
.((- .

transforms((. 8
)((8 9
{)) 
foreach** 
(** 
ProBuilderMesh** '
pb**( *
in**+ -
t**. /
.**/ 0#
GetComponentsInChildren**0 G
<**G H
ProBuilderMesh**H V
>**V W
(**W X
true**X \
)**\ ]
)**] ^
DoStrip++ 
(++ 
pb++ 
)++ 
;++  
},, 
MeshSelection-- 
.-- $
OnObjectSelectionChanged-- 2
(--2 3
)--3 4
;--4 5
}.. 	
public00 
static00 
void00 
Strip00  
(00  !
ProBuilderMesh00! /
[00/ 0
]000 1
all002 5
)005 6
{11 	
for22 
(22 
int22 
i22 
=22 
$num22 
;22 
i22 
<22 
all22  #
.22# $
Length22$ *
;22* +
i22, -
++22- /
)22/ 0
{33 
if44 
(44 
UnityEditor44 
.44  
EditorUtility44  -
.44- .(
DisplayCancelableProgressBar44. J
(44J K
$str55 6
,556 7
$str66 '
+66( )
all66* -
[66- .
i66. /
]66/ 0
.660 1
id661 3
+664 5
$str666 9
,669 :
(77 
(77 
float77 
)77  
i77  !
/77" #
all77$ '
.77' (
Length77( .
)77. /
)77/ 0
)770 1
break88 
;88 
DoStrip:: 
(:: 
all:: 
[:: 
i:: 
]:: 
):: 
;::  
};; 
UnityEditor== 
.== 
EditorUtility== %
.==% &
ClearProgressBar==& 6
(==6 7
)==7 8
;==8 9
UnityEditor>> 
.>> 
EditorUtility>> %
.>>% &
DisplayDialog>>& 3
(>>3 4
$str>>4 N
,>>N O
$str	>>P Ü
,
>>Ü á
$str
>>à é
)
>>é è
;
>>è ê
ProBuilderEditor@@ 
.@@ 
Refresh@@ $
(@@$ %
)@@% &
;@@& '
MeshSelectionAA 
.AA $
OnObjectSelectionChangedAA 2
(AA2 3
)AA3 4
;AA4 5
}BB 	
publicDD 
staticDD 
voidDD 
DoStripDD "
(DD" #
ProBuilderMeshDD# 1
pbDD2 4
)DD4 5
{EE 	
tryFF 
{GG 

GameObjectHH 
goHH 
=HH 
pbHH  "
.HH" #

gameObjectHH# -
;HH- .
RendererJJ 
renJJ 
=JJ 
goJJ !
.JJ! "
GetComponentJJ" .
<JJ. /
RendererJJ/ 7
>JJ7 8
(JJ8 9
)JJ9 :
;JJ: ;
ifLL 
(LL 
renLL 
!=LL 
nullLL 
)LL  
EditorUtilityMM !
.MM! "#
SetSelectionRenderStateMM" 9
(MM9 :
renMM: =
,MM= >%
EditorSelectedRenderStateMM? X
.MMX Y
	HighlightMMY b
|MMc d%
EditorSelectedRenderStateMMe ~
.MM~ 
	Wireframe	MM à
)
MMà â
;
MMâ ä
ifOO 
(OO 
EditorUtilityOO !
.OO! "
IsPrefabAssetOO" /
(OO/ 0
goOO0 2
)OO2 3
)OO3 4
returnPP 
;PP 
EditorUtilityRR 
.RR %
SynchronizeWithMeshFilterRR 7
(RR7 8
pbRR8 :
)RR: ;
;RR; <
ifUU 
(UU 
goUU 
.UU 
TryGetComponentUU &
(UU& '
outUU' *
	PolyShapeUU+ 4
	polyShapeUU5 >
)UU> ?
)UU? @
DestroyImmediateVV $
(VV$ %
	polyShapeVV% .
)VV. /
;VV/ 0
ifXX 
(XX 
goXX 
.XX 
TryGetComponentXX &
(XX& '
outXX' *
BezierShapeXX+ 6
bezierShapeXX7 B
)XXB C
)XXC D
DestroyImmediateYY $
(YY$ %
bezierShapeYY% 0
)YY0 1
;YY1 2
if[[ 
([[ 
pb[[ 
.[[ 
mesh[[ 
==[[ 
null[[ #
)[[# $
{\\ 
DestroyImmediate]] $
(]]$ %
pb]]% '
)]]' (
;]]( )
if__ 
(__ 
go__ 
.__ 
TryGetComponent__ *
(__* +
out__+ .
Entity__/ 5
entity__6 <
)__< =
)__= >
DestroyImmediate`` (
(``( )
entity``) /
)``/ 0
;``0 1
returnbb 
;bb 
}cc 
stringee 
cachedMeshPathee %
;ee% &
Meshff 

cachedMeshff 
;ff  
ifii 
(ii 
Experimentalii  
.ii  !
meshesAreAssetsii! 0
&&ii1 3
EditorMeshUtilityii4 E
.iiE F
GetCachedMeshiiF S
(iiS T
pbiiT V
,iiV W
outiiX [
cachedMeshPathii\ j
,iij k
outiil o

cachedMeshiip z
)iiz {
)ii{ |
{jj 
pbkk 
.kk &
preserveMeshAssetOnDestroykk 1
=kk2 3
truekk4 8
;kk8 9
DestroyImmediatell $
(ll$ %
pbll% '
)ll' (
;ll( )
ifmm 
(mm 
gomm 
.mm 
TryGetComponentmm *
(mm* +
outmm+ .
Entitymm/ 5
entitymm6 <
)mm< =
)mm= >
DestroyImmediatenn (
(nn( )
entitynn) /
)nn/ 0
;nn0 1
}oo 
elsepp 
{qq 
Meshrr 
mrr 
=rr 
UnityEnginerr (
.rr( )

ProBuilderrr) 3
.rr3 4
MeshUtilityrr4 ?
.rr? @
DeepCopyrr@ H
(rrH I
pbrrI K
.rrK L
meshrrL P
)rrP Q
;rrQ R
DestroyImmediatett $
(tt$ %
pbtt% '
)tt' (
;tt( )
ifvv 
(vv 
govv 
.vv 
TryGetComponentvv *
(vv* +
outvv+ .
Entityvv/ 5
entityvv6 <
)vv< =
)vv= >
DestroyImmediateww (
(ww( )
entityww) /
)ww/ 0
;ww0 1
goyy 
.yy 
GetComponentyy #
<yy# $

MeshFilteryy$ .
>yy. /
(yy/ 0
)yy0 1
.yy1 2

sharedMeshyy2 <
=yy= >
myy? @
;yy@ A
ifzz 
(zz 
gozz 
.zz 
TryGetComponentzz *
(zz* +
outzz+ .
MeshColliderzz/ ;
meshColliderzz< H
)zzH I
)zzI J
meshCollider{{ $
.{{$ %

sharedMesh{{% /
={{0 1
m{{2 3
;{{3 4
}|| 
}}} 
catch~~ 
{~~ 
}~~ 
} 	
}
ÄÄ 
}ÅÅ ò 
üD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Object\TriangulateObject.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
TriangulateObject "
:# $

MenuAction% /
{ 
public		 
override		 
ToolbarGroup		 $
group		% *
{		+ ,
get		- 0
{		1 2
return		3 9
ToolbarGroup		: F
.		F G
Object		G M
;		M N
}		O P
}		Q R
public

 
override

 
	Texture2D

 !
icon

" &
{

' (
get

) ,
{

- .
return

/ 5
IconUtility

6 A
.

A B
GetIcon

B I
(

I J
$str

J f
,

f g
IconSkin

h p
.

p q
Pro

q t
)

t u
;

u v
}

w x
}

y z
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
	s_Tooltip> G
;G H
}I J
}K L
public 
override 
string 
	menuTitle (
{) *
get+ .
{/ 0
return1 7
$str8 E
;E F
}G H
}I J
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str %
,% &
$str	 •
) 
; 
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
base 
. 
enabled %
&&& (
MeshSelection) 6
.6 7
selectedObjectCount7 J
>K L
$numM N
;N O
}P Q
} 	
public 
override 
ActionResult $
DoAction% -
(- .
). /
{ 	
if 
( 
MeshSelection 
. 
selectedObjectCount 1
<2 3
$num4 5
)5 6
return 
ActionResult #
.# $
NoSelection$ /
;/ 0
UndoUtility 
. 
RecordSelection '
(' (
$str( =
)= >
;> ?
foreach   
(   
var   
mesh   
in    
MeshSelection  ! .
.  . /
topInternal  / :
)  : ;
{!! 
mesh"" 
."" 
ToMesh"" 
("" 
)"" 
;"" 
mesh## 
.## 
ToTriangles##  
(##  !
mesh##! %
.##% &
facesInternal##& 3
)##3 4
;##4 5
mesh$$ 
.$$ 
Refresh$$ 
($$ 
)$$ 
;$$ 
mesh%% 
.%% 
Optimize%% 
(%% 
)%% 
;%%  
mesh&& 
.&& 
ClearSelection&& #
(&&# $
)&&$ %
;&&% &
}'' 
ProBuilderEditor)) 
.)) 
Refresh)) $
())$ %
)))% &
;))& '
var++ 
c++ 
=++ 
MeshSelection++ !
.++! "
selectedObjectCount++" 5
;++5 6
return,, 
new,, 
ActionResult,, #
(,,# $
ActionResult,,$ 0
.,,0 1
Status,,1 7
.,,7 8
Success,,8 ?
,,,? @
$str,,A O
+,,P Q
c,,R S
+,,T U
(,,V W
c,,W X
>,,Y Z
$num,,[ \
?,,] ^
$str,,_ i
:,,j k
$str,,l u
),,u v
),,v w
;,,w x
}-- 	
}.. 
}// « 
ôD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Object\GenerateUV2.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
GenerateUV2 
: 

MenuAction )
{ 
public 
override 
ToolbarGroup $
group% *
{		 	
get

 
{

 
return

 
ToolbarGroup

 %
.

% &
Object

& ,
;

, -
}

. /
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- I
,I J
IconSkinK S
.S T
ProT W
)W X
;X Y
}Z [
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
	protected 
override 
bool 
hasFileMenuEntry  0
{ 	
get 
{ 
return 
false 
; 
}  !
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str 
, 
$str a
)   
;   
public"" 
override"" 
bool"" 
enabled"" $
{## 	
get$$ 
{$$ 
return$$ 
true$$ 
;$$ 
}$$  
}%% 	
	protected'' 
override'' 
MenuActionState'' *
optionsMenuState''+ ;
{(( 	
get)) 
{)) 
return)) 
MenuActionState)) (
.))( )
VisibleAndEnabled))) :
;)): ;
}))< =
}** 	
public,, 
override,, 
ActionResult,, $
DoAction,,% -
(,,- .
),,. /
{-- 	
var.. 
res.. 
=.. 
Lightmapping.. "
..." #%
RebuildMissingLightmapUVs..# <
(..< =
Object..= C
...C D
FindObjectsOfType..D U
<..U V
ProBuilderMesh..V d
>..d e
(..e f
)..f g
,..g h
true..i m
)..m n
;..n o
if00 
(00 
res00 
<00 
$num00 
)00 
return11 
new11 
ActionResult11 '
(11' (
ActionResult11( 4
.114 5
Status115 ;
.11; <
Success11< C
,11C D
$str11E d
)11d e
;11e f
return33 
new33 
ActionResult33 #
(33# $
ActionResult33$ 0
.330 1
Status331 7
.337 8
Success338 ?
,33? @
$str33A Z
+33[ \
(44 
res44 
>44 
$num44 
?44 
string44 !
.44! "
Format44" (
(44( )
$str44) :
,44: ;
res44< ?
)44? @
:44A B
$str44C Q
)44Q R
)44R S
;44S T
}55 	
	protected77 
override77 
void77 
DoAlternateAction77  1
(771 2
)772 3
{88 	
EditorWindow99 
.99 
	GetWindow99 "
<99" #
LightmapUVEditor99# 3
>993 4
(994 5
true995 9
,999 :
$str99; O
,99O P
true99Q U
)99U V
.99V W
position99W _
=99` a
LightmapUVEditor99b r
.99r s
desiredPosition	99s Ç
;
99Ç É
}:: 	
};; 
}<< ô
°D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\MenuActionShortcutAttribute.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
[		 
AttributeUsage		 
(		 
AttributeTargets		 !
.		! "
Class		" '
,		' (
AllowMultiple		) 6
=		7 8
false		9 >
,		> ?
	Inherited		@ I
=		J K
false		L Q
)		Q R
]		R S
class

 '
MenuActionShortcutAttribute

 "
:

# $
	Attribute

% .
{ 
internal 

Type 
context 
{ 
get 
; 
private &
set' *
;* +
}, -
internal 

KeyCode 
key 
; 
internal 

EventModifiers 
	modifiers #
;# $
public '
MenuActionShortcutAttribute	 $
($ %
KeyCode% ,
defaultKeyCode- ;
,; <
EventModifiers= K#
defaultShorcutModifiersL c
=d e
EventModifiersf t
.t u
Noneu y
)y z
: 
this 	
(	 

null
 
, 
defaultKeyCode 
, #
defaultShorcutModifiers  7
)7 8
{ 
} 
public '
MenuActionShortcutAttribute	 $
($ %
Type% )
defaultContext* 8
)8 9
: 
this 	
(	 

defaultContext
 
, 
KeyCode !
.! "
None" &
,& '
EventModifiers( 6
.6 7
None7 ;
); <
{ 
} 
public '
MenuActionShortcutAttribute	 $
($ %
Type% )
defaultContext* 8
,8 9
KeyCode: A
defaultKeyCodeB P
,P Q
EventModifiersR `#
defaultShorcutModifiersa x
=y z
EventModifiers	{ â
.
â ä
None
ä é
)
é è
{ 
context 

= 
defaultContext 
; 
key 
= 
defaultKeyCode	 
; 
	modifiers   
=   #
defaultShorcutModifiers   &
;  & '
}!! 
}"" 
}## ã,
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\TextureRotateTool.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
class 	
TextureRotateTool
 
: 
TextureTool )
{ 
float 

m_Rotation 
; 
Vector3		 
m_Euler		 
;		 

Quaternion

 
m_Quaternion

 
;

  
	protected 
override 
void 
DoTool  &
(& '
Vector3' .
handlePosition/ =
,= >

Quaternion? I
handleRotationJ X
)X Y
{ 	
if 
( 
! 
	isEditing 
) 

m_Rotation 
= 
$num 
;  
	EditorGUI 
. 
BeginChangeCheck &
(& '
)' (
;( )
var 
size 
= 
HandleUtility $
.$ %
GetHandleSize% 2
(2 3
handlePosition3 A
)A B
;B C
EditorHandleUtility 
.  

PushMatrix  *
(* +
)+ ,
;, -
Handles 
. 
matrix 
= 
	Matrix4x4 &
.& '
TRS' *
(* +
handlePosition+ 9
,9 :
handleRotation; I
,I J
Vector3K R
.R S
oneS V
)V W
;W X
Handles 
. 
color 
= 
Color !
.! "
blue" &
;& '
m_Euler 
. 
z 
= 

m_Rotation "
;" #
m_Quaternion 
= 

Quaternion %
.% &
Euler& +
(+ ,
m_Euler, 3
)3 4
;4 5
m_Quaternion 
= 
Handles "
." #
Disc# '
(' (
m_Quaternion( 4
,4 5
Vector36 =
.= >
zero> B
,B C
Vector3D K
.K L
forwardL S
,S T
sizeU Y
,Y Z
relativeSnapEnabled[ n
,n o#
ProBuilderSnapSettings	p Ü
.
Ü á(
incrementalSnapRotateValue
á °
)
° ¢
;
¢ £
m_Euler 
= 
m_Quaternion "
." #
eulerAngles# .
;. /

m_Rotation 
= 
m_Euler  
.  !
z! "
;" #
EditorHandleUtility   
.    
	PopMatrix    )
(  ) *
)  * +
;  + ,
if"" 
("" 
	EditorGUI"" 
."" 
EndChangeCheck"" (
(""( )
)"") *
)""* +
{## 
if$$ 
($$ 
!$$ 
	isEditing$$ 
)$$ 
	BeginEdit%% 
(%% 
$str%% /
)%%/ 0
;%%0 1
if'' 
('' 
relativeSnapEnabled'' '
)''' (

m_Rotation(( 
=((  
ProBuilderSnapping((! 3
.((3 4
	SnapValue((4 =
(((= >

m_Rotation((> H
,((H I"
ProBuilderSnapSettings((J `
.((` a&
incrementalSnapRotateValue((a {
)(({ |
;((| }
foreach** 
(** 
var** 
mesh** !
in**" $
elementSelection**% 5
)**5 6
{++ 
if,, 
(,, 
!,, 
(,, 
mesh,, 
is,, !
MeshAndTextures,," 1
),,1 2
),,2 3
continue--  
;--  !
var.. 
mat.. 
=.. 
(.. 
MeshAndTextures.. .
)... /
mesh..0 4
;..4 5
var00 
origins00 
=00  !
mat00" %
.00% &
origins00& -
;00- .
var11 
	positions11 !
=11" #
mat11$ '
.11' (
textures11( 0
;110 1
foreach33 
(33 
var33  
group33! &
in33' )
mat33* -
.33- .
elementGroups33. ;
)33; <
{44 
foreach55 
(55  !
var55! $
index55% *
in55+ -
group55. 3
.553 4
indices554 ;
)55; <
	positions66 %
[66% &
index66& +
]66+ ,
=66- .
mat66/ 2
.662 3
postApplyMatrix663 B
.66B C
MultiplyPoint66C P
(66P Q
Math77$ (
.77( )
RotateAroundPoint77) :
(77: ;
mat88( +
.88+ ,
preApplyMatrix88, :
.88: ;
MultiplyPoint3x488; K
(88K L
origins88L S
[88S T
index88T Y
]88Y Z
)88Z [
,88[ \
Vector288] d
.88d e
zero88e i
,88i j
-88k l

m_Rotation88l v
)88v w
)88w x
;88x y
}99 
mesh;; 
.;; 
mesh;; 
.;; 
mesh;; "
.;;" #
SetUVs;;# )
(;;) *
k_TextureChannel;;* :
,;;: ;
	positions;;< E
);;E F
;;;F G
}<< 
}== 
}>> 	
}?? 
}@@ —%
öD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\MergeFaces.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 

MergeFaces 
: 

MenuAction (
{		 
public

 
override

 
ToolbarGroup

 $
group

% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Geometry& .
;. /
}0 1
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- A
,A B
IconSkinC K
.K L
ProL O
)O P
;P Q
}R S
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str 
, 
$str	 í
) 
; 
public 
override 

SelectMode "
validSelectModes# 3
{   	
get!! 
{!! 
return!! 

SelectMode!! #
.!!# $
Face!!$ (
;!!( )
}!!* +
}"" 	
public$$ 
override$$ 
bool$$ 
enabled$$ $
{%% 	
get&& 
{&& 
return&& 
base&& 
.&& 
enabled&& %
&&&&& (
MeshSelection&&) 6
.&&6 7
selectedFaceCount&&7 H
>&&I J
$num&&K L
;&&L M
}&&N O
}'' 	
public)) 
override)) 
ActionResult)) $
DoAction))% -
())- .
))). /
{** 	
if++ 
(++ 
MeshSelection++ 
.++ 
selectedObjectCount++ 1
<++2 3
$num++4 5
)++5 6
return,, 
ActionResult,, #
.,,# $
NoSelection,,$ /
;,,/ 0
UndoUtility.. 
... 
RecordSelection.. '
(..' (
$str..( 5
)..5 6
;..6 7
int00 
success00 
=00 
$num00 
;00 
foreach22 
(22 
ProBuilderMesh22 #
pb22$ &
in22' )
MeshSelection22* 7
.227 8
topInternal228 C
)22C D
{33 
if44 
(44 
pb44 
.44 
selectedFaceCount44 (
>44) *
$num44+ ,
)44, -
{55 
success66 
+=66 
pb66 !
.66! "
selectedFaceCount66" 3
;663 4
Face88 
face88 
=88 
MergeElements88  -
.88- .
Merge88. 3
(883 4
pb884 6
,886 7
pb888 :
.88: ;!
selectedFacesInternal88; P
)88P Q
;88Q R
pb:: 
.:: 
ToMesh:: 
(:: 
):: 
;::  
pb;; 
.;; 
Refresh;; 
(;; 
);;  
;;;  !
pb<< 
.<< 
Optimize<< 
(<<  
)<<  !
;<<! "
pb>> 
.>> 
SetSelectedFaces>> '
(>>' (
new>>( +
Face>>, 0
[>>0 1
]>>1 2
{>>3 4
face>>5 9
}>>: ;
)>>; <
;>>< =
}?? 
}@@ 
ProBuilderEditorBB 
.BB 
RefreshBB $
(BB$ %
)BB% &
;BB& '
ifDD 
(DD 
successDD 
>DD 
$numDD 
)DD 
returnEE 
newEE 
ActionResultEE '
(EE' (
ActionResultEE( 4
.EE4 5
StatusEE5 ;
.EE; <
SuccessEE< C
,EEC D
$strEEE N
+EEO P
successEEQ X
+EEY Z
$strEE[ c
)EEc d
;EEd e
returnGG 
newGG 
ActionResultGG #
(GG# $
ActionResultGG$ 0
.GG0 1
StatusGG1 7
.GG7 8
FailureGG8 ?
,GG? @
$strGGA a
)GGa b
;GGb c
}HH 	
}II 
}JJ ë[
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\ExtrudeFaces.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
ExtrudeFaces 
: 

MenuAction  *
{		 
Pref

 
<

 
float

 
>

 
m_ExtrudeDistance

 %
=

& '
new

( +
Pref

, 0
<

0 1
float

1 6
>

6 7
(

7 8
$str

8 O
,

O P
$num

Q T
)

T U
;

U V
ExtrudeMethod 
extrudeMethod #
{ 	
get 
{ 
return "
VertexManipulationTool /
./ 0
s_ExtrudeMethod0 ?
;? @
}A B
set 
{ "
VertexManipulationTool (
.( )
s_ExtrudeMethod) 8
.8 9
value9 >
=? @
valueA F
;F G
}H I
} 	
static 
string  
GetExtrudeIconString *
(* +
ExtrudeMethod+ 8
m9 :
): ;
{ 	
return 
m 
== 
ExtrudeMethod %
.% &
VertexNormal& 2
?3 4
$str5 X
: 
m 
== 
ExtrudeMethod $
.$ %

FaceNormal% /
?0 1
$str2 S
: 
$str 2
;2 3
} 	
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Geometry& .
;. /
}0 1
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get   
{   
return   
IconUtility   $
.  $ %
GetIcon  % ,
(  , - 
GetExtrudeIconString  - A
(  A B
extrudeMethod  B O
)  O P
,  P Q
IconSkin  R Z
.  Z [
Pro  [ ^
)  ^ _
;  _ `
}  a b
}!! 	
	protected## 
override## 
	Texture2D## $
disabledIcon##% 1
{$$ 	
get%% 
{%% 
return%% 
IconUtility%% $
.%%$ %
GetIcon%%% ,
(%%, -
string%%- 3
.%%3 4
Format%%4 :
(%%: ;
$str%%; I
,%%I J 
GetExtrudeIconString%%K _
(%%_ `
extrudeMethod%%` m
)%%m n
)%%n o
,%%o p
IconSkin%%q y
.%%y z
Pro%%z }
)%%} ~
;%%~ 
}
%%Ä Å
}&& 	
public(( 
override(( 
TooltipContent(( &
tooltip((' .
{)) 	
get** 
{** 
return** 
	s_Tooltip** "
;**" #
}**$ %
}++ 	
	protected-- 
override-- 
bool-- 
hasFileMenuEntry--  0
{.. 	
get// 
{// 
return// 
false// 
;// 
}//  !
}00 	
	Texture2D22 
[22 
]22 
m_Icons22 
=22 
null22 "
;22" #
static44 
readonly44 
TooltipContent44 &
	s_Tooltip44' 0
=441 2
new443 6
TooltipContent447 E
(55 
$str66 
,66  
$str	77 ã
,
77ã å
keyCommandSuper88 
,88  
$char88! $
)99 
;99 
public;; 
ExtrudeFaces;; 
(;; 
);; 
{<< 	
m_Icons== 
=== 
new== 
	Texture2D== #
[==# $
$num==$ %
]==% &
;==& '
m_Icons>> 
[>> 
(>> 
int>> 
)>> 
ExtrudeMethod>> &
.>>& '
IndividualFaces>>' 6
]>>6 7
=>>8 9
IconUtility>>: E
.>>E F
GetIcon>>F M
(>>M N
$str>>N n
,>>n o
IconSkin>>p x
.>>x y
Pro>>y |
)>>| }
;>>} ~
m_Icons?? 
[?? 
(?? 
int?? 
)?? 
ExtrudeMethod?? &
.??& '
VertexNormal??' 3
]??3 4
=??5 6
IconUtility??7 B
.??B C
GetIcon??C J
(??J K
$str??K n
,??n o
IconSkin??p x
.??x y
Pro??y |
)??| }
;??} ~
m_Icons@@ 
[@@ 
(@@ 
int@@ 
)@@ 
ExtrudeMethod@@ &
.@@& '

FaceNormal@@' 1
]@@1 2
=@@3 4
IconUtility@@5 @
.@@@ A
GetIcon@@A H
(@@H I
$str@@I j
,@@j k
IconSkin@@l t
.@@t u
Pro@@u x
)@@x y
;@@y z
}AA 	
publicCC 
overrideCC 

SelectModeCC "
validSelectModesCC# 3
{DD 	
getEE 
{EE 
returnEE 

SelectModeEE #
.EE# $
FaceEE$ (
;EE( )
}EE* +
}FF 	
publicHH 
overrideHH 
boolHH 
enabledHH $
{II 	
getJJ 
{JJ 
returnJJ 
baseJJ 
.JJ 
enabledJJ %
&&JJ& (
MeshSelectionJJ) 6
.JJ6 7
selectedFaceCountJJ7 H
>JJI J
$numJJK L
;JJL M
}JJN O
}KK 	
	protectedMM 
overrideMM 
MenuActionStateMM *
optionsMenuStateMM+ ;
{NN 	
getOO 
{OO 
returnOO 
MenuActionStateOO (
.OO( )
VisibleAndEnabledOO) :
;OO: ;
}OO< =
}PP 	
	protectedRR 
overrideRR 
voidRR 
OnSettingsGUIRR  -
(RR- .
)RR. /
{SS 	
	GUILayoutTT 
.TT 
LabelTT 
(TT 
$strTT .
,TT. /
EditorStylesTT0 <
.TT< =
	boldLabelTT= F
)TTF G
;TTG H
EditorGUILayoutVV 
.VV 
HelpBoxVV #
(VV# $
$str	VV$ Ù
,
VVÙ ı
MessageType
VVˆ Å
.
VVÅ Ç
Info
VVÇ Ü
)
VVÜ á
;
VVá à
	GUILayoutXX 
.XX 
BeginHorizontalXX %
(XX% &
)XX& '
;XX' (
	GUILayoutYY 
.YY 
FlexibleSpaceYY #
(YY# $
)YY$ %
;YY% &
	GUILayoutZZ 
.ZZ 
LabelZZ 
(ZZ 
m_IconsZZ #
[ZZ# $
(ZZ$ %
intZZ% (
)ZZ( )
extrudeMethodZZ) 6
]ZZ6 7
)ZZ7 8
;ZZ8 9
	GUILayout[[ 
.[[ 
FlexibleSpace[[ #
([[# $
)[[$ %
;[[% &
	GUILayout\\ 
.\\ 
EndHorizontal\\ #
(\\# $
)\\$ %
;\\% &
	EditorGUI^^ 
.^^ 
BeginChangeCheck^^ &
(^^& '
)^^' (
;^^( )
extrudeMethod`` 
=`` 
(`` 
ExtrudeMethod`` *
)``* +
EditorGUILayout``+ :
.``: ;
	EnumPopup``; D
(``D E
$str``E Q
,``Q R
extrudeMethod``S `
)``` a
;``a b
m_ExtrudeDistanceaa 
.aa 
valueaa #
=aa$ %
EditorGUILayoutaa& 5
.aa5 6

FloatFieldaa6 @
(aa@ A
$straaA K
,aaK L
m_ExtrudeDistanceaaM ^
)aa^ _
;aa_ `
ifcc 
(cc 
	EditorGUIcc 
.cc 
EndChangeCheckcc (
(cc( )
)cc) *
)cc* +
ProBuilderSettingsdd "
.dd" #
Savedd# '
(dd' (
)dd( )
;dd) *
	GUILayoutff 
.ff 
FlexibleSpaceff #
(ff# $
)ff$ %
;ff% &
ifhh 
(hh 
	GUILayouthh 
.hh 
Buttonhh  
(hh  !
$strhh! 0
)hh0 1
)hh1 2
DoActionii 
(ii 
)ii 
;ii 
}jj 	
publicll 
overridell 
ActionResultll $
DoActionll% -
(ll- .
)ll. /
{mm 	
ifnn 
(nn 
MeshSelectionnn 
.nn 
selectedObjectCountnn 1
<nn2 3
$numnn4 5
)nn5 6
returnoo 
ActionResultoo #
.oo# $
NoSelectionoo$ /
;oo/ 0
UndoUtilityqq 
.qq 
RecordSelectionqq '
(qq' (
$strqq( 1
)qq1 2
;qq2 3
intss 
extrudedFaceCountss !
=ss" #
$numss$ %
;ss% &
foreachuu 
(uu 
ProBuilderMeshuu #
meshuu$ (
inuu) +
MeshSelectionuu, 9
.uu9 :
topInternaluu: E
)uuE F
{vv 
meshww 
.ww 
ToMeshww 
(ww 
)ww 
;ww 
meshxx 
.xx 
Refreshxx 
(xx 
RefreshMaskxx (
.xx( )
Normalsxx) 0
)xx0 1
;xx1 2
ifzz 
(zz 
meshzz 
.zz 
selectedFaceCountzz *
<zz+ ,
$numzz- .
)zz. /
continue{{ 
;{{ 
extrudedFaceCount}} !
+=}}" $
mesh}}% )
.}}) *
selectedFaceCount}}* ;
;}}; <
var~~ 
selectedFaces~~ !
=~~" #
mesh~~$ (
.~~( )
GetSelectedFaces~~) 9
(~~9 :
)~~: ;
;~~; <
mesh
ÄÄ 
.
ÄÄ 
Extrude
ÄÄ 
(
ÄÄ 
selectedFaces
ÄÄ *
,
ÄÄ* +$
VertexManipulationTool
ÅÅ *
.
ÅÅ* +
s_ExtrudeMethod
ÅÅ+ :
,
ÅÅ: ;
m_ExtrudeDistance
ÇÇ %
)
ÇÇ% &
;
ÇÇ& '
mesh
ÑÑ 
.
ÑÑ 
SetSelectedFaces
ÑÑ %
(
ÑÑ% &
selectedFaces
ÑÑ& 3
)
ÑÑ3 4
;
ÑÑ4 5
mesh
ÜÜ 
.
ÜÜ 
Rebuild
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
mesh
áá 
.
áá 
Optimize
áá 
(
áá 
)
áá 
;
áá  
}
àà 
ProBuilderEditor
ää 
.
ää 
Refresh
ää $
(
ää$ %
)
ää% &
;
ää& '
if
åå 
(
åå 
extrudedFaceCount
åå !
>
åå" #
$num
åå$ %
)
åå% &
return
çç 
new
çç 
ActionResult
çç '
(
çç' (
ActionResult
çç( 4
.
çç4 5
Status
çç5 ;
.
çç; <
Success
çç< C
,
ççC D
$str
ççE N
)
ççN O
;
ççO P
return
èè 
new
èè 
ActionResult
èè #
(
èè# $
ActionResult
èè$ 0
.
èè0 1
Status
èè1 7
.
èè7 8
Canceled
èè8 @
,
èè@ A
$str
èèB \
)
èè\ ]
;
èè] ^
}
êê 	
}
ëë 
}íí Õ”
ìD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\EditorToolbar.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
{

 
[ 
System 
. 
Serializable 
] 
sealed 

class 
EditorToolbar 
:  
ScriptableObject! 1
{ 
EditorToolbar 
( 
) 
{ 
} 
Pref 
< 
Vector2 
> 
m_Scroll 
=  
new! $
Pref% )
<) *
Vector2* 1
>1 2
(2 3
$str3 J
,J K
Vector2L S
.S T
zeroT X
,X Y
SettingsScopeZ g
.g h
Userh l
)l m
;m n
public 
EditorWindow 
window "
;" #
bool 

isFloating 
{ 
get 
{ 
return  &
ProBuilderEditor' 7
.7 8
instance8 @
!=A C
nullD H
&&I K
ProBuilderEditorL \
.\ ]
instance] e
.e f
isFloatingWindowf v
;v w
}x y
}z {
internal 
bool 

isIconMode  
=! "
true# '
;' (
[ 	
UserSetting	 
( 
$str 
, 
$str  4
,4 5
$str6 j
)j k
]k l
internal 
static 
Pref 
< 
bool !
>! "
s_ShiftOnlyTooltips# 6
=7 8
new9 <
Pref= A
<A B
boolB F
>F G
(G H
$strH b
,b c
falsed i
,i j
SettingsScopek x
.x y
Usery }
)} ~
;~ 
SimpleTuple 
< 
string 
, 
double "
>" #
tooltipTimer$ 0
=1 2
new3 6
SimpleTuple7 B
<B C
stringC I
,I J
doubleK Q
>Q R
(R S
$strS U
,U V
$numW Z
)Z [
;[ \
string 
hoveringTooltipName "
=# $
$str% '
;' (
bool 
showTooltipTimer 
= 
false  %
;% &
float 
tooltipTimerRefresh !
=" #
$num$ &
;& '
	Texture2D!! 
scrollIconUp!!  
=!!! "
null!!# '
,!!' (
scrollIconDown"" "
=""# $
null""% )
,"") *
scrollIconRight## #
=##$ %
null##& *
,##* +
scrollIconLeft$$ "
=$$# $
null$$% )
;$$) *
[&& 	
SerializeField&&	 
]&& 
List&& 
<&& 

MenuAction&& (
>&&( )
	m_Actions&&* 3
;&&3 4
['' 	
SerializeField''	 
]'' 
int'' 
m_ActionsLength'' ,
=''- .
$num''/ 0
;''0 1
public)) 
void))  
InitWindowProperties)) (
())( )
EditorWindow))) 5
win))6 9
)))9 :
{** 	
win++ 
.++ 
wantsMouseMove++ 
=++  
true++! %
;++% &
win,, 
.,, $
autoRepaintOnSceneChange,, (
=,,) *
true,,+ /
;,,/ 0
this-- 
.-- 
window-- 
=-- 
win-- 
;-- 
}.. 	
void00 
OnEnable00 
(00 
)00 
{11 	
	m_Actions22 
=22 
EditorToolbarLoader22 +
.22+ ,

GetActions22, 6
(226 7
true227 ;
)22; <
;22< =
m_ActionsLength33 
=33 
	m_Actions33 '
.33' (
Count33( -
(33- .
)33. /
;33/ 0
ProBuilderEditor55 
.55 
selectionUpdated55 -
-=55. 0$
OnElementSelectionChange551 I
;55I J
ProBuilderEditor66 
.66 
selectionUpdated66 -
+=66. 0$
OnElementSelectionChange661 I
;66I J
EditorApplication88 
.88 
update88 $
-=88% '
Update88( .
;88. /
EditorApplication99 
.99 
update99 $
+=99% '
Update99( .
;99. /
tooltipTimer;; 
.;; 
item1;; 
=;;  
$str;;! #
;;;# $
tooltipTimer<< 
.<< 
item2<< 
=<<  
$num<<! $
;<<$ %
showTooltipTimer== 
=== 
false== $
;==$ %
scrollIconUp>> 
=>> 
IconUtility>> )
.>>) *
GetIcon>>* 1
(>>1 2
$str>>2 K
)>>K L
;>>L M
scrollIconDown?? 
=?? 
IconUtility?? )
.??) *
GetIcon??* 1
(??1 2
$str??2 M
)??M N
;??N O
scrollIconRight@@ 
=@@ 
IconUtility@@ )
.@@) *
GetIcon@@* 1
(@@1 2
$str@@2 N
)@@N O
;@@O P
scrollIconLeftAA 
=AA 
IconUtilityAA )
.AA) *
GetIconAA* 1
(AA1 2
$strAA2 M
)AAM N
;AAN O

isIconModeCC 
=CC 
ProBuilderEditorCC )
.CC) *
s_IsIconGuiCC* 5
;CC5 6
thisDD 
.DD 
windowDD 
=DD 
ProBuilderEditorDD *
.DD* +
instanceDD+ 3
;DD3 4 
CalculateMaxIconSizeEE  
(EE  !
)EE! "
;EE" #
}FF 	
voidHH 
	OnDisableHH 
(HH 
)HH 
{II 	
ProBuilderEditorMM 
.MM 
selectionUpdatedMM -
-=MM. 0$
OnElementSelectionChangeMM1 I
;MMI J
}NN 	
voidPP 
	OnDestroyPP 
(PP 
)PP 
{QQ 	
MenuActionStylesUU 
.UU 
ResetStylesUU (
(UU( )
)UU) *
;UU* +
}VV 	
voidXX $
OnElementSelectionChangeXX %
(XX% &
IEnumerableXX& 1
<XX1 2
ProBuilderMeshXX2 @
>XX@ A
	selectionXXB K
)XXK L
{YY 	
ifZZ 
(ZZ 
!ZZ 
windowZZ 
)ZZ 
DestroyImmediate[[  
([[  !
this[[! %
)[[% &
;[[& '
else\\ 
window]] 
.]] 
Repaint]] 
(]] 
)]]  
;]]  !
}^^ 	
void`` 
ShowTooltip`` 
(`` 
Rect`` 
rect`` "
,``" #
string``$ *
content``+ 2
,``2 3
Vector2``4 ;
scrollOffset``< H
)``H I
{aa 	
TooltipContentbb 
cbb 
=bb 
TooltipContentbb -
.bb- .
TempContentbb. 9
;bb9 :
ccc 
.cc 
summarycc 
=cc 
contentcc 
;cc  
ShowTooltipdd 
(dd 
rectdd 
,dd 
cdd 
,dd  
scrollOffsetdd! -
)dd- .
;dd. /
}ee 	
voidgg 
ShowTooltipgg 
(gg 
Rectgg 
rectgg "
,gg" #
TooltipContentgg$ 2
contentgg3 :
,gg: ;
Vector2gg< C
scrollOffsetggD P
)ggP Q
{hh 	
Rectii 

buttonRectii 
=ii 
newii !
Rectii" &
(ii& '
(jj 
windowjj 
.jj 
positionjj $
.jj$ %
xjj% &
+jj' (
rectjj) -
.jj- .
xjj. /
)jj/ 0
-jj1 2
scrollOffsetjj3 ?
.jj? @
xjj@ A
,jjA B
(kk 
windowkk 
.kk 
positionkk $
.kk$ %
ykk% &
+kk' (
rectkk) -
.kk- .
ykk. /
)kk/ 0
-kk1 2
scrollOffsetkk3 ?
.kk? @
ykk@ A
,kkA B
rectll 
.ll 
widthll 
,ll 
rectmm 
.mm 
heightmm 
)mm  
;mm  !
TooltipEditoroo 
.oo 
Showoo 
(oo 

buttonRectoo )
,oo) *
contentoo+ 2
)oo2 3
;oo3 4
}pp 	
voidrr 
Updaterr 
(rr 
)rr 
{ss 	
iftt 
(tt 
!tt 
windowtt 
)tt 
returnuu 
;uu 
ifww 
(ww 
!ww 
s_ShiftOnlyTooltipsww $
)ww$ %
{xx 
ifyy 
(yy 
!yy 
tooltipTimeryy !
.yy! "
item1yy" '
.yy' (
Equalsyy( .
(yy. /
hoveringTooltipNameyy/ B
)yyB C
)yyC D
{zz 
tooltipTimer{{  
.{{  !
item1{{! &
={{' (
hoveringTooltipName{{) <
;{{< =
tooltipTimer||  
.||  !
item2||! &
=||' (
EditorApplication||) :
.||: ;
timeSinceStartup||; K
;||K L
}}} 
if 
( 
! 
string 
. 
IsNullOrEmpty )
() *
tooltipTimer* 6
.6 7
item17 <
)< =
)= >
{
ÄÄ 
if
ÅÅ 
(
ÅÅ 
EditorApplication
ÅÅ )
.
ÅÅ) *
timeSinceStartup
ÅÅ* :
-
ÅÅ; <
tooltipTimer
ÅÅ= I
.
ÅÅI J
item2
ÅÅJ O
>
ÅÅP Q!
tooltipTimerRefresh
ÅÅR e
)
ÅÅe f
{
ÇÇ 
if
ÉÉ 
(
ÉÉ 
!
ÉÉ 
showTooltipTimer
ÉÉ -
)
ÉÉ- .
{
ÑÑ 
showTooltipTimer
ÖÖ ,
=
ÖÖ- .
true
ÖÖ/ 3
;
ÖÖ3 4
RepaintIfFocused
ÜÜ ,
(
ÜÜ, -
)
ÜÜ- .
;
ÜÜ. /
}
áá 
}
àà 
else
ââ 
{
ää 
showTooltipTimer
ãã (
=
ãã) *
false
ãã+ 0
;
ãã0 1
}
åå 
}
çç 
}
éé 
if
ëë 
(
ëë 
doAnimateScroll
ëë 
)
ëë  
{
íí 
double
ìì 
scrollTimer
ìì "
=
ìì# $
EditorApplication
ìì% 6
.
ìì6 7
timeSinceStartup
ìì7 G
-
ììH I
scrollStartTime
ììJ Y
;
ììY Z
m_Scroll
îî 
.
îî 
value
îî 
=
îî  
Vector2
îî! (
.
îî( )
Lerp
îî) -
(
îî- .
scrollOrigin
îî. :
,
îî: ;
scrollTarget
îî< H
,
îîH I
(
îîJ K
float
îîK P
)
îîP Q
scrollTimer
îîQ \
/
îî] ^
scrollTotalTime
îî_ n
)
îîn o
;
îîo p
if
ññ 
(
ññ 
scrollTimer
ññ 
>=
ññ  "
scrollTotalTime
ññ# 2
)
ññ2 3
doAnimateScroll
óó #
=
óó$ %
false
óó& +
;
óó+ ,
RepaintIfFocused
ôô  
(
ôô  !
)
ôô! "
;
ôô" #
}
öö 
}
õõ 	
void
ùù "
CalculateMaxIconSize
ùù !
(
ùù! "
)
ùù" #
{
ûû 	
if
üü 
(
üü 
!
üü 
window
üü 
)
üü 
return
üü 
;
üü   
m_IsHorizontalMenu
°° 
=
°°  
window
°°! '
.
°°' (
position
°°( 0
.
°°0 1
width
°°1 6
>
°°7 8
window
°°9 ?
.
°°? @
position
°°@ H
.
°°H I
height
°°I O
;
°°O P
Vector2
££ 
iconSize
££ 
=
££ 
	m_Actions
££ (
[
££( )
$num
££) *
]
££* +
.
££+ ,
GetSize
££, 3
(
££3 4 
m_IsHorizontalMenu
££4 F
)
££F G
;
££G H
m_ContentWidth
•• 
=
•• 
(
•• 
int
•• !
)
••! "
iconSize
••" *
.
••* +
x
••+ ,
+
••- .
$num
••/ 0
;
••0 1
m_ContentHeight
¶¶ 
=
¶¶ 
(
¶¶ 
int
¶¶ "
)
¶¶" #
iconSize
¶¶# +
.
¶¶+ ,
y
¶¶, -
+
¶¶. /
$num
¶¶0 1
;
¶¶1 2
if
©© 
(
©© 
!
©© 

isIconMode
©© 
)
©© 
{
™™ 
for
´´ 
(
´´ 
int
´´ 
i
´´ 
=
´´ 
$num
´´ 
;
´´ 
i
´´  !
<
´´" #
	m_Actions
´´$ -
.
´´- .
Count
´´. 3
;
´´3 4
i
´´5 6
++
´´6 8
)
´´8 9
{
¨¨ 
iconSize
≠≠ 
=
≠≠ 
	m_Actions
≠≠ (
[
≠≠( )
i
≠≠) *
]
≠≠* +
.
≠≠+ ,
GetSize
≠≠, 3
(
≠≠3 4 
m_IsHorizontalMenu
≠≠4 F
)
≠≠F G
;
≠≠G H
m_ContentWidth
ÆÆ "
=
ÆÆ# $
System
ÆÆ% +
.
ÆÆ+ ,
Math
ÆÆ, 0
.
ÆÆ0 1
Max
ÆÆ1 4
(
ÆÆ4 5
m_ContentWidth
ÆÆ5 C
,
ÆÆC D
(
ÆÆE F
int
ÆÆF I
)
ÆÆI J
iconSize
ÆÆJ R
.
ÆÆR S
x
ÆÆS T
)
ÆÆT U
;
ÆÆU V
m_ContentHeight
ØØ #
=
ØØ$ %
System
ØØ& ,
.
ØØ, -
Math
ØØ- 1
.
ØØ1 2
Max
ØØ2 5
(
ØØ5 6
m_ContentHeight
ØØ6 E
,
ØØE F
(
ØØG H
int
ØØH K
)
ØØK L
iconSize
ØØL T
.
ØØT U
y
ØØU V
)
ØØV W
;
ØØW X
}
∞∞ 
m_ContentWidth
≤≤ 
+=
≤≤ !
$num
≤≤" #
;
≤≤# $
m_ContentHeight
≥≥ 
+=
≥≥  "
$num
≥≥# $
;
≥≥$ %
}
¥¥ 
window
∂∂ 
.
∂∂ 
minSize
∂∂ 
=
∂∂ 
new
∂∂  
Vector2
∂∂! (
(
∂∂( )
m_ContentWidth
∂∂) 7
+
∂∂8 9
$num
∂∂: ;
,
∂∂; <
m_ContentHeight
∂∂= L
+
∂∂M N
$num
∂∂O P
)
∂∂P Q
;
∂∂Q R
window
∑∑ 
.
∑∑ 
Repaint
∑∑ 
(
∑∑ 
)
∑∑ 
;
∑∑ 
}
∏∏ 	
bool
ªª 
doAnimateScroll
ªª 
=
ªª 
false
ªª $
;
ªª$ %
Vector2
ºº 
scrollOrigin
ºº 
=
ºº 
Vector2
ºº &
.
ºº& '
zero
ºº' +
;
ºº+ ,
Vector2
ΩΩ 
scrollTarget
ΩΩ 
=
ΩΩ 
Vector2
ΩΩ &
.
ΩΩ& '
zero
ΩΩ' +
;
ΩΩ+ ,
double
ææ 
scrollStartTime
ææ 
=
ææ  
$num
ææ! "
;
ææ" #
float
øø 
scrollTotalTime
øø 
=
øø 
$num
øø  "
;
øø" #
const
¿¿ 
float
¿¿ &
SCROLL_PIXELS_PER_SECOND
¿¿ ,
=
¿¿- .
$num
¿¿/ 4
;
¿¿4 5
void
¬¬ "
StartScrollAnimation
¬¬ !
(
¬¬! "
float
¬¬" '
x
¬¬( )
,
¬¬) *
float
¬¬+ 0
y
¬¬1 2
)
¬¬2 3
{
√√ 	
scrollOrigin
ƒƒ 
=
ƒƒ 
m_Scroll
ƒƒ #
;
ƒƒ# $
scrollTarget
≈≈ 
.
≈≈ 
x
≈≈ 
=
≈≈ 
x
≈≈ 
;
≈≈ 
scrollTarget
∆∆ 
.
∆∆ 
y
∆∆ 
=
∆∆ 
y
∆∆ 
;
∆∆ 
scrollStartTime
«« 
=
«« 
EditorApplication
«« /
.
««/ 0
timeSinceStartup
««0 @
;
««@ A
scrollTotalTime
»» 
=
»» 
Vector2
»» %
.
»»% &
Distance
»»& .
(
»». /
scrollOrigin
»»/ ;
,
»»; <
scrollTarget
»»= I
)
»»I J
/
»»K L&
SCROLL_PIXELS_PER_SECOND
»»M e
;
»»e f
doAnimateScroll
…… 
=
…… 
true
…… "
;
……" #
}
   	
int
ÃÃ 
SCROLL_BTN_SIZE
ÃÃ 
{
ÃÃ 
get
ÃÃ !
{
ÃÃ" #
return
ÃÃ$ *

isFloating
ÃÃ+ 5
?
ÃÃ6 7
$num
ÃÃ8 :
:
ÃÃ; <
$num
ÃÃ= ?
;
ÃÃ? @
}
ÃÃA B
}
ÃÃC D
int
ÕÕ 
windowWidth
ÕÕ 
{
ÕÕ 
get
ÕÕ 
{
ÕÕ 
return
ÕÕ  &
(
ÕÕ' (
int
ÕÕ( +
)
ÕÕ+ ,
Mathf
ÕÕ, 1
.
ÕÕ1 2
Ceil
ÕÕ2 6
(
ÕÕ6 7
window
ÕÕ7 =
.
ÕÕ= >
position
ÕÕ> F
.
ÕÕF G
width
ÕÕG L
)
ÕÕL M
;
ÕÕM N
}
ÕÕO P
}
ÕÕQ R
int
ŒŒ 
windowHeight
ŒŒ 
{
ŒŒ 
get
ŒŒ 
{
ŒŒ  
return
ŒŒ! '
(
ŒŒ( )
int
ŒŒ) ,
)
ŒŒ, -
Mathf
ŒŒ- 2
.
ŒŒ2 3
Ceil
ŒŒ3 7
(
ŒŒ7 8
window
ŒŒ8 >
.
ŒŒ> ?
position
ŒŒ? G
.
ŒŒG H
height
ŒŒH N
)
ŒŒN O
;
ŒŒO P
}
ŒŒQ R
}
ŒŒS T
bool
–– !
m_ShowScrollButtons
––  
=
––! "
false
––# (
;
––( )
bool
——  
m_IsHorizontalMenu
—— 
=
——  !
false
——" '
;
——' (
int
““ 
m_ContentWidth
““ 
=
““ 
$num
““ 
,
““ 
m_ContentHeight
““  /
=
““0 1
$num
““2 3
;
““3 4
int
‘‘ 
	m_Columns
‘‘ 
;
‘‘ 
int
’’ 
m_Rows
’’ 
;
’’ 
bool
◊◊ 
m_WantsRepaint
◊◊ 
;
◊◊ 
bool
ŸŸ 
IsActionValid
ŸŸ 
(
ŸŸ 

MenuAction
ŸŸ %
action
ŸŸ& ,
)
ŸŸ, -
{
⁄⁄ 	
return
€€ 
!
€€ 
action
€€ 
.
€€ 
hidden
€€ !
&&
€€" $
(
€€% &
!
€€& '

isIconMode
€€' 1
||
€€2 4
action
€€5 ;
.
€€; <
icon
€€< @
!=
€€A C
null
€€D H
)
€€H I
;
€€I J
}
‹‹ 	
public
ﬁﬁ 
void
ﬁﬁ 
OnGUI
ﬁﬁ 
(
ﬁﬁ 
)
ﬁﬁ 
{
ﬂﬂ 	
Event
‡‡ 
evt
‡‡ 
=
‡‡ 
Event
‡‡ 
.
‡‡ 
current
‡‡ %
;
‡‡% &
Vector2
·· 
mpos
·· 
=
·· 
evt
·· 
.
·· 
mousePosition
·· ,
;
··, -
int
‰‰ 
menuActionsCount
‰‰  
=
‰‰! "
$num
‰‰# $
;
‰‰$ %
for
ÊÊ 
(
ÊÊ 
int
ÊÊ 
i
ÊÊ 
=
ÊÊ 
$num
ÊÊ 
;
ÊÊ 
i
ÊÊ 
<
ÊÊ 
	m_Actions
ÊÊ  )
.
ÊÊ) *
Count
ÊÊ* /
;
ÊÊ/ 0
i
ÊÊ1 2
++
ÊÊ2 4
)
ÊÊ4 5
if
ÁÁ 
(
ÁÁ 
IsActionValid
ÁÁ !
(
ÁÁ! "
	m_Actions
ÁÁ" +
[
ÁÁ+ ,
i
ÁÁ, -
]
ÁÁ- .
)
ÁÁ. /
)
ÁÁ/ 0
menuActionsCount
ËË $
++
ËË$ &
;
ËË& '
if
ÍÍ 
(
ÍÍ 

isIconMode
ÍÍ 
&&
ÍÍ 
menuActionsCount
ÍÍ .
<
ÍÍ/ 0
$num
ÍÍ1 2
)
ÍÍ2 3
{
ÎÎ 

isIconMode
ÏÏ 
=
ÏÏ 
false
ÏÏ "
;
ÏÏ" #
ProBuilderEditor
ÌÌ  
.
ÌÌ  !
s_IsIconGui
ÌÌ! ,
.
ÌÌ, -
value
ÌÌ- 2
=
ÌÌ3 4

isIconMode
ÌÌ5 ?
;
ÌÌ? @"
CalculateMaxIconSize
ÓÓ $
(
ÓÓ$ %
)
ÓÓ% &
;
ÓÓ& '
Debug
ÔÔ 
.
ÔÔ 

LogWarning
ÔÔ  
(
ÔÔ  !
$strÔÔ! ¯
)ÔÔ¯ ˘
;ÔÔ˘ ˙
return
 
;
 
}
ÒÒ 
int
ÛÛ 
availableWidth
ÛÛ 
=
ÛÛ  
windowWidth
ÛÛ! ,
;
ÛÛ, -
int
ÙÙ 
availableHeight
ÙÙ 
=
ÙÙ  !
windowHeight
ÙÙ" .
;
ÙÙ. /
bool
ıı 
isHorizontal
ıı 
=
ıı 
windowWidth
ıı  +
>
ıı, -
windowHeight
ıı. :
*
ıı; <
$num
ıı= >
;
ıı> ?
if
˜˜ 
(
˜˜  
m_IsHorizontalMenu
˜˜ "
!=
˜˜# %
isHorizontal
˜˜& 2
||
˜˜3 5
m_Rows
˜˜6 <
<
˜˜= >
$num
˜˜? @
||
˜˜A C
	m_Columns
˜˜D M
<
˜˜N O
$num
˜˜P Q
)
˜˜Q R"
CalculateMaxIconSize
¯¯ $
(
¯¯$ %
)
¯¯% &
;
¯¯& '
if
˙˙ 
(
˙˙ 
evt
˙˙ 
.
˙˙ 
type
˙˙ 
==
˙˙ 
	EventType
˙˙ %
.
˙˙% &
Layout
˙˙& ,
)
˙˙, -
{
˚˚ 
if
¸¸ 
(
¸¸ 
isHorizontal
¸¸  
)
¸¸  !
{
˝˝ 
m_Rows
˛˛ 
=
˛˛ 
(
˛˛ 
(
˛˛ 
windowHeight
˛˛ +
-
˛˛, -
$num
˛˛. /
)
˛˛/ 0
/
˛˛1 2
m_ContentHeight
˛˛3 B
)
˛˛B C
;
˛˛C D
	m_Columns
ˇˇ 
=
ˇˇ 
System
ˇˇ  &
.
ˇˇ& '
Math
ˇˇ' +
.
ˇˇ+ ,
Max
ˇˇ, /
(
ˇˇ/ 0
windowWidth
ˇˇ0 ;
/
ˇˇ< =
m_ContentWidth
ˇˇ> L
,
ˇˇL M
(
ˇˇN O
menuActionsCount
ˇˇO _
/
ˇˇ` a
m_Rows
ˇˇb h
)
ˇˇh i
+
ˇˇj k
(
ˇˇl m
menuActionsCount
ˇˇm }
%
ˇˇ~ 
m_RowsˇˇÄ Ü
!=ˇˇá â
$numˇˇä ã
?ˇˇå ç
$numˇˇé è
:ˇˇê ë
$numˇˇí ì
)ˇˇì î
)ˇˇî ï
;ˇˇï ñ
}
ÄÄ 
else
ÅÅ 
{
ÇÇ 
	m_Columns
ÉÉ 
=
ÉÉ 
System
ÉÉ  &
.
ÉÉ& '
Math
ÉÉ' +
.
ÉÉ+ ,
Max
ÉÉ, /
(
ÉÉ/ 0
(
ÉÉ0 1
windowWidth
ÉÉ1 <
-
ÉÉ= >
$num
ÉÉ? @
)
ÉÉ@ A
/
ÉÉB C
m_ContentWidth
ÉÉD R
,
ÉÉR S
$num
ÉÉT U
)
ÉÉU V
;
ÉÉV W
m_Rows
ÑÑ 
=
ÑÑ 
(
ÑÑ 
menuActionsCount
ÑÑ .
/
ÑÑ/ 0
	m_Columns
ÑÑ1 :
)
ÑÑ: ;
+
ÑÑ< =
(
ÑÑ> ?
menuActionsCount
ÑÑ? O
%
ÑÑP Q
	m_Columns
ÑÑR [
!=
ÑÑ\ ^
$num
ÑÑ_ `
?
ÑÑa b
$num
ÑÑc d
:
ÑÑe f
$num
ÑÑg h
)
ÑÑh i
;
ÑÑi j
}
ÖÖ 
}
ÜÜ 
if
ââ 
(
ââ 
m_Rows
ââ 
<
ââ 
$num
ââ 
||
ââ 
	m_Columns
ââ '
<
ââ( )
$num
ââ* +
)
ââ+ ,
return
ää 
;
ää 
int
åå 
contentWidth
åå 
=
åå 
(
åå  
menuActionsCount
åå  0
/
åå1 2
m_Rows
åå3 9
)
åå9 :
*
åå; <
m_ContentWidth
åå= K
+
ååL M
$num
ååN O
;
ååO P
int
çç 
contentHeight
çç 
=
çç 
m_Rows
çç  &
*
çç' (
m_ContentHeight
çç) 8
+
çç9 :
$num
çç; <
;
çç< =
bool
èè 
showScrollButtons
èè "
=
èè# $
isHorizontal
èè% 1
?
èè2 3
contentWidth
èè4 @
>
èèA B
availableWidth
èèC Q
:
èèR S
contentHeight
èèT a
>
èèb c
availableHeight
èèd s
;
èès t
if
ëë 
(
ëë 
showScrollButtons
ëë !
)
ëë! "
{
íí 
availableHeight
ìì 
-=
ìì  "
SCROLL_BTN_SIZE
ìì# 2
*
ìì3 4
$num
ìì5 6
;
ìì6 7
availableWidth
îî 
-=
îî !
SCROLL_BTN_SIZE
îî" 1
*
îî2 3
$num
îî4 5
;
îî5 6
}
ïï 
if
óó 
(
óó 
isHorizontal
óó 
&&
óó 
evt
óó  #
.
óó# $
type
óó$ (
==
óó) +
	EventType
óó, 5
.
óó5 6
ScrollWheel
óó6 A
&&
óóB D
evt
óóE H
.
óóH I
delta
óóI N
.
óóN O
sqrMagnitude
óóO [
>
óó\ ]
$num
óó^ c
)
óóc d
{
òò 
m_Scroll
ôô 
.
ôô 
value
ôô 
=
ôô  
new
ôô! $
Vector2
ôô% ,
(
ôô, -
m_Scroll
ôô- 5
.
ôô5 6
value
ôô6 ;
.
ôô; <
x
ôô< =
+
ôô> ?
evt
ôô@ C
.
ôôC D
delta
ôôD I
.
ôôI J
y
ôôJ K
*
ôôL M
$num
ôôN Q
,
ôôQ R
m_Scroll
ôôS [
.
ôô[ \
value
ôô\ a
.
ôôa b
y
ôôb c
)
ôôc d
;
ôôd e
ScheduleRepaint
öö 
(
öö 
)
öö  
;
öö  !
}
õõ 
int
†† !
maxHorizontalScroll
†† #
=
††$ %
!
††& '

isIconMode
††' 1
?
††2 3
$num
††4 9
:
††: ;
contentWidth
††< H
-
††I J
availableWidth
††K Y
;
††Y Z
int
°° 
maxVerticalScroll
°° !
=
°°" #
contentHeight
°°$ 1
-
°°2 3
availableHeight
°°4 C
;
°°C D
if
§§ 
(
§§ !
m_ShowScrollButtons
§§ #
!=
§§$ &
showScrollButtons
§§' 8
&&
§§9 ;
evt
§§< ?
.
§§? @
type
§§@ D
==
§§E G
	EventType
§§H Q
.
§§Q R
Layout
§§R X
)
§§X Y!
m_ShowScrollButtons
•• #
=
••$ %
showScrollButtons
••& 7
;
••7 8
if
ßß 
(
ßß !
m_ShowScrollButtons
ßß #
)
ßß# $
{
®® 
if
©© 
(
©© 
isHorizontal
©©  
)
©©  !
{
™™ 
	GUILayout
´´ 
.
´´ 
BeginHorizontal
´´ -
(
´´- .
)
´´. /
;
´´/ 0
GUI
≠≠ 
.
≠≠ 
enabled
≠≠ 
=
≠≠  !
(
≠≠" #
(
≠≠# $
Vector2
≠≠$ +
)
≠≠+ ,
m_Scroll
≠≠, 4
)
≠≠4 5
.
≠≠5 6
x
≠≠6 7
>
≠≠8 9
$num
≠≠: ;
;
≠≠; <
if
ØØ 
(
ØØ 
	GUILayout
ØØ !
.
ØØ! "
Button
ØØ" (
(
ØØ( )
scrollIconLeft
ØØ) 7
,
ØØ7 8
UI
ØØ9 ;
.
ØØ; <
EditorGUIUtility
ØØ< L
.
ØØL M0
"ButtonNoBackgroundSmallMarginStyle
ØØM o
,
ØØo p
	GUILayout
ØØq z
.
ØØz {
ExpandHeightØØ{ á
(ØØá à
trueØØà å
)ØØå ç
)ØØç é
)ØØé è"
StartScrollAnimation
∞∞ ,
(
∞∞, -
Mathf
∞∞- 2
.
∞∞2 3
Max
∞∞3 6
(
∞∞6 7
(
∞∞7 8
(
∞∞8 9
Vector2
∞∞9 @
)
∞∞@ A
m_Scroll
∞∞A I
)
∞∞I J
.
∞∞J K
x
∞∞K L
-
∞∞M N
availableWidth
∞∞O ]
,
∞∞] ^
$num
∞∞_ a
)
∞∞a b
,
∞∞b c
$num
∞∞d f
)
∞∞f g
;
∞∞g h
GUI
≤≤ 
.
≤≤ 
enabled
≤≤ 
=
≤≤  !
true
≤≤" &
;
≤≤& '
}
≥≥ 
else
¥¥ 
{
µµ 
GUI
∂∂ 
.
∂∂ 
enabled
∂∂ 
=
∂∂  !
(
∂∂" #
(
∂∂# $
Vector2
∂∂$ +
)
∂∂+ ,
m_Scroll
∂∂, 4
)
∂∂4 5
.
∂∂5 6
y
∂∂6 7
>
∂∂8 9
$num
∂∂: ;
;
∂∂; <
if
∏∏ 
(
∏∏ 
	GUILayout
∏∏ !
.
∏∏! "
Button
∏∏" (
(
∏∏( )
scrollIconUp
∏∏) 5
,
∏∏5 6
UI
∏∏7 9
.
∏∏9 :
EditorGUIUtility
∏∏: J
.
∏∏J K0
"ButtonNoBackgroundSmallMarginStyle
∏∏K m
)
∏∏m n
)
∏∏n o"
StartScrollAnimation
ππ ,
(
ππ, -
$num
ππ- /
,
ππ/ 0
Mathf
ππ1 6
.
ππ6 7
Max
ππ7 :
(
ππ: ;
(
ππ; <
(
ππ< =
Vector2
ππ= D
)
ππD E
m_Scroll
ππE M
)
ππM N
.
ππN O
y
ππO P
-
ππQ R
availableHeight
ππS b
,
ππb c
$num
ππd f
)
ππf g
)
ππg h
;
ππh i
GUI
ªª 
.
ªª 
enabled
ªª 
=
ªª  !
true
ªª" &
;
ªª& '
}
ºº 
}
ΩΩ 
m_Scroll
øø 
.
øø 
value
øø 
=
øø 
	GUILayout
øø &
.
øø& '
BeginScrollView
øø' 6
(
øø6 7
m_Scroll
øø7 ?
.
øø? @
value
øø@ E
,
øøE F
false
øøG L
,
øøL M
false
øøN S
,
øøS T
GUIStyle
øøU ]
.
øø] ^
none
øø^ b
,
øøb c
GUIStyle
øød l
.
øøl m
none
øøm q
,
øøq r
GUIStyle
øøs {
.
øø{ |
noneøø| Ä
)øøÄ Å
;øøÅ Ç
bool
¡¡ 
tooltipShown
¡¡ 
=
¡¡ 
false
¡¡  %
,
¡¡% &
hovering
¬¬ 
=
¬¬ 
false
¬¬  
;
¬¬  !
Rect
ƒƒ 

optionRect
ƒƒ 
=
ƒƒ  !
new
ƒƒ" %
Rect
ƒƒ& *
(
ƒƒ* +
$num
ƒƒ+ -
,
ƒƒ- .
$num
ƒƒ/ 1
,
ƒƒ1 2
$num
ƒƒ3 5
,
ƒƒ5 6
$num
ƒƒ7 9
)
ƒƒ9 :
;
ƒƒ: ;
	GUILayout
∆∆ 
.
∆∆ 
BeginHorizontal
∆∆ %
(
∆∆% &
)
∆∆& '
;
∆∆' (
bool
…… !
windowContainsMouse
…… $
=
……% &
window
……( .
==
……/ 1
EditorWindow
……2 >
.
……> ?
mouseOverWindow
……? N
&&
   
mpos
   
.
   
x
   
>
   
$num
   
&&
    
mpos
  ! %
.
  % &
x
  & '
<
  ( )
window
  * 0
.
  0 1
position
  1 9
.
  9 :
width
  : ?
&&
  @ B
mpos
ÀÀ 
.
ÀÀ 
y
ÀÀ 
>
ÀÀ 
$num
ÀÀ 
&&
ÀÀ 
mpos
ÀÀ "
.
ÀÀ" #
y
ÀÀ# $
<
ÀÀ% &
window
ÀÀ' -
.
ÀÀ- .
position
ÀÀ. 6
.
ÀÀ6 7
height
ÀÀ7 =
;
ÀÀ= >
int
ÕÕ 
columnCount
ÕÕ 
=
ÕÕ 
$num
ÕÕ 
;
ÕÕ  
for
œœ 
(
œœ 
int
œœ 
actionIndex
œœ  
=
œœ! "
$num
œœ# $
;
œœ$ %
actionIndex
œœ& 1
<
œœ2 3
m_ActionsLength
œœ4 C
;
œœC D
actionIndex
œœE P
++
œœP R
)
œœR S
{
–– 

MenuAction
—— 
action
—— !
=
——" #
	m_Actions
——$ -
[
——- .
actionIndex
——. 9
]
——9 :
;
——: ;
if
”” 
(
”” 
!
”” 
IsActionValid
”” "
(
””" #
action
””# )
)
””) *
)
””* +
continue
‘‘ 
;
‘‘ 
if
÷÷ 
(
÷÷ 

isIconMode
÷÷ 
)
÷÷ 
{
◊◊ 
if
ÿÿ 
(
ÿÿ 
action
ÿÿ 
.
ÿÿ 
DoButton
ÿÿ '
(
ÿÿ' (
isHorizontal
ÿÿ( 4
,
ÿÿ4 5
evt
ÿÿ6 9
.
ÿÿ9 :
alt
ÿÿ: =
,
ÿÿ= >
ref
ÿÿ? B

optionRect
ÿÿC M
,
ÿÿM N
	GUILayout
ÿÿO X
.
ÿÿX Y
	MaxHeight
ÿÿY b
(
ÿÿb c
m_ContentHeight
ÿÿc r
+
ÿÿs t
$num
ÿÿu w
)
ÿÿw x
)
ÿÿx y
&&
ÿÿz |
!
ÿÿ} ~
evtÿÿ~ Å
.ÿÿÅ Ç
shiftÿÿÇ á
)ÿÿá à
{
ŸŸ 

optionRect
€€ "
.
€€" #
x
€€# $
-=
€€% '
m_Scroll
€€( 0
.
€€0 1
value
€€1 6
.
€€6 7
x
€€7 8
;
€€8 9

optionRect
‹‹ "
.
‹‹" #
y
‹‹# $
-=
‹‹% '
m_Scroll
‹‹( 0
.
‹‹0 1
value
‹‹1 6
.
‹‹6 7
y
‹‹7 8
;
‹‹8 9
if
ﬁﬁ 
(
ﬁﬁ !
windowContainsMouse
ﬁﬁ /
&&
ﬁﬁ0 2
evt
ﬂﬂ 
.
ﬂﬂ  
type
ﬂﬂ  $
!=
ﬂﬂ% '
	EventType
ﬂﬂ( 1
.
ﬂﬂ1 2
Layout
ﬂﬂ2 8
&&
ﬂﬂ9 ;

optionRect
‡‡ &
.
‡‡& '
Contains
‡‡' /
(
‡‡/ 0
evt
‡‡0 3
.
‡‡3 4
mousePosition
‡‡4 A
)
‡‡A B
)
‡‡B C
{
·· !
hoveringTooltipName
‚‚ /
=
‚‚0 1
action
‚‚2 8
.
‚‚8 9
tooltip
‚‚9 @
.
‚‚@ A
title
‚‚A F
+
‚‚G H
$str
‚‚I O
;
‚‚O P!
tooltipTimerRefresh
„„ /
=
„„0 1
$num
„„2 5
;
„„5 6
hovering
‰‰ $
=
‰‰% &
true
‰‰' +
;
‰‰+ ,
if
ÊÊ 
(
ÊÊ  
showTooltipTimer
ÊÊ  0
)
ÊÊ0 1
{
ÁÁ 
tooltipShown
ËË  ,
=
ËË- .
true
ËË/ 3
;
ËË3 4
ShowTooltip
ÈÈ  +
(
ÈÈ+ ,

optionRect
ÈÈ, 6
,
ÈÈ6 7
$str
ÈÈ8 R
,
ÈÈR S
m_Scroll
ÈÈT \
)
ÈÈ\ ]
;
ÈÈ] ^
}
ÍÍ 
}
ÎÎ 
}
ÏÏ 
}
ÌÌ 
else
ÓÓ 
{
ÔÔ 
if
 
(
 
	m_Columns
 !
<
" #
$num
$ %
)
% &
action
ÒÒ 
.
ÒÒ 
DoButton
ÒÒ '
(
ÒÒ' (
isHorizontal
ÒÒ( 4
,
ÒÒ4 5
evt
ÒÒ6 9
.
ÒÒ9 :
alt
ÒÒ: =
,
ÒÒ= >
ref
ÒÒ? B

optionRect
ÒÒC M
)
ÒÒM N
;
ÒÒN O
else
ÚÚ 
action
ÛÛ 
.
ÛÛ 
DoButton
ÛÛ '
(
ÛÛ' (
isHorizontal
ÛÛ( 4
,
ÛÛ4 5
evt
ÛÛ6 9
.
ÛÛ9 :
alt
ÛÛ: =
,
ÛÛ= >
ref
ÛÛ? B

optionRect
ÛÛC M
,
ÛÛM N
	GUILayout
ÛÛO X
.
ÛÛX Y
MinWidth
ÛÛY a
(
ÛÛa b
m_ContentWidth
ÛÛb p
)
ÛÛp q
)
ÛÛq r
;
ÛÛr s
}
ÙÙ 
Rect
ˆˆ 

buttonRect
ˆˆ 
=
ˆˆ  !
GUILayoutUtility
ˆˆ" 2
.
ˆˆ2 3
GetLastRect
ˆˆ3 >
(
ˆˆ> ?
)
ˆˆ? @
;
ˆˆ@ A
if
¯¯ 
(
¯¯ !
windowContainsMouse
¯¯ '
&&
¯¯( *
evt
˘˘ 
.
˘˘ 
type
˘˘ 
!=
˘˘ 
	EventType
˘˘  )
.
˘˘) *
Layout
˘˘* 0
&&
˘˘1 3
!
˙˙ 
hovering
˙˙ 
&&
˙˙  

buttonRect
˚˚ 
.
˚˚ 
Contains
˚˚ '
(
˚˚' (
evt
˚˚( +
.
˚˚+ ,
mousePosition
˚˚, 9
)
˚˚9 :
)
˚˚: ;
{
¸¸ !
hoveringTooltipName
˝˝ '
=
˝˝( )
action
˝˝* 0
.
˝˝0 1
tooltip
˝˝1 8
.
˝˝8 9
title
˝˝9 >
;
˝˝> ?!
tooltipTimerRefresh
˛˛ '
=
˛˛( )
$num
˛˛* ,
;
˛˛, -
if
ÄÄ 
(
ÄÄ 
evt
ÄÄ 
.
ÄÄ 
shift
ÄÄ !
||
ÄÄ" $
showTooltipTimer
ÄÄ% 5
)
ÄÄ5 6
{
ÅÅ 
tooltipShown
ÇÇ $
=
ÇÇ% &
true
ÇÇ' +
;
ÇÇ+ ,
ShowTooltip
ÉÉ #
(
ÉÉ# $

buttonRect
ÉÉ$ .
,
ÉÉ. /
action
ÉÉ0 6
.
ÉÉ6 7
tooltip
ÉÉ7 >
,
ÉÉ> ?
m_Scroll
ÉÉ@ H
)
ÉÉH I
;
ÉÉI J
}
ÑÑ 
hovering
ÜÜ 
=
ÜÜ 
true
ÜÜ #
;
ÜÜ# $
}
áá 
if
ââ 
(
ââ 
++
ââ 
columnCount
ââ !
>=
ââ" $
	m_Columns
ââ% .
)
ââ. /
{
ää 
columnCount
ãã 
=
ãã  !
$num
ãã" #
;
ãã# $
	GUILayout
çç 
.
çç 
EndHorizontal
çç +
(
çç+ ,
)
çç, -
;
çç- .
	GUILayout
éé 
.
éé 
BeginHorizontal
éé -
(
éé- .
)
éé. /
;
éé/ 0
}
èè 
}
êê 
	GUILayout
íí 
.
íí 
FlexibleSpace
íí #
(
íí# $
)
íí$ %
;
íí% &
	GUILayout
ìì 
.
ìì 
EndHorizontal
ìì #
(
ìì# $
)
ìì$ %
;
ìì% &
	GUILayout
ïï 
.
ïï 
EndScrollView
ïï #
(
ïï# $
)
ïï$ %
;
ïï% &
if
óó 
(
óó !
m_ShowScrollButtons
óó #
)
óó# $
{
òò 
if
ôô 
(
ôô 
isHorizontal
ôô  
)
ôô  !
{
öö 
GUI
õõ 
.
õõ 
enabled
õõ 
=
õõ  !
m_Scroll
õõ" *
.
õõ* +
value
õõ+ 0
.
õõ0 1
x
õõ1 2
<
õõ3 4!
maxHorizontalScroll
õõ5 H
-
õõI J
$num
õõK L
;
õõL M
if
úú 
(
úú 
	GUILayout
úú !
.
úú! "
Button
úú" (
(
úú( )
scrollIconRight
úú) 8
,
úú8 9
UI
úú: <
.
úú< =
EditorGUIUtility
úú= M
.
úúM N0
"ButtonNoBackgroundSmallMarginStyle
úúN p
,
úúp q
	GUILayout
úúr {
.
úú{ |
ExpandHeightúú| à
(úúà â
trueúúâ ç
)úúç é
)úúé è
)úúè ê"
StartScrollAnimation
ùù ,
(
ùù, -
Mathf
ùù- 2
.
ùù2 3
Min
ùù3 6
(
ùù6 7
m_Scroll
ùù7 ?
.
ùù? @
value
ùù@ E
.
ùùE F
x
ùùF G
+
ùùH I
availableWidth
ùùJ X
+
ùùY Z
$num
ùù[ \
,
ùù\ ]!
maxHorizontalScroll
ùù^ q
)
ùùq r
,
ùùr s
$num
ùùt v
)
ùùv w
;
ùùw x
GUI
ûû 
.
ûû 
enabled
ûû 
=
ûû  !
true
ûû" &
;
ûû& '
	GUILayout
†† 
.
†† 
EndHorizontal
†† +
(
††+ ,
)
††, -
;
††- .
}
°° 
else
¢¢ 
{
££ 
GUI
§§ 
.
§§ 
enabled
§§ 
=
§§  !
m_Scroll
§§" *
.
§§* +
value
§§+ 0
.
§§0 1
y
§§1 2
<
§§3 4
maxVerticalScroll
§§5 F
-
§§G H
$num
§§I J
;
§§J K
if
•• 
(
•• 
	GUILayout
•• !
.
••! "
Button
••" (
(
••( )
scrollIconDown
••) 7
,
••7 8
UI
••9 ;
.
••; <
EditorGUIUtility
••< L
.
••L M0
"ButtonNoBackgroundSmallMarginStyle
••M o
)
••o p
)
••p q"
StartScrollAnimation
¶¶ ,
(
¶¶, -
$num
¶¶- /
,
¶¶/ 0
Mathf
¶¶1 6
.
¶¶6 7
Min
¶¶7 :
(
¶¶: ;
m_Scroll
¶¶; C
.
¶¶C D
value
¶¶D I
.
¶¶I J
y
¶¶J K
+
¶¶L M
availableHeight
¶¶N ]
+
¶¶^ _
$num
¶¶` a
,
¶¶a b
maxVerticalScroll
¶¶c t
)
¶¶t u
)
¶¶u v
;
¶¶v w
GUI
ßß 
.
ßß 
enabled
ßß 
=
ßß  !
true
ßß" &
;
ßß& '
}
®® 
}
©© 
if
´´ 
(
´´ 
(
´´ 
evt
´´ 
.
´´ 
type
´´ 
==
´´ 
	EventType
´´ &
.
´´& '
Repaint
´´' .
||
´´/ 1
evt
´´2 5
.
´´5 6
type
´´6 :
==
´´; =
	EventType
´´> G
.
´´G H
	MouseMove
´´H Q
)
´´Q R
&&
´´S U
!
´´V W
tooltipShown
´´W c
)
´´c d
TooltipEditor
¨¨ 
.
¨¨ 
Hide
¨¨ "
(
¨¨" #
)
¨¨# $
;
¨¨$ %
if
ÆÆ 
(
ÆÆ 
evt
ÆÆ 
.
ÆÆ 
type
ÆÆ 
!=
ÆÆ 
	EventType
ÆÆ %
.
ÆÆ% &
Layout
ÆÆ& ,
&&
ÆÆ- /
!
ÆÆ0 1
hovering
ÆÆ1 9
)
ÆÆ9 :
tooltipTimer
ØØ 
.
ØØ 
item1
ØØ "
=
ØØ# $
$str
ØØ% '
;
ØØ' (
m_WantsRepaint
±± 
|=
±± 
EditorWindow
±± *
.
±±* +
mouseOverWindow
±±+ :
==
±±; =
window
±±> D
&&
±±E G
evt
±±H K
.
±±K L
type
±±L P
==
±±Q S
	EventType
±±T ]
.
±±] ^
	MouseMove
±±^ g
;
±±g h
if
≥≥ 
(
≥≥ 
Application
≥≥ 
.
≥≥ 
	isFocused
≥≥ %
&&
≥≥& (
m_WantsRepaint
≥≥) 7
)
≥≥7 8
window
¥¥ 
.
¥¥ 
Repaint
¥¥ 
(
¥¥ 
)
¥¥  
;
¥¥  !
m_WantsRepaint
∂∂ 
=
∂∂ 
false
∂∂ "
;
∂∂" #
}
∑∑ 	
void
ππ 
ScheduleRepaint
ππ 
(
ππ 
)
ππ 
{
∫∫ 	
m_WantsRepaint
ªª 
=
ªª 
true
ªª !
;
ªª! "
}
ºº 	
void
ææ 
RepaintIfFocused
ææ 
(
ææ 
)
ææ 
{
øø 	
if
¿¿ 
(
¿¿ 
Application
¿¿ 
.
¿¿ 
	isFocused
¿¿ $
)
¿¿$ %
window
¡¡ 
.
¡¡ 
Repaint
¡¡ 
(
¡¡ 
)
¡¡  
;
¡¡  !
}
¬¬ 	
}
√√ 
}ƒƒ ≥≤
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\BezierSplineEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
[ 
CustomEditor 
( 
typeof 
( 
BezierShape $
)$ %
)% &
]& '
sealed 

class 
BezierShapeEditor "
:# $
Editor% +
{		 
static

 

GUIContent

 
[

 
]

 
s_TangentModeIcons

 .
=

/ 0
new

1 4

GUIContent

5 ?
[

? @
$num

@ A
]

A B
;

B C
const 
float 
k_HandleSize  
=! "
$num# '
;' (
static 
Vector3 
Vector3_Zero #
=$ %
new& )
Vector3* 1
(1 2
$num2 4
,4 5
$num6 8
,8 9
$num: <
)< =
;= >
static 
Vector3 
Vector3_Forward &
=' (
new) ,
Vector3- 4
(4 5
$num5 7
,7 8
$num9 ;
,; <
$num= ?
)? @
;@ A
static 
Vector3 
Vector3_Backward '
=( )
new* -
Vector3. 5
(5 6
$num6 8
,8 9
$num: <
,< =
-> ?
$num? A
)A B
;B C
static 
Color %
bezierPositionHandleColor .
=/ 0
new1 4
Color5 :
(: ;
$num; ?
,? @
$numA D
,D E
$numF J
,J K
$numL N
)N O
;O P
static 
Color $
bezierTangentHandleColor -
=. /
new0 3
Color4 9
(9 :
$num: =
,= >
$num? B
,B C
$numD G
,G H
$numI L
)L M
;M N
static 
bool 
s_SnapTangents "
=# $
true% )
;) *
[ 	
SerializeField	 
] 
BezierHandle 
m_currentHandle $
=% &
new' *
BezierHandle+ 7
(7 8
-8 9
$num9 :
,: ;
false< A
)A B
;B C
[ 	
SerializeField	 
] 
BezierTangentMode 
m_TangentMode '
=( )
BezierTangentMode* ;
.; <
Mirrored< D
;D E
BezierShape 
m_Target 
= 
null #
;# $
bool 

m_IsMoving 
= 
false 
;  
List 
< 
Vector3 
> 
m_ControlPoints %
;% &
ProBuilderMesh!! 
m_CurrentObject!! &
{"" 	
get## 
{$$ 
if%% 
(%% 
m_Target%% 
.%% 
mesh%% !
==%%" $
null%%% )
)%%) *
{&& 
m_Target'' 
.'' 
mesh'' !
=''" #
m_Target''$ ,
.'', -

gameObject''- 7
.''7 8
AddComponent''8 D
<''D E
ProBuilderMesh''E S
>''S T
(''T U
)''U V
;''V W
EditorUtility(( !
.((! "

InitObject((" ,
(((, -
m_Target((- 5
.((5 6
mesh((6 :
)((: ;
;((; <
})) 
return++ 
m_Target++ 
.++  
mesh++  $
;++$ %
},, 
}-- 	
[// 	
System//	 
.// 
Serializable// 
]// 
struct00 
BezierHandle00 
{11 	
public22 
int22 
index22 
;22 
public33 
bool33 
	isTangent33 !
;33! "
public44 "
BezierTangentDirection44 )
tangent44* 1
;441 2
public66 
BezierHandle66 
(66  
int66  #
index66$ )
,66) *
bool66+ /
	isTangent660 9
,669 :"
BezierTangentDirection66; Q
tangent66R Y
=66Z ["
BezierTangentDirection66\ r
.66r s
In66s u
)66u v
{77 
this88 
.88 
index88 
=88 
index88 "
;88" #
this99 
.99 
	isTangent99 
=99  
	isTangent99! *
;99* +
this:: 
.:: 
tangent:: 
=:: 
tangent:: &
;::& '
};; 
public== 
static== 
implicit== "
operator==# +
int==, /
(==/ 0
BezierHandle==0 <
handle=== C
)==C D
{>> 
return?? 
handle?? 
.?? 
index?? #
;??# $
}@@ 
publicBB 
staticBB 
explicitBB "
operatorBB# +
BezierHandleBB, 8
(BB8 9
intBB9 <
indexBB= B
)BBB C
{CC 
returnDD 
newDD 
BezierHandleDD '
(DD' (
indexDD( -
,DD- .
falseDD/ 4
)DD4 5
;DD5 6
}EE 
publicGG 
staticGG 
implicitGG "
operatorGG# +"
BezierTangentDirectionGG, B
(GGB C
BezierHandleGGC O
handleGGP V
)GGV W
{HH 
returnII 
handleII 
.II 
tangentII %
;II% &
}JJ 
publicLL 
voidLL 
SetIndexLL  
(LL  !
intLL! $
indexLL% *
)LL* +
{MM 
thisNN 
.NN 
indexNN 
=NN 
indexNN "
;NN" #
thisOO 
.OO 
	isTangentOO 
=OO  
falseOO! &
;OO& '
}PP 
publicRR 
voidRR 
SetIndexAndTangentRR *
(RR* +
intRR+ .
indexRR/ 4
,RR4 5"
BezierTangentDirectionRR6 L
dirRRM P
)RRP Q
{SS 
thisTT 
.TT 
indexTT 
=TT 
indexTT "
;TT" #
thisUU 
.UU 
	isTangentUU 
=UU  
trueUU! %
;UU% &
thisVV 
.VV 
tangentVV 
=VV 
dirVV "
;VV" #
}WW 
}XX 	
ListZZ 
<ZZ 
BezierPointZZ 
>ZZ 
m_PointsZZ "
{[[ 	
get\\ 
{\\ 
return\\ 
m_Target\\ !
.\\! "
points\\" (
;\\( )
}\\* +
set]] 
{]] 
m_Target]] 
.]] 
points]] !
=]]" #
value]]$ )
;]]) *
}]]+ ,
}^^ 	
bool`` 
m_IsEditing`` 
{aa 	
getbb 
{bb 
returnbb 
m_Targetbb !
.bb! "
	isEditingbb" +
;bb+ ,
}bb- .
setcc 
{cc 
m_Targetcc 
.cc 
	isEditingcc $
=cc% &
valuecc' ,
;cc, -
}cc. /
}dd 	
boolff 
m_CloseLoopff 
{gg 	
gethh 
{hh 
returnhh 
m_Targethh !
.hh! "
	closeLoophh" +
;hh+ ,
}hh- .
setjj 
{kk 
ifll 
(ll 
m_Targetll 
.ll 
	closeLoopll &
!=ll' )
valuell* /
)ll/ 0
UndoUtilitymm 
.mm  
RecordObjectmm  ,
(mm, -
m_Targetmm- 5
,mm5 6
$strmm7 T
)mmT U
;mmU V
m_Targetnn 
.nn 
	closeLoopnn "
=nn# $
valuenn% *
;nn* +
}oo 
}pp 	
floatrr 
m_Radiusrr 
{ss 	
gettt 
{tt 
returntt 
m_Targettt !
.tt! "
radiustt" (
;tt( )
}tt* +
setvv 
{ww 
ifxx 
(xx 
m_Targetxx 
.xx 
radiusxx #
!=xx$ &
valuexx' ,
)xx, -
UndoUtilityyy 
.yy  
RecordObjectyy  ,
(yy, -
m_Targetyy- 5
,yy5 6
$stryy7 P
)yyP Q
;yyQ R
m_Targetzz 
.zz 
radiuszz 
=zz  !
valuezz" '
;zz' (
}{{ 
}|| 	
int~~ 
m_Rows~~ 
{ 	
get
ÄÄ 
{
ÄÄ 
return
ÄÄ 
m_Target
ÄÄ !
.
ÄÄ! "
rows
ÄÄ" &
;
ÄÄ& '
}
ÄÄ( )
set
ÇÇ 
{
ÉÉ 
if
ÑÑ 
(
ÑÑ 
m_Target
ÑÑ 
.
ÑÑ 
rows
ÑÑ !
!=
ÑÑ" $
value
ÑÑ% *
)
ÑÑ* +
UndoUtility
ÖÖ 
.
ÖÖ  
RecordObject
ÖÖ  ,
(
ÖÖ, -
m_Target
ÖÖ- 5
,
ÖÖ5 6
$str
ÖÖ7 N
)
ÖÖN O
;
ÖÖO P
m_Target
ÜÜ 
.
ÜÜ 
rows
ÜÜ 
=
ÜÜ 
value
ÜÜ  %
;
ÜÜ% &
}
áá 
}
àà 	
int
ää 
	m_Columns
ää 
{
ãã 	
get
åå 
{
åå 
return
åå 
m_Target
åå !
.
åå! "
columns
åå" )
;
åå) *
}
åå+ ,
set
éé 
{
èè 
if
êê 
(
êê 
m_Target
êê 
.
êê 
columns
êê $
!=
êê% '
value
êê( -
)
êê- .
UndoUtility
ëë 
.
ëë  
RecordObject
ëë  ,
(
ëë, -
m_Target
ëë- 5
,
ëë5 6
$str
ëë7 Q
)
ëëQ R
;
ëëR S
m_Target
íí 
.
íí 
columns
íí  
=
íí! "
value
íí# (
;
íí( )
}
ìì 
}
îî 	
bool
ññ 
m_Smooth
ññ 
{
óó 	
get
òò 
{
òò 
return
òò 
m_Target
òò !
.
òò! "
smooth
òò" (
;
òò( )
}
òò* +
set
öö 
{
õõ 
if
úú 
(
úú 
m_Target
úú 
.
úú 
smooth
úú #
!=
úú$ &
value
úú' ,
)
úú, -
UndoUtility
ùù 
.
ùù  
RecordObject
ùù  ,
(
ùù, -
m_Target
ùù- 5
,
ùù5 6
$str
ùù7 P
)
ùùP Q
;
ùùQ R
m_Target
ûû 
.
ûû 
smooth
ûû 
=
ûû  !
value
ûû" '
;
ûû' (
}
üü 
}
†† 	
private
¢¢ 
GUIStyle
¢¢ 
_commandStyle
¢¢ &
=
¢¢' (
null
¢¢) -
;
¢¢- .
public
§§ 
GUIStyle
§§ 
commandStyle
§§ $
{
•• 	
get
¶¶ 
{
ßß 
if
®® 
(
®® 
_commandStyle
®® !
==
®®" $
null
®®% )
)
®®) *
{
©© 
_commandStyle
™™ !
=
™™" #
new
™™$ '
GUIStyle
™™( 0
(
™™0 1
EditorGUIUtility
™™1 A
.
™™A B
GetBuiltinSkin
™™B P
(
™™P Q

EditorSkin
™™Q [
.
™™[ \
	Inspector
™™\ e
)
™™e f
.
™™f g
	FindStyle
™™g p
(
™™p q
$str
™™q z
)
™™z {
)
™™{ |
;
™™| }
_commandStyle
´´ !
.
´´! "
	alignment
´´" +
=
´´, -

TextAnchor
´´. 8
.
´´8 9
MiddleCenter
´´9 E
;
´´E F
}
¨¨ 
return
ÆÆ 
_commandStyle
ÆÆ $
;
ÆÆ$ %
}
ØØ 
}
∞∞ 	
void
≤≤ 
OnEnable
≤≤ 
(
≤≤ 
)
≤≤ 
{
≥≥ 	
m_Target
¥¥ 
=
¥¥ 
target
¥¥ 
as
¥¥  
BezierShape
¥¥! ,
;
¥¥, -
Undo
∂∂ 
.
∂∂ 
undoRedoPerformed
∂∂ "
+=
∂∂# %
this
∂∂& *
.
∂∂* +
UndoRedoPerformed
∂∂+ <
;
∂∂< = 
s_TangentModeIcons
∏∏ 
[
∏∏ 
$num
∏∏  
]
∏∏  !
=
∏∏" #
new
∏∏$ '

GUIContent
∏∏( 2
(
∏∏2 3
IconUtility
∏∏3 >
.
∏∏> ?
GetIcon
∏∏? F
(
∏∏F G
$str
∏∏G \
)
∏∏\ ]
,
∏∏] ^
$str
∏∏_ s
)
∏∏s t
;
∏∏t u 
s_TangentModeIcons
ππ 
[
ππ 
$num
ππ  
]
ππ  !
=
ππ" #
new
ππ$ '

GUIContent
ππ( 2
(
ππ2 3
IconUtility
ππ3 >
.
ππ> ?
GetIcon
ππ? F
(
ππF G
$str
ππG _
)
ππ_ `
,
ππ` a
$str
ππb y
)
ππy z
;
ππz { 
s_TangentModeIcons
∫∫ 
[
∫∫ 
$num
∫∫  
]
∫∫  !
=
∫∫" #
new
∫∫$ '

GUIContent
∫∫( 2
(
∫∫2 3
IconUtility
∫∫3 >
.
∫∫> ?
GetIcon
∫∫? F
(
∫∫F G
$str
∫∫G `
)
∫∫` a
,
∫∫a b
$str
∫∫c {
)
∫∫{ |
;
∫∫| }
if
ºº 
(
ºº 
m_Target
ºº 
!=
ºº 
null
ºº  
)
ºº  !
SetIsEditing
ΩΩ 
(
ΩΩ 
m_Target
ΩΩ %
.
ΩΩ% &
	isEditing
ΩΩ& /
)
ΩΩ/ 0
;
ΩΩ0 1
ProBuilderEditor
øø 
.
øø 
selectModeChanged
øø .
+=
øø/ 1
SelectModeChanged
øø2 C
;
øøC D
}
¿¿ 	
void
¬¬ 
	OnDisable
¬¬ 
(
¬¬ 
)
¬¬ 
{
√√ 	
Undo
ƒƒ 
.
ƒƒ 
undoRedoPerformed
ƒƒ "
-=
ƒƒ# %
this
ƒƒ& *
.
ƒƒ* +
UndoRedoPerformed
ƒƒ+ <
;
ƒƒ< =
ProBuilderEditor
≈≈ 
.
≈≈ 
selectModeChanged
≈≈ .
-=
≈≈/ 1
SelectModeChanged
≈≈2 C
;
≈≈C D
}
∆∆ 	
void
»» 
SelectModeChanged
»» 
(
»» 

SelectMode
»» )
mode
»»* .
)
»». /
{
…… 	
if
   
(
   
!
   
mode
   
.
   
ContainsFlag
   "
(
  " #

SelectMode
  # -
.
  - .
	InputTool
  . 7
)
  7 8
&&
  9 ;
m_IsEditing
  < G
)
  G H
{
ÀÀ 
SetIsEditing
ÃÃ 
(
ÃÃ 
false
ÃÃ "
)
ÃÃ" #
;
ÃÃ# $
Repaint
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
}
ŒŒ 
}
œœ 	
BezierPoint
—— 
DoBezierPointGUI
—— $
(
——$ %
BezierPoint
——% 0
point
——1 6
)
——6 7
{
““ 	
Vector3
”” 
pos
”” 
=
”” 
point
”” 
.
””  
position
””  (
,
””( )
tin
””* -
=
””. /
point
””0 5
.
””5 6
	tangentIn
””6 ?
,
””? @
tout
””A E
=
””F G
point
””H M
.
””M N

tangentOut
””N X
;
””X Y
bool
’’ 
wasInWideMode
’’ 
=
’’  
EditorGUIUtility
’’! 1
.
’’1 2
wideMode
’’2 :
;
’’: ;
float
÷÷ 

labelWidth
÷÷ 
=
÷÷ 
EditorGUIUtility
÷÷ /
.
÷÷/ 0

labelWidth
÷÷0 :
;
÷÷: ;
EditorGUIUtility
◊◊ 
.
◊◊ 
wideMode
◊◊ %
=
◊◊& '
true
◊◊( ,
;
◊◊, -
EditorGUIUtility
ÿÿ 
.
ÿÿ 

labelWidth
ÿÿ '
=
ÿÿ( )
EditorGUIUtility
ÿÿ* :
.
ÿÿ: ;
currentViewWidth
ÿÿ; K
/
ÿÿL M
$num
ÿÿN P
;
ÿÿP Q
	EditorGUI
⁄⁄ 
.
⁄⁄ 
BeginChangeCheck
⁄⁄ &
(
⁄⁄& '
)
⁄⁄' (
;
⁄⁄( )
pos
€€ 
=
€€ 
EditorGUILayout
€€ !
.
€€! "
Vector3Field
€€" .
(
€€. /
$str
€€/ 9
,
€€9 :
pos
€€; >
)
€€> ?
;
€€? @
if
‹‹ 
(
‹‹ 
	EditorGUI
‹‹ 
.
‹‹ 
EndChangeCheck
‹‹ (
(
‹‹( )
)
‹‹) *
)
‹‹* +
point
›› 
.
›› 
SetPosition
›› !
(
››! "
pos
››" %
)
››% &
;
››& '
	EditorGUI
ﬂﬂ 
.
ﬂﬂ 
BeginChangeCheck
ﬂﬂ &
(
ﬂﬂ& '
)
ﬂﬂ' (
;
ﬂﬂ( )
tin
‡‡ 
=
‡‡ 
EditorGUILayout
‡‡ !
.
‡‡! "
Vector3Field
‡‡" .
(
‡‡. /
$str
‡‡/ 8
,
‡‡8 9
tin
‡‡: =
)
‡‡= >
;
‡‡> ?
if
·· 
(
·· 
	EditorGUI
·· 
.
·· 
EndChangeCheck
·· (
(
··( )
)
··) *
)
··* +
point
‚‚ 
.
‚‚ 
SetTangentIn
‚‚ "
(
‚‚" #
tin
‚‚# &
,
‚‚& '
m_TangentMode
‚‚( 5
)
‚‚5 6
;
‚‚6 7
Rect
„„ 
r
„„ 
=
„„ 
GUILayoutUtility
„„ %
.
„„% &
GetLastRect
„„& 1
(
„„1 2
)
„„2 3
;
„„3 4
r
‰‰ 
.
‰‰ 
x
‰‰ 
+=
‰‰ 
EditorGUIUtility
‰‰ #
.
‰‰# $

labelWidth
‰‰$ .
-
‰‰/ 0
$num
‰‰1 3
;
‰‰3 4
GUI
ÂÂ 
.
ÂÂ 
color
ÂÂ 
=
ÂÂ 
Color
ÂÂ 
.
ÂÂ 
blue
ÂÂ "
;
ÂÂ" #
GUI
ÊÊ 
.
ÊÊ 
Label
ÊÊ 
(
ÊÊ 
r
ÊÊ 
,
ÊÊ 
$str
ÊÊ !
)
ÊÊ! "
;
ÊÊ" #
GUI
ÁÁ 
.
ÁÁ 
color
ÁÁ 
=
ÁÁ 
Color
ÁÁ 
.
ÁÁ 
white
ÁÁ #
;
ÁÁ# $
	EditorGUI
ÈÈ 
.
ÈÈ 
BeginChangeCheck
ÈÈ &
(
ÈÈ& '
)
ÈÈ' (
;
ÈÈ( )
tout
ÍÍ 
=
ÍÍ 
EditorGUILayout
ÍÍ "
.
ÍÍ" #
Vector3Field
ÍÍ# /
(
ÍÍ/ 0
$str
ÍÍ0 :
,
ÍÍ: ;
tout
ÍÍ< @
)
ÍÍ@ A
;
ÍÍA B
if
ÎÎ 
(
ÎÎ 
	EditorGUI
ÎÎ 
.
ÎÎ 
EndChangeCheck
ÎÎ (
(
ÎÎ( )
)
ÎÎ) *
)
ÎÎ* +
point
ÏÏ 
.
ÏÏ 
SetTangentOut
ÏÏ #
(
ÏÏ# $
tout
ÏÏ$ (
,
ÏÏ( )
m_TangentMode
ÏÏ* 7
)
ÏÏ7 8
;
ÏÏ8 9
r
ÌÌ 
=
ÌÌ 
GUILayoutUtility
ÌÌ  
.
ÌÌ  !
GetLastRect
ÌÌ! ,
(
ÌÌ, -
)
ÌÌ- .
;
ÌÌ. /
r
ÓÓ 
.
ÓÓ 
x
ÓÓ 
+=
ÓÓ 
EditorGUIUtility
ÓÓ #
.
ÓÓ# $

labelWidth
ÓÓ$ .
-
ÓÓ/ 0
$num
ÓÓ1 3
;
ÓÓ3 4
GUI
ÔÔ 
.
ÔÔ 
color
ÔÔ 
=
ÔÔ 
Color
ÔÔ 
.
ÔÔ 
red
ÔÔ !
;
ÔÔ! "
GUI
 
.
 
Label
 
(
 
r
 
,
 
$str
 !
)
! "
;
" #
GUI
ÒÒ 
.
ÒÒ 
color
ÒÒ 
=
ÒÒ 
Color
ÒÒ 
.
ÒÒ 
white
ÒÒ #
;
ÒÒ# $
Vector3
ÛÛ 
euler
ÛÛ 
=
ÛÛ 
point
ÛÛ !
.
ÛÛ! "
rotation
ÛÛ" *
.
ÛÛ* +
eulerAngles
ÛÛ+ 6
;
ÛÛ6 7
euler
ÙÙ 
=
ÙÙ 
EditorGUILayout
ÙÙ #
.
ÙÙ# $
Vector3Field
ÙÙ$ 0
(
ÙÙ0 1
$str
ÙÙ1 ;
,
ÙÙ; <
euler
ÙÙ= B
)
ÙÙB C
;
ÙÙC D
point
ıı 
.
ıı 
rotation
ıı 
=
ıı 

Quaternion
ıı '
.
ıı' (
Euler
ıı( -
(
ıı- .
euler
ıı. 3
)
ıı3 4
;
ıı4 5
EditorGUIUtility
˜˜ 
.
˜˜ 

labelWidth
˜˜ '
=
˜˜( )

labelWidth
˜˜* 4
;
˜˜4 5
EditorGUIUtility
¯¯ 
.
¯¯ 
wideMode
¯¯ %
=
¯¯& '
wasInWideMode
¯¯( 5
;
¯¯5 6
return
˙˙ 
point
˙˙ 
;
˙˙ 
}
˚˚ 	
void
˝˝ 
SetIsEditing
˝˝ 
(
˝˝ 
bool
˝˝ 
	isEditing
˝˝ (
)
˝˝( )
{
˛˛ 	

GUIUtility
ˇˇ 
.
ˇˇ 

hotControl
ˇˇ !
=
ˇˇ" #
$num
ˇˇ$ %
;
ˇˇ% &
if
ÅÅ 
(
ÅÅ 
	isEditing
ÅÅ 
&&
ÅÅ 
!
ÅÅ 
m_IsEditing
ÅÅ )
)
ÅÅ) *
{
ÇÇ 
if
ÉÉ 
(
ÉÉ 
ProBuilderEditor
ÉÉ $
.
ÉÉ$ %
instance
ÉÉ% -
!=
ÉÉ. 0
null
ÉÉ1 5
)
ÉÉ5 6
ProBuilderEditor
ÑÑ $
.
ÑÑ$ %
instance
ÑÑ% -
.
ÑÑ- .#
ClearElementSelection
ÑÑ. C
(
ÑÑC D
)
ÑÑD E
;
ÑÑE F
UndoUtility
ÜÜ 
.
ÜÜ 
RecordObject
ÜÜ (
(
ÜÜ( )
m_Target
ÜÜ) 1
,
ÜÜ1 2
$str
ÜÜ3 F
)
ÜÜF G
;
ÜÜG H
UndoUtility
áá 
.
áá 
RecordObject
áá (
(
áá( )
m_Target
áá) 1
.
áá1 2
mesh
áá2 6
,
áá6 7
$str
áá8 K
)
ááK L
;
ááL M

UpdateMesh
ââ 
(
ââ 
true
ââ 
)
ââ  
;
ââ  !
}
ää 
m_Target
åå 
.
åå 
	isEditing
åå 
=
åå  
	isEditing
åå! *
;
åå* +
if
éé 
(
éé 
m_Target
éé 
.
éé 
	isEditing
éé "
)
éé" #
ProBuilderEditor
èè  
.
èè  !

selectMode
èè! +
|=
èè, .

SelectMode
èè/ 9
.
èè9 :
	InputTool
èè: C
;
èèC D
else
êê 
ProBuilderEditor
ëë  
.
ëë  !

selectMode
ëë! +
&=
ëë, .
~
ëë/ 0

SelectMode
ëë0 :
.
ëë: ;
	InputTool
ëë; D
;
ëëD E
if
ìì 
(
ìì 
m_Target
ìì 
.
ìì 
	isEditing
ìì "
)
ìì" #
{
îî 
Tools
ïï 
.
ïï 
current
ïï 
=
ïï 
Tool
ïï  $
.
ïï$ %
None
ïï% )
;
ïï) *!
UpdateControlPoints
ññ #
(
ññ# $
)
ññ$ %
;
ññ% &
}
óó 
}
òò 	
public
öö 
override
öö 
void
öö 
OnInspectorGUI
öö +
(
öö+ ,
)
öö, -
{
õõ 	
if
úú 
(
úú 
!
úú 
m_IsEditing
úú 
)
úú 
{
ùù 
if
ûû 
(
ûû 
	GUILayout
ûû 
.
ûû 
Button
ûû $
(
ûû$ %
$str
ûû% 8
)
ûû8 9
)
ûû9 :
SetIsEditing
üü  
(
üü  !
true
üü! %
)
üü% &
;
üü& '
EditorGUILayout
°° 
.
°°  
HelpBox
°°  '
(
°°' (
$str°°( Ω
,°°Ω æ
MessageType°°ø  
.°°  À
Warning°°À “
)°°“ ”
;°°” ‘
return
££ 
;
££ 
}
§§ 
if
¶¶ 
(
¶¶ 
	GUILayout
¶¶ 
.
¶¶ 
Button
¶¶  
(
¶¶  !
$str
¶¶! 7
,
¶¶7 8
UI
¶¶9 ;
.
¶¶; <
EditorGUIUtility
¶¶< L
.
¶¶L M
GetActiveStyle
¶¶M [
(
¶¶[ \
$str
¶¶\ d
)
¶¶d e
)
¶¶e f
)
¶¶f g
SetIsEditing
ßß 
(
ßß 
false
ßß "
)
ßß" #
;
ßß# $
Event
©© 
e
©© 
=
©© 
Event
©© 
.
©© 
current
©© #
;
©©# $
if
´´ 
(
´´ 

m_IsMoving
´´ 
)
´´ 
{
¨¨ 
if
≠≠ 
(
≠≠ 
e
≠≠ 
.
≠≠ 
type
≠≠ 
==
≠≠ 
	EventType
≠≠ '
.
≠≠' (
Ignore
≠≠( .
||
≠≠/ 1
e
ÆÆ 
.
ÆÆ 
type
ÆÆ 
==
ÆÆ 
	EventType
ÆÆ '
.
ÆÆ' (
MouseUp
ÆÆ( /
)
ÆÆ/ 0(
OnFinishVertexModification
ØØ .
(
ØØ. /
)
ØØ/ 0
;
ØØ0 1
}
∞∞ 
	EditorGUI
≤≤ 
.
≤≤ 
BeginChangeCheck
≤≤ &
(
≤≤& '
)
≤≤' (
;
≤≤( )
bool
¥¥ 
handleIsValid
¥¥ 
=
¥¥  
(
¥¥! "
m_currentHandle
¥¥" 1
>
¥¥2 3
-
¥¥4 5
$num
¥¥5 6
&&
¥¥7 9
m_currentHandle
¥¥: I
<
¥¥J K
m_Points
¥¥L T
.
¥¥T U
Count
¥¥U Z
)
¥¥Z [
;
¥¥[ \
BezierPoint
∂∂ 
inspectorPoint
∂∂ &
=
∂∂' (
handleIsValid
∂∂) 6
?
∂∂7 8
m_Points
∑∑ 
[
∑∑ 
m_currentHandle
∑∑ (
]
∑∑( )
:
∑∑* +
new
∏∏ 
BezierPoint
∏∏ 
(
∏∏  
Vector3_Zero
∏∏  ,
,
∏∏, -
Vector3_Backward
∏∏. >
,
∏∏> ?
Vector3_Forward
∏∏@ O
,
∏∏O P

Quaternion
∏∏Q [
.
∏∏[ \
identity
∏∏\ d
)
∏∏d e
;
∏∏e f
inspectorPoint
∫∫ 
=
∫∫ 
DoBezierPointGUI
∫∫ -
(
∫∫- .
inspectorPoint
∫∫. <
)
∫∫< =
;
∫∫= >
if
ºº 
(
ºº 
handleIsValid
ºº 
&&
ºº  
	EditorGUI
ºº! *
.
ºº* +
EndChangeCheck
ºº+ 9
(
ºº9 :
)
ºº: ;
)
ºº; <
{
ΩΩ 
if
ææ 
(
ææ 
!
ææ 

m_IsMoving
ææ 
)
ææ  '
OnBeginVertexModification
øø -
(
øø- .
)
øø. /
;
øø/ 0
m_Points
¡¡ 
[
¡¡ 
m_currentHandle
¡¡ (
]
¡¡( )
=
¡¡* +
inspectorPoint
¡¡, :
;
¡¡: ;

UpdateMesh
¬¬ 
(
¬¬ 
false
¬¬  
)
¬¬  !
;
¬¬! "
}
√√ 
	EditorGUI
≈≈ 
.
≈≈ 
BeginChangeCheck
≈≈ &
(
≈≈& '
)
≈≈' (
;
≈≈( )
if
«« 
(
«« 
	GUILayout
«« 
.
«« 
Button
««  
(
««  !
$str
««! /
)
««/ 0
)
««0 1
{
»» 
UndoUtility
…… 
.
…… 
RecordObject
…… (
(
……( )
m_Target
……) 1
,
……1 2
$str
……3 O
)
……O P
;
……P Q
m_Points
   
.
   
Clear
   
(
   
)
    
;
    !

UpdateMesh
ÀÀ 
(
ÀÀ 
true
ÀÀ 
)
ÀÀ  
;
ÀÀ  !
}
ÃÃ 
if
ŒŒ 
(
ŒŒ 
	GUILayout
ŒŒ 
.
ŒŒ 
Button
ŒŒ  
(
ŒŒ  !
$str
ŒŒ! ,
)
ŒŒ, -
)
ŒŒ- .
{
œœ 
UndoUtility
–– 
.
–– 
RecordObject
–– (
(
––( )
m_Target
––) 1
,
––1 2
$str
––3 L
)
––L M
;
––M N
if
““ 
(
““ 
m_Points
““ 
.
““ 
Count
““ "
>
““# $
$num
““% &
)
““& '
{
”” 
m_Points
‘‘ 
.
‘‘ 
Add
‘‘  
(
‘‘  !
new
‘‘! $
BezierPoint
‘‘% 0
(
‘‘0 1
m_Points
‘‘1 9
[
‘‘9 :
m_Points
‘‘: B
.
‘‘B C
Count
‘‘C H
-
‘‘I J
$num
‘‘K L
]
‘‘L M
.
‘‘M N
position
‘‘N V
,
‘‘V W
m_Points
’’ $
[
’’$ %
m_Points
’’% -
.
’’- .
Count
’’. 3
-
’’4 5
$num
’’6 7
]
’’7 8
.
’’8 9
	tangentIn
’’9 B
,
’’B C
m_Points
÷÷ $
[
÷÷$ %
m_Points
÷÷% -
.
÷÷- .
Count
÷÷. 3
-
÷÷4 5
$num
÷÷6 7
]
÷÷7 8
.
÷÷8 9

tangentOut
÷÷9 C
,
÷÷C D

Quaternion
◊◊ &
.
◊◊& '
identity
◊◊' /
)
◊◊/ 0
)
◊◊0 1
;
◊◊1 2

UpdateMesh
ÿÿ 
(
ÿÿ 
true
ÿÿ #
)
ÿÿ# $
;
ÿÿ$ %
}
ŸŸ 
else
⁄⁄ 
{
€€ 
m_Target
‹‹ 
.
‹‹ 
Init
‹‹ !
(
‹‹! "
)
‹‹" #
;
‹‹# $
}
›› 
m_currentHandle
ﬂﬂ 
=
ﬂﬂ  !
(
ﬂﬂ" #
BezierHandle
ﬂﬂ# /
)
ﬂﬂ/ 0
(
ﬂﬂ0 1
m_Points
ﬂﬂ1 9
.
ﬂﬂ9 :
Count
ﬂﬂ: ?
-
ﬂﬂ@ A
$num
ﬂﬂB C
)
ﬂﬂC D
;
ﬂﬂD E
	SceneView
·· 
.
·· 

RepaintAll
·· $
(
··$ %
)
··% &
;
··& '
}
‚‚ 
	GUILayout
‰‰ 
.
‰‰ 
BeginHorizontal
‰‰ %
(
‰‰% &
)
‰‰& '
;
‰‰' (
	GUILayout
ÂÂ 
.
ÂÂ 
FlexibleSpace
ÂÂ #
(
ÂÂ# $
)
ÂÂ$ %
;
ÂÂ% &
m_TangentMode
ÊÊ 
=
ÊÊ 
(
ÊÊ 
BezierTangentMode
ÊÊ .
)
ÊÊ. /
	GUILayout
ÊÊ/ 8
.
ÊÊ8 9
Toolbar
ÊÊ9 @
(
ÊÊ@ A
(
ÊÊA B
int
ÊÊB E
)
ÊÊE F
m_TangentMode
ÊÊF S
,
ÊÊS T 
s_TangentModeIcons
ÊÊU g
,
ÊÊg h
commandStyle
ÊÊi u
)
ÊÊu v
;
ÊÊv w
	GUILayout
ÁÁ 
.
ÁÁ 
FlexibleSpace
ÁÁ #
(
ÁÁ# $
)
ÁÁ$ %
;
ÁÁ% &
	GUILayout
ËË 
.
ËË 
EndHorizontal
ËË #
(
ËË# $
)
ËË$ %
;
ËË% &
m_CloseLoop
ÍÍ 
=
ÍÍ 
EditorGUILayout
ÍÍ )
.
ÍÍ) *
Toggle
ÍÍ* 0
(
ÍÍ0 1
$str
ÍÍ1 =
,
ÍÍ= >
m_CloseLoop
ÍÍ? J
)
ÍÍJ K
;
ÍÍK L
m_Smooth
ÎÎ 
=
ÎÎ 
EditorGUILayout
ÎÎ &
.
ÎÎ& '
Toggle
ÎÎ' -
(
ÎÎ- .
$str
ÎÎ. 6
,
ÎÎ6 7
m_Smooth
ÎÎ8 @
)
ÎÎ@ A
;
ÎÎA B
m_Radius
ÏÏ 
=
ÏÏ 
Mathf
ÏÏ 
.
ÏÏ 
Max
ÏÏ  
(
ÏÏ  !
$num
ÏÏ! &
,
ÏÏ& '
EditorGUILayout
ÏÏ( 7
.
ÏÏ7 8

FloatField
ÏÏ8 B
(
ÏÏB C
$str
ÏÏC K
,
ÏÏK L
m_Radius
ÏÏM U
)
ÏÏU V
)
ÏÏV W
;
ÏÏW X
m_Rows
ÌÌ 
=
ÌÌ 
Math
ÌÌ 
.
ÌÌ 
Clamp
ÌÌ 
(
ÌÌ  
EditorGUILayout
ÌÌ  /
.
ÌÌ/ 0
IntField
ÌÌ0 8
(
ÌÌ8 9
$str
ÌÌ9 ?
,
ÌÌ? @
m_Rows
ÌÌA G
)
ÌÌG H
,
ÌÌH I
$num
ÌÌJ K
,
ÌÌK L
$num
ÌÌM P
)
ÌÌP Q
;
ÌÌQ R
	m_Columns
ÓÓ 
=
ÓÓ 
Math
ÓÓ 
.
ÓÓ 
Clamp
ÓÓ "
(
ÓÓ" #
EditorGUILayout
ÓÓ# 2
.
ÓÓ2 3
IntField
ÓÓ3 ;
(
ÓÓ; <
$str
ÓÓ< E
,
ÓÓE F
	m_Columns
ÓÓG P
)
ÓÓP Q
,
ÓÓQ R
$num
ÓÓS T
,
ÓÓT U
$num
ÓÓV Y
)
ÓÓY Z
;
ÓÓZ [
if
 
(
 
	EditorGUI
 
.
 
EndChangeCheck
 (
(
( )
)
) *
)
* +

UpdateMesh
ÒÒ 
(
ÒÒ 
true
ÒÒ 
)
ÒÒ  
;
ÒÒ  !
if
ÛÛ 
(
ÛÛ 
ProGridsInterface
ÛÛ !
.
ÛÛ! "
GetProGridsType
ÛÛ" 1
(
ÛÛ1 2
)
ÛÛ2 3
!=
ÛÛ4 6
null
ÛÛ7 ;
)
ÛÛ; <
s_SnapTangents
ÙÙ 
=
ÙÙ  
EditorGUILayout
ÙÙ! 0
.
ÙÙ0 1
Toggle
ÙÙ1 7
(
ÙÙ7 8
$str
ÙÙ8 G
,
ÙÙG H
s_SnapTangents
ÙÙI W
)
ÙÙW X
;
ÙÙX Y
}
ıı 	
void
˜˜ 

UpdateMesh
˜˜ 
(
˜˜ 
bool
˜˜  
vertexCountChanged
˜˜ /
)
˜˜/ 0
{
¯¯ 	
if
˘˘ 
(
˘˘ 
m_Target
˘˘ 
!=
˘˘ 
null
˘˘  
)
˘˘  !
{
˙˙ 
m_Target
˚˚ 
.
˚˚ 
Refresh
˚˚  
(
˚˚  !
)
˚˚! "
;
˚˚" #!
UpdateControlPoints
¸¸ #
(
¸¸# $
)
¸¸$ %
;
¸¸% &
ProBuilderEditor
˝˝  
.
˝˝  !
Refresh
˝˝! (
(
˝˝( ) 
vertexCountChanged
˝˝) ;
)
˝˝; <
;
˝˝< =
}
˛˛ 
}
ˇˇ 	
void
ÅÅ !
UpdateControlPoints
ÅÅ  
(
ÅÅ  !
)
ÅÅ! "
{
ÇÇ 	
m_ControlPoints
ÉÉ 
=
ÉÉ 
Spline
ÉÉ $
.
ÉÉ$ %
GetControlPoints
ÉÉ% 5
(
ÉÉ5 6
m_Points
ÉÉ6 >
,
ÉÉ> ?
	m_Columns
ÉÉ@ I
,
ÉÉI J
m_CloseLoop
ÉÉK V
,
ÉÉV W
null
ÉÉX \
)
ÉÉ\ ]
;
ÉÉ] ^
}
ÑÑ 	
void
ÜÜ 

OnSceneGUI
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 	
Event
àà 
e
àà 
=
àà 
Event
àà 
.
àà 
current
àà #
;
àà# $
bool
ää 
eventHasBeenUsed
ää !
=
ää" #
false
ää$ )
;
ää) *
if
åå 
(
åå 

m_IsMoving
åå 
)
åå 
{
çç 
if
éé 
(
éé 
e
éé 
.
éé 
type
éé 
==
éé 
	EventType
éé '
.
éé' (
Ignore
éé( .
||
éé/ 1
e
èè 
.
èè 
type
èè 
==
èè 
	EventType
èè '
.
èè' (
MouseUp
èè( /
)
èè/ 0
{
êê 
eventHasBeenUsed
ëë $
=
ëë% &
true
ëë' +
;
ëë+ ,(
OnFinishVertexModification
íí .
(
íí. /
)
íí/ 0
;
íí0 1
}
ìì 
}
îî 
bool
ññ 
sceneViewInUse
ññ 
=
ññ  !!
EditorHandleUtility
ññ" 5
.
ññ5 6
SceneViewInUse
ññ6 D
(
ññD E
e
ññE F
)
ññF G
;
ññG H
if
òò 
(
òò 
e
òò 
.
òò 
type
òò 
==
òò 
	EventType
òò #
.
òò# $
KeyDown
òò$ +
)
òò+ ,
{
ôô 
if
öö 
(
öö 
e
öö 
.
öö 
keyCode
öö 
==
öö  
KeyCode
öö! (
.
öö( )
	Backspace
öö) 2
&&
öö3 5
m_currentHandle
öö6 E
>
ööF G
-
ööH I
$num
ööI J
&&
ööK M
m_currentHandle
ööN ]
<
öö^ _
m_Points
öö` h
.
ööh i
Count
ööi n
)
öön o
{
õõ 
UndoUtility
úú 
.
úú  
RecordObject
úú  ,
(
úú, -
m_Target
úú- 5
,
úú5 6
$str
úú7 L
)
úúL M
;
úúM N
m_Points
ùù 
.
ùù 
RemoveAt
ùù %
(
ùù% &
m_currentHandle
ùù& 5
)
ùù5 6
;
ùù6 7

UpdateMesh
ûû 
(
ûû 
true
ûû #
)
ûû# $
;
ûû$ %
}
üü 
else
†† 
if
†† 
(
†† 
e
†† 
.
†† 
keyCode
†† "
==
††# %
KeyCode
††& -
.
††- .
Escape
††. 4
)
††4 5
{
°° 
SetIsEditing
¢¢  
(
¢¢  !
false
¢¢! &
)
¢¢& '
;
¢¢' (
}
££ 
}
§§ 
int
¶¶ 
count
¶¶ 
=
¶¶ 
m_Points
¶¶  
.
¶¶  !
Count
¶¶! &
;
¶¶& '
	Matrix4x4
®® 
handleMatrix
®® "
=
®®# $
Handles
®®% ,
.
®®, -
matrix
®®- 3
;
®®3 4
Handles
©© 
.
©© 
matrix
©© 
=
©© 
m_Target
©© %
.
©©% &
	transform
©©& /
.
©©/ 0 
localToWorldMatrix
©©0 B
;
©©B C
	EditorGUI
´´ 
.
´´ 
BeginChangeCheck
´´ &
(
´´& '
)
´´' (
;
´´( )
for
≠≠ 
(
≠≠ 
int
≠≠ 
index
≠≠ 
=
≠≠ 
$num
≠≠ 
;
≠≠ 
index
≠≠  %
<
≠≠& '
count
≠≠( -
;
≠≠- .
index
≠≠/ 4
++
≠≠4 6
)
≠≠6 7
{
ÆÆ 
if
ØØ 
(
ØØ 
index
ØØ 
<
ØØ 
count
ØØ !
-
ØØ" #
$num
ØØ$ %
||
ØØ& (
m_CloseLoop
ØØ) 4
)
ØØ4 5
{
∞∞ 
Handles
±± 
.
±± 

DrawBezier
±± &
(
±±& '
m_Points
±±' /
[
±±/ 0
index
±±0 5
]
±±5 6
.
±±6 7
position
±±7 ?
,
±±? @
m_Points
≤≤  
[
≤≤  !
(
≤≤! "
index
≤≤" '
+
≤≤( )
$num
≤≤* +
)
≤≤+ ,
%
≤≤- .
count
≤≤/ 4
]
≤≤4 5
.
≤≤5 6
position
≤≤6 >
,
≤≤> ?
m_Points
≥≥  
[
≥≥  !
index
≥≥! &
]
≥≥& '
.
≥≥' (

tangentOut
≥≥( 2
,
≥≥2 3
m_Points
¥¥  
[
¥¥  !
(
¥¥! "
index
¥¥" '
+
¥¥( )
$num
¥¥* +
)
¥¥+ ,
%
¥¥- .
count
¥¥/ 4
]
¥¥4 5
.
¥¥5 6
	tangentIn
¥¥6 ?
,
¥¥? @
Color
µµ 
.
µµ 
green
µµ #
,
µµ# $
EditorGUIUtility
∂∂ (
.
∂∂( )
whiteTexture
∂∂) 5
,
∂∂5 6
$num
∑∑ 
)
∑∑ 
;
∑∑ 
}
∏∏ 
if
∫∫ 
(
∫∫ 
!
∫∫ 
m_IsEditing
∫∫  
)
∫∫  !
continue
ªª 
;
ªª 
if
ææ 
(
ææ 
m_currentHandle
ææ #
==
ææ$ &
index
ææ' ,
)
ææ, -
{
øø 
BezierPoint
¿¿ 
point
¿¿  %
=
¿¿& '
m_Points
¿¿( 0
[
¿¿0 1
index
¿¿1 6
]
¿¿6 7
;
¿¿7 8
if
¬¬ 
(
¬¬ 
!
¬¬ 
m_currentHandle
¬¬ (
.
¬¬( )
	isTangent
¬¬) 2
)
¬¬2 3
{
√√ 
Vector3
ƒƒ 
prev
ƒƒ  $
=
ƒƒ% &
point
ƒƒ' ,
.
ƒƒ, -
position
ƒƒ- 5
;
ƒƒ5 6
prev
∆∆ 
=
∆∆ 
Handles
∆∆ &
.
∆∆& '
PositionHandle
∆∆' 5
(
∆∆5 6
prev
∆∆6 :
,
∆∆: ;

Quaternion
∆∆< F
.
∆∆F G
identity
∆∆G O
)
∆∆O P
;
∆∆P Q
if
»» 
(
»» 
!
»» 
Math
»» !
.
»»! "
Approx3
»»" )
(
»») *
prev
»»* .
,
»». /
point
»»0 5
.
»»5 6
position
»»6 >
)
»»> ?
)
»»? @
{
…… 
if
   
(
    
!
    !

m_IsMoving
  ! +
)
  + ,'
OnBeginVertexModification
ÀÀ  9
(
ÀÀ9 :
)
ÀÀ: ;
;
ÀÀ; <
prev
ÕÕ  
=
ÕÕ! "
ProGridsInterface
ÕÕ# 4
.
ÕÕ4 5
ProGridsSnap
ÕÕ5 A
(
ÕÕA B
prev
ÕÕB F
)
ÕÕF G
;
ÕÕG H
Vector3
œœ #
dir
œœ$ '
=
œœ( )
prev
œœ* .
-
œœ/ 0
point
œœ1 6
.
œœ6 7
position
œœ7 ?
;
œœ? @
point
–– !
.
––! "
position
––" *
=
––+ ,
prev
––- 1
;
––1 2
point
—— !
.
——! "
	tangentIn
——" +
+=
——, .
dir
——/ 2
;
——2 3
point
““ !
.
““! "

tangentOut
““" ,
+=
““- /
dir
““0 3
;
““3 4
}
”” 
int
÷÷ 

prev_index
÷÷ &
=
÷÷' (
index
÷÷) .
>
÷÷/ 0
$num
÷÷1 2
?
÷÷3 4
index
÷÷5 :
-
÷÷; <
$num
÷÷= >
:
÷÷? @
(
÷÷A B
m_CloseLoop
÷÷B M
?
÷÷N O
count
÷÷P U
-
÷÷V W
$num
÷÷X Y
:
÷÷Z [
-
÷÷\ ]
$num
÷÷] ^
)
÷÷^ _
;
÷÷_ `
int
◊◊ 

next_index
◊◊ &
=
◊◊' (
index
◊◊) .
<
◊◊/ 0
count
◊◊1 6
-
◊◊7 8
$num
◊◊9 :
?
◊◊; <
index
◊◊= B
+
◊◊C D
$num
◊◊E F
:
◊◊G H
(
◊◊I J
m_CloseLoop
◊◊J U
?
◊◊V W
$num
◊◊X Y
:
◊◊Z [
-
◊◊\ ]
$num
◊◊] ^
)
◊◊^ _
;
◊◊_ `
Vector3
ÿÿ 
rd
ÿÿ  "
=
ÿÿ# $
BezierPoint
ÿÿ% 0
.
ÿÿ0 1
GetLookDirection
ÿÿ1 A
(
ÿÿA B
m_Points
ÿÿB J
,
ÿÿJ K
index
ÿÿL Q
,
ÿÿQ R

prev_index
ÿÿS ]
,
ÿÿ] ^

next_index
ÿÿ_ i
)
ÿÿi j
;
ÿÿj k

Quaternion
⁄⁄ "
look
⁄⁄# '
=
⁄⁄( )

Quaternion
⁄⁄* 4
.
⁄⁄4 5
LookRotation
⁄⁄5 A
(
⁄⁄A B
rd
⁄⁄B D
)
⁄⁄D E
;
⁄⁄E F
float
€€ 
size
€€ "
=
€€# $
HandleUtility
€€% 2
.
€€2 3
GetHandleSize
€€3 @
(
€€@ A
point
€€A F
.
€€F G
position
€€G O
)
€€O P
;
€€P Q
	Matrix4x4
‹‹ !
pm
‹‹" $
=
‹‹% &
Handles
‹‹' .
.
‹‹. /
matrix
‹‹/ 5
;
‹‹5 6
Handles
›› 
.
››  
matrix
››  &
=
››' (
pm
››) +
*
››, -
	Matrix4x4
››. 7
.
››7 8
TRS
››8 ;
(
››; <
point
››< A
.
››A B
position
››B J
,
››J K
look
››L P
,
››P Q
Vector3
››R Y
.
››Y Z
one
››Z ]
)
››] ^
;
››^ _
point
ﬁﬁ 
.
ﬁﬁ 
rotation
ﬁﬁ &
=
ﬁﬁ' (
Handles
ﬁﬁ) 0
.
ﬁﬁ0 1
Disc
ﬁﬁ1 5
(
ﬁﬁ5 6
point
ﬁﬁ6 ;
.
ﬁﬁ; <
rotation
ﬁﬁ< D
,
ﬁﬁD E
Vector3
ﬁﬁF M
.
ﬁﬁM N
zero
ﬁﬁN R
,
ﬁﬁR S
Vector3
ﬁﬁT [
.
ﬁﬁ[ \
forward
ﬁﬁ\ c
,
ﬁﬁc d
size
ﬁﬁe i
,
ﬁﬁi j
false
ﬁﬁk p
,
ﬁﬁp q
$num
ﬁﬁr t
)
ﬁﬁt u
;
ﬁﬁu v
Handles
ﬂﬂ 
.
ﬂﬂ  
matrix
ﬂﬂ  &
=
ﬂﬂ' (
pm
ﬂﬂ) +
;
ﬂﬂ+ ,
}
‡‡ 
else
·· 
{
‚‚ 
Handles
„„ 
.
„„  
color
„„  %
=
„„& '&
bezierTangentHandleColor
„„( @
;
„„@ A
if
ÂÂ 
(
ÂÂ 
m_currentHandle
ÂÂ +
.
ÂÂ+ ,
tangent
ÂÂ, 3
==
ÂÂ4 6$
BezierTangentDirection
ÂÂ7 M
.
ÂÂM N
In
ÂÂN P
&&
ÂÂQ S
(
ÂÂT U
m_CloseLoop
ÂÂU `
||
ÂÂa c
index
ÂÂd i
>
ÂÂj k
$num
ÂÂl m
)
ÂÂm n
)
ÂÂn o
{
ÊÊ 
	EditorGUI
ÁÁ %
.
ÁÁ% &
BeginChangeCheck
ÁÁ& 6
(
ÁÁ6 7
)
ÁÁ7 8
;
ÁÁ8 9
point
ËË !
.
ËË! "
	tangentIn
ËË" +
=
ËË, -
Handles
ËË. 5
.
ËË5 6
PositionHandle
ËË6 D
(
ËËD E
point
ËËE J
.
ËËJ K
	tangentIn
ËËK T
,
ËËT U

Quaternion
ËËV `
.
ËË` a
identity
ËËa i
)
ËËi j
;
ËËj k
if
ÈÈ 
(
ÈÈ  
	EditorGUI
ÈÈ  )
.
ÈÈ) *
EndChangeCheck
ÈÈ* 8
(
ÈÈ8 9
)
ÈÈ9 :
)
ÈÈ: ;
{
ÍÍ 
if
ÎÎ  "
(
ÎÎ# $
!
ÎÎ$ %

m_IsMoving
ÎÎ% /
)
ÎÎ/ 0'
OnBeginVertexModification
ÏÏ$ =
(
ÏÏ= >
)
ÏÏ> ?
;
ÏÏ? @
if
ÓÓ  "
(
ÓÓ# $
s_SnapTangents
ÓÓ$ 2
)
ÓÓ2 3
point
ÔÔ$ )
.
ÔÔ) *
	tangentIn
ÔÔ* 3
=
ÔÔ4 5
ProGridsInterface
ÔÔ6 G
.
ÔÔG H
ProGridsSnap
ÔÔH T
(
ÔÔT U
point
ÔÔU Z
.
ÔÔZ [
	tangentIn
ÔÔ[ d
)
ÔÔd e
;
ÔÔe f
point
ÒÒ  %
.
ÒÒ% & 
EnforceTangentMode
ÒÒ& 8
(
ÒÒ8 9$
BezierTangentDirection
ÒÒ9 O
.
ÒÒO P
In
ÒÒP R
,
ÒÒR S
m_TangentMode
ÒÒT a
)
ÒÒa b
;
ÒÒb c
}
ÚÚ 
Handles
ÛÛ #
.
ÛÛ# $
color
ÛÛ$ )
=
ÛÛ* +
Color
ÛÛ, 1
.
ÛÛ1 2
blue
ÛÛ2 6
;
ÛÛ6 7
Handles
ÙÙ #
.
ÙÙ# $
DrawLine
ÙÙ$ ,
(
ÙÙ, -
m_Points
ÙÙ- 5
[
ÙÙ5 6
index
ÙÙ6 ;
]
ÙÙ; <
.
ÙÙ< =
position
ÙÙ= E
,
ÙÙE F
m_Points
ÙÙG O
[
ÙÙO P
index
ÙÙP U
]
ÙÙU V
.
ÙÙV W
	tangentIn
ÙÙW `
)
ÙÙ` a
;
ÙÙa b
}
ıı 
if
˜˜ 
(
˜˜ 
m_currentHandle
˜˜ +
.
˜˜+ ,
tangent
˜˜, 3
==
˜˜4 6$
BezierTangentDirection
˜˜7 M
.
˜˜M N
Out
˜˜N Q
&&
˜˜R T
(
˜˜U V
m_CloseLoop
˜˜V a
||
˜˜b d
index
˜˜e j
<
˜˜k l
count
˜˜m r
-
˜˜s t
$num
˜˜u v
)
˜˜v w
)
˜˜w x
{
¯¯ 
	EditorGUI
˘˘ %
.
˘˘% &
BeginChangeCheck
˘˘& 6
(
˘˘6 7
)
˘˘7 8
;
˘˘8 9
point
˙˙ !
.
˙˙! "

tangentOut
˙˙" ,
=
˙˙- .
Handles
˙˙/ 6
.
˙˙6 7
PositionHandle
˙˙7 E
(
˙˙E F
point
˙˙F K
.
˙˙K L

tangentOut
˙˙L V
,
˙˙V W

Quaternion
˙˙X b
.
˙˙b c
identity
˙˙c k
)
˙˙k l
;
˙˙l m
if
˚˚ 
(
˚˚  
	EditorGUI
˚˚  )
.
˚˚) *
EndChangeCheck
˚˚* 8
(
˚˚8 9
)
˚˚9 :
)
˚˚: ;
{
¸¸ 
if
˝˝  "
(
˝˝# $
!
˝˝$ %

m_IsMoving
˝˝% /
)
˝˝/ 0'
OnBeginVertexModification
˛˛$ =
(
˛˛= >
)
˛˛> ?
;
˛˛? @
if
ÄÄ  "
(
ÄÄ# $
s_SnapTangents
ÄÄ$ 2
)
ÄÄ2 3
point
ÅÅ$ )
.
ÅÅ) *

tangentOut
ÅÅ* 4
=
ÅÅ5 6
ProGridsInterface
ÅÅ7 H
.
ÅÅH I
ProGridsSnap
ÅÅI U
(
ÅÅU V
point
ÅÅV [
.
ÅÅ[ \

tangentOut
ÅÅ\ f
)
ÅÅf g
;
ÅÅg h
point
ÉÉ  %
.
ÉÉ% & 
EnforceTangentMode
ÉÉ& 8
(
ÉÉ8 9$
BezierTangentDirection
ÉÉ9 O
.
ÉÉO P
Out
ÉÉP S
,
ÉÉS T
m_TangentMode
ÉÉU b
)
ÉÉb c
;
ÉÉc d
}
ÑÑ 
Handles
ÖÖ #
.
ÖÖ# $
color
ÖÖ$ )
=
ÖÖ* +
Color
ÖÖ, 1
.
ÖÖ1 2
red
ÖÖ2 5
;
ÖÖ5 6
Handles
ÜÜ #
.
ÜÜ# $
DrawLine
ÜÜ$ ,
(
ÜÜ, -
m_Points
ÜÜ- 5
[
ÜÜ5 6
index
ÜÜ6 ;
]
ÜÜ; <
.
ÜÜ< =
position
ÜÜ= E
,
ÜÜE F
m_Points
ÜÜG O
[
ÜÜO P
index
ÜÜP U
]
ÜÜU V
.
ÜÜV W

tangentOut
ÜÜW a
)
ÜÜa b
;
ÜÜb c
}
áá 
}
àà 
m_Points
ää 
[
ää 
index
ää "
]
ää" #
=
ää$ %
point
ää& +
;
ää+ ,
}
ãã 
}
åå 
if
éé 
(
éé 
!
éé 
m_IsEditing
éé 
)
éé 
return
èè 
;
èè 
	EventType
ëë 
	eventType
ëë 
=
ëë  !
e
ëë" #
.
ëë# $
type
ëë$ (
;
ëë( )
if
ìì 
(
ìì 
!
ìì 
eventHasBeenUsed
ìì !
)
ìì! "
eventHasBeenUsed
îî  
=
îî! "
	eventType
îî# ,
==
îî- /
	EventType
îî0 9
.
îî9 :
Used
îî: >
;
îî> ?
for
ññ 
(
ññ 
int
ññ 
index
ññ 
=
ññ 
$num
ññ 
;
ññ 
index
ññ  %
<
ññ& '
count
ññ( -
;
ññ- .
index
ññ/ 4
++
ññ4 6
)
ññ6 7
{
óó 
Vector3
òò 
prev
òò 
;
òò 
BezierPoint
ôô 
point
ôô !
=
ôô" #
m_Points
ôô$ ,
[
ôô, -
index
ôô- 2
]
ôô2 3
;
ôô3 4
float
úú 
size
úú 
=
úú 
HandleUtility
úú *
.
úú* +
GetHandleSize
úú+ 8
(
úú8 9
point
úú9 >
.
úú> ?
position
úú? G
)
úúG H
*
úúI J
k_HandleSize
úúK W
;
úúW X
Handles
ùù 
.
ùù 
color
ùù 
=
ùù '
bezierPositionHandleColor
ùù  9
;
ùù9 :
if
üü 
(
üü 
m_currentHandle
üü #
==
üü$ &
index
üü' ,
&&
üü- /
!
üü0 1
m_currentHandle
üü1 @
.
üü@ A
	isTangent
üüA J
)
üüJ K
{
†† 
Handles
°° 
.
°° 
DotHandleCap
°° (
(
°°( )
$num
°°) *
,
°°* +
point
°°, 1
.
°°1 2
position
°°2 :
,
°°: ;

Quaternion
°°< F
.
°°F G
identity
°°G O
,
°°O P
size
°°Q U
,
°°U V
e
°°W X
.
°°X Y
type
°°Y ]
)
°°] ^
;
°°^ _
}
¢¢ 
else
££ 
{
§§ 
prev
•• 
=
•• 
point
••  
.
••  !
position
••! )
;
••) *
prev
¶¶ 
=
¶¶ 
Handles
¶¶ "
.
¶¶" #
FreeMoveHandle
¶¶# 1
(
¶¶1 2
prev
¶¶2 6
,
¶¶6 7

Quaternion
¶¶8 B
.
¶¶B C
identity
¶¶C K
,
¶¶K L
size
¶¶M Q
,
¶¶Q R
Vector3
¶¶S Z
.
¶¶Z [
zero
¶¶[ _
,
¶¶_ `
Handles
¶¶a h
.
¶¶h i
DotHandleCap
¶¶i u
)
¶¶u v
;
¶¶v w
if
ßß 
(
ßß 
!
ßß 
eventHasBeenUsed
ßß )
&&
ßß* ,
	eventType
ßß- 6
==
ßß7 9
	EventType
ßß: C
.
ßßC D
MouseUp
ßßD K
&&
ßßL N
e
ßßO P
.
ßßP Q
type
ßßQ U
==
ßßV X
	EventType
ßßY b
.
ßßb c
Used
ßßc g
)
ßßg h
{
®® 
eventHasBeenUsed
©© (
=
©©) *
true
©©+ /
;
©©/ 0
m_currentHandle
™™ '
=
™™( )
(
™™* +
BezierHandle
™™+ 7
)
™™7 8
index
™™8 =
;
™™= >
Repaint
´´ 
(
´´  
)
´´  !
;
´´! "
	SceneView
¨¨ !
.
¨¨! "

RepaintAll
¨¨" ,
(
¨¨, -
)
¨¨- .
;
¨¨. /
}
≠≠ 
else
ÆÆ 
if
ÆÆ 
(
ÆÆ 
!
ÆÆ 
Math
ÆÆ "
.
ÆÆ" #
Approx3
ÆÆ# *
(
ÆÆ* +
prev
ÆÆ+ /
,
ÆÆ/ 0
point
ÆÆ1 6
.
ÆÆ6 7
position
ÆÆ7 ?
)
ÆÆ? @
)
ÆÆ@ A
{
ØØ 
if
∞∞ 
(
∞∞ 
!
∞∞ 

m_IsMoving
∞∞ '
)
∞∞' ('
OnBeginVertexModification
±± 5
(
±±5 6
)
±±6 7
;
±±7 8
point
≥≥ 
.
≥≥ 
SetPosition
≥≥ )
(
≥≥) *
ProGridsInterface
≥≥* ;
.
≥≥; <
ProGridsSnap
≥≥< H
(
≥≥H I
prev
≥≥I M
)
≥≥M N
)
≥≥N O
;
≥≥O P
}
¥¥ 
}
µµ 
Handles
∏∏ 
.
∏∏ 
color
∏∏ 
=
∏∏ &
bezierTangentHandleColor
∏∏  8
;
∏∏8 9
if
ªª 
(
ªª 
m_CloseLoop
ªª 
||
ªª  "
index
ªª# (
>
ªª) *
$num
ªª+ ,
)
ªª, -
{
ºº 
size
ΩΩ 
=
ΩΩ 
HandleUtility
ΩΩ (
.
ΩΩ( )
GetHandleSize
ΩΩ) 6
(
ΩΩ6 7
point
ΩΩ7 <
.
ΩΩ< =
	tangentIn
ΩΩ= F
)
ΩΩF G
*
ΩΩH I
k_HandleSize
ΩΩJ V
;
ΩΩV W
Handles
ææ 
.
ææ 
DrawLine
ææ $
(
ææ$ %
point
ææ% *
.
ææ* +
position
ææ+ 3
,
ææ3 4
point
ææ5 :
.
ææ: ;
	tangentIn
ææ; D
)
ææD E
;
ææE F
if
¿¿ 
(
¿¿ 
index
¿¿ 
==
¿¿  
m_currentHandle
¿¿! 0
&&
¿¿1 3
m_currentHandle
¿¿4 C
.
¿¿C D
	isTangent
¿¿D M
&&
¿¿N P
m_currentHandle
¿¿Q `
.
¿¿` a
tangent
¿¿a h
==
¿¿i k%
BezierTangentDirection¿¿l Ç
.¿¿Ç É
In¿¿É Ö
)¿¿Ö Ü
{
¡¡ 
Handles
¬¬ 
.
¬¬  
DotHandleCap
¬¬  ,
(
¬¬, -
$num
¬¬- .
,
¬¬. /
point
¬¬0 5
.
¬¬5 6
	tangentIn
¬¬6 ?
,
¬¬? @

Quaternion
¬¬A K
.
¬¬K L
identity
¬¬L T
,
¬¬T U
size
¬¬V Z
,
¬¬Z [
e
¬¬\ ]
.
¬¬] ^
type
¬¬^ b
)
¬¬b c
;
¬¬c d
}
√√ 
else
ƒƒ 
{
≈≈ 
prev
∆∆ 
=
∆∆ 
point
∆∆ $
.
∆∆$ %
	tangentIn
∆∆% .
;
∆∆. /
prev
«« 
=
«« 
Handles
«« &
.
««& '
FreeMoveHandle
««' 5
(
««5 6
prev
««6 :
,
««: ;

Quaternion
««< F
.
««F G
identity
««G O
,
««O P
size
««Q U
,
««U V
Vector3
««W ^
.
««^ _
zero
««_ c
,
««c d
Handles
««e l
.
««l m
DotHandleCap
««m y
)
««y z
;
««z {
if
…… 
(
…… 
!
…… 
eventHasBeenUsed
…… -
&&
……. 0
	eventType
……1 :
==
……; =
	EventType
……> G
.
……G H
MouseUp
……H O
&&
……P R
e
……S T
.
……T U
type
……U Y
==
……Z \
	EventType
……] f
.
……f g
Used
……g k
)
……k l
{
   
eventHasBeenUsed
ÀÀ ,
=
ÀÀ- .
true
ÀÀ/ 3
;
ÀÀ3 4
m_currentHandle
ÃÃ +
.
ÃÃ+ , 
SetIndexAndTangent
ÃÃ, >
(
ÃÃ> ?
index
ÃÃ? D
,
ÃÃD E$
BezierTangentDirection
ÃÃF \
.
ÃÃ\ ]
In
ÃÃ] _
)
ÃÃ_ `
;
ÃÃ` a
Repaint
ÕÕ #
(
ÕÕ# $
)
ÕÕ$ %
;
ÕÕ% &
	SceneView
ŒŒ %
.
ŒŒ% &

RepaintAll
ŒŒ& 0
(
ŒŒ0 1
)
ŒŒ1 2
;
ŒŒ2 3
}
œœ 
else
–– 
if
–– 
(
––  !
!
––! "
Math
––" &
.
––& '
Approx3
––' .
(
––. /
prev
––/ 3
,
––3 4
point
––5 :
.
––: ;
	tangentIn
––; D
)
––D E
)
––E F
{
—— 
if
““ 
(
““  
!
““  !

m_IsMoving
““! +
)
““+ ,'
OnBeginVertexModification
””  9
(
””9 :
)
””: ;
;
””; <
point
‘‘ !
.
‘‘! "
	tangentIn
‘‘" +
=
‘‘, -
s_SnapTangents
‘‘. <
?
‘‘= >
ProGridsInterface
‘‘? P
.
‘‘P Q
ProGridsSnap
‘‘Q ]
(
‘‘] ^
prev
‘‘^ b
)
‘‘b c
:
‘‘d e
prev
‘‘f j
;
‘‘j k
point
’’ !
.
’’! " 
EnforceTangentMode
’’" 4
(
’’4 5$
BezierTangentDirection
’’5 K
.
’’K L
In
’’L N
,
’’N O
m_TangentMode
’’P ]
)
’’] ^
;
’’^ _
}
÷÷ 
}
◊◊ 
}
ÿÿ 
if
€€ 
(
€€ 
m_CloseLoop
€€ 
||
€€  "
index
€€# (
<
€€) *
count
€€+ 0
-
€€1 2
$num
€€3 4
)
€€4 5
{
‹‹ 
size
›› 
=
›› 
HandleUtility
›› (
.
››( )
GetHandleSize
››) 6
(
››6 7
point
››7 <
.
››< =

tangentOut
››= G
)
››G H
*
››I J
k_HandleSize
››K W
;
››W X
Handles
ﬁﬁ 
.
ﬁﬁ 
DrawLine
ﬁﬁ $
(
ﬁﬁ$ %
point
ﬁﬁ% *
.
ﬁﬁ* +
position
ﬁﬁ+ 3
,
ﬁﬁ3 4
point
ﬁﬁ5 :
.
ﬁﬁ: ;

tangentOut
ﬁﬁ; E
)
ﬁﬁE F
;
ﬁﬁF G
if
‡‡ 
(
‡‡ 
index
‡‡ 
==
‡‡  
m_currentHandle
‡‡! 0
&&
‡‡1 3
m_currentHandle
‡‡4 C
.
‡‡C D
	isTangent
‡‡D M
&&
‡‡N P
m_currentHandle
‡‡Q `
.
‡‡` a
tangent
‡‡a h
==
‡‡i k%
BezierTangentDirection‡‡l Ç
.‡‡Ç É
Out‡‡É Ü
)‡‡Ü á
{
·· 
Handles
‚‚ 
.
‚‚  
DotHandleCap
‚‚  ,
(
‚‚, -
$num
‚‚- .
,
‚‚. /
point
‚‚0 5
.
‚‚5 6

tangentOut
‚‚6 @
,
‚‚@ A

Quaternion
‚‚B L
.
‚‚L M
identity
‚‚M U
,
‚‚U V
size
‚‚W [
,
‚‚[ \
e
‚‚] ^
.
‚‚^ _
type
‚‚_ c
)
‚‚c d
;
‚‚d e
}
„„ 
else
‰‰ 
{
ÂÂ 
prev
ÊÊ 
=
ÊÊ 
point
ÊÊ $
.
ÊÊ$ %

tangentOut
ÊÊ% /
;
ÊÊ/ 0
prev
ÁÁ 
=
ÁÁ 
Handles
ÁÁ &
.
ÁÁ& '
FreeMoveHandle
ÁÁ' 5
(
ÁÁ5 6
prev
ÁÁ6 :
,
ÁÁ: ;

Quaternion
ÁÁ< F
.
ÁÁF G
identity
ÁÁG O
,
ÁÁO P
size
ÁÁQ U
,
ÁÁU V
Vector3
ÁÁW ^
.
ÁÁ^ _
zero
ÁÁ_ c
,
ÁÁc d
Handles
ÁÁe l
.
ÁÁl m
DotHandleCap
ÁÁm y
)
ÁÁy z
;
ÁÁz {
if
ÈÈ 
(
ÈÈ 
!
ÈÈ 
eventHasBeenUsed
ÈÈ -
&&
ÈÈ. 0
	eventType
ÈÈ1 :
==
ÈÈ; =
	EventType
ÈÈ> G
.
ÈÈG H
MouseUp
ÈÈH O
&&
ÈÈP R
e
ÈÈS T
.
ÈÈT U
type
ÈÈU Y
==
ÈÈZ \
	EventType
ÈÈ] f
.
ÈÈf g
Used
ÈÈg k
)
ÈÈk l
{
ÍÍ 
eventHasBeenUsed
ÎÎ ,
=
ÎÎ- .
true
ÎÎ/ 3
;
ÎÎ3 4
m_currentHandle
ÏÏ +
.
ÏÏ+ , 
SetIndexAndTangent
ÏÏ, >
(
ÏÏ> ?
index
ÏÏ? D
,
ÏÏD E$
BezierTangentDirection
ÏÏF \
.
ÏÏ\ ]
Out
ÏÏ] `
)
ÏÏ` a
;
ÏÏa b
Repaint
ÌÌ #
(
ÌÌ# $
)
ÌÌ$ %
;
ÌÌ% &
	SceneView
ÓÓ %
.
ÓÓ% &

RepaintAll
ÓÓ& 0
(
ÓÓ0 1
)
ÓÓ1 2
;
ÓÓ2 3
}
ÔÔ 
else
 
if
 
(
  !
!
! "
Math
" &
.
& '
Approx3
' .
(
. /
prev
/ 3
,
3 4
point
5 :
.
: ;

tangentOut
; E
)
E F
)
F G
{
ÒÒ 
if
ÚÚ 
(
ÚÚ  
!
ÚÚ  !

m_IsMoving
ÚÚ! +
)
ÚÚ+ ,'
OnBeginVertexModification
ÛÛ  9
(
ÛÛ9 :
)
ÛÛ: ;
;
ÛÛ; <
point
ÙÙ !
.
ÙÙ! "

tangentOut
ÙÙ" ,
=
ÙÙ- .
s_SnapTangents
ÙÙ/ =
?
ÙÙ> ?
ProGridsInterface
ÙÙ@ Q
.
ÙÙQ R
ProGridsSnap
ÙÙR ^
(
ÙÙ^ _
prev
ÙÙ_ c
)
ÙÙc d
:
ÙÙe f
prev
ÙÙg k
;
ÙÙk l
point
ıı !
.
ıı! " 
EnforceTangentMode
ıı" 4
(
ıı4 5$
BezierTangentDirection
ıı5 K
.
ııK L
Out
ııL O
,
ııO P
m_TangentMode
ııQ ^
)
ıı^ _
;
ıı_ `
}
ˆˆ 
}
˜˜ 
}
¯¯ 
m_Points
˙˙ 
[
˙˙ 
index
˙˙ 
]
˙˙ 
=
˙˙  !
point
˙˙" '
;
˙˙' (
}
˚˚ 
if
˛˛ 
(
˛˛ 
!
˛˛ 
eventHasBeenUsed
˛˛ !
&&
˛˛" $
m_ControlPoints
˛˛% 4
!=
˛˛5 7
null
˛˛8 <
&&
˛˛= ?
m_ControlPoints
˛˛@ O
.
˛˛O P
Count
˛˛P U
>
˛˛V W
$num
˛˛X Y
)
˛˛Y Z
{
ˇˇ 
int
ÄÄ 
index
ÄÄ 
=
ÄÄ 
-
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
float
ÅÅ 
distanceToLine
ÅÅ $
;
ÅÅ$ %
Vector3
ÉÉ 
p
ÉÉ 
=
ÉÉ !
EditorHandleUtility
ÉÉ /
.
ÉÉ/ 0$
ClosestPointToPolyLine
ÉÉ0 F
(
ÉÉF G
m_ControlPoints
ÉÉG V
,
ÉÉV W
out
ÉÉX [
index
ÉÉ\ a
,
ÉÉa b
out
ÉÉc f
distanceToLine
ÉÉg u
,
ÉÉu v
false
ÉÉw |
,
ÉÉ| }
nullÉÉ~ Ç
)ÉÉÇ É
;ÉÉÉ Ñ
if
ÖÖ 
(
ÖÖ 
!
ÖÖ #
IsHoveringHandlePoint
ÖÖ *
(
ÖÖ* +
e
ÖÖ+ ,
.
ÖÖ, -
mousePosition
ÖÖ- :
)
ÖÖ: ;
&&
ÖÖ< >
distanceToLine
ÖÖ? M
<
ÖÖN O
PreferenceKeys
ÖÖP ^
.
ÖÖ^ _+
k_MaxPointDistanceFromControl
ÖÖ_ |
)
ÖÖ| }
{
ÜÜ 
Handles
áá 
.
áá 
color
áá !
=
áá" #
Color
áá$ )
.
áá) *
green
áá* /
;
áá/ 0
Handles
àà 
.
àà 
DotHandleCap
àà (
(
àà( )
-
àà) *
$num
àà* +
,
àà+ ,
p
àà- .
,
àà. /

Quaternion
àà0 :
.
àà: ;
identity
àà; C
,
ààC D
HandleUtility
ààE R
.
ààR S
GetHandleSize
ààS `
(
àà` a
p
ààa b
)
ààb c
*
ààd e
$num
ààf j
,
ààj k
e
ààl m
.
ààm n
type
ààn r
)
ààr s
;
ààs t
Handles
ââ 
.
ââ 
color
ââ !
=
ââ" #
Color
ââ$ )
.
ââ) *
white
ââ* /
;
ââ/ 0
if
ãã 
(
ãã 
!
ãã 
eventHasBeenUsed
ãã )
&&
ãã* ,
	eventType
ãã- 6
==
ãã7 9
	EventType
ãã: C
.
ããC D
	MouseDown
ããD M
&&
ããN P
e
ããQ R
.
ããR S
button
ããS Y
==
ããZ \
$num
ãã] ^
)
ãã^ _
{
åå 
UndoUtility
çç #
.
çç# $
RecordObject
çç$ 0
(
çç0 1
m_Target
çç1 9
,
çç9 :
$str
çç; F
)
ççF G
;
ççG H
Vector3
éé 
dir
éé  #
=
éé$ %
m_ControlPoints
éé& 5
[
éé5 6
(
éé6 7
index
éé7 <
+
éé= >
$num
éé? @
)
éé@ A
%
ééB C
m_ControlPoints
ééD S
.
ééS T
Count
ééT Y
]
ééY Z
-
éé[ \
m_ControlPoints
éé] l
[
éél m
index
éém r
]
éér s
;
éés t
m_Points
èè  
.
èè  !
Insert
èè! '
(
èè' (
(
èè( )
index
èè) .
/
èè/ 0
	m_Columns
èè1 :
)
èè: ;
+
èè< =
$num
èè> ?
,
èè? @
new
èèA D
BezierPoint
èèE P
(
èèP Q
p
èèQ R
,
èèR S
p
èèT U
-
èèV W
dir
èèX [
,
èè[ \
p
èè] ^
+
èè_ `
dir
èèa d
,
èèd e

Quaternion
èèf p
.
èèp q
identity
èèq y
)
èèy z
)
èèz {
;
èè{ |

UpdateMesh
êê "
(
êê" #
true
êê# '
)
êê' (
;
êê( )
e
ëë 
.
ëë 
Use
ëë 
(
ëë 
)
ëë 
;
ëë  
}
íí 
	SceneView
îî 
.
îî 

RepaintAll
îî (
(
îî( )
)
îî) *
;
îî* +
}
ïï 
}
ññ 
if
òò 
(
òò 
e
òò 
.
òò 
type
òò 
==
òò 
	EventType
òò #
.
òò# $
MouseUp
òò$ +
&&
òò, .
!
òò/ 0
sceneViewInUse
òò0 >
)
òò> ?
m_currentHandle
ôô 
.
ôô  
SetIndex
ôô  (
(
ôô( )
-
ôô) *
$num
ôô* +
)
ôô+ ,
;
ôô, -
Handles
õõ 
.
õõ 
matrix
õõ 
=
õõ 
handleMatrix
õõ )
;
õõ) *
if
ùù 
(
ùù 
	EditorGUI
ùù 
.
ùù 
EndChangeCheck
ùù (
(
ùù( )
)
ùù) *
)
ùù* +

UpdateMesh
ûû 
(
ûû 
false
ûû  
)
ûû  !
;
ûû! "
}
üü 	
bool
°° #
IsHoveringHandlePoint
°° "
(
°°" #
Vector2
°°# *
mpos
°°+ /
)
°°/ 0
{
¢¢ 	
if
££ 
(
££ 
m_Target
££ 
==
££ 
null
££  
)
££  !
return
§§ 
false
§§ 
;
§§ 
int
¶¶ 
count
¶¶ 
=
¶¶ 
m_Points
¶¶  
.
¶¶  !
Count
¶¶! &
;
¶¶& '
for
®® 
(
®® 
int
®® 
i
®® 
=
®® 
$num
®® 
;
®® 
i
®® 
<
®® 
count
®®  %
;
®®% &
i
®®' (
++
®®( *
)
®®* +
{
©© 
BezierPoint
™™ 
p
™™ 
=
™™ 
m_Points
™™  (
[
™™( )
i
™™) *
]
™™* +
;
™™+ ,
bool
¨¨ 
ti
¨¨ 
=
¨¨ 
m_CloseLoop
¨¨ %
||
¨¨& (
i
¨¨) *
>
¨¨+ ,
$num
¨¨- .
;
¨¨. /
bool
≠≠ 
to
≠≠ 
=
≠≠ 
m_CloseLoop
≠≠ %
||
≠≠& (
i
≠≠) *
<
≠≠+ ,
(
≠≠- .
count
≠≠. 3
-
≠≠4 5
$num
≠≠6 7
)
≠≠7 8
;
≠≠8 9
if
ØØ 
(
ØØ 
Vector2
ØØ 
.
ØØ 
Distance
ØØ $
(
ØØ$ %
mpos
ØØ% )
,
ØØ) *
HandleUtility
ØØ+ 8
.
ØØ8 9
WorldToGUIPoint
ØØ9 H
(
ØØH I
p
ØØI J
.
ØØJ K
position
ØØK S
)
ØØS T
)
ØØT U
<
ØØV W
PreferenceKeys
ØØX f
.
ØØf g,
k_MaxPointDistanceFromControlØØg Ñ
||ØØÖ á
(
∞∞ 
ti
∞∞ 
&&
∞∞ 
Vector2
∞∞ "
.
∞∞" #
Distance
∞∞# +
(
∞∞+ ,
mpos
∞∞, 0
,
∞∞0 1
HandleUtility
∞∞2 ?
.
∞∞? @
WorldToGUIPoint
∞∞@ O
(
∞∞O P
p
∞∞P Q
.
∞∞Q R
	tangentIn
∞∞R [
)
∞∞[ \
)
∞∞\ ]
<
∞∞^ _
PreferenceKeys
∞∞` n
.
∞∞n o,
k_MaxPointDistanceFromControl∞∞o å
)∞∞å ç
||∞∞é ê
(
±± 
to
±± 
&&
±± 
Vector2
±± "
.
±±" #
Distance
±±# +
(
±±+ ,
mpos
±±, 0
,
±±0 1
HandleUtility
±±2 ?
.
±±? @
WorldToGUIPoint
±±@ O
(
±±O P
p
±±P Q
.
±±Q R

tangentOut
±±R \
)
±±\ ]
)
±±] ^
<
±±_ `
PreferenceKeys
±±a o
.
±±o p,
k_MaxPointDistanceFromControl±±p ç
)±±ç é
)±±é è
return
≤≤ 
true
≤≤ 
;
≤≤  
}
≥≥ 
return
µµ 
false
µµ 
;
µµ 
}
∂∂ 	
void
∏∏ 
UndoRedoPerformed
∏∏ 
(
∏∏ 
)
∏∏  
{
ππ 	
if
∫∫ 
(
∫∫ 
m_Target
∫∫ 
&&
∫∫ 
m_IsEditing
∫∫ '
)
∫∫' (
{
ªª !
UpdateControlPoints
ºº #
(
ºº# $
)
ºº$ %
;
ºº% &

UpdateMesh
ΩΩ 
(
ΩΩ 
true
ΩΩ 
)
ΩΩ  
;
ΩΩ  !
}
ææ 
}
øø 	
void
¡¡ '
OnBeginVertexModification
¡¡ &
(
¡¡& '
)
¡¡' (
{
¬¬ 	

m_IsMoving
√√ 
=
√√ 
true
√√ 
;
√√ 
UndoUtility
ƒƒ 
.
ƒƒ 
RecordObject
ƒƒ $
(
ƒƒ$ %
m_Target
ƒƒ% -
,
ƒƒ- .
$str
ƒƒ/ E
)
ƒƒE F
;
ƒƒF G
Lightmapping
≈≈ 
.
≈≈  
PushGIWorkflowMode
≈≈ +
(
≈≈+ ,
)
≈≈, -
;
≈≈- .
}
∆∆ 	
void
»» (
OnFinishVertexModification
»» '
(
»»' (
)
»»( )
{
…… 	

m_IsMoving
   
=
   
false
   
;
   
Lightmapping
ÀÀ 
.
ÀÀ 
PopGIWorkflowMode
ÀÀ *
(
ÀÀ* +
)
ÀÀ+ ,
;
ÀÀ, -
m_CurrentObject
ÃÃ 
.
ÃÃ 
Optimize
ÃÃ $
(
ÃÃ$ %
)
ÃÃ% &
;
ÃÃ& '
ProBuilderEditor
ÕÕ 
.
ÕÕ 
Refresh
ÕÕ $
(
ÕÕ$ %
)
ÕÕ% &
;
ÕÕ& '
}
ŒŒ 	
}
œœ 
}–– ò!
®D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Interaction\ToggleSelectBackFaces.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class !
ToggleSelectBackFaces &
:' (

MenuAction) 3
{ 
public 
override 
ToolbarGroup $
group% *
{		 	
get

 
{

 
return

 
ToolbarGroup

 %
.

% &
	Selection

& /
;

/ 0
}

1 2
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
ProBuilderEditor )
.) *$
backfaceSelectionEnabled* B
?C D
m_IconsE L
[L M
$numM N
]N O
:P Q
m_IconsR Y
[Y Z
$numZ [
][ \
;\ ]
}^ _
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
public 
override 
int 
toolbarPriority +
{ 	
get 
{ 
return 
$num 
; 
} 
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str .
,. /
$str" 
)"" 
;"" 
public$$ 
override$$ 
string$$ 
	menuTitle$$ (
{%% 	
get&& 
{&& 
return&& 
ProBuilderEditor&& )
.&&) *$
backfaceSelectionEnabled&&* B
?&&C D
$str&&E X
:&&Y Z
$str&&[ o
;&&o p
}&&q r
}'' 	
public)) 
override)) 

SelectMode)) "
validSelectModes))# 3
{** 	
get++ 
{,, 
return-- 

SelectMode-- !
.--! "
Vertex--" (
|--) *

SelectMode--+ 5
.--5 6
Edge--6 :
|--; <

SelectMode--= G
.--G H
Face--H L
|--M N

SelectMode--O Y
.--Y Z
TextureFace--Z e
;--e f
}.. 
}// 	
	Texture2D11 
[11 
]11 
m_Icons11 
;11 
public33 !
ToggleSelectBackFaces33 $
(33$ %
)33% &
{44 	
m_Icons55 
=55 
new55 
	Texture2D55 #
[55# $
]55$ %
{66 
IconUtility77 
.77 
GetIcon77 #
(77# $
$str77$ H
,77H I
IconSkin77J R
.77R S
Pro77S V
)77V W
,77W X
IconUtility88 
.88 
GetIcon88 #
(88# $
$str88$ G
,88G H
IconSkin88I Q
.88Q R
Pro88R U
)88U V
}99 
;99 
}:: 	
public<< 
override<< 
ActionResult<< $
DoAction<<% -
(<<- .
)<<. /
{== 	
ProBuilderEditor>> 
.>> $
backfaceSelectionEnabled>> 5
=>>6 7
!>>8 9
ProBuilderEditor>>9 I
.>>I J$
backfaceSelectionEnabled>>J b
;>>b c
return?? 
new?? 
ActionResult?? #
(??# $
ActionResult??$ 0
.??0 1
Status??1 7
.??7 8
Success??8 ?
,??? @
$str??A a
+??b c
(??d e
!??e f
ProBuilderEditor??f v
.??v w%
backfaceSelectionEnabled	??w è
?
??ê ë
$str
??í ñ
:
??ó ò
$str
??ô û
)
??û ü
)
??ü †
;
??† °
}@@ 	
}AA 
}BB ›@
ïD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\UVRenderOptions.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
sealed

 

class

 
UVRenderOptions

  
:

! "
EditorWindow

# /
{ 
Pref 
< 
	ImageSize 
> 
m_ImageSize #
=$ %
new& )
Pref* .
<. /
	ImageSize/ 8
>8 9
(9 :
$str: U
,U V
	ImageSizeW `
.` a
_1024a f
,f g
SettingsScopeh u
.u v
Userv z
)z {
;{ |
Pref 
< 
Color 
> 
m_LineColor 
=  !
new" %
Pref& *
<* +
Color+ 0
>0 1
(1 2
$str2 M
,M N
ColorO T
.T U
greenU Z
,Z [
SettingsScope\ i
.i j
Userj n
)n o
;o p
Pref 
< 
Color 
> 
m_BackgroundColor %
=& '
new( +
Pref, 0
<0 1
Color1 6
>6 7
(7 8
$str8 Y
,Y Z
Color[ `
.` a
blacka f
,f g
SettingsScopeh u
.u v
Userv z
)z {
;{ |
Pref 
< 
bool 
> #
m_TransparentBackground *
=+ ,
new- 0
Pref1 5
<5 6
bool6 :
>: ;
(; <
$str< c
,c d
falsee j
,j k
SettingsScopel y
.y z
Userz ~
)~ 
;	 Ä
Pref 
< 
bool 
> 

m_HideGrid 
= 
new  #
Pref$ (
<( )
bool) -
>- .
(. /
$str/ I
,I J
trueK O
,O P
SettingsScopeQ ^
.^ _
User_ c
)c d
;d e
Pref 
< 
bool 
> 
m_RenderTexture "
=# $
new% (
Pref) -
<- .
bool. 2
>2 3
(3 4
$str4 S
,S T
trueU Y
,Y Z
SettingsScope[ h
.h i
Useri m
)m n
;n o
enum 
	ImageSize 
{ 	
_256 
= 
$num 
, 
_512 
= 
$num 
, 
_1024 
= 
$num 
, 
_2048 
= 
$num 
, 
_4096 
= 
$num 
, 
} 	
;	 

public 
delegate 
void 
ScreenshotFunc +
(+ ,
int, /
	ImageSize0 9
,9 :
bool; ?
HideGrid@ H
,H I
ColorJ O
	LineColorP Y
,Y Z
bool[ _!
TransparentBackground` u
,u v
Colorw |
BackgroundColor	} å
,
å ç
bool
é í
RenderTexture
ì †
)
† °
;
° ¢
public 
ScreenshotFunc 

screenFunc (
;( )
Vector2 
m_Scroll 
; 
void   
OnGUI   
(   
)   
{!! 	
m_Scroll"" 
="" 
EditorGUILayout"" &
.""& '
BeginScrollView""' 6
(""6 7
m_Scroll""7 ?
)""? @
;""@ A
	GUILayout## 
.## 
Label## 
(## 
$str## (
,##( )
EditorStyles##* 6
.##6 7
	boldLabel##7 @
)##@ A
;##A B
	GUILayout$$ 
.$$ 
Space$$ 
($$ 
$num$$ 
)$$ 
;$$ 
m_ImageSize&& 
.&& 
value&& 
=&& 
(&&  !
	ImageSize&&! *
)&&* +
EditorGUILayout&&+ :
.&&: ;
	EnumPopup&&; D
(&&D E
new&&E H

GUIContent&&I S
(&&S T
$str&&T `
,&&` a
$str	&&b è
)
&&è ê
,
&&ê ë
m_ImageSize
&&í ù
)
&&ù û
;
&&û ü

m_HideGrid'' 
.'' 
value'' 
='' 
EditorGUILayout'' .
.''. /
Toggle''/ 5
(''5 6
new''6 9

GUIContent'': D
(''D E
$str''E P
,''P Q
$str''R p
)''p q
,''q r

m_HideGrid''s }
)''} ~
;''~ 
m_LineColor(( 
.(( 
value(( 
=(( 
EditorGUILayout((  /
.((/ 0

ColorField((0 :
(((: ;
new((; >

GUIContent((? I
(((I J
$str((J V
,((V W
$str((X z
)((z {
,(({ |
m_LineColor	((} à
)
((à â
;
((â ä
m_RenderTexture)) 
.)) 
value)) !
=))" #
EditorGUILayout))$ 3
.))3 4
Toggle))4 :
()): ;
new)); >

GUIContent))? I
())I J
$str))J [
,))[ \
$str	))] ù
)
))ù û
,
))û ü
m_RenderTexture
))† Ø
)
))Ø ∞
;
))∞ ±#
m_TransparentBackground** #
.**# $
value**$ )
=*** +
EditorGUILayout**, ;
.**; <
Toggle**< B
(**B C
new**C F

GUIContent**G Q
(**Q R
$str**R j
,**j k
$str	**l  
)
**  À
,
**À Ã%
m_TransparentBackground
**Õ ‰
)
**‰ Â
;
**Â Ê
GUI,, 
.,, 
enabled,, 
=,, 
!,, #
m_TransparentBackground,, 2
;,,2 3
	EditorGUI-- 
.-- 
indentLevel-- !
++--! #
;--# $
m_BackgroundColor.. 
... 
value.. #
=..$ %
EditorGUILayout..& 5
...5 6

ColorField..6 @
(..@ A
new..A D

GUIContent..E O
(..O P
$str..P b
,..b c
$str	..d ≤
)
..≤ ≥
,
..≥ ¥
m_BackgroundColor
..µ ∆
)
..∆ «
;
..« »
	EditorGUI// 
.// 
indentLevel// !
--//! #
;//# $
GUI00 
.00 
enabled00 
=00 
true00 
;00 
if22 
(22 
	GUILayout22 
.22 
Button22  
(22  !
$str22! 3
)223 4
)224 5
{33 
if44 
(44 
ProBuilderEditor44 $
.44$ %
instance44% -
==44. 0
null441 5
||446 8
MeshSelection449 F
.44F G
selectedObjectCount44G Z
<44[ \
$num44] ^
)44^ _
{55 
Debug66 
.66 

LogWarning66 $
(66$ %
$str66% g
)66g h
;66h i
Close77 
(77 
)77 
;77 
return88 
;88 
}99 

screenFunc;; 
(;; 
(;; 
int;; 
);;  
m_ImageSize;;  +
.;;+ ,
value;;, 1
,;;1 2

m_HideGrid;;3 =
,;;= >
m_LineColor;;? J
,;;J K#
m_TransparentBackground;;L c
,;;c d
m_BackgroundColor;;e v
,;;v w
m_RenderTexture	;;x á
)
;;á à
;
;;à â
Close<< 
(<< 
)<< 
;<< 
}== 
EditorGUILayout?? 
.?? 
EndScrollView?? )
(??) *
)??* +
;??+ ,
}@@ 	
}AA 
}BB ‘
ßD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Editors\OpenVertexPositionEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed		 

class		 $
OpenVertexPositionEditor		 )
:		* +

MenuAction		, 6
{

 
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
ToolG K
;K L
}M N
}O P
public 
override 
	Texture2D !
icon" &
{' (
get) ,
{- .
return/ 5
null6 :
;: ;
}< =
}> ?
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
	s_Tooltip> G
;G H
}I J
}K L
public 
override 
string 
	menuTitle (
{) *
get+ .
{/ 0
return1 7
$str8 G
;G H
}I J
}K L
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str (
,( )
$str ;
) 
; 
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
ProBuilderEditor )
.) *
instance* 2
!=3 5
null6 :
;: ;
}< =
} 	
public 
override 
bool 
hidden #
{ 	
get 
{ 
return 
true 
; 
}  
} 	
public   
override   
ActionResult   $
DoAction  % -
(  - .
)  . /
{!! 	 
VertexPositionEditor""  
.""  ! 
MenuOpenVertexEditor""! 5
(""5 6
)""6 7
;""7 8
return## 
new## 
ActionResult## #
(### $
ActionResult##$ 0
.##0 1
Status##1 7
.##7 8
Success##8 ?
,##? @
$str##A \
)##\ ]
;##] ^
}$$ 	
}%% 
}&& €+
üD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Selection\SelectFaceRing.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed		 

class		 
SelectFaceRing		 
:		  !

MenuAction		" ,
{

 
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
	Selection& /
;/ 0
}1 2
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- J
,J K
IconSkinL T
.T U
ProU X
)X Y
;Y Z
}[ \
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
public 
override 
int 
toolbarPriority +
{ 	
get 
{ 
return 
$num 
; 
} 
} 	
	protected 
override 
bool 
hasFileMenuEntry  0
{   	
get!! 
{!! 
return!! 
false!! 
;!! 
}!!  !
}"" 	
private$$ 
static$$ 
readonly$$ 
TooltipContent$$  .
	s_Tooltip$$/ 8
=$$9 :
new$$; >
TooltipContent$$? M
(%% 
$str&& "
,&&" #
$str'' h
)(( 
;(( 
public** 
override** 

SelectMode** "
validSelectModes**# 3
{++ 	
get,, 
{,, 
return,, 

SelectMode,, #
.,,# $
Face,,$ (
|,,) *

SelectMode,,+ 5
.,,5 6
TextureFace,,6 A
;,,A B
},,C D
}-- 	
public// 
override// 
bool// 
enabled// $
{00 	
get11 
{11 
return11 
base11 
.11 
enabled11 %
&&11& (
MeshSelection11) 6
.116 7
selectedFaceCount117 H
>11I J
$num11K L
;11L M
}11N O
}22 	
public44 
override44 
ActionResult44 $
DoAction44% -
(44- .
)44. /
{55 	
var66 
	selection66 
=66 
MeshSelection66 )
.66) *
topInternal66* 5
;665 6
UndoUtility88 
.88 
RecordSelection88 '
(88' (
$str88( :
)88: ;
;88; <
foreach:: 
(:: 
ProBuilderMesh:: #
pb::$ &
in::' )
	selection::* 3
)::3 4
{;; 
HashSet<< 
<<< 
Face<< 
><< 
loop<< "
=<<# $
ElementSelection<<% 5
.<<5 6
GetFaceLoop<<6 A
(<<A B
pb<<B D
,<<D E
pb<<F H
.<<H I!
selectedFacesInternal<<I ^
,<<^ _
true<<` d
)<<d e
;<<e f
pb== 
.== 
SetSelectedFaces== #
(==# $
loop==$ (
)==( )
;==) *
}>> 
ProBuilderEditor@@ 
.@@ 
Refresh@@ $
(@@$ %
)@@% &
;@@& '
returnBB 
newBB 
ActionResultBB #
(BB# $
ActionResultBB$ 0
.BB0 1
StatusBB1 7
.BB7 8
SuccessBB8 ?
,BB? @
$strBBA S
)BBS T
;BBT U
}CC 	
publicEE 
staticEE 
ActionResultEE " 
MenuRingAndLoopFacesEE# 7
(EE7 8
IEnumerableEE8 C
<EEC D
ProBuilderMeshEED R
>EER S
	selectionEET ]
)EE] ^
{FF 	
UndoUtilityGG 
.GG 
RecordSelectionGG '
(GG' (
	selectionGG( 1
.GG1 2
ToArrayGG2 9
(GG9 :
)GG: ;
,GG; <
$strGG= X
)GGX Y
;GGY Z
foreachII 
(II 
ProBuilderMeshII #
pbII$ &
inII' )
	selectionII* 3
)II3 4
{JJ 
HashSetKK 
<KK 
FaceKK 
>KK 
loopKK "
=KK# $
ElementSelectionKK% 5
.KK5 6
GetFaceRingAndLoopKK6 H
(KKH I
pbKKI K
,KKK L
pbKKM O
.KKO P!
selectedFacesInternalKKP e
)KKe f
;KKf g
pbLL 
.LL 
SetSelectedFacesLL #
(LL# $
loopLL$ (
)LL( )
;LL) *
}MM 
ProBuilderEditorOO 
.OO 
RefreshOO $
(OO$ %
)OO% &
;OO& '
returnPP 
newPP 
ActionResultPP #
(PP# $
ActionResultPP$ 0
.PP0 1
StatusPP1 7
.PP7 8
SuccessPP8 ?
,PP? @
$strPPA \
)PP\ ]
;PP] ^
}QQ 	
}RR 
}SS ´%
ûD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\InsertEdgeLoop.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
.		  !
Actions		! (
{

 
sealed 

class 
InsertEdgeLoop 
:  !

MenuAction" ,
{ 
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Geometry& .
;. /
}0 1
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- F
,F G
IconSkinH P
.P Q
ProQ T
)T U
;U V
}W X
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
_tooltip !
;! "
}# $
} 	
static 
readonly 
TooltipContent &
_tooltip' /
=0 1
new2 5
TooltipContent6 D
( 
$str "
," #
$str B
,B C
keyCommandAlt   
,   
$char   "
)!! 
;!! 
public## 
override## 

SelectMode## "
validSelectModes### 3
{$$ 	
get%% 
{%% 
return%% 

SelectMode%% #
.%%# $
Edge%%$ (
;%%( )
}%%* +
}&& 	
public(( 
override(( 
bool(( 
enabled(( $
{)) 	
get** 
{** 
return** 
base** 
.** 
enabled** %
&&**& (
MeshSelection**) 6
.**6 7
selectedEdgeCount**7 H
>**I J
$num**K L
;**L M
}**N O
}++ 	
public-- 
override-- 
ActionResult-- $
DoAction--% -
(--- .
)--. /
{.. 	
if// 
(// 
MeshSelection// 
.// 
selectedObjectCount// 1
<//2 3
$num//4 5
)//5 6
return00 
ActionResult00 #
.00# $
NoSelection00$ /
;00/ 0
int22 
success22 
=22 
$num22 
;22 
UndoUtility33 
.33 
RecordSelection33 '
(33' (
$str33( :
)33: ;
;33; <
foreach55 
(55 
ProBuilderMesh55 #
pb55$ &
in55' )
MeshSelection55* 7
.557 8
topInternal558 C
)55C D
{66 
Edge77 
[77 
]77 
edges77 
=77 
pb77 !
.77! "
Connect77" )
(77) *
ElementSelection77* :
.77: ;
GetEdgeRing77; F
(77F G
pb77G I
,77I J
pb77K M
.77M N
selectedEdges77N [
)77[ \
)77\ ]
.77] ^
item277^ c
;77c d
if99 
(99 
edges99 
!=99 
null99 !
)99! "
{:: 
pb;; 
.;; 
SetSelectedEdges;; '
(;;' (
edges;;( -
);;- .
;;;. /
pb<< 
.<< 
ToMesh<< 
(<< 
)<< 
;<<  
pb== 
.== 
Refresh== 
(== 
)==  
;==  !
pb>> 
.>> 
Optimize>> 
(>>  
)>>  !
;>>! "
success?? 
++?? 
;?? 
}@@ 
}AA 
ProBuilderEditorCC 
.CC 
RefreshCC $
(CC$ %
)CC% &
;CC& '
ifEE 
(EE 
successEE 
>EE 
$numEE 
)EE 
returnFF 
newFF 
ActionResultFF '
(FF' (
ActionResultFF( 4
.FF4 5
StatusFF5 ;
.FF; <
SuccessFF< C
,FFC D
$strFFE W
)FFW X
;FFX Y
returnHH 
newHH 
ActionResultHH #
(HH# $
ActionResultHH$ 0
.HH0 1
StatusHH1 7
.HH7 8
SuccessHH8 ?
,HH? @
$strHHA S
)HHS T
;HHT U
}II 	
}JJ 
}KK Êv
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\UndoUtility.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
[ 
InitializeOnLoad 
] 
static		 

class		 
UndoUtility		 
{

 
static 
UndoUtility 
( 
) 
{ 	
Undo 
. 
undoRedoPerformed "
+=# %
UndoRedoPerformed& 7
;7 8
} 	
static 
void 
UndoRedoPerformed %
(% &
)& '
{ 	
if 
( $
SceneDragAndDropListener (
.( )

isDragging) 3
)3 4
{ 
return 
; 
} 
foreach 
( 
var 
mesh 
in  
Object! '
.' (
FindObjectsOfType( 9
<9 :
ProBuilderMesh: H
>H I
(I J
)J K
)K L
{ 
EditorUtility 
. %
SynchronizeWithMeshFilter 7
(7 8
mesh8 <
)< =
;= >
mesh 
. 
InvalidateCaches %
(% &
)& '
;' (
} 
foreach!! 
(!! 
var!! 
mesh!! 
in!!  
InternalUtility!!! 0
.!!0 1
GetComponents!!1 >
<!!> ?
ProBuilderMesh!!? M
>!!M N
(!!N O
	Selection!!O X
.!!X Y

transforms!!Y c
)!!c d
)!!d e
{"" 
mesh## 
.## 
InvalidateCaches## %
(##% &
)##& '
;##' (
mesh$$ 
.$$ 
Rebuild$$ 
($$ 
)$$ 
;$$ 
mesh%% 
.%% 
Optimize%% 
(%% 
)%% 
;%%  
}&& 
ProBuilderEditor(( 
.(( 
Refresh(( $
((($ %
)((% &
;((& '
	SceneView)) 
.)) 

RepaintAll))  
())  !
)))! "
;))" #
}** 	
public00 
static00 
void00 
RecordSelection00 *
(00* +
ProBuilderMesh00+ 9
pb00: <
,00< =
string00> D
msg00E H
)00H I
{11 	
if22 
(22 
pb22 
.22 
vertexCount22 
>22  
$num22! $
)22$ %&
RegisterCompleteObjectUndo33 *
(33* +
pb33+ -
,33- .
msg33/ 2
)332 3
;333 4
else44 
Undo55 
.55 
RecordObject55 !
(55! "
pb55" $
,55$ %
msg55& )
)55) *
;55* +
}66 	
internal88 
static88 
void88 
RecordSelection88 ,
(88, -
string88- 3
message884 ;
)88; <
{99 	
RecordSelection:: 
(:: 
MeshSelection:: )
.::) *
topInternal::* 5
.::5 6
ToArray::6 =
(::= >
)::> ?
,::? @
message::A H
)::H I
;::I J
};; 	
internal== 
static== 
void== +
RecordMeshAndTransformSelection== <
(==< =
string=== C
message==D K
)==K L
{>> 	
var?? 
count?? 
=?? 
MeshSelection?? %
.??% &
selectedObjectCount??& 9
;??9 :
var@@ 
res@@ 
=@@ 
new@@ 
Object@@  
[@@  !
count@@! &
*@@' (
$num@@) *
]@@* +
;@@+ ,
varAA 
	selectionAA 
=AA 
MeshSelectionAA )
.AA) *
topInternalAA* 5
;AA5 6
forCC 
(CC 
intCC 
iCC 
=CC 
$numCC 
,CC 
cCC 
=CC 
countCC  %
;CC% &
iCC' (
<CC) *
cCC+ ,
;CC, -
iCC. /
++CC/ 1
)CC1 2
{DD 
resEE 
[EE 
iEE 
]EE 
=EE 
	selectionEE "
[EE" #
iEE# $
]EE$ %
;EE% &
resFF 
[FF 
iFF 
+FF 
cFF 
]FF 
=FF 
	selectionFF &
[FF& '
iFF' (
]FF( )
.FF) *
	transformFF* 3
;FF3 4
}GG 
UndoII 
.II &
RegisterCompleteObjectUndoII +
(II+ ,
resII, /
,II/ 0
messageII1 8
)II8 9
;II9 :
}JJ 	
publicPP 
staticPP 
voidPP 
RecordSelectionPP *
(PP* +
ProBuilderMeshPP+ 9
[PP9 :
]PP: ;
pbPP< >
,PP> ?
stringPP@ F
msgPPG J
)PPJ K
{QQ 	
ifRR 
(RR 
pbRR 
==RR 
nullRR 
||RR 
pbRR  
.RR  !
LengthRR! '
<RR( )
$numRR* +
)RR+ ,
returnSS 
;SS 
ifUU 
(UU 
pbUU 
.UU 
AnyUU 
(UU 
xUU 
=>UU 
{UU 
returnUU $
xUU% &
.UU& '
vertexCountUU' 2
>UU3 4
$numUU5 8
;UU8 9
}UU: ;
)UU; <
)UU< =&
RegisterCompleteObjectUndoVV *
(VV* +
pbVV+ -
,VV- .
msgVV/ 2
)VV2 3
;VV3 4
elseWW 
UndoXX 
.XX 
RecordObjectsXX "
(XX" #
pbXX# %
,XX% &
msgXX' *
)XX* +
;XX+ ,
}YY 	
public^^ 
static^^ 
void^^ 
RecordObject^^ '
(^^' (
Object^^( .
obj^^/ 2
,^^2 3
string^^4 :
msg^^; >
)^^> ?
{__ 	
if`` 
(`` 
obj`` 
is`` 
ProBuilderMesh`` %
&&``& (
(``) *
(``* +
ProBuilderMesh``+ 9
)``9 :
obj``: =
)``= >
.``> ?
vertexCount``? J
>``K L
$num``M P
)``P Q
{aa &
RegisterCompleteObjectUndoee *
(ee* +
objee+ .
asee/ 1
ProBuilderMeshee2 @
,ee@ A
msgeeB E
)eeE F
;eeF G
}ff 
elsegg 
{hh 
Undoii 
.ii 
RecordObjectii !
(ii! "
objii" %
,ii% &
msgii' *
)ii* +
;ii+ ,
}jj 
}kk 	
publicpp 
staticpp 
voidpp 
RecordObjectspp (
(pp( )
IEnumerablepp) 4
<pp4 5
Objectpp5 ;
>pp; <
objspp= A
,ppA B
stringppC I
msgppJ M
)ppM N
{qq 	
ifrr 
(rr 
objsrr 
==rr 
nullrr 
)rr 
returnss 
;ss 
Objectuu 
[uu 
]uu 
objuu 
=uu 
objsuu 
.uu  
Whereuu  %
(uu% &
xuu& '
=>uu( *
!uu+ ,
(uu, -
xuu- .
isuu/ 1
ProBuilderMeshuu2 @
)uu@ A
)uuA B
.uuB C
ToArrayuuC J
(uuJ K
)uuK L
;uuL M
ProBuilderMeshvv 
[vv 
]vv 
pbvv 
=vv  !
objsvv" &
.vv& '
Wherevv' ,
(vv, -
xvv- .
=>vv/ 1
xvv2 3
isvv4 6
ProBuilderMeshvv7 E
)vvE F
.vvF G
CastvvG K
<vvK L
ProBuilderMeshvvL Z
>vvZ [
(vv[ \
)vv\ ]
.vv] ^
ToArrayvv^ e
(vve f
)vvf g
;vvg h
ifxx 
(xx 
objxx 
.xx 
Anyxx 
(xx 
)xx 
)xx 
Undoyy 
.yy 
RecordObjectsyy "
(yy" #
objyy# &
,yy& '
msgyy( +
)yy+ ,
;yy, -
RecordSelection{{ 
({{ 
pb{{ 
,{{ 
msg{{  #
){{# $
;{{$ %
}|| 	
public
ÅÅ 
static
ÅÅ 
void
ÅÅ (
RegisterCompleteObjectUndo
ÅÅ 5
(
ÅÅ5 6
Object
ÅÅ6 <
objs
ÅÅ= A
,
ÅÅA B
string
ÅÅC I
msg
ÅÅJ M
)
ÅÅM N
{
ÇÇ 	
Undo
ÉÉ 
.
ÉÉ (
RegisterCompleteObjectUndo
ÉÉ +
(
ÉÉ+ ,
objs
ÉÉ, 0
,
ÉÉ0 1
msg
ÉÉ2 5
)
ÉÉ5 6
;
ÉÉ6 7
}
ÑÑ 	
public
ââ 
static
ââ 
void
ââ (
RegisterCompleteObjectUndo
ââ 5
(
ââ5 6
Object
ââ6 <
[
ââ< =
]
ââ= >
objs
ââ? C
,
ââC D
string
ââE K
msg
ââL O
)
ââO P
{
ää 	
Undo
ãã 
.
ãã (
RegisterCompleteObjectUndo
ãã +
(
ãã+ ,
objs
ãã, 0
,
ãã0 1
msg
ãã2 5
)
ãã5 6
;
ãã6 7
}
åå 	
public
ëë 
static
ëë 
void
ëë 
DestroyImmediate
ëë +
(
ëë+ ,
Object
ëë, 2
obj
ëë3 6
)
ëë6 7
{
íí 	
Undo
ìì 
.
ìì $
DestroyObjectImmediate
ìì '
(
ìì' (
obj
ìì( +
)
ìì+ ,
;
ìì, -
}
îî 	
public
ññ 
static
ññ 
void
ññ '
RegisterCreatedObjectUndo
ññ 4
(
ññ4 5
Object
ññ5 ;
obj
ññ< ?
,
ññ? @
string
ññA G
msg
ññH K
)
ññK L
{
óó 	
Undo
òò 
.
òò '
RegisterCreatedObjectUndo
òò *
(
òò* +
obj
òò+ .
,
òò. /
msg
òò0 3
)
òò3 4
;
òò4 5
}
ôô 	
public
õõ 
static
õõ 
void
õõ 
RecordComponents
õõ +
<
õõ+ ,
T0
õõ, .
,
õõ. /
T1
õõ0 2
>
õõ2 3
(
õõ3 4
IEnumerable
õõ4 ?
<
õõ? @
	Component
õõ@ I
>
õõI J
objs
õõK O
,
õõO P
string
õõQ W
message
õõX _
)
õõ_ `
where
úú 
T0
úú 
:
úú 
	Component
úú  
where
ùù 
T1
ùù 
:
ùù 
	Component
ùù  
{
ûû 	
List
üü 
<
üü 
Object
üü 
>
üü 
targets
üü  
=
üü! "
new
üü# &
List
üü' +
<
üü+ ,
Object
üü, 2
>
üü2 3
(
üü3 4
)
üü4 5
;
üü5 6
foreach
°° 
(
°° 
var
°° 
o
°° 
in
°° 
objs
°° "
)
°°" #
{
¢¢ 
var
££ 
t
££ 
=
££ 
o
££ 
.
££ 
GetComponent
££ &
<
££& '
T0
££' )
>
££) *
(
££* +
)
££+ ,
;
££, -
var
§§ 
k
§§ 
=
§§ 
o
§§ 
.
§§ 
GetComponent
§§ &
<
§§& '
T1
§§' )
>
§§) *
(
§§* +
)
§§+ ,
;
§§, -
if
¶¶ 
(
¶¶ 
t
¶¶ 
!=
¶¶ 
null
¶¶ 
)
¶¶ 
targets
ßß 
.
ßß 
Add
ßß 
(
ßß  
t
ßß  !
)
ßß! "
;
ßß" #
if
©© 
(
©© 
k
©© 
!=
©© 
null
©© 
)
©© 
targets
™™ 
.
™™ 
Add
™™ 
(
™™  
k
™™  !
)
™™! "
;
™™" #
}
´´ 
RecordObjects
≠≠ 
(
≠≠ 
targets
≠≠ !
,
≠≠! "
message
≠≠# *
)
≠≠* +
;
≠≠+ ,
}
ÆÆ 	
public
∞∞ 
static
∞∞ 
void
∞∞ 
RecordComponents
∞∞ +
<
∞∞+ ,
T0
∞∞, .
,
∞∞. /
T1
∞∞0 2
,
∞∞2 3
T2
∞∞4 6
>
∞∞6 7
(
∞∞7 8
IEnumerable
∞∞8 C
<
∞∞C D
	Component
∞∞D M
>
∞∞M N
objs
∞∞O S
,
∞∞S T
string
∞∞U [
message
∞∞\ c
)
∞∞c d
where
±± 
T0
±± 
:
±± 
	Component
±±  
where
≤≤ 
T1
≤≤ 
:
≤≤ 
	Component
≤≤  
where
≥≥ 
T2
≥≥ 
:
≥≥ 
	Component
≥≥  
{
¥¥ 	
List
µµ 
<
µµ 
Object
µµ 
>
µµ 
targets
µµ  
=
µµ! "
new
µµ# &
List
µµ' +
<
µµ+ ,
Object
µµ, 2
>
µµ2 3
(
µµ3 4
)
µµ4 5
;
µµ5 6
foreach
∑∑ 
(
∑∑ 
var
∑∑ 
o
∑∑ 
in
∑∑ 
objs
∑∑ "
)
∑∑" #
{
∏∏ 
var
ππ 
t0
ππ 
=
ππ 
o
ππ 
.
ππ 
GetComponent
ππ '
<
ππ' (
T0
ππ( *
>
ππ* +
(
ππ+ ,
)
ππ, -
;
ππ- .
var
∫∫ 
t1
∫∫ 
=
∫∫ 
o
∫∫ 
.
∫∫ 
GetComponent
∫∫ '
<
∫∫' (
T1
∫∫( *
>
∫∫* +
(
∫∫+ ,
)
∫∫, -
;
∫∫- .
var
ªª 
t2
ªª 
=
ªª 
o
ªª 
.
ªª 
GetComponent
ªª '
<
ªª' (
T2
ªª( *
>
ªª* +
(
ªª+ ,
)
ªª, -
;
ªª- .
if
ΩΩ 
(
ΩΩ 
t0
ΩΩ 
!=
ΩΩ 
null
ΩΩ 
)
ΩΩ 
targets
ææ 
.
ææ 
Add
ææ 
(
ææ  
t0
ææ  "
)
ææ" #
;
ææ# $
if
¿¿ 
(
¿¿ 
t1
¿¿ 
!=
¿¿ 
null
¿¿ 
)
¿¿ 
targets
¡¡ 
.
¡¡ 
Add
¡¡ 
(
¡¡  
t1
¡¡  "
)
¡¡" #
;
¡¡# $
if
√√ 
(
√√ 
t2
√√ 
!=
√√ 
null
√√ 
)
√√ 
targets
ƒƒ 
.
ƒƒ 
Add
ƒƒ 
(
ƒƒ  
t2
ƒƒ  "
)
ƒƒ" #
;
ƒƒ# $
}
≈≈ 
RecordObjects
«« 
(
«« 
targets
«« !
,
««! "
message
««# *
)
««* +
;
««+ ,
}
»» 	
}
…… 
}   ê
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\IconUtility.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
enum

 
IconSkin

	 
{ 
Default 
, 
Light 
, 
Pro 
} 
; 
static 

class 
IconUtility 
{ 
static 

Dictionary 
< 
string  
,  !
	Texture2D" +
>+ ,
s_Icons- 4
=5 6
new7 :

Dictionary; E
<E F
stringF L
,L M
	Texture2DN W
>W X
(X Y
)Y Z
;Z [
static 
string 
s_IconFolderPath &
=' (
$str) 9
;9 :
public 
static 
	Texture2D 
GetIcon  '
(' (
string( .
iconName/ 7
,7 8
IconSkin9 A
skinB F
=G H
IconSkinI Q
.Q R
DefaultR Y
)Y Z
{ 	
bool&& 

isDarkSkin&& 
=&& 
skin&& "
==&&# %
IconSkin&&& .
.&&. /
Default&&/ 6
?&&7 8
EditorGUIUtility&&9 I
.&&I J
	isProSkin&&J S
:&&T U
skin&&V Z
==&&[ ]
IconSkin&&^ f
.&&f g
Pro&&g j
;&&j k
string'' 
name'' 
='' 

isDarkSkin'' $
?''% &
iconName''' /
:''0 1
iconName''2 :
+''; <
$str''= E
;''E F
	Texture2D(( 
icon(( 
=(( 
null(( !
;((! "
if** 
(** 
!** 
s_Icons** 
.** 
TryGetValue** $
(**$ %
name**% )
,**) *
out**+ .
icon**/ 3
)**3 4
)**4 5
{++ 
int,, 
i,, 
=,, 
$num,, 
;,, 
do.. 
{// 
string33 
fullPath33 #
=33$ %
string33& ,
.33, -
Format33- 3
(333 4
$str334 @
,33@ A
s_IconFolderPath33B R
,33R S
i33T U
==33V X
$num33Y Z
?33[ \
name33] a
:33b c
iconName33d l
)33l m
;33m n
icon44 
=44 
FileUtility44 &
.44& '
LoadInternalAsset44' 8
<448 9
	Texture2D449 B
>44B C
(44C D
fullPath44D L
)44L M
;44M N
}55 
while66 
(66 
!66 

isDarkSkin66 "
&&66# %
++66& (
i66( )
<66* +
$num66, -
&&66. 0
icon661 5
==666 8
null669 =
)66= >
;66> ?
s_Icons88 
.88 
Add88 
(88 
name88  
,88  !
icon88" &
)88& '
;88' (
}99 
return;; 
icon;; 
;;; 
}<< 	
}== 
}>> ˛
äD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\Pref.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
sealed 

class 
Pref 
< 
T 
> 
: 
UserSetting &
<& '
T' (
>( )
{ 
public 
Pref 
( 
string 
key 
, 
T  !
value" '
,' (
SettingsScope) 6
scope7 <
== >
SettingsScope? L
.L M
ProjectM T
)T U
: 
base 
( 
ProBuilderSettings %
.% &
instance& .
,. /
key0 3
,3 4
value5 :
,: ;
scope< A
)A B
{		 	
}			 

public 
Pref 
( 
Settings 
settings %
,% &
string' -
key. 1
,1 2
T3 4
value5 :
,: ;
SettingsScope< I
scopeJ O
=P Q
SettingsScopeR _
._ `
Project` g
)g h
: 
base 
( 
settings 
, 
key  
,  !
value" '
,' (
scope) .
). /
{0 1
}1 2
public 
static 
implicit 
operator '
T( )
() *
Pref* .
<. /
T/ 0
>0 1
pref2 6
)6 7
{ 	
return 
pref 
. 
value 
; 
} 	
} 
} ñ
ìD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\BooleanEditor.cs≠7
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\TextureScaleTool.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
class 	
TextureScaleTool
 
: 
TextureTool (
{ 
Vector2 
m_Scale 
; 
float 
m_UniformScale 
; 
	protected

 
override

 
void

 
DoTool

  &
(

& '
Vector3

' .
handlePosition

/ =
,

= >

Quaternion

? I
handleRotation

J X
)

X Y
{ 	
if 
( 
! 
	isEditing 
) 
{ 
m_Scale 
. 
x 
= 
$num 
; 
m_Scale 
. 
y 
= 
$num 
; 
m_UniformScale 
=  
$num! #
;# $
} 
	EditorGUI 
. 
BeginChangeCheck &
(& '
)' (
;( )
var 
size 
= 
HandleUtility $
.$ %
GetHandleSize% 2
(2 3
handlePosition3 A
)A B
;B C
EditorHandleUtility 
.  

PushMatrix  *
(* +
)+ ,
;, -
Handles 
. 
matrix 
= 
	Matrix4x4 &
.& '
TRS' *
(* +
handlePosition+ 9
,9 :
handleRotation; I
,I J
Vector3K R
.R S
oneS V
)V W
;W X
var 
snap 
= 
relativeSnapEnabled *
? 
Vector3 
. 
one 
* "
ProBuilderSnapSettings  6
.6 7%
incrementalSnapScaleValue7 P
: 
worldSnapEnabled "
?# $
	snapValue% .
:/ 0
Vector31 8
.8 9
zero9 =
;= >
Handles 
. 
color 
= 
Color !
.! "
red" %
;% &
m_Scale   
.   
x   
=   
Handles   
.    
ScaleSlider    +
(  + ,
m_Scale  , 3
.  3 4
x  4 5
,  5 6
Vector3  7 >
.  > ?
zero  ? C
,  C D
Vector3  E L
.  L M
right  M R
,  R S

Quaternion  T ^
.  ^ _
identity  _ g
,  g h
size  i m
,  m n
snap  o s
.  s t
x  t u
)  u v
;  v w
Handles"" 
."" 
color"" 
="" 
Color"" !
.""! "
green""" '
;""' (
m_Scale## 
.## 
y## 
=## 
Handles## 
.##  
ScaleSlider##  +
(##+ ,
m_Scale##, 3
.##3 4
y##4 5
,##5 6
Vector3##7 >
.##> ?
zero##? C
,##C D
Vector3##E L
.##L M
up##M O
,##O P

Quaternion##Q [
.##[ \
identity##\ d
,##d e
size##f j
,##j k
snap##l p
.##p q
y##q r
)##r s
;##s t
Handles%% 
.%% 
color%% 
=%% 
Color%% !
.%%! "
blue%%" &
;%%& '
m_UniformScale&& 
=&& 
Handles&& $
.&&$ %
ScaleValueHandle&&% 5
(&&5 6
m_UniformScale&&6 D
,&&D E
Vector3&&F M
.&&M N
zero&&N R
,&&R S

Quaternion&&T ^
.&&^ _
identity&&_ g
,&&g h
size&&i m
,&&m n
Handles&&o v
.&&v w
CubeHandleCap	&&w Ñ
,
&&Ñ Ö
snap
&&Ü ä
.
&&ä ã
x
&&ã å
)
&&å ç
;
&&ç é
EditorHandleUtility(( 
.((  
	PopMatrix((  )
((() *
)((* +
;((+ ,
if** 
(** 
	EditorGUI** 
.** 
EndChangeCheck** (
(**( )
)**) *
)*** +
{++ 
if,, 
(,, 
!,, 
	isEditing,, 
),, 
	BeginEdit-- 
(-- 
$str-- .
)--. /
;--/ 0
var// 
delta// 
=// 
m_Scale// #
*//$ %
m_UniformScale//& 4
;//4 5
delta11 
.11 
x11 
=11 
$num11 
/11 
delta11 $
.11$ %
x11% &
;11& '
delta22 
.22 
y22 
=22 
$num22 
/22 
delta22 $
.22$ %
y22% &
;22& '
foreach44 
(44 
var44 
mesh44 !
in44" $
elementSelection44% 5
)445 6
{55 
if66 
(66 
!66 
(66 
mesh66 
is66 !
MeshAndTextures66" 1
)661 2
)662 3
continue77  
;77  !
var99 
mat99 
=99 
(99 
MeshAndTextures99 .
)99. /
mesh990 4
;994 5
var:: 
origins:: 
=::  !
mat::" %
.::% &
origins::& -
;::- .
var;; 
	positions;; !
=;;" #
mat;;$ '
.;;' (
textures;;( 0
;;;0 1
foreach== 
(== 
var==  
group==! &
in==' )
mesh==* .
.==. /
elementGroups==/ <
)==< =
{>> 
foreach?? 
(??  !
var??! $
index??% *
in??+ -
group??. 3
.??3 4
indices??4 ;
)??; <
	positions@@ %
[@@% &
index@@& +
]@@+ ,
=@@- .
mat@@/ 2
.@@2 3
postApplyMatrix@@3 B
.@@B C
MultiplyPoint@@C P
(@@P Q
Vector2AA$ +
.AA+ ,
ScaleAA, 1
(AA1 2
matAA2 5
.AA5 6
preApplyMatrixAA6 D
.AAD E
MultiplyPoint3x4AAE U
(AAU V
originsAAV ]
[AA] ^
indexAA^ c
]AAc d
)AAd e
,AAe f
deltaAAg l
)AAl m
)AAm n
;AAn o
}BB 
meshDD 
.DD 
meshDD 
.DD 
meshDD "
.DD" #
SetUVsDD# )
(DD) *
k_TextureChannelDD* :
,DD: ;
	positionsDD< E
)DDE F
;DDF G
}EE 
}FF 
}GG 	
}HH 
}II °.
öD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Object\MergeObjects.cs
	namespace

 	
UnityEditor


 
.

 

ProBuilder

  
.

  !
Actions

! (
{ 
sealed 

class 
MergeObjects 
: 

MenuAction  *
{ 
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Object& ,
;, -
}. /
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- C
,C D
IconSkinE M
.M N
ProN Q
)Q R
;R S
}T U
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str 
,  
$str   K
)!! 
;!! 
public## 
override## 
bool## 
enabled## $
{$$ 	
get%% 
{%% 
return%% 
base%% 
.%% 
enabled%% %
&&%%& (
MeshSelection%%) 6
.%%6 7
selectedObjectCount%%7 J
>%%K L
$num%%M N
&&%%O Q
MeshSelection%%R _
.%%_ `

activeMesh%%` j
!=%%k m
null%%n r
;%%r s
}%%t u
}&& 	
public(( 
override(( 
ActionResult(( $
DoAction((% -
(((- .
)((. /
{)) 	
if** 
(** 
MeshSelection** 
.** 
selectedObjectCount** 1
<**2 3
$num**4 5
)**5 6
return++ 
new++ 
ActionResult++ '
(++' (
ActionResult++( 4
.++4 5
Status++5 ;
.++; <
Canceled++< D
,++D E
$str++F ^
)++^ _
;++_ `
var-- 
selected-- 
=-- 
MeshSelection-- (
.--( )
top--) ,
.--, -
ToArray--- 4
(--4 5
)--5 6
;--6 7
ProBuilderMesh.. 
currentMesh.. &
=..' (
MeshSelection..) 6
...6 7

activeMesh..7 A
;..A B
UndoUtility// 
.// 
RecordObject// $
(//$ %
currentMesh//% 0
,//0 1
$str//2 A
)//A B
;//B C
List00 
<00 
ProBuilderMesh00 
>00  
res00! $
=00% &
CombineMeshes00' 4
.004 5
Combine005 <
(00< =
MeshSelection00= J
.00J K
topInternal00K V
,00V W
currentMesh00X c
)00c d
;00d e
if22 
(22 
res22 
!=22 
null22 
)22 
{33 
foreach44 
(44 
var44 
mesh44 !
in44" $
res44% (
)44( )
{55 
mesh66 
.66 
Optimize66 !
(66! "
)66" #
;66# $
if77 
(77 
mesh77 
!=77 
currentMesh77  +
)77+ ,
{88 
mesh99 
.99 

gameObject99 '
.99' (
name99( ,
=99- .
	Selection99/ 8
.998 9
activeGameObject999 I
.99I J
name99J N
+99O P
$str99Q Z
;99Z [
UndoUtility:: #
.::# $%
RegisterCreatedObjectUndo::$ =
(::= >
mesh::> B
.::B C

gameObject::C M
,::M N
$str::O ^
)::^ _
;::_ `
	Selection;; !
.;;! "
objects;;" )
=;;* +
res;;, /
.;;/ 0
Select;;0 6
(;;6 7
x;;7 8
=>;;9 ;
x;;< =
.;;= >

gameObject;;> H
);;H I
.;;I J
ToArray;;J Q
(;;Q R
);;R S
;;;S T
}<< 
}== 
for@@ 
(@@ 
int@@ 
i@@ 
=@@ 
$num@@ 
;@@ 
i@@  !
<@@" #
selected@@$ ,
.@@, -
Length@@- 3
;@@3 4
i@@5 6
++@@6 8
)@@8 9
{AA 
ifBB 
(BB 
selectedBB  
[BB  !
iBB! "
]BB" #
!=BB$ &
nullBB' +
&&BB, .
resBB/ 2
.BB2 3
ContainsBB3 ;
(BB; <
selectedBB< D
[BBD E
iBBE F
]BBF G
)BBG H
==BBI K
falseBBL Q
)BBQ R
UndoUtilityCC #
.CC# $
DestroyImmediateCC$ 4
(CC4 5
selectedCC5 =
[CC= >
iCC> ?
]CC? @
.CC@ A

gameObjectCCA K
)CCK L
;CCL M
}DD 
}EE 
ProBuilderEditorGG 
.GG 
RefreshGG $
(GG$ %
)GG% &
;GG& '
returnII 
newII 
ActionResultII #
(II# $
ActionResultII$ 0
.II0 1
StatusII1 7
.II7 8
SuccessII8 ?
,II? @
$strIIA Q
)IIQ R
;IIR S
}JJ 	
}KK 
}LL ÷!
†D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\TriangulateFaces.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
TriangulateFaces !
:" #

MenuAction$ .
{		 
public

 
override

 
ToolbarGroup

 $
group

% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Geometry& .
;. /
}0 1
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- G
,G H
IconSkinI Q
.Q R
ProR U
)U V
;V W
}X Y
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str #
,# $
$str =
) 
; 
public 
override 

SelectMode "
validSelectModes# 3
{   	
get!! 
{!! 
return!! 

SelectMode!! #
.!!# $
Face!!$ (
;!!( )
}!!* +
}"" 	
public$$ 
override$$ 
bool$$ 
enabled$$ $
{%% 	
get&& 
{&& 
return&& 
base&& 
.&& 
enabled&& %
&&&&& (
MeshSelection&&) 6
.&&6 7
selectedFaceCount&&7 H
>&&I J
$num&&K L
;&&L M
}&&N O
}'' 	
public)) 
override)) 
ActionResult)) $
DoAction))% -
())- .
))). /
{** 	
ActionResult++ 
res++ 
=++ 
ActionResult++ +
.+++ ,
NoSelection++, 7
;++7 8
UndoUtility-- 
.-- 
RecordSelection-- '
(--' (
$str--( ;
)--; <
;--< =
foreach// 
(// 
ProBuilderMesh// #
mesh//$ (
in//) +
MeshSelection//, 9
.//9 :
topInternal//: E
)//E F
{00 
mesh11 
.11 
ToMesh11 
(11 
)11 
;11 
Face22 
[22 
]22 
triangulatedFaces22 (
=22) *
mesh22+ /
.22/ 0
ToTriangles220 ;
(22; <
mesh22< @
.22@ A!
selectedFacesInternal22A V
)22V W
;22W X
mesh33 
.33 
Refresh33 
(33 
)33 
;33 
mesh44 
.44 
Optimize44 
(44 
)44 
;44  
mesh55 
.55 
SetSelectedFaces55 %
(55% &
triangulatedFaces55& 7
)557 8
;558 9
res66 
=66 
new66 
ActionResult66 &
(66& '
ActionResult66' 3
.663 4
Status664 :
.66: ;
Success66; B
,66B C
string66D J
.66J K
Format66K Q
(66Q R
$str66R h
,66h i
triangulatedFaces66j {
.66{ |
Length	66| Ç
,
66Ç É
triangulatedFaces
66Ñ ï
.
66ï ñ
Length
66ñ ú
<
66ù û
$num
66ü †
?
66° ¢
$str
66£ ©
:
66™ ´
$str
66¨ ≥
)
66≥ ¥
)
66¥ µ
;
66µ ∂
}77 
ProBuilderEditor99 
.99 
Refresh99 $
(99$ %
)99% &
;99& '
return;; 
res;; 
;;; 
}<< 	
}== 
}>> Ö=
ãD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\Model.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
sealed 

class 
Model 
{ 
public 
string 
name 
; 
public 
Vertex 
[ 
] 
vertices  
;  !
public 
Submesh 
[ 
] 
	submeshes "
;" #
public 
Material 
[ 
] 
	materials #
;# $
public 
	Matrix4x4 
matrix 
;  
public 
int 
vertexCount 
{ 	
get   
{!! 
return"" 
vertices"" 
==""  "
null""# '
?""( )
$num""* +
:"", -
vertices"". 6
.""6 7
Length""7 =
;""= >
}## 
}$$ 	
public)) 
int)) 
submeshCount)) 
{))  !
get))" %
{))& '
return))( .
	submeshes))/ 8
.))8 9
Length))9 ?
;))? @
}))A B
}))C D
public++ 
Model++ 
(++ 
)++ 
{,, 	
},,	 

public.. 
Model.. 
(.. 
string.. 
name..  
,..  !
Mesh.." &
mesh..' +
,..+ ,
Material..- 5
material..6 >
)..> ?
:..@ A
this..B F
(..F G
name..G K
,..K L
mesh..M Q
,..Q R
new..S V
Material..W _
[.._ `
]..` a
{..b c
material..d l
}..m n
,..n o
	Matrix4x4..p y
...y z
identity	..z Ç
)
..Ç É
{// 	
}//	 

public11 
Model11 
(11 
string11 
name11  
,11  !
Mesh11" &
mesh11' +
,11+ ,
Material11- 5
[115 6
]116 7
	materials118 A
,11A B
	Matrix4x411C L
matrix11M S
)11S T
{22 	
this33 
.33 
name33 
=33 
name33 
;33 
this44 
.44 
vertices44 
=44 
mesh44  
.44  !
GetVertices44! ,
(44, -
)44- .
;44. /
this55 
.55 
matrix55 
=55 
matrix55  
;55  !
this66 
.66 
	submeshes66 
=66 
new66  
Submesh66! (
[66( )
mesh66) -
.66- .
subMeshCount66. :
]66: ;
;66; <
this77 
.77 
	materials77 
=77 
new77  
Material77! )
[77) *
mesh77* .
.77. /
subMeshCount77/ ;
]77; <
;77< =
int88 
matCount88 
=88 
	materials88 $
!=88% '
null88( ,
?88- .
	materials88/ 8
.888 9
Length889 ?
:88@ A
$num88B C
;88C D
for:: 
(:: 
int:: 
submeshIndex:: !
=::" #
$num::$ %
;::% &
submeshIndex::' 3
<::4 5
mesh::6 :
.::: ;
subMeshCount::; G
;::G H
submeshIndex::I U
++::U W
)::W X
{;; 
	submeshes<< 
[<< 
submeshIndex<< &
]<<& '
=<<( )
new<<* -
Submesh<<. 5
(<<5 6
mesh<<6 :
,<<: ;
submeshIndex<<< H
)<<H I
;<<I J
if>> 
(>> 
matCount>> 
<>> 
$num>>  
)>>  !
	materials?? 
[?? 
submeshIndex?? *
]??* +
=??, -
BuiltinMaterials??. >
.??> ?
defaultMaterial??? N
;??N O
else@@ 
thisAA 
.AA 
	materialsAA "
[AA" #
submeshIndexAA# /
]AA/ 0
=AA1 2
	materialsAA3 <
[AA< =
MathAA= A
.AAA B
ClampAAB G
(AAG H
submeshIndexAAH T
,AAT U
$numAAV W
,AAW X
matCountAAY a
-AAb c
$numAAd e
)AAe f
]AAf g
;AAg h
}BB 
}CC 	
publicKK 
ModelKK 
(KK 
stringKK 
nameKK  
,KK  !
ProBuilderMeshKK" 0
meshKK1 5
,KK5 6
boolKK7 ;
quadsKK< A
=KKB C
trueKKD H
)KKH I
{LL 	
meshMM 
.MM 
ToMeshMM 
(MM 
quadsMM 
?MM 
MeshTopologyMM  ,
.MM, -
QuadsMM- 2
:MM3 4
MeshTopologyMM5 A
.MMA B
	TrianglesMMB K
)MMK L
;MML M
meshNN 
.NN 
RefreshNN 
(NN 
RefreshMaskNN $
.NN$ %
UVNN% '
|NN( )
RefreshMaskNN* 5
.NN5 6
ColorsNN6 <
|NN= >
RefreshMaskNN? J
.NNJ K
NormalsNNK R
|NNS T
RefreshMaskNNU `
.NN` a
TangentsNNa i
)NNi j
;NNj k
thisOO 
.OO 
nameOO 
=OO 
nameOO 
;OO 
verticesPP 
=PP 
meshPP 
.PP 
GetVerticesPP '
(PP' (
)PP( )
;PP) *
	submeshesQQ 
=QQ 
SubmeshQQ 
.QQ  
GetSubmeshesQQ  ,
(QQ, -
meshQQ- 1
.QQ1 2
facesInternalQQ2 ?
,QQ? @
MaterialUtilityQQA P
.QQP Q
GetMaterialCountQQQ a
(QQa b
meshQQb f
.QQf g
rendererQQg o
)QQo p
,QQp q
quadsQQr w
?QQx y
MeshTopology	QQz Ü
.
QQÜ á
Quads
QQá å
:
QQç é
MeshTopology
QQè õ
.
QQõ ú
	Triangles
QQú •
)
QQ• ¶
;
QQ¶ ß
	materialsRR 
=RR 
newRR 
MaterialRR $
[RR$ %
submeshCountRR% 1
]RR1 2
;RR2 3
forTT 
(TT 
intTT 
iTT 
=TT 
$numTT 
;TT 
iTT 
<TT 
submeshCountTT  ,
;TT, -
++TT. 0
iTT0 1
)TT1 2
	materialsUU 
[UU 
iUU 
]UU 
=UU 
meshUU #
.UU# $
rendererUU$ ,
.UU, -
sharedMaterialsUU- <
[UU< =
MathUU= A
.UUA B
ClampUUB G
(UUG H
iUUH I
,UUI J
$numUUK L
,UUL M
	materialsUUN W
.UUW X
LengthUUX ^
-UU_ `
$numUUa b
)UUb c
]UUc d
;UUd e
matrixWW 
=WW 
meshWW 
.WW 
	transformWW #
.WW# $
localToWorldMatrixWW$ 6
;WW6 7
meshXX 
.XX 
ToMeshXX 
(XX 
MeshTopologyXX $
.XX$ %
	TrianglesXX% .
)XX. /
;XX/ 0
meshYY 
.YY 
RefreshYY 
(YY 
)YY 
;YY 
meshZZ 
.ZZ 
OptimizeZZ 
(ZZ 
)ZZ 
;ZZ 
}[[ 	
}\\ 
}]] Û?
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\ExtrudeEdges.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
ExtrudeEdges 
: 

MenuAction  *
{ 
Pref		 
<		 
float		 
>		 !
m_ExtrudeEdgeDistance		 )
=		* +
new		, /
Pref		0 4
<		4 5
float		5 :
>		: ;
(		; <
$str		< S
,		S T
$num		U X
)		X Y
;		Y Z
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
GeometryG O
;O P
}Q R
}S T
public 
override 
	Texture2D !
icon" &
{' (
get) ,
{- .
return/ 5
IconUtility6 A
.A B
GetIconB I
(I J
$strJ `
,` a
IconSkinb j
.j k
Prok n
)n o
;o p
}q r
}s t
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
	s_Tooltip> G
;G H
}I J
}K L
	protected 
override 
bool 
hasFileMenuEntry  0
{1 2
get3 6
{7 8
return9 ?
false@ E
;E F
}G H
}I J
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str 
,  
$str }
,} ~
keyCommandSuper 
,  
$char! $
) 
; 
public 
override 

SelectMode "
validSelectModes# 3
{ 	
get 
{ 
return 

SelectMode #
.# $
Edge$ (
;( )
}* +
} 	
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
base 
. 
enabled %
&&& (
MeshSelection) 6
.6 7
selectedEdgeCount7 H
>I J
$numK L
;L M
}N O
} 	
	protected!! 
override!! 
MenuActionState!! *
optionsMenuState!!+ ;
{"" 	
get## 
{## 
return## 
MenuActionState## (
.##( )
VisibleAndEnabled##) :
;##: ;
}##< =
}$$ 	
	protected&& 
override&& 
void&& 
OnSettingsGUI&&  -
(&&- .
)&&. /
{'' 	
	GUILayout(( 
.(( 
Label(( 
((( 
$str(( .
,((. /
EditorStyles((0 <
.((< =
	boldLabel((= F
)((F G
;((G H
EditorGUILayout** 
.** 
HelpBox** #
(**# $
$str	**$ Ü
,
**Ü á
MessageType
**à ì
.
**ì î
Info
**î ò
)
**ò ô
;
**ô ö
	EditorGUI,, 
.,, 
BeginChangeCheck,, &
(,,& '
),,' (
;,,( )"
VertexManipulationTool.. "
..." #!
s_ExtrudeEdgesAsGroup..# 8
...8 9
value..9 >
=..? @
EditorGUILayout..A P
...P Q
Toggle..Q W
(..W X
$str..X b
,..b c"
VertexManipulationTool..d z
...z {"
s_ExtrudeEdgesAsGroup	..{ ê
)
..ê ë
;
..ë í!
m_ExtrudeEdgeDistance00 !
.00! "
value00" '
=00( )
EditorGUILayout00* 9
.009 :

FloatField00: D
(00D E
$str00E O
,00O P!
m_ExtrudeEdgeDistance00Q f
)00f g
;00g h
if22 
(22 
	EditorGUI22 
.22 
EndChangeCheck22 (
(22( )
)22) *
)22* +
ProBuilderSettings33 "
.33" #
Save33# '
(33' (
)33( )
;33) *
	GUILayout55 
.55 
FlexibleSpace55 #
(55# $
)55$ %
;55% &
if77 
(77 
	GUILayout77 
.77 
Button77  
(77  !
$str77! 0
)770 1
)771 2
DoAction88 
(88 
)88 
;88 
}99 	
public;; 
override;; 
ActionResult;; $
DoAction;;% -
(;;- .
);;. /
{<< 	
if== 
(== 
MeshSelection== 
.== 
selectedObjectCount== 1
<==2 3
$num==4 5
)==5 6
return>> 
ActionResult>> #
.>># $
NoSelection>>$ /
;>>/ 0
UndoUtility@@ 
.@@ 
RecordSelection@@ '
(@@' (
$str@@( 1
)@@1 2
;@@2 3
intBB 
extrudedFaceCountBB !
=BB" #
$numBB$ %
;BB% &
boolCC 
successCC 
=CC 
falseCC  
;CC  !
foreachEE 
(EE 
ProBuilderMeshEE #
pbEE$ &
inEE' )
MeshSelectionEE* 7
.EE7 8
topInternalEE8 C
)EEC D
{FF 
pbGG 
.GG 
ToMeshGG 
(GG 
)GG 
;GG 
pbHH 
.HH 
RefreshHH 
(HH 
RefreshMaskHH &
.HH& '
NormalsHH' .
)HH. /
;HH/ 0
ifJJ 
(JJ 
pbJJ 
.JJ 
selectedEdgeCountJJ (
<JJ) *
$numJJ+ ,
)JJ, -
continueKK 
;KK 
extrudedFaceCountMM !
+=MM" $
pbMM% '
.MM' (
selectedEdgeCountMM( 9
;MM9 :
EdgeOO 
[OO 
]OO 
newEdgesOO 
=OO  !
pbOO" $
.OO$ %
ExtrudeOO% ,
(OO, -
pbOO- /
.OO/ 0
selectedEdgesOO0 =
,OO= >!
m_ExtrudeEdgeDistancePP -
,PP- ."
VertexManipulationToolQQ .
.QQ. /!
s_ExtrudeEdgesAsGroupQQ/ D
,QQD E
ProBuilderEditorRR (
.RR( )%
s_AllowNonManifoldActionsRR) B
)RRB C
;RRC D
successTT 
|=TT 
newEdgesTT #
!=TT$ &
nullTT' +
;TT+ ,
ifVV 
(VV 
successVV 
)VV 
pbWW 
.WW 
SetSelectedEdgesWW '
(WW' (
newEdgesWW( 0
)WW0 1
;WW1 2
elseXX 
extrudedFaceCountYY %
-=YY& (
pbYY) +
.YY+ ,
selectedEdgeCountYY, =
;YY= >
pb[[ 
.[[ 
Rebuild[[ 
([[ 
)[[ 
;[[ 
}\\ 
ProBuilderEditor^^ 
.^^ 
Refresh^^ $
(^^$ %
)^^% &
;^^& '
if`` 
(`` 
extrudedFaceCount`` !
>``" #
$num``$ %
)``% &
returnaa 
newaa 
ActionResultaa '
(aa' (
ActionResultaa( 4
.aa4 5
Statusaa5 ;
.aa; <
Successaa< C
,aaC D
$straaE N
)aaN O
;aaO P
returncc 
newcc 
ActionResultcc #
(cc# $
ActionResultcc$ 0
.cc0 1
Statuscc1 7
.cc7 8
Canceledcc8 @
,cc@ A
$strccB \
)cc\ ]
;cc] ^
}dd 	
}ee 
}ff ˇÏ
éD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\UVEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
sealed 

class 
UVEditor 
: 
ConfigurableWindow .
{ 
ProBuilderEditor 
editor 
{ 	
get 
{ 
return 
ProBuilderEditor )
.) *
instance* 2
;2 3
}4 5
} 	
public 
override 
void 
AddItemsToMenu +
(+ ,
GenericMenu, 7
menu8 <
)< =
{   	
base!! 
.!! 
AddItemsToMenu!! 
(!!  
menu!!  $
)!!$ %
;!!% &
})) 	
public** 
static** 
UVEditor** 
instance** '
;**' (
const,, 
int,, 
LEFT_MOUSE_BUTTON,, #
=,,$ %
$num,,& '
;,,' (
const-- 
int-- 
RIGHT_MOUSE_BUTTON-- $
=--% &
$num--' (
;--( )
const.. 
int.. 
MIDDLE_MOUSE_BUTTON.. %
=..& '
$num..( )
;..) *
const// 
int// 
PAD// 
=// 
$num// 
;// 
const00 
float00 
SCROLL_MODIFIER00 #
=00$ %
$num00& (
;00( )
const11 
float11 
ALT_SCROLL_MODIFIER11 '
=11( )
$num11* .
;11. /
const22 
int22 
DOT_SIZE22 
=22 
$num22 
;22 
const33 
int33 
HALF_DOT33 
=33 
$num33 
;33 
const44 
int44 
HANDLE_SIZE44 
=44 
$num44  #
;44# $
const55 
int55 "
MIN_ACTION_WINDOW_SIZE55 (
=55) *
$num55+ .
;55. /
const66 
float66 
MIN_GRAPH_SCALE66 #
=66$ %
$num66& ,
;66, -
const77 
float77 
MAX_GRAPH_SCALE77 #
=77$ %
$num77& *
;77* +
const99 
float99 "
MAX_GRAPH_SCALE_SCROLL99 *
=99+ ,
$num99- 0
;990 1
const;; 
float;; &
MAX_PROXIMITY_SNAP_DIST_UV;; .
=;;/ 0
$num;;1 5
;;;5 6
const== 
float== *
MAX_PROXIMITY_SNAP_DIST_CANVAS== 2
===3 4
$num==5 8
;==8 9
const?? 
float?? 
MIN_DIST_MOUSE_EDGE?? '
=??( )
$num??* ,
;??, -
[BB 	
UserSettingBB	 
]BB 
staticCC 
PrefCC 
<CC 
floatCC 
>CC 
s_GridSnapIncrementCC .
=CC/ 0
newCC1 4
PrefCC5 9
<CC9 :
floatCC: ?
>CC? @
(CC@ A
$strCCA _
,CC_ `
$numCCa f
,CCf g
SettingsScopeCCh u
.CCu v
ProjectCCv }
)CC} ~
;CC~ 
[EE 	
UserSettingBlockEE	 
(EE 
$strEE %
)EE% &
]EE& '
staticFF 
voidFF 
UVEditorSettingsFF $
(FF$ %
stringFF% +
searchContextFF, 9
)FF9 :
{GG 	
s_GridSnapIncrementHH 
.HH  
valueHH  %
=HH& '
SettingsGUILayoutHH( 9
.HH9 :
SettingsSliderHH: H
(HHH I
UIHHI K
.HHK L
EditorGUIUtilityHHL \
.HH\ ]
TempContentHH] h
(HHh i
$strHHi t
)HHt u
,HHu v 
s_GridSnapIncrement	HHw ä
,
HHä ã
$num
HHå î
,
HHî ï
$num
HHñ ò
,
HHò ô
searchContext
HHö ß
)
HHß ®
;
HH® ©
}II 	
[LL 	
ShortcutLL	 
(LL 
$strLL 5
,LL5 6
typeofLL7 =
(LL= >
UVEditorLL> F
)LLF G
,LLG H
KeyCodeLLI P
.LLP Q
Alpha0LLQ W
)LLW X
]LLX Y
staticMM 
voidMM 
ResetCanvasShortcutMM '
(MM' (
)MM( )
{NN 	
ifOO 
(OO 
instanceOO 
!=OO 
nullOO 
)OO  
instancePP 
.PP 
ResetCanvasPP $
(PP$ %
)PP% &
;PP& '
}QQ 	
staticTT 
readonlyTT 
ColorTT  
DRAG_BOX_COLOR_BASICTT 2
=TT3 4
newTT5 8
ColorTT9 >
(TT> ?
$numTT? A
,TTA B
$numTTC F
,TTF G
$numTTH J
,TTJ K
$numTTL O
)TTO P
;TTP Q
staticUU 
readonlyUU 
ColorUU 
DRAG_BOX_COLOR_PROUU 0
=UU1 2
newUU3 6
ColorUU7 <
(UU< =
$numUU= ?
,UU? @
$numUUA D
,UUD E
$numUUF H
,UUH I
$numUUJ L
)UUL M
;UUM N
staticWW 
ColorWW 
DRAG_BOX_COLORWW #
{XX 	
getYY 
{YY 
returnYY 
EditorGUIUtilityYY )
.YY) *
	isProSkinYY* 3
?YY4 5
DRAG_BOX_COLOR_PROYY6 H
:YYI J 
DRAG_BOX_COLOR_BASICYYK _
;YY_ `
}YYa b
}ZZ 	
static\\ 
readonly\\ 
Color\\ 
HOVER_COLOR_MANUAL\\ 0
=\\1 2
new\\3 6
Color\\7 <
(\\< =
$num\\= ?
,\\? @
$num\\A E
,\\E F
$num\\G I
,\\I J
$num\\K O
)\\O P
;\\P Q
static]] 
readonly]] 
Color]] 
HOVER_COLOR_AUTO]] .
=]]/ 0
new]]1 4
Color]]5 :
(]]: ;
$num]]; =
,]]= >
$num]]? A
,]]A B
$num]]C E
,]]E F
$num]]G K
)]]K L
;]]L M
static__ 
readonly__ 
Color__ !
SELECTED_COLOR_MANUAL__ 3
=__4 5
new__6 9
Color__: ?
(__? @
$num__@ B
,__B C
$num__D H
,__H I
$num__J L
,__L M
$num__N R
)__R S
;__S T
static`` 
readonly`` 
Color`` 
SELECTED_COLOR_AUTO`` 1
=``2 3
new``4 7
Color``8 =
(``= >
$num``> @
,``@ A
$num``B G
,``G H
$num``I K
,``K L
$num``M Q
)``Q R
;``R S
publicee 
boolee 

ControlKeyee 
{ff 	
getgg 
{gg 
returngg 
Eventgg 
.gg 
currentgg &
.gg& '
	modifiersgg' 0
==gg1 3
EventModifiersgg4 B
.ggB C
ControlggC J
;ggJ K
}ggL M
}hh 	
publicjj 
booljj 
ShiftKeyjj 
{kk 	
getll 
{ll 
returnll 
Eventll 
.ll 
currentll &
.ll& '
	modifiersll' 0
==ll1 3
EventModifiersll4 B
.llB C
ShiftllC H
;llH I
}llJ K
}mm 	
Prefoo 
<oo 
booloo 
>oo !
m_ShowPreviewMaterialoo (
=oo) *
newoo+ .
Prefoo/ 3
<oo3 4
booloo4 8
>oo8 9
(oo9 :
$stroo: X
,ooX Y
trueooZ ^
,oo^ _
SettingsScopeoo` m
.oom n
Projectoon u
)oou v
;oov w
boolpp 6
*m_ShowPreviewMaterialCacheDuringScreenshotpp 7
;pp7 8
Colorvv 
GridColorPrimaryvv 
;vv 
Colorww  
BasicBackgroundColorww "
;ww" #
Colorxx 
UVColorPrimaryxx 
,xx 
UVColorSecondaryxx .
,xx. /!
UVColorGroupIndicatorxx0 E
;xxE F
	Texture2Dzz 
dotzz 
,zz 
icon_textureMode_on{{ %
,{{% & 
icon_textureMode_off|| &
,||& '
icon_sceneUV_on}} !
,}}! "
icon_sceneUV_off~~ "
;~~" #

GUIContent
ÄÄ #
gc_SceneViewUVHandles
ÄÄ (
=
ÄÄ) *
new
ÄÄ+ .

GUIContent
ÄÄ/ 9
(
ÄÄ9 :
$str
ÄÄ: <
,
ÄÄ< =
(
ÄÄ> ?
	Texture2D
ÄÄ? H
)
ÄÄH I
null
ÄÄI M
,
ÄÄM N
$strÄÄO Õ
)ÄÄÕ Œ
;ÄÄŒ œ

GUIContent
ÅÅ #
gc_ShowPreviewTexture
ÅÅ (
=
ÅÅ) *
new
ÅÅ+ .

GUIContent
ÅÅ/ 9
(
ÅÅ9 :
$str
ÅÅ: <
,
ÅÅ< =
(
ÅÅ> ?
	Texture2D
ÅÅ? H
)
ÅÅH I
null
ÅÅI M
,
ÅÅM N
$strÅÅO î
)ÅÅî ï
;ÅÅï ñ

GUIContent
ÉÉ  
gc_ConvertToManual
ÉÉ %
=
ÉÉ& '
new
ÉÉ( +

GUIContent
ÉÉ, 6
(
ÉÉ6 7
$str
ÉÉ7 J
,
ÉÉJ K
$strÉÉL ˙
)ÉÉ˙ ˚
;ÉÉ˚ ¸

GUIContent
ÑÑ 
gc_ConvertToAuto
ÑÑ #
=
ÑÑ$ %
new
ÑÑ& )

GUIContent
ÑÑ* 4
(
ÑÑ4 5
$str
ÑÑ5 F
,
ÑÑF G
$strÑÑH ˆ
)ÑÑˆ ˜
;ÑÑ˜ ¯

GUIContent
ÖÖ 
gc_NoUvSelected
ÖÖ "
=
ÖÖ# $
new
ÖÖ% (

GUIContent
ÖÖ) 3
(
ÖÖ3 4
$str
ÖÖ4 E
)
ÖÖE F
;
ÖÖF G

GUIContent
áá 
gc_RenderUV
áá 
=
áá  
new
áá! $

GUIContent
áá% /
(
áá/ 0
(
áá0 1
	Texture2D
áá1 :
)
áá: ;
null
áá; ?
,
áá? @
$strááA ï
)ááï ñ
;ááñ ó
int
ää 

uvGridSize
ää 
=
ää 
$num
ää 
;
ää 
float
ãã 
uvGraphScale
ãã 
=
ãã 
$num
ãã 
;
ãã  
enum
çç 
UVMode
çç 
{
éé 	
Auto
èè 
,
èè 
Manual
êê 
,
êê 
Mixed
ëë 
,
ëë 
NoSelection
íí 
,
íí 
}
ìì 	
;
ìì	 

UVMode
ïï 
mode
ïï 
=
ïï 
UVMode
ïï 
.
ïï 
Auto
ïï !
;
ïï! "
int
óó 
[
óó 
]
óó 
UV_CHANNELS
óó 
=
óó 
new
óó 
int
óó  #
[
óó# $
]
óó$ %
{
óó& '
$num
óó( )
,
óó) *
$num
óó+ ,
,
óó, -
$num
óó. /
,
óó/ 0
$num
óó1 2
}
óó3 4
;
óó4 5
string
òò 
[
òò 
]
òò 
UV_CHANNELS_STR
òò  
=
òò! "
new
òò# &
string
òò' -
[
òò- .
]
òò. /
{
òò0 1
$str
òò2 8
,
òò8 9
$str
òò: L
,
òòL M
$str
òòN `
,
òò` a
$str
òòb t
}
òòu v
;
òòv w
int
üü 
channel
üü 
=
üü 
$num
üü 
;
üü 
private
°° 
Vector2
°° 
uvGraphOffset
°° %
=
°°& '
Vector2
°°( /
.
°°/ 0
zero
°°0 4
;
°°4 5
ProBuilderMesh
§§ 
[
§§ 
]
§§ 
	selection
§§ "
;
§§" #
int
•• 
[
•• 
]
•• 
[
•• 
]
•• (
m_DistinctIndexesSelection
•• *
;
••* +
List
ßß 
<
ßß 
Face
ßß 
[
ßß 
]
ßß 
>
ßß 
[
ßß 
]
ßß 0
"incompleteTextureGroupsInSelection
ßß 9
=
ßß: ;
new
ßß< ?
List
ßß@ D
<
ßßD E
Face
ßßE I
[
ßßI J
]
ßßJ K
>
ßßK L
[
ßßL M
$num
ßßM N
]
ßßN O
;
ßßO P
List
®® 
<
®® 
List
®® 
<
®® 
Vector2
®® 
>
®® 
>
®® ;
-incompleteTextureGroupsInSelection_CoordCache
®® I
=
®®J K
new
®®L O
List
®®P T
<
®®T U
List
®®U Y
<
®®Y Z
Vector2
®®Z a
>
®®a b
>
®®b c
(
®®c d
)
®®d e
;
®®e f
int
™™ 
screenWidth
™™ 
,
™™ 
screenHeight
™™ %
;
™™% &
bool
≠≠ 
modifyingUVs
≠≠ 
=
≠≠ 
false
≠≠ !
;
≠≠! "
bool
∞∞ 
eatNextKeyUp
∞∞ 
=
∞∞ 
false
∞∞ !
;
∞∞! "
Material
≥≥ 
m_PreviewMaterial
≥≥ "
;
≥≥" #
Tool
µµ 
tool
µµ 
=
µµ 
Tool
µµ 
.
µµ 
Move
µµ 
;
µµ 

GUIContent
∑∑ 
[
∑∑ 
]
∑∑ 
	ToolIcons
∑∑ 
;
∑∑ 
struct
ππ  
ObjectElementIndex
ππ !
{
∫∫ 	
public
ªª 
int
ªª 
objectIndex
ªª "
;
ªª" #
public
ºº 
int
ºº 
elementIndex
ºº #
;
ºº# $
public
ΩΩ 
int
ΩΩ 
elementSubIndex
ΩΩ &
;
ΩΩ& '
public
ææ 
bool
ææ 
valid
ææ 
;
ææ 
public
¿¿ 
void
¿¿ 
Clear
¿¿ 
(
¿¿ 
)
¿¿ 
{
¡¡ 
this
¬¬ 
.
¬¬ 
objectIndex
¬¬  
=
¬¬! "
-
¬¬# $
$num
¬¬$ %
;
¬¬% &
this
√√ 
.
√√ 
elementIndex
√√ !
=
√√" #
-
√√$ %
$num
√√% &
;
√√& '
this
ƒƒ 
.
ƒƒ 
elementSubIndex
ƒƒ $
=
ƒƒ% &
-
ƒƒ' (
$num
ƒƒ( )
;
ƒƒ) *
this
≈≈ 
.
≈≈ 
valid
≈≈ 
=
≈≈ 
false
≈≈ "
;
≈≈" #
}
∆∆ 
public
»»  
ObjectElementIndex
»» %
(
»»% &
int
»»& )
obj
»»* -
,
»»- .
int
»»/ 2
elem
»»3 7
,
»»7 8
int
»»9 <
sub
»»= @
)
»»@ A
{
…… 
this
   
.
   
objectIndex
    
=
  ! "
obj
  # &
;
  & '
this
ÀÀ 
.
ÀÀ 
elementIndex
ÀÀ !
=
ÀÀ" #
elem
ÀÀ$ (
;
ÀÀ( )
this
ÃÃ 
.
ÃÃ 
elementSubIndex
ÃÃ $
=
ÃÃ% &
sub
ÃÃ' *
;
ÃÃ* +
this
ÕÕ 
.
ÕÕ 
valid
ÕÕ 
=
ÕÕ 
false
ÕÕ "
;
ÕÕ" #
}
ŒŒ 
public
–– 
bool
–– 
Equals
–– 
(
––  
ObjectElementIndex
–– 1
oei
––2 5
)
––5 6
{
—— 
return
““ 
this
““ 
.
““ 
objectIndex
““ '
==
““( *
oei
““+ .
.
““. /
objectIndex
““/ :
&&
““; =
this
”” 
.
”” 
elementIndex
”” %
==
””& (
oei
””) ,
.
””, -
elementIndex
””- 9
&&
””: <
this
‘‘ 
.
‘‘ 
elementSubIndex
‘‘ (
==
‘‘) +
oei
‘‘, /
.
‘‘/ 0
elementSubIndex
‘‘0 ?
&&
‘‘@ B
this
’’ 
.
’’ 
valid
’’ 
==
’’ !
oei
’’" %
.
’’% &
valid
’’& +
;
’’+ ,
}
÷÷ 
public
ÿÿ 
override
ÿÿ 
string
ÿÿ "
ToString
ÿÿ# +
(
ÿÿ+ ,
)
ÿÿ, -
{
ŸŸ 
return
⁄⁄ 
valid
⁄⁄ 
?
⁄⁄ 
objectIndex
⁄⁄ *
+
⁄⁄+ ,
$str
⁄⁄- 2
+
⁄⁄3 4
elementIndex
⁄⁄5 A
+
⁄⁄B C
$str
⁄⁄D J
+
⁄⁄K L
elementSubIndex
⁄⁄M \
:
⁄⁄] ^
$str
⁄⁄_ h
;
⁄⁄h i
}
€€ 
}
‹‹ 	 
ObjectElementIndex
ﬁﬁ 
nearestElement
ﬁﬁ )
=
ﬁﬁ* +
new
ﬁﬁ, / 
ObjectElementIndex
ﬁﬁ0 B
(
ﬁﬁB C
-
ﬁﬁC D
$num
ﬁﬁD E
,
ﬁﬁE F
-
ﬁﬁG H
$num
ﬁﬁH I
,
ﬁﬁI J
-
ﬁﬁK L
$num
ﬁﬁL M
)
ﬁﬁM N
;
ﬁﬁN O
public
‚‚ 
static
‚‚ 
void
‚‚ 
MenuOpenUVEditor
‚‚ +
(
‚‚+ ,
)
‚‚, -
{
„„ 	
	GetWindow
‰‰ 
<
‰‰ 
UVEditor
‰‰ 
>
‰‰ 
(
‰‰  
$str
‰‰  +
)
‰‰+ ,
;
‰‰, -
}
ÂÂ 	
void
ÁÁ 
ScreenshotMenu
ÁÁ 
(
ÁÁ 
)
ÁÁ 
{
ËË 	
UVRenderOptions
ÛÛ 
renderOptions
ÛÛ )
=
ÛÛ* +
(
ÛÛ, -
UVRenderOptions
ÛÛ- <
)
ÛÛ< =
ScriptableObject
ÛÛ= M
.
ÛÛM N
CreateInstance
ÛÛN \
(
ÛÛ\ ]
typeof
ÛÛ] c
(
ÛÛc d
UVRenderOptions
ÛÛd s
)
ÛÛs t
)
ÛÛt u
;
ÛÛu v
renderOptions
ÙÙ 
.
ÙÙ 

screenFunc
ÙÙ $
=
ÙÙ% & 
InitiateScreenshot
ÙÙ' 9
;
ÙÙ9 :
renderOptions
ıı 
.
ıı 
ShowAsDropDown
ıı (
(
ıı( )
new
ıı) ,
Rect
ıı- 1
(
ıı1 2
this
ıı2 6
.
ıı6 7
position
ıı7 ?
.
ıı? @
x
ıı@ A
+
ııB C
$num
ııD G
,
ııG H
this
ˆˆ 
.
ˆˆ 
position
ˆˆ !
.
ˆˆ! "
y
ˆˆ" #
+
ˆˆ$ %
$num
ˆˆ& (
,
ˆˆ( )
$num
˜˜ 
,
˜˜ 
$num
¯¯ 
)
¯¯ 
,
¯¯ 
new
˘˘ 
Vector2
˘˘ 
(
˘˘ 
$num
˘˘ 
,
˘˘  
$num
˘˘! $
)
˘˘$ %
)
˘˘% &
;
˘˘& '
}
˚˚ 	
void
ÄÄ 
OnEnable
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 	
this
ÇÇ 
.
ÇÇ 
minSize
ÇÇ 
=
ÇÇ 
new
ÇÇ 
Vector2
ÇÇ &
(
ÇÇ& '
$num
ÇÇ' +
,
ÇÇ+ ,
$num
ÇÇ- 1
)
ÇÇ1 2
;
ÇÇ2 3
InitGUI
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
this
ÜÜ 
.
ÜÜ 
wantsMouseMove
ÜÜ 
=
ÜÜ  !
true
ÜÜ" &
;
ÜÜ& '
this
áá 
.
áá &
autoRepaintOnSceneChange
áá )
=
áá* +
true
áá, 0
;
áá0 1
MeshSelection
ââ 
.
ââ $
objectSelectionChanged
ââ 0
+=
ââ1 3$
ObjectSelectionChanged
ââ4 J
;
ââJ K
ProBuilderEditor
ää 
.
ää 
selectModeChanged
ää .
+=
ää/ 1
SelectModeChanged
ää2 C
;
ääC D
ProBuilderMesh
ãã 
.
ãã %
elementSelectionChanged
ãã 2
+=
ãã3 5%
ElementSelectionChanged
ãã6 M
;
ããM N"
ProBuilderMeshEditor
åå  
.
åå  !#
onGetFrameBoundsEvent
åå! 6
+=
åå7 9#
OnGetFrameBoundsEvent
åå: O
;
ååO P
Undo
çç 
.
çç 
undoRedoPerformed
çç "
+=
çç# %$
ObjectSelectionChanged
çç& <
;
çç< =$
ObjectSelectionChanged
èè "
(
èè" #
)
èè# $
;
èè$ %
instance
êê 
=
êê 
this
êê 
;
êê 
nearestElement
ëë 
.
ëë 
Clear
ëë  
(
ëë  !
)
ëë! "
;
ëë" #
}
íí 	
void
îî 
	OnDisable
îî 
(
îî 
)
îî 
{
ïï 	
instance
ññ 
=
ññ 
null
ññ 
;
ññ 
if
òò 
(
òò 
ProBuilderEditor
òò  
.
òò  !

selectMode
òò! +
==
òò, .

SelectMode
òò/ 9
.
òò9 :
TextureFace
òò: E
)
òòE F
ProBuilderEditor
ôô  
.
ôô  !#
ResetToLastSelectMode
ôô! 6
(
ôô6 7
)
ôô7 8
;
ôô8 9
if
õõ 
(
õõ 
	uv2Editor
õõ 
!=
õõ 
null
õõ !
)
õõ! "
DestroyImmediate
úú  
(
úú  !
	uv2Editor
úú! *
)
úú* +
;
úú+ ,
MeshSelection
ûû 
.
ûû $
objectSelectionChanged
ûû 0
-=
ûû1 3$
ObjectSelectionChanged
ûû4 J
;
ûûJ K
ProBuilderMesh
üü 
.
üü %
elementSelectionChanged
üü 2
-=
üü3 5%
ElementSelectionChanged
üü6 M
;
üüM N
ProBuilderEditor
†† 
.
†† 
selectModeChanged
†† .
-=
††/ 1
SelectModeChanged
††2 C
;
††C D"
ProBuilderMeshEditor
°°  
.
°°  !#
onGetFrameBoundsEvent
°°! 6
-=
°°7 9#
OnGetFrameBoundsEvent
°°: O
;
°°O P
Undo
¢¢ 
.
¢¢ 
undoRedoPerformed
¢¢ "
-=
¢¢# %$
ObjectSelectionChanged
¢¢& <
;
¢¢< =
}
££ 	
void
®® 
InitGUI
®® 
(
®® 
)
®® 
{
©© 	
bool
™™ 
	isProSkin
™™ 
=
™™ 
true
™™ !
;
™™! "
GridColorPrimary
¨¨ 
=
¨¨ 
	isProSkin
¨¨ (
?
¨¨) *
new
¨¨+ .
Color
¨¨/ 4
(
¨¨4 5
$num
¨¨5 7
,
¨¨7 8
$num
¨¨9 ;
,
¨¨; <
$num
¨¨= ?
,
¨¨? @
$num
¨¨A D
)
¨¨D E
:
¨¨F G
new
¨¨H K
Color
¨¨L Q
(
¨¨Q R
$num
¨¨R T
,
¨¨T U
$num
¨¨V X
,
¨¨X Y
$num
¨¨Z \
,
¨¨\ ]
$num
¨¨^ a
)
¨¨a b
;
¨¨b c
UVColorPrimary
≠≠ 
=
≠≠ 
	isProSkin
≠≠ &
?
≠≠' (
Color
≠≠) .
.
≠≠. /
green
≠≠/ 4
:
≠≠5 6
new
≠≠7 :
Color
≠≠; @
(
≠≠@ A
$num
≠≠A C
,
≠≠C D
$num
≠≠E H
,
≠≠H I
$num
≠≠J L
,
≠≠L M
$num
≠≠N P
)
≠≠P Q
;
≠≠Q R
UVColorSecondary
ÆÆ 
=
ÆÆ 
	isProSkin
ÆÆ (
?
ÆÆ) *
new
ÆÆ+ .
Color
ÆÆ/ 4
(
ÆÆ4 5
$num
ÆÆ5 7
,
ÆÆ7 8
$num
ÆÆ9 ;
,
ÆÆ; <
$num
ÆÆ= ?
,
ÆÆ? @
$num
ÆÆA D
)
ÆÆD E
:
ÆÆF G
Color
ÆÆH M
.
ÆÆM N
blue
ÆÆN R
;
ÆÆR S#
UVColorGroupIndicator
ØØ !
=
ØØ" #
	isProSkin
ØØ$ -
?
ØØ. /
new
ØØ0 3
Color
ØØ4 9
(
ØØ9 :
$num
ØØ: <
,
ØØ< =
$num
ØØ> @
,
ØØ@ A
$num
ØØB E
,
ØØE F
$num
ØØG K
)
ØØK L
:
ØØM N
new
ØØO R
Color
ØØS X
(
ØØX Y
$num
ØØY [
,
ØØ[ \
$num
ØØ] _
,
ØØ_ `
$num
ØØa d
,
ØØd e
$num
ØØf i
)
ØØi j
;
ØØj k"
BasicBackgroundColor
∞∞  
=
∞∞! "
new
∞∞# &
Color
∞∞' ,
(
∞∞, -
$num
∞∞- 1
,
∞∞1 2
$num
∞∞3 7
,
∞∞7 8
$num
∞∞9 =
,
∞∞= >
$num
∞∞? A
)
∞∞A B
;
∞∞B C
dot
≤≤ 
=
≤≤ 
EditorGUIUtility
≤≤ "
.
≤≤" #
whiteTexture
≤≤# /
;
≤≤/ 0

MethodInfo
¥¥ 
loadIconMethod
¥¥ %
=
¥¥& '
typeof
¥¥( .
(
¥¥. /
EditorGUIUtility
¥¥/ ?
)
¥¥? @
.
¥¥@ A
	GetMethod
¥¥A J
(
¥¥J K
$str
¥¥K U
,
¥¥U V
BindingFlags
¥¥W c
.
¥¥c d
Static
¥¥d j
|
¥¥k l
BindingFlags
¥¥m y
.
¥¥y z
	NonPublic¥¥z É
|¥¥Ñ Ö
BindingFlags¥¥Ü í
.¥¥í ì 
FlattenHierarchy¥¥ì £
)¥¥£ §
;¥¥§ •
	isProSkin
∂∂ 
=
∂∂ 
EditorGUIUtility
∂∂ (
.
∂∂( )
	isProSkin
∂∂) 2
;
∂∂2 3
	Texture2D
∏∏ 
moveIcon
∏∏ 
=
∏∏  
(
∏∏! "
	Texture2D
∏∏" +
)
∏∏+ ,
loadIconMethod
∏∏, :
.
∏∏: ;
Invoke
∏∏; A
(
∏∏A B
null
∏∏B F
,
∏∏F G
new
∏∏H K
object
∏∏L R
[
∏∏R S
]
∏∏S T
{
∏∏U V
$str
∏∏W a
}
∏∏b c
)
∏∏c d
;
∏∏d e
	Texture2D
ππ 

rotateIcon
ππ  
=
ππ! "
(
ππ# $
	Texture2D
ππ$ -
)
ππ- .
loadIconMethod
ππ. <
.
ππ< =
Invoke
ππ= C
(
ππC D
null
ππD H
,
ππH I
new
ππJ M
object
ππN T
[
ππT U
]
ππU V
{
ππW X
$str
ππY e
}
ππf g
)
ππg h
;
ππh i
	Texture2D
∫∫ 
	scaleIcon
∫∫ 
=
∫∫  !
(
∫∫" #
	Texture2D
∫∫# ,
)
∫∫, -
loadIconMethod
∫∫- ;
.
∫∫; <
Invoke
∫∫< B
(
∫∫B C
null
∫∫C G
,
∫∫G H
new
∫∫I L
object
∫∫M S
[
∫∫S T
]
∫∫T U
{
∫∫V W
$str
∫∫X c
}
∫∫d e
)
∫∫e f
;
∫∫f g
	Texture2D
ªª 
viewIcon
ªª 
=
ªª  
(
ªª! "
	Texture2D
ªª" +
)
ªª+ ,
loadIconMethod
ªª, :
.
ªª: ;
Invoke
ªª; A
(
ªªA B
null
ªªB F
,
ªªF G
new
ªªH K
object
ªªL R
[
ªªR S
]
ªªS T
{
ªªU V
$str
ªªW e
}
ªªf g
)
ªªg h
;
ªªh i!
icon_textureMode_on
ΩΩ 
=
ΩΩ  !
IconUtility
ΩΩ" -
.
ΩΩ- .
GetIcon
ΩΩ. 5
(
ΩΩ5 6
$str
ΩΩ6 `
,
ΩΩ` a
IconSkin
ΩΩb j
.
ΩΩj k
Pro
ΩΩk n
)
ΩΩn o
;
ΩΩo p"
icon_textureMode_off
ææ  
=
ææ! "
IconUtility
ææ# .
.
ææ. /
GetIcon
ææ/ 6
(
ææ6 7
$str
ææ7 b
,
ææb c
IconSkin
ææd l
.
ææl m
Pro
ææm p
)
ææp q
;
ææq r
icon_sceneUV_on
¿¿ 
=
¿¿ 
IconUtility
¿¿ )
.
¿¿) *
GetIcon
¿¿* 1
(
¿¿1 2
$str
¿¿2 V
,
¿¿V W
IconSkin
¿¿X `
.
¿¿` a
Pro
¿¿a d
)
¿¿d e
;
¿¿e f
icon_sceneUV_off
¡¡ 
=
¡¡ 
IconUtility
¡¡ *
.
¡¡* +
GetIcon
¡¡+ 2
(
¡¡2 3
$str
¡¡3 X
,
¡¡X Y
IconSkin
¡¡Z b
.
¡¡b c
Pro
¡¡c f
)
¡¡f g
;
¡¡g h
gc_RenderUV
√√ 
.
√√ 
image
√√ 
=
√√ 
IconUtility
√√  +
.
√√+ ,
GetIcon
√√, 3
(
√√3 4
$str
√√4 K
)
√√K L
;
√√L M
	ToolIcons
≈≈ 
=
≈≈ 
new
≈≈ 

GUIContent
≈≈ &
[
≈≈& '
$num
≈≈' (
]
≈≈( )
{
∆∆ 
new
«« 

GUIContent
«« 
(
«« 
viewIcon
«« '
,
««' (
$str
««) 4
)
««4 5
,
««5 6
new
»» 

GUIContent
»» 
(
»» 
moveIcon
»» '
,
»»' (
$str
»») 4
)
»»4 5
,
»»5 6
new
…… 

GUIContent
…… 
(
…… 

rotateIcon
…… )
,
……) *
$str
……+ 8
)
……8 9
,
……9 :
new
   

GUIContent
   
(
   
	scaleIcon
   (
,
  ( )
$str
  * 6
)
  6 7
}
ÀÀ 
;
ÀÀ 
}
ÃÃ 	
const
—— 
int
—— )
k_UVInspectorWidthMinManual
—— -
=
——. /
$num
——0 3
;
——3 4
const
““ 
int
““ '
k_UVInspectorWidthMinAuto
““ +
=
““, -
$num
““. 1
;
““1 2
const
”” 
int
””  
k_UVInspectorWidth
”” $
=
””% &
$num
””' *
;
””* +
const
’’ 
int
’’ *
k_UVInspectorHeightMinManual
’’ .
=
’’/ 0
$num
’’1 3
;
’’3 4
const
÷÷ 
int
÷÷ (
k_UVInspectorHeightMinAuto
÷÷ ,
=
÷÷- .
$num
÷÷/ 2
;
÷÷2 3
int
ÿÿ #
minimumInspectorWidth
ÿÿ !
{
ŸŸ 	
get
⁄⁄ 
{
⁄⁄ 
return
⁄⁄ 
(
⁄⁄ 
mode
⁄⁄ 
==
⁄⁄ !
UVMode
⁄⁄" (
.
⁄⁄( )
Auto
⁄⁄) -
?
⁄⁄. /'
k_UVInspectorWidthMinAuto
⁄⁄0 I
:
⁄⁄J K)
k_UVInspectorWidthMinManual
⁄⁄L g
)
⁄⁄g h
;
⁄⁄h i
}
⁄⁄j k
}
€€ 	
int
›› $
minimumInspectorHeight
›› "
{
ﬁﬁ 	
get
ﬂﬂ 
{
ﬂﬂ 
return
ﬂﬂ 
(
ﬂﬂ 
mode
ﬂﬂ 
==
ﬂﬂ !
UVMode
ﬂﬂ" (
.
ﬂﬂ( )
Auto
ﬂﬂ) -
?
ﬂﬂ. /(
k_UVInspectorHeightMinAuto
ﬂﬂ0 J
:
ﬂﬂK L*
k_UVInspectorHeightMinManual
ﬂﬂM i
)
ﬂﬂi j
;
ﬂﬂj k
}
ﬂﬂl m
}
‡‡ 	
Rect
·· 
	graphRect
·· 
,
·· 
toolbarRect
‚‚ 
,
‚‚ 
actionWindowRect
„„ 
=
„„ 
new
„„  #
Rect
„„$ (
(
„„( )
$num
„„) *
,
„„* +
$num
„„, .
,
„„. / 
k_UVInspectorWidth
„„0 B
,
„„B C
$num
„„D G
)
„„G H
;
„„H I
Vector2
ÂÂ #
mousePosition_initial
ÂÂ %
;
ÂÂ% &
Rect
ÁÁ 
dragRect
ÁÁ 
=
ÁÁ 
new
ÁÁ 
Rect
ÁÁ  
(
ÁÁ  !
$num
ÁÁ! "
,
ÁÁ" #
$num
ÁÁ$ %
,
ÁÁ% &
$num
ÁÁ' (
,
ÁÁ( )
$num
ÁÁ* +
)
ÁÁ+ ,
;
ÁÁ, -
bool
ËË 
m_mouseDragging
ËË 
=
ËË 
false
ËË $
;
ËË$ %
bool
ÍÍ 
needsRepaint
ÍÍ 
=
ÍÍ 
false
ÍÍ !
;
ÍÍ! "
Rect
ÎÎ 

ScreenRect
ÎÎ 
=
ÎÎ 
new
ÎÎ 
Rect
ÎÎ "
(
ÎÎ" #
$num
ÎÎ# %
,
ÎÎ% &
$num
ÎÎ' )
,
ÎÎ) *
$num
ÎÎ+ -
,
ÎÎ- .
$num
ÎÎ/ 1
)
ÎÎ1 2
;
ÎÎ2 3
enum
ÌÌ 
ScreenshotStatus
ÌÌ 
{
ÓÓ 	
PrepareCanvas
ÔÔ 
,
ÔÔ 
CanvasReady
 
,
 
RenderComplete
ÒÒ 
,
ÒÒ 
Done
ÚÚ 
}
ÛÛ 	
ScreenshotStatus
ıı 
screenshotStatus
ıı )
=
ıı* +
ScreenshotStatus
ıı, <
.
ıı< =
Done
ıı= A
;
ııA B
void
˜˜ 
OnGUI
˜˜ 
(
˜˜ 
)
˜˜ 
{
¯¯ 	
if
˘˘ 
(
˘˘ 
screenshotStatus
˘˘  
!=
˘˘! #
ScreenshotStatus
˘˘$ 4
.
˘˘4 5
Done
˘˘5 9
)
˘˘9 :
{
˙˙ 
minSize
˚˚ 
=
˚˚ 
new
˚˚ 
Vector2
˚˚ %
(
˚˚% &

ScreenRect
˚˚& 0
.
˚˚0 1
width
˚˚1 6
,
˚˚6 7

ScreenRect
˚˚8 B
.
˚˚B C
height
˚˚C I
)
˚˚I J
;
˚˚J K
maxSize
¸¸ 
=
¸¸ 
new
¸¸ 
Vector2
¸¸ %
(
¸¸% &

ScreenRect
¸¸& 0
.
¸¸0 1
width
¸¸1 6
,
¸¸6 7

ScreenRect
¸¸8 B
.
¸¸B C
height
¸¸C I
)
¸¸I J
;
¸¸J K
UI
˛˛ 
.
˛˛ 
EditorGUIUtility
˛˛ #
.
˛˛# $
DrawSolidColor
˛˛$ 2
(
˛˛2 3
new
˛˛3 6
Rect
˛˛7 ;
(
˛˛; <
-
˛˛< =
$num
˛˛= >
,
˛˛> ?
-
˛˛@ A
$num
˛˛A B
,
˛˛B C

ScreenRect
˛˛D N
.
˛˛N O
width
˛˛O T
+
˛˛U V
$num
˛˛W Y
,
˛˛Y Z

ScreenRect
˛˛[ e
.
˛˛e f
height
˛˛f l
+
˛˛m n
$num
˛˛o q
)
˛˛q r
,
˛˛r s)
screenshot_backgroundColor˛˛t é
)˛˛é è
;˛˛è ê
DrawUVGraph
ÄÄ 
(
ÄÄ 
	graphRect
ÄÄ %
)
ÄÄ% &
;
ÄÄ& '
if
ÇÇ 
(
ÇÇ 
screenshotStatus
ÇÇ $
==
ÇÇ% '
ScreenshotStatus
ÇÇ( 8
.
ÇÇ8 9
PrepareCanvas
ÇÇ9 F
)
ÇÇF G
{
ÉÉ 
if
ÑÑ 
(
ÑÑ 
Event
ÑÑ 
.
ÑÑ 
current
ÑÑ %
.
ÑÑ% &
type
ÑÑ& *
==
ÑÑ+ -
	EventType
ÑÑ. 7
.
ÑÑ7 8
Repaint
ÑÑ8 ?
)
ÑÑ? @
{
ÖÖ 
screenshotStatus
ÜÜ (
=
ÜÜ) *
ScreenshotStatus
ÜÜ+ ;
.
ÜÜ; <
CanvasReady
ÜÜ< G
;
ÜÜG H
DoScreenshot
áá $
(
áá$ %
)
áá% &
;
áá& '
}
àà 
return
ää 
;
ää 
}
ãã 
else
åå 
{
çç 
DoScreenshot
éé  
(
éé  !
)
éé! "
;
éé" #
}
èè 
}
êê 
if
íí 
(
íí 
tool
íí 
==
íí 
Tool
íí 
.
íí 
View
íí !
||
íí" $
m_draggingCanvas
íí% 5
)
íí5 6
EditorGUIUtility
ìì  
.
ìì  !
AddCursorRect
ìì! .
(
ìì. /
new
ìì/ 2
Rect
ìì3 7
(
ìì7 8
$num
ìì8 9
,
ìì9 :
toolbarRect
ìì; F
.
ììF G
y
ììG H
+
ììI J
toolbarRect
ììK V
.
ììV W
height
ììW ]
,
ìì] ^
screenWidth
ìì_ j
,
ììj k
screenHeight
ììl x
)
ììx y
,
ììy z
MouseCursorìì{ Ü
.ììÜ á
Panììá ä
)ììä ã
;ììã å

ScreenRect
ïï 
.
ïï 
width
ïï 
=
ïï 
this
ïï #
.
ïï# $
position
ïï$ ,
.
ïï, -
width
ïï- 2
;
ïï2 3

ScreenRect
ññ 
.
ññ 
height
ññ 
=
ññ 
this
ññ  $
.
ññ$ %
position
ññ% -
.
ññ- .
height
ññ. 4
;
ññ4 5
if
ôô 
(
ôô 
!
ôô 
EditorGUIUtility
ôô !
.
ôô! "
	isProSkin
ôô" +
)
ôô+ ,
{
öö 
GUI
õõ 
.
õõ 
backgroundColor
õõ #
=
õõ$ %"
BasicBackgroundColor
õõ& :
;
õõ: ;
GUI
úú 
.
úú 
Box
úú 
(
úú 

ScreenRect
úú "
,
úú" #
$str
úú$ &
)
úú& '
;
úú' (
GUI
ùù 
.
ùù 
backgroundColor
ùù #
=
ùù$ %
Color
ùù& +
.
ùù+ ,
white
ùù, 1
;
ùù1 2
}
ûû 
if
†† 
(
†† 
!
†† 
Math
†† 
.
†† 
Approx
†† 
(
†† 
position
†† %
.
††% &
width
††& +
,
††+ ,
screenWidth
††- 8
)
††8 9
||
††: <
!
††= >
Math
††> B
.
††B C
Approx
††C I
(
††I J
position
††J R
.
††R S
height
††S Y
,
††Y Z
screenHeight
††[ g
)
††g h
)
††h i
OnScreenResize
°° 
(
°° 
)
°°  
;
°°  !
toolbarRect
££ 
=
££ 
new
££ 
Rect
££ "
(
££" #
PAD
££# &
,
££& '
PAD
££( +
,
££+ ,
this
££- 1
.
££1 2
position
££2 :
.
££: ;
width
££; @
-
££A B
PAD
££C F
*
££G H
$num
££I J
,
££J K
$num
££L N
)
££N O
;
££O P
	graphRect
§§ 
=
§§ 
new
§§ 
Rect
§§  
(
§§  !
PAD
§§! $
,
§§$ %
PAD
§§& )
,
§§) *
this
§§+ /
.
§§/ 0
position
§§0 8
.
§§8 9
width
§§9 >
-
§§? @
PAD
§§A D
*
§§E F
$num
§§G H
,
§§H I
this
§§J N
.
§§N O
position
§§O W
.
§§W X
height
§§X ^
-
§§_ `
PAD
§§a d
*
§§e f
$num
§§g h
)
§§h i
;
§§i j
actionWindowRect
¶¶ 
.
¶¶ 
x
¶¶ 
=
¶¶  
(
¶¶! "
int
¶¶" %
)
¶¶% &
Mathf
¶¶& +
.
¶¶+ ,
Clamp
¶¶, 1
(
¶¶1 2
actionWindowRect
¶¶2 B
.
¶¶B C
x
¶¶C D
,
¶¶D E
PAD
¶¶F I
,
¶¶I J
position
¶¶K S
.
¶¶S T
width
¶¶T Y
-
¶¶Z [
PAD
¶¶\ _
-
¶¶` a
PAD
¶¶b e
-
¶¶f g
actionWindowRect
¶¶h x
.
¶¶x y
width
¶¶y ~
)
¶¶~ 
;¶¶ Ä
actionWindowRect
ßß 
.
ßß 
y
ßß 
=
ßß  
(
ßß! "
int
ßß" %
)
ßß% &
Mathf
ßß& +
.
ßß+ ,
Clamp
ßß, 1
(
ßß1 2
actionWindowRect
ßß2 B
.
ßßB C
y
ßßC D
,
ßßD E
PAD
ßßF I
,
ßßI J
position
ßßK S
.
ßßS T
height
ßßT Z
-
ßß[ \$
MIN_ACTION_WINDOW_SIZE
ßß] s
)
ßßs t
;
ßßt u
if
®® 
(
®® 
actionWindowRect
®®  
.
®®  !
y
®®! "
+
®®# $
actionWindowRect
®®% 5
.
®®5 6
height
®®6 <
>
®®= >
position
®®? G
.
®®G H
height
®®H N
)
®®N O
actionWindowRect
©©  
.
©©  !
height
©©! '
=
©©( )
position
©©* 2
.
©©2 3
height
©©3 9
-
©©: ;
actionWindowRect
©©< L
.
©©L M
y
©©M N
-
©©O P
$num
©©Q S
;
©©S T
if
™™ 
(
™™ 
actionWindowRect
™™  
.
™™  !
width
™™! &
<
™™' (#
minimumInspectorWidth
™™) >
)
™™> ?
actionWindowRect
´´  
.
´´  !
width
´´! &
=
´´' (#
minimumInspectorWidth
´´) >
;
´´> ?
HandleInput
ÆÆ 
(
ÆÆ 
)
ÆÆ 
;
ÆÆ 
DrawUVGraph
∞∞ 
(
∞∞ 
	graphRect
∞∞ !
)
∞∞! "
;
∞∞" #
if
≥≥ 
(
≥≥ 
channel
≥≥ 
==
≥≥ 
$num
≥≥ 
&&
≥≥ 
	selection
≥≥  )
!=
≥≥* ,
null
≥≥- 1
&&
≥≥2 4
MeshSelection
≥≥5 B
.
≥≥B C!
selectedVertexCount
≥≥C V
>
≥≥W X
$num
≥≥Y Z
)
≥≥Z [
{
¥¥ 
switch
µµ 
(
µµ 
tool
µµ 
)
µµ 
{
∂∂ 
case
∑∑ 
Tool
∑∑ 
.
∑∑ 
Move
∑∑ "
:
∑∑" #
MoveTool
∏∏  
(
∏∏  !
)
∏∏! "
;
∏∏" #
break
ππ 
;
ππ 
case
ªª 
Tool
ªª 
.
ªª 
Rotate
ªª $
:
ªª$ %

RotateTool
ºº "
(
ºº" #
)
ºº# $
;
ºº$ %
break
ΩΩ 
;
ΩΩ 
case
øø 
Tool
øø 
.
øø 
Scale
øø #
:
øø# $
	ScaleTool
¿¿ !
(
¿¿! "
)
¿¿" #
;
¿¿# $
break
¡¡ 
;
¡¡ 
}
¬¬ 
}
√√ 
if
≈≈ 
(
≈≈ 

GUIUtility
≈≈ 
.
≈≈ 

hotControl
≈≈ %
==
≈≈& (
$num
≈≈) *
&&
≈≈+ -
channel
≈≈. 5
==
≈≈6 8
$num
≈≈9 :
&&
≈≈; ="
UpdateNearestElement
≈≈> R
(
≈≈R S
Event
≈≈S X
.
≈≈X Y
current
≈≈Y `
.
≈≈` a
mousePosition
≈≈a n
)
≈≈n o
)
≈≈o p
Repaint
∆∆ 
(
∆∆ 
)
∆∆ 
;
∆∆ 
if
»» 
(
»» 
m_mouseDragging
»» 
&&
»»  "!
EditorHandleUtility
»»# 6
.
»»6 7
	CurrentID
»»7 @
<
»»A B
$num
»»C D
&&
»»E G
!
»»H I
m_draggingCanvas
»»I Y
&&
»»Z \
!
»»] ^
m_rightMouseDrag
»»^ n
)
»»n o
{
…… 
Color
   
oldColor
   
=
    
GUI
  ! $
.
  $ %
backgroundColor
  % 4
;
  4 5
GUI
ÀÀ 
.
ÀÀ 
backgroundColor
ÀÀ #
=
ÀÀ$ %
DRAG_BOX_COLOR
ÀÀ& 4
;
ÀÀ4 5
GUI
ÃÃ 
.
ÃÃ 
Box
ÃÃ 
(
ÃÃ 
dragRect
ÃÃ  
,
ÃÃ  !
$str
ÃÃ" $
)
ÃÃ$ %
;
ÃÃ% &
GUI
ÕÕ 
.
ÕÕ 
backgroundColor
ÕÕ #
=
ÕÕ$ %
oldColor
ÕÕ& .
;
ÕÕ. /
}
ŒŒ 
DrawUVTools
–– 
(
–– 
toolbarRect
–– #
)
––# $
;
––$ %
if
”” 
(
”” 
channel
”” 
==
”” 
$num
”” 
||
”” 
channel
””  '
==
””( *
$num
””+ ,
)
””, -
{
‘‘ 
BeginWindows
’’ 
(
’’ 
)
’’ 
;
’’ 
actionWindowRect
÷÷  
=
÷÷! "
	GUILayout
÷÷# ,
.
÷÷, -
Window
÷÷- 3
(
÷÷3 4
$num
÷÷4 5
,
÷÷5 6
actionWindowRect
÷÷7 G
,
÷÷G H
DrawActionWindow
÷÷I Y
,
÷÷Y Z
$str
÷÷[ d
)
÷÷d e
;
÷÷e f

EndWindows
◊◊ 
(
◊◊ 
)
◊◊ 
;
◊◊ 
}
ÿÿ 
if
⁄⁄ 
(
⁄⁄ 
needsRepaint
⁄⁄ 
)
⁄⁄ 
{
€€ 
Repaint
‹‹ 
(
‹‹ 
)
‹‹ 
;
‹‹ 
needsRepaint
›› 
=
›› 
false
›› $
;
››$ %
}
ﬁﬁ 
}
ﬂﬂ 	
void
‰‰ 
SelectModeChanged
‰‰ 
(
‰‰ 

SelectMode
‰‰ )
mode
‰‰* .
)
‰‰. /
{
ÂÂ 	

UpdateMode
ÊÊ 
(
ÊÊ 
)
ÊÊ 
;
ÊÊ 
}
ÁÁ 	
void
ÈÈ %
ElementSelectionChanged
ÈÈ $
(
ÈÈ$ %
ProBuilderMesh
ÈÈ% 3
mesh
ÈÈ4 8
)
ÈÈ8 9
{
ÍÍ 	$
ObjectSelectionChanged
ÎÎ "
(
ÎÎ" #
)
ÎÎ# $
;
ÎÎ$ %
}
ÏÏ 	
void
ÓÓ $
ObjectSelectionChanged
ÓÓ #
(
ÓÓ# $
)
ÓÓ$ %
{
ÔÔ 	
	selection
 
=
 
MeshSelection
 %
.
% &
top
& )
.
) *
ToArray
* 1
(
1 2
)
2 3
;
3 4)
SetSelectedUVsWithSceneView
ÚÚ '
(
ÚÚ' (
)
ÚÚ( )
;
ÚÚ) *"
RefreshUVCoordinates
ÙÙ  
(
ÙÙ  !
)
ÙÙ! "
;
ÙÙ" #
int
˜˜ 
len
˜˜ 
=
˜˜ 
	selection
˜˜ 
==
˜˜  "
null
˜˜# '
?
˜˜( )
$num
˜˜* +
:
˜˜, -
	selection
˜˜. 7
.
˜˜7 8
Count
˜˜8 =
(
˜˜= >
)
˜˜> ?
;
˜˜? @0
"incompleteTextureGroupsInSelection
˘˘ .
=
˘˘/ 0
new
˘˘1 4
List
˘˘5 9
<
˘˘9 :
Face
˘˘: >
[
˘˘> ?
]
˘˘? @
>
˘˘@ A
[
˘˘A B
len
˘˘B E
]
˘˘E F
;
˘˘F G;
-incompleteTextureGroupsInSelection_CoordCache
˙˙ 9
.
˙˙9 :
Clear
˙˙: ?
(
˙˙? @
)
˙˙@ A
;
˙˙A B
for
¸¸ 
(
¸¸ 
int
¸¸ 
i
¸¸ 
=
¸¸ 
$num
¸¸ 
;
¸¸ 
i
¸¸ 
<
¸¸ 
len
¸¸  #
;
¸¸# $
i
¸¸% &
++
¸¸& (
)
¸¸( )
{
˝˝ 0
"incompleteTextureGroupsInSelection
˛˛ 2
[
˛˛2 3
i
˛˛3 4
]
˛˛4 5
=
˛˛6 7(
GetIncompleteTextureGroups
˛˛8 R
(
˛˛R S
	selection
˛˛S \
[
˛˛\ ]
i
˛˛] ^
]
˛˛^ _
,
˛˛_ `
	selection
˛˛a j
[
˛˛j k
i
˛˛k l
]
˛˛l m
.
˛˛m n$
selectedFacesInternal˛˛n É
)˛˛É Ñ
;˛˛Ñ Ö
if
ÄÄ 
(
ÄÄ 0
"incompleteTextureGroupsInSelection
ÄÄ 6
[
ÄÄ6 7
i
ÄÄ7 8
]
ÄÄ8 9
.
ÄÄ9 :
Count
ÄÄ: ?
<
ÄÄ@ A
$num
ÄÄB C
)
ÄÄC D
{
ÅÅ 
continue
ÇÇ 
;
ÇÇ 
}
ÉÉ 
else
ÑÑ 
{
ÖÖ 
ProBuilderMesh
ÜÜ "
pb
ÜÜ# %
=
ÜÜ& '
	selection
ÜÜ( 1
[
ÜÜ1 2
i
ÜÜ2 3
]
ÜÜ3 4
;
ÜÜ4 5
foreach
àà 
(
àà 
Face
àà !
[
àà! "
]
àà" #
incomplete_group
àà$ 4
in
àà5 70
"incompleteTextureGroupsInSelection
àà8 Z
[
ààZ [
i
àà[ \
]
àà\ ]
)
àà] ^
{
ââ 
if
ää 
(
ää 
incomplete_group
ää ,
==
ää- /
null
ää0 4
||
ää5 7
incomplete_group
ää8 H
.
ääH I
Length
ääI O
<
ääP Q
$num
ääR S
)
ääS T
continue
ãã $
;
ãã$ %
List
çç 
<
çç 
Vector2
çç $
>
çç$ %
coords
çç& ,
=
çç- .
new
çç/ 2
List
çç3 7
<
çç7 8
Vector2
çç8 ?
>
çç? @
(
çç@ A
)
ççA B
;
ççB C
foreach
èè 
(
èè  !
Face
èè! %
face
èè& *
in
èè+ -
incomplete_group
èè. >
)
èè> ?
coords
êê "
.
êê" #
Add
êê# &
(
êê& '
Bounds2D
êê' /
.
êê/ 0
Center
êê0 6
(
êê6 7
pb
êê7 9
.
êê9 :
texturesInternal
êê: J
.
êêJ K
ValuesWithIndexes
êêK \
(
êê\ ]
face
êê] a
.
êêa b%
distinctIndexesInternal
êêb y
)
êêy z
)
êêz {
)
êê{ |
;
êê| }
coords
íí 
.
íí 
Insert
íí %
(
íí% &
$num
íí& '
,
íí' (
Bounds2D
íí) 1
.
íí1 2
Center
íí2 8
(
íí8 9
coords
íí9 ?
.
íí? @
ToArray
íí@ G
(
ííG H
)
ííH I
)
ííI J
)
ííJ K
;
ííK L;
-incompleteTextureGroupsInSelection_CoordCache
îî E
.
îîE F
Add
îîF I
(
îîI J
coords
îîJ P
)
îîP Q
;
îîQ R
}
ïï 
}
ññ 
}
óó 
Repaint
ôô 
(
ôô 
)
ôô 
;
ôô 
}
öö 	
internal
°° 
void
°° #
OnBeginUVModification
°° +
(
°°+ ,
)
°°, -
{
¢¢ 	
Lightmapping
££ 
.
££  
PushGIWorkflowMode
££ +
(
££+ ,
)
££, -
;
££- .
modifyingUVs
•• 
=
•• 
true
•• 
;
••  
GUI
¶¶ 
.
¶¶ 
FocusControl
¶¶ 
(
¶¶ 
string
¶¶ #
.
¶¶# $
Empty
¶¶$ )
)
¶¶) *
;
¶¶* +
bool
ßß 
update
ßß 
=
ßß 
false
ßß 
;
ßß  
for
™™ 
(
™™ 
int
™™ 
i
™™ 
=
™™ 
$num
™™ 
;
™™ 
i
™™ 
<
™™ 
	selection
™™  )
.
™™) *
Length
™™* 0
;
™™0 1
i
™™2 3
++
™™3 5
)
™™5 6
{
´´ 
if
¨¨ 
(
¨¨ 
	selection
¨¨ 
[
¨¨ 
i
¨¨ 
]
¨¨  
.
¨¨  !
selectedFaceCount
¨¨! 2
>
¨¨3 4
$num
¨¨5 6
)
¨¨6 7
{
≠≠ 
int
ÆÆ 
fc
ÆÆ 
=
ÆÆ 
	selection
ÆÆ &
[
ÆÆ& '
i
ÆÆ' (
]
ÆÆ( )
.
ÆÆ) *
selectedFaceCount
ÆÆ* ;
;
ÆÆ; <
	selection
ØØ 
[
ØØ 
i
ØØ 
]
ØØ  
.
ØØ  !
SetSelectedFaces
ØØ! 1
(
ØØ1 2!
SelectTextureGroups
ØØ2 E
(
ØØE F
	selection
ØØF O
[
ØØO P
i
ØØP Q
]
ØØQ R
,
ØØR S
	selection
ØØT ]
[
ØØ] ^
i
ØØ^ _
]
ØØ_ `
.
ØØ` a#
selectedFacesInternal
ØØa v
)
ØØv w
)
ØØw x
;
ØØx y
if
≤≤ 
(
≤≤ 
fc
≤≤ 
!=
≤≤ 
	selection
≤≤ '
[
≤≤' (
i
≤≤( )
]
≤≤) *
.
≤≤* +
selectedFaceCount
≤≤+ <
)
≤≤< =
update
≥≥ 
=
≥≥  
true
≥≥! %
;
≥≥% &
}
¥¥ 
	selection
∂∂ 
[
∂∂ 
i
∂∂ 
]
∂∂ 
.
∂∂ 
ToMesh
∂∂ #
(
∂∂# $
)
∂∂$ %
;
∂∂% &
	selection
∑∑ 
[
∑∑ 
i
∑∑ 
]
∑∑ 
.
∑∑ 
Refresh
∑∑ $
(
∑∑$ %
)
∑∑% &
;
∑∑& '
}
∏∏ 
if
∫∫ 
(
∫∫ 
update
∫∫ 
)
∫∫ 
{
ªª 
Vector2
ΩΩ "
storedHandlePosition
ΩΩ ,
=
ΩΩ- .
handlePosition
ΩΩ/ =
;
ΩΩ= >
ProBuilderEditor
ææ  
.
ææ  !
Refresh
ææ! (
(
ææ( )
)
ææ) *
;
ææ* +
SetHandlePosition
øø !
(
øø! ""
storedHandlePosition
øø" 6
,
øø6 7
true
øø8 <
)
øø< =
;
øø= >
}
¿¿ 
CopySelectionUVs
¬¬ 
(
¬¬ 
out
¬¬  

uv_origins
¬¬! +
)
¬¬+ ,
;
¬¬, -
uvOrigin
√√ 
=
√√ 
handlePosition
√√ %
;
√√% &1
#m_AutoUnwrapSettingsPreModification
≈≈ /
=
≈≈0 1
new
≈≈2 5 
AutoUnwrapSettings
≈≈6 H
[
≈≈H I
	selection
≈≈I R
.
≈≈R S
Length
≈≈S Y
]
≈≈Y Z
[
≈≈Z [
]
≈≈[ \
;
≈≈\ ]
for
∆∆ 
(
∆∆ 
int
∆∆ 
i
∆∆ 
=
∆∆ 
$num
∆∆ 
,
∆∆ 
c
∆∆ 
=
∆∆ 1
#m_AutoUnwrapSettingsPreModification
∆∆  C
.
∆∆C D
Length
∆∆D J
;
∆∆J K
i
∆∆L M
<
∆∆N O
c
∆∆P Q
;
∆∆Q R
i
∆∆S T
++
∆∆T V
)
∆∆V W
{
«« 
int
»» 
[
»» 
]
»» 
selected
»» 
=
»»  
	selection
»»! *
[
»»* +
i
»»+ ,
]
»», -
.
»»- .)
selectedFaceIndicesInternal
»». I
;
»»I J
Face
…… 
[
…… 
]
…… 
faces
…… 
=
…… 
	selection
…… (
[
……( )
i
……) *
]
……* +
.
……+ ,
facesInternal
……, 9
;
……9 :1
#m_AutoUnwrapSettingsPreModification
   3
[
  3 4
i
  4 5
]
  5 6
=
  7 8
new
  9 < 
AutoUnwrapSettings
  = O
[
  O P
selected
  P X
.
  X Y
Length
  Y _
]
  _ `
;
  ` a
for
ÀÀ 
(
ÀÀ 
int
ÀÀ 
n
ÀÀ 
=
ÀÀ 
$num
ÀÀ 
,
ÀÀ 
fc
ÀÀ  "
=
ÀÀ# $
selected
ÀÀ% -
.
ÀÀ- .
Length
ÀÀ. 4
;
ÀÀ4 5
n
ÀÀ6 7
<
ÀÀ8 9
fc
ÀÀ: <
;
ÀÀ< =
n
ÀÀ> ?
++
ÀÀ? A
)
ÀÀA B1
#m_AutoUnwrapSettingsPreModification
ÃÃ 7
[
ÃÃ7 8
i
ÃÃ8 9
]
ÃÃ9 :
[
ÃÃ: ;
n
ÃÃ; <
]
ÃÃ< =
=
ÃÃ> ?
faces
ÃÃ@ E
[
ÃÃE F
selected
ÃÃF N
[
ÃÃN O
n
ÃÃO P
]
ÃÃP Q
]
ÃÃQ R
.
ÃÃR S
uv
ÃÃS U
;
ÃÃU V
}
ÕÕ 
}
ŒŒ 	
internal
”” 
void
”” $
OnFinishUVModification
”” ,
(
””, -
)
””- .
{
‘‘ 	
Lightmapping
’’ 
.
’’ 
PopGIWorkflowMode
’’ *
(
’’* +
)
’’+ ,
;
’’, -
modifyingUVs
◊◊ 
=
◊◊ 
false
◊◊  
;
◊◊  !
if
ŸŸ 
(
ŸŸ 
(
ŸŸ 
tool
ŸŸ 
==
ŸŸ 
Tool
ŸŸ 
.
ŸŸ 
Rotate
ŸŸ $
||
ŸŸ% '
tool
ŸŸ( ,
==
ŸŸ- /
Tool
ŸŸ0 4
.
ŸŸ4 5
Scale
ŸŸ5 :
)
ŸŸ: ;
&&
ŸŸ< >
	userPivot
ŸŸ? H
)
ŸŸH I
SetHandlePosition
⁄⁄ !
(
⁄⁄! "
handlePosition
⁄⁄" 0
,
⁄⁄0 1
true
⁄⁄2 6
)
⁄⁄6 7
;
⁄⁄7 8
foreach
›› 
(
›› 
ProBuilderMesh
›› #
pb
››$ &
in
››' )
	selection
››* 3
)
››3 4
{
ﬁﬁ 
pb
ﬂﬂ 
.
ﬂﬂ 
ToMesh
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ 
pb
‡‡ 
.
‡‡ 
Refresh
‡‡ 
(
‡‡ 
)
‡‡ 
;
‡‡ 
pb
·· 
.
·· 
Optimize
·· 
(
·· 
)
·· 
;
·· 
}
‚‚ 
}
„„ 	
void
ÂÂ )
SetSelectedUVsWithSceneView
ÂÂ (
(
ÂÂ( )
)
ÂÂ) *
{
ÊÊ 	
if
ÁÁ 
(
ÁÁ 
	selection
ÁÁ 
==
ÁÁ 
null
ÁÁ !
)
ÁÁ! "
{
ËË (
m_DistinctIndexesSelection
ÈÈ *
=
ÈÈ+ ,
new
ÈÈ- 0
int
ÈÈ1 4
[
ÈÈ4 5
$num
ÈÈ5 6
]
ÈÈ6 7
[
ÈÈ7 8
]
ÈÈ8 9
;
ÈÈ9 :
return
ÍÍ 
;
ÍÍ 
}
ÎÎ (
m_DistinctIndexesSelection
ÌÌ &
=
ÌÌ' (
new
ÌÌ) ,
int
ÌÌ- 0
[
ÌÌ0 1
	selection
ÌÌ1 :
.
ÌÌ: ;
Length
ÌÌ; A
]
ÌÌA B
[
ÌÌB C
]
ÌÌC D
;
ÌÌD E
for
 
(
 
int
 
i
 
=
 
$num
 
;
 
i
 
<
 
	selection
  )
.
) *
Length
* 0
;
0 1
i
2 3
++
3 5
)
5 6
{
ÒÒ 
List
ÚÚ 
<
ÚÚ 
int
ÚÚ 
>
ÚÚ 
selectedTris
ÚÚ &
=
ÚÚ' (
new
ÚÚ) ,
List
ÚÚ- 1
<
ÚÚ1 2
int
ÚÚ2 5
>
ÚÚ5 6
(
ÚÚ6 7
	selection
ÚÚ7 @
[
ÚÚ@ A
i
ÚÚA B
]
ÚÚB C
.
ÚÚC D%
selectedIndexesInternal
ÚÚD [
)
ÚÚ[ \
;
ÚÚ\ ]
SharedVertex
ÙÙ 
[
ÙÙ 
]
ÙÙ 
	sharedUVs
ÙÙ (
=
ÙÙ) *
	selection
ÙÙ+ 4
[
ÙÙ4 5
i
ÙÙ5 6
]
ÙÙ6 7
.
ÙÙ7 8
sharedTextures
ÙÙ8 F
;
ÙÙF G
if
˜˜ 
(
˜˜ 
	sharedUVs
˜˜ 
!=
˜˜  
null
˜˜! %
)
˜˜% &
{
¯¯ 
foreach
˘˘ 
(
˘˘ 
var
˘˘  
arr
˘˘! $
in
˘˘% '
	sharedUVs
˘˘( 1
)
˘˘1 2
{
˙˙ 
if
˚˚ 
(
˚˚ 
System
˚˚ "
.
˚˚" #
Array
˚˚# (
.
˚˚( )
Exists
˚˚) /
(
˚˚/ 0
arr
˚˚0 3
.
˚˚3 4
arrayInternal
˚˚4 A
,
˚˚A B
element
˚˚C J
=>
˚˚K M
System
˚˚N T
.
˚˚T U
Array
˚˚U Z
.
˚˚Z [
IndexOf
˚˚[ b
(
˚˚b c
	selection
˚˚c l
[
˚˚l m
i
˚˚m n
]
˚˚n o
.
˚˚o p&
selectedIndexesInternal˚˚p á
,˚˚á à
element˚˚â ê
)˚˚ê ë
>˚˚í ì
-˚˚î ï
$num˚˚ï ñ
)˚˚ñ ó
)˚˚ó ò
{
¸¸ 
selectedTris
˝˝ (
.
˝˝( )
AddRange
˝˝) 1
(
˝˝1 2
arr
˝˝2 5
)
˝˝5 6
;
˝˝6 7
}
˛˛ 
}
ˇˇ 
}
ÄÄ (
m_DistinctIndexesSelection
ÇÇ *
[
ÇÇ* +
i
ÇÇ+ ,
]
ÇÇ, -
=
ÇÇ. /
selectedTris
ÇÇ0 <
.
ÇÇ< =
Distinct
ÇÇ= E
(
ÇÇE F
)
ÇÇF G
.
ÇÇG H
ToArray
ÇÇH O
(
ÇÇO P
)
ÇÇP Q
;
ÇÇQ R
}
ÉÉ 
}
ÑÑ 	
void
ÜÜ #
OnGetFrameBoundsEvent
ÜÜ "
(
ÜÜ" #
)
ÜÜ# $
{
áá 	
FrameSelection
àà 
(
àà 
)
àà 
;
àà 
Repaint
ââ 
(
ââ 
)
ââ 
;
ââ 
}
ää 	
void
åå 
OnScreenResize
åå 
(
åå 
)
åå 
{
çç 	
screenWidth
éé 
=
éé 
(
éé 
int
éé 
)
éé 
this
éé #
.
éé# $
position
éé$ ,
.
éé, -
width
éé- 2
;
éé2 3
screenHeight
èè 
=
èè 
(
èè 
int
èè 
)
èè  
this
èè  $
.
èè$ %
position
èè% -
.
èè- .
height
èè. 4
;
èè4 5"
RefreshUVCoordinates
êê  
(
êê  !
)
êê! "
;
êê" #
Repaint
ëë 
(
ëë 
)
ëë 
;
ëë 
}
íí 	
bool
îî '
IsCopyUVSettingsModifiers
îî &
(
îî& '
EventModifiers
îî' 5
	modifiers
îî6 ?
)
îî? @
{
ïï 	
return
ôô 
(
ôô 
	modifiers
ôô 
==
ôô  
(
ôô! "
EventModifiers
ôô" 0
.
ôô0 1
Control
ôô1 8
|
ôô9 :
EventModifiers
ôô; I
.
ôôI J
Shift
ôôJ O
)
ôôO P
)
ôôP Q
;
ôôQ R
}
õõ 	
bool
††  
CopyFaceUVSettings
†† 
(
††  
ProBuilderMesh
††  .
pb
††/ 1
,
††1 2
Face
††3 7

targetFace
††8 B
)
††B C
{
°° 	
ProBuilderMesh
££ 
firstObj
££ #
=
££$ %
MeshSelection
££& 3
.
££3 4

activeMesh
££4 >
;
££> ?
Face
§§ 

sourceFace
§§ 
=
§§ 
MeshSelection
§§ +
.
§§+ ,

activeFace
§§, 6
;
§§6 7
Face
•• 
[
•• 
]
•• 
destination
•• 
=
••  
new
••! $
Face
••% )
[
••) *
$num
••* +
]
••+ ,
;
••, -
if
¶¶ 
(
¶¶ 

sourceFace
¶¶ 
==
¶¶ 
null
¶¶ "
)
¶¶" #
return
ßß 
false
ßß 
;
ßß 
UndoUtility
©© 
.
©© 
RecordObject
©© $
(
©©$ %
pb
©©% '
,
©©' (
$str
©©) ;
)
©©; <
;
©©< =
bool
™™ $
destinationWasManualUV
™™ '
=
™™( )

targetFace
™™* 4
.
™™4 5
manualUV
™™5 =
;
™™= >
bool
´´ 
sourceWasManualUV
´´ "
=
´´# $

sourceFace
´´% /
.
´´/ 0
manualUV
´´0 8
;
´´8 9
pb
≠≠ 
.
≠≠ 
ToMesh
≠≠ 
(
≠≠ 
)
≠≠ 
;
≠≠ 
if
ÆÆ 
(
ÆÆ $
destinationWasManualUV
ÆÆ &
)
ÆÆ& '
{
ØØ 
destination
≤≤ 
[
≤≤ 
$num
≤≤ 
]
≤≤ 
=
≤≤  

targetFace
≤≤! +
;
≤≤+ ,
	UVEditing
≥≥ 
.
≥≥ 
	SetAutoUV
≥≥ #
(
≥≥# $
pb
≥≥$ &
,
≥≥& '
destination
≥≥( 3
,
≥≥3 4
true
≥≥5 9
)
≥≥9 :
;
≥≥: ;
}
¥¥ 

targetFace
∂∂ 
.
∂∂ 
uv
∂∂ 
=
∂∂ 
	UVEditing
∂∂ %
.
∂∂% &#
GetAutoUnwrapSettings
∂∂& ;
(
∂∂; <
firstObj
∂∂< D
,
∂∂D E

sourceFace
∂∂F P
)
∂∂P Q
;
∂∂Q R
destination
∑∑ 
[
∑∑ 
$num
∑∑ 
]
∑∑ 
=
∑∑ 

targetFace
∑∑ '
;
∑∑' (

targetFace
∏∏ 
.
∏∏ 
submeshIndex
∏∏ #
=
∏∏$ %

sourceFace
∏∏& 0
.
∏∏0 1
submeshIndex
∏∏1 =
;
∏∏= >
EditorUtility
ππ 
.
ππ 
ShowNotification
ππ *
(
ππ* +
$str
ππ+ =
)
ππ= >
;
ππ> ?
pb
∫∫ 
.
∫∫ 
Refresh
∫∫ 
(
∫∫ 
)
∫∫ 
;
∫∫ 
if
ºº 
(
ºº 
sourceWasManualUV
ºº !
)
ºº! "
{
ΩΩ 
destination
øø 
[
øø 
$num
øø 
]
øø 
=
øø  

targetFace
øø! +
;
øø+ ,
pb
¿¿ 
.
¿¿ 
ToMesh
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿ 
	UVEditing
¡¡ 
.
¡¡ 
	SetAutoUV
¡¡ #
(
¡¡# $
pb
¡¡$ &
,
¡¡& '
destination
¡¡( 3
,
¡¡3 4
false
¡¡5 :
)
¡¡: ;
;
¡¡; <
pb
¬¬ 
.
¬¬ 
Refresh
¬¬ 
(
¬¬ 
)
¬¬ 
;
¬¬ 
}
√√ 
pb
ƒƒ 
.
ƒƒ 
Optimize
ƒƒ 
(
ƒƒ 
)
ƒƒ 
;
ƒƒ "
RefreshUVCoordinates
∆∆  
(
∆∆  !
)
∆∆! "
;
∆∆" #
Repaint
«« 
(
«« 
)
«« 
;
«« 
return
…… 
true
…… 
;
…… 
}
   	
internal
œœ 
bool
œœ  
ClickShortcutCheck
œœ (
(
œœ( )
ProBuilderMesh
œœ) 7
pb
œœ8 :
,
œœ: ;
Face
œœ< @
selectedFace
œœA M
)
œœM N
{
–– 	
Event
—— 
e
—— 
=
—— 
Event
—— 
.
—— 
current
—— #
;
——# $
if
‘‘ 
(
‘‘ '
IsCopyUVSettingsModifiers
‘‘ )
(
‘‘) *
e
‘‘* +
.
‘‘+ ,
	modifiers
‘‘, 5
)
‘‘5 6
)
‘‘6 7
{
’’ 
return
÷÷  
CopyFaceUVSettings
÷÷ )
(
÷÷) *
pb
÷÷* ,
,
÷÷, -
selectedFace
÷÷. :
)
÷÷: ;
;
÷÷; <
}
◊◊ 
else
ÿÿ 
if
ÿÿ 
(
ÿÿ 
e
ÿÿ 
.
ÿÿ 
	modifiers
ÿÿ  
==
ÿÿ! #
EventModifiers
ÿÿ$ 2
.
ÿÿ2 3
Control
ÿÿ3 :
)
ÿÿ: ;
{
ŸŸ 
int
⁄⁄ 
len
⁄⁄ 
=
⁄⁄ 
pb
⁄⁄ 
.
⁄⁄ #
selectedFacesInternal
⁄⁄ 2
==
⁄⁄3 5
null
⁄⁄6 :
?
⁄⁄; <
$num
⁄⁄= >
:
⁄⁄? @
pb
⁄⁄A C
.
⁄⁄C D#
selectedFacesInternal
⁄⁄D Y
.
⁄⁄Y Z
Length
⁄⁄Z `
;
⁄⁄` a
if
‹‹ 
(
‹‹ 
len
‹‹ 
<
‹‹ 
$num
‹‹ 
)
‹‹ 
return
›› 
false
››  
;
››  !
Face
ﬂﬂ 
anchor
ﬂﬂ 
=
ﬂﬂ 
pb
ﬂﬂ  
.
ﬂﬂ  !#
selectedFacesInternal
ﬂﬂ! 6
[
ﬂﬂ6 7
len
ﬂﬂ7 :
-
ﬂﬂ; <
$num
ﬂﬂ= >
]
ﬂﬂ> ?
;
ﬂﬂ? @
if
·· 
(
·· 
anchor
·· 
==
·· 
selectedFace
·· *
)
··* +
return
‚‚ 
false
‚‚  
;
‚‚  !
UndoUtility
‰‰ 
.
‰‰ 
RecordObject
‰‰ (
(
‰‰( )
pb
‰‰) +
,
‰‰+ ,
$str
‰‰- 9
)
‰‰9 :
;
‰‰: ;
pb
ÊÊ 
.
ÊÊ 
ToMesh
ÊÊ 
(
ÊÊ 
)
ÊÊ 
;
ÊÊ 
bool
ËË 
success
ËË 
=
ËË 
	UVEditing
ËË (
.
ËË( )

AutoStitch
ËË) 3
(
ËË3 4
pb
ËË4 6
,
ËË6 7
anchor
ËË8 >
,
ËË> ?
selectedFace
ËË@ L
,
ËËL M
channel
ËËN U
)
ËËU V
;
ËËV W
if
ÍÍ 
(
ÍÍ 
success
ÍÍ 
)
ÍÍ 
{
ÎÎ "
RefreshElementGroups
ÏÏ (
(
ÏÏ( )
pb
ÏÏ) +
)
ÏÏ+ ,
;
ÏÏ, -
pb
ÓÓ 
.
ÓÓ 
SetSelectedFaces
ÓÓ '
(
ÓÓ' (
new
ÓÓ( +
Face
ÓÓ, 0
[
ÓÓ0 1
]
ÓÓ1 2
{
ÓÓ3 4
selectedFace
ÓÓ5 A
}
ÓÓB C
)
ÓÓC D
;
ÓÓD E
pb
ÙÙ 
.
ÙÙ 
Refresh
ÙÙ 
(
ÙÙ 
)
ÙÙ  
;
ÙÙ  !
pb
ıı 
.
ıı 
Optimize
ıı 
(
ıı  
)
ıı  !
;
ıı! ")
SetSelectedUVsWithSceneView
˜˜ /
(
˜˜/ 0
)
˜˜0 1
;
˜˜1 2"
RefreshUVCoordinates
˘˘ (
(
˘˘( )
)
˘˘) *
;
˘˘* +
EditorUtility
˚˚ !
.
˚˚! "
ShowNotification
˚˚" 2
(
˚˚2 3
$str
˚˚3 ?
)
˚˚? @
;
˚˚@ A
ProBuilderEditor
˝˝ $
.
˝˝$ %
Refresh
˝˝% ,
(
˝˝, -
)
˝˝- .
;
˝˝. /
Repaint
ˇˇ 
(
ˇˇ 
)
ˇˇ 
;
ˇˇ 
}
ÄÄ 
else
ÅÅ 
{
ÇÇ 
pb
ÉÉ 
.
ÉÉ 
Refresh
ÉÉ 
(
ÉÉ 
)
ÉÉ  
;
ÉÉ  !
pb
ÑÑ 
.
ÑÑ 
Optimize
ÑÑ 
(
ÑÑ  
)
ÑÑ  !
;
ÑÑ! "
}
ÖÖ 
return
áá 
success
áá 
;
áá 
}
àà 
return
ää 
false
ää 
;
ää 
}
ãã 	
bool
êê 
m_ignore
êê 
=
êê 
false
êê 
;
êê 
bool
ëë 
m_rightMouseDrag
ëë 
=
ëë 
false
ëë  %
;
ëë% &
bool
íí 
m_draggingCanvas
íí 
=
íí 
false
íí  %
;
íí% &
bool
ìì 
m_doubleClick
ìì 
=
ìì 
false
ìì "
;
ìì" #
void
ïï 
HandleInput
ïï 
(
ïï 
)
ïï 
{
ññ 	
Event
óó 
e
óó 
=
óó 
Event
óó 
.
óó 
current
óó #
;
óó# $
if
ôô 
(
ôô 
e
ôô 
.
ôô 
isKey
ôô 
)
ôô 
{
öö 
HandleKeyInput
õõ 
(
õõ 
e
õõ  
)
õõ  !
;
õõ! "
return
úú 
;
úú 
}
ùù 
switch
üü 
(
üü 
e
üü 
.
üü 
type
üü 
)
üü 
{
†† 
case
°° 
	EventType
°° 
.
°° 
	MouseDown
°° (
:
°°( )
if
££ 
(
££ 
toolbarRect
££ #
.
££# $
Contains
££$ ,
(
££, -
e
££- .
.
££. /
mousePosition
££/ <
)
££< =
||
££> @
actionWindowRect
££A Q
.
££Q R
Contains
££R Z
(
££Z [
e
££[ \
.
££\ ]
mousePosition
££] j
)
££j k
)
££k l
{
§§ 
m_ignore
••  
=
••! "
true
••# '
;
••' (
return
¶¶ 
;
¶¶ 
}
ßß 
if
©© 
(
©© 
e
©© 
.
©© 

clickCount
©© $
>
©©% &
$num
©©' (
)
©©( )
m_doubleClick
™™ %
=
™™& '
true
™™( ,
;
™™, -#
mousePosition_initial
¨¨ )
=
¨¨* +
e
¨¨, -
.
¨¨- .
mousePosition
¨¨. ;
;
¨¨; <
break
ÆÆ 
;
ÆÆ 
case
∞∞ 
	EventType
∞∞ 
.
∞∞ 
	MouseDrag
∞∞ (
:
∞∞( )
if
≤≤ 
(
≤≤ 
m_ignore
≤≤  
||
≤≤! #
(
≤≤$ %
e
≤≤% &
.
≤≤& '
mousePosition
≤≤' 4
.
≤≤4 5
y
≤≤5 6
<=
≤≤7 9
toolbarRect
≤≤: E
.
≤≤E F
y
≤≤F G
&&
≤≤H J
!
≤≤K L
m_mouseDragging
≤≤L [
)
≤≤[ \
)
≤≤\ ]
break
≥≥ 
;
≥≥ 
m_mouseDragging
µµ #
=
µµ$ %
true
µµ& *
;
µµ* +
if
∑∑ 
(
∑∑ 
e
∑∑ 
.
∑∑ 
button
∑∑  
==
∑∑! # 
RIGHT_MOUSE_BUTTON
∑∑$ 6
||
∑∑7 9
(
∑∑: ;
e
∑∑; <
.
∑∑< =
button
∑∑= C
==
∑∑D F
LEFT_MOUSE_BUTTON
∑∑G X
&&
∑∑Y [
e
∑∑\ ]
.
∑∑] ^
alt
∑∑^ a
)
∑∑a b
)
∑∑b c
m_rightMouseDrag
∏∏ (
=
∏∏) *
true
∏∏+ /
;
∏∏/ 0
needsRepaint
∫∫  
=
∫∫! "
true
∫∫# '
;
∫∫' (
if
ΩΩ 
(
ΩΩ !
EditorHandleUtility
ΩΩ +
.
ΩΩ+ ,
	CurrentID
ΩΩ, 5
<
ΩΩ6 7
$num
ΩΩ8 9
)
ΩΩ9 :
{
ææ 
if
øø 
(
øø 
(
øø 
e
øø 
.
øø 
alt
øø "
&&
øø# %
e
øø& '
.
øø' (
button
øø( .
==
øø/ 1
LEFT_MOUSE_BUTTON
øø2 C
)
øøC D
||
øøE G
e
øøH I
.
øøI J
button
øøJ P
==
øøQ S!
MIDDLE_MOUSE_BUTTON
øøT g
||
øøh j
Tools
øøk p
.
øøp q
current
øøq x
==
øøy {
Tooløø| Ä
.øøÄ Å
ViewøøÅ Ö
)øøÖ Ü
{
¿¿ 
m_draggingCanvas
¡¡ ,
=
¡¡- .
true
¡¡/ 3
;
¡¡3 4
uvGraphOffset
¬¬ )
+=
¬¬* ,
e
¬¬- .
.
¬¬. /
delta
¬¬/ 4
;
¬¬4 5
}
√√ 
else
ƒƒ 
if
ƒƒ 
(
ƒƒ  !
e
ƒƒ! "
.
ƒƒ" #
button
ƒƒ# )
==
ƒƒ* ,
LEFT_MOUSE_BUTTON
ƒƒ- >
)
ƒƒ> ?
{
≈≈ 
dragRect
∆∆ $
.
∆∆$ %
x
∆∆% &
=
∆∆' (#
mousePosition_initial
∆∆) >
.
∆∆> ?
x
∆∆? @
<
∆∆A B
e
∆∆C D
.
∆∆D E
mousePosition
∆∆E R
.
∆∆R S
x
∆∆S T
?
∆∆U V#
mousePosition_initial
∆∆W l
.
∆∆l m
x
∆∆m n
:
∆∆o p
e
∆∆q r
.
∆∆r s
mousePosition∆∆s Ä
.∆∆Ä Å
x∆∆Å Ç
;∆∆Ç É
dragRect
«« $
.
««$ %
y
««% &
=
««' (#
mousePosition_initial
««) >
.
««> ?
y
««? @
>
««A B
e
««C D
.
««D E
mousePosition
««E R
.
««R S
y
««S T
?
««U V
e
««W X
.
««X Y
mousePosition
««Y f
.
««f g
y
««g h
:
««i j$
mousePosition_initial««k Ä
.««Ä Å
y««Å Ç
;««Ç É
dragRect
»» $
.
»»$ %
width
»»% *
=
»»+ ,
Mathf
»»- 2
.
»»2 3
Abs
»»3 6
(
»»6 7#
mousePosition_initial
»»7 L
.
»»L M
x
»»M N
-
»»O P
e
»»Q R
.
»»R S
mousePosition
»»S `
.
»»` a
x
»»a b
)
»»b c
;
»»c d
dragRect
…… $
.
……$ %
height
……% +
=
……, -
Mathf
……. 3
.
……3 4
Abs
……4 7
(
……7 8#
mousePosition_initial
……8 M
.
……M N
y
……N O
-
……P Q
e
……R S
.
……S T
mousePosition
……T a
.
……a b
y
……b c
)
……c d
;
……d e
}
   
else
ÀÀ 
if
ÀÀ 
(
ÀÀ  !
e
ÀÀ! "
.
ÀÀ" #
alt
ÀÀ# &
&&
ÀÀ' )
e
ÀÀ* +
.
ÀÀ+ ,
button
ÀÀ, 2
==
ÀÀ3 5 
RIGHT_MOUSE_BUTTON
ÀÀ6 H
)
ÀÀH I
{
ÃÃ 
SetCanvasScale
ÕÕ *
(
ÕÕ* +
uvGraphScale
ÕÕ+ 7
+
ÕÕ8 9
(
ÕÕ: ;
e
ÕÕ; <
.
ÕÕ< =
delta
ÕÕ= B
.
ÕÕB C
x
ÕÕC D
-
ÕÕE F
e
ÕÕG H
.
ÕÕH I
delta
ÕÕI N
.
ÕÕN O
y
ÕÕO P
)
ÕÕP Q
*
ÕÕR S
(
ÕÕT U
(
ÕÕU V
uvGraphScale
ÕÕV b
/
ÕÕc d$
MAX_GRAPH_SCALE_SCROLL
ÕÕe {
)
ÕÕ{ |
*
ÕÕ} ~"
ALT_SCROLL_MODIFIERÕÕ í
)ÕÕí ì
)ÕÕì î
;ÕÕî ï
}
ŒŒ 
}
œœ 
break
—— 
;
—— 
case
”” 
	EventType
”” 
.
”” 
Ignore
”” %
:
””% &
case
‘‘ 
	EventType
‘‘ 
.
‘‘ 
MouseUp
‘‘ &
:
‘‘& '$
modifyingUVs_AutoPanel
÷÷ *
=
÷÷+ ,
false
÷÷- 2
;
÷÷2 3
if
ÿÿ 
(
ÿÿ 
m_ignore
ÿÿ  
)
ÿÿ  !
{
ŸŸ 
m_ignore
⁄⁄  
=
⁄⁄! "
false
⁄⁄# (
;
⁄⁄( )
m_mouseDragging
€€ '
=
€€( )
false
€€* /
;
€€/ 0
m_draggingCanvas
‹‹ (
=
‹‹) *
false
‹‹+ 0
;
‹‹0 1
m_doubleClick
›› %
=
››& '
false
››( -
;
››- .
needsRepaint
ﬁﬁ $
=
ﬁﬁ% &
true
ﬁﬁ' +
;
ﬁﬁ+ ,
return
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 
if
‚‚ 
(
‚‚ 
e
‚‚ 
.
‚‚ 
button
‚‚  
==
‚‚! #
LEFT_MOUSE_BUTTON
‚‚$ 5
&&
‚‚6 8
!
‚‚9 :
m_rightMouseDrag
‚‚: J
&&
‚‚K M
!
‚‚N O
modifyingUVs
‚‚O [
&&
‚‚\ ^
!
‚‚_ `
m_draggingCanvas
‚‚` p
)
‚‚p q
{
„„ 
Vector2
‰‰ 
hp
‰‰  "
=
‰‰# $
handlePosition
‰‰% 3
;
‰‰3 4
if
ÊÊ 
(
ÊÊ 
m_mouseDragging
ÊÊ +
)
ÊÊ+ ,
{
ÁÁ 
OnMouseDrag
ËË '
(
ËË' (
)
ËË( )
;
ËË) *
}
ÈÈ 
else
ÍÍ 
{
ÎÎ 
if
ÏÏ 
(
ÏÏ  
(
ÏÏ  !
ProBuilderEditor
ÏÏ! 1
.
ÏÏ1 2

selectMode
ÏÏ2 <
==
ÏÏ= ?

SelectMode
ÏÏ@ J
.
ÏÏJ K
Face
ÏÏK O
||
ÏÏP R
ProBuilderEditor
ÏÏS c
.
ÏÏc d

selectMode
ÏÏd n
==
ÏÏo q

SelectMode
ÏÏr |
.
ÏÏ| }
TextureFaceÏÏ} à
)ÏÏà â
&&ÏÏä å
editor
ÌÌ  &
&&
ÌÌ' )'
IsCopyUVSettingsModifiers
ÌÌ* C
(
ÌÌC D
e
ÌÌD E
.
ÌÌE F
	modifiers
ÌÌF O
)
ÌÌO P
)
ÌÌP Q
{
ÓÓ 
Face
ÔÔ  $

targetFace
ÔÔ% /
;
ÔÔ/ 0
for
  #
(
$ %
int
% (
i
) *
=
+ ,
$num
- .
;
. /
i
0 1
<
2 3
	selection
4 =
.
= >
Length
> D
;
D E
i
F G
++
G I
)
I J
{
ÒÒ  !
if
ÚÚ$ &
(
ÚÚ' (&
GetFaceFromMousePosition
ÚÚ( @
(
ÚÚ@ A
e
ÚÚA B
.
ÚÚB C
mousePosition
ÚÚC P
,
ÚÚP Q
	selection
ÚÚR [
[
ÚÚ[ \
i
ÚÚ\ ]
]
ÚÚ] ^
,
ÚÚ^ _
out
ÚÚ` c

targetFace
ÚÚd n
)
ÚÚn o
)
ÚÚo p
{
ÛÛ$ % 
CopyFaceUVSettings
ÙÙ( :
(
ÙÙ: ;
	selection
ÙÙ; D
[
ÙÙD E
i
ÙÙE F
]
ÙÙF G
,
ÙÙG H

targetFace
ÙÙI S
)
ÙÙS T
;
ÙÙT U
return
ıı( .
;
ıı. /
}
ˆˆ$ %
}
˜˜  !
break
¯¯  %
;
¯¯% &
}
˘˘ 
UndoUtility
˚˚ '
.
˚˚' (
RecordSelection
˚˚( 7
(
˚˚7 8
	selection
˚˚8 A
,
˚˚A B
$str
˚˚C U
)
˚˚U V
;
˚˚V W
if
˝˝ 
(
˝˝  
Event
˝˝  %
.
˝˝% &
current
˝˝& -
.
˝˝- .
	modifiers
˝˝. 7
==
˝˝8 :
(
˝˝; <
EventModifiers
˝˝< J
)
˝˝J K
$num
˝˝K L
&&
˝˝M O
editor
˝˝P V
)
˝˝V W
editor
˛˛  &
.
˛˛& '#
ClearElementSelection
˛˛' <
(
˛˛< =
)
˛˛= >
;
˛˛> ?
OnMouseClick
ÄÄ (
(
ÄÄ( )
e
ÄÄ) *
.
ÄÄ* +
mousePosition
ÄÄ+ 8
)
ÄÄ8 9
;
ÄÄ9 :
if
ÇÇ 
(
ÇÇ  
m_doubleClick
ÇÇ  -
)
ÇÇ- .
SelectUVShell
ÉÉ  -
(
ÉÉ- .
)
ÉÉ. /
;
ÉÉ/ 0
}
ÑÑ 
if
ÜÜ 
(
ÜÜ 
!
ÜÜ 
e
ÜÜ 
.
ÜÜ 
shift
ÜÜ $
||
ÜÜ% '
!
ÜÜ( )
	userPivot
ÜÜ) 2
)
ÜÜ2 3
SetHandlePosition
áá -
(
áá- .
UVSelectionBounds
áá. ?
(
áá? @
)
áá@ A
.
ááA B
center
ááB H
,
ááH I
false
ááJ O
)
ááO P
;
ááP Q
else
àà 
SetHandlePosition
ââ -
(
ââ- .
hp
ââ. 0
,
ââ0 1
true
ââ2 6
)
ââ6 7
;
ââ7 8
}
ää 
if
åå 
(
åå 
e
åå 
.
åå 
button
åå  
!=
åå! # 
RIGHT_MOUSE_BUTTON
åå$ 6
)
åå6 7
m_rightMouseDrag
çç (
=
çç) *
false
çç+ 0
;
çç0 1
m_mouseDragging
èè #
=
èè$ %
false
èè& +
;
èè+ ,
m_doubleClick
êê !
=
êê" #
false
êê$ )
;
êê) *
m_draggingCanvas
ëë $
=
ëë% &
false
ëë' ,
;
ëë, -
if
ìì 
(
ìì 
modifyingUVs
ìì $
)
ìì$ %$
OnFinishUVModification
îî .
(
îî. /
)
îî/ 0
;
îî0 1

uvRotation
ññ 
=
ññ  
$num
ññ! #
;
ññ# $
uvScale
óó 
=
óó 
Vector2
óó %
.
óó% &
one
óó& )
;
óó) *
needsRepaint
ôô  
=
ôô! "
true
ôô# '
;
ôô' (
break
öö 
;
öö 
case
úú 
	EventType
úú 
.
úú 
ScrollWheel
úú *
:
úú* +
if
ùù 
(
ùù 
!
ùù 
actionWindowRect
ùù )
.
ùù) *
Contains
ùù* 2
(
ùù2 3
e
ùù3 4
.
ùù4 5
mousePosition
ùù5 B
)
ùùB C
)
ùùC D
{
ûû 
SetCanvasScale
üü &
(
üü& '
uvGraphScale
üü' 3
-
üü4 5
e
üü6 7
.
üü7 8
delta
üü8 =
.
üü= >
y
üü> ?
*
üü@ A
(
üüB C
(
üüC D
uvGraphScale
üüD P
/
üüQ R$
MAX_GRAPH_SCALE_SCROLL
üüS i
)
üüi j
*
üük l
SCROLL_MODIFIER
üüm |
)
üü| }
)
üü} ~
;
üü~ 
e
†† 
.
†† 
Use
†† 
(
†† 
)
†† 
;
††  
needsRepaint
°° $
=
°°% &
true
°°' +
;
°°+ ,
}
¢¢ 
break
§§ 
;
§§ 
case
¶¶ 
	EventType
¶¶ 
.
¶¶ 
ContextClick
¶¶ +
:
¶¶+ ,
if
®® 
(
®® 
!
®® 
m_rightMouseDrag
®® )
)
®®) *
{
©© 
var
™™ 
menu
™™  
=
™™! "
new
™™# &
GenericMenu
™™' 2
(
™™2 3
)
™™3 4
;
™™4 5
menu
´´ 
.
´´ 
AddItem
´´ $
(
´´$ %
new
´´% (

GUIContent
´´) 3
(
´´3 4
$str
´´4 M
,
´´M N
$str
´´O Q
)
´´Q R
,
´´R S
false
´´T Y
,
´´Y Z!
Menu_SelectUVIsland
´´[ n
)
´´n o
;
´´o p
menu
¨¨ 
.
¨¨ 
AddItem
¨¨ $
(
¨¨$ %
new
¨¨% (

GUIContent
¨¨) 3
(
¨¨3 4
$str
¨¨4 K
,
¨¨K L
$str
¨¨M O
)
¨¨O P
,
¨¨P Q
false
¨¨R W
,
¨¨W X
Menu_SelectUVFace
¨¨Y j
)
¨¨j k
;
¨¨k l
menu
≠≠ 
.
≠≠ 
AddSeparator
≠≠ )
(
≠≠) *
$str
≠≠* ,
)
≠≠, -
;
≠≠- .
AddItemsToMenu
ÆÆ &
(
ÆÆ& '
menu
ÆÆ' +
)
ÆÆ+ ,
;
ÆÆ, -
menu
ØØ 
.
ØØ 
ShowAsContext
ØØ *
(
ØØ* +
)
ØØ+ ,
;
ØØ, -
}
∞∞ 
else
±± 
m_rightMouseDrag
≤≤ (
=
≤≤) *
false
≤≤+ 0
;
≤≤0 1
break
¥¥ 
;
¥¥ 
default
∂∂ 
:
∂∂ 
return
∑∑ 
;
∑∑ 
}
∏∏ 
}
ππ 	
void
ªª 
HandleKeyInput
ªª 
(
ªª 
Event
ªª !
e
ªª" #
)
ªª# $
{
ºº 	
if
ΩΩ 
(
ΩΩ 
e
ΩΩ 
.
ΩΩ 
type
ΩΩ 
!=
ΩΩ 
	EventType
ΩΩ #
.
ΩΩ# $
KeyUp
ΩΩ$ )
||
ΩΩ* ,
eatNextKeyUp
ΩΩ- 9
)
ΩΩ9 :
{
ææ 
eatNextKeyUp
øø 
=
øø 
false
øø $
;
øø$ %
return
¿¿ 
;
¿¿ 
}
¡¡ 
}
ƒƒ 	
bool
ÙÙ "
UpdateNearestElement
ÙÙ !
(
ÙÙ! "
Vector2
ÙÙ" )
mousePosition
ÙÙ* 7
)
ÙÙ7 8
{
ıı 	
if
ˆˆ 
(
ˆˆ 
	selection
ˆˆ 
==
ˆˆ 
null
ˆˆ !
||
ˆˆ" $
m_mouseDragging
ˆˆ% 4
||
ˆˆ5 7
modifyingUVs
ˆˆ8 D
||
ˆˆE G
tool
ˆˆH L
==
ˆˆM O
Tool
ˆˆP T
.
ˆˆT U
View
ˆˆU Y
)
ˆˆY Z
{
˜˜ 
if
¯¯ 
(
¯¯ 
nearestElement
¯¯ "
.
¯¯" #
valid
¯¯# (
)
¯¯( )
{
˘˘ 
nearestElement
˙˙ "
.
˙˙" #
valid
˙˙# (
=
˙˙) *
false
˙˙+ 0
;
˙˙0 1
return
˚˚ 
true
˚˚ 
;
˚˚  
}
¸¸ 
else
˝˝ 
{
˛˛ 
return
ˇˇ 
false
ˇˇ  
;
ˇˇ  !
}
ÄÄ 
}
ÅÅ 
Vector2
ÉÉ 
mpos
ÉÉ 
=
ÉÉ 
GUIToUVPoint
ÉÉ '
(
ÉÉ' (
mousePosition
ÉÉ( 5
)
ÉÉ5 6
;
ÉÉ6 7
Vector2
ÑÑ 
[
ÑÑ 
]
ÑÑ 
uv
ÑÑ 
;
ÑÑ 
Vector2
ÖÖ 
x
ÖÖ 
,
ÖÖ 
y
ÖÖ 
;
ÖÖ  
ObjectElementIndex
ÜÜ 
oei
ÜÜ "
=
ÜÜ# $
nearestElement
ÜÜ% 3
;
ÜÜ3 4
nearestElement
áá 
.
áá 
valid
áá  
=
áá! "
false
áá# (
;
áá( )
switch
ââ 
(
ââ 
ProBuilderEditor
ââ $
.
ââ$ %

selectMode
ââ% /
)
ââ/ 0
{
ää 
case
ãã 

SelectMode
ãã 
.
ãã  
Edge
ãã  $
:
ãã$ %
case
åå 

SelectMode
åå 
.
åå  
TextureEdge
åå  +
:
åå+ ,
float
çç 
dist
çç 
,
çç 
best
çç  $
=
çç% &
$num
çç' +
;
çç+ ,
try
èè 
{
êê 
for
ëë 
(
ëë 
int
ëë  
i
ëë! "
=
ëë# $
$num
ëë% &
;
ëë& '
i
ëë( )
<
ëë* +
	selection
ëë, 5
.
ëë5 6
Length
ëë6 <
;
ëë< =
i
ëë> ?
++
ëë? A
)
ëëA B
{
íí 
ProBuilderMesh
ìì *
pb
ìì+ -
=
ìì. /
	selection
ìì0 9
[
ìì9 :
i
ìì: ;
]
ìì; <
;
ìì< =
uv
îî 
=
îî  
pb
îî! #
.
îî# $
texturesInternal
îî$ 4
;
îî4 5
for
ññ 
(
ññ  !
int
ññ! $
n
ññ% &
=
ññ' (
$num
ññ) *
;
ññ* +
n
ññ, -
<
ññ. /
pb
ññ0 2
.
ññ2 3
facesInternal
ññ3 @
.
ññ@ A
Length
ññA G
;
ññG H
n
ññI J
++
ññJ L
)
ññL M
{
óó 
for
òò  #
(
òò$ %
int
òò% (
p
òò) *
=
òò+ ,
$num
òò- .
;
òò. /
p
òò0 1
<
òò2 3
pb
òò4 6
.
òò6 7
facesInternal
òò7 D
[
òòD E
n
òòE F
]
òòF G
.
òòG H
edgesInternal
òòH U
.
òòU V
Length
òòV \
;
òò\ ]
p
òò^ _
++
òò_ a
)
òòa b
{
ôô  !
x
öö$ %
=
öö& '
uv
öö( *
[
öö* +
pb
öö+ -
.
öö- .
facesInternal
öö. ;
[
öö; <
n
öö< =
]
öö= >
.
öö> ?
edgesInternal
öö? L
[
ööL M
p
ööM N
]
ööN O
.
ööO P
a
ööP Q
]
ööQ R
;
ööR S
y
õõ$ %
=
õõ& '
uv
õõ( *
[
õõ* +
pb
õõ+ -
.
õõ- .
facesInternal
õõ. ;
[
õõ; <
n
õõ< =
]
õõ= >
.
õõ> ?
edgesInternal
õõ? L
[
õõL M
p
õõM N
]
õõN O
.
õõO P
b
õõP Q
]
õõQ R
;
õõR S
dist
ùù$ (
=
ùù) *
Math
ùù+ /
.
ùù/ 0&
DistancePointLineSegment
ùù0 H
(
ùùH I
mpos
ùùI M
,
ùùM N
x
ùùO P
,
ùùP Q
y
ùùR S
)
ùùS T
;
ùùT U
if
üü$ &
(
üü' (
dist
üü( ,
<
üü- .
best
üü/ 3
)
üü3 4
{
††$ %
nearestElement
°°( 6
.
°°6 7
objectIndex
°°7 B
=
°°C D
i
°°E F
;
°°F G
nearestElement
¢¢( 6
.
¢¢6 7
elementIndex
¢¢7 C
=
¢¢D E
n
¢¢F G
;
¢¢G H
nearestElement
££( 6
.
££6 7
elementSubIndex
££7 F
=
££G H
p
££I J
;
££J K
best
§§( ,
=
§§- .
dist
§§/ 3
;
§§3 4
}
••$ %
}
¶¶  !
}
ßß 
}
®® 
}
©© 
catch
™™ 
{
™™ 
}
™™ 
nearestElement
¨¨ "
.
¨¨" #
valid
¨¨# (
=
¨¨) *
best
¨¨+ /
<
¨¨0 1!
MIN_DIST_MOUSE_EDGE
¨¨2 E
;
¨¨E F
break
≠≠ 
;
≠≠ 
case
ØØ 

SelectMode
ØØ 
.
ØØ  
Face
ØØ  $
:
ØØ$ %
case
∞∞ 

SelectMode
∞∞ 
.
∞∞  
TextureFace
∞∞  +
:
∞∞+ ,
try
≤≤ 
{
≥≥ 
bool
¥¥ 

superBreak
¥¥ '
=
¥¥( )
false
¥¥* /
;
¥¥/ 0
for
µµ 
(
µµ 
int
µµ  
i
µµ! "
=
µµ# $
$num
µµ% &
;
µµ& '
i
µµ( )
<
µµ* +
	selection
µµ, 5
.
µµ5 6
Length
µµ6 <
;
µµ< =
i
µµ> ?
++
µµ? A
)
µµA B
{
∂∂ 
uv
∑∑ 
=
∑∑  
	selection
∑∑! *
[
∑∑* +
i
∑∑+ ,
]
∑∑, -
.
∑∑- .
texturesInternal
∑∑. >
;
∑∑> ?
for
ππ 
(
ππ  !
int
ππ! $
n
ππ% &
=
ππ' (
$num
ππ) *
;
ππ* +
n
ππ, -
<
ππ. /
	selection
ππ0 9
[
ππ9 :
i
ππ: ;
]
ππ; <
.
ππ< =
facesInternal
ππ= J
.
ππJ K
Length
ππK Q
;
ππQ R
n
ππS T
++
ππT V
)
ππV W
{
∫∫ 
if
ªª  "
(
ªª# $
Math
ªª$ (
.
ªª( )
PointInPolygon
ªª) 7
(
ªª7 8
uv
ªª8 :
,
ªª: ;
mpos
ªª< @
,
ªª@ A
	selection
ªªB K
[
ªªK L
i
ªªL M
]
ªªM N
.
ªªN O
facesInternal
ªªO \
[
ªª\ ]
n
ªª] ^
]
ªª^ _
.
ªª_ `
edgesInternal
ªª` m
.
ªªm n
AllTriangles
ªªn z
(
ªªz {
)
ªª{ |
)
ªª| }
)
ªª} ~
{
ºº  !
nearestElement
ΩΩ$ 2
.
ΩΩ2 3
objectIndex
ΩΩ3 >
=
ΩΩ? @
i
ΩΩA B
;
ΩΩB C
nearestElement
ææ$ 2
.
ææ2 3
elementIndex
ææ3 ?
=
ææ@ A
n
ææB C
;
ææC D
nearestElement
øø$ 2
.
øø2 3
elementSubIndex
øø3 B
=
øøC D
-
øøE F
$num
øøF G
;
øøG H
nearestElement
¿¿$ 2
.
¿¿2 3
valid
¿¿3 8
=
¿¿9 :
true
¿¿; ?
;
¿¿? @

superBreak
¡¡$ .
=
¡¡/ 0
true
¡¡1 5
;
¡¡5 6
break
¬¬$ )
;
¬¬) *
}
√√  !
if
≈≈  "
(
≈≈# $

superBreak
≈≈$ .
)
≈≈. /
break
∆∆$ )
;
∆∆) *
}
«« 
}
»» 
}
…… 
catch
   
{
   
}
   
break
ÃÃ 
;
ÃÃ 
}
ÕÕ 
return
œœ 
!
œœ 
nearestElement
œœ "
.
œœ" #
Equals
œœ# )
(
œœ) *
oei
œœ* -
)
œœ- .
;
œœ. /
}
–– 	
public
÷÷ 
void
÷÷ 
SetTool
÷÷ 
(
÷÷ 
Tool
÷÷  
tool
÷÷! %
)
÷÷% &
{
◊◊ 	
this
ÿÿ 
.
ÿÿ 
tool
ÿÿ 
=
ÿÿ 
tool
ÿÿ 
;
ÿÿ 
nearestElement
ŸŸ 
.
ŸŸ 
Clear
ŸŸ  
(
ŸŸ  !
)
ŸŸ! "
;
ŸŸ" #
Repaint
⁄⁄ 
(
⁄⁄ 
)
⁄⁄ 
;
⁄⁄ 
}
€€ 	
private
‡‡ 
void
‡‡ 
SetTool_Internal
‡‡ %
(
‡‡% &
Tool
‡‡& *
tool
‡‡+ /
)
‡‡/ 0
{
·· 	
SetTool
‚‚ 
(
‚‚ 
tool
‚‚ 
)
‚‚ 
;
‚‚ 
if
‰‰ 
(
‰‰ 
tool
‰‰ 
==
‰‰ 
Tool
‰‰ 
.
‰‰ 
View
‰‰ !
)
‰‰! "
Tools
ÂÂ 
.
ÂÂ 
current
ÂÂ 
=
ÂÂ 
Tool
ÂÂ  $
.
ÂÂ$ %
View
ÂÂ% )
;
ÂÂ) *
else
ÊÊ 
Tools
ÁÁ 
.
ÁÁ 
current
ÁÁ 
=
ÁÁ 
Tool
ÁÁ  $
.
ÁÁ$ %
None
ÁÁ% )
;
ÁÁ) *
if
ÈÈ 
(
ÈÈ 
editor
ÈÈ 
)
ÈÈ 
{
ÍÍ 
editor
ÎÎ 
.
ÎÎ 
SetTool
ÎÎ 
(
ÎÎ 
tool
ÎÎ #
)
ÎÎ# $
;
ÎÎ$ %
	SceneView
ÏÏ 
.
ÏÏ 

RepaintAll
ÏÏ $
(
ÏÏ$ %
)
ÏÏ% &
;
ÏÏ& '
}
ÌÌ 
}
ÓÓ 	
bool
 &
GetFaceFromMousePosition
 %
(
% &
Vector2
& -
mousePosition
. ;
,
; <
ProBuilderMesh
= K
pb
L N
,
N O
out
P S
Face
T X
faceSelected
Y e
)
e f
{
ÒÒ 	
Vector2
ÚÚ 
mpos
ÚÚ 
=
ÚÚ 
GUIToUVPoint
ÚÚ '
(
ÚÚ' (
mousePosition
ÚÚ( 5
)
ÚÚ5 6
;
ÚÚ6 7
for
ÛÛ 
(
ÛÛ 
int
ÛÛ 
i
ÛÛ 
=
ÛÛ 
$num
ÛÛ 
;
ÛÛ 
i
ÛÛ 
<
ÛÛ 
pb
ÛÛ  "
.
ÛÛ" #
facesInternal
ÛÛ# 0
.
ÛÛ0 1
Length
ÛÛ1 7
;
ÛÛ7 8
i
ÛÛ9 :
++
ÛÛ: <
)
ÛÛ< =
{
ÙÙ 
if
ıı 
(
ıı 
Math
ıı 
.
ıı 
PointInPolygon
ıı '
(
ıı' (
pb
ıı( *
.
ıı* +
texturesInternal
ıı+ ;
,
ıı; <
mpos
ıı= A
,
ııA B
pb
ııC E
.
ııE F
facesInternal
ııF S
[
ııS T
i
ııT U
]
ııU V
.
ııV W
edgesInternal
ııW d
.
ııd e
AllTriangles
ııe q
(
ııq r
)
ıır s
)
ııs t
)
ııt u
{
ˆˆ 
faceSelected
˜˜  
=
˜˜! "
pb
˜˜# %
.
˜˜% &
facesInternal
˜˜& 3
[
˜˜3 4
i
˜˜4 5
]
˜˜5 6
;
˜˜6 7
return
¯¯ 
true
¯¯ 
;
¯¯  
}
˘˘ 
}
˙˙ 
faceSelected
˚˚ 
=
˚˚ 
new
˚˚ 
Face
˚˚ #
(
˚˚# $
)
˚˚$ %
;
˚˚% &
return
¸¸ 
false
¸¸ 
;
¸¸ 
}
˝˝ 	
void
ˇˇ 
OnMouseClick
ˇˇ 
(
ˇˇ 
Vector2
ˇˇ !
mousePosition
ˇˇ" /
)
ˇˇ/ 0
{
Ä	Ä	 	
if
Å	Å	 
(
Å	Å	 
	selection
Å	Å	 
==
Å	Å	 
null
Å	Å	 !
)
Å	Å	! "
return
Ç	Ç	 
;
Ç	Ç	 
switch
Ñ	Ñ	 
(
Ñ	Ñ	 
ProBuilderEditor
Ñ	Ñ	 $
.
Ñ	Ñ	$ %

selectMode
Ñ	Ñ	% /
)
Ñ	Ñ	/ 0
{
Ö	Ö	 
case
Ü	Ü	 

SelectMode
Ü	Ü	 
.
Ü	Ü	  
Edge
Ü	Ü	  $
:
Ü	Ü	$ %
case
á	á	 

SelectMode
á	á	 
.
á	á	  
TextureEdge
á	á	  +
:
á	á	+ ,
if
à	à	 
(
à	à	 
nearestElement
à	à	 &
.
à	à	& '
valid
à	à	' ,
)
à	à	, -
{
â	â	 
ProBuilderMesh
ä	ä	 &
mesh
ä	ä	' +
=
ä	ä	, -
	selection
ä	ä	. 7
[
ä	ä	7 8
nearestElement
ä	ä	8 F
.
ä	ä	F G
objectIndex
ä	ä	G R
]
ä	ä	R S
;
ä	ä	S T
Edge
å	å	 
edge
å	å	 !
=
å	å	" #
mesh
å	å	$ (
.
å	å	( )
facesInternal
å	å	) 6
[
å	å	6 7
nearestElement
å	å	7 E
.
å	å	E F
elementIndex
å	å	F R
]
å	å	R S
.
å	å	S T
edgesInternal
å	å	T a
[
å	å	a b
nearestElement
å	å	b p
.
å	å	p q
elementSubIndexå	å	q Ä
]å	å	Ä Å
;å	å	Å Ç
int
ç	ç	 
ind
ç	ç	 
=
ç	ç	  !
mesh
ç	ç	" &
.
ç	ç	& '
IndexOf
ç	ç	' .
(
ç	ç	. /
mesh
ç	ç	/ 3
.
ç	ç	3 4
selectedEdges
ç	ç	4 A
,
ç	ç	A B
edge
ç	ç	C G
)
ç	ç	G H
;
ç	ç	H I
if
è	è	 
(
è	è	 
ind
è	è	 
>
è	è	  !
-
è	è	" #
$num
è	è	# $
)
è	è	$ %
mesh
ê	ê	  
.
ê	ê	  !
SetSelectedEdges
ê	ê	! 1
(
ê	ê	1 2
mesh
ê	ê	2 6
.
ê	ê	6 7
selectedEdges
ê	ê	7 D
.
ê	ê	D E
ToArray
ê	ê	E L
(
ê	ê	L M
)
ê	ê	M N
.
ê	ê	N O
RemoveAt
ê	ê	O W
(
ê	ê	W X
ind
ê	ê	X [
)
ê	ê	[ \
)
ê	ê	\ ]
;
ê	ê	] ^
else
ë	ë	 
mesh
í	í	  
.
í	í	  !
SetSelectedEdges
í	í	! 1
(
í	í	1 2
mesh
í	í	2 6
.
í	í	6 7
selectedEdges
í	í	7 D
.
í	í	D E
ToArray
í	í	E L
(
í	í	L M
)
í	í	M N
.
í	í	N O
Add
í	í	O R
(
í	í	R S
edge
í	í	S W
)
í	í	W X
)
í	í	X Y
;
í	í	Y Z
}
ì	ì	 
break
ï	ï	 
;
ï	ï	 
case
ó	ó	 

SelectMode
ó	ó	 
.
ó	ó	  
Face
ó	ó	  $
:
ó	ó	$ %
case
ò	ò	 

SelectMode
ò	ò	 
.
ò	ò	  
TextureFace
ò	ò	  +
:
ò	ò	+ ,
Face
ö	ö	 
tempFace
ö	ö	 !
;
ö	ö	! "
for
õ	õ	 
(
õ	õ	 
int
õ	õ	 
i
õ	õ	 
=
õ	õ	  
$num
õ	õ	! "
;
õ	õ	" #
i
õ	õ	$ %
<
õ	õ	& '
	selection
õ	õ	( 1
.
õ	õ	1 2
Length
õ	õ	2 8
;
õ	õ	8 9
i
õ	õ	: ;
++
õ	õ	; =
)
õ	õ	= >
{
ú	ú	 
if
ù	ù	 
(
ù	ù	 &
GetFaceFromMousePosition
ù	ù	 4
(
ù	ù	4 5
mousePosition
ù	ù	5 B
,
ù	ù	B C
	selection
ù	ù	D M
[
ù	ù	M N
i
ù	ù	N O
]
ù	ù	O P
,
ù	ù	P Q
out
ù	ù	R U
tempFace
ù	ù	V ^
)
ù	ù	^ _
)
ù	ù	_ `
{
û	û	 
HashSet
ü	ü	 #
<
ü	ü	# $
Face
ü	ü	$ (
>
ü	ü	( )
selectedFaces
ü	ü	* 7
=
ü	ü	8 9
new
ü	ü	: =
HashSet
ü	ü	> E
<
ü	ü	E F
Face
ü	ü	F J
>
ü	ü	J K
(
ü	ü	K L
	selection
ü	ü	L U
[
ü	ü	U V
i
ü	ü	V W
]
ü	ü	W X
.
ü	ü	X Y#
selectedFacesInternal
ü	ü	Y n
)
ü	ü	n o
;
ü	ü	o p
if
†	†	 
(
†	†	  
selectedFaces
†	†	  -
.
†	†	- .
Contains
†	†	. 6
(
†	†	6 7
tempFace
†	†	7 ?
)
†	†	? @
)
†	†	@ A
selectedFaces
°	°	  -
.
°	°	- .
Remove
°	°	. 4
(
°	°	4 5
tempFace
°	°	5 =
)
°	°	= >
;
°	°	> ?
else
¢	¢	  
selectedFaces
£	£	  -
.
£	£	- .
Add
£	£	. 1
(
£	£	1 2
tempFace
£	£	2 :
)
£	£	: ;
;
£	£	; <
	selection
•	•	 %
[
•	•	% &
i
•	•	& '
]
•	•	' (
.
•	•	( )
SetSelectedFaces
•	•	) 9
(
•	•	9 :
selectedFaces
•	•	: G
.
•	•	G H
ToArray
•	•	H O
(
•	•	O P
)
•	•	P Q
)
•	•	Q R
;
•	•	R S
break
¶	¶	 !
;
¶	¶	! "
}
ß	ß	 
}
®	®	 
break
©	©	 
;
©	©	 
case
´	´	 

SelectMode
´	´	 
.
´	´	  
Vertex
´	´	  &
:
´	´	& '
case
¨	¨	 

SelectMode
¨	¨	 
.
¨	¨	  
TextureVertex
¨	¨	  -
:
¨	¨	- ."
RefreshUVCoordinates
≠	≠	 (
(
≠	≠	( )
new
≠	≠	) ,
Rect
≠	≠	- 1
(
≠	≠	1 2
mousePosition
≠	≠	2 ?
.
≠	≠	? @
x
≠	≠	@ A
-
≠	≠	B C
$num
≠	≠	D E
,
≠	≠	E F
mousePosition
≠	≠	G T
.
≠	≠	T U
y
≠	≠	U V
-
≠	≠	W X
$num
≠	≠	Y Z
,
≠	≠	Z [
$num
≠	≠	\ ^
,
≠	≠	^ _
$num
≠	≠	` b
)
≠	≠	b c
,
≠	≠	c d
true
≠	≠	e i
)
≠	≠	i j
;
≠	≠	j k
break
Æ	Æ	 
;
Æ	Æ	 
}
Ø	Ø	 
if
±	±	 
(
±	±	 
editor
±	±	 
)
±	±	 
{
≤	≤	 
ProBuilderEditor
≥	≥	  
.
≥	≥	  !
Refresh
≥	≥	! (
(
≥	≥	( )
)
≥	≥	) *
;
≥	≥	* +
	SceneView
¥	¥	 
.
¥	¥	 

RepaintAll
¥	¥	 $
(
¥	¥	$ %
)
¥	¥	% &
;
¥	¥	& '
}
µ	µ	 
else
∂	∂	 
{
∑	∑	 *
RefreshSelectedUVCoordinates
∏	∏	 ,
(
∏	∏	, -
)
∏	∏	- .
;
∏	∏	. /
}
π	π	 
}
∫	∫	 	
void
º	º	 
OnMouseDrag
º	º	 
(
º	º	 
)
º	º	 
{
Ω	Ω	 	
Event
æ	æ	 
e
æ	æ	 
=
æ	æ	 
Event
æ	æ	 
.
æ	æ	 
current
æ	æ	 #
;
æ	æ	# $
if
¿	¿	 
(
¿	¿	 
editor
¿	¿	 
&&
¿	¿	 
!
¿	¿	 
e
¿	¿	 
.
¿	¿	 
shift
¿	¿	 "
&&
¿	¿	# %
!
¿	¿	& '
e
¿	¿	' (
.
¿	¿	( )
control
¿	¿	) 0
&&
¿	¿	1 3
!
¿	¿	4 5
e
¿	¿	5 6
.
¿	¿	6 7
command
¿	¿	7 >
)
¿	¿	> ?
{
¡	¡	 
UndoUtility
¬	¬	 
.
¬	¬	 
RecordSelection
¬	¬	 +
(
¬	¬	+ ,
	selection
¬	¬	, 5
,
¬	¬	5 6
$str
¬	¬	7 I
)
¬	¬	I J
;
¬	¬	J K
editor
√	√	 
.
√	√	 #
ClearElementSelection
√	√	 ,
(
√	√	, -
)
√	√	- .
;
√	√	. /
}
ƒ	ƒ	 "
RefreshUVCoordinates
∆	∆	  
(
∆	∆	  !
dragRect
∆	∆	! )
,
∆	∆	) *
false
∆	∆	+ 0
)
∆	∆	0 1
;
∆	∆	1 2
e
«	«	 
.
«	«	 
Use
«	«	 
(
«	«	 
)
«	«	 
;
«	«	 
}
»	»	 	
float
Œ	Œ	 

uvRotation
Œ	Œ	 
=
Œ	Œ	 
$num
Œ	Œ	 
;
Œ	Œ	 
Vector2
œ	œ	 
uvOrigin
œ	œ	 
=
œ	œ	 
Vector2
œ	œ	 "
.
œ	œ	" #
zero
œ	œ	# '
;
œ	œ	' (
Vector2
—	—	 
[
—	—	 
]
—	—	 
[
—	—	 
]
—	—	 

uv_origins
—	—	 
=
—	—	  
null
—	—	! %
;
—	—	% & 
AutoUnwrapSettings
“	“	 
[
“	“	 
]
“	“	 
[
“	“	 
]
“	“	 1
#m_AutoUnwrapSettingsPreModification
“	“	 B
;
“	“	B C
Vector2
”	”	 
handlePosition
”	”	 
=
”	”	  
Vector2
”	”	! (
.
”	”	( )
zero
”	”	) -
,
”	”	- .#
handlePosition_origin
‘	‘	 %
=
‘	‘	& '
Vector2
‘	‘	( /
.
‘	‘	/ 0
zero
‘	‘	0 4
,
‘	‘	4 5#
handlePosition_offset
’	’	 %
=
’	’	& '
Vector2
’	’	( /
.
’	’	/ 0
zero
’	’	0 4
;
’	’	4 5
void
⁄	⁄	 
MoveTool
⁄	⁄	 
(
⁄	⁄	 
)
⁄	⁄	 
{
€	€	 	
Event
‹	‹	 
e
‹	‹	 
=
‹	‹	 
Event
‹	‹	 
.
‹	‹	 
current
‹	‹	 #
;
‹	‹	# $
Vector2
ﬁ	ﬁ	 
t_handlePosition
ﬁ	ﬁ	 $
=
ﬁ	ﬁ	% &
UVToGUIPoint
ﬁ	ﬁ	' 3
(
ﬁ	ﬁ	3 4
handlePosition
ﬁ	ﬁ	4 B
)
ﬁ	ﬁ	B C
;
ﬁ	ﬁ	C D!
EditorHandleUtility
‡	‡	 
.
‡	‡	  
limitToLeftButton
‡	‡	  1
=
‡	‡	2 3
false
‡	‡	4 9
;
‡	‡	9 :
t_handlePosition
·	·	 
=
·	·	 !
EditorHandleUtility
·	·	 2
.
·	·	2 3
PositionHandle2d
·	·	3 C
(
·	·	C D
$num
·	·	D E
,
·	·	E F
t_handlePosition
·	·	G W
,
·	·	W X
HANDLE_SIZE
·	·	Y d
)
·	·	d e
;
·	·	e f
t_handlePosition
‚	‚	 
=
‚	‚	 
GUIToUVPoint
‚	‚	 +
(
‚	‚	+ ,
t_handlePosition
‚	‚	, <
)
‚	‚	< =
;
‚	‚	= >!
EditorHandleUtility
„	„	 
.
„	„	  
limitToLeftButton
„	„	  1
=
„	„	2 3
true
„	„	4 8
;
„	„	8 9
if
Â	Â	 
(
Â	Â	 
!
Â	Â	 
e
Â	Â	 
.
Â	Â	 
isMouse
Â	Â	 
)
Â	Â	 
return
Ê	Ê	 
;
Ê	Ê	 
if
È	È	 
(
È	È	 
(
È	È	 
e
È	È	 
.
È	È	 
button
È	È	 
==
È	È	  
RIGHT_MOUSE_BUTTON
È	È	 /
||
È	È	0 2
(
È	È	3 4
e
È	È	4 5
.
È	È	5 6
alt
È	È	6 9
&&
È	È	: <
e
È	È	= >
.
È	È	> ?
button
È	È	? E
==
È	È	F H
LEFT_MOUSE_BUTTON
È	È	I Z
)
È	È	Z [
)
È	È	[ \
&&
È	È	] _
!
È	È	` a
Math
È	È	a e
.
È	È	e f
Approx2
È	È	f m
(
È	È	m n
t_handlePosition
È	È	n ~
,
È	È	~ 
handlePositionÈ	È	Ä é
,È	È	é è
$numÈ	È	ê ñ
)È	È	ñ ó
)È	È	ó ò
{
Í	Í	 
	userPivot
Î	Î	 
=
Î	Î	 
true
Î	Î	  
;
Î	Î	  !
if
Ì	Ì	 
(
Ì	Ì	 

ControlKey
Ì	Ì	 
)
Ì	Ì	 
{
Ó	Ó	 
handlePosition
Ô	Ô	 "
=
Ô	Ô	# $ 
ProBuilderSnapping
Ô	Ô	% 7
.
Ô	Ô	7 8
	SnapValue
Ô	Ô	8 A
(
Ô	Ô	A B
t_handlePosition
Ô	Ô	B R
,
Ô	Ô	R S
(
Ô	Ô	T U
Vector3
Ô	Ô	U \
)
Ô	Ô	\ ]
new
Ô	Ô	^ a
Vector3Mask
Ô	Ô	b m
(
Ô	Ô	m n
(
Ô	Ô	n o
handlePosition
Ô	Ô	o }
-
Ô	Ô	~  
t_handlePositionÔ	Ô	Ä ê
)Ô	Ô	ê ë
,Ô	Ô	ë í
MathÔ	Ô	ì ó
.Ô	Ô	ó ò
handleEpsilonÔ	Ô	ò •
)Ô	Ô	• ¶
*Ô	Ô	ß ®#
s_GridSnapIncrementÔ	Ô	© º
)Ô	Ô	º Ω
;Ô	Ô	Ω æ
}
		 
else
Ò	Ò	 
{
Ú	Ú	 
handlePosition
Û	Û	 "
=
Û	Û	# $
t_handlePosition
Û	Û	% 5
;
Û	Û	5 6
if
¯	¯	 
(
¯	¯	 
ShiftKey
¯	¯	  
)
¯	¯	  !
{
˘	˘	 
float
˙	˙	 
dist
˙	˙	 "
,
˙	˙	" #
minDist
˙	˙	$ +
=
˙	˙	, -,
MAX_PROXIMITY_SNAP_DIST_CANVAS
˙	˙	. L
;
˙	˙	L M
Vector2
˚	˚	 
offset
˚	˚	  &
=
˚	˚	' (
Vector2
˚	˚	) 0
.
˚	˚	0 1
zero
˚	˚	1 5
;
˚	˚	5 6
for
¸	¸	 
(
¸	¸	 
int
¸	¸	  
i
¸	¸	! "
=
¸	¸	# $
$num
¸	¸	% &
;
¸	¸	& '
i
¸	¸	( )
<
¸	¸	* +
	selection
¸	¸	, 5
.
¸	¸	5 6
Length
¸	¸	6 <
;
¸	¸	< =
i
¸	¸	> ?
++
¸	¸	? A
)
¸	¸	A B
{
˝	˝	 
int
ˇ	ˇ	 
index
ˇ	ˇ	  %
=
ˇ	ˇ	& '!
EditorHandleUtility
ˇ	ˇ	( ;
.
ˇ	ˇ	; <
NearestPoint
ˇ	ˇ	< H
(
ˇ	ˇ	H I
handlePosition
ˇ	ˇ	I W
,
ˇ	ˇ	W X
	selection
ˇ	ˇ	Y b
[
ˇ	ˇ	b c
i
ˇ	ˇ	c d
]
ˇ	ˇ	d e
.
ˇ	ˇ	e f
texturesInternal
ˇ	ˇ	f v
,
ˇ	ˇ	v w-
MAX_PROXIMITY_SNAP_DIST_CANVASˇ	ˇ	x ñ
)ˇ	ˇ	ñ ó
;ˇ	ˇ	ó ò
if
Å
Å
 
(
Å
Å
  
index
Å
Å
  %
<
Å
Å
& '
$num
Å
Å
( )
)
Å
Å
) *
continue
Ç
Ç
  (
;
Ç
Ç
( )
dist
Ñ
Ñ
  
=
Ñ
Ñ
! "
Vector2
Ñ
Ñ
# *
.
Ñ
Ñ
* +
Distance
Ñ
Ñ
+ 3
(
Ñ
Ñ
3 4
	selection
Ñ
Ñ
4 =
[
Ñ
Ñ
= >
i
Ñ
Ñ
> ?
]
Ñ
Ñ
? @
.
Ñ
Ñ
@ A
texturesInternal
Ñ
Ñ
A Q
[
Ñ
Ñ
Q R
index
Ñ
Ñ
R W
]
Ñ
Ñ
W X
,
Ñ
Ñ
X Y
handlePosition
Ñ
Ñ
Z h
)
Ñ
Ñ
h i
;
Ñ
Ñ
i j
if
Ü
Ü
 
(
Ü
Ü
  
dist
Ü
Ü
  $
<
Ü
Ü
% &
minDist
Ü
Ü
' .
)
Ü
Ü
. /
{
á
á
 
minDist
à
à
  '
=
à
à
( )
dist
à
à
* .
;
à
à
. /
offset
â
â
  &
=
â
â
' (
	selection
â
â
) 2
[
â
â
2 3
i
â
â
3 4
]
â
â
4 5
.
â
â
5 6
texturesInternal
â
â
6 F
[
â
â
F G
index
â
â
G L
]
â
â
L M
-
â
â
N O
handlePosition
â
â
P ^
;
â
â
^ _
}
ä
ä
 
}
ã
ã
 
handlePosition
ç
ç
 &
+=
ç
ç
' )
offset
ç
ç
* 0
;
ç
ç
0 1
}
é
é
 
}
è
è
 
SetHandlePosition
ë
ë
 !
(
ë
ë
! "
handlePosition
ë
ë
" 0
,
ë
ë
0 1
true
ë
ë
2 6
)
ë
ë
6 7
;
ë
ë
7 8
return
ì
ì
 
;
ì
ì
 
}
î
î
 
if
ô
ô
 
(
ô
ô
 
!
ô
ô
 
Math
ô
ô
 
.
ô
ô
 
Approx2
ô
ô
 
(
ô
ô
 
t_handlePosition
ô
ô
 .
,
ô
ô
. /
handlePosition
ô
ô
0 >
,
ô
ô
> ?
Math
ô
ô
@ D
.
ô
ô
D E
handleEpsilon
ô
ô
E R
)
ô
ô
R S
)
ô
ô
S T
{
ö
ö
 
if
ú
ú
 
(
ú
ú
 
!
ú
ú
 
modifyingUVs
ú
ú
 !
)
ú
ú
! "
{
ù
ù
 
UndoUtility
û
û
 
.
û
û
  
RecordSelection
û
û
  /
(
û
û
/ 0
	selection
û
û
0 9
,
û
û
9 :
$str
û
û
; J
)
û
û
J K
;
û
û
K L#
handlePosition_origin
ü
ü
 )
=
ü
ü
* +
handlePosition
ü
ü
, :
;
ü
ü
: ;#
OnBeginUVModification
†
†
 )
(
†
†
) *
)
†
†
* +
;
†
†
+ ,
}
°
°
 
needsRepaint
£
£
 
=
£
£
 
true
£
£
 #
;
£
£
# $
Vector2
•
•
 
newUVPosition
•
•
 %
=
•
•
& '
t_handlePosition
•
•
( 8
;
•
•
8 9
if
ß
ß
 
(
ß
ß
 

ControlKey
ß
ß
 
)
ß
ß
 
newUVPosition
®
®
 !
=
®
®
" # 
ProBuilderSnapping
®
®
$ 6
.
®
®
6 7
	SnapValue
®
®
7 @
(
®
®
@ A
newUVPosition
®
®
A N
,
®
®
N O
new
®
®
P S
Vector3Mask
®
®
T _
(
®
®
_ `
(
®
®
` a
handlePosition
®
®
a o
-
®
®
p q
t_handlePosition®
®
r Ç
)®
®
Ç É
,®
®
É Ñ
Math®
®
Ö â
.®
®
â ä
handleEpsilon®
®
ä ó
)®
®
ó ò
*®
®
ô ö#
s_GridSnapIncrement®
®
õ Æ
)®
®
Æ Ø
;®
®
Ø ∞
for
™
™
 
(
™
™
 
int
™
™
 
n
™
™
 
=
™
™
 
$num
™
™
 
;
™
™
 
n
™
™
  !
<
™
™
" #
	selection
™
™
$ -
.
™
™
- .
Length
™
™
. 4
;
™
™
4 5
n
™
™
6 7
++
™
™
7 9
)
™
™
9 :
{
´
´
 
ProBuilderMesh
¨
¨
 "
pb
¨
¨
# %
=
¨
¨
& '
	selection
¨
¨
( 1
[
¨
¨
1 2
n
¨
¨
2 3
]
¨
¨
3 4
;
¨
¨
4 5
Vector2
≠
≠
 
[
≠
≠
 
]
≠
≠
 
uvs
≠
≠
 !
=
≠
≠
" #
	UVEditing
≠
≠
$ -
.
≠
≠
- .
GetUVs
≠
≠
. 4
(
≠
≠
4 5
pb
≠
≠
5 7
,
≠
≠
7 8
channel
≠
≠
9 @
)
≠
≠
@ A
;
≠
≠
A B
foreach
Ø
Ø
 
(
Ø
Ø
 
int
Ø
Ø
  
i
Ø
Ø
! "
in
Ø
Ø
# %(
m_DistinctIndexesSelection
Ø
Ø
& @
[
Ø
Ø
@ A
n
Ø
Ø
A B
]
Ø
Ø
B C
)
Ø
Ø
C D
uvs
∞
∞
 
[
∞
∞
 
i
∞
∞
 
]
∞
∞
 
=
∞
∞
  
newUVPosition
∞
∞
! .
-
∞
∞
/ 0
(
∞
∞
1 2
uvOrigin
∞
∞
2 :
-
∞
∞
; <

uv_origins
∞
∞
= G
[
∞
∞
G H
n
∞
∞
H I
]
∞
∞
I J
[
∞
∞
J K
i
∞
∞
K L
]
∞
∞
L M
)
∞
∞
M N
;
∞
∞
N O
	UVEditing
≥
≥
 
.
≥
≥
 
ApplyUVs
≥
≥
 &
(
≥
≥
& '
pb
≥
≥
' )
,
≥
≥
) *
uvs
≥
≥
+ .
,
≥
≥
. /
channel
≥
≥
0 7
,
≥
≥
7 8
(
≥
≥
9 :
!
≥
≥
: ;
ShiftKey
≥
≥
; C
||
≥
≥
D F

ControlKey
≥
≥
G Q
)
≥
≥
Q R
&&
≥
≥
S U
channel
≥
≥
V ]
==
≥
≥
^ `
$num
≥
≥
a b
)
≥
≥
b c
;
≥
≥
c d
}
¥
¥
 
if
∑
∑
 
(
∑
∑
 
ShiftKey
∑
∑
 
&&
∑
∑
 
!
∑
∑
  !

ControlKey
∑
∑
! +
)
∑
∑
+ ,
{
∏
∏
 
Vector2
π
π
 
nearestDelta
π
π
 (
=
π
π
) *
Vector2
π
π
+ 2
.
π
π
2 3
one
π
π
3 6
;
π
π
6 7
for
ª
ª
 
(
ª
ª
 
int
ª
ª
 
i
ª
ª
 
=
ª
ª
  
$num
ª
ª
! "
;
ª
ª
" #
i
ª
ª
$ %
<
ª
ª
& '
	selection
ª
ª
( 1
.
ª
ª
1 2
Length
ª
ª
2 8
;
ª
ª
8 9
i
ª
ª
: ;
++
ª
ª
; =
)
ª
ª
= >
{
º
º
 
Vector2
Ω
Ω
 
[
Ω
Ω
  
]
Ω
Ω
  !
sel
Ω
Ω
" %
=
Ω
Ω
& '
UnityEngine
Ω
Ω
( 3
.
Ω
Ω
3 4

ProBuilder
Ω
Ω
4 >
.
Ω
Ω
> ?
ArrayUtility
Ω
Ω
? K
.
Ω
Ω
K L
ValuesWithIndexes
Ω
Ω
L ]
(
Ω
Ω
] ^
	UVEditing
Ω
Ω
^ g
.
Ω
Ω
g h
GetUVs
Ω
Ω
h n
(
Ω
Ω
n o
	selection
Ω
Ω
o x
[
Ω
Ω
x y
i
Ω
Ω
y z
]
Ω
Ω
z {
,
Ω
Ω
{ |
channelΩ
Ω
} Ñ
)Ω
Ω
Ñ Ö
,Ω
Ω
Ö Ü*
m_DistinctIndexesSelectionΩ
Ω
á °
[Ω
Ω
° ¢
iΩ
Ω
¢ £
]Ω
Ω
£ §
)Ω
Ω
§ •
;Ω
Ω
• ¶
for
ø
ø
 
(
ø
ø
 
int
ø
ø
  
n
ø
ø
! "
=
ø
ø
# $
$num
ø
ø
% &
;
ø
ø
& '
n
ø
ø
( )
<
ø
ø
* +
	selection
ø
ø
, 5
.
ø
ø
5 6
Length
ø
ø
6 <
;
ø
ø
< =
n
ø
ø
> ?
++
ø
ø
? A
)
ø
ø
A B
{
¿
¿
 
Vector2
¡
¡
 #
offset
¡
¡
$ *
;
¡
¡
* +
if
¬
¬
 
(
¬
¬
  !
EditorHandleUtility
¬
¬
  3
.
¬
¬
3 4
NearestPointDelta
¬
¬
4 E
(
¬
¬
E F
sel
¬
¬
F I
,
¬
¬
I J
	UVEditing
¬
¬
K T
.
¬
¬
T U
GetUVs
¬
¬
U [
(
¬
¬
[ \
	selection
¬
¬
\ e
[
¬
¬
e f
n
¬
¬
f g
]
¬
¬
g h
,
¬
¬
h i
channel
¬
¬
j q
)
¬
¬
q r
,
¬
¬
r s
i
¬
¬
t u
==
¬
¬
v x
n
¬
¬
y z
?
¬
¬
{ |)
m_DistinctIndexesSelection¬
¬
} ó
[¬
¬
ó ò
i¬
¬
ò ô
]¬
¬
ô ö
:¬
¬
õ ú
null¬
¬
ù °
,¬
¬
° ¢*
MAX_PROXIMITY_SNAP_DIST_UV¬
¬
£ Ω
,¬
¬
Ω æ
out¬
¬
ø ¬
offset¬
¬
√ …
)¬
¬
…  
)¬
¬
  À
{
√
√
 
if
ƒ
ƒ
  "
(
ƒ
ƒ
# $!
EditorHandleUtility
ƒ
ƒ
$ 7
.
ƒ
ƒ
7 8#
CurrentAxisConstraint
ƒ
ƒ
8 M
.
ƒ
ƒ
M N
Mask
ƒ
ƒ
N R
(
ƒ
ƒ
R S
offset
ƒ
ƒ
S Y
)
ƒ
ƒ
Y Z
.
ƒ
ƒ
Z [
sqrMagnitude
ƒ
ƒ
[ g
<
ƒ
ƒ
h i
nearestDelta
ƒ
ƒ
j v
.
ƒ
ƒ
v w
sqrMagnitudeƒ
ƒ
w É
)ƒ
ƒ
É Ñ
nearestDelta
≈
≈
$ 0
=
≈
≈
1 2
offset
≈
≈
3 9
;
≈
≈
9 :
}
∆
∆
 
}
«
«
 
}
»
»
 
if
 
 
 
(
 
 
 
nearestDelta
 
 
 $
.
 
 
$ %
sqrMagnitude
 
 
% 1
<
 
 
2 3
$num
 
 
4 9
)
 
 
9 :
{
À
À
 
nearestDelta
Ã
Ã
 $
=
Ã
Ã
% &!
EditorHandleUtility
Ã
Ã
' :
.
Ã
Ã
: ;#
CurrentAxisConstraint
Ã
Ã
; P
.
Ã
Ã
P Q
Mask
Ã
Ã
Q U
(
Ã
Ã
U V
nearestDelta
Ã
Ã
V b
)
Ã
Ã
b c
;
Ã
Ã
c d
for
Œ
Œ
 
(
Œ
Œ
 
int
Œ
Œ
  
i
Œ
Œ
! "
=
Œ
Œ
# $
$num
Œ
Œ
% &
;
Œ
Œ
& '
i
Œ
Œ
( )
<
Œ
Œ
* +
	selection
Œ
Œ
, 5
.
Œ
Œ
5 6
Length
Œ
Œ
6 <
;
Œ
Œ
< =
i
Œ
Œ
> ?
++
Œ
Œ
? A
)
Œ
Œ
A B
{
œ
œ
 
Vector2
–
–
 #
[
–
–
# $
]
–
–
$ %
uvs
–
–
& )
=
–
–
* +
	UVEditing
–
–
, 5
.
–
–
5 6
GetUVs
–
–
6 <
(
–
–
< =
	selection
–
–
= F
[
–
–
F G
i
–
–
G H
]
–
–
H I
,
–
–
I J
channel
–
–
K R
)
–
–
R S
;
–
–
S T
foreach
“
“
 #
(
“
“
$ %
int
“
“
% (
n
“
“
) *
in
“
“
+ -(
m_DistinctIndexesSelection
“
“
. H
[
“
“
H I
i
“
“
I J
]
“
“
J K
)
“
“
K L
uvs
”
”
  #
[
”
”
# $
n
”
”
$ %
]
”
”
% &
+=
”
”
' )
nearestDelta
”
”
* 6
;
”
”
6 7
	UVEditing
’
’
 %
.
’
’
% &
ApplyUVs
’
’
& .
(
’
’
. /
	selection
’
’
/ 8
[
’
’
8 9
i
’
’
9 :
]
’
’
: ;
,
’
’
; <
uvs
’
’
= @
,
’
’
@ A
channel
’
’
B I
)
’
’
I J
;
’
’
J K
}
÷
÷
 
handlePosition
ÿ
ÿ
 &
=
ÿ
ÿ
' (
newUVPosition
ÿ
ÿ
) 6
+
ÿ
ÿ
7 8
nearestDelta
ÿ
ÿ
9 E
;
ÿ
ÿ
E F
}
Ÿ
Ÿ
 
else
⁄
⁄
 
{
€
€
 
if
‹
‹
 
(
‹
‹
 
channel
‹
‹
 #
==
‹
‹
$ &
$num
‹
‹
' (
)
‹
‹
( )
{
›
›
 
for
ﬁ
ﬁ
 
(
ﬁ
ﬁ
  !
int
ﬁ
ﬁ
! $
i
ﬁ
ﬁ
% &
=
ﬁ
ﬁ
' (
$num
ﬁ
ﬁ
) *
;
ﬁ
ﬁ
* +
i
ﬁ
ﬁ
, -
<
ﬁ
ﬁ
. /
	selection
ﬁ
ﬁ
0 9
.
ﬁ
ﬁ
9 :
Length
ﬁ
ﬁ
: @
;
ﬁ
ﬁ
@ A
i
ﬁ
ﬁ
B C
++
ﬁ
ﬁ
C E
)
ﬁ
ﬁ
E F
{
ﬂ
ﬂ
 
	selection
‡
‡
  )
[
‡
‡
) *
i
‡
‡
* +
]
‡
‡
+ ,
.
‡
‡
, -
mesh
‡
‡
- 1
.
‡
‡
1 2
uv
‡
‡
2 4
=
‡
‡
5 6
	selection
‡
‡
7 @
[
‡
‡
@ A
i
‡
‡
A B
]
‡
‡
B C
.
‡
‡
C D
texturesInternal
‡
‡
D T
;
‡
‡
T U
}
·
·
 
}
‚
‚
 
}
„
„
 
}
‰
‰
 *
RefreshSelectedUVCoordinates
Ê
Ê
 ,
(
Ê
Ê
, -
)
Ê
Ê
- .
;
Ê
Ê
. /
for
È
È
 
(
È
È
 
int
È
È
 
i
È
È
 
=
È
È
 
$num
È
È
 
,
È
È
 
c
È
È
  
=
È
È
! "
	selection
È
È
# ,
.
È
È
, -
Length
È
È
- 3
;
È
È
3 4
i
È
È
5 6
<
È
È
7 8
c
È
È
9 :
;
È
È
: ;
i
È
È
< =
++
È
È
= ?
)
È
È
? @
{
Í
Í
 
var
Î
Î
 
mesh
Î
Î
 
=
Î
Î
 
	selection
Î
Î
 (
[
Î
Î
( )
i
Î
Î
) *
]
Î
Î
* +
;
Î
Î
+ ,
var
Ï
Ï
 
selected
Ï
Ï
  
=
Ï
Ï
! "
mesh
Ï
Ï
# '
.
Ï
Ï
' ()
selectedFaceIndicesInternal
Ï
Ï
( C
;
Ï
Ï
C D
var
Ì
Ì
 
faces
Ì
Ì
 
=
Ì
Ì
 
mesh
Ì
Ì
  $
.
Ì
Ì
$ %
facesInternal
Ì
Ì
% 2
;
Ì
Ì
2 3
for
Ó
Ó
 
(
Ó
Ó
 
int
Ó
Ó
 
n
Ó
Ó
 
=
Ó
Ó
 
$num
Ó
Ó
  !
,
Ó
Ó
! "
f
Ó
Ó
# $
=
Ó
Ó
% &
mesh
Ó
Ó
' +
.
Ó
Ó
+ ,
selectedFaceCount
Ó
Ó
, =
;
Ó
Ó
= >
n
Ó
Ó
? @
<
Ó
Ó
A B
f
Ó
Ó
C D
;
Ó
Ó
D E
n
Ó
Ó
F G
++
Ó
Ó
G I
)
Ó
Ó
I J
{
Ô
Ô
 
var


 
face


  
=


! "
faces


# (
[


( )
selected


) 1
[


1 2
n


2 3
]


3 4
]


4 5
;


5 6
if
Ò
Ò
 
(
Ò
Ò
 
face
Ò
Ò
  
.
Ò
Ò
  !
manualUV
Ò
Ò
! )
)
Ò
Ò
) *
continue
Ú
Ú
 $
;
Ú
Ú
$ %
var
Û
Û
 
uv
Û
Û
 
=
Û
Û
  
face
Û
Û
! %
.
Û
Û
% &
uv
Û
Û
& (
;
Û
Û
( )
uv
Ù
Ù
 
.
Ù
Ù
 
offset
Ù
Ù
 !
=
Ù
Ù
" #1
#m_AutoUnwrapSettingsPreModification
Ù
Ù
$ G
[
Ù
Ù
G H
i
Ù
Ù
H I
]
Ù
Ù
I J
[
Ù
Ù
J K
n
Ù
Ù
K L
]
Ù
Ù
L M
.
Ù
Ù
M N
offset
Ù
Ù
N T
-
Ù
Ù
U V
(
Ù
Ù
W X
handlePosition
Ù
Ù
X f
-
Ù
Ù
g h#
handlePosition_origin
Ù
Ù
i ~
)
Ù
Ù
~ 
;Ù
Ù
 Ä
face
ı
ı
 
.
ı
ı
 
uv
ı
ı
 
=
ı
ı
  !
uv
ı
ı
" $
;
ı
ı
$ %
}
ˆ
ˆ
 
}
˜
˜
 
}
¯
¯
 
}
˘
˘
 	
private
˚
˚
 
static
˚
˚
 
readonly
˚
˚
 
Vector3
˚
˚
  '
	Vec3_Zero
˚
˚
( 1
=
˚
˚
2 3
Vector3
˚
˚
4 ;
.
˚
˚
; <
zero
˚
˚
< @
;
˚
˚
@ A
internal
˝
˝
 
void
˝
˝
 
SceneMoveTool
˝
˝
 #
(
˝
˝
# $
Vector2
˝
˝
$ +
delta
˝
˝
, 1
)
˝
˝
1 2
{
˛
˛
 	
if
ÑÑ 
(
ÑÑ 
!
ÑÑ 
Math
ÑÑ 
.
ÑÑ 
Approx2
ÑÑ 
(
ÑÑ 
delta
ÑÑ #
,
ÑÑ# $
	Vec3_Zero
ÑÑ% .
,
ÑÑ. /
$num
ÑÑ0 8
)
ÑÑ8 9
)
ÑÑ9 :
{
ÖÖ 
if
áá 
(
áá 
!
áá 
modifyingUVs
áá !
)
áá! "
{
àà 
UndoUtility
ââ 
.
ââ  
RecordSelection
ââ  /
(
ââ/ 0
	selection
ââ0 9
,
ââ9 :
$str
ââ; E
)
ââE F
;
ââF G#
OnBeginUVModification
ää )
(
ää) *
)
ää* +
;
ää+ ,
uvOrigin
ãã 
=
ãã 
handlePosition
ãã -
;
ãã- .#
handlePosition_origin
åå )
=
åå* +
handlePosition
åå, :
;
åå: ;
}
çç 
handlePosition
èè 
.
èè 
x
èè  
+=
èè! #
delta
èè$ )
.
èè) *
x
èè* +
;
èè+ ,
handlePosition
êê 
.
êê 
y
êê  
+=
êê! #
delta
êê$ )
.
êê) *
y
êê* +
;
êê+ ,
if
íí 
(
íí 

ControlKey
íí 
)
íí 
handlePosition
ìì "
=
ìì# $ 
ProBuilderSnapping
ìì% 7
.
ìì7 8
	SnapValue
ìì8 A
(
ììA B
handlePosition
ììB P
,
ììP Q
new
ììR U
Vector3Mask
ììV a
(
ììa b
(
ììb c
handlePosition
ììc q
-
ììr s
handlePositionììt Ç
)ììÇ É
,ììÉ Ñ
MathììÖ â
.ììâ ä
handleEpsilonììä ó
)ììó ò
*ììô ö#
s_GridSnapIncrementììõ Æ
)ììÆ Ø
;ììØ ∞
for
ïï 
(
ïï 
int
ïï 
n
ïï 
=
ïï 
$num
ïï 
;
ïï 
n
ïï  !
<
ïï" #
	selection
ïï$ -
.
ïï- .
Length
ïï. 4
;
ïï4 5
n
ïï6 7
++
ïï7 9
)
ïï9 :
{
ññ 
ProBuilderMesh
óó "
pb
óó# %
=
óó& '
	selection
óó( 1
[
óó1 2
n
óó2 3
]
óó3 4
;
óó4 5
Vector2
òò 
[
òò 
]
òò 
uvs
òò !
=
òò" #
	UVEditing
òò$ -
.
òò- .
GetUVs
òò. 4
(
òò4 5
pb
òò5 7
,
òò7 8
channel
òò9 @
)
òò@ A
;
òòA B
foreach
öö 
(
öö 
int
öö  
i
öö! "
in
öö# %(
m_DistinctIndexesSelection
öö& @
[
öö@ A
n
ööA B
]
ööB C
)
ööC D
uvs
õõ 
[
õõ 
i
õõ 
]
õõ 
+=
õõ !
delta
õõ" '
;
õõ' (
	UVEditing
ùù 
.
ùù 
ApplyUVs
ùù &
(
ùù& '
pb
ùù' )
,
ùù) *
uvs
ùù+ .
,
ùù. /
channel
ùù0 7
)
ùù7 8
;
ùù8 9
}
ûû *
RefreshSelectedUVCoordinates
†† ,
(
††, -
)
††- .
;
††. /
}
°° 
}
¢¢ 	
void
§§ 

RotateTool
§§ 
(
§§ 
)
§§ 
{
•• 	
float
¶¶ 
t_uvRotation
¶¶ 
=
¶¶  

uvRotation
¶¶! +
;
¶¶+ ,

uvRotation
®® 
=
®® !
EditorHandleUtility
®® ,
.
®®, -
RotationHandle2d
®®- =
(
®®= >
$num
®®> ?
,
®®? @
UVToGUIPoint
®®A M
(
®®M N
handlePosition
®®N \
)
®®\ ]
,
®®] ^

uvRotation
®®_ i
,
®®i j
$num
®®k n
)
®®n o
;
®®o p
if
™™ 
(
™™ 
!
™™ 
Math
™™ 
.
™™ 
Approx
™™ 
(
™™ 

uvRotation
™™ '
,
™™' (
t_uvRotation
™™) 5
)
™™5 6
)
™™6 7
{
´´ 
if
¨¨ 
(
¨¨ 
!
¨¨ 
modifyingUVs
¨¨ !
)
¨¨! "
{
≠≠ 
UndoUtility
ÆÆ 
.
ÆÆ  
RecordSelection
ÆÆ  /
(
ÆÆ/ 0
	selection
ÆÆ0 9
,
ÆÆ9 :
$str
ÆÆ; G
)
ÆÆG H
;
ÆÆH I#
OnBeginUVModification
ØØ )
(
ØØ) *
)
ØØ* +
;
ØØ+ ,
}
∞∞ 
if
≤≤ 
(
≤≤ 

ControlKey
≤≤ 
)
≤≤ 

uvRotation
≥≥ 
=
≥≥   
ProBuilderSnapping
≥≥! 3
.
≥≥3 4
	SnapValue
≥≥4 =
(
≥≥= >

uvRotation
≥≥> H
,
≥≥H I
$num
≥≥J M
)
≥≥M N
;
≥≥N O
if
∂∂ 
(
∂∂ 
mode
∂∂ 
==
∂∂ 
UVMode
∂∂ "
.
∂∂" #
Mixed
∂∂# (
||
∂∂) +
mode
∂∂, 0
==
∂∂1 3
UVMode
∂∂4 :
.
∂∂: ;
Manual
∂∂; A
)
∂∂A B
{
∑∑ 
for
∏∏ 
(
∏∏ 
int
∏∏ 
n
∏∏ 
=
∏∏  
$num
∏∏! "
;
∏∏" #
n
∏∏$ %
<
∏∏& '
	selection
∏∏( 1
.
∏∏1 2
Length
∏∏2 8
;
∏∏8 9
n
∏∏: ;
++
∏∏; =
)
∏∏= >
{
ππ 
ProBuilderMesh
∫∫ &
pb
∫∫' )
=
∫∫* +
	selection
∫∫, 5
[
∫∫5 6
n
∫∫6 7
]
∫∫7 8
;
∫∫8 9
Vector2
ªª 
[
ªª  
]
ªª  !
uvs
ªª" %
=
ªª& '
	UVEditing
ªª( 1
.
ªª1 2
GetUVs
ªª2 8
(
ªª8 9
pb
ªª9 ;
,
ªª; <
channel
ªª= D
)
ªªD E
;
ªªE F
foreach
ΩΩ 
(
ΩΩ  !
int
ΩΩ! $
i
ΩΩ% &
in
ΩΩ' )(
m_DistinctIndexesSelection
ΩΩ* D
[
ΩΩD E
n
ΩΩE F
]
ΩΩF G
)
ΩΩG H
uvs
ææ 
[
ææ  
i
ææ  !
]
ææ! "
=
ææ# $

uv_origins
ææ% /
[
ææ/ 0
n
ææ0 1
]
ææ1 2
[
ææ2 3
i
ææ3 4
]
ææ4 5
.
ææ5 6
RotateAroundPoint
ææ6 G
(
ææG H
uvOrigin
ææH P
,
ææP Q

uvRotation
ææR \
)
ææ\ ]
;
ææ] ^
	UVEditing
¿¿ !
.
¿¿! "
ApplyUVs
¿¿" *
(
¿¿* +
pb
¿¿+ -
,
¿¿- .
uvs
¿¿/ 2
,
¿¿2 3
channel
¿¿4 ;
)
¿¿; <
;
¿¿< =
}
¡¡ 
}
¬¬ 
if
≈≈ 
(
≈≈ 
mode
≈≈ 
==
≈≈ 
UVMode
≈≈ "
.
≈≈" #
Mixed
≈≈# (
||
≈≈) +
mode
≈≈, 0
==
≈≈1 3
UVMode
≈≈4 :
.
≈≈: ;
Auto
≈≈; ?
)
≈≈? @
{
∆∆ 
for
«« 
(
«« 
int
«« 
n
«« 
=
««  
$num
««! "
;
««" #
n
««$ %
<
««& '
	selection
««( 1
.
««1 2
Length
««2 8
;
««8 9
n
««: ;
++
««; =
)
««= >
{
»» 
Face
…… 
[
…… 
]
…… 
	autoFaces
…… (
=
……) *
System
……+ 1
.
……1 2
Array
……2 7
.
……7 8
FindAll
……8 ?
(
……? @
	selection
……@ I
[
……I J
n
……J K
]
……K L
.
……L M#
selectedFacesInternal
……M b
,
……b c
x
……d e
=>
……f h
!
……i j
x
……j k
.
……k l
manualUV
……l t
)
……t u
;
……u v
foreach
ÀÀ 
(
ÀÀ  !
Face
ÀÀ! %
face
ÀÀ& *
in
ÀÀ+ -
	autoFaces
ÀÀ. 7
)
ÀÀ7 8
{
ÃÃ 
var
ÕÕ 
uv
ÕÕ  "
=
ÕÕ# $
face
ÕÕ% )
.
ÕÕ) *
uv
ÕÕ* ,
;
ÕÕ, -
uv
ŒŒ 
.
ŒŒ 
rotation
ŒŒ '
+=
ŒŒ( *

uvRotation
ŒŒ+ 5
-
ŒŒ6 7
t_uvRotation
ŒŒ8 D
;
ŒŒD E
if
œœ 
(
œœ  
uv
œœ  "
.
œœ" #
rotation
œœ# +
>
œœ, -
$num
œœ. 2
)
œœ2 3
uv
––  "
.
––" #
rotation
––# +
=
––, -
uv
––. 0
.
––0 1
rotation
––1 9
%
––: ;
$num
––< @
;
––@ A
else
——  
if
——! #
(
——$ %
uv
——% '
.
——' (
rotation
——( 0
<
——1 2
$num
——3 5
)
——5 6
uv
““  "
.
““" #
rotation
““# +
=
““, -
$num
““. 2
+
““3 4
(
““5 6
uv
““6 8
.
““8 9
rotation
““9 A
%
““B C
$num
““D H
)
““H I
;
““I J
face
””  
.
””  !
uv
””! #
=
””$ %
uv
””& (
;
””( )
}
‘‘ 
	selection
÷÷ !
[
÷÷! "
n
÷÷" #
]
÷÷# $
.
÷÷$ %
	RefreshUV
÷÷% .
(
÷÷. /
	autoFaces
÷÷/ 8
)
÷÷8 9
;
÷÷9 :
}
◊◊ *
RefreshSelectedUVCoordinates
ŸŸ 0
(
ŸŸ0 1
)
ŸŸ1 2
;
ŸŸ2 3
}
⁄⁄ 
nearestElement
‹‹ 
.
‹‹ 
valid
‹‹ $
=
‹‹% &
false
‹‹' ,
;
‹‹, -
}
›› 
needsRepaint
ﬂﬂ 
=
ﬂﬂ 
true
ﬂﬂ 
;
ﬂﬂ  
}
‡‡ 	
internal
‚‚ 
void
‚‚ 
SceneRotateTool
‚‚ %
(
‚‚% &
float
‚‚& +
rotation
‚‚, 4
)
‚‚4 5
{
„„ 	
if
‰‰ 
(
‰‰ 
rotation
‰‰ 
!=
‰‰ 

uvRotation
‰‰ &
)
‰‰& '
{
ÂÂ 
if
ÊÊ 
(
ÊÊ 

ControlKey
ÊÊ 
)
ÊÊ 
rotation
ÁÁ 
=
ÁÁ  
ProBuilderSnapping
ÁÁ 1
.
ÁÁ1 2
	SnapValue
ÁÁ2 ;
(
ÁÁ; <
rotation
ÁÁ< D
,
ÁÁD E
$num
ÁÁF I
)
ÁÁI J
;
ÁÁJ K
float
ÈÈ 
delta
ÈÈ 
=
ÈÈ 
rotation
ÈÈ &
-
ÈÈ' (

uvRotation
ÈÈ) 3
;
ÈÈ3 4

uvRotation
ÍÍ 
=
ÍÍ 
rotation
ÍÍ %
;
ÍÍ% &
if
ÏÏ 
(
ÏÏ 
!
ÏÏ 
modifyingUVs
ÏÏ !
)
ÏÏ! "
{
ÌÌ 
UndoUtility
ÓÓ 
.
ÓÓ  
RecordSelection
ÓÓ  /
(
ÓÓ/ 0
	selection
ÓÓ0 9
,
ÓÓ9 :
$str
ÓÓ; G
)
ÓÓG H
;
ÓÓH I#
OnBeginUVModification
ÔÔ )
(
ÔÔ) *
)
ÔÔ* +
;
ÔÔ+ ,
delta
 
=
 
$num
 
;
 
}
ÒÒ 
if
ÙÙ 
(
ÙÙ 
mode
ÙÙ 
==
ÙÙ 
UVMode
ÙÙ "
.
ÙÙ" #
Mixed
ÙÙ# (
||
ÙÙ) +
mode
ÙÙ, 0
==
ÙÙ1 3
UVMode
ÙÙ4 :
.
ÙÙ: ;
Manual
ÙÙ; A
)
ÙÙA B
{
ıı 
for
ˆˆ 
(
ˆˆ 
int
ˆˆ 
n
ˆˆ 
=
ˆˆ  
$num
ˆˆ! "
;
ˆˆ" #
n
ˆˆ$ %
<
ˆˆ& '
	selection
ˆˆ( 1
.
ˆˆ1 2
Length
ˆˆ2 8
;
ˆˆ8 9
n
ˆˆ: ;
++
ˆˆ; =
)
ˆˆ= >
{
˜˜ 
ProBuilderMesh
¯¯ &
pb
¯¯' )
=
¯¯* +
	selection
¯¯, 5
[
¯¯5 6
n
¯¯6 7
]
¯¯7 8
;
¯¯8 9
Vector2
˘˘ 
[
˘˘  
]
˘˘  !
uvs
˘˘" %
=
˘˘& '
	UVEditing
˘˘( 1
.
˘˘1 2
GetUVs
˘˘2 8
(
˘˘8 9
pb
˘˘9 ;
,
˘˘; <
channel
˘˘= D
)
˘˘D E
;
˘˘E F
foreach
˚˚ 
(
˚˚  !
int
˚˚! $
i
˚˚% &
in
˚˚' )(
m_DistinctIndexesSelection
˚˚* D
[
˚˚D E
n
˚˚E F
]
˚˚F G
)
˚˚G H
uvs
¸¸ 
[
¸¸  
i
¸¸  !
]
¸¸! "
=
¸¸# $

uv_origins
¸¸% /
[
¸¸/ 0
n
¸¸0 1
]
¸¸1 2
[
¸¸2 3
i
¸¸3 4
]
¸¸4 5
.
¸¸5 6
RotateAroundPoint
¸¸6 G
(
¸¸G H
uvOrigin
¸¸H P
,
¸¸P Q

uvRotation
¸¸R \
)
¸¸\ ]
;
¸¸] ^
	UVEditing
˛˛ !
.
˛˛! "
ApplyUVs
˛˛" *
(
˛˛* +
pb
˛˛+ -
,
˛˛- .
uvs
˛˛/ 2
,
˛˛2 3
channel
˛˛4 ;
)
˛˛; <
;
˛˛< =
}
ˇˇ 
}
ÄÄ 
if
ÉÉ 
(
ÉÉ 
mode
ÉÉ 
==
ÉÉ 
UVMode
ÉÉ "
.
ÉÉ" #
Mixed
ÉÉ# (
||
ÉÉ) +
mode
ÉÉ, 0
==
ÉÉ1 3
UVMode
ÉÉ4 :
.
ÉÉ: ;
Auto
ÉÉ; ?
)
ÉÉ? @
{
ÑÑ 
for
ÖÖ 
(
ÖÖ 
int
ÖÖ 
n
ÖÖ 
=
ÖÖ  
$num
ÖÖ! "
;
ÖÖ" #
n
ÖÖ$ %
<
ÖÖ& '
	selection
ÖÖ( 1
.
ÖÖ1 2
Length
ÖÖ2 8
;
ÖÖ8 9
n
ÖÖ: ;
++
ÖÖ; =
)
ÖÖ= >
{
ÜÜ 
Face
áá 
[
áá 
]
áá 
	autoFaces
áá (
=
áá) *
System
áá+ 1
.
áá1 2
Array
áá2 7
.
áá7 8
FindAll
áá8 ?
(
áá? @
	selection
áá@ I
[
ááI J
n
ááJ K
]
ááK L
.
ááL M#
selectedFacesInternal
ááM b
,
ááb c
x
áád e
=>
ááf h
!
áái j
x
ááj k
.
áák l
manualUV
áál t
)
áát u
;
ááu v
foreach
ââ 
(
ââ  !
Face
ââ! %
face
ââ& *
in
ââ+ -
	autoFaces
ââ. 7
)
ââ7 8
{
ää 
var
ãã 
uv
ãã  "
=
ãã# $
face
ãã% )
.
ãã) *
uv
ãã* ,
;
ãã, -
uv
åå 
.
åå 
rotation
åå '
+=
åå( *
delta
åå+ 0
;
åå0 1
face
çç  
.
çç  !
uv
çç! #
=
çç$ %
uv
çç& (
;
çç( )
}
éé 
	selection
êê !
[
êê! "
n
êê" #
]
êê# $
.
êê$ %
	RefreshUV
êê% .
(
êê. /
	autoFaces
êê/ 8
)
êê8 9
;
êê9 :
}
ëë *
RefreshSelectedUVCoordinates
ìì 0
(
ìì0 1
)
ìì1 2
;
ìì2 3
}
îî 
nearestElement
ññ 
.
ññ 
valid
ññ $
=
ññ% &
false
ññ' ,
;
ññ, -
}
óó 
}
òò 	
Vector2
öö 
uvScale
öö 
=
öö 
Vector2
öö !
.
öö! "
one
öö" %
;
öö% &
void
úú 
	ScaleTool
úú 
(
úú 
)
úú 
{
ùù 	
Vector2
ûû 
	t_uvScale
ûû 
=
ûû 
uvScale
ûû  '
;
ûû' (
uvScale
üü 
=
üü !
EditorHandleUtility
üü )
.
üü) *
ScaleHandle2d
üü* 7
(
üü7 8
$num
üü8 9
,
üü9 :
UVToGUIPoint
üü; G
(
üüG H
handlePosition
üüH V
)
üüV W
,
üüW X
uvScale
üüY `
,
üü` a
$num
üüb e
)
üüe f
;
üüf g
if
°° 
(
°° 

ControlKey
°° 
)
°° 
uvScale
¢¢ 
=
¢¢  
ProBuilderSnapping
¢¢ ,
.
¢¢, -
	SnapValue
¢¢- 6
(
¢¢6 7
uvScale
¢¢7 >
,
¢¢> ?!
s_GridSnapIncrement
¢¢@ S
)
¢¢S T
;
¢¢T U
if
§§ 
(
§§ 
Math
§§ 
.
§§ 
Approx
§§ 
(
§§ 
uvScale
§§ #
.
§§# $
x
§§$ %
,
§§% &
$num
§§' )
,
§§) *
Mathf
§§+ 0
.
§§0 1
Epsilon
§§1 8
)
§§8 9
)
§§9 :
uvScale
•• 
.
•• 
x
•• 
=
•• 
$num
•• "
;
••" #
if
¶¶ 
(
¶¶ 
Math
¶¶ 
.
¶¶ 
Approx
¶¶ 
(
¶¶ 
uvScale
¶¶ #
.
¶¶# $
y
¶¶$ %
,
¶¶% &
$num
¶¶' )
,
¶¶) *
Mathf
¶¶+ 0
.
¶¶0 1
Epsilon
¶¶1 8
)
¶¶8 9
)
¶¶9 :
uvScale
ßß 
.
ßß 
y
ßß 
=
ßß 
$num
ßß "
;
ßß" #
if
©© 
(
©© 
	t_uvScale
©© 
!=
©© 
uvScale
©© $
)
©©$ %
{
™™ 
if
´´ 
(
´´ 
!
´´ 
modifyingUVs
´´ !
)
´´! "
{
¨¨ 
UndoUtility
≠≠ 
.
≠≠  
RecordSelection
≠≠  /
(
≠≠/ 0
	selection
≠≠0 9
,
≠≠9 :
$str
≠≠; F
)
≠≠F G
;
≠≠G H#
OnBeginUVModification
ÆÆ )
(
ÆÆ) *
)
ÆÆ* +
;
ÆÆ+ ,
}
ØØ 
if
±± 
(
±± 
mode
±± 
==
±± 
UVMode
±± "
.
±±" #
Mixed
±±# (
||
±±) +
mode
±±, 0
==
±±1 3
UVMode
±±4 :
.
±±: ;
Manual
±±; A
)
±±A B
{
≤≤ 
for
≥≥ 
(
≥≥ 
int
≥≥ 
n
≥≥ 
=
≥≥  
$num
≥≥! "
;
≥≥" #
n
≥≥$ %
<
≥≥& '
	selection
≥≥( 1
.
≥≥1 2
Length
≥≥2 8
;
≥≥8 9
n
≥≥: ;
++
≥≥; =
)
≥≥= >
{
¥¥ 
ProBuilderMesh
µµ &
pb
µµ' )
=
µµ* +
	selection
µµ, 5
[
µµ5 6
n
µµ6 7
]
µµ7 8
;
µµ8 9
Vector2
∂∂ 
[
∂∂  
]
∂∂  !
uvs
∂∂" %
=
∂∂& '
	UVEditing
∂∂( 1
.
∂∂1 2
GetUVs
∂∂2 8
(
∂∂8 9
pb
∂∂9 ;
,
∂∂; <
channel
∂∂= D
)
∂∂D E
;
∂∂E F
foreach
∏∏ 
(
∏∏  !
int
∏∏! $
i
∏∏% &
in
∏∏' )(
m_DistinctIndexesSelection
∏∏* D
[
∏∏D E
n
∏∏E F
]
∏∏F G
)
∏∏G H
{
ππ 
uvs
∫∫ 
[
∫∫  
i
∫∫  !
]
∫∫! "
=
∫∫# $

uv_origins
∫∫% /
[
∫∫/ 0
n
∫∫0 1
]
∫∫1 2
[
∫∫2 3
i
∫∫3 4
]
∫∫4 5
.
∫∫5 6
ScaleAroundPoint
∫∫6 F
(
∫∫F G
uvOrigin
∫∫G O
,
∫∫O P
uvScale
∫∫Q X
)
∫∫X Y
;
∫∫Y Z
}
ªª 
	UVEditing
ΩΩ !
.
ΩΩ! "
ApplyUVs
ΩΩ" *
(
ΩΩ* +
pb
ΩΩ+ -
,
ΩΩ- .
uvs
ΩΩ/ 2
,
ΩΩ2 3
channel
ΩΩ4 ;
)
ΩΩ; <
;
ΩΩ< =
}
ææ 
}
øø 
if
ƒƒ 
(
ƒƒ 
mode
ƒƒ 
==
ƒƒ 
UVMode
ƒƒ "
.
ƒƒ" #
Mixed
ƒƒ# (
||
ƒƒ) +
mode
ƒƒ, 0
==
ƒƒ1 3
UVMode
ƒƒ4 :
.
ƒƒ: ;
Auto
ƒƒ; ?
)
ƒƒ? @
{
≈≈ 
Vector2
∆∆ 
scale
∆∆ !
=
∆∆" #
uvScale
∆∆$ +
.
∆∆+ ,
DivideBy
∆∆, 4
(
∆∆4 5
	t_uvScale
∆∆5 >
)
∆∆> ?
;
∆∆? @
for
«« 
(
«« 
int
«« 
n
«« 
=
««  
$num
««! "
;
««" #
n
««$ %
<
««& '
	selection
««( 1
.
««1 2
Length
««2 8
;
««8 9
n
««: ;
++
««; =
)
««= >
{
»» 
Face
…… 
[
…… 
]
…… 
	autoFaces
…… (
=
……) *
System
……+ 1
.
……1 2
Array
……2 7
.
……7 8
FindAll
……8 ?
(
……? @
	selection
……@ I
[
……I J
n
……J K
]
……K L
.
……L M#
selectedFacesInternal
……M b
,
……b c
x
……d e
=>
……f h
!
……i j
x
……j k
.
……k l
manualUV
……l t
)
……t u
;
……u v
foreach
   
(
    !
Face
  ! %
face
  & *
in
  + -
	autoFaces
  . 7
)
  7 8
{
ÀÀ 
var
ÃÃ 
uv
ÃÃ  "
=
ÃÃ# $
face
ÃÃ% )
.
ÃÃ) *
uv
ÃÃ* ,
;
ÃÃ, -
uv
ÕÕ 
.
ÕÕ 
scale
ÕÕ $
=
ÕÕ% &
Vector2
ÕÕ' .
.
ÕÕ. /
Scale
ÕÕ/ 4
(
ÕÕ4 5
face
ÕÕ5 9
.
ÕÕ9 :
uv
ÕÕ: <
.
ÕÕ< =
scale
ÕÕ= B
,
ÕÕB C
scale
ÕÕD I
)
ÕÕI J
;
ÕÕJ K
face
ŒŒ  
.
ŒŒ  !
uv
ŒŒ! #
=
ŒŒ$ %
uv
ŒŒ& (
;
ŒŒ( )
}
œœ 
	selection
—— !
[
——! "
n
——" #
]
——# $
.
——$ %
	RefreshUV
——% .
(
——. /
	autoFaces
——/ 8
)
——8 9
;
——9 :
}
““ *
RefreshSelectedUVCoordinates
‘‘ 0
(
‘‘0 1
)
‘‘1 2
;
‘‘2 3
}
’’ 
nearestElement
◊◊ 
.
◊◊ 
valid
◊◊ $
=
◊◊% &
false
◊◊' ,
;
◊◊, -
needsRepaint
ÿÿ 
=
ÿÿ 
true
ÿÿ #
;
ÿÿ# $
}
ŸŸ 
}
⁄⁄ 	
internal
ﬂﬂ 
void
ﬂﬂ 
SceneScaleTool
ﬂﬂ $
(
ﬂﬂ$ %
Vector2
ﬂﬂ% ,
textureScale
ﬂﬂ- 9
,
ﬂﬂ9 :
Vector2
ﬂﬂ; B
previousScale
ﬂﬂC P
)
ﬂﬂP Q
{
‡‡ 	
textureScale
·· 
.
·· 
x
·· 
=
·· 
$num
·· 
/
··  !
textureScale
··" .
.
··. /
x
··/ 0
;
··0 1
textureScale
‚‚ 
.
‚‚ 
y
‚‚ 
=
‚‚ 
$num
‚‚ 
/
‚‚  !
textureScale
‚‚" .
.
‚‚. /
y
‚‚/ 0
;
‚‚0 1
previousScale
‰‰ 
.
‰‰ 
x
‰‰ 
=
‰‰ 
$num
‰‰  
/
‰‰! "
previousScale
‰‰# 0
.
‰‰0 1
x
‰‰1 2
;
‰‰2 3
previousScale
ÂÂ 
.
ÂÂ 
y
ÂÂ 
=
ÂÂ 
$num
ÂÂ  
/
ÂÂ! "
previousScale
ÂÂ# 0
.
ÂÂ0 1
y
ÂÂ1 2
;
ÂÂ2 3
if
ÁÁ 
(
ÁÁ 

ControlKey
ÁÁ 
)
ÁÁ 
textureScale
ËË 
=
ËË  
ProBuilderSnapping
ËË 1
.
ËË1 2
	SnapValue
ËË2 ;
(
ËË; <
textureScale
ËË< H
,
ËËH I!
s_GridSnapIncrement
ËËJ ]
)
ËË] ^
;
ËË^ _
if
ÍÍ 
(
ÍÍ 
!
ÍÍ 
modifyingUVs
ÍÍ 
)
ÍÍ 
{
ÎÎ 
UndoUtility
ÏÏ 
.
ÏÏ 
RecordSelection
ÏÏ +
(
ÏÏ+ ,
	selection
ÏÏ, 5
,
ÏÏ5 6
$str
ÏÏ7 B
)
ÏÏB C
;
ÏÏC D#
OnBeginUVModification
ÌÌ %
(
ÌÌ% &
)
ÌÌ& '
;
ÌÌ' (
}
ÓÓ 
if
 
(
 
mode
 
==
 
UVMode
 
.
 
Mixed
 $
||
% '
mode
( ,
==
- /
UVMode
0 6
.
6 7
Manual
7 =
)
= >
{
ÒÒ 
for
ÚÚ 
(
ÚÚ 
int
ÚÚ 
n
ÚÚ 
=
ÚÚ 
$num
ÚÚ 
;
ÚÚ 
n
ÚÚ  !
<
ÚÚ" #
	selection
ÚÚ$ -
.
ÚÚ- .
Length
ÚÚ. 4
;
ÚÚ4 5
n
ÚÚ6 7
++
ÚÚ7 9
)
ÚÚ9 :
{
ÛÛ 
ProBuilderMesh
ÙÙ "
pb
ÙÙ# %
=
ÙÙ& '
	selection
ÙÙ( 1
[
ÙÙ1 2
n
ÙÙ2 3
]
ÙÙ3 4
;
ÙÙ4 5
Vector2
ıı 
[
ıı 
]
ıı 
uvs
ıı !
=
ıı" #
	UVEditing
ıı$ -
.
ıı- .
GetUVs
ıı. 4
(
ıı4 5
pb
ıı5 7
,
ıı7 8
channel
ıı9 @
)
ıı@ A
;
ııA B
foreach
˜˜ 
(
˜˜ 
int
˜˜  
i
˜˜! "
in
˜˜# %(
m_DistinctIndexesSelection
˜˜& @
[
˜˜@ A
n
˜˜A B
]
˜˜B C
)
˜˜C D
{
¯¯ 
uvs
˘˘ 
[
˘˘ 
i
˘˘ 
]
˘˘ 
=
˘˘  

uv_origins
˘˘! +
[
˘˘+ ,
n
˘˘, -
]
˘˘- .
[
˘˘. /
i
˘˘/ 0
]
˘˘0 1
.
˘˘1 2
ScaleAroundPoint
˘˘2 B
(
˘˘B C
uvOrigin
˘˘C K
,
˘˘K L
textureScale
˘˘M Y
)
˘˘Y Z
;
˘˘Z [
}
˙˙ 
	UVEditing
¸¸ 
.
¸¸ 
ApplyUVs
¸¸ &
(
¸¸& '
pb
¸¸' )
,
¸¸) *
uvs
¸¸+ .
,
¸¸. /
channel
¸¸0 7
)
¸¸7 8
;
¸¸8 9
}
˝˝ 
}
˛˛ 
if
ÅÅ 
(
ÅÅ 
mode
ÅÅ 
==
ÅÅ 
UVMode
ÅÅ 
.
ÅÅ 
Mixed
ÅÅ $
||
ÅÅ% '
mode
ÅÅ( ,
==
ÅÅ- /
UVMode
ÅÅ0 6
.
ÅÅ6 7
Auto
ÅÅ7 ;
)
ÅÅ; <
{
ÇÇ 
Vector2
ÉÉ 
delta
ÉÉ 
=
ÉÉ 
textureScale
ÉÉ  ,
.
ÉÉ, -
DivideBy
ÉÉ- 5
(
ÉÉ5 6
previousScale
ÉÉ6 C
)
ÉÉC D
;
ÉÉD E
for
ÖÖ 
(
ÖÖ 
int
ÖÖ 
n
ÖÖ 
=
ÖÖ 
$num
ÖÖ 
;
ÖÖ 
n
ÖÖ  !
<
ÖÖ" #
	selection
ÖÖ$ -
.
ÖÖ- .
Length
ÖÖ. 4
;
ÖÖ4 5
n
ÖÖ6 7
++
ÖÖ7 9
)
ÖÖ9 :
{
ÜÜ 
Face
áá 
[
áá 
]
áá 
	autoFaces
áá $
=
áá% &
System
áá' -
.
áá- .
Array
áá. 3
.
áá3 4
FindAll
áá4 ;
(
áá; <
	selection
áá< E
[
ááE F
n
ááF G
]
ááG H
.
ááH I#
selectedFacesInternal
ááI ^
,
áá^ _
x
áá` a
=>
ááb d
!
ááe f
x
ááf g
.
áág h
manualUV
ááh p
)
ááp q
;
ááq r
foreach
àà 
(
àà 
Face
àà !
face
àà" &
in
àà' )
	autoFaces
àà* 3
)
àà3 4
{
ââ 
var
ää 
uv
ää 
=
ää  
face
ää! %
.
ää% &
uv
ää& (
;
ää( )
uv
ãã 
.
ãã 
scale
ãã  
=
ãã! "
Vector2
ãã# *
.
ãã* +
Scale
ãã+ 0
(
ãã0 1
face
ãã1 5
.
ãã5 6
uv
ãã6 8
.
ãã8 9
scale
ãã9 >
,
ãã> ?
delta
ãã@ E
)
ããE F
;
ããF G
face
åå 
.
åå 
uv
åå 
=
åå  !
uv
åå" $
;
åå$ %
}
çç 
	selection
èè 
[
èè 
n
èè 
]
èè  
.
èè  !
	RefreshUV
èè! *
(
èè* +
	autoFaces
èè+ 4
)
èè4 5
;
èè5 6
}
êê *
RefreshSelectedUVCoordinates
íí ,
(
íí, -
)
íí- .
;
íí. /
}
ìì 
nearestElement
ïï 
.
ïï 
valid
ïï  
=
ïï! "
false
ïï# (
;
ïï( )
needsRepaint
ññ 
=
ññ 
true
ññ 
;
ññ  
}
óó 	
Vector2
úú 
UVGraphCenter
úú 
=
úú 
Vector2
úú  '
.
úú' (
zero
úú( ,
;
úú, -
internal
°° 
static
°° 
Vector2
°° 
	UpperLeft
°°  )
=
°°* +
new
°°, /
Vector2
°°0 7
(
°°7 8
$num
°°8 :
,
°°: ;
-
°°< =
$num
°°= ?
)
°°? @
;
°°@ A
internal
¢¢ 
static
¢¢ 
Vector2
¢¢ 

UpperRight
¢¢  *
=
¢¢+ ,
new
¢¢- 0
Vector2
¢¢1 8
(
¢¢8 9
$num
¢¢9 ;
,
¢¢; <
-
¢¢= >
$num
¢¢> @
)
¢¢@ A
;
¢¢A B
internal
££ 
static
££ 
Vector2
££ 
	LowerLeft
££  )
=
££* +
new
££, /
Vector2
££0 7
(
££7 8
$num
££8 :
,
££: ;
$num
££< >
)
££> ?
;
££? @
internal
§§ 
static
§§ 
Vector2
§§ 

LowerRight
§§  *
=
§§+ ,
new
§§- 0
Vector2
§§1 8
(
§§8 9
$num
§§9 ;
,
§§; <
$num
§§= ?
)
§§? @
;
§§@ A
private
¶¶ 
Rect
¶¶ 
UVGraphZeroZero
¶¶ $
=
¶¶% &
new
¶¶' *
Rect
¶¶+ /
(
¶¶/ 0
$num
¶¶0 1
,
¶¶1 2
$num
¶¶3 4
,
¶¶4 5
$num
¶¶6 8
,
¶¶8 9
$num
¶¶: <
)
¶¶< =
;
¶¶= >
private
ßß 
Rect
ßß 
UVGraphOneOne
ßß "
=
ßß# $
new
ßß% (
Rect
ßß) -
(
ßß- .
$num
ßß. /
,
ßß/ 0
$num
ßß1 2
,
ßß2 3
$num
ßß4 6
,
ßß6 7
$num
ßß8 :
)
ßß: ;
;
ßß; <
internal
¨¨ 
void
¨¨ 

DrawUVGrid
¨¨  
(
¨¨  !
Color
¨¨! &
	gridColor
¨¨' 0
)
¨¨0 1
{
≠≠ 	
Color
ÆÆ 
col
ÆÆ 
=
ÆÆ 
GUI
ÆÆ 
.
ÆÆ 
color
ÆÆ !
;
ÆÆ! "
	gridColor
ØØ 
.
ØØ 
a
ØØ 
=
ØØ 
$num
ØØ 
;
ØØ 
if
±± 
(
±± 
Event
±± 
.
±± 
current
±± 
.
±± 
type
±± "
==
±±# %
	EventType
±±& /
.
±±/ 0
Repaint
±±0 7
)
±±7 8
{
≤≤ 
GL
≥≥ 
.
≥≥ 

PushMatrix
≥≥ 
(
≥≥ 
)
≥≥ 
;
≥≥  !
EditorHandleUtility
¥¥ #
.
¥¥# $
handleMaterial
¥¥$ 2
.
¥¥2 3
SetPass
¥¥3 :
(
¥¥: ;
$num
¥¥; <
)
¥¥< =
;
¥¥= >
GL
µµ 
.
µµ 

MultMatrix
µµ 
(
µµ 
Handles
µµ %
.
µµ% &
matrix
µµ& ,
)
µµ, -
;
µµ- .
GL
∑∑ 
.
∑∑ 
Begin
∑∑ 
(
∑∑ 
GL
∑∑ 
.
∑∑ 
LINES
∑∑ !
)
∑∑! "
;
∑∑" #
GL
∏∏ 
.
∏∏ 
Color
∏∏ 
(
∏∏ 
	gridColor
∏∏ "
)
∏∏" #
;
∏∏# $
int
ªª 
	GridLines
ªª 
=
ªª 
$num
ªª  "
;
ªª" #
float
ºº 
StepSize
ºº 
=
ºº  !
s_GridSnapIncrement
ºº! 4
;
ºº4 5
while
øø 
(
øø 
StepSize
øø 
*
øø  !

uvGridSize
øø" ,
*
øø- .
uvGraphScale
øø/ ;
<
øø< =

uvGridSize
øø> H
/
øøI J
$num
øøK M
)
øøM N
StepSize
¿¿ 
*=
¿¿ 
$num
¿¿  "
;
¿¿" #
Vector2
√√ 

gridOffset
√√ "
=
√√# $
uvGraphOffset
√√% 2
;
√√2 3

gridOffset
ƒƒ 
.
ƒƒ 
x
ƒƒ 
=
ƒƒ 

gridOffset
ƒƒ )
.
ƒƒ) *
x
ƒƒ* +
%
ƒƒ, -
(
ƒƒ. /
StepSize
ƒƒ/ 7
*
ƒƒ8 9

uvGridSize
ƒƒ: D
*
ƒƒE F
uvGraphScale
ƒƒG S
)
ƒƒS T
;
ƒƒT U

gridOffset
≈≈ 
.
≈≈ 
y
≈≈ 
=
≈≈ 

gridOffset
≈≈ )
.
≈≈) *
y
≈≈* +
%
≈≈, -
(
≈≈. /
StepSize
≈≈/ 7
*
≈≈8 9

uvGridSize
≈≈: D
*
≈≈E F
uvGraphScale
≈≈G S
)
≈≈S T
;
≈≈T U
Vector2
«« 
p0
«« 
=
«« 
Vector2
«« $
.
««$ %
zero
««% )
,
««) *
p1
««+ -
=
««. /
Vector2
««0 7
.
««7 8
zero
««8 <
;
««< =
p0
   
.
   
x
   
=
   
(
   
(
   
StepSize
   !
*
  " #
(
  $ %
	GridLines
  % .
/
  / 0
$num
  1 2
)
  2 3
*
  4 5

uvGridSize
  6 @
)
  @ A
*
  B C
uvGraphScale
  D P
)
  P Q
+
  R S
UVGraphCenter
  T a
.
  a b
x
  b c
+
  d e

gridOffset
  f p
.
  p q
x
  q r
;
  r s
p1
ÀÀ 
.
ÀÀ 
x
ÀÀ 
=
ÀÀ 
(
ÀÀ 
(
ÀÀ 
-
ÀÀ 
StepSize
ÀÀ "
*
ÀÀ# $
(
ÀÀ% &
	GridLines
ÀÀ& /
/
ÀÀ0 1
$num
ÀÀ2 3
)
ÀÀ3 4
*
ÀÀ5 6

uvGridSize
ÀÀ7 A
)
ÀÀA B
*
ÀÀC D
uvGraphScale
ÀÀE Q
)
ÀÀQ R
+
ÀÀS T
UVGraphCenter
ÀÀU b
.
ÀÀb c
x
ÀÀc d
+
ÀÀe f

gridOffset
ÀÀg q
.
ÀÀq r
x
ÀÀr s
;
ÀÀs t
for
ÕÕ 
(
ÕÕ 
int
ÕÕ 
i
ÕÕ 
=
ÕÕ 
$num
ÕÕ 
;
ÕÕ 
i
ÕÕ  !
<
ÕÕ" #
	GridLines
ÕÕ$ -
+
ÕÕ. /
$num
ÕÕ0 1
;
ÕÕ1 2
i
ÕÕ3 4
++
ÕÕ4 6
)
ÕÕ6 7
{
ŒŒ 
p0
œœ 
.
œœ 
y
œœ 
=
œœ 
(
œœ 
(
œœ 
(
œœ 
StepSize
œœ &
*
œœ' (
i
œœ) *
)
œœ* +
-
œœ, -
(
œœ. /
(
œœ/ 0
	GridLines
œœ0 9
*
œœ: ;
StepSize
œœ< D
)
œœD E
/
œœF G
$num
œœH I
)
œœI J
)
œœJ K
*
œœL M

uvGridSize
œœN X
)
œœX Y
*
œœZ [
uvGraphScale
œœ\ h
+
œœi j
UVGraphCenter
œœk x
.
œœx y
y
œœy z
+
œœ{ |

gridOffsetœœ} á
.œœá à
yœœà â
;œœâ ä
p1
–– 
.
–– 
y
–– 
=
–– 
p0
–– 
.
–– 
y
–– 
;
––  
GL
““ 
.
““ 
Vertex
““ 
(
““ 
p0
““  
)
““  !
;
““! "
GL
”” 
.
”” 
Vertex
”” 
(
”” 
p1
””  
)
””  !
;
””! "
}
‘‘ 
p0
◊◊ 
.
◊◊ 
y
◊◊ 
=
◊◊ 
(
◊◊ 
(
◊◊ 
StepSize
◊◊ !
*
◊◊" #
(
◊◊$ %
	GridLines
◊◊% .
/
◊◊/ 0
$num
◊◊1 2
)
◊◊2 3
*
◊◊4 5

uvGridSize
◊◊6 @
)
◊◊@ A
*
◊◊B C
uvGraphScale
◊◊D P
)
◊◊P Q
+
◊◊R S
UVGraphCenter
◊◊T a
.
◊◊a b
y
◊◊b c
+
◊◊d e

gridOffset
◊◊f p
.
◊◊p q
y
◊◊q r
;
◊◊r s
p1
ÿÿ 
.
ÿÿ 
y
ÿÿ 
=
ÿÿ 
(
ÿÿ 
(
ÿÿ 
-
ÿÿ 
StepSize
ÿÿ "
*
ÿÿ# $
(
ÿÿ% &
	GridLines
ÿÿ& /
/
ÿÿ0 1
$num
ÿÿ2 3
)
ÿÿ3 4
*
ÿÿ5 6

uvGridSize
ÿÿ7 A
)
ÿÿA B
*
ÿÿC D
uvGraphScale
ÿÿE Q
)
ÿÿQ R
+
ÿÿS T
UVGraphCenter
ÿÿU b
.
ÿÿb c
y
ÿÿc d
+
ÿÿe f

gridOffset
ÿÿg q
.
ÿÿq r
y
ÿÿr s
;
ÿÿs t
for
⁄⁄ 
(
⁄⁄ 
int
⁄⁄ 
i
⁄⁄ 
=
⁄⁄ 
$num
⁄⁄ 
;
⁄⁄ 
i
⁄⁄  !
<
⁄⁄" #
	GridLines
⁄⁄$ -
+
⁄⁄. /
$num
⁄⁄0 1
;
⁄⁄1 2
i
⁄⁄3 4
++
⁄⁄4 6
)
⁄⁄6 7
{
€€ 
p0
‹‹ 
.
‹‹ 
x
‹‹ 
=
‹‹ 
(
‹‹ 
(
‹‹ 
(
‹‹ 
StepSize
‹‹ &
*
‹‹' (
i
‹‹) *
)
‹‹* +
-
‹‹, -
(
‹‹. /
(
‹‹/ 0
	GridLines
‹‹0 9
*
‹‹: ;
StepSize
‹‹< D
)
‹‹D E
/
‹‹F G
$num
‹‹H I
)
‹‹I J
)
‹‹J K
*
‹‹L M

uvGridSize
‹‹N X
)
‹‹X Y
*
‹‹Z [
uvGraphScale
‹‹\ h
+
‹‹i j
UVGraphCenter
‹‹k x
.
‹‹x y
x
‹‹y z
+
‹‹{ |

gridOffset‹‹} á
.‹‹á à
x‹‹à â
;‹‹â ä
p1
›› 
.
›› 
x
›› 
=
›› 
p0
›› 
.
›› 
x
›› 
;
››  
GL
ﬂﬂ 
.
ﬂﬂ 
Vertex
ﬂﬂ 
(
ﬂﬂ 
p0
ﬂﬂ  
)
ﬂﬂ  !
;
ﬂﬂ! "
GL
‡‡ 
.
‡‡ 
Vertex
‡‡ 
(
‡‡ 
p1
‡‡  
)
‡‡  !
;
‡‡! "
}
·· 
if
‰‰ 
(
‰‰ 
screenshotStatus
‰‰ $
==
‰‰% '
ScreenshotStatus
‰‰( 8
.
‰‰8 9
Done
‰‰9 =
)
‰‰= >
{
ÂÂ 
GL
ÊÊ 
.
ÊÊ 
Color
ÊÊ 
(
ÊÊ 
Color
ÊÊ "
.
ÊÊ" #
gray
ÊÊ# '
)
ÊÊ' (
;
ÊÊ( )
GL
ËË 
.
ËË 
Vertex
ËË 
(
ËË 
UVGraphCenter
ËË +
+
ËË, -
(
ËË. /
	UpperLeft
ËË/ 8
*
ËË9 :

uvGridSize
ËË; E
)
ËËE F
*
ËËG H
uvGraphScale
ËËI U
+
ËËV W
uvGraphOffset
ËËX e
)
ËËe f
;
ËËf g
GL
ÈÈ 
.
ÈÈ 
Vertex
ÈÈ 
(
ÈÈ 
UVGraphCenter
ÈÈ +
+
ÈÈ, -
(
ÈÈ. /

UpperRight
ÈÈ/ 9
*
ÈÈ: ;

uvGridSize
ÈÈ< F
)
ÈÈF G
*
ÈÈH I
uvGraphScale
ÈÈJ V
+
ÈÈW X
uvGraphOffset
ÈÈY f
)
ÈÈf g
;
ÈÈg h
GL
ÎÎ 
.
ÎÎ 
Vertex
ÎÎ 
(
ÎÎ 
UVGraphCenter
ÎÎ +
+
ÎÎ, -
(
ÎÎ. /

UpperRight
ÎÎ/ 9
*
ÎÎ: ;

uvGridSize
ÎÎ< F
)
ÎÎF G
*
ÎÎH I
uvGraphScale
ÎÎJ V
+
ÎÎW X
uvGraphOffset
ÎÎY f
)
ÎÎf g
;
ÎÎg h
GL
ÏÏ 
.
ÏÏ 
Vertex
ÏÏ 
(
ÏÏ 
UVGraphCenter
ÏÏ +
+
ÏÏ, -
(
ÏÏ. /

LowerRight
ÏÏ/ 9
*
ÏÏ: ;

uvGridSize
ÏÏ< F
)
ÏÏF G
*
ÏÏH I
uvGraphScale
ÏÏJ V
+
ÏÏW X
uvGraphOffset
ÏÏY f
)
ÏÏf g
;
ÏÏg h
GL
ÓÓ 
.
ÓÓ 
Color
ÓÓ 
(
ÓÓ 
PreferenceKeys
ÓÓ +
.
ÓÓ+ ,
proBuilderBlue
ÓÓ, :
)
ÓÓ: ;
;
ÓÓ; <
GL
 
.
 
Vertex
 
(
 
UVGraphCenter
 +
+
, -
(
. /

LowerRight
/ 9
*
: ;

uvGridSize
< F
)
F G
*
H I
uvGraphScale
J V
+
W X
uvGraphOffset
Y f
)
f g
;
g h
GL
ÒÒ 
.
ÒÒ 
Vertex
ÒÒ 
(
ÒÒ 
UVGraphCenter
ÒÒ +
+
ÒÒ, -
(
ÒÒ. /
	LowerLeft
ÒÒ/ 8
*
ÒÒ9 :

uvGridSize
ÒÒ; E
)
ÒÒE F
*
ÒÒG H
uvGraphScale
ÒÒI U
+
ÒÒV W
uvGraphOffset
ÒÒX e
)
ÒÒe f
;
ÒÒf g
GL
ÛÛ 
.
ÛÛ 
Vertex
ÛÛ 
(
ÛÛ 
UVGraphCenter
ÛÛ +
+
ÛÛ, -
(
ÛÛ. /
	LowerLeft
ÛÛ/ 8
*
ÛÛ9 :

uvGridSize
ÛÛ; E
)
ÛÛE F
*
ÛÛG H
uvGraphScale
ÛÛI U
+
ÛÛV W
uvGraphOffset
ÛÛX e
)
ÛÛe f
;
ÛÛf g
GL
ÙÙ 
.
ÙÙ 
Vertex
ÙÙ 
(
ÙÙ 
UVGraphCenter
ÙÙ +
+
ÙÙ, -
(
ÙÙ. /
	UpperLeft
ÙÙ/ 8
*
ÙÙ9 :

uvGridSize
ÙÙ; E
)
ÙÙE F
*
ÙÙG H
uvGraphScale
ÙÙI U
+
ÙÙV W
uvGraphOffset
ÙÙX e
)
ÙÙe f
;
ÙÙf g
}
ıı 
GL
˜˜ 
.
˜˜ 
End
˜˜ 
(
˜˜ 
)
˜˜ 
;
˜˜ 
GL
¯¯ 
.
¯¯ 
	PopMatrix
¯¯ 
(
¯¯ 
)
¯¯ 
;
¯¯ 
}
˘˘ 
GUI
˚˚ 
.
˚˚ 
color
˚˚ 
=
˚˚ 
	gridColor
˚˚ !
;
˚˚! "
UVGraphZeroZero
˝˝ 
.
˝˝ 
x
˝˝ 
=
˝˝ 
UVRectIdentity
˝˝  .
.
˝˝. /
x
˝˝/ 0
+
˝˝1 2
$num
˝˝3 4
;
˝˝4 5
UVGraphZeroZero
˛˛ 
.
˛˛ 
y
˛˛ 
=
˛˛ 
UVRectIdentity
˛˛  .
.
˛˛. /
y
˛˛/ 0
+
˛˛1 2
UVRectIdentity
˛˛3 A
.
˛˛A B
height
˛˛B H
+
˛˛I J
$num
˛˛K L
;
˛˛L M
UVGraphOneOne
ÄÄ 
.
ÄÄ 
x
ÄÄ 
=
ÄÄ 
UVRectIdentity
ÄÄ ,
.
ÄÄ, -
x
ÄÄ- .
+
ÄÄ/ 0
UVRectIdentity
ÄÄ1 ?
.
ÄÄ? @
width
ÄÄ@ E
+
ÄÄF G
$num
ÄÄH I
;
ÄÄI J
UVGraphOneOne
ÅÅ 
.
ÅÅ 
y
ÅÅ 
=
ÅÅ 
UVRectIdentity
ÅÅ ,
.
ÅÅ, -
y
ÅÅ- .
;
ÅÅ. /
Handles
ÉÉ 
.
ÉÉ 
BeginGUI
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
GUI
ÑÑ 
.
ÑÑ 
Label
ÑÑ 
(
ÑÑ 
UVGraphZeroZero
ÑÑ %
,
ÑÑ% &
$str
ÑÑ' -
)
ÑÑ- .
;
ÑÑ. /
GUI
ÖÖ 
.
ÖÖ 
Label
ÖÖ 
(
ÖÖ 
UVGraphOneOne
ÖÖ #
,
ÖÖ# $
$str
ÖÖ% +
)
ÖÖ+ ,
;
ÖÖ, -
Handles
ÜÜ 
.
ÜÜ 
EndGUI
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
GUI
àà 
.
àà 
color
àà 
=
àà 
col
àà 
;
àà 
}
ââ 	
Rect
ãã 
UVRectIdentity
ãã 
=
ãã 
new
ãã !
Rect
ãã" &
(
ãã& '
$num
ãã' (
,
ãã( )
$num
ãã* +
,
ãã+ ,
$num
ãã- .
,
ãã. /
$num
ãã0 1
)
ãã1 2
;
ãã2 3
Rect
éé 
r
éé 
=
éé 
new
éé 
Rect
éé 
(
éé 
$num
éé 
,
éé 
$num
éé 
,
éé 
$num
éé  !
,
éé! "
$num
éé# $
)
éé$ %
;
éé% &
private
êê 
void
êê 
DrawUVGraph
êê  
(
êê  !
Rect
êê! %
rect
êê& *
)
êê* +
{
ëë 	
var
íí 
evt
íí 
=
íí 
Event
íí 
.
íí 
current
íí #
;
íí# $
UVGraphCenter
îî 
=
îî 
rect
îî  
.
îî  !
center
îî! '
;
îî' (
UVRectIdentity
ññ 
.
ññ 
width
ññ  
=
ññ! "

uvGridSize
ññ# -
*
ññ. /
uvGraphScale
ññ0 <
;
ññ< =
UVRectIdentity
óó 
.
óó 
height
óó !
=
óó" #
UVRectIdentity
óó$ 2
.
óó2 3
width
óó3 8
;
óó8 9
UVRectIdentity
ôô 
.
ôô 
x
ôô 
=
ôô 
UVGraphCenter
ôô ,
.
ôô, -
x
ôô- .
+
ôô/ 0
uvGraphOffset
ôô1 >
.
ôô> ?
x
ôô? @
;
ôô@ A
UVRectIdentity
öö 
.
öö 
y
öö 
=
öö 
UVGraphCenter
öö ,
.
öö, -
y
öö- .
+
öö/ 0
uvGraphOffset
öö1 >
.
öö> ?
y
öö? @
-
ööA B
UVRectIdentity
ööC Q
.
ööQ R
height
ööR X
;
ööX Y
var
úú 
texture
úú 
=
úú #
EditorMaterialUtility
úú /
.
úú/ 0
GetPreviewTexture
úú0 A
(
úúA B
m_PreviewMaterial
úúB S
)
úúS T
;
úúT U
if
ûû 
(
ûû #
m_ShowPreviewMaterial
ûû %
&&
ûû& (
m_PreviewMaterial
ûû) :
&&
ûû; =
texture
ûû> E
!=
ûûF H
null
ûûI M
)
ûûM N
	EditorGUI
üü 
.
üü  
DrawPreviewTexture
üü ,
(
üü, -
UVRectIdentity
üü- ;
,
üü; <
texture
üü= D
,
üüD E
null
üüF J
,
üüJ K
	ScaleMode
üüL U
.
üüU V
StretchToFill
üüV c
,
üüc d
$num
üüe f
)
üüf g
;
üüg h
if
°° 
(
°° 
(
°° 
screenshotStatus
°° !
!=
°°" $
ScreenshotStatus
°°% 5
.
°°5 6
PrepareCanvas
°°6 C
&&
°°D F
screenshotStatus
°°G W
!=
°°X Z
ScreenshotStatus
°°[ k
.
°°k l
CanvasReady
°°l w
)
°°w x
||
°°y {
!
°°| }"
screenshot_hideGrid°°} ê
)°°ê ë
{
¢¢ 

DrawUVGrid
££ 
(
££ 
GridColorPrimary
££ +
)
££+ ,
;
££, -
}
§§ 
if
¶¶ 
(
¶¶ 
	selection
¶¶ 
==
¶¶ 
null
¶¶ !
||
¶¶" $
	selection
¶¶% .
.
¶¶. /
Length
¶¶/ 5
<
¶¶6 7
$num
¶¶8 9
)
¶¶9 :
return
ßß 
;
ßß 
Vector2
™™ 
p
™™ 
=
™™ 
Vector2
™™ 
.
™™  
zero
™™  $
;
™™$ %
Vector2
´´ 
[
´´ 
]
´´ 
uv
´´ 
;
´´ 
r
¨¨ 
.
¨¨ 
width
¨¨ 
=
¨¨ 
DOT_SIZE
¨¨ 
;
¨¨ 
r
≠≠ 
.
≠≠ 
height
≠≠ 
=
≠≠ 
DOT_SIZE
≠≠ 
;
≠≠  
if
∞∞ 
(
∞∞ 
ProBuilderEditor
∞∞  
.
∞∞  !

selectMode
∞∞! +
.
∞∞+ ,
ContainsFlag
∞∞, 8
(
∞∞8 9

SelectMode
∞∞9 C
.
∞∞C D
Vertex
∞∞D J
|
∞∞K L

SelectMode
∞∞M W
.
∞∞W X
TextureVertex
∞∞X e
)
∞∞e f
&&
∞∞g i
screenshotStatus
∞∞j z
==
∞∞{ }
ScreenshotStatus∞∞~ é
.∞∞é è
Done∞∞è ì
)∞∞ì î
{
±± 
for
≤≤ 
(
≤≤ 
int
≤≤ 
i
≤≤ 
=
≤≤ 
$num
≤≤ 
;
≤≤ 
i
≤≤  !
<
≤≤" #
	selection
≤≤$ -
.
≤≤- .
Length
≤≤. 4
;
≤≤4 5
i
≤≤6 7
++
≤≤7 9
)
≤≤9 :
{
≥≥ 
uv
¥¥ 
=
¥¥ 
	UVEditing
¥¥ "
.
¥¥" #
GetUVs
¥¥# )
(
¥¥) *
	selection
¥¥* 3
[
¥¥3 4
i
¥¥4 5
]
¥¥5 6
,
¥¥6 7
channel
¥¥8 ?
)
¥¥? @
;
¥¥@ A
if
∂∂ 
(
∂∂ 
uv
∂∂ 
==
∂∂ 
null
∂∂ "
)
∂∂" #
continue
∑∑  
;
∑∑  !
GUI
ππ 
.
ππ 
color
ππ 
=
ππ 
UVColorSecondary
ππ  0
;
ππ0 1
for
∫∫ 
(
∫∫ 
int
∫∫ 
n
∫∫ 
=
∫∫  
$num
∫∫! "
;
∫∫" #
n
∫∫$ %
<
∫∫& '
uv
∫∫( *
.
∫∫* +
Length
∫∫+ 1
;
∫∫1 2
n
∫∫3 4
++
∫∫4 6
)
∫∫6 7
{
ªª 
p
ºº 
=
ºº 
UVToGUIPoint
ºº (
(
ºº( )
uv
ºº) +
[
ºº+ ,
n
ºº, -
]
ºº- .
)
ºº. /
;
ºº/ 0
r
ΩΩ 
.
ΩΩ 
x
ΩΩ 
=
ΩΩ 
p
ΩΩ 
.
ΩΩ  
x
ΩΩ  !
-
ΩΩ" #
HALF_DOT
ΩΩ$ ,
;
ΩΩ, -
r
ææ 
.
ææ 
y
ææ 
=
ææ 
p
ææ 
.
ææ  
y
ææ  !
-
ææ" #
HALF_DOT
ææ$ ,
;
ææ, -
GUI
øø 
.
øø 
DrawTexture
øø '
(
øø' (
r
øø( )
,
øø) *
dot
øø+ .
,
øø. /
	ScaleMode
øø0 9
.
øø9 :

ScaleToFit
øø: D
)
øøD E
;
øøE F
}
¿¿ 
GUI
¬¬ 
.
¬¬ 
color
¬¬ 
=
¬¬ 
UVColorPrimary
¬¬  .
;
¬¬. /
if
ƒƒ 
(
ƒƒ 
channel
ƒƒ 
<
ƒƒ  !
$num
ƒƒ" #
)
ƒƒ# $
{
≈≈ 
foreach
∆∆ 
(
∆∆  !
int
∆∆! $
index
∆∆% *
in
∆∆+ -
	selection
∆∆. 7
[
∆∆7 8
i
∆∆8 9
]
∆∆9 :
.
∆∆: ;%
selectedIndexesInternal
∆∆; R
)
∆∆R S
{
«« 
p
»» 
=
»» 
UVToGUIPoint
»»  ,
(
»», -
uv
»»- /
[
»»/ 0
index
»»0 5
]
»»5 6
)
»»6 7
;
»»7 8
r
…… 
.
…… 
x
…… 
=
……  !
p
……" #
.
……# $
x
……$ %
-
……& '
HALF_DOT
……( 0
;
……0 1
r
   
.
   
y
   
=
    !
p
  " #
.
  # $
y
  $ %
-
  & '
HALF_DOT
  ( 0
;
  0 1
GUI
ÀÀ 
.
ÀÀ  
DrawTexture
ÀÀ  +
(
ÀÀ+ ,
r
ÀÀ, -
,
ÀÀ- .
dot
ÀÀ/ 2
,
ÀÀ2 3
	ScaleMode
ÀÀ4 =
.
ÀÀ= >

ScaleToFit
ÀÀ> H
)
ÀÀH I
;
ÀÀI J
}
ÃÃ 
}
ÕÕ 
}
ŒŒ 
}
œœ 
Handles
—— 
.
—— 
color
—— 
=
—— #
UVColorGroupIndicator
—— 1
;
——1 2
foreach
”” 
(
”” 
List
”” 
<
”” 
Vector2
”” !
>
””! "
lines
””# (
in
””) +;
-incompleteTextureGroupsInSelection_CoordCache
””, Y
)
””Y Z
for
‘‘ 
(
‘‘ 
int
‘‘ 
i
‘‘ 
=
‘‘ 
$num
‘‘ 
;
‘‘ 
i
‘‘  !
<
‘‘" #
lines
‘‘$ )
.
‘‘) *
Count
‘‘* /
;
‘‘/ 0
i
‘‘1 2
++
‘‘2 4
)
‘‘4 5
Handles
’’ 
.
’’ 
CircleHandleCap
’’ +
(
’’+ ,
-
’’, -
$num
’’- .
,
’’. /
UVToGUIPoint
’’0 <
(
’’< =
lines
’’= B
[
’’B C
i
’’C D
]
’’D E
)
’’E F
,
’’F G

Quaternion
’’H R
.
’’R S
identity
’’S [
,
’’[ \
$num
’’] _
,
’’_ `
evt
’’a d
.
’’d e
type
’’e i
)
’’i j
;
’’j k
GUI
ÌÌ 
.
ÌÌ 
color
ÌÌ 
=
ÌÌ 
Color
ÌÌ 
.
ÌÌ 
white
ÌÌ #
;
ÌÌ# $
if
ÔÔ 
(
ÔÔ 
evt
ÔÔ 
.
ÔÔ 
type
ÔÔ 
==
ÔÔ 
	EventType
ÔÔ %
.
ÔÔ% &
Repaint
ÔÔ& -
)
ÔÔ- .
{
 
GL
ÒÒ 
.
ÒÒ 

PushMatrix
ÒÒ 
(
ÒÒ 
)
ÒÒ 
;
ÒÒ  !
EditorHandleUtility
ÚÚ #
.
ÚÚ# $
handleMaterial
ÚÚ$ 2
.
ÚÚ2 3
SetPass
ÚÚ3 :
(
ÚÚ: ;
$num
ÚÚ; <
)
ÚÚ< =
;
ÚÚ= >
GL
ÛÛ 
.
ÛÛ 

MultMatrix
ÛÛ 
(
ÛÛ 
Handles
ÛÛ %
.
ÛÛ% &
matrix
ÛÛ& ,
)
ÛÛ, -
;
ÛÛ- .
if
¯¯ 
(
¯¯ 
screenshotStatus
¯¯ $
==
¯¯% '
ScreenshotStatus
¯¯( 8
.
¯¯8 9
Done
¯¯9 =
)
¯¯= >
{
˘˘ 
GL
˙˙ 
.
˙˙ 
Begin
˙˙ 
(
˙˙ 
GL
˙˙ 
.
˙˙  
LINES
˙˙  %
)
˙˙% &
;
˙˙& '
GL
˚˚ 
.
˚˚ 
Color
˚˚ 
(
˚˚ #
UVColorGroupIndicator
˚˚ 2
)
˚˚2 3
;
˚˚3 4
foreach
˝˝ 
(
˝˝ 
List
˝˝ !
<
˝˝! "
Vector2
˝˝" )
>
˝˝) *
lines
˝˝+ 0
in
˝˝1 3;
-incompleteTextureGroupsInSelection_CoordCache
˝˝4 a
)
˝˝a b
{
˛˛ 
Vector2
ˇˇ 
cen
ˇˇ  #
=
ˇˇ$ %
lines
ˇˇ& +
[
ˇˇ+ ,
$num
ˇˇ, -
]
ˇˇ- .
;
ˇˇ. /
for
ÅÅ 
(
ÅÅ 
int
ÅÅ  
i
ÅÅ! "
=
ÅÅ# $
$num
ÅÅ% &
;
ÅÅ& '
i
ÅÅ( )
<
ÅÅ* +
lines
ÅÅ, 1
.
ÅÅ1 2
Count
ÅÅ2 7
;
ÅÅ7 8
i
ÅÅ9 :
++
ÅÅ: <
)
ÅÅ< =
{
ÇÇ 
GL
ÉÉ 
.
ÉÉ 
Vertex
ÉÉ %
(
ÉÉ% &
UVToGUIPoint
ÉÉ& 2
(
ÉÉ2 3
cen
ÉÉ3 6
)
ÉÉ6 7
)
ÉÉ7 8
;
ÉÉ8 9
GL
ÑÑ 
.
ÑÑ 
Vertex
ÑÑ %
(
ÑÑ% &
UVToGUIPoint
ÑÑ& 2
(
ÑÑ2 3
lines
ÑÑ3 8
[
ÑÑ8 9
i
ÑÑ9 :
]
ÑÑ: ;
)
ÑÑ; <
)
ÑÑ< =
;
ÑÑ= >
}
ÖÖ 
}
ÜÜ 
GL
àà 
.
àà 
End
àà 
(
àà 
)
àà 
;
àà 
}
ââ 
GL
ãã 
.
ãã 
Begin
ãã 
(
ãã 
GL
ãã 
.
ãã 
LINES
ãã !
)
ãã! "
;
ãã" #
if
çç 
(
çç 
screenshotStatus
çç $
!=
çç% '
ScreenshotStatus
çç( 8
.
çç8 9
Done
çç9 =
)
çç= >
GL
éé 
.
éé 
Color
éé 
(
éé "
screenshot_lineColor
éé 1
)
éé1 2
;
éé2 3
else
èè 
GL
êê 
.
êê 
Color
êê 
(
êê 
UVColorSecondary
êê -
)
êê- .
;
êê. /
Vector2
íí 
x
íí 
=
íí 
Vector2
íí #
.
íí# $
zero
íí$ (
,
íí( )
y
íí* +
=
íí, -
Vector2
íí. 5
.
íí5 6
zero
íí6 :
;
íí: ;
if
îî 
(
îî 
channel
îî 
==
îî 
$num
îî  
)
îî  !
{
ïï 
for
ññ 
(
ññ 
int
ññ 
i
ññ 
=
ññ  
$num
ññ! "
;
ññ" #
i
ññ$ %
<
ññ& '
	selection
ññ( 1
.
ññ1 2
Length
ññ2 8
;
ññ8 9
i
ññ: ;
++
ññ; =
)
ññ= >
{
óó 
ProBuilderMesh
òò &
pb
òò' )
=
òò* +
	selection
òò, 5
[
òò5 6
i
òò6 7
]
òò7 8
;
òò8 9
uv
ôô 
=
ôô 
pb
ôô 
.
ôô  
texturesInternal
ôô  0
;
ôô0 1
for
õõ 
(
õõ 
int
õõ  
n
õõ! "
=
õõ# $
$num
õõ% &
;
õõ& '
n
õõ( )
<
õõ* +
pb
õõ, .
.
õõ. /
facesInternal
õõ/ <
.
õõ< =
Length
õõ= C
;
õõC D
n
õõE F
++
õõF H
)
õõH I
{
úú 
Face
ùù  
face
ùù! %
=
ùù& '
pb
ùù( *
.
ùù* +
facesInternal
ùù+ 8
[
ùù8 9
n
ùù9 :
]
ùù: ;
;
ùù; <
foreach
üü #
(
üü$ %
Edge
üü% )
edge
üü* .
in
üü/ 1
face
üü2 6
.
üü6 7
edgesInternal
üü7 D
)
üüD E
{
†† 
x
°°  !
=
°°" #
UVToGUIPoint
°°$ 0
(
°°0 1
uv
°°1 3
[
°°3 4
edge
°°4 8
.
°°8 9
a
°°9 :
]
°°: ;
)
°°; <
;
°°< =
y
¢¢  !
=
¢¢" #
UVToGUIPoint
¢¢$ 0
(
¢¢0 1
uv
¢¢1 3
[
¢¢3 4
edge
¢¢4 8
.
¢¢8 9
b
¢¢9 :
]
¢¢: ;
)
¢¢; <
;
¢¢< =
GL
§§  "
.
§§" #
Vertex3
§§# *
(
§§* +
x
§§+ ,
.
§§, -
x
§§- .
,
§§. /
x
§§0 1
.
§§1 2
y
§§2 3
,
§§3 4
$num
§§5 7
)
§§7 8
;
§§8 9
GL
••  "
.
••" #
Vertex3
••# *
(
••* +
y
••+ ,
.
••, -
x
••- .
,
••. /
y
••0 1
.
••1 2
y
••2 3
,
••3 4
$num
••5 7
)
••7 8
;
••8 9
}
¶¶ 
}
ßß 
}
®® 
}
©© 
else
™™ 
{
´´ 
Vector2
¨¨ 
z
¨¨ 
=
¨¨ 
Vector2
¨¨  '
.
¨¨' (
zero
¨¨( ,
;
¨¨, -
for
ÆÆ 
(
ÆÆ 
int
ÆÆ 
i
ÆÆ 
=
ÆÆ  
$num
ÆÆ! "
;
ÆÆ" #
i
ÆÆ$ %
<
ÆÆ& '
	selection
ÆÆ( 1
.
ÆÆ1 2
Length
ÆÆ2 8
;
ÆÆ8 9
i
ÆÆ: ;
++
ÆÆ; =
)
ÆÆ= >
{
ØØ 
uv
∞∞ 
=
∞∞ 
	UVEditing
∞∞ &
.
∞∞& '
GetUVs
∞∞' -
(
∞∞- .
	selection
∞∞. 7
[
∞∞7 8
i
∞∞8 9
]
∞∞9 :
,
∞∞: ;
channel
∞∞< C
)
∞∞C D
;
∞∞D E
if
≤≤ 
(
≤≤ 
uv
≤≤ 
==
≤≤ !
null
≤≤" &
||
≤≤' )
uv
≤≤* ,
.
≤≤, -
Length
≤≤- 3
!=
≤≤4 6
	selection
≤≤7 @
[
≤≤@ A
i
≤≤A B
]
≤≤B C
.
≤≤C D
mesh
≤≤D H
.
≤≤H I
vertexCount
≤≤I T
)
≤≤T U
continue
≥≥ $
;
≥≥$ %
int
µµ 
[
µµ 
]
µµ 
	triangles
µµ '
=
µµ( )
	selection
µµ* 3
[
µµ3 4
i
µµ4 5
]
µµ5 6
.
µµ6 7
mesh
µµ7 ;
.
µµ; <
	triangles
µµ< E
;
µµE F
for
∑∑ 
(
∑∑ 
int
∑∑  
n
∑∑! "
=
∑∑# $
$num
∑∑% &
;
∑∑& '
n
∑∑( )
<
∑∑* +
	triangles
∑∑, 5
.
∑∑5 6
Length
∑∑6 <
;
∑∑< =
n
∑∑> ?
+=
∑∑@ B
$num
∑∑C D
)
∑∑D E
{
∏∏ 
x
ππ 
=
ππ 
UVToGUIPoint
ππ  ,
(
ππ, -
uv
ππ- /
[
ππ/ 0
	triangles
ππ0 9
[
ππ9 :
n
ππ: ;
]
ππ; <
]
ππ< =
)
ππ= >
;
ππ> ?
y
∫∫ 
=
∫∫ 
UVToGUIPoint
∫∫  ,
(
∫∫, -
uv
∫∫- /
[
∫∫/ 0
	triangles
∫∫0 9
[
∫∫9 :
n
∫∫: ;
+
∫∫< =
$num
∫∫> ?
]
∫∫? @
]
∫∫@ A
)
∫∫A B
;
∫∫B C
z
ªª 
=
ªª 
UVToGUIPoint
ªª  ,
(
ªª, -
uv
ªª- /
[
ªª/ 0
	triangles
ªª0 9
[
ªª9 :
n
ªª: ;
+
ªª< =
$num
ªª> ?
]
ªª? @
]
ªª@ A
)
ªªA B
;
ªªB C
GL
ΩΩ 
.
ΩΩ 
Vertex3
ΩΩ &
(
ΩΩ& '
x
ΩΩ' (
.
ΩΩ( )
x
ΩΩ) *
,
ΩΩ* +
x
ΩΩ, -
.
ΩΩ- .
y
ΩΩ. /
,
ΩΩ/ 0
$num
ΩΩ1 3
)
ΩΩ3 4
;
ΩΩ4 5
GL
ææ 
.
ææ 
Vertex3
ææ &
(
ææ& '
y
ææ' (
.
ææ( )
x
ææ) *
,
ææ* +
y
ææ, -
.
ææ- .
y
ææ. /
,
ææ/ 0
$num
ææ1 3
)
ææ3 4
;
ææ4 5
GL
¿¿ 
.
¿¿ 
Vertex3
¿¿ &
(
¿¿& '
y
¿¿' (
.
¿¿( )
x
¿¿) *
,
¿¿* +
y
¿¿, -
.
¿¿- .
y
¿¿. /
,
¿¿/ 0
$num
¿¿1 3
)
¿¿3 4
;
¿¿4 5
GL
¡¡ 
.
¡¡ 
Vertex3
¡¡ &
(
¡¡& '
z
¡¡' (
.
¡¡( )
x
¡¡) *
,
¡¡* +
z
¡¡, -
.
¡¡- .
y
¡¡. /
,
¡¡/ 0
$num
¡¡1 3
)
¡¡3 4
;
¡¡4 5
GL
√√ 
.
√√ 
Vertex3
√√ &
(
√√& '
z
√√' (
.
√√( )
x
√√) *
,
√√* +
z
√√, -
.
√√- .
y
√√. /
,
√√/ 0
$num
√√1 3
)
√√3 4
;
√√4 5
GL
ƒƒ 
.
ƒƒ 
Vertex3
ƒƒ &
(
ƒƒ& '
x
ƒƒ' (
.
ƒƒ( )
x
ƒƒ) *
,
ƒƒ* +
x
ƒƒ, -
.
ƒƒ- .
y
ƒƒ. /
,
ƒƒ/ 0
$num
ƒƒ1 3
)
ƒƒ3 4
;
ƒƒ4 5
}
≈≈ 
}
∆∆ 
}
«« 
GL
…… 
.
…… 
End
…… 
(
…… 
)
…… 
;
…… 
if
ŒŒ 
(
ŒŒ 
screenshotStatus
ŒŒ $
!=
ŒŒ% '
ScreenshotStatus
ŒŒ( 8
.
ŒŒ8 9
Done
ŒŒ9 =
)
ŒŒ= >
{
œœ 
GL
–– 
.
–– 
	PopMatrix
––  
(
––  !
)
––! "
;
––" #
return
—— 
;
—— 
}
““ 
if
’’ 
(
’’ 
channel
’’ 
==
’’ 
$num
’’  
)
’’  !
{
÷÷ 
GL
◊◊ 
.
◊◊ 
Begin
◊◊ 
(
◊◊ 
GL
◊◊ 
.
◊◊  
LINES
◊◊  %
)
◊◊% &
;
◊◊& '
GL
ÿÿ 
.
ÿÿ 
Color
ÿÿ 
(
ÿÿ 
UVColorPrimary
ÿÿ +
)
ÿÿ+ ,
;
ÿÿ, -
for
⁄⁄ 
(
⁄⁄ 
int
⁄⁄ 
i
⁄⁄ 
=
⁄⁄  
$num
⁄⁄! "
;
⁄⁄" #
i
⁄⁄$ %
<
⁄⁄& '
	selection
⁄⁄( 1
.
⁄⁄1 2
Length
⁄⁄2 8
;
⁄⁄8 9
i
⁄⁄: ;
++
⁄⁄; =
)
⁄⁄= >
{
€€ 
ProBuilderMesh
‹‹ &
pb
‹‹' )
=
‹‹* +
	selection
‹‹, 5
[
‹‹5 6
i
‹‹6 7
]
‹‹7 8
;
‹‹8 9
uv
›› 
=
›› 
pb
›› 
.
››  
texturesInternal
››  0
;
››0 1
if
ﬂﬂ 
(
ﬂﬂ 
pb
ﬂﬂ 
.
ﬂﬂ 
selectedEdgeCount
ﬂﬂ 0
>
ﬂﬂ1 2
$num
ﬂﬂ3 4
)
ﬂﬂ4 5
{
‡‡ 
foreach
·· #
(
··$ %
Edge
··% )
edge
··* .
in
··/ 1
pb
··2 4
.
··4 5#
selectedEdgesInternal
··5 J
)
··J K
{
‚‚ 
x
„„  !
=
„„" #
UVToGUIPoint
„„$ 0
(
„„0 1
uv
„„1 3
[
„„3 4
edge
„„4 8
.
„„8 9
a
„„9 :
]
„„: ;
)
„„; <
;
„„< =
y
‰‰  !
=
‰‰" #
UVToGUIPoint
‰‰$ 0
(
‰‰0 1
uv
‰‰1 3
[
‰‰3 4
edge
‰‰4 8
.
‰‰8 9
b
‰‰9 :
]
‰‰: ;
)
‰‰; <
;
‰‰< =
GL
ÊÊ  "
.
ÊÊ" #
Vertex3
ÊÊ# *
(
ÊÊ* +
x
ÊÊ+ ,
.
ÊÊ, -
x
ÊÊ- .
,
ÊÊ. /
x
ÊÊ0 1
.
ÊÊ1 2
y
ÊÊ2 3
,
ÊÊ3 4
$num
ÊÊ5 7
)
ÊÊ7 8
;
ÊÊ8 9
GL
ÁÁ  "
.
ÁÁ" #
Vertex3
ÁÁ# *
(
ÁÁ* +
y
ÁÁ+ ,
.
ÁÁ, -
x
ÁÁ- .
,
ÁÁ. /
y
ÁÁ0 1
.
ÁÁ1 2
y
ÁÁ2 3
,
ÁÁ3 4
$num
ÁÁ5 7
)
ÁÁ7 8
;
ÁÁ8 9
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 
GL
ÒÒ 
.
ÒÒ 
End
ÒÒ 
(
ÒÒ 
)
ÒÒ 
;
ÒÒ 
switch
ÛÛ 
(
ÛÛ 
ProBuilderEditor
ÛÛ ,
.
ÛÛ, -

selectMode
ÛÛ- 7
)
ÛÛ7 8
{
ÙÙ 
case
ıı 

SelectMode
ıı '
.
ıı' (
Edge
ıı( ,
:
ıı, -
case
ˆˆ 

SelectMode
ˆˆ '
.
ˆˆ' (
TextureEdge
ˆˆ( 3
:
ˆˆ3 4
GL
¯¯ 
.
¯¯ 
Begin
¯¯ $
(
¯¯$ %
GL
¯¯% '
.
¯¯' (
LINES
¯¯( -
)
¯¯- .
;
¯¯. /
GL
˘˘ 
.
˘˘ 
Color
˘˘ $
(
˘˘$ %
Color
˘˘% *
.
˘˘* +
red
˘˘+ .
)
˘˘. /
;
˘˘/ 0
if
˙˙ 
(
˙˙  
nearestElement
˙˙  .
.
˙˙. /
valid
˙˙/ 4
&&
˙˙5 7
nearestElement
˙˙8 F
.
˙˙F G
elementSubIndex
˙˙G V
>
˙˙W X
-
˙˙Y Z
$num
˙˙Z [
&&
˙˙\ ^
!
˙˙_ `
modifyingUVs
˙˙` l
)
˙˙l m
{
˚˚ 
Edge
¸¸  $
edge
¸¸% )
=
¸¸* +
	selection
¸¸, 5
[
¸¸5 6
nearestElement
¸¸6 D
.
¸¸D E
objectIndex
¸¸E P
]
¸¸P Q
.
¸¸Q R
facesInternal
¸¸R _
[
¸¸_ `
nearestElement
¸¸` n
.
¸¸n o
elementIndex
¸¸o {
]
¸¸{ |
.
¸¸| }
edgesInternal¸¸} ä
[¸¸ä ã
nearestElement¸¸ã ô
.¸¸ô ö
elementSubIndex¸¸ö ©
]¸¸© ™
;¸¸™ ´
GL
˝˝  "
.
˝˝" #
Vertex
˝˝# )
(
˝˝) *
UVToGUIPoint
˝˝* 6
(
˝˝6 7
	selection
˝˝7 @
[
˝˝@ A
nearestElement
˝˝A O
.
˝˝O P
objectIndex
˝˝P [
]
˝˝[ \
.
˝˝\ ]
texturesInternal
˝˝] m
[
˝˝m n
edge
˝˝n r
.
˝˝r s
a
˝˝s t
]
˝˝t u
)
˝˝u v
)
˝˝v w
;
˝˝w x
GL
˛˛  "
.
˛˛" #
Vertex
˛˛# )
(
˛˛) *
UVToGUIPoint
˛˛* 6
(
˛˛6 7
	selection
˛˛7 @
[
˛˛@ A
nearestElement
˛˛A O
.
˛˛O P
objectIndex
˛˛P [
]
˛˛[ \
.
˛˛\ ]
texturesInternal
˛˛] m
[
˛˛m n
edge
˛˛n r
.
˛˛r s
b
˛˛s t
]
˛˛t u
)
˛˛u v
)
˛˛v w
;
˛˛w x
}
ˇˇ 
GL
ÅÅ 
.
ÅÅ 
End
ÅÅ "
(
ÅÅ" #
)
ÅÅ# $
;
ÅÅ$ %
break
ÉÉ !
;
ÉÉ! "
case
ÖÖ 

SelectMode
ÖÖ '
.
ÖÖ' (
Face
ÖÖ( ,
:
ÖÖ, -
case
ÜÜ 

SelectMode
ÜÜ '
.
ÜÜ' (
TextureFace
ÜÜ( 3
:
ÜÜ3 4
{
áá 
Vector3
àà #
v
àà$ %
=
àà& '
Vector3
àà( /
.
àà/ 0
zero
àà0 4
;
àà4 5
if
ää 
(
ää  
nearestElement
ää  .
.
ää. /
valid
ää/ 4
&&
ää5 7
!
ää8 9
m_mouseDragging
ää9 H
)
ääH I
{
ãã 
GL
åå  "
.
åå" #
Begin
åå# (
(
åå( )
GL
åå) +
.
åå+ ,
	TRIANGLES
åå, 5
)
åå5 6
;
åå6 7
GL
éé  "
.
éé" #
Color
éé# (
(
éé( )
	selection
éé) 2
[
éé2 3
nearestElement
éé3 A
.
ééA B
objectIndex
ééB M
]
ééM N
.
ééN O
facesInternal
ééO \
[
éé\ ]
nearestElement
éé] k
.
éék l
elementIndex
éél x
]
ééx y
.
ééy z
manualUVééz Ç
?ééÉ Ñ"
HOVER_COLOR_MANUALééÖ ó
:ééò ô 
HOVER_COLOR_AUTOééö ™
)éé™ ´
;éé´ ¨
int
èè  #
[
èè# $
]
èè$ %
tris
èè& *
=
èè+ ,
	selection
èè- 6
[
èè6 7
nearestElement
èè7 E
.
èèE F
objectIndex
èèF Q
]
èèQ R
.
èèR S
facesInternal
èèS `
[
èè` a
nearestElement
èèa o
.
èèo p
elementIndex
èèp |
]
èè| }
.
èè} ~
indexesInternalèè~ ç
;èèç é
for
ëë  #
(
ëë$ %
int
ëë% (
i
ëë) *
=
ëë+ ,
$num
ëë- .
;
ëë. /
i
ëë0 1
<
ëë2 3
tris
ëë4 8
.
ëë8 9
Length
ëë9 ?
;
ëë? @
i
ëëA B
+=
ëëC E
$num
ëëF G
)
ëëG H
{
íí  !
v
ìì$ %
=
ìì& '
UVToGUIPoint
ìì( 4
(
ìì4 5
	selection
ìì5 >
[
ìì> ?
nearestElement
ìì? M
.
ììM N
objectIndex
ììN Y
]
ììY Z
.
ììZ [
texturesInternal
ìì[ k
[
ììk l
tris
ììl p
[
ììp q
i
ììq r
+
ììs t
$num
ììu v
]
ììv w
]
ììw x
)
ììx y
;
ììy z
GL
îî$ &
.
îî& '
Vertex3
îî' .
(
îî. /
v
îî/ 0
.
îî0 1
x
îî1 2
,
îî2 3
v
îî4 5
.
îî5 6
y
îî6 7
,
îî7 8
$num
îî9 ;
)
îî; <
;
îî< =
v
ïï$ %
=
ïï& '
UVToGUIPoint
ïï( 4
(
ïï4 5
	selection
ïï5 >
[
ïï> ?
nearestElement
ïï? M
.
ïïM N
objectIndex
ïïN Y
]
ïïY Z
.
ïïZ [
texturesInternal
ïï[ k
[
ïïk l
tris
ïïl p
[
ïïp q
i
ïïq r
+
ïïs t
$num
ïïu v
]
ïïv w
]
ïïw x
)
ïïx y
;
ïïy z
GL
ññ$ &
.
ññ& '
Vertex3
ññ' .
(
ññ. /
v
ññ/ 0
.
ññ0 1
x
ññ1 2
,
ññ2 3
v
ññ4 5
.
ññ5 6
y
ññ6 7
,
ññ7 8
$num
ññ9 ;
)
ññ; <
;
ññ< =
v
óó$ %
=
óó& '
UVToGUIPoint
óó( 4
(
óó4 5
	selection
óó5 >
[
óó> ?
nearestElement
óó? M
.
óóM N
objectIndex
óóN Y
]
óóY Z
.
óóZ [
texturesInternal
óó[ k
[
óók l
tris
óól p
[
óóp q
i
óóq r
+
óós t
$num
óóu v
]
óóv w
]
óów x
)
óóx y
;
óóy z
GL
òò$ &
.
òò& '
Vertex3
òò' .
(
òò. /
v
òò/ 0
.
òò0 1
x
òò1 2
,
òò2 3
v
òò4 5
.
òò5 6
y
òò6 7
,
òò7 8
$num
òò9 ;
)
òò; <
;
òò< =
}
ôô  !
GL
õõ  "
.
õõ" #
End
õõ# &
(
õõ& '
)
õõ' (
;
õõ( )
}
úú 
GL
ûû 
.
ûû 
Begin
ûû $
(
ûû$ %
GL
ûû% '
.
ûû' (
	TRIANGLES
ûû( 1
)
ûû1 2
;
ûû2 3
for
üü 
(
üü  !
int
üü! $
i
üü% &
=
üü' (
$num
üü) *
;
üü* +
i
üü, -
<
üü. /
	selection
üü0 9
.
üü9 :
Length
üü: @
;
üü@ A
i
üüB C
++
üüC E
)
üüE F
{
†† 
foreach
°°  '
(
°°( )
Face
°°) -
face
°°. 2
in
°°3 5
	selection
°°6 ?
[
°°? @
i
°°@ A
]
°°A B
.
°°B C#
selectedFacesInternal
°°C X
)
°°X Y
{
¢¢  !
GL
££$ &
.
££& '
Color
££' ,
(
££, -
face
££- 1
.
££1 2
manualUV
££2 :
?
££; <#
SELECTED_COLOR_MANUAL
££= R
:
££S T!
SELECTED_COLOR_AUTO
££U h
)
££h i
;
££i j
int
••$ '
[
••' (
]
••( )
tris
••* .
=
••/ 0
face
••1 5
.
••5 6
indexesInternal
••6 E
;
••E F
for
ßß$ '
(
ßß( )
int
ßß) ,
n
ßß- .
=
ßß/ 0
$num
ßß1 2
;
ßß2 3
n
ßß4 5
<
ßß6 7
tris
ßß8 <
.
ßß< =
Length
ßß= C
;
ßßC D
n
ßßE F
+=
ßßG I
$num
ßßJ K
)
ßßK L
{
®®$ %
v
©©( )
=
©©* +
UVToGUIPoint
©©, 8
(
©©8 9
	selection
©©9 B
[
©©B C
i
©©C D
]
©©D E
.
©©E F
texturesInternal
©©F V
[
©©V W
tris
©©W [
[
©©[ \
n
©©\ ]
+
©©^ _
$num
©©` a
]
©©a b
]
©©b c
)
©©c d
;
©©d e
GL
™™( *
.
™™* +
Vertex3
™™+ 2
(
™™2 3
v
™™3 4
.
™™4 5
x
™™5 6
,
™™6 7
v
™™8 9
.
™™9 :
y
™™: ;
,
™™; <
$num
™™= ?
)
™™? @
;
™™@ A
v
´´( )
=
´´* +
UVToGUIPoint
´´, 8
(
´´8 9
	selection
´´9 B
[
´´B C
i
´´C D
]
´´D E
.
´´E F
texturesInternal
´´F V
[
´´V W
tris
´´W [
[
´´[ \
n
´´\ ]
+
´´^ _
$num
´´` a
]
´´a b
]
´´b c
)
´´c d
;
´´d e
GL
¨¨( *
.
¨¨* +
Vertex3
¨¨+ 2
(
¨¨2 3
v
¨¨3 4
.
¨¨4 5
x
¨¨5 6
,
¨¨6 7
v
¨¨8 9
.
¨¨9 :
y
¨¨: ;
,
¨¨; <
$num
¨¨= ?
)
¨¨? @
;
¨¨@ A
v
≠≠( )
=
≠≠* +
UVToGUIPoint
≠≠, 8
(
≠≠8 9
	selection
≠≠9 B
[
≠≠B C
i
≠≠C D
]
≠≠D E
.
≠≠E F
texturesInternal
≠≠F V
[
≠≠V W
tris
≠≠W [
[
≠≠[ \
n
≠≠\ ]
+
≠≠^ _
$num
≠≠` a
]
≠≠a b
]
≠≠b c
)
≠≠c d
;
≠≠d e
GL
ÆÆ( *
.
ÆÆ* +
Vertex3
ÆÆ+ 2
(
ÆÆ2 3
v
ÆÆ3 4
.
ÆÆ4 5
x
ÆÆ5 6
,
ÆÆ6 7
v
ÆÆ8 9
.
ÆÆ9 :
y
ÆÆ: ;
,
ÆÆ; <
$num
ÆÆ= ?
)
ÆÆ? @
;
ÆÆ@ A
}
ØØ$ %
}
∞∞  !
}
±± 
GL
≥≥ 
.
≥≥ 
End
≥≥ "
(
≥≥" #
)
≥≥# $
;
≥≥$ %
}
¥¥ 
break
µµ 
;
µµ 
}
∂∂ 
}
∑∑ 
GL
ππ 
.
ππ 
	PopMatrix
ππ 
(
ππ 
)
ππ 
;
ππ 
}
∫∫ 
}
ªª 	
void
√√ 
FrameSelection
√√ 
(
√√ 
)
√√ 
{
ƒƒ 	
needsRepaint
≈≈ 
=
≈≈ 
true
≈≈ 
;
≈≈  
if
«« 
(
«« 
	selection
«« 
==
«« 
null
«« !
||
««" $
	selection
««% .
.
««. /
Length
««/ 5
<
««6 7
$num
««8 9
||
««: <
(
««= >
editor
««> D
&&
««E G
MeshSelection
««H U
.
««U V!
selectedVertexCount
««V i
<
««j k
$num
««l m
)
««m n
)
««n o
{
»» 
SetCanvasCenter
…… 
(
……  
Event
……  %
.
……% &
current
……& -
.
……- .
mousePosition
……. ;
-
……< =
UVGraphCenter
……> K
-
……L M
uvGraphOffset
……N [
)
……[ \
;
……\ ]
return
   
;
   
}
ÀÀ 
SetCanvasCenter
ÕÕ 
(
ÕÕ 
selectedGuiBounds
ÕÕ -
.
ÕÕ- .
center
ÕÕ. 4
-
ÕÕ5 6
uvGraphOffset
ÕÕ7 D
-
ÕÕE F
UVGraphCenter
ÕÕG T
)
ÕÕT U
;
ÕÕU V
if
œœ 
(
œœ 
UVSelectionBounds
œœ !
(
œœ! "
)
œœ" #
.
œœ# $
size
œœ$ (
.
œœ( )
sqrMagnitude
œœ) 5
>
œœ6 7
$num
œœ8 :
)
œœ: ;
{
–– 
Bounds2D
—— 
bounds
—— 
=
——  !
UVSelectionBounds
——" 3
(
——3 4
)
——4 5
;
——5 6
float
”” 
x
”” 
=
”” 
(
”” 
float
””  
)
””  !
screenWidth
””! ,
/
””- .
(
””/ 0
(
””0 1
bounds
””1 7
.
””7 8
size
””8 <
.
””< =
x
””= >
*
””? @

uvGridSize
””A K
)
””K L
*
””M N
$num
””O S
)
””S T
;
””T U
float
‘‘ 
y
‘‘ 
=
‘‘ 
(
‘‘ 
float
‘‘  
)
‘‘  !
(
‘‘! "
screenHeight
‘‘" .
-
‘‘/ 0
$num
‘‘1 3
)
‘‘3 4
/
‘‘5 6
(
‘‘7 8
(
‘‘8 9
bounds
‘‘9 ?
.
‘‘? @
size
‘‘@ D
.
‘‘D E
y
‘‘E F
*
‘‘G H

uvGridSize
‘‘I S
)
‘‘S T
*
‘‘U V
$num
‘‘W [
)
‘‘[ \
;
‘‘\ ]
SetCanvasScale
÷÷ 
(
÷÷ 
Mathf
÷÷ $
.
÷÷$ %
Min
÷÷% (
(
÷÷( )
x
÷÷) *
,
÷÷* +
y
÷÷, -
)
÷÷- .
)
÷÷. /
;
÷÷/ 0
}
◊◊ 
}
ÿÿ 	
void
›› 
SetCanvasScale
›› 
(
›› 
float
›› !
zoom
››" &
)
››& '
{
ﬁﬁ 	
Vector2
ﬂﬂ 
center
ﬂﬂ 
=
ﬂﬂ 
-
ﬂﬂ 
(
ﬂﬂ 
uvGraphOffset
ﬂﬂ ,
/
ﬂﬂ- .
uvGraphScale
ﬂﬂ/ ;
)
ﬂﬂ; <
;
ﬂﬂ< =
uvGraphScale
‡‡ 
=
‡‡ 
Mathf
‡‡  
.
‡‡  !
Clamp
‡‡! &
(
‡‡& '
zoom
‡‡' +
,
‡‡+ ,
MIN_GRAPH_SCALE
‡‡- <
,
‡‡< =
MAX_GRAPH_SCALE
‡‡> M
)
‡‡M N
;
‡‡N O
SetCanvasCenter
·· 
(
·· 
center
·· "
*
··# $
uvGraphScale
··% 1
)
··1 2
;
··2 3
}
‚‚ 	
void
ÁÁ 
SetCanvasCenter
ÁÁ 
(
ÁÁ 
Vector2
ÁÁ $
center
ÁÁ% +
)
ÁÁ+ ,
{
ËË 	
uvGraphOffset
ÈÈ 
=
ÈÈ 
center
ÈÈ "
;
ÈÈ" #
uvGraphOffset
ÍÍ 
.
ÍÍ 
x
ÍÍ 
=
ÍÍ 
-
ÍÍ 
uvGraphOffset
ÍÍ ,
.
ÍÍ, -
x
ÍÍ- .
;
ÍÍ. /
uvGraphOffset
ÎÎ 
.
ÎÎ 
y
ÎÎ 
=
ÎÎ 
-
ÎÎ 
uvGraphOffset
ÎÎ ,
.
ÎÎ, -
y
ÎÎ- .
;
ÎÎ. /
}
ÏÏ 	
void
ÓÓ 
ResetCanvas
ÓÓ 
(
ÓÓ 
)
ÓÓ 
{
ÔÔ 	
uvGraphScale
 
=
 
$num
 
;
 
SetCanvasCenter
ÒÒ 
(
ÒÒ 
new
ÒÒ 
Vector2
ÒÒ  '
(
ÒÒ' (
$num
ÒÒ( +
,
ÒÒ+ ,
-
ÒÒ- .
$num
ÒÒ. 1
)
ÒÒ1 2
*
ÒÒ3 4

uvGridSize
ÒÒ5 ?
*
ÒÒ@ A
uvGraphScale
ÒÒB N
)
ÒÒN O
;
ÒÒO P
uvGraphOffset
ÚÚ 
=
ÚÚ 
Vector2
ÚÚ #
.
ÚÚ# $
zero
ÚÚ$ (
;
ÚÚ( )
}
ÛÛ 	
bool
¯¯ 
	userPivot
¯¯ 
=
¯¯ 
false
¯¯ 
;
¯¯ 
void
˙˙ 
SetHandlePosition
˙˙ 
(
˙˙ 
Vector2
˙˙ &
uvPoint
˙˙' .
,
˙˙. /
bool
˙˙0 4
	isUserSet
˙˙5 >
)
˙˙> ?
{
˚˚ 	
if
¸¸ 
(
¸¸ 
float
¸¸ 
.
¸¸ 
IsNaN
¸¸ 
(
¸¸ 
uvPoint
¸¸ #
.
¸¸# $
x
¸¸$ %
)
¸¸% &
||
¸¸' )
float
¸¸* /
.
¸¸/ 0
IsNaN
¸¸0 5
(
¸¸5 6
uvPoint
¸¸6 =
.
¸¸= >
y
¸¸> ?
)
¸¸? @
)
¸¸@ A
return
˝˝ 
;
˝˝ 
	userPivot
ˇˇ 
=
ˇˇ 
	isUserSet
ˇˇ !
;
ˇˇ! "#
handlePosition_offset
ÄÄ !
=
ÄÄ" #
UVSelectionBounds
ÄÄ$ 5
(
ÄÄ5 6
)
ÄÄ6 7
.
ÄÄ7 8
center
ÄÄ8 >
-
ÄÄ? @
uvPoint
ÄÄA H
;
ÄÄH I
handlePosition
ÅÅ 
=
ÅÅ 
uvPoint
ÅÅ $
;
ÅÅ$ %
}
ÇÇ 	
public
áá 
void
áá 
ResetUserPivot
áá "
(
áá" #
)
áá# $
{
àà 	#
handlePosition_offset
ââ !
=
ââ" #
Vector2
ââ$ +
.
ââ+ ,
zero
ââ, 0
;
ââ0 1
}
ää 	
Bounds2D
åå 
	GetBounds
åå 
(
åå 
int
åå 
i
åå  
,
åå  !
int
åå" %
f
åå& '
,
åå' (
Vector2
åå) 0
[
åå0 1
]
åå1 2
[
åå2 3
]
åå3 4
array
åå5 :
)
åå: ;
{
çç 	
return
éé 
new
éé 
Bounds2D
éé 
(
éé  
UnityEngine
éé  +
.
éé+ ,

ProBuilder
éé, 6
.
éé6 7
ArrayUtility
éé7 C
.
ééC D
ValuesWithIndexes
ééD U
(
ééU V
array
ééV [
[
éé[ \
i
éé\ ]
]
éé] ^
,
éé^ _
	selection
éé` i
[
ééi j
i
ééj k
]
éék l
.
éél m
facesInternal
éém z
[
ééz {
f
éé{ |
]
éé| }
.
éé} ~&
distinctIndexesInternaléé~ ï
)ééï ñ
)ééñ ó
;ééó ò
}
èè 	
Vector2
îî 
UVToGUIPoint
îî 
(
îî 
Vector2
îî $
v
îî% &
)
îî& '
{
ïï 	
Vector2
ññ 
p
ññ 
=
ññ 
new
ññ 
Vector2
ññ #
(
ññ# $
v
ññ$ %
.
ññ% &
x
ññ& '
,
ññ' (
-
ññ) *
v
ññ* +
.
ññ+ ,
y
ññ, -
)
ññ- .
;
ññ. /
return
óó 
UVGraphCenter
óó  
+
óó! "
(
óó# $
p
óó$ %
*
óó& '

uvGridSize
óó( 2
*
óó3 4
uvGraphScale
óó5 A
)
óóA B
+
óóC D
uvGraphOffset
óóE R
;
óóR S
}
òò 	
Vector2
öö 
GUIToUVPoint
öö 
(
öö 
Vector2
öö $
v
öö% &
)
öö& '
{
õõ 	
Vector2
úú 
p
úú 
=
úú 
(
úú 
v
úú 
-
úú 
(
úú 
UVGraphCenter
úú +
+
úú, -
uvGraphOffset
úú. ;
)
úú; <
)
úú< =
/
úú> ?
(
úú@ A
uvGraphScale
úúA M
*
úúN O

uvGridSize
úúP Z
)
úúZ [
;
úú[ \
p
ùù 
.
ùù 
y
ùù 
=
ùù 
-
ùù 
p
ùù 
.
ùù 
y
ùù 
;
ùù 
return
ûû 
p
ûû 
;
ûû 
}
üü 	
Vector3
°° 
CanvasToGUIPoint
°°  
(
°°  !
Vector2
°°! (
v
°°) *
)
°°* +
{
¢¢ 	
v
££ 
.
££ 
x
££ 
=
££ 
UVGraphCenter
££ 
.
££  
x
££  !
+
££" #
(
££$ %
v
££% &
.
££& '
x
££' (
*
££) *
uvGraphScale
££+ 7
+
££8 9
uvGraphOffset
££: G
.
££G H
x
££H I
)
££I J
;
££J K
v
§§ 
.
§§ 
y
§§ 
=
§§ 
UVGraphCenter
§§ 
.
§§  
y
§§  !
+
§§" #
(
§§$ %
v
§§% &
.
§§& '
y
§§' (
*
§§) *
uvGraphScale
§§+ 7
+
§§8 9
uvGraphOffset
§§: G
.
§§G H
y
§§H I
)
§§I J
;
§§J K
return
•• 
v
•• 
;
•• 
}
¶¶ 	
Vector2
´´ 
GUIToCanvasPoint
´´  
(
´´  !
Vector2
´´! (
v
´´) *
)
´´* +
{
¨¨ 	
return
≠≠ 
(
≠≠ 
(
≠≠ 
v
≠≠ 
-
≠≠ 
UVGraphCenter
≠≠ &
)
≠≠& '
-
≠≠( )
uvGraphOffset
≠≠* 7
)
≠≠7 8
/
≠≠9 :
uvGraphScale
≠≠; G
;
≠≠G H
}
ÆÆ 	
private
∞∞ 
Bounds2D
∞∞ "
_selected_gui_bounds
∞∞ -
=
∞∞. /
new
∞∞0 3
Bounds2D
∞∞4 <
(
∞∞< =
Vector2
∞∞= D
.
∞∞D E
zero
∞∞E I
,
∞∞I J
Vector2
∞∞K R
.
∞∞R S
zero
∞∞S W
)
∞∞W X
;
∞∞X Y
Bounds2D
µµ 
selectedGuiBounds
µµ "
{
∂∂ 	
get
∑∑ 
{
∏∏ 
Bounds2D
ππ 
uvBounds
ππ !
=
ππ" #
UVSelectionBounds
ππ$ 5
(
ππ5 6
)
ππ6 7
;
ππ7 8"
_selected_gui_bounds
∫∫ $
.
∫∫$ %
center
∫∫% +
=
∫∫, -
UVToGUIPoint
∫∫. :
(
∫∫: ;
uvBounds
∫∫; C
.
∫∫C D
center
∫∫D J
)
∫∫J K
;
∫∫K L"
_selected_gui_bounds
ªª $
.
ªª$ %
size
ªª% )
=
ªª* +
uvBounds
ªª, 4
.
ªª4 5
size
ªª5 9
*
ªª: ;

uvGridSize
ªª< F
*
ªªG H
uvGraphScale
ªªI U
;
ªªU V
return
ºº "
_selected_gui_bounds
ºº +
;
ºº+ ,
}
ΩΩ 
}
ææ 	
Bounds2D
ƒƒ 
UVSelectionBounds
ƒƒ "
(
ƒƒ" #
)
ƒƒ# $
{
≈≈ 	
float
∆∆ 
xMin
∆∆ 
=
∆∆ 
$num
∆∆ 
,
∆∆ 
xMax
∆∆ !
=
∆∆" #
$num
∆∆$ &
,
∆∆& '
yMin
∆∆( ,
=
∆∆- .
$num
∆∆/ 1
,
∆∆1 2
yMax
∆∆3 7
=
∆∆8 9
$num
∆∆: <
;
∆∆< =
bool
«« 
first
«« 
=
«« 
true
«« 
;
«« 
for
»» 
(
»» 
int
»» 
n
»» 
=
»» 
$num
»» 
;
»» 
n
»» 
<
»» 
	selection
»»  )
.
»») *
Length
»»* 0
;
»»0 1
n
»»2 3
++
»»3 5
)
»»5 6
{
…… 
Vector2
   
[
   
]
   
uv
   
=
   
	selection
   (
[
  ( )
n
  ) *
]
  * +
.
  + ,
texturesInternal
  , <
;
  < =
foreach
ÃÃ 
(
ÃÃ 
int
ÃÃ 
i
ÃÃ 
in
ÃÃ !(
m_DistinctIndexesSelection
ÃÃ" <
[
ÃÃ< =
n
ÃÃ= >
]
ÃÃ> ?
)
ÃÃ? @
{
ÕÕ 
if
ŒŒ 
(
ŒŒ 
first
ŒŒ 
)
ŒŒ 
{
œœ 
xMin
–– 
=
–– 
uv
–– !
[
––! "
i
––" #
]
––# $
.
––$ %
x
––% &
;
––& '
xMax
—— 
=
—— 
xMin
—— #
;
——# $
yMin
““ 
=
““ 
uv
““ !
[
““! "
i
““" #
]
““# $
.
““$ %
y
““% &
;
““& '
yMax
”” 
=
”” 
yMin
”” #
;
””# $
first
‘‘ 
=
‘‘ 
false
‘‘  %
;
‘‘% &
}
’’ 
else
÷÷ 
{
◊◊ 
xMin
ÿÿ 
=
ÿÿ 
Mathf
ÿÿ $
.
ÿÿ$ %
Min
ÿÿ% (
(
ÿÿ( )
xMin
ÿÿ) -
,
ÿÿ- .
uv
ÿÿ/ 1
[
ÿÿ1 2
i
ÿÿ2 3
]
ÿÿ3 4
.
ÿÿ4 5
x
ÿÿ5 6
)
ÿÿ6 7
;
ÿÿ7 8
yMin
ŸŸ 
=
ŸŸ 
Mathf
ŸŸ $
.
ŸŸ$ %
Min
ŸŸ% (
(
ŸŸ( )
yMin
ŸŸ) -
,
ŸŸ- .
uv
ŸŸ/ 1
[
ŸŸ1 2
i
ŸŸ2 3
]
ŸŸ3 4
.
ŸŸ4 5
y
ŸŸ5 6
)
ŸŸ6 7
;
ŸŸ7 8
xMax
€€ 
=
€€ 
Mathf
€€ $
.
€€$ %
Max
€€% (
(
€€( )
xMax
€€) -
,
€€- .
uv
€€/ 1
[
€€1 2
i
€€2 3
]
€€3 4
.
€€4 5
x
€€5 6
)
€€6 7
;
€€7 8
yMax
‹‹ 
=
‹‹ 
Mathf
‹‹ $
.
‹‹$ %
Max
‹‹% (
(
‹‹( )
yMax
‹‹) -
,
‹‹- .
uv
‹‹/ 1
[
‹‹1 2
i
‹‹2 3
]
‹‹3 4
.
‹‹4 5
y
‹‹5 6
)
‹‹6 7
;
‹‹7 8
}
›› 
}
ﬁﬁ 
}
ﬂﬂ 
return
·· 
new
·· 
Bounds2D
·· 
(
··  
new
··  #
Vector2
··$ +
(
··+ ,
(
··, -
xMin
··- 1
+
··2 3
xMax
··4 8
)
··8 9
/
··: ;
$num
··< >
,
··> ?
(
··@ A
yMin
··A E
+
··F G
yMax
··H L
)
··L M
/
··N O
$num
··P R
)
··R S
,
··S T
new
··U X
Vector2
··Y `
(
··` a
xMax
··a e
-
··f g
xMin
··h l
,
··l m
yMax
··n r
-
··s t
yMin
··u y
)
··y z
)
··z {
;
··{ |
}
‚‚ 	
internal
ËË 
Vector2
ËË "
UVSelectionMinimalUV
ËË -
(
ËË- .
)
ËË. /
{
ÈÈ 	
Vector2
ÍÍ 
	minimalUV
ÍÍ 
=
ÍÍ 
Vector2
ÍÍ  '
.
ÍÍ' (
zero
ÍÍ( ,
;
ÍÍ, -
for
ÎÎ 
(
ÎÎ 
int
ÎÎ 
n
ÎÎ 
=
ÎÎ 
$num
ÎÎ 
;
ÎÎ 
n
ÎÎ 
<
ÎÎ 
	selection
ÎÎ  )
.
ÎÎ) *
Length
ÎÎ* 0
;
ÎÎ0 1
n
ÎÎ2 3
++
ÎÎ3 5
)
ÎÎ5 6
{
ÏÏ 
Vector2
ÌÌ 
[
ÌÌ 
]
ÌÌ 
uv
ÌÌ 
=
ÌÌ 
	selection
ÌÌ (
[
ÌÌ( )
n
ÌÌ) *
]
ÌÌ* +
.
ÌÌ+ ,
texturesInternal
ÌÌ, <
;
ÌÌ< =
	minimalUV
ÓÓ 
=
ÓÓ 
	UVEditing
ÓÓ %
.
ÓÓ% &
FindMinimalUV
ÓÓ& 3
(
ÓÓ3 4
uv
ÓÓ4 6
,
ÓÓ6 7(
m_DistinctIndexesSelection
ÓÓ8 R
[
ÓÓR S
n
ÓÓS T
]
ÓÓT U
,
ÓÓU V
	minimalUV
ÓÓW `
.
ÓÓ` a
x
ÓÓa b
,
ÓÓb c
	minimalUV
ÓÓd m
.
ÓÓm n
y
ÓÓn o
)
ÓÓo p
;
ÓÓp q
}
ÔÔ 
return
ÒÒ 
	minimalUV
ÒÒ 
;
ÒÒ 
}
ÚÚ 	
void
˜˜ 

UpdateMode
˜˜ 
(
˜˜ 
)
˜˜ 
{
¯¯ 	
switch
˘˘ 
(
˘˘ 
ProBuilderEditor
˘˘ $
.
˘˘$ %

selectMode
˘˘% /
)
˘˘/ 0
{
˙˙ 
case
˚˚ 

SelectMode
˚˚ 
.
˚˚  
Face
˚˚  $
:
˚˚$ %
case
¸¸ 

SelectMode
¸¸ 
.
¸¸  
TextureFace
¸¸  +
:
¸¸+ ,
bool
˝˝ 
hasSelectedFaces
˝˝ )
=
˝˝* +
false
˝˝, 1
;
˝˝1 2
for
˛˛ 
(
˛˛ 
int
˛˛ 
i
˛˛ 
=
˛˛  
$num
˛˛! "
;
˛˛" #
i
˛˛$ %
<
˛˛& '
	selection
˛˛( 1
.
˛˛1 2
Length
˛˛2 8
;
˛˛8 9
++
˛˛: <
i
˛˛< =
)
˛˛= >
{
ˇˇ 
if
ÄÄ 
(
ÄÄ 
	selection
ÄÄ %
[
ÄÄ% &
i
ÄÄ& '
]
ÄÄ' (
.
ÄÄ( )
selectedFaceCount
ÄÄ) :
>
ÄÄ; <
$num
ÄÄ= >
)
ÄÄ> ?
{
ÅÅ 
hasSelectedFaces
ÇÇ ,
=
ÇÇ- .
true
ÇÇ/ 3
;
ÇÇ3 4
break
ÉÉ !
;
ÉÉ! "
}
ÑÑ 
}
ÖÖ 
if
áá 
(
áá 
hasSelectedFaces
áá (
)
áá( )
{
àà 
List
ää 
<
ää 
bool
ää !
>
ää! "
manual
ää# )
=
ää* +
new
ää, /
List
ää0 4
<
ää4 5
bool
ää5 9
>
ää9 :
(
ää: ;
)
ää; <
;
ää< =
for
ãã 
(
ãã 
int
ãã  
i
ãã! "
=
ãã# $
$num
ãã% &
;
ãã& '
i
ãã( )
<
ãã* +
	selection
ãã, 5
.
ãã5 6
Length
ãã6 <
;
ãã< =
i
ãã> ?
++
ãã? A
)
ããA B
manual
åå "
.
åå" #
AddRange
åå# +
(
åå+ ,
	selection
åå, 5
[
åå5 6
i
åå6 7
]
åå7 8
.
åå8 9#
selectedFacesInternal
åå9 N
.
ååN O
Select
ååO U
(
ååU V
x
ååV W
=>
ååX Z
x
åå[ \
.
åå\ ]
manualUV
åå] e
)
ååe f
.
ååf g
ToList
ååg m
(
ååm n
)
åån o
)
ååo p
;
ååp q
int
çç 
c
çç 
=
çç 
manual
çç  &
.
çç& '
Distinct
çç' /
(
çç/ 0
)
çç0 1
.
çç1 2
Count
çç2 7
(
çç7 8
)
çç8 9
;
çç9 :
if
éé 
(
éé 
c
éé 
>
éé 
$num
éé  !
)
éé! "
mode
èè  
=
èè! "
UVMode
èè# )
.
èè) *
Mixed
èè* /
;
èè/ 0
else
êê 
if
êê 
(
êê  !
c
êê! "
>
êê# $
$num
êê% &
)
êê& '
mode
ëë  
=
ëë! "
manual
ëë# )
[
ëë) *
$num
ëë* +
]
ëë+ ,
?
ëë- .
UVMode
ëë/ 5
.
ëë5 6
Manual
ëë6 <
:
ëë= >
UVMode
ëë? E
.
ëëE F
Auto
ëëF J
;
ëëJ K
}
íí 
else
ìì 
{
îî 
mode
ïï 
=
ïï 
UVMode
ïï %
.
ïï% &
NoSelection
ïï& 1
;
ïï1 2
}
ññ 
break
óó 
;
óó 
case
ôô 

SelectMode
ôô 
.
ôô  
Edge
ôô  $
:
ôô$ %
case
öö 

SelectMode
öö 
.
öö  
TextureEdge
öö  +
:
öö+ ,
bool
õõ 
hasEdgeSelected
õõ (
=
õõ) *
false
õõ+ 0
;
õõ0 1
for
úú 
(
úú 
int
úú 
i
úú 
=
úú  
$num
úú! "
;
úú" #
i
úú$ %
<
úú& '
	selection
úú( 1
.
úú1 2
Length
úú2 8
;
úú8 9
++
úú: <
i
úú< =
)
úú= >
{
ùù 
if
ûû 
(
ûû 
	selection
ûû %
[
ûû% &
i
ûû& '
]
ûû' (
.
ûû( )
selectedEdgeCount
ûû) :
>
ûû; <
$num
ûû= >
)
ûû> ?
{
üü 
hasEdgeSelected
†† +
=
††, -
true
††. 2
;
††2 3
break
°° !
;
°°! "
}
¢¢ 
}
££ 
mode
•• 
=
•• 
hasEdgeSelected
•• *
?
••+ ,
UVMode
••- 3
.
••3 4
Manual
••4 :
:
••; <
UVMode
••= C
.
••C D
NoSelection
••D O
;
••O P
break
¶¶ 
;
¶¶ 
case
®® 

SelectMode
®® 
.
®®  
Vertex
®®  &
:
®®& '
case
©© 

SelectMode
©© 
.
©©  
TextureVertex
©©  -
:
©©- .
bool
™™ 
hasVertexSelected
™™ *
=
™™+ ,
false
™™- 2
;
™™2 3
for
´´ 
(
´´ 
int
´´ 
i
´´ 
=
´´  
$num
´´! "
;
´´" #
i
´´$ %
<
´´& '
	selection
´´( 1
.
´´1 2
Length
´´2 8
;
´´8 9
++
´´: <
i
´´< =
)
´´= >
{
¨¨ 
if
≠≠ 
(
≠≠ 
	selection
≠≠ %
[
≠≠% &
i
≠≠& '
]
≠≠' (
.
≠≠( )!
selectedVertexCount
≠≠) <
>
≠≠= >
$num
≠≠? @
)
≠≠@ A
{
ÆÆ 
hasVertexSelected
ØØ -
=
ØØ. /
true
ØØ0 4
;
ØØ4 5
break
∞∞ !
;
∞∞! "
}
±± 
}
≤≤ 
mode
¥¥ 
=
¥¥ 
hasVertexSelected
¥¥ ,
?
¥¥- .
UVMode
¥¥/ 5
.
¥¥5 6
Manual
¥¥6 <
:
¥¥= >
UVMode
¥¥? E
.
¥¥E F
NoSelection
¥¥F Q
;
¥¥Q R
break
µµ 
;
µµ 
default
∑∑ 
:
∑∑ 
mode
∏∏ 
=
∏∏ 
UVMode
∏∏ !
.
∏∏! "
NoSelection
∏∏" -
;
∏∏- .
break
ππ 
;
ππ 
}
∫∫ 
}
ªª 	
void
ææ "
RefreshUVCoordinates
ææ !
(
ææ! "
)
ææ" #
{
øø 	"
RefreshUVCoordinates
¿¿  
(
¿¿  !
null
¿¿! %
,
¿¿% &
false
¿¿' ,
)
¿¿, -
;
¿¿- .
}
¡¡ 	
void
«« "
RefreshUVCoordinates
«« !
(
««! "
Rect
««" &
?
««& '
dragRect
««( 0
,
««0 1
bool
««2 6
isClick
««7 >
)
««> ?
{
»» 	
if
…… 
(
…… 
editor
…… 
==
…… 
null
…… 
||
…… !
	selection
……" +
==
……, .
null
……/ 3
)
……3 4
return
   
;
   
Bounds2D
ÕÕ 

dragBounds
ÕÕ 
;
ÕÕ  
if
œœ 
(
œœ 
dragRect
œœ 
!=
œœ 
null
œœ  
)
œœ  !

dragBounds
–– 
=
–– 
new
––  
Bounds2D
––! )
(
––) *
GUIToUVPoint
––* 6
(
––6 7
(
––7 8
(
––8 9
Rect
––9 =
)
––= >
dragRect
––> F
)
––F G
.
––G H
center
––H N
)
––N O
,
––O P
new
––Q T
Vector2
––U \
(
––\ ]
(
––] ^
(
––^ _
Rect
––_ c
)
––c d
dragRect
––d l
)
––l m
.
––m n
width
––n s
,
––s t
(
––u v
(
––v w
Rect
––w {
)
––{ |
dragRect––| Ñ
)––Ñ Ö
.––Ö Ü
height––Ü å
)––å ç
/––é è
(––ê ë
uvGraphScale––ë ù
*––û ü

uvGridSize––† ™
)––™ ´
)––´ ¨
;––¨ ≠
else
—— 

dragBounds
““ 
=
““ 
new
““  
Bounds2D
““! )
(
““) *
Vector2
““* 1
.
““1 2
zero
““2 6
,
““6 7
Vector2
““8 ?
.
““? @
zero
““@ D
)
““D E
;
““E F
for
‘‘ 
(
‘‘ 
int
‘‘ 
i
‘‘ 
=
‘‘ 
$num
‘‘ 
;
‘‘ 
i
‘‘ 
<
‘‘ 
	selection
‘‘  )
.
‘‘) *
Length
‘‘* 0
;
‘‘0 1
i
‘‘2 3
++
‘‘3 5
)
‘‘5 6
{
’’ 
ProBuilderMesh
÷÷ 
pb
÷÷ !
=
÷÷" #
	selection
÷÷$ -
[
÷÷- .
i
÷÷. /
]
÷÷/ 0
;
÷÷0 1
Vector2
ÿÿ 
[
ÿÿ 
]
ÿÿ 
mshUV
ÿÿ 
=
ÿÿ  !
	UVEditing
ÿÿ" +
.
ÿÿ+ ,
GetUVs
ÿÿ, 2
(
ÿÿ2 3
pb
ÿÿ3 5
,
ÿÿ5 6
channel
ÿÿ7 >
)
ÿÿ> ?
;
ÿÿ? @
if
€€ 
(
€€ 
channel
€€ 
==
€€ 
$num
€€  
&&
€€! #
(
€€$ %
mshUV
€€% *
==
€€+ -
null
€€. 2
||
€€3 5
mshUV
€€6 ;
.
€€; <
Length
€€< B
!=
€€C E
pb
€€F H
.
€€H I
vertexCount
€€I T
||
€€U W
mshUV
€€X ]
.
€€] ^
Any
€€^ a
(
€€a b
x
€€b c
=>
€€d f
float
€€g l
.
€€l m
IsNaN
€€m r
(
€€r s
x
€€s t
.
€€t u
x
€€u v
)
€€v w
||
€€x z
float€€{ Ä
.€€Ä Å
IsNaN€€Å Ü
(€€Ü á
x€€á à
.€€à â
y€€â ä
)€€ä ã
)€€ã å
)€€å ç
)€€ç é
{
‹‹ 
mshUV
›› 
=
›› 
new
›› 
Vector2
››  '
[
››' (
pb
››( *
.
››* +
vertexCount
››+ 6
]
››6 7
;
››7 8
	UVEditing
ﬁﬁ 
.
ﬁﬁ 
ApplyUVs
ﬁﬁ &
(
ﬁﬁ& '
pb
ﬁﬁ' )
,
ﬁﬁ) *
mshUV
ﬁﬁ+ 0
,
ﬁﬁ0 1
channel
ﬁﬁ2 9
)
ﬁﬁ9 :
;
ﬁﬁ: ;
}
ﬂﬂ 
int
·· 
len
·· 
=
·· 
mshUV
·· 
!=
··  "
null
··# '
?
··( )
mshUV
··* /
.
··/ 0
Length
··0 6
:
··7 8
$num
··9 :
;
··: ;
if
‰‰ 
(
‰‰ 
dragRect
‰‰ 
!=
‰‰ 
null
‰‰  $
&&
‰‰% '
channel
‰‰( /
==
‰‰0 2
$num
‰‰3 4
)
‰‰4 5
{
ÂÂ 
switch
ÊÊ 
(
ÊÊ 
ProBuilderEditor
ÊÊ ,
.
ÊÊ, -

selectMode
ÊÊ- 7
)
ÊÊ7 8
{
ÁÁ 
case
ËË 

SelectMode
ËË '
.
ËË' (
Vertex
ËË( .
:
ËË. /
case
ÈÈ 

SelectMode
ÈÈ '
.
ÈÈ' (
TextureVertex
ÈÈ( 5
:
ÈÈ5 6
List
ÍÍ  
<
ÍÍ  !
int
ÍÍ! $
>
ÍÍ$ %
selectedTris
ÍÍ& 2
=
ÍÍ3 4
new
ÍÍ5 8
List
ÍÍ9 =
<
ÍÍ= >
int
ÍÍ> A
>
ÍÍA B
(
ÍÍB C
pb
ÍÍC E
.
ÍÍE F%
selectedIndexesInternal
ÍÍF ]
)
ÍÍ] ^
;
ÍÍ^ _
for
ÏÏ 
(
ÏÏ  !
int
ÏÏ! $
j
ÏÏ% &
=
ÏÏ' (
$num
ÏÏ) *
;
ÏÏ* +
j
ÏÏ, -
<
ÏÏ. /
len
ÏÏ0 3
;
ÏÏ3 4
j
ÏÏ5 6
++
ÏÏ6 8
)
ÏÏ8 9
{
ÌÌ 
if
ÓÓ  "
(
ÓÓ# $

dragBounds
ÓÓ$ .
.
ÓÓ. /
ContainsPoint
ÓÓ/ <
(
ÓÓ< =
mshUV
ÓÓ= B
[
ÓÓB C
j
ÓÓC D
]
ÓÓD E
)
ÓÓE F
)
ÓÓF G
{
ÔÔ  !
int
$ '
indx
( ,
=
- .
selectedTris
/ ;
.
; <
IndexOf
< C
(
C D
j
D E
)
E F
;
F G
if
ÚÚ$ &
(
ÚÚ' (
indx
ÚÚ( ,
>
ÚÚ- .
-
ÚÚ/ 0
$num
ÚÚ0 1
)
ÚÚ1 2
selectedTris
ÛÛ( 4
.
ÛÛ4 5
RemoveAt
ÛÛ5 =
(
ÛÛ= >
indx
ÛÛ> B
)
ÛÛB C
;
ÛÛC D
else
ÙÙ$ (
selectedTris
ıı( 4
.
ıı4 5
Add
ıı5 8
(
ıı8 9
j
ıı9 :
)
ıı: ;
;
ıı; <
if
¯¯$ &
(
¯¯' (
isClick
¯¯( /
)
¯¯/ 0
break
˘˘( -
;
˘˘- .
}
˙˙  !
}
˚˚ 
pb
˝˝ 
.
˝˝ !
SetSelectedVertices
˝˝ 2
(
˝˝2 3
selectedTris
˝˝3 ?
.
˝˝? @
ToArray
˝˝@ G
(
˝˝G H
)
˝˝H I
)
˝˝I J
;
˝˝J K
break
˛˛ !
;
˛˛! "
case
ÄÄ 

SelectMode
ÄÄ '
.
ÄÄ' (
Edge
ÄÄ( ,
:
ÄÄ, -
case
ÅÅ 

SelectMode
ÅÅ '
.
ÅÅ' (
TextureEdge
ÅÅ( 3
:
ÅÅ3 4
List
ÇÇ  
<
ÇÇ  !
Edge
ÇÇ! %
>
ÇÇ% &
selectedEdges
ÇÇ' 4
=
ÇÇ5 6
new
ÇÇ7 :
List
ÇÇ; ?
<
ÇÇ? @
Edge
ÇÇ@ D
>
ÇÇD E
(
ÇÇE F
pb
ÇÇF H
.
ÇÇH I
selectedEdges
ÇÇI V
)
ÇÇV W
;
ÇÇW X
for
ÑÑ 
(
ÑÑ  !
int
ÑÑ! $
n
ÑÑ% &
=
ÑÑ' (
$num
ÑÑ) *
;
ÑÑ* +
n
ÑÑ, -
<
ÑÑ. /
pb
ÑÑ0 2
.
ÑÑ2 3
facesInternal
ÑÑ3 @
.
ÑÑ@ A
Length
ÑÑA G
;
ÑÑG H
n
ÑÑI J
++
ÑÑJ L
)
ÑÑL M
{
ÖÖ 
for
ÜÜ  #
(
ÜÜ$ %
int
ÜÜ% (
p
ÜÜ) *
=
ÜÜ+ ,
$num
ÜÜ- .
;
ÜÜ. /
p
ÜÜ0 1
<
ÜÜ2 3
pb
ÜÜ4 6
.
ÜÜ6 7
facesInternal
ÜÜ7 D
[
ÜÜD E
n
ÜÜE F
]
ÜÜF G
.
ÜÜG H
edgesInternal
ÜÜH U
.
ÜÜU V
Length
ÜÜV \
;
ÜÜ\ ]
p
ÜÜ^ _
++
ÜÜ_ a
)
ÜÜa b
{
áá  !
Edge
àà$ (
edge
àà) -
=
àà. /
pb
àà0 2
.
àà2 3
facesInternal
àà3 @
[
àà@ A
n
ààA B
]
ààB C
.
ààC D
edgesInternal
ààD Q
[
ààQ R
p
ààR S
]
ààS T
;
ààT U
if
ää$ &
(
ää' (

dragBounds
ää( 2
.
ää2 3#
IntersectsLineSegment
ää3 H
(
ääH I
mshUV
ääI N
[
ääN O
edge
ääO S
.
ääS T
a
ääT U
]
ääU V
,
ääV W
mshUV
ääX ]
[
ää] ^
edge
ää^ b
.
ääb c
b
ääc d
]
ääd e
)
ääe f
)
ääf g
{
ãã$ %
if
åå( *
(
åå+ ,
!
åå, -
selectedEdges
åå- :
.
åå: ;
Contains
åå; C
(
ååC D
edge
ååD H
)
ååH I
)
ååI J
selectedEdges
çç, 9
.
çç9 :
Add
çç: =
(
çç= >
edge
çç> B
)
ççB C
;
ççC D
else
éé( ,
selectedEdges
èè, 9
.
èè9 :
Remove
èè: @
(
èè@ A
edge
èèA E
)
èèE F
;
èèF G
}
êê$ %
}
ëë  !
}
íí 
pb
îî 
.
îî 
SetSelectedEdges
îî /
(
îî/ 0
selectedEdges
îî0 =
.
îî= >
ToArray
îî> E
(
îîE F
)
îîF G
)
îîG H
;
îîH I
break
ïï !
;
ïï! "
case
öö 

SelectMode
öö '
.
öö' (
Face
öö( ,
:
öö, -
case
õõ 

SelectMode
õõ '
.
õõ' (
TextureFace
õõ( 3
:
õõ3 4
HashSet
ùù #
<
ùù# $
Face
ùù$ (
>
ùù( )
selectedFaces
ùù* 7
=
ùù8 9
new
ùù: =
HashSet
ùù> E
<
ùùE F
Face
ùùF J
>
ùùJ K
(
ùùK L
	selection
ùùL U
[
ùùU V
i
ùùV W
]
ùùW X
.
ùùX Y#
selectedFacesInternal
ùùY n
)
ùùn o
;
ùùo p
for
üü 
(
üü  !
int
üü! $
n
üü% &
=
üü' (
$num
üü) *
;
üü* +
n
üü, -
<
üü. /
pb
üü0 2
.
üü2 3
facesInternal
üü3 @
.
üü@ A
Length
üüA G
;
üüG H
n
üüI J
++
üüJ L
)
üüL M
{
†† 
Face
°°  $
face
°°% )
=
°°* +
pb
°°, .
.
°°. /
facesInternal
°°/ <
[
°°< =
n
°°= >
]
°°> ?
;
°°? @
int
££  #
[
££# $
]
££$ %
distinctIndexes
££& 5
=
££6 7
pb
££8 :
.
££: ;
facesInternal
££; H
[
££H I
n
££I J
]
££J K
.
££K L%
distinctIndexesInternal
££L c
;
££c d
bool
••  $ 
allPointsContained
••% 7
=
••8 9
true
••: >
;
••> ?
for
ßß  #
(
ßß$ %
int
ßß% (
t
ßß) *
=
ßß+ ,
$num
ßß- .
;
ßß. /
t
ßß0 1
<
ßß2 3
distinctIndexes
ßß4 C
.
ßßC D
Length
ßßD J
;
ßßJ K
t
ßßL M
++
ßßM O
)
ßßO P
{
®®  !
if
©©$ &
(
©©' (
!
©©( )

dragBounds
©©) 3
.
©©3 4
ContainsPoint
©©4 A
(
©©A B
mshUV
©©B G
[
©©G H
distinctIndexes
©©H W
[
©©W X
t
©©X Y
]
©©Y Z
]
©©Z [
)
©©[ \
)
©©\ ]
{
™™$ % 
allPointsContained
´´( :
=
´´; <
false
´´= B
;
´´B C
break
¨¨( -
;
¨¨- .
}
≠≠$ %
}
ÆÆ  !
if
∞∞  "
(
∞∞# $ 
allPointsContained
∞∞$ 6
)
∞∞6 7
{
±±  !
if
≤≤$ &
(
≤≤' (
selectedFaces
≤≤( 5
.
≤≤5 6
Contains
≤≤6 >
(
≤≤> ?
face
≤≤? C
)
≤≤C D
)
≤≤D E
selectedFaces
≥≥( 5
.
≥≥5 6
Remove
≥≥6 <
(
≥≥< =
face
≥≥= A
)
≥≥A B
;
≥≥B C
else
¥¥$ (
selectedFaces
µµ( 5
.
µµ5 6
Add
µµ6 9
(
µµ9 :
face
µµ: >
)
µµ> ?
;
µµ? @
}
∂∂  !
}
∑∑ 
	selection
ππ %
[
ππ% &
i
ππ& '
]
ππ' (
.
ππ( )
SetSelectedFaces
ππ) 9
(
ππ9 :
selectedFaces
ππ: G
.
ππG H
ToArray
ππH O
(
ππO P
)
ππP Q
)
ππQ R
;
ππR S
break
ªª !
;
ªª! "
}
ºº 
ProBuilderEditor
ææ $
.
ææ$ %
Refresh
ææ% ,
(
ææ, -
)
ææ- .
;
ææ. /
	SceneView
øø 
.
øø 

RepaintAll
øø (
(
øø( )
)
øø) *
;
øø* +
}
¿¿ 
}
¡¡ 
m_PreviewMaterial
√√ 
=
√√ #
EditorMaterialUtility
√√  5
.
√√5 6 
GetActiveSelection
√√6 H
(
√√H I
)
√√I J
;
√√J K

UpdateMode
≈≈ 
(
≈≈ 
)
≈≈ 
;
≈≈ 
handlePosition
«« 
=
«« 
UVSelectionBounds
«« .
(
««. /
)
««/ 0
.
««0 1
center
««1 7
-
««8 9#
handlePosition_offset
««: O
;
««O P
}
»» 	
void
ÕÕ *
RefreshSelectedUVCoordinates
ÕÕ )
(
ÕÕ) *
)
ÕÕ* +
{
ŒŒ 	
handlePosition
œœ 
=
œœ 
UVSelectionBounds
œœ .
(
œœ. /
)
œœ/ 0
.
œœ0 1
center
œœ1 7
-
œœ8 9#
handlePosition_offset
œœ: O
;
œœO P
}
–– 	
Rect
’’ 
toolbarRect_tool
’’ 
=
’’ 
new
’’  #
Rect
’’$ (
(
’’( )
PAD
’’) ,
,
’’, -
PAD
’’. 1
,
’’1 2
$num
’’3 7
,
’’7 8
$num
’’9 <
)
’’< =
;
’’= >
Rect
÷÷  
toolbarRect_select
÷÷ 
=
÷÷  !
new
÷÷" %
Rect
÷÷& *
(
÷÷* +
PAD
÷÷+ .
+
÷÷/ 0
$num
÷÷1 4
+
÷÷5 6
PAD
÷÷7 :
,
÷÷: ;
PAD
÷÷< ?
,
÷÷? @
$num
÷÷A E
,
÷÷E F
$num
÷÷G J
)
÷÷J K
;
÷÷K L
GUIStyle
ÿÿ 
commandStyle
ÿÿ 
=
ÿÿ 
null
ÿÿ  $
;
ÿÿ$ %
void
⁄⁄ 
DrawUVTools
⁄⁄ 
(
⁄⁄ 
Rect
⁄⁄ 
rect
⁄⁄ "
)
⁄⁄" #
{
€€ 	
GUI
‹‹ 
.
‹‹ 

BeginGroup
‹‹ 
(
‹‹ 
rect
‹‹ 
)
‹‹  
;
‹‹  !
if
ﬁﬁ 
(
ﬁﬁ 
commandStyle
ﬁﬁ 
==
ﬁﬁ 
null
ﬁﬁ  $
)
ﬁﬁ$ %
commandStyle
ﬂﬂ 
=
ﬂﬂ 
EditorGUIUtility
ﬂﬂ /
.
ﬂﬂ/ 0
GetBuiltinSkin
ﬂﬂ0 >
(
ﬂﬂ> ?

EditorSkin
ﬂﬂ? I
.
ﬂﬂI J
	Inspector
ﬂﬂJ S
)
ﬂﬂS T
.
ﬂﬂT U
	FindStyle
ﬂﬂU ^
(
ﬂﬂ^ _
$str
ﬂﬂ_ h
)
ﬂﬂh i
;
ﬂﬂi j
	EditorGUI
·· 
.
·· 
BeginChangeCheck
·· &
(
··& '
)
··' (
;
··( )
tool
„„ 
=
„„ 
(
„„ 
Tool
„„ 
)
„„ 
GUI
„„ 
.
„„ 
Toolbar
„„ $
(
„„$ %
toolbarRect_tool
„„% 5
,
„„5 6
(
„„7 8
int
„„8 ;
)
„„; <
tool
„„< @
<
„„A B
$num
„„C D
?
„„E F
$num
„„G H
:
„„I J
(
„„K L
int
„„L O
)
„„O P
tool
„„P T
,
„„T U
	ToolIcons
„„V _
,
„„_ `
$str
„„a j
)
„„j k
;
„„k l
if
ÂÂ 
(
ÂÂ 
	EditorGUI
ÂÂ 
.
ÂÂ 
EndChangeCheck
ÂÂ (
(
ÂÂ( )
)
ÂÂ) *
)
ÂÂ* +
{
ÊÊ 
SetTool_Internal
ÁÁ  
(
ÁÁ  !
tool
ÁÁ! %
)
ÁÁ% &
;
ÁÁ& '
	SceneView
ËË 
.
ËË 

RepaintAll
ËË $
(
ËË$ %
)
ËË% &
;
ËË& '
}
ÈÈ 
ProBuilderEditor
ÎÎ 
.
ÎÎ 

selectMode
ÎÎ '
=
ÎÎ( )
UI
ÎÎ* ,
.
ÎÎ, -
EditorGUIUtility
ÎÎ- =
.
ÎÎ= >"
DoElementModeToolbar
ÎÎ> R
(
ÎÎR S 
toolbarRect_select
ÎÎS e
,
ÎÎe f
ProBuilderEditor
ÎÎg w
.
ÎÎw x

selectModeÎÎx Ç
)ÎÎÇ É
;ÎÎÉ Ñ
Rect
ÓÓ !
editor_toggles_rect
ÓÓ $
=
ÓÓ% &
new
ÓÓ' *
Rect
ÓÓ+ /
(
ÓÓ/ 0 
toolbarRect_select
ÓÓ0 B
.
ÓÓB C
x
ÓÓC D
+
ÓÓE F
$num
ÓÓG J
,
ÓÓJ K
PAD
ÓÓL O
-
ÓÓP Q
$num
ÓÓR S
,
ÓÓS T
$num
ÓÓU X
,
ÓÓX Y
$num
ÓÓZ ]
)
ÓÓ] ^
;
ÓÓ^ _
if
 
(
 
editor
 
)
 
{
ÒÒ #
gc_SceneViewUVHandles
ÚÚ %
.
ÚÚ% &
image
ÚÚ& +
=
ÚÚ, -
ProBuilderEditor
ÚÚ. >
.
ÚÚ> ?

selectMode
ÚÚ? I
.
ÚÚI J
IsTextureMode
ÚÚJ W
(
ÚÚW X
)
ÚÚX Y
?
ÚÚZ [
icon_sceneUV_on
ÚÚ\ k
:
ÚÚl m
icon_sceneUV_off
ÚÚn ~
;
ÚÚ~ 
if
ÙÙ 
(
ÙÙ 
GUI
ÙÙ 
.
ÙÙ 
Button
ÙÙ 
(
ÙÙ !
editor_toggles_rect
ÙÙ 2
,
ÙÙ2 3#
gc_SceneViewUVHandles
ÙÙ4 I
)
ÙÙI J
)
ÙÙJ K
{
ıı 
if
ˆˆ 
(
ˆˆ 
ProBuilderEditor
ˆˆ (
.
ˆˆ( )

selectMode
ˆˆ) 3
.
ˆˆ3 4
IsTextureMode
ˆˆ4 A
(
ˆˆA B
)
ˆˆB C
)
ˆˆC D
ProBuilderEditor
˜˜ (
.
˜˜( )

selectMode
˜˜) 3
=
˜˜4 5
ProBuilderEditor
˜˜6 F
.
˜˜F G

selectMode
˜˜G Q
.
˜˜Q R
GetPositionMode
˜˜R a
(
˜˜a b
)
˜˜b c
;
˜˜c d
else
¯¯ 
{
˘˘ $
VertexManipulationTool
˙˙ .
.
˙˙. /
handleOrientation
˙˙/ @
=
˙˙A B
HandleOrientation
˙˙C T
.
˙˙T U
ActiveElement
˙˙U b
;
˙˙b c
ProBuilderEditor
˚˚ (
.
˚˚( )

selectMode
˚˚) 3
=
˚˚4 5
ProBuilderEditor
˚˚6 F
.
˚˚F G

selectMode
˚˚G Q
.
˚˚Q R
GetTextureMode
˚˚R `
(
˚˚` a
)
˚˚a b
;
˚˚b c
}
¸¸ 
	SceneView
˛˛ 
.
˛˛ 

RepaintAll
˛˛ (
(
˛˛( )
)
˛˛) *
;
˛˛* +
}
ˇˇ 
}
ÄÄ 
GUI
ÇÇ 
.
ÇÇ 
enabled
ÇÇ 
=
ÇÇ 
true
ÇÇ 
;
ÇÇ !
editor_toggles_rect
ÑÑ 
.
ÑÑ  
x
ÑÑ  !
+=
ÑÑ" $!
editor_toggles_rect
ÑÑ% 8
.
ÑÑ8 9
width
ÑÑ9 >
+
ÑÑ? @
PAD
ÑÑA D
;
ÑÑD E#
gc_ShowPreviewTexture
ÜÜ !
.
ÜÜ! "
image
ÜÜ" '
=
ÜÜ( )#
m_ShowPreviewMaterial
ÜÜ* ?
?
ÜÜ@ A!
icon_textureMode_on
ÜÜB U
:
ÜÜV W"
icon_textureMode_off
ÜÜX l
;
ÜÜl m
if
àà 
(
àà 
GUI
àà 
.
àà 
Button
àà 
(
àà !
editor_toggles_rect
àà .
,
àà. /#
gc_ShowPreviewTexture
àà0 E
)
ààE F
)
ààF G#
m_ShowPreviewMaterial
ââ %
.
ââ% &
SetValue
ââ& .
(
ââ. /
!
ââ/ 0#
m_ShowPreviewMaterial
ââ0 E
,
ââE F
true
ââG K
)
ââK L
;
ââL M!
editor_toggles_rect
ãã 
.
ãã  
x
ãã  !
+=
ãã" $!
editor_toggles_rect
ãã% 8
.
ãã8 9
width
ãã9 >
+
ãã? @
PAD
ããA D
;
ããD E
if
çç 
(
çç 
GUI
çç 
.
çç 
Button
çç 
(
çç !
editor_toggles_rect
çç .
,
çç. /
gc_RenderUV
çç0 ;
)
çç; <
)
çç< =
ScreenshotMenu
éé 
(
éé 
)
éé  
;
éé  !
int
êê 
	t_channel
êê 
=
êê 
channel
êê #
;
êê# $
Rect
íí 
channelRect
íí 
=
íí 
new
íí "
Rect
íí# '
(
íí' (
this
ìì 
.
ìì 
position
ìì !
.
ìì! "
width
ìì" '
-
ìì( )
(
ìì* +
$num
ìì+ .
+
ìì/ 0
$num
ìì1 2
)
ìì2 3
,
ìì3 4!
editor_toggles_rect
îî '
.
îî' (
y
îî( )
+
îî* +
$num
îî, -
,
îî- .
$num
ïï 
,
ïï 
$num
ññ 
)
ññ 
;
ññ 
channel
òò 
=
òò 
	EditorGUI
òò 
.
òò  
IntPopup
òò  (
(
òò( )
channelRect
òò) 4
,
òò4 5
channel
òò6 =
,
òò= >
UV_CHANNELS_STR
òò? N
,
òòN O
UV_CHANNELS
òòP [
)
òò[ \
;
òò\ ]
if
öö 
(
öö 
channel
öö 
!=
öö 
	t_channel
öö $
)
öö$ %
{
õõ 
if
úú 
(
úú 
	t_channel
úú 
==
úú  
$num
úú! "
)
úú" #
{
ùù 
foreach
ûû 
(
ûû 
ProBuilderMesh
ûû +
pb
ûû, .
in
ûû/ 1
	selection
ûû2 ;
)
ûû; <
pb
üü 
.
üü !
SetSelectedVertices
üü .
(
üü. /
new
üü/ 2
int
üü3 6
[
üü6 7
$num
üü7 8
]
üü8 9
{
üü: ;
}
üü; <
)
üü< =
;
üü= >
}
†† "
RefreshUVCoordinates
¢¢ $
(
¢¢$ %
)
¢¢% &
;
¢¢& '
}
££ 
GUI
•• 
.
•• 
EndGroup
•• 
(
•• 
)
•• 
;
•• 
}
¶¶ 	
static
®® 
Rect
®® "
ActionWindowDragRect
®® (
=
®®) *
new
®®+ .
Rect
®®/ 3
(
®®3 4
$num
®®4 5
,
®®5 6
$num
®®7 8
,
®®8 9
$num
®®: ?
,
®®? @
$num
®®A C
)
®®C D
;
®®D E
static
©© 
Editor
©© 
	uv2Editor
©© 
=
©©  !
null
©©" &
;
©©& '
void
´´ 
DrawActionWindow
´´ 
(
´´ 
int
´´ !
windowIndex
´´" -
)
´´- .
{
¨¨ 	
if
≠≠ 
(
≠≠ 
channel
≠≠ 
==
≠≠ 
$num
≠≠ 
)
≠≠ 
{
ÆÆ 
if
ØØ 
(
ØØ 
mode
ØØ 
!=
ØØ 
UVMode
ØØ "
.
ØØ" #
NoSelection
ØØ# .
)
ØØ. /
	GUILayout
∞∞ 
.
∞∞ 
Label
∞∞ #
(
∞∞# $
$str
∞∞$ /
+
∞∞0 1
mode
∞∞2 6
,
∞∞6 7
EditorStyles
∞∞8 D
.
∞∞D E
	boldLabel
∞∞E N
)
∞∞N O
;
∞∞O P
switch
≤≤ 
(
≤≤ 
mode
≤≤ 
)
≤≤ 
{
≥≥ 
case
¥¥ 
UVMode
¥¥ 
.
¥¥  
Auto
¥¥  $
:
¥¥$ %
DrawAutoModeUI
µµ &
(
µµ& '
)
µµ' (
;
µµ( )
break
∂∂ 
;
∂∂ 
case
∏∏ 
UVMode
∏∏ 
.
∏∏  
Manual
∏∏  &
:
∏∏& '
DrawManualModeUI
ππ (
(
ππ( )
)
ππ) *
;
ππ* +
break
∫∫ 
;
∫∫ 
case
ºº 
UVMode
ºº 
.
ºº  
Mixed
ºº  %
:
ºº% &
if
ææ 
(
ææ 
	GUILayout
ææ %
.
ææ% &
Button
ææ& ,
(
ææ, - 
gc_ConvertToManual
ææ- ?
,
ææ? @
EditorStyles
ææA M
.
ææM N

miniButton
ææN X
)
ææX Y
)
ææY Z
Menu_SetManualUV
øø ,
(
øø, -
)
øø- .
;
øø. /
if
¡¡ 
(
¡¡ 
	GUILayout
¡¡ %
.
¡¡% &
Button
¡¡& ,
(
¡¡, -
gc_ConvertToAuto
¡¡- =
,
¡¡= >
EditorStyles
¡¡? K
.
¡¡K L

miniButton
¡¡L V
)
¡¡V W
)
¡¡W X
Menu_SetAutoUV
¬¬ *
(
¬¬* +
)
¬¬+ ,
;
¬¬, -
break
ƒƒ 
;
ƒƒ 
case
∆∆ 
UVMode
∆∆ 
.
∆∆  
NoSelection
∆∆  +
:
∆∆+ ,
	GUILayout
«« !
.
««! "
Label
««" '
(
««' (
gc_NoUvSelected
««( 7
,
««7 8
EditorStyles
««9 E
.
««E F#
centeredGreyMiniLabel
««F [
,
««[ \
	GUILayout
««] f
.
««f g
ExpandHeight
««g s
(
««s t
true
««t x
)
««x y
)
««y z
;
««z {
break
»» 
;
»» 
}
…… 
}
   
else
ÀÀ 
if
ÀÀ 
(
ÀÀ 
channel
ÀÀ 
==
ÀÀ 
$num
ÀÀ  !
)
ÀÀ! "
{
ÃÃ 
EditorUtility
ÕÕ 
.
ÕÕ  
CreateCachedEditor
ÕÕ 0
<
ÕÕ0 1$
UnwrapParametersEditor
ÕÕ1 G
>
ÕÕG H
(
ÕÕH I
	selection
ÕÕI R
,
ÕÕR S
ref
ÕÕT W
	uv2Editor
ÕÕX a
)
ÕÕa b
;
ÕÕb c
if
œœ 
(
œœ 
	uv2Editor
œœ 
!=
œœ  
null
œœ! %
)
œœ% &
{
–– 
	GUILayout
—— 
.
—— 
Space
—— #
(
——# $
$num
——$ %
)
——% &
;
——& '
	uv2Editor
““ 
.
““ 
	hideFlags
““ '
=
““( )
	HideFlags
““* 3
.
““3 4
HideAndDontSave
““4 C
;
““C D
	uv2Editor
”” 
.
”” 
OnInspectorGUI
”” ,
(
””, -
)
””- .
;
””. /
}
‘‘ 
	GUILayout
÷÷ 
.
÷÷ 
FlexibleSpace
÷÷ '
(
÷÷' (
)
÷÷( )
;
÷÷) *
if
ÿÿ 
(
ÿÿ 
	GUILayout
ÿÿ 
.
ÿÿ 
Button
ÿÿ $
(
ÿÿ$ %
$str
ÿÿ% ;
)
ÿÿ; <
)
ÿÿ< =
{
ŸŸ 
foreach
⁄⁄ 
(
⁄⁄ 
var
⁄⁄  
mesh
⁄⁄! %
in
⁄⁄& (
	selection
⁄⁄) 2
)
⁄⁄2 3
mesh
€€ 
.
€€ 
Optimize
€€ %
(
€€% &
true
€€& *
)
€€* +
;
€€+ ,
}
‹‹ 
	GUILayout
ﬁﬁ 
.
ﬁﬁ 
Space
ﬁﬁ 
(
ﬁﬁ  
$num
ﬁﬁ  !
)
ﬁﬁ! "
;
ﬁﬁ" #
}
ﬂﬂ 
GUI
·· 
.
·· 

DragWindow
·· 
(
·· "
ActionWindowDragRect
·· /
)
··/ 0
;
··0 1
actionWindowRect
‚‚ 
=
‚‚ 
UI
‚‚ !
.
‚‚! "
EditorGUILayout
‚‚" 1
.
‚‚1 2
DoResizeHandle
‚‚2 @
(
‚‚@ A
actionWindowRect
‚‚A Q
,
‚‚Q R#
minimumInspectorWidth
‚‚S h
,
‚‚h i%
minimumInspectorHeight‚‚j Ä
)‚‚Ä Å
;‚‚Å Ç
}
„„ 	
bool
ÂÂ $
modifyingUVs_AutoPanel
ÂÂ #
=
ÂÂ$ %
false
ÂÂ& +
;
ÂÂ+ ,
void
ÁÁ 
DrawAutoModeUI
ÁÁ 
(
ÁÁ 
)
ÁÁ 
{
ËË 	
if
ÈÈ 
(
ÈÈ 
	GUILayout
ÈÈ 
.
ÈÈ 
Button
ÈÈ  
(
ÈÈ  !
$str
ÈÈ! 4
,
ÈÈ4 5
EditorStyles
ÈÈ6 B
.
ÈÈB C

miniButton
ÈÈC M
)
ÈÈM N
)
ÈÈN O
Menu_SetManualUV
ÍÍ  
(
ÍÍ  !
)
ÍÍ! "
;
ÍÍ" #
bool
ÏÏ 
	isKeyDown
ÏÏ 
=
ÏÏ 
Event
ÏÏ "
.
ÏÏ" #
current
ÏÏ# *
.
ÏÏ* +
type
ÏÏ+ /
==
ÏÏ0 2
	EventType
ÏÏ3 <
.
ÏÏ< =
KeyDown
ÏÏ= D
;
ÏÏD E
if
ÓÓ 
(
ÓÓ 
AutoUVEditor
ÓÓ 
.
ÓÓ 
OnGUI
ÓÓ "
(
ÓÓ" #
	selection
ÓÓ# ,
,
ÓÓ, -
(
ÓÓ. /
int
ÓÓ/ 2
)
ÓÓ2 3
actionWindowRect
ÓÓ3 C
.
ÓÓC D
width
ÓÓD I
)
ÓÓI J
)
ÓÓJ K
{
ÔÔ 
if
 
(
 
!
 $
modifyingUVs_AutoPanel
 +
)
+ ,
{
ÒÒ $
modifyingUVs_AutoPanel
ÚÚ *
=
ÚÚ+ ,
true
ÚÚ- 1
;
ÚÚ1 2
foreach
ÙÙ 
(
ÙÙ 
ProBuilderMesh
ÙÙ +
pb
ÙÙ, .
in
ÙÙ/ 1
	selection
ÙÙ2 ;
)
ÙÙ; <
{
ıı 
pb
ˆˆ 
.
ˆˆ 
ToMesh
ˆˆ !
(
ˆˆ! "
)
ˆˆ" #
;
ˆˆ# $
pb
˜˜ 
.
˜˜ 
Refresh
˜˜ "
(
˜˜" #
)
˜˜# $
;
˜˜$ %
}
¯¯ 
}
˘˘ 
foreach
˚˚ 
(
˚˚ 
var
˚˚ 
kvp
˚˚  
in
˚˚! #
MeshSelection
˚˚$ 1
.
˚˚1 2%
selectedFacesInEditZone
˚˚2 I
)
˚˚I J
kvp
¸¸ 
.
¸¸ 
Key
¸¸ 
.
¸¸ 
	RefreshUV
¸¸ %
(
¸¸% &
kvp
¸¸& )
.
¸¸) *
Value
¸¸* /
)
¸¸/ 0
;
¸¸0 1*
RefreshSelectedUVCoordinates
˛˛ ,
(
˛˛, -
)
˛˛- .
;
˛˛. /
}
ˇˇ 
if
ÇÇ 
(
ÇÇ 
	isKeyDown
ÇÇ 
&&
ÇÇ 
Event
ÇÇ "
.
ÇÇ" #
current
ÇÇ# *
.
ÇÇ* +
type
ÇÇ+ /
==
ÇÇ0 2
	EventType
ÇÇ3 <
.
ÇÇ< =
Used
ÇÇ= A
)
ÇÇA B
eatNextKeyUp
ÜÜ 
=
ÜÜ 
true
ÜÜ #
;
ÜÜ# $
}
áá 	
bool
ââ 
tool_weldButton
ââ 
=
ââ 
false
ââ $
;
ââ$ %
Vector2
ãã 
scroll
ãã 
=
ãã 
Vector2
ãã  
.
ãã  !
zero
ãã! %
;
ãã% &
void
çç 
DrawManualModeUI
çç 
(
çç 
)
çç 
{
éé 	
GUI
èè 
.
èè 
enabled
èè 
=
èè 
MeshSelection
èè '
.
èè' (
selectedFaceCount
èè( 9
>
èè: ;
$num
èè< =
;
èè= >
if
ëë 
(
ëë 
	GUILayout
ëë 
.
ëë 
Button
ëë  
(
ëë  !
gc_ConvertToAuto
ëë! 1
,
ëë1 2
EditorStyles
ëë3 ?
.
ëë? @

miniButton
ëë@ J
)
ëëJ K
)
ëëK L
Menu_SetAutoUV
íí 
(
íí 
)
íí  
;
íí  !
GUI
ññ 
.
ññ 
enabled
ññ 
=
ññ 
true
ññ 
;
ññ 
scroll
óó 
=
óó 
EditorGUILayout
óó $
.
óó$ %
BeginScrollView
óó% 4
(
óó4 5
scroll
óó5 ;
)
óó; <
;
óó< =
GUI
òò 
.
òò 
enabled
òò 
=
òò 
MeshSelection
òò '
.
òò' (
selectedFaceCount
òò( 9
>
òò: ;
$num
òò< =
;
òò= >
	GUILayout
ùù 
.
ùù 
Label
ùù 
(
ùù 
$str
ùù )
,
ùù) *
EditorStyles
ùù+ 7
.
ùù7 8
miniBoldLabel
ùù8 E
)
ùùE F
;
ùùF G
	GUILayout
üü 
.
üü 
BeginHorizontal
üü %
(
üü% &
)
üü& '
;
üü' (
if
°° 
(
°° 
	GUILayout
°° 
.
°° 
Button
°°  
(
°°  !
$str
°°! )
,
°°) *
EditorStyles
°°+ 7
.
°°7 8

miniButton
°°8 B
)
°°B C
)
°°C D 
Menu_PlanarProject
¢¢ "
(
¢¢" #
)
¢¢# $
;
¢¢$ %
if
§§ 
(
§§ 
	GUILayout
§§ 
.
§§ 
Button
§§  
(
§§  !
$str
§§! &
,
§§& '
EditorStyles
§§( 4
.
§§4 5

miniButton
§§5 ?
)
§§? @
)
§§@ A
Menu_BoxProject
•• 
(
••  
)
••  !
;
••! "
	GUILayout
ßß 
.
ßß 
EndHorizontal
ßß #
(
ßß# $
)
ßß$ %
;
ßß% &
GUI
¨¨ 
.
¨¨ 
enabled
¨¨ 
=
¨¨ 
MeshSelection
¨¨ '
.
¨¨' (!
selectedVertexCount
¨¨( ;
>
¨¨< =
$num
¨¨> ?
;
¨¨? @
	GUILayout
≠≠ 
.
≠≠ 
Label
≠≠ 
(
≠≠ 
$str
≠≠ '
,
≠≠' (
EditorStyles
≠≠) 5
.
≠≠5 6
miniBoldLabel
≠≠6 C
)
≠≠C D
;
≠≠D E
if
ØØ 
(
ØØ 
	GUILayout
ØØ 
.
ØØ 
Button
ØØ  
(
ØØ  !
$str
ØØ! 0
,
ØØ0 1
EditorStyles
ØØ2 >
.
ØØ> ?

miniButton
ØØ? I
)
ØØI J
)
ØØJ K!
Menu_SelectUVIsland
∞∞ #
(
∞∞# $
)
∞∞$ %
;
∞∞% &
GUI
≤≤ 
.
≤≤ 
enabled
≤≤ 
=
≤≤ 
MeshSelection
≤≤ '
.
≤≤' (!
selectedVertexCount
≤≤( ;
>
≤≤< =
$num
≤≤> ?
&&
≤≤@ B
ProBuilderEditor
≤≤C S
.
≤≤S T

selectMode
≤≤T ^
!=
≤≤_ a

SelectMode
≤≤b l
.
≤≤l m
Face
≤≤m q
;
≤≤q r
if
≥≥ 
(
≥≥ 
	GUILayout
≥≥ 
.
≥≥ 
Button
≥≥  
(
≥≥  !
$str
≥≥! .
,
≥≥. /
EditorStyles
≥≥0 <
.
≥≥< =

miniButton
≥≥= G
)
≥≥G H
)
≥≥H I
Menu_SelectUVFace
¥¥ !
(
¥¥! "
)
¥¥" #
;
¥¥# $
	GUILayout
ππ 
.
ππ 
Label
ππ 
(
ππ 
$str
ππ "
,
ππ" #
EditorStyles
ππ$ 0
.
ππ0 1
miniBoldLabel
ππ1 >
)
ππ> ?
;
ππ? @
GUI
ªª 
.
ªª 
enabled
ªª 
=
ªª 
MeshSelection
ªª '
.
ªª' (!
selectedVertexCount
ªª( ;
>
ªª< =
$num
ªª> ?
;
ªª? @
tool_weldButton
ΩΩ 
=
ΩΩ 
UI
ΩΩ  
.
ΩΩ  !
EditorGUIUtility
ΩΩ! 1
.
ΩΩ1 2
ToolSettingsGUI
ΩΩ2 A
(
ΩΩA B
$str
ΩΩB H
,
ΩΩH I
$strΩΩJ ò
,ΩΩò ô
tool_weldButton
ææ #
,
ææ# $
Menu_SewUVs
øø 
,
øø  
WeldButtonGUI
¿¿ !
,
¿¿! "
	selection
¡¡ 
)
¡¡ 
;
¡¡ 
if
√√ 
(
√√ 
	GUILayout
√√ 
.
√√ 
Button
√√  
(
√√  !
$str
√√! /
,
√√/ 0
EditorStyles
√√1 =
.
√√= >

miniButton
√√> H
)
√√H I
)
√√I J
Menu_CollapseUVs
ƒƒ  
(
ƒƒ  !
)
ƒƒ! "
;
ƒƒ" #
GUI
∆∆ 
.
∆∆ 
enabled
∆∆ 
=
∆∆ 
MeshSelection
∆∆ '
.
∆∆' (!
selectedVertexCount
∆∆( ;
>
∆∆< =
$num
∆∆> ?
;
∆∆? @
if
«« 
(
«« 
	GUILayout
«« 
.
«« 
Button
««  
(
««  !
$str
««! ,
,
««, -
EditorStyles
««. :
.
««: ;

miniButton
««; E
)
««E F
)
««F G
Menu_SplitUVs
»» 
(
»» 
)
»» 
;
»»  
	GUILayout
   
.
   
Space
   
(
   
$num
   
)
   
;
   
if
ÃÃ 
(
ÃÃ 
	GUILayout
ÃÃ 
.
ÃÃ 
Button
ÃÃ  
(
ÃÃ  !
$str
ÃÃ! 2
,
ÃÃ2 3
EditorStyles
ÃÃ4 @
.
ÃÃ@ A

miniButton
ÃÃA K
)
ÃÃK L
)
ÃÃL M
Menu_FlipUVs
ÕÕ 
(
ÕÕ 
Vector2
ÕÕ $
.
ÕÕ$ %
up
ÕÕ% '
)
ÕÕ' (
;
ÕÕ( )
if
œœ 
(
œœ 
	GUILayout
œœ 
.
œœ 
Button
œœ  
(
œœ  !
$str
œœ! 0
,
œœ0 1
EditorStyles
œœ2 >
.
œœ> ?

miniButton
œœ? I
)
œœI J
)
œœJ K
Menu_FlipUVs
–– 
(
–– 
Vector2
–– $
.
––$ %
right
––% *
)
––* +
;
––+ ,
	GUILayout
““ 
.
““ 
Space
““ 
(
““ 
$num
““ 
)
““ 
;
““ 
if
‘‘ 
(
‘‘ 
	GUILayout
‘‘ 
.
‘‘ 
Button
‘‘  
(
‘‘  !
$str
‘‘! *
,
‘‘* +
EditorStyles
‘‘, 8
.
‘‘8 9

miniButton
‘‘9 C
)
‘‘C D
)
‘‘D E
Menu_FitUVs
’’ 
(
’’ 
)
’’ 
;
’’ 
GUI
◊◊ 
.
◊◊ 
enabled
◊◊ 
=
◊◊ 
true
◊◊ 
;
◊◊ 
EditorGUILayout
ŸŸ 
.
ŸŸ 
EndScrollView
ŸŸ )
(
ŸŸ) *
)
ŸŸ* +
;
ŸŸ+ ,
}
⁄⁄ 	
const
‹‹ 
float
‹‹ $
k_MinimumSewUVDistance
‹‹ *
=
‹‹+ ,
$num
‹‹- 2
;
‹‹2 3
Pref
›› 
<
›› 
float
›› 
>
›› 
m_WeldDistance
›› "
=
››# $
new
››% (
Pref
››) -
<
››- .
float
››. 3
>
››3 4
(
››4 5
$str
››5 L
,
››L M
$num
››N R
)
››R S
;
››S T
void
ﬂﬂ 
WeldButtonGUI
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ 
{
‡‡ 	
	EditorGUI
·· 
.
·· 
BeginChangeCheck
·· &
(
··& '
)
··' (
;
··( )
EditorGUIUtility
„„ 
.
„„ 

labelWidth
„„ '
=
„„( )
$num
„„* -
;
„„- .
m_WeldDistance
‰‰ 
.
‰‰ 
value
‰‰  
=
‰‰! "
EditorGUILayout
‰‰# 2
.
‰‰2 3

FloatField
‰‰3 =
(
‰‰= >
new
‰‰> A

GUIContent
‰‰B L
(
‰‰L M
$str
‰‰M R
,
‰‰R S
$str‰‰T ü
)‰‰ü †
,‰‰† °
m_WeldDistance‰‰¢ ∞
)‰‰∞ ±
;‰‰± ≤
EditorGUIUtility
ÂÂ 
.
ÂÂ 

labelWidth
ÂÂ '
=
ÂÂ( )
$num
ÂÂ* ,
;
ÂÂ, -
if
ÁÁ 
(
ÁÁ 
m_WeldDistance
ÁÁ 
<=
ÁÁ !$
k_MinimumSewUVDistance
ÁÁ" 8
)
ÁÁ8 9
m_WeldDistance
ËË 
.
ËË 
value
ËË $
=
ËË% &$
k_MinimumSewUVDistance
ËË' =
;
ËË= >
if
ÍÍ 
(
ÍÍ 
	EditorGUI
ÍÍ 
.
ÍÍ 
EndChangeCheck
ÍÍ (
(
ÍÍ( )
)
ÍÍ) *
)
ÍÍ* + 
ProBuilderSettings
ÎÎ "
.
ÎÎ" #
Save
ÎÎ# '
(
ÎÎ' (
)
ÎÎ( )
;
ÎÎ) *
}
ÏÏ 	
private
ÙÙ 
void
ÙÙ 
SelectUVShell
ÙÙ "
(
ÙÙ" #
)
ÙÙ# $
{
ıı 	
if
ˆˆ 
(
ˆˆ 
	selection
ˆˆ 
==
ˆˆ 
null
ˆˆ !
||
ˆˆ" $
	selection
ˆˆ% .
.
ˆˆ. /
Length
ˆˆ/ 5
<
ˆˆ6 7
$num
ˆˆ8 9
)
ˆˆ9 :
return
˜˜ 
;
˜˜ 
foreach
˘˘ 
(
˘˘ 
ProBuilderMesh
˘˘ #
pb
˘˘$ &
in
˘˘' )
	selection
˘˘* 3
)
˘˘3 4
{
˙˙ 
Face
˚˚ 
[
˚˚ 
]
˚˚ 
faces
˚˚ 
=
˚˚ 
GetFaces
˚˚ '
(
˚˚' (
pb
˚˚( *
,
˚˚* +
pb
˚˚, .
.
˚˚. /%
selectedIndexesInternal
˚˚/ F
)
˚˚F G
;
˚˚G H
List
˝˝ 
<
˝˝ 
int
˝˝ 
>
˝˝ 
elementGroups
˝˝ '
=
˝˝( )
new
˝˝* -
List
˝˝. 2
<
˝˝2 3
int
˝˝3 6
>
˝˝6 7
(
˝˝7 8
)
˝˝8 9
;
˝˝9 :
List
˛˛ 
<
˛˛ 
int
˛˛ 
>
˛˛ 
textureGroups
˛˛ '
=
˛˛( )
new
˛˛* -
List
˛˛. 2
<
˛˛2 3
int
˛˛3 6
>
˛˛6 7
(
˛˛7 8
)
˛˛8 9
;
˛˛9 :
foreach
ÄÄ 
(
ÄÄ 
Face
ÄÄ 
f
ÄÄ 
in
ÄÄ  "
faces
ÄÄ# (
)
ÄÄ( )
{
ÅÅ 
if
ÇÇ 
(
ÇÇ 
f
ÇÇ 
.
ÇÇ 
manualUV
ÇÇ "
)
ÇÇ" #
elementGroups
ÉÉ %
.
ÉÉ% &
Add
ÉÉ& )
(
ÉÉ) *
f
ÉÉ* +
.
ÉÉ+ ,
elementGroup
ÉÉ, 8
)
ÉÉ8 9
;
ÉÉ9 :
else
ÑÑ 
textureGroups
ÖÖ %
.
ÖÖ% &
Add
ÖÖ& )
(
ÖÖ) *
f
ÖÖ* +
.
ÖÖ+ ,
textureGroup
ÖÖ, 8
)
ÖÖ8 9
;
ÖÖ9 :
}
ÜÜ 
IEnumerable
àà 
<
àà 
Face
àà  
>
àà  !
matches
àà" )
=
àà* +
System
àà, 2
.
àà2 3
Array
àà3 8
.
àà8 9
FindAll
àà9 @
(
àà@ A
pb
ààA C
.
ààC D
facesInternal
ààD Q
,
ààQ R
x
ààS T
=>
ààU W
(
ââ 
x
ââ 
.
ââ 
manualUV
ââ #
&&
ââ$ &
x
ââ' (
.
ââ( )
elementGroup
ââ) 5
>
ââ6 7
-
ââ8 9
$num
ââ9 :
&&
ââ; =
elementGroups
ââ> K
.
ââK L
Contains
ââL T
(
ââT U
x
ââU V
.
ââV W
elementGroup
ââW c
)
ââc d
)
ââd e
||
ââf h
(
ää 
!
ää 
x
ää 
.
ää 
manualUV
ää $
&&
ää% '
x
ää( )
.
ää) *
textureGroup
ää* 6
>
ää7 8
$num
ää9 :
&&
ää; =
textureGroups
ää> K
.
ääK L
Contains
ääL T
(
ääT U
x
ääU V
.
ääV W
textureGroup
ääW c
)
ääc d
)
ääd e
)
ääe f
;
ääf g
pb
åå 
.
åå 
SetSelectedFaces
åå #
(
åå# $
faces
åå$ )
.
åå) *
Union
åå* /
(
åå/ 0
matches
åå0 7
)
åå7 8
.
åå8 9
ToArray
åå9 @
(
åå@ A
)
ååA B
)
ååB C
;
ååC D
ProBuilderEditor
çç  
.
çç  !
Refresh
çç! (
(
çç( )
)
çç) *
;
çç* +
}
éé 
}
èè 	
private
ïï 
Face
ïï 
[
ïï 
]
ïï !
SelectTextureGroups
ïï *
(
ïï* +
ProBuilderMesh
ïï+ 9
pb
ïï: <
,
ïï< =
Face
ïï> B
[
ïïB C
]
ïïC D
	selection
ïïE N
)
ïïN O
{
ññ 	
List
óó 
<
óó 
int
óó 
>
óó 
	texGroups
óó 
=
óó  !
	selection
óó" +
.
óó+ ,
Select
óó, 2
(
óó2 3
x
óó3 4
=>
óó5 7
x
óó8 9
.
óó9 :
textureGroup
óó: F
)
óóF G
.
óóG H
Where
óóH M
(
óóM N
x
óóN O
=>
óóP R
x
óóS T
>
óóU V
$num
óóW X
)
óóX Y
.
óóY Z
Distinct
óóZ b
(
óób c
)
óóc d
.
óód e
ToList
óóe k
(
óók l
)
óól m
;
óóm n
Face
òò 
[
òò 
]
òò 
sel
òò 
=
òò 
System
òò 
.
òò  
Array
òò  %
.
òò% &
FindAll
òò& -
(
òò- .
pb
òò. 0
.
òò0 1
facesInternal
òò1 >
,
òò> ?
x
òò@ A
=>
òòB D
!
òòE F
x
òòF G
.
òòG H
manualUV
òòH P
&&
òòQ S
	texGroups
òòT ]
.
òò] ^
Contains
òò^ f
(
òòf g
x
òòg h
.
òòh i
textureGroup
òòi u
)
òòu v
)
òòv w
;
òòw x
return
öö 
	selection
öö 
.
öö 
Union
öö "
(
öö" #
sel
öö# &
)
öö& '
.
öö' (
ToArray
öö( /
(
öö/ 0
)
öö0 1
;
öö1 2
}
õõ 	
private
°° 
List
°° 
<
°° 
Face
°° 
[
°° 
]
°° 
>
°° (
GetIncompleteTextureGroups
°° 7
(
°°7 8
ProBuilderMesh
°°8 F
pb
°°G I
,
°°I J
Face
°°K O
[
°°O P
]
°°P Q
	selection
°°R [
)
°°[ \
{
¢¢ 	
List
§§ 
<
§§ 
int
§§ 
>
§§ 
groups
§§ 
=
§§ 
	selection
§§ (
.
§§( )
Select
§§) /
(
§§/ 0
x
§§0 1
=>
§§2 4
x
§§5 6
.
§§6 7
textureGroup
§§7 C
)
§§C D
.
§§D E
Where
§§E J
(
§§J K
x
§§K L
=>
§§M O
x
§§P Q
>
§§R S
$num
§§T U
)
§§U V
.
§§V W
Distinct
§§W _
(
§§_ `
)
§§` a
.
§§a b
ToList
§§b h
(
§§h i
)
§§i j
;
§§j k
List
•• 
<
•• 
Face
•• 
[
•• 
]
•• 
>
•• 
incompleteGroups
•• )
=
••* +
new
••, /
List
••0 4
<
••4 5
Face
••5 9
[
••9 :
]
••: ;
>
••; <
(
••< =
)
••= >
;
••> ?
for
®® 
(
®® 
int
®® 
i
®® 
=
®® 
$num
®® 
;
®® 
i
®® 
<
®® 
groups
®®  &
.
®®& '
Count
®®' ,
;
®®, -
i
®®. /
++
®®/ 1
)
®®1 2
{
©© 
Face
™™ 
[
™™ 
]
™™ 
whole_group
™™ "
=
™™# $
System
™™% +
.
™™+ ,
Array
™™, 1
.
™™1 2
FindAll
™™2 9
(
™™9 :
pb
™™: <
.
™™< =
facesInternal
™™= J
,
™™J K
x
™™L M
=>
™™N P
!
™™Q R
x
™™R S
.
™™S T
manualUV
™™T \
&&
™™] _
groups
™™` f
[
™™f g
i
™™g h
]
™™h i
==
™™j l
x
™™m n
.
™™n o
textureGroup
™™o {
)
™™{ |
;
™™| }
int
´´ 
inSelection
´´ 
=
´´  !
System
´´" (
.
´´( )
Array
´´) .
.
´´. /
FindAll
´´/ 6
(
´´6 7
	selection
´´7 @
,
´´@ A
x
´´B C
=>
´´D F
x
´´G H
.
´´H I
textureGroup
´´I U
==
´´V X
groups
´´Y _
[
´´_ `
i
´´` a
]
´´a b
)
´´b c
.
´´c d
Length
´´d j
;
´´j k
if
≠≠ 
(
≠≠ 
inSelection
≠≠ 
!=
≠≠  "
whole_group
≠≠# .
.
≠≠. /
Length
≠≠/ 5
)
≠≠5 6
incompleteGroups
ÆÆ $
.
ÆÆ$ %
Add
ÆÆ% (
(
ÆÆ( )
whole_group
ÆÆ) 4
)
ÆÆ4 5
;
ÆÆ5 6
}
ØØ 
return
±± 
incompleteGroups
±± #
;
±±# $
}
≤≤ 	
private
∑∑ 
void
∑∑ 
SelectUVFace
∑∑ !
(
∑∑! "
)
∑∑" #
{
∏∏ 	
if
ππ 
(
ππ 
	selection
ππ 
==
ππ 
null
ππ !
||
ππ" $
	selection
ππ% .
.
ππ. /
Length
ππ/ 5
<
ππ6 7
$num
ππ8 9
)
ππ9 :
return
∫∫ 
;
∫∫ 
foreach
ºº 
(
ºº 
ProBuilderMesh
ºº #
pb
ºº$ &
in
ºº' )
	selection
ºº* 3
)
ºº3 4
{
ΩΩ 
Face
ææ 
[
ææ 
]
ææ 
faces
ææ 
=
ææ 
GetFaces
ææ '
(
ææ' (
pb
ææ( *
,
ææ* +
pb
ææ, .
.
ææ. /%
selectedIndexesInternal
ææ/ F
)
ææF G
;
ææG H
pb
øø 
.
øø 
SetSelectedFaces
øø #
(
øø# $
faces
øø$ )
)
øø) *
;
øø* +
ProBuilderEditor
¿¿  
.
¿¿  !
Refresh
¿¿! (
(
¿¿( )
)
¿¿) *
;
¿¿* +
}
¡¡ 
}
¬¬ 	
void
   "
RefreshElementGroups
   !
(
  ! "
ProBuilderMesh
  " 0
pb
  1 3
)
  3 4
{
ÀÀ 	
foreach
ÃÃ 
(
ÃÃ 
Face
ÃÃ 
f
ÃÃ 
in
ÃÃ 
pb
ÃÃ !
.
ÃÃ! "
facesInternal
ÃÃ" /
)
ÃÃ/ 0
f
ÕÕ 
.
ÕÕ 
elementGroup
ÕÕ 
=
ÕÕ  
-
ÕÕ! "
$num
ÕÕ" #
;
ÕÕ# $
SharedVertex
œœ 
[
œœ 
]
œœ 
	sharedUVs
œœ $
=
œœ% &
pb
œœ' )
.
œœ) *
sharedTextures
œœ* 8
;
œœ8 9
int
—— 
eg
—— 
=
—— 
$num
—— 
;
—— 
foreach
““ 
(
““ 
SharedVertex
““ !
sharedVertex
““" .
in
““/ 1
	sharedUVs
““2 ;
)
““; <
{
”” 
if
‘‘ 
(
‘‘ 
sharedVertex
‘‘  
.
‘‘  !
arrayInternal
‘‘! .
.
‘‘. /
Length
‘‘/ 5
<
‘‘6 7
$num
‘‘8 9
)
‘‘9 :
continue
’’ 
;
’’ 
Face
◊◊ 
[
◊◊ 
]
◊◊ 
faces
◊◊ 
=
◊◊ 
GetFaces
◊◊ '
(
◊◊' (
pb
◊◊( *
,
◊◊* +
sharedVertex
◊◊, 8
)
◊◊8 9
;
◊◊9 :
int
ŸŸ 
cur
ŸŸ 
=
ŸŸ 
pb
ŸŸ 
.
ŸŸ  
UnusedElementGroup
ŸŸ /
(
ŸŸ/ 0
eg
ŸŸ0 2
++
ŸŸ2 4
)
ŸŸ4 5
;
ŸŸ5 6
foreach
€€ 
(
€€ 
Face
€€ 
f
€€ 
in
€€  "
faces
€€# (
)
€€( )
{
‹‹ 
if
›› 
(
›› 
f
›› 
.
›› 
elementGroup
›› &
>
››' (
-
››) *
$num
››* +
)
››+ ,
{
ﬁﬁ 
int
ﬂﬂ 
g
ﬂﬂ 
=
ﬂﬂ 
f
ﬂﬂ  !
.
ﬂﬂ! "
elementGroup
ﬂﬂ" .
;
ﬂﬂ. /
foreach
·· 
(
··  !
Face
··! %
fin
··& )
in
··* ,
pb
··- /
.
··/ 0
facesInternal
··0 =
)
··= >
if
‚‚ 
(
‚‚  
fin
‚‚  #
.
‚‚# $
elementGroup
‚‚$ 0
==
‚‚1 3
g
‚‚4 5
)
‚‚5 6
fin
„„  #
.
„„# $
elementGroup
„„$ 0
=
„„1 2
cur
„„3 6
;
„„6 7
}
‰‰ 
f
ÊÊ 
.
ÊÊ 
elementGroup
ÊÊ "
=
ÊÊ# $
cur
ÊÊ% (
;
ÊÊ( )
}
ÁÁ 
}
ËË 
}
ÈÈ 	
Face
ÓÓ 
[
ÓÓ 
]
ÓÓ 
GetFaces
ÓÓ 
(
ÓÓ 
ProBuilderMesh
ÓÓ &
pb
ÓÓ' )
,
ÓÓ) *
IEnumerable
ÓÓ+ 6
<
ÓÓ6 7
int
ÓÓ7 :
>
ÓÓ: ;
indexes
ÓÓ< C
)
ÓÓC D
{
ÔÔ 	
List
 
<
 
Face
 
>
 
faces
 
=
 
new
 "
List
# '
<
' (
Face
( ,
>
, -
(
- .
)
. /
;
/ 0
foreach
ÚÚ 
(
ÚÚ 
Face
ÚÚ 
f
ÚÚ 
in
ÚÚ 
pb
ÚÚ !
.
ÚÚ! "
facesInternal
ÚÚ" /
)
ÚÚ/ 0
{
ÛÛ 
foreach
ÙÙ 
(
ÙÙ 
int
ÙÙ 
i
ÙÙ 
in
ÙÙ !
f
ÙÙ" #
.
ÙÙ# $%
distinctIndexesInternal
ÙÙ$ ;
)
ÙÙ; <
{
ıı 
if
ˆˆ 
(
ˆˆ 
indexes
ˆˆ 
.
ˆˆ  
Contains
ˆˆ  (
(
ˆˆ( )
i
ˆˆ) *
)
ˆˆ* +
)
ˆˆ+ ,
{
˜˜ 
faces
¯¯ 
.
¯¯ 
Add
¯¯ !
(
¯¯! "
f
¯¯" #
)
¯¯# $
;
¯¯$ %
break
˘˘ 
;
˘˘ 
}
˙˙ 
}
˚˚ 
}
¸¸ 
return
˛˛ 
faces
˛˛ 
.
˛˛ 
Distinct
˛˛ !
(
˛˛! "
)
˛˛" #
.
˛˛# $
ToArray
˛˛$ +
(
˛˛+ ,
)
˛˛, -
;
˛˛- .
}
ˇˇ 	
void
ÖÖ '
FlagSelectedFacesAsManual
ÖÖ &
(
ÖÖ& '
ProBuilderMesh
ÖÖ' 5
mesh
ÖÖ6 :
)
ÖÖ: ;
{
ÜÜ 	
foreach
àà 
(
àà 
Face
àà 
f
àà 
in
àà 
GetFaces
àà '
(
àà' (
mesh
àà( ,
,
àà, -
mesh
àà. 2
.
àà2 3%
selectedIndexesInternal
àà3 J
)
ààJ K
)
ààK L
{
ââ 
f
ää 
.
ää 
textureGroup
ää 
=
ää  
-
ää! "
$num
ää" #
;
ää# $
f
ãã 
.
ãã 
manualUV
ãã 
=
ãã 
true
ãã !
;
ãã! "
}
åå 
}
çç 	
void
ìì 
CopySelectionUVs
ìì 
(
ìì 
out
ìì !
Vector2
ìì" )
[
ìì) *
]
ìì* +
[
ìì+ ,
]
ìì, -
uvCopy
ìì. 4
)
ìì4 5
{
îî 	
uvCopy
ïï 
=
ïï 
new
ïï 
Vector2
ïï  
[
ïï  !
	selection
ïï! *
.
ïï* +
Length
ïï+ 1
]
ïï1 2
[
ïï2 3
]
ïï3 4
;
ïï4 5
for
ññ 
(
ññ 
int
ññ 
i
ññ 
=
ññ 
$num
ññ 
;
ññ 
i
ññ 
<
ññ 
	selection
ññ  )
.
ññ) *
Length
ññ* 0
;
ññ0 1
i
ññ2 3
++
ññ3 5
)
ññ5 6
{
óó 
ProBuilderMesh
òò 
pb
òò !
=
òò" #
	selection
òò$ -
[
òò- .
i
òò. /
]
òò/ 0
;
òò0 1
uvCopy
ôô 
[
ôô 
i
ôô 
]
ôô 
=
ôô 
new
ôô 
Vector2
ôô  '
[
ôô' (
pb
ôô( *
.
ôô* +
vertexCount
ôô+ 6
]
ôô6 7
;
ôô7 8
System
öö 
.
öö 
Array
öö 
.
öö 
Copy
öö !
(
öö! "
	UVEditing
öö" +
.
öö+ ,
GetUVs
öö, 2
(
öö2 3
pb
öö3 5
,
öö5 6
channel
öö7 >
)
öö> ?
,
öö? @
uvCopy
ööA G
[
ööG H
i
ööH I
]
ööI J
,
ööJ K
pb
ööL N
.
ööN O
vertexCount
ööO Z
)
ööZ [
;
öö[ \
}
õõ 
}
úú 	
internal
§§ 
void
§§  
Menu_PlanarProject
§§ (
(
§§( )
)
§§) *
{
•• 	
UndoUtility
¶¶ 
.
¶¶ 
RecordSelection
¶¶ '
(
¶¶' (
	selection
¶¶( 1
,
¶¶1 2
$str
¶¶3 I
)
¶¶I J
;
¶¶J K
int
ßß 
	projected
ßß 
=
ßß 
$num
ßß 
;
ßß 
for
©© 
(
©© 
int
©© 
i
©© 
=
©© 
$num
©© 
;
©© 
i
©© 
<
©© 
	selection
©©  )
.
©©) *
Length
©©* 0
;
©©0 1
i
©©2 3
++
©©3 5
)
©©5 6
{
™™ 
if
´´ 
(
´´ 
	selection
´´ 
[
´´ 
i
´´ 
]
´´  
.
´´  !#
selectedFacesInternal
´´! 6
.
´´6 7
Length
´´7 =
>
´´> ?
$num
´´@ A
)
´´A B
{
¨¨ 
	selection
≠≠ 
[
≠≠ 
i
≠≠ 
]
≠≠  
.
≠≠  !
ToMesh
≠≠! '
(
≠≠' (
)
≠≠( )
;
≠≠) *
	UVEditing
ÆÆ 
.
ÆÆ 
SplitUVs
ÆÆ &
(
ÆÆ& '
	selection
ÆÆ' 0
[
ÆÆ0 1
i
ÆÆ1 2
]
ÆÆ2 3
,
ÆÆ3 4
	selection
ÆÆ5 >
[
ÆÆ> ?
i
ÆÆ? @
]
ÆÆ@ A
.
ÆÆA B%
selectedIndexesInternal
ÆÆB Y
)
ÆÆY Z
;
ÆÆZ [
	UVEditing
ØØ 
.
ØØ 
ProjectFacesAuto
ØØ .
(
ØØ. /
	selection
ØØ/ 8
[
ØØ8 9
i
ØØ9 :
]
ØØ: ;
,
ØØ; <
	selection
ØØ= F
[
ØØF G
i
ØØG H
]
ØØH I
.
ØØI J#
selectedFacesInternal
ØØJ _
,
ØØ_ `
channel
ØØa h
)
ØØh i
;
ØØi j
foreach
±± 
(
±± 
Face
±± !
f
±±" #
in
±±$ &
	selection
±±' 0
[
±±0 1
i
±±1 2
]
±±2 3
.
±±3 4#
selectedFacesInternal
±±4 I
)
±±I J
f
≤≤ 
.
≤≤ 
manualUV
≤≤ "
=
≤≤# $
true
≤≤% )
;
≤≤) *"
RefreshElementGroups
¥¥ (
(
¥¥( )
	selection
¥¥) 2
[
¥¥2 3
i
¥¥3 4
]
¥¥4 5
)
¥¥5 6
;
¥¥6 7
	projected
∂∂ 
++
∂∂ 
;
∂∂  
}
∑∑ 
}
∏∏ )
SetSelectedUVsWithSceneView
∫∫ '
(
∫∫' (
)
∫∫( )
;
∫∫) *
if
ºº 
(
ºº 
	projected
ºº 
>
ºº 
$num
ºº 
)
ºº 
{
ΩΩ 
CenterUVsAtPoint
ææ  
(
ææ  !"
UVSelectionMinimalUV
ææ! 5
(
ææ5 6
)
ææ6 7
,
ææ7 8
	LowerLeft
ææ9 B
)
ææB C
;
ææC D
ResetUserPivot
øø 
(
øø 
)
øø  
;
øø  !
}
¿¿ 
foreach
¬¬ 
(
¬¬ 
ProBuilderMesh
¬¬ #
pb
¬¬$ &
in
¬¬' )
	selection
¬¬* 3
)
¬¬3 4
{
√√ 
pb
ƒƒ 
.
ƒƒ 
Refresh
ƒƒ 
(
ƒƒ 
)
ƒƒ 
;
ƒƒ 
pb
≈≈ 
.
≈≈ 
Optimize
≈≈ 
(
≈≈ 
)
≈≈ 
;
≈≈ 
}
∆∆ 
EditorUtility
»» 
.
»» 
ShowNotification
»» *
(
»»* +
this
»»+ /
,
»»/ 0
	projected
»»1 :
>
»»; <
$num
»»= >
?
»»? @
$str
»»A Q
:
»»R S
$str
»»T f
)
»»f g
;
»»g h"
RefreshUVCoordinates
ÀÀ  
(
ÀÀ  !
)
ÀÀ! "
;
ÀÀ" #
needsRepaint
ÃÃ 
=
ÃÃ 
true
ÃÃ 
;
ÃÃ  
}
ÕÕ 	
public
““ 
void
““ 
Menu_BoxProject
““ #
(
““# $
)
““$ %
{
”” 	
int
‘‘ 
p
‘‘ 
=
‘‘ 
$num
‘‘ 
;
‘‘ 
UndoUtility
’’ 
.
’’ (
RegisterCompleteObjectUndo
’’ 2
(
’’2 3
	selection
’’3 <
,
’’< =
$str
’’> Q
)
’’Q R
;
’’R S
for
◊◊ 
(
◊◊ 
int
◊◊ 
i
◊◊ 
=
◊◊ 
$num
◊◊ 
;
◊◊ 
i
◊◊ 
<
◊◊ 
	selection
◊◊  )
.
◊◊) *
Length
◊◊* 0
;
◊◊0 1
i
◊◊2 3
++
◊◊3 5
)
◊◊5 6
{
ÿÿ 
	selection
ŸŸ 
[
ŸŸ 
i
ŸŸ 
]
ŸŸ 
.
ŸŸ 
ToMesh
ŸŸ #
(
ŸŸ# $
)
ŸŸ$ %
;
ŸŸ% &
if
€€ 
(
€€ 
	selection
€€ 
[
€€ 
i
€€ 
]
€€  
.
€€  !#
selectedFacesInternal
€€! 6
.
€€6 7
Length
€€7 =
>
€€> ?
$num
€€@ A
)
€€A B
{
‹‹ 
	UVEditing
›› 
.
›› 
ProjectFacesBox
›› -
(
››- .
	selection
››. 7
[
››7 8
i
››8 9
]
››9 :
,
››: ;
	selection
››< E
[
››E F
i
››F G
]
››G H
.
››H I#
selectedFacesInternal
››I ^
,
››^ _
	LowerLeft
››` i
,
››i j
channel
››k r
)
››r s
;
››s t
p
ﬁﬁ 
++
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 
}
‡‡ )
SetSelectedUVsWithSceneView
‚‚ '
(
‚‚' (
)
‚‚( )
;
‚‚) *
if
‰‰ 
(
‰‰ 
p
‰‰ 
>
‰‰ 
$num
‰‰ 
)
‰‰ 
{
ÂÂ 
ResetUserPivot
ÊÊ 
(
ÊÊ 
)
ÊÊ  
;
ÊÊ  !
}
ÁÁ 
foreach
ÈÈ 
(
ÈÈ 
ProBuilderMesh
ÈÈ #
pb
ÈÈ$ &
in
ÈÈ' )
	selection
ÈÈ* 3
)
ÈÈ3 4
{
ÍÍ 
pb
ÎÎ 
.
ÎÎ 
Refresh
ÎÎ 
(
ÎÎ 
)
ÎÎ 
;
ÎÎ 
pb
ÏÏ 
.
ÏÏ 
Optimize
ÏÏ 
(
ÏÏ 
)
ÏÏ 
;
ÏÏ 
}
ÌÌ 
EditorUtility
ÔÔ 
.
ÔÔ 
ShowNotification
ÔÔ *
(
ÔÔ* +
this
ÔÔ+ /
,
ÔÔ/ 0
$str
ÔÔ1 B
)
ÔÔB C
;
ÔÔC D"
RefreshUVCoordinates
ÚÚ  
(
ÚÚ  !
)
ÚÚ! "
;
ÚÚ" #
needsRepaint
ÛÛ 
=
ÛÛ 
true
ÛÛ 
;
ÛÛ  
}
ÙÙ 	
public
˘˘ 
void
˘˘ #
Menu_SphericalProject
˘˘ )
(
˘˘) *
)
˘˘* +
{
˙˙ 	
int
˚˚ 
p
˚˚ 
=
˚˚ 
$num
˚˚ 
;
˚˚ 
UndoUtility
¸¸ 
.
¸¸ (
RegisterCompleteObjectUndo
¸¸ 2
(
¸¸2 3
	selection
¸¸3 <
,
¸¸< =
$str
¸¸> U
)
¸¸U V
;
¸¸V W
for
˛˛ 
(
˛˛ 
int
˛˛ 
i
˛˛ 
=
˛˛ 
$num
˛˛ 
;
˛˛ 
i
˛˛ 
<
˛˛ 
	selection
˛˛  )
.
˛˛) *
Length
˛˛* 0
;
˛˛0 1
i
˛˛2 3
++
˛˛3 5
)
˛˛5 6
{
ˇˇ 
	selection
ÄÄ 
[
ÄÄ 
i
ÄÄ 
]
ÄÄ 
.
ÄÄ 
ToMesh
ÄÄ #
(
ÄÄ# $
)
ÄÄ$ %
;
ÄÄ% &
if
ÇÇ 
(
ÇÇ 
	selection
ÇÇ 
[
ÇÇ 
i
ÇÇ 
]
ÇÇ  
.
ÇÇ  !!
selectedVertexCount
ÇÇ! 4
>
ÇÇ5 6
$num
ÇÇ7 8
)
ÇÇ8 9
{
ÉÉ 
	UVEditing
ÑÑ 
.
ÑÑ  
ProjectFacesSphere
ÑÑ 0
(
ÑÑ0 1
	selection
ÑÑ1 :
[
ÑÑ: ;
i
ÑÑ; <
]
ÑÑ< =
,
ÑÑ= >
	selection
ÑÑ? H
[
ÑÑH I
i
ÑÑI J
]
ÑÑJ K
.
ÑÑK L%
selectedIndexesInternal
ÑÑL c
,
ÑÑc d
channel
ÑÑe l
)
ÑÑl m
;
ÑÑm n
p
ÖÖ 
++
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}
áá )
SetSelectedUVsWithSceneView
ââ '
(
ââ' (
)
ââ( )
;
ââ) *
if
ãã 
(
ãã 
p
ãã 
>
ãã 
$num
ãã 
)
ãã 
{
åå 
CenterUVsAtPoint
çç  
(
çç  !
UVSelectionBounds
çç! 2
(
çç2 3
)
çç3 4
.
çç4 5
center
çç5 ;
,
çç; <
handlePosition
çç= K
)
ççK L
;
ççL M
ResetUserPivot
éé 
(
éé 
)
éé  
;
éé  !
}
èè 
foreach
ëë 
(
ëë 
ProBuilderMesh
ëë #
pb
ëë$ &
in
ëë' )
	selection
ëë* 3
)
ëë3 4
{
íí 
pb
ìì 
.
ìì 
Refresh
ìì 
(
ìì 
)
ìì 
;
ìì 
pb
îî 
.
îî 
Optimize
îî 
(
îî 
)
îî 
;
îî 
}
ïï 
EditorUtility
óó 
.
óó 
ShowNotification
óó *
(
óó* +
this
óó+ /
,
óó/ 0
$str
óó1 H
)
óóH I
;
óóI J"
RefreshUVCoordinates
öö  
(
öö  !
)
öö! "
;
öö" #
needsRepaint
õõ 
=
õõ 
true
õõ 
;
õõ  
}
úú 	
public
¢¢ 
void
¢¢ 
Menu_SetAutoUV
¢¢ "
(
¢¢" #
)
¢¢# $
{
££ 	
SetIsManual
§§ 
(
§§ 
false
§§ 
)
§§ 
;
§§ 
}
•• 	
public
™™ 
void
™™ 
Menu_SetManualUV
™™ $
(
™™$ %
)
™™% &
{
´´ 	
SetIsManual
¨¨ 
(
¨¨ 
true
¨¨ 
)
¨¨ 
;
¨¨ 
}
≠≠ 	
public
ØØ 
void
ØØ 
SetIsManual
ØØ 
(
ØØ  
bool
ØØ  $
isManual
ØØ% -
)
ØØ- .
{
∞∞ 	
UndoUtility
±± 
.
±± (
RegisterCompleteObjectUndo
±± 2
(
±±2 3
	selection
±±3 <
,
±±< =
isManual
±±> F
?
±±G H
$str
±±I [
:
±±\ ]
$str
±±^ n
)
±±n o
;
±±o p
foreach
≥≥ 
(
≥≥ 
ProBuilderMesh
≥≥ #
pb
≥≥$ &
in
≥≥' )
	selection
≥≥* 3
)
≥≥3 4
{
¥¥ 
pb
µµ 
.
µµ 
ToMesh
µµ 
(
µµ 
)
µµ 
;
µµ 
	UVEditing
∂∂ 
.
∂∂ 
	SetAutoUV
∂∂ #
(
∂∂# $
pb
∂∂$ &
,
∂∂& '
pb
∂∂( *
.
∂∂* +#
selectedFacesInternal
∂∂+ @
,
∂∂@ A
!
∂∂B C
isManual
∂∂C K
)
∂∂K L
;
∂∂L M
pb
∑∑ 
.
∑∑ 
Refresh
∑∑ 
(
∑∑ 
)
∑∑ 
;
∑∑ 
pb
∏∏ 
.
∏∏ 
Optimize
∏∏ 
(
∏∏ 
)
∏∏ 
;
∏∏ 
}
ππ )
SetSelectedUVsWithSceneView
ªª '
(
ªª' (
)
ªª( )
;
ªª) *"
RefreshUVCoordinates
ºº  
(
ºº  !
)
ºº! "
;
ºº" #
EditorUtility
ææ 
.
ææ 
ShowNotification
ææ *
(
ææ* +
this
ææ+ /
,
ææ/ 0
$str
ææ1 7
+
ææ8 9
MeshSelection
ææ: G
.
ææG H
selectedFaceCount
ææH Y
+
ææZ [
$str
ææ\ e
+
ææf g
(
ææh i
isManual
ææi q
?
æær s
$str
ææt |
:
ææ} ~
$strææ Ö
)ææÖ Ü
)ææÜ á
;ææá à
}
øø 	
public
¡¡ 
void
¡¡ !
Menu_SelectUVIsland
¡¡ '
(
¡¡' (
)
¡¡( )
{
¬¬ 	
UndoUtility
√√ 
.
√√ 
RecordSelection
√√ '
(
√√' (
	selection
√√( 1
,
√√1 2
$str
√√3 B
)
√√B C
;
√√C D
SelectUVShell
≈≈ 
(
≈≈ 
)
≈≈ 
;
≈≈ 
EditorUtility
∆∆ 
.
∆∆ 
ShowNotification
∆∆ *
(
∆∆* +
this
∆∆+ /
,
∆∆/ 0
$str
∆∆1 C
)
∆∆C D
;
∆∆D E
}
«« 	
public
…… 
void
…… 
Menu_SelectUVFace
…… %
(
……% &
)
……& '
{
   	
UndoUtility
ÀÀ 
.
ÀÀ 
RecordSelection
ÀÀ '
(
ÀÀ' (
	selection
ÀÀ( 1
,
ÀÀ1 2
$str
ÀÀ3 @
)
ÀÀ@ A
;
ÀÀA B
SelectUVFace
ÕÕ 
(
ÕÕ 
)
ÕÕ 
;
ÕÕ 
EditorUtility
ŒŒ 
.
ŒŒ 
ShowNotification
ŒŒ *
(
ŒŒ* +
this
ŒŒ+ /
,
ŒŒ/ 0
$str
ŒŒ1 A
)
ŒŒA B
;
ŒŒB C
}
œœ 	
public
—— 
void
—— 
Menu_CollapseUVs
—— $
(
——$ %
)
——% &
{
““ 	
if
”” 
(
”” 
channel
”” 
==
”” 
$num
”” 
)
”” 
{
‘‘ 
EditorUtility
’’ 
.
’’ 
ShowNotification
’’ .
(
’’. /
this
’’/ 3
,
’’3 4
$str
’’5 L
)
’’L M
;
’’M N
return
÷÷ 
;
÷÷ 
}
◊◊ 
UndoUtility
ŸŸ 
.
ŸŸ 
RecordSelection
ŸŸ '
(
ŸŸ' (
	selection
ŸŸ( 1
,
ŸŸ1 2
$str
ŸŸ3 A
)
ŸŸA B
;
ŸŸB C
for
€€ 
(
€€ 
int
€€ 
i
€€ 
=
€€ 
$num
€€ 
;
€€ 
i
€€ 
<
€€ 
	selection
€€  )
.
€€) *
Length
€€* 0
;
€€0 1
i
€€2 3
++
€€3 5
)
€€5 6
{
‹‹ 
	selection
›› 
[
›› 
i
›› 
]
›› 
.
›› 
ToMesh
›› #
(
››# $
)
››$ %
;
››% &
	selection
ﬂﬂ 
[
ﬂﬂ 
i
ﬂﬂ 
]
ﬂﬂ 
.
ﬂﬂ 
CollapseUVs
ﬂﬂ (
(
ﬂﬂ( )(
m_DistinctIndexesSelection
ﬂﬂ) C
[
ﬂﬂC D
i
ﬂﬂD E
]
ﬂﬂE F
)
ﬂﬂF G
;
ﬂﬂG H
	selection
·· 
[
·· 
i
·· 
]
·· 
.
·· 
Refresh
·· $
(
··$ %
)
··% &
;
··& '
	selection
‚‚ 
[
‚‚ 
i
‚‚ 
]
‚‚ 
.
‚‚ 
Optimize
‚‚ %
(
‚‚% &
)
‚‚& '
;
‚‚' (
}
„„ *
RefreshSelectedUVCoordinates
ÂÂ (
(
ÂÂ( )
)
ÂÂ) *
;
ÂÂ* +
EditorUtility
ÁÁ 
.
ÁÁ 
ShowNotification
ÁÁ *
(
ÁÁ* +
this
ÁÁ+ /
,
ÁÁ/ 0
$str
ÁÁ1 ?
)
ÁÁ? @
;
ÁÁ@ A
}
ËË 	
public
ÍÍ 
ActionResult
ÍÍ 
Menu_SewUVs
ÍÍ '
(
ÍÍ' (
ProBuilderMesh
ÍÍ( 6
[
ÍÍ6 7
]
ÍÍ7 8
	selection
ÍÍ9 B
)
ÍÍB C
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ 
channel
ÏÏ 
==
ÏÏ 
$num
ÏÏ 
)
ÏÏ 
{
ÌÌ 
EditorUtility
ÓÓ 
.
ÓÓ 
ShowNotification
ÓÓ .
(
ÓÓ. /
this
ÓÓ/ 3
,
ÓÓ3 4
$str
ÓÓ5 L
)
ÓÓL M
;
ÓÓM N
return
ÔÔ 
new
ÔÔ 
ActionResult
ÔÔ '
(
ÔÔ' (
ActionResult
ÔÔ( 4
.
ÔÔ4 5
Status
ÔÔ5 ;
.
ÔÔ; <
Canceled
ÔÔ< D
,
ÔÔD E
$str
ÔÔF ]
)
ÔÔ] ^
;
ÔÔ^ _
}
 
float
ÚÚ 
weldDistance
ÚÚ 
=
ÚÚ  
m_WeldDistance
ÚÚ! /
;
ÚÚ/ 0
UndoUtility
ÙÙ 
.
ÙÙ 
RecordSelection
ÙÙ '
(
ÙÙ' (
	selection
ÙÙ( 1
,
ÙÙ1 2
$str
ÙÙ3 A
)
ÙÙA B
;
ÙÙB C
for
ıı 
(
ıı 
int
ıı 
i
ıı 
=
ıı 
$num
ıı 
;
ıı 
i
ıı 
<
ıı 
	selection
ıı  )
.
ıı) *
Length
ıı* 0
;
ıı0 1
i
ıı2 3
++
ıı3 5
)
ıı5 6
{
ˆˆ 
	selection
˜˜ 
[
˜˜ 
i
˜˜ 
]
˜˜ 
.
˜˜ 
ToMesh
˜˜ #
(
˜˜# $
)
˜˜$ %
;
˜˜% &
	selection
˘˘ 
[
˘˘ 
i
˘˘ 
]
˘˘ 
.
˘˘ 
SewUVs
˘˘ #
(
˘˘# $(
m_DistinctIndexesSelection
˘˘$ >
[
˘˘> ?
i
˘˘? @
]
˘˘@ A
,
˘˘A B
weldDistance
˘˘C O
)
˘˘O P
;
˘˘P Q"
RefreshElementGroups
˙˙ $
(
˙˙$ %
	selection
˙˙% .
[
˙˙. /
i
˙˙/ 0
]
˙˙0 1
)
˙˙1 2
;
˙˙2 3
	selection
¸¸ 
[
¸¸ 
i
¸¸ 
]
¸¸ 
.
¸¸ 
Refresh
¸¸ $
(
¸¸$ %
)
¸¸% &
;
¸¸& '
	selection
˝˝ 
[
˝˝ 
i
˝˝ 
]
˝˝ 
.
˝˝ 
Optimize
˝˝ %
(
˝˝% &
)
˝˝& '
;
˝˝' (
}
˛˛ *
RefreshSelectedUVCoordinates
ÄÄ (
(
ÄÄ( )
)
ÄÄ) *
;
ÄÄ* +
EditorUtility
ÇÇ 
.
ÇÇ 
ShowNotification
ÇÇ *
(
ÇÇ* +
this
ÇÇ+ /
,
ÇÇ/ 0
$str
ÇÇ1 ;
)
ÇÇ; <
;
ÇÇ< =
return
ÉÉ 
new
ÉÉ 
ActionResult
ÉÉ #
(
ÉÉ# $
ActionResult
ÉÉ$ 0
.
ÉÉ0 1
Status
ÉÉ1 7
.
ÉÉ7 8
Success
ÉÉ8 ?
,
ÉÉ? @
$str
ÉÉA X
)
ÉÉX Y
;
ÉÉY Z
}
ÑÑ 	
public
ÜÜ 
void
ÜÜ 
Menu_SplitUVs
ÜÜ !
(
ÜÜ! "
)
ÜÜ" #
{
áá 	
if
àà 
(
àà 
channel
àà 
==
àà 
$num
àà 
)
àà 
{
ââ 
EditorUtility
ää 
.
ää 
ShowNotification
ää .
(
ää. /
this
ää/ 3
,
ää3 4
$str
ää5 L
)
ääL M
;
ääM N
return
ãã 
;
ãã 
}
åå 
UndoUtility
éé 
.
éé 
RecordSelection
éé '
(
éé' (
	selection
éé( 1
,
éé1 2
$str
éé3 C
)
ééC D
;
ééD E
foreach
êê 
(
êê 
ProBuilderMesh
êê #
pb
êê$ &
in
êê' )
	selection
êê* 3
)
êê3 4
{
ëë 
pb
íí 
.
íí 
ToMesh
íí 
(
íí 
)
íí 
;
íí 
pb
îî 
.
îî 
SplitUVs
îî 
(
îî 
pb
îî 
.
îî %
selectedIndexesInternal
îî 6
)
îî6 7
;
îî7 8"
RefreshElementGroups
ïï $
(
ïï$ %
pb
ïï% '
)
ïï' (
;
ïï( )
pb
óó 
.
óó 
Refresh
óó 
(
óó 
)
óó 
;
óó 
pb
òò 
.
òò 
Optimize
òò 
(
òò 
)
òò 
;
òò 
}
ôô )
SetSelectedUVsWithSceneView
õõ '
(
õõ' (
)
õõ( )
;
õõ) **
RefreshSelectedUVCoordinates
úú (
(
úú( )
)
úú) *
;
úú* +
EditorUtility
ûû 
.
ûû 
ShowNotification
ûû *
(
ûû* +
this
ûû+ /
,
ûû/ 0
$str
ûû1 <
)
ûû< =
;
ûû= >
}
üü 	
public
§§ 
void
§§ 
Menu_FlipUVs
§§  
(
§§  !
Vector2
§§! (
	direction
§§) 2
)
§§2 3
{
•• 	
UndoUtility
¶¶ 
.
¶¶ 
RecordSelection
¶¶ '
(
¶¶' (
	selection
¶¶( 1
,
¶¶1 2
$str
¶¶3 :
+
¶¶; <
	direction
¶¶= F
)
¶¶F G
;
¶¶G H
Vector2
®® 
center
®® 
=
®® 
handlePosition
®® +
;
®®+ ,
for
™™ 
(
™™ 
int
™™ 
i
™™ 
=
™™ 
$num
™™ 
;
™™ 
i
™™ 
<
™™ 
	selection
™™  )
.
™™) *
Length
™™* 0
;
™™0 1
i
™™2 3
++
™™3 5
)
™™5 6
{
´´ 
	selection
¨¨ 
[
¨¨ 
i
¨¨ 
]
¨¨ 
.
¨¨ 
ToMesh
¨¨ #
(
¨¨# $
)
¨¨$ %
;
¨¨% &
	selection
ÆÆ 
[
ÆÆ 
i
ÆÆ 
]
ÆÆ 
.
ÆÆ 
SplitUVs
ÆÆ %
(
ÆÆ% &
	selection
ÆÆ& /
[
ÆÆ/ 0
i
ÆÆ0 1
]
ÆÆ1 2
.
ÆÆ2 3%
selectedIndexesInternal
ÆÆ3 J
)
ÆÆJ K
;
ÆÆK L
Vector2
∞∞ 
[
∞∞ 
]
∞∞ 
uv
∞∞ 
=
∞∞ 
channel
∞∞ &
==
∞∞' )
$num
∞∞* +
?
∞∞, -
	selection
∞∞. 7
[
∞∞7 8
i
∞∞8 9
]
∞∞9 :
.
∞∞: ;
texturesInternal
∞∞; K
:
∞∞L M
	selection
∞∞N W
[
∞∞W X
i
∞∞X Y
]
∞∞Y Z
.
∞∞Z [
mesh
∞∞[ _
.
∞∞_ `
uv2
∞∞` c
;
∞∞c d
foreach
≤≤ 
(
≤≤ 
int
≤≤ 
n
≤≤ 
in
≤≤ !
	selection
≤≤" +
[
≤≤+ ,
i
≤≤, -
]
≤≤- .
.
≤≤. /%
selectedIndexesInternal
≤≤/ F
.
≤≤F G
Distinct
≤≤G O
(
≤≤O P
)
≤≤P Q
)
≤≤Q R
uv
≥≥ 
[
≥≥ 
n
≥≥ 
]
≥≥ 
=
≥≥ 
Math
≥≥  
.
≥≥  !
ReflectPoint
≥≥! -
(
≥≥- .
uv
≥≥. 0
[
≥≥0 1
n
≥≥1 2
]
≥≥2 3
,
≥≥3 4
center
≥≥5 ;
,
≥≥; <
center
≥≥= C
+
≥≥D E
	direction
≥≥F O
)
≥≥O P
;
≥≥P Q
	UVEditing
µµ 
.
µµ 
ApplyUVs
µµ "
(
µµ" #
	selection
µµ# ,
[
µµ, -
i
µµ- .
]
µµ. /
,
µµ/ 0
uv
µµ1 3
,
µµ3 4
channel
µµ5 <
)
µµ< =
;
µµ= >"
RefreshElementGroups
∑∑ $
(
∑∑$ %
	selection
∑∑% .
[
∑∑. /
i
∑∑/ 0
]
∑∑0 1
)
∑∑1 2
;
∑∑2 3
	selection
ππ 
[
ππ 
i
ππ 
]
ππ 
.
ππ 
Refresh
ππ $
(
ππ$ %
)
ππ% &
;
ππ& '
	selection
∫∫ 
[
∫∫ 
i
∫∫ 
]
∫∫ 
.
∫∫ 
Optimize
∫∫ %
(
∫∫% &
)
∫∫& '
;
∫∫' (
}
ªª )
SetSelectedUVsWithSceneView
ΩΩ '
(
ΩΩ' (
)
ΩΩ( )
;
ΩΩ) **
RefreshSelectedUVCoordinates
ææ (
(
ææ( )
)
ææ) *
;
ææ* +
if
¿¿ 
(
¿¿ 
	direction
¿¿ 
==
¿¿ 
Vector2
¿¿ $
.
¿¿$ %
right
¿¿% *
)
¿¿* +
{
¡¡ 
EditorUtility
¬¬ 
.
¬¬ 
ShowNotification
¬¬ .
(
¬¬. /
this
¬¬/ 3
,
¬¬3 4
$str
¬¬5 J
)
¬¬J K
;
¬¬K L
}
√√ 
else
ƒƒ 
if
ƒƒ 
(
ƒƒ 
	direction
ƒƒ 
==
ƒƒ !
Vector2
ƒƒ" )
.
ƒƒ) *
up
ƒƒ* ,
)
ƒƒ, -
{
≈≈ 
EditorUtility
∆∆ 
.
∆∆ 
ShowNotification
∆∆ .
(
∆∆. /
this
∆∆/ 3
,
∆∆3 4
$str
∆∆5 L
)
∆∆L M
;
∆∆M N
}
«« 
else
»» 
{
…… 
EditorUtility
   
.
   
ShowNotification
   .
(
  . /
this
  / 3
,
  3 4
$str
  5 ?
)
  ? @
;
  @ A
}
ÀÀ 
}
ÃÃ 	
public
—— 
void
—— 
Menu_FitUVs
—— 
(
——  
)
——  !
{
““ 	
UndoUtility
”” 
.
”” 
RecordSelection
”” '
(
””' (
	selection
””( 1
,
””1 2
$str
””3 <
)
””< =
;
””= >
for
’’ 
(
’’ 
var
’’ 
i
’’ 
=
’’ 
$num
’’ 
;
’’ 
i
’’ 
<
’’ 
	selection
’’  )
.
’’) *
Length
’’* 0
;
’’0 1
i
’’2 3
++
’’3 5
)
’’5 6
{
÷÷ 
if
◊◊ 
(
◊◊ 
	selection
◊◊ 
[
◊◊ 
i
◊◊ 
]
◊◊  
.
◊◊  !!
selectedVertexCount
◊◊! 4
<
◊◊5 6
$num
◊◊7 8
)
◊◊8 9
continue
ÿÿ 
;
ÿÿ 
	selection
⁄⁄ 
[
⁄⁄ 
i
⁄⁄ 
]
⁄⁄ 
.
⁄⁄ 
ToMesh
⁄⁄ #
(
⁄⁄# $
)
⁄⁄$ %
;
⁄⁄% &
Vector2
‹‹ 
[
‹‹ 
]
‹‹ 
uv
‹‹ 
=
‹‹ 
	UVEditing
‹‹ (
.
‹‹( )
GetUVs
‹‹) /
(
‹‹/ 0
	selection
‹‹0 9
[
‹‹9 :
i
‹‹: ;
]
‹‹; <
,
‹‹< =
channel
‹‹> E
)
‹‹E F
;
‹‹F G
Vector2
›› 
[
›› 
]
›› 
uvs
›› 
=
›› 
UnityEngine
››  +
.
››+ ,

ProBuilder
››, 6
.
››6 7
ArrayUtility
››7 C
.
››C D
ValuesWithIndexes
››D U
(
››U V
uv
››V X
,
››X Y(
m_DistinctIndexesSelection
››Z t
[
››t u
i
››u v
]
››v w
)
››w x
;
››x y
uvs
ﬂﬂ 
=
ﬂﬂ 
	UVEditing
ﬂﬂ 
.
ﬂﬂ  
FitUVs
ﬂﬂ  &
(
ﬂﬂ& '
uvs
ﬂﬂ' *
)
ﬂﬂ* +
;
ﬂﬂ+ ,
for
·· 
(
·· 
int
·· 
n
·· 
=
·· 
$num
·· 
;
·· 
n
··  !
<
··" #
uvs
··$ '
.
··' (
Length
··( .
;
··. /
n
··0 1
++
··1 3
)
··3 4
uv
‚‚ 
[
‚‚ (
m_DistinctIndexesSelection
‚‚ 1
[
‚‚1 2
i
‚‚2 3
]
‚‚3 4
[
‚‚4 5
n
‚‚5 6
]
‚‚6 7
]
‚‚7 8
=
‚‚9 :
uvs
‚‚; >
[
‚‚> ?
n
‚‚? @
]
‚‚@ A
;
‚‚A B
	UVEditing
‰‰ 
.
‰‰ 
ApplyUVs
‰‰ "
(
‰‰" #
	selection
‰‰# ,
[
‰‰, -
i
‰‰- .
]
‰‰. /
,
‰‰/ 0
uv
‰‰1 3
,
‰‰3 4
channel
‰‰5 <
)
‰‰< =
;
‰‰= >
	selection
ÊÊ 
[
ÊÊ 
i
ÊÊ 
]
ÊÊ 
.
ÊÊ 
Refresh
ÊÊ $
(
ÊÊ$ %
)
ÊÊ% &
;
ÊÊ& '
	selection
ÁÁ 
[
ÁÁ 
i
ÁÁ 
]
ÁÁ 
.
ÁÁ 
Optimize
ÁÁ %
(
ÁÁ% &
)
ÁÁ& '
;
ÁÁ' (
}
ËË *
RefreshSelectedUVCoordinates
ÍÍ (
(
ÍÍ( )
)
ÍÍ) *
;
ÍÍ* +
EditorUtility
ÎÎ 
.
ÎÎ 
ShowNotification
ÎÎ *
(
ÎÎ* +
this
ÎÎ+ /
,
ÎÎ/ 0
$str
ÎÎ1 :
)
ÎÎ: ;
;
ÎÎ; <
}
ÏÏ 	
void
ÛÛ 
CenterUVsAtPoint
ÛÛ 
(
ÛÛ 
Vector2
ÛÛ %
anchorPosition
ÛÛ& 4
,
ÛÛ4 5
Vector2
ÛÛ7 >
point
ÛÛ? D
)
ÛÛD E
{
ÙÙ 	
Vector2
ıı 
delta
ıı 
=
ıı 
anchorPosition
ıı *
-
ıı+ ,
point
ıı- 2
;
ıı2 3
for
˜˜ 
(
˜˜ 
int
˜˜ 
i
˜˜ 
=
˜˜ 
$num
˜˜ 
;
˜˜ 
i
˜˜ 
<
˜˜ 
	selection
˜˜  )
.
˜˜) *
Length
˜˜* 0
;
˜˜0 1
i
˜˜2 3
++
˜˜3 5
)
˜˜5 6
{
¯¯ 
var
˘˘ 
pb
˘˘ 
=
˘˘ 
	selection
˘˘ "
[
˘˘" #
i
˘˘# $
]
˘˘$ %
;
˘˘% &
Vector2
˙˙ 
[
˙˙ 
]
˙˙ 
uv
˙˙ 
=
˙˙ 
	UVEditing
˙˙ (
.
˙˙( )
GetUVs
˙˙) /
(
˙˙/ 0
pb
˙˙0 2
,
˙˙2 3
channel
˙˙4 ;
)
˙˙; <
;
˙˙< =
foreach
¸¸ 
(
¸¸ 
int
¸¸ 
n
¸¸ 
in
¸¸ !
	selection
¸¸" +
[
¸¸+ ,
i
¸¸, -
]
¸¸- .
.
¸¸. /%
selectedIndexesInternal
¸¸/ F
.
¸¸F G
Distinct
¸¸G O
(
¸¸O P
)
¸¸P Q
)
¸¸Q R
{
˝˝ 
uv
˛˛ 
[
˛˛ 
n
˛˛ 
]
˛˛ 
-=
˛˛ 
delta
˛˛ "
;
˛˛" #
}
ˇˇ 
	UVEditing
ÅÅ 
.
ÅÅ 
ApplyUVs
ÅÅ "
(
ÅÅ" #
pb
ÅÅ# %
,
ÅÅ% &
uv
ÅÅ' )
,
ÅÅ) *
channel
ÅÅ+ 2
)
ÅÅ2 3
;
ÅÅ3 4
}
ÇÇ 
}
ÉÉ 	
float
àà 

curUvScale
àà 
=
àà 
$num
àà 
;
àà 
Vector2
ää 
curUvPosition
ää 
=
ää 
Vector2
ää  '
.
ää' (
zero
ää( ,
;
ää, -
	Texture2D
ãã 

screenshot
ãã 
;
ãã 
Rect
åå "
screenshotCanvasRect
åå !
=
åå" #
new
åå$ '
Rect
åå( ,
(
åå, -
$num
åå- .
,
åå. /
$num
åå0 1
,
åå1 2
$num
åå3 4
,
åå4 5
$num
åå6 7
)
åå7 8
;
åå8 9
Vector2
çç '
screenshotTexturePosition
çç )
=
çç* +
Vector2
çç, 3
.
çç3 4
zero
çç4 8
;
çç8 9
int
êê 
screenshot_size
êê 
=
êê 
$num
êê "
;
êê" #
bool
ëë !
screenshot_hideGrid
ëë  
=
ëë! "
true
ëë# '
;
ëë' (
bool
íí .
 screenshot_transparentBackground
íí -
;
íí- .
Color
ìì "
screenshot_lineColor
ìì "
=
ìì# $
Color
ìì% *
.
ìì* +
green
ìì+ 0
;
ìì0 1
Color
îî (
screenshot_backgroundColor
îî (
=
îî) *
Color
îî+ 0
.
îî0 1
black
îî1 6
;
îî6 7
string
ïï 
screenShotPath
ïï 
=
ïï 
$str
ïï  "
;
ïï" #
readonly
óó 
Color
óó 
UV_FILL_COLOR
óó $
=
óó% &
new
óó' *
Color
óó+ 0
(
óó0 1
$num
óó1 6
,
óó6 7
$num
óó8 =
,
óó= >
$num
óó? D
,
óóD E
$num
óóF H
)
óóH I
;
óóI J
void
öö  
InitiateScreenshot
öö 
(
öö  
int
öö  #
	ImageSize
öö$ -
,
öö- .
bool
öö/ 3
HideGrid
öö4 <
,
öö< =
Color
öö> C
	LineColor
ööD M
,
ööM N
bool
ööO S#
TransparentBackground
ööT i
,
ööi j
Color
öök p
BackgroundColorööq Ä
,ööÄ Å
boolööÇ Ü
RenderTextureööá î
)ööî ï
{
õõ 	
screenshot_size
úú 
=
úú 
	ImageSize
úú '
;
úú' (!
screenshot_hideGrid
ùù 
=
ùù  !
HideGrid
ùù" *
;
ùù* +"
screenshot_lineColor
ûû  
=
ûû! "
	LineColor
ûû# ,
;
ûû, -.
 screenshot_transparentBackground
üü ,
=
üü- .#
TransparentBackground
üü/ D
;
üüD E(
screenshot_backgroundColor
†† &
=
††' (#
TransparentBackground
††) >
?
††? @
UV_FILL_COLOR
††A N
:
††O P
BackgroundColor
††Q `
;
††` a
if
•• 
(
•• #
TransparentBackground
•• %
&&
••& (
(
••) *"
screenshot_lineColor
••* >
.
••> ?
ApproxC
••? F
(
••F G(
screenshot_backgroundColor
••G a
,
••a b
$num
••c h
)
••h i
)
••i j
)
••j k
{
¶¶ (
screenshot_backgroundColor
ßß *
.
ßß* +
r
ßß+ ,
+=
ßß- /(
screenshot_backgroundColor
ßß0 J
.
ßßJ K
r
ßßK L
<
ßßM N
$num
ßßO R
?
ßßS T
$num
ßßU X
:
ßßY Z
-
ßß[ \
$num
ßß\ _
;
ßß_ `(
screenshot_backgroundColor
®® *
.
®®* +
g
®®+ ,
+=
®®- /(
screenshot_backgroundColor
®®0 J
.
®®J K
g
®®K L
<
®®M N
$num
®®O R
?
®®S T
$num
®®U X
:
®®Y Z
-
®®[ \
$num
®®\ _
;
®®_ `(
screenshot_backgroundColor
©© *
.
©©* +
b
©©+ ,
+=
©©- /(
screenshot_backgroundColor
©©0 J
.
©©J K
b
©©K L
<
©©M N
$num
©©O R
?
©©S T
$num
©©U X
:
©©Y Z
-
©©[ \
$num
©©\ _
;
©©_ `
}
™™ 
screenShotPath
¨¨ 
=
¨¨ 
UnityEditor
¨¨ (
.
¨¨( )
EditorUtility
¨¨) 6
.
¨¨6 7
SaveFilePanel
¨¨7 D
(
¨¨D E
$str
¨¨E W
,
¨¨W X
Application
¨¨Y d
.
¨¨d e
dataPath
¨¨e m
,
¨¨m n
$str
¨¨o q
,
¨¨q r
$str
¨¨s x
)
¨¨x y
;
¨¨y z
if
ÆÆ 
(
ÆÆ 
string
ÆÆ 
.
ÆÆ 
IsNullOrEmpty
ÆÆ $
(
ÆÆ$ %
screenShotPath
ÆÆ% 3
)
ÆÆ3 4
)
ÆÆ4 5
return
ØØ 
;
ØØ 8
*m_ShowPreviewMaterialCacheDuringScreenshot
±± 6
=
±±7 8#
m_ShowPreviewMaterial
±±9 N
;
±±N O#
m_ShowPreviewMaterial
≤≤ !
.
≤≤! "
value
≤≤" '
=
≤≤( )
RenderTexture
≤≤* 7
;
≤≤7 8
screenshotStatus
≥≥ 
=
≥≥ 
ScreenshotStatus
≥≥ /
.
≥≥/ 0
Done
≥≥0 4
;
≥≥4 5
DoScreenshot
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥ 
}
µµ 	
void
∑∑ 
DoScreenshot
∑∑ 
(
∑∑ 
)
∑∑ 
{
∏∏ 	
switch
ππ 
(
ππ 
screenshotStatus
ππ $
)
ππ$ %
{
∫∫ 
case
ºº 
ScreenshotStatus
ºº %
.
ºº% &
Done
ºº& *
:
ºº* +

curUvScale
ΩΩ 
=
ΩΩ  
uvGraphScale
ΩΩ! -
;
ΩΩ- .
curUvPosition
ææ !
=
ææ" #
uvGraphOffset
ææ$ 1
;
ææ1 2
uvGraphScale
¿¿  
=
¿¿! "
screenshot_size
¿¿# 2
/
¿¿3 4
$num
¿¿5 8
;
¿¿8 9
uvGraphScale
√√  
/=
√√! #
EditorGUIUtility
√√$ 4
.
√√4 5
pixelsPerPoint
√√5 C
;
√√C D
uvGraphOffset
«« !
=
««" #
new
««$ '
Vector2
««( /
(
««/ 0
-
««0 1

ScreenRect
««1 ;
.
««; <
width
««< A
/
««B C
$num
««D F
,
««F G

ScreenRect
««H R
.
««R S
height
««S Y
/
««Z [
$num
««\ ^
)
««^ _
;
««_ `

screenshot
…… 
=
……  
new
……! $
	Texture2D
……% .
(
……. /
screenshot_size
……/ >
,
……> ?
screenshot_size
……@ O
)
……O P
;
……P Q

screenshot
   
.
   
	hideFlags
   (
=
  ) *
(
  + ,
	HideFlags
  , 5
)
  5 6
(
  6 7
$num
  7 8
|
  9 :
$num
  ; <
|
  = >
$num
  ? @
)
  @ A
;
  A B
screenshotStatus
ÀÀ $
=
ÀÀ% &
ScreenshotStatus
ÀÀ' 7
.
ÀÀ7 8
PrepareCanvas
ÀÀ8 E
;
ÀÀE F
if
ŒŒ 
(
ŒŒ 
(
ŒŒ 
bool
ŒŒ 
)
ŒŒ 
ReflectionUtility
ŒŒ /
.
ŒŒ/ 0
GetValue
ŒŒ0 8
(
ŒŒ8 9
this
ŒŒ9 =
,
ŒŒ= >
this
ŒŒ? C
.
ŒŒC D
GetType
ŒŒD K
(
ŒŒK L
)
ŒŒL M
,
ŒŒM N
$str
ŒŒO W
)
ŒŒW X
)
ŒŒX Y"
screenshotCanvasRect
œœ ,
=
œœ- .
new
œœ/ 2
Rect
œœ3 7
(
œœ7 8
$num
œœ8 9
,
œœ9 :
$num
œœ; <
,
œœ< =
(
œœ> ?
int
œœ? B
)
œœB C
Mathf
œœC H
.
œœH I
Min
œœI L
(
œœL M
screenshot_size
œœM \
,
œœ\ ]

ScreenRect
œœ^ h
.
œœh i
width
œœi n
-
œœo p
$num
œœq r
)
œœr s
,
œœs t
(
œœu v
int
œœv y
)
œœy z
Mathf
œœz 
.œœ Ä
MinœœÄ É
(œœÉ Ñ
screenshot_sizeœœÑ ì
,œœì î

ScreenRectœœï ü
.œœü †
heightœœ† ¶
-œœß ®
$numœœ© ™
)œœ™ ´
)œœ´ ¨
;œœ¨ ≠
else
–– "
screenshotCanvasRect
—— ,
=
——- .
new
——/ 2
Rect
——3 7
(
——7 8
$num
——8 9
,
——9 :
$num
——; <
,
——< =
(
——> ?
int
——? B
)
——B C
Mathf
——C H
.
——H I
Min
——I L
(
——L M
screenshot_size
——M \
,
——\ ]

ScreenRect
——^ h
.
——h i
width
——i n
)
——n o
,
——o p
(
——q r
int
——r u
)
——u v
Mathf
——v {
.
——{ |
Min
——| 
(—— Ä
screenshot_size——Ä è
,——è ê

ScreenRect——ë õ
.——õ ú
height——ú ¢
)——¢ £
)——£ §
;——§ •'
screenshotTexturePosition
”” -
=
””. /
new
””0 3
Vector2
””4 ;
(
””; <
$num
””< =
,
””= >
$num
””? @
)
””@ A
;
””A B
this
’’ 
.
’’ 
ShowNotification
’’ )
(
’’) *
new
’’* -

GUIContent
’’. 8
(
’’8 9
$str
’’9 R
)
’’R S
)
’’S T
;
’’T U
Repaint
◊◊ 
(
◊◊ 
)
◊◊ 
;
◊◊ 
return
ŸŸ 
;
ŸŸ 
case
€€ 
ScreenshotStatus
€€ %
.
€€% &
CanvasReady
€€& 1
:
€€1 2
if
ﬁﬁ 
(
ﬁﬁ '
screenshotTexturePosition
ﬁﬁ 1
.
ﬁﬁ1 2
y
ﬁﬁ2 3
<
ﬁﬁ4 5
screenshot_size
ﬁﬁ6 E
)
ﬁﬁE F
{
ﬂﬂ 

screenshot
‡‡ "
.
‡‡" #

ReadPixels
‡‡# -
(
‡‡- ."
screenshotCanvasRect
‡‡. B
,
‡‡B C
(
‡‡D E
int
‡‡E H
)
‡‡H I'
screenshotTexturePosition
‡‡I b
.
‡‡b c
x
‡‡c d
,
‡‡d e
(
‡‡f g
int
‡‡g j
)
‡‡j k(
screenshotTexturePosition‡‡k Ñ
.‡‡Ñ Ö
y‡‡Ö Ü
)‡‡Ü á
;‡‡á à'
screenshotTexturePosition
‚‚ 1
.
‚‚1 2
y
‚‚2 3
+=
‚‚4 6"
screenshotCanvasRect
‚‚7 K
.
‚‚K L
height
‚‚L R
;
‚‚R S
if
‰‰ 
(
‰‰ '
screenshotTexturePosition
‰‰ 5
.
‰‰5 6
y
‰‰6 7
<
‰‰8 9
screenshot_size
‰‰: I
)
‰‰I J
{
ÂÂ 
uvGraphOffset
ËË )
.
ËË) *
y
ËË* +
+=
ËË, ."
screenshotCanvasRect
ËË/ C
.
ËËC D
height
ËËD J
/
ËËK L
EditorGUIUtility
ËËM ]
.
ËË] ^
pixelsPerPoint
ËË^ l
;
ËËl m"
screenshotCanvasRect
ÏÏ 0
.
ÏÏ0 1
height
ÏÏ1 7
=
ÏÏ8 9
(
ÏÏ: ;
int
ÏÏ; >
)
ÏÏ> ?
Mathf
ÏÏ? D
.
ÏÏD E
Min
ÏÏE H
(
ÏÏH I
screenshot_size
ÏÏI X
-
ÏÏY Z'
screenshotTexturePosition
ÏÏ[ t
.
ÏÏt u
y
ÏÏu v
,
ÏÏv w

ScreenRectÏÏx Ç
.ÏÏÇ É
heightÏÏÉ â
-ÏÏä ã
$numÏÏå é
)ÏÏé è
;ÏÏè ê
screenshotStatus
ÌÌ ,
=
ÌÌ- .
ScreenshotStatus
ÌÌ/ ?
.
ÌÌ? @
PrepareCanvas
ÌÌ@ M
;
ÌÌM N
Repaint
ÓÓ #
(
ÓÓ# $
)
ÓÓ$ %
;
ÓÓ% &
return
ÔÔ "
;
ÔÔ" #
}
 
else
ÒÒ 
{
ÚÚ '
screenshotTexturePosition
ÛÛ 5
.
ÛÛ5 6
x
ÛÛ6 7
+=
ÛÛ8 :"
screenshotCanvasRect
ÛÛ; O
.
ÛÛO P
width
ÛÛP U
;
ÛÛU V
if
ıı 
(
ıı  '
screenshotTexturePosition
ıı  9
.
ıı9 :
x
ıı: ;
<
ıı< =
screenshot_size
ıı> M
)
ııM N
{
ˆˆ 
uvGraphOffset
˘˘  -
.
˘˘- .
x
˘˘. /
-=
˘˘0 2"
screenshotCanvasRect
˘˘3 G
.
˘˘G H
width
˘˘H M
/
˘˘N O
EditorGUIUtility
˘˘P `
.
˘˘` a
pixelsPerPoint
˘˘a o
;
˘˘o p
uvGraphOffset
˙˙  -
.
˙˙- .
y
˙˙. /
=
˙˙0 1
(
˙˙2 3

ScreenRect
˙˙3 =
.
˙˙= >
height
˙˙> D
/
˙˙E F
$num
˙˙G I
)
˙˙I J
;
˙˙J K"
screenshotCanvasRect
ˇˇ  4
.
ˇˇ4 5
width
ˇˇ5 :
=
ˇˇ; <
(
ˇˇ= >
int
ˇˇ> A
)
ˇˇA B
Mathf
ˇˇB G
.
ˇˇG H
Min
ˇˇH K
(
ˇˇK L
screenshot_size
ˇˇL [
-
ˇˇ\ ]'
screenshotTexturePosition
ˇˇ^ w
.
ˇˇw x
x
ˇˇx y
,
ˇˇy z

ScreenRectˇˇ{ Ö
.ˇˇÖ Ü
widthˇˇÜ ã
)ˇˇã å
;ˇˇå ç'
screenshotTexturePosition
ÄÄ  9
.
ÄÄ9 :
y
ÄÄ: ;
=
ÄÄ< =
$num
ÄÄ> ?
;
ÄÄ? @"
screenshotCanvasRect
ÅÅ  4
.
ÅÅ4 5
height
ÅÅ5 ;
=
ÅÅ< =
(
ÅÅ> ?
int
ÅÅ? B
)
ÅÅB C
Mathf
ÅÅC H
.
ÅÅH I
Min
ÅÅI L
(
ÅÅL M
screenshot_size
ÅÅM \
-
ÅÅ] ^'
screenshotTexturePosition
ÅÅ_ x
.
ÅÅx y
y
ÅÅy z
,
ÅÅz {

ScreenRectÅÅ| Ü
.ÅÅÜ á
heightÅÅá ç
-ÅÅé è
$numÅÅê í
)ÅÅí ì
;ÅÅì î
screenshotStatus
ÇÇ  0
=
ÇÇ1 2
ScreenshotStatus
ÇÇ3 C
.
ÇÇC D
PrepareCanvas
ÇÇD Q
;
ÇÇQ R
Repaint
ÉÉ  '
(
ÉÉ' (
)
ÉÉ( )
;
ÉÉ) *
return
ÑÑ  &
;
ÑÑ& '
}
ÖÖ 
}
ÜÜ 
}
áá 
uvGraphScale
ää  
=
ää! "

curUvScale
ää# -
;
ää- .
uvGraphOffset
ãã !
=
ãã" #
curUvPosition
ãã$ 1
;
ãã1 2
this
çç 
.
çç  
RemoveNotification
çç +
(
çç+ ,
)
çç, -
;
çç- .
screenshotStatus
éé $
=
éé% &
ScreenshotStatus
éé' 7
.
éé7 8
RenderComplete
éé8 F
;
ééF G
Repaint
èè 
(
èè 
)
èè 
;
èè 
break
êê 
;
êê 
case
íí 
ScreenshotStatus
íí %
.
íí% &
RenderComplete
íí& 4
:
íí4 5
if
îî 
(
îî .
 screenshot_transparentBackground
îî 8
)
îî8 9
{
ïï 
Color
ññ 
[
ññ 
]
ññ 
px
ññ  "
=
ññ# $

screenshot
ññ% /
.
ññ/ 0
	GetPixels
ññ0 9
(
ññ9 :
$num
ññ: ;
)
ññ; <
;
ññ< =
for
òò 
(
òò 
int
òò  
i
òò! "
=
òò# $
$num
òò% &
;
òò& '
i
òò( )
<
òò* +
px
òò, .
.
òò. /
Length
òò/ 5
;
òò5 6
i
òò7 8
++
òò8 :
)
òò: ;
if
ôô 
(
ôô  
Mathf
ôô  %
.
ôô% &
Abs
ôô& )
(
ôô) *
px
ôô* ,
[
ôô, -
i
ôô- .
]
ôô. /
.
ôô/ 0
r
ôô0 1
-
ôô2 3
UV_FILL_COLOR
ôô4 A
.
ôôA B
r
ôôB C
)
ôôC D
<
ôôE F
$num
ôôG K
&&
ôôL N
Mathf
öö  %
.
öö% &
Abs
öö& )
(
öö) *
px
öö* ,
[
öö, -
i
öö- .
]
öö. /
.
öö/ 0
g
öö0 1
-
öö2 3
UV_FILL_COLOR
öö4 A
.
ööA B
g
ööB C
)
ööC D
<
ööE F
$num
ööG K
&&
ööL N
Mathf
õõ  %
.
õõ% &
Abs
õõ& )
(
õõ) *
px
õõ* ,
[
õõ, -
i
õõ- .
]
õõ. /
.
õõ/ 0
b
õõ0 1
-
õõ2 3
UV_FILL_COLOR
õõ4 A
.
õõA B
b
õõB C
)
õõC D
<
õõE F
$num
õõG K
)
õõK L
px
úú  "
[
úú" #
i
úú# $
]
úú$ %
=
úú& '
Color
úú( -
.
úú- .
clear
úú. 3
;
úú3 4

screenshot
ûû "
.
ûû" #
	SetPixels
ûû# ,
(
ûû, -
px
ûû- /
)
ûû/ 0
;
ûû0 1

screenshot
üü "
.
üü" #
Apply
üü# (
(
üü( )
)
üü) *
;
üü* +
}
†† 
this
¢¢ 
.
¢¢ 
minSize
¢¢  
=
¢¢! "
Vector2
¢¢# *
.
¢¢* +
zero
¢¢+ /
;
¢¢/ 0
this
££ 
.
££ 
maxSize
££  
=
££! "
Vector2
££# *
.
££* +
one
££+ .
*
££/ 0
$num
££1 8
;
££8 9
EditorApplication
§§ %
.
§§% &
	delayCall
§§& /
+=
§§0 2
SaveUVRender
§§3 ?
;
§§? @
screenshotStatus
•• $
=
••% &
ScreenshotStatus
••' 7
.
••7 8
Done
••8 <
;
••< =
break
¶¶ 
;
¶¶ 
}
ßß 
}
®® 	
void
™™ 
SaveUVRender
™™ 
(
™™ 
)
™™ 
{
´´ 	#
m_ShowPreviewMaterial
¨¨ !
.
¨¨! "
value
¨¨" '
=
¨¨( )8
*m_ShowPreviewMaterialCacheDuringScreenshot
¨¨* T
;
¨¨T U
if
≠≠ 
(
≠≠ 

screenshot
≠≠ 
&&
≠≠ 
!
≠≠ 
string
≠≠ %
.
≠≠% &
IsNullOrEmpty
≠≠& 3
(
≠≠3 4
screenShotPath
≠≠4 B
)
≠≠B C
)
≠≠C D
{
ÆÆ 
FileUtility
ØØ 
.
ØØ 
SaveTexture
ØØ '
(
ØØ' (

screenshot
ØØ( 2
,
ØØ2 3
screenShotPath
ØØ4 B
)
ØØB C
;
ØØC D
DestroyImmediate
∞∞  
(
∞∞  !

screenshot
∞∞! +
)
∞∞+ ,
;
∞∞, -
}
±± 
}
≤≤ 	
}
µµ 
}∂∂ ¸)
ôD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Object\SetCollider.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
SetCollider 
: 

MenuAction )
{ 
public 
override 
ToolbarGroup $
group% *
{		 	
get

 
{

 
return

 
ToolbarGroup

 %
.

% &
Entity

& ,
;

, -
}

. /
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
null 
; 
}  
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str 
, 
$str	 ¨
) 
; 
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
base 
. 
enabled %
&&& (
MeshSelection) 6
.6 7
selectedObjectCount7 J
>K L
$numM N
;N O
}P Q
}   	
public"" 
override"" 
ActionResult"" $
DoAction""% -
(""- .
)"". /
{## 	
foreach$$ 
($$ 
ProBuilderMesh$$ #
pb$$$ &
in$$' )
MeshSelection$$* 7
.$$7 8
topInternal$$8 C
)$$C D
{%% 
var&& 
existing&& 
=&& 
pb&& !
.&&! "
GetComponents&&" /
<&&/ 0
EntityBehaviour&&0 ?
>&&? @
(&&@ A
)&&A B
;&&B C
for** 
(** 
int** 
i** 
=** 
$num** 
,** 
c**  !
=**" #
existing**$ ,
.**, -
Length**- 3
;**3 4
i**5 6
<**7 8
c**9 :
;**: ;
i**< =
++**= ?
)**? @
Undo++ 
.++ "
DestroyObjectImmediate++ /
(++/ 0
existing++0 8
[++8 9
i++9 :
]++: ;
)++; <
;++< =
var-- 
entity-- 
=-- 
pb-- 
.--  
GetComponent--  ,
<--, -
Entity--- 3
>--3 4
(--4 5
)--5 6
;--6 7
if// 
(// 
entity// 
!=// 
null// "
)//" #
Undo00 
.00 "
DestroyObjectImmediate00 /
(00/ 0
entity000 6
)006 7
;007 8
if22 
(22 
!22 
pb22 
.22 
GetComponent22 $
<22$ %
Collider22% -
>22- .
(22. /
)22/ 0
)220 1
Undo33 
.33 
AddComponent33 %
<33% &
MeshCollider33& 2
>332 3
(333 4
pb334 6
.336 7

gameObject337 A
)33A B
;33B C
if55 
(55 
!55 
pb55 
.55 
GetComponent55 $
<55$ %
Renderer55% -
>55- .
(55. /
)55/ 0
)550 1
Undo66 
.66 
AddComponent66 %
<66% &
MeshRenderer66& 2
>662 3
(663 4
pb664 6
.666 7

gameObject667 A
)66A B
;66B C
UndoUtility88 
.88 &
RegisterCompleteObjectUndo88 6
(886 7
pb887 9
,889 :
$str88; I
)88I J
;88J K
Undo:: 
.:: 
AddComponent:: !
<::! "
ColliderBehaviour::" 3
>::3 4
(::4 5
pb::5 7
.::7 8

gameObject::8 B
)::B C
.::C D

Initialize::D N
(::N O
)::O P
;::P Q
};; 
int== 
selectionCount== 
===  
MeshSelection==! .
.==. /
selectedObjectCount==/ B
;==B C
if?? 
(?? 
selectionCount?? 
<??  
$num??! "
)??" #
return@@ 
new@@ 
ActionResult@@ '
(@@' (
ActionResult@@( 4
.@@4 5
Status@@5 ;
.@@; <
NoChange@@< D
,@@D E
$str@@F i
)@@i j
;@@j k
returnBB 
newBB 
ActionResultBB #
(BB# $
ActionResultBB$ 0
.BB0 1
StatusBB1 7
.BB7 8
SuccessBB8 ?
,BB? @
$strBBA U
+BBV W
selectionCountBBX f
+BBg h
$strBBi s
)BBs t
;BBt u
}CC 	
}DD 
}EE ≈€
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\SmoothGroupEditor.cs
	namespace

 	
UnityEditor


 
.

 

ProBuilder

  
{ 
sealed 

class 
SmoothGroupEditor "
:# $
ConfigurableWindow% 7
{ 
class 
SmoothGroupData 
: 
IDisposable  +
{ 	
bool 

m_Disposed 
; 
public 
bool 
	isVisible !
;! "
public 

Dictionary 
< 
int !
,! "
List# '
<' (
Face( ,
>, -
>- .
groups/ 5
;5 6
public 

Dictionary 
< 
int !
,! "
Color# (
>( )
groupColors* 5
;5 6
public 
HashSet 
< 
int 
> 
selected  (
;( )
public 
Mesh 
previewMesh #
;# $
public 
Mesh 
normalsMesh #
;# $
public 
SmoothGroupData "
(" #
ProBuilderMesh# 1
pb2 4
)4 5
{ 
groups 
= 
new 

Dictionary '
<' (
int( +
,+ ,
List- 1
<1 2
Face2 6
>6 7
>7 8
(8 9
)9 :
;: ;
selected 
= 
new 
HashSet &
<& '
int' *
>* +
(+ ,
), -
;- .
groupColors 
= 
new !

Dictionary" ,
<, -
int- 0
,0 1
Color2 7
>7 8
(8 9
)9 :
;: ;
	isVisible   
=   
true    
;    !
previewMesh"" 
="" 
new"" !
Mesh""" &
(""& '
)""' (
{## 
	hideFlags$$ 
=$$ 
	HideFlags$$  )
.$$) *
HideAndDontSave$$* 9
,$$9 :
name%% 
=%% 
pb%% 
.%% 
name%% "
+%%# $
$str%%% 8
}&& 
;&& 
normalsMesh(( 
=(( 
new(( !
Mesh((" &
(((& '
)((' (
{)) 
	hideFlags** 
=** 
	HideFlags**  )
.**) *
HideAndDontSave*** 9
,**9 :
name++ 
=++ 
pb++ 
.++ 
name++ "
+++# $
$str++% 8
},, 
;,, 
Rebuild.. 
(.. 
pb.. 
).. 
;.. 
}// 
public11 
void11 
Rebuild11 
(11  
ProBuilderMesh11  .
pb11/ 1
)111 2
{22 
CacheGroups33 
(33 
pb33 
)33 
;33  
CacheSelected44 
(44 
pb44  
)44  !
;44! "
RebuildPreviewMesh55 "
(55" #
pb55# %
)55% &
;55& '
RebuildNormalsMesh66 "
(66" #
pb66# %
)66% &
;66& '
}77 
public99 
void99 
CacheGroups99 #
(99# $
ProBuilderMesh99$ 2
pb993 5
)995 6
{:: 
groups;; 
.;; 
Clear;; 
(;; 
);; 
;;; 
foreach== 
(== 
Face== 
face== "
in==# %
pb==& (
.==( )
facesInternal==) 6
)==6 7
{>> 
List?? 
<?? 
Face?? 
>?? 
affected?? '
;??' (
ifAA 
(AA 
!AA 
groupsAA 
.AA  
TryGetValueAA  +
(AA+ ,
faceAA, 0
.AA0 1
smoothingGroupAA1 ?
,AA? @
outAAA D
affectedAAE M
)AAM N
)AAN O
groupsBB 
.BB 
AddBB "
(BB" #
faceBB# '
.BB' (
smoothingGroupBB( 6
,BB6 7
newBB8 ;
ListBB< @
<BB@ A
FaceBBA E
>BBE F
(BBF G
)BBG H
{BBI J
faceBBJ N
}BBN O
)BBO P
;BBP Q
elseCC 
affectedDD  
.DD  !
AddDD! $
(DD$ %
faceDD% )
)DD) *
;DD* +
}EE 
}FF 
publicHH 
voidHH 
CacheSelectedHH %
(HH% &
ProBuilderMeshHH& 4
pbHH5 7
)HH7 8
{II 
selectedJJ 
.JJ 
ClearJJ 
(JJ 
)JJ  
;JJ  !
foreachLL 
(LL 
FaceLL 
faceLL "
inLL# %
pbLL& (
.LL( )!
selectedFacesInternalLL) >
)LL> ?
selectedMM 
.MM 
AddMM  
(MM  !
faceMM! %
.MM% &
smoothingGroupMM& 4
)MM4 5
;MM5 6
}NN 
voidPP 
RebuildPreviewMeshPP #
(PP# $
ProBuilderMeshPP$ 2
pbPP3 5
)PP5 6
{QQ 
ListRR 
<RR 
intRR 
>RR 
indexesRR !
=RR" #
newRR$ '
ListRR( ,
<RR, -
intRR- 0
>RR0 1
(RR1 2
)RR2 3
;RR3 4
Color32SS 
[SS 
]SS 
colorsSS  
=SS! "
newSS# &
Color32SS' .
[SS. /
pbSS/ 1
.SS1 2
vertexCountSS2 =
]SS= >
;SS> ?
groupColorsTT 
.TT 
ClearTT !
(TT! "
)TT" #
;TT# $
foreachVV 
(VV 
KeyValuePairVV %
<VV% &
intVV& )
,VV) *
ListVV+ /
<VV/ 0
FaceVV0 4
>VV4 5
>VV5 6
smoothGroupVV7 B
inVVC E
groupsVVF L
)VVL M
{WW 
ifXX 
(XX 
smoothGroupXX #
.XX# $
KeyXX$ '
>XX( )
	SmoothingXX* 3
.XX3 4
smoothingGroupNoneXX4 F
)XXF G
{YY 
Color32ZZ 
colorZZ  %
=ZZ& '
GetDistinctColorZZ( 8
(ZZ8 9
smoothGroupZZ9 D
.ZZD E
KeyZZE H
)ZZH I
;ZZI J
groupColors[[ #
.[[# $
Add[[$ '
([[' (
smoothGroup[[( 3
.[[3 4
Key[[4 7
,[[7 8
color[[9 >
)[[> ?
;[[? @
var\\ 
groupIndexes\\ (
=\\) *
smoothGroup\\+ 6
.\\6 7
Value\\7 <
.\\< =

SelectMany\\= G
(\\G H
y\\H I
=>\\J L
y\\M N
.\\N O
indexesInternal\\O ^
)\\^ _
;\\_ `
indexes]] 
.]]  
AddRange]]  (
(]]( )
groupIndexes]]) 5
)]]5 6
;]]6 7
foreach^^ 
(^^  !
int^^! $
i^^% &
in^^' )
groupIndexes^^* 6
)^^6 7
colors__ "
[__" #
i__# $
]__$ %
=__& '
color__( -
;__- .
}`` 
}aa 
previewMeshcc 
.cc 
Clearcc !
(cc! "
)cc" #
;cc# $
previewMeshdd 
.dd 
verticesdd $
=dd% &
pbdd' )
.dd) *
positionsInternaldd* ;
;dd; <
previewMeshee 
.ee 
colors32ee $
=ee% &
colorsee' -
;ee- .
previewMeshff 
.ff 
	trianglesff %
=ff& '
indexesff( /
.ff/ 0
ToArrayff0 7
(ff7 8
)ff8 9
;ff9 :
}gg 
publicii 
voidii 
RebuildNormalsMeshii *
(ii* +
ProBuilderMeshii+ 9
pbii: <
)ii< =
{jj 
normalsMeshkk 
.kk 
Clearkk !
(kk! "
)kk" #
;kk# $
Vector3ll 
[ll 
]ll 
srcPositionsll &
=ll' (
pbll) +
.ll+ ,
meshll, 0
.ll0 1
verticesll1 9
;ll9 :
Vector3mm 
[mm 
]mm 

srcNormalsmm $
=mm% &
pbmm' )
.mm) *
meshmm* .
.mm. /
normalsmm/ 6
;mm6 7
intnn 
vertexCountnn 
=nn  !
Systemnn" (
.nn( )
Mathnn) -
.nn- .
Minnn. 1
(nn1 2
ushortnn2 8
.nn8 9
MaxValuenn9 A
/nnB C
$numnnD E
,nnE F
pbnnG I
.nnI J
meshnnJ N
.nnN O
vertexCountnnO Z
)nnZ [
;nn[ \
Vector3oo 
[oo 
]oo 
	positionsoo #
=oo$ %
newoo& )
Vector3oo* 1
[oo1 2
vertexCountoo2 =
*oo> ?
$numoo@ A
]ooA B
;ooB C
Vector4pp 
[pp 
]pp 
tangentspp "
=pp# $
newpp% (
Vector4pp) 0
[pp0 1
vertexCountpp1 <
*pp= >
$numpp? @
]pp@ A
;ppA B
intqq 
[qq 
]qq 
indexesqq 
=qq 
newqq  #
intqq$ '
[qq' (
vertexCountqq( 3
*qq4 5
$numqq6 7
]qq7 8
;qq8 9
forrr 
(rr 
intrr 
irr 
=rr 
$numrr 
;rr 
irr  !
<rr" #
vertexCountrr$ /
;rr/ 0
irr1 2
++rr2 4
)rr4 5
{ss 
inttt 
att 
=tt 
itt 
*tt 
$numtt  !
,tt! "
btt# $
=tt% &
itt' (
*tt) *
$numtt+ ,
+tt- .
$numtt/ 0
;tt0 1
	positionsvv 
[vv 
avv 
]vv  
=vv! "
srcPositionsvv# /
[vv/ 0
ivv0 1
]vv1 2
;vv2 3
	positionsww 
[ww 
bww 
]ww  
=ww! "
srcPositionsww# /
[ww/ 0
iww0 1
]ww1 2
;ww2 3
tangentsxx 
[xx 
axx 
]xx 
=xx  !
newxx" %
Vector4xx& -
(xx- .

srcNormalsxx. 8
[xx8 9
ixx9 :
]xx: ;
.xx; <
xxx< =
,xx= >

srcNormalsxx? I
[xxI J
ixxJ K
]xxK L
.xxL M
yxxM N
,xxN O

srcNormalsxxP Z
[xxZ [
ixx[ \
]xx\ ]
.xx] ^
zxx^ _
,xx_ `
$numxxa c
)xxc d
;xxd e
tangentsyy 
[yy 
byy 
]yy 
=yy  !
newyy" %
Vector4yy& -
(yy- .

srcNormalsyy. 8
[yy8 9
iyy9 :
]yy: ;
.yy; <
xyy< =
,yy= >

srcNormalsyy? I
[yyI J
iyyJ K
]yyK L
.yyL M
yyyM N
,yyN O

srcNormalsyyP Z
[yyZ [
iyy[ \
]yy\ ]
.yy] ^
zyy^ _
,yy_ `
$numyya c
)yyc d
;yyd e
indexeszz 
[zz 
azz 
]zz 
=zz  
azz! "
;zz" #
indexes{{ 
[{{ 
b{{ 
]{{ 
={{  
b{{! "
;{{" #
}|| 
normalsMesh}} 
.}} 
vertices}} $
=}}% &
	positions}}' 0
;}}0 1
normalsMesh~~ 
.~~ 
tangents~~ $
=~~% &
tangents~~' /
;~~/ 0
normalsMesh 
. 
subMeshCount (
=) *
$num+ ,
;, -
normalsMesh
ÄÄ 
.
ÄÄ 

SetIndices
ÄÄ &
(
ÄÄ& '
indexes
ÄÄ' .
,
ÄÄ. /
MeshTopology
ÄÄ0 <
.
ÄÄ< =
Lines
ÄÄ= B
,
ÄÄB C
$num
ÄÄD E
)
ÄÄE F
;
ÄÄF G
}
ÅÅ 
void
ÉÉ 
Dispose
ÉÉ 
(
ÉÉ 
bool
ÉÉ 
	disposing
ÉÉ '
)
ÉÉ' (
{
ÑÑ 
if
ÖÖ 
(
ÖÖ 
!
ÖÖ 
	disposing
ÖÖ 
&&
ÖÖ !
!
ÖÖ" #

m_Disposed
ÖÖ# -
)
ÖÖ- .
{
ÜÜ 
if
áá 
(
áá 
previewMesh
áá #
)
áá# $
DestroyImmediate
àà (
(
àà( )
previewMesh
àà) 4
)
àà4 5
;
àà5 6
if
ää 
(
ää 
normalsMesh
ää #
)
ää# $
DestroyImmediate
ãã (
(
ãã( )
normalsMesh
ãã) 4
)
ãã4 5
;
ãã5 6

m_Disposed
çç 
=
çç  
true
çç! %
;
çç% &
}
éé 
}
èè 
public
ëë 
void
ëë 
Dispose
ëë 
(
ëë  
)
ëë  !
{
íí 
Dispose
ìì 
(
ìì 
true
ìì 
)
ìì 
;
ìì 
}
îî 
}
ïï 	
static
óó 
Material
óó 
s_FaceMaterial
óó &
=
óó' (
null
óó) -
;
óó- .
static
òò 
Material
òò #
smoothPreviewMaterial
òò -
{
ôô 	
get
öö 
{
õõ 
if
úú 
(
úú 
s_FaceMaterial
úú "
==
úú# %
null
úú& *
)
úú* +
{
ùù 
s_FaceMaterial
ûû "
=
ûû# $
new
ûû% (
Material
ûû) 1
(
ûû1 2
Shader
ûû2 8
.
ûû8 9
Find
ûû9 =
(
ûû= >
$str
ûû> b
)
ûûb c
)
ûûc d
;
ûûd e
s_FaceMaterial
üü "
.
üü" #
	hideFlags
üü# ,
=
üü- .
	HideFlags
üü/ 8
.
üü8 9
HideAndDontSave
üü9 H
;
üüH I
}
†† 
return
¢¢ 
s_FaceMaterial
¢¢ %
;
¢¢% &
}
££ 
}
§§ 	
static
¶¶ 
Material
¶¶ %
s_NormalPreviewMaterial
¶¶ /
=
¶¶0 1
null
¶¶2 6
;
¶¶6 7
static
ßß 
Material
ßß #
normalPreviewMaterial
ßß -
{
®® 	
get
©© 
{
™™ 
if
´´ 
(
´´ %
s_NormalPreviewMaterial
´´ +
==
´´, .
null
´´/ 3
)
´´3 4%
s_NormalPreviewMaterial
¨¨ +
=
¨¨, -
new
¨¨. 1
Material
¨¨2 :
(
¨¨: ;
Shader
¨¨; A
.
¨¨A B
Find
¨¨B F
(
¨¨F G
$str
¨¨G h
)
¨¨h i
)
¨¨i j
;
¨¨j k
return
≠≠ %
s_NormalPreviewMaterial
≠≠ .
;
≠≠. /
}
ÆÆ 
}
ØØ 	
static
±± 
GUIStyle
±±  
s_GroupButtonStyle
±± *
=
±±+ ,
null
±±- 1
;
±±1 2
static
≤≤ 
GUIStyle
≤≤ (
s_GroupButtonSelectedStyle
≤≤ 2
=
≤≤3 4
null
≤≤5 9
;
≤≤9 :
static
≥≥ 
GUIStyle
≥≥ %
s_GroupButtonInUseStyle
≥≥ /
=
≥≥0 1
null
≥≥2 6
;
≥≥6 7
static
¥¥ 
GUIStyle
¥¥ .
 s_GroupButtonMixedSelectionStyle
¥¥ 8
=
¥¥9 :
null
¥¥; ?
;
¥¥? @
static
µµ 
GUIStyle
µµ 
s_ColorKeyStyle
µµ '
=
µµ( )
null
µµ* .
;
µµ. /
static
∂∂ 
GUIStyle
∂∂ #
s_WordWrappedRichText
∂∂ -
=
∂∂. /
null
∂∂0 4
;
∂∂4 5
static
∏∏ 
GUIStyle
∏∏ 
groupButtonStyle
∏∏ (
{
ππ 	
get
∫∫ 
{
ªª 
if
ºº 
(
ºº  
s_GroupButtonStyle
ºº &
==
ºº' )
null
ºº* .
)
ºº. /
{
ΩΩ  
s_GroupButtonStyle
ææ &
=
ææ' (
new
ææ) ,
GUIStyle
ææ- 5
(
ææ5 6
GUI
ææ6 9
.
ææ9 :
skin
ææ: >
.
ææ> ?
GetStyle
ææ? G
(
ææG H
$str
ææH P
)
ææP Q
)
ææQ R
;
ææR S 
s_GroupButtonStyle
øø &
.
øø& '
normal
øø' -
.
øø- .

background
øø. 8
=
øø9 :
IconUtility
øø; F
.
øøF G
GetIcon
øøG N
(
øøN O
$str
øøO v
)
øøv w
;
øøw x 
s_GroupButtonStyle
¿¿ &
.
¿¿& '
hover
¿¿' ,
.
¿¿, -

background
¿¿- 7
=
¿¿8 9
IconUtility
¿¿: E
.
¿¿E F
GetIcon
¿¿F M
(
¿¿M N
$str
¿¿N t
)
¿¿t u
;
¿¿u v 
s_GroupButtonStyle
¡¡ &
.
¡¡& '
active
¡¡' -
.
¡¡- .

background
¡¡. 8
=
¡¡9 :
IconUtility
¡¡; F
.
¡¡F G
GetIcon
¡¡G N
(
¡¡N O
$str
¡¡O w
)
¡¡w x
;
¡¡x y
Font
¬¬ 
asap
¬¬ 
=
¬¬ 
FileUtility
¬¬  +
.
¬¬+ ,
LoadInternalAsset
¬¬, =
<
¬¬= >
Font
¬¬> B
>
¬¬B C
(
¬¬C D
$str
¬¬D a
)
¬¬a b
;
¬¬b c
if
√√ 
(
√√ 
asap
√√ 
!=
√√ 
null
√√  $
)
√√$ %
{
ƒƒ  
s_GroupButtonStyle
≈≈ *
.
≈≈* +
font
≈≈+ /
=
≈≈0 1
asap
≈≈2 6
;
≈≈6 7 
s_GroupButtonStyle
∆∆ *
.
∆∆* +
fontSize
∆∆+ 3
=
∆∆4 5
$num
∆∆6 8
;
∆∆8 9 
s_GroupButtonStyle
«« *
.
««* +
padding
««+ 2
=
««3 4
new
««5 8

RectOffset
««9 C
(
««C D
$num
««D E
,
««E F
$num
««G H
,
««H I
$num
««J K
,
««K L
$num
««M N
)
««N O
;
««O P
}
»»  
s_GroupButtonStyle
…… &
.
……& '
border
……' -
=
……. /
new
……0 3

RectOffset
……4 >
(
……> ?
$num
……? @
,
……@ A
$num
……B C
,
……C D
$num
……E F
,
……F G
$num
……H I
)
……I J
;
……J K 
s_GroupButtonStyle
   &
.
  & '
margin
  ' -
=
  . /
new
  0 3

RectOffset
  4 >
(
  > ?
$num
  ? @
,
  @ A
$num
  B C
,
  C D
$num
  E F
,
  F G
$num
  H I
)
  I J
;
  J K 
s_GroupButtonStyle
ÀÀ &
.
ÀÀ& '
	alignment
ÀÀ' 0
=
ÀÀ1 2

TextAnchor
ÀÀ3 =
.
ÀÀ= >
MiddleCenter
ÀÀ> J
;
ÀÀJ K 
s_GroupButtonStyle
ÃÃ &
.
ÃÃ& '

fixedWidth
ÃÃ' 1
=
ÃÃ2 3
	IconWidth
ÃÃ4 =
;
ÃÃ= > 
s_GroupButtonStyle
ÕÕ &
.
ÕÕ& '
fixedHeight
ÕÕ' 2
=
ÕÕ3 4

IconHeight
ÕÕ5 ?
;
ÕÕ? @ 
s_GroupButtonStyle
–– &
.
––& '
normal
––' -
.
––- .
	textColor
––. 7
=
––8 9
EditorGUIUtility
––: J
.
––J K
	isProSkin
––K T
?
––U V
new
––W Z
Color
––[ `
(
––` a
$num
––a d
,
––d e
$num
––f i
,
––i j
$num
––k n
)
––n o
:
––p q
new
––r u
Color
––v {
(
––{ |
$num
––| 
,–– Ä
$num––Å Ñ
,––Ñ Ö
$num––Ü â
)––â ä
;––ä ã 
s_GroupButtonStyle
—— &
.
——& '
hover
——' ,
.
——, -
	textColor
——- 6
=
——7 8
EditorGUIUtility
——9 I
.
——I J
	isProSkin
——J S
?
——T U
new
——V Y
Color
——Z _
(
——_ `
$num
——` c
,
——c d
$num
——e h
,
——h i
$num
——j m
)
——m n
:
——o p
new
——q t
Color
——u z
(
——z {
$num
——{ ~
,
——~ 
$num——Ä É
,——É Ñ
$num——Ö à
)——à â
;——â ä 
s_GroupButtonStyle
““ &
.
““& '
active
““' -
.
““- .
	textColor
““. 7
=
““8 9
EditorGUIUtility
““: J
.
““J K
	isProSkin
““K T
?
““U V
new
““W Z
Color
““[ `
(
““` a
$num
““a d
,
““d e
$num
““f i
,
““i j
$num
““k n
)
““n o
:
““p q
new
““r u
Color
““v {
(
““{ |
$num
““| 
,““ Ä
$num““Å Ñ
,““Ñ Ö
$num““Ü â
)““â ä
;““ä ã
}
”” 
return
‘‘  
s_GroupButtonStyle
‘‘ )
;
‘‘) *
}
’’ 
}
÷÷ 	
static
ÿÿ 
GUIStyle
ÿÿ &
groupButtonSelectedStyle
ÿÿ 0
{
ŸŸ 	
get
⁄⁄ 
{
€€ 
if
‹‹ 
(
‹‹ (
s_GroupButtonSelectedStyle
‹‹ .
==
‹‹/ 1
null
‹‹2 6
)
‹‹6 7
{
›› (
s_GroupButtonSelectedStyle
ﬁﬁ .
=
ﬁﬁ/ 0
new
ﬁﬁ1 4
GUIStyle
ﬁﬁ5 =
(
ﬁﬁ= >
groupButtonStyle
ﬁﬁ> N
)
ﬁﬁN O
;
ﬁﬁO P(
s_GroupButtonSelectedStyle
ﬂﬂ .
.
ﬂﬂ. /
normal
ﬂﬂ/ 5
.
ﬂﬂ5 6

background
ﬂﬂ6 @
=
ﬂﬂA B
IconUtility
‡‡ #
.
‡‡# $
GetIcon
‡‡$ +
(
‡‡+ ,
$str
‡‡, X
)
‡‡X Y
;
‡‡Y Z(
s_GroupButtonSelectedStyle
·· .
.
··. /
hover
··/ 4
.
··4 5

background
··5 ?
=
··@ A
IconUtility
‚‚ #
.
‚‚# $
GetIcon
‚‚$ +
(
‚‚+ ,
$str
‚‚, W
)
‚‚W X
;
‚‚X Y(
s_GroupButtonSelectedStyle
„„ .
.
„„. /
active
„„/ 5
.
„„5 6

background
„„6 @
=
„„A B
IconUtility
‰‰ #
.
‰‰# $
GetIcon
‰‰$ +
(
‰‰+ ,
$str
‰‰, Y
)
‰‰Y Z
;
‰‰Z [
}
ÂÂ 
return
ÁÁ (
s_GroupButtonSelectedStyle
ÁÁ 1
;
ÁÁ1 2
}
ËË 
}
ÈÈ 	
static
ÎÎ 
GUIStyle
ÎÎ #
groupButtonInUseStyle
ÎÎ -
{
ÏÏ 	
get
ÌÌ 
{
ÓÓ 
if
ÔÔ 
(
ÔÔ %
s_GroupButtonInUseStyle
ÔÔ +
==
ÔÔ, .
null
ÔÔ/ 3
)
ÔÔ3 4
{
 %
s_GroupButtonInUseStyle
ÒÒ +
=
ÒÒ, -
new
ÒÒ. 1
GUIStyle
ÒÒ2 :
(
ÒÒ: ;
groupButtonStyle
ÒÒ; K
)
ÒÒK L
;
ÒÒL M%
s_GroupButtonInUseStyle
ÚÚ +
.
ÚÚ+ ,
normal
ÚÚ, 2
.
ÚÚ2 3

background
ÚÚ3 =
=
ÚÚ> ?
IconUtility
ÛÛ #
.
ÛÛ# $
GetIcon
ÛÛ$ +
(
ÛÛ+ ,
$str
ÛÛ, ]
)
ÛÛ] ^
;
ÛÛ^ _%
s_GroupButtonInUseStyle
ÙÙ +
.
ÙÙ+ ,
hover
ÙÙ, 1
.
ÙÙ1 2

background
ÙÙ2 <
=
ÙÙ= >
IconUtility
ıı #
.
ıı# $
GetIcon
ıı$ +
(
ıı+ ,
$str
ıı, \
)
ıı\ ]
;
ıı] ^%
s_GroupButtonInUseStyle
ˆˆ +
.
ˆˆ+ ,
active
ˆˆ, 2
.
ˆˆ2 3

background
ˆˆ3 =
=
ˆˆ> ?
IconUtility
˜˜ #
.
˜˜# $
GetIcon
˜˜$ +
(
˜˜+ ,
$str
˜˜, ^
)
˜˜^ _
;
˜˜_ `
}
¯¯ 
return
˙˙ %
s_GroupButtonInUseStyle
˙˙ .
;
˙˙. /
}
˚˚ 
}
¸¸ 	
static
˛˛ 
GUIStyle
˛˛ ,
groupButtonMixedSelectionStyle
˛˛ 6
{
ˇˇ 	
get
ÄÄ 
{
ÅÅ 
if
ÇÇ 
(
ÇÇ .
 s_GroupButtonMixedSelectionStyle
ÇÇ 4
==
ÇÇ5 7
null
ÇÇ8 <
)
ÇÇ< =
{
ÉÉ .
 s_GroupButtonMixedSelectionStyle
ÑÑ 4
=
ÑÑ5 6
new
ÑÑ7 :
GUIStyle
ÑÑ; C
(
ÑÑC D
groupButtonStyle
ÑÑD T
)
ÑÑT U
;
ÑÑU V.
 s_GroupButtonMixedSelectionStyle
ÖÖ 4
.
ÖÖ4 5
normal
ÖÖ5 ;
.
ÖÖ; <

background
ÖÖ< F
=
ÖÖG H
IconUtility
ÜÜ #
.
ÜÜ# $
GetIcon
ÜÜ$ +
(
ÜÜ+ ,
$str
ÜÜ, Z
)
ÜÜZ [
;
ÜÜ[ \.
 s_GroupButtonMixedSelectionStyle
áá 4
.
áá4 5
hover
áá5 :
.
áá: ;

background
áá; E
=
ááF G
IconUtility
àà #
.
àà# $
GetIcon
àà$ +
(
àà+ ,
$str
àà, Y
)
ààY Z
;
ààZ [.
 s_GroupButtonMixedSelectionStyle
ââ 4
.
ââ4 5
active
ââ5 ;
.
ââ; <

background
ââ< F
=
ââG H
IconUtility
ää #
.
ää# $
GetIcon
ää$ +
(
ää+ ,
$str
ää, [
)
ää[ \
;
ää\ ]
}
ãã 
return
çç .
 s_GroupButtonMixedSelectionStyle
çç 7
;
çç7 8
}
éé 
}
èè 	
static
ëë 
GUIStyle
ëë 
colorKeyStyle
ëë %
{
íí 	
get
ìì 
{
îî 
if
ïï 
(
ïï 
s_ColorKeyStyle
ïï #
==
ïï$ &
null
ïï' +
)
ïï+ ,
{
ññ 
s_ColorKeyStyle
óó #
=
óó$ %
new
óó& )
GUIStyle
óó* 2
(
óó2 3
groupButtonStyle
óó3 C
)
óóC D
;
óóD E
s_ColorKeyStyle
òò #
.
òò# $

fixedWidth
òò$ .
=
òò/ 0
	IconWidth
òò1 :
;
òò: ;
s_ColorKeyStyle
ôô #
.
ôô# $
fixedHeight
ôô$ /
=
ôô0 1
$num
ôô2 3
;
ôô3 4
s_ColorKeyStyle
öö #
.
öö# $
padding
öö$ +
=
öö, -
new
öö. 1

RectOffset
öö2 <
(
öö< =
$num
öö= >
,
öö> ?
$num
öö@ A
,
ööA B
$num
ööC D
,
ööD E
$num
ööF G
)
ööG H
;
ööH I
s_ColorKeyStyle
õõ #
.
õõ# $
normal
õõ$ *
.
õõ* +

background
õõ+ 5
=
õõ6 7
EditorGUIUtility
õõ8 H
.
õõH I
whiteTexture
õõI U
;
õõU V
}
úú 
return
ùù 
s_ColorKeyStyle
ùù &
;
ùù& '
}
ûû 
}
üü 	
static
°° 
GUIStyle
°° !
wordWrappedRichText
°° +
{
¢¢ 	
get
££ 
{
§§ 
if
•• 
(
•• #
s_WordWrappedRichText
•• )
==
••* ,
null
••- 1
)
••1 2
{
¶¶ #
s_WordWrappedRichText
ßß )
=
ßß* +
new
ßß, /
GUIStyle
ßß0 8
(
ßß8 9
EditorStyles
ßß9 E
.
ßßE F
wordWrappedLabel
ßßF V
)
ßßV W
;
ßßW X#
s_WordWrappedRichText
®® )
.
®®) *
richText
®®* 2
=
®®3 4
true
®®5 9
;
®®9 :#
s_WordWrappedRichText
©© )
.
©©) *
	alignment
©©* 3
=
©©4 5

TextAnchor
©©6 @
.
©©@ A
	LowerLeft
©©A J
;
©©J K
}
™™ 
return
´´ #
s_WordWrappedRichText
´´ ,
;
´´, -
}
¨¨ 
}
≠≠ 	
const
ØØ 
int
ØØ 
	IconWidth
ØØ 
=
ØØ 
$num
ØØ  
;
ØØ  !
const
∞∞ 
int
∞∞ 

IconHeight
∞∞ 
=
∞∞ 
$num
∞∞ !
;
∞∞! "

GUIContent
≤≤ 
m_GroupKeyContent
≤≤ $
=
≤≤% &
new
≥≥ 

GUIContent
≥≥ 
(
≥≥ 
$str
≥≥ 
,
≥≥  
$str
≥≥! k
)
≥≥k l
;
≥≥l m
Vector2
¥¥ 
m_Scroll
¥¥ 
=
¥¥ 
Vector2
¥¥ "
.
¥¥" #
zero
¥¥# '
;
¥¥' (

GUIContent
µµ 

m_HelpIcon
µµ 
=
µµ 
null
µµ  $
;
µµ$ %

GUIContent
∂∂ %
m_BreakSmoothingContent
∂∂ *
=
∂∂+ ,
null
∂∂- 1
;
∂∂1 2

GUIContent
∑∑ :
,m_SelectFacesWithSmoothGroupSelectionContent
∑∑ ?
=
∑∑@ A
null
∑∑B F
;
∑∑F G

Dictionary
∏∏ 
<
∏∏ 
ProBuilderMesh
∏∏ !
,
∏∏! "
SmoothGroupData
∏∏# 2
>
∏∏2 3
m_SmoothGroups
∏∏4 B
=
∏∏C D
new
∏∏E H

Dictionary
∏∏I S
<
∏∏S T
ProBuilderMesh
∏∏T b
,
∏∏b c
SmoothGroupData
∏∏d s
>
∏∏s t
(
∏∏t u
)
∏∏u v
;
∏∏v w
static
∫∫ 
bool
∫∫  
s_IsMovingVertices
∫∫ &
=
∫∫' (
false
∫∫) .
;
∫∫. /
static
ºº 
Pref
ºº 
<
ºº 
bool
ºº 
>
ºº 
s_ShowPreview
ºº '
=
ºº( )
new
ºº* -
Pref
ºº. 2
<
ºº2 3
bool
ºº3 7
>
ºº7 8
(
ºº8 9
$str
ºº9 P
,
ººP Q
false
ººR W
)
ººW X
;
ººX Y
static
ΩΩ 
Pref
ΩΩ 
<
ΩΩ 
bool
ΩΩ 
>
ΩΩ 
s_ShowNormals
ΩΩ '
=
ΩΩ( )
new
ΩΩ* -
Pref
ΩΩ. 2
<
ΩΩ2 3
bool
ΩΩ3 7
>
ΩΩ7 8
(
ΩΩ8 9
$str
ΩΩ9 P
,
ΩΩP Q
false
ΩΩR W
)
ΩΩW X
;
ΩΩX Y
static
ææ 
Pref
ææ 
<
ææ 
bool
ææ 
>
ææ 

s_ShowHelp
ææ $
=
ææ% &
new
ææ' *
Pref
ææ+ /
<
ææ/ 0
bool
ææ0 4
>
ææ4 5
(
ææ5 6
$str
ææ6 J
,
ææJ K
false
ææL Q
)
ææQ R
;
ææR S
static
øø 
Pref
øø 
<
øø 
float
øø 
>
øø 
s_NormalsSize
øø (
=
øø) *
new
øø+ .
Pref
øø/ 3
<
øø3 4
float
øø4 9
>
øø9 :
(
øø: ;
$str
øø; R
,
øøR S
$num
øøT X
)
øøX Y
;
øøY Z
static
¿¿ 
Pref
¿¿ 
<
¿¿ 
float
¿¿ 
>
¿¿ 
s_PreviewOpacity
¿¿ +
=
¿¿, -
new
¿¿. 1
Pref
¿¿2 6
<
¿¿6 7
float
¿¿7 <
>
¿¿< =
(
¿¿= >
$str
¿¿> X
,
¿¿X Y
$num
¿¿Z ]
)
¿¿] ^
;
¿¿^ _
static
¡¡ 
Pref
¡¡ 
<
¡¡ 
bool
¡¡ 
>
¡¡ 
s_PreviewDither
¡¡ )
=
¡¡* +
new
¡¡, /
Pref
¡¡0 4
<
¡¡4 5
bool
¡¡5 9
>
¡¡9 :
(
¡¡: ;
$str
¡¡; T
,
¡¡T U
false
¡¡V [
)
¡¡[ \
;
¡¡\ ]
static
¬¬ 
Pref
¬¬ 
<
¬¬ 
bool
¬¬ 
>
¬¬ 
s_ShowSettings
¬¬ (
=
¬¬) *
new
¬¬+ .
Pref
¬¬/ 3
<
¬¬3 4
bool
¬¬4 8
>
¬¬8 9
(
¬¬9 :
$str
¬¬: R
,
¬¬R S
false
¬¬T Y
)
¬¬Y Z
;
¬¬Z [
public
ƒƒ 
static
ƒƒ 
void
ƒƒ '
MenuOpenSmoothGroupEditor
ƒƒ 4
(
ƒƒ4 5
)
ƒƒ5 6
{
≈≈ 	
	GetWindow
∆∆ 
<
∆∆ 
SmoothGroupEditor
∆∆ '
>
∆∆' (
(
∆∆( )
$str
∆∆) >
)
∆∆> ?
;
∆∆? @
}
«« 	
void
…… 
OnEnable
…… 
(
…… 
)
…… 
{
   	
ProBuilderEditor
ÀÀ 
.
ÀÀ 

selectMode
ÀÀ '
=
ÀÀ( )

SelectMode
ÀÀ* 4
.
ÀÀ4 5
Face
ÀÀ5 9
;
ÀÀ9 :
	SceneView
ŒŒ 
.
ŒŒ 
duringSceneGui
ŒŒ $
+=
ŒŒ% '

OnSceneGUI
ŒŒ( 2
;
ŒŒ2 3
MeshSelection
““ 
.
““ $
objectSelectionChanged
““ 0
+=
““1 3 
OnSelectionChanged
““4 F
;
““F G
Undo
”” 
.
”” 
undoRedoPerformed
”” "
+=
””# % 
OnSelectionChanged
””& 8
;
””8 9
ProBuilderMesh
‘‘ 
.
‘‘ %
elementSelectionChanged
‘‘ 2
+=
‘‘3 5'
OnElementSelectionChanged
‘‘6 O
;
‘‘O P$
VertexManipulationTool
’’ "
.
’’" #$
beforeMeshModification
’’# 9
+=
’’: <#
OnBeginVertexMovement
’’= R
;
’’R S$
VertexManipulationTool
÷÷ "
.
÷÷" ##
afterMeshModification
÷÷# 8
+=
÷÷9 ;$
OnFinishVertexMovement
÷÷< R
;
÷÷R S&
autoRepaintOnSceneChange
◊◊ $
=
◊◊% &
true
◊◊' +
;
◊◊+ ,

m_HelpIcon
ÿÿ 
=
ÿÿ 
new
ÿÿ 

GUIContent
ÿÿ '
(
ÿÿ' (
IconUtility
ÿÿ( 3
.
ÿÿ3 4
GetIcon
ÿÿ4 ;
(
ÿÿ; <
$str
ÿÿ< J
)
ÿÿJ K
,
ÿÿK L
$str
ÿÿM a
)
ÿÿa b
;
ÿÿb c%
m_BreakSmoothingContent
ŸŸ #
=
ŸŸ$ %
new
ŸŸ& )

GUIContent
ŸŸ* 4
(
ŸŸ4 5
IconUtility
ŸŸ5 @
.
ŸŸ@ A
GetIcon
ŸŸA H
(
ŸŸH I
$str
ŸŸI f
)
ŸŸf g
,
ŸŸg h
$str
⁄⁄ H
)
⁄⁄H I
;
⁄⁄I J:
,m_SelectFacesWithSmoothGroupSelectionContent
€€ 8
=
€€9 :
new
€€; >

GUIContent
€€? I
(
€€I J
IconUtility
€€J U
.
€€U V
GetIcon
€€V ]
(
€€] ^
$str€€^ à
)€€à â
,€€â ä
$str
‹‹ r
)
‹‹r s
;
‹‹s t
MeshSelection
›› 
.
›› &
OnObjectSelectionChanged
›› 2
(
››2 3
)
››3 4
;
››4 5 
OnSelectionChanged
ﬁﬁ 
(
ﬁﬁ 
)
ﬁﬁ  
;
ﬁﬁ  !
}
ﬂﬂ 	
void
·· 
	OnDisable
·· 
(
·· 
)
·· 
{
‚‚ 	
	SceneView
‰‰ 
.
‰‰ 
duringSceneGui
‰‰ $
-=
‰‰% '

OnSceneGUI
‰‰( 2
;
‰‰2 3
MeshSelection
ËË 
.
ËË $
objectSelectionChanged
ËË 0
-=
ËË1 3 
OnSelectionChanged
ËË4 F
;
ËËF G
Undo
ÈÈ 
.
ÈÈ 
undoRedoPerformed
ÈÈ "
-=
ÈÈ# % 
OnSelectionChanged
ÈÈ& 8
;
ÈÈ8 9
ProBuilderMesh
ÍÍ 
.
ÍÍ %
elementSelectionChanged
ÍÍ 2
-=
ÍÍ3 5'
OnElementSelectionChanged
ÍÍ6 O
;
ÍÍO P"
ClearSmoothGroupData
ÎÎ  
(
ÎÎ  !
)
ÎÎ! "
;
ÎÎ" #
}
ÏÏ 	
void
ÓÓ 
	OnDestroy
ÓÓ 
(
ÓÓ 
)
ÓÓ 
{
ÔÔ 	"
ClearSmoothGroupData
  
(
  !
)
! "
;
" #
}
ÒÒ 	
void
ÛÛ "
ClearSmoothGroupData
ÛÛ !
(
ÛÛ! "
)
ÛÛ" #
{
ÙÙ 	
foreach
ıı 
(
ıı 
var
ıı 
v
ıı 
in
ıı 
m_SmoothGroups
ıı ,
)
ıı, -
v
ˆˆ 
.
ˆˆ 
Value
ˆˆ 
.
ˆˆ 
Dispose
ˆˆ 
(
ˆˆ  
)
ˆˆ  !
;
ˆˆ! "
m_SmoothGroups
˜˜ 
.
˜˜ 
Clear
˜˜  
(
˜˜  !
)
˜˜! "
;
˜˜" #
}
¯¯ 	
void
˙˙ #
OnBeginVertexMovement
˙˙ "
(
˙˙" #
IEnumerable
˙˙# .
<
˙˙. /
ProBuilderMesh
˙˙/ =
>
˙˙= >
	selection
˙˙? H
)
˙˙H I
{
˚˚ 	 
s_IsMovingVertices
¸¸ 
=
¸¸  
true
¸¸! %
;
¸¸% &
}
˝˝ 	
void
ˇˇ $
OnFinishVertexMovement
ˇˇ #
(
ˇˇ# $
IEnumerable
ˇˇ$ /
<
ˇˇ/ 0
ProBuilderMesh
ˇˇ0 >
>
ˇˇ> ?
	selection
ˇˇ@ I
)
ˇˇI J
{
ÄÄ 	 
s_IsMovingVertices
ÅÅ 
=
ÅÅ  
false
ÅÅ! &
;
ÅÅ& ' 
OnSelectionChanged
ÇÇ 
(
ÇÇ 
)
ÇÇ  
;
ÇÇ  !
}
ÉÉ 	
void
ÖÖ  
OnSelectionChanged
ÖÖ 
(
ÖÖ  
)
ÖÖ  !
{
ÜÜ 	"
ClearSmoothGroupData
áá  
(
áá  !
)
áá! "
;
áá" #
foreach
ââ 
(
ââ 
ProBuilderMesh
ââ #
pb
ââ$ &
in
ââ' )
MeshSelection
ââ* 7
.
ââ7 8
topInternal
ââ8 C
)
ââC D
m_SmoothGroups
ää 
.
ää 
Add
ää "
(
ää" #
pb
ää# %
,
ää% &
new
ää' *
SmoothGroupData
ää+ :
(
ää: ;
pb
ää; =
)
ää= >
)
ää> ?
;
ää? @
this
åå 
.
åå 
Repaint
åå 
(
åå 
)
åå 
;
åå 
}
çç 	
void
èè '
OnElementSelectionChanged
èè &
(
èè& '
ProBuilderMesh
èè' 5
pb
èè6 8
)
èè8 9
{
êê 	
SmoothGroupData
ëë 
data
ëë  
;
ëë  !
if
ìì 
(
ìì 
!
ìì 
m_SmoothGroups
ìì 
.
ìì  
TryGetValue
ìì  +
(
ìì+ ,
pb
ìì, .
,
ìì. /
out
ìì0 3
data
ìì4 8
)
ìì8 9
)
ìì9 :
m_SmoothGroups
îî 
.
îî 
Add
îî "
(
îî" #
pb
îî# %
,
îî% &
data
îî' +
=
îî, -
new
îî. 1
SmoothGroupData
îî2 A
(
îîA B
pb
îîB D
)
îîD E
)
îîE F
;
îîF G
else
ïï 
data
ññ 
.
ññ 
CacheSelected
ññ "
(
ññ" #
pb
ññ# %
)
ññ% &
;
ññ& '
}
óó 	
void
ôô 
OnGUI
ôô 
(
ôô 
)
ôô 
{
öö 	
DoContextMenu
õõ 
(
õõ 
)
õõ 
;
õõ 
	GUILayout
ùù 
.
ùù 
BeginHorizontal
ùù %
(
ùù% &
EditorStyles
ùù& 2
.
ùù2 3
toolbar
ùù3 :
)
ùù: ;
;
ùù; <
	EditorGUI
üü 
.
üü 
BeginChangeCheck
üü &
(
üü& '
)
üü' (
;
üü( )
s_ShowSettings
†† 
.
†† 
value
††  
=
††! "
	GUILayout
††# ,
.
††, -
Toggle
††- 3
(
††3 4
s_ShowSettings
††4 B
.
††B C
value
††C H
,
††H I
$str
††J T
,
††T U
EditorStyles
††V b
.
††b c
toolbarButton
††c p
)
††p q
;
††q r
s_ShowPreview
°° 
.
°° 
value
°° 
=
°°  !
	GUILayout
°°" +
.
°°+ ,
Toggle
°°, 2
(
°°2 3
s_ShowPreview
°°3 @
.
°°@ A
value
°°A F
,
°°F G
$str
°°H Q
,
°°Q R
EditorStyles
°°S _
.
°°_ `
toolbarButton
°°` m
)
°°m n
;
°°n o
s_ShowNormals
¢¢ 
.
¢¢ 
value
¢¢ 
=
¢¢  !
	GUILayout
¢¢" +
.
¢¢+ ,
Toggle
¢¢, 2
(
¢¢2 3
s_ShowNormals
¢¢3 @
.
¢¢@ A
value
¢¢A F
,
¢¢F G
$str
¢¢H Q
,
¢¢Q R
EditorStyles
¢¢S _
.
¢¢_ `
toolbarButton
¢¢` m
)
¢¢m n
;
¢¢n o
if
££ 
(
££ 
	EditorGUI
££ 
.
££ 
EndChangeCheck
££ '
(
££' (
)
££( )
)
££) * 
ProBuilderSettings
§§ "
.
§§" #
Save
§§# '
(
§§' (
)
§§( )
;
§§) *
if
¶¶ 
(
¶¶ 
s_ShowNormals
¶¶ 
)
¶¶ 
{
ßß 
	EditorGUI
®® 
.
®® 
BeginChangeCheck
®® *
(
®®* +
)
®®+ ,
;
®®, -
s_NormalsSize
™™ 
.
™™ 
value
™™ #
=
™™$ %
	GUILayout
™™& /
.
™™/ 0
HorizontalSlider
™™0 @
(
™™@ A
s_NormalsSize
´´ %
,
´´% &
$num
¨¨ 
,
¨¨ 
$num
≠≠ 
,
≠≠ 
	GUILayout
ÆÆ !
.
ÆÆ! "
MinWidth
ÆÆ" *
(
ÆÆ* +
$num
ÆÆ+ .
)
ÆÆ. /
,
ÆÆ/ 0
	GUILayout
ØØ !
.
ØØ! "
MaxWidth
ØØ" *
(
ØØ* +
$num
ØØ+ /
)
ØØ/ 0
)
ØØ0 1
;
ØØ1 2
if
±± 
(
±± 
	EditorGUI
±± 
.
±± 
EndChangeCheck
±± ,
(
±±, -
)
±±- .
)
±±. /
{
≤≤  
ProBuilderSettings
≥≥ &
.
≥≥& '
Save
≥≥' +
(
≥≥+ ,
)
≥≥, -
;
≥≥- .
foreach
µµ 
(
µµ 
var
µµ  
kvp
µµ! $
in
µµ% '
m_SmoothGroups
µµ( 6
)
µµ6 7
kvp
∂∂ 
.
∂∂ 
Value
∂∂ !
.
∂∂! " 
RebuildNormalsMesh
∂∂" 4
(
∂∂4 5
kvp
∂∂5 8
.
∂∂8 9
Key
∂∂9 <
)
∂∂< =
;
∂∂= >
	SceneView
∑∑ 
.
∑∑ 

RepaintAll
∑∑ (
(
∑∑( )
)
∑∑) *
;
∑∑* +
}
∏∏ 
}
ππ 
	GUILayout
ªª 
.
ªª 
FlexibleSpace
ªª #
(
ªª# $
)
ªª$ %
;
ªª% &
if
ΩΩ 
(
ΩΩ 
	GUILayout
ΩΩ 
.
ΩΩ 
Button
ΩΩ  
(
ΩΩ  !

m_HelpIcon
ΩΩ! +
,
ΩΩ+ ,
UI
ΩΩ- /
.
ΩΩ/ 0
EditorStyles
ΩΩ0 <
.
ΩΩ< =
toolbarHelpIcon
ΩΩ= L
)
ΩΩL M
)
ΩΩM N

s_ShowHelp
ææ 
.
ææ 
SetValue
ææ #
(
ææ# $
!
ææ$ %

s_ShowHelp
ææ% /
,
ææ/ 0
true
ææ1 5
)
ææ5 6
;
ææ6 7
	GUILayout
øø 
.
øø 
EndHorizontal
øø #
(
øø# $
)
øø$ %
;
øø% &
if
¡¡ 
(
¡¡ 
s_ShowSettings
¡¡ 
)
¡¡ 
{
¬¬ 
	GUILayout
√√ 
.
√√ 
BeginVertical
√√ '
(
√√' (
UI
√√( *
.
√√* +
EditorStyles
√√+ 7
.
√√7 8
settingsGroup
√√8 E
)
√√E F
;
√√F G
EditorGUIUtility
≈≈  
.
≈≈  !

labelWidth
≈≈! +
=
≈≈, -
$num
≈≈. 1
;
≈≈1 2
	EditorGUI
«« 
.
«« 
BeginChangeCheck
«« *
(
««* +
)
««+ ,
;
««, -
s_PreviewOpacity
……  
.
……  !
value
……! &
=
……' (
EditorGUILayout
……) 8
.
……8 9
Slider
……9 ?
(
……? @
$str
……@ Q
,
……Q R
s_PreviewOpacity
……S c
,
……c d
$num
……e j
,
……j k
$num
……l n
)
……n o
;
……o p
s_PreviewDither
   
.
    
value
    %
=
  & '
EditorGUILayout
  ( 7
.
  7 8
Toggle
  8 >
(
  > ?
$str
  ? O
,
  O P
s_PreviewDither
  Q `
)
  ` a
;
  a b
if
ÃÃ 
(
ÃÃ 
	EditorGUI
ÃÃ 
.
ÃÃ 
EndChangeCheck
ÃÃ ,
(
ÃÃ, -
)
ÃÃ- .
)
ÃÃ. /
{
ÕÕ  
ProBuilderSettings
ŒŒ &
.
ŒŒ& '
Save
ŒŒ' +
(
ŒŒ+ ,
)
ŒŒ, -
;
ŒŒ- .#
smoothPreviewMaterial
œœ )
.
œœ) *
SetFloat
œœ* 2
(
œœ2 3
$str
œœ3 =
,
œœ= >
s_PreviewOpacity
œœ? O
)
œœO P
;
œœP Q#
smoothPreviewMaterial
–– )
.
––) *
SetFloat
––* 2
(
––2 3
$str
––3 <
,
––< =
s_PreviewDither
––> M
?
––N O
$num
––P R
:
––S T
$num
––U W
)
––W X
;
––X Y
	SceneView
—— 
.
—— 

RepaintAll
—— (
(
——( )
)
——) *
;
——* +
}
““ 
EditorGUIUtility
‘‘  
.
‘‘  !

labelWidth
‘‘! +
=
‘‘, -
$num
‘‘. /
;
‘‘/ 0
	GUILayout
÷÷ 
.
÷÷ 
EndVertical
÷÷ %
(
÷÷% &
)
÷÷& '
;
÷÷' (
}
◊◊ 
m_Scroll
ŸŸ 
=
ŸŸ 
EditorGUILayout
ŸŸ &
.
ŸŸ& '
BeginScrollView
ŸŸ' 6
(
ŸŸ6 7
m_Scroll
ŸŸ7 ?
)
ŸŸ? @
;
ŸŸ@ A
if
€€ 
(
€€ 

s_ShowHelp
€€ 
)
€€ 
{
‹‹ 
	GUILayout
›› 
.
›› 
BeginVertical
›› '
(
››' (
UI
››( *
.
››* +
EditorStyles
››+ 7
.
››7 8
settingsGroup
››8 E
)
››E F
;
››F G
	GUILayout
ﬂﬂ 
.
ﬂﬂ 
Label
ﬂﬂ 
(
ﬂﬂ  
$str
ﬂﬂ  C
,
ﬂﬂC D
EditorStyles
ﬂﬂE Q
.
ﬂﬂQ R
	boldLabel
ﬂﬂR [
)
ﬂﬂ[ \
;
ﬂﬂ\ ]
	GUILayout
·· 
.
·· 
Label
·· 
(
··  
$str
··  y
,
··y z"
wordWrappedRichText··{ é
)··é è
;··è ê
	GUILayout
‚‚ 
.
‚‚ 
Space
‚‚ 
(
‚‚  
$num
‚‚  !
)
‚‚! "
;
‚‚" #
	GUILayout
„„ 
.
„„ 
Label
„„ 
(
„„  
$str
„„  t
,
„„t u"
wordWrappedRichText„„v â
)„„â ä
;„„ä ã
	GUILayout
‰‰ 
.
‰‰ 
Label
‰‰ 
(
‰‰  
$str
‰‰  o
,
‰‰o p"
wordWrappedRichText‰‰q Ñ
)‰‰Ñ Ö
;‰‰Ö Ü
	GUILayout
ÂÂ 
.
ÂÂ 
Label
ÂÂ 
(
ÂÂ  
$str
ÂÂ  x
,
ÂÂx y"
wordWrappedRichTextÂÂz ç
)ÂÂç é
;ÂÂé è
	GUILayout
ÊÊ 
.
ÊÊ 
Space
ÊÊ 
(
ÊÊ  
$num
ÊÊ  !
)
ÊÊ! "
;
ÊÊ" #
global
ËË 
::
ËË 
UnityEditor
ËË #
.
ËË# $

ProBuilder
ËË$ .
.
ËË. /
UI
ËË/ 1
.
ËË1 2
EditorGUILayout
ËË2 A
.
ËËA B
BeginRow
ËËB J
(
ËËJ K
)
ËËK L
;
ËËL M
	GUILayout
ÈÈ 
.
ÈÈ 
Button
ÈÈ  
(
ÈÈ  !
$str
ÈÈ! $
,
ÈÈ$ %
groupButtonStyle
ÈÈ& 6
)
ÈÈ6 7
;
ÈÈ7 8
	GUILayout
ÍÍ 
.
ÍÍ 
Label
ÍÍ 
(
ÍÍ  
$str
ÍÍ  8
,
ÍÍ8 9!
wordWrappedRichText
ÍÍ: M
)
ÍÍM N
;
ÍÍN O
global
ÎÎ 
::
ÎÎ 
UnityEditor
ÎÎ #
.
ÎÎ# $

ProBuilder
ÎÎ$ .
.
ÎÎ. /
UI
ÎÎ/ 1
.
ÎÎ1 2
EditorGUILayout
ÎÎ2 A
.
ÎÎA B
EndRow
ÎÎB H
(
ÎÎH I
)
ÎÎI J
;
ÎÎJ K
global
ÌÌ 
::
ÌÌ 
UnityEditor
ÌÌ #
.
ÌÌ# $

ProBuilder
ÌÌ$ .
.
ÌÌ. /
UI
ÌÌ/ 1
.
ÌÌ1 2
EditorGUILayout
ÌÌ2 A
.
ÌÌA B
BeginRow
ÌÌB J
(
ÌÌJ K
)
ÌÌK L
;
ÌÌL M
	GUILayout
ÓÓ 
.
ÓÓ 
Button
ÓÓ  
(
ÓÓ  !
$str
ÓÓ! $
,
ÓÓ$ %#
groupButtonInUseStyle
ÓÓ& ;
)
ÓÓ; <
;
ÓÓ< =
	GUILayout
ÔÔ 
.
ÔÔ 
Label
ÔÔ 
(
ÔÔ  
$str
ÔÔ  a
,
ÔÔa b!
wordWrappedRichText
ÔÔc v
)
ÔÔv w
;
ÔÔw x
global
 
::
 
UnityEditor
 #
.
# $

ProBuilder
$ .
.
. /
UI
/ 1
.
1 2
EditorGUILayout
2 A
.
A B
EndRow
B H
(
H I
)
I J
;
J K
global
ÚÚ 
::
ÚÚ 
UnityEditor
ÚÚ #
.
ÚÚ# $

ProBuilder
ÚÚ$ .
.
ÚÚ. /
UI
ÚÚ/ 1
.
ÚÚ1 2
EditorGUILayout
ÚÚ2 A
.
ÚÚA B
BeginRow
ÚÚB J
(
ÚÚJ K
)
ÚÚK L
;
ÚÚL M
	GUILayout
ÛÛ 
.
ÛÛ 
Button
ÛÛ  
(
ÛÛ  !
$str
ÛÛ! $
,
ÛÛ$ %&
groupButtonSelectedStyle
ÛÛ& >
)
ÛÛ> ?
;
ÛÛ? @
	GUILayout
ÙÙ 
.
ÙÙ 
Label
ÙÙ 
(
ÙÙ  
$str
ÙÙ  K
,
ÙÙK L!
wordWrappedRichText
ÙÙM `
)
ÙÙ` a
;
ÙÙa b
global
ıı 
::
ıı 
UnityEditor
ıı #
.
ıı# $

ProBuilder
ıı$ .
.
ıı. /
UI
ıı/ 1
.
ıı1 2
EditorGUILayout
ıı2 A
.
ııA B
EndRow
ııB H
(
ııH I
)
ııI J
;
ııJ K
global
˜˜ 
::
˜˜ 
UnityEditor
˜˜ #
.
˜˜# $

ProBuilder
˜˜$ .
.
˜˜. /
UI
˜˜/ 1
.
˜˜1 2
EditorGUILayout
˜˜2 A
.
˜˜A B
BeginRow
˜˜B J
(
˜˜J K
)
˜˜K L
;
˜˜L M
	GUILayout
¯¯ 
.
¯¯ 
Button
¯¯  
(
¯¯  !
$str
¯¯! $
,
¯¯$ %,
groupButtonMixedSelectionStyle
¯¯& D
)
¯¯D E
;
¯¯E F
GUI
˘˘ 
.
˘˘ 
backgroundColor
˘˘ #
=
˘˘$ %
Color
˘˘& +
.
˘˘+ ,
white
˘˘, 1
;
˘˘1 2
	GUILayout
˙˙ 
.
˙˙ 
Label
˙˙ 
(
˙˙  
$str
˙˙  o
,
˙˙o p"
wordWrappedRichText˙˙q Ñ
)˙˙Ñ Ö
;˙˙Ö Ü
global
˚˚ 
::
˚˚ 
UnityEditor
˚˚ #
.
˚˚# $

ProBuilder
˚˚$ .
.
˚˚. /
UI
˚˚/ 1
.
˚˚1 2
EditorGUILayout
˚˚2 A
.
˚˚A B
EndRow
˚˚B H
(
˚˚H I
)
˚˚I J
;
˚˚J K
if
˝˝ 
(
˝˝ 
	GUILayout
˝˝ 
.
˝˝ 
Button
˝˝ $
(
˝˝$ %
$str
˝˝% 9
)
˝˝9 :
)
˝˝: ;
Application
˛˛ 
.
˛˛  
OpenURL
˛˛  '
(
˛˛' (
$str˛˛( °
)˛˛° ¢
;˛˛¢ £
	GUILayout
ÄÄ 
.
ÄÄ 
EndVertical
ÄÄ %
(
ÄÄ% &
)
ÄÄ& '
;
ÄÄ' (
}
ÅÅ 
float
ÑÑ 
area
ÑÑ 
=
ÑÑ 
(
ÑÑ 
position
ÑÑ "
.
ÑÑ" #
width
ÑÑ# (
-
ÑÑ) *
$num
ÑÑ+ -
)
ÑÑ- .
;
ÑÑ. /
float
ÖÖ 
margin
ÖÖ 
=
ÖÖ 
Mathf
ÖÖ  
.
ÖÖ  !
Max
ÖÖ! $
(
ÖÖ$ %
groupButtonStyle
ÖÖ% 5
.
ÖÖ5 6
margin
ÖÖ6 <
.
ÖÖ< =
left
ÖÖ= A
,
ÖÖA B
groupButtonStyle
ÖÖC S
.
ÖÖS T
margin
ÖÖT Z
.
ÖÖZ [
right
ÖÖ[ `
)
ÖÖ` a
;
ÖÖa b
int
ÜÜ 
columns
ÜÜ 
=
ÜÜ 
(
ÜÜ 
int
ÜÜ 
)
ÜÜ 
(
ÜÜ  
area
ÜÜ  $
/
ÜÜ% &
(
ÜÜ' (
groupButtonStyle
ÜÜ( 8
.
ÜÜ8 9
CalcSize
ÜÜ9 A
(
ÜÜA B
m_GroupKeyContent
ÜÜB S
)
ÜÜS T
.
ÜÜT U
x
ÜÜU V
+
ÜÜW X
margin
ÜÜY _
)
ÜÜ_ `
)
ÜÜ` a
-
ÜÜb c
$num
ÜÜd e
;
ÜÜe f
if
àà 
(
àà 
m_SmoothGroups
àà 
.
àà 
Count
àà $
<
àà% &
$num
àà' (
)
àà( )
{
ââ 
	GUILayout
ää 
.
ää 
BeginVertical
ää '
(
ää' (
)
ää( )
;
ää) *
	GUILayout
ãã 
.
ãã 
FlexibleSpace
ãã '
(
ãã' (
)
ãã( )
;
ãã) *
	GUILayout
åå 
.
åå 
Label
åå 
(
åå  
$str
åå  :
,
åå: ;
UI
åå< >
.
åå> ?
EditorGUIUtility
åå? O
.
ååO P#
CenteredGreyMiniLabel
ååP e
)
ååe f
;
ååf g
	GUILayout
çç 
.
çç 
FlexibleSpace
çç '
(
çç' (
)
çç( )
;
çç) *
	GUILayout
éé 
.
éé 
EndVertical
éé %
(
éé% &
)
éé& '
;
éé' (
}
èè 
else
êê 
{
ëë 
foreach
íí 
(
íí 
var
íí 
mesh
íí !
in
íí" $
m_SmoothGroups
íí% 3
)
íí3 4
{
ìì 
ProBuilderMesh
îî "
pb
îî# %
=
îî& '
mesh
îî( ,
.
îî, -
Key
îî- 0
;
îî0 1
SmoothGroupData
ïï #
data
ïï$ (
=
ïï) *
mesh
ïï+ /
.
ïï/ 0
Value
ïï0 5
;
ïï5 6
	GUILayout
óó 
.
óó 
BeginVertical
óó +
(
óó+ ,
UI
óó, .
.
óó. /
EditorStyles
óó/ ;
.
óó; <
settingsGroup
óó< I
)
óóI J
;
óóJ K
	GUILayout
ôô 
.
ôô 
BeginHorizontal
ôô -
(
ôô- .
)
ôô. /
;
ôô/ 0
if
õõ 
(
õõ 
	GUILayout
õõ !
.
õõ! "
Button
õõ" (
(
õõ( )
pb
õõ) +
.
õõ+ ,
name
õõ, 0
,
õõ0 1
UI
õõ2 4
.
õõ4 5
EditorStyles
õõ5 A
.
õõA B
headerLabel
õõB M
)
õõM N
)
õõN O
data
úú 
.
úú 
	isVisible
úú &
=
úú' (
!
úú) *
data
úú* .
.
úú. /
	isVisible
úú/ 8
;
úú8 9
	GUILayout
ûû 
.
ûû 
FlexibleSpace
ûû +
(
ûû+ ,
)
ûû, -
;
ûû- .
if
†† 
(
†† 
	GUILayout
†† !
.
††! "
Button
††" (
(
††( ):
,m_SelectFacesWithSmoothGroupSelectionContent
††) U
,
††U V
UI
°° 
.
°° 
EditorStyles
°° +
.
°°+ ,
buttonStyle
°°, 7
)
°°7 8
)
°°8 9
SelectGroups
¢¢ $
(
¢¢$ %
pb
¢¢% '
,
¢¢' (
new
¢¢) ,
HashSet
¢¢- 4
<
¢¢4 5
int
¢¢5 8
>
¢¢8 9
(
¢¢9 :
pb
¢¢: <
.
¢¢< =#
selectedFacesInternal
¢¢= R
.
¢¢R S
Select
¢¢S Y
(
¢¢Y Z
x
¢¢Z [
=>
¢¢\ ^
x
¢¢_ `
.
¢¢` a
smoothingGroup
¢¢a o
)
¢¢o p
)
¢¢p q
)
¢¢q r
;
¢¢r s
if
§§ 
(
§§ 
	GUILayout
§§ !
.
§§! "
Button
§§" (
(
§§( )%
m_BreakSmoothingContent
§§) @
,
§§@ A
UI
•• 
.
•• 
EditorStyles
•• +
.
••+ ,
buttonStyle
••, 7
)
••7 8
)
••8 9
SetGroup
¶¶  
(
¶¶  !
pb
¶¶! #
,
¶¶# $
	Smoothing
¶¶% .
.
¶¶. / 
smoothingGroupNone
¶¶/ A
)
¶¶A B
;
¶¶B C
	GUILayout
®® 
.
®® 
EndHorizontal
®® +
(
®®+ ,
)
®®, -
;
®®- .
bool
™™ 
isMixedSelection
™™ )
=
™™* +
data
™™, 0
.
™™0 1
selected
™™1 9
.
™™9 :
Contains
™™: B
(
™™B C
	Smoothing
™™C L
.
™™L M 
smoothingGroupNone
™™M _
)
™™_ `
;
™™` a
if
¨¨ 
(
¨¨ 
data
¨¨ 
.
¨¨ 
	isVisible
¨¨ &
)
¨¨& '
{
≠≠ 
int
ÆÆ 
column
ÆÆ "
=
ÆÆ# $
$num
ÆÆ% &
;
ÆÆ& '
bool
ØØ 
anySmoothGroups
ØØ ,
=
ØØ- .
data
ØØ/ 3
.
ØØ3 4
groups
ØØ4 :
.
ØØ: ;
Any
ØØ; >
(
ØØ> ?
x
ØØ? @
=>
ØØA C
x
ØØD E
.
ØØE F
Key
ØØF I
>
ØØJ K
	Smoothing
ØØL U
.
ØØU V 
smoothingGroupNone
ØØV h
)
ØØh i
;
ØØi j
	GUILayout
±± !
.
±±! "
BeginHorizontal
±±" 1
(
±±1 2
)
±±2 3
;
±±3 4
for
≥≥ 
(
≥≥ 
int
≥≥  
i
≥≥! "
=
≥≥# $
$num
≥≥% &
;
≥≥& '
i
≥≥( )
<
≥≥* +
	Smoothing
≥≥, 5
.
≥≥5 6
smoothRangeMax
≥≥6 D
;
≥≥D E
i
≥≥F G
++
≥≥G I
)
≥≥I J
{
¥¥ 
bool
µµ  

isSelected
µµ! +
=
µµ, -
data
µµ. 2
.
µµ2 3
selected
µµ3 ;
.
µµ; <
Contains
µµ< D
(
µµD E
i
µµE F
)
µµF G
;
µµG H
GUIStyle
∑∑ $

stateStyle
∑∑% /
=
∑∑0 1

isSelected
∑∑2 <
?
∑∑= >
(
∏∏  !
isMixedSelection
∏∏! 1
?
∏∏2 3,
groupButtonMixedSelectionStyle
∏∏4 R
:
∏∏S T&
groupButtonSelectedStyle
∏∏U m
)
∏∏m n
:
∏∏o p
data
ππ  $
.
ππ$ %
groups
ππ% +
.
ππ+ ,
ContainsKey
ππ, 7
(
ππ7 8
i
ππ8 9
)
ππ9 :
?
ππ; <#
groupButtonInUseStyle
ππ= R
:
ππS T
groupButtonStyle
ππU e
;
ππe f
if
ªª 
(
ªª  
s_ShowPreview
ªª  -
&&
ªª. 0
anySmoothGroups
ªª1 @
)
ªª@ A
	GUILayout
ºº  )
.
ºº) *
BeginVertical
ºº* 7
(
ºº7 8
	GUILayout
ºº8 A
.
ººA B
MaxWidth
ººB J
(
ººJ K
	IconWidth
ººK T
)
ººT U
)
ººU V
;
ººV W
m_GroupKeyContent
ææ -
.
ææ- .
text
ææ. 2
=
ææ3 4
i
ææ5 6
.
ææ6 7
ToString
ææ7 ?
(
ææ? @
)
ææ@ A
;
ææA B
if
¿¿ 
(
¿¿  
	GUILayout
¿¿  )
.
¿¿) *
Button
¿¿* 0
(
¿¿0 1
m_GroupKeyContent
¿¿1 B
,
¿¿B C

stateStyle
¿¿D N
)
¿¿N O
)
¿¿O P
{
¡¡ 
if
√√  "
(
√√# $
(
√√$ %
Event
√√% *
.
√√* +
current
√√+ 2
.
√√2 3
	modifiers
√√3 <
&
√√= >
EventModifiers
√√? M
.
√√M N
Alt
√√N Q
)
√√Q R
==
√√S U
EventModifiers
√√V d
.
√√d e
Alt
√√e h
||
√√i k
Event
ƒƒ$ )
.
ƒƒ) *
current
ƒƒ* 1
.
ƒƒ1 2
button
ƒƒ2 8
!=
ƒƒ9 ;
$num
ƒƒ< =
)
ƒƒ= >
SelectGroups
≈≈$ 0
(
≈≈0 1
pb
≈≈1 3
,
≈≈3 4
new
≈≈5 8
HashSet
≈≈9 @
<
≈≈@ A
int
≈≈A D
>
≈≈D E
(
≈≈E F
)
≈≈F G
{
≈≈H I
i
≈≈J K
}
≈≈L M
)
≈≈M N
;
≈≈N O
else
∆∆  $
SetGroup
««$ ,
(
««, -
pb
««- /
,
««/ 0
i
««1 2
)
««2 3
;
««3 4
}
»» 
if
   
(
    
s_ShowPreview
    -
&&
  . 0
anySmoothGroups
  1 @
)
  @ A
{
ÀÀ 
GUI
ÃÃ  #
.
ÃÃ# $
backgroundColor
ÃÃ$ 3
=
ÃÃ4 5
data
ÃÃ6 :
.
ÃÃ: ;
groupColors
ÃÃ; F
.
ÃÃF G
ContainsKey
ÃÃG R
(
ÃÃR S
i
ÃÃS T
)
ÃÃT U
?
ÃÃV W
data
ÃÃX \
.
ÃÃ\ ]
groupColors
ÃÃ] h
[
ÃÃh i
i
ÃÃi j
]
ÃÃj k
:
ÃÃl m
Color
ÃÃn s
.
ÃÃs t
clear
ÃÃt y
;
ÃÃy z
	GUILayout
ÕÕ  )
.
ÕÕ) *
Label
ÕÕ* /
(
ÕÕ/ 0
$str
ÕÕ0 2
,
ÕÕ2 3
colorKeyStyle
ÕÕ4 A
)
ÕÕA B
;
ÕÕB C
	GUILayout
ŒŒ  )
.
ŒŒ) *
EndVertical
ŒŒ* 5
(
ŒŒ5 6
)
ŒŒ6 7
;
ŒŒ7 8
GUI
œœ  #
.
œœ# $
backgroundColor
œœ$ 3
=
œœ4 5
Color
œœ6 ;
.
œœ; <
white
œœ< A
;
œœA B
}
–– 
if
““ 
(
““  
++
““  "
column
““" (
>
““) *
columns
““+ 2
)
““2 3
{
”” 
column
‘‘  &
=
‘‘' (
$num
‘‘) *
;
‘‘* +
	GUILayout
’’  )
.
’’) *
EndHorizontal
’’* 7
(
’’7 8
)
’’8 9
;
’’9 :
	GUILayout
÷÷  )
.
÷÷) *
BeginHorizontal
÷÷* 9
(
÷÷9 :
)
÷÷: ;
;
÷÷; <
}
◊◊ 
}
ÿÿ 
	GUILayout
⁄⁄ !
.
⁄⁄! "
EndHorizontal
⁄⁄" /
(
⁄⁄/ 0
)
⁄⁄0 1
;
⁄⁄1 2
}
€€ 
	GUILayout
›› 
.
›› 
EndVertical
›› )
(
››) *
)
››* +
;
››+ ,
}
ﬁﬁ 
}
ﬂﬂ 
EditorGUILayout
·· 
.
·· 
EndScrollView
·· )
(
··) *
)
··* +
;
··+ ,
if
‰‰ 
(
‰‰ 
mouseOverWindow
‰‰ 
==
‰‰  "
this
‰‰# '
)
‰‰' (
Repaint
ÂÂ 
(
ÂÂ 
)
ÂÂ 
;
ÂÂ 
}
ÊÊ 	
void
ËË 

OnSceneGUI
ËË 
(
ËË 
	SceneView
ËË !
view
ËË" &
)
ËË& '
{
ÈÈ 	
if
ÍÍ 
(
ÍÍ 
m_SmoothGroups
ÍÍ 
.
ÍÍ 
Count
ÍÍ $
>
ÍÍ% &
$num
ÍÍ' (
)
ÍÍ( )
{
ÎÎ 
using
ÏÏ 
(
ÏÏ 
new
ÏÏ 
	HandleGUI
ÏÏ $
(
ÏÏ$ %
)
ÏÏ% &
)
ÏÏ& '
{
ÌÌ 
foreach
ÓÓ 
(
ÓÓ 
var
ÓÓ  
kvp
ÓÓ! $
in
ÓÓ% '
m_SmoothGroups
ÓÓ( 6
)
ÓÓ6 7
Handles
ÔÔ 
.
ÔÔ  
Label
ÔÔ  %
(
ÔÔ% &
kvp
ÔÔ& )
.
ÔÔ) *
Key
ÔÔ* -
.
ÔÔ- .
	transform
ÔÔ. 7
.
ÔÔ7 8
position
ÔÔ8 @
,
ÔÔ@ A
kvp
ÔÔB E
.
ÔÔE F
Key
ÔÔF I
.
ÔÔI J
name
ÔÔJ N
,
ÔÔN O
EditorStyles
ÔÔP \
.
ÔÔ\ ]
	boldLabel
ÔÔ] f
)
ÔÔf g
;
ÔÔg h
}
 
}
ÒÒ 
Event
ÛÛ 
evt
ÛÛ 
=
ÛÛ 
Event
ÛÛ 
.
ÛÛ 
current
ÛÛ %
;
ÛÛ% &
if
ıı 
(
ıı 
!
ıı  
s_IsMovingVertices
ıı #
&&
ıı$ &
evt
ıı' *
.
ıı* +
type
ıı+ /
==
ıı0 2
	EventType
ıı3 <
.
ıı< =
Repaint
ıı= D
)
ııD E
{
ˆˆ 
foreach
˜˜ 
(
˜˜ 
var
˜˜ 
kvp
˜˜  
in
˜˜! #
m_SmoothGroups
˜˜$ 2
)
˜˜2 3
{
¯¯ 
if
˘˘ 
(
˘˘ 
s_ShowPreview
˘˘ %
)
˘˘% &
{
˙˙ 
Mesh
˚˚ 
m
˚˚ 
=
˚˚  
kvp
˚˚! $
.
˚˚$ %
Value
˚˚% *
.
˚˚* +
previewMesh
˚˚+ 6
;
˚˚6 7
if
˝˝ 
(
˝˝ 
m
˝˝ 
!=
˝˝  
null
˝˝! %
)
˝˝% &
{
˛˛ #
smoothPreviewMaterial
ˇˇ 1
.
ˇˇ1 2
SetPass
ˇˇ2 9
(
ˇˇ9 :
$num
ˇˇ: ;
)
ˇˇ; <
;
ˇˇ< =
Graphics
ÄÄ $
.
ÄÄ$ %
DrawMeshNow
ÄÄ% 0
(
ÄÄ0 1
m
ÄÄ1 2
,
ÄÄ2 3
kvp
ÄÄ4 7
.
ÄÄ7 8
Key
ÄÄ8 ;
.
ÄÄ; <
	transform
ÄÄ< E
.
ÄÄE F 
localToWorldMatrix
ÄÄF X
)
ÄÄX Y
;
ÄÄY Z
}
ÅÅ 
}
ÇÇ 
if
ÑÑ 
(
ÑÑ 
s_ShowNormals
ÑÑ %
)
ÑÑ% &
{
ÖÖ 
Mesh
ÜÜ 
m
ÜÜ 
=
ÜÜ  
kvp
ÜÜ! $
.
ÜÜ$ %
Value
ÜÜ% *
.
ÜÜ* +
normalsMesh
ÜÜ+ 6
;
ÜÜ6 7
if
àà 
(
àà 
m
àà 
!=
àà  
null
àà! %
)
àà% &
{
ââ 
	Transform
ää %
trs
ää& )
=
ää* +
kvp
ää, /
.
ää/ 0
Key
ää0 3
.
ää3 4
	transform
ää4 =
;
ää= >#
normalPreviewMaterial
ãã 1
.
ãã1 2
SetFloat
ãã2 :
(
ãã: ;
$str
ãã; C
,
ããC D
s_NormalsSize
ããE R
*
ããS T
HandleUtility
ããU b
.
ããb c
GetHandleSize
ããc p
(
ããp q
trs
ããq t
.
ããt u
GetComponentããu Å
<ããÅ Ç
MeshRendererããÇ é
>ããé è
(ããè ê
)ããê ë
.ããë í
boundsããí ò
.ããò ô
centerããô ü
)ããü †
)ãã† °
;ãã° ¢#
normalPreviewMaterial
åå 1
.
åå1 2
SetPass
åå2 9
(
åå9 :
$num
åå: ;
)
åå; <
;
åå< =
Graphics
çç $
.
çç$ %
DrawMeshNow
çç% 0
(
çç0 1
m
çç1 2
,
çç2 3
trs
çç4 7
.
çç7 8 
localToWorldMatrix
çç8 J
)
ççJ K
;
ççK L
}
éé 
}
èè 
}
êê 
}
ëë 
}
íí 	
static
îî 
void
îî 
SelectGroups
îî  
(
îî  !
ProBuilderMesh
îî! /
pb
îî0 2
,
îî2 3
HashSet
îî4 ;
<
îî; <
int
îî< ?
>
îî? @
groups
îîA G
)
îîG H
{
ïï 	
UndoUtility
ññ 
.
ññ 
RecordSelection
ññ '
(
ññ' (
pb
ññ( *
,
ññ* +
$str
ññ, I
)
ññI J
;
ññJ K
if
òò 
(
òò 
(
òò 
Event
òò 
.
òò 
current
òò 
.
òò 
	modifiers
òò (
&
òò) *
EventModifiers
òò+ 9
.
òò9 :
Shift
òò: ?
)
òò? @
==
òòA C
EventModifiers
òòD R
.
òòR S
Shift
òòS X
||
òòY [
(
ôô 
Event
ôô 
.
ôô 
current
ôô 
.
ôô 
	modifiers
ôô (
&
ôô) *
EventModifiers
ôô+ 9
.
ôô9 :
Control
ôô: A
)
ôôA B
==
ôôC E
EventModifiers
ôôF T
.
ôôT U
Control
ôôU \
)
ôô\ ]
pb
öö 
.
öö 
SetSelectedFaces
öö #
(
öö# $
pb
öö$ &
.
öö& '
facesInternal
öö' 4
.
öö4 5
Where
öö5 :
(
öö: ;
x
öö; <
=>
öö= ?
groups
öö@ F
.
ööF G
Contains
ööG O
(
ööO P
x
ööP Q
.
ööQ R
smoothingGroup
ööR `
)
öö` a
||
ööb d
pb
ööe g
.
öög h#
selectedFacesInternal
ööh }
.
öö} ~
Containsöö~ Ü
(ööÜ á
xööá à
)ööà â
)ööâ ä
)ööä ã
;ööã å
else
õõ 
pb
úú 
.
úú 
SetSelectedFaces
úú #
(
úú# $
pb
úú$ &
.
úú& '
facesInternal
úú' 4
.
úú4 5
Where
úú5 :
(
úú: ;
x
úú; <
=>
úú= ?
groups
úú@ F
.
úúF G
Contains
úúG O
(
úúO P
x
úúP Q
.
úúQ R
smoothingGroup
úúR `
)
úú` a
)
úúa b
)
úúb c
;
úúc d
ProBuilderEditor
ùù 
.
ùù 
Refresh
ùù $
(
ùù$ %
)
ùù% &
;
ùù& '
}
ûû 	
void
†† 
SetGroup
†† 
(
†† 
ProBuilderMesh
†† $
pb
††% '
,
††' (
int
††) ,
index
††- 2
)
††2 3
{
°° 	
UndoUtility
¢¢ 
.
¢¢ 
RecordObject
¢¢ $
(
¢¢$ %
pb
¢¢% '
,
¢¢' (
$str
¢¢) >
)
¢¢> ?
;
¢¢? @
foreach
§§ 
(
§§ 
Face
§§ 
face
§§ 
in
§§ !
pb
§§" $
.
§§$ %
selectedFaceCount
§§% 6
<
§§7 8
$num
§§9 :
?
§§; <
pb
§§= ?
.
§§? @
facesInternal
§§@ M
:
§§N O
pb
§§P R
.
§§R S#
selectedFacesInternal
§§S h
)
§§h i
face
•• 
.
•• 
smoothingGroup
•• #
=
••$ %
index
••& +
;
••+ ,
pb
®® 
.
®® 
ToMesh
®® 
(
®® 
)
®® 
;
®® 
pb
©© 
.
©© 
Refresh
©© 
(
©© 
)
©© 
;
©© 
pb
™™ 
.
™™ 
Optimize
™™ 
(
™™ 
)
™™ 
;
™™ 
SmoothGroupData
¨¨ 
data
¨¨  
;
¨¨  !
if
ÆÆ 
(
ÆÆ 
!
ÆÆ 
m_SmoothGroups
ÆÆ 
.
ÆÆ  
TryGetValue
ÆÆ  +
(
ÆÆ+ ,
pb
ÆÆ, .
,
ÆÆ. /
out
ÆÆ0 3
data
ÆÆ4 8
)
ÆÆ8 9
)
ÆÆ9 :
m_SmoothGroups
ØØ 
.
ØØ 
Add
ØØ "
(
ØØ" #
pb
ØØ# %
,
ØØ% &
new
ØØ' *
SmoothGroupData
ØØ+ :
(
ØØ: ;
pb
ØØ; =
)
ØØ= >
)
ØØ> ?
;
ØØ? @
else
∞∞ 
data
±± 
.
±± 
Rebuild
±± 
(
±± 
pb
±± 
)
±±  
;
±±  !
ProBuilderEditor
≥≥ 
.
≥≥ 
Refresh
≥≥ $
(
≥≥$ %
)
≥≥% &
;
≥≥& '
}
¥¥ 	
static
∂∂ 
Color32
∂∂ 
GetDistinctColor
∂∂ '
(
∂∂' (
int
∂∂( +
index
∂∂, 1
)
∂∂1 2
{
∑∑ 	
return
∏∏ $
s_KellysMaxContrastSet
∏∏ )
[
∏∏) *
index
∏∏* /
%
∏∏0 1$
s_KellysMaxContrastSet
∏∏2 H
.
∏∏H I
Length
∏∏I O
]
∏∏O P
;
∏∏P Q
}
ππ 	
static
ªª 
readonly
ªª 
Color32
ªª 
[
ªª  
]
ªª  !$
s_KellysMaxContrastSet
ªª" 8
=
ªª9 :
new
ªª; >
Color32
ªª? F
[
ªªF G
]
ªªG H
{
ºº 	
new
ΩΩ 
Color32
ΩΩ 
(
ΩΩ 
$num
ΩΩ 
,
ΩΩ 
$num
ΩΩ 
,
ΩΩ  
$num
ΩΩ! #
,
ΩΩ# $
$num
ΩΩ% (
)
ΩΩ( )
,
ΩΩ) *
new
ææ 
Color32
ææ 
(
ææ 
$num
ææ 
,
ææ 
$num
ææ 
,
ææ  
$num
ææ! #
,
ææ# $
$num
ææ% (
)
ææ( )
,
ææ) *
new
øø 
Color32
øø 
(
øø 
$num
øø 
,
øø 
$num
øø  
,
øø  !
$num
øø" $
,
øø$ %
$num
øø& )
)
øø) *
,
øø* +
new
¿¿ 
Color32
¿¿ 
(
¿¿ 
$num
¿¿ 
,
¿¿ 
$num
¿¿ 
,
¿¿ 
$num
¿¿  #
,
¿¿# $
$num
¿¿% (
)
¿¿( )
,
¿¿) *
new
¡¡ 
Color32
¡¡ 
(
¡¡ 
$num
¡¡ 
,
¡¡ 
$num
¡¡  
,
¡¡  !
$num
¡¡" $
,
¡¡$ %
$num
¡¡& )
)
¡¡) *
,
¡¡* +
new
¬¬ 
Color32
¬¬ 
(
¬¬ 
$num
¬¬ 
,
¬¬ 
$num
¬¬ 
,
¬¬  
$num
¬¬! $
,
¬¬$ %
$num
¬¬& )
)
¬¬) *
,
¬¬* +
new
√√ 
Color32
√√ 
(
√√ 
$num
√√ 
,
√√ 
$num
√√ 
,
√√  
$num
√√! $
,
√√$ %
$num
√√& )
)
√√) *
,
√√* +
new
ƒƒ 
Color32
ƒƒ 
(
ƒƒ 
$num
ƒƒ 
,
ƒƒ 
$num
ƒƒ 
,
ƒƒ  
$num
ƒƒ! $
,
ƒƒ$ %
$num
ƒƒ& )
)
ƒƒ) *
,
ƒƒ* +
new
≈≈ 
Color32
≈≈ 
(
≈≈ 
$num
≈≈ 
,
≈≈ 
$num
≈≈  
,
≈≈  !
$num
≈≈" $
,
≈≈$ %
$num
≈≈& )
)
≈≈) *
,
≈≈* +
new
∆∆ 
Color32
∆∆ 
(
∆∆ 
$num
∆∆ 
,
∆∆ 
$num
∆∆  
,
∆∆  !
$num
∆∆" %
,
∆∆% &
$num
∆∆' *
)
∆∆* +
,
∆∆+ ,
new
«« 
Color32
«« 
(
«« 
$num
«« 
,
«« 
$num
«« 
,
«« 
$num
««  #
,
««# $
$num
««% (
)
««( )
,
««) *
new
»» 
Color32
»» 
(
»» 
$num
»» 
,
»» 
$num
»»  
,
»»  !
$num
»»" %
,
»»% &
$num
»»' *
)
»»* +
,
»»+ ,
new
…… 
Color32
…… 
(
…… 
$num
…… 
,
…… 
$num
……  
,
……  !
$num
……" $
,
……$ %
$num
……& )
)
……) *
,
……* +
new
   
Color32
   
(
   
$num
   
,
   
$num
    
,
    !
$num
  " %
,
  % &
$num
  ' *
)
  * +
,
  + ,
new
ÀÀ 
Color32
ÀÀ 
(
ÀÀ 
$num
ÀÀ 
,
ÀÀ 
$num
ÀÀ 
,
ÀÀ 
$num
ÀÀ  !
,
ÀÀ! "
$num
ÀÀ# &
)
ÀÀ& '
,
ÀÀ' (
new
ÃÃ 
Color32
ÃÃ 
(
ÃÃ 
$num
ÃÃ 
,
ÃÃ 
$num
ÃÃ  
,
ÃÃ  !
$num
ÃÃ" %
,
ÃÃ% &
$num
ÃÃ' *
)
ÃÃ* +
,
ÃÃ+ ,
new
ÕÕ 
Color32
ÕÕ 
(
ÕÕ 
$num
ÕÕ 
,
ÕÕ 
$num
ÕÕ  
,
ÕÕ  !
$num
ÕÕ" #
,
ÕÕ# $
$num
ÕÕ% (
)
ÕÕ( )
,
ÕÕ) *
new
ŒŒ 
Color32
ŒŒ 
(
ŒŒ 
$num
ŒŒ 
,
ŒŒ 
$num
ŒŒ  
,
ŒŒ  !
$num
ŒŒ" %
,
ŒŒ% &
$num
ŒŒ' *
)
ŒŒ* +
,
ŒŒ+ ,
new
œœ 
Color32
œœ 
(
œœ 
$num
œœ 
,
œœ 
$num
œœ 
,
œœ 
$num
œœ !
,
œœ! "
$num
œœ# &
)
œœ& '
,
œœ' (
new
–– 
Color32
–– 
(
–– 
$num
–– 
,
–– 
$num
––  
,
––  !
$num
––" %
,
––% &
$num
––' *
)
––* +
,
––+ ,
new
—— 
Color32
—— 
(
—— 
$num
—— 
,
—— 
$num
——  
,
——  !
$num
——" %
,
——% &
$num
——' *
)
——* +
,
——+ ,
new
““ 
Color32
““ 
(
““ 
$num
““ 
,
““ 
$num
““ 
,
““ 
$num
““ 
,
““  
$num
““! $
)
““$ %
,
““% &
}
”” 	
;
””	 

}
‘‘ 
}’’ Ü 
üD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Selection\SelectFaceLoop.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{		 
sealed

 

class

 
SelectFaceLoop

 
:

  !

MenuAction

" ,
{ 
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
	Selection& /
;/ 0
}1 2
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- J
,J K
IconSkinL T
.T U
ProU X
)X Y
;Y Z
}[ \
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
public 
override 
int 
toolbarPriority +
{ 	
get 
{ 
return 
$num 
; 
} 
} 	
	protected   
override   
bool   
hasFileMenuEntry    0
{!! 	
get"" 
{"" 
return"" 
false"" 
;"" 
}""  !
}## 	
private%% 
static%% 
readonly%% 
TooltipContent%%  .
	s_Tooltip%%/ 8
=%%9 :
new%%; >
TooltipContent%%? M
(&& 
$str'' "
,''" #
$str(( f
))) 
;)) 
public++ 
override++ 

SelectMode++ "
validSelectModes++# 3
{,, 	
get-- 
{-- 
return-- 

SelectMode-- #
.--# $
Face--$ (
|--) *

SelectMode--+ 5
.--5 6
TextureFace--6 A
;--A B
}--C D
}.. 	
public00 
override00 
bool00 
enabled00 $
{11 	
get22 
{22 
return22 
base22 
.22 
enabled22 %
&&22& (
MeshSelection22) 6
.226 7
selectedFaceCount227 H
>22I J
$num22K L
;22L M
}22N O
}33 	
public55 
override55 
ActionResult55 $
DoAction55% -
(55- .
)55. /
{66 	
var77 
	selection77 
=77 
MeshSelection77 )
.77) *
topInternal77* 5
;775 6
UndoUtility99 
.99 
RecordSelection99 '
(99' (
$str99( :
)99: ;
;99; <
foreach;; 
(;; 
ProBuilderMesh;; #
pb;;$ &
in;;' )
	selection;;* 3
);;3 4
{<< 
HashSet== 
<== 
Face== 
>== 
loop== "
===# $
ElementSelection==% 5
.==5 6
GetFaceLoop==6 A
(==A B
pb==B D
,==D E
pb==F H
.==H I!
selectedFacesInternal==I ^
)==^ _
;==_ `
pb>> 
.>> 
SetSelectedFaces>> #
(>># $
loop>>$ (
)>>( )
;>>) *
}?? 
ProBuilderEditorAA 
.AA 
RefreshAA $
(AA$ %
)AA% &
;AA& '
returnCC 
newCC 
ActionResultCC #
(CC# $
ActionResultCC$ 0
.CC0 1
StatusCC1 7
.CC7 8
SuccessCC8 ?
,CC? @
$strCCA S
)CCS T
;CCT U
}DD 	
}EE 
}FF å
íD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\IconImporter.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
sealed

 

class

 
IconImporter

 
:

 
AssetPostprocessor

  2
{ 
public 
void 
OnPreprocessTexture '
(' (
)( )
{ 	
if 
( 
! 
	assetPath 
. 

StartsWith %
(% &
$str& .
). /
)/ 0
return 
; 
if 
( 
	assetPath 
. 
IndexOf !
(! "
$str" 4
,4 5
StringComparison6 F
.F G
OrdinalG N
)N O
<P Q
$numR S
&&T V
	assetPath 
. 
IndexOf !
(! "
$str" ;
,; <
StringComparison= M
.M N
OrdinalN U
)U V
<W X
$numY Z
)Z [
return 
; 
TextureImporter 
ti 
=  
(! "
TextureImporter" 1
)1 2
assetImporter2 ?
;? @
ti 
. 
textureType 
= 
TextureImporterType 0
.0 1
Default1 8
;8 9
ti 
. 
sRGBTexture 
= 
true !
;! "
ti 
. 
textureCompression !
=" #&
TextureImporterCompression$ >
.> ?
Uncompressed? K
;K L
ti 
. 
alphaSource 
= &
TextureImporterAlphaSource 7
.7 8
	FromInput8 A
;A B
ti 
. 
crunchedCompression "
=# $
false% *
;* +
ti   
.   
	npotScale   
=   $
TextureImporterNPOTScale   3
.  3 4
None  4 8
;  8 9
ti!! 
.!! 

filterMode!! 
=!! 

FilterMode!! &
.!!& '
Point!!' ,
;!!, -
ti"" 
."" 
wrapMode"" 
="" 
TextureWrapMode"" )
."") *
Clamp""* /
;""/ 0
ti## 
.## 
mipmapEnabled## 
=## 
false## $
;##$ %
}&& 	
}'' 
}(( πb
¢D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Selection\SelectVertexColor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
SelectVertexColor "
:# $

MenuAction% /
{ 
Pref 
< 
bool 
> '
m_SearchSelectedObjectsOnly .
=/ 0
new1 4
Pref5 9
<9 :
bool: >
>> ?
(? @
$str@ m
,m n
falseo t
)t u
;u v

GUIContent "
gc_restrictToSelection )
=* +
new, /

GUIContent0 :
(: ;
$str; N
,N O
$str	P §
)
§ •
;
• ¶
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str "
," #
$str H
) 
; 
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
	Selection& /
;/ 0
}1 2
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- T
,T U
IconSkinV ^
.^ _
Pro_ b
)b c
;c d
}e f
} 	
public!! 
override!! 
TooltipContent!! &
tooltip!!' .
{"" 	
get## 
{## 
return## 
	s_Tooltip## "
;##" #
}##$ %
}$$ 	
public&& 
override&& 

SelectMode&& "
validSelectModes&&# 3
{'' 	
get(( 
{(( 
return(( 

SelectMode(( #
.((# $
Vertex(($ *
|((+ ,

SelectMode((- 7
.((7 8
Edge((8 <
|((= >

SelectMode((? I
.((I J
Face((J N
|((O P

SelectMode((Q [
.(([ \
TextureFace((\ g
;((g h
}((i j
})) 	
public++ 
override++ 
bool++ 
enabled++ $
{,, 	
get-- 
{-- 
return-- 
base-- 
.-- 
enabled-- %
&&--& (
MeshSelection--) 6
.--6 7
selectedVertexCount--7 J
>--K L
$num--M N
;--N O
}--P Q
}.. 	
	protected00 
override00 
MenuActionState00 *
optionsMenuState00+ ;
{11 	
get22 
{33 
if44 
(44 
enabled44 
)44 
return55 
MenuActionState55 *
.55* +
VisibleAndEnabled55+ <
;55< =
return77 
MenuActionState77 &
.77& '
Visible77' .
;77. /
}88 
}99 	
	protected;; 
override;; 
void;; 
OnSettingsGUI;;  -
(;;- .
);;. /
{<< 	
	GUILayout== 
.== 
Label== 
(== 
$str== <
,==< =
EditorStyles==> J
.==J K
	boldLabel==K T
)==T U
;==U V
	EditorGUI?? 
.?? 
BeginChangeCheck?? &
(??& '
)??' (
;??( )'
m_SearchSelectedObjectsOnly@@ '
.@@' (
value@@( -
=@@. /
EditorGUILayout@@0 ?
.@@? @
Toggle@@@ F
(@@F G"
gc_restrictToSelection@@G ]
,@@] ^'
m_SearchSelectedObjectsOnly@@_ z
)@@z {
;@@{ |
ifBB 
(BB 
	EditorGUIBB 
.BB 
EndChangeCheckBB (
(BB( )
)BB) *
)BB* +
ProBuilderSettingsCC "
.CC" #
SaveCC# '
(CC' (
)CC( )
;CC) *
	GUILayoutEE 
.EE 
FlexibleSpaceEE #
(EE# $
)EE$ %
;EE% &
ifGG 
(GG 
	GUILayoutGG 
.GG 
ButtonGG  
(GG  !
$strGG! 6
)GG6 7
)GG7 8
{HH 
DoActionII 
(II 
)II 
;II 
	SceneViewJJ 
.JJ 

RepaintAllJJ $
(JJ$ %
)JJ% &
;JJ& '
}KK 
}LL 	
publicNN 
overrideNN 
ActionResultNN $
DoActionNN% -
(NN- .
)NN. /
{OO 	
UndoUtilityPP 
.PP 
RecordSelectionPP '
(PP' (
$strPP( I
)PPI J
;PPJ K
HashSetRR 
<RR 
Color32RR 
>RR 
colorsRR #
=RR$ %
newRR& )
HashSetRR* 1
<RR1 2
Color32RR2 9
>RR9 :
(RR: ;
)RR; <
;RR< =
foreachTT 
(TT 
ProBuilderMeshTT #
pbTT$ &
inTT' )
MeshSelectionTT* 7
.TT7 8
topInternalTT8 C
)TTC D
{UU 
ColorVV 
[VV 
]VV 
mesh_colorsVV #
=VV$ %
pbVV& (
.VV( )
colorsInternalVV) 7
;VV7 8
ifXX 
(XX 
mesh_colorsXX 
==XX  "
nullXX# '
||XX( *
mesh_colorsXX+ 6
.XX6 7
LengthXX7 =
!=XX> @
pbXXA C
.XXC D
vertexCountXXD O
)XXO P
continueYY 
;YY 
foreach[[ 
([[ 
int[[ 
i[[ 
in[[ !
pb[[" $
.[[$ %#
selectedIndexesInternal[[% <
)[[< =
colors\\ 
.\\ 
Add\\ 
(\\ 
mesh_colors\\ *
[\\* +
i\\+ ,
]\\, -
)\\- .
;\\. /
}]] 
List__ 
<__ 

GameObject__ 
>__ 
newSelection__ )
=__* +
new__, /
List__0 4
<__4 5

GameObject__5 ?
>__? @
(__@ A
)__A B
;__B C
bool`` 
selectionOnly`` 
=``  '
m_SearchSelectedObjectsOnly``! <
;``< =
IEnumerablebb 
<bb 
ProBuilderMeshbb &
>bb& '
poolbb( ,
;bb, -
ifdd 
(dd 
selectionOnlydd 
)dd 
poolee 
=ee 
MeshSelectionee $
.ee$ %
topInternalee% 0
;ee0 1
elseff 
poolgg 
=gg 
Objectgg 
.gg 
FindObjectsOfTypegg /
<gg/ 0
ProBuilderMeshgg0 >
>gg> ?
(gg? @
)gg@ A
;ggA B
ifjj 
(jj 
colorsjj 
.jj 
Countjj 
==jj 
$numjj  !
)jj! "
{kk 
foreachll 
(ll 
ProBuilderMeshll '
pbll( *
inll+ -
poolll. 2
)ll2 3
{mm 
ifnn 
(nn 
pbnn 
.nn 
colorsInternalnn )
==nn* ,
nullnn- 1
)nn1 2
{oo 
Listpp 
<pp 
Facepp !
>pp! "
matchespp# *
=pp+ ,
newpp- 0
Listpp1 5
<pp5 6
Facepp6 :
>pp: ;
(pp; <
)pp< =
;pp= >
Faceqq 
[qq 
]qq 
facesqq $
=qq% &
pbqq' )
.qq) *
facesInternalqq* 7
;qq7 8
foreachss 
(ss  
varss  #
facess$ (
inss) +
facesss, 1
)ss1 2
{tt 
matchesuu #
.uu# $
Adduu$ '
(uu' (
faceuu( ,
)uu, -
;uu- .
}vv 
ifxx 
(xx 
matchesxx #
.xx# $
Countxx$ )
>xx* +
$numxx, -
)xx- .
{yy 
newSelectionzz (
.zz( )
Addzz) ,
(zz, -
pbzz- /
.zz/ 0

gameObjectzz0 :
)zz: ;
;zz; <
pb{{ 
.{{ 
SetSelectedFaces{{ /
({{/ 0
matches{{0 7
){{7 8
;{{8 9
}|| 
}}} 
}~~ 
} 
else
ÄÄ 
{
ÅÅ 
foreach
ÇÇ 
(
ÇÇ 
ProBuilderMesh
ÇÇ '
pb
ÇÇ( *
in
ÇÇ+ -
pool
ÇÇ. 2
)
ÇÇ2 3
{
ÉÉ 
Color
ÑÑ 
[
ÑÑ 
]
ÑÑ 
mesh_colors
ÑÑ '
=
ÑÑ( )
pb
ÑÑ* ,
.
ÑÑ, -
colorsInternal
ÑÑ- ;
;
ÑÑ; <
if
ÜÜ 
(
ÜÜ 
mesh_colors
ÜÜ #
==
ÜÜ$ &
null
ÜÜ' +
||
ÜÜ, .
mesh_colors
ÜÜ/ :
.
ÜÜ: ;
Length
ÜÜ; A
!=
ÜÜB D
pb
ÜÜE G
.
ÜÜG H
vertexCount
ÜÜH S
)
ÜÜS T
continue
áá  
;
áá  !
List
ââ 
<
ââ 
Face
ââ 
>
ââ 
matches
ââ &
=
ââ' (
new
ââ) ,
List
ââ- 1
<
ââ1 2
Face
ââ2 6
>
ââ6 7
(
ââ7 8
)
ââ8 9
;
ââ9 :
Face
ää 
[
ää 
]
ää 
faces
ää  
=
ää! "
pb
ää# %
.
ää% &
facesInternal
ää& 3
;
ää3 4
for
åå 
(
åå 
int
åå 
i
åå 
=
åå  
$num
åå! "
;
åå" #
i
åå$ %
<
åå& '
faces
åå( -
.
åå- .
Length
åå. 4
;
åå4 5
i
åå6 7
++
åå7 9
)
åå9 :
{
çç 
int
éé 
[
éé 
]
éé 
tris
éé "
=
éé# $
faces
éé% *
[
éé* +
i
éé+ ,
]
éé, -
.
éé- .%
distinctIndexesInternal
éé. E
;
ééE F
for
êê 
(
êê 
int
êê  
n
êê! "
=
êê# $
$num
êê% &
;
êê& '
n
êê( )
<
êê* +
tris
êê, 0
.
êê0 1
Length
êê1 7
;
êê7 8
n
êê9 :
++
êê: <
)
êê< =
{
ëë 
if
íí 
(
íí  
colors
íí  &
.
íí& '
Contains
íí' /
(
íí/ 0
(
íí0 1
Color32
íí1 8
)
íí8 9
mesh_colors
íí9 D
[
ííD E
tris
ííE I
[
ííI J
n
ííJ K
]
ííK L
]
ííL M
)
ííM N
)
ííN O
{
ìì 
matches
îî  '
.
îî' (
Add
îî( +
(
îî+ ,
faces
îî, 1
[
îî1 2
i
îî2 3
]
îî3 4
)
îî4 5
;
îî5 6
break
ïï  %
;
ïï% &
}
ññ 
}
óó 
}
òò 
if
öö 
(
öö 
matches
öö 
.
öö  
Count
öö  %
>
öö& '
$num
öö( )
)
öö) *
{
õõ 
newSelection
úú $
.
úú$ %
Add
úú% (
(
úú( )
pb
úú) +
.
úú+ ,

gameObject
úú, 6
)
úú6 7
;
úú7 8
pb
ùù 
.
ùù 
SetSelectedFaces
ùù +
(
ùù+ ,
matches
ùù, 3
)
ùù3 4
;
ùù4 5
}
ûû 
}
üü 
}
†† 
	Selection
¢¢ 
.
¢¢ 
objects
¢¢ 
=
¢¢ 
newSelection
¢¢  ,
.
¢¢, -
ToArray
¢¢- 4
(
¢¢4 5
)
¢¢5 6
;
¢¢6 7
ProBuilderEditor
§§ 
.
§§ 
Refresh
§§ $
(
§§$ %
)
§§% &
;
§§& '
return
¶¶ 
new
¶¶ 
ActionResult
¶¶ #
(
¶¶# $
ActionResult
¶¶$ 0
.
¶¶0 1
Status
¶¶1 7
.
¶¶7 8
Success
¶¶8 ?
,
¶¶? @
$str
¶¶A b
)
¶¶b c
;
¶¶c d
}
ßß 	
}
®® 
}©© ™(
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\BridgeEdges.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
BridgeEdges 
: 

MenuAction )
{		 
public

 
override

 
ToolbarGroup

 $
group

% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Geometry& .
;. /
}0 1
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- B
,B C
IconSkinD L
.L M
ProM P
)P Q
;Q R
}S T
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str 
, 
$str 7
,7 8
keyCommandAlt 
, 
$char "
) 
; 
public   
override   

SelectMode   "
validSelectModes  # 3
{!! 	
get"" 
{"" 
return"" 

SelectMode"" #
.""# $
Edge""$ (
;""( )
}""* +
}## 	
public%% 
override%% 
bool%% 
enabled%% $
{&& 	
get'' 
{'' 
return'' 
base'' 
.'' 
enabled'' %
&&''& (
MeshSelection'') 6
.''6 7
topInternal''7 B
.''B C
Any''C F
(''F G
x''G H
=>''I K
x''L M
.''M N
selectedEdgeCount''N _
==''` b
$num''c d
)''d e
;''e f
}''g h
}(( 	
public** 
override** 
ActionResult** $
DoAction**% -
(**- .
)**. /
{++ 	
if,, 
(,, 
MeshSelection,, 
.,, 
selectedObjectCount,, 1
<,,2 3
$num,,4 5
),,5 6
return-- 
ActionResult-- #
.--# $
NoSelection--$ /
;--/ 0
UndoUtility// 
.// 
RecordSelection// '
(//' (
$str//( 6
)//6 7
;//7 8
bool11 
success11 
=11 
false11  
;11  !
foreach33 
(33 
var33 
mesh33 
in33  
MeshSelection33! .
.33. /
topInternal33/ :
)33: ;
{44 
if55 
(55 
mesh55 
.55 
selectedEdgeCount55 *
==55+ -
$num55. /
)55/ 0
{66 
if77 
(77 
mesh77 
.77 
Bridge77 #
(77# $
mesh77$ (
.77( )
selectedEdges77) 6
[776 7
$num777 8
]778 9
,779 :
mesh77; ?
.77? @
selectedEdges77@ M
[77M N
$num77N O
]77O P
,77P Q
ProBuilderEditor77R b
.77b c%
s_AllowNonManifoldActions77c |
)77| }
!=	77~ Ä
null
77Å Ö
)
77Ö Ü
{88 
success99 
=99  !
true99" &
;99& '
mesh:: 
.:: 
ToMesh:: #
(::# $
)::$ %
;::% &
mesh;; 
.;; 
Refresh;; $
(;;$ %
);;% &
;;;& '
mesh<< 
.<< 
Optimize<< %
(<<% &
)<<& '
;<<' (
}== 
}>> 
}?? 
ifAA 
(AA 
successAA 
)AA 
{BB 
ProBuilderEditorCC  
.CC  !
RefreshCC! (
(CC( )
)CC) *
;CC* +
returnDD 
newDD 
ActionResultDD '
(DD' (
ActionResultDD( 4
.DD4 5
StatusDD5 ;
.DD; <
SuccessDD< C
,DDC D
$strDDE S
)DDS T
;DDT U
}EE 
elseFF 
{GG 
DebugHH 
.HH 

LogWarningHH  
(HH  !
$str	HH! Æ
)
HHÆ Ø
;
HHØ ∞
returnII 
newII 
ActionResultII '
(II' (
ActionResultII( 4
.II4 5
StatusII5 ;
.II; <
FailureII< C
,IIC D
$str	IIE º
)
IIº Ω
;
IIΩ æ
}JJ 
}KK 	
}LL 
}MM æ§
êD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\MenuAction.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
{

 
public 

abstract 
class 

MenuAction $
{ 
[ 	
System	 
. 
Flags 
] 
public 
enum 
MenuActionState #
{ 	
Hidden 
= 
$num 
, 
Visible 
= 
$num 
, 
Enabled!! 
=!! 
$num!! 
,!! 
VisibleAndEnabled%% 
=%% 
$num%%  #
}&& 	
;&&	 

internal.. 
const.. 
string.. 
probuilderMenuPath.. 0
=..1 2
$str..3 F
;..F G
internal33 
const33 
char33 
keyCommandSuper33 +
=33, -
PreferenceKeys33. <
.33< =
	CMD_SUPER33= F
;33F G
internal88 
const88 
char88 
keyCommandShift88 +
=88, -
PreferenceKeys88. <
.88< =
	CMD_SHIFT88= F
;88F G
internal>> 
const>> 
char>> 
keyCommandOption>> ,
=>>- .
PreferenceKeys>>/ =
.>>= >

CMD_OPTION>>> H
;>>H I
internalCC 
constCC 
charCC 
keyCommandAltCC )
=CC* +
PreferenceKeysCC, :
.CC: ;
CMD_ALTCC; B
;CCB C
internalHH 
constHH 
charHH 
keyCommandDeleteHH ,
=HH- .
PreferenceKeysHH/ =
.HH= >

CMD_DELETEHH> H
;HHH I
staticJJ 
readonlyJJ 

GUIContentJJ "
AltButtonContentJJ# 3
=JJ4 5
newJJ6 9

GUIContentJJ: D
(JJD E
$strJJE H
,JJH I
$strJJJ L
)JJL M
;JJM N
staticLL 
readonlyLL 
Vector2LL 
AltButtonSizeLL  -
=LL. /
newLL0 3
Vector2LL4 ;
(LL; <
$numLL< >
,LL> ?
$numLL@ A
)LLA B
;LLB C
Vector2NN  
m_LastCalculatedSizeNN $
=NN% &
Vector2NN' .
.NN. /
zeroNN/ 3
;NN3 4
	protectedPP 

MenuActionPP 
(PP 
)PP 
{QQ 	
iconModeRR 
=RR 
ProBuilderEditorRR '
.RR' (
s_IsIconGuiRR( 3
;RR3 4
}SS 	
internal[[ 
static[[ 
int[[ ,
 CompareActionsByGroupAndPriority[[ <
([[< =

MenuAction[[= G
left[[H L
,[[L M

MenuAction[[N X
right[[Y ^
)[[^ _
{\\ 	
if]] 
(]] 
left]] 
==]] 
null]] 
)]] 
{^^ 
if__ 
(__ 
right__ 
==__ 
null__ !
)__! "
return`` 
$num`` 
;`` 
elseaa 
returnbb 
-bb 
$numbb 
;bb 
}cc 
elsedd 
{ee 
ifff 
(ff 
rightff 
==ff 
nullff !
)ff! "
{gg 
returnhh 
$numhh 
;hh 
}ii 
elsejj 
{kk 
intll 
lll 
=ll 
(ll 
intll  
)ll  !
leftll! %
.ll% &
groupll& +
,ll+ ,
rll- .
=ll/ 0
(ll1 2
intll2 5
)ll5 6
rightll6 ;
.ll; <
groupll< A
;llA B
ifnn 
(nn 
lnn 
<nn 
rnn 
)nn 
returnoo 
-oo  
$numoo  !
;oo! "
elsepp 
ifpp 
(pp 
lpp 
>pp  
rpp! "
)pp" #
returnqq 
$numqq  
;qq  !
elserr 
{ss 
inttt 
lptt 
=tt  
lefttt! %
.tt% &
toolbarPrioritytt& 5
<tt6 7
$numtt8 9
?tt: ;
inttt< ?
.tt? @
MaxValuett@ H
:ttI J
leftttK O
.ttO P
toolbarPriorityttP _
,tt_ `
rpuu 
=uu  
rightuu! &
.uu& '
toolbarPriorityuu' 6
<uu7 8
$numuu9 :
?uu; <
intuu= @
.uu@ A
MaxValueuuA I
:uuJ K
rightuuL Q
.uuQ R
toolbarPriorityuuR a
;uua b
returnww 
lpww !
.ww! "
	CompareToww" +
(ww+ ,
rpww, .
)ww. /
;ww/ 0
}xx 
}yy 
}zz 
}{{ 	
	Texture2D}} 
m_DesaturatedIcon}} #
=}}$ %
null}}& *
;}}* +
	protected
ÇÇ 
virtual
ÇÇ 
	Texture2D
ÇÇ #
disabledIcon
ÇÇ$ 0
{
ÉÉ 	
get
ÑÑ 
{
ÖÖ 
if
ÜÜ 
(
ÜÜ 
m_DesaturatedIcon
ÜÜ %
==
ÜÜ& (
null
ÜÜ) -
)
ÜÜ- .
{
áá 
if
àà 
(
àà 
icon
àà 
==
àà 
null
àà  $
)
àà$ %
return
ââ 
null
ââ #
;
ââ# $
m_DesaturatedIcon
ãã %
=
ãã& '
IconUtility
ãã( 3
.
ãã3 4
GetIcon
ãã4 ;
(
ãã; <
string
ãã< B
.
ããB C
Format
ããC I
(
ããI J
$str
ããJ `
,
ãã` a
icon
ããb f
.
ããf g
name
ããg k
)
ããk l
)
ããl m
;
ããm n
}
ëë 
return
ìì 
m_DesaturatedIcon
ìì (
;
ìì( )
}
îî 
}
ïï 	
public
öö 
abstract
öö 
ToolbarGroup
öö $
group
öö% *
{
öö+ ,
get
öö- 0
;
öö0 1
}
öö2 3
public
¢¢ 
virtual
¢¢ 
int
¢¢ 
toolbarPriority
¢¢ *
{
¢¢+ ,
get
¢¢- 0
{
¢¢1 2
return
¢¢3 9
-
¢¢: ;
$num
¢¢; <
;
¢¢< =
}
¢¢> ?
}
¢¢@ A
public
™™ 
abstract
™™ 
	Texture2D
™™ !
icon
™™" &
{
™™' (
get
™™) ,
;
™™, -
}
™™. /
public
ØØ 
abstract
ØØ 
TooltipContent
ØØ &
tooltip
ØØ' .
{
ØØ/ 0
get
ØØ1 4
;
ØØ4 5
}
ØØ6 7
public
∑∑ 
virtual
∑∑ 
string
∑∑ 
	menuTitle
∑∑ '
{
∑∑( )
get
∑∑* -
{
∑∑. /
return
∑∑0 6
tooltip
∑∑7 >
.
∑∑> ?
title
∑∑? D
;
∑∑D E
}
∑∑F G
}
∑∑H I
	protected
ºº 
virtual
ºº 
bool
ºº 
hasFileMenuEntry
ºº /
{
ºº0 1
get
ºº2 5
{
ºº6 7
return
ºº8 >
true
ºº? C
;
ººC D
}
ººE F
}
ººG H
public
¬¬ 
MenuActionState
¬¬ 
menuActionState
¬¬ .
{
√√ 	
get
ƒƒ 
{
≈≈ 
if
∆∆ 
(
∆∆ 
hidden
∆∆ 
)
∆∆ 
return
«« 
MenuActionState
«« *
.
««* +
Hidden
««+ 1
;
««1 2
if
»» 
(
»» 
enabled
»» 
)
»» 
return
…… 
MenuActionState
…… *
.
……* +
VisibleAndEnabled
……+ <
;
……< =
return
   
MenuActionState
   &
.
  & '
Visible
  ' .
;
  . /
}
ÀÀ 
}
ÃÃ 	
public
—— 
virtual
—— 

SelectMode
—— !
validSelectModes
——" 2
{
““ 	
get
”” 
{
”” 
return
”” 

SelectMode
”” #
.
””# $
Any
””$ '
;
””' (
}
””) *
}
‘‘ 	
public
€€ 
virtual
€€ 
bool
€€ 
enabled
€€ #
{
‹‹ 	
get
›› 
{
ﬁﬁ 
return
ﬂﬂ 
ProBuilderEditor
ﬂﬂ '
.
ﬂﬂ' (
instance
ﬂﬂ( 0
!=
ﬂﬂ1 3
null
ﬂﬂ4 8
&&
‡‡ 
ProBuilderEditor
‡‡ '
.
‡‡' (

selectMode
‡‡( 2
.
‡‡2 3
ContainsFlag
‡‡3 ?
(
‡‡? @
validSelectModes
‡‡@ P
)
‡‡P Q
&&
·· 
!
·· 
ProBuilderEditor
·· (
.
··( )

selectMode
··) 3
.
··3 4
ContainsFlag
··4 @
(
··@ A

SelectMode
··A K
.
··K L
	InputTool
··L U
)
··U V
;
··V W
}
‚‚ 
}
„„ 	
public
ÎÎ 
virtual
ÎÎ 
bool
ÎÎ 
hidden
ÎÎ "
{
ÏÏ 	
get
ÌÌ 
{
ÌÌ 
return
ÌÌ 
!
ÌÌ 
ProBuilderEditor
ÌÌ *
.
ÌÌ* +

selectMode
ÌÌ+ 5
.
ÌÌ5 6
ContainsFlag
ÌÌ6 B
(
ÌÌB C
validSelectModes
ÌÌC S
)
ÌÌS T
;
ÌÌT U
}
ÌÌV W
}
ÓÓ 	
	protected
ÙÙ 
virtual
ÙÙ 
MenuActionState
ÙÙ )
optionsMenuState
ÙÙ* :
{
ıı 	
get
ˆˆ 
{
ˆˆ 
return
ˆˆ 
MenuActionState
ˆˆ (
.
ˆˆ( )
Hidden
ˆˆ) /
;
ˆˆ/ 0
}
ˆˆ1 2
}
˜˜ 	
public
˝˝ 
abstract
˝˝ 
ActionResult
˝˝ $
DoAction
˝˝% -
(
˝˝- .
)
˝˝. /
;
˝˝/ 0
	protected
ˇˇ 
virtual
ˇˇ 
void
ˇˇ 
DoAlternateAction
ˇˇ 0
(
ˇˇ0 1
)
ˇˇ1 2
{
ÄÄ 	

MenuOption
ÅÅ 
.
ÅÅ 
Show
ÅÅ 
(
ÅÅ 
OnSettingsGUI
ÅÅ )
,
ÅÅ) *
OnSettingsEnable
ÅÅ+ ;
,
ÅÅ; <
OnSettingsDisable
ÅÅ= N
)
ÅÅN O
;
ÅÅO P
}
ÇÇ 	
	protected
áá 
virtual
áá 
void
áá 
OnSettingsGUI
áá ,
(
áá, -
)
áá- .
{
áá/ 0
}
áá0 1
	protected
åå 
virtual
åå 
void
åå 
OnSettingsEnable
åå /
(
åå/ 0
)
åå0 1
{
åå2 3
}
åå3 4
	protected
ëë 
virtual
ëë 
void
ëë 
OnSettingsDisable
ëë 0
(
ëë0 1
)
ëë1 2
{
ëë3 4
}
ëë4 5
	protected
ìì 
bool
ìì 
iconMode
ìì 
{
ìì  !
get
ìì" %
;
ìì% &
set
ìì' *
;
ìì* +
}
ìì, -
internal
ùù 
bool
ùù 
DoButton
ùù 
(
ùù 
bool
ùù #
isHorizontal
ùù$ 0
,
ùù0 1
bool
ùù2 6
showOptions
ùù7 B
,
ùùB C
ref
ùùD G
Rect
ùùH L
optionsRect
ùùM X
,
ùùX Y
params
ùùZ `
GUILayoutOption
ùùa p
[
ùùp q
]
ùùq r
layoutOptionsùùs Ä
)ùùÄ Å
{
ûû 	
bool
üü 

wasEnabled
üü 
=
üü 
GUI
üü !
.
üü! "
enabled
üü" )
;
üü) *
bool
†† 
buttonEnabled
†† 
=
††  
(
††! "
menuActionState
††" 1
&
††2 3
MenuActionState
††4 C
.
††C D
Enabled
††D K
)
††K L
==
††M O
MenuActionState
††P _
.
††_ `
Enabled
††` g
;
††g h
GUI
¢¢ 
.
¢¢ 
enabled
¢¢ 
=
¢¢ 
buttonEnabled
¢¢ '
;
¢¢' (
GUI
§§ 
.
§§ 
backgroundColor
§§ 
=
§§  !
Color
§§" '
.
§§' (
white
§§( -
;
§§- .
if
¶¶ 
(
¶¶ 
iconMode
¶¶ 
)
¶¶ 
{
ßß 
if
®® 
(
®® 
	GUILayout
®® 
.
®® 
Button
®® $
(
®®$ %
buttonEnabled
®®% 2
||
®®3 5
!
®®6 7
disabledIcon
®®7 C
?
®®D E
icon
®®F J
:
®®K L
disabledIcon
®®M Y
,
®®Y Z!
ToolbarGroupUtility
®®[ n
.
®®n o
GetStyle
®®o w
(
®®w x
group
®®x }
,
®®} ~
isHorizontal®® ã
)®®ã å
,®®å ç
layoutOptions®®é õ
)®®õ ú
)®®ú ù
{
©© 
if
™™ 
(
™™ 
showOptions
™™ #
&&
™™$ &
(
™™' (
optionsMenuState
™™( 8
&
™™9 :
MenuActionState
™™; J
.
™™J K
VisibleAndEnabled
™™K \
)
™™\ ]
==
™™^ `
MenuActionState
™™a p
.
™™p q 
VisibleAndEnabled™™q Ç
)™™Ç É
{
´´ 
DoAlternateAction
¨¨ )
(
¨¨) *
)
¨¨* +
;
¨¨+ ,
}
≠≠ 
else
ÆÆ 
{
ØØ 
ActionResult
∞∞ $
result
∞∞% +
=
∞∞, -
DoAction
∞∞. 6
(
∞∞6 7
)
∞∞7 8
;
∞∞8 9
EditorUtility
±± %
.
±±% &
ShowNotification
±±& 6
(
±±6 7
result
±±7 =
.
±±= >
notification
±±> J
)
±±J K
;
±±K L
}
≤≤ 
}
≥≥ 
if
µµ 
(
µµ 
(
µµ 
optionsMenuState
µµ %
&
µµ& '
MenuActionState
µµ( 7
.
µµ7 8
VisibleAndEnabled
µµ8 I
)
µµI J
==
µµK M
MenuActionState
µµN ]
.
µµ] ^
VisibleAndEnabled
µµ^ o
)
µµo p
{
∂∂ 
Rect
∑∑ 
r
∑∑ 
=
∑∑ 
GUILayoutUtility
∑∑ -
.
∑∑- .
GetLastRect
∑∑. 9
(
∑∑9 :
)
∑∑: ;
;
∑∑; <
r
∏∏ 
.
∏∏ 
x
∏∏ 
=
∏∏ 
r
∏∏ 
.
∏∏ 
x
∏∏ 
+
∏∏ 
r
∏∏  !
.
∏∏! "
width
∏∏" '
-
∏∏( )
$num
∏∏* ,
;
∏∏, -
r
ππ 
.
ππ 
y
ππ 
+=
ππ 
$num
ππ 
;
ππ 
r
∫∫ 
.
∫∫ 
width
∫∫ 
=
∫∫ 
$num
∫∫  
;
∫∫  !
r
ªª 
.
ªª 
height
ªª 
=
ªª 
$num
ªª !
;
ªª! "
GUI
ºº 
.
ºº 
Label
ºº 
(
ºº 
r
ºº 
,
ºº  
IconUtility
ºº! ,
.
ºº, -
GetIcon
ºº- 4
(
ºº4 5
$str
ºº5 F
,
ººF G
IconSkin
ººH P
.
ººP Q
Pro
ººQ T
)
ººT U
,
ººU V
GUIStyle
ººW _
.
ºº_ `
none
ºº` d
)
ººd e
;
ººe f
optionsRect
ΩΩ 
=
ΩΩ  !
r
ΩΩ" #
;
ΩΩ# $
GUI
ææ 
.
ææ 
enabled
ææ 
=
ææ  !

wasEnabled
ææ" ,
;
ææ, -
return
øø 
buttonEnabled
øø (
;
øø( )
}
¿¿ 
else
¡¡ 
{
¬¬ 
GUI
√√ 
.
√√ 
enabled
√√ 
=
√√  !

wasEnabled
√√" ,
;
√√, -
return
ƒƒ 
false
ƒƒ  
;
ƒƒ  !
}
≈≈ 
}
∆∆ 
else
«« 
{
»» 
isHorizontal
   
=
   
false
   $
;
  $ %
	GUILayout
ÀÀ 
.
ÀÀ 
BeginHorizontal
ÀÀ )
(
ÀÀ) *
MenuActionStyles
ÀÀ* :
.
ÀÀ: ;
rowStyleVertical
ÀÀ; K
,
ÀÀK L
layoutOptions
ÀÀM Z
)
ÀÀZ [
;
ÀÀ[ \
GUI
ÕÕ 
.
ÕÕ 
backgroundColor
ÕÕ #
=
ÕÕ$ %!
ToolbarGroupUtility
ÕÕ& 9
.
ÕÕ9 :
GetColor
ÕÕ: B
(
ÕÕB C
group
ÕÕC H
)
ÕÕH I
;
ÕÕI J
if
œœ 
(
œœ 
	GUILayout
œœ 
.
œœ 
Button
œœ $
(
œœ$ %
	menuTitle
œœ% .
,
œœ. /
MenuActionStyles
œœ0 @
.
œœ@ A!
buttonStyleVertical
œœA T
)
œœT U
)
œœU V
{
–– 
ActionResult
——  
res
——! $
=
——% &
DoAction
——' /
(
——/ 0
)
——0 1
;
——1 2
EditorUtility
““ !
.
““! "
ShowNotification
““" 2
(
““2 3
res
““3 6
.
““6 7
notification
““7 C
)
““C D
;
““D E
}
”” 
MenuActionState
‘‘ 
altState
‘‘  (
=
‘‘) *
optionsMenuState
‘‘+ ;
;
‘‘; <
if
÷÷ 
(
÷÷ 
(
÷÷ 
altState
÷÷ 
&
÷÷ 
MenuActionState
÷÷  /
.
÷÷/ 0
Visible
÷÷0 7
)
÷÷7 8
==
÷÷9 ;
MenuActionState
÷÷< K
.
÷÷K L
Visible
÷÷L S
)
÷÷S T
{
◊◊ 
GUI
ÿÿ 
.
ÿÿ 
enabled
ÿÿ 
=
ÿÿ  !
GUI
ÿÿ" %
.
ÿÿ% &
enabled
ÿÿ& -
&&
ÿÿ. 0
(
ÿÿ1 2
altState
ÿÿ2 :
&
ÿÿ; <
MenuActionState
ÿÿ= L
.
ÿÿL M
Enabled
ÿÿM T
)
ÿÿT U
==
ÿÿV X
MenuActionState
ÿÿY h
.
ÿÿh i
Enabled
ÿÿi p
;
ÿÿp q
if
⁄⁄ 
(
⁄⁄ 
DoAltButton
⁄⁄ #
(
⁄⁄# $
	GUILayout
⁄⁄$ -
.
⁄⁄- .
MaxWidth
⁄⁄. 6
(
⁄⁄6 7
$num
⁄⁄7 9
)
⁄⁄9 :
,
⁄⁄: ;
	GUILayout
⁄⁄< E
.
⁄⁄E F
	MaxHeight
⁄⁄F O
(
⁄⁄O P
$num
⁄⁄P R
)
⁄⁄R S
)
⁄⁄S T
)
⁄⁄T U
DoAlternateAction
€€ )
(
€€) *
)
€€* +
;
€€+ ,
}
‹‹ 
	GUILayout
›› 
.
›› 
EndHorizontal
›› '
(
››' (
)
››( )
;
››) *
GUI
ﬂﬂ 
.
ﬂﬂ 
backgroundColor
ﬂﬂ #
=
ﬂﬂ$ %
Color
ﬂﬂ& +
.
ﬂﬂ+ ,
white
ﬂﬂ, 1
;
ﬂﬂ1 2
GUI
·· 
.
·· 
enabled
·· 
=
·· 

wasEnabled
·· (
;
··( )
return
„„ 
false
„„ 
;
„„ 
}
‰‰ 
}
ÂÂ 	
bool
ÁÁ 
DoAltButton
ÁÁ 
(
ÁÁ 
params
ÁÁ 
GUILayoutOption
ÁÁ  /
[
ÁÁ/ 0
]
ÁÁ0 1
options
ÁÁ2 9
)
ÁÁ9 :
{
ËË 	
return
ÈÈ 
	GUILayout
ÈÈ 
.
ÈÈ 
Button
ÈÈ #
(
ÈÈ# $
AltButtonContent
ÈÈ$ 4
,
ÈÈ4 5
MenuActionStyles
ÈÈ6 F
.
ÈÈF G
altButtonStyle
ÈÈG U
,
ÈÈU V
options
ÈÈW ^
)
ÈÈ^ _
;
ÈÈ_ `
}
ÍÍ 	
internal
ÒÒ 
Vector2
ÒÒ 
GetSize
ÒÒ  
(
ÒÒ  !
bool
ÒÒ! %
isHorizontal
ÒÒ& 2
)
ÒÒ2 3
{
ÚÚ 	
if
ÛÛ 
(
ÛÛ 
iconMode
ÛÛ 
)
ÛÛ 
{
ÙÙ "
m_LastCalculatedSize
ıı $
=
ıı% &!
ToolbarGroupUtility
ıı' :
.
ıı: ;
GetStyle
ıı; C
(
ııC D
ToolbarGroup
ııD P
.
ııP Q
Object
ııQ W
,
ııW X
isHorizontal
ııY e
)
ııe f
.
ııf g
CalcSize
ııg o
(
ııo p
UI
ııp r
.
ıır s
EditorGUIUtilityııs É
.ııÉ Ñ
TempContentııÑ è
(ııè ê
nullııê î
,ııî ï
nullııñ ö
,ııö õ
iconııú †
)ıı† °
)ıı° ¢
;ıı¢ £
}
ˆˆ 
else
˜˜ 
{
¯¯ 
isHorizontal
˙˙ 
=
˙˙ 
false
˙˙ $
;
˙˙$ %"
m_LastCalculatedSize
˚˚ $
=
˚˚% &
MenuActionStyles
˚˚' 7
.
˚˚7 8!
buttonStyleVertical
˚˚8 K
.
˚˚K L
CalcSize
˚˚L T
(
˚˚T U
UI
˚˚U W
.
˚˚W X
EditorGUIUtility
˚˚X h
.
˚˚h i
TempContent
˚˚i t
(
˚˚t u
	menuTitle
˚˚u ~
)
˚˚~ 
)˚˚ Ä
+˚˚Å Ç
AltButtonSize˚˚É ê
;˚˚ê ë
}
¸¸ 
return
˝˝ "
m_LastCalculatedSize
˝˝ '
;
˝˝' (
}
˛˛ 	
}
ˇˇ 
}ÄÄ í´
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\EditorMeshUtility.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
{

 
public 

static 
class 
EditorMeshUtility )
{ 
const 
string $
k_MeshCacheDirectoryName -
=. /
$str0 E
;E F
static 
string  
k_MeshCacheDirectory *
=+ ,
$str- Y
;Y Z
[ 	
UserSetting	 
( 
$str #
,# $
$str% <
,< =
$str> |
)| }
]} ~
static 
Pref 
< 
bool 
> "
s_AutoResizeCollisions 0
=1 2
new3 6
Pref7 ;
<; <
bool< @
>@ A
(A B
$strB d
,d e
falsef k
,k l
SettingsScopem z
.z {
Project	{ Ç
)
Ç É
;
É Ñ
public 
static 
event 
Action "
<" #
ProBuilderMesh# 1
,1 2
Mesh3 7
>7 8
meshOptimized9 F
=G H
nullI M
;M N
public"" 
static"" 
void"" 
Optimize"" #
(""# $
this""$ (
ProBuilderMesh"") 7
mesh""8 <
,""< =
bool""> B
generateLightmapUVs""C V
=""W X
false""Y ^
)""^ _
{## 	
if$$ 
($$ 
mesh$$ 
==$$ 
null$$ 
)$$ 
throw%% 
new%% !
ArgumentNullException%% /
(%%/ 0
$str%%0 6
)%%6 7
;%%7 8
Mesh'' 
umesh'' 
='' 
mesh'' 
.'' 
mesh'' "
;''" #
if)) 
()) 
umesh)) 
==)) 
null)) 
||))  
umesh))! &
.))& '
vertexCount))' 2
<))3 4
$num))5 6
)))6 7
return** 
;** 
bool,, 
skipMeshProcessing,, #
=,,$ %
false,,& +
;,,+ ,
for// 
(// 
int// 
i// 
=// 
$num// 
;// 
!// 
skipMeshProcessing// /
&&//0 2
i//3 4
<//5 6
umesh//7 <
.//< =
subMeshCount//= I
;//I J
i//K L
++//L N
)//N O
if00 
(00 
umesh00 
.00 
GetTopology00 %
(00% &
i00& '
)00' (
!=00) +
MeshTopology00, 8
.008 9
	Triangles009 B
)00B C
skipMeshProcessing11 &
=11' (
true11) -
;11- .
if33 
(33 
!33 
skipMeshProcessing33 #
)33# $
{44 
bool55 
autoLightmap55 !
=55" #
Lightmapping55$ 0
.550 1 
autoUnwrapLightmapUV551 E
;55E F
bool88 
lightmapUVs88  
=88! "
generateLightmapUVs88# 6
||887 9
(88: ;
autoLightmap88; G
&&88H J
mesh88K O
.88O P

gameObject88P Z
.88Z [
HasStaticFlag88[ h
(88h i
StaticEditorFlags88i z
.88z {
ContributeGI	88{ á
)
88á à
)
88à â
;
88â ä
if@@ 
(@@ 
lightmapUVs@@ 
)@@  
{AA 
VertexBB 
[BB 
]BB 
verticesBB %
=BB& '
UnityEngineBB( 3
.BB3 4

ProBuilderBB4 >
.BB> ?
MeshUtilityBB? J
.BBJ K#
GeneratePerTriangleMeshBBK b
(BBb c
umeshBBc h
)BBh i
;BBi j
floatDD 
timeDD 
=DD  
TimeDD! %
.DD% & 
realtimeSinceStartupDD& :
;DD: ;
UnwrapParamFF 
unwrapFF  &
=FF' (
LightmappingFF) 5
.FF5 6
GetUnwrapParamFF6 D
(FFD E
meshFFE I
.FFI J
unwrapParametersFFJ Z
)FFZ [
;FF[ \
Vector2HH 
[HH 
]HH 
uv2HH !
=HH" #

UnwrappingHH$ .
.HH. /!
GeneratePerTriangleUVHH/ D
(HHD E
umeshHHE J
,HHJ K
unwrapHHL R
)HHR S
;HHS T
ifKK 
(KK 
(KK 
TimeKK 
.KK  
realtimeSinceStartupKK 2
-KK3 4
timeKK5 9
)KK9 :
>KK; <
$numKK= ?
)KK? @
LogLL 
.LL 
WarningLL #
(LL# $
stringLL$ *
.LL* +
FormatLL+ 1
(LL1 2
$str	LL2 º
,
LLº Ω
mesh
LLæ ¬
.
LL¬ √
name
LL√ «
,
LL« »
(
LL…  
Time
LL  Œ
.
LLŒ œ"
realtimeSinceStartup
LLœ „
-
LL‰ Â
time
LLÊ Í
)
LLÍ Î
.
LLÎ Ï
ToString
LLÏ Ù
(
LLÙ ı
$str
LLı ˘
)
LL˘ ˙
)
LL˙ ˚
)
LL˚ ¸
;
LL¸ ˝
ifNN 
(NN 
uv2NN 
.NN 
LengthNN "
==NN# %
verticesNN& .
.NN. /
LengthNN/ 5
)NN5 6
{OO 
forPP 
(PP 
intPP  
iPP! "
=PP# $
$numPP% &
;PP& '
iPP( )
<PP* +
uv2PP, /
.PP/ 0
LengthPP0 6
;PP6 7
iPP8 9
++PP9 ;
)PP; <
verticesQQ $
[QQ$ %
iQQ% &
]QQ& '
.QQ' (
uv2QQ( +
=QQ, -
uv2QQ. 1
[QQ1 2
iQQ2 3
]QQ3 4
;QQ4 5
}RR 
elseSS 
{TT 
LogUU 
.UU 
WarningUU #
(UU# $
$strUU$ m
)UUm n
;UUn o
}VV 
UnityEngineXX 
.XX  

ProBuilderXX  *
.XX* +
MeshUtilityXX+ 6
.XX6 7"
CollapseSharedVerticesXX7 M
(XXM N
umeshXXN S
,XXS T
verticesXXU ]
)XX] ^
;XX^ _
}YY 
elseZZ 
{[[ 
UnityEngine\\ 
.\\  

ProBuilder\\  *
.\\* +
MeshUtility\\+ 6
.\\6 7"
CollapseSharedVertices\\7 M
(\\M N
umesh\\N S
)\\S T
;\\T U
}]] 
}^^ 
if`` 
(`` "
s_AutoResizeCollisions`` &
)``& '
RebuildCollidersaa  
(aa  !
meshaa! %
)aa% &
;aa& '
ifcc 
(cc 
meshOptimizedcc 
!=cc  
nullcc! %
)cc% &
meshOptimizeddd 
(dd 
meshdd "
,dd" #
umeshdd$ )
)dd) *
;dd* +
ifff 
(ff 
Experimentalff 
.ff 
meshesAreAssetsff ,
)ff, -
TryCacheMeshgg 
(gg 
meshgg !
)gg! "
;gg" #
UnityEditorii 
.ii 
EditorUtilityii %
.ii% &
SetDirtyii& .
(ii. /
meshii/ 3
)ii3 4
;ii4 5
}jj 	
internalll 
staticll 
voidll 
TryCacheMeshll )
(ll) *
ProBuilderMeshll* 8
pbll9 ;
)ll; <
{mm 	
Meshnn 
meshnn 
=nn 
pbnn 
.nn 
meshnn 
;nn  
stringrr 
meshAssetPathrr  
=rr! "
AssetDatabaserr# 0
.rr0 1
GetAssetPathrr1 =
(rr= >
meshrr> B
)rrB C
;rrC D
ifvv 
(vv 
stringvv 
.vv 
IsNullOrEmptyvv $
(vv$ %
meshAssetPathvv% 2
)vv2 3
)vv3 4
{ww 
stringyy 
guidyy 
=yy 
pbyy  
.yy  !
	assetGuidyy! *
;yy* +
if{{ 
({{ 
string{{ 
.{{ 
IsNullOrEmpty{{ (
({{( )
guid{{) -
){{- .
){{. /
{|| 
guid}} 
=}} 
Guid}} 
.}}  
NewGuid}}  '
(}}' (
)}}( )
.}}) *
ToString}}* 2
(}}2 3
$str}}3 6
)}}6 7
;}}7 8
pb~~ 
.~~ 
	assetGuid~~  
=~~! "
guid~~# '
;~~' (
} 
string
ÅÅ  
meshCacheDirectory
ÅÅ )
=
ÅÅ* +#
GetMeshCacheDirectory
ÅÅ, A
(
ÅÅA B
true
ÅÅB F
)
ÅÅF G
;
ÅÅG H
string
ÉÉ 
path
ÉÉ 
=
ÉÉ 
string
ÉÉ $
.
ÉÉ$ %
Format
ÉÉ% +
(
ÉÉ+ ,
$str
ÉÉ, ;
,
ÉÉ; < 
meshCacheDirectory
ÉÉ= O
,
ÉÉO P
guid
ÉÉQ U
)
ÉÉU V
;
ÉÉV W
Mesh
ÖÖ 
m
ÖÖ 
=
ÖÖ 
AssetDatabase
ÖÖ &
.
ÖÖ& '
LoadAssetAtPath
ÖÖ' 6
<
ÖÖ6 7
Mesh
ÖÖ7 ;
>
ÖÖ; <
(
ÖÖ< =
path
ÖÖ= A
)
ÖÖA B
;
ÖÖB C
if
àà 
(
àà 
m
àà 
!=
àà 
null
àà 
)
àà 
{
ââ 
if
ää 
(
ää 
mesh
ää 
!=
ää 
m
ää  !
)
ää! "
{
ãã 
if
çç 
(
çç 
EditorUtility
çç )
.
çç) *
IsPrefabInstance
çç* :
(
çç: ;
pb
çç; =
.
çç= >

gameObject
çç> H
)
ççH I
||
ççJ L
EditorUtility
ççM Z
.
ççZ [
IsPrefabAsset
çç[ h
(
ççh i
pb
ççi k
.
ççk l

gameObject
ççl v
)
ççv w
)
ççw x
{
éé 
UnityEngine
íí '
.
íí' (

ProBuilder
íí( 2
.
íí2 3
MeshUtility
íí3 >
.
íí> ?
CopyTo
íí? E
(
ííE F
mesh
ííF J
,
ííJ K
m
ííL M
)
ííM N
;
ííN O
UnityEngine
îî '
.
îî' (
Object
îî( .
.
îî. /
DestroyImmediate
îî/ ?
(
îî? @
mesh
îî@ D
)
îîD E
;
îîE F
pb
ïï 
.
ïï 

gameObject
ïï )
.
ïï) *
GetComponent
ïï* 6
<
ïï6 7

MeshFilter
ïï7 A
>
ïïA B
(
ïïB C
)
ïïC D
.
ïïD E

sharedMesh
ïïE O
=
ïïP Q
m
ïïR S
;
ïïS T
pb
òò 
.
òò 
Refresh
òò &
(
òò& '
RefreshMask
òò' 2
.
òò2 3

Collisions
òò3 =
)
òò= >
;
òò> ?
return
öö "
;
öö" #
}
õõ 
else
úú 
{
ùù 
pb
†† 
.
†† 
	assetGuid
†† (
=
††) *
Guid
††+ /
.
††/ 0
NewGuid
††0 7
(
††7 8
)
††8 9
.
††9 :
ToString
††: B
(
††B C
$str
††C F
)
††F G
;
††G H
path
°°  
=
°°! "
string
°°# )
.
°°) *
Format
°°* 0
(
°°0 1
$str
°°1 @
,
°°@ A 
meshCacheDirectory
°°B T
,
°°T U
pb
°°V X
.
°°X Y
	assetGuid
°°Y b
)
°°b c
;
°°c d
}
¢¢ 
}
££ 
else
§§ 
{
•• 
Debug
¶¶ 
.
¶¶ 

LogWarning
¶¶ (
(
¶¶( )
$str¶¶) …
)¶¶…  
;¶¶  À
}
ßß 
}
®® 
AssetDatabase
™™ 
.
™™ 
CreateAsset
™™ )
(
™™) *
mesh
™™* .
,
™™. /
path
™™0 4
)
™™4 5
;
™™5 6
}
´´ 
}
¨¨ 	
internal
ÆÆ 
static
ÆÆ 
bool
ÆÆ 
GetCachedMesh
ÆÆ *
(
ÆÆ* +
ProBuilderMesh
ÆÆ+ 9
pb
ÆÆ: <
,
ÆÆ< =
out
ÆÆ> A
string
ÆÆB H
path
ÆÆI M
,
ÆÆM N
out
ÆÆO R
Mesh
ÆÆS W
mesh
ÆÆX \
)
ÆÆ\ ]
{
ØØ 	
if
∞∞ 
(
∞∞ 
pb
∞∞ 
.
∞∞ 
mesh
∞∞ 
!=
∞∞ 
null
∞∞ 
)
∞∞  
{
±± 
string
≤≤ 
meshPath
≤≤ 
=
≤≤  !
AssetDatabase
≤≤" /
.
≤≤/ 0
GetAssetPath
≤≤0 <
(
≤≤< =
pb
≤≤= ?
.
≤≤? @
mesh
≤≤@ D
)
≤≤D E
;
≤≤E F
if
¥¥ 
(
¥¥ 
!
¥¥ 
string
¥¥ 
.
¥¥ 
IsNullOrEmpty
¥¥ )
(
¥¥) *
meshPath
¥¥* 2
)
¥¥2 3
)
¥¥3 4
{
µµ 
path
∂∂ 
=
∂∂ 
meshPath
∂∂ #
;
∂∂# $
mesh
∑∑ 
=
∑∑ 
pb
∑∑ 
.
∑∑ 
mesh
∑∑ "
;
∑∑" #
return
ππ 
true
ππ 
;
ππ  
}
∫∫ 
}
ªª 
string
ΩΩ  
meshCacheDirectory
ΩΩ %
=
ΩΩ& '#
GetMeshCacheDirectory
ΩΩ( =
(
ΩΩ= >
false
ΩΩ> C
)
ΩΩC D
;
ΩΩD E
string
ææ 
guid
ææ 
=
ææ 
pb
ææ 
.
ææ 
	assetGuid
ææ &
;
ææ& '
path
¿¿ 
=
¿¿ 
string
¿¿ 
.
¿¿ 
Format
¿¿  
(
¿¿  !
$str
¿¿! 0
,
¿¿0 1 
meshCacheDirectory
¿¿2 D
,
¿¿D E
guid
¿¿F J
)
¿¿J K
;
¿¿K L
mesh
¡¡ 
=
¡¡ 
AssetDatabase
¡¡  
.
¡¡  !
LoadAssetAtPath
¡¡! 0
<
¡¡0 1
Mesh
¡¡1 5
>
¡¡5 6
(
¡¡6 7
path
¡¡7 ;
)
¡¡; <
;
¡¡< =
return
√√ 
mesh
√√ 
!=
√√ 
null
√√ 
;
√√  
}
ƒƒ 	
static
∆∆ 
string
∆∆ #
GetMeshCacheDirectory
∆∆ +
(
∆∆+ ,
bool
∆∆, 0!
initializeIfMissing
∆∆1 D
=
∆∆E F
false
∆∆G L
)
∆∆L M
{
«« 	
if
»» 
(
»» 
	Directory
»» 
.
»» 
Exists
»»  
(
»»  !"
k_MeshCacheDirectory
»»! 5
)
»»5 6
)
»»6 7
return
…… "
k_MeshCacheDirectory
…… +
;
……+ ,
string
ÀÀ 
[
ÀÀ 
]
ÀÀ 
results
ÀÀ 
=
ÀÀ 
	Directory
ÀÀ (
.
ÀÀ( )
GetDirectories
ÀÀ) 7
(
ÀÀ7 8
$str
ÀÀ8 @
,
ÀÀ@ A&
k_MeshCacheDirectoryName
ÀÀB Z
,
ÀÀZ [
SearchOption
ÀÀ\ h
.
ÀÀh i
AllDirectories
ÀÀi w
)
ÀÀw x
;
ÀÀx y
if
ÕÕ 
(
ÕÕ 
results
ÕÕ 
.
ÕÕ 
Length
ÕÕ 
<
ÕÕ  
$num
ÕÕ! "
)
ÕÕ" #
{
ŒŒ 
if
œœ 
(
œœ !
initializeIfMissing
œœ '
)
œœ' (
{
–– "
k_MeshCacheDirectory
—— (
=
——) *
FileUtility
——+ 6
.
——6 7#
GetLocalDataDirectory
——7 L
(
——L M
)
——M N
+
——O P
$str
——Q T
+
——U V&
k_MeshCacheDirectoryName
——W o
;
——o p
	Directory
““ 
.
““ 
CreateDirectory
““ -
(
““- ."
k_MeshCacheDirectory
““. B
)
““B C
;
““C D
}
”” 
else
‘‘ 
{
’’ "
k_MeshCacheDirectory
÷÷ (
=
÷÷) *
null
÷÷+ /
;
÷÷/ 0
}
◊◊ 
}
ÿÿ 
else
ŸŸ 
{
⁄⁄ "
k_MeshCacheDirectory
€€ $
=
€€% &
results
€€' .
.
€€. /
First
€€/ 4
(
€€4 5
)
€€5 6
;
€€6 7
}
‹‹ 
return
ﬁﬁ "
k_MeshCacheDirectory
ﬁﬁ '
;
ﬁﬁ' (
}
ﬂﬂ 	
public
ÂÂ 
static
ÂÂ 
void
ÂÂ 
RebuildColliders
ÂÂ +
(
ÂÂ+ ,
this
ÂÂ, 0
ProBuilderMesh
ÂÂ1 ?
mesh
ÂÂ@ D
)
ÂÂD E
{
ÊÊ 	
mesh
ÁÁ 
.
ÁÁ 
mesh
ÁÁ 
.
ÁÁ 
RecalculateBounds
ÁÁ '
(
ÁÁ' (
)
ÁÁ( )
;
ÁÁ) *
var
ÈÈ 
bounds
ÈÈ 
=
ÈÈ 
mesh
ÈÈ 
.
ÈÈ 
mesh
ÈÈ "
.
ÈÈ" #
bounds
ÈÈ# )
;
ÈÈ) *
foreach
ÎÎ 
(
ÎÎ 
var
ÎÎ 
collider
ÎÎ !
in
ÎÎ" $
mesh
ÎÎ% )
.
ÎÎ) *
GetComponents
ÎÎ* 7
<
ÎÎ7 8
Collider
ÎÎ8 @
>
ÎÎ@ A
(
ÎÎA B
)
ÎÎB C
)
ÎÎC D
{
ÏÏ 
Type
ÌÌ 
t
ÌÌ 
=
ÌÌ 
collider
ÌÌ !
.
ÌÌ! "
GetType
ÌÌ" )
(
ÌÌ) *
)
ÌÌ* +
;
ÌÌ+ ,
if
ÔÔ 
(
ÔÔ 
t
ÔÔ 
==
ÔÔ 
typeof
ÔÔ 
(
ÔÔ  
BoxCollider
ÔÔ  +
)
ÔÔ+ ,
)
ÔÔ, -
{
 
(
ÒÒ 
(
ÒÒ 
BoxCollider
ÒÒ !
)
ÒÒ! "
collider
ÒÒ" *
)
ÒÒ* +
.
ÒÒ+ ,
center
ÒÒ, 2
=
ÒÒ3 4
bounds
ÒÒ5 ;
.
ÒÒ; <
center
ÒÒ< B
;
ÒÒB C
(
ÚÚ 
(
ÚÚ 
BoxCollider
ÚÚ !
)
ÚÚ! "
collider
ÚÚ" *
)
ÚÚ* +
.
ÚÚ+ ,
size
ÚÚ, 0
=
ÚÚ1 2
bounds
ÚÚ3 9
.
ÚÚ9 :
size
ÚÚ: >
;
ÚÚ> ?
}
ÛÛ 
else
ÙÙ 
if
ÙÙ 
(
ÙÙ 
t
ÙÙ 
==
ÙÙ 
typeof
ÙÙ $
(
ÙÙ$ %
SphereCollider
ÙÙ% 3
)
ÙÙ3 4
)
ÙÙ4 5
{
ıı 
(
ˆˆ 
(
ˆˆ 
SphereCollider
ˆˆ $
)
ˆˆ$ %
collider
ˆˆ% -
)
ˆˆ- .
.
ˆˆ. /
center
ˆˆ/ 5
=
ˆˆ6 7
bounds
ˆˆ8 >
.
ˆˆ> ?
center
ˆˆ? E
;
ˆˆE F
(
˜˜ 
(
˜˜ 
SphereCollider
˜˜ $
)
˜˜$ %
collider
˜˜% -
)
˜˜- .
.
˜˜. /
radius
˜˜/ 5
=
˜˜6 7
Math
˜˜8 <
.
˜˜< =
LargestValue
˜˜= I
(
˜˜I J
bounds
˜˜J P
.
˜˜P Q
extents
˜˜Q X
)
˜˜X Y
;
˜˜Y Z
}
¯¯ 
else
˘˘ 
if
˘˘ 
(
˘˘ 
t
˘˘ 
==
˘˘ 
typeof
˘˘ $
(
˘˘$ %
CapsuleCollider
˘˘% 4
)
˘˘4 5
)
˘˘5 6
{
˙˙ 
(
˚˚ 
(
˚˚ 
CapsuleCollider
˚˚ %
)
˚˚% &
collider
˚˚& .
)
˚˚. /
.
˚˚/ 0
center
˚˚0 6
=
˚˚7 8
bounds
˚˚9 ?
.
˚˚? @
center
˚˚@ F
;
˚˚F G
Vector2
¸¸ 
xy
¸¸ 
=
¸¸  
new
¸¸! $
Vector2
¸¸% ,
(
¸¸, -
bounds
¸¸- 3
.
¸¸3 4
extents
¸¸4 ;
.
¸¸; <
x
¸¸< =
,
¸¸= >
bounds
¸¸? E
.
¸¸E F
extents
¸¸F M
.
¸¸M N
z
¸¸N O
)
¸¸O P
;
¸¸P Q
(
˝˝ 
(
˝˝ 
CapsuleCollider
˝˝ %
)
˝˝% &
collider
˝˝& .
)
˝˝. /
.
˝˝/ 0
radius
˝˝0 6
=
˝˝7 8
Math
˝˝9 =
.
˝˝= >
LargestValue
˝˝> J
(
˝˝J K
xy
˝˝K M
)
˝˝M N
;
˝˝N O
(
˛˛ 
(
˛˛ 
CapsuleCollider
˛˛ %
)
˛˛% &
collider
˛˛& .
)
˛˛. /
.
˛˛/ 0
height
˛˛0 6
=
˛˛7 8
bounds
˛˛9 ?
.
˛˛? @
size
˛˛@ D
.
˛˛D E
y
˛˛E F
;
˛˛F G
}
ˇˇ 
else
ÄÄ 
if
ÄÄ 
(
ÄÄ 
t
ÄÄ 
==
ÄÄ 
typeof
ÄÄ $
(
ÄÄ$ %
WheelCollider
ÄÄ% 2
)
ÄÄ2 3
)
ÄÄ3 4
{
ÅÅ 
(
ÇÇ 
(
ÇÇ 
WheelCollider
ÇÇ #
)
ÇÇ# $
collider
ÇÇ$ ,
)
ÇÇ, -
.
ÇÇ- .
center
ÇÇ. 4
=
ÇÇ5 6
bounds
ÇÇ7 =
.
ÇÇ= >
center
ÇÇ> D
;
ÇÇD E
(
ÉÉ 
(
ÉÉ 
WheelCollider
ÉÉ #
)
ÉÉ# $
collider
ÉÉ$ ,
)
ÉÉ, -
.
ÉÉ- .
radius
ÉÉ. 4
=
ÉÉ5 6
Math
ÉÉ7 ;
.
ÉÉ; <
LargestValue
ÉÉ< H
(
ÉÉH I
bounds
ÉÉI O
.
ÉÉO P
extents
ÉÉP W
)
ÉÉW X
;
ÉÉX Y
}
ÑÑ 
else
ÖÖ 
if
ÖÖ 
(
ÖÖ 
t
ÖÖ 
==
ÖÖ 
typeof
ÖÖ $
(
ÖÖ$ %
MeshCollider
ÖÖ% 1
)
ÖÖ1 2
)
ÖÖ2 3
{
ÜÜ 
mesh
áá 
.
áá 
Refresh
áá  
(
áá  !
RefreshMask
áá! ,
.
áá, -

Collisions
áá- 7
)
áá7 8
;
áá8 9
}
àà 
}
ââ 
}
ää 	
}
ãã 
}åå åœ
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\DimensionsEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
sealed 

class 
DimensionsEditor !
:" #
ScriptableObject$ 4
{ 
struct 
Trs 
: 

IEquatable 
<  
Trs  #
># $
{ 	
public 
Vector3 
position #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 

Quaternion 
rotation &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
Vector3 
scale  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
Trs 
( 
	Transform  
t! "
)" #
{ 
position 
= 
t 
. 
position %
;% &
rotation 
= 
t 
. 
rotation %
;% &
scale 
= 
t 
. 

localScale $
;$ %
} 
public 
bool 
Equals 
( 
Trs "
other# (
)( )
{   
return!! 
position!! 
.!!  
Equals!!  &
(!!& '
other!!' ,
.!!, -
position!!- 5
)!!5 6
&&!!7 9
rotation!!: B
.!!B C
Equals!!C I
(!!I J
other!!J O
.!!O P
rotation!!P X
)!!X Y
&&!!Z \
scale!!] b
.!!b c
Equals!!c i
(!!i j
other!!j o
.!!o p
scale!!p u
)!!u v
;!!v w
}"" 
public$$ 
override$$ 
bool$$  
Equals$$! '
($$' (
object$$( .
obj$$/ 2
)$$2 3
{%% 
return&& 
obj&& 
is&& 
Trs&& !
other&&" '
&&&&( *
Equals&&+ 1
(&&1 2
other&&2 7
)&&7 8
;&&8 9
}'' 
public)) 
static)) 
explicit)) "
operator))# +
Trs)), /
())/ 0
	Transform))0 9
trs)): =
)))= >
{** 
return++ 
new++ 
Trs++ 
(++ 
trs++ "
)++" #
;++# $
},, 
public.. 
override.. 
int.. 
GetHashCode..  +
(..+ ,
).., -
{// 
	unchecked00 
{11 
var22 
hashCode22  
=22! "
position22# +
.22+ ,
GetHashCode22, 7
(227 8
)228 9
;229 :
hashCode33 
=33 
(33  
hashCode33  (
*33) *
$num33+ .
)33. /
^330 1
rotation332 :
.33: ;
GetHashCode33; F
(33F G
)33G H
;33H I
hashCode44 
=44 
(44  
hashCode44  (
*44) *
$num44+ .
)44. /
^440 1
scale442 7
.447 8
GetHashCode448 C
(44C D
)44D E
;44E F
return55 
hashCode55 #
;55# $
}66 
}77 
}88 	
static:: 
DimensionsEditor:: 

s_Instance::  *
;::* +
bool;; 
m_HasBounds;; 
;;; 
Bounds<< 
m_Bounds<< 
;<< 

Dictionary== 
<== 
	Transform== 
,== 
Trs== !
>==! "

m_Selected==# -
===. /
new==0 3

Dictionary==4 >
<==> ?
	Transform==? H
,==H I
Trs==J M
>==M N
(==N O
)==O P
;==P Q
static@@ 
bool@@ #
s_RecalculateMeshBounds@@ +
;@@+ ,
[BB 	
MenuItemBB	 
(BB 
$strBB 
+BB 
PreferenceKeysBB +
.BB+ ,
pluginTitleBB, 7
+BB8 9
$strBB: T
,BBT U
trueBBV Z
,BBZ [
PreferenceKeysBB\ j
.BBj k

menuEditorBBk u
+BBv w
$numBBx z
)BBz {
]BB{ |
staticCC 
boolCC 

HideVerifyCC 
(CC 
)CC  
{DD 	
returnEE 

s_InstanceEE 
!=EE  
nullEE! %
;EE% &
}FF 	
[HH 	
MenuItemHH	 
(HH 
$strHH 
+HH 
PreferenceKeysHH +
.HH+ ,
pluginTitleHH, 7
+HH8 9
$strHH: T
,HHT U
falseHHV [
,HH[ \
PreferenceKeysHH] k
.HHk l

menuEditorHHl v
+HHw x
$numHHy {
)HH{ |
]HH| }
staticII 
voidII 
HideII 
(II 
)II 
{JJ 	
ifKK 
(KK 

s_InstanceKK 
!=KK 
nullKK "
)KK" #
ObjectLL 
.LL 
DestroyImmediateLL '
(LL' (

s_InstanceLL( 2
)LL2 3
;LL3 4
}MM 	
[OO 	
MenuItemOO	 
(OO 
$strOO 
+OO 
PreferenceKeysOO +
.OO+ ,
pluginTitleOO, 7
+OO8 9
$strOO: T
,OOT U
trueOOV Z
,OOZ [
PreferenceKeysOO\ j
.OOj k

menuEditorOOk u
+OOv w
$numOOx z
)OOz {
]OO{ |
staticPP 
boolPP 

InitVerifyPP 
(PP 
)PP  
{QQ 	
returnRR 

s_InstanceRR 
==RR  
nullRR! %
;RR% &
}SS 	
[UU 	
MenuItemUU	 
(UU 
$strUU 
+UU 
PreferenceKeysUU +
.UU+ ,
pluginTitleUU, 7
+UU8 9
$strUU: T
,UUT U
falseUUV [
,UU[ \
PreferenceKeysUU] k
.UUk l

menuEditorUUl v
+UUw x
$numUUy {
)UU{ |
]UU| }
staticVV 
voidVV 
InitVV 
(VV 
)VV 
{WW 	
CreateInstanceXX 
<XX 
DimensionsEditorXX +
>XX+ ,
(XX, -
)XX- .
;XX. /
}YY 	
enum[[ 
BoundsDisplay[[ 
{\\ 	
Object]] 
=]] 
$num]] 
,]] 
Element^^ 
=^^ 
$num^^ 
}__ 	
[aa 	
UserSettingaa	 
(aa 
$straa )
,aa) *
$straa+ ;
,aa; <
$straa= |
+aa} ~
$strbb x
+bby z
$strcc E
)ccE F
]ccF G
staticdd 
Prefdd 
<dd 
BoundsDisplaydd !
>dd! "
s_BoundsDisplaydd# 2
=dd3 4
newdd5 8
Prefdd9 =
<dd= >
BoundsDisplaydd> K
>ddK L
(ddL M
$strddM ^
,dd^ _
BoundsDisplaydd` m
.ddm n
Objectddn t
,ddt u
SettingsScope	ddv É
.
ddÉ Ñ
User
ddÑ à
)
ddà â
;
ddâ ä
[gg 	
Shortcutgg	 
(gg 
$strgg @
,gg@ A
typeofggB H
(ggH I
	SceneViewggI R
)ggR S
)ggS T
]ggT U
statichh 
voidhh "
ToggleUseElementBoundshh *
(hh* +
)hh+ ,
{ii 	
ifkk 
(kk 

s_Instancekk 
!=kk 
nullkk "
)kk" #
{ll 
varmm 
displaymm 
=mm 
s_BoundsDisplaymm -
.mm- .
valuemm. 3
;mm3 4
ifpp 
(pp 
displaypp 
==pp 
BoundsDisplaypp ,
.pp, -
Objectpp- 3
)pp3 4
s_BoundsDisplayqq #
.qq# $
SetValueqq$ ,
(qq, -
BoundsDisplayqq- :
.qq: ;
Elementqq; B
,qqB C
trueqqD H
)qqH I
;qqI J
elsess 
DestroyImmediatett $
(tt$ %

s_Instancett% /
)tt/ 0
;tt0 1
}uu 
elsevv 
{ww 
s_BoundsDisplayyy 
.yy  
SetValueyy  (
(yy( )
BoundsDisplayyy) 6
.yy6 7
Objectyy7 =
,yy= >
trueyy? C
)yyC D
;yyD E
Initzz 
(zz 
)zz 
;zz 
}{{ 
if}} 
(}} 

s_Instance}} 
!=}} 
null}} "
)}}" #
{~~ 

s_Instance 
. 
RebuildBounds (
(( )
)) *
;* +
EditorUtility
ÄÄ 
.
ÄÄ 
ShowNotification
ÄÄ .
(
ÄÄ. /
$str
ÄÄ/ E
+
ÄÄF G
s_BoundsDisplay
ÄÄH W
.
ÄÄW X
value
ÄÄX ]
.
ÄÄ] ^
ToString
ÄÄ^ f
(
ÄÄf g
)
ÄÄg h
)
ÄÄh i
;
ÄÄi j
}
ÅÅ 
else
ÇÇ 
{
ÉÉ 
EditorUtility
ÑÑ 
.
ÑÑ 
ShowNotification
ÑÑ .
(
ÑÑ. /
$str
ÑÑ/ H
)
ÑÑH I
;
ÑÑI J
}
ÖÖ 
	SceneView
áá 
.
áá 

RepaintAll
áá  
(
áá  !
)
áá! "
;
áá" #
}
àà 	
void
ãã 
OnEnable
ãã 
(
ãã 
)
ãã 
{
åå 	

s_Instance
çç 
=
çç 
this
çç 
;
çç 
m_DisplayMesh
éé 
=
éé 
new
éé 
Mesh
éé  $
(
éé$ %
)
éé% &
;
éé& '
m_DisplayMaterial
èè 
=
èè 
new
èè  #
Material
èè$ ,
(
èè, -
Shader
èè- 3
.
èè3 4
Find
èè4 8
(
èè8 9
$str
èè9 V
)
èèV W
)
èèW X
;
èèX Y
m_DisplayMesh
êê 
.
êê 
	hideFlags
êê #
=
êê$ %
	HideFlags
êê& /
.
êê/ 0
DontSave
êê0 8
;
êê8 9
m_DisplayMaterial
ëë 
.
ëë 
	hideFlags
ëë '
=
ëë( )
	HideFlags
ëë* 3
.
ëë3 4
DontSave
ëë4 <
;
ëë< =
	SceneView
ìì 
.
ìì 
duringSceneGui
ìì $
+=
ìì% '

OnSceneGUI
ìì( 2
;
ìì2 3
MeshSelection
óó 
.
óó $
objectSelectionChanged
óó 0
+=
óó1 3&
OnObjectSelectionChanged
óó4 L
;
óóL M
ProBuilderMesh
òò 
.
òò %
elementSelectionChanged
òò 2
+=
òò3 5'
OnElementSelectionChanged
òò6 O
;
òòO P
ProBuilderEditor
ôô 
.
ôô 
selectionUpdated
ôô -
+=
ôô. 0$
OnEditingMeshSelection
ôô1 G
;
ôôG H$
VertexManipulationTool
öö "
.
öö" #$
beforeMeshModification
öö# 9
+=
öö: <%
OnBeginMeshModification
öö= T
;
ööT U$
VertexManipulationTool
õõ "
.
õõ" ##
afterMeshModification
õõ# 8
+=
õõ9 ;&
OnFinishMeshModification
õõ< T
;
õõT U
RebuildBounds
ùù 
(
ùù 
)
ùù 
;
ùù 
}
ûû 	
void
†† 
	OnDisable
†† 
(
†† 
)
†† 
{
°° 	
MeshSelection
¢¢ 
.
¢¢ $
objectSelectionChanged
¢¢ 0
-=
¢¢1 3&
OnObjectSelectionChanged
¢¢4 L
;
¢¢L M
ProBuilderMesh
££ 
.
££ %
elementSelectionChanged
££ 2
-=
££3 5'
OnElementSelectionChanged
££6 O
;
££O P
ProBuilderEditor
§§ 
.
§§ 
selectionUpdated
§§ -
-=
§§. 0$
OnEditingMeshSelection
§§1 G
;
§§G H$
VertexManipulationTool
•• "
.
••" #$
beforeMeshModification
••# 9
-=
••: <%
OnBeginMeshModification
••= T
;
••T U$
VertexManipulationTool
¶¶ "
.
¶¶" ##
afterMeshModification
¶¶# 8
-=
¶¶9 ;&
OnFinishMeshModification
¶¶< T
;
¶¶T U
	SceneView
©© 
.
©© 
duringSceneGui
©© $
-=
©©% '

OnSceneGUI
©©( 2
;
©©2 3
DestroyImmediate
≠≠ 
(
≠≠ 
m_DisplayMesh
≠≠ *
)
≠≠* +
;
≠≠+ ,
DestroyImmediate
ÆÆ 
(
ÆÆ 
m_DisplayMaterial
ÆÆ .
)
ÆÆ. /
;
ÆÆ/ 0
}
ØØ 	
static
±± 
void
±± %
OnBeginMeshModification
±± +
(
±±+ ,
IEnumerable
±±, 7
<
±±7 8
ProBuilderMesh
±±8 F
>
±±F G
meshes
±±H N
)
±±N O
{
≤≤ 	%
s_RecalculateMeshBounds
≥≥ #
=
≥≥$ %
true
≥≥& *
;
≥≥* +
}
¥¥ 	
static
∂∂ 
void
∂∂ &
OnFinishMeshModification
∂∂ ,
(
∂∂, -
IEnumerable
∂∂- 8
<
∂∂8 9
ProBuilderMesh
∂∂9 G
>
∂∂G H
meshes
∂∂I O
)
∂∂O P
{
∑∑ 	%
s_RecalculateMeshBounds
∏∏ #
=
∏∏$ %
false
∏∏& +
;
∏∏+ ,
}
ππ 	
static
ªª 
bool
ªª 
GetElementBounds
ªª $
(
ªª$ %
IEnumerable
ªª% 0
<
ªª0 1
ProBuilderMesh
ªª1 ?
>
ªª? @
meshes
ªªA G
,
ªªG H

SelectMode
ªªI S
mode
ªªT X
,
ªªX Y
out
ªªZ ]
Bounds
ªª^ d
bounds
ªªe k
)
ªªk l
{
ºº 	
bool
ΩΩ 
initialized
ΩΩ 
=
ΩΩ 
false
ΩΩ $
;
ΩΩ$ %
bounds
ææ 
=
ææ 
new
ææ 
Bounds
ææ 
(
ææ  
)
ææ  !
;
ææ! "
foreach
¿¿ 
(
¿¿ 
var
¿¿ 
mesh
¿¿ 
in
¿¿  
meshes
¿¿! '
)
¿¿' (
{
¡¡ 
var
¬¬ 
	positions
¬¬ 
=
¬¬ 
mesh
¬¬  $
.
¬¬$ %
positionsInternal
¬¬% 6
;
¬¬6 7
var
√√ 
trs
√√ 
=
√√ 
mesh
√√ 
.
√√ 
	transform
√√ (
;
√√( )
switch
≈≈ 
(
≈≈ 
mode
≈≈ 
)
≈≈ 
{
∆∆ 
case
«« 

SelectMode
«« #
.
««# $
Face
««$ (
:
««( )
case
»» 

SelectMode
»» #
.
»»# $
TextureFace
»»$ /
:
»»/ 0
{
…… 
var
   
faces
   !
=
  " #
mesh
  $ (
.
  ( )
facesInternal
  ) 6
;
  6 7
foreach
ÃÃ 
(
ÃÃ  !
var
ÃÃ! $
face
ÃÃ% )
in
ÃÃ* ,
mesh
ÃÃ- 1
.
ÃÃ1 2)
selectedFaceIndicesInternal
ÃÃ2 M
)
ÃÃM N
{
ÕÕ 
foreach
ŒŒ #
(
ŒŒ$ %
var
ŒŒ% (
index
ŒŒ) .
in
ŒŒ/ 1
faces
ŒŒ2 7
[
ŒŒ7 8
face
ŒŒ8 <
]
ŒŒ< =
.
ŒŒ= >%
distinctIndexesInternal
ŒŒ> U
)
ŒŒU V
{
œœ 
var
––  #
position
––$ ,
=
––- .
trs
––/ 2
.
––2 3
TransformPoint
––3 A
(
––A B
	positions
––B K
[
––K L
index
––L Q
]
––Q R
)
––R S
;
––S T
if
““  "
(
““# $
!
““$ %
initialized
““% 0
)
““0 1
{
””  !
bounds
‘‘$ *
=
‘‘+ ,
new
‘‘- 0
Bounds
‘‘1 7
(
‘‘7 8
position
‘‘8 @
,
‘‘@ A
Vector3
‘‘B I
.
‘‘I J
zero
‘‘J N
)
‘‘N O
;
‘‘O P
initialized
’’$ /
=
’’0 1
true
’’2 6
;
’’6 7
}
÷÷  !
else
◊◊  $
{
ÿÿ  !
bounds
ŸŸ$ *
.
ŸŸ* +
Encapsulate
ŸŸ+ 6
(
ŸŸ6 7
position
ŸŸ7 ?
)
ŸŸ? @
;
ŸŸ@ A
}
⁄⁄  !
}
€€ 
}
‹‹ 
break
›› 
;
›› 
}
ﬁﬁ 
case
‡‡ 

SelectMode
‡‡ #
.
‡‡# $
Edge
‡‡$ (
:
‡‡( )
case
·· 

SelectMode
·· #
.
··# $
TextureEdge
··$ /
:
··/ 0
{
‚‚ 
foreach
„„ 
(
„„  !
var
„„! $
edge
„„% )
in
„„* ,
mesh
„„- 1
.
„„1 2#
selectedEdgesInternal
„„2 G
)
„„G H
{
‰‰ 
var
ÂÂ 
a
ÂÂ  !
=
ÂÂ" #
trs
ÂÂ$ '
.
ÂÂ' (
TransformPoint
ÂÂ( 6
(
ÂÂ6 7
	positions
ÂÂ7 @
[
ÂÂ@ A
edge
ÂÂA E
.
ÂÂE F
a
ÂÂF G
]
ÂÂG H
)
ÂÂH I
;
ÂÂI J
var
ÊÊ 
b
ÊÊ  !
=
ÊÊ" #
trs
ÊÊ$ '
.
ÊÊ' (
TransformPoint
ÊÊ( 6
(
ÊÊ6 7
	positions
ÊÊ7 @
[
ÊÊ@ A
edge
ÊÊA E
.
ÊÊE F
b
ÊÊF G
]
ÊÊG H
)
ÊÊH I
;
ÊÊI J
if
ËË 
(
ËË  
!
ËË  !
initialized
ËË! ,
)
ËË, -
{
ÈÈ 
bounds
ÍÍ  &
=
ÍÍ' (
new
ÍÍ) ,
Bounds
ÍÍ- 3
(
ÍÍ3 4
a
ÍÍ4 5
,
ÍÍ5 6
Vector3
ÍÍ7 >
.
ÍÍ> ?
zero
ÍÍ? C
)
ÍÍC D
;
ÍÍD E
initialized
ÎÎ  +
=
ÎÎ, -
true
ÎÎ. 2
;
ÎÎ2 3
}
ÏÏ 
else
ÌÌ  
{
ÓÓ 
bounds
ÔÔ  &
.
ÔÔ& '
Encapsulate
ÔÔ' 2
(
ÔÔ2 3
a
ÔÔ3 4
)
ÔÔ4 5
;
ÔÔ5 6
}
 
bounds
ÚÚ "
.
ÚÚ" #
Encapsulate
ÚÚ# .
(
ÚÚ. /
b
ÚÚ/ 0
)
ÚÚ0 1
;
ÚÚ1 2
}
ÛÛ 
break
ıı 
;
ıı 
}
ˆˆ 
case
¯¯ 

SelectMode
¯¯ #
.
¯¯# $
Vertex
¯¯$ *
:
¯¯* +
case
˘˘ 

SelectMode
˘˘ #
.
˘˘# $
TextureVertex
˘˘$ 1
:
˘˘1 2
{
˙˙ 
foreach
˚˚ 
(
˚˚  !
var
˚˚! $
index
˚˚% *
in
˚˚+ -
mesh
˚˚. 2
.
˚˚2 3%
selectedIndexesInternal
˚˚3 J
)
˚˚J K
{
¸¸ 
var
˝˝ 
position
˝˝  (
=
˝˝) *
trs
˝˝+ .
.
˝˝. /
TransformPoint
˝˝/ =
(
˝˝= >
	positions
˝˝> G
[
˝˝G H
index
˝˝H M
]
˝˝M N
)
˝˝N O
;
˝˝O P
if
ˇˇ 
(
ˇˇ  
!
ˇˇ  !
initialized
ˇˇ! ,
)
ˇˇ, -
{
ÄÄ 
bounds
ÅÅ  &
=
ÅÅ' (
new
ÅÅ) ,
Bounds
ÅÅ- 3
(
ÅÅ3 4
position
ÅÅ4 <
,
ÅÅ< =
Vector3
ÅÅ> E
.
ÅÅE F
zero
ÅÅF J
)
ÅÅJ K
;
ÅÅK L
initialized
ÇÇ  +
=
ÇÇ, -
true
ÇÇ. 2
;
ÇÇ2 3
}
ÉÉ 
else
ÑÑ  
{
ÖÖ 
bounds
ÜÜ  &
.
ÜÜ& '
Encapsulate
ÜÜ' 2
(
ÜÜ2 3
position
ÜÜ3 ;
)
ÜÜ; <
;
ÜÜ< =
}
áá 
}
àà 
break
ââ 
;
ââ 
}
ää 
}
ãã 
}
åå 
return
éé 
initialized
éé 
;
éé 
}
èè 	
bool
ëë 
GetSelectedBounds
ëë 
(
ëë 
out
ëë "
Bounds
ëë# )
bounds
ëë* 0
)
ëë0 1
{
íí 	

m_Selected
ìì 
.
ìì 
Clear
ìì 
(
ìì 
)
ìì 
;
ìì 
var
ïï 

selectMode
ïï 
=
ïï 
ProBuilderEditor
ïï -
.
ïï- .

selectMode
ïï. 8
;
ïï8 9
if
óó 
(
óó 
s_BoundsDisplay
óó 
.
óó  
value
óó  %
==
óó& (
BoundsDisplay
óó) 6
.
óó6 7
Element
óó7 >
&&
óó? A
ProBuilderEditor
óóB R
.
óóR S

selectMode
óóS ]
.
óó] ^
IsMeshElementMode
óó^ o
(
óóo p
)
óóp q
)
óóq r
{
òò 
foreach
ôô 
(
ôô 
var
ôô 
m
ôô 
in
ôô !
MeshSelection
ôô" /
.
ôô/ 0
topInternal
ôô0 ;
)
ôô; <

m_Selected
öö 
.
öö 
Add
öö "
(
öö" #
m
öö# $
.
öö$ %
	transform
öö% .
,
öö. /
new
öö0 3
Trs
öö4 7
(
öö7 8
m
öö8 9
.
öö9 :
	transform
öö: C
)
ööC D
)
ööD E
;
ööE F
return
úú 
GetElementBounds
úú '
(
úú' (
MeshSelection
úú( 5
.
úú5 6
topInternal
úú6 A
,
úúA B

selectMode
úúC M
,
úúM N
out
úúO R
bounds
úúS Y
)
úúY Z
;
úúZ [
}
ùù 
foreach
üü 
(
üü 
var
üü 
m
üü 
in
üü 
	Selection
üü '
.
üü' (

transforms
üü( 2
)
üü2 3

m_Selected
†† 
.
†† 
Add
†† 
(
†† 
m
††  
.
††  !
	transform
††! *
,
††* +
new
††, /
Trs
††0 3
(
††3 4
m
††4 5
.
††5 6
	transform
††6 ?
)
††? @
)
††@ A
;
††A B
if
¢¢ 
(
¢¢ %
s_RecalculateMeshBounds
¢¢ '
)
¢¢' (
{
££ 
foreach
§§ 
(
§§ 
var
§§ 
mesh
§§  
in
§§! #
MeshSelection
§§$ 1
.
§§1 2
topInternal
§§2 =
)
§§= >
mesh
•• 
.
•• 
mesh
•• 
.
•• 
RecalculateBounds
•• /
(
••/ 0
)
••0 1
;
••1 2
}
¶¶ 
var
®® 
	renderers
®® 
=
®® 
	Selection
®® %
.
®®% &

transforms
®®& 0
.
©© 
Where
©© 
(
©© 
x
©© 
=>
©© 
x
©© 
.
©© 
GetComponent
©© *
<
©©* +
MeshRenderer
©©+ 7
>
©©7 8
(
©©8 9
)
©©9 :
!=
©©; =
null
©©> B
)
©©B C
.
™™ 
Select
™™ 
(
™™ 
x
™™ 
=>
™™ 
x
™™ 
.
™™ 
GetComponent
™™ +
<
™™+ ,
MeshRenderer
™™, 8
>
™™8 9
(
™™9 :
)
™™: ;
)
™™; <
;
™™< =
if
¨¨ 
(
¨¨ 
!
¨¨ 
	renderers
¨¨ 
.
¨¨ 
Any
¨¨ 
(
¨¨ 
)
¨¨  
)
¨¨  !
{
≠≠ 
bounds
ÆÆ 
=
ÆÆ 
new
ÆÆ 
Bounds
ÆÆ #
(
ÆÆ# $
)
ÆÆ$ %
;
ÆÆ% &
return
ØØ 
false
ØØ 
;
ØØ 
}
∞∞ 
bounds
≤≤ 
=
≤≤ 
	renderers
≤≤ 
.
≤≤ 
First
≤≤ $
(
≤≤$ %
)
≤≤% &
.
≤≤& '
bounds
≤≤' -
;
≤≤- .
foreach
¥¥ 
(
¥¥ 
var
¥¥ 
ren
¥¥ 
in
¥¥ 
	renderers
¥¥  )
)
¥¥) *
bounds
µµ 
.
µµ 
Encapsulate
µµ "
(
µµ" #
ren
µµ# &
.
µµ& '
bounds
µµ' -
)
µµ- .
;
µµ. /
return
∑∑ 
true
∑∑ 
;
∑∑ 
}
∏∏ 	
void
∫∫ &
OnObjectSelectionChanged
∫∫ %
(
∫∫% &
)
∫∫& '
{
ªª 	
RebuildBounds
ºº 
(
ºº 
)
ºº 
;
ºº 
}
ΩΩ 	
void
øø '
OnElementSelectionChanged
øø &
(
øø& '
ProBuilderMesh
øø' 5
mesh
øø6 :
)
øø: ;
{
¿¿ 	
RebuildBounds
¡¡ 
(
¡¡ 
)
¡¡ 
;
¡¡ 
}
¬¬ 	
void
ƒƒ $
OnEditingMeshSelection
ƒƒ #
(
ƒƒ# $
IEnumerable
ƒƒ$ /
<
ƒƒ/ 0
ProBuilderMesh
ƒƒ0 >
>
ƒƒ> ?
meshes
ƒƒ@ F
)
ƒƒF G
{
≈≈ 	
RebuildBounds
∆∆ 
(
∆∆ 
)
∆∆ 
;
∆∆ 
}
«« 	
void
…… 
RebuildBounds
…… 
(
…… 
)
…… 
{
   	
m_HasBounds
ÀÀ 
=
ÀÀ 
GetSelectedBounds
ÀÀ +
(
ÀÀ+ ,
out
ÀÀ, /
m_Bounds
ÀÀ0 8
)
ÀÀ8 9
;
ÀÀ9 :
	SceneView
ÃÃ 
.
ÃÃ 

RepaintAll
ÃÃ  
(
ÃÃ  !
)
ÃÃ! "
;
ÃÃ" #
}
ÕÕ 	
void
œœ 

OnSceneGUI
œœ 
(
œœ 
	SceneView
œœ !
scnview
œœ" )
)
œœ) *
{
–– 	
if
““ 
(
““ 
	Selection
““ 
.
““ 
count
““ 
>
““  !
$num
““" #
&&
““$ &
m_HasBounds
““' 2
)
““2 3
{
÷÷ 
foreach
◊◊ 
(
◊◊ 
var
◊◊ 
m
◊◊ 
in
◊◊ !

m_Selected
◊◊" ,
)
◊◊, -
{
ÿÿ 
if
ŸŸ 
(
ŸŸ 
!
ŸŸ 
(
ŸŸ 
(
ŸŸ 
Trs
ŸŸ 
)
ŸŸ 
m
ŸŸ  
.
ŸŸ  !
Key
ŸŸ! $
)
ŸŸ$ %
.
ŸŸ% &
Equals
ŸŸ& ,
(
ŸŸ, -
m
ŸŸ- .
.
ŸŸ. /
Value
ŸŸ/ 4
)
ŸŸ4 5
)
ŸŸ5 6
{
⁄⁄ 
RebuildBounds
€€ %
(
€€% &
)
€€& '
;
€€' (
break
‹‹ 
;
‹‹ 
}
›› 
}
ﬁﬁ 
RenderBounds
‡‡ 
(
‡‡ 
m_Bounds
‡‡ %
)
‡‡% &
;
‡‡& '
}
·· 
}
‚‚ 	
Mesh
‰‰ 
m_DisplayMesh
‰‰ 
;
‰‰ 
Material
ÂÂ 
m_DisplayMaterial
ÂÂ "
;
ÂÂ" #
readonly
ËË 
Color
ËË 
k_LightWhite
ËË #
=
ËË$ %
new
ËË& )
Color
ËË* /
(
ËË/ 0
$num
ËË0 3
,
ËË3 4
$num
ËË5 8
,
ËË8 9
$num
ËË: =
,
ËË= >
$num
ËË? B
)
ËËB C
;
ËËC D
void
ÓÓ 
RenderBounds
ÓÓ 
(
ÓÓ 
Bounds
ÓÓ  
bounds
ÓÓ! '
)
ÓÓ' (
{
ÔÔ 	
if
 
(
 
!
 
m_DisplayMesh
 
)
 
return
ÒÒ 
;
ÒÒ 

DrawHeight
ÙÙ 
(
ÙÙ 
bounds
ÙÙ 
.
ÙÙ 
center
ÙÙ $
,
ÙÙ$ %
bounds
ÙÙ& ,
.
ÙÙ, -
extents
ÙÙ- 4
)
ÙÙ4 5
;
ÙÙ5 6
	DrawWidth
ıı 
(
ıı 
bounds
ıı 
.
ıı 
center
ıı #
,
ıı# $
bounds
ıı% +
.
ıı+ ,
extents
ıı, 3
)
ıı3 4
;
ıı4 5
	DrawDepth
ˆˆ 
(
ˆˆ 
bounds
ˆˆ 
.
ˆˆ 
center
ˆˆ #
,
ˆˆ# $
bounds
ˆˆ% +
.
ˆˆ+ ,
extents
ˆˆ, 3
)
ˆˆ3 4
;
ˆˆ4 5
}
˜˜ 	
const
˘˘ 
float
˘˘ "
DISTANCE_LINE_OFFSET
˘˘ (
=
˘˘) *
$num
˘˘+ .
;
˘˘. /
static
˚˚ 
float
˚˚ 
LineDistance
˚˚ !
(
˚˚! "
)
˚˚" #
{
¸¸ 	
return
˝˝ 
HandleUtility
˝˝  
.
˝˝  !
GetHandleSize
˝˝! .
(
˝˝. /
	Selection
˝˝/ 8
.
˝˝8 9
activeTransform
˝˝9 H
.
˝˝H I
position
˝˝I Q
)
˝˝Q R
*
˝˝S T"
DISTANCE_LINE_OFFSET
˝˝U i
;
˝˝i j
}
˛˛ 	
	Transform
ÄÄ 
cam
ÄÄ 
{
ÄÄ 
get
ÄÄ 
{
ÄÄ 
return
ÄÄ $
	SceneView
ÄÄ% .
.
ÄÄ. /!
lastActiveSceneView
ÄÄ/ B
.
ÄÄB C
camera
ÄÄC I
.
ÄÄI J
	transform
ÄÄJ S
;
ÄÄS T
}
ÄÄU V
}
ÄÄW X
void
ÇÇ 

DrawHeight
ÇÇ 
(
ÇÇ 
Vector3
ÇÇ 
cen
ÇÇ  #
,
ÇÇ# $
Vector3
ÇÇ% ,
ext
ÇÇ- 0
)
ÇÇ0 1
{
ÉÉ 	
Vector3
ÖÖ 
[
ÖÖ 
]
ÖÖ 
edges
ÖÖ 
=
ÖÖ 
new
ÖÖ !
Vector3
ÖÖ" )
[
ÖÖ) *
$num
ÖÖ* +
]
ÖÖ+ ,
{
ÜÜ 
new
àà 
Vector3
àà 
(
àà 
cen
àà 
.
àà  
x
àà  !
-
àà" #
ext
àà$ '
.
àà' (
x
àà( )
,
àà) *
cen
àà+ .
.
àà. /
y
àà/ 0
-
àà1 2
ext
àà3 6
.
àà6 7
y
àà7 8
,
àà8 9
cen
àà: =
.
àà= >
z
àà> ?
-
àà@ A
ext
ààB E
.
ààE F
z
ààF G
)
ààG H
,
ààH I
new
ââ 
Vector3
ââ 
(
ââ 
cen
ââ 
.
ââ  
x
ââ  !
-
ââ" #
ext
ââ$ '
.
ââ' (
x
ââ( )
,
ââ) *
cen
ââ+ .
.
ââ. /
y
ââ/ 0
+
ââ1 2
ext
ââ3 6
.
ââ6 7
y
ââ7 8
,
ââ8 9
cen
ââ: =
.
ââ= >
z
ââ> ?
-
ââ@ A
ext
ââB E
.
ââE F
z
ââF G
)
ââG H
,
ââH I
new
åå 
Vector3
åå 
(
åå 
cen
åå 
.
åå  
x
åå  !
+
åå" #
ext
åå$ '
.
åå' (
x
åå( )
,
åå) *
cen
åå+ .
.
åå. /
y
åå/ 0
-
åå1 2
ext
åå3 6
.
åå6 7
y
åå7 8
,
åå8 9
cen
åå: =
.
åå= >
z
åå> ?
-
åå@ A
ext
ååB E
.
ååE F
z
ååF G
)
ååG H
,
ååH I
new
çç 
Vector3
çç 
(
çç 
cen
çç 
.
çç  
x
çç  !
+
çç" #
ext
çç$ '
.
çç' (
x
çç( )
,
çç) *
cen
çç+ .
.
çç. /
y
çç/ 0
+
çç1 2
ext
çç3 6
.
çç6 7
y
çç7 8
,
çç8 9
cen
çç: =
.
çç= >
z
çç> ?
-
çç@ A
ext
ççB E
.
ççE F
z
ççF G
)
ççG H
,
ççH I
new
êê 
Vector3
êê 
(
êê 
cen
êê 
.
êê  
x
êê  !
-
êê" #
ext
êê$ '
.
êê' (
x
êê( )
,
êê) *
cen
êê+ .
.
êê. /
y
êê/ 0
-
êê1 2
ext
êê3 6
.
êê6 7
y
êê7 8
,
êê8 9
cen
êê: =
.
êê= >
z
êê> ?
+
êê@ A
ext
êêB E
.
êêE F
z
êêF G
)
êêG H
,
êêH I
new
ëë 
Vector3
ëë 
(
ëë 
cen
ëë 
.
ëë  
x
ëë  !
-
ëë" #
ext
ëë$ '
.
ëë' (
x
ëë( )
,
ëë) *
cen
ëë+ .
.
ëë. /
y
ëë/ 0
+
ëë1 2
ext
ëë3 6
.
ëë6 7
y
ëë7 8
,
ëë8 9
cen
ëë: =
.
ëë= >
z
ëë> ?
+
ëë@ A
ext
ëëB E
.
ëëE F
z
ëëF G
)
ëëG H
,
ëëH I
new
îî 
Vector3
îî 
(
îî 
cen
îî 
.
îî  
x
îî  !
+
îî" #
ext
îî$ '
.
îî' (
x
îî( )
,
îî) *
cen
îî+ .
.
îî. /
y
îî/ 0
-
îî1 2
ext
îî3 6
.
îî6 7
y
îî7 8
,
îî8 9
cen
îî: =
.
îî= >
z
îî> ?
+
îî@ A
ext
îîB E
.
îîE F
z
îîF G
)
îîG H
,
îîH I
new
ïï 
Vector3
ïï 
(
ïï 
cen
ïï 
.
ïï  
x
ïï  !
+
ïï" #
ext
ïï$ '
.
ïï' (
x
ïï( )
,
ïï) *
cen
ïï+ .
.
ïï. /
y
ïï/ 0
+
ïï1 2
ext
ïï3 6
.
ïï6 7
y
ïï7 8
,
ïï8 9
cen
ïï: =
.
ïï= >
z
ïï> ?
+
ïï@ A
ext
ïïB E
.
ïïE F
z
ïïF G
)
ïïG H
}
ññ 
;
ññ 
Vector2
ôô 
pos
ôô 
=
ôô 
Vector2
ôô !
.
ôô! "
right
ôô" '
*
ôô( )
$num
ôô* 0
;
ôô0 1
Vector3
öö 
a
öö 
=
öö 
Vector3
öö 
.
öö  
zero
öö  $
,
öö$ %
b
öö& '
=
öö( )
Vector3
öö* 1
.
öö1 2
zero
öö2 6
;
öö6 7
for
úú 
(
úú 
int
úú 
i
úú 
=
úú 
$num
úú 
;
úú 
i
úú 
<
úú 
edges
úú  %
.
úú% &
Length
úú& ,
;
úú, -
i
úú. /
+=
úú0 2
$num
úú3 4
)
úú4 5
{
ùù 
Vector2
ûû 
screen
ûû 
=
ûû  
HandleUtility
ûû! .
.
ûû. /
WorldToGUIPoint
ûû/ >
(
ûû> ?
(
ûû? @
edges
ûû@ E
[
ûûE F
i
ûûF G
]
ûûG H
+
ûûI J
edges
ûûK P
[
ûûP Q
i
ûûQ R
+
ûûS T
$num
ûûU V
]
ûûV W
)
ûûW X
*
ûûY Z
$num
ûû[ ^
)
ûû^ _
;
ûû_ `
if
†† 
(
†† 
screen
†† 
.
†† 
x
†† 
<
†† 
pos
†† "
.
††" #
x
††# $
)
††$ %
{
°° 
pos
¢¢ 
=
¢¢ 
screen
¢¢  
;
¢¢  !
a
££ 
=
££ 
edges
££ 
[
££ 
i
££ 
+
££  !
$num
££" #
]
££# $
;
££$ %
b
§§ 
=
§§ 
edges
§§ 
[
§§ 
i
§§ 
+
§§  !
$num
§§" #
]
§§# $
;
§§$ %
}
•• 
}
¶¶ 
float
®® 
dist
®® 
=
®® 
Vector3
®®  
.
®®  !
Distance
®®! )
(
®®) *
a
®®* +
,
®®+ ,
b
®®- .
)
®®. /
;
®®/ 0
if
™™ 
(
™™ 
dist
™™ 
<
™™ 
Mathf
™™ 
.
™™ 
Epsilon
™™ $
)
™™$ %
return
´´ 
;
´´ 
Vector3
≠≠ 
left
≠≠ 
=
≠≠ 
Vector3
≠≠ "
.
≠≠" #
Cross
≠≠# (
(
≠≠( )
cam
≠≠) ,
.
≠≠, -
forward
≠≠- 4
,
≠≠4 5
Vector3
≠≠6 =
.
≠≠= >
up
≠≠> @
)
≠≠@ A
.
≠≠A B

normalized
≠≠B L
*
≠≠M N
LineDistance
≠≠O [
(
≠≠[ \
)
≠≠\ ]
;
≠≠] ^
Handles
ØØ 
.
ØØ 
color
ØØ 
=
ØØ 
k_LightWhite
ØØ (
;
ØØ( )
Handles
∞∞ 
.
∞∞ 
DrawLine
∞∞ 
(
∞∞ 
a
∞∞ 
+
∞∞  
left
∞∞! %
*
∞∞& '
$num
∞∞( +
,
∞∞+ ,
a
∞∞- .
+
∞∞/ 0
left
∞∞1 5
)
∞∞5 6
;
∞∞6 7
Handles
±± 
.
±± 
DrawLine
±± 
(
±± 
b
±± 
+
±±  
left
±±! %
*
±±& '
$num
±±( +
,
±±+ ,
b
±±- .
+
±±/ 0
left
±±1 5
)
±±5 6
;
±±6 7
Handles
≤≤ 
.
≤≤ 
color
≤≤ 
=
≤≤ 
Color
≤≤ !
.
≤≤! "
green
≤≤" '
;
≤≤' (
Handles
≥≥ 
.
≥≥ 
DrawLine
≥≥ 
(
≥≥ 
a
≥≥ 
+
≥≥  
left
≥≥! %
,
≥≥% &
b
≥≥' (
+
≥≥) *
left
≥≥+ /
)
≥≥/ 0
;
≥≥0 1
a
µµ 
+=
µµ 
left
µµ 
;
µµ 
b
∂∂ 
+=
∂∂ 
left
∂∂ 
;
∂∂ 
Handles
∏∏ 
.
∏∏ 
BeginGUI
∏∏ 
(
∏∏ 
)
∏∏ 
;
∏∏ 
pos
ππ 
.
ππ 
x
ππ 
-=
ππ 
UI
ππ 
.
ππ 
EditorStyles
ππ $
.
ππ$ %
sceneTextBox
ππ% 1
.
ππ1 2
CalcSize
ππ2 :
(
ππ: ;
gc
ππ; =
)
ππ= >
.
ππ> ?
x
ππ? @
*
ππA B
$num
ππC E
;
ππE F
DrawSceneLabel
∫∫ 
(
∫∫ 
dist
∫∫ 
.
∫∫  
ToString
∫∫  (
(
∫∫( )
$str
∫∫) -
)
∫∫- .
,
∫∫. /
pos
∫∫0 3
)
∫∫3 4
;
∫∫4 5
Handles
ªª 
.
ªª 
EndGUI
ªª 
(
ªª 
)
ªª 
;
ªª 
}
ºº 	
void
ææ 
	DrawDepth
ææ 
(
ææ 
Vector3
ææ 
cen
ææ "
,
ææ" #
Vector3
ææ$ +
ext
ææ, /
)
ææ/ 0
{
øø 	
Vector3
¡¡ 
[
¡¡ 
]
¡¡ 
edges
¡¡ 
=
¡¡ 
new
¡¡ !
Vector3
¡¡" )
[
¡¡) *
$num
¡¡* +
]
¡¡+ ,
{
¬¬ 
new
ƒƒ 
Vector3
ƒƒ 
(
ƒƒ 
cen
ƒƒ 
.
ƒƒ  
x
ƒƒ  !
+
ƒƒ" #
ext
ƒƒ$ '
.
ƒƒ' (
x
ƒƒ( )
,
ƒƒ) *
cen
ƒƒ+ .
.
ƒƒ. /
y
ƒƒ/ 0
-
ƒƒ1 2
ext
ƒƒ3 6
.
ƒƒ6 7
y
ƒƒ7 8
,
ƒƒ8 9
cen
ƒƒ: =
.
ƒƒ= >
z
ƒƒ> ?
+
ƒƒ@ A
ext
ƒƒB E
.
ƒƒE F
z
ƒƒF G
)
ƒƒG H
,
ƒƒH I
new
≈≈ 
Vector3
≈≈ 
(
≈≈ 
cen
≈≈ 
.
≈≈  
x
≈≈  !
+
≈≈" #
ext
≈≈$ '
.
≈≈' (
x
≈≈( )
,
≈≈) *
cen
≈≈+ .
.
≈≈. /
y
≈≈/ 0
-
≈≈1 2
ext
≈≈3 6
.
≈≈6 7
y
≈≈7 8
,
≈≈8 9
cen
≈≈: =
.
≈≈= >
z
≈≈> ?
-
≈≈@ A
ext
≈≈B E
.
≈≈E F
z
≈≈F G
)
≈≈G H
,
≈≈H I
new
»» 
Vector3
»» 
(
»» 
cen
»» 
.
»»  
x
»»  !
+
»»" #
ext
»»$ '
.
»»' (
x
»»( )
,
»») *
cen
»»+ .
.
»». /
y
»»/ 0
+
»»1 2
ext
»»3 6
.
»»6 7
y
»»7 8
,
»»8 9
cen
»»: =
.
»»= >
z
»»> ?
+
»»@ A
ext
»»B E
.
»»E F
z
»»F G
)
»»G H
,
»»H I
new
…… 
Vector3
…… 
(
…… 
cen
…… 
.
……  
x
……  !
+
……" #
ext
……$ '
.
……' (
x
……( )
,
……) *
cen
……+ .
.
……. /
y
……/ 0
+
……1 2
ext
……3 6
.
……6 7
y
……7 8
,
……8 9
cen
……: =
.
……= >
z
……> ?
-
……@ A
ext
……B E
.
……E F
z
……F G
)
……G H
,
……H I
new
ÃÃ 
Vector3
ÃÃ 
(
ÃÃ 
cen
ÃÃ 
.
ÃÃ  
x
ÃÃ  !
-
ÃÃ" #
ext
ÃÃ$ '
.
ÃÃ' (
x
ÃÃ( )
,
ÃÃ) *
cen
ÃÃ+ .
.
ÃÃ. /
y
ÃÃ/ 0
-
ÃÃ1 2
ext
ÃÃ3 6
.
ÃÃ6 7
y
ÃÃ7 8
,
ÃÃ8 9
cen
ÃÃ: =
.
ÃÃ= >
z
ÃÃ> ?
+
ÃÃ@ A
ext
ÃÃB E
.
ÃÃE F
z
ÃÃF G
)
ÃÃG H
,
ÃÃH I
new
ÕÕ 
Vector3
ÕÕ 
(
ÕÕ 
cen
ÕÕ 
.
ÕÕ  
x
ÕÕ  !
-
ÕÕ" #
ext
ÕÕ$ '
.
ÕÕ' (
x
ÕÕ( )
,
ÕÕ) *
cen
ÕÕ+ .
.
ÕÕ. /
y
ÕÕ/ 0
-
ÕÕ1 2
ext
ÕÕ3 6
.
ÕÕ6 7
y
ÕÕ7 8
,
ÕÕ8 9
cen
ÕÕ: =
.
ÕÕ= >
z
ÕÕ> ?
-
ÕÕ@ A
ext
ÕÕB E
.
ÕÕE F
z
ÕÕF G
)
ÕÕG H
,
ÕÕH I
new
–– 
Vector3
–– 
(
–– 
cen
–– 
.
––  
x
––  !
-
––" #
ext
––$ '
.
––' (
x
––( )
,
––) *
cen
––+ .
.
––. /
y
––/ 0
+
––1 2
ext
––3 6
.
––6 7
y
––7 8
,
––8 9
cen
––: =
.
––= >
z
––> ?
+
––@ A
ext
––B E
.
––E F
z
––F G
)
––G H
,
––H I
new
—— 
Vector3
—— 
(
—— 
cen
—— 
.
——  
x
——  !
-
——" #
ext
——$ '
.
——' (
x
——( )
,
——) *
cen
——+ .
.
——. /
y
——/ 0
+
——1 2
ext
——3 6
.
——6 7
y
——7 8
,
——8 9
cen
——: =
.
——= >
z
——> ?
-
——@ A
ext
——B E
.
——E F
z
——F G
)
——G H
,
——H I
}
““ 
;
““ 
Vector2
’’ 
pos
’’ 
=
’’ 
Vector2
’’ !
.
’’! "
up
’’" $
*
’’% &
-
’’' (
$num
’’( .
;
’’. /
Vector3
÷÷ 
a
÷÷ 
=
÷÷ 
Vector3
÷÷ 
.
÷÷  
zero
÷÷  $
,
÷÷$ %
b
÷÷& '
=
÷÷( )
Vector3
÷÷* 1
.
÷÷1 2
zero
÷÷2 6
;
÷÷6 7
for
ÿÿ 
(
ÿÿ 
int
ÿÿ 
i
ÿÿ 
=
ÿÿ 
$num
ÿÿ 
;
ÿÿ 
i
ÿÿ 
<
ÿÿ 
edges
ÿÿ  %
.
ÿÿ% &
Length
ÿÿ& ,
;
ÿÿ, -
i
ÿÿ. /
+=
ÿÿ0 2
$num
ÿÿ3 4
)
ÿÿ4 5
{
ŸŸ 
Vector2
⁄⁄ 
screen
⁄⁄ 
=
⁄⁄  
HandleUtility
⁄⁄! .
.
⁄⁄. /
WorldToGUIPoint
⁄⁄/ >
(
⁄⁄> ?
(
⁄⁄? @
edges
⁄⁄@ E
[
⁄⁄E F
i
⁄⁄F G
]
⁄⁄G H
+
⁄⁄I J
edges
⁄⁄K P
[
⁄⁄P Q
i
⁄⁄Q R
+
⁄⁄S T
$num
⁄⁄U V
]
⁄⁄V W
)
⁄⁄W X
*
⁄⁄Y Z
$num
⁄⁄[ ^
)
⁄⁄^ _
;
⁄⁄_ `
if
‹‹ 
(
‹‹ 
screen
‹‹ 
.
‹‹ 
y
‹‹ 
>
‹‹ 
pos
‹‹ "
.
‹‹" #
y
‹‹# $
)
‹‹$ %
{
›› 
pos
ﬁﬁ 
=
ﬁﬁ 
screen
ﬁﬁ  
;
ﬁﬁ  !
a
ﬂﬂ 
=
ﬂﬂ 
edges
ﬂﬂ 
[
ﬂﬂ 
i
ﬂﬂ 
+
ﬂﬂ  !
$num
ﬂﬂ" #
]
ﬂﬂ# $
;
ﬂﬂ$ %
b
‡‡ 
=
‡‡ 
edges
‡‡ 
[
‡‡ 
i
‡‡ 
+
‡‡  !
$num
‡‡" #
]
‡‡# $
;
‡‡$ %
}
·· 
}
‚‚ 
float
‰‰ 
dist
‰‰ 
=
‰‰ 
Vector3
‰‰  
.
‰‰  !
Distance
‰‰! )
(
‰‰) *
a
‰‰* +
,
‰‰+ ,
b
‰‰- .
)
‰‰. /
;
‰‰/ 0
if
ÊÊ 
(
ÊÊ 
dist
ÊÊ 
<
ÊÊ 
Mathf
ÊÊ 
.
ÊÊ 
Epsilon
ÊÊ $
)
ÊÊ$ %
return
ÁÁ 
;
ÁÁ 
float
ÈÈ 
dot
ÈÈ 
=
ÈÈ 
Vector3
ÈÈ 
.
ÈÈ  
Dot
ÈÈ  #
(
ÈÈ# $
cam
ÈÈ$ '
.
ÈÈ' (
	transform
ÈÈ( 1
.
ÈÈ1 2
forward
ÈÈ2 9
,
ÈÈ9 :
Vector3
ÈÈ; B
.
ÈÈB C
right
ÈÈC H
)
ÈÈH I
;
ÈÈI J
float
ÍÍ 
sign
ÍÍ 
=
ÍÍ 
dot
ÍÍ 
<
ÍÍ 
$num
ÍÍ !
?
ÍÍ" #
-
ÍÍ$ %
$num
ÍÍ% '
:
ÍÍ( )
$num
ÍÍ* ,
;
ÍÍ, -
Vector3
ÎÎ 
offset
ÎÎ 
=
ÎÎ 
-
ÎÎ 
(
ÎÎ 
Vector3
ÎÎ &
.
ÎÎ& '
up
ÎÎ' )
+
ÎÎ* +
(
ÎÎ, -
Vector3
ÎÎ- 4
.
ÎÎ4 5
right
ÎÎ5 :
*
ÎÎ; <
sign
ÎÎ= A
)
ÎÎA B
)
ÎÎB C
.
ÎÎC D

normalized
ÎÎD N
*
ÎÎO P
LineDistance
ÎÎQ ]
(
ÎÎ] ^
)
ÎÎ^ _
;
ÎÎ_ `
Handles
ÌÌ 
.
ÌÌ 
color
ÌÌ 
=
ÌÌ 
k_LightWhite
ÌÌ (
;
ÌÌ( )
Handles
ÓÓ 
.
ÓÓ 
DrawLine
ÓÓ 
(
ÓÓ 
a
ÓÓ 
+
ÓÓ  
offset
ÓÓ! '
*
ÓÓ( )
$num
ÓÓ* -
,
ÓÓ- .
a
ÓÓ/ 0
+
ÓÓ1 2
offset
ÓÓ3 9
)
ÓÓ9 :
;
ÓÓ: ;
Handles
ÔÔ 
.
ÔÔ 
DrawLine
ÔÔ 
(
ÔÔ 
b
ÔÔ 
+
ÔÔ  
offset
ÔÔ! '
*
ÔÔ( )
$num
ÔÔ* -
,
ÔÔ- .
b
ÔÔ/ 0
+
ÔÔ1 2
offset
ÔÔ3 9
)
ÔÔ9 :
;
ÔÔ: ;
a
ÒÒ 
+=
ÒÒ 
offset
ÒÒ 
;
ÒÒ 
b
ÚÚ 
+=
ÚÚ 
offset
ÚÚ 
;
ÚÚ 
Handles
ÙÙ 
.
ÙÙ 
color
ÙÙ 
=
ÙÙ 
Color
ÙÙ !
.
ÙÙ! "
blue
ÙÙ" &
;
ÙÙ& '
Handles
ıı 
.
ıı 
DrawLine
ıı 
(
ıı 
a
ıı 
,
ıı 
b
ıı  !
)
ıı! "
;
ıı" #
Handles
˜˜ 
.
˜˜ 
BeginGUI
˜˜ 
(
˜˜ 
)
˜˜ 
;
˜˜ 
pos
¯¯ 
.
¯¯ 
y
¯¯ 
+=
¯¯ 
UI
¯¯ 
.
¯¯ 
EditorStyles
¯¯ $
.
¯¯$ %
sceneTextBox
¯¯% 1
.
¯¯1 2

CalcHeight
¯¯2 <
(
¯¯< =
gc
¯¯= ?
,
¯¯? @
$num
¯¯A F
)
¯¯F G
;
¯¯G H
DrawSceneLabel
˘˘ 
(
˘˘ 
dist
˘˘ 
.
˘˘  
ToString
˘˘  (
(
˘˘( )
$str
˘˘) -
)
˘˘- .
,
˘˘. /
pos
˘˘0 3
)
˘˘3 4
;
˘˘4 5
Handles
˚˚ 
.
˚˚ 
EndGUI
˚˚ 
(
˚˚ 
)
˚˚ 
;
˚˚ 
}
¸¸ 	
void
˛˛ 
	DrawWidth
˛˛ 
(
˛˛ 
Vector3
˛˛ 
cen
˛˛ "
,
˛˛" #
Vector3
˛˛$ +
extents
˛˛, 3
)
˛˛3 4
{
ˇˇ 	
Vector3
ÄÄ 
ext
ÄÄ 
=
ÄÄ 
extents
ÄÄ !
;
ÄÄ! "
Vector3
ÉÉ 
[
ÉÉ 
]
ÉÉ 
edges
ÉÉ 
=
ÉÉ 
new
ÉÉ !
Vector3
ÉÉ" )
[
ÉÉ) *
$num
ÉÉ* +
]
ÉÉ+ ,
{
ÑÑ 
new
ÜÜ 
Vector3
ÜÜ 
(
ÜÜ 
cen
ÜÜ 
.
ÜÜ  
x
ÜÜ  !
-
ÜÜ" #
ext
ÜÜ$ '
.
ÜÜ' (
x
ÜÜ( )
,
ÜÜ) *
cen
ÜÜ+ .
.
ÜÜ. /
y
ÜÜ/ 0
-
ÜÜ1 2
ext
ÜÜ3 6
.
ÜÜ6 7
y
ÜÜ7 8
,
ÜÜ8 9
cen
ÜÜ: =
.
ÜÜ= >
z
ÜÜ> ?
-
ÜÜ@ A
ext
ÜÜB E
.
ÜÜE F
z
ÜÜF G
)
ÜÜG H
,
ÜÜH I
new
áá 
Vector3
áá 
(
áá 
cen
áá 
.
áá  
x
áá  !
+
áá" #
ext
áá$ '
.
áá' (
x
áá( )
,
áá) *
cen
áá+ .
.
áá. /
y
áá/ 0
-
áá1 2
ext
áá3 6
.
áá6 7
y
áá7 8
,
áá8 9
cen
áá: =
.
áá= >
z
áá> ?
-
áá@ A
ext
ááB E
.
ááE F
z
ááF G
)
ááG H
,
ááH I
new
ää 
Vector3
ää 
(
ää 
cen
ää 
.
ää  
x
ää  !
-
ää" #
ext
ää$ '
.
ää' (
x
ää( )
,
ää) *
cen
ää+ .
.
ää. /
y
ää/ 0
-
ää1 2
ext
ää3 6
.
ää6 7
y
ää7 8
,
ää8 9
cen
ää: =
.
ää= >
z
ää> ?
+
ää@ A
ext
ääB E
.
ääE F
z
ääF G
)
ääG H
,
ääH I
new
ãã 
Vector3
ãã 
(
ãã 
cen
ãã 
.
ãã  
x
ãã  !
+
ãã" #
ext
ãã$ '
.
ãã' (
x
ãã( )
,
ãã) *
cen
ãã+ .
.
ãã. /
y
ãã/ 0
-
ãã1 2
ext
ãã3 6
.
ãã6 7
y
ãã7 8
,
ãã8 9
cen
ãã: =
.
ãã= >
z
ãã> ?
+
ãã@ A
ext
ããB E
.
ããE F
z
ããF G
)
ããG H
,
ããH I
new
éé 
Vector3
éé 
(
éé 
cen
éé 
.
éé  
x
éé  !
-
éé" #
ext
éé$ '
.
éé' (
x
éé( )
,
éé) *
cen
éé+ .
.
éé. /
y
éé/ 0
+
éé1 2
ext
éé3 6
.
éé6 7
y
éé7 8
,
éé8 9
cen
éé: =
.
éé= >
z
éé> ?
-
éé@ A
ext
ééB E
.
ééE F
z
ééF G
)
ééG H
,
ééH I
new
èè 
Vector3
èè 
(
èè 
cen
èè 
.
èè  
x
èè  !
+
èè" #
ext
èè$ '
.
èè' (
x
èè( )
,
èè) *
cen
èè+ .
.
èè. /
y
èè/ 0
+
èè1 2
ext
èè3 6
.
èè6 7
y
èè7 8
,
èè8 9
cen
èè: =
.
èè= >
z
èè> ?
-
èè@ A
ext
èèB E
.
èèE F
z
èèF G
)
èèG H
,
èèH I
new
íí 
Vector3
íí 
(
íí 
cen
íí 
.
íí  
x
íí  !
-
íí" #
ext
íí$ '
.
íí' (
x
íí( )
,
íí) *
cen
íí+ .
.
íí. /
y
íí/ 0
+
íí1 2
ext
íí3 6
.
íí6 7
y
íí7 8
,
íí8 9
cen
íí: =
.
íí= >
z
íí> ?
+
íí@ A
ext
ííB E
.
ííE F
z
ííF G
)
ííG H
,
ííH I
new
ìì 
Vector3
ìì 
(
ìì 
cen
ìì 
.
ìì  
x
ìì  !
+
ìì" #
ext
ìì$ '
.
ìì' (
x
ìì( )
,
ìì) *
cen
ìì+ .
.
ìì. /
y
ìì/ 0
+
ìì1 2
ext
ìì3 6
.
ìì6 7
y
ìì7 8
,
ìì8 9
cen
ìì: =
.
ìì= >
z
ìì> ?
+
ìì@ A
ext
ììB E
.
ììE F
z
ììF G
)
ììG H
}
îî 
;
îî 
Vector2
óó 
pos
óó 
=
óó 
Vector2
óó !
.
óó! "
up
óó" $
*
óó% &
-
óó' (
$num
óó( .
;
óó. /
Vector3
òò 
a
òò 
=
òò 
Vector3
òò 
.
òò  
zero
òò  $
,
òò$ %
b
òò& '
=
òò( )
Vector3
òò* 1
.
òò1 2
zero
òò2 6
;
òò6 7
for
öö 
(
öö 
int
öö 
i
öö 
=
öö 
$num
öö 
;
öö 
i
öö 
<
öö 
edges
öö  %
.
öö% &
Length
öö& ,
;
öö, -
i
öö. /
+=
öö0 2
$num
öö3 4
)
öö4 5
{
õõ 
Vector2
úú 
screen
úú 
=
úú  
HandleUtility
úú! .
.
úú. /
WorldToGUIPoint
úú/ >
(
úú> ?
(
úú? @
edges
úú@ E
[
úúE F
i
úúF G
]
úúG H
+
úúI J
edges
úúK P
[
úúP Q
i
úúQ R
+
úúS T
$num
úúU V
]
úúV W
)
úúW X
*
úúY Z
$num
úú[ ^
)
úú^ _
;
úú_ `
if
ûû 
(
ûû 
screen
ûû 
.
ûû 
y
ûû 
>
ûû 
pos
ûû "
.
ûû" #
y
ûû# $
)
ûû$ %
{
üü 
pos
†† 
=
†† 
screen
††  
;
††  !
a
°° 
=
°° 
edges
°° 
[
°° 
i
°° 
+
°°  !
$num
°°" #
]
°°# $
;
°°$ %
b
¢¢ 
=
¢¢ 
edges
¢¢ 
[
¢¢ 
i
¢¢ 
+
¢¢  !
$num
¢¢" #
]
¢¢# $
;
¢¢$ %
}
££ 
}
§§ 
float
¶¶ 
dist
¶¶ 
=
¶¶ 
Vector3
¶¶  
.
¶¶  !
Distance
¶¶! )
(
¶¶) *
a
¶¶* +
,
¶¶+ ,
b
¶¶- .
)
¶¶. /
;
¶¶/ 0
if
®® 
(
®® 
dist
®® 
<
®® 
Mathf
®® 
.
®® 
Epsilon
®® $
)
®®$ %
return
©© 
;
©© 
float
≠≠ 
dot
≠≠ 
=
≠≠ 
Vector3
≠≠ 
.
≠≠  
Dot
≠≠  #
(
≠≠# $
cam
≠≠$ '
.
≠≠' (
	transform
≠≠( 1
.
≠≠1 2
forward
≠≠2 9
,
≠≠9 :
Vector3
≠≠; B
.
≠≠B C
forward
≠≠C J
)
≠≠J K
;
≠≠K L
float
ÆÆ 
sign
ÆÆ 
=
ÆÆ 
dot
ÆÆ 
<
ÆÆ 
$num
ÆÆ !
?
ÆÆ" #
-
ÆÆ$ %
$num
ÆÆ% '
:
ÆÆ( )
$num
ÆÆ* ,
;
ÆÆ, -
Vector3
ØØ 
offset
ØØ 
=
ØØ 
-
ØØ 
(
ØØ 
Vector3
ØØ &
.
ØØ& '
up
ØØ' )
+
ØØ* +
(
ØØ, -
Vector3
ØØ- 4
.
ØØ4 5
forward
ØØ5 <
*
ØØ= >
sign
ØØ? C
)
ØØC D
)
ØØD E
.
ØØE F

normalized
ØØF P
*
ØØQ R
LineDistance
ØØS _
(
ØØ_ `
)
ØØ` a
;
ØØa b
Handles
±± 
.
±± 
color
±± 
=
±± 
k_LightWhite
±± (
;
±±( )
Handles
≤≤ 
.
≤≤ 
DrawLine
≤≤ 
(
≤≤ 
a
≤≤ 
+
≤≤  
offset
≤≤! '
*
≤≤( )
$num
≤≤* -
,
≤≤- .
a
≤≤/ 0
+
≤≤1 2
offset
≤≤3 9
)
≤≤9 :
;
≤≤: ;
Handles
≥≥ 
.
≥≥ 
DrawLine
≥≥ 
(
≥≥ 
b
≥≥ 
+
≥≥  
offset
≥≥! '
*
≥≥( )
$num
≥≥* -
,
≥≥- .
b
≥≥/ 0
+
≥≥1 2
offset
≥≥3 9
)
≥≥9 :
;
≥≥: ;
a
µµ 
+=
µµ 
offset
µµ 
;
µµ 
b
∂∂ 
+=
∂∂ 
offset
∂∂ 
;
∂∂ 
Handles
∏∏ 
.
∏∏ 
color
∏∏ 
=
∏∏ 
Color
∏∏ !
.
∏∏! "
red
∏∏" %
;
∏∏% &
Handles
ππ 
.
ππ 
DrawLine
ππ 
(
ππ 
a
ππ 
,
ππ 
b
ππ  !
)
ππ! "
;
ππ" #
Handles
∫∫ 
.
∫∫ 
BeginGUI
∫∫ 
(
∫∫ 
)
∫∫ 
;
∫∫ 
DrawSceneLabel
ªª 
(
ªª 
dist
ªª 
.
ªª  
ToString
ªª  (
(
ªª( )
$str
ªª) -
)
ªª- .
,
ªª. /
HandleUtility
ªª0 =
.
ªª= >
WorldToGUIPoint
ªª> M
(
ªªM N
(
ªªN O
a
ªªO P
+
ªªQ R
b
ªªS T
)
ªªT U
*
ªªV W
$num
ªªX [
)
ªª[ \
)
ªª\ ]
;
ªª] ^
Handles
ºº 
.
ºº 
EndGUI
ºº 
(
ºº 
)
ºº 
;
ºº 
}
ΩΩ 	

GUIContent
øø 
gc
øø 
=
øø 
new
øø 

GUIContent
øø &
(
øø& '
$str
øø' )
,
øø) *
$str
øø+ -
)
øø- .
;
øø. /
void
¡¡ 
DrawSceneLabel
¡¡ 
(
¡¡ 
string
¡¡ "
content
¡¡# *
,
¡¡* +
Vector2
¡¡, 3
position
¡¡4 <
)
¡¡< =
{
¬¬ 	
gc
√√ 
.
√√ 
text
√√ 
=
√√ 
content
√√ 
;
√√ 
float
ƒƒ 
width
ƒƒ 
=
ƒƒ 
UI
ƒƒ 
.
ƒƒ 
EditorStyles
ƒƒ )
.
ƒƒ) *
sceneTextBox
ƒƒ* 6
.
ƒƒ6 7
CalcSize
ƒƒ7 ?
(
ƒƒ? @
gc
ƒƒ@ B
)
ƒƒB C
.
ƒƒC D
x
ƒƒD E
;
ƒƒE F
float
≈≈ 
height
≈≈ 
=
≈≈ 
UI
≈≈ 
.
≈≈ 
EditorStyles
≈≈ *
.
≈≈* +
sceneTextBox
≈≈+ 7
.
≈≈7 8

CalcHeight
≈≈8 B
(
≈≈B C
gc
≈≈C E
,
≈≈E F
width
≈≈G L
)
≈≈L M
;
≈≈M N
GUI
∆∆ 
.
∆∆ 
Label
∆∆ 
(
∆∆ 
new
∆∆ 
Rect
∆∆ 
(
∆∆ 
position
∆∆ '
.
∆∆' (
x
∆∆( )
,
∆∆) *
position
∆∆+ 3
.
∆∆3 4
y
∆∆4 5
,
∆∆5 6
width
∆∆7 <
,
∆∆< =
height
∆∆> D
)
∆∆D E
,
∆∆E F
gc
∆∆G I
,
∆∆I J
UI
∆∆K M
.
∆∆M N
EditorStyles
∆∆N Z
.
∆∆Z [
sceneTextBox
∆∆[ g
)
∆∆g h
;
∆∆h i
}
«« 	
}
»» 
}…… ™‹
ôD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Export\ExportAsset.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
.		  !
Actions		! (
{

 
[ 
Serializable 
] 
struct 

ExportAssetOptions 
{ 
public 
bool 

makePrefab 
; 
public 
bool 
replaceOriginal #
;# $
public 
static 
readonly 
ExportAssetOptions 1
defaults2 :
=; <
new= @
ExportAssetOptionsA S
(S T
)T U
{ 	

makePrefab 
= 
false 
, 
replaceOriginal 
= 
false #
} 	
;	 

} 
sealed 

class 
ExportAsset 
: 

MenuAction )
{ 
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
ExportG M
;M N
}O P
}Q R
public 
override 
	Texture2D !
icon" &
{' (
get) ,
{- .
return/ 5
null6 :
;: ;
}< =
}> ?
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
	s_Tooltip> G
;G H
}I J
}K L
internal 
static 
Pref 
< 
ExportAssetOptions /
>/ 0 
s_ExportAssetOptions1 E
=F G
newG J
PrefK O
<O P
ExportAssetOptionsP b
>b c
(c d
$strd y
,y z
ExportAssetOptions	{ ç
.
ç é
defaults
é ñ
)
ñ ó
;
ó ò
static   
readonly   
TooltipContent   &
	s_Tooltip  ' 0
=  1 2
new  3 6
TooltipContent  7 E
(!! 
$str"" 
,"" 
$str## 1
)$$ 
;$$ 
public&& 
override&& 
bool&& 
enabled&& $
{'' 	
get(( 
{(( 
return(( 
MeshSelection(( &
.((& '
selectedObjectCount((' :
>((; <
$num((= >
;((> ?
}((@ A
})) 	
public++ 
override++ 
bool++ 
hidden++ #
{,, 	
get-- 
{-- 
return-- 
true-- 
;-- 
}--  
}.. 	
public00 
override00 
ActionResult00 $
DoAction00% -
(00- .
)00. /
{11 	
var22 
opt22 
=22  
s_ExportAssetOptions22 *
.22* +
value22+ 0
;220 1
var33 
res33 
=33  
ExportWithFileDialog33 *
(33* +
MeshSelection33+ 8
.338 9
topInternal339 D
,33D E
opt33F I
)33I J
;33J K
Export44 
.44 
PingExportedModel44 $
(44$ %
res44% (
)44( )
;44) *
return55 
new55 
ActionResult55 #
(55# $
ActionResult55$ 0
.550 1
Status551 7
.557 8
Success558 ?
,55? @
opt55A D
.55D E

makePrefab55E O
?55P Q
$str55R _
:55` a
$str55b n
)55n o
;55o p
}66 	
public== 
static== 
string==  
ExportWithFileDialog== 1
(==1 2
IList==2 7
<==7 8
ProBuilderMesh==8 F
>==F G
meshes==H N
,==N O
ExportAssetOptions==P b
options==c j
)==j k
{>> 	
if?? 
(?? 
meshes?? 
==?? 
null?? 
||?? !
!??" #
meshes??# )
.??) *
Any??* -
(??- .
)??. /
)??/ 0
return@@ 
$str@@ 
;@@ 
stringBB 
resBB 
=BB 
nullBB 
;BB 
ifDD 
(DD 
meshesDD 
.DD 
CountDD 
(DD 
)DD 
<DD  
$numDD! "
)DD" #
{EE 
ProBuilderMeshFF 
firstFF $
=FF% &
meshesFF' -
.FF- .
FirstOrDefaultFF. <
(FF< =
)FF= >
;FF> ?
ifHH 
(HH 
firstHH 
==HH 
nullHH !
)HH! "
returnII 
nullII 
;II  
resKK 
=KK 
optionsKK 
.KK 

makePrefabKK (
?LL 
ExportPrefabLL "
(LL" #
firstLL# (
,LL( )
optionsLL* 1
.LL1 2
replaceOriginalLL2 A
)LLA B
:MM 

ExportMeshMM  
(MM  !
firstMM! &
,MM& '
optionsMM( /
.MM/ 0
replaceOriginalMM0 ?
)MM? @
;MM@ A
}NN 
elseOO 
{PP 
stringQQ 
pathQQ 
=QQ 
UnityEditorQQ )
.QQ) *
EditorUtilityQQ* 7
.QQ7 8
SaveFolderPanelQQ8 G
(QQG H
$strQQH Y
,QQY Z
$strQQ[ c
,QQc d
$strQQe g
)QQg h
;QQh i
ifSS 
(SS 
stringSS 
.SS 
IsNullOrEmptySS (
(SS( )
pathSS) -
)SS- .
||SS/ 1
!SS2 3
	DirectorySS3 <
.SS< =
ExistsSS= C
(SSC D
pathSSD H
)SSH I
)SSI J
returnTT 
nullTT 
;TT  
meshesVV 
=VV 
meshesVV 
.VV  
ToListVV  &
(VV& '
)VV' (
;VV( )
forWW 
(WW 
intWW 
iWW 
=WW 
$numWW 
,WW 
cWW  !
=WW" #
meshesWW$ *
.WW* +
CountWW+ 0
;WW0 1
iWW2 3
<WW4 5
cWW6 7
;WW7 8
iWW9 :
++WW: <
)WW< =
{XX 
varYY 
pbYY 
=YY 
meshesYY #
[YY# $
iYY$ %
]YY% &
;YY& '
varZZ 
	assetPathZZ !
=ZZ" #
stringZZ$ *
.ZZ* +
FormatZZ+ 1
(ZZ1 2
$strZZ2 A
,ZZA B
pathZZC G
,ZZG H
pbZZI K
.ZZK L
nameZZL P
)ZZP Q
;ZZQ R
if\\ 
(\\ 
options\\ 
.\\  

makePrefab\\  *
)\\* +
{]] 
res^^ 
=^^ 
ExportPrefab^^ *
(^^* +
	assetPath^^+ 4
,^^4 5
pb^^6 8
,^^8 9
options^^: A
.^^A B
replaceOriginal^^B Q
,^^Q R
true^^S W
)^^W X
;^^X Y
}__ 
else`` 
{aa 
resbb 
=bb 

ExportMeshbb (
(bb( )
	assetPathbb) 2
,bb2 3
pbbb4 6
,bb6 7
optionsbb8 ?
.bb? @
replaceOriginalbb@ O
,bbO P
truebbQ U
)bbU V
;bbV W
ifdd 
(dd 
optionsdd #
.dd# $
replaceOriginaldd$ 3
)dd3 4
{ee 
pbff 
.ff &
preserveMeshAssetOnDestroyff 9
=ff: ;
trueff< @
;ff@ A
Undogg  
.gg  !"
DestroyObjectImmediategg! 7
(gg7 8
pbgg8 :
)gg: ;
;gg; <
}hh 
}jj 
}kk 
}ll 
AssetDatabasemm 
.mm 
Refreshmm !
(mm! "
)mm" #
;mm# $
returnoo 
resoo 
;oo 
}pp 	
staticrr 
stringrr !
AssetPathFromFullPathrr +
(rr+ ,
stringrr, 2
pathrr3 7
,rr7 8
stringrr9 ?
	extensionrr@ I
)rrI J
{ss 	
iftt 
(tt 
stringtt 
.tt 
IsNullOrEmptytt $
(tt$ %
pathtt% )
)tt) *
)tt* +
returntt, 2
nulltt3 7
;tt7 8
stringvv 
	directoryvv 
=vv 
Pathvv #
.vv# $
GetDirectoryNamevv$ 4
(vv4 5
pathvv5 9
)vv9 :
.vv: ;
Replacevv; B
(vvB C
$strvvC G
,vvG H
$strvvI L
)vvL M
;vvM N
stringww 
nameww 
=ww 
Pathww 
.ww '
GetFileNameWithoutExtensionww :
(ww: ;
pathww; ?
)ww? @
;ww@ A
stringxx 
relativeDirectoryxx $
=xx% &
stringxx' -
.xx- .
Formatxx. 4
(xx4 5
$strxx5 @
,xx@ A
	directoryxxB K
.xxK L
ReplacexxL S
(xxS T
ApplicationxxT _
.xx_ `
dataPathxx` h
,xxh i
$strxxj l
)xxl m
)xxm n
;xxn o
returnyy 
!yy 
stringyy 
.yy 
IsNullOrEmptyyy (
(yy( )
	extensionyy) 2
)yy2 3
?zz 
stringzz 
.zz 
Formatzz 
(zz  
$strzz  -
,zz- .
relativeDirectoryzz/ @
,zz@ A
namezzB F
,zzF G
	extensionzzH Q
)zzQ R
:{{ 
string{{ 
.{{ 
Format{{ 
({{  
$str{{  )
,{{) *
relativeDirectory{{+ <
,{{< =
name{{> B
){{B C
;{{C D
}|| 	
static~~ 
string~~ 

AskForPath~~  
(~~  !
string~~! '
fileName~~( 0
,~~0 1
string~~2 8
	extension~~9 B
)~~B C
{ 	
return
ÄÄ 
UnityEditor
ÄÄ 
.
ÄÄ 
EditorUtility
ÄÄ ,
.
ÄÄ, -
SaveFilePanel
ÄÄ- :
(
ÄÄ: ;
$str
ÄÄ; L
,
ÄÄL M
$str
ÄÄN V
,
ÄÄV W
fileName
ÄÄX `
,
ÄÄ` a
	extension
ÄÄb k
)
ÄÄk l
;
ÄÄl m
}
ÅÅ 	
static
ÉÉ 
string
ÉÉ 
AskForAssetPath
ÉÉ %
(
ÉÉ% &
string
ÉÉ& ,
fileName
ÉÉ- 5
,
ÉÉ5 6
string
ÉÉ7 =
	extension
ÉÉ> G
)
ÉÉG H
{
ÑÑ 	
return
ÖÖ #
AssetPathFromFullPath
ÖÖ (
(
ÖÖ( )

AskForPath
ÖÖ) 3
(
ÖÖ3 4
fileName
ÖÖ4 <
,
ÖÖ< =
	extension
ÖÖ> G
)
ÖÖG H
,
ÖÖH I
	extension
ÖÖJ S
)
ÖÖS T
;
ÖÖT U
}
ÜÜ 	
static
àà 
string
àà $
PickDifferentAssetPath
àà ,
(
àà, -
string
àà- 3
previousAssetPath
àà4 E
)
ààE F
{
ââ 	
var
ää 
	extension
ää 
=
ää 
Path
ää  
.
ää  !
GetExtension
ää! -
(
ää- .
previousAssetPath
ää. ?
)
ää? @
;
ää@ A
if
ãã 
(
ãã 
	extension
ãã 
!=
ãã 
null
ãã !
&&
ãã" $
	extension
ãã% .
.
ãã. /

StartsWith
ãã/ 9
(
ãã9 :
$str
ãã: =
)
ãã= >
)
ãã> ?
{
åå 
	extension
çç 
=
çç 
	extension
çç %
.
çç% &
	Substring
çç& /
(
çç/ 0
$num
çç0 1
)
çç1 2
;
çç2 3
}
éé 
var
èè 
newPath
èè 
=
èè 
AskForAssetPath
èè )
(
èè) *
Path
êê 
.
êê )
GetFileNameWithoutExtension
êê 0
(
êê0 1
previousAssetPath
êê1 B
)
êêB C
,
êêC D
	extension
ëë 
)
íí 
;
íí 
return
ìì 
!
ìì 
string
ìì 
.
ìì 
IsNullOrEmpty
ìì (
(
ìì( )
newPath
ìì) 0
)
ìì0 1
?
îî 
newPath
îî 
:
ïï 
AssetDatabase
ïï 
.
ïï  %
GenerateUniqueAssetPath
ïï  7
(
ïï7 8
previousAssetPath
ïï8 I
)
ïïI J
;
ïïJ K
}
ññ 	
static
òò 
string
òò 
ExportPrefab
òò "
(
òò" #
ProBuilderMesh
òò# 1
mesh
òò2 6
,
òò6 7
bool
òò8 <
replaceOriginal
òò= L
)
òòL M
{
ôô 	
string
öö 
path
öö 
=
öö 

AskForPath
öö $
(
öö$ %
mesh
öö% )
.
öö) *
name
öö* .
,
öö. /
$str
öö0 8
)
öö8 9
;
öö9 :
if
úú 
(
úú 
string
úú 
.
úú 
IsNullOrEmpty
úú $
(
úú$ %
path
úú% )
)
úú) *
)
úú* +
return
ùù 
null
ùù 
;
ùù 
return
üü 
ExportPrefab
üü 
(
üü  
path
üü  $
,
üü$ %
mesh
üü& *
,
üü* +
replaceOriginal
üü, ;
,
üü; <
false
üü= B
)
üüB C
;
üüC D
}
†† 	
static
¢¢ 
string
¢¢ 

ExportMesh
¢¢  
(
¢¢  !
ProBuilderMesh
¢¢! /
mesh
¢¢0 4
,
¢¢4 5
bool
¢¢6 :
replaceOriginal
¢¢; J
)
¢¢J K
{
££ 	
string
§§ 
path
§§ 
=
§§ 

AskForPath
§§ $
(
§§$ %
mesh
§§% )
.
§§) *
name
§§* .
,
§§. /
$str
§§0 7
)
§§7 8
;
§§8 9
if
¶¶ 
(
¶¶ 
string
¶¶ 
.
¶¶ 
IsNullOrEmpty
¶¶ $
(
¶¶$ %
path
¶¶% )
)
¶¶) *
)
¶¶* +
return
ßß 
null
ßß 
;
ßß 

ExportMesh
©© 
(
©© 
path
©© 
,
©© 
mesh
©© !
,
©©! "
replaceOriginal
©©# 2
,
©©2 3
false
©©4 9
)
©©9 :
;
©©: ;
if
´´ 
(
´´ 
replaceOriginal
´´ 
)
´´  
{
¨¨ 
mesh
≠≠ 
.
≠≠ (
preserveMeshAssetOnDestroy
≠≠ /
=
≠≠0 1
true
≠≠2 6
;
≠≠6 7
Undo
ÆÆ 
.
ÆÆ $
DestroyObjectImmediate
ÆÆ +
(
ÆÆ+ ,
mesh
ÆÆ, 0
)
ÆÆ0 1
;
ÆÆ1 2
}
ØØ 
else
∞∞ 
{
±± 
mesh
≤≤ 
.
≤≤ 
mesh
≤≤ 
=
≤≤ 
null
≤≤  
;
≤≤  !
EditorUtility
≥≥ 
.
≥≥ '
SynchronizeWithMeshFilter
≥≥ 7
(
≥≥7 8
mesh
≥≥8 <
)
≥≥< =
;
≥≥= >
}
¥¥ 
return
∂∂ 
path
∂∂ 
;
∂∂ 
}
∑∑ 	
static
ππ 
string
ππ 
ExportPrefab
ππ "
(
ππ" #
string
ππ# )
path
ππ* .
,
ππ. /
ProBuilderMesh
ππ0 >
pb
ππ? A
,
ππA B
bool
ππC G
replaceOriginal
ππH W
,
ππW X
bool
ππY ]
batchExport
ππ^ i
)
ππi j
{
∫∫ 	
string
ªª 
name
ªª 
=
ªª 
Path
ªª 
.
ªª )
GetFileNameWithoutExtension
ªª :
(
ªª: ;
path
ªª; ?
)
ªª? @
;
ªª@ A
string
ºº 
basePath
ºº 
=
ºº #
AssetPathFromFullPath
ºº 3
(
ºº3 4
path
ºº4 8
,
ºº8 9
null
ºº: >
)
ºº> ?
;
ºº? @
pb
ææ 
.
ææ 
ToMesh
ææ 
(
ææ 
)
ææ 
;
ææ 
pb
øø 
.
øø 
Refresh
øø 
(
øø 
)
øø 
;
øø 
pb
¿¿ 
.
¿¿ 
Optimize
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿ 
string
¬¬ 
meshPath
¬¬ 
=
¬¬ 
string
¬¬ $
.
¬¬$ %
Format
¬¬% +
(
¬¬+ ,
$str
¬¬, 7
,
¬¬7 8
basePath
¬¬9 A
)
¬¬A B
;
¬¬B C
string
√√ 

prefabPath
√√ 
=
√√ 
string
√√  &
.
√√& '
Format
√√' -
(
√√- .
$str
√√. :
,
√√: ;
basePath
√√< D
)
√√D E
;
√√E F
if
≈≈ 
(
≈≈ 
batchExport
≈≈ 
)
≈≈ 
{
∆∆ 
meshPath
»» 
=
»» 
AssetDatabase
»» (
.
»»( )%
GenerateUniqueAssetPath
»») @
(
»»@ A
meshPath
»»A I
)
»»I J
;
»»J K

prefabPath
…… 
=
…… 
AssetDatabase
…… *
.
……* +%
GenerateUniqueAssetPath
……+ B
(
……B C

prefabPath
……C M
)
……M N
;
……N O
}
   
else
ÀÀ 
{
ÃÃ 
var
ÕÕ 
existingMesh
ÕÕ  
=
ÕÕ! "
AssetDatabase
ÕÕ# 0
.
ÕÕ0 1
LoadAssetAtPath
ÕÕ1 @
<
ÕÕ@ A
Mesh
ÕÕA E
>
ÕÕE F
(
ÕÕF G
meshPath
ÕÕG O
)
ÕÕO P
;
ÕÕP Q
if
ŒŒ 
(
ŒŒ 
existingMesh
ŒŒ  
)
ŒŒ  !
{
œœ 
var
—— 
existingPrefab
—— &
=
——' (
AssetDatabase
——) 6
.
——6 7
LoadAssetAtPath
——7 F
<
——F G

GameObject
——G Q
>
——Q R
(
——R S

prefabPath
——S ]
)
——] ^
;
——^ _
if
““ 
(
““ 
existingPrefab
““ &
)
““& '
{
”” 
var
’’ 

meshFilter
’’ &
=
’’' (
existingPrefab
’’) 7
.
’’7 8
GetComponent
’’8 D
<
’’D E

MeshFilter
’’E O
>
’’O P
(
’’P Q
)
’’Q R
;
’’R S
if
÷÷ 
(
÷÷ 
!
÷÷ 

meshFilter
÷÷ '
||
÷÷( *

meshFilter
÷÷+ 5
.
÷÷5 6

sharedMesh
÷÷6 @
!=
÷÷A C
existingMesh
÷÷D P
)
÷÷P Q
{
◊◊ 
meshPath
ŸŸ $
=
ŸŸ% &$
PickDifferentAssetPath
ŸŸ' =
(
ŸŸ= >
meshPath
ŸŸ> F
)
ŸŸF G
;
ŸŸG H
}
⁄⁄ 
}
‹‹ 
else
›› 
{
ﬁﬁ 
meshPath
‡‡  
=
‡‡! "$
PickDifferentAssetPath
‡‡# 9
(
‡‡9 :
meshPath
‡‡: B
)
‡‡B C
;
‡‡C D
}
·· 
}
‚‚ 
}
„„ 
Mesh
ÂÂ 
	meshAsset
ÂÂ 
=
ÂÂ 
pb
ÂÂ 
.
ÂÂ  
mesh
ÂÂ  $
;
ÂÂ$ %
	meshAsset
ÊÊ 
.
ÊÊ 
name
ÊÊ 
=
ÊÊ 
name
ÊÊ !
;
ÊÊ! "
	meshAsset
ÁÁ 
=
ÁÁ "
CreateOrReplaceAsset
ÁÁ ,
(
ÁÁ, -
	meshAsset
ÁÁ- 6
,
ÁÁ6 7
meshPath
ÁÁ8 @
)
ÁÁ@ A
;
ÁÁA B
var
ÈÈ 
go
ÈÈ 
=
ÈÈ 
replaceOriginal
ÈÈ $
?
ÈÈ% &
pb
ÈÈ' )
.
ÈÈ) *

gameObject
ÈÈ* 4
:
ÈÈ5 6
Object
ÈÈ7 =
.
ÈÈ= >
Instantiate
ÈÈ> I
(
ÈÈI J
pb
ÈÈJ L
.
ÈÈL M

gameObject
ÈÈM W
)
ÈÈW X
;
ÈÈX Y
var
ÎÎ 
	component
ÎÎ 
=
ÎÎ 
go
ÎÎ 
.
ÎÎ 
GetComponent
ÎÎ +
<
ÎÎ+ ,
ProBuilderMesh
ÎÎ, :
>
ÎÎ: ;
(
ÎÎ; <
)
ÎÎ< =
;
ÎÎ= >
Undo
ÏÏ 
.
ÏÏ 
RecordObject
ÏÏ 
(
ÏÏ 
	component
ÏÏ '
,
ÏÏ' (
$str
ÏÏ) O
)
ÏÏO P
;
ÏÏP Q
	component
ÌÌ 
.
ÌÌ (
preserveMeshAssetOnDestroy
ÌÌ 0
=
ÌÌ1 2
true
ÌÌ3 7
;
ÌÌ7 8
Undo
ÓÓ 
.
ÓÓ $
DestroyObjectImmediate
ÓÓ '
(
ÓÓ' (
	component
ÓÓ( 1
)
ÓÓ1 2
;
ÓÓ2 3
go
 
.
 
GetComponent
 
<
 

MeshFilter
 &
>
& '
(
' (
)
( )
.
) *

sharedMesh
* 4
=
5 6
	meshAsset
7 @
;
@ A
var
ÒÒ 
meshCollider
ÒÒ 
=
ÒÒ 
go
ÒÒ !
.
ÒÒ! "
GetComponent
ÒÒ" .
<
ÒÒ. /
MeshCollider
ÒÒ/ ;
>
ÒÒ; <
(
ÒÒ< =
)
ÒÒ= >
;
ÒÒ> ?
if
ÚÚ 
(
ÚÚ 
meshCollider
ÚÚ 
)
ÚÚ 
{
ÛÛ 
meshCollider
ÙÙ 
.
ÙÙ 

sharedMesh
ÙÙ '
=
ÙÙ( )
	meshAsset
ÙÙ* 3
;
ÙÙ3 4
}
ıı 
if
¯¯ 
(
¯¯ 
replaceOriginal
¯¯ 
)
¯¯  
PrefabUtility
˘˘ 
.
˘˘ )
SaveAsPrefabAssetAndConnect
˘˘ 9
(
˘˘9 :
go
˘˘: <
,
˘˘< =

prefabPath
˘˘> H
,
˘˘H I
InteractionMode
˘˘J Y
.
˘˘Y Z

UserAction
˘˘Z d
)
˘˘d e
;
˘˘e f
else
˙˙ 
PrefabUtility
˚˚ 
.
˚˚ 
SaveAsPrefabAsset
˚˚ /
(
˚˚/ 0
go
˚˚0 2
,
˚˚2 3

prefabPath
˚˚4 >
)
˚˚> ?
;
˚˚? @
if
ˇˇ 
(
ˇˇ 
!
ˇˇ 
replaceOriginal
ˇˇ  
)
ˇˇ  !
{
ÄÄ 
pb
ÅÅ 
.
ÅÅ 
mesh
ÅÅ 
=
ÅÅ 
null
ÅÅ 
;
ÅÅ 
EditorUtility
ÇÇ 
.
ÇÇ '
SynchronizeWithMeshFilter
ÇÇ 7
(
ÇÇ7 8
pb
ÇÇ8 :
)
ÇÇ: ;
;
ÇÇ; <
Object
ÉÉ 
.
ÉÉ 
DestroyImmediate
ÉÉ '
(
ÉÉ' (
go
ÉÉ( *
)
ÉÉ* +
;
ÉÉ+ ,
}
ÑÑ 
return
ÜÜ 
meshPath
ÜÜ 
;
ÜÜ 
}
áá 	
static
ââ 
string
ââ 

ExportMesh
ââ  
(
ââ  !
string
ââ! '
path
ââ( ,
,
ââ, -
ProBuilderMesh
ââ. <
mesh
ââ= A
,
ââA B
bool
ââC G
replaceOriginal
ââH W
,
ââW X
bool
ââY ]
batchExport
ââ^ i
)
ââi j
{
ää 	
var
ãã 
existing
ãã 
=
ãã 
AssetDatabase
ãã (
.
ãã( )
GetAssetPath
ãã) 5
(
ãã5 6
mesh
ãã6 :
.
ãã: ;
mesh
ãã; ?
)
ãã? @
;
ãã@ A
if
çç 
(
çç 
!
çç 
string
çç 
.
çç 
IsNullOrEmpty
çç %
(
çç% &
existing
çç& .
)
çç. /
)
çç/ 0
return
éé 
existing
éé 
;
éé  
string
êê 
name
êê 
=
êê 
Path
êê 
.
êê )
GetFileNameWithoutExtension
êê :
(
êê: ;
path
êê; ?
)
êê? @
;
êê@ A
string
ëë 
meshPath
ëë 
=
ëë #
AssetPathFromFullPath
ëë 3
(
ëë3 4
path
ëë4 8
,
ëë8 9
$str
ëë: A
)
ëëA B
;
ëëB C
if
íí 
(
íí 
batchExport
íí 
)
íí 
{
ìì 
meshPath
ïï 
=
ïï 
AssetDatabase
ïï (
.
ïï( )%
GenerateUniqueAssetPath
ïï) @
(
ïï@ A
meshPath
ïïA I
)
ïïI J
;
ïïJ K
}
ññ 
mesh
òò 
.
òò 
ToMesh
òò 
(
òò 
)
òò 
;
òò 
mesh
ôô 
.
ôô 
Refresh
ôô 
(
ôô 
)
ôô 
;
ôô 
mesh
öö 
.
öö 
Optimize
öö 
(
öö 
)
öö 
;
öö 
var
úú 
	meshAsset
úú 
=
úú 
mesh
úú  
.
úú  !
mesh
úú! %
;
úú% &
	meshAsset
ùù 
.
ùù 
name
ùù 
=
ùù 
name
ùù !
;
ùù! "
	meshAsset
üü 
=
üü "
CreateOrReplaceAsset
üü ,
(
üü, -
	meshAsset
üü- 6
,
üü6 7
meshPath
üü8 @
)
üü@ A
;
üüA B
if
°° 
(
°° 
replaceOriginal
°° 
)
°°  
{
¢¢ 
mesh
££ 
.
££ 
GetComponent
££ !
<
££! "

MeshFilter
££" ,
>
££, -
(
££- .
)
££. /
.
££/ 0

sharedMesh
££0 :
=
££; <
	meshAsset
££= F
;
££F G
var
§§ 
meshCollider
§§  
=
§§! "
mesh
§§# '
.
§§' (
GetComponent
§§( 4
<
§§4 5
MeshCollider
§§5 A
>
§§A B
(
§§B C
)
§§C D
;
§§D E
if
•• 
(
•• 
meshCollider
••  
)
••  !
{
¶¶ 
meshCollider
ßß  
.
ßß  !

sharedMesh
ßß! +
=
ßß, -
	meshAsset
ßß. 7
;
ßß7 8
}
®® 
}
©© 
return
´´ 
meshPath
´´ 
;
´´ 
}
¨¨ 	
static
ÆÆ 
T
ÆÆ "
CreateOrReplaceAsset
ÆÆ %
<
ÆÆ% &
T
ÆÆ& '
>
ÆÆ' (
(
ÆÆ( )
T
ÆÆ) *
asset
ÆÆ+ 0
,
ÆÆ0 1
string
ÆÆ2 8
path
ÆÆ9 =
)
ÆÆ= >
where
ÆÆ? D
T
ÆÆE F
:
ÆÆG H
Object
ÆÆI O
{
ØØ 	
T
∞∞ 
existingAsset
∞∞ 
=
∞∞ 
AssetDatabase
∞∞ +
.
∞∞+ ,
LoadAssetAtPath
∞∞, ;
<
∞∞; <
T
∞∞< =
>
∞∞= >
(
∞∞> ?
path
∞∞? C
)
∞∞C D
;
∞∞D E
if
±± 
(
±± 
existingAsset
±± 
==
±±  
null
±±! %
)
±±% &
{
≤≤ 
AssetDatabase
≥≥ 
.
≥≥ 
CreateAsset
≥≥ )
(
≥≥) *
asset
≥≥* /
,
≥≥/ 0
path
≥≥1 5
)
≥≥5 6
;
≥≥6 7
return
¥¥ 
asset
¥¥ 
;
¥¥ 
}
µµ 
else
∂∂ 
{
∑∑ 
var
∏∏ 
tempPath
∏∏ 
=
∏∏ 
AssetDatabase
∏∏ ,
.
∏∏, -%
GenerateUniqueAssetPath
∏∏- D
(
∏∏D E
path
∏∏E I
)
∏∏I J
;
∏∏J K
AssetDatabase
ππ 
.
ππ 
CreateAsset
ππ )
(
ππ) *
asset
ππ* /
,
ππ/ 0
tempPath
ππ1 9
)
ππ9 :
;
ππ: ;
FileUtil
∫∫ 
.
∫∫ 
ReplaceFile
∫∫ $
(
∫∫$ %
tempPath
∫∫% -
,
∫∫- .
path
∫∫/ 3
)
∫∫3 4
;
∫∫4 5
AssetDatabase
ªª 
.
ªª 
DeleteAsset
ªª )
(
ªª) *
tempPath
ªª* 2
)
ªª2 3
;
ªª3 4
return
ºº 
existingAsset
ºº $
;
ºº$ %
}
ΩΩ 
}
ææ 	
}
øø 
}¿¿ ¬m
ûD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Selection\GrowSelection.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed		 

class		 
GrowSelection		 
:		  

MenuAction		! +
{

 
Pref 
< 
bool 
> $
m_GrowSelectionWithAngle +
=, -
new. 1
Pref2 6
<6 7
bool7 ;
>; <
(< =
$str= U
,U V
trueW [
)[ \
;\ ]
Pref 
< 
bool 
> )
m_GrowSelectionAngleIterative 0
=1 2
new3 6
Pref7 ;
<; <
bool< @
>@ A
(A B
$strB _
,_ `
falsea f
)f g
;g h
Pref 
< 
float 
> %
m_GrowSelectionAngleValue -
=. /
new0 3
Pref4 8
<8 9
float9 >
>> ?
(? @
$str@ Z
,Z [
$num\ _
)_ `
;` a
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
	Selection& /
;/ 0
}1 2
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- E
,E F
IconSkinG O
.O P
ProP S
)S T
;T U
}V W
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str    
,    !
$str!# P
,##P Q
keyCommandAlt$$ 
,$$ 
$char$$ "
)%% 
;%% 
public'' 
override'' 

SelectMode'' "
validSelectModes''# 3
{(( 	
get)) 
{)) 
return)) 

SelectMode)) #
.))# $
Vertex))$ *
|))+ ,

SelectMode))- 7
.))7 8
Edge))8 <
|))= >

SelectMode))? I
.))I J
Face))J N
|))O P

SelectMode))Q [
.))[ \
TextureFace))\ g
;))g h
}))i j
}** 	
public,, 
override,, 
bool,, 
enabled,, $
{-- 	
get.. 
{.. 
return.. 
base.. 
... 
enabled.. %
&&..& (
VerifyGrowSelection..) <
(..< =
)..= >
;..> ?
}..@ A
}// 	
	protected11 
override11 
MenuActionState11 *
optionsMenuState11+ ;
{22 	
get33 
{44 
if55 
(55 
enabled55 
&&55 
ProBuilderEditor55 /
.55/ 0

selectMode550 :
==55; =

SelectMode55> H
.55H I
Face55I M
)55M N
return66 
MenuActionState66 *
.66* +
VisibleAndEnabled66+ <
;66< =
return88 
MenuActionState88 &
.88& '
Hidden88' -
;88- .
}99 
}:: 	
	protected<< 
override<< 
void<< 
OnSettingsGUI<<  -
(<<- .
)<<. /
{== 	
	GUILayout>> 
.>> 
Label>> 
(>> 
$str>> 4
,>>4 5
EditorStyles>>6 B
.>>B C
	boldLabel>>C L
)>>L M
;>>M N
	EditorGUI@@ 
.@@ 
BeginChangeCheck@@ &
(@@& '
)@@' (
;@@( )$
m_GrowSelectionWithAngleBB $
.BB$ %
valueBB% *
=BB+ ,
EditorGUILayoutBB- <
.BB< =
ToggleBB= C
(BBC D
$strBBD W
,BBW X$
m_GrowSelectionWithAngleBBY q
.BBq r
valueBBr w
)BBw x
;BBx y
GUIDD 
.DD 
enabledDD 
=DD $
m_GrowSelectionWithAngleDD 2
;DD2 3%
m_GrowSelectionAngleValueFF %
.FF% &
valueFF& +
=FF, -
EditorGUILayoutFF. =
.FF= >

FloatFieldFF> H
(FFH I
$strFFI T
,FFT U%
m_GrowSelectionAngleValueFFV o
)FFo p
;FFp q
GUIHH 
.HH 
enabledHH 
=HH $
m_GrowSelectionWithAngleHH 2
;HH2 3
boolJJ 
	iterativeJJ 
=JJ $
m_GrowSelectionWithAngleJJ 5
?JJ6 7)
m_GrowSelectionAngleIterativeJJ8 U
:JJV W
trueJJX \
;JJ\ ]
	EditorGUILL 
.LL 
BeginChangeCheckLL &
(LL& '
)LL' (
;LL( )
	iterativeMM 
=MM 
EditorGUILayoutMM '
.MM' (
ToggleMM( .
(MM. /
$strMM/ :
,MM: ;
	iterativeMM< E
)MME F
;MMF G
ifNN 
(NN 
	EditorGUINN 
.NN 
EndChangeCheckNN (
(NN( )
)NN) *
)NN* +
{OO )
m_GrowSelectionAngleIterativePP -
.PP- .
valuePP. 3
=PP4 5
	iterativePP6 ?
;PP? @
}QQ 
GUISS 
.SS 
enabledSS 
=SS 
trueSS 
;SS 
ifUU 
(UU 
	EditorGUIUU 
.UU 
EndChangeCheckUU (
(UU( )
)UU) *
)UU* +
ProBuilderSettingsVV "
.VV" #
SaveVV# '
(VV' (
)VV( )
;VV) *
	GUILayoutXX 
.XX 
FlexibleSpaceXX #
(XX# $
)XX$ %
;XX% &
ifZZ 
(ZZ 
	GUILayoutZZ 
.ZZ 
ButtonZZ  
(ZZ  !
$strZZ! 1
)ZZ1 2
)ZZ2 3
DoAction[[ 
([[ 
)[[ 
;[[ 
}\\ 	
public^^ 
override^^ 
ActionResult^^ $
DoAction^^% -
(^^- .
)^^. /
{__ 	
if`` 
(`` 
MeshSelection`` 
.`` 
selectedObjectCount`` 1
<``2 3
$num``4 5
)``5 6
returnaa 
ActionResultaa #
.aa# $
NoSelectionaa$ /
;aa/ 0
UndoUtilitycc 
.cc 
RecordSelectioncc '
(cc' (
$strcc( 8
)cc8 9
;cc9 :
intee 
grownee 
=ee 
$numee 
;ee 
boolff 
	angleGrowff 
=ff $
m_GrowSelectionWithAngleff 5
;ff5 6
boolgg 
	iterativegg 
=gg )
m_GrowSelectionAngleIterativegg :
;gg: ;
floathh 
growSelectionAnglehh $
=hh% &%
m_GrowSelectionAngleValuehh' @
;hh@ A
ifjj 
(jj 
!jj 
	angleGrowjj 
&&jj 
!jj 
	iterativejj (
)jj( )
	iterativekk 
=kk 
truekk  
;kk  !
foreachmm 
(mm 
ProBuilderMeshmm #
pbmm$ &
inmm' )
InternalUtilitymm* 9
.mm9 :
GetComponentsmm: G
<mmG H
ProBuilderMeshmmH V
>mmV W
(mmW X
	SelectionmmX a
.mma b

transformsmmb l
)mml m
)mmm n
{nn 
intoo 
previousTriCountoo $
=oo% &
pboo' )
.oo) *
selectedVertexCountoo* =
;oo= >
switchqq 
(qq 
ProBuilderEditorqq (
.qq( )

selectModeqq) 3
)qq3 4
{rr 
casess 

SelectModess #
.ss# $
Vertexss$ *
:ss* +
pbtt 
.tt 
SetSelectedEdgestt +
(tt+ ,
ElementSelectiontt, <
.tt< =
GetConnectedEdgestt= N
(ttN O
pbttO Q
,ttQ R
pbttS U
.ttU V#
selectedIndexesInternalttV m
)ttm n
)ttn o
;tto p
breakuu 
;uu 
caseww 

SelectModeww #
.ww# $
Edgeww$ (
:ww( )
pbxx 
.xx 
SetSelectedEdgesxx +
(xx+ ,
ElementSelectionxx, <
.xx< =
GetConnectedEdgesxx= N
(xxN O
pbxxO Q
,xxQ R
pbxxS U
.xxU V#
selectedIndexesInternalxxV m
)xxm n
)xxn o
;xxo p
breakyy 
;yy 
case{{ 

SelectMode{{ #
.{{# $
TextureFace{{$ /
:{{/ 0
case|| 

SelectMode|| #
.||# $
Face||$ (
:||( )
Face~~ 
[~~ 
]~~ 
selectedFaces~~ ,
=~~- .
pb~~/ 1
.~~1 2
GetSelectedFaces~~2 B
(~~B C
)~~C D
;~~D E
HashSet
ÄÄ 
<
ÄÄ  
Face
ÄÄ  $
>
ÄÄ$ %
sel
ÄÄ& )
;
ÄÄ) *
if
ÇÇ 
(
ÇÇ 
	iterative
ÇÇ %
)
ÇÇ% &
{
ÉÉ 
sel
ÑÑ 
=
ÑÑ  !
ElementSelection
ÑÑ" 2
.
ÑÑ2 3
GrowSelection
ÑÑ3 @
(
ÑÑ@ A
pb
ÑÑA C
,
ÑÑC D
selectedFaces
ÑÑE R
,
ÑÑR S
	angleGrow
ÑÑT ]
?
ÑÑ^ _ 
growSelectionAngle
ÑÑ` r
:
ÑÑs t
-
ÑÑu v
$num
ÑÑv x
)
ÑÑx y
;
ÑÑy z
sel
ÖÖ 
.
ÖÖ  
	UnionWith
ÖÖ  )
(
ÖÖ) *
selectedFaces
ÖÖ* 7
)
ÖÖ7 8
;
ÖÖ8 9
}
ÜÜ 
else
áá 
{
àà 
sel
ââ 
=
ââ  !
ElementSelection
ââ" 2
.
ââ2 3
FloodSelection
ââ3 A
(
ââA B
pb
ââB D
,
ââD E
selectedFaces
ââF S
,
ââS T
	angleGrow
ââU ^
?
ââ_ ` 
growSelectionAngle
ââa s
:
âât u
-
ââv w
$num
ââw y
)
âây z
;
ââz {
}
ää 
pb
åå 
.
åå 
SetSelectedFaces
åå +
(
åå+ ,
sel
åå, /
.
åå/ 0
ToArray
åå0 7
(
åå7 8
)
åå8 9
)
åå9 :
;
åå: ;
break
éé 
;
éé 
}
èè 
grown
ëë 
+=
ëë 
pb
ëë 
.
ëë !
selectedVertexCount
ëë /
-
ëë0 1
previousTriCount
ëë2 B
;
ëëB C
}
íí 
ProBuilderEditor
îî 
.
îî 
Refresh
îî $
(
îî$ %
)
îî% &
;
îî& '
	SceneView
ïï 
.
ïï 

RepaintAll
ïï  
(
ïï  !
)
ïï! "
;
ïï" #
if
óó 
(
óó 
grown
óó 
>
óó 
$num
óó 
)
óó 
return
òò 
new
òò 
ActionResult
òò '
(
òò' (
ActionResult
òò( 4
.
òò4 5
Status
òò5 ;
.
òò; <
Success
òò< C
,
òòC D
$str
òòE U
)
òòU V
;
òòV W
return
öö 
new
öö 
ActionResult
öö #
(
öö# $
ActionResult
öö$ 0
.
öö0 1
Status
öö1 7
.
öö7 8
Failure
öö8 ?
,
öö? @
$str
ööA R
)
ööR S
;
ööS T
}
õõ 	
static
ùù 
bool
ùù !
VerifyGrowSelection
ùù '
(
ùù' (
)
ùù( )
{
ûû 	
int
üü 
sel
üü 
,
üü 
max
üü 
;
üü 
switch
°° 
(
°° 
ProBuilderEditor
°° $
.
°°$ %

selectMode
°°% /
)
°°/ 0
{
¢¢ 
case
££ 

SelectMode
££ 
.
££  
Face
££  $
:
££$ %
sel
§§ 
=
§§ 
MeshSelection
§§ '
.
§§' (
selectedFaceCount
§§( 9
;
§§9 :
max
•• 
=
•• 
MeshSelection
•• '
.
••' (
totalFaceCount
••( 6
;
••6 7
break
¶¶ 
;
¶¶ 
case
®® 

SelectMode
®® 
.
®®  
Edge
®®  $
:
®®$ %
sel
©© 
=
©© 
MeshSelection
©© '
.
©©' (
selectedEdgeCount
©©( 9
;
©©9 :
max
™™ 
=
™™ 
MeshSelection
™™ '
.
™™' (
totalEdgeCount
™™( 6
;
™™6 7
break
´´ 
;
´´ 
default
≠≠ 
:
≠≠ 
sel
ÆÆ 
=
ÆÆ 
MeshSelection
ÆÆ '
.
ÆÆ' (!
selectedVertexCount
ÆÆ( ;
;
ÆÆ; <
max
ØØ 
=
ØØ 
MeshSelection
ØØ '
.
ØØ' (
totalVertexCount
ØØ( 8
;
ØØ8 9
break
∞∞ 
;
∞∞ 
}
±± 
return
≥≥ 
sel
≥≥ 
>
≥≥ 
$num
≥≥ 
&&
≥≥ 
sel
≥≥ !
<
≥≥" #
max
≥≥$ '
;
≥≥' (
}
¥¥ 	
}
µµ 
}∂∂ ∑
ïD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\IHasPreferences.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
	interface 
IHasPreferences 
{ 
void 
ReloadPreferences 
( 
)  
;  !
} 
} Ω+
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\VersionValidator.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
[ 
InitializeOnLoad 
] 
class 	
VersionValidator
 
{		 
static

 
readonly

 
SemVer

 
k_ProBuilder4_0_0

 0
=

1 2
new

3 6
SemVer

7 =
(

= >
$num

> ?
,

? @
$num

A B
,

B C
$num

D E
)

E F
;

F G
const 
string 
k_UpgradeDialog $
=% &
$str	' ˚
;
˚ ¸
const 
string 
k_UpgradeLaterText '
=( )
$str	* Ω
;
Ω æ
const 
string $
k_AssetStoreUpgradeTitle -
=. /
$str0 N
;N O
const 
string "
k_DeprecatedGuidsTitle +
=, -
$str. ]
;] ^
static 
Pref 
< 
SemVer 
> 
s_StoredVersionInfo /
=0 1
new2 5
Pref6 :
<: ;
SemVer; A
>A B
(B C
$strC U
,U V
newW Z
SemVer[ a
(a b
)b c
,c d
SettingsScopee r
.r s
Projects z
)z {
;{ |
static 
VersionValidator 
(  
)  !
{ 	
EditorApplication 
. 
	delayCall '
+=( *
ValidateVersion+ :
;: ;
} 	
[ 	
MenuItem	 
( 
$str R
)R S
]S T
internal 
static 
void  
OpenConversionEditor 1
(1 2
)2 3
{ 	%
CheckForUpgradeableAssets %
(% &
true& *
,* +
true, 0
)0 1
;1 2
} 	
static 
void 
ValidateVersion #
(# $
)$ %
{ 	
SemVer   
currentVersion   !
;  ! "
if"" 
("" 
!"" 
Version"" 
.""  
TryGetPackageVersion"" -
(""- .
out"". 1
currentVersion""2 @
)""@ A
)""A B
return## 
;## 
var%% 

oldVersion%% 
=%% 
(%% 
SemVer%% $
)%%$ %
s_StoredVersionInfo%%& 9
;%%9 :
bool&& 
isNewVersion&& 
=&& 
currentVersion&&  .
!=&&/ 1

oldVersion&&2 <
;&&< =
if(( 
((( 
isNewVersion(( 
)(( 
{)) 
PreferencesUpdater** "
.**" ##
CheckEditorPrefsVersion**# :
(**: ;
)**; <
;**< =
s_StoredVersionInfo++ #
.++# $
SetValue++$ ,
(++, -
currentVersion++- ;
,++; <
true++= A
)++A B
;++B C
if-- 
(-- 

oldVersion-- 
<--  
k_ProBuilder4_0_0--! 2
)--2 3%
CheckForUpgradeableAssets.. -
(..- .
true... 2
)..2 3
;..3 4
}// 
}00 	
static22 
void22 %
CheckForUpgradeableAssets22 -
(22- .
bool22. 2#
checkForDeprecatedGuids223 J
,22J K
bool22L P
calledFromMenu22Q _
=22` a
false22b g
)22g h
{33 	
bool44 
pre4PackageFound44 !
=44" #
PackageImporter44$ 3
.443 4%
IsPreProBuilder4InProject444 M
(44M N
)44N O
;44O P
bool55  
deprecatedGuidsFound55 %
=55& '
!55( )
pre4PackageFound55) 9
&&55: <#
checkForDeprecatedGuids55= T
&&55U W
PackageImporter55X g
.55g h.
!DoesProjectContainDeprecatedGUIDs	55h â
(
55â ä
)
55ä ã
;
55ã å
if77 
(77 
pre4PackageFound77  
||77! # 
deprecatedGuidsFound77$ 8
)778 9
{88 
if99 
(99 
UnityEditor99 
.99  
EditorUtility99  -
.99- .
DisplayDialog99. ;
(99; <
pre4PackageFound:: $
?::% &$
k_AssetStoreUpgradeTitle::' ?
:::@ A"
k_DeprecatedGuidsTitle::B X
,::X Y
k_UpgradeDialog;; #
+;;$ %
k_UpgradeLaterText;;& 8
,;;8 9
$str<< 
,<< 
$str<< 
)<<  
)<<  !
EditorApplication== %
.==% &
	delayCall==& /
+===0 2
AssetIdRemapEditor==3 E
.==E F 
OpenConversionEditor==F Z
;==Z [
}>> 
else?? 
if?? 
(?? 
calledFromMenu?? "
)??" #
{@@ 
UnityEditorAA 
.AA 
EditorUtilityAA )
.AA) *
DisplayDialogAA* 7
(AA7 8
$strBB +
,BB+ ,
$strCC <
,CC< =
$strDD 
)EE 
;EE 
}FF 
}GG 	
}HH 
}II “
ïD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\DestroyListener.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
[		 
InitializeOnLoad		 
]		 
static

 

class

 
DestroyListener

  
{ 
static 
DestroyListener 
( 
)  
{ 	
ProBuilderMesh 
. 
meshWillBeDestroyed .
-=/ 1
OnDestroyObject2 A
;A B
ProBuilderMesh 
. 
meshWillBeDestroyed .
+=/ 1
OnDestroyObject2 A
;A B
} 	
static 
void 
OnDestroyObject #
(# $
ProBuilderMesh$ 2
mesh3 7
)7 8
{ 	
if 
( 
Experimental 
. 
meshesAreAssets ,
), -
{ 
if 
( 
EditorUtility !
.! "
IsPrefab" *
(* +
mesh+ /
)/ 0
)0 1
{ 
} 
else 
{ 
string 

cache_path %
;% &
Mesh 

cache_mesh #
;# $
if!! 
(!! 
EditorMeshUtility!! )
.!!) *
GetCachedMesh!!* 7
(!!7 8
mesh!!8 <
,!!< =
out!!> A

cache_path!!B L
,!!L M
out!!N Q

cache_mesh!!R \
)!!\ ]
)!!] ^
{"" 
bool%% 
	isPlaying%% &
=%%' (
EditorApplication%%) :
.%%: ;
	isPlaying%%; D
;%%D E
bool&& 

orWillPlay&& '
=&&( )
EditorApplication&&* ;
.&&; <)
isPlayingOrWillChangePlaymode&&< Y
;&&Y Z
if(( 
((( 
	isPlaying(( %
||((& (

orWillPlay(() 3
)((3 4
return)) "
;))" #
SelectionUtility++ (
.++( )
Remove++) /
(++/ 0
mesh++0 4
)++4 5
;++5 6
AssetDatabase,, %
.,,% &
DeleteAsset,,& 1
(,,1 2

cache_path,,2 <
),,< =
;,,= >
}-- 
else.. 
{// 
Object00 
.00 
DestroyImmediate00 /
(00/ 0
mesh000 4
.004 5
mesh005 9
)009 :
;00: ;
}11 
}22 
}33 
else44 
{55 
string66 
path66 
=66 
AssetDatabase66 +
.66+ ,
GetAssetPath66, 8
(668 9
mesh669 =
.66= >
mesh66> B
)66B C
;66C D
if99 
(99 
string99 
.99 
IsNullOrEmpty99 (
(99( )
path99) -
)99- .
)99. /
Object:: 
.:: 
DestroyImmediate:: +
(::+ ,
mesh::, 0
.::0 1
mesh::1 5
)::5 6
;::6 7
};; 
}<< 	
}== 
}>> Â&
™D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Interaction\ToggleDragSelectionMode.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class #
ToggleDragSelectionMode (
:) *

MenuAction+ 5
{ %
SelectionModifierBehavior !
modifier" *
{		 	
get

 
{

 
return

 
ProBuilderEditor

 )
.

) *%
selectionModifierBehavior

* C
;

C D
}

E F
set 
{ 
ProBuilderEditor "
." #%
selectionModifierBehavior# <
== >
value? D
;D E
}F G
} 	
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
	Selection& /
;/ 0
}1 2
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
if 
( 
modifier 
== %
SelectionModifierBehavior  9
.9 :
Add: =
)= >
return 
IconUtility &
.& '
GetIcon' .
(. /
$str/ K
,K L
IconSkinM U
.U V
ProV Y
)Y Z
;Z [
else 
if 
( 
modifier !
==" $%
SelectionModifierBehavior% >
.> ?
Subtract? G
)G H
return 
IconUtility &
.& '
GetIcon' .
(. /
$str/ P
,P Q
IconSkinR Z
.Z [
Pro[ ^
)^ _
;_ `
else 
return 
IconUtility &
.& '
GetIcon' .
(. /
$str/ R
,R S
IconSkinT \
.\ ]
Pro] `
)` a
;a b
} 
} 	
public   
override   
TooltipContent   &
tooltip  ' .
{!! 	
get"" 
{"" 
return"" 
_tooltip"" !
;""! "
}""# $
}## 	
public%% 
override%% 
int%% 
toolbarPriority%% +
{&& 	
get'' 
{'' 
return'' 
$num'' 
;'' 
}'' 
}(( 	
static** 
readonly** 
TooltipContent** &
_tooltip**' /
=**0 1
new**2 5
TooltipContent**6 D
(++ 
$str,, )
,,,) *
$str-2 
)22 
;22 
public44 
override44 

SelectMode44 "
validSelectModes44# 3
{55 	
get66 
{66 
return66 

SelectMode66 #
.66# $
Vertex66$ *
|66+ ,

SelectMode66- 7
.667 8
Edge668 <
|66= >

SelectMode66? I
.66I J
Face66J N
|66O P

SelectMode66Q [
.66[ \
TextureFace66\ g
;66g h
}66i j
}77 	
public99 
override99 
string99 
	menuTitle99 (
{:: 	
get;; 
{;; 
return;; 
string;; 
.;;  
Format;;  &
(;;& '
$str;;' 3
,;;3 4
modifier;;5 =
);;= >
;;;> ?
};;@ A
}<< 	
public>> 
override>> 
ActionResult>> $
DoAction>>% -
(>>- .
)>>. /
{?? 	
int@@ 
mode@@ 
=@@ 
(@@ 
int@@ 
)@@ 
modifier@@ $
;@@$ %
intAA 
lenAA 
=AA 
SystemAA 
.AA 
EnumAA !
.AA! "
	GetValuesAA" +
(AA+ ,
typeofAA, 2
(AA2 3%
SelectionModifierBehaviorAA3 L
)AAL M
)AAM N
.AAN O
LengthAAO U
;AAU V
modifierBB 
=BB 
(BB %
SelectionModifierBehaviorBB 1
)BB1 2
(BB2 3
(BB3 4
modeBB4 8
+BB9 :
$numBB; <
)BB< =
%BB> ?
lenBB@ C
)BBC D
;BBD E
returnCC 
newCC 
ActionResultCC #
(CC# $
ActionResultCC$ 0
.CC0 1
StatusCC1 7
.CC7 8
SuccessCC8 ?
,CC? @
$strCCA X
+CCY Z
modifierCC[ c
)CCc d
;CCd e
}DD 	
}EE 
}FF °
ûD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\SmartSubdivide.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{		 
sealed

 

class

 
SmartSubdivide

 
:

  !

MenuAction

" ,
{ 
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Geometry& .
;. /
}0 1
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
null 
; 
}  
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str !
,! "
$str 
, 
keyCommandAlt 
, 
$char "
)   
;   
public"" 
override"" 

SelectMode"" "
validSelectModes""# 3
{## 	
get$$ 
{$$ 
return$$ 

SelectMode$$ #
.$$# $
Edge$$$ (
|$$) *

SelectMode$$+ 5
.$$5 6
Face$$6 :
;$$: ;
}$$< =
}%% 	
public'' 
override'' 
bool'' 
enabled'' $
{(( 	
get)) 
{)) 
return)) 
base)) 
.)) 
enabled)) %
&&))& (
())) *
MeshSelection))* 7
.))7 8
selectedEdgeCount))8 I
>))J K
$num))L M
||))N P
MeshSelection))Q ^
.))^ _
selectedFaceCount))_ p
>))q r
$num))s t
)))t u
;))u v
}))w x
}** 	
public,, 
override,, 
bool,, 
hidden,, #
{-- 	
get.. 
{.. 
return.. 
true.. 
;.. 
}..  
}// 	
public11 
override11 
ActionResult11 $
DoAction11% -
(11- .
)11. /
{22 	
switch33 
(33 
ProBuilderEditor33 $
.33$ %

selectMode33% /
)33/ 0
{44 
case55 

SelectMode55 
.55  
Edge55  $
:55$ %
return66 
EditorToolbarLoader66 .
.66. /
GetInstance66/ :
<66: ;
SubdivideEdges66; I
>66I J
(66J K
)66K L
.66L M
DoAction66M U
(66U V
)66V W
;66W X
default88 
:88 
return99 
EditorToolbarLoader99 .
.99. /
GetInstance99/ :
<99: ;
SubdivideFaces99; I
>99I J
(99J K
)99K L
.99L M
DoAction99M U
(99U V
)99V W
;99W X
}:: 
};; 	
}<< 
}== ˜ü
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\FileUtility.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
static 

class 
FileUtility 
{ 
static 
string "
s_ProBuilderFolderPath ,
=- .
$str/ O
;O P
static 
string  
s_ProBuilderDataPath *
=+ ,
$str- F
;F G
static 
readonly 
string 
[ 
]  (
k_PossibleInstallDirectories! =
=> ?
new@ C
stringD J
[J K
]K L
{ 	
$str ,
,, -
$str 7
,7 8
$str 
, 
} 	
;	 

internal## 
static## 
bool## "
ValidateProBuilderRoot## 3
(##3 4
string##4 :
dir##; >
)##> ?
{$$ 	
return%% 
!%% 
string%% 
.%% 
IsNullOrEmpty%% (
(%%( )
dir%%) ,
)%%, -
&&%%. 0
	Directory&& 
.&& 
Exists&&  
(&&  !
dir&&! $
+&&% &
$str&&' ;
)&&; <
&&&&= ?
	Directory'' 
.'' 
Exists''  
(''  !
dir''! $
+''% &
$str''' 6
)''6 7
&&''8 :
	Directory(( 
.(( 
Exists((  
(((  !
dir((! $
+((% &
$str((' @
)((@ A
;((A B
})) 	
internal00 
static00 
string00 )
GetProBuilderInstallDirectory00 <
(00< =
)00= >
{11 	
if22 
(22 "
ValidateProBuilderRoot22 &
(22& '"
s_ProBuilderFolderPath22' =
)22= >
)22> ?
return33 "
s_ProBuilderFolderPath33 -
;33- .
foreach55 
(55 
var55 
install55  
in55! #(
k_PossibleInstallDirectories55$ @
)55@ A
{66 "
s_ProBuilderFolderPath77 &
=77' (
install77) 0
;770 1
if99 
(99 "
ValidateProBuilderRoot99 *
(99* +"
s_ProBuilderFolderPath99+ A
)99A B
)99B C
return:: "
s_ProBuilderFolderPath:: 1
;::1 2
};; "
s_ProBuilderFolderPath>> "
=>># $+
FindAssetStoreProBuilderInstall>>% D
(>>D E
)>>E F
;>>F G
if@@ 
(@@ 
	Directory@@ 
.@@ 
Exists@@  
(@@  !"
s_ProBuilderFolderPath@@! 7
)@@7 8
)@@8 9
returnAA "
s_ProBuilderFolderPathAA -
;AA- .
LogGG 
.GG 
WarningGG 
(GG 
$str	GG î
)
GGî ï
;
GGï ñ"
s_ProBuilderFolderPathHH "
=HH# $
$strHH% 8
;HH8 9
	DirectoryII 
.II 
CreateDirectoryII %
(II% &"
s_ProBuilderFolderPathII& <
)II< =
;II= >
returnKK "
s_ProBuilderFolderPathKK )
;KK) *
}LL 	
internalRR 
staticRR 
stringRR +
FindAssetStoreProBuilderInstallRR >
(RR> ?
)RR? @
{SS 	
stringTT 
dirTT 
=TT 
nullTT 
;TT 
stringVV 
[VV 
]VV 
matchesVV 
=VV 
	DirectoryVV (
.VV( )
GetDirectoriesVV) 7
(VV7 8
$strVV8 @
,VV@ A
$strVVB N
,VVN O
SearchOptionVVP \
.VV\ ]
AllDirectoriesVV] k
)VVk l
;VVl m
foreachXX 
(XX 
varXX 
matchXX 
inXX !
matchesXX" )
)XX) *
{YY 
dirZZ 
=ZZ 
matchZZ 
.ZZ 
ReplaceZZ #
(ZZ# $
$strZZ$ (
,ZZ( )
$strZZ* -
)ZZ- .
+ZZ/ 0
$strZZ2 5
;ZZ5 6
if[[ 
([[ 
dir[[ 
.[[ 
Contains[[  
([[  !
$str[[! -
)[[- .
&&[[/ 1"
ValidateProBuilderRoot[[2 H
([[H I
dir[[I L
)[[L M
)[[M N
break\\ 
;\\ 
}]] 
return__ 
dir__ 
;__ 
}`` 	
internalff 
staticff 
stringff !
GetLocalDataDirectoryff 4
(ff4 5
boolff5 9
initializeIfMissingff: M
=ffN O
falseffP U
)ffU V
{gg 	
ifhh 
(hh 
	Directoryhh 
.hh 
Existshh  
(hh  ! 
s_ProBuilderDataPathhh! 5
)hh5 6
)hh6 7
returnii  
s_ProBuilderDataPathii +
;ii+ ,
stringkk 
rootkk 
=kk )
GetProBuilderInstallDirectorykk 7
(kk7 8
)kk8 9
;kk9 :
ifmm 
(mm 
rootmm 
.mm 

StartsWithmm 
(mm  
$strmm  (
)mm( )
)mm) *
{nn  
s_ProBuilderDataPathpp $
=pp% &
rootpp' +
+pp, -
$strpp. 5
;pp5 6
}qq 
elserr 
{ss 
stringvv 
[vv 
]vv 
matchesvv  
=vv! "
	Directoryvv# ,
.vv, -
GetDirectoriesvv- ;
(vv; <
$strvv< D
,vvD E
$strvvF W
,vvW X
SearchOptionvvY e
.vve f
AllDirectoriesvvf t
)vvt u
;vvu v 
s_ProBuilderDataPathww $
=ww% &
matchesww' .
.ww. /
Lengthww/ 5
>ww6 7
$numww8 9
?ww: ;
matchesww< C
[wwC D
$numwwD E
]wwE F
:wwG H
$strwwI b
;wwb c
}xx 
ifzz 
(zz 
!zz 
	Directoryzz 
.zz 
Existszz !
(zz! " 
s_ProBuilderDataPathzz" 6
)zz6 7
&&zz8 :
initializeIfMissingzz; N
)zzN O
	Directory{{ 
.{{ 
CreateDirectory{{ )
({{) * 
s_ProBuilderDataPath{{* >
){{> ?
;{{? @
return}}  
s_ProBuilderDataPath}} '
;}}' (
}~~ 	
internal
ÄÄ 
static
ÄÄ 
string
ÄÄ 
[
ÄÄ 
]
ÄÄ  

FindAssets
ÄÄ! +
<
ÄÄ+ ,
T
ÄÄ, -
>
ÄÄ- .
(
ÄÄ. /
string
ÄÄ/ 5
pattern
ÄÄ6 =
)
ÄÄ= >
where
ÄÄ? D
T
ÄÄE F
:
ÄÄG H
UnityEngine
ÄÄI T
.
ÄÄT U
Object
ÄÄU [
{
ÅÅ 	
return
ÇÇ 
AssetDatabase
ÇÇ  
.
ÇÇ  !

FindAssets
ÇÇ! +
(
ÇÇ+ ,
$str
ÇÇ, 0
+
ÇÇ1 2
typeof
ÇÇ3 9
(
ÇÇ9 :
T
ÇÇ: ;
)
ÇÇ; <
.
ÇÇ< =
ToString
ÇÇ= E
(
ÇÇE F
)
ÇÇF G
+
ÇÇH I
$str
ÇÇJ M
+
ÇÇN O
pattern
ÇÇP W
)
ÇÇW X
;
ÇÇX Y
}
ÉÉ 	
internal
ÖÖ 
static
ÖÖ 
T
ÖÖ 
[
ÖÖ 
]
ÖÖ 
FindAndLoadAssets
ÖÖ -
<
ÖÖ- .
T
ÖÖ. /
>
ÖÖ/ 0
(
ÖÖ0 1
)
ÖÖ1 2
where
ÖÖ3 8
T
ÖÖ9 :
:
ÖÖ; <
UnityEngine
ÖÖ= H
.
ÖÖH I
Object
ÖÖI O
{
ÜÜ 	
return
áá 
AssetDatabase
áá  
.
áá  !

FindAssets
áá! +
(
áá+ ,
$str
áá, 0
+
áá1 2
typeof
áá3 9
(
áá9 :
T
áá: ;
)
áá; <
.
áá< =
ToString
áá= E
(
ááE F
)
ááF G
)
ááG H
.
àà 
Select
àà 
(
àà 
x
àà 
=>
àà 
AssetDatabase
àà *
.
àà* +
LoadAssetAtPath
àà+ :
<
àà: ;
T
àà; <
>
àà< =
(
àà= >
AssetDatabase
àà> K
.
ààK L
GUIDToAssetPath
ààL [
(
àà[ \
x
àà\ ]
)
àà] ^
)
àà^ _
)
àà_ `
.
àà` a
ToArray
ààa h
(
ààh i
)
àài j
;
ààj k
}
ââ 	
internal
ãã 
static
ãã 
T
ãã 
FindAssetOfType
ãã )
<
ãã) *
T
ãã* +
>
ãã+ ,
(
ãã, -
)
ãã- .
where
ãã/ 4
T
ãã5 6
:
ãã7 8
UnityEngine
ãã9 D
.
ããD E
Object
ããE K
{
åå 	
foreach
çç 
(
çç 
var
çç 
i
çç 
in
çç 
AssetDatabase
çç +
.
çç+ ,

FindAssets
çç, 6
(
çç6 7
$str
çç7 ;
+
çç< =
typeof
çç> D
(
ççD E
T
ççE F
)
ççF G
.
ççG H
ToString
ççH P
(
ççP Q
)
ççQ R
)
ççR S
)
ççS T
{
éé 
T
èè 
o
èè 
=
èè 
AssetDatabase
èè #
.
èè# $
LoadAssetAtPath
èè$ 3
<
èè3 4
T
èè4 5
>
èè5 6
(
èè6 7
AssetDatabase
èè7 D
.
èèD E
GUIDToAssetPath
èèE T
(
èèT U
i
èèU V
)
èèV W
)
èèW X
;
èèX Y
if
êê 
(
êê 
o
êê 
!=
êê 
null
êê 
)
êê 
return
ëë 
o
ëë 
;
ëë 
}
íí 
return
îî 
null
îî 
;
îî 
}
ïï 	
internal
õõ 
static
õõ 
string
õõ "
GetSelectedDirectory
õõ 3
(
õõ3 4
)
õõ4 5
{
úú 	
Object
ùù 
o
ùù 
=
ùù 
	Selection
ùù  
.
ùù  !
activeObject
ùù! -
;
ùù- .
if
üü 
(
üü 
o
üü 
!=
üü 
null
üü 
)
üü 
{
†† 
string
°° 
path
°° 
=
°° 
AssetDatabase
°° +
.
°°+ ,
GetAssetPath
°°, 8
(
°°8 9
o
°°9 :
.
°°: ;
GetInstanceID
°°; H
(
°°H I
)
°°I J
)
°°J K
;
°°K L
if
££ 
(
££ 
!
££ 
string
££ 
.
££ 
IsNullOrEmpty
££ )
(
££) *
path
££* .
)
££. /
)
££/ 0
{
§§ 
if
•• 
(
•• 
	Directory
•• !
.
••! "
Exists
••" (
(
••( )
path
••) -
)
••- .
)
••. /
return
¶¶ 
GetRelativePath
¶¶ .
(
¶¶. /
Path
¶¶/ 3
.
¶¶3 4
GetFullPath
¶¶4 ?
(
¶¶? @
path
¶¶@ D
)
¶¶D E
)
¶¶E F
;
¶¶F G
string
®® 
res
®® 
=
®®  
Path
®®! %
.
®®% &
GetDirectoryName
®®& 6
(
®®6 7
path
®®7 ;
)
®®; <
;
®®< =
if
™™ 
(
™™ 
!
™™ 
string
™™ 
.
™™  
IsNullOrEmpty
™™  -
(
™™- .
res
™™. 1
)
™™1 2
&&
™™3 5
	Directory
™™6 ?
.
™™? @
Exists
™™@ F
(
™™F G
res
™™G J
)
™™J K
)
™™K L
return
´´ 
GetRelativePath
´´ .
(
´´. /
Path
´´/ 3
.
´´3 4
GetFullPath
´´4 ?
(
´´? @
res
´´@ C
)
´´C D
)
´´D E
;
´´E F
}
¨¨ 
}
≠≠ 
return
ØØ 
$str
ØØ 
;
ØØ 
}
∞∞ 	
public
∑∑ 
static
∑∑ 
string
∑∑ 
GetRelativePath
∑∑ ,
(
∑∑, -
string
∑∑- 3
path
∑∑4 8
)
∑∑8 9
{
∏∏ 	
string
ππ 
full
ππ 
=
ππ 
Path
ππ 
.
ππ 
GetFullPath
ππ *
(
ππ* +
path
ππ+ /
)
ππ/ 0
.
ππ0 1
Replace
ππ1 8
(
ππ8 9
$str
ππ9 =
,
ππ= >
$str
ππ? B
)
ππB C
;
ππC D
string
∫∫ 
cur
∫∫ 
=
∫∫ 
	Directory
∫∫ "
.
∫∫" #!
GetCurrentDirectory
∫∫# 6
(
∫∫6 7
)
∫∫7 8
.
∫∫8 9
Replace
∫∫9 @
(
∫∫@ A
$str
∫∫A E
,
∫∫E F
$str
∫∫G J
)
∫∫J K
;
∫∫K L
if
ªª 
(
ªª 
!
ªª 
cur
ªª 
.
ªª 
EndsWith
ªª 
(
ªª 
$str
ªª !
)
ªª! "
)
ªª" #
cur
ºº 
+=
ºº 
$str
ºº 
;
ºº 
return
ΩΩ 
full
ΩΩ 
.
ΩΩ 
Replace
ΩΩ 
(
ΩΩ  
cur
ΩΩ  #
,
ΩΩ# $
$str
ΩΩ% '
)
ΩΩ' (
;
ΩΩ( )
}
ææ 	
public
≈≈ 
static
≈≈ 
bool
≈≈ 
Exists
≈≈ !
(
≈≈! "
string
≈≈" (
path
≈≈) -
)
≈≈- .
{
∆∆ 	
return
«« 
	Directory
«« 
.
«« 
Exists
«« #
(
««# $
path
««$ (
)
««( )
||
««* ,
File
««- 1
.
««1 2
Exists
««2 8
(
««8 9
path
««9 =
)
««= >
;
««> ?
}
»» 	
internal
–– 
static
–– 
T
–– 
LoadInternalAsset
–– +
<
––+ ,
T
––, -
>
––- .
(
––. /
string
––/ 5
path
––6 :
)
––: ;
where
––< A
T
––B C
:
––D E
Object
––F L
{
—— 	
string
““ 
full
““ 
=
““ 
string
““  
.
““  !
Format
““! '
(
““' (
$str
““( 0
,
““0 1+
GetProBuilderInstallDirectory
““2 O
(
““O P
)
““P Q
,
““Q R
path
““S W
)
““W X
;
““X Y
return
”” 
Load
”” 
<
”” 
T
”” 
>
”” 
(
”” 
full
”” 
)
””  
;
””  !
}
‘‘ 	
internal
‹‹ 
static
‹‹ 
T
‹‹ 
LoadRequired
‹‹ &
<
‹‹& '
T
‹‹' (
>
‹‹( )
(
‹‹) *
string
‹‹* 0
path
‹‹1 5
)
‹‹5 6
where
‹‹7 <
T
‹‹= >
:
‹‹? @
ScriptableObject
‹‹A Q
,
‹‹Q R
IHasDefault
‹‹S ^
{
›› 	
T
ﬁﬁ 
asset
ﬁﬁ 
=
ﬁﬁ 
Load
ﬁﬁ 
<
ﬁﬁ 
T
ﬁﬁ 
>
ﬁﬁ 
(
ﬁﬁ 
path
ﬁﬁ "
)
ﬁﬁ" #
;
ﬁﬁ# $
if
‡‡ 
(
‡‡ 
asset
‡‡ 
==
‡‡ 
null
‡‡ 
)
‡‡ 
{
·· 
asset
‚‚ 
=
‚‚ 
ScriptableObject
‚‚ (
.
‚‚( )
CreateInstance
‚‚) 7
<
‚‚7 8
T
‚‚8 9
>
‚‚9 :
(
‚‚: ;
)
‚‚; <
;
‚‚< =
asset
‰‰ 
.
‰‰ 
SetDefaultValues
‰‰ &
(
‰‰& '
)
‰‰' (
;
‰‰( )
UnityEditor
ÊÊ 
.
ÊÊ 
EditorUtility
ÊÊ )
.
ÊÊ) *
SetDirty
ÊÊ* 2
(
ÊÊ2 3
asset
ÊÊ3 8
)
ÊÊ8 9
;
ÊÊ9 :
string
ËË 
folder
ËË 
=
ËË 
Path
ËË  $
.
ËË$ %
GetDirectoryName
ËË% 5
(
ËË5 6
path
ËË6 :
)
ËË: ;
;
ËË; <
if
ÍÍ 
(
ÍÍ 
!
ÍÍ 
	Directory
ÍÍ 
.
ÍÍ 
Exists
ÍÍ %
(
ÍÍ% &
folder
ÍÍ& ,
)
ÍÍ, -
)
ÍÍ- .
	Directory
ÎÎ 
.
ÎÎ 
CreateDirectory
ÎÎ -
(
ÎÎ- .
folder
ÎÎ. 4
)
ÎÎ4 5
;
ÎÎ5 6
AssetDatabase
ÌÌ 
.
ÌÌ 
CreateAsset
ÌÌ )
(
ÌÌ) *
asset
ÌÌ* /
,
ÌÌ/ 0
path
ÌÌ1 5
)
ÌÌ5 6
;
ÌÌ6 7
}
ÓÓ 
return
 
asset
 
;
 
}
ÒÒ 	
static
ÛÛ 
T
ÛÛ 
Load
ÛÛ 
<
ÛÛ 
T
ÛÛ 
>
ÛÛ 
(
ÛÛ 
string
ÛÛ 
path
ÛÛ  $
)
ÛÛ$ %
where
ÛÛ& +
T
ÛÛ, -
:
ÛÛ. /
Object
ÛÛ0 6
{
ÙÙ 	
return
ıı 
AssetDatabase
ıı  
.
ıı  !
LoadAssetAtPath
ıı! 0
<
ıı0 1
T
ıı1 2
>
ıı2 3
(
ıı3 4
path
ıı4 8
)
ıı8 9
;
ıı9 :
}
ˆˆ 	
[
˝˝ 	
System
˝˝	 
.
˝˝ 
Obsolete
˝˝ 
(
˝˝ 
$str
˝˝ +
)
˝˝+ ,
]
˝˝, -
public
˛˛ 
static
˛˛ 
void
˛˛ 
	WriteFile
˛˛ $
(
˛˛$ %
string
˛˛% +
path
˛˛, 0
,
˛˛0 1
string
˛˛2 8
contents
˛˛9 A
)
˛˛A B
{
ˇˇ 	
WriteAllText
ÄÄ 
(
ÄÄ 
path
ÄÄ 
,
ÄÄ 
contents
ÄÄ '
)
ÄÄ' (
;
ÄÄ( )
}
ÅÅ 	
public
àà 
static
àà 
void
àà 
WriteAllText
àà '
(
àà' (
string
àà( .
path
àà/ 3
,
àà3 4
string
àà5 ;
contents
àà< D
)
ààD E
{
ââ 	
string
ää 
dir
ää 
=
ää 
Path
ää 
.
ää 
GetDirectoryName
ää .
(
ää. /
path
ää/ 3
)
ää3 4
;
ää4 5
if
åå 
(
åå 
string
åå 
.
åå 
IsNullOrEmpty
åå $
(
åå$ %
dir
åå% (
)
åå( )
)
åå) *
{
çç 
Log
éé 
.
éé 
Error
éé 
(
éé 
$str
éé G
,
ééG H
path
ééI M
)
ééM N
;
ééN O
return
èè 
;
èè 
}
êê 
if
íí 
(
íí 
!
íí 
	Directory
íí 
.
íí 
Exists
íí !
(
íí! "
path
íí" &
)
íí& '
)
íí' (
	Directory
ìì 
.
ìì 
CreateDirectory
ìì )
(
ìì) *
dir
ìì* -
)
ìì- .
;
ìì. /
File
ïï 
.
ïï 
WriteAllText
ïï 
(
ïï 
path
ïï "
,
ïï" #
contents
ïï$ ,
)
ïï, -
;
ïï- .
}
ññ 	
internal
ûû 
static
ûû 
bool
ûû 
SaveTexture
ûû (
(
ûû( )
	Texture2D
ûû) 2
texture
ûû3 :
,
ûû: ;
string
ûû< B
path
ûûC G
)
ûûG H
{
üü 	
byte
†† 
[
†† 
]
†† 
bytes
†† 
=
†† 
texture
†† "
.
††" #
EncodeToPNG
††# .
(
††. /
)
††/ 0
;
††0 1
if
¢¢ 
(
¢¢ 
string
¢¢ 
.
¢¢ 
IsNullOrEmpty
¢¢ $
(
¢¢$ %
path
¢¢% )
)
¢¢) *
)
¢¢* +
return
££ 
false
££ 
;
££ 
System
•• 
.
•• 
IO
•• 
.
•• 
File
•• 
.
•• 
WriteAllBytes
•• (
(
••( )
path
••) -
,
••- .
bytes
••/ 4
)
••4 5
;
••5 6
AssetDatabase
¶¶ 
.
¶¶ 
Refresh
¶¶ !
(
¶¶! "
)
¶¶" #
;
¶¶# $
return
ßß 
true
ßß 
;
ßß 
}
®® 	
}
©© 
}™™ â'
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\ProBuilderSnapSettings.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
enum 
SnapAxis	 
{ 

ActiveAxis 
, 
AllAxes 
} 
enum 
SnapMode	 
{ 
None 
, 
Relative 
, 
World 
} 
static 

class "
ProBuilderSnapSettings '
{ 
[ 	
UserSetting	 
( 
$str $
,$ %
$str& 5
,5 6
$str	7 È
)
È Í
]
Í Î
static 
Pref 
< 
bool 
> 
s_SnapAsGroup '
=( )
new* -
Pref. 2
<2 3
bool3 7
>7 8
(8 9
$str9 `
,` a
trueb f
,f g
SettingsScopeh u
.u v
Userv z
)z {
;{ |
["" 	
UserSetting""	 
("" 
$str"" $
,""$ %
$str""& 1
,""1 2
$str	""3 ¨
)
""¨ ≠
]
""≠ Æ
static$$ 
Pref$$ 
<$$ 
SnapAxis$$ 
>$$ 

s_SnapAxis$$ (
=$$) *
new$$+ .
Pref$$/ 3
<$$3 4
SnapAxis$$4 <
>$$< =
($$= >
$str$$> b
,$$b c
SnapAxis$$d l
.$$l m

ActiveAxis$$m w
,$$w x
SettingsScope	$$y Ü
.
$$Ü á
User
$$á ã
)
$$ã å
;
$$å ç
public&& 
static&& 
SnapMode&& 
snapMode&& '
{'' 	
get(( 
{)) 
if++ 
(++ 
EditorSnapSettings++ &
.++& '!
incrementalSnapActive++' <
)++< =
return,, 
SnapMode,, #
.,,# $
Relative,,$ ,
;,,, -
if-- 
(-- 
ProGridsInterface-- %
.--% &
IsActive--& .
(--. /
)--/ 0
||--1 3
EditorSnapSettings--4 F
.--F G
gridSnapEnabled--G V
)--V W
return.. 
SnapMode.. #
...# $
World..$ )
;..) *
return// 
SnapMode// 
.//  
None//  $
;//$ %
}77 
}88 	
public:: 
static:: 
bool:: 
snapAsGroup:: &
{;; 	
get<< 
{<< 
return<< 
ProGridsInterface<< *
.<<* +
IsActive<<+ 3
(<<3 4
)<<4 5
?<<6 7
ProGridsInterface<<8 I
.<<I J
GetSnapAsGroup<<J X
(<<X Y
)<<Y Z
:<<[ \
s_SnapAsGroup<<] j
.<<j k
value<<k p
;<<p q
}<<r s
}== 	
public?? 
static?? 
SnapAxis?? 

snapMethod?? )
{@@ 	
getAA 
{AA 
returnAA 
ProGridsInterfaceAA *
.AA* +
IsActiveAA+ 3
(AA3 4
)AA4 5
?AA6 7
ProGridsInterfaceAA8 I
.AAI J
GetSnapMethodAAJ W
(AAW X
)AAX Y
:AAZ [

s_SnapAxisAA\ f
.AAf g
valueAAg l
;AAl m
}AAn o
}BB 	
publicDD 
staticDD 
Vector3DD $
incrementalSnapMoveValueDD 6
{EE 	
getGG 
{GG 
returnGG 
EditorSnapSettingsGG +
.GG+ ,
moveGG, 0
;GG0 1
}GG2 3
}KK 	
publicMM 
staticMM 
Vector3MM 
worldSnapMoveValueMM 0
{NN 	
getOO 
{PP 
returnRR 
ProGridsInterfaceRR (
.RR( )
IsActiveRR) 1
(RR1 2
)RR2 3
?RR4 5
ProGridsInterfaceRR6 G
.RRG H
	SnapValueRRH Q
(RRQ R
)RRR S
*RRT U
Vector3RRV ]
.RR] ^
oneRR^ a
:RRb c
GridSettingsRRd p
.RRp q
sizeRRq u
;RRu v
}VV 
}WW 	
publicYY 
staticYY 
floatYY &
incrementalSnapRotateValueYY 6
{ZZ 	
get[[ 
{\\ 
return^^ 
EditorSnapSettings^^ )
.^^) *
rotate^^* 0
;^^0 1
}bb 
}cc 	
publicee 
staticee 
floatee %
incrementalSnapScaleValueee 5
{ff 	
getgg 
{hh 
returnjj 
EditorSnapSettingsjj )
.jj) *
scalejj* /
;jj/ 0
}nn 
}oo 	
}
êê 
}ëë Ã$
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\EntityVisibility.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
[

 
InitializeOnLoad

 
]

 
internal 
static 
class 
EntityVisibility *
{ 
static 
EntityVisibility 
(  
)  !
{ 	
EditorApplication 
.  
playModeStateChanged 2
+=3 5
x6 7
=>8 :
{; <"
OnPlayModeStateChanged= S
(S T
)T U
;U V
}W X
;X Y
SceneManager 
. 
sceneLoaded $
+=% '
OnSceneLoaded( 5
;5 6
} 	
private 
static 
void 
OnSceneLoaded )
() *
Scene* /
scene0 5
,5 6
LoadSceneMode7 D
modeE I
)I J
{ 	
if 
( 
EditorApplication !
.! "
	isPlaying" +
)+ ,
{ 
foreach 
( 
var 
rootGameObject +
in, .
scene/ 4
.4 5
GetRootGameObjects5 G
(G H
)H I
)I J
{ 
foreach 
( 
var  
entityBehaviour! 0
in1 3
rootGameObject4 B
.B C#
GetComponentsInChildrenC Z
<Z [
EntityBehaviour[ j
>j k
(k l
)l m
)m n
{ 
if 
( 
entityBehaviour +
.+ ,
manageVisibility, <
)< =
entityBehaviour   +
.  + ,
OnSceneLoaded  , 9
(  9 :
scene  : ?
,  ? @
mode  A E
)  E F
;  F G
}!! 
}"" 
}## 
}$$ 	
public++ 
static++ 
void++ 
SetEntityVisibility++ .
(++. /

EntityType++/ 9

entityType++: D
,++D E
bool++F J
	isVisible++K T
)++T U
{,, 	
foreach-- 
(-- 
var-- 
entity-- 
in--  "
Object--# )
.--) *
FindObjectsOfType--* ;
<--; <
Entity--< B
>--B C
(--C D
)--D E
)--E F
if.. 
(.. 
entity.. 
... 

entityType.. %
==..& (

entityType..) 3
)..3 4
{// 
var00 
mr00 
=00 
entity00 #
.00# $
GetComponent00$ 0
<000 1
MeshRenderer001 =
>00= >
(00> ?
)00? @
;00@ A
if11 
(11 
mr11 
!=11 
null11 "
)11" #
mr11$ &
.11& '
enabled11' .
=11/ 0
	isVisible111 :
;11: ;
}22 
}33 	
private88 
static88 
void88 "
OnPlayModeStateChanged88 2
(882 3
)883 4
{99 	
var:: 
	isPlaying:: 
=:: 
EditorApplication:: -
.::- .
	isPlaying::. 7
;::7 8
var;; 

orWillPlay;; 
=;; 
EditorApplication;; .
.;;. /)
isPlayingOrWillChangePlaymode;;/ L
;;;L M
if@@ 
(@@ 
	isPlaying@@ 
!=@@ 

orWillPlay@@ '
)@@' (
returnAA 
;AA 
varCC 

isEnteringCC 
=CC 
	isPlayingCC &
&&CC' )

orWillPlayCC* 4
;CC4 5
foreachEE 
(EE 
varEE 
entityBehaviourEE (
inEE) +
	ResourcesEE, 5
.EE5 6 
FindObjectsOfTypeAllEE6 J
<EEJ K
EntityBehaviourEEK Z
>EEZ [
(EE[ \
)EE\ ]
)EE] ^
ifFF 
(FF 
entityBehaviourFF #
.FF# $
manageVisibilityFF$ 4
)FF4 5
ifGG 
(GG 

isEnteringGG "
)GG" #
entityBehaviourHH '
.HH' (
OnEnterPlayModeHH( 7
(HH7 8
)HH8 9
;HH9 :
ifJJ 
(JJ 
!JJ 

isEnteringJJ 
)JJ 
returnKK 
;KK 
}LL 	
}MM 
}NN ı
¢D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Editors\OpenSmoothingEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
OpenSmoothingEditor $
:% &

MenuAction' 1
{ 
public		 
override		 
ToolbarGroup		 $
group		% *
{		+ ,
get		- 0
{		1 2
return		3 9
ToolbarGroup		: F
.		F G
Tool		G K
;		K L
}		M N
}		O P
public

 
override

 
	Texture2D

 !
icon

" &
{

' (
get

) ,
{

- .
return

/ 5
IconUtility

6 A
.

A B
GetIcon

B I
(

I J
$str

J c
,

c d
IconSkin

e m
.

m n
Pro

n q
)

q r
;

r s
}

t u
}

v w
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
	s_Tooltip> G
;G H
}I J
}K L
public 
override 
string 
	menuTitle (
{) *
get+ .
{/ 0
return1 7
$str8 C
;C D
}E F
}G H
public 
override 
int 
toolbarPriority +
{, -
get. 1
{2 3
return4 :
$num; <
;< =
}> ?
}@ A
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str )
,) *
$str	 ∫
) 
; 
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
ProBuilderEditor )
.) *
instance* 2
!=3 5
null6 :
;: ;
}< =
} 	
public 
override 
ActionResult $
DoAction% -
(- .
). /
{ 	
SmoothGroupEditor 
. %
MenuOpenSmoothGroupEditor 7
(7 8
)8 9
;9 :
return   
new   
ActionResult   #
(  # $
ActionResult  $ 0
.  0 1
Status  1 7
.  7 8
Success  8 ?
,  ? @
$str  A _
)  _ `
;  ` a
}!! 	
}"" 
}## Ó«
öD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\ProBuilderMeshEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
[ 
CustomEditor 
( 
typeof 
( 
ProBuilderMesh '
)' (
)( )
]) *
[ "
CanEditMultipleObjects 
] 
sealed 

class  
ProBuilderMeshEditor %
:& '
Editor( .
{ 
static 
class 
Styles 
{ 	
static 
bool 
s_Initialized %
;% &
public 
static 
GUIStyle "

miniButton# -
;- .
public 
static 
readonly "

GUIContent# -
lightmapStatic. <
== >
EditorGUIUtility? O
.O P
TrTextContentP ]
(] ^
$str^ o
,o p
$str	q Ü
)
Ü á
;
á à
public 
static 
readonly "

GUIContent# -

sharedMesh. 8
=9 :
EditorGUIUtility; K
.K L
TrTextContentL Y
(Y Z
$strZ `
)` a
;a b
public 
static 
void 
Init #
(# $
)$ %
{ 
if 
( 
s_Initialized !
)! "
return 
; 
s_Initialized 
= 
true  $
;$ %

miniButton 
= 
new  
GUIStyle! )
() *
GUI* -
.- .
skin. 2
.2 3
button3 9
)9 :
;: ;

miniButton 
. 
stretchHeight (
=) *
false+ 0
;0 1

miniButton 
. 
stretchWidth '
=( )
false* /
;/ 0

miniButton   
.   
padding   "
=  # $
new  % (

RectOffset  ) 3
(  3 4
$num  4 5
,  5 6
$num  7 8
,  8 9
$num  : ;
,  ; <
$num  = >
)  > ?
;  ? @
}!! 
}"" 	
internal$$ 
static$$ 
event$$ 
System$$ $
.$$$ %
Action$$% +!
onGetFrameBoundsEvent$$, A
;$$A B
ProBuilderMesh%% 
m_Mesh%% 
;%% 
SerializedObject'' )
m_GameObjectsSerializedObject'' 6
;''6 7
SerializedProperty(( 
m_UnwrapParameters(( -
;((- .
SerializedProperty)) 
m_StaticEditorFlags)) .
;)). /
bool** #
m_AnyMissingLightmapUVs** $
;**$ %
bool++ 
m_ModifyingMesh++ 
;++ 
ProBuilderEditor-- 
editor-- 
{.. 	
get// 
{// 
return// 
ProBuilderEditor// )
.//) *
instance//* 2
;//2 3
}//4 5
}00 	
Renderer22 
m_MeshRenderer22 
=22  !
null22" &
;22& '
	protected44 
override44 
void44 
OnHeaderGUI44  +
(44+ ,
)44, -
{55 	
}66 	
void88 
OnEnable88 
(88 
)88 
{99 	
if:: 
(:: 
EditorApplication:: !
.::! ")
isPlayingOrWillChangePlaymode::" ?
)::? @
return;; 
;;; 
m_Mesh== 
=== 
(== 
ProBuilderMesh== $
)==$ %
target==% +
;==+ ,
if?? 
(?? 
!?? 
m_Mesh?? 
)?? 
return@@ 
;@@ )
m_GameObjectsSerializedObjectBB )
=BB* +
newBB, /
SerializedObjectBB0 @
(BB@ A
serializedObjectBBA Q
.BBQ R
targetObjectsBBR _
.BB_ `
SelectBB` f
(BBf g
tBBg h
=>BBi k
(BBl m
(BBm n
	ComponentBBn w
)BBw x
tBBx y
)BBy z
.BBz {

gameObject	BB{ Ö
)
BBÖ Ü
.
BBÜ á
ToArray
BBá é
(
BBé è
)
BBè ê
)
BBê ë
;
BBë í
m_UnwrapParametersDD 
=DD  
serializedObjectDD! 1
.DD1 2
FindPropertyDD2 >
(DD> ?
$strDD? S
)DDS T
;DDT U
m_StaticEditorFlagsEE 
=EE  !)
m_GameObjectsSerializedObjectEE" ?
.EE? @
FindPropertyEE@ L
(EEL M
$strEEM b
)EEb c
;EEc d
m_MeshRendererFF 
=FF 
m_MeshFF #
.FF# $

gameObjectFF$ .
.FF. /
GetComponentFF/ ;
<FF; <
RendererFF< D
>FFD E
(FFE F
)FFF G
;FFG H"
VertexManipulationToolHH "
.HH" #"
beforeMeshModificationHH# 9
+=HH: <#
OnBeginMeshModificationHH= T
;HHT U"
VertexManipulationToolII "
.II" #!
afterMeshModificationII# 8
+=II9 ;$
OnFinishMeshModificationII< T
;IIT U
}JJ 	
voidLL 
	OnDisableLL 
(LL 
)LL 
{MM 	"
VertexManipulationToolNN "
.NN" #"
beforeMeshModificationNN# 9
-=NN: <#
OnBeginMeshModificationNN= T
;NNT U"
VertexManipulationToolOO "
.OO" #!
afterMeshModificationOO# 8
-=OO9 ;$
OnFinishMeshModificationOO< T
;OOT U
}PP 	
voidRR #
OnBeginMeshModificationRR $
(RR$ %
IEnumerableRR% 0
<RR0 1
ProBuilderMeshRR1 ?
>RR? @
	selectionRRA J
)RRJ K
{SS 	
m_ModifyingMeshTT 
=TT 
trueTT "
;TT" #
}UU 	
voidWW $
OnFinishMeshModificationWW %
(WW% &
IEnumerableWW& 1
<WW1 2
ProBuilderMeshWW2 @
>WW@ A
	selectionWWB K
)WWK L
{XX 	
m_ModifyingMeshYY 
=YY 
falseYY #
;YY# $
}ZZ 	
public\\ 
override\\ 
void\\ 
OnInspectorGUI\\ +
(\\+ ,
)\\, -
{]] 	
if^^ 
(^^ 
m_UnwrapParameters^^ "
==^^# %
null^^' +
||^^, .
m_StaticEditorFlags^^/ B
==^^C E
null^^F J
)^^J K
return__ 
;__ 
Stylesaa 
.aa 
Initaa 
(aa 
)aa 
;aa 
ifcc 
(cc 
	GUILayoutcc 
.cc 
Buttoncc  
(cc  !
$strcc! 2
)cc2 3
)cc3 4
ProBuilderEditordd  
.dd  !
MenuOpenWindowdd! /
(dd/ 0
)dd0 1
;dd1 2
	GUILayoutff 
.ff 
Boxff 
(ff 
$strff P
,ffP Q
EditorStylesffR ^
.ff^ _
helpBoxff_ f
)fff g
;ffg h
vargg 

guiEnabledgg 
=gg 
GUIgg  
.gg  !
enabledgg! (
;gg( )
GUIhh 
.hh 
enabledhh 
=hh 
falsehh 
;hh  
varii 
guiStateMixedii 
=ii 
	EditorGUIii  )
.ii) *
showMixedValueii* 8
;ii8 9
	EditorGUIjj 
.jj 
showMixedValuejj $
=jj% &
targetsjj' .
.jj. /
Lengthjj/ 5
>jj6 7
$numjj8 9
;jj9 :
EditorGUILayoutkk 
.kk 
ObjectFieldkk '
(kk' (
Styleskk( .
.kk. /

sharedMeshkk/ 9
,kk9 :
m_Meshkk; A
.kkA B
meshkkB F
,kkF G
typeofkkH N
(kkN O
MeshkkO S
)kkS T
,kkT U
falsekkV [
)kk[ \
;kk\ ]
	EditorGUIll 
.ll 
showMixedValuell $
=ll% &
guiStateMixedll' 4
;ll4 5
GUImm 
.mm 
enabledmm 
=mm 

guiEnabledmm $
;mm$ %
Vector3oo 
boundsoo 
=oo 
m_MeshRendereroo +
!=oo, .
nulloo/ 3
?oo4 5
m_MeshRendereroo6 D
.ooD E
boundsooE K
.ooK L
sizeooL P
:ooQ R
Vector3ooS Z
.ooZ [
zerooo[ _
;oo_ `
EditorGUILayoutpp 
.pp 
Vector3Fieldpp (
(pp( )
$strpp) B
,ppB C
boundsppD J
)ppJ K
;ppK L
serializedObjectrr 
.rr 
Updaterr #
(rr# $
)rr$ %
;rr% &
	EditorGUIss 
.ss 
BeginChangeCheckss &
(ss& '
)ss' (
;ss( )"
LightmapStaticSettingstt "
(tt" #
)tt# $
;tt$ %
ifuu 
(uu 
	EditorGUIuu 
.uu 
EndChangeCheckuu (
(uu( )
)uu) *
)uu* +
serializedObjectvv  
.vv  !#
ApplyModifiedPropertiesvv! 8
(vv8 9
)vv9 :
;vv: ;
}
££ 	
void
•• $
LightmapStaticSettings
•• #
(
••# $
)
••$ %
{
¶¶ 	+
m_GameObjectsSerializedObject
ßß )
.
ßß) *
Update
ßß* 0
(
ßß0 1
)
ßß1 2
;
ßß2 3
bool
™™ 
lightmapStatic
™™ 
=
™™  !
(
™™" #!
m_StaticEditorFlags
™™# 6
.
™™6 7
intValue
™™7 ?
&
™™@ A
(
™™B C
int
™™C F
)
™™F G
StaticEditorFlags
™™G X
.
™™X Y
ContributeGI
™™Y e
)
™™e f
!=
™™g i
$num
™™j k
;
™™k l
	EditorGUI
ØØ 
.
ØØ 
BeginChangeCheck
ØØ &
(
ØØ& '
)
ØØ' (
;
ØØ( )
lightmapStatic
±± 
=
±± 
EditorGUILayout
±± ,
.
±±, -
Toggle
±±- 3
(
±±3 4
Styles
±±4 :
.
±±: ;
lightmapStatic
±±; I
,
±±I J
lightmapStatic
±±K Y
)
±±Y Z
;
±±Z [
if
≥≥ 
(
≥≥ 
	EditorGUI
≥≥ 
.
≥≥ 
EndChangeCheck
≥≥ (
(
≥≥( )
)
≥≥) *
)
≥≥* +
{
¥¥ 
SceneModeUtility
∂∂  
.
∂∂  !
SetStaticFlags
∂∂! /
(
∂∂/ 0+
m_GameObjectsSerializedObject
∂∂0 M
.
∂∂M N
targetObjects
∂∂N [
,
∂∂[ \
(
∂∂] ^
int
∂∂^ a
)
∂∂a b
StaticEditorFlags
∂∂b s
.
∂∂s t
ContributeGI∂∂t Ä
,∂∂Ä Å
lightmapStatic∂∂Ç ê
)∂∂ê ë
;∂∂ë í
}
∫∫ 
if
ºº 
(
ºº 
lightmapStatic
ºº 
)
ºº 
{
ΩΩ 
EditorGUILayout
ææ 
.
ææ  
PropertyField
ææ  -
(
ææ- . 
m_UnwrapParameters
ææ. @
,
ææ@ A
true
ææB F
)
ææF G
;
ææG H
if
¿¿ 
(
¿¿  
m_UnwrapParameters
¿¿ &
.
¿¿& '

isExpanded
¿¿' 1
)
¿¿1 2
{
¡¡ 
	GUILayout
¬¬ 
.
¬¬ 
BeginHorizontal
¬¬ -
(
¬¬- .
)
¬¬. /
;
¬¬/ 0
	GUILayout
√√ 
.
√√ 
FlexibleSpace
√√ +
(
√√+ ,
)
√√, -
;
√√- .
if
≈≈ 
(
≈≈ 
	GUILayout
≈≈ !
.
≈≈! "
Button
≈≈" (
(
≈≈( )
$str
≈≈) 0
,
≈≈0 1
Styles
≈≈2 8
.
≈≈8 9

miniButton
≈≈9 C
)
≈≈C D
)
≈≈D E
ResetUnwrapParams
∆∆ )
(
∆∆) * 
m_UnwrapParameters
∆∆* <
)
∆∆< =
;
∆∆= >
if
»» 
(
»» 
	GUILayout
»» !
.
»»! "
Button
»»" (
(
»»( )
$str
»») 0
,
»»0 1
Styles
»»2 8
.
»»8 9

miniButton
»»9 C
)
»»C D
)
»»D E 
RebuildLightmapUVs
…… *
(
……* +
)
……+ ,
;
……, -
	GUILayout
ÀÀ 
.
ÀÀ 
EndHorizontal
ÀÀ +
(
ÀÀ+ ,
)
ÀÀ, -
;
ÀÀ- .
	GUILayout
ÃÃ 
.
ÃÃ 
Space
ÃÃ #
(
ÃÃ# $
$num
ÃÃ$ %
)
ÃÃ% &
;
ÃÃ& '
}
ÕÕ 
if
œœ 
(
œœ 
!
œœ 
m_ModifyingMesh
œœ $
)
œœ$ %
{
–– %
m_AnyMissingLightmapUVs
—— +
=
——, -
targets
——. 5
.
——5 6
Any
——6 9
(
——9 :
x
——: ;
=>
——< >
{
““ 
if
”” 
(
”” 
x
”” 
is
””  
ProBuilderMesh
””! /
)
””/ 0
return
‘‘ "
!
‘‘# $
(
‘‘$ %
(
‘‘% &
ProBuilderMesh
‘‘& 4
)
‘‘4 5
x
‘‘5 6
)
‘‘6 7
.
‘‘7 8
	HasArrays
‘‘8 A
(
‘‘A B

MeshArrays
‘‘B L
.
‘‘L M
Texture1
‘‘M U
)
‘‘U V
;
‘‘V W
return
÷÷ 
false
÷÷ $
;
÷÷$ %
}
◊◊ 
)
◊◊ 
;
◊◊ 
}
ÿÿ 
if
⁄⁄ 
(
⁄⁄ %
m_AnyMissingLightmapUVs
⁄⁄ +
)
⁄⁄+ ,
{
€€ 
EditorGUILayout
‹‹ #
.
‹‹# $
HelpBox
‹‹$ +
(
‹‹+ ,
$str
‹‹, e
,
‹‹e f
MessageType
‹‹g r
.
‹‹r s
Warning
‹‹s z
)
‹‹z {
;
‹‹{ |
if
ﬁﬁ 
(
ﬁﬁ 
	GUILayout
ﬁﬁ !
.
ﬁﬁ! "
Button
ﬁﬁ" (
(
ﬁﬁ( )
$str
ﬁﬁ) @
)
ﬁﬁ@ A
)
ﬁﬁA B 
RebuildLightmapUVs
ﬂﬂ *
(
ﬂﬂ* +
)
ﬂﬂ+ ,
;
ﬂﬂ, -
}
‡‡ 
}
·· 
else
‚‚ 
{
„„ 
EditorGUILayout
‰‰ 
.
‰‰  
HelpBox
‰‰  '
(
‰‰' (
$str‰‰( ã
,‰‰ã å
MessageType‰‰ç ò
.‰‰ò ô
Info‰‰ô ù
)‰‰ù û
;‰‰û ü
}
ÂÂ 
}
ÁÁ 	
void
ÈÈ  
RebuildLightmapUVs
ÈÈ 
(
ÈÈ  
bool
ÈÈ  $
forceRebuildAll
ÈÈ% 4
=
ÈÈ5 6
true
ÈÈ7 ;
)
ÈÈ; <
{
ÍÍ 	
foreach
ÎÎ 
(
ÎÎ 
var
ÎÎ 
obj
ÎÎ 
in
ÎÎ 
targets
ÎÎ  '
)
ÎÎ' (
{
ÏÏ 
if
ÌÌ 
(
ÌÌ 
obj
ÌÌ 
is
ÌÌ 
ProBuilderMesh
ÌÌ )
)
ÌÌ) *
{
ÓÓ 
var
ÔÔ 
mesh
ÔÔ 
=
ÔÔ 
(
ÔÔ  
ProBuilderMesh
ÔÔ  .
)
ÔÔ. /
obj
ÔÔ/ 2
;
ÔÔ2 3
if
ÚÚ 
(
ÚÚ 
!
ÚÚ 
mesh
ÚÚ 
.
ÚÚ 

gameObject
ÚÚ (
.
ÚÚ( )
HasStaticFlag
ÚÚ) 6
(
ÚÚ6 7
StaticEditorFlags
ÚÚ7 H
.
ÚÚH I
ContributeGI
ÚÚI U
)
ÚÚU V
)
ÚÚV W
continue
ÛÛ  
;
ÛÛ  !
if
˘˘ 
(
˘˘ 
forceRebuildAll
˘˘ '
||
˘˘( *
!
˘˘+ ,
mesh
˘˘, 0
.
˘˘0 1
	HasArrays
˘˘1 :
(
˘˘: ;

MeshArrays
˘˘; E
.
˘˘E F
Texture1
˘˘F N
)
˘˘N O
)
˘˘O P
mesh
˙˙ 
.
˙˙ 
Optimize
˙˙ %
(
˙˙% &
true
˙˙& *
)
˙˙* +
;
˙˙+ ,
}
˚˚ 
}
¸¸ 
}
˝˝ 	
void
ˇˇ 
ResetUnwrapParams
ˇˇ 
(
ˇˇ  
SerializedProperty
ˇˇ 1
prop
ˇˇ2 6
)
ˇˇ6 7
{
ÄÄ 	
var
ÅÅ 
	hardAngle
ÅÅ 
=
ÅÅ 
prop
ÅÅ  
.
ÅÅ  !"
FindPropertyRelative
ÅÅ! 5
(
ÅÅ5 6
$str
ÅÅ6 C
)
ÅÅC D
;
ÅÅD E
var
ÇÇ 

packMargin
ÇÇ 
=
ÇÇ 
prop
ÇÇ !
.
ÇÇ! ""
FindPropertyRelative
ÇÇ" 6
(
ÇÇ6 7
$str
ÇÇ7 E
)
ÇÇE F
;
ÇÇF G
var
ÉÉ 

angleError
ÉÉ 
=
ÉÉ 
prop
ÉÉ !
.
ÉÉ! ""
FindPropertyRelative
ÉÉ" 6
(
ÉÉ6 7
$str
ÉÉ7 E
)
ÉÉE F
;
ÉÉF G
var
ÑÑ 
	areaError
ÑÑ 
=
ÑÑ 
prop
ÑÑ  
.
ÑÑ  !"
FindPropertyRelative
ÑÑ! 5
(
ÑÑ5 6
$str
ÑÑ6 C
)
ÑÑC D
;
ÑÑD E
	hardAngle
ÜÜ 
.
ÜÜ 

floatValue
ÜÜ  
=
ÜÜ! "
UnwrapParameters
ÜÜ# 3
.
ÜÜ3 4
k_HardAngle
ÜÜ4 ?
;
ÜÜ? @

packMargin
áá 
.
áá 

floatValue
áá !
=
áá" #
UnwrapParameters
áá$ 4
.
áá4 5
k_PackMargin
áá5 A
;
ááA B

angleError
àà 
.
àà 

floatValue
àà !
=
àà" #
UnwrapParameters
àà$ 4
.
àà4 5
k_AngleError
àà5 A
;
ààA B
	areaError
ââ 
.
ââ 

floatValue
ââ  
=
ââ! "
UnwrapParameters
ââ# 3
.
ââ3 4
k_AreaError
ââ4 ?
;
ââ? @ 
RebuildLightmapUVs
ãã 
(
ãã 
)
ãã  
;
ãã  !
}
åå 	
bool
éé 
HasFrameBounds
éé 
(
éé 
)
éé 
{
èè 	
if
êê 
(
êê 
m_Mesh
êê 
==
êê 
null
êê 
)
êê 
m_Mesh
ëë 
=
ëë 
(
ëë 
ProBuilderMesh
ëë (
)
ëë( )
target
ëë) /
;
ëë/ 0
return
ìì 
ProBuilderEditor
ìì #
.
ìì# $
instance
ìì$ ,
!=
ìì- /
null
ìì0 4
&&
ìì5 7
InternalUtility
îî 
.
îî  
GetComponents
îî  -
<
îî- .
ProBuilderMesh
îî. <
>
îî< =
(
îî= >
	Selection
îî> G
.
îîG H

transforms
îîH R
)
îîR S
.
îîS T
Sum
îîT W
(
îîW X
x
îîX Y
=>
îîZ \
x
îî] ^
.
îî^ _%
selectedIndexesInternal
îî_ v
.
îîv w
Length
îîw }
)
îî} ~
>îî Ä
$numîîÅ Ç
;îîÇ É
}
ïï 	
Bounds
óó 
OnGetFrameBounds
óó 
(
óó  
)
óó  !
{
òò 	
if
ôô 
(
ôô 
!
ôô 
ProBuilderEditor
ôô !
.
ôô! "

selectMode
ôô" ,
.
ôô, -
IsMeshElementMode
ôô- >
(
ôô> ?
)
ôô? @
)
ôô@ A
return
öö 
m_MeshRenderer
öö %
!=
öö& (
null
öö) -
?
öö. /
m_MeshRenderer
öö0 >
.
öö> ?
bounds
öö? E
:
ööF G
default
ööH O
(
ööO P
Bounds
ööP V
)
ööV W
;
ööW X
if
úú 
(
úú #
onGetFrameBoundsEvent
úú %
!=
úú& (
null
úú) -
)
úú- .#
onGetFrameBoundsEvent
ùù %
(
ùù% &
)
ùù& '
;
ùù' (
Vector3
üü 
min
üü 
=
üü 
Vector3
üü !
.
üü! "
zero
üü" &
,
üü& '
max
üü( +
=
üü, -
Vector3
üü. 5
.
üü5 6
zero
üü6 :
;
üü: ;
bool
†† 
init
†† 
=
†† 
false
†† 
;
†† 
foreach
¢¢ 
(
¢¢ 
ProBuilderMesh
¢¢ #
mesh
¢¢$ (
in
¢¢) +
InternalUtility
¢¢, ;
.
¢¢; <
GetComponents
¢¢< I
<
¢¢I J
ProBuilderMesh
¢¢J X
>
¢¢X Y
(
¢¢Y Z
	Selection
¢¢Z c
.
¢¢c d

transforms
¢¢d n
)
¢¢n o
)
¢¢o p
{
££ 
int
§§ 
[
§§ 
]
§§ 
tris
§§ 
=
§§ 
mesh
§§ !
.
§§! "%
selectedIndexesInternal
§§" 9
;
§§9 :
if
¶¶ 
(
¶¶ 
tris
¶¶ 
==
¶¶ 
null
¶¶  
||
¶¶! #
tris
¶¶$ (
.
¶¶( )
Length
¶¶) /
<
¶¶0 1
$num
¶¶2 3
)
¶¶3 4
continue
ßß 
;
ßß 
Vector3
©© 
[
©© 
]
©© 
verts
©© 
=
©©  !
mesh
©©" &
.
©©& '
positionsInternal
©©' 8
;
©©8 9
var
™™ 
trs
™™ 
=
™™ 
mesh
™™ 
.
™™ 
	transform
™™ (
;
™™( )
if
¨¨ 
(
¨¨ 
!
¨¨ 
init
¨¨ 
)
¨¨ 
{
≠≠ 
init
ÆÆ 
=
ÆÆ 
true
ÆÆ 
;
ÆÆ  
min
ØØ 
=
ØØ 
trs
ØØ 
.
ØØ 
TransformPoint
ØØ ,
(
ØØ, -
verts
ØØ- 2
[
ØØ2 3
tris
ØØ3 7
[
ØØ7 8
$num
ØØ8 9
]
ØØ9 :
]
ØØ: ;
)
ØØ; <
;
ØØ< =
max
∞∞ 
=
∞∞ 
trs
∞∞ 
.
∞∞ 
TransformPoint
∞∞ ,
(
∞∞, -
verts
∞∞- 2
[
∞∞2 3
tris
∞∞3 7
[
∞∞7 8
$num
∞∞8 9
]
∞∞9 :
]
∞∞: ;
)
∞∞; <
;
∞∞< =
}
±± 
for
≥≥ 
(
≥≥ 
int
≥≥ 
i
≥≥ 
=
≥≥ 
$num
≥≥ 
,
≥≥ 
c
≥≥  !
=
≥≥" #
tris
≥≥$ (
.
≥≥( )
Length
≥≥) /
;
≥≥/ 0
i
≥≥1 2
<
≥≥3 4
c
≥≥5 6
;
≥≥6 7
i
≥≥8 9
++
≥≥9 ;
)
≥≥; <
{
¥¥ 
Vector3
µµ 
p
µµ 
=
µµ 
trs
µµ  #
.
µµ# $
TransformPoint
µµ$ 2
(
µµ2 3
verts
µµ3 8
[
µµ8 9
tris
µµ9 =
[
µµ= >
i
µµ> ?
]
µµ? @
]
µµ@ A
)
µµA B
;
µµB C
min
∑∑ 
.
∑∑ 
x
∑∑ 
=
∑∑ 
Mathf
∑∑ !
.
∑∑! "
Min
∑∑" %
(
∑∑% &
p
∑∑& '
.
∑∑' (
x
∑∑( )
,
∑∑) *
min
∑∑+ .
.
∑∑. /
x
∑∑/ 0
)
∑∑0 1
;
∑∑1 2
max
∏∏ 
.
∏∏ 
x
∏∏ 
=
∏∏ 
Mathf
∏∏ !
.
∏∏! "
Max
∏∏" %
(
∏∏% &
p
∏∏& '
.
∏∏' (
x
∏∏( )
,
∏∏) *
max
∏∏+ .
.
∏∏. /
x
∏∏/ 0
)
∏∏0 1
;
∏∏1 2
min
∫∫ 
.
∫∫ 
y
∫∫ 
=
∫∫ 
Mathf
∫∫ !
.
∫∫! "
Min
∫∫" %
(
∫∫% &
p
∫∫& '
.
∫∫' (
y
∫∫( )
,
∫∫) *
min
∫∫+ .
.
∫∫. /
y
∫∫/ 0
)
∫∫0 1
;
∫∫1 2
max
ªª 
.
ªª 
y
ªª 
=
ªª 
Mathf
ªª !
.
ªª! "
Max
ªª" %
(
ªª% &
p
ªª& '
.
ªª' (
y
ªª( )
,
ªª) *
max
ªª+ .
.
ªª. /
y
ªª/ 0
)
ªª0 1
;
ªª1 2
min
ΩΩ 
.
ΩΩ 
z
ΩΩ 
=
ΩΩ 
Mathf
ΩΩ !
.
ΩΩ! "
Min
ΩΩ" %
(
ΩΩ% &
p
ΩΩ& '
.
ΩΩ' (
z
ΩΩ( )
,
ΩΩ) *
min
ΩΩ+ .
.
ΩΩ. /
z
ΩΩ/ 0
)
ΩΩ0 1
;
ΩΩ1 2
max
ææ 
.
ææ 
z
ææ 
=
ææ 
Mathf
ææ !
.
ææ! "
Max
ææ" %
(
ææ% &
p
ææ& '
.
ææ' (
z
ææ( )
,
ææ) *
max
ææ+ .
.
ææ. /
z
ææ/ 0
)
ææ0 1
;
ææ1 2
}
øø 
}
¿¿ 
return
¬¬ 
new
¬¬ 
Bounds
¬¬ 
(
¬¬ 
(
¬¬ 
min
¬¬ "
+
¬¬# $
max
¬¬% (
)
¬¬( )
/
¬¬* +
$num
¬¬, .
,
¬¬. /
max
¬¬0 3
!=
¬¬4 6
min
¬¬7 :
?
¬¬; <
max
¬¬= @
-
¬¬A B
min
¬¬C F
:
¬¬G H
Vector3
¬¬I P
.
¬¬P Q
one
¬¬Q T
*
¬¬U V
$num
¬¬W Z
)
¬¬Z [
;
¬¬[ \
}
√√ 	
[
≈≈ 	
MenuItem
≈≈	 
(
≈≈ 
$str
≈≈ :
)
≈≈: ;
]
≈≈; <
static
∆∆ 
void
∆∆ 
OpenProBuilder
∆∆ "
(
∆∆" #
)
∆∆# $
{
«« 	
ProBuilderEditor
»» 
.
»» 
MenuOpenWindow
»» +
(
»»+ ,
)
»», -
;
»»- .
}
…… 	
}
   
}ÀÀ áF
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Export\ExportPly.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
	ExportPly 
: 

MenuAction '
{ 
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
ExportG M
;M N
}O P
}Q R
public 
override 
	Texture2D !
icon" &
{' (
get) ,
{- .
return/ 5
null6 :
;: ;
}< =
}> ?
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
_tooltip> F
;F G
}H I
}J K
static 
readonly 
TooltipContent &
_tooltip' /
=0 1
new2 5
TooltipContent6 D
( 
$str 
, 
$str -
) 
; 
public 
override 
bool 
hidden #
{ 	
get 
{ 
return 
true 
; 
}  
} 	
public 
override 
bool 
enabled $
{   	
get!! 
{!! 
return!! 
MeshSelection!! &
.!!& '
selectedObjectCount!!' :
>!!; <
$num!!= >
;!!> ?
}!!@ A
}"" 	
public$$ 
override$$ 
ActionResult$$ $
DoAction$$% -
($$- .
)$$. /
{%% 	
string&& 
res&& 
=&&  
ExportWithFileDialog&& -
(&&- .
MeshSelection&&. ;
.&&; <
topInternal&&< G
)&&G H
;&&H I
if(( 
((( 
string(( 
.(( 
IsNullOrEmpty(( $
((($ %
res((% (
)((( )
)(() *
return)) 
new)) 
ActionResult)) '
())' (
ActionResult))( 4
.))4 5
Status))5 ;
.)); <
Canceled))< D
,))D E
$str))F U
)))U V
;))V W
Export++ 
.++ 
PingExportedModel++ $
(++$ %
res++% (
)++( )
;++) *
return-- 
new-- 
ActionResult-- #
(--# $
ActionResult--$ 0
.--0 1
Status--1 7
.--7 8
Success--8 ?
,--? @
$str--A M
)--M N
;--N O
}.. 	
public33 
static33 
string33  
ExportWithFileDialog33 1
(331 2
IEnumerable332 =
<33= >
ProBuilderMesh33> L
>33L M
meshes33N T
,33T U
bool33V Z
asGroup33[ b
=33c d
true33e i
,33i j

PlyOptions33k u
options33v }
=33~ 
null
33Ä Ñ
)
33Ñ Ö
{44 	
if55 
(55 
meshes55 
==55 
null55 
||55 !
meshes55" (
.55( )
Count55) .
(55. /
)55/ 0
<551 2
$num553 4
)554 5
return66 
null66 
;66 
string88 
path88 
=88 
null88 
,88 
res88  #
=88$ %
null88& *
;88* +
if:: 
(:: 
asGroup:: 
||:: 
meshes:: !
.::! "
Count::" '
(::' (
)::( )
<::* +
$num::, -
)::- .
{;; 
ProBuilderMesh<< 
first<< $
=<<% &
meshes<<' -
.<<- .
FirstOrDefault<<. <
(<<< =
)<<= >
;<<> ?
string== 
name== 
=== 
first== #
!===$ &
null==' +
?==, -
first==. 3
.==3 4
name==4 8
:==9 :
$str==; L
;==L M
path>> 
=>> 
UnityEditor>> "
.>>" #
EditorUtility>># 0
.>>0 1
SaveFilePanel>>1 >
(>>> ?
$str>>? N
,>>N O
$str>>P X
,>>X Y
name>>Z ^
,>>^ _
$str>>` e
)>>e f
;>>f g
if@@ 
(@@ 
string@@ 
.@@ 
IsNullOrEmpty@@ (
(@@( )
path@@) -
)@@- .
)@@. /
returnAA 
nullAA 
;AA  
resCC 
=CC 
DoExportCC 
(CC 
pathCC #
,CC# $
meshesCC% +
,CC+ ,
optionsCC- 4
)CC4 5
;CC5 6
}DD 
elseEE 
{FF 
pathGG 
=GG 
UnityEditorGG "
.GG" #
EditorUtilityGG# 0
.GG0 1
SaveFolderPanelGG1 @
(GG@ A
$strGGA P
,GGP Q
$strGGR Z
,GGZ [
$strGG\ ^
)GG^ _
;GG_ `
ifII 
(II 
stringII 
.II 
IsNullOrEmptyII (
(II( )
pathII) -
)II- .
||II/ 1
!II2 3
	DirectoryII3 <
.II< =
ExistsII= C
(IIC D
pathIID H
)IIH I
)III J
returnJJ 
nullJJ 
;JJ  
foreachLL 
(LL 
ProBuilderMeshLL '
modelLL( -
inLL. 0
meshesLL1 7
)LL7 8
resMM 
=MM 
DoExportMM "
(MM" #
stringMM# )
.MM) *
FormatMM* 0
(MM0 1
$strMM1 >
,MM> ?
pathMM@ D
,MMD E
modelMMF K
.MMK L
nameMML P
)MMP Q
,MMQ R
newMMS V
ListMMW [
<MM[ \
ProBuilderMeshMM\ j
>MMj k
(MMk l
)MMl m
{MMn o
modelMMp u
}MMv w
,MMw x
options	MMy Ä
)
MMÄ Å
;
MMÅ Ç
}NN 
returnPP 
resPP 
;PP 
}QQ 	
staticSS 
stringSS 
DoExportSS 
(SS 
stringSS %
pathSS& *
,SS* +
IEnumerableSS, 7
<SS7 8
ProBuilderMeshSS8 F
>SSF G
modelsSSH N
,SSN O

PlyOptionsSSP Z
optionsSS[ b
)SSb c
{TT 	
stringUU 
nameUU 
=UU 
PathUU 
.UU '
GetFileNameWithoutExtensionUU :
(UU: ;
pathUU; ?
)UU? @
;UU@ A
stringVV 
	directoryVV 
=VV 
PathVV #
.VV# $
GetDirectoryNameVV$ 4
(VV4 5
pathVV5 9
)VV9 :
;VV: ;
stringXX 
plyXX 
;XX 
ifZZ 
(ZZ 
PlyExporterZZ 
.ZZ 
ExportZZ "
(ZZ" #
modelsZZ# )
,ZZ) *
outZZ+ .
plyZZ/ 2
,ZZ2 3
optionsZZ4 ;
)ZZ; <
)ZZ< =
{[[ 
try\\ 
{]] 
FileUtility^^ 
.^^  
WriteAllText^^  ,
(^^, -
string^^- 3
.^^3 4
Format^^4 :
(^^: ;
$str^^; H
,^^H I
	directory^^J S
,^^S T
name^^U Y
)^^Y Z
,^^Z [
ply^^\ _
)^^_ `
;^^` a
}__ 
catch`` 
(`` 
System`` 
.`` 
	Exception`` '
e``( )
)``) *
{aa 
Debugbb 
.bb 

LogWarningbb $
(bb$ %
stringbb% +
.bb+ ,
Formatbb, 2
(bb2 3
$strbb3 Y
,bbY Z
stringbb[ a
.bba b
Formatbbb h
(bbh i
$strbbi v
,bbv w
pathbbx |
,bb| }
name	bb~ Ç
)
bbÇ É
,
bbÉ Ñ
e
bbÖ Ü
.
bbÜ á
ToString
bbá è
(
bbè ê
)
bbê ë
)
bbë í
)
bbí ì
;
bbì î
returncc 
nullcc 
;cc  
}dd 
}ee 
elseff 
{gg 
Debughh 
.hh 

LogWarninghh  
(hh  !
$strhh! 6
)hh6 7
;hh7 8
returnii 
nullii 
;ii 
}jj 
returnll 
pathll 
;ll 
}mm 	
}nn 
}oo ò(
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\DeleteFaces.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
[ 
MenuActionShortcut 
( 
typeof 
( 
	SceneView (
)( )
,) *
KeyCode+ 2
.2 3
	Backspace3 <
)< =
]= >
sealed 

class 
DeleteFaces 
: 

MenuAction )
{		 
public

 
override

 
ToolbarGroup

 $
group

% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Geometry& .
;. /
}0 1
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- B
,B C
IconSkinD L
.L M
ProM P
)P Q
;Q R
}S T
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str 
, 
$str -
,- .
keyCommandDelete  
) 
; 
public   
override   

SelectMode   "
validSelectModes  # 3
{!! 	
get"" 
{"" 
return"" 

SelectMode"" #
.""# $
Face""$ (
;""( )
}""* +
}## 	
public%% 
override%% 
bool%% 
enabled%% $
{&& 	
get'' 
{'' 
return'' 
base'' 
.'' 
enabled'' %
&&''& (
MeshSelection'') 6
.''6 7
selectedFaceCount''7 H
>''I J
$num''K L
;''L M
}''N O
}(( 	
public** 
override** 
ActionResult** $
DoAction**% -
(**- .
)**. /
{++ 	
if,, 
(,, 
MeshSelection,, 
.,, 
selectedObjectCount,, 1
<,,2 3
$num,,4 5
),,5 6
return-- 
ActionResult-- #
.--# $
NoSelection--$ /
;--/ 0
UndoUtility// 
.// 
RecordSelection// '
(//' (
$str//( 5
)//5 6
;//6 7
int11 
count11 
=11 
$num11 
;11 
foreach33 
(33 
ProBuilderMesh33 #
pb33$ &
in33' )
MeshSelection33* 7
.337 8
topInternal338 C
)33C D
{44 
if55 
(55 
pb55 
.55 
selectedFaceCount55 (
==55) +
pb55, .
.55. /
facesInternal55/ <
.55< =
Length55= C
)55C D
{66 
Debug77 
.77 

LogWarning77 $
(77$ %
$str77% z
)77z {
;77{ |
continue88 
;88 
}99 
pb;; 
.;; 
DeleteFaces;; 
(;; 
pb;; !
.;;! "!
selectedFacesInternal;;" 7
);;7 8
;;;8 9
count<< 
+=<< 
pb<< 
.<< 
selectedFaceCount<< -
;<<- .
pb>> 
.>> 
ToMesh>> 
(>> 
)>> 
;>> 
pb?? 
.?? 
Refresh?? 
(?? 
)?? 
;?? 
pb@@ 
.@@ 
Optimize@@ 
(@@ 
)@@ 
;@@ 
}AA 
MeshSelectionCC 
.CC !
ClearElementSelectionCC /
(CC/ 0
)CC0 1
;CC1 2
ProBuilderEditorDD 
.DD 
RefreshDD $
(DD$ %
)DD% &
;DD& '
ifFF 
(FF 
countFF 
>FF 
$numFF 
)FF 
returnGG 
newGG 
ActionResultGG '
(GG' (
ActionResultGG( 4
.GG4 5
StatusGG5 ;
.GG; <
SuccessGG< C
,GGC D
$strGGE N
+GGO P
countGGQ V
+GGW X
$strGGY a
)GGa b
;GGb c
returnII 
newII 
ActionResultII #
(II# $
ActionResultII$ 0
.II0 1
StatusII1 7
.II7 8
FailureII8 ?
,II? @
$strIIA T
)IIT U
;IIU V
}JJ 	
}KK 
}LL “q
ûD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\DuplicateFaces.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed		 

class		 
DuplicateFaces		 
:		  !

MenuAction		" ,
{

 
Pref 
<  
DuplicateFaceSetting !
>! ""
m_DuplicateFaceSetting# 9
=: ;
new< ?
Pref@ D
<D E 
DuplicateFaceSettingE Y
>Y Z
(Z [
$str[ r
,r s!
DuplicateFaceSetting	t à
.
à â

GameObject
â ì
)
ì î
;
î ï
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
GeometryG O
;O P
}Q R
}S T
public 
override 
	Texture2D !
icon" &
{' (
get) ,
{- .
return/ 5
IconUtility6 A
.A B
GetIconB I
(I J
$strJ b
,b c
IconSkind l
.l m
Prom p
)p q
;q r
}s t
}u v
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
	s_Tooltip> G
;G H
}I J
}K L
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str !
,! "
$str {
) 
; 
public 
override 

SelectMode "
validSelectModes# 3
{ 	
get 
{ 
return 

SelectMode #
.# $
Face$ (
;( )
}* +
} 	
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
base 
. 
enabled %
&&& (
MeshSelection) 6
.6 7
selectedFaceCount7 H
>I J
$numK L
;L M
}N O
} 	
	protected!! 
override!! 
MenuActionState!! *
optionsMenuState!!+ ;
{"" 	
get## 
{## 
return## 
MenuActionState## (
.##( )
VisibleAndEnabled##) :
;##: ;
}##< =
}$$ 	
internal&& 
enum&&  
DuplicateFaceSetting&& *
{'' 	

GameObject(( 
,(( 
Submesh)) 
}** 	
;**	 

	protected,, 
override,, 
void,, 
OnSettingsGUI,,  -
(,,- .
),,. /
{-- 	
	GUILayout.. 
... 
Label.. 
(.. 
$str.. 5
,..5 6
EditorStyles..7 C
...C D
	boldLabel..D M
)..M N
;..N O
EditorGUILayout00 
.00 
HelpBox00 #
(00# $
$str	00$ ô
,
00ô ö
MessageType
00õ ¶
.
00¶ ß
Info
00ß ´
)
00´ ¨
;
00¨ ≠
	EditorGUI22 
.22 
BeginChangeCheck22 &
(22& '
)22' (
;22( )"
m_DuplicateFaceSetting44 "
.44" #
value44# (
=44) *
(44+ , 
DuplicateFaceSetting44, @
)44@ A
EditorGUILayout44A P
.44P Q
	EnumPopup44Q Z
(44Z [
$str44[ i
,44i j#
m_DuplicateFaceSetting	44k Å
)
44Å Ç
;
44Ç É
if66 
(66 
	EditorGUI66 
.66 
EndChangeCheck66 (
(66( )
)66) *
)66* +
ProBuilderSettings77 "
.77" #
Save77# '
(77' (
)77( )
;77) *
	GUILayout99 
.99 
FlexibleSpace99 #
(99# $
)99$ %
;99% &
if;; 
(;; 
	GUILayout;; 
.;; 
Button;;  
(;;  !
$str;;! 6
);;6 7
);;7 8
EditorUtility<< 
.<< 
ShowNotification<< .
(<<. /
DoAction<</ 7
(<<7 8
)<<8 9
.<<9 :
notification<<: F
)<<F G
;<<G H
}== 	
public?? 
override?? 
ActionResult?? $
DoAction??% -
(??- .
)??. /
{@@ 	
ifAA 
(AA 
MeshSelectionAA 
.AA 
selectedObjectCountAA 1
<AA2 3
$numAA4 5
)AA5 6
returnBB 
ActionResultBB #
.BB# $
NoSelectionBB$ /
;BB/ 0
UndoUtilityDD 
.DD 
RecordSelectionDD '
(DD' (
$strDD( ;
)DD; <
;DD< =
ifFF 
(FF "
m_DuplicateFaceSettingFF &
==FF' ) 
DuplicateFaceSettingFF* >
.FF> ?

GameObjectFF? I
)FFI J
returnGG "
DuplicateFacesToObjectGG -
(GG- .
)GG. /
;GG/ 0
returnII #
DuplicateFacesToSubmeshII *
(II* +
)II+ ,
;II, -
}JJ 	
staticLL 
ActionResultLL #
DuplicateFacesToSubmeshLL 3
(LL3 4
)LL4 5
{MM 	
intNN 
countNN 
=NN 
$numNN 
;NN 
foreachPP 
(PP 
ProBuilderMeshPP #
pbPP$ &
inPP' )
MeshSelectionPP* 7
.PP7 8
topInternalPP8 C
)PPC D
{QQ 
pbRR 
.RR 
ToMeshRR 
(RR 
)RR 
;RR 
ListSS 
<SS 
FaceSS 
>SS 
resSS 
=SS  
pbSS! #
.SS# $
DetachFacesSS$ /
(SS/ 0
pbSS0 2
.SS2 3!
selectedFacesInternalSS3 H
,SSH I
falseSSJ O
)SSO P
;SSP Q
pbTT 
.TT 
RefreshTT 
(TT 
)TT 
;TT 
pbUU 
.UU 
OptimizeUU 
(UU 
)UU 
;UU 
pbWW 
.WW 
SetSelectedFacesWW #
(WW# $
resWW$ '
.WW' (
ToArrayWW( /
(WW/ 0
)WW0 1
)WW1 2
;WW2 3
countYY 
+=YY 
pbYY 
.YY 
selectedFaceCountYY -
;YY- .
}ZZ 
ProBuilderEditor\\ 
.\\ 
Refresh\\ $
(\\$ %
)\\% &
;\\& '
if^^ 
(^^ 
count^^ 
>^^ 
$num^^ 
)^^ 
return__ 
new__ 
ActionResult__ '
(__' (
ActionResult__( 4
.__4 5
Status__5 ;
.__; <
Success__< C
,__C D
$str__E Q
+__R S
count__T Y
+__Z [
(__\ ]
count__] b
>__c d
$num__e f
?__g h
$str__i q
:__r s
$str__t {
)__{ |
)__| }
;__} ~
returnaa 
newaa 
ActionResultaa #
(aa# $
ActionResultaa$ 0
.aa0 1
Statusaa1 7
.aa7 8
Successaa8 ?
,aa? @
$straaA R
)aaR S
;aaS T
}bb 	
staticdd 
ActionResultdd "
DuplicateFacesToObjectdd 2
(dd2 3
)dd3 4
{ee 	
intff 
duplicatedFaceCountff #
=ff$ %
$numff& '
;ff' (
Listgg 
<gg 

GameObjectgg 
>gg 

duplicatedgg '
=gg( )
newgg* -
Listgg. 2
<gg2 3

GameObjectgg3 =
>gg= >
(gg> ?
)gg? @
;gg@ A
foreachii 
(ii 
ProBuilderMeshii #
meshii$ (
inii) +
MeshSelectionii, 9
.ii9 :
topInternalii: E
)iiE F
{jj 
ifkk 
(kk 
meshkk 
.kk 
selectedFaceCountkk *
<kk+ ,
$numkk- .
)kk. /
continuell 
;ll 
varnn 
primarynn 
=nn 
meshnn "
.nn" #
selectedFaceIndexesnn# 6
;nn6 7
duplicatedFaceCountoo #
+=oo$ &
primaryoo' .
.oo. /
Countoo/ 4
;oo4 5
Listqq 
<qq 
intqq 
>qq 
inverseqq !
=qq" #
newqq$ '
Listqq( ,
<qq, -
intqq- 0
>qq0 1
(qq1 2
)qq2 3
;qq3 4
forss 
(ss 
intss 
iss 
=ss 
$numss 
;ss 
iss  !
<ss" #
meshss$ (
.ss( )
facesInternalss) 6
.ss6 7
Lengthss7 =
;ss= >
iss? @
++ss@ B
)ssB C
iftt 
(tt 
!tt 
primarytt  
.tt  !
Containstt! )
(tt) *
itt* +
)tt+ ,
)tt, -
inverseuu 
.uu  
Adduu  #
(uu# $
iuu$ %
)uu% &
;uu& '
ProBuilderMeshww 
copyww #
=ww$ %
Objectww& ,
.ww, -
Instantiateww- 8
(ww8 9
meshww9 =
.ww= >

gameObjectww> H
,wwH I
meshwwJ N
.wwN O
	transformwwO X
.wwX Y
parentwwY _
)ww_ `
.ww` a
GetComponentwwa m
<wwm n
ProBuilderMeshwwn |
>ww| }
(ww} ~
)ww~ 
;	ww Ä
EditorUtilityxx 
.xx %
SynchronizeWithMeshFilterxx 7
(xx7 8
copyxx8 <
)xx< =
;xx= >
if
ÄÄ 
(
ÄÄ 
copy
ÄÄ 
.
ÄÄ 
	transform
ÄÄ "
.
ÄÄ" #

childCount
ÄÄ# -
>
ÄÄ. /
$num
ÄÄ0 1
)
ÄÄ1 2
{
ÅÅ 
for
ÇÇ 
(
ÇÇ 
int
ÇÇ 
i
ÇÇ 
=
ÇÇ  
copy
ÇÇ! %
.
ÇÇ% &
	transform
ÇÇ& /
.
ÇÇ/ 0

childCount
ÇÇ0 :
-
ÇÇ; <
$num
ÇÇ= >
;
ÇÇ> ?
i
ÇÇ@ A
>
ÇÇB C
-
ÇÇD E
$num
ÇÇE F
;
ÇÇF G
i
ÇÇH I
--
ÇÇI K
)
ÇÇK L
Object
ÉÉ 
.
ÉÉ 
DestroyImmediate
ÉÉ /
(
ÉÉ/ 0
copy
ÉÉ0 4
.
ÉÉ4 5
	transform
ÉÉ5 >
.
ÉÉ> ?
GetChild
ÉÉ? G
(
ÉÉG H
i
ÉÉH I
)
ÉÉI J
.
ÉÉJ K

gameObject
ÉÉK U
)
ÉÉU V
;
ÉÉV W
foreach
ÖÖ 
(
ÖÖ 
var
ÖÖ  
child
ÖÖ! &
in
ÖÖ' )
mesh
ÖÖ* .
.
ÖÖ. /
	transform
ÖÖ/ 8
.
ÖÖ8 9%
GetComponentsInChildren
ÖÖ9 P
<
ÖÖP Q
ProBuilderMesh
ÖÖQ _
>
ÖÖ_ `
(
ÖÖ` a
)
ÖÖa b
)
ÖÖb c
EditorUtility
ÜÜ %
.
ÜÜ% &'
SynchronizeWithMeshFilter
ÜÜ& ?
(
ÜÜ? @
child
ÜÜ@ E
)
ÜÜE F
;
ÜÜF G
}
áá 
Undo
ââ 
.
ââ '
RegisterCreatedObjectUndo
ââ .
(
ââ. /
copy
ââ/ 3
.
ââ3 4

gameObject
ââ4 >
,
ââ> ?
$str
ââ@ U
)
ââU V
;
ââV W
copy
ãã 
.
ãã 
DeleteFaces
ãã  
(
ãã  !
inverse
ãã! (
)
ãã( )
;
ãã) *
copy
åå 
.
åå 
Rebuild
åå 
(
åå 
)
åå 
;
åå 
copy
çç 
.
çç 
Optimize
çç 
(
çç 
)
çç 
;
çç  
mesh
éé 
.
éé 
ClearSelection
éé #
(
éé# $
)
éé$ %
;
éé% &
copy
èè 
.
èè 
ClearSelection
èè #
(
èè# $
)
èè$ %
;
èè% &
copy
êê 
.
êê 
SetSelectedFaces
êê %
(
êê% &
copy
êê& *
.
êê* +
faces
êê+ 0
)
êê0 1
;
êê1 2
copy
íí 
.
íí 

gameObject
íí 
.
íí  
name
íí  $
=
íí% &
GameObjectUtility
íí' 8
.
íí8 9%
GetUniqueNameForSibling
íí9 P
(
ííP Q
mesh
ííQ U
.
ííU V
	transform
ííV _
.
íí_ `
parent
íí` f
,
ííf g
mesh
ííh l
.
ííl m

gameObject
íím w
.
ííw x
name
ííx |
)
íí| }
;
íí} ~

duplicated
ìì 
.
ìì 
Add
ìì 
(
ìì 
copy
ìì #
.
ìì# $

gameObject
ìì$ .
)
ìì. /
;
ìì/ 0
}
îî 
MeshSelection
ññ 
.
ññ 
SetSelection
ññ &
(
ññ& '

duplicated
ññ' 1
)
ññ1 2
;
ññ2 3
ProBuilderEditor
óó 
.
óó 
Refresh
óó $
(
óó$ %
)
óó% &
;
óó& '
if
ôô 
(
ôô !
duplicatedFaceCount
ôô #
>
ôô$ %
$num
ôô& '
)
ôô' (
return
öö 
new
öö 
ActionResult
öö '
(
öö' (
ActionResult
öö( 4
.
öö4 5
Status
öö5 ;
.
öö; <
Success
öö< C
,
ööC D
$str
ööE Q
+
ööR S!
duplicatedFaceCount
ööT g
+
ööh i
$strööj Ä
)ööÄ Å
;ööÅ Ç
return
úú 
new
úú 
ActionResult
úú #
(
úú# $
ActionResult
úú$ 0
.
úú0 1
Status
úú1 7
.
úú7 8
Failure
úú8 ?
,
úú? @
$str
úúA T
)
úúT U
;
úúU V
}
ùù 	
}
ûû 
}üü ª.
•D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Selection\SelectSmoothingGroup.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
.		  !
Actions		! (
{

 
sealed 

class  
SelectSmoothingGroup %
:& '

MenuAction( 2
{ 
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
	Selection& /
;/ 0
}1 2
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- W
,W X
IconSkinY a
.a b
Prob e
)e f
;f g
}h i
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str "
," #
$str K
)   
;   
public"" 
override"" 

SelectMode"" "
validSelectModes""# 3
{## 	
get$$ 
{$$ 
return$$ 

SelectMode$$ #
.$$# $
Face$$$ (
|$$) *

SelectMode$$+ 5
.$$5 6
TextureFace$$6 A
;$$A B
}$$C D
}%% 	
public'' 
override'' 
bool'' 
enabled'' $
{(( 	
get)) 
{)) 
return)) 
base)) 
.)) 
enabled)) %
&&))& (
MeshSelection))) 6
.))6 7
selectedFaceCount))7 H
>))I J
$num))K L
;))L M
}))N O
}** 	
public,, 
override,, 
bool,, 
hidden,, #
{-- 	
get.. 
{.. 
return.. 
true.. 
;.. 
}..  
}// 	
	protected11 
override11 
MenuActionState11 *
optionsMenuState11+ ;
{22 	
get33 
{44 
if55 
(55 
enabled55 
&&55 
ProBuilderEditor55 /
.55/ 0

selectMode550 :
==55; =

SelectMode55> H
.55H I
Face55I M
)55M N
return66 
MenuActionState66 *
.66* +
VisibleAndEnabled66+ <
;66< =
return88 
MenuActionState88 &
.88& '
Visible88' .
;88. /
}99 
}:: 	
public<< 
override<< 
ActionResult<< $
DoAction<<% -
(<<- .
)<<. /
{== 	
UndoUtility>> 
.>> 
RecordSelection>> '
(>>' (
$str>>( K
)>>K L
;>>L M
HashSet@@ 
<@@ 
int@@ 
>@@  
selectedSmoothGroups@@ -
=@@. /
new@@0 3
HashSet@@4 ;
<@@; <
int@@< ?
>@@? @
(@@@ A
MeshSelection@@A N
.@@N O
topInternal@@O Z
.@@Z [

SelectMany@@[ e
(@@e f
x@@f g
=>@@h j
x@@k l
.@@l m"
selectedFacesInternal	@@m Ç
.
@@Ç É
Select
@@É â
(
@@â ä
y
@@ä ã
=>
@@å é
y
@@è ê
.
@@ê ë
smoothingGroup
@@ë ü
)
@@ü †
)
@@† °
)
@@° ¢
;
@@¢ £
ListBB 
<BB 

GameObjectBB 
>BB 
newSelectionBB )
=BB* +
newBB, /
ListBB0 4
<BB4 5

GameObjectBB5 ?
>BB? @
(BB@ A
)BBA B
;BBB C
foreachDD 
(DD 
ProBuilderMeshDD #
pbDD$ &
inDD' )
MeshSelectionDD* 7
.DD7 8
topInternalDD8 C
)DDC D
{EE 
IEnumerableFF 
<FF 
FaceFF  
>FF  !
matchesFF" )
=FF* +
pbFF, .
.FF. /
facesInternalFF/ <
.FF< =
WhereFF= B
(FFB C
xFFC D
=>FFE G 
selectedSmoothGroupsFFH \
.FF\ ]
ContainsFF] e
(FFe f
xFFf g
.FFg h
smoothingGroupFFh v
)FFv w
)FFw x
;FFx y
ifHH 
(HH 
matchesHH 
.HH 
CountHH !
(HH! "
)HH" #
>HH$ %
$numHH& '
)HH' (
{II 
newSelectionJJ  
.JJ  !
AddJJ! $
(JJ$ %
pbJJ% '
.JJ' (

gameObjectJJ( 2
)JJ2 3
;JJ3 4
pbKK 
.KK 
SetSelectedFacesKK '
(KK' (
matchesKK( /
)KK/ 0
;KK0 1
}LL 
}MM 
	SelectionOO 
.OO 
objectsOO 
=OO 
newSelectionOO  ,
.OO, -
ToArrayOO- 4
(OO4 5
)OO5 6
;OO6 7
ProBuilderEditorQQ 
.QQ 
RefreshQQ $
(QQ$ %
)QQ% &
;QQ& '
returnSS 
newSS 
ActionResultSS #
(SS# $
ActionResultSS$ 0
.SS0 1
StatusSS1 7
.SS7 8
SuccessSS8 ?
,SS? @
$strSSA d
)SSd e
;SSe f
}TT 	
}UU 
}VV ÿs
ôD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\EditorToolbarLoader.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{		 
static 

class 
EditorToolbarLoader $
{ 
static 
List 
< 

MenuAction 
> 
s_LoadedMenuActions  3
;3 4
public 
static 
T 
GetInstance #
<# $
T$ %
>% &
(& '
)' (
where) .
T/ 0
:1 2

MenuAction3 =
,= >
new? B
(B C
)C D
{ 	
T 
instance 
= 
( 
T 
) 

GetActions &
(& '
)' (
.( )
FirstOrDefault) 7
(7 8
x8 9
=>: <
x= >
is? A
TB C
)C D
;D E
if 
( 
instance 
== 
null  
)  !
{ 
instance 
= 
new 
T  
(  !
)! "
;" #
if 
( 
s_LoadedMenuActions '
!=( *
null+ /
)/ 0
s_LoadedMenuActions '
.' (
Add( +
(+ ,
instance, 4
)4 5
;5 6
else 
s_LoadedMenuActions '
=( )
new* -
List. 2
<2 3

MenuAction3 =
>= >
(> ?
)? @
{A B
instanceC K
}L M
;M N
} 
return 
instance 
; 
} 	
internal!! 
static!! 
List!! 
<!! 

MenuAction!! '
>!!' (

GetActions!!) 3
(!!3 4
bool!!4 8
forceReload!!9 D
=!!E F
false!!G L
)!!L M
{"" 	
if## 
(## 
s_LoadedMenuActions## #
!=##$ &
null##' +
&&##, .
!##/ 0
forceReload##0 ;
)##; <
return$$ 
s_LoadedMenuActions$$ *
;$$* +
s_LoadedMenuActions&& 
=&&  !
new&&" %
List&&& *
<&&* +

MenuAction&&+ 5
>&&5 6
(&&6 7
)&&7 8
{'' 
new)) 
Actions)) 
.)) 
OpenShapeEditor)) +
())+ ,
))), -
,))- .
new** 
Actions** 
.** 
NewBezierShape** *
(*** +
)**+ ,
,**, -
new++ 
Actions++ 
.++ 
NewPolyShape++ (
(++( )
)++) *
,++* +
new,, 
Actions,, 
.,, 
OpenMaterialEditor,, .
(,,. /
),,/ 0
,,,0 1
new-- 
Actions-- 
.-- 
OpenUVEditor-- (
(--( )
)--) *
,--* +
new.. 
Actions.. 
... !
OpenVertexColorEditor.. 1
(..1 2
)..2 3
,..3 4
new// 
Actions// 
.// 
OpenSmoothingEditor// /
(/// 0
)//0 1
,//1 2
new11 
Actions11 
.11 !
ToggleSelectBackFaces11 1
(111 2
)112 3
,113 4
new22 
Actions22 
.22 #
ToggleHandleOrientation22 3
(223 4
)224 5
,225 6
new33 
Actions33 
.33 #
ToggleDragSelectionMode33 3
(333 4
)334 5
,335 6
new44 
Actions44 
.44 
ToggleDragRectMode44 .
(44. /
)44/ 0
,440 1
new77 
Actions77 
.77 
GrowSelection77 )
(77) *
)77* +
,77+ ,
new88 
Actions88 
.88 
ShrinkSelection88 +
(88+ ,
)88, -
,88- .
new99 
Actions99 
.99 
SelectEdgeLoop99 *
(99* +
)99+ ,
,99, -
new:: 
Actions:: 
.:: 
SelectEdgeRing:: *
(::* +
)::+ ,
,::, -
new;; 
Actions;; 
.;; 
SelectFaceLoop;; *
(;;* +
);;+ ,
,;;, -
new<< 
Actions<< 
.<< 
SelectFaceRing<< *
(<<* +
)<<+ ,
,<<, -
new== 
Actions== 
.== 

SelectHole== &
(==& '
)==' (
,==( )
new>> 
Actions>> 
.>> 
SelectVertexColor>> -
(>>- .
)>>. /
,>>/ 0
new?? 
Actions?? 
.?? 
SelectMaterial?? *
(??* +
)??+ ,
,??, -
new@@ 
Actions@@ 
.@@  
SelectSmoothingGroup@@ 0
(@@0 1
)@@1 2
,@@2 3
newCC 
ActionsCC 
.CC 
MergeObjectsCC (
(CC( )
)CC) *
,CC* +
newDD 
ActionsDD 
.DD 
MirrorObjectsDD )
(DD) *
)DD* +
,DD+ ,
newEE 
ActionsEE 
.EE 
FlipObjectNormalsEE -
(EE- .
)EE. /
,EE/ 0
newFF 
ActionsFF 
.FF 
SubdivideObjectFF +
(FF+ ,
)FF, -
,FF- .
newGG 
ActionsGG 
.GG 
FreezeTransformGG +
(GG+ ,
)GG, -
,GG- .
newHH 
ActionsHH 
.HH 
CenterPivotHH '
(HH' (
)HH( )
,HH) *
newII 
ActionsII 
.II  
ConformObjectNormalsII 0
(II0 1
)II1 2
,II2 3
newJJ 
ActionsJJ 
.JJ 
TriangulateObjectJJ -
(JJ- .
)JJ. /
,JJ/ 0
newKK 
ActionsKK 
.KK 
GenerateUV2KK '
(KK' (
)KK( )
,KK) *
newLL 
ActionsLL 
.LL 
ProBuilderizeLL )
(LL) *
)LL* +
,LL+ ,
newMM 
ActionsMM 
.MM 
ExportMM "
(MM" #
)MM# $
,MM$ %
newOO 
ActionsOO 
.OO 
	ExportObjOO %
(OO% &
)OO& '
,OO' (
newPP 
ActionsPP 
.PP 
ExportAssetPP '
(PP' (
)PP( )
,PP) *
newQQ 
ActionsQQ 
.QQ 
	ExportPlyQQ %
(QQ% &
)QQ& '
,QQ' (
newRR 
ActionsRR 
.RR 
ExportStlAsciiRR *
(RR* +
)RR+ ,
,RR, -
newSS 
ActionsSS 
.SS 
ExportStlBinarySS +
(SS+ ,
)SS, -
,SS- .
newVV 
ActionsVV 
.VV 
SetPivotToSelectionVV /
(VV/ 0
)VV0 1
,VV1 2
newWW 
ActionsWW 
.WW 
OffsetElementsWW *
(WW* +
)WW+ ,
,WW, -
newZZ 
ActionsZZ 
.ZZ 
DeleteFacesZZ '
(ZZ' (
)ZZ( )
,ZZ) *
new[[ 
Actions[[ 
.[[ 
DetachFaces[[ '
([[' (
)[[( )
,[[) *
new\\ 
Actions\\ 
.\\ 
DuplicateFaces\\ *
(\\* +
)\\+ ,
,\\, -
new]] 
Actions]] 
.]] 
ExtrudeFaces]] (
(]]( )
)]]) *
,]]* +
new`` 
Actions`` 
.`` 
ConformFaceNormals`` .
(``. /
)``/ 0
,``0 1
newaa 
Actionsaa 
.aa 
FlipFaceEdgeaa (
(aa( )
)aa) *
,aa* +
newbb 
Actionsbb 
.bb 
FlipFaceNormalsbb +
(bb+ ,
)bb, -
,bb- .
newcc 
Actionscc 
.cc 

MergeFacescc &
(cc& '
)cc' (
,cc( )
newdd 
Actionsdd 
.dd 
SubdivideFacesdd *
(dd* +
)dd+ ,
,dd, -
newee 
Actionsee 
.ee 
TriangulateFacesee ,
(ee, -
)ee- .
,ee. /
newhh 
Actionshh 
.hh 
BridgeEdgeshh '
(hh' (
)hh( )
,hh) *
newii 
Actionsii 
.ii 

BevelEdgesii &
(ii& '
)ii' (
,ii( )
newjj 
Actionsjj 
.jj 
ConnectEdgesjj (
(jj( )
)jj) *
,jj* +
newkk 
Actionskk 
.kk 
ExtrudeEdgeskk (
(kk( )
)kk) *
,kk* +
newll 
Actionsll 
.ll 
InsertEdgeLoopll *
(ll* +
)ll+ ,
,ll, -
newmm 
Actionsmm 
.mm 
SubdivideEdgesmm *
(mm* +
)mm+ ,
,mm, -
newpp 
Actionspp 
.pp 
CollapseVerticespp ,
(pp, -
)pp- .
,pp. /
newqq 
Actionsqq 
.qq 
WeldVerticesqq (
(qq( )
)qq) *
,qq* +
newrr 
Actionsrr 
.rr 
ConnectVerticesrr +
(rr+ ,
)rr, -
,rr- .
newss 
Actionsss 
.ss 
FillHoless $
(ss$ %
)ss% &
,ss& '
newuu 
Actionsuu 
.uu 
SplitVerticesuu )
(uu) *
)uu* +
,uu+ ,
new~~ 
Actions~~ 
.~~ 

SetTrigger~~ &
(~~& '
)~~' (
,~~( )
new 
Actions 
. 
SetCollider '
(' (
)( )
,) *
}
ÄÄ 
;
ÄÄ %
SearchForMenuAttributes
ÇÇ #
(
ÇÇ# $!
s_LoadedMenuActions
ÇÇ$ 7
)
ÇÇ7 8
;
ÇÇ8 9!
s_LoadedMenuActions
ÑÑ 
.
ÑÑ  
Sort
ÑÑ  $
(
ÑÑ$ %

MenuAction
ÑÑ% /
.
ÑÑ/ 0.
 CompareActionsByGroupAndPriority
ÑÑ0 P
)
ÑÑP Q
;
ÑÑQ R
return
ÜÜ !
s_LoadedMenuActions
ÜÜ &
;
ÜÜ& '
}
áá 	
static
ââ 
void
ââ %
SearchForMenuAttributes
ââ +
(
ââ+ ,
List
ââ, 0
<
ââ0 1

MenuAction
ââ1 ;
>
ââ; <
list
ââ= A
)
ââA B
{
ää 	
foreach
ãã 
(
ãã 
var
ãã 
assembly
ãã !
in
ãã" $
	AppDomain
ãã% .
.
ãã. /
CurrentDomain
ãã/ <
.
ãã< =
GetAssemblies
ãã= J
(
ããJ K
)
ããK L
)
ããL M
{
åå 
try
çç 
{
éé 
var
èè 
menuActionTypes
èè '
=
èè( )
assembly
èè* 2
.
èè2 3
GetTypes
èè3 ;
(
èè; <
)
èè< =
.
èè= >
Where
èè> C
(
èèC D
x
èèD E
=>
èèF H
{
êê 
if
ëë 
(
ëë  
!
ëë  !
typeof
ëë! '
(
ëë' (

MenuAction
ëë( 2
)
ëë2 3
.
ëë3 4
IsAssignableFrom
ëë4 D
(
ëëD E
x
ëëE F
)
ëëF G
||
íí  "
x
íí# $
.
íí$ %

IsAbstract
íí% /
||
ìì  "
!
ìì# $
	Attribute
ìì$ -
.
ìì- .
	IsDefined
ìì. 7
(
ìì7 8
x
ìì8 9
,
ìì9 :
typeof
ìì; A
(
ììA B+
ProBuilderMenuActionAttribute
ììB _
)
ìì_ `
)
ìì` a
)
ììa b
return
îî  &
false
îî' ,
;
îî, -
var
ññ 
constructors
ññ  ,
=
ññ- .
x
ññ/ 0
.
ññ0 1
GetConstructors
ññ1 @
(
ññ@ A
BindingFlags
ññA M
.
ññM N
Instance
ññN V
|
ññW X
BindingFlags
ññY e
.
ññe f
	NonPublic
ññf o
|
ññp q
BindingFlags
ññr ~
.
ññ~ 
Publicññ Ö
)ññÖ Ü
;ññÜ á
if
òò 
(
òò  
!
òò  !
constructors
òò! -
.
òò- .
Any
òò. 1
(
òò1 2
y
òò2 3
=>
òò4 6
y
òò7 8
.
òò8 9
GetParameters
òò9 F
(
òòF G
)
òòG H
.
òòH I
Length
òòI O
<
òòP Q
$num
òòR S
)
òòS T
)
òòT U
{
ôô 
Log
öö  #
.
öö# $
Error
öö$ )
(
öö) *
$ströö* ∞
,öö∞ ±
xöö≤ ≥
.öö≥ ¥
ToStringöö¥ º
(ööº Ω
)ööΩ æ
)ööæ ø
;ööø ¿
return
õõ  &
false
õõ' ,
;
õõ, -
}
úú 
if
ûû 
(
ûû  
constructors
ûû  ,
.
ûû, -
Any
ûû- 0
(
ûû0 1
z
ûû1 2
=>
ûû3 5
z
ûû6 7
.
ûû7 8
GetParameters
ûû8 E
(
ûûE F
)
ûûF G
.
ûûG H
Length
ûûH N
>
ûûO P
$num
ûûQ R
)
ûûR S
)
ûûS T
Log
üü  #
.
üü# $
Warning
üü$ +
(
üü+ ,
$strüü, Æ
,üüÆ Ø
xüü∞ ±
.üü± ≤
ToStringüü≤ ∫
(üü∫ ª
)üüª º
)üüº Ω
;üüΩ æ
return
°° "
true
°°# '
;
°°' (
}
¢¢ 
)
¢¢ 
;
¢¢ 
list
§§ 
.
§§ 
AddRange
§§ !
(
§§! "
menuActionTypes
§§" 1
.
§§1 2
Select
§§2 8
(
§§8 9
x
§§9 :
=>
§§; =
(
§§> ?

MenuAction
§§? I
)
§§I J
	Activator
§§J S
.
§§S T
CreateInstance
§§T b
(
§§b c
x
§§c d
)
§§d e
)
§§e f
)
§§f g
;
§§g h
}
•• 
catch
¶¶ 
{
ßß 
}
©© 
}
™™ 
}
´´ 	
}
¨¨ 
}≠≠ œ¸
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\EditorSceneViewPicker.cs
	namespace

 	
UnityEditor


 
.

 

ProBuilder

  
{ 
struct 
"
ScenePickerPreferences !
{ 
public 
const 
float 
maxPointerDistance -
=. /
$num0 3
;3 4
public 
const 
float  
offPointerMultiplier /
=0 1
$num2 6
;6 7
public 
CullingMode 
cullMode #
;# $
public %
SelectionModifierBehavior (%
selectionModifierBehavior) B
;B C
public 
RectSelectMode 
rectSelectMode ,
;, -
} 
static 

class !
EditorSceneViewPicker &
{ 
static 
int #
s_DeepSelectionPrevious *
=+ ,
$num- 0
;0 1
static 
bool )
s_AppendModifierPreviousState 1
=2 3
false4 9
;9 :
static 
SceneSelection 
s_Selection )
=* +
new, /
SceneSelection0 >
(> ?
)? @
;@ A
static 
List 
< 
VertexPickerEntry %
>% &
s_NearestVertices' 8
=9 :
new; >
List? C
<C D
VertexPickerEntryD U
>U V
(V W
)W X
;X Y
static 
List 
< 

GameObject 
> $
s_OverlappingGameObjects  8
=9 :
new; >
List? C
<C D

GameObjectD N
>N O
(O P
)P Q
;Q R
static 
readonly 
List 
< 
int  
>  !
s_IndexBuffer" /
=0 1
new2 5
List6 :
<: ;
int; >
>> ?
(? @
$num@ B
)B C
;C D
static 
List 
< 
Edge 
> 
s_EdgeBuffer &
=' (
new) ,
List- 1
<1 2
Edge2 6
>6 7
(7 8
$num8 :
): ;
;; <
const!! 
bool!! 
k_AllowUnselected!! $
=!!% &
true!!' +
;!!+ ,
public## 
static## 
void## 
DoMouseHover## '
(##' (
SceneSelection##( 6
	selection##7 @
)##@ A
{$$ 	
if%% 
(%% 
	selection%% 
.%% 
faces%% 
.%%  
Count%%  %
==%%& (
$num%%) *
)%%* +
return&& 
;&& 
var'' 
mesh'' 
='' 
	selection''  
.''  !
mesh''! %
;''% &
var(( 
face(( 
=(( 
	selection((  
.((  !
faces((! &
[((& '
$num((' (
]((( )
;(() *
var)) 

activeFace)) 
=)) 
mesh)) !
.))! "
GetActiveFace))" /
())/ 0
)))0 1
;))1 2
if** 
(** 

activeFace** 
==** 
null** "
||**# %

activeFace**& 0
==**1 3
face**4 8
)**8 9
return++ 
;++ 
var-- 
faces-- 
=-- 
mesh-- 
.-- 
facesInternal-- *
;--* +
var.. 
	pathFaces.. 
=.. 
SelectPathFaces.. +
...+ ,
GetPath.., 3
(..3 4
mesh..4 8
,..8 9
Array..: ?
...? @
IndexOf..@ G
<..G H
Face..H L
>..L M
(..M N
faces..N S
,..S T

activeFace..U _
).._ `
,..` a
Array..b g
...g h
IndexOf..h o
<..o p
Face..p t
>..t u
(..u v
faces..v {
,..{ |
face	..} Å
)
..Å Ç
)
..Ç É
;
..É Ñ
if00 
(00 
	pathFaces00 
!=00 
null00 !
)00! "
{11 
foreach22 
(22 
var22 
path22 !
in22" $
	pathFaces22% .
)22. /
	selection33 
.33 
faces33 #
.33# $
Add33$ '
(33' (
faces33( -
[33- .
path33. 2
]332 3
)333 4
;334 5
}44 
}55 	
public77 
static77 
ProBuilderMesh77 $
DoMouseClick77% 1
(771 2
Event772 7
evt778 ;
,77; <

SelectMode77= G
selectionMode77H U
,77U V"
ScenePickerPreferences77W m
pickerPreferences77n 
)	77 Ä
{88 	
bool99 
appendModifier99 
=99  !
EditorHandleUtility99" 5
.995 6
IsAppendModifier996 F
(99F G
evt99G J
.99J K
	modifiers99K T
)99T U
;99U V
bool:: "
addToSelectionModifier:: '
=::( )
EditorHandleUtility::* =
.::= >"
IsSelectionAddModifier::> T
(::T U
evt::U X
.::X Y
	modifiers::Y b
)::b c
;::c d
bool;; 5
)addOrRemoveIfPresentFromSelectionModifier;; :
=;;; <
EditorHandleUtility;;= P
.;;P Q6
*IsSelectionAppendOrRemoveIfPresentModifier;;Q {
(;;{ |
evt;;| 
.	;; Ä
	modifiers
;;Ä â
)
;;â ä
;
;;ä ã
bool<< !
pathSelectionModifier<< &
=<<' (
EditorHandleUtility<<) <
.<<< =#
IsSelectionPathModifier<<= T
(<<T U
evt<<U X
.<<X Y
	modifiers<<Y b
)<<b c
;<<c d
float>> !
pickedElementDistance>> '
;>>' (
if@@ 
(@@ 
selectionMode@@ 
.@@ 
ContainsFlag@@ *
(@@* +

SelectMode@@+ 5
.@@5 6
Edge@@6 :
|@@; <

SelectMode@@= G
.@@G H
TextureEdge@@H S
)@@S T
)@@T U!
pickedElementDistanceAA %
=AA& '
EdgeRaycastAA( 3
(AA3 4
evtAA4 7
.AA7 8
mousePositionAA8 E
,AAE F
pickerPreferencesAAG X
,AAX Y
k_AllowUnselectedAAZ k
,AAk l
s_SelectionAAm x
)AAx y
;AAy z
elseBB 
ifBB 
(BB 
selectionModeBB "
.BB" #
ContainsFlagBB# /
(BB/ 0

SelectModeBB0 :
.BB: ;
VertexBB; A
|BBB C

SelectModeBBD N
.BBN O
TextureVertexBBO \
)BB\ ]
)BB] ^!
pickedElementDistanceCC %
=CC& '
VertexRaycastCC( 5
(CC5 6
evtCC6 9
.CC9 :
mousePositionCC: G
,CCG H
pickerPreferencesCCI Z
,CCZ [
k_AllowUnselectedCC\ m
,CCm n
s_SelectionCCo z
)CCz {
;CC{ |
elseDD !
pickedElementDistanceEE %
=EE& '
FaceRaycastEE( 3
(EE3 4
evtEE4 7
.EE7 8
mousePositionEE8 E
,EEE F
pickerPreferencesEEG X
,EEX Y
k_AllowUnselectedEEZ k
,EEk l
s_SelectionEEm x
,EEx y
evtEEz }
.EE} ~

clickCount	EE~ à
>
EEâ ä
$num
EEã å
?
EEç é
-
EEè ê
$num
EEê ë
:
EEí ì
$num
EEî ï
,
EEï ñ
false
EEó ú
)
EEú ù
;
EEù û
evtGG 
.GG 
UseGG 
(GG 
)GG 
;GG 
ifII 
(II 
!II 
appendModifierII 
)II  
{JJ 
ifKK 
(KK 
s_SelectionKK 
.KK 
meshKK #
!=KK$ &
nullKK' +
)KK+ ,
s_SelectionLL 
.LL  
meshLL  $
.LL$ %
ClearSelectionLL% 3
(LL3 4
)LL4 5
;LL5 6
MeshSelectionMM 
.MM 
SetSelectionMM *
(MM* +
(MM+ ,

GameObjectMM, 6
)MM6 7
nullMM7 ;
)MM; <
;MM< =
}NN 
ifPP 
(PP !
pickedElementDistancePP %
>PP& '"
ScenePickerPreferencesPP( >
.PP> ?
maxPointerDistancePP? Q
)PPQ R
{QQ 
ifRR 
(RR 
appendModifierRR "
&&RR# %
	SelectionRR& /
.RR/ 0
gameObjectsRR0 ;
.RR; <
ContainsRR< D
(RRD E
s_SelectionRRE P
.RRP Q

gameObjectRRQ [
)RR[ \
)RR\ ]
MeshSelectionSS !
.SS! "
RemoveFromSelectionSS" 5
(SS5 6
s_SelectionSS6 A
.SSA B

gameObjectSSB L
)SSL M
;SSM N
elseTT 
MeshSelectionUU !
.UU! "
AddToSelectionUU" 0
(UU0 1
s_SelectionUU1 <
.UU< =

gameObjectUU= G
)UUG H
;UUH I
returnWW 
nullWW 
;WW 
}XX 

GameObjectZZ $
candidateNewActiveObjectZZ /
=ZZ0 1
s_SelectionZZ2 =
.ZZ= >

gameObjectZZ> H
;ZZH I
bool[[ (
activeObjectSelectionChanged[[ -
=[[. /
	Selection[[0 9
.[[9 :
gameObjects[[: E
.[[E F
Contains[[F N
([[N O
s_Selection[[O Z
.[[Z [

gameObject[[[ e
)[[e f
&&[[g i
s_Selection[[j u
.[[u v

gameObject	[[v Ä
!=
[[Å É
	Selection
[[Ñ ç
.
[[ç é
activeGameObject
[[é û
;
[[û ü
if]] 
(]] 
s_Selection]] 
.]] 
mesh]]  
!=]]! #
null]]$ (
)]]( )
{^^ 
var__ 
mesh__ 
=__ 
s_Selection__ &
.__& '
mesh__' +
;__+ ,
foreachaa 
(aa 
varaa 
faceaa !
inaa" $
s_Selectionaa% 0
.aa0 1
facesaa1 6
)aa6 7
{bb 
MaterialEditordd "
	matEditordd# ,
=dd- .
MaterialEditordd/ =
.dd= >
instancedd> F
;ddF G
ifff 
(ff 
	matEditorff !
!=ff" $
nullff% )
&&ff* ,
	matEditorff- 6
.ff6 7
ClickShortcutCheckff7 I
(ffI J
EventffJ O
.ffO P
currentffP W
.ffW X
	modifiersffX a
,ffa b
meshffc g
,ffg h
faceffi m
)ffm n
)ffn o
returngg 
nullgg #
;gg# $
UVEditorii 
uvEditorii %
=ii& '
UVEditorii( 0
.ii0 1
instanceii1 9
;ii9 :
ifkk 
(kk 
uvEditorkk  
!=kk! #
nullkk$ (
&&kk) +
uvEditorkk, 4
.kk4 5
ClickShortcutCheckkk5 G
(kkG H
meshkkH L
,kkL M
facekkN R
)kkR S
)kkS T
returnll 
nullll #
;ll# $
varnn 
facesnn 
=nn 
meshnn  $
.nn$ %
facesnn% *
asnn+ -
Facenn. 2
[nn2 3
]nn3 4
??nn5 7
meshnn8 <
.nn< =
facesnn= B
.nnB C
ToArraynnC J
(nnJ K
)nnK L
;nnL M
varoo 
indoo 
=oo 
Arrayoo #
.oo# $
IndexOfoo$ +
<oo+ ,
Faceoo, 0
>oo0 1
(oo1 2
facesoo2 7
,oo7 8
faceoo9 =
)oo= >
;oo> ?
varpp 
selpp 
=pp 
meshpp "
.pp" #
selectedFaceIndexespp# 6
.pp6 7
IndexOfpp7 >
(pp> ?
indpp? B
)ppB C
;ppC D
UndoUtilityrr 
.rr  
RecordSelectionrr  /
(rr/ 0
meshrr0 4
,rr4 5
$strrr6 C
)rrC D
;rrD E
iftt 
(tt 
seltt 
>tt 
-tt 
$numtt  
)tt  !
{uu 
ifvv 
(vv 
!vv 
appendModifiervv +
||vv, .5
)addOrRemoveIfPresentFromSelectionModifiervv/ X
||vvY [
(ww "
addToSelectionModifierww 3
&&ww4 6
faceww7 ;
==ww< >
meshww? C
.wwC D
GetActiveFacewwD Q
(wwQ R
)wwR S
&&wwT V
!wwW X(
activeObjectSelectionChangedwwX t
)wwt u
)wwu v
{xx 
meshyy  
.yy  !*
RemoveFromFaceSelectionAtIndexyy! ?
(yy? @
selyy@ C
)yyC D
;yyD E
if{{ 
({{  5
)addOrRemoveIfPresentFromSelectionModifier{{  I
&&{{J L(
activeObjectSelectionChanged{{M i
){{i j
{|| $
candidateNewActiveObject}}  8
=}}9 :
	Selection}}; D
.}}D E
activeGameObject}}E U
;}}U V
}~~ 
else  
if! #
($ %
mesh% )
.) *
selectedFaceCount* ;
==< >
$num? @
)@ A
{
ÄÄ 
for
ÅÅ  #
(
ÅÅ$ %
var
ÅÅ% (
i
ÅÅ) *
=
ÅÅ+ ,
MeshSelection
ÅÅ- :
.
ÅÅ: ;
topInternal
ÅÅ; F
.
ÅÅF G
Count
ÅÅG L
-
ÅÅM N
$num
ÅÅO P
;
ÅÅP Q
i
ÅÅR S
>=
ÅÅT V
$num
ÅÅW X
;
ÅÅX Y
i
ÅÅZ [
--
ÅÅ[ ]
)
ÅÅ] ^
{
ÇÇ  !
if
ÉÉ$ &
(
ÉÉ' (
MeshSelection
ÉÉ( 5
.
ÉÉ5 6
topInternal
ÉÉ6 A
[
ÉÉA B
i
ÉÉB C
]
ÉÉC D
.
ÉÉD E
selectedFaceCount
ÉÉE V
>
ÉÉW X
$num
ÉÉY Z
)
ÉÉZ [
{
ÑÑ$ %&
candidateNewActiveObject
ÖÖ( @
=
ÖÖA B
MeshSelection
ÖÖC P
.
ÖÖP Q
topInternal
ÖÖQ \
[
ÖÖ\ ]
i
ÖÖ] ^
]
ÖÖ^ _
.
ÖÖ_ `

gameObject
ÖÖ` j
;
ÖÖj k*
activeObjectSelectionChanged
ÜÜ( D
=
ÜÜE F
true
ÜÜG K
;
ÜÜK L
break
áá( -
;
áá- .
}
àà$ %
}
ââ  !
}
ää 
}
ãã 
else
åå 
{
çç 
mesh
éé  
.
éé  !)
selectedFaceIndicesInternal
éé! <
=
éé= >
mesh
éé? C
.
ééC D)
selectedFaceIndicesInternal
ééD _
.
éé_ `
Remove
éé` f
(
ééf g
ind
éég j
)
ééj k
;
éék l
mesh
èè  
.
èè  !
SetSelectedFaces
èè! 1
(
èè1 2
mesh
èè2 6
.
èè6 7)
selectedFaceIndicesInternal
èè7 R
.
èèR S
Add
èèS V
(
èèV W
ind
èèW Z
)
èèZ [
)
èè[ \
;
èè\ ]
}
êê 
}
ëë 
else
íí 
if
íí 
(
íí #
pathSelectionModifier
íí 2
&&
íí3 5
mesh
íí6 :
.
íí: ;
GetActiveFace
íí; H
(
ííH I
)
ííI J
!=
ííK M
null
ííN R
)
ííR S
{
ìì 
var
îî 
	pathFaces
îî %
=
îî& '
SelectPathFaces
îî( 7
.
îî7 8
GetPath
îî8 ?
(
îî? @
mesh
îî@ D
,
îîD E
Array
îîF K
.
îîK L
IndexOf
îîL S
<
îîS T
Face
îîT X
>
îîX Y
(
îîY Z
faces
îîZ _
,
îî_ `
mesh
îîa e
.
îîe f
GetActiveFace
îîf s
(
îîs t
)
îît u
)
îîu v
,
îîv w
Array
ïï !
.
ïï! "
IndexOf
ïï" )
<
ïï) *
Face
ïï* .
>
ïï. /
(
ïï/ 0
faces
ïï0 5
,
ïï5 6
face
ïï7 ;
)
ïï; <
)
ïï< =
;
ïï= >
foreach
ññ 
(
ññ  !
var
ññ! $
pathFace
ññ% -
in
ññ. 0
	pathFaces
ññ1 :
)
ññ: ;
{
óó 
mesh
òò  
.
òò  ! 
AddToFaceSelection
òò! 3
(
òò3 4
pathFace
òò4 <
)
òò< =
;
òò= >
}
ôô 
}
öö 
else
õõ 
mesh
úú 
.
úú  
AddToFaceSelection
úú /
(
úú/ 0
ind
úú0 3
)
úú3 4
;
úú4 5
}
ùù 
foreach
üü 
(
üü 
var
üü 
edge
üü  
in
üü! #
s_Selection
üü$ /
.
üü/ 0
edges
üü0 5
)
üü5 6
{
†† 
int
°° 
ind
°° 
=
°° 
mesh
°° "
.
°°" #
IndexOf
°°# *
(
°°* +
mesh
°°+ /
.
°°/ 0
selectedEdges
°°0 =
,
°°= >
edge
°°? C
)
°°C D
;
°°D E
UndoUtility
££ 
.
££  
RecordSelection
££  /
(
££/ 0
mesh
££0 4
,
££4 5
$str
££6 C
)
££C D
;
££D E
if
•• 
(
•• 
ind
•• 
>
•• 
-
•• 
$num
••  
)
••  !
{
¶¶ 
if
ßß 
(
ßß 
!
ßß 
appendModifier
ßß +
||
ßß, .7
)addOrRemoveIfPresentFromSelectionModifier
ßß/ X
||
ßßY [
(
®® $
addToSelectionModifier
®® 3
&&
®®4 6
edge
®®7 ;
==
®®< >
mesh
®®? C
.
®®C D
GetActiveEdge
®®D Q
(
®®Q R
)
®®R S
&&
®®T V
!
®®W X*
activeObjectSelectionChanged
®®X t
)
®®t u
)
®®u v
{
©© 
mesh
™™  
.
™™  !
SetSelectedEdges
™™! 1
(
™™1 2
mesh
™™2 6
.
™™6 7
selectedEdges
™™7 D
.
™™D E
ToArray
™™E L
(
™™L M
)
™™M N
.
™™N O
RemoveAt
™™O W
(
™™W X
ind
™™X [
)
™™[ \
)
™™\ ]
;
™™] ^
if
¨¨ 
(
¨¨  7
)addOrRemoveIfPresentFromSelectionModifier
¨¨  I
&&
¨¨J L*
activeObjectSelectionChanged
¨¨M i
)
¨¨i j
{
≠≠ &
candidateNewActiveObject
ÆÆ  8
=
ÆÆ9 :
	Selection
ÆÆ; D
.
ÆÆD E
activeGameObject
ÆÆE U
;
ÆÆU V
}
ØØ 
else
∞∞  
if
∞∞! #
(
∞∞$ %
mesh
∞∞% )
.
∞∞) *
selectedEdgeCount
∞∞* ;
==
∞∞< >
$num
∞∞? @
)
∞∞@ A
{
±± 
for
≤≤  #
(
≤≤$ %
var
≤≤% (
i
≤≤) *
=
≤≤+ ,
MeshSelection
≤≤- :
.
≤≤: ;
topInternal
≤≤; F
.
≤≤F G
Count
≤≤G L
-
≤≤M N
$num
≤≤O P
;
≤≤P Q
i
≤≤R S
>=
≤≤T V
$num
≤≤W X
;
≤≤X Y
i
≤≤Z [
--
≤≤[ ]
)
≤≤] ^
{
≥≥  !
if
¥¥$ &
(
¥¥' (
MeshSelection
¥¥( 5
.
¥¥5 6
topInternal
¥¥6 A
[
¥¥A B
i
¥¥B C
]
¥¥C D
.
¥¥D E
selectedEdgeCount
¥¥E V
>
¥¥W X
$num
¥¥Y Z
)
¥¥Z [
{
µµ$ %&
candidateNewActiveObject
∂∂( @
=
∂∂A B
MeshSelection
∂∂C P
.
∂∂P Q
topInternal
∂∂Q \
[
∂∂\ ]
i
∂∂] ^
]
∂∂^ _
.
∂∂_ `

gameObject
∂∂` j
;
∂∂j k*
activeObjectSelectionChanged
∑∑( D
=
∑∑E F
true
∑∑G K
;
∑∑K L
break
∏∏( -
;
∏∏- .
}
ππ$ %
}
∫∫  !
}
ªª 
}
ºº 
else
ΩΩ 
{
ææ 
mesh
øø  
.
øø  !#
selectedEdgesInternal
øø! 6
=
øø7 8
mesh
øø9 =
.
øø= >#
selectedEdgesInternal
øø> S
.
øøS T
Remove
øøT Z
(
øøZ [
edge
øø[ _
)
øø_ `
;
øø` a
mesh
¿¿  
.
¿¿  !
SetSelectedEdges
¿¿! 1
(
¿¿1 2
mesh
¿¿2 6
.
¿¿6 7#
selectedEdgesInternal
¿¿7 L
.
¿¿L M
Add
¿¿M P
(
¿¿P Q
edge
¿¿Q U
)
¿¿U V
)
¿¿V W
;
¿¿W X
}
¡¡ 
}
¬¬ 
else
√√ 
mesh
ƒƒ 
.
ƒƒ 
SetSelectedEdges
ƒƒ -
(
ƒƒ- .
mesh
ƒƒ. 2
.
ƒƒ2 3
selectedEdges
ƒƒ3 @
.
ƒƒ@ A
ToArray
ƒƒA H
(
ƒƒH I
)
ƒƒI J
.
ƒƒJ K
Add
ƒƒK N
(
ƒƒN O
edge
ƒƒO S
)
ƒƒS T
)
ƒƒT U
;
ƒƒU V
}
≈≈ 
foreach
∆∆ 
(
∆∆ 
var
∆∆ 
vertex
∆∆ "
in
∆∆# %
s_Selection
∆∆& 1
.
∆∆1 2
vertexes
∆∆2 :
)
∆∆: ;
{
«« 
int
»» 
ind
»» 
=
»» 
Array
»» #
.
»»# $
IndexOf
»»$ +
(
»»+ ,
mesh
»», 0
.
»»0 1%
selectedIndexesInternal
»»1 H
,
»»H I
vertex
»»J P
)
»»P Q
;
»»Q R
UndoUtility
   
.
    
RecordSelection
    /
(
  / 0
mesh
  0 4
,
  4 5
$str
  6 E
)
  E F
;
  F G
if
ÃÃ 
(
ÃÃ 
ind
ÃÃ 
>
ÃÃ 
-
ÃÃ 
$num
ÃÃ  
)
ÃÃ  !
{
ÕÕ 
var
ŒŒ 
sharedIndex
ŒŒ '
=
ŒŒ( )
mesh
ŒŒ* .
.
ŒŒ. / 
sharedVertexLookup
ŒŒ/ A
[
ŒŒA B
vertex
ŒŒB H
]
ŒŒH I
;
ŒŒI J
var
œœ 
sharedVertex
œœ (
=
œœ) *
mesh
œœ+ /
.
œœ/ 0$
sharedVerticesInternal
œœ0 F
[
œœF G
sharedIndex
œœG R
]
œœR S
;
œœS T
s_IndexBuffer
–– %
.
––% &
Clear
––& +
(
––+ ,
)
––, -
;
––- .
foreach
—— 
(
——  !
var
——! $
sVertex
——% ,
in
——- /
sharedVertex
——0 <
)
——< =
{
““ 
var
”” 
index
””  %
=
””& '
Array
””( -
.
””- .
IndexOf
””. 5
(
””5 6
mesh
””6 :
.
””: ;%
selectedIndexesInternal
””; R
,
””R S
sVertex
””T [
)
””[ \
;
””\ ]
if
‘‘ 
(
‘‘  
index
‘‘  %
<
‘‘& '
$num
‘‘( )
)
‘‘) *
continue
’’  (
;
’’( )
s_IndexBuffer
◊◊ )
.
◊◊) *
Add
◊◊* -
(
◊◊- .
index
◊◊. 3
)
◊◊3 4
;
◊◊4 5
}
ÿÿ 
s_IndexBuffer
ŸŸ %
.
ŸŸ% &
Sort
ŸŸ& *
(
ŸŸ* +
)
ŸŸ+ ,
;
ŸŸ, -
if
€€ 
(
€€ 
!
€€ 
appendModifier
€€ +
||
€€, .7
)addOrRemoveIfPresentFromSelectionModifier
€€/ X
||
€€Y [
(
‹‹ $
addToSelectionModifier
‹‹ 2
&&
‹‹3 5
vertex
‹‹6 <
==
‹‹= ?
mesh
‹‹@ D
.
‹‹D E
GetActiveVertex
‹‹E T
(
‹‹T U
)
‹‹U V
&&
‹‹W Y
!
‹‹Z [*
activeObjectSelectionChanged
‹‹[ w
)
‹‹w x
)
‹‹x y
{
›› 
mesh
ﬁﬁ  
.
ﬁﬁ  !%
selectedIndexesInternal
ﬁﬁ! 8
=
ﬁﬁ9 :
mesh
ﬁﬁ; ?
.
ﬁﬁ? @%
selectedIndexesInternal
ﬁﬁ@ W
.
ﬁﬁW X
SortedRemoveAt
ﬁﬁX f
(
ﬁﬁf g
s_IndexBuffer
ﬁﬁg t
)
ﬁﬁt u
;
ﬁﬁu v
mesh
ﬂﬂ  
.
ﬂﬂ  !!
SetSelectedVertices
ﬂﬂ! 4
(
ﬂﬂ4 5
mesh
ﬂﬂ5 9
.
ﬂﬂ9 :%
selectedIndexesInternal
ﬂﬂ: Q
)
ﬂﬂQ R
;
ﬂﬂR S
if
·· 
(
··  7
)addOrRemoveIfPresentFromSelectionModifier
··  I
&&
··J L*
activeObjectSelectionChanged
··M i
)
··i j
{
‚‚ &
candidateNewActiveObject
„„  8
=
„„9 :
	Selection
„„; D
.
„„D E
activeGameObject
„„E U
;
„„U V
}
‰‰ 
else
ÂÂ  
if
ÂÂ! #
(
ÂÂ$ %
mesh
ÂÂ% )
.
ÂÂ) *%
selectedIndexesInternal
ÂÂ* A
.
ÂÂA B
Length
ÂÂB H
==
ÂÂI K
$num
ÂÂL M
)
ÂÂM N
{
ÊÊ 
for
ÁÁ  #
(
ÁÁ$ %
var
ÁÁ% (
i
ÁÁ) *
=
ÁÁ+ ,
MeshSelection
ÁÁ- :
.
ÁÁ: ;
topInternal
ÁÁ; F
.
ÁÁF G
Count
ÁÁG L
-
ÁÁM N
$num
ÁÁO P
;
ÁÁP Q
i
ÁÁR S
>=
ÁÁT V
$num
ÁÁW X
;
ÁÁX Y
i
ÁÁZ [
--
ÁÁ[ ]
)
ÁÁ] ^
{
ËË  !
if
ÈÈ$ &
(
ÈÈ' (
MeshSelection
ÈÈ( 5
.
ÈÈ5 6
topInternal
ÈÈ6 A
[
ÈÈA B
i
ÈÈB C
]
ÈÈC D
.
ÈÈD E%
selectedIndexesInternal
ÈÈE \
.
ÈÈ\ ]
Length
ÈÈ] c
>
ÈÈd e
$num
ÈÈf g
)
ÈÈg h
{
ÍÍ$ %&
candidateNewActiveObject
ÎÎ( @
=
ÎÎA B
MeshSelection
ÎÎC P
.
ÎÎP Q
topInternal
ÎÎQ \
[
ÎÎ\ ]
i
ÎÎ] ^
]
ÎÎ^ _
.
ÎÎ_ `

gameObject
ÎÎ` j
;
ÎÎj k*
activeObjectSelectionChanged
ÏÏ( D
=
ÏÏE F
true
ÏÏG K
;
ÏÏK L
break
ÌÌ( -
;
ÌÌ- .
}
ÓÓ$ %
}
ÔÔ  !
}
 
}
ÒÒ 
else
ÚÚ 
{
ÛÛ 
mesh
ÙÙ  
.
ÙÙ  !%
selectedIndexesInternal
ÙÙ! 8
=
ÙÙ9 :
mesh
ÙÙ; ?
.
ÙÙ? @%
selectedIndexesInternal
ÙÙ@ W
.
ÙÙW X
SortedRemoveAt
ÙÙX f
(
ÙÙf g
s_IndexBuffer
ÙÙg t
)
ÙÙt u
;
ÙÙu v
mesh
ıı  
.
ıı  !!
SetSelectedVertices
ıı! 4
(
ıı4 5
mesh
ıı5 9
.
ıı9 :%
selectedIndexesInternal
ıı: Q
.
ııQ R
Add
ııR U
(
ııU V
vertex
ııV \
)
ıı\ ]
)
ıı] ^
;
ıı^ _
}
ˆˆ 
}
¯¯ 
else
˘˘ 
mesh
˙˙ 
.
˙˙ !
SetSelectedVertices
˙˙ 0
(
˙˙0 1
mesh
˙˙1 5
.
˙˙5 6%
selectedIndexesInternal
˙˙6 M
.
˙˙M N
Add
˙˙N Q
(
˙˙Q R
vertex
˙˙R X
)
˙˙X Y
)
˙˙Y Z
;
˙˙Z [
}
˚˚ 
if
˝˝ 
(
˝˝ *
activeObjectSelectionChanged
˝˝ /
)
˝˝/ 0
MeshSelection
˛˛ !
.
˛˛! "
MakeActiveObject
˛˛" 2
(
˛˛2 3&
candidateNewActiveObject
˛˛3 K
)
˛˛K L
;
˛˛L M
else
ˇˇ 
MeshSelection
ÄÄ !
.
ÄÄ! "
AddToSelection
ÄÄ" 0
(
ÄÄ0 1&
candidateNewActiveObject
ÄÄ1 I
)
ÄÄI J
;
ÄÄJ K
return
ÇÇ 
mesh
ÇÇ 
;
ÇÇ 
}
ÉÉ 
return
ÖÖ 
null
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
public
àà 
static
àà 
void
àà 
DoMouseDrag
àà &
(
àà& '
Rect
àà' +
mouseDragRect
àà, 9
,
àà9 :

SelectMode
àà; E
selectionMode
ààF S
,
ààS T$
ScenePickerPreferences
ààU k%
scenePickerPreferencesààl Ç
)ààÇ É
{
ââ 	
var
ää 
pickingOptions
ää 
=
ää  
new
ää! $
PickerOptions
ää% 2
(
ää2 3
)
ää3 4
{
ãã 
	depthTest
åå 
=
åå $
scenePickerPreferences
åå 2
.
åå2 3
cullMode
åå3 ;
==
åå< >
CullingMode
åå? J
.
ååJ K
Back
ååK O
,
ååO P
rectSelectMode
çç 
=
çç  $
scenePickerPreferences
çç! 7
.
çç7 8
rectSelectMode
çç8 F
}
éé 
;
éé 
UndoUtility
êê 
.
êê 
RecordSelection
êê '
(
êê' (
$str
êê( 5
)
êê5 6
;
êê6 7
bool
ëë 
isAppendModifier
ëë !
=
ëë" #!
EditorHandleUtility
ëë$ 7
.
ëë7 8
IsAppendModifier
ëë8 H
(
ëëH I
Event
ëëI N
.
ëëN O
current
ëëO V
.
ëëV W
	modifiers
ëëW `
)
ëë` a
;
ëëa b
if
ìì 
(
ìì 
!
ìì 
isAppendModifier
ìì !
)
ìì! "
MeshSelection
îî 
.
îî #
ClearElementSelection
îî 3
(
îî3 4
)
îî4 5
;
îî5 6
bool
ññ  
elementsInDragRect
ññ #
=
ññ$ %
false
ññ& +
;
ññ+ ,
switch
òò 
(
òò 
selectionMode
òò !
)
òò! "
{
ôô 
case
öö 

SelectMode
öö 
.
öö  
Vertex
öö  &
:
öö& '
case
õõ 

SelectMode
õõ 
.
õõ  
TextureVertex
õõ  -
:
õõ- .
{
úú 

Dictionary
ùù 
<
ùù 
ProBuilderMesh
ùù -
,
ùù- .
HashSet
ùù/ 6
<
ùù6 7
int
ùù7 :
>
ùù: ;
>
ùù; <
selected
ùù= E
=
ùùF G
SelectionPicker
ùùH W
.
ùùW X 
PickVerticesInRect
ùùX j
(
ùùj k
	SceneView
ûû %
.
ûû% &!
lastActiveSceneView
ûû& 9
.
ûû9 :
camera
ûû: @
,
ûû@ A
mouseDragRect
üü )
,
üü) *
MeshSelection
†† )
.
††) *
topInternal
††* 5
,
††5 6
pickingOptions
°° *
,
°°* +
EditorGUIUtility
¢¢ ,
.
¢¢, -
pixelsPerPoint
¢¢- ;
)
¢¢; <
;
¢¢< =
foreach
§§ 
(
§§ 
var
§§  
kvp
§§! $
in
§§% '
selected
§§( 0
)
§§0 1
{
•• 
var
¶¶ 
mesh
¶¶  
=
¶¶! "
kvp
¶¶# &
.
¶¶& '
Key
¶¶' *
;
¶¶* +
SharedVertex
ßß $
[
ßß$ %
]
ßß% &
sharedIndexes
ßß' 4
=
ßß5 6
mesh
ßß7 ;
.
ßß; <$
sharedVerticesInternal
ßß< R
;
ßßR S
HashSet
®® 
<
®®  
int
®®  #
>
®®# $
common
®®% +
;
®®+ ,
if
™™ 
(
™™ 
isAppendModifier
™™ ,
)
™™, -
{
´´ 
common
¨¨ "
=
¨¨# $
mesh
¨¨% )
.
¨¨) *$
GetSharedVertexHandles
¨¨* @
(
¨¨@ A
mesh
¨¨A E
.
¨¨E F%
selectedIndexesInternal
¨¨F ]
)
¨¨] ^
;
¨¨^ _
if
ÆÆ 
(
ÆÆ  $
scenePickerPreferences
ÆÆ  6
.
ÆÆ6 7'
selectionModifierBehavior
ÆÆ7 P
==
ÆÆR T'
SelectionModifierBehavior
ÆÆU n
.
ÆÆn o
Add
ÆÆo r
)
ÆÆr s
common
ØØ  &
.
ØØ& '
	UnionWith
ØØ' 0
(
ØØ0 1
kvp
ØØ1 4
.
ØØ4 5
Value
ØØ5 :
)
ØØ: ;
;
ØØ; <
else
∞∞  
if
∞∞! #
(
∞∞$ %$
scenePickerPreferences
∞∞% ;
.
∞∞; <'
selectionModifierBehavior
∞∞< U
==
∞∞W Y'
SelectionModifierBehavior
∞∞Z s
.
∞∞s t
Subtract
∞∞t |
)
∞∞| }
common
±±  &
.
±±& '
RemoveWhere
±±' 2
(
±±2 3
x
±±3 4
=>
±±5 7
kvp
±±8 ;
.
±±; <
Value
±±< A
.
±±A B
Contains
±±B J
(
±±J K
x
±±K L
)
±±L M
)
±±M N
;
±±N O
else
≤≤  
if
≤≤! #
(
≤≤$ %$
scenePickerPreferences
≤≤% ;
.
≤≤; <'
selectionModifierBehavior
≤≤< U
==
≤≤W Y'
SelectionModifierBehavior
≤≤Z s
.
≤≤s t

Difference
≤≤t ~
)
≤≤~ 
common
≥≥  &
.
≥≥& '!
SymmetricExceptWith
≥≥' :
(
≥≥: ;
kvp
≥≥; >
.
≥≥> ?
Value
≥≥? D
)
≥≥D E
;
≥≥E F
}
¥¥ 
else
µµ 
{
∂∂ 
common
∑∑ "
=
∑∑# $
kvp
∑∑% (
.
∑∑( )
Value
∑∑) .
;
∑∑. /
}
∏∏  
elementsInDragRect
∫∫ *
|=
∫∫+ -
kvp
∫∫. 1
.
∫∫1 2
Value
∫∫2 7
.
∫∫7 8
Any
∫∫8 ;
(
∫∫; <
)
∫∫< =
;
∫∫= >
mesh
ªª 
.
ªª !
SetSelectedVertices
ªª 0
(
ªª0 1
common
ªª1 7
.
ªª7 8

SelectMany
ªª8 B
(
ªªB C
x
ªªC D
=>
ªªE G
sharedIndexes
ªªH U
[
ªªU V
x
ªªV W
]
ªªW X
)
ªªX Y
)
ªªY Z
;
ªªZ [
}
ºº 
break
ææ 
;
ææ 
}
øø 
case
¡¡ 

SelectMode
¡¡ 
.
¡¡  
Face
¡¡  $
:
¡¡$ %
case
¬¬ 

SelectMode
¬¬ 
.
¬¬  
TextureFace
¬¬  +
:
¬¬+ ,
{
√√ 

Dictionary
ƒƒ 
<
ƒƒ 
ProBuilderMesh
ƒƒ -
,
ƒƒ- .
HashSet
ƒƒ/ 6
<
ƒƒ6 7
Face
ƒƒ7 ;
>
ƒƒ; <
>
ƒƒ< =
selected
ƒƒ> F
=
ƒƒG H
SelectionPicker
ƒƒI X
.
ƒƒX Y
PickFacesInRect
ƒƒY h
(
ƒƒh i
	SceneView
≈≈ %
.
≈≈% &!
lastActiveSceneView
≈≈& 9
.
≈≈9 :
camera
≈≈: @
,
≈≈@ A
mouseDragRect
∆∆ )
,
∆∆) *
MeshSelection
«« )
.
««) *
topInternal
««* 5
,
««5 6
pickingOptions
»» *
,
»»* +
EditorGUIUtility
…… ,
.
……, -
pixelsPerPoint
……- ;
)
……; <
;
……< =
foreach
ÀÀ 
(
ÀÀ 
var
ÀÀ  
kvp
ÀÀ! $
in
ÀÀ% '
selected
ÀÀ( 0
)
ÀÀ0 1
{
ÃÃ 
HashSet
ÕÕ 
<
ÕÕ  
Face
ÕÕ  $
>
ÕÕ$ %
current
ÕÕ& -
;
ÕÕ- .
if
œœ 
(
œœ 
isAppendModifier
œœ ,
)
œœ, -
{
–– 
current
—— #
=
——$ %
new
——& )
HashSet
——* 1
<
——1 2
Face
——2 6
>
——6 7
(
——7 8
kvp
——8 ;
.
——; <
Key
——< ?
.
——? @#
selectedFacesInternal
——@ U
)
——U V
;
——V W
if
”” 
(
””  $
scenePickerPreferences
””  6
.
””6 7'
selectionModifierBehavior
””7 P
==
””Q S'
SelectionModifierBehavior
””T m
.
””m n
Add
””n q
)
””q r
current
‘‘  '
.
‘‘' (
	UnionWith
‘‘( 1
(
‘‘1 2
kvp
‘‘2 5
.
‘‘5 6
Value
‘‘6 ;
)
‘‘; <
;
‘‘< =
else
’’  
if
’’! #
(
’’$ %$
scenePickerPreferences
’’% ;
.
’’; <'
selectionModifierBehavior
’’< U
==
’’V X'
SelectionModifierBehavior
’’Y r
.
’’r s
Subtract
’’s {
)
’’{ |
current
÷÷  '
.
÷÷' (
RemoveWhere
÷÷( 3
(
÷÷3 4
x
÷÷4 5
=>
÷÷6 8
kvp
÷÷9 <
.
÷÷< =
Value
÷÷= B
.
÷÷B C
Contains
÷÷C K
(
÷÷K L
x
÷÷L M
)
÷÷M N
)
÷÷N O
;
÷÷O P
else
◊◊  
if
◊◊! #
(
◊◊$ %$
scenePickerPreferences
◊◊% ;
.
◊◊; <'
selectionModifierBehavior
◊◊< U
==
◊◊V X'
SelectionModifierBehavior
◊◊Y r
.
◊◊r s

Difference
◊◊s }
)
◊◊} ~
current
ÿÿ  '
.
ÿÿ' (!
SymmetricExceptWith
ÿÿ( ;
(
ÿÿ; <
kvp
ÿÿ< ?
.
ÿÿ? @
Value
ÿÿ@ E
)
ÿÿE F
;
ÿÿF G
}
ŸŸ 
else
⁄⁄ 
{
€€ 
current
‹‹ #
=
‹‹$ %
kvp
‹‹& )
.
‹‹) *
Value
‹‹* /
;
‹‹/ 0
}
››  
elementsInDragRect
ﬂﬂ *
|=
ﬂﬂ+ -
kvp
ﬂﬂ. 1
.
ﬂﬂ1 2
Value
ﬂﬂ2 7
.
ﬂﬂ7 8
Any
ﬂﬂ8 ;
(
ﬂﬂ; <
)
ﬂﬂ< =
;
ﬂﬂ= >
kvp
‡‡ 
.
‡‡ 
Key
‡‡ 
.
‡‡  
SetSelectedFaces
‡‡  0
(
‡‡0 1
current
‡‡1 8
)
‡‡8 9
;
‡‡9 :
}
·· 
break
„„ 
;
„„ 
}
‰‰ 
case
ÊÊ 

SelectMode
ÊÊ 
.
ÊÊ  
Edge
ÊÊ  $
:
ÊÊ$ %
case
ÁÁ 

SelectMode
ÁÁ 
.
ÁÁ  
TextureEdge
ÁÁ  +
:
ÁÁ+ ,
{
ËË 
var
ÈÈ 
selected
ÈÈ  
=
ÈÈ! "
SelectionPicker
ÈÈ# 2
.
ÈÈ2 3
PickEdgesInRect
ÈÈ3 B
(
ÈÈB C
	SceneView
ÍÍ %
.
ÍÍ% &!
lastActiveSceneView
ÍÍ& 9
.
ÍÍ9 :
camera
ÍÍ: @
,
ÍÍ@ A
mouseDragRect
ÎÎ )
,
ÎÎ) *
MeshSelection
ÏÏ )
.
ÏÏ) *
topInternal
ÏÏ* 5
,
ÏÏ5 6
pickingOptions
ÌÌ *
,
ÌÌ* +
EditorGUIUtility
ÓÓ ,
.
ÓÓ, -
pixelsPerPoint
ÓÓ- ;
)
ÓÓ; <
;
ÓÓ< =
foreach
 
(
 
var
  
kvp
! $
in
% '
selected
( 0
)
0 1
{
ÒÒ 
ProBuilderMesh
ÚÚ &
mesh
ÚÚ' +
=
ÚÚ, -
kvp
ÚÚ. 1
.
ÚÚ1 2
Key
ÚÚ2 5
;
ÚÚ5 6

Dictionary
ÛÛ "
<
ÛÛ" #
int
ÛÛ# &
,
ÛÛ& '
int
ÛÛ( +
>
ÛÛ+ ,
common
ÛÛ- 3
=
ÛÛ4 5
mesh
ÛÛ6 :
.
ÛÛ: ; 
sharedVertexLookup
ÛÛ; M
;
ÛÛM N
HashSet
ÙÙ 
<
ÙÙ  

EdgeLookup
ÙÙ  *
>
ÙÙ* +
selectedEdges
ÙÙ, 9
=
ÙÙ: ;

EdgeLookup
ÙÙ< F
.
ÙÙF G"
GetEdgeLookupHashSet
ÙÙG [
(
ÙÙ[ \
kvp
ÙÙ\ _
.
ÙÙ_ `
Value
ÙÙ` e
,
ÙÙe f
common
ÙÙg m
)
ÙÙm n
;
ÙÙn o
HashSet
ıı 
<
ıı  

EdgeLookup
ıı  *
>
ıı* +
current
ıı, 3
;
ıı3 4
if
˜˜ 
(
˜˜ 
isAppendModifier
˜˜ ,
)
˜˜, -
{
¯¯ 
current
˘˘ #
=
˘˘$ %

EdgeLookup
˘˘& 0
.
˘˘0 1"
GetEdgeLookupHashSet
˘˘1 E
(
˘˘E F
mesh
˘˘F J
.
˘˘J K
selectedEdges
˘˘K X
,
˘˘X Y
common
˘˘Z `
)
˘˘` a
;
˘˘a b
if
˚˚ 
(
˚˚  $
scenePickerPreferences
˚˚  6
.
˚˚6 7'
selectionModifierBehavior
˚˚7 P
==
˚˚Q S'
SelectionModifierBehavior
˚˚T m
.
˚˚m n
Add
˚˚n q
)
˚˚q r
current
¸¸  '
.
¸¸' (
	UnionWith
¸¸( 1
(
¸¸1 2
selectedEdges
¸¸2 ?
)
¸¸? @
;
¸¸@ A
else
˝˝  
if
˝˝! #
(
˝˝$ %$
scenePickerPreferences
˝˝% ;
.
˝˝; <'
selectionModifierBehavior
˝˝< U
==
˝˝V X'
SelectionModifierBehavior
˝˝Y r
.
˝˝r s
Subtract
˝˝s {
)
˝˝{ |
current
˛˛  '
.
˛˛' (
RemoveWhere
˛˛( 3
(
˛˛3 4
x
˛˛4 5
=>
˛˛6 8
selectedEdges
˛˛9 F
.
˛˛F G
Contains
˛˛G O
(
˛˛O P
x
˛˛P Q
)
˛˛Q R
)
˛˛R S
;
˛˛S T
else
ˇˇ  
if
ˇˇ! #
(
ˇˇ$ %$
scenePickerPreferences
ˇˇ% ;
.
ˇˇ; <'
selectionModifierBehavior
ˇˇ< U
==
ˇˇV X'
SelectionModifierBehavior
ˇˇY r
.
ˇˇr s

Difference
ˇˇs }
)
ˇˇ} ~
current
ÄÄ  '
.
ÄÄ' (!
SymmetricExceptWith
ÄÄ( ;
(
ÄÄ; <
selectedEdges
ÄÄ< I
)
ÄÄI J
;
ÄÄJ K
}
ÅÅ 
else
ÇÇ 
{
ÉÉ 
current
ÑÑ #
=
ÑÑ$ %
selectedEdges
ÑÑ& 3
;
ÑÑ3 4
}
ÖÖ  
elementsInDragRect
áá *
|=
áá+ -
kvp
áá. 1
.
áá1 2
Value
áá2 7
.
áá7 8
Any
áá8 ;
(
áá; <
)
áá< =
;
áá= >
mesh
àà 
.
àà 
SetSelectedEdges
àà -
(
àà- .
current
àà. 5
.
àà5 6
Select
àà6 <
(
àà< =
x
àà= >
=>
àà? A
x
ààB C
.
ààC D
local
ààD I
)
ààI J
)
ààJ K
;
ààK L
}
ââ 
break
ãã 
;
ãã 
}
åå 
}
çç 
if
êê 
(
êê 
!
êê  
elementsInDragRect
êê #
&&
êê$ &
!
êê' (
isAppendModifier
êê( 8
)
êê8 9
MeshSelection
ëë 
.
ëë ,
ClearElementAndObjectSelection
ëë <
(
ëë< =
)
ëë= >
;
ëë> ?
ProBuilderEditor
ìì 
.
ìì 
Refresh
ìì $
(
ìì$ %
)
ìì% &
;
ìì& '
	SceneView
îî 
.
îî 

RepaintAll
îî  
(
îî  !
)
îî! "
;
îî" #
}
ïï 	
internal
öö 
static
öö 
float
öö 
MouseRayHitTest
öö -
(
öö- .
Vector3
õõ 
mousePosition
õõ !
,
õõ! "

SelectMode
úú 
selectionMode
úú $
,
úú$ %$
ScenePickerPreferences
ùù "
pickerOptions
ùù# 0
,
ùù0 1
SceneSelection
ûû 
	selection
ûû $
,
ûû$ %
bool
üü 
allowUnselected
üü  
=
üü! "
false
üü# (
)
üü( )
{
†† 	
if
°° 
(
°° 
selectionMode
°° 
.
°° 
ContainsFlag
°° *
(
°°* +

SelectMode
°°+ 5
.
°°5 6
Edge
°°6 :
|
°°; <

SelectMode
°°= G
.
°°G H
TextureEdge
°°H S
)
°°S T
)
°°T U
return
¢¢ 
EdgeRaycast
¢¢ "
(
¢¢" #
mousePosition
¢¢# 0
,
¢¢0 1
pickerOptions
¢¢2 ?
,
¢¢? @
allowUnselected
¢¢A P
,
¢¢P Q
	selection
¢¢R [
)
¢¢[ \
;
¢¢\ ]
if
§§ 
(
§§ 
selectionMode
§§ 
.
§§ 
ContainsFlag
§§ *
(
§§* +

SelectMode
§§+ 5
.
§§5 6
Vertex
§§6 <
|
§§= >

SelectMode
§§? I
.
§§I J
TextureVertex
§§J W
)
§§W X
)
§§X Y
return
•• 
VertexRaycast
•• $
(
••$ %
mousePosition
••% 2
,
••2 3
pickerOptions
••4 A
,
••A B
allowUnselected
••C R
,
••R S
	selection
••T ]
)
••] ^
;
••^ _
return
ßß 
FaceRaycast
ßß 
(
ßß 
mousePosition
ßß ,
,
ßß, -
pickerOptions
ßß. ;
,
ßß; <
allowUnselected
ßß= L
,
ßßL M
	selection
ßßN W
,
ßßW X
$num
ßßY Z
,
ßßZ [
true
ßß\ `
)
ßß` a
;
ßßa b
}
®® 	
static
™™ 
float
™™ 
FaceRaycast
™™  
(
™™  !
Vector3
™™! (
mousePosition
™™) 6
,
™™6 7$
ScenePickerPreferences
´´ "
pickerOptions
´´# 0
,
´´0 1
bool
¨¨ 
allowUnselected
¨¨  
,
¨¨  !
SceneSelection
≠≠ 
	selection
≠≠ $
,
≠≠$ %
int
ÆÆ 
deepClickOffset
ÆÆ 
=
ÆÆ  !
$num
ÆÆ" #
,
ÆÆ# $
bool
ØØ 
	isPreview
ØØ 
=
ØØ 
true
ØØ !
)
ØØ! "
{
∞∞ 	

GameObject
±± 
pickedGo
±± 
=
±±  !
null
±±" &
;
±±& '
ProBuilderMesh
≤≤ 
pickedPb
≤≤ #
=
≤≤$ %
null
≤≤& *
;
≤≤* +
Face
≥≥ 

pickedFace
≥≥ 
=
≥≥ 
null
≥≥ "
;
≥≥" #
int
µµ 
newHash
µµ 
=
µµ 
$num
µµ 
;
µµ 
EventModifiers
∏∏ 
em
∏∏ 
=
∏∏ 
Event
∏∏  %
.
∏∏% &
current
∏∏& -
.
∏∏- .
	modifiers
∏∏. 7
;
∏∏7 8
if
ºº 
(
ºº 
(
ºº 
em
ºº 
!=
ºº 
EventModifiers
ºº %
.
ºº% &
None
ºº& *
)
ºº* +
!=
ºº, .+
s_AppendModifierPreviousState
ºº/ L
)
ººL M
{
ΩΩ +
s_AppendModifierPreviousState
ææ -
=
ææ. /
(
ææ0 1
em
ææ1 3
!=
ææ4 6
EventModifiers
ææ7 E
.
ææE F
None
ææF J
)
ææJ K
;
ææK L%
s_DeepSelectionPrevious
øø '
=
øø( )
newHash
øø* 1
;
øø1 2
}
¿¿ 
if
¬¬ 
(
¬¬ 
	isPreview
¬¬ 
||
¬¬ 
em
¬¬ 
!=
¬¬  "
EventModifiers
¬¬# 1
.
¬¬1 2
None
¬¬2 6
)
¬¬6 7!
EditorHandleUtility
√√ #
.
√√# $

GetHovered
√√$ .
(
√√. /
mousePosition
√√/ <
,
√√< =&
s_OverlappingGameObjects
√√> V
)
√√V W
;
√√W X
else
ƒƒ !
EditorHandleUtility
≈≈ #
.
≈≈# $
GetAllOverlapping
≈≈$ 5
(
≈≈5 6
mousePosition
≈≈6 C
,
≈≈C D&
s_OverlappingGameObjects
≈≈E ]
)
≈≈] ^
;
≈≈^ _
	selection
«« 
.
«« 
Clear
«« 
(
«« 
)
«« 
;
«« 
float
…… 
distance
…… 
=
…… 
Mathf
…… "
.
……" #
Infinity
……# +
;
……+ ,
for
ÀÀ 
(
ÀÀ 
int
ÀÀ 
i
ÀÀ 
=
ÀÀ 
$num
ÀÀ 
,
ÀÀ 
next
ÀÀ  
=
ÀÀ! "
$num
ÀÀ# $
,
ÀÀ$ %
pickedCount
ÀÀ& 1
=
ÀÀ2 3&
s_OverlappingGameObjects
ÀÀ4 L
.
ÀÀL M
Count
ÀÀM R
;
ÀÀR S
i
ÀÀT U
<
ÀÀV W
pickedCount
ÀÀX c
;
ÀÀc d
i
ÀÀe f
++
ÀÀf h
)
ÀÀh i
{
ÃÃ 
var
ÕÕ 
go
ÕÕ 
=
ÕÕ &
s_OverlappingGameObjects
ÕÕ 1
[
ÕÕ1 2
i
ÕÕ2 3
]
ÕÕ3 4
;
ÕÕ4 5
var
ŒŒ 
mesh
ŒŒ 
=
ŒŒ 
go
ŒŒ 
.
ŒŒ 
GetComponent
ŒŒ *
<
ŒŒ* +
ProBuilderMesh
ŒŒ+ 9
>
ŒŒ9 :
(
ŒŒ: ;
)
ŒŒ; <
;
ŒŒ< =
Face
œœ 
face
œœ 
=
œœ 
null
œœ  
;
œœ  !
if
—— 
(
—— 
mesh
—— 
!=
—— 
null
——  
&&
——! #
(
——$ %
allowUnselected
——% 4
||
——5 7
MeshSelection
——8 E
.
——E F
topInternal
——F Q
.
——Q R
Contains
——R Z
(
——Z [
mesh
——[ _
)
——_ `
)
——` a
)
——a b
{
““ 
Ray
”” 
ray
”” 
=
”” 
UHandleUtility
”” ,
.
””, - 
GUIPointToWorldRay
””- ?
(
””? @
mousePosition
””@ M
)
””M N
;
””N O

RaycastHit
‘‘ 
hit
‘‘ "
;
‘‘" #
if
÷÷ 
(
÷÷ 
UnityEngine
÷÷ #
.
÷÷# $

ProBuilder
÷÷$ .
.
÷÷. /
HandleUtility
÷÷/ <
.
÷÷< =
FaceRaycast
÷÷= H
(
÷÷H I
ray
÷÷I L
,
÷÷L M
mesh
◊◊  
,
◊◊  !
out
ÿÿ 
hit
ÿÿ  #
,
ÿÿ# $
Mathf
ŸŸ !
.
ŸŸ! "
Infinity
ŸŸ" *
,
ŸŸ* +
pickerOptions
⁄⁄ )
.
⁄⁄) *
cullMode
⁄⁄* 2
)
⁄⁄2 3
)
⁄⁄3 4
{
€€ 
face
‹‹ 
=
‹‹ 
mesh
‹‹ #
.
‹‹# $
facesInternal
‹‹$ 1
[
‹‹1 2
hit
‹‹2 5
.
‹‹5 6
face
‹‹6 :
]
‹‹: ;
;
‹‹; <
distance
››  
=
››! "
Vector2
››# *
.
››* +
SqrMagnitude
››+ 7
(
››7 8
(
››8 9
(
››9 :
Vector2
››: A
)
››A B
mousePosition
››B O
)
››O P
-
››Q R
HandleUtility
››S `
.
››` a
WorldToGUIPoint
››a p
(
››p q
mesh
››q u
.
››u v
	transform
››v 
.›› Ä
TransformPoint››Ä é
(››é è
hit››è í
.››í ì
point››ì ò
)››ò ô
)››ô ö
)››ö õ
;››õ ú
}
ﬁﬁ 
}
ﬂﬂ 
int
‚‚ 
hash
‚‚ 
=
‚‚ 
face
‚‚ 
==
‚‚  "
null
‚‚# '
?
‚‚( )
go
‚‚* ,
.
‚‚, -
GetHashCode
‚‚- 8
(
‚‚8 9
)
‚‚9 :
:
‚‚; <
face
‚‚= A
.
‚‚A B
GetHashCode
‚‚B M
(
‚‚M N
)
‚‚N O
;
‚‚O P
if
‰‰ 
(
‰‰ %
s_DeepSelectionPrevious
‰‰ +
==
‰‰, .
hash
‰‰/ 3
)
‰‰3 4
next
ÂÂ 
=
ÂÂ 
(
ÂÂ 
i
ÂÂ 
+
ÂÂ 
(
ÂÂ  !
$num
ÂÂ! "
+
ÂÂ# $
deepClickOffset
ÂÂ% 4
)
ÂÂ4 5
)
ÂÂ5 6
%
ÂÂ7 8
pickedCount
ÂÂ9 D
;
ÂÂD E
if
ÁÁ 
(
ÁÁ 
next
ÁÁ 
==
ÁÁ 
i
ÁÁ 
)
ÁÁ 
{
ËË 
pickedGo
ÈÈ 
=
ÈÈ 
go
ÈÈ !
;
ÈÈ! "
pickedPb
ÍÍ 
=
ÍÍ 
mesh
ÍÍ #
;
ÍÍ# $

pickedFace
ÎÎ 
=
ÎÎ  
face
ÎÎ! %
;
ÎÎ% &
newHash
ÌÌ 
=
ÌÌ 
hash
ÌÌ "
;
ÌÌ" #
if
ÚÚ 
(
ÚÚ 
next
ÚÚ 
!=
ÚÚ 
$num
ÚÚ  !
)
ÚÚ! "
break
ÛÛ 
;
ÛÛ 
}
ÙÙ 
}
ıı 
if
˜˜ 
(
˜˜ 
!
˜˜ 
	isPreview
˜˜ 
)
˜˜ %
s_DeepSelectionPrevious
¯¯ '
=
¯¯( )
newHash
¯¯* 1
;
¯¯1 2
if
˙˙ 
(
˙˙ 
pickedGo
˙˙ 
!=
˙˙ 
null
˙˙  
)
˙˙  !
{
˚˚ 
Event
¸¸ 
.
¸¸ 
current
¸¸ 
.
¸¸ 
Use
¸¸ !
(
¸¸! "
)
¸¸" #
;
¸¸# $
if
˛˛ 
(
˛˛ 
pickedPb
˛˛ 
!=
˛˛ 
null
˛˛  $
)
˛˛$ %
{
ˇˇ 
if
ÄÄ 
(
ÄÄ 
pickedPb
ÄÄ  
.
ÄÄ  !

selectable
ÄÄ! +
)
ÄÄ+ ,
{
ÅÅ 
	selection
ÇÇ !
.
ÇÇ! "

gameObject
ÇÇ" ,
=
ÇÇ- .
pickedGo
ÇÇ/ 7
;
ÇÇ7 8
	selection
ÉÉ !
.
ÉÉ! "
mesh
ÉÉ" &
=
ÉÉ' (
pickedPb
ÉÉ) 1
;
ÉÉ1 2
	selection
ÑÑ !
.
ÑÑ! "
SetSingleFace
ÑÑ" /
(
ÑÑ/ 0

pickedFace
ÑÑ0 :
)
ÑÑ: ;
;
ÑÑ; <
return
ÜÜ 
Mathf
ÜÜ $
.
ÜÜ$ %
Sqrt
ÜÜ% )
(
ÜÜ) *
distance
ÜÜ* 2
)
ÜÜ2 3
;
ÜÜ3 4
}
áá 
}
àà 
	selection
åå 
.
åå 

gameObject
åå $
=
åå% &
pickedGo
åå' /
;
åå/ 0
return
çç 
Mathf
çç 
.
çç 
Sqrt
çç !
(
çç! "
distance
çç" *
)
çç* +
;
çç+ ,
}
éé 
return
êê 
distance
êê 
;
êê 
}
ëë 	
static
ìì 
float
ìì 
VertexRaycast
ìì "
(
ìì" #
Vector3
ìì# *
mousePosition
ìì+ 8
,
ìì8 9$
ScenePickerPreferences
ìì: P
pickerOptions
ììQ ^
,
ìì^ _
bool
ìì` d
allowUnselected
ììe t
,
ììt u
SceneSelectionììv Ñ
	selectionììÖ é
)ììé è
{
îî 	
Camera
ïï 
cam
ïï 
=
ïï 
	SceneView
ïï "
.
ïï" #!
lastActiveSceneView
ïï# 6
.
ïï6 7
camera
ïï7 =
;
ïï= >
	selection
ññ 
.
ññ 
Clear
ññ 
(
ññ 
)
ññ 
;
ññ 
s_NearestVertices
óó 
.
óó 
Clear
óó #
(
óó# $
)
óó$ %
;
óó% &
	selection
òò 
.
òò 

gameObject
òò  
=
òò! "
HandleUtility
òò# 0
.
òò0 1
PickGameObject
òò1 ?
(
òò? @
mousePosition
òò@ M
,
òòM N
false
òòO T
)
òòT U
;
òòU V
float
ôô 
maxDistance
ôô 
=
ôô $
ScenePickerPreferences
ôô  6
.
ôô6 7 
maxPointerDistance
ôô7 I
*
ôôJ K$
ScenePickerPreferences
ôôL b
.
ôôb c 
maxPointerDistance
ôôc u
;
ôôu v
ProBuilderMesh
öö 
hoveredMesh
öö &
=
öö' (
	selection
öö) 2
.
öö2 3

gameObject
öö3 =
!=
öö> @
null
ööA E
?
ööF G
	selection
ööH Q
.
ööQ R

gameObject
ööR \
.
öö\ ]
GetComponent
öö] i
<
ööi j
ProBuilderMesh
ööj x
>
ööx y
(
ööy z
)
ööz {
:
öö| }
nullöö~ Ç
;ööÇ É
if
úú 
(
úú 
allowUnselected
úú 
&&
úú  "
	selection
úú# ,
.
úú, -

gameObject
úú- 7
!=
úú8 :
null
úú; ?
)
úú? @
{
ùù 
if
ûû 
(
ûû 
hoveredMesh
ûû 
!=
ûû  "
null
ûû# '
&&
ûû( *
hoveredMesh
ûû+ 6
.
ûû6 7

selectable
ûû7 A
&&
ûûB D
!
ûûE F
MeshSelection
ûûF S
.
ûûS T
Contains
ûûT \
(
ûû\ ]
hoveredMesh
ûû] h
)
ûûh i
)
ûûi j
{
üü  
GetNearestVertices
†† &
(
††& '
hoveredMesh
††' 2
,
††2 3
mousePosition
††4 A
,
††A B
s_NearestVertices
††C T
,
††T U
maxDistance
††V a
,
††a b
$num
††c d
)
††d e
;
††e f
}
°° 
}
¢¢ 
if
§§ 
(
§§ 
	selection
§§ 
.
§§ 
mesh
§§ 
==
§§ !
null
§§" &
)
§§& '
{
•• 
foreach
¶¶ 
(
¶¶ 
var
¶¶ 
mesh
¶¶ !
in
¶¶" $
MeshSelection
¶¶% 2
.
¶¶2 3
topInternal
¶¶3 >
)
¶¶> ?
{
ßß 
if
®® 
(
®® 
!
®® 
mesh
®® 
.
®® 

selectable
®® (
)
®®( )
continue
©©  
;
©©  ! 
GetNearestVertices
´´ &
(
´´& '
mesh
´´' +
,
´´+ ,
mousePosition
´´- :
,
´´: ;
s_NearestVertices
´´< M
,
´´M N
maxDistance
´´O Z
,
´´Z [
hoveredMesh
´´\ g
==
´´h j
mesh
´´k o
||
´´p r
hoveredMesh
´´s ~
==´´ Å
null´´Ç Ü
?´´á à
$num´´â ç
:´´é è&
ScenePickerPreferences´´ê ¶
.´´¶ ß$
offPointerMultiplier´´ß ª
)´´ª º
;´´º Ω
}
¨¨ 
}
≠≠ 
s_NearestVertices
ØØ 
.
ØØ 
Sort
ØØ "
(
ØØ" #
(
ØØ# $
x
ØØ$ %
,
ØØ% &
y
ØØ' (
)
ØØ( )
=>
ØØ* ,
x
ØØ- .
.
ØØ. /
screenDistance
ØØ/ =
.
ØØ= >
	CompareTo
ØØ> G
(
ØØG H
y
ØØH I
.
ØØI J
screenDistance
ØØJ X
)
ØØX Y
)
ØØY Z
;
ØØZ [
for
±± 
(
±± 
int
±± 
i
±± 
=
±± 
$num
±± 
;
±± 
i
±± 
<
±± 
s_NearestVertices
±±  1
.
±±1 2
Count
±±2 7
;
±±7 8
i
±±9 :
++
±±: <
)
±±< =
{
≤≤ 
if
≥≥ 
(
≥≥ 
!
≥≥ 
UnityEngine
≥≥  
.
≥≥  !

ProBuilder
≥≥! +
.
≥≥+ ,
HandleUtility
≥≥, 9
.
≥≥9 :
PointIsOccluded
≥≥: I
(
≥≥I J
cam
≥≥J M
,
≥≥M N
s_NearestVertices
≥≥O `
[
≥≥` a
i
≥≥a b
]
≥≥b c
.
≥≥c d
mesh
≥≥d h
,
≥≥h i
s_NearestVertices
≥≥j {
[
≥≥{ |
i
≥≥| }
]
≥≥} ~
.
≥≥~ 
worldPosition≥≥ å
)≥≥å ç
)≥≥ç é
{
¥¥ 
	selection
µµ 
.
µµ 

gameObject
µµ (
=
µµ) *
s_NearestVertices
µµ+ <
[
µµ< =
i
µµ= >
]
µµ> ?
.
µµ? @
mesh
µµ@ D
.
µµD E

gameObject
µµE O
;
µµO P
	selection
∂∂ 
.
∂∂ 
mesh
∂∂ "
=
∂∂# $
s_NearestVertices
∂∂% 6
[
∂∂6 7
i
∂∂7 8
]
∂∂8 9
.
∂∂9 :
mesh
∂∂: >
;
∂∂> ?
	selection
∑∑ 
.
∑∑ 
SetSingleVertex
∑∑ -
(
∑∑- .
s_NearestVertices
∑∑. ?
[
∑∑? @
i
∑∑@ A
]
∑∑A B
.
∑∑B C
vertex
∑∑C I
)
∑∑I J
;
∑∑J K
return
ππ 
Mathf
ππ  
.
ππ  !
Sqrt
ππ! %
(
ππ% &
s_NearestVertices
ππ& 7
[
ππ7 8
i
ππ8 9
]
ππ9 :
.
ππ: ;
screenDistance
ππ; I
)
ππI J
;
ππJ K
}
∫∫ 
}
ªª 
return
ΩΩ 
Mathf
ΩΩ 
.
ΩΩ 
Infinity
ΩΩ !
;
ΩΩ! "
}
ææ 	
static
¿¿ 
int
¿¿  
GetNearestVertices
¿¿ %
(
¿¿% &
ProBuilderMesh
¿¿& 4
mesh
¿¿5 9
,
¿¿9 :
Vector3
¿¿; B
mousePosition
¿¿C P
,
¿¿P Q
List
¿¿R V
<
¿¿V W
VertexPickerEntry
¿¿W h
>
¿¿h i
list
¿¿j n
,
¿¿n o
float
¿¿p u
maxDistance¿¿v Å
,¿¿Å Ç
float¿¿É à
distModifier¿¿â ï
)¿¿ï ñ
{
¡¡ 	
var
¬¬ 
	positions
¬¬ 
=
¬¬ 
mesh
¬¬  
.
¬¬  !
positionsInternal
¬¬! 2
;
¬¬2 3
var
√√ 
common
√√ 
=
√√ 
mesh
√√ 
.
√√ $
sharedVerticesInternal
√√ 4
;
√√4 5
var
ƒƒ 
matches
ƒƒ 
=
ƒƒ 
$num
ƒƒ 
;
ƒƒ 
for
∆∆ 
(
∆∆ 
int
∆∆ 
n
∆∆ 
=
∆∆ 
$num
∆∆ 
,
∆∆ 
c
∆∆ 
=
∆∆ 
common
∆∆  &
.
∆∆& '
Length
∆∆' -
;
∆∆- .
n
∆∆/ 0
<
∆∆1 2
c
∆∆3 4
;
∆∆4 5
n
∆∆6 7
++
∆∆7 9
)
∆∆9 :
{
«« 
int
»» 
index
»» 
=
»» 
common
»» "
[
»»" #
n
»»# $
]
»»$ %
[
»»% &
$num
»»& '
]
»»' (
;
»»( )
Vector3
…… 
v
…… 
=
…… 
mesh
……  
.
……  !
	transform
……! *
.
……* +
TransformPoint
……+ 9
(
……9 :
	positions
……: C
[
……C D
index
……D I
]
……I J
)
……J K
;
……K L
Vector3
   
p
   
=
   
UHandleUtility
   *
.
  * +
WorldToGUIPoint
  + :
(
  : ;
v
  ; <
)
  < =
;
  = >
float
ÃÃ 
dist
ÃÃ 
=
ÃÃ 
(
ÃÃ 
p
ÃÃ 
-
ÃÃ  !
mousePosition
ÃÃ" /
)
ÃÃ/ 0
.
ÃÃ0 1
sqrMagnitude
ÃÃ1 =
*
ÃÃ> ?
distModifier
ÃÃ@ L
;
ÃÃL M
if
ŒŒ 
(
ŒŒ 
dist
ŒŒ 
<
ŒŒ 
maxDistance
ŒŒ &
)
ŒŒ& '
{
œœ 
list
–– 
.
–– 
Add
–– 
(
–– 
new
––  
VertexPickerEntry
––! 2
(
––2 3
)
––3 4
{
—— 
mesh
““ 
=
““ 
mesh
““ #
,
““# $
screenDistance
”” &
=
””' (
dist
””) -
,
””- .
worldPosition
‘‘ %
=
‘‘& '
v
‘‘( )
,
‘‘) *
vertex
’’ 
=
’’  
index
’’! &
}
÷÷ 
)
÷÷ 
;
÷÷ 
matches
ÿÿ 
++
ÿÿ 
;
ÿÿ 
}
ŸŸ 
}
⁄⁄ 
return
‹‹ 
matches
‹‹ 
;
‹‹ 
}
›› 	
static
ÂÂ 
float
ÂÂ 
EdgeRaycast
ÂÂ  
(
ÂÂ  !
Vector3
ÂÂ! (
mousePosition
ÂÂ) 6
,
ÂÂ6 7$
ScenePickerPreferences
ÂÂ8 N
pickerPrefs
ÂÂO Z
,
ÂÂZ [
bool
ÂÂ\ `
allowUnselected
ÂÂa p
,
ÂÂp q
SceneSelectionÂÂr Ä
	selectionÂÂÅ ä
)ÂÂä ã
{
ÊÊ 	
	selection
ÁÁ 
.
ÁÁ 
Clear
ÁÁ 
(
ÁÁ 
)
ÁÁ 
;
ÁÁ 
	selection
ËË 
.
ËË 

gameObject
ËË  
=
ËË! "
UHandleUtility
ËË# 1
.
ËË1 2
PickGameObject
ËË2 @
(
ËË@ A
mousePosition
ËËA N
,
ËËN O
false
ËËP U
)
ËËU V
;
ËËV W
var
ÈÈ 
hoveredMesh
ÈÈ 
=
ÈÈ 
	selection
ÈÈ '
.
ÈÈ' (

gameObject
ÈÈ( 2
!=
ÈÈ3 5
null
ÈÈ6 :
?
ÈÈ; <
	selection
ÈÈ= F
.
ÈÈF G

gameObject
ÈÈG Q
.
ÈÈQ R
GetComponent
ÈÈR ^
<
ÈÈ^ _
ProBuilderMesh
ÈÈ_ m
>
ÈÈm n
(
ÈÈn o
)
ÈÈo p
:
ÈÈq r
null
ÈÈs w
;
ÈÈw x
float
ÎÎ 
bestDistance
ÎÎ 
=
ÎÎ  
Mathf
ÎÎ! &
.
ÎÎ& '
Infinity
ÎÎ' /
;
ÎÎ/ 0
bool
ÏÏ "
hoveredIsInSelection
ÏÏ %
=
ÏÏ& '
MeshSelection
ÏÏ( 5
.
ÏÏ5 6
topInternal
ÏÏ6 A
.
ÏÏA B
Contains
ÏÏB J
(
ÏÏJ K
hoveredMesh
ÏÏK V
)
ÏÏV W
;
ÏÏW X
if
ÓÓ 
(
ÓÓ 
hoveredMesh
ÓÓ 
!=
ÓÓ 
null
ÓÓ #
&&
ÓÓ$ &
(
ÓÓ' (
allowUnselected
ÓÓ( 7
||
ÓÓ8 :"
hoveredIsInSelection
ÓÓ; O
)
ÓÓO P
)
ÓÓP Q
{
ÔÔ 
var
 
tup
 
=
 "
GetNearestEdgeOnMesh
 .
(
. /
hoveredMesh
/ :
,
: ;
mousePosition
< I
)
I J
;
J K
if
ÚÚ 
(
ÚÚ 
tup
ÚÚ 
.
ÚÚ 
edge
ÚÚ 
.
ÚÚ 
IsValid
ÚÚ $
(
ÚÚ$ %
)
ÚÚ% &
)
ÚÚ& '
{
ÛÛ 
	selection
ÙÙ 
.
ÙÙ 

gameObject
ÙÙ (
=
ÙÙ) *
hoveredMesh
ÙÙ+ 6
.
ÙÙ6 7

gameObject
ÙÙ7 A
;
ÙÙA B
	selection
ıı 
.
ıı 
mesh
ıı "
=
ıı# $
hoveredMesh
ıı% 0
;
ıı0 1
	selection
ˆˆ 
.
ˆˆ 
SetSingleEdge
ˆˆ +
(
ˆˆ+ ,
tup
ˆˆ, /
.
ˆˆ/ 0
edge
ˆˆ0 4
)
ˆˆ4 5
;
ˆˆ5 6
bestDistance
˜˜  
=
˜˜! "
tup
˜˜# &
.
˜˜& '
distance
˜˜' /
;
˜˜/ 0
if
˙˙ 
(
˙˙ "
hoveredIsInSelection
˙˙ ,
)
˙˙, -
return
˚˚ 
tup
˚˚ "
.
˚˚" #
distance
˚˚# +
;
˚˚+ ,
}
¸¸ 
}
˝˝ 
foreach
ˇˇ 
(
ˇˇ 
var
ˇˇ 
mesh
ˇˇ 
in
ˇˇ  
MeshSelection
ˇˇ! .
.
ˇˇ. /
topInternal
ˇˇ/ :
)
ˇˇ: ;
{
ÄÄ 
var
ÅÅ 
trs
ÅÅ 
=
ÅÅ 
mesh
ÅÅ 
.
ÅÅ 
	transform
ÅÅ (
;
ÅÅ( )
var
ÇÇ 
	positions
ÇÇ 
=
ÇÇ 
mesh
ÇÇ  $
.
ÇÇ$ %
positionsInternal
ÇÇ% 6
;
ÇÇ6 7
s_EdgeBuffer
ÉÉ 
.
ÉÉ 
Clear
ÉÉ "
(
ÉÉ" #
)
ÉÉ# $
;
ÉÉ$ %
var
áá 
distMultiplier
áá "
=
áá# $
(
áá% &
hoveredMesh
áá& 1
==
áá2 4
mesh
áá5 9
||
áá: <
hoveredMesh
áá= H
==
ááI K
null
ááL P
)
ááP Q
?
àà 
$num
àà 
:
ââ $
ScenePickerPreferences
ââ ,
.
ââ, -"
offPointerMultiplier
ââ- A
;
ââA B
foreach
ãã 
(
ãã 
var
ãã 
face
ãã !
in
ãã" $
mesh
ãã% )
.
ãã) *
facesInternal
ãã* 7
)
ãã7 8
{
åå 
foreach
çç 
(
çç 
var
çç  
edge
çç! %
in
çç& (
face
çç) -
.
çç- .
edges
çç. 3
)
çç3 4
{
éé 
int
èè 
x
èè 
=
èè 
edge
èè  $
.
èè$ %
a
èè% &
;
èè& '
int
êê 
y
êê 
=
êê 
edge
êê  $
.
êê$ %
b
êê% &
;
êê& '
float
íí 
d
íí 
=
íí  !
UHandleUtility
íí" 0
.
íí0 1
DistanceToLine
íí1 ?
(
íí? @
trs
ìì  #
.
ìì# $
TransformPoint
ìì$ 2
(
ìì2 3
	positions
ìì3 <
[
ìì< =
x
ìì= >
]
ìì> ?
)
ìì? @
,
ìì@ A
trs
îî  #
.
îî# $
TransformPoint
îî$ 2
(
îî2 3
	positions
îî3 <
[
îî< =
y
îî= >
]
îî> ?
)
îî? @
)
îî@ A
;
îîA B
d
ññ 
*=
ññ 
distMultiplier
ññ +
;
ññ+ ,
if
öö 
(
öö 
d
öö 
>
öö $
ScenePickerPreferences
öö  6
.
öö6 7 
maxPointerDistance
öö7 I
)
ööI J
continue
õõ $
;
õõ$ %
if
ûû 
(
ûû 
Mathf
ûû !
.
ûû! "
Approximately
ûû" /
(
ûû/ 0
d
ûû0 1
,
ûû1 2
bestDistance
ûû3 ?
)
ûû? @
)
ûû@ A
{
üü 
s_EdgeBuffer
†† (
.
††( )
Add
††) ,
(
††, -
new
††- 0
Edge
††1 5
(
††5 6
x
††6 7
,
††7 8
y
††9 :
)
††: ;
)
††; <
;
††< =
}
°° 
else
¢¢ 
if
¢¢ 
(
¢¢  !
d
¢¢! "
<
¢¢# $
bestDistance
¢¢% 1
)
¢¢1 2
{
££ 
s_EdgeBuffer
§§ (
.
§§( )
Clear
§§) .
(
§§. /
)
§§/ 0
;
§§0 1
s_EdgeBuffer
•• (
.
••( )
Add
••) ,
(
••, -
new
••- 0
Edge
••1 5
(
••5 6
x
••6 7
,
••7 8
y
••9 :
)
••: ;
)
••; <
;
••< =
	selection
ßß %
.
ßß% &

gameObject
ßß& 0
=
ßß1 2
mesh
ßß3 7
.
ßß7 8

gameObject
ßß8 B
;
ßßB C
	selection
®® %
.
®®% &
mesh
®®& *
=
®®+ ,
mesh
®®- 1
;
®®1 2
	selection
©© %
.
©©% &
SetSingleEdge
©©& 3
(
©©3 4
new
©©4 7
Edge
©©8 <
(
©©< =
x
©©= >
,
©©> ?
y
©©@ A
)
©©A B
)
©©B C
;
©©C D
bestDistance
™™ (
=
™™) *
d
™™+ ,
;
™™, -
}
´´ 
}
¨¨ 
}
≠≠ 
if
±± 
(
±± 
s_EdgeBuffer
±±  
.
±±  !
Count
±±! &
>
±±' (
$num
±±) *
)
±±* +
	selection
≤≤ 
.
≤≤ 
SetSingleEdge
≤≤ +
(
≤≤+ ,$
GetClosestEdgeToCamera
≤≤, B
(
≤≤B C
	positions
≤≤C L
,
≤≤L M
s_EdgeBuffer
≤≤N Z
)
≤≤Z [
)
≤≤[ \
;
≤≤\ ]
}
≥≥ 
return
µµ 
	selection
µµ 
.
µµ 

gameObject
µµ '
!=
µµ( *
null
µµ+ /
?
µµ0 1
bestDistance
µµ2 >
:
µµ? @
Mathf
µµA F
.
µµF G
Infinity
µµG O
;
µµO P
}
∂∂ 	
static
∏∏ 
Edge
∏∏ $
GetClosestEdgeToCamera
∏∏ *
(
∏∏* +
Vector3
∏∏+ 2
[
∏∏2 3
]
∏∏3 4
	positions
∏∏5 >
,
∏∏> ?
IEnumerable
∏∏@ K
<
∏∏K L
Edge
∏∏L P
>
∏∏P Q
edges
∏∏R W
)
∏∏W X
{
ππ 	
var
∫∫ 
camPos
∫∫ 
=
∫∫ 
	SceneView
∫∫ "
.
∫∫" #!
lastActiveSceneView
∫∫# 6
.
∫∫6 7
camera
∫∫7 =
.
∫∫= >
	transform
∫∫> G
.
∫∫G H
position
∫∫H P
;
∫∫P Q
var
ªª !
closestDistToScreen
ªª #
=
ªª$ %
Mathf
ªª& +
.
ªª+ ,
Infinity
ªª, 4
;
ªª4 5
Edge
ºº 
closest
ºº 
=
ºº 
default
ºº "
(
ºº" #
Edge
ºº# '
)
ºº' (
;
ºº( )
foreach
ææ 
(
ææ 
var
ææ 
edge
ææ 
in
ææ  
edges
ææ! &
)
ææ& '
{
øø 
var
¿¿ 
a
¿¿ 
=
¿¿ 
	positions
¿¿ !
[
¿¿! "
edge
¿¿" &
.
¿¿& '
a
¿¿' (
]
¿¿( )
;
¿¿) *
var
¡¡ 
b
¡¡ 
=
¡¡ 
	positions
¡¡ !
[
¡¡! "
edge
¡¡" &
.
¡¡& '
b
¡¡' (
]
¡¡( )
;
¡¡) *
var
¬¬ 
dir
¬¬ 
=
¬¬ 
(
¬¬ 
b
¬¬ 
-
¬¬ 
a
¬¬  
)
¬¬  !
.
¬¬! "

normalized
¬¬" ,
*
¬¬- .
$num
¬¬/ 4
;
¬¬4 5
float
∆∆ 
	dToScreen
∆∆ 
=
∆∆  !
Mathf
∆∆" '
.
∆∆' (
Min
∆∆( +
(
∆∆+ ,
Vector3
«« 
.
«« 
Distance
«« $
(
««$ %
camPos
««% +
,
««+ ,
a
««- .
+
««/ 0
dir
««1 4
)
««4 5
,
««5 6
Vector3
»» 
.
»» 
Distance
»» $
(
»»$ %
camPos
»»% +
,
»»+ ,
b
»»- .
-
»»/ 0
dir
»»1 4
)
»»4 5
)
»»5 6
;
»»6 7
if
   
(
   
	dToScreen
   
<
   !
closestDistToScreen
    3
)
  3 4
{
ÀÀ !
closestDistToScreen
ÃÃ '
=
ÃÃ( )
	dToScreen
ÃÃ* 3
;
ÃÃ3 4
closest
ÕÕ 
=
ÕÕ 
edge
ÕÕ "
;
ÕÕ" #
}
ŒŒ 
}
œœ 
return
—— 
closest
—— 
;
—— 
}
““ 	
struct
‘‘ 
EdgeAndDistance
‘‘ 
{
’’ 	
public
÷÷ 
Edge
÷÷ 
edge
÷÷ 
;
÷÷ 
public
◊◊ 
float
◊◊ 
distance
◊◊ !
;
◊◊! "
}
ÿÿ 	
static
›› 
EdgeAndDistance
›› "
GetNearestEdgeOnMesh
›› 3
(
››3 4
ProBuilderMesh
››4 B
mesh
››C G
,
››G H
Vector3
››I P
mousePosition
››Q ^
)
››^ _
{
ﬁﬁ 	
Ray
ﬂﬂ 
ray
ﬂﬂ 
=
ﬂﬂ 
UHandleUtility
ﬂﬂ $
.
ﬂﬂ$ % 
GUIPointToWorldRay
ﬂﬂ% 7
(
ﬂﬂ7 8
mousePosition
ﬂﬂ8 E
)
ﬂﬂE F
;
ﬂﬂF G
var
·· 
res
·· 
=
·· 
new
·· 
EdgeAndDistance
·· )
(
··) *
)
··* +
{
‚‚ 
edge
„„ 
=
„„ 
Edge
„„ 
.
„„ 
Empty
„„ !
,
„„! "
distance
‰‰ 
=
‰‰ 
Mathf
‰‰  
.
‰‰  !
Infinity
‰‰! )
}
ÂÂ 
;
ÂÂ 
SimpleTuple
ÁÁ 
<
ÁÁ 
Face
ÁÁ 
,
ÁÁ 
Vector3
ÁÁ %
>
ÁÁ% &+
s_DualCullModeRaycastBackFace
ÁÁ' D
=
ÁÁE F
new
ÁÁG J
SimpleTuple
ÁÁK V
<
ÁÁV W
Face
ÁÁW [
,
ÁÁ[ \
Vector3
ÁÁ] d
>
ÁÁd e
(
ÁÁe f
)
ÁÁf g
;
ÁÁg h
SimpleTuple
ËË 
<
ËË 
Face
ËË 
,
ËË 
Vector3
ËË %
>
ËË% &,
s_DualCullModeRaycastFrontFace
ËË' E
=
ËËF G
new
ËËH K
SimpleTuple
ËËL W
<
ËËW X
Face
ËËX \
,
ËË\ ]
Vector3
ËË^ e
>
ËËe f
(
ËËf g
)
ËËg h
;
ËËh i
if
ÎÎ 
(
ÎÎ 
PHandleUtility
ÎÎ 
.
ÎÎ &
FaceRaycastBothCullModes
ÎÎ 7
(
ÎÎ7 8
ray
ÎÎ8 ;
,
ÎÎ; <
mesh
ÎÎ= A
,
ÎÎA B
ref
ÎÎC F+
s_DualCullModeRaycastBackFace
ÎÎG d
,
ÎÎd e
ref
ÎÎf i-
s_DualCullModeRaycastFrontFaceÎÎj à
)ÎÎà â
)ÎÎâ ä
{
ÏÏ 
Vector3
ÌÌ 
[
ÌÌ 
]
ÌÌ 
v
ÌÌ 
=
ÌÌ 
mesh
ÌÌ "
.
ÌÌ" #
positionsInternal
ÌÌ# 4
;
ÌÌ4 5
if
ÔÔ 
(
ÔÔ +
s_DualCullModeRaycastBackFace
ÔÔ 1
.
ÔÔ1 2
item1
ÔÔ2 7
!=
ÔÔ8 :
null
ÔÔ; ?
)
ÔÔ? @
{
 
foreach
ÒÒ 
(
ÒÒ 
var
ÒÒ  
edge
ÒÒ! %
in
ÒÒ& (+
s_DualCullModeRaycastBackFace
ÒÒ) F
.
ÒÒF G
item1
ÒÒG L
.
ÒÒL M
edgesInternal
ÒÒM Z
)
ÒÒZ [
{
ÚÚ 
float
ÛÛ 
d
ÛÛ 
=
ÛÛ  !
UHandleUtility
ÛÛ" 0
.
ÛÛ0 1
DistancePointLine
ÛÛ1 B
(
ÛÛB C+
s_DualCullModeRaycastBackFace
ÛÛC `
.
ÛÛ` a
item2
ÛÛa f
,
ÛÛf g
v
ÛÛh i
[
ÛÛi j
edge
ÛÛj n
.
ÛÛn o
a
ÛÛo p
]
ÛÛp q
,
ÛÛq r
v
ÛÛs t
[
ÛÛt u
edge
ÛÛu y
.
ÛÛy z
b
ÛÛz {
]
ÛÛ{ |
)
ÛÛ| }
;
ÛÛ} ~
if
ıı 
(
ıı 
d
ıı 
<
ıı 
res
ıı  #
.
ıı# $
distance
ıı$ ,
)
ıı, -
{
ˆˆ 
res
˜˜ 
.
˜˜  
edge
˜˜  $
=
˜˜% &
edge
˜˜' +
;
˜˜+ ,
res
¯¯ 
.
¯¯  
distance
¯¯  (
=
¯¯) *
d
¯¯+ ,
;
¯¯, -
}
˘˘ 
}
˙˙ 
}
˚˚ 
if
˝˝ 
(
˝˝ ,
s_DualCullModeRaycastFrontFace
˝˝ 2
.
˝˝2 3
item1
˝˝3 8
!=
˝˝9 ;
null
˝˝< @
)
˝˝@ A
{
˛˛ 
var
ˇˇ 
a
ˇˇ 
=
ˇˇ 
mesh
ˇˇ  
.
ˇˇ  !
	transform
ˇˇ! *
.
ˇˇ* +
TransformPoint
ˇˇ+ 9
(
ˇˇ9 :+
s_DualCullModeRaycastBackFace
ˇˇ: W
.
ˇˇW X
item2
ˇˇX ]
)
ˇˇ] ^
;
ˇˇ^ _
var
ÄÄ 
b
ÄÄ 
=
ÄÄ 
mesh
ÄÄ  
.
ÄÄ  !
	transform
ÄÄ! *
.
ÄÄ* +
TransformPoint
ÄÄ+ 9
(
ÄÄ9 :,
s_DualCullModeRaycastFrontFace
ÄÄ: X
.
ÄÄX Y
item2
ÄÄY ^
)
ÄÄ^ _
;
ÄÄ_ `
var
ÅÅ 
c
ÅÅ 
=
ÅÅ 
	SceneView
ÅÅ %
.
ÅÅ% &!
lastActiveSceneView
ÅÅ& 9
.
ÅÅ9 :
camera
ÅÅ: @
.
ÅÅ@ A
	transform
ÅÅA J
.
ÅÅJ K
position
ÅÅK S
;
ÅÅS T
if
ÉÉ 
(
ÉÉ 
Vector3
ÉÉ 
.
ÉÉ  
Distance
ÉÉ  (
(
ÉÉ( )
c
ÉÉ) *
,
ÉÉ* +
b
ÉÉ, -
)
ÉÉ- .
<
ÉÉ/ 0
Vector3
ÉÉ1 8
.
ÉÉ8 9
Distance
ÉÉ9 A
(
ÉÉA B
c
ÉÉB C
,
ÉÉC D
a
ÉÉE F
)
ÉÉF G
)
ÉÉG H
{
ÑÑ 
foreach
ÖÖ 
(
ÖÖ  !
var
ÖÖ! $
edge
ÖÖ% )
in
ÖÖ* ,,
s_DualCullModeRaycastFrontFace
ÖÖ- K
.
ÖÖK L
item1
ÖÖL Q
.
ÖÖQ R
edgesInternal
ÖÖR _
)
ÖÖ_ `
{
ÜÜ 
float
áá !
d
áá" #
=
áá$ %
UHandleUtility
áá& 4
.
áá4 5
DistancePointLine
áá5 F
(
ááF G,
s_DualCullModeRaycastFrontFace
ááG e
.
ááe f
item2
ááf k
,
áák l
v
áám n
[
áán o
edge
ááo s
.
áás t
a
áát u
]
ááu v
,
ááv w
v
ááx y
[
ááy z
edge
ááz ~
.
áá~ 
báá Ä
]ááÄ Å
)ááÅ Ç
;ááÇ É
if
ââ 
(
ââ  
d
ââ  !
<
ââ" #
res
ââ$ '
.
ââ' (
distance
ââ( 0
)
ââ0 1
{
ää 
res
ãã  #
.
ãã# $
edge
ãã$ (
=
ãã) *
edge
ãã+ /
;
ãã/ 0
res
åå  #
.
åå# $
distance
åå$ ,
=
åå- .
d
åå/ 0
;
åå0 1
}
çç 
}
éé 
}
èè 
}
êê 
if
íí 
(
íí 
res
íí 
.
íí 
edge
íí 
.
íí 
IsValid
íí $
(
íí$ %
)
íí% &
)
íí& '
res
ìì 
.
ìì 
distance
ìì  
=
ìì! "
UHandleUtility
ìì# 1
.
ìì1 2
DistanceToLine
ìì2 @
(
ìì@ A
mesh
îî  
.
îî  !
	transform
îî! *
.
îî* +
TransformPoint
îî+ 9
(
îî9 :
v
îî: ;
[
îî; <
res
îî< ?
.
îî? @
edge
îî@ D
.
îîD E
a
îîE F
]
îîF G
)
îîG H
,
îîH I
mesh
ïï  
.
ïï  !
	transform
ïï! *
.
ïï* +
TransformPoint
ïï+ 9
(
ïï9 :
v
ïï: ;
[
ïï; <
res
ïï< ?
.
ïï? @
edge
ïï@ D
.
ïïD E
b
ïïE F
]
ïïF G
)
ïïG H
)
ïïH I
;
ïïI J
}
ññ 
return
òò 
res
òò 
;
òò 
}
ôô 	
}
öö 
}õõ ò
ïD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\ShortcutManager.csó
êD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\EditorEnum.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
enum  
SceneToolbarLocation	 
{		 
UpperCenter

 
,

 
	UpperLeft 
, 

UpperRight 
, 
BottomCenter 
, 

BottomLeft 
, 
BottomRight 
} 
[ 
System 
. 
Flags 
] 
enum  
SelectionRenderState	 
{ 
None 
= 
$num 
, 
	Wireframe 
= 
$num 
, 
Outline 
= 
$num 
} 
} î$
•D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Interaction\ToggleDragRectMode.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
ToggleDragRectMode #
:$ %

MenuAction& 0
{ 
RectSelectMode 
mode 
{		 	
get

 
{

 
return

 
ProBuilderEditor

 )
.

) *
rectSelectMode

* 8
;

8 9
}

: ;
set 
{ 
ProBuilderEditor "
." #
rectSelectMode# 1
=2 3
value4 9
;9 :
}; <
} 	
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
	Selection& /
;/ 0
}1 2
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
mode 
== 
RectSelectMode -
.- .
Complete. 6
? 
IconUtility !
.! "
GetIcon" )
() *
$str* K
)K L
: 
IconUtility !
.! "
GetIcon" )
() *
$str* L
,L M
IconSkinN V
.V W
ProW Z
)Z [
;[ \
} 
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
}   	
public"" 
override"" 
int"" 
toolbarPriority"" +
{## 	
get$$ 
{$$ 
return$$ 
$num$$ 
;$$ 
}$$ 
}%% 	
public'' 
override'' 

SelectMode'' "
validSelectModes''# 3
{(( 	
get)) 
{)) 
return)) 

SelectMode)) #
.))# $
Edge))$ (
|))) *

SelectMode))+ 5
.))5 6
Face))6 :
|)); <

SelectMode))= G
.))G H
TextureFace))H S
;))S T
}))U V
}** 	
static,, 
readonly,, 
TooltipContent,, &
	s_Tooltip,,' 0
=,,1 2
new,,3 6
TooltipContent,,7 E
(-- 
$str.. $
,..$ %
$str	// ˝
)00 
;00 
public22 
override22 
string22 
	menuTitle22 (
{22) *
get22+ .
{22/ 0
return221 7
mode228 <
==22= ?
RectSelectMode22@ N
.22N O
Complete22O W
?22X Y
$str22Z j
:22k l
$str22m ~
;22~ 
}
22Ä Å
}
22Ç É
public44 
override44 
ActionResult44 $
DoAction44% -
(44- .
)44. /
{55 	
mode66 
=66 
InternalUtility66 "
.66" #
NextEnumValue66# 0
(660 1
mode661 5
)665 6
;666 7
return88 
new88 
ActionResult88 #
(88# $
ActionResult88$ 0
.880 1
Status881 7
.887 8
Success888 ?
,88? @
$str99 #
+99$ %
(99& '
mode99' +
==99, .
RectSelectMode99/ =
.99= >
Complete99> F
?99G H
$str99I S
:99T U
$str99V a
)99a b
)99b c
;99c d
}:: 	
public<< 
override<< 
bool<< 
enabled<< $
{== 	
get>> 
{?? 
return@@ 
ProBuilderEditor@@ '
.@@' (
instance@@( 0
!=@@1 3
null@@4 8
&&AA 
ProBuilderEditorAA '
.AA' (

selectModeAA( 2
.AA2 3
ContainsFlagAA3 ?
(AA? @

SelectModeAA@ J
.AAJ K
EdgeAAK O
|AAP Q

SelectModeAAR \
.AA\ ]
FaceAA] a
|AAb c

SelectModeAAd n
.AAn o
TextureFaceAAo z
)AAz {
;AA{ |
}BB 
}CC 	
}DD 
}EE û$
üD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\ConnectVertices.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
ConnectVertices  
:! "

MenuAction# -
{ 
public		 
override		 
ToolbarGroup		 $
group		% *
{		+ ,
get		- 0
{		1 2
return		3 9
ToolbarGroup		: F
.		F G
Geometry		G O
;		O P
}		Q R
}		S T
public

 
override

 
	Texture2D

 !
icon

" &
{

' (
get

) ,
{

- .
return

/ 5
IconUtility

6 A
.

A B
GetIcon

B I
(

I J
$str

J `
,

` a
IconSkin

b j
.

j k
Pro

k n
)

n o
;

o p
}

q r
}

s t
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
_tooltip> F
;F G
}H I
}J K
	protected 
override 
bool 
hasFileMenuEntry  0
{1 2
get3 6
{7 8
return9 ?
false@ E
;E F
}G H
}I J
static 
readonly 
TooltipContent &
_tooltip' /
=0 1
new2 5
TooltipContent6 D
( 
$str "
," #
$str ?
,? @
keyCommandAlt 
, 
$char "
) 
; 
public 
override 

SelectMode "
validSelectModes# 3
{ 	
get 
{ 
return 

SelectMode #
.# $
Vertex$ *
;* +
}, -
} 	
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
base 
. 
enabled %
&&& (
MeshSelection) 6
.6 7%
selectedSharedVertexCount7 P
>Q R
$numS T
;T U
}V W
} 	
public 
override 
ActionResult $
DoAction% -
(- .
). /
{   	
ActionResult!! 
res!! 
=!! 
ActionResult!! +
.!!+ ,
NoSelection!!, 7
;!!7 8
UndoUtility## 
.## 
RecordSelection## '
(##' (
$str##( :
)##: ;
;##; <
foreach%% 
(%% 
var%% 
mesh%% 
in%%  
MeshSelection%%! .
.%%. /
topInternal%%/ :
)%%: ;
{&& 
mesh'' 
.'' 
ToMesh'' 
('' 
)'' 
;'' 
int(( 
[(( 
](( 
splits(( 
=(( 
mesh(( #
.((# $
Connect(($ +
(((+ ,
mesh((, 0
.((0 1#
selectedIndexesInternal((1 H
)((H I
;((I J
if** 
(** 
splits** 
!=** 
null** "
)**" #
{++ 
mesh,, 
.,, 
Refresh,,  
(,,  !
),,! "
;,," #
mesh-- 
.-- 
Optimize-- !
(--! "
)--" #
;--# $
mesh.. 
... 
SetSelectedVertices.. ,
(.., -
splits..- 3
)..3 4
;..4 5
res// 
=// 
new// 
ActionResult// *
(//* +
ActionResult//+ 7
.//7 8
Status//8 >
.//> ?
Success//? F
,//F G
$str//H W
)//W X
;//X Y
}00 
else11 
{22 
res33 
=33 
new33 
ActionResult33 *
(33* +
ActionResult33+ 7
.337 8
Status338 >
.33> ?
Failure33? F
,33F G
$str33H a
)33a b
;33b c
}44 
}55 
ProBuilderEditor66 
.66 
Refresh66 $
(66$ %
)66% &
;66& '
return88 
res88 
;88 
}99 	
}:: 
};; ÚT
íD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\ToolbarGroup.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
public		 

enum		 
ToolbarGroup		 
{

 
Tool 
= 
$num 
, 
	Selection 
= 
$num 
, 
Object 
= 
$num 
, 
Geometry 
= 
$num 
, 
Entity 
= 
$num 
, 
Export"" 
="" 
$num"" 
}## 
static%% 

class%% 
ToolbarGroupUtility%% $
{&& 
static'' 
readonly'' 
Color'' 
	ToolColor'' '
=''( )
new''* -
Color''. 3
(''3 4
$num''4 ;
,''; <
$num''= A
,''A B
$num''C G
,''G H
$num''I K
)''K L
;''L M
static(( 
readonly(( 
Color(( 
SelectionColor(( ,
=((- .
new((/ 2
Color((3 8
(((8 9
$num((9 @
,((@ A
$num((B I
,((I J
$num((K R
,((R S
$num((T V
)((V W
;((W X
static)) 
readonly)) 
Color)) 
ObjectColor)) )
=))* +
new)), /
Color))0 5
())5 6
$num))6 :
,)): ;
$num))< @
,))@ A
$num))B I
,))I J
$num))K M
)))M N
;))N O
static** 
readonly** 
Color** 
GeometryColor** +
=**, -
new**. 1
Color**2 7
(**7 8
$num**8 ?
,**? @
$num**A H
,**H I
$num**J N
,**N O
$num**P R
)**R S
;**S T
public,, 
static,, 
Color,, 
GetColor,, $
(,,$ %
ToolbarGroup,,% 1
group,,2 7
),,7 8
{-- 	
if.. 
(.. 
group.. 
==.. 
ToolbarGroup.. %
...% &
Tool..& *
)..* +
return// 
	ToolColor//  
;//  !
else00 
if00 
(00 
group00 
==00 
ToolbarGroup00 *
.00* +
	Selection00+ 4
)004 5
return11 
SelectionColor11 %
;11% &
else22 
if22 
(22 
group22 
==22 
ToolbarGroup22 *
.22* +
Object22+ 1
||222 4
group225 :
==22; =
ToolbarGroup22> J
.22J K
Entity22K Q
)22Q R
return33 
ObjectColor33 "
;33" #
else44 
if44 
(44 
group44 
==44 
ToolbarGroup44 *
.44* +
Geometry44+ 3
)443 4
return55 
GeometryColor55 $
;55$ %
return77 
Color77 
.77 
white77 
;77 
}88 	
private:: 
static:: 
GUIStyle:: )
CreateBackgroundStyleTemplate::  =
(::= >
)::> ?
{;; 	
GUIStyle<< 
style<< 
=<< 
new<<  
GUIStyle<<! )
(<<) *
)<<* +
;<<+ ,
style== 
.== 
normal== 
.== 
	textColor== "
===# $
EditorGUIUtility==% 5
.==5 6
	isProSkin==6 ?
?==@ A
MenuActionStyles==B R
.==R S#
TEXT_COLOR_WHITE_NORMAL==S j
:==k l
Color==m r
.==r s
black==s x
;==x y
style>> 
.>> 
hover>> 
.>> 
	textColor>> !
=>>" #
EditorGUIUtility>>$ 4
.>>4 5
	isProSkin>>5 >
?>>? @
MenuActionStyles>>A Q
.>>Q R"
TEXT_COLOR_WHITE_HOVER>>R h
:>>i j
Color>>k p
.>>p q
black>>q v
;>>v w
style?? 
.?? 
active?? 
.?? 
	textColor?? "
=??# $
EditorGUIUtility??% 5
.??5 6
	isProSkin??6 ?
???@ A
MenuActionStyles??B R
.??R S#
TEXT_COLOR_WHITE_ACTIVE??S j
:??k l
Color??m r
.??r s
black??s x
;??x y
style@@ 
.@@ 
	alignment@@ 
=@@ 

TextAnchor@@ (
.@@( )
MiddleCenter@@) 5
;@@5 6
styleAA 
.AA 
borderAA 
=AA 
newAA 

RectOffsetAA )
(AA) *
$numAA* +
,AA+ ,
$numAA- .
,AA. /
$numAA0 1
,AA1 2
$numAA3 4
)AA4 5
;AA5 6
styleBB 
.BB 
stretchWidthBB 
=BB  
trueBB! %
;BB% &
styleCC 
.CC 
stretchHeightCC 
=CC  !
falseCC" '
;CC' (
returnDD 
styleDD 
;DD 
}EE 	
privateGG 
staticGG 

DictionaryGG !
<GG! "
stringGG" (
,GG( )
GUIStyleGG* 2
>GG2 3"
s_IconBackgroundStylesGG4 J
=GGK L
newGGM P

DictionaryGGQ [
<GG[ \
stringGG\ b
,GGb c
GUIStyleGGd l
>GGl m
(GGm n
)GGn o
;GGo p
privatePP 
staticPP 
GUIStylePP 
GetBackgroundStylePP  2
(PP2 3
stringPP3 9
groupPP: ?
,PP? @
boolPPA E
isHorizontalPPF R
)PPR S
{QQ 	
GUIStyleRR 
styleRR 
;RR 
stringTT 
groupKeyTT 
=TT 
stringTT $
.TT$ %
FormatTT% +
(TT+ ,
$strTT, 5
,TT5 6
groupTT7 <
,TT< =
isHorizontalTT> J
?TTK L
$strTTM Z
:TT[ \
$strTT] h
)TTh i
;TTi j
ifVV 
(VV "
s_IconBackgroundStylesVV &
.VV& '
TryGetValueVV' 2
(VV2 3
groupKeyVV3 ;
,VV; <
outVV= @
styleVVA F
)VVF G
)VVG H
returnWW 
styleWW 
;WW 
styleYY 
=YY )
CreateBackgroundStyleTemplateYY 1
(YY1 2
)YY2 3
;YY3 4
style[[ 
.[[ 
normal[[ 
.[[ 

background[[ #
=[[$ %
IconUtility[[& 1
.[[1 2
GetIcon[[2 9
([[9 :
string\\ 
.\\ 
Format\\ !
(\\! "
$str\\" E
,\\E F
group\\G L
,\\L M
isHorizontal\\N Z
?\\[ \
$str\\] i
:\\j k
$str\\l v
)\\v w
)\\w x
;\\x y
style]] 
.]] 
hover]] 
.]] 

background]] "
=]]# $
IconUtility]]% 0
.]]0 1
GetIcon]]1 8
(]]8 9
string^^ 
.^^ 
Format^^ !
(^^! "
$str^^" D
,^^D E
group^^F K
,^^K L
isHorizontal^^M Y
?^^Z [
$str^^\ h
:^^i j
$str^^k u
)^^u v
)^^v w
;^^w x
style__ 
.__ 
active__ 
.__ 

background__ #
=__$ %
IconUtility__& 1
.__1 2
GetIcon__2 9
(__9 :
string`` 
.`` 
Format`` !
(``! "
$str``" F
,``F G
group``H M
,``M N
isHorizontal``O [
?``\ ]
$str``^ j
:``k l
$str``m w
)``w x
)``x y
;``y z"
s_IconBackgroundStylesbb "
.bb" #
Addbb# &
(bb& '
groupKeybb' /
,bb/ 0
stylebb1 6
)bb6 7
;bb7 8
stylecc 
.cc 
margincc 
=cc 
isHorizontalcc '
?cc( )
newcc* -

RectOffsetcc. 8
(cc8 9
$numcc9 :
,cc: ;
$numcc< =
,cc= >
$numcc? @
,cc@ A
$numccB C
)ccC D
:ccE F
newccG J

RectOffsetccK U
(ccU V
$numccV W
,ccW X
$numccY Z
,ccZ [
$numcc\ ]
,cc] ^
$numcc_ `
)cc` a
;cca b
styledd 
.dd 
paddingdd 
=dd 
isHorizontaldd (
?dd) *
newdd+ .

RectOffsetdd/ 9
(dd9 :
$numdd: ;
,dd; <
$numdd= >
,dd> ?
$numdd@ A
,ddA B
$numddC D
)ddD E
:ddF G
newddH K

RectOffsetddL V
(ddV W
$numddW X
,ddX Y
$numddZ [
,dd[ \
$numdd] ^
,dd^ _
$numdd` a
)dda b
;ddb c
returnff 
styleff 
;ff 
}gg 	
publicll 
staticll 
GUIStylell 
GetStylell '
(ll' (
ToolbarGroupll( 4
groupll5 :
,ll: ;
boolll< @
isHorizontalllA M
)llM N
{mm 	
ifnn 
(nn 
groupnn 
==nn 
ToolbarGroupnn %
.nn% &
Toolnn& *
)nn* +
returnoo 
GetBackgroundStyleoo )
(oo) *
$stroo* 0
,oo0 1
isHorizontaloo2 >
)oo> ?
;oo? @
elsepp 
ifpp 
(pp 
grouppp 
==pp 
ToolbarGrouppp *
.pp* +
	Selectionpp+ 4
)pp4 5
returnqq 
GetBackgroundStyleqq )
(qq) *
$strqq* 5
,qq5 6
isHorizontalqq7 C
)qqC D
;qqD E
elserr 
ifrr 
(rr 
grouprr 
==rr 
ToolbarGrouprr *
.rr* +
Objectrr+ 1
||rr2 4
grouprr5 :
==rr; =
ToolbarGrouprr> J
.rrJ K
EntityrrK Q
)rrQ R
returnss 
GetBackgroundStyless )
(ss) *
$strss* 2
,ss2 3
isHorizontalss4 @
)ss@ A
;ssA B
elsett 
returnuu 
GetBackgroundStyleuu )
(uu) *
$struu* /
,uu/ 0
isHorizontaluu1 =
)uu= >
;uu> ?
}vv 	
}ww 
}xx ≠
íD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\Experimental.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
static 

class 
Experimental 
{ 
const 
string )
k_ExperimentalFeaturesEnabled 2
=3 4
$str5 W
;W X
[

 	
UserSetting

	 
]

 
static 
Pref 
< 
bool 
> 
s_MeshesAreAssets +
=, -
new. 1
Pref2 6
<6 7
bool7 ;
>; <
(< =
$str= [
,[ \
false] b
,b c
SettingsScoped q
.q r
Projectr y
)y z
;z {
internal 
static 
bool 
meshesAreAssets ,
{ 	
get 
{ 
return '
experimentalFeaturesEnabled 4
&&5 7
s_MeshesAreAssets8 I
;I J
}K L
} 	
internal 
static 
bool '
experimentalFeaturesEnabled 8
{ 	
get 
{ 
return 
false 
; 
}  !
} 	
[ 	
UserSettingBlock	 
( 
$str (
)( )
]) *
static 
void (
ExperimentalFeaturesSettings 0
(0 1
string1 7
searchContext8 E
)E F
{ 	
var 
enabled 
= '
experimentalFeaturesEnabled 5
;5 6
	EditorGUI   
.   
BeginChangeCheck   &
(  & '
)  ' (
;  ( )
enabled"" 
="" 
SettingsGUILayout"" '
.""' (
SearchableToggle""( 8
(""8 9
$str""9 X
,""X Y
enabled""Z a
,""a b
searchContext""c p
)""p q
;""q r
if$$ 
($$ 
	EditorGUI$$ 
.$$ 
EndChangeCheck$$ (
($$( )
)$$) *
)$$* +
{%% 
if&& 
(&& 
enabled&& 
)&& "
ScriptingSymbolManager'' *
.''* +
AddScriptingDefine''+ =
(''= >)
k_ExperimentalFeaturesEnabled''> [
)''[ \
;''\ ]
else(( "
ScriptingSymbolManager)) *
.))* +!
RemoveScriptingDefine))+ @
())@ A)
k_ExperimentalFeaturesEnabled))A ^
)))^ _
;))_ `
}** 
if,, 
(,, 
enabled,, 
),, 
{-- 
using.. 
(.. 
new.. 
SettingsGUILayout.. ,
..., -
IndentedGroup..- :
(..: ;
)..; <
)..< =
{// 
s_MeshesAreAssets00 %
.00% &
value00& +
=00, -
SettingsGUILayout00. ?
.00? @
SettingsToggle00@ N
(00N O
$str00O d
,00d e
s_MeshesAreAssets00f w
,00w x
searchContext	00y Ü
)
00Ü á
;
00á à
if22 
(22 
s_MeshesAreAssets22 )
.22) *
value22* /
)22/ 0
EditorGUILayout33 '
.33' (
HelpBox33( /
(33/ 0
$str	330 †
,
33† °
MessageType
33¢ ≠
.
33≠ Æ
Warning
33Æ µ
)
33µ ∂
;
33∂ ∑
}44 
}55 
}66 	
}77 
}88 ¡Ñ
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Object\ProBuilderize.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed		 

class		 
ProBuilderize		 
:		  

MenuAction		! +
{

 
bool 
	m_Enabled 
; 
Pref 
< 
bool 
> 
m_Quads 
= 
new  
Pref! %
<% &
bool& *
>* +
(+ ,
$str, @
,@ A
trueB F
)F G
;G H
Pref 
< 
bool 
> 
m_Smoothing 
=  
new! $
Pref% )
<) *
bool* .
>. /
(/ 0
$str0 H
,H I
trueJ N
)N O
;O P
Pref 
< 
float 
> 
m_SmoothingAngle $
=% &
new' *
Pref+ /
</ 0
float0 5
>5 6
(6 7
$str7 T
,T U
$numV X
)X Y
;Y Z
public 
ProBuilderize 
( 
) 
{ 	
MeshSelection 
. "
objectSelectionChanged 0
+=1 3$
OnObjectSelectionChanged4 L
;L M$
OnObjectSelectionChanged $
($ %
)% &
;& '
} 	
private 
void $
OnObjectSelectionChanged -
(- .
). /
{ 	
int 
	meshCount 
= 
	Selection %
.% &

transforms& 0
.0 1

SelectMany1 ;
(; <
x< =
=>> @
xA B
.B C#
GetComponentsInChildrenC Z
<Z [

MeshFilter[ e
>e f
(f g
)g h
)h i
.i j
Countj o
(o p
)p q
;q r
	m_Enabled 
= 
	meshCount !
>" #
$num$ %
&&& (
	meshCount) 2
!=3 5
MeshSelection6 C
.C D
selectedObjectCountD W
;W X
} 	
public 
override 
ToolbarGroup $
group% *
{   	
get!! 
{!! 
return!! 
ToolbarGroup!! %
.!!% &
Object!!& ,
;!!, -
}!!. /
}"" 	
public$$ 
override$$ 
	Texture2D$$ !
icon$$" &
{%% 	
get&& 
{&& 
return&& 
IconUtility&& $
.&&$ %
GetIcon&&% ,
(&&, -
$str&&- K
,&&K L
IconSkin&&M U
.&&U V
Pro&&V Y
)&&Y Z
;&&Z [
}&&\ ]
}'' 	
public)) 
override)) 
TooltipContent)) &
tooltip))' .
{** 	
get++ 
{++ 
return++ 
	s_Tooltip++ "
;++" #
}++$ %
},, 	

GUIContent.. 
m_QuadsTooltip.. !
=.." #
new..$ '

GUIContent..( 2
(..2 3
$str..3 A
,..A B
$str..C n
+..o p
$str// 0
)//0 1
;//1 2

GUIContent00 
m_SmoothingTooltip00 %
=00& '
new00( +

GUIContent00, 6
(006 7
$str007 I
,00I J
$str00K h
+00i j
$str11 D
)11D E
;11E F

GUIContent22 '
m_SmoothingThresholdTooltip22 .
=22/ 0
new221 4

GUIContent225 ?
(22? @
$str22@ U
,22U V
$str22W h
+22i j
$str33 y
+33z {
$str44 8
)448 9
;449 :
private66 
static66 
readonly66 
TooltipContent66  .
	s_Tooltip66/ 8
=669 :
new66; >
TooltipContent66? M
(77 
$str88 
,88  
$str99 E
):: 
;:: 
public<< 
override<< 
bool<< 
enabled<< $
{== 	
get>> 
{>> 
return>> 
base>> 
.>> 
enabled>> %
&&>>& (
	m_Enabled>>) 2
;>>2 3
}>>4 5
}?? 	
	protectedAA 
overrideAA 
MenuActionStateAA *
optionsMenuStateAA+ ;
{BB 	
getCC 
{CC 
returnCC 
MenuActionStateCC (
.CC( )
VisibleAndEnabledCC) :
;CC: ;
}CC< =
}DD 	
	protectedFF 
overrideFF 
voidFF 
OnSettingsGUIFF  -
(FF- .
)FF. /
{GG 	
	GUILayoutHH 
.HH 
LabelHH 
(HH 
$strHH 3
,HH3 4
EditorStylesHH5 A
.HHA B
	boldLabelHHB K
)HHK L
;HHL M
EditorGUILayoutJJ 
.JJ 
HelpBoxJJ #
(JJ# $
$str	JJ$ Ä
,
JJÄ Å
MessageType
JJÇ ç
.
JJç é
Info
JJé í
)
JJí ì
;
JJì î
	EditorGUILL 
.LL 
BeginChangeCheckLL &
(LL& '
)LL' (
;LL( )
m_QuadsNN 
.NN 
valueNN 
=NN 
EditorGUILayoutNN +
.NN+ ,
ToggleNN, 2
(NN2 3
m_QuadsTooltipNN3 A
,NNA B
m_QuadsNNC J
)NNJ K
;NNK L
m_SmoothingOO 
.OO 
valueOO 
=OO 
EditorGUILayoutOO  /
.OO/ 0
ToggleOO0 6
(OO6 7
m_SmoothingTooltipOO7 I
,OOI J
m_SmoothingOOK V
)OOV W
;OOW X
GUIPP 
.PP 
enabledPP 
=PP 
m_SmoothingPP %
;PP% &
EditorGUILayoutQQ 
.QQ 
PrefixLabelQQ '
(QQ' ('
m_SmoothingThresholdTooltipQQ( C
)QQC D
;QQD E
m_SmoothingAngleRR 
.RR 
valueRR "
=RR# $
EditorGUILayoutRR% 4
.RR4 5
SliderRR5 ;
(RR; <
m_SmoothingAngleRR< L
,RRL M
$numRRN U
,RRU V
$numRRW Z
)RRZ [
;RR[ \
GUITT 
.TT 
enabledTT 
=TT 
trueTT 
;TT 
ifVV 
(VV 
	EditorGUIVV 
.VV 
EndChangeCheckVV (
(VV( )
)VV) *
)VV* +
ProBuilderSettingsWW "
.WW" #
SaveWW# '
(WW' (
)WW( )
;WW) *
	GUILayoutYY 
.YY 
FlexibleSpaceYY #
(YY# $
)YY$ %
;YY% &
GUI[[ 
.[[ 
enabled[[ 
=[[ 
enabled[[ !
;[[! "
if]] 
(]] 
	GUILayout]] 
.]] 
Button]]  
(]]  !
$str]]! 0
)]]0 1
)]]1 2
EditorUtility^^ 
.^^ 
ShowNotification^^ .
(^^. /
DoAction^^/ 7
(^^7 8
)^^8 9
.^^9 :
notification^^: F
)^^F G
;^^G H
GUI`` 
.`` 
enabled`` 
=`` 
true`` 
;`` 
}aa 	
publiccc 
overridecc 
ActionResultcc $
DoActioncc% -
(cc- .
)cc. /
{dd 	
IEnumerableee 
<ee 

MeshFilteree "
>ee" #
topee$ '
=ee( )
	Selectionee* 3
.ee3 4

transformsee4 >
.ee> ?
Selectee? E
(eeE F
xeeF G
=>eeH J
xeeK L
.eeL M
GetComponenteeM Y
<eeY Z

MeshFiltereeZ d
>eed e
(eee f
)eef g
)eeg h
.eeh i
Whereeei n
(een o
yeeo p
=>eeq s
yeet u
!=eev x
nulleey }
)ee} ~
;ee~ 
IEnumerableff 
<ff 

MeshFilterff "
>ff" #
allff$ '
=ff( )
	Selectionff* 3
.ff3 4
gameObjectsff4 ?
.ff? @

SelectManyff@ J
(ffJ K
xffK L
=>ffM O
xffP Q
.ffQ R#
GetComponentsInChildrenffR i
<ffi j

MeshFilterffj t
>fft u
(ffu v
)ffv w
)ffw x
.ffx y
Whereffy ~
(ff~ 
x	ff Ä
=>
ffÅ É
x
ffÑ Ö
!=
ffÜ à
null
ffâ ç
)
ffç é
;
ffé è
MeshImportSettingshh 
settingshh '
=hh( )
newhh* -
MeshImportSettingshh. @
(hh@ A
)hhA B
{ii 
quadsjj 
=jj 
m_Quadsjj 
,jj  
	smoothingkk 
=kk 
m_Smoothingkk '
,kk' (
smoothingAnglell 
=ll  
m_SmoothingAnglell! 1
}mm 
;mm 
ifoo 
(oo 
topoo 
.oo 
Countoo 
(oo 
)oo 
!=oo 
alloo "
.oo" #
Countoo# (
(oo( )
)oo) *
)oo* +
{pp 
intqq 
resultqq 
=qq 
UnityEditorqq (
.qq( )
EditorUtilityqq) 6
.qq6 7 
DisplayDialogComplexqq7 K
(qqK L
$strqqL e
,qqe f
$strrr >
,rr> ?
$strss 
,ss 
$strtt 
,tt 
$struu  
)uu  !
;uu! "
ifww 
(ww 
resultww 
==ww 
$numww 
)ww  
returnxx 
DoProBuilderizexx *
(xx* +
allxx+ .
,xx. /
settingsxx0 8
)xx8 9
;xx9 :
elseyy 
ifyy 
(yy 
resultyy 
==yy  "
$numyy# $
)yy$ %
returnzz 
DoProBuilderizezz *
(zz* +
topzz+ .
,zz. /
settingszz0 8
)zz8 9
;zz9 :
else{{ 
return|| 
ActionResult|| '
.||' (
UserCanceled||( 4
;||4 5
}}} 
return 
DoProBuilderize "
(" #
all# &
,& '
settings( 0
)0 1
;1 2
}
ÄÄ 	
[
ÇÇ 	
System
ÇÇ	 
.
ÇÇ 
Obsolete
ÇÇ 
(
ÇÇ 
$str
ÇÇ g
)
ÇÇg h
]
ÇÇh i
public
ÉÉ 
static
ÉÉ 
ActionResult
ÉÉ "
DoProBuilderize
ÉÉ# 2
(
ÉÉ2 3
IEnumerable
ÑÑ 
<
ÑÑ 

MeshFilter
ÑÑ "
>
ÑÑ" #
selected
ÑÑ$ ,
,
ÑÑ, -
bool
ÖÖ 
preserveFaces
ÖÖ 
)
ÖÖ 
{
ÜÜ 	
return
áá 
DoProBuilderize
áá "
(
áá" #
selected
áá# +
,
áá+ ,
new
áá- 0 
MeshImportSettings
áá1 C
(
ááC D
)
ááD E
{
àà 
quads
ââ 
=
ââ 
preserveFaces
ââ %
,
ââ% &
	smoothing
ää 
=
ää 
false
ää !
,
ää! "
smoothingAngle
ãã 
=
ãã  
$num
ãã! #
}
åå 
)
åå 
;
åå 
}
çç 	
public
ïï 
static
ïï 
ActionResult
ïï "
DoProBuilderize
ïï# 2
(
ïï2 3
IEnumerable
ññ 
<
ññ 

MeshFilter
ññ "
>
ññ" #
selected
ññ$ ,
,
ññ, - 
MeshImportSettings
óó 
settings
óó '
)
óó' (
{
òò 	
int
öö 
i
öö 
=
öö 
$num
öö 
;
öö 
float
õõ 
count
õõ 
=
õõ 
selected
õõ "
.
õõ" #
Count
õõ# (
(
õõ( )
)
õõ) *
;
õõ* +
EditorApplication
üü 
.
üü 
	delayCall
üü '
+=
üü( *
(
üü+ ,
)
üü, -
=>
üü. 0
{
†† 
foreach
°° 
(
°° 
var
°° 
mf
°° 
in
°°  "
selected
°°# +
)
°°+ ,
{
¢¢ 
if
££ 
(
££ 
mf
££ 
.
££ 

sharedMesh
££ %
==
££& (
null
££) -
)
££- .
continue
§§  
;
§§  !

GameObject
¶¶ 
go
¶¶ !
=
¶¶" #
mf
¶¶$ &
.
¶¶& '

gameObject
¶¶' 1
;
¶¶1 2
Mesh
ßß 

sourceMesh
ßß #
=
ßß$ %
mf
ßß& (
.
ßß( )

sharedMesh
ßß) 3
;
ßß3 4
Material
®® 
[
®® 
]
®® 
sourceMaterials
®® .
=
®®/ 0
go
®®1 3
.
®®3 4
GetComponent
®®4 @
<
®®@ A
MeshRenderer
®®A M
>
®®M N
(
®®N O
)
®®O P
?
®®P Q
.
®®Q R
sharedMaterials
®®R a
;
®®a b
try
™™ 
{
´´ 
var
¨¨ 
destination
¨¨ '
=
¨¨( )
Undo
¨¨* .
.
¨¨. /
AddComponent
¨¨/ ;
<
¨¨; <
ProBuilderMesh
¨¨< J
>
¨¨J K
(
¨¨K L
go
¨¨L N
)
¨¨N O
;
¨¨O P
var
≠≠ 
meshImporter
≠≠ (
=
≠≠) *
new
≠≠+ .
MeshImporter
≠≠/ ;
(
≠≠; <

sourceMesh
≠≠< F
,
≠≠F G
sourceMaterials
≠≠H W
,
≠≠W X
destination
≠≠Y d
)
≠≠d e
;
≠≠e f
meshImporter
ÆÆ $
.
ÆÆ$ %
Import
ÆÆ% +
(
ÆÆ+ ,
settings
ÆÆ, 4
)
ÆÆ4 5
;
ÆÆ5 6
destination
∞∞ #
.
∞∞# $
Rebuild
∞∞$ +
(
∞∞+ ,
)
∞∞, -
;
∞∞- .
destination
±± #
.
±±# $
Optimize
±±$ ,
(
±±, -
)
±±- .
;
±±. /
i
≥≥ 
++
≥≥ 
;
≥≥ 
}
¥¥ 
catch
µµ 
(
µµ 
System
µµ !
.
µµ! "
	Exception
µµ" +
e
µµ, -
)
µµ- .
{
∂∂ 
Debug
∑∑ 
.
∑∑ 

LogWarning
∑∑ (
(
∑∑( )
$str
∑∑) C
+
∑∑D E
go
∑∑F H
.
∑∑H I
name
∑∑I M
+
∑∑N O
$str
∑∑P T
+
∑∑U V
e
∑∑W X
.
∑∑X Y
ToString
∑∑Y a
(
∑∑a b
)
∑∑b c
)
∑∑c d
;
∑∑d e
}
∏∏ 
UnityEditor
∫∫ 
.
∫∫  
EditorUtility
∫∫  -
.
∫∫- . 
DisplayProgressBar
∫∫. @
(
∫∫@ A
$str
∫∫A R
,
∫∫R S
mf
∫∫T V
.
∫∫V W

gameObject
∫∫W a
.
∫∫a b
name
∫∫b f
,
∫∫f g
i
∫∫h i
/
∫∫j k
count
∫∫l q
)
∫∫q r
;
∫∫r s
}
ªª 
UnityEditor
ΩΩ 
.
ΩΩ 
EditorUtility
ΩΩ )
.
ΩΩ) *
ClearProgressBar
ΩΩ* :
(
ΩΩ: ;
)
ΩΩ; <
;
ΩΩ< =
MeshSelection
ææ 
.
ææ &
OnObjectSelectionChanged
ææ 6
(
ææ6 7
)
ææ7 8
;
ææ8 9
ProBuilderEditor
øø  
.
øø  !
Refresh
øø! (
(
øø( )
)
øø) *
;
øø* +
}
¿¿ 
;
¿¿ 
if
¬¬ 
(
¬¬ 
i
¬¬ 
<
¬¬ 
$num
¬¬ 
)
¬¬ 
return
√√ 
new
√√ 
ActionResult
√√ '
(
√√' (
ActionResult
√√( 4
.
√√4 5
Status
√√5 ;
.
√√; <
Canceled
√√< D
,
√√D E
$str
√√F X
)
√√X Y
;
√√Y Z
return
ƒƒ 
new
ƒƒ 
ActionResult
ƒƒ #
(
ƒƒ# $
ActionResult
ƒƒ$ 0
.
ƒƒ0 1
Status
ƒƒ1 7
.
ƒƒ7 8
Success
ƒƒ8 ?
,
ƒƒ? @
$str
ƒƒA Q
+
ƒƒR S
i
ƒƒT U
+
ƒƒV W
(
ƒƒX Y
i
ƒƒY Z
>
ƒƒ[ \
$num
ƒƒ] ^
?
ƒƒ_ `
$str
ƒƒa k
:
ƒƒl m
$str
ƒƒn w
)
ƒƒw x
.
ƒƒx y
ToStringƒƒy Å
(ƒƒÅ Ç
)ƒƒÇ É
)ƒƒÉ Ñ
;ƒƒÑ Ö
}
≈≈ 	
}
∆∆ 
}«« Ã¯
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\VertexManipulationTool.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
abstract 
class "
VertexManipulationTool )
{ 
const 
float 
k_DefaultSnapValue &
=' (
$num) -
;- .
static 
Pref 
< 
HandleOrientation %
>% &
s_HandleOrientation' :
=; <
new= @
PrefA E
<E F
HandleOrientationF W
>W X
(X Y
$strY s
,s t
HandleOrientation	u Ü
.
Ü á
World
á å
,
å ç
SettingsScope
é õ
.
õ ú
User
ú †
)
† °
;
° ¢
static 
Pref 
< 

PivotPoint 
> 
s_PivotPoint  ,
=- .
new/ 2
Pref3 7
<7 8

PivotPoint8 B
>B C
(C D
$strD W
,W X

PivotPointY c
.c d
Centerd j
,j k
SettingsScopel y
.y z
Userz ~
)~ 
;	 Ä
[ 	
UserSetting	 
(  
UserSettingsProvider )
.) *!
developerModeCategory* ?
,? @
$strA R
,R S
$str	T ü
)
ü †
]
† °
static 
Pref 
< 

PivotPoint 
> &
s_PivotModePivotEquivalent  :
=; <
new= @
PrefA E
<E F

PivotPointF P
>P Q
(Q R
$strR s
,s t

PivotPointu 
.	 Ä
ActiveElement
Ä ç
,
ç é
SettingsScope
è ú
.
ú ù
User
ù °
)
° ¢
;
¢ £
[ 	
UserSetting	 
(  
UserSettingsProvider )
.) *!
developerModeCategory* ?
,? @
$strA f
)f g
]g h
static 
Pref 
< 
bool 
> '
s_ShowHandleSettingsInScene 5
=6 7
new8 ;
Pref< @
<@ A
boolA E
>E F
(F G
$strG l
,l m
falsen s
,s t
SettingsScope	u Ç
.
Ç É
User
É á
)
á à
;
à â
internal   
static   

PivotPoint   "$
pivotModePivotEquivalent  # ;
{!! 	
get"" 
{"" 
return"" &
s_PivotModePivotEquivalent"" 3
;""3 4
}""5 6
set## 
{## &
s_PivotModePivotEquivalent## ,
.##, -
SetValue##- 5
(##5 6
value##6 ;
)##; <
;##< =
}##> ?
}$$ 	
internal&& 
static&& 
bool&& %
showHandleSettingsInScene&& 6
{'' 	
get(( 
{(( 
return(( '
s_ShowHandleSettingsInScene(( 4
;((4 5
}((6 7
})) 	
static,, 
PivotRotation,, 
s_PivotRotation,, ,
;,,, -
public44 
static44 

PivotPoint44  

pivotPoint44! +
{55 	
get66 
{77 
SyncPivotPoint88 
(88 
)88  
;88  !
return:: 
Tools:: 
.:: 
	pivotMode:: &
==::' )
	PivotMode::* 3
.::3 4
Pivot::4 9
?;; $
pivotModePivotEquivalent;; .
:<< 

PivotPoint<<  
.<<  !
Center<<! '
;<<' (
}== 
}>> 	
static@@ 
void@@ 
SyncPivotPoint@@ "
(@@" #
)@@# $
{AA 	
varBB 
unityBB 
=BB 
s_PivotPointBB $
.BB$ %
valueBB% *
==BB+ -

PivotPointBB. 8
.BB8 9
CenterBB9 ?
?BB@ A
	PivotModeBBB K
.BBK L
CenterBBL R
:BBS T
	PivotModeBBU ^
.BB^ _
PivotBB_ d
;BBd e
ifDD 
(DD 
ToolsDD 
.DD 
	pivotModeDD 
!=DD  "
unityDD# (
)DD( )
{EE 
s_PivotPointFF 
.FF 
SetValueFF %
(FF% &
ToolsFF& +
.FF+ ,
	pivotModeFF, 5
==FF6 8
	PivotModeFF9 B
.FFB C
CenterFFC I
?FFJ K

PivotPointFFL V
.FFV W
CenterFFW ]
:FF^ _&
s_PivotModePivotEquivalentFF` z
.FFz {
value	FF{ Ä
,
FFÄ Å
true
FFÇ Ü
)
FFÜ á
;
FFá à
MeshSelectionGG 
.GG &
InvalidateElementSelectionGG 8
(GG8 9
)GG9 :
;GG: ;
}HH 
}II 	
publicNN 
staticNN 
HandleOrientationNN '
handleOrientationNN( 9
{OO 	
getPP 
{QQ 
SyncPivotRotationRR !
(RR! "
)RR" #
;RR# $
returnSS 
s_HandleOrientationSS *
;SS* +
}TT 
setUU 
{VV 
s_HandleOrientationWW #
.WW# $
SetValueWW$ ,
(WW, -
valueWW- 2
,WW2 3
trueWW4 8
)WW8 9
;WW9 :
ifYY 
(YY 
valueYY 
!=YY 
HandleOrientationYY .
.YY. /
ActiveElementYY/ <
)YY< =
ToolsZZ 
.ZZ 
pivotRotationZZ '
=ZZ( )
valueZZ* /
==ZZ0 2
HandleOrientationZZ3 D
.ZZD E
ActiveObjectZZE Q
?[[ 
PivotRotation[[ '
.[[' (
Local[[( -
:\\ 
PivotRotation\\ '
.\\' (
Global\\( .
;\\. /
MeshSelection^^ 
.^^ &
InvalidateElementSelection^^ 8
(^^8 9
)^^9 :
;^^: ;
var`` 
toolbar`` 
=`` 
typeof`` $
(``$ %
EditorWindow``% 1
)``1 2
.``2 3
Assembly``3 ;
.``; <
GetType``< C
(``C D
$str``D Y
)``Y Z
;``Z [
varaa 
repaintaa 
=aa 
toolbaraa %
.aa% &
	GetMethodaa& /
(aa/ 0
$straa0 @
,aa@ A
BindingFlagsaaB N
.aaN O
StaticaaO U
|aaV W
BindingFlagsaaX d
.aad e
	NonPublicaae n
|aao p
BindingFlagsaaq }
.aa} ~
Public	aa~ Ñ
)
aaÑ Ö
;
aaÖ Ü
repaintbb 
.bb 
Invokebb 
(bb 
nullbb #
,bb# $
nullbb% )
)bb) *
;bb* +
}cc 
}dd 	
staticgg 
voidgg 
SyncPivotRotationgg %
(gg% &
)gg& '
{hh 	
ifii 
(ii 
s_PivotRotationii 
!=ii  "
Toolsii# (
.ii( )
pivotRotationii) 6
)ii6 7
{jj 
s_HandleOrientationkk #
.kk# $
SetValuekk$ ,
(kk, -
Toolskk- 2
.kk2 3
pivotRotationkk3 @
==kkA C
PivotRotationkkD Q
.kkQ R
GlobalkkR X
?ll 
HandleOrientationll '
.ll' (
Worldll( -
:mm 
HandleOrientationmm '
.mm' (
ActiveObjectmm( 4
)mm4 5
;mm5 6
s_PivotRotationnn 
=nn  !
Toolsnn" '
.nn' (
pivotRotationnn( 5
;nn5 6
MeshSelectionoo 
.oo &
InvalidateElementSelectionoo 8
(oo8 9
)oo9 :
;oo: ;
returnpp 
;pp 
}qq 
varss 
valuess 
=ss 
s_HandleOrientationss +
.ss+ ,
valuess, 1
;ss1 2
vartt 
unitytt 
=tt 
valuett 
==tt  
HandleOrientationtt! 2
.tt2 3
ActiveObjecttt3 ?
?tt@ A
PivotRotationttB O
.ttO P
LocalttP U
:ttV W
PivotRotationttX e
.tte f
Globalttf l
;ttl m
ifvv 
(vv 
valuevv 
!=vv 
HandleOrientationvv *
.vv* +
ActiveElementvv+ 8
)vv8 9
{ww 
ifxx 
(xx 
unityxx 
!=xx 
Toolsxx "
.xx" #
pivotRotationxx# 0
)xx0 1
{yy 
s_HandleOrientationzz '
.zz' (
SetValuezz( 0
(zz0 1
Toolszz1 6
.zz6 7
pivotRotationzz7 D
==zzE G
PivotRotationzzH U
.zzU V
GlobalzzV \
?{{ 
HandleOrientation{{ /
.{{/ 0
World{{0 5
:|| 
HandleOrientation|| /
.||/ 0
ActiveObject||0 <
,||< =
true}} 
)}} 
;}} 
MeshSelection~~ !
.~~! "&
InvalidateElementSelection~~" <
(~~< =
)~~= >
;~~> ?
} 
}
ÄÄ 
}
ÅÅ 	
public
ÜÜ 
static
ÜÜ 
event
ÜÜ 
Action
ÜÜ "
<
ÜÜ" #
IEnumerable
ÜÜ# .
<
ÜÜ. /
ProBuilderMesh
ÜÜ/ =
>
ÜÜ= >
>
ÜÜ> ?#
afterMeshModification
ÜÜ@ U
;
ÜÜU V
public
ãã 
static
ãã 
event
ãã 
Action
ãã "
<
ãã" #
IEnumerable
ãã# .
<
ãã. /
ProBuilderMesh
ãã/ =
>
ãã= >
>
ãã> ?$
beforeMeshModification
ãã@ V
;
ããV W
internal
çç 
static
çç 
Pref
çç 
<
çç 
bool
çç !
>
çç! "#
s_ExtrudeEdgesAsGroup
çç# 8
=
çç9 :
new
çç; >
Pref
çç? C
<
ççC D
bool
ççD H
>
ççH I
(
ççI J
$str
ççJ f
,
ççf g
true
ççh l
)
ççl m
;
ççm n
internal
éé 
static
éé 
Pref
éé 
<
éé 
ExtrudeMethod
éé *
>
éé* +
s_ExtrudeMethod
éé, ;
=
éé< =
new
éé> A
Pref
ééB F
<
ééF G
ExtrudeMethod
ééG T
>
ééT U
(
ééU V
$str
ééV l
,
éél m
ExtrudeMethod
één {
.
éé{ |

FaceNormaléé| Ü
)ééÜ á
;ééá à
Vector3
êê 
m_HandlePosition
êê  
;
êê  !

Quaternion
ëë 
m_HandleRotation
ëë #
;
ëë# $
Vector3
íí $
m_HandlePositionOrigin
íí &
;
íí& '

Quaternion
ìì $
m_HandleRotationOrigin
ìì )
;
ìì) *
bool
îî 
m_IsEditing
îî 
;
îî 
Vector3
ññ 
m_MoveSnapValue
ññ 
=
ññ  !
new
ññ" %
Vector3
ññ& -
(
ññ- . 
k_DefaultSnapValue
ññ. @
,
ññ@ A 
k_DefaultSnapValue
ññB T
,
ññT U 
k_DefaultSnapValue
ññV h
)
ññh i
;
ññi j
bool
óó "
m_SnapAxisConstraint
óó !
=
óó" #
true
óó$ (
;
óó( )
bool
òò  
m_WorldSnapEnabled
òò 
;
òò  
static
öö 
bool
öö 
s_Initialized
öö !
;
öö! "
static
õõ 
	FieldInfo
õõ 
s_VertexDragging
õõ )
;
õõ) *
static
úú 

MethodInfo
úú !
s_FindNearestVertex
úú -
;
úú- .
static
ùù 
object
ùù 
[
ùù 
]
ùù *
s_FindNearestVertexArguments
ùù 4
=
ùù5 6
new
ùù7 :
object
ùù; A
[
ùùA B
]
ùùB C
{
ùùD E
null
ùùF J
,
ùùJ K
null
ùùL P
,
ùùP Q
null
ùùR V
}
ùùW X
;
ùùX Y
internal
üü 
IEnumerable
üü 
<
üü %
MeshAndElementSelection
üü 4
>
üü4 5
elementSelection
üü6 F
{
†† 	
get
°° 
{
°° 
return
°° 
MeshSelection
°° &
.
°°& '
elementSelection
°°' 7
;
°°7 8
}
°°9 :
}
¢¢ 	
	protected
§§ 
static
§§ 
bool
§§ 
vertexDragging
§§ ,
{
•• 	
get
¶¶ 
{
ßß 
Init
®® 
(
®® 
)
®® 
;
®® 
return
©© 
s_VertexDragging
©© '
!=
©©( *
null
©©+ /
&&
©©0 2
(
©©3 4
bool
©©4 8
)
©©8 9
s_VertexDragging
©©9 I
.
©©I J
GetValue
©©J R
(
©©R S
null
©©S W
)
©©W X
;
©©X Y
}
™™ 
}
´´ 	
	protected
≠≠ 
bool
≠≠ 
	isEditing
≠≠  
{
ÆÆ 	
get
ØØ 
{
ØØ 
return
ØØ 
m_IsEditing
ØØ $
;
ØØ$ %
}
ØØ& '
}
∞∞ 	
	protected
≤≤ 
Event
≤≤ 
currentEvent
≤≤ $
{
≤≤% &
get
≤≤' *
;
≤≤* +
private
≤≤, 3
set
≤≤4 7
;
≤≤7 8
}
≤≤9 :
	protected
¥¥ 
Vector3
¥¥ "
handlePositionOrigin
¥¥ .
{
µµ 	
get
∂∂ 
{
∂∂ 
return
∂∂ $
m_HandlePositionOrigin
∂∂ /
;
∂∂/ 0
}
∂∂1 2
}
∑∑ 	
	protected
ππ 

Quaternion
ππ )
handleRotationOriginInverse
ππ 8
{
ππ9 :
get
ππ; >
;
ππ> ?
private
ππ@ G
set
ππH K
;
ππK L
}
ππM N
	protected
ªª 

Quaternion
ªª "
handleRotationOrigin
ªª 1
{
ºº 	
get
ΩΩ 
{
ΩΩ 
return
ΩΩ $
m_HandleRotationOrigin
ΩΩ /
;
ΩΩ/ 0
}
ΩΩ1 2
}
ææ 	
	protected
¿¿ 
Vector3
¿¿ 
	snapValue
¿¿ #
{
¡¡ 	
get
¬¬ 
{
¬¬ 
return
¬¬ 
m_MoveSnapValue
¬¬ (
;
¬¬( )
}
¬¬* +
}
√√ 	
	protected
≈≈ 
bool
≈≈  
snapAxisConstraint
≈≈ )
{
∆∆ 	
get
«« 
{
«« 
return
«« "
m_SnapAxisConstraint
«« -
;
««- .
}
««/ 0
}
»» 	
	protected
   
bool
   
worldSnapEnabled
   '
{
ÀÀ 	
get
ÃÃ 
{
ÃÃ 
return
ÃÃ  
m_WorldSnapEnabled
ÃÃ +
;
ÃÃ+ ,
}
ÃÃ- .
}
ÕÕ 	
	protected
œœ 
bool
œœ !
relativeSnapEnabled
œœ *
{
–– 	
get
—— 
{
—— 
return
—— $
ProBuilderSnapSettings
—— /
.
——/ 0
snapMode
——0 8
==
——9 ;
SnapMode
——< D
.
——D E
Relative
——E M
;
——M N
}
——O P
}
““ 	
	protected
‘‘ 
float
‘‘ !
GetSnapValueForAxis
‘‘ +
(
‘‘+ ,
Vector3Mask
‘‘, 7
axes
‘‘8 <
)
‘‘< =
{
’’ 	
return
÷÷ 
UnityEngine
÷÷ 
.
÷÷ 

ProBuilder
÷÷ )
.
÷÷) *
Math
÷÷* .
.
÷÷. /
Sum
÷÷/ 2
(
÷÷2 3
axes
÷÷3 7
*
÷÷8 9
	snapValue
÷÷: C
)
÷÷C D
;
÷÷D E
}
◊◊ 	
static
ŸŸ 
void
ŸŸ 
Init
ŸŸ 
(
ŸŸ 
)
ŸŸ 
{
⁄⁄ 	
if
€€ 
(
€€ 
s_Initialized
€€ 
)
€€ 
return
‹‹ 
;
‹‹ 
s_Initialized
›› 
=
›› 
true
››  
;
››  !
s_VertexDragging
ﬁﬁ 
=
ﬁﬁ 
typeof
ﬁﬁ %
(
ﬁﬁ% &
Tools
ﬁﬁ& +
)
ﬁﬁ+ ,
.
ﬁﬁ, -
GetField
ﬁﬁ- 5
(
ﬁﬁ5 6
$str
ﬁﬁ6 F
,
ﬁﬁF G
BindingFlags
ﬁﬁH T
.
ﬁﬁT U
	NonPublic
ﬁﬁU ^
|
ﬁﬁ_ `
BindingFlags
ﬁﬁa m
.
ﬁﬁm n
Static
ﬁﬁn t
)
ﬁﬁt u
;
ﬁﬁu v!
s_FindNearestVertex
ﬂﬂ 
=
ﬂﬂ  !
typeof
ﬂﬂ" (
(
ﬂﬂ( )
HandleUtility
ﬂﬂ) 6
)
ﬂﬂ6 7
.
ﬂﬂ7 8
	GetMethod
ﬂﬂ8 A
(
ﬂﬂA B
$str
ﬂﬂB U
,
ﬂﬂU V
BindingFlags
‡‡  
.
‡‡  !
Static
‡‡! '
|
‡‡( )
BindingFlags
‡‡* 6
.
‡‡6 7
	NonPublic
‡‡7 @
|
‡‡A B
BindingFlags
‡‡C O
.
‡‡O P
Instance
‡‡P X
)
‡‡X Y
;
‡‡Y Z
}
·· 	
internal
„„ 
abstract
„„ %
MeshAndElementSelection
„„ 1!
GetElementSelection
„„2 E
(
„„E F
ProBuilderMesh
„„F T
mesh
„„U Y
,
„„Y Z

PivotPoint
„„[ e
pivot
„„f k
)
„„k l
;
„„l m
public
ÂÂ 
void
ÂÂ 

OnSceneGUI
ÂÂ 
(
ÂÂ 
Event
ÂÂ $
evt
ÂÂ% (
)
ÂÂ( )
{
ÊÊ 	
SyncPivotPoint
ËË 
(
ËË 
)
ËË 
;
ËË 
SyncPivotRotation
ÈÈ 
(
ÈÈ 
)
ÈÈ 
;
ÈÈ  
currentEvent
ÎÎ 
=
ÎÎ 
evt
ÎÎ 
;
ÎÎ 
if
ÌÌ 
(
ÌÌ 
evt
ÌÌ 
.
ÌÌ 
type
ÌÌ 
==
ÌÌ 
	EventType
ÌÌ %
.
ÌÌ% &
MouseUp
ÌÌ& -
||
ÌÌ. 0
evt
ÌÌ1 4
.
ÌÌ4 5
type
ÌÌ5 9
==
ÌÌ: <
	EventType
ÌÌ= F
.
ÌÌF G
Ignore
ÌÌG M
)
ÌÌM N

FinishEdit
ÓÓ 
(
ÓÓ 
)
ÓÓ 
;
ÓÓ 
switch
 
(
 
ProBuilderEditor
 $
.
$ %

selectMode
% /
)
/ 0
{
ÒÒ 
case
ÚÚ 

SelectMode
ÚÚ 
.
ÚÚ  
Face
ÚÚ  $
:
ÚÚ$ %
case
ÛÛ 

SelectMode
ÛÛ 
.
ÛÛ  
TextureFace
ÛÛ  +
:
ÛÛ+ ,
if
ÙÙ 
(
ÙÙ 
MeshSelection
ÙÙ %
.
ÙÙ% &
selectedFaceCount
ÙÙ& 7
<
ÙÙ8 9
$num
ÙÙ: ;
)
ÙÙ; <
return
ıı 
;
ıı 
break
ˆˆ 
;
ˆˆ 
case
¯¯ 

SelectMode
¯¯ 
.
¯¯  
Edge
¯¯  $
:
¯¯$ %
case
˘˘ 

SelectMode
˘˘ 
.
˘˘  
TextureEdge
˘˘  +
:
˘˘+ ,
if
˙˙ 
(
˙˙ 
MeshSelection
˙˙ %
.
˙˙% &
selectedEdgeCount
˙˙& 7
<
˙˙8 9
$num
˙˙: ;
)
˙˙; <
return
˚˚ 
;
˚˚ 
break
¸¸ 
;
¸¸ 
case
˛˛ 

SelectMode
˛˛ 
.
˛˛  
Vertex
˛˛  &
:
˛˛& '
case
ˇˇ 

SelectMode
ˇˇ 
.
ˇˇ  
TextureVertex
ˇˇ  -
:
ˇˇ- .
if
ÄÄ 
(
ÄÄ 
MeshSelection
ÄÄ %
.
ÄÄ% &!
selectedVertexCount
ÄÄ& 9
<
ÄÄ: ;
$num
ÄÄ< =
)
ÄÄ= >
return
ÅÅ 
;
ÅÅ 
break
ÇÇ 
;
ÇÇ 
}
ÉÉ 
if
ÖÖ 
(
ÖÖ 
!
ÖÖ 
m_IsEditing
ÖÖ 
)
ÖÖ 
{
ÜÜ 
m_HandlePosition
áá  
=
áá! "
MeshSelection
áá# 0
.
áá0 1
GetHandlePosition
áá1 B
(
ááB C
)
ááC D
;
ááD E
m_HandleRotation
àà  
=
àà! "
MeshSelection
àà# 0
.
àà0 1
GetHandleRotation
àà1 B
(
ààB C
)
ààC D
;
ààD E$
m_HandlePositionOrigin
ää &
=
ää' (
m_HandlePosition
ää) 9
;
ää9 :$
m_HandleRotationOrigin
ãã &
=
ãã' (
m_HandleRotation
ãã) 9
;
ãã9 :)
handleRotationOriginInverse
åå +
=
åå, -

Quaternion
åå. 8
.
åå8 9
Inverse
åå9 @
(
åå@ A
m_HandleRotation
ååA Q
)
ååQ R
;
ååR S
}
çç 
DoTool
èè 
(
èè 
m_HandlePosition
èè #
,
èè# $
m_HandleRotation
èè% 5
)
èè5 6
;
èè6 7
}
êê 	
	protected
íí 
abstract
íí 
void
íí 
DoTool
íí  &
(
íí& '
Vector3
íí' .
handlePosition
íí/ =
,
íí= >

Quaternion
íí? I
handleRotation
ííJ X
)
ííX Y
;
ííY Z
	protected
îî 
virtual
îî 
void
îî 
OnToolEngaged
îî ,
(
îî, -
)
îî- .
{
îî/ 0
}
îî0 1
	protected
ññ 
virtual
ññ 
void
ññ 
OnToolDisengaged
ññ /
(
ññ/ 0
)
ññ0 1
{
ññ2 3
}
ññ3 4
	protected
òò 
void
òò 
	BeginEdit
òò  
(
òò  !
string
òò! '
undoMessage
òò( 3
)
òò3 4
{
ôô 	
if
öö 
(
öö 
m_IsEditing
öö 
)
öö 
return
õõ 
;
õõ 
Lightmapping
ûû 
.
ûû  
PushGIWorkflowMode
ûû +
(
ûû+ ,
)
ûû, -
;
ûû- .
var
†† 
	selection
†† 
=
†† 
MeshSelection
†† )
.
††) *
topInternal
††* 5
.
††5 6
ToArray
††6 =
(
††= >
)
††> ?
;
††? @
UndoUtility
¢¢ 
.
¢¢ (
RegisterCompleteObjectUndo
¢¢ 2
(
¢¢2 3
	selection
¢¢3 <
,
¢¢< =
string
¢¢> D
.
¢¢D E
IsNullOrEmpty
¢¢E R
(
¢¢R S
undoMessage
¢¢S ^
)
¢¢^ _
?
¢¢` a
$str
¢¢b s
:
¢¢t u
undoMessage¢¢v Å
)¢¢Å Ç
;¢¢Ç É
if
§§ 
(
§§ $
beforeMeshModification
§§ &
!=
§§' )
null
§§* .
)
§§. /$
beforeMeshModification
•• &
(
••& '
	selection
••' 0
)
••0 1
;
••1 2
if
ßß 
(
ßß 
currentEvent
ßß 
.
ßß 
shift
ßß "
)
ßß" #
Extrude
®® 
(
®® 
)
®® 
;
®® 
m_IsEditing
™™ 
=
™™ 
true
™™ 
;
™™  
m_WorldSnapEnabled
¨¨ 
=
¨¨  $
ProBuilderSnapSettings
¨¨! 7
.
¨¨7 8
snapMode
¨¨8 @
==
¨¨A C
SnapMode
¨¨D L
.
¨¨L M
World
¨¨M R
;
¨¨R S"
m_SnapAxisConstraint
≠≠  
=
≠≠! "$
ProBuilderSnapSettings
≠≠# 9
.
≠≠9 :

snapMethod
≠≠: D
==
≠≠E G
SnapAxis
≠≠H P
.
≠≠P Q

ActiveAxis
≠≠Q [
;
≠≠[ \
ProGridsInterface
≠≠] n
.
≠≠n o!
UseAxisConstraints≠≠o Å
(≠≠Å Ç
)≠≠Ç É
;≠≠É Ñ
m_MoveSnapValue
ÆÆ 
=
ÆÆ  
m_WorldSnapEnabled
ÆÆ 0
?
ÆÆ1 2$
ProBuilderSnapSettings
ÆÆ3 I
.
ÆÆI J 
worldSnapMoveValue
ÆÆJ \
:
ÆÆ] ^$
ProBuilderSnapSettings
ÆÆ_ u
.
ÆÆu v'
incrementalSnapMoveValueÆÆv é
;ÆÆé è
foreach
∞∞ 
(
∞∞ 
var
∞∞ 
mesh
∞∞ 
in
∞∞  
	selection
∞∞! *
)
∞∞* +
{
±± 
mesh
≤≤ 
.
≤≤ 
ToMesh
≤≤ 
(
≤≤ 
)
≤≤ 
;
≤≤ 
mesh
≥≥ 
.
≥≥ 
Refresh
≥≥ 
(
≥≥ 
)
≥≥ 
;
≥≥ 
}
¥¥ 
OnToolEngaged
∂∂ 
(
∂∂ 
)
∂∂ 
;
∂∂ 
}
∑∑ 	
	protected
ππ 
void
ππ 

FinishEdit
ππ !
(
ππ! "
)
ππ" #
{
∫∫ 	
if
ªª 
(
ªª 
!
ªª 
m_IsEditing
ªª 
)
ªª 
return
ºº 
;
ºº 
Lightmapping
ææ 
.
ææ 
PopGIWorkflowMode
ææ *
(
ææ* +
)
ææ+ ,
;
ææ, -
OnToolDisengaged
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿ 
var
¬¬ 
	selection
¬¬ 
=
¬¬ 
MeshSelection
¬¬ )
.
¬¬) *
topInternal
¬¬* 5
.
¬¬5 6
ToArray
¬¬6 =
(
¬¬= >
)
¬¬> ?
;
¬¬? @
foreach
ƒƒ 
(
ƒƒ 
var
ƒƒ 
mesh
ƒƒ 
in
ƒƒ  
	selection
ƒƒ! *
)
ƒƒ* +
{
≈≈ 
mesh
∆∆ 
.
∆∆ 
ToMesh
∆∆ 
(
∆∆ 
)
∆∆ 
;
∆∆ 
mesh
«« 
.
«« 
Refresh
«« 
(
«« 
)
«« 
;
«« 
mesh
»» 
.
»» 
Optimize
»» 
(
»» 
)
»» 
;
»»  
}
…… 
ProBuilderEditor
ÀÀ 
.
ÀÀ 
Refresh
ÀÀ $
(
ÀÀ$ %
)
ÀÀ% &
;
ÀÀ& '
if
ÕÕ 
(
ÕÕ #
afterMeshModification
ÕÕ %
!=
ÕÕ& (
null
ÕÕ) -
)
ÕÕ- .#
afterMeshModification
ŒŒ %
(
ŒŒ% &
	selection
ŒŒ& /
)
ŒŒ/ 0
;
ŒŒ0 1
m_IsEditing
–– 
=
–– 
false
–– 
;
––  
}
—— 	
static
”” 
void
”” 
Extrude
”” 
(
”” 
)
”” 
{
‘‘ 	
int
’’ 
ef
’’ 
=
’’ 
$num
’’ 
;
’’ 
var
◊◊ 
	selection
◊◊ 
=
◊◊ 
MeshSelection
◊◊ )
.
◊◊) *
topInternal
◊◊* 5
;
◊◊5 6
var
ÿÿ 

selectMode
ÿÿ 
=
ÿÿ 
ProBuilderEditor
ÿÿ -
.
ÿÿ- .

selectMode
ÿÿ. 8
;
ÿÿ8 9
foreach
⁄⁄ 
(
⁄⁄ 
var
⁄⁄ 
mesh
⁄⁄ 
in
⁄⁄  
	selection
⁄⁄! *
)
⁄⁄* +
{
€€ 
switch
‹‹ 
(
‹‹ 

selectMode
‹‹ "
)
‹‹" #
{
›› 
case
ﬁﬁ 

SelectMode
ﬁﬁ #
.
ﬁﬁ# $
Edge
ﬁﬁ$ (
:
ﬁﬁ( )
if
ﬂﬂ 
(
ﬂﬂ 
mesh
ﬂﬂ  
.
ﬂﬂ  !
selectedFaceCount
ﬂﬂ! 2
>
ﬂﬂ3 4
$num
ﬂﬂ5 6
)
ﬂﬂ6 7
goto
‡‡  
default
‡‡! (
;
‡‡( )
Edge
‚‚ 
[
‚‚ 
]
‚‚ 
newEdges
‚‚ '
=
‚‚( )
mesh
‚‚* .
.
‚‚. /
Extrude
‚‚/ 6
(
‚‚6 7
mesh
‚‚7 ;
.
‚‚; <
selectedEdges
‚‚< I
,
‚‚I J
$num
„„  '
,
„„' (#
s_ExtrudeEdgesAsGroup
‰‰  5
,
‰‰5 6
ProBuilderEditor
ÂÂ  0
.
ÂÂ0 1'
s_AllowNonManifoldActions
ÂÂ1 J
)
ÂÂJ K
;
ÂÂK L
if
ÁÁ 
(
ÁÁ 
newEdges
ÁÁ $
!=
ÁÁ% '
null
ÁÁ( ,
)
ÁÁ, -
{
ËË 
ef
ÈÈ 
+=
ÈÈ !
newEdges
ÈÈ" *
.
ÈÈ* +
Length
ÈÈ+ 1
;
ÈÈ1 2
mesh
ÍÍ  
.
ÍÍ  !
SetSelectedEdges
ÍÍ! 1
(
ÍÍ1 2
newEdges
ÍÍ2 :
)
ÍÍ: ;
;
ÍÍ; <
}
ÎÎ 
break
ÏÏ 
;
ÏÏ 
default
ÓÓ 
:
ÓÓ 
int
ÔÔ 
len
ÔÔ 
=
ÔÔ  !
mesh
ÔÔ" &
.
ÔÔ& '#
selectedFacesInternal
ÔÔ' <
.
ÔÔ< =
Length
ÔÔ= C
;
ÔÔC D
if
ÒÒ 
(
ÒÒ 
len
ÒÒ 
>
ÒÒ  !
$num
ÒÒ" #
)
ÒÒ# $
{
ÚÚ 
mesh
ÛÛ  
.
ÛÛ  !
Extrude
ÛÛ! (
(
ÛÛ( )
mesh
ÛÛ) -
.
ÛÛ- .#
selectedFacesInternal
ÛÛ. C
,
ÛÛC D
s_ExtrudeMethod
ÛÛE T
,
ÛÛT U
$num
ÛÛV ]
)
ÛÛ] ^
;
ÛÛ^ _
mesh
ÙÙ  
.
ÙÙ  !
SetSelectedFaces
ÙÙ! 1
(
ÙÙ1 2
mesh
ÙÙ2 6
.
ÙÙ6 7#
selectedFacesInternal
ÙÙ7 L
)
ÙÙL M
;
ÙÙM N
ef
ıı 
+=
ıı !
len
ıı" %
;
ıı% &
}
ˆˆ 
break
¯¯ 
;
¯¯ 
}
˘˘ 
mesh
˚˚ 
.
˚˚ 
ToMesh
˚˚ 
(
˚˚ 
)
˚˚ 
;
˚˚ 
mesh
¸¸ 
.
¸¸ 
Refresh
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
}
˝˝ 
if
ˇˇ 
(
ˇˇ 
ef
ˇˇ 
>
ˇˇ 
$num
ˇˇ 
)
ˇˇ 
{
ÄÄ 
EditorUtility
ÅÅ 
.
ÅÅ 
ShowNotification
ÅÅ .
(
ÅÅ. /
$str
ÅÅ/ 8
)
ÅÅ8 9
;
ÅÅ9 :
ProBuilderEditor
ÇÇ  
.
ÇÇ  !
Refresh
ÇÇ! (
(
ÇÇ( )
)
ÇÇ) *
;
ÇÇ* +
}
ÉÉ 
}
ÑÑ 	
	protected
åå 
static
åå 
bool
åå 
FindNearestVertex
åå /
(
åå/ 0
Vector2
åå0 7
mousePosition
åå8 E
,
ååE F
out
ååG J
Vector3
ååK R
vertex
ååS Y
)
ååY Z
{
çç 	*
s_FindNearestVertexArguments
éé (
[
éé( )
$num
éé) *
]
éé* +
=
éé, -
mousePosition
éé. ;
;
éé; <
if
êê 
(
êê !
s_FindNearestVertex
êê #
==
êê$ &
null
êê' +
)
êê+ ,!
s_FindNearestVertex
ëë #
=
ëë$ %
typeof
ëë& ,
(
ëë, -
HandleUtility
ëë- :
)
ëë: ;
.
ëë; <
	GetMethod
ëë< E
(
ëëE F
$str
ëëF Y
,
ëëY Z
BindingFlags
íí $
.
íí$ %
Static
íí% +
|
íí, -
BindingFlags
íí. :
.
íí: ;
	NonPublic
íí; D
|
ííE F
BindingFlags
ííG S
.
ííS T
Instance
ííT \
)
íí\ ]
;
íí] ^
object
îî 
result
îî 
=
îî !
s_FindNearestVertex
îî /
.
îî/ 0
Invoke
îî0 6
(
îî6 7
null
îî7 ;
,
îî; <*
s_FindNearestVertexArguments
îî= Y
)
îîY Z
;
îîZ [
vertex
ïï 
=
ïï 
(
ïï 
bool
ïï 
)
ïï 
result
ïï !
?
ïï" #
(
ïï$ %
Vector3
ïï% ,
)
ïï, -*
s_FindNearestVertexArguments
ïï- I
[
ïïI J
$num
ïïJ K
]
ïïK L
:
ïïM N
Vector3
ïïO V
.
ïïV W
zero
ïïW [
;
ïï[ \
return
ññ 
(
ññ 
bool
ññ 
)
ññ 
result
ññ 
;
ññ  
}
óó 	
}
òò 
}ôô Õä
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\ReflectionUtility.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{		 
static 

class 
ReflectionUtility "
{ 
const 
BindingFlags 

k_AllFlags %
=& '
BindingFlags( 4
.4 5
Instance5 =
|> ?
BindingFlags@ L
.L M
StaticM S
|T U
BindingFlagsV b
.b c
Publicc i
|j k
BindingFlagsl x
.x y
	NonPublic	y Ç
;
Ç É
public 
static 
object 
GetComponent )
() *
this* .

GameObject/ 9

gameObject: D
,D E
stringF L
componentTypeNameM ^
)^ _
{ 	
return 

gameObject 
. 
GetComponent *
(* +
componentTypeName+ <
)< =
;= >
} 	
public"" 
static"" 
Type"" 
GetType"" "
(""" #
string""# )
type""* .
,"". /
string""0 6
assembly""7 ?
=""@ A
null""B F
)""F G
{## 	
Type$$ 
t$$ 
=$$ 
Type$$ 
.$$ 
GetType$$ !
($$! "
type$$" &
)$$& '
;$$' (
if&& 
(&& 
t&& 
==&& 
null&& 
)&& 
{'' 
IEnumerable(( 
<(( 
Assembly(( $
>(($ %

assemblies((& 0
=((1 2
	AppDomain((3 <
.((< =
CurrentDomain((= J
.((J K
GetAssemblies((K X
(((X Y
)((Y Z
;((Z [
if** 
(** 
assembly** 
!=** 
null**  $
)**$ %

assemblies++ 
=++  

assemblies++! +
.+++ ,
Where++, 1
(++1 2
x++2 3
=>++4 6
x++7 8
.++8 9
FullName++9 A
.++A B
Contains++B J
(++J K
assembly++K S
)++S T
)++T U
;++U V
foreach-- 
(-- 
Assembly-- !
ass--" %
in--& (

assemblies--) 3
)--3 4
{.. 
t// 
=// 
ass// 
.// 
GetType// #
(//# $
type//$ (
)//( )
;//) *
if11 
(11 
t11 
!=11 
null11 !
)11! "
return22 
t22  
;22  !
}33 
}44 
return66 
t66 
;66 
}77 	
publicAA 
staticAA 
objectAA 
GetValueAA %
(AA% &
objectAA& ,
targetAA- 3
,AA3 4
stringAA5 ;
typeAA< @
,AA@ A
stringAAB H
memberAAI O
,AAO P
BindingFlagsAAQ ]
flagsAA^ c
=AAd e

k_AllFlagsAAf p
)AAp q
{BB 	
TypeCC 
tCC 
=CC 
GetTypeCC 
(CC 
typeCC !
)CC! "
;CC" #
ifEE 
(EE 
tEE 
==EE 
nullEE 
)EE 
{FF 
LogGG 
.GG 
WarningGG 
(GG 
$strGG :
,GG: ;
typeGG< @
)GG@ A
;GGA B
returnHH 
nullHH 
;HH 
}II 
elseJJ 
returnKK 
GetValueKK 
(KK  
targetKK  &
,KK& '
tKK( )
,KK) *
memberKK+ 1
,KK1 2
flagsKK3 8
)KK8 9
;KK9 :
}LL 	
publicNN 
staticNN 
objectNN 
GetValueNN %
(NN% &
objectNN& ,
targetNN- 3
,NN3 4
TypeNN5 9
typeNN: >
,NN> ?
stringNN@ F
memberNNG M
,NNM N
BindingFlagsNNO [
flagsNN\ a
=NNb c

k_AllFlagsNNd n
)NNn o
{OO 	
PropertyInfoPP 
piPP 
=PP 
typePP "
.PP" #
GetPropertyPP# .
(PP. /
memberPP/ 5
,PP5 6
flagsPP7 <
)PP< =
;PP= >
ifRR 
(RR 
piRR 
!=RR 
nullRR 
)RR 
returnSS 
piSS 
.SS 
GetValueSS "
(SS" #
targetSS# )
,SS) *
nullSS+ /
)SS/ 0
;SS0 1
	FieldInfoUU 
fiUU 
=UU 
typeUU 
.UU  
GetFieldUU  (
(UU( )
memberUU) /
,UU/ 0
flagsUU1 6
)UU6 7
;UU7 8
ifWW 
(WW 
fiWW 
!=WW 
nullWW 
)WW 
returnXX 
fiXX 
.XX 
GetValueXX "
(XX" #
targetXX# )
)XX) *
;XX* +
returnZZ 
nullZZ 
;ZZ 
}[[ 	
publicee 
staticee 
boolee 
SetValueee #
(ee# $
objectee$ *
targetee+ 1
,ee1 2
stringee3 9
memberee: @
,ee@ A
objecteeB H
valueeeI N
,eeN O
BindingFlagseeP \
flagsee] b
=eec d

k_AllFlagseee o
)eeo p
{ff 	
ifgg 
(gg 
targetgg 
==gg 
nullgg 
)gg 
returnhh 
falsehh 
;hh 
PropertyInfojj 
pijj 
=jj 
targetjj $
.jj$ %
GetTypejj% ,
(jj, -
)jj- .
.jj. /
GetPropertyjj/ :
(jj: ;
memberjj; A
,jjA B
flagsjjC H
)jjH I
;jjI J
ifll 
(ll 
pill 
!=ll 
nullll 
)ll 
pimm 
.mm 
SetValuemm 
(mm 
targetmm "
,mm" #
valuemm$ )
,mm) *
flagsmm+ 0
,mm0 1
nullmm2 6
,mm6 7
nullmm8 <
,mm< =
nullmm> B
)mmB C
;mmC D
	FieldInfooo 
fioo 
=oo 
targetoo !
.oo! "
GetTypeoo" )
(oo) *
)oo* +
.oo+ ,
GetFieldoo, 4
(oo4 5
memberoo5 ;
,oo; <
flagsoo= B
)ooB C
;ooC D
ifqq 
(qq 
fiqq 
!=qq 
nullqq 
)qq 
firr 
.rr 
SetValuerr 
(rr 
targetrr "
,rr" #
valuerr$ )
)rr) *
;rr* +
returntt 
pitt 
!=tt 
nulltt 
||tt  
fitt! #
!=tt$ &
nulltt' +
;tt+ ,
}uu 	
publicww 
staticww 
Delegateww 
GetOpenDelegateww .
<ww. /
Tww/ 0
>ww0 1
(ww1 2
Typeww2 6
typeww7 ;
,ww; <
stringww= C

methodNamewwD N
)wwN O
{xx 	

MethodInfoyy 

methodInfoyy !
=yy" #
typeyy$ (
.yy( )
	GetMethodyy) 2
(yy2 3

methodNameyy3 =
)yy= >
;yy> ?
ifzz 
(zz 

methodInfozz 
!=zz 
nullzz "
)zz" #
return{{ 
Delegate{{ 
.{{  
CreateDelegate{{  .
({{. /
typeof{{/ 5
({{5 6
T{{6 7
){{7 8
,{{8 9

methodInfo{{: D
){{D E
;{{E F
else|| 
{}} 
Log~~ 
.~~ 
Warning~~ 
(~~ 
$str~~ E
,~~E F

methodName~~G Q
,~~Q R
type~~S W
.~~W X
ToString~~X `
(~~` a
)~~a b
)~~b c
;~~c d
} 
return
ÄÄ 
null
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
public
ÉÉ 
static
ÉÉ 
Delegate
ÉÉ 
GetOpenDelegate
ÉÉ .
<
ÉÉ. /
T
ÉÉ/ 0
>
ÉÉ0 1
(
ÉÉ1 2
Type
ÉÉ2 6
type
ÉÉ7 ;
,
ÉÉ; <
string
ÉÉ= C

methodName
ÉÉD N
,
ÉÉN O
BindingFlags
ÉÉP \
bindings
ÉÉ] e
)
ÉÉe f
{
ÑÑ 	

MethodInfo
ÖÖ 

methodInfo
ÖÖ !
=
ÖÖ" #
type
ÖÖ$ (
.
ÖÖ( )
	GetMethod
ÖÖ) 2
(
ÖÖ2 3

methodName
ÖÖ3 =
,
ÖÖ= >
bindings
ÖÖ? G
)
ÖÖG H
;
ÖÖH I
if
áá 
(
áá 

methodInfo
áá 
!=
áá 
null
áá "
)
áá" #
return
àà 
Delegate
àà 
.
àà  
CreateDelegate
àà  .
(
àà. /
typeof
àà/ 5
(
àà5 6
T
àà6 7
)
àà7 8
,
àà8 9

methodInfo
àà: D
)
ààD E
;
ààE F
Log
ää 
.
ää 
Warning
ää 
(
ää 
$str
ää A
,
ääA B

methodName
ääC M
,
ääM N
type
ääO S
.
ääS T
ToString
ääT \
(
ää\ ]
)
ää] ^
)
ää^ _
;
ää_ `
return
åå 
null
åå 
;
åå 
}
çç 	
public
èè 
static
èè 
Delegate
èè '
GetOpenDelegateOnProperty
èè 8
<
èè8 9
T
èè9 :
>
èè: ;
(
èè; <
Type
èè< @
type
èèA E
,
èèE F
string
èèG M
propertyName
èèN Z
)
èèZ [
{
êê 	
PropertyInfo
ëë 
propertyInfo
ëë %
=
ëë& '
type
ëë( ,
.
ëë, -
GetProperty
ëë- 8
(
ëë8 9
propertyName
ëë9 E
)
ëëE F
;
ëëF G
if
ìì 
(
ìì 
propertyInfo
ìì 
!=
ìì 
null
ìì  $
)
ìì$ %
{
îî 

MethodInfo
ïï 
get
ïï 
=
ïï  
propertyInfo
ïï! -
.
ïï- .
GetGetMethod
ïï. :
(
ïï: ;
)
ïï; <
;
ïï< =
if
óó 
(
óó 
get
óó 
!=
óó 
null
óó 
)
óó 
return
òò 
Delegate
òò #
.
òò# $
CreateDelegate
òò$ 2
(
òò2 3
typeof
òò3 9
(
òò9 :
T
òò: ;
)
òò; <
,
òò< =
get
òò> A
)
òòA B
;
òòB C
}
ôô 
Log
õõ 
.
õõ 
Warning
õõ 
(
õõ 
$str
õõ C
,
õõC D
propertyName
õõE Q
,
õõQ R
type
õõS W
.
õõW X
ToString
õõX `
(
õõ` a
)
õõa b
)
õõb c
;
õõc d
return
ùù 
null
ùù 
;
ùù 
}
ûû 	
public
†† 
static
†† 
Delegate
†† '
GetOpenDelegateOnProperty
†† 8
<
††8 9
T
††9 :
>
††: ;
(
††; <
Type
††< @
type
††A E
,
††E F
string
††G M
propertyName
††N Z
,
††Z [
BindingFlags
††\ h
bindings
††i q
)
††q r
{
°° 	
PropertyInfo
¢¢ 
propertyInfo
¢¢ %
=
¢¢& '
type
¢¢( ,
.
¢¢, -
GetProperty
¢¢- 8
(
¢¢8 9
propertyName
¢¢9 E
,
¢¢E F
bindings
¢¢G O
)
¢¢O P
;
¢¢P Q

MethodInfo
££ 

methodInfo
££ !
=
££" #
propertyInfo
££$ 0
==
££1 3
null
££4 8
?
££9 :
null
££; ?
:
££@ A
propertyInfo
££B N
.
££N O
GetGetMethod
££O [
(
££[ \
true
££\ `
)
££` a
;
££a b
if
•• 
(
•• 

methodInfo
•• 
!=
•• 
null
•• "
)
••" #
return
¶¶ 
Delegate
¶¶ 
.
¶¶  
CreateDelegate
¶¶  .
(
¶¶. /
typeof
¶¶/ 5
(
¶¶5 6
T
¶¶6 7
)
¶¶7 8
,
¶¶8 9

methodInfo
¶¶: D
)
¶¶D E
;
¶¶E F
Log
®® 
.
®® 
Warning
®® 
(
®® 
$str
®® C
,
®®C D
propertyName
®®E Q
,
®®Q R
type
®®S W
.
®®W X
ToString
®®X `
(
®®` a
)
®®a b
)
®®b c
;
®®c d
return
™™ 
null
™™ 
;
™™ 
}
´´ 	
public
≠≠ 
static
≠≠ 
Delegate
≠≠ )
GetClosedDelegateOnProperty
≠≠ :
<
≠≠: ;
T
≠≠; <
>
≠≠< =
(
≠≠= >
Type
≠≠> B
type
≠≠C G
,
≠≠G H
object
≠≠I O
target
≠≠P V
,
≠≠V W
string
≠≠X ^
propertyName
≠≠_ k
)
≠≠k l
{
ÆÆ 	
PropertyInfo
ØØ 
propertyInfo
ØØ %
=
ØØ& '
type
ØØ( ,
.
ØØ, -
GetProperty
ØØ- 8
(
ØØ8 9
propertyName
ØØ9 E
)
ØØE F
;
ØØF G
if
±± 
(
±± 
propertyInfo
±± 
!=
±± 
null
±±  $
)
±±$ %
{
≤≤ 

MethodInfo
≥≥ 
get
≥≥ 
=
≥≥  
propertyInfo
≥≥! -
.
≥≥- .
GetGetMethod
≥≥. :
(
≥≥: ;
)
≥≥; <
;
≥≥< =
if
µµ 
(
µµ 
get
µµ 
!=
µµ 
null
µµ 
)
µµ 
return
∂∂ 
Delegate
∂∂ #
.
∂∂# $
CreateDelegate
∂∂$ 2
(
∂∂2 3
typeof
∂∂3 9
(
∂∂9 :
T
∂∂: ;
)
∂∂; <
,
∂∂< =
target
∂∂> D
,
∂∂D E
get
∂∂F I
)
∂∂I J
;
∂∂J K
}
∑∑ 
Log
ππ 
.
ππ 
Warning
ππ 
(
ππ 
$str
ππ C
,
ππC D
propertyName
ππE Q
,
ππQ R
type
ππS W
.
ππW X
ToString
ππX `
(
ππ` a
)
ππa b
)
ππb c
;
ππc d
return
ªª 
null
ªª 
;
ªª 
}
ºº 	
public
ææ 
static
ææ 
Delegate
ææ )
GetClosedDelegateOnProperty
ææ :
<
ææ: ;
T
ææ; <
>
ææ< =
(
ææ= >
Type
ææ> B
type
ææC G
,
ææG H
object
ææI O
target
ææP V
,
ææV W
string
ææX ^
propertyName
ææ_ k
,
ææk l
BindingFlags
ææm y
bindingsææz Ç
)ææÇ É
{
øø 	
PropertyInfo
¿¿ 
propertyInfo
¿¿ %
=
¿¿& '
type
¿¿( ,
.
¿¿, -
GetProperty
¿¿- 8
(
¿¿8 9
propertyName
¿¿9 E
,
¿¿E F
bindings
¿¿G O
)
¿¿O P
;
¿¿P Q

MethodInfo
¡¡ 

methodInfo
¡¡ !
=
¡¡" #
propertyInfo
¡¡$ 0
!=
¡¡1 3
null
¡¡4 8
?
¡¡9 :
propertyInfo
¡¡; G
.
¡¡G H
GetGetMethod
¡¡H T
(
¡¡T U
true
¡¡U Y
)
¡¡Y Z
:
¡¡[ \
null
¡¡] a
;
¡¡a b
if
√√ 
(
√√ 

methodInfo
√√ 
!=
√√ 
null
√√ "
)
√√" #
return
ƒƒ 
Delegate
ƒƒ 
.
ƒƒ  
CreateDelegate
ƒƒ  .
(
ƒƒ. /
typeof
ƒƒ/ 5
(
ƒƒ5 6
T
ƒƒ6 7
)
ƒƒ7 8
,
ƒƒ8 9
target
ƒƒ: @
,
ƒƒ@ A

methodInfo
ƒƒB L
)
ƒƒL M
;
ƒƒM N
Log
∆∆ 
.
∆∆ 
Warning
∆∆ 
(
∆∆ 
$str
∆∆ C
,
∆∆C D
propertyName
∆∆E Q
,
∆∆Q R
type
∆∆S W
.
∆∆W X
ToString
∆∆X `
(
∆∆` a
)
∆∆a b
)
∆∆b c
;
∆∆c d
return
»» 
null
»» 
;
»» 
}
…… 	
public
ÀÀ 
static
ÀÀ 
	FieldInfo
ÀÀ 
GetFieldInfo
ÀÀ  ,
(
ÀÀ, -
Type
ÀÀ- 1
type
ÀÀ2 6
,
ÀÀ6 7
string
ÀÀ8 >
	fieldName
ÀÀ? H
,
ÀÀH I
BindingFlags
ÀÀJ V
bindings
ÀÀW _
)
ÀÀ_ `
{
ÃÃ 	
	FieldInfo
ÕÕ 
	fieldInfo
ÕÕ 
=
ÕÕ  !
type
ÕÕ" &
.
ÕÕ& '
GetField
ÕÕ' /
(
ÕÕ/ 0
	fieldName
ÕÕ0 9
,
ÕÕ9 :
bindings
ÕÕ; C
)
ÕÕC D
;
ÕÕD E
if
œœ 
(
œœ 
	fieldInfo
œœ 
!=
œœ 
null
œœ !
)
œœ! "
return
–– 
	fieldInfo
––  
;
––  !
Log
““ 
.
““ 
Warning
““ 
(
““ 
$str
““ @
,
““@ A
	fieldName
““B K
,
““K L
type
““M Q
.
““Q R
ToString
““R Z
(
““Z [
)
““[ \
)
““\ ]
;
““] ^
return
‘‘ 
null
‘‘ 
;
‘‘ 
}
’’ 	
}
÷÷ 
}◊◊ ﬁ]
èD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\LogEditor.cs
	namespace

 	
UnityEditor


 
.

 

ProBuilder

  
{ 
[ 
InitializeOnLoad 
] 
static 

class 
LogPreferences 
{ 
static 
LogPreferences 
( 
) 
{ 	
SetLogPreferences 
( 
) 
;  
} 	
internal 
static 
void 
SetLogPreferences .
(. /
)/ 0
{ 	
EditorApplication 
. 
	delayCall '
+=( *
(+ ,
), -
=>. 0
{ 
Log 
. 
SetLogLevel #
(# $
	LogEditor$ -
.- .

s_LogLevel. 8
)8 9
;9 :
Log 
. 
	SetOutput !
(! "
	LogEditor" +
.+ ,
s_LogOutput, 7
)7 8
;8 9
Log 
. 

SetLogFile "
(" #
	LogEditor# ,
., -
	s_LogPath- 6
)6 7
;7 8
} 
; 
} 	
}   
sealed%% 

class%% 
	LogEditor%% 
:%% 
EditorWindow%% )
{&& 
internal'' 
static'' 
Pref'' 
<'' 
LogLevel'' %
>''% &

s_LogLevel''' 1
=''2 3
new''4 7
Pref''8 <
<''< =
LogLevel''= E
>''E F
(''F G
$str''G R
,''R S
LogLevel''T \
.''\ ]
Default''] d
)''d e
;''e f
internal(( 
static(( 
Pref(( 
<(( 
	LogOutput(( &
>((& '
s_LogOutput((( 3
=((4 5
new((6 9
Pref((: >
<((> ?
	LogOutput((? H
>((H I
(((I J
$str((J V
,((V W
	LogOutput((X a
.((a b
Console((b i
)((i j
;((j k
internal)) 
static)) 
Pref)) 
<)) 
string)) #
>))# $
	s_LogPath))% .
=))/ 0
new))1 4
Pref))5 9
<))9 :
string)): @
>))@ A
())A B
$str))B L
,))L M
Log))N Q
.))Q R#
k_ProBuilderLogFileName))R i
)))i j
;))j k
[++ 	
MenuItem++	 
(++ 
$str++ 
+++ 
PreferenceKeys++ +
.+++ ,
pluginTitle++, 7
+++8 9
$str++: R
)++R S
]++S T
static,, 
void,, 
MenuInit,, 
(,, 
),, 
{-- 	
	GetWindow.. 
<.. 
	LogEditor.. 
>..  
(..  !
true..! %
,..% &
$str..' 8
,..8 9
true..: >
)..> ?
;..? @
}// 	
static11 

GUIContent11 
[11 
]11 
	gc_output11 %
=11& '
new11( +

GUIContent11, 6
[116 7
]117 8
{22 	
new33 

GUIContent33 
(33 
$str33 $
)33$ %
,33% &
new44 

GUIContent44 
(44 
$str44 !
)44! "
}55 	
;55	 

static77 

GUIContent77 
[77 
]77 
gc_level77 $
=77% &
new77' *

GUIContent77+ 5
[775 6
]776 7
{88 	
new99 

GUIContent99 
(99 
$str99 "
)99" #
,99# $
new:: 

GUIContent:: 
(:: 
$str:: $
)::$ %
,::% &
new;; 

GUIContent;; 
(;; 
$str;; !
);;! "
,;;" #
new<< 

GUIContent<< 
(<< 
$str<< "
)<<" #
,<<# $
new== 

GUIContent== 
(== 
$str==  
)==  !
}>> 	
;>>	 

void@@ 
OnGUI@@ 
(@@ 
)@@ 
{AA 	
	GUILayoutBB 
.BB 
LabelBB 
(BB 
$strBB (
,BB( )
EditorStylesBB* 6
.BB6 7
	boldLabelBB7 @
)BB@ A
;BBA B
	EditorGUIDD 
.DD 
BeginChangeCheckDD &
(DD& '
)DD' (
;DD( )
s_LogOutputEE 
.EE 
valueEE 
=EE 
(EE  !
	LogOutputEE! *
)EE* +
globalEE+ 1
::EE1 3
UnityEditorEE3 >
.EE> ?

ProBuilderEE? I
.EEI J
UIEEJ L
.EEL M
EditorGUILayoutEEM \
.EE\ ]
FlagToolbarEE] h
(EEh i
(EEi j
intEEj m
)EEm n
s_LogOutputEEn y
.EEy z
valueEEz 
,	EE Ä
	gc_output
EEÅ ä
)
EEä ã
;
EEã å
ifFF 
(FF 
	EditorGUIFF 
.FF 
EndChangeCheckFF (
(FF( )
)FF) *
)FF* +
{GG 
ProBuilderSettingsHH "
.HH" #
SaveHH# '
(HH' (
)HH( )
;HH) *
LogPreferencesII 
.II 
SetLogPreferencesII 0
(II0 1
)II1 2
;II2 3
}JJ 
GUILL 
.LL 
enabledLL 
=LL 
(LL 
s_LogOutputLL &
&LL' (
	LogOutputLL) 2
.LL2 3
FileLL3 7
)LL7 8
>LL9 :
$numLL; <
;LL< =
	GUILayoutNN 
.NN 
BeginHorizontalNN %
(NN% &
)NN& '
;NN' (
	GUILayoutOO 
.OO 
LabelOO 
(OO 
$strOO &
)OO& '
;OO' (
	GUILayoutPP 
.PP 
FlexibleSpacePP #
(PP# $
)PP$ %
;PP% &
ifQQ 
(QQ 
	GUILayoutQQ 
.QQ 
ButtonQQ  
(QQ  !
$strQQ! &
,QQ& '
EditorStylesQQ( 4
.QQ4 5

miniButtonQQ5 ?
)QQ? @
)QQ@ A
{RR 
stringSS 
dirSS 
=SS 
UnityEditorSS (
.SS( )
EditorUtilitySS) 6
.SS6 7
OpenFolderPanelSS7 F
(SSF G
$strSSG a
,SSa b
$strSSc e
,SSe f
$strSSg i
)SSi j
;SSj k
ifUU 
(UU 
!UU 
stringUU 
.UU 
IsNullOrEmptyUU )
(UU) *
dirUU* -
)UU- .
&&UU/ 1
	DirectoryUU2 ;
.UU; <
ExistsUU< B
(UUB C
dirUUC F
)UUF G
)UUG H
{VV 
	s_LogPathWW 
.WW 
valueWW #
=WW$ %
stringWW& ,
.WW, -
FormatWW- 3
(WW3 4
$strWW4 =
,WW= >
dirWW? B
,WWB C
LogWWD G
.WWG H#
k_ProBuilderLogFileNameWWH _
)WW_ `
;WW` a
tryYY 
{ZZ 
Uri[[ 
directoryUri[[ (
=[[) *
new[[+ .
Uri[[/ 2
([[2 3
dir[[3 6
)[[6 7
;[[7 8
Uri\\ 
fileUri\\ #
=\\$ %
new\\& )
Uri\\* -
(\\- .
	s_LogPath\\. 7
)\\7 8
;\\8 9
string]] 
relativePath]] +
=]], -
directoryUri]]. :
.]]: ;
MakeRelativeUri]]; J
(]]J K
fileUri]]K R
)]]R S
.]]S T
ToString]]T \
(]]\ ]
)]]] ^
;]]^ _
if^^ 
(^^ 
!^^ 
string^^ #
.^^# $
IsNullOrEmpty^^$ 1
(^^1 2
relativePath^^2 >
)^^> ?
)^^? @
	s_LogPath__ %
.__% &
value__& +
=__, -
relativePath__. :
;__: ;
}`` 
catchaa 
{aa 
}aa 
ProBuilderSettingscc &
.cc& '
Savecc' +
(cc+ ,
)cc, -
;cc- .
Logdd 
.dd 

SetLogFiledd "
(dd" #
	s_LogPathdd# ,
)dd, -
;dd- .
}ee 
}ff 
	GUILayoutgg 
.gg 
EndHorizontalgg #
(gg# $
)gg$ %
;gg% &
	GUILayouthh 
.hh 
BeginHorizontalhh %
(hh% &
)hh& '
;hh' (
GUIii 
.ii 
enabledii 
=ii 
falseii 
;ii  
EditorGUILayoutjj 
.jj 

LabelFieldjj &
(jj& '
	s_LogPathjj' 0
)jj0 1
;jj1 2
GUIkk 
.kk 
enabledkk 
=kk 
truekk 
;kk 
	GUILayoutll 
.ll 
FlexibleSpacell #
(ll# $
)ll$ %
;ll% &
ifmm 
(mm 
	GUILayoutmm 
.mm 
Buttonmm  
(mm  !
$strmm! '
,mm' (
EditorStylesmm) 5
.mm5 6

miniButtonmm6 @
)mm@ A
)mmA B
UnityEditornn 
.nn 
EditorUtilitynn )
.nn) *
OpenWithDefaultAppnn* <
(nn< =
	s_LogPathnn= F
)nnF G
;nnG H
	GUILayoutoo 
.oo 
EndHorizontaloo #
(oo# $
)oo$ %
;oo% &
	GUILayoutqq 
.qq 
Labelqq 
(qq 
$strqq )
,qq) *
EditorStylesqq+ 7
.qq7 8
	boldLabelqq8 A
)qqA B
;qqB C
	EditorGUIss 
.ss 
BeginChangeCheckss &
(ss& '
)ss' (
;ss( )

s_LogLeveltt 
.tt 
valuett 
=tt 
(tt  
LogLeveltt  (
)tt( )
globaltt) /
::tt/ 1
UnityEditortt1 <
.tt< =

ProBuildertt= G
.ttG H
UIttH J
.ttJ K
EditorGUILayoutttK Z
.ttZ [
FlagToolbartt[ f
(ttf g
(ttg h
inttth k
)ttk l

s_LogLevelttl v
.ttv w
valuettw |
,tt| }
gc_level	tt~ Ü
,
ttÜ á
false
ttà ç
,
ttç é
true
ttè ì
)
ttì î
;
ttî ï
ifuu 
(uu 
	EditorGUIuu 
.uu 
EndChangeCheckuu (
(uu( )
)uu) *
)uu* +
{vv 
ProBuilderSettingsww "
.ww" #
Saveww# '
(ww' (
)ww( )
;ww) *
Logxx 
.xx 
SetLogLevelxx 
(xx  

s_LogLevelxx  *
)xx* +
;xx+ ,
}yy 
	GUILayout{{ 
.{{ 
FlexibleSpace{{ #
({{# $
){{$ %
;{{% &
	GUILayout|| 
.|| 
BeginHorizontal|| %
(||% &
)||& '
;||' (
	GUILayout}} 
.}} 
FlexibleSpace}} #
(}}# $
)}}$ %
;}}% &
if~~ 
(~~ 
	GUILayout~~ 
.~~ 
Button~~  
(~~  !
$str~~! 1
,~~1 2
EditorStyles~~3 ?
.~~? @

miniButton~~@ J
)~~J K
)~~K L
Log 
. 
ClearLogFile  
(  !
)! "
;" #
	GUILayout
ÄÄ 
.
ÄÄ 
EndHorizontal
ÄÄ #
(
ÄÄ# $
)
ÄÄ$ %
;
ÄÄ% &
}
ÅÅ 	
}
ÇÇ 
}ÉÉ º
°D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Editors\OpenMaterialEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
OpenMaterialEditor #
:$ %

MenuAction& 0
{ 
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
ToolG K
;K L
}M N
}O P
public		 
override		 
	Texture2D		 !
icon		" &
{		' (
get		) ,
{		- .
return		/ 5
IconUtility		6 A
.		A B
GetIcon		B I
(		I J
$str		J c
,		c d
IconSkin		e m
.		m n
Pro		n q
)		q r
;		r s
}		t u
}		v w
public

 
override

 
TooltipContent

 &
tooltip

' .
{

/ 0
get

1 4
{

5 6
return

7 =
	s_Tooltip

> G
;

G H
}

I J
}

K L
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str !
,! "
$str	 Å
) 
; 
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
ProBuilderEditor )
.) *
instance* 2
!=3 5
null6 :
;: ;
}< =
} 	
public 
override 
ActionResult $
DoAction% -
(- .
). /
{ 	
MaterialEditor 
. "
MenuOpenMaterialEditor 1
(1 2
)2 3
;3 4
return 
new 
ActionResult #
(# $
ActionResult$ 0
.0 1
Status1 7
.7 8
Success8 ?
,? @
$strA X
)X Y
;Y Z
} 	
} 
} ¨0
™D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Interaction\ToggleHandleOrientation.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
[ 
MenuActionShortcut 
( 
typeof 
( 
	SceneView (
)( )
,) *
KeyCode+ 2
.2 3
P3 4
)4 5
]5 6
sealed 

class #
ToggleHandleOrientation (
:) *

MenuAction+ 5
{ 
	Texture2D		 
[		 
]		 
m_Icons		 
;		 
HandleOrientation 
handleOrientation +
{ 	
get 
{ 
return "
VertexManipulationTool /
./ 0
handleOrientation0 A
;A B
}C D
set 
{ "
VertexManipulationTool &
.& '
handleOrientation' 8
=9 :
value; @
;@ A
ProBuilderEditor  
.  !
Refresh! (
(( )
false) .
). /
;/ 0
} 
} 	
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
	Selection& /
;/ 0
}1 2
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
m_Icons  
[  !
(! "
int" %
)% &
handleOrientation& 7
]7 8
;8 9
}: ;
} 	
public 
override 
int 
toolbarPriority +
{   	
get!! 
{!! 
return!! 
$num!! 
;!! 
}!! 
}"" 	
public$$ 
override$$ 
TooltipContent$$ &
tooltip$$' .
{%% 	
get&& 
{&& 
return&& 

k_Tooltips&& #
[&&# $
(&&$ %
int&&% (
)&&( )
handleOrientation&&) :
]&&: ;
;&&; <
}&&= >
}'' 	
static)) 
readonly)) 
TooltipContent)) &
[))& '
]))' (

k_Tooltips))) 3
=))4 5
new))6 9
TooltipContent)): H
[))H I
]))I J
{** 	
new++ 
TooltipContent++ 
(++ 
$str++ '
,++' (
$str++) a
,++a b
$char++c f
)++f g
,++g h
new,, 
TooltipContent,, 
(,, 
$str,, &
,,,& '
$str,,( j
,,,j k
$char,,l o
),,o p
,,,p q
new-- 
TooltipContent-- 
(-- 
$str-- '
,--' (
$str--) m
,--m n
$char--o r
)--r s
}.. 	
;..	 

public00 
override00 
string00 
	menuTitle00 (
{11 	
get22 
{22 
return22 
$str22 (
+22) *

k_Tooltips22+ 5
[225 6
(226 7
int227 :
)22: ;
handleOrientation22; L
]22L M
.22M N
title22N S
;22S T
}22U V
}33 	
public55 
override55 

SelectMode55 "
validSelectModes55# 3
{66 	
get77 
{77 
return77 

SelectMode77 #
.77# $
Vertex77$ *
|77+ ,

SelectMode77- 7
.777 8
Edge778 <
|77= >

SelectMode77? I
.77I J
Face77J N
;77N O
}77P Q
}88 	
public:: 
override:: 
bool:: 
hidden:: #
{;; 	
get<< 
{<< 
return<< 
false<< 
;<< 
}<<  !
}== 	
public?? #
ToggleHandleOrientation?? &
(??& '
)??' (
{@@ 	
m_IconsAA 
=AA 
newAA 
	Texture2DAA #
[AA# $
]AA$ %
{BB 
IconUtilityCC 
.CC 
GetIconCC #
(CC# $
$strCC$ ?
,CC? @
IconSkinCCA I
.CCI J
ProCCJ M
)CCM N
,CCN O
IconUtilityDD 
.DD 
GetIconDD #
(DD# $
$strDD$ ?
,DD? @
IconSkinDDA I
.DDI J
ProDDJ M
)DDM N
,DDN O
IconUtilityEE 
.EE 
GetIconEE #
(EE# $
$strEE$ ?
,EE? @
IconSkinEEA I
.EEI J
ProEEJ M
)EEM N
,EEN O
}FF 
;FF 
}GG 	
publicII 
overrideII 
ActionResultII $
DoActionII% -
(II- .
)II. /
{JJ 	
handleOrientationKK 
=KK 
InternalUtilityKK  /
.KK/ 0
NextEnumValueKK0 =
(KK= >
handleOrientationKK> O
)KKO P
;KKP Q
returnLL 
newLL 
ActionResultLL #
(LL# $
ActionResultLL$ 0
.LL0 1
StatusLL1 7
.LL7 8
SuccessLL8 ?
,LL? @
$strLLA [
+LL\ ]

k_TooltipsLL^ h
[LLh i
(LLi j
intLLj m
)LLm n
handleOrientationLLn 
]	LL Ä
.
LLÄ Å
title
LLÅ Ü
)
LLÜ á
;
LLá à
}MM 	
publicOO 
overrideOO 
boolOO 
enabledOO $
{PP 	
getQQ 
{QQ 
returnQQ 
ProBuilderEditorQQ )
.QQ) *
instanceQQ* 2
!=QQ3 5
nullQQ6 :
;QQ: ;
}QQ< =
}RR 	
}SS 
}TT Ÿ0
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\ProBuilderSettings.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
static 

class 
ProBuilderSettings #
{ 
const		 
string		 
k_PackageName		 "
=		# $
$str		% ;
;		; <
internal

 
const

 
string

 $
k_DeprecatedSettingsPath

 6
=

7 8
$str

9 b
;

b c
static 
Settings 

s_Instance "
;" #
[ 	"
InitializeOnLoadMethod	 
]  
static 
void 
SaveSettingsOnExit &
(& '
)' (
{ 	
EditorApplication 
. 
quitting &
+=' )
Save* .
;. /
} 	
internal 
static 
Settings  
instance! )
{ 	
get 
{ 
if 
( 

s_Instance 
== !
null" &
)& '
{ 
CheckForOldSettings '
(' (
)( )
;) *

s_Instance 
=  
new! $
Settings% -
(- .
k_PackageName. ;
); <
;< =
} 
return 

s_Instance !
;! "
} 
} 	
public!! 
static!! 
void!! 
Save!! 
(!!  
)!!  !
{"" 	
instance## 
.## 
Save## 
(## 
)## 
;## 
}$$ 	
public&& 
static&& 
void&& 
Set&& 
<&& 
T&&  
>&&  !
(&&! "
string&&" (
key&&) ,
,&&, -
T&&. /
value&&0 5
,&&5 6
SettingsScope&&7 D
scope&&E J
=&&K L
SettingsScope&&M Z
.&&Z [
Project&&[ b
)&&b c
{'' 	
instance(( 
.(( 
Set(( 
<(( 
T(( 
>(( 
((( 
key(( 
,((  
value((! &
,((& '
scope((( -
)((- .
;((. /
})) 	
public++ 
static++ 
T++ 
Get++ 
<++ 
T++ 
>++ 
(++ 
string++ %
key++& )
,++) *
SettingsScope+++ 8
scope++9 >
=++? @
SettingsScope++A N
.++N O
Project++O V
,++V W
T++X Y
fallback++Z b
=++c d
default++e l
(++l m
T++m n
)++n o
)++o p
{,, 	
return-- 
instance-- 
.-- 
Get-- 
<--  
T--  !
>--! "
(--" #
key--# &
,--& '
scope--( -
,--- .
fallback--/ 7
)--7 8
;--8 9
}.. 	
public00 
static00 
bool00 
ContainsKey00 &
<00& '
T00' (
>00( )
(00) *
string00* 0
key001 4
,004 5
SettingsScope006 C
scope00D I
=00J K
SettingsScope00L Y
.00Y Z
Project00Z a
)00a b
{11 	
return22 
instance22 
.22 
ContainsKey22 '
<22' (
T22( )
>22) *
(22* +
key22+ .
,22. /
scope220 5
)225 6
;226 7
}33 	
public55 
static55 
void55 
Delete55 !
<55! "
T55" #
>55# $
(55$ %
string55% +
key55, /
,55/ 0
SettingsScope551 >
scope55? D
=55E F
SettingsScope55G T
.55T U
Project55U \
)55\ ]
{66 	
instance77 
.77 
	DeleteKey77 
<77 
T77  
>77  !
(77! "
key77" %
,77% &
scope77' ,
)77, -
;77- .
}88 	
static:: 
void:: 
CheckForOldSettings:: '
(::' (
)::( )
{;; 	
var<< 
newSettingsPath<< 
=<<  !%
PackageSettingsRepository<<" ;
.<<; <
GetSettingsPath<<< K
(<<K L
k_PackageName<<L Y
)<<Y Z
;<<Z [
if@@ 
(@@ 
!@@ 
File@@ 
.@@ 
Exists@@ 
(@@ 
newSettingsPath@@ ,
)@@, -
&&@@. 0
File@@1 5
.@@5 6
Exists@@6 <
(@@< =$
k_DeprecatedSettingsPath@@= U
)@@U V
)@@V W
{AA 
tryBB 
{CC 
varDD 
	directoryDD !
=DD" #
PathDD$ (
.DD( )
GetDirectoryNameDD) 9
(DD9 :
newSettingsPathDD: I
)DDI J
;DDJ K
ifFF 
(FF 
!FF 
	DirectoryFF !
.FF! "
ExistsFF" (
(FF( )
	directoryFF) 2
)FF2 3
)FF3 4
	DirectoryGG !
.GG! "
CreateDirectoryGG" 1
(GG1 2
PathGG2 6
.GG6 7
GetDirectoryNameGG7 G
(GGG H
newSettingsPathGGH W
)GGW X
)GGX Y
;GGY Z
FileII 
.II 
MoveII 
(II $
k_DeprecatedSettingsPathII 6
,II6 7
newSettingsPathII8 G
)IIG H
;IIH I
}JJ 
catchKK 
(KK 
SystemKK 
.KK 
	ExceptionKK '
eKK( )
)KK) *
{LL 
LogMM 
.MM 
InfoMM 
(MM 
$strMM W
,MMW X
eMMY Z
.MMZ [
ToStringMM[ c
(MMc d
)MMd e
)MMe f
;MMf g
}NN 
}OO 
}PP 	
}QQ 
}RR Üx
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\FillHole.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
FillHole 
: 

MenuAction &
{ 
Pref 
< 
bool 
> 
m_SelectEntirePath %
=& '
new( +
Pref, 0
<0 1
bool1 5
>5 6
(6 7
$str7 R
,R S
trueT X
)X Y
;Y Z
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Geometry& .
;. /
}0 1
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- D
,D E
IconSkinF N
.N O
ProO R
)R S
;S T
}U V
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
}   	
static"" 
readonly"" 
TooltipContent"" &
	s_Tooltip""' 0
=""1 2
new""3 6
TooltipContent""7 E
(## 
$str$$ 
,$$ 
$str%% F
)&& 
;&& 
public(( 
override(( 

SelectMode(( "
validSelectModes((# 3
{)) 	
get** 
{** 
return** 

SelectMode** #
.**# $
Edge**$ (
|**) *

SelectMode**+ 5
.**5 6
Vertex**6 <
;**< =
}**> ?
}++ 	
public-- 
override-- 
bool-- 
enabled-- $
{.. 	
get// 
{// 
return// 
base// 
.// 
enabled// %
&&//& (
(//) *
MeshSelection//* 7
.//7 8
selectedEdgeCount//8 I
>//J K
$num//L M
||//N P
MeshSelection//Q ^
.//^ _%
selectedSharedVertexCount//_ x
>//y z
$num//{ |
)//| }
;//} ~
}	// Ä
}00 	
	protected22 
override22 
MenuActionState22 *
optionsMenuState22+ ;
{33 	
get44 
{44 
return44 
MenuActionState44 (
.44( )
VisibleAndEnabled44) :
;44: ;
}44< =
}55 	
	protected77 
override77 
void77 
OnSettingsGUI77  -
(77- .
)77. /
{88 	
	GUILayout99 
.99 
Label99 
(99 
$str99 0
,990 1
EditorStyles992 >
.99> ?
	boldLabel99? H
)99H I
;99I J
EditorGUILayout;; 
.;; 
HelpBox;; #
(;;# $
$str	;;$ ÿ
,
;;ÿ Ÿ
MessageType
;;⁄ Â
.
;;Â Ê
Info
;;Ê Í
)
;;Í Î
;
;;Î Ï
	EditorGUI== 
.== 
BeginChangeCheck== &
(==& '
)==' (
;==( )
m_SelectEntirePath?? 
.?? 
value?? $
=??% &
EditorGUILayout??' 6
.??6 7
Toggle??7 =
(??= >
$str??> P
,??P Q
m_SelectEntirePath??R d
)??d e
;??e f
ifAA 
(AA 
	EditorGUIAA 
.AA 
EndChangeCheckAA (
(AA( )
)AA) *
)AA* +
ProBuilderSettingsBB "
.BB" #
SaveBB# '
(BB' (
)BB( )
;BB) *
	GUILayoutDD 
.DD 
FlexibleSpaceDD #
(DD# $
)DD$ %
;DD% &
ifFF 
(FF 
	GUILayoutFF 
.FF 
ButtonFF  
(FF  !
$strFF! ,
)FF, -
)FF- .
EditorUtilityGG 
.GG 
ShowNotificationGG .
(GG. /
DoActionGG/ 7
(GG7 8
)GG8 9
.GG9 :
notificationGG: F
)GGF G
;GGG H
}HH 	
publicJJ 
overrideJJ 
ActionResultJJ $
DoActionJJ% -
(JJ- .
)JJ. /
{KK 	
ifLL 
(LL 
MeshSelectionLL 
.LL 
selectedObjectCountLL 1
<LL2 3
$numLL4 5
)LL5 6
returnMM 
ActionResultMM #
.MM# $
NoSelectionMM$ /
;MM/ 0
UndoUtilityOO 
.OO 
RecordSelectionOO '
(OO' (
$strOO( 3
)OO3 4
;OO4 5
ActionResultQQ 
resQQ 
=QQ 
newQQ "
ActionResultQQ# /
(QQ/ 0
ActionResultQQ0 <
.QQ< =
StatusQQ= C
.QQC D
NoChangeQQD L
,QQL M
$strQQN ^
)QQ^ _
;QQ_ `
intRR 
filledRR 
=RR 
$numRR 
;RR 
boolSS 
	wholePathSS 
=SS 
m_SelectEntirePathSS /
;SS/ 0
foreachUU 
(UU 
ProBuilderMeshUU #
meshUU$ (
inUU) +
MeshSelectionUU, 9
.UU9 :
topInternalUU: E
)UUE F
{VV 
boolWW 
	selectAllWW 
=WW  
meshWW! %
.WW% &#
selectedIndexesInternalWW& =
==WW> @
nullWWA E
||WWF H
meshWWI M
.WWM N#
selectedIndexesInternalWWN e
.WWe f
LengthWWf l
<WWm n
$numWWo p
;WWp q
IEnumerableXX 
<XX 
intXX 
>XX  
indexesXX! (
=XX) *
	selectAllXX+ 4
?XX5 6
meshXX7 ;
.XX; <
facesInternalXX< I
.XXI J

SelectManyXXJ T
(XXT U
xXXU V
=>XXW Y
xXXZ [
.XX[ \
indexesXX\ c
)XXc d
:XXe f
meshXXg k
.XXk l$
selectedIndexesInternal	XXl É
;
XXÉ Ñ
meshZZ 
.ZZ 
ToMeshZZ 
(ZZ 
)ZZ 
;ZZ 
List\\ 
<\\ 

WingedEdge\\ 
>\\  
wings\\! &
=\\' (

WingedEdge\\) 3
.\\3 4
GetWingedEdges\\4 B
(\\B C
mesh\\C G
)\\G H
;\\H I
HashSet]] 
<]] 
int]] 
>]] 
common]] #
=]]$ %
mesh]]& *
.]]* +"
GetSharedVertexHandles]]+ A
(]]A B
indexes]]B I
)]]I J
;]]J K
List^^ 
<^^ 
List^^ 
<^^ 

WingedEdge^^ $
>^^$ %
>^^% &
holes^^' ,
=^^- .
ElementSelection^^/ ?
.^^? @
	FindHoles^^@ I
(^^I J
wings^^J O
,^^O P
common^^Q W
)^^W X
;^^X Y
HashSet`` 
<`` 
Face`` 
>`` 
appendedFaces`` +
=``, -
new``. 1
HashSet``2 9
<``9 :
Face``: >
>``> ?
(``? @
)``@ A
;``A B
foreachbb 
(bb 
Listbb 
<bb 

WingedEdgebb (
>bb( )
holebb* .
inbb/ 1
holesbb2 7
)bb7 8
{cc 
Listdd 
<dd 
intdd 
>dd 
holeIndexesdd )
;dd) *
Faceee 
faceee 
;ee 
ifgg 
(gg 
	wholePathgg !
)gg! "
{hh 
ifkk 
(kk 
ProBuilderEditorkk ,
.kk, -

selectModekk- 7
==kk8 :

SelectModekk; E
.kkE F
EdgekkF J
&&kkK M
!ll 
holell !
.ll! "
Anyll" %
(ll% &
xll& '
=>ll( *
commonll+ 1
.ll1 2
Containsll2 :
(ll: ;
xll; <
.ll< =
edgell= A
.llA B
commonllB H
.llH I
allI J
)llJ K
&&llL N
commonmm  &
.mm& '
Containsmm' /
(mm/ 0
xmm0 1
.mm1 2
edgemm2 6
.mm6 7
commonmm7 =
.mm= >
bmm> ?
)mm? @
)mm@ A
)mmA B
continuenn $
;nn$ %
holeIndexespp #
=pp$ %
holepp& *
.pp* +
Selectpp+ 1
(pp1 2
xpp2 3
=>pp4 6
xpp7 8
.pp8 9
edgepp9 =
.pp= >
localpp> C
.ppC D
appD E
)ppE F
.ppF G
ToListppG M
(ppM N
)ppN O
;ppO P
faceqq 
=qq 
AppendElementsqq -
.qq- .
CreatePolygonqq. ;
(qq; <
meshqq< @
,qq@ A
holeIndexesqqB M
,qqM N
falseqqO T
)qqT U
;qqU V
}rr 
elsess 
{tt 
IEnumerableuu #
<uu# $

WingedEdgeuu$ .
>uu. /
selecteduu0 8
=uu9 :
holeuu; ?
.uu? @
Whereuu@ E
(uuE F
xuuF G
=>uuH J
commonuuK Q
.uuQ R
ContainsuuR Z
(uuZ [
xuu[ \
.uu\ ]
edgeuu] a
.uua b
commonuub h
.uuh i
auui j
)uuj k
)uuk l
;uul m
holeIndexesvv #
=vv$ %
selectedvv& .
.vv. /
Selectvv/ 5
(vv5 6
xvv6 7
=>vv8 :
xvv; <
.vv< =
edgevv= A
.vvA B
localvvB G
.vvG H
avvH I
)vvI J
.vvJ K
ToListvvK Q
(vvQ R
)vvR S
;vvS T
faceww 
=ww 
AppendElementsww -
.ww- .
CreatePolygonww. ;
(ww; <
meshww< @
,ww@ A
holeIndexeswwB M
,wwM N
truewwO S
)wwS T
;wwT U
}xx 
ifzz 
(zz 
facezz 
!=zz 
nullzz  $
)zz$ %
{{{ 
filled|| 
++||  
;||  !
appendedFaces}} %
.}}% &
Add}}& )
(}}) *
face}}* .
)}}. /
;}}/ 0
}~~ 
} 
mesh
ÅÅ 
.
ÅÅ 
SetSelectedFaces
ÅÅ %
(
ÅÅ% &
appendedFaces
ÅÅ& 3
)
ÅÅ3 4
;
ÅÅ4 5
wings
ÉÉ 
=
ÉÉ 

WingedEdge
ÉÉ "
.
ÉÉ" #
GetWingedEdges
ÉÉ# 1
(
ÉÉ1 2
mesh
ÉÉ2 6
)
ÉÉ6 7
;
ÉÉ7 8
foreach
áá 
(
áá 
var
áá 
appendedFace
áá )
in
áá* ,
appendedFaces
áá- :
)
áá: ;
{
àà 
var
ââ 
wing
ââ 
=
ââ 
wings
ââ $
.
ââ$ %
FirstOrDefault
ââ% 3
(
ââ3 4
x
ââ4 5
=>
ââ6 8
x
ââ9 :
.
ââ: ;
face
ââ; ?
==
ââ@ B
appendedFace
ââC O
)
ââO P
;
ââP Q
if
ãã 
(
ãã 
wing
ãã 
==
ãã 
null
ãã  $
)
ãã$ %
continue
åå  
;
åå  !
using
éé 
(
éé 
var
éé 
it
éé !
=
éé" #
new
éé$ '"
WingedEdgeEnumerator
éé( <
(
éé< =
wing
éé= A
)
ééA B
)
ééB C
{
èè 
while
êê 
(
êê 
it
êê !
.
êê! "
MoveNext
êê" *
(
êê* +
)
êê+ ,
)
êê, -
{
ëë 
if
íí 
(
íí  
it
íí  "
.
íí" #
Current
íí# *
==
íí+ -
null
íí. 2
)
íí2 3
continue
ìì  (
;
ìì( )
var
ïï 
currentWing
ïï  +
=
ïï, -
it
ïï. 0
.
ïï0 1
Current
ïï1 8
;
ïï8 9
var
ññ 
oppositeFace
ññ  ,
=
ññ- .
it
ññ/ 1
.
ññ1 2
Current
ññ2 9
.
ññ9 :
opposite
ññ: B
!=
ññC E
null
ññF J
?
ññK L
it
ññM O
.
ññO P
Current
ññP W
.
ññW X
opposite
ññX `
.
ññ` a
face
ñña e
:
ññf g
null
ññh l
;
ññl m
if
òò 
(
òò  
oppositeFace
òò  ,
!=
òò- /
null
òò0 4
&&
òò5 7
!
òò8 9
appendedFaces
òò9 F
.
òòF G
Contains
òòG O
(
òòO P
oppositeFace
òòP \
)
òò\ ]
)
òò] ^
{
ôô 
currentWing
öö  +
.
öö+ ,
face
öö, 0
.
öö0 1
submeshIndex
öö1 =
=
öö> ?
oppositeFace
öö@ L
.
ööL M
submeshIndex
ööM Y
;
ööY Z
currentWing
õõ  +
.
õõ+ ,
face
õõ, 0
.
õõ0 1
uv
õõ1 3
=
õõ4 5
new
õõ6 9 
AutoUnwrapSettings
õõ: L
(
õõL M
oppositeFace
õõM Y
.
õõY Z
uv
õõZ \
)
õõ\ ]
;
õõ] ^
SurfaceTopology
úú  /
.
úú/ 0#
ConformOppositeNormal
úú0 E
(
úúE F
currentWing
úúF Q
.
úúQ R
opposite
úúR Z
)
úúZ [
;
úú[ \
break
ùù  %
;
ùù% &
}
ûû 
}
üü 
}
†† 
}
°° 
mesh
££ 
.
££ 
ToMesh
££ 
(
££ 
)
££ 
;
££ 
mesh
§§ 
.
§§ 
Refresh
§§ 
(
§§ 
)
§§ 
;
§§ 
mesh
•• 
.
•• 
Optimize
•• 
(
•• 
)
•• 
;
••  
}
¶¶ 
ProBuilderEditor
®® 
.
®® 
Refresh
®® $
(
®®$ %
)
®®% &
;
®®& '
if
™™ 
(
™™ 
filled
™™ 
>
™™ 
$num
™™ 
)
™™ 
res
´´ 
=
´´ 
new
´´ 
ActionResult
´´ &
(
´´& '
ActionResult
´´' 3
.
´´3 4
Status
´´4 :
.
´´: ;
Success
´´; B
,
´´B C
filled
´´D J
>
´´K L
$num
´´M N
?
´´O P
string
´´Q W
.
´´W X
Format
´´X ^
(
´´^ _
$str
´´_ q
,
´´q r
filled
´´s y
)
´´y z
:
´´{ |
$str´´} à
)´´à â
;´´â ä
return
¨¨ 
res
¨¨ 
;
¨¨ 
}
≠≠ 	
}
ÆÆ 
}ØØ Å√
íD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\Lightmapping.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
{

 
[ 
InitializeOnLoad 
] 
static 

class 
Lightmapping 
{ 
const 
StaticEditorFlags 
k_ContributeGI  .
=/ 0
StaticEditorFlags1 B
.B C
ContributeGIC O
;O P
const 
string '
k_StaticEditorFlagsProperty 0
=1 2
$str3 H
;H I
[ 	
UserSetting	 
( 
$str 
, 
$str  3
,3 4
$str	5 à
)
à â
]
â ä
static 
Pref 
< 
bool 
> "
s_AutoUnwrapLightmapUV 0
=1 2
new3 6
Pref7 ;
<; <
bool< @
>@ A
(A B
$strB e
,e f
trueg k
)k l
;l m
[ 	
UserSetting	 
( 
$str 
, 
$str  C
,C D
$str	E ∂
)
∂ ∑
]
∑ ∏
static 
Pref 
< 
bool 
> *
s_ShowMissingLightmapUVWarning 8
=9 :
new; >
Pref? C
<C D
boolD H
>H I
(I J
$strJ s
,s t
trueu y
,y z
SettingsScope	{ à
.
à â
User
â ç
)
ç é
;
é è
[ 	
UserSetting	 
] 
internal   
static   
Pref   
<   
UnwrapParameters   -
>  - .
s_UnwrapParameters  / A
=  B C
new  D G
Pref  H L
<  L M
UnwrapParameters  M ]
>  ] ^
(  ^ _
$str	  _ ç
,
  ç é
new
  è í
UnwrapParameters
  ì £
(
  £ §
)
  § •
)
  • ¶
;
  ¶ ß
static"" 
Pref"" 
<"" 
UL"" 
."" 
GIWorkflowMode"" %
>""% &
s_GiWorkflowMode""' 7
=""8 9
new"": =
Pref""> B
<""B C
UL""C E
.""E F
GIWorkflowMode""F T
>""T U
(""U V
$str""V s
,""s t
UL""u w
.""w x
GIWorkflowMode	""x Ü
.
""Ü á
	Iterative
""á ê
,
""ê ë
SettingsScope
""í ü
.
""ü †
User
""† §
)
""§ •
;
""• ¶
static$$ 
class$$ 
Styles$$ 
{%% 	
public&& 
static&& 
readonly&& "

GUIContent&&# -
	hardAngle&&. 7
=&&8 9
new&&: =

GUIContent&&> H
(&&H I
$str&&I U
,&&U V
$str	&&W í
)
&&í ì
;
&&ì î
public'' 
static'' 
readonly'' "

GUIContent''# -

packMargin''. 8
=''9 :
new''; >

GUIContent''? I
(''I J
$str''J W
,''W X
$str	''Y •
)
''• ¶
;
''¶ ß
public(( 
static(( 
readonly(( "

GUIContent((# -

angleError((. 8
=((9 :
new((; >

GUIContent((? I
(((I J
$str((J W
,((W X
$str	((Y ≤
)
((≤ ≥
;
((≥ ¥
public)) 
static)) 
readonly)) "

GUIContent))# -
	areaError)). 7
=))8 9
new)): =

GUIContent))> H
())H I
$str))I U
,))U V
$str))W Y
)))Y Z
;))Z [
static++ 
bool++ 
s_Initialized++ %
;++% &
public,, 
static,, 
GUIStyle,, "

miniButton,,# -
;,,- .
public-- 
static-- 
bool-- !
unwrapSettingsFoldout-- 4
;--4 5
public// 
static// 
void// 
Init// #
(//# $
)//$ %
{00 
if11 
(11 
s_Initialized11 !
)11! "
return22 
;22 
s_Initialized44 
=44 
true44  $
;44$ %

miniButton66 
=66 
new66  
GUIStyle66! )
(66) *
GUI66* -
.66- .
skin66. 2
.662 3
button663 9
)669 :
;66: ;

miniButton77 
.77 
stretchHeight77 (
=77) *
false77+ 0
;770 1

miniButton88 
.88 
stretchWidth88 '
=88( )
false88* /
;88/ 0

miniButton99 
.99 
padding99 "
=99# $
new99% (

RectOffset99) 3
(993 4
$num994 5
,995 6
$num997 8
,998 9
$num99: ;
,99; <
$num99= >
)99> ?
;99? @

miniButton:: 
.:: 
margin:: !
=::" #
new::$ '

RectOffset::( 2
(::2 3
$num::3 4
,::4 5
$num::6 7
,::7 8
$num::9 :
,::: ;
$num::< =
)::= >
;::> ?
};; 
}<< 	
[>> 	
UserSettingBlock>>	 
(>> 
$str>> )
)>>) *
]>>* +
static?? 
void?? !
UnwrapSettingDefaults?? )
(??) *
string??* 0
searchContext??1 >
)??> ?
{@@ 	
StylesAA 
.AA 
InitAA 
(AA 
)AA 
;AA 
varBB 
isSearchingBB 
=BB 
!BB 
stringBB %
.BB% &
IsNullOrEmptyBB& 3
(BB3 4
searchContextBB4 A
)BBA B
;BBB C
ifDD 
(DD 
!DD 
isSearchingDD 
)DD 
StylesEE 
.EE !
unwrapSettingsFoldoutEE ,
=EE- .
EditorGUILayoutEE/ >
.EE> ?
FoldoutEE? F
(EEF G
StylesEEG M
.EEM N!
unwrapSettingsFoldoutEEN c
,EEc d
$strEEe |
)EE| }
;EE} ~
ifGG 
(GG 
isSearchingGG 
||GG 
StylesGG %
.GG% &!
unwrapSettingsFoldoutGG& ;
)GG; <
{HH 
	EditorGUIII 
.II 
BeginChangeCheckII *
(II* +
)II+ ,
;II, -
varKK 
unwrapKK 
=KK 
(KK 
UnwrapParametersKK .
)KK. /
s_UnwrapParametersKK/ A
;KKA B
usingMM 
(MM 
newMM 
SettingsGUILayoutMM ,
.MM, -
IndentedGroupMM- :
(MM: ;
)MM; <
)MM< =
{NN 
unwrapOO 
.OO 
	hardAngleOO $
=OO% &
SettingsGUILayoutOO' 8
.OO8 9
SearchableSliderOO9 I
(OOI J
StylesOOJ P
.OOP Q
	hardAngleOOQ Z
,OOZ [
unwrapOO\ b
.OOb c
	hardAngleOOc l
,OOl m
$numOOn p
,OOp q
$numOOr v
,OOv w
searchContext	OOx Ö
)
OOÖ Ü
;
OOÜ á
unwrapPP 
.PP 

packMarginPP %
=PP& '
SettingsGUILayoutPP( 9
.PP9 :
SearchableSliderPP: J
(PPJ K
StylesPPK Q
.PPQ R

packMarginPPR \
,PP\ ]
unwrapPP^ d
.PPd e

packMarginPPe o
,PPo p
$numPPq s
,PPs t
$numPPu x
,PPx y
searchContext	PPz á
)
PPá à
;
PPà â
unwrapQQ 
.QQ 

angleErrorQQ %
=QQ& '
SettingsGUILayoutQQ( 9
.QQ9 :
SearchableSliderQQ: J
(QQJ K
StylesQQK Q
.QQQ R

angleErrorQQR \
,QQ\ ]
unwrapQQ^ d
.QQd e

angleErrorQQe o
,QQo p
$numQQq s
,QQs t
$numQQu x
,QQx y
searchContext	QQz á
)
QQá à
;
QQà â
unwrapRR 
.RR 
	areaErrorRR $
=RR% &
SettingsGUILayoutRR' 8
.RR8 9
SearchableSliderRR9 I
(RRI J
StylesRRJ P
.RRP Q
	areaErrorRRQ Z
,RRZ [
unwrapRR\ b
.RRb c
	areaErrorRRc l
,RRl m
$numRRn p
,RRp q
$numRRr u
,RRu v
searchContext	RRw Ñ
)
RRÑ Ö
;
RRÖ Ü
ifTT 
(TT 
!TT 
isSearchingTT $
)TT$ %
{UU 
	GUILayoutVV !
.VV! "
BeginHorizontalVV" 1
(VV1 2
)VV2 3
;VV3 4
	GUILayoutWW !
.WW! "
FlexibleSpaceWW" /
(WW/ 0
)WW0 1
;WW1 2
ifXX 
(XX 
	GUILayoutXX %
.XX% &
ButtonXX& ,
(XX, -
$strXX- 4
,XX4 5
StylesXX6 <
.XX< =

miniButtonXX= G
)XXG H
)XXH I
unwrapYY "
.YY" #
ResetYY# (
(YY( )
)YY) *
;YY* +
	GUILayoutZZ !
.ZZ! "
EndHorizontalZZ" /
(ZZ/ 0
)ZZ0 1
;ZZ1 2
}[[ 
}\\ 
SettingsGUILayout^^ !
.^^! ")
DoResetContextMenuForLastRect^^" ?
(^^? @
s_UnwrapParameters^^@ R
)^^R S
;^^S T
if`` 
(`` 
	EditorGUI`` 
.`` 
EndChangeCheck`` ,
(``, -
)``- .
)``. /
s_UnwrapParametersaa &
.aa& '
valueaa' ,
=aa- .
unwrapaa/ 5
;aa5 6
}bb 
}cc 	
publicee 
staticee 
boolee  
autoUnwrapLightmapUVee /
{ff 	
getgg 
{gg 
returngg 
(gg 
boolgg 
)gg "
s_AutoUnwrapLightmapUVgg 5
;gg5 6
}gg7 8
sethh 
{hh "
s_AutoUnwrapLightmapUVhh (
.hh( )
valuehh) .
=hh/ 0
valuehh1 6
;hh6 7
}hh8 9
}ii 	
statickk 
Lightmappingkk 
(kk 
)kk 
{ll 	
ULnn 
.nn 
bakeCompletednn 
+=nn #
OnLightmappingCompletednn  7
;nn7 8
Undorr 
.rr $
postprocessModificationsrr )
+=rr* ,$
PostprocessModificationsrr- E
;rrE F
}ss 	
publiczz 
staticzz 
voidzz (
SetLightmapStaticFlagEnabledzz 7
(zz7 8
ProBuilderMeshzz8 F
pbzzG I
,zzI J
boolzzK O
	isEnabledzzP Y
)zzY Z
{{{ 	
Entity|| 
ent|| 
=|| 
pb|| 
.|| 
GetComponent|| (
<||( )
Entity||) /
>||/ 0
(||0 1
)||1 2
;||2 3
if~~ 
(~~ 
ent~~ 
!=~~ 
null~~ 
&&~~ 
ent~~ "
.~~" #

entityType~~# -
==~~. 0

EntityType~~1 ;
.~~; <
Detail~~< B
)~~B C
{ 
StaticEditorFlags
ÄÄ !
flags
ÄÄ" '
=
ÄÄ( )
GameObjectUtility
ÄÄ* ;
.
ÄÄ; <"
GetStaticEditorFlags
ÄÄ< P
(
ÄÄP Q
pb
ÄÄQ S
.
ÄÄS T

gameObject
ÄÄT ^
)
ÄÄ^ _
;
ÄÄ_ `
if
ÇÇ 
(
ÇÇ 
	isEnabled
ÇÇ 
!=
ÇÇ  
(
ÇÇ! "
flags
ÇÇ" '
&
ÇÇ( )
k_ContributeGI
ÇÇ* 8
)
ÇÇ8 9
>
ÇÇ: ;
$num
ÇÇ< =
)
ÇÇ= >
{
ÉÉ 
flags
ÑÑ 
^=
ÑÑ 
k_ContributeGI
ÑÑ +
;
ÑÑ+ ,
GameObjectUtility
ÖÖ %
.
ÖÖ% &"
SetStaticEditorFlags
ÖÖ& :
(
ÖÖ: ;
pb
ÖÖ; =
.
ÖÖ= >

gameObject
ÖÖ> H
,
ÖÖH I
flags
ÖÖJ O
)
ÖÖO P
;
ÖÖP Q
}
ÜÜ 
}
áá 
}
àà 	
static
ää &
UndoPropertyModification
ää '
[
ää' (
]
ää( )&
PostprocessModifications
ää* B
(
ääB C&
UndoPropertyModification
ääC [
[
ää[ \
]
ää\ ]
modifications
ää^ k
)
ääk l
{
ãã 	
if
åå 
(
åå 
!
åå "
autoUnwrapLightmapUV
åå %
)
åå% &
return
çç 
modifications
çç $
;
çç$ %
foreach
èè 
(
èè 
var
èè 
modification
èè %
in
èè& (
modifications
èè) 6
)
èè6 7
{
êê 
string
ëë 
property
ëë 
=
ëë  !
modification
ëë" .
.
ëë. /
currentValue
ëë/ ;
==
ëë< >
null
ëë? C
?
ëëD E
null
ëëF J
:
ëëK L
modification
ëëM Y
.
ëëY Z
currentValue
ëëZ f
.
ëëf g
propertyPath
ëëg s
;
ëës t
if
ìì 
(
ìì 
string
ìì 
.
ìì 
IsNullOrEmpty
ìì (
(
ìì( )
property
ìì) 1
)
ìì1 2
||
îî 
!
îî 
property
îî  
.
îî  !
Equals
îî! '
(
îî' ()
k_StaticEditorFlagsProperty
îî( C
)
îîC D
||
ïï 
string
ïï 
.
ïï 
IsNullOrEmpty
ïï +
(
ïï+ ,
modification
ïï, 8
.
ïï8 9
currentValue
ïï9 E
.
ïïE F
value
ïïF K
)
ïïK L
)
ïïL M
continue
ññ 
;
ññ 
var
òò 
staticFlags
òò 
=
òò  !
uint
òò" &
.
òò& '
Parse
òò' ,
(
òò, -
modification
òò- 9
.
òò9 :
currentValue
òò: F
.
òòF G
value
òòG L
)
òòL M
;
òòM N
var
ôô 
lightmapStatic
ôô "
=
ôô# $
(
ôô% &
staticFlags
ôô& 1
&
ôô2 3
(
ôô4 5
uint
ôô5 9
)
ôô9 :
k_ContributeGI
ôô; I
)
ôôI J
!=
ôôK M
$num
ôôN O
;
ôôO P
if
õõ 
(
õõ 
lightmapStatic
õõ "
)
õõ" #
{
úú 
var
ùù 

gameObject
ùù "
=
ùù# $
modification
ùù% 1
.
ùù1 2
currentValue
ùù2 >
.
ùù> ?
target
ùù? E
as
ùùF H

GameObject
ùùI S
;
ùùS T
if
üü 
(
üü 

gameObject
üü "
!=
üü# %
null
üü& *
)
üü* +
{
†† 
var
°° 
mesh
°°  
=
°°! "

gameObject
°°# -
.
°°- .
GetComponent
°°. :
<
°°: ;
ProBuilderMesh
°°; I
>
°°I J
(
°°J K
)
°°K L
;
°°L M
if
££ 
(
££ 
mesh
££  
!=
££! #
null
££$ (
)
££( )
mesh
§§  
.
§§  !
Optimize
§§! )
(
§§) *
)
§§* +
;
§§+ ,
}
•• 
}
¶¶ 
}
ßß 
return
©© 
modifications
©©  
;
©©  !
}
™™ 	
static
¨¨ 
void
¨¨ %
OnLightmappingCompleted
¨¨ +
(
¨¨+ ,
)
¨¨, -
{
≠≠ 	
if
ÆÆ 
(
ÆÆ 
!
ÆÆ ,
s_ShowMissingLightmapUVWarning
ÆÆ /
)
ÆÆ/ 0
return
ØØ 
;
ØØ 
var
±± 

missingUv2
±± 
=
±± 
Object
±± #
.
±±# $
FindObjectsOfType
±±$ 5
<
±±5 6
ProBuilderMesh
±±6 D
>
±±D E
(
±±E F
)
±±F G
.
±±G H
Where
±±H M
(
±±M N
x
±±N O
=>
±±P R
!
±±S T
x
±±T U
.
±±U V
	HasArrays
±±V _
(
±±_ `

MeshArrays
±±` j
.
±±j k
Lightmap
±±k s
)
±±s t
&&
±±u w
x
±±x y
.
±±y z

gameObject±±z Ñ
.±±Ñ Ö
HasStaticFlag±±Ö í
(±±í ì
k_ContributeGI±±ì °
)±±° ¢
)±±¢ £
;±±£ §
int
≥≥ 
count
≥≥ 
=
≥≥ 

missingUv2
≥≥ "
.
≥≥" #
Count
≥≥# (
(
≥≥( )
)
≥≥) *
;
≥≥* +
if
µµ 
(
µµ 
count
µµ 
>
µµ 
$num
µµ 
)
µµ 
Log
∂∂ 
.
∂∂ 
Warning
∂∂ 
(
∂∂ 
$str∂∂ …
,∂∂…  
count∂∂À –
,∂∂– —
count∂∂“ ◊
==∂∂ÿ ⁄
$num∂∂€ ‹
?∂∂› ﬁ
$str∂∂ﬂ Â
:∂∂Ê Á
$str∂∂Ë 
)∂∂ Ò
;∂∂Ò Ú
}
∑∑ 	
public
ææ 
static
ææ 
int
ææ '
RebuildMissingLightmapUVs
ææ 3
(
ææ3 4
IEnumerable
ææ4 ?
<
ææ? @
ProBuilderMesh
ææ@ N
>
ææN O
	selection
ææP Y
,
ææY Z
bool
ææ[ _
showProgressBar
ææ` o
=
ææp q
false
æær w
)
ææw x
{
øø 	
int
¿¿ 
count
¿¿ 
=
¿¿ 
$num
¿¿ 
;
¿¿ 
float
¡¡ 
total
¡¡ 
=
¡¡ 
	selection
¡¡ #
.
¡¡# $
Count
¡¡$ )
(
¡¡) *
x
¡¡* +
=>
¡¡, .
x
¡¡/ 0
.
¡¡0 1

gameObject
¡¡1 ;
.
¡¡; <
HasStaticFlag
¡¡< I
(
¡¡I J
k_ContributeGI
¡¡J X
)
¡¡X Y
&&
¡¡Z \
!
¡¡] ^
x
¡¡^ _
.
¡¡_ `
	HasArrays
¡¡` i
(
¡¡i j

MeshArrays
¡¡j t
.
¡¡t u
Lightmap
¡¡u }
)
¡¡} ~
)
¡¡~ 
;¡¡ Ä
foreach
√√ 
(
√√ 
var
√√ 
mesh
√√ 
in
√√  
	selection
√√! *
)
√√* +
{
ƒƒ 
if
≈≈ 
(
≈≈ 
!
≈≈ 
mesh
≈≈ 
.
≈≈ 

gameObject
≈≈ $
.
≈≈$ %
HasStaticFlag
≈≈% 2
(
≈≈2 3
k_ContributeGI
≈≈3 A
)
≈≈A B
||
≈≈C E
mesh
≈≈F J
.
≈≈J K
	HasArrays
≈≈K T
(
≈≈T U

MeshArrays
≈≈U _
.
≈≈_ `
Texture1
≈≈` h
)
≈≈h i
)
≈≈i j
continue
∆∆ 
;
∆∆ 
if
»» 
(
»» 
showProgressBar
»» #
)
»»# $
{
…… 
if
   
(
   
UnityEditor
   #
.
  # $
EditorUtility
  $ 1
.
  1 2*
DisplayCancelableProgressBar
  2 N
(
  N O
$str
  O f
,
  f g
$str  h É
+  Ñ Ö
mesh  Ü ä
.  ä ã
name  ã è
,  è ê
count  ë ñ
/  ó ò
total  ô û
)  û ü
)  ü †
break
ÀÀ 
;
ÀÀ 
}
ÃÃ 
count
ŒŒ 
++
ŒŒ 
;
ŒŒ 
mesh
œœ 
.
œœ 
Optimize
œœ 
(
œœ 
true
œœ "
)
œœ" #
;
œœ# $
}
–– 
UnityEditor
““ 
.
““ 
EditorUtility
““ %
.
““% &
ClearProgressBar
““& 6
(
““6 7
)
““7 8
;
““8 9
return
‘‘ 
count
‘‘ 
;
‘‘ 
}
’’ 	
public
€€ 
static
€€ 
UnwrapParam
€€ !
GetUnwrapParam
€€" 0
(
€€0 1
UnwrapParameters
€€1 A

parameters
€€B L
)
€€L M
{
‹‹ 	
UnwrapParam
›› 
param
›› 
=
›› 
new
››  #
UnwrapParam
››$ /
(
››/ 0
)
››0 1
;
››1 2
if
ﬂﬂ 
(
ﬂﬂ 

parameters
ﬂﬂ 
!=
ﬂﬂ 
null
ﬂﬂ "
)
ﬂﬂ" #
{
‡‡ 
param
·· 
.
·· 

angleError
··  
=
··! "
Mathf
··# (
.
··( )
Clamp
··) .
(
··. /

parameters
··/ 9
.
··9 :

angleError
··: D
,
··D E
$num
··F H
,
··H I
$num
··J M
)
··M N
*
··O P
$num
··Q U
;
··U V
param
‚‚ 
.
‚‚ 
	areaError
‚‚ 
=
‚‚! "
Mathf
‚‚# (
.
‚‚( )
Clamp
‚‚) .
(
‚‚. /

parameters
‚‚/ 9
.
‚‚9 :
	areaError
‚‚: C
,
‚‚D E
$num
‚‚F H
,
‚‚H I
$num
‚‚J M
)
‚‚M N
*
‚‚O P
$num
‚‚Q U
;
‚‚U V
param
„„ 
.
„„ 
	hardAngle
„„ 
=
„„! "
Mathf
„„# (
.
„„( )
Clamp
„„) .
(
„„. /

parameters
„„/ 9
.
„„9 :
	hardAngle
„„: C
,
„„D E
$num
„„F H
,
„„H I
$num
„„J N
)
„„N O
;
„„O P
param
‰‰ 
.
‰‰ 

packMargin
‰‰  
=
‰‰! "
Mathf
‰‰# (
.
‰‰( )
Clamp
‰‰) .
(
‰‰. /

parameters
‰‰/ 9
.
‰‰9 :

packMargin
‰‰: D
,
‰‰D E
$num
‰‰F H
,
‰‰H I
$num
‰‰J L
)
‰‰L M
*
‰‰N O
$num
‰‰P U
;
‰‰U V
}
ÂÂ 
else
ÊÊ 
{
ÁÁ 
param
ËË 
.
ËË 

angleError
ËË  
=
ËË! "
Mathf
ËË# (
.
ËË( )
Clamp
ËË) .
(
ËË. /
UnwrapParameters
ËË/ ?
.
ËË? @
k_AngleError
ËË@ L
,
ËËL M
$num
ËËN P
,
ËËP Q
$num
ËËR U
)
ËËU V
*
ËËW X
$num
ËËY ]
;
ËË] ^
param
ÈÈ 
.
ÈÈ 
	areaError
ÈÈ 
=
ÈÈ! "
Mathf
ÈÈ# (
.
ÈÈ( )
Clamp
ÈÈ) .
(
ÈÈ. /
UnwrapParameters
ÈÈ/ ?
.
ÈÈ? @
k_AreaError
ÈÈ@ K
,
ÈÈL M
$num
ÈÈN P
,
ÈÈP Q
$num
ÈÈR U
)
ÈÈU V
*
ÈÈW X
$num
ÈÈY ]
;
ÈÈ] ^
param
ÍÍ 
.
ÍÍ 
	hardAngle
ÍÍ 
=
ÍÍ! "
Mathf
ÍÍ# (
.
ÍÍ( )
Clamp
ÍÍ) .
(
ÍÍ. /
UnwrapParameters
ÍÍ/ ?
.
ÍÍ? @
k_HardAngle
ÍÍ@ K
,
ÍÍL M
$num
ÍÍN P
,
ÍÍP Q
$num
ÍÍR V
)
ÍÍV W
;
ÍÍW X
param
ÎÎ 
.
ÎÎ 

packMargin
ÎÎ  
=
ÎÎ! "
Mathf
ÎÎ# (
.
ÎÎ( )
Clamp
ÎÎ) .
(
ÎÎ. /
UnwrapParameters
ÎÎ/ ?
.
ÎÎ? @
k_PackMargin
ÎÎ@ L
,
ÎÎL M
$num
ÎÎN P
,
ÎÎP Q
$num
ÎÎR T
)
ÎÎT U
*
ÎÎV W
$num
ÎÎX ]
;
ÎÎ] ^
}
ÏÏ 
return
ÓÓ 
param
ÓÓ 
;
ÓÓ 
}
ÔÔ 	
internal
ÒÒ 
static
ÒÒ 
void
ÒÒ  
PushGIWorkflowMode
ÒÒ /
(
ÒÒ/ 0
)
ÒÒ0 1
{
ÚÚ 	
s_GiWorkflowMode
ÛÛ 
.
ÛÛ 
SetValue
ÛÛ %
(
ÛÛ% &
UL
ÛÛ& (
.
ÛÛ( )
giWorkflowMode
ÛÛ) 7
,
ÛÛ7 8
true
ÛÛ9 =
)
ÛÛ= >
;
ÛÛ> ?
if
ıı 
(
ıı 
UL
ıı 
.
ıı 
giWorkflowMode
ıı !
!=
ıı" $
UL
ıı% '
.
ıı' (
GIWorkflowMode
ıı( 6
.
ıı6 7
Legacy
ıı7 =
)
ıı= >
UL
ˆˆ 
.
ˆˆ 
giWorkflowMode
ˆˆ !
=
ˆˆ" #
UL
ˆˆ$ &
.
ˆˆ& '
GIWorkflowMode
ˆˆ' 5
.
ˆˆ5 6
OnDemand
ˆˆ6 >
;
ˆˆ> ?
}
˜˜ 	
internal
˘˘ 
static
˘˘ 
void
˘˘ 
PopGIWorkflowMode
˘˘ .
(
˘˘. /
)
˘˘/ 0
{
˙˙ 	
UL
˚˚ 
.
˚˚ 
giWorkflowMode
˚˚ 
=
˚˚ 
s_GiWorkflowMode
˚˚  0
;
˚˚0 1
}
¸¸ 	
}
˛˛ 
}ˇˇ ˆa
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Export\ExportObj.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
.		  !
Actions		! (
{

 
sealed 

class 
	ExportObj 
: 

MenuAction '
{ 
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
ExportG M
;M N
}O P
}Q R
public 
override 
	Texture2D !
icon" &
{' (
get) ,
{- .
return/ 5
null6 :
;: ;
}< =
}> ?
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
_tooltip> F
;F G
}H I
}J K
static 
readonly 
TooltipContent &
_tooltip' /
=0 1
new2 5
TooltipContent6 D
( 
$str 
, 
$str .
) 
; 
public 
override 
bool 
hidden #
{ 	
get 
{ 
return 
true 
; 
}  
} 	
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
MeshSelection &
.& '
selectedObjectCount' :
>; <
$num= >
;> ?
}@ A
} 	
public!! 
override!! 
ActionResult!! $
DoAction!!% -
(!!- .
)!!. /
{"" 	
string## 
res## 
=##  
ExportWithFileDialog## -
(##- .
MeshSelection##. ;
.##; <
topInternal##< G
)##G H
;##H I
if%% 
(%% 
string%% 
.%% 
IsNullOrEmpty%% $
(%%$ %
res%%% (
)%%( )
)%%) *
return&& 
new&& 
ActionResult&& '
(&&' (
ActionResult&&( 4
.&&4 5
Status&&5 ;
.&&; <
Canceled&&< D
,&&D E
$str&&F U
)&&U V
;&&V W
Export(( 
.(( 
PingExportedModel(( $
((($ %
res((% (
)((( )
;(() *
return** 
new** 
ActionResult** #
(**# $
ActionResult**$ 0
.**0 1
Status**1 7
.**7 8
Success**8 ?
,**? @
$str**A M
)**M N
;**N O
}++ 	
public.. 
static.. 
string..  
ExportWithFileDialog.. 1
(..1 2
IEnumerable..2 =
<..= >
ProBuilderMesh..> L
>..L M
meshes..N T
,..T U
bool..V Z
asGroup..[ b
=..c d
true..e i
,..i j
bool..k o

allowQuads..p z
=..{ |
true	..} Å
,
..Å Ç

ObjOptions
..É ç
options
..é ï
=
..ñ ó
null
..ò ú
)
..ú ù
{// 	
if00 
(00 
meshes00 
==00 
null00 
||00 !
!00" #
meshes00# )
.00) *
Any00* -
(00- .
)00. /
)00/ 0
return11 
null11 
;11 
IEnumerable33 
<33 
Model33 
>33 
models33 %
=33& '

allowQuads33( 2
?44 
meshes44 
.44 
Select44 
(44  
x44  !
=>44" $
new44% (
Model44) .
(44. /
x44/ 0
.440 1

gameObject441 ;
.44; <
name44< @
,44@ A
x44B C
)44C D
)44D E
:55 
meshes55 
.55 
Select55 
(55  
x55  !
=>55" $
new55% (
Model55) .
(55. /
x55/ 0
.550 1

gameObject551 ;
.55; <
name55< @
,55@ A
x55B C
.55C D
mesh55D H
,55H I
x55J K
.55K L
GetComponent55L X
<55X Y
MeshRenderer55Y e
>55e f
(55f g
)55g h
.55h i
sharedMaterials55i x
,55x y
x55z {
.55{ |
	transform	55| Ö
.
55Ö Ü 
localToWorldMatrix
55Ü ò
)
55ò ô
)
55ô ö
;
55ö õ
string77 
path77 
=77 
null77 
,77 
res77  #
=77$ %
null77& *
;77* +
if99 
(99 
asGroup99 
||99 
models99 !
.99! "
Count99" '
(99' (
)99( )
<99* +
$num99, -
)99- .
{:: 
ProBuilderMesh;; 
first;; $
=;;% &
meshes;;' -
.;;- .
FirstOrDefault;;. <
(;;< =
);;= >
;;;> ?
string<< 
name<< 
=<< 
first<< #
!=<<$ &
null<<' +
?<<, -
first<<. 3
.<<3 4
name<<4 8
:<<9 :
$str<<; L
;<<L M
path== 
=== 
UnityEditor== "
.==" #
EditorUtility==# 0
.==0 1
SaveFilePanel==1 >
(==> ?
$str==? N
,==N O
$str==P X
,==X Y
name==Z ^
,==^ _
$str==` e
)==e f
;==f g
if?? 
(?? 
string?? 
.?? 
IsNullOrEmpty?? (
(??( )
path??) -
)??- .
)??. /
return@@ 
null@@ 
;@@  
resBB 
=BB 
DoExportBB 
(BB 
pathBB #
,BB# $
modelsBB% +
,BB+ ,
optionsBB- 4
)BB4 5
;BB5 6
}CC 
elseDD 
{EE 
pathFF 
=FF 
UnityEditorFF "
.FF" #
EditorUtilityFF# 0
.FF0 1
SaveFolderPanelFF1 @
(FF@ A
$strFFA P
,FFP Q
$strFFR Z
,FFZ [
$strFF\ ^
)FF^ _
;FF_ `
ifHH 
(HH 
stringHH 
.HH 
IsNullOrEmptyHH (
(HH( )
pathHH) -
)HH- .
||HH/ 1
!HH2 3
	DirectoryHH3 <
.HH< =
ExistsHH= C
(HHC D
pathHHD H
)HHH I
)HHI J
returnII 
nullII 
;II  
foreachKK 
(KK 
ModelKK 
modelKK $
inKK% '
modelsKK( .
)KK. /
resLL 
=LL 
DoExportLL "
(LL" #
stringLL# )
.LL) *
FormatLL* 0
(LL0 1
$strLL1 >
,LL> ?
pathLL@ D
,LLD E
modelLLF K
.LLK L
nameLLL P
)LLP Q
,LLQ R
newLLS V
ListLLW [
<LL[ \
ModelLL\ a
>LLa b
(LLb c
)LLc d
{LLe f
modelLLg l
}LLm n
,LLn o
optionsLLp w
)LLw x
;LLx y
}MM 
returnOO 
resOO 
;OO 
}PP 	
internalRR 
staticRR 
stringRR 
DoExportRR '
(RR' (
stringRR( .
pathRR/ 3
,RR3 4
IEnumerableRR5 @
<RR@ A
ModelRRA F
>RRF G
modelsRRH N
,RRN O

ObjOptionsRRP Z
optionsRR[ b
)RRb c
{SS 	
stringTT 
nameTT 
=TT 
PathTT 
.TT '
GetFileNameWithoutExtensionTT :
(TT: ;
pathTT; ?
)TT? @
;TT@ A
stringUU 
	directoryUU 
=UU 
PathUU #
.UU# $
GetDirectoryNameUU$ 4
(UU4 5
pathUU5 9
)UU9 :
;UU: ;
ListWW 
<WW 
stringWW 
>WW 
texturesWW !
=WW" #
nullWW$ (
;WW( )
stringXX 
objXX 
,XX 
matXX 
;XX 
ifZZ 
(ZZ 
ObjExporterZZ 
.ZZ 
ExportZZ "
(ZZ" #
nameZZ# '
,ZZ' (
modelsZZ) /
,ZZ/ 0
outZZ1 4
objZZ5 8
,ZZ8 9
outZZ: =
matZZ> A
,ZZA B
outZZC F
texturesZZG O
,ZZO P
optionsZZQ X
)ZZX Y
)ZZY Z
{[[ 
try\\ 
{]] 
FileUtility^^ 
.^^  
WriteAllText^^  ,
(^^, -
string^^- 3
.^^3 4
Format^^4 :
(^^: ;
$str^^; H
,^^H I
	directory^^J S
,^^S T
name^^U Y
)^^Y Z
,^^Z [
obj^^\ _
)^^_ `
;^^` a
FileUtility__ 
.__  
WriteAllText__  ,
(__, -
string__- 3
.__3 4
Format__4 :
(__: ;
$str__; H
,__H I
	directory__J S
,__S T
name__U Y
.__Y Z
Replace__Z a
(__a b
$str__b e
,__e f
$str__g j
)__j k
)__k l
,__l m
mat__n q
)__q r
;__r s
CopyTextures``  
(``  !
textures``! )
,``) *
	directory``+ 4
)``4 5
;``5 6
}aa 
catchbb 
(bb 
Systembb 
.bb 
	Exceptionbb '
ebb( )
)bb) *
{cc 
Debugdd 
.dd 

LogWarningdd $
(dd$ %
stringdd% +
.dd+ ,
Formatdd, 2
(dd2 3
$strdd3 Y
,ddY Z
stringdd[ a
.dda b
Formatddb h
(ddh i
$strddi v
,ddv w
pathddx |
,dd| }
name	dd~ Ç
)
ddÇ É
,
ddÉ Ñ
e
ddÖ Ü
.
ddÜ á
ToString
ddá è
(
ddè ê
)
ddê ë
)
ddë í
)
ddí ì
;
ddì î
returnee 
nullee 
;ee  
}ff 
}gg 
elsehh 
{ii 
Debugjj 
.jj 

LogWarningjj  
(jj  !
$strjj! 6
)jj6 7
;jj7 8
returnkk 
nullkk 
;kk 
}ll 
returnnn 
pathnn 
;nn 
}oo 	
staticrr 
voidrr 
CopyTexturesrr  
(rr  !
Listrr! %
<rr% &
stringrr& ,
>rr, -
texturesrr. 6
,rr6 7
stringrr8 >
destinationrr? J
)rrJ K
{ss 	
foreachtt 
(tt 
stringtt 
pathtt  
intt! #
texturestt$ ,
)tt, -
{uu 
stringvv 
destvv 
=vv 
stringvv $
.vv$ %
Formatvv% +
(vv+ ,
$strvv, 5
,vv5 6
destinationvv7 B
,vvB C
PathvvD H
.vvH I
GetFileNamevvI T
(vvT U
pathvvU Y
)vvY Z
)vvZ [
;vv[ \
ifxx 
(xx 
!xx 
Filexx 
.xx 
Existsxx  
(xx  !
pathxx! %
)xx% &
)xx& '
{yy 
Logzz 
.zz 
Warningzz 
(zz  
$strzz  G
+zzH I
pathzzJ N
+zzO P
$strzzQ m
)zzm n
;zzn o
continue{{ 
;{{ 
}|| 
if~~ 
(~~ 
!~~ 
File~~ 
.~~ 
Exists~~  
(~~  !
dest~~! %
)~~% &
)~~& '
File 
. 
Copy 
( 
path "
," #
dest$ (
)( )
;) *
}
ÄÄ 
}
ÅÅ 	
}
ÇÇ 
}ÉÉ ÿ&
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Selection\SelectHole.cs
	namespace

 	
UnityEditor


 
.

 

ProBuilder

  
.

  !
Actions

! (
{ 
sealed 

class 

SelectHole 
: 

MenuAction (
{ 
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
	Selection& /
;/ 0
}1 2
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- K
,K L
IconSkinM U
.U V
ProV Y
)Y Z
;Z [
}\ ]
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
private 
static 
readonly 
TooltipContent  .
	s_Tooltip/ 8
=9 :
new; >
TooltipContent? M
( 
$str 
, 
$str	   ë
)!! 
;!! 
public## 
override## 

SelectMode## "
validSelectModes### 3
{$$ 	
get%% 
{%% 
return%% 

SelectMode%% #
.%%# $
Vertex%%$ *
|%%+ ,

SelectMode%%- 7
.%%7 8
Edge%%8 <
;%%< =
}%%> ?
}&& 	
public(( 
override(( 
bool(( 
enabled(( $
{)) 	
get** 
{** 
return** 
base** 
.** 
enabled** %
&&**& (
MeshSelection**) 6
.**6 7
selectedObjectCount**7 J
>**K L
$num**M N
;**N O
}**P Q
}++ 	
public-- 
override-- 
ActionResult-- $
DoAction--% -
(--- .
)--. /
{.. 	
UndoUtility// 
.// 
RecordSelection// '
(//' (
$str//( 5
)//5 6
;//6 7
ActionResult11 
res11 
=11 
ActionResult11 +
.11+ ,
NoSelection11, 7
;117 8
foreach33 
(33 
ProBuilderMesh33 #
pb33$ &
in33' )
MeshSelection33* 7
.337 8
topInternal338 C
)33C D
{44 
bool55 
	selectAll55 
=55  
pb55! #
.55# $#
selectedIndexesInternal55$ ;
==55< >
null55? C
||55D F
pb55G I
.55I J#
selectedIndexesInternal55J a
.55a b
Length55b h
<55i j
$num55k l
;55l m
IEnumerable66 
<66 
int66 
>66  
indexes66! (
=66) *
	selectAll66+ 4
?665 6
pb667 9
.669 :
facesInternal66: G
.66G H

SelectMany66H R
(66R S
x66S T
=>66U W
x66X Y
.66Y Z
indexes66Z a
)66a b
:66c d
pb66e g
.66g h#
selectedIndexesInternal66h 
;	66 Ä
List88 
<88 
List88 
<88 
Edge88 
>88 
>88  
holes88! &
=88' (
ElementSelection88) 9
.889 :
	FindHoles88: C
(88C D
pb88D F
,88F G
indexes88H O
)88O P
;88P Q
res:: 
=:: 
new:: 
ActionResult:: &
(::& '
ActionResult::' 3
.::3 4
Status::4 :
.::: ;
Success::; B
,::B C
holes::D I
.::I J
Count::J O
>::P Q
$num::R S
?::T U
string::V \
.::\ ]
Format::] c
(::c d
$str::d u
,::u v
holes::w |
.::| }
Count	::} Ç
)
::Ç É
:
::Ñ Ö
$str
::Ü ù
)
::ù û
;
::û ü
pb<< 
.<< 
SetSelectedEdges<< #
(<<# $
holes<<$ )
.<<) *

SelectMany<<* 4
(<<4 5
x<<5 6
=><<7 9
x<<: ;
)<<; <
)<<< =
;<<= >
}== 
ProBuilderEditor?? 
.?? 
Refresh?? $
(??$ %
)??% &
;??& '
returnAA 
resAA 
;AA 
}BB 	
}CC 
}DD ú
ûD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Editors\OpenShapeEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed		 

class		 
OpenShapeEditor		  
:		! "

MenuAction		# -
{

 
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
ToolG K
;K L
}M N
}O P
public 
override 
	Texture2D !
icon" &
{' (
get) ,
{- .
return/ 5
IconUtility6 A
.A B
GetIconB I
(I J
$strJ `
,` a
IconSkinb j
.j k
Prok n
)n o
;o p
}q r
}s t
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
	s_Tooltip> G
;G H
}I J
}K L
public 
override 
string 
	menuTitle (
{) *
get+ .
{/ 0
return1 7
$str8 C
;C D
}E F
}G H
public 
override 
int 
toolbarPriority +
{, -
get. 1
{2 3
return4 :
$num; <
;< =
}> ?
}@ A
	protected 
override 
bool 
hasFileMenuEntry  0
{1 2
get3 6
{7 8
return9 ?
false@ E
;E F
}G H
}I J
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str  
,  !
$str	 ã
,
ã å
keyCommandSuper 
,  
keyCommandShift! 0
,0 1
$char2 5
) 
; 
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
true 
; 
}  
} 	
	protected 
override 
MenuActionState *
optionsMenuState+ ;
{ 	
get   
{   
return   
MenuActionState   (
.  ( )
VisibleAndEnabled  ) :
;  : ;
}  < =
}!! 	
public## 
override## 
ActionResult## $
DoAction##% -
(##- .
)##. /
{$$ 	
ShapeEditor%% 
.%% 
CreateActiveShape%% )
(%%) *
)%%* +
;%%+ ,
return&& 
new&& 
ActionResult&& #
(&&# $
ActionResult&&$ 0
.&&0 1
Status&&1 7
.&&7 8
Success&&8 ?
,&&? @
$str&&A O
)&&O P
;&&P Q
}'' 	
	protected)) 
override)) 
void)) 
DoAlternateAction))  1
())1 2
)))2 3
{** 	
ShapeEditor++ 
.++  
MenuOpenShapeCreator++ ,
(++, -
)++- .
;++. /
},, 	
}-- 
}.. Ö"
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Selection\SelectRing.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
.		  !
Actions		! (
{

 
sealed 

class 

SelectRing 
: 

MenuAction (
{ 
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
	Selection& /
;/ 0
}1 2
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
null 
; 
}  
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
public 
override 
int 
toolbarPriority +
{ 	
get 
{ 
return 
$num 
; 
} 
}   	
static"" 
readonly"" 
TooltipContent"" &
	s_Tooltip""' 0
=""1 2
new""3 6
TooltipContent""7 E
(## 
$str$$ 
,$$ 
$str%% 
,%% 
keyCommandAlt&& 
,&& 
$char&& "
)'' 
;'' 
public)) 
override)) 

SelectMode)) "
validSelectModes))# 3
{** 	
get++ 
{++ 
return++ 

SelectMode++ #
.++# $
Edge++$ (
|++) *

SelectMode+++ 5
.++5 6
Face++6 :
|++; <

SelectMode++= G
.++G H
TextureFace++H S
;++S T
}++U V
},, 	
public.. 
override.. 
bool.. 
enabled.. $
{// 	
get00 
{11 
if22 
(22 
ProBuilderEditor22 $
.22$ %

selectMode22% /
==220 2

SelectMode223 =
.22= >
Edge22> B
)22B C
return33 
EditorToolbarLoader33 .
.33. /
GetInstance33/ :
<33: ;
SelectEdgeRing33; I
>33I J
(33J K
)33K L
.33L M
enabled33M T
;33T U
else44 
if44 
(44 
ProBuilderEditor44 )
.44) *

selectMode44* 4
==445 7

SelectMode448 B
.44B C
Face44C G
)44G H
return55 
EditorToolbarLoader55 .
.55. /
GetInstance55/ :
<55: ;
SelectFaceRing55; I
>55I J
(55J K
)55K L
.55L M
enabled55M T
;55T U
else66 
return77 
false77  
;77  !
}88 
}99 	
public;; 
override;; 
ActionResult;; $
DoAction;;% -
(;;- .
);;. /
{<< 	
if== 
(== 
ProBuilderEditor==  
.==  !

selectMode==! +
====, .

SelectMode==/ 9
.==9 :
Edge==: >
)==> ?
return>> 
EditorToolbarLoader>> *
.>>* +
GetInstance>>+ 6
<>>6 7
SelectEdgeRing>>7 E
>>>E F
(>>F G
)>>G H
.>>H I
DoAction>>I Q
(>>Q R
)>>R S
;>>S T
else?? 
if?? 
(?? 
ProBuilderEditor?? %
.??% &

selectMode??& 0
==??1 3

SelectMode??4 >
.??> ?
Face??? C
)??C D
return@@ 
EditorToolbarLoader@@ *
.@@* +
GetInstance@@+ 6
<@@6 7
SelectFaceRing@@7 E
>@@E F
(@@F G
)@@G H
.@@H I
DoAction@@I Q
(@@Q R
)@@R S
;@@S T
returnAA 
ActionResultAA 
.AA  
NoSelectionAA  +
;AA+ ,
}BB 	
}CC 
}DD Úl
ñD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\PositionMoveTool.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
class 	
PositionMoveTool
 
: 
PositionTool )
{ 
const 
float 
k_CardinalAxisError '
=( )
$num* /
;/ 0
const		 
float		 +
k_MinTranslateDeltaSqrMagnitude		 3
=		4 5
$num		6 =
;		= >
Vector3

 
m_HandlePosition

  
;

  !
Vector3 
m_RawHandleDelta  
;  !
Vector3Mask 
m_ActiveAxesModel %
;% &
Vector3Mask 
m_ActiveAxesWorld %
;% &
bool 
m_SnapAsGroup 
; 
	protected 
override 
void 
OnToolEngaged  -
(- .
). /
{ 	
m_ActiveAxesModel 
= 
worldSnapEnabled  0
&&1 3
!4 5
snapAxisConstraint5 G
? 
Vector3Mask 
. 
XYZ !
: 
new 
Vector3Mask !
(! "
$num" %
)% &
;& '
m_SnapAsGroup"" 
="" 
worldSnapEnabled"" ,
&&""- /"
ProBuilderSnapSettings""0 F
.""F G
snapAsGroup""G R
;""R S
}## 	
	protected%% 
override%% 
void%% 
DoTool%%  &
(%%& '
Vector3%%' .
handlePosition%%/ =
,%%= >

Quaternion%%? I
handleRotation%%J X
)%%X Y
{&& 	
base'' 
.'' 
DoTool'' 
('' 
handlePosition'' &
,''& '
handleRotation''( 6
)''6 7
;''7 8
if)) 
()) 
!)) 
	isEditing)) 
))) 
m_HandlePosition**  
=**! "
handlePosition**# 1
;**1 2
	EditorGUI11 
.11 
BeginChangeCheck11 &
(11& '
)11' (
;11( )
m_HandlePosition33 
=33 
Handles33 &
.33& '
PositionHandle33' 5
(335 6
m_HandlePosition336 F
,33F G
handleRotation33H V
)33V W
;33W X
m_RawHandleDelta55 
=55 
m_HandlePosition55 /
-550 1 
handlePositionOrigin552 F
;55F G
var77 
delta77 
=77 
m_RawHandleDelta77 (
;77( )
if99 
(99 
	EditorGUI99 
.99 
EndChangeCheck99 (
(99( )
)99) *
&&99+ -
delta99. 3
.993 4
sqrMagnitude994 @
>99A B+
k_MinTranslateDeltaSqrMagnitude99C b
)99b c
{:: 
if;; 
(;; 
!;; 
	isEditing;; 
);; 
	BeginEdit<< 
(<< 
$str<< 3
)<<3 4
;<<4 5
if>> 
(>> 
vertexDragging>> "
)>>" #
{?? 
Vector3@@ 
nearest@@ #
;@@# $
ifBB 
(BB 
FindNearestVertexBB )
(BB) *
currentEventBB* 6
.BB6 7
mousePositionBB7 D
,BBD E
outBBF I
nearestBBJ Q
)BBQ R
)BBR S
{CC 
varDD 
	unrotatedDD %
=DD& ''
handleRotationOriginInverseDD( C
*DDD E
deltaDDF K
;DDK L
varEE 
dirEE 
=EE  !
newEE" %
Vector3MaskEE& 1
(EE1 2
	unrotatedEE2 ;
,EE; <
k_CardinalAxisErrorEE= P
)EEP Q
;EEQ R
ifGG 
(GG 
dirGG 
.GG  
activeGG  &
==GG' )
$numGG* +
)GG+ ,
{HH 
varII 
rotationDirectionII  1
=II2 3 
handleRotationOriginII4 H
*III J
dirIIK N
*IIO P
$numIIQ W
;IIW X
m_HandlePositionKK ,
=KK- .
HandleUtilityKK/ <
.KK< =
ProjectPointLineKK= M
(KKM N
nearestKKN U
,KKU V 
handlePositionOriginLL  4
+LL5 6
rotationDirectionLL7 H
,LLH I 
handlePositionOriginMM  4
-MM5 6
rotationDirectionMM7 H
)MMH I
;MMI J
deltaOO !
=OO" #
m_HandlePositionOO$ 4
-OO5 6 
handlePositionOriginOO7 K
;OOK L
}PP 
}QQ 
}RR 
elseSS 
ifSS 
(SS 
worldSnapEnabledSS )
)SS) *
{TT 
ifUU 
(UU 
snapAxisConstraintUU *
)UU* +
{VV 
m_ActiveAxesModelWW )
|=WW* ,
newWW- 0
Vector3MaskWW1 <
(WW< ='
handleRotationOriginInverseWW= X
*WWY Z
deltaWW[ `
,WW` a
k_CardinalAxisErrorWWb u
)WWu v
;WWv w
m_ActiveAxesWorldXX )
=XX* +
newXX, /
Vector3MaskXX0 ;
(XX; <
handleRotationXX< J
*XXK L
m_ActiveAxesModelXXM ^
)XX^ _
;XX_ `
ifZZ 
(ZZ 
m_ActiveAxesWorldZZ -
.ZZ- .
activeZZ. 4
==ZZ5 7
$numZZ8 9
)ZZ9 :
{[[ 
m_HandlePosition\\ ,
=\\- .
ProBuilderSnapping\\/ A
.\\A B
SnapValueOnRay\\B P
(\\P Q
new]]  #
Ray]]$ '
(]]' ( 
handlePositionOrigin]]( <
,]]< =
delta]]> C
)]]C D
,]]D E
delta^^  %
.^^% &
	magnitude^^& /
,^^/ 0
GetSnapValueForAxis__  3
(__3 4
m_ActiveAxesModel__4 E
)__E F
,__F G
m_ActiveAxesWorld``  1
)``1 2
;``2 3
}aa 
elsebb 
{cc 
m_HandlePositiondd ,
=dd- .
ProBuilderSnappingdd/ A
.ddA B
	SnapValueddB K
(ddK L
m_HandlePositionddL \
,dd\ ]
	snapValuedd^ g
)ddg h
;ddh i
}ee 
}ff 
elsegg 
{hh 
m_HandlePositionii (
=ii) *
ProBuilderSnappingii+ =
.ii= >
	SnapValueii> G
(iiG H
m_HandlePositioniiH X
,iiX Y
	snapValueiiZ c
)iic d
;iid e
}jj 
deltall 
=ll 
m_HandlePositionll ,
-ll- . 
handlePositionOriginll/ C
;llC D
}mm 
ApplyTranslation||  
(||  !'
handleRotationOriginInverse||! <
*||= >
delta||? D
)||D E
;||E F
}}} 
if
ÄÄ 
(
ÄÄ 
showHandleInfo
ÄÄ 
&&
ÄÄ  
	isEditing
ÄÄ! *
)
ÄÄ* +
DrawDeltaInfo
ÅÅ 
(
ÅÅ 
string
ÅÅ $
.
ÅÅ$ %
Format
ÅÅ% +
(
ÅÅ+ ,
$str
ÅÅ, K
,
ÅÅK L
delta
ÅÅM R
.
ÅÅR S
	magnitude
ÅÅS \
,
ÅÅ\ ]
(
ÅÅ^ _)
handleRotationOriginInverse
ÅÅ_ z
*
ÅÅ{ |
deltaÅÅ} Ç
)ÅÅÇ É
.ÅÅÉ Ñ
ToStringÅÅÑ å
(ÅÅå ç
$strÅÅç ì
)ÅÅì î
)ÅÅî ï
)ÅÅï ñ
;ÅÅñ ó
}
ÇÇ 	
void
ÑÑ 
ApplyTranslation
ÑÑ 
(
ÑÑ 
Vector3
ÑÑ %
translation
ÑÑ& 1
)
ÑÑ1 2
{
ÖÖ 	
var
ÜÜ "
translationMagnitude
ÜÜ $
=
ÜÜ% &
translation
ÜÜ' 2
.
ÜÜ2 3
	magnitude
ÜÜ3 <
;
ÜÜ< =
foreach
àà 
(
àà 
var
àà 
key
àà 
in
àà 
elementSelection
àà  0
)
àà0 1
{
ââ 
if
ää 
(
ää 
!
ää 
(
ää 
key
ää 
is
ää 
MeshAndPositions
ää -
)
ää- .
)
ää. /
continue
ãã 
;
ãã 
var
çç 
kvp
çç 
=
çç 
(
çç 
MeshAndPositions
çç +
)
çç+ ,
key
çç, /
;
çç/ 0
var
éé 
mesh
éé 
=
éé 
kvp
éé 
.
éé 
mesh
éé #
;
éé# $
var
èè 
worldToLocal
èè  
=
èè! "
mesh
èè# '
.
èè' (
	transform
èè( 1
.
èè1 2 
worldToLocalMatrix
èè2 D
;
èèD E
var
êê 
origins
êê 
=
êê 
kvp
êê !
.
êê! "
	positions
êê" +
;
êê+ ,
var
ëë 
	positions
ëë 
=
ëë 
mesh
ëë  $
.
ëë$ %
positionsInternal
ëë% 6
;
ëë6 7
foreach
ìì 
(
ìì 
var
ìì 
group
ìì "
in
ìì# %
kvp
ìì& )
.
ìì) *
elementGroups
ìì* 7
)
ìì7 8
{
îî 
var
ïï 
postApplyMatrix
ïï '
=
ïï( ) 
GetPostApplyMatrix
ïï* <
(
ïï< =
group
ïï= B
)
ïïB C
;
ïïC D
var
ññ 
preApplyMatrix
ññ &
=
ññ' (
postApplyMatrix
ññ) 8
.
ññ8 9
inverse
ññ9 @
;
ññ@ A
foreach
òò 
(
òò 
var
òò  
index
òò! &
in
òò' )
group
òò* /
.
òò/ 0
indices
òò0 7
)
òò7 8
{
ôô 
if
ûû 
(
ûû 
worldSnapEnabled
ûû ,
&&
ûû- /
!
ûû0 1
m_SnapAsGroup
ûû1 >
)
ûû> ?
{
üü 
if
†† 
(
††   
snapAxisConstraint
††  2
&&
††3 5
m_ActiveAxesWorld
††6 G
.
††G H
active
††H N
==
††O Q
$num
††R S
)
††S T
{
°° 
var
¢¢  #
wp
¢¢$ &
=
¢¢' (
postApplyMatrix
¢¢) 8
.
¢¢8 9
MultiplyPoint3x4
¢¢9 I
(
¢¢I J
preApplyMatrix
¢¢J X
.
¢¢X Y
MultiplyPoint3x4
¢¢Y i
(
¢¢i j
origins
¢¢j q
[
¢¢q r
index
¢¢r w
]
¢¢w x
)
¢¢x y
)
¢¢y z
;
¢¢z {
var
§§  #
snap
§§$ (
=
§§) * 
ProBuilderSnapping
§§+ =
.
§§= >
SnapValueOnRay
§§> L
(
§§L M
new
••$ '
Ray
••( +
(
••+ ,
wp
••, .
,
••. /
m_RawHandleDelta
••0 @
)
••@ A
,
••A B"
translationMagnitude
¶¶$ 8
,
¶¶8 9!
GetSnapValueForAxis
ßß$ 7
(
ßß7 8
m_ActiveAxesWorld
ßß8 I
)
ßßI J
,
ßßJ K
m_ActiveAxesWorld
®®$ 5
)
®®5 6
;
®®6 7
	positions
™™  )
[
™™) *
index
™™* /
]
™™/ 0
=
™™1 2
worldToLocal
™™3 ?
.
™™? @
MultiplyPoint3x4
™™@ P
(
™™P Q
snap
™™Q U
)
™™U V
;
™™V W
}
´´ 
else
¨¨  
{
≠≠ 
var
ÆÆ  #
wp
ÆÆ$ &
=
ÆÆ' (
postApplyMatrix
ÆÆ) 8
.
ÆÆ8 9
MultiplyPoint3x4
ÆÆ9 I
(
ÆÆI J
translation
ÆÆJ U
+
ÆÆV W
preApplyMatrix
ÆÆX f
.
ÆÆf g
MultiplyPoint3x4
ÆÆg w
(
ÆÆw x
origins
ÆÆx 
[ÆÆ Ä
indexÆÆÄ Ö
]ÆÆÖ Ü
)ÆÆÜ á
)ÆÆá à
;ÆÆà â
var
ØØ  #
snap
ØØ$ (
=
ØØ) * 
ProBuilderSnapping
ØØ+ =
.
ØØ= >
	SnapValue
ØØ> G
(
ØØG H
wp
ØØH J
,
ØØJ K
	snapValue
ØØL U
)
ØØU V
;
ØØV W
	positions
∞∞  )
[
∞∞) *
index
∞∞* /
]
∞∞/ 0
=
∞∞1 2
worldToLocal
∞∞3 ?
.
∞∞? @
MultiplyPoint3x4
∞∞@ P
(
∞∞P Q
snap
∞∞Q U
)
∞∞U V
;
∞∞V W
}
±± 
}
≤≤ 
else
≥≥ 
{
¥¥ 
	positions
µµ %
[
µµ% &
index
µµ& +
]
µµ+ ,
=
µµ- .
worldToLocal
µµ/ ;
.
µµ; <
MultiplyPoint3x4
µµ< L
(
µµL M
postApplyMatrix
∂∂  /
.
∂∂/ 0
MultiplyPoint3x4
∂∂0 @
(
∂∂@ A
translation
∑∑$ /
+
∑∑0 1
preApplyMatrix
∑∑2 @
.
∑∑@ A
MultiplyPoint3x4
∑∑A Q
(
∑∑Q R
origins
∑∑R Y
[
∑∑Y Z
index
∑∑Z _
]
∑∑_ `
)
∑∑` a
)
∑∑a b
)
∑∑b c
;
∑∑c d
}
∏∏ 
}
ππ 
}
∫∫ 
mesh
ºº 
.
ºº 
mesh
ºº 
.
ºº 
vertices
ºº "
=
ºº# $
	positions
ºº% .
;
ºº. /
mesh
ΩΩ 
.
ΩΩ 
	RefreshUV
ΩΩ 
(
ΩΩ 
MeshSelection
ΩΩ ,
.
ΩΩ, -%
selectedFacesInEditZone
ΩΩ- D
[
ΩΩD E
mesh
ΩΩE I
]
ΩΩI J
)
ΩΩJ K
;
ΩΩK L
mesh
ææ 
.
ææ 
Refresh
ææ 
(
ææ 
RefreshMask
ææ (
.
ææ( )
Normals
ææ) 0
)
ææ0 1
;
ææ1 2
}
øø 
ProBuilderEditor
¡¡ 
.
¡¡ 
Refresh
¡¡ $
(
¡¡$ %
false
¡¡% *
)
¡¡* +
;
¡¡+ ,
}
¬¬ 	
}
”” 
}‘‘ à∑
ôD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\EditorHandleDrawing.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
static 

partial 
class 
EditorHandleDrawing ,
{ 
const 
	HideFlags 
k_ResourceHideFlags +
=, -
	HideFlags. 7
.7 8
HideAndDontSave8 G
;G H
const 
float +
k_MinLineWidthForGeometryShader 3
=4 5
$num6 :
;: ;
static 
bool 
s_Initialized !
;! "
static 

ObjectPool 
< 
Mesh 
> 
m_MeshPool2  +
;+ ,
static 

Dictionary 
< 
ProBuilderMesh (
,( )

MeshHandle* 4
>4 5
m_WireHandles6 C
;C D
static 

Dictionary 
< 
ProBuilderMesh (
,( )

MeshHandle* 4
>4 5
m_VertexHandles6 E
;E F
static 

Dictionary 
< 
ProBuilderMesh (
,( )

MeshHandle* 4
>4 5!
m_SelectedFaceHandles6 K
;K L
static 

Dictionary 
< 
ProBuilderMesh (
,( )

MeshHandle* 4
>4 5#
m_SelectedVertexHandles6 M
;M N
static 

Dictionary 
< 
ProBuilderMesh (
,( )

MeshHandle* 4
>4 5!
m_SelectedEdgeHandles6 K
;K L
static   
Material   
m_EdgeMaterial   &
;  & '
static!! 
Material!! 
m_VertMaterial!! &
;!!& '
static"" 
Material"" 
m_WireMaterial"" &
;""& '
static## 
Material## 
m_LineMaterial## &
;##& '
static$$ 
Material$$ 
m_FaceMaterial$$ &
;$$& '
static%% 
Material%% 
m_GlWireMaterial%% (
;%%( )
static'' 
Material'' 
edgeMaterial'' $
{''% &
get''' *
{''+ ,
Init''- 1
(''1 2
)''2 3
;''3 4
return''5 ;
m_EdgeMaterial''< J
;''J K
}''L M
}''N O
static(( 
Material(( 
vertMaterial(( $
{((% &
get((' *
{((+ ,
Init((- 1
(((1 2
)((2 3
;((3 4
return((5 ;
m_VertMaterial((< J
;((J K
}((L M
}((N O
static)) 
Material)) 
wireMaterial)) $
{))% &
get))' *
{))+ ,
Init))- 1
())1 2
)))2 3
;))3 4
return))5 ;
m_WireMaterial))< J
;))J K
}))L M
}))N O
static** 
Material** 
lineMaterial** $
{**% &
get**' *
{**+ ,
Init**- 1
(**1 2
)**2 3
;**3 4
return**5 ;
m_LineMaterial**< J
;**J K
}**L M
}**N O
static++ 
Material++ 
faceMaterial++ $
{++% &
get++' *
{+++ ,
Init++- 1
(++1 2
)++2 3
;++3 4
return++5 ;
m_FaceMaterial++< J
;++J K
}++L M
}++N O
static,, 
Material,, 
glWireMaterial,, &
{,,' (
get,,) ,
{,,- .
Init,,/ 3
(,,3 4
),,4 5
;,,5 6
return,,7 =
m_GlWireMaterial,,> N
;,,N O
},,P Q
},,R S
static.. 

ObjectPool.. 
<.. 
Mesh.. 
>.. 
meshPool..  (
{..) *
get..+ .
{../ 0
Init..1 5
(..5 6
)..6 7
;..7 8
return..9 ?
m_MeshPool2..@ K
;..K L
}..M N
}..O P
static// 

Dictionary// 
<// 
ProBuilderMesh// (
,//( )

MeshHandle//* 4
>//4 5
wireHandles//6 A
{//B C
get//D G
{//H I
Init//J N
(//N O
)//O P
;//P Q
return//R X
m_WireHandles//Y f
;//f g
}//h i
}//j k
static00 

Dictionary00 
<00 
ProBuilderMesh00 (
,00( )

MeshHandle00* 4
>004 5
vertexHandles006 C
{00D E
get00F I
{00J K
Init00L P
(00P Q
)00Q R
;00R S
return00T Z
m_VertexHandles00[ j
;00j k
}00l m
}00n o
static11 

Dictionary11 
<11 
ProBuilderMesh11 (
,11( )

MeshHandle11* 4
>114 5
selectedFaceHandles116 I
{11J K
get11L O
{11P Q
Init11R V
(11V W
)11W X
;11X Y
return11Z `!
m_SelectedFaceHandles11a v
;11v w
}11x y
}11z {
static22 

Dictionary22 
<22 
ProBuilderMesh22 (
,22( )

MeshHandle22* 4
>224 5!
selectedVertexHandles226 K
{22L M
get22N Q
{22R S
Init22T X
(22X Y
)22Y Z
;22Z [
return22\ b#
m_SelectedVertexHandles22c z
;22z {
}22| }
}22~ 
static33 

Dictionary33 
<33 
ProBuilderMesh33 (
,33( )

MeshHandle33* 4
>334 5
selectedEdgeHandles336 I
{33J K
get33L O
{33P Q
Init33R V
(33V W
)33W X
;33X Y
return33Z `!
m_SelectedEdgeHandles33a v
;33v w
}33x y
}33z {
static55 
Color55 
wireframeColor55 #
{55$ %
get55& )
{55* +
return55, 2
s_UseUnityColors553 C
?55D E
k_WireframeDefault55F X
:55Y Z 
s_WireframeColorPref55[ o
;55o p
}55q r
}55s t
static66 
Color66 
faceSelectedColor66 &
{66' (
get66) ,
{66- .
return66/ 5
s_UseUnityColors666 F
?66G H
Handles66I P
.66P Q
selectedColor66Q ^
:66_ `#
s_SelectedFaceColorPref66a x
;66x y
}66z {
}66| }
static77 
Color77 
preselectionColor77 &
{77' (
get77) ,
{77- .
return77/ 5
s_UseUnityColors776 F
?77G H
Handles77I P
.77P Q
preselectionColor77Q b
:77c d#
s_PreselectionColorPref77e |
;77| }
}77~ 
}
77Ä Å
static88 
Color88 
edgeSelectedColor88 &
{88' (
get88) ,
{88- .
return88/ 5
s_UseUnityColors886 F
?88G H
Handles88I P
.88P Q
selectedColor88Q ^
:88_ `#
s_SelectedEdgeColorPref88a x
;88x y
}88z {
}88| }
static99 
Color99 
edgeUnselectedColor99 (
{99) *
get99+ .
{99/ 0
return991 7
s_UseUnityColors998 H
?99I J
k_WireframeDefault99K ]
:99^ _%
s_UnselectedEdgeColorPref99` y
;99y z
}99{ |
}99} ~
static:: 
Color:: 
vertexSelectedColor:: (
{::) *
get::+ .
{::/ 0
return::1 7
s_UseUnityColors::8 H
?::I J
Handles::K R
.::R S
selectedColor::S `
:::a b%
s_SelectedVertexColorPref::c |
;::| }
}::~ 
}
::Ä Å
static;; 
Color;; !
vertexUnselectedColor;; *
{;;+ ,
get;;- 0
{;;1 2
return;;3 9
s_UseUnityColors;;: J
?;;K L%
k_VertexUnselectedDefault;;M f
:;;g h(
s_UnselectedVertexColorPref	;;i Ñ
;
;;Ñ Ö
}
;;Ü á
}
;;à â
static?? 
bool?? 
m_ForceEdgeLinesGL?? &
;??& '
static@@ 
bool@@ #
m_ForceWireframeLinesGL@@ +
;@@+ ,
staticBB 
readonlyBB 
ColorBB %
k_VertexUnselectedDefaultBB 7
=BB8 9
newBB: =
ColorBB> C
(BBC D
$numBBD G
,BBG H
$numBBI L
,BBL M
$numBBN Q
,BBQ R
$numBBS U
)BBU V
;BBV W
staticCC 
readonlyCC 
ColorCC 
k_WireframeDefaultCC 0
=CC1 2
newCC3 6
ColorCC7 <
(CC< =
$numCC= B
/CCC D
$numCCE K
,CCK L
$numCCM S
/CCT U
$numCCV \
,CC\ ]
$numCC^ d
/CCe f
$numCCg m
,CCm n
$numCCo q
)CCq r
;CCr s
[EE 	
UserSettingEE	 
]EE 
staticFF 
PrefFF 
<FF 
boolFF 
>FF 
s_UseUnityColorsFF *
=FF+ ,
newFF- 0
PrefFF1 5
<FF5 6
boolFF6 :
>FF: ;
(FF; <
$strFF< \
,FF\ ]
trueFF^ b
,FFb c
SettingsScopeFFd q
.FFq r
UserFFr v
)FFv w
;FFw x
[GG 	
UserSettingGG	 
]GG 
staticHH 
PrefHH 
<HH 
boolHH 
>HH 
s_DitherFaceHandleHH ,
=HH- .
newHH/ 2
PrefHH3 7
<HH7 8
boolHH8 <
>HH< =
(HH= >
$strHH> Z
,HHZ [
trueHH\ `
,HH` a
SettingsScopeHHb o
.HHo p
UserHHp t
)HHt u
;HHu v
[II 	
UserSettingII	 
]II 
staticJJ 
PrefJJ 
<JJ 
ColorJJ 
>JJ #
s_SelectedFaceColorPrefJJ 2
=JJ3 4
newJJ5 8
PrefJJ9 =
<JJ= >
ColorJJ> C
>JJC D
(JJD E
$strJJE e
,JJe f
newJJg j
ColorJJk p
(JJp q
$numJJq s
,JJs t
$numJJu y
/JJz {
$num	JJ| Ä
,
JJÄ Å
$num
JJÇ Ü
/
JJá à
$num
JJâ ç
,
JJç é
$num
JJè ë
)
JJë í
,
JJí ì
SettingsScope
JJî °
.
JJ° ¢
User
JJ¢ ¶
)
JJ¶ ß
;
JJß ®
[KK 	
UserSettingKK	 
]KK 
staticLL 
PrefLL 
<LL 
ColorLL 
>LL  
s_WireframeColorPrefLL /
=LL0 1
newLL2 5
PrefLL6 :
<LL: ;
ColorLL; @
>LL@ A
(LLA B
$strLLB _
,LL_ `
newLLa d
ColorLLe j
(LLj k
$numLLk o
/LLp q
$numLLr v
,LLv w
$numLLx |
/LL} ~
$num	LL É
,
LLÉ Ñ
$num
LLÖ â
/
LLä ã
$num
LLå ê
,
LLê ë
$num
LLí î
)
LLî ï
,
LLï ñ
SettingsScope
LLó §
.
LL§ •
User
LL• ©
)
LL© ™
;
LL™ ´
[MM 	
UserSettingMM	 
]MM 
staticNN 
PrefNN 
<NN 
ColorNN 
>NN %
s_UnselectedEdgeColorPrefNN 4
=NN5 6
newNN7 :
PrefNN; ?
<NN? @
ColorNN@ E
>NNE F
(NNF G
$strNNG i
,NNi j
newNNk n
ColorNNo t
(NNt u
$numNNu x
/NNy z
$numNN{ 
,	NN Ä
$num
NNÅ Ñ
/
NNÖ Ü
$num
NNá ã
,
NNã å
$num
NNç ê
/
NNë í
$num
NNì ó
,
NNó ò
$num
NNô õ
)
NNõ ú
,
NNú ù
SettingsScope
NNû ´
.
NN´ ¨
User
NN¨ ∞
)
NN∞ ±
;
NN± ≤
[OO 	
UserSettingOO	 
]OO 
staticPP 
PrefPP 
<PP 
ColorPP 
>PP #
s_SelectedEdgeColorPrefPP 2
=PP3 4
newPP5 8
PrefPP9 =
<PP= >
ColorPP> C
>PPC D
(PPD E
$strPPE e
,PPe f
newPPg j
ColorPPk p
(PPp q
$numPPq s
,PPs t
$numPPu y
/PPz {
$num	PP| Ä
,
PPÄ Å
$num
PPÇ Ü
/
PPá à
$num
PPâ ç
,
PPç é
$num
PPè ë
)
PPë í
,
PPí ì
SettingsScope
PPî °
.
PP° ¢
User
PP¢ ¶
)
PP¶ ß
;
PPß ®
[QQ 	
UserSettingQQ	 
]QQ 
staticRR 
PrefRR 
<RR 
ColorRR 
>RR '
s_UnselectedVertexColorPrefRR 6
=RR7 8
newRR9 <
PrefRR= A
<RRA B
ColorRRB G
>RRG H
(RRH I
$strRRI m
,RRm n
newRRo r
ColorRRs x
(RRx y
$numRRy |
/RR} ~
$num	RR É
,
RRÉ Ñ
$num
RRÖ à
/
RRâ ä
$num
RRã è
,
RRè ê
$num
RRë î
/
RRï ñ
$num
RRó õ
,
RRõ ú
$num
RRù ü
)
RRü †
,
RR† °
SettingsScope
RR¢ Ø
.
RRØ ∞
User
RR∞ ¥
)
RR¥ µ
;
RRµ ∂
[SS 	
UserSettingSS	 
]SS 
staticTT 
PrefTT 
<TT 
ColorTT 
>TT %
s_SelectedVertexColorPrefTT 4
=TT5 6
newTT7 :
PrefTT; ?
<TT? @
ColorTT@ E
>TTE F
(TTF G
$strTTG i
,TTi j
newTTk n
ColorTTo t
(TTt u
$numTTu w
,TTw x
$numTTy }
/TT~ 
$num
TTÄ Ñ
,
TTÑ Ö
$num
TTÜ ä
/
TTã å
$num
TTç ë
,
TTë í
$num
TTì ï
)
TTï ñ
,
TTñ ó
SettingsScope
TTò •
.
TT• ¶
User
TT¶ ™
)
TT™ ´
;
TT´ ¨
[UU 	
UserSettingUU	 
]UU 
staticVV 
PrefVV 
<VV 
ColorVV 
>VV #
s_PreselectionColorPrefVV 2
=VV3 4
newVV5 8
PrefVV9 =
<VV= >
ColorVV> C
>VVC D
(VVD E
$strVVE e
,VVe f
newVVg j
ColorVVk p
(VVp q
$numVVq u
/VVv w
$numVVx |
,VV| }
$num	VV~ Ç
/
VVÉ Ñ
$num
VVÖ â
,
VVâ ä
$num
VVã è
/
VVê ë
$num
VVí ñ
,
VVñ ó
$num
VVò ö
)
VVö õ
,
VVõ ú
SettingsScope
VVù ™
.
VV™ ´
User
VV´ Ø
)
VVØ ∞
;
VV∞ ±
[XX 	
UserSettingXX	 
]XX 
staticYY 
PrefYY 
<YY 
floatYY 
>YY 
s_WireframeLineSizeYY .
=YY/ 0
newYY1 4
PrefYY5 9
<YY9 :
floatYY: ?
>YY? @
(YY@ A
$strYYA ]
,YY] ^
$numYY_ b
,YYb c
SettingsScopeYYd q
.YYq r
UserYYr v
)YYv w
;YYw x
[ZZ 	
UserSettingZZ	 
]ZZ 
static[[ 
Pref[[ 
<[[ 
float[[ 
>[[ 
s_EdgeLineSize[[ )
=[[* +
new[[, /
Pref[[0 4
<[[4 5
float[[5 :
>[[: ;
([[; <
$str[[< S
,[[S T
$num[[U W
,[[W X
SettingsScope[[Y f
.[[f g
User[[g k
)[[k l
;[[l m
[\\ 	
UserSetting\\	 
]\\ 
static]] 
Pref]] 
<]] 
float]] 
>]] 
s_VertexPointSize]] ,
=]]- .
new]]/ 2
Pref]]3 7
<]]7 8
float]]8 =
>]]= >
(]]> ?
$str]]? Y
,]]Y Z
$num]][ ]
,]]] ^
SettingsScope]]_ l
.]]l m
User]]m q
)]]q r
;]]r s
[__ 	
UserSetting__	 
]__ 
static`` 
Pref`` 
<`` 
bool`` 
>`` 
s_DepthTestHandles`` ,
=``- .
new``/ 2
Pref``3 7
<``7 8
bool``8 <
>``< =
(``= >
$str``> T
,``T U
true``V Z
,``Z [
SettingsScope``\ i
.``i j
User``j n
)``n o
;``o p
[bb 	
UserSettingBlockbb	 
(bb 
$strbb $
)bb$ %
]bb% &
staticcc 
voidcc "
HandleColorPreferencescc *
(cc* +
stringcc+ 1
searchContextcc2 ?
)cc? @
{dd 	
	EditorGUIee 
.ee 
BeginChangeCheckee &
(ee& '
)ee' (
;ee( )
s_UseUnityColorsgg 
.gg 
valuegg "
=gg# $
SettingsGUILayoutgg% 6
.gg6 7
SettingsTogglegg7 E
(ggE F
$strggF X
,ggX Y
s_UseUnityColorsggZ j
,ggj k
searchContextggl y
)ggy z
;ggz {
ifii 
(ii 
!ii 
s_UseUnityColorsii !
.ii! "
valueii" '
)ii' (
{jj 
usingkk 
(kk 
newkk 
SettingsGUILayoutkk ,
.kk, -
IndentedGroupkk- :
(kk: ;
)kk; <
)kk< =
{ll 
s_DitherFaceHandlemm &
.mm& '
valuemm' ,
=mm- .
SettingsGUILayoutmm/ @
.mm@ A
SettingsTogglemmA O
(mmO P
$strmmP e
,mme f
s_DitherFaceHandlemmg y
,mmy z
searchContext	mm{ à
)
mmà â
;
mmâ ä 
s_WireframeColorPrefnn (
.nn( )
valuenn) .
=nn/ 0
SettingsGUILayoutnn1 B
.nnB C
SettingsColorFieldnnC U
(nnU V
$strnnV a
,nna b 
s_WireframeColorPrefnnc w
,nnw x
searchContext	nny Ü
)
nnÜ á
;
nná à#
s_PreselectionColorPrefoo +
.oo+ ,
valueoo, 1
=oo2 3
SettingsGUILayoutoo4 E
.ooE F
SettingsColorFieldooF X
(ooX Y
$strooY g
,oog h$
s_PreselectionColorPref	ooi Ä
,
ooÄ Å
searchContext
ooÇ è
)
ooè ê
;
ooê ë#
s_SelectedFaceColorPrefpp +
.pp+ ,
valuepp, 1
=pp2 3
SettingsGUILayoutpp4 E
.ppE F
SettingsColorFieldppF X
(ppX Y
$strppY n
,ppn o$
s_SelectedFaceColorPref	ppp á
,
ppá à
searchContext
ppâ ñ
)
ppñ ó
;
ppó ò%
s_UnselectedEdgeColorPrefqq -
.qq- .
valueqq. 3
=qq4 5
SettingsGUILayoutqq6 G
.qqG H
SettingsColorFieldqqH Z
(qqZ [
$strqq[ r
,qqr s&
s_UnselectedEdgeColorPref	qqt ç
,
qqç é
searchContext
qqè ú
)
qqú ù
;
qqù û#
s_SelectedEdgeColorPrefrr +
.rr+ ,
valuerr, 1
=rr2 3
SettingsGUILayoutrr4 E
.rrE F
SettingsColorFieldrrF X
(rrX Y
$strrrY n
,rrn o$
s_SelectedEdgeColorPref	rrp á
,
rrá à
searchContext
rrâ ñ
)
rrñ ó
;
rró ò'
s_UnselectedVertexColorPrefss /
.ss/ 0
valuess0 5
=ss6 7
SettingsGUILayoutss8 I
.ssI J
SettingsColorFieldssJ \
(ss\ ]
$strss] v
,ssv w(
s_UnselectedVertexColorPref	ssx ì
,
ssì î
searchContext
ssï ¢
)
ss¢ £
;
ss£ §%
s_SelectedVertexColorPreftt -
.tt- .
valuett. 3
=tt4 5
SettingsGUILayouttt6 G
.ttG H
SettingsColorFieldttH Z
(ttZ [
$strtt[ r
,ttr s&
s_SelectedVertexColorPref	ttt ç
,
ttç é
searchContext
ttè ú
)
ttú ù
;
ttù û
}uu 
}vv 
s_DepthTestHandlesxx 
.xx 
valuexx $
=xx% &
SettingsGUILayoutxx' 8
.xx8 9
SettingsTogglexx9 G
(xxG H
$strxxH T
,xxT U
s_DepthTestHandlesxxV h
,xxh i
searchContextxxj w
)xxw x
;xxx y
s_VertexPointSizeyy 
.yy 
valueyy #
=yy$ %
SettingsGUILayoutyy& 7
.yy7 8
SettingsSlideryy8 F
(yyF G
$stryyG T
,yyT U
s_VertexPointSizeyyV g
,yyg h
$numyyi k
,yyk l
$numyym p
,yyp q
searchContextyyr 
)	yy Ä
;
yyÄ Å
s_EdgeLineSizezz 
.zz 
valuezz  
=zz! "
SettingsGUILayoutzz# 4
.zz4 5
SettingsSliderzz5 C
(zzC D
$strzzD O
,zzO P
s_EdgeLineSizezzQ _
,zz_ `
$numzza c
,zzc d
$numzze h
,zzh i
searchContextzzj w
)zzw x
;zzx y
s_WireframeLineSize{{ 
.{{  
value{{  %
={{& '
SettingsGUILayout{{( 9
.{{9 :
SettingsSlider{{: H
({{H I
$str{{I Y
,{{Y Z
s_WireframeLineSize{{[ n
,{{n o
$num{{p r
,{{r s
$num{{t w
,{{w x
searchContext	{{y Ü
)
{{Ü á
;
{{á à
if}} 
(}} 
	EditorGUI}} 
.}} 
EndChangeCheck}} '
(}}' (
)}}( )
)}}) *
ProBuilderEditor~~  
.~~  !
UpdateMeshHandles~~! 2
(~~2 3
true~~3 7
)~~7 8
;~~8 9
} 	
internal
ÅÅ 
static
ÅÅ 
float
ÅÅ 

dotCapSize
ÅÅ (
{
ÇÇ 	
get
ÉÉ 
{
ÉÉ 
return
ÉÉ 
s_VertexPointSize
ÉÉ *
*
ÉÉ+ ,
$num
ÉÉ- 3
;
ÉÉ3 4
}
ÉÉ5 6
}
ÑÑ 	
static
ÜÜ 
void
ÜÜ 
Init
ÜÜ 
(
ÜÜ 
)
ÜÜ 
{
áá 	
if
àà 
(
àà 
s_Initialized
àà 
)
àà 
return
ââ 
;
ââ 
s_Initialized
ãã 
=
ãã 
true
ãã  
;
ãã  !
ReleaseResources
çç 
(
çç 
)
çç 
;
çç 
m_MeshPool2
èè 
=
èè 
new
èè 

ObjectPool
èè (
<
èè( )
Mesh
èè) -
>
èè- .
(
èè. /
$num
èè/ 0
,
èè0 1
$num
èè2 3
,
èè3 4

CreateMesh
èè5 ?
,
èè? @
DestroyMesh
èèA L
)
èèL M
;
èèM N
m_WireHandles
êê 
=
êê 
new
êê 

Dictionary
êê  *
<
êê* +
ProBuilderMesh
êê+ 9
,
êê9 :

MeshHandle
êê; E
>
êêE F
(
êêF G
)
êêG H
;
êêH I
m_VertexHandles
ëë 
=
ëë 
new
ëë !

Dictionary
ëë" ,
<
ëë, -
ProBuilderMesh
ëë- ;
,
ëë; <

MeshHandle
ëë= G
>
ëëG H
(
ëëH I
)
ëëI J
;
ëëJ K#
m_SelectedFaceHandles
íí !
=
íí" #
new
íí$ '

Dictionary
íí( 2
<
íí2 3
ProBuilderMesh
íí3 A
,
ííA B

MeshHandle
ííC M
>
ííM N
(
ííN O
)
ííO P
;
ííP Q#
m_SelectedEdgeHandles
ìì !
=
ìì" #
new
ìì$ '

Dictionary
ìì( 2
<
ìì2 3
ProBuilderMesh
ìì3 A
,
ììA B

MeshHandle
ììC M
>
ììM N
(
ììN O
)
ììO P
;
ììP Q%
m_SelectedVertexHandles
îî #
=
îî$ %
new
îî& )

Dictionary
îî* 4
<
îî4 5
ProBuilderMesh
îî5 C
,
îîC D

MeshHandle
îîE O
>
îîO P
(
îîP Q
)
îîQ R
;
îîR S
var
ññ 

lineShader
ññ 
=
ññ 
BuiltinMaterials
ññ -
.
ññ- .&
geometryShadersSupported
ññ. F
?
ññG H
BuiltinMaterials
ññI Y
.
ññY Z

lineShader
ññZ d
:
ññe f
BuiltinMaterials
ññg w
.
ññw x
lineShaderMetalññx á
;ññá à
var
óó 

vertShader
óó 
=
óó 
BuiltinMaterials
óó -
.
óó- .&
geometryShadersSupported
óó. F
?
óóG H
BuiltinMaterials
óóI Y
.
óóY Z
pointShader
óóZ e
:
óóf g
BuiltinMaterials
óóh x
.
óóx y
	dotShaderóóy Ç
;óóÇ É
m_EdgeMaterial
ôô 
=
ôô 
CreateMaterial
ôô +
(
ôô+ ,
Shader
ôô, 2
.
ôô2 3
Find
ôô3 7
(
ôô7 8

lineShader
ôô8 B
)
ôôB C
,
ôôC D
$str
ôôE _
)
ôô_ `
;
ôô` a
m_WireMaterial
öö 
=
öö 
CreateMaterial
öö +
(
öö+ ,
Shader
öö, 2
.
öö2 3
Find
öö3 7
(
öö7 8

lineShader
öö8 B
)
ööB C
,
ööC D
$str
ööE _
)
öö_ `
;
öö` a
m_LineMaterial
õõ 
=
õõ 
CreateMaterial
õõ +
(
õõ+ ,
Shader
õõ, 2
.
õõ2 3
Find
õõ3 7
(
õõ7 8

lineShader
õõ8 B
)
õõB C
,
õõC D
$str
õõE i
)
õõi j
;
õõj k
m_VertMaterial
úú 
=
úú 
CreateMaterial
úú +
(
úú+ ,
Shader
úú, 2
.
úú2 3
Find
úú3 7
(
úú7 8

vertShader
úú8 B
)
úúB C
,
úúC D
$str
úúE a
)
úúa b
;
úúb c
m_GlWireMaterial
ùù 
=
ùù 
CreateMaterial
ùù -
(
ùù- .
Shader
ùù. 4
.
ùù4 5
Find
ùù5 9
(
ùù9 :
BuiltinMaterials
ùù: J
.
ùùJ K

faceShader
ùùK U
)
ùùU V
,
ùùV W
$str
ùùX l
)
ùùl m
;
ùùm n
m_FaceMaterial
ûû 
=
ûû 
CreateMaterial
ûû +
(
ûû+ ,
Shader
ûû, 2
.
ûû2 3
Find
ûû3 7
(
ûû7 8
BuiltinMaterials
ûû8 H
.
ûûH I

faceShader
ûûI S
)
ûûS T
,
ûûT U
$str
ûûV p
)
ûûp q
;
ûûq r
ResetPreferences
†† 
(
†† 
)
†† 
;
†† 
}
°° 	
internal
££ 
static
££ 
void
££ 
ReleaseResources
££ -
(
££- .
)
££. /
{
§§ 	
ClearHandles
•• 
(
•• 
)
•• 
;
•• 
if
¶¶ 
(
¶¶ 
m_MeshPool2
¶¶ 
!=
¶¶ 
null
¶¶ "
)
¶¶" #
m_MeshPool2
ßß 
.
ßß 
Dispose
ßß #
(
ßß# $
)
ßß$ %
;
ßß% &
if
®® 
(
®® 
m_EdgeMaterial
®® 
!=
®®  
null
®®! %
)
®®% &
UnityObject
®®' 2
.
®®2 3
DestroyImmediate
®®3 C
(
®®C D
m_EdgeMaterial
®®D R
)
®®R S
;
®®S T
if
©© 
(
©© 
m_WireMaterial
©© 
!=
©©  
null
©©! %
)
©©% &
UnityObject
©©' 2
.
©©2 3
DestroyImmediate
©©3 C
(
©©C D
m_WireMaterial
©©D R
)
©©R S
;
©©S T
if
™™ 
(
™™ 
m_LineMaterial
™™ 
!=
™™  
null
™™! %
)
™™% &
UnityObject
™™' 2
.
™™2 3
DestroyImmediate
™™3 C
(
™™C D
m_LineMaterial
™™D R
)
™™R S
;
™™S T
if
´´ 
(
´´ 
m_VertMaterial
´´ 
!=
´´  
null
´´! %
)
´´% &
UnityObject
´´' 2
.
´´2 3
DestroyImmediate
´´3 C
(
´´C D
m_VertMaterial
´´D R
)
´´R S
;
´´S T
if
¨¨ 
(
¨¨ 
m_GlWireMaterial
¨¨ 
!=
¨¨  "
null
¨¨# '
)
¨¨' (
UnityObject
¨¨) 4
.
¨¨4 5
DestroyImmediate
¨¨5 E
(
¨¨E F
m_GlWireMaterial
¨¨F V
)
¨¨V W
;
¨¨W X
if
≠≠ 
(
≠≠ 
m_FaceMaterial
≠≠ 
!=
≠≠  
null
≠≠! %
)
≠≠% &
UnityObject
≠≠' 2
.
≠≠2 3
DestroyImmediate
≠≠3 C
(
≠≠C D
m_FaceMaterial
≠≠D R
)
≠≠R S
;
≠≠S T
}
ÆÆ 	
internal
∞∞ 
static
∞∞ 
void
∞∞ 
ResetPreferences
∞∞ -
(
∞∞- .
)
∞∞. /
{
±± 	
faceMaterial
≤≤ 
.
≤≤ 
SetFloat
≤≤ !
(
≤≤! "
$str
≤≤" +
,
≤≤+ ,
(
≤≤- .
s_UseUnityColors
≤≤. >
||
≤≤? A 
s_DitherFaceHandle
≤≤B T
)
≤≤T U
?
≤≤V W
$num
≤≤X Z
:
≤≤[ \
$num
≤≤] _
)
≤≤_ `
;
≤≤` a 
m_ForceEdgeLinesGL
¥¥ 
=
¥¥  
s_EdgeLineSize
¥¥! /
.
¥¥/ 0
value
¥¥0 5
<
¥¥6 7-
k_MinLineWidthForGeometryShader
¥¥8 W
;
¥¥W X%
m_ForceWireframeLinesGL
µµ #
=
µµ$ %!
s_WireframeLineSize
µµ& 9
.
µµ9 :
value
µµ: ?
<
µµ@ A-
k_MinLineWidthForGeometryShader
µµB a
;
µµa b
wireMaterial
∑∑ 
.
∑∑ 
SetColor
∑∑ !
(
∑∑! "
$str
∑∑" *
,
∑∑* +
wireframeColor
∑∑, :
)
∑∑: ;
;
∑∑; <
wireMaterial
∏∏ 
.
∏∏ 
SetInt
∏∏ 
(
∏∏  
$str
∏∏  .
,
∏∏. /
(
∏∏0 1
int
∏∏1 4
)
∏∏4 5
CompareFunction
∏∏5 D
.
∏∏D E
	LessEqual
∏∏E N
)
∏∏N O
;
∏∏O P(
SetMaterialsScaleAttribute
∫∫ &
(
∫∫& '
)
∫∫' (
;
∫∫( )
}
ªª 	
static
ΩΩ 
Material
ΩΩ 
CreateMaterial
ΩΩ &
(
ΩΩ& '
Shader
ΩΩ' -
shader
ΩΩ. 4
,
ΩΩ4 5
string
ΩΩ6 <
materialName
ΩΩ= I
)
ΩΩI J
{
ææ 	
if
øø 
(
øø 
shader
øø 
==
øø 
null
øø 
)
øø 
shader
¿¿ 
=
¿¿ 
BuiltinMaterials
¿¿ )
.
¿¿) *
defaultMaterial
¿¿* 9
.
¿¿9 :
shader
¿¿: @
;
¿¿@ A
Material
¬¬ 
mat
¬¬ 
=
¬¬ 
new
¬¬ 
Material
¬¬ '
(
¬¬' (
shader
¬¬( .
)
¬¬. /
;
¬¬/ 0
mat
√√ 
.
√√ 
name
√√ 
=
√√ 
materialName
√√ #
;
√√# $
mat
ƒƒ 
.
ƒƒ 
	hideFlags
ƒƒ 
=
ƒƒ !
k_ResourceHideFlags
ƒƒ /
;
ƒƒ/ 0
return
≈≈ 
mat
≈≈ 
;
≈≈ 
}
∆∆ 	
static
»» 
Mesh
»» 

CreateMesh
»» 
(
»» 
)
»»  
{
…… 	
var
   
mesh
   
=
   
new
   
Mesh
   
(
    
)
    !
;
  ! "
mesh
ÀÀ 
.
ÀÀ 
name
ÀÀ 
=
ÀÀ 
$str
ÀÀ 6
+
ÀÀ7 8
mesh
ÀÀ9 =
.
ÀÀ= >
GetInstanceID
ÀÀ> K
(
ÀÀK L
)
ÀÀL M
;
ÀÀM N
mesh
ÃÃ 
.
ÃÃ 
	hideFlags
ÃÃ 
=
ÃÃ 
	HideFlags
ÃÃ &
.
ÃÃ& '
HideAndDontSave
ÃÃ' 6
;
ÃÃ6 7
return
ÕÕ 
mesh
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
static
–– 
void
–– 
DestroyMesh
–– 
(
––  
Mesh
––  $
mesh
––% )
)
––) *
{
—— 	
if
““ 
(
““ 
mesh
““ 
==
““ 
null
““ 
)
““ 
throw
”” 
new
”” #
ArgumentNullException
”” /
(
””/ 0
$str
””0 6
)
””6 7
;
””7 8
UObject
’’ 
.
’’ 
DestroyImmediate
’’ $
(
’’$ %
mesh
’’% )
)
’’) *
;
’’* +
}
÷÷ 	
public
·· 
static
·· 
void
··  
DrawSceneSelection
·· -
(
··- .
SceneSelection
··. <
	selection
··= F
)
··F G
{
‚‚ 	
var
„„ 
mesh
„„ 
=
„„ 
	selection
„„  
.
„„  !
mesh
„„! %
;
„„% &
if
ÂÂ 
(
ÂÂ 
mesh
ÂÂ 
==
ÂÂ 
null
ÂÂ 
)
ÂÂ 
return
ÊÊ 
;
ÊÊ 
var
ËË 
	positions
ËË 
=
ËË 
mesh
ËË  
.
ËË  !
positionsInternal
ËË! 2
;
ËË2 3
using
ÎÎ 
(
ÎÎ 
new
ÎÎ "
TriangleDrawingScope
ÎÎ +
(
ÎÎ+ ,
preselectionColor
ÎÎ, =
)
ÎÎ= >
)
ÎÎ> ?
{
ÏÏ 
GL
ÌÌ 
.
ÌÌ 

MultMatrix
ÌÌ 
(
ÌÌ 
mesh
ÌÌ "
.
ÌÌ" #
	transform
ÌÌ# ,
.
ÌÌ, - 
localToWorldMatrix
ÌÌ- ?
)
ÌÌ? @
;
ÌÌ@ A
foreach
ÓÓ 
(
ÓÓ 
var
ÓÓ 
face
ÓÓ !
in
ÓÓ" $
	selection
ÓÓ% .
.
ÓÓ. /
faces
ÓÓ/ 4
)
ÓÓ4 5
{
ÔÔ 
var
 
ind
 
=
 
face
 "
.
" #
indexes
# *
;
* +
for
ÚÚ 
(
ÚÚ 
int
ÚÚ 
i
ÚÚ 
=
ÚÚ  
$num
ÚÚ! "
,
ÚÚ" #
c
ÚÚ$ %
=
ÚÚ& '
ind
ÚÚ( +
.
ÚÚ+ ,
Count
ÚÚ, 1
;
ÚÚ1 2
i
ÚÚ3 4
<
ÚÚ5 6
c
ÚÚ7 8
;
ÚÚ8 9
i
ÚÚ: ;
+=
ÚÚ< >
$num
ÚÚ? @
)
ÚÚ@ A
{
ÛÛ 
GL
ÙÙ 
.
ÙÙ 
Vertex
ÙÙ !
(
ÙÙ! "
	positions
ÙÙ" +
[
ÙÙ+ ,
ind
ÙÙ, /
[
ÙÙ/ 0
i
ÙÙ0 1
]
ÙÙ1 2
]
ÙÙ2 3
)
ÙÙ3 4
;
ÙÙ4 5
GL
ıı 
.
ıı 
Vertex
ıı !
(
ıı! "
	positions
ıı" +
[
ıı+ ,
ind
ıı, /
[
ıı/ 0
i
ıı0 1
+
ıı2 3
$num
ıı4 5
]
ıı5 6
]
ıı6 7
)
ıı7 8
;
ıı8 9
GL
ˆˆ 
.
ˆˆ 
Vertex
ˆˆ !
(
ˆˆ! "
	positions
ˆˆ" +
[
ˆˆ+ ,
ind
ˆˆ, /
[
ˆˆ/ 0
i
ˆˆ0 1
+
ˆˆ2 3
$num
ˆˆ4 5
]
ˆˆ5 6
]
ˆˆ6 7
)
ˆˆ7 8
;
ˆˆ8 9
}
˜˜ 
}
¯¯ 
}
˘˘ 
using
˙˙ 
(
˙˙ 
var
˙˙ 
drawingScope
˙˙ #
=
˙˙$ %
new
˙˙& )
LineDrawingScope
˙˙* :
(
˙˙: ;
preselectionColor
˙˙; L
,
˙˙L M
mesh
˙˙N R
.
˙˙R S
	transform
˙˙S \
.
˙˙\ ] 
localToWorldMatrix
˙˙] o
,
˙˙o p
-
˙˙q r
$num
˙˙r t
,
˙˙t u
CompareFunction˙˙v Ö
.˙˙Ö Ü
Always˙˙Ü å
)˙˙å ç
)˙˙ç é
{
˚˚ 
foreach
¸¸ 
(
¸¸ 
var
¸¸ 
edge
¸¸ !
in
¸¸" $
	selection
¸¸% .
.
¸¸. /
edges
¸¸/ 4
)
¸¸4 5
{
˝˝ 
drawingScope
˛˛  
.
˛˛  !
DrawLine
˛˛! )
(
˛˛) *
	positions
˛˛* 3
[
˛˛3 4
edge
˛˛4 8
.
˛˛8 9
a
˛˛9 :
]
˛˛: ;
,
˛˛; <
	positions
˛˛= F
[
˛˛F G
edge
˛˛G K
.
˛˛K L
b
˛˛L M
]
˛˛M N
)
˛˛N O
;
˛˛O P
}
ˇˇ 
}
ÄÄ 
using
ÅÅ 
(
ÅÅ 
var
ÅÅ 
drawingScope
ÅÅ #
=
ÅÅ$ %
new
ÅÅ& )
PointDrawingScope
ÅÅ* ;
(
ÅÅ; <
preselectionColor
ÅÅ< M
,
ÅÅM N
CompareFunction
ÅÅO ^
.
ÅÅ^ _
Always
ÅÅ_ e
)
ÅÅe f
{
ÅÅg h
matrix
ÅÅi o
=
ÅÅp q
mesh
ÅÅr v
.
ÅÅv w
	transformÅÅw Ä
.ÅÅÄ Å"
localToWorldMatrixÅÅÅ ì
}ÅÅî ï
)ÅÅï ñ
{
ÇÇ 
foreach
ÉÉ 
(
ÉÉ 
var
ÉÉ 
vertex
ÉÉ #
in
ÉÉ$ &
	selection
ÉÉ' 0
.
ÉÉ0 1
vertexes
ÉÉ1 9
)
ÉÉ9 :
{
ÑÑ 
drawingScope
ÖÖ  
.
ÖÖ  !
Draw
ÖÖ! %
(
ÖÖ% &
	positions
ÖÖ& /
[
ÖÖ/ 0
vertex
ÖÖ0 6
]
ÖÖ6 7
)
ÖÖ7 8
;
ÖÖ8 9
}
ÜÜ 
}
áá 
}
àà 	
public
ää 
static
ää 
void
ää 
DrawSceneHandles
ää +
(
ää+ ,

SelectMode
ää, 6
mode
ää7 ;
)
ää; <
{
ãã 	
if
åå 
(
åå 
Event
åå 
.
åå 
current
åå 
.
åå 
type
åå "
!=
åå# %
	EventType
åå& /
.
åå/ 0
Repaint
åå0 7
)
åå7 8
return
çç 
;
çç (
SetMaterialsScaleAttribute
êê &
(
êê& '
)
êê' (
;
êê( )
switch
íí 
(
íí 
mode
íí 
)
íí 
{
ìì 
case
îî 

SelectMode
îî 
.
îî  
Edge
îî  $
:
îî$ %
case
ïï 

SelectMode
ïï 
.
ïï  
TextureEdge
ïï  +
:
ïï+ ,
{
ññ 
Render
òò 
(
òò 
wireHandles
òò &
,
òò& ' 
m_ForceEdgeLinesGL
òò( :
?
òò; <
glWireMaterial
òò= K
:
òòL M
edgeMaterial
òòN Z
,
òòZ [!
edgeUnselectedColor
òò\ o
,
òòo p
CompareFunctionòòq Ä
.òòÄ Å
	LessEqualòòÅ ä
,òòä ã
falseòòå ë
)òòë í
;òòí ì
Render
ôô 
(
ôô !
selectedEdgeHandles
ôô .
,
ôô. / 
m_ForceEdgeLinesGL
ôô0 B
?
ôôC D
glWireMaterial
ôôE S
:
ôôT U
edgeMaterial
ôôV b
,
ôôb c
edgeSelectedColor
ôôd u
,
ôôu v!
s_DepthTestHandlesôôw â
?ôôä ã
CompareFunctionôôå õ
.ôôõ ú
	LessEqualôôú •
:ôô¶ ß
CompareFunctionôô® ∑
.ôô∑ ∏
Alwaysôô∏ æ
,ôôæ ø
trueôô¿ ƒ
)ôôƒ ≈
;ôô≈ ∆
break
öö 
;
öö 
}
õõ 
case
úú 

SelectMode
úú 
.
úú  
Face
úú  $
:
úú$ %
case
ùù 

SelectMode
ùù 
.
ùù  
TextureFace
ùù  +
:
ùù+ ,
{
ûû 
Render
üü 
(
üü 
wireHandles
üü &
,
üü& '%
m_ForceWireframeLinesGL
üü( ?
?
üü@ A
glWireMaterial
üüB P
:
üüQ R
wireMaterial
üüS _
,
üü_ `
wireframeColor
üüa o
,
üüo p
CompareFunctionüüq Ä
.üüÄ Å
	LessEqualüüÅ ä
,üüä ã
falseüüå ë
)üüë í
;üüí ì
Render
†† 
(
†† !
selectedFaceHandles
†† .
,
††. /
faceMaterial
††0 <
,
††< =
faceSelectedColor
††> O
,
††O P 
s_DepthTestHandles
††Q c
)
††c d
;
††d e
break
°° 
;
°° 
}
¢¢ 
case
££ 

SelectMode
££ 
.
££  
Vertex
££  &
:
££& '
case
§§ 

SelectMode
§§ 
.
§§  
TextureVertex
§§  -
:
§§- .
{
•• 
Render
¶¶ 
(
¶¶ 
wireHandles
¶¶ &
,
¶¶& '%
m_ForceWireframeLinesGL
¶¶( ?
?
¶¶@ A
glWireMaterial
¶¶B P
:
¶¶Q R
wireMaterial
¶¶S _
,
¶¶_ `
wireframeColor
¶¶a o
,
¶¶o p
CompareFunction¶¶q Ä
.¶¶Ä Å
	LessEqual¶¶Å ä
,¶¶ä ã
false¶¶å ë
)¶¶ë í
;¶¶í ì
Render
ßß 
(
ßß 
vertexHandles
ßß (
,
ßß( )
vertMaterial
ßß* 6
,
ßß6 7#
vertexUnselectedColor
ßß8 M
,
ßßM N
CompareFunction
ßßO ^
.
ßß^ _
	LessEqual
ßß_ h
,
ßßh i
false
ßßj o
)
ßßo p
;
ßßp q
Render
®® 
(
®® #
selectedVertexHandles
®® 0
,
®®0 1
vertMaterial
®®2 >
,
®®> ?!
vertexSelectedColor
®®@ S
,
®®S T 
s_DepthTestHandles
®®U g
)
®®g h
;
®®h i
break
©© 
;
©© 
}
™™ 
default
´´ 
:
´´ 
{
¨¨ 
Render
≠≠ 
(
≠≠ 
wireHandles
≠≠ &
,
≠≠& '%
m_ForceWireframeLinesGL
≠≠( ?
?
≠≠@ A
glWireMaterial
≠≠B P
:
≠≠Q R
wireMaterial
≠≠S _
,
≠≠_ `
wireframeColor
≠≠a o
,
≠≠o p
CompareFunction≠≠q Ä
.≠≠Ä Å
	LessEqual≠≠Å ä
,≠≠ä ã
false≠≠å ë
)≠≠ë í
;≠≠í ì
break
ÆÆ 
;
ÆÆ 
}
ØØ 
}
∞∞ 
}
±± 	
static
≥≥ 
void
≥≥ 
Render
≥≥ 
(
≥≥ 

Dictionary
≥≥ %
<
≥≥% &
ProBuilderMesh
≥≥& 4
,
≥≥4 5

MeshHandle
≥≥6 @
>
≥≥@ A
handles
≥≥B I
,
≥≥I J
Material
≥≥K S
material
≥≥T \
,
≥≥\ ]
Color
≥≥^ c
color
≥≥d i
,
≥≥i j
bool
≥≥k o
	depthTest
≥≥p y
=
≥≥z {
true≥≥| Ä
)≥≥Ä Å
{
¥¥ 	
Render
µµ 
(
µµ 
handles
µµ 
,
µµ 
material
µµ $
,
µµ$ %
color
µµ& +
,
µµ+ ,
	depthTest
µµ- 6
?
µµ7 8
CompareFunction
µµ9 H
.
µµH I
	LessEqual
µµI R
:
µµS T
CompareFunction
µµU d
.
µµd e
Always
µµe k
,
µµk l
true
µµm q
)
µµq r
;
µµr s
}
∂∂ 	
static
∏∏ 
void
∏∏ 
Render
∏∏ 
(
∏∏ 

Dictionary
∏∏ %
<
∏∏% &
ProBuilderMesh
∏∏& 4
,
∏∏4 5

MeshHandle
∏∏6 @
>
∏∏@ A
handles
∏∏B I
,
∏∏I J
Material
∏∏K S
material
∏∏T \
,
∏∏\ ]
Color
∏∏^ c
color
∏∏d i
,
∏∏i j
CompareFunction
∏∏k z
func
∏∏{ 
,∏∏ Ä
bool∏∏Å Ö
zWrite∏∏Ü å
)∏∏å ç
{
ππ 	
material
∫∫ 
.
∫∫ 
SetInt
∫∫ 
(
∫∫ 
$str
∫∫ *
,
∫∫* +
(
∫∫, -
int
∫∫- 0
)
∫∫0 1
func
∫∫2 6
)
∫∫6 7
;
∫∫7 8
material
ªª 
.
ªª 
SetInt
ªª 
(
ªª 
$str
ªª +
,
ªª+ ,
zWrite
ªª- 3
?
ªª4 5
$num
ªª6 7
:
ªª8 9
$num
ªª: ;
)
ªª; <
;
ªª< =
material
ºº 
.
ºº 
SetColor
ºº 
(
ºº 
$str
ºº &
,
ºº& '
color
ºº( -
)
ºº- .
;
ºº. /
if
ææ 
(
ææ 
material
ææ 
.
ææ 
SetPass
ææ  
(
ææ  !
$num
ææ! "
)
ææ" #
)
ææ# $
{
øø 
foreach
¿¿ 
(
¿¿ 
var
¿¿ 
kvp
¿¿  
in
¿¿! #
handles
¿¿$ +
)
¿¿+ ,
kvp
¡¡ 
.
¡¡ 
Value
¡¡ 
.
¡¡ 
DrawMeshNow
¡¡ )
(
¡¡) *
$num
¡¡* +
)
¡¡+ ,
;
¡¡, -
}
¬¬ 
}
√√ 	
public
≈≈ 
static
≈≈ 
void
≈≈ 
ClearHandles
≈≈ '
(
≈≈' (
)
≈≈( )
{
∆∆ 	
if
«« 
(
«« 
m_WireHandles
«« 
!=
«« 
null
««  $
)
««$ %"
ClearHandlesInternal
»» $
(
»»$ %
wireHandles
»»% 0
)
»»0 1
;
»»1 2
if
…… 
(
…… 
m_VertexHandles
…… 
!=
…… !
null
……" &
)
……& '"
ClearHandlesInternal
   $
(
  $ %
m_VertexHandles
  % 4
)
  4 5
;
  5 6
if
ÀÀ 
(
ÀÀ !
selectedFaceHandles
ÀÀ "
!=
ÀÀ# %
null
ÀÀ& *
)
ÀÀ* +"
ClearHandlesInternal
ÃÃ $
(
ÃÃ$ %#
m_SelectedFaceHandles
ÃÃ% :
)
ÃÃ: ;
;
ÃÃ; <
if
ÕÕ 
(
ÕÕ #
m_SelectedEdgeHandles
ÕÕ $
!=
ÕÕ% '
null
ÕÕ( ,
)
ÕÕ, -"
ClearHandlesInternal
ŒŒ $
(
ŒŒ$ %#
m_SelectedEdgeHandles
ŒŒ% :
)
ŒŒ: ;
;
ŒŒ; <
if
œœ 
(
œœ %
m_SelectedVertexHandles
œœ &
!=
œœ' )
null
œœ* .
)
œœ. /"
ClearHandlesInternal
–– $
(
––$ %%
m_SelectedVertexHandles
––% <
)
––< =
;
––= >
}
—— 	
public
”” 
static
”” 
void
”” $
RebuildSelectedHandles
”” 1
(
””1 2
IEnumerable
””2 =
<
””= >
ProBuilderMesh
””> L
>
””L M
meshes
””N T
,
””T U

SelectMode
””V `
selectionMode
””a n
)
””n o
{
‘‘ 	
ClearHandles
’’ 
(
’’ 
)
’’ 
;
’’ 
foreach
◊◊ 
(
◊◊ 
var
◊◊ 
mesh
◊◊ 
in
◊◊  
meshes
◊◊! '
)
◊◊' (
{
ÿÿ 
switch
ŸŸ 
(
ŸŸ 
selectionMode
ŸŸ %
)
ŸŸ% &
{
⁄⁄ 
case
€€ 

SelectMode
€€ #
.
€€# $
Vertex
€€$ *
:
€€* +
case
‹‹ 

SelectMode
‹‹ #
.
‹‹# $
TextureVertex
‹‹$ 1
:
‹‹1 2
{
›› 
RebuildMeshHandle
ﬁﬁ )
(
ﬁﬁ) *
mesh
ﬁﬁ* .
,
ﬁﬁ. /
vertexHandles
ﬁﬁ0 =
,
ﬁﬁ= >
MeshHandles
ﬁﬁ? J
.
ﬁﬁJ K
CreateVertexMesh
ﬁﬁK [
)
ﬁﬁ[ \
;
ﬁﬁ\ ]
var
ﬂﬂ 
handle
ﬂﬂ "
=
ﬂﬂ# $
GetMeshHandle
ﬂﬂ% 2
(
ﬂﬂ2 3
mesh
ﬂﬂ3 7
,
ﬂﬂ7 8#
selectedVertexHandles
ﬂﬂ9 N
)
ﬂﬂN O
;
ﬂﬂO P
MeshHandles
‡‡ #
.
‡‡# $
CreateVertexMesh
‡‡$ 4
(
‡‡4 5
mesh
‡‡5 9
,
‡‡9 :
handle
‡‡; A
.
‡‡A B
mesh
‡‡B F
,
‡‡F G
mesh
‡‡H L
.
‡‡L M%
selectedIndexesInternal
‡‡M d
)
‡‡d e
;
‡‡e f
goto
·· 
default
·· $
;
··$ %
}
‚‚ 
case
‰‰ 

SelectMode
‰‰ #
.
‰‰# $
Edge
‰‰$ (
:
‰‰( )
case
ÂÂ 

SelectMode
ÂÂ #
.
ÂÂ# $
TextureEdge
ÂÂ$ /
:
ÂÂ/ 0
{
ÊÊ 
if
ÁÁ 
(
ÁÁ  
m_ForceEdgeLinesGL
ÁÁ -
||
ÁÁ. 0
BuiltinMaterials
ÁÁ1 A
.
ÁÁA B&
geometryShadersSupported
ÁÁB Z
)
ÁÁZ [
RebuildMeshHandle
ËË -
(
ËË- .
mesh
ËË. 2
,
ËË2 3
wireHandles
ËË4 ?
,
ËË? @
MeshHandles
ËËA L
.
ËËL M
CreateEdgeMesh
ËËM [
)
ËË[ \
;
ËË\ ]
else
ÈÈ 
RebuildMeshHandle
ÍÍ -
(
ÍÍ- .
mesh
ÍÍ. 2
,
ÍÍ2 3
wireHandles
ÍÍ4 ?
,
ÍÍ? @
MeshHandles
ÍÍA L
.
ÍÍL M%
CreateEdgeBillboardMesh
ÍÍM d
)
ÍÍd e
;
ÍÍe f
var
ÏÏ 
handle
ÏÏ "
=
ÏÏ# $
GetMeshHandle
ÏÏ% 2
(
ÏÏ2 3
mesh
ÏÏ3 7
,
ÏÏ7 8!
selectedEdgeHandles
ÏÏ9 L
)
ÏÏL M
;
ÏÏM N
if
ÓÓ 
(
ÓÓ  
m_ForceEdgeLinesGL
ÓÓ -
||
ÓÓ. 0
BuiltinMaterials
ÓÓ1 A
.
ÓÓA B&
geometryShadersSupported
ÓÓB Z
)
ÓÓZ [
MeshHandles
ÔÔ '
.
ÔÔ' (
CreateEdgeMesh
ÔÔ( 6
(
ÔÔ6 7
mesh
ÔÔ7 ;
,
ÔÔ; <
handle
ÔÔ= C
.
ÔÔC D
mesh
ÔÔD H
,
ÔÔH I
mesh
ÔÔJ N
.
ÔÔN O#
selectedEdgesInternal
ÔÔO d
)
ÔÔd e
;
ÔÔe f
else
 
MeshHandles
ÒÒ '
.
ÒÒ' (%
CreateEdgeBillboardMesh
ÒÒ( ?
(
ÒÒ? @
mesh
ÒÒ@ D
,
ÒÒD E
handle
ÒÒF L
.
ÒÒL M
mesh
ÒÒM Q
,
ÒÒQ R
mesh
ÒÒS W
.
ÒÒW X#
selectedEdgesInternal
ÒÒX m
)
ÒÒm n
;
ÒÒn o
break
ÛÛ 
;
ÛÛ 
}
ÙÙ 
case
ˆˆ 

SelectMode
ˆˆ #
.
ˆˆ# $
Face
ˆˆ$ (
:
ˆˆ( )
case
˜˜ 

SelectMode
˜˜ #
.
˜˜# $
TextureFace
˜˜$ /
:
˜˜/ 0
{
¯¯ 
RebuildMeshHandle
˘˘ )
(
˘˘) *
mesh
˘˘* .
,
˘˘. /!
selectedFaceHandles
˘˘0 C
,
˘˘C D
MeshHandles
˘˘E P
.
˘˘P Q
CreateFaceMesh
˘˘Q _
)
˘˘_ `
;
˘˘` a
goto
˙˙ 
default
˙˙ $
;
˙˙$ %
}
˚˚ 
default
˝˝ 
:
˝˝ 
if
˛˛ 
(
˛˛ %
m_ForceWireframeLinesGL
˛˛ 2
||
˛˛3 5
BuiltinMaterials
˛˛6 F
.
˛˛F G&
geometryShadersSupported
˛˛G _
)
˛˛_ `
RebuildMeshHandle
ˇˇ -
(
ˇˇ- .
mesh
ˇˇ. 2
,
ˇˇ2 3
wireHandles
ˇˇ4 ?
,
ˇˇ? @
MeshHandles
ˇˇA L
.
ˇˇL M
CreateEdgeMesh
ˇˇM [
)
ˇˇ[ \
;
ˇˇ\ ]
else
ÄÄ 
RebuildMeshHandle
ÅÅ -
(
ÅÅ- .
mesh
ÅÅ. 2
,
ÅÅ2 3
wireHandles
ÅÅ4 ?
,
ÅÅ? @
MeshHandles
ÅÅA L
.
ÅÅL M%
CreateEdgeBillboardMesh
ÅÅM d
)
ÅÅd e
;
ÅÅe f
break
ÇÇ 
;
ÇÇ 
}
ÉÉ 
}
ÑÑ 
}
ÖÖ 	
static
áá 

MeshHandle
áá 
GetMeshHandle
áá '
(
áá' (
ProBuilderMesh
áá( 6
mesh
áá7 ;
,
áá; <

Dictionary
áá= G
<
ááG H
ProBuilderMesh
ááH V
,
ááV W

MeshHandle
ááX b
>
ááb c
cache
áád i
)
áái j
{
àà 	

MeshHandle
ââ 
handle
ââ 
;
ââ 
if
ãã 
(
ãã 
!
ãã 
cache
ãã 
.
ãã 
TryGetValue
ãã "
(
ãã" #
mesh
ãã# '
,
ãã' (
out
ãã) ,
handle
ãã- 3
)
ãã3 4
)
ãã4 5
{
åå 
var
çç 
m
çç 
=
çç 
meshPool
çç  
.
çç  !
Dequeue
çç! (
(
çç( )
)
çç) *
;
çç* +
handle
éé 
=
éé 
new
éé 

MeshHandle
éé '
(
éé' (
mesh
éé( ,
.
éé, -
	transform
éé- 6
,
éé6 7
m
éé8 9
)
éé9 :
;
éé: ;
cache
èè 
.
èè 
Add
èè 
(
èè 
mesh
èè 
,
èè 
handle
èè  &
)
èè& '
;
èè' (
}
êê 
return
íí 
handle
íí 
;
íí 
}
ìì 	
static
ïï 
void
ïï 
RebuildMeshHandle
ïï %
(
ïï% &
ProBuilderMesh
ïï& 4
mesh
ïï5 9
,
ïï9 :

Dictionary
ïï; E
<
ïïE F
ProBuilderMesh
ïïF T
,
ïïT U

MeshHandle
ïïV `
>
ïï` a
list
ïïb f
,
ïïf g
Action
ïïh n
<
ïïn o
ProBuilderMesh
ïïo }
,
ïï} ~
Meshïï É
>ïïÉ Ñ
ctorïïÖ â
)ïïâ ä
{
ññ 	
var
óó 
handle
óó 
=
óó 
GetMeshHandle
óó &
(
óó& '
mesh
óó' +
,
óó+ ,
list
óó- 1
)
óó1 2
;
óó2 3
ctor
òò 
(
òò 
mesh
òò 
,
òò 
handle
òò 
.
òò 
mesh
òò "
)
òò" #
;
òò# $
}
ôô 	
static
õõ 
void
õõ "
ClearHandlesInternal
õõ (
(
õõ( )

Dictionary
õõ) 3
<
õõ3 4
ProBuilderMesh
õõ4 B
,
õõB C

MeshHandle
õõD N
>
õõN O
handles
õõP W
)
õõW X
{
úú 	
foreach
ùù 
(
ùù 
var
ùù 
kvp
ùù 
in
ùù 
handles
ùù  '
)
ùù' (
meshPool
ûû 
.
ûû 
Enqueue
ûû  
(
ûû  !
kvp
ûû! $
.
ûû$ %
Value
ûû% *
.
ûû* +
mesh
ûû+ /
)
ûû/ 0
;
ûû0 1
handles
üü 
.
üü 
Clear
üü 
(
üü 
)
üü 
;
üü 
}
†† 	
static
¢¢ 
void
¢¢ (
SetMaterialsScaleAttribute
¢¢ .
(
¢¢. /
)
¢¢/ 0
{
££ 	
vertMaterial
§§ 
.
§§ 
SetFloat
§§ !
(
§§! "
$str
§§" *
,
§§* +
s_VertexPointSize
§§, =
*
§§> ?
EditorGUIUtility
§§@ P
.
§§P Q
pixelsPerPoint
§§Q _
)
§§_ `
;
§§` a
wireMaterial
•• 
.
•• 
SetFloat
•• !
(
••! "
$str
••" *
,
••* +!
s_WireframeLineSize
••, ?
*
••@ A
EditorGUIUtility
••B R
.
••R S
pixelsPerPoint
••S a
)
••a b
;
••b c
edgeMaterial
¶¶ 
.
¶¶ 
SetFloat
¶¶ !
(
¶¶! "
$str
¶¶" *
,
¶¶* +
s_EdgeLineSize
¶¶, :
*
¶¶; <
EditorGUIUtility
¶¶= M
.
¶¶M N
pixelsPerPoint
¶¶N \
)
¶¶\ ]
;
¶¶] ^
}
ßß 	
}
®® 
}©© •≥
ëD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\PlyExporter.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
{

 
sealed 

class 

PlyOptions 
{ 
public 
bool 
isRightHanded !
=" #
true$ (
;( )
public 
bool 
ngons 
= 
false !
;! "
public 
bool 
quads 
= 
true  
;  !
public 
bool 
applyTransforms #
=$ %
true& *
;* +
} 
static   

class   
PlyExporter   
{!! 
public)) 
static)) 
bool)) 
Export)) !
())! "
IEnumerable))" -
<))- .
ProBuilderMesh)). <
>))< =
models))> D
,))D E
out))F I
string))J P
contents))Q Y
,))Y Z

PlyOptions))[ e
options))f m
=))n o
null))p t
)))t u
{** 	
if++ 
(++ 
options++ 
==++ 
null++ 
)++  
options,, 
=,, 
new,, 

PlyOptions,, (
(,,( )
),,) *
;,,* +
foreach.. 
(.. 
ProBuilderMesh.. #
pb..$ &
in..' )
models..* 0
)..0 1
{// 
pb00 
.00 
ToMesh00 
(00 
)00 
;00 
pb11 
.11 
Refresh11 
(11 
)11 
;11 
}22 
int44 

modelCount44 
=44 
models44 #
.44# $
Count44$ )
(44) *
)44* +
;44+ ,
Vector366 
[66 
]66 
	positions66 
=66  !
models66" (
.66( )

SelectMany66) 3
(663 4
x664 5
=>666 8
x669 :
.66: ;
positionsInternal66; L
)66L M
.66M N
ToArray66N U
(66U V
)66V W
;66W X
Vector377 
[77 
]77 
normals77 
=77 
models77  &
.77& '

SelectMany77' 1
(771 2
x772 3
=>774 6
x777 8
.778 9

GetNormals779 C
(77C D
)77D E
)77E F
.77F G
ToArray77G N
(77N O
)77O P
;77P Q
Color88 
[88 
]88 
colors88 
=88 
models88 #
.88# $

SelectMany88$ .
(88. /
x88/ 0
=>881 3
x884 5
.885 6
	GetColors886 ?
(88? @
)88@ A
)88A B
.88B C
ToArray88C J
(88J K
)88K L
;88L M
List:: 
<:: 
int:: 
[:: 
]:: 
>:: 
faces:: 
=:: 
new::  #
List::$ (
<::( )
int::) ,
[::, -
]::- .
>::. /
(::/ 0

modelCount::0 :
)::: ;
;::; <
int;; 
vertexOffset;; 
=;; 
$num;;  
;;;  !
foreach== 
(== 
ProBuilderMesh== #
pb==$ &
in==' )
models==* 0
)==0 1
{>> 
List?? 
<?? 
int?? 
[?? 
]?? 
>?? 
indexes?? #
=??$ %
null??& *
;??* +
ifAA 
(AA 
optionsAA 
.AA 
ngonsAA !
)AA! "
{BB 
indexesCC 
=CC 
pbCC  
.CC  !
facesInternalCC! .
.CC. /
SelectCC/ 5
(CC5 6
yCC6 7
=>CC8 :
optionsCC; B
.CCB C
quadsCCC H
?CCI J
(CCK L
yCCL M
.CCM N
IsQuadCCN T
(CCT U
)CCU V
?CCW X
yCCY Z
.CCZ [
ToQuadCC[ a
(CCa b
)CCb c
:CCd e
yCCf g
.CCg h
indexesInternalCCh w
)CCw x
:CCy z
yCC{ |
.CC| }
indexesInternal	CC} å
)
CCå ç
.
CCç é
ToList
CCé î
(
CCî ï
)
CCï ñ
;
CCñ ó
}DD 
elseEE 
{FF 
indexesGG 
=GG 
newGG !
ListGG" &
<GG& '
intGG' *
[GG* +
]GG+ ,
>GG, -
(GG- .
)GG. /
;GG/ 0
foreachII 
(II 
FaceII !
faceII" &
inII' )
pbII* ,
.II, -
facesInternalII- :
)II: ;
{JJ 
ifKK 
(KK 
optionsKK #
.KK# $
quadsKK$ )
&&KK* ,
faceKK- 1
.KK1 2
IsQuadKK2 8
(KK8 9
)KK9 :
)KK: ;
{LL 
indexesMM #
.MM# $
AddMM$ '
(MM' (
faceMM( ,
.MM, -
ToQuadMM- 3
(MM3 4
)MM4 5
)MM5 6
;MM6 7
continueNN $
;NN$ %
}OO 
forQQ 
(QQ 
intQQ  
iQQ! "
=QQ# $
$numQQ% &
;QQ& '
iQQ( )
<QQ* +
faceQQ, 0
.QQ0 1
indexesInternalQQ1 @
.QQ@ A
LengthQQA G
;QQG H
iQQI J
+=QQK M
$numQQN O
)QQO P
indexesRR #
.RR# $
AddRR$ '
(RR' (
newRR( +
intRR, /
[RR/ 0
]RR0 1
{RR2 3
faceSS  $
.SS$ %
indexesInternalSS% 4
[SS4 5
iSS5 6
+SS7 8
$numSS9 :
]SS: ;
,SS; <
faceTT  $
.TT$ %
indexesInternalTT% 4
[TT4 5
iTT5 6
+TT7 8
$numTT9 :
]TT: ;
,TT; <
faceUU  $
.UU$ %
indexesInternalUU% 4
[UU4 5
iUU5 6
+UU7 8
$numUU9 :
]UU: ;
}VV 
)VV 
;VV 
}WW 
}XX 
foreachZZ 
(ZZ 
intZZ 
[ZZ 
]ZZ 
faceZZ #
inZZ$ &
indexesZZ' .
)ZZ. /
for[[ 
([[ 
int[[ 
y[[ 
=[[  
$num[[! "
;[[" #
y[[$ %
<[[& '
face[[( ,
.[[, -
Length[[- 3
;[[3 4
y[[5 6
++[[6 8
)[[8 9
face\\ 
[\\ 
y\\ 
]\\ 
+=\\  "
vertexOffset\\# /
;\\/ 0
vertexOffset^^ 
+=^^ 
pb^^  "
.^^" #
vertexCount^^# .
;^^. /
if`` 
(`` 
options`` 
.`` 
applyTransforms`` +
)``+ ,
{aa 
	Transformbb 
trsbb !
=bb" #
pbbb$ &
.bb& '
	transformbb' 0
;bb0 1
fordd 
(dd 
intdd 
idd 
=dd  
$numdd! "
;dd" #
	positionsdd$ -
!=dd. 0
nulldd1 5
&&dd6 8
idd9 :
<dd; <
	positionsdd= F
.ddF G
LengthddG M
;ddM N
iddO P
++ddP R
)ddR S
	positionsee !
[ee! "
iee" #
]ee# $
=ee% &
trsee' *
.ee* +
TransformPointee+ 9
(ee9 :
	positionsee: C
[eeC D
ieeD E
]eeE F
)eeF G
;eeG H
forgg 
(gg 
intgg 
igg 
=gg  
$numgg! "
;gg" #
normalsgg$ +
!=gg, .
nullgg/ 3
&&gg4 6
igg7 8
<gg9 :
normalsgg; B
.ggB C
LengthggC I
;ggI J
iggK L
++ggL N
)ggN O
normalshh 
[hh  
ihh  !
]hh! "
=hh# $
trshh% (
.hh( )
TransformDirectionhh) ;
(hh; <
normalshh< C
[hhC D
ihhD E
]hhE F
)hhF G
;hhG H
}ii 
faceskk 
.kk 
AddRangekk 
(kk 
indexeskk &
)kk& '
;kk' (
}ll 
boolnn 
resnn 
=nn 
Exportnn 
(nn 
	positionsnn '
,nn' (
facesnn) .
.nn. /
ToArraynn/ 6
(nn6 7
)nn7 8
,nn8 9
outnn: =
contentsnn> F
,nnF G
normalsnnH O
,nnO P
colorsnnQ W
,nnW X
optionsnnY `
.nn` a
isRightHandednna n
)nnn o
;nno p
foreachpp 
(pp 
ProBuilderMeshpp #
pbpp$ &
inpp' )
modelspp* 0
)pp0 1
pbqq 
.qq 
Optimizeqq 
(qq 
)qq 
;qq 
returnss 
resss 
;ss 
}tt 	
public
ÄÄ 
static
ÄÄ 
bool
ÄÄ 
Export
ÄÄ !
(
ÄÄ! "
Vector3
ÅÅ 
[
ÅÅ 
]
ÅÅ 
	positions
ÅÅ 
,
ÅÅ  
int
ÇÇ 
[
ÇÇ 
]
ÇÇ 
[
ÇÇ 
]
ÇÇ 
faces
ÇÇ 
,
ÇÇ 
out
ÇÇ 
string
ÇÇ %
contents
ÇÇ& .
,
ÇÇ. /
Vector3
ÉÉ 
[
ÉÉ 
]
ÉÉ 
normals
ÉÉ 
=
ÉÉ 
null
ÉÉ  $
,
ÉÉ$ %
Color
ÑÑ 
[
ÑÑ 
]
ÑÑ 
colors
ÑÑ 
=
ÑÑ 
null
ÑÑ !
,
ÑÑ! "
bool
ÖÖ 
flipHandedness
ÖÖ 
=
ÖÖ  !
true
ÖÖ" &
)
ÖÖ& '
{
ÜÜ 	
int
áá 
	faceCount
áá 
=
áá 
faces
áá !
!=
áá" $
null
áá% )
?
áá* +
faces
áá, 1
.
áá1 2
Length
áá2 8
:
áá9 :
$num
áá; <
;
áá< =
int
àà 
vertexCount
àà 
=
àà 
	positions
àà '
!=
àà( *
null
àà+ /
?
àà0 1
	positions
àà2 ;
.
àà; <
Length
àà< B
:
ààC D
$num
ààE F
;
ààF G
if
ää 
(
ää 
vertexCount
ää 
<
ää 
$num
ää 
||
ää  "
	faceCount
ää# ,
<
ää- .
$num
ää/ 0
)
ää0 1
{
ãã 
contents
åå 
=
åå 
null
åå 
;
åå  
return
çç 
false
çç 
;
çç 
}
éé 
bool
êê 

hasNormals
êê 
=
êê 
normals
êê %
!=
êê& (
null
êê) -
&&
êê. 0
normals
êê1 8
.
êê8 9
Length
êê9 ?
==
êê@ B
vertexCount
êêC N
;
êêN O
bool
ëë 
	hasColors
ëë 
=
ëë 
colors
ëë #
!=
ëë$ &
null
ëë' +
&&
ëë, .
colors
ëë/ 5
.
ëë5 6
Length
ëë6 <
==
ëë= ?
vertexCount
ëë@ K
;
ëëK L
StringBuilder
ìì 
sb
ìì 
=
ìì 
new
ìì "
StringBuilder
ìì# 0
(
ìì0 1
)
ìì1 2
;
ìì2 3
WriteHeader
ïï 
(
ïï 
vertexCount
ïï #
,
ïï# $
	faceCount
ïï% .
,
ïï. /

hasNormals
ïï0 :
,
ïï: ;
	hasColors
ïï< E
,
ïïE F
ref
ïïG J
sb
ïïK M
)
ïïM N
;
ïïN O
for
óó 
(
óó 
int
óó 
i
óó 
=
óó 
$num
óó 
;
óó 
i
óó 
<
óó 
vertexCount
óó  +
;
óó+ ,
i
óó- .
++
óó. 0
)
óó0 1
{
òò 
sb
ôô 
.
ôô 
Append
ôô 
(
ôô 
string
ôô  
.
ôô  !
Format
ôô! '
(
ôô' (
CultureInfo
ôô( 3
.
ôô3 4
InvariantCulture
ôô4 D
,
ôôD E
$str
ôôF S
,
ôôS T
flipHandedness
ôôU c
?
ôôd e
-
ôôf g
	positions
ôôg p
[
ôôp q
i
ôôq r
]
ôôr s
.
ôôs t
x
ôôt u
:
ôôv w
	positionsôôx Å
[ôôÅ Ç
iôôÇ É
]ôôÉ Ñ
.ôôÑ Ö
xôôÖ Ü
,ôôÜ á
	positionsôôà ë
[ôôë í
iôôí ì
]ôôì î
.ôôî ï
yôôï ñ
,ôôñ ó
	positionsôôò °
[ôô° ¢
iôô¢ £
]ôô£ §
.ôô§ •
zôô• ¶
)ôô¶ ß
)ôôß ®
;ôô® ©
if
õõ 
(
õõ 

hasNormals
õõ 
)
õõ 
sb
úú 
.
úú 
Append
úú 
(
úú 
string
úú $
.
úú$ %
Format
úú% +
(
úú+ ,
CultureInfo
úú, 7
.
úú7 8
InvariantCulture
úú8 H
,
úúH I
$str
úúJ X
,
úúX Y
flipHandedness
úúZ h
?
úúi j
-
úúk l
normals
úúl s
[
úús t
i
úút u
]
úúu v
.
úúv w
x
úúw x
:
úúy z
-
úú{ |
normalsúú| É
[úúÉ Ñ
iúúÑ Ö
]úúÖ Ü
.úúÜ á
xúúá à
,úúà â
normalsúúä ë
[úúë í
iúúí ì
]úúì î
.úúî ï
yúúï ñ
,úúñ ó
normalsúúò ü
[úúü †
iúú† °
]úú° ¢
.úú¢ £
zúú£ §
)úú§ •
)úú• ¶
;úú¶ ß
if
ûû 
(
ûû 
	hasColors
ûû 
)
ûû 
sb
üü 
.
üü 
Append
üü 
(
üü 
string
üü $
.
üü$ %
Format
üü% +
(
üü+ ,
CultureInfo
üü, 7
.
üü7 8
InvariantCulture
üü8 H
,
üüH I
$str
üüJ \
,
üü\ ]
System
†† "
.
††" #
Math
††# '
.
††' (
Min
††( +
(
††+ ,
System
††, 2
.
††2 3
Math
††3 7
.
††7 8
Max
††8 ;
(
††; <
$num
††< =
,
††= >
(
††? @
int
††@ C
)
††C D
(
††D E
colors
††E K
[
††K L
i
††L M
]
††M N
.
††N O
r
††O P
*
††Q R
$num
††S V
)
††V W
)
††W X
,
††X Y
$num
††Z ]
)
††] ^
,
††^ _
System
°° "
.
°°" #
Math
°°# '
.
°°' (
Min
°°( +
(
°°+ ,
System
°°, 2
.
°°2 3
Math
°°3 7
.
°°7 8
Max
°°8 ;
(
°°; <
$num
°°< =
,
°°= >
(
°°? @
int
°°@ C
)
°°C D
(
°°D E
colors
°°E K
[
°°K L
i
°°L M
]
°°M N
.
°°N O
g
°°O P
*
°°Q R
$num
°°S V
)
°°V W
)
°°W X
,
°°X Y
$num
°°Z ]
)
°°] ^
,
°°^ _
System
¢¢ "
.
¢¢" #
Math
¢¢# '
.
¢¢' (
Min
¢¢( +
(
¢¢+ ,
System
¢¢, 2
.
¢¢2 3
Math
¢¢3 7
.
¢¢7 8
Max
¢¢8 ;
(
¢¢; <
$num
¢¢< =
,
¢¢= >
(
¢¢? @
int
¢¢@ C
)
¢¢C D
(
¢¢D E
colors
¢¢E K
[
¢¢K L
i
¢¢L M
]
¢¢M N
.
¢¢N O
b
¢¢O P
*
¢¢Q R
$num
¢¢S V
)
¢¢V W
)
¢¢W X
,
¢¢X Y
$num
¢¢Z ]
)
¢¢] ^
,
¢¢^ _
System
££ "
.
££" #
Math
££# '
.
££' (
Min
££( +
(
££+ ,
System
££, 2
.
££2 3
Math
££3 7
.
££7 8
Max
££8 ;
(
££; <
$num
££< =
,
££= >
(
££? @
int
££@ C
)
££C D
(
££D E
colors
££E K
[
££K L
i
££L M
]
££M N
.
££N O
a
££O P
*
££Q R
$num
££S V
)
££V W
)
££W X
,
££X Y
$num
££Z ]
)
££] ^
)
££^ _
)
££_ `
;
££` a
sb
•• 
.
•• 

AppendLine
•• 
(
•• 
)
•• 
;
••  
}
¶¶ 
for
®® 
(
®® 
int
®® 
i
®® 
=
®® 
$num
®® 
;
®® 
i
®® 
<
®® 
	faceCount
®®  )
;
®®) *
i
®®+ ,
++
®®, .
)
®®. /
{
©© 
int
™™ 

faceLength
™™ 
=
™™  
faces
™™! &
[
™™& '
i
™™' (
]
™™( )
!=
™™* ,
null
™™- 1
?
™™2 3
faces
™™4 9
[
™™9 :
i
™™: ;
]
™™; <
.
™™< =
Length
™™= C
:
™™D E
$num
™™F G
;
™™G H
sb
´´ 
.
´´ 
Append
´´ 
(
´´ 

faceLength
´´ $
.
´´$ %
ToString
´´% -
(
´´- .
CultureInfo
´´. 9
.
´´9 :
InvariantCulture
´´: J
)
´´J K
)
´´K L
;
´´L M
for
¨¨ 
(
¨¨ 
int
¨¨ 
n
¨¨ 
=
¨¨ 
$num
¨¨ 
;
¨¨ 
n
¨¨  !
<
¨¨" #

faceLength
¨¨$ .
;
¨¨. /
n
¨¨0 1
++
¨¨1 3
)
¨¨3 4
sb
≠≠ 
.
≠≠ 
Append
≠≠ 
(
≠≠ 
string
≠≠ $
.
≠≠$ %
Format
≠≠% +
(
≠≠+ ,
CultureInfo
≠≠, 7
.
≠≠7 8
InvariantCulture
≠≠8 H
,
≠≠H I
$str
≠≠J P
,
≠≠P Q
faces
≠≠R W
[
≠≠W X
i
≠≠X Y
]
≠≠Y Z
[
≠≠Z [
flipHandedness
≠≠[ i
?
≠≠j k

faceLength
≠≠l v
-
≠≠w x
n
≠≠y z
-
≠≠{ |
$num
≠≠} ~
:≠≠ Ä
n≠≠Å Ç
]≠≠Ç É
)≠≠É Ñ
)≠≠Ñ Ö
;≠≠Ö Ü
sb
ÆÆ 
.
ÆÆ 

AppendLine
ÆÆ 
(
ÆÆ 
)
ÆÆ 
;
ÆÆ  
}
ØØ 
contents
±± 
=
±± 
sb
±± 
.
±± 
ToString
±± "
(
±±" #
)
±±# $
;
±±$ %
return
≥≥ 
true
≥≥ 
;
≥≥ 
}
¥¥ 	
static
∂∂ 
void
∂∂ 
WriteHeader
∂∂ 
(
∂∂  
int
∂∂  #
vertexCount
∂∂$ /
,
∂∂/ 0
int
∂∂1 4
	faceCount
∂∂5 >
,
∂∂> ?
bool
∂∂@ D

hasNormals
∂∂E O
,
∂∂O P
bool
∂∂Q U
	hasColors
∂∂V _
,
∂∂_ `
ref
∂∂a d
StringBuilder
∂∂e r
sb
∂∂s u
)
∂∂u v
{
∑∑ 	
sb
∏∏ 
.
∏∏ 

AppendLine
∏∏ 
(
∏∏ 
$str
∏∏ 
)
∏∏  
;
∏∏  !
sb
ππ 
.
ππ 

AppendLine
ππ 
(
ππ 
$str
ππ ,
)
ππ, -
;
ππ- .
sb
∫∫ 
.
∫∫ 

AppendLine
∫∫ 
(
∫∫ 
$str
∫∫ a
)
∫∫a b
;
∫∫b c
sb
ªª 
.
ªª 

AppendLine
ªª 
(
ªª 
$str
ªª $
+
ªª% &
System
ªª' -
.
ªª- .
DateTime
ªª. 6
.
ªª6 7
Now
ªª7 :
)
ªª: ;
;
ªª; <
sb
ºº 
.
ºº 

AppendLine
ºº 
(
ºº 
string
ºº  
.
ºº  !
Format
ºº! '
(
ºº' (
CultureInfo
ºº( 3
.
ºº3 4
InvariantCulture
ºº4 D
,
ººD E
$str
ººF Z
,
ººZ [
vertexCount
ºº\ g
)
ººg h
)
ººh i
;
ººi j
sb
ΩΩ 
.
ΩΩ 

AppendLine
ΩΩ 
(
ΩΩ 
$str
ΩΩ .
)
ΩΩ. /
;
ΩΩ/ 0
sb
ææ 
.
ææ 

AppendLine
ææ 
(
ææ 
$str
ææ .
)
ææ. /
;
ææ/ 0
sb
øø 
.
øø 

AppendLine
øø 
(
øø 
$str
øø .
)
øø. /
;
øø/ 0
if
¿¿ 
(
¿¿ 

hasNormals
¿¿ 
)
¿¿ 
{
¡¡ 
sb
¬¬ 
.
¬¬ 

AppendLine
¬¬ 
(
¬¬ 
$str
¬¬ 3
)
¬¬3 4
;
¬¬4 5
sb
√√ 
.
√√ 

AppendLine
√√ 
(
√√ 
$str
√√ 3
)
√√3 4
;
√√4 5
sb
ƒƒ 
.
ƒƒ 

AppendLine
ƒƒ 
(
ƒƒ 
$str
ƒƒ 3
)
ƒƒ3 4
;
ƒƒ4 5
}
≈≈ 
if
∆∆ 
(
∆∆ 
	hasColors
∆∆ 
)
∆∆ 
{
«« 
sb
»» 
.
»» 

AppendLine
»» 
(
»» 
$str
»» 2
)
»»2 3
;
»»3 4
sb
…… 
.
…… 

AppendLine
…… 
(
…… 
$str
…… 4
)
……4 5
;
……5 6
sb
   
.
   

AppendLine
   
(
   
$str
   3
)
  3 4
;
  4 5
sb
ÀÀ 
.
ÀÀ 

AppendLine
ÀÀ 
(
ÀÀ 
$str
ÀÀ 4
)
ÀÀ4 5
;
ÀÀ5 6
}
ÃÃ 
sb
ÕÕ 
.
ÕÕ 

AppendLine
ÕÕ 
(
ÕÕ 
string
ÕÕ  
.
ÕÕ  !
Format
ÕÕ! '
(
ÕÕ' (
CultureInfo
ÕÕ( 3
.
ÕÕ3 4
InvariantCulture
ÕÕ4 D
,
ÕÕD E
$str
ÕÕF X
,
ÕÕX Y
	faceCount
ÕÕZ c
)
ÕÕc d
)
ÕÕd e
;
ÕÕe f
sb
ŒŒ 
.
ŒŒ 

AppendLine
ŒŒ 
(
ŒŒ 
$str
ŒŒ B
)
ŒŒB C
;
ŒŒC D
sb
œœ 
.
œœ 

AppendLine
œœ 
(
œœ 
$str
œœ &
)
œœ& '
;
œœ' (
}
–– 	
}
—— 
}““ ¸[
íD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\EntityEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
[		 
CustomEditor		 
(		 
typeof		 
(		 
Entity		 
)		  
)		  !
]		! "
[

 "
CanEditMultipleObjects

 
]

 
sealed 

class 
EntityEditor 
: 
Editor  &
{ 
Entity 
ent 
; 
ProBuilderMesh 
pb 
; 
public 
enum 
ColType 
{ 	
MeshCollider 
, 
BoxCollider 
, 
SphereCollider 
} 	
public 
void 
OnEnable 
( 
) 
{ 	
ent 
= 
( 
Entity 
) 
target  
;  !
if 
( 
ent 
!= 
null 
) 
pb 
= 
( 
ProBuilderMesh $
)$ %
ent% (
.( )
	transform) 2
.2 3
GetComponent3 ?
<? @
ProBuilderMesh@ N
>N O
(O P
)P Q
;Q R
} 	
public 
override 
void 
OnInspectorGUI +
(+ ,
), -
{   	
if!! 
(!! 
pb!! 
==!! 
null!! 
)!! 
return!! "
;!!" #
if"" 
("" 
ent"" 
=="" 
null"" 
)"" 
return"" #
;""# $

EntityType$$ 
et$$ 
=$$ 
ent$$ 
.$$  

entityType$$  *
;$$* +
et%% 
=%% 
(%% 

EntityType%% 
)%% 
EditorGUILayout%% ,
.%%, -
	EnumPopup%%- 6
(%%6 7
$str%%7 D
,%%D E
et%%F H
)%%H I
;%%I J
if&& 
(&& 
et&& 
!=&& 
ent&& 
.&& 

entityType&& $
)&&$ %
{'' 
UndoUtility(( 
.(( 
RecordObjects(( )
((() *
new((* -
Object((. 4
[((4 5
]((5 6
{((7 8
ent((8 ;
,((; <
ent((= @
.((@ A

gameObject((A K
.((K L
GetComponent((L X
<((X Y
ProBuilderMesh((Y g
>((g h
(((h i
)((i j
}((k l
,((l m
$str((n 
)	(( Ä
;
((Ä Å
EntityUtility** 
.** 
SetEntityType** +
(**+ ,
et**, .
,**. /
ent**0 3
.**3 4

gameObject**4 >
)**> ?
;**? @
pb,, 
.,, 
ToMesh,, 
(,, 
),, 
;,, 
pb-- 
.-- 
Refresh-- 
(-- 
)-- 
;-- 
pb.. 
... 
Optimize.. 
(.. 
).. 
;.. 
}// 
	GUILayout11 
.11 
Space11 
(11 
$num11 
)11 
;11 
pb33 
.33 
userCollisions33 
=33 
EditorGUILayout33  /
.33/ 0
Toggle330 6
(336 7
$str337 H
,33H I
pb33J L
.33L M
userCollisions33M [
)33[ \
;33\ ]
if66 
(66 
pb66 
.66 
userCollisions66 !
)66! "
GUI77 
.77 
enabled77 
=77 
false77 #
;77# $
	GUILayout99 
.99 
Label99 
(99 
$str99 *
,99* +
EditorStyles99, 8
.998 9
	boldLabel999 B
)99B C
;99C D
	GUILayout:: 
.:: 
BeginHorizontal:: %
(::% &
)::& '
;::' (
if<< 
(<< 
	GUILayout<< 
.<< 
Button<<  
(<<  !
$str<<! 0
,<<0 1
EditorStyles<<2 >
.<<> ?
miniButtonLeft<<? M
)<<M N
)<<N O
EditorApplication== !
.==! "
	delayCall==" +
+===, .
AddMeshCollider==/ >
;==> ?
if?? 
(?? 
	GUILayout?? 
.?? 
Button??  
(??  !
$str??! /
,??/ 0
EditorStyles??1 =
.??= >
miniButtonMid??> K
)??K L
)??L M
EditorApplication@@ !
.@@! "
	delayCall@@" +
+=@@, .
AddBoxCollider@@/ =
;@@= >
ifBB 
(BB 
	GUILayoutBB 
.BB 
ButtonBB  
(BB  !
$strBB! 2
,BB2 3
EditorStylesBB4 @
.BB@ A
miniButtonRightBBA P
)BBP Q
)BBQ R
EditorApplicationCC !
.CC! "
	delayCallCC" +
+=CC, .
RemoveCollidersCC/ >
;CC> ?
	GUILayoutFF 
.FF 
EndHorizontalFF #
(FF# $
)FF$ %
;FF% &
GUIHH 
.HH 
enabledHH 
=HH 
trueHH 
;HH 
}II 	
voidKK 
AddMeshColliderKK 
(KK 
)KK 
{LL 	
AddColliderMM 
(MM 
ColTypeMM 
.MM  
MeshColliderMM  ,
)MM, -
;MM- .
}NN 	
voidPP 
AddBoxColliderPP 
(PP 
)PP 
{QQ 	
AddColliderRR 
(RR 
ColTypeRR 
.RR  
BoxColliderRR  +
)RR+ ,
;RR, -
}SS 	
privateUU 
voidUU 
AddColliderUU  
(UU  !
ColTypeUU! (
cUU) *
)UU* +
{VV 	
ColliderWW 
[WW 
]WW 
	collidersWW  
=WW! "
serializedObjectWW# 3
.WW3 4
targetObjectsWW4 A
.WWA B
WhereWWB G
(WWG H
xWWH I
=>WWJ L
xWWM N
isWWO Q
EntityWWR X
)WWX Y
.WWY Z

SelectManyWWZ d
(WWd e
xWWe f
=>WWg i
(WWj k
(WWk l
EntityWWl r
)WWr s
xWWs t
)WWt u
.WWu v

gameObject	WWv Ä
.
WWÄ Å
GetComponents
WWÅ é
<
WWé è
Collider
WWè ó
>
WWó ò
(
WWò ô
)
WWô ö
)
WWö õ
.
WWõ ú
ToArray
WWú £
(
WW£ §
)
WW§ •
;
WW• ¶
boolXX 
	isTriggerXX 
=XX 
falseXX "
;XX" #
ifYY 
(YY 
	collidersYY 
!=YY 
nullYY !
)YY! "
	isTriggerZZ 
=ZZ 
	collidersZZ %
.ZZ% &
AnyZZ& )
(ZZ) *
xZZ* +
=>ZZ, .
xZZ/ 0
.ZZ0 1
	isTriggerZZ1 :
)ZZ: ;
;ZZ; <
RemoveColliders\\ 
(\\ 
)\\ 
;\\ 
foreach^^ 
(^^ 
Entity^^ 
obj^^ 
in^^  "
serializedObject^^# 3
.^^3 4
targetObjects^^4 A
)^^A B
{__ 

GameObject`` 
go`` 
=`` 
obj``  #
.``# $

gameObject``$ .
;``. /
switchbb 
(bb 
cbb 
)bb 
{cc 
casedd 
ColTypedd  
.dd  !
MeshColliderdd! -
:dd- .
{ee 
MeshColliderff $
colff% (
=ff) *
goff+ -
.ff- .
AddComponentff. :
<ff: ;
MeshColliderff; G
>ffG H
(ffH I
)ffI J
;ffJ K
ifhh 
(hh 
enthh 
.hh  

entityTypehh  *
==hh+ -

EntityTypehh. 8
.hh8 9
Triggerhh9 @
)hh@ A
{ii 
coljj 
.jj  
convexjj  &
=jj' (
truejj) -
;jj- .
colkk 
.kk  
	isTriggerkk  )
=kk* +
truekk, 0
;kk0 1
}ll 
elsemm 
ifmm 
(mm  !
entmm! $
.mm$ %

entityTypemm% /
==mm0 2

EntityTypemm3 =
.mm= >
Collidermm> F
)mmF G
{nn 
coloo 
.oo  
convexoo  &
=oo' (
trueoo) -
;oo- .
}pp 
elseqq 
ifqq 
(qq  !
	isTriggerqq! *
)qq* +
{rr 
colss 
.ss  
convexss  &
=ss' (
truess) -
;ss- .
coltt 
.tt  
	isTriggertt  )
=tt* +
truett, 0
;tt0 1
}uu 
breakww 
;ww 
}xx 
casezz 
ColTypezz  
.zz  !
BoxColliderzz! ,
:zz, -
{{{ 
BoxCollider|| #
col||$ '
=||( )
go||* ,
.||, -
AddComponent||- 9
<||9 :
BoxCollider||: E
>||E F
(||F G
)||G H
;||H I
if~~ 
(~~ 
ent~~ 
.~~  

entityType~~  *
==~~+ -

EntityType~~. 8
.~~8 9
Trigger~~9 @
||~~A C
	isTrigger~~D M
)~~M N
col 
.  
	isTrigger  )
=* +
true, 0
;0 1
break
ÄÄ 
;
ÄÄ 
}
ÅÅ 
case
ÉÉ 
ColType
ÉÉ  
.
ÉÉ  !
SphereCollider
ÉÉ! /
:
ÉÉ/ 0
{
ÑÑ 
SphereCollider
ÖÖ &
col
ÖÖ' *
=
ÖÖ+ ,
go
ÖÖ- /
.
ÖÖ/ 0
AddComponent
ÖÖ0 <
<
ÖÖ< =
SphereCollider
ÖÖ= K
>
ÖÖK L
(
ÖÖL M
)
ÖÖM N
;
ÖÖN O
if
ÜÜ 
(
ÜÜ 
ent
ÜÜ 
.
ÜÜ  

entityType
ÜÜ  *
==
ÜÜ+ -

EntityType
ÜÜ. 8
.
ÜÜ8 9
Trigger
ÜÜ9 @
||
ÜÜA C
	isTrigger
ÜÜD M
)
ÜÜM N
col
áá 
.
áá  
	isTrigger
áá  )
=
áá* +
true
áá, 0
;
áá0 1
break
àà 
;
àà 
}
ââ 
default
ãã 
:
ãã 
break
åå 
;
åå 
}
çç 
}
éé 
}
èè 	
private
ëë 
void
ëë 
RemoveColliders
ëë $
(
ëë$ %
)
ëë% &
{
íí 	
foreach
ìì 
(
ìì 
Entity
ìì 
obj
ìì 
in
ìì  "
serializedObject
ìì# 3
.
ìì3 4
targetObjects
ìì4 A
)
ììA B
{
îî 
foreach
ïï 
(
ïï 
Collider
ïï !
c
ïï" #
in
ïï$ &
obj
ïï' *
.
ïï* +

gameObject
ïï+ 5
.
ïï5 6
GetComponents
ïï6 C
<
ïïC D
Collider
ïïD L
>
ïïL M
(
ïïM N
)
ïïN O
)
ïïO P
DestroyImmediate
ññ $
(
ññ$ %
c
ññ% &
)
ññ& '
;
ññ' (
}
óó 
}
òò 	
}
ôô 
}öö ¡ 
ùD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Object\SubdivideObject.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
SubdivideObject  
:! "

MenuAction# -
{ 
public		 
override		 
ToolbarGroup		 $
group		% *
{

 	
get 
{ 
return 
ToolbarGroup %
.% &
Object& ,
;, -
}. /
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- G
,G H
IconSkinI Q
.Q R
ProR U
)U V
;V W
}X Y
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str "
," #
$str q
) 
; 
public 
override 
bool 
enabled $
{ 	
get   
{   
return   
base   
.   
enabled   %
&&  & (
MeshSelection  ) 6
.  6 7
selectedObjectCount  7 J
>  K L
$num  M N
;  N O
}  P Q
}!! 	
public## 
override## 
ActionResult## $
DoAction##% -
(##- .
)##. /
{$$ 	
if%% 
(%% 
MeshSelection%% 
.%% 
selectedObjectCount%% 1
<%%2 3
$num%%4 5
)%%5 6
return&& 
ActionResult&& #
.&&# $
NoSelection&&$ /
;&&/ 0
UndoUtility(( 
.(( 
RecordSelection(( '
(((' (
$str((( =
)((= >
;((> ?
int** 
success** 
=** 
$num** 
;** 
foreach,, 
(,, 
ProBuilderMesh,, #
pb,,$ &
in,,' )
MeshSelection,,* 7
.,,7 8
topInternal,,8 C
),,C D
{-- 
pb.. 
... 
ToMesh.. 
(.. 
).. 
;.. 
if00 
(00 
pb00 
.00 
	Subdivide00  
(00  !
)00! "
)00" #
success11 
++11 
;11 
else22 
Debug33 
.33 
LogError33 "
(33" #
$"33# %
Subidivision of [33% 6
{336 7
pb337 9
.339 :
name33: >
}33> ??
3] failed, complex concave objects are not supported33? r
"33r s
)33s t
;33t u
pb55 
.55 
Refresh55 
(55 
)55 
;55 
pb66 
.66 
Optimize66 
(66 
)66 
;66 
pb88 
.88 
SetSelectedVertices88 &
(88& '
new88' *
int88+ .
[88. /
$num88/ 0
]880 1
)881 2
;882 3
}99 
ProBuilderEditor;; 
.;; 
Refresh;; $
(;;$ %
);;% &
;;;& '
return== 
new== 
ActionResult== #
(==# $
ActionResult==$ 0
.==0 1
Status==1 7
.==7 8
Success==8 ?
,==? @
$str==A M
+==N O
success==P W
+==X Y
$str==Z d
)==d e
;==e f
}>> 	
}?? 
}@@ ËJ
ûD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\SubdivideEdges.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
SubdivideEdges 
:  !

MenuAction" ,
{		 
Pref

 
<

 
int

 
>

 
m_SubdivisionCount

 $
=

% &
new

' *
Pref

+ /
<

/ 0
int

0 3
>

3 4
(

4 5
$str

5 R
,

R S
$num

T U
)

U V
;

V W
Pref 
< 
int 
> 
m_SubdivisionUIMin $
=% &
new' *
Pref+ /
</ 0
int0 3
>3 4
(4 5
$str5 W
,W X
$numY Z
)Z [
;[ \
Pref 
< 
int 
> 
m_SubdivisionUIMax $
=% &
new' *
Pref+ /
</ 0
int0 3
>3 4
(4 5
$str5 W
,W X
$numY [
)[ \
;\ ]
Pref 
< 
bool 
> &
m_SubdivisionRangeExpanded -
=. /
new0 3
Pref4 8
<8 9
bool9 =
>= >
(> ?
$str? ]
,] ^
false_ d
)d e
;e f
const 
int 
m_SubdivisionMin "
=# $
$num% &
;& '
const 
int 
m_SubdivisionMax "
=# $
$num% (
;( )
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Geometry& .
;. /
}0 1
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- E
,E F
IconSkinG O
.O P
ProP S
)S T
;T U
}V W
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
	protected   
override   
bool   
hasFileMenuEntry    0
{!! 	
get"" 
{"" 
return"" 
false"" 
;"" 
}""  !
}## 	
static%% 
readonly%% 
TooltipContent%% &
	s_Tooltip%%' 0
=%%1 2
new%%3 6
TooltipContent%%7 E
(&& 
$str'' !
,''! "
$str(( K
,((K L
keyCommandAlt)) 
,)) 
$char)) "
)** 
;** 
public,, 
override,, 

SelectMode,, "
validSelectModes,,# 3
{-- 	
get.. 
{.. 
return.. 

SelectMode.. #
...# $
Edge..$ (
;..( )
}..* +
}// 	
public11 
override11 
bool11 
enabled11 $
{22 	
get33 
{33 
return33 
base33 
.33 
enabled33 %
&&33& (
MeshSelection33) 6
.336 7
selectedEdgeCount337 H
>33I J
$num33K L
;33L M
}33N O
}44 	
	protected66 
override66 
MenuActionState66 *
optionsMenuState66+ ;
{77 	
get88 
{88 
return88 
MenuActionState88 (
.88( )
VisibleAndEnabled88) :
;88: ;
}88< =
}99 	
	protected;; 
override;; 
void;; 
OnSettingsGUI;;  -
(;;- .
);;. /
{<< 	
	GUILayout== 
.== 
Label== 
(== 
$str== 5
,==5 6
EditorStyles==7 C
.==C D
	boldLabel==D M
)==M N
;==N O
	EditorGUI?? 
.?? 
BeginChangeCheck?? &
(??& '
)??' (
;??( )
EditorGUILayoutAA 
.AA 
HelpBoxAA #
(AA# $
$str	AA$ Ø
,
AAØ ∞
MessageType
AA± º
.
AAº Ω
Info
AAΩ ¡
)
AA¡ ¬
;
AA¬ √
intBB 

minUIRangeBB 
=BB 
m_SubdivisionUIMinBB /
.BB/ 0
valueBB0 5
;BB5 6
intCC 

maxUIRangeCC 
=CC 
m_SubdivisionUIMaxCC /
.CC/ 0
valueCC0 5
;CC5 6
boolDD 
expandedDD 
=DD &
m_SubdivisionRangeExpandedDD 6
.DD6 7
valueDD7 <
;DD< =
m_SubdivisionCountEE 
.EE 
valueEE $
=EE% &
(EE' (
intEE( +
)EE+ ,
UIEE, .
.EE. /
EditorGUIUtilityEE/ ?
.EE? @
FreeSliderWithRangeEE@ S
(EES T
$strEET b
,EEb c
(EEd e
intEEe h
)EEh i
m_SubdivisionCountEEi {
.EE{ |
value	EE| Å
,
EEÅ Ç
m_SubdivisionMin
EEÉ ì
,
EEì î
m_SubdivisionMax
EEï •
,
EE• ¶
ref
EEß ™

minUIRange
EE´ µ
,
EEµ ∂
ref
EE∑ ∫

maxUIRange
EEª ≈
,
EE≈ ∆
ref
EE«  
expanded
EEÀ ”
)
EE” ‘
;
EE‘ ’
m_SubdivisionUIMinFF 
.FF 
valueFF $
=FF% &

minUIRangeFF' 1
;FF1 2
m_SubdivisionUIMaxGG 
.GG 
valueGG $
=GG% &

maxUIRangeGG' 1
;GG1 2&
m_SubdivisionRangeExpandedHH &
.HH& '
valueHH' ,
=HH- .
expandedHH/ 7
;HH7 8
ifKK 
(KK 
	EditorGUIKK 
.KK 
EndChangeCheckKK (
(KK( )
)KK) *
)KK* +
ProBuilderSettingsLL "
.LL" #
SaveLL# '
(LL' (
)LL( )
;LL) *
	GUILayoutNN 
.NN 
FlexibleSpaceNN #
(NN# $
)NN$ %
;NN% &
ifPP 
(PP 
	GUILayoutPP 
.PP 
ButtonPP  
(PP  !
$strPP! 2
)PP2 3
)PP3 4
DoActionQQ 
(QQ 
)QQ 
;QQ 
}RR 	
publicTT 
overrideTT 
ActionResultTT $
DoActionTT% -
(TT- .
)TT. /
{UU 	
ifVV 
(VV 
MeshSelectionVV 
.VV 
selectedObjectCountVV 1
<VV2 3
$numVV4 5
)VV5 6
returnWW 
ActionResultWW #
.WW# $
NoSelectionWW$ /
;WW/ 0
intYY 
subdivisionsYY 
=YY 
m_SubdivisionCountYY 1
;YY1 2
UndoUtility[[ 
.[[ 
RecordSelection[[ '
([[' (
$str[[( 9
)[[9 :
;[[: ;
ActionResult]] 
result]] 
=]]  !
ActionResult]]" .
.]]. /
NoSelection]]/ :
;]]: ;
foreach__ 
(__ 
ProBuilderMesh__ #
pb__$ &
in__' )
MeshSelection__* 7
.__7 8
topInternal__8 C
)__C D
{`` 
Listaa 
<aa 
Edgeaa 
>aa 
newEdgeSelectionaa +
=aa, -
AppendElementsaa. <
.aa< = 
AppendVerticesToEdgeaa= Q
(aaQ R
pbaaR T
,aaT U
pbaaV X
.aaX Y
selectedEdgesaaY f
,aaf g
subdivisionsaah t
)aat u
;aau v
ifcc 
(cc 
newEdgeSelectioncc $
!=cc% '
nullcc( ,
)cc, -
{dd 
pbee 
.ee 
SetSelectedEdgesee '
(ee' (
newEdgeSelectionee( 8
)ee8 9
;ee9 :
pbff 
.ff 
ToMeshff 
(ff 
)ff 
;ff  
pbgg 
.gg 
Refreshgg 
(gg 
)gg  
;gg  !
pbhh 
.hh 
Optimizehh 
(hh  
)hh  !
;hh! "
resultii 
=ii 
newii  
ActionResultii! -
(ii- .
ActionResultii. :
.ii: ;
Statusii; A
.iiA B
SuccessiiB I
,iiI J
$striiK [
)ii[ \
;ii\ ]
}jj 
elsekk 
{ll 
resultmm 
=mm 
newmm  
ActionResultmm! -
(mm- .
ActionResultmm. :
.mm: ;
Statusmm; A
.mmA B
FailuremmB I
,mmI J
$strmmK b
)mmb c
;mmc d
}nn 
}oo 
ProBuilderEditorqq 
.qq 
Refreshqq $
(qq$ %
)qq% &
;qq& '
returnss 
resultss 
;ss 
}tt 	
}uu 
}vv ´¶
öD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\VertexPositionEditor.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
{

 
sealed 

class  
VertexPositionEditor %
:& '
ConfigurableWindow( :
{ 
const 
int #
k_MaxSelectableVertices )
=* +
$num, /
;/ 0

Dictionary 
< 
ProBuilderMesh !
,! "!
VertexEditorSelection# 8
>8 9
m_Selection: E
=F G
newH K

DictionaryL V
<V W
ProBuilderMeshW e
,e f!
VertexEditorSelectiong |
>| }
(} ~
)~ 
;	 Ä
static 
Color 
s_EvenColor  
;  !
static 
Color 

s_OddColor 
;  
Vector2 
m_Scroll 
= 
Vector2 "
." #
zero# '
;' (
bool 

m_IsActive 
; 
public 
bool 
m_WorldSpace  
=! "
true# '
;' (
class !
VertexEditorSelection #
{ 	
public 
bool 
	isVisible !
;! "
public 
IEnumerable 
< 
int "
>" #
common$ *
;* +
public !
VertexEditorSelection (
(( )
ProBuilderMesh) 7
mesh8 <
,< =
bool> B
visibleC J
,J K
IEnumerableL W
<W X
intX [
>[ \
indexes] d
)d e
{ 
	isVisible   
=   
visible   #
;  # $
common!! 
=!! 
mesh!! 
.!! "
GetSharedVertexHandles!! 4
(!!4 5
indexes!!5 <
)!!< =
;!!= >
}"" 
}## 	
public%% 
static%% 
void%%  
MenuOpenVertexEditor%% /
(%%/ 0
)%%0 1
{&& 	
EditorWindow'' 
.'' 
	GetWindow'' "
<''" # 
VertexPositionEditor''# 7
>''7 8
(''8 9
true''9 =
,''= >
$str''? Q
,''Q R
true''S W
)''W X
;''X Y
}(( 	
void** 
OnEnable** 
(** 
)** 
{++ 	
s_EvenColor,, 
=,, 
EditorGUIUtility,, *
.,,* +
	isProSkin,,+ 4
?,,5 6
new,,7 :
Color,,; @
(,,@ A
$num,,A E
,,,E F
$num,,G K
,,,K L
$num,,M Q
,,,Q R
$num,,S U
),,U V
:,,W X
new,,Y \
Color,,] b
(,,b c
$num,,c g
,,,g h
$num,,i m
,,,m n
$num,,o s
,,,s t
$num,,u w
),,w x
;,,x y

s_OddColor-- 
=-- 
EditorGUIUtility-- )
.--) *
	isProSkin--* 3
?--4 5
new--6 9
Color--: ?
(--? @
$num--@ D
,--D E
$num--F J
,--J K
$num--L P
,--P Q
$num--R T
)--T U
:--V W
new--X [
Color--\ a
(--a b
$num--b f
,--f g
$num--h l
,--l m
$num--n r
,--r s
$num--t v
)--v w
;--w x
ProBuilderEditor// 
.// 
selectionUpdated// -
+=//. 0
OnSelectionUpdate//1 B
;//B C
	SceneView11 
.11 
duringSceneGui11 $
+=11% '

OnSceneGUI11( 2
;112 3
if66 
(66 
ProBuilderEditor66  
.66  !
instance66! )
!=66* ,
null66- 1
)661 2
OnSelectionUpdate77 !
(77! "
ProBuilderEditor77" 2
.772 3
instance773 ;
.77; <
	selection77< E
)77E F
;77F G
}88 	
void:: 
	OnDisable:: 
(:: 
):: 
{;; 	
ProBuilderEditor<< 
.<< 
selectionUpdated<< -
-=<<. 0
OnSelectionUpdate<<1 B
;<<B C
	SceneView>> 
.>> 
duringSceneGui>> $
-=>>% '

OnSceneGUI>>( 2
;>>2 3
}BB 	
voidDD 
OnSelectionUpdateDD 
(DD 
IEnumerableDD *
<DD* +
ProBuilderMeshDD+ 9
>DD9 :
newSelectionDD; G
)DDG H
{EE 	
ifFF 
(FF 
newSelectionFF 
==FF 
nullFF  $
)FF$ %
{GG 
ifHH 
(HH 
m_SelectionHH 
!=HH  "
nullHH# '
)HH' (
m_SelectionII 
.II  
ClearII  %
(II% &
)II& '
;II' (
returnKK 
;KK 
}LL 
varNN 
resNN 
=NN 
newNN 

DictionaryNN $
<NN$ %
ProBuilderMeshNN% 3
,NN3 4!
VertexEditorSelectionNN5 J
>NNJ K
(NNK L
)NNL M
;NNM N
foreachPP 
(PP 
varPP 
meshPP 
inPP  
newSelectionPP! -
)PP- .
{QQ !
VertexEditorSelectionRR %
selRR& )
;RR) *
ifTT 
(TT 
m_SelectionTT 
.TT  
TryGetValueTT  +
(TT+ ,
meshTT, 0
,TT0 1
outTT2 5
selTT6 9
)TT9 :
)TT: ;
{UU 
selVV 
.VV 
commonVV 
=VV  
meshVV! %
.VV% &"
GetSharedVertexHandlesVV& <
(VV< =
meshVV= A
.VVA B#
selectedIndexesInternalVVB Y
)VVY Z
;VVZ [
resWW 
.WW 
AddWW 
(WW 
meshWW  
,WW  !
selWW" %
)WW% &
;WW& '
}XX 
elseYY 
{ZZ 
res[[ 
.[[ 
Add[[ 
([[ 
mesh[[  
,[[  !
new[[" %!
VertexEditorSelection[[& ;
([[; <
mesh[[< @
,[[@ A
true[[B F
,[[F G
mesh[[H L
.[[L M#
selectedIndexesInternal[[M d
)[[d e
)[[e f
;[[f g
}\\ 
}]] 
m_Selection__ 
=__ 
res__ 
;__ 
thisaa 
.aa 
Repaintaa 
(aa 
)aa 
;aa 
}bb 	
voiddd !
OnVertexMovementBegindd "
(dd" #
ProBuilderMeshdd# 1
pbdd2 4
)dd4 5
{ee 	

m_IsActiveff 
=ff 
trueff 
;ff 
pbgg 
.gg 
ToMeshgg 
(gg 
)gg 
;gg 
pbhh 
.hh 
Refreshhh 
(hh 
)hh 
;hh 
}ii 	
voidkk "
OnVertexMovementFinishkk #
(kk# $
)kk$ %
{ll 	

m_IsActivemm 
=mm 
falsemm 
;mm 
foreachoo 
(oo 
varoo 
kvpoo 
inoo 
m_Selectionoo  +
)oo+ ,
{pp 
kvpqq 
.qq 
Keyqq 
.qq 
ToMeshqq 
(qq 
)qq  
;qq  !
kvprr 
.rr 
Keyrr 
.rr 
Refreshrr 
(rr  
)rr  !
;rr! "
kvpss 
.ss 
Keyss 
.ss 
Optimizess  
(ss  !
)ss! "
;ss" #
}tt 
}uu 	
voidww 
OnGUIww 
(ww 
)ww 
{xx 	
DoContextMenuyy 
(yy 
)yy 
;yy 
	GUILayout{{ 
.{{ 
BeginHorizontal{{ %
({{% &
EditorStyles{{& 2
.{{2 3
toolbar{{3 :
){{: ;
;{{; <
	GUILayout}} 
.}} 
FlexibleSpace}} #
(}}# $
)}}$ %
;}}% &
GUIStyle 
style 
= 
m_WorldSpace )
?* +
EditorStyles, 8
.8 9
toolbarButton9 F
:G H
UII K
.K L
EditorGUIUtilityL \
.\ ]

GetOnStyle] g
(g h
EditorStylesh t
.t u
toolbarButton	u Ç
)
Ç É
;
É Ñ
if
ÅÅ 
(
ÅÅ 
	GUILayout
ÅÅ 
.
ÅÅ 
Button
ÅÅ  
(
ÅÅ  !
m_WorldSpace
ÅÅ! -
?
ÅÅ. /
$str
ÅÅ0 =
:
ÅÅ> ?
$str
ÅÅ@ M
,
ÅÅM N
style
ÅÅO T
)
ÅÅT U
)
ÅÅU V
m_WorldSpace
ÇÇ 
=
ÇÇ 
!
ÇÇ  
m_WorldSpace
ÇÇ  ,
;
ÇÇ, -
	GUILayout
ÑÑ 
.
ÑÑ 
EndHorizontal
ÑÑ #
(
ÑÑ# $
)
ÑÑ$ %
;
ÑÑ% &
if
ÜÜ 
(
ÜÜ 
m_Selection
ÜÜ 
==
ÜÜ 
null
ÜÜ #
||
ÜÜ$ &
m_Selection
ÜÜ' 2
.
ÜÜ2 3
Count
ÜÜ3 8
<
ÜÜ9 :
$num
ÜÜ; <
||
ÜÜ= ?
!
ÜÜ@ A
m_Selection
ÜÜA L
.
ÜÜL M
Any
ÜÜM P
(
ÜÜP Q
x
ÜÜQ R
=>
ÜÜS U
x
ÜÜV W
.
ÜÜW X
Key
ÜÜX [
.
ÜÜ[ \!
selectedVertexCount
ÜÜ\ o
>
ÜÜp q
$num
ÜÜr s
)
ÜÜs t
)
ÜÜt u
{
áá 
	GUILayout
àà 
.
àà 
FlexibleSpace
àà '
(
àà' (
)
àà( )
;
àà) *
	GUILayout
ââ 
.
ââ 
Label
ââ 
(
ââ  
$str
ââ  :
,
ââ: ;
UI
ââ< >
.
ââ> ?
EditorGUIUtility
ââ? O
.
ââO P#
CenteredGreyMiniLabel
ââP e
)
ââe f
;
ââf g
	GUILayout
ää 
.
ää 
FlexibleSpace
ää '
(
ää' (
)
ää( )
;
ää) *
return
ãã 
;
ãã 
}
åå 
Event
éé 
e
éé 
=
éé 
Event
éé 
.
éé 
current
éé #
;
éé# $
if
êê 
(
êê 

m_IsActive
êê 
)
êê 
{
ëë 
if
íí 
(
íí 
e
íí 
.
íí 
type
íí 
==
íí 
	EventType
íí '
.
íí' (
Ignore
íí( .
||
íí/ 1
e
ìì 
.
ìì 
type
ìì 
==
ìì 
	EventType
ìì '
.
ìì' (
MouseUp
ìì( /
)
ìì/ 0$
OnVertexMovementFinish
îî *
(
îî* +
)
îî+ ,
;
îî, -
}
ïï 
m_Scroll
óó 
=
óó 
EditorGUILayout
óó &
.
óó& '
BeginScrollView
óó' 6
(
óó6 7
m_Scroll
óó7 ?
)
óó? @
;
óó@ A
foreach
ôô 
(
ôô 
var
ôô 
kvp
ôô 
in
ôô 
m_Selection
ôô  +
)
ôô+ ,
{
öö 
ProBuilderMesh
õõ 
mesh
õõ #
=
õõ$ %
kvp
õõ& )
.
õõ) *
Key
õõ* -
;
õõ- .#
VertexEditorSelection
úú %
sel
úú& )
=
úú* +
kvp
úú, /
.
úú/ 0
Value
úú0 5
;
úú5 6
bool
ûû 
open
ûû 
=
ûû 
sel
ûû 
.
ûû  
	isVisible
ûû  )
;
ûû) *
	EditorGUI
†† 
.
†† 
BeginChangeCheck
†† *
(
††* +
)
††+ ,
;
††, -
open
°° 
=
°° 
EditorGUILayout
°° &
.
°°& '
Foldout
°°' .
(
°°. /
open
°°/ 3
,
°°3 4
mesh
°°5 9
.
°°9 :
name
°°: >
)
°°> ?
;
°°? @
if
¢¢ 
(
¢¢ 
	EditorGUI
¢¢ 
.
¢¢ 
EndChangeCheck
¢¢ ,
(
¢¢, -
)
¢¢- .
)
¢¢. /
sel
££ 
.
££ 
	isVisible
££ !
=
££" #
open
££$ (
;
££( )
if
•• 
(
•• 
open
•• 
)
•• 
{
¶¶ 
int
ßß 
index
ßß 
=
ßß 
$num
ßß  !
;
ßß! "
bool
©© 
wasWideMode
©© $
=
©©% &
EditorGUIUtility
©©' 7
.
©©7 8
wideMode
©©8 @
;
©©@ A
EditorGUIUtility
™™ $
.
™™$ %
wideMode
™™% -
=
™™. /
true
™™0 4
;
™™4 5
Color
´´ 

background
´´ $
=
´´% &
GUI
´´' *
.
´´* +
backgroundColor
´´+ :
;
´´: ;
	Transform
¨¨ 
	transform
¨¨ '
=
¨¨( )
mesh
¨¨* .
.
¨¨. /
	transform
¨¨/ 8
;
¨¨8 9
foreach
ÆÆ 
(
ÆÆ 
int
ÆÆ  
u
ÆÆ! "
in
ÆÆ# %
sel
ÆÆ& )
.
ÆÆ) *
common
ÆÆ* 0
)
ÆÆ0 1
{
ØØ 
GUI
∞∞ 
.
∞∞ 
backgroundColor
∞∞ +
=
∞∞, -
index
∞∞. 3
%
∞∞4 5
$num
∞∞6 7
==
∞∞8 :
$num
∞∞; <
?
∞∞= >
s_EvenColor
∞∞? J
:
∞∞K L

s_OddColor
∞∞M W
;
∞∞W X
	GUILayout
±± !
.
±±! "
BeginHorizontal
±±" 1
(
±±1 2
UI
±±2 4
.
±±4 5
EditorGUIUtility
±±5 E
.
±±E F"
solidBackgroundStyle
±±F Z
)
±±Z [
;
±±[ \
GUI
≤≤ 
.
≤≤ 
backgroundColor
≤≤ +
=
≤≤, -

background
≤≤. 8
;
≤≤8 9
	GUILayout
¥¥ !
.
¥¥! "
Label
¥¥" '
(
¥¥' (
u
¥¥( )
.
¥¥) *
ToString
¥¥* 2
(
¥¥2 3
)
¥¥3 4
,
¥¥4 5
	GUILayout
¥¥6 ?
.
¥¥? @
MinWidth
¥¥@ H
(
¥¥H I
$num
¥¥I K
)
¥¥K L
,
¥¥L M
	GUILayout
¥¥N W
.
¥¥W X
MaxWidth
¥¥X `
(
¥¥` a
$num
¥¥a c
)
¥¥c d
)
¥¥d e
;
¥¥e f
Vector3
∂∂ 
v
∂∂  !
=
∂∂" #
mesh
∂∂$ (
.
∂∂( )
positionsInternal
∂∂) :
[
∂∂: ;
mesh
∂∂; ?
.
∂∂? @$
sharedVerticesInternal
∂∂@ V
[
∂∂V W
u
∂∂W X
]
∂∂X Y
[
∂∂Y Z
$num
∂∂Z [
]
∂∂[ \
]
∂∂\ ]
;
∂∂] ^
if
∏∏ 
(
∏∏ 
m_WorldSpace
∏∏ (
)
∏∏( )
v
∏∏* +
=
∏∏, -
	transform
∏∏. 7
.
∏∏7 8
TransformPoint
∏∏8 F
(
∏∏F G
v
∏∏G H
)
∏∏H I
;
∏∏I J
	EditorGUI
∫∫ !
.
∫∫! "
BeginChangeCheck
∫∫" 2
(
∫∫2 3
)
∫∫3 4
;
∫∫4 5
v
ºº 
=
ºº 
EditorGUILayout
ºº +
.
ºº+ ,
Vector3Field
ºº, 8
(
ºº8 9
$str
ºº9 ;
,
ºº; <
v
ºº= >
)
ºº> ?
;
ºº? @
if
ææ 
(
ææ 
	EditorGUI
ææ %
.
ææ% &
EndChangeCheck
ææ& 4
(
ææ4 5
)
ææ5 6
)
ææ6 7
{
øø 
if
¿¿ 
(
¿¿  
!
¿¿  !

m_IsActive
¿¿! +
)
¿¿+ ,#
OnVertexMovementBegin
¡¡  5
(
¡¡5 6
mesh
¡¡6 :
)
¡¡: ;
;
¡¡; <
UndoUtility
√√ '
.
√√' (
RecordObject
√√( 4
(
√√4 5
mesh
√√5 9
,
√√9 :
$str
√√; O
)
√√O P
;
√√P Q
mesh
≈≈  
.
≈≈  !%
SetSharedVertexPosition
≈≈! 8
(
≈≈8 9
u
≈≈9 :
,
≈≈: ;
m_WorldSpace
≈≈< H
?
≈≈I J
	transform
≈≈K T
.
≈≈T U#
InverseTransformPoint
≈≈U j
(
≈≈j k
v
≈≈k l
)
≈≈l m
:
≈≈n o
v
≈≈p q
)
≈≈q r
;
≈≈r s
if
«« 
(
««  
ProBuilderEditor
««  0
.
««0 1
instance
««1 9
!=
««: <
null
««= A
)
««A B
{
»» 
mesh
……  $
.
……$ %
	RefreshUV
……% .
(
……. /
MeshSelection
……/ <
.
……< =%
selectedFacesInEditZone
……= T
[
……T U
mesh
……U Y
]
……Y Z
)
……Z [
;
……[ \
mesh
    $
.
  $ %
Refresh
  % ,
(
  , -
RefreshMask
  - 8
.
  8 9
Normals
  9 @
)
  @ A
;
  A B
mesh
ÀÀ  $
.
ÀÀ$ %
mesh
ÀÀ% )
.
ÀÀ) *
RecalculateBounds
ÀÀ* ;
(
ÀÀ; <
)
ÀÀ< =
;
ÀÀ= >
ProBuilderEditor
ÃÃ  0
.
ÃÃ0 1
Refresh
ÃÃ1 8
(
ÃÃ8 9
)
ÃÃ9 :
;
ÃÃ: ;
}
ÕÕ 
}
ŒŒ 
index
œœ 
++
œœ 
;
œœ  
	GUILayout
–– !
.
––! "
EndHorizontal
––" /
(
––/ 0
)
––0 1
;
––1 2
}
—— 
GUI
”” 
.
”” 
backgroundColor
”” '
=
””( )

background
””* 4
;
””4 5
EditorGUIUtility
‘‘ $
.
‘‘$ %
wideMode
‘‘% -
=
‘‘. /
wasWideMode
‘‘0 ;
;
‘‘; <
}
’’ 
}
÷÷ 
EditorGUILayout
ÿÿ 
.
ÿÿ 
EndScrollView
ÿÿ )
(
ÿÿ) *
)
ÿÿ* +
;
ÿÿ+ ,
}
ŸŸ 	
void
€€ 

OnSceneGUI
€€ 
(
€€ 
	SceneView
€€ !
	sceneView
€€" +
)
€€+ ,
{
‹‹ 	
if
›› 
(
›› 
m_Selection
›› 
==
›› 
null
›› #
)
››# $
return
ﬁﬁ 
;
ﬁﬁ 
int
‡‡ 

labelCount
‡‡ 
=
‡‡ 
$num
‡‡ 
;
‡‡ 
Handles
‚‚ 
.
‚‚ 
BeginGUI
‚‚ 
(
‚‚ 
)
‚‚ 
;
‚‚ 
foreach
ÂÂ 
(
ÂÂ 
KeyValuePair
ÂÂ !
<
ÂÂ! "
ProBuilderMesh
ÂÂ" 0
,
ÂÂ0 1#
VertexEditorSelection
ÂÂ2 G
>
ÂÂG H
selected
ÂÂI Q
in
ÂÂR T
m_Selection
ÂÂU `
)
ÂÂ` a
{
ÊÊ 
ProBuilderMesh
ÁÁ 
mesh
ÁÁ #
=
ÁÁ$ %
selected
ÁÁ& .
.
ÁÁ. /
Key
ÁÁ/ 2
;
ÁÁ2 3#
VertexEditorSelection
ËË %
sel
ËË& )
=
ËË* +
selected
ËË, 4
.
ËË4 5
Value
ËË5 :
;
ËË: ;
if
ÍÍ 
(
ÍÍ 
!
ÍÍ 
sel
ÍÍ 
.
ÍÍ 
	isVisible
ÍÍ "
)
ÍÍ" #
continue
ÎÎ 
;
ÎÎ 
Vector3
ÌÌ 
[
ÌÌ 
]
ÌÌ 
	positions
ÌÌ #
=
ÌÌ$ %
mesh
ÌÌ& *
.
ÌÌ* +
positionsInternal
ÌÌ+ <
;
ÌÌ< =
foreach
ÔÔ 
(
ÔÔ 
int
ÔÔ 
i
ÔÔ 
in
ÔÔ !
sel
ÔÔ" %
.
ÔÔ% &
common
ÔÔ& ,
)
ÔÔ, -
{
 
var
ÒÒ 
indexes
ÒÒ 
=
ÒÒ  !
mesh
ÒÒ" &
.
ÒÒ& '$
sharedVerticesInternal
ÒÒ' =
[
ÒÒ= >
i
ÒÒ> ?
]
ÒÒ? @
;
ÒÒ@ A
Vector3
ÛÛ 
point
ÛÛ !
=
ÛÛ" #
mesh
ÛÛ$ (
.
ÛÛ( )
	transform
ÛÛ) 2
.
ÛÛ2 3
TransformPoint
ÛÛ3 A
(
ÛÛA B
	positions
ÛÛB K
[
ÛÛK L
indexes
ÛÛL S
[
ÛÛS T
$num
ÛÛT U
]
ÛÛU V
]
ÛÛV W
)
ÛÛW X
;
ÛÛX Y
Vector2
ıı 
cen
ıı 
=
ıı  !
HandleUtility
ıı" /
.
ıı/ 0
WorldToGUIPoint
ıı0 ?
(
ıı? @
point
ıı@ E
)
ııE F
;
ııF G
UI
˜˜ 
.
˜˜ 
EditorGUIUtility
˜˜ '
.
˜˜' (

SceneLabel
˜˜( 2
(
˜˜2 3
i
˜˜3 4
.
˜˜4 5
ToString
˜˜5 =
(
˜˜= >
)
˜˜> ?
,
˜˜? @
cen
˜˜A D
)
˜˜D E
;
˜˜E F
if
˘˘ 
(
˘˘ 
++
˘˘ 

labelCount
˘˘ $
>
˘˘% &%
k_MaxSelectableVertices
˘˘' >
)
˘˘> ?
break
˘˘@ E
;
˘˘E F
}
˙˙ 
}
˚˚ 
Handles
¸¸ 
.
¸¸ 
EndGUI
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
}
˝˝ 	
}
˛˛ 
}ˇˇ ó5
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\ScriptingSymbolManager.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
static 

class "
ScriptingSymbolManager '
{ 
static 
bool 

IsObsolete 
( 
BuildTargetGroup /
group0 5
)5 6
{ 	
var		 
attrs		 
=		 
typeof		 
(		 
BuildTargetGroup		 /
)		/ 0
.		0 1
GetField		1 9
(		9 :
group		: ?
.		? @
ToString		@ H
(		H I
)		I J
)		J K
.		K L
GetCustomAttributes		L _
(		_ `
typeof		` f
(		f g
ObsoleteAttribute		g x
)		x y
,		y z
false			{ Ä
)
		Ä Å
;
		Å Ç
return

 
attrs

 
.

 
Length

 
>

  !
$num

" #
;

# $
} 	
internal 
static 
bool 
ContainsDefine +
(+ ,
string, 2
define3 9
)9 :
{ 	
foreach 
( 
BuildTargetGroup %
targetGroup& 1
in2 4
System5 ;
.; <
Enum< @
.@ A
	GetValuesA J
(J K
typeofK Q
(Q R
BuildTargetGroupR b
)b c
)c d
)d e
{ 
if 
( 
targetGroup 
==  "
BuildTargetGroup# 3
.3 4
Unknown4 ;
||< >

IsObsolete? I
(I J
targetGroupJ U
)U V
)V W
continue 
; 
string 
defineSymbols $
=% &
PlayerSettings' 5
.5 6-
!GetScriptingDefineSymbolsForGroup6 W
(W X
targetGroupX c
)c d
;d e
if 
( 
! 
defineSymbols "
." #
Contains# +
(+ ,
define, 2
)2 3
)3 4
return 
false  
;  !
} 
return 
true 
; 
} 	
public!! 
static!! 
void!! 
AddScriptingDefine!! -
(!!- .
string!!. 4
define!!5 ;
)!!; <
{"" 	
foreach## 
(## 
BuildTargetGroup## %
targetGroup##& 1
in##2 4
System##5 ;
.##; <
Enum##< @
.##@ A
	GetValues##A J
(##J K
typeof##K Q
(##Q R
BuildTargetGroup##R b
)##b c
)##c d
)##d e
{$$ 
if%% 
(%% 
targetGroup%% 
==%%  "
BuildTargetGroup%%# 3
.%%3 4
Unknown%%4 ;
||%%< >

IsObsolete%%? I
(%%I J
targetGroup%%J U
)%%U V
)%%V W
continue&& 
;&& 
string(( 
defineSymbols(( $
=((% &
PlayerSettings((' 5
.((5 6-
!GetScriptingDefineSymbolsForGroup((6 W
(((W X
targetGroup((X c
)((c d
;((d e
if** 
(** 
!** 
defineSymbols** "
.**" #
Contains**# +
(**+ ,
define**, 2
)**2 3
)**3 4
{++ 
if,, 
(,, 
defineSymbols,, %
.,,% &
Length,,& ,
<,,- .
$num,,/ 0
),,0 1
defineSymbols-- %
=--& '
define--( .
;--. /
else.. 
if.. 
(.. 
defineSymbols.. *
...* +
EndsWith..+ 3
(..3 4
$str..4 7
)..7 8
)..8 9
defineSymbols// %
=//& '
string//( .
.//. /
Format/// 5
(//5 6
$str//6 >
,//> ?
defineSymbols//@ M
,//M N
define//O U
)//U V
;//V W
else00 
defineSymbols11 %
=11& '
string11( .
.11. /
Format11/ 5
(115 6
$str116 ?
,11? @
defineSymbols11A N
,11N O
define11P V
)11V W
;11W X
PlayerSettings33 "
.33" #-
!SetScriptingDefineSymbolsForGroup33# D
(33D E
targetGroup33E P
,33P Q
defineSymbols33R _
)33_ `
;33` a
}44 
}55 
}66 	
public<< 
static<< 
void<< !
RemoveScriptingDefine<< 0
(<<0 1
string<<1 7
define<<8 >
)<<> ?
{== 	
foreach>> 
(>> 
BuildTargetGroup>> %
targetGroup>>& 1
in>>2 4
System>>5 ;
.>>; <
Enum>>< @
.>>@ A
	GetValues>>A J
(>>J K
typeof>>K Q
(>>Q R
BuildTargetGroup>>R b
)>>b c
)>>c d
)>>d e
{?? 
if@@ 
(@@ 
targetGroup@@ 
==@@  "
BuildTargetGroup@@# 3
.@@3 4
Unknown@@4 ;
||@@< >

IsObsolete@@? I
(@@I J
targetGroup@@J U
)@@U V
)@@V W
continueAA 
;AA 
stringCC 
defineSymbolsCC $
=CC% &
PlayerSettingsCC' 5
.CC5 6-
!GetScriptingDefineSymbolsForGroupCC6 W
(CCW X
targetGroupCCX c
)CCc d
;CCd e
ifEE 
(EE 
defineSymbolsEE !
.EE! "
ContainsEE" *
(EE* +
defineEE+ 1
)EE1 2
)EE2 3
{FF 
defineSymbolsGG !
=GG" #
defineSymbolsGG$ 1
.GG1 2
ReplaceGG2 9
(GG9 :
stringGG: @
.GG@ A
FormatGGA G
(GGG H
$strGGH N
,GGN O
defineGGP V
)GGV W
,GGW X
$strGGY [
)GG[ \
;GG\ ]
defineSymbolsHH !
=HH" #
defineSymbolsHH$ 1
.HH1 2
ReplaceHH2 9
(HH9 :
defineHH: @
,HH@ A
$strHHB D
)HHD E
;HHE F
PlayerSettingsJJ "
.JJ" #-
!SetScriptingDefineSymbolsForGroupJJ# D
(JJD E
targetGroupJJE P
,JJP Q
defineSymbolsJJR _
)JJ_ `
;JJ` a
}KK 
}LL 
}MM 	
}NN 
}OO ¨
óD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\HierarchyListener.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
[

 
InitializeOnLoad

 
]

 
static 

class 
HierarchyListener "
{ 
static 
HierarchyListener  
(  !
)! "
{ 	
EditorUtility 
. 
SetGizmoIconEnabled -
(- .
typeof. 4
(4 5
ProBuilderMesh5 C
)C D
,D E
falseF K
)K L
;L M
EditorApplication 
. 
hierarchyChanged .
+=/ 1"
HierarchyWindowChanged2 H
;H I
PrefabUtility!! 
.!! !
prefabInstanceUpdated!! /
+=!!0 2!
PrefabInstanceUpdated!!3 H
;!!H I
}"" 	
static$$ 
void$$ !
PrefabInstanceUpdated$$ )
($$) *

GameObject$$* 4
go$$5 7
)$$7 8
{%% 	
if&& 
(&& 
EditorApplication&& !
.&&! ")
isPlayingOrWillChangePlaymode&&" ?
)&&? @
return'' 
;'' 
foreach)) 
()) 
ProBuilderMesh)) #
pb))$ &
in))' )
go))* ,
.)), -#
GetComponentsInChildren))- D
<))D E
ProBuilderMesh))E S
>))S T
())T U
)))U V
)))V W
{** 
EditorUtility++ 
.++ %
SynchronizeWithMeshFilter++ 7
(++7 8
pb++8 :
)++: ;
;++; <
pb,, 
.,, 
ToMesh,, 
(,, 
),, 
;,, 
pb-- 
.-- 
Refresh-- 
(-- 
)-- 
;-- 
pb.. 
... 
Optimize.. 
(.. 
).. 
;.. 
}// 
}00 	
static88 
void88 "
HierarchyWindowChanged88 *
(88* +
)88+ ,
{99 	
if:: 
(:: 
!:: 
EditorApplication:: "
.::" #
	isPlaying::# ,
)::, -
{;; 
bool<< 
meshesAreAssets<< $
=<<% &
Experimental<<' 3
.<<3 4
meshesAreAssets<<4 C
;<<C D
foreach?? 
(?? 
ProBuilderMesh?? '
pb??( *
in??+ -
	Selection??. 7
.??7 8

transforms??8 B
.??B C
GetComponents??C P
<??P Q
ProBuilderMesh??Q _
>??_ `
(??` a
)??a b
)??b c
{@@ 
ifAA 
(AA 
!AA 
meshesAreAssetsAA (
)AA( )
EditorUtilityBB %
.BB% &%
SynchronizeWithMeshFilterBB& ?
(BB? @
pbBB@ B
)BBB C
;BBC D
}CC 
}DD 
ProBuilderEditorFF 
.FF 
RefreshFF $
(FF$ %
)FF% &
;FF& '
}GG 	
}HH 
}II Öƒ
ïD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\EditorGUILayout.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
UI! #
{ 
static 

class 
EditorGUILayout  
{ 
static&& 
bool&& 
s_RowToggle&& 
=&&  !
true&&" &
;&&& '
static'' 
readonly'' 
Color'' 
s_RowOddColor'' +
='', -
new''. 1
Color''2 7
(''7 8
$num''8 <
,''< =
$num''> B
,''B C
$num''D H
,''H I
$num''J M
)''M N
;''N O
static(( 
readonly(( 
Color(( 
s_RowEvenColor(( ,
=((- .
new((/ 2
Color((3 8
(((8 9
$num((9 =
,((= >
$num((? C
,((C D
$num((E I
,((I J
$num((K N
)((N O
;((O P
public** 
static** 
void** 
BeginRow** #
(**# $
int**$ '
index**( -
=**. /
-**0 1
$num**1 2
)**2 3
{++ 	
if,, 
(,, 
index,, 
>,, 
-,, 
$num,, 
),, 
s_RowToggle-- 
=-- 
index-- #
%--$ %
$num--& '
==--( *
$num--+ ,
;--, -
EditorGUIUtility// 
.// 
PushBackgroundColor// 0
(//0 1
s_RowToggle//1 <
?//= >
s_RowEvenColor//? M
://N O
s_RowOddColor//P ]
)//] ^
;//^ _
	GUILayout00 
.00 
BeginHorizontal00 %
(00% &
EditorStyles00& 2
.002 3
rowStyle003 ;
)00; <
;00< =
s_RowToggle11 
=11 
!11 
s_RowToggle11 &
;11& '
EditorGUIUtility22 
.22 
PopBackgroundColor22 /
(22/ 0
)220 1
;221 2
}33 	
public55 
static55 
void55 
EndRow55 !
(55! "
)55" #
{66 	
	GUILayout77 
.77 
EndHorizontal77 #
(77# $
)77$ %
;77% &
}88 	
publicCC 
staticCC 
intCC 
ToolbarCC !
(CC! "
intCC" %
indexCC& +
,CC+ ,

GUIContentCC- 7
[CC7 8
]CC8 9
contentCC: A
,CCA B
GUIStyleCCC K
styleCCL Q
,CCQ R
boolCCS W
allowNoSelectionCCX h
=CCi j
falseCCk p
,CCp q
paramsCCr x
GUILayoutOption	CCy à
[
CCà â
]
CCâ ä

addlParams
CCã ï
)
CCï ñ
{DD 	
returnEE 
ToolbarEE 
(EE 
indexEE  
,EE  !
contentEE" )
,EE) *
styleEE+ 0
,EE0 1
styleEE2 7
,EE7 8
styleEE9 >
,EE> ?
allowNoSelectionEE@ P
,EEP Q

addlParamsEER \
)EE\ ]
;EE] ^
}FF 	
publicHH 
staticHH 
intHH 
ToolbarHH !
(HH! "
intHH" %
indexHH& +
,HH+ ,

GUIContentHH- 7
[HH7 8
]HH8 9
contentHH: A
,HHA B
GUIStyleHHC K
leftHHL P
,HHP Q
GUIStyleHHR Z
midHH[ ^
,HH^ _
GUIStyleHH` h
rightHHi n
,HHn o
boolHHp t
allowNoSelection	HHu Ö
=
HHÜ á
false
HHà ç
,
HHç é
params
HHè ï
GUILayoutOption
HHñ •
[
HH• ¶
]
HH¶ ß

addlParams
HH® ≤
)
HH≤ ≥
{II 	
	GUILayoutJJ 
.JJ 
BeginHorizontalJJ %
(JJ% &
)JJ& '
;JJ' (
forLL 
(LL 
intLL 
iLL 
=LL 
$numLL 
;LL 
iLL 
<LL 
contentLL  '
.LL' (
LengthLL( .
;LL. /
iLL0 1
++LL1 3
)LL3 4
{MM 
GUIStyleNN 
m_StyleNN  
=NN! "
iNN# $
<NN% &
$numNN' (
?NN) *
leftNN+ /
:NN0 1
(NN2 3
iNN3 4
>=NN5 7
contentNN8 ?
.NN? @
LengthNN@ F
-NNG H
$numNNI J
?NNK L
rightNNM R
:NNS T
midNNU X
)NNX Y
;NNY Z
ifPP 
(PP 
indexPP 
==PP 
iPP 
)PP 
m_StyleQQ 
=QQ 
EditorGUIUtilityQQ .
.QQ. /

GetOnStyleQQ/ 9
(QQ9 :
m_StyleQQ: A
)QQA B
;QQB C
ifSS 
(SS 
	GUILayoutSS 
.SS 
ButtonSS $
(SS$ %
contentSS% ,
[SS, -
iSS- .
]SS. /
,SS/ 0
m_StyleSS1 8
,SS8 9

addlParamsSS: D
)SSD E
)SSE F
{TT 
ifUU 
(UU 
indexUU 
==UU  
iUU! "
&&UU# %
allowNoSelectionUU& 6
)UU6 7
indexVV 
=VV 
-VV  !
$numVV! "
;VV" #
elseWW 
indexXX 
=XX 
iXX  !
;XX! "
}YY 
}ZZ 
	GUILayout\\ 
.\\ 
EndHorizontal\\ #
(\\# $
)\\$ %
;\\% &
return^^ 
index^^ 
;^^ 
}__ 	
publicgg 
staticgg 
intgg 
FlagToolbargg %
(gg% &
intgg& )
indexgg* /
,gg/ 0

GUIContentgg1 ;
[gg; <
]gg< =
contentgg> E
,ggE F
GUIStyleggG O
styleggP U
,ggU V
boolggW [
allowNoSelectiongg\ l
=ggm n
falseggo t
,ggt u
boolggv z"
allowMultipleSelected	gg{ ê
=
ggë í
true
ggì ó
,
ggó ò
params
ggô ü
GUILayoutOption
gg† Ø
[
ggØ ∞
]
gg∞ ±

addlParams
gg≤ º
)
ggº Ω
{hh 	
returnii 
FlagToolbarii 
(ii 
indexii $
,ii$ %
contentii& -
,ii- .
styleii/ 4
,ii4 5
styleii6 ;
,ii; <
styleii= B
,iiB C
allowNoSelectioniiD T
,iiT U!
allowMultipleSelectediiV k
,iik l

addlParamsiim w
)iiw x
;iix y
}jj 	
publicll 
staticll 
intll 
FlagToolbarll %
(ll% &
intll& )
indexll* /
,ll/ 0

GUIContentll1 ;
[ll; <
]ll< =
contentll> E
,llE F
boolllG K
allowNoSelectionllL \
=ll] ^
falsell_ d
,lld e
boolllf j"
allowMultipleSelected	llk Ä
=
llÅ Ç
true
llÉ á
,
llá à
params
llâ è
GUILayoutOption
llê ü
[
llü †
]
ll† °

addlParams
ll¢ ¨
)
ll¨ ≠
{mm 	
returnnn 
FlagToolbarnn 
(nn 
indexnn $
,nn$ %
contentnn& -
,nn- .
UnityEditornn/ :
.nn: ;
EditorStylesnn; G
.nnG H
miniButtonLeftnnH V
,nnV W
UnityEditornnX c
.nnc d
EditorStylesnnd p
.nnp q
miniButtonMidnnq ~
,nn~ 
UnityEditor
nnÄ ã
.
nnã å
EditorStyles
nnå ò
.
nnò ô
miniButtonRight
nnô ®
,
nn® ©
allowNoSelection
nn™ ∫
,
nn∫ ª#
allowMultipleSelected
nnº —
,
nn— “

addlParams
nn” ›
)
nn› ﬁ
;
nnﬁ ﬂ
}oo 	
publicqq 
staticqq 
intqq 
FlagToolbarqq %
(qq% &
intqq& )
indexqq* /
,qq/ 0

GUIContentqq1 ;
[qq; <
]qq< =
contentqq> E
,qqE F
GUIStyleqqG O
leftqqP T
,qqT U
GUIStyleqqV ^
midqq_ b
,qqb c
GUIStyleqqd l
rightqqm r
,qqr s
boolqqt x
allowNoSelection	qqy â
=
qqä ã
false
qqå ë
,
qqë í
bool
qqì ó#
allowMultipleSelected
qqò ≠
=
qqÆ Ø
true
qq∞ ¥
,
qq¥ µ
params
qq∂ º
GUILayoutOption
qqΩ Ã
[
qqÃ Õ
]
qqÕ Œ

addlParams
qqœ Ÿ
)
qqŸ ⁄
{rr 	
	GUILayoutss 
.ss 
BeginHorizontalss %
(ss% &
)ss& '
;ss' (
foruu 
(uu 
intuu 
iuu 
=uu 
$numuu 
;uu 
iuu 
<uu 
contentuu  '
.uu' (
Lengthuu( .
;uu. /
iuu0 1
++uu1 3
)uu3 4
{vv 
GUIStyleww 
m_Styleww  
=ww! "
iww# $
<ww% &
$numww' (
?ww) *
leftww+ /
:ww0 1
(ww2 3
iww3 4
>=ww5 7
contentww8 ?
.ww? @
Lengthww@ F
-wwG H
$numwwI J
?wwK L
rightwwM R
:wwS T
midwwU X
)wwX Y
;wwY Z
ifyy 
(yy 
(yy 
indexyy 
&yy 
(yy 
$numyy !
<<yy" $
iyy% &
)yy& '
)yy' (
>yy) *
$numyy+ ,
)yy, -
m_Stylezz 
=zz 
EditorGUIUtilityzz .
.zz. /

GetOnStylezz/ 9
(zz9 :
m_Stylezz: A
)zzA B
;zzB C
if|| 
(|| 
	GUILayout|| 
.|| 
Button|| $
(||$ %
content||% ,
[||, -
i||- .
]||. /
,||/ 0
m_Style||1 8
,||8 9

addlParams||: D
)||D E
)||E F
{}} 
if~~ 
(~~ 
!~~ !
allowMultipleSelected~~ .
)~~. /
index 
= 
(  !
index! &
&' (
() *
$num* -
<<. 0
i1 2
)2 3
)3 4
;4 5
index
ÅÅ 
^=
ÅÅ 
(
ÅÅ 
$num
ÅÅ !
<<
ÅÅ" $
i
ÅÅ% &
)
ÅÅ& '
;
ÅÅ' (
if
ÉÉ 
(
ÉÉ 
!
ÉÉ 
allowNoSelection
ÉÉ )
&&
ÉÉ* ,
index
ÉÉ- 2
==
ÉÉ3 5
$num
ÉÉ6 9
)
ÉÉ9 :
index
ÑÑ 
=
ÑÑ 
$num
ÑÑ  #
<<
ÑÑ$ &
i
ÑÑ' (
;
ÑÑ( )
}
ÖÖ 
}
ÜÜ 
	GUILayout
àà 
.
àà 
EndHorizontal
àà #
(
àà# $
)
àà$ %
;
àà% &
return
ää 
index
ää 
;
ää 
}
ãã 	
class
çç 
ResizeHandleState
çç 
{
éé 	
public
èè 
Vector2
èè 
origin
èè !
;
èè! "
public
êê 
Rect
êê 
startingRect
êê $
;
êê$ %
}
ëë 	
delegate
ìì 
Rect
ìì 
ComputeResize
ìì #
(
ìì# $
Rect
ìì$ (
currentRect
ìì) 4
,
ìì4 5
ResizeHandleState
ìì6 G
handleState
ììH S
,
ììS T
Event
ììU Z
currentEvent
ìì[ g
,
ììg h
int
ììi l
minimumWidth
ììm y
,
ììy z
int
ìì{ ~
minimumHeightìì å
)ììå ç
;ììç é
static
ïï 
KeyValuePair
ïï 
<
ïï 
int
ïï 
,
ïï  
Tuple
ïï! &
<
ïï& '
Rect
ïï' +
,
ïï+ ,
ComputeResize
ïï- :
>
ïï: ;
>
ïï; <'
CreateResizeHandleControl
ïï= V
(
ïïV W
Rect
ïïW [

activeRect
ïï\ f
,
ïïf g
String
ïïh n
suffix
ïïo u
,
ïïu v
Rect
ïïw {
parentWindowRectïï| å
,ïïå ç
UnityEditorïïé ô
.ïïô ö
MouseCursorïïö •
cursorïï¶ ¨
,ïï¨ ≠
ComputeResizeïïÆ ª
resizeDelegateïïº  
)ïï  À
{
ññ 	
int
óó 
id
óó 
=
óó 

GUIUtility
óó 
.
óó  
GetControlID
óó  ,
(
óó, -
(
óó- .
$str
óó. F
+
óóG H
suffix
óóI O
)
óóO P
.
óóP Q
GetHashCode
óóQ \
(
óó\ ]
)
óó] ^
,
óó^ _
	FocusType
óó` i
.
óói j
Passive
óój q
,
óóq r
parentWindowRectóós É
)óóÉ Ñ
;óóÑ Ö
HandleUtility
òò 
.
òò 

AddControl
òò $
(
òò$ %
id
òò% '
,
òò' (
Vector2
òò) 0
.
òò0 1
Distance
òò1 9
(
òò9 :

activeRect
òò: D
.
òòD E
center
òòE K
,
òòK L
Event
òòM R
.
òòR S
current
òòS Z
.
òòZ [
mousePosition
òò[ h
)
òòh i
)
òòi j
;
òòj k
UnityEditor
ôô 
.
ôô 
EditorGUIUtility
ôô (
.
ôô( )
AddCursorRect
ôô) 6
(
ôô6 7

activeRect
ôô7 A
,
ôôA B
cursor
ôôC I
)
ôôI J
;
ôôJ K
return
öö 
new
öö 
KeyValuePair
öö #
<
öö# $
int
öö$ '
,
öö' (
Tuple
öö) .
<
öö. /
Rect
öö/ 3
,
öö3 4
ComputeResize
öö5 B
>
ööB C
>
ööC D
(
ööD E
id
ööE G
,
ööG H
new
ööI L
Tuple
ööM R
<
ööR S
Rect
ööS W
,
ööW X
ComputeResize
ööY f
>
ööf g
(
öög h

activeRect
ööh r
,
öör s
resizeDelegateööt Ç
)ööÇ É
)ööÉ Ñ
;ööÑ Ö
}
õõ 	
static
ùù 
Rect
ùù 
ResizeBottomRight
ùù %
(
ùù% &
Rect
ùù& *
currentRect
ùù+ 6
,
ùù6 7
ResizeHandleState
ùù8 I
handleState
ùùJ U
,
ùùU V
Event
ùùW \
currentEvent
ùù] i
,
ùùi j
int
ùùk n
minimumWidth
ùùo {
,
ùù{ |
intùù} Ä
minimumHeightùùÅ é
)ùùé è
{
ûû 	
currentRect
üü 
.
üü 
width
üü 
=
üü 
handleState
üü  +
.
üü+ ,
startingRect
üü, 8
.
üü8 9
width
üü9 >
+
üü? @
(
üüA B
currentEvent
üüB N
.
üüN O
mousePosition
üüO \
.
üü\ ]
x
üü] ^
-
üü_ `
handleState
üüa l
.
üül m
origin
üüm s
.
üüs t
x
üüt u
)
üüu v
;
üüv w
currentRect
†† 
.
†† 
height
†† 
=
††  
handleState
††! ,
.
††, -
startingRect
††- 9
.
††9 :
height
††: @
+
††A B
(
††C D
currentEvent
††D P
.
††P Q
mousePosition
††Q ^
.
††^ _
y
††_ `
-
††a b
handleState
††c n
.
††n o
origin
††o u
.
††u v
y
††v w
)
††w x
;
††x y
return
°° 
currentRect
°° 
;
°° 
}
¢¢ 	
static
§§ 
Rect
§§ 
ResizeBottomLeft
§§ $
(
§§$ %
Rect
§§% )
currentRect
§§* 5
,
§§5 6
ResizeHandleState
§§7 H
handleState
§§I T
,
§§T U
Event
§§V [
currentEvent
§§\ h
,
§§h i
int
§§j m
minimumWidth
§§n z
,
§§z {
int
§§| 
minimumHeight§§Ä ç
)§§ç é
{
•• 	
currentRect
¶¶ 
.
¶¶ 
width
¶¶ 
=
¶¶ 
currentRect
¶¶  +
.
¶¶+ ,
width
¶¶, 1
-
¶¶2 3
(
¶¶4 5
currentEvent
¶¶5 A
.
¶¶A B
mousePosition
¶¶B O
.
¶¶O P
x
¶¶P Q
-
¶¶R S
handleState
¶¶T _
.
¶¶_ `
origin
¶¶` f
.
¶¶f g
x
¶¶g h
)
¶¶h i
;
¶¶i j
currentRect
ßß 
.
ßß 
width
ßß 
=
ßß 
Mathf
ßß  %
.
ßß% &
Max
ßß& )
(
ßß) *
currentRect
ßß* 5
.
ßß5 6
width
ßß6 ;
,
ßß; <
minimumWidth
ßß= I
)
ßßI J
;
ßßJ K
currentRect
®® 
.
®® 
x
®® 
=
®® 
handleState
®® '
.
®®' (
startingRect
®®( 4
.
®®4 5
xMax
®®5 9
-
®®: ;
currentRect
®®< G
.
®®G H
width
®®H M
;
®®M N
currentRect
©© 
.
©© 
height
©© 
=
©©  
handleState
©©! ,
.
©©, -
startingRect
©©- 9
.
©©9 :
height
©©: @
+
©©A B
(
©©C D
currentEvent
©©D P
.
©©P Q
mousePosition
©©Q ^
.
©©^ _
y
©©_ `
-
©©a b
handleState
©©c n
.
©©n o
origin
©©o u
.
©©u v
y
©©v w
)
©©w x
;
©©x y
return
™™ 
currentRect
™™ 
;
™™ 
}
´´ 	
static
≠≠ 
Rect
≠≠ 
ResizeBottom
≠≠  
(
≠≠  !
Rect
≠≠! %
currentRect
≠≠& 1
,
≠≠1 2
ResizeHandleState
≠≠3 D
handleState
≠≠E P
,
≠≠P Q
Event
≠≠R W
currentEvent
≠≠X d
,
≠≠d e
int
≠≠f i
minimumWidth
≠≠j v
,
≠≠v w
int
≠≠x {
minimumHeight≠≠| â
)≠≠â ä
{
ÆÆ 	
currentRect
ØØ 
.
ØØ 
height
ØØ 
=
ØØ  
handleState
ØØ! ,
.
ØØ, -
startingRect
ØØ- 9
.
ØØ9 :
height
ØØ: @
+
ØØA B
(
ØØC D
currentEvent
ØØD P
.
ØØP Q
mousePosition
ØØQ ^
.
ØØ^ _
y
ØØ_ `
-
ØØa b
handleState
ØØc n
.
ØØn o
origin
ØØo u
.
ØØu v
y
ØØv w
)
ØØw x
;
ØØx y
return
∞∞ 
currentRect
∞∞ 
;
∞∞ 
}
±± 	
static
≥≥ 
Rect
≥≥ 
	ResizeTop
≥≥ 
(
≥≥ 
Rect
≥≥ "
currentRect
≥≥# .
,
≥≥. /
ResizeHandleState
≥≥0 A
handleState
≥≥B M
,
≥≥M N
Event
≥≥O T
currentEvent
≥≥U a
,
≥≥a b
int
≥≥c f
minimumWidth
≥≥g s
,
≥≥s t
int
≥≥u x
minimumHeight≥≥y Ü
)≥≥Ü á
{
¥¥ 	
currentRect
µµ 
.
µµ 
height
µµ 
=
µµ  
currentRect
µµ! ,
.
µµ, -
height
µµ- 3
-
µµ4 5
(
µµ6 7
currentEvent
µµ7 C
.
µµC D
mousePosition
µµD Q
.
µµQ R
y
µµR S
-
µµT U
handleState
µµV a
.
µµa b
origin
µµb h
.
µµh i
y
µµi j
)
µµj k
;
µµk l
currentRect
∂∂ 
.
∂∂ 
height
∂∂ 
=
∂∂  
Mathf
∂∂! &
.
∂∂& '
Max
∂∂' *
(
∂∂* +
currentRect
∂∂+ 6
.
∂∂6 7
height
∂∂7 =
,
∂∂= >
minimumHeight
∂∂? L
)
∂∂L M
;
∂∂M N
currentRect
∑∑ 
.
∑∑ 
y
∑∑ 
=
∑∑ 
handleState
∑∑ '
.
∑∑' (
startingRect
∑∑( 4
.
∑∑4 5
yMax
∑∑5 9
-
∑∑: ;
currentRect
∑∑< G
.
∑∑G H
height
∑∑H N
;
∑∑N O
return
∏∏ 
currentRect
∏∏ 
;
∏∏ 
}
ππ 	
static
ªª 
Rect
ªª 

ResizeLeft
ªª 
(
ªª 
Rect
ªª #
currentRect
ªª$ /
,
ªª/ 0
ResizeHandleState
ªª1 B
handleState
ªªC N
,
ªªN O
Event
ªªP U
currentEvent
ªªV b
,
ªªb c
int
ªªd g
minimumWidth
ªªh t
,
ªªt u
int
ªªv y
minimumHeightªªz á
)ªªá à
{
ºº 	
currentRect
ΩΩ 
.
ΩΩ 
width
ΩΩ 
=
ΩΩ 
currentRect
ΩΩ  +
.
ΩΩ+ ,
width
ΩΩ, 1
-
ΩΩ2 3
(
ΩΩ4 5
currentEvent
ΩΩ5 A
.
ΩΩA B
mousePosition
ΩΩB O
.
ΩΩO P
x
ΩΩP Q
-
ΩΩR S
handleState
ΩΩT _
.
ΩΩ_ `
origin
ΩΩ` f
.
ΩΩf g
x
ΩΩg h
)
ΩΩh i
;
ΩΩi j
currentRect
ææ 
.
ææ 
width
ææ 
=
ææ 
Mathf
ææ  %
.
ææ% &
Max
ææ& )
(
ææ) *
currentRect
ææ* 5
.
ææ5 6
width
ææ6 ;
,
ææ; <
minimumWidth
ææ= I
)
ææI J
;
ææJ K
currentRect
øø 
.
øø 
x
øø 
=
øø 
handleState
øø '
.
øø' (
startingRect
øø( 4
.
øø4 5
xMax
øø5 9
-
øø: ;
currentRect
øø< G
.
øøG H
width
øøH M
;
øøM N
return
¿¿ 
currentRect
¿¿ 
;
¿¿ 
}
¡¡ 	
static
√√ 
Rect
√√ 
ResizeRight
√√ 
(
√√  
Rect
√√  $
currentRect
√√% 0
,
√√0 1
ResizeHandleState
√√2 C
handleState
√√D O
,
√√O P
Event
√√Q V
currentEvent
√√W c
,
√√c d
int
√√e h
minimumWidth
√√i u
,
√√u v
int
√√w z
minimumHeight√√{ à
)√√à â
{
ƒƒ 	
currentRect
≈≈ 
.
≈≈ 
width
≈≈ 
=
≈≈ 
handleState
≈≈  +
.
≈≈+ ,
startingRect
≈≈, 8
.
≈≈8 9
width
≈≈9 >
+
≈≈? @
(
≈≈A B
currentEvent
≈≈B N
.
≈≈N O
mousePosition
≈≈O \
.
≈≈\ ]
x
≈≈] ^
-
≈≈_ `
handleState
≈≈a l
.
≈≈l m
origin
≈≈m s
.
≈≈s t
x
≈≈t u
)
≈≈u v
;
≈≈v w
return
∆∆ 
currentRect
∆∆ 
;
∆∆ 
}
«« 	
static
…… 
Rect
…… 
ResizeTopLeft
…… !
(
……! "
Rect
……" &
currentRect
……' 2
,
……2 3
ResizeHandleState
……4 E
handleState
……F Q
,
……Q R
Event
……S X
currentEvent
……Y e
,
……e f
int
……g j
minimumWidth
……k w
,
……w x
int
……y |
minimumHeight……} ä
)……ä ã
{
   	
currentRect
ÀÀ 
.
ÀÀ 
height
ÀÀ 
=
ÀÀ  
currentRect
ÀÀ! ,
.
ÀÀ, -
height
ÀÀ- 3
-
ÀÀ4 5
(
ÀÀ6 7
currentEvent
ÀÀ7 C
.
ÀÀC D
mousePosition
ÀÀD Q
.
ÀÀQ R
y
ÀÀR S
-
ÀÀT U
handleState
ÀÀV a
.
ÀÀa b
origin
ÀÀb h
.
ÀÀh i
y
ÀÀi j
)
ÀÀj k
;
ÀÀk l
currentRect
ÃÃ 
.
ÃÃ 
height
ÃÃ 
=
ÃÃ  
Mathf
ÃÃ! &
.
ÃÃ& '
Max
ÃÃ' *
(
ÃÃ* +
currentRect
ÃÃ+ 6
.
ÃÃ6 7
height
ÃÃ7 =
,
ÃÃ= >
minimumHeight
ÃÃ? L
)
ÃÃL M
;
ÃÃM N
currentRect
ÕÕ 
.
ÕÕ 
y
ÕÕ 
=
ÕÕ 
handleState
ÕÕ '
.
ÕÕ' (
startingRect
ÕÕ( 4
.
ÕÕ4 5
yMax
ÕÕ5 9
-
ÕÕ: ;
currentRect
ÕÕ< G
.
ÕÕG H
height
ÕÕH N
;
ÕÕN O
currentRect
ŒŒ 
.
ŒŒ 
width
ŒŒ 
=
ŒŒ 
currentRect
ŒŒ  +
.
ŒŒ+ ,
width
ŒŒ, 1
-
ŒŒ2 3
(
ŒŒ4 5
currentEvent
ŒŒ5 A
.
ŒŒA B
mousePosition
ŒŒB O
.
ŒŒO P
x
ŒŒP Q
-
ŒŒR S
handleState
ŒŒT _
.
ŒŒ_ `
origin
ŒŒ` f
.
ŒŒf g
x
ŒŒg h
)
ŒŒh i
;
ŒŒi j
currentRect
œœ 
.
œœ 
width
œœ 
=
œœ 
Mathf
œœ  %
.
œœ% &
Max
œœ& )
(
œœ) *
currentRect
œœ* 5
.
œœ5 6
width
œœ6 ;
,
œœ; <
minimumWidth
œœ= I
)
œœI J
;
œœJ K
currentRect
–– 
.
–– 
x
–– 
=
–– 
handleState
–– '
.
––' (
startingRect
––( 4
.
––4 5
xMax
––5 9
-
––: ;
currentRect
––< G
.
––G H
width
––H M
;
––M N
return
—— 
currentRect
—— 
;
—— 
}
““ 	
static
‘‘ 
Rect
‘‘ 
ResizeTopRight
‘‘ "
(
‘‘" #
Rect
‘‘# '
currentRect
‘‘( 3
,
‘‘3 4
ResizeHandleState
‘‘5 F
handleState
‘‘G R
,
‘‘R S
Event
‘‘T Y
currentEvent
‘‘Z f
,
‘‘f g
int
‘‘h k
minimumWidth
‘‘l x
,
‘‘x y
int
‘‘z }
minimumHeight‘‘~ ã
)‘‘ã å
{
’’ 	
currentRect
÷÷ 
.
÷÷ 
height
÷÷ 
=
÷÷  
currentRect
÷÷! ,
.
÷÷, -
height
÷÷- 3
-
÷÷4 5
(
÷÷6 7
currentEvent
÷÷7 C
.
÷÷C D
mousePosition
÷÷D Q
.
÷÷Q R
y
÷÷R S
-
÷÷T U
handleState
÷÷V a
.
÷÷a b
origin
÷÷b h
.
÷÷h i
y
÷÷i j
)
÷÷j k
;
÷÷k l
currentRect
◊◊ 
.
◊◊ 
height
◊◊ 
=
◊◊  
Mathf
◊◊! &
.
◊◊& '
Max
◊◊' *
(
◊◊* +
currentRect
◊◊+ 6
.
◊◊6 7
height
◊◊7 =
,
◊◊= >
minimumHeight
◊◊? L
)
◊◊L M
;
◊◊M N
currentRect
ÿÿ 
.
ÿÿ 
y
ÿÿ 
=
ÿÿ 
handleState
ÿÿ '
.
ÿÿ' (
startingRect
ÿÿ( 4
.
ÿÿ4 5
yMax
ÿÿ5 9
-
ÿÿ: ;
currentRect
ÿÿ< G
.
ÿÿG H
height
ÿÿH N
;
ÿÿN O
currentRect
ŸŸ 
.
ŸŸ 
width
ŸŸ 
=
ŸŸ 
handleState
ŸŸ  +
.
ŸŸ+ ,
startingRect
ŸŸ, 8
.
ŸŸ8 9
width
ŸŸ9 >
+
ŸŸ? @
(
ŸŸA B
currentEvent
ŸŸB N
.
ŸŸN O
mousePosition
ŸŸO \
.
ŸŸ\ ]
x
ŸŸ] ^
-
ŸŸ_ `
handleState
ŸŸa l
.
ŸŸl m
origin
ŸŸm s
.
ŸŸs t
x
ŸŸt u
)
ŸŸu v
;
ŸŸv w
return
⁄⁄ 
currentRect
⁄⁄ 
;
⁄⁄ 
}
€€ 	
static
›› 
int
›› )
s_ResizeHandleAreaDimension
›› .
=
››/ 0
$num
››1 2
;
››2 3
static
ﬁﬁ 
int
ﬁﬁ $
s_MoveWindowAreaHeight
ﬁﬁ )
=
ﬁﬁ* +
$num
ﬁﬁ, .
;
ﬁﬁ. /
public
‡‡ 
static
‡‡ 
Rect
‡‡ 
DoResizeHandle
‡‡ )
(
‡‡) *
Rect
‡‡* .
rect
‡‡/ 3
,
‡‡3 4
int
‡‡5 8
minimumWidth
‡‡9 E
,
‡‡E F
int
‡‡G J
minimumHeight
‡‡K X
)
‡‡X Y
{
·· 	
var
‚‚ 
evt
‚‚ 
=
‚‚ 
Event
‚‚ 
.
‚‚ 
current
‚‚ #
;
‚‚# $
if
„„ 
(
„„ 
evt
„„ 
.
„„ 
type
„„ 
==
„„ 
	EventType
„„ %
.
„„% &
Used
„„& *
)
„„* +
{
‰‰ 
return
ÂÂ 
rect
ÂÂ 
;
ÂÂ 
}
ÊÊ 
IDictionary
ÁÁ 
<
ÁÁ 
int
ÁÁ 
,
ÁÁ 
Tuple
ÁÁ "
<
ÁÁ" #
Rect
ÁÁ# '
,
ÁÁ' (
ComputeResize
ÁÁ) 6
>
ÁÁ6 7
>
ÁÁ7 8
resizeHandles
ÁÁ9 F
=
ÁÁG H
new
ÁÁI L

Dictionary
ÁÁM W
<
ÁÁW X
int
ÁÁX [
,
ÁÁ[ \
Tuple
ÁÁ] b
<
ÁÁb c
Rect
ÁÁc g
,
ÁÁg h
ComputeResize
ÁÁi v
>
ÁÁv w
>
ÁÁw x
(
ÁÁx y
)
ÁÁy z
;
ÁÁz {
resizeHandles
ËË 
.
ËË 
Add
ËË 
(
ËË '
CreateResizeHandleControl
ËË 7
(
ËË7 8
new
ËË8 ;
Rect
ËË< @
(
ËË@ A
rect
ËËA E
.
ËËE F
width
ËËF K
-
ËËL M)
s_ResizeHandleAreaDimension
ËËN i
,
ËËi j
rect
ËËk o
.
ËËo p
height
ËËp v
-
ËËw x*
s_ResizeHandleAreaDimensionËËy î
,ËËî ï+
s_ResizeHandleAreaDimensionËËñ ±
,ËË± ≤+
s_ResizeHandleAreaDimensionËË≥ Œ
)ËËŒ œ
,ËËœ –
$strËË— ﬁ
,ËËﬁ ﬂ
rectËË‡ ‰
,ËË‰ Â
MouseCursorËËÊ Ò
.ËËÒ Ú
ResizeUpLeftËËÚ ˛
,ËË˛ ˇ!
ResizeBottomRightËËÄ ë
)ËËë í
)ËËí ì
;ËËì î
resizeHandles
ÈÈ 
.
ÈÈ 
Add
ÈÈ 
(
ÈÈ '
CreateResizeHandleControl
ÈÈ 7
(
ÈÈ7 8
new
ÈÈ8 ;
Rect
ÈÈ< @
(
ÈÈ@ A
$num
ÈÈA B
,
ÈÈB C
rect
ÈÈD H
.
ÈÈH I
height
ÈÈI O
-
ÈÈP Q)
s_ResizeHandleAreaDimension
ÈÈR m
,
ÈÈm n*
s_ResizeHandleAreaDimensionÈÈo ä
,ÈÈä ã+
s_ResizeHandleAreaDimensionÈÈå ß
)ÈÈß ®
,ÈÈ® ©
$strÈÈ™ ∂
,ÈÈ∂ ∑
rectÈÈ∏ º
,ÈÈº Ω
MouseCursorÈÈæ …
.ÈÈ…  
ResizeUpRightÈÈ  ◊
,ÈÈ◊ ÿ 
ResizeBottomLeftÈÈŸ È
)ÈÈÈ Í
)ÈÈÍ Î
;ÈÈÎ Ï
resizeHandles
ÍÍ 
.
ÍÍ 
Add
ÍÍ 
(
ÍÍ '
CreateResizeHandleControl
ÍÍ 7
(
ÍÍ7 8
new
ÍÍ8 ;
Rect
ÍÍ< @
(
ÍÍ@ A)
s_ResizeHandleAreaDimension
ÍÍA \
,
ÍÍ\ ]
rect
ÍÍ^ b
.
ÍÍb c
height
ÍÍc i
-
ÍÍj k*
s_ResizeHandleAreaDimensionÍÍl á
,ÍÍá à
rectÍÍâ ç
.ÍÍç é
widthÍÍé ì
-ÍÍî ï
$numÍÍñ ó
*ÍÍó ò+
s_ResizeHandleAreaDimensionÍÍò ≥
,ÍÍ≥ ¥+
s_ResizeHandleAreaDimensionÍÍµ –
)ÍÍ– —
,ÍÍ— “
$strÍÍ” €
,ÍÍ€ ‹
rectÍÍ› ·
,ÍÍ· ‚
MouseCursorÍÍ„ Ó
.ÍÍÓ Ô
ResizeVerticalÍÍÔ ˝
,ÍÍ˝ ˛
ResizeBottomÍÍˇ ã
)ÍÍã å
)ÍÍå ç
;ÍÍç é
resizeHandles
ÎÎ 
.
ÎÎ 
Add
ÎÎ 
(
ÎÎ '
CreateResizeHandleControl
ÎÎ 7
(
ÎÎ7 8
new
ÎÎ8 ;
Rect
ÎÎ< @
(
ÎÎ@ A)
s_ResizeHandleAreaDimension
ÎÎA \
,
ÎÎ\ ]
$num
ÎÎ^ _
,
ÎÎ_ `
rect
ÎÎa e
.
ÎÎe f
width
ÎÎf k
-
ÎÎl m
$num
ÎÎn o
*
ÎÎo p*
s_ResizeHandleAreaDimensionÎÎq å
,ÎÎå ç+
s_ResizeHandleAreaDimensionÎÎé ©
)ÎÎ© ™
,ÎÎ™ ´
$strÎÎ¨ ±
,ÎÎ± ≤
rectÎÎ≥ ∑
,ÎÎ∑ ∏
MouseCursorÎÎπ ƒ
.ÎÎƒ ≈
ResizeVerticalÎÎ≈ ”
,ÎÎ” ‘
	ResizeTopÎÎ’ ﬁ
)ÎÎﬁ ﬂ
)ÎÎﬂ ‡
;ÎÎ‡ ·
resizeHandles
ÏÏ 
.
ÏÏ 
Add
ÏÏ 
(
ÏÏ '
CreateResizeHandleControl
ÏÏ 7
(
ÏÏ7 8
new
ÏÏ8 ;
Rect
ÏÏ< @
(
ÏÏ@ A
$num
ÏÏA B
,
ÏÏB C$
s_MoveWindowAreaHeight
ÏÏD Z
,
ÏÏZ [)
s_ResizeHandleAreaDimension
ÏÏ\ w
,
ÏÏw x
rect
ÏÏy }
.
ÏÏ} ~
heightÏÏ~ Ñ
-ÏÏÖ Ü
(ÏÏá à&
s_MoveWindowAreaHeightÏÏà û
+ÏÏü †+
s_ResizeHandleAreaDimensionÏÏ° º
)ÏÏº Ω
)ÏÏΩ æ
,ÏÏæ ø
$strÏÏ¿ ∆
,ÏÏ∆ «
rectÏÏ» Ã
,ÏÏÃ Õ
MouseCursorÏÏŒ Ÿ
.ÏÏŸ ⁄ 
ResizeHorizontalÏÏ⁄ Í
,ÏÏÍ Î

ResizeLeftÏÏÏ ˆ
)ÏÏˆ ˜
)ÏÏ˜ ¯
;ÏÏ¯ ˘
resizeHandles
ÌÌ 
.
ÌÌ 
Add
ÌÌ 
(
ÌÌ '
CreateResizeHandleControl
ÌÌ 7
(
ÌÌ7 8
new
ÌÌ8 ;
Rect
ÌÌ< @
(
ÌÌ@ A
rect
ÌÌA E
.
ÌÌE F
width
ÌÌF K
-
ÌÌL M)
s_ResizeHandleAreaDimension
ÌÌN i
,
ÌÌi j%
s_MoveWindowAreaHeightÌÌk Å
,ÌÌÅ Ç+
s_ResizeHandleAreaDimensionÌÌÉ û
,ÌÌû ü
rectÌÌ† §
.ÌÌ§ •
heightÌÌ• ´
-ÌÌ¨ ≠
(ÌÌÆ Ø&
s_MoveWindowAreaHeightÌÌØ ≈
+ÌÌ∆ «+
s_ResizeHandleAreaDimensionÌÌ» „
)ÌÌ„ ‰
)ÌÌ‰ Â
,ÌÌÂ Ê
$strÌÌÁ Ó
,ÌÌÓ Ô
rectÌÌ Ù
,ÌÌÙ ı
MouseCursorÌÌˆ Å
.ÌÌÅ Ç 
ResizeHorizontalÌÌÇ í
,ÌÌí ì
ResizeRightÌÌî ü
)ÌÌü †
)ÌÌ† °
;ÌÌ° ¢
resizeHandles
ÓÓ 
.
ÓÓ 
Add
ÓÓ 
(
ÓÓ '
CreateResizeHandleControl
ÓÓ 7
(
ÓÓ7 8
new
ÓÓ8 ;
Rect
ÓÓ< @
(
ÓÓ@ A
$num
ÓÓA B
,
ÓÓB C
$num
ÓÓD E
,
ÓÓE F)
s_ResizeHandleAreaDimension
ÓÓG b
,
ÓÓb c)
s_ResizeHandleAreaDimension
ÓÓd 
)ÓÓ Ä
,ÓÓÄ Å
$strÓÓÇ ã
,ÓÓã å
rectÓÓç ë
,ÓÓë í
MouseCursorÓÓì û
.ÓÓû ü
ResizeUpLeftÓÓü ´
,ÓÓ´ ¨
ResizeTopLeftÓÓ≠ ∫
)ÓÓ∫ ª
)ÓÓª º
;ÓÓº Ω
resizeHandles
ÔÔ 
.
ÔÔ 
Add
ÔÔ 
(
ÔÔ '
CreateResizeHandleControl
ÔÔ 7
(
ÔÔ7 8
new
ÔÔ8 ;
Rect
ÔÔ< @
(
ÔÔ@ A
rect
ÔÔA E
.
ÔÔE F
width
ÔÔF K
-
ÔÔL M)
s_ResizeHandleAreaDimension
ÔÔN i
,
ÔÔi j
$num
ÔÔk l
,
ÔÔl m*
s_ResizeHandleAreaDimensionÔÔn â
,ÔÔâ ä+
s_ResizeHandleAreaDimensionÔÔã ¶
)ÔÔ¶ ß
,ÔÔß ®
$strÔÔ© ≥
,ÔÔ≥ ¥
rectÔÔµ π
,ÔÔπ ∫
MouseCursorÔÔª ∆
.ÔÔ∆ «
ResizeUpRightÔÔ« ‘
,ÔÔ‘ ’
ResizeTopRightÔÔ÷ ‰
)ÔÔ‰ Â
)ÔÔÂ Ê
;ÔÔÊ Á
if
ÒÒ 
(
ÒÒ 
evt
ÒÒ 
.
ÒÒ 
type
ÒÒ 
==
ÒÒ 
	EventType
ÒÒ %
.
ÒÒ% &
	MouseDown
ÒÒ& /
)
ÒÒ/ 0
{
ÚÚ 
bool
ÛÛ  
initializedControl
ÛÛ '
=
ÛÛ( )
false
ÛÛ* /
;
ÛÛ/ 0
foreach
ÙÙ 
(
ÙÙ 
KeyValuePair
ÙÙ %
<
ÙÙ% &
int
ÙÙ& )
,
ÙÙ) *
Tuple
ÙÙ+ 0
<
ÙÙ0 1
Rect
ÙÙ1 5
,
ÙÙ5 6
ComputeResize
ÙÙ6 C
>
ÙÙC D
>
ÙÙD E
kvp
ÙÙF I
in
ÙÙJ L
resizeHandles
ÙÙM Z
)
ÙÙZ [
{
ıı 
if
ˆˆ 
(
ˆˆ 
kvp
ˆˆ 
.
ˆˆ 
Value
ˆˆ !
.
ˆˆ! "
Item1
ˆˆ" '
.
ˆˆ' (
Contains
ˆˆ( 0
(
ˆˆ0 1
evt
ˆˆ1 4
.
ˆˆ4 5
mousePosition
ˆˆ5 B
)
ˆˆB C
)
ˆˆC D
{
˜˜ 

GUIUtility
¯¯ "
.
¯¯" #

hotControl
¯¯# -
=
¯¯. /
kvp
¯¯0 3
.
¯¯3 4
Key
¯¯4 7
;
¯¯7 8 
initializedControl
˘˘ *
=
˘˘+ ,
true
˘˘- 1
;
˘˘1 2
break
˙˙ 
;
˙˙ 
}
˚˚ 
}
¸¸ 
if
˛˛ 
(
˛˛ 
!
˛˛  
initializedControl
˛˛ '
)
˛˛' (
{
ˇˇ 
return
ÄÄ 
rect
ÄÄ 
;
ÄÄ  
}
ÅÅ 
GUI
ÇÇ 
.
ÇÇ 
changed
ÇÇ 
=
ÇÇ 
true
ÇÇ "
;
ÇÇ" #
var
ÉÉ 
state
ÉÉ 
=
ÉÉ 
(
ÉÉ 
ResizeHandleState
ÉÉ .
)
ÉÉ. /

GUIUtility
ÉÉ/ 9
.
ÉÉ9 :
GetStateObject
ÉÉ: H
(
ÉÉH I
typeof
ÉÉI O
(
ÉÉO P
ResizeHandleState
ÉÉP a
)
ÉÉa b
,
ÉÉb c

GUIUtility
ÉÉd n
.
ÉÉn o

hotControl
ÉÉo y
)
ÉÉy z
;
ÉÉz {
state
ÑÑ 
.
ÑÑ 
origin
ÑÑ 
=
ÑÑ 
evt
ÑÑ "
.
ÑÑ" #
mousePosition
ÑÑ# 0
;
ÑÑ0 1
state
ÖÖ 
.
ÖÖ 
startingRect
ÖÖ "
=
ÖÖ# $
rect
ÖÖ% )
;
ÖÖ) *
evt
ÜÜ 
.
ÜÜ 
Use
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
}
áá 
else
àà 
if
àà 
(
àà 
!
àà 
resizeHandles
àà #
.
àà# $
ContainsKey
àà$ /
(
àà/ 0

GUIUtility
àà0 :
.
àà: ;

hotControl
àà; E
)
ààE F
)
ààF G
{
ââ 
return
ää 
rect
ää 
;
ää 
}
ãã 
if
åå 
(
åå 
evt
åå 
.
åå 
type
åå 
==
åå 
	EventType
åå %
.
åå% &
MouseUp
åå& -
)
åå- .
{
çç 

GUIUtility
éé 
.
éé 

hotControl
éé %
=
éé& '
$num
éé( )
;
éé) *
GUI
èè 
.
èè 
changed
èè 
=
èè 
true
èè "
;
èè" #
evt
êê 
.
êê 
Use
êê 
(
êê 
)
êê 
;
êê 
}
ëë 
else
íí 
if
íí 
(
íí 
evt
íí 
.
íí 
type
íí 
==
íí  
	EventType
íí! *
.
íí* +
	MouseDrag
íí+ 4
)
íí4 5
{
ìì 
var
îî 
state
îî 
=
îî 
(
îî 
ResizeHandleState
îî .
)
îî. /

GUIUtility
îî/ 9
.
îî9 :
GetStateObject
îî: H
(
îîH I
typeof
îîI O
(
îîO P
ResizeHandleState
îîP a
)
îîa b
,
îîb c

GUIUtility
îîd n
.
îîn o

hotControl
îîo y
)
îîy z
;
îîz {
rect
ïï 
=
ïï 
resizeHandles
ïï $
[
ïï$ %

GUIUtility
ïï% /
.
ïï/ 0

hotControl
ïï0 :
]
ïï: ;
.
ïï; <
Item2
ïï< A
(
ïïA B
rect
ïïB F
,
ïïF G
state
ïïH M
,
ïïM N
evt
ïïO R
,
ïïR S
minimumWidth
ïïT `
,
ïï` a
minimumHeight
ïïb o
)
ïïo p
;
ïïp q
GUI
óó 
.
óó 
changed
óó 
=
óó 
true
óó "
;
óó" #
evt
òò 
.
òò 
Use
òò 
(
òò 
)
òò 
;
òò 
}
ôô 
return
õõ 
rect
õõ 
;
õõ 
}
úú 	
public
ûû 
static
ûû 
Rect
ûû 
GetSliderRect
ûû (
(
ûû( )
bool
ûû) -
hasLabel
ûû. 6
,
ûû6 7
params
ûû8 >
GUILayoutOption
ûû? N
[
ûûN O
]
ûûO P
options
ûûQ X
)
ûûX Y
{
üü 	
return
°° 
UnityEditor
°° 
.
°° 
EditorGUILayout
°° .
.
°°. /
GetSliderRect
°°/ <
(
°°< =
hasLabel
°°= E
,
°°E F
options
°°G N
)
°°N O
;
°°O P
}
™™ 	
}
´´ 
}¨¨ È
èD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\HandleGUI.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
sealed 

class 
	HandleGUI 
: 
IDisposable (
{ 
bool		 
m_SrgbWrite		 
;		 
public 
	HandleGUI 
( 
) 
{ 	
Handles 
. 
BeginGUI 
( 
) 
; 
} 	
public 
void 
Dispose 
( 
) 
{ 	
Handles 
. 
EndGUI 
( 
) 
; 
} 	
} 
} Æ
íD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\AssemblyInfo.cs
[ 
assembly 	
:	 

System 
. 
Runtime 
. 
CompilerServices *
.* +
InternalsVisibleTo+ =
(= >
$str> ^
)^ _
]_ `
[ 
assembly 	
:	 

System 
. 
Runtime 
. 
CompilerServices *
.* +
InternalsVisibleTo+ =
(= >
$str> V
)V W
]W X
[ 
assembly 	
:	 

System 
. 
Runtime 
. 
CompilerServices *
.* +
InternalsVisibleTo+ =
(= >
$str> ]
)] ^
]^ _
[ 
assembly 	
:	 

System 
. 
Runtime 
. 
CompilerServices *
.* +
InternalsVisibleTo+ =
(= >
$str> Z
)Z [
][ \
[ 
assembly 	
:	 

System 
. 
Runtime 
. 
CompilerServices *
.* +
InternalsVisibleTo+ =
(= >
$str> ]
)] ^
]^ _Ñ÷
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Export\Export.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
.		  !
Actions		! (
{

 
sealed 

class 
Export 
: 

MenuAction $
{ 
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
ObjectG M
;M N
}O P
}Q R
public 
override 
	Texture2D !
icon" &
{' (
get) ,
{- .
return/ 5
IconUtility6 A
.A B
GetIconB I
(I J
$strJ a
,a b
IconSkinc k
.k l
Prol o
)o p
;p q
}r s
}t u
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
	m_Tooltip> G
;G H
}I J
}K L
	protected 
override 
bool 
hasFileMenuEntry  0
{1 2
get3 6
{7 8
return9 ?
false@ E
;E F
}G H
}I J

GUIContent 
gc_ExportFormat "
=# $
new% (

GUIContent) 3
(3 4
$str4 C
,C D
$strE {
){ |
;| }

GUIContent 
gc_ExportRecursive %
=& '
new( +

GUIContent, 6
(6 7
$str7 I
,I J
$str	K Ø
)
Ø ∞
;
∞ ±

GUIContent #
gc_ObjExportRightHanded *
=+ ,
new- 0

GUIContent1 ;
(; <
$str< J
,J K
$str	L ﬂ
)
ﬂ ‡
;
‡ ·

GUIContent 
gc_ExportAsGroup #
=$ %
new& )

GUIContent* 4
(4 5
$str5 F
,F G
$str	H Ω
)
Ω æ
;
æ ø

GUIContent  
gc_ObjApplyTransform '
=( )
new* -

GUIContent. 8
(8 9
$str9 K
,K L
$str	M ÿ
)
ÿ Ÿ
;
Ÿ ⁄

GUIContent $
gc_ObjExportCopyTextures +
=, -
new. 1

GUIContent2 <
(< =
$str= L
,L M
$str	N Ø
)
Ø ∞
;
∞ ±

GUIContent $
gc_ObjExportVertexColors +
=, -
new. 1

GUIContent2 <
(< =
$str= L
,L M
$str	N ô
)
ô ö
;
ö õ

GUIContent $
gc_ObjTextureOffsetScale +
=, -
new. 1

GUIContent2 <
(< =
$str= T
,T U
$str	V ê
)
ê ë
;
ë í

GUIContent 
gc_ObjQuads 
=  
new! $

GUIContent% /
(/ 0
$str0 >
,> ?
$str	@ Å
)
Å Ç
;
Ç É

GUIContent !
gc_ExportAssetInPlace (
=) *
new+ .

GUIContent/ 9
(9 :
$str: J
,J K
$str	L ¶
)
¶ ß
;
ß ®
Pref 
< 
ExportFormat 
> 
m_ExportFormat )
=* +
new, /
Pref0 4
<4 5
ExportFormat5 A
>A B
(B C
$strC R
,R S
k_DefaultFormatT c
)c d
;d e
Pref 
< 
bool 
> 
m_ExportRecursive $
=% &
new' *
Pref+ /
</ 0
bool0 4
>4 5
(5 6
$str6 N
,N O
falseP U
)U V
;V W
Pref 
< 
bool 
> 
m_ExportAsGroup "
=# $
new% (
Pref) -
<- .
bool. 2
>2 3
(3 4
$str4 J
,J K
falseL Q
)Q R
;R S
Pref"" 
<"" 
bool"" 
>"" "
m_ObjExportRightHanded"" )
=""* +
new"", /
Pref""0 4
<""4 5
bool""5 9
>""9 :
("": ;
$str""; X
,""X Y
true""Z ^
)""^ _
;""_ `
Pref## 
<## 
bool## 
>## #
m_ObjExportCopyTextures## *
=##+ ,
new##- 0
Pref##1 5
<##5 6
bool##6 :
>##: ;
(##; <
$str##< Z
,##Z [
true##\ `
)##` a
;##a b
Pref$$ 
<$$ 
bool$$ 
>$$ 
m_ObjApplyTransform$$ &
=$$' (
new$$) ,
Pref$$- 1
<$$1 2
bool$$2 6
>$$6 7
($$7 8
$str$$8 R
,$$R S
false$$T Y
)$$Y Z
;$$Z [
Pref%% 
<%% 
bool%% 
>%% #
m_ObjExportVertexColors%% *
=%%+ ,
new%%- 0
Pref%%1 5
<%%5 6
bool%%6 :
>%%: ;
(%%; <
$str%%< Z
,%%Z [
false%%\ a
)%%a b
;%%b c
Pref&& 
<&& 
bool&& 
>&& #
m_ObjTextureOffsetScale&& *
=&&+ ,
new&&- 0
Pref&&1 5
<&&5 6
bool&&6 :
>&&: ;
(&&; <
$str&&< Z
,&&Z [
false&&\ a
)&&a b
;&&b c
Pref'' 
<'' 
bool'' 
>'' 

m_ObjQuads'' 
='' 
new''  #
Pref''$ (
<''( )
bool'') -
>''- .
(''. /
$str''/ @
,''@ A
true''B F
)''F G
;''G H
Pref** 
<** 
FileType** 
>** 
m_StlExportFormat** (
=**) *
new**+ .
Pref**/ 3
<**3 4
FileType**4 <
>**< =
(**= >
$str**> V
,**V W
FileType**X `
.**` a
Ascii**a f
)**f g
;**g h
Pref-- 
<-- 
bool-- 
>-- $
m_PlyExportIsRightHanded-- +
=--, -
new--. 1
Pref--2 6
<--6 7
bool--7 ;
>--; <
(--< =
$str--= \
,--\ ]
true--^ b
)--b c
;--c d
Pref.. 
<.. 
bool.. 
>.. 
m_PlyApplyTransform.. &
=..' (
new..) ,
Pref..- 1
<..1 2
bool..2 6
>..6 7
(..7 8
$str..8 R
,..R S
true..T X
)..X Y
;..Y Z
Pref// 
<// 
bool// 
>// 

m_PlyQuads// 
=// 
new//  #
Pref//$ (
<//( )
bool//) -
>//- .
(//. /
$str/// @
,//@ A
true//B F
)//F G
;//G H
Pref00 
<00 
bool00 
>00 

m_PlyNGons00 
=00 
new00  #
Pref00$ (
<00( )
bool00) -
>00- .
(00. /
$str00/ @
,00@ A
false00B G
)00G H
;00H I
public22 
enum22 
ExportFormat22  
{33 	
Obj44 
,44 
Stl55 
,55 
Ply66 
,66 
Asset77 
,77 
Prefab88 
}99 	
const;; 
ExportFormat;; 
k_DefaultFormat;; *
=;;+ ,
ExportFormat;;- 9
.;;9 :
Obj;;: =
;;;= >
static== 
readonly== 
TooltipContent== &
	m_Tooltip==' 0
===1 2
new==3 6
TooltipContent==7 E
(>> 
$str?? 
,?? 
$str@@ I
)AA 
;AA 
publicCC 
overrideCC 
boolCC 
hiddenCC #
{DD 	
getEE 
{EE 
returnEE 
falseEE 
;EE 
}EE  !
}FF 	
publicHH 
overrideHH 
boolHH 
enabledHH $
{II 	
getJJ 
{JJ 
returnJJ 
MeshSelectionJJ &
.JJ& '
selectedObjectCountJJ' :
>JJ; <
$numJJ= >
;JJ> ?
}JJ@ A
}KK 	
	protectedMM 
overrideMM 
MenuActionStateMM *
optionsMenuStateMM+ ;
{NN 	
getOO 
{OO 
returnOO 
MenuActionStateOO (
.OO( )
VisibleAndEnabledOO) :
;OO: ;
}OO< =
}PP 	
	protectedRR 
overrideRR 
voidRR 
OnSettingsGUIRR  -
(RR- .
)RR. /
{SS 	
	GUILayoutTT 
.TT 
LabelTT 
(TT 
$strTT -
,TT- .
EditorStylesTT/ ;
.TT; <
	boldLabelTT< E
)TTE F
;TTF G
	EditorGUIVV 
.VV 
BeginChangeCheckVV &
(VV& '
)VV' (
;VV( )
	EditorGUIXX 
.XX 
BeginChangeCheckXX &
(XX& '
)XX' (
;XX( )
m_ExportFormatYY 
.YY 
valueYY  
=YY! "
(YY# $
ExportFormatYY$ 0
)YY0 1
EditorGUILayoutYY1 @
.YY@ A
	EnumPopupYYA J
(YYJ K
gc_ExportFormatYYK Z
,YYZ [
m_ExportFormatYY\ j
)YYj k
;YYk l
ifZZ 
(ZZ 
	EditorGUIZZ 
.ZZ 
EndChangeCheckZZ (
(ZZ( )
)ZZ) *
)ZZ* +
{[[ 
if\\ 
(\\ 
m_ExportFormat\\ "
.\\" #
value\\# (
==\\) +
ExportFormat\\, 8
.\\8 9
Asset\\9 >
||\\? A
m_ExportFormat\\B P
.\\P Q
value\\Q V
==\\W Y
ExportFormat\\Z f
.\\f g
Prefab\\g m
)\\m n
{]] 
var^^ 
opt^^ 
=^^ 
ExportAsset^^ )
.^^) * 
s_ExportAssetOptions^^* >
.^^> ?
value^^? D
;^^D E
opt__ 
.__ 

makePrefab__ "
=__# $
m_ExportFormat__% 3
.__3 4
value__4 9
==__: <
ExportFormat__= I
.__I J
Prefab__J P
;__P Q
ExportAsset`` 
.``   
s_ExportAssetOptions``  4
.``4 5
SetValue``5 =
(``= >
opt``> A
)``A B
;``B C
}aa 
}bb 
m_ExportRecursivedd 
.dd 
valuedd #
=dd$ %
EditorGUILayoutdd& 5
.dd5 6
Toggledd6 <
(dd< =
gc_ExportRecursivedd= O
,ddO P
m_ExportRecursiveddQ b
)ddb c
;ddc d
ifff 
(ff 
m_ExportFormatff 
!=ff !
ExportFormatff" .
.ff. /
Assetff/ 4
&&gg 
m_ExportFormatgg !
!=gg" $
ExportFormatgg% 1
.gg1 2
Prefabgg2 8
&&hh 
m_ExportFormathh !
!=hh" $
ExportFormathh% 1
.hh1 2
Stlhh2 5
)hh5 6
{ii 
m_ExportAsGroupjj 
.jj  
valuejj  %
=jj& '
EditorGUILayoutjj( 7
.jj7 8
Togglejj8 >
(jj> ?
gc_ExportAsGroupjj? O
,jjO P
m_ExportAsGroupjjQ `
)jj` a
;jja b
}kk 
ifmm 
(mm 
m_ExportFormatmm 
==mm !
ExportFormatmm" .
.mm. /
Objmm/ 2
)mm2 3
ObjExportOptionsnn  
(nn  !
)nn! "
;nn" #
elseoo 
ifoo 
(oo 
m_ExportFormatoo #
==oo$ &
ExportFormatoo' 3
.oo3 4
Stloo4 7
)oo7 8
StlExportOptionspp  
(pp  !
)pp! "
;pp" #
elseqq 
ifqq 
(qq 
m_ExportFormatqq #
==qq$ &
ExportFormatqq' 3
.qq3 4
Plyqq4 7
)qq7 8
PlyExportOptionsrr  
(rr  !
)rr! "
;rr" #
elsess 
ifss 
(ss 
m_ExportFormatss #
==ss$ &
ExportFormatss' 3
.ss3 4
Assetss4 9
||ss: <
m_ExportFormatss= K
==ssL N
ExportFormatssO [
.ss[ \
Prefabss\ b
)ssb c
AssetExportOptionstt "
(tt" #
)tt# $
;tt$ %
ifvv 
(vv 
	EditorGUIvv 
.vv 
EndChangeCheckvv (
(vv( )
)vv) *
)vv* +
ProBuilderSettingsww "
.ww" #
Saveww# '
(ww' (
)ww( )
;ww) *
	GUILayoutyy 
.yy 
FlexibleSpaceyy #
(yy# $
)yy$ %
;yy% &
if{{ 
({{ 
	GUILayout{{ 
.{{ 
Button{{  
({{  !
$str{{! )
){{) *
){{* +
EditorUtility|| 
.|| 
ShowNotification|| .
(||. /
DoAction||/ 7
(||7 8
)||8 9
.||9 :
notification||: F
)||F G
;||G H
}}} 	
void 
ObjExportOptions 
( 
) 
{
ÄÄ 	
	EditorGUI
ÅÅ 
.
ÅÅ  
BeginDisabledGroup
ÅÅ (
(
ÅÅ( )
m_ExportAsGroup
ÅÅ) 8
)
ÅÅ8 9
;
ÅÅ9 :
if
ÉÉ 
(
ÉÉ 
m_ExportAsGroup
ÉÉ 
)
ÉÉ  
EditorGUILayout
ÑÑ 
.
ÑÑ  
Toggle
ÑÑ  &
(
ÑÑ& '
$str
ÑÑ' 9
,
ÑÑ9 :
true
ÑÑ; ?
)
ÑÑ? @
;
ÑÑ@ A
else
ÖÖ !
m_ObjApplyTransform
ÜÜ #
.
ÜÜ# $
value
ÜÜ$ )
=
ÜÜ* +
EditorGUILayout
ÜÜ, ;
.
ÜÜ; <
Toggle
ÜÜ< B
(
ÜÜB C"
gc_ObjApplyTransform
ÜÜC W
,
ÜÜW X!
m_ObjApplyTransform
ÜÜY l
)
ÜÜl m
;
ÜÜm n
	EditorGUI
àà 
.
àà 
EndDisabledGroup
àà &
(
àà& '
)
àà' (
;
àà( )$
m_ObjExportRightHanded
ää "
.
ää" #
value
ää# (
=
ää) *
EditorGUILayout
ää+ :
.
ää: ;
Toggle
ää; A
(
ääA B%
gc_ObjExportRightHanded
ääB Y
,
ääY Z$
m_ObjExportRightHanded
ää[ q
)
ääq r
;
äär s%
m_ObjExportCopyTextures
ãã #
.
ãã# $
value
ãã$ )
=
ãã* +
EditorGUILayout
ãã, ;
.
ãã; <
Toggle
ãã< B
(
ããB C&
gc_ObjExportCopyTextures
ããC [
,
ãã[ \%
m_ObjExportCopyTextures
ãã] t
)
ããt u
;
ããu v%
m_ObjExportVertexColors
åå #
.
åå# $
value
åå$ )
=
åå* +
EditorGUILayout
åå, ;
.
åå; <
Toggle
åå< B
(
ååB C&
gc_ObjExportVertexColors
ååC [
,
åå[ \%
m_ObjExportVertexColors
åå] t
)
ååt u
;
ååu v%
m_ObjTextureOffsetScale
çç #
.
çç# $
value
çç$ )
=
çç* +
EditorGUILayout
çç, ;
.
çç; <
Toggle
çç< B
(
ççB C&
gc_ObjTextureOffsetScale
ççC [
,
çç[ \%
m_ObjTextureOffsetScale
çç] t
)
ççt u
;
ççu v

m_ObjQuads
éé 
.
éé 
value
éé 
=
éé 
EditorGUILayout
éé .
.
éé. /
Toggle
éé/ 5
(
éé5 6
gc_ObjQuads
éé6 A
,
ééA B

m_ObjQuads
ééC M
)
ééM N
;
ééN O
}
èè 	
void
ëë 
StlExportOptions
ëë 
(
ëë 
)
ëë 
{
íí 	
m_StlExportFormat
ìì 
.
ìì 
value
ìì #
=
ìì$ %
(
ìì& '
UnityEngine
ìì' 2
.
ìì2 3

ProBuilder
ìì3 =
.
ìì= >
Stl
ìì> A
.
ììA B
FileType
ììB J
)
ììJ K
EditorGUILayout
ììK Z
.
ììZ [
	EnumPopup
ìì[ d
(
ììd e
$str
ììe q
,
ììq r 
m_StlExportFormatììs Ñ
)ììÑ Ö
;ììÖ Ü
}
îî 	
void
ññ 
PlyExportOptions
ññ 
(
ññ 
)
ññ 
{
óó 	
	EditorGUI
òò 
.
òò  
BeginDisabledGroup
òò (
(
òò( )
m_ExportAsGroup
òò) 8
)
òò8 9
;
òò9 :
if
öö 
(
öö 
m_ExportAsGroup
öö 
)
öö  
EditorGUILayout
õõ 
.
õõ  
Toggle
õõ  &
(
õõ& '
$str
õõ' 9
,
õõ9 :
true
õõ; ?
)
õõ? @
;
õõ@ A
else
úú !
m_PlyApplyTransform
ùù #
.
ùù# $
value
ùù$ )
=
ùù* +
EditorGUILayout
ùù, ;
.
ùù; <
Toggle
ùù< B
(
ùùB C"
gc_ObjApplyTransform
ùùC W
,
ùùW X!
m_PlyApplyTransform
ùùY l
)
ùùl m
;
ùùm n
	EditorGUI
ûû 
.
ûû 
EndDisabledGroup
ûû &
(
ûû& '
)
ûû' (
;
ûû( )&
m_PlyExportIsRightHanded
†† $
.
††$ %
value
††% *
=
††+ ,
EditorGUILayout
††- <
.
††< =
Toggle
††= C
(
††C D
$str
††D R
,
††R S&
m_PlyExportIsRightHanded
††T l
)
††l m
;
††m n

m_PlyQuads
°° 
.
°° 
value
°° 
=
°° 
EditorGUILayout
°° .
.
°°. /
Toggle
°°/ 5
(
°°5 6
$str
°°6 =
,
°°= >

m_PlyQuads
°°? I
)
°°I J
;
°°J K
}
¢¢ 	
void
§§  
AssetExportOptions
§§ 
(
§§  
)
§§  !
{
•• 	
var
¶¶ 
options
¶¶ 
=
¶¶ 
ExportAsset
¶¶ %
.
¶¶% &"
s_ExportAssetOptions
¶¶& :
.
¶¶: ;
value
¶¶; @
;
¶¶@ A
	EditorGUI
®® 
.
®® 
BeginChangeCheck
®® &
(
®®& '
)
®®' (
;
®®( )
options
©© 
.
©© 
replaceOriginal
©© #
=
©©$ %
EditorGUILayout
©©& 5
.
©©5 6
Toggle
©©6 <
(
©©< =#
gc_ExportAssetInPlace
©©= R
,
©©R S
options
©©T [
.
©©[ \
replaceOriginal
©©\ k
)
©©k l
;
©©l m
if
™™ 
(
™™ 
	EditorGUI
™™ 
.
™™ 
EndChangeCheck
™™ '
(
™™' (
)
™™( )
)
™™) *
ExportAsset
´´ 
.
´´ "
s_ExportAssetOptions
´´ 0
.
´´0 1
SetValue
´´1 9
(
´´9 :
options
´´: A
)
´´A B
;
´´B C
}
¨¨ 	
public
ÆÆ 
override
ÆÆ 
ActionResult
ÆÆ $
DoAction
ÆÆ% -
(
ÆÆ- .
)
ÆÆ. /
{
ØØ 	
string
∞∞ 
res
∞∞ 
=
∞∞ 
null
∞∞ 
;
∞∞ 
List
≤≤ 
<
≤≤ 
ProBuilderMesh
≤≤ 
>
≤≤  
meshes
≤≤! '
=
≤≤( )
m_ExportRecursive
≤≤* ;
?
≤≤< =
MeshSelection
≤≤> K
.
≤≤K L
deep
≤≤L P
.
≤≤P Q
ToList
≤≤Q W
(
≤≤W X
)
≤≤X Y
:
≤≤Z [
MeshSelection
≤≤\ i
.
≤≤i j
topInternal
≤≤j u
;
≤≤u v
if
¥¥ 
(
¥¥ 
meshes
¥¥ 
==
¥¥ 
null
¥¥ 
||
¥¥ !
!
¥¥" #
meshes
¥¥# )
.
¥¥) *
Any
¥¥* -
(
¥¥- .
)
¥¥. /
)
¥¥/ 0
return
µµ 
new
µµ 
ActionResult
µµ '
(
µµ' (
ActionResult
µµ( 4
.
µµ4 5
Status
µµ5 ;
.
µµ; <
Canceled
µµ< D
,
µµD E
$str
µµF Z
)
µµZ [
;
µµ[ \
if
∑∑ 
(
∑∑ 
m_ExportFormat
∑∑ 
==
∑∑ !
ExportFormat
∑∑" .
.
∑∑. /
Obj
∑∑/ 2
)
∑∑2 3
{
∏∏ 
res
ππ 
=
ππ 
	ExportObj
ππ 
.
ππ  "
ExportWithFileDialog
ππ  4
(
ππ4 5
meshes
ππ5 ;
,
ππ; <
m_ExportAsGroup
∫∫ '
,
∫∫' (

m_ObjQuads
ªª "
,
ªª" #
new
ºº 

ObjOptions
ºº &
(
ºº& '
)
ºº' (
{
ºº) *

handedness
ΩΩ 
=
ΩΩ  $
m_ObjExportRightHanded
ΩΩ! 7
?
ΩΩ8 9

ObjOptions
ΩΩ: D
.
ΩΩD E

Handedness
ΩΩE O
.
ΩΩO P
Right
ΩΩP U
:
ΩΩV W

ObjOptions
ΩΩX b
.
ΩΩb c

Handedness
ΩΩc m
.
ΩΩm n
Left
ΩΩn r
,
ΩΩr s
copyTextures
ææ  
=
ææ! "%
m_ObjExportCopyTextures
ææ# :
,
ææ: ;
applyTransforms
øø #
=
øø$ %
m_ExportAsGroup
øø& 5
||
øø6 8!
m_ObjApplyTransform
øø9 L
.
øøL M
value
øøM R
,
øøR S
vertexColors
¿¿  
=
¿¿! "%
m_ObjExportVertexColors
¿¿# :
,
¿¿: ; 
textureOffsetScale
¡¡ &
=
¡¡' (%
m_ObjTextureOffsetScale
¡¡) @
}
¬¬ 
)
¬¬ 
;
¬¬ 
}
√√ 
else
ƒƒ 
if
ƒƒ 
(
ƒƒ 
m_ExportFormat
ƒƒ #
==
ƒƒ$ &
ExportFormat
ƒƒ' 3
.
ƒƒ3 4
Stl
ƒƒ4 7
)
ƒƒ7 8
{
≈≈ 
res
∆∆ 
=
∆∆ 
ExportStlAscii
∆∆ $
.
∆∆$ %"
ExportWithFileDialog
∆∆% 9
(
∆∆9 :
meshes
∆∆: @
.
∆∆@ A
Select
∆∆A G
(
∆∆G H
x
∆∆H I
=>
∆∆J L
x
∆∆M N
.
∆∆N O

gameObject
∆∆O Y
)
∆∆Y Z
.
∆∆Z [
ToArray
∆∆[ b
(
∆∆b c
)
∆∆c d
,
∆∆d e
m_StlExportFormat
∆∆f w
)
∆∆w x
;
∆∆x y
}
«« 
else
»» 
if
»» 
(
»» 
m_ExportFormat
»» #
==
»»$ &
ExportFormat
»»' 3
.
»»3 4
Ply
»»4 7
)
»»7 8
{
…… 
res
   
=
   
	ExportPly
   
.
    "
ExportWithFileDialog
    4
(
  4 5
meshes
  5 ;
,
  ; <
m_ExportAsGroup
  = L
,
  L M
new
  N Q

PlyOptions
  R \
(
  \ ]
)
  ] ^
{
  _ `
isRightHanded
ÀÀ !
=
ÀÀ" #&
m_PlyExportIsRightHanded
ÀÀ$ <
,
ÀÀ< =
applyTransforms
ÃÃ #
=
ÃÃ$ %!
m_PlyApplyTransform
ÃÃ& 9
,
ÃÃ9 :
quads
ÕÕ 
=
ÕÕ 

m_PlyQuads
ÕÕ &
,
ÕÕ& '
ngons
ŒŒ 
=
ŒŒ 

m_PlyNGons
ŒŒ &
}
œœ 
)
œœ 
;
œœ 
}
–– 
else
—— 
if
—— 
(
—— 
m_ExportFormat
—— #
==
——$ &
ExportFormat
——' 3
.
——3 4
Asset
——4 9
||
——: <
m_ExportFormat
——= K
==
——L N
ExportFormat
——O [
.
——[ \
Prefab
——\ b
)
——b c
{
““ 
res
”” 
=
”” 
ExportAsset
”” !
.
””! ""
ExportWithFileDialog
””" 6
(
””6 7
meshes
””7 =
,
””= >
ExportAsset
””? J
.
””J K"
s_ExportAssetOptions
””K _
.
””_ `
value
””` e
)
””e f
;
””f g
}
‘‘ 
if
÷÷ 
(
÷÷ 
string
÷÷ 
.
÷÷ 
IsNullOrEmpty
÷÷ $
(
÷÷$ %
res
÷÷% (
)
÷÷( )
)
÷÷) *
return
◊◊ 
new
◊◊ 
ActionResult
◊◊ '
(
◊◊' (
ActionResult
◊◊( 4
.
◊◊4 5
Status
◊◊5 ;
.
◊◊; <
Canceled
◊◊< D
,
◊◊D E
$str
◊◊F P
)
◊◊P Q
;
◊◊Q R
PingExportedModel
ŸŸ 
(
ŸŸ 
res
ŸŸ !
)
ŸŸ! "
;
ŸŸ" #
return
€€ 
new
€€ 
ActionResult
€€ #
(
€€# $
ActionResult
€€$ 0
.
€€0 1
Status
€€1 7
.
€€7 8
Success
€€8 ?
,
€€? @
$str
€€A L
+
€€M N
m_ExportFormat
€€O ]
.
€€] ^
value
€€^ c
)
€€c d
;
€€d e
}
‹‹ 	
internal
ﬁﬁ 
static
ﬁﬁ 
void
ﬁﬁ 
PingExportedModel
ﬁﬁ .
(
ﬁﬁ. /
string
ﬁﬁ/ 5
path
ﬁﬁ6 :
)
ﬁﬁ: ;
{
ﬂﬂ 	
var
‡‡ 
local
‡‡ 
=
‡‡ 
path
‡‡ 
.
‡‡ 
Replace
‡‡ $
(
‡‡$ %
$str
‡‡% )
,
‡‡) *
$str
‡‡+ .
)
‡‡. /
;
‡‡/ 0
var
·· 
dataPath
·· 
=
·· 
Application
·· &
.
··& '
dataPath
··' /
.
··/ 0
Replace
··0 7
(
··7 8
$str
··8 <
,
··< =
$str
··> A
)
··A B
;
··B C
if
„„ 
(
„„ 
local
„„ 
.
„„ 
Contains
„„ 
(
„„ 
dataPath
„„ '
)
„„' (
)
„„( )
{
‰‰ 
AssetDatabase
ÂÂ 
.
ÂÂ 
Refresh
ÂÂ %
(
ÂÂ% &
)
ÂÂ& '
;
ÂÂ' (
var
ÊÊ 
	assetPath
ÊÊ 
=
ÊÊ 
$str
ÊÊ  (
+
ÊÊ) *
local
ÊÊ+ 0
.
ÊÊ0 1
Replace
ÊÊ1 8
(
ÊÊ8 9
dataPath
ÊÊ9 A
,
ÊÊA B
$str
ÊÊC E
)
ÊÊE F
;
ÊÊF G
var
ÁÁ 
o
ÁÁ 
=
ÁÁ 
AssetDatabase
ÁÁ %
.
ÁÁ% &
LoadAssetAtPath
ÁÁ& 5
<
ÁÁ5 6
Object
ÁÁ6 <
>
ÁÁ< =
(
ÁÁ= >
	assetPath
ÁÁ> G
)
ÁÁG H
;
ÁÁH I
if
ËË 
(
ËË 
o
ËË 
!=
ËË 
null
ËË 
)
ËË 
EditorGUIUtility
ÈÈ $
.
ÈÈ$ %

PingObject
ÈÈ% /
(
ÈÈ/ 0
o
ÈÈ0 1
)
ÈÈ1 2
;
ÈÈ2 3
}
ÍÍ 
}
ÎÎ 	
}
ÏÏ 
}ÌÌ û6
õD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Editors\NewPolyShape.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
NewPolyShape 
: 

MenuAction  *
{ 
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
ToolG K
;K L
}M N
}O P
public 
override 
	Texture2D !
icon" &
{' (
get) ,
{- .
return/ 5
IconUtility6 A
.A B
GetIconB I
(I J
$strJ `
,` a
IconSkinb j
.j k
Prok n
)n o
;o p
}q r
}s t
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
_tooltip> F
;F G
}H I
}J K
public 
override 
string 
	menuTitle (
{) *
get+ .
{/ 0
return1 7
$str8 H
;H I
}J K
}L M
public 
override 
int 
toolbarPriority +
{, -
get. 1
{2 3
return4 :
$num; <
;< =
}> ?
}@ A
static 
readonly 
TooltipContent &
_tooltip' /
=0 1
new2 5
TooltipContent6 D
( 
$str #
,# $
$str S
) 
; 
public 
override 
bool 
hidden #
{ 	
get 
{ 
return 
false 
; 
}  !
} 	
public   
override   
bool   
enabled   $
{!! 	
get"" 
{"" 
return"" 
true"" 
;"" 
}""  
}## 	
static%% 
bool%% !
CanCreateNewPolyShape%% )
(%%) *
)%%* +
{&& 	
var,, 
inspWindows,, 
=,, 
InspectorWindow,, -
.,,- .
GetInspectors,,. ;
(,,; <
),,< =
;,,= >
if.. 
(.. 
inspWindows.. 
... 
Any.. 
(..  
x..  !
=>.." $
x..% &
...& '
isLocked..' /
)../ 0
)..0 1
{// 
if00 
(00 
UnityEditor00 
.00  
EditorUtility00  -
.00- .
DisplayDialog00. ;
(00; <
L10n11$ (
.11( )
Tr11) +
(11+ ,
$str11, >
)11> ?
,11? @
L10n22$ (
.22( )
Tr22) +
(22+ ,
$str	22, ´
)
22´ ¨
,
22¨ ≠
L10n33$ (
.33( )
Tr33) +
(33+ ,
$str33, 4
)334 5
,335 6
L10n44$ (
.44( )
Tr44) +
(44+ ,
$str44, 4
)444 5
)445 6
)446 7
{55 
foreach66 
(66 
var66  
insp66! %
in66& (
inspWindows66) 4
)664 5
insp77 
.77 
isLocked77 %
=77& '
false77( -
;77- .
}88 
else99 
{:: 
return;; 
false;;  
;;;  !
}<< 
}== 
return^^ 
true^^ 
;^^ 
}__ 	
publicaa 
overrideaa 
ActionResultaa $
DoActionaa% -
(aa- .
)aa. /
{bb 	
ifcc 
(cc 
!cc !
CanCreateNewPolyShapecc &
(cc& '
)cc' (
)cc( )
returndd 
newdd 
ActionResultdd '
(dd' (
ActionResultdd( 4
.dd4 5
Statusdd5 ;
.dd; <
Canceleddd< D
,ddD E
$strddF b
)ddb c
;ddc d

GameObjectff 
goff 
=ff 
newff 

GameObjectff  *
(ff* +
)ff+ ,
;ff, -
UndoUtilitygg 
.gg %
RegisterCreatedObjectUndogg 1
(gg1 2
gogg2 4
,gg4 5
$strgg6 I
)ggI J
;ggJ K
	PolyShapehh 
polyhh 
=hh 
Undohh !
.hh! "
AddComponenthh" .
<hh. /
	PolyShapehh/ 8
>hh8 9
(hh9 :
gohh: <
)hh< =
;hh= >
ProBuilderMeshii 
pbii 
=ii 
Undoii  $
.ii$ %
AddComponentii% 1
<ii1 2
ProBuilderMeshii2 @
>ii@ A
(iiA B
goiiB D
)iiD E
;iiE F
pbjj 
.jj "
CreateShapeFromPolygonjj %
(jj% &
polyjj& *
.jj* +
m_Pointsjj+ 3
,jj3 4
polyjj5 9
.jj9 :
extrudejj: A
,jjA B
polyjjC G
.jjG H
flipNormalsjjH S
)jjS T
;jjT U
EditorUtilitykk 
.kk 

InitObjectkk $
(kk$ %
pbkk% '
)kk' (
;kk( )
ifoo 
(oo 
ProGridsInterfaceoo !
.oo! "
SnapEnabledoo" -
(oo- .
)oo. /
||oo0 2
ProGridsInterfaceoo3 D
.ooD E
GridVisibleooE P
(ooP Q
)ooQ R
)ooR S
{pp 
Vector3qq 
pivotqq 
;qq 
ifrr 
(rr 
ProGridsInterfacerr %
.rr% &
GetPivotrr& .
(rr. /
outrr/ 2
pivotrr3 8
)rr8 9
)rr9 :
goss 
.ss 
	transformss  
.ss  !
positionss! )
=ss* +
pivotss, 1
;ss1 2
}tt 
MeshSelectionuu 
.uu 
SetSelectionuu &
(uu& '
gouu' )
)uu) *
;uu* +
polyvv 
.vv 
polyEditModevv 
=vv 
	PolyShapevv  )
.vv) *
PolyEditModevv* 6
.vv6 7
Pathvv7 ;
;vv; <
returnxx 
newxx 
ActionResultxx #
(xx# $
ActionResultxx$ 0
.xx0 1
Statusxx1 7
.xx7 8
Successxx8 ?
,xx? @
$strxxA T
)xxT U
;xxU V
}yy 	
}zz 
}{{ ©
§D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\VertexManipulationToolSettings.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
[ 
InitializeOnLoad 
] 
static 

class *
VertexManipulationToolSettings /
{ 
const 
bool &
k_EnableHandleSettingInput -
=. /
true0 4
;4 5
static

 *
VertexManipulationToolSettings

 -
(

- .
)

. /
{ 	
	SceneView 
. 
duringSceneGui $
+=% '

OnSceneGUI( 2
;2 3
} 	
static 
void 

OnSceneGUI 
( 
	SceneView (
view) -
)- .
{ 	
if 
( 
! 
EditorUtility 
. 
IsDeveloperMode .
(. /
)/ 0
|| 
! "
VertexManipulationTool *
.* +%
showHandleSettingsInScene+ D
|| 
view 
!= 
	SceneView $
.$ %
lastActiveSceneView% 8
)8 9
return 
; 
DoHandleSettings 
( 
new  
Rect! %
(% &
$num 
, 
view 
. 
position !
.! "
height" (
-) *
$num+ -
,- .
$num 
, 
$num 
) 
) 
; 
} 	
static!! 
void!! 
DoHandleSettings!! $
(!!$ %
Rect!!% )
rect!!* .
)!!. /
{"" 	
Handles## 
.## 
BeginGUI## 
(## 
)## 
;## 
using$$ 
($$ 
new$$ 
	EditorGUI$$  
.$$  !
DisabledScope$$! .
($$. /&
k_EnableHandleSettingInput$$/ I
)$$I J
)$$J K
{%% 
	GUILayout&& 
.&& 
	BeginArea&& #
(&&# $
rect&&$ (
)&&( )
;&&) *
	EditorGUI'' 
.'' 
BeginChangeCheck'' *
(''* +
)''+ ,
;'', -
	GUILayout)) 
.)) 
BeginHorizontal)) )
())) *
)))* +
;))+ ,
EditorGUIUtility**  
.**  !

labelWidth**! +
=**, -
$num**. 0
;**0 1
EditorGUILayout,, 
.,,  
	EnumPopup,,  )
(,,) *
$str,,* 7
,,,7 8"
VertexManipulationTool,,9 O
.,,O P

pivotPoint,,P Z
),,Z [
;,,[ \
EditorGUILayout-- 
.--  
	EnumPopup--  )
(--) *
$str--* 7
,--7 8"
VertexManipulationTool--9 O
.--O P
handleOrientation--P a
)--a b
;--b c
EditorGUIUtility//  
.//  !

labelWidth//! +
=//, -
$num//. /
;/// 0
	GUILayout00 
.00 
EndHorizontal00 '
(00' (
)00( )
;00) *
if22 
(22 
	EditorGUI22 
.22 
EndChangeCheck22 ,
(22, -
)22- .
)22. /
ProBuilderEditor33 $
.33$ %
Refresh33% ,
(33, -
)33- .
;33. /
	GUILayout44 
.44 
EndArea44 !
(44! "
)44" #
;44# $
}55 
Handles66 
.66 
EndGUI66 
(66 
)66 
;66 
}77 	
}88 
}99 ∫6
òD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\ConfigurableWindow.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
abstract 
class 
ConfigurableWindow %
:& '
EditorWindow( 4
,4 5
IHasCustomMenu6 D
{ 
	protected 
virtual 
bool "
defaultIsUtilityWindow 5
{ 	
get		 
{		 
return		 
false		 
;		 
}		  !
}

 	
string 
utilityWindowKey 
{ 	
get 
{ 
return 
GetType  
(  !
)! "
." #
ToString# +
(+ ,
), -
+. /
$str0 B
;B C
}D E
} 	
	protected 
static 
bool 
IsUtilityWindow -
<- .
T. /
>/ 0
(0 1
bool1 5
defaultIsUtility6 F
=G H
falseI N
)N O
whereP U
TV W
:X Y
ConfigurableWindowZ l
{ 	
return 
ProBuilderSettings %
.% &
Get& )
<) *
bool* .
>. /
(/ 0
typeof0 6
(6 7
T7 8
)8 9
.9 :
ToString: B
(B C
)C D
+E F
$strG Y
,Y Z
SettingsScope[ h
.h i
Projecti p
,p q
defaultIsUtility	r Ç
)
Ç É
;
É Ñ
} 	
public 
static 
new 
T 
	GetWindow %
<% &
T& '
>' (
(( )
string) /
title0 5
,5 6
bool7 ;
focus< A
=B C
trueD H
)H I
whereJ O
TP Q
:R S
ConfigurableWindowT f
{ 	
return 
EditorWindow 
.  
	GetWindow  )
<) *
T* +
>+ ,
(, -
IsUtilityWindow- <
<< =
T= >
>> ?
(? @
)@ A
,A B
titleC H
,H I
focusJ O
)O P
;P Q
} 	
public 
static 
new 
T 
	GetWindow %
<% &
T& '
>' (
(( )
bool) -
utility. 5
,5 6
string7 =
title> C
,C D
boolE I
focusJ O
)O P
whereQ V
TW X
:Y Z
ConfigurableWindow[ m
{ 	
return   
EditorWindow   
.    
	GetWindow    )
<  ) *
T  * +
>  + ,
(  , -
IsUtilityWindow  - <
<  < =
T  = >
>  > ?
(  ? @
utility  @ G
)  G H
,  H I
title  J O
,  O P
focus  Q V
)  V W
;  W X
}!! 	
public## 
virtual## 
void## 
AddItemsToMenu## *
(##* +
GenericMenu##+ 6
menu##7 ;
)##; <
{$$ 	
bool%% 
floating%% 
=%% 
ProBuilderSettings%% .
.%%. /
Get%%/ 2
<%%2 3
bool%%3 7
>%%7 8
(%%8 9
utilityWindowKey%%9 I
,%%I J
SettingsScope%%K X
.%%X Y
Project%%Y `
,%%` a
false%%b g
)%%g h
;%%h i
if'' 
('' 
menu'' 
.'' 
GetItemCount'' !
(''! "
)''" #
>''$ %
$num''& '
)''' (
menu(( 
.(( 
AddSeparator(( !
(((! "
$str((" $
)(($ %
;((% &
menu** 
.** 
AddItem** 
(** 
new** 

GUIContent** '
(**' (
$str**( A
,**A B
$str**C E
)**E F
,**F G
floating**H P
,**P Q
(**R S
)**S T
=>**U W
SetIsUtilityWindow**X j
(**j k
true**k o
)**o p
)**p q
;**q r
menu++ 
.++ 
AddItem++ 
(++ 
new++ 

GUIContent++ '
(++' (
$str++( A
,++A B
$str++C E
)++E F
,++F G
!++H I
floating++I Q
,++Q R
(++S T
)++T U
=>++V X
SetIsUtilityWindow++Y k
(++k l
false++l q
)++q r
)++r s
;++s t
menu-- 
.-- 
AddSeparator-- 
(-- 
$str--  
)--  !
;--! "
}.. 	
	protected00 
void00 
DoContextMenu00 $
(00$ %
)00% &
{11 	
var22 
e22 
=22 
Event22 
.22 
current22 !
;22! "
if44 
(44 
e44 
.44 
type44 
==44 
	EventType44 #
.44# $
ContextClick44$ 0
)440 1
{55 
var66 
menu66 
=66 
new66 
GenericMenu66 *
(66* +
)66+ ,
;66, -
AddItemsToMenu77 
(77 
menu77 #
)77# $
;77$ %
menu88 
.88 
ShowAsContext88 "
(88" #
)88# $
;88$ %
}99 
}:: 	
void<< 
SetIsUtilityWindow<< 
(<<  
bool<<  $
isUtilityWindow<<% 4
)<<4 5
{== 	
ProBuilderSettings>> 
.>> 
Set>> "
<>>" #
bool>># '
>>>' (
(>>( )
utilityWindowKey>>) 9
,>>9 :
isUtilityWindow>>; J
,>>J K
SettingsScope>>L Y
.>>Y Z
Project>>Z a
)>>a b
;>>b c
ProBuilderSettings?? 
.?? 
Save?? #
(??# $
)??$ %
;??% &
var@@ 
title@@ 
=@@ 
titleContent@@ $
;@@$ %
CloseAA 
(AA 
)AA 
;AA 
varBB 
resBB 
=BB 
	GetWindowBB 
(BB  
GetTypeBB  '
(BB' (
)BB( )
,BB) *
isUtilityWindowBB+ :
)BB: ;
;BB; <
resCC 
.CC 
titleContentCC 
=CC 
titleCC $
;CC$ %
}DD 	
}EE 
}FF ç5
öD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\BevelEdges.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed		 

class		 

BevelEdges		 
:		 

MenuAction		 (
{

 
Pref 
< 
float 
> 
m_BevelSize 
=  !
new" %
Pref& *
<* +
float+ 0
>0 1
(1 2
$str2 C
,C D
$numE H
)H I
;I J
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
GeometryG O
;O P
}Q R
}S T
public 
override 
	Texture2D !
icon" &
{' (
get) ,
{- .
return/ 5
IconUtility6 A
.A B
GetIconB I
(I J
$strJ ^
,^ _
IconSkin` h
.h i
Proi l
)l m
;m n
}o p
}q r
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
	s_Tooltip> G
;G H
}I J
}K L
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str 
, 
$str h
) 
; 
public 
override 

SelectMode "
validSelectModes# 3
{ 	
get 
{ 
return 

SelectMode #
.# $
Edge$ (
|) *

SelectMode+ 5
.5 6
Face6 :
;: ;
}< =
} 	
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
base 
. 
enabled %
&&& (
MeshSelection) 6
.6 7
selectedEdgeCount7 H
>I J
$numK L
;L M
}N O
} 	
	protected!! 
override!! 
MenuActionState!! *
optionsMenuState!!+ ;
{"" 	
get## 
{## 
return## 
MenuActionState## (
.##( )
VisibleAndEnabled##) :
;##: ;
}##< =
}$$ 	
	protected&& 
override&& 
void&& 
OnSettingsGUI&&  -
(&&- .
)&&. /
{'' 	
	GUILayout(( 
.(( 
Label(( 
((( 
$str(( 1
,((1 2
EditorStyles((3 ?
.((? @
	boldLabel((@ I
)((I J
;((J K
EditorGUILayout** 
.** 
HelpBox** #
(**# $
$str	**$ Å
,
**Å Ç
MessageType
**É é
.
**é è
Info
**è ì
)
**ì î
;
**î ï
	EditorGUI,, 
.,, 
BeginChangeCheck,, &
(,,& '
),,' (
;,,( )
m_BevelSize.. 
... 
value.. 
=.. 
UI..  "
..." #
EditorGUIUtility..# 3
...3 4

FreeSlider..4 >
(..> ?
$str..? I
,..I J
m_BevelSize..K V
,..V W
$num..X ]
,..] ^
$num.._ c
)..c d
;..d e
if00 
(00 
m_BevelSize00 
<00 
$num00 #
)00# $
m_BevelSize11 
.11 
value11 !
=11" #
$num11$ )
;11) *
if33 
(33 
	EditorGUI33 
.33 
EndChangeCheck33 (
(33( )
)33) *
)33* +
ProBuilderSettings44 "
.44" #
Save44# '
(44' (
)44( )
;44) *
	GUILayout66 
.66 
FlexibleSpace66 #
(66# $
)66$ %
;66% &
if88 
(88 
	GUILayout88 
.88 
Button88  
(88  !
$str88! .
)88. /
)88/ 0
DoAction99 
(99 
)99 
;99 
}:: 	
public<< 
override<< 
ActionResult<< $
DoAction<<% -
(<<- .
)<<. /
{== 	
ActionResult>> 
res>> 
=>> 
ActionResult>> +
.>>+ ,
NoSelection>>, 7
;>>7 8
UndoUtility@@ 
.@@ 
RecordSelection@@ '
(@@' (
$str@@( 5
)@@5 6
;@@6 7
foreachBB 
(BB 
ProBuilderMeshBB #
pbBB$ &
inBB' )
MeshSelectionBB* 7
.BB7 8
topInternalBB8 C
)BBC D
{CC 
pbDD 
.DD 
ToMeshDD 
(DD 
)DD 
;DD 
ListFF 
<FF 
FaceFF 
>FF 
facesFF  
=FF! "
BevelFF# (
.FF( )

BevelEdgesFF) 3
(FF3 4
pbFF4 6
,FF6 7
pbFF8 :
.FF: ;
selectedEdgesFF; H
,FFH I
m_BevelSizeFFJ U
)FFU V
;FFV W
resGG 
=GG 
facesGG 
!=GG 
nullGG #
?GG$ %
newGG& )
ActionResultGG* 6
(GG6 7
ActionResultGG7 C
.GGC D
StatusGGD J
.GGJ K
SuccessGGK R
,GGR S
$strGGT a
)GGa b
:GGc d
newGGe h
ActionResultGGi u
(GGu v
ActionResult	GGv Ç
.
GGÇ É
Status
GGÉ â
.
GGâ ä
Failure
GGä ë
,
GGë í
$str
GGì ß
)
GGß ®
;
GG® ©
ifII 
(II 
resII 
)II 
pbJJ 
.JJ 
SetSelectedFacesJJ '
(JJ' (
facesJJ( -
)JJ- .
;JJ. /
pbLL 
.LL 
RefreshLL 
(LL 
)LL 
;LL 
pbMM 
.MM 
OptimizeMM 
(MM 
)MM 
;MM 
}NN 
ProBuilderEditorPP 
.PP 
RefreshPP $
(PP$ %
)PP% &
;PP& '
returnRR 
resRR 
;RR 
}SS 	
}TT 
}UU ò,
ùD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Object\FreezeTransform.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{		 
sealed

 

class

 
FreezeTransform

  
:

! "

MenuAction

# -
{ 
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Object& ,
;, -
}. /
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- B
,B C
IconSkinD L
.L M
ProM P
)P Q
;Q R
}S T
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str "
," #
$str	 É
) 
; 
public!! 
override!! 
bool!! 
enabled!! $
{"" 	
get## 
{## 
return## 
base## 
.## 
enabled## %
&&##& (
MeshSelection##) 6
.##6 7
selectedObjectCount##7 J
>##K L
$num##M N
;##N O
}##P Q
}$$ 	
public&& 
override&& 
ActionResult&& $
DoAction&&% -
(&&- .
)&&. /
{'' 	
if(( 
((( 
MeshSelection(( 
.(( 
selectedObjectCount(( 1
<((2 3
$num((4 5
)((5 6
return)) 
ActionResult)) #
.))# $
NoSelection))$ /
;))/ 0
UndoUtility++ 
.++ +
RecordMeshAndTransformSelection++ 7
(++7 8
$str++8 K
)++K L
;++L M
var-- 
	selection-- 
=-- 
MeshSelection-- )
.--) *
topInternal--* 5
;--5 6
Vector3.. 
[.. 
].. 
[.. 
].. 
	positions.. !
=.." #
new..$ '
Vector3..( /
[../ 0
	selection..0 9
...9 :
Count..: ?
]..? @
[..@ A
]..A B
;..B C
for00 
(00 
int00 
i00 
=00 
$num00 
,00 
c00 
=00 
	selection00  )
.00) *
Count00* /
;00/ 0
i001 2
<003 4
c005 6
;006 7
i008 9
++009 ;
)00; <
	positions11 
[11 
i11 
]11 
=11 
	selection11 (
[11( )
i11) *
]11* +
.11+ , 
VerticesInWorldSpace11, @
(11@ A
)11A B
;11B C
for33 
(33 
int33 
i33 
=33 
$num33 
,33 
c33 
=33 
	selection33  )
.33) *
Count33* /
;33/ 0
i331 2
<333 4
c335 6
;336 7
i338 9
++339 ;
)33; <
{44 
ProBuilderMesh55 
pb55 !
=55" #
	selection55$ -
[55- .
i55. /
]55/ 0
;550 1
pb77 
.77 
	transform77 
.77 
position77 %
=77& '
Vector377( /
.77/ 0
zero770 4
;774 5
pb88 
.88 
	transform88 
.88 
rotation88 %
=88& '

Quaternion88( 2
.882 3
identity883 ;
;88; <
pb99 
.99 
	transform99 
.99 

localScale99 '
=99( )
Vector399* 1
.991 2
one992 5
;995 6
foreach;; 
(;; 
Face;; 
face;; "
in;;# %
pb;;& (
.;;( )
facesInternal;;) 6
);;6 7
face<< 
.<< 
manualUV<< !
=<<" #
true<<$ (
;<<( )
pb>> 
.>> 
	positions>> 
=>> 
	positions>> (
[>>( )
i>>) *
]>>* +
;>>+ ,
pb@@ 
.@@ 
ToMesh@@ 
(@@ 
)@@ 
;@@ 
pbAA 
.AA 
RefreshAA 
(AA 
)AA 
;AA 
pbBB 
.BB 
OptimizeBB 
(BB 
)BB 
;BB 
}CC 
ProBuilderEditorEE 
.EE 
RefreshEE $
(EE$ %
)EE% &
;EE& '
	SceneViewGG 
.GG 

RepaintAllGG  
(GG  !
)GG! "
;GG" #
returnII 
newII 
ActionResultII #
(II# $
ActionResultII$ 0
.II0 1
StatusII1 7
.II7 8
SuccessII8 ?
,II? @
$strIIA T
)IIT U
;IIU V
}JJ 	
}KK 
}LL Ø#
ùD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Editors\NewBezierShape.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
NewBezierShape 
:  !

MenuAction" ,
{ 
const 
string 

k_IconPath 
=  !
$str" ;
;; <
public

 
override

 
ToolbarGroup

 $
group

% *
{

+ ,
get

- 0
{

1 2
return

3 9
ToolbarGroup

: F
.

F G
Tool

G K
;

K L
}

M N
}

O P
public 
override 
	Texture2D !
icon" &
{' (
get) ,
{- .
return/ 5
IconUtility6 A
.A B
GetIconB I
(I J

k_IconPathJ T
,T U
IconSkinV ^
.^ _
Pro_ b
)b c
;c d
}e f
}g h
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
_tooltip> F
;F G
}H I
}J K
public 
override 
string 
	menuTitle (
{) *
get+ .
{/ 0
return1 7
$str8 J
;J K
}L M
}N O
public 
override 
int 
toolbarPriority +
{, -
get. 1
{2 3
return4 :
$num; <
;< =
}> ?
}@ A
static 
readonly 
TooltipContent &
_tooltip' /
=0 1
new2 5
TooltipContent6 D
( 
$str "
," #
$str W
) 
; 
public 
override 
bool 
hidden #
{ 	
get 
{ 
return 
! 
Experimental &
.& ''
experimentalFeaturesEnabled' B
;B C
}D E
} 	
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
true 
; 
}  
} 	
public   
override   
ActionResult   $
DoAction  % -
(  - .
)  . /
{!! 	

GameObject"" 
go"" 
="" 
new"" 

GameObject""  *
(""* +
)""+ ,
;"", -
var## 
bezier## 
=## 
go## 
.## 
AddComponent## (
<##( )
BezierShape##) 4
>##4 5
(##5 6
)##6 7
;##7 8
go$$ 
.$$ 
GetComponent$$ 
<$$ 
MeshRenderer$$ (
>$$( )
($$) *
)$$* +
.$$+ ,
sharedMaterial$$, :
=$$; <!
EditorMaterialUtility$$= R
.$$R S
GetUserMaterial$$S b
($$b c
)$$c d
;$$d e
bezier%% 
.%% 
Init%% 
(%% 
)%% 
;%% 
bezier&& 
.&& 
Refresh&& 
(&& 
)&& 
;&& 
EditorUtility'' 
.'' 

InitObject'' $
(''$ %
bezier''% +
.''+ ,
GetComponent'', 8
<''8 9
ProBuilderMesh''9 G
>''G H
(''H I
)''I J
)''J K
;''K L
MeshSelection(( 
.(( 
SetSelection(( &
(((& '
go((' )
)(() *
;((* +
UndoUtility)) 
.)) %
RegisterCreatedObjectUndo)) 1
())1 2
go))2 4
,))4 5
$str))6 K
)))K L
;))L M
bezier** 
.** 
	isEditing** 
=** 
true** #
;**# $
return,, 
new,, 
ActionResult,, #
(,,# $
ActionResult,,$ 0
.,,0 1
Status,,1 7
.,,7 8
Success,,8 ?
,,,? @
$str,,A V
),,V W
;,,W X
}-- 	
}.. 
}// €Y
ìD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\EntityUtility.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{		 
static

 

class

 
EntityUtility

 
{ 
const 
StaticEditorFlags !
StaticEditorFlags_All  5
=6 7
StaticEditorFlags 
. 
ContributeGI *
|+ ,
StaticEditorFlags 
. 
OccluderStatic ,
|- .
StaticEditorFlags 
. 
BatchingStatic ,
|- .
StaticEditorFlags 
. 
OccludeeStatic ,
|- .
StaticEditorFlags 
. 
NavigationStatic .
|/ 0
StaticEditorFlags 
. !
OffMeshLinkGeneration 3
|4 5
StaticEditorFlags 
. !
ReflectionProbeStatic 3
;3 4
[ 	
Obsolete	 
( 
$str r
)r s
]s t
public 
static 
void 
SetEntityType (
(( )

EntityType) 3
newEntityType4 A
,A B

GameObjectC M
targetN T
)T U
{   	
Entity!! 
ent!! 
=!! 
target!! 
.!!  
GetComponent!!  ,
<!!, -
Entity!!- 3
>!!3 4
(!!4 5
)!!5 6
;!!6 7
if## 
(## 
ent## 
==## 
null## 
)## 
ent$$ 
=$$ 
target$$ 
.$$ 
AddComponent$$ )
<$$) *
Entity$$* 0
>$$0 1
($$1 2
)$$2 3
;$$3 4
ProBuilderMesh&& 
pb&& 
=&& 
target&&  &
.&&& '
GetComponent&&' 3
<&&3 4
ProBuilderMesh&&4 B
>&&B C
(&&C D
)&&D E
;&&E F
if(( 
((( 
!(( 
ent(( 
||(( 
!(( 
pb(( 
)(( 
return)) 
;)) 
SetEditorFlags++ 
(++ !
StaticEditorFlags_All++ 0
,++0 1
target++2 8
)++8 9
;++9 :
switch-- 
(-- 
newEntityType-- !
)--! "
{.. 
case// 

EntityType// 
.//  
Detail//  &
://& '
case00 

EntityType00 
.00  
Occluder00  (
:00( )
SetBrush11 
(11 
target11 #
)11# $
;11$ %
break22 
;22 
case44 

EntityType44 
.44  
Trigger44  '
:44' (

SetTrigger55 
(55 
target55 %
)55% &
;55& '
break66 
;66 
case88 

EntityType88 
.88  
Collider88  (
:88( )
SetCollider99 
(99  
target99  &
)99& '
;99' (
break:: 
;:: 
case<< 

EntityType<< 
.<<  
Mover<<  %
:<<% &

SetDynamic== 
(== 
target== %
)==% &
;==& '
break>> 
;>> 
}?? 
entAA 
.AA 
	SetEntityAA 
(AA 
newEntityTypeAA '
)AA' (
;AA( )
}BB 	
[DD 	
ObsoleteDD	 
(DD 
$strDD r
)DDr s
]DDs t
staticEE 
voidEE 
SetBrushEE 
(EE 

GameObjectEE '
targetEE( .
)EE. /
{FF 	

EntityTypeGG 
etGG 
=GG 
targetGG "
.GG" #
GetComponentGG# /
<GG/ 0
EntityGG0 6
>GG6 7
(GG7 8
)GG8 9
.GG9 :

entityTypeGG: D
;GGD E
ifII 
(II 
etII 
==II 

EntityTypeII  
.II  !
TriggerII! (
||II) +
etJJ 
==JJ 

EntityTypeJJ  
.JJ  !
ColliderJJ! )
)JJ) *
{KK 
ProBuilderMeshLL 
pbLL !
=LL" #
targetLL$ *
.LL* +
GetComponentLL+ 7
<LL7 8
ProBuilderMeshLL8 F
>LLF G
(LLG H
)LLH I
;LLI J
foreachMM 
(MM 
varMM 
faceMM !
inMM" $
pbMM% '
.MM' (
facesInternalMM( 5
)MM5 6
faceNN 
.NN 
materialNN !
=NN" #
BuiltinMaterialsNN$ 4
.NN4 5
defaultMaterialNN5 D
;NND E
pbOO 
.OO 
ToMeshOO 
(OO 
)OO 
;OO 
pbPP 
.PP 
RefreshPP 
(PP 
)PP 
;PP 
}QQ 
}RR 	
[TT 	
ObsoleteTT	 
(TT 
$strTT r
)TTr s
]TTs t
staticUU 
voidUU 

SetDynamicUU 
(UU 

GameObjectUU )
targetUU* 0
)UU0 1
{VV 	

EntityTypeWW 
etWW 
=WW 
targetWW "
.WW" #
GetComponentWW# /
<WW/ 0
EntityWW0 6
>WW6 7
(WW7 8
)WW8 9
.WW9 :

entityTypeWW: D
;WWD E
SetEditorFlagsYY 
(YY 
(YY 
StaticEditorFlagsYY -
)YY- .
$numYY. /
,YY/ 0
targetYY1 7
)YY7 8
;YY8 9
if[[ 
([[ 
et[[ 
==[[ 

EntityType[[  
.[[  !
Trigger[[! (
||[[) +
et\\ 
==\\ 

EntityType\\  
.\\  !
Collider\\! )
)\\) *
{]] 
ProBuilderMesh^^ 
pb^^ !
=^^" #
target^^$ *
.^^* +
GetComponent^^+ 7
<^^7 8
ProBuilderMesh^^8 F
>^^F G
(^^G H
)^^H I
;^^I J
foreach__ 
(__ 
var__ 
face__ !
in__" $
pb__% '
.__' (
facesInternal__( 5
)__5 6
face`` 
.`` 
material`` !
=``" #
BuiltinMaterials``$ 4
.``4 5
defaultMaterial``5 D
;``D E
pbbb 
.bb 
ToMeshbb 
(bb 
)bb 
;bb 
pbcc 
.cc 
Refreshcc 
(cc 
)cc 
;cc 
}dd 
}ee 	
[gg 	
Obsoletegg	 
(gg 
$strgg r
)ggr s
]ggs t
statichh 
voidhh 

SetTriggerhh 
(hh 

GameObjecthh )
targethh* 0
)hh0 1
{ii 	
ProBuilderMeshjj 
pbjj 
=jj 
targetjj  &
.jj& '
GetComponentjj' 3
<jj3 4
ProBuilderMeshjj4 B
>jjB C
(jjC D
)jjD E
;jjE F
foreachkk 
(kk 
varkk 
facekk 
inkk  
pbkk! #
.kk# $
facesInternalkk$ 1
)kk1 2
facell 
.ll 
materialll 
=ll 
BuiltinMaterialsll  0
.ll0 1
triggerMaterialll1 @
;ll@ A
SetIsTriggermm 
(mm 
truemm 
,mm 
targetmm %
)mm% &
;mm& '
SetEditorFlagsnn 
(nn 
(nn 
StaticEditorFlagsnn -
)nn- .
$numnn. /
,nn/ 0
targetnn1 7
)nn7 8
;nn8 9
pbpp 
.pp 
ToMeshpp 
(pp 
)pp 
;pp 
pbqq 
.qq 
Refreshqq 
(qq 
)qq 
;qq 
}rr 	
[tt 	
Obsoletett	 
(tt 
$strtt r
)ttr s
]tts t
staticuu 
voiduu 
SetCollideruu 
(uu  

GameObjectuu  *
targetuu+ 1
)uu1 2
{vv 	
ProBuilderMeshww 
pbww 
=ww 
targetww  &
.ww& '
GetComponentww' 3
<ww3 4
ProBuilderMeshww4 B
>wwB C
(wwC D
)wwD E
;wwE F
foreachxx 
(xx 
varxx 
facexx 
inxx  
pbxx! #
.xx# $
facesInternalxx$ 1
)xx1 2
faceyy 
.yy 
materialyy 
=yy 
BuiltinMaterialsyy  0
.yy0 1
colliderMaterialyy1 A
;yyA B
pbzz 
.zz 
ToMeshzz 
(zz 
)zz 
;zz 
pb{{ 
.{{ 
Refresh{{ 
({{ 
){{ 
;{{ 
SetEditorFlags}} 
(}} 
(}} 
StaticEditorFlags}} -
)}}- .
(}}. /
StaticEditorFlags}}/ @
.}}@ A
NavigationStatic}}A Q
|}}R S
StaticEditorFlags}}T e
.}}e f!
OffMeshLinkGeneration}}f {
)}}{ |
,}}| }
target~~ 
)~~ 
;~~ 
} 	
[
ÅÅ 	
Obsolete
ÅÅ	 
(
ÅÅ 
$str
ÅÅ r
)
ÅÅr s
]
ÅÅs t
static
ÇÇ 
void
ÇÇ 
SetEditorFlags
ÇÇ "
(
ÇÇ" #
StaticEditorFlags
ÇÇ# 4
editorFlags
ÇÇ5 @
,
ÇÇ@ A

GameObject
ÇÇB L
target
ÇÇM S
)
ÇÇS T
{
ÉÉ 	
GameObjectUtility
ÑÑ 
.
ÑÑ "
SetStaticEditorFlags
ÑÑ 2
(
ÑÑ2 3
target
ÑÑ3 9
,
ÑÑ9 :
editorFlags
ÑÑ; F
)
ÑÑF G
;
ÑÑG H
}
ÖÖ 	
[
áá 	
Obsolete
áá	 
(
áá 
$str
áá r
)
áár s
]
áás t
static
àà 
void
àà 
SetIsTrigger
àà  
(
àà  !
bool
àà! %
val
àà& )
,
àà) *

GameObject
àà+ 5
target
àà6 <
)
àà< =
{
ââ 	
Collider
ää 
[
ää 
]
ää 
	colliders
ää  
=
ää! "
InternalUtility
ää# 2
.
ää2 3
GetComponents
ää3 @
<
ää@ A
Collider
ääA I
>
ääI J
(
ääJ K
target
ääK Q
)
ääQ R
;
ääR S
foreach
ãã 
(
ãã 
Collider
ãã 
col
ãã !
in
ãã" $
	colliders
ãã% .
)
ãã. /
{
åå 
if
çç 
(
çç 
val
çç 
&&
çç 
col
çç 
is
çç !
MeshCollider
çç" .
)
çç. /
(
éé 
(
éé 
MeshCollider
éé "
)
éé" #
col
éé# &
)
éé& '
.
éé' (
convex
éé( .
=
éé/ 0
true
éé1 5
;
éé5 6
col
èè 
.
èè 
	isTrigger
èè 
=
èè 
val
èè  #
;
èè# $
}
êê 
}
ëë 	
}
íí 
}ìì …X
ïD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\TextureMoveTool.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
class		 	
TextureMoveTool		
 
:		 
TextureTool		 '
{

 
static 
readonly 
float 
k_Vector3Magnitude 0
=1 2
Vector33 :
.: ;
one; >
.> ?
	magnitude? H
;H I
Vector3 

m_Position 
= 
Vector3 $
.$ %
zero% )
;) *
	protected 
class %
TranslateTextureSelection 1
:2 3
MeshAndTextures4 C
{ 	
SimpleTuple 
< 
Face 
, 
Vector2 %
>% &
[& '
]' (
m_FaceAndScale) 7
;7 8
public 
SimpleTuple 
< 
Face #
,# $
Vector2% ,
>, -
[- .
]. /
faceAndScale0 <
{ 
get 
{ 
return 
m_FaceAndScale +
;+ ,
}- .
} 
public %
TranslateTextureSelection ,
(, -
ProBuilderMesh- ;
mesh< @
,@ A

PivotPointB L
pivotM R
)R S
: 
base 
( 
mesh 
, 
pivot "
)" #
{ 
var 
faces 
= 
mesh  
.  !
faces! &
;& '
m_FaceAndScale 
=  
mesh! %
.% &
selectedFaceIndexes& 9
.9 :
Select: @
(@ A
xA B
=>C E
new 
SimpleTuple #
<# $
Face$ (
,( )
Vector2* 1
>1 2
(2 3
faces3 8
[8 9
x9 :
]: ;
,; <
	UVEditing= F
.F G
GetUVTransformG U
(U V
meshV Z
,Z [
faces\ a
[a b
xb c
]c d
)d e
.e f
scalef k
)k l
)l m
. 
ToArray  
(  !
)! "
;" #
}   
}!! 	
internal## 
override## #
MeshAndElementSelection## 1
GetElementSelection##2 E
(##E F
ProBuilderMesh##F T
mesh##U Y
,##Y Z

PivotPoint##[ e
pivot##f k
)##k l
{$$ 	
return%% 
new%% %
TranslateTextureSelection%% 0
(%%0 1
mesh%%1 5
,%%5 6
pivot%%7 <
)%%< =
;%%= >
}&& 	
	protected(( 
override(( 
void(( 
DoTool((  &
(((& '
Vector3((' .
handlePosition((/ =
,((= >

Quaternion((? I
handleRotation((J X
)((X Y
{)) 	
if** 
(** 
!** 
	isEditing** 
)** 

m_Position++ 
=++ 
Vector3++ $
.++$ %
zero++% )
;++) *
EditorHandleUtility-- 
.--  

PushMatrix--  *
(--* +
)--+ ,
;--, -
Handles// 
.// 
matrix// 
=// 
	Matrix4x4// &
.//& '
TRS//' *
(//* +
handlePosition//+ 9
,//9 :
handleRotation//; I
,//I J
Vector3//K R
.//R S
one//S V
)//V W
;//W X
	EditorGUI11 
.11 
BeginChangeCheck11 &
(11& '
)11' (
;11( )
Handles33 
.33 
color33 
=33 
Color33 !
.33! "
blue33" &
;33& '

m_Position55 
=55 
Handles55  
.55  !
Slider2D55! )
(55) *

m_Position55* 4
,554 5
Vector366 
.66 
forward66 #
,66# $
Vector377 
.77 
right77 !
,77! "
Vector388 
.88 
up88 
,88 
HandleUtility99 !
.99! "
GetHandleSize99" /
(99/ 0

m_Position990 :
)99: ;
*99< =
$num99> A
,99A B
Handles:: 
.:: 
RectangleHandleCap:: .
,::. /
$num;; 
,;; 
false<< 
)<< 
;<< 
Handles>> 
.>> 
color>> 
=>> 
Color>> !
.>>! "
green>>" '
;>>' (

m_Position@@ 
=@@ 
Handles@@  
.@@  !
Slider@@! '
(@@' (

m_Position@@( 2
,@@2 3
Vector3@@4 ;
.@@; <
up@@< >
)@@> ?
;@@? @
HandlesBB 
.BB 
colorBB 
=BB 
ColorBB !
.BB! "
redBB" %
;BB% &

m_PositionDD 
=DD 
HandlesDD  
.DD  !
SliderDD! '
(DD' (

m_PositionDD( 2
,DD2 3
Vector3DD4 ;
.DD; <
rightDD< A
)DDA B
;DDB C
HandlesFF 
.FF 
colorFF 
=FF 
ColorFF !
.FF! "
whiteFF" '
;FF' (
ifHH 
(HH 
	EditorGUIHH 
.HH 
EndChangeCheckHH (
(HH( )
)HH) *
)HH* +
{II 
ifJJ 
(JJ 
!JJ 
	isEditingJJ 
)JJ 
	BeginEditKK 
(KK 
$strKK 2
)KK2 3
;KK3 4
ifMM 
(MM 
relativeSnapEnabledMM '
)MM' (
{NN 

m_PositionOO 
.OO 
xOO  
=OO! "
ProBuilderSnappingOO# 5
.OO5 6
	SnapValueOO6 ?
(OO? @

m_PositionOO@ J
.OOJ K
xOOK L
,OOL M"
ProBuilderSnapSettingsOON d
.OOd e$
incrementalSnapMoveValueOOe }
.OO} ~
xOO~ 
)	OO Ä
;
OOÄ Å

m_PositionPP 
.PP 
yPP  
=PP! "
ProBuilderSnappingPP# 5
.PP5 6
	SnapValuePP6 ?
(PP? @

m_PositionPP@ J
.PPJ K
yPPK L
,PPL M"
ProBuilderSnapSettingsPPN d
.PPd e$
incrementalSnapMoveValuePPe }
.PP} ~
yPP~ 
)	PP Ä
;
PPÄ Å
}QQ 
elseRR 
ifRR 
(RR 
worldSnapEnabledRR )
)RR) *
{SS 

m_PositionTT 
.TT 
xTT  
=TT! "
ProBuilderSnappingTT# 5
.TT5 6
	SnapValueTT6 ?
(TT? @

m_PositionTT@ J
.TTJ K
xTTK L
,TTL M
	snapValueTTN W
.TTW X
xTTX Y
)TTY Z
;TTZ [

m_PositionUU 
.UU 
yUU  
=UU! "
ProBuilderSnappingUU# 5
.UU5 6
	SnapValueUU6 ?
(UU? @

m_PositionUU@ J
.UUJ K
yUUK L
,UUL M
	snapValueUUN W
.UUW X
yUUX Y
)UUY Z
;UUZ [
}VV 
varYY 
deltaYY 
=YY 
newYY 
Vector4YY  '
(YY' (

m_PositionYY( 2
.YY2 3
xYY3 4
,YY4 5
-YY6 7

m_PositionYY7 A
.YYA B
yYYB C
,YYC D
$numYYE G
,YYG H
$numYYI K
)YYK L
;YYL M
foreach[[ 
([[ 
var[[ 
value[[ "
in[[# %
elementSelection[[& 6
)[[6 7
{\\ 
var]] 
	selection]] !
=]]" #
value]]$ )
as]]* ,%
TranslateTextureSelection]]- F
;]]F G
if__ 
(__ 
	selection__ !
==__" $
null__% )
)__) *
continue``  
;``  !
deltacc 
*=cc 
k_Vector3Magnitudecc /
/cc0 1
	selectioncc2 ;
.cc; <
meshcc< @
.cc@ A
	transformccA J
.ccJ K

lossyScaleccK U
.ccU V
	magnitudeccV _
;cc_ `
varee 
originsee 
=ee  !
	selectionee" +
.ee+ ,
originsee, 3
;ee3 4
varff 
	positionsff !
=ff" #
	selectionff$ -
.ff- .
texturesff. 6
;ff6 7
ifnn 
(nn 
ProBuilderEditornn (
.nn( )

selectModenn) 3
==nn4 6

SelectModenn7 A
.nnA B
TextureFacennB M
)nnM N
{oo 
foreachpp 
(pp  !
varpp! $
facepp% )
inpp* ,
	selectionpp- 6
.pp6 7
faceAndScalepp7 C
)ppC D
{qq 
varrr 
	faceDeltarr  )
=rr* +
newrr, /
Vector4rr0 7
(rr7 8
deltarr8 =
.rr= >
xrr> ?
/rr@ A
facerrB F
.rrF G
item2rrG L
.rrL M
xrrM N
,rrN O
deltarrP U
.rrU V
yrrV W
/rrX Y
facerrZ ^
.rr^ _
item2rr_ d
.rrd e
yrre f
,rrf g
$numrrh j
,rrj k
$numrrl n
)rrn o
;rro p
foreachtt #
(tt$ %
vartt% (
indextt) .
intt/ 1
facett2 6
.tt6 7
item1tt7 <
.tt< =
distinctIndexestt= L
)ttL M
	positionsuu  )
[uu) *
indexuu* /
]uu/ 0
=uu1 2
originsuu3 :
[uu: ;
indexuu; @
]uu@ A
+uuB C
	faceDeltauuD M
;uuM N
}vv 
}ww 
elsexx 
{yy 
foreachzz 
(zz  !
varzz! $
groupzz% *
inzz+ -
valuezz. 3
.zz3 4
elementGroupszz4 A
)zzA B
{{{ 
foreach|| #
(||$ %
var||% (
index||) .
in||/ 1
group||2 7
.||7 8
indices||8 ?
)||? @
	positions}}  )
[}}) *
index}}* /
]}}/ 0
=}}1 2
origins}}3 :
[}}: ;
index}}; @
]}}@ A
+}}B C
delta}}D I
;}}I J
}~~ 
} 
	selection
ÅÅ 
.
ÅÅ 
mesh
ÅÅ "
.
ÅÅ" #
mesh
ÅÅ# '
.
ÅÅ' (
SetUVs
ÅÅ( .
(
ÅÅ. /
k_TextureChannel
ÅÅ/ ?
,
ÅÅ? @
	positions
ÅÅA J
)
ÅÅJ K
;
ÅÅK L
}
ÇÇ 
}
ÉÉ !
EditorHandleUtility
ÖÖ 
.
ÖÖ  
	PopMatrix
ÖÖ  )
(
ÖÖ) *
)
ÖÖ* +
;
ÖÖ+ ,
}
ÜÜ 	
}
áá 
}àà ú,
†D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\PreferenceDictionaryEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{ 
[		 
CustomEditor		 
(		 
typeof		 
(		  
PreferenceDictionary		 -
)		- .
)		. /
]		/ 0
sealed

 

class

 &
PreferenceDictionaryEditor

 +
:

, -
UnityEditor

. 9
.

9 :
Editor

: @
{  
PreferenceDictionary 
m_Preferences *
=+ ,
null- 1
;1 2
Vector2 
m_Scroll 
= 
Vector2 "
." #
zero# '
;' (
SearchField 
m_Search 
; 
string 
m_SearchText 
; 
void 
OnEnable 
( 
) 
{ 	
m_Preferences 
= 
target "
as# % 
PreferenceDictionary& :
;: ;
m_Search 
= 
new 
SearchField &
(& '
)' (
;( )
m_SearchText 
= 
$str 
; 
} 	
public 
override 
void 
OnInspectorGUI +
(+ ,
), -
{ 	
m_SearchText 
= 
m_Search #
.# $
OnGUI$ )
() *
m_SearchText* 6
)6 7
;7 8
	GUILayout 
. 
Label 
( 
$str -
,- .
EditorStyles/ ;
.; <
	boldLabel< E
)E F
;F G
m_Scroll 
= 
EditorGUILayout &
.& '
BeginScrollView' 6
(6 7
m_Scroll7 ?
)? @
;@ A
DoPreferenceList   
<   
string   #
,  # $
bool  % )
>  ) *
(  * +
m_Preferences  + 8
.  8 9
GetBoolDictionary  9 J
(  J K
)  K L
)  L M
;  M N
DoPreferenceList!! 
<!! 
string!! #
,!!# $
int!!% (
>!!( )
(!!) *
m_Preferences!!* 7
.!!7 8
GetIntDictionary!!8 H
(!!H I
)!!I J
)!!J K
;!!K L
DoPreferenceList"" 
<"" 
string"" #
,""# $
float""% *
>""* +
(""+ ,
m_Preferences"", 9
.""9 :
GetFloatDictionary"": L
(""L M
)""M N
)""N O
;""O P
DoPreferenceList## 
<## 
string## #
,### $
string##% +
>##+ ,
(##, -
m_Preferences##- :
.##: ;
GetStringDictionary##; N
(##N O
)##O P
)##P Q
;##Q R
DoPreferenceList$$ 
<$$ 
string$$ #
,$$# $
Color$$% *
>$$* +
($$+ ,
m_Preferences$$, 9
.$$9 :
GetColorDictionary$$: L
($$L M
)$$M N
)$$N O
;$$O P
DoPreferenceList%% 
<%% 
string%% #
,%%# $
Material%%% -
>%%- .
(%%. /
m_Preferences%%/ <
.%%< =!
GetMaterialDictionary%%= R
(%%R S
)%%S T
)%%T U
;%%U V
EditorGUILayout(( 
.(( 
EndScrollView(( )
((() *
)((* +
;((+ ,
})) 	
void++ 
DoPreferenceList++ 
<++ 
T++ 
,++  
K++! "
>++" #
(++# $

Dictionary++$ .
<++. /
T++/ 0
,++0 1
K++2 3
>++3 4

dictionary++5 ?
)++? @
{,, 	
foreach-- 
(-- 
var-- 
kvp-- 
in-- 

dictionary--  *
)--* +
{.. 
var// 
label// 
=// 
kvp// 
.//  
Key//  #
.//# $
ToString//$ ,
(//, -
)//- .
;//. /
var00 
value00 
=00 
kvp00 
.00  
Value00  %
.00% &
ToString00& .
(00. /
)00/ 0
;000 1
if22 
(22 
string22 
.22 
IsNullOrEmpty22 (
(22( )
m_SearchText22) 5
)225 6
||227 9
label22: ?
.22? @
Contains22@ H
(22H I
m_SearchText22I U
)22U V
)22V W
{33 
	GUILayout44 
.44 
BeginHorizontal44 -
(44- .
)44. /
;44/ 0
	GUILayout55 
.55 
Label55 #
(55# $
label55$ )
,55) *
	GUILayout55+ 4
.554 5
Width555 :
(55: ;
$num55; >
)55> ?
,55? @
	GUILayout55A J
.55J K
ExpandWidth55K V
(55V W
false55W \
)55\ ]
)55] ^
;55^ _
	GUILayout66 
.66 
Label66 #
(66# $
value66$ )
)66) *
;66* +
	GUILayout77 
.77 
EndHorizontal77 +
(77+ ,
)77, -
;77- .
}88 
}99 
}:: 	
};; 
}<< æÃ
îD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\MaterialEditor.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
{

 
sealed 

class 
MaterialEditor 
:  !
ConfigurableWindow" 4
{ 
static 
ProBuilderEditor 
editor  &
{' (
get) ,
{- .
return/ 5
ProBuilderEditor6 F
.F G
instanceG O
;O P
}Q R
}S T
public 
static 
MaterialEditor $
instance% -
{. /
get0 3
;3 4
private5 <
set= @
;@ A
}B C
[ 	
MenuItem	 
( 
$str 
+ 
PreferenceKeys +
.+ ,
pluginTitle, 7
+8 9
$str: a
,a b
truec g
,g h
PreferenceKeysi w
.w x
menuMaterialColors	x ä
)
ä ã
]
ã å
[ 	
MenuItem	 
( 
$str 
+ 
PreferenceKeys +
.+ ,
pluginTitle, 7
+8 9
$str: a
,a b
truec g
,g h
PreferenceKeysi w
.w x
menuMaterialColors	x ä
)
ä ã
]
ã å
[ 	
MenuItem	 
( 
$str 
+ 
PreferenceKeys +
.+ ,
pluginTitle, 7
+8 9
$str: a
,a b
truec g
,g h
PreferenceKeysi w
.w x
menuMaterialColors	x ä
)
ä ã
]
ã å
[ 	
MenuItem	 
( 
$str 
+ 
PreferenceKeys +
.+ ,
pluginTitle, 7
+8 9
$str: a
,a b
truec g
,g h
PreferenceKeysi w
.w x
menuMaterialColors	x ä
)
ä ã
]
ã å
[ 	
MenuItem	 
( 
$str 
+ 
PreferenceKeys +
.+ ,
pluginTitle, 7
+8 9
$str: a
,a b
truec g
,g h
PreferenceKeysi w
.w x
menuMaterialColors	x ä
)
ä ã
]
ã å
[ 	
MenuItem	 
( 
$str 
+ 
PreferenceKeys +
.+ ,
pluginTitle, 7
+8 9
$str: a
,a b
truec g
,g h
PreferenceKeysi w
.w x
menuMaterialColors	x ä
)
ä ã
]
ã å
[ 	
MenuItem	 
( 
$str 
+ 
PreferenceKeys +
.+ ,
pluginTitle, 7
+8 9
$str: a
,a b
truec g
,g h
PreferenceKeysi w
.w x
menuMaterialColors	x ä
)
ä ã
]
ã å
[ 	
MenuItem	 
( 
$str 
+ 
PreferenceKeys +
.+ ,
pluginTitle, 7
+8 9
$str: a
,a b
truec g
,g h
PreferenceKeysi w
.w x
menuMaterialColors	x ä
)
ä ã
]
ã å
[ 	
MenuItem	 
( 
$str 
+ 
PreferenceKeys +
.+ ,
pluginTitle, 7
+8 9
$str: a
,a b
truec g
,g h
PreferenceKeysi w
.w x
menuMaterialColors	x ä
)
ä ã
]
ã å
[ 	
MenuItem	 
( 
$str 
+ 
PreferenceKeys +
.+ ,
pluginTitle, 7
+8 9
$str: b
,b c
trued h
,h i
PreferenceKeysj x
.x y
menuMaterialColors	y ã
)
ã å
]
å ç
public   
static   
bool    
VerifyMaterialAction   /
(  / 0
)  0 1
{!! 	
return"" 
ProBuilderEditor"" #
.""# $
instance""$ ,
!=""- /
null""0 4
&&""5 7
MeshSelection""8 E
.""E F
selectedObjectCount""F Y
>""Z [
$num""\ ]
;""] ^
}## 	
[%% 	
MenuItem%%	 
(%% 
$str%% 
+%% 
PreferenceKeys%% +
.%%+ ,
pluginTitle%%, 7
+%%8 9
$str%%: a
,%%a b
false%%c h
,%%h i
PreferenceKeys%%j x
.%%x y
menuMaterialColors	%%y ã
)
%%ã å
]
%%å ç
public&& 
static&& 
void&& 
ApplyMaterial0&& )
(&&) *
)&&* +
{'' 	
ApplyMaterial(( 
((( 
MeshSelection(( '
.((' (
topInternal((( 3
,((3 4
CurrentPalette((5 C
[((C D
$num((D E
]((E F
)((F G
;((G H
})) 	
[++ 	
MenuItem++	 
(++ 
$str++ 
+++ 
PreferenceKeys++ +
.+++ ,
pluginTitle++, 7
+++8 9
$str++: a
,++a b
false++c h
,++h i
PreferenceKeys++j x
.++x y
menuMaterialColors	++y ã
)
++ã å
]
++å ç
public,, 
static,, 
void,, 
ApplyMaterial1,, )
(,,) *
),,* +
{-- 	
ApplyMaterial.. 
(.. 
MeshSelection.. '
...' (
topInternal..( 3
,..3 4
CurrentPalette..5 C
[..C D
$num..D E
]..E F
)..F G
;..G H
}// 	
[11 	
MenuItem11	 
(11 
$str11 
+11 
PreferenceKeys11 +
.11+ ,
pluginTitle11, 7
+118 9
$str11: a
,11a b
false11c h
,11h i
PreferenceKeys11j x
.11x y
menuMaterialColors	11y ã
)
11ã å
]
11å ç
public22 
static22 
void22 
ApplyMaterial222 )
(22) *
)22* +
{33 	
ApplyMaterial44 
(44 
MeshSelection44 '
.44' (
topInternal44( 3
,443 4
CurrentPalette445 C
[44C D
$num44D E
]44E F
)44F G
;44G H
}55 	
[77 	
MenuItem77	 
(77 
$str77 
+77 
PreferenceKeys77 +
.77+ ,
pluginTitle77, 7
+778 9
$str77: a
,77a b
false77c h
,77h i
PreferenceKeys77j x
.77x y
menuMaterialColors	77y ã
)
77ã å
]
77å ç
public88 
static88 
void88 
ApplyMaterial388 )
(88) *
)88* +
{99 	
ApplyMaterial:: 
(:: 
MeshSelection:: '
.::' (
topInternal::( 3
,::3 4
CurrentPalette::5 C
[::C D
$num::D E
]::E F
)::F G
;::G H
};; 	
[== 	
MenuItem==	 
(== 
$str== 
+== 
PreferenceKeys== +
.==+ ,
pluginTitle==, 7
+==8 9
$str==: a
,==a b
false==c h
,==h i
PreferenceKeys==j x
.==x y
menuMaterialColors	==y ã
)
==ã å
]
==å ç
public>> 
static>> 
void>> 
ApplyMaterial4>> )
(>>) *
)>>* +
{?? 	
ApplyMaterial@@ 
(@@ 
MeshSelection@@ '
.@@' (
topInternal@@( 3
,@@3 4
CurrentPalette@@5 C
[@@C D
$num@@D E
]@@E F
)@@F G
;@@G H
}AA 	
[CC 	
MenuItemCC	 
(CC 
$strCC 
+CC 
PreferenceKeysCC +
.CC+ ,
pluginTitleCC, 7
+CC8 9
$strCC: a
,CCa b
falseCCc h
,CCh i
PreferenceKeysCCj x
.CCx y
menuMaterialColors	CCy ã
)
CCã å
]
CCå ç
publicDD 
staticDD 
voidDD 
ApplyMaterial5DD )
(DD) *
)DD* +
{EE 	
ApplyMaterialFF 
(FF 
MeshSelectionFF '
.FF' (
topInternalFF( 3
,FF3 4
CurrentPaletteFF5 C
[FFC D
$numFFD E
]FFE F
)FFF G
;FFG H
}GG 	
[II 	
MenuItemII	 
(II 
$strII 
+II 
PreferenceKeysII +
.II+ ,
pluginTitleII, 7
+II8 9
$strII: a
,IIa b
falseIIc h
,IIh i
PreferenceKeysIIj x
.IIx y
menuMaterialColors	IIy ã
)
IIã å
]
IIå ç
publicJJ 
staticJJ 
voidJJ 
ApplyMaterial6JJ )
(JJ) *
)JJ* +
{KK 	
ApplyMaterialLL 
(LL 
MeshSelectionLL '
.LL' (
topInternalLL( 3
,LL3 4
CurrentPaletteLL5 C
[LLC D
$numLLD E
]LLE F
)LLF G
;LLG H
}MM 	
[OO 	
MenuItemOO	 
(OO 
$strOO 
+OO 
PreferenceKeysOO +
.OO+ ,
pluginTitleOO, 7
+OO8 9
$strOO: a
,OOa b
falseOOc h
,OOh i
PreferenceKeysOOj x
.OOx y
menuMaterialColors	OOy ã
)
OOã å
]
OOå ç
publicPP 
staticPP 
voidPP 
ApplyMaterial7PP )
(PP) *
)PP* +
{QQ 	
ApplyMaterialRR 
(RR 
MeshSelectionRR '
.RR' (
topInternalRR( 3
,RR3 4
CurrentPaletteRR5 C
[RRC D
$numRRD E
]RRE F
)RRF G
;RRG H
}SS 	
[UU 	
MenuItemUU	 
(UU 
$strUU 
+UU 
PreferenceKeysUU +
.UU+ ,
pluginTitleUU, 7
+UU8 9
$strUU: a
,UUa b
falseUUc h
,UUh i
PreferenceKeysUUj x
.UUx y
menuMaterialColors	UUy ã
)
UUã å
]
UUå ç
publicVV 
staticVV 
voidVV 
ApplyMaterial8VV )
(VV) *
)VV* +
{WW 	
ApplyMaterialXX 
(XX 
MeshSelectionXX '
.XX' (
topInternalXX( 3
,XX3 4
CurrentPaletteXX5 C
[XXC D
$numXXD E
]XXE F
)XXF G
;XXG H
}YY 	
[[[ 	
MenuItem[[	 
([[ 
$str[[ 
+[[ 
PreferenceKeys[[ +
.[[+ ,
pluginTitle[[, 7
+[[8 9
$str[[: b
,[[b c
false[[d i
,[[i j
PreferenceKeys[[k y
.[[y z
menuMaterialColors	[[z å
)
[[å ç
]
[[ç é
public\\ 
static\\ 
void\\ 
ApplyMaterial9\\ )
(\\) *
)\\* +
{]] 	
ApplyMaterial^^ 
(^^ 
MeshSelection^^ '
.^^' (
topInternal^^( 3
,^^3 4
CurrentPalette^^5 C
[^^C D
$num^^D E
]^^E F
)^^F G
;^^G H
}__ 	
staticcc 
Prefcc 
<cc 
stringcc 
>cc !
s_MaterialPalettePathcc 1
=cc2 3
newcc4 7
Prefcc8 <
<cc< =
stringcc= C
>ccC D
(ccD E
$strccE a
,cca b
FileUtilityccc n
.ccn o"
GetLocalDataDirectory	cco Ñ
(
ccÑ Ö
)
ccÖ Ü
+
ccá à
$str
ccâ ™
)
cc™ ´
;
cc´ ¨
staticff 
MaterialPaletteff 
s_CurrentPaletteff /
=ff0 1
nullff2 6
;ff6 7
[ii 	
SerializeFieldii	 
]ii 
Materialjj 
m_QueuedMaterialjj !
;jj! "
GUIStylemm  
m_RowBackgroundStylemm %
;mm% &
Vector2pp 
m_ViewScrollpp 
=pp 
Vector2pp &
.pp& '
zeropp' +
;pp+ ,
MaterialPalettess 
[ss 
]ss 
m_AvailablePalettesss -
=ss. /
nullss0 4
;ss4 5
stringvv 
[vv 
]vv #
m_AvailablePalettes_Strvv (
=vv) *
nullvv+ /
;vv/ 0
intyy !
m_CurrentPaletteIndexyy !
=yy" #
$numyy$ %
;yy% &
public~~ 
static~~ 
MaterialPalette~~ %
CurrentPalette~~& 4
{ 	
get
ÄÄ 
{
ÅÅ 
if
ÇÇ 
(
ÇÇ 
s_CurrentPalette
ÇÇ $
==
ÇÇ% '
null
ÇÇ( ,
)
ÇÇ, -
{
ÉÉ 
s_CurrentPalette
ÖÖ $
=
ÖÖ% &
AssetDatabase
ÖÖ' 4
.
ÖÖ4 5
LoadAssetAtPath
ÖÖ5 D
<
ÖÖD E
MaterialPalette
ÖÖE T
>
ÖÖT U
(
ÖÖU V#
s_MaterialPalettePath
ÖÖV k
)
ÖÖk l
;
ÖÖl m
if
àà 
(
àà 
s_CurrentPalette
àà (
!=
àà) +
null
àà, 0
)
àà0 1
return
ââ 
s_CurrentPalette
ââ /
;
ââ/ 0
s_CurrentPalette
åå $
=
åå% &
FileUtility
åå' 2
.
åå2 3
FindAssetOfType
åå3 B
<
ååB C
MaterialPalette
ååC R
>
ååR S
(
ååS T
)
ååT U
;
ååU V
if
éé 
(
éé 
s_CurrentPalette
éé (
!=
éé) +
null
éé, 0
)
éé0 1
return
èè 
s_CurrentPalette
èè /
;
èè/ 0
s_CurrentPalette
îî $
=
îî% &
FileUtility
îî' 2
.
îî2 3
LoadRequired
îî3 ?
<
îî? @
MaterialPalette
îî@ O
>
îîO P
(
îîP Q#
s_MaterialPalettePath
îîQ f
)
îîf g
;
îîg h
string
ññ 
[
ññ 
]
ññ $
m_LegacyMaterialArrays
ññ 3
=
ññ4 5
AssetDatabase
ññ6 C
.
ññC D

FindAssets
ññD N
(
ññN O
$str
ññO a
)
ñña b
;
ññb c
for
òò 
(
òò 
int
òò 
i
òò 
=
òò  
$num
òò! "
;
òò" #$
m_LegacyMaterialArrays
òò$ :
!=
òò; =
null
òò> B
&&
òòC E
i
òòF G
<
òòH I$
m_LegacyMaterialArrays
òòJ `
.
òò` a
Length
òòa g
;
òòg h
i
òòi j
++
òòj l
)
òòl m
{
ôô 
pb_ObjectArray
öö &
poa
öö' *
=
öö+ ,
AssetDatabase
öö- :
.
öö: ;
LoadAssetAtPath
öö; J
<
ööJ K
pb_ObjectArray
ööK Y
>
ööY Z
(
ööZ [
AssetDatabase
öö[ h
.
ööh i
GUIDToAssetPath
ööi x
(
ööx y%
m_LegacyMaterialArraysööy è
[ööè ê
iööê ë
]ööë í
)ööí ì
)ööì î
;ööî ï
if
ùù 
(
ùù 
poa
ùù 
!=
ùù  "
null
ùù# '
&&
ùù( *
poa
ùù+ .
.
ùù. /
array
ùù/ 4
!=
ùù5 7
null
ùù8 <
&&
ùù= ?
poa
ùù@ C
.
ùùC D
array
ùùD I
.
ùùI J
Any
ùùJ M
(
ùùM N
x
ùùN O
=>
ùùP R
x
ùùS T
!=
ùùU W
null
ùùX \
&&
ùù] _
x
ùù` a
is
ùùb d
Material
ùùe m
)
ùùm n
)
ùùn o
{
ûû 
s_CurrentPalette
üü ,
.
üü, -
array
üü- 2
=
üü3 4
poa
üü5 8
.
üü8 9
GetArray
üü9 A
<
üüA B
Material
üüB J
>
üüJ K
(
üüK L
)
üüL M
;
üüM N
break
†† !
;
††! "
}
°° 
}
¢¢ 
}
££ 
return
§§ 
s_CurrentPalette
§§ '
;
§§' (
}
•• 
}
¶¶ 	
public
®® 
static
®® 
void
®® $
MenuOpenMaterialEditor
®® 1
(
®®1 2
)
®®2 3
{
©© 	
	GetWindow
™™ 
<
™™ 
MaterialEditor
™™ $
>
™™$ %
(
™™% &
$str
™™& 7
)
™™7 8
;
™™8 9
}
´´ 	
void
≠≠ 
OnEnable
≠≠ 
(
≠≠ 
)
≠≠ 
{
ÆÆ 	
instance
ØØ 
=
ØØ 
this
ØØ 
;
ØØ 
this
∞∞ 
.
∞∞ &
autoRepaintOnSceneChange
∞∞ )
=
∞∞* +
true
∞∞, 0
;
∞∞0 1
this
±± 
.
±± 
minSize
±± 
=
±± 
new
±± 
Vector2
±± &
(
±±& '
$num
±±' *
,
±±* +
$num
±±, /
)
±±/ 0
;
±±0 1"
m_RowBackgroundStyle
≤≤  
=
≤≤! "
new
≤≤# &
GUIStyle
≤≤' /
(
≤≤/ 0
)
≤≤0 1
;
≤≤1 2"
m_RowBackgroundStyle
≥≥  
.
≥≥  !
normal
≥≥! '
.
≥≥' (

background
≥≥( 2
=
≥≥3 4
EditorGUIUtility
≥≥5 E
.
≥≥E F
whiteTexture
≥≥F R
;
≥≥R S
s_CurrentPalette
¥¥ 
=
¥¥ 
null
¥¥ #
;
¥¥# $&
RefreshAvailablePalettes
µµ $
(
µµ$ %
)
µµ% &
;
µµ& '
}
∂∂ 	
void
∏∏ 
	OnDisable
∏∏ 
(
∏∏ 
)
∏∏ 
{
ππ 	
instance
∫∫ 
=
∫∫ 
null
∫∫ 
;
∫∫ 
}
ªª 	
void
ΩΩ 
OnGUI
ΩΩ 
(
ΩΩ 
)
ΩΩ 
{
ææ 	
DoContextMenu
øø 
(
øø 
)
øø 
;
øø 
	GUILayout
¡¡ 
.
¡¡ 
Label
¡¡ 
(
¡¡ 
$str
¡¡ ,
,
¡¡, -
EditorStyles
¡¡. :
.
¡¡: ;
	boldLabel
¡¡; D
)
¡¡D E
;
¡¡E F
Rect
¬¬ 
r
¬¬ 
=
¬¬ 
GUILayoutUtility
¬¬ %
.
¬¬% &
GetLastRect
¬¬& 1
(
¬¬1 2
)
¬¬2 3
;
¬¬3 4
int
√√ 
left
√√ 
=
√√ 
(
√√ 
int
√√ 
)
√√ 
position
√√ $
.
√√$ %
width
√√% *
-
√√+ ,
$num
√√- /
;
√√/ 0
	GUILayout
≈≈ 
.
≈≈ 
BeginHorizontal
≈≈ %
(
≈≈% &
	GUILayout
≈≈& /
.
≈≈/ 0
MaxWidth
≈≈0 8
(
≈≈8 9
position
≈≈9 A
.
≈≈A B
width
≈≈B G
-
≈≈H I
$num
≈≈J L
)
≈≈L M
)
≈≈M N
;
≈≈N O
	GUILayout
∆∆ 
.
∆∆ 
BeginVertical
∆∆ #
(
∆∆# $
)
∆∆$ %
;
∆∆% &
m_QueuedMaterial
»» 
=
»» 
(
»»  
Material
»»  (
)
»»( )
EditorGUILayout
»») 8
.
»»8 9
ObjectField
»»9 D
(
»»D E
m_QueuedMaterial
»»E U
,
»»U V
typeof
»»W ]
(
»»] ^
Material
»»^ f
)
»»f g
,
»»g h
true
»»i m
)
»»m n
;
»»n o
	GUILayout
   
.
   
Space
   
(
   
$num
   
)
   
;
   
if
ÃÃ 
(
ÃÃ 
	GUILayout
ÃÃ 
.
ÃÃ 
Button
ÃÃ  
(
ÃÃ  !
$str
ÃÃ! ;
)
ÃÃ; <
)
ÃÃ< =
ApplyMaterial
ÕÕ 
(
ÕÕ 
MeshSelection
ÕÕ +
.
ÕÕ+ ,
topInternal
ÕÕ, 7
,
ÕÕ7 8
m_QueuedMaterial
ÕÕ9 I
)
ÕÕI J
;
ÕÕJ K
GUI
œœ 
.
œœ 
enabled
œœ 
=
œœ 
editor
œœ  
!=
œœ! #
null
œœ$ (
&&
œœ) +
MeshSelection
œœ, 9
.
œœ9 :
selectedFaceCount
œœ: K
>
œœL M
$num
œœN O
;
œœO P
if
–– 
(
–– 
	GUILayout
–– 
.
–– 
Button
––  
(
––  !
$str
––! 2
)
––2 3
)
––3 4
{
—— 
m_QueuedMaterial
““  
=
““! "#
EditorMaterialUtility
““# 8
.
““8 9 
GetActiveSelection
““9 K
(
““K L
)
““L M
;
““M N
}
”” 
GUI
‘‘ 
.
‘‘ 
enabled
‘‘ 
=
‘‘ 
true
‘‘ 
;
‘‘ 
	GUILayout
÷÷ 
.
÷÷ 
EndVertical
÷÷ !
(
÷÷! "
)
÷÷" #
;
÷÷# $
GUI
ÿÿ 
.
ÿÿ 
Box
ÿÿ 
(
ÿÿ 
new
ÿÿ 
Rect
ÿÿ 
(
ÿÿ 
left
ÿÿ !
,
ÿÿ! "
r
ÿÿ# $
.
ÿÿ$ %
y
ÿÿ% &
+
ÿÿ' (
r
ÿÿ) *
.
ÿÿ* +
height
ÿÿ+ 1
+
ÿÿ2 3
$num
ÿÿ4 5
,
ÿÿ5 6
$num
ÿÿ7 9
,
ÿÿ9 :
$num
ÿÿ; =
)
ÿÿ= >
,
ÿÿ> ?
$str
ÿÿ@ B
)
ÿÿB C
;
ÿÿC D
var
⁄⁄ 
previewTexture
⁄⁄ 
=
⁄⁄  #
EditorMaterialUtility
⁄⁄! 6
.
⁄⁄6 7
GetPreviewTexture
⁄⁄7 H
(
⁄⁄H I
m_QueuedMaterial
⁄⁄I Y
)
⁄⁄Y Z
;
⁄⁄Z [
if
‹‹ 
(
‹‹ 
previewTexture
‹‹ 
!=
‹‹ !
null
‹‹" &
)
‹‹& '
{
›› 
GUI
ﬁﬁ 
.
ﬁﬁ 
Label
ﬁﬁ 
(
ﬁﬁ 
new
ﬁﬁ 
Rect
ﬁﬁ "
(
ﬁﬁ" #
left
ﬁﬁ# '
+
ﬁﬁ( )
$num
ﬁﬁ* +
,
ﬁﬁ+ ,
r
ﬁﬁ- .
.
ﬁﬁ. /
y
ﬁﬁ/ 0
+
ﬁﬁ1 2
r
ﬁﬁ3 4
.
ﬁﬁ4 5
height
ﬁﬁ5 ;
+
ﬁﬁ< =
$num
ﬁﬁ> ?
,
ﬁﬁ? @
$num
ﬁﬁA C
,
ﬁﬁC D
$num
ﬁﬁE G
)
ﬁﬁG H
,
ﬁﬁH I
previewTexture
ﬁﬁJ X
)
ﬁﬁX Y
;
ﬁﬁY Z
}
ﬂﬂ 
else
‡‡ 
{
·· 
GUI
‚‚ 
.
‚‚ 
Box
‚‚ 
(
‚‚ 
new
‚‚ 
Rect
‚‚  
(
‚‚  !
left
‚‚! %
+
‚‚& '
$num
‚‚( )
,
‚‚) *
r
‚‚+ ,
.
‚‚, -
y
‚‚- .
+
‚‚/ 0
r
‚‚1 2
.
‚‚2 3
height
‚‚3 9
+
‚‚: ;
$num
‚‚< =
,
‚‚= >
$num
‚‚? A
,
‚‚A B
$num
‚‚C E
)
‚‚E F
,
‚‚F G
$str
‚‚H J
)
‚‚J K
;
‚‚K L
GUI
„„ 
.
„„ 
Label
„„ 
(
„„ 
new
„„ 
Rect
„„ "
(
„„" #
left
„„# '
+
„„( )
$num
„„* +
,
„„+ ,
r
„„- .
.
„„. /
height
„„/ 5
+
„„6 7
$num
„„8 :
,
„„: ;
$num
„„< ?
,
„„? @
$num
„„A C
)
„„C D
,
„„D E
$str
„„F W
)
„„W X
;
„„X Y
}
‰‰ 
	GUILayout
ÊÊ 
.
ÊÊ 
EndHorizontal
ÊÊ #
(
ÊÊ# $
)
ÊÊ$ %
;
ÊÊ% &
	GUILayout
ËË 
.
ËË 
Space
ËË 
(
ËË 
$num
ËË 
)
ËË 
;
ËË 
GUI
ÍÍ 
.
ÍÍ 
backgroundColor
ÍÍ 
=
ÍÍ  !
PreferenceKeys
ÍÍ" 0
.
ÍÍ0 1 
proBuilderDarkGray
ÍÍ1 C
;
ÍÍC D
UI
ÎÎ 
.
ÎÎ 
EditorGUIUtility
ÎÎ 
.
ÎÎ  
DrawSeparator
ÎÎ  -
(
ÎÎ- .
$num
ÎÎ. /
)
ÎÎ/ 0
;
ÎÎ0 1
GUI
ÏÏ 
.
ÏÏ 
backgroundColor
ÏÏ 
=
ÏÏ  !
Color
ÏÏ" '
.
ÏÏ' (
white
ÏÏ( -
;
ÏÏ- .
	GUILayout
ÓÓ 
.
ÓÓ 
Label
ÓÓ 
(
ÓÓ 
$str
ÓÓ .
,
ÓÓ. /
EditorStyles
ÓÓ0 <
.
ÓÓ< =
	boldLabel
ÓÓ= F
)
ÓÓF G
;
ÓÓG H
	EditorGUI
 
.
 
BeginChangeCheck
 &
(
& '
)
' (
;
( )#
m_CurrentPaletteIndex
ÚÚ !
=
ÚÚ" #
EditorGUILayout
ÚÚ$ 3
.
ÚÚ3 4
Popup
ÚÚ4 9
(
ÚÚ9 :
$str
ÚÚ: <
,
ÚÚ< =#
m_CurrentPaletteIndex
ÚÚ> S
,
ÚÚS T%
m_AvailablePalettes_Str
ÚÚU l
)
ÚÚl m
;
ÚÚm n
if
ÙÙ 
(
ÙÙ 
	EditorGUI
ÙÙ 
.
ÙÙ 
EndChangeCheck
ÙÙ (
(
ÙÙ( )
)
ÙÙ) *
)
ÙÙ* +
{
ıı 
MaterialPalette
ˆˆ 

newPalette
ˆˆ  *
=
ˆˆ+ ,
null
ˆˆ- 1
;
ˆˆ1 2
if
˘˘ 
(
˘˘ #
m_CurrentPaletteIndex
˘˘ )
>=
˘˘* ,!
m_AvailablePalettes
˘˘- @
.
˘˘@ A
Length
˘˘A G
)
˘˘G H
{
˙˙ 
string
˚˚ 
path
˚˚ 
=
˚˚  !
AssetDatabase
˚˚" /
.
˚˚/ 0%
GenerateUniqueAssetPath
˚˚0 G
(
˚˚G H
$str
˚˚H g
)
˚˚g h
;
˚˚h i

newPalette
¸¸ 
=
¸¸  
FileUtility
¸¸! ,
.
¸¸, -
LoadRequired
¸¸- 9
<
¸¸9 :
MaterialPalette
¸¸: I
>
¸¸I J
(
¸¸J K
path
¸¸K O
)
¸¸O P
;
¸¸P Q
EditorGUIUtility
˝˝ $
.
˝˝$ %

PingObject
˝˝% /
(
˝˝/ 0

newPalette
˝˝0 :
)
˝˝: ;
;
˝˝; <
}
˛˛ 
else
ˇˇ 
{
ÄÄ 

newPalette
ÅÅ 
=
ÅÅ  !
m_AvailablePalettes
ÅÅ! 4
[
ÅÅ4 5#
m_CurrentPaletteIndex
ÅÅ5 J
]
ÅÅJ K
;
ÅÅK L
}
ÇÇ  
SetMaterialPalette
ÑÑ "
(
ÑÑ" #

newPalette
ÑÑ# -
)
ÑÑ- .
;
ÑÑ. /
}
ÖÖ 
	EditorGUI
áá 
.
áá 
BeginChangeCheck
áá &
(
áá& '
)
áá' (
;
áá( )
s_CurrentPalette
àà 
=
àà 
(
àà  
MaterialPalette
àà  /
)
àà/ 0
EditorGUILayout
àà0 ?
.
àà? @
ObjectField
àà@ K
(
ààK L
s_CurrentPalette
ààL \
,
àà\ ]
typeof
àà^ d
(
ààd e
MaterialPalette
ààe t
)
ààt u
,
ààu v
false
ààw |
)
àà| }
;
àà} ~
if
ââ 
(
ââ 
	EditorGUI
ââ 
.
ââ 
EndChangeCheck
ââ (
(
ââ( )
)
ââ) *
)
ââ* + 
SetMaterialPalette
ää "
(
ää" #
s_CurrentPalette
ää# 3
)
ää3 4
;
ää4 5
	GUILayout
åå 
.
åå 
Space
åå 
(
åå 
$num
åå 
)
åå 
;
åå 
Material
éé 
[
éé 
]
éé 
	materials
éé  
=
éé! "
CurrentPalette
éé# 1
;
éé1 2
m_ViewScroll
êê 
=
êê 
	GUILayout
êê $
.
êê$ %
BeginScrollView
êê% 4
(
êê4 5
m_ViewScroll
êê5 A
)
êêA B
;
êêB C
for
íí 
(
íí 
int
íí 
i
íí 
=
íí 
$num
íí 
;
íí 
i
íí 
<
íí 
	materials
íí  )
.
íí) *
Length
íí* 0
;
íí0 1
i
íí2 3
++
íí3 5
)
íí5 6
{
ìì 
if
îî 
(
îî 
i
îî 
==
îî 
$num
îî 
)
îî 
{
ïï 
	GUILayout
ññ 
.
ññ 
Space
ññ #
(
ññ# $
$num
ññ$ %
)
ññ% &
;
ññ& '
GUI
óó 
.
óó 
backgroundColor
óó '
=
óó( )
PreferenceKeys
óó* 8
.
óó8 9!
proBuilderLightGray
óó9 L
;
óóL M
UI
òò 
.
òò 
EditorGUIUtility
òò '
.
òò' (
DrawSeparator
òò( 5
(
òò5 6
$num
òò6 7
)
òò7 8
;
òò8 9
GUI
ôô 
.
ôô 
backgroundColor
ôô '
=
ôô( )
Color
ôô* /
.
ôô/ 0
white
ôô0 5
;
ôô5 6
	GUILayout
öö 
.
öö 
Space
öö #
(
öö# $
$num
öö$ %
)
öö% &
;
öö& '
}
õõ 
	GUILayout
ùù 
.
ùù 
BeginHorizontal
ùù )
(
ùù) *
)
ùù* +
;
ùù+ ,
if
ûû 
(
ûû 
i
ûû 
<
ûû 
$num
ûû 
)
ûû 
{
üü 
if
†† 
(
†† 
	GUILayout
†† !
.
††! "
Button
††" (
(
††( )
$str
††) 1
+
††2 3
(
††4 5
i
††5 6
==
††7 9
$num
††: ;
?
††< =
$num
††> ?
:
††@ A
(
††B C
i
††C D
+
††E F
$num
††G H
)
††H I
)
††I J
.
††J K
ToString
††K S
(
††S T
)
††T U
,
††U V
EditorStyles
††W c
.
††c d

miniButton
††d n
,
††n o
	GUILayout
††p y
.
††y z
MaxWidth††z Ç
(††Ç É
$num††É Ö
)††Ö Ü
)††Ü á
)††á à
ApplyMaterial
°° %
(
°°% &
MeshSelection
°°& 3
.
°°3 4
topInternal
°°4 ?
,
°°? @
	materials
°°A J
[
°°J K
i
°°K L
]
°°L M
)
°°M N
;
°°N O
}
¢¢ 
else
££ 
{
§§ 
if
•• 
(
•• 
	GUILayout
•• !
.
••! "
Button
••" (
(
••( )
$str
••) 0
,
••0 1
EditorStyles
••2 >
.
••> ?
miniButtonLeft
••? M
,
••M N
	GUILayout
••O X
.
••X Y
MaxWidth
••Y a
(
••a b
$num
••b d
)
••d e
)
••e f
)
••f g
ApplyMaterial
¶¶ %
(
¶¶% &
MeshSelection
¶¶& 3
.
¶¶3 4
topInternal
¶¶4 ?
,
¶¶? @
	materials
¶¶A J
[
¶¶J K
i
¶¶K L
]
¶¶L M
)
¶¶M N
;
¶¶N O
GUI
®® 
.
®® 
backgroundColor
®® '
=
®®( )
Color
®®* /
.
®®/ 0
red
®®0 3
;
®®3 4
if
©© 
(
©© 
	GUILayout
©© !
.
©©! "
Button
©©" (
(
©©( )
$str
©©) +
,
©©+ ,
EditorStyles
©©- 9
.
©©9 :
miniButtonRight
©©: I
,
©©I J
	GUILayout
©©K T
.
©©T U
MaxWidth
©©U ]
(
©©] ^
$num
©©^ `
)
©©` a
)
©©a b
)
©©b c
{
™™ 
Material
´´  
[
´´  !
]
´´! "
temp
´´# '
=
´´( )
new
´´* -
Material
´´. 6
[
´´6 7
	materials
´´7 @
.
´´@ A
Length
´´A G
-
´´H I
$num
´´J K
]
´´K L
;
´´L M
System
¨¨ 
.
¨¨ 
Array
¨¨ $
.
¨¨$ %
Copy
¨¨% )
(
¨¨) *
	materials
¨¨* 3
,
¨¨3 4
$num
¨¨5 6
,
¨¨6 7
temp
¨¨8 <
,
¨¨< =
$num
¨¨> ?
,
¨¨? @
	materials
¨¨A J
.
¨¨J K
Length
¨¨K Q
-
¨¨R S
$num
¨¨T U
)
¨¨U V
;
¨¨V W
	materials
≠≠ !
=
≠≠" #
temp
≠≠$ (
;
≠≠( )
SaveUserMaterials
ÆÆ )
(
ÆÆ) *
	materials
ÆÆ* 3
)
ÆÆ3 4
;
ÆÆ4 5
return
ØØ 
;
ØØ 
}
∞∞ 
GUI
±± 
.
±± 
backgroundColor
±± '
=
±±( )
Color
±±* /
.
±±/ 0
white
±±0 5
;
±±5 6
}
≤≤ 
	EditorGUI
¥¥ 
.
¥¥ 
BeginChangeCheck
¥¥ *
(
¥¥* +
)
¥¥+ ,
;
¥¥, -
	materials
µµ 
[
µµ 
i
µµ 
]
µµ 
=
µµ 
(
µµ  
Material
µµ  (
)
µµ( )
EditorGUILayout
µµ) 8
.
µµ8 9
ObjectField
µµ9 D
(
µµD E
	materials
µµE N
[
µµN O
i
µµO P
]
µµP Q
,
µµQ R
typeof
µµS Y
(
µµY Z
Material
µµZ b
)
µµb c
,
µµc d
false
µµe j
)
µµj k
;
µµk l
if
∂∂ 
(
∂∂ 
	EditorGUI
∂∂ 
.
∂∂ 
EndChangeCheck
∂∂ ,
(
∂∂, -
)
∂∂- .
)
∂∂. /
SaveUserMaterials
∑∑ %
(
∑∑% &
	materials
∑∑& /
)
∑∑/ 0
;
∑∑0 1
	GUILayout
ππ 
.
ππ 
EndHorizontal
ππ '
(
ππ' (
)
ππ( )
;
ππ) *
}
∫∫ 
if
ΩΩ 
(
ΩΩ 
	GUILayout
ΩΩ 
.
ΩΩ 
Button
ΩΩ  
(
ΩΩ  !
$str
ΩΩ! &
)
ΩΩ& '
)
ΩΩ' (
{
ææ 
Material
øø 
[
øø 
]
øø 
temp
øø 
=
øø  !
new
øø" %
Material
øø& .
[
øø. /
	materials
øø/ 8
.
øø8 9
Length
øø9 ?
+
øø@ A
$num
øøB C
]
øøC D
;
øøD E
System
¿¿ 
.
¿¿ 
Array
¿¿ 
.
¿¿ 
Copy
¿¿ !
(
¿¿! "
	materials
¿¿" +
,
¿¿+ ,
$num
¿¿- .
,
¿¿. /
temp
¿¿0 4
,
¿¿4 5
$num
¿¿6 7
,
¿¿7 8
	materials
¿¿9 B
.
¿¿B C
Length
¿¿C I
)
¿¿I J
;
¿¿J K
	materials
¡¡ 
=
¡¡ 
temp
¡¡  
;
¡¡  !
SaveUserMaterials
¬¬ !
(
¬¬! "
	materials
¬¬" +
)
¬¬+ ,
;
¬¬, -
}
√√ 
	GUILayout
≈≈ 
.
≈≈ 
EndScrollView
≈≈ #
(
≈≈# $
)
≈≈$ %
;
≈≈% &
}
∆∆ 	
public
œœ 
bool
œœ  
ClickShortcutCheck
œœ &
(
œœ& '
EventModifiers
œœ' 5
em
œœ6 8
,
œœ8 9
ProBuilderMesh
œœ: H
pb
œœI K
,
œœK L
Face
œœM Q
quad
œœR V
)
œœV W
{
–– 	
if
—— 
(
—— 
UVEditor
—— 
.
—— 
instance
—— !
==
——" $
null
——% )
)
——) *
{
““ 
if
”” 
(
”” 
em
”” 
==
”” 
(
”” 
EventModifiers
”” )
.
””) *
Control
””* 1
|
””2 3
EventModifiers
””4 B
.
””B C
Shift
””C H
)
””H I
)
””I J
{
‘‘ 
UndoUtility
’’ 
.
’’  
RecordObject
’’  ,
(
’’, -
pb
’’- /
,
’’/ 0
$str
’’1 >
)
’’> ?
;
’’? @
quad
÷÷ 
.
÷÷ 
material
÷÷ !
=
÷÷" #
m_QueuedMaterial
÷÷$ 4
;
÷÷4 5
pb
◊◊ 
.
◊◊ 
ToMesh
◊◊ 
(
◊◊ 
)
◊◊ 
;
◊◊  
pb
ÿÿ 
.
ÿÿ 
Refresh
ÿÿ 
(
ÿÿ 
)
ÿÿ  
;
ÿÿ  !
pb
ŸŸ 
.
ŸŸ 
Optimize
ŸŸ 
(
ŸŸ  
)
ŸŸ  !
;
ŸŸ! "
EditorUtility
⁄⁄ !
.
⁄⁄! "
ShowNotification
⁄⁄" 2
(
⁄⁄2 3
$str
⁄⁄3 I
)
⁄⁄I J
;
⁄⁄J K
return
€€ 
true
€€ 
;
€€  
}
‹‹ 
}
›› 
return
ﬂﬂ 
false
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
static
‚‚ 
void
‚‚ 
ApplyMaterial
‚‚ !
(
‚‚! "
IEnumerable
‚‚" -
<
‚‚- .
ProBuilderMesh
‚‚. <
>
‚‚< =
	selection
‚‚> G
,
‚‚G H
Material
‚‚I Q
mat
‚‚R U
)
‚‚U V
{
„„ 	
if
‰‰ 
(
‰‰ 
mat
‰‰ 
==
‰‰ 
null
‰‰ 
)
‰‰ 
return
ÂÂ 
;
ÂÂ 
UndoUtility
ÁÁ 
.
ÁÁ 
RecordComponents
ÁÁ (
<
ÁÁ( )
MeshRenderer
ÁÁ) 5
,
ÁÁ5 6
ProBuilderMesh
ÁÁ7 E
>
ÁÁE F
(
ÁÁF G
	selection
ÁÁG P
,
ÁÁP Q
$str
ÁÁR `
)
ÁÁ` a
;
ÁÁa b
foreach
ÈÈ 
(
ÈÈ 
var
ÈÈ 
mesh
ÈÈ 
in
ÈÈ  
	selection
ÈÈ! *
)
ÈÈ* +
{
ÍÍ 
var
ÎÎ 
applyPerFace
ÎÎ  
=
ÎÎ! "
ProBuilderEditor
ÎÎ# 3
.
ÎÎ3 4

selectMode
ÎÎ4 >
.
ÎÎ> ?
ContainsFlag
ÎÎ? K
(
ÎÎK L

SelectMode
ÎÎL V
.
ÎÎV W
Face
ÎÎW [
)
ÎÎ[ \
&&
ÎÎ] _
mesh
ÎÎ` d
.
ÎÎd e
	faceCount
ÎÎe n
>
ÎÎo p
$num
ÎÎq r
;
ÎÎr s
mesh
ÏÏ 
.
ÏÏ 
SetMaterial
ÏÏ  
(
ÏÏ  !
applyPerFace
ÏÏ! -
?
ÏÏ. /
mesh
ÏÏ0 4
.
ÏÏ4 5
GetSelectedFaces
ÏÏ5 E
(
ÏÏE F
)
ÏÏF G
:
ÏÏH I
mesh
ÏÏJ N
.
ÏÏN O
facesInternal
ÏÏO \
,
ÏÏ\ ]
mat
ÏÏ^ a
)
ÏÏa b
;
ÏÏb c!
InternalMeshUtility
ÌÌ #
.
ÌÌ# $(
FilterUnusedSubmeshIndexes
ÌÌ$ >
(
ÌÌ> ?
mesh
ÌÌ? C
)
ÌÌC D
;
ÌÌD E
mesh
ÓÓ 
.
ÓÓ 
Rebuild
ÓÓ 
(
ÓÓ 
)
ÓÓ 
;
ÓÓ 
mesh
ÔÔ 
.
ÔÔ 
Optimize
ÔÔ 
(
ÔÔ 
)
ÔÔ 
;
ÔÔ  
}
 
if
ÚÚ 
(
ÚÚ 
ProBuilderEditor
ÚÚ  
.
ÚÚ  !
instance
ÚÚ! )
!=
ÚÚ* ,
null
ÚÚ- 1
&&
ÚÚ2 4
MeshSelection
ÚÚ5 B
.
ÚÚB C
selectedFaceCount
ÚÚC T
>
ÚÚU V
$num
ÚÚW X
)
ÚÚX Y
EditorUtility
ÛÛ 
.
ÛÛ 
ShowNotification
ÛÛ .
(
ÛÛ. /
$str
ÛÛ/ ?
+
ÛÛ@ A
mat
ÛÛB E
.
ÛÛE F
name
ÛÛF J
)
ÛÛJ K
;
ÛÛK L
}
ÙÙ 	
static
ˆˆ 
void
ˆˆ 
SaveUserMaterials
ˆˆ %
(
ˆˆ% &
Material
ˆˆ& .
[
ˆˆ. /
]
ˆˆ/ 0
	materials
ˆˆ1 :
)
ˆˆ: ;
{
˜˜ 	
s_CurrentPalette
¯¯ 
.
¯¯ 
array
¯¯ "
=
¯¯# $
	materials
¯¯% .
;
¯¯. /
UnityEditor
˘˘ 
.
˘˘ 
EditorUtility
˘˘ %
.
˘˘% &
SetDirty
˘˘& .
(
˘˘. /
s_CurrentPalette
˘˘/ ?
)
˘˘? @
;
˘˘@ A
AssetDatabase
˙˙ 
.
˙˙ 

SaveAssets
˙˙ $
(
˙˙$ %
)
˙˙% &
;
˙˙& '
}
˚˚ 	
void
˝˝  
SetMaterialPalette
˝˝ 
(
˝˝  
MaterialPalette
˝˝  /
palette
˝˝0 7
)
˝˝7 8
{
˛˛ 	
s_CurrentPalette
ˇˇ 
=
ˇˇ 
palette
ˇˇ &
;
ˇˇ& '&
RefreshAvailablePalettes
ÄÄ $
(
ÄÄ$ %
)
ÄÄ% &
;
ÄÄ& '
}
ÅÅ 	
void
ÉÉ &
RefreshAvailablePalettes
ÉÉ %
(
ÉÉ% &
)
ÉÉ& '
{
ÑÑ 	
MaterialPalette
ÖÖ 
cur
ÖÖ 
=
ÖÖ  !
CurrentPalette
ÖÖ" 0
;
ÖÖ0 1!
m_AvailablePalettes
ÜÜ 
=
ÜÜ  !
FileUtility
ÜÜ" -
.
ÜÜ- .
FindAndLoadAssets
ÜÜ. ?
<
ÜÜ? @
MaterialPalette
ÜÜ@ O
>
ÜÜO P
(
ÜÜP Q
)
ÜÜQ R
;
ÜÜR S%
m_AvailablePalettes_Str
áá #
=
áá$ %!
m_AvailablePalettes
áá& 9
.
áá9 :
Select
áá: @
(
áá@ A
x
ááA B
=>
ááC E
x
ááF G
.
ááG H
name
ááH L
)
ááL M
.
ááM N
ToArray
ááN U
(
ááU V
)
ááV W
;
ááW X
ArrayUtility
àà 
.
àà 
Add
àà 
<
àà 
string
àà #
>
àà# $
(
àà$ %
ref
àà% (%
m_AvailablePalettes_Str
àà) @
,
àà@ A
string
ààB H
.
ààH I
Empty
ààI N
)
ààN O
;
ààO P
ArrayUtility
ââ 
.
ââ 
Add
ââ 
<
ââ 
string
ââ #
>
ââ# $
(
ââ$ %
ref
ââ% (%
m_AvailablePalettes_Str
ââ) @
,
ââ@ A
$str
ââB [
)
ââ[ \
;
ââ\ ]#
m_CurrentPaletteIndex
ää !
=
ää" #
System
ää$ *
.
ää* +
Array
ää+ 0
.
ää0 1
IndexOf
ää1 8
(
ää8 9!
m_AvailablePalettes
ää9 L
,
ääL M
cur
ääN Q
)
ääQ R
;
ääR S#
s_MaterialPalettePath
ãã !
.
ãã! "
SetValue
ãã" *
(
ãã* +
AssetDatabase
ãã+ 8
.
ãã8 9
GetAssetPath
ãã9 E
(
ããE F
cur
ããF I
)
ããI J
,
ããJ K
true
ããL P
)
ããP Q
;
ããQ R
}
åå 	
}
çç 
}éé È˙
ìD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\MeshSelection.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{		 
[ 
InitializeOnLoad 
] 
public 

static 
class 
MeshSelection %
{ 
static 
List 
< 
ProBuilderMesh "
>" #
s_TopSelection$ 2
=3 4
new5 8
List9 =
<= >
ProBuilderMesh> L
>L M
(M N
)N O
;O P
static 
ProBuilderMesh 
s_ActiveMesh *
;* +
static 
List 
< #
MeshAndElementSelection +
>+ ,
s_ElementSelection- ?
=@ A
newB E
ListF J
<J K#
MeshAndElementSelectionK b
>b c
(c d
)d e
;e f
static 
bool +
s_TotalElementCountCacheIsDirty 3
=4 5
true6 :
;: ;
static 
bool (
s_SelectedElementGroupsDirty 0
=1 2
true3 7
;7 8
static 
bool *
s_SelectedFacesInEditAreaDirty 2
=3 4
true5 9
;9 :
static 
bool "
s_SelectionBoundsDirty *
=+ ,
true- 1
;1 2
static 
Bounds 
s_SelectionBounds '
=( )
new* -
Bounds. 4
(4 5
)5 6
;6 7
static 

Dictionary 
< 
ProBuilderMesh (
,( )
List* .
<. /
Face/ 3
>3 4
>4 5%
s_SelectedFacesInEditArea6 O
=P Q
newR U

DictionaryV `
<` a
ProBuilderMesha o
,o p
Listq u
<u v
Facev z
>z {
>{ |
(| }
)} ~
;~ 
public 
static 
Bounds 
bounds #
{   	
get!! 
{"" 
if## 
(## "
s_SelectionBoundsDirty## )
)##) *&
RecalculateSelectionBounds$$ .
($$. /
)$$/ 0
;$$0 1
return%% 
s_SelectionBounds%% (
;%%( )
}&& 
}'' 	
static)) 
int)) 
s_TotalVertexCount)) %
;))% &
static** 
int** 
s_TotalFaceCount** #
;**# $
static++ 
int++ 
s_TotalEdgeCount++ #
;++# $
static,, 
int,, $
s_TotalCommonVertexCount,, +
;,,+ ,
static-- 
int-- &
s_TotalVertexCountCompiled-- -
;--- .
static.. 
int.. (
s_TotalTriangleCountCompiled.. /
;../ 0
public33 
static33 
int33 
selectedObjectCount33 -
{33. /
get330 3
;333 4
private335 <
set33= @
;33@ A
}33B C
public99 
static99 
int99 
selectedVertexCount99 -
{99. /
get990 3
;993 4
private995 <
set99= @
;99@ A
}99B C
public?? 
static?? 
int?? %
selectedSharedVertexCount?? 3
{??4 5
get??6 9
;??9 :
private??; B
set??C F
;??F G
}??H I
publicDD 
staticDD 
intDD 
selectedFaceCountDD +
{DD, -
getDD. 1
;DD1 2
privateDD3 :
setDD; >
;DD> ?
}DD@ A
publicII 
staticII 
intII 
selectedEdgeCountII +
{II, -
getII. 1
;II1 2
privateII3 :
setII; >
;II> ?
}II@ A
internalLL 
staticLL 
intLL &
selectedFaceCountObjectMaxLL 6
{LL7 8
getLL9 <
;LL< =
privateLL> E
setLLF I
;LLI J
}LLK L
internalMM 
staticMM 
intMM &
selectedEdgeCountObjectMaxMM 6
{MM7 8
getMM9 <
;MM< =
privateMM> E
setMMF I
;MMI J
}MMK L
internalNN 
staticNN 
intNN (
selectedVertexCountObjectMaxNN 8
{NN9 :
getNN; >
;NN> ?
privateNN@ G
setNNH K
;NNK L
}NNM N
internalOO 
staticOO 
intOO .
"selectedSharedVertexCountObjectMaxOO >
{OO? @
getOOA D
;OOD E
privateOOF M
setOON Q
;OOQ R
}OOS T
internalPP 
staticPP 
intPP ,
 selectedCoincidentVertexCountMaxPP <
{PP= >
getPP? B
;PPB C
privatePPD K
setPPL O
;PPO P
}PPQ R
internalSS 
staticSS 

DictionarySS "
<SS" #
ProBuilderMeshSS# 1
,SS1 2
ListSS3 7
<SS7 8
FaceSS8 <
>SS< =
>SS= >#
selectedFacesInEditZoneSS? V
{TT 	
getUU 
{VV 
ifWW 
(WW *
s_SelectedFacesInEditAreaDirtyWW 1
)WW1 2*
RecalculateFacesInEditableAreaXX 2
(XX2 3
)XX3 4
;XX4 5
returnYY %
s_SelectedFacesInEditAreaYY 0
;YY0 1
}ZZ 
}[[ 	
internal]] 
static]] 
void]] &
InvalidateElementSelection]] 7
(]]7 8
)]]8 9
{^^ 	(
s_SelectedElementGroupsDirty__ (
=__) *
true__+ /
;__/ 0
}`` 	
internalbb 
staticbb 
IEnumerablebb #
<bb# $#
MeshAndElementSelectionbb$ ;
>bb; <
elementSelectionbb= M
{cc 	
getdd 
{ee ,
 RecalculateSelectedElementGroupsff 0
(ff0 1
)ff1 2
;ff2 3
returngg 
s_ElementSelectiongg )
;gg) *
}hh 
}ii 	
statickk 
MeshSelectionkk 
(kk 
)kk 
{ll 	
	Selectionmm 
.mm 
selectionChangedmm &
+=mm' )$
OnObjectSelectionChangedmm* B
;mmB C
Undonn 
.nn 
undoRedoPerformednn "
+=nn# %&
EnsureMeshSelectionIsValidnn& @
;nn@ A
ProBuilderMeshoo 
.oo #
elementSelectionChangedoo 2
+=oo3 5#
ElementSelectionChangedoo6 M
;ooM N
EditorMeshUtilitypp 
.pp 
meshOptimizedpp +
+=pp, .
(pp/ 0
xpp0 1
,pp1 2
ypp3 4
)pp4 5
=>pp6 8
{pp9 :+
s_TotalElementCountCacheIsDirtypp; Z
=pp[ \
truepp] a
;ppa b
}ppc d
;ppd e
ProBuilderMeshqq 
.qq $
componentWillBeDestroyedqq 3
+=qq4 6+
RemoveMeshFromSelectionInternalqq7 V
;qqV W
ProBuilderMeshrr 
.rr !
componentHasBeenResetrr 0
+=rr1 3/
#RefreshSelectionAfterComponentResetrr4 W
;rrW X$
OnObjectSelectionChangedss $
(ss$ %
)ss% &
;ss& '
}tt 	
publicyy 
staticyy 
ProBuilderMeshyy $

activeMeshyy% /
{zz 	
get{{ 
{|| 

GameObject
ÄÄ 
activeGo
ÄÄ #
=
ÄÄ$ %
(
ÄÄ& '
s_ActiveMesh
ÄÄ' 3
?
ÄÄ4 5
s_ActiveMesh
ÄÄ6 B
.
ÄÄB C

gameObject
ÄÄC M
:
ÄÄN O
null
ÄÄP T
)
ÄÄT U
;
ÄÄU V
if
ÇÇ 
(
ÇÇ 
activeGo
ÇÇ 
!=
ÇÇ 
	Selection
ÇÇ  )
.
ÇÇ) *
activeGameObject
ÇÇ* :
)
ÇÇ: ;
s_ActiveMesh
ÉÉ  
=
ÉÉ! "
	Selection
ÉÉ# ,
.
ÉÉ, -
activeGameObject
ÉÉ- =
!=
ÉÉ> @
null
ÉÉA E
?
ÉÉF G
	Selection
ÉÉH Q
.
ÉÉQ R
activeGameObject
ÉÉR b
.
ÉÉb c
GetComponent
ÉÉc o
<
ÉÉo p
ProBuilderMesh
ÉÉp ~
>
ÉÉ~ 
(ÉÉ Ä
)ÉÉÄ Å
:ÉÉÇ É
nullÉÉÑ à
;ÉÉà â
return
ÖÖ 
s_ActiveMesh
ÖÖ #
;
ÖÖ# $
}
ÜÜ 
}
áá 	
internal
ââ 
static
ââ 
Face
ââ 

activeFace
ââ '
{
ää 	
get
ãã 
{
ãã 
return
ãã 

activeMesh
ãã #
!=
ãã$ &
null
ãã' +
?
ãã, -

activeMesh
ãã. 8
.
ãã8 9#
selectedFacesInternal
ãã9 N
.
ããN O
LastOrDefault
ããO \
(
ãã\ ]
)
ãã] ^
:
ãã_ `
null
ããa e
;
ããe f
}
ããg h
}
åå 	
public
ëë 
static
ëë 
event
ëë 
System
ëë "
.
ëë" #
Action
ëë# )$
objectSelectionChanged
ëë* @
;
ëë@ A
static
ìì 
HashSet
ìì 
<
ìì 
ProBuilderMesh
ìì %
>
ìì% &*
s_UnitySelectionChangeMeshes
ìì' C
=
ììD E
new
ììF I
HashSet
ììJ Q
<
ììQ R
ProBuilderMesh
ììR `
>
ìì` a
(
ììa b
)
ììb c
;
ììc d
internal
ïï 
static
ïï 
void
ïï &
OnObjectSelectionChanged
ïï 5
(
ïï5 6
)
ïï6 7
{
ññ 	*
s_UnitySelectionChangeMeshes
ôô (
.
ôô( )
Clear
ôô) .
(
ôô. /
)
ôô/ 0
;
ôô0 1 
s_ElementSelection
öö 
.
öö 
Clear
öö $
(
öö$ %
)
öö% &
;
öö& '
s_ActiveMesh
õõ 
=
õõ 
null
õõ 
;
õõ  
var
ùù 
gameObjects
ùù 
=
ùù 
	Selection
ùù '
.
ùù' (
gameObjects
ùù( 3
;
ùù3 4
for
üü 
(
üü 
int
üü 
i
üü 
=
üü 
$num
üü 
,
üü 
c
üü 
=
üü 
gameObjects
üü  +
.
üü+ ,
Length
üü, 2
;
üü2 3
i
üü4 5
<
üü6 7
c
üü8 9
;
üü9 :
i
üü; <
++
üü< >
)
üü> ?
{
†† 
ProBuilderMesh
¢¢ 
mesh
¢¢ #
;
¢¢# $
if
££ 
(
££ 
gameObjects
££ 
[
££ 
i
££  
]
££  !
.
££! "
TryGetComponent
££" 1
<
££1 2
ProBuilderMesh
££2 @
>
££@ A
(
££A B
out
££B E
mesh
££F J
)
££J K
)
££K L
{
®® 
if
©© 
(
©© 
gameObjects
©© #
[
©©# $
i
©©$ %
]
©©% &
==
©©' )
	Selection
©©* 3
.
©©3 4
activeGameObject
©©4 D
)
©©D E
s_ActiveMesh
™™ $
=
™™% &
mesh
™™' +
;
™™+ ,*
s_UnitySelectionChangeMeshes
¨¨ 0
.
¨¨0 1
Add
¨¨1 4
(
¨¨4 5
mesh
¨¨5 9
)
¨¨9 :
;
¨¨: ;
}
≠≠ 
}
ÆÆ 
for
∞∞ 
(
∞∞ 
int
∞∞ 
i
∞∞ 
=
∞∞ 
$num
∞∞ 
,
∞∞ 
c
∞∞ 
=
∞∞ 
s_TopSelection
∞∞  .
.
∞∞. /
Count
∞∞/ 4
;
∞∞4 5
i
∞∞6 7
<
∞∞8 9
c
∞∞: ;
;
∞∞; <
i
∞∞= >
++
∞∞> @
)
∞∞@ A
{
±± 
if
≤≤ 
(
≤≤ 
!
≤≤ *
s_UnitySelectionChangeMeshes
≤≤ 1
.
≤≤1 2
Contains
≤≤2 :
(
≤≤: ;
s_TopSelection
≤≤; I
[
≤≤I J
i
≤≤J K
]
≤≤K L
)
≤≤L M
)
≤≤M N
{
≥≥ 
if
¥¥ 
(
¥¥ 
s_TopSelection
¥¥ %
[
¥¥% &
i
¥¥& '
]
¥¥' (
!=
¥¥) +
null
¥¥, 0
)
¥¥0 1
UndoUtility
µµ #
.
µµ# $
RecordSelection
µµ$ 3
(
µµ3 4
s_TopSelection
µµ4 B
[
µµB C
i
µµC D
]
µµD E
,
µµE F
$str
µµG Y
)
µµY Z
;
µµZ [
s_TopSelection
∂∂ "
[
∂∂" #
i
∂∂# $
]
∂∂$ %
.
∂∂% &
ClearSelection
∂∂& 4
(
∂∂4 5
)
∂∂5 6
;
∂∂6 7
}
∑∑ 
}
∏∏ 
s_TopSelection
∫∫ 
.
∫∫ 
Clear
∫∫  
(
∫∫  !
)
∫∫! "
;
∫∫" #
foreach
ºº 
(
ºº 
var
ºº 
i
ºº 
in
ºº *
s_UnitySelectionChangeMeshes
ºº :
)
ºº: ;
{
ΩΩ 
if
øø 
(
øø 
string
øø 
.
øø 
IsNullOrEmpty
øø '
(
øø' (
AssetDatabase
øø( 5
.
øø5 6
GetAssetPath
øø6 B
(
øøB C
i
øøC D
.
øøD E

gameObject
øøE O
)
øøO P
)
øøP Q
)
øøQ R
s_TopSelection
¿¿ "
.
¿¿" #
Add
¿¿# &
(
¿¿& '
i
¿¿' (
)
¿¿( )
;
¿¿) *
}
¡¡ !
selectedObjectCount
√√ 
=
√√  !
s_TopSelection
√√" 0
.
√√0 1
Count
√√1 6
;
√√6 7)
OnComponentSelectionChanged
≈≈ '
(
≈≈' (
)
≈≈( )
;
≈≈) *
if
«« 
(
«« $
objectSelectionChanged
«« &
!=
««' )
null
««* .
)
««. /$
objectSelectionChanged
»» &
(
»»& '
)
»»' (
;
»»( )*
s_UnitySelectionChangeMeshes
   (
.
  ( )
Clear
  ) .
(
  . /
)
  / 0
;
  0 1
}
ÀÀ 	
internal
ÕÕ 
static
ÕÕ 
void
ÕÕ )
OnComponentSelectionChanged
ÕÕ 8
(
ÕÕ8 9
)
ÕÕ9 :
{
ŒŒ 	-
s_TotalElementCountCacheIsDirty
œœ +
=
œœ, -
true
œœ. 2
;
œœ2 3,
s_SelectedFacesInEditAreaDirty
–– *
=
––+ ,
true
––- 1
;
––1 2*
s_SelectedElementGroupsDirty
—— (
=
——) *
true
——+ /
;
——/ 0$
s_SelectionBoundsDirty
““ "
=
““# $
true
““% )
;
““) *!
selectedVertexCount
‘‘ 
=
‘‘  !
$num
‘‘" #
;
‘‘# $
selectedFaceCount
’’ 
=
’’ 
$num
’’  !
;
’’! "
selectedEdgeCount
÷÷ 
=
÷÷ 
$num
÷÷  !
;
÷÷! "'
selectedSharedVertexCount
◊◊ %
=
◊◊& '
$num
◊◊( )
;
◊◊) *(
selectedFaceCountObjectMax
ŸŸ &
=
ŸŸ' (
$num
ŸŸ) *
;
ŸŸ* +*
selectedVertexCountObjectMax
⁄⁄ (
=
⁄⁄) *
$num
⁄⁄+ ,
;
⁄⁄, -0
"selectedSharedVertexCountObjectMax
€€ .
=
€€/ 0
$num
€€1 2
;
€€2 3.
 selectedCoincidentVertexCountMax
‹‹ ,
=
‹‹- .
$num
‹‹/ 0
;
‹‹0 1(
selectedEdgeCountObjectMax
›› &
=
››' (
$num
››) *
;
››* +0
"RecalculateSelectedComponentCounts
ﬂﬂ .
(
ﬂﬂ. /
)
ﬂﬂ/ 0
;
ﬂﬂ0 1
}
‡‡ 	
internal
ÊÊ 
static
ÊÊ 
void
ÊÊ (
EnsureMeshSelectionIsValid
ÊÊ 7
(
ÊÊ7 8
)
ÊÊ8 9
{
ÁÁ 	
for
ËË 
(
ËË 
int
ËË 
i
ËË 
=
ËË 
$num
ËË 
;
ËË 
i
ËË 
<
ËË 
topInternal
ËË  +
.
ËË+ ,
Count
ËË, 1
;
ËË1 2
i
ËË3 4
++
ËË4 6
)
ËË6 7
{
ÈÈ 
if
ÍÍ 
(
ÍÍ 
topInternal
ÍÍ 
[
ÍÍ  
i
ÍÍ  !
]
ÍÍ! "
==
ÍÍ# %
null
ÍÍ& *
||
ÍÍ+ -
!
ÍÍ. /
	Selection
ÍÍ/ 8
.
ÍÍ8 9
Contains
ÍÍ9 A
(
ÍÍA B
topInternal
ÍÍB M
[
ÍÍM N
i
ÍÍN O
]
ÍÍO P
.
ÍÍP Q

gameObject
ÍÍQ [
)
ÍÍ[ \
)
ÍÍ\ ]
{
ÎÎ 
EditorApplication
ÏÏ %
.
ÏÏ% &
	delayCall
ÏÏ& /
+=
ÏÏ0 2&
OnObjectSelectionChanged
ÏÏ3 K
;
ÏÏK L
break
ÌÌ 
;
ÌÌ 
}
ÓÓ 
}
ÔÔ 
}
 	
static
ÚÚ 
void
ÚÚ %
ElementSelectionChanged
ÚÚ +
(
ÚÚ+ ,
ProBuilderMesh
ÚÚ, :
mesh
ÚÚ; ?
)
ÚÚ? @
{
ÛÛ 	(
InvalidateElementSelection
ÙÙ &
(
ÙÙ& '
)
ÙÙ' (
;
ÙÙ( )
}
ıı 	
internal
˜˜ 
static
˜˜ 
void
˜˜ .
 RecalculateSelectedElementGroups
˜˜ =
(
˜˜= >
)
˜˜> ?
{
¯¯ 	
if
˘˘ 
(
˘˘ 
!
˘˘ *
s_SelectedElementGroupsDirty
˘˘ -
)
˘˘- .
return
˙˙ 
;
˙˙ *
s_SelectedElementGroupsDirty
¸¸ (
=
¸¸) *
false
¸¸+ 0
;
¸¸0 1 
s_ElementSelection
˝˝ 
.
˝˝ 
Clear
˝˝ $
(
˝˝$ %
)
˝˝% &
;
˝˝& '
var
ˇˇ 

activeTool
ˇˇ 
=
ˇˇ 
ProBuilderEditor
ˇˇ -
.
ˇˇ- .

activeTool
ˇˇ. 8
;
ˇˇ8 9
if
ÅÅ 
(
ÅÅ 

activeTool
ÅÅ 
!=
ÅÅ 
null
ÅÅ "
)
ÅÅ" #
{
ÇÇ 
foreach
ÉÉ 
(
ÉÉ 
var
ÉÉ 
mesh
ÉÉ !
in
ÉÉ" $
s_TopSelection
ÉÉ% 3
)
ÉÉ3 4 
s_ElementSelection
ÑÑ &
.
ÑÑ& '
Add
ÑÑ' *
(
ÑÑ* +

activeTool
ÑÑ+ 5
.
ÑÑ5 6!
GetElementSelection
ÑÑ6 I
(
ÑÑI J
mesh
ÑÑJ N
,
ÑÑN O$
VertexManipulationTool
ÑÑP f
.
ÑÑf g

pivotPoint
ÑÑg q
)
ÑÑq r
)
ÑÑr s
;
ÑÑs t
}
ÖÖ 
}
ÜÜ 	
internal
àà 
static
àà 
void
àà 0
"RecalculateSelectedComponentCounts
àà ?
(
àà? @
)
àà@ A
{
ââ 	
for
ää 
(
ää 
var
ää 
i
ää 
=
ää 
$num
ää 
;
ää 
i
ää 
<
ää 
topInternal
ää  +
.
ää+ ,
Count
ää, 1
;
ää1 2
i
ää3 4
++
ää4 6
)
ää6 7
{
ãã 
var
åå 
mesh
åå 
=
åå 
topInternal
åå &
[
åå& '
i
åå' (
]
åå( )
;
åå) *
selectedFaceCount
éé !
+=
éé" $
mesh
éé% )
.
éé) *
selectedFaceCount
éé* ;
;
éé; <
selectedEdgeCount
èè !
+=
èè" $
mesh
èè% )
.
èè) *
selectedEdgeCount
èè* ;
;
èè; <!
selectedVertexCount
êê #
+=
êê$ &
mesh
êê' +
.
êê+ ,%
selectedIndexesInternal
êê, C
.
êêC D
Length
êêD J
;
êêJ K'
selectedSharedVertexCount
ëë )
+=
ëë* ,
mesh
ëë- 1
.
ëë1 2)
selectedSharedVerticesCount
ëë2 M
;
ëëM N*
selectedVertexCountObjectMax
ìì ,
=
ìì- .
System
ìì/ 5
.
ìì5 6
Math
ìì6 :
.
ìì: ;
Max
ìì; >
(
ìì> ?*
selectedVertexCountObjectMax
ìì? [
,
ìì[ \
mesh
ìì] a
.
ììa b%
selectedIndexesInternal
ììb y
.
ììy z
Lengthììz Ä
)ììÄ Å
;ììÅ Ç0
"selectedSharedVertexCountObjectMax
îî 2
=
îî3 4
System
îî5 ;
.
îî; <
Math
îî< @
.
îî@ A
Max
îîA D
(
îîD E0
"selectedSharedVertexCountObjectMax
îîE g
,
îîg h
mesh
îîi m
.
îîm n*
selectedSharedVerticesCountîîn â
)îîâ ä
;îîä ã.
 selectedCoincidentVertexCountMax
ïï 0
=
ïï1 2
System
ïï3 9
.
ïï9 :
Math
ïï: >
.
ïï> ?
Max
ïï? B
(
ïïB C.
 selectedCoincidentVertexCountMax
ïïC c
,
ïïc d
mesh
ïïe i
.
ïïi j,
selectedCoincidentVertexCountïïj á
)ïïá à
;ïïà â(
selectedFaceCountObjectMax
ññ *
=
ññ+ ,
System
ññ- 3
.
ññ3 4
Math
ññ4 8
.
ññ8 9
Max
ññ9 <
(
ññ< =(
selectedFaceCountObjectMax
ññ= W
,
ññW X
mesh
ññY ]
.
ññ] ^
selectedFaceCount
ññ^ o
)
ñño p
;
ññp q(
selectedEdgeCountObjectMax
óó *
=
óó+ ,
System
óó- 3
.
óó3 4
Math
óó4 8
.
óó8 9
Max
óó9 <
(
óó< =(
selectedEdgeCountObjectMax
óó= W
,
óóW X
mesh
óóY ]
.
óó] ^
selectedEdgeCount
óó^ o
)
óóo p
;
óóp q
}
òò 
}
ôô 	
internal
õõ 
static
õõ 
void
õõ (
RecalculateSelectionBounds
õõ 7
(
õõ7 8
)
õõ8 9
{
úú 	$
s_SelectionBoundsDirty
ùù "
=
ùù# $
false
ùù% *
;
ùù* +
s_SelectionBounds
ûû 
=
ûû 
new
ûû  #
Bounds
ûû$ *
(
ûû* +
)
ûû+ ,
;
ûû, -
var
üü 
boundsInitialized
üü !
=
üü" #
false
üü$ )
;
üü) *
for
°° 
(
°° 
int
°° 
i
°° 
=
°° 
$num
°° 
,
°° 
c
°° 
=
°° 
topInternal
°°  +
.
°°+ ,
Count
°°, 1
;
°°1 2
i
°°3 4
<
°°5 6
c
°°7 8
;
°°8 9
i
°°: ;
++
°°; =
)
°°= >
{
¢¢ 
var
££ 
mesh
££ 
=
££ 
topInternal
££ &
[
££& '
i
££' (
]
££( )
;
££) *
if
¶¶ 
(
¶¶ 
mesh
¶¶ 
==
¶¶ 
null
¶¶  
)
¶¶  !
return
ßß 
;
ßß 
if
©© 
(
©© 
!
©© 
boundsInitialized
©© &
&&
©©' )
mesh
©©* .
.
©©. /!
selectedVertexCount
©©/ B
>
©©C D
$num
©©E F
)
©©F G
{
™™ 
boundsInitialized
´´ %
=
´´& '
true
´´( ,
;
´´, -
s_SelectionBounds
¨¨ %
=
¨¨& '
new
¨¨( +
Bounds
¨¨, 2
(
¨¨2 3
mesh
¨¨3 7
.
¨¨7 8
	transform
¨¨8 A
.
¨¨A B
TransformPoint
¨¨B P
(
¨¨P Q
mesh
¨¨Q U
.
¨¨U V
positionsInternal
¨¨V g
[
¨¨g h
mesh
¨¨h l
.
¨¨l m&
selectedIndexesInternal¨¨m Ñ
[¨¨Ñ Ö
$num¨¨Ö Ü
]¨¨Ü á
]¨¨á à
)¨¨à â
,¨¨â ä
Vector3¨¨ã í
.¨¨í ì
zero¨¨ì ó
)¨¨ó ò
;¨¨ò ô
}
≠≠ 
if
ØØ 
(
ØØ 
mesh
ØØ 
.
ØØ !
selectedVertexCount
ØØ ,
>
ØØ- .
$num
ØØ/ 0
)
ØØ0 1
{
∞∞ 
var
±± 
shared
±± 
=
±±  
mesh
±±! %
.
±±% &$
sharedVerticesInternal
±±& <
;
±±< =
foreach
≥≥ 
(
≥≥ 
var
≥≥  
sharedVertex
≥≥! -
in
≥≥. 0
mesh
≥≥1 5
.
≥≥5 6$
selectedSharedVertices
≥≥6 L
)
≥≥L M
s_SelectionBounds
¥¥ )
.
¥¥) *
Encapsulate
¥¥* 5
(
¥¥5 6
mesh
¥¥6 :
.
¥¥: ;
	transform
¥¥; D
.
¥¥D E
TransformPoint
¥¥E S
(
¥¥S T
mesh
¥¥T X
.
¥¥X Y
positionsInternal
¥¥Y j
[
¥¥j k
shared
¥¥k q
[
¥¥q r
sharedVertex
¥¥r ~
]
¥¥~ 
[¥¥ Ä
$num¥¥Ä Å
]¥¥Å Ç
]¥¥Ç É
)¥¥É Ñ
)¥¥Ñ Ö
;¥¥Ö Ü
}
µµ 
}
∂∂ 
}
∑∑ 	
static
ππ 
void
ππ ,
RecalculateFacesInEditableArea
ππ 2
(
ππ2 3
)
ππ3 4
{
∫∫ 	,
s_SelectedFacesInEditAreaDirty
ªª *
=
ªª+ ,
false
ªª- 2
;
ªª2 3'
s_SelectedFacesInEditArea
ºº %
.
ºº% &
Clear
ºº& +
(
ºº+ ,
)
ºº, -
;
ºº- .
foreach
ææ 
(
ææ 
var
ææ 
mesh
ææ 
in
ææ  
topInternal
ææ! ,
)
ææ, -
{
øø '
s_SelectedFacesInEditArea
¿¿ )
.
¿¿) *
Add
¿¿* -
(
¿¿- .
mesh
¿¿. 2
,
¿¿2 3
ElementSelection
¿¿4 D
.
¿¿D E
GetNeighborFaces
¿¿E U
(
¿¿U V
mesh
¿¿V Z
,
¿¿Z [
mesh
¿¿\ `
.
¿¿` a%
selectedIndexesInternal
¿¿a x
)
¿¿x y
)
¿¿y z
;
¿¿z {
}
¡¡ 
}
¬¬ 	
public
»» 
static
»» 
IEnumerable
»» !
<
»»! "
ProBuilderMesh
»»" 0
>
»»0 1
top
»»2 5
{
…… 	
get
   
{
   
return
   
new
    
ReadOnlyCollection
   /
<
  / 0
ProBuilderMesh
  0 >
>
  > ?
(
  ? @
s_TopSelection
  @ N
)
  N O
;
  O P
}
  Q R
}
ÀÀ 	
internal
ÕÕ 
static
ÕÕ 
List
ÕÕ 
<
ÕÕ 
ProBuilderMesh
ÕÕ +
>
ÕÕ+ ,
topInternal
ÕÕ- 8
{
ŒŒ 	
get
œœ 
{
œœ 
return
œœ 
s_TopSelection
œœ '
;
œœ' (
}
œœ) *
}
–– 	
public
÷÷ 
static
÷÷ 
IEnumerable
÷÷ !
<
÷÷! "
ProBuilderMesh
÷÷" 0
>
÷÷0 1
deep
÷÷2 6
{
◊◊ 	
get
ÿÿ 
{
ÿÿ 
return
ÿÿ 
	Selection
ÿÿ "
.
ÿÿ" #
gameObjects
ÿÿ# .
.
ÿÿ. /

SelectMany
ÿÿ/ 9
(
ÿÿ9 :
x
ÿÿ: ;
=>
ÿÿ< >
x
ÿÿ? @
.
ÿÿ@ A%
GetComponentsInChildren
ÿÿA X
<
ÿÿX Y
ProBuilderMesh
ÿÿY g
>
ÿÿg h
(
ÿÿh i
)
ÿÿi j
)
ÿÿj k
;
ÿÿk l
}
ÿÿm n
}
ŸŸ 	
internal
€€ 
static
€€ 
bool
€€ 
Contains
€€ %
(
€€% &
ProBuilderMesh
€€& 4
mesh
€€5 9
)
€€9 :
{
‹‹ 	
return
›› 
s_TopSelection
›› !
.
››! "
Contains
››" *
(
››* +
mesh
››+ /
)
››/ 0
;
››0 1
}
ﬁﬁ 	
public
ÁÁ 
static
ÁÁ 
int
ÁÁ 
totalVertexCount
ÁÁ *
{
ÁÁ+ ,
get
ÁÁ- 0
{
ÁÁ1 2"
RebuildElementCounts
ÁÁ3 G
(
ÁÁG H
)
ÁÁH I
;
ÁÁI J
return
ÁÁK Q 
s_TotalVertexCount
ÁÁR d
;
ÁÁd e
}
ÁÁf g
}
ÁÁh i
public
ÏÏ 
static
ÏÏ 
int
ÏÏ $
totalCommonVertexCount
ÏÏ 0
{
ÏÏ1 2
get
ÏÏ3 6
{
ÏÏ7 8"
RebuildElementCounts
ÏÏ9 M
(
ÏÏM N
)
ÏÏN O
;
ÏÏO P
return
ÏÏQ W&
s_TotalCommonVertexCount
ÏÏX p
;
ÏÏp q
}
ÏÏr s
}
ÏÏt u
internal
ÓÓ 
static
ÓÓ 
int
ÓÓ '
totalVertexCountOptimized
ÓÓ 5
{
ÓÓ6 7
get
ÓÓ8 ;
{
ÓÓ< ="
RebuildElementCounts
ÓÓ> R
(
ÓÓR S
)
ÓÓS T
;
ÓÓT U
return
ÓÓV \(
s_TotalVertexCountCompiled
ÓÓ] w
;
ÓÓw x
}
ÓÓy z
}
ÓÓ{ |
public
ÛÛ 
static
ÛÛ 
int
ÛÛ 
totalFaceCount
ÛÛ (
{
ÛÛ) *
get
ÛÛ+ .
{
ÛÛ/ 0"
RebuildElementCounts
ÛÛ1 E
(
ÛÛE F
)
ÛÛF G
;
ÛÛG H
return
ÛÛI O
s_TotalFaceCount
ÛÛP `
;
ÛÛ` a
}
ÛÛb c
}
ÛÛd e
public
¯¯ 
static
¯¯ 
int
¯¯ 
totalEdgeCount
¯¯ (
{
¯¯) *
get
¯¯+ .
{
¯¯/ 0"
RebuildElementCounts
¯¯1 E
(
¯¯E F
)
¯¯F G
;
¯¯G H
return
¯¯I O
s_TotalEdgeCount
¯¯P `
;
¯¯` a
}
¯¯b c
}
¯¯d e
public
˝˝ 
static
˝˝ 
int
˝˝ (
totalTriangleCountCompiled
˝˝ 4
{
˝˝5 6
get
˝˝7 :
{
˝˝; <"
RebuildElementCounts
˝˝= Q
(
˝˝Q R
)
˝˝R S
;
˝˝S T
return
˝˝U [*
s_TotalTriangleCountCompiled
˝˝\ x
;
˝˝x y
}
˝˝z {
}
˝˝| }
static
ˇˇ 
void
ˇˇ "
RebuildElementCounts
ˇˇ (
(
ˇˇ( )
)
ˇˇ) *
{
ÄÄ 	
if
ÅÅ 
(
ÅÅ 
!
ÅÅ -
s_TotalElementCountCacheIsDirty
ÅÅ 0
)
ÅÅ0 1
return
ÇÇ 
;
ÇÇ 
try
ÑÑ 
{
ÖÖ  
s_TotalVertexCount
ÜÜ "
=
ÜÜ# $
topInternal
ÜÜ% 0
.
ÜÜ0 1
Sum
ÜÜ1 4
(
ÜÜ4 5
x
ÜÜ5 6
=>
ÜÜ7 9
x
ÜÜ: ;
.
ÜÜ; <
vertexCount
ÜÜ< G
)
ÜÜG H
;
ÜÜH I
s_TotalFaceCount
áá  
=
áá! "
topInternal
áá# .
.
áá. /
Sum
áá/ 2
(
áá2 3
x
áá3 4
=>
áá5 7
x
áá8 9
.
áá9 :
	faceCount
áá: C
)
ááC D
;
ááD E
s_TotalEdgeCount
àà  
=
àà! "
topInternal
àà# .
.
àà. /
Sum
àà/ 2
(
àà2 3
x
àà3 4
=>
àà5 7
x
àà8 9
.
àà9 :
	edgeCount
àà: C
)
ààC D
;
ààD E&
s_TotalCommonVertexCount
ââ (
=
ââ) *
topInternal
ââ+ 6
.
ââ6 7
Sum
ââ7 :
(
ââ: ;
x
ââ; <
=>
ââ= ?
x
ââ@ A
.
ââA B$
sharedVerticesInternal
ââB X
.
ââX Y
Length
ââY _
)
ââ_ `
;
ââ` a(
s_TotalVertexCountCompiled
ää *
=
ää+ ,
topInternal
ää- 8
.
ää8 9
Sum
ää9 <
(
ää< =
x
ää= >
=>
ää? A
x
ääB C
.
ääC D
mesh
ääD H
==
ääI K
null
ääL P
?
ääQ R
$num
ääS T
:
ääU V
x
ääW X
.
ääX Y
mesh
ääY ]
.
ää] ^
vertexCount
ää^ i
)
ääi j
;
ääj k*
s_TotalTriangleCountCompiled
ãã ,
=
ãã- .
topInternal
ãã/ :
.
ãã: ;
Sum
ãã; >
(
ãã> ?
x
ãã? @
=>
ããA C
(
ããD E
int
ããE H
)
ããH I
UnityEngine
ããI T
.
ããT U

ProBuilder
ããU _
.
ãã_ `
MeshUtility
ãã` k
.
ããk l
GetPrimitiveCount
ããl }
(
ãã} ~
x
ãã~ 
.ãã Ä
meshããÄ Ñ
)ããÑ Ö
)ããÖ Ü
;ããÜ á-
s_TotalElementCountCacheIsDirty
åå /
=
åå0 1
false
åå2 7
;
åå7 8
}
çç 
catch
éé 
{
èè 
}
ëë 
}
íí 	
internal
îî 
static
îî 
void
îî 
AddToSelection
îî +
(
îî+ ,

GameObject
îî, 6
t
îî7 8
)
îî8 9
{
ïï 	
if
ññ 
(
ññ 
t
ññ 
==
ññ 
null
ññ 
||
ññ 
	Selection
ññ &
.
ññ& '
objects
ññ' .
.
ññ. /
Contains
ññ/ 7
(
ññ7 8
t
ññ8 9
)
ññ9 :
)
ññ: ;
return
óó 
;
óó 
int
ôô 
len
ôô 
=
ôô 
	Selection
ôô 
.
ôô  
objects
ôô  '
.
ôô' (
Length
ôô( .
;
ôô. /
Object
õõ 
[
õõ 
]
õõ 
temp
õõ 
=
õõ 
new
õõ 
Object
õõ  &
[
õõ& '
len
õõ' *
+
õõ+ ,
$num
õõ- .
]
õõ. /
;
õõ/ 0
for
ùù 
(
ùù 
int
ùù 
i
ùù 
=
ùù 
$num
ùù 
;
ùù 
i
ùù 
<
ùù 
len
ùù  #
;
ùù# $
i
ùù% &
++
ùù& (
)
ùù( )
temp
ûû 
[
ûû 
i
ûû 
]
ûû 
=
ûû 
	Selection
ûû #
.
ûû# $
objects
ûû$ +
[
ûû+ ,
i
ûû, -
]
ûû- .
;
ûû. /
temp
†† 
[
†† 
len
†† 
]
†† 
=
†† 
t
†† 
;
†† 
	Selection
¢¢ 
.
¢¢ 
activeObject
¢¢ "
=
¢¢# $
t
¢¢% &
;
¢¢& '
	Selection
££ 
.
££ 
objects
££ 
=
££ 
temp
££  $
;
££$ %
}
§§ 	
internal
¶¶ 
static
¶¶ 
void
¶¶ !
RemoveFromSelection
¶¶ 0
(
¶¶0 1

GameObject
¶¶1 ;
t
¶¶< =
)
¶¶= >
{
ßß 	
int
®® 
ind
®® 
=
®® 
System
®® 
.
®® 
Array
®® "
.
®®" #
IndexOf
®®# *
(
®®* +
	Selection
®®+ 4
.
®®4 5
objects
®®5 <
,
®®< =
t
®®> ?
)
®®? @
;
®®@ A
if
©© 
(
©© 
ind
©© 
<
©© 
$num
©© 
)
©© 
return
™™ 
;
™™ 
Object
¨¨ 
[
¨¨ 
]
¨¨ 
temp
¨¨ 
=
¨¨ 
new
¨¨ 
Object
¨¨  &
[
¨¨& '
	Selection
¨¨' 0
.
¨¨0 1
objects
¨¨1 8
.
¨¨8 9
Length
¨¨9 ?
-
¨¨@ A
$num
¨¨B C
]
¨¨C D
;
¨¨D E
for
ÆÆ 
(
ÆÆ 
int
ÆÆ 
i
ÆÆ 
=
ÆÆ 
$num
ÆÆ 
;
ÆÆ 
i
ÆÆ 
<
ÆÆ 
temp
ÆÆ  $
.
ÆÆ$ %
Length
ÆÆ% +
;
ÆÆ+ ,
i
ÆÆ- .
++
ÆÆ. 0
)
ÆÆ0 1
{
ØØ 
if
∞∞ 
(
∞∞ 
i
∞∞ 
!=
∞∞ 
ind
∞∞ 
)
∞∞ 
temp
±± 
[
±± 
i
±± 
]
±± 
=
±± 
	Selection
±± '
.
±±' (
objects
±±( /
[
±±/ 0
i
±±0 1
]
±±1 2
;
±±2 3
}
≤≤ 
	Selection
¥¥ 
.
¥¥ 
objects
¥¥ 
=
¥¥ 
temp
¥¥  $
;
¥¥$ %
if
∂∂ 
(
∂∂ 
	Selection
∂∂ 
.
∂∂ 
activeGameObject
∂∂ *
==
∂∂+ -
t
∂∂. /
)
∂∂/ 0
	Selection
∑∑ 
.
∑∑ 
activeObject
∑∑ &
=
∑∑' (
temp
∑∑) -
.
∑∑- .
FirstOrDefault
∑∑. <
(
∑∑< =
)
∑∑= >
;
∑∑> ?
}
∏∏ 	
internal
∫∫ 
static
∫∫ 
void
∫∫ 
MakeActiveObject
∫∫ -
(
∫∫- .

GameObject
∫∫. 8
t
∫∫9 :
)
∫∫: ;
{
ªª 	
if
ºº 
(
ºº 
t
ºº 
==
ºº 
null
ºº 
||
ºº 
!
ºº 
	Selection
ºº '
.
ºº' (
objects
ºº( /
.
ºº/ 0
Contains
ºº0 8
(
ºº8 9
t
ºº9 :
)
ºº: ;
)
ºº; <
return
ΩΩ 
;
ΩΩ 
int
øø 
ind
øø 
=
øø 
System
øø 
.
øø 
Array
øø "
.
øø" #
IndexOf
øø# *
(
øø* +
	Selection
øø+ 4
.
øø4 5
objects
øø5 <
,
øø< =
t
øø> ?
)
øø? @
;
øø@ A
int
¿¿ 
len
¿¿ 
=
¿¿ 
	Selection
¿¿ 
.
¿¿  
objects
¿¿  '
.
¿¿' (
Length
¿¿( .
;
¿¿. /
Object
¬¬ 
[
¬¬ 
]
¬¬ 
temp
¬¬ 
=
¬¬ 
new
¬¬ 
Object
¬¬  &
[
¬¬& '
len
¬¬' *
]
¬¬* +
;
¬¬+ ,
for
ƒƒ 
(
ƒƒ 
int
ƒƒ 
i
ƒƒ 
=
ƒƒ 
$num
ƒƒ 
;
ƒƒ 
i
ƒƒ 
<
ƒƒ 
len
ƒƒ  #
-
ƒƒ$ %
$num
ƒƒ& '
;
ƒƒ( )
i
ƒƒ* +
++
ƒƒ+ -
)
ƒƒ- .
{
≈≈ 
if
∆∆ 
(
∆∆ 
i
∆∆ 
==
∆∆ 
ind
∆∆ 
)
∆∆ 
{
«« 
temp
»» 
[
»» 
i
»» 
]
»» 
=
»» 
	Selection
»» '
.
»»' (
objects
»»( /
[
»»/ 0
len
»»0 3
-
»»4 5
$num
»»6 7
]
»»7 8
;
»»8 9
}
…… 
else
   
{
ÀÀ 
temp
ÃÃ 
[
ÃÃ 
i
ÃÃ 
]
ÃÃ 
=
ÃÃ 
	Selection
ÃÃ '
.
ÃÃ' (
objects
ÃÃ( /
[
ÃÃ/ 0
i
ÃÃ0 1
]
ÃÃ1 2
;
ÃÃ2 3
}
ÕÕ 
}
ŒŒ 
temp
–– 
[
–– 
len
–– 
-
–– 
$num
–– 
]
–– 
=
–– 
t
–– 
;
–– 
	Selection
““ 
.
““ 
activeObject
““ "
=
““# $
t
““% &
;
““& '
	Selection
”” 
.
”” 
objects
”” 
=
”” 
temp
””  $
;
””$ %
}
‘‘ 	
internal
÷÷ 
static
÷÷ 
void
÷÷ -
RemoveMeshFromSelectionInternal
÷÷ <
(
÷÷< =
ProBuilderMesh
÷÷= K
mesh
÷÷L P
)
÷÷P Q
{
◊◊ 	
if
ÿÿ 
(
ÿÿ 
s_TopSelection
ÿÿ 
.
ÿÿ 
Contains
ÿÿ '
(
ÿÿ' (
mesh
ÿÿ( ,
)
ÿÿ, -
)
ÿÿ- .
s_TopSelection
ŸŸ 
.
ŸŸ 
Remove
ŸŸ %
(
ŸŸ% &
mesh
ŸŸ& *
)
ŸŸ* +
;
ŸŸ+ ,
}
⁄⁄ 	
internal
‹‹ 
static
‹‹ 
void
‹‹ 1
#RefreshSelectionAfterComponentReset
‹‹ @
(
‹‹@ A
ProBuilderMesh
‹‹A O
mesh
‹‹P T
)
‹‹T U
{
›› 	
ProBuilderEditor
ﬁﬁ 
.
ﬁﬁ 
Refresh
ﬁﬁ $
(
ﬁﬁ$ %
true
ﬁﬁ% )
)
ﬁﬁ) *
;
ﬁﬁ* +
}
ﬂﬂ 	
internal
·· 
static
·· 
void
·· 
SetSelection
·· )
(
··) *
IList
··* /
<
··/ 0

GameObject
··0 :
>
··: ;
newSelection
··< H
)
··H I
{
‚‚ 	
UndoUtility
„„ 
.
„„ 
RecordSelection
„„ '
(
„„' (
topInternal
„„( 3
.
„„3 4
ToArray
„„4 ;
(
„„; <
)
„„< =
,
„„= >
$str
„„? Q
)
„„Q R
;
„„R S,
ClearElementAndObjectSelection
‰‰ *
(
‰‰* +
)
‰‰+ ,
;
‰‰, -
if
ÁÁ 
(
ÁÁ 
Tools
ÁÁ 
.
ÁÁ 
current
ÁÁ 
==
ÁÁ  
Tool
ÁÁ! %
.
ÁÁ% &
None
ÁÁ& *
)
ÁÁ* +
Tools
ËË 
.
ËË 
current
ËË 
=
ËË 
Tool
ËË  $
.
ËË$ %
Move
ËË% )
;
ËË) *
var
ÍÍ 
newCount
ÍÍ 
=
ÍÍ 
newSelection
ÍÍ '
!=
ÍÍ( *
null
ÍÍ+ /
?
ÍÍ0 1
newSelection
ÍÍ2 >
.
ÍÍ> ?
Count
ÍÍ? D
:
ÍÍE F
$num
ÍÍG H
;
ÍÍH I
if
ÏÏ 
(
ÏÏ 
newCount
ÏÏ 
>
ÏÏ 
$num
ÏÏ 
)
ÏÏ 
{
ÌÌ 
	Selection
ÓÓ 
.
ÓÓ 
activeTransform
ÓÓ )
=
ÓÓ* +
newSelection
ÓÓ, 8
[
ÓÓ8 9
newCount
ÓÓ9 A
-
ÓÓB C
$num
ÓÓD E
]
ÓÓE F
.
ÓÓF G
	transform
ÓÓG P
;
ÓÓP Q
	Selection
ÔÔ 
.
ÔÔ 
objects
ÔÔ !
=
ÔÔ" #
newSelection
ÔÔ$ 0
.
ÔÔ0 1
ToArray
ÔÔ1 8
(
ÔÔ8 9
)
ÔÔ9 :
;
ÔÔ: ;
}
 
else
ÒÒ 
{
ÚÚ 
	Selection
ÛÛ 
.
ÛÛ 
activeTransform
ÛÛ )
=
ÛÛ* +
null
ÛÛ, 0
;
ÛÛ0 1
}
ÙÙ 
}
ıı 	
internal
˜˜ 
static
˜˜ 
void
˜˜ 
SetSelection
˜˜ )
(
˜˜) *

GameObject
˜˜* 4
go
˜˜5 7
)
˜˜7 8
{
¯¯ 	
UndoUtility
˘˘ 
.
˘˘ 
RecordSelection
˘˘ '
(
˘˘' (
topInternal
˘˘( 3
.
˘˘3 4
ToArray
˘˘4 ;
(
˘˘; <
)
˘˘< =
,
˘˘= >
$str
˘˘? Q
)
˘˘Q R
;
˘˘R S,
ClearElementAndObjectSelection
˙˙ *
(
˙˙* +
)
˙˙+ ,
;
˙˙, -
AddToSelection
˚˚ 
(
˚˚ 
go
˚˚ 
)
˚˚ 
;
˚˚ 
}
¸¸ 	
public
ÅÅ 
static
ÅÅ 
void
ÅÅ #
ClearElementSelection
ÅÅ 0
(
ÅÅ0 1
)
ÅÅ1 2
{
ÇÇ 	
if
ÉÉ 
(
ÉÉ 
ProBuilderEditor
ÉÉ  
.
ÉÉ  !
instance
ÉÉ! )
)
ÉÉ) *
ProBuilderEditor
ÑÑ  
.
ÑÑ  !
instance
ÑÑ! )
.
ÑÑ) *#
ClearElementSelection
ÑÑ* ?
(
ÑÑ? @
)
ÑÑ@ A
;
ÑÑA B-
s_TotalElementCountCacheIsDirty
ÖÖ +
=
ÖÖ, -
true
ÖÖ. 2
;
ÖÖ2 3
if
ÜÜ 
(
ÜÜ $
objectSelectionChanged
ÜÜ &
!=
ÜÜ' )
null
ÜÜ* .
)
ÜÜ. /$
objectSelectionChanged
áá &
(
áá& '
)
áá' (
;
áá( )
}
àà 	
public
çç 
static
çç 
void
çç ,
ClearElementAndObjectSelection
çç 9
(
çç9 :
)
çç: ;
{
éé 	
if
èè 
(
èè 
ProBuilderEditor
èè  
.
èè  !
instance
èè! )
)
èè) *
ProBuilderEditor
êê  
.
êê  !
instance
êê! )
.
êê) *#
ClearElementSelection
êê* ?
(
êê? @
)
êê@ A
;
êêA B
	Selection
ëë 
.
ëë 
objects
ëë 
=
ëë 
new
ëë  #
Object
ëë$ *
[
ëë* +
$num
ëë+ ,
]
ëë, -
;
ëë- .
}
íí 	
internal
îî 
static
îî 
Vector3
îî 
GetHandlePosition
îî  1
(
îî1 2
)
îî2 3
{
ïï 	
var
ññ 
active
ññ 
=
ññ %
GetActiveSelectionGroup
ññ 0
(
ññ0 1
)
ññ1 2
;
ññ2 3
if
òò 
(
òò 
active
òò 
==
òò 
null
òò 
||
òò  
active
òò! '
.
òò' (
mesh
òò( ,
==
òò- /
null
òò0 4
)
òò4 5
return
ôô 
Vector3
ôô 
.
ôô 
zero
ôô #
;
ôô# $
switch
õõ 
(
õõ $
VertexManipulationTool
õõ *
.
õõ* +

pivotPoint
õõ+ 5
)
õõ5 6
{
úú 
case
ùù 

PivotPoint
ùù 
.
ùù  
ActiveElement
ùù  -
:
ùù- .
case
ûû 

PivotPoint
ûû 
.
ûû  
IndividualOrigins
ûû  1
:
ûû1 2
if
üü 
(
üü 
!
üü 
active
üü 
.
üü  
elementGroups
üü  -
.
üü- .
Any
üü. 1
(
üü1 2
)
üü2 3
)
üü3 4
goto
†† 
case
†† !
default
††" )
;
††) *
return
°° 
active
°° !
.
°°! "
elementGroups
°°" /
.
°°/ 0
Last
°°0 4
(
°°4 5
)
°°5 6
.
°°6 7
position
°°7 ?
;
°°? @
case
££ 

PivotPoint
££ 
.
££  
Center
££  &
:
££& '
default
§§ 
:
§§ 
return
•• 
bounds
•• !
.
••! "
center
••" (
;
••( )
}
¶¶ 
}
ßß 	
internal
©© 
static
©© 

Quaternion
©© "
GetHandleRotation
©©# 4
(
©©4 5
)
©©5 6
{
™™ 	
var
´´ 
active
´´ 
=
´´ %
GetActiveSelectionGroup
´´ 0
(
´´0 1
)
´´1 2
;
´´2 3
if
≠≠ 
(
≠≠ 
active
≠≠ 
==
≠≠ 
null
≠≠ 
||
≠≠  
active
≠≠! '
.
≠≠' (
mesh
≠≠( ,
==
≠≠- /
null
≠≠0 4
)
≠≠4 5
return
ÆÆ 

Quaternion
ÆÆ !
.
ÆÆ! "
identity
ÆÆ" *
;
ÆÆ* +
switch
∞∞ 
(
∞∞ $
VertexManipulationTool
∞∞ *
.
∞∞* +
handleOrientation
∞∞+ <
)
∞∞< =
{
±± 
case
≤≤ 
HandleOrientation
≤≤ &
.
≤≤& '
ActiveObject
≤≤' 3
:
≤≤3 4
return
≥≥ 
active
≥≥ !
.
≥≥! "
mesh
≥≥" &
.
≥≥& '
	transform
≥≥' 0
.
≥≥0 1
rotation
≥≥1 9
;
≥≥9 :
case
µµ 
HandleOrientation
µµ &
.
µµ& '
ActiveElement
µµ' 4
:
µµ4 5
if
∂∂ 
(
∂∂ 
!
∂∂ 
active
∂∂ 
.
∂∂  
elementGroups
∂∂  -
.
∂∂- .
Any
∂∂. 1
(
∂∂1 2
)
∂∂2 3
)
∂∂3 4
goto
∑∑ 
case
∑∑ !
HandleOrientation
∑∑" 3
.
∑∑3 4
ActiveObject
∑∑4 @
;
∑∑@ A
return
∏∏ 
active
∏∏ !
.
∏∏! "
elementGroups
∏∏" /
.
∏∏/ 0
Last
∏∏0 4
(
∏∏4 5
)
∏∏5 6
.
∏∏6 7
rotation
∏∏7 ?
;
∏∏? @
default
∫∫ 
:
∫∫ 
return
ªª 

Quaternion
ªª %
.
ªª% &
identity
ªª& .
;
ªª. /
}
ºº 
}
ΩΩ 	
internal
øø 
static
øø %
MeshAndElementSelection
øø /%
GetActiveSelectionGroup
øø0 G
(
øøG H
)
øøH I
{
¿¿ 	
foreach
¡¡ 
(
¡¡ 
var
¡¡ 
pair
¡¡ 
in
¡¡  
elementSelection
¡¡! 1
)
¡¡1 2
{
¬¬ 
if
√√ 
(
√√ 
pair
√√ 
.
√√ 
mesh
√√ 
==
√√  

activeMesh
√√! +
)
√√+ ,
return
ƒƒ 
pair
ƒƒ 
;
ƒƒ  
}
≈≈ 
return
«« 
null
«« 
;
«« 
}
»» 
}
…… 
}   è*
ûD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\SubdivideFaces.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class 
SubdivideFaces 
:  !

MenuAction" ,
{ 
public		 
override		 
ToolbarGroup		 $
group		% *
{

 	
get 
{ 
return 
ToolbarGroup %
.% &
Geometry& .
;. /
}0 1
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- E
,E F
IconSkinG O
.O P
ProP S
)S T
;T U
}V W
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
	protected 
override 
bool 
hasFileMenuEntry  0
{ 	
get 
{ 
return 
false 
; 
}  !
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str !
,! "
$str	   ü
,
  ü †
keyCommandAlt!! 
,!! 
$char!! "
)"" 
;"" 
public$$ 
override$$ 

SelectMode$$ "
validSelectModes$$# 3
{%% 	
get&& 
{&& 
return&& 

SelectMode&& #
.&&# $
Face&&$ (
;&&( )
}&&* +
}'' 	
public)) 
override)) 
bool)) 
enabled)) $
{** 	
get++ 
{++ 
return++ 
base++ 
.++ 
enabled++ %
&&++& (
MeshSelection++) 6
.++6 7
selectedFaceCount++7 H
>++I J
$num++K L
;++L M
}++N O
},, 	
public.. 
override.. 
ActionResult.. $
DoAction..% -
(..- .
)... /
{// 	
if00 
(00 
MeshSelection00 
.00 
selectedObjectCount00 1
<002 3
$num004 5
)005 6
return11 
ActionResult11 #
.11# $
NoSelection11$ /
;11/ 0
int33 
success33 
=33 
$num33 
;33 
UndoUtility44 
.44 
RecordSelection44 '
(44' (
$str44( 9
)449 :
;44: ;
foreach66 
(66 
ProBuilderMesh66 #
pb66$ &
in66' )
MeshSelection66* 7
.667 8
topInternal668 C
)66C D
{77 
Face88 
[88 
]88 
faces88 
=88 
pb88 !
.88! "
	Subdivide88" +
(88+ ,
pb88, .
.88. /!
selectedFacesInternal88/ D
)88D E
;88E F
pb:: 
.:: 
ToMesh:: 
(:: 
):: 
;:: 
if<< 
(<< 
faces<< 
!=<< 
null<< !
)<<! "
{== 
success>> 
+=>> 
pb>> !
.>>! "!
selectedFacesInternal>>" 7
.>>7 8
Length>>8 >
;>>> ?
pb?? 
.?? 
SetSelectedFaces?? '
(??' (
faces??( -
)??- .
;??. /
pbAA 
.AA 
RefreshAA 
(AA 
)AA  
;AA  !
pbBB 
.BB 
OptimizeBB 
(BB  
)BB  !
;BB! "
}CC 
}DD 
ifFF 
(FF 
successFF 
>FF 
$numFF 
)FF 
{GG 
ProBuilderEditorHH  
.HH  !
RefreshHH! (
(HH( )
)HH) *
;HH* +
returnJJ 
newJJ 
ActionResultJJ '
(JJ' (
ActionResultJJ( 4
.JJ4 5
StatusJJ5 ;
.JJ; <
SuccessJJ< C
,JJC D
$strJJE Q
+JJR S
successJJT [
+JJ\ ]
(JJ^ _
(JJ_ `
successJJ` g
>JJh i
$numJJj k
)JJk l
?JJm n
$strJJo w
:JJx y
$str	JJz Å
)
JJÅ Ç
)
JJÇ É
;
JJÉ Ñ
}KK 
elseLL 
{MM 
DebugNN 
.NN 

LogWarningNN  
(NN  !
$strNN! `
)NN` a
;NNa b
returnOO 
newOO 
ActionResultOO '
(OO' (
ActionResultOO( 4
.OO4 5
StatusOO5 ;
.OO; <
FailureOO< C
,OOC D
$strOOE i
)OOi j
;OOj k
}PP 
}QQ 	
}RR 
}SS ˙"
¢D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\ConformFaceNormals.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{		 
sealed

 

class

 
ConformFaceNormals

 #
:

$ %

MenuAction

& 0
{ 
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
GeometryG O
;O P
}Q R
}S T
public 
override 
	Texture2D !
icon" &
{' (
get) ,
{- .
return/ 5
IconUtility6 A
.A B
GetIconB I
(I J
$strJ g
,g h
IconSkini q
.q r
Pror u
)u v
;v w
}x y
}z {
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
s_TooltipContent> N
;N O
}P Q
}R S
public 
override 
string 
	menuTitle (
{) *
get+ .
{/ 0
return1 7
$str8 I
;I J
}K L
}M N
static 
readonly 
TooltipContent &
s_TooltipContent' 7
=8 9
new: =
TooltipContent> L
( 
$str &
,& '
$str I
) 
; 
public 
override 

SelectMode "
validSelectModes# 3
{ 	
get 
{ 
return 

SelectMode #
.# $
Face$ (
;( )
}* +
} 	
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
base 
. 
enabled %
&&& (
MeshSelection) 6
.6 7&
selectedFaceCountObjectMax7 Q
>R S
$numT U
;U V
}W X
} 	
public!! 
override!! 
ActionResult!! $
DoAction!!% -
(!!- .
)!!. /
{"" 	
var## 
	selection## 
=## 
MeshSelection## )
.##) *
topInternal##* 5
;##5 6
UndoUtility%% 
.%% 
RecordSelection%% '
(%%' (
$str%%( 2
+%%3 4
(%%5 6
MeshSelection%%6 C
.%%C D
selectedFaceCount%%D U
>%%V W
$num%%X Y
?%%Z [
$str%%\ b
:%%c d
$str%%e m
)%%m n
+%%o p
$str%%q |
)%%| }
;%%} ~
ActionResult'' 
res'' 
='' 
ActionResult'' +
.''+ ,
NoSelection'', 7
;''7 8
foreach)) 
()) 
ProBuilderMesh)) #
pb))$ &
in))' )
	selection))* 3
)))3 4
{** 
var++ 
faces++ 
=++ 
pb++ 
.++ 
GetSelectedFaces++ /
(++/ 0
)++0 1
;++1 2
if-- 
(-- 
faces-- 
==-- 
null-- !
)--! "
continue.. 
;.. 
res00 
=00 
UnityEngine00 !
.00! "

ProBuilder00" ,
.00, -
MeshOperations00- ;
.00; <
SurfaceTopology00< K
.00K L
ConformNormals00L Z
(00Z [
pb00[ ]
,00] ^
faces00_ d
)00d e
;00e f
pb22 
.22 
ToMesh22 
(22 
)22 
;22 
pb33 
.33 
Refresh33 
(33 
)33 
;33 
pb44 
.44 
Optimize44 
(44 
)44 
;44 
}55 
ProBuilderEditor77 
.77 
Refresh77 $
(77$ %
)77% &
;77& '
return99 
res99 
;99 
}:: 	
};; 
}<< ˜
£D:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Editors\OpenLightmapUVEditor.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed 

class  
OpenLightmapUVEditor %
:& '

MenuAction( 2
{ 
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
ToolG K
;K L
}M N
}O P
public		 
override		 
	Texture2D		 !
icon		" &
{		' (
get		) ,
{		- .
return		/ 5
null		6 :
;		: ;
}		< =
}		> ?
public

 
override

 
TooltipContent

 &
tooltip

' .
{

/ 0
get

1 4
{

5 6
return

7 =
	s_Tooltip

> G
;

G H
}

I J
}

K L
public 
override 
string 
	menuTitle (
{) *
get+ .
{/ 0
return1 7
$str8 L
;L M
}N O
}P Q
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str $
,$ %
$str 
) 
; 
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
true 
; 
}  
} 	
public 
override 
bool 
hidden #
{ 	
get 
{ 
return 
true 
; 
}  
} 	
public 
override 
ActionResult $
DoAction% -
(- .
). /
{ 	
EditorWindow 
. 
	GetWindow "
<" #
LightmapUVEditor# 3
>3 4
(4 5
true5 9
,9 :
$str; O
,O P
trueQ U
)U V
.V W
positionW _
=` a
LightmapUVEditorb r
.r s
desiredPosition	s Ç
;
Ç É
return   
new   
ActionResult   #
(  # $
ActionResult  $ 0
.  0 1
Status  1 7
.  7 8
Success  8 ?
,  ? @
$str  A a
)  a b
;  b c
}!! 	
}"" 
}## Ñ%
ùD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\SplitVertices.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{ 
sealed		 

class		 
SplitVertices		 
:		  

MenuAction		! +
{

 
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Geometry& .
;. /
}0 1
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- A
,A B
IconSkinC K
.K L
ProL O
)O P
;P Q
}R S
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
( 
$str  
,  !
$str	 Ö
,
Ö Ü
keyCommandAlt 
, 
$char "
) 
; 
public!! 
override!! 

SelectMode!! "
validSelectModes!!# 3
{"" 	
get## 
{## 
return## 

SelectMode## #
.### $
Vertex##$ *
;##* +
}##, -
}$$ 	
public&& 
override&& 
bool&& 
enabled&& $
{'' 	
get(( 
{)) 
return-- 
base-- 
.-- 
enabled-- #
&&.. 
MeshSelection.. $
...$ %(
selectedVertexCountObjectMax..% A
>..B C
$num..D E
&&// 
!// 
(// 
MeshSelection// &
.//& '(
selectedVertexCountObjectMax//' C
==//D F
$num//G H
&&//I K
MeshSelection//L Y
.//Y Z,
 selectedCoincidentVertexCountMax//Z z
==//{ }
$num//~ 
)	// Ä
;
//Ä Å
}00 
}11 	
public33 
override33 
ActionResult33 $
DoAction33% -
(33- .
)33. /
{44 	
if55 
(55 
MeshSelection55 
.55 
selectedObjectCount55 1
<552 3
$num554 5
)555 6
return66 
ActionResult66 #
.66# $
NoSelection66$ /
;66/ 0
int88 

splitCount88 
=88 
$num88 
;88 
UndoUtility99 
.99 
RecordSelection99 '
(99' (
$str99( 8
)998 9
;999 :
foreach;; 
(;; 
ProBuilderMesh;; #
mesh;;$ (
in;;) +
MeshSelection;;, 9
.;;9 :
topInternal;;: E
);;E F
{<< 
var== 

coincident== 
===  
mesh==! %
.==% &&
selectedCoincidentVertices==& @
;==@ A

splitCount>> 
+=>> 
mesh>> "
.>>" #'
selectedSharedVerticesCount>># >
;>>> ?
mesh?? 
.?? 
SplitVertices?? "
(??" #

coincident??# -
)??- .
;??. /
}@@ 
ProBuilderEditorBB 
.BB 
RefreshBB $
(BB$ %
)BB% &
;BB& '
ifDD 
(DD 

splitCountDD 
>DD 
$numDD 
)DD 
returnEE 
newEE 
ActionResultEE '
(EE' (
ActionResultEE( 4
.EE4 5
StatusEE5 ;
.EE; <
SuccessEE< C
,EEC D
$strEEE M
+EEN O

splitCountEEP Z
+EE[ \
(EE] ^

splitCountEE^ h
>EEi j
$numEEk l
?EEm n
$strEEo z
:EE{ |
$str	EE} Ü
)
EEÜ á
)
EEá à
;
EEà â
returnGG 
newGG 
ActionResultGG #
(GG# $
ActionResultGG$ 0
.GG0 1
StatusGG1 7
.GG7 8
FailureGG8 ?
,GG? @
$strGGA o
)GGo p
;GGp q
}HH 	
}II 
}JJ ≠
ùD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Export\ExportStlBinary.cs
	namespace		 	
UnityEditor		
 
.		 

ProBuilder		  
.		  !
Actions		! (
{

 
sealed 

class 
ExportStlBinary  
:! "

MenuAction# -
{ 
public 
override 
ToolbarGroup $
group% *
{+ ,
get- 0
{1 2
return3 9
ToolbarGroup: F
.F G
ExportG M
;M N
}O P
}Q R
public 
override 
	Texture2D !
icon" &
{' (
get) ,
{- .
return/ 5
null6 :
;: ;
}< =
}> ?
public 
override 
TooltipContent &
tooltip' .
{/ 0
get1 4
{5 6
return7 =
_tooltip> F
;F G
}H I
}J K
static 
readonly 
TooltipContent &
_tooltip' /
=0 1
new2 5
TooltipContent6 D
( 
$str 
, 
$str ,
) 
; 
public 
override 
bool 
hidden #
{ 	
get 
{ 
return 
true 
; 
}  
} 	
public 
override 
bool 
enabled $
{ 	
get 
{ 
return 
MeshSelection &
.& '
selectedObjectCount' :
>; <
$num= >
;> ?
}@ A
} 	
public!! 
override!! 
ActionResult!! $
DoAction!!% -
(!!- .
)!!. /
{"" 	
var## 
res## 
=## 
ExportStlAscii## $
.##$ % 
ExportWithFileDialog##% 9
(##9 :
	Selection##: C
.##C D
gameObjects##D O
,##O P
FileType##Q Y
.##Y Z
Binary##Z `
)##` a
;##a b
if%% 
(%% 
string%% 
.%% 
IsNullOrEmpty%% $
(%%$ %
res%%% (
)%%( )
)%%) *
return&& 
new&& 
ActionResult&& '
(&&' (
ActionResult&&( 4
.&&4 5
Status&&5 ;
.&&; <
Canceled&&< D
,&&D E
$str&&F U
)&&U V
;&&V W
Export(( 
.(( 
PingExportedModel(( $
((($ %
res((% (
)((( )
;(() *
return** 
new** 
ActionResult** #
(**# $
ActionResult**$ 0
.**0 1
Status**1 7
.**7 8
Success**8 ?
,**? @
$str**A M
)**M N
;**N O
}++ 	
},, 
}-- ñÅ
üD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\EditorCore\EditorHandleDrawingScopes.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
{		 
static

 

partial

 
class

 
EditorHandleDrawing

 ,
{ 
const 
float 
k_DefaultGizmoSize &
=' (
$num) ,
;, -
internal 
static 
void 
	DrawGizmo &
(& '
Vector3' .
position/ 7
,7 8

Quaternion9 C
rotationD L
,L M
floatN S
sizeT X
=Y Z
-[ \
$num\ ^
)^ _
{ 	
var 
p 
= 
position 
; 
size 
= 
HandleUtility  
.  !
GetHandleSize! .
(. /
p/ 0
)0 1
*2 3
size4 8
<9 :
$num; =
?> ?
$num@ C
:D E
sizeF J
;J K
using 
( 
var 

lineDrawer !
=" #
new$ '
LineDrawingScope( 8
(8 9
Color9 >
.> ?
green? D
,D E
-F G
$numG I
,I J
CompareFunctionK Z
.Z [
Always[ a
)a b
)b c
{ 

lineDrawer 
. 
DrawLine #
(# $
p$ %
,% &
p' (
+) *
rotation+ 3
*4 5
Vector36 =
.= >
up> @
*A B
sizeC G
)G H
;H I

lineDrawer 
. 
SetColor #
(# $
Color$ )
.) *
red* -
)- .
;. /

lineDrawer 
. 
DrawLine #
(# $
p$ %
,% &
p' (
+) *
rotation+ 3
*4 5
Vector36 =
.= >
right> C
*D E
sizeF J
)J K
;K L

lineDrawer 
. 
SetColor #
(# $
Color$ )
.) *
blue* .
). /
;/ 0

lineDrawer 
. 
DrawLine #
(# $
p$ %
,% &
p' (
+) *
rotation+ 3
*4 5
Vector36 =
.= >
forward> E
*F G
sizeH L
)L M
;M N
} 
} 	
internal 
static 
void 
	DrawGizmo &
(& '
Vector3' .
position/ 7
,7 8
	Matrix4x49 B
matrixC I
,I J
floatK P
sizeQ U
=V W
-X Y
$numY [
)[ \
{ 	
var 
p 
= 
matrix 
. 
MultiplyPoint3x4 +
(+ ,
position, 4
)4 5
;5 6
size   
=   
HandleUtility    
.    !
GetHandleSize  ! .
(  . /
p  / 0
)  0 1
*  2 3
size  4 8
<  9 :
$num  ; =
?  > ?
k_DefaultGizmoSize  @ R
:  S T
size  U Y
;  Y Z
using"" 
("" 
var"" 

lineDrawer"" !
=""" #
new""$ '
LineDrawingScope""( 8
(""8 9
Color""9 >
.""> ?
green""? D
,""D E
-""F G
$num""G I
,""I J
CompareFunction""K Z
.""Z [
Always""[ a
)""a b
)""b c
{## 

lineDrawer$$ 
.$$ 
DrawLine$$ #
($$# $
p$$$ %
,$$% &
p$$' (
+$$) *
matrix$$+ 1
.$$1 2
MultiplyVector$$2 @
($$@ A
Vector3$$A H
.$$H I
up$$I K
)$$K L
*$$M N
size$$O S
)$$S T
;$$T U

lineDrawer%% 
.%% 
SetColor%% #
(%%# $
Color%%$ )
.%%) *
red%%* -
)%%- .
;%%. /

lineDrawer&& 
.&& 
DrawLine&& #
(&&# $
p&&$ %
,&&% &
p&&' (
+&&) *
matrix&&+ 1
.&&1 2
MultiplyVector&&2 @
(&&@ A
Vector3&&A H
.&&H I
right&&I N
)&&N O
*&&P Q
size&&R V
)&&V W
;&&W X

lineDrawer'' 
.'' 
SetColor'' #
(''# $
Color''$ )
.'') *
blue''* .
)''. /
;''/ 0

lineDrawer(( 
.(( 
DrawLine(( #
(((# $
p(($ %
,((% &
p((' (
+(() *
matrix((+ 1
.((1 2
MultiplyVector((2 @
(((@ A
Vector3((A H
.((H I
forward((I P
)((P Q
*((R S
size((T X
)((X Y
;((Y Z
})) 
}** 	
internal,, 
static,, 
void,, $
DrawTransformOriginGizmo,, 5
(,,5 6
	Matrix4x4,,6 ?
matrix,,@ F
,,,F G
Vector3,,H O
	direction,,P Y
,,,Y Z
float,,\ a
size,,b f
=,,g h
-,,i j
$num,,j l
),,l m
{-- 	
var.. 
p.. 
=.. 
matrix.. 
... 
MultiplyPoint.. (
(..( )
Vector3..) 0
...0 1
zero..1 5
)..5 6
;..6 7
var// 
s// 
=// 
HandleUtility// !
.//! "
GetHandleSize//" /
(/// 0
p//0 1
)//1 2
;//2 3
var00 
d00 
=00 
size00 
<00 
$num00 
?00 
k_DefaultGizmoSize00  2
:003 4
size005 9
;009 :
var11 
e11 
=11 
Event11 
.11 
current11 !
.11! "
type11" &
;11& '
Handles33 
.33 
color33 
=33 
Color33 !
.33! "
gray33" &
;33& '
Handles44 
.44 
DotHandleCap44  
(44  !
$num44! "
,44" #
p44$ %
,44% &

Quaternion44' 1
.441 2
identity442 :
,44: ;
s44< =
*44> ?

dotCapSize44@ J
,44J K
e44L M
)44M N
;44N O
Handles55 
.55 
DotHandleCap55  
(55  !
$num55! "
,55" #
p55$ %
+55& '
matrix55( .
.55. /
MultiplyVector55/ =
(55= >
	direction55> G
)55G H
*55I J
d55K L
,55L M

Quaternion55N X
.55X Y
identity55Y a
,55a b
s55c d
*55e f

dotCapSize55g q
,55q r
e55s t
)55t u
;55u v
Handles66 
.66 
DrawLine66 
(66 
p66 
,66 
p66  !
+66" #
matrix66$ *
.66* +
MultiplyVector66+ 9
(669 :
	direction66: C
)66C D
*66E F
d66G H
)66H I
;66I J
Handles77 
.77 
color77 
=77 
Color77 !
.77! "
white77" '
;77' (
}88 	
public:: 
struct:: 
PointDrawingScope:: '
:::( )
IDisposable::* 5
{;; 	
Color<< 
m_Color<< 
;<< 
CompareFunction== 
m_ZTest== #
;==# $
bool>> 
m_IsDisposed>> 
;>> 
Mesh?? 
m_Mesh?? 
;?? 
List@@ 
<@@ 
Vector3@@ 
>@@ 
m_Points@@ "
;@@" #
ListAA 
<AA 
intAA 
>AA 
	m_IndicesAA 
;AA  
	Matrix4x4BB 
m_MatrixBB 
;BB 
publicDD 
ColorDD 
colorDD 
{EE 
getFF 
{FF 
returnFF 
m_ColorFF $
;FF$ %
}FF& '
setGG 
{HH 
EndII 
(II 
)II 
;II 
m_ColorJJ 
=JJ 
valueJJ #
;JJ# $
BeginKK 
(KK 
)KK 
;KK 
}LL 
}MM 
publicOO 
CompareFunctionOO "
zTestOO# (
{PP 
getQQ 
{QQ 
returnQQ 
m_ZTestQQ $
;QQ$ %
}QQ& '
setSS 
{TT 
EndUU 
(UU 
)UU 
;UU 
m_ZTestVV 
=VV 
valueVV #
;VV# $
BeginWW 
(WW 
)WW 
;WW 
}XX 
}YY 
public[[ 
	Matrix4x4[[ 
matrix[[ #
{\\ 
get]] 
{]] 
return]] 
m_Matrix]] %
;]]% &
}]]' (
set^^ 
{^^ 
m_Matrix^^ 
=^^  
value^^! &
;^^& '
}^^( )
}__ 
publicaa 
PointDrawingScopeaa $
(aa$ %
Coloraa% *
coloraa+ 0
,aa0 1
CompareFunctionaa2 A
zTestaaB G
=aaH I
CompareFunctionaaJ Y
.aaY Z
	LessEqualaaZ c
)aac d
{bb 
m_Colorcc 
=cc 
colorcc 
;cc  
m_ZTestdd 
=dd 
zTestdd 
;dd  
m_IsDisposedee 
=ee 
falseee $
;ee$ %
m_Meshff 
=ff 
meshPoolff !
.ff! "
Dequeueff" )
(ff) *
)ff* +
;ff+ ,
m_Pointsgg 
=gg 
newgg 
Listgg #
<gg# $
Vector3gg$ +
>gg+ ,
(gg, -
$numgg- /
)gg/ 0
;gg0 1
	m_Indiceshh 
=hh 
newhh 
Listhh  $
<hh$ %
inthh% (
>hh( )
(hh) *
$numhh* ,
)hh, -
;hh- .
m_Matrixii 
=ii 
	Matrix4x4ii $
.ii$ %
identityii% -
;ii- .
Beginjj 
(jj 
)jj 
;jj 
}kk 
voidmm 
Beginmm 
(mm 
)mm 
{nn 
vertMaterialoo 
.oo 
SetColoroo %
(oo% &
$stroo& .
,oo. /
coloroo0 5
)oo5 6
;oo6 7
vertMaterialpp 
.pp 
SetIntpp #
(pp# $
$strpp$ 2
,pp2 3
(pp4 5
intpp5 8
)pp8 9
zTestpp9 >
)pp> ?
;pp? @
ifrr 
(rr 
!rr 
vertMaterialrr !
.rr! "
SetPassrr" )
(rr) *
$numrr* +
)rr+ ,
)rr, -
throwss 
newss 
	Exceptionss '
(ss' (
$strss( N
)ssN O
;ssO P
m_Pointsuu 
.uu 
Clearuu 
(uu 
)uu  
;uu  !
}vv 
voidxx 
Endxx 
(xx 
)xx 
{yy 
m_Meshzz 
.zz 
Clearzz 
(zz 
)zz 
;zz 
if|| 
(|| 
BuiltinMaterials|| $
.||$ %$
geometryShadersSupported||% =
)||= >
{}} 
for~~ 
(~~ 
int~~ 
i~~ 
=~~  
$num~~! "
,~~" #
c~~$ %
=~~& '
m_Points~~( 0
.~~0 1
Count~~1 6
;~~6 7
i~~8 9
<~~: ;
c~~< =
;~~= >
++~~? A
i~~A B
)~~B C
	m_Indices !
.! "
Add" %
(% &
i& '
)' (
;( )
m_Mesh
ÅÅ 
.
ÅÅ 
SetVertices
ÅÅ &
(
ÅÅ& '
m_Points
ÅÅ' /
)
ÅÅ/ 0
;
ÅÅ0 1
m_Mesh
ÑÑ 
.
ÑÑ 

SetIndices
ÑÑ %
(
ÑÑ% &
	m_Indices
ÑÑ& /
,
ÑÑ/ 0
MeshTopology
ÑÑ1 =
.
ÑÑ= >
Points
ÑÑ> D
,
ÑÑD E
$num
ÑÑF G
,
ÑÑG H
false
ÑÑI N
)
ÑÑN O
;
ÑÑO P
}
àà 
else
ââ 
{
ää 
MeshHandles
ãã 
.
ãã  &
CreatePointBillboardMesh
ãã  8
(
ãã8 9
m_Points
ãã9 A
,
ããA B
m_Mesh
ããC I
)
ããI J
;
ããJ K
}
åå 
Graphics
éé 
.
éé 
DrawMeshNow
éé $
(
éé$ %
m_Mesh
éé% +
,
éé+ ,
m_Matrix
éé- 5
,
éé5 6
$num
éé7 8
)
éé8 9
;
éé9 :
}
èè 
public
ëë 
void
ëë 
Dispose
ëë 
(
ëë  
)
ëë  !
{
íí 
if
ìì 
(
ìì 
m_IsDisposed
ìì  
)
ìì  !
return
îî 
;
îî 
m_IsDisposed
ññ 
=
ññ 
true
ññ #
;
ññ# $
End
òò 
(
òò 
)
òò 
;
òò 
if
öö 
(
öö 
m_Mesh
öö 
!=
öö 
null
öö !
)
öö! "
meshPool
õõ 
.
õõ 
Enqueue
õõ $
(
õõ$ %
m_Mesh
õõ% +
)
õõ+ ,
;
õõ, -
}
úú 
public
ûû 
void
ûû 
Draw
ûû 
(
ûû 
Vector3
ûû $
point
ûû% *
)
ûû* +
{
üü 
m_Points
†† 
.
†† 
Add
†† 
(
†† 
point
†† "
)
††" #
;
††# $
}
°° 
}
¢¢ 	
public
§§ 
struct
§§ 
LineDrawingScope
§§ &
:
§§' (
IDisposable
§§) 4
{
•• 	
bool
¶¶ 
m_Wire
¶¶ 
;
¶¶ 
bool
ßß 
m_LineTopology
ßß 
;
ßß  
Color
®® 
m_Color
®® 
;
®® 
float
©© 
m_Thickness
©© 
;
©© 
CompareFunction
™™ 
m_ZTest
™™ #
;
™™# $
	Matrix4x4
´´ 
m_Matrix
´´ 
;
´´ 
bool
¨¨ 
m_IsDisposed
¨¨ 
;
¨¨ 
Mesh
ÆÆ 

m_LineMesh
ÆÆ 
;
ÆÆ 
List
ØØ 
<
ØØ 
Vector3
ØØ 
>
ØØ 
m_Positions
ØØ %
;
ØØ% &
List
∞∞ 
<
∞∞ 
Vector4
∞∞ 
>
∞∞ 

m_Tangents
∞∞ $
;
∞∞$ %
List
±± 
<
±± 
Color
±± 
>
±± 
m_Colors
±±  
;
±±  !
List
≤≤ 
<
≤≤ 
int
≤≤ 
>
≤≤ 
	m_Indices
≤≤ 
;
≤≤  
public
¥¥ 
Color
¥¥ 
color
¥¥ 
{
µµ 
get
∂∂ 
{
∂∂ 
return
∂∂ 
m_Color
∂∂ $
;
∂∂$ %
}
∂∂& '
}
∑∑ 
public
ππ 
void
ππ 
SetColor
ππ  
(
ππ  !
Color
ππ! &
color
ππ' ,
)
ππ, -
{
∫∫ 
if
ªª 
(
ªª 
!
ªª 
m_Wire
ªª 
)
ªª 
End
ºº 
(
ºº 
)
ºº 
;
ºº 
m_Color
ΩΩ 
=
ΩΩ 
color
ΩΩ 
;
ΩΩ  
if
ææ 
(
ææ 
!
ææ 
m_Wire
ææ 
)
ææ 
Begin
øø 
(
øø 
)
øø 
;
øø 
}
¿¿ 
public
¬¬ 
float
¬¬ 
	thickness
¬¬ "
{
√√ 
get
ƒƒ 
{
ƒƒ 
return
ƒƒ 
m_Thickness
ƒƒ (
;
ƒƒ( )
}
ƒƒ* +
}
≈≈ 
public
«« 
CompareFunction
«« "
zTest
««# (
{
»» 
get
…… 
{
…… 
return
…… 
m_ZTest
…… $
;
……$ %
}
……& '
}
   
public
ÃÃ 
LineDrawingScope
ÃÃ #
(
ÃÃ# $
Color
ÃÃ$ )
color
ÃÃ* /
,
ÃÃ/ 0
float
ÃÃ1 6
	thickness
ÃÃ7 @
=
ÃÃA B
-
ÃÃC D
$num
ÃÃD F
,
ÃÃF G
CompareFunction
ÃÃH W
zTest
ÃÃX ]
=
ÃÃ^ _
CompareFunction
ÃÃ` o
.
ÃÃo p
	LessEqual
ÃÃp y
)
ÃÃy z
:
ÕÕ 
this
ÕÕ 
(
ÕÕ 
color
ÕÕ 
,
ÕÕ 
	Matrix4x4
ÕÕ '
.
ÕÕ' (
identity
ÕÕ( 0
,
ÕÕ0 1
	thickness
ÕÕ2 ;
,
ÕÕ; <
zTest
ÕÕ= B
)
ÕÕB C
{
ÕÕD E
}
ÕÕF G
public
œœ 
LineDrawingScope
œœ #
(
œœ# $
Color
œœ$ )
color
œœ* /
,
œœ/ 0
	Matrix4x4
œœ1 :
matrix
œœ; A
,
œœA B
float
œœC H
	thickness
œœI R
=
œœS T
-
œœU V
$num
œœV X
,
œœX Y
CompareFunction
œœZ i
zTest
œœj o
=
œœp q
CompareFunctionœœr Å
.œœÅ Ç
	LessEqualœœÇ ã
)œœã å
{
–– 

m_LineMesh
—— 
=
—— 
meshPool
—— %
.
——% &
Dequeue
——& -
(
——- .
)
——. /
;
——/ 0
m_IsDisposed
““ 
=
““ 
false
““ $
;
““$ %
m_Matrix
”” 
=
”” 
matrix
”” !
;
””! "
m_Color
‘‘ 
=
‘‘ 
color
‘‘ 
;
‘‘  
m_Thickness
’’ 
=
’’ 
	thickness
’’ '
<
’’( )
$num
’’* ,
?
’’- .
s_EdgeLineSize
’’/ =
:
’’> ?
	thickness
’’@ I
;
’’I J
m_ZTest
÷÷ 
=
÷÷ 
zTest
÷÷ 
;
÷÷  
m_Positions
ÿÿ 
=
ÿÿ 
new
ÿÿ !
List
ÿÿ" &
<
ÿÿ& '
Vector3
ÿÿ' .
>
ÿÿ. /
(
ÿÿ/ 0
$num
ÿÿ0 1
)
ÿÿ1 2
;
ÿÿ2 3

m_Tangents
ŸŸ 
=
ŸŸ 
new
ŸŸ  
List
ŸŸ! %
<
ŸŸ% &
Vector4
ŸŸ& -
>
ŸŸ- .
(
ŸŸ. /
$num
ŸŸ/ 0
)
ŸŸ0 1
;
ŸŸ1 2
m_Colors
⁄⁄ 
=
⁄⁄ 
new
⁄⁄ 
List
⁄⁄ #
<
⁄⁄# $
Color
⁄⁄$ )
>
⁄⁄) *
(
⁄⁄* +
$num
⁄⁄+ ,
)
⁄⁄, -
;
⁄⁄- .
	m_Indices
€€ 
=
€€ 
new
€€ 
List
€€  $
<
€€$ %
int
€€% (
>
€€( )
(
€€) *
$num
€€* +
)
€€+ ,
;
€€, -
m_Wire
›› 
=
›› 
m_Thickness
›› $
<
››% &-
k_MinLineWidthForGeometryShader
››' F
||
››G I
lineMaterial
››J V
==
››W Y
null
››Z ^
;
››^ _
m_LineTopology
ﬁﬁ 
=
ﬁﬁ  
m_Wire
ﬁﬁ! '
||
ﬁﬁ( *
BuiltinMaterials
ﬁﬁ+ ;
.
ﬁﬁ; <&
geometryShadersSupported
ﬁﬁ< T
;
ﬁﬁT U
Begin
‡‡ 
(
‡‡ 
)
‡‡ 
;
‡‡ 
}
·· 
void
„„ 
Begin
„„ 
(
„„ 
)
„„ 
{
‰‰ 
if
ÂÂ 
(
ÂÂ 
!
ÂÂ 
m_Wire
ÂÂ 
)
ÂÂ 
{
ÊÊ 
lineMaterial
ÁÁ  
.
ÁÁ  !
SetColor
ÁÁ! )
(
ÁÁ) *
$str
ÁÁ* 2
,
ÁÁ2 3
color
ÁÁ4 9
)
ÁÁ9 :
;
ÁÁ: ;
lineMaterial
ËË  
.
ËË  !
SetFloat
ËË! )
(
ËË) *
$str
ËË* 2
,
ËË2 3
	thickness
ËË4 =
*
ËË> ?
EditorGUIUtility
ËË@ P
.
ËËP Q
pixelsPerPoint
ËËQ _
)
ËË_ `
;
ËË` a
lineMaterial
ÈÈ  
.
ÈÈ  !
SetInt
ÈÈ! '
(
ÈÈ' (
$str
ÈÈ( 6
,
ÈÈ6 7
(
ÈÈ8 9
int
ÈÈ9 <
)
ÈÈ< =
zTest
ÈÈ= B
)
ÈÈB C
;
ÈÈC D
}
ÍÍ 
if
ÏÏ 
(
ÏÏ 
m_Wire
ÏÏ 
||
ÏÏ 
!
ÏÏ 
lineMaterial
ÏÏ +
.
ÏÏ+ ,
SetPass
ÏÏ, 3
(
ÏÏ3 4
$num
ÏÏ4 5
)
ÏÏ5 6
)
ÏÏ6 7
{
ÌÌ 
HandleUtility
ÔÔ !
.
ÔÔ! "
ApplyWireMaterial
ÔÔ" 3
(
ÔÔ3 4
zTest
ÔÔ4 9
)
ÔÔ9 :
;
ÔÔ: ;
}
ÅÅ 
}
ÇÇ 
void
ÑÑ 
End
ÑÑ 
(
ÑÑ 
)
ÑÑ 
{
ÖÖ 

m_LineMesh
ÜÜ 
.
ÜÜ 
Clear
ÜÜ  
(
ÜÜ  !
)
ÜÜ! "
;
ÜÜ" #

m_LineMesh
áá 
.
áá 
SetVertices
áá &
(
áá& '
m_Positions
áá' 2
)
áá2 3
;
áá3 4
if
àà 
(
àà 
m_Wire
àà 
)
àà 

m_LineMesh
ââ 
.
ââ 
	SetColors
ââ (
(
ââ( )
m_Colors
ââ) 1
)
ââ1 2
;
ââ2 3
else
ää 

m_LineMesh
ãã 
.
ãã 
SetTangents
ãã *
(
ãã* +

m_Tangents
ãã+ 5
)
ãã5 6
;
ãã6 7

m_LineMesh
åå 
.
åå 
subMeshCount
åå '
=
åå( )
$num
åå* +
;
åå+ ,

m_LineMesh
éé 
.
éé 

SetIndices
éé %
(
éé% &
	m_Indices
éé& /
,
éé/ 0
m_LineTopology
éé1 ?
?
éé@ A
MeshTopology
ééB N
.
ééN O
Lines
ééO T
:
ééU V
MeshTopology
ééW c
.
ééc d
Quads
ééd i
,
ééi j
$num
éék l
)
éél m
;
éém n
Graphics
ìì 
.
ìì 
DrawMeshNow
ìì $
(
ìì$ %

m_LineMesh
ìì% /
,
ìì/ 0
m_Matrix
ìì1 9
)
ìì9 :
;
ìì: ;
m_Positions
ïï 
.
ïï 
Clear
ïï !
(
ïï! "
)
ïï" #
;
ïï# $

m_Tangents
ññ 
.
ññ 
Clear
ññ  
(
ññ  !
)
ññ! "
;
ññ" #
m_Colors
óó 
.
óó 
Clear
óó 
(
óó 
)
óó  
;
óó  !
	m_Indices
òò 
.
òò 
Clear
òò 
(
òò  
)
òò  !
;
òò! "
}
ôô 
public
õõ 
void
õõ 
DrawLine
õõ  
(
õõ  !
Vector3
õõ! (
a
õõ) *
,
õõ* +
Vector3
õõ, 3
b
õõ4 5
)
õõ5 6
{
úú 
var
ùù 
count
ùù 
=
ùù 
m_Positions
ùù '
.
ùù' (
Count
ùù( -
;
ùù- .
if
üü 
(
üü 
!
üü 
m_Wire
üü 
&&
üü 
!
üü  
m_LineTopology
üü  .
)
üü. /
{
†† 
Vector3
°° 
c
°° 
=
°° 
b
°°  !
+
°°" #
(
°°$ %
b
°°% &
-
°°' (
a
°°) *
)
°°* +
;
°°+ ,

m_Tangents
££ 
.
££ 
Add
££ "
(
££" #
new
££# &
Vector4
££' .
(
££. /
b
££/ 0
.
££0 1
x
££1 2
,
££2 3
b
££4 5
.
££5 6
y
££6 7
,
££7 8
b
££9 :
.
££: ;
z
££; <
,
££< =
$num
££> @
)
££@ A
)
££A B
;
££B C
m_Positions
§§ 
.
§§  
Add
§§  #
(
§§# $
a
§§$ %
)
§§% &
;
§§& '
	m_Indices
•• 
.
•• 
Add
•• !
(
••! "
count
••" '
+
••( )
$num
••* +
)
••+ ,
;
••, -

m_Tangents
ßß 
.
ßß 
Add
ßß "
(
ßß" #
new
ßß# &
Vector4
ßß' .
(
ßß. /
b
ßß/ 0
.
ßß0 1
x
ßß1 2
,
ßß2 3
b
ßß4 5
.
ßß5 6
y
ßß6 7
,
ßß7 8
b
ßß9 :
.
ßß: ;
z
ßß; <
,
ßß< =
-
ßß> ?
$num
ßß? A
)
ßßA B
)
ßßB C
;
ßßC D
m_Positions
®® 
.
®®  
Add
®®  #
(
®®# $
a
®®$ %
)
®®% &
;
®®& '
	m_Indices
©© 
.
©© 
Add
©© !
(
©©! "
count
©©" '
+
©©( )
$num
©©* +
)
©©+ ,
;
©©, -

m_Tangents
´´ 
.
´´ 
Add
´´ "
(
´´" #
new
´´# &
Vector4
´´' .
(
´´. /
c
´´/ 0
.
´´0 1
x
´´1 2
,
´´2 3
c
´´4 5
.
´´5 6
y
´´6 7
,
´´7 8
c
´´9 :
.
´´: ;
z
´´; <
,
´´< =
-
´´> ?
$num
´´? A
)
´´A B
)
´´B C
;
´´C D
m_Positions
¨¨ 
.
¨¨  
Add
¨¨  #
(
¨¨# $
b
¨¨$ %
)
¨¨% &
;
¨¨& '
	m_Indices
≠≠ 
.
≠≠ 
Add
≠≠ !
(
≠≠! "
count
≠≠" '
+
≠≠( )
$num
≠≠* +
)
≠≠+ ,
;
≠≠, -

m_Tangents
ØØ 
.
ØØ 
Add
ØØ "
(
ØØ" #
new
ØØ# &
Vector4
ØØ' .
(
ØØ. /
c
ØØ/ 0
.
ØØ0 1
x
ØØ1 2
,
ØØ2 3
c
ØØ4 5
.
ØØ5 6
y
ØØ6 7
,
ØØ7 8
c
ØØ9 :
.
ØØ: ;
z
ØØ; <
,
ØØ< =
$num
ØØ> @
)
ØØ@ A
)
ØØA B
;
ØØB C
m_Positions
∞∞ 
.
∞∞  
Add
∞∞  #
(
∞∞# $
b
∞∞$ %
)
∞∞% &
;
∞∞& '
	m_Indices
±± 
.
±± 
Add
±± !
(
±±! "
count
±±" '
+
±±( )
$num
±±* +
)
±±+ ,
;
±±, -
}
≤≤ 
else
≥≥ 
{
¥¥ 
m_Colors
µµ 
.
µµ 
Add
µµ  
(
µµ  !
color
µµ! &
)
µµ& '
;
µµ' (
m_Positions
∂∂ 
.
∂∂  
Add
∂∂  #
(
∂∂# $
a
∂∂$ %
)
∂∂% &
;
∂∂& '
	m_Indices
∑∑ 
.
∑∑ 
Add
∑∑ !
(
∑∑! "
count
∑∑" '
+
∑∑( )
$num
∑∑* +
)
∑∑+ ,
;
∑∑, -
m_Colors
ππ 
.
ππ 
Add
ππ  
(
ππ  !
color
ππ! &
)
ππ& '
;
ππ' (
m_Positions
∫∫ 
.
∫∫  
Add
∫∫  #
(
∫∫# $
b
∫∫$ %
)
∫∫% &
;
∫∫& '
	m_Indices
ªª 
.
ªª 
Add
ªª !
(
ªª! "
count
ªª" '
+
ªª( )
$num
ªª* +
)
ªª+ ,
;
ªª, -
}
ºº 
}
ΩΩ 
public
øø 
void
øø 
Dispose
øø 
(
øø  
)
øø  !
{
¿¿ 
if
¡¡ 
(
¡¡ 
m_IsDisposed
¡¡  
)
¡¡  !
return
¬¬ 
;
¬¬ 
m_IsDisposed
√√ 
=
√√ 
true
√√ #
;
√√# $
End
ƒƒ 
(
ƒƒ 
)
ƒƒ 
;
ƒƒ 
if
≈≈ 
(
≈≈ 

m_LineMesh
≈≈ 
!=
≈≈  
null
≈≈! %
)
≈≈% &
meshPool
∆∆ 
.
∆∆ 
Enqueue
∆∆ $
(
∆∆$ %

m_LineMesh
∆∆% /
)
∆∆/ 0
;
∆∆0 1
}
«« 
}
»» 	
internal
   
class
   "
TriangleDrawingScope
   +
:
  , -
IDisposable
  . 9
{
ÀÀ 	
Color
ÃÃ 
m_Color
ÃÃ 
;
ÃÃ 
CompareFunction
ÕÕ 
m_ZTest
ÕÕ #
;
ÕÕ# $
bool
ŒŒ 
m_IsDisposed
ŒŒ 
;
ŒŒ 
public
–– 
Color
–– 
color
–– 
{
—— 
get
““ 
{
““ 
return
““ 
m_Color
““ $
;
““$ %
}
““& '
set
”” 
{
‘‘ 
End
’’ 
(
’’ 
)
’’ 
;
’’ 
m_Color
÷÷ 
=
÷÷ 
value
÷÷ #
;
÷÷# $
Begin
◊◊ 
(
◊◊ 
)
◊◊ 
;
◊◊ 
}
ÿÿ 
}
ŸŸ 
public
€€ 
CompareFunction
€€ "
zTest
€€# (
{
‹‹ 
get
›› 
{
›› 
return
›› 
m_ZTest
›› $
;
››$ %
}
››& '
set
ﬂﬂ 
{
‡‡ 
End
·· 
(
·· 
)
·· 
;
·· 
m_ZTest
‚‚ 
=
‚‚ 
value
‚‚ #
;
‚‚# $
Begin
„„ 
(
„„ 
)
„„ 
;
„„ 
}
‰‰ 
}
ÂÂ 
public
ÁÁ "
TriangleDrawingScope
ÁÁ '
(
ÁÁ' (
Color
ÁÁ( -
color
ÁÁ. 3
,
ÁÁ3 4
CompareFunction
ÁÁ5 D
zTest
ÁÁE J
=
ÁÁK L
CompareFunction
ÁÁM \
.
ÁÁ\ ]
	LessEqual
ÁÁ] f
)
ÁÁf g
{
ËË 
m_Color
ÈÈ 
=
ÈÈ 
color
ÈÈ 
;
ÈÈ  
m_ZTest
ÍÍ 
=
ÍÍ 
zTest
ÍÍ 
;
ÍÍ  
Begin
ÎÎ 
(
ÎÎ 
)
ÎÎ 
;
ÎÎ 
}
ÏÏ 
void
ÓÓ 
Begin
ÓÓ 
(
ÓÓ 
)
ÓÓ 
{
ÔÔ 
faceMaterial
 
.
 
SetColor
 %
(
% &
$str
& .
,
. /
color
0 5
)
5 6
;
6 7
faceMaterial
ÒÒ 
.
ÒÒ 
SetInt
ÒÒ #
(
ÒÒ# $
$str
ÒÒ$ 2
,
ÒÒ2 3
(
ÒÒ4 5
int
ÒÒ5 8
)
ÒÒ8 9
zTest
ÒÒ9 >
)
ÒÒ> ?
;
ÒÒ? @
if
ÛÛ 
(
ÛÛ 
!
ÛÛ 
faceMaterial
ÛÛ !
.
ÛÛ! "
SetPass
ÛÛ" )
(
ÛÛ) *
$num
ÛÛ* +
)
ÛÛ+ ,
)
ÛÛ, -
throw
ÙÙ 
new
ÙÙ 
	Exception
ÙÙ '
(
ÙÙ' (
$str
ÙÙ( L
)
ÙÙL M
;
ÙÙM N
GL
ˆˆ 
.
ˆˆ 

PushMatrix
ˆˆ 
(
ˆˆ 
)
ˆˆ 
;
ˆˆ  
GL
˜˜ 
.
˜˜ 
Begin
˜˜ 
(
˜˜ 
GL
˜˜ 
.
˜˜ 
	TRIANGLES
˜˜ %
)
˜˜% &
;
˜˜& '
}
¯¯ 
void
˙˙ 
End
˙˙ 
(
˙˙ 
)
˙˙ 
{
˚˚ 
GL
¸¸ 
.
¸¸ 
End
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
GL
˝˝ 
.
˝˝ 
	PopMatrix
˝˝ 
(
˝˝ 
)
˝˝ 
;
˝˝ 
}
˛˛ 
public
ÄÄ 
void
ÄÄ 
Dispose
ÄÄ 
(
ÄÄ  
)
ÄÄ  !
{
ÅÅ 
if
ÇÇ 
(
ÇÇ 
m_IsDisposed
ÇÇ  
)
ÇÇ  !
return
ÉÉ 
;
ÉÉ 
m_IsDisposed
ÑÑ 
=
ÑÑ 
true
ÑÑ #
;
ÑÑ# $
End
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 
public
àà 
void
àà 
Draw
àà 
(
àà 
Vector3
àà $
a
àà% &
,
àà& '
Vector3
àà( /
b
àà0 1
,
àà1 2
Vector3
àà3 :
c
àà; <
)
àà< =
{
ââ 
GL
ää 
.
ää 
Vertex
ää 
(
ää 
a
ää 
)
ää 
;
ää 
GL
ãã 
.
ãã 
Vertex
ãã 
(
ãã 
b
ãã 
)
ãã 
;
ãã 
GL
åå 
.
åå 
Vertex
åå 
(
åå 
c
åå 
)
åå 
;
åå 
}
çç 
}
éé 	
}
èè 
}êê ìb
úD:\Dakota\OneDriveOU\School\CS3560\repos\3560-Project-Spring2021\Library\PackageCache\com.unity.probuilder@4.4.0\Editor\MenuActions\Geometry\WeldVertices.cs
	namespace 	
UnityEditor
 
. 

ProBuilder  
.  !
Actions! (
{		 
sealed

 

class

 
WeldVertices

 
:

 

MenuAction

  *
{ 
Pref 
< 
float 
> 
m_WeldDistance "
=# $
new% (
Pref) -
<- .
float. 3
>3 4
(4 5
$str5 P
,P Q
$numR V
)V W
;W X
static 
readonly 

GUIContent "
gc_weldDistance# 2
=3 4
new5 8

GUIContent9 C
(C D
$strD S
,S T
$str	U †
)
† °
;
° ¢
const 
float 
k_MinWeldDistance %
=& '
$num( /
;/ 0
public 
override 
ToolbarGroup $
group% *
{ 	
get 
{ 
return 
ToolbarGroup %
.% &
Geometry& .
;. /
}0 1
} 	
public 
override 
	Texture2D !
icon" &
{ 	
get 
{ 
return 
IconUtility $
.$ %
GetIcon% ,
(, -
$str- @
,@ A
IconSkinB J
.J K
ProK N
)N O
;O P
}Q R
} 	
public 
override 
TooltipContent &
tooltip' .
{ 	
get 
{ 
return 
	s_Tooltip "
;" #
}$ %
} 	
static 
readonly 
TooltipContent &
	s_Tooltip' 0
=1 2
new3 6
TooltipContent7 E
(   
$str!! 
,!!  
$str	"" ô
,
""ô ö
keyCommandAlt## 
,## 
$char## "
)$$ 
;$$ 
public&& 
override&& 

SelectMode&& "
validSelectModes&&# 3
{'' 	
get(( 
{(( 
return(( 

SelectMode(( #
.((# $
Vertex(($ *
;((* +
}((, -
})) 	
public++ 
override++ 
bool++ 
enabled++ $
{,, 	
get-- 
{-- 
return-- 
base-- 
.-- 
enabled-- %
&&--& (
MeshSelection--) 6
.--6 7.
"selectedSharedVertexCountObjectMax--7 Y
>--Z [
$num--\ ]
;--] ^
}--_ `
}.. 	
	protected00 
override00 
MenuActionState00 *
optionsMenuState00+ ;
{11 	
get22 
{22 
return22 
MenuActionState22 (
.22( )
VisibleAndEnabled22) :
;22: ;
}22< =
}33 	
	protected55 
override55 
void55 
OnSettingsGUI55  -
(55- .
)55. /
{66 	
	GUILayout77 
.77 
Label77 
(77 
$str77 +
,77+ ,
EditorStyles77- 9
.779 :
	boldLabel77: C
)77C D
;77D E
	EditorGUI99 
.99 
BeginChangeCheck99 &
(99& '
)99' (
;99( )
m_WeldDistance;; 
.;; 
value;;  
=;;! "
EditorGUILayout;;# 2
.;;2 3

FloatField;;3 =
(;;= >
gc_weldDistance;;> M
,;;M N
m_WeldDistance;;O ]
);;] ^
;;;^ _
if== 
(== 
	EditorGUI== 
.== 
EndChangeCheck== (
(==( )
)==) *
)==* +
{>> 
if?? 
(?? 
m_WeldDistance?? "
<??# $
k_MinWeldDistance??% 6
)??6 7
m_WeldDistance@@ "
.@@" #
value@@# (
=@@) *
k_MinWeldDistance@@+ <
;@@< =
ProBuilderSettingsAA "
.AA" #
SaveAA# '
(AA' (
)AA( )
;AA) *
}BB 
	GUILayoutDD 
.DD 
FlexibleSpaceDD #
(DD# $
)DD$ %
;DD% &
ifFF 
(FF 
	GUILayoutFF 
.FF 
ButtonFF  
(FF  !
$strFF! 0
)FF0 1
)FF1 2
DoActionGG 
(GG 
)GG 
;GG 
}HH 	
publicJJ 
overrideJJ 
ActionResultJJ $
DoActionJJ% -
(JJ- .
)JJ. /
{KK 	
ifLL 
(LL 
MeshSelectionLL 
.LL 
selectedObjectCountLL 1
<LL2 3
$numLL4 5
)LL5 6
returnMM 
ActionResultMM #
.MM# $
NoSelectionMM$ /
;MM/ 0
ActionResultOO 
resOO 
=OO 
ActionResultOO +
.OO+ ,
NoSelectionOO, 7
;OO7 8
UndoUtilityQQ 
.QQ 
RecordSelectionQQ '
(QQ' (
$strQQ( 7
)QQ7 8
;QQ8 9
intSS 
	weldCountSS 
=SS 
$numSS 
;SS 
foreachUU 
(UU 
ProBuilderMeshUU #
meshUU$ (
inUU) +
MeshSelectionUU, 9
.UU9 :
topInternalUU: E
)UUE F
{VV 
	weldCountWW 
+=WW 
meshWW !
.WW! ""
sharedVerticesInternalWW" 8
.WW8 9
LengthWW9 ?
;WW? @
ifYY 
(YY 
meshYY 
.YY #
selectedIndexesInternalYY 0
.YY0 1
LengthYY1 7
>YY8 9
$numYY: ;
)YY; <
{ZZ 
mesh[[ 
.[[ 
ToMesh[[ 
([[  
)[[  !
;[[! "
var]] 
selectedVertices]] (
=]]* +
mesh]], 0
.]]0 1!
GetCoincidentVertices]]1 F
(]]F G
mesh]]G K
.]]K L
selectedVertices]]L \
)]]\ ]
;]]] ^
int^^ 
[^^ 
]^^ 
welds^^ 
=^^  !
mesh^^" &
.^^& '
WeldVertices^^' 3
(^^3 4
mesh^^4 8
.^^8 9#
selectedIndexesInternal^^9 P
,^^P Q
m_WeldDistance^^R `
)^^` a
;^^a b
res__ 
=__ 
welds__ 
!=__  "
null__# '
?__( )
new__* -
ActionResult__. :
(__: ;
ActionResult__; G
.__G H
Status__H N
.__N O
Success__O V
,__V W
$str__X g
)__g h
:__i j
new__k n
ActionResult__o {
(__{ |
ActionResult	__| à
.
__à â
Status
__â è
.
__è ê
Failure
__ê ó
,
__ó ò
$str
__ô Ø
)
__Ø ∞
;
__∞ ±
ifaa 
(aa 
resaa 
)aa 
{bb 
varcc 
newSelectioncc (
=cc) *
weldscc+ 0
??cc1 3
newcc4 7
intcc8 ;
[cc; <
$numcc< =
]cc= >
{cc? @
}ccA B
;ccB C
ifee 
(ee 
MeshValidationee *
.ee* +'
ContainsDegenerateTrianglesee+ F
(eeF G
mesheeG K
)eeK L
)eeL M
{ff 
Listgg  
<gg  !
intgg! $
>gg$ %
removedIndicesgg& 4
=gg5 6
newgg7 :
Listgg; ?
<gg? @
intgg@ C
>ggC D
(ggD E
)ggE F
;ggF G
varhh 
vertexCounthh  +
=hh, -
meshhh. 2
.hh2 3
vertexCounthh3 >
;hh> ?
ifjj 
(jj 
MeshValidationjj -
.jj- .%
RemoveDegenerateTrianglesjj. G
(jjG H
meshjjH L
,jjL M
removedIndicesjjN \
)jj\ ]
)jj] ^
{kk 
ifll  "
(ll# $
removedIndicesll$ 2
.ll2 3
Countll3 8
<ll9 :
vertexCountll; F
)llF G
{mm  !
varnn$ '!
newlySelectedVerticesnn( =
=nn> ?
newnn@ C
ListnnD H
<nnH I
intnnI L
>nnL M
(nnM N
)nnN O
;nnO P
selectedVerticesoo$ 4
.oo4 5
Sortoo5 9
(oo9 :
)oo: ;
;oo; <
removedIndicespp$ 2
.pp2 3
Sortpp3 7
(pp7 8
)pp8 9
;pp9 :
intrr$ '
countrr( -
=rr. /
$numrr0 1
;rr1 2
fortt$ '
(tt( )
inttt) ,
itt- .
=tt/ 0
$numtt1 2
;tt2 3
itt4 5
<tt6 7
selectedVerticestt8 H
.ttH I
CountttI N
;ttN O
ittP Q
++ttQ S
)ttS T
{uu$ %
ifvv( *
(vv+ ,
countvv, 1
>=vv2 4
removedIndicesvv5 C
.vvC D
CountvvD I
||vvJ L
selectedVerticesvvM ]
[vv] ^
ivv^ _
]vv_ `
!=vva c
removedIndicesvvd r
[vvr s
countvvs x
]vvx y
)vvy z
{ww( )!
newlySelectedVerticesxx, A
.xxA B
AddxxB E
(xxE F
selectedVerticesxxF V
[xxV W
ixxW X
]xxX Y
-xxZ [
UnityEnginexx\ g
.xxg h

ProBuilderxxh r
.xxr s
ArrayUtilityxxs 
.	xx Ä&
NearestIndexPriorToValue
xxÄ ò
(
xxò ô
removedIndices
xxô ß
,
xxß ®
selectedVertices
xx© π
[
xxπ ∫
i
xx∫ ª
]
xxª º
)
xxº Ω
-
xxæ ø
$num
xx¿ ¡
)
xx¡ ¬
;
xx¬ √
}yy( )
elsezz( ,
{{{( )
++||, .
count||. 3
;||3 4
}}}( )
}~~$ %
newSelection
ÄÄ$ 0
=
ÄÄ1 2#
newlySelectedVertices
ÄÄ3 H
.
ÄÄH I
ToArray
ÄÄI P
(
ÄÄP Q
)
ÄÄQ R
;
ÄÄR S
}
ÅÅ  !
else
ÇÇ  $
{
ÉÉ  !
newSelection
ÑÑ$ 0
=
ÑÑ1 2
new
ÑÑ3 6
int
ÑÑ7 :
[
ÑÑ: ;
$num
ÑÑ; <
]
ÑÑ< =
;
ÑÑ= >
}
ÖÖ  !
}
ÜÜ 
mesh
áá  
.
áá  !
ToMesh
áá! '
(
áá' (
)
áá( )
;
áá) *
}
àà 
mesh
ââ 
.
ââ !
SetSelectedVertices
ââ 0
(
ââ0 1
newSelection
ââ1 =
)
ââ= >
;
ââ> ?
}
ää 
mesh
åå 
.
åå 
Refresh
åå  
(
åå  !
)
åå! "
;
åå" #
mesh
çç 
.
çç 
Optimize
çç !
(
çç! "
)
çç" #
;
çç# $
}
éé 
	weldCount
êê 
-=
êê 
mesh
êê !
.
êê! "$
sharedVerticesInternal
êê" 8
.
êê8 9
Length
êê9 ?
;
êê? @
}
ëë 
ProBuilderEditor
ìì 
.
ìì 
Refresh
ìì $
(
ìì$ %
)
ìì% &
;
ìì& '
if
ïï 
(
ïï 
res
ïï 
&&
ïï 
	weldCount
ïï  
>
ïï! "
$num
ïï# $
)
ïï$ %
return
ññ 
new
ññ 
ActionResult
ññ '
(
ññ' (
ActionResult
ññ( 4
.
ññ4 5
Status
ññ5 ;
.
ññ; <
Success
ññ< C
,
ññC D
$str
ññE L
+
ññM N
	weldCount
ññO X
+
ññY Z
(
ññ[ \
	weldCount
ññ\ e
>
ññf g
$num
ññh i
?
ññj k
$str
ññl w
:
ññx y
$strññz É
)ññÉ Ñ
)ññÑ Ö
;ññÖ Ü
return
òò 
new
òò 
ActionResult
òò #
(
òò# $
ActionResult
òò$ 0
.
òò0 1
Status
òò1 7
.
òò7 8
Failure
òò8 ?
,
òò? @
$str
òòA R
)
òòR S
;
òòS T
}
ôô 	
}
öö 
}õõ 